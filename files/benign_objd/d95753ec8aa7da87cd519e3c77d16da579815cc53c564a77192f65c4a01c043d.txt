
d95753ec8aa7da87cd519e3c77d16da579815cc53c564a77192f65c4a01c043d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x71b9]        # 0x1400081c0
   140001007:	jmp    0x140007748
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x71d9]        # 0x1400081f0
   140001017:	jmp    0x140007748
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	int3   
   140001021:	int3   
   140001022:	int3   
   140001023:	int3   
   140001024:	int3   
   140001025:	int3   
   140001026:	int3   
   140001027:	int3   
   140001028:	mov    QWORD PTR [rsp+0x18],r8
   14000102d:	mov    QWORD PTR [rsp+0x20],r9
   140001032:	push   rbx
   140001033:	push   rbp
   140001034:	push   rsi
   140001035:	push   rdi
   140001036:	sub    rsp,0x28
   14000103a:	xor    ebp,ebp
   14000103c:	lea    rax,[rdx-0x1]
   140001040:	cmp    rax,0x7ffffffe
   140001046:	mov    rsi,rcx
   140001049:	mov    edi,ebp
   14000104b:	mov    ecx,0x80070057
   140001050:	cmova  edi,ecx
   140001053:	test   edi,edi
   140001055:	js     0x14000108c
   140001057:	lea    rbx,[rdx-0x1]
   14000105b:	mov    rcx,rsi
   14000105e:	mov    rdx,rbx
   140001061:	lea    r9,[rsp+0x68]
   140001066:	mov    edi,ebp
   140001068:	call   QWORD PTR [rip+0x838a]        # 0x1400093f8
   14000106e:	test   eax,eax
   140001070:	js     0x140001081
   140001072:	cdqe   
   140001074:	cmp    rax,rbx
   140001077:	ja     0x140001081
   140001079:	jne    0x140001094
   14000107b:	mov    WORD PTR [rsi+rbx*2],bp
   14000107f:	jmp    0x140001094
   140001081:	mov    WORD PTR [rsi+rbx*2],bp
   140001085:	mov    edi,0x8007007a
   14000108a:	jmp    0x140001094
   14000108c:	test   rdx,rdx
   14000108f:	je     0x140001094
   140001091:	mov    WORD PTR [rsi],bp
   140001094:	mov    eax,edi
   140001096:	add    rsp,0x28
   14000109a:	pop    rdi
   14000109b:	pop    rsi
   14000109c:	pop    rbp
   14000109d:	pop    rbx
   14000109e:	ret    
   14000109f:	int3   
   1400010a0:	int3   
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	rex push rbx
   1400010aa:	sub    rsp,0x20
   1400010ae:	mov    rbx,rcx
   1400010b1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400010b5:	test   rcx,rcx
   1400010b8:	je     0x1400010c5
   1400010ba:	call   QWORD PTR [rip+0x80d0]        # 0x140009190
   1400010c0:	and    QWORD PTR [rbx+0x8],0x0
   1400010c5:	add    rsp,0x20
   1400010c9:	pop    rbx
   1400010ca:	ret    
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	int3   
   1400010d1:	int3   
   1400010d2:	int3   
   1400010d3:	int3   
   1400010d4:	rex push rbx
   1400010d6:	sub    rsp,0x20
   1400010da:	lea    rax,[rip+0x8e1f]        # 0x140009f00
   1400010e1:	mov    rbx,rcx
   1400010e4:	mov    QWORD PTR [rcx],rax
   1400010e7:	mov    rcx,QWORD PTR [rcx+0x158]
   1400010ee:	test   rcx,rcx
   1400010f1:	je     0x1400010f9
   1400010f3:	call   QWORD PTR [rip+0x8097]        # 0x140009190
   1400010f9:	and    QWORD PTR [rbx+0x168],0x0
   140001101:	mov    rcx,rbx
   140001104:	add    rsp,0x20
   140001108:	pop    rbx
   140001109:	jmp    0x140002c78
   14000110e:	int3   
   14000110f:	int3   
   140001110:	int3   
   140001111:	int3   
   140001112:	int3   
   140001113:	int3   
   140001114:	int3   
   140001115:	int3   
   140001116:	int3   
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    QWORD PTR [rsp+0x8],rbx
   140001125:	push   rdi
   140001126:	sub    rsp,0x20
   14000112a:	lea    rax,[rip+0x8dcf]        # 0x140009f00
   140001131:	mov    rbx,rcx
   140001134:	mov    QWORD PTR [rcx],rax
   140001137:	mov    edi,edx
   140001139:	mov    rcx,QWORD PTR [rcx+0x158]
   140001140:	test   rcx,rcx
   140001143:	je     0x14000114b
   140001145:	call   QWORD PTR [rip+0x8045]        # 0x140009190
   14000114b:	and    QWORD PTR [rbx+0x168],0x0
   140001153:	mov    rcx,rbx
   140001156:	call   0x140002c78
   14000115b:	test   dil,0x1
   14000115f:	je     0x14000116c
   140001161:	xor    edx,edx
   140001163:	mov    rcx,rbx
   140001166:	call   QWORD PTR [rip+0x7eb4]        # 0x140009020
   14000116c:	mov    rax,rbx
   14000116f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001174:	add    rsp,0x20
   140001178:	pop    rdi
   140001179:	ret    
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	sub    rsp,0x38
   140001184:	and    QWORD PTR [rsp+0x20],0x0
   14000118a:	lea    r8,[rip+0x8d7f]        # 0x140009f10
   140001191:	movzx  r9d,dx
   140001195:	mov    edx,0x2b
   14000119a:	call   QWORD PTR [rip+0x8198]        # 0x140009338
   1400011a0:	add    rsp,0x38
   1400011a4:	ret    
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	mov    r11,rsp
   1400011af:	mov    DWORD PTR [r11+0x20],r9d
   1400011b3:	sub    rsp,0x48
   1400011b7:	and    QWORD PTR [r11-0x18],0x0
   1400011bc:	lea    rax,[r11+0x20]
   1400011c0:	movzx  r9d,dx
   1400011c4:	lea    r8,[rip+0x8d45]        # 0x140009f10
   1400011cb:	mov    QWORD PTR [r11-0x20],0x4
   1400011d3:	mov    edx,0x2b
   1400011d8:	mov    QWORD PTR [r11-0x28],rax
   1400011dc:	call   QWORD PTR [rip+0x8156]        # 0x140009338
   1400011e2:	add    rsp,0x48
   1400011e6:	ret    
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    r11,rsp
   1400011f3:	mov    DWORD PTR [r11+0x20],r9d
   1400011f7:	sub    rsp,0x68
   1400011fb:	and    QWORD PTR [r11-0x28],0x0
   140001200:	mov    r8d,0x4
   140001206:	mov    eax,DWORD PTR [rip+0xbcb0]        # 0x14000cebc
   14000120c:	mov    QWORD PTR [r11-0x30],r8
   140001210:	mov    DWORD PTR [rsp+0x50],eax
   140001214:	lea    rax,[r11-0x18]
   140001218:	mov    QWORD PTR [r11-0x38],rax
   14000121c:	lea    rax,[r11+0x20]
   140001220:	mov    QWORD PTR [r11-0x40],r8
   140001224:	lea    r8,[rip+0x8ce5]        # 0x140009f10
   14000122b:	movzx  r9d,dx
   14000122f:	mov    edx,0x2b
   140001234:	mov    QWORD PTR [r11-0x48],rax
   140001238:	call   QWORD PTR [rip+0x80fa]        # 0x140009338
   14000123e:	add    rsp,0x68
   140001242:	ret    
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	mov    r11,rsp
   14000124f:	mov    DWORD PTR [r11+0x20],r9d
   140001253:	sub    rsp,0x68
   140001257:	and    QWORD PTR [r11-0x18],0x0
   14000125c:	lea    rax,[r11+0x30]
   140001260:	mov    r8d,0x26
   140001266:	movzx  r9d,r8w
   14000126a:	lea    edx,[r8-0x22]
   14000126e:	mov    QWORD PTR [r11-0x20],rdx
   140001272:	lea    r8,[rip+0x8c97]        # 0x140009f10
   140001279:	mov    QWORD PTR [r11-0x28],rax
   14000127d:	lea    rax,[r11+0x28]
   140001281:	mov    QWORD PTR [r11-0x30],rdx
   140001285:	mov    QWORD PTR [r11-0x38],rax
   140001289:	lea    rax,[r11+0x20]
   14000128d:	mov    QWORD PTR [r11-0x40],rdx
   140001291:	mov    edx,0x2b
   140001296:	mov    QWORD PTR [r11-0x48],rax
   14000129a:	call   QWORD PTR [rip+0x8098]        # 0x140009338
   1400012a0:	add    rsp,0x68
   1400012a4:	ret    
   1400012a5:	int3   
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	mov    DWORD PTR [rsp+0x20],r9d
   1400012b1:	sub    rsp,0x78
   1400012b5:	mov    r8,QWORD PTR [rsp+0xa0]
   1400012bd:	mov    eax,DWORD PTR [rip+0xbbf9]        # 0x14000cebc
   1400012c3:	mov    DWORD PTR [rsp+0x60],eax
   1400012c7:	test   r8,r8
   1400012ca:	je     0x1400012df
   1400012cc:	or     rdx,0xffffffffffffffff
   1400012d0:	inc    rdx
   1400012d3:	cmp    BYTE PTR [r8+rdx*1],0x0
   1400012d8:	jne    0x1400012d0
   1400012da:	inc    rdx
   1400012dd:	jmp    0x1400012e4
   1400012df:	mov    edx,0x5
   1400012e4:	mov    r10d,0x59
   1400012ea:	lea    rax,[rip+0x8367]        # 0x140009658
   1400012f1:	test   r8,r8
   1400012f4:	cmovne rax,r8
   1400012f8:	and    QWORD PTR [rsp+0x50],0x0
   1400012fe:	lea    r9d,[r10-0x55]
   140001302:	mov    QWORD PTR [rsp+0x48],r9
   140001307:	lea    r8,[rsp+0x60]
   14000130c:	mov    QWORD PTR [rsp+0x40],r8
   140001311:	lea    r8,[rip+0x8bf8]        # 0x140009f10
   140001318:	mov    QWORD PTR [rsp+0x38],rdx
   14000131d:	lea    edx,[r10-0x2e]
   140001321:	mov    QWORD PTR [rsp+0x30],rax
   140001326:	lea    rax,[rsp+0x98]
   14000132e:	mov    QWORD PTR [rsp+0x28],r9
   140001333:	movzx  r9d,r10w
   140001337:	mov    QWORD PTR [rsp+0x20],rax
   14000133c:	call   QWORD PTR [rip+0x7ff6]        # 0x140009338
   140001342:	add    rsp,0x78
   140001346:	ret    
   140001347:	int3   
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	mov    QWORD PTR [rsp+0x8],rbx
   140001355:	mov    QWORD PTR [rsp+0x10],rsi
   14000135a:	push   rdi
   14000135b:	sub    rsp,0x20
   14000135f:	and    DWORD PTR [r8],0x0
   140001363:	mov    rbx,rdx
   140001366:	sub    ecx,0x4
   140001369:	je     0x140001380
   14000136b:	cmp    ecx,0x1
   14000136e:	je     0x140001377
   140001370:	mov    eax,0x57
   140001375:	jmp    0x1400013bf
   140001377:	xor    edi,edi
   140001379:	xor    eax,eax
   14000137b:	xor    sil,sil
   14000137e:	jmp    0x1400013a1
   140001380:	mov    rcx,r9
   140001383:	call   QWORD PTR [rip+0x7fbf]        # 0x140009348
   140001389:	mov    rcx,rax
   14000138c:	mov    rdi,rax
   14000138f:	call   QWORD PTR [rip+0x7f8b]        # 0x140009320
   140001395:	mov    rcx,rdi
   140001398:	mov    sil,al
   14000139b:	call   QWORD PTR [rip+0x7f87]        # 0x140009328
   1400013a1:	test   BYTE PTR [rbx+0x1a],0x2
   1400013a5:	je     0x1400013b2
   1400013a7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400013ab:	test   rcx,rcx
   1400013ae:	cmovne rbx,rcx
   1400013b2:	mov    QWORD PTR [rbx+0x10],rdi
   1400013b6:	mov    BYTE PTR [rbx+0x19],sil
   1400013ba:	mov    DWORD PTR [rbx+0x1c],eax
   1400013bd:	xor    eax,eax
   1400013bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013c9:	add    rsp,0x20
   1400013cd:	pop    rdi
   1400013ce:	ret    
   1400013cf:	int3   
   1400013d0:	int3   
   1400013d1:	int3   
   1400013d2:	int3   
   1400013d3:	int3   
   1400013d4:	int3   
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	mov    eax,DWORD PTR [rcx]
   1400013e2:	ret    
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	rex.W jmp QWORD PTR [rip+0x7c91]        # 0x140009088
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    rax,rsp
   140001403:	mov    QWORD PTR [rax+0x8],rbx
   140001407:	mov    QWORD PTR [rax+0x10],rbp
   14000140b:	mov    QWORD PTR [rax+0x18],rsi
   14000140f:	mov    QWORD PTR [rax+0x20],rdi
   140001413:	push   r12
   140001415:	mov    r11,QWORD PTR [rsp+0x30]
   14000141a:	xor    ebp,ebp
   14000141c:	mov    DWORD PTR [r9],0x1
   140001423:	mov    r10,rcx
   140001426:	mov    rbx,r9
   140001429:	mov    cl,bpl
   14000142c:	mov    DWORD PTR [r11],ebp
   14000142f:	test   rdx,rdx
   140001432:	je     0x14000143b
   140001434:	mov    QWORD PTR [rdx],r8
   140001437:	add    rdx,0x8
   14000143b:	movzx  eax,WORD PTR [r10]
   14000143f:	cmp    ax,0x22
   140001443:	jne    0x14000144a
   140001445:	test   cl,cl
   140001447:	sete   cl
   14000144a:	inc    DWORD PTR [r11]
   14000144d:	mov    esi,DWORD PTR [r11]
   140001450:	test   r8,r8
   140001453:	je     0x14000145d
   140001455:	mov    WORD PTR [r8],ax
   140001459:	add    r8,0x2
   14000145d:	movzx  eax,WORD PTR [r10]
   140001461:	add    r10,0x2
   140001465:	test   ax,ax
   140001468:	je     0x140001486
   14000146a:	test   cl,cl
   14000146c:	jne    0x14000143b
   14000146e:	cmp    ax,0x20
   140001472:	je     0x14000147a
   140001474:	cmp    ax,0x9
   140001478:	jne    0x14000143b
   14000147a:	test   r8,r8
   14000147d:	je     0x14000148a
   14000147f:	mov    WORD PTR [r8-0x2],bp
   140001484:	jmp    0x14000148a
   140001486:	sub    r10,0x2
   14000148a:	movabs r12,0x100000201
   140001494:	mov    dil,bpl
   140001497:	cmp    WORD PTR [r10],bp
   14000149b:	je     0x140001586
   1400014a1:	cmp    WORD PTR [r10],0x20
   1400014a6:	je     0x1400014af
   1400014a8:	cmp    WORD PTR [r10],0x9
   1400014ad:	jne    0x1400014b5
   1400014af:	add    r10,0x2
   1400014b3:	jmp    0x1400014a1
   1400014b5:	cmp    WORD PTR [r10],bp
   1400014b9:	je     0x140001586
   1400014bf:	test   rdx,rdx
   1400014c2:	je     0x1400014cb
   1400014c4:	mov    QWORD PTR [rdx],r8
   1400014c7:	add    rdx,0x8
   1400014cb:	inc    DWORD PTR [rbx]
   1400014cd:	mov    r9d,ebp
   1400014d0:	movzx  ecx,WORD PTR [r10]
   1400014d4:	cmp    cx,0x22
   1400014d8:	jne    0x1400014e0
   1400014da:	mov    dil,0x1
   1400014dd:	inc    r9d
   1400014e0:	mov    eax,r9d
   1400014e3:	and    eax,0x80000001
   1400014e8:	jge    0x1400014f1
   1400014ea:	dec    eax
   1400014ec:	or     eax,0xfffffffe
   1400014ef:	inc    eax
   1400014f1:	test   eax,eax
   1400014f3:	jne    0x14000153c
   1400014f5:	test   dil,dil
   1400014f8:	je     0x14000153c
   1400014fa:	cmp    cx,0x20
   1400014fe:	ja     0x140001509
   140001500:	movzx  eax,cx
   140001503:	bt     r12,rax
   140001507:	jb     0x14000156e
   140001509:	test   r8,r8
   14000150c:	je     0x140001516
   14000150e:	mov    WORD PTR [r8],cx
   140001512:	add    r8,0x2
   140001516:	add    r10,0x2
   14000151a:	lea    eax,[rsi+0x1]
   14000151d:	mov    DWORD PTR [r11],eax
   140001520:	movzx  ecx,WORD PTR [r10]
   140001524:	cmp    cx,0x20
   140001528:	ja     0x140001533
   14000152a:	movzx  eax,cx
   14000152d:	bt     r12,rax
   140001531:	jb     0x14000156e
   140001533:	cmp    cx,0x22
   140001537:	jne    0x14000153c
   140001539:	inc    r9d
   14000153c:	test   cx,cx
   14000153f:	je     0x14000156e
   140001541:	test   dil,dil
   140001544:	jne    0x140001552
   140001546:	cmp    cx,0x20
   14000154a:	je     0x14000156e
   14000154c:	cmp    cx,0x9
   140001550:	je     0x14000156e
   140001552:	test   r8,r8
   140001555:	je     0x14000155f
   140001557:	mov    WORD PTR [r8],cx
   14000155b:	add    r8,0x2
   14000155f:	inc    DWORD PTR [r11]
   140001562:	mov    esi,DWORD PTR [r11]
   140001565:	add    r10,0x2
   140001569:	jmp    0x1400014d0
   14000156e:	test   r8,r8
   140001571:	je     0x14000157b
   140001573:	mov    WORD PTR [r8],bp
   140001577:	add    r8,0x2
   14000157b:	inc    DWORD PTR [r11]
   14000157e:	mov    esi,DWORD PTR [r11]
   140001581:	jmp    0x140001494
   140001586:	test   rdx,rdx
   140001589:	je     0x14000158e
   14000158b:	mov    QWORD PTR [rdx],rbp
   14000158e:	inc    DWORD PTR [rbx]
   140001590:	mov    rbx,QWORD PTR [rsp+0x10]
   140001595:	mov    rbp,QWORD PTR [rsp+0x18]
   14000159a:	mov    rsi,QWORD PTR [rsp+0x20]
   14000159f:	mov    rdi,QWORD PTR [rsp+0x28]
   1400015a4:	pop    r12
   1400015a6:	ret    
   1400015a7:	int3   
   1400015a8:	int3   
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015ba:	push   rdi
   1400015bb:	push   r14
   1400015bd:	push   r15
   1400015bf:	sub    rsp,0x30
   1400015c3:	mov    r14,rdx
   1400015c6:	mov    r15,rcx
   1400015c9:	call   QWORD PTR [rip+0x7c51]        # 0x140009220
   1400015cf:	and    DWORD PTR [rsp+0x60],0x0
   1400015d4:	lea    r9,[rsp+0x60]
   1400015d9:	and    DWORD PTR [rsp+0x68],0x0
   1400015de:	mov    rdi,rax
   1400015e1:	lea    rax,[rsp+0x68]
   1400015e6:	mov    rcx,rdi
   1400015e9:	xor    r8d,r8d
   1400015ec:	mov    QWORD PTR [rsp+0x20],rax
   1400015f1:	xor    edx,edx
   1400015f3:	call   0x140001400
   1400015f8:	movsxd rcx,DWORD PTR [rsp+0x68]
   1400015fd:	movsxd rsi,DWORD PTR [rsp+0x60]
   140001602:	lea    rcx,[rcx+rsi*4]
   140001606:	add    rcx,rcx
   140001609:	call   QWORD PTR [rip+0x7df1]        # 0x140009400
   14000160f:	mov    rbx,rax
   140001612:	test   rax,rax
   140001615:	jne    0x14000161c
   140001617:	lea    eax,[rbx+0xe]
   14000161a:	jmp    0x140001648
   14000161c:	lea    r8,[rax+rsi*8]
   140001620:	mov    rdx,rbx
   140001623:	lea    rax,[rsp+0x68]
   140001628:	mov    rcx,rdi
   14000162b:	lea    r9,[rsp+0x60]
   140001630:	mov    QWORD PTR [rsp+0x20],rax
   140001635:	call   0x140001400
   14000163a:	mov    eax,DWORD PTR [rsp+0x60]
   14000163e:	dec    eax
   140001640:	mov    QWORD PTR [r14],rbx
   140001643:	mov    DWORD PTR [r15],eax
   140001646:	xor    eax,eax
   140001648:	mov    rbx,QWORD PTR [rsp+0x50]
   14000164d:	mov    rsi,QWORD PTR [rsp+0x58]
   140001652:	add    rsp,0x30
   140001656:	pop    r15
   140001658:	pop    r14
   14000165a:	pop    rdi
   14000165b:	ret    
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	int3   
   140001661:	int3   
   140001662:	int3   
   140001663:	int3   
   140001664:	mov    QWORD PTR [rsp+0x8],rbx
   140001669:	mov    QWORD PTR [rsp+0x10],rbp
   14000166e:	mov    QWORD PTR [rsp+0x20],rsi
   140001673:	push   rdi
   140001674:	push   r12
   140001676:	push   r13
   140001678:	push   r14
   14000167a:	push   r15
   14000167c:	sub    rsp,0x40
   140001680:	or     rdi,0xffffffffffffffff
   140001684:	mov    esi,r8d
   140001687:	or     r14d,0xffffffff
   14000168b:	xor    ebx,ebx
   14000168d:	mov    rbp,rdx
   140001690:	mov    r12,rcx
   140001693:	cmp    r8d,r14d
   140001696:	jne    0x1400016b0
   140001698:	mov    rax,rdi
   14000169b:	inc    rax
   14000169e:	cmp    WORD PTR [rdx+rax*2],bx
   1400016a2:	jne    0x14000169b
   1400016a4:	test   rax,rax
   1400016a7:	jne    0x1400016b5
   1400016a9:	xor    eax,eax
   1400016ab:	jmp    0x1400017df
   1400016b0:	test   r8d,r8d
   1400016b3:	jmp    0x1400016a7
   1400016b5:	mov    DWORD PTR [rsp+0x80],ebx
   1400016bc:	call   QWORD PTR [rip+0x7abe]        # 0x140009180
   1400016c2:	cmp    eax,0x2
   1400016c5:	jne    0x1400016fc
   1400016c7:	cmp    esi,r14d
   1400016ca:	jne    0x1400016d8
   1400016cc:	inc    rdi
   1400016cf:	cmp    WORD PTR [rbp+rdi*2+0x0],bx
   1400016d4:	jne    0x1400016cc
   1400016d6:	jmp    0x1400016db
   1400016d8:	mov    rdi,rsi
   1400016db:	lea    r9,[rsp+0x80]
   1400016e3:	mov    QWORD PTR [rsp+0x20],rbx
   1400016e8:	mov    r8d,edi
   1400016eb:	mov    rdx,rbp
   1400016ee:	mov    rcx,r12
   1400016f1:	call   QWORD PTR [rip+0x7a01]        # 0x1400090f8
   1400016f7:	jmp    0x1400017df
   1400016fc:	call   QWORD PTR [rip+0x79fe]        # 0x140009100
   140001702:	mov    r13d,eax
   140001705:	cmp    esi,r14d
   140001708:	jne    0x140001719
   14000170a:	mov    rcx,rdi
   14000170d:	inc    rcx
   140001710:	cmp    WORD PTR [rbp+rcx*2+0x0],bx
   140001715:	jne    0x14000170d
   140001717:	jmp    0x14000171c
   140001719:	mov    rcx,rsi
   14000171c:	mov    QWORD PTR [rsp+0x38],rbx
   140001721:	mov    r9d,ecx
   140001724:	mov    QWORD PTR [rsp+0x30],rbx
   140001729:	mov    r8,rbp
   14000172c:	mov    DWORD PTR [rsp+0x28],ebx
   140001730:	xor    edx,edx
   140001732:	mov    ecx,eax
   140001734:	mov    QWORD PTR [rsp+0x20],rbx
   140001739:	call   QWORD PTR [rip+0x7b69]        # 0x1400092a8
   14000173f:	movsxd r15,eax
   140001742:	call   QWORD PTR [rip+0x7a08]        # 0x140009150
   140001748:	test   r15d,r15d
   14000174b:	je     0x1400017df
   140001751:	mov    rcx,r15
   140001754:	xor    r8d,r8d
   140001757:	xor    edx,edx
   140001759:	call   QWORD PTR [rip+0x78a1]        # 0x140009000
   14000175f:	mov    r14,rax
   140001762:	test   rax,rax
   140001765:	jne    0x14000176d
   140001767:	lea    eax,[r14+0xe]
   14000176b:	jmp    0x1400017df
   14000176d:	cmp    esi,0xffffffff
   140001770:	jne    0x14000177e
   140001772:	inc    rdi
   140001775:	cmp    WORD PTR [rbp+rdi*2+0x0],bx
   14000177a:	jne    0x140001772
   14000177c:	jmp    0x140001781
   14000177e:	mov    rdi,rsi
   140001781:	mov    QWORD PTR [rsp+0x38],rbx
   140001786:	mov    r9d,edi
   140001789:	mov    QWORD PTR [rsp+0x30],rbx
   14000178e:	mov    r8,rbp
   140001791:	mov    DWORD PTR [rsp+0x28],r15d
   140001796:	xor    edx,edx
   140001798:	mov    ecx,r13d
   14000179b:	mov    QWORD PTR [rsp+0x20],rax
   1400017a0:	call   QWORD PTR [rip+0x7b02]        # 0x1400092a8
   1400017a6:	mov    esi,eax
   1400017a8:	call   QWORD PTR [rip+0x79a2]        # 0x140009150
   1400017ae:	mov    edi,eax
   1400017b0:	test   esi,esi
   1400017b2:	je     0x1400017d2
   1400017b4:	lea    r9,[rsp+0x80]
   1400017bc:	mov    QWORD PTR [rsp+0x20],rbx
   1400017c1:	mov    r8d,esi
   1400017c4:	mov    rdx,r14
   1400017c7:	mov    rcx,r12
   1400017ca:	call   QWORD PTR [rip+0x79a0]        # 0x140009170
   1400017d0:	mov    edi,eax
   1400017d2:	xor    edx,edx
   1400017d4:	mov    rcx,r14
   1400017d7:	call   QWORD PTR [rip+0x7843]        # 0x140009020
   1400017dd:	mov    eax,edi
   1400017df:	lea    r11,[rsp+0x40]
   1400017e4:	mov    rbx,QWORD PTR [r11+0x30]
   1400017e8:	mov    rbp,QWORD PTR [r11+0x38]
   1400017ec:	mov    rsi,QWORD PTR [r11+0x48]
   1400017f0:	mov    rsp,r11
   1400017f3:	pop    r15
   1400017f5:	pop    r14
   1400017f7:	pop    r13
   1400017f9:	pop    r12
   1400017fb:	pop    rdi
   1400017fc:	ret    
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	int3   
   140001801:	int3   
   140001802:	int3   
   140001803:	int3   
   140001804:	rex push rbx
   140001806:	sub    rsp,0x20
   14000180a:	mov    rbx,rcx
   14000180d:	mov    ecx,0xfffffff4
   140001812:	call   QWORD PTR [rip+0x7a18]        # 0x140009230
   140001818:	or     r8d,0xffffffff
   14000181c:	mov    rdx,rbx
   14000181f:	mov    rcx,rax
   140001822:	add    rsp,0x20
   140001826:	pop    rbx
   140001827:	jmp    0x140001664
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	int3   
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	mov    QWORD PTR [rsp+0x8],rbx
   140001839:	push   rdi
   14000183a:	sub    rsp,0x20
   14000183e:	call   QWORD PTR [rip+0x790c]        # 0x140009150
   140001844:	mov    ebx,eax
   140001846:	mov    rcx,QWORD PTR [rip+0xa7eb]        # 0x14000c038
   14000184d:	lea    rdi,[rip+0xa7e4]        # 0x14000c038
   140001854:	cmp    rcx,rdi
   140001857:	je     0x140001890
   140001859:	test   BYTE PTR [rcx+0x1c],0x1
   14000185d:	je     0x140001874
   14000185f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001863:	mov    edx,0xa
   140001868:	call   0x140001180
   14000186d:	mov    rcx,QWORD PTR [rip+0xa7c4]        # 0x14000c038
   140001874:	cmp    rcx,rdi
   140001877:	je     0x140001890
   140001879:	test   BYTE PTR [rcx+0x1c],0x1
   14000187d:	je     0x140001890
   14000187f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001883:	mov    edx,0xb
   140001888:	mov    r9d,ebx
   14000188b:	call   0x1400011ac
   140001890:	mov    eax,ebx
   140001892:	mov    rbx,QWORD PTR [rsp+0x30]
   140001897:	add    rsp,0x20
   14000189b:	pop    rdi
   14000189c:	ret    
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	int3   
   1400018a1:	int3   
   1400018a2:	int3   
   1400018a3:	int3   
   1400018a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400018a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400018ae:	mov    QWORD PTR [rsp+0x18],r12
   1400018b3:	push   r15
   1400018b5:	sub    rsp,0x40
   1400018b9:	mov    rcx,QWORD PTR [rip+0xa778]        # 0x14000c038
   1400018c0:	lea    rsi,[rip+0xa771]        # 0x14000c038
   1400018c7:	cmp    rcx,rsi
   1400018ca:	je     0x1400018e0
   1400018cc:	test   BYTE PTR [rcx+0x1c],0x1
   1400018d0:	je     0x1400018e0
   1400018d2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018d6:	mov    edx,0xc
   1400018db:	call   0x140001180
   1400018e0:	or     ebx,0xffffffff
   1400018e3:	lock xadd DWORD PTR [rip+0xa73d],ebx        # 0x14000c028
   1400018eb:	dec    ebx
   1400018ed:	mov    rcx,QWORD PTR [rip+0xa744]        # 0x14000c038
   1400018f4:	cmp    rcx,rsi
   1400018f7:	je     0x140001917
   1400018f9:	test   BYTE PTR [rcx+0x1c],0x4
   1400018fd:	je     0x140001917
   1400018ff:	mov    rcx,QWORD PTR [rcx+0x10]
   140001903:	mov    edx,0xd
   140001908:	mov    r9d,ebx
   14000190b:	call   0x1400011ac
   140001910:	mov    rcx,QWORD PTR [rip+0xa721]        # 0x14000c038
   140001917:	test   ebx,ebx
   140001919:	jne    0x140001a6d
   14000191f:	mov    rax,QWORD PTR [rip+0xb4ca]        # 0x14000cdf0
   140001926:	lea    r15,[rip+0xb553]        # 0x14000ce80
   14000192d:	lea    r12,[rip+0x587c]        # 0x1400071b0
   140001934:	test   rax,rax
   140001937:	je     0x140001977
   140001939:	lea    r8,[rsp+0x20]
   14000193e:	mov    QWORD PTR [rsp+0x20],r15
   140001943:	xor    edx,edx
   140001945:	mov    QWORD PTR [rsp+0x28],r12
   14000194a:	mov    rcx,rax
   14000194d:	call   QWORD PTR [rip+0x775d]        # 0x1400090b0
   140001953:	mov    rcx,QWORD PTR [rip+0xb52e]        # 0x14000ce88
   14000195a:	test   rcx,rcx
   14000195d:	je     0x140001968
   14000195f:	or     edx,0xffffffff
   140001962:	call   QWORD PTR [rip+0x7968]        # 0x1400092d0
   140001968:	and    QWORD PTR [rip+0xb480],0x0        # 0x14000cdf0
   140001970:	mov    rcx,QWORD PTR [rip+0xa6c1]        # 0x14000c038
   140001977:	mov    rax,QWORD PTR [rip+0xb552]        # 0x14000ced0
   14000197e:	test   rax,rax
   140001981:	je     0x1400019e1
   140001983:	cmp    rcx,rsi
   140001986:	je     0x1400019a3
   140001988:	test   BYTE PTR [rcx+0x1c],0x4
   14000198c:	je     0x1400019a3
   14000198e:	mov    rcx,QWORD PTR [rcx+0x10]
   140001992:	mov    edx,0xe
   140001997:	call   0x140001180
   14000199c:	mov    rax,QWORD PTR [rip+0xb52d]        # 0x14000ced0
   1400019a3:	lea    r8,[rsp+0x30]
   1400019a8:	mov    QWORD PTR [rsp+0x30],r15
   1400019ad:	xor    edx,edx
   1400019af:	mov    QWORD PTR [rsp+0x38],r12
   1400019b4:	mov    rcx,rax
   1400019b7:	call   QWORD PTR [rip+0x76e3]        # 0x1400090a0
   1400019bd:	mov    rcx,QWORD PTR [rip+0xb4c4]        # 0x14000ce88
   1400019c4:	test   rcx,rcx
   1400019c7:	je     0x1400019d2
   1400019c9:	or     edx,0xffffffff
   1400019cc:	call   QWORD PTR [rip+0x78fe]        # 0x1400092d0
   1400019d2:	and    QWORD PTR [rip+0xb4f6],0x0        # 0x14000ced0
   1400019da:	mov    rcx,QWORD PTR [rip+0xa657]        # 0x14000c038
   1400019e1:	mov    rax,QWORD PTR [rip+0xb4b0]        # 0x14000ce98
   1400019e8:	test   rax,rax
   1400019eb:	je     0x140001a27
   1400019ed:	cmp    rcx,rsi
   1400019f0:	je     0x140001a0d
   1400019f2:	test   BYTE PTR [rcx+0x1c],0x4
   1400019f6:	je     0x140001a0d
   1400019f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400019fc:	mov    edx,0xf
   140001a01:	call   0x140001180
   140001a06:	mov    rax,QWORD PTR [rip+0xb48b]        # 0x14000ce98
   140001a0d:	xor    edx,edx
   140001a0f:	mov    rcx,rax
   140001a12:	call   QWORD PTR [rip+0x76a8]        # 0x1400090c0
   140001a18:	and    QWORD PTR [rip+0xb478],0x0        # 0x14000ce98
   140001a20:	mov    rcx,QWORD PTR [rip+0xa611]        # 0x14000c038
   140001a27:	mov    rax,QWORD PTR [rip+0xb482]        # 0x14000ceb0
   140001a2e:	test   rax,rax
   140001a31:	je     0x140001a6d
   140001a33:	cmp    rcx,rsi
   140001a36:	je     0x140001a53
   140001a38:	test   BYTE PTR [rcx+0x1c],0x4
   140001a3c:	je     0x140001a53
   140001a3e:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a42:	mov    edx,0x10
   140001a47:	call   0x140001180
   140001a4c:	mov    rax,QWORD PTR [rip+0xb45d]        # 0x14000ceb0
   140001a53:	xor    edx,edx
   140001a55:	mov    rcx,rax
   140001a58:	call   QWORD PTR [rip+0x7622]        # 0x140009080
   140001a5e:	and    QWORD PTR [rip+0xb44a],0x0        # 0x14000ceb0
   140001a66:	mov    rcx,QWORD PTR [rip+0xa5cb]        # 0x14000c038
   140001a6d:	cmp    rcx,rsi
   140001a70:	je     0x140001a89
   140001a72:	test   BYTE PTR [rcx+0x1c],0x1
   140001a76:	je     0x140001a89
   140001a78:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a7c:	mov    edx,0x11
   140001a81:	mov    r9d,ebx
   140001a84:	call   0x1400011ac
   140001a89:	mov    rsi,QWORD PTR [rsp+0x58]
   140001a8e:	mov    eax,ebx
   140001a90:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a95:	mov    r12,QWORD PTR [rsp+0x60]
   140001a9a:	add    rsp,0x40
   140001a9e:	pop    r15
   140001aa0:	ret    
   140001aa1:	int3   
   140001aa2:	int3   
   140001aa3:	int3   
   140001aa4:	int3   
   140001aa5:	int3   
   140001aa6:	int3   
   140001aa7:	int3   
   140001aa8:	mov    QWORD PTR [rsp+0x8],rbx
   140001aad:	mov    QWORD PTR [rsp+0x10],rsi
   140001ab2:	mov    QWORD PTR [rsp+0x18],rdi
   140001ab7:	push   r12
   140001ab9:	push   r14
   140001abb:	push   r15
   140001abd:	sub    rsp,0x20
   140001ac1:	mov    rdi,r9
   140001ac4:	mov    rsi,r8
   140001ac7:	mov    r14,rdx
   140001aca:	mov    r15,rcx
   140001acd:	mov    rcx,QWORD PTR [rip+0xa564]        # 0x14000c038
   140001ad4:	lea    r12,[rip+0xa55d]        # 0x14000c038
   140001adb:	cmp    rcx,r12
   140001ade:	je     0x140001af4
   140001ae0:	test   BYTE PTR [rcx+0x1c],0x1
   140001ae4:	je     0x140001af4
   140001ae6:	mov    rcx,QWORD PTR [rcx+0x10]
   140001aea:	mov    edx,0x12
   140001aef:	call   0x140001180
   140001af4:	lea    rcx,[rip+0xb31d]        # 0x14000ce18
   140001afb:	call   QWORD PTR [rip+0x77f7]        # 0x1400092f8
   140001b01:	mov    bl,BYTE PTR [rip+0xb3b1]        # 0x14000ceb8
   140001b07:	test   bl,bl
   140001b09:	jne    0x140001b33
   140001b0b:	mov    rax,QWORD PTR [rip+0xb39e]        # 0x14000ceb0
   140001b12:	mov    QWORD PTR [r15],rax
   140001b15:	mov    rax,QWORD PTR [rip+0xb37c]        # 0x14000ce98
   140001b1c:	mov    QWORD PTR [r14],rax
   140001b1f:	mov    rax,QWORD PTR [rip+0xb3aa]        # 0x14000ced0
   140001b26:	mov    QWORD PTR [rsi],rax
   140001b29:	mov    rax,QWORD PTR [rip+0xb2c0]        # 0x14000cdf0
   140001b30:	mov    QWORD PTR [rdi],rax
   140001b33:	lea    rcx,[rip+0xb2de]        # 0x14000ce18
   140001b3a:	call   QWORD PTR [rip+0x77b0]        # 0x1400092f0
   140001b40:	test   bl,bl
   140001b42:	jne    0x140001b73
   140001b44:	lock inc DWORD PTR [rip+0xa4dd]        # 0x14000c028
   140001b4b:	mov    rcx,QWORD PTR [rip+0xa4e6]        # 0x14000c038
   140001b52:	cmp    rcx,r12
   140001b55:	je     0x140001b6f
   140001b57:	test   BYTE PTR [rcx+0x1c],0x1
   140001b5b:	je     0x140001b6f
   140001b5d:	mov    rcx,QWORD PTR [rcx+0x10]
   140001b61:	mov    edx,0x13
   140001b66:	lea    r9d,[rdx-0x12]
   140001b6a:	call   0x1400011ac
   140001b6f:	mov    al,0x1
   140001b71:	jmp    0x140001b98
   140001b73:	mov    rcx,QWORD PTR [rip+0xa4be]        # 0x14000c038
   140001b7a:	cmp    rcx,r12
   140001b7d:	je     0x140001b96
   140001b7f:	test   BYTE PTR [rcx+0x1c],0x1
   140001b83:	je     0x140001b96
   140001b85:	mov    rcx,QWORD PTR [rcx+0x10]
   140001b89:	mov    edx,0x14
   140001b8e:	xor    r9d,r9d
   140001b91:	call   0x1400011ac
   140001b96:	xor    al,al
   140001b98:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b9d:	mov    rsi,QWORD PTR [rsp+0x48]
   140001ba2:	mov    rdi,QWORD PTR [rsp+0x50]
   140001ba7:	add    rsp,0x20
   140001bab:	pop    r15
   140001bad:	pop    r14
   140001baf:	pop    r12
   140001bb1:	ret    
   140001bb2:	int3   
   140001bb3:	int3   
   140001bb4:	int3   
   140001bb5:	int3   
   140001bb6:	int3   
   140001bb7:	int3   
   140001bb8:	mov    rax,rsp
   140001bbb:	mov    QWORD PTR [rax+0x8],rbx
   140001bbf:	mov    QWORD PTR [rax+0x10],rbp
   140001bc3:	mov    QWORD PTR [rax+0x18],rsi
   140001bc7:	mov    QWORD PTR [rax+0x20],rdi
   140001bcb:	push   r15
   140001bcd:	sub    rsp,0x20
   140001bd1:	mov    dil,r8b
   140001bd4:	mov    sil,dl
   140001bd7:	mov    ebp,ecx
   140001bd9:	mov    rcx,QWORD PTR [rip+0xa458]        # 0x14000c038
   140001be0:	lea    r15,[rip+0xa451]        # 0x14000c038
   140001be7:	cmp    rcx,r15
   140001bea:	je     0x140001c07
   140001bec:	test   BYTE PTR [rcx+0x1c],0x1
   140001bf0:	je     0x140001c07
   140001bf2:	mov    rcx,QWORD PTR [rcx+0x10]
   140001bf6:	mov    edx,0x15
   140001bfb:	call   0x140001180
   140001c00:	mov    rcx,QWORD PTR [rip+0xa431]        # 0x14000c038
   140001c07:	test   dil,dil
   140001c0a:	je     0x140001c75
   140001c0c:	lea    rcx,[rip+0xb205]        # 0x14000ce18
   140001c13:	call   QWORD PTR [rip+0x76df]        # 0x1400092f8
   140001c19:	mov    dil,BYTE PTR [rip+0xb298]        # 0x14000ceb8
   140001c20:	test   dil,dil
   140001c23:	jne    0x140001c32
   140001c25:	mov    DWORD PTR [rip+0xb2ad],ebp        # 0x14000ced8
   140001c2b:	mov    BYTE PTR [rip+0xb286],0x1        # 0x14000ceb8
   140001c32:	lea    rcx,[rip+0xb1df]        # 0x14000ce18
   140001c39:	call   QWORD PTR [rip+0x76b1]        # 0x1400092f0
   140001c3f:	test   sil,sil
   140001c42:	je     0x140001c49
   140001c44:	call   0x1400018a4
   140001c49:	mov    rcx,QWORD PTR [rip+0xa3e8]        # 0x14000c038
   140001c50:	cmp    rcx,r15
   140001c53:	je     0x140001c6d
   140001c55:	test   BYTE PTR [rcx+0x1c],0x1
   140001c59:	je     0x140001c6d
   140001c5b:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c5f:	mov    edx,0x16
   140001c64:	lea    r9d,[rdx-0x15]
   140001c68:	call   0x1400011ac
   140001c6d:	test   dil,dil
   140001c70:	sete   al
   140001c73:	jmp    0x140001ca4
   140001c75:	test   sil,sil
   140001c78:	je     0x140001c86
   140001c7a:	call   0x1400018a4
   140001c7f:	mov    rcx,QWORD PTR [rip+0xa3b2]        # 0x14000c038
   140001c86:	cmp    rcx,r15
   140001c89:	je     0x140001ca2
   140001c8b:	test   BYTE PTR [rcx+0x1c],0x1
   140001c8f:	je     0x140001ca2
   140001c91:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c95:	mov    edx,0x17
   140001c9a:	xor    r9d,r9d
   140001c9d:	call   0x1400011ac
   140001ca2:	xor    al,al
   140001ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ca9:	mov    rbp,QWORD PTR [rsp+0x38]
   140001cae:	mov    rsi,QWORD PTR [rsp+0x40]
   140001cb3:	mov    rdi,QWORD PTR [rsp+0x48]
   140001cb8:	add    rsp,0x20
   140001cbc:	pop    r15
   140001cbe:	ret    
   140001cbf:	int3   
   140001cc0:	int3   
   140001cc1:	int3   
   140001cc2:	int3   
   140001cc3:	int3   
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	rex push rdi
   140001cca:	mov    eax,0x41e0
   140001ccf:	call   0x140008070
   140001cd4:	sub    rsp,rax
   140001cd7:	mov    rax,QWORD PTR [rip+0xa32a]        # 0x14000c008
   140001cde:	xor    rax,rsp
   140001ce1:	mov    QWORD PTR [rsp+0x41d0],rax
   140001ce9:	mov    rcx,QWORD PTR [rip+0xa348]        # 0x14000c038
   140001cf0:	lea    rdi,[rip+0xa341]        # 0x14000c038
   140001cf7:	cmp    rcx,rdi
   140001cfa:	je     0x140001d10
   140001cfc:	test   BYTE PTR [rcx+0x1c],0x1
   140001d00:	je     0x140001d10
   140001d02:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d06:	mov    edx,0x18
   140001d0b:	call   0x140001180
   140001d10:	xor    ecx,ecx
   140001d12:	call   QWORD PTR [rip+0x74d8]        # 0x1400091f0
   140001d18:	mov    r9d,0x1060
   140001d1e:	lea    r8,[rsp+0x50]
   140001d23:	mov    rcx,rax
   140001d26:	mov    edx,0x10
   140001d2b:	call   QWORD PTR [rip+0x74b7]        # 0x1400091e8
   140001d31:	test   eax,eax
   140001d33:	jne    0x140001d6c
   140001d35:	mov    rax,QWORD PTR [rip+0xa2fc]        # 0x14000c038
   140001d3c:	cmp    rax,rdi
   140001d3f:	je     0x140001d65
   140001d41:	test   BYTE PTR [rax+0x1c],0x1
   140001d45:	je     0x140001d65
   140001d47:	call   QWORD PTR [rip+0x7403]        # 0x140009150
   140001d4d:	mov    edx,0x19
   140001d52:	mov    rcx,QWORD PTR [rip+0xa2df]        # 0x14000c038
   140001d59:	mov    r9d,eax
   140001d5c:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d60:	call   0x1400011ac
   140001d65:	xor    eax,eax
   140001d67:	jmp    0x140001e93
   140001d6c:	xor    ecx,ecx
   140001d6e:	call   QWORD PTR [rip+0x747c]        # 0x1400091f0
   140001d74:	mov    r9d,0x6
   140001d7a:	lea    r8,[rsp+0x30]
   140001d7f:	mov    rcx,rax
   140001d82:	lea    edx,[r9+0xb]
   140001d86:	call   QWORD PTR [rip+0x745c]        # 0x1400091e8
   140001d8c:	cmp    eax,0x1
   140001d8f:	je     0x140001db0
   140001d91:	mov    rax,QWORD PTR [rip+0xa2a0]        # 0x14000c038
   140001d98:	cmp    rax,rdi
   140001d9b:	je     0x140001d65
   140001d9d:	test   BYTE PTR [rax+0x1c],0x1
   140001da1:	je     0x140001d65
   140001da3:	call   QWORD PTR [rip+0x73a7]        # 0x140009150
   140001da9:	mov    edx,0x1a
   140001dae:	jmp    0x140001d52
   140001db0:	xor    ecx,ecx
   140001db2:	call   QWORD PTR [rip+0x7438]        # 0x1400091f0
   140001db8:	mov    r9d,0x6
   140001dbe:	lea    r8,[rsp+0x40]
   140001dc3:	mov    rcx,rax
   140001dc6:	lea    edx,[r9+0xc]
   140001dca:	call   QWORD PTR [rip+0x7418]        # 0x1400091e8
   140001dd0:	cmp    eax,0x1
   140001dd3:	je     0x140001dfb
   140001dd5:	mov    rax,QWORD PTR [rip+0xa25c]        # 0x14000c038
   140001ddc:	cmp    rax,rdi
   140001ddf:	je     0x140001d65
   140001de1:	test   BYTE PTR [rax+0x1c],0x1
   140001de5:	je     0x140001d65
   140001deb:	call   QWORD PTR [rip+0x735f]        # 0x140009150
   140001df1:	mov    edx,0x1b
   140001df6:	jmp    0x140001d52
   140001dfb:	movzx  eax,WORD PTR [rsp+0x40]
   140001e00:	lea    r8,[rsp+0x50]
   140001e05:	movzx  r9d,WORD PTR [rsp+0x30]
   140001e0b:	lea    rcx,[rsp+0x2110]
   140001e13:	mov    edx,0x1060
   140001e18:	mov    DWORD PTR [rsp+0x20],eax
   140001e1c:	call   0x140001028
   140001e21:	test   eax,eax
   140001e23:	jns    0x140001e4f
   140001e25:	mov    rax,QWORD PTR [rip+0xa20c]        # 0x14000c038
   140001e2c:	cmp    rax,rdi
   140001e2f:	je     0x140001d65
   140001e35:	test   BYTE PTR [rax+0x1c],0x1
   140001e39:	je     0x140001d65
   140001e3f:	call   QWORD PTR [rip+0x730b]        # 0x140009150
   140001e45:	mov    edx,0x1c
   140001e4a:	jmp    0x140001d52
   140001e4f:	mov    ecx,0xfffffff5
   140001e54:	call   QWORD PTR [rip+0x73d6]        # 0x140009230
   140001e5a:	or     r8d,0xffffffff
   140001e5e:	lea    rdx,[rsp+0x2110]
   140001e66:	mov    rcx,rax
   140001e69:	call   0x140001664
   140001e6e:	mov    rcx,QWORD PTR [rip+0xa1c3]        # 0x14000c038
   140001e75:	cmp    rcx,rdi
   140001e78:	je     0x140001e8e
   140001e7a:	test   BYTE PTR [rcx+0x1c],0x1
   140001e7e:	je     0x140001e8e
   140001e80:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e84:	mov    edx,0x1d
   140001e89:	call   0x140001180
   140001e8e:	mov    eax,0x1
   140001e93:	mov    rcx,QWORD PTR [rsp+0x41d0]
   140001e9b:	xor    rcx,rsp
   140001e9e:	call   0x140007680
   140001ea3:	add    rsp,0x41e0
   140001eaa:	pop    rdi
   140001eab:	ret    
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	int3   
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	mov    rax,rsp
   140001eb7:	push   rbp
   140001eb8:	push   rsi
   140001eb9:	push   rdi
   140001eba:	push   r12
   140001ebc:	push   r13
   140001ebe:	push   r14
   140001ec0:	push   r15
   140001ec2:	sub    rsp,0x80
   140001ec9:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140001ed1:	mov    QWORD PTR [rax+0x20],rbx
   140001ed5:	mov    rax,QWORD PTR [rip+0xa12c]        # 0x14000c008
   140001edc:	xor    rax,rsp
   140001edf:	mov    QWORD PTR [rsp+0x78],rax
   140001ee4:	mov    r15,r8
   140001ee7:	mov    r14d,edx
   140001eea:	mov    rbp,rcx
   140001eed:	lea    rsi,[rip+0xa144]        # 0x14000c038
   140001ef4:	mov    r13d,0x1
   140001efa:	mov    rcx,QWORD PTR [rip+0xa137]        # 0x14000c038
   140001f01:	cmp    rcx,rsi
   140001f04:	je     0x140001f19
   140001f06:	test   BYTE PTR [rcx+0x1c],r13b
   140001f0a:	je     0x140001f19
   140001f0c:	lea    edx,[r13+0x1d]
   140001f10:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f14:	call   0x140001180
   140001f19:	xor    ebx,ebx
   140001f1b:	test   rbp,rbp
   140001f1e:	jne    0x140001f4e
   140001f20:	lea    ecx,[rbx+0x57]
   140001f23:	call   QWORD PTR [rip+0x721f]        # 0x140009148
   140001f29:	mov    rcx,QWORD PTR [rip+0xa108]        # 0x14000c038
   140001f30:	cmp    rcx,rsi
   140001f33:	je     0x140001f47
   140001f35:	test   BYTE PTR [rcx+0x1c],r13b
   140001f39:	je     0x140001f47
   140001f3b:	lea    edx,[rbx+0x1f]
   140001f3e:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f42:	call   0x140001180
   140001f47:	xor    eax,eax
   140001f49:	jmp    0x1400022ee
   140001f4e:	xor    ecx,ecx
   140001f50:	call   QWORD PTR [rip+0x729a]        # 0x1400091f0
   140001f56:	mov    rcx,rax
   140001f59:	mov    r9d,0x6
   140001f5f:	lea    r8,[rsp+0x58]
   140001f64:	lea    edx,[r9+0xb]
   140001f68:	call   QWORD PTR [rip+0x727a]        # 0x1400091e8
   140001f6e:	cmp    eax,r13d
   140001f71:	je     0x140001fa5
   140001f73:	mov    rax,QWORD PTR [rip+0xa0be]        # 0x14000c038
   140001f7a:	cmp    rax,rsi
   140001f7d:	je     0x140001f47
   140001f7f:	test   BYTE PTR [rax+0x1c],r13b
   140001f83:	je     0x140001f47
   140001f85:	call   QWORD PTR [rip+0x71c5]        # 0x140009150
   140001f8b:	mov    edx,0x20
   140001f90:	mov    r9d,eax
   140001f93:	mov    rcx,QWORD PTR [rip+0xa09e]        # 0x14000c038
   140001f9a:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f9e:	call   0x1400011ac
   140001fa3:	jmp    0x140001f47
   140001fa5:	call   QWORD PTR [rip+0x7165]        # 0x140009110
   140001fab:	mov    ecx,eax
   140001fad:	mov    QWORD PTR [rsp+0x38],rbx
   140001fb2:	mov    QWORD PTR [rsp+0x30],rbx
   140001fb7:	mov    DWORD PTR [rsp+0x28],ebx
   140001fbb:	mov    QWORD PTR [rsp+0x20],rbx
   140001fc0:	or     r9d,0xffffffff
   140001fc4:	lea    r8,[rsp+0x58]
   140001fc9:	xor    edx,edx
   140001fcb:	call   QWORD PTR [rip+0x72d7]        # 0x1400092a8
   140001fd1:	mov    edi,eax
   140001fd3:	mov    ecx,eax
   140001fd5:	xor    r8d,r8d
   140001fd8:	xor    edx,edx
   140001fda:	call   QWORD PTR [rip+0x7020]        # 0x140009000
   140001fe0:	mov    r12,rax
   140001fe3:	test   rax,rax
   140001fe6:	jne    0x14000200f
   140001fe8:	mov    rax,QWORD PTR [rip+0xa049]        # 0x14000c038
   140001fef:	cmp    rax,rsi
   140001ff2:	je     0x140001f47
   140001ff8:	test   BYTE PTR [rax+0x1c],r13b
   140001ffc:	je     0x140001f47
   140002002:	call   QWORD PTR [rip+0x7148]        # 0x140009150
   140002008:	lea    edx,[r12+0x21]
   14000200d:	jmp    0x140001f90
   14000200f:	mov    rdx,rax
   140002012:	lea    rcx,[rsp+0x48]
   140002017:	call   QWORD PTR [rip+0x7043]        # 0x140009060
   14000201d:	nop
   14000201e:	call   QWORD PTR [rip+0x70ec]        # 0x140009110
   140002024:	mov    ecx,eax
   140002026:	mov    QWORD PTR [rsp+0x38],rbx
   14000202b:	mov    QWORD PTR [rsp+0x30],rbx
   140002030:	mov    DWORD PTR [rsp+0x28],edi
   140002034:	mov    QWORD PTR [rsp+0x20],r12
   140002039:	or     edi,0xffffffff
   14000203c:	mov    r9d,edi
   14000203f:	lea    r8,[rsp+0x58]
   140002044:	xor    edx,edx
   140002046:	call   QWORD PTR [rip+0x725c]        # 0x1400092a8
   14000204c:	mov    esi,eax
   14000204e:	test   eax,eax
   140002050:	jne    0x140002081
   140002052:	mov    rax,QWORD PTR [rip+0x9fdf]        # 0x14000c038
   140002059:	lea    rdx,[rip+0x9fd8]        # 0x14000c038
   140002060:	cmp    rax,rdx
   140002063:	je     0x1400022e1
   140002069:	test   BYTE PTR [rax+0x1c],r13b
   14000206d:	je     0x1400022e1
   140002073:	call   QWORD PTR [rip+0x70d7]        # 0x140009150
   140002079:	lea    edx,[rdi+0x23]
   14000207c:	jmp    0x140002143
   140002081:	dec    esi
   140002083:	xor    ecx,ecx
   140002085:	call   QWORD PTR [rip+0x7165]        # 0x1400091f0
   14000208b:	mov    rcx,rax
   14000208e:	mov    r9d,0x6
   140002094:	lea    r8,[rsp+0x68]
   140002099:	lea    edx,[r9+0xc]
   14000209d:	call   QWORD PTR [rip+0x7145]        # 0x1400091e8
   1400020a3:	cmp    eax,r13d
   1400020a6:	je     0x1400020d6
   1400020a8:	mov    rax,QWORD PTR [rip+0x9f89]        # 0x14000c038
   1400020af:	lea    rdx,[rip+0x9f82]        # 0x14000c038
   1400020b6:	cmp    rax,rdx
   1400020b9:	je     0x1400022e1
   1400020bf:	test   BYTE PTR [rax+0x1c],r13b
   1400020c3:	je     0x1400022e1
   1400020c9:	call   QWORD PTR [rip+0x7081]        # 0x140009150
   1400020cf:	mov    edx,0x23
   1400020d4:	jmp    0x140002143
   1400020d6:	call   QWORD PTR [rip+0x7034]        # 0x140009110
   1400020dc:	mov    ecx,eax
   1400020de:	mov    QWORD PTR [rsp+0x38],rbx
   1400020e3:	mov    QWORD PTR [rsp+0x30],rbx
   1400020e8:	mov    DWORD PTR [rsp+0x28],ebx
   1400020ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400020f1:	mov    r9d,edi
   1400020f4:	lea    r8,[rsp+0x68]
   1400020f9:	xor    edx,edx
   1400020fb:	call   QWORD PTR [rip+0x71a7]        # 0x1400092a8
   140002101:	mov    edi,eax
   140002103:	mov    ecx,eax
   140002105:	xor    r8d,r8d
   140002108:	xor    edx,edx
   14000210a:	call   QWORD PTR [rip+0x6ef0]        # 0x140009000
   140002110:	mov    r13,rax
   140002113:	test   rax,rax
   140002116:	jne    0x14000215b
   140002118:	mov    rax,QWORD PTR [rip+0x9f19]        # 0x14000c038
   14000211f:	lea    rdx,[rip+0x9f12]        # 0x14000c038
   140002126:	cmp    rax,rdx
   140002129:	je     0x1400022e1
   14000212f:	test   BYTE PTR [rax+0x1c],0x1
   140002133:	je     0x1400022e1
   140002139:	call   QWORD PTR [rip+0x7011]        # 0x140009150
   14000213f:	lea    edx,[r13+0x24]
   140002143:	mov    r9d,eax
   140002146:	mov    rcx,QWORD PTR [rip+0x9eeb]        # 0x14000c038
   14000214d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002151:	call   0x1400011ac
   140002156:	jmp    0x1400022e1
   14000215b:	mov    rdx,rax
   14000215e:	lea    rcx,[rsp+0x40]
   140002163:	call   QWORD PTR [rip+0x6ef7]        # 0x140009060
   140002169:	nop
   14000216a:	call   QWORD PTR [rip+0x6fa0]        # 0x140009110
   140002170:	mov    ecx,eax
   140002172:	mov    QWORD PTR [rsp+0x38],rbx
   140002177:	mov    QWORD PTR [rsp+0x30],rbx
   14000217c:	mov    DWORD PTR [rsp+0x28],edi
   140002180:	mov    QWORD PTR [rsp+0x20],r13
   140002185:	or     r9d,0xffffffff
   140002189:	lea    r8,[rsp+0x68]
   14000218e:	xor    edx,edx
   140002190:	call   QWORD PTR [rip+0x7112]        # 0x1400092a8
   140002196:	mov    edi,eax
   140002198:	test   eax,eax
   14000219a:	jne    0x1400021de
   14000219c:	mov    rax,QWORD PTR [rip+0x9e95]        # 0x14000c038
   1400021a3:	lea    rdx,[rip+0x9e8e]        # 0x14000c038
   1400021aa:	cmp    rax,rdx
   1400021ad:	je     0x1400022d5
   1400021b3:	test   BYTE PTR [rax+0x1c],0x1
   1400021b7:	je     0x1400022d5
   1400021bd:	call   QWORD PTR [rip+0x6f8d]        # 0x140009150
   1400021c3:	mov    r9d,eax
   1400021c6:	lea    edx,[rdi+0x25]
   1400021c9:	mov    rcx,QWORD PTR [rip+0x9e68]        # 0x14000c038
   1400021d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400021d4:	call   0x1400011ac
   1400021d9:	jmp    0x1400022d5
   1400021de:	dec    edi
   1400021e0:	mov    rcx,QWORD PTR [rip+0x9e51]        # 0x14000c038
   1400021e7:	lea    rdx,[rip+0x9e4a]        # 0x14000c038
   1400021ee:	cmp    rcx,rdx
   1400021f1:	je     0x140002218
   1400021f3:	mov    eax,0x1
   1400021f8:	test   BYTE PTR [rcx+0x1c],al
   1400021fb:	je     0x140002218
   1400021fd:	mov    DWORD PTR [rsp+0x28],eax
   140002201:	mov    DWORD PTR [rsp+0x20],eax
   140002205:	mov    r9d,r14d
   140002208:	mov    rcx,QWORD PTR [rcx+0x10]
   14000220c:	call   0x14000124c
   140002211:	mov    rcx,QWORD PTR [rip+0x9e20]        # 0x14000c038
   140002218:	lea    eax,[rsi+0x2]
   14000221b:	cmp    r14d,eax
   14000221e:	jne    0x14000225d
   140002220:	mov    r8d,esi
   140002223:	mov    rdx,r12
   140002226:	mov    rcx,rbp
   140002229:	call   QWORD PTR [rip+0x71e9]        # 0x140009418
   14000222f:	test   eax,eax
   140002231:	jne    0x140002256
   140002233:	mov    DWORD PTR [r15],ebx
   140002236:	mov    rcx,QWORD PTR [rip+0x9dfb]        # 0x14000c038
   14000223d:	lea    rax,[rip+0x9df4]        # 0x14000c038
   140002244:	cmp    rcx,rax
   140002247:	je     0x1400022a6
   140002249:	test   BYTE PTR [rcx+0x1c],0x1
   14000224d:	je     0x1400022a6
   14000224f:	mov    edx,0x27
   140002254:	jmp    0x14000229d
   140002256:	mov    rcx,QWORD PTR [rip+0x9ddb]        # 0x14000c038
   14000225d:	lea    eax,[rdi+0x2]
   140002260:	cmp    r14d,eax
   140002263:	jne    0x1400022b4
   140002265:	mov    r8d,edi
   140002268:	mov    rdx,r13
   14000226b:	mov    rcx,rbp
   14000226e:	call   QWORD PTR [rip+0x71a4]        # 0x140009418
   140002274:	test   eax,eax
   140002276:	jne    0x1400022ad
   140002278:	mov    DWORD PTR [r15],0x1
   14000227f:	mov    rcx,QWORD PTR [rip+0x9db2]        # 0x14000c038
   140002286:	lea    rax,[rip+0x9dab]        # 0x14000c038
   14000228d:	cmp    rcx,rax
   140002290:	je     0x1400022a6
   140002292:	test   BYTE PTR [rcx+0x1c],0x1
   140002296:	je     0x1400022a6
   140002298:	mov    edx,0x28
   14000229d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400022a1:	call   0x140001180
   1400022a6:	mov    ebx,0x1
   1400022ab:	jmp    0x1400022d5
   1400022ad:	mov    rcx,QWORD PTR [rip+0x9d84]        # 0x14000c038
   1400022b4:	lea    rax,[rip+0x9d7d]        # 0x14000c038
   1400022bb:	cmp    rcx,rax
   1400022be:	je     0x1400022d5
   1400022c0:	test   BYTE PTR [rcx+0x1c],0x1
   1400022c4:	je     0x1400022d5
   1400022c6:	mov    edx,0x29
   1400022cb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400022cf:	call   0x140001180
   1400022d4:	nop
   1400022d5:	lea    rcx,[rsp+0x40]
   1400022da:	call   QWORD PTR [rip+0x6d60]        # 0x140009040
   1400022e0:	nop
   1400022e1:	lea    rcx,[rsp+0x48]
   1400022e6:	call   QWORD PTR [rip+0x6d54]        # 0x140009040
   1400022ec:	mov    eax,ebx
   1400022ee:	mov    rcx,QWORD PTR [rsp+0x78]
   1400022f3:	xor    rcx,rsp
   1400022f6:	call   0x140007680
   1400022fb:	mov    rbx,QWORD PTR [rsp+0xd8]
   140002303:	add    rsp,0x80
   14000230a:	pop    r15
   14000230c:	pop    r14
   14000230e:	pop    r13
   140002310:	pop    r12
   140002312:	pop    rdi
   140002313:	pop    rsi
   140002314:	pop    rbp
   140002315:	ret    
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	mov    QWORD PTR [rsp+0x8],rbx
   140002321:	mov    QWORD PTR [rsp+0x10],rsi
   140002326:	push   rdi
   140002327:	sub    rsp,0x30
   14000232b:	mov    rdi,rcx
   14000232e:	mov    rcx,QWORD PTR [rip+0x9d03]        # 0x14000c038
   140002335:	lea    rsi,[rip+0x9cfc]        # 0x14000c038
   14000233c:	cmp    rcx,rsi
   14000233f:	je     0x140002355
   140002341:	test   BYTE PTR [rcx+0x1c],0x1
   140002345:	je     0x140002355
   140002347:	mov    rcx,QWORD PTR [rcx+0x10]
   14000234b:	mov    edx,0x2a
   140002350:	call   0x140001180
   140002355:	lea    rcx,[rip+0xaabc]        # 0x14000ce18
   14000235c:	call   QWORD PTR [rip+0x6f96]        # 0x1400092f8
   140002362:	mov    bl,BYTE PTR [rip+0xab50]        # 0x14000ceb8
   140002368:	lea    rcx,[rip+0xaaa9]        # 0x14000ce18
   14000236f:	mov    BYTE PTR [rip+0xab42],0x1        # 0x14000ceb8
   140002376:	call   QWORD PTR [rip+0x6f74]        # 0x1400092f0
   14000237c:	test   bl,bl
   14000237e:	jne    0x1400023d4
   140002380:	mov    DWORD PTR [rip+0xab4e],0x3e3        # 0x14000ced8
   14000238a:	test   rdi,rdi
   14000238d:	je     0x1400023cc
   14000238f:	lea    rax,[rip+0xaaea]        # 0x14000ce80
   140002396:	xor    edx,edx
   140002398:	mov    QWORD PTR [rsp+0x20],rax
   14000239d:	lea    r8,[rsp+0x20]
   1400023a2:	lea    rax,[rip+0x4e07]        # 0x1400071b0
   1400023a9:	mov    rcx,rdi
   1400023ac:	mov    QWORD PTR [rsp+0x28],rax
   1400023b1:	call   QWORD PTR [rip+0x6ce9]        # 0x1400090a0
   1400023b7:	mov    rcx,QWORD PTR [rip+0xaaca]        # 0x14000ce88
   1400023be:	test   rcx,rcx
   1400023c1:	je     0x1400023cc
   1400023c3:	or     edx,0xffffffff
   1400023c6:	call   QWORD PTR [rip+0x6f04]        # 0x1400092d0
   1400023cc:	and    QWORD PTR [rip+0xaafc],0x0        # 0x14000ced0
   1400023d4:	mov    rcx,QWORD PTR [rip+0x9c5d]        # 0x14000c038
   1400023db:	cmp    rcx,rsi
   1400023de:	je     0x1400023f4
   1400023e0:	test   BYTE PTR [rcx+0x1c],0x1
   1400023e4:	je     0x1400023f4
   1400023e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023ea:	mov    edx,0x2b
   1400023ef:	call   0x140001180
   1400023f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400023f9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400023fe:	add    rsp,0x30
   140002402:	pop    rdi
   140002403:	ret    
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	mov    QWORD PTR [rsp+0x8],rbx
   140002411:	mov    QWORD PTR [rsp+0x10],rsi
   140002416:	push   rdi
   140002417:	sub    rsp,0x20
   14000241b:	mov    rdi,rcx
   14000241e:	mov    rcx,QWORD PTR [rip+0x9c13]        # 0x14000c038
   140002425:	lea    rsi,[rip+0x9c0c]        # 0x14000c038
   14000242c:	cmp    rcx,rsi
   14000242f:	je     0x140002445
   140002431:	test   BYTE PTR [rcx+0x1c],0x1
   140002435:	je     0x140002445
   140002437:	mov    rcx,QWORD PTR [rcx+0x10]
   14000243b:	mov    edx,0x2c
   140002440:	call   0x140001180
   140002445:	lea    rcx,[rip+0xa9cc]        # 0x14000ce18
   14000244c:	call   QWORD PTR [rip+0x6ea6]        # 0x1400092f8
   140002452:	mov    bl,BYTE PTR [rip+0xaa60]        # 0x14000ceb8
   140002458:	lea    rcx,[rip+0xa9b9]        # 0x14000ce18
   14000245f:	mov    BYTE PTR [rip+0xaa52],0x1        # 0x14000ceb8
   140002466:	call   QWORD PTR [rip+0x6e84]        # 0x1400092f0
   14000246c:	test   bl,bl
   14000246e:	jne    0x140002485
   140002470:	xor    edx,edx
   140002472:	mov    DWORD PTR [rip+0xaa5c],0x3e3        # 0x14000ced8
   14000247c:	mov    rcx,rdi
   14000247f:	call   QWORD PTR [rip+0x6c3b]        # 0x1400090c0
   140002485:	mov    rcx,QWORD PTR [rip+0x9bac]        # 0x14000c038
   14000248c:	cmp    rcx,rsi
   14000248f:	je     0x1400024a5
   140002491:	test   BYTE PTR [rcx+0x1c],0x1
   140002495:	je     0x1400024a5
   140002497:	mov    rcx,QWORD PTR [rcx+0x10]
   14000249b:	mov    edx,0x2d
   1400024a0:	call   0x140001180
   1400024a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024af:	add    rsp,0x20
   1400024b3:	pop    rdi
   1400024b4:	ret    
   1400024b5:	int3   
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400024c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400024c6:	push   rdi
   1400024c7:	sub    rsp,0x20
   1400024cb:	mov    rdi,rcx
   1400024ce:	mov    rcx,QWORD PTR [rip+0x9b63]        # 0x14000c038
   1400024d5:	lea    rsi,[rip+0x9b5c]        # 0x14000c038
   1400024dc:	cmp    rcx,rsi
   1400024df:	je     0x1400024f5
   1400024e1:	test   BYTE PTR [rcx+0x1c],0x1
   1400024e5:	je     0x1400024f5
   1400024e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400024eb:	mov    edx,0x2e
   1400024f0:	call   0x140001180
   1400024f5:	lea    rcx,[rip+0xa91c]        # 0x14000ce18
   1400024fc:	call   QWORD PTR [rip+0x6df6]        # 0x1400092f8
   140002502:	mov    bl,BYTE PTR [rip+0xa9b0]        # 0x14000ceb8
   140002508:	lea    rcx,[rip+0xa909]        # 0x14000ce18
   14000250f:	mov    BYTE PTR [rip+0xa9a2],0x1        # 0x14000ceb8
   140002516:	call   QWORD PTR [rip+0x6dd4]        # 0x1400092f0
   14000251c:	test   bl,bl
   14000251e:	jne    0x140002535
   140002520:	xor    edx,edx
   140002522:	mov    DWORD PTR [rip+0xa9ac],0x3e3        # 0x14000ced8
   14000252c:	mov    rcx,rdi
   14000252f:	call   QWORD PTR [rip+0x6b4b]        # 0x140009080
   140002535:	mov    rcx,QWORD PTR [rip+0x9afc]        # 0x14000c038
   14000253c:	cmp    rcx,rsi
   14000253f:	je     0x140002555
   140002541:	test   BYTE PTR [rcx+0x1c],0x1
   140002545:	je     0x140002555
   140002547:	mov    rcx,QWORD PTR [rcx+0x10]
   14000254b:	mov    edx,0x2f
   140002550:	call   0x140001180
   140002555:	mov    rbx,QWORD PTR [rsp+0x30]
   14000255a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000255f:	add    rsp,0x20
   140002563:	pop    rdi
   140002564:	ret    
   140002565:	int3   
   140002566:	int3   
   140002567:	int3   
   140002568:	int3   
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	mov    QWORD PTR [rsp+0x8],rbx
   140002571:	mov    QWORD PTR [rsp+0x10],rbp
   140002576:	push   rdi
   140002577:	sub    rsp,0x20
   14000257b:	mov    rdi,rcx
   14000257e:	mov    rcx,QWORD PTR [rip+0x9ab3]        # 0x14000c038
   140002585:	lea    rbp,[rip+0x9aac]        # 0x14000c038
   14000258c:	cmp    rcx,rbp
   14000258f:	je     0x1400025a5
   140002591:	test   BYTE PTR [rcx+0x1c],0x1
   140002595:	je     0x1400025a5
   140002597:	mov    rcx,QWORD PTR [rcx+0x10]
   14000259b:	mov    edx,0x30
   1400025a0:	call   0x140001180
   1400025a5:	lea    rcx,[rip+0xa86c]        # 0x14000ce18
   1400025ac:	call   QWORD PTR [rip+0x6d46]        # 0x1400092f8
   1400025b2:	mov    bl,BYTE PTR [rip+0xa900]        # 0x14000ceb8
   1400025b8:	test   bl,bl
   1400025ba:	jne    0x1400025c6
   1400025bc:	mov    rax,QWORD PTR [rdi]
   1400025bf:	mov    QWORD PTR [rip+0xa8d2],rax        # 0x14000ce98
   1400025c6:	lea    rcx,[rip+0xa84b]        # 0x14000ce18
   1400025cd:	call   QWORD PTR [rip+0x6d1d]        # 0x1400092f0
   1400025d3:	test   bl,bl
   1400025d5:	je     0x140002609
   1400025d7:	mov    rcx,QWORD PTR [rdi]
   1400025da:	xor    edx,edx
   1400025dc:	call   QWORD PTR [rip+0x6ade]        # 0x1400090c0
   1400025e2:	mov    rcx,QWORD PTR [rip+0x9a4f]        # 0x14000c038
   1400025e9:	cmp    rcx,rbp
   1400025ec:	je     0x140002605
   1400025ee:	test   BYTE PTR [rcx+0x1c],0x1
   1400025f2:	je     0x140002605
   1400025f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025f8:	mov    edx,0x31
   1400025fd:	xor    r9d,r9d
   140002600:	call   0x1400011ac
   140002605:	xor    al,al
   140002607:	jmp    0x14000262f
   140002609:	mov    rcx,QWORD PTR [rip+0x9a28]        # 0x14000c038
   140002610:	cmp    rcx,rbp
   140002613:	je     0x14000262d
   140002615:	test   BYTE PTR [rcx+0x1c],0x1
   140002619:	je     0x14000262d
   14000261b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000261f:	mov    edx,0x32
   140002624:	lea    r9d,[rdx-0x31]
   140002628:	call   0x1400011ac
   14000262d:	mov    al,0x1
   14000262f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002634:	mov    rbp,QWORD PTR [rsp+0x38]
   140002639:	add    rsp,0x20
   14000263d:	pop    rdi
   14000263e:	ret    
   14000263f:	int3   
   140002640:	int3   
   140002641:	int3   
   140002642:	int3   
   140002643:	int3   
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	mov    QWORD PTR [rsp+0x8],rbx
   14000264d:	mov    QWORD PTR [rsp+0x10],rbp
   140002652:	push   rdi
   140002653:	sub    rsp,0x20
   140002657:	mov    rdi,rcx
   14000265a:	mov    rcx,QWORD PTR [rip+0x99d7]        # 0x14000c038
   140002661:	lea    rbp,[rip+0x99d0]        # 0x14000c038
   140002668:	cmp    rcx,rbp
   14000266b:	je     0x140002681
   14000266d:	test   BYTE PTR [rcx+0x1c],0x1
   140002671:	je     0x140002681
   140002673:	mov    rcx,QWORD PTR [rcx+0x10]
   140002677:	mov    edx,0x33
   14000267c:	call   0x140001180
   140002681:	lea    rcx,[rip+0xa790]        # 0x14000ce18
   140002688:	call   QWORD PTR [rip+0x6c6a]        # 0x1400092f8
   14000268e:	mov    bl,BYTE PTR [rip+0xa824]        # 0x14000ceb8
   140002694:	test   bl,bl
   140002696:	jne    0x1400026a2
   140002698:	mov    rax,QWORD PTR [rdi]
   14000269b:	mov    QWORD PTR [rip+0xa80e],rax        # 0x14000ceb0
   1400026a2:	lea    rcx,[rip+0xa76f]        # 0x14000ce18
   1400026a9:	call   QWORD PTR [rip+0x6c41]        # 0x1400092f0
   1400026af:	test   bl,bl
   1400026b1:	je     0x1400026e5
   1400026b3:	mov    rcx,QWORD PTR [rdi]
   1400026b6:	xor    edx,edx
   1400026b8:	call   QWORD PTR [rip+0x69c2]        # 0x140009080
   1400026be:	mov    rcx,QWORD PTR [rip+0x9973]        # 0x14000c038
   1400026c5:	cmp    rcx,rbp
   1400026c8:	je     0x1400026e1
   1400026ca:	test   BYTE PTR [rcx+0x1c],0x1
   1400026ce:	je     0x1400026e1
   1400026d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026d4:	mov    edx,0x34
   1400026d9:	xor    r9d,r9d
   1400026dc:	call   0x1400011ac
   1400026e1:	xor    al,al
   1400026e3:	jmp    0x14000270b
   1400026e5:	mov    rcx,QWORD PTR [rip+0x994c]        # 0x14000c038
   1400026ec:	cmp    rcx,rbp
   1400026ef:	je     0x140002709
   1400026f1:	test   BYTE PTR [rcx+0x1c],0x1
   1400026f5:	je     0x140002709
   1400026f7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026fb:	mov    edx,0x35
   140002700:	lea    r9d,[rdx-0x34]
   140002704:	call   0x1400011ac
   140002709:	mov    al,0x1
   14000270b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002710:	mov    rbp,QWORD PTR [rsp+0x38]
   140002715:	add    rsp,0x20
   140002719:	pop    rdi
   14000271a:	ret    
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	int3   
   140002721:	int3   
   140002722:	int3   
   140002723:	int3   
   140002724:	mov    QWORD PTR [rsp+0x8],rbx
   140002729:	mov    QWORD PTR [rsp+0x10],rbp
   14000272e:	push   rdi
   14000272f:	sub    rsp,0x30
   140002733:	mov    rdi,rcx
   140002736:	mov    rcx,QWORD PTR [rip+0x98fb]        # 0x14000c038
   14000273d:	lea    rbp,[rip+0x98f4]        # 0x14000c038
   140002744:	cmp    rcx,rbp
   140002747:	je     0x14000275d
   140002749:	test   BYTE PTR [rcx+0x1c],0x1
   14000274d:	je     0x14000275d
   14000274f:	mov    rcx,QWORD PTR [rcx+0x10]
   140002753:	mov    edx,0x36
   140002758:	call   0x140001180
   14000275d:	lea    rcx,[rip+0xa6b4]        # 0x14000ce18
   140002764:	call   QWORD PTR [rip+0x6b8e]        # 0x1400092f8
   14000276a:	mov    rax,QWORD PTR [rip+0xa67f]        # 0x14000cdf0
   140002771:	lea    rcx,[rip+0xa6a0]        # 0x14000ce18
   140002778:	mov    bl,BYTE PTR [rip+0xa73a]        # 0x14000ceb8
   14000277e:	test   bl,bl
   140002780:	cmove  rax,rdi
   140002784:	mov    QWORD PTR [rip+0xa665],rax        # 0x14000cdf0
   14000278b:	call   QWORD PTR [rip+0x6b5f]        # 0x1400092f0
   140002791:	test   bl,bl
   140002793:	je     0x14000280b
   140002795:	test   rdi,rdi
   140002798:	je     0x1400027d7
   14000279a:	lea    rax,[rip+0xa6df]        # 0x14000ce80
   1400027a1:	xor    edx,edx
   1400027a3:	mov    QWORD PTR [rsp+0x20],rax
   1400027a8:	lea    r8,[rsp+0x20]
   1400027ad:	lea    rax,[rip+0x49fc]        # 0x1400071b0
   1400027b4:	mov    rcx,rdi
   1400027b7:	mov    QWORD PTR [rsp+0x28],rax
   1400027bc:	call   QWORD PTR [rip+0x68ee]        # 0x1400090b0
   1400027c2:	mov    rcx,QWORD PTR [rip+0xa6bf]        # 0x14000ce88
   1400027c9:	test   rcx,rcx
   1400027cc:	je     0x1400027d7
   1400027ce:	or     edx,0xffffffff
   1400027d1:	call   QWORD PTR [rip+0x6af9]        # 0x1400092d0
   1400027d7:	and    QWORD PTR [rip+0xa611],0x0        # 0x14000cdf0
   1400027df:	mov    rcx,QWORD PTR [rip+0x9852]        # 0x14000c038
   1400027e6:	mov    ebx,0x3e3
   1400027eb:	cmp    rcx,rbp
   1400027ee:	je     0x140002807
   1400027f0:	test   BYTE PTR [rcx+0x1c],0x1
   1400027f4:	je     0x140002807
   1400027f6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400027fa:	mov    edx,0x37
   1400027ff:	mov    r9d,ebx
   140002802:	call   0x1400011ac
   140002807:	mov    eax,ebx
   140002809:	jmp    0x140002830
   14000280b:	mov    rcx,QWORD PTR [rip+0x9826]        # 0x14000c038
   140002812:	cmp    rcx,rbp
   140002815:	je     0x14000282e
   140002817:	test   BYTE PTR [rcx+0x1c],0x1
   14000281b:	je     0x14000282e
   14000281d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002821:	mov    edx,0x38
   140002826:	xor    r9d,r9d
   140002829:	call   0x1400011ac
   14000282e:	xor    eax,eax
   140002830:	mov    rbx,QWORD PTR [rsp+0x40]
   140002835:	mov    rbp,QWORD PTR [rsp+0x48]
   14000283a:	add    rsp,0x30
   14000283e:	pop    rdi
   14000283f:	ret    
   140002840:	int3   
   140002841:	int3   
   140002842:	int3   
   140002843:	int3   
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	mov    QWORD PTR [rsp+0x8],rbx
   14000284d:	mov    QWORD PTR [rsp+0x10],rbp
   140002852:	push   rdi
   140002853:	sub    rsp,0x30
   140002857:	mov    rbx,rcx
   14000285a:	mov    rcx,QWORD PTR [rip+0x97d7]        # 0x14000c038
   140002861:	lea    rbp,[rip+0x97d0]        # 0x14000c038
   140002868:	cmp    rcx,rbp
   14000286b:	je     0x140002881
   14000286d:	test   BYTE PTR [rcx+0x1c],0x1
   140002871:	je     0x140002881
   140002873:	mov    rcx,QWORD PTR [rcx+0x10]
   140002877:	mov    edx,0x39
   14000287c:	call   0x140001180
   140002881:	lea    rcx,[rip+0xa590]        # 0x14000ce18
   140002888:	call   QWORD PTR [rip+0x6a6a]        # 0x1400092f8
   14000288e:	mov    dil,BYTE PTR [rip+0xa623]        # 0x14000ceb8
   140002895:	test   dil,dil
   140002898:	jne    0x1400028a4
   14000289a:	mov    rax,QWORD PTR [rbx]
   14000289d:	mov    QWORD PTR [rip+0xa62c],rax        # 0x14000ced0
   1400028a4:	lea    rcx,[rip+0xa56d]        # 0x14000ce18
   1400028ab:	call   QWORD PTR [rip+0x6a3f]        # 0x1400092f0
   1400028b1:	test   dil,dil
   1400028b4:	je     0x140002927
   1400028b6:	mov    rcx,QWORD PTR [rbx]
   1400028b9:	test   rcx,rcx
   1400028bc:	je     0x1400028f8
   1400028be:	lea    rax,[rip+0xa5bb]        # 0x14000ce80
   1400028c5:	xor    edx,edx
   1400028c7:	mov    QWORD PTR [rsp+0x20],rax
   1400028cc:	lea    r8,[rsp+0x20]
   1400028d1:	lea    rax,[rip+0x48d8]        # 0x1400071b0
   1400028d8:	mov    QWORD PTR [rsp+0x28],rax
   1400028dd:	call   QWORD PTR [rip+0x67bd]        # 0x1400090a0
   1400028e3:	mov    rcx,QWORD PTR [rip+0xa59e]        # 0x14000ce88
   1400028ea:	test   rcx,rcx
   1400028ed:	je     0x1400028f8
   1400028ef:	or     edx,0xffffffff
   1400028f2:	call   QWORD PTR [rip+0x69d8]        # 0x1400092d0
   1400028f8:	and    QWORD PTR [rip+0xa5d0],0x0        # 0x14000ced0
   140002900:	mov    rcx,QWORD PTR [rip+0x9731]        # 0x14000c038
   140002907:	cmp    rcx,rbp
   14000290a:	je     0x140002923
   14000290c:	test   BYTE PTR [rcx+0x1c],0x1
   140002910:	je     0x140002923
   140002912:	mov    rcx,QWORD PTR [rcx+0x10]
   140002916:	mov    edx,0x3a
   14000291b:	xor    r9d,r9d
   14000291e:	call   0x1400011ac
   140002923:	xor    al,al
   140002925:	jmp    0x14000294d
   140002927:	mov    rcx,QWORD PTR [rip+0x970a]        # 0x14000c038
   14000292e:	cmp    rcx,rbp
   140002931:	je     0x14000294b
   140002933:	test   BYTE PTR [rcx+0x1c],0x1
   140002937:	je     0x14000294b
   140002939:	mov    rcx,QWORD PTR [rcx+0x10]
   14000293d:	mov    edx,0x3b
   140002942:	lea    r9d,[rdx-0x3a]
   140002946:	call   0x1400011ac
   14000294b:	mov    al,0x1
   14000294d:	mov    rbx,QWORD PTR [rsp+0x40]
   140002952:	mov    rbp,QWORD PTR [rsp+0x48]
   140002957:	add    rsp,0x30
   14000295b:	pop    rdi
   14000295c:	ret    
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	int3   
   140002961:	int3   
   140002962:	int3   
   140002963:	int3   
   140002964:	mov    QWORD PTR [rsp+0x8],rbx
   140002969:	mov    QWORD PTR [rsp+0x10],rdx
   14000296e:	push   rsi
   14000296f:	sub    rsp,0x40
   140002973:	mov    ebx,ecx
   140002975:	mov    rcx,QWORD PTR [rip+0x96bc]        # 0x14000c038
   14000297c:	lea    rsi,[rip+0x96b5]        # 0x14000c038
   140002983:	cmp    rcx,rsi
   140002986:	je     0x14000299c
   140002988:	test   BYTE PTR [rcx+0x1c],0x1
   14000298c:	je     0x14000299c
   14000298e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002992:	mov    edx,0x3c
   140002997:	call   0x140001180
   14000299c:	and    QWORD PTR [rsp+0x30],0x0
   1400029a2:	lea    rax,[rsp+0x58]
   1400029a7:	and    DWORD PTR [rsp+0x28],0x0
   1400029ac:	mov    r9d,0x400
   1400029b2:	and    QWORD PTR [rsp+0x58],0x0
   1400029b8:	mov    r8d,ebx
   1400029bb:	xor    edx,edx
   1400029bd:	mov    QWORD PTR [rsp+0x20],rax
   1400029c2:	mov    ecx,0x1300
   1400029c7:	call   QWORD PTR [rip+0x6843]        # 0x140009210
   1400029cd:	test   eax,eax
   1400029cf:	je     0x1400029f2
   1400029d1:	lea    rcx,[rip+0x71c8]        # 0x140009ba0
   1400029d8:	call   0x140001804
   1400029dd:	mov    rcx,QWORD PTR [rsp+0x58]
   1400029e2:	call   0x140001804
   1400029e7:	mov    rcx,QWORD PTR [rsp+0x58]
   1400029ec:	call   QWORD PTR [rip+0x67d6]        # 0x1400091c8
   1400029f2:	mov    rcx,QWORD PTR [rip+0x963f]        # 0x14000c038
   1400029f9:	cmp    rcx,rsi
   1400029fc:	je     0x140002a12
   1400029fe:	test   BYTE PTR [rcx+0x1c],0x1
   140002a02:	je     0x140002a12
   140002a04:	mov    rcx,QWORD PTR [rcx+0x10]
   140002a08:	mov    edx,0x3d
   140002a0d:	call   0x140001180
   140002a12:	mov    rbx,QWORD PTR [rsp+0x50]
   140002a17:	add    rsp,0x40
   140002a1b:	pop    rsi
   140002a1c:	ret    
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	int3   
   140002a21:	int3   
   140002a22:	int3   
   140002a23:	int3   
   140002a24:	mov    rax,rsp
   140002a27:	push   rbx
   140002a28:	sub    rsp,0x50
   140002a2c:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140002a34:	mov    ebx,ecx
   140002a36:	and    QWORD PTR [rax+0x18],0x0
   140002a3b:	and    QWORD PTR [rax-0x28],0x0
   140002a40:	and    DWORD PTR [rax-0x30],0x0
   140002a44:	lea    rax,[rax+0x18]
   140002a48:	mov    QWORD PTR [rsp+0x20],rax
   140002a4d:	mov    r9d,0x400
   140002a53:	mov    r8d,ecx
   140002a56:	xor    edx,edx
   140002a58:	mov    ecx,0x1300
   140002a5d:	call   QWORD PTR [rip+0x67ad]        # 0x140009210
   140002a63:	test   eax,eax
   140002a65:	je     0x140002a8d
   140002a67:	lea    rcx,[rip+0x7152]        # 0x140009bc0
   140002a6e:	call   0x140001804
   140002a73:	mov    rcx,QWORD PTR [rsp+0x70]
   140002a78:	call   0x140001804
   140002a7d:	mov    rcx,QWORD PTR [rsp+0x70]
   140002a82:	call   QWORD PTR [rip+0x6740]        # 0x1400091c8
   140002a88:	jmp    0x140002b19
   140002a8d:	xor    edx,edx
   140002a8f:	lea    r8d,[rdx+0x2]
   140002a93:	lea    rcx,[rip+0x714e]        # 0x140009be8
   140002a9a:	call   QWORD PTR [rip+0x6758]        # 0x1400091f8
   140002aa0:	mov    rdx,rax
   140002aa3:	lea    rcx,[rsp+0x40]
   140002aa8:	call   QWORD PTR [rip+0x6582]        # 0x140009030
   140002aae:	nop
   140002aaf:	mov    rdx,QWORD PTR [rsp+0x40]
   140002ab4:	test   rdx,rdx
   140002ab7:	je     0x140002b0e
   140002ab9:	and    QWORD PTR [rsp+0x78],0x0
   140002abf:	and    QWORD PTR [rsp+0x30],0x0
   140002ac5:	and    DWORD PTR [rsp+0x28],0x0
   140002aca:	lea    rax,[rsp+0x78]
   140002acf:	mov    QWORD PTR [rsp+0x20],rax
   140002ad4:	mov    r9d,0x400
   140002ada:	mov    r8d,ebx
   140002add:	mov    ecx,0xb00
   140002ae2:	call   QWORD PTR [rip+0x6728]        # 0x140009210
   140002ae8:	test   eax,eax
   140002aea:	je     0x140002b0e
   140002aec:	lea    rcx,[rip+0x70cd]        # 0x140009bc0
   140002af3:	call   0x140001804
   140002af8:	mov    rcx,QWORD PTR [rsp+0x78]
   140002afd:	call   0x140001804
   140002b02:	mov    rcx,QWORD PTR [rsp+0x78]
   140002b07:	call   QWORD PTR [rip+0x66bb]        # 0x1400091c8
   140002b0d:	nop
   140002b0e:	lea    rcx,[rsp+0x40]
   140002b13:	call   QWORD PTR [rip+0x652f]        # 0x140009048
   140002b19:	add    rsp,0x50
   140002b1d:	pop    rbx
   140002b1e:	ret    
   140002b1f:	int3   
   140002b20:	int3   
   140002b21:	int3   
   140002b22:	int3   
   140002b23:	int3   
   140002b24:	int3   
   140002b25:	int3   
   140002b26:	int3   
   140002b27:	int3   
   140002b28:	mov    QWORD PTR [rsp+0x18],rbx
   140002b2d:	mov    QWORD PTR [rsp+0x20],rsi
   140002b32:	push   rdi
   140002b33:	mov    eax,0x2030
   140002b38:	call   0x140008070
   140002b3d:	sub    rsp,rax
   140002b40:	mov    rax,QWORD PTR [rip+0x94c1]        # 0x14000c008
   140002b47:	xor    rax,rsp
   140002b4a:	mov    QWORD PTR [rsp+0x2020],rax
   140002b52:	mov    rdi,rdx
   140002b55:	mov    ebx,ecx
   140002b57:	mov    rcx,QWORD PTR [rip+0x94da]        # 0x14000c038
   140002b5e:	lea    rsi,[rip+0x94d3]        # 0x14000c038
   140002b65:	cmp    rcx,rsi
   140002b68:	je     0x140002b7e
   140002b6a:	test   BYTE PTR [rcx+0x1c],0x1
   140002b6e:	je     0x140002b7e
   140002b70:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b74:	mov    edx,0x3e
   140002b79:	call   0x140001180
   140002b7e:	cmp    ebx,0x8033805b
   140002b84:	jne    0x140002bc7
   140002b86:	xor    ecx,ecx
   140002b88:	call   QWORD PTR [rip+0x6662]        # 0x1400091f0
   140002b8e:	mov    r9d,0x1000
   140002b94:	lea    r8,[rsp+0x20]
   140002b99:	mov    rcx,rax
   140002b9c:	mov    edx,0x7
   140002ba1:	call   QWORD PTR [rip+0x6641]        # 0x1400091e8
   140002ba7:	test   eax,eax
   140002ba9:	je     0x140002bbe
   140002bab:	lea    rcx,[rip+0x7056]        # 0x140009c08
   140002bb2:	call   0x140001804
   140002bb7:	lea    rcx,[rsp+0x20]
   140002bbc:	jmp    0x140002bdb
   140002bbe:	lea    rcx,[rip+0x7053]        # 0x140009c18
   140002bc5:	jmp    0x140002bdb
   140002bc7:	test   rdi,rdi
   140002bca:	je     0x140002be2
   140002bcc:	lea    rcx,[rip+0x6fed]        # 0x140009bc0
   140002bd3:	call   0x140001804
   140002bd8:	mov    rcx,rdi
   140002bdb:	call   0x140001804
   140002be0:	jmp    0x140002be9
   140002be2:	mov    ecx,ebx
   140002be4:	call   0x140002a24
   140002be9:	mov    rcx,QWORD PTR [rip+0x9448]        # 0x14000c038
   140002bf0:	cmp    rcx,rsi
   140002bf3:	je     0x140002c09
   140002bf5:	test   BYTE PTR [rcx+0x1c],0x1
   140002bf9:	je     0x140002c09
   140002bfb:	mov    rcx,QWORD PTR [rcx+0x10]
   140002bff:	mov    edx,0x3f
   140002c04:	call   0x140001180
   140002c09:	mov    rcx,QWORD PTR [rsp+0x2020]
   140002c11:	xor    rcx,rsp
   140002c14:	call   0x140007680
   140002c19:	lea    r11,[rsp+0x2030]
   140002c21:	mov    rbx,QWORD PTR [r11+0x20]
   140002c25:	mov    rsi,QWORD PTR [r11+0x28]
   140002c29:	mov    rsp,r11
   140002c2c:	pop    rdi
   140002c2d:	ret    
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	int3   
   140002c31:	int3   
   140002c32:	int3   
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	push   rdi
   140002c46:	sub    rsp,0x20
   140002c4a:	mov    ebx,edx
   140002c4c:	mov    rdi,rcx
   140002c4f:	call   0x140002c78
   140002c54:	test   bl,0x1
   140002c57:	je     0x140002c64
   140002c59:	xor    edx,edx
   140002c5b:	mov    rcx,rdi
   140002c5e:	call   QWORD PTR [rip+0x63bc]        # 0x140009020
   140002c64:	mov    rax,rdi
   140002c67:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c6c:	add    rsp,0x20
   140002c70:	pop    rdi
   140002c71:	ret    
   140002c72:	int3   
   140002c73:	int3   
   140002c74:	int3   
   140002c75:	int3   
   140002c76:	int3   
   140002c77:	int3   
   140002c78:	mov    QWORD PTR [rsp+0x8],rbx
   140002c7d:	push   rsi
   140002c7e:	sub    rsp,0x20
   140002c82:	lea    rax,[rip+0x7257]        # 0x140009ee0
   140002c89:	mov    rbx,rcx
   140002c8c:	mov    QWORD PTR [rcx],rax
   140002c8f:	mov    rcx,QWORD PTR [rip+0x93a2]        # 0x14000c038
   140002c96:	lea    rsi,[rip+0x939b]        # 0x14000c038
   140002c9d:	cmp    rcx,rsi
   140002ca0:	je     0x140002cbd
   140002ca2:	test   BYTE PTR [rcx+0x1c],0x1
   140002ca6:	je     0x140002cbd
   140002ca8:	mov    rcx,QWORD PTR [rcx+0x10]
   140002cac:	mov    edx,0x41
   140002cb1:	call   0x140001180
   140002cb6:	mov    rcx,QWORD PTR [rip+0x937b]        # 0x14000c038
   140002cbd:	cmp    QWORD PTR [rbx+0x8],0x0
   140002cc2:	je     0x140002cd5
   140002cc4:	mov    rcx,QWORD PTR [rbx+0x8]
   140002cc8:	call   QWORD PTR [rip+0x64c2]        # 0x140009190
   140002cce:	mov    rcx,QWORD PTR [rip+0x9363]        # 0x14000c038
   140002cd5:	cmp    QWORD PTR [rbx+0x18],0x0
   140002cda:	je     0x140002ced
   140002cdc:	mov    rcx,QWORD PTR [rbx+0x18]
   140002ce0:	call   QWORD PTR [rip+0x64aa]        # 0x140009190
   140002ce6:	mov    rcx,QWORD PTR [rip+0x934b]        # 0x14000c038
   140002ced:	cmp    QWORD PTR [rbx+0x28],0x0
   140002cf2:	je     0x140002d05
   140002cf4:	mov    rcx,QWORD PTR [rbx+0x28]
   140002cf8:	call   QWORD PTR [rip+0x6492]        # 0x140009190
   140002cfe:	mov    rcx,QWORD PTR [rip+0x9333]        # 0x14000c038
   140002d05:	cmp    QWORD PTR [rbx+0x30],0x0
   140002d0a:	je     0x140002d1d
   140002d0c:	mov    rcx,QWORD PTR [rbx+0x30]
   140002d10:	call   QWORD PTR [rip+0x647a]        # 0x140009190
   140002d16:	mov    rcx,QWORD PTR [rip+0x931b]        # 0x14000c038
   140002d1d:	cmp    rcx,rsi
   140002d20:	je     0x140002d36
   140002d22:	test   BYTE PTR [rcx+0x1c],0x1
   140002d26:	je     0x140002d36
   140002d28:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d2c:	mov    edx,0x42
   140002d31:	call   0x140001180
   140002d36:	mov    rcx,QWORD PTR [rbx+0x148]
   140002d3d:	test   rcx,rcx
   140002d40:	je     0x140002d50
   140002d42:	call   QWORD PTR [rip+0x6448]        # 0x140009190
   140002d48:	and    QWORD PTR [rbx+0x148],0x0
   140002d50:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d55:	add    rsp,0x20
   140002d59:	pop    rsi
   140002d5a:	ret    
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	int3   
   140002d61:	int3   
   140002d62:	int3   
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	mov    QWORD PTR [rsp+0x8],rbx
   140002d75:	mov    QWORD PTR [rsp+0x10],rsi
   140002d7a:	mov    QWORD PTR [rsp+0x18],rdi
   140002d7f:	push   r14
   140002d81:	sub    rsp,0x40
   140002d85:	mov    rsi,rcx
   140002d88:	mov    rcx,QWORD PTR [rip+0x92a9]        # 0x14000c038
   140002d8f:	lea    r14,[rip+0x92a2]        # 0x14000c038
   140002d96:	cmp    rcx,r14
   140002d99:	je     0x140002dcf
   140002d9b:	test   BYTE PTR [rcx+0x1c],0x1
   140002d9f:	je     0x140002db6
   140002da1:	mov    rcx,QWORD PTR [rcx+0x10]
   140002da5:	mov    edx,0x43
   140002daa:	call   0x140001180
   140002daf:	mov    rcx,QWORD PTR [rip+0x9282]        # 0x14000c038
   140002db6:	cmp    rcx,r14
   140002db9:	je     0x140002dcf
   140002dbb:	test   BYTE PTR [rcx+0x1c],0x1
   140002dbf:	je     0x140002dcf
   140002dc1:	mov    rcx,QWORD PTR [rcx+0x10]
   140002dc5:	mov    edx,0x45
   140002dca:	call   0x140001180
   140002dcf:	mov    rcx,QWORD PTR [rsi+0x18]
   140002dd3:	call   QWORD PTR [rip+0x64ef]        # 0x1400092c8
   140002dd9:	mov    rax,QWORD PTR [rsi+0x20]
   140002ddd:	xor    edi,edi
   140002ddf:	mov    QWORD PTR [rsp+0x30],rax
   140002de4:	mov    rax,QWORD PTR [rsi+0x28]
   140002de8:	mov    QWORD PTR [rsp+0x38],rax
   140002ded:	xor    r8d,r8d
   140002df0:	mov    DWORD PTR [rsp+0x20],edi
   140002df4:	or     r9d,0xffffffff
   140002df8:	lea    rdx,[rsp+0x30]
   140002dfd:	lea    ecx,[r8+0x2]
   140002e01:	call   QWORD PTR [rip+0x64b9]        # 0x1400092c0
   140002e07:	test   eax,eax
   140002e09:	jne    0x140002e95
   140002e0f:	cmp    BYTE PTR [rsi+0x39],0x1
   140002e13:	je     0x140002e7c
   140002e15:	mov    rax,QWORD PTR [rsi]
   140002e18:	mov    rbx,QWORD PTR [rax+0x8]
   140002e1c:	mov    rcx,rbx
   140002e1f:	call   QWORD PTR [rip+0x6623]        # 0x140009448
   140002e25:	mov    rcx,rsi
   140002e28:	call   rbx
   140002e2a:	mov    ebx,eax
   140002e2c:	test   eax,eax
   140002e2e:	jne    0x140002e55
   140002e30:	cmp    BYTE PTR [rsi+0x39],0x1
   140002e34:	jne    0x140002ded
   140002e36:	mov    rcx,QWORD PTR [rip+0x91fb]        # 0x14000c038
   140002e3d:	cmp    rcx,r14
   140002e40:	je     0x140002ed6
   140002e46:	test   BYTE PTR [rcx+0x1c],0x1
   140002e4a:	je     0x140002ed6
   140002e50:	lea    edx,[rax+0x48]
   140002e53:	jmp    0x140002eca
   140002e55:	mov    rcx,QWORD PTR [rip+0x91dc]        # 0x14000c038
   140002e5c:	cmp    rcx,r14
   140002e5f:	je     0x140002e78
   140002e61:	test   BYTE PTR [rcx+0x1c],0x1
   140002e65:	je     0x140002e78
   140002e67:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e6b:	mov    edx,0x47
   140002e70:	mov    r9d,eax
   140002e73:	call   0x1400011ac
   140002e78:	mov    edi,ebx
   140002e7a:	jmp    0x140002ed6
   140002e7c:	mov    rcx,QWORD PTR [rip+0x91b5]        # 0x14000c038
   140002e83:	cmp    rcx,r14
   140002e86:	je     0x140002ed6
   140002e88:	test   BYTE PTR [rcx+0x1c],0x1
   140002e8c:	je     0x140002ed6
   140002e8e:	mov    edx,0x46
   140002e93:	jmp    0x140002eca
   140002e95:	cmp    eax,0x1
   140002e98:	je     0x140002eb3
   140002e9a:	mov    rcx,QWORD PTR [rip+0x9197]        # 0x14000c038
   140002ea1:	cmp    rcx,r14
   140002ea4:	je     0x140002ed6
   140002ea6:	test   BYTE PTR [rcx+0x1c],0x1
   140002eaa:	je     0x140002ed6
   140002eac:	mov    edx,0x4a
   140002eb1:	jmp    0x140002eca
   140002eb3:	mov    rcx,QWORD PTR [rip+0x917e]        # 0x14000c038
   140002eba:	cmp    rcx,r14
   140002ebd:	je     0x140002ed6
   140002ebf:	test   BYTE PTR [rcx+0x1c],0x1
   140002ec3:	je     0x140002ed6
   140002ec5:	mov    edx,0x49
   140002eca:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ece:	xor    r9d,r9d
   140002ed1:	call   0x1400011ac
   140002ed6:	xor    edx,edx
   140002ed8:	or     ecx,0xffffffff
   140002edb:	call   QWORD PTR [rip+0xb12f]        # 0x14000e010
   140002ee1:	mov    rcx,QWORD PTR [rip+0x9150]        # 0x14000c038
   140002ee8:	cmp    rcx,r14
   140002eeb:	je     0x140002f04
   140002eed:	test   BYTE PTR [rcx+0x1c],0x1
   140002ef1:	je     0x140002f04
   140002ef3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ef7:	mov    edx,0x44
   140002efc:	mov    r9d,edi
   140002eff:	call   0x1400011ac
   140002f04:	mov    rbx,QWORD PTR [rsp+0x50]
   140002f09:	mov    eax,edi
   140002f0b:	mov    rdi,QWORD PTR [rsp+0x60]
   140002f10:	mov    rsi,QWORD PTR [rsp+0x58]
   140002f15:	add    rsp,0x40
   140002f19:	pop    r14
   140002f1b:	ret    
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	int3   
   140002f21:	int3   
   140002f22:	int3   
   140002f23:	int3   
   140002f24:	mov    rax,rsp
   140002f27:	mov    QWORD PTR [rax+0x10],rbx
   140002f2b:	mov    QWORD PTR [rax+0x18],rbp
   140002f2f:	mov    QWORD PTR [rax+0x20],rsi
   140002f33:	mov    QWORD PTR [rax+0x8],rcx
   140002f37:	push   rdi
   140002f38:	push   r12
   140002f3a:	push   r14
   140002f3c:	sub    rsp,0x20
   140002f40:	mov    rsi,r9
   140002f43:	mov    rbp,r8
   140002f46:	mov    r14,rdx
   140002f49:	mov    rcx,QWORD PTR [rip+0x90e8]        # 0x14000c038
   140002f50:	lea    r12,[rip+0x90e1]        # 0x14000c038
   140002f57:	cmp    rcx,r12
   140002f5a:	je     0x140002f77
   140002f5c:	test   BYTE PTR [rcx+0x1c],0x1
   140002f60:	je     0x140002f77
   140002f62:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f66:	mov    edx,0x4c
   140002f6b:	call   0x140001180
   140002f70:	mov    rcx,QWORD PTR [rip+0x90c1]        # 0x14000c038
   140002f77:	xor    ebx,ebx
   140002f79:	test   r14,r14
   140002f7c:	je     0x14000302b
   140002f82:	test   rbp,rbp
   140002f85:	je     0x14000302b
   140002f8b:	test   rsi,rsi
   140002f8e:	je     0x14000302b
   140002f94:	mov    edx,DWORD PTR [rsp+0x68]
   140002f98:	cmp    QWORD PTR [rsp+0x60],rbx
   140002f9d:	jne    0x140002fa7
   140002f9f:	test   edx,edx
   140002fa1:	jne    0x14000302b
   140002fa7:	mov    edi,0x1
   140002fac:	test   edx,edx
   140002fae:	je     0x14000300e
   140002fb0:	mov    rcx,QWORD PTR [rsp+0x60]
   140002fb5:	lea    r8,[rsp+0x40]
   140002fba:	mov    DWORD PTR [rsp+0x40],edi
   140002fbe:	call   0x140001eb4
   140002fc3:	test   eax,eax
   140002fc5:	je     0x140003000
   140002fc7:	cmp    DWORD PTR [rsp+0x40],ebx
   140002fcb:	jne    0x140002ff2
   140002fcd:	mov    rcx,rsi
   140002fd0:	call   0x14000231c
   140002fd5:	mov    rcx,rbp
   140002fd8:	call   0x14000240c
   140002fdd:	mov    rcx,r14
   140002fe0:	call   0x1400024bc
   140002fe5:	mov    ecx,DWORD PTR [rip+0x9eed]        # 0x14000ced8
   140002feb:	call   QWORD PTR [rip+0x6267]        # 0x140009258
   140002ff1:	int3   
   140002ff2:	cmp    DWORD PTR [rsp+0x40],edi
   140002ff6:	jne    0x140003007
   140002ff8:	xchg   DWORD PTR [rip+0x9ebe],ebx        # 0x14000cebc
   140002ffe:	jmp    0x140003007
   140003000:	call   0x140001cc8
   140003005:	mov    edi,eax
   140003007:	mov    rcx,QWORD PTR [rip+0x902a]        # 0x14000c038
   14000300e:	cmp    rcx,r12
   140003011:	je     0x140003027
   140003013:	test   BYTE PTR [rcx+0x1c],0x1
   140003017:	je     0x140003027
   140003019:	mov    rcx,QWORD PTR [rcx+0x10]
   14000301d:	mov    edx,0x4e
   140003022:	call   0x140001180
   140003027:	mov    eax,edi
   140003029:	jmp    0x140003058
   14000302b:	mov    ecx,0x57
   140003030:	call   QWORD PTR [rip+0x6112]        # 0x140009148
   140003036:	mov    rcx,QWORD PTR [rip+0x8ffb]        # 0x14000c038
   14000303d:	cmp    rcx,r12
   140003040:	je     0x140003056
   140003042:	test   BYTE PTR [rcx+0x1c],0x1
   140003046:	je     0x140003056
   140003048:	mov    rcx,QWORD PTR [rcx+0x10]
   14000304c:	mov    edx,0x4d
   140003051:	call   0x140001180
   140003056:	xor    eax,eax
   140003058:	mov    rbx,QWORD PTR [rsp+0x48]
   14000305d:	mov    rbp,QWORD PTR [rsp+0x50]
   140003062:	mov    rsi,QWORD PTR [rsp+0x58]
   140003067:	add    rsp,0x20
   14000306b:	pop    r14
   14000306d:	pop    r12
   14000306f:	pop    rdi
   140003070:	ret    
   140003071:	int3   
   140003072:	int3   
   140003073:	int3   
   140003074:	int3   
   140003075:	int3   
   140003076:	int3   
   140003077:	int3   
   140003078:	int3   
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	mov    rax,rsp
   140003083:	push   rbp
   140003084:	push   rsi
   140003085:	push   rdi
   140003086:	push   r12
   140003088:	push   r13
   14000308a:	push   r14
   14000308c:	push   r15
   14000308e:	lea    rbp,[rax-0x5f]
   140003092:	sub    rsp,0xa0
   140003099:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   1400030a1:	mov    QWORD PTR [rax+0x8],rbx
   1400030a5:	mov    rbx,rcx
   1400030a8:	lea    rdi,[rip+0x8f89]        # 0x14000c038
   1400030af:	mov    rcx,QWORD PTR [rip+0x8f82]        # 0x14000c038
   1400030b6:	cmp    rcx,rdi
   1400030b9:	je     0x1400030cf
   1400030bb:	test   BYTE PTR [rcx+0x1c],0x1
   1400030bf:	je     0x1400030cf
   1400030c1:	mov    edx,0x4f
   1400030c6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030ca:	call   0x140001180
   1400030cf:	xor    esi,esi
   1400030d1:	mov    QWORD PTR [rbp-0x21],rsi
   1400030d5:	mov    QWORD PTR [rbp-0x19],rsi
   1400030d9:	mov    QWORD PTR [rbp-0x39],rsi
   1400030dd:	mov    QWORD PTR [rbp-0x29],rsi
   1400030e1:	mov    ecx,0xfffffff6
   1400030e6:	call   QWORD PTR [rip+0x6144]        # 0x140009230
   1400030ec:	mov    r12,rax
   1400030ef:	cmp    rax,0xffffffffffffffff
   1400030f3:	jne    0x140003128
   1400030f5:	call   QWORD PTR [rip+0x6055]        # 0x140009150
   1400030fb:	mov    ebx,eax
   1400030fd:	mov    rcx,QWORD PTR [rip+0x8f34]        # 0x14000c038
   140003104:	cmp    rcx,rdi
   140003107:	je     0x140003121
   140003109:	mov    dil,0x4
   14000310c:	test   BYTE PTR [rcx+0x1c],dil
   140003110:	je     0x140003121
   140003112:	lea    edx,[rsi+0x50]
   140003115:	mov    r9d,eax
   140003118:	mov    rcx,QWORD PTR [rcx+0x10]
   14000311c:	call   0x1400011ac
   140003121:	mov    eax,ebx
   140003123:	jmp    0x14000360c
   140003128:	mov    r15d,0x1
   14000312e:	mov    r14d,esi
   140003131:	lea    r13,[rbx+0x140]
   140003138:	mov    QWORD PTR [rbp+0xf],r13
   14000313c:	lea    rax,[rip+0x406d]        # 0x1400071b0
   140003143:	mov    QWORD PTR [rbp+0x17],rax
   140003147:	xor    eax,eax
   140003149:	mov    QWORD PTR [rbp-0x9],rax
   14000314d:	mov    QWORD PTR [rbp-0x1],rax
   140003151:	mov    QWORD PTR [rbp+0x7],rax
   140003155:	lea    edx,[rax+0x2]
   140003158:	mov    DWORD PTR [rbp-0x9],edx
   14000315b:	mov    dil,0x4
   14000315e:	cmp    r14d,0x1
   140003162:	je     0x140003587
   140003168:	mov    QWORD PTR [rbp+0x7],rsi
   14000316c:	mov    DWORD PTR [rbp-0x1],esi
   14000316f:	mov    DWORD PTR [rbp+0x6f],esi
   140003172:	mov    QWORD PTR [rbp+0x7f],rsi
   140003176:	lea    r8,[rbp+0x6f]
   14000317a:	lea    rdx,[rbp+0x7f]
   14000317e:	mov    rcx,rbx
   140003181:	call   0x140003630
   140003186:	mov    esi,eax
   140003188:	mov    rdx,QWORD PTR [rbp+0x7f]
   14000318c:	lea    rcx,[rbp-0x31]
   140003190:	call   QWORD PTR [rip+0x5ec2]        # 0x140009058
   140003196:	nop
   140003197:	test   esi,esi
   140003199:	jne    0x1400032ca
   14000319f:	cmp    BYTE PTR [rbx+0x39],sil
   1400031a3:	jne    0x1400032ca
   1400031a9:	mov    rcx,QWORD PTR [rip+0x8e88]        # 0x14000c038
   1400031b0:	lea    rax,[rip+0x8e81]        # 0x14000c038
   1400031b7:	cmp    rcx,rax
   1400031ba:	je     0x1400031d2
   1400031bc:	test   BYTE PTR [rcx+0x1c],dil
   1400031c0:	je     0x1400031d2
   1400031c2:	lea    edx,[rsi+0x51]
   1400031c5:	mov    r9d,DWORD PTR [rbp+0x6f]
   1400031c9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400031cd:	call   0x1400011f0
   1400031d2:	mov    rcx,r12
   1400031d5:	call   QWORD PTR [rip+0x5fa5]        # 0x140009180
   1400031db:	mov    esi,eax
   1400031dd:	btr    esi,0xf
   1400031e1:	mov    ecx,0x2
   1400031e6:	cmp    esi,ecx
   1400031e8:	jne    0x140003274
   1400031ee:	mov    eax,ecx
   1400031f0:	lock cmpxchg DWORD PTR [rip+0x9cc4],ecx        # 0x14000cebc
   1400031f8:	cmp    eax,ecx
   1400031fa:	jl     0x140003274
   1400031fc:	mov    rcx,QWORD PTR [rip+0x8e35]        # 0x14000c038
   140003203:	lea    rax,[rip+0x8e2e]        # 0x14000c038
   14000320a:	cmp    rcx,rax
   14000320d:	je     0x140003223
   14000320f:	test   BYTE PTR [rcx+0x1c],dil
   140003213:	je     0x140003223
   140003215:	mov    edx,0x52
   14000321a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000321e:	call   0x140001180
   140003223:	lea    r9,[rbp-0x29]
   140003227:	lea    r8,[rbp-0x39]
   14000322b:	lea    rdx,[rbp-0x19]
   14000322f:	lea    rcx,[rbp-0x21]
   140003233:	call   0x140001aa8
   140003238:	movzx  r15d,al
   14000323c:	xor    esi,esi
   14000323e:	test   al,al
   140003240:	je     0x1400034c0
   140003246:	mov    eax,DWORD PTR [rbp+0x6f]
   140003249:	mov    DWORD PTR [rsp+0x28],eax
   14000324d:	mov    rax,QWORD PTR [rbp+0x7f]
   140003251:	mov    QWORD PTR [rsp+0x20],rax
   140003256:	mov    r9,QWORD PTR [rbp-0x39]
   14000325a:	mov    r8,QWORD PTR [rbp-0x19]
   14000325e:	mov    rdx,QWORD PTR [rbp-0x21]
   140003262:	call   0x140002f24
   140003267:	test   eax,eax
   140003269:	je     0x140003467
   14000326f:	jmp    0x14000341b
   140003274:	xor    ecx,ecx
   140003276:	cmp    DWORD PTR [rbp+0x6f],ecx
   140003279:	je     0x1400032c1
   14000327b:	lea    eax,[rcx+0x1]
   14000327e:	lock cmpxchg DWORD PTR [rip+0x9c36],ecx        # 0x14000cebc
   140003286:	mov    DWORD PTR [rbp+0x77],ecx
   140003289:	lea    rdx,[rbp+0x77]
   14000328d:	mov    rcx,r12
   140003290:	call   QWORD PTR [rip+0x5e52]        # 0x1400090e8
   140003296:	neg    eax
   140003298:	sbb    ecx,ecx
   14000329a:	and    ecx,DWORD PTR [rbp+0x77]
   14000329d:	mov    DWORD PTR [rbp+0x77],ecx
   1400032a0:	mov    rax,QWORD PTR [rbp+0x7f]
   1400032a4:	mov    edx,0x2
   1400032a9:	cmp    esi,edx
   1400032ab:	jne    0x1400032b7
   1400032ad:	test   cl,0x1
   1400032b0:	je     0x1400032b7
   1400032b2:	cmp    BYTE PTR [rax],0x1a
   1400032b5:	je     0x1400032f4
   1400032b7:	mov    QWORD PTR [rbp+0x7],rax
   1400032bb:	mov    eax,DWORD PTR [rbp+0x6f]
   1400032be:	mov    DWORD PTR [rbp-0x1],eax
   1400032c1:	mov    rcx,QWORD PTR [rip+0x8d70]        # 0x14000c038
   1400032c8:	jmp    0x140003301
   1400032ca:	mov    rcx,QWORD PTR [rip+0x8d67]        # 0x14000c038
   1400032d1:	lea    rax,[rip+0x8d60]        # 0x14000c038
   1400032d8:	cmp    rcx,rax
   1400032db:	je     0x1400032fb
   1400032dd:	test   BYTE PTR [rcx+0x1c],dil
   1400032e1:	je     0x1400032fb
   1400032e3:	mov    edx,0x56
   1400032e8:	mov    r9d,esi
   1400032eb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400032ef:	call   0x1400011ac
   1400032f4:	mov    rcx,QWORD PTR [rip+0x8d3d]        # 0x14000c038
   1400032fb:	mov    r14d,0x1
   140003301:	mov    al,BYTE PTR [rbx+0x39]
   140003304:	xor    esi,esi
   140003306:	test   al,al
   140003308:	jne    0x140003429
   14000330e:	cmp    DWORD PTR [rbp+0x6f],esi
   140003311:	jne    0x14000331c
   140003313:	test   r14d,r14d
   140003316:	je     0x140003429
   14000331c:	lea    r9,[rbp-0x29]
   140003320:	lea    r8,[rbp-0x39]
   140003324:	lea    rdx,[rbp-0x19]
   140003328:	lea    rcx,[rbp-0x21]
   14000332c:	call   0x140001aa8
   140003331:	movzx  r15d,al
   140003335:	test   al,al
   140003337:	je     0x14000352c
   14000333d:	mov    rcx,QWORD PTR [rip+0x8cf4]        # 0x14000c038
   140003344:	lea    rax,[rip+0x8ced]        # 0x14000c038
   14000334b:	cmp    rcx,rax
   14000334e:	je     0x14000337d
   140003350:	test   BYTE PTR [rcx+0x1c],dil
   140003354:	je     0x14000337d
   140003356:	lea    rdx,[rip+0x68eb]        # 0x140009c48
   14000335d:	lea    rax,[rip+0x68ec]        # 0x140009c50
   140003364:	test   r14d,r14d
   140003367:	cmovne rax,rdx
   14000336b:	mov    QWORD PTR [rsp+0x20],rax
   140003370:	mov    r9d,DWORD PTR [rbp+0x6f]
   140003374:	mov    rcx,QWORD PTR [rcx+0x10]
   140003378:	call   0x1400012ac
   14000337d:	mov    QWORD PTR [rbp-0x11],rsi
   140003381:	lea    rax,[rbp-0x11]
   140003385:	mov    QWORD PTR [rsp+0x38],rax
   14000338a:	lea    rax,[rbp+0xf]
   14000338e:	mov    QWORD PTR [rsp+0x30],rax
   140003393:	mov    DWORD PTR [rsp+0x28],r14d
   140003398:	lea    rax,[rbp-0x9]
   14000339c:	mov    QWORD PTR [rsp+0x20],rax
   1400033a1:	lea    r9,[rip+0x68b0]        # 0x140009c58
   1400033a8:	xor    r8d,r8d
   1400033ab:	mov    rdx,QWORD PTR [rbp-0x29]
   1400033af:	mov    rcx,QWORD PTR [rbp-0x39]
   1400033b3:	call   QWORD PTR [rip+0x5cd7]        # 0x140009090
   1400033b9:	mov    rcx,QWORD PTR [r13+0x8]
   1400033bd:	test   rcx,rcx
   1400033c0:	je     0x1400033cb
   1400033c2:	or     edx,0xffffffff
   1400033c5:	call   QWORD PTR [rip+0x5f05]        # 0x1400092d0
   1400033cb:	xor    edx,edx
   1400033cd:	mov    rcx,QWORD PTR [rbp-0x11]
   1400033d1:	call   QWORD PTR [rip+0x5cc1]        # 0x140009098
   1400033d7:	mov    rcx,QWORD PTR [rip+0x8c5a]        # 0x14000c038
   1400033de:	lea    rdx,[rip+0x8c53]        # 0x14000c038
   1400033e5:	cmp    rcx,rdx
   1400033e8:	je     0x14000340f
   1400033ea:	test   BYTE PTR [rcx+0x1c],dil
   1400033ee:	je     0x14000340f
   1400033f0:	mov    edx,0x5a
   1400033f5:	mov    r9d,eax
   1400033f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033fc:	call   0x1400011ac
   140003401:	mov    rcx,QWORD PTR [rip+0x8c30]        # 0x14000c038
   140003408:	lea    rdx,[rip+0x8c29]        # 0x14000c038
   14000340f:	cmp    DWORD PTR [rbx+0x150],esi
   140003415:	jne    0x140003504
   14000341b:	xor    r8d,r8d
   14000341e:	mov    dl,0x1
   140003420:	xor    ecx,ecx
   140003422:	call   0x140001bb8
   140003427:	jmp    0x14000344e
   140003429:	cmp    al,0x1
   14000342b:	jne    0x14000344e
   14000342d:	lea    rax,[rip+0x8c04]        # 0x14000c038
   140003434:	cmp    rcx,rax
   140003437:	je     0x14000344e
   140003439:	test   BYTE PTR [rcx+0x1c],dil
   14000343d:	je     0x14000344e
   14000343f:	mov    edx,0x5c
   140003444:	mov    rcx,QWORD PTR [rcx+0x10]
   140003448:	call   0x140001180
   14000344d:	nop
   14000344e:	lea    rcx,[rbp-0x31]
   140003452:	call   QWORD PTR [rip+0x5be0]        # 0x140009038
   140003458:	cmp    r15d,0x1
   14000345c:	jne    0x140003587
   140003462:	jmp    0x14000315e
   140003467:	call   QWORD PTR [rip+0x5ce3]        # 0x140009150
   14000346d:	mov    ebx,eax
   14000346f:	mov    r8b,0x1
   140003472:	mov    dl,r8b
   140003475:	mov    ecx,eax
   140003477:	call   0x140001bb8
   14000347c:	test   al,al
   14000347e:	je     0x140003489
   140003480:	xor    edx,edx
   140003482:	mov    ecx,ebx
   140003484:	call   0x140002b28
   140003489:	mov    rcx,QWORD PTR [rip+0x8ba8]        # 0x14000c038
   140003490:	lea    rax,[rip+0x8ba1]        # 0x14000c038
   140003497:	cmp    rcx,rax
   14000349a:	je     0x140003578
   1400034a0:	test   BYTE PTR [rcx+0x1c],dil
   1400034a4:	je     0x140003578
   1400034aa:	mov    edx,0x55
   1400034af:	mov    r9d,ebx
   1400034b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400034b6:	call   0x1400011ac
   1400034bb:	jmp    0x140003578
   1400034c0:	mov    rcx,QWORD PTR [rip+0x8b71]        # 0x14000c038
   1400034c7:	lea    rbx,[rip+0x8b6a]        # 0x14000c038
   1400034ce:	cmp    rcx,rbx
   1400034d1:	je     0x140003576
   1400034d7:	test   BYTE PTR [rcx+0x1c],dil
   1400034db:	je     0x1400034f2
   1400034dd:	mov    edx,0x53
   1400034e2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400034e6:	call   0x140001180
   1400034eb:	mov    rcx,QWORD PTR [rip+0x8b46]        # 0x14000c038
   1400034f2:	cmp    rcx,rbx
   1400034f5:	je     0x140003576
   1400034f7:	test   BYTE PTR [rcx+0x1c],0x1
   1400034fb:	je     0x140003576
   1400034fd:	mov    edx,0x54
   140003502:	jmp    0x14000356a
   140003504:	cmp    rcx,rdx
   140003507:	je     0x140003524
   140003509:	test   BYTE PTR [rcx+0x1c],0x1
   14000350d:	je     0x140003524
   14000350f:	mov    edx,0x5b
   140003514:	mov    r9d,DWORD PTR [rbx+0x150]
   14000351b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000351f:	call   0x1400011ac
   140003524:	mov    ebx,DWORD PTR [rbx+0x150]
   14000352a:	jmp    0x140003578
   14000352c:	mov    rcx,QWORD PTR [rip+0x8b05]        # 0x14000c038
   140003533:	lea    rbx,[rip+0x8afe]        # 0x14000c038
   14000353a:	cmp    rcx,rbx
   14000353d:	je     0x140003576
   14000353f:	test   BYTE PTR [rcx+0x1c],dil
   140003543:	je     0x14000355a
   140003545:	mov    edx,0x57
   14000354a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000354e:	call   0x140001180
   140003553:	mov    rcx,QWORD PTR [rip+0x8ade]        # 0x14000c038
   14000355a:	cmp    rcx,rbx
   14000355d:	je     0x140003576
   14000355f:	test   BYTE PTR [rcx+0x1c],0x1
   140003563:	je     0x140003576
   140003565:	mov    edx,0x58
   14000356a:	xor    r9d,r9d
   14000356d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003571:	call   0x1400011ac
   140003576:	mov    ebx,esi
   140003578:	lea    rcx,[rbp-0x31]
   14000357c:	call   QWORD PTR [rip+0x5ab6]        # 0x140009038
   140003582:	jmp    0x140003121
   140003587:	test   r15d,r15d
   14000358a:	jne    0x1400035ab
   14000358c:	mov    rcx,QWORD PTR [rip+0x8aa5]        # 0x14000c038
   140003593:	lea    rax,[rip+0x8a9e]        # 0x14000c038
   14000359a:	cmp    rcx,rax
   14000359d:	je     0x1400035d2
   14000359f:	test   BYTE PTR [rcx+0x1c],dil
   1400035a3:	je     0x1400035d2
   1400035a5:	lea    edx,[r15+0x5d]
   1400035a9:	jmp    0x1400035c9
   1400035ab:	mov    rcx,QWORD PTR [rip+0x8a86]        # 0x14000c038
   1400035b2:	lea    rax,[rip+0x8a7f]        # 0x14000c038
   1400035b9:	cmp    rcx,rax
   1400035bc:	je     0x1400035d2
   1400035be:	test   BYTE PTR [rcx+0x1c],dil
   1400035c2:	je     0x1400035d2
   1400035c4:	mov    edx,0x5e
   1400035c9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400035cd:	call   0x140001180
   1400035d2:	mov    BYTE PTR [rbx+0x39],0x1
   1400035d6:	mov    rcx,QWORD PTR [rbx+0x28]
   1400035da:	call   QWORD PTR [rip+0x5ce8]        # 0x1400092c8
   1400035e0:	mov    rcx,QWORD PTR [rip+0x8a51]        # 0x14000c038
   1400035e7:	lea    rax,[rip+0x8a4a]        # 0x14000c038
   1400035ee:	cmp    rcx,rax
   1400035f1:	je     0x14000360a
   1400035f3:	test   BYTE PTR [rcx+0x1c],0x1
   1400035f7:	je     0x14000360a
   1400035f9:	mov    edx,0x5f
   1400035fe:	xor    r9d,r9d
   140003601:	mov    rcx,QWORD PTR [rcx+0x10]
   140003605:	call   0x1400011ac
   14000360a:	xor    eax,eax
   14000360c:	mov    rbx,QWORD PTR [rsp+0xe0]
   140003614:	add    rsp,0xa0
   14000361b:	pop    r15
   14000361d:	pop    r14
   14000361f:	pop    r13
   140003621:	pop    r12
   140003623:	pop    rdi
   140003624:	pop    rsi
   140003625:	pop    rbp
   140003626:	ret    
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	rex push rbx
   140003632:	push   rbp
   140003633:	push   rsi
   140003634:	push   rdi
   140003635:	push   r13
   140003637:	push   r14
   140003639:	push   r15
   14000363b:	mov    eax,0x2060
   140003640:	call   0x140008070
   140003645:	sub    rsp,rax
   140003648:	mov    rax,QWORD PTR [rip+0x89b9]        # 0x14000c008
   14000364f:	xor    rax,rsp
   140003652:	mov    QWORD PTR [rsp+0x2050],rax
   14000365a:	mov    rbx,r8
   14000365d:	mov    rdi,rdx
   140003660:	mov    rbp,rcx
   140003663:	mov    rcx,QWORD PTR [rip+0x89ce]        # 0x14000c038
   14000366a:	lea    r13,[rip+0x89c7]        # 0x14000c038
   140003671:	cmp    rcx,r13
   140003674:	je     0x14000368a
   140003676:	test   BYTE PTR [rcx+0x1c],0x1
   14000367a:	je     0x14000368a
   14000367c:	mov    rcx,QWORD PTR [rcx+0x10]
   140003680:	mov    edx,0x60
   140003685:	call   0x140001180
   14000368a:	mov    rax,QWORD PTR [rbp+0x158]
   140003691:	lea    rdx,[rsp+0x48]
   140003696:	xor    r15d,r15d
   140003699:	mov    QWORD PTR [rsp+0x48],rax
   14000369e:	mov    DWORD PTR [rbx],r15d
   1400036a1:	or     esi,0xffffffff
   1400036a4:	mov    r9d,esi
   1400036a7:	mov    QWORD PTR [rdi],r15
   1400036aa:	xor    r8d,r8d
   1400036ad:	mov    DWORD PTR [rsp+0x20],r15d
   1400036b2:	lea    ecx,[r15+0x1]
   1400036b6:	call   QWORD PTR [rip+0x5c04]        # 0x1400092c0
   1400036bc:	cmp    eax,esi
   1400036be:	jne    0x1400036f1
   1400036c0:	call   QWORD PTR [rip+0x5a8a]        # 0x140009150
   1400036c6:	mov    ebx,eax
   1400036c8:	mov    rcx,QWORD PTR [rip+0x8969]        # 0x14000c038
   1400036cf:	cmp    rcx,r13
   1400036d2:	je     0x1400036ea
   1400036d4:	test   BYTE PTR [rcx+0x1c],0x1
   1400036d8:	je     0x1400036ea
   1400036da:	lea    edx,[r15+0x61]
   1400036de:	mov    r9d,eax
   1400036e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400036e5:	call   0x1400011ac
   1400036ea:	mov    eax,ebx
   1400036ec:	jmp    0x14000398b
   1400036f1:	mov    r14d,0xfffffff6
   1400036f7:	mov    ecx,r14d
   1400036fa:	call   QWORD PTR [rip+0x5b30]        # 0x140009230
   140003700:	mov    rcx,rax
   140003703:	call   QWORD PTR [rip+0x5a77]        # 0x140009180
   140003709:	cmp    eax,0x2
   14000370c:	jne    0x140003887
   140003712:	mov    ecx,r14d
   140003715:	mov    DWORD PTR [rsp+0x40],r15d
   14000371a:	call   QWORD PTR [rip+0x5b10]        # 0x140009230
   140003720:	lea    r9,[rsp+0x40]
   140003725:	mov    QWORD PTR [rsp+0x20],r15
   14000372a:	mov    rcx,rax
   14000372d:	lea    rdx,[rsp+0x50]
   140003732:	mov    r8d,0x1000
   140003738:	call   QWORD PTR [rip+0x59b2]        # 0x1400090f0
   14000373e:	mov    esi,eax
   140003740:	test   eax,eax
   140003742:	jne    0x14000377f
   140003744:	mov    rax,QWORD PTR [rip+0x88ed]        # 0x14000c038
   14000374b:	cmp    rax,r13
   14000374e:	je     0x1400038f1
   140003754:	test   BYTE PTR [rax+0x1c],0x1
   140003758:	je     0x1400038f1
   14000375e:	call   QWORD PTR [rip+0x59ec]        # 0x140009150
   140003764:	mov    rcx,QWORD PTR [rip+0x88cd]        # 0x14000c038
   14000376b:	lea    edx,[rsi+0x62]
   14000376e:	mov    r9d,eax
   140003771:	mov    rcx,QWORD PTR [rcx+0x10]
   140003775:	call   0x1400011ac
   14000377a:	jmp    0x1400038f1
   14000377f:	cmp    DWORD PTR [rsp+0x40],r15d
   140003784:	jne    0x14000378e
   140003786:	mov    DWORD PTR [rbx],r15d
   140003789:	jmp    0x140003882
   14000378e:	call   QWORD PTR [rip+0x597c]        # 0x140009110
   140003794:	mov    r9d,DWORD PTR [rsp+0x40]
   140003799:	lea    r8,[rsp+0x50]
   14000379e:	mov    QWORD PTR [rsp+0x38],r15
   1400037a3:	mov    ecx,eax
   1400037a5:	mov    QWORD PTR [rsp+0x30],r15
   1400037aa:	xor    edx,edx
   1400037ac:	mov    DWORD PTR [rsp+0x28],r15d
   1400037b1:	mov    QWORD PTR [rsp+0x20],r15
   1400037b6:	call   QWORD PTR [rip+0x5aec]        # 0x1400092a8
   1400037bc:	mov    ecx,eax
   1400037be:	xor    r8d,r8d
   1400037c1:	xor    edx,edx
   1400037c3:	mov    DWORD PTR [rbx],ecx
   1400037c5:	call   QWORD PTR [rip+0x5835]        # 0x140009000
   1400037cb:	mov    QWORD PTR [rdi],rax
   1400037ce:	mov    r14,rax
   1400037d1:	test   rax,rax
   1400037d4:	jne    0x14000380b
   1400037d6:	lea    ecx,[rax+0xe]
   1400037d9:	call   QWORD PTR [rip+0x5969]        # 0x140009148
   1400037df:	mov    rcx,QWORD PTR [rip+0x8852]        # 0x14000c038
   1400037e6:	cmp    rcx,r13
   1400037e9:	je     0x1400038f1
   1400037ef:	test   BYTE PTR [rcx+0x1c],0x1
   1400037f3:	je     0x1400038f1
   1400037f9:	lea    edx,[r14+0x63]
   1400037fd:	mov    rcx,QWORD PTR [rcx+0x10]
   140003801:	call   0x140001180
   140003806:	jmp    0x1400038f1
   14000380b:	call   QWORD PTR [rip+0x58ff]        # 0x140009110
   140003811:	mov    r9d,DWORD PTR [rsp+0x40]
   140003816:	lea    r8,[rsp+0x50]
   14000381b:	mov    QWORD PTR [rsp+0x38],r15
   140003820:	mov    ecx,eax
   140003822:	mov    eax,DWORD PTR [rbx]
   140003824:	xor    edx,edx
   140003826:	mov    QWORD PTR [rsp+0x30],r15
   14000382b:	mov    DWORD PTR [rsp+0x28],eax
   14000382f:	mov    QWORD PTR [rsp+0x20],r14
   140003834:	call   QWORD PTR [rip+0x5a6e]        # 0x1400092a8
   14000383a:	mov    DWORD PTR [rbx],eax
   14000383c:	test   eax,eax
   14000383e:	jne    0x1400038ed
   140003844:	mov    rax,QWORD PTR [rip+0x87ed]        # 0x14000c038
   14000384b:	cmp    rax,r13
   14000384e:	je     0x140003874
   140003850:	test   BYTE PTR [rax+0x1c],0x1
   140003854:	je     0x140003874
   140003856:	call   QWORD PTR [rip+0x58f4]        # 0x140009150
   14000385c:	mov    rcx,QWORD PTR [rip+0x87d5]        # 0x14000c038
   140003863:	mov    edx,0x64
   140003868:	mov    r9d,eax
   14000386b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000386f:	call   0x1400011ac
   140003874:	mov    rcx,QWORD PTR [rdi]
   140003877:	xor    edx,edx
   140003879:	mov    esi,r15d
   14000387c:	call   QWORD PTR [rip+0x579e]        # 0x140009020
   140003882:	mov    QWORD PTR [rdi],r15
   140003885:	jmp    0x1400038ed
   140003887:	xor    r8d,r8d
   14000388a:	xor    edx,edx
   14000388c:	mov    ecx,0x1000
   140003891:	call   QWORD PTR [rip+0x5769]        # 0x140009000
   140003897:	mov    QWORD PTR [rdi],rax
   14000389a:	mov    rsi,rax
   14000389d:	test   rax,rax
   1400038a0:	jne    0x1400038c8
   1400038a2:	lea    ecx,[rax+0xe]
   1400038a5:	mov    DWORD PTR [rbx],r15d
   1400038a8:	call   QWORD PTR [rip+0x589a]        # 0x140009148
   1400038ae:	mov    rcx,QWORD PTR [rip+0x8783]        # 0x14000c038
   1400038b5:	cmp    rcx,r13
   1400038b8:	je     0x1400038f1
   1400038ba:	test   BYTE PTR [rcx+0x1c],0x1
   1400038be:	je     0x1400038f1
   1400038c0:	lea    edx,[rsi+0x65]
   1400038c3:	jmp    0x1400037fd
   1400038c8:	mov    ecx,r14d
   1400038cb:	call   QWORD PTR [rip+0x595f]        # 0x140009230
   1400038d1:	mov    r9,rbx
   1400038d4:	mov    QWORD PTR [rsp+0x20],r15
   1400038d9:	mov    rcx,rax
   1400038dc:	mov    r8d,0x1000
   1400038e2:	mov    rdx,rsi
   1400038e5:	call   QWORD PTR [rip+0x588d]        # 0x140009178
   1400038eb:	mov    esi,eax
   1400038ed:	test   esi,esi
   1400038ef:	jne    0x140003966
   1400038f1:	call   QWORD PTR [rip+0x5859]        # 0x140009150
   1400038f7:	mov    ebx,eax
   1400038f9:	mov    rcx,QWORD PTR [rip+0x8738]        # 0x14000c038
   140003900:	cmp    rcx,r13
   140003903:	je     0x14000391c
   140003905:	test   BYTE PTR [rcx+0x1c],0x1
   140003909:	je     0x14000391c
   14000390b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000390f:	mov    edx,0x66
   140003914:	mov    r9d,eax
   140003917:	call   0x1400011ac
   14000391c:	mov    rcx,QWORD PTR [rbp+0x158]
   140003923:	test   rcx,rcx
   140003926:	je     0x140003935
   140003928:	call   QWORD PTR [rip+0x5862]        # 0x140009190
   14000392e:	mov    QWORD PTR [rbp+0x158],r15
   140003935:	mov    rcx,QWORD PTR [rbp+0x28]
   140003939:	call   QWORD PTR [rip+0x5989]        # 0x1400092c8
   14000393f:	mov    rcx,QWORD PTR [rip+0x86f2]        # 0x14000c038
   140003946:	cmp    rcx,r13
   140003949:	je     0x1400036ea
   14000394f:	test   BYTE PTR [rcx+0x1c],0x1
   140003953:	je     0x1400036ea
   140003959:	mov    edx,0x67
   14000395e:	mov    r9d,ebx
   140003961:	jmp    0x1400036e1
   140003966:	mov    rcx,QWORD PTR [rip+0x86cb]        # 0x14000c038
   14000396d:	cmp    rcx,r13
   140003970:	je     0x140003989
   140003972:	test   BYTE PTR [rcx+0x1c],0x1
   140003976:	je     0x140003989
   140003978:	mov    r9d,DWORD PTR [rbx]
   14000397b:	mov    edx,0x68
   140003980:	mov    rcx,QWORD PTR [rcx+0x10]
   140003984:	call   0x1400011ac
   140003989:	xor    eax,eax
   14000398b:	mov    rcx,QWORD PTR [rsp+0x2050]
   140003993:	xor    rcx,rsp
   140003996:	call   0x140007680
   14000399b:	add    rsp,0x2060
   1400039a2:	pop    r15
   1400039a4:	pop    r14
   1400039a6:	pop    r13
   1400039a8:	pop    rdi
   1400039a9:	pop    rsi
   1400039aa:	pop    rbp
   1400039ab:	pop    rbx
   1400039ac:	ret    
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	int3   
   1400039b1:	int3   
   1400039b2:	int3   
   1400039b3:	int3   
   1400039b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400039b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400039be:	push   rdi
   1400039bf:	sub    rsp,0x40
   1400039c3:	mov    rbx,rcx
   1400039c6:	mov    rcx,QWORD PTR [rip+0x866b]        # 0x14000c038
   1400039cd:	lea    rbp,[rip+0x8664]        # 0x14000c038
   1400039d4:	cmp    rcx,rbp
   1400039d7:	je     0x1400039f4
   1400039d9:	test   BYTE PTR [rcx+0x1c],0x1
   1400039dd:	je     0x1400039f4
   1400039df:	mov    rcx,QWORD PTR [rcx+0x10]
   1400039e3:	mov    edx,0x6c
   1400039e8:	call   0x140001180
   1400039ed:	mov    rcx,QWORD PTR [rip+0x8644]        # 0x14000c038
   1400039f4:	mov    rdi,QWORD PTR [rbx+0x18]
   1400039f8:	cmp    rcx,rbp
   1400039fb:	je     0x140003a11
   1400039fd:	test   BYTE PTR [rcx+0x1c],0x1
   140003a01:	je     0x140003a11
   140003a03:	mov    rcx,QWORD PTR [rcx+0x10]
   140003a07:	mov    edx,0x69
   140003a0c:	call   0x140001180
   140003a11:	mov    rax,QWORD PTR [rbx+0x8]
   140003a15:	lea    rdx,[rsp+0x30]
   140003a1a:	xor    ebx,ebx
   140003a1c:	mov    QWORD PTR [rsp+0x30],rdi
   140003a21:	or     r9d,0xffffffff
   140003a25:	mov    QWORD PTR [rsp+0x38],rax
   140003a2a:	xor    r8d,r8d
   140003a2d:	mov    DWORD PTR [rsp+0x20],ebx
   140003a31:	lea    ecx,[rbx+0x2]
   140003a34:	call   QWORD PTR [rip+0x5886]        # 0x1400092c0
   140003a3a:	test   eax,eax
   140003a3c:	jne    0x140003a58
   140003a3e:	mov    rcx,QWORD PTR [rip+0x85f3]        # 0x14000c038
   140003a45:	cmp    rcx,rbp
   140003a48:	je     0x140003aa1
   140003a4a:	test   BYTE PTR [rcx+0x1c],0x1
   140003a4e:	je     0x140003a85
   140003a50:	lea    edx,[rbx+0x6a]
   140003a53:	xor    r9d,r9d
   140003a56:	jmp    0x140003a75
   140003a58:	mov    rcx,QWORD PTR [rip+0x85d9]        # 0x14000c038
   140003a5f:	mov    ebx,0x15
   140003a64:	cmp    rcx,rbp
   140003a67:	je     0x140003aa1
   140003a69:	test   BYTE PTR [rcx+0x1c],0x1
   140003a6d:	je     0x140003a85
   140003a6f:	lea    edx,[rbx+0x56]
   140003a72:	mov    r9d,ebx
   140003a75:	mov    rcx,QWORD PTR [rcx+0x10]
   140003a79:	call   0x1400011ac
   140003a7e:	mov    rcx,QWORD PTR [rip+0x85b3]        # 0x14000c038
   140003a85:	cmp    rcx,rbp
   140003a88:	je     0x140003aa1
   140003a8a:	test   BYTE PTR [rcx+0x1c],0x1
   140003a8e:	je     0x140003aa1
   140003a90:	mov    rcx,QWORD PTR [rcx+0x10]
   140003a94:	mov    edx,0x6d
   140003a99:	mov    r9d,ebx
   140003a9c:	call   0x1400011ac
   140003aa1:	mov    rbp,QWORD PTR [rsp+0x58]
   140003aa6:	mov    eax,ebx
   140003aa8:	mov    rbx,QWORD PTR [rsp+0x50]
   140003aad:	add    rsp,0x40
   140003ab1:	pop    rdi
   140003ab2:	ret    
   140003ab3:	int3   
   140003ab4:	int3   
   140003ab5:	int3   
   140003ab6:	int3   
   140003ab7:	int3   
   140003ab8:	int3   
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	mov    QWORD PTR [rsp+0x8],rbx
   140003ac1:	mov    QWORD PTR [rsp+0x10],rsi
   140003ac6:	push   rdi
   140003ac7:	sub    rsp,0x30
   140003acb:	mov    rbx,rcx
   140003ace:	mov    rcx,QWORD PTR [rip+0x8563]        # 0x14000c038
   140003ad5:	lea    rsi,[rip+0x855c]        # 0x14000c038
   140003adc:	mov    dil,0x1
   140003adf:	cmp    rcx,rsi
   140003ae2:	je     0x140003af8
   140003ae4:	test   BYTE PTR [rcx+0x1c],dil
   140003ae8:	je     0x140003af8
   140003aea:	mov    rcx,QWORD PTR [rcx+0x10]
   140003aee:	mov    edx,0x75
   140003af3:	call   0x140001180
   140003af8:	xor    r9d,r9d
   140003afb:	xor    r8d,r8d
   140003afe:	xor    edx,edx
   140003b00:	xor    ecx,ecx
   140003b02:	call   QWORD PTR [rip+0x57d0]        # 0x1400092d8
   140003b08:	mov    QWORD PTR [rbx+0x18],rax
   140003b0c:	test   rax,rax
   140003b0f:	jne    0x140003b64
   140003b11:	call   QWORD PTR [rip+0x5639]        # 0x140009150
   140003b17:	mov    ebx,eax
   140003b19:	mov    rcx,QWORD PTR [rip+0x8518]        # 0x14000c038
   140003b20:	cmp    rcx,rsi
   140003b23:	je     0x140003d38
   140003b29:	test   BYTE PTR [rcx+0x1c],dil
   140003b2d:	je     0x140003b44
   140003b2f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b33:	mov    edx,0x76
   140003b38:	call   0x140001180
   140003b3d:	mov    rcx,QWORD PTR [rip+0x84f4]        # 0x14000c038
   140003b44:	cmp    rcx,rsi
   140003b47:	je     0x140003d38
   140003b4d:	test   BYTE PTR [rcx+0x1c],dil
   140003b51:	je     0x140003d38
   140003b57:	mov    edx,0x77
   140003b5c:	mov    r9d,ebx
   140003b5f:	jmp    0x140003d2f
   140003b64:	xor    r9d,r9d
   140003b67:	xor    r8d,r8d
   140003b6a:	xor    edx,edx
   140003b6c:	xor    ecx,ecx
   140003b6e:	call   QWORD PTR [rip+0x5764]        # 0x1400092d8
   140003b74:	mov    QWORD PTR [rbx+0x20],rax
   140003b78:	test   rax,rax
   140003b7b:	jne    0x140003bca
   140003b7d:	call   QWORD PTR [rip+0x55cd]        # 0x140009150
   140003b83:	mov    ebx,eax
   140003b85:	mov    rcx,QWORD PTR [rip+0x84ac]        # 0x14000c038
   140003b8c:	cmp    rcx,rsi
   140003b8f:	je     0x140003d38
   140003b95:	test   BYTE PTR [rcx+0x1c],dil
   140003b99:	je     0x140003bb0
   140003b9b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b9f:	mov    edx,0x78
   140003ba4:	call   0x140001180
   140003ba9:	mov    rcx,QWORD PTR [rip+0x8488]        # 0x14000c038
   140003bb0:	cmp    rcx,rsi
   140003bb3:	je     0x140003d38
   140003bb9:	test   BYTE PTR [rcx+0x1c],dil
   140003bbd:	je     0x140003d38
   140003bc3:	mov    edx,0x79
   140003bc8:	jmp    0x140003b5c
   140003bca:	xor    r9d,r9d
   140003bcd:	xor    r8d,r8d
   140003bd0:	xor    edx,edx
   140003bd2:	xor    ecx,ecx
   140003bd4:	call   QWORD PTR [rip+0x56fe]        # 0x1400092d8
   140003bda:	mov    QWORD PTR [rbx+0x28],rax
   140003bde:	test   rax,rax
   140003be1:	jne    0x140003c33
   140003be3:	call   QWORD PTR [rip+0x5567]        # 0x140009150
   140003be9:	mov    ebx,eax
   140003beb:	mov    rcx,QWORD PTR [rip+0x8446]        # 0x14000c038
   140003bf2:	cmp    rcx,rsi
   140003bf5:	je     0x140003d38
   140003bfb:	test   BYTE PTR [rcx+0x1c],dil
   140003bff:	je     0x140003c16
   140003c01:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c05:	mov    edx,0x7a
   140003c0a:	call   0x140001180
   140003c0f:	mov    rcx,QWORD PTR [rip+0x8422]        # 0x14000c038
   140003c16:	cmp    rcx,rsi
   140003c19:	je     0x140003d38
   140003c1f:	test   BYTE PTR [rcx+0x1c],dil
   140003c23:	je     0x140003d38
   140003c29:	mov    edx,0x7b
   140003c2e:	jmp    0x140003b5c
   140003c33:	xor    r9d,r9d
   140003c36:	xor    r8d,r8d
   140003c39:	xor    edx,edx
   140003c3b:	xor    ecx,ecx
   140003c3d:	call   QWORD PTR [rip+0x5695]        # 0x1400092d8
   140003c43:	mov    QWORD PTR [rbx+0x30],rax
   140003c47:	test   rax,rax
   140003c4a:	jne    0x140003c9c
   140003c4c:	call   QWORD PTR [rip+0x54fe]        # 0x140009150
   140003c52:	mov    ebx,eax
   140003c54:	mov    rcx,QWORD PTR [rip+0x83dd]        # 0x14000c038
   140003c5b:	cmp    rcx,rsi
   140003c5e:	je     0x140003d38
   140003c64:	test   BYTE PTR [rcx+0x1c],dil
   140003c68:	je     0x140003c7f
   140003c6a:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c6e:	mov    edx,0x7c
   140003c73:	call   0x140001180
   140003c78:	mov    rcx,QWORD PTR [rip+0x83b9]        # 0x14000c038
   140003c7f:	cmp    rcx,rsi
   140003c82:	je     0x140003d38
   140003c88:	test   BYTE PTR [rcx+0x1c],dil
   140003c8c:	je     0x140003d38
   140003c92:	mov    edx,0x7d
   140003c97:	jmp    0x140003b5c
   140003c9c:	lea    rax,[rbx+0x10]
   140003ca0:	mov    r9,rbx
   140003ca3:	mov    QWORD PTR [rsp+0x28],rax
   140003ca8:	lea    r8,[rip+0xfffffffffffff0c1]        # 0x140002d70
   140003caf:	and    DWORD PTR [rsp+0x20],0x0
   140003cb4:	xor    edx,edx
   140003cb6:	xor    ecx,ecx
   140003cb8:	call   QWORD PTR [rip+0x55a2]        # 0x140009260
   140003cbe:	mov    QWORD PTR [rbx+0x8],rax
   140003cc2:	test   rax,rax
   140003cc5:	jne    0x140003d0b
   140003cc7:	call   QWORD PTR [rip+0x5483]        # 0x140009150
   140003ccd:	mov    ebx,eax
   140003ccf:	mov    rcx,QWORD PTR [rip+0x8362]        # 0x14000c038
   140003cd6:	cmp    rcx,rsi
   140003cd9:	je     0x140003d38
   140003cdb:	test   BYTE PTR [rcx+0x1c],dil
   140003cdf:	je     0x140003cf6
   140003ce1:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ce5:	mov    edx,0x7e
   140003cea:	call   0x140001180
   140003cef:	mov    rcx,QWORD PTR [rip+0x8342]        # 0x14000c038
   140003cf6:	cmp    rcx,rsi
   140003cf9:	je     0x140003d38
   140003cfb:	test   BYTE PTR [rcx+0x1c],dil
   140003cff:	je     0x140003d38
   140003d01:	mov    edx,0x7f
   140003d06:	jmp    0x140003b5c
   140003d0b:	mov    rcx,rbx
   140003d0e:	call   0x1400039b4
   140003d13:	mov    ebx,eax
   140003d15:	mov    rcx,QWORD PTR [rip+0x831c]        # 0x14000c038
   140003d1c:	cmp    rcx,rsi
   140003d1f:	je     0x140003d38
   140003d21:	test   BYTE PTR [rcx+0x1c],dil
   140003d25:	je     0x140003d38
   140003d27:	mov    edx,0x80
   140003d2c:	mov    r9d,eax
   140003d2f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003d33:	call   0x1400011ac
   140003d38:	mov    rsi,QWORD PTR [rsp+0x48]
   140003d3d:	mov    eax,ebx
   140003d3f:	mov    rbx,QWORD PTR [rsp+0x40]
   140003d44:	add    rsp,0x30
   140003d48:	pop    rdi
   140003d49:	ret    
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	mov    QWORD PTR [rsp+0x8],rbx
   140003d55:	mov    QWORD PTR [rsp+0x10],rsi
   140003d5a:	push   rdi
   140003d5b:	sub    rsp,0x20
   140003d5f:	mov    rdi,rcx
   140003d62:	mov    rcx,QWORD PTR [rip+0x82cf]        # 0x14000c038
   140003d69:	lea    rsi,[rip+0x82c8]        # 0x14000c038
   140003d70:	cmp    rcx,rsi
   140003d73:	je     0x140003d89
   140003d75:	test   BYTE PTR [rcx+0x1c],0x1
   140003d79:	je     0x140003d89
   140003d7b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003d7f:	mov    edx,0x81
   140003d84:	call   0x140001180
   140003d89:	mov    rcx,rdi
   140003d8c:	call   0x140003abc
   140003d91:	mov    ebx,eax
   140003d93:	test   eax,eax
   140003d95:	jne    0x140003dbe
   140003d97:	xor    r9d,r9d
   140003d9a:	xor    r8d,r8d
   140003d9d:	xor    edx,edx
   140003d9f:	xor    ecx,ecx
   140003da1:	call   QWORD PTR [rip+0x5531]        # 0x1400092d8
   140003da7:	mov    QWORD PTR [rdi+0x148],rax
   140003dae:	test   rax,rax
   140003db1:	jne    0x140003dbc
   140003db3:	call   0x140001834
   140003db8:	mov    ebx,eax
   140003dba:	jmp    0x140003dbe
   140003dbc:	xor    ebx,ebx
   140003dbe:	mov    rcx,QWORD PTR [rip+0x8273]        # 0x14000c038
   140003dc5:	cmp    rcx,rsi
   140003dc8:	je     0x140003de1
   140003dca:	test   BYTE PTR [rcx+0x1c],0x1
   140003dce:	je     0x140003de1
   140003dd0:	mov    rcx,QWORD PTR [rcx+0x10]
   140003dd4:	mov    edx,0x82
   140003dd9:	mov    r9d,ebx
   140003ddc:	call   0x1400011ac
   140003de1:	mov    rsi,QWORD PTR [rsp+0x38]
   140003de6:	mov    eax,ebx
   140003de8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ded:	add    rsp,0x20
   140003df1:	pop    rdi
   140003df2:	ret    
   140003df3:	int3   
   140003df4:	int3   
   140003df5:	int3   
   140003df6:	int3   
   140003df7:	int3   
   140003df8:	int3   
   140003df9:	int3   
   140003dfa:	int3   
   140003dfb:	int3   
   140003dfc:	mov    QWORD PTR [rsp+0x10],rbx
   140003e01:	mov    QWORD PTR [rsp+0x18],rsi
   140003e06:	push   rbp
   140003e07:	push   rdi
   140003e08:	push   r12
   140003e0a:	push   r14
   140003e0c:	push   r15
   140003e0e:	mov    rbp,rsp
   140003e11:	sub    rsp,0x70
   140003e15:	mov    rax,QWORD PTR [rip+0x81ec]        # 0x14000c008
   140003e1c:	xor    rax,rsp
   140003e1f:	mov    QWORD PTR [rbp-0x8],rax
   140003e23:	mov    rdi,rcx
   140003e26:	mov    rcx,QWORD PTR [rip+0x820b]        # 0x14000c038
   140003e2d:	lea    r12,[rip+0x8204]        # 0x14000c038
   140003e34:	mov    esi,0x1
   140003e39:	cmp    rcx,r12
   140003e3c:	je     0x140003e52
   140003e3e:	test   BYTE PTR [rcx+0x1c],sil
   140003e42:	je     0x140003e52
   140003e44:	mov    rcx,QWORD PTR [rcx+0x10]
   140003e48:	mov    edx,0x83
   140003e4d:	call   0x140001180
   140003e52:	mov    r15d,0xfffffff6
   140003e58:	mov    BYTE PTR [rdi+0x39],sil
   140003e5c:	mov    ecx,r15d
   140003e5f:	call   QWORD PTR [rip+0x53cb]        # 0x140009230
   140003e65:	mov    rcx,rax
   140003e68:	call   QWORD PTR [rip+0x5312]        # 0x140009180
   140003e6e:	xor    r14d,r14d
   140003e71:	mov    ecx,r15d
   140003e74:	cmp    eax,0x2
   140003e77:	jne    0x140003f86
   140003e7d:	mov    DWORD PTR [rbp-0x40],r14d
   140003e81:	call   QWORD PTR [rip+0x53a9]        # 0x140009230
   140003e87:	mov    rcx,rax
   140003e8a:	lea    rdx,[rbp-0x40]
   140003e8e:	call   QWORD PTR [rip+0x5254]        # 0x1400090e8
   140003e94:	test   eax,eax
   140003e96:	jne    0x140003eb6
   140003e98:	call   QWORD PTR [rip+0x52b2]        # 0x140009150
   140003e9e:	mov    ecx,eax
   140003ea0:	xor    edx,edx
   140003ea2:	call   0x140002b28
   140003ea7:	call   QWORD PTR [rip+0x52a3]        # 0x140009150
   140003ead:	mov    ecx,eax
   140003eaf:	call   QWORD PTR [rip+0x53a3]        # 0x140009258
   140003eb5:	int3   
   140003eb6:	mov    ebx,DWORD PTR [rbp-0x40]
   140003eb9:	mov    ecx,r15d
   140003ebc:	xor    ebx,0x4
   140003ebf:	call   QWORD PTR [rip+0x536b]        # 0x140009230
   140003ec5:	mov    rcx,rax
   140003ec8:	mov    edx,ebx
   140003eca:	call   QWORD PTR [rip+0x5238]        # 0x140009108
   140003ed0:	test   eax,eax
   140003ed2:	jne    0x140003ef2
   140003ed4:	call   QWORD PTR [rip+0x5276]        # 0x140009150
   140003eda:	mov    ecx,eax
   140003edc:	xor    edx,edx
   140003ede:	call   0x140002b28
   140003ee3:	call   QWORD PTR [rip+0x5267]        # 0x140009150
   140003ee9:	mov    ecx,eax
   140003eeb:	call   QWORD PTR [rip+0x5367]        # 0x140009258
   140003ef1:	int3   
   140003ef2:	mov    ecx,r15d
   140003ef5:	mov    WORD PTR [rbp-0x30],si
   140003ef9:	mov    DWORD PTR [rbp-0x2c],esi
   140003efc:	mov    DWORD PTR [rbp-0x28],esi
   140003eff:	mov    BYTE PTR [rbp-0x22],0xd
   140003f03:	mov    WORD PTR [rbp-0x24],r14w
   140003f08:	mov    DWORD PTR [rbp-0x20],r14d
   140003f0c:	mov    WORD PTR [rbp-0x1c],si
   140003f10:	mov    DWORD PTR [rbp-0x18],r14d
   140003f14:	mov    DWORD PTR [rbp-0x14],esi
   140003f17:	mov    BYTE PTR [rbp-0xe],0xd
   140003f1b:	mov    WORD PTR [rbp-0x10],r14w
   140003f20:	mov    DWORD PTR [rbp-0xc],r14d
   140003f24:	mov    DWORD PTR [rbp-0x38],r14d
   140003f28:	call   QWORD PTR [rip+0x5302]        # 0x140009230
   140003f2e:	lea    r9,[rbp-0x38]
   140003f32:	mov    r8d,0x2
   140003f38:	mov    rcx,rax
   140003f3b:	lea    rdx,[rbp-0x30]
   140003f3f:	call   QWORD PTR [rip+0x51db]        # 0x140009120
   140003f45:	cmp    eax,esi
   140003f47:	je     0x140003f4f
   140003f49:	call   QWORD PTR [rip+0x5201]        # 0x140009150
   140003f4f:	mov    ecx,r15d
   140003f52:	call   QWORD PTR [rip+0x52d8]        # 0x140009230
   140003f58:	mov    edx,DWORD PTR [rbp-0x40]
   140003f5b:	mov    rcx,rax
   140003f5e:	call   QWORD PTR [rip+0x51a4]        # 0x140009108
   140003f64:	test   eax,eax
   140003f66:	jne    0x140003fc3
   140003f68:	call   QWORD PTR [rip+0x51e2]        # 0x140009150
   140003f6e:	mov    ecx,eax
   140003f70:	xor    edx,edx
   140003f72:	call   0x140002b28
   140003f77:	call   QWORD PTR [rip+0x51d3]        # 0x140009150
   140003f7d:	mov    ecx,eax
   140003f7f:	call   QWORD PTR [rip+0x52d3]        # 0x140009258
   140003f85:	int3   
   140003f86:	call   QWORD PTR [rip+0x52a4]        # 0x140009230
   140003f8c:	mov    rcx,rax
   140003f8f:	call   QWORD PTR [rip+0x51fb]        # 0x140009190
   140003f95:	xor    edx,edx
   140003f97:	mov    ecx,r15d
   140003f9a:	call   QWORD PTR [rip+0x5288]        # 0x140009228
   140003fa0:	cmp    eax,esi
   140003fa2:	je     0x140003faa
   140003fa4:	call   QWORD PTR [rip+0x51a6]        # 0x140009150
   140003faa:	mov    rcx,QWORD PTR [rdi+0x158]
   140003fb1:	xor    edx,edx
   140003fb3:	call   QWORD PTR [rip+0x521f]        # 0x1400091d8
   140003fb9:	cmp    eax,esi
   140003fbb:	je     0x140003fc3
   140003fbd:	call   QWORD PTR [rip+0x518d]        # 0x140009150
   140003fc3:	mov    rcx,QWORD PTR [rdi+0x28]
   140003fc7:	call   QWORD PTR [rip+0x52fb]        # 0x1400092c8
   140003fcd:	mov    rcx,QWORD PTR [rip+0x8064]        # 0x14000c038
   140003fd4:	cmp    rcx,r12
   140003fd7:	je     0x140003fed
   140003fd9:	test   BYTE PTR [rcx+0x1c],sil
   140003fdd:	je     0x140003fed
   140003fdf:	mov    rcx,QWORD PTR [rcx+0x10]
   140003fe3:	mov    edx,0x6e
   140003fe8:	call   0x140001180
   140003fed:	mov    rax,QWORD PTR [rdi+0x8]
   140003ff1:	lea    rdx,[rbp-0x38]
   140003ff5:	or     r9d,0xffffffff
   140003ff9:	mov    QWORD PTR [rbp-0x38],rax
   140003ffd:	xor    r8d,r8d
   140004000:	mov    DWORD PTR [rsp+0x20],r14d
   140004005:	mov    ecx,esi
   140004007:	call   QWORD PTR [rip+0x52b3]        # 0x1400092c0
   14000400d:	test   eax,eax
   14000400f:	jne    0x14000402b
   140004011:	mov    rcx,QWORD PTR [rip+0x8020]        # 0x14000c038
   140004018:	cmp    rcx,r12
   14000401b:	je     0x14000406f
   14000401d:	test   BYTE PTR [rcx+0x1c],sil
   140004021:	je     0x140004056
   140004023:	lea    edx,[rax+0x6f]
   140004026:	xor    r9d,r9d
   140004029:	jmp    0x140004046
   14000402b:	mov    rcx,QWORD PTR [rip+0x8006]        # 0x14000c038
   140004032:	cmp    rcx,r12
   140004035:	je     0x14000406f
   140004037:	test   BYTE PTR [rcx+0x1c],sil
   14000403b:	je     0x140004056
   14000403d:	mov    edx,0x70
   140004042:	lea    r9d,[rdx-0x5b]
   140004046:	mov    rcx,QWORD PTR [rcx+0x10]
   14000404a:	call   0x1400011ac
   14000404f:	mov    rcx,QWORD PTR [rip+0x7fe2]        # 0x14000c038
   140004056:	cmp    rcx,r12
   140004059:	je     0x14000406f
   14000405b:	test   BYTE PTR [rcx+0x1c],sil
   14000405f:	je     0x14000406f
   140004061:	mov    rcx,QWORD PTR [rcx+0x10]
   140004065:	mov    edx,0x84
   14000406a:	call   0x140001180
   14000406f:	mov    rcx,QWORD PTR [rbp-0x8]
   140004073:	xor    rcx,rsp
   140004076:	call   0x140007680
   14000407b:	lea    r11,[rsp+0x70]
   140004080:	mov    rbx,QWORD PTR [r11+0x38]
   140004084:	mov    rsi,QWORD PTR [r11+0x40]
   140004088:	mov    rsp,r11
   14000408b:	pop    r15
   14000408d:	pop    r14
   14000408f:	pop    r12
   140004091:	pop    rdi
   140004092:	pop    rbp
   140004093:	ret    
   140004094:	int3   
   140004095:	int3   
   140004096:	int3   
   140004097:	int3   
   140004098:	int3   
   140004099:	int3   
   14000409a:	int3   
   14000409b:	int3   
   14000409c:	rex push rbp
   14000409e:	push   rdi
   14000409f:	push   r15
   1400040a1:	mov    rbp,rsp
   1400040a4:	sub    rsp,0x70
   1400040a8:	mov    rdi,rcx
   1400040ab:	mov    rcx,QWORD PTR [rip+0x7f86]        # 0x14000c038
   1400040b2:	lea    r15,[rip+0x7f7f]        # 0x14000c038
   1400040b9:	cmp    rcx,r15
   1400040bc:	je     0x1400040d2
   1400040be:	test   BYTE PTR [rcx+0x1c],0x1
   1400040c2:	je     0x1400040d2
   1400040c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040c8:	mov    edx,0x85
   1400040cd:	call   0x140001180
   1400040d2:	and    QWORD PTR [rbp-0x18],0x0
   1400040d7:	xor    r9d,r9d
   1400040da:	and    DWORD PTR [rbp-0x10],0x0
   1400040de:	xor    r8d,r8d
   1400040e1:	and    DWORD PTR [rbp-0xc],0x0
   1400040e5:	xor    edx,edx
   1400040e7:	xor    ecx,ecx
   1400040e9:	mov    BYTE PTR [rbp-0x20],0x1
   1400040ed:	call   QWORD PTR [rip+0x51e5]        # 0x1400092d8
   1400040f3:	mov    QWORD PTR [rbp-0x18],rax
   1400040f7:	test   rax,rax
   1400040fa:	jne    0x140004103
   1400040fc:	call   0x140001834
   140004101:	jmp    0x140004105
   140004103:	xor    eax,eax
   140004105:	test   eax,eax
   140004107:	je     0x140004139
   140004109:	mov    rcx,QWORD PTR [rip+0x7f28]        # 0x14000c038
   140004110:	cmp    rcx,r15
   140004113:	je     0x1400042a7
   140004119:	test   BYTE PTR [rcx+0x1c],0x1
   14000411d:	je     0x1400042a7
   140004123:	mov    rcx,QWORD PTR [rcx+0x10]
   140004127:	mov    edx,0x86
   14000412c:	mov    r9d,eax
   14000412f:	call   0x1400011ac
   140004134:	jmp    0x1400042a7
   140004139:	and    QWORD PTR [rbp+0x30],0x0
   14000413e:	lea    r9,[rbp+0x28]
   140004142:	and    QWORD PTR [rbp+0x28],0x0
   140004147:	lea    r8,[rbp+0x30]
   14000414b:	lea    rdx,[rbp-0x40]
   14000414f:	lea    rcx,[rbp-0x38]
   140004153:	call   0x140001aa8
   140004158:	test   al,al
   14000415a:	jne    0x140004180
   14000415c:	mov    rcx,QWORD PTR [rip+0x7ed5]        # 0x14000c038
   140004163:	cmp    rcx,r15
   140004166:	je     0x1400042a7
   14000416c:	test   BYTE PTR [rcx+0x1c],0x1
   140004170:	je     0x1400042a7
   140004176:	mov    edx,0x87
   14000417b:	jmp    0x14000429e
   140004180:	cmp    QWORD PTR [rbp+0x28],0x0
   140004185:	jne    0x1400041b7
   140004187:	xor    r8d,r8d
   14000418a:	mov    dl,0x1
   14000418c:	xor    ecx,ecx
   14000418e:	call   0x140001bb8
   140004193:	mov    rcx,QWORD PTR [rip+0x7e9e]        # 0x14000c038
   14000419a:	cmp    rcx,r15
   14000419d:	je     0x1400042a7
   1400041a3:	test   BYTE PTR [rcx+0x1c],0x1
   1400041a7:	je     0x1400042a7
   1400041ad:	mov    edx,0x88
   1400041b2:	jmp    0x14000429e
   1400041b7:	mov    rcx,QWORD PTR [rip+0x7e7a]        # 0x14000c038
   1400041be:	cmp    rcx,r15
   1400041c1:	je     0x1400041d7
   1400041c3:	test   BYTE PTR [rcx+0x1c],0x4
   1400041c7:	je     0x1400041d7
   1400041c9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400041cd:	mov    edx,0x89
   1400041d2:	call   0x140001180
   1400041d7:	mov    rdx,QWORD PTR [rbp+0x28]
   1400041db:	lea    rax,[rbp-0x20]
   1400041df:	mov    rcx,QWORD PTR [rbp+0x30]
   1400041e3:	mov    r9,rdi
   1400041e6:	and    QWORD PTR [rbp+0x38],0x0
   1400041eb:	xor    r8d,r8d
   1400041ee:	mov    QWORD PTR [rbp-0x30],rax
   1400041f2:	lea    rax,[rip+0x2fb7]        # 0x1400071b0
   1400041f9:	mov    QWORD PTR [rbp-0x28],rax
   1400041fd:	lea    rax,[rbp+0x38]
   140004201:	mov    QWORD PTR [rsp+0x28],rax
   140004206:	lea    rax,[rbp-0x30]
   14000420a:	mov    QWORD PTR [rsp+0x20],rax
   14000420f:	call   QWORD PTR [rip+0x4df3]        # 0x140009008
   140004215:	mov    rcx,QWORD PTR [rbp-0x18]
   140004219:	test   rcx,rcx
   14000421c:	je     0x140004227
   14000421e:	or     edx,0xffffffff
   140004221:	call   QWORD PTR [rip+0x50a9]        # 0x1400092d0
   140004227:	mov    rcx,QWORD PTR [rip+0x7e0a]        # 0x14000c038
   14000422e:	cmp    rcx,r15
   140004231:	je     0x14000424b
   140004233:	test   BYTE PTR [rcx+0x1c],0x4
   140004237:	je     0x14000424b
   140004239:	mov    r9d,DWORD PTR [rbp-0x10]
   14000423d:	mov    edx,0x8a
   140004242:	mov    rcx,QWORD PTR [rcx+0x10]
   140004246:	call   0x1400011ac
   14000424b:	mov    rcx,QWORD PTR [rbp+0x38]
   14000424f:	xor    edx,edx
   140004251:	call   QWORD PTR [rip+0x4e41]        # 0x140009098
   140004257:	mov    rcx,QWORD PTR [rip+0x7dda]        # 0x14000c038
   14000425e:	cmp    rcx,r15
   140004261:	je     0x14000427a
   140004263:	test   BYTE PTR [rcx+0x1c],0x4
   140004267:	je     0x14000427a
   140004269:	mov    rcx,QWORD PTR [rcx+0x10]
   14000426d:	mov    edx,0x8b
   140004272:	mov    r9d,eax
   140004275:	call   0x1400011ac
   14000427a:	mov    ecx,DWORD PTR [rbp-0x10]
   14000427d:	xor    r8d,r8d
   140004280:	mov    dl,0x1
   140004282:	call   0x140001bb8
   140004287:	mov    rcx,QWORD PTR [rip+0x7daa]        # 0x14000c038
   14000428e:	cmp    rcx,r15
   140004291:	je     0x1400042a7
   140004293:	test   BYTE PTR [rcx+0x1c],0x1
   140004297:	je     0x1400042a7
   140004299:	mov    edx,0x8c
   14000429e:	mov    rcx,QWORD PTR [rcx+0x10]
   1400042a2:	call   0x140001180
   1400042a7:	mov    rax,QWORD PTR [rbp-0x18]
   1400042ab:	test   rax,rax
   1400042ae:	je     0x1400042b9
   1400042b0:	mov    rcx,rax
   1400042b3:	call   QWORD PTR [rip+0x4ed7]        # 0x140009190
   1400042b9:	add    rsp,0x70
   1400042bd:	pop    r15
   1400042bf:	pop    rdi
   1400042c0:	pop    rbp
   1400042c1:	ret    
   1400042c2:	int3   
   1400042c3:	int3   
   1400042c4:	int3   
   1400042c5:	int3   
   1400042c6:	int3   
   1400042c7:	int3   
   1400042c8:	int3   
   1400042c9:	int3   
   1400042ca:	int3   
   1400042cb:	int3   
   1400042cc:	int3   
   1400042cd:	int3   
   1400042ce:	int3   
   1400042cf:	int3   
   1400042d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042d5:	push   rbp
   1400042d6:	push   rsi
   1400042d7:	push   rdi
   1400042d8:	push   r14
   1400042da:	push   r15
   1400042dc:	mov    rbp,rsp
   1400042df:	sub    rsp,0x40
   1400042e3:	mov    ebx,ecx
   1400042e5:	mov    rcx,QWORD PTR [rip+0x7d4c]        # 0x14000c038
   1400042ec:	lea    r14,[rip+0x7d45]        # 0x14000c038
   1400042f3:	mov    esi,0x1
   1400042f8:	cmp    rcx,r14
   1400042fb:	je     0x140004318
   1400042fd:	test   BYTE PTR [rcx+0x1c],sil
   140004301:	je     0x140004318
   140004303:	mov    rcx,QWORD PTR [rcx+0x10]
   140004307:	mov    edx,0x8d
   14000430c:	call   0x140001180
   140004311:	mov    rcx,QWORD PTR [rip+0x7d20]        # 0x14000c038
   140004318:	mov    edi,0x2
   14000431d:	cmp    ebx,edi
   14000431f:	ja     0x1400043ad
   140004325:	cmp    rcx,r14
   140004328:	je     0x140004341
   14000432a:	test   BYTE PTR [rcx+0x1c],0x4
   14000432e:	je     0x140004341
   140004330:	mov    rcx,QWORD PTR [rcx+0x10]
   140004334:	mov    edx,0x8e
   140004339:	mov    r9d,ebx
   14000433c:	call   0x1400011f0
   140004341:	xor    r15d,r15d
   140004344:	lea    r9,[rbp-0x10]
   140004348:	lea    r8,[rbp+0x38]
   14000434c:	mov    QWORD PTR [rbp+0x48],r15
   140004350:	lea    rdx,[rbp+0x40]
   140004354:	mov    QWORD PTR [rbp+0x40],r15
   140004358:	lea    rcx,[rbp+0x48]
   14000435c:	mov    QWORD PTR [rbp+0x38],r15
   140004360:	call   0x140001aa8
   140004365:	cmp    al,sil
   140004368:	jne    0x140004429
   14000436e:	test   ebx,ebx
   140004370:	je     0x1400043e0
   140004372:	sub    ebx,esi
   140004374:	je     0x14000451d
   14000437a:	cmp    ebx,esi
   14000437c:	jne    0x1400043a6
   14000437e:	mov    rcx,QWORD PTR [rbp+0x38]
   140004382:	call   0x14000231c
   140004387:	mov    rcx,QWORD PTR [rbp+0x40]
   14000438b:	call   0x14000240c
   140004390:	mov    rcx,QWORD PTR [rbp+0x48]
   140004394:	call   0x1400024bc
   140004399:	mov    ecx,DWORD PTR [rip+0x8b39]        # 0x14000ced8
   14000439f:	call   QWORD PTR [rip+0x4eb3]        # 0x140009258
   1400043a5:	int3   
   1400043a6:	mov    rcx,QWORD PTR [rip+0x7c8b]        # 0x14000c038
   1400043ad:	cmp    rcx,r14
   1400043b0:	je     0x1400043cd
   1400043b2:	test   BYTE PTR [rcx+0x1c],sil
   1400043b6:	je     0x1400043cd
   1400043b8:	mov    r9d,DWORD PTR [rip+0x8afd]        # 0x14000cebc
   1400043bf:	mov    edx,0x95
   1400043c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400043c8:	call   0x1400011ac
   1400043cd:	xor    eax,eax
   1400043cf:	mov    rbx,QWORD PTR [rsp+0x70]
   1400043d4:	add    rsp,0x40
   1400043d8:	pop    r15
   1400043da:	pop    r14
   1400043dc:	pop    rdi
   1400043dd:	pop    rsi
   1400043de:	pop    rbp
   1400043df:	ret    
   1400043e0:	mov    ecx,0xfffffff6
   1400043e5:	call   QWORD PTR [rip+0x4e45]        # 0x140009230
   1400043eb:	mov    rcx,rax
   1400043ee:	call   QWORD PTR [rip+0x4d8c]        # 0x140009180
   1400043f4:	btr    eax,0xf
   1400043f8:	cmp    eax,edi
   1400043fa:	je     0x14000442d
   1400043fc:	xor    r8d,r8d
   1400043ff:	mov    dl,sil
   140004402:	xor    ecx,ecx
   140004404:	call   0x140001bb8
   140004409:	mov    rcx,QWORD PTR [rip+0x7c28]        # 0x14000c038
   140004410:	cmp    rcx,r14
   140004413:	je     0x140004429
   140004415:	test   BYTE PTR [rcx+0x1c],sil
   140004419:	je     0x140004429
   14000441b:	mov    edx,0x8f
   140004420:	mov    rcx,QWORD PTR [rcx+0x10]
   140004424:	call   0x140001180
   140004429:	mov    eax,esi
   14000442b:	jmp    0x1400043cf
   14000442d:	mov    eax,esi
   14000442f:	lock xadd DWORD PTR [rip+0x8a85],eax        # 0x14000cebc
   140004437:	add    eax,esi
   140004439:	cmp    eax,edi
   14000443b:	jne    0x1400044a4
   14000443d:	call   0x140001cc8
   140004442:	test   eax,eax
   140004444:	jne    0x14000446e
   140004446:	mov    rcx,QWORD PTR [rbp+0x38]
   14000444a:	call   0x14000231c
   14000444f:	mov    rcx,QWORD PTR [rbp+0x40]
   140004453:	call   0x14000240c
   140004458:	mov    rcx,QWORD PTR [rbp+0x48]
   14000445c:	call   0x1400024bc
   140004461:	mov    ecx,DWORD PTR [rip+0x8a71]        # 0x14000ced8
   140004467:	call   QWORD PTR [rip+0x4deb]        # 0x140009258
   14000446d:	int3   
   14000446e:	xor    r8d,r8d
   140004471:	mov    dl,sil
   140004474:	xor    ecx,ecx
   140004476:	call   0x140001bb8
   14000447b:	mov    rcx,QWORD PTR [rip+0x7bb6]        # 0x14000c038
   140004482:	cmp    rcx,r14
   140004485:	je     0x140004429
   140004487:	test   BYTE PTR [rcx+0x1c],sil
   14000448b:	je     0x140004429
   14000448d:	mov    edx,0x90
   140004492:	mov    r9d,DWORD PTR [rip+0x8a23]        # 0x14000cebc
   140004499:	mov    rcx,QWORD PTR [rcx+0x10]
   14000449d:	call   0x1400011ac
   1400044a2:	jmp    0x140004429
   1400044a4:	cmp    eax,esi
   1400044a6:	jne    0x1400044e2
   1400044a8:	lea    rcx,[rip+0x57c1]        # 0x140009c70
   1400044af:	call   0x14000409c
   1400044b4:	xor    r8d,r8d
   1400044b7:	mov    dl,sil
   1400044ba:	xor    ecx,ecx
   1400044bc:	call   0x140001bb8
   1400044c1:	mov    rcx,QWORD PTR [rip+0x7b70]        # 0x14000c038
   1400044c8:	cmp    rcx,r14
   1400044cb:	je     0x140004429
   1400044d1:	test   BYTE PTR [rcx+0x1c],sil
   1400044d5:	je     0x140004429
   1400044db:	mov    edx,0x91
   1400044e0:	jmp    0x140004492
   1400044e2:	cmp    eax,edi
   1400044e4:	jle    0x14000451d
   1400044e6:	xchg   DWORD PTR [rip+0x89d0],edi        # 0x14000cebc
   1400044ec:	xor    r8d,r8d
   1400044ef:	mov    dl,sil
   1400044f2:	xor    ecx,ecx
   1400044f4:	call   0x140001bb8
   1400044f9:	mov    rcx,QWORD PTR [rip+0x7b38]        # 0x14000c038
   140004500:	cmp    rcx,r14
   140004503:	je     0x140004429
   140004509:	test   BYTE PTR [rcx+0x1c],sil
   14000450d:	je     0x140004429
   140004513:	mov    edx,0x92
   140004518:	jmp    0x140004420
   14000451d:	mov    ecx,0xfffffff6
   140004522:	call   QWORD PTR [rip+0x4d08]        # 0x140009230
   140004528:	mov    rcx,rax
   14000452b:	call   QWORD PTR [rip+0x4c4f]        # 0x140009180
   140004531:	btr    eax,0xf
   140004535:	cmp    eax,edi
   140004537:	je     0x14000456a
   140004539:	xor    r8d,r8d
   14000453c:	mov    dl,sil
   14000453f:	xor    ecx,ecx
   140004541:	call   0x140001bb8
   140004546:	mov    rcx,QWORD PTR [rip+0x7aeb]        # 0x14000c038
   14000454d:	cmp    rcx,r14
   140004550:	je     0x140004429
   140004556:	test   BYTE PTR [rcx+0x1c],sil
   14000455a:	je     0x140004429
   140004560:	mov    edx,0x93
   140004565:	jmp    0x140004420
   14000456a:	mov    eax,esi
   14000456c:	lock cmpxchg DWORD PTR [rip+0x8947],r15d        # 0x14000cebc
   140004575:	lea    rcx,[rip+0x5784]        # 0x140009d00
   14000457c:	call   0x14000409c
   140004581:	xor    r8d,r8d
   140004584:	mov    dl,sil
   140004587:	xor    ecx,ecx
   140004589:	call   0x140001bb8
   14000458e:	mov    rcx,QWORD PTR [rip+0x7aa3]        # 0x14000c038
   140004595:	cmp    rcx,r14
   140004598:	je     0x140004429
   14000459e:	test   BYTE PTR [rcx+0x1c],sil
   1400045a2:	je     0x140004429
   1400045a8:	mov    edx,0x94
   1400045ad:	jmp    0x140004492
   1400045b2:	int3   
   1400045b3:	int3   
   1400045b4:	int3   
   1400045b5:	int3   
   1400045b6:	int3   
   1400045b7:	int3   
   1400045b8:	mov    QWORD PTR [rsp+0x18],rbx
   1400045bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400045c2:	push   rdi
   1400045c3:	sub    rsp,0x30
   1400045c7:	mov    rbx,rcx
   1400045ca:	mov    rcx,QWORD PTR [rip+0x7a67]        # 0x14000c038
   1400045d1:	lea    rax,[rip+0x7a60]        # 0x14000c038
   1400045d8:	cmp    rcx,rax
   1400045db:	je     0x1400045f1
   1400045dd:	test   BYTE PTR [rcx+0x1c],0x1
   1400045e1:	je     0x1400045f1
   1400045e3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400045e7:	mov    edx,0x96
   1400045ec:	call   0x140001180
   1400045f1:	mov    rcx,QWORD PTR [rbx]
   1400045f4:	xor    esi,esi
   1400045f6:	test   rcx,rcx
   1400045f9:	je     0x1400046a8
   1400045ff:	cmp    WORD PTR [rcx],si
   140004602:	je     0x1400046a8
   140004608:	cmp    DWORD PTR [rbx+0x8],0x2
   14000460c:	jne    0x1400046a8
   140004612:	cmp    DWORD PTR [rbx+0x10],esi
   140004615:	jbe    0x1400046a8
   14000461b:	lea    rdx,[rip+0x5776]        # 0x140009d98
   140004622:	call   QWORD PTR [rip+0x4d38]        # 0x140009360
   140004628:	mov    ecx,0xfffffff4
   14000462d:	test   eax,eax
   14000462f:	je     0x140004636
   140004631:	mov    ecx,0xfffffff5
   140004636:	call   QWORD PTR [rip+0x4bf4]        # 0x140009230
   14000463c:	mov    edx,DWORD PTR [rbx+0x10]
   14000463f:	lea    r8,[rsp+0x40]
   140004644:	mov    rcx,QWORD PTR [rbx+0x18]
   140004648:	mov    rdi,rax
   14000464b:	mov    DWORD PTR [rsp+0x40],0xffff
   140004653:	call   QWORD PTR [rip+0x99a7]        # 0x14000e000
   140004659:	mov    rdx,QWORD PTR [rbx+0x18]
   14000465d:	test   eax,eax
   14000465f:	jne    0x14000467e
   140004661:	mov    r8d,DWORD PTR [rbx+0x10]
   140004665:	lea    r9,[rsp+0x48]
   14000466a:	mov    rcx,rdi
   14000466d:	mov    DWORD PTR [rsp+0x48],esi
   140004671:	mov    QWORD PTR [rsp+0x20],rsi
   140004676:	call   QWORD PTR [rip+0x4af4]        # 0x140009170
   14000467c:	jmp    0x1400046ad
   14000467e:	test   BYTE PTR [rsp+0x40],0x8
   140004683:	mov    eax,DWORD PTR [rbx+0x10]
   140004686:	je     0x140004694
   140004688:	cmp    eax,0x2
   14000468b:	jl     0x140004694
   14000468d:	add    rdx,0x2
   140004691:	sub    eax,0x2
   140004694:	test   eax,eax
   140004696:	jle    0x1400046a8
   140004698:	movsxd r8,eax
   14000469b:	mov    rcx,rdi
   14000469e:	shr    r8,1
   1400046a1:	call   0x140001664
   1400046a6:	jmp    0x1400046ad
   1400046a8:	mov    eax,0x1
   1400046ad:	mov    rbx,QWORD PTR [rsp+0x50]
   1400046b2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400046b7:	add    rsp,0x30
   1400046bb:	pop    rdi
   1400046bc:	ret    
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	int3   
   1400046c1:	int3   
   1400046c2:	int3   
   1400046c3:	int3   
   1400046c4:	rex push rbp
   1400046c6:	push   rbx
   1400046c7:	push   rsi
   1400046c8:	push   rdi
   1400046c9:	push   r12
   1400046cb:	push   r13
   1400046cd:	push   r14
   1400046cf:	push   r15
   1400046d1:	lea    rbp,[rsp-0x298]
   1400046d9:	sub    rsp,0x398
   1400046e0:	mov    QWORD PTR [rbp+0x78],0xfffffffffffffffe
   1400046e8:	mov    rax,QWORD PTR [rip+0x7919]        # 0x14000c008
   1400046ef:	xor    rax,rsp
   1400046f2:	mov    QWORD PTR [rbp+0x280],rax
   1400046f9:	mov    r15,r9
   1400046fc:	mov    r14d,r8d
   1400046ff:	mov    QWORD PTR [rbp-0x80],rdx
   140004703:	movsxd r13,ecx
   140004706:	mov    r12,QWORD PTR [rbp+0x300]
   14000470d:	mov    rsi,QWORD PTR [rbp+0x310]
   140004714:	mov    rdi,QWORD PTR [rbp+0x318]
   14000471b:	mov    rax,QWORD PTR [rbp+0x330]
   140004722:	mov    QWORD PTR [rbp-0x28],rax
   140004726:	mov    ecx,DWORD PTR [rbp+0x340]
   14000472c:	mov    DWORD PTR [rbp-0x78],ecx
   14000472f:	xor    eax,eax
   140004731:	mov    QWORD PTR [rip+0x8738],rax        # 0x14000ce70
   140004738:	mov    QWORD PTR [rip+0x8739],rax        # 0x14000ce78
   14000473f:	lea    r8,[rip+0x78f2]        # 0x14000c038
   140004746:	mov    rcx,QWORD PTR [rip+0x78eb]        # 0x14000c038
   14000474d:	cmp    rcx,r8
   140004750:	je     0x140004774
   140004752:	test   BYTE PTR [rcx+0x1c],0x1
   140004756:	je     0x140004774
   140004758:	mov    edx,0x97
   14000475d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004761:	call   0x140001180
   140004766:	mov    rcx,QWORD PTR [rip+0x78cb]        # 0x14000c038
   14000476d:	lea    r8,[rip+0x78c4]        # 0x14000c038
   140004774:	xor    eax,eax
   140004776:	mov    QWORD PTR [rbp-0x50],rax
   14000477a:	mov    QWORD PTR [rbp-0x48],rax
   14000477e:	mov    QWORD PTR [rbp-0x40],rax
   140004782:	xor    edx,edx
   140004784:	mov    ebx,edx
   140004786:	test   r14b,0x20
   14000478a:	je     0x140004798
   14000478c:	mov    QWORD PTR [rbp-0x48],rsi
   140004790:	mov    QWORD PTR [rbp-0x40],rdi
   140004794:	lea    rbx,[rbp-0x50]
   140004798:	bt     r14d,0x11
   14000479d:	jae    0x1400047aa
   14000479f:	mov    DWORD PTR [rbp-0x50],0x80
   1400047a6:	lea    rbx,[rbp-0x50]
   1400047aa:	xor    esi,esi
   1400047ac:	cmp    BYTE PTR [rip+0x8705],sil        # 0x14000ceb8
   1400047b3:	je     0x1400047fb
   1400047b5:	cmp    BYTE PTR [rbp+0x320],sil
   1400047bc:	je     0x1400047d8
   1400047be:	or     rbx,0xffffffffffffffff
   1400047c2:	inc    rbx
   1400047c5:	cmp    WORD PTR [rdi+rbx*2],si
   1400047c9:	jne    0x1400047c2
   1400047cb:	lea    rcx,[rbx+0x1]
   1400047cf:	rep stos BYTE PTR es:[rdi],al
   1400047d1:	mov    rcx,QWORD PTR [rip+0x7860]        # 0x14000c038
   1400047d8:	cmp    rcx,r8
   1400047db:	je     0x1400047f4
   1400047dd:	test   BYTE PTR [rcx+0x1c],0x1
   1400047e1:	je     0x1400047f4
   1400047e3:	mov    edx,0x98
   1400047e8:	xor    r9d,r9d
   1400047eb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400047ef:	call   0x1400011ac
   1400047f4:	xor    eax,eax
   1400047f6:	jmp    0x140005599
   1400047fb:	xor    r9d,r9d
   1400047fe:	xor    r8d,r8d
   140004801:	xor    ecx,ecx
   140004803:	call   QWORD PTR [rip+0x4acf]        # 0x1400092d8
   140004809:	mov    QWORD PTR [rip+0x8678],rax        # 0x14000ce88
   140004810:	test   rax,rax
   140004813:	jne    0x14000481f
   140004815:	call   0x140001834
   14000481a:	mov    r9d,eax
   14000481d:	jmp    0x140004822
   14000481f:	mov    r9d,esi
   140004822:	test   r9d,r9d
   140004825:	je     0x140004865
   140004827:	cmp    BYTE PTR [rbp+0x320],sil
   14000482e:	je     0x140004845
   140004830:	or     rbx,0xffffffffffffffff
   140004834:	inc    rbx
   140004837:	cmp    WORD PTR [rdi+rbx*2],si
   14000483b:	jne    0x140004834
   14000483d:	lea    rcx,[rbx+0x1]
   140004841:	xor    eax,eax
   140004843:	rep stos BYTE PTR es:[rdi],al
   140004845:	mov    rcx,QWORD PTR [rip+0x77ec]        # 0x14000c038
   14000484c:	lea    rax,[rip+0x77e5]        # 0x14000c038
   140004853:	cmp    rcx,rax
   140004856:	je     0x1400047f4
   140004858:	test   BYTE PTR [rcx+0x1c],0x1
   14000485c:	je     0x1400047f4
   14000485e:	mov    edx,0x99
   140004863:	jmp    0x1400047eb
   140004865:	mov    QWORD PTR [rsp+0x58],rsi
   14000486a:	mov    QWORD PTR [rsp+0x48],rsi
   14000486f:	mov    QWORD PTR [rsp+0x40],rsi
   140004874:	mov    QWORD PTR [rsp+0x50],rsi
   140004879:	lea    r9,[rsp+0x50]
   14000487e:	lea    r8,[rsp+0x40]
   140004883:	lea    rdx,[rsp+0x48]
   140004888:	lea    rcx,[rsp+0x58]
   14000488d:	call   0x140001aa8
   140004892:	test   al,al
   140004894:	jne    0x1400048df
   140004896:	cmp    BYTE PTR [rbp+0x320],sil
   14000489d:	je     0x1400048b4
   14000489f:	or     rbx,0xffffffffffffffff
   1400048a3:	inc    rbx
   1400048a6:	cmp    WORD PTR [rdi+rbx*2],si
   1400048aa:	jne    0x1400048a3
   1400048ac:	lea    rcx,[rbx+0x1]
   1400048b0:	xor    eax,eax
   1400048b2:	rep stos BYTE PTR es:[rdi],al
   1400048b4:	mov    rcx,QWORD PTR [rip+0x777d]        # 0x14000c038
   1400048bb:	lea    rax,[rip+0x7776]        # 0x14000c038
   1400048c2:	cmp    rcx,rax
   1400048c5:	je     0x1400047f4
   1400048cb:	test   BYTE PTR [rcx+0x1c],0x1
   1400048cf:	je     0x1400047f4
   1400048d5:	mov    edx,0x9a
   1400048da:	jmp    0x1400047e8
   1400048df:	lea    rdx,[rsp+0x58]
   1400048e4:	xor    ecx,ecx
   1400048e6:	call   QWORD PTR [rip+0x4724]        # 0x140009010
   1400048ec:	mov    esi,eax
   1400048ee:	xor    eax,eax
   1400048f0:	test   esi,esi
   1400048f2:	je     0x14000495e
   1400048f4:	cmp    BYTE PTR [rbp+0x320],al
   1400048fa:	je     0x14000490f
   1400048fc:	or     rbx,0xffffffffffffffff
   140004900:	inc    rbx
   140004903:	cmp    WORD PTR [rdi+rbx*2],ax
   140004907:	jne    0x140004900
   140004909:	lea    rcx,[rbx+0x1]
   14000490d:	rep stos BYTE PTR es:[rdi],al
   14000490f:	mov    r8b,0x1
   140004912:	mov    dl,r8b
   140004915:	mov    ecx,esi
   140004917:	call   0x140001bb8
   14000491c:	xor    edx,edx
   14000491e:	test   al,al
   140004920:	je     0x140004929
   140004922:	mov    ecx,esi
   140004924:	call   0x140002b28
   140004929:	mov    rcx,QWORD PTR [rip+0x7708]        # 0x14000c038
   140004930:	lea    rax,[rip+0x7701]        # 0x14000c038
   140004937:	cmp    rcx,rax
   14000493a:	je     0x140004953
   14000493c:	test   BYTE PTR [rcx+0x1c],0x1
   140004940:	je     0x140004953
   140004942:	mov    edx,0x9b
   140004947:	mov    r9d,esi
   14000494a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000494e:	call   0x1400011ac
   140004953:	mov    eax,DWORD PTR [rip+0x857f]        # 0x14000ced8
   140004959:	jmp    0x140005599
   14000495e:	lea    rcx,[rsp+0x58]
   140004963:	call   0x140002648
   140004968:	xor    esi,esi
   14000496a:	test   al,al
   14000496c:	jne    0x1400049d4
   14000496e:	cmp    BYTE PTR [rbp+0x320],sil
   140004975:	je     0x14000498c
   140004977:	or     rbx,0xffffffffffffffff
   14000497b:	inc    rbx
   14000497e:	cmp    WORD PTR [rdi+rbx*2],si
   140004982:	jne    0x14000497b
   140004984:	lea    rcx,[rbx+0x1]
   140004988:	xor    eax,eax
   14000498a:	rep stos BYTE PTR es:[rdi],al
   14000498c:	call   QWORD PTR [rip+0x47be]        # 0x140009150
   140004992:	mov    edi,eax
   140004994:	mov    r8b,0x1
   140004997:	mov    dl,r8b
   14000499a:	mov    ecx,eax
   14000499c:	call   0x140001bb8
   1400049a1:	test   al,al
   1400049a3:	je     0x1400049ae
   1400049a5:	xor    edx,edx
   1400049a7:	mov    ecx,edi
   1400049a9:	call   0x140002b28
   1400049ae:	mov    rcx,QWORD PTR [rip+0x7683]        # 0x14000c038
   1400049b5:	lea    rax,[rip+0x767c]        # 0x14000c038
   1400049bc:	cmp    rcx,rax
   1400049bf:	je     0x140004953
   1400049c1:	test   BYTE PTR [rcx+0x1c],0x1
   1400049c5:	je     0x140004953
   1400049c7:	mov    edx,0x9c
   1400049cc:	mov    r9d,edi
   1400049cf:	jmp    0x14000494a
   1400049d4:	xor    r8d,r8d
   1400049d7:	mov    dl,0x1
   1400049d9:	xor    ecx,ecx
   1400049db:	call   0x140001bb8
   1400049e0:	lea    r9,[rsp+0x50]
   1400049e5:	lea    r8,[rsp+0x40]
   1400049ea:	lea    rdx,[rsp+0x48]
   1400049ef:	lea    rcx,[rsp+0x58]
   1400049f4:	call   0x140001aa8
   1400049f9:	test   al,al
   1400049fb:	jne    0x140004a46
   1400049fd:	cmp    BYTE PTR [rbp+0x320],sil
   140004a04:	je     0x140004a1b
   140004a06:	or     rbx,0xffffffffffffffff
   140004a0a:	inc    rbx
   140004a0d:	cmp    WORD PTR [rdi+rbx*2],si
   140004a11:	jne    0x140004a0a
   140004a13:	lea    rcx,[rbx+0x1]
   140004a17:	xor    eax,eax
   140004a19:	rep stos BYTE PTR es:[rdi],al
   140004a1b:	mov    rcx,QWORD PTR [rip+0x7616]        # 0x14000c038
   140004a22:	lea    rax,[rip+0x760f]        # 0x14000c038
   140004a29:	cmp    rcx,rax
   140004a2c:	je     0x1400047f4
   140004a32:	test   BYTE PTR [rcx+0x1c],0x1
   140004a36:	je     0x1400047f4
   140004a3c:	mov    edx,0x9d
   140004a41:	jmp    0x1400047e8
   140004a46:	lea    rax,[rsp+0x48]
   140004a4b:	mov    QWORD PTR [rsp+0x28],rax
   140004a50:	mov    QWORD PTR [rsp+0x20],rsi
   140004a55:	mov    r9,rbx
   140004a58:	xor    r8d,r8d
   140004a5b:	mov    rdx,r15
   140004a5e:	mov    rcx,QWORD PTR [rsp+0x58]
   140004a63:	call   QWORD PTR [rip+0x45bf]        # 0x140009028
   140004a69:	mov    esi,eax
   140004a6b:	xor    r15d,r15d
   140004a6e:	test   eax,eax
   140004a70:	je     0x140004ad6
   140004a72:	cmp    BYTE PTR [rbp+0x320],r15b
   140004a79:	je     0x140004a91
   140004a7b:	or     rbx,0xffffffffffffffff
   140004a7f:	inc    rbx
   140004a82:	cmp    WORD PTR [rdi+rbx*2],r15w
   140004a87:	jne    0x140004a7f
   140004a89:	lea    rcx,[rbx+0x1]
   140004a8d:	xor    eax,eax
   140004a8f:	rep stos BYTE PTR es:[rdi],al
   140004a91:	mov    r8b,0x1
   140004a94:	mov    dl,r8b
   140004a97:	mov    ecx,esi
   140004a99:	call   0x140001bb8
   140004a9e:	test   al,al
   140004aa0:	je     0x140004aab
   140004aa2:	xor    edx,edx
   140004aa4:	mov    ecx,esi
   140004aa6:	call   0x140002b28
   140004aab:	mov    rcx,QWORD PTR [rip+0x7586]        # 0x14000c038
   140004ab2:	lea    rax,[rip+0x757f]        # 0x14000c038
   140004ab9:	cmp    rcx,rax
   140004abc:	je     0x140004953
   140004ac2:	test   BYTE PTR [rcx+0x1c],0x1
   140004ac6:	je     0x140004953
   140004acc:	mov    edx,0x9e
   140004ad1:	jmp    0x140004947
   140004ad6:	or     rbx,0xffffffffffffffff
   140004ada:	cmp    BYTE PTR [rbp+0x320],r15b
   140004ae1:	je     0x140004af7
   140004ae3:	mov    rcx,rbx
   140004ae6:	inc    rcx
   140004ae9:	cmp    WORD PTR [rdi+rcx*2],r15w
   140004aee:	jne    0x140004ae6
   140004af0:	inc    rcx
   140004af3:	xor    eax,eax
   140004af5:	rep stos BYTE PTR es:[rdi],al
   140004af7:	lea    rcx,[rsp+0x48]
   140004afc:	call   0x14000256c
   140004b01:	test   al,al
   140004b03:	jne    0x140004b52
   140004b05:	call   QWORD PTR [rip+0x4645]        # 0x140009150
   140004b0b:	mov    edi,eax
   140004b0d:	mov    r8b,0x1
   140004b10:	mov    dl,r8b
   140004b13:	mov    ecx,eax
   140004b15:	call   0x140001bb8
   140004b1a:	test   al,al
   140004b1c:	je     0x140004b27
   140004b1e:	xor    edx,edx
   140004b20:	mov    ecx,edi
   140004b22:	call   0x140002b28
   140004b27:	mov    rcx,QWORD PTR [rip+0x750a]        # 0x14000c038
   140004b2e:	lea    rax,[rip+0x7503]        # 0x14000c038
   140004b35:	cmp    rcx,rax
   140004b38:	je     0x140004953
   140004b3e:	test   BYTE PTR [rcx+0x1c],0x1
   140004b42:	je     0x140004953
   140004b48:	mov    edx,0x9f
   140004b4d:	jmp    0x1400049cc
   140004b52:	xor    eax,eax
   140004b54:	mov    QWORD PTR [rbp-0x70],rax
   140004b58:	mov    QWORD PTR [rbp-0x68],rax
   140004b5c:	mov    QWORD PTR [rbp-0x60],rax
   140004b60:	mov    DWORD PTR [rbp-0x70],0x4
   140004b67:	mov    DWORD PTR [rbp-0x68],0x1
   140004b6e:	test   r14b,0x10
   140004b72:	je     0x140004bda
   140004b74:	cmp    DWORD PTR [rbp+0x328],0x1
   140004b7b:	jne    0x140004bda
   140004b7d:	lea    r8,[rbp-0x70]
   140004b81:	lea    edx,[rax+0x14]
   140004b84:	mov    rcx,QWORD PTR [rsp+0x48]
   140004b89:	call   QWORD PTR [rip+0x4529]        # 0x1400090b8
   140004b8f:	mov    edi,eax
   140004b91:	test   eax,eax
   140004b93:	je     0x140004bda
   140004b95:	mov    r8b,0x1
   140004b98:	mov    dl,r8b
   140004b9b:	mov    ecx,eax
   140004b9d:	call   0x140001bb8
   140004ba2:	test   al,al
   140004ba4:	je     0x140004baf
   140004ba6:	xor    edx,edx
   140004ba8:	mov    ecx,edi
   140004baa:	call   0x140002b28
   140004baf:	mov    rcx,QWORD PTR [rip+0x7482]        # 0x14000c038
   140004bb6:	lea    rax,[rip+0x747b]        # 0x14000c038
   140004bbd:	cmp    rcx,rax
   140004bc0:	je     0x140004953
   140004bc6:	test   BYTE PTR [rcx+0x1c],0x1
   140004bca:	je     0x140004953
   140004bd0:	mov    edx,0xa0
   140004bd5:	jmp    0x1400049cc
   140004bda:	cmp    DWORD PTR [rip+0x8233],r15d        # 0x14000ce14
   140004be1:	je     0x140004c5c
   140004be3:	xor    eax,eax
   140004be5:	mov    QWORD PTR [rbp-0x70],rax
   140004be9:	mov    QWORD PTR [rbp-0x68],rax
   140004bed:	mov    QWORD PTR [rbp-0x60],rax
   140004bf1:	mov    DWORD PTR [rbp-0x70],0x4
   140004bf8:	mov    DWORD PTR [rbp-0x68],0x1
   140004bff:	lea    r8,[rbp-0x70]
   140004c03:	lea    edx,[rax+0x21]
   140004c06:	mov    rcx,QWORD PTR [rsp+0x48]
   140004c0b:	call   QWORD PTR [rip+0x44a7]        # 0x1400090b8
   140004c11:	mov    edi,eax
   140004c13:	test   eax,eax
   140004c15:	je     0x140004c5c
   140004c17:	mov    r8b,0x1
   140004c1a:	mov    dl,r8b
   140004c1d:	mov    ecx,eax
   140004c1f:	call   0x140001bb8
   140004c24:	test   al,al
   140004c26:	je     0x140004c31
   140004c28:	xor    edx,edx
   140004c2a:	mov    ecx,edi
   140004c2c:	call   0x140002b28
   140004c31:	mov    rcx,QWORD PTR [rip+0x7400]        # 0x14000c038
   140004c38:	lea    rax,[rip+0x73f9]        # 0x14000c038
   140004c3f:	cmp    rcx,rax
   140004c42:	je     0x140004953
   140004c48:	test   BYTE PTR [rcx+0x1c],0x1
   140004c4c:	je     0x140004953
   140004c52:	mov    edx,0xa1
   140004c57:	jmp    0x1400049cc
   140004c5c:	xor    r8d,r8d
   140004c5f:	mov    dl,0x1
   140004c61:	xor    ecx,ecx
   140004c63:	call   0x140001bb8
   140004c68:	lea    r9,[rsp+0x50]
   140004c6d:	lea    r8,[rsp+0x40]
   140004c72:	lea    rdx,[rsp+0x48]
   140004c77:	lea    rcx,[rsp+0x58]
   140004c7c:	call   0x140001aa8
   140004c81:	movzx  eax,al
   140004c84:	test   eax,eax
   140004c86:	jne    0x140004cb3
   140004c88:	mov    rcx,QWORD PTR [rip+0x73a9]        # 0x14000c038
   140004c8f:	lea    rax,[rip+0x73a2]        # 0x14000c038
   140004c96:	cmp    rcx,rax
   140004c99:	je     0x1400047f4
   140004c9f:	test   BYTE PTR [rcx+0x1c],0x1
   140004ca3:	je     0x1400047f4
   140004ca9:	mov    edx,0xa2
   140004cae:	jmp    0x1400047e8
   140004cb3:	xor    edx,edx
   140004cb5:	lea    r8d,[rdx+0x28]
   140004cb9:	lea    rcx,[rbp+0xb0]
   140004cc0:	call   0x140008032
   140004cc5:	lea    rax,[rip+0x50dc]        # 0x140009da8
   140004ccc:	mov    QWORD PTR [rbp+0x8],rax
   140004cd0:	lea    rcx,[rip+0x50f1]        # 0x140009dc8
   140004cd7:	lea    rsi,[rip+0x50fa]        # 0x140009dd8
   140004cde:	mov    rax,rsi
   140004ce1:	and    r14d,0x10000
   140004ce8:	cmovne rax,rcx
   140004cec:	mov    QWORD PTR [rbp+0x10],rax
   140004cf0:	mov    DWORD PTR [rbp+0x18],r15d
   140004cf4:	call   QWORD PTR [rip+0x4406]        # 0x140009100
   140004cfa:	mov    r9d,eax
   140004cfd:	lea    r8,[rip+0x50e4]        # 0x140009de8
   140004d04:	mov    edx,0x14
   140004d09:	lea    rcx,[rbp+0x250]
   140004d10:	call   0x140001028
   140004d15:	mov    edi,eax
   140004d17:	test   eax,eax
   140004d19:	jns    0x140004d74
   140004d1b:	mov    ecx,eax
   140004d1d:	and    ecx,0x1fff0000
   140004d23:	movzx  eax,ax
   140004d26:	cmp    ecx,0x70000
   140004d2c:	cmove  edi,eax
   140004d2f:	mov    r8b,0x1
   140004d32:	mov    dl,r8b
   140004d35:	mov    ecx,edi
   140004d37:	call   0x140001bb8
   140004d3c:	test   al,al
   140004d3e:	je     0x140004d49
   140004d40:	xor    edx,edx
   140004d42:	mov    ecx,edi
   140004d44:	call   0x140002b28
   140004d49:	mov    rcx,QWORD PTR [rip+0x72e8]        # 0x14000c038
   140004d50:	lea    rax,[rip+0x72e1]        # 0x14000c038
   140004d57:	cmp    rcx,rax
   140004d5a:	je     0x140004953
   140004d60:	test   BYTE PTR [rcx+0x1c],0x1
   140004d64:	je     0x140004953
   140004d6a:	mov    edx,0xa3
   140004d6f:	jmp    0x1400049cc
   140004d74:	lea    rax,[rip+0x5075]        # 0x140009df0
   140004d7b:	mov    QWORD PTR [rbp-0x10],rax
   140004d7f:	lea    rax,[rbp+0x250]
   140004d86:	mov    QWORD PTR [rbp-0x8],rax
   140004d8a:	mov    DWORD PTR [rbp+0x0],r15d
   140004d8e:	movups xmm0,XMMWORD PTR [rbp+0x8]
   140004d92:	movups XMMWORD PTR [rbp+0x80],xmm0
   140004d99:	movsd  xmm1,QWORD PTR [rbp+0x18]
   140004d9e:	movsd  QWORD PTR [rbp+0x90],xmm1
   140004da6:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140004daa:	movups XMMWORD PTR [rbp+0x98],xmm0
   140004db1:	movsd  xmm1,QWORD PTR [rbp+0x0]
   140004db6:	movsd  QWORD PTR [rbp+0xa8],xmm1
   140004dbe:	mov    DWORD PTR [rbp+0x60],0x2
   140004dc5:	lea    rax,[rbp+0x80]
   140004dcc:	mov    QWORD PTR [rbp+0x68],rax
   140004dd0:	mov    DWORD PTR [rbp+0x70],r15d
   140004dd4:	mov    QWORD PTR [rbp+0xc8],r12
   140004ddb:	mov    eax,DWORD PTR [rbp+0x338]
   140004de1:	mov    DWORD PTR [rbp+0x20],eax
   140004de4:	mov    rax,QWORD PTR [rbp-0x28]
   140004de8:	mov    QWORD PTR [rbp+0x28],rax
   140004dec:	lea    rax,[rbp+0x20]
   140004df0:	mov    QWORD PTR [rbp+0xd0],rax
   140004df7:	mov    BYTE PTR [rsp+0x68],r15b
   140004dfc:	mov    QWORD PTR [rsp+0x70],r15
   140004e01:	mov    QWORD PTR [rsp+0x78],r15
   140004e06:	xor    r9d,r9d
   140004e09:	xor    r8d,r8d
   140004e0c:	xor    edx,edx
   140004e0e:	xor    ecx,ecx
   140004e10:	call   QWORD PTR [rip+0x44c2]        # 0x1400092d8
   140004e16:	mov    QWORD PTR [rsp+0x70],rax
   140004e1b:	test   rax,rax
   140004e1e:	jne    0x140004e29
   140004e20:	call   0x140001834
   140004e25:	mov    edi,eax
   140004e27:	jmp    0x140004e2c
   140004e29:	mov    edi,r15d
   140004e2c:	test   edi,edi
   140004e2e:	je     0x140004e78
   140004e30:	mov    r8b,0x1
   140004e33:	mov    dl,r8b
   140004e36:	mov    ecx,edi
   140004e38:	call   0x140001bb8
   140004e3d:	test   al,al
   140004e3f:	je     0x140004e4a
   140004e41:	xor    edx,edx
   140004e43:	mov    ecx,edi
   140004e45:	call   0x140002b28
   140004e4a:	mov    rcx,QWORD PTR [rip+0x71e7]        # 0x14000c038
   140004e51:	lea    rax,[rip+0x71e0]        # 0x14000c038
   140004e58:	cmp    rcx,rax
   140004e5b:	je     0x140004f75
   140004e61:	test   BYTE PTR [rcx+0x1c],0x1
   140004e65:	je     0x140004f75
   140004e6b:	mov    edx,0xa4
   140004e70:	mov    r9d,edi
   140004e73:	jmp    0x140004f6c
   140004e78:	lea    rax,[rsp+0x68]
   140004e7d:	mov    QWORD PTR [rbp-0x38],rax
   140004e81:	lea    rax,[rip+0x2328]        # 0x1400071b0
   140004e88:	mov    QWORD PTR [rbp-0x30],rax
   140004e8c:	mov    edx,r15d
   140004e8f:	cmp    DWORD PTR [rip+0x7f66],r15d        # 0x14000cdfc
   140004e96:	mov    r14d,0x1
   140004e9c:	cmove  edx,r14d
   140004ea0:	lea    rax,[rsp+0x40]
   140004ea5:	mov    QWORD PTR [rsp+0x38],rax
   140004eaa:	lea    rax,[rbp-0x38]
   140004eae:	mov    QWORD PTR [rsp+0x30],rax
   140004eb3:	mov    QWORD PTR [rsp+0x28],r15
   140004eb8:	lea    rax,[rbp+0x60]
   140004ebc:	mov    QWORD PTR [rsp+0x20],rax
   140004ec1:	lea    r9,[rbp+0xb0]
   140004ec8:	lea    r8,[rip+0x4f41]        # 0x140009e10
   140004ecf:	mov    rcx,QWORD PTR [rsp+0x48]
   140004ed4:	call   QWORD PTR [rip+0x413e]        # 0x140009018
   140004eda:	or     r12d,0xffffffff
   140004ede:	mov    rcx,QWORD PTR [rsp+0x70]
   140004ee3:	test   rcx,rcx
   140004ee6:	je     0x140004ef1
   140004ee8:	mov    edx,r12d
   140004eeb:	call   QWORD PTR [rip+0x43df]        # 0x1400092d0
   140004ef1:	lea    rcx,[rsp+0x40]
   140004ef6:	call   0x140002848
   140004efb:	test   al,al
   140004efd:	jne    0x140004f44
   140004eff:	call   QWORD PTR [rip+0x424b]        # 0x140009150
   140004f05:	mov    edi,eax
   140004f07:	mov    r8b,r14b
   140004f0a:	mov    dl,r14b
   140004f0d:	mov    ecx,eax
   140004f0f:	call   0x140001bb8
   140004f14:	test   al,al
   140004f16:	je     0x140004f21
   140004f18:	xor    edx,edx
   140004f1a:	mov    ecx,edi
   140004f1c:	call   0x140002b28
   140004f21:	mov    rcx,QWORD PTR [rip+0x7110]        # 0x14000c038
   140004f28:	lea    rax,[rip+0x7109]        # 0x14000c038
   140004f2f:	cmp    rcx,rax
   140004f32:	je     0x140004f75
   140004f34:	test   BYTE PTR [rcx+0x1c],r14b
   140004f38:	je     0x140004f75
   140004f3a:	mov    edx,0xa5
   140004f3f:	jmp    0x140004e70
   140004f44:	mov    r9d,DWORD PTR [rsp+0x78]
   140004f49:	test   r9d,r9d
   140004f4c:	je     0x140004f80
   140004f4e:	mov    rcx,QWORD PTR [rip+0x70e3]        # 0x14000c038
   140004f55:	lea    rax,[rip+0x70dc]        # 0x14000c038
   140004f5c:	cmp    rcx,rax
   140004f5f:	je     0x140004f75
   140004f61:	test   BYTE PTR [rcx+0x1c],r14b
   140004f65:	je     0x140004f75
   140004f67:	mov    edx,0xa6
   140004f6c:	mov    rcx,QWORD PTR [rcx+0x10]
   140004f70:	call   0x1400011ac
   140004f75:	mov    edi,DWORD PTR [rip+0x7f5d]        # 0x14000ced8
   140004f7b:	jmp    0x140005587
   140004f80:	lea    rcx,[rsp+0x60]
   140004f85:	call   QWORD PTR [rip+0x40dd]        # 0x140009068
   140004f8b:	nop
   140004f8c:	cmp    r13d,r14d
   140004f8f:	jle    0x14000503e
   140004f95:	lea    eax,[r13-0x1]
   140004f99:	movsxd rcx,eax
   140004f9c:	mov    eax,0x8
   140004fa1:	mul    rcx
   140004fa4:	cmovo  rax,rbx
   140004fa8:	xor    r8d,r8d
   140004fab:	xor    edx,edx
   140004fad:	mov    rcx,rax
   140004fb0:	call   QWORD PTR [rip+0x404a]        # 0x140009000
   140004fb6:	mov    rdx,rax
   140004fb9:	lea    rcx,[rsp+0x60]
   140004fbe:	call   QWORD PTR [rip+0x40ac]        # 0x140009070
   140004fc4:	cmp    QWORD PTR [rsp+0x60],r15
   140004fc9:	jne    0x140005015
   140004fcb:	mov    r8b,r14b
   140004fce:	mov    dl,r14b
   140004fd1:	mov    edi,0xe
   140004fd6:	mov    ecx,edi
   140004fd8:	call   0x140001bb8
   140004fdd:	test   al,al
   140004fdf:	je     0x140004fea
   140004fe1:	xor    edx,edx
   140004fe3:	mov    ecx,edi
   140004fe5:	call   0x140002b28
   140004fea:	mov    rcx,QWORD PTR [rip+0x7047]        # 0x14000c038
   140004ff1:	lea    rax,[rip+0x7040]        # 0x14000c038
   140004ff8:	cmp    rcx,rax
   140004ffb:	je     0x1400051b0
   140005001:	test   BYTE PTR [rcx+0x1c],r14b
   140005005:	je     0x1400051b0
   14000500b:	mov    edx,0xa7
   140005010:	jmp    0x14000517a
   140005015:	mov    rbx,QWORD PTR [rbp-0x80]
   140005019:	cmp    r13,r14
   14000501c:	jle    0x140005042
   14000501e:	mov    rdx,r15
   140005021:	lea    rdi,[r13-0x1]
   140005025:	mov    rcx,QWORD PTR [rbx+rdx*1+0x8]
   14000502a:	mov    rax,QWORD PTR [rsp+0x60]
   14000502f:	mov    QWORD PTR [rax+rdx*1],rcx
   140005033:	lea    rdx,[rdx+0x8]
   140005037:	sub    rdi,r14
   14000503a:	jne    0x140005025
   14000503c:	jmp    0x140005042
   14000503e:	mov    rbx,QWORD PTR [rbp-0x80]
   140005042:	lea    eax,[r13-0x1]
   140005046:	mov    DWORD PTR [rbp-0x20],eax
   140005049:	mov    rax,QWORD PTR [rsp+0x60]
   14000504e:	mov    QWORD PTR [rbp-0x18],rax
   140005052:	lea    rax,[rip+0x4e2f]        # 0x140009e88
   140005059:	mov    QWORD PTR [rbp+0x48],rax
   14000505d:	mov    eax,DWORD PTR [rbp-0x78]
   140005060:	and    al,0x2
   140005062:	lea    rax,[rip+0x4d5f]        # 0x140009dc8
   140005069:	cmovne rsi,rax
   14000506d:	mov    QWORD PTR [rbp+0x50],rsi
   140005071:	mov    DWORD PTR [rbp+0x58],r15d
   140005075:	mov    DWORD PTR [rbp+0x30],r14d
   140005079:	lea    rax,[rbp+0x48]
   14000507d:	mov    QWORD PTR [rbp+0x38],rax
   140005081:	mov    DWORD PTR [rbp+0x40],r15d
   140005085:	xor    r8d,r8d
   140005088:	mov    dl,r14b
   14000508b:	xor    ecx,ecx
   14000508d:	call   0x140001bb8
   140005092:	lea    r9,[rsp+0x50]
   140005097:	lea    r8,[rsp+0x40]
   14000509c:	lea    rdx,[rsp+0x48]
   1400050a1:	lea    rcx,[rsp+0x58]
   1400050a6:	call   0x140001aa8
   1400050ab:	movzx  eax,al
   1400050ae:	test   eax,eax
   1400050b0:	jne    0x1400050e4
   1400050b2:	mov    rcx,QWORD PTR [rip+0x6f7f]        # 0x14000c038
   1400050b9:	lea    rax,[rip+0x6f78]        # 0x14000c038
   1400050c0:	cmp    rcx,rax
   1400050c3:	je     0x1400050dc
   1400050c5:	test   BYTE PTR [rcx+0x1c],r14b
   1400050c9:	je     0x1400050dc
   1400050cb:	mov    edx,0xa8
   1400050d0:	xor    r9d,r9d
   1400050d3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400050d7:	call   0x1400011ac
   1400050dc:	mov    edi,r15d
   1400050df:	jmp    0x14000557b
   1400050e4:	mov    eax,DWORD PTR [rbp-0x20]
   1400050e7:	neg    eax
   1400050e9:	sbb    r9,r9
   1400050ec:	lea    rax,[rbp-0x20]
   1400050f0:	and    r9,rax
   1400050f3:	lea    rax,[rsp+0x50]
   1400050f8:	mov    QWORD PTR [rsp+0x30],rax
   1400050fd:	lea    rax,[rbp-0x38]
   140005101:	mov    QWORD PTR [rsp+0x28],rax
   140005106:	lea    rax,[rbp+0x30]
   14000510a:	mov    QWORD PTR [rsp+0x20],rax
   14000510f:	mov    r8,QWORD PTR [rbx]
   140005112:	xor    edx,edx
   140005114:	mov    rcx,QWORD PTR [rsp+0x40]
   140005119:	call   QWORD PTR [rip+0x3f89]        # 0x1400090a8
   14000511f:	mov    rcx,QWORD PTR [rsp+0x70]
   140005124:	test   rcx,rcx
   140005127:	je     0x140005132
   140005129:	mov    edx,r12d
   14000512c:	call   QWORD PTR [rip+0x419e]        # 0x1400092d0
   140005132:	mov    rcx,QWORD PTR [rsp+0x50]
   140005137:	call   0x140002724
   14000513c:	mov    edi,eax
   14000513e:	test   eax,eax
   140005140:	je     0x14000517f
   140005142:	mov    r8b,r14b
   140005145:	mov    dl,r14b
   140005148:	mov    ecx,eax
   14000514a:	call   0x140001bb8
   14000514f:	test   al,al
   140005151:	je     0x14000515c
   140005153:	xor    edx,edx
   140005155:	mov    ecx,edi
   140005157:	call   0x140002b28
   14000515c:	mov    rcx,QWORD PTR [rip+0x6ed5]        # 0x14000c038
   140005163:	lea    rax,[rip+0x6ece]        # 0x14000c038
   14000516a:	cmp    rcx,rax
   14000516d:	je     0x1400051b0
   14000516f:	test   BYTE PTR [rcx+0x1c],r14b
   140005173:	je     0x1400051b0
   140005175:	mov    edx,0xa9
   14000517a:	mov    r9d,edi
   14000517d:	jmp    0x1400051a7
   14000517f:	mov    r9d,DWORD PTR [rsp+0x78]
   140005184:	test   r9d,r9d
   140005187:	je     0x1400051bb
   140005189:	mov    rcx,QWORD PTR [rip+0x6ea8]        # 0x14000c038
   140005190:	lea    rax,[rip+0x6ea1]        # 0x14000c038
   140005197:	cmp    rcx,rax
   14000519a:	je     0x1400051b0
   14000519c:	test   BYTE PTR [rcx+0x1c],r14b
   1400051a0:	je     0x1400051b0
   1400051a2:	mov    edx,0xaa
   1400051a7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400051ab:	call   0x1400011ac
   1400051b0:	mov    edi,DWORD PTR [rip+0x7d22]        # 0x14000ced8
   1400051b6:	jmp    0x14000557b
   1400051bb:	lea    rax,[rip+0x4d1e]        # 0x140009ee0
   1400051c2:	mov    QWORD PTR [rbp+0xe0],rax
   1400051c9:	mov    QWORD PTR [rbp+0xe8],r15
   1400051d0:	mov    DWORD PTR [rbp+0xf0],r15d
   1400051d7:	mov    QWORD PTR [rbp+0xf8],r15
   1400051de:	xorps  xmm0,xmm0
   1400051e1:	movdqa XMMWORD PTR [rbp+0x100],xmm0
   1400051e9:	mov    QWORD PTR [rbp+0x110],r15
   1400051f0:	mov    WORD PTR [rbp+0x118],r15w
   1400051f8:	mov    BYTE PTR [rbp+0x220],r15b
   1400051ff:	mov    QWORD PTR [rbp+0x228],r15
   140005206:	mov    QWORD PTR [rbp+0x230],r15
   14000520d:	mov    rcx,QWORD PTR [rip+0x6e24]        # 0x14000c038
   140005214:	lea    rsi,[rip+0x6e1d]        # 0x14000c038
   14000521b:	cmp    rcx,rsi
   14000521e:	je     0x140005234
   140005220:	test   BYTE PTR [rcx+0x1c],r14b
   140005224:	je     0x140005234
   140005226:	mov    edx,0x40
   14000522b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000522f:	call   0x140001180
   140005234:	lea    r13,[rip+0x4cc5]        # 0x140009f00
   14000523b:	mov    QWORD PTR [rbp+0xe0],r13
   140005242:	mov    QWORD PTR [rbp+0x238],r15
   140005249:	xorps  xmm0,xmm0
   14000524c:	movdqa XMMWORD PTR [rbp+0x240],xmm0
   140005254:	lea    rcx,[rbp+0xe0]
   14000525b:	call   0x140003d50
   140005260:	mov    edi,eax
   140005262:	mov    dl,r14b
   140005265:	test   eax,eax
   140005267:	je     0x1400052a7
   140005269:	mov    r8b,r14b
   14000526c:	mov    ecx,eax
   14000526e:	call   0x140001bb8
   140005273:	test   al,al
   140005275:	je     0x140005280
   140005277:	xor    edx,edx
   140005279:	mov    ecx,edi
   14000527b:	call   0x140002b28
   140005280:	mov    rcx,QWORD PTR [rip+0x6db1]        # 0x14000c038
   140005287:	cmp    rcx,rsi
   14000528a:	je     0x140005548
   140005290:	test   BYTE PTR [rcx+0x1c],r14b
   140005294:	je     0x140005548
   14000529a:	mov    edx,0xab
   14000529f:	mov    r9d,edi
   1400052a2:	jmp    0x14000553f
   1400052a7:	xor    r8d,r8d
   1400052aa:	xor    ecx,ecx
   1400052ac:	call   0x140001bb8
   1400052b1:	lea    r9,[rsp+0x50]
   1400052b6:	lea    r8,[rsp+0x40]
   1400052bb:	lea    rdx,[rsp+0x48]
   1400052c0:	lea    rcx,[rsp+0x58]
   1400052c5:	call   0x140001aa8
   1400052ca:	movzx  eax,al
   1400052cd:	test   eax,eax
   1400052cf:	jne    0x1400052f5
   1400052d1:	mov    rcx,QWORD PTR [rip+0x6d60]        # 0x14000c038
   1400052d8:	cmp    rcx,rsi
   1400052db:	je     0x14000543c
   1400052e1:	test   BYTE PTR [rcx+0x1c],r14b
   1400052e5:	je     0x14000543c
   1400052eb:	mov    edx,0xac
   1400052f0:	jmp    0x140005430
   1400052f5:	mov    rax,QWORD PTR [rsp+0x40]
   1400052fa:	mov    QWORD PTR [rbp+0x240],rax
   140005301:	mov    rax,QWORD PTR [rip+0x7ae8]        # 0x14000cdf0
   140005308:	mov    QWORD PTR [rbp+0x248],rax
   14000530f:	mov    ecx,0xfffffff6
   140005314:	call   QWORD PTR [rip+0x3f16]        # 0x140009230
   14000531a:	mov    rbx,rax
   14000531d:	mov    rcx,QWORD PTR [rbp+0x238]
   140005324:	test   rcx,rcx
   140005327:	je     0x140005336
   140005329:	call   QWORD PTR [rip+0x3e61]        # 0x140009190
   14000532f:	mov    QWORD PTR [rbp+0x238],r15
   140005336:	call   QWORD PTR [rip+0x3f2c]        # 0x140009268
   14000533c:	mov    rdi,rax
   14000533f:	call   QWORD PTR [rip+0x3f23]        # 0x140009268
   140005345:	mov    rcx,rax
   140005348:	mov    DWORD PTR [rsp+0x30],0x2
   140005350:	mov    DWORD PTR [rsp+0x28],r15d
   140005355:	mov    DWORD PTR [rsp+0x20],r15d
   14000535a:	lea    r9,[rbp+0x238]
   140005361:	mov    r8,rdi
   140005364:	mov    rdx,rbx
   140005367:	call   QWORD PTR [rip+0x3e2b]        # 0x140009198
   14000536d:	test   eax,eax
   14000536f:	jne    0x14000537b
   140005371:	call   QWORD PTR [rip+0x3dd9]        # 0x140009150
   140005377:	mov    edi,eax
   140005379:	jmp    0x14000537e
   14000537b:	mov    edi,r15d
   14000537e:	test   edi,edi
   140005380:	je     0x1400053cc
   140005382:	lea    rcx,[rbp+0xe0]
   140005389:	call   0x140003dfc
   14000538e:	mov    r8b,r14b
   140005391:	mov    dl,r14b
   140005394:	mov    ecx,edi
   140005396:	call   0x140001bb8
   14000539b:	test   al,al
   14000539d:	je     0x1400053a8
   14000539f:	xor    edx,edx
   1400053a1:	mov    ecx,edi
   1400053a3:	call   0x140002b28
   1400053a8:	mov    rcx,QWORD PTR [rip+0x6c89]        # 0x14000c038
   1400053af:	cmp    rcx,rsi
   1400053b2:	je     0x140005548
   1400053b8:	test   BYTE PTR [rcx+0x1c],r14b
   1400053bc:	je     0x140005548
   1400053c2:	mov    edx,0xae
   1400053c7:	jmp    0x14000529f
   1400053cc:	mov    DWORD PTR [rbp+0x21c],r15d
   1400053d3:	mov    rcx,QWORD PTR [rbp+0x100]
   1400053da:	call   QWORD PTR [rip+0x3ee8]        # 0x1400092c8
   1400053e0:	xor    r8d,r8d
   1400053e3:	mov    dl,r14b
   1400053e6:	xor    ecx,ecx
   1400053e8:	call   0x140001bb8
   1400053ed:	lea    r9,[rsp+0x50]
   1400053f2:	lea    r8,[rsp+0x40]
   1400053f7:	lea    rdx,[rsp+0x48]
   1400053fc:	lea    rcx,[rsp+0x58]
   140005401:	call   0x140001aa8
   140005406:	movzx  eax,al
   140005409:	test   eax,eax
   14000540b:	jne    0x140005444
   14000540d:	lea    rcx,[rbp+0xe0]
   140005414:	call   0x140003dfc
   140005419:	mov    rcx,QWORD PTR [rip+0x6c18]        # 0x14000c038
   140005420:	cmp    rcx,rsi
   140005423:	je     0x14000543c
   140005425:	test   BYTE PTR [rcx+0x1c],r14b
   140005429:	je     0x14000543c
   14000542b:	mov    edx,0xaf
   140005430:	xor    r9d,r9d
   140005433:	mov    rcx,QWORD PTR [rcx+0x10]
   140005437:	call   0x1400011ac
   14000543c:	mov    edi,r15d
   14000543f:	jmp    0x14000554e
   140005444:	mov    QWORD PTR [rbp-0x58],r15
   140005448:	lea    rax,[rbp-0x58]
   14000544c:	mov    QWORD PTR [rsp+0x28],rax
   140005451:	lea    rax,[rbp-0x38]
   140005455:	mov    QWORD PTR [rsp+0x20],rax
   14000545a:	xor    r9d,r9d
   14000545d:	xor    r8d,r8d
   140005460:	mov    rdx,QWORD PTR [rsp+0x50]
   140005465:	mov    rcx,QWORD PTR [rsp+0x40]
   14000546a:	call   QWORD PTR [rip+0x3c08]        # 0x140009078
   140005470:	mov    rcx,QWORD PTR [rsp+0x70]
   140005475:	test   rcx,rcx
   140005478:	je     0x140005483
   14000547a:	mov    edx,r12d
   14000547d:	call   QWORD PTR [rip+0x3e4d]        # 0x1400092d0
   140005483:	xor    edx,edx
   140005485:	mov    rcx,QWORD PTR [rbp-0x58]
   140005489:	call   QWORD PTR [rip+0x3c09]        # 0x140009098
   14000548f:	mov    rcx,QWORD PTR [rip+0x6ba2]        # 0x14000c038
   140005496:	cmp    rcx,rsi
   140005499:	je     0x1400054b2
   14000549b:	test   BYTE PTR [rcx+0x1c],0x4
   14000549f:	je     0x1400054b2
   1400054a1:	mov    edx,0xb0
   1400054a6:	mov    r9d,eax
   1400054a9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054ad:	call   0x1400011ac
   1400054b2:	cmp    DWORD PTR [rsp+0x78],r15d
   1400054b7:	je     0x1400054fc
   1400054b9:	lea    rcx,[rbp+0xe0]
   1400054c0:	call   0x140003dfc
   1400054c5:	mov    r8b,r14b
   1400054c8:	mov    dl,r14b
   1400054cb:	mov    ecx,DWORD PTR [rsp+0x78]
   1400054cf:	call   0x140001bb8
   1400054d4:	test   al,al
   1400054d6:	je     0x1400054e3
   1400054d8:	xor    edx,edx
   1400054da:	mov    ecx,DWORD PTR [rsp+0x78]
   1400054de:	call   0x140002b28
   1400054e3:	mov    rcx,QWORD PTR [rip+0x6b4e]        # 0x14000c038
   1400054ea:	cmp    rcx,rsi
   1400054ed:	je     0x140005548
   1400054ef:	test   BYTE PTR [rcx+0x1c],r14b
   1400054f3:	je     0x140005548
   1400054f5:	mov    edx,0xb1
   1400054fa:	jmp    0x14000553a
   1400054fc:	xor    r8d,r8d
   1400054ff:	mov    dl,r14b
   140005502:	xor    ecx,ecx
   140005504:	call   0x140001bb8
   140005509:	lea    rcx,[rbp+0xe0]
   140005510:	call   0x140003dfc
   140005515:	mov    r8b,r14b
   140005518:	xor    edx,edx
   14000551a:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000551e:	call   0x140001bb8
   140005523:	mov    rcx,QWORD PTR [rip+0x6b0e]        # 0x14000c038
   14000552a:	cmp    rcx,rsi
   14000552d:	je     0x140005548
   14000552f:	test   BYTE PTR [rcx+0x1c],r14b
   140005533:	je     0x140005548
   140005535:	mov    edx,0xb2
   14000553a:	mov    r9d,DWORD PTR [rsp+0x78]
   14000553f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005543:	call   0x1400011ac
   140005548:	mov    edi,DWORD PTR [rip+0x798a]        # 0x14000ced8
   14000554e:	mov    QWORD PTR [rbp+0xe0],r13
   140005555:	mov    rcx,QWORD PTR [rbp+0x238]
   14000555c:	test   rcx,rcx
   14000555f:	je     0x140005567
   140005561:	call   QWORD PTR [rip+0x3c29]        # 0x140009190
   140005567:	mov    QWORD PTR [rbp+0x248],r15
   14000556e:	lea    rcx,[rbp+0xe0]
   140005575:	call   0x140002c78
   14000557a:	nop
   14000557b:	lea    rcx,[rsp+0x60]
   140005580:	call   QWORD PTR [rip+0x3aca]        # 0x140009050
   140005586:	nop
   140005587:	mov    rcx,QWORD PTR [rsp+0x70]
   14000558c:	test   rcx,rcx
   14000558f:	je     0x140005597
   140005591:	call   QWORD PTR [rip+0x3bf9]        # 0x140009190
   140005597:	mov    eax,edi
   140005599:	mov    rcx,QWORD PTR [rbp+0x280]
   1400055a0:	xor    rcx,rsp
   1400055a3:	call   0x140007680
   1400055a8:	add    rsp,0x398
   1400055af:	pop    r15
   1400055b1:	pop    r14
   1400055b3:	pop    r13
   1400055b5:	pop    r12
   1400055b7:	pop    rdi
   1400055b8:	pop    rsi
   1400055b9:	pop    rbx
   1400055ba:	pop    rbp
   1400055bb:	ret    
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	int3   
   1400055c1:	int3   
   1400055c2:	int3   
   1400055c3:	int3   
   1400055c4:	mov    rax,rsp
   1400055c7:	mov    QWORD PTR [rax+0x8],rbx
   1400055cb:	mov    QWORD PTR [rax+0x10],rbp
   1400055cf:	mov    QWORD PTR [rax+0x18],rsi
   1400055d3:	mov    QWORD PTR [rax+0x20],rdi
   1400055d7:	push   r12
   1400055d9:	push   r14
   1400055db:	push   r15
   1400055dd:	sub    rsp,0x20
   1400055e1:	mov    r14,r9
   1400055e4:	mov    r15,r8
   1400055e7:	mov    rsi,rdx
   1400055ea:	mov    rbp,rcx
   1400055ed:	mov    rcx,QWORD PTR [rip+0x6a44]        # 0x14000c038
   1400055f4:	lea    r12,[rip+0x6a3d]        # 0x14000c038
   1400055fb:	cmp    rcx,r12
   1400055fe:	je     0x140005614
   140005600:	test   BYTE PTR [rcx+0x1c],0x1
   140005604:	je     0x140005614
   140005606:	mov    rcx,QWORD PTR [rcx+0x10]
   14000560a:	mov    edx,0xb3
   14000560f:	call   0x140001180
   140005614:	mov    eax,DWORD PTR [rsi]
   140005616:	xor    ebx,ebx
   140005618:	mov    rdi,QWORD PTR [rsp+0x60]
   14000561d:	mov    DWORD PTR [r15],eax
   140005620:	mov    DWORD PTR [rdi],ebx
   140005622:	cmp    WORD PTR [rbp+rax*2+0x0],bx
   140005627:	je     0x140005635
   140005629:	lea    ecx,[rbx+0x57]
   14000562c:	mov    DWORD PTR [rdi],ecx
   14000562e:	call   0x140002964
   140005633:	jmp    0x14000563c
   140005635:	inc    eax
   140005637:	mov    DWORD PTR [rsi],eax
   140005639:	mov    DWORD PTR [r14],eax
   14000563c:	mov    rcx,QWORD PTR [rip+0x69f5]        # 0x14000c038
   140005643:	cmp    rcx,r12
   140005646:	je     0x140005665
   140005648:	test   BYTE PTR [rcx+0x1c],0x1
   14000564c:	je     0x140005665
   14000564e:	cmp    DWORD PTR [rdi],ebx
   140005650:	mov    r9d,ebx
   140005653:	mov    rcx,QWORD PTR [rcx+0x10]
   140005657:	mov    edx,0xb4
   14000565c:	sete   r9b
   140005660:	call   0x1400011ac
   140005665:	cmp    DWORD PTR [rdi],ebx
   140005667:	mov    rbp,QWORD PTR [rsp+0x48]
   14000566c:	mov    rsi,QWORD PTR [rsp+0x50]
   140005671:	sete   bl
   140005674:	mov    rdi,QWORD PTR [rsp+0x58]
   140005679:	mov    eax,ebx
   14000567b:	mov    rbx,QWORD PTR [rsp+0x40]
   140005680:	add    rsp,0x20
   140005684:	pop    r15
   140005686:	pop    r14
   140005688:	pop    r12
   14000568a:	ret    
   14000568b:	int3   
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	int3   
   140005691:	int3   
   140005692:	int3   
   140005693:	int3   
   140005694:	mov    rax,rsp
   140005697:	mov    QWORD PTR [rax+0x8],rbx
   14000569b:	mov    QWORD PTR [rax+0x10],rbp
   14000569f:	mov    QWORD PTR [rax+0x18],rsi
   1400056a3:	mov    QWORD PTR [rax+0x20],rdi
   1400056a7:	push   r12
   1400056a9:	push   r14
   1400056ab:	push   r15
   1400056ad:	sub    rsp,0x20
   1400056b1:	mov    r14,r9
   1400056b4:	mov    r15,r8
   1400056b7:	mov    rsi,rdx
   1400056ba:	mov    rbp,rcx
   1400056bd:	mov    rcx,QWORD PTR [rip+0x6974]        # 0x14000c038
   1400056c4:	lea    r12,[rip+0x696d]        # 0x14000c038
   1400056cb:	cmp    rcx,r12
   1400056ce:	je     0x1400056e4
   1400056d0:	test   BYTE PTR [rcx+0x1c],0x1
   1400056d4:	je     0x1400056e4
   1400056d6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056da:	mov    edx,0xb5
   1400056df:	call   0x140001180
   1400056e4:	mov    eax,DWORD PTR [rsi]
   1400056e6:	xor    ebx,ebx
   1400056e8:	mov    rdi,QWORD PTR [rsp+0x60]
   1400056ed:	mov    DWORD PTR [r15],eax
   1400056f0:	cmp    WORD PTR [rbp+rax*2+0x0],0x3d
   1400056f6:	mov    DWORD PTR [rdi],ebx
   1400056f8:	je     0x140005706
   1400056fa:	lea    ecx,[rbx+0x57]
   1400056fd:	mov    DWORD PTR [rdi],ecx
   1400056ff:	call   0x140002964
   140005704:	jmp    0x14000570d
   140005706:	inc    eax
   140005708:	mov    DWORD PTR [rsi],eax
   14000570a:	mov    DWORD PTR [r14],eax
   14000570d:	mov    rcx,QWORD PTR [rip+0x6924]        # 0x14000c038
   140005714:	cmp    rcx,r12
   140005717:	je     0x140005736
   140005719:	test   BYTE PTR [rcx+0x1c],0x1
   14000571d:	je     0x140005736
   14000571f:	cmp    DWORD PTR [rdi],ebx
   140005721:	mov    r9d,ebx
   140005724:	mov    rcx,QWORD PTR [rcx+0x10]
   140005728:	mov    edx,0xb6
   14000572d:	sete   r9b
   140005731:	call   0x1400011ac
   140005736:	cmp    DWORD PTR [rdi],ebx
   140005738:	mov    rbp,QWORD PTR [rsp+0x48]
   14000573d:	mov    rsi,QWORD PTR [rsp+0x50]
   140005742:	sete   bl
   140005745:	mov    rdi,QWORD PTR [rsp+0x58]
   14000574a:	mov    eax,ebx
   14000574c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005751:	add    rsp,0x20
   140005755:	pop    r15
   140005757:	pop    r14
   140005759:	pop    r12
   14000575b:	ret    
   14000575c:	int3   
   14000575d:	int3   
   14000575e:	int3   
   14000575f:	int3   
   140005760:	int3   
   140005761:	int3   
   140005762:	int3   
   140005763:	int3   
   140005764:	mov    QWORD PTR [rsp+0x8],rbx
   140005769:	mov    QWORD PTR [rsp+0x10],rbp
   14000576e:	mov    QWORD PTR [rsp+0x18],rsi
   140005773:	push   rdi
   140005774:	push   r12
   140005776:	push   r13
   140005778:	push   r14
   14000577a:	push   r15
   14000577c:	sub    rsp,0x20
   140005780:	mov    rsi,r9
   140005783:	mov    r15,r8
   140005786:	mov    r14,rdx
   140005789:	mov    r12,rcx
   14000578c:	mov    rcx,QWORD PTR [rip+0x68a5]        # 0x14000c038
   140005793:	lea    rax,[rip+0x689e]        # 0x14000c038
   14000579a:	mov    r13d,0x1
   1400057a0:	cmp    rcx,rax
   1400057a3:	je     0x1400057c0
   1400057a5:	test   BYTE PTR [rcx+0x1c],r13b
   1400057a9:	je     0x1400057c0
   1400057ab:	mov    rcx,QWORD PTR [rcx+0x10]
   1400057af:	mov    edx,0xba
   1400057b4:	call   0x140001180
   1400057b9:	mov    rcx,QWORD PTR [rip+0x6878]        # 0x14000c038
   1400057c0:	mov    rdi,QWORD PTR [rsp+0x70]
   1400057c5:	xor    ebx,ebx
   1400057c7:	mov    r11d,DWORD PTR [r14]
   1400057ca:	mov    ebp,ebx
   1400057cc:	mov    DWORD PTR [r15],r11d
   1400057cf:	or     r10,0xffffffffffffffff
   1400057d3:	mov    DWORD PTR [rdi],ebx
   1400057d5:	inc    r10
   1400057d8:	cmp    WORD PTR [r12+r10*2],bx
   1400057dd:	jne    0x1400057d5
   1400057df:	mov    edx,r11d
   1400057e2:	lea    r9d,[r11+0x1]
   1400057e6:	cmp    edx,r10d
   1400057e9:	jae    0x140005876
   1400057ef:	mov    eax,edx
   1400057f1:	movzx  r8d,WORD PTR [r12+rax*2]
   1400057f6:	mov    eax,ebp
   1400057f8:	test   ebp,ebp
   1400057fa:	je     0x14000585b
   1400057fc:	cmp    eax,r13d
   1400057ff:	je     0x140005809
   140005801:	mov    DWORD PTR [rdi],0x57
   140005807:	jmp    0x140005868
   140005809:	cmp    r8w,0x5c
   14000580e:	jne    0x14000582c
   140005810:	lea    eax,[r10-0x1]
   140005814:	cmp    edx,eax
   140005816:	je     0x1400058c8
   14000581c:	cmp    WORD PTR [r12+r9*2],0x7d
   140005822:	jne    0x140005868
   140005824:	add    edx,r13d
   140005827:	add    r9d,r13d
   14000582a:	jmp    0x140005868
   14000582c:	test   r8w,r8w
   140005830:	jne    0x140005868
   140005832:	mov    DWORD PTR [r14],edx
   140005835:	mov    DWORD PTR [rsi],edx
   140005837:	lea    rax,[rip+0x67fa]        # 0x14000c038
   14000583e:	cmp    rcx,rax
   140005841:	je     0x14000590c
   140005847:	test   BYTE PTR [rcx+0x1c],r13b
   14000584b:	je     0x14000590c
   140005851:	mov    edx,0xbd
   140005856:	jmp    0x140005900
   14000585b:	test   r8w,r8w
   14000585f:	je     0x1400058e6
   140005865:	mov    ebp,r13d
   140005868:	add    edx,r13d
   14000586b:	add    r9d,r13d
   14000586e:	cmp    DWORD PTR [rdi],ebx
   140005870:	je     0x1400057e6
   140005876:	mov    DWORD PTR [r14],edx
   140005879:	mov    DWORD PTR [rsi],edx
   14000587b:	lea    rax,[rip+0x67b6]        # 0x14000c038
   140005882:	cmp    rcx,rax
   140005885:	je     0x1400058a4
   140005887:	test   BYTE PTR [rcx+0x1c],r13b
   14000588b:	je     0x1400058a4
   14000588d:	cmp    DWORD PTR [rdi],ebx
   14000588f:	mov    r9d,ebx
   140005892:	mov    rcx,QWORD PTR [rcx+0x10]
   140005896:	mov    edx,0xbe
   14000589b:	sete   r9b
   14000589f:	call   0x1400011ac
   1400058a4:	cmp    DWORD PTR [rdi],ebx
   1400058a6:	sete   bl
   1400058a9:	mov    eax,ebx
   1400058ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400058b0:	mov    rbp,QWORD PTR [rsp+0x58]
   1400058b5:	mov    rsi,QWORD PTR [rsp+0x60]
   1400058ba:	add    rsp,0x20
   1400058be:	pop    r15
   1400058c0:	pop    r14
   1400058c2:	pop    r13
   1400058c4:	pop    r12
   1400058c6:	pop    rdi
   1400058c7:	ret    
   1400058c8:	mov    DWORD PTR [r14],edx
   1400058cb:	mov    DWORD PTR [rsi],edx
   1400058cd:	lea    rax,[rip+0x6764]        # 0x14000c038
   1400058d4:	cmp    rcx,rax
   1400058d7:	je     0x14000590c
   1400058d9:	test   BYTE PTR [rcx+0x1c],r13b
   1400058dd:	je     0x14000590c
   1400058df:	mov    edx,0xbc
   1400058e4:	jmp    0x140005900
   1400058e6:	mov    DWORD PTR [rsi],r11d
   1400058e9:	lea    rax,[rip+0x6748]        # 0x14000c038
   1400058f0:	cmp    rcx,rax
   1400058f3:	je     0x14000590c
   1400058f5:	test   BYTE PTR [rcx+0x1c],r13b
   1400058f9:	je     0x14000590c
   1400058fb:	mov    edx,0xbb
   140005900:	mov    rcx,QWORD PTR [rcx+0x10]
   140005904:	mov    r9d,r13d
   140005907:	call   0x1400011ac
   14000590c:	mov    eax,r13d
   14000590f:	jmp    0x1400058ab
   140005911:	int3   
   140005912:	int3   
   140005913:	int3   
   140005914:	int3   
   140005915:	int3   
   140005916:	int3   
   140005917:	int3   
   140005918:	mov    rax,rsp
   14000591b:	mov    QWORD PTR [rax+0x10],rbx
   14000591f:	mov    QWORD PTR [rax+0x18],rsi
   140005923:	mov    QWORD PTR [rax+0x20],rdi
   140005927:	mov    QWORD PTR [rax+0x8],rcx
   14000592b:	push   rbp
   14000592c:	push   r12
   14000592e:	push   r13
   140005930:	push   r14
   140005932:	push   r15
   140005934:	mov    rbp,rsp
   140005937:	sub    rsp,0x50
   14000593b:	mov    r14,r9
   14000593e:	mov    r13,r8
   140005941:	mov    r15,rdx
   140005944:	mov    rcx,QWORD PTR [rip+0x66ed]        # 0x14000c038
   14000594b:	lea    rdx,[rip+0x66e6]        # 0x14000c038
   140005952:	cmp    rcx,rdx
   140005955:	je     0x140005979
   140005957:	test   BYTE PTR [rcx+0x1c],0x1
   14000595b:	je     0x140005979
   14000595d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005961:	mov    edx,0xbf
   140005966:	call   0x140001180
   14000596b:	mov    rcx,QWORD PTR [rip+0x66c6]        # 0x14000c038
   140005972:	lea    rdx,[rip+0x66bf]        # 0x14000c038
   140005979:	mov    rax,QWORD PTR [rbp+0x50]
   14000597d:	xor    edi,edi
   14000597f:	mov    DWORD PTR [rbp-0x14],edi
   140005982:	mov    DWORD PTR [rbp-0x10],edi
   140005985:	mov    QWORD PTR [rax],rdi
   140005988:	mov    rax,QWORD PTR [rbp+0x58]
   14000598c:	mov    QWORD PTR [rax],rdi
   14000598f:	cmp    rcx,rdx
   140005992:	je     0x1400059a8
   140005994:	test   BYTE PTR [rcx+0x1c],0x1
   140005998:	je     0x1400059a8
   14000599a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000599e:	mov    edx,0xb7
   1400059a3:	call   0x140001180
   1400059a8:	mov    ebx,edi
   1400059aa:	mov    r12d,edi
   1400059ad:	mov    DWORD PTR [rbp-0x20],ebx
   1400059b0:	or     rsi,0xffffffffffffffff
   1400059b4:	inc    rsi
   1400059b7:	cmp    WORD PTR [r14+rsi*2],di
   1400059bc:	jne    0x1400059b4
   1400059be:	mov    edx,0x3d
   1400059c3:	cmp    edi,esi
   1400059c5:	jae    0x140005b31
   1400059cb:	mov    eax,edi
   1400059cd:	movzx  ecx,WORD PTR [r14+rax*2]
   1400059d2:	mov    eax,r12d
   1400059d5:	test   r12d,r12d
   1400059d8:	je     0x140005b08
   1400059de:	cmp    eax,0x1
   1400059e1:	jne    0x140005b15
   1400059e7:	cmp    dx,cx
   1400059ea:	jne    0x140005b27
   1400059f0:	mov    DWORD PTR [rbp-0x18],edi
   1400059f3:	mov    rcx,QWORD PTR [rip+0x663e]        # 0x14000c038
   1400059fa:	lea    rax,[rip+0x6637]        # 0x14000c038
   140005a01:	cmp    rcx,rax
   140005a04:	je     0x140005a1d
   140005a06:	test   BYTE PTR [rcx+0x1c],r12b
   140005a0a:	je     0x140005a1d
   140005a0c:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a10:	mov    edx,0xb8
   140005a15:	mov    r9d,r12d
   140005a18:	call   0x1400011ac
   140005a1d:	lea    rax,[rbp-0x20]
   140005a21:	mov    rcx,r14
   140005a24:	lea    r9,[rbp-0x1c]
   140005a28:	mov    QWORD PTR [rsp+0x20],rax
   140005a2d:	lea    r8,[rbp-0x1c]
   140005a31:	lea    rdx,[rbp-0x18]
   140005a35:	call   0x140005694
   140005a3a:	xor    esi,esi
   140005a3c:	test   eax,eax
   140005a3e:	je     0x140005cff
   140005a44:	lea    rax,[rbp-0x20]
   140005a48:	mov    rcx,r14
   140005a4b:	lea    r9,[rbp-0x10]
   140005a4f:	mov    QWORD PTR [rsp+0x20],rax
   140005a54:	lea    r8,[rbp-0x14]
   140005a58:	lea    rdx,[rbp-0x18]
   140005a5c:	call   0x140005764
   140005a61:	test   eax,eax
   140005a63:	je     0x140005cff
   140005a69:	lea    rax,[rbp-0x20]
   140005a6d:	mov    rcx,r14
   140005a70:	lea    r9,[rbp-0x1c]
   140005a74:	mov    QWORD PTR [rsp+0x20],rax
   140005a79:	lea    r8,[rbp-0x1c]
   140005a7d:	lea    rdx,[rbp-0x18]
   140005a81:	call   0x1400055c4
   140005a86:	test   eax,eax
   140005a88:	je     0x140005cff
   140005a8e:	mov    eax,DWORD PTR [r13+0x0]
   140005a92:	cmp    eax,DWORD PTR [r15]
   140005a95:	jne    0x140005bca
   140005a9b:	lea    ecx,[rax+0xa]
   140005a9e:	lea    eax,[rsi+0x10]
   140005aa1:	mul    rcx
   140005aa4:	lea    rcx,[rsi-0x1]
   140005aa8:	cmovo  rax,rcx
   140005aac:	xor    r8d,r8d
   140005aaf:	mov    rcx,rax
   140005ab2:	xor    edx,edx
   140005ab4:	call   QWORD PTR [rip+0x3546]        # 0x140009000
   140005aba:	mov    rsi,rax
   140005abd:	test   rax,rax
   140005ac0:	je     0x140005b9e
   140005ac6:	mov    ebx,DWORD PTR [r13+0x0]
   140005aca:	xor    edx,edx
   140005acc:	mov    r8d,ebx
   140005acf:	mov    rcx,rax
   140005ad2:	shl    r8,0x4
   140005ad6:	add    r8,0xa
   140005ada:	call   0x140008032
   140005adf:	mov    r12,QWORD PTR [rbp+0x30]
   140005ae3:	mov    rcx,rsi
   140005ae6:	mov    r8d,DWORD PTR [r15]
   140005ae9:	shl    r8,0x4
   140005aed:	mov    rdx,QWORD PTR [r12]
   140005af1:	call   0x140008026
   140005af6:	lea    eax,[rbx+0xa]
   140005af9:	mov    QWORD PTR [r12],rsi
   140005afd:	mov    DWORD PTR [r13+0x0],eax
   140005b01:	xor    esi,esi
   140005b03:	jmp    0x140005bce
   140005b08:	cmp    dx,cx
   140005b0b:	je     0x140005b15
   140005b0d:	mov    r12d,0x1
   140005b13:	jmp    0x140005b27
   140005b15:	mov    ebx,0x57
   140005b1a:	mov    ecx,ebx
   140005b1c:	mov    DWORD PTR [rbp-0x20],ebx
   140005b1f:	call   0x140002964
   140005b24:	lea    edx,[rbx-0x1a]
   140005b27:	inc    edi
   140005b29:	test   ebx,ebx
   140005b2b:	je     0x1400059c3
   140005b31:	mov    rcx,QWORD PTR [rip+0x6500]        # 0x14000c038
   140005b38:	lea    rdi,[rip+0x64f9]        # 0x14000c038
   140005b3f:	cmp    rcx,rdi
   140005b42:	je     0x140005b7e
   140005b44:	test   BYTE PTR [rcx+0x1c],0x1
   140005b48:	je     0x140005b62
   140005b4a:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b4e:	mov    edx,0xb9
   140005b53:	xor    r9d,r9d
   140005b56:	call   0x1400011ac
   140005b5b:	mov    rcx,QWORD PTR [rip+0x64d6]        # 0x14000c038
   140005b62:	cmp    rcx,rdi
   140005b65:	je     0x140005b7e
   140005b67:	test   BYTE PTR [rcx+0x1c],0x1
   140005b6b:	je     0x140005b7e
   140005b6d:	mov    edx,0xc3
   140005b72:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b76:	mov    r9d,ebx
   140005b79:	call   0x1400011ac
   140005b7e:	lea    r11,[rsp+0x50]
   140005b83:	mov    eax,ebx
   140005b85:	mov    rbx,QWORD PTR [r11+0x38]
   140005b89:	mov    rsi,QWORD PTR [r11+0x40]
   140005b8d:	mov    rdi,QWORD PTR [r11+0x48]
   140005b91:	mov    rsp,r11
   140005b94:	pop    r15
   140005b96:	pop    r14
   140005b98:	pop    r13
   140005b9a:	pop    r12
   140005b9c:	pop    rbp
   140005b9d:	ret    
   140005b9e:	mov    ebx,0xe
   140005ba3:	mov    ecx,ebx
   140005ba5:	call   0x140002964
   140005baa:	mov    rcx,QWORD PTR [rip+0x6487]        # 0x14000c038
   140005bb1:	lea    rax,[rip+0x6480]        # 0x14000c038
   140005bb8:	cmp    rcx,rax
   140005bbb:	je     0x140005b7e
   140005bbd:	test   BYTE PTR [rcx+0x1c],0x1
   140005bc1:	je     0x140005b7e
   140005bc3:	mov    edx,0xc0
   140005bc8:	jmp    0x140005b72
   140005bca:	mov    r12,QWORD PTR [rbp+0x30]
   140005bce:	mov    r13d,0x2
   140005bd4:	lea    ebx,[rdi+0x1]
   140005bd7:	mov    eax,r13d
   140005bda:	mul    rbx
   140005bdd:	lea    rcx,[r13-0x3]
   140005be1:	cmovo  rax,rcx
   140005be5:	xor    r8d,r8d
   140005be8:	mov    rcx,rax
   140005beb:	xor    edx,edx
   140005bed:	call   QWORD PTR [rip+0x340d]        # 0x140009000
   140005bf3:	mov    rdx,rax
   140005bf6:	mov    rax,QWORD PTR [rbp+0x50]
   140005bfa:	mov    QWORD PTR [rax],rdx
   140005bfd:	test   rdx,rdx
   140005c00:	je     0x140005d69
   140005c06:	lea    rcx,[rbx-0x1]
   140005c0a:	mov    edi,0x7ffffffe
   140005c0f:	cmp    rcx,rdi
   140005c12:	ja     0x140005c4f
   140005c14:	mov    r8d,edi
   140005c17:	mov    r9,r14
   140005c1a:	sub    r8,rbx
   140005c1d:	mov    rcx,rdx
   140005c20:	sub    r9,rdx
   140005c23:	lea    rax,[r8+rbx*1]
   140005c27:	test   rax,rax
   140005c2a:	je     0x140005c42
   140005c2c:	movzx  eax,WORD PTR [r9+rcx*1]
   140005c31:	test   ax,ax
   140005c34:	je     0x140005c42
   140005c36:	mov    WORD PTR [rcx],ax
   140005c39:	add    rcx,r13
   140005c3c:	sub    rbx,0x1
   140005c40:	jne    0x140005c23
   140005c42:	test   rbx,rbx
   140005c45:	jne    0x140005c4a
   140005c47:	sub    rcx,r13
   140005c4a:	mov    WORD PTR [rcx],si
   140005c4d:	jmp    0x140005c57
   140005c4f:	test   rbx,rbx
   140005c52:	je     0x140005c57
   140005c54:	mov    WORD PTR [rdx],si
   140005c57:	mov    rax,QWORD PTR [r12]
   140005c5b:	mov    ecx,DWORD PTR [r15]
   140005c5e:	mov    ebx,DWORD PTR [rbp-0x10]
   140005c61:	add    rcx,rcx
   140005c64:	sub    ebx,DWORD PTR [rbp-0x14]
   140005c67:	inc    ebx
   140005c69:	mov    QWORD PTR [rax+rcx*8],rdx
   140005c6d:	mov    rcx,0xffffffffffffffff
   140005c74:	mov    rax,r13
   140005c77:	mul    rbx
   140005c7a:	cmovo  rax,rcx
   140005c7e:	xor    r8d,r8d
   140005c81:	mov    rcx,rax
   140005c84:	xor    edx,edx
   140005c86:	call   QWORD PTR [rip+0x3374]        # 0x140009000
   140005c8c:	mov    r8,rax
   140005c8f:	mov    rax,QWORD PTR [rbp+0x58]
   140005c93:	mov    QWORD PTR [rax],r8
   140005c96:	test   r8,r8
   140005c99:	je     0x140005d0e
   140005c9b:	mov    ecx,DWORD PTR [rbp-0x14]
   140005c9e:	lea    rdx,[r14+rcx*2]
   140005ca2:	lea    rcx,[rbx-0x1]
   140005ca6:	cmp    rcx,rdi
   140005ca9:	ja     0x140005cdf
   140005cab:	sub    rdi,rbx
   140005cae:	mov    rcx,r8
   140005cb1:	sub    rdx,r8
   140005cb4:	lea    rax,[rdi+rbx*1]
   140005cb8:	test   rax,rax
   140005cbb:	je     0x140005cd2
   140005cbd:	movzx  eax,WORD PTR [rdx+rcx*1]
   140005cc1:	test   ax,ax
   140005cc4:	je     0x140005cd2
   140005cc6:	mov    WORD PTR [rcx],ax
   140005cc9:	add    rcx,r13
   140005ccc:	sub    rbx,0x1
   140005cd0:	jne    0x140005cb4
   140005cd2:	test   rbx,rbx
   140005cd5:	jne    0x140005cda
   140005cd7:	sub    rcx,r13
   140005cda:	mov    WORD PTR [rcx],si
   140005cdd:	jmp    0x140005ce8
   140005cdf:	test   rbx,rbx
   140005ce2:	je     0x140005ce8
   140005ce4:	mov    WORD PTR [r8],si
   140005ce8:	mov    edx,DWORD PTR [r15]
   140005ceb:	mov    rax,QWORD PTR [r12]
   140005cef:	mov    ecx,edx
   140005cf1:	add    rcx,rcx
   140005cf4:	mov    QWORD PTR [rax+rcx*8+0x8],r8
   140005cf9:	lea    eax,[rdx+0x1]
   140005cfc:	mov    DWORD PTR [r15],eax
   140005cff:	mov    ebx,DWORD PTR [rbp-0x20]
   140005d02:	lea    rdi,[rip+0x632f]        # 0x14000c038
   140005d09:	jmp    0x140005b5b
   140005d0e:	mov    eax,DWORD PTR [r15]
   140005d11:	xor    edx,edx
   140005d13:	mov    rcx,QWORD PTR [r12]
   140005d17:	add    rax,rax
   140005d1a:	mov    rcx,QWORD PTR [rcx+rax*8]
   140005d1e:	call   QWORD PTR [rip+0x32fc]        # 0x140009020
   140005d24:	mov    ecx,DWORD PTR [r15]
   140005d27:	mov    ebx,0xe
   140005d2c:	mov    rax,QWORD PTR [r12]
   140005d30:	add    rcx,rcx
   140005d33:	mov    QWORD PTR [rax+rcx*8],rsi
   140005d37:	mov    ecx,ebx
   140005d39:	call   0x140002964
   140005d3e:	mov    rcx,QWORD PTR [rip+0x62f3]        # 0x14000c038
   140005d45:	lea    rax,[rip+0x62ec]        # 0x14000c038
   140005d4c:	cmp    rcx,rax
   140005d4f:	je     0x140005b7e
   140005d55:	test   BYTE PTR [rcx+0x1c],0x1
   140005d59:	je     0x140005b7e
   140005d5f:	mov    edx,0xc2
   140005d64:	jmp    0x140005b72
   140005d69:	mov    ebx,0xe
   140005d6e:	mov    ecx,ebx
   140005d70:	call   0x140002964
   140005d75:	mov    rcx,QWORD PTR [rip+0x62bc]        # 0x14000c038
   140005d7c:	lea    rax,[rip+0x62b5]        # 0x14000c038
   140005d83:	cmp    rcx,rax
   140005d86:	je     0x140005b7e
   140005d8c:	test   BYTE PTR [rcx+0x1c],0x1
   140005d90:	je     0x140005b7e
   140005d96:	mov    edx,0xc1
   140005d9b:	jmp    0x140005b72
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	mov    QWORD PTR [rsp+0x8],rbx
   140005dad:	mov    QWORD PTR [rsp+0x10],rbp
   140005db2:	mov    QWORD PTR [rsp+0x18],rsi
   140005db7:	push   rdi
   140005db8:	push   r12
   140005dba:	push   r13
   140005dbc:	push   r14
   140005dbe:	push   r15
   140005dc0:	sub    rsp,0x50
   140005dc4:	mov    r15,r9
   140005dc7:	mov    r14,r8
   140005dca:	mov    rsi,rdx
   140005dcd:	mov    rbp,rcx
   140005dd0:	mov    rcx,QWORD PTR [rip+0x6261]        # 0x14000c038
   140005dd7:	lea    r13,[rip+0x625a]        # 0x14000c038
   140005dde:	cmp    rcx,r13
   140005de1:	je     0x140005df7
   140005de3:	test   BYTE PTR [rcx+0x1c],0x1
   140005de7:	je     0x140005df7
   140005de9:	mov    rcx,QWORD PTR [rcx+0x10]
   140005ded:	mov    edx,0xc4
   140005df2:	call   0x140001180
   140005df7:	call   0x140007e70
   140005dfc:	xor    r12d,r12d
   140005dff:	test   al,al
   140005e01:	jne    0x140005e0d
   140005e03:	mov    eax,0xc00000bb
   140005e08:	jmp    0x140005faf
   140005e0d:	xor    r8d,r8d
   140005e10:	xor    edx,edx
   140005e12:	mov    ecx,0x202
   140005e17:	call   QWORD PTR [rip+0x31e3]        # 0x140009000
   140005e1d:	mov    QWORD PTR [r14],rax
   140005e20:	test   rax,rax
   140005e23:	jne    0x140005e4c
   140005e25:	mov    rcx,QWORD PTR [rip+0x620c]        # 0x14000c038
   140005e2c:	lea    ebx,[rax+0xe]
   140005e2f:	cmp    rcx,r13
   140005e32:	je     0x140005fad
   140005e38:	test   BYTE PTR [rcx+0x1c],0x1
   140005e3c:	je     0x140005fad
   140005e42:	mov    edx,0xc5
   140005e47:	jmp    0x140005fa1
   140005e4c:	mov    rax,QWORD PTR [rsi]
   140005e4f:	or     rbx,0xffffffffffffffff
   140005e53:	mov    rcx,rbx
   140005e56:	inc    rcx
   140005e59:	cmp    WORD PTR [rax+rcx*2],r12w
   140005e5e:	jne    0x140005e56
   140005e60:	inc    rcx
   140005e63:	mov    eax,0x2
   140005e68:	mul    rcx
   140005e6b:	cmovo  rax,rbx
   140005e6f:	xor    r8d,r8d
   140005e72:	mov    rcx,rax
   140005e75:	xor    edx,edx
   140005e77:	call   QWORD PTR [rip+0x3183]        # 0x140009000
   140005e7d:	mov    rdi,rax
   140005e80:	test   rax,rax
   140005e83:	jne    0x140005eac
   140005e85:	mov    rcx,QWORD PTR [rip+0x61ac]        # 0x14000c038
   140005e8c:	lea    ebx,[rax+0xe]
   140005e8f:	cmp    rcx,r13
   140005e92:	je     0x140005fad
   140005e98:	test   BYTE PTR [rcx+0x1c],0x1
   140005e9c:	je     0x140005fad
   140005ea2:	mov    edx,0xc6
   140005ea7:	jmp    0x140005fa1
   140005eac:	mov    r9,QWORD PTR [rsi]
   140005eaf:	mov    rcx,rbx
   140005eb2:	inc    rcx
   140005eb5:	cmp    WORD PTR [r9+rcx*2],r12w
   140005eba:	jne    0x140005eb2
   140005ebc:	inc    rcx
   140005ebf:	mov    r8d,0x7ffffffe
   140005ec5:	lea    rax,[rcx-0x1]
   140005ec9:	cmp    rax,r8
   140005ecc:	ja     0x140005f06
   140005ece:	sub    r8,rcx
   140005ed1:	mov    rdx,rdi
   140005ed4:	sub    r9,rdi
   140005ed7:	lea    rax,[r8+rcx*1]
   140005edb:	test   rax,rax
   140005ede:	je     0x140005ef7
   140005ee0:	movzx  eax,WORD PTR [r9+rdx*1]
   140005ee5:	test   ax,ax
   140005ee8:	je     0x140005ef7
   140005eea:	mov    WORD PTR [rdx],ax
   140005eed:	add    rdx,0x2
   140005ef1:	sub    rcx,0x1
   140005ef5:	jne    0x140005ed7
   140005ef7:	test   rcx,rcx
   140005efa:	jne    0x140005f00
   140005efc:	sub    rdx,0x2
   140005f00:	mov    WORD PTR [rdx],r12w
   140005f04:	jmp    0x140005f0f
   140005f06:	test   rcx,rcx
   140005f09:	je     0x140005f0f
   140005f0b:	mov    WORD PTR [rdi],r12w
   140005f0f:	mov    rsi,QWORD PTR [r14]
   140005f12:	xor    edx,edx
   140005f14:	mov    rcx,rsi
   140005f17:	mov    r8d,0x202
   140005f1d:	call   0x140008032
   140005f22:	inc    rbx
   140005f25:	cmp    WORD PTR [rdi+rbx*2],r12w
   140005f2a:	jne    0x140005f22
   140005f2c:	mov    DWORD PTR [rsp+0x40],0x4000a
   140005f34:	lea    rcx,[rip+0x3f7d]        # 0x140009eb8
   140005f3b:	mov    QWORD PTR [rsp+0x38],r12
   140005f40:	inc    ebx
   140005f42:	mov    DWORD PTR [rsp+0x30],0x101
   140005f4a:	test   rbp,rbp
   140005f4d:	mov    QWORD PTR [rsp+0x28],rsi
   140005f52:	mov    r9,rdi
   140005f55:	cmovne rcx,rbp
   140005f59:	mov    DWORD PTR [rsp+0x20],ebx
   140005f5d:	xor    r8d,r8d
   140005f60:	xor    edx,edx
   140005f62:	call   QWORD PTR [rip+0x80b8]        # 0x14000e020
   140005f68:	mov    ebx,eax
   140005f6a:	test   eax,eax
   140005f6c:	jne    0x140005f74
   140005f6e:	mov    BYTE PTR [r15],0x1
   140005f72:	jmp    0x140005f7f
   140005f74:	mov    rcx,QWORD PTR [r14]
   140005f77:	xor    edx,edx
   140005f79:	call   QWORD PTR [rip+0x30a1]        # 0x140009020
   140005f7f:	xor    edx,edx
   140005f81:	mov    rcx,rdi
   140005f84:	call   QWORD PTR [rip+0x3096]        # 0x140009020
   140005f8a:	mov    rcx,QWORD PTR [rip+0x60a7]        # 0x14000c038
   140005f91:	cmp    rcx,r13
   140005f94:	je     0x140005fad
   140005f96:	test   BYTE PTR [rcx+0x1c],0x1
   140005f9a:	je     0x140005fad
   140005f9c:	mov    edx,0xc7
   140005fa1:	mov    rcx,QWORD PTR [rcx+0x10]
   140005fa5:	mov    r9d,ebx
   140005fa8:	call   0x1400011ac
   140005fad:	mov    eax,ebx
   140005faf:	lea    r11,[rsp+0x50]
   140005fb4:	mov    rbx,QWORD PTR [r11+0x30]
   140005fb8:	mov    rbp,QWORD PTR [r11+0x38]
   140005fbc:	mov    rsi,QWORD PTR [r11+0x40]
   140005fc0:	mov    rsp,r11
   140005fc3:	pop    r15
   140005fc5:	pop    r14
   140005fc7:	pop    r13
   140005fc9:	pop    r12
   140005fcb:	pop    rdi
   140005fcc:	ret    
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	mov    QWORD PTR [rsp+0x18],rbx
   140005fd9:	mov    QWORD PTR [rsp+0x20],rdi
   140005fde:	push   r14
   140005fe0:	mov    eax,0x41b0
   140005fe5:	call   0x140008070
   140005fea:	sub    rsp,rax
   140005fed:	mov    rax,QWORD PTR [rip+0x6014]        # 0x14000c008
   140005ff4:	xor    rax,rsp
   140005ff7:	mov    QWORD PTR [rsp+0x41a0],rax
   140005fff:	mov    rbx,rdx
   140006002:	mov    edi,ecx
   140006004:	mov    rcx,QWORD PTR [rip+0x602d]        # 0x14000c038
   14000600b:	lea    r14,[rip+0x6026]        # 0x14000c038
   140006012:	cmp    rcx,r14
   140006015:	je     0x14000602b
   140006017:	test   BYTE PTR [rcx+0x1c],0x1
   14000601b:	je     0x14000602b
   14000601d:	mov    rcx,QWORD PTR [rcx+0x10]
   140006021:	mov    edx,0xc8
   140006026:	call   0x140001180
   14000602b:	xor    ecx,ecx
   14000602d:	call   QWORD PTR [rip+0x31bd]        # 0x1400091f0
   140006033:	mov    r9d,0x20c0
   140006039:	lea    r8,[rsp+0x20]
   14000603e:	mov    rcx,rax
   140006041:	mov    edx,edi
   140006043:	call   QWORD PTR [rip+0x319f]        # 0x1400091e8
   140006049:	test   eax,eax
   14000604b:	je     0x140006110
   140006051:	cmp    edi,0x1
   140006054:	jne    0x140006074
   140006056:	mov    ecx,0xfffffff5
   14000605b:	call   QWORD PTR [rip+0x31cf]        # 0x140009230
   140006061:	or     r8d,0xffffffff
   140006065:	lea    rdx,[rsp+0x20]
   14000606a:	mov    rcx,rax
   14000606d:	call   0x140001664
   140006072:	jmp    0x14000607e
   140006074:	lea    rcx,[rsp+0x20]
   140006079:	call   0x140001804
   14000607e:	test   rbx,rbx
   140006081:	je     0x1400060d3
   140006083:	cmp    edi,0x1
   140006086:	jne    0x1400060c2
   140006088:	mov    ecx,0xfffffff5
   14000608d:	call   QWORD PTR [rip+0x319d]        # 0x140009230
   140006093:	or     r8d,0xffffffff
   140006097:	mov    rdx,rbx
   14000609a:	mov    rcx,rax
   14000609d:	call   0x140001664
   1400060a2:	mov    ecx,0xfffffff5
   1400060a7:	call   QWORD PTR [rip+0x3183]        # 0x140009230
   1400060ad:	or     r8d,0xffffffff
   1400060b1:	lea    rdx,[rip+0x3e18]        # 0x140009ed0
   1400060b8:	mov    rcx,rax
   1400060bb:	call   0x140001664
   1400060c0:	jmp    0x140006141
   1400060c2:	mov    rcx,rbx
   1400060c5:	call   0x140001804
   1400060ca:	lea    rcx,[rip+0x3dff]        # 0x140009ed0
   1400060d1:	jmp    0x1400060df
   1400060d3:	cmp    edi,0x1
   1400060d6:	je     0x140006141
   1400060d8:	lea    rcx,[rip+0x3b21]        # 0x140009c00
   1400060df:	call   0x140001804
   1400060e4:	xor    ecx,ecx
   1400060e6:	call   QWORD PTR [rip+0x3104]        # 0x1400091f0
   1400060ec:	mov    r9d,0x20c0
   1400060f2:	lea    r8,[rsp+0x20]
   1400060f7:	mov    rcx,rax
   1400060fa:	mov    edx,0x8
   1400060ff:	call   QWORD PTR [rip+0x30e3]        # 0x1400091e8
   140006105:	test   eax,eax
   140006107:	je     0x140006141
   140006109:	lea    rcx,[rsp+0x20]
   14000610e:	jmp    0x14000613c
   140006110:	lea    rcx,[rip+0x3b01]        # 0x140009c18
   140006117:	call   0x140001804
   14000611c:	test   rbx,rbx
   14000611f:	je     0x140006141
   140006121:	lea    rcx,[rip+0x3a78]        # 0x140009ba0
   140006128:	call   0x140001804
   14000612d:	mov    rcx,rbx
   140006130:	call   0x140001804
   140006135:	lea    rcx,[rip+0x3d9c]        # 0x140009ed8
   14000613c:	call   0x140001804
   140006141:	mov    rcx,QWORD PTR [rip+0x5ef0]        # 0x14000c038
   140006148:	cmp    rcx,r14
   14000614b:	je     0x140006161
   14000614d:	test   BYTE PTR [rcx+0x1c],0x1
   140006151:	je     0x140006161
   140006153:	mov    rcx,QWORD PTR [rcx+0x10]
   140006157:	mov    edx,0xc9
   14000615c:	call   0x140001180
   140006161:	mov    rcx,QWORD PTR [rsp+0x41a0]
   140006169:	xor    rcx,rsp
   14000616c:	call   0x140007680
   140006171:	lea    r11,[rsp+0x41b0]
   140006179:	mov    rbx,QWORD PTR [r11+0x20]
   14000617d:	mov    rdi,QWORD PTR [r11+0x28]
   140006181:	mov    rsp,r11
   140006184:	pop    r14
   140006186:	ret    
   140006187:	int3   
   140006188:	int3   
   140006189:	int3   
   14000618a:	int3   
   14000618b:	int3   
   14000618c:	int3   
   14000618d:	int3   
   14000618e:	int3   
   14000618f:	int3   
   140006190:	mov    QWORD PTR [rsp+0x10],rbx
   140006195:	mov    QWORD PTR [rsp+0x20],r9
   14000619a:	mov    QWORD PTR [rsp+0x18],r8
   14000619f:	push   rbp
   1400061a0:	push   rsi
   1400061a1:	push   rdi
   1400061a2:	push   r12
   1400061a4:	push   r13
   1400061a6:	push   r14
   1400061a8:	push   r15
   1400061aa:	sub    rsp,0x50
   1400061ae:	mov    r12,rdx
   1400061b1:	movsxd rsi,ecx
   1400061b4:	mov    rcx,QWORD PTR [rip+0x5e7d]        # 0x14000c038
   1400061bb:	lea    rbp,[rip+0x5e76]        # 0x14000c038
   1400061c2:	mov    r15d,0x1
   1400061c8:	cmp    rcx,rbp
   1400061cb:	je     0x1400061e1
   1400061cd:	test   BYTE PTR [rcx+0x1c],r15b
   1400061d1:	je     0x1400061e1
   1400061d3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400061d7:	mov    edx,0xca
   1400061dc:	call   0x140001180
   1400061e1:	mov    rax,QWORD PTR [rsp+0xc8]
   1400061e9:	xor    edi,edi
   1400061eb:	mov    r13,QWORD PTR [rsp+0xd0]
   1400061f3:	mov    ebx,edi
   1400061f5:	mov    QWORD PTR [rax],rdi
   1400061f8:	mov    QWORD PTR [r13+0x0],rdi
   1400061fc:	cmp    esi,0x2
   1400061ff:	jge    0x140006230
   140006201:	xor    edx,edx
   140006203:	lea    ecx,[rdi+0x2]
   140006206:	call   0x140005fd4
   14000620b:	mov    rcx,QWORD PTR [rip+0x5e26]        # 0x14000c038
   140006212:	lea    ebx,[rdi+0x57]
   140006215:	cmp    rcx,rbp
   140006218:	je     0x140006cb0
   14000621e:	test   BYTE PTR [rcx+0x1c],r15b
   140006222:	je     0x140006cb0
   140006228:	lea    edx,[rbx+0x74]
   14000622b:	jmp    0x140006ca4
   140006230:	mov    rax,r15
   140006233:	mov    DWORD PTR [rsp+0x90],edi
   14000623a:	mov    rdx,rsi
   14000623d:	mov    QWORD PTR [rsp+0x30],rax
   140006242:	lea    rcx,[r12+0x8]
   140006247:	mov    QWORD PTR [rsp+0x38],rdx
   14000624c:	mov    QWORD PTR [rsp+0xd0],rcx
   140006254:	mov    r14,rdi
   140006257:	mov    ebp,r15d
   14000625a:	or     r9,0xffffffffffffffff
   14000625e:	lea    r10,[rip+0x5deb]        # 0x14000c050
   140006265:	cmp    rax,rdx
   140006268:	jge    0x140006c54
   14000626e:	cmp    QWORD PTR [rip+0x5ddb],rdi        # 0x14000c050
   140006275:	mov    esi,edi
   140006277:	mov    r15,rdi
   14000627a:	je     0x1400062c5
   14000627c:	mov    rax,r10
   14000627f:	mov    rdx,QWORD PTR [rax]
   140006282:	mov    r8,r9
   140006285:	inc    r8
   140006288:	cmp    WORD PTR [rdx+r8*2],di
   14000628d:	jne    0x140006285
   14000628f:	mov    rcx,QWORD PTR [rcx]
   140006292:	call   QWORD PTR [rip+0x3170]        # 0x140009408
   140006298:	lea    r10,[rip+0x5db1]        # 0x14000c050
   14000629f:	test   eax,eax
   1400062a1:	je     0x14000631e
   1400062a3:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400062ab:	inc    r15
   1400062ae:	mov    r9,0xffffffffffffffff
   1400062b5:	lea    rax,[r15+r15*2]
   1400062b9:	lea    rax,[r10+rax*8]
   1400062bd:	cmp    QWORD PTR [rax],rdi
   1400062c0:	jne    0x14000627f
   1400062c2:	or     r9,r9
   1400062c5:	sub    esi,0x1
   1400062c8:	je     0x140006681
   1400062ce:	sub    esi,0x1
   1400062d1:	je     0x140006641
   1400062d7:	sub    esi,0x2
   1400062da:	je     0x1400065bd
   1400062e0:	sub    esi,0x4
   1400062e3:	je     0x140006547
   1400062e9:	cmp    esi,0x8
   1400062ec:	jne    0x1400069a1
   1400062f2:	mov    rcx,QWORD PTR [rcx]
   1400062f5:	lea    rdx,[r15+r15*2]
   1400062f9:	mov    rdx,QWORD PTR [r10+rdx*8]
   1400062fd:	call   QWORD PTR [rip+0x305d]        # 0x140009360
   140006303:	test   eax,eax
   140006305:	jne    0x14000695a
   14000630b:	mov    rax,QWORD PTR [rsp+0xe0]
   140006313:	mov    DWORD PTR [rax],0x1
   140006319:	jmp    0x140006677
   14000631e:	lea    rcx,[r15+r15*2]
   140006322:	mov    rax,QWORD PTR [r10+rcx*8+0x10]
   140006327:	test   rax,rax
   14000632a:	je     0x140006345
   14000632c:	cmp    DWORD PTR [rax],edi
   14000632e:	jne    0x140006339
   140006330:	cmp    DWORD PTR [rax+0x4],edi
   140006333:	jne    0x1400066ef
   140006339:	test   rax,rax
   14000633c:	je     0x140006345
   14000633e:	mov    DWORD PTR [rax+0x4],0x1
   140006345:	mov    r8,QWORD PTR [rsp+0xd0]
   14000634d:	or     r9,0xffffffffffffffff
   140006351:	mov    rdx,QWORD PTR [r10+rcx*8]
   140006355:	mov    rax,r9
   140006358:	mov    r8,QWORD PTR [r8]
   14000635b:	inc    rax
   14000635e:	cmp    WORD PTR [rdx+rax*2],di
   140006362:	jne    0x14000635b
   140006364:	mov    esi,DWORD PTR [r10+rcx*8+0x8]
   140006369:	lea    r14,[r8+rax*2]
   14000636d:	mov    rax,QWORD PTR [rsp+0xa8]
   140006375:	or     DWORD PTR [rax],esi
   140006377:	cmp    esi,0x400
   14000637d:	jg     0x1400063d1
   14000637f:	je     0x1400067ce
   140006385:	cmp    esi,0x20
   140006388:	jg     0x1400063a5
   14000638a:	mov    rcx,QWORD PTR [rsp+0xd0]
   140006392:	jne    0x1400062c5
   140006398:	mov    rax,QWORD PTR [rsp+0xc8]
   1400063a0:	jmp    0x1400066bf
   1400063a5:	sub    esi,0x40
   1400063a8:	je     0x1400063c8
   1400063aa:	sub    esi,0x40
   1400063ad:	jne    0x140006736
   1400063b3:	mov    rax,QWORD PTR [rsp+0xb0]
   1400063bb:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400063c3:	jmp    0x1400066bf
   1400063c8:	mov    QWORD PTR [r13+0x0],r14
   1400063cc:	jmp    0x140006677
   1400063d1:	mov    r15d,0x800
   1400063d7:	cmp    esi,r15d
   1400063da:	je     0x140006918
   1400063e0:	cmp    esi,0x1000
   1400063e6:	je     0x1400068d6
   1400063ec:	cmp    esi,0x2000
   1400063f2:	je     0x140006894
   1400063f8:	cmp    esi,0x4000
   1400063fe:	je     0x140006852
   140006404:	cmp    esi,0x8000
   14000640a:	je     0x140006810
   140006410:	cmp    esi,0x10000
   140006416:	je     0x1400064ef
   14000641c:	cmp    esi,0x20000
   140006422:	je     0x140006497
   140006424:	cmp    esi,0x40000
   14000642a:	je     0x14000643d
   14000642c:	cmp    esi,0x80000
   140006432:	jne    0x1400069a7
   140006438:	jmp    0x140006677
   14000643d:	mov    rcx,r8
   140006440:	call   QWORD PTR [rip+0x2f1a]        # 0x140009360
   140006446:	test   eax,eax
   140006448:	je     0x140006677
   14000644e:	movsxd rdx,ebp
   140006451:	mov    ecx,0x3
   140006456:	mov    rdx,QWORD PTR [r12+rdx*8]
   14000645a:	call   0x140005fd4
   14000645f:	mov    rcx,QWORD PTR [rip+0x5bd2]        # 0x14000c038
   140006466:	lea    rax,[rip+0x5bcb]        # 0x14000c038
   14000646d:	mov    ebx,0x57
   140006472:	cmp    rcx,rax
   140006475:	je     0x14000648e
   140006477:	test   BYTE PTR [rcx+0x1c],0x1
   14000647b:	je     0x14000648e
   14000647d:	mov    rcx,QWORD PTR [rcx+0x10]
   140006481:	mov    edx,0xd7
   140006486:	mov    r9d,ebx
   140006489:	call   0x1400011ac
   14000648e:	mov    ecx,ebx
   140006490:	call   QWORD PTR [rip+0x2dc2]        # 0x140009258
   140006496:	int3   
   140006497:	mov    rcx,r8
   14000649a:	call   QWORD PTR [rip+0x2ec0]        # 0x140009360
   1400064a0:	test   eax,eax
   1400064a2:	je     0x140006677
   1400064a8:	movsxd rdx,ebp
   1400064ab:	mov    ecx,0x3
   1400064b0:	mov    rdx,QWORD PTR [r12+rdx*8]
   1400064b4:	call   0x140005fd4
   1400064b9:	mov    rcx,QWORD PTR [rip+0x5b78]        # 0x14000c038
   1400064c0:	lea    rax,[rip+0x5b71]        # 0x14000c038
   1400064c7:	mov    ebx,0x57
   1400064cc:	cmp    rcx,rax
   1400064cf:	je     0x1400064e6
   1400064d1:	test   BYTE PTR [rcx+0x1c],0x1
   1400064d5:	je     0x1400064e6
   1400064d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400064db:	lea    edx,[rbx+0x7f]
   1400064de:	mov    r9d,ebx
   1400064e1:	call   0x1400011ac
   1400064e6:	mov    ecx,ebx
   1400064e8:	call   QWORD PTR [rip+0x2d6a]        # 0x140009258
   1400064ee:	int3   
   1400064ef:	mov    rcx,r8
   1400064f2:	call   QWORD PTR [rip+0x2e68]        # 0x140009360
   1400064f8:	test   eax,eax
   1400064fa:	je     0x140006677
   140006500:	movsxd rdx,ebp
   140006503:	mov    ecx,0x3
   140006508:	mov    rdx,QWORD PTR [r12+rdx*8]
   14000650c:	call   0x140005fd4
   140006511:	mov    rcx,QWORD PTR [rip+0x5b20]        # 0x14000c038
   140006518:	lea    rax,[rip+0x5b19]        # 0x14000c038
   14000651f:	mov    ebx,0x57
   140006524:	cmp    rcx,rax
   140006527:	je     0x14000653e
   140006529:	test   BYTE PTR [rcx+0x1c],0x1
   14000652d:	je     0x14000653e
   14000652f:	mov    rcx,QWORD PTR [rcx+0x10]
   140006533:	lea    edx,[rbx+0x7b]
   140006536:	mov    r9d,ebx
   140006539:	call   0x1400011ac
   14000653e:	mov    ecx,ebx
   140006540:	call   QWORD PTR [rip+0x2d12]        # 0x140009258
   140006546:	int3   
   140006547:	mov    rcx,QWORD PTR [rcx]
   14000654a:	lea    rdx,[r15+r15*2]
   14000654e:	mov    rdx,QWORD PTR [r10+rdx*8]
   140006552:	call   QWORD PTR [rip+0x2e08]        # 0x140009360
   140006558:	test   eax,eax
   14000655a:	jne    0x140006b47
   140006560:	mov    ecx,0xfffffff6
   140006565:	call   QWORD PTR [rip+0x2cc5]        # 0x140009230
   14000656b:	mov    rcx,rax
   14000656e:	call   QWORD PTR [rip+0x2c0c]        # 0x140009180
   140006574:	cmp    eax,0x2
   140006577:	je     0x140006677
   14000657d:	xor    edx,edx
   14000657f:	lea    ecx,[rdx+0xf]
   140006582:	call   0x140005fd4
   140006587:	mov    rcx,QWORD PTR [rip+0x5aaa]        # 0x14000c038
   14000658e:	lea    rax,[rip+0x5aa3]        # 0x14000c038
   140006595:	mov    ebx,0x57
   14000659a:	cmp    rcx,rax
   14000659d:	je     0x1400065b4
   14000659f:	test   BYTE PTR [rcx+0x1c],0x1
   1400065a3:	je     0x1400065b4
   1400065a5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400065a9:	lea    edx,[rbx+0x7a]
   1400065ac:	mov    r9d,ebx
   1400065af:	call   0x1400011ac
   1400065b4:	mov    ecx,ebx
   1400065b6:	call   QWORD PTR [rip+0x2c9c]        # 0x140009258
   1400065bc:	int3   
   1400065bd:	mov    esi,edi
   1400065bf:	mov    rax,r9
   1400065c2:	inc    rax
   1400065c5:	cmp    WORD PTR [r14+rax*2],di
   1400065ca:	jne    0x1400065c2
   1400065cc:	test   rax,rax
   1400065cf:	je     0x140006601
   1400065d1:	mov    rcx,rdi
   1400065d4:	movzx  ecx,WORD PTR [r14+rcx*2]
   1400065d9:	call   QWORD PTR [rip+0x2e11]        # 0x1400093f0
   1400065df:	test   eax,eax
   1400065e1:	je     0x140006b8e
   1400065e7:	inc    esi
   1400065e9:	or     r9,0xffffffffffffffff
   1400065ed:	mov    ecx,esi
   1400065ef:	mov    rax,r9
   1400065f2:	inc    rax
   1400065f5:	cmp    WORD PTR [r14+rax*2],di
   1400065fa:	jne    0x1400065f2
   1400065fc:	cmp    rcx,rax
   1400065ff:	jb     0x1400065d4
   140006601:	mov    rdx,r9
   140006604:	inc    rdx
   140006607:	cmp    WORD PTR [r14+rdx*2],di
   14000660c:	jne    0x140006604
   14000660e:	mov    rsi,QWORD PTR [rsp+0xc0]
   140006616:	lea    r8,[rip+0x37cb]        # 0x140009de8
   14000661d:	mov    r9,rsi
   140006620:	inc    rdx
   140006623:	mov    rcx,r14
   140006626:	call   QWORD PTR [rip+0x2db4]        # 0x1400093e0
   14000662c:	inc    eax
   14000662e:	cmp    eax,0x1
   140006631:	jbe    0x140006bd1
   140006637:	imul   eax,DWORD PTR [rsi],0x3e8
   14000663d:	mov    DWORD PTR [rsi],eax
   14000663f:	jmp    0x140006677
   140006641:	mov    rdx,QWORD PTR [rsp+0xf0]
   140006649:	lea    rax,[rsp+0x40]
   14000664e:	mov    rcx,QWORD PTR [rsp+0xe8]
   140006656:	lea    r8,[rsp+0x90]
   14000665e:	mov    QWORD PTR [rsp+0x28],rax
   140006663:	mov    r9,r14
   140006666:	lea    rax,[rsp+0x48]
   14000666b:	mov    QWORD PTR [rsp+0x20],rax
   140006670:	call   0x140005918
   140006675:	mov    ebx,eax
   140006677:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000667f:	jmp    0x1400066c2
   140006681:	cmp    WORD PTR [r14],di
   140006685:	je     0x140006c14
   14000668b:	cmp    WORD PTR [r14],0x22
   140006690:	jne    0x1400066b7
   140006692:	mov    rdx,QWORD PTR [rsp+0xb8]
   14000669a:	lea    rax,[r14+0x2]
   14000669e:	mov    QWORD PTR [rdx],rax
   1400066a1:	mov    rax,r9
   1400066a4:	inc    rax
   1400066a7:	cmp    WORD PTR [r14+rax*2],di
   1400066ac:	jne    0x1400066a4
   1400066ae:	dec    eax
   1400066b0:	mov    WORD PTR [r14+rax*2],di
   1400066b5:	jmp    0x1400066c2
   1400066b7:	mov    rax,QWORD PTR [rsp+0xb8]
   1400066bf:	mov    QWORD PTR [rax],r14
   1400066c2:	mov    rax,QWORD PTR [rsp+0x30]
   1400066c7:	add    rcx,0x8
   1400066cb:	inc    rax
   1400066ce:	mov    QWORD PTR [rsp+0xd0],rcx
   1400066d6:	inc    ebp
   1400066d8:	mov    QWORD PTR [rsp+0x30],rax
   1400066dd:	test   ebx,ebx
   1400066df:	jne    0x140006c54
   1400066e5:	mov    rdx,QWORD PTR [rsp+0x38]
   1400066ea:	jmp    0x14000625a
   1400066ef:	movsxd rdx,ebp
   1400066f2:	mov    ecx,0x6
   1400066f7:	mov    rdx,QWORD PTR [r12+rdx*8]
   1400066fb:	call   0x140005fd4
   140006700:	mov    rcx,QWORD PTR [rip+0x5931]        # 0x14000c038
   140006707:	lea    rax,[rip+0x592a]        # 0x14000c038
   14000670e:	mov    ebx,0x57
   140006713:	cmp    rcx,rax
   140006716:	je     0x14000672d
   140006718:	test   BYTE PTR [rcx+0x1c],0x1
   14000671c:	je     0x14000672d
   14000671e:	mov    rcx,QWORD PTR [rcx+0x10]
   140006722:	lea    edx,[rbx+0x75]
   140006725:	mov    r9d,ebx
   140006728:	call   0x1400011ac
   14000672d:	mov    ecx,ebx
   14000672f:	call   QWORD PTR [rip+0x2b23]        # 0x140009258
   140006735:	int3   
   140006736:	sub    esi,0x80
   14000673c:	je     0x140006791
   14000673e:	cmp    esi,0x100
   140006744:	jne    0x1400069a1
   14000674a:	movsxd rdx,ebp
   14000674d:	mov    ecx,0x3
   140006752:	mov    rdx,QWORD PTR [r12+rdx*8]
   140006756:	call   0x140005fd4
   14000675b:	mov    rcx,QWORD PTR [rip+0x58d6]        # 0x14000c038
   140006762:	lea    rax,[rip+0x58cf]        # 0x14000c038
   140006769:	mov    ebx,0x57
   14000676e:	cmp    rcx,rax
   140006771:	je     0x140006788
   140006773:	test   BYTE PTR [rcx+0x1c],0x1
   140006777:	je     0x140006788
   140006779:	mov    rcx,QWORD PTR [rcx+0x10]
   14000677d:	lea    edx,[rsi-0x2b]
   140006780:	mov    r9d,ebx
   140006783:	call   0x1400011ac
   140006788:	mov    ecx,ebx
   14000678a:	call   QWORD PTR [rip+0x2ac8]        # 0x140009258
   140006790:	int3   
   140006791:	xor    edx,edx
   140006793:	lea    ecx,[rdx+0x1]
   140006796:	call   0x140005fd4
   14000679b:	mov    rcx,QWORD PTR [rip+0x5896]        # 0x14000c038
   1400067a2:	lea    rax,[rip+0x588f]        # 0x14000c038
   1400067a9:	cmp    rcx,rax
   1400067ac:	je     0x1400067c5
   1400067ae:	test   BYTE PTR [rcx+0x1c],0x1
   1400067b2:	je     0x1400067c5
   1400067b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400067b8:	mov    edx,0xd4
   1400067bd:	xor    r9d,r9d
   1400067c0:	call   0x1400011ac
   1400067c5:	xor    ecx,ecx
   1400067c7:	call   QWORD PTR [rip+0x2a8b]        # 0x140009258
   1400067cd:	int3   
   1400067ce:	xor    edx,edx
   1400067d0:	lea    ecx,[rdx+0x9]
   1400067d3:	call   0x140005fd4
   1400067d8:	mov    rcx,QWORD PTR [rip+0x5859]        # 0x14000c038
   1400067df:	lea    rax,[rip+0x5852]        # 0x14000c038
   1400067e6:	mov    ebx,0x57
   1400067eb:	cmp    rcx,rax
   1400067ee:	je     0x140006807
   1400067f0:	test   BYTE PTR [rcx+0x1c],0x1
   1400067f4:	je     0x140006807
   1400067f6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400067fa:	mov    edx,0xd8
   1400067ff:	mov    r9d,ebx
   140006802:	call   0x1400011ac
   140006807:	mov    ecx,ebx
   140006809:	call   QWORD PTR [rip+0x2a49]        # 0x140009258
   14000680f:	int3   
   140006810:	xor    edx,edx
   140006812:	lea    ecx,[rdx+0xe]
   140006815:	call   0x140005fd4
   14000681a:	mov    rcx,QWORD PTR [rip+0x5817]        # 0x14000c038
   140006821:	lea    rax,[rip+0x5810]        # 0x14000c038
   140006828:	mov    ebx,0x57
   14000682d:	cmp    rcx,rax
   140006830:	je     0x140006849
   140006832:	test   BYTE PTR [rcx+0x1c],0x1
   140006836:	je     0x140006849
   140006838:	mov    rcx,QWORD PTR [rcx+0x10]
   14000683c:	mov    edx,0xdd
   140006841:	mov    r9d,ebx
   140006844:	call   0x1400011ac
   140006849:	mov    ecx,ebx
   14000684b:	call   QWORD PTR [rip+0x2a07]        # 0x140009258
   140006851:	int3   
   140006852:	xor    edx,edx
   140006854:	lea    ecx,[rdx+0xd]
   140006857:	call   0x140005fd4
   14000685c:	mov    rcx,QWORD PTR [rip+0x57d5]        # 0x14000c038
   140006863:	lea    rax,[rip+0x57ce]        # 0x14000c038
   14000686a:	mov    ebx,0x57
   14000686f:	cmp    rcx,rax
   140006872:	je     0x14000688b
   140006874:	test   BYTE PTR [rcx+0x1c],0x1
   140006878:	je     0x14000688b
   14000687a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000687e:	mov    edx,0xdc
   140006883:	mov    r9d,ebx
   140006886:	call   0x1400011ac
   14000688b:	mov    ecx,ebx
   14000688d:	call   QWORD PTR [rip+0x29c5]        # 0x140009258
   140006893:	int3   
   140006894:	xor    edx,edx
   140006896:	lea    ecx,[rdx+0xc]
   140006899:	call   0x140005fd4
   14000689e:	mov    rcx,QWORD PTR [rip+0x5793]        # 0x14000c038
   1400068a5:	lea    rax,[rip+0x578c]        # 0x14000c038
   1400068ac:	mov    ebx,0x57
   1400068b1:	cmp    rcx,rax
   1400068b4:	je     0x1400068cd
   1400068b6:	test   BYTE PTR [rcx+0x1c],0x1
   1400068ba:	je     0x1400068cd
   1400068bc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400068c0:	mov    edx,0xdb
   1400068c5:	mov    r9d,ebx
   1400068c8:	call   0x1400011ac
   1400068cd:	mov    ecx,ebx
   1400068cf:	call   QWORD PTR [rip+0x2983]        # 0x140009258
   1400068d5:	int3   
   1400068d6:	xor    edx,edx
   1400068d8:	lea    ecx,[rdx+0xb]
   1400068db:	call   0x140005fd4
   1400068e0:	mov    rcx,QWORD PTR [rip+0x5751]        # 0x14000c038
   1400068e7:	lea    rax,[rip+0x574a]        # 0x14000c038
   1400068ee:	mov    ebx,0x57
   1400068f3:	cmp    rcx,rax
   1400068f6:	je     0x14000690f
   1400068f8:	test   BYTE PTR [rcx+0x1c],0x1
   1400068fc:	je     0x14000690f
   1400068fe:	mov    rcx,QWORD PTR [rcx+0x10]
   140006902:	mov    edx,0xda
   140006907:	mov    r9d,ebx
   14000690a:	call   0x1400011ac
   14000690f:	mov    ecx,ebx
   140006911:	call   QWORD PTR [rip+0x2941]        # 0x140009258
   140006917:	int3   
   140006918:	xor    edx,edx
   14000691a:	lea    ecx,[rdx+0xa]
   14000691d:	call   0x140005fd4
   140006922:	mov    rcx,QWORD PTR [rip+0x570f]        # 0x14000c038
   140006929:	lea    rax,[rip+0x5708]        # 0x14000c038
   140006930:	mov    ebx,0x57
   140006935:	cmp    rcx,rax
   140006938:	je     0x140006951
   14000693a:	test   BYTE PTR [rcx+0x1c],0x1
   14000693e:	je     0x140006951
   140006940:	mov    rcx,QWORD PTR [rcx+0x10]
   140006944:	mov    edx,0xd9
   140006949:	mov    r9d,ebx
   14000694c:	call   0x1400011ac
   140006951:	mov    ecx,ebx
   140006953:	call   QWORD PTR [rip+0x28ff]        # 0x140009258
   140006959:	int3   
   14000695a:	movsxd rdx,ebp
   14000695d:	mov    ecx,0x3
   140006962:	mov    rdx,QWORD PTR [r12+rdx*8]
   140006966:	call   0x140005fd4
   14000696b:	mov    rcx,QWORD PTR [rip+0x56c6]        # 0x14000c038
   140006972:	lea    rax,[rip+0x56bf]        # 0x14000c038
   140006979:	mov    ebx,0x57
   14000697e:	cmp    rcx,rax
   140006981:	je     0x140006998
   140006983:	test   BYTE PTR [rcx+0x1c],0x1
   140006987:	je     0x140006998
   140006989:	mov    rcx,QWORD PTR [rcx+0x10]
   14000698d:	lea    edx,[rbx+0x7c]
   140006990:	mov    r9d,ebx
   140006993:	call   0x1400011ac
   140006998:	mov    ecx,ebx
   14000699a:	call   QWORD PTR [rip+0x28b8]        # 0x140009258
   1400069a0:	int3   
   1400069a1:	mov    r15d,0x800
   1400069a7:	mov    rax,QWORD PTR [rsp+0xa0]
   1400069af:	mov    DWORD PTR [rax],ebp
   1400069b1:	movsxd rax,ebp
   1400069b4:	mov    rcx,QWORD PTR [r12+rax*8]
   1400069b8:	movzx  eax,WORD PTR [rcx]
   1400069bb:	mov    ecx,0xfffd
   1400069c0:	sub    ax,0x2d
   1400069c4:	test   cx,ax
   1400069c7:	je     0x140006a40
   1400069c9:	mov    rax,QWORD PTR [rsp+0xc8]
   1400069d1:	cmp    QWORD PTR [rax],rdi
   1400069d4:	je     0x140006a03
   1400069d6:	cmp    QWORD PTR [r13+0x0],rdi
   1400069da:	jne    0x1400069fe
   1400069dc:	mov    r9,QWORD PTR [rsp+0xd8]
   1400069e4:	mov    rdx,rax
   1400069e7:	mov    rax,QWORD PTR [rsp+0xb0]
   1400069ef:	mov    r8,r13
   1400069f2:	mov    rcx,QWORD PTR [rax]
   1400069f5:	call   0x140005da8
   1400069fa:	mov    ebx,eax
   1400069fc:	jmp    0x140006a15
   1400069fe:	cmp    QWORD PTR [rax],rdi
   140006a01:	jne    0x140006a15
   140006a03:	cmp    QWORD PTR [r13+0x0],rdi
   140006a07:	je     0x140006a15
   140006a09:	mov    ebx,0x57
   140006a0e:	mov    ecx,ebx
   140006a10:	call   0x140002964
   140006a15:	mov    rcx,QWORD PTR [rip+0x561c]        # 0x14000c038
   140006a1c:	lea    rax,[rip+0x5615]        # 0x14000c038
   140006a23:	cmp    rcx,rax
   140006a26:	je     0x140006cb0
   140006a2c:	test   BYTE PTR [rcx+0x1c],0x1
   140006a30:	je     0x140006cb0
   140006a36:	mov    edx,0xdf
   140006a3b:	jmp    0x140006ca4
   140006a40:	mov    eax,0x2
   140006a45:	mul    r15
   140006a48:	cmovo  rax,r9
   140006a4c:	xor    r8d,r8d
   140006a4f:	mov    rcx,rax
   140006a52:	xor    edx,edx
   140006a54:	call   QWORD PTR [rip+0x25a6]        # 0x140009000
   140006a5a:	mov    rbx,rax
   140006a5d:	test   rax,rax
   140006a60:	je     0x140006ada
   140006a62:	mov    esi,r15d
   140006a65:	or     rbp,0xffffffffffffffff
   140006a69:	xor    ecx,ecx
   140006a6b:	call   QWORD PTR [rip+0x277f]        # 0x1400091f0
   140006a71:	mov    r9d,r15d
   140006a74:	mov    r8,rbx
   140006a77:	mov    rcx,rax
   140006a7a:	mov    edx,0x1
   140006a7f:	call   QWORD PTR [rip+0x2763]        # 0x1400091e8
   140006a85:	test   eax,eax
   140006a87:	je     0x140006b2e
   140006a8d:	lea    ecx,[r15-0x1]
   140006a91:	cmp    eax,ecx
   140006a93:	mov    rcx,rbx
   140006a96:	jne    0x140006b1c
   140006a9c:	cmp    esi,0x1800
   140006aa2:	je     0x140006b1c
   140006aa4:	xor    edx,edx
   140006aa6:	call   QWORD PTR [rip+0x2574]        # 0x140009020
   140006aac:	add    esi,0x400
   140006ab2:	mov    eax,0x2
   140006ab7:	movsxd rcx,esi
   140006aba:	mov    r15d,esi
   140006abd:	mul    rcx
   140006ac0:	cmovo  rax,rbp
   140006ac4:	xor    r8d,r8d
   140006ac7:	mov    rcx,rax
   140006aca:	xor    edx,edx
   140006acc:	call   QWORD PTR [rip+0x252e]        # 0x140009000
   140006ad2:	mov    rbx,rax
   140006ad5:	test   rax,rax
   140006ad8:	jne    0x140006a69
   140006ada:	mov    ecx,0xe
   140006adf:	call   0x140002964
   140006ae4:	mov    rcx,QWORD PTR [rip+0x554d]        # 0x14000c038
   140006aeb:	lea    rax,[rip+0x5546]        # 0x14000c038
   140006af2:	mov    ebx,0x57
   140006af7:	cmp    rcx,rax
   140006afa:	je     0x140006b13
   140006afc:	test   BYTE PTR [rcx+0x1c],0x1
   140006b00:	je     0x140006b13
   140006b02:	mov    rcx,QWORD PTR [rcx+0x10]
   140006b06:	mov    edx,0xde
   140006b0b:	mov    r9d,ebx
   140006b0e:	call   0x1400011ac
   140006b13:	mov    ecx,ebx
   140006b15:	call   QWORD PTR [rip+0x273d]        # 0x140009258
   140006b1b:	int3   
   140006b1c:	call   0x140001804
   140006b21:	xor    edx,edx
   140006b23:	mov    rcx,rbx
   140006b26:	call   QWORD PTR [rip+0x24f4]        # 0x140009020
   140006b2c:	jmp    0x140006ae4
   140006b2e:	xor    edx,edx
   140006b30:	mov    rcx,rbx
   140006b33:	call   QWORD PTR [rip+0x24e7]        # 0x140009020
   140006b39:	lea    rcx,[rip+0x30d8]        # 0x140009c18
   140006b40:	call   0x140001804
   140006b45:	jmp    0x140006ae4
   140006b47:	movsxd rdx,ebp
   140006b4a:	mov    ecx,0x3
   140006b4f:	mov    rdx,QWORD PTR [r12+rdx*8]
   140006b53:	call   0x140005fd4
   140006b58:	mov    rcx,QWORD PTR [rip+0x54d9]        # 0x14000c038
   140006b5f:	lea    rax,[rip+0x54d2]        # 0x14000c038
   140006b66:	mov    ebx,0x57
   140006b6b:	cmp    rcx,rax
   140006b6e:	je     0x140006b85
   140006b70:	test   BYTE PTR [rcx+0x1c],0x1
   140006b74:	je     0x140006b85
   140006b76:	mov    rcx,QWORD PTR [rcx+0x10]
   140006b7a:	lea    edx,[rbx+0x79]
   140006b7d:	mov    r9d,ebx
   140006b80:	call   0x1400011ac
   140006b85:	mov    ecx,ebx
   140006b87:	call   QWORD PTR [rip+0x26cb]        # 0x140009258
   140006b8d:	int3   
   140006b8e:	mov    rdx,r14
   140006b91:	mov    ecx,0x4
   140006b96:	call   0x140005fd4
   140006b9b:	mov    rcx,QWORD PTR [rip+0x5496]        # 0x14000c038
   140006ba2:	lea    rax,[rip+0x548f]        # 0x14000c038
   140006ba9:	mov    ebx,0x57
   140006bae:	cmp    rcx,rax
   140006bb1:	je     0x140006bc8
   140006bb3:	test   BYTE PTR [rcx+0x1c],0x1
   140006bb7:	je     0x140006bc8
   140006bb9:	mov    rcx,QWORD PTR [rcx+0x10]
   140006bbd:	lea    edx,[rbx+0x77]
   140006bc0:	mov    r9d,ebx
   140006bc3:	call   0x1400011ac
   140006bc8:	mov    ecx,ebx
   140006bca:	call   QWORD PTR [rip+0x2688]        # 0x140009258
   140006bd0:	int3   
   140006bd1:	mov    rdx,r14
   140006bd4:	mov    ecx,0x4
   140006bd9:	call   0x140005fd4
   140006bde:	mov    rcx,QWORD PTR [rip+0x5453]        # 0x14000c038
   140006be5:	lea    rax,[rip+0x544c]        # 0x14000c038
   140006bec:	mov    ebx,0x57
   140006bf1:	cmp    rcx,rax
   140006bf4:	je     0x140006c0b
   140006bf6:	test   BYTE PTR [rcx+0x1c],0x1
   140006bfa:	je     0x140006c0b
   140006bfc:	mov    rcx,QWORD PTR [rcx+0x10]
   140006c00:	lea    edx,[rbx+0x78]
   140006c03:	mov    r9d,ebx
   140006c06:	call   0x1400011ac
   140006c0b:	mov    ecx,ebx
   140006c0d:	call   QWORD PTR [rip+0x2645]        # 0x140009258
   140006c13:	int3   
   140006c14:	xor    edx,edx
   140006c16:	lea    ecx,[rdx+0x9]
   140006c19:	call   0x140005fd4
   140006c1e:	mov    rcx,QWORD PTR [rip+0x5413]        # 0x14000c038
   140006c25:	lea    rax,[rip+0x540c]        # 0x14000c038
   140006c2c:	mov    ebx,0x57
   140006c31:	cmp    rcx,rax
   140006c34:	je     0x140006c4b
   140006c36:	test   BYTE PTR [rcx+0x1c],0x1
   140006c3a:	je     0x140006c4b
   140006c3c:	mov    rcx,QWORD PTR [rcx+0x10]
   140006c40:	lea    edx,[rbx+0x76]
   140006c43:	mov    r9d,ebx
   140006c46:	call   0x1400011ac
   140006c4b:	mov    ecx,ebx
   140006c4d:	call   QWORD PTR [rip+0x2605]        # 0x140009258
   140006c53:	int3   
   140006c54:	mov    rcx,QWORD PTR [rsp+0xc8]
   140006c5c:	mov    eax,edi
   140006c5e:	mov    ebx,0x57
   140006c63:	cmp    QWORD PTR [rcx],rdi
   140006c66:	setne  al
   140006c69:	cmp    QWORD PTR [r13+0x0],rdi
   140006c6d:	setne  dil
   140006c71:	xor    eax,edi
   140006c73:	je     0x140006c7c
   140006c75:	mov    ecx,ebx
   140006c77:	call   0x140002964
   140006c7c:	xor    edx,edx
   140006c7e:	lea    ecx,[rdx+0x2]
   140006c81:	call   0x140005fd4
   140006c86:	mov    rcx,QWORD PTR [rip+0x53ab]        # 0x14000c038
   140006c8d:	lea    rax,[rip+0x53a4]        # 0x14000c038
   140006c94:	cmp    rcx,rax
   140006c97:	je     0x140006cb0
   140006c99:	test   BYTE PTR [rcx+0x1c],0x1
   140006c9d:	je     0x140006cb0
   140006c9f:	mov    edx,0xe0
   140006ca4:	mov    rcx,QWORD PTR [rcx+0x10]
   140006ca8:	mov    r9d,ebx
   140006cab:	call   0x1400011ac
   140006cb0:	mov    eax,ebx
   140006cb2:	mov    rbx,QWORD PTR [rsp+0x98]
   140006cba:	add    rsp,0x50
   140006cbe:	pop    r15
   140006cc0:	pop    r14
   140006cc2:	pop    r13
   140006cc4:	pop    r12
   140006cc6:	pop    rdi
   140006cc7:	pop    rsi
   140006cc8:	pop    rbp
   140006cc9:	ret    
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006cd5:	mov    QWORD PTR [rsp+0x10],rsi
   140006cda:	push   rbp
   140006cdb:	push   rdi
   140006cdc:	push   r12
   140006cde:	push   r14
   140006ce0:	push   r15
   140006ce2:	lea    rbp,[rsp-0x37]
   140006ce7:	sub    rsp,0xc0
   140006cee:	xor    r15d,r15d
   140006cf1:	lea    rax,[rip+0x31f8]        # 0x140009ef0
   140006cf8:	lea    rbx,[rip+0x6141]        # 0x14000ce40
   140006cff:	mov    QWORD PTR [rip+0x614a],r15        # 0x14000ce50
   140006d06:	mov    QWORD PTR [rip+0x6133],r15        # 0x14000ce40
   140006d0d:	lea    rdi,[rip+0x6154]        # 0x14000ce68
   140006d14:	mov    QWORD PTR [rip+0x614d],rax        # 0x14000ce68
   140006d1b:	lea    r12d,[r15+0x1]
   140006d1f:	mov    QWORD PTR [rip+0x5312],rbx        # 0x14000c038
   140006d26:	mov    QWORD PTR [rip+0x612b],r12        # 0x14000ce58
   140006d2d:	mov    r8,QWORD PTR [rdi]
   140006d30:	lea    rax,[rbx+0x8]
   140006d34:	mov    QWORD PTR [rsp+0x38],rax
   140006d39:	lea    rcx,[rip+0xffffffffffffa610]        # 0x140001350
   140006d40:	mov    QWORD PTR [rsp+0x30],r15
   140006d45:	lea    rax,[rbp+0x1f]
   140006d49:	mov    QWORD PTR [rbp+0x1f],r8
   140006d4d:	lea    rdi,[rdi+0x8]
   140006d51:	mov    QWORD PTR [rbp+0x27],r15
   140006d55:	mov    r9d,r12d
   140006d58:	mov    QWORD PTR [rsp+0x28],r15
   140006d5d:	mov    rdx,rbx
   140006d60:	mov    QWORD PTR [rsp+0x20],rax
   140006d65:	mov    QWORD PTR [rbx+0x20],r8
   140006d69:	call   QWORD PTR [rip+0x25d1]        # 0x140009340
   140006d6f:	mov    rbx,QWORD PTR [rbx]
   140006d72:	test   rbx,rbx
   140006d75:	jne    0x140006d2d
   140006d77:	or     DWORD PTR [rbp-0x9],0xffffffff
   140006d7b:	xor    r8d,r8d
   140006d7e:	xor    edx,edx
   140006d80:	mov    QWORD PTR [rbp+0x7],r15
   140006d84:	mov    ecx,0x100
   140006d89:	mov    QWORD PTR [rbp+0x17],r15
   140006d8d:	mov    BYTE PTR [rbp+0x77],r15b
   140006d91:	mov    DWORD PTR [rbp-0xd],r15d
   140006d95:	mov    QWORD PTR [rbp+0xf],r15
   140006d99:	mov    DWORD PTR [rbp-0x11],r15d
   140006d9d:	call   QWORD PTR [rip+0x2465]        # 0x140009208
   140006da3:	xor    r9d,r9d
   140006da6:	xor    r8d,r8d
   140006da9:	mov    edx,r12d
   140006dac:	xor    ecx,ecx
   140006dae:	call   QWORD PTR [rip+0x2404]        # 0x1400091b8
   140006db4:	test   eax,eax
   140006db6:	jne    0x140006df1
   140006db8:	call   QWORD PTR [rip+0x2392]        # 0x140009150
   140006dbe:	mov    edi,eax
   140006dc0:	mov    rcx,QWORD PTR [rip+0x5271]        # 0x14000c038
   140006dc7:	lea    rbx,[rip+0x526a]        # 0x14000c038
   140006dce:	cmp    rcx,rbx
   140006dd1:	je     0x140006dea
   140006dd3:	test   BYTE PTR [rcx+0x1c],r12b
   140006dd7:	je     0x140006dea
   140006dd9:	mov    rcx,QWORD PTR [rcx+0x10]
   140006ddd:	mov    edx,0xe1
   140006de2:	mov    r9d,eax
   140006de5:	call   0x1400011ac
   140006dea:	mov    eax,edi
   140006dec:	jmp    0x140007180
   140006df1:	lea    rcx,[rip+0x6020]        # 0x14000ce18
   140006df8:	call   QWORD PTR [rip+0x24ba]        # 0x1400092b8
   140006dfe:	lea    rdx,[rbp-0x1]
   140006e02:	mov    DWORD PTR [rbp-0x19],r15d
   140006e06:	lea    rcx,[rbp-0x19]
   140006e0a:	mov    QWORD PTR [rbp-0x1],r15
   140006e0e:	call   0x1400015b0
   140006e13:	mov    edi,eax
   140006e15:	test   eax,eax
   140006e17:	je     0x140006e5d
   140006e19:	mov    r8b,r12b
   140006e1c:	mov    dl,r12b
   140006e1f:	mov    ecx,eax
   140006e21:	call   0x140001bb8
   140006e26:	mov    rcx,QWORD PTR [rip+0x520b]        # 0x14000c038
   140006e2d:	lea    rbx,[rip+0x5204]        # 0x14000c038
   140006e34:	cmp    rcx,rbx
   140006e37:	je     0x14000717a
   140006e3d:	test   BYTE PTR [rcx+0x1c],r12b
   140006e41:	je     0x14000717a
   140006e47:	mov    edx,0xe2
   140006e4c:	mov    r9d,edi
   140006e4f:	mov    rcx,QWORD PTR [rcx+0x10]
   140006e53:	call   0x1400011ac
   140006e58:	jmp    0x14000717a
   140006e5d:	mov    rdi,QWORD PTR [rbp-0x1]
   140006e61:	lea    rax,[rbp-0x11]
   140006e65:	mov    r14d,DWORD PTR [rbp-0x19]
   140006e69:	lea    r9,[rbp-0x15]
   140006e6d:	mov    QWORD PTR [rsp+0x60],rax
   140006e72:	lea    r8,[rbp+0x7f]
   140006e76:	lea    rax,[rbp+0xf]
   140006e7a:	mov    DWORD PTR [rbp+0x7f],r15d
   140006e7e:	mov    QWORD PTR [rsp+0x58],rax
   140006e83:	mov    rdx,rdi
   140006e86:	lea    rax,[rbp-0xd]
   140006e8a:	mov    DWORD PTR [rbp-0x15],r15d
   140006e8e:	mov    QWORD PTR [rsp+0x50],rax
   140006e93:	mov    ecx,r14d
   140006e96:	lea    rax,[rbp+0x77]
   140006e9a:	mov    QWORD PTR [rsp+0x48],rax
   140006e9f:	lea    rax,[rbp+0x2f]
   140006ea3:	mov    QWORD PTR [rsp+0x40],rax
   140006ea8:	lea    rax,[rbp+0x1f]
   140006eac:	mov    QWORD PTR [rsp+0x38],rax
   140006eb1:	lea    rax,[rbp-0x9]
   140006eb5:	mov    QWORD PTR [rsp+0x30],rax
   140006eba:	lea    rax,[rbp+0x17]
   140006ebe:	mov    QWORD PTR [rsp+0x28],rax
   140006ec3:	lea    rax,[rbp+0x7]
   140006ec7:	mov    QWORD PTR [rsp+0x20],rax
   140006ecc:	call   0x140006190
   140006ed1:	mov    esi,eax
   140006ed3:	test   eax,eax
   140006ed5:	je     0x140006f1b
   140006ed7:	mov    rcx,rdi
   140006eda:	call   QWORD PTR [rip+0x2530]        # 0x140009410
   140006ee0:	mov    r8b,r12b
   140006ee3:	mov    dl,r12b
   140006ee6:	mov    ecx,esi
   140006ee8:	call   0x140001bb8
   140006eed:	mov    rcx,QWORD PTR [rip+0x5144]        # 0x14000c038
   140006ef4:	lea    rbx,[rip+0x513d]        # 0x14000c038
   140006efb:	cmp    rcx,rbx
   140006efe:	je     0x14000717a
   140006f04:	test   BYTE PTR [rcx+0x1c],r12b
   140006f08:	je     0x14000717a
   140006f0e:	mov    edx,0xe3
   140006f13:	mov    r9d,esi
   140006f16:	jmp    0x140006e4f
   140006f1b:	test   BYTE PTR [rbp-0x15],0x8
   140006f1f:	mov    esi,0xfffffff6
   140006f24:	je     0x14000700c
   140006f2a:	mov    ecx,esi
   140006f2c:	call   QWORD PTR [rip+0x22fe]        # 0x140009230
   140006f32:	mov    rcx,rax
   140006f35:	lea    rdx,[rbp-0x19]
   140006f39:	call   QWORD PTR [rip+0x21a9]        # 0x1400090e8
   140006f3f:	test   eax,eax
   140006f41:	je     0x140006fb8
   140006f43:	mov    ebx,DWORD PTR [rbp-0x19]
   140006f46:	mov    ecx,esi
   140006f48:	and    ebx,0xfffffffb
   140006f4b:	call   QWORD PTR [rip+0x22df]        # 0x140009230
   140006f51:	mov    rcx,rax
   140006f54:	mov    edx,ebx
   140006f56:	call   QWORD PTR [rip+0x21ac]        # 0x140009108
   140006f5c:	test   eax,eax
   140006f5e:	jne    0x14000700c
   140006f64:	call   QWORD PTR [rip+0x21e6]        # 0x140009150
   140006f6a:	mov    rcx,rdi
   140006f6d:	mov    esi,eax
   140006f6f:	call   QWORD PTR [rip+0x249b]        # 0x140009410
   140006f75:	mov    r8b,r12b
   140006f78:	mov    dl,r12b
   140006f7b:	mov    ecx,esi
   140006f7d:	call   0x140001bb8
   140006f82:	test   al,al
   140006f84:	je     0x140006f8d
   140006f86:	mov    ecx,esi
   140006f88:	call   0x140002964
   140006f8d:	mov    rcx,QWORD PTR [rip+0x50a4]        # 0x14000c038
   140006f94:	lea    rbx,[rip+0x509d]        # 0x14000c038
   140006f9b:	cmp    rcx,rbx
   140006f9e:	je     0x14000717a
   140006fa4:	test   BYTE PTR [rcx+0x1c],r12b
   140006fa8:	je     0x14000717a
   140006fae:	mov    edx,0xe4
   140006fb3:	jmp    0x140006f13
   140006fb8:	call   QWORD PTR [rip+0x2192]        # 0x140009150
   140006fbe:	mov    rcx,rdi
   140006fc1:	mov    esi,eax
   140006fc3:	call   QWORD PTR [rip+0x2447]        # 0x140009410
   140006fc9:	mov    r8b,r12b
   140006fcc:	mov    dl,r12b
   140006fcf:	mov    ecx,esi
   140006fd1:	call   0x140001bb8
   140006fd6:	test   al,al
   140006fd8:	je     0x140006fe1
   140006fda:	mov    ecx,esi
   140006fdc:	call   0x140002964
   140006fe1:	mov    rcx,QWORD PTR [rip+0x5050]        # 0x14000c038
   140006fe8:	lea    rbx,[rip+0x5049]        # 0x14000c038
   140006fef:	cmp    rcx,rbx
   140006ff2:	je     0x14000717a
   140006ff8:	test   BYTE PTR [rcx+0x1c],r12b
   140006ffc:	je     0x14000717a
   140007002:	mov    edx,0xe5
   140007007:	jmp    0x140006f13
   14000700c:	mov    edx,r12d
   14000700f:	lea    rcx,[rip+0xffffffffffffd2ba]        # 0x1400042d0
   140007016:	call   QWORD PTR [rip+0x20c4]        # 0x1400090e0
   14000701c:	test   eax,eax
   14000701e:	jne    0x140007074
   140007020:	call   QWORD PTR [rip+0x212a]        # 0x140009150
   140007026:	mov    rcx,rdi
   140007029:	mov    esi,eax
   14000702b:	call   QWORD PTR [rip+0x23df]        # 0x140009410
   140007031:	mov    r8b,r12b
   140007034:	mov    dl,r12b
   140007037:	mov    ecx,esi
   140007039:	call   0x140001bb8
   14000703e:	test   al,al
   140007040:	je     0x140007049
   140007042:	mov    ecx,esi
   140007044:	call   0x140002964
   140007049:	mov    rcx,QWORD PTR [rip+0x4fe8]        # 0x14000c038
   140007050:	lea    rbx,[rip+0x4fe1]        # 0x14000c038
   140007057:	cmp    rcx,rbx
   14000705a:	je     0x14000717a
   140007060:	test   BYTE PTR [rcx+0x1c],r12b
   140007064:	je     0x14000717a
   14000706a:	mov    edx,0xe6
   14000706f:	jmp    0x140006f13
   140007074:	mov    ecx,esi
   140007076:	call   QWORD PTR [rip+0x21b4]        # 0x140009230
   14000707c:	mov    rcx,rax
   14000707f:	call   QWORD PTR [rip+0x20fb]        # 0x140009180
   140007085:	mov    r9,QWORD PTR [rbp+0x7]
   140007089:	mov    edx,0x2
   14000708e:	mov    r8d,DWORD PTR [rbp-0x15]
   140007092:	btr    eax,0xf
   140007096:	cmp    eax,edx
   140007098:	mov    ecx,r15d
   14000709b:	movsxd rax,DWORD PTR [rbp+0x7f]
   14000709f:	cmove  ecx,edx
   1400070a2:	sub    r14d,DWORD PTR [rbp+0x7f]
   1400070a6:	mov    DWORD PTR [rsp+0x60],ecx
   1400070aa:	mov    ecx,r14d
   1400070ad:	lea    rdx,[rdi+rax*8]
   1400070b1:	mov    eax,DWORD PTR [rbp-0x11]
   1400070b4:	mov    DWORD PTR [rsp+0x58],eax
   1400070b8:	mov    rax,QWORD PTR [rbp+0xf]
   1400070bc:	mov    QWORD PTR [rsp+0x50],rax
   1400070c1:	mov    eax,DWORD PTR [rbp-0xd]
   1400070c4:	mov    DWORD PTR [rsp+0x48],eax
   1400070c8:	mov    al,BYTE PTR [rbp+0x77]
   1400070cb:	mov    BYTE PTR [rsp+0x40],al
   1400070cf:	mov    rax,QWORD PTR [rbp+0x2f]
   1400070d3:	mov    QWORD PTR [rsp+0x38],rax
   1400070d8:	mov    rax,QWORD PTR [rbp+0x1f]
   1400070dc:	mov    QWORD PTR [rsp+0x30],rax
   1400070e1:	mov    rax,QWORD PTR [rbp+0x17]
   1400070e5:	mov    QWORD PTR [rsp+0x20],rax
   1400070ea:	call   0x1400046c4
   1400070ef:	mov    rcx,rdi
   1400070f2:	call   QWORD PTR [rip+0x2318]        # 0x140009410
   1400070f8:	xor    edx,edx
   1400070fa:	xor    ecx,ecx
   1400070fc:	call   QWORD PTR [rip+0x1fde]        # 0x1400090e0
   140007102:	xor    r8d,r8d
   140007105:	mov    dl,r12b
   140007108:	xor    ecx,ecx
   14000710a:	call   0x140001bb8
   14000710f:	lea    rcx,[rip+0x5d02]        # 0x14000ce18
   140007116:	call   QWORD PTR [rip+0x21cc]        # 0x1400092e8
   14000711c:	mov    rdi,QWORD PTR [rip+0x4f15]        # 0x14000c038
   140007123:	lea    rbx,[rip+0x4f0e]        # 0x14000c038
   14000712a:	cmp    rdi,rbx
   14000712d:	je     0x14000717a
   14000712f:	test   BYTE PTR [rdi+0x1c],r12b
   140007133:	je     0x140007151
   140007135:	mov    r9d,DWORD PTR [rip+0x5d9c]        # 0x14000ced8
   14000713c:	mov    edx,0xe7
   140007141:	mov    rcx,QWORD PTR [rdi+0x10]
   140007145:	call   0x1400011ac
   14000714a:	mov    rdi,QWORD PTR [rip+0x4ee7]        # 0x14000c038
   140007151:	cmp    rdi,rbx
   140007154:	je     0x14000717a
   140007156:	jmp    0x14000716e
   140007158:	mov    rcx,QWORD PTR [rdi+0x8]
   14000715c:	test   rcx,rcx
   14000715f:	je     0x14000716b
   140007161:	call   QWORD PTR [rip+0x21c9]        # 0x140009330
   140007167:	mov    QWORD PTR [rdi+0x8],r15
   14000716b:	mov    rdi,QWORD PTR [rdi]
   14000716e:	test   rdi,rdi
   140007171:	jne    0x140007158
   140007173:	mov    QWORD PTR [rip+0x4ebe],rbx        # 0x14000c038
   14000717a:	mov    eax,DWORD PTR [rip+0x5d58]        # 0x14000ced8
   140007180:	lea    r11,[rsp+0xc0]
   140007188:	mov    rbx,QWORD PTR [r11+0x30]
   14000718c:	mov    rsi,QWORD PTR [r11+0x38]
   140007190:	mov    rsp,r11
   140007193:	pop    r15
   140007195:	pop    r14
   140007197:	pop    r12
   140007199:	pop    rdi
   14000719a:	pop    rbp
   14000719b:	ret    
   14000719c:	int3   
   14000719d:	int3   
   14000719e:	int3   
   14000719f:	int3   
   1400071a0:	int3   
   1400071a1:	int3   
   1400071a2:	int3   
   1400071a3:	int3   
   1400071a4:	int3   
   1400071a5:	int3   
   1400071a6:	int3   
   1400071a7:	int3   
   1400071a8:	int3   
   1400071a9:	int3   
   1400071aa:	int3   
   1400071ab:	int3   
   1400071ac:	int3   
   1400071ad:	int3   
   1400071ae:	int3   
   1400071af:	int3   
   1400071b0:	mov    rax,rsp
   1400071b3:	mov    QWORD PTR [rax+0x8],rbx
   1400071b7:	mov    QWORD PTR [rax+0x10],rbp
   1400071bb:	mov    QWORD PTR [rax+0x18],rsi
   1400071bf:	mov    QWORD PTR [rax+0x20],rdi
   1400071c3:	push   r15
   1400071c5:	sub    rsp,0x20
   1400071c9:	mov    rdi,r8
   1400071cc:	mov    esi,edx
   1400071ce:	mov    rbx,rcx
   1400071d1:	mov    rcx,QWORD PTR [rip+0x4e60]        # 0x14000c038
   1400071d8:	lea    r15,[rip+0x4e59]        # 0x14000c038
   1400071df:	cmp    rcx,r15
   1400071e2:	je     0x1400071f8
   1400071e4:	test   BYTE PTR [rcx+0x1c],0x1
   1400071e8:	je     0x1400071f8
   1400071ea:	mov    rcx,QWORD PTR [rcx+0x10]
   1400071ee:	mov    edx,0xe8
   1400071f3:	call   0x140001180
   1400071f8:	mov    eax,DWORD PTR [rdi]
   1400071fa:	and    sil,0x1
   1400071fe:	mov    DWORD PTR [rbx+0x10],eax
   140007201:	mov    r9d,DWORD PTR [rdi]
   140007204:	test   r9d,r9d
   140007207:	je     0x140007254
   140007209:	mov    rcx,QWORD PTR [rip+0x4e28]        # 0x14000c038
   140007210:	cmp    rcx,r15
   140007213:	je     0x140007229
   140007215:	test   BYTE PTR [rcx+0x1c],0x1
   140007219:	je     0x140007229
   14000721b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000721f:	mov    edx,0xe9
   140007224:	call   0x1400011ac
   140007229:	cmp    BYTE PTR [rbx],0x0
   14000722c:	jne    0x1400072c7
   140007232:	mov    ecx,DWORD PTR [rdi]
   140007234:	mov    r8b,0x1
   140007237:	mov    dl,r8b
   14000723a:	call   0x140001bb8
   14000723f:	test   al,al
   140007241:	je     0x1400072c7
   140007247:	mov    rdx,QWORD PTR [rdi+0x8]
   14000724b:	mov    ecx,DWORD PTR [rdi]
   14000724d:	call   0x140002b28
   140007252:	jmp    0x1400072c7
   140007254:	mov    rdi,QWORD PTR [rsp+0x60]
   140007259:	test   rdi,rdi
   14000725c:	je     0x1400072c2
   14000725e:	mov    rcx,rdi
   140007261:	call   0x1400045b8
   140007266:	test   eax,eax
   140007268:	jne    0x1400072b7
   14000726a:	call   QWORD PTR [rip+0x1ee0]        # 0x140009150
   140007270:	mov    ebp,eax
   140007272:	mov    DWORD PTR [rbx+0x10],eax
   140007275:	mov    rcx,QWORD PTR [rip+0x4dbc]        # 0x14000c038
   14000727c:	cmp    rcx,r15
   14000727f:	je     0x140007298
   140007281:	test   BYTE PTR [rcx+0x1c],0x1
   140007285:	je     0x140007298
   140007287:	mov    rcx,QWORD PTR [rcx+0x10]
   14000728b:	mov    edx,0xea
   140007290:	mov    r9d,eax
   140007293:	call   0x1400011ac
   140007298:	cmp    BYTE PTR [rbx],0x0
   14000729b:	jne    0x1400072b7
   14000729d:	mov    r8b,0x1
   1400072a0:	mov    ecx,ebp
   1400072a2:	mov    dl,r8b
   1400072a5:	call   0x140001bb8
   1400072aa:	test   al,al
   1400072ac:	je     0x1400072b7
   1400072ae:	xor    edx,edx
   1400072b0:	mov    ecx,ebp
   1400072b2:	call   0x140002b28
   1400072b7:	test   sil,sil
   1400072ba:	je     0x1400072d6
   1400072bc:	mov    eax,DWORD PTR [rdi+0x28]
   1400072bf:	mov    DWORD PTR [rbx+0x14],eax
   1400072c2:	test   sil,sil
   1400072c5:	je     0x1400072d6
   1400072c7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400072cb:	test   rcx,rcx
   1400072ce:	je     0x1400072d6
   1400072d0:	call   QWORD PTR [rip+0x1ff2]        # 0x1400092c8
   1400072d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400072e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400072e5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400072ea:	add    rsp,0x20
   1400072ee:	pop    r15
   1400072f0:	ret    
   1400072f1:	int3   
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	int3   
   1400072f5:	int3   
   1400072f6:	int3   
   1400072f7:	int3   
   1400072f8:	int3   
   1400072f9:	int3   
   1400072fa:	int3   
   1400072fb:	int3   
   1400072fc:	int3   
   1400072fd:	int3   
   1400072fe:	int3   
   1400072ff:	int3   
   140007300:	sub    rsp,0x38
   140007304:	and    DWORD PTR [rsp+0x28],0x0
   140007309:	mov    r9,QWORD PTR [rip+0x1e28]        # 0x140009138
   140007310:	mov    r8,QWORD PTR [rip+0x2c09]        # 0x140009f20
   140007317:	mov    QWORD PTR [rsp+0x20],rdx
   14000731c:	mov    rdx,rcx
   14000731f:	lea    rcx,[rip+0xffffffffffff8cda]        # 0x140000000
   140007326:	call   QWORD PTR [rip+0x1e04]        # 0x140009130
   14000732c:	add    rsp,0x38
   140007330:	ret    
   140007331:	int3   
   140007332:	int3   
   140007333:	int3   
   140007334:	int3   
   140007335:	int3   
   140007336:	int3   
   140007337:	int3   
   140007338:	int3   
   140007339:	int3   
   14000733a:	int3   
   14000733b:	int3   
   14000733c:	int3   
   14000733d:	int3   
   14000733e:	int3   
   14000733f:	int3   
   140007340:	sub    rsp,0x28
   140007344:	mov    eax,0x5a4d
   140007349:	cmp    WORD PTR [rip+0xffffffffffff8cb0],ax        # 0x140000000
   140007350:	je     0x140007356
   140007352:	xor    eax,eax
   140007354:	jmp    0x1400073a5
   140007356:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8cdf]        # 0x14000003c
   14000735d:	lea    rax,[rip+0xffffffffffff8c9c]        # 0x140000000
   140007364:	add    rcx,rax
   140007367:	cmp    DWORD PTR [rcx],0x4550
   14000736d:	jne    0x140007352
   14000736f:	movzx  eax,WORD PTR [rcx+0x18]
   140007373:	cmp    eax,0x10b
   140007378:	je     0x140007394
   14000737a:	cmp    eax,0x20b
   14000737f:	jne    0x140007352
   140007381:	xor    eax,eax
   140007383:	cmp    DWORD PTR [rcx+0x84],0xe
   14000738a:	jbe    0x1400073a5
   14000738c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007392:	jmp    0x1400073a2
   140007394:	xor    eax,eax
   140007396:	cmp    DWORD PTR [rcx+0x74],0xe
   14000739a:	jbe    0x1400073a5
   14000739c:	cmp    DWORD PTR [rcx+0xe8],eax
   1400073a2:	setne  al
   1400073a5:	mov    ecx,0x1
   1400073aa:	mov    DWORD PTR [rip+0x5480],eax        # 0x14000c830
   1400073b0:	call   0x140007848
   1400073b5:	mov    ecx,eax
   1400073b7:	call   QWORD PTR [rip+0x2003]        # 0x1400093c0
   1400073bd:	mov    rcx,QWORD PTR [rip+0x1fc4]        # 0x140009388
   1400073c4:	or     rax,0xffffffffffffffff
   1400073c8:	mov    QWORD PTR [rip+0x5b21],rax        # 0x14000cef0
   1400073cf:	mov    QWORD PTR [rip+0x5b22],rax        # 0x14000cef8
   1400073d6:	mov    eax,DWORD PTR [rip+0x5468]        # 0x14000c844
   1400073dc:	mov    DWORD PTR [rcx],eax
   1400073de:	mov    rcx,QWORD PTR [rip+0x1f9b]        # 0x140009380
   1400073e5:	mov    eax,DWORD PTR [rip+0x544d]        # 0x14000c838
   1400073eb:	mov    DWORD PTR [rcx],eax
   1400073ed:	call   0x140007a60
   1400073f2:	cmp    DWORD PTR [rip+0x4c07],0x0        # 0x14000c000
   1400073f9:	jne    0x140007408
   1400073fb:	lea    rcx,[rip+0x65e]        # 0x140007a60
   140007402:	call   QWORD PTR [rip+0x1f98]        # 0x1400093a0
   140007408:	xor    eax,eax
   14000740a:	add    rsp,0x28
   14000740e:	ret    
   14000740f:	int3   
   140007410:	int3   
   140007411:	int3   
   140007412:	int3   
   140007413:	int3   
   140007414:	int3   
   140007415:	int3   
   140007416:	int3   
   140007417:	int3   
   140007418:	int3   
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	int3   
   14000741d:	int3   
   14000741e:	int3   
   14000741f:	int3   
   140007420:	sub    rsp,0x38
   140007424:	mov    eax,DWORD PTR [rip+0x5416]        # 0x14000c840
   14000742a:	lea    r8,[rip+0x53f7]        # 0x14000c828
   140007431:	mov    r9d,DWORD PTR [rip+0x5404]        # 0x14000c83c
   140007438:	lea    rdx,[rip+0x53e1]        # 0x14000c820
   14000743f:	mov    DWORD PTR [rip+0x53ef],eax        # 0x14000c834
   140007445:	lea    rcx,[rip+0x53cc]        # 0x14000c818
   14000744c:	lea    rax,[rip+0x53e1]        # 0x14000c834
   140007453:	mov    QWORD PTR [rsp+0x20],rax
   140007458:	call   QWORD PTR [rip+0x1f6a]        # 0x1400093c8
   14000745e:	mov    DWORD PTR [rip+0x53b8],eax        # 0x14000c81c
   140007464:	add    rsp,0x38
   140007468:	ret    
   140007469:	int3   
   14000746a:	int3   
   14000746b:	int3   
   14000746c:	int3   
   14000746d:	int3   
   14000746e:	int3   
   14000746f:	int3   
   140007470:	mov    rax,rsp
   140007473:	mov    QWORD PTR [rax+0x8],rbx
   140007477:	mov    QWORD PTR [rax+0x10],rsi
   14000747b:	mov    QWORD PTR [rax+0x18],rdi
   14000747f:	mov    QWORD PTR [rax+0x20],r12
   140007483:	push   r14
   140007485:	sub    rsp,0x30
   140007489:	mov    rax,QWORD PTR gs:0x30
   140007492:	mov    rbx,QWORD PTR [rax+0x8]
   140007496:	xor    r14d,r14d
   140007499:	xor    eax,eax
   14000749b:	lock cmpxchg QWORD PTR [rip+0x5a3c],rbx        # 0x14000cee0
   1400074a4:	je     0x1400074c2
   1400074a6:	cmp    rax,rbx
   1400074a9:	jne    0x1400074b5
   1400074ab:	mov    ebx,0x1
   1400074b0:	mov    r14d,ebx
   1400074b3:	jmp    0x1400074c7
   1400074b5:	mov    ecx,0x3e8
   1400074ba:	call   QWORD PTR [rip+0x1e20]        # 0x1400092e0
   1400074c0:	jmp    0x140007499
   1400074c2:	mov    ebx,0x1
   1400074c7:	mov    eax,DWORD PTR [rip+0x5a1b]        # 0x14000cee8
   1400074cd:	cmp    eax,ebx
   1400074cf:	jne    0x1400074dd
   1400074d1:	mov    ecx,0x1f
   1400074d6:	call   0x140007894
   1400074db:	jmp    0x140007546
   1400074dd:	mov    eax,DWORD PTR [rip+0x5a05]        # 0x14000cee8
   1400074e3:	test   eax,eax
   1400074e5:	jne    0x140007540
   1400074e7:	mov    DWORD PTR [rip+0x59fb],ebx        # 0x14000cee8
   1400074ed:	lea    r12,[rip+0x1fa4]        # 0x140009498
   1400074f4:	lea    rdi,[rip+0x1f85]        # 0x140009480
   1400074fb:	mov    QWORD PTR [rsp+0x28],rdi
   140007500:	mov    DWORD PTR [rsp+0x20],eax
   140007504:	cmp    rdi,r12
   140007507:	jae    0x140007532
   140007509:	test   eax,eax
   14000750b:	jne    0x140007536
   14000750d:	mov    rsi,QWORD PTR [rdi]
   140007510:	test   rsi,rsi
   140007513:	je     0x140007527
   140007515:	mov    rcx,rsi
   140007518:	mov    rax,QWORD PTR [rip+0x1f29]        # 0x140009448
   14000751f:	call   rax
   140007521:	call   rsi
   140007523:	mov    DWORD PTR [rsp+0x20],eax
   140007527:	add    rdi,0x8
   14000752b:	mov    QWORD PTR [rsp+0x28],rdi
   140007530:	jmp    0x140007504
   140007532:	test   eax,eax
   140007534:	je     0x140007546
   140007536:	mov    eax,0xff
   14000753b:	jmp    0x140007627
   140007540:	mov    DWORD PTR [rip+0x52ce],ebx        # 0x14000c814
   140007546:	mov    eax,DWORD PTR [rip+0x599c]        # 0x14000cee8
   14000754c:	cmp    eax,ebx
   14000754e:	jne    0x14000756d
   140007550:	lea    rdx,[rip+0x1f21]        # 0x140009478
   140007557:	lea    rcx,[rip+0x1efa]        # 0x140009458
   14000755e:	call   0x140007a6a
   140007563:	mov    DWORD PTR [rip+0x597b],0x2        # 0x14000cee8
   14000756d:	test   r14d,r14d
   140007570:	jne    0x14000757b
   140007572:	xor    eax,eax
   140007574:	xchg   QWORD PTR [rip+0x5965],rax        # 0x14000cee0
   14000757b:	cmp    QWORD PTR [rip+0x597d],0x0        # 0x14000cf00
   140007583:	je     0x1400075b3
   140007585:	lea    rcx,[rip+0x5974]        # 0x14000cf00
   14000758c:	call   0x1400078f0
   140007591:	test   eax,eax
   140007593:	je     0x1400075b3
   140007595:	mov    rbx,QWORD PTR [rip+0x5964]        # 0x14000cf00
   14000759c:	mov    rcx,rbx
   14000759f:	mov    rax,QWORD PTR [rip+0x1ea2]        # 0x140009448
   1400075a6:	call   rax
   1400075a8:	xor    r8d,r8d
   1400075ab:	lea    edx,[r8+0x2]
   1400075af:	xor    ecx,ecx
   1400075b1:	call   rbx
   1400075b3:	mov    r8,QWORD PTR [rip+0x526e]        # 0x14000c828
   1400075ba:	mov    rdx,QWORD PTR [rip+0x525f]        # 0x14000c820
   1400075c1:	mov    ecx,DWORD PTR [rip+0x5251]        # 0x14000c818
   1400075c7:	call   0x140006cd0
   1400075cc:	mov    DWORD PTR [rip+0x523e],eax        # 0x14000c810
   1400075d2:	cmp    DWORD PTR [rip+0x5257],0x0        # 0x14000c830
   1400075d9:	jne    0x1400075e3
   1400075db:	mov    ecx,eax
   1400075dd:	call   QWORD PTR [rip+0x1dd5]        # 0x1400093b8
   1400075e3:	cmp    DWORD PTR [rip+0x522a],0x0        # 0x14000c814
   1400075ea:	jne    0x1400075f8
   1400075ec:	call   QWORD PTR [rip+0x1db6]        # 0x1400093a8
   1400075f2:	mov    eax,DWORD PTR [rip+0x5218]        # 0x14000c810
   1400075f8:	jmp    0x140007627
   1400075fa:	mov    DWORD PTR [rip+0x5210],eax        # 0x14000c810
   140007600:	cmp    DWORD PTR [rip+0x5229],0x0        # 0x14000c830
   140007607:	jne    0x140007612
   140007609:	mov    ecx,eax
   14000760b:	call   QWORD PTR [rip+0x1d9f]        # 0x1400093b0
   140007611:	int3   
   140007612:	cmp    DWORD PTR [rip+0x51fb],0x0        # 0x14000c814
   140007619:	jne    0x140007627
   14000761b:	call   QWORD PTR [rip+0x1d87]        # 0x1400093a8
   140007621:	mov    eax,DWORD PTR [rip+0x51e9]        # 0x14000c810
   140007627:	mov    rbx,QWORD PTR [rsp+0x40]
   14000762c:	mov    rsi,QWORD PTR [rsp+0x48]
   140007631:	mov    rdi,QWORD PTR [rsp+0x50]
   140007636:	mov    r12,QWORD PTR [rsp+0x58]
   14000763b:	add    rsp,0x30
   14000763f:	pop    r14
   140007641:	ret    
   140007642:	int3   
   140007643:	int3   
   140007644:	int3   
   140007645:	int3   
   140007646:	int3   
   140007647:	int3   
   140007648:	int3   
   140007649:	int3   
   14000764a:	int3   
   14000764b:	int3   
   14000764c:	int3   
   14000764d:	int3   
   14000764e:	int3   
   14000764f:	int3   
   140007650:	sub    rsp,0x28
   140007654:	call   0x140007984
   140007659:	add    rsp,0x28
   14000765d:	jmp    0x140007470
   140007662:	int3   
   140007663:	int3   
   140007664:	int3   
   140007665:	int3   
   140007666:	int3   
   140007667:	int3   
   140007668:	int3   
   140007669:	int3   
   14000766a:	int3   
   14000766b:	int3   
   14000766c:	int3   
   14000766d:	int3   
   14000766e:	int3   
   14000766f:	int3   
   140007670:	int3   
   140007671:	int3   
   140007672:	int3   
   140007673:	int3   
   140007674:	int3   
   140007675:	int3   
   140007676:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007680:	cmp    rcx,QWORD PTR [rip+0x4981]        # 0x14000c008
   140007687:	jne    0x140007699
   140007689:	rol    rcx,0x10
   14000768d:	test   cx,0xffff
   140007692:	jne    0x140007695
   140007694:	ret    
   140007695:	ror    rcx,0x10
   140007699:	jmp    0x140007ae0
   14000769e:	int3   
   14000769f:	int3   
   1400076a0:	int3   
   1400076a1:	int3   
   1400076a2:	int3   
   1400076a3:	int3   
   1400076a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400076a9:	push   rdi
   1400076aa:	sub    rsp,0x20
   1400076ae:	mov    rdi,rcx
   1400076b1:	mov    rax,QWORD PTR [rip+0x5840]        # 0x14000cef8
   1400076b8:	mov    QWORD PTR [rsp+0x38],rax
   1400076bd:	cmp    rax,0xffffffffffffffff
   1400076c1:	jne    0x1400076da
   1400076c3:	mov    rbx,QWORD PTR [rip+0x1d56]        # 0x140009420
   1400076ca:	mov    rcx,rbx
   1400076cd:	call   QWORD PTR [rip+0x1d75]        # 0x140009448
   1400076d3:	mov    rcx,rdi
   1400076d6:	call   rbx
   1400076d8:	jmp    0x140007737
   1400076da:	mov    ecx,0x8
   1400076df:	call   0x140007c58
   1400076e4:	nop
   1400076e5:	mov    rax,QWORD PTR [rip+0x580c]        # 0x14000cef8
   1400076ec:	mov    QWORD PTR [rsp+0x38],rax
   1400076f1:	mov    rax,QWORD PTR [rip+0x57f8]        # 0x14000cef0
   1400076f8:	mov    QWORD PTR [rsp+0x40],rax
   1400076fd:	lea    r8,[rsp+0x40]
   140007702:	lea    rdx,[rsp+0x38]
   140007707:	mov    rcx,rdi
   14000770a:	call   0x140007c70
   14000770f:	mov    rbx,rax
   140007712:	mov    rdx,QWORD PTR [rsp+0x38]
   140007717:	mov    QWORD PTR [rip+0x57da],rdx        # 0x14000cef8
   14000771e:	mov    rdx,QWORD PTR [rsp+0x40]
   140007723:	mov    QWORD PTR [rip+0x57c6],rdx        # 0x14000cef0
   14000772a:	mov    ecx,0x8
   14000772f:	call   0x140007c64
   140007734:	mov    rax,rbx
   140007737:	mov    rbx,QWORD PTR [rsp+0x30]
   14000773c:	add    rsp,0x20
   140007740:	pop    rdi
   140007741:	ret    
   140007742:	int3   
   140007743:	int3   
   140007744:	int3   
   140007745:	int3   
   140007746:	int3   
   140007747:	int3   
   140007748:	sub    rsp,0x28
   14000774c:	call   0x1400076a4
   140007751:	neg    rax
   140007754:	sbb    eax,eax
   140007756:	neg    eax
   140007758:	dec    eax
   14000775a:	add    rsp,0x28
   14000775e:	ret    
   14000775f:	int3   
   140007760:	int3   
   140007761:	int3   
   140007762:	int3   
   140007763:	int3   
   140007764:	int3   
   140007765:	int3   
   140007766:	int3   
   140007767:	int3   
   140007768:	int3   
   140007769:	int3   
   14000776a:	int3   
   14000776b:	int3   
   14000776c:	int3   
   14000776d:	int3   
   14000776e:	int3   
   14000776f:	int3   
   140007770:	jmp    QWORD PTR [rip+0x1c72]        # 0x1400093e8
   140007776:	int3   
   140007777:	int3   
   140007778:	int3   
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	sub    rsp,0x28
   140007784:	mov    rax,QWORD PTR [rcx]
   140007787:	cmp    DWORD PTR [rax],0xe06d7363
   14000778d:	jne    0x1400077b2
   14000778f:	cmp    DWORD PTR [rax+0x18],0x4
   140007793:	jne    0x1400077b2
   140007795:	mov    ecx,DWORD PTR [rax+0x20]
   140007798:	lea    eax,[rcx-0x19930520]
   14000779e:	cmp    eax,0x2
   1400077a1:	jbe    0x1400077ab
   1400077a3:	cmp    ecx,0x1994000
   1400077a9:	jne    0x1400077b2
   1400077ab:	call   QWORD PTR [rip+0x1ba7]        # 0x140009358
   1400077b1:	int3   
   1400077b2:	xor    eax,eax
   1400077b4:	add    rsp,0x28
   1400077b8:	ret    
   1400077b9:	int3   
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	int3   
   1400077bf:	int3   
   1400077c0:	sub    rsp,0x28
   1400077c4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140007780
   1400077cb:	call   QWORD PTR [rip+0x198f]        # 0x140009160
   1400077d1:	xor    eax,eax
   1400077d3:	add    rsp,0x28
   1400077d7:	ret    
   1400077d8:	int3   
   1400077d9:	int3   
   1400077da:	int3   
   1400077db:	int3   
   1400077dc:	int3   
   1400077dd:	int3   
   1400077de:	jmp    QWORD PTR [rip+0x1bf4]        # 0x1400093d8
   1400077e4:	int3   
   1400077e5:	int3   
   1400077e6:	int3   
   1400077e7:	int3   
   1400077e8:	int3   
   1400077e9:	int3   
   1400077ea:	int3   
   1400077eb:	int3   
   1400077ec:	sub    rsp,0x18
   1400077f0:	xor    edx,edx
   1400077f2:	lea    rax,[rcx-0x1]
   1400077f6:	cmp    rax,0xfffffffffffffffd
   1400077fa:	ja     0x140007838
   1400077fc:	mov    eax,0x5a4d
   140007801:	cmp    WORD PTR [rcx],ax
   140007804:	jne    0x140007830
   140007806:	cmp    DWORD PTR [rcx+0x3c],edx
   140007809:	jl     0x140007830
   14000780b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140007812:	jae    0x140007830
   140007814:	movsxd rax,DWORD PTR [rcx+0x3c]
   140007818:	add    rax,rcx
   14000781b:	mov    QWORD PTR [rsp],rax
   14000781f:	cmp    DWORD PTR [rax],0x4550
   140007825:	cmovne rax,rdx
   140007829:	mov    rdx,rax
   14000782c:	mov    QWORD PTR [rsp],rax
   140007830:	jmp    0x140007838
   140007832:	xor    edx,edx
   140007834:	mov    QWORD PTR [rsp],rdx
   140007838:	mov    rax,rdx
   14000783b:	add    rsp,0x18
   14000783f:	ret    
   140007840:	int3   
   140007841:	int3   
   140007842:	int3   
   140007843:	int3   
   140007844:	int3   
   140007845:	int3   
   140007846:	int3   
   140007847:	int3   
   140007848:	rex push rbx
   14000784a:	sub    rsp,0x20
   14000784e:	mov    ebx,ecx
   140007850:	xor    ecx,ecx
   140007852:	call   QWORD PTR [rip+0x1998]        # 0x1400091f0
   140007858:	test   rax,rax
   14000785b:	je     0x140007885
   14000785d:	mov    rcx,rax
   140007860:	call   0x1400077ec
   140007865:	test   rax,rax
   140007868:	je     0x140007885
   14000786a:	mov    ecx,0x2
   14000786f:	cmp    WORD PTR [rax+0x5c],cx
   140007873:	jne    0x140007879
   140007875:	mov    eax,ecx
   140007877:	jmp    0x140007887
   140007879:	cmp    WORD PTR [rax+0x5c],0x3
   14000787e:	mov    eax,0x1
   140007883:	je     0x140007887
   140007885:	mov    eax,ebx
   140007887:	add    rsp,0x20
   14000788b:	pop    rbx
   14000788c:	ret    
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	int3   
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	jmp    QWORD PTR [rip+0x1b36]        # 0x1400093d0
   14000789a:	int3   
   14000789b:	int3   
   14000789c:	int3   
   14000789d:	int3   
   14000789e:	int3   
   14000789f:	int3   
   1400078a0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400078a4:	xor    r9d,r9d
   1400078a7:	add    r8,rcx
   1400078aa:	mov    r10,rdx
   1400078ad:	movzx  eax,WORD PTR [r8+0x14]
   1400078b2:	movzx  r11d,WORD PTR [r8+0x6]
   1400078b7:	add    rax,0x18
   1400078bb:	add    rax,r8
   1400078be:	test   r11d,r11d
   1400078c1:	je     0x1400078e1
   1400078c3:	mov    edx,DWORD PTR [rax+0xc]
   1400078c6:	cmp    r10,rdx
   1400078c9:	jb     0x1400078d5
   1400078cb:	mov    ecx,DWORD PTR [rax+0x8]
   1400078ce:	add    ecx,edx
   1400078d0:	cmp    r10,rcx
   1400078d3:	jb     0x1400078e3
   1400078d5:	inc    r9d
   1400078d8:	add    rax,0x28
   1400078dc:	cmp    r9d,r11d
   1400078df:	jb     0x1400078c3
   1400078e1:	xor    eax,eax
   1400078e3:	ret    
   1400078e4:	int3   
   1400078e5:	int3   
   1400078e6:	int3   
   1400078e7:	int3   
   1400078e8:	int3   
   1400078e9:	int3   
   1400078ea:	int3   
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078f5:	push   rdi
   1400078f6:	sub    rsp,0x20
   1400078fa:	mov    rbx,rcx
   1400078fd:	lea    rdi,[rip+0xffffffffffff86fc]        # 0x140000000
   140007904:	mov    rcx,rdi
   140007907:	call   0x140007950
   14000790c:	test   eax,eax
   14000790e:	je     0x140007932
   140007910:	sub    rbx,rdi
   140007913:	mov    rdx,rbx
   140007916:	mov    rcx,rdi
   140007919:	call   0x1400078a0
   14000791e:	test   rax,rax
   140007921:	je     0x140007932
   140007923:	mov    eax,DWORD PTR [rax+0x24]
   140007926:	shr    eax,0x1f
   140007929:	not    eax
   14000792b:	and    eax,0x1
   14000792e:	jmp    0x140007932
   140007930:	xor    eax,eax
   140007932:	mov    rbx,QWORD PTR [rsp+0x30]
   140007937:	add    rsp,0x20
   14000793b:	pop    rdi
   14000793c:	ret    
   14000793d:	int3   
   14000793e:	int3   
   14000793f:	int3   
   140007940:	int3   
   140007941:	int3   
   140007942:	int3   
   140007943:	int3   
   140007944:	int3   
   140007945:	int3   
   140007946:	int3   
   140007947:	int3   
   140007948:	int3   
   140007949:	int3   
   14000794a:	int3   
   14000794b:	int3   
   14000794c:	int3   
   14000794d:	int3   
   14000794e:	int3   
   14000794f:	int3   
   140007950:	mov    rax,rcx
   140007953:	mov    ecx,0x5a4d
   140007958:	cmp    WORD PTR [rax],cx
   14000795b:	je     0x140007960
   14000795d:	xor    eax,eax
   14000795f:	ret    
   140007960:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007964:	add    rcx,rax
   140007967:	xor    eax,eax
   140007969:	cmp    DWORD PTR [rcx],0x4550
   14000796f:	jne    0x14000797d
   140007971:	mov    edx,0x20b
   140007976:	cmp    WORD PTR [rcx+0x18],dx
   14000797a:	sete   al
   14000797d:	ret    
   14000797e:	int3   
   14000797f:	int3   
   140007980:	int3   
   140007981:	int3   
   140007982:	int3   
   140007983:	int3   
   140007984:	mov    QWORD PTR [rsp+0x20],rbx
   140007989:	push   rbp
   14000798a:	mov    rbp,rsp
   14000798d:	sub    rsp,0x20
   140007991:	and    QWORD PTR [rbp+0x18],0x0
   140007996:	movabs rbx,0x2b992ddfa232
   1400079a0:	mov    rax,QWORD PTR [rip+0x4661]        # 0x14000c008
   1400079a7:	cmp    rax,rbx
   1400079aa:	jne    0x140007a3f
   1400079b0:	lea    rcx,[rbp+0x18]
   1400079b4:	call   QWORD PTR [rip+0x1956]        # 0x140009310
   1400079ba:	mov    rax,QWORD PTR [rbp+0x18]
   1400079be:	mov    QWORD PTR [rbp+0x10],rax
   1400079c2:	call   QWORD PTR [rip+0x1880]        # 0x140009248
   1400079c8:	mov    eax,eax
   1400079ca:	xor    QWORD PTR [rbp+0x10],rax
   1400079ce:	call   QWORD PTR [rip+0x187c]        # 0x140009250
   1400079d4:	mov    eax,eax
   1400079d6:	xor    QWORD PTR [rbp+0x10],rax
   1400079da:	call   QWORD PTR [rip+0x1928]        # 0x140009308
   1400079e0:	mov    eax,eax
   1400079e2:	shl    rax,0x18
   1400079e6:	xor    QWORD PTR [rbp+0x10],rax
   1400079ea:	call   QWORD PTR [rip+0x1918]        # 0x140009308
   1400079f0:	mov    eax,eax
   1400079f2:	lea    rcx,[rbp+0x10]
   1400079f6:	xor    rax,QWORD PTR [rbp+0x10]
   1400079fa:	xor    rax,rcx
   1400079fd:	lea    rcx,[rbp+0x20]
   140007a01:	mov    QWORD PTR [rbp+0x10],rax
   140007a05:	call   QWORD PTR [rip+0x186d]        # 0x140009278
   140007a0b:	mov    eax,DWORD PTR [rbp+0x20]
   140007a0e:	movabs rcx,0xffffffffffff
   140007a18:	shl    rax,0x20
   140007a1c:	xor    rax,QWORD PTR [rbp+0x20]
   140007a20:	xor    rax,QWORD PTR [rbp+0x10]
   140007a24:	and    rax,rcx
   140007a27:	movabs rcx,0x2b992ddfa233
   140007a31:	cmp    rax,rbx
   140007a34:	cmove  rax,rcx
   140007a38:	mov    QWORD PTR [rip+0x45c9],rax        # 0x14000c008
   140007a3f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007a44:	not    rax
   140007a47:	mov    QWORD PTR [rip+0x45c2],rax        # 0x14000c010
   140007a4e:	add    rsp,0x20
   140007a52:	pop    rbp
   140007a53:	ret    
   140007a54:	int3   
   140007a55:	int3   
   140007a56:	int3   
   140007a57:	int3   
   140007a58:	int3   
   140007a59:	int3   
   140007a5a:	int3   
   140007a5b:	int3   
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	xor    eax,eax
   140007a62:	ret    
   140007a63:	int3   
   140007a64:	int3   
   140007a65:	int3   
   140007a66:	int3   
   140007a67:	int3   
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	jmp    QWORD PTR [rip+0x1928]        # 0x140009398
   140007a70:	int3   
   140007a71:	int3   
   140007a72:	int3   
   140007a73:	int3   
   140007a74:	int3   
   140007a75:	int3   
   140007a76:	jmp    QWORD PTR [rip+0x1914]        # 0x140009390
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	int3   
   140007a81:	int3   
   140007a82:	int3   
   140007a83:	int3   
   140007a84:	int3   
   140007a85:	int3   
   140007a86:	int3   
   140007a87:	int3   
   140007a88:	int3   
   140007a89:	int3   
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	ret    0x0
   140007a93:	int3   
   140007a94:	int3   
   140007a95:	int3   
   140007a96:	int3   
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	rex push rbx
   140007a9e:	sub    rsp,0x20
   140007aa2:	mov    rbx,rcx
   140007aa5:	xor    ecx,ecx
   140007aa7:	call   QWORD PTR [rip+0x16b3]        # 0x140009160
   140007aad:	mov    rcx,rbx
   140007ab0:	call   QWORD PTR [rip+0x16a2]        # 0x140009158
   140007ab6:	call   QWORD PTR [rip+0x17ac]        # 0x140009268
   140007abc:	mov    rcx,rax
   140007abf:	mov    edx,0xc0000409
   140007ac4:	add    rsp,0x20
   140007ac8:	pop    rbx
   140007ac9:	rex.W jmp QWORD PTR [rip+0x1770]        # 0x140009240
   140007ad0:	int3   
   140007ad1:	int3   
   140007ad2:	int3   
   140007ad3:	int3   
   140007ad4:	int3   
   140007ad5:	int3   
   140007ad6:	int3   
   140007ad7:	int3   
   140007ad8:	int3   
   140007ad9:	int3   
   140007ada:	int3   
   140007adb:	int3   
   140007adc:	int3   
   140007add:	int3   
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	mov    QWORD PTR [rsp+0x8],rcx
   140007ae5:	sub    rsp,0x88
   140007aec:	lea    rcx,[rip+0x4dfd]        # 0x14000c8f0
   140007af3:	call   QWORD PTR [rip+0x178f]        # 0x140009288
   140007af9:	mov    rax,QWORD PTR [rip+0x4ee8]        # 0x14000c9e8
   140007b00:	mov    QWORD PTR [rsp+0x48],rax
   140007b05:	xor    r8d,r8d
   140007b08:	lea    rdx,[rsp+0x50]
   140007b0d:	mov    rcx,QWORD PTR [rsp+0x48]
   140007b12:	call   QWORD PTR [rip+0x1778]        # 0x140009290
   140007b18:	mov    QWORD PTR [rsp+0x40],rax
   140007b1d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007b23:	je     0x140007b67
   140007b25:	mov    QWORD PTR [rsp+0x38],0x0
   140007b2e:	lea    rax,[rsp+0x58]
   140007b33:	mov    QWORD PTR [rsp+0x30],rax
   140007b38:	lea    rax,[rsp+0x60]
   140007b3d:	mov    QWORD PTR [rsp+0x28],rax
   140007b42:	lea    rax,[rip+0x4da7]        # 0x14000c8f0
   140007b49:	mov    QWORD PTR [rsp+0x20],rax
   140007b4e:	mov    r9,QWORD PTR [rsp+0x40]
   140007b53:	mov    r8,QWORD PTR [rsp+0x48]
   140007b58:	mov    rdx,QWORD PTR [rsp+0x50]
   140007b5d:	xor    ecx,ecx
   140007b5f:	call   QWORD PTR [rip+0x1733]        # 0x140009298
   140007b65:	jmp    0x140007b8a
   140007b67:	mov    rax,QWORD PTR [rip+0x4e1a]        # 0x14000c988
   140007b6e:	mov    rax,QWORD PTR [rax]
   140007b71:	mov    QWORD PTR [rip+0x4e70],rax        # 0x14000c9e8
   140007b78:	mov    rax,QWORD PTR [rip+0x4e09]        # 0x14000c988
   140007b7f:	add    rax,0x8
   140007b83:	mov    QWORD PTR [rip+0x4dfe],rax        # 0x14000c988
   140007b8a:	mov    rax,QWORD PTR [rip+0x4e57]        # 0x14000c9e8
   140007b91:	mov    QWORD PTR [rip+0x4cc8],rax        # 0x14000c860
   140007b98:	mov    rax,QWORD PTR [rsp+0x90]
   140007ba0:	mov    QWORD PTR [rip+0x4dc9],rax        # 0x14000c970
   140007ba7:	mov    DWORD PTR [rip+0x4c9f],0xc0000409        # 0x14000c850
   140007bb1:	mov    DWORD PTR [rip+0x4c99],0x1        # 0x14000c854
   140007bbb:	mov    DWORD PTR [rip+0x4ca3],0x3        # 0x14000c868
   140007bc5:	mov    eax,0x8
   140007bca:	imul   rax,rax,0x0
   140007bce:	lea    rcx,[rip+0x4c9b]        # 0x14000c870
   140007bd5:	mov    QWORD PTR [rcx+rax*1],0x2
   140007bdd:	mov    eax,0x8
   140007be2:	imul   rax,rax,0x1
   140007be6:	lea    rcx,[rip+0x4c83]        # 0x14000c870
   140007bed:	mov    rdx,QWORD PTR [rip+0x4414]        # 0x14000c008
   140007bf4:	mov    QWORD PTR [rcx+rax*1],rdx
   140007bf8:	mov    eax,0x8
   140007bfd:	imul   rax,rax,0x2
   140007c01:	lea    rcx,[rip+0x4c68]        # 0x14000c870
   140007c08:	mov    rdx,QWORD PTR [rip+0x4401]        # 0x14000c010
   140007c0f:	mov    QWORD PTR [rcx+rax*1],rdx
   140007c13:	mov    eax,0x8
   140007c18:	imul   rax,rax,0x0
   140007c1c:	mov    rcx,QWORD PTR [rip+0x43e5]        # 0x14000c008
   140007c23:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007c28:	mov    eax,0x8
   140007c2d:	imul   rax,rax,0x1
   140007c31:	mov    rcx,QWORD PTR [rip+0x43d8]        # 0x14000c010
   140007c38:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007c3d:	lea    rcx,[rip+0x18dc]        # 0x140009520
   140007c44:	call   0x140007a9c
   140007c49:	add    rsp,0x88
   140007c50:	ret    
   140007c51:	int3   
   140007c52:	int3   
   140007c53:	int3   
   140007c54:	int3   
   140007c55:	int3   
   140007c56:	int3   
   140007c57:	int3   
   140007c58:	jmp    QWORD PTR [rip+0x171a]        # 0x140009378
   140007c5e:	int3   
   140007c5f:	int3   
   140007c60:	int3   
   140007c61:	int3   
   140007c62:	int3   
   140007c63:	int3   
   140007c64:	jmp    QWORD PTR [rip+0x1706]        # 0x140009370
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	jmp    QWORD PTR [rip+0x16f2]        # 0x140009368
   140007c76:	int3   
   140007c77:	int3   
   140007c78:	int3   
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	int3   
   140007c81:	int3   
   140007c82:	int3   
   140007c83:	int3   
   140007c84:	int3   
   140007c85:	int3   
   140007c86:	int3   
   140007c87:	int3   
   140007c88:	int3   
   140007c89:	int3   
   140007c8a:	int3   
   140007c8b:	int3   
   140007c8c:	int3   
   140007c8d:	int3   
   140007c8e:	int3   
   140007c8f:	int3   
   140007c90:	lea    rax,[rip+0x6379]        # 0x14000e010
   140007c97:	jmp    0x140007cb0
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	int3   
   140007ca1:	int3   
   140007ca2:	int3   
   140007ca3:	int3   
   140007ca4:	int3   
   140007ca5:	int3   
   140007ca6:	int3   
   140007ca7:	int3   
   140007ca8:	int3   
   140007ca9:	int3   
   140007caa:	int3   
   140007cab:	int3   
   140007cac:	int3   
   140007cad:	int3   
   140007cae:	int3   
   140007caf:	int3   
   140007cb0:	mov    QWORD PTR [rsp+0x8],rcx
   140007cb5:	mov    QWORD PTR [rsp+0x10],rdx
   140007cba:	mov    QWORD PTR [rsp+0x18],r8
   140007cbf:	mov    QWORD PTR [rsp+0x20],r9
   140007cc4:	sub    rsp,0x68
   140007cc8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007cce:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007cd4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140007cda:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007ce0:	mov    rdx,rax
   140007ce3:	lea    rcx,[rip+0x2be6]        # 0x14000a8d0
   140007cea:	call   0x140007300
   140007cef:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007cf5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140007cfb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007d01:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007d07:	mov    rcx,QWORD PTR [rsp+0x70]
   140007d0c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007d11:	mov    r8,QWORD PTR [rsp+0x80]
   140007d19:	mov    r9,QWORD PTR [rsp+0x88]
   140007d21:	add    rsp,0x68
   140007d25:	jmp    0x140007d27
   140007d27:	jmp    rax
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	int3   
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	lea    rax,[rip+0x62c9]        # 0x14000e000
   140007d37:	jmp    0x140007d50
   140007d3c:	int3   
   140007d3d:	int3   
   140007d3e:	int3   
   140007d3f:	int3   
   140007d40:	int3   
   140007d41:	int3   
   140007d42:	int3   
   140007d43:	int3   
   140007d44:	int3   
   140007d45:	int3   
   140007d46:	int3   
   140007d47:	int3   
   140007d48:	int3   
   140007d49:	int3   
   140007d4a:	int3   
   140007d4b:	int3   
   140007d4c:	int3   
   140007d4d:	int3   
   140007d4e:	int3   
   140007d4f:	int3   
   140007d50:	mov    QWORD PTR [rsp+0x8],rcx
   140007d55:	mov    QWORD PTR [rsp+0x10],rdx
   140007d5a:	mov    QWORD PTR [rsp+0x18],r8
   140007d5f:	mov    QWORD PTR [rsp+0x20],r9
   140007d64:	sub    rsp,0x68
   140007d68:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007d6e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007d74:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140007d7a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007d80:	mov    rdx,rax
   140007d83:	lea    rcx,[rip+0x2b66]        # 0x14000a8f0
   140007d8a:	call   0x140007300
   140007d8f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007d95:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140007d9b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007da1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007da7:	mov    rcx,QWORD PTR [rsp+0x70]
   140007dac:	mov    rdx,QWORD PTR [rsp+0x78]
   140007db1:	mov    r8,QWORD PTR [rsp+0x80]
   140007db9:	mov    r9,QWORD PTR [rsp+0x88]
   140007dc1:	add    rsp,0x68
   140007dc5:	jmp    0x140007dc7
   140007dc7:	jmp    rax
   140007dc9:	int3   
   140007dca:	int3   
   140007dcb:	int3   
   140007dcc:	int3   
   140007dcd:	int3   
   140007dce:	int3   
   140007dcf:	int3   
   140007dd0:	lea    rax,[rip+0x6249]        # 0x14000e020
   140007dd7:	jmp    0x140007df0
   140007ddc:	int3   
   140007ddd:	int3   
   140007dde:	int3   
   140007ddf:	int3   
   140007de0:	int3   
   140007de1:	int3   
   140007de2:	int3   
   140007de3:	int3   
   140007de4:	int3   
   140007de5:	int3   
   140007de6:	int3   
   140007de7:	int3   
   140007de8:	int3   
   140007de9:	int3   
   140007dea:	int3   
   140007deb:	int3   
   140007dec:	int3   
   140007ded:	int3   
   140007dee:	int3   
   140007def:	int3   
   140007df0:	mov    QWORD PTR [rsp+0x8],rcx
   140007df5:	mov    QWORD PTR [rsp+0x10],rdx
   140007dfa:	mov    QWORD PTR [rsp+0x18],r8
   140007dff:	mov    QWORD PTR [rsp+0x20],r9
   140007e04:	sub    rsp,0x68
   140007e08:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007e0e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007e14:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140007e1a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007e20:	mov    rdx,rax
   140007e23:	lea    rcx,[rip+0x2ae6]        # 0x14000a910
   140007e2a:	call   0x140007300
   140007e2f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007e35:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140007e3b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007e41:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007e47:	mov    rcx,QWORD PTR [rsp+0x70]
   140007e4c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007e51:	mov    r8,QWORD PTR [rsp+0x80]
   140007e59:	mov    r9,QWORD PTR [rsp+0x88]
   140007e61:	add    rsp,0x68
   140007e65:	jmp    0x140007e67
   140007e67:	jmp    rax
   140007e69:	int3   
   140007e6a:	int3   
   140007e6b:	int3   
   140007e6c:	int3   
   140007e6d:	int3   
   140007e6e:	int3   
   140007e6f:	int3   
   140007e70:	sub    rsp,0x28
   140007e74:	mov    ecx,DWORD PTR [rip+0x4f5e]        # 0x14000cdd8
   140007e7a:	cmp    ecx,0x1
   140007e7d:	jne    0x140007e83
   140007e7f:	mov    al,cl
   140007e81:	jmp    0x140007eb9
   140007e83:	cmp    ecx,0x2
   140007e86:	jne    0x140007e8c
   140007e88:	xor    al,al
   140007e8a:	jmp    0x140007eb9
   140007e8c:	lea    rdx,[rsp+0x30]
   140007e91:	mov    BYTE PTR [rsp+0x30],0x0
   140007e96:	lea    rcx,[rip+0x16fb]        # 0x140009598
   140007e9d:	call   0x140007ee0
   140007ea2:	test   eax,eax
   140007ea4:	js     0x140007e88
   140007ea6:	mov    al,BYTE PTR [rsp+0x30]
   140007eaa:	mov    cl,al
   140007eac:	neg    cl
   140007eae:	sbb    edx,edx
   140007eb0:	add    edx,0x2
   140007eb3:	mov    DWORD PTR [rip+0x4f1f],edx        # 0x14000cdd8
   140007eb9:	add    rsp,0x28
   140007ebd:	ret    
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	int3   
   140007ec1:	int3   
   140007ec2:	int3   
   140007ec3:	int3   
   140007ec4:	int3   
   140007ec5:	int3   
   140007ec6:	int3   
   140007ec7:	int3   
   140007ec8:	int3   
   140007ec9:	int3   
   140007eca:	int3   
   140007ecb:	int3   
   140007ecc:	int3   
   140007ecd:	int3   
   140007ece:	int3   
   140007ecf:	int3   
   140007ed0:	jmp    QWORD PTR [rip+0x1262]        # 0x140009138
   140007ed6:	int3   
   140007ed7:	int3   
   140007ed8:	int3   
   140007ed9:	int3   
   140007eda:	int3   
   140007edb:	int3   
   140007edc:	int3   
   140007edd:	int3   
   140007ede:	int3   
   140007edf:	int3   
   140007ee0:	jmp    QWORD PTR [rip+0x11ea]        # 0x1400090d0
   140007ee6:	int3   
   140007ee7:	int3   
   140007ee8:	int3   
   140007ee9:	int3   
   140007eea:	int3   
   140007eeb:	int3   
   140007eec:	jmp    QWORD PTR [rip+0x1536]        # 0x140009428
   140007ef2:	int3   
   140007ef3:	int3   
   140007ef4:	int3   
   140007ef5:	int3   
   140007ef6:	int3   
   140007ef7:	int3   
   140007ef8:	sub    rsp,0x28
   140007efc:	mov    r8,QWORD PTR [r9+0x38]
   140007f00:	mov    rcx,rdx
   140007f03:	mov    rdx,r9
   140007f06:	call   0x140007f1c
   140007f0b:	mov    eax,0x1
   140007f10:	add    rsp,0x28
   140007f14:	ret    
   140007f15:	int3   
   140007f16:	int3   
   140007f17:	int3   
   140007f18:	int3   
   140007f19:	int3   
   140007f1a:	int3   
   140007f1b:	int3   
   140007f1c:	rex push rbx
   140007f1e:	sub    rsp,0x20
   140007f22:	mov    r11d,DWORD PTR [r8]
   140007f25:	mov    rbx,rdx
   140007f28:	and    r11d,0xfffffff8
   140007f2c:	mov    r9,rcx
   140007f2f:	test   BYTE PTR [r8],0x4
   140007f33:	mov    r10,rcx
   140007f36:	je     0x140007f4b
   140007f38:	mov    eax,DWORD PTR [r8+0x8]
   140007f3c:	movsxd r10,DWORD PTR [r8+0x4]
   140007f40:	neg    eax
   140007f42:	add    r10,rcx
   140007f45:	movsxd rcx,eax
   140007f48:	and    r10,rcx
   140007f4b:	movsxd rax,r11d
   140007f4e:	mov    rdx,QWORD PTR [rax+r10*1]
   140007f52:	mov    rax,QWORD PTR [rbx+0x10]
   140007f56:	mov    ecx,DWORD PTR [rax+0x8]
   140007f59:	add    rcx,QWORD PTR [rbx+0x8]
   140007f5d:	test   BYTE PTR [rcx+0x3],0xf
   140007f61:	je     0x140007f6f
   140007f63:	movzx  eax,BYTE PTR [rcx+0x3]
   140007f67:	and    eax,0xfffffff0
   140007f6a:	cdqe   
   140007f6c:	add    r9,rax
   140007f6f:	xor    r9,rdx
   140007f72:	mov    rcx,r9
   140007f75:	add    rsp,0x20
   140007f79:	pop    rbx
   140007f7a:	jmp    0x140007680
   140007f7f:	int3   
   140007f80:	int3   
   140007f81:	int3   
   140007f82:	int3   
   140007f83:	int3   
   140007f84:	int3   
   140007f85:	int3   
   140007f86:	int3   
   140007f87:	int3   
   140007f88:	mov    rax,rsp
   140007f8b:	mov    QWORD PTR [rax+0x8],rbx
   140007f8f:	mov    QWORD PTR [rax+0x10],rbp
   140007f93:	mov    QWORD PTR [rax+0x18],rsi
   140007f97:	mov    QWORD PTR [rax+0x20],rdi
   140007f9b:	push   r14
   140007f9d:	sub    rsp,0x20
   140007fa1:	mov    rbx,QWORD PTR [r9+0x38]
   140007fa5:	mov    rsi,rdx
   140007fa8:	mov    r14,r8
   140007fab:	mov    rbp,rcx
   140007fae:	mov    rdx,r9
   140007fb1:	mov    rcx,rsi
   140007fb4:	mov    rdi,r9
   140007fb7:	lea    r8,[rbx+0x4]
   140007fbb:	call   0x140007f1c
   140007fc0:	mov    r11d,DWORD PTR [rbx+0x4]
   140007fc4:	mov    r8d,0x1
   140007fca:	mov    r10d,DWORD PTR [rbp+0x4]
   140007fce:	mov    eax,r11d
   140007fd1:	and    eax,r8d
   140007fd4:	and    r11d,0x2
   140007fd8:	and    r10b,0x66
   140007fdc:	cmove  r11d,eax
   140007fe0:	test   r11d,r11d
   140007fe3:	je     0x140007ff9
   140007fe5:	mov    r9,rdi
   140007fe8:	mov    r8,r14
   140007feb:	mov    rdx,rsi
   140007fee:	mov    rcx,rbp
   140007ff1:	call   0x140007eec
   140007ff6:	mov    r8d,eax
   140007ff9:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ffe:	mov    eax,r8d
   140008001:	mov    rbp,QWORD PTR [rsp+0x38]
   140008006:	mov    rsi,QWORD PTR [rsp+0x40]
   14000800b:	mov    rdi,QWORD PTR [rsp+0x48]
   140008010:	add    rsp,0x20
   140008014:	pop    r14
   140008016:	ret    
   140008017:	int3   
   140008018:	int3   
   140008019:	int3   
   14000801a:	int3   
   14000801b:	int3   
   14000801c:	int3   
   14000801d:	int3   
   14000801e:	int3   
   14000801f:	int3   
   140008020:	int3   
   140008021:	int3   
   140008022:	int3   
   140008023:	int3   
   140008024:	int3   
   140008025:	int3   
   140008026:	jmp    QWORD PTR [rip+0x1404]        # 0x140009430
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	int3   
   140008031:	int3   
   140008032:	jmp    QWORD PTR [rip+0x1400]        # 0x140009438
   140008038:	int3   
   140008039:	int3   
   14000803a:	int3   
   14000803b:	int3   
   14000803c:	int3   
   14000803d:	int3   
   14000803e:	int3   
   14000803f:	int3   
   140008040:	int3   
   140008041:	int3   
   140008042:	int3   
   140008043:	int3   
   140008044:	int3   
   140008045:	int3   
   140008046:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008050:	jmp    rax
   140008052:	int3   
   140008053:	int3   
   140008054:	int3   
   140008055:	int3   
   140008056:	int3   
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	int3   
   140008061:	int3   
   140008062:	int3   
   140008063:	int3   
   140008064:	int3   
   140008065:	int3   
   140008066:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008070:	sub    rsp,0x10
   140008074:	mov    QWORD PTR [rsp],r10
   140008078:	mov    QWORD PTR [rsp+0x8],r11
   14000807d:	xor    r11,r11
   140008080:	lea    r10,[rsp+0x18]
   140008085:	sub    r10,rax
   140008088:	cmovb  r10,r11
   14000808c:	mov    r11,QWORD PTR gs:0x10
   140008095:	cmp    r10,r11
   140008098:	jae    0x1400080af
   14000809a:	and    r10w,0xf000
   1400080a0:	lea    r11,[r11-0x1000]
   1400080a7:	test   BYTE PTR [r11],r11b
   1400080aa:	cmp    r10,r11
   1400080ad:	jne    0x1400080a0
   1400080af:	mov    r10,QWORD PTR [rsp]
   1400080b3:	mov    r11,QWORD PTR [rsp+0x8]
   1400080b8:	add    rsp,0x10
   1400080bc:	ret    
   1400080bd:	int3   
   1400080be:	int3   
   1400080bf:	int3   
   1400080c0:	int3   
   1400080c1:	int3   
   1400080c2:	int3   
   1400080c3:	int3   
   1400080c4:	int3   
   1400080c5:	int3   
   1400080c6:	lea    rcx,[rdx+0x48]
   1400080cd:	rex.W jmp QWORD PTR [rip+0xf6c]        # 0x140009040
   1400080d4:	lea    rcx,[rdx+0x40]
   1400080db:	rex.W jmp QWORD PTR [rip+0xf5e]        # 0x140009040
   1400080e2:	int3   
   1400080e3:	int3   
   1400080e4:	int3   
   1400080e5:	int3   
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	lea    rcx,[rdx+0x40]
   1400080ef:	rex.W jmp QWORD PTR [rip+0xf52]        # 0x140009048
   1400080f6:	int3   
   1400080f7:	int3   
   1400080f8:	int3   
   1400080f9:	int3   
   1400080fa:	int3   
   1400080fb:	int3   
   1400080fc:	lea    rcx,[rdx+0x48]
   140008103:	rex.W jmp QWORD PTR [rip+0xf2e]        # 0x140009038
   14000810a:	int3   
   14000810b:	int3   
   14000810c:	int3   
   14000810d:	int3   
   14000810e:	int3   
   14000810f:	int3   
   140008110:	lea    rcx,[rdx+0x68]
   140008117:	jmp    0x1400010a8
   14000811c:	lea    rcx,[rdx+0x60]
   140008123:	rex.W jmp QWORD PTR [rip+0xf26]        # 0x140009050
   14000812a:	lea    rcx,[rdx+0x1e0]
   140008131:	jmp    0x1400010d4
   140008136:	int3   
   140008137:	int3   
   140008138:	int3   
   140008139:	int3   
   14000813a:	int3   
   14000813b:	int3   
   14000813c:	rex push rbp
   14000813e:	sub    rsp,0x20
   140008142:	mov    rbp,rdx
   140008145:	mov    rax,QWORD PTR [rcx]
   140008148:	mov    rdx,rcx
   14000814b:	mov    ecx,DWORD PTR [rax]
   14000814d:	call   0x1400077de
   140008152:	nop
   140008153:	add    rsp,0x20
   140008157:	pop    rbp
   140008158:	ret    
   140008159:	int3   
   14000815a:	int3   
   14000815b:	int3   
   14000815c:	int3   
   14000815d:	int3   
   14000815e:	int3   
   14000815f:	int3   
   140008160:	rex push rbp
   140008162:	sub    rsp,0x20
   140008166:	mov    rbp,rdx
   140008169:	mov    ecx,0x8
   14000816e:	call   0x140007c64
   140008173:	nop
   140008174:	add    rsp,0x20
   140008178:	pop    rbp
   140008179:	ret    
   14000817a:	int3   
   14000817b:	int3   
   14000817c:	int3   
   14000817d:	int3   
   14000817e:	int3   
   14000817f:	int3   
   140008180:	int3   
   140008181:	int3   
   140008182:	int3   
   140008183:	int3   
   140008184:	int3   
   140008185:	int3   
   140008186:	int3   
   140008187:	int3   
   140008188:	int3   
   140008189:	int3   
   14000818a:	int3   
   14000818b:	int3   
   14000818c:	int3   
   14000818d:	int3   
   14000818e:	int3   
   14000818f:	int3   
   140008190:	rex push rbp
   140008192:	sub    rsp,0x20
   140008196:	mov    rbp,rdx
   140008199:	mov    rax,QWORD PTR [rcx]
   14000819c:	xor    ecx,ecx
   14000819e:	cmp    DWORD PTR [rax],0xc0000005
   1400081a4:	sete   cl
   1400081a7:	mov    eax,ecx
   1400081a9:	add    rsp,0x20
   1400081ad:	pop    rbp
   1400081ae:	ret    
   1400081af:	int3   
   1400081b0:	int3   
   1400081b1:	int3   
   1400081b2:	int3   
   1400081b3:	int3   
   1400081b4:	int3   
   1400081b5:	int3   
   1400081b6:	int3   
   1400081b7:	int3   
   1400081b8:	int3   
   1400081b9:	int3   
   1400081ba:	int3   
   1400081bb:	int3   
   1400081bc:	int3   
   1400081bd:	int3   
   1400081be:	int3   
   1400081bf:	int3   
   1400081c0:	sub    rsp,0x28
   1400081c4:	mov    rcx,QWORD PTR [rip+0x4cbd]        # 0x14000ce88
   1400081cb:	test   rcx,rcx
   1400081ce:	je     0x1400081de
   1400081d0:	call   QWORD PTR [rip+0xfba]        # 0x140009190
   1400081d6:	and    QWORD PTR [rip+0x4caa],0x0        # 0x14000ce88
   1400081de:	add    rsp,0x28
   1400081e2:	ret    
   1400081e3:	int3   
   1400081e4:	int3   
   1400081e5:	int3   
   1400081e6:	int3   
   1400081e7:	int3   
   1400081e8:	int3   
   1400081e9:	int3   
   1400081ea:	int3   
   1400081eb:	int3   
   1400081ec:	int3   
   1400081ed:	int3   
   1400081ee:	int3   
   1400081ef:	int3   
   1400081f0:	sub    rsp,0x28
   1400081f4:	cmp    QWORD PTR [rip+0x45f4],0x0        # 0x14000c7f0
   1400081fc:	je     0x14000822d
   1400081fe:	call   QWORD PTR [rip+0xfa4]        # 0x1400091a8
   140008204:	mov    rcx,QWORD PTR [rip+0x45e5]        # 0x14000c7f0
   14000820b:	cmp    rcx,rax
   14000820e:	je     0x14000822d
   140008210:	call   QWORD PTR [rip+0xf9a]        # 0x1400091b0
   140008216:	test   eax,eax
   140008218:	je     0x140008227
   14000821a:	and    QWORD PTR [rip+0x45ce],0x0        # 0x14000c7f0
   140008222:	add    rsp,0x28
   140008226:	ret    
   140008227:	call   QWORD PTR [rip+0xf23]        # 0x140009150
   14000822d:	add    rsp,0x28
   140008231:	ret    

Disassembly of section .rdata:

0000000140009000 <.rdata>:
   140009000:	push   0xb9
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    BYTE PTR [rax+0xb9],dh
   14000900d:	add    BYTE PTR [rax],al
   14000900f:	add    BYTE PTR [rdx],ah
   140009011:	mov    ecx,0x0
   140009016:	add    BYTE PTR [rax],al
   140009018:	xor    al,0xb9
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	movabs rcx,0xb9c4000000000000
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	add    BYTE PTR [rax],al
   14000902e:	add    BYTE PTR [rax],al
   140009030:	fidivr WORD PTR [rbx+0x0]
   140009036:	add    BYTE PTR [rax],al
   140009038:	mov    edx,0xbb
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rsi+0xbb],dl
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rbx+rdi*4+0x0],bh
   14000904b:	add    BYTE PTR [rax],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rsi-0x45],dl
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	cs mov ebx,0x0
   14000905e:	add    BYTE PTR [rax],al
   140009060:	(bad)  
   140009061:	mov    ebx,0x0
   140009066:	add    BYTE PTR [rax],al
   140009068:	loopne 0x140009024
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	scas   al,BYTE PTR es:[rdi]
   140009071:	mov    edx,0x0
   140009076:	add    BYTE PTR [rax],al
   140009078:	xchg   esp,eax
   140009079:	mov    edx,0x0
   14000907e:	add    BYTE PTR [rax],al
   140009080:	cmp    BYTE PTR [rdx+0x0],0x0
   140009087:	add    BYTE PTR [rdx+rdi*4+0x0],bl
   14000908b:	add    BYTE PTR [rax],al
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rsi-0x46],al
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	xor    BYTE PTR [rdx+0x0],bh
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	(bad)  
   1400090a1:	mov    edx,0x0
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	(bad)  
   1400090a9:	mov    edx,0x0
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	repnz mov ecx,0x0
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	fidivr DWORD PTR [rcx+0x0]
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	pushf  
   1400090c1:	mov    ecx,0x0
	...
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	ins    BYTE PTR es:[rdi],dx
   1400090d1:	mov    esp,0x0
	...
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	mov    esi,0xb4
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rbx+rsi*4+0x0],ch
   1400090eb:	add    BYTE PTR [rax],al
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    ah,bl
   1400090f1:	mov    dl,0x0
   1400090f3:	add    BYTE PTR [rax],al
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    al,ah
   1400090f9:	mov    bl,0x0
   1400090fb:	add    BYTE PTR [rax],al
   1400090fd:	add    BYTE PTR [rax],al
   1400090ff:	add    ah,bh
   140009101:	mov    bl,0x0
   140009103:	add    BYTE PTR [rax],al
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    dh,cl
   140009109:	mov    bl,0x0
   14000910b:	add    BYTE PTR [rax],al
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rsi-0x4d],al
	...
   14000911e:	add    BYTE PTR [rax],al
   140009120:	xchg   BYTE PTR [rdx+0x0],dh
	...
   14000912e:	add    BYTE PTR [rax],al
   140009130:	(bad)  
   140009131:	mov    esp,0x0
   140009136:	add    BYTE PTR [rax],al
   140009138:	cs mov esp,0x0
	...
   140009146:	add    BYTE PTR [rax],al
   140009148:	push   rdx
   140009149:	mov    ah,0x0
   14000914b:	add    BYTE PTR [rax],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rdx-0x4c],al
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	push   rsp
   140009159:	mov    dh,0x0
   14000915b:	add    BYTE PTR [rax],al
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rbp+rsi*4+0x0],al
	...
   14000916e:	add    BYTE PTR [rax],al
   140009170:	in     al,dx
   140009171:	mov    dl,0x0
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    al,dh
   140009179:	mov    bl,0x0
   14000917b:	add    BYTE PTR [rax],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rax+0xb4],dh
	...
   14000918d:	add    BYTE PTR [rax],al
   14000918f:	add    BYTE PTR [rsi*4+0x0],bh
   140009196:	add    BYTE PTR [rax],al
   140009198:	sub    dh,BYTE PTR [rbp+0x0]
	...
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	mov    esp,0xb2
   1400091ad:	add    BYTE PTR [rax],al
   1400091af:	add    BYTE PTR [rax+0xb3],dl
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    dh,ah
   1400091b9:	mov    ah,0x0
	...
   1400091c7:	add    BYTE PTR [rax-0x4b],ah
	...
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	mov    dh,BYTE PTR [rax+rax*1+0x0]
	...
   1400091e7:	add    dh,cl
   1400091e9:	mov    dl,0x0
   1400091eb:	add    BYTE PTR [rax],al
   1400091ed:	add    BYTE PTR [rax],al
   1400091ef:	add    BYTE PTR [rax+0xb2],ch
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    BYTE PTR [rdx-0x4e],cl
	...
   140009206:	add    BYTE PTR [rax],al
   140009208:	and    dh,BYTE PTR [rax+rax*1+0x0]
   14000920f:	add    BYTE PTR [rsi-0x4d],bh
	...
   14000921e:	add    BYTE PTR [rax],al
   140009220:	sub    BYTE PTR [rdx+0x0],dh
   140009226:	add    BYTE PTR [rax],al
   140009228:	(bad)  
   140009229:	mov    ah,0x0
   14000922b:	add    BYTE PTR [rax],al
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	add    BYTE PTR [rdx],dl
   140009231:	mov    ah,0x0
	...
   14000923f:	add    BYTE PTR [rax-0x4a],dh
   140009242:	add    BYTE PTR [rax],al
   140009244:	add    BYTE PTR [rax],al
   140009246:	add    BYTE PTR [rax],al
   140009248:	mov    esp,0xb5
   14000924d:	add    BYTE PTR [rax],al
   14000924f:	add    dl,dl
   140009251:	mov    ch,0x0
   140009253:	add    BYTE PTR [rax],al
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rdx],bl
   140009259:	mov    dl,0x0
   14000925b:	add    BYTE PTR [rax],al
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    BYTE PTR [rbp+rsi*4+0x0],ch
   140009263:	add    BYTE PTR [rax],al
   140009265:	add    BYTE PTR [rax],al
   140009267:	add    BYTE PTR [rdx+rsi*4+0x0],bl
	...
   140009277:	add    BYTE PTR [rdx+0xb5],ah
	...
   140009285:	add    BYTE PTR [rax],al
   140009287:	add    BYTE PTR [rdx],dl
   140009289:	mov    dh,0x0
   14000928b:	add    BYTE PTR [rax],al
   14000928d:	add    BYTE PTR [rax],al
   14000928f:	add    BYTE PTR [rsi],ah
   140009291:	mov    dh,0x0
   140009293:	add    BYTE PTR [rax],al
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rax-0x4a],al
	...
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	push   rsi
   1400092a9:	mov    bl,0x0
	...
   1400092b7:	add    BYTE PTR [rdx],ch
   1400092b9:	mov    bl,0x0
   1400092bb:	add    BYTE PTR [rax],al
   1400092bd:	add    BYTE PTR [rax],al
   1400092bf:	add    BYTE PTR [rsi],cl
   1400092c1:	mov    bl,0x0
   1400092c3:	add    BYTE PTR [rax],al
   1400092c5:	add    BYTE PTR [rax],al
   1400092c7:	add    BYTE PTR [rdx+rsi*4+0x0],bl
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	jo     0x140009284
   1400092d2:	add    BYTE PTR [rax],al
   1400092d4:	add    BYTE PTR [rax],al
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	(bad)  
   1400092d9:	mov    ah,0x0
   1400092db:	add    BYTE PTR [rax],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    BYTE PTR [rbp+rsi*4+0x0],bh
   1400092e3:	add    BYTE PTR [rax],al
   1400092e5:	add    BYTE PTR [rax],al
   1400092e7:	add    BYTE PTR [rdx],dl
   1400092e9:	mov    ch,0x0
   1400092eb:	add    BYTE PTR [rax],al
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rsi+0xb3],bl
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    BYTE PTR [rdx-0x4c],dh
	...
   140009306:	add    BYTE PTR [rax],al
   140009308:	add    dh,BYTE PTR [rsi+0x0]
   14000930e:	add    BYTE PTR [rax],al
   140009310:	call   0x1400093ca
	...
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    ah,bh
   140009321:	mov    ah,0x0
   140009323:	add    BYTE PTR [rax],al
   140009325:	add    BYTE PTR [rax],al
   140009327:	add    al,bh
   140009329:	mov    dl,0x0
   14000932b:	add    BYTE PTR [rax],al
   14000932d:	add    BYTE PTR [rax],al
   14000932f:	add    BYTE PTR [rax+0xb4],bl
   140009335:	add    BYTE PTR [rax],al
   140009337:	add    BYTE PTR [rdx],bh
   140009339:	mov    dl,0x0
   14000933b:	add    BYTE PTR [rax],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rdx-0x4b],cl
   140009342:	add    BYTE PTR [rax],al
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	mov    dh,0xb3
	...
   140009356:	add    BYTE PTR [rax],al
   140009358:	(bad)  
   140009359:	mov    dl,0x0
   14000935b:	add    BYTE PTR [rax],al
   14000935d:	add    BYTE PTR [rax],al
   14000935f:	add    al,al
   140009361:	mov    al,0x0
   140009363:	add    BYTE PTR [rax],al
   140009365:	add    BYTE PTR [rax],al
   140009367:	add    dh,ch
   140009369:	mov    cl,0x0
   14000936b:	add    BYTE PTR [rax],al
   14000936d:	add    BYTE PTR [rax],al
   14000936f:	add    ah,ah
   140009371:	mov    cl,0x0
   140009373:	add    BYTE PTR [rax],al
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    ah,bl
   140009379:	mov    cl,0x0
   14000937b:	add    BYTE PTR [rax],al
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    ah,al
   140009381:	mov    cl,0x0
   140009383:	add    BYTE PTR [rax],al
   140009385:	add    BYTE PTR [rax],al
   140009387:	add    BYTE PTR [rdx+0xb1],bh
   14000938d:	add    BYTE PTR [rax],al
   14000938f:	add    BYTE PTR [rdx+0xb1],ah
   140009395:	add    BYTE PTR [rax],al
   140009397:	add    BYTE PTR [rsi+0xb1],dl
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rdx+0xb1],al
   1400093a5:	add    BYTE PTR [rax],al
   1400093a7:	add    BYTE PTR [rax-0x4f],bh
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	add    BYTE PTR [rax],al
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	jo     0x140009363
   1400093b2:	add    BYTE PTR [rax],al
   1400093b4:	add    BYTE PTR [rax],al
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	push   0xb1
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rsi-0x4f],dl
   1400093c2:	add    BYTE PTR [rax],al
   1400093c4:	add    BYTE PTR [rax],al
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	rex.R mov cl,0x0
   1400093cb:	add    BYTE PTR [rax],al
   1400093cd:	add    BYTE PTR [rax],al
   1400093cf:	add    BYTE PTR [rsi],dh
   1400093d1:	mov    cl,0x0
   1400093d3:	add    BYTE PTR [rax],al
   1400093d5:	add    BYTE PTR [rax],al
   1400093d7:	add    BYTE PTR [rax],ch
   1400093d9:	mov    cl,0x0
   1400093db:	add    BYTE PTR [rax],al
   1400093dd:	add    BYTE PTR [rax],al
   1400093df:	add    BYTE PTR [rdx],bl
   1400093e1:	mov    cl,0x0
   1400093e3:	add    BYTE PTR [rax],al
   1400093e5:	add    BYTE PTR [rax],al
   1400093e7:	add    BYTE PTR [rsi],cl
   1400093e9:	mov    cl,0x0
   1400093eb:	add    BYTE PTR [rax],al
   1400093ed:	add    BYTE PTR [rax],al
   1400093ef:	add    BYTE PTR [rcx+rsi*4],al
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	div    BYTE PTR [rax+0x0]
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	in     al,dx
   140009401:	mov    al,0x0
   140009403:	add    BYTE PTR [rax],al
   140009405:	add    BYTE PTR [rax],al
   140009407:	add    al,ah
   140009409:	mov    al,0x0
   14000940b:	add    BYTE PTR [rax],al
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    al,bl
   140009411:	mov    al,0x0
   140009413:	add    BYTE PTR [rax],al
   140009415:	add    BYTE PTR [rax],al
   140009417:	add    ah,cl
   140009419:	mov    al,0x0
   14000941b:	add    BYTE PTR [rax],al
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    ah,bh
   140009421:	mov    cl,0x0
   140009423:	add    BYTE PTR [rax],al
   140009425:	add    BYTE PTR [rax],al
   140009427:	add    BYTE PTR [rsp+rdi*4+0x0],ch
   14000942e:	add    BYTE PTR [rax],al
   140009430:	ret    0xbc
   140009433:	add    BYTE PTR [rax],al
   140009435:	add    BYTE PTR [rax],al
   140009437:	add    ah,cl
   140009439:	mov    esp,0x0
	...
   140009446:	add    BYTE PTR [rax],al
   140009448:	nop
   140009449:	jp     0x14000944b
   14000944b:	rex add DWORD PTR [rax],eax
   14000944e:	add    BYTE PTR [rax],al
   140009450:	push   rax
   140009451:	add    BYTE PTR [rax],0x40
   140009454:	add    DWORD PTR [rax],eax
	...
   14000945e:	add    BYTE PTR [rax],al
   140009460:	and    BYTE PTR [rax+rax*1+0x40],dh
   140009464:	add    DWORD PTR [rax],eax
   140009466:	add    BYTE PTR [rax],al
   140009468:	add    BYTE PTR [rax],dl
   14000946a:	add    BYTE PTR [rax+0x1],al
   14000946d:	add    BYTE PTR [rax],al
   14000946f:	add    BYTE PTR [rax],dl
   140009471:	adc    BYTE PTR [rax],al
   140009473:	rex add DWORD PTR [rax],eax
	...
   140009486:	add    BYTE PTR [rax],al
   140009488:	rex jae 0x14000948b
   14000948b:	rex add DWORD PTR [rax],eax
   14000948e:	add    BYTE PTR [rax],al
   140009490:	shl    BYTE PTR [rdi+0x0],0x40
   140009494:	add    DWORD PTR [rax],eax
	...
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	add    BYTE PTR [rax],dl
   1400094a2:	add    BYTE PTR [rax],al
   1400094a4:	adc    BYTE PTR [rax],dl
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	and    BYTE PTR [rcx],dl
   1400094aa:	add    BYTE PTR [rax],al
   1400094ac:	push   rax
   1400094ad:	adc    eax,DWORD PTR [rax]
   1400094af:	add    al,ah
   1400094b1:	adc    eax,DWORD PTR [rax]
   1400094b3:	add    al,dh
   1400094b5:	adc    eax,DWORD PTR [rax]
   1400094b7:	add    BYTE PTR [rax+0x2c],al
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	jo     0x1400094eb
   1400094be:	add    BYTE PTR [rax],al
   1400094c0:	xor    BYTE PTR [rax],0x0
   1400094c3:	add    al,dl
   1400094c5:	rex.X add BYTE PTR [rax],al
   1400094c8:	mov    al,0x71
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	add    BYTE PTR [rbx+0x0],dh
   1400094cf:	add    BYTE PTR [rax+0x73],al
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	and    BYTE PTR [rax+rax*1+0x0],dh
   1400094d8:	push   rax
   1400094d9:	jbe    0x1400094db
   1400094db:	add    BYTE PTR [rax+0x77],dh
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	xor    BYTE PTR [rdi+0x0],0x0
   1400094e4:	shl    BYTE PTR [rdi+0x0],0x0
   1400094e8:	(bad)  
   1400094e9:	jp     0x1400094eb
   1400094eb:	add    BYTE PTR [rax-0x1fffff86],dl
   1400094f1:	jp     0x1400094f3
   1400094f3:	add    BYTE PTR [rax-0x4fffff84],dl
   1400094f9:	jl     0x1400094fb
   1400094fb:	add    BYTE PTR [rax],dh
   1400094fd:	jge    0x1400094ff
   1400094ff:	add    BYTE PTR [rax+0x7d],dl
   140009502:	add    BYTE PTR [rax],al
   140009504:	sar    BYTE PTR [rbp+0x0],1
   140009507:	add    al,dh
   140009509:	jge    0x14000950b
   14000950b:	add    al,dl
   14000950d:	jle    0x14000950f
   14000950f:	add    al,ah
   140009511:	jle    0x140009513
   140009513:	add    al,al
   140009515:	add    DWORD PTR [rax],0x81f000
   14000951b:	add    BYTE PTR [rax],al
   14000951d:	add    BYTE PTR [rax],al
   14000951f:	add    BYTE PTR [rax-0x38],dl
   140009522:	add    BYTE PTR [rax+0x1],al
   140009525:	add    BYTE PTR [rax],al
   140009527:	add    al,dh
   140009529:	enter  0x4000,0x1
   14000952d:	add    BYTE PTR [rax],al
   14000952f:	add    BYTE PTR [rcx+0x70],ah
   140009532:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e08a9
   14000953c:	outs   dx,DWORD PTR ds:[rsi]
   14000953d:	jb     0x1400095a4
   14000953f:	sub    eax,0x2d6d6f63
   140009544:	ins    BYTE PTR es:[rdi],dx
   140009545:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c27c
   14000954b:	fs ins BYTE PTR es:[rdi],dx
   14000954d:	ins    BYTE PTR es:[rdi],dx
   14000954e:	add    BYTE PTR [rax],al
   140009550:	(bad)  
   140009551:	jo     0x1400095bc
   140009553:	sub    eax,0x772d736d
   140009558:	imul   ebp,DWORD PTR [rsi+0x2d],0x65736162
   14000955f:	sub    eax,0x6c697475
   140009564:	sub    eax,0x312d316c
   140009569:	sub    eax,0x6c642e30
   14000956e:	ins    BYTE PTR es:[rdi],dx
   14000956f:	add    BYTE PTR [rbp+0x78],ah
   140009572:	je     0x1400095a1
   140009574:	ins    DWORD PTR es:[rdi],dx
   140009575:	jae    0x1400095a4
   140009577:	ja     0x1400095e2
   140009579:	outs   dx,BYTE PTR ds:[rsi]
   14000957a:	sub    eax,0x75636573
   14000957f:	jb     0x1400095ea
   140009581:	je     0x1400095fc
   140009583:	sub    eax,0x64657263
   140009588:	jne    0x1400095f3
   14000958a:	sub    eax,0x312d316c
   14000958f:	sub    eax,0x6c642e30
   140009594:	ins    BYTE PTR es:[rdi],dx
   140009595:	add    BYTE PTR [rax],al
   140009597:	add    BYTE PTR [rdx+0x0],al
   14000959a:	add    BYTE PTR [rax],r8b
   14000959d:	add    BYTE PTR [rax],al
   14000959f:	add    BYTE PTR [rax],dl
   1400095a1:	xchg   esi,eax
   1400095a2:	add    BYTE PTR [rax+0x1],al
   1400095a5:	add    BYTE PTR [rax],al
   1400095a7:	add    BYTE PTR [rdi],ch
   1400095a9:	ret    
   1400095aa:	mov    edi,0x3810f628
   1400095af:	rex.RXB cwde 
   1400095b1:	rcr    DWORD PTR [rdx],1
   1400095b3:	shl    BYTE PTR [rcx-0x21],0x71
   1400095b7:	push   0xffffffffffffffad
   1400095b9:	imul   ebx,DWORD PTR [rdi+0x23],0x4dbc73fb
   1400095c0:	(bad)  
   1400095c1:	add    eax,DWORD PTR [rsi]
   1400095c3:	sub    edi,esp
   1400095c5:	cmp    DWORD PTR [rbx],esi
   1400095c7:	fwait
   1400095c8:	jns    0x140009642
   1400095ca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400095cb:	adc    BYTE PTR [rdi-0x42b47aa2],bh
   1400095d1:	(bad)  
   1400095d2:	ret    0xb41b
   1400095d5:	hlt    
   1400095d6:	pushf  
   1400095d7:	mov    bh,BYTE PTR [rcx-0x68]
   1400095da:	std    
   1400095db:	push   0x4dfe079c
   1400095e0:	(bad)  
   1400095e1:	adc    DWORD PTR [rdi-0x76],0xc1c1ad
   1400095e8:	fst    DWORD PTR [rbx-0x2694c3c2]
   1400095ee:	mov    ch,0x49
   1400095f0:	xchg   esp,eax
   1400095f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400095f2:	test   DWORD PTR [r10+0x6f378308],r10d
   1400095f9:	(bad)  
   1400095fa:	inc    edx
   1400095fc:	cmp    eax,0xa94c3d50
   140009601:	pop    rsi
   140009602:	mov    esp,0x3d2121e8
   140009607:	add    BYTE PTR [rax],r8b
   14000960a:	add    BYTE PTR [rax],al
   14000960c:	add    BYTE PTR [rax],al
   14000960e:	add    BYTE PTR [rax],al
   140009610:	add    BYTE PTR gs:[rax+0x0],bh
   140009614:	je     0x140009616
   140009616:	sub    eax,0x73006d00
   14000961b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9010d21
   140009621:	add    BYTE PTR [rsi+0x0],ch
   140009624:	sub    eax,0x65007300
   140009629:	add    BYTE PTR [rbx+0x0],ah
   14000962c:	jne    0x14000962e
   14000962e:	jb     0x140009630
   140009630:	imul   eax,DWORD PTR [rax],0x790074
   140009636:	sub    eax,0x72006300
   14000963b:	add    BYTE PTR [rbp+0x0],ah
   14000963e:	add    BYTE PTR fs:[rbp+0x0],dh
   140009642:	imul   eax,DWORD PTR [rax],0x6c002d
   140009648:	xor    DWORD PTR [rax],eax
   14000964a:	sub    eax,0x2d003100
   14000964f:	add    BYTE PTR [rax],dh
   140009651:	add    BYTE PTR [rax],al
   140009653:	add    BYTE PTR [rdi],ch
   140009655:	add    BYTE PTR [rax],al
   140009657:	add    BYTE PTR [rsi+0x55],cl
   14000965a:	rex.WR
   14000965b:	rex.WR add BYTE PTR [rax],r8b
   14000965e:	add    BYTE PTR [rax],al
   140009660:	sub    eax,0x6e006500
   140009665:	add    BYTE PTR [rsi+0x0],dh
   140009668:	imul   eax,DWORD PTR [rax],0x6f0072
   14000966e:	outs   dx,BYTE PTR ds:[rsi]
   14000966f:	add    BYTE PTR [rbp+0x0],ch
   140009672:	add    BYTE PTR gs:[rsi+0x0],ch
   140009676:	je     0x140009678
   140009678:	cmp    al,BYTE PTR [rax]
   14000967a:	add    BYTE PTR [rax],al
   14000967c:	add    BYTE PTR [rax],al
   14000967e:	add    BYTE PTR [rax],al
   140009680:	(bad)  
   140009681:	add    BYTE PTR [rbp+0x0],ah
   140009684:	outs   dx,BYTE PTR ds:[rsi]
   140009685:	add    BYTE PTR [rsi+0x0],dh
   140009688:	imul   eax,DWORD PTR [rax],0x6f0072
   14000968e:	outs   dx,BYTE PTR ds:[rsi]
   14000968f:	add    BYTE PTR [rbp+0x0],ch
   140009692:	add    BYTE PTR gs:[rsi+0x0],ch
   140009696:	je     0x140009698
   140009698:	cmp    al,BYTE PTR [rax]
   14000969a:	add    BYTE PTR [rax],al
   14000969c:	add    BYTE PTR [rax],al
   14000969e:	add    BYTE PTR [rax],al
   1400096a0:	sub    eax,0x6e006500
   1400096a5:	add    BYTE PTR [rsi+0x0],dh
   1400096a8:	imul   eax,DWORD PTR [rax],0x6f0072
   1400096ae:	outs   dx,BYTE PTR ds:[rsi]
   1400096af:	add    BYTE PTR [rbp+0x0],ch
   1400096b2:	add    BYTE PTR gs:[rsi+0x0],ch
   1400096b6:	je     0x1400096b8
	...
   1400096c0:	(bad)  
   1400096c1:	add    BYTE PTR [rbp+0x0],ah
   1400096c4:	outs   dx,BYTE PTR ds:[rsi]
   1400096c5:	add    BYTE PTR [rsi+0x0],dh
   1400096c8:	imul   eax,DWORD PTR [rax],0x6f0072
   1400096ce:	outs   dx,BYTE PTR ds:[rsi]
   1400096cf:	add    BYTE PTR [rbp+0x0],ch
   1400096d2:	add    BYTE PTR gs:[rsi+0x0],ch
   1400096d6:	je     0x1400096d8
	...
   1400096e0:	sub    eax,0x6e007500
   1400096e5:	add    BYTE PTR [rbp+0x0],ah
   1400096e8:	outs   dx,BYTE PTR ds:[rsi]
   1400096e9:	add    BYTE PTR [rbx+0x0],ah
   1400096ec:	jb     0x1400096ee
   1400096ee:	jns    0x1400096f0
   1400096f0:	jo     0x1400096f2
   1400096f2:	je     0x1400096f4
   1400096f4:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400096f9:	add    BYTE PTR [rax],al
   1400096fb:	add    BYTE PTR [rax],al
   1400096fd:	add    BYTE PTR [rax],al
   1400096ff:	add    BYTE PTR [rdi],ch
   140009701:	add    BYTE PTR [rbp+0x0],dh
   140009704:	outs   dx,BYTE PTR ds:[rsi]
   140009705:	add    BYTE PTR [rbp+0x0],ah
   140009708:	outs   dx,BYTE PTR ds:[rsi]
   140009709:	add    BYTE PTR [rbx+0x0],ah
   14000970c:	jb     0x14000970e
   14000970e:	jns    0x140009710
   140009710:	jo     0x140009712
   140009712:	je     0x140009714
   140009714:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140009719:	add    BYTE PTR [rax],al
   14000971b:	add    BYTE PTR [rax],al
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    BYTE PTR [rip+0x69006400],ch        # 0x1a900fb25
   140009725:	add    BYTE PTR [rdx+0x0],dh
   140009728:	add    BYTE PTR gs:[rbx+0x0],ah
   14000972c:	je     0x14000972e
   14000972e:	outs   dx,DWORD PTR ds:[rsi]
   14000972f:	add    BYTE PTR [rdx+0x0],dh
   140009732:	jns    0x140009734
   140009734:	cmp    al,BYTE PTR [rax]
   140009736:	add    BYTE PTR [rax],al
   140009738:	sub    eax,0x69006400
   14000973d:	add    BYTE PTR [rdx+0x0],dh
   140009740:	add    BYTE PTR gs:[rbx+0x0],ah
   140009744:	je     0x140009746
   140009746:	outs   dx,DWORD PTR ds:[rsi]
   140009747:	add    BYTE PTR [rdx+0x0],dh
   14000974a:	jns    0x14000974c
   14000974c:	add    BYTE PTR [rax],al
   14000974e:	add    BYTE PTR [rax],al
   140009750:	(bad)  
   140009751:	add    BYTE PTR [rax+rax*1+0x69],ah
   140009755:	add    BYTE PTR [rdx+0x0],dh
   140009758:	add    BYTE PTR gs:[rbx+0x0],ah
   14000975c:	je     0x14000975e
   14000975e:	outs   dx,DWORD PTR ds:[rsi]
   14000975f:	add    BYTE PTR [rdx+0x0],dh
   140009762:	jns    0x140009764
   140009764:	cmp    al,BYTE PTR [rax]
   140009766:	add    BYTE PTR [rax],al
   140009768:	(bad)  
   140009769:	add    BYTE PTR [rax+rax*1+0x69],ah
   14000976d:	add    BYTE PTR [rdx+0x0],dh
   140009770:	add    BYTE PTR gs:[rbx+0x0],ah
   140009774:	je     0x140009776
   140009776:	outs   dx,DWORD PTR ds:[rsi]
   140009777:	add    BYTE PTR [rdx+0x0],dh
   14000977a:	jns    0x14000977c
   14000977c:	add    BYTE PTR [rax],al
   14000977e:	add    BYTE PTR [rax],al
   140009780:	sub    eax,0x61007000
   140009785:	add    BYTE PTR [rbx+0x0],dh
   140009788:	jae    0x14000978a
   14000978a:	ja     0x14000978c
   14000978c:	outs   dx,DWORD PTR ds:[rsi]
   14000978d:	add    BYTE PTR [rdx+0x0],dh
   140009790:	add    BYTE PTR fs:[rdx],bh
   140009793:	add    BYTE PTR [rax],al
   140009795:	add    BYTE PTR [rax],al
   140009797:	add    BYTE PTR [rip+0x61007000],ch        # 0x1a101079d
   14000979d:	add    BYTE PTR [rbx+0x0],dh
   1400097a0:	jae    0x1400097a2
   1400097a2:	ja     0x1400097a4
   1400097a4:	outs   dx,DWORD PTR ds:[rsi]
   1400097a5:	add    BYTE PTR [rdx+0x0],dh
   1400097a8:	add    BYTE PTR fs:[rax],al
   1400097ab:	add    BYTE PTR [rax],al
   1400097ad:	add    BYTE PTR [rax],al
   1400097af:	add    BYTE PTR [rdi],ch
   1400097b1:	add    BYTE PTR [rax+0x0],dh
   1400097b4:	(bad)  
   1400097b5:	add    BYTE PTR [rbx+0x0],dh
   1400097b8:	jae    0x1400097ba
   1400097ba:	ja     0x1400097bc
   1400097bc:	outs   dx,DWORD PTR ds:[rsi]
   1400097bd:	add    BYTE PTR [rdx+0x0],dh
   1400097c0:	add    BYTE PTR fs:[rdx],bh
   1400097c3:	add    BYTE PTR [rax],al
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rdi],ch
   1400097c9:	add    BYTE PTR [rax+0x0],dh
   1400097cc:	(bad)  
   1400097cd:	add    BYTE PTR [rbx+0x0],dh
   1400097d0:	jae    0x1400097d2
   1400097d2:	ja     0x1400097d4
   1400097d4:	outs   dx,DWORD PTR ds:[rsi]
   1400097d5:	add    BYTE PTR [rdx+0x0],dh
   1400097d8:	add    BYTE PTR fs:[rax],al
   1400097db:	add    BYTE PTR [rax],al
   1400097dd:	add    BYTE PTR [rax],al
   1400097df:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b3010ce5
   1400097e5:	add    BYTE PTR [rbp+0x0],ah
   1400097e8:	jb     0x1400097ea
   1400097ea:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400097ee:	ins    DWORD PTR es:[rdi],dx
   1400097ef:	add    BYTE PTR [rbp+0x0],ah
   1400097f2:	cmp    al,BYTE PTR [rax]
   1400097f4:	add    BYTE PTR [rax],al
   1400097f6:	add    BYTE PTR [rax],al
   1400097f8:	sub    eax,0x73007500
   1400097fd:	add    BYTE PTR [rbp+0x0],ah
   140009800:	jb     0x140009802
   140009802:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140009806:	ins    DWORD PTR es:[rdi],dx
   140009807:	add    BYTE PTR [rbp+0x0],ah
   14000980a:	add    BYTE PTR [rax],al
   14000980c:	add    BYTE PTR [rax],al
   14000980e:	add    BYTE PTR [rax],al
   140009810:	(bad)  
   140009811:	add    BYTE PTR [rbp+0x0],dh
   140009814:	jae    0x140009816
   140009816:	add    BYTE PTR gs:[rdx+0x0],dh
   14000981a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000981e:	ins    DWORD PTR es:[rdi],dx
   14000981f:	add    BYTE PTR [rbp+0x0],ah
   140009822:	cmp    al,BYTE PTR [rax]
   140009824:	add    BYTE PTR [rax],al
   140009826:	add    BYTE PTR [rax],al
   140009828:	(bad)  
   140009829:	add    BYTE PTR [rbp+0x0],dh
   14000982c:	jae    0x14000982e
   14000982e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009832:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140009836:	ins    DWORD PTR es:[rdi],dx
   140009837:	add    BYTE PTR [rbp+0x0],ah
   14000983a:	add    BYTE PTR [rax],al
   14000983c:	add    BYTE PTR [rax],al
   14000983e:	add    BYTE PTR [rax],al
   140009840:	sub    eax,0x69007400
   140009845:	add    BYTE PTR [rbp+0x0],ch
   140009848:	add    BYTE PTR gs:[rdi+0x0],ch
   14000984c:	jne    0x14000984e
   14000984e:	je     0x140009850
   140009850:	cmp    al,BYTE PTR [rax]
   140009852:	add    BYTE PTR [rax],al
   140009854:	add    BYTE PTR [rax],al
   140009856:	add    BYTE PTR [rax],al
   140009858:	sub    eax,0x69007400
   14000985d:	add    BYTE PTR [rbp+0x0],ch
   140009860:	add    BYTE PTR gs:[rdi+0x0],ch
   140009864:	jne    0x140009866
   140009866:	je     0x140009868
	...
   140009870:	(bad)  
   140009871:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009875:	add    BYTE PTR [rbp+0x0],ch
   140009878:	add    BYTE PTR gs:[rdi+0x0],ch
   14000987c:	jne    0x14000987e
   14000987e:	je     0x140009880
   140009880:	cmp    al,BYTE PTR [rax]
   140009882:	add    BYTE PTR [rax],al
   140009884:	add    BYTE PTR [rax],al
   140009886:	add    BYTE PTR [rax],al
   140009888:	(bad)  
   140009889:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000988d:	add    BYTE PTR [rbp+0x0],ch
   140009890:	add    BYTE PTR gs:[rdi+0x0],ch
   140009894:	jne    0x140009896
   140009896:	je     0x140009898
	...
   1400098a0:	sub    eax,0x65007200
   1400098a5:	add    BYTE PTR [rbp+0x0],ch
   1400098a8:	outs   dx,DWORD PTR ds:[rsi]
   1400098a9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400098ad:	add    BYTE PTR [rdx],bh
	...
   1400098b7:	add    BYTE PTR [rip+0x65007200],ch        # 0x1a5010abd
   1400098bd:	add    BYTE PTR [rbp+0x0],ch
   1400098c0:	outs   dx,DWORD PTR ds:[rsi]
   1400098c1:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400098c5:	add    BYTE PTR [rax],al
   1400098c7:	add    BYTE PTR [rdi],ch
   1400098c9:	add    BYTE PTR [rdx+0x0],dh
   1400098cc:	add    BYTE PTR gs:[rbp+0x0],ch
   1400098d0:	outs   dx,DWORD PTR ds:[rsi]
   1400098d1:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400098d5:	add    BYTE PTR [rdx],bh
	...
   1400098df:	add    BYTE PTR [rdi],ch
   1400098e1:	add    BYTE PTR [rdx+0x0],dh
   1400098e4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400098e8:	outs   dx,DWORD PTR ds:[rsi]
   1400098e9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400098ed:	add    BYTE PTR [rax],al
   1400098ef:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0106f5
   1400098f5:	add    BYTE PTR [rax+0x0],dh
   1400098f8:	jb     0x1400098fa
   1400098fa:	outs   dx,DWORD PTR ds:[rsi]
   1400098fb:	add    BYTE PTR [rsi+0x0],ah
   1400098fe:	imul   eax,DWORD PTR [rax],0x65006c
   140009904:	add    BYTE PTR [rax],al
   140009906:	add    BYTE PTR [rax],al
   140009908:	(bad)  
   140009909:	add    BYTE PTR [rsi+0x0],ch
   14000990c:	outs   dx,DWORD PTR ds:[rsi]
   14000990d:	add    BYTE PTR [rax+0x0],dh
   140009910:	jb     0x140009912
   140009912:	outs   dx,DWORD PTR ds:[rsi]
   140009913:	add    BYTE PTR [rsi+0x0],ah
   140009916:	imul   eax,DWORD PTR [rax],0x65006c
   14000991c:	add    BYTE PTR [rax],al
   14000991e:	add    BYTE PTR [rax],al
   140009920:	sub    eax,0x6f006e00
   140009925:	add    BYTE PTR [rbp+0x0],ah
   140009928:	movsxd eax,DWORD PTR [rax]
   14000992a:	push   0x6f00
   14000992f:	add    BYTE PTR [rdi],ch
   140009931:	add    BYTE PTR [rsi+0x0],ch
   140009934:	outs   dx,DWORD PTR ds:[rsi]
   140009935:	add    BYTE PTR [rbp+0x0],ah
   140009938:	movsxd eax,DWORD PTR [rax]
   14000993a:	push   0x6f00
   14000993f:	add    BYTE PTR [rip+0x65006800],ch        # 0x1a5010145
   140009945:	add    BYTE PTR [rax+rax*1+0x70],ch
   140009949:	add    BYTE PTR [rax],al
   14000994b:	add    BYTE PTR [rax],al
   14000994d:	add    BYTE PTR [rax],al
   14000994f:	add    BYTE PTR [rdi],ch
   140009951:	add    BYTE PTR [rax+0x0],ch
   140009954:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   140009959:	add    BYTE PTR [rax],al
   14000995b:	add    BYTE PTR [rax],al
   14000995d:	add    BYTE PTR [rax],al
   14000995f:	add    BYTE PTR [rip+0x6c006100],ch        # 0x1ac00fa65
   140009965:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009969:	add    BYTE PTR [rdi+0x0],dh
   14000996c:	add    BYTE PTR fs:[rbp+0x0],ah
   140009970:	ins    BYTE PTR es:[rdi],dx
   140009971:	add    BYTE PTR [rbp+0x0],ah
   140009974:	add    BYTE PTR [ecx+0x0],ah
   140009978:	je     0x14000997a
   14000997a:	add    BYTE PTR gs:[rax],al
   14000997d:	add    BYTE PTR [rax],al
   14000997f:	add    BYTE PTR [rdi],ch
   140009981:	add    BYTE PTR [rcx+0x0],ah
   140009984:	ins    BYTE PTR es:[rdi],dx
   140009985:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009989:	add    BYTE PTR [rdi+0x0],dh
   14000998c:	add    BYTE PTR fs:[rbp+0x0],ah
   140009990:	ins    BYTE PTR es:[rdi],dx
   140009991:	add    BYTE PTR [rbp+0x0],ah
   140009994:	add    BYTE PTR [ecx+0x0],ah
   140009998:	je     0x14000999a
   14000999a:	add    BYTE PTR gs:[rax],al
   14000999d:	add    BYTE PTR [rax],al
   14000999f:	add    BYTE PTR [rdi],ch
   1400099a1:	add    BYTE PTR [rbp+0x0],dh
   1400099a4:	jae    0x1400099a6
   1400099a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400099aa:	jae    0x1400099ac
   1400099ac:	ins    BYTE PTR es:[rdi],dx
   1400099ad:	add    BYTE PTR [rax],al
   1400099af:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b3010eb5
   1400099b5:	add    BYTE PTR [rbp+0x0],ah
   1400099b8:	jae    0x1400099ba
   1400099ba:	jae    0x1400099bc
   1400099bc:	ins    BYTE PTR es:[rdi],dx
   1400099bd:	add    BYTE PTR [rax],al
   1400099bf:	add    BYTE PTR [rdi],ch
   1400099c1:	add    BYTE PTR [rbx+0x0],dh
   1400099c4:	jae    0x1400099c6
   1400099c6:	ins    BYTE PTR es:[rdi],dx
	...
   1400099cf:	add    BYTE PTR [rip+0x73007300],ch        # 0x1b3010cd5
   1400099d5:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400099d9:	add    BYTE PTR [rax],al
   1400099db:	add    BYTE PTR [rax],al
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0107e5
   1400099e5:	add    BYTE PTR [rbp+0x0],ah
	...
   1400099f0:	(bad)  
   1400099f1:	add    BYTE PTR [rsi+0x0],ch
   1400099f4:	outs   dx,DWORD PTR ds:[rsi]
   1400099f5:	add    BYTE PTR [rbp+0x0],ah
	...
   140009a00:	sub    eax,0x6f006e00
   140009a05:	add    BYTE PTR [rax+0x0],dh
	...
   140009a10:	(bad)  
   140009a11:	add    BYTE PTR [rsi+0x0],ch
   140009a14:	outs   dx,DWORD PTR ds:[rsi]
   140009a15:	add    BYTE PTR [rax+0x0],dh
	...
   140009a20:	sub    eax,0x6e006500
   140009a25:	add    BYTE PTR [rsi+0x0],dh
   140009a28:	cmp    al,BYTE PTR [rax]
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	add    BYTE PTR [rax],al
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	sub    eax,0x6e006500
   140009a35:	add    BYTE PTR [rsi+0x0],dh
	...
   140009a40:	(bad)  
   140009a41:	add    BYTE PTR [rbp+0x0],ah
   140009a44:	outs   dx,BYTE PTR ds:[rsi]
   140009a45:	add    BYTE PTR [rsi+0x0],dh
   140009a48:	cmp    al,BYTE PTR [rax]
   140009a4a:	add    BYTE PTR [rax],al
   140009a4c:	add    BYTE PTR [rax],al
   140009a4e:	add    BYTE PTR [rax],al
   140009a50:	(bad)  
   140009a51:	add    BYTE PTR [rbp+0x0],ah
   140009a54:	outs   dx,BYTE PTR ds:[rsi]
   140009a55:	add    BYTE PTR [rsi+0x0],dh
	...
   140009a60:	sub    eax,0x6e007500
   140009a65:	add    BYTE PTR [rax],al
   140009a67:	add    BYTE PTR [rdi],ch
   140009a69:	add    BYTE PTR [rbp+0x0],dh
   140009a6c:	outs   dx,BYTE PTR ds:[rsi]
   140009a6d:	add    BYTE PTR [rax],al
   140009a6f:	add    BYTE PTR [rip+0x3a006400],ch        # 0x17a00fe75
   140009a75:	add    BYTE PTR [rax],al
   140009a77:	add    BYTE PTR [rip+0x6400],ch        # 0x14000fe7d
   140009a7d:	add    BYTE PTR [rax],al
   140009a7f:	add    BYTE PTR [rdi],ch
   140009a81:	add    BYTE PTR [rax+rax*1+0x3a],ah
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	add    BYTE PTR [rdi],ch
   140009a89:	add    BYTE PTR [rax+rax*1+0x0],ah
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rip+0x6e00],ch        # 0x140010895
   140009a95:	add    BYTE PTR [rax],al
   140009a97:	add    BYTE PTR [rdi],ch
   140009a99:	add    BYTE PTR [rsi+0x0],ch
   140009a9c:	add    BYTE PTR [rax],al
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	sub    eax,0x3a007000
   140009aa5:	add    BYTE PTR [rax],al
   140009aa7:	add    BYTE PTR [rip+0x7000],ch        # 0x140010aad
   140009aad:	add    BYTE PTR [rax],al
   140009aaf:	add    BYTE PTR [rdi],ch
   140009ab1:	add    BYTE PTR [rax+0x0],dh
   140009ab4:	cmp    al,BYTE PTR [rax]
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	(bad)  
   140009ab9:	add    BYTE PTR [rax+0x0],dh
   140009abc:	add    BYTE PTR [rax],al
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	sub    eax,0x3a007200
   140009ac5:	add    BYTE PTR [rax],al
   140009ac7:	add    BYTE PTR [rip+0x7200],ch        # 0x140010ccd
   140009acd:	add    BYTE PTR [rax],al
   140009acf:	add    BYTE PTR [rdi],ch
   140009ad1:	add    BYTE PTR [rdx+0x0],dh
   140009ad4:	cmp    al,BYTE PTR [rax]
   140009ad6:	add    BYTE PTR [rax],al
   140009ad8:	(bad)  
   140009ad9:	add    BYTE PTR [rdx+0x0],dh
   140009adc:	add    BYTE PTR [rax],al
   140009ade:	add    BYTE PTR [rax],al
   140009ae0:	sub    eax,0x3a007400
   140009ae5:	add    BYTE PTR [rax],al
   140009ae7:	add    BYTE PTR [rip+0x7400],ch        # 0x140010eed
   140009aed:	add    BYTE PTR [rax],al
   140009aef:	add    BYTE PTR [rdi],ch
   140009af1:	add    BYTE PTR [rax+rax*1+0x3a],dh
   140009af5:	add    BYTE PTR [rax],al
   140009af7:	add    BYTE PTR [rdi],ch
   140009af9:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009afd:	add    BYTE PTR [rax],al
   140009aff:	add    BYTE PTR [rip+0x3a007500],ch        # 0x17a011005
   140009b05:	add    BYTE PTR [rax],al
   140009b07:	add    BYTE PTR [rip+0x7500],ch        # 0x14001100d
   140009b0d:	add    BYTE PTR [rax],al
   140009b0f:	add    BYTE PTR [rdi],ch
   140009b11:	add    BYTE PTR [rbp+0x0],dh
   140009b14:	cmp    al,BYTE PTR [rax]
   140009b16:	add    BYTE PTR [rax],al
   140009b18:	(bad)  
   140009b19:	add    BYTE PTR [rbp+0x0],dh
   140009b1c:	add    BYTE PTR [rax],al
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	sub    eax,0x64006100
   140009b25:	add    BYTE PTR [rax],al
   140009b27:	add    BYTE PTR [rdi],ch
   140009b29:	add    BYTE PTR [rcx+0x0],ah
   140009b2c:	add    BYTE PTR fs:[rax],al
   140009b2f:	add    BYTE PTR [rdi],ch
   140009b31:	add    BYTE PTR [rbx+0x0],ah
   140009b34:	outs   dx,DWORD PTR ds:[rsi]
   140009b35:	add    BYTE PTR [rbp+0x0],ch
   140009b38:	jo     0x140009b3a
   140009b3a:	jb     0x140009b3c
   140009b3c:	add    BYTE PTR gs:[rbx+0x0],dh
   140009b40:	jae    0x140009b42
   140009b42:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140009b50:	sub    eax,0x6f006300
   140009b55:	add    BYTE PTR [rbp+0x0],ch
   140009b58:	jo     0x140009b5a
   140009b5a:	jb     0x140009b5c
   140009b5c:	add    BYTE PTR gs:[rbx+0x0],dh
   140009b60:	jae    0x140009b62
   140009b62:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140009b70:	(bad)  
   140009b71:	add    BYTE PTR [rbx+0x0],ah
   140009b74:	outs   dx,DWORD PTR ds:[rsi]
   140009b75:	add    BYTE PTR [rbp+0x0],ch
   140009b78:	jo     0x140009b7a
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	add    BYTE PTR [rax],al
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	sub    eax,0x6f006300
   140009b85:	add    BYTE PTR [rbp+0x0],ch
   140009b88:	jo     0x140009b8a
   140009b8a:	add    BYTE PTR [rax],al
   140009b8c:	sub    eax,0x3f00
   140009b91:	add    BYTE PTR [rax],al
   140009b93:	add    BYTE PTR [rdi],ch
   140009b95:	add    BYTE PTR [rdi],bh
   140009b97:	add    BYTE PTR [rax],al
   140009b99:	add    BYTE PTR [rax],al
   140009b9b:	add    BYTE PTR [rip+0xd000000],ch        # 0x14d009ba1
   140009ba1:	add    BYTE PTR [rdx],cl
   140009ba3:	add    BYTE PTR [rip+0x77000a00],cl        # 0x1b700a5a9
   140009ba9:	add    BYTE PTR [rcx+0x0],ch
   140009bac:	outs   dx,BYTE PTR ds:[rsi]
   140009bad:	add    BYTE PTR [rdx+0x0],dh
   140009bb0:	jae    0x140009bb2
   140009bb2:	add    BYTE PTR cs:[rbp+0x0],ah
   140009bb6:	js     0x140009bb8
   140009bb8:	add    BYTE PTR gs:[rdx],bh
   140009bbb:	add    BYTE PTR [rax],al
   140009bbd:	add    BYTE PTR [rax],al
   140009bbf:	add    BYTE PTR [rip+0xd000a00],cl        # 0x14d00a5c5
   140009bc5:	add    BYTE PTR [rdx],cl
   140009bc7:	add    BYTE PTR [rdi+0x0],dl
   140009bca:	imul   eax,DWORD PTR [rax],0x72006e
   140009bd0:	jae    0x140009bd2
   140009bd2:	and    BYTE PTR [rax],al
   140009bd4:	add    BYTE PTR gs:[rdx+0x0],dh
   140009bd8:	jb     0x140009bda
   140009bda:	outs   dx,DWORD PTR ds:[rsi]
   140009bdb:	add    BYTE PTR [rdx+0x0],dh
   140009bde:	cmp    al,BYTE PTR [rax]
	...
   140009be8:	push   rdi
   140009be9:	add    BYTE PTR [rbx+0x0],dh
   140009bec:	ins    DWORD PTR es:[rdi],dx
   140009bed:	add    BYTE PTR [rdx+0x0],dl
   140009bf0:	add    BYTE PTR gs:[rbx+0x0],dh
   140009bf4:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140009bf9:	add    BYTE PTR [rax+rax*1+0x0],ch
   140009bfd:	add    BYTE PTR [rax],al
   140009bff:	add    BYTE PTR [rip+0xa00],cl        # 0x14000a605
   140009c05:	add    BYTE PTR [rax],al
   140009c07:	add    BYTE PTR [rip+0xd000a00],cl        # 0x14d00a60d
   140009c0d:	add    BYTE PTR [rdx],cl
	...
   140009c17:	add    BYTE PTR [rdx],cl
   140009c19:	add    BYTE PTR [rdx+0x0],dl
   140009c1c:	add    BYTE PTR gs:[rbx+0x0],dh
   140009c20:	outs   dx,DWORD PTR ds:[rsi]
   140009c21:	add    BYTE PTR [rbp+0x0],dh
   140009c24:	jb     0x140009c26
   140009c26:	movsxd eax,DWORD PTR [rax]
   140009c28:	add    BYTE PTR gs:[rax],ah
   140009c2b:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140009c2f:	add    BYTE PTR [rcx+0x0],ah
   140009c32:	add    BYTE PTR fs:[rax],ah
   140009c35:	add    BYTE PTR [rsi+0x0],al
   140009c38:	(bad)  
   140009c39:	add    BYTE PTR [rcx+0x0],ch
   140009c3c:	ins    BYTE PTR es:[rdi],dx
   140009c3d:	add    BYTE PTR [rbp+0x0],dh
   140009c40:	jb     0x140009c42
   140009c42:	add    BYTE PTR gs:[rax],al
   140009c45:	add    BYTE PTR [rax],al
   140009c47:	add    BYTE PTR [rdx+rdx*2+0x55],dl
   140009c4b:	add    BYTE PTR [r8],r8b
   140009c4e:	add    BYTE PTR [rax],al
   140009c50:	rex.RX
   140009c51:	rex.B
   140009c52:	rex.WR push rbx
   140009c54:	add    BYTE PTR [r8],r8b
   140009c57:	add    BYTE PTR [rbx+0x0],dh
   140009c5a:	je     0x140009c5c
   140009c5c:	add    BYTE PTR fs:[rcx+0x0],ch
   140009c60:	outs   dx,BYTE PTR ds:[rsi]
	...
   140009c6d:	add    BYTE PTR [rax],al
   140009c6f:	add    BYTE PTR [rax+0x0],ch
   140009c72:	je     0x140009c74
   140009c74:	je     0x140009c76
   140009c76:	jo     0x140009c78
   140009c78:	cmp    al,BYTE PTR [rax]
   140009c7a:	(bad)  
   140009c7b:	add    BYTE PTR [rdi],ch
   140009c7d:	add    BYTE PTR [rbx+0x0],dh
   140009c80:	movsxd eax,DWORD PTR [rax]
   140009c82:	push   0x6d006500
   140009c87:	add    BYTE PTR [rcx+0x0],ah
   140009c8a:	jae    0x140009c8c
   140009c8c:	add    BYTE PTR cs:[rbp+0x0],ch
   140009c90:	imul   eax,DWORD PTR [rax],0x720063
   140009c96:	outs   dx,DWORD PTR ds:[rsi]
   140009c97:	add    BYTE PTR [rbx+0x0],dh
   140009c9a:	outs   dx,DWORD PTR ds:[rsi]
   140009c9b:	add    BYTE PTR [rsi+0x0],ah
   140009c9e:	je     0x140009ca0
   140009ca0:	add    BYTE PTR cs:[rbx+0x0],ah
   140009ca4:	outs   dx,DWORD PTR ds:[rsi]
   140009ca5:	add    BYTE PTR [rbp+0x0],ch
   140009ca8:	(bad)  
   140009ca9:	add    BYTE PTR [rdi+0x0],dh
   140009cac:	(bad)  
   140009cad:	add    BYTE PTR [rbp+0x0],ah
   140009cb0:	ins    DWORD PTR es:[rdi],dx
   140009cb1:	add    BYTE PTR [rdi],ch
   140009cb3:	add    BYTE PTR [rdi+0x0],dh
   140009cb6:	jae    0x140009cb8
   140009cb8:	ins    DWORD PTR es:[rdi],dx
   140009cb9:	add    BYTE PTR [rcx+0x0],ah
   140009cbc:	outs   dx,BYTE PTR ds:[rsi]
   140009cbd:	add    BYTE PTR [rdi],ch
   140009cbf:	add    BYTE PTR [rcx],dh
   140009cc1:	add    BYTE PTR [rdi],ch
   140009cc3:	add    BYTE PTR [rdi+0x0],dh
   140009cc6:	imul   eax,DWORD PTR [rax],0x64006e
   140009ccc:	outs   dx,DWORD PTR ds:[rsi]
   140009ccd:	add    BYTE PTR [rdi+0x0],dh
   140009cd0:	jae    0x140009cd2
   140009cd2:	(bad)  
   140009cd3:	add    BYTE PTR [rbx+0x0],dh
   140009cd6:	push   0x6c006500
   140009cdb:	add    BYTE PTR [rax+rax*1+0x2f],ch
   140009cdf:	add    BYTE PTR [rbx+0x0],dh
   140009ce2:	imul   eax,DWORD PTR [rax],0x6e0067
   140009ce8:	(bad)  
   140009ce9:	add    BYTE PTR [rax+rax*1+0x2f],ch
   140009ced:	add    BYTE PTR [rbx+0x0],ah
   140009cf0:	je     0x140009cf2
   140009cf2:	jb     0x140009cf4
   140009cf4:	ins    BYTE PTR es:[rdi],dx
   140009cf5:	add    BYTE PTR [rdi+0x0],bl
   140009cf8:	movsxd eax,DWORD PTR [rax]
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	add    BYTE PTR [rax],al
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	push   0x74007400
   140009d05:	add    BYTE PTR [rax+0x0],dh
   140009d08:	cmp    al,BYTE PTR [rax]
   140009d0a:	(bad)  
   140009d0b:	add    BYTE PTR [rdi],ch
   140009d0d:	add    BYTE PTR [rbx+0x0],dh
   140009d10:	movsxd eax,DWORD PTR [rax]
   140009d12:	push   0x6d006500
   140009d17:	add    BYTE PTR [rcx+0x0],ah
   140009d1a:	jae    0x140009d1c
   140009d1c:	add    BYTE PTR cs:[rbp+0x0],ch
   140009d20:	imul   eax,DWORD PTR [rax],0x720063
   140009d26:	outs   dx,DWORD PTR ds:[rsi]
   140009d27:	add    BYTE PTR [rbx+0x0],dh
   140009d2a:	outs   dx,DWORD PTR ds:[rsi]
   140009d2b:	add    BYTE PTR [rsi+0x0],ah
   140009d2e:	je     0x140009d30
   140009d30:	add    BYTE PTR cs:[rbx+0x0],ah
   140009d34:	outs   dx,DWORD PTR ds:[rsi]
   140009d35:	add    BYTE PTR [rbp+0x0],ch
   140009d38:	(bad)  
   140009d39:	add    BYTE PTR [rdi+0x0],dh
   140009d3c:	(bad)  
   140009d3d:	add    BYTE PTR [rbp+0x0],ah
   140009d40:	ins    DWORD PTR es:[rdi],dx
   140009d41:	add    BYTE PTR [rdi],ch
   140009d43:	add    BYTE PTR [rdi+0x0],dh
   140009d46:	jae    0x140009d48
   140009d48:	ins    DWORD PTR es:[rdi],dx
   140009d49:	add    BYTE PTR [rcx+0x0],ah
   140009d4c:	outs   dx,BYTE PTR ds:[rsi]
   140009d4d:	add    BYTE PTR [rdi],ch
   140009d4f:	add    BYTE PTR [rcx],dh
   140009d51:	add    BYTE PTR [rdi],ch
   140009d53:	add    BYTE PTR [rdi+0x0],dh
   140009d56:	imul   eax,DWORD PTR [rax],0x64006e
   140009d5c:	outs   dx,DWORD PTR ds:[rsi]
   140009d5d:	add    BYTE PTR [rdi+0x0],dh
   140009d60:	jae    0x140009d62
   140009d62:	(bad)  
   140009d63:	add    BYTE PTR [rbx+0x0],dh
   140009d66:	push   0x6c006500
   140009d6b:	add    BYTE PTR [rax+rax*1+0x2f],ch
   140009d6f:	add    BYTE PTR [rbx+0x0],dh
   140009d72:	imul   eax,DWORD PTR [rax],0x6e0067
   140009d78:	(bad)  
   140009d79:	add    BYTE PTR [rax+rax*1+0x2f],ch
   140009d7d:	add    BYTE PTR [rbx+0x0],ah
   140009d80:	je     0x140009d82
   140009d82:	jb     0x140009d84
   140009d84:	ins    BYTE PTR es:[rdi],dx
   140009d85:	add    BYTE PTR [rdi+0x0],bl
   140009d88:	(bad)  
   140009d89:	add    BYTE PTR [rdx+0x0],dh
   140009d8c:	add    BYTE PTR gs:[rcx+0x0],ah
   140009d90:	imul   eax,DWORD PTR [rax],0x0
   140009d93:	add    BYTE PTR [rax],al
   140009d95:	add    BYTE PTR [rax],al
   140009d97:	add    BYTE PTR [rbx+0x0],dh
   140009d9a:	je     0x140009d9c
   140009d9c:	add    BYTE PTR fs:[rbp+0x0],ah
   140009da0:	jb     0x140009da2
   140009da2:	jb     0x140009da4
   140009da4:	add    BYTE PTR [rax],al
   140009da6:	add    BYTE PTR [rax],al
   140009da8:	push   rdi
   140009da9:	add    BYTE PTR [rcx+0x0],cl
   140009dac:	rex.WRX add BYTE PTR [rdx+0x0],r10b
   140009db0:	push   rbx
   140009db1:	add    BYTE PTR [rdi+0x0],bl
   140009db4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140009db8:	push   rax
   140009db9:	add    BYTE PTR [rdx+0x0],dl
   140009dbc:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140009dc0:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    BYTE PTR [rax+rax*1+0x52],dl
   140009dcb:	add    BYTE PTR [rbp+0x0],dl
   140009dce:	add    BYTE PTR [r8],r8b
   140009dd1:	add    BYTE PTR [rax],al
   140009dd3:	add    BYTE PTR [rax],al
   140009dd5:	add    BYTE PTR [rax],al
   140009dd7:	add    BYTE PTR [rsi+0x0],al
   140009dda:	add    BYTE PTR [r8+rax*1+0x53],cl
   140009ddf:	add    BYTE PTR [rbp+0x0],al
   140009de2:	add    BYTE PTR [rax],al
   140009de4:	add    BYTE PTR [rax],al
   140009de6:	add    BYTE PTR [rax],al
   140009de8:	and    eax,0x75006c00
   140009ded:	add    BYTE PTR [rax],al
   140009def:	add    BYTE PTR [rdi+0x0],dl
   140009df2:	rex.WB add BYTE PTR [r14+0x0],cl
   140009df6:	push   rdx
   140009df7:	add    BYTE PTR [rbx+0x0],dl
   140009dfa:	pop    rdi
   140009dfb:	add    BYTE PTR [rbx+0x0],al
   140009dfe:	rex.WRXB add BYTE PTR [r8+r8*1+0x45],r8b
   140009e03:	add    BYTE PTR [rax+0x0],dl
   140009e06:	add    BYTE PTR [r15+0x0],al
   140009e0a:	add    BYTE PTR [r8],r8b
   140009e0d:	add    BYTE PTR [rax],al
   140009e0f:	add    BYTE PTR [rax+0x0],ch
   140009e12:	je     0x140009e14
   140009e14:	je     0x140009e16
   140009e16:	jo     0x140009e18
   140009e18:	cmp    al,BYTE PTR [rax]
   140009e1a:	(bad)  
   140009e1b:	add    BYTE PTR [rdi],ch
   140009e1d:	add    BYTE PTR [rbx+0x0],dh
   140009e20:	movsxd eax,DWORD PTR [rax]
   140009e22:	push   0x6d006500
   140009e27:	add    BYTE PTR [rcx+0x0],ah
   140009e2a:	jae    0x140009e2c
   140009e2c:	add    BYTE PTR cs:[rbp+0x0],ch
   140009e30:	imul   eax,DWORD PTR [rax],0x720063
   140009e36:	outs   dx,DWORD PTR ds:[rsi]
   140009e37:	add    BYTE PTR [rbx+0x0],dh
   140009e3a:	outs   dx,DWORD PTR ds:[rsi]
   140009e3b:	add    BYTE PTR [rsi+0x0],ah
   140009e3e:	je     0x140009e40
   140009e40:	add    BYTE PTR cs:[rbx+0x0],ah
   140009e44:	outs   dx,DWORD PTR ds:[rsi]
   140009e45:	add    BYTE PTR [rbp+0x0],ch
   140009e48:	(bad)  
   140009e49:	add    BYTE PTR [rdi+0x0],dh
   140009e4c:	(bad)  
   140009e4d:	add    BYTE PTR [rbp+0x0],ah
   140009e50:	ins    DWORD PTR es:[rdi],dx
   140009e51:	add    BYTE PTR [rdi],ch
   140009e53:	add    BYTE PTR [rdi+0x0],dh
   140009e56:	jae    0x140009e58
   140009e58:	ins    DWORD PTR es:[rdi],dx
   140009e59:	add    BYTE PTR [rcx+0x0],ah
   140009e5c:	outs   dx,BYTE PTR ds:[rsi]
   140009e5d:	add    BYTE PTR [rdi],ch
   140009e5f:	add    BYTE PTR [rcx],dh
   140009e61:	add    BYTE PTR [rdi],ch
   140009e63:	add    BYTE PTR [rdi+0x0],dh
   140009e66:	imul   eax,DWORD PTR [rax],0x64006e
   140009e6c:	outs   dx,DWORD PTR ds:[rsi]
   140009e6d:	add    BYTE PTR [rdi+0x0],dh
   140009e70:	jae    0x140009e72
   140009e72:	(bad)  
   140009e73:	add    BYTE PTR [rbx+0x0],dh
   140009e76:	push   0x6c006500
   140009e7b:	add    BYTE PTR [rax+rax*1+0x2f],ch
   140009e7f:	add    BYTE PTR [rbx+0x0],ah
   140009e82:	ins    DWORD PTR es:[rdi],dx
   140009e83:	add    BYTE PTR [rax+rax*1+0x0],ah
   140009e87:	add    BYTE PTR [rdi+0x0],dl
   140009e8a:	rex.WB add BYTE PTR [r14+0x0],cl
   140009e8e:	push   rdx
   140009e8f:	add    BYTE PTR [rbx+0x0],dl
   140009e92:	pop    rdi
   140009e93:	add    BYTE PTR [rbx+0x0],al
   140009e96:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140009e9a:	push   rbx
   140009e9b:	add    BYTE PTR [rdi+0x0],cl
   140009e9e:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140009ea2:	rex.WRB add BYTE PTR [r15+0x0],r9b
   140009ea6:	add    BYTE PTR [rbp+0x0],r8b
   140009eaa:	pop    rdi
   140009eab:	add    BYTE PTR [rbx+0x0],dl
   140009eae:	push   rsp
   140009eaf:	add    BYTE PTR [rax+rax*1+0x49],al
   140009eb3:	add    BYTE PTR [rsi+0x0],cl
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	xor    DWORD PTR [rax],eax
   140009eba:	xor    al,BYTE PTR [rax]
   140009ebc:	(bad)  
   140009ebd:	add    BYTE PTR [rsi],ch
   140009ebf:	add    BYTE PTR [rax],dh
   140009ec1:	add    BYTE PTR [rsi],ch
   140009ec3:	add    BYTE PTR [rax],dh
   140009ec5:	add    BYTE PTR [rsi],ch
   140009ec7:	add    BYTE PTR [rcx],dh
   140009ec9:	add    BYTE PTR [rax],al
   140009ecb:	add    BYTE PTR [rax],al
   140009ecd:	add    BYTE PTR [rax],al
   140009ecf:	add    BYTE PTR [rdx],ah
   140009ed1:	add    BYTE PTR [rip+0xa00],cl        # 0x14000a8d7
   140009ed7:	add    BYTE PTR [rsi],bh
   140009ed9:	add    BYTE PTR [rax],al
   140009edb:	add    BYTE PTR [rax],al
   140009edd:	add    BYTE PTR [rax],al
   140009edf:	add    BYTE PTR [rax+0x2c],al
   140009ee2:	add    BYTE PTR [rax+0x1],al
   140009ee5:	add    BYTE PTR [rax],al
   140009ee7:	add    BYTE PTR [rax+0x77],dh
   140009eea:	add    BYTE PTR [rax+0x1],al
   140009eed:	add    BYTE PTR [rax],al
   140009eef:	add    al,al
   140009ef1:	mov    dl,0xca
   140009ef3:	icebp  
   140009ef4:	jmp    0x140009e81
   140009ef6:	movabs ds:0xddace0178fe1904f,al
   140009eff:	pop    rbp
   140009f00:	and    BYTE PTR [rcx],dl
   140009f02:	add    BYTE PTR [rax+0x1],al
   140009f05:	add    BYTE PTR [rax],al
   140009f07:	add    BYTE PTR [rax+0x1400030],al
   140009f0d:	add    BYTE PTR [rax],al
   140009f0f:	add    BYTE PTR [rdx+0x41],cl
   140009f12:	xor    dh,BYTE PTR [rbx]
   140009f14:	shl    DWORD PTR [rdi+0x21],cl
   140009f17:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009f18:	call   0xf9fab3cb
   140009f1d:	jge    0x140009ef1
   140009f1f:	cmc    
	...
   140009f28:	and    al,BYTE PTR [rip+0x31993]        # 0x14003b8c1
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	(bad)  
   140009f31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   140009f3a:	add    BYTE PTR [rax],al
   140009f3c:	(bad)  
   140009f3d:	add    BYTE PTR [rax],al
   140009f3f:	add    al,ah
   140009f41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f42:	add    BYTE PTR [rax],al
   140009f44:	js     0x140009f47
   140009f46:	add    BYTE PTR [rax],al
   140009f48:	add    BYTE PTR [rax],al
   140009f4a:	add    BYTE PTR [rax],al
   140009f4c:	add    DWORD PTR [rax],eax
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	and    al,BYTE PTR [rip+0x11993]        # 0x14001b8e9
   140009f56:	add    BYTE PTR [rax],al
   140009f58:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   140009f62:	add    BYTE PTR [rax],al
   140009f64:	add    eax,0xf8000000
   140009f69:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f6a:	add    BYTE PTR [rax],al
   140009f6c:	cwde   
   140009f6d:	add    BYTE PTR [rax],al
   140009f6f:	add    BYTE PTR [rax],al
   140009f71:	add    BYTE PTR [rax],al
   140009f73:	add    BYTE PTR [rcx],al
   140009f75:	add    BYTE PTR [rax],al
   140009f77:	add    BYTE PTR [rdx],ah
   140009f79:	add    eax,0x11993
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	push   rsp
   140009f81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	add    eax,DWORD PTR [rax]
   140009f8e:	add    BYTE PTR [rax],al
   140009f90:	(bad)  
   140009f91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f92:	add    BYTE PTR [rax],al
   140009f94:	rex.W add BYTE PTR [rax],al
   140009f97:	add    BYTE PTR [rax],al
   140009f99:	add    BYTE PTR [rax],al
   140009f9b:	add    BYTE PTR [rcx],al
   140009f9d:	add    BYTE PTR [rax],al
   140009f9f:	add    BYTE PTR [rdx],ah
   140009fa1:	add    eax,0x21993
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	shl    BYTE PTR [rax+rax*1+0x0],1
   140009faf:	add    BYTE PTR [rax],al
   140009fb1:	add    BYTE PTR [rax],al
   140009fb3:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x120009fb9
   140009fb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	push   rax
   140009fbd:	add    BYTE PTR [rax],al
   140009fbf:	add    BYTE PTR [rax],al
   140009fc1:	add    BYTE PTR [rax],al
   140009fc3:	add    BYTE PTR [rcx],al
	...
   140009fd1:	add    BYTE PTR [rax],al
   140009fd3:	add    BYTE PTR [rdi+0x39],ah
   140009fd6:	lahf   
   140009fd7:	push   rbp
   140009fd8:	add    BYTE PTR [rax],al
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	add    al,BYTE PTR [rax]
   140009fde:	add    BYTE PTR [rax],al
   140009fe0:	and    al,BYTE PTR [rax]
   140009fe2:	add    BYTE PTR [rax],al
   140009fe4:	shl    BYTE PTR [rax-0x77300000],1
   140009fea:	add    BYTE PTR [rax],al
   140009fec:	add    BYTE PTR [rax],al
   140009fee:	add    BYTE PTR [rax],al
   140009ff0:	cmp    DWORD PTR [edi+0x55],ebx
   140009ff7:	add    BYTE PTR [rip+0xffffffffa4000000],cl        # 0xe4009ffd
   140009ffd:	add    al,BYTE PTR [rax]
   140009fff:	add    BYTE PTR [rax],cl
   14000a001:	movabs eax,ds:0x89080000
	...
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	movabs al,ds:0x0
	...
   14000a085:	add    BYTE PTR [rax],al
   14000a087:	add    BYTE PTR [rax],cl
   14000a089:	rol    BYTE PTR [rax],0x40
   14000a08c:	add    DWORD PTR [rax],eax
	...
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	xchg   rsp,rax
   14000a0a2:	add    BYTE PTR [rax+0x1],al
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a7:	add    BYTE PTR [rax-0x6c],dl
   14000a0aa:	add    BYTE PTR [rax+0x1],al
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rax+0x1400094],ah
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rdi],bl
	...
   14000a0c1:	xor    eax,0x0
	...
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	push   rdx
   14000a0d1:	push   rbx
   14000a0d2:	rex.R push rbx
   14000a0d4:	xchg   esp,eax
   14000a0d5:	cwde   
   14000a0d6:	xor    ah,BYTE PTR [rbx-0x14]
   14000a0d9:	in     eax,0xe8
   14000a0db:	rex.WRB scas rax,QWORD PTR es:[rdi]
   14000a0dd:	iret   
   14000a0de:	(bad)  
   14000a0df:	retf   
   14000a0e0:	pop    rax
   14000a0e1:	xchg   r13,rax
   14000a0e3:	adc    eax,DWORD PTR [rcx]
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rdi+0x69],dh
   14000a0ea:	outs   dx,BYTE PTR ds:[rsi]
   14000a0eb:	jb     0x14000a160
   14000a0ed:	cs jo  0x14000a154
   14000a0f0:	(bad)  
	...
   14000a105:	add    BYTE PTR [rax],al
   14000a107:	add    BYTE PTR [rdi+0x43],al
   14000a10a:	push   rsp
   14000a10b:	rex.WR add BYTE PTR [rax],r10b
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	sbb    al,0x0
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	cs je  0x14000a17c
   14000a117:	js     0x14000a18d
   14000a119:	and    al,0x64
   14000a11b:	imul   eax,DWORD PTR [rax],0x20000000
   14000a121:	adc    BYTE PTR [rax],al
   14000a123:	add    BYTE PTR [rax],bl
   14000a125:	jo     0x14000a127
   14000a127:	add    BYTE PTR [rsi],ch
   14000a129:	je     0x14000a190
   14000a12b:	js     0x14000a1a1
   14000a12d:	and    al,0x6d
   14000a12f:	outs   dx,BYTE PTR ds:[rsi]
   14000a130:	add    BYTE PTR [rax],al
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	rex add BYTE PTR [rax],0x0
   14000a138:	jge    0x14000a13a
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	cs je  0x14000a1a4
   14000a13f:	js     0x14000a1b5
   14000a141:	and    al,0x6d
   14000a143:	outs   dx,BYTE PTR ds:[rsi]
   14000a144:	and    al,0x30
   14000a146:	xor    BYTE PTR [rax],al
   14000a148:	rol    BYTE PTR [rax+0xf00000],0x0
   14000a14f:	add    BYTE PTR [rsi],ch
   14000a151:	je     0x14000a1b8
   14000a153:	js     0x14000a1c9
   14000a155:	and    al,0x78
   14000a157:	add    BYTE PTR [rax-0x7dffff7f],dh
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rsi],ch
   14000a161:	je     0x14000a1c8
   14000a163:	js     0x14000a1d9
   14000a165:	and    al,0x79
   14000a167:	add    BYTE PTR fs:[rax],al
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax+0x4480000],dl
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rax-0x6c],cl
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	adc    BYTE PTR [rax],al
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	xor    BYTE PTR cs:[rax],dh
   14000a18b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	pop    rax
   14000a191:	xchg   esp,eax
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	or     BYTE PTR [rax],al
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	cs rex.XB push r10
   14000a19b:	push   rsp
   14000a19c:	and    al,0x58
   14000a19e:	rex.XB
   14000a19f:	add    BYTE PTR [r8],al
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	(bad)  
   14000a1a5:	xchg   esp,eax
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	or     BYTE PTR [rax],al
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	cs rex.XB push r10
   14000a1af:	push   rsp
   14000a1b0:	and    al,0x58
   14000a1b2:	rex.XB
   14000a1b3:	rex.B
   14000a1b4:	add    BYTE PTR [r8],al
   14000a1b7:	add    BYTE PTR [rax-0x6c],ch
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	adc    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	cs rex.XB push r10
   14000a1c3:	push   rsp
   14000a1c4:	and    al,0x58
   14000a1c6:	rex.XB push r13
   14000a1c8:	add    BYTE PTR [rax],al
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	js     0x14000a162
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	or     BYTE PTR [rax],al
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	cs rex.XB push r10
   14000a1d7:	push   rsp
   14000a1d8:	and    al,0x58
   14000a1da:	rex.XB pop r10
   14000a1dc:	add    BYTE PTR [rax],al
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	adc    BYTE PTR [rax+rax*1+0x800],0x0
   14000a1e8:	cs rex.XB push r10
   14000a1eb:	push   rsp
   14000a1ec:	and    al,0x58
   14000a1ee:	rex.WB
   14000a1ef:	add    BYTE PTR [r8],al
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	mov    BYTE PTR [rax+rax*1+0x800],dl
   14000a1fb:	add    BYTE PTR [rsi],ch
   14000a1fd:	rex.XB push r10
   14000a1ff:	push   rsp
   14000a200:	and    al,0x58
   14000a202:	rex.WB
   14000a203:	rex.B
   14000a204:	add    BYTE PTR [r8],al
   14000a207:	add    BYTE PTR [rax+0x8000094],dl
   14000a20d:	add    BYTE PTR [rax],al
   14000a20f:	add    BYTE PTR [rsi],ch
   14000a211:	rex.XB push r10
   14000a213:	push   rsp
   14000a214:	and    al,0x58
   14000a216:	rex.WB pop r9
   14000a218:	add    BYTE PTR [rax],al
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	cwde   
   14000a21d:	xchg   esp,eax
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	or     BYTE PTR [rax],al
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	cs rex.XB push r10
   14000a227:	push   rsp
   14000a228:	and    al,0x58
   14000a22a:	rex.WB pop r10
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	movabs al,ds:0x2e0000007c000094
   14000a239:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000a241:	add    BYTE PTR [rax],al
   14000a243:	add    BYTE PTR [rax],ah
   14000a245:	xchg   ebp,eax
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	mov    al,0xb
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	cs jb  0x14000a2b3
   14000a24f:	(bad)  
   14000a250:	je     0x14000a2b3
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	shl    BYTE PTR [rax+0x2dc0000],1
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	cs jb  0x14000a2c3
   14000a25f:	(bad)  
   14000a260:	je     0x14000a2c3
   14000a262:	and    al,0x7a
   14000a264:	jp     0x14000a2e0
   14000a266:	fs (bad) 
   14000a268:	add    BYTE PTR [eax],al
   14000a26b:	add    BYTE PTR [rax+0x200000a3],dh
   14000a271:	add    eax,0x782e0000
   14000a276:	fs (bad) 
   14000a278:	je     0x14000a2db
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	shr    BYTE PTR [rax+0x600000],1
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	xor    BYTE PTR [rcx+0x200000],ch
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	push   rax
   14000a2a5:	test   eax,0x300000
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	sub    BYTE PTR [rcx+0x500000],0x0
   14000a2bf:	add    BYTE PTR [rsi],ch
   14000a2c1:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000a2ca:	add    BYTE PTR [rax],al
   14000a2cc:	shr    BYTE PTR [rcx+0x300000],1
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	add    BYTE PTR [rdx+0xa50000],ch
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	cs gs fs (bad) 
   14000a2ec:	je     0x14000a34f
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	test   al,0xaa
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	mov    eax,0x2e000001
   14000a2f9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000a301:	add    BYTE PTR [rax],al
   14000a303:	add    BYTE PTR [rax-0x54],ah
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	adc    al,0x0
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    BYTE PTR [rax-0x54],bh
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	rex.W add al,0x0
   14000a31f:	add    BYTE PTR [rsi],ch
   14000a321:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000a329:	add    BYTE PTR [rax],al
   14000a32b:	add    al,al
   14000a32d:	mov    al,0x0
   14000a32f:	add    BYTE PTR [rsi],dl
   14000a331:	or     al,0x0
   14000a333:	add    BYTE PTR [rsi],ch
   14000a335:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000a33d:	add    BYTE PTR [rax],al
   14000a33f:	add    BYTE PTR [rax],al
   14000a341:	rol    BYTE PTR [rax],0x0
   14000a344:	adc    BYTE PTR [rax],cl
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	cs fs (bad) 
   14000a34b:	je     0x14000a3ae
   14000a34d:	add    BYTE PTR [rax],al
   14000a34f:	add    BYTE PTR [rax],dl
   14000a351:	enter  0x0,0xf8
   14000a355:	(bad)  
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	cs (bad) 
   14000a35b:	jae    0x14000a35d
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rax],al
   14000a361:	rol    BYTE PTR [rax],1
   14000a363:	add    ah,ah
   14000a365:	add    eax,DWORD PTR [rax]
   14000a367:	add    BYTE PTR [rsi],ch
   14000a369:	jo     0x14000a3cf
   14000a36b:	(bad)  
   14000a36c:	je     0x14000a3cf
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	add    al,ah
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	xor    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    al,dh
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	lock add BYTE PTR [rax],al
   14000a38b:	add    BYTE PTR [rsi],ch
   14000a38d:	jb     0x14000a402
   14000a38f:	jb     0x14000a3f4
   14000a391:	and    al,0x30
   14000a393:	xor    DWORD PTR [rax],eax
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    al,dh
   14000a399:	lock add BYTE PTR [rax],al
   14000a39c:	call   0x16e00a3a7
   14000a3a1:	jb     0x14000a416
   14000a3a3:	jb     0x14000a408
   14000a3a5:	and    al,0x30
   14000a3a7:	xor    al,BYTE PTR [rax]
   14000a3a9:	add    BYTE PTR [rax],al
   14000a3ab:	add    BYTE PTR [rax],al
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    BYTE PTR [rcx],al
   14000a3b1:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42b5b7
   14000a3b7:	jo     0x14000a3c6
   14000a3b9:	(bad)  
   14000a3ba:	or     al,0x50
   14000a3bc:	or     esi,DWORD PTR [rax]
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    DWORD PTR [rsi],eax
   14000a3c2:	add    al,BYTE PTR [rax]
   14000a3c4:	(bad)  
   14000a3c5:	xor    al,BYTE PTR [rdx]
   14000a3c7:	xor    BYTE PTR [rcx],al
   14000a3c9:	or     al,BYTE PTR [rax+rax*1]
   14000a3cc:	or     dh,BYTE PTR [rsi+rax*1]
   14000a3cf:	add    BYTE PTR [rdx],cl
   14000a3d1:	xor    al,BYTE PTR [rsi]
   14000a3d3:	jo     0x14000a3d6
   14000a3d5:	add    al,0x1
   14000a3d7:	add    BYTE PTR [rdx+riz*2],al
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	add    DWORD PTR [rbx],ecx
   14000a3de:	add    DWORD PTR [rax],eax
   14000a3e0:	or     eax,DWORD PTR [rdx+0xb010000]
   14000a3e6:	add    DWORD PTR [rax],eax
   14000a3e8:	or     eax,edx
   14000a3ea:	add    BYTE PTR [rax],al
   14000a3ec:	add    DWORD PTR [rcx],ecx
   14000a3ee:	add    DWORD PTR [rax],eax
   14000a3f0:	or     edx,esp
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	add    DWORD PTR [rdi],ecx
   14000a3f6:	(bad)  
   14000a3f7:	add    BYTE PTR [rdi],cl
   14000a3f9:	fs (bad) 
   14000a3fb:	add    BYTE PTR [rdi],cl
   14000a3fd:	xor    al,0x6
   14000a3ff:	add    BYTE PTR [rdi],cl
   14000a401:	xor    cl,BYTE PTR [rbx]
   14000a403:	jo     0x14000a406
   14000a405:	add    al,0x1
   14000a407:	add    BYTE PTR [rdx+rax*2],al
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	add    DWORD PTR [rip+0x74150009],edx        # 0x1b415a41b
   14000a412:	add    eax,0x4641500
   14000a417:	add    BYTE PTR [rip+0x15000354],dl        # 0x15500a771
   14000a41d:	xor    al,0x2
   14000a41f:	add    BYTE PTR [rip+0x10000c0],dl        # 0x14100a4e5
   14000a425:	adc    ecx,DWORD PTR [rax]
   14000a427:	add    BYTE PTR [rbx],dl
   14000a429:	or     eax,DWORD PTR fs:[rax]
   14000a42c:	adc    esi,DWORD PTR [rdx+rcx*1]
   14000a42f:	add    BYTE PTR [rbx],dl
   14000a431:	push   rdx
   14000a432:	(bad)  
   14000a434:	or     eax,0x1700be0
   14000a439:	sbb    al,0xc
   14000a43b:	add    BYTE PTR [rsp+riz*2],bl
   14000a43e:	adc    DWORD PTR [rax],eax
   14000a440:	sbb    al,0x54
   14000a442:	ltr    WORD PTR [rsp+rsi*1]
   14000a446:	(bad)  
   14000a447:	add    BYTE PTR [rdx+rsi*2],bl
   14000a44a:	sbb    al,dh
   14000a44c:	(bad)  
   14000a44d:	loopne 0x14000a463
   14000a44f:	rcl    BYTE PTR [rdx],1
   14000a451:	rcl    BYTE PTR [rax],0x70
   14000a454:	add    DWORD PTR [rip+0xffffffffc4150008],edx        # 0x10415a462
   14000a45a:	or     al,0x0
   14000a45c:	adc    eax,0x15000b64
   14000a461:	xor    al,0xa
   14000a463:	add    BYTE PTR [rip+0x1f01172],dl        # 0x141f0b5db
   14000a469:	sbb    DWORD PTR [rdx],ecx
   14000a46b:	add    BYTE PTR [rcx],bl
   14000a46d:	je     0x14000a479
   14000a46f:	add    BYTE PTR [rcx],bl
   14000a471:	or     DWORD PTR fs:[rax],eax
   14000a474:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a477:	add    BYTE PTR [rcx],bl
   14000a479:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e0b86f
   14000a47f:	rol    BYTE PTR [rcx],0x19
   14000a482:	or     al,BYTE PTR [rax]
   14000a484:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000a488:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000a48c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000a490:	sbb    DWORD PTR [rsi+rax*1],esi
   14000a493:	add    BYTE PTR [rcx],bl
   14000a495:	xor    dl,BYTE PTR [rip+0x32119f0]        # 0x14321be8b
   14000a49b:	add    BYTE PTR [rdi],cl
   14000a49d:	add    DWORD PTR [rax+rcx*1],edi
   14000a4a0:	add    dh,BYTE PTR [rax+0x0]
   14000a4a3:	add    al,bh
   14000a4a5:	jle    0x14000a4a7
   14000a4a7:	add    al,dl
   14000a4a9:	add    BYTE PTR [r8],al
   14000a4ac:	sbb    DWORD PTR [rax],esi
   14000a4ae:	or     al,BYTE PTR [rax]
   14000a4b0:	and    DWORD PTR [rbx+rbx*1],esi
   14000a4b3:	add    BYTE PTR [rip+0xcf00ef2],dl        # 0x14cf0b3ab
   14000a4b9:	loopne 0x14000a4c5
   14000a4bb:	ror    BYTE PTR [rax],1
   14000a4bd:	rol    BYTE PTR [rsi],0x70
   14000a4c0:	add    eax,0x88500460
   14000a4c5:	jg     0x14000a4c7
   14000a4c7:	add    BYTE PTR [rax+0x7a00009f],ah
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    bh,bh
   14000a4d1:	(bad)  
   14000a4d2:	(bad)  
   14000a4d3:	inc    esi
   14000a4d5:	add    BYTE PTR [rax],0x0
   14000a4d8:	add    BYTE PTR [rax],al
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	(bad)  
   14000a4dd:	add    BYTE PTR [rax],0x0
   14000a4e0:	mov    ah,0x1e
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	(bad)  
   14000a4e5:	(bad)  
   14000a4e6:	(bad)  
   14000a4e7:	call   FWORD PTR [rsi]
   14000a4e9:	and    BYTE PTR [rax],al
   14000a4eb:	add    BYTE PTR [rax],al
   14000a4ed:	add    BYTE PTR [rax],al
   14000a4ef:	add    BYTE PTR [rdx+0x21],ch
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	add    DWORD PTR [rax],eax
   14000a4f6:	add    BYTE PTR [rax],al
   14000a4f8:	(bad)  
   14000a4f9:	and    al,BYTE PTR [rax]
   14000a4fb:	add    BYTE PTR [rax],al
   14000a4fd:	add    BYTE PTR [rax],al
   14000a4ff:	add    cl,ah
   14000a501:	and    al,BYTE PTR [rax]
   14000a503:	add    bh,bh
   14000a505:	(bad)  
   14000a506:	(bad)  
   14000a507:	inc    DWORD PTR [rcx]
   14000a509:	clts   
   14000a50b:	add    BYTE PTR [rdi],cl
   14000a50d:	or     DWORD PTR fs:[rax],eax
   14000a510:	sysenter 
   14000a512:	or     BYTE PTR [rax],al
   14000a514:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a517:	jo     0x14000a51a
   14000a519:	clts   
   14000a51b:	add    BYTE PTR [rdi],cl
   14000a51d:	push   rsp
   14000a51e:	(bad)  
   14000a51f:	add    BYTE PTR [rdi],cl
   14000a521:	xor    al,0x6
   14000a523:	add    BYTE PTR [rdi],cl
   14000a525:	xor    cl,BYTE PTR [rbx]
   14000a527:	jo     0x14000a52a
   14000a529:	clts   
   14000a52b:	add    BYTE PTR [rdi],cl
   14000a52d:	push   rsp
   14000a52e:	or     DWORD PTR [rax],eax
   14000a530:	sysenter 
   14000a532:	or     BYTE PTR [rax],al
   14000a534:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a537:	jo     0x14000a53a
   14000a539:	(bad)  
   14000a53b:	add    BYTE PTR [rdi],cl
   14000a53d:	xor    al,0xa
   14000a53f:	add    BYTE PTR [rdi],cl
   14000a541:	jb     0x14000a54e
   14000a543:	(bad)  
   14000a544:	adc    DWORD PTR [rax],edx
   14000a546:	add    al,BYTE PTR [rax]
   14000a548:	or     BYTE PTR [rdx+0x7eec3004],dl
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	js     0x14000a4f1
   14000a552:	add    BYTE PTR [rax],al
   14000a554:	(bad)  
   14000a555:	(bad)  
   14000a556:	(bad)  
   14000a557:	(bad)  
   14000a558:	call   0x14000a5dd
   14000a55d:	add    BYTE PTR [rax],al
   14000a55f:	add    BYTE PTR [rdx+rbp*1],ah
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	(bad)  
   14000a565:	(bad)  
   14000a566:	(bad)  
   14000a567:	jmp    FWORD PTR [rdi+0x2a]
   14000a56d:	add    BYTE PTR [rax],al
   14000a56f:	add    BYTE PTR [rsi],cl
   14000a571:	sub    eax,DWORD PTR [rax]
   14000a573:	add    bh,bh
   14000a575:	(bad)  
   14000a576:	(bad)  
   14000a577:	call   FWORD PTR [rcx]
   14000a579:	sub    al,BYTE PTR [rdi]
   14000a57b:	add    BYTE PTR [rax],bl
   14000a57d:	or     eax,DWORD PTR fs:[rax+rbx*1]
   14000a581:	xor    al,0xa
   14000a583:	add    al,0x18
   14000a585:	add    DWORD PTR [rsi],eax
   14000a587:	add    al,0xb
   14000a589:	jo     0x14000a58b
   14000a58b:	add    al,bh
   14000a58d:	jle    0x14000a58f
   14000a58f:	add    BYTE PTR [rax],ah
   14000a591:	and    BYTE PTR [rax],al
   14000a593:	add    BYTE PTR [rcx],al
   14000a595:	or     al,BYTE PTR [rax+rax*1]
   14000a598:	or     dh,BYTE PTR [rsi+rax*1]
   14000a59b:	add    BYTE PTR [rdx],cl
   14000a59d:	xor    al,BYTE PTR [rsi]
   14000a59f:	(bad)  
   14000a5a0:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415a5ae
   14000a5a6:	or     al,0x0
   14000a5a8:	adc    eax,0x15000b64
   14000a5ad:	xor    al,0xa
   14000a5af:	add    BYTE PTR [rip+0x1e01172],dl        # 0x141e0b727
   14000a5b5:	sbb    al,0xa
   14000a5b7:	add    BYTE PTR [rsp+riz*2],bl
   14000a5ba:	or     eax,DWORD PTR [rax]
   14000a5bc:	sbb    al,0x54
   14000a5be:	or     al,BYTE PTR [rax]
   14000a5c0:	sbb    al,0x34
   14000a5c2:	or     DWORD PTR [rax],eax
   14000a5c4:	sbb    al,0x32
   14000a5c6:	sbb    al,ah
   14000a5c8:	(bad)  
   14000a5c9:	rcl    BYTE PTR [rax+rsi*2],0x11
   14000a5cd:	and    eax,0x3425000b
   14000a5d2:	sbb    al,0x0
   14000a5d4:	sbb    DWORD PTR [rcx],eax
   14000a5d6:	adc    al,0x0
   14000a5d8:	(bad)  
   14000a5d9:	lock or al,0xe0
   14000a5dc:	or     dl,al
   14000a5de:	or     al,al
   14000a5e0:	(bad)  
   14000a5e1:	jo     0x14000a5e8
   14000a5e3:	(bad)  
   14000a5e4:	add    al,0x50
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	in     al,dx
   14000a5e9:	jle    0x14000a5eb
   14000a5eb:	add    BYTE PTR [rax-0x61],dl
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	(bad)  
   14000a5f1:	(bad)  
   14000a5f2:	(bad)  
   14000a5f3:	(bad)  
   14000a5f4:	cld    
   14000a5f5:	add    BYTE PTR [rax],0x0
   14000a5f8:	xor    BYTE PTR [rax],0x0
   14000a5fb:	add    bh,bh
   14000a5fd:	(bad)  
   14000a5fe:	(bad)  
   14000a5ff:	call   QWORD PTR [rdi+0x31]
   14000a605:	add    BYTE PTR [rax],al
   14000a607:	add    BYTE PTR [rsi+0x34],cl
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	(bad)  
   14000a60d:	(bad)  
   14000a60e:	(bad)  
   14000a60f:	jmp    QWORD PTR [rdi+0x34]
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	add    BYTE PTR [rax],al
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	js     0x14000a64f
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	(bad)  
   14000a61d:	(bad)  
   14000a61e:	(bad)  
   14000a61f:	call   FWORD PTR [rcx]
   14000a621:	sub    cl,BYTE PTR [rcx]
   14000a623:	add    BYTE PTR [rax],bl
   14000a625:	add    DWORD PTR [rsp+rax*1],ecx
   14000a628:	or     esi,eax
   14000a62a:	or     eax,esp
   14000a62c:	(bad)  
   14000a62d:	rol    BYTE PTR [rip+0x3600470],1        # 0x14360aaa3
   14000a633:	push   rax
   14000a634:	add    dh,BYTE PTR [rax]
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	clc    
   14000a639:	jle    0x14000a63b
   14000a63b:	add    BYTE PTR [rax+0x20],dl
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	add    DWORD PTR [rdi],ecx
   14000a642:	(bad)  
   14000a643:	add    BYTE PTR [rdi],cl
   14000a645:	push   rsp
   14000a646:	or     eax,DWORD PTR [rax]
   14000a648:	sysenter 
   14000a64a:	or     al,BYTE PTR [rax]
   14000a64c:	(bad)  
   14000a64e:	or     esi,DWORD PTR [rax+0x19]
   14000a651:	(bad)  
   14000a652:	or     al,BYTE PTR [rax]
   14000a654:	sbb    DWORD PTR [rsi+rdx*1+0x0],esp
   14000a658:	sbb    DWORD PTR [rdx*1+0x12d21900],esi
   14000a65f:	lock adc al,ah
   14000a662:	(bad)  
   14000a663:	ror    BYTE PTR [rax+rsi*2],0xb
   14000a667:	push   rax
   14000a668:	clc    
   14000a669:	jle    0x14000a66b
   14000a66b:	add    BYTE PTR [rax+0x0],ch
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	add    DWORD PTR [rsp+rax*1],ecx
   14000a673:	add    BYTE PTR [rdx+rdx*8],cl
   14000a676:	add    eax,0x27003f0
   14000a67b:	push   rax
   14000a67c:	add    DWORD PTR [rbx],edx
   14000a67e:	or     BYTE PTR [rax],al
   14000a680:	adc    esi,DWORD PTR [rsi+rcx*1]
   14000a683:	add    BYTE PTR [rbx],dl
   14000a685:	jb     0x14000a693
   14000a687:	lock or ah,al
   14000a68a:	or     BYTE PTR [rax+0x7],dh
   14000a68d:	(bad)  
   14000a68e:	(bad)  
   14000a68f:	push   rax
   14000a690:	add    DWORD PTR [rdi],ecx
   14000a692:	(bad)  
   14000a693:	add    BYTE PTR [rdi],cl
   14000a695:	or     eax,DWORD PTR fs:[rax]
   14000a698:	sysenter 
   14000a69a:	or     al,BYTE PTR [rax]
   14000a69c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a69f:	jo     0x14000a6ba
   14000a6a1:	xor    eax,0x11c000a
   14000a6a6:	jae    0x14000a6a8
   14000a6a8:	or     eax,0x9e00bf0
   14000a6ad:	rol    BYTE PTR [rdi],1
   14000a6af:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ab26
   14000a6b6:	add    dl,BYTE PTR [rax-0x78]
   14000a6b9:	jg     0x14000a6bb
   14000a6bb:	add    BYTE PTR [rax],ch
   14000a6bd:	lahf   
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	(bad)  
   14000a6c1:	add    eax,DWORD PTR [rax]
   14000a6c3:	add    bh,bh
   14000a6c5:	(bad)  
   14000a6c6:	(bad)  
   14000a6c7:	call   QWORD PTR [rax]
   14000a6c9:	add    DWORD PTR [rax],0x0
   14000a6cf:	add    BYTE PTR [rcx+rax*4],bl
   14000a6d2:	add    BYTE PTR [rax],al
   14000a6d4:	add    DWORD PTR [rax],eax
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	sub    al,BYTE PTR [rcx+0x0]
   14000a6de:	add    BYTE PTR [rax],al
   14000a6e0:	(bad)  
   14000a6e1:	rex.RX add BYTE PTR [rax],r8b
   14000a6e4:	(bad)  
   14000a6e5:	(bad)  
   14000a6e6:	(bad)  
   14000a6e7:	inc    DWORD PTR [rsi]
   14000a6e9:	rex.WRX add BYTE PTR [rax],r8b
   14000a6ec:	add    BYTE PTR [rax],al
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	mov    WORD PTR [rdi+0x0],cs
   14000a6f3:	add    BYTE PTR [rcx],al
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    BYTE PTR [rdx+rdx*2+0x0],dl
   14000a6fb:	add    BYTE PTR [rdx],al
   14000a6fd:	add    BYTE PTR [rax],al
   14000a6ff:	add    BYTE PTR [rsi+0x55],cl
   14000a702:	add    BYTE PTR [rax],al
   14000a704:	add    DWORD PTR [rax],eax
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	jnp    0x14000a75f
   14000a70a:	add    BYTE PTR [rax],al
   14000a70c:	add    BYTE PTR [rax],al
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	xchg   DWORD PTR [rbp+0x0],edx
   14000a713:	add    bh,bh
   14000a715:	(bad)  
   14000a716:	(bad)  
   14000a717:	inc    DWORD PTR [rcx]
   14000a719:	sbb    eax,0x741d000c
   14000a71e:	or     eax,DWORD PTR [rax]
   14000a720:	sbb    eax,0x1d000a64
   14000a725:	push   rsp
   14000a726:	or     DWORD PTR [rax],eax
   14000a728:	sbb    eax,0x1d000834
   14000a72d:	xor    bl,BYTE PTR [rcx]
   14000a72f:	lock (bad) 
   14000a731:	loopne 0x14000a748
   14000a733:	rol    BYTE PTR [rcx],0x1c
   14000a736:	or     al,0x0
   14000a738:	sbb    al,0x64
   14000a73a:	or     al,0x0
   14000a73c:	sbb    al,0x54
   14000a73e:	or     eax,DWORD PTR [rax]
   14000a740:	sbb    al,0x34
   14000a742:	or     al,BYTE PTR [rax]
   14000a744:	sbb    al,0x32
   14000a746:	sbb    al,dh
   14000a748:	(bad)  
   14000a749:	loopne 0x14000a75f
   14000a74b:	rcl    BYTE PTR [rdx],1
   14000a74d:	rcl    BYTE PTR [rax],0x70
   14000a750:	add    DWORD PTR [rbx],esp
   14000a752:	or     al,0x0
   14000a754:	and    esi,DWORD PTR [rbx+rdx*1+0x0]
   14000a758:	and    esp,DWORD PTR [rdx+rdx*1+0x0]
   14000a75c:	and    esi,DWORD PTR [rcx+rdx*1]
   14000a75f:	add    BYTE PTR [rbx],ah
   14000a761:	xchg   edx,eax
   14000a762:	sbb    al,0xf0
   14000a764:	sbb    ah,al
   14000a766:	sbb    al,dl
   14000a768:	(bad)  
   14000a769:	rcl    BYTE PTR [rax+rdx*2],0x1
   14000a76d:	sbb    al,0xc
   14000a76f:	add    BYTE PTR [rsp+riz*2],bl
   14000a772:	adc    al,BYTE PTR [rax]
   14000a774:	sbb    al,0x54
   14000a776:	adc    DWORD PTR [rax],eax
   14000a778:	sbb    al,0x34
   14000a77a:	adc    BYTE PTR [rax],al
   14000a77c:	sbb    al,0x92
   14000a77e:	sbb    al,dh
   14000a780:	(bad)  
   14000a781:	loopne 0x14000a797
   14000a783:	rcl    BYTE PTR [rdx],1
   14000a785:	rcl    BYTE PTR [rax],0x70
   14000a788:	sbb    DWORD PTR [rbx],ebp
   14000a78a:	(bad)  
   14000a78b:	add    BYTE PTR [rcx],bl
   14000a78d:	je     0x14000a7ca
   14000a78f:	or     BYTE PTR [rcx],bl
   14000a791:	xor    al,0x3a
   14000a793:	or     BYTE PTR [rcx],bl
   14000a795:	add    DWORD PTR [rsi],esi
   14000a797:	or     BYTE PTR [rax+riz*8],cl
   14000a79a:	add    BYTE PTR [rax],al
   14000a79c:	clc    
   14000a79d:	jle    0x14000a79f
   14000a79f:	add    BYTE PTR [rax+0x1000041],ah
   14000a7a5:	(bad)  
   14000a7a6:	or     al,BYTE PTR [rax]
   14000a7a8:	(bad)  
   14000a7a9:	xor    al,0x13
   14000a7ab:	add    BYTE PTR [rsi],bl
   14000a7ad:	xchg   edx,eax
   14000a7ae:	sbb    dh,al
   14000a7b0:	sbb    al,ah
   14000a7b2:	(bad)  
   14000a7b3:	rcl    BYTE PTR [rax+rax*8],1
   14000a7b6:	adc    dh,BYTE PTR [rax+0x11]
   14000a7b9:	(bad)  
   14000a7ba:	adc    BYTE PTR [rax+0x1],dl
   14000a7bd:	(bad)  
   14000a7be:	or     eax,DWORD PTR [rax]
   14000a7c0:	(bad)  
   14000a7c1:	fs (bad) 
   14000a7c3:	add    BYTE PTR [rsi],bl
   14000a7c5:	xor    al,0x1e
   14000a7c7:	add    BYTE PTR [rsi],bl
   14000a7c9:	add    DWORD PTR [rax],ebx
   14000a7cb:	add    BYTE PTR [rdx],dl
   14000a7cd:	lock adc al,ah
   14000a7d0:	(bad)  
   14000a7d1:	ror    BYTE PTR [rax+rsi*2],0xb
   14000a7d5:	push   rax
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	or     DWORD PTR [rcx],ebx
   14000a7da:	or     al,BYTE PTR [rax]
   14000a7dc:	sbb    esp,eax
   14000a7de:	or     eax,DWORD PTR [rax]
   14000a7e0:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000a7e4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000a7e8:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a7eb:	add    BYTE PTR [rcx],bl
   14000a7ed:	push   rdx
   14000a7ee:	adc    eax,0x7a76e0
   14000a7f3:	add    BYTE PTR [rcx],al
   14000a7f5:	add    BYTE PTR [rax],al
   14000a7f7:	add    BYTE PTR [rcx-0x5ffff8c],cl
   14000a7fd:	jne    0x14000a7ff
   14000a7ff:	add    BYTE PTR [rcx+rax*4],bh
   14000a802:	add    BYTE PTR [rax],al
   14000a804:	cli    
   14000a805:	jne    0x14000a807
   14000a807:	add    BYTE PTR [rcx],al
   14000a809:	add    BYTE PTR [rax],al
   14000a80b:	add    BYTE PTR [rcx],dl
   14000a80d:	or     al,BYTE PTR [rax+rax*1]
   14000a810:	or     dh,BYTE PTR [rsi+rax*1]
   14000a813:	add    BYTE PTR [rdx],cl
   14000a815:	xor    al,BYTE PTR [rsi]
   14000a817:	jo     0x14000a88f
   14000a819:	jp     0x14000a81b
   14000a81b:	add    BYTE PTR [rcx],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    ch,ah
   14000a821:	jbe    0x14000a823
   14000a823:	add    BYTE PTR [rdx],ch
   14000a825:	ja     0x14000a827
   14000a827:	add    BYTE PTR [rax-0x7f],ah
   14000a82a:	add    BYTE PTR [rax],al
   14000a82c:	add    BYTE PTR [rax],al
   14000a82e:	add    BYTE PTR [rax],al
   14000a830:	or     DWORD PTR [rcx+rax*1],eax
   14000a833:	add    BYTE PTR [rdx+riz*1],al
   14000a836:	add    BYTE PTR [rax],al
   14000a838:	jbe    0x14000a8b4
   14000a83a:	add    BYTE PTR [rax],al
   14000a83c:	add    DWORD PTR [rax],eax
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	cld    
   14000a841:	ja     0x14000a843
   14000a843:	add    BYTE PTR [rdx],dh
   14000a845:	js     0x14000a847
   14000a847:	add    BYTE PTR [rcx],al
   14000a849:	add    BYTE PTR [rax],al
   14000a84b:	add    BYTE PTR [rdx],dh
   14000a84d:	js     0x14000a84f
   14000a84f:	add    BYTE PTR [rcx],cl
   14000a851:	or     al,BYTE PTR [rax+rax*1]
   14000a854:	or     dh,BYTE PTR [rsi+rax*1]
   14000a857:	add    BYTE PTR [rdx],cl
   14000a859:	xor    al,BYTE PTR [rsi]
   14000a85b:	jo     0x14000a8d3
   14000a85d:	jp     0x14000a85f
   14000a85f:	add    BYTE PTR [rcx],al
   14000a861:	add    BYTE PTR [rax],al
   14000a863:	add    ch,bh
   14000a865:	js     0x14000a867
   14000a867:	add    BYTE PTR [rax],dh
   14000a869:	jns    0x14000a86b
   14000a86b:	add    BYTE PTR [rax+0x30000081],dl
   14000a871:	jns    0x14000a873
   14000a873:	add    BYTE PTR [rcx],al
   14000a875:	(bad)  
   14000a876:	add    al,BYTE PTR [rax]
   14000a878:	(bad)  
   14000a879:	xor    al,BYTE PTR [rdx]
   14000a87b:	push   rax
   14000a87c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740da886
   14000a882:	or     DWORD PTR [rax],eax
   14000a884:	or     eax,0x1500632
   14000a889:	or     al,0x2
   14000a88b:	add    BYTE PTR [rcx+rax*1],cl
   14000a88e:	adc    DWORD PTR [rax],eax
   14000a890:	add    DWORD PTR [rax],eax
   14000a892:	add    BYTE PTR [rax],al
   14000a894:	add    DWORD PTR [rax],ebx
   14000a896:	add    DWORD PTR [rax],eax
   14000a898:	sbb    dl,al
   14000a89a:	add    BYTE PTR [rax],al
   14000a89c:	add    DWORD PTR [rax],ebx
   14000a89e:	add    DWORD PTR [rax],eax
   14000a8a0:	sbb    dl,al
   14000a8a2:	add    BYTE PTR [rax],al
   14000a8a4:	add    DWORD PTR [rax],ebx
   14000a8a6:	add    DWORD PTR [rax],eax
   14000a8a8:	sbb    dl,al
   14000a8aa:	add    BYTE PTR [rax],al
   14000a8ac:	add    DWORD PTR [rcx],ebx
   14000a8ae:	or     al,BYTE PTR [rax]
   14000a8b0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000a8b4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000a8b8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000a8bc:	sbb    DWORD PTR [rsi+rax*1],esi
   14000a8bf:	add    BYTE PTR [rcx],bl
   14000a8c1:	xor    dl,BYTE PTR [rip+0xe0]        # 0x14000a9a7
   14000a8c7:	add    BYTE PTR [rcx],al
   14000a8c9:	add    al,0x1
   14000a8cb:	add    BYTE PTR [rdx+rdx*1],al
   14000a8ce:	add    BYTE PTR [rax],al
   14000a8d0:	add    DWORD PTR [rax],eax
   14000a8d2:	add    BYTE PTR [rax],al
   14000a8d4:	xor    BYTE PTR [rbp-0x32400000],dl
   14000a8da:	add    BYTE PTR [rax],al
   14000a8dc:	adc    al,ah
   14000a8de:	add    BYTE PTR [rax],al
   14000a8e0:	(bad)  
   14000a8e1:	test   eax,0xa9d00000
	...
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	add    DWORD PTR [rax],eax
   14000a8f2:	add    BYTE PTR [rax],al
   14000a8f4:	push   rax
   14000a8f5:	xchg   ebp,eax
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	enter  0xcd,0x0
   14000a8fc:	add    al,ah
   14000a8fe:	add    BYTE PTR [rax],al
   14000a900:	push   rax
   14000a901:	test   eax,0xa9e00000
	...
   14000a90e:	add    BYTE PTR [rax],al
   14000a910:	add    DWORD PTR [rax],eax
   14000a912:	add    BYTE PTR [rax],al
   14000a914:	jo     0x14000a8ab
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	ror    ch,1
   14000a91a:	add    BYTE PTR [rax],al
   14000a91c:	and    al,ah
   14000a91e:	add    BYTE PTR [rax],al
   14000a920:	jo     0x14000a8cb
   14000a922:	add    BYTE PTR [rax],al
   14000a924:	lock test eax,0x0
	...
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	(bad)  
   14000a951:	test   eax,0x0
	...
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	sub    BYTE PTR [rcx+0x0],0x0
	...
   14000a96f:	add    BYTE PTR [rdx+0xa9],ch
	...
   14000a981:	add    BYTE PTR [rbx+0x6f],al
   14000a984:	rex.RX jb 0x14000a9ec
   14000a987:	gs push rbp
   14000a989:	outs   dx,BYTE PTR ds:[rsi]
   14000a98a:	jne    0x14000a9ff
   14000a98c:	gs imul r12,QWORD PTR fs:[rdx+0x72],0x65697261
   14000a996:	jae    0x14000a9dd
   14000a998:	js     0x14000a99a
   14000a99a:	add    BYTE PTR [rax],al
   14000a99c:	rex.WB jae 0x14000a9f3
   14000a99f:	gs js  0x14000aa16
   14000a9a2:	push   rbp
   14000a9a3:	outs   dx,BYTE PTR ds:[rsi]
   14000a9a4:	imul   esp,DWORD PTR [rbx+0x6f],0x6564
   14000a9ab:	add    BYTE PTR [rbx+0x72],al
   14000a9ae:	gs fs push rbp
   14000a9b1:	rex.WB
   14000a9b2:	rex.XB ins DWORD PTR es:[rdi],dx
   14000a9b4:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6d6f7250
   14000a9bd:	jo     0x14000aa33
   14000a9bf:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000a9c1:	jb     0x14000aa06
   14000a9c3:	jb     0x14000aa2a
   14000a9c5:	fs outs dx,BYTE PTR gs:[rsi]
   14000a9c8:	je     0x14000aa33
   14000a9ca:	(bad)  
   14000a9cb:	ins    BYTE PTR es:[rdi],dx
   14000a9cc:	jae    0x14000aa25
	...
   14000aa02:	add    BYTE PTR [rax],al
   14000aa04:	cmp    DWORD PTR [edi+0x55],ebx
   14000aa0b:	add    BYTE PTR [rdx+rbp*4],bh
   14000aa0e:	add    BYTE PTR [rax],al
   14000aa10:	add    DWORD PTR [rax],eax
   14000aa12:	add    BYTE PTR [rax],al
   14000aa14:	add    al,BYTE PTR [rax]
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	add    al,BYTE PTR [rax]
   14000aa1a:	add    BYTE PTR [rax],al
   14000aa1c:	sub    BYTE PTR [rdx-0x55d00000],ch
   14000aa22:	add    BYTE PTR [rax],al
   14000aa24:	cmp    BYTE PTR [rdx+0x13f00000],ch
   14000aa2a:	add    BYTE PTR [rax],al
   14000aa2c:	loopne 0x14000aa41
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	rex.RX stos BYTE PTR es:[rdi],al
   14000aa32:	add    BYTE PTR [rax],al
   14000aa34:	js     0x14000a9e0
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	add    BYTE PTR [rax],al
   14000aa3a:	add    DWORD PTR [rax],eax
   14000aa3c:	ja     0x14000aaa7
   14000aa3e:	outs   dx,BYTE PTR ds:[rsi]
   14000aa3f:	jb     0x14000aab4
   14000aa41:	cs gs js 0x14000aaaa
   14000aa45:	add    BYTE PTR [rdi],bh
   14000aa47:	(bad)  
   14000aa48:	xor    DWORD PTR [rbx+0x57],eax
   14000aa4b:	push   rbx
   14000aa4c:	rex.WRB (bad) 
   14000aa4e:	outs   dx,BYTE PTR ds:[rsi]
   14000aa4f:	rex.XB jb 0x14000aabb
   14000aa52:	je     0x14000aabd
   14000aa54:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000aa57:	push   rbx
   14000aa58:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000aa5d:	outs   dx,BYTE PTR ds:[rsi]
   14000aa5e:	push   rdi
   14000aa5f:	imul   esi,DWORD PTR [rax+rbp*2+0x43],0x69646e6f
   14000aa67:	je     0x14000aad2
   14000aa69:	outs   dx,DWORD PTR ds:[rsi]
   14000aa6a:	outs   dx,BYTE PTR ds:[rsi]
   14000aa6b:	push   rsi
   14000aa6c:	(bad)  
   14000aa6d:	jb     0x14000aaaf
   14000aa6f:	rex push rcx
   14000aa71:	rex.RB
   14000aa72:	rex.B
   14000aa73:	rex.B
   14000aa74:	rex pop rax
   14000aa76:	pop    rdx
   14000aa77:	add    BYTE PTR [rdi],bh
   14000aa79:	rex.RXB
   14000aa7a:	gs je  0x14000aac6
   14000aa7d:	outs   dx,BYTE PTR ds:[rsi]
   14000aa7e:	imul   esi,DWORD PTR [rbp+rax*2+0x72],0x40726f72
   14000aa86:	rex.XB push r15
   14000aa88:	push   rbx
   14000aa89:	rex.WRB (bad) 
   14000aa8b:	outs   dx,BYTE PTR ds:[rsi]
   14000aa8c:	rex.XB jb 0x14000aaf8
   14000aa8f:	je     0x14000aafa
   14000aa91:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000aa94:	push   rbx
   14000aa95:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000aa9a:	outs   dx,BYTE PTR ds:[rsi]
   14000aa9b:	rex
   14000aa9c:	rex push rcx
   14000aa9e:	rex.RB
   14000aa9f:	rex.X
   14000aaa0:	rex.B
   14000aaa1:	rex.WXB pop r8
   14000aaa3:	pop    rdx
   14000aaa4:	add    BYTE PTR [rax],al
   14000aaa6:	add    BYTE PTR [rax],al
   14000aaa8:	shr    BYTE PTR [rdi+0x0],1
   14000aaae:	add    BYTE PTR [rax],al
   14000aab0:	add    BYTE PTR [rax],al
   14000aab2:	add    BYTE PTR [rax],al
   14000aab4:	shl    BYTE PTR [rcx-0x6ca80000],1
   14000aaba:	add    BYTE PTR [rax],al
   14000aabc:	mov    eax,0xae
   14000aac1:	add    BYTE PTR [rax],al
   14000aac3:	add    BYTE PTR [rax],al
   14000aac5:	add    BYTE PTR [rax],al
   14000aac7:	add    BYTE PTR [rsi+rsi*4-0x6dc00000],al
   14000aace:	add    BYTE PTR [rax],al
   14000aad0:	cwde   
   14000aad1:	scas   al,BYTE PTR es:[rdi]
	...
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	scas   al,BYTE PTR es:[rdi]
   14000aadd:	mov    dh,0x0
   14000aadf:	add    BYTE PTR [rax],ah
   14000aae1:	xchg   edx,eax
   14000aae2:	add    BYTE PTR [rax],al
   14000aae4:	and    BYTE PTR [rsi+0x0],ch
   14000aaea:	add    BYTE PTR [rax],al
   14000aaec:	add    BYTE PTR [rax],al
   14000aaee:	add    BYTE PTR [rax],al
   14000aaf0:	fdiv   QWORD PTR [rsi-0x6e580000]
   14000aaf6:	add    BYTE PTR [rax],al
   14000aaf8:	cwde   
   14000aaf9:	scas   eax,DWORD PTR es:[rdi]
	...
   14000ab02:	add    BYTE PTR [rax],al
   14000ab04:	cld    
   14000ab05:	mov    dh,0x0
   14000ab07:	add    BYTE PTR [rax],ah
   14000ab09:	xchg   ebx,eax
   14000ab0a:	add    BYTE PTR [rax],al
   14000ab0c:	(bad)  
   14000ab0d:	scas   al,BYTE PTR es:[rdi]
	...
   14000ab16:	add    BYTE PTR [rax],al
   14000ab18:	sub    al,0xb7
   14000ab1a:	add    BYTE PTR [rax],al
   14000ab1c:	call   0x17000abb2
   14000ab21:	scas   eax,DWORD PTR es:[rdi]
	...
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	push   rsi
   14000ab2d:	mov    bh,0x0
   14000ab2f:	add    BYTE PTR [rax-0x67ffff6e],bh
   14000ab35:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	js     0x14000aaf9
   14000ab42:	add    BYTE PTR [rax],al
   14000ab44:	and    BYTE PTR [rcx-0x52a80000],dl
	...
   14000ab52:	add    BYTE PTR [rax],al
   14000ab54:	pushf  
   14000ab55:	mov    bh,0x0
   14000ab57:	add    al,ah
   14000ab59:	nop
   14000ab5a:	add    BYTE PTR [rax],al
   14000ab5c:	call   0x14000ac0e
   14000ab61:	add    BYTE PTR [rax],al
   14000ab63:	add    BYTE PTR [rax],al
   14000ab65:	add    BYTE PTR [rax],al
   14000ab67:	add    al,al
   14000ab69:	mov    bh,0x0
   14000ab6b:	add    BYTE PTR [rax-0x6f],dh
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	and    BYTE PTR [rdi+0x0],ch
   14000ab76:	add    BYTE PTR [rax],al
   14000ab78:	add    BYTE PTR [rax],al
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	loopne 0x14000ab35
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	test   al,0x92
   14000ab82:	add    BYTE PTR [rax],al
   14000ab84:	sub    BYTE PTR [rsi+0x0],0x0
   14000ab8b:	add    BYTE PTR [rax],al
   14000ab8d:	add    BYTE PTR [rax],al
   14000ab8f:	add    BYTE PTR [rdx],al
   14000ab91:	mov    eax,0x92080000
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	shr    BYTE PTR [rbp+0x0],0x0
   14000ab9f:	add    BYTE PTR [rax],al
   14000aba1:	add    BYTE PTR [rax],al
   14000aba3:	add    BYTE PTR [rdx],ch
   14000aba5:	mov    eax,0x91480000
   14000abaa:	add    BYTE PTR [rax],al
   14000abac:	push   rax
   14000abad:	scas   al,BYTE PTR es:[rdi]
	...
   14000abb6:	add    BYTE PTR [rax],al
   14000abb8:	push   rsp
   14000abb9:	mov    eax,0x91d80000
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	or     BYTE PTR [rsi+0x0],ch
   14000abc6:	add    BYTE PTR [rax],al
   14000abc8:	add    BYTE PTR [rax],al
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	jb     0x14000ab86
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	nop
   14000abd1:	xchg   ecx,eax
   14000abd2:	add    BYTE PTR [rax],al
   14000abd4:	scas   al,BYTE PTR es:[rdi]
	...
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	xchg   esp,eax
   14000abe1:	mov    eax,0x91c80000
   14000abe6:	add    BYTE PTR [rax],al
   14000abe8:	lock scas al,BYTE PTR es:[rdi]
	...
   14000abf2:	add    BYTE PTR [rax],al
   14000abf4:	mov    ah,0xb8
   14000abf6:	add    BYTE PTR [rax],al
   14000abf8:	js     0x14000ab8c
   14000abfa:	add    BYTE PTR [rax],al
   14000abfc:	sub    BYTE PTR [rdi+0x0],0x0
   14000ac03:	add    BYTE PTR [rax],al
   14000ac05:	add    BYTE PTR [rax],al
   14000ac07:	add    al,bl
   14000ac09:	mov    eax,0x93080000
   14000ac0e:	add    BYTE PTR [rax],al
   14000ac10:	add    BYTE PTR [rdi+0x0],ch
   14000ac16:	add    BYTE PTR [rax],al
   14000ac18:	add    BYTE PTR [rax],al
   14000ac1a:	add    BYTE PTR [rax],al
   14000ac1c:	cld    
   14000ac1d:	mov    eax,0x92880000
   14000ac22:	add    BYTE PTR [rax],al
   14000ac24:	js     0x14000abd2
	...
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	or     bh,BYTE PTR [rax+rax*1+0x900000]
   14000ac37:	add    BYTE PTR [rax+0xad],ch
   14000ac3d:	add    BYTE PTR [rax],al
   14000ac3f:	add    BYTE PTR [rax],al
   14000ac41:	add    BYTE PTR [rax],al
   14000ac43:	add    BYTE PTR [rsi-0x44],al
   14000ac46:	add    BYTE PTR [rax],al
   14000ac48:	xor    BYTE PTR [rcx-0x52b80000],dl
	...
   14000ac56:	add    BYTE PTR [rax],al
   14000ac58:	mov    BYTE PTR [rax+rax*1+0x90d000],bh
	...
   14000ac77:	add    BYTE PTR [rax-0x47],ch
   14000ac7a:	add    BYTE PTR [rax],al
   14000ac7c:	add    BYTE PTR [rax],al
   14000ac7e:	add    BYTE PTR [rax],al
   14000ac80:	mov    al,0xb9
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	add    BYTE PTR [rax],al
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	and    bh,BYTE PTR [rcx+0x0]
   14000ac8e:	add    BYTE PTR [rax],al
   14000ac90:	xor    al,0xb9
   14000ac92:	add    BYTE PTR [rax],al
   14000ac94:	add    BYTE PTR [rax],al
   14000ac96:	add    BYTE PTR [rax],al
   14000ac98:	movabs rcx,0xb9c4000000000000
   14000aca2:	add    BYTE PTR [rax],al
   14000aca4:	add    BYTE PTR [rax],al
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	fidivr WORD PTR [rbx+0x0]
   14000acae:	add    BYTE PTR [rax],al
   14000acb0:	mov    edx,0xbb
   14000acb5:	add    BYTE PTR [rax],al
   14000acb7:	add    BYTE PTR [rsi+0xbb],dl
   14000acbd:	add    BYTE PTR [rax],al
   14000acbf:	add    BYTE PTR [rbx+rdi*4+0x0],bh
   14000acc3:	add    BYTE PTR [rax],al
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rsi-0x45],dl
   14000acca:	add    BYTE PTR [rax],al
   14000accc:	add    BYTE PTR [rax],al
   14000acce:	add    BYTE PTR [rax],al
   14000acd0:	cs mov ebx,0x0
   14000acd6:	add    BYTE PTR [rax],al
   14000acd8:	(bad)  
   14000acd9:	mov    ebx,0x0
   14000acde:	add    BYTE PTR [rax],al
   14000ace0:	loopne 0x14000ac9c
   14000ace2:	add    BYTE PTR [rax],al
   14000ace4:	add    BYTE PTR [rax],al
   14000ace6:	add    BYTE PTR [rax],al
   14000ace8:	scas   al,BYTE PTR es:[rdi]
   14000ace9:	mov    edx,0x0
   14000acee:	add    BYTE PTR [rax],al
   14000acf0:	xchg   esp,eax
   14000acf1:	mov    edx,0x0
   14000acf6:	add    BYTE PTR [rax],al
   14000acf8:	cmp    BYTE PTR [rdx+0x0],0x0
   14000acff:	add    BYTE PTR [rdx+rdi*4+0x0],bl
   14000ad03:	add    BYTE PTR [rax],al
   14000ad05:	add    BYTE PTR [rax],al
   14000ad07:	add    BYTE PTR [rsi-0x46],al
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	add    BYTE PTR [rax],al
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	xor    BYTE PTR [rdx+0x0],bh
   14000ad16:	add    BYTE PTR [rax],al
   14000ad18:	(bad)  
   14000ad19:	mov    edx,0x0
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	(bad)  
   14000ad21:	mov    edx,0x0
   14000ad26:	add    BYTE PTR [rax],al
   14000ad28:	repnz mov ecx,0x0
   14000ad2e:	add    BYTE PTR [rax],al
   14000ad30:	fidivr DWORD PTR [rcx+0x0]
   14000ad36:	add    BYTE PTR [rax],al
   14000ad38:	pushf  
   14000ad39:	mov    ecx,0x0
	...
   14000ad46:	add    BYTE PTR [rax],al
   14000ad48:	ins    BYTE PTR es:[rdi],dx
   14000ad49:	mov    esp,0x0
	...
   14000ad56:	add    BYTE PTR [rax],al
   14000ad58:	mov    esi,0xb4
   14000ad5d:	add    BYTE PTR [rax],al
   14000ad5f:	add    BYTE PTR [rbx+rsi*4+0x0],ch
   14000ad63:	add    BYTE PTR [rax],al
   14000ad65:	add    BYTE PTR [rax],al
   14000ad67:	add    ah,bl
   14000ad69:	mov    dl,0x0
   14000ad6b:	add    BYTE PTR [rax],al
   14000ad6d:	add    BYTE PTR [rax],al
   14000ad6f:	add    al,ah
   14000ad71:	mov    bl,0x0
   14000ad73:	add    BYTE PTR [rax],al
   14000ad75:	add    BYTE PTR [rax],al
   14000ad77:	add    ah,bh
   14000ad79:	mov    bl,0x0
   14000ad7b:	add    BYTE PTR [rax],al
   14000ad7d:	add    BYTE PTR [rax],al
   14000ad7f:	add    dh,cl
   14000ad81:	mov    bl,0x0
   14000ad83:	add    BYTE PTR [rax],al
   14000ad85:	add    BYTE PTR [rax],al
   14000ad87:	add    BYTE PTR [rsi-0x4d],al
	...
   14000ad96:	add    BYTE PTR [rax],al
   14000ad98:	xchg   BYTE PTR [rdx+0x0],dh
	...
   14000ada6:	add    BYTE PTR [rax],al
   14000ada8:	(bad)  
   14000ada9:	mov    esp,0x0
   14000adae:	add    BYTE PTR [rax],al
   14000adb0:	cs mov esp,0x0
	...
   14000adbe:	add    BYTE PTR [rax],al
   14000adc0:	push   rdx
   14000adc1:	mov    ah,0x0
   14000adc3:	add    BYTE PTR [rax],al
   14000adc5:	add    BYTE PTR [rax],al
   14000adc7:	add    BYTE PTR [rdx-0x4c],al
   14000adca:	add    BYTE PTR [rax],al
   14000adcc:	add    BYTE PTR [rax],al
   14000adce:	add    BYTE PTR [rax],al
   14000add0:	push   rsp
   14000add1:	mov    dh,0x0
   14000add3:	add    BYTE PTR [rax],al
   14000add5:	add    BYTE PTR [rax],al
   14000add7:	add    BYTE PTR [rbp+rsi*4+0x0],al
	...
   14000ade6:	add    BYTE PTR [rax],al
   14000ade8:	in     al,dx
   14000ade9:	mov    dl,0x0
   14000adeb:	add    BYTE PTR [rax],al
   14000aded:	add    BYTE PTR [rax],al
   14000adef:	add    al,dh
   14000adf1:	mov    bl,0x0
   14000adf3:	add    BYTE PTR [rax],al
   14000adf5:	add    BYTE PTR [rax],al
   14000adf7:	add    BYTE PTR [rax+0xb4],dh
	...
   14000ae05:	add    BYTE PTR [rax],al
   14000ae07:	add    BYTE PTR [rsi*4+0x0],bh
   14000ae0e:	add    BYTE PTR [rax],al
   14000ae10:	sub    dh,BYTE PTR [rbp+0x0]
	...
   14000ae1e:	add    BYTE PTR [rax],al
   14000ae20:	mov    esp,0xb2
   14000ae25:	add    BYTE PTR [rax],al
   14000ae27:	add    BYTE PTR [rax+0xb3],dl
   14000ae2d:	add    BYTE PTR [rax],al
   14000ae2f:	add    dh,ah
   14000ae31:	mov    ah,0x0
	...
   14000ae3f:	add    BYTE PTR [rax-0x4b],ah
	...
   14000ae4e:	add    BYTE PTR [rax],al
   14000ae50:	mov    dh,BYTE PTR [rax+rax*1+0x0]
	...
   14000ae5f:	add    dh,cl
   14000ae61:	mov    dl,0x0
   14000ae63:	add    BYTE PTR [rax],al
   14000ae65:	add    BYTE PTR [rax],al
   14000ae67:	add    BYTE PTR [rax+0xb2],ch
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    BYTE PTR [rdx-0x4e],cl
	...
   14000ae7e:	add    BYTE PTR [rax],al
   14000ae80:	and    dh,BYTE PTR [rax+rax*1+0x0]
   14000ae87:	add    BYTE PTR [rsi-0x4d],bh
	...
   14000ae96:	add    BYTE PTR [rax],al
   14000ae98:	sub    BYTE PTR [rdx+0x0],dh
   14000ae9e:	add    BYTE PTR [rax],al
   14000aea0:	(bad)  
   14000aea1:	mov    ah,0x0
   14000aea3:	add    BYTE PTR [rax],al
   14000aea5:	add    BYTE PTR [rax],al
   14000aea7:	add    BYTE PTR [rdx],dl
   14000aea9:	mov    ah,0x0
	...
   14000aeb7:	add    BYTE PTR [rax-0x4a],dh
   14000aeba:	add    BYTE PTR [rax],al
   14000aebc:	add    BYTE PTR [rax],al
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	mov    esp,0xb5
   14000aec5:	add    BYTE PTR [rax],al
   14000aec7:	add    dl,dl
   14000aec9:	mov    ch,0x0
   14000aecb:	add    BYTE PTR [rax],al
   14000aecd:	add    BYTE PTR [rax],al
   14000aecf:	add    BYTE PTR [rdx],bl
   14000aed1:	mov    dl,0x0
   14000aed3:	add    BYTE PTR [rax],al
   14000aed5:	add    BYTE PTR [rax],al
   14000aed7:	add    BYTE PTR [rbp+rsi*4+0x0],ch
   14000aedb:	add    BYTE PTR [rax],al
   14000aedd:	add    BYTE PTR [rax],al
   14000aedf:	add    BYTE PTR [rdx+rsi*4+0x0],bl
	...
   14000aeef:	add    BYTE PTR [rdx+0xb5],ah
	...
   14000aefd:	add    BYTE PTR [rax],al
   14000aeff:	add    BYTE PTR [rdx],dl
   14000af01:	mov    dh,0x0
   14000af03:	add    BYTE PTR [rax],al
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rsi],ah
   14000af09:	mov    dh,0x0
   14000af0b:	add    BYTE PTR [rax],al
   14000af0d:	add    BYTE PTR [rax],al
   14000af0f:	add    BYTE PTR [rax-0x4a],al
	...
   14000af1e:	add    BYTE PTR [rax],al
   14000af20:	push   rsi
   14000af21:	mov    bl,0x0
	...
   14000af2f:	add    BYTE PTR [rdx],ch
   14000af31:	mov    bl,0x0
   14000af33:	add    BYTE PTR [rax],al
   14000af35:	add    BYTE PTR [rax],al
   14000af37:	add    BYTE PTR [rsi],cl
   14000af39:	mov    bl,0x0
   14000af3b:	add    BYTE PTR [rax],al
   14000af3d:	add    BYTE PTR [rax],al
   14000af3f:	add    BYTE PTR [rdx+rsi*4+0x0],bl
   14000af46:	add    BYTE PTR [rax],al
   14000af48:	jo     0x14000aefc
   14000af4a:	add    BYTE PTR [rax],al
   14000af4c:	add    BYTE PTR [rax],al
   14000af4e:	add    BYTE PTR [rax],al
   14000af50:	(bad)  
   14000af51:	mov    ah,0x0
   14000af53:	add    BYTE PTR [rax],al
   14000af55:	add    BYTE PTR [rax],al
   14000af57:	add    BYTE PTR [rbp+rsi*4+0x0],bh
   14000af5b:	add    BYTE PTR [rax],al
   14000af5d:	add    BYTE PTR [rax],al
   14000af5f:	add    BYTE PTR [rdx],dl
   14000af61:	mov    ch,0x0
   14000af63:	add    BYTE PTR [rax],al
   14000af65:	add    BYTE PTR [rax],al
   14000af67:	add    BYTE PTR [rsi+0xb3],bl
   14000af6d:	add    BYTE PTR [rax],al
   14000af6f:	add    BYTE PTR [rdx-0x4c],dh
	...
   14000af7e:	add    BYTE PTR [rax],al
   14000af80:	add    dh,BYTE PTR [rsi+0x0]
   14000af86:	add    BYTE PTR [rax],al
   14000af88:	call   0x14000b042
	...
   14000af95:	add    BYTE PTR [rax],al
   14000af97:	add    ah,bh
   14000af99:	mov    ah,0x0
   14000af9b:	add    BYTE PTR [rax],al
   14000af9d:	add    BYTE PTR [rax],al
   14000af9f:	add    al,bh
   14000afa1:	mov    dl,0x0
   14000afa3:	add    BYTE PTR [rax],al
   14000afa5:	add    BYTE PTR [rax],al
   14000afa7:	add    BYTE PTR [rax+0xb4],bl
   14000afad:	add    BYTE PTR [rax],al
   14000afaf:	add    BYTE PTR [rdx],bh
   14000afb1:	mov    dl,0x0
   14000afb3:	add    BYTE PTR [rax],al
   14000afb5:	add    BYTE PTR [rax],al
   14000afb7:	add    BYTE PTR [rdx-0x4b],cl
   14000afba:	add    BYTE PTR [rax],al
   14000afbc:	add    BYTE PTR [rax],al
   14000afbe:	add    BYTE PTR [rax],al
   14000afc0:	mov    dh,0xb3
	...
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	(bad)  
   14000afd1:	mov    dl,0x0
   14000afd3:	add    BYTE PTR [rax],al
   14000afd5:	add    BYTE PTR [rax],al
   14000afd7:	add    al,al
   14000afd9:	mov    al,0x0
   14000afdb:	add    BYTE PTR [rax],al
   14000afdd:	add    BYTE PTR [rax],al
   14000afdf:	add    dh,ch
   14000afe1:	mov    cl,0x0
   14000afe3:	add    BYTE PTR [rax],al
   14000afe5:	add    BYTE PTR [rax],al
   14000afe7:	add    ah,ah
   14000afe9:	mov    cl,0x0
   14000afeb:	add    BYTE PTR [rax],al
   14000afed:	add    BYTE PTR [rax],al
   14000afef:	add    ah,bl
   14000aff1:	mov    cl,0x0
   14000aff3:	add    BYTE PTR [rax],al
   14000aff5:	add    BYTE PTR [rax],al
   14000aff7:	add    ah,al
   14000aff9:	mov    cl,0x0
   14000affb:	add    BYTE PTR [rax],al
   14000affd:	add    BYTE PTR [rax],al
   14000afff:	add    BYTE PTR [rdx+0xb1],bh
   14000b005:	add    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rdx+0xb1],ah
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rsi+0xb1],dl
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rdx+0xb1],al
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rax-0x4f],bh
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	add    BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	jo     0x14000afdb
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	add    BYTE PTR [rax],al
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	push   0xb1
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rsi-0x4f],dl
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	rex.R mov cl,0x0
   14000b043:	add    BYTE PTR [rax],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rsi],dh
   14000b049:	mov    cl,0x0
   14000b04b:	add    BYTE PTR [rax],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rax],ch
   14000b051:	mov    cl,0x0
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rdx],bl
   14000b059:	mov    cl,0x0
   14000b05b:	add    BYTE PTR [rax],al
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    BYTE PTR [rsi],cl
   14000b061:	mov    cl,0x0
   14000b063:	add    BYTE PTR [rax],al
   14000b065:	add    BYTE PTR [rax],al
   14000b067:	add    BYTE PTR [rcx+rsi*4],al
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	add    BYTE PTR [rax],al
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	div    BYTE PTR [rax+0x0]
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	in     al,dx
   14000b079:	mov    al,0x0
   14000b07b:	add    BYTE PTR [rax],al
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    al,ah
   14000b081:	mov    al,0x0
   14000b083:	add    BYTE PTR [rax],al
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    al,bl
   14000b089:	mov    al,0x0
   14000b08b:	add    BYTE PTR [rax],al
   14000b08d:	add    BYTE PTR [rax],al
   14000b08f:	add    ah,cl
   14000b091:	mov    al,0x0
   14000b093:	add    BYTE PTR [rax],al
   14000b095:	add    BYTE PTR [rax],al
   14000b097:	add    ah,bh
   14000b099:	mov    cl,0x0
   14000b09b:	add    BYTE PTR [rax],al
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    BYTE PTR [rsp+rdi*4+0x0],ch
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	ret    0xbc
   14000b0ab:	add    BYTE PTR [rax],al
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    ah,cl
   14000b0b1:	mov    esp,0x0
	...
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	mov    al,BYTE PTR [rbx]
   14000b0c2:	pop    rdi
   14000b0c3:	ja     0x14000b128
   14000b0c5:	jae    0x14000b130
   14000b0c7:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	add    al,0x3
   14000b0ce:	pop    rdi
   14000b0cf:	jae    0x14000b145
   14000b0d1:	jb     0x14000b141
   14000b0d3:	imul   esp,DWORD PTR [rbx+0x6d],0x44c0070
   14000b0da:	data16 jb 0x14000b142
   14000b0dd:	add    BYTE PTR gs:[rax],al
   14000b0e0:	xchg   esp,eax
   14000b0e1:	add    ebx,DWORD PTR [rdi+0x77]
   14000b0e4:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000b0e7:	imul   esp,DWORD PTR [rbx+0x6d],0x4860070
   14000b0ee:	ins    DWORD PTR es:[rdi],dx
   14000b0ef:	(bad)  
   14000b0f0:	ins    BYTE PTR es:[rdi],dx
   14000b0f1:	ins    BYTE PTR es:[rdi],dx
   14000b0f2:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f3:	movsxd eax,DWORD PTR [rax]
   14000b0f5:	add    BYTE PTR [rcx+0x3],ch
   14000b0f8:	pop    rdi
   14000b0f9:	jbe    0x14000b16e
   14000b0fb:	outs   dx,BYTE PTR ds:[rsi]
   14000b0fc:	ja     0x14000b16e
   14000b0fe:	jb     0x14000b169
   14000b100:	outs   dx,BYTE PTR ds:[rsi]
   14000b101:	je     0x14000b169
   14000b103:	add    BYTE PTR [rsi+0x4],ah
   14000b106:	imul   esi,DWORD PTR [rbx+0x64],0x74696769
   14000b10d:	add    BYTE PTR [rsi+0x75705f02],bl
   14000b113:	jb     0x14000b17a
   14000b115:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b118:	ins    BYTE PTR es:[rdi],dx
   14000b119:	add    bl,bl
   14000b11b:	add    bl,BYTE PTR [rdi+0x73]
   14000b11e:	outs   dx,BYTE PTR ds:[rsi]
   14000b11f:	ja     0x14000b194
   14000b121:	movsxd esp,DWORD PTR [rcx+0x6e]
   14000b124:	pop    di
   14000b126:	jae    0x14000b128
   14000b128:	push   rbp
   14000b129:	add    BYTE PTR [rdi+0x58],bl
   14000b12c:	movsxd esi,DWORD PTR [rax+0x74]
   14000b12f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b138:	pop    rdi
   14000b139:	(bad)  
   14000b13a:	ins    DWORD PTR es:[rdi],dx
   14000b13b:	jae    0x14000b1a4
   14000b13d:	pop    rdi
   14000b13e:	gs js  0x14000b1aa
   14000b141:	je     0x14000b143
   14000b143:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000b149:	addr32 gs je 0x14000b1ba
   14000b14d:	(bad)  
   14000b14e:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b155:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000b15b:	gs je  0x14000b1bd
   14000b15e:	(bad)  
   14000b15f:	jo     0x14000b1d1
   14000b161:	pop    rdi
   14000b162:	je     0x14000b1dd
   14000b164:	jo     0x14000b1cb
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b16f:	add    BYTE PTR [rsi],cl
   14000b171:	add    DWORD PTR [rdi+0x65],ebx
   14000b174:	js     0x14000b1df
   14000b176:	je     0x14000b178
   14000b178:	rol    DWORD PTR [rax],0x5f
   14000b17b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b17e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000b186:	jae    0x14000b1ed
   14000b188:	je     0x14000b1ff
   14000b18a:	jae    0x14000b1f1
   14000b18c:	jb     0x14000b1fb
   14000b18e:	(bad)  
   14000b18f:	je     0x14000b1f9
   14000b191:	gs jb  0x14000b206
   14000b194:	add    BYTE PTR [rax],al
   14000b196:	jge    0x14000b199
   14000b198:	pop    rdi
   14000b199:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000b1a0:	ins    DWORD PTR es:[rdi],dx
   14000b1a1:	add    BYTE PTR [rdi+0x0],dl
   14000b1a4:	pop    rdi
   14000b1a5:	pop    rdi
   14000b1a6:	rex.XB pop r15
   14000b1a8:	jae    0x14000b21a
   14000b1aa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000b1ae:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000b1b5:	ins    BYTE PTR es:[rdi],dx
   14000b1b6:	gs jb  0x14000b1b9
   14000b1b9:	add    BYTE PTR [rdi],ah
   14000b1bb:	add    DWORD PTR [rdi+0x66],ebx
   14000b1be:	ins    DWORD PTR es:[rdi],dx
   14000b1bf:	outs   dx,DWORD PTR ds:[rsi]
   14000b1c0:	fs add BYTE PTR gs:[rax],al
   14000b1c4:	rol    BYTE PTR [rax],cl
   14000b1c6:	pop    rdi
   14000b1c7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b1ca:	ins    DWORD PTR es:[rdi],dx
   14000b1cb:	outs   dx,DWORD PTR ds:[rsi]
   14000b1cc:	fs add BYTE PTR gs:[rax],al
   14000b1d0:	ins    DWORD PTR es:[rdi],dx
   14000b1d1:	jae    0x14000b249
   14000b1d3:	movsxd esi,DWORD PTR [rdx+0x74]
   14000b1d6:	cs fs ins BYTE PTR es:[rdi],dx
   14000b1d9:	ins    BYTE PTR es:[rdi],dx
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	out    0x1,al
   14000b1de:	pop    rdi
   14000b1df:	ins    BYTE PTR es:[rdi],dx
   14000b1e0:	outs   dx,DWORD PTR ds:[rsi]
   14000b1e1:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b1e4:	add    ebx,DWORD PTR [r15+0x75]
   14000b1e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b1e9:	ins    BYTE PTR es:[rdi],dx
   14000b1ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b1eb:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b1ee:	jnp    0x14000b1f0
   14000b1f0:	pop    rdi
   14000b1f1:	pop    rdi
   14000b1f2:	fs ins BYTE PTR es:[rdi],dx
   14000b1f4:	ins    BYTE PTR es:[rdi],dx
   14000b1f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b1f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b1f7:	gs js  0x14000b263
   14000b1fa:	je     0x14000b1fc
   14000b1fc:	nop
   14000b1fd:	add    bl,BYTE PTR [rdi+0x6f]
   14000b200:	outs   dx,BYTE PTR ds:[rsi]
   14000b201:	gs js  0x14000b26d
   14000b204:	je     0x14000b206
   14000b206:	(bad)  
   14000b207:	add    BYTE PTR [rdi],bh
   14000b209:	je     0x14000b270
   14000b20b:	jb     0x14000b27a
   14000b20d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000b214:	pop    rcx
   14000b215:	pop    r8
   14000b217:	pop    rax
   14000b218:	pop    rdx
   14000b219:	add    BYTE PTR [rax],cl
   14000b21b:	add    BYTE PTR [rbp+0x78],al
   14000b21e:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000b226:	jae    0x14000b228
   14000b228:	add    eax,0x74654700
   14000b22d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b22f:	ins    DWORD PTR es:[rdi],dx
   14000b230:	ins    DWORD PTR es:[rdi],dx
   14000b231:	(bad)  
   14000b232:	outs   dx,BYTE PTR ds:[rsi]
   14000b233:	imul   r13,QWORD PTR fs:[rsi+0x65],0x50057
   14000b23c:	push   rsp
   14000b23d:	jb     0x14000b2a0
   14000b23f:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000b242:	gs jae 0x14000b2b8
   14000b245:	(bad)  
   14000b246:	add    BYTE PTR gs:[eax],al
   14000b24a:	(bad)  
   14000b24b:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000b24f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000b258:	js     0x14000b2b1
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	or     al,0x0
   14000b25e:	rex.RXB
   14000b25f:	gs je  0x14000b2a5
   14000b262:	jne    0x14000b2d6
   14000b264:	jb     0x14000b2cb
   14000b266:	outs   dx,BYTE PTR ds:[rsi]
   14000b267:	je     0x14000b2b9
   14000b269:	jb     0x14000b2da
   14000b26b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b26e:	jae    0x14000b270
   14000b270:	add    BYTE PTR ss:[rdi+0x61],dl
   14000b274:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000b27c:	ins    BYTE PTR es:[edi],dx
   14000b27e:	gs rex.WRXB (bad) 
   14000b281:	push   0x65
   14000b283:	movsxd esi,DWORD PTR [rax+rax*1+0x1f]
   14000b287:	add    BYTE PTR [rdi+0x72],dl
   14000b28a:	imul   esi,DWORD PTR [rbp+riz*2+0x43],0x6f736e6f
   14000b292:	ins    BYTE PTR es:[rdi],dx
   14000b293:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000b296:	jo     0x14000b30d
   14000b298:	je     0x14000b2db
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	sub    DWORD PTR [rax],eax
   14000b29e:	push   rbx
   14000b29f:	gs je  0x14000b2e7
   14000b2a2:	jbe    0x14000b309
   14000b2a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b2a5:	je     0x14000b2a7
   14000b2a7:	add    BYTE PTR [rbx],dl
   14000b2a9:	add    BYTE PTR [rdi+0x65],al
   14000b2ac:	je     0x14000b2fb
   14000b2ae:	outs   dx,DWORD PTR ds:[rsi]
   14000b2af:	fs jne 0x14000b31e
   14000b2b2:	gs rex.W (bad) 
   14000b2b5:	outs   dx,BYTE PTR ds:[rsi]
   14000b2b6:	fs ins BYTE PTR es:[rdi],dx
   14000b2b8:	gs push rdi
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	add    BYTE PTR [rax],al
   14000b2be:	rex.RXB
   14000b2bf:	gs je  0x14000b312
   14000b2c2:	jb     0x14000b333
   14000b2c4:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b2c7:	jae    0x14000b311
   14000b2c9:	gs (bad) 
   14000b2cb:	jo     0x14000b2cd
   14000b2cd:	add    BYTE PTR [rbx],bl
   14000b2cf:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000b2d3:	fs push rbx
   14000b2d5:	je     0x14000b349
   14000b2d7:	imul   ebp,DWORD PTR [rsi+0x67],0x90057
   14000b2de:	push   rdx
   14000b2df:	gs (bad) 
   14000b2e1:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000b2e4:	outs   dx,BYTE PTR ds:[rsi]
   14000b2e5:	jae    0x14000b356
   14000b2e7:	ins    BYTE PTR es:[rdi],dx
   14000b2e8:	gs push rdi
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	pop    rcx
   14000b2ed:	add    BYTE PTR [rdi+0x72],dl
   14000b2f0:	imul   esi,DWORD PTR [rbp+riz*2+0x46],0x656c69
   14000b2f8:	add    BYTE PTR [rax],al
   14000b2fa:	rex.RXB
   14000b2fb:	gs je  0x14000b352
   14000b2fe:	jb     0x14000b361
   14000b300:	movsxd esp,DWORD PTR [rbp+0x45]
   14000b303:	outs   dx,BYTE PTR ds:[rsi]
   14000b304:	(bad)  
   14000b305:	(bad)  
   14000b306:	ins    BYTE PTR es:[rdi],dx
   14000b307:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000b30a:	(bad)  
   14000b30b:	addr32 jae 0x14000b30e
   14000b30e:	xor    eax,0x69615700
   14000b313:	je     0x14000b35b
   14000b315:	outs   dx,DWORD PTR ds:[rsi]
   14000b316:	jb     0x14000b365
   14000b318:	jne    0x14000b386
   14000b31a:	je     0x14000b385
   14000b31c:	jo     0x14000b38a
   14000b31e:	gs rex.WRXB (bad) 
   14000b321:	push   0x65
   14000b323:	movsxd esi,DWORD PTR [rbx+rsi*2+0x45]
   14000b327:	js     0x14000b329
   14000b329:	add    BYTE PTR [rax],bl
   14000b32b:	add    BYTE PTR [rcx+0x6e],cl
   14000b32e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b336:	rex.XB jb 0x14000b3a2
   14000b339:	je     0x14000b3a4
   14000b33b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b33e:	push   rbx
   14000b33f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b344:	outs   dx,BYTE PTR ds:[rsi]
   14000b345:	add    BYTE PTR [rcx],al
   14000b347:	add    BYTE PTR [rdi+0x65],al
   14000b34a:	je     0x14000b38f
   14000b34c:	outs   dx,DWORD PTR ds:[rsi]
   14000b34d:	outs   dx,BYTE PTR ds:[rsi]
   14000b34e:	jae    0x14000b3bf
   14000b350:	ins    BYTE PTR es:[rdi],dx
   14000b351:	gs rex.XB push r8
   14000b354:	add    BYTE PTR [rax],al
   14000b356:	(bad)  
   14000b357:	add    BYTE PTR [rdi+0x69],dl
   14000b35a:	fs gs rex.XB push 0x6f547261
   14000b362:	rex.WRB jne 0x14000b3d1
   14000b365:	je     0x14000b3d0
   14000b367:	rex.X jns 0x14000b3de
   14000b36a:	add    BYTE PTR gs:[rdx],al
   14000b36d:	add    BYTE PTR [rdi+0x65],al
   14000b370:	je     0x14000b3b5
   14000b372:	outs   dx,DWORD PTR ds:[rsi]
   14000b373:	outs   dx,BYTE PTR ds:[rsi]
   14000b374:	jae    0x14000b3e5
   14000b376:	ins    BYTE PTR es:[rdi],dx
   14000b377:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000b37a:	fs add BYTE PTR gs:[rax],al
   14000b37e:	or     BYTE PTR [rax],al
   14000b380:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000b382:	jb     0x14000b3f1
   14000b384:	(bad)  
   14000b385:	je     0x14000b3d4
   14000b387:	gs jae 0x14000b3fd
   14000b38a:	(bad)  
   14000b38b:	addr32 gs push rdi
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	add    eax,0x61654800
   14000b395:	jo     0x14000b3db
   14000b397:	gs jae 0x14000b40e
   14000b39a:	jb     0x14000b40b
   14000b39c:	jns    0x14000b39e
   14000b39e:	sbb    eax,0x61654c00
   14000b3a3:	jbe    0x14000b40a
   14000b3a5:	rex.XB jb 0x14000b411
   14000b3a8:	je     0x14000b413
   14000b3aa:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b3ad:	push   rbx
   14000b3ae:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b3b3:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b4:	add    BYTE PTR [rax],al
   14000b3b6:	add    al,BYTE PTR [rax]
   14000b3b8:	rex.RXB
   14000b3b9:	gs je  0x14000b410
   14000b3bc:	jb     0x14000b41f
   14000b3be:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000b3c1:	outs   dx,DWORD PTR ds:[rsi]
   14000b3c2:	addr32 addr32 gs jb 0x14000b40f
   14000b3c7:	(bad)  
   14000b3c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b3c9:	fs ins BYTE PTR es:[rdi],dx
   14000b3cb:	add    BYTE PTR gs:[rax],al
   14000b3ce:	or     eax,DWORD PTR [rax]
   14000b3d0:	push   rbx
   14000b3d1:	gs je  0x14000b417
   14000b3d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b3d5:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d6:	jae    0x14000b447
   14000b3d8:	ins    BYTE PTR es:[rdi],dx
   14000b3d9:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000b3dc:	fs add BYTE PTR gs:[rax],al
   14000b3e0:	or     eax,0x69725700
   14000b3e5:	je     0x14000b44c
   14000b3e7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b3e9:	outs   dx,BYTE PTR ds:[rsi]
   14000b3ea:	jae    0x14000b45b
   14000b3ec:	ins    BYTE PTR es:[rdi],dx
   14000b3ed:	gs push rdi
   14000b3ef:	add    BYTE PTR [rdi+0x0],al
   14000b3f2:	push   rdx
   14000b3f3:	gs (bad) 
   14000b3f5:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x47000300
   14000b3ff:	gs je  0x14000b445
   14000b402:	outs   dx,DWORD PTR ds:[rsi]
   14000b403:	outs   dx,BYTE PTR ds:[rsi]
   14000b404:	jae    0x14000b475
   14000b406:	ins    BYTE PTR es:[rdi],dx
   14000b407:	gs rex.WRXB jne 0x14000b47f
   14000b40b:	jo     0x14000b482
   14000b40d:	je     0x14000b452
   14000b40f:	push   rax
   14000b410:	add    BYTE PTR [rax],al
   14000b412:	or     al,0x0
   14000b414:	rex.RXB
   14000b415:	gs je  0x14000b46b
   14000b418:	je     0x14000b47e
   14000b41a:	rex.W (bad) 
   14000b41c:	outs   dx,BYTE PTR ds:[rsi]
   14000b41d:	fs ins BYTE PTR es:[rdi],dx
   14000b41f:	add    BYTE PTR gs:[rax],al
   14000b422:	cmp    DWORD PTR [rax],eax
   14000b424:	push   rbx
   14000b425:	gs je  0x14000b47c
   14000b428:	push   0x64616572
   14000b42d:	push   rax
   14000b42e:	jb     0x14000b495
   14000b430:	data16 gs jb 0x14000b4a6
   14000b434:	gs fs push rbp
   14000b437:	rex.WB
   14000b438:	rex.WR (bad) 
   14000b43a:	outs   dx,BYTE PTR ds:[rsi]
   14000b43b:	addr32 jne 0x14000b49f
   14000b43e:	addr32 gs jae 0x14000b442
   14000b442:	add    eax,0x74654700
   14000b447:	rex.WR (bad) 
   14000b449:	jae    0x14000b4bf
   14000b44b:	rex.RB jb 0x14000b4c0
   14000b44e:	outs   dx,DWORD PTR ds:[rsi]
   14000b44f:	jb     0x14000b451
   14000b451:	add    BYTE PTR [rip+0x74655300],cl        # 0x1b4660757
   14000b457:	rex.WR (bad) 
   14000b459:	jae    0x14000b4cf
   14000b45b:	rex.RB jb 0x14000b4d0
   14000b45e:	outs   dx,DWORD PTR ds:[rsi]
   14000b45f:	jb     0x14000b461
   14000b461:	add    BYTE PTR [rsi],dl
   14000b463:	add    BYTE PTR [rbx+0x65],dl
   14000b466:	je     0x14000b4bb
   14000b468:	je     0x14000b4ce
   14000b46a:	rex.W (bad) 
   14000b46c:	outs   dx,BYTE PTR ds:[rsi]
   14000b46d:	fs ins BYTE PTR es:[rdi],dx
   14000b46f:	add    BYTE PTR gs:[rax],al
   14000b472:	adc    DWORD PTR [rax],eax
   14000b474:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b476:	je     0x14000b4dd
   14000b478:	jb     0x14000b4bd
   14000b47a:	jb     0x14000b4e5
   14000b47c:	je     0x14000b4e7
   14000b47e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b481:	push   rbx
   14000b482:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b487:	outs   dx,BYTE PTR ds:[rsi]
   14000b488:	add    BYTE PTR [rax],al
   14000b48a:	add    DWORD PTR [rax],eax
   14000b48c:	rex.XB (bad) 
   14000b48e:	outs   dx,BYTE PTR ds:[rsi]
   14000b48f:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000b492:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b494:	rex.RB js 0x14000b497
   14000b497:	add    BYTE PTR [rdi],al
   14000b499:	add    BYTE PTR [rbp+0x6e],dl
   14000b49c:	jb     0x14000b503
   14000b49e:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000b4a6:	(bad)  
   14000b4a7:	movsxd esp,DWORD PTR [rbp+0x47]
   14000b4aa:	jne    0x14000b515
   14000b4ac:	fs jae 0x14000b4af
   14000b4af:	add    BYTE PTR [rdi],ch
   14000b4b1:	add    BYTE PTR [rdi+0x65],al
   14000b4b4:	je     0x14000b4fc
   14000b4b6:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14000b4be:	or     al,BYTE PTR [rax]
   14000b4c0:	push   rbx
   14000b4c1:	gs je  0x14000b507
   14000b4c4:	outs   dx,DWORD PTR ds:[rsi]
   14000b4c5:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c6:	jae    0x14000b537
   14000b4c8:	ins    BYTE PTR es:[rdi],dx
   14000b4c9:	gs rex.XB je 0x14000b53f
   14000b4cd:	ins    BYTE PTR es:[rdi],dx
   14000b4ce:	rex.W (bad) 
   14000b4d0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4d1:	fs ins BYTE PTR es:[rdi],dx
   14000b4d3:	gs jb  0x14000b4d6
   14000b4d6:	(bad)  
   14000b4d7:	add    BYTE PTR [rbx+0x72],al
   14000b4da:	gs (bad) 
   14000b4dc:	je     0x14000b543
   14000b4de:	rex.RB jbe 0x14000b546
   14000b4e1:	outs   dx,BYTE PTR ds:[rsi]
   14000b4e2:	je     0x14000b53b
   14000b4e4:	add    BYTE PTR [rax],al
   14000b4e6:	or     al,BYTE PTR [rax]
   14000b4e8:	rex.W
   14000b4e9:	gs (bad) 
   14000b4eb:	jo     0x14000b540
   14000b4ed:	gs je  0x14000b539
   14000b4f0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4f1:	outs   dx,WORD PTR ds:[rsi]
   14000b4f3:	jb     0x14000b562
   14000b4f5:	(bad)  
   14000b4f6:	je     0x14000b561
   14000b4f8:	outs   dx,DWORD PTR ds:[rsi]
   14000b4f9:	outs   dx,BYTE PTR ds:[rsi]
   14000b4fa:	add    BYTE PTR [rax],al
   14000b4fc:	add    DWORD PTR [rax],eax
   14000b4fe:	rex.RXB
   14000b4ff:	gs je  0x14000b556
   14000b502:	jb     0x14000b565
   14000b504:	movsxd esp,DWORD PTR [rbp+0x45]
   14000b507:	outs   dx,BYTE PTR ds:[rsi]
   14000b508:	(bad)  
   14000b509:	(bad)  
   14000b50a:	ins    BYTE PTR es:[rdi],dx
   14000b50b:	gs rex.WR
   14000b50d:	gs jbe 0x14000b575
   14000b510:	ins    BYTE PTR es:[rdi],dx
   14000b511:	add    BYTE PTR [rdi],cl
   14000b513:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000b517:	gs je  0x14000b57f
   14000b51a:	rex.XB jb 0x14000b586
   14000b51d:	je     0x14000b588
   14000b51f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b522:	push   rbx
   14000b523:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b528:	outs   dx,BYTE PTR ds:[rsi]
   14000b529:	add    BYTE PTR [rdx],al
   14000b52b:	add    BYTE PTR [rbp+rsi*2+0x70],al
   14000b52f:	ins    BYTE PTR es:[rdi],dx
   14000b530:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   14000b537:	outs   dx,BYTE PTR ds:[rsi]
   14000b538:	fs ins BYTE PTR es:[rdi],dx
   14000b53a:	add    BYTE PTR gs:[rax],al
   14000b53d:	add    BYTE PTR [rbx+0x6c],al
   14000b540:	outs   dx,DWORD PTR ds:[rsi]
   14000b541:	jae    0x14000b5a8
   14000b543:	rex.W (bad) 
   14000b545:	outs   dx,BYTE PTR ds:[rsi]
   14000b546:	fs ins BYTE PTR es:[rdi],dx
   14000b548:	add    BYTE PTR gs:[rbx],al
   14000b54b:	add    BYTE PTR [rdx+0x65],dl
   14000b54e:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000b556:	(bad)  
   14000b557:	movsxd esp,DWORD PTR [rbp+0x47]
   14000b55a:	jne    0x14000b5c5
   14000b55c:	fs jae 0x14000b5b6
   14000b55f:	add    BYTE PTR [rbx],al
   14000b561:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000b565:	(bad)  
   14000b566:	ins    BYTE PTR es:[rdi],dx
   14000b567:	rex.RX jb 0x14000b5cf
   14000b56a:	add    BYTE PTR gs:[rsi],al
   14000b56d:	add    BYTE PTR [rbx+0x72],al
   14000b570:	gs (bad) 
   14000b572:	je     0x14000b5d9
   14000b574:	push   rsp
   14000b575:	push   0x64616572
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	sub    eax,0x656c5300
   14000b581:	gs jo  0x14000b584
   14000b584:	lldt   WORD PTR [rbx+0x65]
   14000b588:	je     0x14000b5df
   14000b58a:	outs   dx,BYTE PTR ds:[rsi]
   14000b58b:	push   0x6c646e61
   14000b590:	gs fs rex.RB js 0x14000b5f8
   14000b595:	gs jo  0x14000b60c
   14000b598:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b59f:	gs jb  0x14000b5a2
   14000b5a2:	add    BYTE PTR [rax],al
   14000b5a4:	push   rcx
   14000b5a5:	jne    0x14000b60c
   14000b5a7:	jb     0x14000b622
   14000b5a9:	push   rax
   14000b5aa:	gs jb  0x14000b613
   14000b5ad:	outs   dx,DWORD PTR ds:[rsi]
   14000b5ae:	jb     0x14000b61d
   14000b5b0:	(bad)  
   14000b5b1:	outs   dx,BYTE PTR ds:[rsi]
   14000b5b2:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b5b5:	outs   dx,DWORD PTR ds:[rsi]
   14000b5b6:	jne    0x14000b626
   14000b5b8:	je     0x14000b61f
   14000b5ba:	jb     0x14000b5bc
   14000b5bc:	or     eax,0x74654700
   14000b5c1:	rex.XB jne 0x14000b636
   14000b5c4:	jb     0x14000b62b
   14000b5c6:	outs   dx,BYTE PTR ds:[rsi]
   14000b5c7:	je     0x14000b619
   14000b5c9:	jb     0x14000b63a
   14000b5cb:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b5ce:	jae    0x14000b619
   14000b5d0:	add    BYTE PTR fs:[rcx],dl
   14000b5d3:	add    BYTE PTR [rdi+0x65],al
   14000b5d6:	je     0x14000b61b
   14000b5d8:	jne    0x14000b64c
   14000b5da:	jb     0x14000b641
   14000b5dc:	outs   dx,BYTE PTR ds:[rsi]
   14000b5dd:	je     0x14000b633
   14000b5df:	push   0x64616572
   14000b5e4:	rex.WB
   14000b5e5:	add    BYTE PTR fs:[rax],al
   14000b5e8:	adc    al,0x0
   14000b5ea:	rex.RXB
   14000b5eb:	gs je  0x14000b641
   14000b5ee:	jns    0x14000b663
   14000b5f0:	je     0x14000b657
   14000b5f2:	ins    DWORD PTR es:[rdi],dx
   14000b5f3:	push   rsp
   14000b5f4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b5fb:	ins    BYTE PTR es:[rdi],dx
   14000b5fc:	gs push rsp
   14000b5fe:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000b605:	gs je  0x14000b65c
   14000b608:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b60f:	je     0x14000b611
   14000b611:	add    BYTE PTR [rdx],al
   14000b613:	add    BYTE PTR [rdx+0x74],dl
   14000b616:	ins    BYTE PTR es:[rdi],dx
   14000b617:	rex.XB (bad) 
   14000b619:	jo     0x14000b68f
   14000b61b:	jne    0x14000b68f
   14000b61d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b620:	outs   dx,BYTE PTR ds:[rsi]
   14000b621:	je     0x14000b688
   14000b623:	js     0x14000b699
   14000b625:	add    BYTE PTR [rcx],cl
   14000b627:	add    BYTE PTR [rdx+0x74],dl
   14000b62a:	ins    BYTE PTR es:[rdi],dx
   14000b62b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b62d:	outs   dx,DWORD PTR ds:[rsi]
   14000b62e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000b632:	jne    0x14000b6a2
   14000b634:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b638:	outs   dx,BYTE PTR ds:[rsi]
   14000b639:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b63b:	je     0x14000b6af
   14000b63d:	jns    0x14000b63f
   14000b63f:	add    BYTE PTR [rdi],cl
   14000b641:	add    BYTE PTR [rdx+0x74],dl
   14000b644:	ins    BYTE PTR es:[rdi],dx
   14000b645:	push   rsi
   14000b646:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000b64d:	outs   dx,BYTE PTR ds:[rsi]
   14000b64e:	ja     0x14000b6b9
   14000b650:	outs   dx,BYTE PTR ds:[rsi]
   14000b651:	add    BYTE PTR fs:[rax],al
   14000b654:	adc    DWORD PTR [rax],eax
   14000b656:	push   rbp
   14000b657:	outs   dx,BYTE PTR ds:[rsi]
   14000b658:	push   0x6c646e61
   14000b65d:	gs fs rex.RB js 0x14000b6c5
   14000b662:	gs jo  0x14000b6d9
   14000b665:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b66c:	gs jb  0x14000b66f
   14000b66f:	add    BYTE PTR [rbx+0x0],cl
   14000b672:	push   rsp
   14000b673:	gs jb  0x14000b6e3
   14000b676:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b67d:	outs   dx,DWORD PTR ds:[rsi]
   14000b67e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b681:	jae    0x14000b683
   14000b683:	add    BYTE PTR [rcx+0x70],ah
   14000b686:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e29fd
   14000b690:	outs   dx,DWORD PTR ds:[rsi]
   14000b691:	jb     0x14000b6f8
   14000b693:	sub    eax,0x636f7270
   14000b698:	gs jae 0x14000b70e
   14000b69b:	je     0x14000b705
   14000b69d:	jb     0x14000b704
   14000b69f:	(bad)  
   14000b6a0:	fs jae 0x14000b6d0
   14000b6a3:	ins    BYTE PTR es:[rdi],dx
   14000b6a4:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32e3db
   14000b6aa:	fs ins BYTE PTR es:[rdi],dx
   14000b6ac:	ins    BYTE PTR es:[rdi],dx
   14000b6ad:	add    BYTE PTR [rcx+0x70],ah
   14000b6b0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2a27
   14000b6ba:	outs   dx,DWORD PTR ds:[rsi]
   14000b6bb:	jb     0x14000b722
   14000b6bd:	sub    eax,0x636f7270
   14000b6c2:	gs jae 0x14000b738
   14000b6c5:	outs   dx,BYTE PTR gs:[rsi]
   14000b6c7:	jbe    0x14000b732
   14000b6c9:	jb     0x14000b73a
   14000b6cb:	outs   dx,BYTE PTR ds:[rsi]
   14000b6cc:	ins    DWORD PTR es:[rdi],dx
   14000b6cd:	outs   dx,BYTE PTR gs:[rsi]
   14000b6cf:	je     0x14000b6fe
   14000b6d1:	ins    BYTE PTR es:[rdi],dx
   14000b6d2:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30e40a
   14000b6d8:	fs ins BYTE PTR es:[rdi],dx
   14000b6da:	ins    BYTE PTR es:[rdi],dx
   14000b6db:	add    BYTE PTR [rcx+0x70],ah
   14000b6de:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2a55
   14000b6e8:	outs   dx,DWORD PTR ds:[rsi]
   14000b6e9:	jb     0x14000b750
   14000b6eb:	sub    eax,0x70616568
   14000b6f0:	sub    eax,0x322d316c
   14000b6f5:	sub    eax,0x6c642e30
   14000b6fa:	ins    BYTE PTR es:[rdi],dx
   14000b6fb:	add    BYTE PTR [rcx+0x70],ah
   14000b6fe:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e2a75
   14000b708:	jbe    0x14000b76f
   14000b70a:	outs   dx,BYTE PTR ds:[rsi]
   14000b70b:	je     0x14000b776
   14000b70d:	outs   dx,BYTE PTR ds:[rsi]
   14000b70e:	addr32 sub eax,0x73616c63
   14000b714:	jae    0x14000b77f
   14000b716:	movsxd esi,DWORD PTR [rax+0x72]
   14000b719:	outs   dx,DWORD PTR ds:[rsi]
   14000b71a:	jbe    0x14000b785
   14000b71c:	fs gs jb 0x14000b74d
   14000b720:	ins    BYTE PTR es:[rdi],dx
   14000b721:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30e458
   14000b727:	fs ins BYTE PTR es:[rdi],dx
   14000b729:	ins    BYTE PTR es:[rdi],dx
   14000b72a:	add    BYTE PTR [rax],al
   14000b72c:	(bad)  
   14000b72d:	jo     0x14000b798
   14000b72f:	sub    eax,0x772d736d
   14000b734:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b73b:	sub    eax,0x7262696c
   14000b740:	(bad)  
   14000b741:	jb     0x14000b7bc
   14000b743:	ins    BYTE PTR es:[rdi],dx
   14000b744:	outs   dx,DWORD PTR ds:[rsi]
   14000b745:	(bad)  
   14000b746:	fs gs jb 0x14000b777
   14000b74a:	ins    BYTE PTR es:[rdi],dx
   14000b74b:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30e483
   14000b751:	fs ins BYTE PTR es:[rdi],dx
   14000b753:	ins    BYTE PTR es:[rdi],dx
   14000b754:	add    BYTE PTR [rax],al
   14000b756:	(bad)  
   14000b757:	jo     0x14000b7c2
   14000b759:	sub    eax,0x772d736d
   14000b75e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b765:	sub    eax,0x636e7973
   14000b76a:	push   0x2d316c2d
   14000b76f:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64e5a5
   14000b775:	ins    BYTE PTR es:[rdi],dx
   14000b776:	add    BYTE PTR [rax],al
   14000b778:	(bad)  
   14000b779:	jo     0x14000b7e4
   14000b77b:	sub    eax,0x772d736d
   14000b780:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b787:	sub    eax,0x736e6f63
   14000b78c:	outs   dx,DWORD PTR ds:[rsi]
   14000b78d:	ins    BYTE PTR es:[rdi],dx
   14000b78e:	gs sub eax,0x312d326c
   14000b794:	sub    eax,0x6c642e30
   14000b799:	ins    BYTE PTR es:[rdi],dx
   14000b79a:	add    BYTE PTR [rax],al
   14000b79c:	(bad)  
   14000b79d:	jo     0x14000b808
   14000b79f:	sub    eax,0x772d736d
   14000b7a4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b7ab:	sub    eax,0x736e6f63
   14000b7b0:	outs   dx,DWORD PTR ds:[rsi]
   14000b7b1:	ins    BYTE PTR es:[rdi],dx
   14000b7b2:	gs sub eax,0x312d316c
   14000b7b8:	sub    eax,0x6c642e30
   14000b7bd:	ins    BYTE PTR es:[rdi],dx
   14000b7be:	add    BYTE PTR [rax],al
   14000b7c0:	(bad)  
   14000b7c1:	jo     0x14000b82c
   14000b7c3:	sub    eax,0x772d736d
   14000b7c8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b7cf:	sub    eax,0x656c6966
   14000b7d4:	sub    eax,0x322d316c
   14000b7d9:	sub    eax,0x6c642e31
   14000b7de:	ins    BYTE PTR es:[rdi],dx
   14000b7df:	add    BYTE PTR [rcx+0x70],ah
   14000b7e2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2b59
   14000b7ec:	outs   dx,DWORD PTR ds:[rsi]
   14000b7ed:	jb     0x14000b854
   14000b7ef:	sub    eax,0x69727473
   14000b7f4:	outs   dx,BYTE PTR ds:[rsi]
   14000b7f5:	addr32 sub eax,0x312d316c
   14000b7fb:	sub    eax,0x6c642e30
   14000b800:	ins    BYTE PTR es:[rdi],dx
   14000b801:	add    BYTE PTR [rcx+0x70],ah
   14000b804:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2b7b
   14000b80e:	outs   dx,DWORD PTR ds:[rsi]
   14000b80f:	jb     0x14000b876
   14000b811:	sub    eax,0x61636f6c
   14000b816:	ins    BYTE PTR es:[rdi],dx
   14000b817:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000b81e:	sub    eax,0x322d316c
   14000b823:	sub    eax,0x6c642e31
   14000b828:	ins    BYTE PTR es:[rdi],dx
   14000b829:	add    BYTE PTR [rcx+0x70],ah
   14000b82c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2ba3
   14000b836:	outs   dx,DWORD PTR ds:[rsi]
   14000b837:	jb     0x14000b89e
   14000b839:	sub    eax,0x6f727265
   14000b83e:	jb     0x14000b8a8
   14000b840:	(bad)  
   14000b841:	outs   dx,BYTE PTR ds:[rsi]
   14000b842:	fs ins BYTE PTR es:[rdi],dx
   14000b844:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000b84b:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64e682
   14000b851:	ins    BYTE PTR es:[rdi],dx
   14000b852:	add    BYTE PTR [rax],al
   14000b854:	(bad)  
   14000b855:	jo     0x14000b8c0
   14000b857:	sub    eax,0x772d736d
   14000b85c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b863:	sub    eax,0x6c2d6f69
   14000b868:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31e59f
   14000b86e:	fs ins BYTE PTR es:[rdi],dx
   14000b870:	ins    BYTE PTR es:[rdi],dx
   14000b871:	add    BYTE PTR [rcx+0x70],ah
   14000b874:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2beb
   14000b87e:	outs   dx,DWORD PTR ds:[rsi]
   14000b87f:	jb     0x14000b8e6
   14000b881:	sub    eax,0x646e6168
   14000b886:	ins    BYTE PTR es:[rdi],dx
   14000b887:	gs sub eax,0x312d316c
   14000b88d:	sub    eax,0x6c642e30
   14000b892:	ins    BYTE PTR es:[rdi],dx
   14000b893:	add    BYTE PTR [rcx+0x70],ah
   14000b896:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2c0d
   14000b8a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b8a1:	jb     0x14000b908
   14000b8a3:	sub    eax,0x70616568
   14000b8a8:	sub    eax,0x312d326c
   14000b8ad:	sub    eax,0x6c642e30
   14000b8b2:	ins    BYTE PTR es:[rdi],dx
   14000b8b3:	add    BYTE PTR [rcx+0x70],ah
   14000b8b6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2c2d
   14000b8c0:	outs   dx,DWORD PTR ds:[rsi]
   14000b8c1:	jb     0x14000b928
   14000b8c3:	sub    eax,0x666f7270
   14000b8c8:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000b8d0:	sub    eax,0x6c642e30
   14000b8d5:	ins    BYTE PTR es:[rdi],dx
   14000b8d6:	add    BYTE PTR [rax],al
   14000b8d8:	(bad)  
   14000b8d9:	jo     0x14000b944
   14000b8db:	sub    eax,0x772d736d
   14000b8e0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b8e7:	sub    eax,0x69737973
   14000b8ec:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ed:	outs   dx,WORD PTR ds:[rsi]
   14000b8ef:	sub    eax,0x322d316c
   14000b8f4:	sub    eax,0x6c642e31
   14000b8f9:	ins    BYTE PTR es:[rdi],dx
   14000b8fa:	add    BYTE PTR [rax],al
   14000b8fc:	(bad)  
   14000b8fd:	jo     0x14000b968
   14000b8ff:	sub    eax,0x772d736d
   14000b904:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b90b:	sub    eax,0x736c7472
   14000b910:	jne    0x14000b982
   14000b912:	jo     0x14000b983
   14000b914:	jb     0x14000b98a
   14000b916:	sub    eax,0x322d316c
   14000b91b:	sub    eax,0x6c642e30
   14000b920:	ins    BYTE PTR es:[rdi],dx
   14000b921:	add    BYTE PTR [rsi+rcx*1],ch
   14000b924:	push   rdi
   14000b925:	push   rbx
   14000b926:	rex.WRB (bad) 
   14000b928:	outs   dx,BYTE PTR ds:[rsi]
   14000b929:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b92b:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b933:	add    BYTE PTR [rbx],dl
   14000b935:	(bad)  
   14000b936:	push   rdi
   14000b937:	push   rbx
   14000b938:	rex.WRB (bad) 
   14000b93a:	outs   dx,BYTE PTR ds:[rsi]
   14000b93b:	rex.XB jb 0x14000b9a3
   14000b93e:	(bad)  
   14000b93f:	je     0x14000b9a6
   14000b941:	push   rbx
   14000b942:	push   0x6c6c65
   14000b947:	add    BYTE PTR [rdx+0x72463f08],bh
   14000b94d:	gs gs rex push rdi
   14000b951:	push   rbx
   14000b952:	rex.WRB (bad) 
   14000b954:	outs   dx,BYTE PTR ds:[rsi]
   14000b955:	rex.WRB
   14000b956:	gs ins DWORD PTR es:[rdi],dx
   14000b958:	outs   dx,DWORD PTR ds:[rsi]
   14000b959:	jb     0x14000b9d4
   14000b95b:	rex
   14000b95c:	rex push rbx
   14000b95e:	pop    r8
   14000b960:	push   rax
   14000b961:	rex.RB
   14000b962:	pop    r8
   14000b964:	rex.W
   14000b965:	rex pop rdx
   14000b967:	add    BYTE PTR [rbp+0x6c413f07],cl
   14000b96d:	ins    BYTE PTR es:[rdi],dx
   14000b96e:	outs   dx,DWORD PTR ds:[rsi]
   14000b96f:	movsxd eax,DWORD PTR [rax+0x57]
   14000b972:	push   rbx
   14000b973:	rex.WRB (bad) 
   14000b975:	outs   dx,BYTE PTR ds:[rsi]
   14000b976:	rex.WRB
   14000b977:	gs ins DWORD PTR es:[rdi],dx
   14000b979:	outs   dx,DWORD PTR ds:[rsi]
   14000b97a:	jb     0x14000b9f5
   14000b97c:	rex
   14000b97d:	rex push rbx
   14000b97f:	push   r8
   14000b981:	rex.RB
   14000b982:	pop    r8
   14000b984:	pop    rdi
   14000b985:	rex.WXB
   14000b986:	rex.W push rdi
   14000b988:	xor    al,0x5f
   14000b98a:	imul   r14,QWORD PTR [rbx+r14*2+0x46],0x746c7561
   14000b993:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000b995:	fs gs rex
   14000b998:	rex
   14000b999:	rex pop rdx
   14000b99b:	add    BYTE PTR [rip+0x4d53570e],al        # 0x18d5410af
   14000b9a1:	(bad)  
   14000b9a2:	outs   dx,BYTE PTR ds:[rsi]
   14000b9a3:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b9a5:	outs   dx,DWORD PTR ds:[rsi]
   14000b9a6:	jae    0x14000ba0d
   14000b9a8:	push   rbx
   14000b9a9:	gs jae 0x14000ba1f
   14000b9ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x570e5100
   14000b9b3:	push   rbx
   14000b9b4:	rex.WRB (bad) 
   14000b9b6:	outs   dx,BYTE PTR ds:[rsi]
   14000b9b7:	push   rbx
   14000b9b8:	imul   esp,DWORD PTR [rdi+0x6e],0x68536c61
   14000b9bf:	gs ins BYTE PTR es:[rdi],dx
   14000b9c1:	ins    BYTE PTR es:[rdi],dx
   14000b9c2:	add    BYTE PTR [rax],al
   14000b9c4:	adc    DWORD PTR [rsi],ecx
   14000b9c6:	push   rdi
   14000b9c7:	push   rbx
   14000b9c8:	rex.WRB (bad) 
   14000b9ca:	outs   dx,BYTE PTR ds:[rsi]
   14000b9cb:	rex.XB jb 0x14000ba33
   14000b9ce:	(bad)  
   14000b9cf:	je     0x14000ba36
   14000b9d1:	push   rbx
   14000b9d2:	gs jae 0x14000ba48
   14000b9d5:	imul   ebp,DWORD PTR [rdi+0x6e],0xe500000
   14000b9dc:	push   rdi
   14000b9dd:	push   rbx
   14000b9de:	rex.WRB (bad) 
   14000b9e0:	outs   dx,BYTE PTR ds:[rsi]
   14000b9e1:	push   rbx
   14000b9e2:	gs je  0x14000ba38
   14000b9e5:	gs jae 0x14000ba5b
   14000b9e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14000b9ef:	outs   dx,DWORD PTR ds:[rsi]
   14000b9f0:	outs   dx,BYTE PTR ds:[rsi]
   14000b9f1:	add    bh,bh
   14000b9f3:	or     eax,0x614d5357
   14000b9f8:	outs   dx,BYTE PTR ds:[rsi]
   14000b9f9:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b9fb:	outs   dx,DWORD PTR ds:[rsi]
   14000b9fc:	jae    0x14000ba63
   14000b9fe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ba00:	ins    DWORD PTR es:[rdi],dx
   14000ba01:	ins    DWORD PTR es:[rdi],dx
   14000ba02:	(bad)  
   14000ba03:	outs   dx,BYTE PTR ds:[rsi]
   14000ba04:	add    BYTE PTR fs:[rbp+0xe],cl
   14000ba08:	push   rdi
   14000ba09:	push   rbx
   14000ba0a:	rex.WRB (bad) 
   14000ba0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ba0d:	push   rdx
   14000ba0e:	jne    0x14000ba7e
   14000ba10:	push   rbx
   14000ba11:	push   0x436c6c65
   14000ba16:	outs   dx,DWORD PTR ds:[rsi]
   14000ba17:	ins    DWORD PTR es:[rdi],dx
   14000ba18:	ins    DWORD PTR es:[rdi],dx
   14000ba19:	(bad)  
   14000ba1a:	outs   dx,BYTE PTR ds:[rsi]
   14000ba1b:	add    BYTE PTR fs:[rax],al
   14000ba1e:	(bad)  
   14000ba1f:	(bad)  
   14000ba20:	push   rdi
   14000ba21:	push   rbx
   14000ba22:	rex.WRB (bad) 
   14000ba24:	outs   dx,BYTE PTR ds:[rsi]
   14000ba25:	rex.XB ins BYTE PTR es:[rdi],dx
   14000ba27:	outs   dx,DWORD PTR ds:[rsi]
   14000ba28:	jae    0x14000ba8f
   14000ba2a:	push   rbx
   14000ba2b:	push   0x6c6c65
   14000ba30:	add    ecx,DWORD PTR [rsi]
   14000ba32:	push   rdi
   14000ba33:	push   rbx
   14000ba34:	rex.WRB (bad) 
   14000ba36:	outs   dx,BYTE PTR ds:[rsi]
   14000ba37:	rex.XB ins BYTE PTR es:[rdi],dx
   14000ba39:	outs   dx,DWORD PTR ds:[rsi]
   14000ba3a:	jae    0x14000baa1
   14000ba3c:	rex.WRXB jo 0x14000baa4
   14000ba3f:	jb     0x14000baa2
   14000ba41:	je     0x14000baac
   14000ba43:	outs   dx,DWORD PTR ds:[rsi]
   14000ba44:	outs   dx,BYTE PTR ds:[rsi]
   14000ba45:	add    BYTE PTR [rdi+0xe],cl
   14000ba48:	push   rdi
   14000ba49:	push   rbx
   14000ba4a:	rex.WRB (bad) 
   14000ba4c:	outs   dx,BYTE PTR ds:[rsi]
   14000ba4d:	push   rbx
   14000ba4e:	outs   dx,BYTE PTR gs:[rsi]
   14000ba50:	fs push rbx
   14000ba52:	push   0x496c6c65
   14000ba57:	outs   dx,BYTE PTR ds:[rsi]
   14000ba58:	jo     0x14000bacf
   14000ba5a:	je     0x14000ba5c
   14000ba5c:	rex.X add al,0x3f
   14000ba5f:	(bad)  
   14000ba60:	xor    DWORD PTR [rbx+0x57],eax
   14000ba63:	push   rbx
   14000ba64:	rex.WRB (bad) 
   14000ba66:	outs   dx,BYTE PTR ds:[rsi]
   14000ba67:	rex.XB jb 0x14000bad3
   14000ba6a:	je     0x14000bad5
   14000ba6c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ba6f:	push   rbx
   14000ba70:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ba75:	outs   dx,BYTE PTR ds:[rsi]
   14000ba76:	rex
   14000ba77:	rex push rcx
   14000ba79:	rex.RB
   14000ba7a:	rex.B
   14000ba7b:	rex.B
   14000ba7c:	rex pop rax
   14000ba7e:	pop    rdx
   14000ba7f:	add    BYTE PTR [rsi],dl
   14000ba81:	(bad)  
   14000ba82:	push   rdi
   14000ba83:	push   rbx
   14000ba84:	rex.WRB (bad) 
   14000ba86:	outs   dx,BYTE PTR ds:[rsi]
   14000ba87:	rex.R
   14000ba88:	imul   ebp,DWORD PTR gs:[rsi+0x69],0x6c616974
   14000ba90:	imul   edi,DWORD PTR [rdx+0x65],0x570e4900
   14000ba97:	push   rbx
   14000ba98:	rex.WRB (bad) 
   14000ba9a:	outs   dx,BYTE PTR ds:[rsi]
   14000ba9b:	push   rdx
   14000ba9c:	movsxd esp,DWORD PTR gs:[rbp+0x69]
   14000baa0:	jbe    0x14000bb07
   14000baa2:	push   rbx
   14000baa3:	push   0x4f6c6c65
   14000baa8:	jne    0x14000bb1e
   14000baaa:	jo     0x14000bb21
   14000baac:	je     0x14000baae
   14000baae:	lock add al,0x3f
   14000bab1:	(bad)  
   14000bab2:	xor    al,0x3f
   14000bab4:	and    al,0x41
   14000bab6:	jne    0x14000bb2c
   14000bab8:	outs   dx,DWORD PTR ds:[rsi]
   14000bab9:	rex.R
   14000baba:	gs ins BYTE PTR es:[rdi],dx
   14000babc:	gs je  0x14000bb24
   14000babf:	push   rsi
   14000bac0:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000bac5:	rex push rax
   14000bac7:	rex.RB
   14000bac8:	rex.X
   14000bac9:	rex.RXB
   14000baca:	rex
   14000bacb:	rex push rcx
   14000bacd:	rex.RB
   14000bace:	rex.B
   14000bacf:	rex.B
   14000bad0:	rex.B
   14000bad1:	rex.RB
   14000bad2:	push   r14
   14000bad4:	xor    BYTE PTR [rax+0x50],al
   14000bad7:	rex.RB
   14000bad8:	push   r8
   14000bada:	rex.RB
   14000badb:	rex.X
   14000badc:	rex.RXB
   14000badd:	rex pop rdx
   14000badf:	add    BYTE PTR [rcx+rax*1],ah
   14000bae2:	(bad)  
   14000bae3:	(bad)  
   14000bae4:	xor    BYTE PTR [rdi],bh
   14000bae6:	and    al,0x41
   14000bae8:	jne    0x14000bb5e
   14000baea:	outs   dx,DWORD PTR ds:[rsi]
   14000baeb:	rex.R
   14000baec:	gs ins BYTE PTR es:[rdi],dx
   14000baee:	gs je  0x14000bb56
   14000baf1:	push   rsi
   14000baf2:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000baf7:	rex push rax
   14000baf9:	rex.RB
   14000bafa:	rex.X
   14000bafb:	rex.RXB
   14000bafc:	rex
   14000bafd:	rex push rcx
   14000baff:	rex.RB
   14000bb00:	rex.B
   14000bb01:	rex.B
   14000bb02:	rex pop rax
   14000bb04:	pop    rdx
   14000bb05:	add    BYTE PTR [rdx],bl
   14000bb07:	add    DWORD PTR [rdi],edi
   14000bb09:	(bad)  
   14000bb0a:	xor    BYTE PTR [rdi],bh
   14000bb0c:	and    al,0x41
   14000bb0e:	jne    0x14000bb84
   14000bb10:	outs   dx,DWORD PTR ds:[rsi]
   14000bb11:	rex.R
   14000bb12:	gs ins BYTE PTR es:[rdi],dx
   14000bb14:	gs je  0x14000bb7c
   14000bb17:	push   rsi
   14000bb18:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000bb1d:	rex
   14000bb1e:	rex.R
   14000bb1f:	rex
   14000bb20:	rex push rcx
   14000bb22:	rex.RB
   14000bb23:	rex.B
   14000bb24:	rex.B
   14000bb25:	rex push rax
   14000bb27:	rex.RB
   14000bb28:	rex.B
   14000bb29:	rex.R
   14000bb2a:	rex pop rdx
   14000bb2c:	add    BYTE PTR [rax],al
   14000bb2e:	sbb    al,0x1
   14000bb30:	(bad)  
   14000bb31:	(bad)  
   14000bb32:	xor    BYTE PTR [rdi],bh
   14000bb34:	and    al,0x41
   14000bb36:	jne    0x14000bbac
   14000bb38:	outs   dx,DWORD PTR ds:[rsi]
   14000bb39:	rex.R
   14000bb3a:	gs ins BYTE PTR es:[rdi],dx
   14000bb3c:	gs je  0x14000bba4
   14000bb3f:	push   rsi
   14000bb40:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000bb45:	rex
   14000bb46:	rex.RB
   14000bb47:	rex
   14000bb48:	rex push rcx
   14000bb4a:	rex.RB
   14000bb4b:	rex.B
   14000bb4c:	rex.B
   14000bb4d:	rex push rax
   14000bb4f:	rex.RB
   14000bb50:	rex.B
   14000bb51:	rex.RB
   14000bb52:	rex pop rdx
   14000bb54:	add    BYTE PTR [rax],al
   14000bb56:	rex.WRXB add r15,QWORD PTR [r15]
   14000bb59:	(bad)  
   14000bb5a:	xor    DWORD PTR [rdi],edi
   14000bb5c:	and    al,0x41
   14000bb5e:	jne    0x14000bbd4
   14000bb60:	outs   dx,DWORD PTR ds:[rsi]
   14000bb61:	rex.R
   14000bb62:	gs ins BYTE PTR es:[rdi],dx
   14000bb64:	gs je  0x14000bbcc
   14000bb67:	push   rsi
   14000bb68:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000bb6d:	rex push rax
   14000bb6f:	rex.RB
   14000bb70:	rex.X
   14000bb71:	rex.RXB
   14000bb72:	rex
   14000bb73:	rex push rcx
   14000bb75:	rex.RB
   14000bb76:	rex.B
   14000bb77:	rex.B
   14000bb78:	rex pop rax
   14000bb7a:	pop    rdx
   14000bb7b:	add    BYTE PTR [rax],dh
   14000bb7d:	add    al,0x3f
   14000bb7f:	(bad)  
   14000bb80:	xor    DWORD PTR [rcx+0x75],eax
   14000bb83:	je     0x14000bbf4
   14000bb85:	imul   r12,QWORD PTR [rdx+0x72],0x40797261
   14000bb8d:	rex push rcx
   14000bb8f:	rex.RB
   14000bb90:	rex.B
   14000bb91:	rex.B
   14000bb92:	rex pop rax
   14000bb94:	pop    rdx
   14000bb95:	add    BYTE PTR [rdx+0x3],cl
   14000bb98:	(bad)  
   14000bb99:	(bad)  
   14000bb9a:	xor    DWORD PTR [rdi],edi
   14000bb9c:	and    al,0x41
   14000bb9e:	jne    0x14000bc14
   14000bba0:	outs   dx,DWORD PTR ds:[rsi]
   14000bba1:	rex.R
   14000bba2:	gs ins BYTE PTR es:[rdi],dx
   14000bba4:	gs je  0x14000bc0c
   14000bba7:	push   rsi
   14000bba8:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000bbad:	rex
   14000bbae:	rex.R
   14000bbaf:	rex
   14000bbb0:	rex push rcx
   14000bbb2:	rex.RB
   14000bbb3:	rex.B
   14000bbb4:	rex.B
   14000bbb5:	rex pop rax
   14000bbb7:	pop    rdx
   14000bbb8:	add    BYTE PTR [rax],al
   14000bbba:	rex.WXB add rdi,QWORD PTR [r15]
   14000bbbd:	(bad)  
   14000bbbe:	xor    DWORD PTR [rdi],edi
   14000bbc0:	and    al,0x41
   14000bbc2:	jne    0x14000bc38
   14000bbc4:	outs   dx,DWORD PTR ds:[rsi]
   14000bbc5:	rex.R
   14000bbc6:	gs ins BYTE PTR es:[rdi],dx
   14000bbc8:	gs je  0x14000bc30
   14000bbcb:	push   rsi
   14000bbcc:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000bbd1:	rex
   14000bbd2:	rex.RB
   14000bbd3:	rex
   14000bbd4:	rex push rcx
   14000bbd6:	rex.RB
   14000bbd7:	rex.B
   14000bbd8:	rex.B
   14000bbd9:	rex pop rax
   14000bbdb:	pop    rdx
   14000bbdc:	add    BYTE PTR [rax],al
   14000bbde:	add    eax,DWORD PTR [rdx]
   14000bbe0:	(bad)  
   14000bbe1:	(bad)  
   14000bbe2:	xor    BYTE PTR [rcx+0x75],al
   14000bbe5:	je     0x14000bc56
   14000bbe7:	imul   r12,QWORD PTR [rdx+0x72],0x40797261
   14000bbef:	rex push rcx
   14000bbf1:	rex.RB
   14000bbf2:	rex.B
   14000bbf3:	rex.B
   14000bbf4:	rex push rax
   14000bbf6:	rex.RB
   14000bbf7:	push   r13
   14000bbf9:	rex.W
   14000bbfa:	rex.WB
   14000bbfb:	rex.WRX push rbx
   14000bbfd:	push   rsp
   14000bbfe:	rex.B
   14000bbff:	rex.WRX
   14000bc00:	rex.XB
   14000bc01:	rex.RB pop r15
   14000bc03:	pop    rdi
   14000bc04:	rex
   14000bc05:	rex
   14000bc06:	rex pop rdx
   14000bc08:	add    BYTE PTR [rax],al
   14000bc0a:	push   rdi
   14000bc0b:	jae    0x14000bc7a
   14000bc0d:	push   rbx
   14000bc0e:	jbe    0x14000bc73
   14000bc10:	cs rex.R
   14000bc12:	rex.WR
   14000bc13:	rex.WR add BYTE PTR [rax],r8b
   14000bc16:	add    DWORD PTR [rax],eax
   14000bc18:	push   rdx
   14000bc19:	gs jae 0x14000bc8b
   14000bc1c:	ins    BYTE PTR es:[rdi],dx
   14000bc1d:	jbe    0x14000bc84
   14000bc1f:	rex.R
   14000bc20:	gs ins BYTE PTR es:[rdi],dx
   14000bc22:	(bad)  
   14000bc23:	jns    0x14000bc71
   14000bc25:	outs   dx,DWORD PTR ds:[rsi]
   14000bc26:	(bad)  
   14000bc27:	fs gs fs push r8
   14000bc2c:	rex.WB add BYTE PTR [r8],al
   14000bc2f:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000bc33:	(bad)  
   14000bc34:	jns    0x14000bc82
   14000bc36:	outs   dx,DWORD PTR ds:[rsi]
   14000bc37:	(bad)  
   14000bc38:	fs rex.RX (bad) 
   14000bc3b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000bc43:	imul   eax,DWORD PTR [rax],0x0
   14000bc46:	(bad)  
   14000bc47:	jo     0x14000bcb2
   14000bc49:	sub    eax,0x772d736d
   14000bc4e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bc55:	sub    eax,0x616c6564
   14000bc5a:	jns    0x14000bcc8
   14000bc5c:	outs   dx,DWORD PTR ds:[rsi]
   14000bc5d:	(bad)  
   14000bc5e:	fs sub eax,0x312d316c
   14000bc64:	sub    eax,0x6c642e31
   14000bc69:	ins    BYTE PTR es:[rdi],dx
   14000bc6a:	add    BYTE PTR [rax],al
   14000bc6c:	add    BYTE PTR [rax],al
   14000bc6e:	rex.B jo 0x14000bcda
   14000bc71:	push   rbx
   14000bc72:	gs je  0x14000bcc6
   14000bc75:	jne    0x14000bcdc
   14000bc77:	jb     0x14000bcf2
   14000bc79:	rex.B jo 0x14000bce5
   14000bc7c:	push   rbx
   14000bc7d:	gs je  0x14000bcd0
   14000bc80:	jb     0x14000bce7
   14000bc82:	jae    0x14000bce9
   14000bc84:	outs   dx,BYTE PTR ds:[rsi]
   14000bc85:	movsxd esp,DWORD PTR [rbp+0x0]
   14000bc88:	(bad)  
   14000bc89:	jo     0x14000bcf4
   14000bc8b:	sub    eax,0x772d736d
   14000bc90:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bc97:	sub    eax,0x71697061
   14000bc9c:	jne    0x14000bd03
   14000bc9e:	jb     0x14000bd19
   14000bca0:	sub    eax,0x312d316c
   14000bca5:	sub    eax,0x6c642e30
   14000bcaa:	ins    BYTE PTR es:[rdi],dx
   14000bcab:	add    BYTE PTR [rbx+0x0],bl
   14000bcae:	pop    rdi
   14000bcaf:	pop    rdi
   14000bcb0:	rex.XB js 0x14000bd2b
   14000bcb3:	rex.RX jb 0x14000bd17
   14000bcb6:	ins    DWORD PTR es:[rdi],dx
   14000bcb7:	gs rex.W (bad) 
   14000bcba:	outs   dx,BYTE PTR ds:[rsi]
   14000bcbb:	fs ins BYTE PTR es:[rdi],dx
   14000bcbd:	gs jb  0x14000bcf3
   14000bcc0:	add    BYTE PTR [rax],al
   14000bcc2:	xchg   edx,eax
   14000bcc3:	add    al,0x6d
   14000bcc5:	gs ins DWORD PTR es:[rdi],dx
   14000bcc7:	movsxd esi,DWORD PTR [rax+0x79]
   14000bcca:	add    BYTE PTR [rax],al
   14000bccc:	xchg   esi,eax
   14000bccd:	add    al,0x6d
   14000bccf:	gs ins DWORD PTR es:[rdi],dx
   14000bcd1:	jae    0x14000bd38
   14000bcd3:	je     0x14000bcd5
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    DWORD PTR [rax],eax
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	int    0x5d
   14000c012:	and    dl,dl
   14000c014:	data16 (bad) 
   14000c016:	(bad)  
   14000c017:	inc    DWORD PTR [rax]
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rcx],al
   14000c021:	add    BYTE PTR [rax],al
   14000c023:	add    BYTE PTR [rax],al
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rcx],al
   14000c029:	add    BYTE PTR [rax],al
   14000c02b:	add    BYTE PTR [rax],al
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rcx],al
   14000c031:	add    BYTE PTR [rax],al
   14000c033:	add    BYTE PTR [rax],al
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],bh
   14000c039:	rol    BYTE PTR [rax],0x40
   14000c03c:	add    DWORD PTR [rax],eax
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	add    DWORD PTR [rax],eax
	...
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	(bad)  
   14000c051:	xchg   esi,eax
   14000c052:	add    BYTE PTR [rax+0x1],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rdx],al
   14000c059:	add    BYTE PTR [rax],al
   14000c05b:	add    BYTE PTR [rax],al
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rax],dh
   14000c061:	rol    BYTE PTR [rax],0x40
   14000c064:	add    DWORD PTR [rax],eax
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	adc    BYTE PTR [rsi+0x14000],0x0
   14000c06f:	add    BYTE PTR [rdx],al
   14000c071:	add    BYTE PTR [rax],al
   14000c073:	add    BYTE PTR [rax],al
   14000c075:	add    BYTE PTR [rax],al
   14000c077:	add    BYTE PTR [rax],dh
   14000c079:	rol    BYTE PTR [rax],0x40
   14000c07c:	add    DWORD PTR [rax],eax
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	movabs al,ds:0x1400096
   14000c089:	or     BYTE PTR [rax],al
   14000c08b:	add    BYTE PTR [rax],al
   14000c08d:	add    BYTE PTR [rax],al
   14000c08f:	add    BYTE PTR [rax],dh
   14000c091:	rol    BYTE PTR [rax],0x40
   14000c094:	add    DWORD PTR [rax],eax
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	rcl    BYTE PTR [rsi+0x14000],0x0
   14000c09f:	add    BYTE PTR [rax],al
   14000c0a1:	or     BYTE PTR [rax],al
   14000c0a3:	add    BYTE PTR [rax],al
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax],dh
   14000c0a9:	rol    BYTE PTR [rax],0x40
   14000c0ac:	add    DWORD PTR [rax],eax
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	loopne 0x14000c048
   14000c0b2:	add    BYTE PTR [rax+0x1],al
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax],dl
   14000c0b9:	add    BYTE PTR [rax],al
   14000c0bb:	add    BYTE PTR [rax],al
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rax+0x14000ce],ah
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rax],al
   14000c0c9:	xchg   edi,eax
   14000c0ca:	add    BYTE PTR [rax+0x1],al
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rax],dl
   14000c0d1:	add    BYTE PTR [rax],al
   14000c0d3:	add    BYTE PTR [rax],al
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rax+0x14000ce],ah
   14000c0dd:	add    BYTE PTR [rax],al
   14000c0df:	add    BYTE PTR [rax],ah
   14000c0e1:	xchg   edi,eax
   14000c0e2:	add    BYTE PTR [rax+0x1],al
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rcx],al
   14000c0e9:	add    BYTE PTR [rax],al
   14000c0eb:	add    BYTE PTR [rax],al
   14000c0ed:	add    BYTE PTR [rax],al
   14000c0ef:	add    al,ch
   14000c0f1:	int    0x0
   14000c0f3:	rex add DWORD PTR [rax],eax
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	cmp    BYTE PTR [rdi+0x14000],dl
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	add    BYTE PTR [rax+rax*1],al
   14000c103:	add    BYTE PTR [rax],al
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    al,ch
   14000c109:	int    0x0
   14000c10b:	rex add DWORD PTR [rax],eax
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	push   rax
   14000c111:	xchg   edi,eax
   14000c112:	add    BYTE PTR [rax+0x1],al
   14000c115:	add    BYTE PTR [rax],al
   14000c117:	add    BYTE PTR [rcx],al
   14000c119:	add    BYTE PTR [rax],al
   14000c11b:	add    BYTE PTR [rax],al
   14000c11d:	add    BYTE PTR [rax],al
   14000c11f:	add    al,ch
   14000c121:	int    0x0
   14000c123:	rex add DWORD PTR [rax],eax
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	push   0x1400097
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    BYTE PTR [rax],al
   14000c131:	add    al,0x0
   14000c133:	add    BYTE PTR [rax],al
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    al,ch
   14000c139:	int    0x0
   14000c13b:	rex add DWORD PTR [rax],eax
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	adc    BYTE PTR [rdi+0x14000],0x0
   14000c147:	add    BYTE PTR [rax+0x0],al
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	add    BYTE PTR [rax],al
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	or     dh,cl
   14000c152:	add    BYTE PTR [rax+0x1],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rax+0x1400097],bl
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    BYTE PTR [rax],al
   14000c161:	add    BYTE PTR [rax],al
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	or     dh,cl
   14000c16a:	add    BYTE PTR [rax+0x1],al
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rax+0x1400097],dh
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rax+0x0],al
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	add    BYTE PTR [rax],al
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	or     dh,cl
   14000c182:	add    BYTE PTR [rax+0x1],al
   14000c185:	add    BYTE PTR [rax],al
   14000c187:	add    al,cl
   14000c189:	xchg   edi,eax
   14000c18a:	add    BYTE PTR [rax+0x1],al
   14000c18d:	add    BYTE PTR [rax],al
   14000c18f:	add    BYTE PTR [rax],al
   14000c191:	add    BYTE PTR [rax],al
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	or     dh,cl
   14000c19a:	add    BYTE PTR [rax+0x1],al
   14000c19d:	add    BYTE PTR [rax],al
   14000c19f:	add    al,ah
   14000c1a1:	xchg   edi,eax
   14000c1a2:	add    BYTE PTR [rax+0x1],al
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rax],ah
   14000c1a9:	add    BYTE PTR [rax],al
   14000c1ab:	add    BYTE PTR [rax],al
   14000c1ad:	add    BYTE PTR [rax],al
   14000c1af:	add    BYTE PTR [rax+0x14000ce],ch
   14000c1b5:	add    BYTE PTR [rax],al
   14000c1b7:	add    al,bh
   14000c1b9:	xchg   edi,eax
   14000c1ba:	add    BYTE PTR [rax+0x1],al
   14000c1bd:	add    BYTE PTR [rax],al
   14000c1bf:	add    BYTE PTR [rax],al
   14000c1c1:	and    BYTE PTR [rax],al
   14000c1c3:	add    BYTE PTR [rax],al
   14000c1c5:	add    BYTE PTR [rax],al
   14000c1c7:	add    BYTE PTR [rax+0x14000ce],ch
   14000c1cd:	add    BYTE PTR [rax],al
   14000c1cf:	add    BYTE PTR [rax],dl
   14000c1d1:	cwde   
   14000c1d2:	add    BYTE PTR [rax+0x1],al
   14000c1d5:	add    BYTE PTR [rax],al
   14000c1d7:	add    BYTE PTR [rax],ah
   14000c1d9:	add    BYTE PTR [rax],al
   14000c1db:	add    BYTE PTR [rax],al
   14000c1dd:	add    BYTE PTR [rax],al
   14000c1df:	add    BYTE PTR [rax+0x14000ce],ch
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    BYTE PTR [rax],ch
   14000c1e9:	cwde   
   14000c1ea:	add    BYTE PTR [rax+0x1],al
   14000c1ed:	add    BYTE PTR [rax],al
   14000c1ef:	add    BYTE PTR [rax],al
   14000c1f1:	and    BYTE PTR [rax],al
   14000c1f3:	add    BYTE PTR [rax],al
   14000c1f5:	add    BYTE PTR [rax],al
   14000c1f7:	add    BYTE PTR [rax+0x14000ce],ch
   14000c1fd:	add    BYTE PTR [rax],al
   14000c1ff:	add    BYTE PTR [rax-0x68],al
   14000c202:	add    BYTE PTR [rax+0x1],al
   14000c205:	add    BYTE PTR [rax],al
   14000c207:	add    BYTE PTR [rax+rax*1],al
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	add    BYTE PTR [rax],al
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	enter  0xce,0x40
   14000c214:	add    DWORD PTR [rax],eax
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	pop    rax
   14000c219:	cwde   
   14000c21a:	add    BYTE PTR [rax+0x1],al
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    BYTE PTR [rax],al
   14000c221:	adc    BYTE PTR [rax],al
   14000c223:	add    BYTE PTR [rax],al
   14000c225:	add    BYTE PTR [rax],al
   14000c227:	add    al,cl
   14000c229:	(bad)  
   14000c22a:	add    BYTE PTR [rax+0x1],al
   14000c22d:	add    BYTE PTR [rax],al
   14000c22f:	add    BYTE PTR [rax-0x68],dh
   14000c232:	add    BYTE PTR [rax+0x1],al
   14000c235:	add    BYTE PTR [rax],al
   14000c237:	add    BYTE PTR [rax+rax*1],al
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	add    BYTE PTR [rax],al
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	enter  0xce,0x40
   14000c244:	add    DWORD PTR [rax],eax
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	mov    BYTE PTR [rax+0x14000],bl
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	add    BYTE PTR [rax],dl
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	add    BYTE PTR [rax],al
   14000c256:	add    BYTE PTR [rax],al
   14000c258:	enter  0xce,0x40
   14000c25c:	add    DWORD PTR [rax],eax
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	movabs al,ds:0x8000000001400098
   14000c269:	add    BYTE PTR [rax],al
   14000c26b:	add    BYTE PTR [rax],al
   14000c26d:	add    BYTE PTR [rax],al
   14000c26f:	add    al,ah
   14000c271:	int    0x0
   14000c273:	rex add DWORD PTR [rax],eax
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	mov    eax,0x1400098
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    BYTE PTR [rax],al
   14000c281:	add    BYTE PTR [rax],0x0
   14000c284:	add    BYTE PTR [rax],al
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	loopne 0x14000c257
   14000c28a:	add    BYTE PTR [rax+0x1],al
   14000c28d:	add    BYTE PTR [rax],al
   14000c28f:	add    al,cl
   14000c291:	cwde   
   14000c292:	add    BYTE PTR [rax+0x1],al
   14000c295:	add    BYTE PTR [rax],al
   14000c297:	add    BYTE PTR [rax+0x0],al
   14000c29d:	add    BYTE PTR [rax],al
   14000c29f:	add    al,ah
   14000c2a1:	int    0x0
   14000c2a3:	rex add DWORD PTR [rax],eax
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	loopne 0x14000c242
   14000c2aa:	add    BYTE PTR [rax+0x1],al
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rax],al
   14000c2b1:	add    BYTE PTR [rax],0x0
   14000c2b4:	add    BYTE PTR [rax],al
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	loopne 0x14000c287
   14000c2ba:	add    BYTE PTR [rax+0x1],al
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    al,dh
   14000c2c1:	cwde   
   14000c2c2:	add    BYTE PTR [rax+0x1],al
   14000c2c5:	add    BYTE PTR [rax],al
   14000c2c7:	add    BYTE PTR [rax],al
   14000c2c9:	add    BYTE PTR [rcx],al
   14000c2cb:	add    BYTE PTR [rax],al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    al,al
   14000c2d1:	(bad)  
   14000c2d2:	add    BYTE PTR [rax+0x1],al
   14000c2d5:	add    BYTE PTR [rax],al
   14000c2d7:	add    BYTE PTR [rax],cl
   14000c2d9:	cdq    
   14000c2da:	add    BYTE PTR [rax+0x1],al
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rax],al
   14000c2e1:	add    BYTE PTR [rcx],al
   14000c2e3:	add    BYTE PTR [rax],al
   14000c2e5:	add    BYTE PTR [rax],al
   14000c2e7:	add    al,al
   14000c2e9:	(bad)  
   14000c2ea:	add    BYTE PTR [rax+0x1],al
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	add    BYTE PTR [rax],ah
   14000c2f1:	cdq    
   14000c2f2:	add    BYTE PTR [rax+0x1],al
   14000c2f5:	add    BYTE PTR [rax],al
   14000c2f7:	add    BYTE PTR [rax],cl
	...
   14000c301:	(bad)  
   14000c302:	add    BYTE PTR [rax+0x1],al
   14000c305:	add    BYTE PTR [rax],al
   14000c307:	add    BYTE PTR [rax],dh
   14000c309:	cdq    
   14000c30a:	add    BYTE PTR [rax+0x1],al
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rax],cl
	...
   14000c319:	(bad)  
   14000c31a:	add    BYTE PTR [rax+0x1],al
   14000c31d:	add    BYTE PTR [rax],al
   14000c31f:	add    BYTE PTR [rax-0x67],al
   14000c322:	add    BYTE PTR [rax+0x1],al
   14000c325:	add    BYTE PTR [rax],al
   14000c327:	add    BYTE PTR [rax],al
   14000c329:	add    DWORD PTR [rax],eax
   14000c32b:	add    BYTE PTR [rax],al
   14000c32d:	add    BYTE PTR [rax],al
   14000c32f:	add    BYTE PTR [rax-0x40],al
   14000c332:	add    BYTE PTR [rax+0x1],al
   14000c335:	add    BYTE PTR [rax],al
   14000c337:	add    BYTE PTR [rax-0x67],dl
   14000c33a:	add    BYTE PTR [rax+0x1],al
   14000c33d:	add    BYTE PTR [rax],al
   14000c33f:	add    BYTE PTR [rax],al
   14000c341:	add    DWORD PTR [rax],eax
   14000c343:	add    BYTE PTR [rax],al
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rax-0x40],al
   14000c34a:	add    BYTE PTR [rax+0x1],al
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rax-0x67],ah
   14000c352:	add    BYTE PTR [rax+0x1],al
   14000c355:	add    BYTE PTR [rax],al
   14000c357:	add    BYTE PTR [rax],al
   14000c359:	add    BYTE PTR [rdx],al
   14000c35b:	add    BYTE PTR [rax],al
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [rax],ah
   14000c361:	rol    BYTE PTR [rax],0x40
   14000c364:	add    DWORD PTR [rax],eax
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	sbb    BYTE PTR [rcx+0x14000],0x0
   14000c36f:	add    BYTE PTR [rax],al
   14000c371:	add    BYTE PTR [rdx],al
   14000c373:	add    BYTE PTR [rax],al
   14000c375:	add    BYTE PTR [rax],al
   14000c377:	add    BYTE PTR [rax],ah
   14000c379:	rol    BYTE PTR [rax],0x40
   14000c37c:	add    DWORD PTR [rax],eax
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	movabs al,ds:0x1400099
   14000c389:	add    BYTE PTR [rax],cl
   14000c38b:	add    BYTE PTR [rax],al
   14000c38d:	add    BYTE PTR [rax],al
   14000c38f:	add    BYTE PTR [rax],dl
   14000c391:	(bad)  
   14000c392:	add    BYTE PTR [rax+0x1],al
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    BYTE PTR [rax+0x1400099],dh
   14000c39d:	add    BYTE PTR [rax],al
   14000c39f:	add    BYTE PTR [rax],al
   14000c3a1:	add    BYTE PTR [rax],cl
   14000c3a3:	add    BYTE PTR [rax],al
   14000c3a5:	add    BYTE PTR [rax],al
   14000c3a7:	add    BYTE PTR [rax],dl
   14000c3a9:	(bad)  
   14000c3aa:	add    BYTE PTR [rax+0x1],al
   14000c3ad:	add    BYTE PTR [rax],al
   14000c3af:	add    al,al
   14000c3b1:	cdq    
   14000c3b2:	add    BYTE PTR [rax+0x1],al
   14000c3b5:	add    BYTE PTR [rax],al
   14000c3b7:	add    BYTE PTR [rax],al
   14000c3b9:	add    BYTE PTR [rax],cl
   14000c3bb:	add    BYTE PTR [rax],al
   14000c3bd:	add    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rax],dl
   14000c3c1:	(bad)  
   14000c3c2:	add    BYTE PTR [rax+0x1],al
   14000c3c5:	add    BYTE PTR [rax],al
   14000c3c7:	add    al,dl
   14000c3c9:	cdq    
   14000c3ca:	add    BYTE PTR [rax+0x1],al
   14000c3cd:	add    BYTE PTR [rax],al
   14000c3cf:	add    BYTE PTR [rax],al
   14000c3d1:	add    BYTE PTR [rax],cl
   14000c3d3:	add    BYTE PTR [rax],al
   14000c3d5:	add    BYTE PTR [rax],al
   14000c3d7:	add    BYTE PTR [rax],dl
   14000c3d9:	(bad)  
   14000c3da:	add    BYTE PTR [rax+0x1],al
   14000c3dd:	add    BYTE PTR [rax],al
   14000c3df:	add    al,ah
   14000c3e1:	cdq    
   14000c3e2:	add    BYTE PTR [rax+0x1],al
   14000c3e5:	add    BYTE PTR [rax],al
   14000c3e7:	add    BYTE PTR [rax],cl
	...
   14000c3f1:	(bad)  
   14000c3f2:	add    BYTE PTR [rax+0x1],al
   14000c3f5:	add    BYTE PTR [rax],al
   14000c3f7:	add    al,dh
   14000c3f9:	cdq    
   14000c3fa:	add    BYTE PTR [rax+0x1],al
   14000c3fd:	add    BYTE PTR [rax],al
   14000c3ff:	add    BYTE PTR [rax],cl
	...
   14000c409:	(bad)  
   14000c40a:	add    BYTE PTR [rax+0x1],al
   14000c40d:	add    BYTE PTR [rax],al
   14000c40f:	add    BYTE PTR [rax],al
   14000c411:	(bad)  
   14000c412:	add    BYTE PTR [rax+0x1],al
   14000c415:	add    BYTE PTR [rax],al
   14000c417:	add    BYTE PTR [rax],al
   14000c419:	add    BYTE PTR [rcx],al
   14000c41b:	add    BYTE PTR [rax],al
   14000c41d:	add    BYTE PTR [rax],al
   14000c41f:	add    al,al
   14000c421:	(bad)  
   14000c422:	add    BYTE PTR [rax+0x1],al
   14000c425:	add    BYTE PTR [rax],al
   14000c427:	add    BYTE PTR [rax],dl
   14000c429:	(bad)  
   14000c42a:	add    BYTE PTR [rax+0x1],al
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rax],al
   14000c431:	add    BYTE PTR [rcx],al
   14000c433:	add    BYTE PTR [rax],al
   14000c435:	add    BYTE PTR [rax],al
   14000c437:	add    al,al
   14000c439:	(bad)  
   14000c43a:	add    BYTE PTR [rax+0x1],al
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    BYTE PTR [rax],ah
   14000c441:	(bad)  
   14000c442:	add    BYTE PTR [rax+0x1],al
   14000c445:	add    BYTE PTR [rax],al
   14000c447:	add    BYTE PTR [rdx],al
   14000c449:	add    BYTE PTR [rax],al
   14000c44b:	add    BYTE PTR [rax],al
   14000c44d:	add    BYTE PTR [rax],al
   14000c44f:	add    BYTE PTR [rax],dh
   14000c451:	rol    BYTE PTR [rax],0x40
   14000c454:	add    DWORD PTR [rax],eax
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	xor    BYTE PTR [rdx+0x14000],bl
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	add    BYTE PTR [rax],cl
   14000c462:	add    BYTE PTR [rax],al
   14000c464:	add    BYTE PTR [rax],al
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	xor    al,al
   14000c46a:	add    BYTE PTR [rax+0x1],al
   14000c46d:	add    BYTE PTR [rax],al
   14000c46f:	add    BYTE PTR [rax-0x66],al
   14000c472:	add    BYTE PTR [rax+0x1],al
   14000c475:	add    BYTE PTR [rax],al
   14000c477:	add    BYTE PTR [rdx],al
   14000c479:	add    BYTE PTR [rax],al
   14000c47b:	add    BYTE PTR [rax],al
   14000c47d:	add    BYTE PTR [rax],al
   14000c47f:	add    BYTE PTR [rax],dh
   14000c481:	rol    BYTE PTR [rax],0x40
   14000c484:	add    DWORD PTR [rax],eax
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	push   rax
   14000c489:	(bad)  
   14000c48a:	add    BYTE PTR [rax+0x1],al
   14000c48d:	add    BYTE PTR [rax],al
   14000c48f:	add    BYTE PTR [rax],al
   14000c491:	or     BYTE PTR [rax],al
   14000c493:	add    BYTE PTR [rax],al
   14000c495:	add    BYTE PTR [rax],al
   14000c497:	add    BYTE PTR [rax],dh
   14000c499:	rol    BYTE PTR [rax],0x40
   14000c49c:	add    DWORD PTR [rax],eax
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	(bad)  
   14000c4a1:	(bad)  
   14000c4a2:	add    BYTE PTR [rax+0x1],al
   14000c4a5:	add    BYTE PTR [rax],al
   14000c4a7:	add    BYTE PTR [rax],dl
   14000c4a9:	add    BYTE PTR [rax],al
   14000c4ab:	add    BYTE PTR [rax],al
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rax+0x14000ce],ah
   14000c4b5:	add    BYTE PTR [rax],al
   14000c4b7:	add    BYTE PTR [rax-0x66],ch
   14000c4ba:	add    BYTE PTR [rax+0x1],al
   14000c4bd:	add    BYTE PTR [rax],al
   14000c4bf:	add    BYTE PTR [rax],dl
   14000c4c1:	add    BYTE PTR [rax],al
   14000c4c3:	add    BYTE PTR [rax],al
   14000c4c5:	add    BYTE PTR [rax],al
   14000c4c7:	add    BYTE PTR [rax+0x14000ce],ah
   14000c4cd:	add    BYTE PTR [rax],al
   14000c4cf:	add    BYTE PTR [rax-0x66],dh
   14000c4d2:	add    BYTE PTR [rax+0x1],al
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	add    BYTE PTR [rcx],al
   14000c4d9:	add    BYTE PTR [rax],al
   14000c4db:	add    BYTE PTR [rax],al
   14000c4dd:	add    BYTE PTR [rax],al
   14000c4df:	add    al,ch
   14000c4e1:	int    0x0
   14000c4e3:	rex add DWORD PTR [rax],eax
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	js     0x14000c484
   14000c4ea:	add    BYTE PTR [rax+0x1],al
   14000c4ed:	add    BYTE PTR [rax],al
   14000c4ef:	add    BYTE PTR [rax],al
   14000c4f1:	add    al,0x0
   14000c4f3:	add    BYTE PTR [rax],al
   14000c4f5:	add    BYTE PTR [rax],al
   14000c4f7:	add    al,ch
   14000c4f9:	int    0x0
   14000c4fb:	rex add DWORD PTR [rax],eax
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	sbb    BYTE PTR [rdx+0x14000],0x0
   14000c507:	add    BYTE PTR [rcx],al
   14000c509:	add    BYTE PTR [rax],al
   14000c50b:	add    BYTE PTR [rax],al
   14000c50d:	add    BYTE PTR [rax],al
   14000c50f:	add    al,ch
   14000c511:	int    0x0
   14000c513:	rex add DWORD PTR [rax],eax
   14000c516:	add    BYTE PTR [rax],al
   14000c518:	mov    BYTE PTR [rdx+0x14000],bl
   14000c51e:	add    BYTE PTR [rax],al
   14000c520:	add    BYTE PTR [rax+rax*1],al
   14000c523:	add    BYTE PTR [rax],al
   14000c525:	add    BYTE PTR [rax],al
   14000c527:	add    al,ch
   14000c529:	int    0x0
   14000c52b:	rex add DWORD PTR [rax],eax
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	nop
   14000c531:	(bad)  
   14000c532:	add    BYTE PTR [rax+0x1],al
   14000c535:	add    BYTE PTR [rax],al
   14000c537:	add    BYTE PTR [rax],cl
	...
   14000c541:	(bad)  
   14000c542:	add    BYTE PTR [rax+0x1],al
   14000c545:	add    BYTE PTR [rax],al
   14000c547:	add    BYTE PTR [rax+0x140009a],bl
   14000c54d:	add    BYTE PTR [rax],al
   14000c54f:	add    BYTE PTR [rax],cl
	...
   14000c559:	(bad)  
   14000c55a:	add    BYTE PTR [rax+0x1],al
   14000c55d:	add    BYTE PTR [rax],al
   14000c55f:	add    BYTE PTR [rax+0x140009a],ah
   14000c565:	add    BYTE PTR [rax],al
   14000c567:	add    BYTE PTR [rax+0x0],al
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	add    BYTE PTR [rax],al
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	or     dh,cl
   14000c572:	add    BYTE PTR [rax+0x1],al
   14000c575:	add    BYTE PTR [rax],al
   14000c577:	add    BYTE PTR [rax+0x140009a],ch
   14000c57d:	add    BYTE PTR [rax],al
   14000c57f:	add    BYTE PTR [rax],al
   14000c581:	add    BYTE PTR [rax],al
   14000c584:	add    BYTE PTR [rax],al
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	or     dh,cl
   14000c58a:	add    BYTE PTR [rax+0x1],al
   14000c58d:	add    BYTE PTR [rax],al
   14000c58f:	add    BYTE PTR [rax+0x140009a],dh
   14000c595:	add    BYTE PTR [rax],al
   14000c597:	add    BYTE PTR [rax+0x0],al
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	add    BYTE PTR [rax],al
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	or     dh,cl
   14000c5a2:	add    BYTE PTR [rax+0x1],al
   14000c5a5:	add    BYTE PTR [rax],al
   14000c5a7:	add    BYTE PTR [rax+0x140009a],bh
   14000c5ad:	add    BYTE PTR [rax],al
   14000c5af:	add    BYTE PTR [rax],al
   14000c5b1:	add    BYTE PTR [rax],al
   14000c5b4:	add    BYTE PTR [rax],al
   14000c5b6:	add    BYTE PTR [rax],al
   14000c5b8:	or     dh,cl
   14000c5ba:	add    BYTE PTR [rax+0x1],al
   14000c5bd:	add    BYTE PTR [rax],al
   14000c5bf:	add    al,al
   14000c5c1:	(bad)  
   14000c5c2:	add    BYTE PTR [rax+0x1],al
   14000c5c5:	add    BYTE PTR [rax],al
   14000c5c7:	add    BYTE PTR [rax+0x0],al
   14000c5cd:	add    BYTE PTR [rax],al
   14000c5cf:	add    al,ah
   14000c5d1:	int    0x0
   14000c5d3:	rex add DWORD PTR [rax],eax
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	enter  0x9a,0x40
   14000c5dc:	add    DWORD PTR [rax],eax
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	add    BYTE PTR [rax+0x0],al
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	loopne 0x14000c5b7
   14000c5ea:	add    BYTE PTR [rax+0x1],al
   14000c5ed:	add    BYTE PTR [rax],al
   14000c5ef:	add    al,dl
   14000c5f1:	(bad)  
   14000c5f2:	add    BYTE PTR [rax+0x1],al
   14000c5f5:	add    BYTE PTR [rax],al
   14000c5f7:	add    BYTE PTR [rax+0x0],al
   14000c5fd:	add    BYTE PTR [rax],al
   14000c5ff:	add    al,ah
   14000c601:	int    0x0
   14000c603:	rex add DWORD PTR [rax],eax
   14000c606:	add    BYTE PTR [rax],al
   14000c608:	fcomp  DWORD PTR [rdx+0x14000]
   14000c60e:	add    BYTE PTR [rax],al
   14000c610:	add    BYTE PTR [rax+0x0],al
   14000c616:	add    BYTE PTR [rax],al
   14000c618:	loopne 0x14000c5e7
   14000c61a:	add    BYTE PTR [rax+0x1],al
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    al,ah
   14000c621:	(bad)  
   14000c622:	add    BYTE PTR [rax+0x1],al
   14000c625:	add    BYTE PTR [rax],al
   14000c627:	add    BYTE PTR [rax+rax*1],al
   14000c62a:	add    BYTE PTR [rax],al
   14000c62c:	add    BYTE PTR [rax],al
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	enter  0xce,0x40
   14000c634:	add    DWORD PTR [rax],eax
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	call   0x14140c6d7
   14000c63d:	add    BYTE PTR [rax],al
   14000c63f:	add    BYTE PTR [rax],al
   14000c641:	adc    BYTE PTR [rax],al
   14000c643:	add    BYTE PTR [rax],al
   14000c645:	add    BYTE PTR [rax],al
   14000c647:	add    al,cl
   14000c649:	(bad)  
   14000c64a:	add    BYTE PTR [rax+0x1],al
   14000c64d:	add    BYTE PTR [rax],al
   14000c64f:	add    al,dh
   14000c651:	(bad)  
   14000c652:	add    BYTE PTR [rax+0x1],al
   14000c655:	add    BYTE PTR [rax],al
   14000c657:	add    BYTE PTR [rax+rax*1],al
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	add    BYTE PTR [rax],al
   14000c65e:	add    BYTE PTR [rax],al
   14000c660:	enter  0xce,0x40
   14000c664:	add    DWORD PTR [rax],eax
   14000c666:	add    BYTE PTR [rax],al
   14000c668:	clc    
   14000c669:	(bad)  
   14000c66a:	add    BYTE PTR [rax+0x1],al
   14000c66d:	add    BYTE PTR [rax],al
   14000c66f:	add    BYTE PTR [rax],al
   14000c671:	adc    BYTE PTR [rax],al
   14000c673:	add    BYTE PTR [rax],al
   14000c675:	add    BYTE PTR [rax],al
   14000c677:	add    al,cl
   14000c679:	(bad)  
   14000c67a:	add    BYTE PTR [rax+0x1],al
   14000c67d:	add    BYTE PTR [rax],al
   14000c67f:	add    BYTE PTR [rax],al
   14000c681:	fwait
   14000c682:	add    BYTE PTR [rax+0x1],al
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rax],ah
   14000c689:	add    BYTE PTR [rax],al
   14000c68b:	add    BYTE PTR [rax],al
   14000c68d:	add    BYTE PTR [rax],al
   14000c68f:	add    BYTE PTR [rax+0x14000ce],ch
   14000c695:	add    BYTE PTR [rax],al
   14000c697:	add    BYTE PTR [rax],cl
   14000c699:	fwait
   14000c69a:	add    BYTE PTR [rax+0x1],al
   14000c69d:	add    BYTE PTR [rax],al
   14000c69f:	add    BYTE PTR [rax],al
   14000c6a1:	and    BYTE PTR [rax],al
   14000c6a3:	add    BYTE PTR [rax],al
   14000c6a5:	add    BYTE PTR [rax],al
   14000c6a7:	add    BYTE PTR [rax+0x14000ce],ch
   14000c6ad:	add    BYTE PTR [rax],al
   14000c6af:	add    BYTE PTR [rax],dl
   14000c6b1:	fwait
   14000c6b2:	add    BYTE PTR [rax+0x1],al
   14000c6b5:	add    BYTE PTR [rax],al
   14000c6b7:	add    BYTE PTR [rax],ah
   14000c6b9:	add    BYTE PTR [rax],al
   14000c6bb:	add    BYTE PTR [rax],al
   14000c6bd:	add    BYTE PTR [rax],al
   14000c6bf:	add    BYTE PTR [rax+0x14000ce],ch
   14000c6c5:	add    BYTE PTR [rax],al
   14000c6c7:	add    BYTE PTR [rax],bl
   14000c6c9:	fwait
   14000c6ca:	add    BYTE PTR [rax+0x1],al
   14000c6cd:	add    BYTE PTR [rax],al
   14000c6cf:	add    BYTE PTR [rax],al
   14000c6d1:	and    BYTE PTR [rax],al
   14000c6d3:	add    BYTE PTR [rax],al
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rax+0x14000ce],ch
   14000c6dd:	add    BYTE PTR [rax],al
   14000c6df:	add    BYTE PTR [rax],ah
   14000c6e1:	fwait
   14000c6e2:	add    BYTE PTR [rax+0x1],al
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rax],al
   14000c6e9:	add    BYTE PTR [rdx],al
   14000c6eb:	add    BYTE PTR [rax],al
   14000c6ed:	add    BYTE PTR [rax],al
   14000c6ef:	add    BYTE PTR [rax],ah
   14000c6f1:	rol    BYTE PTR [rax],0x40
   14000c6f4:	add    DWORD PTR [rax],eax
   14000c6f6:	add    BYTE PTR [rax],al
   14000c6f8:	sub    BYTE PTR [rbx+0x14000],bl
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	add    BYTE PTR [rax],al
   14000c702:	add    al,BYTE PTR [rax]
   14000c704:	add    BYTE PTR [rax],al
   14000c706:	add    BYTE PTR [rax],al
   14000c708:	and    al,al
   14000c70a:	add    BYTE PTR [rax+0x1],al
   14000c70d:	add    BYTE PTR [rax],al
   14000c70f:	add    BYTE PTR [rax],dh
   14000c711:	fwait
   14000c712:	add    BYTE PTR [rax+0x1],al
   14000c715:	add    BYTE PTR [rax],al
   14000c717:	add    BYTE PTR [rax],al
   14000c719:	add    BYTE PTR [rax+rax*1],al
   14000c71c:	add    BYTE PTR [rax],al
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	clc    
   14000c721:	int    0x0
   14000c723:	rex add DWORD PTR [rax],eax
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	push   rax
   14000c729:	fwait
   14000c72a:	add    BYTE PTR [rax+0x1],al
   14000c72d:	add    BYTE PTR [rax],al
   14000c72f:	add    BYTE PTR [rax],al
   14000c731:	add    BYTE PTR [rax+rax*1],al
   14000c734:	add    BYTE PTR [rax],al
   14000c736:	add    BYTE PTR [rax],al
   14000c738:	clc    
   14000c739:	int    0x0
   14000c73b:	rex add DWORD PTR [rax],eax
   14000c73e:	add    BYTE PTR [rax],al
   14000c740:	jo     0x14000c6dd
   14000c742:	add    BYTE PTR [rax+0x1],al
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    BYTE PTR [rax],al
   14000c749:	add    BYTE PTR [rax+rax*1],al
   14000c74c:	add    BYTE PTR [rax],al
   14000c74e:	add    BYTE PTR [rax],al
   14000c750:	clc    
   14000c751:	int    0x0
   14000c753:	rex add DWORD PTR [rax],eax
   14000c756:	add    BYTE PTR [rax],al
   14000c758:	sbb    BYTE PTR [rbx+0x14000],0x0
   14000c75f:	add    BYTE PTR [rax],al
   14000c761:	add    BYTE PTR [rax+rax*1],al
   14000c764:	add    BYTE PTR [rax],al
   14000c766:	add    BYTE PTR [rax],al
   14000c768:	clc    
   14000c769:	int    0x0
   14000c76b:	rex add DWORD PTR [rax],eax
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	mov    WORD PTR [rbx+0x14000],ds
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	add    BYTE PTR [rcx],al
   14000c77a:	add    BYTE PTR [rax],al
   14000c77c:	add    BYTE PTR [rax],al
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	rex rol BYTE PTR [rax],0x40
   14000c784:	add    DWORD PTR [rax],eax
   14000c786:	add    BYTE PTR [rax],al
   14000c788:	xchg   esp,eax
   14000c789:	fwait
   14000c78a:	add    BYTE PTR [rax+0x1],al
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    BYTE PTR [rax],al
   14000c791:	add    DWORD PTR [rax],eax
   14000c793:	add    BYTE PTR [rax],al
   14000c795:	add    BYTE PTR [rax],al
   14000c797:	add    BYTE PTR [rax-0x40],al
   14000c79a:	add    BYTE PTR [rax+0x1],al
   14000c79d:	add    BYTE PTR [rax],al
   14000c79f:	add    BYTE PTR [rbx+rbx*4+0x14000],bl
   14000c7a6:	add    BYTE PTR [rax],al
   14000c7a8:	add    BYTE PTR [rdx],al
	...
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	push   rsp
   14000c7b9:	xchg   esi,eax
   14000c7ba:	add    BYTE PTR [rax+0x1],al
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    BYTE PTR [rax],al
   14000c7c1:	add    al,BYTE PTR [rax]
	...
   14000c7ff:	add    BYTE PTR [rax],al
   14000c801:	add    BYTE PTR [rcx],al
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	sub    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	lahf   
   14000d005:	adc    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax-0x57ffff5d],dh
   14000d00d:	adc    BYTE PTR [rax],al
   14000d00f:	add    bl,cl
   14000d011:	adc    BYTE PTR [rax],al
   14000d013:	add    al,al
   14000d015:	movabs ds:0x110e000010d40000,eax
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	shl    BYTE PTR [rbx+0x11200000],0x0
   14000d027:	add    BYTE PTR [rdx+0x11],bh
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	enter  0xa3,0x0
   14000d030:	adc    BYTE PTR [rcx],0x0
   14000d033:	add    BYTE PTR [rbp-0x2bffffef],ah
   14000d039:	movabs ds:0x11e7000011ac0000,eax
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	fsub   QWORD PTR [rbx+0x11f00000]
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	rex.XB adc al,BYTE PTR [r8]
   14000d04f:	add    ah,ah
   14000d051:	movabs ds:0x12a50000124c0000,eax
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	in     al,0xa3
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	lods   al,BYTE PTR ds:[rsi]
   14000d061:	adc    al,BYTE PTR [rax]
   14000d063:	add    BYTE PTR [rdi+0x13],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	in     al,dx
   14000d069:	movabs ds:0x13cf000013500000,eax
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	hlt    
   14000d075:	movabs ds:0x15a7000014000000,eax
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	or     al,0xa4
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	mov    al,0x15
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	pop    rsp
   14000d089:	(bad)  
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	and    al,0xa4
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	fs (bad) 
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	std    
   14000d095:	(bad)  
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	cmp    BYTE PTR [rax+rax*1+0x180400],ah
   14000d09f:	add    BYTE PTR [rax+rbx*1],ch
   14000d0a2:	add    BYTE PTR [rax],al
   14000d0a4:	shl    BYTE PTR [rbx+0x18340000],0x0
   14000d0ab:	add    BYTE PTR [rbp-0x37ffffe8],bl
   14000d0b1:	movabs ds:0x1aa1000018a40000,eax
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	push   rsp
   14000d0bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	test   al,0x1a
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	mov    dl,0x1b
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	push   0xffffffffb80000a4
   14000d0cd:	sbb    eax,DWORD PTR [rax]
   14000d0cf:	add    BYTE PTR [rdi-0x7fffffe4],bh
   14000d0d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	enter  0x1c,0x0
   14000d0dc:	lods   al,BYTE PTR ds:[rsi]
   14000d0dd:	(bad)  
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	cwde   
   14000d0e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	mov    ah,0x1e
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	(bad)  
   14000d0e9:	and    eax,DWORD PTR [rax]
   14000d0eb:	add    BYTE PTR [rsp+riz*4+0x231c0000],ch
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	add    al,0x24
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	or     BYTE PTR [rbp+0x240c0000],ah
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	mov    ch,0x24
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	hlt    
   14000d105:	movabs ds:0x2565000024bc0000,eax
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	hlt    
   14000d111:	movabs ds:0x263f0000256c0000,eax
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	sbb    BYTE PTR [rbp+0x26480000],ah
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	sbb    esp,DWORD PTR [rdi]
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	sbb    BYTE PTR [rbp+0x27240000],ah
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	sub    BYTE PTR [rax],al
   14000d133:	add    BYTE PTR [rax],ch
   14000d135:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	rex.W sub BYTE PTR [rax],al
   14000d13b:	add    BYTE PTR [rbp+0x29],bl
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	sub    BYTE PTR [rbp+0x29640000],ah
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	sbb    eax,0x3800002a
   14000d14d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	and    al,0x2a
   14000d152:	add    BYTE PTR [rax],al
   14000d154:	(bad)  
   14000d155:	sub    eax,DWORD PTR [rax]
   14000d157:	add    BYTE PTR [rbp+riz*4+0x0],al
   14000d15b:	add    BYTE PTR [rax],ch
   14000d15d:	sub    eax,DWORD PTR [rax]
   14000d15f:	add    BYTE PTR [rsi],ch
   14000d161:	sub    al,0x0
   14000d163:	add    BYTE PTR [rax-0x5b],bh
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	sub    al,0x0
   14000d16b:	add    BYTE PTR [rdx+0x2c],dh
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	enter  0xa3,0x0
   14000d174:	js     0x14000d1a2
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	pop    rbx
   14000d179:	sub    eax,0xa5940000
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	jo     0x14000d1af
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	sbb    al,0x2f
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	movabs al,ds:0x7100002f240000a5
   14000d191:	xor    BYTE PTR [rax],al
   14000d193:	add    BYTE PTR [rbp+riz*4+0x30800000],dh
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	(bad)  
   14000d19d:	add    BYTE PTR ss:[rax],al
   14000d1a0:	int3   
   14000d1a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	xor    BYTE PTR [rsi],dh
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	lods   eax,DWORD PTR ds:[rsi]
   14000d1a9:	cmp    DWORD PTR [rax],eax
   14000d1ab:	add    BYTE PTR [rax],ah
   14000d1ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	mov    ah,0x39
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	mov    bl,0x3a
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	mov    esp,0x4a00003a
   14000d1c1:	cmp    eax,0xa5080000
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	push   rax
   14000d1c9:	cmp    eax,0x3df30000
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	hlt    
   14000d1d1:	movabs ds:0x409400003dfc0000,eax
   14000d1da:	add    BYTE PTR [rax],al
   14000d1dc:	push   rax
   14000d1dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	pushf  
   14000d1e1:	add    BYTE PTR [rax],al
   14000d1e4:	ret    0x42
   14000d1e7:	add    BYTE PTR [rax-0x5a],dh
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	rol    BYTE PTR [rdx+0x0],1
   14000d1ef:	add    BYTE PTR [rdx+0x7c000045],dh
   14000d1f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	mov    eax,0xbd000045
   14000d1fd:	rex.RX add BYTE PTR [rax],r8b
   14000d200:	nop
   14000d201:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d202:	add    BYTE PTR [rax],al
   14000d204:	(bad)  
   14000d205:	rex.RX add BYTE PTR [rax],r8b
   14000d208:	mov    esp,0xa0000055
   14000d20d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	(bad)  
   14000d211:	push   rbp
   14000d212:	add    BYTE PTR [rax],al
   14000d214:	mov    edx,DWORD PTR [rsi+0x0]
   14000d217:	add    BYTE PTR [rax],bl
   14000d219:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	xchg   esp,eax
   14000d21d:	push   rsi
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	pop    rsp
   14000d221:	push   rdi
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	sbb    BYTE PTR [rdi+0x57640000],ah
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	adc    DWORD PTR [rcx+0x0],ebx
   14000d22f:	add    BYTE PTR [rdi+riz*4],dh
   14000d232:	add    BYTE PTR [rax],al
   14000d234:	sbb    BYTE PTR [rcx+0x0],bl
   14000d237:	add    BYTE PTR [rax+0x5000005d],ah
   14000d23d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	test   al,0x5d
   14000d242:	add    BYTE PTR [rax],al
   14000d244:	int    0x5f
   14000d246:	add    BYTE PTR [rax],al
   14000d248:	ins    BYTE PTR es:[rdi],dx
   14000d249:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	(bad)  
   14000d24d:	pop    rdi
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	xchg   DWORD PTR [rcx+0x0],esp
   14000d253:	add    BYTE PTR [rax-0x6fffff59],cl
   14000d259:	(bad)  
   14000d25a:	add    BYTE PTR [rax],al
   14000d25c:	retf   0x6c
   14000d25f:	add    BYTE PTR [rdi+riz*4+0x6cd00000],ah
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	pushf  
   14000d269:	jno    0x14000d26b
   14000d26b:	add    BYTE PTR [rdi+riz*4+0x71b00000],bh
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	icebp  
   14000d275:	jb     0x14000d277
   14000d277:	add    BYTE PTR [rax+0xa4],al
   14000d27d:	jae    0x14000d27f
   14000d27f:	add    BYTE PTR [rcx],dh
   14000d281:	jae    0x14000d283
   14000d283:	add    ah,dl
   14000d285:	movabs ds:0x740f000073400000,eax
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	add    al,0xa4
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	and    BYTE PTR [rax+rax*1+0x0],dh
   14000d298:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xa3d4
   14000d2a0:	jo     0x14000d316
   14000d2a2:	add    BYTE PTR [rax],al
   14000d2a4:	rex.X jbe 0x14000d2a7
   14000d2a7:	add    al,bl
   14000d2a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	push   rax
   14000d2ad:	jbe    0x14000d2af
   14000d2af:	add    BYTE PTR [rdx+0x76],ah
   14000d2b2:	add    BYTE PTR [rax],al
   14000d2b4:	add    al,0xa4
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	xor    BYTE PTR [rsi+0x0],0x0
   14000d2bc:	sahf   
   14000d2bd:	jbe    0x14000d2bf
   14000d2bf:	add    BYTE PTR [rax],cl
   14000d2c1:	test   al,0x0
   14000d2c3:	add    BYTE PTR [rsi+rsi*2+0x77420000],ah
   14000d2ca:	add    BYTE PTR [rax],al
   14000d2cc:	or     al,0xa8
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	rex.W ja 0x14000d2d3
   14000d2d3:	add    BYTE PTR [rdi+0x77],bl
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	add    al,0xa4
   14000d2da:	add    BYTE PTR [rax],al
   14000d2dc:	xor    BYTE PTR [rdi+0x0],0x0
   14000d2e0:	mov    ecx,0x4000077
   14000d2e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	shl    BYTE PTR [rdi+0x0],0x0
   14000d2ec:	fdiv   DWORD PTR [rdi+0x0]
   14000d2ef:	add    BYTE PTR [rsp+riz*4],al
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	in     al,dx
   14000d2f5:	ja     0x14000d2f7
   14000d2f7:	add    BYTE PTR [rax+0x78],al
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	xor    BYTE PTR [rax+0x78480000],ch
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	lea    edi,[rax+0x0]
   14000d307:	add    al,al
   14000d309:	movabs ds:0x793d000078f00000,eax
   14000d312:	add    BYTE PTR [rax],al
   14000d314:	push   rax
   14000d315:	test   al,0x0
   14000d317:	add    BYTE PTR [rcx+rdi*2+0x7a540000],al
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	jl     0x14000d2ca
   14000d322:	add    BYTE PTR [rax],al
   14000d324:	pushf  
   14000d325:	jp     0x14000d327
   14000d327:	add    al,dl
   14000d329:	jp     0x14000d32b
   14000d32b:	add    al,al
   14000d32d:	movabs ds:0x7c5100007ae00000,eax
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	mov    BYTE PTR [rax+0x7cb00000],ch
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	(bad)  
   14000d341:	jge    0x14000d343
   14000d343:	add    BYTE PTR [rax+rbp*4+0x7d500000],dl
   14000d34a:	add    BYTE PTR [rax],al
   14000d34c:	(bad)  
   14000d34d:	jge    0x14000d34f
   14000d34f:	add    BYTE PTR [rax+rbp*4+0x7df00000],bl
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	addr32 jle 0x14000d35b
   14000d35b:	add    BYTE PTR [rax+rbp*4+0x7e700000],ah
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	mov    esi,0x400007e
   14000d369:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	clc    
   14000d36d:	jle    0x14000d36f
   14000d36f:	add    BYTE PTR [rip+0x400007f],dl        # 0x14400d3f4
   14000d375:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	sbb    al,0x7f
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	jg     0x14000d3fd
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	shl    BYTE PTR [rbx+0x7f880000],0x0
   14000d387:	add    BYTE PTR [rdi],dl
   14000d389:	add    BYTE PTR [rax],0x0
   14000d38c:	lods   al,BYTE PTR ds:[rsi]
   14000d38d:	test   al,0x0
   14000d38f:	add    BYTE PTR [rax-0x80],dl
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	push   rdx
   14000d395:	add    BYTE PTR [rax],0x0
   14000d398:	nop
   14000d399:	test   al,0x0
   14000d39b:	add    BYTE PTR [rax-0x80],dh
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	mov    ebp,0xc8000080
   14000d3a5:	test   al,0x0
   14000d3a7:	add    BYTE PTR [rcx+rax*4],bh
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	pop    rdx
   14000d3ad:	add    DWORD PTR [rax],0xa87400
   14000d3b3:	add    BYTE PTR [rax-0x7f],ah
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	jnp    0x14000d33b
   14000d3ba:	add    BYTE PTR [rax],al
   14000d3bc:	je     0x14000d366
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	nop
   14000d3c1:	add    DWORD PTR [rax],0x81b000
   14000d3c7:	add    BYTE PTR [rax+rbp*4+0x0],dh
   14000d3cb:	add    al,al
   14000d3cd:	add    DWORD PTR [rax],0x81e300
   14000d3d3:	add    BYTE PTR [rsp+riz*4],al
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	lock add DWORD PTR [rax],0x823200
   14000d3df:	add    BYTE PTR [rsp+riz*4],al
	...

Disassembly of section .didat:

000000014000e000 <.didat>:
   14000e000:	xor    BYTE PTR [rbp+0x0],bh
   14000e003:	rex add DWORD PTR [rax],eax
	...
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	nop
   14000e011:	jl     0x14000e013
   14000e013:	rex add DWORD PTR [rax],eax
	...
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	sar    BYTE PTR [rbp+0x0],1
   14000e023:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    DWORD PTR [rax],eax
   14000f00e:	add    al,BYTE PTR [rax]
   14000f010:	call   0x16880f015
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	adc    BYTE PTR [rax],0x0
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	add    BYTE PTR [rax],al
   14000f01f:	sbb    BYTE PTR [rax],0x0
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	pop    rax
   14000f025:	add    BYTE PTR [rax],al
   14000f027:	add    BYTE PTR [rax],0x0
	...
   14000f036:	add    DWORD PTR [rax],eax
   14000f038:	add    DWORD PTR [rax],eax
   14000f03a:	add    BYTE PTR [rax],al
   14000f03c:	jo     0x14000f03e
   14000f03e:	add    BYTE PTR [rax+0x0],al
	...
   14000f04c:	add    BYTE PTR [rax],al
   14000f04e:	add    DWORD PTR [rax],eax
   14000f050:	add    DWORD PTR [rax],eax
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	mov    BYTE PTR [rax],al
   14000f056:	add    BYTE PTR [rax+0x0],al
	...
   14000f064:	add    BYTE PTR [rax],al
   14000f066:	add    DWORD PTR [rax],eax
   14000f068:	add    DWORD PTR [rax],eax
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	movabs al,ds:0x800000
	...
   14000f07d:	add    BYTE PTR [rcx],al
   14000f07f:	add    BYTE PTR [rcx],cl
   14000f081:	add    al,0x0
   14000f083:	add    BYTE PTR [rax+0x0],bh
	...
   14000f095:	add    BYTE PTR [rcx],al
   14000f097:	add    BYTE PTR [rcx],cl
   14000f099:	add    al,0x0
   14000f09b:	add    al,cl
	...
   14000f0ad:	add    BYTE PTR [rcx],al
   14000f0af:	add    BYTE PTR [rcx],cl
   14000f0b1:	add    al,0x0
   14000f0b3:	add    al,bl
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    BYTE PTR [rax],dl
   14000f0b9:	test   DWORD PTR [rax],0xc800
	...
   14000f0c7:	add    BYTE PTR [rax+0x680000f3],ch
   14000f0cd:	add    eax,DWORD PTR [rax]
	...
   14000f0d7:	add    al,dh
   14000f0d9:	lock add BYTE PTR [rax],al
   14000f0dc:	mov    dl,0x2
	...
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	add    eax,DWORD PTR [rax]
   14000f0ea:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000f0ee:	rex.WB add BYTE PTR [r15+rdi*1],dil
   14000f0f2:	js     0x14000f161
   14000f0f4:	ins    BYTE PTR es:[rdi],dx
   14000f0f5:	and    BYTE PTR [rsi+0x65],dh
   14000f0f8:	jb     0x14000f16d
   14000f0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f101:	xor    BYTE PTR [rdx],ah
   14000f103:	and    BYTE PTR [rbp+0x6e],ah
   14000f106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f110:	rex.RX sub eax,0x73202238
   14000f116:	je     0x14000f179
   14000f118:	outs   dx,BYTE PTR ds:[rsi]
   14000f119:	fs (bad) 
   14000f11b:	ins    BYTE PTR es:[rdi],dx
   14000f11c:	outs   dx,DWORD PTR ds:[rsi]
   14000f11d:	outs   dx,BYTE PTR ds:[rsi]
   14000f11e:	gs cmp eax,0x73657922
   14000f124:	and    bh,BYTE PTR [rdi]
   14000f126:	ds or  eax,0x2d213c0a
   14000f12c:	sub    eax,0x706f4320
   14000f131:	jns    0x14000f1a5
   14000f133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f13a:	sub    DWORD PTR [rax],esp
   14000f13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f144:	je     0x14000f166
   14000f146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f148:	jb     0x14000f1ba
   14000f14a:	outs   dx,DWORD PTR ds:[rsi]
   14000f14b:	jb     0x14000f1ae
   14000f14d:	je     0x14000f1b8
   14000f14f:	outs   dx,DWORD PTR ds:[rsi]
   14000f150:	outs   dx,BYTE PTR ds:[rsi]
   14000f151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e2f84
   14000f157:	cmp    al,0x61
   14000f159:	jae    0x14000f1ce
   14000f15b:	gs ins DWORD PTR es:[rdi],dx
   14000f15d:	(bad)  
   14000f15e:	ins    BYTE PTR es:[rdi],dx
   14000f15f:	jns    0x14000f181
   14000f161:	js     0x14000f1d0
   14000f163:	ins    BYTE PTR es:[rdi],dx
   14000f164:	outs   dx,BYTE PTR ds:[rsi]
   14000f165:	jae    0x14000f1a4
   14000f167:	and    dh,BYTE PTR [rbp+0x72]
   14000f16a:	outs   dx,BYTE PTR ds:[rsi]
   14000f16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f16e:	push   0x73616d65
   14000f173:	sub    eax,0x7263696d
   14000f178:	outs   dx,DWORD PTR ds:[rsi]
   14000f179:	jae    0x14000f1ea
   14000f17b:	data16 je 0x14000f1ab
   14000f17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f184:	ins    DWORD PTR es:[rdi],dx
   14000f185:	cs jbe 0x14000f1b9
   14000f188:	and    ah,BYTE PTR [rax]
   14000f18a:	ins    DWORD PTR es:[rdi],dx
   14000f18b:	(bad)  
   14000f18c:	outs   dx,BYTE PTR ds:[rsi]
   14000f18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f194:	jb     0x14000f209
   14000f196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f19d:	xor    BYTE PTR [rdx],ah
   14000f19f:	ds or  eax,0x73613c0a
   14000f1a5:	jae    0x14000f20c
   14000f1a7:	ins    DWORD PTR es:[rdi],dx
   14000f1a8:	(bad)  
   14000f1a9:	ins    BYTE PTR es:[rdi],dx
   14000f1aa:	jns    0x14000f1f5
   14000f1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000f1af:	je     0x14000f21a
   14000f1b1:	je     0x14000f22c
   14000f1b3:	or     eax,0x2020200a
   14000f1b8:	and    BYTE PTR [rsi+0x65],dh
   14000f1bb:	jb     0x14000f230
   14000f1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000f1c4:	xor    DWORD PTR [rsi],ebp
   14000f1c6:	xor    BYTE PTR [rsi],ch
   14000f1c8:	xor    BYTE PTR [rdx],ah
   14000f1ca:	or     eax,0x2020200a
   14000f1cf:	and    BYTE PTR [rax+0x72],dh
   14000f1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000f1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f1d6:	jae    0x14000f247
   14000f1d8:	jb     0x14000f21b
   14000f1da:	jb     0x14000f23f
   14000f1dc:	push   0x63657469
   14000f1e1:	je     0x14000f258
   14000f1e3:	jb     0x14000f24a
   14000f1e5:	cmp    eax,0x646d6122
   14000f1ea:	ss xor al,0x22
   14000f1ed:	or     eax,0x2020200a
   14000f1f2:	and    BYTE PTR [rsi+0x61],ch
   14000f1f5:	ins    DWORD PTR es:[rdi],dx
   14000f1f6:	gs cmp eax,0x63694d22
   14000f1fc:	jb     0x14000f26d
   14000f1fe:	jae    0x14000f26f
   14000f200:	data16 je 0x14000f231
   14000f203:	push   rdi
   14000f204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f20b:	push   rdi
   14000f20c:	imul   ebp,DWORD PTR [rsi+0x52],0x69572e4d
   14000f213:	outs   dx,BYTE PTR ds:[rsi]
   14000f214:	push   rdx
   14000f215:	push   rbx
   14000f216:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211226
   14000f21c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f220:	gs cmp eax,0x6e697722
   14000f226:	xor    esi,DWORD PTR [rdx]
   14000f228:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f2138
   14000f22e:	or     bh,BYTE PTR [rsp+riz*2]
   14000f231:	gs jae 0x14000f297
   14000f234:	jb     0x14000f29f
   14000f236:	jo     0x14000f2ac
   14000f238:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   14000f23f:	outs   dx,DWORD PTR fs:[rsi]
   14000f241:	ja     0x14000f2b6
   14000f243:	and    BYTE PTR [rdx+0x65],dl
   14000f246:	ins    DWORD PTR es:[rdi],dx
   14000f247:	outs   dx,DWORD PTR ds:[rsi]
   14000f248:	je     0x14000f2af
   14000f24a:	and    BYTE PTR [rbx+0x68],dl
   14000f24d:	gs ins BYTE PTR es:[rdi],dx
   14000f24f:	ins    BYTE PTR es:[rdi],dx
   14000f250:	and    BYTE PTR [rbx+0x6f],ah
   14000f253:	ins    DWORD PTR es:[rdi],dx
   14000f254:	ins    DWORD PTR es:[rdi],dx
   14000f255:	(bad)  
   14000f256:	outs   dx,BYTE PTR ds:[rsi]
   14000f257:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14000f25c:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14000f261:	ins    BYTE PTR es:[rdi],dx
   14000f262:	cmp    al,0x2f
   14000f264:	fs gs jae 0x14000f2cb
   14000f268:	jb     0x14000f2d3
   14000f26a:	jo     0x14000f2e0
   14000f26c:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000f273:	or     bh,BYTE PTR [rsp+rsi*2]
   14000f276:	jb     0x14000f2ed
   14000f278:	jae    0x14000f2ee
   14000f27a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f27c:	outs   dx,WORD PTR ds:[rsi]
   14000f27e:	and    BYTE PTR [rax+0x6d],bh
   14000f281:	ins    BYTE PTR es:[rdi],dx
   14000f282:	outs   dx,BYTE PTR ds:[rsi]
   14000f283:	jae    0x14000f2c2
   14000f285:	and    dh,BYTE PTR [rbp+0x72]
   14000f288:	outs   dx,BYTE PTR ds:[rsi]
   14000f289:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f28c:	push   0x73616d65
   14000f291:	sub    eax,0x7263696d
   14000f296:	outs   dx,DWORD PTR ds:[rsi]
   14000f297:	jae    0x14000f308
   14000f299:	data16 je 0x14000f2c9
   14000f29c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f29f:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f2a2:	ins    DWORD PTR es:[rdi],dx
   14000f2a3:	cs jbe 0x14000f2d9
   14000f2a6:	and    bh,BYTE PTR [rsi]
   14000f2a8:	or     eax,0x2020200a
   14000f2ad:	and    BYTE PTR [rbx+rsi*2],bh
   14000f2b0:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f2b4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f2bc:	and    BYTE PTR [rax],ah
   14000f2be:	and    BYTE PTR [rax],ah
   14000f2c0:	and    BYTE PTR [rax],ah
   14000f2c2:	cmp    al,0x72
   14000f2c4:	gs jno 0x14000f33c
   14000f2c7:	gs jae 0x14000f33e
   14000f2ca:	gs fs push rax
   14000f2cd:	jb     0x14000f338
   14000f2cf:	jbe    0x14000f33a
   14000f2d1:	ins    BYTE PTR es:[rdi],dx
   14000f2d2:	gs addr32 gs jae 0x14000f315
   14000f2d7:	or     eax,0x2020200a
   14000f2dc:	and    BYTE PTR [rax],ah
   14000f2de:	and    BYTE PTR [rax],ah
   14000f2e0:	and    BYTE PTR [rax],ah
   14000f2e2:	and    BYTE PTR [rax],ah
   14000f2e4:	and    BYTE PTR [rdx+rsi*2],bh
   14000f2e7:	gs jno 0x14000f35f
   14000f2ea:	gs jae 0x14000f361
   14000f2ed:	gs fs rex.RB js 0x14000f357
   14000f2f2:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f2f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f2fc:	ins    BYTE PTR es:[rdi],dx
   14000f2fd:	or     eax,0x2020200a
   14000f302:	and    BYTE PTR [rax],ah
   14000f304:	and    BYTE PTR [rax],ah
   14000f306:	and    BYTE PTR [rax],ah
   14000f308:	and    BYTE PTR [rax],ah
   14000f30a:	and    BYTE PTR [rax],ah
   14000f30c:	and    BYTE PTR [rax],ah
   14000f30e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f312:	gs ins BYTE PTR es:[rdi],dx
   14000f314:	cmp    eax,0x49736122
   14000f319:	outs   dx,BYTE PTR ds:[rsi]
   14000f31a:	jbe    0x14000f38b
   14000f31c:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f320:	or     eax,0x2020200a
   14000f325:	and    BYTE PTR [rax],ah
   14000f327:	and    BYTE PTR [rax],ah
   14000f329:	and    BYTE PTR [rax],ah
   14000f32b:	and    BYTE PTR [rax],ah
   14000f32d:	and    BYTE PTR [rax],ah
   14000f32f:	and    BYTE PTR [rax],ah
   14000f331:	and    BYTE PTR [rbp+0x69],dh
   14000f334:	movsxd esp,DWORD PTR [r11+0x65]
   14000f338:	jae    0x14000f3ad
   14000f33a:	cmp    eax,0x6c616622
   14000f33f:	jae    0x14000f3a6
   14000f341:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211351
   14000f347:	and    BYTE PTR [rax],ah
   14000f349:	and    BYTE PTR [rax],ah
   14000f34b:	and    BYTE PTR [rax],ah
   14000f34d:	and    BYTE PTR [rax],ah
   14000f34f:	and    BYTE PTR [rdi],ch
   14000f351:	ds or  eax,0x2020200a
   14000f357:	and    BYTE PTR [rax],ah
   14000f359:	and    BYTE PTR [rax],ah
   14000f35b:	and    BYTE PTR [rdi+rbp*1],bh
   14000f35e:	jb     0x14000f3c5
   14000f360:	jno    0x14000f3d7
   14000f362:	gs jae 0x14000f3d9
   14000f365:	gs fs push rax
   14000f368:	jb     0x14000f3d3
   14000f36a:	jbe    0x14000f3d5
   14000f36c:	ins    BYTE PTR es:[rdi],dx
   14000f36d:	gs addr32 gs jae 0x14000f3b0
   14000f372:	or     eax,0x2020200a
   14000f377:	and    BYTE PTR [rdi+rbp*1],bh
   14000f37a:	jae    0x14000f3e1
   14000f37c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f37f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000f387:	je     0x14000f3fb
   14000f389:	jne    0x14000f3fe
   14000f38b:	je     0x14000f3d6
   14000f38d:	outs   dx,BYTE PTR ds:[rsi]
   14000f38e:	outs   dx,WORD PTR ds:[rsi]
   14000f390:	ds or  eax,0x612f3c0a
   14000f396:	jae    0x14000f40b
   14000f398:	gs ins DWORD PTR es:[rdi],dx
   14000f39a:	(bad)  
   14000f39b:	ins    BYTE PTR es:[rdi],dx
   14000f39c:	jns    0x14000f3dc
   14000f39e:	or     eax,0xa0d0a
   14000f3a3:	add    BYTE PTR [rax],al
   14000f3a5:	add    BYTE PTR [rax],al
   14000f3a7:	add    BYTE PTR [rax+0x3],ch
   14000f3aa:	xor    al,0x0
   14000f3ac:	add    BYTE PTR [rax],al
   14000f3ae:	push   rsi
   14000f3af:	add    BYTE PTR [rbx+0x0],dl
   14000f3b2:	pop    rdi
   14000f3b3:	add    BYTE PTR [rsi+0x0],dl
   14000f3b6:	add    BYTE PTR [r10+0x0],r10b
   14000f3ba:	push   rbx
   14000f3bb:	add    BYTE PTR [rcx+0x0],cl
   14000f3be:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000f3c2:	pop    rdi
   14000f3c3:	add    BYTE PTR [rcx+0x0],cl
   14000f3c6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000f3ca:	rex.WRXB add BYTE PTR [r8],r8b
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    BYTE PTR [rbp+0xfeef04],bh
   14000f3d5:	add    BYTE PTR [rcx],al
   14000f3d7:	add    BYTE PTR [rax],al
   14000f3d9:	add    BYTE PTR [rdx],cl
   14000f3db:	add    BYTE PTR [rax],al
   14000f3dd:	add    BYTE PTR [rax],bpl
   14000f3e0:	add    BYTE PTR [rax],al
   14000f3e2:	or     al,BYTE PTR [rax]
   14000f3e4:	add    BYTE PTR [rax+0x0],al
   14000f3e7:	sub    BYTE PTR [rdi],bh
   14000f3e9:	add    BYTE PTR [rax],al
   14000f3eb:	add    BYTE PTR [rax],al
   14000f3ed:	add    BYTE PTR [rax],al
   14000f3ef:	add    BYTE PTR [rax+rax*1],al
   14000f3f2:	add    al,0x0
   14000f3f4:	add    al,BYTE PTR [rax]
	...
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	mov    BYTE PTR [rdx],0x0
   14000f407:	add    BYTE PTR [rcx],al
   14000f409:	add    BYTE PTR [rbx+0x0],dl
   14000f40c:	je     0x14000f40e
   14000f40e:	jb     0x14000f410
   14000f410:	imul   eax,DWORD PTR [rax],0x67006e
   14000f416:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f41a:	ins    BYTE PTR es:[rdi],dx
   14000f41b:	add    BYTE PTR [rbp+0x0],ah
   14000f41e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f422:	data16 add BYTE PTR [rdi+0x0],ch
   14000f426:	add    BYTE PTR [rax],al
   14000f428:	movabs ds:0x3400300001000002,al
   14000f431:	add    BYTE PTR [rax],dh
   14000f433:	add    BYTE PTR [rcx],bh
   14000f435:	add    BYTE PTR [rax],dh
   14000f437:	add    BYTE PTR [rax+rax*1],dh
   14000f43a:	rex.X add BYTE PTR [rax],sil
   14000f43d:	add    BYTE PTR [rax],al
   14000f43f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000f443:	add    BYTE PTR [rcx],al
   14000f445:	add    BYTE PTR [rbx+0x0],al
   14000f448:	outs   dx,DWORD PTR ds:[rsi]
   14000f449:	add    BYTE PTR [rbp+0x0],ch
   14000f44c:	jo     0x14000f44e
   14000f44e:	(bad)  
   14000f44f:	add    BYTE PTR [rsi+0x0],ch
   14000f452:	jns    0x14000f454
   14000f454:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f458:	ins    DWORD PTR es:[rdi],dx
   14000f459:	add    BYTE PTR [rbp+0x0],ah
   14000f45c:	add    BYTE PTR [rax],al
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f464:	movsxd eax,DWORD PTR [rax]
   14000f466:	jb     0x14000f468
   14000f468:	outs   dx,DWORD PTR ds:[rsi]
   14000f469:	add    BYTE PTR [rbx+0x0],dh
   14000f46c:	outs   dx,DWORD PTR ds:[rsi]
   14000f46d:	add    BYTE PTR [rsi+0x0],ah
   14000f470:	je     0x14000f472
   14000f472:	and    BYTE PTR [rax],al
   14000f474:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f478:	jb     0x14000f47a
   14000f47a:	jo     0x14000f47c
   14000f47c:	outs   dx,DWORD PTR ds:[rsi]
   14000f47d:	add    BYTE PTR [rdx+0x0],dh
   14000f480:	(bad)  
   14000f481:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f485:	add    BYTE PTR [rdi+0x0],ch
   14000f488:	outs   dx,BYTE PTR ds:[rsi]
   14000f489:	add    BYTE PTR [rax],al
   14000f48b:	add    BYTE PTR [rax+rax*1],dh
   14000f48e:	(bad)  
   14000f48f:	add    BYTE PTR [rcx],al
   14000f491:	add    BYTE PTR [rsi+0x0],al
   14000f494:	imul   eax,DWORD PTR [rax],0x65006c
   14000f49a:	add    BYTE PTR [rbp+0x0],r12b
   14000f49e:	jae    0x14000f4a0
   14000f4a0:	movsxd eax,DWORD PTR [rax]
   14000f4a2:	jb     0x14000f4a4
   14000f4a4:	imul   eax,DWORD PTR [rax],0x740070
   14000f4aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f4b0:	add    BYTE PTR [rax],al
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	ja     0x14000f4b6
   14000f4b6:	imul   eax,DWORD PTR [rax],0x72006e
   14000f4bc:	jae    0x14000f4be
   14000f4be:	add    BYTE PTR [rax],al
   14000f4c0:	data16 add BYTE PTR [rbx],ah
   14000f4c3:	add    BYTE PTR [rcx],al
   14000f4c5:	add    BYTE PTR [rsi+0x0],al
   14000f4c8:	imul   eax,DWORD PTR [rax],0x65006c
   14000f4ce:	push   rsi
   14000f4cf:	add    BYTE PTR [rbp+0x0],ah
   14000f4d2:	jb     0x14000f4d4
   14000f4d4:	jae    0x14000f4d6
   14000f4d6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f4dc:	add    BYTE PTR [rax],al
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	xor    DWORD PTR [rax],eax
   14000f4e2:	xor    BYTE PTR [rax],al
   14000f4e4:	add    BYTE PTR cs:[rax],dh
   14000f4e7:	add    BYTE PTR [rsi],ch
   14000f4e9:	add    BYTE PTR [rcx],dh
   14000f4eb:	add    BYTE PTR [rax],dh
   14000f4ed:	add    BYTE PTR [rdx],dh
   14000f4ef:	add    BYTE PTR [rax+rax*1],dh
   14000f4f2:	xor    BYTE PTR [rax],al
   14000f4f4:	add    BYTE PTR cs:[rcx],dh
   14000f4f7:	add    BYTE PTR [rsi],dh
   14000f4f9:	add    BYTE PTR [rbx],dh
   14000f4fb:	add    BYTE PTR [rax],bh
   14000f4fd:	add    BYTE PTR [rax+rax*1],dh
   14000f500:	and    BYTE PTR [rax],al
   14000f502:	sub    BYTE PTR [rax],al
   14000f504:	je     0x14000f506
   14000f506:	push   0x2e003100
   14000f50b:	add    BYTE PTR [rcx],dh
   14000f50d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177012513
   14000f513:	add    BYTE PTR [rax],dh
   14000f515:	add    BYTE PTR [rcx],bh
   14000f517:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701261d
   14000f51d:	add    BYTE PTR [rax],dh
   14000f51f:	add    BYTE PTR [rax],dh
   14000f521:	add    BYTE PTR [rcx],ch
   14000f523:	add    BYTE PTR [rax],al
   14000f525:	add    BYTE PTR [rax],al
   14000f527:	add    BYTE PTR [rax+rax*1],dh
   14000f52a:	or     al,BYTE PTR [rax]
   14000f52c:	add    DWORD PTR [rax],eax
   14000f52e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f532:	je     0x14000f534
   14000f534:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f538:	outs   dx,BYTE PTR ds:[rsi]
   14000f539:	add    BYTE PTR [rcx+0x0],ah
   14000f53c:	ins    BYTE PTR es:[rdi],dx
   14000f53d:	add    BYTE PTR [rsi+0x0],cl
   14000f540:	(bad)  
   14000f541:	add    BYTE PTR [rbp+0x0],ch
   14000f544:	add    BYTE PTR gs:[rax],al
   14000f547:	add    BYTE PTR [rdi+0x0],dh
   14000f54a:	imul   eax,DWORD PTR [rax],0x72006e
   14000f550:	jae    0x14000f552
   14000f552:	add    BYTE PTR cs:[rbp+0x0],ah
   14000f556:	js     0x14000f558
   14000f558:	add    BYTE PTR gs:[rax],al
   14000f55b:	add    BYTE PTR [rax+0x1002e00],al
   14000f561:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000f565:	add    BYTE PTR [rdi+0x0],ah
   14000f568:	(bad)  
   14000f569:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000f56d:	add    BYTE PTR [rdi+0x0],ch
   14000f570:	jo     0x14000f572
   14000f572:	jns    0x14000f574
   14000f574:	jb     0x14000f576
   14000f576:	imul   eax,DWORD PTR [rax],0x680067
   14000f57c:	je     0x14000f57e
   14000f57e:	add    BYTE PTR [rax],al
   14000f580:	test   eax,0x4d002000
   14000f585:	add    BYTE PTR [rcx+0x0],ch
   14000f588:	movsxd eax,DWORD PTR [rax]
   14000f58a:	jb     0x14000f58c
   14000f58c:	outs   dx,DWORD PTR ds:[rsi]
   14000f58d:	add    BYTE PTR [rbx+0x0],dh
   14000f590:	outs   dx,DWORD PTR ds:[rsi]
   14000f591:	add    BYTE PTR [rsi+0x0],ah
   14000f594:	je     0x14000f596
   14000f596:	and    BYTE PTR [rax],al
   14000f598:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f59c:	jb     0x14000f59e
   14000f59e:	jo     0x14000f5a0
   14000f5a0:	outs   dx,DWORD PTR ds:[rsi]
   14000f5a1:	add    BYTE PTR [rdx+0x0],dh
   14000f5a4:	(bad)  
   14000f5a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f5a9:	add    BYTE PTR [rdi+0x0],ch
   14000f5ac:	outs   dx,BYTE PTR ds:[rsi]
   14000f5ad:	add    BYTE PTR [rsi],ch
   14000f5af:	add    BYTE PTR [rax],ah
   14000f5b1:	add    BYTE PTR [rcx+0x0],al
   14000f5b4:	ins    BYTE PTR es:[rdi],dx
   14000f5b5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000f5b9:	add    BYTE PTR [rdx+0x0],dh
   14000f5bc:	imul   eax,DWORD PTR [rax],0x680067
   14000f5c2:	je     0x14000f5c4
   14000f5c4:	jae    0x14000f5c6
   14000f5c6:	and    BYTE PTR [rax],al
   14000f5c8:	jb     0x14000f5ca
   14000f5ca:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f5ce:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f5d2:	jbe    0x14000f5d4
   14000f5d4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000f5d9:	add    BYTE PTR [rax],al
   14000f5db:	add    BYTE PTR [rax+rax*1],bh
   14000f5de:	or     al,BYTE PTR [rax]
   14000f5e0:	add    DWORD PTR [rax],eax
   14000f5e2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000f5e6:	imul   eax,DWORD PTR [rax],0x690067
   14000f5ec:	outs   dx,BYTE PTR ds:[rsi]
   14000f5ed:	add    BYTE PTR [rcx+0x0],ah
   14000f5f0:	ins    BYTE PTR es:[rdi],dx
   14000f5f1:	add    BYTE PTR [rsi+0x0],al
   14000f5f4:	imul   eax,DWORD PTR [rax],0x65006c
   14000f5fa:	outs   dx,BYTE PTR ds:[rsi]
   14000f5fb:	add    BYTE PTR [rcx+0x0],ah
   14000f5fe:	ins    DWORD PTR es:[rdi],dx
   14000f5ff:	add    BYTE PTR [rbp+0x0],ah
   14000f602:	add    BYTE PTR [rax],al
   14000f604:	ja     0x14000f606
   14000f606:	imul   eax,DWORD PTR [rax],0x72006e
   14000f60c:	jae    0x14000f60e
   14000f60e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000f612:	js     0x14000f614
   14000f614:	add    BYTE PTR gs:[rax],al
   14000f617:	add    BYTE PTR [rdx+0x0],ch
   14000f61a:	and    eax,0x50000100
   14000f61f:	add    BYTE PTR [rdx+0x0],dh
   14000f622:	outs   dx,DWORD PTR ds:[rsi]
   14000f623:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f627:	add    BYTE PTR [rbx+0x0],ah
   14000f62a:	je     0x14000f62c
   14000f62c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f630:	ins    DWORD PTR es:[rdi],dx
   14000f631:	add    BYTE PTR [rbp+0x0],ah
   14000f634:	add    BYTE PTR [rax],al
   14000f636:	add    BYTE PTR [rax],al
   14000f638:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f63c:	movsxd eax,DWORD PTR [rax]
   14000f63e:	jb     0x14000f640
   14000f640:	outs   dx,DWORD PTR ds:[rsi]
   14000f641:	add    BYTE PTR [rbx+0x0],dh
   14000f644:	outs   dx,DWORD PTR ds:[rsi]
   14000f645:	add    BYTE PTR [rsi+0x0],ah
   14000f648:	je     0x14000f64a
   14000f64a:	scas   al,BYTE PTR es:[rdi]
   14000f64b:	add    BYTE PTR [rax],ah
   14000f64d:	add    BYTE PTR [rdi+0x0],dl
   14000f650:	imul   eax,DWORD PTR [rax],0x64006e
   14000f656:	outs   dx,DWORD PTR ds:[rsi]
   14000f657:	add    BYTE PTR [rdi+0x0],dh
   14000f65a:	jae    0x14000f65c
   14000f65c:	scas   al,BYTE PTR es:[rdi]
   14000f65d:	add    BYTE PTR [rax],ah
   14000f65f:	add    BYTE PTR [rdi+0x0],cl
   14000f662:	jo     0x14000f664
   14000f664:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f668:	(bad)  
   14000f669:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f66d:	add    BYTE PTR [rsi+0x0],ch
   14000f670:	add    BYTE PTR [eax],ah
   14000f673:	add    BYTE PTR [rbx+0x0],dl
   14000f676:	jns    0x14000f678
   14000f678:	jae    0x14000f67a
   14000f67a:	je     0x14000f67c
   14000f67c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f680:	add    BYTE PTR [rax],al
   14000f682:	add    BYTE PTR [rax],al
   14000f684:	rex.RX add BYTE PTR [rcx],r10b
   14000f687:	add    BYTE PTR [rcx],al
   14000f689:	add    BYTE PTR [rax+0x0],dl
   14000f68c:	jb     0x14000f68e
   14000f68e:	outs   dx,DWORD PTR ds:[rsi]
   14000f68f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f693:	add    BYTE PTR [rbx+0x0],ah
   14000f696:	je     0x14000f698
   14000f698:	push   rsi
   14000f699:	add    BYTE PTR [rbp+0x0],ah
   14000f69c:	jb     0x14000f69e
   14000f69e:	jae    0x14000f6a0
   14000f6a0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f6a6:	add    BYTE PTR [rax],al
   14000f6a8:	xor    DWORD PTR [rax],eax
   14000f6aa:	xor    BYTE PTR [rax],al
   14000f6ac:	add    BYTE PTR cs:[rax],dh
   14000f6af:	add    BYTE PTR [rsi],ch
   14000f6b1:	add    BYTE PTR [rcx],dh
   14000f6b3:	add    BYTE PTR [rax],dh
   14000f6b5:	add    BYTE PTR [rdx],dh
   14000f6b7:	add    BYTE PTR [rax+rax*1],dh
   14000f6ba:	xor    BYTE PTR [rax],al
   14000f6bc:	add    BYTE PTR cs:[rcx],dh
   14000f6bf:	add    BYTE PTR [rsi],dh
   14000f6c1:	add    BYTE PTR [rbx],dh
   14000f6c3:	add    BYTE PTR [rax],bh
   14000f6c5:	add    BYTE PTR [rax+rax*1],dh
   14000f6c8:	add    BYTE PTR [rax],al
   14000f6ca:	add    BYTE PTR [rax],al
   14000f6cc:	add    BYTE PTR [rax],r8b
   14000f6cf:	add    BYTE PTR [rcx],al
   14000f6d1:	add    BYTE PTR [rsi+0x0],dl
   14000f6d4:	(bad)  
   14000f6d5:	add    BYTE PTR [rdx+0x0],dh
   14000f6d8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f6dc:	ins    BYTE PTR es:[rdi],dx
   14000f6dd:	add    BYTE PTR [rbp+0x0],ah
   14000f6e0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f6e4:	data16 add BYTE PTR [rdi+0x0],ch
   14000f6e8:	add    BYTE PTR [rax],al
   14000f6ea:	add    BYTE PTR [rax],al
   14000f6ec:	and    al,0x0
   14000f6ee:	add    al,0x0
   14000f6f0:	add    BYTE PTR [rax],al
   14000f6f2:	push   rsp
   14000f6f3:	add    BYTE PTR [rdx+0x0],dh
   14000f6f6:	(bad)  
   14000f6f7:	add    BYTE PTR [rsi+0x0],ch
   14000f6fa:	jae    0x14000f6fc
   14000f6fc:	ins    BYTE PTR es:[rdi],dx
   14000f6fd:	add    BYTE PTR [rcx+0x0],ah
   14000f700:	je     0x14000f702
   14000f702:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f708:	add    BYTE PTR [rax],al
   14000f70a:	add    BYTE PTR [rax],al
   14000f70c:	or     DWORD PTR [rax+rsi*4],eax
   14000f70f:	add    al,0xcd
   14000f711:	dec    ch
   14000f713:	dec    al
   14000f715:	add    BYTE PTR [rax],al
   14000f717:	add    BYTE PTR [rax],al
   14000f719:	add    BYTE PTR [rcx],al
   14000f71b:	add    BYTE PTR [rax],al
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    BYTE PTR [rcx],dl
   14000f721:	add    BYTE PTR [rax],al
   14000f723:	add    BYTE PTR [rax],al
   14000f725:	add    BYTE PTR [rax],al
   14000f727:	add    BYTE PTR [rdx],al
   14000f729:	add    BYTE PTR [rax],al
   14000f72b:	add    BYTE PTR [rbx+0x2bdb8d80],bl
   14000f731:	pop    rsi
   14000f732:	xchg   edi,eax
   14000f733:	not    DWORD PTR [rdi]
   14000f735:	ja     0x14000f770
   14000f737:	jne    0x14000f791
   14000f739:	add    al,BYTE PTR [rbx+0x6e]
   14000f73c:	test   eax,0x7b9903c5
   14000f741:	mov    bh,0xa5
   14000f743:	rcr    BYTE PTR [rbx+0x79b72b56],cl
   14000f749:	mov    ch,0xfd
   14000f74b:	(bad)  
	...
   14000f764:	mov    BYTE PTR [rax],al
   14000f766:	add    BYTE PTR [rax],al
   14000f768:	(bad)  
   14000f769:	add    BYTE PTR [rax],al
   14000f76b:	add    BYTE PTR [rax+0x8000000],bl
   14000f771:	add    BYTE PTR [rax],al
   14000f773:	add    BYTE PTR [rax+0xe000000],ah
   14000f779:	add    BYTE PTR [rax],al
   14000f77b:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000f789:	add    BYTE PTR [rax],al
   14000f78b:	add    BYTE PTR [rax+0xc000000],bh
   14000f791:	add    BYTE PTR [rax],al
   14000f793:	add    BYTE PTR [rax],al
   14000f795:	add    BYTE PTR [rax],al
   14000f797:	add    BYTE PTR [rbp+0x0],cl
   14000f79a:	push   rbp
   14000f79b:	add    BYTE PTR [rcx+0x0],cl
	...
   14000f7a6:	add    BYTE PTR [rax],al
   14000f7a8:	adc    BYTE PTR [rax],al
   14000f7aa:	add    BYTE PTR [rax],al
   14000f7ac:	sbb    BYTE PTR [rax],al
   14000f7ae:	add    BYTE PTR [rax],al
   14000f7b0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000f7b4:	rex.WB add BYTE PTR [r8],al
	...
   14000f7bf:	add    BYTE PTR [rsi],al
   14000f7c1:	add    BYTE PTR [rax],al
   14000f7c3:	add    BYTE PTR [rax],dl
   14000f7c5:	add    BYTE PTR [rax],al
   14000f7c7:	add    BYTE PTR [rbp+0x0],ah
   14000f7ca:	outs   dx,BYTE PTR ds:[rsi]
   14000f7cb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193014cd1
   14000f7d1:	add    BYTE PTR [rax],al
   14000f7d3:	add    BYTE PTR [rax],al
   14000f7d5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140010000 <.reloc>:
   140010000:	add    BYTE PTR [rax+0x240000],dl
   140010006:	add    BYTE PTR [rax],al
   140010008:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001000a:	push   rax
   14001000b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001000c:	(bad)  
   14001000d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001000e:	push   0xffffffff88a470a4
   140010013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010014:	nop
   140010015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010016:	and    BYTE PTR [rbp-0x5a5f5ad8],ah
   14001001c:	loopne 0x14000ffcc
   14001001e:	call   0x148b000d1
   140010023:	scas   eax,DWORD PTR es:[rdi]
   140010024:	add    BYTE PTR [rax+0x100000],ah
   14001002a:	add    BYTE PTR [rax],al
   14001002c:	mov    BYTE PTR [rax-0x5f575f60],ah
   140010032:	mov    al,0xa0
   140010034:	add    al,al
   140010036:	add    BYTE PTR [rax],al
   140010038:	add    QWORD PTR [rax],rax
   14001003b:	add    BYTE PTR [rax],bh
   14001003d:	movabs al,ds:0xa078a068a060a050
   140010046:	and    BYTE PTR [rax-0x5f675f70],0xa8
   14001004d:	movabs al,ds:0xa0d8a0c8a0c0a0b0
   140010056:	loopne 0x14000fff8
   140010058:	lock movabs al,ds:0xa120a110a108a0f8
   140010062:	sub    BYTE PTR [rcx-0x5ebf5ec8],ah
   140010068:	push   rax
   140010069:	movabs eax,ds:0xa180a170a168a158
   140010072:	mov    BYTE PTR [rcx-0x5e5f5e68],ah
   140010078:	mov    al,0xa1
   14001007a:	mov    eax,0xd0a1c8a1
   14001007f:	movabs eax,ds:0xa200a1f8a1e8a1e0
   140010088:	adc    BYTE PTR [rdx-0x5dd75de8],ah
   14001008e:	xor    BYTE PTR [rdx-0x5db75dc0],ah
   140010094:	pop    rax
   140010095:	movabs ds:0xa288a278a270a260,al
   14001009e:	nop
   14001009f:	movabs ds:0xa2c0a2b8a2a8a2a0,al
   1400100a8:	shl    BYTE PTR [rdx-0x5d175d28],1
   1400100ae:	lock movabs ds:0xa320a318a308a300,al
   1400100b8:	xor    BYTE PTR [rbx-0x5cb75cc8],ah
   1400100be:	push   rax
   1400100bf:	movabs ds:0xa380a378a368a360,eax
   1400100c8:	nop
   1400100c9:	movabs ds:0xa3c0a3b0a3a8a398,eax
   1400100d2:	enter  0xd8a3,0xa3
   1400100d6:	loopne 0x14001007b
   1400100d8:	lock movabs ds:0xa420a410a408a3f8,eax
   1400100e2:	sub    BYTE PTR [rax+rdi*1+0x50a440a4],ah
   1400100e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400100ea:	pop    rax
   1400100eb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400100ec:	push   0xffffffff80a470a4
   1400100f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400100f2:	mov    BYTE PTR [rax+rbx*4-0x4f5b5f5c],ah
   1400100f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400100fa:	mov    eax,0xd0a4c8a4
   1400100ff:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010100:	loopne 0x1400100a6
   140010102:	call   0x140a5f9ab
   140010107:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010108:	adc    BYTE PTR [rbp-0x5ad75ae8],ah
   14001010e:	xor    BYTE PTR [rbp-0x5ab75ac0],ah
   140010114:	pop    rax
   140010115:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010116:	(bad)  
   140010117:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010118:	jo     0x1400100bf
   14001011a:	js     0x1400100c1
   14001011c:	mov    BYTE PTR [rbp-0x5a5f5a70],ah
   140010122:	test   al,0xa5
   140010124:	mov    eax,0xd0a5c0a5
   140010129:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001012a:	fsub   DWORD PTR [rbp-0x5a0f5a18]
   140010130:	add    BYTE PTR [rsi-0x59e759f8],ah
   140010136:	and    BYTE PTR [rsi-0x59c759d0],ah
   14001013c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001013e:	push   rax
   14001013f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010140:	(bad)  
   140010141:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010142:	push   0xffffffff80a678a6
   140010147:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010148:	nop
   140010149:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001014a:	cwde   
   14001014b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001014c:	test   al,0xa6
   14001014e:	mov    al,0xa6
   140010150:	shl    BYTE PTR [rsi-0x59275938],0xe0
   140010157:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010158:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001015a:	clc    
   14001015b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001015c:	or     BYTE PTR [rdi-0x58df58f0],ah
   140010162:	sub    BYTE PTR [rdi-0x58bf58c8],ah
   140010168:	push   rax
   140010169:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001016a:	pop    rax
   14001016b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001016c:	push   0xffffffff80a770a7
   140010171:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010172:	mov    BYTE PTR [rdi-0x585f5868],ah
   140010178:	mov    eax,0xa7
   14001017d:	loopne 0x14001017f
   14001017f:	add    BYTE PTR [rax],dl
   140010181:	add    BYTE PTR [rax],al
   140010183:	add    BYTE PTR [rax],al
   140010185:	.byte 0xa0
   140010186:	adc    BYTE PTR [rax+0xa020],ah
