
b24b0081430615ffa8993929656fb3efe2450fe6862f6b6a77280d185e6757ad.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	sub    rsp,0x28
   14000100c:	mov    edx,0xc000001d
   140001011:	cmp    ecx,0x8007000e
   140001017:	mov    eax,0xc0000017
   14000101c:	cmovne eax,edx
   14000101f:	xor    r9d,r9d
   140001022:	xor    r8d,r8d
   140001025:	lea    edx,[r9+0x1]
   140001029:	mov    ecx,eax
   14000102b:	call   QWORD PTR [rip+0xf00f]        # 0x140010040
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	mov    rax,rsp
   14000103b:	mov    QWORD PTR [rax+0x8],rbx
   14000103f:	mov    QWORD PTR [rax+0x10],rbp
   140001043:	mov    QWORD PTR [rax+0x18],rsi
   140001047:	mov    QWORD PTR [rax+0x20],rdi
   14000104b:	push   r12
   14000104d:	push   r13
   14000104f:	push   r14
   140001051:	sub    rsp,0x20
   140001055:	xor    r14d,r14d
   140001058:	movsxd rbx,r8d
   14000105b:	mov    r12,rdx
   14000105e:	mov    rdi,rcx
   140001061:	test   rdx,rdx
   140001064:	je     0x140001192
   14000106a:	mov    rcx,QWORD PTR [rcx]
   14000106d:	test   rcx,rcx
   140001070:	je     0x14000107b
   140001072:	test   r8d,r8d
   140001075:	je     0x140001192
   14000107b:	test   r8d,r8d
   14000107e:	jns    0x14000108a
   140001080:	mov    eax,0x80070057
   140001085:	jmp    0x140001194
   14000108a:	call   QWORD PTR [rip+0xf1f8]        # 0x140010288
   140001090:	mov    r8d,0xffffffff
   140001096:	mov    ecx,r8d
   140001099:	sub    ecx,eax
   14000109b:	cmp    ecx,ebx
   14000109d:	jb     0x1400011b3
   1400010a3:	lea    edx,[rax+rbx*1]
   1400010a6:	lea    rbp,[rdx+rdx*1]
   1400010aa:	cmp    rbp,r8
   1400010ad:	ja     0x1400011b3
   1400010b3:	mov    eax,eax
   1400010b5:	lea    r13,[rax+rax*1]
   1400010b9:	cmp    r13,r8
   1400010bc:	ja     0x1400011b3
   1400010c2:	xor    ecx,ecx
   1400010c4:	call   QWORD PTR [rip+0xf1a6]        # 0x140010270
   1400010ca:	mov    rsi,rax
   1400010cd:	test   rax,rax
   1400010d0:	jne    0x1400010dc
   1400010d2:	mov    eax,0x8007000e
   1400010d7:	jmp    0x140001194
   1400010dc:	mov    rcx,QWORD PTR [rdi]
   1400010df:	call   QWORD PTR [rip+0xf1a3]        # 0x140010288
   1400010e5:	test   eax,eax
   1400010e7:	je     0x140001132
   1400010e9:	mov    r8,QWORD PTR [rdi]
   1400010ec:	mov    r9d,r13d
   1400010ef:	mov    edx,ebp
   1400010f1:	mov    rcx,rsi
   1400010f4:	call   0x140003e2c
   1400010f9:	test   eax,eax
   1400010fb:	je     0x140001132
   1400010fd:	cmp    eax,0xc
   140001100:	je     0x140001127
   140001102:	cmp    eax,0x16
   140001105:	je     0x14000111c
   140001107:	cmp    eax,0x22
   14000110a:	je     0x14000111c
   14000110c:	cmp    eax,0x50
   14000110f:	je     0x140001132
   140001111:	mov    ecx,0x80004005
   140001116:	call   0x140001008
   14000111b:	int3   
   14000111c:	mov    ecx,0x80070057
   140001121:	call   0x140001008
   140001126:	int3   
   140001127:	mov    ecx,0x8007000e
   14000112c:	call   0x140001008
   140001131:	int3   
   140001132:	mov    rdx,rbx
   140001135:	lea    rcx,[r13+rsi*1+0x0]
   14000113a:	mov    r8,r12
   14000113d:	add    rdx,rdx
   140001140:	mov    r9,rdx
   140001143:	call   0x140003e2c
   140001148:	test   eax,eax
   14000114a:	je     0x140001181
   14000114c:	cmp    eax,0xc
   14000114f:	je     0x140001176
   140001151:	cmp    eax,0x16
   140001154:	je     0x14000116b
   140001156:	cmp    eax,0x22
   140001159:	je     0x14000116b
   14000115b:	cmp    eax,0x50
   14000115e:	je     0x140001181
   140001160:	mov    ecx,0x80004005
   140001165:	call   0x140001008
   14000116a:	int3   
   14000116b:	mov    ecx,0x80070057
   140001170:	call   0x140001008
   140001175:	int3   
   140001176:	mov    ecx,0x8007000e
   14000117b:	call   0x140001008
   140001180:	int3   
   140001181:	mov    WORD PTR [rsi+rbp*1],r14w
   140001186:	mov    rcx,QWORD PTR [rdi]
   140001189:	call   QWORD PTR [rip+0xf0e9]        # 0x140010278
   14000118f:	mov    QWORD PTR [rdi],rsi
   140001192:	xor    eax,eax
   140001194:	mov    rbx,QWORD PTR [rsp+0x40]
   140001199:	mov    rbp,QWORD PTR [rsp+0x48]
   14000119e:	mov    rsi,QWORD PTR [rsp+0x50]
   1400011a3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400011a8:	add    rsp,0x20
   1400011ac:	pop    r14
   1400011ae:	pop    r13
   1400011b0:	pop    r12
   1400011b2:	ret    
   1400011b3:	mov    eax,0x80070216
   1400011b8:	jmp    0x140001194
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x18],r8
   1400011c5:	mov    QWORD PTR [rsp+0x20],r9
   1400011ca:	push   rbx
   1400011cb:	push   rbp
   1400011cc:	push   rsi
   1400011cd:	push   rdi
   1400011ce:	sub    rsp,0x28
   1400011d2:	xor    ebp,ebp
   1400011d4:	mov    rsi,rcx
   1400011d7:	mov    ebx,ebp
   1400011d9:	test   rdx,rdx
   1400011dc:	je     0x1400011e7
   1400011de:	cmp    rdx,0x7fffffff
   1400011e5:	jbe    0x1400011ec
   1400011e7:	mov    ebx,0x80070057
   1400011ec:	test   ebx,ebx
   1400011ee:	js     0x14000121b
   1400011f0:	lea    rdi,[rdx-0x1]
   1400011f4:	lea    r9,[rsp+0x68]
   1400011f9:	mov    ebx,ebp
   1400011fb:	mov    rdx,rdi
   1400011fe:	call   0x140003e10
   140001203:	test   eax,eax
   140001205:	js     0x140001212
   140001207:	cdqe   
   140001209:	cmp    rax,rdi
   14000120c:	ja     0x140001212
   14000120e:	jne    0x14000121b
   140001210:	jmp    0x140001217
   140001212:	mov    ebx,0x8007007a
   140001217:	mov    WORD PTR [rsi+rdi*2],bp
   14000121b:	mov    eax,ebx
   14000121d:	add    rsp,0x28
   140001221:	pop    rdi
   140001222:	pop    rsi
   140001223:	pop    rbp
   140001224:	pop    rbx
   140001225:	ret    
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	mov    rax,rsp
   14000122f:	mov    QWORD PTR [rax+0x8],rbx
   140001233:	mov    QWORD PTR [rax+0x10],rbp
   140001237:	mov    QWORD PTR [rax+0x18],rsi
   14000123b:	mov    QWORD PTR [rax+0x20],rdi
   14000123f:	push   r12
   140001241:	push   r13
   140001243:	push   r14
   140001245:	sub    rsp,0x30
   140001249:	mov    rsi,QWORD PTR [rsp+0x70]
   14000124e:	xor    r14d,r14d
   140001251:	mov    rdi,r9
   140001254:	mov    rbp,r8
   140001257:	mov    r12,rdx
   14000125a:	mov    r13,rcx
   14000125d:	test   rsi,rsi
   140001260:	je     0x1400012dd
   140001262:	lea    rdx,[rip+0x1510b]        # 0x140016374
   140001269:	lea    ecx,[r14+0x60]
   14000126d:	mov    QWORD PTR [rsi],r14
   140001270:	call   0x140003ebc
   140001275:	mov    rbx,rax
   140001278:	test   rax,rax
   14000127b:	je     0x14000129b
   14000127d:	mov    DWORD PTR [rax],0x1
   140001283:	mov    QWORD PTR [rax+0x8],r14
   140001287:	mov    QWORD PTR [rax+0x10],r14
   14000128b:	or     eax,0xffffffff
   14000128e:	mov    WORD PTR [rbx+0x20],r14w
   140001293:	mov    DWORD PTR [rbx+0x18],eax
   140001296:	mov    DWORD PTR [rbx+0x1c],eax
   140001299:	jmp    0x14000129e
   14000129b:	mov    rbx,r14
   14000129e:	test   rbx,rbx
   1400012a1:	jne    0x1400012aa
   1400012a3:	mov    edi,0x8007000e
   1400012a8:	jmp    0x1400012d9
   1400012aa:	mov    r9,rbp
   1400012ad:	mov    r8,r12
   1400012b0:	mov    rdx,r13
   1400012b3:	mov    rcx,rbx
   1400012b6:	mov    QWORD PTR [rsp+0x20],rdi
   1400012bb:	call   0x1400018e0
   1400012c0:	mov    edi,eax
   1400012c2:	test   eax,eax
   1400012c4:	js     0x1400012cc
   1400012c6:	mov    QWORD PTR [rsi],rbx
   1400012c9:	mov    rbx,r14
   1400012cc:	test   rbx,rbx
   1400012cf:	je     0x1400012d9
   1400012d1:	mov    rcx,rbx
   1400012d4:	call   0x140001308
   1400012d9:	mov    eax,edi
   1400012db:	jmp    0x1400012e2
   1400012dd:	mov    eax,0x80004003
   1400012e2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400012e7:	mov    rbp,QWORD PTR [rsp+0x58]
   1400012ec:	mov    rsi,QWORD PTR [rsp+0x60]
   1400012f1:	mov    rdi,QWORD PTR [rsp+0x68]
   1400012f6:	add    rsp,0x30
   1400012fa:	pop    r14
   1400012fc:	pop    r13
   1400012fe:	pop    r12
   140001300:	ret    
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	mov    QWORD PTR [rsp+0x8],rbx
   14000130d:	push   rdi
   14000130e:	sub    rsp,0x20
   140001312:	dec    DWORD PTR [rcx]
   140001314:	mov    edi,DWORD PTR [rcx]
   140001316:	mov    rbx,rcx
   140001319:	jne    0x140001332
   14000131b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000131f:	test   rcx,rcx
   140001322:	je     0x14000132a
   140001324:	mov    rdx,QWORD PTR [rcx]
   140001327:	call   QWORD PTR [rdx+0x10]
   14000132a:	mov    rcx,rbx
   14000132d:	call   0x140003c2c
   140001332:	mov    eax,edi
   140001334:	mov    rbx,QWORD PTR [rsp+0x30]
   140001339:	add    rsp,0x20
   14000133d:	pop    rdi
   14000133e:	ret    
   14000133f:	int3   
   140001340:	int3   
   140001341:	int3   
   140001342:	int3   
   140001343:	int3   
   140001344:	int3   
   140001345:	int3   
   140001346:	int3   
   140001347:	int3   
   140001348:	mov    QWORD PTR [rsp+0x8],rbx
   14000134d:	push   rbp
   14000134e:	push   rsi
   14000134f:	push   rdi
   140001350:	push   r12
   140001352:	push   r13
   140001354:	push   r14
   140001356:	push   r15
   140001358:	lea    rbp,[rsp-0x27]
   14000135d:	sub    rsp,0xd0
   140001364:	xor    r15d,r15d
   140001367:	mov    r13,rcx
   14000136a:	mov    r14,r8
   14000136d:	mov    r12,rdx
   140001370:	mov    ecx,0x80004003
   140001375:	mov    eax,r15d
   140001378:	test   rdx,rdx
   14000137b:	jne    0x140001381
   14000137d:	mov    eax,ecx
   14000137f:	jmp    0x140001384
   140001381:	mov    QWORD PTR [rdx],r15
   140001384:	test   r8,r8
   140001387:	jne    0x140001390
   140001389:	mov    eax,ecx
   14000138b:	jmp    0x14000149a
   140001390:	or     DWORD PTR [r8],0xffffffff
   140001394:	test   eax,eax
   140001396:	js     0x14000149a
   14000139c:	lea    rcx,[rbp-0x19]
   1400013a0:	mov    rbx,r15
   1400013a3:	mov    QWORD PTR [rbp-0x51],r15
   1400013a7:	mov    QWORD PTR [rbp-0x59],r15
   1400013ab:	mov    QWORD PTR [rbp-0x39],r15
   1400013af:	mov    QWORD PTR [rbp-0x49],r15
   1400013b3:	mov    QWORD PTR [rbp+0x6f],rbx
   1400013b7:	mov    QWORD PTR [rbp-0x41],r15
   1400013bb:	mov    QWORD PTR [rbp+0x77],r15
   1400013bf:	mov    rdi,r15
   1400013c2:	mov    QWORD PTR [rbp+0x7f],r15
   1400013c6:	call   QWORD PTR [rip+0xee94]        # 0x140010260
   1400013cc:	lea    rcx,[rbp-0x31]
   1400013d0:	call   QWORD PTR [rip+0xee8a]        # 0x140010260
   1400013d6:	lea    r8,[rbp-0x59]
   1400013da:	lea    rdx,[rbp-0x51]
   1400013de:	mov    rcx,r13
   1400013e1:	call   0x140001d60
   1400013e6:	mov    esi,eax
   1400013e8:	test   eax,eax
   1400013ea:	js     0x140001415
   1400013ec:	mov    rcx,r13
   1400013ef:	call   0x140001bd0
   1400013f4:	mov    esi,eax
   1400013f6:	test   eax,eax
   1400013f8:	js     0x140001415
   1400013fa:	cmp    DWORD PTR [r13+0x18],0x14
   1400013ff:	je     0x1400014d0
   140001405:	cmp    DWORD PTR [r13+0x18],0x28
   14000140a:	je     0x1400014b5
   140001410:	mov    esi,0x8000ffff
   140001415:	mov    QWORD PTR [r12],r15
   140001419:	or     DWORD PTR [r14],0xffffffff
   14000141d:	lea    rcx,[rbp-0x31]
   140001421:	call   QWORD PTR [rip+0xee59]        # 0x140010280
   140001427:	lea    rcx,[rbp-0x19]
   14000142b:	call   QWORD PTR [rip+0xee4f]        # 0x140010280
   140001431:	mov    rcx,rdi
   140001434:	call   QWORD PTR [rip+0xee3e]        # 0x140010278
   14000143a:	mov    rcx,QWORD PTR [rbp+0x77]
   14000143e:	test   rcx,rcx
   140001441:	je     0x140001449
   140001443:	mov    rax,QWORD PTR [rcx]
   140001446:	call   QWORD PTR [rax+0x10]
   140001449:	mov    rcx,QWORD PTR [rbp-0x41]
   14000144d:	test   rcx,rcx
   140001450:	je     0x140001458
   140001452:	mov    rax,QWORD PTR [rcx]
   140001455:	call   QWORD PTR [rax+0x10]
   140001458:	mov    rcx,QWORD PTR [rbp-0x49]
   14000145c:	test   rcx,rcx
   14000145f:	je     0x140001467
   140001461:	mov    rax,QWORD PTR [rcx]
   140001464:	call   QWORD PTR [rax+0x10]
   140001467:	mov    rcx,QWORD PTR [rbp-0x39]
   14000146b:	test   rcx,rcx
   14000146e:	je     0x140001476
   140001470:	mov    rax,QWORD PTR [rcx]
   140001473:	call   QWORD PTR [rax+0x10]
   140001476:	test   rbx,rbx
   140001479:	je     0x140001484
   14000147b:	mov    rax,QWORD PTR [rbx]
   14000147e:	mov    rcx,rbx
   140001481:	call   QWORD PTR [rax+0x10]
   140001484:	mov    rcx,QWORD PTR [rbp-0x59]
   140001488:	call   QWORD PTR [rip+0xedea]        # 0x140010278
   14000148e:	mov    rcx,QWORD PTR [rbp-0x51]
   140001492:	call   QWORD PTR [rip+0xede0]        # 0x140010278
   140001498:	mov    eax,esi
   14000149a:	mov    rbx,QWORD PTR [rsp+0x110]
   1400014a2:	add    rsp,0xd0
   1400014a9:	pop    r15
   1400014ab:	pop    r14
   1400014ad:	pop    r13
   1400014af:	pop    r12
   1400014b1:	pop    rdi
   1400014b2:	pop    rsi
   1400014b3:	pop    rbp
   1400014b4:	ret    
   1400014b5:	lea    rdx,[rbp+0x6f]
   1400014b9:	mov    rcx,r13
   1400014bc:	call   0x140001ca4
   1400014c1:	mov    rbx,QWORD PTR [rbp+0x6f]
   1400014c5:	mov    esi,eax
   1400014c7:	test   eax,eax
   1400014c9:	jns    0x140001534
   1400014cb:	jmp    0x140001415
   1400014d0:	lea    rax,[rbp+0x6f]
   1400014d4:	test   rax,rax
   1400014d7:	jne    0x1400014e3
   1400014d9:	mov    esi,0x80004003
   1400014de:	jmp    0x140001415
   1400014e3:	lea    rax,[rbp+0x6f]
   1400014e7:	lea    r9,[rip+0x11982]        # 0x140012e70
   1400014ee:	xor    r8d,r8d
   1400014f1:	mov    QWORD PTR [rsp+0x28],rax
   1400014f6:	lea    rax,[rip+0x11983]        # 0x140012e80
   1400014fd:	xor    edx,edx
   1400014ff:	xor    ecx,ecx
   140001501:	mov    QWORD PTR [rbp+0x6f],r15
   140001505:	mov    QWORD PTR [rsp+0x20],rax
   14000150a:	call   QWORD PTR [r13+0x10]
   14000150e:	mov    esi,eax
   140001510:	test   eax,eax
   140001512:	js     0x14000151d
   140001514:	mov    rbx,QWORD PTR [rbp+0x6f]
   140001518:	mov    esi,r15d
   14000151b:	jmp    0x14000152c
   14000151d:	mov    rcx,QWORD PTR [rbp+0x6f]
   140001521:	test   rcx,rcx
   140001524:	je     0x14000152c
   140001526:	mov    rax,QWORD PTR [rcx]
   140001529:	call   QWORD PTR [rax+0x10]
   14000152c:	test   esi,esi
   14000152e:	js     0x140001415
   140001534:	mov    rax,QWORD PTR [rbx]
   140001537:	mov    rcx,rbx
   14000153a:	call   QWORD PTR [rax+0x50]
   14000153d:	mov    esi,eax
   14000153f:	test   eax,eax
   140001541:	js     0x140001415
   140001547:	mov    rax,QWORD PTR [rbx]
   14000154a:	lea    rdx,[rbp-0x39]
   14000154e:	mov    rcx,rbx
   140001551:	call   QWORD PTR [rax+0x68]
   140001554:	mov    esi,eax
   140001556:	test   eax,eax
   140001558:	js     0x140001415
   14000155e:	mov    rcx,QWORD PTR [rbp-0x39]
   140001562:	lea    r8,[rbp-0x49]
   140001566:	lea    rdx,[rip+0x118f3]        # 0x140012e60
   14000156d:	mov    rax,QWORD PTR [rcx]
   140001570:	call   QWORD PTR [rax]
   140001572:	mov    esi,eax
   140001574:	test   eax,eax
   140001576:	js     0x140001415
   14000157c:	mov    rcx,QWORD PTR [rbp-0x49]
   140001580:	mov    rdx,QWORD PTR [rbp-0x51]
   140001584:	lea    r8,[rbp-0x41]
   140001588:	mov    rax,QWORD PTR [rcx]
   14000158b:	call   QWORD PTR [rax+0x160]
   140001591:	mov    esi,eax
   140001593:	test   eax,eax
   140001595:	js     0x140001415
   14000159b:	mov    rcx,QWORD PTR [rbp-0x41]
   14000159f:	mov    rdx,QWORD PTR [rbp-0x59]
   1400015a3:	lea    r8,[rbp+0x77]
   1400015a7:	mov    rax,QWORD PTR [rcx]
   1400015aa:	call   QWORD PTR [rax+0x88]
   1400015b0:	mov    esi,eax
   1400015b2:	test   eax,eax
   1400015b4:	js     0x140001415
   1400015ba:	cmp    QWORD PTR [rbp+0x77],r15
   1400015be:	jne    0x1400015ca
   1400015c0:	mov    esi,0x80004005
   1400015c5:	jmp    0x140001415
   1400015ca:	lea    rcx,[rip+0x11277]        # 0x140012848
   1400015d1:	call   QWORD PTR [rip+0xea61]        # 0x140010038
   1400015d7:	lea    rdx,[rip+0x1126a]        # 0x140012848
   1400015de:	lea    rcx,[rbp+0x7f]
   1400015e2:	mov    r8d,eax
   1400015e5:	call   0x140001038
   1400015ea:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400015ee:	mov    esi,eax
   1400015f0:	test   eax,eax
   1400015f2:	js     0x140001415
   1400015f8:	mov    rcx,QWORD PTR [rbp+0x77]
   1400015fc:	movups xmm0,XMMWORD PTR [rbp-0x19]
   140001600:	movsd  xmm1,QWORD PTR [rbp-0x9]
   140001605:	lea    rdx,[rbp-0x31]
   140001609:	xor    r9d,r9d
   14000160c:	mov    r8d,0x138
   140001612:	mov    rax,QWORD PTR [rcx]
   140001615:	mov    QWORD PTR [rsp+0x48],rdx
   14000161a:	mov    QWORD PTR [rsp+0x40],r15
   14000161f:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140001623:	movsd  QWORD PTR [rbp+0x17],xmm1
   140001628:	mov    QWORD PTR [rsp+0x38],r15
   14000162d:	lea    rdx,[rbp+0x7]
   140001631:	mov    QWORD PTR [rsp+0x30],r15
   140001636:	mov    QWORD PTR [rsp+0x28],r15
   14000163b:	mov    QWORD PTR [rsp+0x20],rdx
   140001640:	mov    rdx,rdi
   140001643:	call   QWORD PTR [rax+0x1b0]
   140001649:	mov    esi,eax
   14000164b:	test   eax,eax
   14000164d:	js     0x140001415
   140001653:	mov    eax,0x3
   140001658:	cmp    ax,WORD PTR [rbp-0x31]
   14000165c:	jne    0x140001410
   140001662:	mov    eax,DWORD PTR [rbp-0x29]
   140001665:	cmp    eax,0x8004063e
   14000166a:	jne    0x1400016eb
   14000166c:	test   r12,r12
   14000166f:	je     0x1400014d9
   140001675:	lea    rdx,[rbp+0x7f]
   140001679:	xor    ecx,ecx
   14000167b:	mov    QWORD PTR [r12],r15
   14000167f:	mov    QWORD PTR [rbp+0x7f],r15
   140001683:	mov    QWORD PTR [rbp+0x6f],r15
   140001687:	call   QWORD PTR [rip+0xec03]        # 0x140010290
   14000168d:	mov    esi,eax
   14000168f:	test   eax,eax
   140001691:	js     0x1400016bc
   140001693:	jne    0x1400016b8
   140001695:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001699:	lea    rdx,[rbp+0x6f]
   14000169d:	mov    rax,QWORD PTR [rcx]
   1400016a0:	call   QWORD PTR [rax+0x28]
   1400016a3:	mov    esi,eax
   1400016a5:	test   eax,eax
   1400016a7:	js     0x1400016bc
   1400016a9:	mov    rax,QWORD PTR [rbp+0x6f]
   1400016ad:	mov    esi,r15d
   1400016b0:	mov    QWORD PTR [rbp+0x6f],r15
   1400016b4:	mov    QWORD PTR [r12],rax
   1400016b8:	test   esi,esi
   1400016ba:	jns    0x1400016c0
   1400016bc:	mov    QWORD PTR [r12],r15
   1400016c0:	mov    rcx,QWORD PTR [rbp+0x6f]
   1400016c4:	call   QWORD PTR [rip+0xebae]        # 0x140010278
   1400016ca:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400016ce:	test   rcx,rcx
   1400016d1:	je     0x1400016d9
   1400016d3:	mov    rax,QWORD PTR [rcx]
   1400016d6:	call   QWORD PTR [rax+0x10]
   1400016d9:	test   esi,esi
   1400016db:	js     0x140001415
   1400016e1:	mov    esi,0x1
   1400016e6:	jmp    0x140001419
   1400016eb:	mov    DWORD PTR [r14],eax
   1400016ee:	mov    esi,r15d
   1400016f1:	jmp    0x14000141d
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	rex push rbx
   1400016fe:	sub    rsp,0x20
   140001702:	lea    rcx,[rip+0x11177]        # 0x140012880
   140001709:	call   0x14000173c
   14000170e:	xor    ebx,ebx
   140001710:	test   eax,eax
   140001712:	js     0x14000172f
   140001714:	jne    0x14000171a
   140001716:	xor    eax,eax
   140001718:	jmp    0x14000172f
   14000171a:	lea    rcx,[rip+0x111bf]        # 0x1400128e0
   140001721:	call   0x14000173c
   140001726:	test   eax,eax
   140001728:	js     0x14000172f
   14000172a:	setne  bl
   14000172d:	mov    eax,ebx
   14000172f:	add    rsp,0x20
   140001733:	pop    rbx
   140001734:	ret    
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	rex push rbx
   14000173e:	sub    rsp,0x30
   140001742:	xor    eax,eax
   140001744:	test   rcx,rcx
   140001747:	mov    edx,0x80070057
   14000174c:	cmove  eax,edx
   14000174f:	lea    rbx,[rip+0x11112]        # 0x140012868
   140001756:	test   rbx,rbx
   140001759:	cmove  eax,edx
   14000175c:	test   eax,eax
   14000175e:	js     0x140001815
   140001764:	and    QWORD PTR [rsp+0x58],0x0
   14000176a:	lea    rax,[rsp+0x58]
   14000176f:	mov    rdx,rcx
   140001772:	mov    r9d,0x20019
   140001778:	xor    r8d,r8d
   14000177b:	mov    rcx,0xffffffff80000002
   140001782:	mov    QWORD PTR [rsp+0x20],rax
   140001787:	call   QWORD PTR [rip+0xe873]        # 0x140010000
   14000178d:	cmp    eax,0x2
   140001790:	je     0x1400017d1
   140001792:	test   eax,eax
   140001794:	jne    0x1400017dc
   140001796:	and    DWORD PTR [rsp+0x40],eax
   14000179a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000179f:	lea    rax,[rsp+0x48]
   1400017a4:	mov    QWORD PTR [rsp+0x28],rax
   1400017a9:	lea    rax,[rsp+0x50]
   1400017ae:	lea    r9,[rsp+0x40]
   1400017b3:	xor    r8d,r8d
   1400017b6:	mov    rdx,rbx
   1400017b9:	mov    DWORD PTR [rsp+0x48],0x4
   1400017c1:	mov    QWORD PTR [rsp+0x20],rax
   1400017c6:	call   QWORD PTR [rip+0xe844]        # 0x140010010
   1400017cc:	cmp    eax,0x2
   1400017cf:	jne    0x1400017d8
   1400017d1:	mov    ebx,0x1
   1400017d6:	jmp    0x140001803
   1400017d8:	test   eax,eax
   1400017da:	je     0x1400017ec
   1400017dc:	movzx  ebx,ax
   1400017df:	or     ebx,0x80070000
   1400017e5:	test   eax,eax
   1400017e7:	cmovle ebx,eax
   1400017ea:	jmp    0x140001803
   1400017ec:	cmp    DWORD PTR [rsp+0x40],0x4
   1400017f1:	mov    ebx,0x1
   1400017f6:	jne    0x140001803
   1400017f8:	xor    eax,eax
   1400017fa:	cmp    DWORD PTR [rsp+0x50],ebx
   1400017fe:	setne  al
   140001801:	mov    ebx,eax
   140001803:	mov    rcx,QWORD PTR [rsp+0x58]
   140001808:	test   rcx,rcx
   14000180b:	je     0x140001813
   14000180d:	call   QWORD PTR [rip+0xe7f5]        # 0x140010008
   140001813:	mov    eax,ebx
   140001815:	add    rsp,0x30
   140001819:	pop    rbx
   14000181a:	ret    
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	int3   
   140001821:	int3   
   140001822:	int3   
   140001823:	int3   
   140001824:	mov    QWORD PTR [rsp+0x8],rbx
   140001829:	mov    QWORD PTR [rsp+0x10],rsi
   14000182e:	push   rdi
   14000182f:	sub    rsp,0x20
   140001833:	xor    esi,esi
   140001835:	mov    rdi,rcx
   140001838:	mov    ebx,esi
   14000183a:	test   rcx,rcx
   14000183d:	je     0x1400018c4
   140001843:	mov    WORD PTR [rcx],si
   140001846:	mov    rdx,rcx
   140001849:	mov    r8d,0x104
   14000184f:	xor    ecx,ecx
   140001851:	call   QWORD PTR [rip+0xe7d9]        # 0x140010030
   140001857:	test   eax,eax
   140001859:	jne    0x140001871
   14000185b:	call   QWORD PTR [rip+0xe7e7]        # 0x140010048
   140001861:	movzx  ebx,ax
   140001864:	or     ebx,0x80070000
   14000186a:	test   eax,eax
   14000186c:	cmovle ebx,eax
   14000186f:	jmp    0x1400018b9
   140001871:	cmp    eax,0x104
   140001876:	jb     0x14000187f
   140001878:	mov    ebx,0x8007000e
   14000187d:	jmp    0x1400018bd
   14000187f:	mov    rcx,rdi
   140001882:	call   QWORD PTR [rip+0xea48]        # 0x1400102d0
   140001888:	test   eax,eax
   14000188a:	jne    0x140001893
   14000188c:	mov    ebx,0x80004005
   140001891:	jmp    0x1400018bd
   140001893:	lea    rdx,[rip+0x1120e]        # 0x140012aa8
   14000189a:	mov    rcx,rdi
   14000189d:	call   QWORD PTR [rip+0xea1d]        # 0x1400102c0
   1400018a3:	test   eax,eax
   1400018a5:	je     0x14000188c
   1400018a7:	mov    rcx,rdi
   1400018aa:	call   QWORD PTR [rip+0xea08]        # 0x1400102b8
   1400018b0:	test   eax,eax
   1400018b2:	jne    0x1400018c0
   1400018b4:	mov    ebx,0x8000ffff
   1400018b9:	test   ebx,ebx
   1400018bb:	jns    0x1400018c0
   1400018bd:	mov    WORD PTR [rdi],si
   1400018c0:	mov    eax,ebx
   1400018c2:	jmp    0x1400018c9
   1400018c4:	mov    eax,0x80004003
   1400018c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ce:	mov    rsi,QWORD PTR [rsp+0x38]
   1400018d3:	add    rsp,0x20
   1400018d7:	pop    rdi
   1400018d8:	ret    
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400018ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400018ef:	push   rdi
   1400018f0:	push   r12
   1400018f2:	push   r13
   1400018f4:	sub    rsp,0x20
   1400018f8:	mov    rdi,QWORD PTR [rsp+0x60]
   1400018fd:	xor    r13d,r13d
   140001900:	mov    rbp,r9
   140001903:	mov    rsi,r8
   140001906:	mov    r12,rdx
   140001909:	mov    rbx,rcx
   14000190c:	cmp    QWORD PTR [rcx+0x8],rdi
   140001910:	je     0x140001933
   140001912:	test   rdi,rdi
   140001915:	je     0x140001920
   140001917:	mov    rax,QWORD PTR [rdi]
   14000191a:	mov    rcx,rdi
   14000191d:	call   QWORD PTR [rax+0x8]
   140001920:	mov    rcx,QWORD PTR [rbx+0x8]
   140001924:	test   rcx,rcx
   140001927:	je     0x14000192f
   140001929:	mov    rax,QWORD PTR [rcx]
   14000192c:	call   QWORD PTR [rax+0x10]
   14000192f:	mov    QWORD PTR [rbx+0x8],rdi
   140001933:	mov    QWORD PTR [rbx+0x10],rbp
   140001937:	cmp    QWORD PTR [rbx+0x8],r13
   14000193b:	jne    0x1400019c5
   140001941:	test   rsi,rsi
   140001944:	je     0x140001950
   140001946:	mov    ecx,0x80070057
   14000194b:	jmp    0x1400019d5
   140001950:	mov    DWORD PTR [rbx+0x18],0x14
   140001957:	call   0x1400016fc
   14000195c:	mov    ecx,eax
   14000195e:	test   eax,eax
   140001960:	js     0x1400019d5
   140001962:	je     0x14000196b
   140001964:	mov    ecx,0x80042001
   140001969:	jmp    0x1400019d5
   14000196b:	lea    rdx,[rbx+0x20]
   14000196f:	lea    r9,[rip+0x11152]        # 0x140012ac8
   140001976:	mov    DWORD PTR [rbx+0x1c],0x23
   14000197d:	mov    r8d,0x1e
   140001983:	mov    ecx,r13d
   140001986:	sub    r9,rdx
   140001989:	lea    rax,[r8+0x7fffffe0]
   140001990:	test   rax,rax
   140001993:	je     0x1400019ab
   140001995:	movzx  eax,WORD PTR [r9+rdx*1]
   14000199a:	test   ax,ax
   14000199d:	je     0x1400019ab
   14000199f:	mov    WORD PTR [rdx],ax
   1400019a2:	add    rdx,0x2
   1400019a6:	dec    r8
   1400019a9:	jne    0x140001989
   1400019ab:	test   r8,r8
   1400019ae:	jne    0x1400019b9
   1400019b0:	sub    rdx,0x2
   1400019b4:	mov    ecx,0x8007007a
   1400019b9:	test   ecx,ecx
   1400019bb:	mov    WORD PTR [rdx],r13w
   1400019bf:	cmovns ecx,r13d
   1400019c3:	jmp    0x1400019d5
   1400019c5:	mov    r8,rsi
   1400019c8:	mov    rdx,r12
   1400019cb:	mov    rcx,rbx
   1400019ce:	call   0x1400019f8
   1400019d3:	mov    ecx,eax
   1400019d5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400019da:	mov    rbp,QWORD PTR [rsp+0x48]
   1400019df:	mov    rsi,QWORD PTR [rsp+0x50]
   1400019e4:	mov    eax,ecx
   1400019e6:	add    rsp,0x20
   1400019ea:	pop    r13
   1400019ec:	pop    r12
   1400019ee:	pop    rdi
   1400019ef:	ret    
   1400019f0:	int3   
   1400019f1:	int3   
   1400019f2:	int3   
   1400019f3:	int3   
   1400019f4:	int3   
   1400019f5:	int3   
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	mov    QWORD PTR [rsp+0x18],rbx
   1400019fd:	push   rbp
   1400019fe:	push   rsi
   1400019ff:	push   rdi
   140001a00:	lea    rbp,[rsp-0x150]
   140001a08:	sub    rsp,0x250
   140001a0f:	mov    rax,QWORD PTR [rip+0x1365a]        # 0x140015070
   140001a16:	xor    rax,rsp
   140001a19:	mov    QWORD PTR [rbp+0x140],rax
   140001a20:	xor    ebx,ebx
   140001a22:	mov    rsi,rdx
   140001a25:	mov    rdi,rcx
   140001a28:	test   rdx,rdx
   140001a2b:	je     0x140001a6f
   140001a2d:	test   r8,r8
   140001a30:	je     0x140001a74
   140001a32:	xor    eax,eax
   140001a34:	mov    DWORD PTR [rcx+0x18],0x28
   140001a3b:	mov    QWORD PTR [rsp+0x20],rax
   140001a40:	mov    DWORD PTR [rsp+0x28],eax
   140001a44:	test   r8,r8
   140001a47:	jne    0x140001ad7
   140001a4d:	call   0x1400016fc
   140001a52:	test   eax,eax
   140001a54:	js     0x140001ba5
   140001a5a:	jne    0x140001a7e
   140001a5c:	or     DWORD PTR [rsp+0x28],0xffffffff
   140001a61:	mov    QWORD PTR [rsp+0x20],0x2
   140001a6a:	jmp    0x140001b6f
   140001a6f:	test   r8,r8
   140001a72:	je     0x140001a32
   140001a74:	mov    eax,0x80070057
   140001a79:	jmp    0x140001ba5
   140001a7e:	lea    rcx,[rip+0x10edb]        # 0x140012960
   140001a85:	call   0x14000173c
   140001a8a:	test   eax,eax
   140001a8c:	js     0x140001ba5
   140001a92:	je     0x140001abd
   140001a94:	lea    rcx,[rip+0x10f35]        # 0x1400129d0
   140001a9b:	call   0x14000173c
   140001aa0:	test   eax,eax
   140001aa2:	js     0x140001ba5
   140001aa8:	je     0x140001abd
   140001aaa:	mov    eax,0x1
   140001aaf:	test   eax,eax
   140001ab1:	js     0x140001ba5
   140001ab7:	jne    0x140001b50
   140001abd:	or     DWORD PTR [rsp+0x28],0xffffffff
   140001ac2:	mov    DWORD PTR [rdi+0x1c],0x28
   140001ac9:	mov    QWORD PTR [rsp+0x20],0x4
   140001ad2:	jmp    0x140001b76
   140001ad7:	lea    rdx,[rsp+0x20]
   140001adc:	mov    rcx,r8
   140001adf:	call   0x14000373c
   140001ae4:	test   eax,eax
   140001ae6:	js     0x140001ba5
   140001aec:	cmp    DWORD PTR [rsp+0x20],0x4
   140001af1:	jne    0x140001b57
   140001af3:	cmp    DWORD PTR [rsp+0x24],ebx
   140001af7:	jne    0x140001ba0
   140001afd:	test   rsi,rsi
   140001b00:	jne    0x140001b09
   140001b02:	mov    ecx,0x80070057
   140001b07:	jmp    0x140001b41
   140001b09:	lea    r8,[rip+0x10f30]        # 0x140012a40
   140001b10:	lea    rcx,[rsp+0x30]
   140001b15:	mov    r9,rsi
   140001b18:	mov    edx,0x104
   140001b1d:	call   0x1400011c0
   140001b22:	test   eax,eax
   140001b24:	js     0x140001b3b
   140001b26:	lea    rcx,[rsp+0x30]
   140001b2b:	call   0x14000173c
   140001b30:	test   eax,eax
   140001b32:	js     0x140001b3b
   140001b34:	je     0x140001b47
   140001b36:	mov    eax,0x1
   140001b3b:	mov    ecx,eax
   140001b3d:	test   eax,eax
   140001b3f:	jns    0x140001b45
   140001b41:	mov    eax,ecx
   140001b43:	jmp    0x140001ba5
   140001b45:	jne    0x140001b50
   140001b47:	mov    DWORD PTR [rdi+0x1c],0x28
   140001b4e:	jmp    0x140001b76
   140001b50:	mov    eax,0x80042002
   140001b55:	jmp    0x140001ba5
   140001b57:	cmp    DWORD PTR [rsp+0x20],0x2
   140001b5c:	jne    0x140001ba0
   140001b5e:	cmp    DWORD PTR [rsp+0x24],ebx
   140001b62:	jne    0x140001ba0
   140001b64:	call   0x1400016fc
   140001b69:	test   eax,eax
   140001b6b:	js     0x140001ba5
   140001b6d:	jne    0x140001b99
   140001b6f:	mov    DWORD PTR [rdi+0x1c],0x23
   140001b76:	mov    rcx,QWORD PTR [rdi+0x8]
   140001b7a:	lea    r8,[rdi+0x20]
   140001b7e:	lea    rdx,[rsp+0x20]
   140001b83:	call   0x140003560
   140001b88:	test   eax,eax
   140001b8a:	js     0x140001ba5
   140001b8c:	sub    ebx,eax
   140001b8e:	neg    ebx
   140001b90:	sbb    eax,eax
   140001b92:	and    eax,0x8004063d
   140001b97:	jmp    0x140001ba5
   140001b99:	mov    eax,0x80042001
   140001b9e:	jmp    0x140001ba5
   140001ba0:	mov    eax,0x8004063d
   140001ba5:	mov    rcx,QWORD PTR [rbp+0x140]
   140001bac:	xor    rcx,rsp
   140001baf:	call   0x140003c50
   140001bb4:	mov    rbx,QWORD PTR [rsp+0x280]
   140001bbc:	add    rsp,0x250
   140001bc3:	pop    rdi
   140001bc4:	pop    rsi
   140001bc5:	pop    rbp
   140001bc6:	ret    
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140001bd5:	mov    QWORD PTR [rsp+0x10],rsi
   140001bda:	push   rdi
   140001bdb:	sub    rsp,0x240
   140001be2:	mov    rax,QWORD PTR [rip+0x13487]        # 0x140015070
   140001be9:	xor    rax,rsp
   140001bec:	mov    QWORD PTR [rsp+0x230],rax
   140001bf4:	cmp    DWORD PTR [rcx+0x1c],0x23
   140001bf8:	je     0x140001c0c
   140001bfa:	cmp    DWORD PTR [rcx+0x1c],0x28
   140001bfe:	jne    0x140001c63
   140001c00:	mov    ebx,0x2
   140001c05:	mov    edi,0x80040640
   140001c0a:	jmp    0x140001c16
   140001c0c:	mov    ebx,0x1
   140001c11:	mov    edi,0x8004063f
   140001c16:	lea    rcx,[rsp+0x20]
   140001c1b:	call   0x140001824
   140001c20:	xor    esi,esi
   140001c22:	mov    ecx,eax
   140001c24:	test   eax,eax
   140001c26:	js     0x140001c75
   140001c28:	lea    rcx,[rsp+0x20]
   140001c2d:	call   QWORD PTR [rip+0xe3f5]        # 0x140010028
   140001c33:	test   rax,rax
   140001c36:	jne    0x140001c4e
   140001c38:	call   QWORD PTR [rip+0xe40a]        # 0x140010048
   140001c3e:	movzx  ecx,ax
   140001c41:	or     ecx,0x80070000
   140001c47:	test   eax,eax
   140001c49:	cmovle ecx,eax
   140001c4c:	jmp    0x140001c75
   140001c4e:	lea    rdx,[rip+0x10e8b]        # 0x140012ae0
   140001c55:	mov    rcx,rax
   140001c58:	call   QWORD PTR [rip+0xe3f2]        # 0x140010050
   140001c5e:	test   rax,rax
   140001c61:	jne    0x140001c6a
   140001c63:	mov    ecx,0x8000ffff
   140001c68:	jmp    0x140001c75
   140001c6a:	mov    ecx,ebx
   140001c6c:	call   rax
   140001c6e:	mov    ecx,edi
   140001c70:	test   eax,eax
   140001c72:	cmovne ecx,esi
   140001c75:	mov    eax,ecx
   140001c77:	mov    rcx,QWORD PTR [rsp+0x230]
   140001c7f:	xor    rcx,rsp
   140001c82:	call   0x140003c50
   140001c87:	lea    r11,[rsp+0x240]
   140001c8f:	mov    rbx,QWORD PTR [r11+0x10]
   140001c93:	mov    rsi,QWORD PTR [r11+0x18]
   140001c97:	mov    rsp,r11
   140001c9a:	pop    rdi
   140001c9b:	ret    
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	int3   
   140001ca1:	int3   
   140001ca2:	int3   
   140001ca3:	int3   
   140001ca4:	mov    r11,rsp
   140001ca7:	mov    QWORD PTR [r11+0x8],rbx
   140001cab:	push   rdi
   140001cac:	sub    rsp,0x20
   140001cb0:	mov    rbx,rdx
   140001cb3:	mov    rdx,rcx
   140001cb6:	test   rbx,rbx
   140001cb9:	je     0x140001d4a
   140001cbf:	and    QWORD PTR [rbx],0x0
   140001cc3:	mov    rcx,QWORD PTR [rcx+0x8]
   140001cc7:	and    QWORD PTR [r11+0x18],0x0
   140001ccc:	and    QWORD PTR [r11+0x10],0x0
   140001cd1:	mov    rax,QWORD PTR [rcx]
   140001cd4:	lea    r9,[r11+0x18]
   140001cd8:	lea    r8,[rip+0x111b1]        # 0x140012e90
   140001cdf:	add    rdx,0x20
   140001ce3:	call   QWORD PTR [rax+0x18]
   140001ce6:	mov    edi,eax
   140001ce8:	test   eax,eax
   140001cea:	js     0x140001d22
   140001cec:	mov    rcx,QWORD PTR [rsp+0x40]
   140001cf1:	lea    r9,[rsp+0x38]
   140001cf6:	lea    r8,[rip+0x11183]        # 0x140012e80
   140001cfd:	mov    rax,QWORD PTR [rcx]
   140001d00:	lea    rdx,[rip+0x11169]        # 0x140012e70
   140001d07:	call   QWORD PTR [rax+0x48]
   140001d0a:	mov    edi,eax
   140001d0c:	test   eax,eax
   140001d0e:	js     0x140001d22
   140001d10:	mov    rax,QWORD PTR [rsp+0x38]
   140001d15:	and    QWORD PTR [rsp+0x38],0x0
   140001d1b:	mov    QWORD PTR [rbx],rax
   140001d1e:	xor    edi,edi
   140001d20:	jmp    0x140001d36
   140001d22:	mov    rcx,QWORD PTR [rsp+0x38]
   140001d27:	and    QWORD PTR [rbx],0x0
   140001d2b:	test   rcx,rcx
   140001d2e:	je     0x140001d36
   140001d30:	mov    rax,QWORD PTR [rcx]
   140001d33:	call   QWORD PTR [rax+0x10]
   140001d36:	mov    rcx,QWORD PTR [rsp+0x40]
   140001d3b:	test   rcx,rcx
   140001d3e:	je     0x140001d46
   140001d40:	mov    rax,QWORD PTR [rcx]
   140001d43:	call   QWORD PTR [rax+0x10]
   140001d46:	mov    eax,edi
   140001d48:	jmp    0x140001d4f
   140001d4a:	mov    eax,0x80004003
   140001d4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d54:	add    rsp,0x20
   140001d58:	pop    rdi
   140001d59:	ret    
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    QWORD PTR [rsp+0x8],rbx
   140001d65:	mov    QWORD PTR [rsp+0x20],rsi
   140001d6a:	push   rbp
   140001d6b:	push   rdi
   140001d6c:	push   r12
   140001d6e:	mov    rbp,rsp
   140001d71:	sub    rsp,0x20
   140001d75:	mov    r12,rdx
   140001d78:	xor    eax,eax
   140001d7a:	mov    rsi,r8
   140001d7d:	mov    edx,0x80004003
   140001d82:	test   r12,r12
   140001d85:	jne    0x140001d8b
   140001d87:	mov    eax,edx
   140001d89:	jmp    0x140001d8f
   140001d8b:	and    QWORD PTR [r12],rax
   140001d8f:	test   r8,r8
   140001d92:	jne    0x140001d9b
   140001d94:	mov    eax,edx
   140001d96:	jmp    0x140001e37
   140001d9b:	and    QWORD PTR [r8],0x0
   140001d9f:	test   eax,eax
   140001da1:	js     0x140001e37
   140001da7:	and    QWORD PTR [rbp+0x30],0x0
   140001dac:	xor    ebx,ebx
   140001dae:	cmp    DWORD PTR [rcx+0x1c],0x23
   140001db2:	mov    QWORD PTR [rbp+0x28],rbx
   140001db6:	je     0x140001e4a
   140001dbc:	cmp    DWORD PTR [rcx+0x1c],0x28
   140001dc0:	je     0x140001dc9
   140001dc2:	mov    edi,0x80070057
   140001dc7:	jmp    0x140001e19
   140001dc9:	lea    rcx,[rip+0x10ec0]        # 0x140012c90
   140001dd0:	call   QWORD PTR [rip+0xe262]        # 0x140010038
   140001dd6:	lea    rdx,[rip+0x10eb3]        # 0x140012c90
   140001ddd:	lea    rcx,[rbp+0x30]
   140001de1:	mov    r8d,eax
   140001de4:	call   0x140001038
   140001de9:	mov    edi,eax
   140001deb:	test   eax,eax
   140001ded:	js     0x140001e19
   140001def:	lea    rcx,[rip+0x10dfa]        # 0x140012bf0
   140001df6:	call   QWORD PTR [rip+0xe23c]        # 0x140010038
   140001dfc:	lea    rdx,[rip+0x10ded]        # 0x140012bf0
   140001e03:	lea    rcx,[rbp+0x28]
   140001e07:	mov    r8d,eax
   140001e0a:	call   0x140001038
   140001e0f:	mov    edi,eax
   140001e11:	test   eax,eax
   140001e13:	jns    0x140001e63
   140001e15:	mov    rbx,QWORD PTR [rbp+0x28]
   140001e19:	and    QWORD PTR [r12],0x0
   140001e1e:	and    QWORD PTR [rsi],0x0
   140001e22:	mov    rcx,rbx
   140001e25:	call   QWORD PTR [rip+0xe44d]        # 0x140010278
   140001e2b:	mov    rcx,QWORD PTR [rbp+0x30]
   140001e2f:	call   QWORD PTR [rip+0xe443]        # 0x140010278
   140001e35:	mov    eax,edi
   140001e37:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e3c:	mov    rsi,QWORD PTR [rsp+0x58]
   140001e41:	add    rsp,0x20
   140001e45:	pop    r12
   140001e47:	pop    rdi
   140001e48:	pop    rbp
   140001e49:	ret    
   140001e4a:	lea    rcx,[rip+0x10caf]        # 0x140012b00
   140001e51:	call   QWORD PTR [rip+0xe1e1]        # 0x140010038
   140001e57:	lea    rdx,[rip+0x10ca2]        # 0x140012b00
   140001e5e:	jmp    0x140001ddd
   140001e63:	mov    rax,QWORD PTR [rbp+0x30]
   140001e67:	and    QWORD PTR [rbp+0x30],rbx
   140001e6b:	mov    QWORD PTR [r12],rax
   140001e6f:	mov    rax,QWORD PTR [rbp+0x28]
   140001e73:	xor    edi,edi
   140001e75:	mov    QWORD PTR [rsi],rax
   140001e78:	jmp    0x140001e22
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	mov    r11,rsp
   140001e83:	mov    QWORD PTR [r11+0x8],rbx
   140001e87:	mov    QWORD PTR [r11+0x18],rbp
   140001e8b:	push   rsi
   140001e8c:	push   rdi
   140001e8d:	push   r12
   140001e8f:	sub    rsp,0x20
   140001e93:	lea    rax,[r11+0x10]
   140001e97:	xor    ebp,ebp
   140001e99:	xor    esi,esi
   140001e9b:	xor    ebx,ebx
   140001e9d:	mov    r12,rcx
   140001ea0:	test   rax,rax
   140001ea3:	je     0x140001f39
   140001ea9:	and    QWORD PTR [r11+0x10],rbx
   140001ead:	lea    rcx,[rip+0x10964]        # 0x140012818
   140001eb4:	call   QWORD PTR [rip+0xe16e]        # 0x140010028
   140001eba:	test   rax,rax
   140001ebd:	jne    0x140001ee6
   140001ebf:	call   QWORD PTR [rip+0xe183]        # 0x140010048
   140001ec5:	cmp    eax,0x2
   140001ec8:	je     0x140001edf
   140001eca:	cmp    eax,0x7e
   140001ecd:	je     0x140001edf
   140001ecf:	movzx  edi,ax
   140001ed2:	or     edi,0x80070000
   140001ed8:	test   eax,eax
   140001eda:	cmovle edi,eax
   140001edd:	jmp    0x140001f25
   140001edf:	mov    edi,0x80040641
   140001ee4:	jmp    0x140001f25
   140001ee6:	lea    rdx,[rip+0x11093]        # 0x140012f80
   140001eed:	mov    rcx,rax
   140001ef0:	call   QWORD PTR [rip+0xe15a]        # 0x140010050
   140001ef6:	test   rax,rax
   140001ef9:	jne    0x140001f00
   140001efb:	lea    edi,[rax+0x1]
   140001efe:	jmp    0x140001f25
   140001f00:	lea    r8,[rsp+0x48]
   140001f05:	lea    rdx,[rip+0x110a4]        # 0x140012fb0
   140001f0c:	lea    rcx,[rip+0x108f5]        # 0x140012808
   140001f13:	call   rax
   140001f15:	mov    edi,eax
   140001f17:	test   eax,eax
   140001f19:	js     0x140001f25
   140001f1b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001f20:	and    QWORD PTR [rsp+0x48],rsi
   140001f25:	mov    rcx,QWORD PTR [rsp+0x48]
   140001f2a:	test   rcx,rcx
   140001f2d:	je     0x140001f35
   140001f2f:	mov    rax,QWORD PTR [rcx]
   140001f32:	call   QWORD PTR [rax+0x10]
   140001f35:	test   edi,edi
   140001f37:	je     0x140001f96
   140001f39:	lea    rcx,[rip+0x108d8]        # 0x140012818
   140001f40:	xor    edi,edi
   140001f42:	call   QWORD PTR [rip+0xe0e0]        # 0x140010028
   140001f48:	mov    rbp,rax
   140001f4b:	test   rax,rax
   140001f4e:	jne    0x140001f77
   140001f50:	call   QWORD PTR [rip+0xe0f2]        # 0x140010048
   140001f56:	cmp    eax,0x2
   140001f59:	je     0x140001f70
   140001f5b:	cmp    eax,0x7e
   140001f5e:	je     0x140001f70
   140001f60:	movzx  edi,ax
   140001f63:	or     edi,0x80070000
   140001f69:	test   eax,eax
   140001f6b:	cmovle edi,eax
   140001f6e:	jmp    0x140001fde
   140001f70:	mov    edi,0x80040641
   140001f75:	jmp    0x140001fde
   140001f77:	lea    rdx,[rip+0x108b2]        # 0x140012830
   140001f7e:	mov    rcx,rax
   140001f81:	call   QWORD PTR [rip+0xe0c9]        # 0x140010050
   140001f87:	mov    rsi,rax
   140001f8a:	test   rax,rax
   140001f8d:	jne    0x140001f96
   140001f8f:	mov    edi,0x8000ffff
   140001f94:	jmp    0x140001fd0
   140001f96:	mov    QWORD PTR [r12+0x10],rsi
   140001f9b:	mov    rsi,rbx
   140001f9e:	mov    QWORD PTR [r12],rbp
   140001fa2:	xor    ebp,ebp
   140001fa4:	xor    ebx,ebx
   140001fa6:	cmp    QWORD PTR [r12+0x8],rsi
   140001fab:	je     0x140001fec
   140001fad:	test   rsi,rsi
   140001fb0:	je     0x140001fbb
   140001fb2:	mov    rax,QWORD PTR [rsi]
   140001fb5:	mov    rcx,rsi
   140001fb8:	call   QWORD PTR [rax+0x8]
   140001fbb:	mov    rcx,QWORD PTR [r12+0x8]
   140001fc0:	test   rcx,rcx
   140001fc3:	je     0x140001fcb
   140001fc5:	mov    rax,QWORD PTR [rcx]
   140001fc8:	call   QWORD PTR [rax+0x10]
   140001fcb:	mov    QWORD PTR [r12+0x8],rsi
   140001fd0:	test   rbp,rbp
   140001fd3:	je     0x140001fde
   140001fd5:	mov    rcx,rbp
   140001fd8:	call   QWORD PTR [rip+0xe042]        # 0x140010020
   140001fde:	test   rbx,rbx
   140001fe1:	je     0x140001fec
   140001fe3:	mov    rdx,QWORD PTR [rbx]
   140001fe6:	mov    rcx,rbx
   140001fe9:	call   QWORD PTR [rdx+0x10]
   140001fec:	mov    rbx,QWORD PTR [rsp+0x40]
   140001ff1:	mov    rbp,QWORD PTR [rsp+0x50]
   140001ff6:	mov    eax,edi
   140001ff8:	add    rsp,0x20
   140001ffc:	pop    r12
   140001ffe:	pop    rdi
   140001fff:	pop    rsi
   140002000:	ret    
   140002001:	int3   
   140002002:	int3   
   140002003:	int3   
   140002004:	int3   
   140002005:	int3   
   140002006:	int3   
   140002007:	int3   
   140002008:	mov    r11,rsp
   14000200b:	mov    QWORD PTR [r11+0x8],rbx
   14000200f:	push   rdi
   140002010:	sub    rsp,0x30
   140002014:	mov    rbx,r9
   140002017:	mov    rax,r8
   14000201a:	mov    r10,rdx
   14000201d:	test   r9,r9
   140002020:	je     0x140002064
   140002022:	and    QWORD PTR [r9],0x0
   140002026:	mov    r9,QWORD PTR [rcx+0x8]
   14000202a:	mov    r8,QWORD PTR [rcx+0x10]
   14000202e:	and    QWORD PTR [r11+0x20],0x0
   140002033:	lea    rdx,[r11+0x20]
   140002037:	mov    rcx,r10
   14000203a:	mov    QWORD PTR [r11-0x18],rdx
   14000203e:	mov    rdx,rax
   140002041:	call   0x14000122c
   140002046:	mov    rcx,QWORD PTR [rsp+0x58]
   14000204b:	mov    edi,eax
   14000204d:	test   eax,eax
   14000204f:	js     0x140002056
   140002051:	mov    QWORD PTR [rbx],rcx
   140002054:	xor    ecx,ecx
   140002056:	test   rcx,rcx
   140002059:	je     0x140002060
   14000205b:	call   0x140001308
   140002060:	mov    eax,edi
   140002062:	jmp    0x140002069
   140002064:	mov    eax,0x80004003
   140002069:	mov    rbx,QWORD PTR [rsp+0x40]
   14000206e:	add    rsp,0x30
   140002072:	pop    rdi
   140002073:	ret    
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	rex push rbp
   14000207e:	push   rbx
   14000207f:	push   rsi
   140002080:	push   rdi
   140002081:	push   r12
   140002083:	push   r13
   140002085:	push   r14
   140002087:	push   r15
   140002089:	mov    rbp,rsp
   14000208c:	sub    rsp,0x38
   140002090:	xor    r15d,r15d
   140002093:	mov    r14,rdx
   140002096:	mov    edx,0x80070057
   14000209b:	test   rcx,rcx
   14000209e:	mov    eax,r15d
   1400020a1:	mov    r12,r9
   1400020a4:	cmove  eax,edx
   1400020a7:	mov    r13,r8
   1400020aa:	mov    edx,0x80004003
   1400020af:	test   r14,r14
   1400020b2:	jne    0x1400020b8
   1400020b4:	mov    eax,edx
   1400020b6:	jmp    0x1400020bb
   1400020b8:	mov    QWORD PTR [r14],r15
   1400020bb:	test   r8,r8
   1400020be:	jne    0x1400020c4
   1400020c0:	mov    eax,edx
   1400020c2:	jmp    0x1400020c7
   1400020c4:	mov    QWORD PTR [r8],r15
   1400020c7:	test   r9,r9
   1400020ca:	jne    0x1400020d3
   1400020cc:	mov    eax,edx
   1400020ce:	jmp    0x14000221c
   1400020d3:	mov    QWORD PTR [r9],r15
   1400020d6:	test   eax,eax
   1400020d8:	js     0x14000221c
   1400020de:	lea    rdx,[rbp-0x18]
   1400020e2:	mov    rbx,r15
   1400020e5:	mov    QWORD PTR [rbp-0x18],r15
   1400020e9:	mov    QWORD PTR [rbp+0x50],r15
   1400020ed:	mov    QWORD PTR [rbp+0x48],r15
   1400020f1:	mov    rdi,r15
   1400020f4:	mov    QWORD PTR [rbp+0x60],rbx
   1400020f8:	mov    QWORD PTR [rbp+0x58],r15
   1400020fc:	call   0x140002234
   140002101:	mov    esi,eax
   140002103:	test   eax,eax
   140002105:	js     0x1400021d7
   14000210b:	je     0x140002117
   14000210d:	mov    esi,0x8004063d
   140002112:	jmp    0x1400021d7
   140002117:	mov    rcx,QWORD PTR [rbp-0x18]
   14000211b:	lea    r9,[rbp+0x60]
   14000211f:	lea    r8,[rbp+0x48]
   140002123:	lea    rdx,[rbp+0x50]
   140002127:	call   0x140002428
   14000212c:	mov    rbx,QWORD PTR [rbp+0x60]
   140002130:	mov    esi,eax
   140002132:	test   eax,eax
   140002134:	js     0x1400021d7
   14000213a:	mov    rcx,rbx
   14000213d:	call   QWORD PTR [rip+0xe145]        # 0x140010288
   140002143:	test   eax,eax
   140002145:	je     0x140002177
   140002147:	mov    eax,0x76
   14000214c:	cmp    ax,WORD PTR [rbx]
   14000214f:	jne    0x140002177
   140002151:	lea    rcx,[rbx+0x2]
   140002155:	call   QWORD PTR [rip+0xdedd]        # 0x140010038
   14000215b:	lea    rdx,[rbx+0x2]
   14000215f:	lea    rcx,[rbp+0x58]
   140002163:	mov    r8d,eax
   140002166:	call   0x140001038
   14000216b:	mov    rdi,QWORD PTR [rbp+0x58]
   14000216f:	mov    esi,eax
   140002171:	test   eax,eax
   140002173:	jns    0x1400021b2
   140002175:	jmp    0x1400021d7
   140002177:	mov    rcx,rbx
   14000217a:	call   QWORD PTR [rip+0xe108]        # 0x140010288
   140002180:	test   eax,eax
   140002182:	jne    0x140002189
   140002184:	mov    esi,r15d
   140002187:	jmp    0x1400021ae
   140002189:	lea    r8,[rbp+0x58]
   14000218d:	mov    rdx,rbx
   140002190:	xor    ecx,ecx
   140002192:	mov    QWORD PTR [rbp+0x58],r15
   140002196:	call   QWORD PTR [rip+0xe0cc]        # 0x140010268
   14000219c:	mov    esi,eax
   14000219e:	test   eax,eax
   1400021a0:	js     0x1400021ae
   1400021a2:	xor    ecx,ecx
   1400021a4:	call   QWORD PTR [rip+0xe0ce]        # 0x140010278
   1400021aa:	mov    rdi,QWORD PTR [rbp+0x58]
   1400021ae:	test   esi,esi
   1400021b0:	js     0x1400021d7
   1400021b2:	mov    rax,QWORD PTR [rbp+0x50]
   1400021b6:	mov    QWORD PTR [rbp+0x50],r15
   1400021ba:	mov    QWORD PTR [r14],rax
   1400021bd:	mov    rax,QWORD PTR [rbp+0x48]
   1400021c1:	mov    QWORD PTR [rbp+0x48],r15
   1400021c5:	mov    QWORD PTR [r13+0x0],rax
   1400021c9:	mov    rax,rdi
   1400021cc:	mov    rdi,r15
   1400021cf:	mov    QWORD PTR [r12],rax
   1400021d3:	test   esi,esi
   1400021d5:	jns    0x1400021e2
   1400021d7:	mov    QWORD PTR [r14],r15
   1400021da:	mov    QWORD PTR [r13+0x0],r15
   1400021de:	mov    QWORD PTR [r12],r15
   1400021e2:	mov    rcx,rdi
   1400021e5:	call   QWORD PTR [rip+0xe08d]        # 0x140010278
   1400021eb:	xor    ecx,ecx
   1400021ed:	call   QWORD PTR [rip+0xe085]        # 0x140010278
   1400021f3:	mov    rcx,rbx
   1400021f6:	call   QWORD PTR [rip+0xe07c]        # 0x140010278
   1400021fc:	mov    rcx,QWORD PTR [rbp+0x48]
   140002200:	call   QWORD PTR [rip+0xe072]        # 0x140010278
   140002206:	mov    rcx,QWORD PTR [rbp+0x50]
   14000220a:	call   QWORD PTR [rip+0xe068]        # 0x140010278
   140002210:	mov    rcx,QWORD PTR [rbp-0x18]
   140002214:	call   QWORD PTR [rip+0xe05e]        # 0x140010278
   14000221a:	mov    eax,esi
   14000221c:	add    rsp,0x38
   140002220:	pop    r15
   140002222:	pop    r14
   140002224:	pop    r13
   140002226:	pop    r12
   140002228:	pop    rdi
   140002229:	pop    rsi
   14000222a:	pop    rbx
   14000222b:	pop    rbp
   14000222c:	ret    
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	int3   
   140002231:	int3   
   140002232:	int3   
   140002233:	int3   
   140002234:	mov    QWORD PTR [rsp+0x18],rbx
   140002239:	mov    QWORD PTR [rsp+0x20],rbp
   14000223e:	push   rsi
   14000223f:	push   rdi
   140002240:	push   r13
   140002242:	sub    rsp,0x250
   140002249:	mov    rax,QWORD PTR [rip+0x12e20]        # 0x140015070
   140002250:	xor    rax,rsp
   140002253:	mov    QWORD PTR [rsp+0x240],rax
   14000225b:	xor    eax,eax
   14000225d:	test   rcx,rcx
   140002260:	mov    r13d,0x80070057
   140002266:	cmove  eax,r13d
   14000226a:	mov    rsi,rdx
   14000226d:	mov    rbp,rcx
   140002270:	test   rdx,rdx
   140002273:	jne    0x14000227f
   140002275:	mov    eax,0x80004003
   14000227a:	jmp    0x140002330
   14000227f:	and    QWORD PTR [rdx],0x0
   140002283:	test   eax,eax
   140002285:	js     0x140002330
   14000228b:	and    QWORD PTR [rsp+0x20],0x0
   140002291:	lea    rcx,[rsp+0x30]
   140002296:	call   0x140002360
   14000229b:	mov    ebx,eax
   14000229d:	test   eax,eax
   14000229f:	js     0x14000231f
   1400022a1:	lea    rcx,[rsp+0x30]
   1400022a6:	call   QWORD PTR [rip+0xdd7c]        # 0x140010028
   1400022ac:	mov    rdi,rax
   1400022af:	test   rax,rax
   1400022b2:	jne    0x1400022ca
   1400022b4:	call   QWORD PTR [rip+0xdd8e]        # 0x140010048
   1400022ba:	movzx  ebx,ax
   1400022bd:	or     ebx,0x80070000
   1400022c3:	test   eax,eax
   1400022c5:	cmovle ebx,eax
   1400022c8:	jmp    0x14000231b
   1400022ca:	lea    rdx,[rip+0x10a9f]        # 0x140012d70
   1400022d1:	mov    rcx,rax
   1400022d4:	call   QWORD PTR [rip+0xdd76]        # 0x140010050
   1400022da:	test   rax,rax
   1400022dd:	jne    0x1400022e6
   1400022df:	mov    ebx,0x8000ffff
   1400022e4:	jmp    0x140002312
   1400022e6:	lea    rdx,[rsp+0x20]
   1400022eb:	mov    rcx,rbp
   1400022ee:	call   rax
   1400022f0:	mov    ebx,eax
   1400022f2:	cmp    eax,r13d
   1400022f5:	jne    0x1400022fe
   1400022f7:	mov    ebx,0x1
   1400022fc:	jmp    0x140002312
   1400022fe:	test   eax,eax
   140002300:	js     0x140002312
   140002302:	mov    rax,QWORD PTR [rsp+0x20]
   140002307:	and    QWORD PTR [rsp+0x20],0x0
   14000230d:	xor    ebx,ebx
   14000230f:	mov    QWORD PTR [rsi],rax
   140002312:	mov    rcx,rdi
   140002315:	call   QWORD PTR [rip+0xdd05]        # 0x140010020
   14000231b:	test   ebx,ebx
   14000231d:	jns    0x140002323
   14000231f:	and    QWORD PTR [rsi],0x0
   140002323:	mov    rcx,QWORD PTR [rsp+0x20]
   140002328:	call   QWORD PTR [rip+0xdf4a]        # 0x140010278
   14000232e:	mov    eax,ebx
   140002330:	mov    rcx,QWORD PTR [rsp+0x240]
   140002338:	xor    rcx,rsp
   14000233b:	call   0x140003c50
   140002340:	lea    r11,[rsp+0x250]
   140002348:	mov    rbx,QWORD PTR [r11+0x30]
   14000234c:	mov    rbp,QWORD PTR [r11+0x38]
   140002350:	mov    rsp,r11
   140002353:	pop    r13
   140002355:	pop    rdi
   140002356:	pop    rsi
   140002357:	ret    
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	mov    QWORD PTR [rsp+0x8],rbx
   140002365:	mov    QWORD PTR [rsp+0x10],rsi
   14000236a:	push   rdi
   14000236b:	sub    rsp,0x20
   14000236f:	xor    esi,esi
   140002371:	mov    rdi,rcx
   140002374:	mov    ebx,esi
   140002376:	test   rcx,rcx
   140002379:	je     0x14000240d
   14000237f:	mov    WORD PTR [rcx],si
   140002382:	mov    rdx,rcx
   140002385:	mov    r8d,0x104
   14000238b:	xor    ecx,ecx
   14000238d:	call   QWORD PTR [rip+0xdc9d]        # 0x140010030
   140002393:	test   eax,eax
   140002395:	jne    0x1400023ad
   140002397:	call   QWORD PTR [rip+0xdcab]        # 0x140010048
   14000239d:	movzx  ebx,ax
   1400023a0:	or     ebx,0x80070000
   1400023a6:	test   eax,eax
   1400023a8:	cmovle ebx,eax
   1400023ab:	jmp    0x140002402
   1400023ad:	cmp    eax,0x104
   1400023b2:	jb     0x1400023bb
   1400023b4:	mov    ebx,0x8007000e
   1400023b9:	jmp    0x140002406
   1400023bb:	mov    rcx,rdi
   1400023be:	call   QWORD PTR [rip+0xdf0c]        # 0x1400102d0
   1400023c4:	test   eax,eax
   1400023c6:	jne    0x1400023cf
   1400023c8:	mov    ebx,0x80004005
   1400023cd:	jmp    0x140002406
   1400023cf:	mov    rcx,rdi
   1400023d2:	call   QWORD PTR [rip+0xdef8]        # 0x1400102d0
   1400023d8:	test   eax,eax
   1400023da:	je     0x1400023c8
   1400023dc:	lea    rdx,[rip+0x109ad]        # 0x140012d90
   1400023e3:	mov    rcx,rdi
   1400023e6:	call   QWORD PTR [rip+0xded4]        # 0x1400102c0
   1400023ec:	test   eax,eax
   1400023ee:	je     0x1400023c8
   1400023f0:	mov    rcx,rdi
   1400023f3:	call   QWORD PTR [rip+0xdebf]        # 0x1400102b8
   1400023f9:	test   eax,eax
   1400023fb:	jne    0x140002409
   1400023fd:	mov    ebx,0x8000ffff
   140002402:	test   ebx,ebx
   140002404:	jns    0x140002409
   140002406:	mov    WORD PTR [rdi],si
   140002409:	mov    eax,ebx
   14000240b:	jmp    0x140002412
   14000240d:	mov    eax,0x80004003
   140002412:	mov    rbx,QWORD PTR [rsp+0x30]
   140002417:	mov    rsi,QWORD PTR [rsp+0x38]
   14000241c:	add    rsp,0x20
   140002420:	pop    rdi
   140002421:	ret    
   140002422:	int3   
   140002423:	int3   
   140002424:	int3   
   140002425:	int3   
   140002426:	int3   
   140002427:	int3   
   140002428:	mov    QWORD PTR [rsp+0x8],rcx
   14000242d:	push   rbp
   14000242e:	push   rbx
   14000242f:	push   rsi
   140002430:	push   rdi
   140002431:	push   r12
   140002433:	push   r13
   140002435:	push   r14
   140002437:	push   r15
   140002439:	mov    rbp,rsp
   14000243c:	sub    rsp,0x28
   140002440:	mov    r15,rdx
   140002443:	xor    ebx,ebx
   140002445:	mov    r13,r9
   140002448:	mov    r14,r8
   14000244b:	mov    edx,0x80004003
   140002450:	mov    eax,ebx
   140002452:	test   r15,r15
   140002455:	jne    0x14000245b
   140002457:	mov    eax,edx
   140002459:	jmp    0x14000245e
   14000245b:	mov    QWORD PTR [r15],rbx
   14000245e:	test   r8,r8
   140002461:	jne    0x140002467
   140002463:	mov    eax,edx
   140002465:	jmp    0x14000246a
   140002467:	mov    QWORD PTR [r8],rbx
   14000246a:	test   r9,r9
   14000246d:	jne    0x140002476
   14000246f:	mov    eax,edx
   140002471:	jmp    0x140002534
   140002476:	mov    QWORD PTR [r9],rbx
   140002479:	test   eax,eax
   14000247b:	js     0x140002534
   140002481:	lea    r8,[rbp+0x60]
   140002485:	lea    rdx,[rip+0x1091c]        # 0x140012da8
   14000248c:	mov    QWORD PTR [rbp+0x60],rbx
   140002490:	mov    rdi,rbx
   140002493:	mov    QWORD PTR [rbp+0x50],rbx
   140002497:	mov    rsi,rbx
   14000249a:	mov    QWORD PTR [rbp+0x58],rbx
   14000249e:	call   0x14000254c
   1400024a3:	mov    r12d,eax
   1400024a6:	test   eax,eax
   1400024a8:	js     0x140002508
   1400024aa:	mov    rdi,QWORD PTR [rbp+0x48]
   1400024ae:	lea    r8,[rbp+0x50]
   1400024b2:	lea    rdx,[rip+0x1090f]        # 0x140012dc8
   1400024b9:	mov    rcx,rdi
   1400024bc:	call   0x14000254c
   1400024c1:	mov    r12d,eax
   1400024c4:	test   eax,eax
   1400024c6:	js     0x140002504
   1400024c8:	lea    r8,[rbp+0x58]
   1400024cc:	lea    rdx,[rip+0x10905]        # 0x140012dd8
   1400024d3:	mov    rcx,rdi
   1400024d6:	call   0x14000254c
   1400024db:	mov    r12d,eax
   1400024de:	test   eax,eax
   1400024e0:	js     0x140002500
   1400024e2:	mov    rax,QWORD PTR [rbp+0x60]
   1400024e6:	mov    rdi,rbx
   1400024e9:	mov    r12d,ebx
   1400024ec:	mov    QWORD PTR [r15],rax
   1400024ef:	mov    rax,QWORD PTR [rbp+0x50]
   1400024f3:	mov    QWORD PTR [r14],rax
   1400024f6:	mov    rax,QWORD PTR [rbp+0x58]
   1400024fa:	mov    QWORD PTR [r13+0x0],rax
   1400024fe:	jmp    0x140002516
   140002500:	mov    rsi,QWORD PTR [rbp+0x58]
   140002504:	mov    rdi,QWORD PTR [rbp+0x50]
   140002508:	mov    QWORD PTR [r15],rbx
   14000250b:	mov    QWORD PTR [r14],rbx
   14000250e:	mov    QWORD PTR [r13+0x0],rbx
   140002512:	mov    rbx,QWORD PTR [rbp+0x60]
   140002516:	mov    rcx,rsi
   140002519:	call   QWORD PTR [rip+0xdd59]        # 0x140010278
   14000251f:	mov    rcx,rdi
   140002522:	call   QWORD PTR [rip+0xdd50]        # 0x140010278
   140002528:	mov    rcx,rbx
   14000252b:	call   QWORD PTR [rip+0xdd47]        # 0x140010278
   140002531:	mov    eax,r12d
   140002534:	add    rsp,0x28
   140002538:	pop    r15
   14000253a:	pop    r14
   14000253c:	pop    r13
   14000253e:	pop    r12
   140002540:	pop    rdi
   140002541:	pop    rsi
   140002542:	pop    rbx
   140002543:	pop    rbp
   140002544:	ret    
   140002545:	int3   
   140002546:	int3   
   140002547:	int3   
   140002548:	int3   
   140002549:	int3   
   14000254a:	int3   
   14000254b:	int3   
   14000254c:	mov    QWORD PTR [rsp+0x10],rbx
   140002551:	mov    QWORD PTR [rsp+0x18],rbp
   140002556:	mov    QWORD PTR [rsp+0x20],rdi
   14000255b:	push   r12
   14000255d:	push   r13
   14000255f:	push   r14
   140002561:	sub    rsp,0x20
   140002565:	mov    r12,r8
   140002568:	xor    r13d,r13d
   14000256b:	mov    r8,rcx
   14000256e:	test   r12,r12
   140002571:	je     0x140002577
   140002573:	mov    QWORD PTR [r12],r13
   140002577:	mov    rbx,r13
   14000257a:	mov    r14d,0x7fffffff
   140002580:	mov    QWORD PTR [rsp+0x40],rbx
   140002585:	test   rdx,rdx
   140002588:	je     0x1400025b4
   14000258a:	mov    eax,r14d
   14000258d:	mov    rcx,rdx
   140002590:	mov    edi,r13d
   140002593:	cmp    WORD PTR [rcx],r13w
   140002597:	je     0x1400025a2
   140002599:	add    rcx,0x2
   14000259d:	dec    rax
   1400025a0:	jne    0x140002593
   1400025a2:	test   rax,rax
   1400025a5:	jne    0x1400025ac
   1400025a7:	mov    rbp,r13
   1400025aa:	jmp    0x1400025b9
   1400025ac:	mov    rbp,r14
   1400025af:	sub    rbp,rax
   1400025b2:	jmp    0x1400025be
   1400025b4:	mov    rbp,QWORD PTR [rsp+0x40]
   1400025b9:	mov    edi,0x80070057
   1400025be:	test   edi,edi
   1400025c0:	cmovs  rbp,r13
   1400025c4:	js     0x14000263d
   1400025c6:	mov    rcx,r8
   1400025c9:	call   0x140003ca0
   1400025ce:	test   rax,rax
   1400025d1:	jne    0x1400025da
   1400025d3:	mov    edi,0x80070057
   1400025d8:	jmp    0x14000263d
   1400025da:	lea    rdi,[rax+rbp*2]
   1400025de:	mov    eax,0x3d
   1400025e3:	cmp    ax,WORD PTR [rdi]
   1400025e6:	jne    0x1400025d3
   1400025e8:	lea    edx,[rax-0x1b]
   1400025eb:	cmp    dx,WORD PTR [rdi+0x2]
   1400025ef:	jne    0x1400025d3
   1400025f1:	add    rdi,0x4
   1400025f5:	mov    rcx,rdi
   1400025f8:	call   0x140003c78
   1400025fd:	test   rax,rax
   140002600:	je     0x1400025d3
   140002602:	sub    rax,rdi
   140002605:	sar    rax,1
   140002608:	cmp    rax,r14
   14000260b:	jbe    0x140002614
   14000260d:	mov    edi,0x8000ffff
   140002612:	jmp    0x14000263d
   140002614:	lea    rcx,[rsp+0x40]
   140002619:	mov    r8d,eax
   14000261c:	mov    rdx,rdi
   14000261f:	call   0x140001038
   140002624:	mov    edi,eax
   140002626:	test   eax,eax
   140002628:	js     0x140002638
   14000262a:	mov    rax,QWORD PTR [rsp+0x40]
   14000262f:	mov    edi,r13d
   140002632:	mov    QWORD PTR [r12],rax
   140002636:	jmp    0x14000263d
   140002638:	mov    rbx,QWORD PTR [rsp+0x40]
   14000263d:	mov    rcx,rbx
   140002640:	call   QWORD PTR [rip+0xdc32]        # 0x140010278
   140002646:	mov    rbx,QWORD PTR [rsp+0x48]
   14000264b:	mov    rbp,QWORD PTR [rsp+0x50]
   140002650:	mov    eax,edi
   140002652:	mov    rdi,QWORD PTR [rsp+0x58]
   140002657:	add    rsp,0x20
   14000265b:	pop    r14
   14000265d:	pop    r13
   14000265f:	pop    r12
   140002661:	ret    
   140002662:	int3   
   140002663:	int3   
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	mov    QWORD PTR [rsp+0x8],rbx
   14000266d:	mov    QWORD PTR [rsp+0x10],rbp
   140002672:	mov    QWORD PTR [rsp+0x18],rsi
   140002677:	push   rdi
   140002678:	sub    rsp,0x20
   14000267c:	xor    ebp,ebp
   14000267e:	mov    rdi,rdx
   140002681:	mov    esi,ecx
   140002683:	test   rdx,rdx
   140002686:	je     0x14000268b
   140002688:	mov    WORD PTR [rdx],bp
   14000268b:	cmp    DWORD PTR [rip+0x150bf],ebp        # 0x140017750
   140002691:	jne    0x1400026ba
   140002693:	call   0x140003334
   140002698:	mov    ecx,ebp
   14000269a:	test   eax,eax
   14000269c:	sete   cl
   14000269f:	mov    DWORD PTR [rip+0x150ab],ecx        # 0x140017750
   1400026a5:	neg    ecx
   1400026a7:	sbb    rcx,rcx
   1400026aa:	and    rcx,QWORD PTR [rip+0x150a7]        # 0x140017758
   1400026b1:	mov    QWORD PTR [rip+0x150a0],rcx        # 0x140017758
   1400026b8:	jmp    0x1400026c1
   1400026ba:	mov    rcx,QWORD PTR [rip+0x15097]        # 0x140017758
   1400026c1:	mov    ebx,0x400
   1400026c6:	test   rcx,rcx
   1400026c9:	jne    0x1400026fe
   1400026cb:	lea    r8,[rip+0x10756]        # 0x140012e28
   1400026d2:	mov    rcx,rdi
   1400026d5:	mov    edx,ebp
   1400026d7:	sub    r8,rdi
   1400026da:	lea    rax,[rbx+0x7ffffbfe]
   1400026e1:	test   rax,rax
   1400026e4:	je     0x140002745
   1400026e6:	movzx  eax,WORD PTR [r8+rcx*1]
   1400026eb:	test   ax,ax
   1400026ee:	je     0x140002745
   1400026f0:	mov    WORD PTR [rcx],ax
   1400026f3:	add    rcx,0x2
   1400026f7:	dec    rbx
   1400026fa:	jne    0x1400026da
   1400026fc:	jmp    0x140002745
   1400026fe:	mov    r9d,ebx
   140002701:	mov    r8,rdi
   140002704:	mov    edx,esi
   140002706:	call   QWORD PTR [rip+0xdbdc]        # 0x1400102e8
   14000270c:	test   eax,eax
   14000270e:	jle    0x140002714
   140002710:	cmp    eax,ebx
   140002712:	jb     0x140002762
   140002714:	lea    r8,[rip+0x1070d]        # 0x140012e28
   14000271b:	mov    rcx,rdi
   14000271e:	mov    edx,ebp
   140002720:	sub    r8,rdi
   140002723:	lea    rax,[rbx+0x7ffffbfe]
   14000272a:	test   rax,rax
   14000272d:	je     0x140002745
   14000272f:	movzx  eax,WORD PTR [r8+rcx*1]
   140002734:	test   ax,ax
   140002737:	je     0x140002745
   140002739:	mov    WORD PTR [rcx],ax
   14000273c:	add    rcx,0x2
   140002740:	dec    rbx
   140002743:	jne    0x140002723
   140002745:	test   rbx,rbx
   140002748:	jne    0x140002753
   14000274a:	sub    rcx,0x2
   14000274e:	mov    edx,0x8007007a
   140002753:	mov    WORD PTR [rcx],bp
   140002756:	test   edx,edx
   140002758:	jns    0x140002762
   14000275a:	test   rdi,rdi
   14000275d:	je     0x140002762
   14000275f:	mov    WORD PTR [rdi],bp
   140002762:	mov    rbx,QWORD PTR [rsp+0x30]
   140002767:	mov    rbp,QWORD PTR [rsp+0x38]
   14000276c:	mov    rsi,QWORD PTR [rsp+0x40]
   140002771:	add    rsp,0x20
   140002775:	pop    rdi
   140002776:	ret    
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    QWORD PTR [rsp+0x18],rbx
   140002785:	push   rdi
   140002786:	sub    rsp,0x830
   14000278d:	mov    rax,QWORD PTR [rip+0x128dc]        # 0x140015070
   140002794:	xor    rax,rsp
   140002797:	mov    QWORD PTR [rsp+0x820],rax
   14000279f:	mov    rbx,rdx
   1400027a2:	lea    rdx,[rsp+0x20]
   1400027a7:	call   0x140002668
   1400027ac:	mov    edi,0x400
   1400027b1:	lea    r9,[rip+0x14d88]        # 0x140017540
   1400027b8:	lea    r8,[rsp+0x20]
   1400027bd:	mov    edx,edi
   1400027bf:	mov    rcx,rbx
   1400027c2:	call   0x1400011c0
   1400027c7:	xor    r9d,r9d
   1400027ca:	test   eax,eax
   1400027cc:	jns    0x140002820
   1400027ce:	lea    rdx,[rip+0x10653]        # 0x140012e28
   1400027d5:	mov    rcx,rbx
   1400027d8:	mov    r8d,r9d
   1400027db:	sub    rdx,rbx
   1400027de:	lea    rax,[rdi+0x7ffffbfe]
   1400027e5:	test   rax,rax
   1400027e8:	je     0x1400027ff
   1400027ea:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400027ee:	test   ax,ax
   1400027f1:	je     0x1400027ff
   1400027f3:	mov    WORD PTR [rcx],ax
   1400027f6:	add    rcx,0x2
   1400027fa:	dec    rdi
   1400027fd:	jne    0x1400027de
   1400027ff:	test   rdi,rdi
   140002802:	jne    0x14000280e
   140002804:	sub    rcx,0x2
   140002808:	mov    r8d,0x8007007a
   14000280e:	mov    WORD PTR [rcx],r9w
   140002812:	test   r8d,r8d
   140002815:	jns    0x140002820
   140002817:	test   rbx,rbx
   14000281a:	je     0x140002820
   14000281c:	mov    WORD PTR [rbx],r9w
   140002820:	mov    rcx,QWORD PTR [rsp+0x820]
   140002828:	xor    rcx,rsp
   14000282b:	call   0x140003c50
   140002830:	mov    rbx,QWORD PTR [rsp+0x850]
   140002838:	add    rsp,0x830
   14000283f:	pop    rdi
   140002840:	ret    
   140002841:	int3   
   140002842:	int3   
   140002843:	int3   
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	rex push rbx
   14000284a:	push   rsi
   14000284b:	push   rdi
   14000284c:	sub    rsp,0x840
   140002853:	mov    rax,QWORD PTR [rip+0x12816]        # 0x140015070
   14000285a:	xor    rax,rsp
   14000285d:	mov    QWORD PTR [rsp+0x830],rax
   140002865:	mov    rsi,rdx
   140002868:	lea    rdx,[rsp+0x30]
   14000286d:	mov    rdi,r9
   140002870:	mov    rbx,r8
   140002873:	call   0x140002668
   140002878:	mov    r9,rbx
   14000287b:	mov    ebx,0x400
   140002880:	lea    r8,[rsp+0x30]
   140002885:	mov    rcx,rsi
   140002888:	mov    edx,ebx
   14000288a:	mov    QWORD PTR [rsp+0x20],rdi
   14000288f:	call   0x1400011c0
   140002894:	xor    r9d,r9d
   140002897:	test   eax,eax
   140002899:	jns    0x1400028ed
   14000289b:	lea    rdx,[rip+0x10586]        # 0x140012e28
   1400028a2:	mov    rcx,rsi
   1400028a5:	mov    r8d,r9d
   1400028a8:	sub    rdx,rsi
   1400028ab:	lea    rax,[rbx+0x7ffffbfe]
   1400028b2:	test   rax,rax
   1400028b5:	je     0x1400028cc
   1400028b7:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400028bb:	test   ax,ax
   1400028be:	je     0x1400028cc
   1400028c0:	mov    WORD PTR [rcx],ax
   1400028c3:	add    rcx,0x2
   1400028c7:	dec    rbx
   1400028ca:	jne    0x1400028ab
   1400028cc:	test   rbx,rbx
   1400028cf:	jne    0x1400028db
   1400028d1:	sub    rcx,0x2
   1400028d5:	mov    r8d,0x8007007a
   1400028db:	mov    WORD PTR [rcx],r9w
   1400028df:	test   r8d,r8d
   1400028e2:	jns    0x1400028ed
   1400028e4:	test   rsi,rsi
   1400028e7:	je     0x1400028ed
   1400028e9:	mov    WORD PTR [rsi],r9w
   1400028ed:	mov    rcx,QWORD PTR [rsp+0x830]
   1400028f5:	xor    rcx,rsp
   1400028f8:	call   0x140003c50
   1400028fd:	add    rsp,0x840
   140002904:	pop    rdi
   140002905:	pop    rsi
   140002906:	pop    rbx
   140002907:	ret    
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	mov    rax,rsp
   140002913:	mov    QWORD PTR [rax+0x8],rbx
   140002917:	mov    QWORD PTR [rax+0x10],rbp
   14000291b:	mov    QWORD PTR [rax+0x18],rsi
   14000291f:	mov    QWORD PTR [rax+0x20],rdi
   140002923:	push   r12
   140002925:	push   r13
   140002927:	push   r14
   140002929:	sub    rsp,0x20
   14000292d:	xor    r13d,r13d
   140002930:	cmp    ecx,0x1
   140002933:	mov    r12,rdx
   140002936:	mov    edx,0x80070057
   14000293b:	mov    eax,r13d
   14000293e:	mov    rsi,r8
   140002941:	cmovl  eax,edx
   140002944:	test   r12,r12
   140002947:	cmove  eax,edx
   14000294a:	test   r8,r8
   14000294d:	jne    0x140002959
   14000294f:	mov    eax,0x80004003
   140002954:	jmp    0x140002a1f
   140002959:	mov    QWORD PTR [r8],r13
   14000295c:	test   eax,eax
   14000295e:	js     0x140002a1f
   140002964:	call   QWORD PTR [rip+0xd6ee]        # 0x140010058
   14000296a:	or     r8,0xffffffffffffffff
   14000296e:	mov    rbx,rax
   140002971:	xor    eax,eax
   140002973:	mov    rcx,r8
   140002976:	mov    rdi,rbx
   140002979:	repnz scas ax,WORD PTR es:[rdi]
   14000297c:	not    rcx
   14000297f:	dec    rcx
   140002982:	mov    rdx,rcx
   140002985:	cmp    rcx,0x1
   140002989:	jb     0x1400029e7
   14000298b:	mov    rdi,QWORD PTR [r12]
   14000298f:	mov    ebp,r13d
   140002992:	lea    r14d,[rax+0x22]
   140002996:	cmp    r14w,WORD PTR [rbx]
   14000299a:	mov    rcx,r8
   14000299d:	sete   bpl
   1400029a1:	repnz scas ax,WORD PTR es:[rdi]
   1400029a4:	not    rcx
   1400029a7:	dec    rcx
   1400029aa:	mov    rdi,rcx
   1400029ad:	test   ebp,ebp
   1400029af:	je     0x1400029ba
   1400029b1:	lea    rax,[rcx+0x2]
   1400029b5:	cmp    rdx,rax
   1400029b8:	jb     0x1400029e7
   1400029ba:	cmp    rdx,rcx
   1400029bd:	jb     0x1400029e7
   1400029bf:	mov    rax,r13
   1400029c2:	mov    r8,rcx
   1400029c5:	mov    rcx,QWORD PTR [r12]
   1400029c9:	test   ebp,ebp
   1400029cb:	setne  al
   1400029ce:	lea    rdx,[rbx+rax*2]
   1400029d2:	call   0x140003ee4
   1400029d7:	test   eax,eax
   1400029d9:	jne    0x1400029e7
   1400029db:	test   ebp,ebp
   1400029dd:	je     0x1400029f1
   1400029df:	cmp    r14w,WORD PTR [rbx+rdi*2+0x2]
   1400029e5:	je     0x1400029f1
   1400029e7:	mov    eax,0x8000ffff
   1400029ec:	mov    QWORD PTR [rsi],r13
   1400029ef:	jmp    0x140002a1f
   1400029f1:	neg    ebp
   1400029f3:	mov    edx,0x20
   1400029f8:	sbb    rax,rax
   1400029fb:	and    eax,0x2
   1400029fe:	add    rax,rdi
   140002a01:	lea    rcx,[rbx+rax*2]
   140002a05:	jmp    0x140002a11
   140002a07:	cmp    r13w,ax
   140002a0b:	je     0x140002a19
   140002a0d:	add    rcx,0x2
   140002a11:	movzx  eax,WORD PTR [rcx]
   140002a14:	cmp    dx,ax
   140002a17:	je     0x140002a07
   140002a19:	mov    QWORD PTR [rsi],rcx
   140002a1c:	mov    eax,r13d
   140002a1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a24:	mov    rbp,QWORD PTR [rsp+0x48]
   140002a29:	mov    rsi,QWORD PTR [rsp+0x50]
   140002a2e:	mov    rdi,QWORD PTR [rsp+0x58]
   140002a33:	add    rsp,0x20
   140002a37:	pop    r14
   140002a39:	pop    r13
   140002a3b:	pop    r12
   140002a3d:	ret    
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	int3   
   140002a41:	int3   
   140002a42:	int3   
   140002a43:	int3   
   140002a44:	mov    QWORD PTR [rsp+0x8],rbx
   140002a49:	push   rbp
   140002a4a:	push   rsi
   140002a4b:	push   rdi
   140002a4c:	lea    rbp,[rsp-0x1d0]
   140002a54:	sub    rsp,0x2d0
   140002a5b:	mov    rax,QWORD PTR [rip+0x1260e]        # 0x140015070
   140002a62:	xor    rax,rsp
   140002a65:	mov    QWORD PTR [rbp+0x1c0],rax
   140002a6c:	xor    esi,esi
   140002a6e:	cmp    ecx,0x1
   140002a71:	mov    eax,0x80070057
   140002a76:	mov    ebx,esi
   140002a78:	mov    rdi,r8
   140002a7b:	cmovl  ebx,eax
   140002a7e:	test   rdx,rdx
   140002a81:	cmove  ebx,eax
   140002a84:	test   r8,r8
   140002a87:	jne    0x140002a93
   140002a89:	mov    ebx,0x80004003
   140002a8e:	jmp    0x140002bbe
   140002a93:	or     DWORD PTR [r8],0xffffffff
   140002a97:	test   ebx,ebx
   140002a99:	js     0x140002bbe
   140002a9f:	lea    r8,[rsp+0x28]
   140002aa4:	mov    QWORD PTR [rsp+0x28],rsi
   140002aa9:	mov    QWORD PTR [rbp-0x58],rsi
   140002aad:	call   0x140002910
   140002ab2:	mov    ebx,eax
   140002ab4:	test   eax,eax
   140002ab6:	js     0x140002ba8
   140002abc:	lea    rax,[rbp-0x50]
   140002ac0:	test   rax,rax
   140002ac3:	je     0x140002ba3
   140002ac9:	lea    rcx,[rbp-0x50]
   140002acd:	mov    WORD PTR [rbp-0x50],si
   140002ad1:	mov    QWORD PTR [rsp+0x30],rsi
   140002ad6:	call   0x1400038a4
   140002adb:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ae0:	mov    ebx,eax
   140002ae2:	test   rcx,rcx
   140002ae5:	je     0x140002aed
   140002ae7:	call   QWORD PTR [rip+0xd51b]        # 0x140010008
   140002aed:	test   ebx,ebx
   140002aef:	jns    0x140002afa
   140002af1:	mov    WORD PTR [rbp-0x50],si
   140002af5:	jmp    0x140002ba8
   140002afa:	mov    ebx,0x70
   140002aff:	lea    rcx,[rsp+0x40]
   140002b04:	xor    edx,edx
   140002b06:	mov    r8d,ebx
   140002b09:	call   0x140006b00
   140002b0e:	lea    rax,[rsp+0x40]
   140002b13:	test   rax,rax
   140002b16:	je     0x140002b69
   140002b18:	or     DWORD PTR [rsp+0x44],0x2000140
   140002b20:	lea    rax,[rbp-0x50]
   140002b24:	lea    rcx,[rsp+0x40]
   140002b29:	mov    QWORD PTR [rsp+0x58],rax
   140002b2e:	mov    rax,QWORD PTR [rsp+0x28]
   140002b33:	mov    DWORD PTR [rsp+0x40],ebx
   140002b37:	mov    QWORD PTR [rsp+0x60],rax
   140002b3c:	mov    DWORD PTR [rsp+0x70],0x5
   140002b44:	call   QWORD PTR [rip+0xd756]        # 0x1400102a0
   140002b4a:	test   eax,eax
   140002b4c:	je     0x140002b83
   140002b4e:	mov    rcx,QWORD PTR [rbp-0x58]
   140002b52:	or     ebx,0xffffffff
   140002b55:	mov    edx,ebx
   140002b57:	call   QWORD PTR [rip+0xd503]        # 0x140010060
   140002b5d:	mov    DWORD PTR [rsp+0x20],eax
   140002b61:	test   eax,eax
   140002b63:	je     0x140002b70
   140002b65:	cmp    eax,ebx
   140002b67:	je     0x140002b83
   140002b69:	mov    ebx,0x8000ffff
   140002b6e:	jmp    0x140002ba8
   140002b70:	mov    rcx,QWORD PTR [rbp-0x58]
   140002b74:	lea    rdx,[rsp+0x20]
   140002b79:	call   QWORD PTR [rip+0xd4e9]        # 0x140010068
   140002b7f:	test   eax,eax
   140002b81:	jne    0x140002b99
   140002b83:	call   QWORD PTR [rip+0xd4bf]        # 0x140010048
   140002b89:	movzx  ebx,ax
   140002b8c:	or     ebx,0x80070000
   140002b92:	test   eax,eax
   140002b94:	cmovle ebx,eax
   140002b97:	jmp    0x140002ba8
   140002b99:	mov    eax,DWORD PTR [rsp+0x20]
   140002b9d:	mov    ebx,esi
   140002b9f:	mov    DWORD PTR [rdi],eax
   140002ba1:	jmp    0x140002ba8
   140002ba3:	mov    ebx,0x80004003
   140002ba8:	mov    rcx,QWORD PTR [rbp-0x58]
   140002bac:	test   rcx,rcx
   140002baf:	je     0x140002bb7
   140002bb1:	call   QWORD PTR [rip+0xd4b9]        # 0x140010070
   140002bb7:	test   ebx,ebx
   140002bb9:	jns    0x140002bbe
   140002bbb:	or     DWORD PTR [rdi],0xffffffff
   140002bbe:	mov    eax,ebx
   140002bc0:	mov    rcx,QWORD PTR [rbp+0x1c0]
   140002bc7:	xor    rcx,rsp
   140002bca:	call   0x140003c50
   140002bcf:	mov    rbx,QWORD PTR [rsp+0x2f0]
   140002bd7:	add    rsp,0x2d0
   140002bde:	pop    rdi
   140002bdf:	pop    rsi
   140002be0:	pop    rbp
   140002be1:	ret    
   140002be2:	int3   
   140002be3:	int3   
   140002be4:	int3   
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	rex push rbp
   140002bea:	push   rbx
   140002beb:	push   rsi
   140002bec:	push   rdi
   140002bed:	push   r12
   140002bef:	mov    rbp,rsp
   140002bf2:	sub    rsp,0x20
   140002bf6:	mov    r12,rdx
   140002bf9:	xor    eax,eax
   140002bfb:	mov    edx,0x80070057
   140002c00:	test   rcx,rcx
   140002c03:	mov    rsi,r8
   140002c06:	cmove  eax,edx
   140002c09:	mov    edx,0x80004003
   140002c0e:	test   r12,r12
   140002c11:	jne    0x140002c17
   140002c13:	mov    eax,edx
   140002c15:	jmp    0x140002c1c
   140002c17:	and    QWORD PTR [r12],0x0
   140002c1c:	test   r8,r8
   140002c1f:	jne    0x140002c28
   140002c21:	mov    eax,edx
   140002c23:	jmp    0x140002cb6
   140002c28:	or     DWORD PTR [r8],0xffffffff
   140002c2c:	test   eax,eax
   140002c2e:	js     0x140002cb6
   140002c34:	and    QWORD PTR [rbp+0x38],0x0
   140002c39:	xor    ebx,ebx
   140002c3b:	lea    rdx,[rbp+0x38]
   140002c3f:	and    QWORD PTR [rbp+0x48],rbx
   140002c43:	and    QWORD PTR [rbp+0x40],rbx
   140002c47:	mov    QWORD PTR [rbp+0x30],rbx
   140002c4b:	call   0x140001348
   140002c50:	mov    edi,eax
   140002c52:	test   eax,eax
   140002c54:	js     0x140002c85
   140002c56:	je     0x140002c81
   140002c58:	mov    rcx,QWORD PTR [rbp+0x38]
   140002c5c:	lea    r9,[rbp+0x40]
   140002c60:	lea    r8,[rbp+0x48]
   140002c64:	lea    rdx,[rbp+0x30]
   140002c68:	call   0x14000207c
   140002c6d:	mov    edi,eax
   140002c6f:	test   eax,eax
   140002c71:	js     0x140002cc1
   140002c73:	mov    rax,QWORD PTR [rbp+0x30]
   140002c77:	or     DWORD PTR [rsi],0xffffffff
   140002c7a:	lea    edi,[rbx+0x1]
   140002c7d:	mov    QWORD PTR [r12],rax
   140002c81:	test   edi,edi
   140002c83:	jns    0x140002c8d
   140002c85:	and    QWORD PTR [r12],0x0
   140002c8a:	or     DWORD PTR [rsi],0xffffffff
   140002c8d:	mov    rcx,QWORD PTR [rbp+0x40]
   140002c91:	call   QWORD PTR [rip+0xd5e1]        # 0x140010278
   140002c97:	mov    rcx,QWORD PTR [rbp+0x48]
   140002c9b:	call   QWORD PTR [rip+0xd5d7]        # 0x140010278
   140002ca1:	mov    rcx,rbx
   140002ca4:	call   QWORD PTR [rip+0xd5ce]        # 0x140010278
   140002caa:	mov    rcx,QWORD PTR [rbp+0x38]
   140002cae:	call   QWORD PTR [rip+0xd5c4]        # 0x140010278
   140002cb4:	mov    eax,edi
   140002cb6:	add    rsp,0x20
   140002cba:	pop    r12
   140002cbc:	pop    rdi
   140002cbd:	pop    rsi
   140002cbe:	pop    rbx
   140002cbf:	pop    rbp
   140002cc0:	ret    
   140002cc1:	mov    rbx,QWORD PTR [rbp+0x30]
   140002cc5:	jmp    0x140002c85
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	rex push rbp
   140002cd2:	push   rbx
   140002cd3:	push   rsi
   140002cd4:	push   rdi
   140002cd5:	push   r12
   140002cd7:	push   r13
   140002cd9:	push   r14
   140002cdb:	mov    rbp,rsp
   140002cde:	sub    rsp,0x30
   140002ce2:	xor    eax,eax
   140002ce4:	mov    r14,rcx
   140002ce7:	mov    ecx,0x80070057
   140002cec:	test   r14,r14
   140002cef:	mov    r12,r9
   140002cf2:	mov    r13,r8
   140002cf5:	cmove  eax,ecx
   140002cf8:	test   rdx,rdx
   140002cfb:	mov    r9,rdx
   140002cfe:	cmove  eax,ecx
   140002d01:	mov    ecx,0x80004003
   140002d06:	test   r8,r8
   140002d09:	jne    0x140002d0f
   140002d0b:	mov    eax,ecx
   140002d0d:	jmp    0x140002d13
   140002d0f:	and    QWORD PTR [r8],0x0
   140002d13:	test   r12,r12
   140002d16:	jne    0x140002d1f
   140002d18:	mov    eax,ecx
   140002d1a:	jmp    0x140002e48
   140002d1f:	or     DWORD PTR [r12],0xffffffff
   140002d24:	test   eax,eax
   140002d26:	js     0x140002e48
   140002d2c:	and    QWORD PTR [rbp+0x50],0x0
   140002d31:	xor    ebx,ebx
   140002d33:	lea    rdx,[rbp+0x50]
   140002d37:	and    QWORD PTR [rbp-0x10],rbx
   140002d3b:	and    QWORD PTR [rbp+0x58],rbx
   140002d3f:	xor    edi,edi
   140002d41:	mov    r8,r12
   140002d44:	mov    rcx,r9
   140002d47:	mov    QWORD PTR [rbp+0x40],rbx
   140002d4b:	mov    QWORD PTR [rbp+0x48],rdi
   140002d4f:	call   0x140001348
   140002d54:	mov    esi,eax
   140002d56:	test   eax,eax
   140002d58:	js     0x140002e08
   140002d5e:	je     0x140002e04
   140002d64:	mov    rcx,QWORD PTR [rbp+0x50]
   140002d68:	lea    r9,[rbp+0x58]
   140002d6c:	lea    r8,[rbp-0x10]
   140002d70:	lea    rdx,[rbp+0x40]
   140002d74:	call   0x14000207c
   140002d79:	mov    esi,eax
   140002d7b:	test   eax,eax
   140002d7d:	js     0x140002e5d
   140002d83:	je     0x140002d9a
   140002d85:	mov    rax,QWORD PTR [rbp+0x40]
   140002d89:	or     DWORD PTR [r12],0xffffffff
   140002d8e:	lea    esi,[rbx+0x1]
   140002d91:	mov    QWORD PTR [r13+0x0],rax
   140002d95:	jmp    0x140002e1f
   140002d9a:	mov    r8,QWORD PTR [rbp+0x58]
   140002d9e:	mov    rdx,QWORD PTR [rbp-0x10]
   140002da2:	lea    r9,[rbp+0x48]
   140002da6:	mov    rcx,r14
   140002da9:	call   0x140002008
   140002dae:	mov    rdi,QWORD PTR [rbp+0x48]
   140002db2:	mov    esi,eax
   140002db4:	test   eax,eax
   140002db6:	js     0x140002e5d
   140002dbc:	je     0x140002dcd
   140002dbe:	mov    rax,QWORD PTR [rbp+0x40]
   140002dc2:	mov    esi,0x1
   140002dc7:	mov    QWORD PTR [r13+0x0],rax
   140002dcb:	jmp    0x140002e0d
   140002dcd:	test   rdi,rdi
   140002dd0:	je     0x140002dd8
   140002dd2:	lea    rcx,[rdi-0x8]
   140002dd6:	jmp    0x140002dda
   140002dd8:	xor    ecx,ecx
   140002dda:	lea    rdx,[rbp+0x50]
   140002dde:	add    rcx,0x8
   140002de2:	mov    r8,r12
   140002de5:	call   0x140001348
   140002dea:	mov    esi,eax
   140002dec:	test   eax,eax
   140002dee:	js     0x140002e5d
   140002df0:	je     0x140002e57
   140002df2:	mov    rax,QWORD PTR [rbp+0x40]
   140002df6:	or     DWORD PTR [r12],0xffffffff
   140002dfb:	mov    esi,0x1
   140002e00:	mov    QWORD PTR [r13+0x0],rax
   140002e04:	test   esi,esi
   140002e06:	jns    0x140002e12
   140002e08:	and    QWORD PTR [r13+0x0],0x0
   140002e0d:	or     DWORD PTR [r12],0xffffffff
   140002e12:	test   rdi,rdi
   140002e15:	je     0x140002e1f
   140002e17:	mov    rcx,rdi
   140002e1a:	call   0x140001308
   140002e1f:	mov    rcx,QWORD PTR [rbp+0x58]
   140002e23:	call   QWORD PTR [rip+0xd44f]        # 0x140010278
   140002e29:	mov    rcx,QWORD PTR [rbp-0x10]
   140002e2d:	call   QWORD PTR [rip+0xd445]        # 0x140010278
   140002e33:	mov    rcx,rbx
   140002e36:	call   QWORD PTR [rip+0xd43c]        # 0x140010278
   140002e3c:	mov    rcx,QWORD PTR [rbp+0x50]
   140002e40:	call   QWORD PTR [rip+0xd432]        # 0x140010278
   140002e46:	mov    eax,esi
   140002e48:	add    rsp,0x30
   140002e4c:	pop    r14
   140002e4e:	pop    r13
   140002e50:	pop    r12
   140002e52:	pop    rdi
   140002e53:	pop    rsi
   140002e54:	pop    rbx
   140002e55:	pop    rbp
   140002e56:	ret    
   140002e57:	mov    rbx,QWORD PTR [rbp+0x40]
   140002e5b:	jmp    0x140002e04
   140002e5d:	mov    rbx,QWORD PTR [rbp+0x40]
   140002e61:	jmp    0x140002e08
   140002e63:	int3   
   140002e64:	int3   
   140002e65:	int3   
   140002e66:	int3   
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	mov    QWORD PTR [rsp+0x10],rbx
   140002e71:	mov    QWORD PTR [rsp+0x18],rsi
   140002e76:	push   rbp
   140002e77:	push   rdi
   140002e78:	push   r12
   140002e7a:	mov    rbp,rsp
   140002e7d:	sub    rsp,0x40
   140002e81:	mov    r12,rcx
   140002e84:	xor    eax,eax
   140002e86:	mov    rsi,rdx
   140002e89:	mov    ecx,0x80004003
   140002e8e:	test   r12,r12
   140002e91:	jne    0x140002e97
   140002e93:	mov    eax,ecx
   140002e95:	jmp    0x140002e9b
   140002e97:	and    QWORD PTR [r12],rax
   140002e9b:	test   rdx,rdx
   140002e9e:	jne    0x140002ea7
   140002ea0:	mov    eax,ecx
   140002ea2:	jmp    0x140002f45
   140002ea7:	or     DWORD PTR [rdx],0xffffffff
   140002eaa:	test   eax,eax
   140002eac:	js     0x140002f45
   140002eb2:	and    QWORD PTR [rbp-0x20],0x0
   140002eb7:	and    QWORD PTR [rbp-0x18],0x0
   140002ebc:	and    QWORD PTR [rbp-0x10],0x0
   140002ec1:	lea    rcx,[rbp-0x20]
   140002ec5:	xor    ebx,ebx
   140002ec7:	mov    QWORD PTR [rbp+0x20],rbx
   140002ecb:	call   0x140001e80
   140002ed0:	mov    edi,eax
   140002ed2:	test   eax,eax
   140002ed4:	js     0x140002f10
   140002ed6:	lea    r9,[rbp+0x20]
   140002eda:	lea    rcx,[rbp-0x20]
   140002ede:	xor    r8d,r8d
   140002ee1:	xor    edx,edx
   140002ee3:	call   0x140002008
   140002ee8:	mov    rbx,QWORD PTR [rbp+0x20]
   140002eec:	mov    edi,eax
   140002eee:	test   eax,eax
   140002ef0:	js     0x140002f10
   140002ef2:	test   rbx,rbx
   140002ef5:	je     0x140002efd
   140002ef7:	lea    rax,[rbx-0x8]
   140002efb:	jmp    0x140002eff
   140002efd:	xor    eax,eax
   140002eff:	cmp    DWORD PTR [rax+0x20],0x14
   140002f03:	je     0x140002f6c
   140002f05:	cmp    DWORD PTR [rax+0x20],0x28
   140002f09:	je     0x140002f58
   140002f0b:	mov    edi,0x8000ffff
   140002f10:	and    QWORD PTR [r12],0x0
   140002f15:	or     DWORD PTR [rsi],0xffffffff
   140002f18:	test   rbx,rbx
   140002f1b:	je     0x140002f25
   140002f1d:	mov    rcx,rbx
   140002f20:	call   0x140001308
   140002f25:	mov    rcx,QWORD PTR [rbp-0x20]
   140002f29:	test   rcx,rcx
   140002f2c:	je     0x140002f34
   140002f2e:	call   QWORD PTR [rip+0xd0ec]        # 0x140010020
   140002f34:	mov    rcx,QWORD PTR [rbp-0x18]
   140002f38:	test   rcx,rcx
   140002f3b:	je     0x140002f43
   140002f3d:	mov    rax,QWORD PTR [rcx]
   140002f40:	call   QWORD PTR [rax+0x10]
   140002f43:	mov    eax,edi
   140002f45:	mov    rbx,QWORD PTR [rsp+0x68]
   140002f4a:	mov    rsi,QWORD PTR [rsp+0x70]
   140002f4f:	add    rsp,0x40
   140002f53:	pop    r12
   140002f55:	pop    rdi
   140002f56:	pop    rbp
   140002f57:	ret    
   140002f58:	lea    rcx,[rbp-0x20]
   140002f5c:	mov    r9,rsi
   140002f5f:	mov    r8,r12
   140002f62:	mov    rdx,rbx
   140002f65:	call   0x140002cd0
   140002f6a:	jmp    0x140002f7a
   140002f6c:	mov    r8,rsi
   140002f6f:	mov    rdx,r12
   140002f72:	mov    rcx,rbx
   140002f75:	call   0x140002be8
   140002f7a:	mov    edi,eax
   140002f7c:	test   eax,eax
   140002f7e:	js     0x140002f10
   140002f80:	xor    eax,eax
   140002f82:	test   edi,edi
   140002f84:	setne  al
   140002f87:	mov    edi,eax
   140002f89:	jmp    0x140002f18
   140002f8b:	int3   
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	int3   
   140002f91:	int3   
   140002f92:	int3   
   140002f93:	int3   
   140002f94:	mov    QWORD PTR [rsp+0x18],rbx
   140002f99:	push   rbp
   140002f9a:	push   rsi
   140002f9b:	push   rdi
   140002f9c:	lea    rbp,[rsp-0xf60]
   140002fa4:	mov    eax,0x1060
   140002fa9:	call   0x14000d150
   140002fae:	sub    rsp,rax
   140002fb1:	mov    rax,QWORD PTR [rip+0x120b8]        # 0x140015070
   140002fb8:	xor    rax,rsp
   140002fbb:	mov    QWORD PTR [rbp+0xf50],rax
   140002fc2:	xor    esi,esi
   140002fc4:	mov    rdi,rdx
   140002fc7:	mov    ebx,ecx
   140002fc9:	cmp    BYTE PTR [rip+0x14784],sil        # 0x140017754
   140002fd0:	jne    0x1400030cf
   140002fd6:	lea    rdx,[rbp+0x750]
   140002fdd:	mov    ecx,0x259
   140002fe2:	call   0x140002668
   140002fe7:	cmp    ebx,0x8004063d
   140002fed:	je     0x1400030a6
   140002ff3:	cmp    ebx,0x8004063f
   140002ff9:	je     0x140003098
   140002fff:	cmp    ebx,0x80040640
   140003005:	je     0x14000308f
   14000300b:	cmp    ebx,0x80040641
   140003011:	je     0x140003088
   140003013:	cmp    ebx,0x80042001
   140003019:	je     0x14000307f
   14000301b:	cmp    ebx,0x80042002
   140003021:	je     0x140003076
   140003023:	cmp    ebx,0x1
   140003026:	je     0x14000305b
   140003028:	lea    r8,[rip+0xff11]        # 0x140012f40
   14000302f:	lea    edx,[rsi+0x14]
   140003032:	lea    rcx,[rsp+0x20]
   140003037:	mov    r9d,ebx
   14000303a:	call   0x1400011c0
   14000303f:	test   eax,eax
   140003041:	jns    0x140003048
   140003043:	mov    WORD PTR [rsp+0x20],si
   140003048:	lea    r9,[rsp+0x20]
   14000304d:	lea    r8,[rip+0x144ec]        # 0x140017540
   140003054:	mov    ecx,0x25e
   140003059:	jmp    0x14000306a
   14000305b:	mov    r8,rdi
   14000305e:	mov    ecx,0x25c
   140003063:	lea    r9,[rip+0x144d6]        # 0x140017540
   14000306a:	lea    rdx,[rsp+0x50]
   14000306f:	call   0x140002848
   140003074:	jmp    0x1400030b5
   140003076:	lea    r8,[rip+0xfebb]        # 0x140012f38
   14000307d:	jmp    0x14000305e
   14000307f:	lea    r8,[rip+0xfeaa]        # 0x140012f30
   140003086:	jmp    0x14000305e
   140003088:	mov    ecx,0x25a
   14000308d:	jmp    0x1400030ab
   14000308f:	lea    r8,[rip+0xfea2]        # 0x140012f38
   140003096:	jmp    0x14000309f
   140003098:	lea    r8,[rip+0xfe91]        # 0x140012f30
   14000309f:	mov    ecx,0x25d
   1400030a4:	jmp    0x140003063
   1400030a6:	mov    ecx,0x25b
   1400030ab:	lea    rdx,[rsp+0x50]
   1400030b0:	call   0x140002780
   1400030b5:	lea    r8,[rbp+0x750]
   1400030bc:	lea    rdx,[rsp+0x50]
   1400030c1:	mov    r9d,0x10
   1400030c7:	xor    ecx,ecx
   1400030c9:	call   QWORD PTR [rip+0xd211]        # 0x1400102e0
   1400030cf:	mov    rcx,QWORD PTR [rbp+0xf50]
   1400030d6:	xor    rcx,rsp
   1400030d9:	call   0x140003c50
   1400030de:	mov    rbx,QWORD PTR [rsp+0x1090]
   1400030e6:	add    rsp,0x1060
   1400030ed:	pop    rdi
   1400030ee:	pop    rsi
   1400030ef:	pop    rbp
   1400030f0:	ret    
   1400030f1:	int3   
   1400030f2:	int3   
   1400030f3:	int3   
   1400030f4:	int3   
   1400030f5:	int3   
   1400030f6:	int3   
   1400030f7:	int3   
   1400030f8:	rex push rbx
   1400030fa:	push   rbp
   1400030fb:	push   rsi
   1400030fc:	push   rdi
   1400030fd:	push   r12
   1400030ff:	push   r13
   140003101:	push   r14
   140003103:	sub    rsp,0x30
   140003107:	xor    r14d,r14d
   14000310a:	or     rbp,0xffffffffffffffff
   14000310e:	mov    r13,rdx
   140003111:	mov    r12d,ecx
   140003114:	mov    BYTE PTR [rip+0x14639],r14b        # 0x140017754
   14000311b:	mov    WORD PTR [rip+0x1441d],r14w        # 0x140017540
   140003123:	cmp    ecx,0x1
   140003126:	jle    0x140003207
   14000312c:	lea    rbx,[rdx+0x8]
   140003130:	lea    esi,[rcx-0x1]
   140003133:	mov    rdx,QWORD PTR [rbx]
   140003136:	lea    rcx,[rip+0xfddb]        # 0x140012f18
   14000313d:	call   0x1400040c8
   140003142:	test   eax,eax
   140003144:	je     0x1400031f3
   14000314a:	mov    rdx,QWORD PTR [rbx]
   14000314d:	lea    rcx,[rip+0xfdd4]        # 0x140012f28
   140003154:	call   0x1400040c8
   140003159:	test   eax,eax
   14000315b:	je     0x1400031f3
   140003161:	cmp    r14w,WORD PTR [rip+0x143d7]        # 0x140017540
   140003169:	jne    0x1400031fa
   14000316f:	mov    rdx,QWORD PTR [rbx]
   140003172:	xor    eax,eax
   140003174:	mov    rcx,rbp
   140003177:	mov    rdi,rdx
   14000317a:	repnz scas ax,WORD PTR es:[rdi]
   14000317d:	not    rcx
   140003180:	dec    rcx
   140003183:	je     0x1400031fa
   140003185:	mov    eax,0x2f
   14000318a:	cmp    ax,WORD PTR [rdx]
   14000318d:	je     0x1400031fa
   14000318f:	mov    edi,0x104
   140003194:	lea    rcx,[rip+0x143a5]        # 0x140017540
   14000319b:	mov    r8d,r14d
   14000319e:	lea    rax,[rdi+0x7ffffefa]
   1400031a5:	test   rax,rax
   1400031a8:	je     0x1400031c2
   1400031aa:	movzx  eax,WORD PTR [rdx]
   1400031ad:	test   ax,ax
   1400031b0:	je     0x1400031c2
   1400031b2:	mov    WORD PTR [rcx],ax
   1400031b5:	add    rdx,0x2
   1400031b9:	add    rcx,0x2
   1400031bd:	dec    rdi
   1400031c0:	jne    0x14000319e
   1400031c2:	test   rdi,rdi
   1400031c5:	jne    0x1400031d1
   1400031c7:	sub    rcx,0x2
   1400031cb:	mov    r8d,0x8007007a
   1400031d1:	mov    WORD PTR [rcx],r14w
   1400031d5:	test   r8d,r8d
   1400031d8:	js     0x1400031e9
   1400031da:	lea    rcx,[rip+0x1435f]        # 0x140017540
   1400031e1:	call   QWORD PTR [rip+0xd0e1]        # 0x1400102c8
   1400031e7:	jmp    0x1400031fa
   1400031e9:	mov    WORD PTR [rip+0x1434f],r14w        # 0x140017540
   1400031f1:	jmp    0x1400031fa
   1400031f3:	mov    BYTE PTR [rip+0x1455a],0x1        # 0x140017754
   1400031fa:	add    rbx,0x8
   1400031fe:	dec    rsi
   140003201:	jne    0x140003133
   140003207:	mov    edx,0x2
   14000320c:	xor    ecx,ecx
   14000320e:	mov    rdi,r14
   140003211:	mov    QWORD PTR [rsp+0x88],r14
   140003219:	mov    DWORD PTR [rsp+0x70],ebp
   14000321d:	call   QWORD PTR [rip+0xd0d5]        # 0x1400102f8
   140003223:	mov    ebx,eax
   140003225:	test   eax,eax
   140003227:	js     0x1400032de
   14000322d:	lea    rax,[rsp+0x80]
   140003235:	test   rax,rax
   140003238:	je     0x140003302
   14000323e:	lea    rax,[rsp+0x80]
   140003246:	lea    rdx,[rip+0xfc53]        # 0x140012ea0
   14000324d:	mov    r9d,0x20019
   140003253:	xor    r8d,r8d
   140003256:	mov    rcx,0xffffffff80000000
   14000325d:	mov    esi,ebp
   14000325f:	mov    QWORD PTR [rsp+0x20],rax
   140003264:	mov    QWORD PTR [rsp+0x80],r14
   14000326c:	call   QWORD PTR [rip+0xcd8e]        # 0x140010000
   140003272:	test   eax,eax
   140003274:	je     0x14000328b
   140003276:	cmp    eax,0x2
   140003279:	je     0x14000328b
   14000327b:	movzx  ebx,ax
   14000327e:	or     ebx,0x80070000
   140003284:	test   eax,eax
   140003286:	cmovle ebx,eax
   140003289:	jmp    0x140003299
   14000328b:	test   eax,eax
   14000328d:	mov    esi,r14d
   140003290:	mov    ebx,r14d
   140003293:	sete   sil
   140003297:	inc    esi
   140003299:	mov    rcx,QWORD PTR [rsp+0x80]
   1400032a1:	test   rcx,rcx
   1400032a4:	je     0x1400032ac
   1400032a6:	call   QWORD PTR [rip+0xcd5c]        # 0x140010008
   1400032ac:	test   ebx,ebx
   1400032ae:	cmovs  esi,ebp
   1400032b1:	js     0x1400032e0
   1400032b3:	dec    esi
   1400032b5:	je     0x1400032ee
   1400032b7:	dec    esi
   1400032b9:	je     0x1400032c2
   1400032bb:	mov    ebx,0x8000ffff
   1400032c0:	jmp    0x1400032e2
   1400032c2:	lea    rdx,[rsp+0x70]
   1400032c7:	lea    rcx,[rsp+0x88]
   1400032cf:	call   0x140002e6c
   1400032d4:	mov    rdi,QWORD PTR [rsp+0x88]
   1400032dc:	mov    ebx,eax
   1400032de:	test   ebx,ebx
   1400032e0:	je     0x140003309
   1400032e2:	mov    rdx,rdi
   1400032e5:	mov    ecx,ebx
   1400032e7:	call   0x140002f94
   1400032ec:	jmp    0x140003313
   1400032ee:	lea    r8,[rsp+0x70]
   1400032f3:	mov    rdx,r13
   1400032f6:	mov    ecx,r12d
   1400032f9:	call   0x140002a44
   1400032fe:	mov    ebx,eax
   140003300:	jmp    0x1400032de
   140003302:	mov    ebx,0x80004003
   140003307:	jmp    0x1400032e2
   140003309:	call   QWORD PTR [rip+0xcff1]        # 0x140010300
   14000330f:	mov    ebp,DWORD PTR [rsp+0x70]
   140003313:	mov    rcx,rdi
   140003316:	call   QWORD PTR [rip+0xcf5c]        # 0x140010278
   14000331c:	mov    eax,ebp
   14000331e:	add    rsp,0x30
   140003322:	pop    r14
   140003324:	pop    r13
   140003326:	pop    r12
   140003328:	pop    rdi
   140003329:	pop    rsi
   14000332a:	pop    rbp
   14000332b:	pop    rbx
   14000332c:	ret    
   14000332d:	int3   
   14000332e:	int3   
   14000332f:	int3   
   140003330:	int3   
   140003331:	int3   
   140003332:	int3   
   140003333:	int3   
   140003334:	mov    rax,rsp
   140003337:	mov    QWORD PTR [rax+0x8],rbx
   14000333b:	mov    QWORD PTR [rax+0x10],rsi
   14000333f:	mov    QWORD PTR [rax+0x18],rdi
   140003343:	mov    QWORD PTR [rax+0x20],r12
   140003347:	push   rbp
   140003348:	push   r14
   14000334a:	push   r15
   14000334c:	lea    rbp,[rax-0x178]
   140003353:	sub    rsp,0x260
   14000335a:	mov    rax,QWORD PTR [rip+0x11d0f]        # 0x140015070
   140003361:	xor    rax,rsp
   140003364:	mov    QWORD PTR [rbp+0x150],rax
   14000336b:	xor    r15d,r15d
   14000336e:	mov    r12d,0x104
   140003374:	lea    rdx,[rsp+0x40]
   140003379:	mov    r8d,r12d
   14000337c:	xor    ecx,ecx
   14000337e:	mov    QWORD PTR [rip+0x143d3],r15        # 0x140017758
   140003385:	mov    QWORD PTR [rsp+0x30],r15
   14000338a:	mov    WORD PTR [rsp+0x38],r15w
   140003390:	mov    esi,r15d
   140003393:	call   QWORD PTR [rip+0xcc97]        # 0x140010030
   140003399:	test   eax,eax
   14000339b:	jne    0x1400033ba
   14000339d:	call   QWORD PTR [rip+0xcca5]        # 0x140010048
   1400033a3:	mov    r11d,eax
   1400033a6:	movzx  eax,ax
   1400033a9:	or     eax,0x80070000
   1400033ae:	test   r11d,r11d
   1400033b1:	cmovle eax,r11d
   1400033b5:	jmp    0x14000351d
   1400033ba:	cmp    eax,r12d
   1400033bd:	jne    0x1400033c9
   1400033bf:	mov    eax,0x8007007a
   1400033c4:	jmp    0x14000351d
   1400033c9:	lea    rcx,[rsp+0x40]
   1400033ce:	mov    edx,0x5c
   1400033d3:	call   0x14000dcf4
   1400033d8:	mov    r14,rax
   1400033db:	test   rax,rax
   1400033de:	jne    0x1400033ea
   1400033e0:	mov    eax,0x8000ffff
   1400033e5:	jmp    0x14000351d
   1400033ea:	lea    rcx,[rip+0xfb6f]        # 0x140012f60
   1400033f1:	movzx  ebx,r15w
   1400033f5:	mov    edi,r15d
   1400033f8:	call   QWORD PTR [rip+0xcd0a]        # 0x140010108
   1400033fe:	test   rax,rax
   140003401:	je     0x140003418
   140003403:	lea    rdx,[rip+0xfb66]        # 0x140012f70
   14000340a:	mov    rcx,rax
   14000340d:	call   QWORD PTR [rip+0xcc3d]        # 0x140010050
   140003413:	test   rax,rax
   140003416:	jne    0x14000342e
   140003418:	call   QWORD PTR [rip+0xcc2a]        # 0x140010048
   14000341e:	movzx  edi,ax
   140003421:	or     edi,0x80070000
   140003427:	test   eax,eax
   140003429:	cmovle edi,eax
   14000342c:	jmp    0x140003432
   14000342e:	call   rax
   140003430:	mov    ebx,eax
   140003432:	test   edi,edi
   140003434:	js     0x14000345a
   140003436:	test   bx,bx
   140003439:	je     0x14000345a
   14000343b:	mov    eax,0x3ff
   140003440:	mov    WORD PTR [rsp+0x30],bx
   140003445:	mov    esi,0x2
   14000344a:	and    bx,ax
   14000344d:	mov    eax,0x400
   140003452:	or     bx,ax
   140003455:	mov    WORD PTR [rsp+0x32],bx
   14000345a:	movsxd rbx,esi
   14000345d:	call   QWORD PTR [rip+0xcc1d]        # 0x140010080
   140003463:	inc    esi
   140003465:	mov    WORD PTR [rsp+rbx*2+0x30],ax
   14000346a:	call   QWORD PTR [rip+0xcc08]        # 0x140010078
   140003470:	movsxd rcx,esi
   140003473:	inc    esi
   140003475:	mov    WORD PTR [rsp+rcx*2+0x30],ax
   14000347a:	mov    ecx,0x409
   14000347f:	movsxd rax,esi
   140003482:	inc    esi
   140003484:	mov    WORD PTR [rsp+rax*2+0x30],cx
   140003489:	cmp    esi,0x5
   14000348c:	ja     0x1400033e0
   140003492:	lea    rcx,[rsp+0x40]
   140003497:	lea    rax,[r14+0x2]
   14000349b:	mov    rbx,r15
   14000349e:	sub    rax,rcx
   1400034a1:	movsxd rdi,esi
   1400034a4:	sar    rax,1
   1400034a7:	sub    r12d,eax
   1400034aa:	test   esi,esi
   1400034ac:	jle    0x140003518
   1400034ae:	movsxd rsi,r12d
   1400034b1:	movzx  eax,WORD PTR [rsp+rbx*2+0x30]
   1400034b6:	lea    rcx,[rip+0xf943]        # 0x140012e00
   1400034bd:	lea    r9,[rip+0xfa8c]        # 0x140012f50
   1400034c4:	mov    QWORD PTR [rsp+0x28],rcx
   1400034c9:	lea    rcx,[r14+0x2]
   1400034cd:	mov    r8,rsi
   1400034d0:	mov    rdx,rsi
   1400034d3:	mov    DWORD PTR [rsp+0x20],eax
   1400034d7:	call   0x14000dd28
   1400034dc:	test   eax,eax
   1400034de:	js     0x1400033bf
   1400034e4:	lea    rcx,[rsp+0x40]
   1400034e9:	call   QWORD PTR [rip+0xcb39]        # 0x140010028
   1400034ef:	test   rax,rax
   1400034f2:	jne    0x14000354d
   1400034f4:	call   QWORD PTR [rip+0xcb4e]        # 0x140010048
   1400034fa:	mov    r11d,eax
   1400034fd:	cmp    eax,0x2
   140003500:	je     0x140003510
   140003502:	cmp    eax,0x3
   140003505:	je     0x140003510
   140003507:	cmp    eax,0x7e
   14000350a:	jne    0x1400033a6
   140003510:	inc    rbx
   140003513:	cmp    rbx,rdi
   140003516:	jl     0x1400034b1
   140003518:	mov    eax,0x80004005
   14000351d:	mov    rcx,QWORD PTR [rbp+0x150]
   140003524:	xor    rcx,rsp
   140003527:	call   0x140003c50
   14000352c:	lea    r11,[rsp+0x260]
   140003534:	mov    rbx,QWORD PTR [r11+0x20]
   140003538:	mov    rsi,QWORD PTR [r11+0x28]
   14000353c:	mov    rdi,QWORD PTR [r11+0x30]
   140003540:	mov    r12,QWORD PTR [r11+0x38]
   140003544:	mov    rsp,r11
   140003547:	pop    r15
   140003549:	pop    r14
   14000354b:	pop    rbp
   14000354c:	ret    
   14000354d:	mov    QWORD PTR [rip+0x14204],rax        # 0x140017758
   140003554:	xor    eax,eax
   140003556:	jmp    0x14000351d
   140003558:	int3   
   140003559:	int3   
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	mov    QWORD PTR [rsp+0x10],rbx
   140003565:	mov    QWORD PTR [rsp+0x20],rsi
   14000356a:	push   rbp
   14000356b:	push   rdi
   14000356c:	push   r12
   14000356e:	push   r13
   140003570:	push   r14
   140003572:	lea    rbp,[rsp-0x37]
   140003577:	sub    rsp,0xb0
   14000357e:	mov    rax,QWORD PTR [rip+0x11aeb]        # 0x140015070
   140003585:	xor    rax,rsp
   140003588:	mov    QWORD PTR [rbp+0x27],rax
   14000358c:	xor    r14d,r14d
   14000358f:	test   rcx,rcx
   140003592:	mov    r12,rdx
   140003595:	mov    edx,0x80070057
   14000359a:	mov    eax,r14d
   14000359d:	mov    rdi,r8
   1400035a0:	cmove  eax,edx
   1400035a3:	test   r8,r8
   1400035a6:	jne    0x1400035b2
   1400035a8:	mov    eax,0x80004003
   1400035ad:	jmp    0x14000370d
   1400035b2:	mov    WORD PTR [r8],r14w
   1400035b6:	test   eax,eax
   1400035b8:	js     0x14000370d
   1400035be:	mov    rax,QWORD PTR [rcx]
   1400035c1:	lea    rdx,[rbp-0x39]
   1400035c5:	mov    QWORD PTR [rbp-0x39],r14
   1400035c9:	mov    QWORD PTR [rbp-0x49],r14
   1400035cd:	mov    esi,r14d
   1400035d0:	mov    r13d,r14d
   1400035d3:	call   QWORD PTR [rax+0x28]
   1400035d6:	mov    ebx,eax
   1400035d8:	test   eax,eax
   1400035da:	js     0x1400036e9
   1400035e0:	mov    rcx,QWORD PTR [rbp-0x39]
   1400035e4:	lea    r9,[rbp-0x41]
   1400035e8:	lea    r8,[rbp-0x49]
   1400035ec:	mov    rax,QWORD PTR [rcx]
   1400035ef:	mov    edx,0x1
   1400035f4:	call   QWORD PTR [rax+0x18]
   1400035f7:	mov    ebx,eax
   1400035f9:	test   eax,eax
   1400035fb:	js     0x1400036e9
   140003601:	cmp    DWORD PTR [rbp-0x41],r14d
   140003605:	je     0x1400036d9
   14000360b:	mov    rcx,QWORD PTR [rbp-0x49]
   14000360f:	mov    DWORD PTR [rbp-0x31],0x1e
   140003616:	lea    r8,[rbp-0x31]
   14000361a:	mov    rax,QWORD PTR [rcx]
   14000361d:	lea    rdx,[rbp-0x19]
   140003621:	call   QWORD PTR [rax+0x18]
   140003624:	mov    ebx,eax
   140003626:	test   eax,eax
   140003628:	js     0x1400036e9
   14000362e:	lea    rdx,[rbp-0x29]
   140003632:	lea    rcx,[rbp-0x19]
   140003636:	call   0x14000373c
   14000363b:	mov    ebx,eax
   14000363d:	cmp    eax,0x80070057
   140003642:	je     0x1400036b6
   140003644:	test   eax,eax
   140003646:	js     0x1400036e9
   14000364c:	mov    r9d,DWORD PTR [rbp-0x29]
   140003650:	cmp    r9d,DWORD PTR [r12]
   140003654:	jne    0x1400036a3
   140003656:	mov    ecx,DWORD PTR [rbp-0x25]
   140003659:	cmp    ecx,DWORD PTR [r12+0x4]
   14000365e:	jne    0x1400036a3
   140003660:	cmp    DWORD PTR [r12+0x8],0xffffffff
   140003666:	mov    eax,DWORD PTR [rbp-0x21]
   140003669:	je     0x140003672
   14000366b:	cmp    eax,DWORD PTR [r12+0x8]
   140003670:	jb     0x1400036a3
   140003672:	test   esi,esi
   140003674:	je     0x14000367b
   140003676:	cmp    eax,r13d
   140003679:	jbe    0x1400036a3
   14000367b:	mov    DWORD PTR [rsp+0x28],eax
   14000367f:	mov    DWORD PTR [rsp+0x20],ecx
   140003683:	mov    esi,0x1
   140003688:	lea    r8,[rip+0xf909]        # 0x140012f98
   14000368f:	lea    edx,[rsi+0x1d]
   140003692:	mov    rcx,rdi
   140003695:	mov    r13d,eax
   140003698:	call   0x1400011c0
   14000369d:	mov    ebx,eax
   14000369f:	test   eax,eax
   1400036a1:	js     0x1400036e9
   1400036a3:	mov    rcx,QWORD PTR [rbp-0x49]
   1400036a7:	test   rcx,rcx
   1400036aa:	je     0x1400036b6
   1400036ac:	mov    QWORD PTR [rbp-0x49],r14
   1400036b0:	mov    rax,QWORD PTR [rcx]
   1400036b3:	call   QWORD PTR [rax+0x10]
   1400036b6:	mov    rcx,QWORD PTR [rbp-0x39]
   1400036ba:	lea    r9,[rbp-0x41]
   1400036be:	lea    r8,[rbp-0x49]
   1400036c2:	mov    rax,QWORD PTR [rcx]
   1400036c5:	mov    edx,0x1
   1400036ca:	call   QWORD PTR [rax+0x18]
   1400036cd:	mov    ebx,eax
   1400036cf:	test   eax,eax
   1400036d1:	jns    0x140003601
   1400036d7:	jmp    0x1400036e5
   1400036d9:	test   esi,esi
   1400036db:	jne    0x1400036e2
   1400036dd:	lea    ebx,[rsi+0x1]
   1400036e0:	jmp    0x1400036e9
   1400036e2:	mov    ebx,r14d
   1400036e5:	test   ebx,ebx
   1400036e7:	jns    0x1400036ed
   1400036e9:	mov    WORD PTR [rdi],r14w
   1400036ed:	mov    rcx,QWORD PTR [rbp-0x49]
   1400036f1:	test   rcx,rcx
   1400036f4:	je     0x1400036fc
   1400036f6:	mov    rax,QWORD PTR [rcx]
   1400036f9:	call   QWORD PTR [rax+0x10]
   1400036fc:	mov    rcx,QWORD PTR [rbp-0x39]
   140003700:	test   rcx,rcx
   140003703:	je     0x14000370b
   140003705:	mov    rax,QWORD PTR [rcx]
   140003708:	call   QWORD PTR [rax+0x10]
   14000370b:	mov    eax,ebx
   14000370d:	mov    rcx,QWORD PTR [rbp+0x27]
   140003711:	xor    rcx,rsp
   140003714:	call   0x140003c50
   140003719:	lea    r11,[rsp+0xb0]
   140003721:	mov    rbx,QWORD PTR [r11+0x38]
   140003725:	mov    rsi,QWORD PTR [r11+0x48]
   140003729:	mov    rsp,r11
   14000372c:	pop    r14
   14000372e:	pop    r13
   140003730:	pop    r12
   140003732:	pop    rdi
   140003733:	pop    rbp
   140003734:	ret    
   140003735:	int3   
   140003736:	int3   
   140003737:	int3   
   140003738:	int3   
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	mov    QWORD PTR [rsp+0x8],rbx
   140003741:	mov    QWORD PTR [rsp+0x18],rbp
   140003746:	push   rsi
   140003747:	push   rdi
   140003748:	push   r12
   14000374a:	sub    rsp,0x70
   14000374e:	mov    rax,QWORD PTR [rip+0x1191b]        # 0x140015070
   140003755:	xor    rax,rsp
   140003758:	mov    QWORD PTR [rsp+0x60],rax
   14000375d:	xor    ebp,ebp
   14000375f:	test   rcx,rcx
   140003762:	mov    r12d,0x80070057
   140003768:	mov    eax,ebp
   14000376a:	mov    rbx,rdx
   14000376d:	mov    r9,rcx
   140003770:	cmove  eax,r12d
   140003774:	test   rdx,rdx
   140003777:	jne    0x140003780
   140003779:	mov    eax,0x80004003
   14000377e:	jmp    0x1400037fe
   140003780:	xor    ecx,ecx
   140003782:	mov    QWORD PTR [rdx],rcx
   140003785:	mov    DWORD PTR [rdx+0x8],ecx
   140003788:	test   eax,eax
   14000378a:	js     0x1400037fe
   14000378c:	lea    rax,[rsp+0x20]
   140003791:	lea    r8d,[rcx+0x1e]
   140003795:	lea    rdx,[rsp+0x20]
   14000379a:	sub    r9,rax
   14000379d:	lea    rax,[r8+0x7fffffe0]
   1400037a4:	test   rax,rax
   1400037a7:	je     0x1400037bf
   1400037a9:	movzx  eax,WORD PTR [r9+rdx*1]
   1400037ae:	test   ax,ax
   1400037b1:	je     0x1400037bf
   1400037b3:	mov    WORD PTR [rdx],ax
   1400037b6:	add    rdx,0x2
   1400037ba:	dec    r8
   1400037bd:	jne    0x14000379d
   1400037bf:	test   r8,r8
   1400037c2:	jne    0x1400037cd
   1400037c4:	sub    rdx,0x2
   1400037c8:	mov    ecx,0x8007007a
   1400037cd:	mov    WORD PTR [rdx],bp
   1400037d0:	test   ecx,ecx
   1400037d2:	js     0x1400037f4
   1400037d4:	mov    eax,0x76
   1400037d9:	lea    rcx,[rsp+0x20]
   1400037de:	lea    rdi,[rsp+0x22]
   1400037e3:	cmp    ax,WORD PTR [rsp+0x20]
   1400037e8:	cmovne rdi,rcx
   1400037ec:	cmp    bp,WORD PTR [rdi]
   1400037ef:	jne    0x140003820
   1400037f1:	mov    ecx,r12d
   1400037f4:	xor    eax,eax
   1400037f6:	mov    QWORD PTR [rbx],rax
   1400037f9:	mov    DWORD PTR [rbx+0x8],eax
   1400037fc:	mov    eax,ecx
   1400037fe:	mov    rcx,QWORD PTR [rsp+0x60]
   140003803:	xor    rcx,rsp
   140003806:	call   0x140003c50
   14000380b:	lea    r11,[rsp+0x70]
   140003810:	mov    rbx,QWORD PTR [r11+0x20]
   140003814:	mov    rbp,QWORD PTR [r11+0x30]
   140003818:	mov    rsp,r11
   14000381b:	pop    r12
   14000381d:	pop    rdi
   14000381e:	pop    rsi
   14000381f:	ret    
   140003820:	mov    edx,0x2e
   140003825:	mov    rcx,rdi
   140003828:	call   0x140003c78
   14000382d:	mov    rsi,rax
   140003830:	test   rax,rax
   140003833:	je     0x1400037f1
   140003835:	mov    rcx,rdi
   140003838:	mov    WORD PTR [rax],bp
   14000383b:	call   0x14000dd50
   140003840:	mov    DWORD PTR [rbx],eax
   140003842:	cmp    bp,WORD PTR [rsi+0x2]
   140003846:	je     0x1400037f1
   140003848:	lea    rcx,[rsi+0x2]
   14000384c:	mov    edx,0x2e
   140003851:	call   0x140003c78
   140003856:	mov    rdi,rax
   140003859:	test   rax,rax
   14000385c:	je     0x1400037f1
   14000385e:	lea    rcx,[rsi+0x2]
   140003862:	mov    WORD PTR [rax],bp
   140003865:	call   0x14000dd50
   14000386a:	mov    DWORD PTR [rbx+0x4],eax
   14000386d:	cmp    bp,WORD PTR [rdi+0x2]
   140003871:	je     0x1400037f1
   140003877:	lea    rcx,[rdi+0x2]
   14000387b:	mov    edx,0x2e
   140003880:	call   0x140003c78
   140003885:	test   rax,rax
   140003888:	jne    0x1400037f1
   14000388e:	lea    rcx,[rdi+0x2]
   140003892:	call   0x14000dd50
   140003897:	mov    ecx,ebp
   140003899:	jmp    0x1400037f9
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	int3   
   1400038a1:	int3   
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400038a9:	mov    QWORD PTR [rsp+0x18],rbp
   1400038ae:	push   rsi
   1400038af:	push   rdi
   1400038b0:	push   r12
   1400038b2:	sub    rsp,0x250
   1400038b9:	mov    rax,QWORD PTR [rip+0x117b0]        # 0x140015070
   1400038c0:	xor    rax,rsp
   1400038c3:	mov    QWORD PTR [rsp+0x240],rax
   1400038cb:	xor    ebp,ebp
   1400038cd:	mov    rbx,rcx
   1400038d0:	test   rcx,rcx
   1400038d3:	je     0x140003a5e
   1400038d9:	lea    rax,[rsp+0x30]
   1400038de:	mov    WORD PTR [rcx],bp
   1400038e1:	test   rax,rax
   1400038e4:	je     0x140003a50
   1400038ea:	lea    rax,[rsp+0x30]
   1400038ef:	lea    edx,[rbp+0x2c]
   1400038f2:	xor    r9d,r9d
   1400038f5:	xor    r8d,r8d
   1400038f8:	xor    ecx,ecx
   1400038fa:	mov    WORD PTR [rsp+0x30],bp
   1400038ff:	mov    QWORD PTR [rsp+0x20],rax
   140003904:	call   QWORD PTR [rip+0xc99e]        # 0x1400102a8
   14000390a:	mov    r11d,eax
   14000390d:	cmp    eax,0x80004005
   140003912:	jne    0x140003932
   140003914:	lea    rax,[rsp+0x30]
   140003919:	lea    edx,[rbp+0x2b]
   14000391c:	xor    r9d,r9d
   14000391f:	xor    r8d,r8d
   140003922:	xor    ecx,ecx
   140003924:	mov    QWORD PTR [rsp+0x20],rax
   140003929:	call   QWORD PTR [rip+0xc979]        # 0x1400102a8
   14000392f:	mov    r11d,eax
   140003932:	mov    r12d,0x8000ffff
   140003938:	test   r11d,r11d
   14000393b:	js     0x140003946
   14000393d:	cmovne r11d,r12d
   140003941:	test   r11d,r11d
   140003944:	jns    0x140003954
   140003946:	mov    WORD PTR [rsp+0x30],bp
   14000394b:	test   r11d,r11d
   14000394e:	js     0x140003a56
   140003954:	lea    rdx,[rip+0xf665]        # 0x140012fc0
   14000395b:	lea    rcx,[rsp+0x30]
   140003960:	call   QWORD PTR [rip+0xc95a]        # 0x1400102c0
   140003966:	test   eax,eax
   140003968:	jne    0x140003972
   14000396a:	mov    r11d,r12d
   14000396d:	jmp    0x140003a56
   140003972:	lea    rsi,[rsp+0x30]
   140003977:	mov    edi,0x104
   14000397c:	mov    rcx,rbx
   14000397f:	sub    rsi,rbx
   140003982:	mov    edx,edi
   140003984:	mov    r11d,ebp
   140003987:	lea    rax,[rdx+0x7ffffefa]
   14000398e:	test   rax,rax
   140003991:	je     0x1400039a8
   140003993:	movzx  eax,WORD PTR [rsi+rcx*1]
   140003997:	test   ax,ax
   14000399a:	je     0x1400039a8
   14000399c:	mov    WORD PTR [rcx],ax
   14000399f:	add    rcx,0x2
   1400039a3:	dec    rdx
   1400039a6:	jne    0x140003987
   1400039a8:	test   rdx,rdx
   1400039ab:	jne    0x1400039b7
   1400039ad:	sub    rcx,0x2
   1400039b1:	mov    r11d,0x8007007a
   1400039b7:	mov    WORD PTR [rcx],bp
   1400039ba:	test   r11d,r11d
   1400039bd:	js     0x140003a56
   1400039c3:	lea    rdx,[rip+0xf626]        # 0x140012ff0
   1400039ca:	mov    rcx,rbx
   1400039cd:	call   QWORD PTR [rip+0xc8ed]        # 0x1400102c0
   1400039d3:	test   eax,eax
   1400039d5:	je     0x14000396a
   1400039d7:	mov    rcx,rbx
   1400039da:	call   QWORD PTR [rip+0xc8d8]        # 0x1400102b8
   1400039e0:	mov    r11d,ebp
   1400039e3:	test   eax,eax
   1400039e5:	jne    0x140003a59
   1400039e7:	mov    rcx,rbx
   1400039ea:	lea    rax,[rdi+0x7ffffefa]
   1400039f1:	test   rax,rax
   1400039f4:	je     0x140003a0b
   1400039f6:	movzx  eax,WORD PTR [rsi+rcx*1]
   1400039fa:	test   ax,ax
   1400039fd:	je     0x140003a0b
   1400039ff:	mov    WORD PTR [rcx],ax
   140003a02:	add    rcx,0x2
   140003a06:	dec    rdi
   140003a09:	jne    0x1400039ea
   140003a0b:	test   rdi,rdi
   140003a0e:	jne    0x140003a1a
   140003a10:	sub    rcx,0x2
   140003a14:	mov    r11d,0x8007007a
   140003a1a:	mov    WORD PTR [rcx],bp
   140003a1d:	test   r11d,r11d
   140003a20:	js     0x140003a56
   140003a22:	lea    rdx,[rip+0xf5f7]        # 0x140013020
   140003a29:	mov    rcx,rbx
   140003a2c:	call   QWORD PTR [rip+0xc88e]        # 0x1400102c0
   140003a32:	test   eax,eax
   140003a34:	je     0x14000396a
   140003a3a:	mov    rcx,rbx
   140003a3d:	call   QWORD PTR [rip+0xc875]        # 0x1400102b8
   140003a43:	test   eax,eax
   140003a45:	je     0x14000396a
   140003a4b:	mov    r11d,ebp
   140003a4e:	jmp    0x140003a59
   140003a50:	mov    r11d,0x80004003
   140003a56:	mov    WORD PTR [rbx],bp
   140003a59:	mov    eax,r11d
   140003a5c:	jmp    0x140003a63
   140003a5e:	mov    eax,0x80004003
   140003a63:	mov    rcx,QWORD PTR [rsp+0x240]
   140003a6b:	xor    rcx,rsp
   140003a6e:	call   0x140003c50
   140003a73:	lea    r11,[rsp+0x250]
   140003a7b:	mov    rbx,QWORD PTR [r11+0x28]
   140003a7f:	mov    rbp,QWORD PTR [r11+0x30]
   140003a83:	mov    rsp,r11
   140003a86:	pop    r12
   140003a88:	pop    rdi
   140003a89:	pop    rsi
   140003a8a:	ret    
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	int3   
   140003a91:	int3   
   140003a92:	int3   
   140003a93:	int3   
   140003a94:	mov    QWORD PTR [rsp+0x10],rbx
   140003a99:	push   rdi
   140003a9a:	sub    rsp,0x30
   140003a9e:	mov    eax,0x5a4d
   140003aa3:	cmp    WORD PTR [rip+0xffffffffffffc556],ax        # 0x140000000
   140003aaa:	je     0x140003ab0
   140003aac:	xor    ebx,ebx
   140003aae:	jmp    0x140003ae8
   140003ab0:	movsxd rax,DWORD PTR [rip+0xffffffffffffc585]        # 0x14000003c
   140003ab7:	lea    rcx,[rip+0xffffffffffffc542]        # 0x140000000
   140003abe:	add    rax,rcx
   140003ac1:	cmp    DWORD PTR [rax],0x4550
   140003ac7:	jne    0x140003aac
   140003ac9:	mov    ecx,0x20b
   140003ace:	cmp    WORD PTR [rax+0x18],cx
   140003ad2:	jne    0x140003aac
   140003ad4:	xor    ebx,ebx
   140003ad6:	cmp    DWORD PTR [rax+0x84],0xe
   140003add:	jbe    0x140003ae8
   140003adf:	cmp    DWORD PTR [rax+0xf8],ebx
   140003ae5:	setne  bl
   140003ae8:	mov    DWORD PTR [rsp+0x40],ebx
   140003aec:	call   0x1400057b4
   140003af1:	test   eax,eax
   140003af3:	jne    0x140003b17
   140003af5:	cmp    DWORD PTR [rip+0x12874],0x2        # 0x140016370
   140003afc:	je     0x140003b03
   140003afe:	call   0x140004860
   140003b03:	mov    ecx,0x1c
   140003b08:	call   0x1400045fc
   140003b0d:	mov    ecx,0xff
   140003b12:	call   0x1400041fc
   140003b17:	call   0x14000572c
   140003b1c:	test   eax,eax
   140003b1e:	jne    0x140003b42
   140003b20:	cmp    DWORD PTR [rip+0x12849],0x2        # 0x140016370
   140003b27:	je     0x140003b2e
   140003b29:	call   0x140004860
   140003b2e:	mov    ecx,0x10
   140003b33:	call   0x1400045fc
   140003b38:	mov    ecx,0xff
   140003b3d:	call   0x1400041fc
   140003b42:	call   0x1400053c0
   140003b47:	nop
   140003b48:	call   0x1400050e8
   140003b4d:	test   eax,eax
   140003b4f:	jns    0x140003b5b
   140003b51:	mov    ecx,0x1b
   140003b56:	call   0x1400045a0
   140003b5b:	call   QWORD PTR [rip+0xc4f7]        # 0x140010058
   140003b61:	mov    QWORD PTR [rip+0x14e68],rax        # 0x1400189d0
   140003b68:	call   0x14000505c
   140003b6d:	mov    QWORD PTR [rip+0x127f4],rax        # 0x140016368
   140003b74:	call   0x140004f64
   140003b79:	test   eax,eax
   140003b7b:	jns    0x140003b87
   140003b7d:	mov    ecx,0x8
   140003b82:	call   0x1400045a0
   140003b87:	call   0x140004c88
   140003b8c:	test   eax,eax
   140003b8e:	jns    0x140003b9a
   140003b90:	mov    ecx,0x9
   140003b95:	call   0x1400045a0
   140003b9a:	mov    ecx,0x1
   140003b9f:	call   0x140004300
   140003ba4:	test   eax,eax
   140003ba6:	je     0x140003baf
   140003ba8:	mov    ecx,eax
   140003baa:	call   0x1400045a0
   140003baf:	mov    r8,QWORD PTR [rip+0x127ea]        # 0x1400163a0
   140003bb6:	mov    QWORD PTR [rip+0x127eb],r8        # 0x1400163a8
   140003bbd:	mov    rdx,QWORD PTR [rip+0x127c4]        # 0x140016388
   140003bc4:	mov    ecx,DWORD PTR [rip+0x127b2]        # 0x14001637c
   140003bca:	call   0x1400030f8
   140003bcf:	mov    edi,eax
   140003bd1:	mov    DWORD PTR [rsp+0x20],eax
   140003bd5:	test   ebx,ebx
   140003bd7:	jne    0x140003be0
   140003bd9:	mov    ecx,eax
   140003bdb:	call   0x140004550
   140003be0:	call   0x140004574
   140003be5:	jmp    0x140003bfe
   140003be7:	mov    edi,eax
   140003be9:	cmp    DWORD PTR [rsp+0x40],0x0
   140003bee:	jne    0x140003bf8
   140003bf0:	mov    ecx,eax
   140003bf2:	call   0x140004560
   140003bf7:	int3   
   140003bf8:	call   0x140004588
   140003bfd:	nop
   140003bfe:	mov    eax,edi
   140003c00:	mov    rbx,QWORD PTR [rsp+0x48]
   140003c05:	add    rsp,0x30
   140003c09:	pop    rdi
   140003c0a:	ret    
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	int3   
   140003c11:	int3   
   140003c12:	int3   
   140003c13:	int3   
   140003c14:	sub    rsp,0x28
   140003c18:	call   0x140005810
   140003c1d:	add    rsp,0x28
   140003c21:	jmp    0x140003a94
   140003c26:	int3   
   140003c27:	int3   
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	jmp    0x1400058cc
   140003c31:	int3   
   140003c32:	int3   
   140003c33:	int3   
   140003c34:	int3   
   140003c35:	int3   
   140003c36:	int3   
   140003c37:	int3   
   140003c38:	int3   
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	int3   
   140003c41:	int3   
   140003c42:	int3   
   140003c43:	int3   
   140003c44:	int3   
   140003c45:	int3   
   140003c46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003c50:	cmp    rcx,QWORD PTR [rip+0x11419]        # 0x140015070
   140003c57:	jne    0x140003c6a
   140003c59:	rol    rcx,0x10
   140003c5d:	test   cx,0xffff
   140003c62:	jne    0x140003c66
   140003c64:	repz ret 
   140003c66:	ror    rcx,0x10
   140003c6a:	jmp    0x140005910
   140003c6f:	int3   
   140003c70:	int3   
   140003c71:	int3   
   140003c72:	int3   
   140003c73:	int3   
   140003c74:	int3   
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	jmp    0x140003c83
   140003c7a:	cmp    ax,dx
   140003c7d:	je     0x140003c90
   140003c7f:	add    rcx,0x2
   140003c83:	movzx  eax,WORD PTR [rcx]
   140003c86:	test   ax,ax
   140003c89:	jne    0x140003c7a
   140003c8b:	cmp    ax,dx
   140003c8e:	jne    0x140003c94
   140003c90:	mov    rax,rcx
   140003c93:	ret    
   140003c94:	xor    eax,eax
   140003c96:	ret    
   140003c97:	int3   
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	xor    r11d,r11d
   140003ca3:	mov    r10,rdx
   140003ca6:	mov    r8,rcx
   140003ca9:	cmp    WORD PTR [rdx],r11w
   140003cad:	jne    0x140003cb3
   140003caf:	mov    rax,rcx
   140003cb2:	ret    
   140003cb3:	movzx  eax,WORD PTR [rcx]
   140003cb6:	test   ax,ax
   140003cb9:	je     0x140003cfd
   140003cbb:	mov    r9,rcx
   140003cbe:	sub    r9,rdx
   140003cc1:	mov    rdx,r10
   140003cc4:	test   ax,ax
   140003cc7:	je     0x140003ce6
   140003cc9:	cmp    WORD PTR [rdx],r11w
   140003ccd:	je     0x140003d00
   140003ccf:	movzx  ecx,WORD PTR [r9+rdx*1]
   140003cd4:	movzx  eax,WORD PTR [rdx]
   140003cd7:	cmp    ecx,eax
   140003cd9:	jne    0x140003ce6
   140003cdb:	add    rdx,0x2
   140003cdf:	cmp    WORD PTR [r9+rdx*1],r11w
   140003ce4:	jne    0x140003cc9
   140003ce6:	cmp    WORD PTR [rdx],r11w
   140003cea:	je     0x140003d00
   140003cec:	add    r8,0x2
   140003cf0:	add    r9,0x2
   140003cf4:	movzx  eax,WORD PTR [r8]
   140003cf8:	test   ax,ax
   140003cfb:	jne    0x140003cc1
   140003cfd:	xor    eax,eax
   140003cff:	ret    
   140003d00:	mov    rax,r8
   140003d03:	ret    
   140003d04:	int3   
   140003d05:	int3   
   140003d06:	int3   
   140003d07:	int3   
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	mov    rax,rsp
   140003d0f:	mov    QWORD PTR [rax+0x8],rbx
   140003d13:	mov    QWORD PTR [rax+0x10],rsi
   140003d17:	mov    QWORD PTR [rax+0x18],rdi
   140003d1b:	mov    QWORD PTR [rax+0x20],r12
   140003d1f:	push   rbp
   140003d20:	mov    rbp,rsp
   140003d23:	sub    rsp,0x50
   140003d27:	and    QWORD PTR [rbp-0x30],0x0
   140003d2c:	mov    rdi,rdx
   140003d2f:	xor    edx,edx
   140003d31:	mov    rsi,r8
   140003d34:	mov    rbx,rcx
   140003d37:	lea    r8d,[rdx+0x28]
   140003d3b:	lea    rcx,[rbp-0x28]
   140003d3f:	mov    r12,r9
   140003d42:	call   0x140006b00
   140003d47:	test   rsi,rsi
   140003d4a:	jne    0x140003d64
   140003d4c:	call   0x140006a54
   140003d51:	mov    DWORD PTR [rax],0x16
   140003d57:	call   0x1400069e0
   140003d5c:	or     eax,0xffffffff
   140003d5f:	jmp    0x140003dee
   140003d64:	test   rdi,rdi
   140003d67:	je     0x140003d6e
   140003d69:	test   rbx,rbx
   140003d6c:	je     0x140003d4c
   140003d6e:	mov    DWORD PTR [rbp-0x18],0x42
   140003d75:	mov    QWORD PTR [rbp-0x20],rbx
   140003d79:	mov    QWORD PTR [rbp-0x30],rbx
   140003d7d:	cmp    rdi,0x3fffffff
   140003d84:	jbe    0x140003d8f
   140003d86:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140003d8d:	jmp    0x140003d95
   140003d8f:	lea    eax,[rdi+rdi*1]
   140003d92:	mov    DWORD PTR [rbp-0x28],eax
   140003d95:	mov    r9,QWORD PTR [rbp+0x30]
   140003d99:	lea    rcx,[rbp-0x30]
   140003d9d:	mov    r8,r12
   140003da0:	mov    rdx,rsi
   140003da3:	call   0x140005ce8
   140003da8:	mov    edi,eax
   140003daa:	test   rbx,rbx
   140003dad:	je     0x140003dee
   140003daf:	dec    DWORD PTR [rbp-0x28]
   140003db2:	js     0x140003dc8
   140003db4:	mov    rax,QWORD PTR [rbp-0x30]
   140003db8:	mov    BYTE PTR [rax],0x0
   140003dbb:	mov    rax,QWORD PTR [rbp-0x30]
   140003dbf:	inc    rax
   140003dc2:	mov    QWORD PTR [rbp-0x30],rax
   140003dc6:	jmp    0x140003dd7
   140003dc8:	lea    rdx,[rbp-0x30]
   140003dcc:	xor    ecx,ecx
   140003dce:	call   0x140005a60
   140003dd3:	mov    rax,QWORD PTR [rbp-0x30]
   140003dd7:	dec    DWORD PTR [rbp-0x28]
   140003dda:	js     0x140003de1
   140003ddc:	mov    BYTE PTR [rax],0x0
   140003ddf:	jmp    0x140003dec
   140003de1:	lea    rdx,[rbp-0x30]
   140003de5:	xor    ecx,ecx
   140003de7:	call   0x140005a60
   140003dec:	mov    eax,edi
   140003dee:	mov    rbx,QWORD PTR [rsp+0x60]
   140003df3:	mov    rsi,QWORD PTR [rsp+0x68]
   140003df8:	mov    rdi,QWORD PTR [rsp+0x70]
   140003dfd:	mov    r12,QWORD PTR [rsp+0x78]
   140003e02:	add    rsp,0x50
   140003e06:	pop    rbp
   140003e07:	ret    
   140003e08:	int3   
   140003e09:	int3   
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	sub    rsp,0x38
   140003e14:	mov    QWORD PTR [rsp+0x20],r9
   140003e19:	xor    r9d,r9d
   140003e1c:	call   0x140003d0c
   140003e21:	add    rsp,0x38
   140003e25:	ret    
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	int3   
   140003e29:	int3   
   140003e2a:	int3   
   140003e2b:	int3   
   140003e2c:	mov    QWORD PTR [rsp+0x8],rbx
   140003e31:	mov    QWORD PTR [rsp+0x10],rsi
   140003e36:	push   rdi
   140003e37:	sub    rsp,0x20
   140003e3b:	mov    rbx,r9
   140003e3e:	mov    rsi,r8
   140003e41:	mov    rdi,rdx
   140003e44:	test   r9,r9
   140003e47:	jne    0x140003e4d
   140003e49:	xor    eax,eax
   140003e4b:	jmp    0x140003ea3
   140003e4d:	test   rcx,rcx
   140003e50:	jne    0x140003e67
   140003e52:	call   0x140006a54
   140003e57:	mov    ebx,0x16
   140003e5c:	mov    DWORD PTR [rax],ebx
   140003e5e:	call   0x1400069e0
   140003e63:	mov    eax,ebx
   140003e65:	jmp    0x140003ea3
   140003e67:	test   r8,r8
   140003e6a:	je     0x140003e7e
   140003e6c:	cmp    rdx,rbx
   140003e6f:	jb     0x140003e7e
   140003e71:	mov    r8,rbx
   140003e74:	mov    rdx,rsi
   140003e77:	call   0x140006c00
   140003e7c:	jmp    0x140003e49
   140003e7e:	mov    r8,rdx
   140003e81:	xor    edx,edx
   140003e83:	call   0x140006b00
   140003e88:	test   rsi,rsi
   140003e8b:	je     0x140003e52
   140003e8d:	cmp    rdi,rbx
   140003e90:	jae    0x140003e9e
   140003e92:	call   0x140006a54
   140003e97:	mov    ebx,0x22
   140003e9c:	jmp    0x140003e5c
   140003e9e:	mov    eax,0x16
   140003ea3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ea8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ead:	add    rsp,0x20
   140003eb1:	pop    rdi
   140003eb2:	ret    
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	sub    rsp,0x38
   140003ec0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003ec9:	call   0x140007680
   140003ece:	nop
   140003ecf:	jmp    0x140003ed6
   140003ed1:	mov    rax,QWORD PTR [rsp+0x50]
   140003ed6:	add    rsp,0x38
   140003eda:	ret    
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	int3   
   140003ee1:	int3   
   140003ee2:	int3   
   140003ee3:	int3   
   140003ee4:	test   r8,r8
   140003ee7:	jne    0x140003f01
   140003ee9:	xor    eax,eax
   140003eeb:	ret    
   140003eec:	movzx  eax,WORD PTR [rcx]
   140003eef:	test   ax,ax
   140003ef2:	je     0x140003f06
   140003ef4:	cmp    ax,WORD PTR [rdx]
   140003ef7:	jne    0x140003f06
   140003ef9:	add    rcx,0x2
   140003efd:	add    rdx,0x2
   140003f01:	dec    r8
   140003f04:	jne    0x140003eec
   140003f06:	movzx  eax,WORD PTR [rcx]
   140003f09:	movzx  ecx,WORD PTR [rdx]
   140003f0c:	sub    eax,ecx
   140003f0e:	ret    
   140003f0f:	int3   
   140003f10:	int3   
   140003f11:	int3   
   140003f12:	int3   
   140003f13:	int3   
   140003f14:	int3   
   140003f15:	int3   
   140003f16:	int3   
   140003f17:	int3   
   140003f18:	rex push rbx
   140003f1a:	sub    rsp,0x20
   140003f1e:	mov    rbx,rcx
   140003f21:	mov    BYTE PTR [rcx+0x18],0x0
   140003f25:	test   rdx,rdx
   140003f28:	jne    0x140003fa9
   140003f2a:	call   0x1400055c4
   140003f2f:	mov    QWORD PTR [rbx+0x10],rax
   140003f33:	mov    rdx,QWORD PTR [rax+0xc0]
   140003f3a:	mov    QWORD PTR [rbx],rdx
   140003f3d:	mov    rcx,QWORD PTR [rax+0xb8]
   140003f44:	mov    QWORD PTR [rbx+0x8],rcx
   140003f48:	cmp    rdx,QWORD PTR [rip+0x11c51]        # 0x140015ba0
   140003f4f:	je     0x140003f67
   140003f51:	mov    eax,DWORD PTR [rax+0xc8]
   140003f57:	test   DWORD PTR [rip+0x11813],eax        # 0x140015770
   140003f5d:	jne    0x140003f67
   140003f5f:	call   0x1400082c0
   140003f64:	mov    QWORD PTR [rbx],rax
   140003f67:	mov    rax,QWORD PTR [rip+0x11702]        # 0x140015670
   140003f6e:	cmp    QWORD PTR [rbx+0x8],rax
   140003f72:	je     0x140003f8f
   140003f74:	mov    rax,QWORD PTR [rbx+0x10]
   140003f78:	mov    ecx,DWORD PTR [rax+0xc8]
   140003f7e:	test   DWORD PTR [rip+0x117ec],ecx        # 0x140015770
   140003f84:	jne    0x140003f8f
   140003f86:	call   0x1400079b8
   140003f8b:	mov    QWORD PTR [rbx+0x8],rax
   140003f8f:	mov    rax,QWORD PTR [rbx+0x10]
   140003f93:	test   BYTE PTR [rax+0xc8],0x2
   140003f9a:	jne    0x140003fb0
   140003f9c:	or     DWORD PTR [rax+0xc8],0x2
   140003fa3:	mov    BYTE PTR [rbx+0x18],0x1
   140003fa7:	jmp    0x140003fb0
   140003fa9:	movups xmm0,XMMWORD PTR [rdx]
   140003fac:	movdqu XMMWORD PTR [rcx],xmm0
   140003fb0:	mov    rax,rbx
   140003fb3:	add    rsp,0x20
   140003fb7:	pop    rbx
   140003fb8:	ret    
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	mov    rax,rsp
   140003fc3:	mov    QWORD PTR [rax+0x8],rbx
   140003fc7:	mov    QWORD PTR [rax+0x10],rbp
   140003fcb:	mov    QWORD PTR [rax+0x18],rsi
   140003fcf:	push   rdi
   140003fd0:	sub    rsp,0x40
   140003fd4:	mov    rsi,rcx
   140003fd7:	mov    rdi,rdx
   140003fda:	lea    rcx,[rax-0x28]
   140003fde:	mov    rdx,r8
   140003fe1:	call   0x140003f18
   140003fe6:	xor    ebp,ebp
   140003fe8:	test   rsi,rsi
   140003feb:	jne    0x14000401a
   140003fed:	call   0x140006a54
   140003ff2:	mov    DWORD PTR [rax],0x16
   140003ff8:	call   0x1400069e0
   140003ffd:	cmp    BYTE PTR [rsp+0x38],bpl
   140004002:	je     0x140004010
   140004004:	mov    rax,QWORD PTR [rsp+0x30]
   140004009:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140004010:	mov    eax,0x7fffffff
   140004015:	jmp    0x1400040ad
   14000401a:	test   rdi,rdi
   14000401d:	je     0x140003fed
   14000401f:	mov    rax,QWORD PTR [rsp+0x20]
   140004024:	cmp    DWORD PTR [rax+0x14],ebp
   140004027:	jne    0x140004063
   140004029:	sub    rsi,rdi
   14000402c:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140004030:	cmp    bx,0x41
   140004034:	jb     0x140004040
   140004036:	cmp    bx,0x5a
   14000403a:	ja     0x140004040
   14000403c:	add    bx,0x20
   140004040:	movzx  eax,WORD PTR [rdi]
   140004043:	cmp    ax,0x41
   140004047:	jb     0x140004053
   140004049:	cmp    ax,0x5a
   14000404d:	ja     0x140004053
   14000404f:	add    ax,0x20
   140004053:	add    rdi,0x2
   140004057:	test   bx,bx
   14000405a:	je     0x140004092
   14000405c:	cmp    bx,ax
   14000405f:	je     0x14000402c
   140004061:	jmp    0x140004092
   140004063:	movzx  ecx,WORD PTR [rsi]
   140004066:	lea    rdx,[rsp+0x20]
   14000406b:	call   0x14000833c
   140004070:	movzx  ecx,WORD PTR [rdi]
   140004073:	lea    rdx,[rsp+0x20]
   140004078:	movzx  ebx,ax
   14000407b:	add    rsi,0x2
   14000407f:	call   0x14000833c
   140004084:	add    rdi,0x2
   140004088:	test   bx,bx
   14000408b:	je     0x140004092
   14000408d:	cmp    bx,ax
   140004090:	je     0x140004063
   140004092:	movzx  ecx,ax
   140004095:	movzx  eax,bx
   140004098:	sub    eax,ecx
   14000409a:	cmp    BYTE PTR [rsp+0x38],bpl
   14000409f:	je     0x1400040ad
   1400040a1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400040a6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400040ad:	mov    rbx,QWORD PTR [rsp+0x50]
   1400040b2:	mov    rbp,QWORD PTR [rsp+0x58]
   1400040b7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400040bc:	add    rsp,0x40
   1400040c0:	pop    rdi
   1400040c1:	ret    
   1400040c2:	int3   
   1400040c3:	int3   
   1400040c4:	int3   
   1400040c5:	int3   
   1400040c6:	int3   
   1400040c7:	int3   
   1400040c8:	sub    rsp,0x28
   1400040cc:	xor    r8d,r8d
   1400040cf:	mov    r9,rcx
   1400040d2:	cmp    DWORD PTR [rip+0x130ff],r8d        # 0x1400171d8
   1400040d9:	jne    0x140004145
   1400040db:	test   rcx,rcx
   1400040de:	jne    0x1400040fa
   1400040e0:	call   0x140006a54
   1400040e5:	mov    DWORD PTR [rax],0x16
   1400040eb:	call   0x1400069e0
   1400040f0:	mov    eax,0x7fffffff
   1400040f5:	add    rsp,0x28
   1400040f9:	ret    
   1400040fa:	test   rdx,rdx
   1400040fd:	je     0x1400040e0
   1400040ff:	sub    r9,rdx
   140004102:	movzx  eax,WORD PTR [r9+rdx*1]
   140004107:	cmp    ax,0x41
   14000410b:	jb     0x140004117
   14000410d:	cmp    ax,0x5a
   140004111:	ja     0x140004117
   140004113:	add    ax,0x20
   140004117:	movzx  ecx,WORD PTR [rdx]
   14000411a:	cmp    cx,0x41
   14000411e:	jb     0x14000412a
   140004120:	cmp    cx,0x5a
   140004124:	ja     0x14000412a
   140004126:	add    cx,0x20
   14000412a:	add    rdx,0x2
   14000412e:	test   ax,ax
   140004131:	je     0x140004138
   140004133:	cmp    ax,cx
   140004136:	je     0x140004102
   140004138:	movzx  ecx,cx
   14000413b:	movzx  eax,ax
   14000413e:	sub    eax,ecx
   140004140:	add    rsp,0x28
   140004144:	ret    
   140004145:	add    rsp,0x28
   140004149:	jmp    0x140003fc0
   14000414e:	int3   
   14000414f:	int3   
   140004150:	int3   
   140004151:	int3   
   140004152:	int3   
   140004153:	int3   
   140004154:	sub    rsp,0x28
   140004158:	mov    rax,QWORD PTR [rcx]
   14000415b:	cmp    DWORD PTR [rax],0xe06d7363
   140004161:	jne    0x14000418e
   140004163:	cmp    DWORD PTR [rax+0x18],0x4
   140004167:	jne    0x14000418e
   140004169:	mov    eax,DWORD PTR [rax+0x20]
   14000416c:	cmp    eax,0x19930520
   140004171:	je     0x140004188
   140004173:	cmp    eax,0x19930521
   140004178:	je     0x140004188
   14000417a:	cmp    eax,0x19930522
   14000417f:	je     0x140004188
   140004181:	cmp    eax,0x1994000
   140004186:	jne    0x14000418e
   140004188:	call   0x140008418
   14000418d:	int3   
   14000418e:	xor    eax,eax
   140004190:	add    rsp,0x28
   140004194:	ret    
   140004195:	int3   
   140004196:	int3   
   140004197:	int3   
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	sub    rsp,0x28
   1400041a0:	lea    rcx,[rip+0xffffffffffffffad]        # 0x140004154
   1400041a7:	call   QWORD PTR [rip+0xbf53]        # 0x140010100
   1400041ad:	xor    eax,eax
   1400041af:	add    rsp,0x28
   1400041b3:	ret    
   1400041b4:	int3   
   1400041b5:	int3   
   1400041b6:	int3   
   1400041b7:	int3   
   1400041b8:	int3   
   1400041b9:	int3   
   1400041ba:	int3   
   1400041bb:	int3   
   1400041bc:	rex push rbx
   1400041be:	sub    rsp,0x20
   1400041c2:	mov    ebx,ecx
   1400041c4:	lea    rcx,[rip+0xe64d]        # 0x140012818
   1400041cb:	call   QWORD PTR [rip+0xbf37]        # 0x140010108
   1400041d1:	test   rax,rax
   1400041d4:	je     0x1400041ef
   1400041d6:	lea    rdx,[rip+0xc1eb]        # 0x1400103c8
   1400041dd:	mov    rcx,rax
   1400041e0:	call   QWORD PTR [rip+0xbe6a]        # 0x140010050
   1400041e6:	test   rax,rax
   1400041e9:	je     0x1400041ef
   1400041eb:	mov    ecx,ebx
   1400041ed:	call   rax
   1400041ef:	add    rsp,0x20
   1400041f3:	pop    rbx
   1400041f4:	ret    
   1400041f5:	int3   
   1400041f6:	int3   
   1400041f7:	int3   
   1400041f8:	int3   
   1400041f9:	int3   
   1400041fa:	int3   
   1400041fb:	int3   
   1400041fc:	rex push rbx
   1400041fe:	sub    rsp,0x20
   140004202:	mov    ebx,ecx
   140004204:	call   0x1400041bc
   140004209:	mov    ecx,ebx
   14000420b:	call   QWORD PTR [rip+0xbeff]        # 0x140010110
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	mov    ecx,0x8
   14000421d:	jmp    0x1400086bc
   140004222:	int3   
   140004223:	int3   
   140004224:	int3   
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	mov    ecx,0x8
   14000422d:	jmp    0x1400085b0
   140004232:	int3   
   140004233:	int3   
   140004234:	int3   
   140004235:	int3   
   140004236:	int3   
   140004237:	int3   
   140004238:	rex push rbx
   14000423a:	sub    rsp,0x20
   14000423e:	call   0x140005440
   140004243:	mov    rcx,rax
   140004246:	mov    rbx,rax
   140004249:	call   0x140008998
   14000424e:	mov    rcx,rbx
   140004251:	call   0x1400067cc
   140004256:	mov    rcx,rbx
   140004259:	call   0x140008988
   14000425e:	mov    rcx,rbx
   140004261:	call   0x140008978
   140004266:	mov    rcx,rbx
   140004269:	call   0x140008708
   14000426e:	mov    rcx,rbx
   140004271:	add    rsp,0x20
   140004275:	pop    rbx
   140004276:	jmp    0x140008470
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	int3   
   140004281:	int3   
   140004282:	int3   
   140004283:	int3   
   140004284:	cmp    rcx,rdx
   140004287:	jae    0x1400042b6
   140004289:	mov    QWORD PTR [rsp+0x8],rbx
   14000428e:	push   rdi
   14000428f:	sub    rsp,0x20
   140004293:	mov    rdi,rdx
   140004296:	mov    rbx,rcx
   140004299:	mov    rax,QWORD PTR [rbx]
   14000429c:	test   rax,rax
   14000429f:	je     0x1400042a3
   1400042a1:	call   rax
   1400042a3:	add    rbx,0x8
   1400042a7:	cmp    rbx,rdi
   1400042aa:	jb     0x140004299
   1400042ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042b1:	add    rsp,0x20
   1400042b5:	pop    rdi
   1400042b6:	ret    
   1400042b7:	int3   
   1400042b8:	int3   
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042c5:	push   rdi
   1400042c6:	sub    rsp,0x20
   1400042ca:	xor    eax,eax
   1400042cc:	mov    rdi,rdx
   1400042cf:	mov    rbx,rcx
   1400042d2:	cmp    rcx,rdx
   1400042d5:	jae    0x1400042ee
   1400042d7:	test   eax,eax
   1400042d9:	jne    0x1400042ee
   1400042db:	mov    rcx,QWORD PTR [rbx]
   1400042de:	test   rcx,rcx
   1400042e1:	je     0x1400042e5
   1400042e3:	call   rcx
   1400042e5:	add    rbx,0x8
   1400042e9:	cmp    rbx,rdi
   1400042ec:	jb     0x1400042d7
   1400042ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042f3:	add    rsp,0x20
   1400042f7:	pop    rdi
   1400042f8:	ret    
   1400042f9:	int3   
   1400042fa:	int3   
   1400042fb:	int3   
   1400042fc:	int3   
   1400042fd:	int3   
   1400042fe:	int3   
   1400042ff:	int3   
   140004300:	mov    QWORD PTR [rsp+0x8],rbx
   140004305:	push   rdi
   140004306:	sub    rsp,0x20
   14000430a:	cmp    QWORD PTR [rip+0x146ae],0x0        # 0x1400189c0
   140004312:	mov    ebx,ecx
   140004314:	je     0x14000432e
   140004316:	lea    rcx,[rip+0x146a3]        # 0x1400189c0
   14000431d:	call   0x140008c30
   140004322:	test   eax,eax
   140004324:	je     0x14000432e
   140004326:	mov    ecx,ebx
   140004328:	call   QWORD PTR [rip+0x14692]        # 0x1400189c0
   14000432e:	call   0x140008b60
   140004333:	lea    rdx,[rip+0xc00e]        # 0x140010348
   14000433a:	lea    rcx,[rip+0xbfdf]        # 0x140010320
   140004341:	call   0x1400042c0
   140004346:	test   eax,eax
   140004348:	jne    0x1400043a4
   14000434a:	lea    rcx,[rip+0x10af]        # 0x140005400
   140004351:	call   0x140008b40
   140004356:	lea    rbx,[rip+0xbfb3]        # 0x140010310
   14000435d:	lea    rdi,[rip+0xbfb4]        # 0x140010318
   140004364:	jmp    0x140004374
   140004366:	mov    rax,QWORD PTR [rbx]
   140004369:	test   rax,rax
   14000436c:	je     0x140004370
   14000436e:	call   rax
   140004370:	add    rbx,0x8
   140004374:	cmp    rbx,rdi
   140004377:	jb     0x140004366
   140004379:	cmp    QWORD PTR [rip+0x14647],0x0        # 0x1400189c8
   140004381:	je     0x1400043a2
   140004383:	lea    rcx,[rip+0x1463e]        # 0x1400189c8
   14000438a:	call   0x140008c30
   14000438f:	test   eax,eax
   140004391:	je     0x1400043a2
   140004393:	xor    r8d,r8d
   140004396:	xor    ecx,ecx
   140004398:	lea    edx,[r8+0x2]
   14000439c:	call   QWORD PTR [rip+0x14626]        # 0x1400189c8
   1400043a2:	xor    eax,eax
   1400043a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043a9:	add    rsp,0x20
   1400043ad:	pop    rdi
   1400043ae:	ret    
   1400043af:	int3   
   1400043b0:	int3   
   1400043b1:	int3   
   1400043b2:	int3   
   1400043b3:	int3   
   1400043b4:	int3   
   1400043b5:	int3   
   1400043b6:	int3   
   1400043b7:	int3   
   1400043b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400043bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400043c2:	mov    DWORD PTR [rsp+0x18],r8d
   1400043c7:	push   rdi
   1400043c8:	push   r12
   1400043ca:	push   r13
   1400043cc:	push   r14
   1400043ce:	push   r15
   1400043d0:	sub    rsp,0x40
   1400043d4:	mov    r12d,r8d
   1400043d7:	mov    ebx,edx
   1400043d9:	mov    r15d,ecx
   1400043dc:	mov    ecx,0x8
   1400043e1:	call   0x1400086bc
   1400043e6:	nop
   1400043e7:	cmp    DWORD PTR [rip+0x11fda],0x1        # 0x1400163c8
   1400043ee:	je     0x1400044f5
   1400043f4:	mov    DWORD PTR [rip+0x11fc6],0x1        # 0x1400163c4
   1400043fe:	mov    BYTE PTR [rip+0x11fbb],r12b        # 0x1400163c0
   140004405:	test   ebx,ebx
   140004407:	jne    0x1400044e1
   14000440d:	mov    rcx,QWORD PTR [rip+0x1459c]        # 0x1400189b0
   140004414:	call   QWORD PTR [rip+0xbcfe]        # 0x140010118
   14000441a:	mov    rsi,rax
   14000441d:	mov    QWORD PTR [rsp+0x30],rax
   140004422:	test   rax,rax
   140004425:	je     0x1400044ce
   14000442b:	mov    rcx,QWORD PTR [rip+0x14576]        # 0x1400189a8
   140004432:	call   QWORD PTR [rip+0xbce0]        # 0x140010118
   140004438:	mov    rdi,rax
   14000443b:	mov    QWORD PTR [rsp+0x20],rax
   140004440:	mov    r14,rsi
   140004443:	mov    QWORD PTR [rsp+0x28],rsi
   140004448:	mov    r13,rax
   14000444b:	mov    QWORD PTR [rsp+0x38],rax
   140004450:	sub    rdi,0x8
   140004454:	mov    QWORD PTR [rsp+0x20],rdi
   140004459:	cmp    rdi,rsi
   14000445c:	jb     0x1400044ce
   14000445e:	call   0x140005440
   140004463:	cmp    QWORD PTR [rdi],rax
   140004466:	jne    0x14000446a
   140004468:	jmp    0x140004450
   14000446a:	cmp    rdi,rsi
   14000446d:	jb     0x1400044ce
   14000446f:	mov    rcx,QWORD PTR [rdi]
   140004472:	call   QWORD PTR [rip+0xbca0]        # 0x140010118
   140004478:	mov    rbx,rax
   14000447b:	call   0x140005440
   140004480:	mov    QWORD PTR [rdi],rax
   140004483:	call   rbx
   140004485:	mov    rcx,QWORD PTR [rip+0x14524]        # 0x1400189b0
   14000448c:	call   QWORD PTR [rip+0xbc86]        # 0x140010118
   140004492:	mov    rbx,rax
   140004495:	mov    rcx,QWORD PTR [rip+0x1450c]        # 0x1400189a8
   14000449c:	call   QWORD PTR [rip+0xbc76]        # 0x140010118
   1400044a2:	cmp    r14,rbx
   1400044a5:	jne    0x1400044ac
   1400044a7:	cmp    r13,rax
   1400044aa:	je     0x140004468
   1400044ac:	mov    r14,rbx
   1400044af:	mov    QWORD PTR [rsp+0x28],rbx
   1400044b4:	mov    rsi,rbx
   1400044b7:	mov    QWORD PTR [rsp+0x30],rbx
   1400044bc:	mov    r13,rax
   1400044bf:	mov    QWORD PTR [rsp+0x38],rax
   1400044c4:	mov    rdi,rax
   1400044c7:	mov    QWORD PTR [rsp+0x20],rax
   1400044cc:	jmp    0x140004468
   1400044ce:	lea    rdx,[rip+0xbe93]        # 0x140010368
   1400044d5:	lea    rcx,[rip+0xbe74]        # 0x140010350
   1400044dc:	call   0x140004284
   1400044e1:	lea    rdx,[rip+0xbe90]        # 0x140010378
   1400044e8:	lea    rcx,[rip+0xbe81]        # 0x140010370
   1400044ef:	call   0x140004284
   1400044f4:	nop
   1400044f5:	test   r12d,r12d
   1400044f8:	je     0x140004509
   1400044fa:	mov    ecx,0x8
   1400044ff:	call   0x1400085b0
   140004504:	test   r12d,r12d
   140004507:	jne    0x14000452f
   140004509:	mov    DWORD PTR [rip+0x11eb5],0x1        # 0x1400163c8
   140004513:	mov    ecx,0x8
   140004518:	call   0x1400085b0
   14000451d:	mov    ecx,r15d
   140004520:	call   0x1400041bc
   140004525:	mov    ecx,r15d
   140004528:	call   QWORD PTR [rip+0xbbe2]        # 0x140010110
   14000452e:	int3   
   14000452f:	mov    rbx,QWORD PTR [rsp+0x70]
   140004534:	mov    rsi,QWORD PTR [rsp+0x78]
   140004539:	add    rsp,0x40
   14000453d:	pop    r15
   14000453f:	pop    r14
   140004541:	pop    r13
   140004543:	pop    r12
   140004545:	pop    rdi
   140004546:	ret    
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	xor    r8d,r8d
   140004553:	xor    edx,edx
   140004555:	jmp    0x1400043b8
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	xor    r8d,r8d
   140004563:	lea    edx,[r8+0x1]
   140004567:	jmp    0x1400043b8
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	int3   
   140004571:	int3   
   140004572:	int3   
   140004573:	int3   
   140004574:	xor    edx,edx
   140004576:	xor    ecx,ecx
   140004578:	lea    r8d,[rdx+0x1]
   14000457c:	jmp    0x1400043b8
   140004581:	int3   
   140004582:	int3   
   140004583:	int3   
   140004584:	int3   
   140004585:	int3   
   140004586:	int3   
   140004587:	int3   
   140004588:	mov    edx,0x1
   14000458d:	xor    ecx,ecx
   14000458f:	mov    r8d,edx
   140004592:	jmp    0x1400043b8
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	rex push rbx
   1400045a2:	sub    rsp,0x20
   1400045a6:	mov    ebx,ecx
   1400045a8:	call   0x140004860
   1400045ad:	mov    ecx,ebx
   1400045af:	call   0x1400045fc
   1400045b4:	xor    r8d,r8d
   1400045b7:	mov    ecx,0xff
   1400045bc:	lea    edx,[r8+0x1]
   1400045c0:	call   0x1400043b8
   1400045c5:	int3   
   1400045c6:	int3   
   1400045c7:	int3   
   1400045c8:	int3   
   1400045c9:	int3   
   1400045ca:	int3   
   1400045cb:	int3   
   1400045cc:	lea    r8,[rip+0xc6cd]        # 0x140010ca0
   1400045d3:	xor    eax,eax
   1400045d5:	mov    rdx,r8
   1400045d8:	cmp    ecx,DWORD PTR [rdx]
   1400045da:	je     0x1400045ea
   1400045dc:	inc    eax
   1400045de:	add    rdx,0x10
   1400045e2:	cmp    eax,0x16
   1400045e5:	jb     0x1400045d8
   1400045e7:	xor    eax,eax
   1400045e9:	ret    
   1400045ea:	cdqe   
   1400045ec:	add    rax,rax
   1400045ef:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   1400045f4:	ret    
   1400045f5:	int3   
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	mov    QWORD PTR [rsp+0x10],rbx
   140004601:	mov    QWORD PTR [rsp+0x18],rbp
   140004606:	mov    QWORD PTR [rsp+0x20],rsi
   14000460b:	push   rdi
   14000460c:	push   r12
   14000460e:	push   r13
   140004610:	sub    rsp,0x250
   140004617:	mov    rax,QWORD PTR [rip+0x10a52]        # 0x140015070
   14000461e:	xor    rax,rsp
   140004621:	mov    QWORD PTR [rsp+0x240],rax
   140004629:	mov    edi,ecx
   14000462b:	call   0x1400045cc
   140004630:	xor    esi,esi
   140004632:	mov    rbx,rax
   140004635:	test   rax,rax
   140004638:	je     0x14000482c
   14000463e:	lea    ecx,[rsi+0x3]
   140004641:	call   0x1400091d8
   140004646:	cmp    eax,0x1
   140004649:	je     0x1400047c4
   14000464f:	lea    ecx,[rsi+0x3]
   140004652:	call   0x1400091d8
   140004657:	test   eax,eax
   140004659:	jne    0x140004668
   14000465b:	cmp    DWORD PTR [rip+0x1099e],0x1        # 0x140015000
   140004662:	je     0x1400047c4
   140004668:	cmp    edi,0xfc
   14000466e:	je     0x14000482c
   140004674:	lea    rbp,[rip+0x11d55]        # 0x1400163d0
   14000467b:	mov    r12d,0x314
   140004681:	lea    r8,[rip+0xc808]        # 0x140010e90
   140004688:	mov    rcx,rbp
   14000468b:	mov    edx,r12d
   14000468e:	call   0x140009164
   140004693:	xor    ecx,ecx
   140004695:	test   eax,eax
   140004697:	jne    0x1400047b1
   14000469d:	lea    r13,[rip+0x11d5e]        # 0x140016402
   1400046a4:	mov    r8d,0x104
   1400046aa:	mov    WORD PTR [rip+0x11f59],si        # 0x14001660a
   1400046b1:	mov    rdx,r13
   1400046b4:	call   QWORD PTR [rip+0xb976]        # 0x140010030
   1400046ba:	lea    edi,[r12-0x19]
   1400046bf:	test   eax,eax
   1400046c1:	jne    0x1400046ed
   1400046c3:	lea    r8,[rip+0xc796]        # 0x140010e60
   1400046ca:	mov    edx,edi
   1400046cc:	mov    rcx,r13
   1400046cf:	call   0x140009164
   1400046d4:	test   eax,eax
   1400046d6:	je     0x1400046ed
   1400046d8:	xor    r9d,r9d
   1400046db:	xor    r8d,r8d
   1400046de:	xor    edx,edx
   1400046e0:	xor    ecx,ecx
   1400046e2:	mov    QWORD PTR [rsp+0x20],rsi
   1400046e7:	call   0x140006930
   1400046ec:	int3   
   1400046ed:	mov    rcx,r13
   1400046f0:	call   0x140009144
   1400046f5:	inc    rax
   1400046f8:	cmp    rax,0x3c
   1400046fc:	jbe    0x140004745
   1400046fe:	mov    rcx,r13
   140004701:	call   0x140009144
   140004706:	lea    r8,[rip+0xc74b]        # 0x140010e58
   14000470d:	mov    r9d,0x3
   140004713:	lea    rcx,[rbp+rax*2-0x44]
   140004718:	mov    rax,rcx
   14000471b:	sub    rax,r13
   14000471e:	sar    rax,1
   140004721:	sub    rdi,rax
   140004724:	mov    rdx,rdi
   140004727:	call   0x14000906c
   14000472c:	test   eax,eax
   14000472e:	je     0x140004745
   140004730:	xor    r9d,r9d
   140004733:	xor    r8d,r8d
   140004736:	xor    edx,edx
   140004738:	xor    ecx,ecx
   14000473a:	mov    QWORD PTR [rsp+0x20],rsi
   14000473f:	call   0x140006930
   140004744:	int3   
   140004745:	lea    r8,[rip+0xc700]        # 0x140010e4c
   14000474c:	mov    rdx,r12
   14000474f:	mov    rcx,rbp
   140004752:	call   0x140008fe0
   140004757:	test   eax,eax
   140004759:	jne    0x14000479c
   14000475b:	mov    r8,rbx
   14000475e:	mov    rdx,r12
   140004761:	mov    rcx,rbp
   140004764:	call   0x140008fe0
   140004769:	test   eax,eax
   14000476b:	jne    0x140004787
   14000476d:	lea    rdx,[rip+0xc68c]        # 0x140010e00
   140004774:	mov    r8d,0x12010
   14000477a:	mov    rcx,rbp
   14000477d:	call   0x140008dd0
   140004782:	jmp    0x14000482c
   140004787:	xor    r9d,r9d
   14000478a:	xor    r8d,r8d
   14000478d:	xor    edx,edx
   14000478f:	xor    ecx,ecx
   140004791:	mov    QWORD PTR [rsp+0x20],rsi
   140004796:	call   0x140006930
   14000479b:	int3   
   14000479c:	xor    r9d,r9d
   14000479f:	xor    r8d,r8d
   1400047a2:	xor    edx,edx
   1400047a4:	xor    ecx,ecx
   1400047a6:	mov    QWORD PTR [rsp+0x20],rsi
   1400047ab:	call   0x140006930
   1400047b0:	int3   
   1400047b1:	xor    r9d,r9d
   1400047b4:	xor    r8d,r8d
   1400047b7:	xor    edx,edx
   1400047b9:	mov    QWORD PTR [rsp+0x20],rsi
   1400047be:	call   0x140006930
   1400047c3:	int3   
   1400047c4:	mov    ecx,0xfffffff4
   1400047c9:	call   QWORD PTR [rip+0xb959]        # 0x140010128
   1400047cf:	mov    rdi,rax
   1400047d2:	test   rax,rax
   1400047d5:	je     0x14000482c
   1400047d7:	cmp    rax,0xffffffffffffffff
   1400047db:	je     0x14000482c
   1400047dd:	mov    edx,esi
   1400047df:	lea    r8,[rsp+0x40]
   1400047e4:	mov    cl,BYTE PTR [rbx]
   1400047e6:	mov    BYTE PTR [r8],cl
   1400047e9:	cmp    WORD PTR [rbx],si
   1400047ec:	je     0x1400047ff
   1400047ee:	inc    edx
   1400047f0:	inc    r8
   1400047f3:	add    rbx,0x2
   1400047f7:	cmp    edx,0x1f4
   1400047fd:	jb     0x1400047e4
   1400047ff:	lea    rcx,[rsp+0x40]
   140004804:	mov    BYTE PTR [rsp+0x233],sil
   14000480c:	call   0x140008d20
   140004811:	lea    r9,[rsp+0x30]
   140004816:	lea    rdx,[rsp+0x40]
   14000481b:	mov    rcx,rdi
   14000481e:	mov    r8,rax
   140004821:	mov    QWORD PTR [rsp+0x20],rsi
   140004826:	call   QWORD PTR [rip+0xb8f4]        # 0x140010120
   14000482c:	mov    rcx,QWORD PTR [rsp+0x240]
   140004834:	xor    rcx,rsp
   140004837:	call   0x140003c50
   14000483c:	lea    r11,[rsp+0x250]
   140004844:	mov    rbx,QWORD PTR [r11+0x28]
   140004848:	mov    rbp,QWORD PTR [r11+0x30]
   14000484c:	mov    rsi,QWORD PTR [r11+0x38]
   140004850:	mov    rsp,r11
   140004853:	pop    r13
   140004855:	pop    r12
   140004857:	pop    rdi
   140004858:	ret    
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	sub    rsp,0x28
   140004864:	mov    ecx,0x3
   140004869:	call   0x1400091d8
   14000486e:	cmp    eax,0x1
   140004871:	je     0x14000488a
   140004873:	mov    ecx,0x3
   140004878:	call   0x1400091d8
   14000487d:	test   eax,eax
   14000487f:	jne    0x14000489e
   140004881:	cmp    DWORD PTR [rip+0x10778],0x1        # 0x140015000
   140004888:	jne    0x14000489e
   14000488a:	mov    ecx,0xfc
   14000488f:	call   0x1400045fc
   140004894:	mov    ecx,0xff
   140004899:	call   0x1400045fc
   14000489e:	add    rsp,0x28
   1400048a2:	ret    
   1400048a3:	int3   
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	mov    r11,rsp
   1400048af:	mov    QWORD PTR [r11+0x8],rbx
   1400048b3:	mov    QWORD PTR [r11+0x18],rbp
   1400048b7:	mov    QWORD PTR [r11+0x20],rsi
   1400048bb:	mov    QWORD PTR [r11+0x10],rdx
   1400048bf:	push   rdi
   1400048c0:	push   r12
   1400048c2:	push   r13
   1400048c4:	push   r14
   1400048c6:	push   r15
   1400048c8:	sub    rsp,0x40
   1400048cc:	mov    r15,QWORD PTR [r9+0x8]
   1400048d0:	mov    r14,QWORD PTR [r9]
   1400048d3:	mov    eax,DWORD PTR [rcx+0x4]
   1400048d6:	mov    rdi,QWORD PTR [r9+0x38]
   1400048da:	sub    r14,r15
   1400048dd:	mov    r12,r9
   1400048e0:	mov    r13,rdx
   1400048e3:	mov    rbp,rcx
   1400048e6:	test   al,0x66
   1400048e8:	jne    0x1400049db
   1400048ee:	movsxd rsi,DWORD PTR [r9+0x48]
   1400048f2:	mov    QWORD PTR [r11-0x38],rcx
   1400048f6:	mov    QWORD PTR [r11-0x30],r8
   1400048fa:	mov    rax,rsi
   1400048fd:	cmp    esi,DWORD PTR [rdi]
   1400048ff:	jae    0x140004a86
   140004905:	add    rax,rax
   140004908:	lea    rbx,[rdi+rax*8+0xc]
   14000490d:	mov    eax,DWORD PTR [rbx-0x8]
   140004910:	cmp    r14,rax
   140004913:	jb     0x1400049c1
   140004919:	mov    eax,DWORD PTR [rbx-0x4]
   14000491c:	cmp    r14,rax
   14000491f:	jae    0x1400049c1
   140004925:	cmp    DWORD PTR [rbx+0x4],0x0
   140004929:	je     0x1400049c1
   14000492f:	cmp    DWORD PTR [rbx],0x1
   140004932:	je     0x14000494d
   140004934:	mov    eax,DWORD PTR [rbx]
   140004936:	lea    rcx,[rsp+0x30]
   14000493b:	mov    rdx,r13
   14000493e:	add    rax,r15
   140004941:	call   rax
   140004943:	test   eax,eax
   140004945:	js     0x1400049d4
   14000494b:	jle    0x1400049c1
   14000494d:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140004954:	jne    0x14000497e
   140004956:	cmp    QWORD PTR [rip+0xcc52],0x0        # 0x1400115b0
   14000495e:	je     0x14000497e
   140004960:	lea    rcx,[rip+0xcc49]        # 0x1400115b0
   140004967:	call   0x140008c30
   14000496c:	test   eax,eax
   14000496e:	je     0x14000497e
   140004970:	mov    edx,0x1
   140004975:	mov    rcx,rbp
   140004978:	call   QWORD PTR [rip+0xcc32]        # 0x1400115b0
   14000497e:	mov    ecx,DWORD PTR [rbx+0x4]
   140004981:	mov    r8d,0x1
   140004987:	mov    rdx,r13
   14000498a:	add    rcx,r15
   14000498d:	call   0x140009260
   140004992:	mov    rax,QWORD PTR [r12+0x40]
   140004997:	mov    edx,DWORD PTR [rbx+0x4]
   14000499a:	movsxd r9,DWORD PTR [rbp+0x0]
   14000499e:	mov    QWORD PTR [rsp+0x28],rax
   1400049a3:	mov    rax,QWORD PTR [r12+0x28]
   1400049a8:	add    rdx,r15
   1400049ab:	mov    r8,rbp
   1400049ae:	mov    rcx,r13
   1400049b1:	mov    QWORD PTR [rsp+0x20],rax
   1400049b6:	call   QWORD PTR [rip+0xb774]        # 0x140010130
   1400049bc:	call   0x140009290
   1400049c1:	inc    esi
   1400049c3:	add    rbx,0x10
   1400049c7:	cmp    esi,DWORD PTR [rdi]
   1400049c9:	jae    0x140004a86
   1400049cf:	jmp    0x14000490d
   1400049d4:	xor    eax,eax
   1400049d6:	jmp    0x140004a8b
   1400049db:	mov    r8,QWORD PTR [r9+0x20]
   1400049df:	xor    ebp,ebp
   1400049e1:	xor    r13d,r13d
   1400049e4:	sub    r8,r15
   1400049e7:	test   al,0x20
   1400049e9:	je     0x140004a26
   1400049eb:	xor    edx,edx
   1400049ed:	cmp    DWORD PTR [rdi],edx
   1400049ef:	jbe    0x140004a26
   1400049f1:	lea    rcx,[rdi+0x8]
   1400049f5:	mov    eax,DWORD PTR [rcx-0x4]
   1400049f8:	cmp    r8,rax
   1400049fb:	jb     0x140004a04
   1400049fd:	mov    eax,DWORD PTR [rcx]
   1400049ff:	cmp    r8,rax
   140004a02:	jbe    0x140004a10
   140004a04:	inc    edx
   140004a06:	add    rcx,0x10
   140004a0a:	cmp    edx,DWORD PTR [rdi]
   140004a0c:	jae    0x140004a26
   140004a0e:	jmp    0x1400049f5
   140004a10:	mov    eax,edx
   140004a12:	add    rax,rax
   140004a15:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   140004a19:	test   ecx,ecx
   140004a1b:	jne    0x140004a23
   140004a1d:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   140004a21:	jmp    0x140004a26
   140004a23:	mov    r13d,ecx
   140004a26:	movsxd rsi,DWORD PTR [r9+0x48]
   140004a2a:	mov    rbx,rsi
   140004a2d:	cmp    esi,DWORD PTR [rdi]
   140004a2f:	jae    0x140004a86
   140004a31:	inc    rbx
   140004a34:	shl    rbx,0x4
   140004a38:	add    rbx,rdi
   140004a3b:	mov    eax,DWORD PTR [rbx-0xc]
   140004a3e:	cmp    r14,rax
   140004a41:	jb     0x140004a7c
   140004a43:	mov    eax,DWORD PTR [rbx-0x8]
   140004a46:	cmp    r14,rax
   140004a49:	jae    0x140004a7c
   140004a4b:	test   r13d,r13d
   140004a4e:	je     0x140004a55
   140004a50:	cmp    r13d,DWORD PTR [rbx]
   140004a53:	je     0x140004a86
   140004a55:	test   ebp,ebp
   140004a57:	je     0x140004a5e
   140004a59:	cmp    ebp,DWORD PTR [rbx-0x4]
   140004a5c:	je     0x140004a86
   140004a5e:	cmp    DWORD PTR [rbx],0x0
   140004a61:	jne    0x140004a7c
   140004a63:	mov    rdx,QWORD PTR [rsp+0x78]
   140004a68:	lea    eax,[rsi+0x1]
   140004a6b:	mov    cl,0x1
   140004a6d:	mov    DWORD PTR [r12+0x48],eax
   140004a72:	mov    r8d,DWORD PTR [rbx-0x4]
   140004a76:	add    r8,r15
   140004a79:	call   r8
   140004a7c:	inc    esi
   140004a7e:	add    rbx,0x10
   140004a82:	cmp    esi,DWORD PTR [rdi]
   140004a84:	jb     0x140004a3b
   140004a86:	mov    eax,0x1
   140004a8b:	lea    r11,[rsp+0x40]
   140004a90:	mov    rbx,QWORD PTR [r11+0x30]
   140004a94:	mov    rbp,QWORD PTR [r11+0x40]
   140004a98:	mov    rsi,QWORD PTR [r11+0x48]
   140004a9c:	mov    rsp,r11
   140004a9f:	pop    r15
   140004aa1:	pop    r14
   140004aa3:	pop    r13
   140004aa5:	pop    r12
   140004aa7:	pop    rdi
   140004aa8:	ret    
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	int3   
   140004aad:	int3   
   140004aae:	int3   
   140004aaf:	int3   
   140004ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ab5:	mov    QWORD PTR [rsp+0x10],rbp
   140004aba:	mov    QWORD PTR [rsp+0x18],rsi
   140004abf:	push   rdi
   140004ac0:	sub    rsp,0x20
   140004ac4:	mov    rsi,rdx
   140004ac7:	mov    edi,ecx
   140004ac9:	call   0x140005538
   140004ace:	xor    r9d,r9d
   140004ad1:	mov    rbx,rax
   140004ad4:	test   rax,rax
   140004ad7:	je     0x140004c69
   140004add:	mov    rdx,QWORD PTR [rax+0xa0]
   140004ae4:	mov    rcx,rdx
   140004ae7:	cmp    DWORD PTR [rcx],edi
   140004ae9:	je     0x140004afb
   140004aeb:	lea    rax,[rdx+0xc0]
   140004af2:	add    rcx,0x10
   140004af6:	cmp    rcx,rax
   140004af9:	jb     0x140004ae7
   140004afb:	lea    rax,[rdx+0xc0]
   140004b02:	cmp    rcx,rax
   140004b05:	jae    0x140004b0b
   140004b07:	cmp    DWORD PTR [rcx],edi
   140004b09:	je     0x140004b0e
   140004b0b:	mov    rcx,r9
   140004b0e:	test   rcx,rcx
   140004b11:	je     0x140004c69
   140004b17:	mov    r8,QWORD PTR [rcx+0x8]
   140004b1b:	test   r8,r8
   140004b1e:	je     0x140004c69
   140004b24:	cmp    r8,0x5
   140004b28:	jne    0x140004b37
   140004b2a:	mov    QWORD PTR [rcx+0x8],r9
   140004b2e:	lea    eax,[r8-0x4]
   140004b32:	jmp    0x140004c6b
   140004b37:	cmp    r8,0x1
   140004b3b:	jne    0x140004b45
   140004b3d:	or     eax,0xffffffff
   140004b40:	jmp    0x140004c6b
   140004b45:	mov    rbp,QWORD PTR [rbx+0xa8]
   140004b4c:	mov    QWORD PTR [rbx+0xa8],rsi
   140004b53:	cmp    DWORD PTR [rcx+0x4],0x8
   140004b57:	jne    0x140004c53
   140004b5d:	mov    edx,0x30
   140004b62:	mov    rax,QWORD PTR [rbx+0xa0]
   140004b69:	add    rdx,0x10
   140004b6d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140004b72:	cmp    rdx,0xc0
   140004b79:	jl     0x140004b62
   140004b7b:	cmp    DWORD PTR [rcx],0xc000008e
   140004b81:	mov    edi,DWORD PTR [rbx+0xb0]
   140004b87:	jne    0x140004b98
   140004b89:	mov    DWORD PTR [rbx+0xb0],0x83
   140004b93:	jmp    0x140004c3d
   140004b98:	cmp    DWORD PTR [rcx],0xc0000090
   140004b9e:	jne    0x140004baf
   140004ba0:	mov    DWORD PTR [rbx+0xb0],0x81
   140004baa:	jmp    0x140004c3d
   140004baf:	cmp    DWORD PTR [rcx],0xc0000091
   140004bb5:	jne    0x140004bc3
   140004bb7:	mov    DWORD PTR [rbx+0xb0],0x84
   140004bc1:	jmp    0x140004c3d
   140004bc3:	cmp    DWORD PTR [rcx],0xc0000093
   140004bc9:	jne    0x140004bd7
   140004bcb:	mov    DWORD PTR [rbx+0xb0],0x85
   140004bd5:	jmp    0x140004c3d
   140004bd7:	cmp    DWORD PTR [rcx],0xc000008d
   140004bdd:	jne    0x140004beb
   140004bdf:	mov    DWORD PTR [rbx+0xb0],0x82
   140004be9:	jmp    0x140004c3d
   140004beb:	cmp    DWORD PTR [rcx],0xc000008f
   140004bf1:	jne    0x140004bff
   140004bf3:	mov    DWORD PTR [rbx+0xb0],0x86
   140004bfd:	jmp    0x140004c3d
   140004bff:	cmp    DWORD PTR [rcx],0xc0000092
   140004c05:	jne    0x140004c13
   140004c07:	mov    DWORD PTR [rbx+0xb0],0x8a
   140004c11:	jmp    0x140004c3d
   140004c13:	cmp    DWORD PTR [rcx],0xc00002b5
   140004c19:	jne    0x140004c27
   140004c1b:	mov    DWORD PTR [rbx+0xb0],0x8d
   140004c25:	jmp    0x140004c3d
   140004c27:	cmp    DWORD PTR [rcx],0xc00002b4
   140004c2d:	mov    eax,edi
   140004c2f:	mov    edx,0x8e
   140004c34:	cmove  eax,edx
   140004c37:	mov    DWORD PTR [rbx+0xb0],eax
   140004c3d:	mov    edx,DWORD PTR [rbx+0xb0]
   140004c43:	mov    ecx,0x8
   140004c48:	call   r8
   140004c4b:	mov    DWORD PTR [rbx+0xb0],edi
   140004c51:	jmp    0x140004c5d
   140004c53:	mov    QWORD PTR [rcx+0x8],r9
   140004c57:	mov    ecx,DWORD PTR [rcx+0x4]
   140004c5a:	call   r8
   140004c5d:	mov    QWORD PTR [rbx+0xa8],rbp
   140004c64:	jmp    0x140004b3d
   140004c69:	xor    eax,eax
   140004c6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c70:	mov    rbp,QWORD PTR [rsp+0x38]
   140004c75:	mov    rsi,QWORD PTR [rsp+0x40]
   140004c7a:	add    rsp,0x20
   140004c7e:	pop    rdi
   140004c7f:	ret    
   140004c80:	int3   
   140004c81:	int3   
   140004c82:	int3   
   140004c83:	int3   
   140004c84:	int3   
   140004c85:	int3   
   140004c86:	int3   
   140004c87:	int3   
   140004c88:	mov    rax,rsp
   140004c8b:	mov    QWORD PTR [rax+0x8],rbx
   140004c8f:	mov    QWORD PTR [rax+0x10],rbp
   140004c93:	mov    QWORD PTR [rax+0x18],rsi
   140004c97:	mov    QWORD PTR [rax+0x20],rdi
   140004c9b:	push   r12
   140004c9d:	sub    rsp,0x30
   140004ca1:	mov    rbx,QWORD PTR [rip+0x116c0]        # 0x140016368
   140004ca8:	xor    r12d,r12d
   140004cab:	mov    edi,r12d
   140004cae:	test   rbx,rbx
   140004cb1:	jne    0x140004cd0
   140004cb3:	or     eax,0xffffffff
   140004cb6:	jmp    0x140004d75
   140004cbb:	cmp    ax,0x3d
   140004cbf:	je     0x140004cc3
   140004cc1:	inc    edi
   140004cc3:	mov    rcx,rbx
   140004cc6:	call   0x140009144
   140004ccb:	lea    rbx,[rbx+rax*2+0x2]
   140004cd0:	movzx  eax,WORD PTR [rbx]
   140004cd3:	test   ax,ax
   140004cd6:	jne    0x140004cbb
   140004cd8:	lea    eax,[rdi+0x1]
   140004cdb:	mov    edx,0x8
   140004ce0:	movsxd rcx,eax
   140004ce3:	call   0x14000931c
   140004ce8:	mov    rdi,rax
   140004ceb:	mov    QWORD PTR [rip+0x116ae],rax        # 0x1400163a0
   140004cf2:	test   rax,rax
   140004cf5:	je     0x140004cb3
   140004cf7:	mov    rbx,QWORD PTR [rip+0x1166a]        # 0x140016368
   140004cfe:	cmp    WORD PTR [rbx],r12w
   140004d02:	je     0x140004d57
   140004d04:	mov    rcx,rbx
   140004d07:	call   0x140009144
   140004d0c:	cmp    WORD PTR [rbx],0x3d
   140004d10:	lea    esi,[rax+0x1]
   140004d13:	je     0x140004d43
   140004d15:	movsxd rbp,esi
   140004d18:	mov    edx,0x2
   140004d1d:	mov    rcx,rbp
   140004d20:	call   0x14000931c
   140004d25:	mov    QWORD PTR [rdi],rax
   140004d28:	test   rax,rax
   140004d2b:	je     0x140004da5
   140004d2d:	mov    r8,rbx
   140004d30:	mov    rdx,rbp
   140004d33:	mov    rcx,rax
   140004d36:	call   0x140009164
   140004d3b:	test   eax,eax
   140004d3d:	jne    0x140004d90
   140004d3f:	add    rdi,0x8
   140004d43:	movsxd rax,esi
   140004d46:	lea    rbx,[rbx+rax*2]
   140004d4a:	cmp    WORD PTR [rbx],r12w
   140004d4e:	jne    0x140004d04
   140004d50:	mov    rbx,QWORD PTR [rip+0x11611]        # 0x140016368
   140004d57:	mov    rcx,rbx
   140004d5a:	call   0x1400058cc
   140004d5f:	mov    QWORD PTR [rip+0x11602],r12        # 0x140016368
   140004d66:	mov    QWORD PTR [rdi],r12
   140004d69:	mov    DWORD PTR [rip+0x13c2d],0x1        # 0x1400189a0
   140004d73:	xor    eax,eax
   140004d75:	mov    rbx,QWORD PTR [rsp+0x40]
   140004d7a:	mov    rbp,QWORD PTR [rsp+0x48]
   140004d7f:	mov    rsi,QWORD PTR [rsp+0x50]
   140004d84:	mov    rdi,QWORD PTR [rsp+0x58]
   140004d89:	add    rsp,0x30
   140004d8d:	pop    r12
   140004d8f:	ret    
   140004d90:	xor    r9d,r9d
   140004d93:	xor    r8d,r8d
   140004d96:	xor    edx,edx
   140004d98:	xor    ecx,ecx
   140004d9a:	mov    QWORD PTR [rsp+0x20],r12
   140004d9f:	call   0x140006930
   140004da4:	int3   
   140004da5:	mov    rcx,QWORD PTR [rip+0x115f4]        # 0x1400163a0
   140004dac:	call   0x1400058cc
   140004db1:	mov    QWORD PTR [rip+0x115e8],r12        # 0x1400163a0
   140004db8:	jmp    0x140004cb3
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	mov    rax,rsp
   140004dc7:	mov    QWORD PTR [rax+0x8],rbx
   140004dcb:	mov    QWORD PTR [rax+0x10],rsi
   140004dcf:	mov    QWORD PTR [rax+0x18],rdi
   140004dd3:	mov    QWORD PTR [rax+0x20],r13
   140004dd7:	push   r14
   140004dd9:	mov    r11,QWORD PTR [rsp+0x30]
   140004dde:	xor    esi,esi
   140004de0:	mov    rbx,r9
   140004de3:	mov    DWORD PTR [r11],esi
   140004de6:	mov    r10,rdx
   140004de9:	mov    DWORD PTR [r9],0x1
   140004df0:	test   rdx,rdx
   140004df3:	je     0x140004dfc
   140004df5:	mov    QWORD PTR [rdx],r8
   140004df8:	add    r10,0x8
   140004dfc:	mov    edx,esi
   140004dfe:	mov    r14d,0x22
   140004e04:	cmp    WORD PTR [rcx],r14w
   140004e08:	jne    0x140004e1d
   140004e0a:	test   edx,edx
   140004e0c:	mov    eax,esi
   140004e0e:	sete   al
   140004e11:	add    rcx,0x2
   140004e15:	mov    edx,eax
   140004e17:	movzx  eax,r14w
   140004e1b:	jmp    0x140004e3c
   140004e1d:	inc    DWORD PTR [r11]
   140004e20:	test   r8,r8
   140004e23:	je     0x140004e30
   140004e25:	movzx  eax,WORD PTR [rcx]
   140004e28:	mov    WORD PTR [r8],ax
   140004e2c:	add    r8,0x2
   140004e30:	movzx  eax,WORD PTR [rcx]
   140004e33:	add    rcx,0x2
   140004e37:	test   ax,ax
   140004e3a:	je     0x140004e58
   140004e3c:	test   edx,edx
   140004e3e:	jne    0x140004e04
   140004e40:	cmp    ax,0x20
   140004e44:	je     0x140004e4c
   140004e46:	cmp    ax,0x9
   140004e4a:	jne    0x140004e04
   140004e4c:	test   r8,r8
   140004e4f:	je     0x140004e5c
   140004e51:	mov    WORD PTR [r8-0x2],si
   140004e56:	jmp    0x140004e5c
   140004e58:	sub    rcx,0x2
   140004e5c:	mov    edi,esi
   140004e5e:	mov    r13d,0x5c
   140004e64:	cmp    WORD PTR [rcx],si
   140004e67:	je     0x140004f3b
   140004e6d:	cmp    WORD PTR [rcx],0x20
   140004e71:	je     0x140004e79
   140004e73:	cmp    WORD PTR [rcx],0x9
   140004e77:	jne    0x140004e7f
   140004e79:	add    rcx,0x2
   140004e7d:	jmp    0x140004e6d
   140004e7f:	cmp    WORD PTR [rcx],si
   140004e82:	je     0x140004f3b
   140004e88:	test   r10,r10
   140004e8b:	je     0x140004e94
   140004e8d:	mov    QWORD PTR [r10],r8
   140004e90:	add    r10,0x8
   140004e94:	inc    DWORD PTR [rbx]
   140004e96:	mov    r9d,0x1
   140004e9c:	mov    edx,esi
   140004e9e:	jmp    0x140004ea6
   140004ea0:	add    rcx,0x2
   140004ea4:	inc    edx
   140004ea6:	cmp    WORD PTR [rcx],r13w
   140004eaa:	je     0x140004ea0
   140004eac:	cmp    WORD PTR [rcx],r14w
   140004eb0:	jne    0x140004eec
   140004eb2:	test   r9b,dl
   140004eb5:	jne    0x140004ed6
   140004eb7:	test   edi,edi
   140004eb9:	je     0x140004eca
   140004ebb:	lea    rax,[rcx+0x2]
   140004ebf:	cmp    WORD PTR [rax],r14w
   140004ec3:	jne    0x140004eca
   140004ec5:	mov    rcx,rax
   140004ec8:	jmp    0x140004ed6
   140004eca:	test   edi,edi
   140004ecc:	mov    eax,esi
   140004ece:	mov    r9d,esi
   140004ed1:	sete   al
   140004ed4:	mov    edi,eax
   140004ed6:	shr    edx,1
   140004ed8:	jmp    0x140004eec
   140004eda:	dec    edx
   140004edc:	test   r8,r8
   140004edf:	je     0x140004ee9
   140004ee1:	mov    WORD PTR [r8],r13w
   140004ee5:	add    r8,0x2
   140004ee9:	inc    DWORD PTR [r11]
   140004eec:	test   edx,edx
   140004eee:	jne    0x140004eda
   140004ef0:	movzx  eax,WORD PTR [rcx]
   140004ef3:	test   ax,ax
   140004ef6:	je     0x140004f26
   140004ef8:	test   edi,edi
   140004efa:	jne    0x140004f08
   140004efc:	cmp    ax,0x20
   140004f00:	je     0x140004f26
   140004f02:	cmp    ax,0x9
   140004f06:	je     0x140004f26
   140004f08:	test   r9d,r9d
   140004f0b:	je     0x140004f1d
   140004f0d:	test   r8,r8
   140004f10:	je     0x140004f1a
   140004f12:	mov    WORD PTR [r8],ax
   140004f16:	add    r8,0x2
   140004f1a:	inc    DWORD PTR [r11]
   140004f1d:	add    rcx,0x2
   140004f21:	jmp    0x140004e96
   140004f26:	test   r8,r8
   140004f29:	je     0x140004f33
   140004f2b:	mov    WORD PTR [r8],si
   140004f2f:	add    r8,0x2
   140004f33:	inc    DWORD PTR [r11]
   140004f36:	jmp    0x140004e64
   140004f3b:	test   r10,r10
   140004f3e:	je     0x140004f43
   140004f40:	mov    QWORD PTR [r10],rsi
   140004f43:	inc    DWORD PTR [rbx]
   140004f45:	mov    rsi,QWORD PTR [rsp+0x18]
   140004f4a:	mov    rdi,QWORD PTR [rsp+0x20]
   140004f4f:	mov    rbx,QWORD PTR [rsp+0x10]
   140004f54:	mov    r13,QWORD PTR [rsp+0x28]
   140004f59:	pop    r14
   140004f5b:	ret    
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	int3   
   140004f61:	int3   
   140004f62:	int3   
   140004f63:	int3   
   140004f64:	mov    QWORD PTR [rsp+0x18],rbx
   140004f69:	push   rbp
   140004f6a:	push   rsi
   140004f6b:	push   rdi
   140004f6c:	sub    rsp,0x30
   140004f70:	lea    rdi,[rip+0x11a89]        # 0x140016a00
   140004f77:	xor    ebp,ebp
   140004f79:	mov    r8d,0x104
   140004f7f:	mov    rdx,rdi
   140004f82:	xor    ecx,ecx
   140004f84:	mov    WORD PTR [rip+0x11c7d],bp        # 0x140016c08
   140004f8b:	call   QWORD PTR [rip+0xb09f]        # 0x140010030
   140004f91:	mov    rbx,QWORD PTR [rip+0x13a38]        # 0x1400189d0
   140004f98:	mov    QWORD PTR [rip+0x11419],rdi        # 0x1400163b8
   140004f9f:	test   rbx,rbx
   140004fa2:	je     0x140004fa9
   140004fa4:	cmp    WORD PTR [rbx],bp
   140004fa7:	jne    0x140004fac
   140004fa9:	mov    rbx,rdi
   140004fac:	lea    rax,[rsp+0x58]
   140004fb1:	lea    r9,[rsp+0x50]
   140004fb6:	xor    r8d,r8d
   140004fb9:	xor    edx,edx
   140004fbb:	mov    rcx,rbx
   140004fbe:	mov    QWORD PTR [rsp+0x20],rax
   140004fc3:	call   0x140004dc4
   140004fc8:	movsxd rsi,DWORD PTR [rsp+0x50]
   140004fcd:	movabs rax,0x1fffffffffffffff
   140004fd7:	cmp    rsi,rax
   140004fda:	jae    0x140005044
   140004fdc:	movsxd rax,DWORD PTR [rsp+0x58]
   140004fe1:	movabs rcx,0x7fffffffffffffff
   140004feb:	cmp    rax,rcx
   140004fee:	jae    0x140005044
   140004ff0:	lea    rcx,[rax+rsi*4]
   140004ff4:	add    rax,rax
   140004ff7:	add    rcx,rcx
   140004ffa:	cmp    rcx,rax
   140004ffd:	jb     0x140005044
   140004fff:	call   0x140009298
   140005004:	mov    rdi,rax
   140005007:	test   rax,rax
   14000500a:	je     0x140005044
   14000500c:	lea    r8,[rax+rsi*8]
   140005010:	lea    rax,[rsp+0x58]
   140005015:	lea    r9,[rsp+0x50]
   14000501a:	mov    rdx,rdi
   14000501d:	mov    rcx,rbx
   140005020:	mov    QWORD PTR [rsp+0x20],rax
   140005025:	call   0x140004dc4
   14000502a:	mov    r11d,DWORD PTR [rsp+0x50]
   14000502f:	mov    QWORD PTR [rip+0x11352],rdi        # 0x140016388
   140005036:	dec    r11d
   140005039:	xor    eax,eax
   14000503b:	mov    DWORD PTR [rip+0x1133a],r11d        # 0x14001637c
   140005042:	jmp    0x140005047
   140005044:	or     eax,0xffffffff
   140005047:	mov    rbx,QWORD PTR [rsp+0x60]
   14000504c:	add    rsp,0x30
   140005050:	pop    rdi
   140005051:	pop    rsi
   140005052:	pop    rbp
   140005053:	ret    
   140005054:	int3   
   140005055:	int3   
   140005056:	int3   
   140005057:	int3   
   140005058:	int3   
   140005059:	int3   
   14000505a:	int3   
   14000505b:	int3   
   14000505c:	mov    QWORD PTR [rsp+0x8],rbx
   140005061:	mov    QWORD PTR [rsp+0x10],rbp
   140005066:	mov    QWORD PTR [rsp+0x18],rsi
   14000506b:	push   rdi
   14000506c:	sub    rsp,0x20
   140005070:	call   QWORD PTR [rip+0xb0ca]        # 0x140010140
   140005076:	xor    ebx,ebx
   140005078:	mov    rdi,rax
   14000507b:	test   rax,rax
   14000507e:	je     0x1400050cc
   140005080:	cmp    WORD PTR [rdi],bx
   140005083:	je     0x140005097
   140005085:	add    rax,0x2
   140005089:	cmp    WORD PTR [rax],bx
   14000508c:	jne    0x140005085
   14000508e:	add    rax,0x2
   140005092:	cmp    WORD PTR [rax],bx
   140005095:	jne    0x140005085
   140005097:	sub    eax,edi
   140005099:	add    eax,0x2
   14000509c:	movsxd rbp,eax
   14000509f:	mov    rcx,rbp
   1400050a2:	call   0x140009298
   1400050a7:	mov    rsi,rax
   1400050aa:	test   rax,rax
   1400050ad:	je     0x1400050c0
   1400050af:	mov    r8,rbp
   1400050b2:	mov    rdx,rdi
   1400050b5:	mov    rcx,rax
   1400050b8:	call   0x140006c00
   1400050bd:	mov    rbx,rsi
   1400050c0:	mov    rcx,rdi
   1400050c3:	call   QWORD PTR [rip+0xb06f]        # 0x140010138
   1400050c9:	mov    rax,rbx
   1400050cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050d1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400050d6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400050db:	add    rsp,0x20
   1400050df:	pop    rdi
   1400050e0:	ret    
   1400050e1:	int3   
   1400050e2:	int3   
   1400050e3:	int3   
   1400050e4:	int3   
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400050ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400050f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400050f7:	push   r12
   1400050f9:	push   r13
   1400050fb:	push   r14
   1400050fd:	sub    rsp,0x90
   140005104:	lea    rcx,[rsp+0x20]
   140005109:	call   QWORD PTR [rip+0xb051]        # 0x140010160
   14000510f:	mov    edx,0x58
   140005114:	lea    ebp,[rdx-0x38]
   140005117:	mov    ecx,ebp
   140005119:	call   0x14000931c
   14000511e:	xor    r14d,r14d
   140005121:	mov    rdx,rax
   140005124:	test   rax,rax
   140005127:	jne    0x140005131
   140005129:	or     eax,0xffffffff
   14000512c:	jmp    0x14000539c
   140005131:	mov    QWORD PTR [rip+0x13668],rax        # 0x1400187a0
   140005138:	add    rax,0xb00
   14000513e:	mov    ecx,ebp
   140005140:	mov    DWORD PTR [rip+0x13642],ecx        # 0x140018788
   140005146:	cmp    rdx,rax
   140005149:	jae    0x140005190
   14000514b:	add    rdx,0x9
   14000514f:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140005154:	mov    WORD PTR [rdx-0x1],0xa00
   14000515a:	mov    DWORD PTR [rdx+0x3],r14d
   14000515e:	mov    WORD PTR [rdx+0x2f],0xa00
   140005164:	mov    BYTE PTR [rdx+0x31],0xa
   140005168:	mov    DWORD PTR [rdx+0x47],r14d
   14000516c:	mov    BYTE PTR [rdx+0x43],r14b
   140005170:	mov    rax,QWORD PTR [rip+0x13629]        # 0x1400187a0
   140005177:	add    rdx,0x58
   14000517b:	lea    rcx,[rdx-0x9]
   14000517f:	add    rax,0xb00
   140005185:	cmp    rcx,rax
   140005188:	jb     0x14000514f
   14000518a:	mov    ecx,DWORD PTR [rip+0x135f8]        # 0x140018788
   140005190:	cmp    WORD PTR [rsp+0x62],r14w
   140005196:	je     0x1400052d0
   14000519c:	mov    rax,QWORD PTR [rsp+0x68]
   1400051a1:	test   rax,rax
   1400051a4:	je     0x1400052d0
   1400051aa:	movsxd r12,DWORD PTR [rax]
   1400051ad:	mov    ebx,0x800
   1400051b2:	lea    r13,[rax+0x4]
   1400051b6:	add    r12,r13
   1400051b9:	cmp    DWORD PTR [rax],ebx
   1400051bb:	cmovl  ebx,DWORD PTR [rax]
   1400051be:	cmp    ecx,ebx
   1400051c0:	jge    0x14000524d
   1400051c6:	lea    rdi,[rip+0x135db]        # 0x1400187a8
   1400051cd:	mov    edx,0x58
   1400051d2:	mov    rcx,rbp
   1400051d5:	call   0x14000931c
   1400051da:	test   rax,rax
   1400051dd:	je     0x140005247
   1400051df:	mov    edx,DWORD PTR [rip+0x135a3]        # 0x140018788
   1400051e5:	lea    rcx,[rax+0xb00]
   1400051ec:	mov    QWORD PTR [rdi],rax
   1400051ef:	add    edx,ebp
   1400051f1:	mov    DWORD PTR [rip+0x13591],edx        # 0x140018788
   1400051f7:	cmp    rax,rcx
   1400051fa:	jae    0x14000523d
   1400051fc:	lea    rdx,[rax+0x9]
   140005200:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140005205:	and    BYTE PTR [rdx+0x2f],0x80
   140005209:	mov    WORD PTR [rdx-0x1],0xa00
   14000520f:	mov    DWORD PTR [rdx+0x3],r14d
   140005213:	mov    WORD PTR [rdx+0x30],0xa0a
   140005219:	mov    DWORD PTR [rdx+0x47],r14d
   14000521d:	mov    BYTE PTR [rdx+0x43],r14b
   140005221:	mov    rax,QWORD PTR [rdi]
   140005224:	add    rdx,0x58
   140005228:	lea    rcx,[rdx-0x9]
   14000522c:	add    rax,0xb00
   140005232:	cmp    rcx,rax
   140005235:	jb     0x140005200
   140005237:	mov    edx,DWORD PTR [rip+0x1354b]        # 0x140018788
   14000523d:	add    rdi,0x8
   140005241:	cmp    edx,ebx
   140005243:	jl     0x1400051cd
   140005245:	jmp    0x14000524d
   140005247:	mov    ebx,DWORD PTR [rip+0x1353b]        # 0x140018788
   14000524d:	mov    edi,r14d
   140005250:	test   ebx,ebx
   140005252:	jle    0x1400052d0
   140005254:	cmp    QWORD PTR [r12],0xffffffffffffffff
   140005259:	je     0x1400052c3
   14000525b:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   140005260:	je     0x1400052c3
   140005262:	test   BYTE PTR [r13+0x0],0x1
   140005267:	je     0x1400052c3
   140005269:	test   BYTE PTR [r13+0x0],0x8
   14000526e:	jne    0x14000527e
   140005270:	mov    rcx,QWORD PTR [r12]
   140005274:	call   QWORD PTR [rip+0xaede]        # 0x140010158
   14000527a:	test   eax,eax
   14000527c:	je     0x1400052c3
   14000527e:	movsxd rbp,edi
   140005281:	lea    rcx,[rip+0x13518]        # 0x1400187a0
   140005288:	mov    edx,0xfa0
   14000528d:	mov    rax,rbp
   140005290:	and    ebp,0x1f
   140005293:	sar    rax,0x5
   140005297:	imul   rbp,rbp,0x58
   14000529b:	add    rbp,QWORD PTR [rcx+rax*8]
   14000529f:	mov    rax,QWORD PTR [r12]
   1400052a3:	mov    QWORD PTR [rbp+0x0],rax
   1400052a7:	mov    al,BYTE PTR [r13+0x0]
   1400052ab:	lea    rcx,[rbp+0x10]
   1400052af:	mov    BYTE PTR [rbp+0x8],al
   1400052b2:	call   QWORD PTR [rip+0xae98]        # 0x140010150
   1400052b8:	test   eax,eax
   1400052ba:	je     0x140005129
   1400052c0:	inc    DWORD PTR [rbp+0xc]
   1400052c3:	inc    edi
   1400052c5:	inc    r13
   1400052c8:	add    r12,0x8
   1400052cc:	cmp    edi,ebx
   1400052ce:	jl     0x140005254
   1400052d0:	mov    r12d,r14d
   1400052d3:	mov    rbx,r14
   1400052d6:	mov    rdi,QWORD PTR [rip+0x134c3]        # 0x1400187a0
   1400052dd:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   1400052e2:	je     0x1400052f5
   1400052e4:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   1400052e9:	je     0x1400052f5
   1400052eb:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   1400052f0:	jmp    0x14000537a
   1400052f5:	lea    eax,[r12-0x1]
   1400052fa:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   1400052ff:	neg    eax
   140005301:	mov    eax,0xfffffff6
   140005306:	sbb    ecx,ecx
   140005308:	add    ecx,0xfffffff5
   14000530b:	test   r12d,r12d
   14000530e:	cmove  ecx,eax
   140005311:	call   QWORD PTR [rip+0xae11]        # 0x140010128
   140005317:	mov    rbp,rax
   14000531a:	cmp    rax,0xffffffffffffffff
   14000531e:	je     0x14000536d
   140005320:	test   rax,rax
   140005323:	je     0x14000536d
   140005325:	mov    rcx,rax
   140005328:	call   QWORD PTR [rip+0xae2a]        # 0x140010158
   14000532e:	test   eax,eax
   140005330:	je     0x14000536d
   140005332:	movzx  eax,al
   140005335:	mov    QWORD PTR [rbx+rdi*1],rbp
   140005339:	cmp    eax,0x2
   14000533c:	jne    0x140005345
   14000533e:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140005343:	jmp    0x14000534f
   140005345:	cmp    eax,0x3
   140005348:	jne    0x14000534f
   14000534a:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14000534f:	lea    rcx,[rbx+rdi*1+0x10]
   140005354:	mov    edx,0xfa0
   140005359:	call   QWORD PTR [rip+0xadf1]        # 0x140010150
   14000535f:	test   eax,eax
   140005361:	je     0x140005129
   140005367:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000536b:	jmp    0x14000537a
   14000536d:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140005372:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000537a:	add    rbx,0x58
   14000537e:	inc    r12d
   140005381:	cmp    rbx,0x108
   140005388:	jl     0x1400052d6
   14000538e:	mov    ecx,DWORD PTR [rip+0x133f4]        # 0x140018788
   140005394:	call   QWORD PTR [rip+0xadae]        # 0x140010148
   14000539a:	xor    eax,eax
   14000539c:	lea    r11,[rsp+0x90]
   1400053a4:	mov    rbx,QWORD PTR [r11+0x20]
   1400053a8:	mov    rbp,QWORD PTR [r11+0x28]
   1400053ac:	mov    rdi,QWORD PTR [r11+0x30]
   1400053b0:	mov    rsp,r11
   1400053b3:	pop    r14
   1400053b5:	pop    r13
   1400053b7:	pop    r12
   1400053b9:	ret    
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053c5:	push   rdi
   1400053c6:	sub    rsp,0x20
   1400053ca:	lea    rbx,[rip+0xde9f]        # 0x140013270
   1400053d1:	lea    rdi,[rip+0xde98]        # 0x140013270
   1400053d8:	jmp    0x1400053e8
   1400053da:	mov    rax,QWORD PTR [rbx]
   1400053dd:	test   rax,rax
   1400053e0:	je     0x1400053e4
   1400053e2:	call   rax
   1400053e4:	add    rbx,0x8
   1400053e8:	cmp    rbx,rdi
   1400053eb:	jb     0x1400053da
   1400053ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053f2:	add    rsp,0x20
   1400053f6:	pop    rdi
   1400053f7:	ret    
   1400053f8:	int3   
   1400053f9:	int3   
   1400053fa:	int3   
   1400053fb:	int3   
   1400053fc:	int3   
   1400053fd:	int3   
   1400053fe:	int3   
   1400053ff:	int3   
   140005400:	mov    QWORD PTR [rsp+0x8],rbx
   140005405:	push   rdi
   140005406:	sub    rsp,0x20
   14000540a:	lea    rbx,[rip+0xde6f]        # 0x140013280
   140005411:	lea    rdi,[rip+0xde68]        # 0x140013280
   140005418:	jmp    0x140005428
   14000541a:	mov    rax,QWORD PTR [rbx]
   14000541d:	test   rax,rax
   140005420:	je     0x140005424
   140005422:	call   rax
   140005424:	add    rbx,0x8
   140005428:	cmp    rbx,rdi
   14000542b:	jb     0x14000541a
   14000542d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005432:	add    rsp,0x20
   140005436:	pop    rdi
   140005437:	ret    
   140005438:	int3   
   140005439:	int3   
   14000543a:	int3   
   14000543b:	int3   
   14000543c:	int3   
   14000543d:	int3   
   14000543e:	int3   
   14000543f:	int3   
   140005440:	xor    ecx,ecx
   140005442:	rex.W jmp QWORD PTR [rip+0xad27]        # 0x140010170
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	sub    rsp,0x28
   140005454:	mov    ecx,DWORD PTR [rip+0xfc0e]        # 0x140015068
   14000545a:	cmp    ecx,0xffffffff
   14000545d:	je     0x14000546c
   14000545f:	call   QWORD PTR [rip+0xad23]        # 0x140010188
   140005465:	or     DWORD PTR [rip+0xfbfc],0xffffffff        # 0x140015068
   14000546c:	add    rsp,0x28
   140005470:	jmp    0x140008520
   140005475:	int3   
   140005476:	int3   
   140005477:	int3   
   140005478:	int3   
   140005479:	int3   
   14000547a:	int3   
   14000547b:	int3   
   14000547c:	mov    QWORD PTR [rsp+0x8],rbx
   140005481:	push   rdi
   140005482:	sub    rsp,0x20
   140005486:	mov    rdi,rdx
   140005489:	mov    rbx,rcx
   14000548c:	lea    rax,[rip+0xba3d]        # 0x140010ed0
   140005493:	mov    QWORD PTR [rcx+0xa0],rax
   14000549a:	and    DWORD PTR [rcx+0x10],0x0
   14000549e:	mov    DWORD PTR [rcx+0x1c],0x1
   1400054a5:	mov    DWORD PTR [rcx+0xc8],0x1
   1400054af:	mov    BYTE PTR [rcx+0x174],0x43
   1400054b6:	mov    BYTE PTR [rcx+0x1f7],0x43
   1400054bd:	lea    rax,[rip+0xfd7c]        # 0x140015240
   1400054c4:	mov    QWORD PTR [rcx+0xb8],rax
   1400054cb:	mov    ecx,0xd
   1400054d0:	call   0x1400086bc
   1400054d5:	nop
   1400054d6:	mov    rax,QWORD PTR [rbx+0xb8]
   1400054dd:	lock inc DWORD PTR [rax]
   1400054e0:	mov    ecx,0xd
   1400054e5:	call   0x1400085b0
   1400054ea:	mov    ecx,0xc
   1400054ef:	call   0x1400086bc
   1400054f4:	nop
   1400054f5:	mov    QWORD PTR [rbx+0xc0],rdi
   1400054fc:	test   rdi,rdi
   1400054ff:	jne    0x14000550f
   140005501:	mov    rax,QWORD PTR [rip+0x10698]        # 0x140015ba0
   140005508:	mov    QWORD PTR [rbx+0xc0],rax
   14000550f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140005516:	call   0x140007fa0
   14000551b:	nop
   14000551c:	mov    ecx,0xc
   140005521:	call   0x1400085b0
   140005526:	mov    rbx,QWORD PTR [rsp+0x30]
   14000552b:	add    rsp,0x20
   14000552f:	pop    rdi
   140005530:	ret    
   140005531:	int3   
   140005532:	int3   
   140005533:	int3   
   140005534:	int3   
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	mov    QWORD PTR [rsp+0x8],rbx
   14000553d:	push   rdi
   14000553e:	sub    rsp,0x20
   140005542:	call   QWORD PTR [rip+0xab00]        # 0x140010048
   140005548:	mov    ecx,DWORD PTR [rip+0xfb1a]        # 0x140015068
   14000554e:	mov    edi,eax
   140005550:	call   QWORD PTR [rip+0xac22]        # 0x140010178
   140005556:	mov    rbx,rax
   140005559:	test   rax,rax
   14000555c:	jne    0x1400055a6
   14000555e:	lea    ecx,[rax+0x1]
   140005561:	mov    edx,0x2c8
   140005566:	call   0x14000931c
   14000556b:	mov    rbx,rax
   14000556e:	test   rax,rax
   140005571:	je     0x1400055a6
   140005573:	mov    ecx,DWORD PTR [rip+0xfaef]        # 0x140015068
   140005579:	mov    rdx,rax
   14000557c:	call   QWORD PTR [rip+0xabfe]        # 0x140010180
   140005582:	mov    rcx,rbx
   140005585:	test   eax,eax
   140005587:	je     0x14000559f
   140005589:	xor    edx,edx
   14000558b:	call   0x14000547c
   140005590:	call   QWORD PTR [rip+0xac02]        # 0x140010198
   140005596:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000559b:	mov    DWORD PTR [rbx],eax
   14000559d:	jmp    0x1400055a6
   14000559f:	call   0x1400058cc
   1400055a4:	xor    ebx,ebx
   1400055a6:	mov    ecx,edi
   1400055a8:	call   QWORD PTR [rip+0xabe2]        # 0x140010190
   1400055ae:	mov    rax,rbx
   1400055b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055b6:	add    rsp,0x20
   1400055ba:	pop    rdi
   1400055bb:	ret    
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	int3   
   1400055c1:	int3   
   1400055c2:	int3   
   1400055c3:	int3   
   1400055c4:	rex push rbx
   1400055c6:	sub    rsp,0x20
   1400055ca:	call   0x140005538
   1400055cf:	mov    rbx,rax
   1400055d2:	test   rax,rax
   1400055d5:	jne    0x1400055df
   1400055d7:	lea    ecx,[rax+0x10]
   1400055da:	call   0x1400045a0
   1400055df:	mov    rax,rbx
   1400055e2:	add    rsp,0x20
   1400055e6:	pop    rbx
   1400055e7:	ret    
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	test   rcx,rcx
   1400055f3:	je     0x140005722
   1400055f9:	mov    QWORD PTR [rsp+0x10],rbx
   1400055fe:	push   rdi
   1400055ff:	sub    rsp,0x20
   140005603:	mov    rbx,rcx
   140005606:	mov    rcx,QWORD PTR [rcx+0x38]
   14000560a:	test   rcx,rcx
   14000560d:	je     0x140005614
   14000560f:	call   0x1400058cc
   140005614:	mov    rcx,QWORD PTR [rbx+0x48]
   140005618:	test   rcx,rcx
   14000561b:	je     0x140005622
   14000561d:	call   0x1400058cc
   140005622:	mov    rcx,QWORD PTR [rbx+0x58]
   140005626:	test   rcx,rcx
   140005629:	je     0x140005630
   14000562b:	call   0x1400058cc
   140005630:	mov    rcx,QWORD PTR [rbx+0x68]
   140005634:	test   rcx,rcx
   140005637:	je     0x14000563e
   140005639:	call   0x1400058cc
   14000563e:	mov    rcx,QWORD PTR [rbx+0x70]
   140005642:	test   rcx,rcx
   140005645:	je     0x14000564c
   140005647:	call   0x1400058cc
   14000564c:	mov    rcx,QWORD PTR [rbx+0x78]
   140005650:	test   rcx,rcx
   140005653:	je     0x14000565a
   140005655:	call   0x1400058cc
   14000565a:	mov    rcx,QWORD PTR [rbx+0x80]
   140005661:	test   rcx,rcx
   140005664:	je     0x14000566b
   140005666:	call   0x1400058cc
   14000566b:	mov    rcx,QWORD PTR [rbx+0xa0]
   140005672:	lea    rax,[rip+0xb857]        # 0x140010ed0
   140005679:	cmp    rcx,rax
   14000567c:	je     0x140005683
   14000567e:	call   0x1400058cc
   140005683:	mov    edi,0xd
   140005688:	mov    ecx,edi
   14000568a:	call   0x1400086bc
   14000568f:	nop
   140005690:	mov    rcx,QWORD PTR [rbx+0xb8]
   140005697:	mov    QWORD PTR [rsp+0x30],rcx
   14000569c:	test   rcx,rcx
   14000569f:	je     0x1400056bd
   1400056a1:	lock dec DWORD PTR [rcx]
   1400056a4:	jne    0x1400056bd
   1400056a6:	lea    rax,[rip+0xfb93]        # 0x140015240
   1400056ad:	mov    rcx,QWORD PTR [rsp+0x30]
   1400056b2:	cmp    rcx,rax
   1400056b5:	je     0x1400056bd
   1400056b7:	call   0x1400058cc
   1400056bc:	nop
   1400056bd:	mov    ecx,edi
   1400056bf:	call   0x1400085b0
   1400056c4:	mov    ecx,0xc
   1400056c9:	call   0x1400086bc
   1400056ce:	nop
   1400056cf:	mov    rdi,QWORD PTR [rbx+0xc0]
   1400056d6:	test   rdi,rdi
   1400056d9:	je     0x140005706
   1400056db:	mov    rcx,rdi
   1400056de:	call   0x140008034
   1400056e3:	cmp    rdi,QWORD PTR [rip+0x104b6]        # 0x140015ba0
   1400056ea:	je     0x140005706
   1400056ec:	lea    rax,[rip+0x1034d]        # 0x140015a40
   1400056f3:	cmp    rdi,rax
   1400056f6:	je     0x140005706
   1400056f8:	cmp    DWORD PTR [rdi],0x0
   1400056fb:	jne    0x140005706
   1400056fd:	mov    rcx,rdi
   140005700:	call   0x1400080e0
   140005705:	nop
   140005706:	mov    ecx,0xc
   14000570b:	call   0x1400085b0
   140005710:	mov    rcx,rbx
   140005713:	call   0x1400058cc
   140005718:	mov    rbx,QWORD PTR [rsp+0x38]
   14000571d:	add    rsp,0x20
   140005721:	pop    rdi
   140005722:	ret    
   140005723:	int3   
   140005724:	int3   
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	rex push rbx
   14000572e:	sub    rsp,0x20
   140005732:	call   0x140004238
   140005737:	call   0x140008494
   14000573c:	test   eax,eax
   14000573e:	je     0x1400057a0
   140005740:	lea    rcx,[rip+0xfffffffffffffea9]        # 0x1400055f0
   140005747:	call   QWORD PTR [rip+0xaa53]        # 0x1400101a0
   14000574d:	mov    DWORD PTR [rip+0xf915],eax        # 0x140015068
   140005753:	cmp    eax,0xffffffff
   140005756:	je     0x1400057a0
   140005758:	mov    edx,0x2c8
   14000575d:	mov    ecx,0x1
   140005762:	call   0x14000931c
   140005767:	mov    rbx,rax
   14000576a:	test   rax,rax
   14000576d:	je     0x1400057a0
   14000576f:	mov    ecx,DWORD PTR [rip+0xf8f3]        # 0x140015068
   140005775:	mov    rdx,rax
   140005778:	call   QWORD PTR [rip+0xaa02]        # 0x140010180
   14000577e:	test   eax,eax
   140005780:	je     0x1400057a0
   140005782:	xor    edx,edx
   140005784:	mov    rcx,rbx
   140005787:	call   0x14000547c
   14000578c:	call   QWORD PTR [rip+0xaa06]        # 0x140010198
   140005792:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140005797:	mov    DWORD PTR [rbx],eax
   140005799:	mov    eax,0x1
   14000579e:	jmp    0x1400057a7
   1400057a0:	call   0x140005450
   1400057a5:	xor    eax,eax
   1400057a7:	add    rsp,0x20
   1400057ab:	pop    rbx
   1400057ac:	ret    
   1400057ad:	int3   
   1400057ae:	int3   
   1400057af:	int3   
   1400057b0:	int3   
   1400057b1:	int3   
   1400057b2:	int3   
   1400057b3:	int3   
   1400057b4:	sub    rsp,0x28
   1400057b8:	xor    r8d,r8d
   1400057bb:	mov    edx,0x1000
   1400057c0:	xor    ecx,ecx
   1400057c2:	mov    DWORD PTR [rsp+0x30],0x2
   1400057ca:	call   QWORD PTR [rip+0xa9e8]        # 0x1400101b8
   1400057d0:	mov    QWORD PTR [rip+0x11439],rax        # 0x140016c10
   1400057d7:	test   rax,rax
   1400057da:	je     0x140005805
   1400057dc:	call   QWORD PTR [rip+0xa9ce]        # 0x1400101b0
   1400057e2:	cmp    al,0x6
   1400057e4:	jae    0x140005800
   1400057e6:	mov    rcx,QWORD PTR [rip+0x11423]        # 0x140016c10
   1400057ed:	lea    r8,[rsp+0x30]
   1400057f2:	mov    r9d,0x4
   1400057f8:	xor    edx,edx
   1400057fa:	call   QWORD PTR [rip+0xa9a8]        # 0x1400101a8
   140005800:	mov    eax,0x1
   140005805:	add    rsp,0x28
   140005809:	ret    
   14000580a:	int3   
   14000580b:	int3   
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	mov    QWORD PTR [rsp+0x18],rbx
   140005815:	push   rdi
   140005816:	sub    rsp,0x20
   14000581a:	mov    rax,QWORD PTR [rip+0xf84f]        # 0x140015070
   140005821:	and    QWORD PTR [rsp+0x30],0x0
   140005827:	movabs rdi,0x2b992ddfa232
   140005831:	cmp    rax,rdi
   140005834:	je     0x140005842
   140005836:	not    rax
   140005839:	mov    QWORD PTR [rip+0xf838],rax        # 0x140015078
   140005840:	jmp    0x1400058b8
   140005842:	lea    rcx,[rsp+0x30]
   140005847:	call   QWORD PTR [rip+0xa98b]        # 0x1400101d8
   14000584d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005852:	call   QWORD PTR [rip+0xa978]        # 0x1400101d0
   140005858:	mov    r11d,eax
   14000585b:	xor    rbx,r11
   14000585e:	call   QWORD PTR [rip+0xa934]        # 0x140010198
   140005864:	mov    r11d,eax
   140005867:	xor    rbx,r11
   14000586a:	call   QWORD PTR [rip+0xa958]        # 0x1400101c8
   140005870:	lea    rcx,[rsp+0x38]
   140005875:	mov    r11d,eax
   140005878:	xor    rbx,r11
   14000587b:	call   QWORD PTR [rip+0xa93f]        # 0x1400101c0
   140005881:	mov    r11,QWORD PTR [rsp+0x38]
   140005886:	xor    r11,rbx
   140005889:	movabs rax,0xffffffffffff
   140005893:	and    r11,rax
   140005896:	movabs rax,0x2b992ddfa233
   1400058a0:	cmp    r11,rdi
   1400058a3:	cmove  r11,rax
   1400058a7:	mov    QWORD PTR [rip+0xf7c2],r11        # 0x140015070
   1400058ae:	not    r11
   1400058b1:	mov    QWORD PTR [rip+0xf7c0],r11        # 0x140015078
   1400058b8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058bd:	add    rsp,0x20
   1400058c1:	pop    rdi
   1400058c2:	ret    
   1400058c3:	int3   
   1400058c4:	int3   
   1400058c5:	int3   
   1400058c6:	int3   
   1400058c7:	int3   
   1400058c8:	int3   
   1400058c9:	int3   
   1400058ca:	int3   
   1400058cb:	int3   
   1400058cc:	test   rcx,rcx
   1400058cf:	je     0x140005908
   1400058d1:	push   rbx
   1400058d2:	sub    rsp,0x20
   1400058d6:	mov    r8,rcx
   1400058d9:	mov    rcx,QWORD PTR [rip+0x11330]        # 0x140016c10
   1400058e0:	xor    edx,edx
   1400058e2:	call   QWORD PTR [rip+0xa8f8]        # 0x1400101e0
   1400058e8:	test   eax,eax
   1400058ea:	jne    0x140005903
   1400058ec:	call   0x140006a54
   1400058f1:	mov    rbx,rax
   1400058f4:	call   QWORD PTR [rip+0xa74e]        # 0x140010048
   1400058fa:	mov    ecx,eax
   1400058fc:	call   0x140006a04
   140005901:	mov    DWORD PTR [rbx],eax
   140005903:	add    rsp,0x20
   140005907:	pop    rbx
   140005908:	ret    
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	mov    QWORD PTR [rsp+0x8],rcx
   140005915:	sub    rsp,0x88
   14000591c:	lea    rcx,[rip+0x1139d]        # 0x140016cc0
   140005923:	call   QWORD PTR [rip+0xa8ef]        # 0x140010218
   140005929:	mov    rax,QWORD PTR [rip+0x11488]        # 0x140016db8
   140005930:	mov    QWORD PTR [rsp+0x58],rax
   140005935:	xor    r8d,r8d
   140005938:	lea    rdx,[rsp+0x60]
   14000593d:	mov    rcx,QWORD PTR [rsp+0x58]
   140005942:	call   0x14000dcda
   140005947:	mov    QWORD PTR [rsp+0x50],rax
   14000594c:	cmp    QWORD PTR [rsp+0x50],0x0
   140005952:	je     0x140005995
   140005954:	mov    QWORD PTR [rsp+0x38],0x0
   14000595d:	lea    rax,[rsp+0x48]
   140005962:	mov    QWORD PTR [rsp+0x30],rax
   140005967:	lea    rax,[rsp+0x40]
   14000596c:	mov    QWORD PTR [rsp+0x28],rax
   140005971:	lea    rax,[rip+0x11348]        # 0x140016cc0
   140005978:	mov    QWORD PTR [rsp+0x20],rax
   14000597d:	mov    r9,QWORD PTR [rsp+0x50]
   140005982:	mov    r8,QWORD PTR [rsp+0x58]
   140005987:	mov    rdx,QWORD PTR [rsp+0x60]
   14000598c:	xor    ecx,ecx
   14000598e:	call   0x14000dcce
   140005993:	jmp    0x1400059b7
   140005995:	mov    rax,QWORD PTR [rsp+0x88]
   14000599d:	mov    QWORD PTR [rip+0x11414],rax        # 0x140016db8
   1400059a4:	lea    rax,[rsp+0x88]
   1400059ac:	add    rax,0x8
   1400059b0:	mov    QWORD PTR [rip+0x113a1],rax        # 0x140016d58
   1400059b7:	mov    rax,QWORD PTR [rip+0x113fa]        # 0x140016db8
   1400059be:	mov    QWORD PTR [rip+0x1126b],rax        # 0x140016c30
   1400059c5:	mov    rax,QWORD PTR [rsp+0x90]
   1400059cd:	mov    QWORD PTR [rip+0x1136c],rax        # 0x140016d40
   1400059d4:	mov    DWORD PTR [rip+0x11242],0xc0000409        # 0x140016c20
   1400059de:	mov    DWORD PTR [rip+0x1123c],0x1        # 0x140016c24
   1400059e8:	mov    rax,QWORD PTR [rip+0xf681]        # 0x140015070
   1400059ef:	mov    QWORD PTR [rsp+0x68],rax
   1400059f4:	mov    rax,QWORD PTR [rip+0xf67d]        # 0x140015078
   1400059fb:	mov    QWORD PTR [rsp+0x70],rax
   140005a00:	call   QWORD PTR [rip+0xa7fa]        # 0x140010200
   140005a06:	mov    DWORD PTR [rip+0x112ac],eax        # 0x140016cb8
   140005a0c:	mov    ecx,0x1
   140005a11:	call   0x140009434
   140005a16:	xor    ecx,ecx
   140005a18:	call   QWORD PTR [rip+0xa6e2]        # 0x140010100
   140005a1e:	lea    rcx,[rip+0xb57b]        # 0x140010fa0
   140005a25:	call   QWORD PTR [rip+0xa7cd]        # 0x1400101f8
   140005a2b:	cmp    DWORD PTR [rip+0x11286],0x0        # 0x140016cb8
   140005a32:	jne    0x140005a3e
   140005a34:	mov    ecx,0x1
   140005a39:	call   0x140009434
   140005a3e:	call   QWORD PTR [rip+0xa7ac]        # 0x1400101f0
   140005a44:	mov    edx,0xc0000409
   140005a49:	mov    rcx,rax
   140005a4c:	call   QWORD PTR [rip+0xa796]        # 0x1400101e8
   140005a52:	add    rsp,0x88
   140005a59:	ret    
   140005a5a:	int3   
   140005a5b:	int3   
   140005a5c:	int3   
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	mov    rax,rsp
   140005a63:	mov    QWORD PTR [rax+0x10],rbx
   140005a67:	mov    QWORD PTR [rax+0x18],rbp
   140005a6b:	mov    QWORD PTR [rax+0x20],rsi
   140005a6f:	mov    DWORD PTR [rax+0x8],ecx
   140005a72:	push   rdi
   140005a73:	sub    rsp,0x20
   140005a77:	mov    rcx,rdx
   140005a7a:	mov    rbx,rdx
   140005a7d:	call   0x14000a124
   140005a82:	mov    ecx,DWORD PTR [rbx+0x18]
   140005a85:	movsxd rsi,eax
   140005a88:	test   cl,0x82
   140005a8b:	jne    0x140005aa4
   140005a8d:	call   0x140006a54
   140005a92:	mov    DWORD PTR [rax],0x9
   140005a98:	or     DWORD PTR [rbx+0x18],0x20
   140005a9c:	or     eax,0xffffffff
   140005a9f:	jmp    0x140005bd8
   140005aa4:	test   cl,0x40
   140005aa7:	je     0x140005ab6
   140005aa9:	call   0x140006a54
   140005aae:	mov    DWORD PTR [rax],0x22
   140005ab4:	jmp    0x140005a98
   140005ab6:	xor    edi,edi
   140005ab8:	test   cl,0x1
   140005abb:	je     0x140005ad6
   140005abd:	mov    DWORD PTR [rbx+0x8],edi
   140005ac0:	test   cl,0x10
   140005ac3:	je     0x140005b52
   140005ac9:	mov    rax,QWORD PTR [rbx+0x10]
   140005acd:	and    ecx,0xfffffffe
   140005ad0:	mov    QWORD PTR [rbx],rax
   140005ad3:	mov    DWORD PTR [rbx+0x18],ecx
   140005ad6:	mov    eax,DWORD PTR [rbx+0x18]
   140005ad9:	mov    DWORD PTR [rbx+0x8],edi
   140005adc:	and    eax,0xffffffef
   140005adf:	or     eax,0x2
   140005ae2:	mov    DWORD PTR [rbx+0x18],eax
   140005ae5:	test   eax,0x10c
   140005aea:	jne    0x140005b1b
   140005aec:	call   0x140009ee0
   140005af1:	add    rax,0x30
   140005af5:	cmp    rbx,rax
   140005af8:	je     0x140005b08
   140005afa:	call   0x140009ee0
   140005aff:	add    rax,0x60
   140005b03:	cmp    rbx,rax
   140005b06:	jne    0x140005b13
   140005b08:	mov    ecx,esi
   140005b0a:	call   0x140009e78
   140005b0f:	test   eax,eax
   140005b11:	jne    0x140005b1b
   140005b13:	mov    rcx,rbx
   140005b16:	call   0x140009e1c
   140005b1b:	test   DWORD PTR [rbx+0x18],0x108
   140005b22:	je     0x140005bb5
   140005b28:	mov    ebp,DWORD PTR [rbx]
   140005b2a:	mov    rdx,QWORD PTR [rbx+0x10]
   140005b2e:	sub    ebp,DWORD PTR [rbx+0x10]
   140005b31:	lea    rax,[rdx+0x1]
   140005b35:	mov    QWORD PTR [rbx],rax
   140005b38:	mov    eax,DWORD PTR [rbx+0x24]
   140005b3b:	dec    eax
   140005b3d:	mov    DWORD PTR [rbx+0x8],eax
   140005b40:	test   ebp,ebp
   140005b42:	jle    0x140005b5d
   140005b44:	mov    r8d,ebp
   140005b47:	mov    ecx,esi
   140005b49:	call   0x140009d34
   140005b4e:	mov    edi,eax
   140005b50:	jmp    0x140005ba9
   140005b52:	or     ecx,0x20
   140005b55:	mov    DWORD PTR [rbx+0x18],ecx
   140005b58:	jmp    0x140005a9c
   140005b5d:	cmp    esi,0xffffffff
   140005b60:	je     0x140005b85
   140005b62:	cmp    esi,0xfffffffe
   140005b65:	je     0x140005b85
   140005b67:	mov    rcx,rsi
   140005b6a:	mov    rax,rsi
   140005b6d:	lea    rdx,[rip+0x12c2c]        # 0x1400187a0
   140005b74:	and    ecx,0x1f
   140005b77:	sar    rax,0x5
   140005b7b:	imul   rcx,rcx,0x58
   140005b7f:	add    rcx,QWORD PTR [rdx+rax*8]
   140005b83:	jmp    0x140005b8c
   140005b85:	lea    rcx,[rip+0xf484]        # 0x140015010
   140005b8c:	test   BYTE PTR [rcx+0x8],0x20
   140005b90:	je     0x140005ba9
   140005b92:	xor    edx,edx
   140005b94:	mov    ecx,esi
   140005b96:	lea    r8d,[rdx+0x2]
   140005b9a:	call   0x1400094e0
   140005b9f:	cmp    rax,0xffffffffffffffff
   140005ba3:	je     0x140005a98
   140005ba9:	mov    rcx,QWORD PTR [rbx+0x10]
   140005bad:	mov    al,BYTE PTR [rsp+0x30]
   140005bb1:	mov    BYTE PTR [rcx],al
   140005bb3:	jmp    0x140005bcb
   140005bb5:	mov    ebp,0x1
   140005bba:	lea    rdx,[rsp+0x30]
   140005bbf:	mov    ecx,esi
   140005bc1:	mov    r8d,ebp
   140005bc4:	call   0x140009d34
   140005bc9:	mov    edi,eax
   140005bcb:	cmp    edi,ebp
   140005bcd:	jne    0x140005a98
   140005bd3:	movzx  eax,BYTE PTR [rsp+0x30]
   140005bd8:	mov    rbx,QWORD PTR [rsp+0x38]
   140005bdd:	mov    rbp,QWORD PTR [rsp+0x40]
   140005be2:	mov    rsi,QWORD PTR [rsp+0x48]
   140005be7:	add    rsp,0x20
   140005beb:	pop    rdi
   140005bec:	ret    
   140005bed:	int3   
   140005bee:	int3   
   140005bef:	int3   
   140005bf0:	int3   
   140005bf1:	int3   
   140005bf2:	int3   
   140005bf3:	int3   
   140005bf4:	rex push rbx
   140005bf6:	sub    rsp,0x20
   140005bfa:	test   BYTE PTR [rdx+0x18],0x40
   140005bfe:	mov    rbx,r8
   140005c01:	je     0x140005c0f
   140005c03:	cmp    QWORD PTR [rdx+0x10],0x0
   140005c08:	jne    0x140005c0f
   140005c0a:	inc    DWORD PTR [r8]
   140005c0d:	jmp    0x140005c25
   140005c0f:	call   0x14000a150
   140005c14:	mov    ecx,0xffff
   140005c19:	cmp    ax,cx
   140005c1c:	jne    0x140005c23
   140005c1e:	or     DWORD PTR [rbx],0xffffffff
   140005c21:	jmp    0x140005c25
   140005c23:	inc    DWORD PTR [rbx]
   140005c25:	add    rsp,0x20
   140005c29:	pop    rbx
   140005c2a:	ret    
   140005c2b:	int3   
   140005c2c:	int3   
   140005c2d:	int3   
   140005c2e:	int3   
   140005c2f:	int3   
   140005c30:	int3   
   140005c31:	int3   
   140005c32:	int3   
   140005c33:	int3   
   140005c34:	mov    rax,rsp
   140005c37:	mov    QWORD PTR [rax+0x8],rbx
   140005c3b:	mov    QWORD PTR [rax+0x10],rbp
   140005c3f:	mov    QWORD PTR [rax+0x18],rsi
   140005c43:	mov    QWORD PTR [rax+0x20],rdi
   140005c47:	push   r12
   140005c49:	sub    rsp,0x20
   140005c4d:	mov    rbx,r9
   140005c50:	mov    rsi,r8
   140005c53:	mov    edi,edx
   140005c55:	mov    rbp,rcx
   140005c58:	call   0x140006a54
   140005c5d:	test   BYTE PTR [rsi+0x18],0x40
   140005c61:	mov    r12d,DWORD PTR [rax]
   140005c64:	je     0x140005c71
   140005c66:	cmp    QWORD PTR [rsi+0x10],0x0
   140005c6b:	jne    0x140005c71
   140005c6d:	add    DWORD PTR [rbx],edi
   140005c6f:	jmp    0x140005cc5
   140005c71:	call   0x140006a54
   140005c76:	and    DWORD PTR [rax],0x0
   140005c79:	jmp    0x140005caf
   140005c7b:	movzx  ecx,WORD PTR [rbp+0x0]
   140005c7f:	mov    r8,rbx
   140005c82:	mov    rdx,rsi
   140005c85:	dec    edi
   140005c87:	call   0x140005bf4
   140005c8c:	add    rbp,0x2
   140005c90:	cmp    DWORD PTR [rbx],0xffffffff
   140005c93:	jne    0x140005caf
   140005c95:	call   0x140006a54
   140005c9a:	cmp    DWORD PTR [rax],0x2a
   140005c9d:	jne    0x140005cb3
   140005c9f:	mov    ecx,0x3f
   140005ca4:	mov    r8,rbx
   140005ca7:	mov    rdx,rsi
   140005caa:	call   0x140005bf4
   140005caf:	test   edi,edi
   140005cb1:	jg     0x140005c7b
   140005cb3:	call   0x140006a54
   140005cb8:	cmp    DWORD PTR [rax],0x0
   140005cbb:	jne    0x140005cc5
   140005cbd:	call   0x140006a54
   140005cc2:	mov    DWORD PTR [rax],r12d
   140005cc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140005cca:	mov    rbp,QWORD PTR [rsp+0x38]
   140005ccf:	mov    rsi,QWORD PTR [rsp+0x40]
   140005cd4:	mov    rdi,QWORD PTR [rsp+0x48]
   140005cd9:	add    rsp,0x20
   140005cdd:	pop    r12
   140005cdf:	ret    
   140005ce0:	int3   
   140005ce1:	int3   
   140005ce2:	int3   
   140005ce3:	int3   
   140005ce4:	int3   
   140005ce5:	int3   
   140005ce6:	int3   
   140005ce7:	int3   
   140005ce8:	mov    QWORD PTR [rsp+0x18],rbx
   140005ced:	push   rbp
   140005cee:	push   rsi
   140005cef:	push   rdi
   140005cf0:	push   r12
   140005cf2:	push   r13
   140005cf4:	push   r14
   140005cf6:	push   r15
   140005cf8:	lea    rbp,[rsp-0x3d0]
   140005d00:	sub    rsp,0x4d0
   140005d07:	mov    rax,QWORD PTR [rip+0xf362]        # 0x140015070
   140005d0e:	xor    rax,rsp
   140005d11:	mov    QWORD PTR [rbp+0x3c0],rax
   140005d18:	xor    eax,eax
   140005d1a:	mov    rbx,rcx
   140005d1d:	mov    QWORD PTR [rsp+0x78],rcx
   140005d22:	mov    QWORD PTR [rbp-0x80],rdx
   140005d26:	lea    rcx,[rbp-0x70]
   140005d2a:	mov    rdx,r8
   140005d2d:	mov    r14,r9
   140005d30:	mov    QWORD PTR [rsp+0x50],r9
   140005d35:	mov    DWORD PTR [rsp+0x74],eax
   140005d39:	mov    r12d,eax
   140005d3c:	mov    DWORD PTR [rsp+0x5c],eax
   140005d40:	mov    edi,eax
   140005d42:	mov    DWORD PTR [rsp+0x44],eax
   140005d46:	mov    DWORD PTR [rsp+0x48],eax
   140005d4a:	mov    DWORD PTR [rsp+0x70],eax
   140005d4e:	mov    DWORD PTR [rsp+0x58],eax
   140005d52:	call   0x140003f18
   140005d57:	xor    r10d,r10d
   140005d5a:	test   rbx,rbx
   140005d5d:	jne    0x140005d8b
   140005d5f:	call   0x140006a54
   140005d64:	mov    DWORD PTR [rax],0x16
   140005d6a:	call   0x1400069e0
   140005d6f:	xor    r11d,r11d
   140005d72:	cmp    BYTE PTR [rbp-0x58],r11b
   140005d76:	je     0x140005d83
   140005d78:	mov    rax,QWORD PTR [rbp-0x60]
   140005d7c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140005d83:	or     eax,0xffffffff
   140005d86:	jmp    0x14000679b
   140005d8b:	mov    r8,QWORD PTR [rbp-0x80]
   140005d8f:	test   r8,r8
   140005d92:	je     0x140005d5f
   140005d94:	movzx  r13d,WORD PTR [r8]
   140005d98:	mov    esi,r10d
   140005d9b:	mov    DWORD PTR [rsp+0x40],r10d
   140005da0:	mov    r15d,r10d
   140005da3:	mov    edx,r10d
   140005da6:	mov    QWORD PTR [rbp-0x50],r10
   140005daa:	test   r13w,r13w
   140005dae:	je     0x140006788
   140005db4:	mov    rbx,QWORD PTR [rbp-0x48]
   140005db8:	mov    ecx,0x58
   140005dbd:	mov    r9d,0x200
   140005dc3:	lea    r11d,[rcx-0x38]
   140005dc7:	add    r8,0x2
   140005dcb:	mov    QWORD PTR [rbp-0x80],r8
   140005dcf:	test   esi,esi
   140005dd1:	js     0x140006788
   140005dd7:	movzx  eax,r13w
   140005ddb:	sub    ax,r11w
   140005ddf:	cmp    ax,cx
   140005de2:	ja     0x140005df9
   140005de4:	lea    rcx,[rip+0xb765]        # 0x140011550
   140005deb:	movzx  eax,r13w
   140005def:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140005df4:	and    ecx,0xf
   140005df7:	jmp    0x140005dfc
   140005df9:	mov    ecx,r10d
   140005dfc:	movsxd rax,edx
   140005dff:	movsxd rcx,ecx
   140005e02:	lea    rdx,[rax+rcx*8]
   140005e06:	lea    rax,[rip+0xb743]        # 0x140011550
   140005e0d:	movsx  edx,BYTE PTR [rdx+rax*1]
   140005e11:	sar    edx,0x4
   140005e14:	mov    DWORD PTR [rsp+0x6c],edx
   140005e18:	mov    ecx,edx
   140005e1a:	test   edx,edx
   140005e1c:	je     0x14000662f
   140005e22:	dec    ecx
   140005e24:	je     0x14000673f
   140005e2a:	dec    ecx
   140005e2c:	je     0x1400066f2
   140005e32:	dec    ecx
   140005e34:	je     0x1400066a7
   140005e3a:	dec    ecx
   140005e3c:	je     0x14000669a
   140005e42:	dec    ecx
   140005e44:	je     0x140006656
   140005e4a:	dec    ecx
   140005e4c:	je     0x14000653c
   140005e52:	dec    ecx
   140005e54:	jne    0x140006775
   140005e5a:	movzx  eax,r13w
   140005e5e:	mov    ecx,0x64
   140005e63:	cmp    eax,ecx
   140005e65:	jg     0x140006073
   140005e6b:	je     0x140006195
   140005e71:	cmp    eax,0x41
   140005e74:	je     0x140006040
   140005e7a:	cmp    eax,0x43
   140005e7d:	je     0x140005fcb
   140005e83:	cmp    eax,0x45
   140005e86:	je     0x140006040
   140005e8c:	cmp    eax,0x47
   140005e8f:	je     0x140006040
   140005e95:	cmp    eax,0x53
   140005e98:	je     0x140005f26
   140005e9e:	cmp    eax,0x58
   140005ea1:	je     0x140006115
   140005ea7:	cmp    eax,0x5a
   140005eaa:	je     0x140005ec3
   140005eac:	cmp    eax,0x61
   140005eaf:	je     0x14000604b
   140005eb5:	cmp    eax,0x63
   140005eb8:	je     0x140005fd7
   140005ebe:	jmp    0x140005f93
   140005ec3:	mov    rax,QWORD PTR [r14]
   140005ec6:	add    r14,0x8
   140005eca:	mov    QWORD PTR [rsp+0x50],r14
   140005ecf:	test   rax,rax
   140005ed2:	je     0x140005f0f
   140005ed4:	mov    rbx,QWORD PTR [rax+0x8]
   140005ed8:	test   rbx,rbx
   140005edb:	je     0x140005f0f
   140005edd:	mov    edi,0x2d
   140005ee2:	bt     r12d,0xb
   140005ee7:	jae    0x140005f01
   140005ee9:	movsx  eax,WORD PTR [rax]
   140005eec:	mov    DWORD PTR [rsp+0x58],0x1
   140005ef4:	cdq    
   140005ef5:	sub    eax,edx
   140005ef7:	sar    eax,1
   140005ef9:	mov    r15d,eax
   140005efc:	jmp    0x140005f98
   140005f01:	movsx  r15d,WORD PTR [rax]
   140005f05:	mov    DWORD PTR [rsp+0x58],r10d
   140005f0a:	jmp    0x140005f98
   140005f0f:	mov    rbx,QWORD PTR [rip+0x102ea]        # 0x140016200
   140005f16:	mov    rcx,rbx
   140005f19:	call   0x140008d20
   140005f1e:	xor    r10d,r10d
   140005f21:	mov    r15,rax
   140005f24:	jmp    0x140005f93
   140005f26:	test   r12d,0x830
   140005f2d:	jne    0x140005f32
   140005f2f:	or     r12d,r11d
   140005f32:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   140005f37:	mov    rbx,QWORD PTR [r14]
   140005f3a:	mov    eax,0x7fffffff
   140005f3f:	cmove  edi,eax
   140005f42:	add    r14,0x8
   140005f46:	mov    QWORD PTR [rsp+0x50],r14
   140005f4b:	test   r11b,r12b
   140005f4e:	je     0x1400060d5
   140005f54:	test   rbx,rbx
   140005f57:	mov    r15d,r10d
   140005f5a:	cmove  rbx,QWORD PTR [rip+0x1029e]        # 0x140016200
   140005f62:	mov    rsi,rbx
   140005f65:	test   edi,edi
   140005f67:	jle    0x140005f8f
   140005f69:	cmp    BYTE PTR [rsi],r10b
   140005f6c:	je     0x140005f8f
   140005f6e:	movzx  ecx,BYTE PTR [rsi]
   140005f71:	lea    rdx,[rbp-0x70]
   140005f75:	call   0x14000a504
   140005f7a:	xor    r10d,r10d
   140005f7d:	test   eax,eax
   140005f7f:	je     0x140005f84
   140005f81:	inc    rsi
   140005f84:	inc    r15d
   140005f87:	inc    rsi
   140005f8a:	cmp    r15d,edi
   140005f8d:	jl     0x140005f69
   140005f8f:	mov    esi,DWORD PTR [rsp+0x40]
   140005f93:	mov    edi,0x2d
   140005f98:	cmp    DWORD PTR [rsp+0x70],r10d
   140005f9d:	jne    0x14000650b
   140005fa3:	test   r12b,0x40
   140005fa7:	je     0x1400063f2
   140005fad:	bt     r12d,0x8
   140005fb2:	jae    0x1400063c4
   140005fb8:	mov    WORD PTR [rsp+0x60],di
   140005fbd:	mov    edi,0x1
   140005fc2:	mov    DWORD PTR [rsp+0x48],edi
   140005fc6:	jmp    0x1400063f6
   140005fcb:	test   r12d,0x830
   140005fd2:	jne    0x140005fd7
   140005fd4:	or     r12d,r11d
   140005fd7:	movzx  eax,WORD PTR [r14]
   140005fdb:	add    r14,0x8
   140005fdf:	mov    DWORD PTR [rsp+0x58],0x1
   140005fe7:	mov    QWORD PTR [rsp+0x50],r14
   140005fec:	mov    WORD PTR [rsp+0x64],ax
   140005ff1:	test   r11b,r12b
   140005ff4:	je     0x14000602d
   140005ff6:	mov    BYTE PTR [rsp+0x68],al
   140005ffa:	mov    rax,QWORD PTR [rbp-0x70]
   140005ffe:	mov    BYTE PTR [rsp+0x69],r10b
   140006003:	movsxd r8,DWORD PTR [rax+0x10c]
   14000600a:	lea    r9,[rbp-0x70]
   14000600e:	lea    rdx,[rsp+0x68]
   140006013:	lea    rcx,[rbp-0x40]
   140006017:	call   0x14000a378
   14000601c:	xor    r10d,r10d
   14000601f:	test   eax,eax
   140006021:	jns    0x140006031
   140006023:	mov    DWORD PTR [rsp+0x70],0x1
   14000602b:	jmp    0x140006031
   14000602d:	mov    WORD PTR [rbp-0x40],ax
   140006031:	lea    rbx,[rbp-0x40]
   140006035:	mov    r15d,0x1
   14000603b:	jmp    0x140005f93
   140006040:	mov    DWORD PTR [rbp-0x78],0x1
   140006047:	add    r13w,r11w
   14000604b:	mov    ecx,0x67
   140006050:	or     r12d,0x40
   140006054:	lea    rbx,[rbp-0x40]
   140006058:	mov    esi,r9d
   14000605b:	test   edi,edi
   14000605d:	jns    0x1400062b5
   140006063:	mov    r15d,0x6
   140006069:	mov    DWORD PTR [rsp+0x44],r15d
   14000606e:	jmp    0x140006308
   140006073:	cmp    eax,0x65
   140006076:	jl     0x140005f93
   14000607c:	mov    ecx,0x67
   140006081:	cmp    eax,ecx
   140006083:	jle    0x140006050
   140006085:	mov    ecx,0x69
   14000608a:	cmp    eax,ecx
   14000608c:	je     0x140006195
   140006092:	cmp    eax,0x6e
   140006095:	je     0x14000615c
   14000609b:	mov    ecx,0x6f
   1400060a0:	cmp    eax,ecx
   1400060a2:	je     0x140006146
   1400060a8:	cmp    eax,0x70
   1400060ab:	je     0x14000610b
   1400060ad:	cmp    eax,0x73
   1400060b0:	je     0x140005f32
   1400060b6:	mov    ecx,0x75
   1400060bb:	cmp    eax,ecx
   1400060bd:	je     0x140006199
   1400060c3:	mov    ecx,0x78
   1400060c8:	cmp    eax,ecx
   1400060ca:	jne    0x140005f93
   1400060d0:	lea    eax,[rcx-0x51]
   1400060d3:	jmp    0x14000611a
   1400060d5:	test   rbx,rbx
   1400060d8:	mov    DWORD PTR [rsp+0x58],0x1
   1400060e0:	cmove  rbx,QWORD PTR [rip+0x10120]        # 0x140016208
   1400060e8:	mov    rax,rbx
   1400060eb:	jmp    0x1400060f9
   1400060ed:	dec    edi
   1400060ef:	cmp    WORD PTR [rax],r10w
   1400060f3:	je     0x1400060fd
   1400060f5:	add    rax,0x2
   1400060f9:	test   edi,edi
   1400060fb:	jne    0x1400060ed
   1400060fd:	sub    rax,rbx
   140006100:	sar    rax,1
   140006103:	mov    r15d,eax
   140006106:	jmp    0x140005f93
   14000610b:	mov    edi,0x10
   140006110:	bts    r12d,0xf
   140006115:	mov    eax,0x7
   14000611a:	mov    DWORD PTR [rsp+0x74],eax
   14000611e:	mov    r9d,0x10
   140006124:	mov    r13d,0x200
   14000612a:	test   r12b,r12b
   14000612d:	jns    0x1400061a5
   14000612f:	lea    ecx,[r9+0x20]
   140006133:	add    ax,0x51
   140006137:	lea    edx,[rcx-0x2e]
   14000613a:	mov    WORD PTR [rsp+0x60],cx
   14000613f:	mov    WORD PTR [rsp+0x62],ax
   140006144:	jmp    0x1400061a9
   140006146:	mov    r9d,0x8
   14000614c:	test   r12b,r12b
   14000614f:	jns    0x14000619f
   140006151:	mov    r13d,0x200
   140006157:	or     r12d,r13d
   14000615a:	jmp    0x1400061a5
   14000615c:	mov    rdi,QWORD PTR [r14]
   14000615f:	add    r14,0x8
   140006163:	mov    QWORD PTR [rsp+0x50],r14
   140006168:	call   0x14000a358
   14000616d:	xor    r10d,r10d
   140006170:	test   eax,eax
   140006172:	je     0x140005d5f
   140006178:	lea    r11d,[r10+0x20]
   14000617c:	test   r11b,r12b
   14000617f:	je     0x140006186
   140006181:	mov    WORD PTR [rdi],si
   140006184:	jmp    0x140006188
   140006186:	mov    DWORD PTR [rdi],esi
   140006188:	mov    DWORD PTR [rsp+0x70],0x1
   140006190:	jmp    0x140006511
   140006195:	or     r12d,0x40
   140006199:	mov    r9d,0xa
   14000619f:	mov    r13d,0x200
   1400061a5:	mov    edx,DWORD PTR [rsp+0x48]
   1400061a9:	mov    eax,0x8000
   1400061ae:	test   eax,r12d
   1400061b1:	je     0x1400061bc
   1400061b3:	mov    r8,QWORD PTR [r14]
   1400061b6:	add    r14,0x8
   1400061ba:	jmp    0x1400061f5
   1400061bc:	bt     r12d,0xc
   1400061c1:	jb     0x1400061b3
   1400061c3:	add    r14,0x8
   1400061c7:	test   r11b,r12b
   1400061ca:	je     0x1400061e5
   1400061cc:	mov    QWORD PTR [rsp+0x50],r14
   1400061d1:	test   r12b,0x40
   1400061d5:	je     0x1400061de
   1400061d7:	movsx  r8,WORD PTR [r14-0x8]
   1400061dc:	jmp    0x1400061fa
   1400061de:	movzx  r8d,WORD PTR [r14-0x8]
   1400061e3:	jmp    0x1400061fa
   1400061e5:	test   r12b,0x40
   1400061e9:	je     0x1400061f1
   1400061eb:	movsxd r8,DWORD PTR [r14-0x8]
   1400061ef:	jmp    0x1400061f5
   1400061f1:	mov    r8d,DWORD PTR [r14-0x8]
   1400061f5:	mov    QWORD PTR [rsp+0x50],r14
   1400061fa:	test   r12b,0x40
   1400061fe:	je     0x14000620d
   140006200:	test   r8,r8
   140006203:	jns    0x14000620d
   140006205:	neg    r8
   140006208:	bts    r12d,0x8
   14000620d:	test   eax,r12d
   140006210:	jne    0x14000621c
   140006212:	bt     r12d,0xc
   140006217:	jb     0x14000621c
   140006219:	mov    r8d,r8d
   14000621c:	test   edi,edi
   14000621e:	jns    0x140006227
   140006220:	mov    edi,0x1
   140006225:	jmp    0x140006232
   140006227:	and    r12d,0xfffffff7
   14000622b:	cmp    edi,r13d
   14000622e:	cmovg  edi,r13d
   140006232:	mov    esi,DWORD PTR [rsp+0x74]
   140006236:	mov    rax,r8
   140006239:	lea    rbx,[rbp+0x1bf]
   140006240:	neg    rax
   140006243:	sbb    ecx,ecx
   140006245:	and    ecx,edx
   140006247:	mov    DWORD PTR [rsp+0x48],ecx
   14000624b:	mov    ecx,edi
   14000624d:	dec    edi
   14000624f:	test   ecx,ecx
   140006251:	jg     0x140006258
   140006253:	test   r8,r8
   140006256:	je     0x140006277
   140006258:	xor    edx,edx
   14000625a:	mov    rax,r8
   14000625d:	movsxd rcx,r9d
   140006260:	div    rcx
   140006263:	mov    r8,rax
   140006266:	lea    eax,[rdx+0x30]
   140006269:	cmp    eax,0x39
   14000626c:	jle    0x140006270
   14000626e:	add    eax,esi
   140006270:	mov    BYTE PTR [rbx],al
   140006272:	dec    rbx
   140006275:	jmp    0x14000624b
   140006277:	mov    esi,DWORD PTR [rsp+0x40]
   14000627b:	lea    rax,[rbp+0x1bf]
   140006282:	mov    DWORD PTR [rsp+0x44],edi
   140006286:	sub    eax,ebx
   140006288:	inc    rbx
   14000628b:	mov    r15d,eax
   14000628e:	test   r13d,r12d
   140006291:	je     0x140005f93
   140006297:	test   eax,eax
   140006299:	mov    eax,0x30
   14000629e:	je     0x1400062a8
   1400062a0:	cmp    BYTE PTR [rbx],al
   1400062a2:	je     0x140005f93
   1400062a8:	dec    rbx
   1400062ab:	inc    r15d
   1400062ae:	mov    BYTE PTR [rbx],al
   1400062b0:	jmp    0x140005f93
   1400062b5:	jne    0x1400062c8
   1400062b7:	cmp    r13w,cx
   1400062bb:	jne    0x1400062fe
   1400062bd:	mov    r15d,0x1
   1400062c3:	jmp    0x140006069
   1400062c8:	cmp    edi,r9d
   1400062cb:	mov    r15d,0xa3
   1400062d1:	cmovg  edi,r9d
   1400062d5:	mov    DWORD PTR [rsp+0x44],edi
   1400062d9:	cmp    edi,r15d
   1400062dc:	jle    0x140006305
   1400062de:	add    edi,0x15d
   1400062e4:	movsxd rcx,edi
   1400062e7:	call   0x140009298
   1400062ec:	mov    QWORD PTR [rbp-0x50],rax
   1400062f0:	test   rax,rax
   1400062f3:	je     0x140006069
   1400062f9:	mov    rbx,rax
   1400062fc:	mov    esi,edi
   1400062fe:	mov    r15d,DWORD PTR [rsp+0x44]
   140006303:	jmp    0x140006308
   140006305:	mov    r15d,edi
   140006308:	mov    rax,QWORD PTR [r14]
   14000630b:	mov    rcx,QWORD PTR [rip+0xfb0e]        # 0x140015e20
   140006312:	add    r14,0x8
   140006316:	mov    QWORD PTR [rsp+0x50],r14
   14000631b:	movsx  edi,r13b
   14000631f:	movsxd rsi,esi
   140006322:	mov    QWORD PTR [rbp-0x48],rax
   140006326:	call   QWORD PTR [rip+0x9dec]        # 0x140010118
   14000632c:	lea    rcx,[rbp-0x70]
   140006330:	mov    QWORD PTR [rsp+0x30],rcx
   140006335:	mov    ecx,DWORD PTR [rbp-0x78]
   140006338:	mov    r9d,edi
   14000633b:	mov    DWORD PTR [rsp+0x28],ecx
   14000633f:	lea    rcx,[rbp-0x48]
   140006343:	mov    r8,rsi
   140006346:	mov    rdx,rbx
   140006349:	mov    DWORD PTR [rsp+0x20],r15d
   14000634e:	call   rax
   140006350:	mov    edi,r12d
   140006353:	and    edi,0x80
   140006359:	je     0x140006376
   14000635b:	test   r15d,r15d
   14000635e:	jne    0x140006376
   140006360:	mov    rcx,QWORD PTR [rip+0xfad1]        # 0x140015e38
   140006367:	call   QWORD PTR [rip+0x9dab]        # 0x140010118
   14000636d:	lea    rdx,[rbp-0x70]
   140006371:	mov    rcx,rbx
   140006374:	call   rax
   140006376:	mov    ecx,0x67
   14000637b:	cmp    r13w,cx
   14000637f:	jne    0x14000639b
   140006381:	test   edi,edi
   140006383:	jne    0x14000639b
   140006385:	mov    rcx,QWORD PTR [rip+0xfaa4]        # 0x140015e30
   14000638c:	call   QWORD PTR [rip+0x9d86]        # 0x140010118
   140006392:	lea    rdx,[rbp-0x70]
   140006396:	mov    rcx,rbx
   140006399:	call   rax
   14000639b:	mov    edi,0x2d
   1400063a0:	cmp    BYTE PTR [rbx],dil
   1400063a3:	jne    0x1400063ad
   1400063a5:	bts    r12d,0x8
   1400063aa:	inc    rbx
   1400063ad:	mov    rcx,rbx
   1400063b0:	call   0x140008d20
   1400063b5:	mov    esi,DWORD PTR [rsp+0x40]
   1400063b9:	xor    r10d,r10d
   1400063bc:	mov    r15d,eax
   1400063bf:	jmp    0x140005f98
   1400063c4:	test   r12b,0x1
   1400063c8:	je     0x1400063d9
   1400063ca:	mov    eax,0x2b
   1400063cf:	mov    WORD PTR [rsp+0x60],ax
   1400063d4:	jmp    0x140005fbd
   1400063d9:	test   r12b,0x2
   1400063dd:	je     0x1400063f2
   1400063df:	mov    eax,0x20
   1400063e4:	mov    WORD PTR [rsp+0x60],ax
   1400063e9:	lea    edi,[rax-0x1f]
   1400063ec:	mov    DWORD PTR [rsp+0x48],edi
   1400063f0:	jmp    0x1400063fb
   1400063f2:	mov    edi,DWORD PTR [rsp+0x48]
   1400063f6:	mov    eax,0x20
   1400063fb:	mov    r14d,DWORD PTR [rsp+0x5c]
   140006400:	mov    r13,QWORD PTR [rsp+0x78]
   140006405:	sub    r14d,r15d
   140006408:	sub    r14d,edi
   14000640b:	test   r12b,0xc
   14000640f:	jne    0x140006423
   140006411:	lea    r9,[rsp+0x40]
   140006416:	mov    ecx,eax
   140006418:	mov    r8,r13
   14000641b:	mov    edx,r14d
   14000641e:	call   0x14000e1d8
   140006423:	lea    r9,[rsp+0x40]
   140006428:	lea    rcx,[rsp+0x60]
   14000642d:	mov    r8,r13
   140006430:	mov    edx,edi
   140006432:	call   0x140005c34
   140006437:	test   r12b,0x8
   14000643b:	je     0x140006458
   14000643d:	test   r12b,0x4
   140006441:	jne    0x140006458
   140006443:	lea    r9,[rsp+0x40]
   140006448:	mov    ecx,0x30
   14000644d:	mov    r8,r13
   140006450:	mov    edx,r14d
   140006453:	call   0x14000e1d8
   140006458:	xor    eax,eax
   14000645a:	cmp    DWORD PTR [rsp+0x58],eax
   14000645e:	jne    0x1400064c6
   140006460:	test   r15d,r15d
   140006463:	jle    0x1400064c6
   140006465:	mov    rdi,rbx
   140006468:	mov    esi,r15d
   14000646b:	mov    rax,QWORD PTR [rbp-0x70]
   14000646f:	lea    r9,[rbp-0x70]
   140006473:	lea    rcx,[rsp+0x64]
   140006478:	movsxd r8,DWORD PTR [rax+0x10c]
   14000647f:	mov    rdx,rdi
   140006482:	dec    esi
   140006484:	call   0x14000a378
   140006489:	xor    r10d,r10d
   14000648c:	movsxd r13,eax
   14000648f:	test   eax,eax
   140006491:	jle    0x1400064b8
   140006493:	mov    rdx,QWORD PTR [rsp+0x78]
   140006498:	movzx  ecx,WORD PTR [rsp+0x64]
   14000649d:	lea    r8,[rsp+0x40]
   1400064a2:	call   0x140005bf4
   1400064a7:	add    rdi,r13
   1400064aa:	xor    r10d,r10d
   1400064ad:	test   esi,esi
   1400064af:	jg     0x14000646b
   1400064b1:	mov    r13,QWORD PTR [rsp+0x78]
   1400064b6:	jmp    0x1400064dc
   1400064b8:	mov    r13,QWORD PTR [rsp+0x78]
   1400064bd:	or     esi,0xffffffff
   1400064c0:	mov    DWORD PTR [rsp+0x40],esi
   1400064c4:	jmp    0x1400064e0
   1400064c6:	lea    r9,[rsp+0x40]
   1400064cb:	mov    r8,r13
   1400064ce:	mov    edx,r15d
   1400064d1:	mov    rcx,rbx
   1400064d4:	call   0x140005c34
   1400064d9:	xor    r10d,r10d
   1400064dc:	mov    esi,DWORD PTR [rsp+0x40]
   1400064e0:	test   esi,esi
   1400064e2:	js     0x140006506
   1400064e4:	test   r12b,0x4
   1400064e8:	je     0x140006506
   1400064ea:	lea    r9,[rsp+0x40]
   1400064ef:	mov    ecx,0x20
   1400064f4:	mov    r8,r13
   1400064f7:	mov    edx,r14d
   1400064fa:	call   0x14000e1d8
   1400064ff:	mov    esi,DWORD PTR [rsp+0x40]
   140006503:	xor    r10d,r10d
   140006506:	mov    r14,QWORD PTR [rsp+0x50]
   14000650b:	mov    r11d,0x20
   140006511:	mov    rax,QWORD PTR [rbp-0x50]
   140006515:	test   rax,rax
   140006518:	je     0x140006763
   14000651e:	mov    rcx,rax
   140006521:	call   0x1400058cc
   140006526:	mov    edi,DWORD PTR [rsp+0x44]
   14000652a:	xor    r10d,r10d
   14000652d:	mov    QWORD PTR [rbp-0x50],r10
   140006531:	mov    r11d,0x20
   140006537:	jmp    0x140006767
   14000653c:	movzx  eax,r13w
   140006540:	cmp    eax,0x49
   140006543:	je     0x140006595
   140006545:	cmp    eax,0x68
   140006548:	je     0x14000658d
   14000654a:	mov    ecx,0x6c
   14000654f:	cmp    eax,ecx
   140006551:	je     0x14000656b
   140006553:	mov    ecx,0x58
   140006558:	cmp    eax,0x77
   14000655b:	jne    0x14000677a
   140006561:	bts    r12d,0xb
   140006566:	jmp    0x14000677a
   14000656b:	cmp    WORD PTR [r8],cx
   14000656f:	mov    ecx,0x58
   140006574:	jne    0x140006584
   140006576:	add    r8,0x2
   14000657a:	bts    r12d,0xc
   14000657f:	jmp    0x14000677a
   140006584:	or     r12d,0x10
   140006588:	jmp    0x14000677a
   14000658d:	or     r12d,r11d
   140006590:	jmp    0x140006775
   140006595:	bts    r12d,0xf
   14000659a:	cmp    WORD PTR [r8],0x36
   14000659f:	jne    0x1400065b7
   1400065a1:	cmp    WORD PTR [r8+0x2],0x34
   1400065a7:	jne    0x1400065b7
   1400065a9:	add    r8,0x4
   1400065ad:	bts    r12d,0xf
   1400065b2:	jmp    0x140006775
   1400065b7:	cmp    WORD PTR [r8],0x33
   1400065bc:	jne    0x1400065d4
   1400065be:	cmp    WORD PTR [r8+0x2],0x32
   1400065c4:	jne    0x1400065d4
   1400065c6:	add    r8,0x4
   1400065ca:	btr    r12d,0xf
   1400065cf:	jmp    0x140006775
   1400065d4:	mov    eax,0x64
   1400065d9:	cmp    WORD PTR [r8],ax
   1400065dd:	je     0x140006775
   1400065e3:	mov    eax,0x69
   1400065e8:	cmp    WORD PTR [r8],ax
   1400065ec:	je     0x140006775
   1400065f2:	mov    eax,0x6f
   1400065f7:	cmp    WORD PTR [r8],ax
   1400065fb:	je     0x140006775
   140006601:	mov    eax,0x75
   140006606:	lea    ecx,[rax-0x1d]
   140006609:	cmp    WORD PTR [r8],ax
   14000660d:	je     0x14000677a
   140006613:	lea    eax,[rcx+0x20]
   140006616:	cmp    WORD PTR [r8],ax
   14000661a:	je     0x14000677a
   140006620:	cmp    WORD PTR [r8],cx
   140006624:	je     0x14000677a
   14000662a:	mov    DWORD PTR [rsp+0x6c],r10d
   14000662f:	mov    rdx,QWORD PTR [rsp+0x78]
   140006634:	lea    r8,[rsp+0x40]
   140006639:	movzx  ecx,r13w
   14000663d:	mov    DWORD PTR [rsp+0x58],0x1
   140006645:	call   0x140005bf4
   14000664a:	mov    esi,DWORD PTR [rsp+0x40]
   14000664e:	xor    r10d,r10d
   140006651:	jmp    0x140006531
   140006656:	cmp    r13w,0x2a
   14000665b:	jne    0x140006686
   14000665d:	mov    edi,DWORD PTR [r14]
   140006660:	add    r14,0x8
   140006664:	mov    ecx,0x58
   140006669:	mov    QWORD PTR [rsp+0x50],r14
   14000666e:	mov    DWORD PTR [rsp+0x44],edi
   140006672:	test   edi,edi
   140006674:	jns    0x14000677a
   14000667a:	or     edi,0xffffffff
   14000667d:	mov    DWORD PTR [rsp+0x44],edi
   140006681:	jmp    0x14000677a
   140006686:	lea    ecx,[rdi+rdi*4]
   140006689:	movzx  eax,r13w
   14000668d:	lea    edi,[rax+rcx*2-0x30]
   140006691:	mov    DWORD PTR [rsp+0x44],edi
   140006695:	jmp    0x140006775
   14000669a:	mov    edi,r10d
   14000669d:	mov    DWORD PTR [rsp+0x44],r10d
   1400066a2:	jmp    0x140006775
   1400066a7:	cmp    r13w,0x2a
   1400066ac:	jne    0x1400066da
   1400066ae:	mov    eax,DWORD PTR [r14]
   1400066b1:	add    r14,0x8
   1400066b5:	mov    ecx,0x58
   1400066ba:	mov    QWORD PTR [rsp+0x50],r14
   1400066bf:	mov    DWORD PTR [rsp+0x5c],eax
   1400066c3:	test   eax,eax
   1400066c5:	jns    0x14000677a
   1400066cb:	or     r12d,0x4
   1400066cf:	neg    eax
   1400066d1:	mov    DWORD PTR [rsp+0x5c],eax
   1400066d5:	jmp    0x14000677a
   1400066da:	mov    eax,DWORD PTR [rsp+0x5c]
   1400066de:	lea    ecx,[rax+rax*4]
   1400066e1:	movzx  eax,r13w
   1400066e5:	lea    eax,[rax+rcx*2-0x30]
   1400066e9:	mov    DWORD PTR [rsp+0x5c],eax
   1400066ed:	jmp    0x140006775
   1400066f2:	movzx  eax,r13w
   1400066f6:	cmp    eax,r11d
   1400066f9:	je     0x140006739
   1400066fb:	cmp    eax,0x23
   1400066fe:	je     0x140006732
   140006700:	mov    ecx,0x2b
   140006705:	cmp    eax,ecx
   140006707:	je     0x14000672c
   140006709:	mov    ecx,0x2d
   14000670e:	cmp    eax,ecx
   140006710:	je     0x140006726
   140006712:	mov    ecx,0x30
   140006717:	cmp    eax,ecx
   140006719:	mov    ecx,0x58
   14000671e:	jne    0x14000677a
   140006720:	or     r12d,0x8
   140006724:	jmp    0x14000677a
   140006726:	or     r12d,0x4
   14000672a:	jmp    0x140006775
   14000672c:	or     r12d,0x1
   140006730:	jmp    0x140006775
   140006732:	bts    r12d,0x7
   140006737:	jmp    0x140006775
   140006739:	or     r12d,0x2
   14000673d:	jmp    0x140006775
   14000673f:	or     edi,0xffffffff
   140006742:	mov    DWORD PTR [rbp-0x78],r10d
   140006746:	mov    DWORD PTR [rsp+0x70],r10d
   14000674b:	mov    DWORD PTR [rsp+0x5c],r10d
   140006750:	mov    DWORD PTR [rsp+0x48],r10d
   140006755:	mov    r12d,r10d
   140006758:	mov    DWORD PTR [rsp+0x44],edi
   14000675c:	mov    DWORD PTR [rsp+0x58],r10d
   140006761:	jmp    0x140006775
   140006763:	mov    edi,DWORD PTR [rsp+0x44]
   140006767:	mov    edx,DWORD PTR [rsp+0x6c]
   14000676b:	mov    r8,QWORD PTR [rbp-0x80]
   14000676f:	mov    r9d,0x200
   140006775:	mov    ecx,0x58
   14000677a:	movzx  r13d,WORD PTR [r8]
   14000677e:	test   r13w,r13w
   140006782:	jne    0x140005dc7
   140006788:	cmp    BYTE PTR [rbp-0x58],r10b
   14000678c:	je     0x140006799
   14000678e:	mov    rcx,QWORD PTR [rbp-0x60]
   140006792:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140006799:	mov    eax,esi
   14000679b:	mov    rcx,QWORD PTR [rbp+0x3c0]
   1400067a2:	xor    rcx,rsp
   1400067a5:	call   0x140003c50
   1400067aa:	mov    rbx,QWORD PTR [rsp+0x520]
   1400067b2:	add    rsp,0x4d0
   1400067b9:	pop    r15
   1400067bb:	pop    r14
   1400067bd:	pop    r13
   1400067bf:	pop    r12
   1400067c1:	pop    rdi
   1400067c2:	pop    rsi
   1400067c3:	pop    rbp
   1400067c4:	ret    
   1400067c5:	int3   
   1400067c6:	int3   
   1400067c7:	int3   
   1400067c8:	int3   
   1400067c9:	int3   
   1400067ca:	int3   
   1400067cb:	int3   
   1400067cc:	mov    QWORD PTR [rip+0x109bd],rcx        # 0x140017190
   1400067d3:	ret    
   1400067d4:	int3   
   1400067d5:	int3   
   1400067d6:	int3   
   1400067d7:	int3   
   1400067d8:	int3   
   1400067d9:	int3   
   1400067da:	int3   
   1400067db:	int3   
   1400067dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400067e1:	mov    QWORD PTR [rsp+0x18],rsi
   1400067e6:	push   rbp
   1400067e7:	push   rdi
   1400067e8:	push   r12
   1400067ea:	lea    rbp,[rsp-0x4f0]
   1400067f2:	sub    rsp,0x5f0
   1400067f9:	mov    rax,QWORD PTR [rip+0xe870]        # 0x140015070
   140006800:	xor    rax,rsp
   140006803:	mov    QWORD PTR [rbp+0x4e0],rax
   14000680a:	mov    edi,r8d
   14000680d:	mov    esi,edx
   14000680f:	mov    ebx,ecx
   140006811:	cmp    ecx,0xffffffff
   140006814:	je     0x14000681b
   140006816:	call   0x140009434
   14000681b:	and    DWORD PTR [rsp+0x70],0x0
   140006820:	lea    rcx,[rsp+0x74]
   140006825:	xor    edx,edx
   140006827:	mov    r8d,0x94
   14000682d:	call   0x140006b00
   140006832:	lea    r11,[rsp+0x70]
   140006837:	lea    rax,[rbp+0x10]
   14000683b:	lea    rcx,[rbp+0x10]
   14000683f:	mov    QWORD PTR [rsp+0x48],r11
   140006844:	mov    QWORD PTR [rsp+0x50],rax
   140006849:	call   QWORD PTR [rip+0x99c9]        # 0x140010218
   14000684f:	mov    r12,QWORD PTR [rbp+0x108]
   140006856:	lea    rdx,[rsp+0x40]
   14000685b:	mov    rcx,r12
   14000685e:	xor    r8d,r8d
   140006861:	call   0x14000dcda
   140006866:	test   rax,rax
   140006869:	je     0x1400068a2
   14000686b:	and    QWORD PTR [rsp+0x38],0x0
   140006871:	mov    rdx,QWORD PTR [rsp+0x40]
   140006876:	lea    rcx,[rsp+0x60]
   14000687b:	mov    QWORD PTR [rsp+0x30],rcx
   140006880:	lea    rcx,[rsp+0x58]
   140006885:	mov    r9,rax
   140006888:	mov    QWORD PTR [rsp+0x28],rcx
   14000688d:	lea    rcx,[rbp+0x10]
   140006891:	mov    r8,r12
   140006894:	mov    QWORD PTR [rsp+0x20],rcx
   140006899:	xor    ecx,ecx
   14000689b:	call   0x14000dcce
   1400068a0:	jmp    0x1400068be
   1400068a2:	mov    rax,QWORD PTR [rbp+0x508]
   1400068a9:	mov    QWORD PTR [rbp+0x108],rax
   1400068b0:	lea    rax,[rbp+0x508]
   1400068b7:	mov    QWORD PTR [rbp+0xa8],rax
   1400068be:	mov    rax,QWORD PTR [rbp+0x508]
   1400068c5:	mov    DWORD PTR [rsp+0x70],esi
   1400068c9:	mov    DWORD PTR [rsp+0x74],edi
   1400068cd:	mov    QWORD PTR [rbp-0x80],rax
   1400068d1:	call   QWORD PTR [rip+0x9929]        # 0x140010200
   1400068d7:	xor    ecx,ecx
   1400068d9:	mov    edi,eax
   1400068db:	call   QWORD PTR [rip+0x981f]        # 0x140010100
   1400068e1:	lea    rcx,[rsp+0x48]
   1400068e6:	call   QWORD PTR [rip+0x990c]        # 0x1400101f8
   1400068ec:	test   eax,eax
   1400068ee:	jne    0x140006900
   1400068f0:	test   edi,edi
   1400068f2:	jne    0x140006900
   1400068f4:	cmp    ebx,0xffffffff
   1400068f7:	je     0x140006900
   1400068f9:	mov    ecx,ebx
   1400068fb:	call   0x140009434
   140006900:	mov    rcx,QWORD PTR [rbp+0x4e0]
   140006907:	xor    rcx,rsp
   14000690a:	call   0x140003c50
   14000690f:	lea    r11,[rsp+0x5f0]
   140006917:	mov    rbx,QWORD PTR [r11+0x28]
   14000691b:	mov    rsi,QWORD PTR [r11+0x30]
   14000691f:	mov    rsp,r11
   140006922:	pop    r12
   140006924:	pop    rdi
   140006925:	pop    rbp
   140006926:	ret    
   140006927:	int3   
   140006928:	int3   
   140006929:	int3   
   14000692a:	int3   
   14000692b:	int3   
   14000692c:	int3   
   14000692d:	int3   
   14000692e:	int3   
   14000692f:	int3   
   140006930:	sub    rsp,0x28
   140006934:	mov    r8d,0x1
   14000693a:	mov    edx,0xc0000417
   14000693f:	lea    ecx,[r8+0x1]
   140006943:	call   0x1400067dc
   140006948:	call   QWORD PTR [rip+0x98a2]        # 0x1400101f0
   14000694e:	mov    edx,0xc0000417
   140006953:	mov    rcx,rax
   140006956:	add    rsp,0x28
   14000695a:	rex.W jmp QWORD PTR [rip+0x9887]        # 0x1400101e8
   140006961:	int3   
   140006962:	int3   
   140006963:	int3   
   140006964:	int3   
   140006965:	int3   
   140006966:	int3   
   140006967:	int3   
   140006968:	mov    QWORD PTR [rsp+0x8],rbx
   14000696d:	mov    QWORD PTR [rsp+0x10],rbp
   140006972:	mov    QWORD PTR [rsp+0x18],rsi
   140006977:	push   rdi
   140006978:	sub    rsp,0x30
   14000697c:	mov    rbp,rcx
   14000697f:	mov    rcx,QWORD PTR [rip+0x1080a]        # 0x140017190
   140006986:	mov    ebx,r9d
   140006989:	mov    rdi,r8
   14000698c:	mov    rsi,rdx
   14000698f:	call   QWORD PTR [rip+0x9783]        # 0x140010118
   140006995:	mov    r9d,ebx
   140006998:	mov    r8,rdi
   14000699b:	mov    rdx,rsi
   14000699e:	mov    rcx,rbp
   1400069a1:	test   rax,rax
   1400069a4:	je     0x1400069c7
   1400069a6:	mov    r10,QWORD PTR [rsp+0x60]
   1400069ab:	mov    QWORD PTR [rsp+0x20],r10
   1400069b0:	call   rax
   1400069b2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400069b7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400069bc:	mov    rsi,QWORD PTR [rsp+0x50]
   1400069c1:	add    rsp,0x30
   1400069c5:	pop    rdi
   1400069c6:	ret    
   1400069c7:	mov    rax,QWORD PTR [rsp+0x60]
   1400069cc:	mov    QWORD PTR [rsp+0x20],rax
   1400069d1:	call   0x140006930
   1400069d6:	int3   
   1400069d7:	int3   
   1400069d8:	int3   
   1400069d9:	int3   
   1400069da:	int3   
   1400069db:	int3   
   1400069dc:	int3   
   1400069dd:	int3   
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	sub    rsp,0x38
   1400069e4:	and    QWORD PTR [rsp+0x20],0x0
   1400069ea:	xor    r9d,r9d
   1400069ed:	xor    r8d,r8d
   1400069f0:	xor    edx,edx
   1400069f2:	xor    ecx,ecx
   1400069f4:	call   0x140006968
   1400069f9:	add    rsp,0x38
   1400069fd:	ret    
   1400069fe:	int3   
   1400069ff:	int3   
   140006a00:	int3   
   140006a01:	int3   
   140006a02:	int3   
   140006a03:	int3   
   140006a04:	lea    r9,[rip+0xe675]        # 0x140015080
   140006a0b:	xor    eax,eax
   140006a0d:	mov    rdx,r9
   140006a10:	lea    r8d,[rax+0x8]
   140006a14:	cmp    ecx,DWORD PTR [rdx]
   140006a16:	je     0x140006a43
   140006a18:	inc    eax
   140006a1a:	add    rdx,r8
   140006a1d:	cmp    eax,0x2d
   140006a20:	jb     0x140006a14
   140006a22:	lea    eax,[rcx-0x13]
   140006a25:	cmp    eax,0x11
   140006a28:	ja     0x140006a30
   140006a2a:	mov    eax,0xd
   140006a2f:	ret    
   140006a30:	add    ecx,0xffffff44
   140006a36:	mov    eax,0x16
   140006a3b:	cmp    ecx,0xe
   140006a3e:	cmovbe eax,r8d
   140006a42:	ret    
   140006a43:	cdqe   
   140006a45:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140006a4a:	ret    
   140006a4b:	int3   
   140006a4c:	int3   
   140006a4d:	int3   
   140006a4e:	int3   
   140006a4f:	int3   
   140006a50:	int3   
   140006a51:	int3   
   140006a52:	int3   
   140006a53:	int3   
   140006a54:	sub    rsp,0x28
   140006a58:	call   0x140005538
   140006a5d:	test   rax,rax
   140006a60:	jne    0x140006a6b
   140006a62:	lea    rax,[rip+0xe77f]        # 0x1400151e8
   140006a69:	jmp    0x140006a6f
   140006a6b:	add    rax,0x10
   140006a6f:	add    rsp,0x28
   140006a73:	ret    
   140006a74:	int3   
   140006a75:	int3   
   140006a76:	int3   
   140006a77:	int3   
   140006a78:	int3   
   140006a79:	int3   
   140006a7a:	int3   
   140006a7b:	int3   
   140006a7c:	sub    rsp,0x28
   140006a80:	call   0x140005538
   140006a85:	test   rax,rax
   140006a88:	jne    0x140006a93
   140006a8a:	lea    rax,[rip+0xe75b]        # 0x1400151ec
   140006a91:	jmp    0x140006a97
   140006a93:	add    rax,0x14
   140006a97:	add    rsp,0x28
   140006a9b:	ret    
   140006a9c:	int3   
   140006a9d:	int3   
   140006a9e:	int3   
   140006a9f:	int3   
   140006aa0:	int3   
   140006aa1:	int3   
   140006aa2:	int3   
   140006aa3:	int3   
   140006aa4:	rex push rbx
   140006aa6:	sub    rsp,0x20
   140006aaa:	mov    ebx,ecx
   140006aac:	call   0x140005538
   140006ab1:	test   rax,rax
   140006ab4:	jne    0x140006abf
   140006ab6:	lea    rax,[rip+0xe72f]        # 0x1400151ec
   140006abd:	jmp    0x140006ac3
   140006abf:	add    rax,0x14
   140006ac3:	mov    DWORD PTR [rax],ebx
   140006ac5:	call   0x140005538
   140006aca:	lea    r10,[rip+0xe717]        # 0x1400151e8
   140006ad1:	test   rax,rax
   140006ad4:	je     0x140006ada
   140006ad6:	lea    r10,[rax+0x10]
   140006ada:	mov    ecx,ebx
   140006adc:	call   0x140006a04
   140006ae1:	mov    DWORD PTR [r10],eax
   140006ae4:	add    rsp,0x20
   140006ae8:	pop    rbx
   140006ae9:	ret    
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	int3   
   140006aed:	int3   
   140006aee:	int3   
   140006aef:	int3   
   140006af0:	int3   
   140006af1:	int3   
   140006af2:	int3   
   140006af3:	int3   
   140006af4:	int3   
   140006af5:	int3   
   140006af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006b00:	mov    rax,rcx
   140006b03:	cmp    r8,0x8
   140006b07:	jb     0x140006b5c
   140006b09:	movzx  edx,dl
   140006b0c:	movabs r9,0x101010101010101
   140006b16:	imul   rdx,r9
   140006b1a:	cmp    r8,0x40
   140006b1e:	jb     0x140006b3e
   140006b20:	neg    rcx
   140006b23:	and    ecx,0x7
   140006b26:	je     0x140006b2e
   140006b28:	sub    r8,rcx
   140006b2b:	mov    QWORD PTR [rax],rdx
   140006b2e:	add    rcx,rax
   140006b31:	mov    r9,r8
   140006b34:	and    r8,0x3f
   140006b38:	shr    r9,0x6
   140006b3c:	jne    0x140006b77
   140006b3e:	mov    r9,r8
   140006b41:	and    r8,0x7
   140006b45:	shr    r9,0x3
   140006b49:	je     0x140006b5c
   140006b4b:	data16 data16 xchg ax,ax
   140006b4f:	nop
   140006b50:	mov    QWORD PTR [rcx],rdx
   140006b53:	add    rcx,0x8
   140006b57:	dec    r9
   140006b5a:	jne    0x140006b50
   140006b5c:	test   r8,r8
   140006b5f:	je     0x140006b6b
   140006b61:	mov    BYTE PTR [rcx],dl
   140006b63:	inc    rcx
   140006b66:	dec    r8
   140006b69:	jne    0x140006b61
   140006b6b:	ret    
   140006b6c:	nop    DWORD PTR [rax+0x0]
   140006b70:	data16 data16 xchg ax,ax
   140006b74:	data16 xchg ax,ax
   140006b77:	cmp    r9,0x1c00
   140006b7e:	jae    0x140006bb0
   140006b80:	mov    QWORD PTR [rcx],rdx
   140006b83:	mov    QWORD PTR [rcx+0x8],rdx
   140006b87:	mov    QWORD PTR [rcx+0x10],rdx
   140006b8b:	add    rcx,0x40
   140006b8f:	mov    QWORD PTR [rcx-0x28],rdx
   140006b93:	mov    QWORD PTR [rcx-0x20],rdx
   140006b97:	dec    r9
   140006b9a:	mov    QWORD PTR [rcx-0x18],rdx
   140006b9e:	mov    QWORD PTR [rcx-0x10],rdx
   140006ba2:	mov    QWORD PTR [rcx-0x8],rdx
   140006ba6:	jne    0x140006b80
   140006ba8:	jmp    0x140006b3e
   140006baa:	nop    WORD PTR [rax+rax*1+0x0]
   140006bb0:	movnti QWORD PTR [rcx],rdx
   140006bb4:	movnti QWORD PTR [rcx+0x8],rdx
   140006bb9:	movnti QWORD PTR [rcx+0x10],rdx
   140006bbe:	add    rcx,0x40
   140006bc2:	movnti QWORD PTR [rcx-0x28],rdx
   140006bc7:	movnti QWORD PTR [rcx-0x20],rdx
   140006bcc:	dec    r9
   140006bcf:	movnti QWORD PTR [rcx-0x18],rdx
   140006bd4:	movnti QWORD PTR [rcx-0x10],rdx
   140006bd9:	movnti QWORD PTR [rcx-0x8],rdx
   140006bde:	jne    0x140006bb0
   140006be0:	lock or BYTE PTR [rsp],0x0
   140006be5:	jmp    0x140006b3e
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	int3   
   140006bf1:	int3   
   140006bf2:	int3   
   140006bf3:	int3   
   140006bf4:	int3   
   140006bf5:	int3   
   140006bf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006c00:	mov    r11,rcx
   140006c03:	sub    rdx,rcx
   140006c06:	jb     0x140006daa
   140006c0c:	cmp    r8,0x8
   140006c10:	jb     0x140006c73
   140006c12:	test   cl,0x7
   140006c15:	je     0x140006c4d
   140006c17:	test   cl,0x1
   140006c1a:	je     0x140006c27
   140006c1c:	mov    al,BYTE PTR [rdx+rcx*1]
   140006c1f:	dec    r8
   140006c22:	mov    BYTE PTR [rcx],al
   140006c24:	inc    rcx
   140006c27:	test   cl,0x2
   140006c2a:	je     0x140006c3b
   140006c2c:	mov    ax,WORD PTR [rdx+rcx*1]
   140006c30:	sub    r8,0x2
   140006c34:	mov    WORD PTR [rcx],ax
   140006c37:	add    rcx,0x2
   140006c3b:	test   cl,0x4
   140006c3e:	je     0x140006c4d
   140006c40:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006c43:	sub    r8,0x4
   140006c47:	mov    DWORD PTR [rcx],eax
   140006c49:	add    rcx,0x4
   140006c4d:	mov    r9,r8
   140006c50:	shr    r9,0x5
   140006c54:	jne    0x140006ca7
   140006c56:	mov    r9,r8
   140006c59:	shr    r9,0x3
   140006c5d:	je     0x140006c73
   140006c5f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006c63:	mov    QWORD PTR [rcx],rax
   140006c66:	add    rcx,0x8
   140006c6a:	dec    r9
   140006c6d:	jne    0x140006c5f
   140006c6f:	and    r8,0x7
   140006c73:	test   r8,r8
   140006c76:	jne    0x140006c80
   140006c78:	mov    rax,r11
   140006c7b:	ret    
   140006c7c:	nop    DWORD PTR [rax+0x0]
   140006c80:	mov    al,BYTE PTR [rdx+rcx*1]
   140006c83:	mov    BYTE PTR [rcx],al
   140006c85:	inc    rcx
   140006c88:	dec    r8
   140006c8b:	jne    0x140006c80
   140006c8d:	mov    rax,r11
   140006c90:	ret    
   140006c91:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006ca0:	data16 data16 xchg ax,ax
   140006ca4:	data16 xchg ax,ax
   140006ca7:	cmp    r9,0x2000
   140006cae:	jae    0x140006cf2
   140006cb0:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006cb4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140006cb9:	add    rcx,0x20
   140006cbd:	mov    QWORD PTR [rcx-0x20],rax
   140006cc1:	mov    QWORD PTR [rcx-0x18],r10
   140006cc5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140006cca:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140006ccf:	dec    r9
   140006cd2:	mov    QWORD PTR [rcx-0x10],rax
   140006cd6:	mov    QWORD PTR [rcx-0x8],r10
   140006cda:	jne    0x140006cb0
   140006cdc:	and    r8,0x1f
   140006ce0:	jmp    0x140006c56
   140006ce5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006cf0:	xchg   ax,ax
   140006cf2:	cmp    rdx,0x1000
   140006cf9:	jb     0x140006cb0
   140006cfb:	mov    eax,0x20
   140006d00:	prefetchnta BYTE PTR [rdx+rcx*1]
   140006d04:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140006d09:	add    rcx,0x80
   140006d10:	dec    eax
   140006d12:	jne    0x140006d00
   140006d14:	sub    rcx,0x1000
   140006d1b:	mov    eax,0x40
   140006d20:	mov    r9,QWORD PTR [rdx+rcx*1]
   140006d24:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140006d29:	movnti QWORD PTR [rcx],r9
   140006d2d:	movnti QWORD PTR [rcx+0x8],r10
   140006d32:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140006d37:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   140006d3c:	movnti QWORD PTR [rcx+0x10],r9
   140006d41:	movnti QWORD PTR [rcx+0x18],r10
   140006d46:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   140006d4b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140006d50:	add    rcx,0x40
   140006d54:	movnti QWORD PTR [rcx-0x20],r9
   140006d59:	movnti QWORD PTR [rcx-0x18],r10
   140006d5e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140006d63:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140006d68:	dec    eax
   140006d6a:	movnti QWORD PTR [rcx-0x10],r9
   140006d6f:	movnti QWORD PTR [rcx-0x8],r10
   140006d74:	jne    0x140006d20
   140006d76:	sub    r8,0x1000
   140006d7d:	cmp    r8,0x1000
   140006d84:	jae    0x140006cfb
   140006d8a:	lock or BYTE PTR [rsp],0x0
   140006d8f:	jmp    0x140006c4d
   140006d94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006da0:	data16 data16 xchg ax,ax
   140006da4:	data16 data16 xchg ax,ax
   140006da8:	xchg   ax,ax
   140006daa:	add    rcx,r8
   140006dad:	cmp    r8,0x8
   140006db1:	jb     0x140006e14
   140006db3:	test   cl,0x7
   140006db6:	je     0x140006dee
   140006db8:	test   cl,0x1
   140006dbb:	je     0x140006dc8
   140006dbd:	dec    rcx
   140006dc0:	mov    al,BYTE PTR [rdx+rcx*1]
   140006dc3:	dec    r8
   140006dc6:	mov    BYTE PTR [rcx],al
   140006dc8:	test   cl,0x2
   140006dcb:	je     0x140006ddc
   140006dcd:	sub    rcx,0x2
   140006dd1:	mov    ax,WORD PTR [rdx+rcx*1]
   140006dd5:	sub    r8,0x2
   140006dd9:	mov    WORD PTR [rcx],ax
   140006ddc:	test   cl,0x4
   140006ddf:	je     0x140006dee
   140006de1:	sub    rcx,0x4
   140006de5:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006de8:	sub    r8,0x4
   140006dec:	mov    DWORD PTR [rcx],eax
   140006dee:	mov    r9,r8
   140006df1:	shr    r9,0x5
   140006df5:	jne    0x140006e47
   140006df7:	mov    r9,r8
   140006dfa:	shr    r9,0x3
   140006dfe:	je     0x140006e14
   140006e00:	sub    rcx,0x8
   140006e04:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006e08:	dec    r9
   140006e0b:	mov    QWORD PTR [rcx],rax
   140006e0e:	jne    0x140006e00
   140006e10:	and    r8,0x7
   140006e14:	test   r8,r8
   140006e17:	jne    0x140006e20
   140006e19:	mov    rax,r11
   140006e1c:	ret    
   140006e1d:	nop    DWORD PTR [rax]
   140006e20:	dec    rcx
   140006e23:	mov    al,BYTE PTR [rdx+rcx*1]
   140006e26:	dec    r8
   140006e29:	mov    BYTE PTR [rcx],al
   140006e2b:	jne    0x140006e20
   140006e2d:	mov    rax,r11
   140006e30:	ret    
   140006e31:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006e40:	data16 data16 xchg ax,ax
   140006e44:	data16 xchg ax,ax
   140006e47:	cmp    r9,0x2000
   140006e4e:	jae    0x140006e92
   140006e50:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140006e55:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140006e5a:	sub    rcx,0x20
   140006e5e:	mov    QWORD PTR [rcx+0x18],rax
   140006e62:	mov    QWORD PTR [rcx+0x10],r10
   140006e66:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140006e6b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140006e6f:	dec    r9
   140006e72:	mov    QWORD PTR [rcx+0x8],rax
   140006e76:	mov    QWORD PTR [rcx],r10
   140006e79:	jne    0x140006e50
   140006e7b:	and    r8,0x1f
   140006e7f:	jmp    0x140006df7
   140006e84:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006e90:	xchg   ax,ax
   140006e92:	cmp    rdx,0xfffffffffffff000
   140006e99:	ja     0x140006e50
   140006e9b:	mov    eax,0x20
   140006ea0:	sub    rcx,0x80
   140006ea7:	prefetchnta BYTE PTR [rdx+rcx*1]
   140006eab:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140006eb0:	dec    eax
   140006eb2:	jne    0x140006ea0
   140006eb4:	add    rcx,0x1000
   140006ebb:	mov    eax,0x40
   140006ec0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140006ec5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140006eca:	movnti QWORD PTR [rcx-0x8],r9
   140006ecf:	movnti QWORD PTR [rcx-0x10],r10
   140006ed4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140006ed9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   140006ede:	movnti QWORD PTR [rcx-0x18],r9
   140006ee3:	movnti QWORD PTR [rcx-0x20],r10
   140006ee8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   140006eed:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140006ef2:	sub    rcx,0x40
   140006ef6:	movnti QWORD PTR [rcx+0x18],r9
   140006efb:	movnti QWORD PTR [rcx+0x10],r10
   140006f00:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140006f05:	mov    r10,QWORD PTR [rdx+rcx*1]
   140006f09:	dec    eax
   140006f0b:	movnti QWORD PTR [rcx+0x8],r9
   140006f10:	movnti QWORD PTR [rcx],r10
   140006f14:	jne    0x140006ec0
   140006f16:	sub    r8,0x1000
   140006f1d:	cmp    r8,0x1000
   140006f24:	jae    0x140006e9b
   140006f2a:	lock or BYTE PTR [rsp],0x0
   140006f2f:	jmp    0x140006dee
   140006f34:	int3   
   140006f35:	int3   
   140006f36:	int3   
   140006f37:	int3   
   140006f38:	int3   
   140006f39:	int3   
   140006f3a:	int3   
   140006f3b:	int3   
   140006f3c:	mov    QWORD PTR [rsp+0x10],rbx
   140006f41:	mov    QWORD PTR [rsp+0x18],rbp
   140006f46:	mov    QWORD PTR [rsp+0x20],rsi
   140006f4b:	push   rdi
   140006f4c:	push   r12
   140006f4e:	push   r13
   140006f50:	push   r14
   140006f52:	push   r15
   140006f54:	sub    rsp,0x20
   140006f58:	movsxd rdi,DWORD PTR [r8+0xc]
   140006f5c:	mov    r15,rcx
   140006f5f:	mov    rcx,r8
   140006f62:	mov    rbp,r9
   140006f65:	mov    r13,r8
   140006f68:	mov    r14,rdx
   140006f6b:	call   0x14000a630
   140006f70:	mov    r10,QWORD PTR [r15]
   140006f73:	mov    QWORD PTR [rbp+0x0],r10
   140006f77:	mov    r12d,eax
   140006f7a:	test   edi,edi
   140006f7c:	je     0x140007006
   140006f82:	lea    rcx,[rdi+rdi*4]
   140006f86:	lea    rsi,[rcx*4-0x14]
   140006f8e:	movsxd rbx,DWORD PTR [r13+0x10]
   140006f92:	add    rbx,QWORD PTR [r14+0x8]
   140006f96:	add    rbx,rsi
   140006f99:	cmp    r12d,DWORD PTR [rbx+0x4]
   140006f9d:	jle    0x140006fe8
   140006f9f:	cmp    r12d,DWORD PTR [rbx+0x8]
   140006fa3:	jg     0x140006fe8
   140006fa5:	mov    rcx,QWORD PTR [r14]
   140006fa8:	lea    rdx,[rsp+0x50]
   140006fad:	xor    r8d,r8d
   140006fb0:	call   0x14000dcda
   140006fb5:	movsxd r8,DWORD PTR [rbx+0x10]
   140006fb9:	mov    r9d,DWORD PTR [rbx+0xc]
   140006fbd:	add    r8,QWORD PTR [rsp+0x50]
   140006fc2:	mov    r10d,DWORD PTR [rax]
   140006fc5:	xor    ecx,ecx
   140006fc7:	test   r9d,r9d
   140006fca:	je     0x140006fe3
   140006fcc:	lea    rdx,[r8+0xc]
   140006fd0:	movsxd rax,DWORD PTR [rdx]
   140006fd3:	cmp    rax,r10
   140006fd6:	je     0x140006fe3
   140006fd8:	inc    ecx
   140006fda:	add    rdx,0x14
   140006fde:	cmp    ecx,r9d
   140006fe1:	jb     0x140006fd0
   140006fe3:	cmp    ecx,r9d
   140006fe6:	jb     0x140006ff2
   140006fe8:	sub    rsi,0x14
   140006fec:	dec    edi
   140006fee:	je     0x140007006
   140006ff0:	jmp    0x140006f8e
   140006ff2:	mov    rax,QWORD PTR [r15]
   140006ff5:	lea    rcx,[rcx+rcx*4]
   140006ff9:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140006ffe:	mov    rcx,QWORD PTR [rcx+rax*1]
   140007002:	mov    QWORD PTR [rbp+0x0],rcx
   140007006:	mov    rbx,QWORD PTR [rsp+0x58]
   14000700b:	mov    rsi,QWORD PTR [rsp+0x68]
   140007010:	mov    rax,rbp
   140007013:	mov    rbp,QWORD PTR [rsp+0x60]
   140007018:	add    rsp,0x20
   14000701c:	pop    r15
   14000701e:	pop    r14
   140007020:	pop    r13
   140007022:	pop    r12
   140007024:	pop    rdi
   140007025:	ret    
   140007026:	int3   
   140007027:	int3   
   140007028:	int3   
   140007029:	int3   
   14000702a:	int3   
   14000702b:	int3   
   14000702c:	sub    rsp,0x28
   140007030:	call   0x1400055c4
   140007035:	mov    rax,QWORD PTR [rax+0x128]
   14000703c:	add    rsp,0x28
   140007040:	ret    
   140007041:	int3   
   140007042:	int3   
   140007043:	int3   
   140007044:	int3   
   140007045:	int3   
   140007046:	int3   
   140007047:	int3   
   140007048:	sub    rsp,0x28
   14000704c:	call   0x1400055c4
   140007051:	mov    rax,QWORD PTR [rax+0x130]
   140007058:	add    rsp,0x28
   14000705c:	ret    
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	int3   
   140007061:	int3   
   140007062:	int3   
   140007063:	int3   
   140007064:	rex push rbx
   140007066:	sub    rsp,0x20
   14000706a:	mov    rbx,rcx
   14000706d:	call   0x1400055c4
   140007072:	mov    QWORD PTR [rax+0x128],rbx
   140007079:	add    rsp,0x20
   14000707d:	pop    rbx
   14000707e:	ret    
   14000707f:	int3   
   140007080:	int3   
   140007081:	int3   
   140007082:	int3   
   140007083:	int3   
   140007084:	int3   
   140007085:	int3   
   140007086:	int3   
   140007087:	int3   
   140007088:	rex push rbx
   14000708a:	sub    rsp,0x20
   14000708e:	mov    rbx,rcx
   140007091:	call   0x1400055c4
   140007096:	mov    QWORD PTR [rax+0x130],rbx
   14000709d:	add    rsp,0x20
   1400070a1:	pop    rbx
   1400070a2:	ret    
   1400070a3:	int3   
   1400070a4:	int3   
   1400070a5:	int3   
   1400070a6:	int3   
   1400070a7:	int3   
   1400070a8:	int3   
   1400070a9:	int3   
   1400070aa:	int3   
   1400070ab:	int3   
   1400070ac:	mov    rax,rsp
   1400070af:	mov    QWORD PTR [rax+0x8],rbx
   1400070b3:	mov    QWORD PTR [rax+0x10],rbp
   1400070b7:	mov    QWORD PTR [rax+0x20],rsi
   1400070bb:	push   rdi
   1400070bc:	push   r12
   1400070be:	push   r13
   1400070c0:	sub    rsp,0x20
   1400070c4:	lea    r9,[rax+0x18]
   1400070c8:	mov    rbp,r8
   1400070cb:	mov    r12,rdx
   1400070ce:	call   0x140006f3c
   1400070d3:	mov    rdx,r12
   1400070d6:	mov    rcx,rbp
   1400070d9:	mov    r13,rax
   1400070dc:	call   0x14000a630
   1400070e1:	movsxd rdi,DWORD PTR [rbp+0xc]
   1400070e5:	mov    esi,eax
   1400070e7:	test   edi,edi
   1400070e9:	je     0x14000711f
   1400070eb:	lea    rcx,[rdi+rdi*4]
   1400070ef:	lea    rbx,[rcx*4-0x14]
   1400070f7:	call   0x1400055c4
   1400070fc:	movsxd rcx,DWORD PTR [rbp+0x10]
   140007100:	mov    rdx,QWORD PTR [rax+0x128]
   140007107:	add    rdx,rcx
   14000710a:	add    rdx,rbx
   14000710d:	cmp    esi,DWORD PTR [rdx+0x4]
   140007110:	jle    0x140007117
   140007112:	cmp    esi,DWORD PTR [rdx+0x8]
   140007115:	jle    0x140007121
   140007117:	sub    rbx,0x14
   14000711b:	dec    edi
   14000711d:	jne    0x1400070f7
   14000711f:	xor    edx,edx
   140007121:	test   rdx,rdx
   140007124:	jne    0x14000712c
   140007126:	or     r9d,0xffffffff
   14000712a:	jmp    0x140007130
   14000712c:	mov    r9d,DWORD PTR [rdx+0x4]
   140007130:	mov    r8,rbp
   140007133:	mov    rdx,r12
   140007136:	mov    rcx,r13
   140007139:	call   0x14000a8d4
   14000713e:	mov    rbx,QWORD PTR [rsp+0x40]
   140007143:	mov    rbp,QWORD PTR [rsp+0x48]
   140007148:	mov    rsi,QWORD PTR [rsp+0x58]
   14000714d:	add    rsp,0x20
   140007151:	pop    r13
   140007153:	pop    r12
   140007155:	pop    rdi
   140007156:	ret    
   140007157:	int3   
   140007158:	int3   
   140007159:	int3   
   14000715a:	int3   
   14000715b:	int3   
   14000715c:	int3   
   14000715d:	int3   
   14000715e:	int3   
   14000715f:	int3   
   140007160:	mov    QWORD PTR [rsp+0x10],rbx
   140007165:	mov    QWORD PTR [rsp+0x18],rsi
   14000716a:	push   rdi
   14000716b:	sub    rsp,0x40
   14000716f:	mov    rbx,r9
   140007172:	mov    rdi,r8
   140007175:	mov    rsi,rcx
   140007178:	mov    QWORD PTR [rsp+0x50],rdx
   14000717d:	call   0x1400055c4
   140007182:	mov    rdx,QWORD PTR [rbx+0x8]
   140007186:	mov    QWORD PTR [rax+0x128],rdx
   14000718d:	call   0x1400055c4
   140007192:	mov    rdx,QWORD PTR [rsi+0x38]
   140007196:	mov    QWORD PTR [rax+0x130],rdx
   14000719d:	call   0x1400055c4
   1400071a2:	mov    rdx,QWORD PTR [rbx+0x38]
   1400071a6:	mov    r8d,DWORD PTR [rdx]
   1400071a9:	lea    rdx,[rsp+0x50]
   1400071ae:	mov    r9,rbx
   1400071b1:	add    r8,QWORD PTR [rax+0x128]
   1400071b8:	xor    eax,eax
   1400071ba:	mov    rcx,rsi
   1400071bd:	mov    DWORD PTR [rsp+0x38],eax
   1400071c1:	mov    QWORD PTR [rsp+0x30],rax
   1400071c6:	mov    DWORD PTR [rsp+0x28],eax
   1400071ca:	mov    QWORD PTR [rsp+0x20],r8
   1400071cf:	mov    r8,rdi
   1400071d2:	call   0x14000b890
   1400071d7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400071dc:	mov    rsi,QWORD PTR [rsp+0x60]
   1400071e1:	add    rsp,0x40
   1400071e5:	pop    rdi
   1400071e6:	ret    
   1400071e7:	int3   
   1400071e8:	int3   
   1400071e9:	int3   
   1400071ea:	int3   
   1400071eb:	int3   
   1400071ec:	int3   
   1400071ed:	int3   
   1400071ee:	int3   
   1400071ef:	int3   
   1400071f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400071fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400071ff:	push   rdi
   140007200:	sub    rsp,0x40
   140007204:	mov    rsi,r9
   140007207:	mov    rbp,r8
   14000720a:	mov    rbx,rdx
   14000720d:	mov    rdi,rcx
   140007210:	call   0x1400055c4
   140007215:	mov    QWORD PTR [rax+0x138],rbx
   14000721c:	mov    rbx,QWORD PTR [rdi]
   14000721f:	call   0x1400055c4
   140007224:	mov    rdx,QWORD PTR [rbx+0x38]
   140007228:	mov    rcx,QWORD PTR [rsp+0x78]
   14000722d:	mov    r9,QWORD PTR [rsp+0x70]
   140007232:	mov    DWORD PTR [rsp+0x38],0x1
   14000723a:	mov    QWORD PTR [rax+0x130],rdx
   140007241:	xor    ebx,ebx
   140007243:	mov    QWORD PTR [rsp+0x30],rbx
   140007248:	mov    DWORD PTR [rsp+0x28],ebx
   14000724c:	mov    QWORD PTR [rsp+0x20],rcx
   140007251:	mov    rcx,QWORD PTR [rdi]
   140007254:	mov    r8,rsi
   140007257:	mov    rdx,rbp
   14000725a:	call   0x14000b890
   14000725f:	call   0x1400055c4
   140007264:	mov    rcx,QWORD PTR [rsp+0x80]
   14000726c:	mov    rbp,QWORD PTR [rsp+0x58]
   140007271:	mov    rsi,QWORD PTR [rsp+0x60]
   140007276:	mov    QWORD PTR [rax+0x138],rbx
   14000727d:	lea    eax,[rbx+0x1]
   140007280:	mov    rbx,QWORD PTR [rsp+0x50]
   140007285:	mov    DWORD PTR [rcx],0x1
   14000728b:	add    rsp,0x40
   14000728f:	pop    rdi
   140007290:	ret    
   140007291:	int3   
   140007292:	int3   
   140007293:	int3   
   140007294:	int3   
   140007295:	int3   
   140007296:	int3   
   140007297:	int3   
   140007298:	mov    rax,rsp
   14000729b:	mov    QWORD PTR [rax+0x20],r9
   14000729f:	mov    QWORD PTR [rax+0x18],r8
   1400072a3:	mov    QWORD PTR [rax+0x10],rdx
   1400072a7:	mov    QWORD PTR [rax+0x8],rcx
   1400072ab:	push   rbx
   1400072ac:	sub    rsp,0x60
   1400072b0:	mov    rbx,rcx
   1400072b3:	and    DWORD PTR [rax-0x28],0x0
   1400072b7:	mov    QWORD PTR [rax-0x20],rcx
   1400072bb:	mov    QWORD PTR [rax-0x18],r8
   1400072bf:	call   0x1400055c4
   1400072c4:	mov    r8,QWORD PTR [rax+0xe0]
   1400072cb:	lea    rdx,[rsp+0x48]
   1400072d0:	mov    ecx,DWORD PTR [rbx]
   1400072d2:	call   r8
   1400072d5:	mov    DWORD PTR [rsp+0x40],0x0
   1400072dd:	jmp    0x1400072df
   1400072df:	mov    eax,DWORD PTR [rsp+0x40]
   1400072e3:	add    rsp,0x60
   1400072e7:	pop    rbx
   1400072e8:	ret    
   1400072e9:	int3   
   1400072ea:	int3   
   1400072eb:	int3   
   1400072ec:	int3   
   1400072ed:	int3   
   1400072ee:	int3   
   1400072ef:	int3   
   1400072f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400072f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400072fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400072ff:	push   rdi
   140007300:	push   r12
   140007302:	push   r13
   140007304:	sub    rsp,0x20
   140007308:	movsxd rbx,DWORD PTR [rdx+0xc]
   14000730c:	mov    r12,QWORD PTR [rsp+0x70]
   140007311:	mov    rdi,rdx
   140007314:	mov    rcx,rdi
   140007317:	mov    rdx,r12
   14000731a:	mov    r13d,r9d
   14000731d:	xor    ebp,ebp
   14000731f:	call   0x14000a630
   140007324:	mov    esi,eax
   140007326:	test   ebx,ebx
   140007328:	jne    0x14000732f
   14000732a:	call   0x140008444
   14000732f:	mov    r10,QWORD PTR [rsp+0x68]
   140007334:	mov    r8,QWORD PTR [rsp+0x60]
   140007339:	or     r11d,0xffffffff
   14000733d:	mov    DWORD PTR [r10],r11d
   140007340:	mov    edx,ebx
   140007342:	mov    DWORD PTR [r8],r11d
   140007345:	test   ebx,ebx
   140007347:	je     0x140007373
   140007349:	movsxd rcx,DWORD PTR [rdi+0x10]
   14000734d:	lea    rax,[rbx+rbx*4]
   140007351:	lea    rcx,[rcx+rax*4]
   140007355:	mov    rax,QWORD PTR [r12+0x8]
   14000735a:	lea    r9,[rcx+rax*1-0xc]
   14000735f:	cmp    esi,DWORD PTR [r9-0x4]
   140007363:	jle    0x14000736a
   140007365:	cmp    esi,DWORD PTR [r9]
   140007368:	jle    0x140007373
   14000736a:	sub    r9,0x14
   14000736e:	add    edx,r11d
   140007371:	jne    0x14000735f
   140007373:	test   edx,edx
   140007375:	je     0x14000738b
   140007377:	lea    eax,[rdx-0x1]
   14000737a:	lea    rdx,[rax+rax*4]
   14000737e:	movsxd rax,DWORD PTR [rdi+0x10]
   140007382:	lea    rbp,[rax+rdx*4]
   140007386:	add    rbp,QWORD PTR [r12+0x8]
   14000738b:	xor    edx,edx
   14000738d:	test   ebx,ebx
   14000738f:	je     0x1400073f6
   140007391:	xor    r9d,r9d
   140007394:	movsxd rcx,DWORD PTR [rdi+0x10]
   140007398:	add    rcx,QWORD PTR [r12+0x8]
   14000739d:	add    rcx,r9
   1400073a0:	test   rbp,rbp
   1400073a3:	je     0x1400073b4
   1400073a5:	mov    eax,DWORD PTR [rbp+0x4]
   1400073a8:	cmp    DWORD PTR [rcx],eax
   1400073aa:	jle    0x1400073d1
   1400073ac:	mov    eax,DWORD PTR [rbp+0x8]
   1400073af:	cmp    DWORD PTR [rcx+0x4],eax
   1400073b2:	jg     0x1400073d1
   1400073b4:	cmp    r13d,DWORD PTR [rcx]
   1400073b7:	jl     0x1400073d1
   1400073b9:	cmp    r13d,DWORD PTR [rcx+0x4]
   1400073bd:	jg     0x1400073d1
   1400073bf:	mov    eax,DWORD PTR [r8]
   1400073c2:	cmp    eax,r11d
   1400073c5:	cmove  eax,edx
   1400073c8:	mov    DWORD PTR [r8],eax
   1400073cb:	lea    eax,[rdx+0x1]
   1400073ce:	mov    DWORD PTR [r10],eax
   1400073d1:	inc    edx
   1400073d3:	add    r9,0x14
   1400073d7:	cmp    edx,ebx
   1400073d9:	jb     0x140007394
   1400073db:	cmp    DWORD PTR [r8],r11d
   1400073de:	je     0x1400073f6
   1400073e0:	mov    eax,DWORD PTR [r8]
   1400073e3:	lea    rcx,[rax+rax*4]
   1400073e7:	movsxd rax,DWORD PTR [rdi+0x10]
   1400073eb:	lea    rax,[rax+rcx*4]
   1400073ef:	add    rax,QWORD PTR [r12+0x8]
   1400073f4:	jmp    0x140007400
   1400073f6:	and    DWORD PTR [r8],0x0
   1400073fa:	and    DWORD PTR [r10],0x0
   1400073fe:	xor    eax,eax
   140007400:	mov    rbx,QWORD PTR [rsp+0x40]
   140007405:	mov    rbp,QWORD PTR [rsp+0x48]
   14000740a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000740f:	add    rsp,0x20
   140007413:	pop    r13
   140007415:	pop    r12
   140007417:	pop    rdi
   140007418:	ret    
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	int3   
   14000741d:	int3   
   14000741e:	int3   
   14000741f:	int3   
   140007420:	rex push rbx
   140007422:	sub    rsp,0x20
   140007426:	mov    rbx,rcx
   140007429:	mov    QWORD PTR [rcx],rdx
   14000742c:	call   0x1400055c4
   140007431:	cmp    rbx,QWORD PTR [rax+0x120]
   140007438:	jae    0x140007448
   14000743a:	call   0x1400055c4
   14000743f:	mov    rcx,QWORD PTR [rax+0x120]
   140007446:	jmp    0x14000744a
   140007448:	xor    ecx,ecx
   14000744a:	mov    QWORD PTR [rbx+0x8],rcx
   14000744e:	call   0x1400055c4
   140007453:	mov    QWORD PTR [rax+0x120],rbx
   14000745a:	mov    rax,rbx
   14000745d:	add    rsp,0x20
   140007461:	pop    rbx
   140007462:	ret    
   140007463:	int3   
   140007464:	int3   
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	int3   
   140007469:	int3   
   14000746a:	int3   
   14000746b:	int3   
   14000746c:	rex push rbx
   14000746e:	sub    rsp,0x20
   140007472:	mov    rbx,rcx
   140007475:	call   0x1400055c4
   14000747a:	mov    rdx,QWORD PTR [rax+0x120]
   140007481:	jmp    0x14000748c
   140007483:	cmp    QWORD PTR [rdx],rbx
   140007486:	je     0x14000749a
   140007488:	mov    rdx,QWORD PTR [rdx+0x8]
   14000748c:	test   rdx,rdx
   14000748f:	jne    0x140007483
   140007491:	lea    eax,[rdx+0x1]
   140007494:	add    rsp,0x20
   140007498:	pop    rbx
   140007499:	ret    
   14000749a:	xor    eax,eax
   14000749c:	jmp    0x140007494
   14000749e:	int3   
   14000749f:	int3   
   1400074a0:	int3   
   1400074a1:	int3   
   1400074a2:	int3   
   1400074a3:	int3   
   1400074a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400074a9:	push   rdi
   1400074aa:	sub    rsp,0x20
   1400074ae:	mov    rdi,rcx
   1400074b1:	call   0x1400055c4
   1400074b6:	cmp    rdi,QWORD PTR [rax+0x120]
   1400074bd:	je     0x1400074c4
   1400074bf:	call   0x140008444
   1400074c4:	call   0x1400055c4
   1400074c9:	mov    rbx,QWORD PTR [rax+0x120]
   1400074d0:	jmp    0x1400074db
   1400074d2:	cmp    rdi,rbx
   1400074d5:	je     0x1400074f0
   1400074d7:	mov    rbx,QWORD PTR [rbx+0x8]
   1400074db:	test   rbx,rbx
   1400074de:	jne    0x1400074d2
   1400074e0:	call   0x140008444
   1400074e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400074ea:	add    rsp,0x20
   1400074ee:	pop    rdi
   1400074ef:	ret    
   1400074f0:	call   0x1400055c4
   1400074f5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400074f9:	mov    QWORD PTR [rax+0x120],rcx
   140007500:	jmp    0x1400074e5
   140007502:	int3   
   140007503:	int3   
   140007504:	int3   
   140007505:	int3   
   140007506:	int3   
   140007507:	int3   
   140007508:	rex push rbp
   14000750a:	push   rbx
   14000750b:	push   rsi
   14000750c:	push   rdi
   14000750d:	push   r12
   14000750f:	push   r13
   140007511:	push   r14
   140007513:	push   r15
   140007515:	lea    rbp,[rsp-0x4b8]
   14000751d:	sub    rsp,0x5b8
   140007524:	mov    rax,QWORD PTR [rip+0xdb45]        # 0x140015070
   14000752b:	xor    rax,rsp
   14000752e:	mov    QWORD PTR [rbp+0x4a0],rax
   140007535:	mov    rbx,QWORD PTR [rbp+0x520]
   14000753c:	mov    rdi,QWORD PTR [rbp+0x530]
   140007543:	mov    r14,QWORD PTR [rbp+0x538]
   14000754a:	mov    r13,rdx
   14000754d:	mov    r15,rcx
   140007550:	mov    r12,r8
   140007553:	lea    rcx,[rsp+0x30]
   140007558:	lea    rdx,[rip+0x9a51]        # 0x140010fb0
   14000755f:	mov    r8d,0x98
   140007565:	mov    rsi,r9
   140007568:	call   0x140006c00
   14000756d:	movsxd rax,DWORD PTR [rbp+0x528]
   140007574:	mov    rdx,QWORD PTR [r14]
   140007577:	mov    rcx,QWORD PTR [r15]
   14000757a:	mov    QWORD PTR [rsp+0x68],rax
   14000757f:	movzx  eax,BYTE PTR [rbp+0x540]
   140007586:	lea    r11,[rip+0x3627]        # 0x14000abb4
   14000758d:	lea    r8,[rsp+0x30]
   140007592:	mov    QWORD PTR [rbp-0x78],rax
   140007596:	mov    rax,QWORD PTR [r14+0x40]
   14000759a:	xor    r9d,r9d
   14000759d:	mov    QWORD PTR [rsp+0x28],rax
   1400075a2:	lea    rax,[rbp-0x30]
   1400075a6:	mov    QWORD PTR [rsp+0x50],r11
   1400075ab:	mov    QWORD PTR [rsp+0x58],rsi
   1400075b0:	mov    QWORD PTR [rsp+0x60],rbx
   1400075b5:	mov    QWORD PTR [rsp+0x70],r12
   1400075ba:	mov    QWORD PTR [rsp+0x20],rax
   1400075bf:	mov    QWORD PTR [rsp+0x78],rdi
   1400075c4:	mov    QWORD PTR [rbp-0x80],r13
   1400075c8:	mov    QWORD PTR [rbp-0x70],0x19930520
   1400075d0:	call   0x14000dcc2
   1400075d5:	mov    rcx,QWORD PTR [rbp+0x4a0]
   1400075dc:	xor    rcx,rsp
   1400075df:	call   0x140003c50
   1400075e4:	add    rsp,0x5b8
   1400075eb:	pop    r15
   1400075ed:	pop    r14
   1400075ef:	pop    r13
   1400075f1:	pop    r12
   1400075f3:	pop    rdi
   1400075f4:	pop    rsi
   1400075f5:	pop    rbx
   1400075f6:	pop    rbp
   1400075f7:	ret    
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	lea    rax,[rip+0x9a49]        # 0x140011050
   140007607:	mov    QWORD PTR [rcx],rax
   14000760a:	jmp    0x14000bc04
   14000760f:	int3   
   140007610:	int3   
   140007611:	int3   
   140007612:	int3   
   140007613:	int3   
   140007614:	int3   
   140007615:	int3   
   140007616:	int3   
   140007617:	int3   
   140007618:	mov    QWORD PTR [rsp+0x8],rbx
   14000761d:	push   rdi
   14000761e:	sub    rsp,0x20
   140007622:	lea    rax,[rip+0x9a27]        # 0x140011050
   140007629:	mov    ebx,edx
   14000762b:	mov    rdi,rcx
   14000762e:	mov    QWORD PTR [rcx],rax
   140007631:	call   0x14000bc04
   140007636:	test   bl,0x1
   140007639:	je     0x140007643
   14000763b:	mov    rcx,rdi
   14000763e:	call   0x140003c2c
   140007643:	mov    rax,rdi
   140007646:	mov    rbx,QWORD PTR [rsp+0x30]
   14000764b:	add    rsp,0x20
   14000764f:	pop    rdi
   140007650:	ret    
   140007651:	int3   
   140007652:	int3   
   140007653:	int3   
   140007654:	int3   
   140007655:	int3   
   140007656:	int3   
   140007657:	int3   
   140007658:	rex push rbx
   14000765a:	sub    rsp,0x20
   14000765e:	mov    rbx,rcx
   140007661:	call   0x14000bc5c
   140007666:	lea    r11,[rip+0x99e3]        # 0x140011050
   14000766d:	mov    QWORD PTR [rbx],r11
   140007670:	mov    rax,rbx
   140007673:	add    rsp,0x20
   140007677:	pop    rbx
   140007678:	ret    
   140007679:	int3   
   14000767a:	int3   
   14000767b:	int3   
   14000767c:	int3   
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	rex push rbx
   140007682:	sub    rsp,0x40
   140007686:	mov    rbx,rcx
   140007689:	jmp    0x14000769a
   14000768b:	mov    rcx,rbx
   14000768e:	call   0x1400089a8
   140007693:	test   eax,eax
   140007695:	je     0x1400076aa
   140007697:	mov    rcx,rbx
   14000769a:	call   0x14000bcf0
   14000769f:	test   rax,rax
   1400076a2:	je     0x14000768b
   1400076a4:	add    rsp,0x40
   1400076a8:	pop    rbx
   1400076a9:	ret    
   1400076aa:	mov    eax,DWORD PTR [rip+0xfb00]        # 0x1400171b0
   1400076b0:	mov    r8d,0x1
   1400076b6:	lea    rbx,[rip+0x9993]        # 0x140011050
   1400076bd:	test   r8b,al
   1400076c0:	jne    0x1400076fb
   1400076c2:	or     eax,r8d
   1400076c5:	lea    rdx,[rsp+0x58]
   1400076ca:	lea    rcx,[rip+0xfac7]        # 0x140017198
   1400076d1:	mov    DWORD PTR [rip+0xfad9],eax        # 0x1400171b0
   1400076d7:	lea    rax,[rip+0x9982]        # 0x140011060
   1400076de:	mov    QWORD PTR [rsp+0x58],rax
   1400076e3:	call   0x14000babc
   1400076e8:	lea    rcx,[rip+0x7d11]        # 0x14000f400
   1400076ef:	mov    QWORD PTR [rip+0xfaa2],rbx        # 0x140017198
   1400076f6:	call   0x140008b40
   1400076fb:	lea    rdx,[rip+0xfa96]        # 0x140017198
   140007702:	lea    rcx,[rsp+0x20]
   140007707:	call   0x14000bc5c
   14000770c:	lea    rdx,[rip+0xc875]        # 0x140013f88
   140007713:	lea    rcx,[rsp+0x20]
   140007718:	mov    QWORD PTR [rsp+0x20],rbx
   14000771d:	call   0x14000bdac
   140007722:	int3   
   140007723:	int3   
   140007724:	int3   
   140007725:	int3   
   140007726:	int3   
   140007727:	int3   
   140007728:	int3   
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	mov    QWORD PTR [rsp+0x8],rbx
   140007731:	mov    QWORD PTR [rsp+0x10],rbp
   140007736:	mov    QWORD PTR [rsp+0x18],rsi
   14000773b:	push   rdi
   14000773c:	sub    rsp,0x20
   140007740:	lea    rbx,[rcx+0x1c]
   140007744:	mov    rbp,rcx
   140007747:	mov    esi,0x101
   14000774c:	mov    rcx,rbx
   14000774f:	mov    r8d,esi
   140007752:	xor    edx,edx
   140007754:	call   0x140006b00
   140007759:	xor    r11d,r11d
   14000775c:	lea    rdi,[rbp+0x10]
   140007760:	lea    ecx,[r11+0x6]
   140007764:	movzx  eax,r11w
   140007768:	mov    DWORD PTR [rbp+0xc],r11d
   14000776c:	mov    QWORD PTR [rbp+0x4],r11
   140007770:	rep stos WORD PTR es:[rdi],ax
   140007773:	lea    rdi,[rip+0xdac6]        # 0x140015240
   14000777a:	sub    rdi,rbp
   14000777d:	mov    al,BYTE PTR [rdi+rbx*1]
   140007780:	mov    BYTE PTR [rbx],al
   140007782:	inc    rbx
   140007785:	dec    rsi
   140007788:	jne    0x14000777d
   14000778a:	lea    rcx,[rbp+0x11d]
   140007791:	mov    edx,0x100
   140007796:	mov    al,BYTE PTR [rcx+rdi*1]
   140007799:	mov    BYTE PTR [rcx],al
   14000779b:	inc    rcx
   14000779e:	dec    rdx
   1400077a1:	jne    0x140007796
   1400077a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400077a8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400077ad:	mov    rsi,QWORD PTR [rsp+0x40]
   1400077b2:	add    rsp,0x20
   1400077b6:	pop    rdi
   1400077b7:	ret    
   1400077b8:	int3   
   1400077b9:	int3   
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	int3   
   1400077bf:	int3   
   1400077c0:	mov    rax,rsp
   1400077c3:	mov    QWORD PTR [rax+0x10],rbx
   1400077c7:	mov    QWORD PTR [rax+0x18],rsi
   1400077cb:	mov    QWORD PTR [rax+0x20],rdi
   1400077cf:	push   rbp
   1400077d0:	lea    rbp,[rax-0x488]
   1400077d7:	sub    rsp,0x580
   1400077de:	mov    rax,QWORD PTR [rip+0xd88b]        # 0x140015070
   1400077e5:	xor    rax,rsp
   1400077e8:	mov    QWORD PTR [rbp+0x470],rax
   1400077ef:	mov    rsi,rcx
   1400077f2:	mov    ecx,DWORD PTR [rcx+0x4]
   1400077f5:	lea    rdx,[rsp+0x50]
   1400077fa:	call   QWORD PTR [rip+0x8a20]        # 0x140010220
   140007800:	mov    ebx,0x100
   140007805:	test   eax,eax
   140007807:	je     0x140007949
   14000780d:	xor    eax,eax
   14000780f:	lea    rcx,[rsp+0x70]
   140007814:	mov    BYTE PTR [rcx],al
   140007816:	inc    eax
   140007818:	inc    rcx
   14000781b:	cmp    eax,ebx
   14000781d:	jb     0x140007814
   14000781f:	mov    al,BYTE PTR [rsp+0x56]
   140007823:	mov    BYTE PTR [rsp+0x70],0x20
   140007828:	lea    rdi,[rsp+0x56]
   14000782d:	jmp    0x140007858
   14000782f:	movzx  edx,BYTE PTR [rdi+0x1]
   140007833:	movzx  r8d,al
   140007837:	cmp    r8d,edx
   14000783a:	ja     0x140007852
   14000783c:	sub    edx,r8d
   14000783f:	mov    eax,r8d
   140007842:	lea    rcx,[rsp+r8*1+0x70]
   140007847:	lea    r8d,[rdx+0x1]
   14000784b:	mov    dl,0x20
   14000784d:	call   0x140006b00
   140007852:	add    rdi,0x2
   140007856:	mov    al,BYTE PTR [rdi]
   140007858:	test   al,al
   14000785a:	jne    0x14000782f
   14000785c:	mov    eax,DWORD PTR [rsi+0xc]
   14000785f:	and    DWORD PTR [rsp+0x38],0x0
   140007864:	lea    r8,[rsp+0x70]
   140007869:	mov    DWORD PTR [rsp+0x30],eax
   14000786d:	mov    eax,DWORD PTR [rsi+0x4]
   140007870:	mov    r9d,ebx
   140007873:	mov    DWORD PTR [rsp+0x28],eax
   140007877:	lea    rax,[rbp+0x270]
   14000787e:	mov    edx,0x1
   140007883:	xor    ecx,ecx
   140007885:	mov    QWORD PTR [rsp+0x20],rax
   14000788a:	call   0x14000c318
   14000788f:	and    DWORD PTR [rsp+0x40],0x0
   140007894:	mov    eax,DWORD PTR [rsi+0x4]
   140007897:	mov    edx,DWORD PTR [rsi+0xc]
   14000789a:	mov    DWORD PTR [rsp+0x38],eax
   14000789e:	lea    rax,[rbp+0x70]
   1400078a2:	mov    DWORD PTR [rsp+0x30],ebx
   1400078a6:	mov    QWORD PTR [rsp+0x28],rax
   1400078ab:	lea    r9,[rsp+0x70]
   1400078b0:	mov    r8d,ebx
   1400078b3:	xor    ecx,ecx
   1400078b5:	mov    DWORD PTR [rsp+0x20],ebx
   1400078b9:	call   0x14000c118
   1400078be:	and    DWORD PTR [rsp+0x40],0x0
   1400078c3:	mov    eax,DWORD PTR [rsi+0x4]
   1400078c6:	mov    edx,DWORD PTR [rsi+0xc]
   1400078c9:	mov    DWORD PTR [rsp+0x38],eax
   1400078cd:	lea    rax,[rbp+0x170]
   1400078d4:	mov    DWORD PTR [rsp+0x30],ebx
   1400078d8:	mov    QWORD PTR [rsp+0x28],rax
   1400078dd:	lea    r9,[rsp+0x70]
   1400078e2:	mov    r8d,0x200
   1400078e8:	xor    ecx,ecx
   1400078ea:	mov    DWORD PTR [rsp+0x20],ebx
   1400078ee:	call   0x14000c118
   1400078f3:	lea    rdx,[rbp+0x70]
   1400078f7:	lea    r8,[rbp+0x170]
   1400078fe:	sub    rdx,rsi
   140007901:	lea    r11,[rbp+0x270]
   140007908:	lea    rcx,[rsi+0x1d]
   14000790c:	sub    r8,rsi
   14000790f:	test   BYTE PTR [r11],0x1
   140007913:	je     0x14000791e
   140007915:	or     BYTE PTR [rcx],0x10
   140007918:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   14000791c:	jmp    0x14000792c
   14000791e:	test   BYTE PTR [r11],0x2
   140007922:	je     0x140007934
   140007924:	or     BYTE PTR [rcx],0x20
   140007927:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   14000792c:	mov    BYTE PTR [rcx+0x100],al
   140007932:	jmp    0x14000793b
   140007934:	mov    BYTE PTR [rcx+0x100],0x0
   14000793b:	inc    rcx
   14000793e:	add    r11,0x2
   140007942:	dec    rbx
   140007945:	jne    0x14000790f
   140007947:	jmp    0x140007988
   140007949:	xor    edx,edx
   14000794b:	lea    rcx,[rsi+0x1d]
   14000794f:	lea    r8d,[rdx-0x61]
   140007953:	lea    eax,[r8+0x20]
   140007957:	cmp    eax,0x19
   14000795a:	ja     0x140007964
   14000795c:	or     BYTE PTR [rcx],0x10
   14000795f:	lea    eax,[rdx+0x20]
   140007962:	jmp    0x140007970
   140007964:	cmp    r8d,0x19
   140007968:	ja     0x140007978
   14000796a:	or     BYTE PTR [rcx],0x20
   14000796d:	lea    eax,[rdx-0x20]
   140007970:	mov    BYTE PTR [rcx+0x100],al
   140007976:	jmp    0x14000797f
   140007978:	mov    BYTE PTR [rcx+0x100],0x0
   14000797f:	inc    edx
   140007981:	inc    rcx
   140007984:	cmp    edx,ebx
   140007986:	jb     0x14000794f
   140007988:	mov    rcx,QWORD PTR [rbp+0x470]
   14000798f:	xor    rcx,rsp
   140007992:	call   0x140003c50
   140007997:	lea    r11,[rsp+0x580]
   14000799f:	mov    rbx,QWORD PTR [r11+0x18]
   1400079a3:	mov    rsi,QWORD PTR [r11+0x20]
   1400079a7:	mov    rdi,QWORD PTR [r11+0x28]
   1400079ab:	mov    rsp,r11
   1400079ae:	pop    rbp
   1400079af:	ret    
   1400079b0:	int3   
   1400079b1:	int3   
   1400079b2:	int3   
   1400079b3:	int3   
   1400079b4:	int3   
   1400079b5:	int3   
   1400079b6:	int3   
   1400079b7:	int3   
   1400079b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400079bd:	push   rdi
   1400079be:	sub    rsp,0x20
   1400079c2:	call   0x1400055c4
   1400079c7:	mov    rdi,rax
   1400079ca:	mov    ecx,DWORD PTR [rax+0xc8]
   1400079d0:	test   DWORD PTR [rip+0xdd9a],ecx        # 0x140015770
   1400079d6:	je     0x1400079eb
   1400079d8:	cmp    QWORD PTR [rax+0xc0],0x0
   1400079e0:	je     0x1400079eb
   1400079e2:	mov    rbx,QWORD PTR [rax+0xb8]
   1400079e9:	jmp    0x140007a57
   1400079eb:	mov    ecx,0xd
   1400079f0:	call   0x1400086bc
   1400079f5:	nop
   1400079f6:	mov    rbx,QWORD PTR [rdi+0xb8]
   1400079fd:	mov    QWORD PTR [rsp+0x30],rbx
   140007a02:	cmp    rbx,QWORD PTR [rip+0xdc67]        # 0x140015670
   140007a09:	je     0x140007a4d
   140007a0b:	test   rbx,rbx
   140007a0e:	je     0x140007a2b
   140007a10:	lock dec DWORD PTR [rbx]
   140007a13:	jne    0x140007a2b
   140007a15:	lea    rax,[rip+0xd824]        # 0x140015240
   140007a1c:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a21:	cmp    rcx,rax
   140007a24:	je     0x140007a2b
   140007a26:	call   0x1400058cc
   140007a2b:	mov    rax,QWORD PTR [rip+0xdc3e]        # 0x140015670
   140007a32:	mov    QWORD PTR [rdi+0xb8],rax
   140007a39:	mov    rax,QWORD PTR [rip+0xdc30]        # 0x140015670
   140007a40:	mov    QWORD PTR [rsp+0x30],rax
   140007a45:	lock inc DWORD PTR [rax]
   140007a48:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a4d:	mov    ecx,0xd
   140007a52:	call   0x1400085b0
   140007a57:	test   rbx,rbx
   140007a5a:	jne    0x140007a64
   140007a5c:	lea    ecx,[rbx+0x20]
   140007a5f:	call   0x1400045a0
   140007a64:	mov    rax,rbx
   140007a67:	mov    rbx,QWORD PTR [rsp+0x38]
   140007a6c:	add    rsp,0x20
   140007a70:	pop    rdi
   140007a71:	ret    
   140007a72:	int3   
   140007a73:	int3   
   140007a74:	int3   
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	rex push rbx
   140007a7a:	sub    rsp,0x40
   140007a7e:	mov    ebx,ecx
   140007a80:	lea    rcx,[rsp+0x20]
   140007a85:	xor    edx,edx
   140007a87:	call   0x140003f18
   140007a8c:	and    DWORD PTR [rip+0xf725],0x0        # 0x1400171b8
   140007a93:	cmp    ebx,0xfffffffe
   140007a96:	jne    0x140007abd
   140007a98:	mov    DWORD PTR [rip+0xf716],0x1        # 0x1400171b8
   140007aa2:	call   QWORD PTR [rip+0x8788]        # 0x140010230
   140007aa8:	cmp    BYTE PTR [rsp+0x38],0x0
   140007aad:	je     0x140007b02
   140007aaf:	mov    rcx,QWORD PTR [rsp+0x30]
   140007ab4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007abb:	jmp    0x140007b02
   140007abd:	cmp    ebx,0xfffffffd
   140007ac0:	jne    0x140007ad4
   140007ac2:	mov    DWORD PTR [rip+0xf6ec],0x1        # 0x1400171b8
   140007acc:	call   QWORD PTR [rip+0x8756]        # 0x140010228
   140007ad2:	jmp    0x140007aa8
   140007ad4:	cmp    ebx,0xfffffffc
   140007ad7:	jne    0x140007aed
   140007ad9:	mov    rax,QWORD PTR [rsp+0x20]
   140007ade:	mov    DWORD PTR [rip+0xf6d0],0x1        # 0x1400171b8
   140007ae8:	mov    eax,DWORD PTR [rax+0x4]
   140007aeb:	jmp    0x140007aa8
   140007aed:	cmp    BYTE PTR [rsp+0x38],0x0
   140007af2:	je     0x140007b00
   140007af4:	mov    rax,QWORD PTR [rsp+0x30]
   140007af9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140007b00:	mov    eax,ebx
   140007b02:	add    rsp,0x40
   140007b06:	pop    rbx
   140007b07:	ret    
   140007b08:	int3   
   140007b09:	int3   
   140007b0a:	int3   
   140007b0b:	int3   
   140007b0c:	int3   
   140007b0d:	int3   
   140007b0e:	int3   
   140007b0f:	int3   
   140007b10:	mov    QWORD PTR [rsp+0x18],rbx
   140007b15:	push   rbp
   140007b16:	push   rsi
   140007b17:	push   rdi
   140007b18:	push   r12
   140007b1a:	push   r13
   140007b1c:	sub    rsp,0x40
   140007b20:	mov    rax,QWORD PTR [rip+0xd549]        # 0x140015070
   140007b27:	xor    rax,rsp
   140007b2a:	mov    QWORD PTR [rsp+0x38],rax
   140007b2f:	mov    rsi,rdx
   140007b32:	call   0x140007a78
   140007b37:	xor    ebx,ebx
   140007b39:	mov    edi,eax
   140007b3b:	test   eax,eax
   140007b3d:	jne    0x140007b4c
   140007b3f:	mov    rcx,rsi
   140007b42:	call   0x14000772c
   140007b47:	jmp    0x140007d62
   140007b4c:	lea    r13,[rip+0xdb2d]        # 0x140015680
   140007b53:	mov    ecx,ebx
   140007b55:	mov    rbp,rbx
   140007b58:	mov    rax,r13
   140007b5b:	mov    r12d,0x1
   140007b61:	cmp    DWORD PTR [rax],edi
   140007b63:	je     0x140007c8f
   140007b69:	add    ecx,r12d
   140007b6c:	add    rbp,r12
   140007b6f:	add    rax,0x30
   140007b73:	cmp    ecx,0x5
   140007b76:	jb     0x140007b61
   140007b78:	cmp    edi,0xfde8
   140007b7e:	je     0x140007c87
   140007b84:	cmp    edi,0xfde9
   140007b8a:	je     0x140007c87
   140007b90:	movzx  ecx,di
   140007b93:	call   QWORD PTR [rip+0x869f]        # 0x140010238
   140007b99:	test   eax,eax
   140007b9b:	je     0x140007c87
   140007ba1:	lea    rdx,[rsp+0x20]
   140007ba6:	mov    ecx,edi
   140007ba8:	call   QWORD PTR [rip+0x8672]        # 0x140010220
   140007bae:	test   eax,eax
   140007bb0:	je     0x140007c7b
   140007bb6:	lea    rcx,[rsi+0x1c]
   140007bba:	xor    edx,edx
   140007bbc:	mov    r8d,0x101
   140007bc2:	call   0x140006b00
   140007bc7:	mov    DWORD PTR [rsi+0x4],edi
   140007bca:	mov    DWORD PTR [rsi+0xc],ebx
   140007bcd:	cmp    DWORD PTR [rsp+0x20],r12d
   140007bd2:	jbe    0x140007c64
   140007bd8:	lea    rax,[rsp+0x26]
   140007bdd:	cmp    BYTE PTR [rsp+0x26],bl
   140007be1:	je     0x140007c10
   140007be3:	cmp    BYTE PTR [rax+0x1],bl
   140007be6:	je     0x140007c10
   140007be8:	movzx  edi,BYTE PTR [rax]
   140007beb:	movzx  ecx,BYTE PTR [rax+0x1]
   140007bef:	cmp    edi,ecx
   140007bf1:	ja     0x140007c08
   140007bf3:	sub    ecx,edi
   140007bf5:	lea    rdx,[rdi+rsi*1+0x1d]
   140007bfa:	add    ecx,r12d
   140007bfd:	or     BYTE PTR [rdx],0x4
   140007c00:	add    rdx,r12
   140007c03:	sub    rcx,r12
   140007c06:	jne    0x140007bfd
   140007c08:	add    rax,0x2
   140007c0c:	cmp    BYTE PTR [rax],bl
   140007c0e:	jne    0x140007be3
   140007c10:	lea    rax,[rsi+0x1e]
   140007c14:	mov    ecx,0xfe
   140007c19:	or     BYTE PTR [rax],0x8
   140007c1c:	add    rax,r12
   140007c1f:	sub    rcx,r12
   140007c22:	jne    0x140007c19
   140007c24:	mov    ecx,DWORD PTR [rsi+0x4]
   140007c27:	sub    ecx,0x3a4
   140007c2d:	je     0x140007c56
   140007c2f:	sub    ecx,0x4
   140007c32:	je     0x140007c4f
   140007c34:	sub    ecx,0xd
   140007c37:	je     0x140007c48
   140007c39:	dec    ecx
   140007c3b:	je     0x140007c41
   140007c3d:	mov    eax,ebx
   140007c3f:	jmp    0x140007c5b
   140007c41:	mov    eax,0x404
   140007c46:	jmp    0x140007c5b
   140007c48:	mov    eax,0x412
   140007c4d:	jmp    0x140007c5b
   140007c4f:	mov    eax,0x804
   140007c54:	jmp    0x140007c5b
   140007c56:	mov    eax,0x411
   140007c5b:	mov    DWORD PTR [rsi+0xc],eax
   140007c5e:	mov    DWORD PTR [rsi+0x8],r12d
   140007c62:	jmp    0x140007c67
   140007c64:	mov    DWORD PTR [rsi+0x8],ebx
   140007c67:	lea    rdi,[rsi+0x10]
   140007c6b:	movzx  eax,bx
   140007c6e:	mov    ecx,0x6
   140007c73:	rep stos WORD PTR es:[rdi],ax
   140007c76:	jmp    0x140007d5a
   140007c7b:	cmp    DWORD PTR [rip+0xf537],ebx        # 0x1400171b8
   140007c81:	jne    0x140007b3f
   140007c87:	or     eax,0xffffffff
   140007c8a:	jmp    0x140007d64
   140007c8f:	lea    rcx,[rsi+0x1c]
   140007c93:	xor    edx,edx
   140007c95:	mov    r8d,0x101
   140007c9b:	call   0x140006b00
   140007ca0:	lea    r10,[rbp+rbp*2+0x0]
   140007ca5:	lea    r11,[rip+0xd9cc]        # 0x140015678
   140007cac:	shl    r10,0x4
   140007cb0:	mov    ebp,0x4
   140007cb5:	lea    r8,[r10+r13*1+0x10]
   140007cba:	mov    rcx,r8
   140007cbd:	cmp    BYTE PTR [r8],bl
   140007cc0:	je     0x140007cf3
   140007cc2:	cmp    BYTE PTR [rcx+0x1],bl
   140007cc5:	je     0x140007cf3
   140007cc7:	movzx  edx,BYTE PTR [rcx]
   140007cca:	movzx  eax,BYTE PTR [rcx+0x1]
   140007cce:	cmp    edx,eax
   140007cd0:	ja     0x140007ceb
   140007cd2:	lea    r9,[rdx+rsi*1+0x1d]
   140007cd7:	mov    al,BYTE PTR [r11]
   140007cda:	add    edx,r12d
   140007cdd:	or     BYTE PTR [r9],al
   140007ce0:	movzx  eax,BYTE PTR [rcx+0x1]
   140007ce4:	add    r9,r12
   140007ce7:	cmp    edx,eax
   140007ce9:	jbe    0x140007cd7
   140007ceb:	add    rcx,0x2
   140007cef:	cmp    BYTE PTR [rcx],bl
   140007cf1:	jne    0x140007cc2
   140007cf3:	add    r8,0x8
   140007cf7:	add    r11,r12
   140007cfa:	sub    rbp,r12
   140007cfd:	jne    0x140007cba
   140007cff:	mov    DWORD PTR [rsi+0x4],edi
   140007d02:	sub    edi,0x3a4
   140007d08:	mov    DWORD PTR [rsi+0x8],r12d
   140007d0c:	je     0x140007d31
   140007d0e:	sub    edi,0x4
   140007d11:	je     0x140007d2a
   140007d13:	sub    edi,0xd
   140007d16:	je     0x140007d23
   140007d18:	dec    edi
   140007d1a:	jne    0x140007d36
   140007d1c:	mov    ebx,0x404
   140007d21:	jmp    0x140007d36
   140007d23:	mov    ebx,0x412
   140007d28:	jmp    0x140007d36
   140007d2a:	mov    ebx,0x804
   140007d2f:	jmp    0x140007d36
   140007d31:	mov    ebx,0x411
   140007d36:	sub    r10,rsi
   140007d39:	mov    DWORD PTR [rsi+0xc],ebx
   140007d3c:	lea    rcx,[rsi+0x10]
   140007d40:	lea    rdi,[r10+r13*1-0xc]
   140007d45:	mov    edx,0x6
   140007d4a:	movzx  eax,WORD PTR [rdi+rcx*1]
   140007d4e:	mov    WORD PTR [rcx],ax
   140007d51:	add    rcx,0x2
   140007d55:	sub    rdx,r12
   140007d58:	jne    0x140007d4a
   140007d5a:	mov    rcx,rsi
   140007d5d:	call   0x1400077c0
   140007d62:	xor    eax,eax
   140007d64:	mov    rcx,QWORD PTR [rsp+0x38]
   140007d69:	xor    rcx,rsp
   140007d6c:	call   0x140003c50
   140007d71:	mov    rbx,QWORD PTR [rsp+0x80]
   140007d79:	add    rsp,0x40
   140007d7d:	pop    r13
   140007d7f:	pop    r12
   140007d81:	pop    rdi
   140007d82:	pop    rsi
   140007d83:	pop    rbp
   140007d84:	ret    
   140007d85:	int3   
   140007d86:	int3   
   140007d87:	int3   
   140007d88:	int3   
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	mov    rax,rsp
   140007d8f:	mov    QWORD PTR [rax+0x8],rbx
   140007d93:	mov    QWORD PTR [rax+0x10],rsi
   140007d97:	mov    QWORD PTR [rax+0x18],rdi
   140007d9b:	mov    QWORD PTR [rax+0x20],r12
   140007d9f:	push   r13
   140007da1:	sub    rsp,0x30
   140007da5:	mov    edi,ecx
   140007da7:	or     r13d,0xffffffff
   140007dab:	call   0x1400055c4
   140007db0:	mov    rsi,rax
   140007db3:	call   0x1400079b8
   140007db8:	mov    rbx,QWORD PTR [rsi+0xb8]
   140007dbf:	mov    ecx,edi
   140007dc1:	call   0x140007a78
   140007dc6:	mov    r12d,eax
   140007dc9:	cmp    eax,DWORD PTR [rbx+0x4]
   140007dcc:	je     0x140007f47
   140007dd2:	mov    ecx,0x220
   140007dd7:	call   0x140009298
   140007ddc:	mov    rbx,rax
   140007ddf:	xor    edi,edi
   140007de1:	test   rax,rax
   140007de4:	je     0x140007f4c
   140007dea:	mov    rdx,QWORD PTR [rsi+0xb8]
   140007df1:	mov    rcx,rax
   140007df4:	mov    r8d,0x220
   140007dfa:	call   0x140006c00
   140007dff:	mov    DWORD PTR [rbx],edi
   140007e01:	mov    rdx,rbx
   140007e04:	mov    ecx,r12d
   140007e07:	call   0x140007b10
   140007e0c:	mov    r13d,eax
   140007e0f:	test   eax,eax
   140007e11:	jne    0x140007f21
   140007e17:	mov    rcx,QWORD PTR [rsi+0xb8]
   140007e1e:	lea    r12,[rip+0xd41b]        # 0x140015240
   140007e25:	lock dec DWORD PTR [rcx]
   140007e28:	jne    0x140007e3b
   140007e2a:	mov    rcx,QWORD PTR [rsi+0xb8]
   140007e31:	cmp    rcx,r12
   140007e34:	je     0x140007e3b
   140007e36:	call   0x1400058cc
   140007e3b:	mov    QWORD PTR [rsi+0xb8],rbx
   140007e42:	lock inc DWORD PTR [rbx]
   140007e45:	test   BYTE PTR [rsi+0xc8],0x2
   140007e4c:	jne    0x140007f4c
   140007e52:	test   BYTE PTR [rip+0xd917],0x1        # 0x140015770
   140007e59:	jne    0x140007f4c
   140007e5f:	mov    esi,0xd
   140007e64:	mov    ecx,esi
   140007e66:	call   0x1400086bc
   140007e6b:	nop
   140007e6c:	mov    eax,DWORD PTR [rbx+0x4]
   140007e6f:	mov    DWORD PTR [rip+0xf357],eax        # 0x1400171cc
   140007e75:	mov    eax,DWORD PTR [rbx+0x8]
   140007e78:	mov    DWORD PTR [rip+0xf352],eax        # 0x1400171d0
   140007e7e:	mov    eax,DWORD PTR [rbx+0xc]
   140007e81:	mov    DWORD PTR [rip+0xf34d],eax        # 0x1400171d4
   140007e87:	mov    edx,edi
   140007e89:	lea    r8,[rip+0xffffffffffff8170]        # 0x140000000
   140007e90:	mov    DWORD PTR [rsp+0x20],edx
   140007e94:	cmp    edx,0x5
   140007e97:	jge    0x140007eae
   140007e99:	movsxd rcx,edx
   140007e9c:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140007ea1:	mov    WORD PTR [r8+rcx*2+0x171c0],ax
   140007eaa:	inc    edx
   140007eac:	jmp    0x140007e90
   140007eae:	mov    edx,edi
   140007eb0:	mov    DWORD PTR [rsp+0x20],edx
   140007eb4:	cmp    edx,0x101
   140007eba:	jge    0x140007ecf
   140007ebc:	movsxd rcx,edx
   140007ebf:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140007ec3:	mov    BYTE PTR [rcx+r8*1+0x15460],al
   140007ecb:	inc    edx
   140007ecd:	jmp    0x140007eb0
   140007ecf:	mov    DWORD PTR [rsp+0x20],edi
   140007ed3:	cmp    edi,0x100
   140007ed9:	jge    0x140007ef1
   140007edb:	movsxd rcx,edi
   140007ede:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140007ee5:	mov    BYTE PTR [rcx+r8*1+0x15570],al
   140007eed:	inc    edi
   140007eef:	jmp    0x140007ecf
   140007ef1:	mov    rax,QWORD PTR [rip+0xd778]        # 0x140015670
   140007ef8:	lock dec DWORD PTR [rax]
   140007efb:	jne    0x140007f0e
   140007efd:	mov    rcx,QWORD PTR [rip+0xd76c]        # 0x140015670
   140007f04:	cmp    rcx,r12
   140007f07:	je     0x140007f0e
   140007f09:	call   0x1400058cc
   140007f0e:	mov    QWORD PTR [rip+0xd75b],rbx        # 0x140015670
   140007f15:	lock inc DWORD PTR [rbx]
   140007f18:	mov    ecx,esi
   140007f1a:	call   0x1400085b0
   140007f1f:	jmp    0x140007f4c
   140007f21:	cmp    eax,0xffffffff
   140007f24:	jne    0x140007f4c
   140007f26:	lea    r12,[rip+0xd313]        # 0x140015240
   140007f2d:	cmp    rbx,r12
   140007f30:	je     0x140007f3a
   140007f32:	mov    rcx,rbx
   140007f35:	call   0x1400058cc
   140007f3a:	call   0x140006a54
   140007f3f:	mov    DWORD PTR [rax],0x16
   140007f45:	jmp    0x140007f4c
   140007f47:	xor    edi,edi
   140007f49:	mov    r13d,edi
   140007f4c:	mov    eax,r13d
   140007f4f:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f54:	mov    rsi,QWORD PTR [rsp+0x48]
   140007f59:	mov    rdi,QWORD PTR [rsp+0x50]
   140007f5e:	mov    r12,QWORD PTR [rsp+0x58]
   140007f63:	add    rsp,0x30
   140007f67:	pop    r13
   140007f69:	ret    
   140007f6a:	int3   
   140007f6b:	int3   
   140007f6c:	int3   
   140007f6d:	int3   
   140007f6e:	int3   
   140007f6f:	int3   
   140007f70:	sub    rsp,0x28
   140007f74:	cmp    DWORD PTR [rip+0x10a3d],0x0        # 0x1400189b8
   140007f7b:	jne    0x140007f91
   140007f7d:	mov    ecx,0xfffffffd
   140007f82:	call   0x140007d8c
   140007f87:	mov    DWORD PTR [rip+0x10a27],0x1        # 0x1400189b8
   140007f91:	xor    eax,eax
   140007f93:	add    rsp,0x28
   140007f97:	ret    
   140007f98:	int3   
   140007f99:	int3   
   140007f9a:	int3   
   140007f9b:	int3   
   140007f9c:	int3   
   140007f9d:	int3   
   140007f9e:	int3   
   140007f9f:	int3   
   140007fa0:	lock inc DWORD PTR [rcx]
   140007fa3:	mov    rax,QWORD PTR [rcx+0x110]
   140007faa:	test   rax,rax
   140007fad:	je     0x140007fb2
   140007faf:	lock inc DWORD PTR [rax]
   140007fb2:	mov    rax,QWORD PTR [rcx+0x120]
   140007fb9:	test   rax,rax
   140007fbc:	je     0x140007fc1
   140007fbe:	lock inc DWORD PTR [rax]
   140007fc1:	mov    rax,QWORD PTR [rcx+0x118]
   140007fc8:	test   rax,rax
   140007fcb:	je     0x140007fd0
   140007fcd:	lock inc DWORD PTR [rax]
   140007fd0:	mov    rax,QWORD PTR [rcx+0x130]
   140007fd7:	test   rax,rax
   140007fda:	je     0x140007fdf
   140007fdc:	lock inc DWORD PTR [rax]
   140007fdf:	lea    rax,[rcx+0x58]
   140007fe3:	mov    r8d,0x6
   140007fe9:	lea    rdx,[rip+0xd784]        # 0x140015774
   140007ff0:	cmp    QWORD PTR [rax-0x10],rdx
   140007ff4:	je     0x140008001
   140007ff6:	mov    rdx,QWORD PTR [rax]
   140007ff9:	test   rdx,rdx
   140007ffc:	je     0x140008001
   140007ffe:	lock inc DWORD PTR [rdx]
   140008001:	cmp    QWORD PTR [rax-0x8],0x0
   140008006:	je     0x140008014
   140008008:	mov    rdx,QWORD PTR [rax+0x8]
   14000800c:	test   rdx,rdx
   14000800f:	je     0x140008014
   140008011:	lock inc DWORD PTR [rdx]
   140008014:	add    rax,0x20
   140008018:	dec    r8
   14000801b:	jne    0x140007fe9
   14000801d:	mov    rax,QWORD PTR [rcx+0x158]
   140008024:	lock inc DWORD PTR [rax+0x160]
   14000802b:	ret    
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	int3   
   140008031:	int3   
   140008032:	int3   
   140008033:	int3   
   140008034:	test   rcx,rcx
   140008037:	je     0x1400080d4
   14000803d:	or     r9d,0xffffffff
   140008041:	lock add DWORD PTR [rcx],r9d
   140008045:	mov    rax,QWORD PTR [rcx+0x110]
   14000804c:	test   rax,rax
   14000804f:	je     0x140008055
   140008051:	lock add DWORD PTR [rax],r9d
   140008055:	mov    rax,QWORD PTR [rcx+0x120]
   14000805c:	test   rax,rax
   14000805f:	je     0x140008065
   140008061:	lock add DWORD PTR [rax],r9d
   140008065:	mov    rax,QWORD PTR [rcx+0x118]
   14000806c:	test   rax,rax
   14000806f:	je     0x140008075
   140008071:	lock add DWORD PTR [rax],r9d
   140008075:	mov    rax,QWORD PTR [rcx+0x130]
   14000807c:	test   rax,rax
   14000807f:	je     0x140008085
   140008081:	lock add DWORD PTR [rax],r9d
   140008085:	lea    rax,[rcx+0x58]
   140008089:	mov    r8d,0x6
   14000808f:	lea    rdx,[rip+0xd6de]        # 0x140015774
   140008096:	cmp    QWORD PTR [rax-0x10],rdx
   14000809a:	je     0x1400080a8
   14000809c:	mov    rdx,QWORD PTR [rax]
   14000809f:	test   rdx,rdx
   1400080a2:	je     0x1400080a8
   1400080a4:	lock add DWORD PTR [rdx],r9d
   1400080a8:	cmp    QWORD PTR [rax-0x8],0x0
   1400080ad:	je     0x1400080bc
   1400080af:	mov    rdx,QWORD PTR [rax+0x8]
   1400080b3:	test   rdx,rdx
   1400080b6:	je     0x1400080bc
   1400080b8:	lock add DWORD PTR [rdx],r9d
   1400080bc:	add    rax,0x20
   1400080c0:	dec    r8
   1400080c3:	jne    0x14000808f
   1400080c5:	mov    rax,QWORD PTR [rcx+0x158]
   1400080cc:	lock add DWORD PTR [rax+0x160],r9d
   1400080d4:	mov    rax,rcx
   1400080d7:	ret    
   1400080d8:	int3   
   1400080d9:	int3   
   1400080da:	int3   
   1400080db:	int3   
   1400080dc:	int3   
   1400080dd:	int3   
   1400080de:	int3   
   1400080df:	int3   
   1400080e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400080ea:	push   rdi
   1400080eb:	sub    rsp,0x20
   1400080ef:	mov    rax,QWORD PTR [rcx+0x128]
   1400080f6:	mov    rbx,rcx
   1400080f9:	test   rax,rax
   1400080fc:	je     0x140008177
   1400080fe:	lea    rcx,[rip+0xe16b]        # 0x140016270
   140008105:	cmp    rax,rcx
   140008108:	je     0x140008177
   14000810a:	mov    rax,QWORD PTR [rbx+0x110]
   140008111:	test   rax,rax
   140008114:	je     0x140008177
   140008116:	cmp    DWORD PTR [rax],0x0
   140008119:	jne    0x140008177
   14000811b:	mov    rcx,QWORD PTR [rbx+0x120]
   140008122:	test   rcx,rcx
   140008125:	je     0x14000813d
   140008127:	cmp    DWORD PTR [rcx],0x0
   14000812a:	jne    0x14000813d
   14000812c:	call   0x1400058cc
   140008131:	mov    rcx,QWORD PTR [rbx+0x128]
   140008138:	call   0x14000c804
   14000813d:	mov    rcx,QWORD PTR [rbx+0x118]
   140008144:	test   rcx,rcx
   140008147:	je     0x14000815f
   140008149:	cmp    DWORD PTR [rcx],0x0
   14000814c:	jne    0x14000815f
   14000814e:	call   0x1400058cc
   140008153:	mov    rcx,QWORD PTR [rbx+0x128]
   14000815a:	call   0x14000c790
   14000815f:	mov    rcx,QWORD PTR [rbx+0x110]
   140008166:	call   0x1400058cc
   14000816b:	mov    rcx,QWORD PTR [rbx+0x128]
   140008172:	call   0x1400058cc
   140008177:	mov    rax,QWORD PTR [rbx+0x130]
   14000817e:	test   rax,rax
   140008181:	je     0x1400081ca
   140008183:	cmp    DWORD PTR [rax],0x0
   140008186:	jne    0x1400081ca
   140008188:	mov    rcx,QWORD PTR [rbx+0x138]
   14000818f:	sub    rcx,0xfe
   140008196:	call   0x1400058cc
   14000819b:	mov    rcx,QWORD PTR [rbx+0x148]
   1400081a2:	mov    edi,0x80
   1400081a7:	sub    rcx,rdi
   1400081aa:	call   0x1400058cc
   1400081af:	mov    rcx,QWORD PTR [rbx+0x150]
   1400081b6:	sub    rcx,rdi
   1400081b9:	call   0x1400058cc
   1400081be:	mov    rcx,QWORD PTR [rbx+0x130]
   1400081c5:	call   0x1400058cc
   1400081ca:	mov    rcx,QWORD PTR [rbx+0x158]
   1400081d1:	lea    rax,[rip+0xd5a8]        # 0x140015780
   1400081d8:	cmp    rcx,rax
   1400081db:	je     0x1400081f7
   1400081dd:	cmp    DWORD PTR [rcx+0x160],0x0
   1400081e4:	jne    0x1400081f7
   1400081e6:	call   0x14000c39c
   1400081eb:	mov    rcx,QWORD PTR [rbx+0x158]
   1400081f2:	call   0x1400058cc
   1400081f7:	lea    rdi,[rbx+0x58]
   1400081fb:	mov    esi,0x6
   140008200:	lea    rax,[rip+0xd56d]        # 0x140015774
   140008207:	cmp    QWORD PTR [rdi-0x10],rax
   14000820b:	je     0x14000821f
   14000820d:	mov    rcx,QWORD PTR [rdi]
   140008210:	test   rcx,rcx
   140008213:	je     0x14000821f
   140008215:	cmp    DWORD PTR [rcx],0x0
   140008218:	jne    0x14000821f
   14000821a:	call   0x1400058cc
   14000821f:	cmp    QWORD PTR [rdi-0x8],0x0
   140008224:	je     0x140008239
   140008226:	mov    rcx,QWORD PTR [rdi+0x8]
   14000822a:	test   rcx,rcx
   14000822d:	je     0x140008239
   14000822f:	cmp    DWORD PTR [rcx],0x0
   140008232:	jne    0x140008239
   140008234:	call   0x1400058cc
   140008239:	add    rdi,0x20
   14000823d:	dec    rsi
   140008240:	jne    0x140008200
   140008242:	mov    rcx,rbx
   140008245:	mov    rbx,QWORD PTR [rsp+0x30]
   14000824a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000824f:	add    rsp,0x20
   140008253:	pop    rdi
   140008254:	jmp    0x1400058cc
   140008259:	int3   
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	rex push rbx
   140008262:	sub    rsp,0x20
   140008266:	mov    rbx,rdx
   140008269:	test   rdx,rdx
   14000826c:	je     0x1400082af
   14000826e:	test   rcx,rcx
   140008271:	je     0x1400082af
   140008273:	mov    r10,QWORD PTR [rcx]
   140008276:	cmp    r10,rdx
   140008279:	je     0x1400082aa
   14000827b:	mov    QWORD PTR [rcx],rdx
   14000827e:	mov    rcx,rdx
   140008281:	call   0x140007fa0
   140008286:	test   r10,r10
   140008289:	je     0x1400082aa
   14000828b:	mov    rcx,r10
   14000828e:	call   0x140008034
   140008293:	cmp    DWORD PTR [r10],0x0
   140008297:	jne    0x1400082aa
   140008299:	lea    rax,[rip+0xd7a0]        # 0x140015a40
   1400082a0:	cmp    r10,rax
   1400082a3:	je     0x1400082aa
   1400082a5:	call   0x1400080e0
   1400082aa:	mov    rax,rbx
   1400082ad:	jmp    0x1400082b1
   1400082af:	xor    eax,eax
   1400082b1:	add    rsp,0x20
   1400082b5:	pop    rbx
   1400082b6:	ret    
   1400082b7:	int3   
   1400082b8:	int3   
   1400082b9:	int3   
   1400082ba:	int3   
   1400082bb:	int3   
   1400082bc:	int3   
   1400082bd:	int3   
   1400082be:	int3   
   1400082bf:	int3   
   1400082c0:	rex push rbx
   1400082c2:	sub    rsp,0x20
   1400082c6:	call   0x1400055c4
   1400082cb:	mov    rbx,rax
   1400082ce:	mov    ecx,DWORD PTR [rax+0xc8]
   1400082d4:	test   DWORD PTR [rip+0xd496],ecx        # 0x140015770
   1400082da:	je     0x1400082f4
   1400082dc:	cmp    QWORD PTR [rax+0xc0],0x0
   1400082e4:	je     0x1400082f4
   1400082e6:	call   0x1400055c4
   1400082eb:	mov    rbx,QWORD PTR [rax+0xc0]
   1400082f2:	jmp    0x14000831f
   1400082f4:	mov    ecx,0xc
   1400082f9:	call   0x1400086bc
   1400082fe:	nop
   1400082ff:	lea    rcx,[rbx+0xc0]
   140008306:	mov    rdx,QWORD PTR [rip+0xd893]        # 0x140015ba0
   14000830d:	call   0x140008260
   140008312:	mov    rbx,rax
   140008315:	mov    ecx,0xc
   14000831a:	call   0x1400085b0
   14000831f:	test   rbx,rbx
   140008322:	jne    0x14000832c
   140008324:	lea    ecx,[rbx+0x20]
   140008327:	call   0x1400045a0
   14000832c:	mov    rax,rbx
   14000832f:	add    rsp,0x20
   140008333:	pop    rbx
   140008334:	ret    
   140008335:	int3   
   140008336:	int3   
   140008337:	int3   
   140008338:	int3   
   140008339:	int3   
   14000833a:	int3   
   14000833b:	int3   
   14000833c:	mov    QWORD PTR [rsp+0x10],rbx
   140008341:	mov    WORD PTR [rsp+0x8],cx
   140008346:	push   rbp
   140008347:	mov    rbp,rsp
   14000834a:	sub    rsp,0x50
   14000834e:	mov    eax,0xffff
   140008353:	cmp    cx,ax
   140008356:	je     0x140008406
   14000835c:	lea    rcx,[rbp-0x20]
   140008360:	call   0x140003f18
   140008365:	mov    rbx,QWORD PTR [rbp-0x20]
   140008369:	cmp    DWORD PTR [rbx+0x14],0x0
   14000836d:	jne    0x140008396
   14000836f:	movzx  edx,WORD PTR [rbp+0x10]
   140008373:	lea    eax,[rdx-0x41]
   140008376:	cmp    ax,0x19
   14000837a:	ja     0x140008380
   14000837c:	add    dx,0x20
   140008380:	cmp    BYTE PTR [rbp-0x8],0x0
   140008384:	je     0x140008391
   140008386:	mov    rcx,QWORD PTR [rbp-0x10]
   14000838a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008391:	movzx  eax,dx
   140008394:	jmp    0x140008406
   140008396:	movzx  ecx,WORD PTR [rbp+0x10]
   14000839a:	mov    edx,0x100
   14000839f:	cmp    cx,dx
   1400083a2:	jae    0x1400083c9
   1400083a4:	mov    edx,0x1
   1400083a9:	call   0x14000c978
   1400083ae:	test   eax,eax
   1400083b0:	jne    0x1400083b8
   1400083b2:	movzx  eax,WORD PTR [rbp+0x10]
   1400083b6:	jmp    0x1400083f5
   1400083b8:	movzx  ecx,WORD PTR [rbp+0x10]
   1400083bc:	mov    rax,QWORD PTR [rbx+0x148]
   1400083c3:	movzx  eax,BYTE PTR [rax+rcx*1]
   1400083c7:	jmp    0x1400083f5
   1400083c9:	mov    ecx,DWORD PTR [rbx+0x14]
   1400083cc:	lea    rax,[rbp+0x20]
   1400083d0:	mov    r9d,0x1
   1400083d6:	mov    DWORD PTR [rsp+0x28],r9d
   1400083db:	lea    r8,[rbp+0x10]
   1400083df:	mov    QWORD PTR [rsp+0x20],rax
   1400083e4:	call   0x14000c914
   1400083e9:	test   eax,eax
   1400083eb:	movzx  eax,WORD PTR [rbp+0x10]
   1400083ef:	je     0x1400083f5
   1400083f1:	movzx  eax,WORD PTR [rbp+0x20]
   1400083f5:	cmp    BYTE PTR [rbp-0x8],0x0
   1400083f9:	je     0x140008406
   1400083fb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400083ff:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008406:	mov    rbx,QWORD PTR [rsp+0x68]
   14000840b:	add    rsp,0x50
   14000840f:	pop    rbp
   140008410:	ret    
   140008411:	int3   
   140008412:	int3   
   140008413:	int3   
   140008414:	int3   
   140008415:	int3   
   140008416:	int3   
   140008417:	int3   
   140008418:	sub    rsp,0x28
   14000841c:	call   0x1400055c4
   140008421:	mov    rcx,QWORD PTR [rax+0xd0]
   140008428:	test   rcx,rcx
   14000842b:	je     0x140008431
   14000842d:	call   rcx
   14000842f:	jmp    0x140008431
   140008431:	call   0x14000ccbc
   140008436:	add    rsp,0x28
   14000843a:	ret    
   14000843b:	int3   
   14000843c:	int3   
   14000843d:	int3   
   14000843e:	int3   
   14000843f:	int3   
   140008440:	int3   
   140008441:	int3   
   140008442:	int3   
   140008443:	int3   
   140008444:	sub    rsp,0x28
   140008448:	mov    rcx,QWORD PTR [rip+0xed91]        # 0x1400171e0
   14000844f:	call   QWORD PTR [rip+0x7cc3]        # 0x140010118
   140008455:	test   rax,rax
   140008458:	je     0x14000845e
   14000845a:	call   rax
   14000845c:	jmp    0x14000845e
   14000845e:	call   0x140008418
   140008463:	int3   
   140008464:	add    rsp,0x28
   140008468:	ret    
   140008469:	int3   
   14000846a:	int3   
   14000846b:	int3   
   14000846c:	int3   
   14000846d:	int3   
   14000846e:	int3   
   14000846f:	int3   
   140008470:	sub    rsp,0x28
   140008474:	lea    rcx,[rip+0xffffffffffffff9d]        # 0x140008418
   14000847b:	call   QWORD PTR [rip+0x7cef]        # 0x140010170
   140008481:	mov    QWORD PTR [rip+0xed58],rax        # 0x1400171e0
   140008488:	add    rsp,0x28
   14000848c:	ret    
   14000848d:	int3   
   14000848e:	int3   
   14000848f:	int3   
   140008490:	int3   
   140008491:	int3   
   140008492:	int3   
   140008493:	int3   
   140008494:	mov    QWORD PTR [rsp+0x8],rbx
   140008499:	mov    QWORD PTR [rsp+0x10],rsi
   14000849e:	mov    QWORD PTR [rsp+0x18],rdi
   1400084a3:	push   r12
   1400084a5:	sub    rsp,0x20
   1400084a9:	lea    r12,[rip+0xd700]        # 0x140015bb0
   1400084b0:	xor    esi,esi
   1400084b2:	xor    ebx,ebx
   1400084b4:	mov    rdi,r12
   1400084b7:	cmp    DWORD PTR [rdi+0x8],0x1
   1400084bb:	jne    0x1400084e3
   1400084bd:	movsxd rax,esi
   1400084c0:	mov    edx,0xfa0
   1400084c5:	inc    esi
   1400084c7:	lea    rcx,[rax+rax*4]
   1400084cb:	lea    rax,[rip+0xed1e]        # 0x1400171f0
   1400084d2:	lea    rcx,[rax+rcx*8]
   1400084d6:	mov    QWORD PTR [rdi],rcx
   1400084d9:	call   QWORD PTR [rip+0x7c71]        # 0x140010150
   1400084df:	test   eax,eax
   1400084e1:	je     0x140008509
   1400084e3:	inc    ebx
   1400084e5:	add    rdi,0x10
   1400084e9:	cmp    ebx,0x24
   1400084ec:	jl     0x1400084b7
   1400084ee:	mov    eax,0x1
   1400084f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084f8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400084fd:	mov    rdi,QWORD PTR [rsp+0x40]
   140008502:	add    rsp,0x20
   140008506:	pop    r12
   140008508:	ret    
   140008509:	movsxd rax,ebx
   14000850c:	add    rax,rax
   14000850f:	and    QWORD PTR [r12+rax*8],0x0
   140008514:	xor    eax,eax
   140008516:	jmp    0x1400084f3
   140008518:	int3   
   140008519:	int3   
   14000851a:	int3   
   14000851b:	int3   
   14000851c:	int3   
   14000851d:	int3   
   14000851e:	int3   
   14000851f:	int3   
   140008520:	mov    QWORD PTR [rsp+0x8],rbx
   140008525:	mov    QWORD PTR [rsp+0x10],rbp
   14000852a:	mov    QWORD PTR [rsp+0x18],rsi
   14000852f:	push   rdi
   140008530:	sub    rsp,0x20
   140008534:	mov    edi,0x24
   140008539:	lea    rbx,[rip+0xd670]        # 0x140015bb0
   140008540:	mov    esi,edi
   140008542:	mov    rbp,QWORD PTR [rbx]
   140008545:	test   rbp,rbp
   140008548:	je     0x140008565
   14000854a:	cmp    DWORD PTR [rbx+0x8],0x1
   14000854e:	je     0x140008565
   140008550:	mov    rcx,rbp
   140008553:	call   QWORD PTR [rip+0x7c0f]        # 0x140010168
   140008559:	mov    rcx,rbp
   14000855c:	call   0x1400058cc
   140008561:	and    QWORD PTR [rbx],0x0
   140008565:	add    rbx,0x10
   140008569:	dec    rsi
   14000856c:	jne    0x140008542
   14000856e:	lea    rbx,[rip+0xd643]        # 0x140015bb8
   140008575:	mov    rcx,QWORD PTR [rbx-0x8]
   140008579:	test   rcx,rcx
   14000857c:	je     0x140008589
   14000857e:	cmp    DWORD PTR [rbx],0x1
   140008581:	jne    0x140008589
   140008583:	call   QWORD PTR [rip+0x7bdf]        # 0x140010168
   140008589:	add    rbx,0x10
   14000858d:	dec    rdi
   140008590:	jne    0x140008575
   140008592:	mov    rbx,QWORD PTR [rsp+0x30]
   140008597:	mov    rbp,QWORD PTR [rsp+0x38]
   14000859c:	mov    rsi,QWORD PTR [rsp+0x40]
   1400085a1:	add    rsp,0x20
   1400085a5:	pop    rdi
   1400085a6:	ret    
   1400085a7:	int3   
   1400085a8:	int3   
   1400085a9:	int3   
   1400085aa:	int3   
   1400085ab:	int3   
   1400085ac:	int3   
   1400085ad:	int3   
   1400085ae:	int3   
   1400085af:	int3   
   1400085b0:	movsxd rcx,ecx
   1400085b3:	lea    rax,[rip+0xd5f6]        # 0x140015bb0
   1400085ba:	add    rcx,rcx
   1400085bd:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400085c1:	rex.W jmp QWORD PTR [rip+0x7c78]        # 0x140010240
   1400085c8:	int3   
   1400085c9:	int3   
   1400085ca:	int3   
   1400085cb:	int3   
   1400085cc:	int3   
   1400085cd:	int3   
   1400085ce:	int3   
   1400085cf:	int3   
   1400085d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400085d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400085da:	mov    QWORD PTR [rsp+0x18],rdi
   1400085df:	push   r13
   1400085e1:	sub    rsp,0x20
   1400085e5:	movsxd rbx,ecx
   1400085e8:	mov    esi,0x1
   1400085ed:	cmp    QWORD PTR [rip+0xe61b],0x0        # 0x140016c10
   1400085f5:	jne    0x14000860e
   1400085f7:	call   0x140004860
   1400085fc:	lea    ecx,[rsi+0x1d]
   1400085ff:	call   0x1400045fc
   140008604:	mov    ecx,0xff
   140008609:	call   0x1400041fc
   14000860e:	mov    rdi,rbx
   140008611:	add    rdi,rdi
   140008614:	lea    r13,[rip+0xd595]        # 0x140015bb0
   14000861b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140008621:	je     0x140008627
   140008623:	mov    eax,esi
   140008625:	jmp    0x1400086a0
   140008627:	mov    ecx,0x28
   14000862c:	call   0x140009298
   140008631:	mov    rbx,rax
   140008634:	test   rax,rax
   140008637:	jne    0x140008648
   140008639:	call   0x140006a54
   14000863e:	mov    DWORD PTR [rax],0xc
   140008644:	xor    eax,eax
   140008646:	jmp    0x1400086a0
   140008648:	mov    ecx,0xa
   14000864d:	call   0x1400086bc
   140008652:	nop
   140008653:	mov    rcx,rbx
   140008656:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000865c:	jne    0x14000868b
   14000865e:	mov    edx,0xfa0
   140008663:	call   QWORD PTR [rip+0x7ae7]        # 0x140010150
   140008669:	test   eax,eax
   14000866b:	jne    0x140008684
   14000866d:	mov    rcx,rbx
   140008670:	call   0x1400058cc
   140008675:	call   0x140006a54
   14000867a:	mov    DWORD PTR [rax],0xc
   140008680:	xor    esi,esi
   140008682:	jmp    0x140008691
   140008684:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140008689:	jmp    0x140008691
   14000868b:	call   0x1400058cc
   140008690:	nop
   140008691:	mov    rcx,QWORD PTR [rip+0xd5b8]        # 0x140015c50
   140008698:	call   QWORD PTR [rip+0x7ba2]        # 0x140010240
   14000869e:	jmp    0x140008623
   1400086a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086a5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400086aa:	mov    rdi,QWORD PTR [rsp+0x40]
   1400086af:	add    rsp,0x20
   1400086b3:	pop    r13
   1400086b5:	ret    
   1400086b6:	int3   
   1400086b7:	int3   
   1400086b8:	int3   
   1400086b9:	int3   
   1400086ba:	int3   
   1400086bb:	int3   
   1400086bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400086c1:	push   rdi
   1400086c2:	sub    rsp,0x20
   1400086c6:	movsxd rbx,ecx
   1400086c9:	lea    rdi,[rip+0xd4e0]        # 0x140015bb0
   1400086d0:	add    rbx,rbx
   1400086d3:	cmp    QWORD PTR [rdi+rbx*8],0x0
   1400086d8:	jne    0x1400086eb
   1400086da:	call   0x1400085d0
   1400086df:	test   eax,eax
   1400086e1:	jne    0x1400086eb
   1400086e3:	lea    ecx,[rax+0x11]
   1400086e6:	call   0x1400045a0
   1400086eb:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400086ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086f4:	add    rsp,0x20
   1400086f8:	pop    rdi
   1400086f9:	rex.W jmp QWORD PTR [rip+0x7b48]        # 0x140010248
   140008700:	int3   
   140008701:	int3   
   140008702:	int3   
   140008703:	int3   
   140008704:	int3   
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	mov    QWORD PTR [rip+0xed11],rcx        # 0x140017420
   14000870f:	mov    QWORD PTR [rip+0xed12],rcx        # 0x140017428
   140008716:	mov    QWORD PTR [rip+0xed13],rcx        # 0x140017430
   14000871d:	mov    QWORD PTR [rip+0xed14],rcx        # 0x140017438
   140008724:	ret    
   140008725:	int3   
   140008726:	int3   
   140008727:	int3   
   140008728:	int3   
   140008729:	int3   
   14000872a:	int3   
   14000872b:	int3   
   14000872c:	mov    rcx,QWORD PTR [rip+0xecfd]        # 0x140017430
   140008733:	rex.W jmp QWORD PTR [rip+0x79de]        # 0x140010118
   14000873a:	int3   
   14000873b:	int3   
   14000873c:	int3   
   14000873d:	int3   
   14000873e:	int3   
   14000873f:	int3   
   140008740:	mov    QWORD PTR [rsp+0x10],rbx
   140008745:	mov    QWORD PTR [rsp+0x18],rsi
   14000874a:	push   rdi
   14000874b:	push   r12
   14000874d:	push   r13
   14000874f:	push   r14
   140008751:	push   r15
   140008753:	sub    rsp,0x30
   140008757:	mov    ebx,ecx
   140008759:	xor    edi,edi
   14000875b:	mov    DWORD PTR [rsp+0x60],edi
   14000875f:	xor    esi,esi
   140008761:	mov    edx,ecx
   140008763:	sub    edx,0x2
   140008766:	je     0x140008831
   14000876c:	sub    edx,0x2
   14000876f:	je     0x1400087d3
   140008771:	sub    edx,0x2
   140008774:	je     0x1400087c3
   140008776:	sub    edx,0x2
   140008779:	je     0x1400087d3
   14000877b:	sub    edx,0x3
   14000877e:	je     0x1400087d3
   140008780:	sub    edx,0x4
   140008783:	je     0x1400087b3
   140008785:	sub    edx,0x6
   140008788:	je     0x1400087a0
   14000878a:	dec    edx
   14000878c:	je     0x1400087c3
   14000878e:	call   0x140006a54
   140008793:	mov    DWORD PTR [rax],0x16
   140008799:	call   0x1400069e0
   14000879e:	jmp    0x1400087e0
   1400087a0:	lea    r12,[rip+0xec81]        # 0x140017428
   1400087a7:	mov    rcx,QWORD PTR [rip+0xec7a]        # 0x140017428
   1400087ae:	jmp    0x14000883f
   1400087b3:	lea    r12,[rip+0xec7e]        # 0x140017438
   1400087ba:	mov    rcx,QWORD PTR [rip+0xec77]        # 0x140017438
   1400087c1:	jmp    0x14000883f
   1400087c3:	lea    r12,[rip+0xec66]        # 0x140017430
   1400087ca:	mov    rcx,QWORD PTR [rip+0xec5f]        # 0x140017430
   1400087d1:	jmp    0x14000883f
   1400087d3:	call   0x140005538
   1400087d8:	mov    rsi,rax
   1400087db:	test   rax,rax
   1400087de:	jne    0x1400087e8
   1400087e0:	or     eax,0xffffffff
   1400087e3:	jmp    0x14000895a
   1400087e8:	mov    rdx,QWORD PTR [rax+0xa0]
   1400087ef:	mov    rcx,rdx
   1400087f2:	movsxd r8,DWORD PTR [rip+0x87a3]        # 0x140010f9c
   1400087f9:	cmp    DWORD PTR [rcx+0x4],ebx
   1400087fc:	je     0x140008811
   1400087fe:	add    rcx,0x10
   140008802:	mov    rax,r8
   140008805:	shl    rax,0x4
   140008809:	add    rax,rdx
   14000880c:	cmp    rcx,rax
   14000880f:	jb     0x1400087f9
   140008811:	mov    rax,r8
   140008814:	shl    rax,0x4
   140008818:	add    rax,rdx
   14000881b:	cmp    rcx,rax
   14000881e:	jae    0x140008825
   140008820:	cmp    DWORD PTR [rcx+0x4],ebx
   140008823:	je     0x140008827
   140008825:	xor    ecx,ecx
   140008827:	lea    r12,[rcx+0x8]
   14000882b:	mov    r13,QWORD PTR [r12]
   14000882f:	jmp    0x140008851
   140008831:	lea    r12,[rip+0xebe8]        # 0x140017420
   140008838:	mov    rcx,QWORD PTR [rip+0xebe1]        # 0x140017420
   14000883f:	mov    edi,0x1
   140008844:	mov    DWORD PTR [rsp+0x60],edi
   140008848:	call   QWORD PTR [rip+0x78ca]        # 0x140010118
   14000884e:	mov    r13,rax
   140008851:	cmp    r13,0x1
   140008855:	jne    0x14000885e
   140008857:	xor    eax,eax
   140008859:	jmp    0x14000895a
   14000885e:	test   r13,r13
   140008861:	jne    0x14000886d
   140008863:	lea    ecx,[r13+0x3]
   140008867:	call   0x140004560
   14000886c:	int3   
   14000886d:	test   edi,edi
   14000886f:	je     0x140008879
   140008871:	xor    ecx,ecx
   140008873:	call   0x1400086bc
   140008878:	nop
   140008879:	cmp    ebx,0x8
   14000887c:	je     0x14000888f
   14000887e:	cmp    ebx,0xb
   140008881:	je     0x14000888f
   140008883:	cmp    ebx,0x4
   140008886:	je     0x14000888f
   140008888:	mov    r15,QWORD PTR [rsp+0x28]
   14000888d:	jmp    0x1400088bb
   14000888f:	mov    r15,QWORD PTR [rsi+0xa8]
   140008896:	mov    QWORD PTR [rsp+0x28],r15
   14000889b:	and    QWORD PTR [rsi+0xa8],0x0
   1400088a3:	cmp    ebx,0x8
   1400088a6:	jne    0x1400088bb
   1400088a8:	mov    r14d,DWORD PTR [rsi+0xb0]
   1400088af:	mov    DWORD PTR [rsi+0xb0],0x8c
   1400088b9:	jmp    0x1400088c0
   1400088bb:	mov    r14d,DWORD PTR [rsp+0x60]
   1400088c0:	cmp    ebx,0x8
   1400088c3:	jne    0x1400088fe
   1400088c5:	mov    ecx,DWORD PTR [rip+0x86c5]        # 0x140010f90
   1400088cb:	mov    edx,ecx
   1400088cd:	mov    DWORD PTR [rsp+0x20],ecx
   1400088d1:	mov    eax,DWORD PTR [rip+0x86bd]        # 0x140010f94
   1400088d7:	add    ecx,eax
   1400088d9:	cmp    edx,ecx
   1400088db:	jge    0x140008907
   1400088dd:	movsxd rcx,edx
   1400088e0:	add    rcx,rcx
   1400088e3:	mov    rax,QWORD PTR [rsi+0xa0]
   1400088ea:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   1400088f0:	inc    edx
   1400088f2:	mov    DWORD PTR [rsp+0x20],edx
   1400088f6:	mov    ecx,DWORD PTR [rip+0x8694]        # 0x140010f90
   1400088fc:	jmp    0x1400088d1
   1400088fe:	call   0x140005440
   140008903:	mov    QWORD PTR [r12],rax
   140008907:	test   edi,edi
   140008909:	je     0x140008912
   14000890b:	xor    ecx,ecx
   14000890d:	call   0x1400085b0
   140008912:	mov    edi,0x8
   140008917:	cmp    ebx,edi
   140008919:	jne    0x140008928
   14000891b:	mov    edx,DWORD PTR [rsi+0xb0]
   140008921:	mov    ecx,edi
   140008923:	call   r13
   140008926:	jmp    0x14000892d
   140008928:	mov    ecx,ebx
   14000892a:	call   r13
   14000892d:	cmp    ebx,edi
   14000892f:	je     0x14000893f
   140008931:	cmp    ebx,0xb
   140008934:	je     0x14000893f
   140008936:	cmp    ebx,0x4
   140008939:	jne    0x140008857
   14000893f:	mov    QWORD PTR [rsi+0xa8],r15
   140008946:	cmp    ebx,edi
   140008948:	jne    0x140008857
   14000894e:	mov    DWORD PTR [rsi+0xb0],r14d
   140008955:	jmp    0x140008857
   14000895a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000895f:	mov    rsi,QWORD PTR [rsp+0x70]
   140008964:	add    rsp,0x30
   140008968:	pop    r15
   14000896a:	pop    r14
   14000896c:	pop    r13
   14000896e:	pop    r12
   140008970:	pop    rdi
   140008971:	ret    
   140008972:	int3   
   140008973:	int3   
   140008974:	int3   
   140008975:	int3   
   140008976:	int3   
   140008977:	int3   
   140008978:	mov    QWORD PTR [rip+0xeac9],rcx        # 0x140017448
   14000897f:	ret    
   140008980:	int3   
   140008981:	int3   
   140008982:	int3   
   140008983:	int3   
   140008984:	int3   
   140008985:	int3   
   140008986:	int3   
   140008987:	int3   
   140008988:	mov    QWORD PTR [rip+0xeac1],rcx        # 0x140017450
   14000898f:	ret    
   140008990:	int3   
   140008991:	int3   
   140008992:	int3   
   140008993:	int3   
   140008994:	int3   
   140008995:	int3   
   140008996:	int3   
   140008997:	int3   
   140008998:	mov    QWORD PTR [rip+0xeab9],rcx        # 0x140017458
   14000899f:	ret    
   1400089a0:	int3   
   1400089a1:	int3   
   1400089a2:	int3   
   1400089a3:	int3   
   1400089a4:	int3   
   1400089a5:	int3   
   1400089a6:	int3   
   1400089a7:	int3   
   1400089a8:	rex push rbx
   1400089aa:	sub    rsp,0x20
   1400089ae:	mov    rbx,rcx
   1400089b1:	mov    rcx,QWORD PTR [rip+0xeaa0]        # 0x140017458
   1400089b8:	call   QWORD PTR [rip+0x775a]        # 0x140010118
   1400089be:	test   rax,rax
   1400089c1:	je     0x1400089d3
   1400089c3:	mov    rcx,rbx
   1400089c6:	call   rax
   1400089c8:	test   eax,eax
   1400089ca:	je     0x1400089d3
   1400089cc:	mov    eax,0x1
   1400089d1:	jmp    0x1400089d5
   1400089d3:	xor    eax,eax
   1400089d5:	add    rsp,0x20
   1400089d9:	pop    rbx
   1400089da:	ret    
   1400089db:	int3   
   1400089dc:	int3   
   1400089dd:	int3   
   1400089de:	int3   
   1400089df:	int3   
   1400089e0:	int3   
   1400089e1:	int3   
   1400089e2:	int3   
   1400089e3:	int3   
   1400089e4:	rex push rbx
   1400089e6:	sub    rsp,0x20
   1400089ea:	mov    edx,0x8
   1400089ef:	lea    ecx,[rdx+0x18]
   1400089f2:	call   0x14000931c
   1400089f7:	mov    rcx,rax
   1400089fa:	mov    rbx,rax
   1400089fd:	call   QWORD PTR [rip+0x776d]        # 0x140010170
   140008a03:	mov    QWORD PTR [rip+0xffa6],rax        # 0x1400189b0
   140008a0a:	mov    QWORD PTR [rip+0xff97],rax        # 0x1400189a8
   140008a11:	test   rbx,rbx
   140008a14:	jne    0x140008a1b
   140008a16:	lea    eax,[rbx+0x18]
   140008a19:	jmp    0x140008a21
   140008a1b:	and    QWORD PTR [rbx],0x0
   140008a1f:	xor    eax,eax
   140008a21:	add    rsp,0x20
   140008a25:	pop    rbx
   140008a26:	ret    
   140008a27:	int3   
   140008a28:	int3   
   140008a29:	int3   
   140008a2a:	int3   
   140008a2b:	int3   
   140008a2c:	int3   
   140008a2d:	int3   
   140008a2e:	int3   
   140008a2f:	int3   
   140008a30:	mov    QWORD PTR [rsp+0x8],rbx
   140008a35:	mov    QWORD PTR [rsp+0x10],rsi
   140008a3a:	mov    QWORD PTR [rsp+0x18],rdi
   140008a3f:	push   r12
   140008a41:	push   r13
   140008a43:	push   r14
   140008a45:	sub    rsp,0x20
   140008a49:	mov    r14,rcx
   140008a4c:	call   0x140004218
   140008a51:	nop
   140008a52:	mov    rcx,QWORD PTR [rip+0xff57]        # 0x1400189b0
   140008a59:	call   QWORD PTR [rip+0x76b9]        # 0x140010118
   140008a5f:	mov    r12,rax
   140008a62:	mov    rcx,QWORD PTR [rip+0xff3f]        # 0x1400189a8
   140008a69:	call   QWORD PTR [rip+0x76a9]        # 0x140010118
   140008a6f:	mov    rbx,rax
   140008a72:	cmp    rax,r12
   140008a75:	jb     0x140008b16
   140008a7b:	mov    rdi,rax
   140008a7e:	sub    rdi,r12
   140008a81:	lea    r13,[rdi+0x8]
   140008a85:	cmp    r13,0x8
   140008a89:	jb     0x140008b16
   140008a8f:	mov    rcx,r12
   140008a92:	call   0x14000cd04
   140008a97:	mov    rsi,rax
   140008a9a:	cmp    rax,r13
   140008a9d:	jae    0x140008af4
   140008a9f:	mov    edx,0x1000
   140008aa4:	cmp    rax,rdx
   140008aa7:	cmovb  rdx,rax
   140008aab:	add    rdx,rax
   140008aae:	cmp    rdx,rax
   140008ab1:	jb     0x140008ac4
   140008ab3:	mov    rcx,r12
   140008ab6:	call   0x1400093a8
   140008abb:	xor    ebx,ebx
   140008abd:	test   rax,rax
   140008ac0:	jne    0x140008adc
   140008ac2:	jmp    0x140008ac6
   140008ac4:	xor    ebx,ebx
   140008ac6:	lea    rdx,[rsi+0x20]
   140008aca:	cmp    rdx,rsi
   140008acd:	jb     0x140008b18
   140008acf:	mov    rcx,r12
   140008ad2:	call   0x1400093a8
   140008ad7:	test   rax,rax
   140008ada:	je     0x140008b18
   140008adc:	sar    rdi,0x3
   140008ae0:	lea    rbx,[rax+rdi*8]
   140008ae4:	mov    rcx,rax
   140008ae7:	call   QWORD PTR [rip+0x7683]        # 0x140010170
   140008aed:	mov    QWORD PTR [rip+0xfebc],rax        # 0x1400189b0
   140008af4:	mov    rcx,r14
   140008af7:	call   QWORD PTR [rip+0x7673]        # 0x140010170
   140008afd:	mov    QWORD PTR [rbx],rax
   140008b00:	lea    rcx,[rbx+0x8]
   140008b04:	call   QWORD PTR [rip+0x7666]        # 0x140010170
   140008b0a:	mov    QWORD PTR [rip+0xfe97],rax        # 0x1400189a8
   140008b11:	mov    rbx,r14
   140008b14:	jmp    0x140008b18
   140008b16:	xor    ebx,ebx
   140008b18:	call   0x140004228
   140008b1d:	mov    rax,rbx
   140008b20:	mov    rbx,QWORD PTR [rsp+0x40]
   140008b25:	mov    rsi,QWORD PTR [rsp+0x48]
   140008b2a:	mov    rdi,QWORD PTR [rsp+0x50]
   140008b2f:	add    rsp,0x20
   140008b33:	pop    r14
   140008b35:	pop    r13
   140008b37:	pop    r12
   140008b39:	ret    
   140008b3a:	int3   
   140008b3b:	int3   
   140008b3c:	int3   
   140008b3d:	int3   
   140008b3e:	int3   
   140008b3f:	int3   
   140008b40:	sub    rsp,0x28
   140008b44:	call   0x140008a30
   140008b49:	neg    rax
   140008b4c:	sbb    eax,eax
   140008b4e:	neg    eax
   140008b50:	dec    eax
   140008b52:	add    rsp,0x28
   140008b56:	ret    
   140008b57:	int3   
   140008b58:	int3   
   140008b59:	int3   
   140008b5a:	int3   
   140008b5b:	int3   
   140008b5c:	int3   
   140008b5d:	int3   
   140008b5e:	int3   
   140008b5f:	int3   
   140008b60:	mov    QWORD PTR [rsp+0x8],rbx
   140008b65:	push   rdi
   140008b66:	sub    rsp,0x20
   140008b6a:	lea    rbx,[rip+0xd27f]        # 0x140015df0
   140008b71:	mov    edi,0xa
   140008b76:	mov    rcx,QWORD PTR [rbx]
   140008b79:	call   QWORD PTR [rip+0x75f1]        # 0x140010170
   140008b7f:	mov    QWORD PTR [rbx],rax
   140008b82:	add    rbx,0x8
   140008b86:	dec    rdi
   140008b89:	jne    0x140008b76
   140008b8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b90:	add    rsp,0x20
   140008b94:	pop    rdi
   140008b95:	ret    
   140008b96:	int3   
   140008b97:	int3   
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	mov    rax,rcx
   140008ba3:	mov    ecx,0x5a4d
   140008ba8:	cmp    WORD PTR [rax],cx
   140008bab:	je     0x140008bb0
   140008bad:	xor    eax,eax
   140008baf:	ret    
   140008bb0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140008bb4:	add    rcx,rax
   140008bb7:	xor    eax,eax
   140008bb9:	cmp    DWORD PTR [rcx],0x4550
   140008bbf:	jne    0x140008bcd
   140008bc1:	mov    edx,0x20b
   140008bc6:	cmp    WORD PTR [rcx+0x18],dx
   140008bca:	sete   al
   140008bcd:	repz ret 
   140008bcf:	int3   
   140008bd0:	int3   
   140008bd1:	int3   
   140008bd2:	int3   
   140008bd3:	int3   
   140008bd4:	int3   
   140008bd5:	int3   
   140008bd6:	int3   
   140008bd7:	int3   
   140008bd8:	int3   
   140008bd9:	int3   
   140008bda:	int3   
   140008bdb:	int3   
   140008bdc:	int3   
   140008bdd:	int3   
   140008bde:	int3   
   140008bdf:	int3   
   140008be0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008be4:	xor    r9d,r9d
   140008be7:	mov    r10,rdx
   140008bea:	add    r8,rcx
   140008bed:	movzx  eax,WORD PTR [r8+0x14]
   140008bf2:	movzx  r11d,WORD PTR [r8+0x6]
   140008bf7:	lea    rcx,[rax+r8*1+0x18]
   140008bfc:	test   r11d,r11d
   140008bff:	je     0x140008c1f
   140008c01:	mov    edx,DWORD PTR [rcx+0xc]
   140008c04:	cmp    r10,rdx
   140008c07:	jb     0x140008c13
   140008c09:	mov    eax,DWORD PTR [rcx+0x8]
   140008c0c:	add    eax,edx
   140008c0e:	cmp    r10,rax
   140008c11:	jb     0x140008c22
   140008c13:	inc    r9d
   140008c16:	add    rcx,0x28
   140008c1a:	cmp    r9d,r11d
   140008c1d:	jb     0x140008c01
   140008c1f:	xor    eax,eax
   140008c21:	ret    
   140008c22:	mov    rax,rcx
   140008c25:	ret    
   140008c26:	int3   
   140008c27:	int3   
   140008c28:	int3   
   140008c29:	int3   
   140008c2a:	int3   
   140008c2b:	int3   
   140008c2c:	int3   
   140008c2d:	int3   
   140008c2e:	int3   
   140008c2f:	int3   
   140008c30:	sub    rsp,0x28
   140008c34:	mov    r8,rcx
   140008c37:	lea    r9,[rip+0xffffffffffff73c2]        # 0x140000000
   140008c3e:	mov    rcx,r9
   140008c41:	call   0x140008ba0
   140008c46:	test   eax,eax
   140008c48:	je     0x140008c6c
   140008c4a:	sub    r8,r9
   140008c4d:	mov    rdx,r8
   140008c50:	mov    rcx,r9
   140008c53:	call   0x140008be0
   140008c58:	test   rax,rax
   140008c5b:	je     0x140008c6c
   140008c5d:	mov    eax,DWORD PTR [rax+0x24]
   140008c60:	shr    eax,0x1f
   140008c63:	not    eax
   140008c65:	and    eax,0x1
   140008c68:	jmp    0x140008c6c
   140008c6a:	xor    eax,eax
   140008c6c:	add    rsp,0x28
   140008c70:	ret    
   140008c71:	int3   
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	int3   
   140008c77:	int3   
   140008c78:	rex push rbx
   140008c7a:	sub    rsp,0x20
   140008c7e:	mov    r11d,DWORD PTR [r8]
   140008c81:	mov    rbx,rdx
   140008c84:	mov    r9,rcx
   140008c87:	and    r11d,0xfffffff8
   140008c8b:	test   BYTE PTR [r8],0x4
   140008c8f:	mov    r10,rcx
   140008c92:	je     0x140008ca7
   140008c94:	mov    eax,DWORD PTR [r8+0x8]
   140008c98:	movsxd r10,DWORD PTR [r8+0x4]
   140008c9c:	neg    eax
   140008c9e:	add    r10,rcx
   140008ca1:	movsxd rcx,eax
   140008ca4:	and    r10,rcx
   140008ca7:	movsxd rax,r11d
   140008caa:	mov    rdx,QWORD PTR [rax+r10*1]
   140008cae:	mov    rax,QWORD PTR [rbx+0x10]
   140008cb2:	mov    ecx,DWORD PTR [rax+0x8]
   140008cb5:	add    rcx,QWORD PTR [rbx+0x8]
   140008cb9:	test   BYTE PTR [rcx+0x3],0xf
   140008cbd:	je     0x140008ccb
   140008cbf:	movzx  eax,BYTE PTR [rcx+0x3]
   140008cc3:	and    eax,0xfffffff0
   140008cc6:	cdqe   
   140008cc8:	add    r9,rax
   140008ccb:	xor    r9,rdx
   140008cce:	mov    rcx,r9
   140008cd1:	add    rsp,0x20
   140008cd5:	pop    rbx
   140008cd6:	jmp    0x140003c50
   140008cdb:	int3   
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	int3   
   140008ce1:	int3   
   140008ce2:	int3   
   140008ce3:	int3   
   140008ce4:	sub    rsp,0x28
   140008ce8:	mov    r8,QWORD PTR [r9+0x38]
   140008cec:	mov    rcx,rdx
   140008cef:	mov    rdx,r9
   140008cf2:	call   0x140008c78
   140008cf7:	mov    eax,0x1
   140008cfc:	add    rsp,0x28
   140008d00:	ret    
   140008d01:	int3   
   140008d02:	int3   
   140008d03:	int3   
   140008d04:	int3   
   140008d05:	int3   
   140008d06:	int3   
   140008d07:	int3   
   140008d08:	int3   
   140008d09:	int3   
   140008d0a:	int3   
   140008d0b:	int3   
   140008d0c:	int3   
   140008d0d:	int3   
   140008d0e:	int3   
   140008d0f:	int3   
   140008d10:	int3   
   140008d11:	int3   
   140008d12:	int3   
   140008d13:	int3   
   140008d14:	int3   
   140008d15:	int3   
   140008d16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008d20:	mov    rax,rcx
   140008d23:	neg    rcx
   140008d26:	test   rax,0x7
   140008d2c:	je     0x140008d3d
   140008d2e:	xchg   ax,ax
   140008d30:	mov    dl,BYTE PTR [rax]
   140008d32:	inc    rax
   140008d35:	test   dl,dl
   140008d37:	je     0x140008d98
   140008d39:	test   al,0x7
   140008d3b:	jne    0x140008d30
   140008d3d:	movabs r8,0x7efefefefefefeff
   140008d47:	movabs r11,0x8101010101010100
   140008d51:	mov    rdx,QWORD PTR [rax]
   140008d54:	mov    r9,r8
   140008d57:	add    rax,0x8
   140008d5b:	add    r9,rdx
   140008d5e:	not    rdx
   140008d61:	xor    rdx,r9
   140008d64:	and    rdx,r11
   140008d67:	je     0x140008d51
   140008d69:	mov    rdx,QWORD PTR [rax-0x8]
   140008d6d:	test   dl,dl
   140008d6f:	je     0x140008dc2
   140008d71:	test   dh,dh
   140008d73:	je     0x140008dbc
   140008d75:	shr    rdx,0x10
   140008d79:	test   dl,dl
   140008d7b:	je     0x140008db6
   140008d7d:	test   dh,dh
   140008d7f:	je     0x140008db0
   140008d81:	shr    rdx,0x10
   140008d85:	test   dl,dl
   140008d87:	je     0x140008daa
   140008d89:	test   dh,dh
   140008d8b:	je     0x140008da4
   140008d8d:	shr    edx,0x10
   140008d90:	test   dl,dl
   140008d92:	je     0x140008d9e
   140008d94:	test   dh,dh
   140008d96:	jne    0x140008d51
   140008d98:	lea    rax,[rcx+rax*1-0x1]
   140008d9d:	ret    
   140008d9e:	lea    rax,[rcx+rax*1-0x2]
   140008da3:	ret    
   140008da4:	lea    rax,[rcx+rax*1-0x3]
   140008da9:	ret    
   140008daa:	lea    rax,[rcx+rax*1-0x4]
   140008daf:	ret    
   140008db0:	lea    rax,[rcx+rax*1-0x5]
   140008db5:	ret    
   140008db6:	lea    rax,[rcx+rax*1-0x6]
   140008dbb:	ret    
   140008dbc:	lea    rax,[rcx+rax*1-0x7]
   140008dc1:	ret    
   140008dc2:	lea    rax,[rcx+rax*1-0x8]
   140008dc7:	ret    
   140008dc8:	int3   
   140008dc9:	int3   
   140008dca:	int3   
   140008dcb:	int3   
   140008dcc:	int3   
   140008dcd:	int3   
   140008dce:	int3   
   140008dcf:	int3   
   140008dd0:	rex push rbx
   140008dd2:	push   rbp
   140008dd3:	push   rsi
   140008dd4:	push   rdi
   140008dd5:	push   r12
   140008dd7:	push   r13
   140008dd9:	push   r14
   140008ddb:	sub    rsp,0x50
   140008ddf:	mov    rax,QWORD PTR [rip+0xc28a]        # 0x140015070
   140008de6:	xor    rax,rsp
   140008de9:	mov    QWORD PTR [rsp+0x48],rax
   140008dee:	mov    ebp,r8d
   140008df1:	mov    r14,rdx
   140008df4:	mov    r13,rcx
   140008df7:	call   0x140005440
   140008dfc:	xor    ebx,ebx
   140008dfe:	cmp    QWORD PTR [rip+0xe65b],rbx        # 0x140017460
   140008e05:	mov    rdi,rax
   140008e08:	jne    0x140008ee3
   140008e0e:	lea    rcx,[rip+0x8703]        # 0x140011518
   140008e15:	call   QWORD PTR [rip+0x720d]        # 0x140010028
   140008e1b:	mov    rsi,rax
   140008e1e:	test   rax,rax
   140008e21:	je     0x140008fba
   140008e27:	lea    rdx,[rip+0x86da]        # 0x140011508
   140008e2e:	mov    rcx,rax
   140008e31:	call   QWORD PTR [rip+0x7219]        # 0x140010050
   140008e37:	test   rax,rax
   140008e3a:	je     0x140008fba
   140008e40:	mov    rcx,rax
   140008e43:	call   QWORD PTR [rip+0x7327]        # 0x140010170
   140008e49:	lea    rdx,[rip+0x86a8]        # 0x1400114f8
   140008e50:	mov    rcx,rsi
   140008e53:	mov    QWORD PTR [rip+0xe606],rax        # 0x140017460
   140008e5a:	call   QWORD PTR [rip+0x71f0]        # 0x140010050
   140008e60:	mov    rcx,rax
   140008e63:	call   QWORD PTR [rip+0x7307]        # 0x140010170
   140008e69:	lea    rdx,[rip+0x8670]        # 0x1400114e0
   140008e70:	mov    rcx,rsi
   140008e73:	mov    QWORD PTR [rip+0xe5ee],rax        # 0x140017468
   140008e7a:	call   QWORD PTR [rip+0x71d0]        # 0x140010050
   140008e80:	mov    rcx,rax
   140008e83:	call   QWORD PTR [rip+0x72e7]        # 0x140010170
   140008e89:	lea    rdx,[rip+0x8630]        # 0x1400114c0
   140008e90:	mov    rcx,rsi
   140008e93:	mov    QWORD PTR [rip+0xe5d6],rax        # 0x140017470
   140008e9a:	call   QWORD PTR [rip+0x71b0]        # 0x140010050
   140008ea0:	mov    rcx,rax
   140008ea3:	call   QWORD PTR [rip+0x72c7]        # 0x140010170
   140008ea9:	mov    r11,rax
   140008eac:	mov    QWORD PTR [rip+0xe5cd],rax        # 0x140017480
   140008eb3:	test   rax,rax
   140008eb6:	je     0x140008eda
   140008eb8:	lea    rdx,[rip+0x85e9]        # 0x1400114a8
   140008ebf:	mov    rcx,rsi
   140008ec2:	call   QWORD PTR [rip+0x7188]        # 0x140010050
   140008ec8:	mov    rcx,rax
   140008ecb:	call   QWORD PTR [rip+0x729f]        # 0x140010170
   140008ed1:	mov    QWORD PTR [rip+0xe5a0],rax        # 0x140017478
   140008ed8:	jmp    0x140008eea
   140008eda:	mov    rax,QWORD PTR [rip+0xe597]        # 0x140017478
   140008ee1:	jmp    0x140008ef1
   140008ee3:	mov    rax,QWORD PTR [rip+0xe58e]        # 0x140017478
   140008eea:	mov    r11,QWORD PTR [rip+0xe58f]        # 0x140017480
   140008ef1:	cmp    rax,rdi
   140008ef4:	je     0x140008f58
   140008ef6:	cmp    r11,rdi
   140008ef9:	je     0x140008f58
   140008efb:	mov    rcx,rax
   140008efe:	call   QWORD PTR [rip+0x7214]        # 0x140010118
   140008f04:	mov    rcx,QWORD PTR [rip+0xe575]        # 0x140017480
   140008f0b:	mov    rsi,rax
   140008f0e:	call   QWORD PTR [rip+0x7204]        # 0x140010118
   140008f14:	mov    r12,rax
   140008f17:	test   rsi,rsi
   140008f1a:	je     0x140008f58
   140008f1c:	test   rax,rax
   140008f1f:	je     0x140008f58
   140008f21:	call   rsi
   140008f23:	test   rax,rax
   140008f26:	je     0x140008f52
   140008f28:	lea    rcx,[rsp+0x30]
   140008f2d:	mov    r9d,0xc
   140008f33:	lea    r8,[rsp+0x38]
   140008f38:	mov    QWORD PTR [rsp+0x20],rcx
   140008f3d:	lea    edx,[r9-0xb]
   140008f41:	mov    rcx,rax
   140008f44:	call   r12
   140008f47:	test   eax,eax
   140008f49:	je     0x140008f52
   140008f4b:	test   BYTE PTR [rsp+0x40],0x1
   140008f50:	jne    0x140008f58
   140008f52:	bts    ebp,0x15
   140008f56:	jmp    0x140008f98
   140008f58:	mov    rcx,QWORD PTR [rip+0xe509]        # 0x140017468
   140008f5f:	cmp    rcx,rdi
   140008f62:	je     0x140008f98
   140008f64:	call   QWORD PTR [rip+0x71ae]        # 0x140010118
   140008f6a:	test   rax,rax
   140008f6d:	je     0x140008f98
   140008f6f:	call   rax
   140008f71:	mov    rbx,rax
   140008f74:	test   rax,rax
   140008f77:	je     0x140008f98
   140008f79:	mov    rcx,QWORD PTR [rip+0xe4f0]        # 0x140017470
   140008f80:	cmp    rcx,rdi
   140008f83:	je     0x140008f98
   140008f85:	call   QWORD PTR [rip+0x718d]        # 0x140010118
   140008f8b:	test   rax,rax
   140008f8e:	je     0x140008f98
   140008f90:	mov    rcx,rbx
   140008f93:	call   rax
   140008f95:	mov    rbx,rax
   140008f98:	mov    rcx,QWORD PTR [rip+0xe4c1]        # 0x140017460
   140008f9f:	call   QWORD PTR [rip+0x7173]        # 0x140010118
   140008fa5:	test   rax,rax
   140008fa8:	je     0x140008fba
   140008faa:	mov    r9d,ebp
   140008fad:	mov    r8,r14
   140008fb0:	mov    rdx,r13
   140008fb3:	mov    rcx,rbx
   140008fb6:	call   rax
   140008fb8:	jmp    0x140008fbc
   140008fba:	xor    eax,eax
   140008fbc:	mov    rcx,QWORD PTR [rsp+0x48]
   140008fc1:	xor    rcx,rsp
   140008fc4:	call   0x140003c50
   140008fc9:	add    rsp,0x50
   140008fcd:	pop    r14
   140008fcf:	pop    r13
   140008fd1:	pop    r12
   140008fd3:	pop    rdi
   140008fd4:	pop    rsi
   140008fd5:	pop    rbp
   140008fd6:	pop    rbx
   140008fd7:	ret    
   140008fd8:	int3   
   140008fd9:	int3   
   140008fda:	int3   
   140008fdb:	int3   
   140008fdc:	int3   
   140008fdd:	int3   
   140008fde:	int3   
   140008fdf:	int3   
   140008fe0:	rex push rbx
   140008fe2:	sub    rsp,0x20
   140008fe6:	xor    r10d,r10d
   140008fe9:	mov    r9,rcx
   140008fec:	test   rcx,rcx
   140008fef:	je     0x140008fff
   140008ff1:	test   rdx,rdx
   140008ff4:	je     0x140008fff
   140008ff6:	test   r8,r8
   140008ff9:	jne    0x140009018
   140008ffb:	mov    WORD PTR [rcx],r10w
   140008fff:	call   0x140006a54
   140009004:	mov    ebx,0x16
   140009009:	mov    DWORD PTR [rax],ebx
   14000900b:	call   0x1400069e0
   140009010:	mov    eax,ebx
   140009012:	add    rsp,0x20
   140009016:	pop    rbx
   140009017:	ret    
   140009018:	cmp    WORD PTR [rcx],r10w
   14000901c:	je     0x140009027
   14000901e:	add    rcx,0x2
   140009022:	dec    rdx
   140009025:	jne    0x140009018
   140009027:	test   rdx,rdx
   14000902a:	jne    0x140009032
   14000902c:	mov    WORD PTR [r9],r10w
   140009030:	jmp    0x140008fff
   140009032:	sub    rcx,r8
   140009035:	movzx  eax,WORD PTR [r8]
   140009039:	mov    WORD PTR [rcx+r8*1],ax
   14000903e:	add    r8,0x2
   140009042:	test   ax,ax
   140009045:	je     0x14000904c
   140009047:	dec    rdx
   14000904a:	jne    0x140009035
   14000904c:	test   rdx,rdx
   14000904f:	jne    0x140009061
   140009051:	mov    WORD PTR [r9],r10w
   140009055:	call   0x140006a54
   14000905a:	mov    ebx,0x22
   14000905f:	jmp    0x140009009
   140009061:	xor    eax,eax
   140009063:	jmp    0x140009012
   140009065:	int3   
   140009066:	int3   
   140009067:	int3   
   140009068:	int3   
   140009069:	int3   
   14000906a:	int3   
   14000906b:	int3   
   14000906c:	rex push rbx
   14000906e:	sub    rsp,0x20
   140009072:	xor    ebx,ebx
   140009074:	mov    r10,r8
   140009077:	test   r9,r9
   14000907a:	jne    0x14000908a
   14000907c:	test   rcx,rcx
   14000907f:	jne    0x14000908f
   140009081:	test   rdx,rdx
   140009084:	jne    0x1400090a6
   140009086:	xor    eax,eax
   140009088:	jmp    0x1400090b9
   14000908a:	test   rcx,rcx
   14000908d:	je     0x1400090a6
   14000908f:	test   rdx,rdx
   140009092:	je     0x1400090a6
   140009094:	test   r9,r9
   140009097:	jne    0x14000909e
   140009099:	mov    WORD PTR [rcx],bx
   14000909c:	jmp    0x140009086
   14000909e:	test   r8,r8
   1400090a1:	jne    0x1400090bf
   1400090a3:	mov    WORD PTR [rcx],bx
   1400090a6:	call   0x140006a54
   1400090ab:	mov    ebx,0x16
   1400090b0:	mov    DWORD PTR [rax],ebx
   1400090b2:	call   0x1400069e0
   1400090b7:	mov    eax,ebx
   1400090b9:	add    rsp,0x20
   1400090bd:	pop    rbx
   1400090be:	ret    
   1400090bf:	mov    r11,rcx
   1400090c2:	mov    r8,rdx
   1400090c5:	cmp    r9,0xffffffffffffffff
   1400090c9:	jne    0x1400090e7
   1400090cb:	sub    r11,r10
   1400090ce:	movzx  eax,WORD PTR [r10]
   1400090d2:	mov    WORD PTR [r11+r10*1],ax
   1400090d7:	add    r10,0x2
   1400090db:	test   ax,ax
   1400090de:	je     0x14000910f
   1400090e0:	dec    r8
   1400090e3:	jne    0x1400090ce
   1400090e5:	jmp    0x14000910f
   1400090e7:	sub    r10,rcx
   1400090ea:	movzx  eax,WORD PTR [r10+r11*1]
   1400090ef:	mov    WORD PTR [r11],ax
   1400090f3:	add    r11,0x2
   1400090f7:	test   ax,ax
   1400090fa:	je     0x140009106
   1400090fc:	dec    r8
   1400090ff:	je     0x140009106
   140009101:	dec    r9
   140009104:	jne    0x1400090ea
   140009106:	test   r9,r9
   140009109:	jne    0x14000910f
   14000910b:	mov    WORD PTR [r11],bx
   14000910f:	test   r8,r8
   140009112:	jne    0x140009086
   140009118:	cmp    r9,0xffffffffffffffff
   14000911c:	jne    0x140009129
   14000911e:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140009123:	lea    eax,[r8+0x50]
   140009127:	jmp    0x1400090b9
   140009129:	mov    WORD PTR [rcx],bx
   14000912c:	call   0x140006a54
   140009131:	mov    ebx,0x22
   140009136:	jmp    0x1400090b0
   14000913b:	int3   
   14000913c:	int3   
   14000913d:	int3   
   14000913e:	int3   
   14000913f:	int3   
   140009140:	int3   
   140009141:	int3   
   140009142:	int3   
   140009143:	int3   
   140009144:	mov    rax,rcx
   140009147:	movzx  edx,WORD PTR [rax]
   14000914a:	add    rax,0x2
   14000914e:	test   dx,dx
   140009151:	jne    0x140009147
   140009153:	sub    rax,rcx
   140009156:	sar    rax,1
   140009159:	dec    rax
   14000915c:	ret    
   14000915d:	int3   
   14000915e:	int3   
   14000915f:	int3   
   140009160:	int3   
   140009161:	int3   
   140009162:	int3   
   140009163:	int3   
   140009164:	rex push rbx
   140009166:	sub    rsp,0x20
   14000916a:	xor    r10d,r10d
   14000916d:	mov    r9,rcx
   140009170:	test   rcx,rcx
   140009173:	je     0x140009183
   140009175:	test   rdx,rdx
   140009178:	je     0x140009183
   14000917a:	test   r8,r8
   14000917d:	jne    0x14000919c
   14000917f:	mov    WORD PTR [rcx],r10w
   140009183:	call   0x140006a54
   140009188:	mov    ebx,0x16
   14000918d:	mov    DWORD PTR [rax],ebx
   14000918f:	call   0x1400069e0
   140009194:	mov    eax,ebx
   140009196:	add    rsp,0x20
   14000919a:	pop    rbx
   14000919b:	ret    
   14000919c:	sub    rcx,r8
   14000919f:	movzx  eax,WORD PTR [r8]
   1400091a3:	mov    WORD PTR [rcx+r8*1],ax
   1400091a8:	add    r8,0x2
   1400091ac:	test   ax,ax
   1400091af:	je     0x1400091b6
   1400091b1:	dec    rdx
   1400091b4:	jne    0x14000919f
   1400091b6:	test   rdx,rdx
   1400091b9:	jne    0x1400091cb
   1400091bb:	mov    WORD PTR [r9],r10w
   1400091bf:	call   0x140006a54
   1400091c4:	mov    ebx,0x22
   1400091c9:	jmp    0x14000918d
   1400091cb:	xor    eax,eax
   1400091cd:	jmp    0x140009196
   1400091cf:	int3   
   1400091d0:	int3   
   1400091d1:	int3   
   1400091d2:	int3   
   1400091d3:	int3   
   1400091d4:	int3   
   1400091d5:	int3   
   1400091d6:	int3   
   1400091d7:	int3   
   1400091d8:	sub    rsp,0x28
   1400091dc:	test   ecx,ecx
   1400091de:	js     0x140009200
   1400091e0:	cmp    ecx,0x2
   1400091e3:	jle    0x1400091f2
   1400091e5:	cmp    ecx,0x3
   1400091e8:	jne    0x140009200
   1400091ea:	mov    eax,DWORD PTR [rip+0xd180]        # 0x140016370
   1400091f0:	jmp    0x140009213
   1400091f2:	mov    eax,DWORD PTR [rip+0xd178]        # 0x140016370
   1400091f8:	mov    DWORD PTR [rip+0xd172],ecx        # 0x140016370
   1400091fe:	jmp    0x140009213
   140009200:	call   0x140006a54
   140009205:	mov    DWORD PTR [rax],0x16
   14000920b:	call   0x1400069e0
   140009210:	or     eax,0xffffffff
   140009213:	add    rsp,0x28
   140009217:	ret    
   140009218:	int3   
   140009219:	int3   
   14000921a:	int3   
   14000921b:	int3   
   14000921c:	int3   
   14000921d:	int3   
   14000921e:	int3   
   14000921f:	int3   
   140009220:	int3   
   140009221:	int3   
   140009222:	int3   
   140009223:	int3   
   140009224:	int3   
   140009225:	int3   
   140009226:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009230:	sub    rsp,0x4d8
   140009237:	xor    r8,r8
   14000923a:	xor    r9,r9
   14000923d:	mov    QWORD PTR [rsp+0x20],rsp
   140009242:	mov    QWORD PTR [rsp+0x28],r8
   140009247:	call   0x14000dcc2
   14000924c:	add    rsp,0x4d8
   140009253:	ret    
   140009254:	int3   
   140009255:	int3   
   140009256:	int3   
   140009257:	int3   
   140009258:	int3   
   140009259:	int3   
   14000925a:	nop    WORD PTR [rax+rax*1+0x0]
   140009260:	mov    QWORD PTR [rsp+0x8],rcx
   140009265:	mov    QWORD PTR [rsp+0x18],rdx
   14000926a:	mov    DWORD PTR [rsp+0x10],r8d
   14000926f:	mov    r9,0x19930520
   140009276:	jmp    0x140009280
   140009278:	int3   
   140009279:	int3   
   14000927a:	int3   
   14000927b:	int3   
   14000927c:	int3   
   14000927d:	int3   
   14000927e:	xchg   ax,ax
   140009280:	ret    
   140009281:	int3   
   140009282:	int3   
   140009283:	int3   
   140009284:	int3   
   140009285:	int3   
   140009286:	int3   
   140009287:	nop    WORD PTR [rax+rax*1+0x0]
   140009290:	ret    
   140009291:	int3   
   140009292:	int3   
   140009293:	int3   
   140009294:	int3   
   140009295:	int3   
   140009296:	int3   
   140009297:	int3   
   140009298:	mov    rax,rsp
   14000929b:	mov    QWORD PTR [rax+0x8],rbx
   14000929f:	mov    QWORD PTR [rax+0x10],rbp
   1400092a3:	mov    QWORD PTR [rax+0x18],rsi
   1400092a7:	mov    QWORD PTR [rax+0x20],rdi
   1400092ab:	push   r12
   1400092ad:	sub    rsp,0x20
   1400092b1:	mov    edi,DWORD PTR [rip+0xe1d1]        # 0x140017488
   1400092b7:	xor    ebp,ebp
   1400092b9:	mov    rsi,rcx
   1400092bc:	or     r12d,0xffffffff
   1400092c0:	mov    rcx,rsi
   1400092c3:	call   0x14000bcf0
   1400092c8:	mov    rbx,rax
   1400092cb:	test   rax,rax
   1400092ce:	jne    0x1400092f8
   1400092d0:	test   edi,edi
   1400092d2:	je     0x1400092f8
   1400092d4:	mov    ecx,ebp
   1400092d6:	call   QWORD PTR [rip+0x6f74]        # 0x140010250
   1400092dc:	mov    edi,DWORD PTR [rip+0xe1a6]        # 0x140017488
   1400092e2:	lea    r11d,[rbp+0x3e8]
   1400092e9:	cmp    r11d,edi
   1400092ec:	mov    ebp,r11d
   1400092ef:	cmova  ebp,r12d
   1400092f3:	cmp    ebp,r12d
   1400092f6:	jne    0x1400092c0
   1400092f8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400092fd:	mov    rsi,QWORD PTR [rsp+0x40]
   140009302:	mov    rdi,QWORD PTR [rsp+0x48]
   140009307:	mov    rax,rbx
   14000930a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000930f:	add    rsp,0x20
   140009313:	pop    r12
   140009315:	ret    
   140009316:	int3   
   140009317:	int3   
   140009318:	int3   
   140009319:	int3   
   14000931a:	int3   
   14000931b:	int3   
   14000931c:	mov    rax,rsp
   14000931f:	mov    QWORD PTR [rax+0x8],rbx
   140009323:	mov    QWORD PTR [rax+0x10],rbp
   140009327:	mov    QWORD PTR [rax+0x18],rsi
   14000932b:	mov    QWORD PTR [rax+0x20],rdi
   14000932f:	push   r12
   140009331:	sub    rsp,0x20
   140009335:	xor    edi,edi
   140009337:	mov    rsi,rdx
   14000933a:	mov    rbp,rcx
   14000933d:	or     r12d,0xffffffff
   140009341:	xor    r8d,r8d
   140009344:	mov    rdx,rsi
   140009347:	mov    rcx,rbp
   14000934a:	call   0x14000cd54
   14000934f:	mov    rbx,rax
   140009352:	test   rax,rax
   140009355:	jne    0x140009381
   140009357:	cmp    DWORD PTR [rip+0xe12b],eax        # 0x140017488
   14000935d:	jbe    0x140009381
   14000935f:	mov    ecx,edi
   140009361:	call   QWORD PTR [rip+0x6ee9]        # 0x140010250
   140009367:	lea    r11d,[rdi+0x3e8]
   14000936e:	cmp    r11d,DWORD PTR [rip+0xe113]        # 0x140017488
   140009375:	mov    edi,r11d
   140009378:	cmova  edi,r12d
   14000937c:	cmp    edi,r12d
   14000937f:	jne    0x140009341
   140009381:	mov    rbp,QWORD PTR [rsp+0x38]
   140009386:	mov    rsi,QWORD PTR [rsp+0x40]
   14000938b:	mov    rdi,QWORD PTR [rsp+0x48]
   140009390:	mov    rax,rbx
   140009393:	mov    rbx,QWORD PTR [rsp+0x30]
   140009398:	add    rsp,0x20
   14000939c:	pop    r12
   14000939e:	ret    
   14000939f:	int3   
   1400093a0:	int3   
   1400093a1:	int3   
   1400093a2:	int3   
   1400093a3:	int3   
   1400093a4:	int3   
   1400093a5:	int3   
   1400093a6:	int3   
   1400093a7:	int3   
   1400093a8:	mov    rax,rsp
   1400093ab:	mov    QWORD PTR [rax+0x8],rbx
   1400093af:	mov    QWORD PTR [rax+0x10],rbp
   1400093b3:	mov    QWORD PTR [rax+0x18],rsi
   1400093b7:	mov    QWORD PTR [rax+0x20],rdi
   1400093bb:	push   r12
   1400093bd:	sub    rsp,0x20
   1400093c1:	xor    esi,esi
   1400093c3:	mov    rdi,rdx
   1400093c6:	mov    rbp,rcx
   1400093c9:	or     r12d,0xffffffff
   1400093cd:	mov    rdx,rdi
   1400093d0:	mov    rcx,rbp
   1400093d3:	call   0x14000cdf4
   1400093d8:	mov    rbx,rax
   1400093db:	test   rax,rax
   1400093de:	jne    0x14000940f
   1400093e0:	test   rdi,rdi
   1400093e3:	je     0x14000940f
   1400093e5:	cmp    DWORD PTR [rip+0xe09d],eax        # 0x140017488
   1400093eb:	jbe    0x14000940f
   1400093ed:	mov    ecx,esi
   1400093ef:	call   QWORD PTR [rip+0x6e5b]        # 0x140010250
   1400093f5:	lea    r11d,[rsi+0x3e8]
   1400093fc:	cmp    r11d,DWORD PTR [rip+0xe085]        # 0x140017488
   140009403:	mov    esi,r11d
   140009406:	cmova  esi,r12d
   14000940a:	cmp    esi,r12d
   14000940d:	jne    0x1400093cd
   14000940f:	mov    rbp,QWORD PTR [rsp+0x38]
   140009414:	mov    rsi,QWORD PTR [rsp+0x40]
   140009419:	mov    rdi,QWORD PTR [rsp+0x48]
   14000941e:	mov    rax,rbx
   140009421:	mov    rbx,QWORD PTR [rsp+0x30]
   140009426:	add    rsp,0x20
   14000942a:	pop    r12
   14000942c:	ret    
   14000942d:	int3   
   14000942e:	int3   
   14000942f:	int3   
   140009430:	int3   
   140009431:	int3   
   140009432:	int3   
   140009433:	int3   
   140009434:	and    DWORD PTR [rip+0xf349],0x0        # 0x140018784
   14000943b:	ret    
   14000943c:	int3   
   14000943d:	int3   
   14000943e:	int3   
   14000943f:	int3   
   140009440:	int3   
   140009441:	int3   
   140009442:	int3   
   140009443:	int3   
   140009444:	mov    QWORD PTR [rsp+0x8],rbx
   140009449:	push   rdi
   14000944a:	sub    rsp,0x20
   14000944e:	movsxd rbx,ecx
   140009451:	mov    edi,r8d
   140009454:	mov    QWORD PTR [rsp+0x38],rdx
   140009459:	mov    ecx,ebx
   14000945b:	call   0x14000cf80
   140009460:	cmp    rax,0xffffffffffffffff
   140009464:	jne    0x140009477
   140009466:	call   0x140006a54
   14000946b:	mov    DWORD PTR [rax],0x9
   140009471:	or     rax,0xffffffffffffffff
   140009475:	jmp    0x1400094ce
   140009477:	mov    edx,DWORD PTR [rsp+0x38]
   14000947b:	lea    r8,[rsp+0x3c]
   140009480:	mov    r9d,edi
   140009483:	mov    rcx,rax
   140009486:	call   QWORD PTR [rip+0x6c6c]        # 0x1400100f8
   14000948c:	mov    DWORD PTR [rsp+0x38],eax
   140009490:	cmp    eax,0xffffffff
   140009493:	jne    0x1400094a8
   140009495:	call   QWORD PTR [rip+0x6bad]        # 0x140010048
   14000949b:	test   eax,eax
   14000949d:	je     0x1400094a8
   14000949f:	mov    ecx,eax
   1400094a1:	call   0x140006aa4
   1400094a6:	jmp    0x140009471
   1400094a8:	mov    rcx,rbx
   1400094ab:	mov    rax,rbx
   1400094ae:	lea    rdx,[rip+0xf2eb]        # 0x1400187a0
   1400094b5:	sar    rax,0x5
   1400094b9:	and    ecx,0x1f
   1400094bc:	mov    rax,QWORD PTR [rdx+rax*8]
   1400094c0:	imul   rcx,rcx,0x58
   1400094c4:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400094c9:	mov    rax,QWORD PTR [rsp+0x38]
   1400094ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094d3:	add    rsp,0x20
   1400094d7:	pop    rdi
   1400094d8:	ret    
   1400094d9:	int3   
   1400094da:	int3   
   1400094db:	int3   
   1400094dc:	int3   
   1400094dd:	int3   
   1400094de:	int3   
   1400094df:	int3   
   1400094e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400094e5:	mov    DWORD PTR [rsp+0x8],ecx
   1400094e9:	push   rsi
   1400094ea:	push   rdi
   1400094eb:	push   r12
   1400094ed:	push   r13
   1400094ef:	push   r14
   1400094f1:	sub    rsp,0x20
   1400094f5:	mov    esi,r8d
   1400094f8:	mov    r12,rdx
   1400094fb:	movsxd rdi,ecx
   1400094fe:	cmp    edi,0xfffffffe
   140009501:	jne    0x14000951b
   140009503:	call   0x140006a7c
   140009508:	and    DWORD PTR [rax],0x0
   14000950b:	call   0x140006a54
   140009510:	mov    DWORD PTR [rax],0x9
   140009516:	jmp    0x1400095ad
   14000951b:	test   ecx,ecx
   14000951d:	js     0x140009595
   14000951f:	cmp    edi,DWORD PTR [rip+0xf263]        # 0x140018788
   140009525:	jae    0x140009595
   140009527:	mov    rbx,rdi
   14000952a:	mov    r13,rdi
   14000952d:	sar    r13,0x5
   140009531:	lea    r14,[rip+0xf268]        # 0x1400187a0
   140009538:	and    ebx,0x1f
   14000953b:	imul   rbx,rbx,0x58
   14000953f:	mov    rax,QWORD PTR [r14+r13*8]
   140009543:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140009548:	and    ecx,0x1
   14000954b:	je     0x140009595
   14000954d:	mov    ecx,edi
   14000954f:	call   0x14000cffc
   140009554:	nop
   140009555:	mov    rax,QWORD PTR [r14+r13*8]
   140009559:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000955e:	je     0x140009572
   140009560:	mov    r8d,esi
   140009563:	mov    rdx,r12
   140009566:	mov    ecx,edi
   140009568:	call   0x140009444
   14000956d:	mov    rbx,rax
   140009570:	jmp    0x140009589
   140009572:	call   0x140006a54
   140009577:	mov    DWORD PTR [rax],0x9
   14000957d:	call   0x140006a7c
   140009582:	and    DWORD PTR [rax],0x0
   140009585:	or     rbx,0xffffffffffffffff
   140009589:	mov    ecx,edi
   14000958b:	call   0x14000d0a8
   140009590:	mov    rax,rbx
   140009593:	jmp    0x1400095b1
   140009595:	call   0x140006a7c
   14000959a:	and    DWORD PTR [rax],0x0
   14000959d:	call   0x140006a54
   1400095a2:	mov    DWORD PTR [rax],0x9
   1400095a8:	call   0x1400069e0
   1400095ad:	or     rax,0xffffffffffffffff
   1400095b1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400095b6:	add    rsp,0x20
   1400095ba:	pop    r14
   1400095bc:	pop    r13
   1400095be:	pop    r12
   1400095c0:	pop    rdi
   1400095c1:	pop    rsi
   1400095c2:	ret    
   1400095c3:	int3   
   1400095c4:	int3   
   1400095c5:	int3   
   1400095c6:	int3   
   1400095c7:	int3   
   1400095c8:	int3   
   1400095c9:	int3   
   1400095ca:	int3   
   1400095cb:	int3   
   1400095cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400095d1:	push   rbp
   1400095d2:	push   rsi
   1400095d3:	push   rdi
   1400095d4:	push   r12
   1400095d6:	push   r13
   1400095d8:	push   r14
   1400095da:	push   r15
   1400095dc:	lea    rbp,[rsp-0x1a30]
   1400095e4:	mov    eax,0x1b30
   1400095e9:	call   0x14000d150
   1400095ee:	sub    rsp,rax
   1400095f1:	mov    rax,QWORD PTR [rip+0xba78]        # 0x140015070
   1400095f8:	xor    rax,rsp
   1400095fb:	mov    QWORD PTR [rbp+0x1a20],rax
   140009602:	xor    edi,edi
   140009604:	mov    r14d,r8d
   140009607:	mov    r13,rdx
   14000960a:	and    DWORD PTR [rsp+0x44],edi
   14000960e:	movsxd rbx,ecx
   140009611:	test   r8d,r8d
   140009614:	jne    0x14000961d
   140009616:	xor    eax,eax
   140009618:	jmp    0x140009d02
   14000961d:	test   rdx,rdx
   140009620:	jne    0x140009641
   140009622:	call   0x140006a7c
   140009627:	and    DWORD PTR [rax],edi
   140009629:	call   0x140006a54
   14000962e:	mov    DWORD PTR [rax],0x16
   140009634:	call   0x1400069e0
   140009639:	or     eax,0xffffffff
   14000963c:	jmp    0x140009d02
   140009641:	mov    r15,rbx
   140009644:	mov    r12,rbx
   140009647:	lea    rax,[rip+0xf152]        # 0x1400187a0
   14000964e:	sar    r12,0x5
   140009652:	and    r15d,0x1f
   140009656:	mov    rcx,QWORD PTR [rax+r12*8]
   14000965a:	mov    QWORD PTR [rsp+0x50],r12
   14000965f:	imul   r15,r15,0x58
   140009663:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140009668:	mov    QWORD PTR [rsp+0x60],r15
   14000966d:	add    sil,sil
   140009670:	sar    sil,1
   140009673:	cmp    sil,0x2
   140009677:	je     0x14000967f
   140009679:	cmp    sil,0x1
   14000967d:	jne    0x140009688
   14000967f:	mov    eax,r14d
   140009682:	not    eax
   140009684:	test   al,0x1
   140009686:	je     0x140009622
   140009688:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   14000968e:	je     0x14000969d
   140009690:	xor    edx,edx
   140009692:	mov    ecx,ebx
   140009694:	lea    r8d,[rdx+0x2]
   140009698:	call   0x140009444
   14000969d:	mov    ecx,ebx
   14000969f:	call   0x140009e78
   1400096a4:	test   eax,eax
   1400096a6:	je     0x140009976
   1400096ac:	lea    rax,[rip+0xf0ed]        # 0x1400187a0
   1400096b3:	mov    rax,QWORD PTR [rax+r12*8]
   1400096b7:	test   BYTE PTR [r15+rax*1+0x8],0x80
   1400096bd:	je     0x140009976
   1400096c3:	call   0x1400055c4
   1400096c8:	xor    ebx,ebx
   1400096ca:	lea    rdx,[rsp+0x5c]
   1400096cf:	mov    rcx,QWORD PTR [rax+0xc0]
   1400096d6:	lea    rax,[rip+0xf0c3]        # 0x1400187a0
   1400096dd:	cmp    DWORD PTR [rcx+0x14],ebx
   1400096e0:	mov    rcx,QWORD PTR [rax+r12*8]
   1400096e4:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400096e8:	sete   bl
   1400096eb:	call   QWORD PTR [rip+0x69ef]        # 0x1400100e0
   1400096f1:	test   eax,eax
   1400096f3:	je     0x140009976
   1400096f9:	test   ebx,ebx
   1400096fb:	je     0x140009706
   1400096fd:	test   sil,sil
   140009700:	je     0x140009976
   140009706:	call   QWORD PTR [rip+0x69dc]        # 0x1400100e8
   14000970c:	and    DWORD PTR [rsp+0x58],edi
   140009710:	mov    rbx,r13
   140009713:	mov    DWORD PTR [rsp+0x5c],eax
   140009717:	test   r14d,r14d
   14000971a:	je     0x14000996d
   140009720:	test   sil,sil
   140009723:	jne    0x1400098ad
   140009729:	mov    cl,BYTE PTR [rbx]
   14000972b:	xor    eax,eax
   14000972d:	cmp    cl,0xa
   140009730:	sete   al
   140009733:	mov    DWORD PTR [rsp+0x4c],eax
   140009737:	lea    rax,[rip+0xf062]        # 0x1400187a0
   14000973e:	mov    rdx,QWORD PTR [rax+r12*8]
   140009742:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140009748:	je     0x14000976a
   14000974a:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   14000974f:	mov    BYTE PTR [rsp+0x61],cl
   140009753:	mov    r8d,0x2
   140009759:	mov    BYTE PTR [rsp+0x60],al
   14000975d:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140009763:	lea    rdx,[rsp+0x60]
   140009768:	jmp    0x1400097b3
   14000976a:	movsx  ecx,cl
   14000976d:	call   0x14000a550
   140009772:	test   eax,eax
   140009774:	je     0x1400097aa
   140009776:	mov    rax,r14
   140009779:	sub    rax,rbx
   14000977c:	add    rax,r13
   14000977f:	cmp    rax,0x1
   140009783:	jle    0x140009936
   140009789:	lea    rcx,[rsp+0x40]
   14000978e:	mov    r8d,0x2
   140009794:	mov    rdx,rbx
   140009797:	call   0x14000a4f4
   14000979c:	cmp    eax,0xffffffff
   14000979f:	je     0x140009957
   1400097a5:	inc    rbx
   1400097a8:	jmp    0x1400097c6
   1400097aa:	mov    r8d,0x1
   1400097b0:	mov    rdx,rbx
   1400097b3:	lea    rcx,[rsp+0x40]
   1400097b8:	call   0x14000a4f4
   1400097bd:	cmp    eax,0xffffffff
   1400097c0:	je     0x140009957
   1400097c6:	and    QWORD PTR [rsp+0x38],0x0
   1400097cc:	and    QWORD PTR [rsp+0x30],0x0
   1400097d2:	mov    ecx,DWORD PTR [rsp+0x5c]
   1400097d6:	lea    rax,[rsp+0x60]
   1400097db:	lea    r8,[rsp+0x40]
   1400097e0:	mov    r9d,0x1
   1400097e6:	xor    edx,edx
   1400097e8:	mov    DWORD PTR [rsp+0x28],0x5
   1400097f0:	inc    rbx
   1400097f3:	mov    QWORD PTR [rsp+0x20],rax
   1400097f8:	call   QWORD PTR [rip+0x68f2]        # 0x1400100f0
   1400097fe:	mov    r12d,eax
   140009801:	test   eax,eax
   140009803:	je     0x140009957
   140009809:	mov    rcx,QWORD PTR [rsp+0x50]
   14000980e:	and    QWORD PTR [rsp+0x20],0x0
   140009814:	lea    rax,[rip+0xef85]        # 0x1400187a0
   14000981b:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000981f:	lea    r9,[rsp+0x58]
   140009824:	lea    rdx,[rsp+0x60]
   140009829:	mov    rcx,QWORD PTR [r15+rcx*1]
   14000982d:	mov    r8d,r12d
   140009830:	call   QWORD PTR [rip+0x68ea]        # 0x140010120
   140009836:	test   eax,eax
   140009838:	je     0x140009960
   14000983e:	mov    edi,ebx
   140009840:	sub    edi,r13d
   140009843:	add    edi,DWORD PTR [rsp+0x44]
   140009847:	cmp    DWORD PTR [rsp+0x58],r12d
   14000984c:	jl     0x140009957
   140009852:	cmp    DWORD PTR [rsp+0x4c],0x0
   140009857:	mov    r12,QWORD PTR [rsp+0x50]
   14000985c:	je     0x140009927
   140009862:	and    QWORD PTR [rsp+0x20],0x0
   140009868:	lea    rax,[rip+0xef31]        # 0x1400187a0
   14000986f:	mov    BYTE PTR [rsp+0x60],0xd
   140009874:	mov    rcx,QWORD PTR [rax+r12*8]
   140009878:	lea    r9,[rsp+0x58]
   14000987d:	lea    rdx,[rsp+0x60]
   140009882:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009886:	mov    r8d,0x1
   14000988c:	call   QWORD PTR [rip+0x688e]        # 0x140010120
   140009892:	test   eax,eax
   140009894:	je     0x140009960
   14000989a:	cmp    DWORD PTR [rsp+0x58],0x1
   14000989f:	jl     0x140009957
   1400098a5:	inc    DWORD PTR [rsp+0x44]
   1400098a9:	inc    edi
   1400098ab:	jmp    0x140009927
   1400098ad:	cmp    sil,0x1
   1400098b1:	je     0x1400098b9
   1400098b3:	cmp    sil,0x2
   1400098b7:	jne    0x1400098d7
   1400098b9:	movzx  eax,WORD PTR [rbx]
   1400098bc:	xor    r12d,r12d
   1400098bf:	cmp    ax,0xa
   1400098c3:	mov    WORD PTR [rsp+0x40],ax
   1400098c8:	sete   r12b
   1400098cc:	add    rbx,0x2
   1400098d0:	mov    DWORD PTR [rsp+0x4c],r12d
   1400098d5:	jmp    0x1400098dc
   1400098d7:	mov    r12d,DWORD PTR [rsp+0x4c]
   1400098dc:	cmp    sil,0x1
   1400098e0:	je     0x1400098e8
   1400098e2:	cmp    sil,0x2
   1400098e6:	jne    0x140009922
   1400098e8:	movzx  ecx,WORD PTR [rsp+0x40]
   1400098ed:	call   0x14000d0d8
   1400098f2:	cmp    ax,WORD PTR [rsp+0x40]
   1400098f7:	jne    0x140009960
   1400098f9:	add    edi,0x2
   1400098fc:	test   r12d,r12d
   1400098ff:	je     0x140009922
   140009901:	mov    r12d,0xd
   140009907:	mov    ecx,r12d
   14000990a:	mov    WORD PTR [rsp+0x40],r12w
   140009910:	call   0x14000d0d8
   140009915:	cmp    ax,WORD PTR [rsp+0x40]
   14000991a:	jne    0x140009960
   14000991c:	inc    edi
   14000991e:	inc    DWORD PTR [rsp+0x44]
   140009922:	mov    r12,QWORD PTR [rsp+0x50]
   140009927:	mov    eax,ebx
   140009929:	sub    eax,r13d
   14000992c:	cmp    eax,r14d
   14000992f:	jae    0x140009957
   140009931:	jmp    0x140009720
   140009936:	mov    al,BYTE PTR [rbx]
   140009938:	lea    rdx,[rip+0xee61]        # 0x1400187a0
   14000993f:	inc    edi
   140009941:	mov    rcx,QWORD PTR [rdx+r12*8]
   140009945:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   14000994a:	mov    rax,QWORD PTR [rdx+r12*8]
   14000994e:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140009957:	mov    ebx,DWORD PTR [rsp+0x4c]
   14000995b:	jmp    0x140009c59
   140009960:	call   QWORD PTR [rip+0x66e2]        # 0x140010048
   140009966:	mov    ebx,eax
   140009968:	jmp    0x140009c59
   14000996d:	mov    ebx,DWORD PTR [rsp+0x4c]
   140009971:	jmp    0x140009c61
   140009976:	lea    rax,[rip+0xee23]        # 0x1400187a0
   14000997d:	mov    rcx,QWORD PTR [rax+r12*8]
   140009981:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140009987:	je     0x140009c8b
   14000998d:	xor    ebx,ebx
   14000998f:	mov    r12,r13
   140009992:	test   sil,sil
   140009995:	jne    0x140009a66
   14000999b:	test   r14d,r14d
   14000999e:	je     0x140009cc1
   1400099a4:	lea    edx,[rbx+0xd]
   1400099a7:	mov    r15d,DWORD PTR [rsp+0x44]
   1400099ac:	lea    rsi,[rbp+0x620]
   1400099b3:	xor    ecx,ecx
   1400099b5:	mov    eax,r12d
   1400099b8:	sub    eax,r13d
   1400099bb:	cmp    eax,r14d
   1400099be:	jae    0x1400099e7
   1400099c0:	mov    al,BYTE PTR [r12]
   1400099c4:	inc    r12
   1400099c7:	cmp    al,0xa
   1400099c9:	jne    0x1400099d6
   1400099cb:	mov    BYTE PTR [rsi],dl
   1400099cd:	inc    r15d
   1400099d0:	inc    rsi
   1400099d3:	inc    rcx
   1400099d6:	inc    rcx
   1400099d9:	mov    BYTE PTR [rsi],al
   1400099db:	inc    rsi
   1400099de:	cmp    rcx,0x13ff
   1400099e5:	jb     0x1400099b5
   1400099e7:	and    QWORD PTR [rsp+0x20],rbx
   1400099ec:	lea    rax,[rbp+0x620]
   1400099f3:	mov    r8d,esi
   1400099f6:	sub    r8d,eax
   1400099f9:	mov    rax,QWORD PTR [rsp+0x50]
   1400099fe:	lea    rcx,[rip+0xed9b]        # 0x1400187a0
   140009a05:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009a09:	mov    DWORD PTR [rsp+0x44],r15d
   140009a0e:	mov    r15,QWORD PTR [rsp+0x60]
   140009a13:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009a17:	lea    r9,[rsp+0x48]
   140009a1c:	lea    rdx,[rbp+0x620]
   140009a23:	call   QWORD PTR [rip+0x66f7]        # 0x140010120
   140009a29:	test   eax,eax
   140009a2b:	je     0x140009960
   140009a31:	add    edi,DWORD PTR [rsp+0x48]
   140009a35:	lea    rax,[rbp+0x620]
   140009a3c:	sub    rsi,rax
   140009a3f:	movsxd rax,DWORD PTR [rsp+0x48]
   140009a44:	cmp    rax,rsi
   140009a47:	jl     0x140009c59
   140009a4d:	mov    eax,r12d
   140009a50:	mov    edx,0xd
   140009a55:	sub    eax,r13d
   140009a58:	cmp    eax,r14d
   140009a5b:	jb     0x1400099a7
   140009a61:	jmp    0x140009c59
   140009a66:	cmp    sil,0x2
   140009a6a:	jne    0x140009b48
   140009a70:	test   r14d,r14d
   140009a73:	je     0x140009cc1
   140009a79:	mov    edx,0xd
   140009a7e:	mov    r15d,DWORD PTR [rsp+0x44]
   140009a83:	lea    rsi,[rbp+0x620]
   140009a8a:	xor    ecx,ecx
   140009a8c:	mov    eax,r12d
   140009a8f:	sub    eax,r13d
   140009a92:	cmp    eax,r14d
   140009a95:	jae    0x140009ac9
   140009a97:	movzx  eax,WORD PTR [r12]
   140009a9c:	add    r12,0x2
   140009aa0:	cmp    ax,0xa
   140009aa4:	jne    0x140009ab5
   140009aa6:	mov    WORD PTR [rsi],dx
   140009aa9:	add    r15d,0x2
   140009aad:	add    rsi,0x2
   140009ab1:	add    rcx,0x2
   140009ab5:	add    rcx,0x2
   140009ab9:	mov    WORD PTR [rsi],ax
   140009abc:	add    rsi,0x2
   140009ac0:	cmp    rcx,0x13fe
   140009ac7:	jb     0x140009a8c
   140009ac9:	and    QWORD PTR [rsp+0x20],rbx
   140009ace:	lea    rax,[rbp+0x620]
   140009ad5:	mov    r8d,esi
   140009ad8:	sub    r8d,eax
   140009adb:	mov    rax,QWORD PTR [rsp+0x50]
   140009ae0:	lea    rcx,[rip+0xecb9]        # 0x1400187a0
   140009ae7:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009aeb:	mov    DWORD PTR [rsp+0x44],r15d
   140009af0:	mov    r15,QWORD PTR [rsp+0x60]
   140009af5:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009af9:	lea    r9,[rsp+0x48]
   140009afe:	lea    rdx,[rbp+0x620]
   140009b05:	call   QWORD PTR [rip+0x6615]        # 0x140010120
   140009b0b:	test   eax,eax
   140009b0d:	je     0x140009960
   140009b13:	add    edi,DWORD PTR [rsp+0x48]
   140009b17:	lea    rax,[rbp+0x620]
   140009b1e:	sub    rsi,rax
   140009b21:	movsxd rax,DWORD PTR [rsp+0x48]
   140009b26:	cmp    rax,rsi
   140009b29:	jl     0x140009c59
   140009b2f:	mov    eax,r12d
   140009b32:	mov    edx,0xd
   140009b37:	sub    eax,r13d
   140009b3a:	cmp    eax,r14d
   140009b3d:	jb     0x140009a7e
   140009b43:	jmp    0x140009c59
   140009b48:	test   r14d,r14d
   140009b4b:	je     0x140009cc1
   140009b51:	mov    r8d,0xd
   140009b57:	lea    rcx,[rsp+0x70]
   140009b5c:	xor    edx,edx
   140009b5e:	mov    eax,r12d
   140009b61:	sub    eax,r13d
   140009b64:	cmp    eax,r14d
   140009b67:	jae    0x140009b98
   140009b69:	movzx  eax,WORD PTR [r12]
   140009b6e:	add    r12,0x2
   140009b72:	cmp    ax,0xa
   140009b76:	jne    0x140009b84
   140009b78:	mov    WORD PTR [rcx],r8w
   140009b7c:	add    rcx,0x2
   140009b80:	add    rdx,0x2
   140009b84:	add    rdx,0x2
   140009b88:	mov    WORD PTR [rcx],ax
   140009b8b:	add    rcx,0x2
   140009b8f:	cmp    rdx,0x6a8
   140009b96:	jb     0x140009b5e
   140009b98:	and    QWORD PTR [rsp+0x38],0x0
   140009b9e:	and    QWORD PTR [rsp+0x30],0x0
   140009ba4:	lea    rax,[rsp+0x70]
   140009ba9:	sub    ecx,eax
   140009bab:	lea    r8,[rsp+0x70]
   140009bb0:	mov    DWORD PTR [rsp+0x28],0xd55
   140009bb8:	mov    eax,ecx
   140009bba:	mov    ecx,0xfde9
   140009bbf:	cdq    
   140009bc0:	sub    eax,edx
   140009bc2:	xor    edx,edx
   140009bc4:	sar    eax,1
   140009bc6:	mov    r9d,eax
   140009bc9:	lea    rax,[rbp+0x620]
   140009bd0:	mov    QWORD PTR [rsp+0x20],rax
   140009bd5:	call   QWORD PTR [rip+0x6515]        # 0x1400100f0
   140009bdb:	mov    r15d,eax
   140009bde:	test   eax,eax
   140009be0:	je     0x140009c81
   140009be6:	xor    esi,esi
   140009be8:	mov    rax,QWORD PTR [rsp+0x50]
   140009bed:	and    QWORD PTR [rsp+0x20],0x0
   140009bf3:	movsxd rcx,esi
   140009bf6:	lea    rdx,[rbp+rcx*1+0x620]
   140009bfe:	mov    r8d,r15d
   140009c01:	lea    rcx,[rip+0xeb98]        # 0x1400187a0
   140009c08:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009c0c:	mov    rax,QWORD PTR [rsp+0x60]
   140009c11:	lea    r9,[rsp+0x48]
   140009c16:	mov    rcx,QWORD PTR [rax+rcx*1]
   140009c1a:	sub    r8d,esi
   140009c1d:	call   QWORD PTR [rip+0x64fd]        # 0x140010120
   140009c23:	test   eax,eax
   140009c25:	je     0x140009c32
   140009c27:	add    esi,DWORD PTR [rsp+0x48]
   140009c2b:	cmp    r15d,esi
   140009c2e:	jg     0x140009be8
   140009c30:	jmp    0x140009c3a
   140009c32:	call   QWORD PTR [rip+0x6410]        # 0x140010048
   140009c38:	mov    ebx,eax
   140009c3a:	cmp    r15d,esi
   140009c3d:	jg     0x140009c54
   140009c3f:	mov    edi,r12d
   140009c42:	mov    r8d,0xd
   140009c48:	sub    edi,r13d
   140009c4b:	cmp    edi,r14d
   140009c4e:	jb     0x140009b57
   140009c54:	mov    r15,QWORD PTR [rsp+0x60]
   140009c59:	test   edi,edi
   140009c5b:	jne    0x140009cfc
   140009c61:	test   ebx,ebx
   140009c63:	je     0x140009cc1
   140009c65:	cmp    ebx,0x5
   140009c68:	jne    0x140009cb5
   140009c6a:	call   0x140006a54
   140009c6f:	mov    DWORD PTR [rax],0x9
   140009c75:	call   0x140006a7c
   140009c7a:	mov    DWORD PTR [rax],ebx
   140009c7c:	jmp    0x140009639
   140009c81:	call   QWORD PTR [rip+0x63c1]        # 0x140010048
   140009c87:	mov    ebx,eax
   140009c89:	jmp    0x140009c54
   140009c8b:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009c8f:	and    QWORD PTR [rsp+0x20],rdi
   140009c94:	lea    r9,[rsp+0x48]
   140009c99:	mov    r8d,r14d
   140009c9c:	mov    rdx,r13
   140009c9f:	call   QWORD PTR [rip+0x647b]        # 0x140010120
   140009ca5:	test   eax,eax
   140009ca7:	je     0x140009960
   140009cad:	mov    edi,DWORD PTR [rsp+0x48]
   140009cb1:	xor    ebx,ebx
   140009cb3:	jmp    0x140009c59
   140009cb5:	mov    ecx,ebx
   140009cb7:	call   0x140006aa4
   140009cbc:	jmp    0x140009639
   140009cc1:	mov    rax,QWORD PTR [rsp+0x50]
   140009cc6:	lea    rcx,[rip+0xead3]        # 0x1400187a0
   140009ccd:	mov    rax,QWORD PTR [rcx+rax*8]
   140009cd1:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140009cd7:	je     0x140009ce4
   140009cd9:	cmp    BYTE PTR [r13+0x0],0x1a
   140009cde:	je     0x140009616
   140009ce4:	call   0x140006a54
   140009ce9:	mov    DWORD PTR [rax],0x1c
   140009cef:	call   0x140006a7c
   140009cf4:	and    DWORD PTR [rax],0x0
   140009cf7:	jmp    0x140009639
   140009cfc:	sub    edi,DWORD PTR [rsp+0x44]
   140009d00:	mov    eax,edi
   140009d02:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140009d09:	xor    rcx,rsp
   140009d0c:	call   0x140003c50
   140009d11:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140009d19:	add    rsp,0x1b30
   140009d20:	pop    r15
   140009d22:	pop    r14
   140009d24:	pop    r13
   140009d26:	pop    r12
   140009d28:	pop    rdi
   140009d29:	pop    rsi
   140009d2a:	pop    rbp
   140009d2b:	ret    
   140009d2c:	int3   
   140009d2d:	int3   
   140009d2e:	int3   
   140009d2f:	int3   
   140009d30:	int3   
   140009d31:	int3   
   140009d32:	int3   
   140009d33:	int3   
   140009d34:	mov    QWORD PTR [rsp+0x10],rbx
   140009d39:	mov    DWORD PTR [rsp+0x8],ecx
   140009d3d:	push   rsi
   140009d3e:	push   rdi
   140009d3f:	push   r12
   140009d41:	push   r13
   140009d43:	push   r14
   140009d45:	sub    rsp,0x20
   140009d49:	mov    esi,r8d
   140009d4c:	mov    r12,rdx
   140009d4f:	movsxd rdi,ecx
   140009d52:	cmp    edi,0xfffffffe
   140009d55:	jne    0x140009d6f
   140009d57:	call   0x140006a7c
   140009d5c:	and    DWORD PTR [rax],0x0
   140009d5f:	call   0x140006a54
   140009d64:	mov    DWORD PTR [rax],0x9
   140009d6a:	jmp    0x140009dfe
   140009d6f:	test   ecx,ecx
   140009d71:	js     0x140009de6
   140009d73:	cmp    edi,DWORD PTR [rip+0xea0f]        # 0x140018788
   140009d79:	jae    0x140009de6
   140009d7b:	mov    rbx,rdi
   140009d7e:	mov    r13,rdi
   140009d81:	sar    r13,0x5
   140009d85:	lea    r14,[rip+0xea14]        # 0x1400187a0
   140009d8c:	and    ebx,0x1f
   140009d8f:	imul   rbx,rbx,0x58
   140009d93:	mov    rax,QWORD PTR [r14+r13*8]
   140009d97:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140009d9c:	and    ecx,0x1
   140009d9f:	je     0x140009de6
   140009da1:	mov    ecx,edi
   140009da3:	call   0x14000cffc
   140009da8:	nop
   140009da9:	mov    rax,QWORD PTR [r14+r13*8]
   140009dad:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140009db2:	je     0x140009dc5
   140009db4:	mov    r8d,esi
   140009db7:	mov    rdx,r12
   140009dba:	mov    ecx,edi
   140009dbc:	call   0x1400095cc
   140009dc1:	mov    ebx,eax
   140009dc3:	jmp    0x140009ddb
   140009dc5:	call   0x140006a54
   140009dca:	mov    DWORD PTR [rax],0x9
   140009dd0:	call   0x140006a7c
   140009dd5:	and    DWORD PTR [rax],0x0
   140009dd8:	or     ebx,0xffffffff
   140009ddb:	mov    ecx,edi
   140009ddd:	call   0x14000d0a8
   140009de2:	mov    eax,ebx
   140009de4:	jmp    0x140009e01
   140009de6:	call   0x140006a7c
   140009deb:	and    DWORD PTR [rax],0x0
   140009dee:	call   0x140006a54
   140009df3:	mov    DWORD PTR [rax],0x9
   140009df9:	call   0x1400069e0
   140009dfe:	or     eax,0xffffffff
   140009e01:	mov    rbx,QWORD PTR [rsp+0x58]
   140009e06:	add    rsp,0x20
   140009e0a:	pop    r14
   140009e0c:	pop    r13
   140009e0e:	pop    r12
   140009e10:	pop    rdi
   140009e11:	pop    rsi
   140009e12:	ret    
   140009e13:	int3   
   140009e14:	int3   
   140009e15:	int3   
   140009e16:	int3   
   140009e17:	int3   
   140009e18:	int3   
   140009e19:	int3   
   140009e1a:	int3   
   140009e1b:	int3   
   140009e1c:	rex push rbx
   140009e1e:	sub    rsp,0x20
   140009e22:	inc    DWORD PTR [rip+0xd664]        # 0x14001748c
   140009e28:	mov    rbx,rcx
   140009e2b:	mov    ecx,0x1000
   140009e30:	call   0x140009298
   140009e35:	mov    QWORD PTR [rbx+0x10],rax
   140009e39:	test   rax,rax
   140009e3c:	je     0x140009e4b
   140009e3e:	or     DWORD PTR [rbx+0x18],0x8
   140009e42:	mov    DWORD PTR [rbx+0x24],0x1000
   140009e49:	jmp    0x140009e5e
   140009e4b:	or     DWORD PTR [rbx+0x18],0x4
   140009e4f:	lea    rax,[rbx+0x20]
   140009e53:	mov    DWORD PTR [rbx+0x24],0x2
   140009e5a:	mov    QWORD PTR [rbx+0x10],rax
   140009e5e:	mov    rax,QWORD PTR [rbx+0x10]
   140009e62:	and    DWORD PTR [rbx+0x8],0x0
   140009e66:	mov    QWORD PTR [rbx],rax
   140009e69:	add    rsp,0x20
   140009e6d:	pop    rbx
   140009e6e:	ret    
   140009e6f:	int3   
   140009e70:	int3   
   140009e71:	int3   
   140009e72:	int3   
   140009e73:	int3   
   140009e74:	int3   
   140009e75:	int3   
   140009e76:	int3   
   140009e77:	int3   
   140009e78:	sub    rsp,0x28
   140009e7c:	cmp    ecx,0xfffffffe
   140009e7f:	jne    0x140009e8e
   140009e81:	call   0x140006a54
   140009e86:	mov    DWORD PTR [rax],0x9
   140009e8c:	jmp    0x140009ed0
   140009e8e:	test   ecx,ecx
   140009e90:	js     0x140009ec0
   140009e92:	cmp    ecx,DWORD PTR [rip+0xe8f0]        # 0x140018788
   140009e98:	jae    0x140009ec0
   140009e9a:	movsxd rcx,ecx
   140009e9d:	lea    rdx,[rip+0xe8fc]        # 0x1400187a0
   140009ea4:	mov    rax,rcx
   140009ea7:	and    ecx,0x1f
   140009eaa:	sar    rax,0x5
   140009eae:	imul   rcx,rcx,0x58
   140009eb2:	mov    rax,QWORD PTR [rdx+rax*8]
   140009eb6:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140009ebb:	and    eax,0x40
   140009ebe:	jmp    0x140009ed2
   140009ec0:	call   0x140006a54
   140009ec5:	mov    DWORD PTR [rax],0x9
   140009ecb:	call   0x1400069e0
   140009ed0:	xor    eax,eax
   140009ed2:	add    rsp,0x28
   140009ed6:	ret    
   140009ed7:	int3   
   140009ed8:	int3   
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	int3   
   140009edd:	int3   
   140009ede:	int3   
   140009edf:	int3   
   140009ee0:	lea    rax,[rip+0xbf59]        # 0x140015e40
   140009ee7:	ret    
   140009ee8:	int3   
   140009ee9:	int3   
   140009eea:	int3   
   140009eeb:	int3   
   140009eec:	int3   
   140009eed:	int3   
   140009eee:	int3   
   140009eef:	int3   
   140009ef0:	rex push rbx
   140009ef2:	sub    rsp,0x20
   140009ef6:	mov    eax,DWORD PTR [rip+0xe884]        # 0x140018780
   140009efc:	mov    ebx,0x14
   140009f01:	test   eax,eax
   140009f03:	jne    0x140009f0c
   140009f05:	mov    eax,0x200
   140009f0a:	jmp    0x140009f11
   140009f0c:	cmp    eax,ebx
   140009f0e:	cmovl  eax,ebx
   140009f11:	movsxd rcx,eax
   140009f14:	mov    edx,0x8
   140009f19:	mov    DWORD PTR [rip+0xe861],eax        # 0x140018780
   140009f1f:	call   0x14000931c
   140009f24:	mov    QWORD PTR [rip+0xd835],rax        # 0x140017760
   140009f2b:	test   rax,rax
   140009f2e:	jne    0x140009f54
   140009f30:	lea    edx,[rax+0x8]
   140009f33:	mov    rcx,rbx
   140009f36:	mov    DWORD PTR [rip+0xe844],ebx        # 0x140018780
   140009f3c:	call   0x14000931c
   140009f41:	mov    QWORD PTR [rip+0xd818],rax        # 0x140017760
   140009f48:	test   rax,rax
   140009f4b:	jne    0x140009f54
   140009f4d:	mov    eax,0x1a
   140009f52:	jmp    0x140009fca
   140009f54:	xor    ecx,ecx
   140009f56:	lea    rdx,[rip+0xbee3]        # 0x140015e40
   140009f5d:	mov    QWORD PTR [rcx+rax*1],rdx
   140009f61:	add    rdx,0x30
   140009f65:	add    rcx,0x8
   140009f69:	dec    rbx
   140009f6c:	je     0x140009f77
   140009f6e:	mov    rax,QWORD PTR [rip+0xd7eb]        # 0x140017760
   140009f75:	jmp    0x140009f5d
   140009f77:	xor    r8d,r8d
   140009f7a:	lea    rdx,[rip+0xbedb]        # 0x140015e5c
   140009f81:	lea    r9d,[r8+0x3]
   140009f85:	mov    rcx,r8
   140009f88:	lea    r10,[rip+0xe811]        # 0x1400187a0
   140009f8f:	mov    rax,r8
   140009f92:	sar    rax,0x5
   140009f96:	and    ecx,0x1f
   140009f99:	mov    rax,QWORD PTR [r10+rax*8]
   140009f9d:	imul   rcx,rcx,0x58
   140009fa1:	mov    r10,QWORD PTR [rcx+rax*1]
   140009fa5:	cmp    r10,0xffffffffffffffff
   140009fa9:	je     0x140009fb6
   140009fab:	cmp    r10,0xfffffffffffffffe
   140009faf:	je     0x140009fb6
   140009fb1:	test   r10,r10
   140009fb4:	jne    0x140009fbc
   140009fb6:	mov    DWORD PTR [rdx],0xfffffffe
   140009fbc:	inc    r8
   140009fbf:	add    rdx,0x30
   140009fc3:	dec    r9
   140009fc6:	jne    0x140009f85
   140009fc8:	xor    eax,eax
   140009fca:	add    rsp,0x20
   140009fce:	pop    rbx
   140009fcf:	ret    
   140009fd0:	int3   
   140009fd1:	int3   
   140009fd2:	int3   
   140009fd3:	int3   
   140009fd4:	int3   
   140009fd5:	int3   
   140009fd6:	int3   
   140009fd7:	int3   
   140009fd8:	sub    rsp,0x28
   140009fdc:	call   0x14000d41c
   140009fe1:	cmp    BYTE PTR [rip+0xc3d8],0x0        # 0x1400163c0
   140009fe8:	je     0x140009fef
   140009fea:	call   0x14000d1a4
   140009fef:	mov    rcx,QWORD PTR [rip+0xd76a]        # 0x140017760
   140009ff6:	add    rsp,0x28
   140009ffa:	jmp    0x1400058cc
   140009fff:	int3   
   14000a000:	int3   
   14000a001:	int3   
   14000a002:	int3   
   14000a003:	int3   
   14000a004:	int3   
   14000a005:	int3   
   14000a006:	int3   
   14000a007:	int3   
   14000a008:	rex push rbx
   14000a00a:	sub    rsp,0x20
   14000a00e:	mov    rbx,rcx
   14000a011:	lea    rcx,[rip+0xbe28]        # 0x140015e40
   14000a018:	cmp    rbx,rcx
   14000a01b:	jb     0x14000a05b
   14000a01d:	lea    rax,[rip+0xc1ac]        # 0x1400161d0
   14000a024:	cmp    rbx,rax
   14000a027:	ja     0x14000a05b
   14000a029:	mov    rdx,rbx
   14000a02c:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a036:	sub    rdx,rcx
   14000a039:	imul   rdx
   14000a03c:	sar    rdx,0x3
   14000a040:	mov    rcx,rdx
   14000a043:	shr    rcx,0x3f
   14000a047:	lea    ecx,[rcx+rdx*1+0x10]
   14000a04b:	call   0x1400086bc
   14000a050:	bts    DWORD PTR [rbx+0x18],0xf
   14000a055:	add    rsp,0x20
   14000a059:	pop    rbx
   14000a05a:	ret    
   14000a05b:	lea    rcx,[rbx+0x30]
   14000a05f:	add    rsp,0x20
   14000a063:	pop    rbx
   14000a064:	rex.W jmp QWORD PTR [rip+0x61dd]        # 0x140010248
   14000a06b:	int3   
   14000a06c:	int3   
   14000a06d:	int3   
   14000a06e:	int3   
   14000a06f:	int3   
   14000a070:	int3   
   14000a071:	int3   
   14000a072:	int3   
   14000a073:	int3   
   14000a074:	rex push rbx
   14000a076:	sub    rsp,0x20
   14000a07a:	mov    rbx,rdx
   14000a07d:	cmp    ecx,0x14
   14000a080:	jge    0x14000a095
   14000a082:	add    ecx,0x10
   14000a085:	call   0x1400086bc
   14000a08a:	bts    DWORD PTR [rbx+0x18],0xf
   14000a08f:	add    rsp,0x20
   14000a093:	pop    rbx
   14000a094:	ret    
   14000a095:	lea    rcx,[rdx+0x30]
   14000a099:	add    rsp,0x20
   14000a09d:	pop    rbx
   14000a09e:	rex.W jmp QWORD PTR [rip+0x61a3]        # 0x140010248
   14000a0a5:	int3   
   14000a0a6:	int3   
   14000a0a7:	int3   
   14000a0a8:	int3   
   14000a0a9:	int3   
   14000a0aa:	int3   
   14000a0ab:	int3   
   14000a0ac:	lea    rdx,[rip+0xbd8d]        # 0x140015e40
   14000a0b3:	cmp    rcx,rdx
   14000a0b6:	jb     0x14000a0ed
   14000a0b8:	lea    rax,[rip+0xc111]        # 0x1400161d0
   14000a0bf:	cmp    rcx,rax
   14000a0c2:	ja     0x14000a0ed
   14000a0c4:	btr    DWORD PTR [rcx+0x18],0xf
   14000a0c9:	sub    rcx,rdx
   14000a0cc:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a0d6:	imul   rcx
   14000a0d9:	sar    rdx,0x3
   14000a0dd:	mov    rcx,rdx
   14000a0e0:	shr    rcx,0x3f
   14000a0e4:	lea    ecx,[rcx+rdx*1+0x10]
   14000a0e8:	jmp    0x1400085b0
   14000a0ed:	add    rcx,0x30
   14000a0f1:	rex.W jmp QWORD PTR [rip+0x6148]        # 0x140010240
   14000a0f8:	int3   
   14000a0f9:	int3   
   14000a0fa:	int3   
   14000a0fb:	int3   
   14000a0fc:	int3   
   14000a0fd:	int3   
   14000a0fe:	int3   
   14000a0ff:	int3   
   14000a100:	cmp    ecx,0x14
   14000a103:	jge    0x14000a112
   14000a105:	btr    DWORD PTR [rdx+0x18],0xf
   14000a10a:	add    ecx,0x10
   14000a10d:	jmp    0x1400085b0
   14000a112:	lea    rcx,[rdx+0x30]
   14000a116:	rex.W jmp QWORD PTR [rip+0x6123]        # 0x140010240
   14000a11d:	int3   
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	int3   
   14000a121:	int3   
   14000a122:	int3   
   14000a123:	int3   
   14000a124:	sub    rsp,0x28
   14000a128:	test   rcx,rcx
   14000a12b:	jne    0x14000a142
   14000a12d:	call   0x140006a54
   14000a132:	mov    DWORD PTR [rax],0x16
   14000a138:	call   0x1400069e0
   14000a13d:	or     eax,0xffffffff
   14000a140:	jmp    0x14000a145
   14000a142:	mov    eax,DWORD PTR [rcx+0x1c]
   14000a145:	add    rsp,0x28
   14000a149:	ret    
   14000a14a:	int3   
   14000a14b:	int3   
   14000a14c:	int3   
   14000a14d:	int3   
   14000a14e:	int3   
   14000a14f:	int3   
   14000a150:	mov    QWORD PTR [rsp+0x18],rbx
   14000a155:	mov    QWORD PTR [rsp+0x20],rbp
   14000a15a:	push   rsi
   14000a15b:	push   rdi
   14000a15c:	push   r12
   14000a15e:	sub    rsp,0x40
   14000a162:	mov    rax,QWORD PTR [rip+0xaf07]        # 0x140015070
   14000a169:	xor    rax,rsp
   14000a16c:	mov    QWORD PTR [rsp+0x30],rax
   14000a171:	test   BYTE PTR [rdx+0x18],0x40
   14000a175:	mov    rdi,rdx
   14000a178:	movzx  esi,cx
   14000a17b:	jne    0x14000a306
   14000a181:	mov    rcx,rdx
   14000a184:	call   0x14000a124
   14000a189:	lea    rbp,[rip+0xae80]        # 0x140015010
   14000a190:	lea    r12,[rip+0xe609]        # 0x1400187a0
   14000a197:	cmp    eax,0xffffffff
   14000a19a:	je     0x14000a1d1
   14000a19c:	mov    rcx,rdi
   14000a19f:	call   0x14000a124
   14000a1a4:	cmp    eax,0xfffffffe
   14000a1a7:	je     0x14000a1d1
   14000a1a9:	mov    rcx,rdi
   14000a1ac:	call   0x14000a124
   14000a1b1:	mov    rcx,rdi
   14000a1b4:	movsxd rbx,eax
   14000a1b7:	sar    rbx,0x5
   14000a1bb:	call   0x14000a124
   14000a1c0:	mov    r11d,eax
   14000a1c3:	and    r11d,0x1f
   14000a1c7:	imul   r11,r11,0x58
   14000a1cb:	add    r11,QWORD PTR [r12+rbx*8]
   14000a1cf:	jmp    0x14000a1d4
   14000a1d1:	mov    r11,rbp
   14000a1d4:	mov    al,BYTE PTR [r11+0x38]
   14000a1d8:	and    al,0x7f
   14000a1da:	cmp    al,0x2
   14000a1dc:	je     0x14000a2ef
   14000a1e2:	mov    rcx,rdi
   14000a1e5:	call   0x14000a124
   14000a1ea:	cmp    eax,0xffffffff
   14000a1ed:	je     0x14000a224
   14000a1ef:	mov    rcx,rdi
   14000a1f2:	call   0x14000a124
   14000a1f7:	cmp    eax,0xfffffffe
   14000a1fa:	je     0x14000a224
   14000a1fc:	mov    rcx,rdi
   14000a1ff:	call   0x14000a124
   14000a204:	mov    rcx,rdi
   14000a207:	movsxd rbx,eax
   14000a20a:	sar    rbx,0x5
   14000a20e:	call   0x14000a124
   14000a213:	mov    r11d,eax
   14000a216:	and    r11d,0x1f
   14000a21a:	imul   r11,r11,0x58
   14000a21e:	add    r11,QWORD PTR [r12+rbx*8]
   14000a222:	jmp    0x14000a227
   14000a224:	mov    r11,rbp
   14000a227:	mov    al,BYTE PTR [r11+0x38]
   14000a22b:	and    al,0x7f
   14000a22d:	cmp    al,0x1
   14000a22f:	je     0x14000a2ef
   14000a235:	mov    rcx,rdi
   14000a238:	call   0x14000a124
   14000a23d:	cmp    eax,0xffffffff
   14000a240:	je     0x14000a273
   14000a242:	mov    rcx,rdi
   14000a245:	call   0x14000a124
   14000a24a:	cmp    eax,0xfffffffe
   14000a24d:	je     0x14000a273
   14000a24f:	mov    rcx,rdi
   14000a252:	call   0x14000a124
   14000a257:	mov    rcx,rdi
   14000a25a:	movsxd rbx,eax
   14000a25d:	sar    rbx,0x5
   14000a261:	call   0x14000a124
   14000a266:	mov    ebp,eax
   14000a268:	and    ebp,0x1f
   14000a26b:	imul   rbp,rbp,0x58
   14000a26f:	add    rbp,QWORD PTR [r12+rbx*8]
   14000a273:	test   BYTE PTR [rbp+0x8],0x80
   14000a277:	je     0x14000a306
   14000a27d:	lea    rdx,[rsp+0x24]
   14000a282:	lea    rcx,[rsp+0x20]
   14000a287:	movzx  r9d,si
   14000a28b:	mov    r8d,0x5
   14000a291:	call   0x14000d790
   14000a296:	xor    ebx,ebx
   14000a298:	test   eax,eax
   14000a29a:	je     0x14000a2a6
   14000a29c:	mov    eax,0xffff
   14000a2a1:	jmp    0x14000a32f
   14000a2a6:	cmp    DWORD PTR [rsp+0x20],ebx
   14000a2aa:	jle    0x14000a2ea
   14000a2ac:	lea    rbp,[rsp+0x24]
   14000a2b1:	dec    DWORD PTR [rdi+0x8]
   14000a2b4:	js     0x14000a2cc
   14000a2b6:	mov    rcx,QWORD PTR [rdi]
   14000a2b9:	mov    al,BYTE PTR [rbp+0x0]
   14000a2bc:	mov    BYTE PTR [rcx],al
   14000a2be:	mov    rax,QWORD PTR [rdi]
   14000a2c1:	movzx  ecx,BYTE PTR [rax]
   14000a2c4:	inc    rax
   14000a2c7:	mov    QWORD PTR [rdi],rax
   14000a2ca:	jmp    0x14000a2da
   14000a2cc:	movsx  ecx,BYTE PTR [rbp+0x0]
   14000a2d0:	mov    rdx,rdi
   14000a2d3:	call   0x140005a60
   14000a2d8:	mov    ecx,eax
   14000a2da:	cmp    ecx,0xffffffff
   14000a2dd:	je     0x14000a29c
   14000a2df:	inc    ebx
   14000a2e1:	inc    rbp
   14000a2e4:	cmp    ebx,DWORD PTR [rsp+0x20]
   14000a2e8:	jl     0x14000a2b1
   14000a2ea:	movzx  eax,si
   14000a2ed:	jmp    0x14000a32f
   14000a2ef:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000a2f3:	add    rcx,0xfffffffffffffffe
   14000a2f7:	mov    DWORD PTR [rdi+0x8],ecx
   14000a2fa:	test   ecx,ecx
   14000a2fc:	js     0x14000a324
   14000a2fe:	mov    rcx,QWORD PTR [rdi]
   14000a301:	mov    WORD PTR [rcx],si
   14000a304:	jmp    0x14000a31b
   14000a306:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a30a:	add    rax,0xfffffffffffffffe
   14000a30e:	mov    DWORD PTR [rdi+0x8],eax
   14000a311:	test   eax,eax
   14000a313:	js     0x14000a324
   14000a315:	mov    rax,QWORD PTR [rdi]
   14000a318:	mov    WORD PTR [rax],si
   14000a31b:	add    QWORD PTR [rdi],0x2
   14000a31f:	movzx  eax,si
   14000a322:	jmp    0x14000a32f
   14000a324:	mov    rdx,rdi
   14000a327:	movzx  ecx,si
   14000a32a:	call   0x14000d42c
   14000a32f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a334:	xor    rcx,rsp
   14000a337:	call   0x140003c50
   14000a33c:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a341:	mov    rbp,QWORD PTR [rsp+0x78]
   14000a346:	add    rsp,0x40
   14000a34a:	pop    r12
   14000a34c:	pop    rdi
   14000a34d:	pop    rsi
   14000a34e:	ret    
   14000a34f:	int3   
   14000a350:	int3   
   14000a351:	int3   
   14000a352:	int3   
   14000a353:	int3   
   14000a354:	int3   
   14000a355:	int3   
   14000a356:	int3   
   14000a357:	int3   
   14000a358:	mov    rcx,QWORD PTR [rip+0xad11]        # 0x140015070
   14000a35f:	xor    eax,eax
   14000a361:	or     rcx,0x1
   14000a365:	cmp    QWORD PTR [rip+0xd124],rcx        # 0x140017490
   14000a36c:	sete   al
   14000a36f:	ret    
   14000a370:	int3   
   14000a371:	int3   
   14000a372:	int3   
   14000a373:	int3   
   14000a374:	int3   
   14000a375:	int3   
   14000a376:	int3   
   14000a377:	int3   
   14000a378:	mov    rax,rsp
   14000a37b:	mov    QWORD PTR [rax+0x8],rbx
   14000a37f:	mov    QWORD PTR [rax+0x10],rsi
   14000a383:	mov    QWORD PTR [rax+0x18],rdi
   14000a387:	mov    QWORD PTR [rax+0x20],r12
   14000a38b:	push   rbp
   14000a38c:	mov    rbp,rsp
   14000a38f:	sub    rsp,0x50
   14000a393:	xor    r12d,r12d
   14000a396:	mov    rsi,r8
   14000a399:	mov    rdi,rdx
   14000a39c:	mov    rbx,rcx
   14000a39f:	test   rdx,rdx
   14000a3a2:	je     0x14000a3b7
   14000a3a4:	test   r8,r8
   14000a3a7:	je     0x14000a3b7
   14000a3a9:	cmp    BYTE PTR [rdx],r12b
   14000a3ac:	jne    0x14000a3d3
   14000a3ae:	test   rcx,rcx
   14000a3b1:	je     0x14000a3b7
   14000a3b3:	mov    WORD PTR [rcx],r12w
   14000a3b7:	xor    eax,eax
   14000a3b9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a3be:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a3c3:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a3c8:	mov    r12,QWORD PTR [rsp+0x78]
   14000a3cd:	add    rsp,0x50
   14000a3d1:	pop    rbp
   14000a3d2:	ret    
   14000a3d3:	lea    rcx,[rbp-0x20]
   14000a3d7:	mov    rdx,r9
   14000a3da:	call   0x140003f18
   14000a3df:	mov    r11,QWORD PTR [rbp-0x20]
   14000a3e3:	cmp    DWORD PTR [r11+0x14],r12d
   14000a3e7:	jne    0x14000a40c
   14000a3e9:	test   rbx,rbx
   14000a3ec:	je     0x14000a3f4
   14000a3ee:	movzx  eax,BYTE PTR [rdi]
   14000a3f1:	mov    WORD PTR [rbx],ax
   14000a3f4:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a3f8:	je     0x14000a405
   14000a3fa:	mov    rax,QWORD PTR [rbp-0x10]
   14000a3fe:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a405:	mov    eax,0x1
   14000a40a:	jmp    0x14000a3b9
   14000a40c:	movzx  ecx,BYTE PTR [rdi]
   14000a40f:	lea    rdx,[rbp-0x20]
   14000a413:	call   0x14000a504
   14000a418:	test   eax,eax
   14000a41a:	je     0x14000a4b7
   14000a420:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a424:	mov    r9d,DWORD PTR [rcx+0x10c]
   14000a42b:	cmp    r9d,0x1
   14000a42f:	jle    0x14000a461
   14000a431:	cmp    esi,r9d
   14000a434:	jl     0x14000a461
   14000a436:	mov    ecx,DWORD PTR [rcx+0x4]
   14000a439:	mov    eax,r12d
   14000a43c:	test   rbx,rbx
   14000a43f:	setne  al
   14000a442:	mov    r8,rdi
   14000a445:	mov    edx,0x9
   14000a44a:	mov    DWORD PTR [rsp+0x28],eax
   14000a44e:	mov    QWORD PTR [rsp+0x20],rbx
   14000a453:	call   QWORD PTR [rip+0x5c7f]        # 0x1400100d8
   14000a459:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a45d:	test   eax,eax
   14000a45f:	jne    0x14000a473
   14000a461:	movsxd rax,DWORD PTR [rcx+0x10c]
   14000a468:	cmp    rsi,rax
   14000a46b:	jb     0x14000a493
   14000a46d:	cmp    BYTE PTR [rdi+0x1],r12b
   14000a471:	je     0x14000a493
   14000a473:	mov    eax,DWORD PTR [rcx+0x10c]
   14000a479:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a47d:	je     0x14000a3b9
   14000a483:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a487:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a48e:	jmp    0x14000a3b9
   14000a493:	call   0x140006a54
   14000a498:	mov    DWORD PTR [rax],0x2a
   14000a49e:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a4a2:	je     0x14000a4af
   14000a4a4:	mov    rax,QWORD PTR [rbp-0x10]
   14000a4a8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a4af:	or     eax,0xffffffff
   14000a4b2:	jmp    0x14000a3b9
   14000a4b7:	mov    eax,r12d
   14000a4ba:	mov    r9d,0x1
   14000a4c0:	test   rbx,rbx
   14000a4c3:	setne  al
   14000a4c6:	lea    edx,[r9+0x8]
   14000a4ca:	mov    r8,rdi
   14000a4cd:	mov    DWORD PTR [rsp+0x28],eax
   14000a4d1:	mov    rax,QWORD PTR [rbp-0x20]
   14000a4d5:	mov    QWORD PTR [rsp+0x20],rbx
   14000a4da:	mov    ecx,DWORD PTR [rax+0x4]
   14000a4dd:	call   QWORD PTR [rip+0x5bf5]        # 0x1400100d8
   14000a4e3:	test   eax,eax
   14000a4e5:	jne    0x14000a3f4
   14000a4eb:	jmp    0x14000a493
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	int3   
   14000a4f1:	int3   
   14000a4f2:	int3   
   14000a4f3:	int3   
   14000a4f4:	xor    r9d,r9d
   14000a4f7:	jmp    0x14000a378
   14000a4fc:	int3   
   14000a4fd:	int3   
   14000a4fe:	int3   
   14000a4ff:	int3   
   14000a500:	int3   
   14000a501:	int3   
   14000a502:	int3   
   14000a503:	int3   
   14000a504:	rex push rbx
   14000a506:	sub    rsp,0x40
   14000a50a:	mov    ebx,ecx
   14000a50c:	lea    rcx,[rsp+0x20]
   14000a511:	call   0x140003f18
   14000a516:	mov    rax,QWORD PTR [rsp+0x20]
   14000a51b:	movzx  r11d,bl
   14000a51f:	mov    rcx,QWORD PTR [rax+0x140]
   14000a526:	movzx  eax,WORD PTR [rcx+r11*2]
   14000a52b:	and    eax,0x8000
   14000a530:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a535:	je     0x14000a543
   14000a537:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a53c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a543:	add    rsp,0x40
   14000a547:	pop    rbx
   14000a548:	ret    
   14000a549:	int3   
   14000a54a:	int3   
   14000a54b:	int3   
   14000a54c:	int3   
   14000a54d:	int3   
   14000a54e:	int3   
   14000a54f:	int3   
   14000a550:	rex push rbx
   14000a552:	sub    rsp,0x40
   14000a556:	mov    ebx,ecx
   14000a558:	lea    rcx,[rsp+0x20]
   14000a55d:	xor    edx,edx
   14000a55f:	call   0x140003f18
   14000a564:	mov    rax,QWORD PTR [rsp+0x20]
   14000a569:	movzx  r11d,bl
   14000a56d:	mov    rcx,QWORD PTR [rax+0x140]
   14000a574:	movzx  eax,WORD PTR [rcx+r11*2]
   14000a579:	and    eax,0x8000
   14000a57e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a583:	je     0x14000a591
   14000a585:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a58a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a591:	add    rsp,0x40
   14000a595:	pop    rbx
   14000a596:	ret    
   14000a597:	int3   
   14000a598:	int3   
   14000a599:	int3   
   14000a59a:	int3   
   14000a59b:	int3   
   14000a59c:	int3   
   14000a59d:	int3   
   14000a59e:	int3   
   14000a59f:	int3   
   14000a5a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a5a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000a5aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000a5af:	push   rdi
   14000a5b0:	sub    rsp,0x20
   14000a5b4:	mov    rbp,r8
   14000a5b7:	mov    rsi,rdx
   14000a5ba:	mov    rbx,rcx
   14000a5bd:	test   rcx,rcx
   14000a5c0:	jne    0x14000a5c7
   14000a5c2:	call   0x140008444
   14000a5c7:	movsxd rax,DWORD PTR [rbx+0x18]
   14000a5cb:	mov    edi,DWORD PTR [rbx+0x14]
   14000a5ce:	add    rax,QWORD PTR [rsi+0x8]
   14000a5d2:	jne    0x14000a5d9
   14000a5d4:	call   0x140008444
   14000a5d9:	xor    ecx,ecx
   14000a5db:	test   edi,edi
   14000a5dd:	je     0x14000a612
   14000a5df:	mov    r9,QWORD PTR [rsi+0x8]
   14000a5e3:	movsxd r8,DWORD PTR [rbx+0x18]
   14000a5e7:	lea    rdx,[r9+r8*1]
   14000a5eb:	movsxd rax,DWORD PTR [rdx]
   14000a5ee:	add    rax,r9
   14000a5f1:	cmp    rbp,rax
   14000a5f4:	jl     0x14000a600
   14000a5f6:	inc    ecx
   14000a5f8:	add    rdx,0x8
   14000a5fc:	cmp    ecx,edi
   14000a5fe:	jb     0x14000a5eb
   14000a600:	test   ecx,ecx
   14000a602:	je     0x14000a612
   14000a604:	lea    eax,[rcx-0x1]
   14000a607:	lea    rdx,[r8+rax*8]
   14000a60b:	mov    eax,DWORD PTR [rdx+r9*1+0x4]
   14000a610:	jmp    0x14000a615
   14000a612:	or     eax,0xffffffff
   14000a615:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a61a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a61f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a624:	add    rsp,0x20
   14000a628:	pop    rdi
   14000a629:	ret    
   14000a62a:	int3   
   14000a62b:	int3   
   14000a62c:	int3   
   14000a62d:	int3   
   14000a62e:	int3   
   14000a62f:	int3   
   14000a630:	mov    r8,QWORD PTR [rdx]
   14000a633:	jmp    0x14000a5a0
   14000a638:	int3   
   14000a639:	int3   
   14000a63a:	int3   
   14000a63b:	int3   
   14000a63c:	int3   
   14000a63d:	int3   
   14000a63e:	int3   
   14000a63f:	int3   
   14000a640:	sub    rsp,0x28
   14000a644:	movsxd r9,DWORD PTR [r8+0x1c]
   14000a648:	mov    rax,QWORD PTR [rcx]
   14000a64b:	mov    r10,r8
   14000a64e:	mov    eax,DWORD PTR [r9+rax*1]
   14000a652:	cmp    eax,0xfffffffe
   14000a655:	jne    0x14000a662
   14000a657:	mov    r8,QWORD PTR [rdx]
   14000a65a:	mov    rcx,r10
   14000a65d:	call   0x14000a5a0
   14000a662:	add    rsp,0x28
   14000a666:	ret    
   14000a667:	int3   
   14000a668:	int3   
   14000a669:	int3   
   14000a66a:	int3   
   14000a66b:	int3   
   14000a66c:	int3   
   14000a66d:	int3   
   14000a66e:	int3   
   14000a66f:	int3   
   14000a670:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000a674:	mov    rax,QWORD PTR [rcx]
   14000a677:	mov    DWORD PTR [rdx+rax*1],r9d
   14000a67b:	ret    
   14000a67c:	int3   
   14000a67d:	int3   
   14000a67e:	int3   
   14000a67f:	int3   
   14000a680:	int3   
   14000a681:	int3   
   14000a682:	int3   
   14000a683:	int3   
   14000a684:	mov    QWORD PTR [rsp+0x8],rbx
   14000a689:	push   rdi
   14000a68a:	sub    rsp,0x20
   14000a68e:	mov    edi,r9d
   14000a691:	lea    r9,[rsp+0x40]
   14000a696:	mov    rbx,r8
   14000a699:	call   0x140006f3c
   14000a69e:	mov    rcx,QWORD PTR [rax]
   14000a6a1:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000a6a5:	mov    QWORD PTR [rsp+0x40],rcx
   14000a6aa:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000a6ae:	jle    0x14000a6b4
   14000a6b0:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000a6b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6b9:	add    rsp,0x20
   14000a6bd:	pop    rdi
   14000a6be:	ret    
   14000a6bf:	int3   
   14000a6c0:	int3   
   14000a6c1:	int3   
   14000a6c2:	int3   
   14000a6c3:	int3   
   14000a6c4:	int3   
   14000a6c5:	int3   
   14000a6c6:	int3   
   14000a6c7:	int3   
   14000a6c8:	rex push rbx
   14000a6ca:	sub    rsp,0x20
   14000a6ce:	lea    r9,[rsp+0x40]
   14000a6d3:	mov    rbx,r8
   14000a6d6:	call   0x140006f3c
   14000a6db:	mov    rcx,QWORD PTR [rax]
   14000a6de:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000a6e2:	mov    QWORD PTR [rsp+0x40],rcx
   14000a6e7:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000a6eb:	add    rsp,0x20
   14000a6ef:	pop    rbx
   14000a6f0:	ret    
   14000a6f1:	int3   
   14000a6f2:	int3   
   14000a6f3:	int3   
   14000a6f4:	int3   
   14000a6f5:	int3   
   14000a6f6:	int3   
   14000a6f7:	int3   
   14000a6f8:	lea    rax,[rip+0x6ec1]        # 0x1400115c0
   14000a6ff:	mov    QWORD PTR [rcx],rax
   14000a702:	jmp    0x14000bc04
   14000a707:	int3   
   14000a708:	int3   
   14000a709:	int3   
   14000a70a:	int3   
   14000a70b:	int3   
   14000a70c:	int3   
   14000a70d:	int3   
   14000a70e:	int3   
   14000a70f:	int3   
   14000a710:	mov    QWORD PTR [rsp+0x8],rbx
   14000a715:	push   rdi
   14000a716:	sub    rsp,0x20
   14000a71a:	lea    rax,[rip+0x6e9f]        # 0x1400115c0
   14000a721:	mov    ebx,edx
   14000a723:	mov    rdi,rcx
   14000a726:	mov    QWORD PTR [rcx],rax
   14000a729:	call   0x14000bc04
   14000a72e:	test   bl,0x1
   14000a731:	je     0x14000a73b
   14000a733:	mov    rcx,rdi
   14000a736:	call   0x140003c2c
   14000a73b:	mov    rax,rdi
   14000a73e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a743:	add    rsp,0x20
   14000a747:	pop    rdi
   14000a748:	ret    
   14000a749:	int3   
   14000a74a:	int3   
   14000a74b:	int3   
   14000a74c:	int3   
   14000a74d:	int3   
   14000a74e:	int3   
   14000a74f:	int3   
   14000a750:	mov    rax,rsp
   14000a753:	mov    QWORD PTR [rax+0x8],rbx
   14000a757:	mov    QWORD PTR [rax+0x10],rbp
   14000a75b:	mov    QWORD PTR [rax+0x18],rsi
   14000a75f:	mov    QWORD PTR [rax+0x20],rdi
   14000a763:	push   r12
   14000a765:	sub    rsp,0x20
   14000a769:	mov    esi,DWORD PTR [rcx+0x4]
   14000a76c:	xor    ebx,ebx
   14000a76e:	mov    r12,r8
   14000a771:	mov    rbp,rdx
   14000a774:	mov    rdi,rcx
   14000a777:	test   esi,esi
   14000a779:	je     0x14000a789
   14000a77b:	movsxd rsi,esi
   14000a77e:	call   0x14000702c
   14000a783:	lea    r11,[rsi+rax*1]
   14000a787:	jmp    0x14000a78c
   14000a789:	mov    r11,rbx
   14000a78c:	test   r11,r11
   14000a78f:	je     0x14000a853
   14000a795:	test   esi,esi
   14000a797:	je     0x14000a7a8
   14000a799:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000a79d:	call   0x14000702c
   14000a7a2:	lea    r11,[rsi+rax*1]
   14000a7a6:	jmp    0x14000a7ab
   14000a7a8:	mov    r11,rbx
   14000a7ab:	cmp    BYTE PTR [r11+0x10],bl
   14000a7af:	je     0x14000a853
   14000a7b5:	test   esi,esi
   14000a7b7:	je     0x14000a7ca
   14000a7b9:	call   0x14000702c
   14000a7be:	mov    rsi,rax
   14000a7c1:	movsxd rax,DWORD PTR [rdi+0x4]
   14000a7c5:	add    rsi,rax
   14000a7c8:	jmp    0x14000a7cd
   14000a7ca:	mov    rsi,rbx
   14000a7cd:	call   0x140007048
   14000a7d2:	mov    r11,rax
   14000a7d5:	movsxd rax,DWORD PTR [rbp+0x4]
   14000a7d9:	add    r11,rax
   14000a7dc:	cmp    rsi,r11
   14000a7df:	je     0x14000a81c
   14000a7e1:	cmp    DWORD PTR [rdi+0x4],ebx
   14000a7e4:	je     0x14000a7f7
   14000a7e6:	call   0x14000702c
   14000a7eb:	mov    rsi,rax
   14000a7ee:	movsxd rax,DWORD PTR [rdi+0x4]
   14000a7f2:	add    rsi,rax
   14000a7f5:	jmp    0x14000a7fa
   14000a7f7:	mov    rsi,rbx
   14000a7fa:	call   0x140007048
   14000a7ff:	lea    rcx,[rsi+0x10]
   14000a803:	mov    r11,rax
   14000a806:	movsxd rax,DWORD PTR [rbp+0x4]
   14000a80a:	lea    rdx,[r11+rax*1+0x10]
   14000a80f:	call   0x14000ca60
   14000a814:	test   eax,eax
   14000a816:	je     0x14000a81c
   14000a818:	xor    eax,eax
   14000a81a:	jmp    0x14000a858
   14000a81c:	mov    al,0x2
   14000a81e:	test   BYTE PTR [rbp+0x0],al
   14000a821:	je     0x14000a828
   14000a823:	test   BYTE PTR [rdi],0x8
   14000a826:	je     0x14000a84f
   14000a828:	test   BYTE PTR [r12],0x1
   14000a82d:	je     0x14000a834
   14000a82f:	test   BYTE PTR [rdi],0x1
   14000a832:	je     0x14000a84f
   14000a834:	test   BYTE PTR [r12],0x4
   14000a839:	je     0x14000a840
   14000a83b:	test   BYTE PTR [rdi],0x4
   14000a83e:	je     0x14000a84f
   14000a840:	test   BYTE PTR [r12],al
   14000a844:	je     0x14000a84a
   14000a846:	test   BYTE PTR [rdi],al
   14000a848:	je     0x14000a84f
   14000a84a:	mov    ebx,0x1
   14000a84f:	mov    eax,ebx
   14000a851:	jmp    0x14000a858
   14000a853:	mov    eax,0x1
   14000a858:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a85d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a862:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a867:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a86c:	add    rsp,0x20
   14000a870:	pop    r12
   14000a872:	ret    
   14000a873:	int3   
   14000a874:	int3   
   14000a875:	int3   
   14000a876:	int3   
   14000a877:	int3   
   14000a878:	int3   
   14000a879:	int3   
   14000a87a:	int3   
   14000a87b:	int3   
   14000a87c:	sub    rsp,0x28
   14000a880:	mov    rax,QWORD PTR [rcx]
   14000a883:	cmp    DWORD PTR [rax],0xe0434352
   14000a889:	je     0x14000a8ad
   14000a88b:	cmp    DWORD PTR [rax],0xe0434f4d
   14000a891:	je     0x14000a8ad
   14000a893:	cmp    DWORD PTR [rax],0xe06d7363
   14000a899:	jne    0x14000a8c6
   14000a89b:	call   0x1400055c4
   14000a8a0:	and    DWORD PTR [rax+0x100],0x0
   14000a8a7:	call   0x140008418
   14000a8ac:	int3   
   14000a8ad:	call   0x1400055c4
   14000a8b2:	cmp    DWORD PTR [rax+0x100],0x0
   14000a8b9:	jle    0x14000a8c6
   14000a8bb:	call   0x1400055c4
   14000a8c0:	dec    DWORD PTR [rax+0x100]
   14000a8c6:	xor    eax,eax
   14000a8c8:	add    rsp,0x28
   14000a8cc:	ret    
   14000a8cd:	int3   
   14000a8ce:	int3   
   14000a8cf:	int3   
   14000a8d0:	int3   
   14000a8d1:	int3   
   14000a8d2:	int3   
   14000a8d3:	int3   
   14000a8d4:	mov    rax,rsp
   14000a8d7:	mov    DWORD PTR [rax+0x20],r9d
   14000a8db:	mov    QWORD PTR [rax+0x18],r8
   14000a8df:	mov    QWORD PTR [rax+0x10],rdx
   14000a8e3:	mov    QWORD PTR [rax+0x8],rcx
   14000a8e7:	push   rbx
   14000a8e8:	push   rsi
   14000a8e9:	push   rdi
   14000a8ea:	push   r12
   14000a8ec:	push   r13
   14000a8ee:	push   r14
   14000a8f0:	push   r15
   14000a8f2:	sub    rsp,0x30
   14000a8f6:	mov    r13d,r9d
   14000a8f9:	mov    rsi,r8
   14000a8fc:	mov    r15,rdx
   14000a8ff:	mov    r14,rcx
   14000a902:	call   0x14000a640
   14000a907:	mov    edi,eax
   14000a909:	call   0x14000702c
   14000a90e:	mov    QWORD PTR [rsp+0x28],rax
   14000a913:	call   0x1400055c4
   14000a918:	inc    DWORD PTR [rax+0x100]
   14000a91e:	cmp    edi,0xffffffff
   14000a921:	je     0x14000aa14
   14000a927:	cmp    edi,r13d
   14000a92a:	jle    0x14000aa14
   14000a930:	cmp    edi,0xffffffff
   14000a933:	jle    0x14000a93a
   14000a935:	cmp    edi,DWORD PTR [rsi+0x4]
   14000a938:	jl     0x14000a93f
   14000a93a:	call   0x140008444
   14000a93f:	movsxd r12,edi
   14000a942:	call   0x14000702c
   14000a947:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000a94b:	lea    rax,[rax+r12*8]
   14000a94f:	mov    edi,DWORD PTR [rcx+rax*1]
   14000a952:	mov    DWORD PTR [rsp+0x20],edi
   14000a956:	call   0x14000702c
   14000a95b:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000a95f:	lea    rax,[rax+r12*8]
   14000a963:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000a968:	je     0x14000a986
   14000a96a:	call   0x14000702c
   14000a96f:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000a973:	lea    rax,[rax+r12*8]
   14000a977:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000a97c:	call   0x14000702c
   14000a981:	add    rax,rbx
   14000a984:	jmp    0x14000a988
   14000a986:	xor    eax,eax
   14000a988:	test   rax,rax
   14000a98b:	je     0x14000a9eb
   14000a98d:	mov    r9d,edi
   14000a990:	mov    r8,rsi
   14000a993:	mov    rdx,r15
   14000a996:	mov    rcx,r14
   14000a999:	call   0x14000a670
   14000a99e:	call   0x14000702c
   14000a9a3:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000a9a7:	lea    rax,[rax+r12*8]
   14000a9ab:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000a9b0:	je     0x14000a9ce
   14000a9b2:	call   0x14000702c
   14000a9b7:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000a9bb:	lea    rax,[rax+r12*8]
   14000a9bf:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000a9c4:	call   0x14000702c
   14000a9c9:	add    rax,rbx
   14000a9cc:	jmp    0x14000a9d0
   14000a9ce:	xor    eax,eax
   14000a9d0:	mov    r8d,0x103
   14000a9d6:	mov    rdx,r14
   14000a9d9:	mov    rcx,rax
   14000a9dc:	call   0x14000d7c0
   14000a9e1:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a9e6:	call   0x140007064
   14000a9eb:	jmp    0x14000aa0b
   14000a9ed:	mov    r13d,DWORD PTR [rsp+0x88]
   14000a9f5:	mov    rsi,QWORD PTR [rsp+0x80]
   14000a9fd:	mov    r15,QWORD PTR [rsp+0x78]
   14000aa02:	mov    r14,QWORD PTR [rsp+0x70]
   14000aa07:	mov    edi,DWORD PTR [rsp+0x20]
   14000aa0b:	mov    DWORD PTR [rsp+0x24],edi
   14000aa0f:	jmp    0x14000a91e
   14000aa14:	call   0x1400055c4
   14000aa19:	cmp    DWORD PTR [rax+0x100],0x0
   14000aa20:	jle    0x14000aa2d
   14000aa22:	call   0x1400055c4
   14000aa27:	dec    DWORD PTR [rax+0x100]
   14000aa2d:	cmp    edi,0xffffffff
   14000aa30:	je     0x14000aa3c
   14000aa32:	cmp    edi,r13d
   14000aa35:	jle    0x14000aa3c
   14000aa37:	call   0x140008444
   14000aa3c:	mov    r9d,edi
   14000aa3f:	mov    r8,rsi
   14000aa42:	mov    rdx,r15
   14000aa45:	mov    rcx,r14
   14000aa48:	call   0x14000a670
   14000aa4d:	add    rsp,0x30
   14000aa51:	pop    r15
   14000aa53:	pop    r14
   14000aa55:	pop    r13
   14000aa57:	pop    r12
   14000aa59:	pop    rdi
   14000aa5a:	pop    rsi
   14000aa5b:	pop    rbx
   14000aa5c:	ret    
   14000aa5d:	int3   
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	int3   
   14000aa61:	int3   
   14000aa62:	int3   
   14000aa63:	int3   
   14000aa64:	test   rcx,rcx
   14000aa67:	je     0x14000aaa5
   14000aa69:	mov    BYTE PTR [rsp+0x10],dl
   14000aa6d:	sub    rsp,0x28
   14000aa71:	cmp    DWORD PTR [rcx],0xe06d7363
   14000aa77:	jne    0x14000aaa1
   14000aa79:	mov    rax,QWORD PTR [rcx+0x30]
   14000aa7d:	test   rax,rax
   14000aa80:	je     0x14000aaa1
   14000aa82:	cmp    DWORD PTR [rax+0x4],0x0
   14000aa86:	je     0x14000aaa1
   14000aa88:	movsxd rax,DWORD PTR [rax+0x4]
   14000aa8c:	mov    rdx,QWORD PTR [rcx+0x38]
   14000aa90:	add    rdx,rax
   14000aa93:	mov    rcx,QWORD PTR [rcx+0x28]
   14000aa97:	call   rdx
   14000aa99:	jmp    0x14000aaa1
   14000aa9b:	call   0x140008418
   14000aaa0:	nop
   14000aaa1:	add    rsp,0x28
   14000aaa5:	ret    
   14000aaa6:	int3   
   14000aaa7:	int3   
   14000aaa8:	int3   
   14000aaa9:	int3   
   14000aaaa:	int3   
   14000aaab:	int3   
   14000aaac:	movsxd rax,DWORD PTR [rdx]
   14000aaaf:	add    rax,rcx
   14000aab2:	cmp    DWORD PTR [rdx+0x4],0x0
   14000aab6:	jl     0x14000aace
   14000aab8:	movsxd r9,DWORD PTR [rdx+0x4]
   14000aabc:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000aac0:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000aac4:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000aac8:	add    r8,r9
   14000aacb:	add    rax,r8
   14000aace:	ret    
   14000aacf:	int3   
   14000aad0:	int3   
   14000aad1:	int3   
   14000aad2:	int3   
   14000aad3:	int3   
   14000aad4:	int3   
   14000aad5:	int3   
   14000aad6:	int3   
   14000aad7:	int3   
   14000aad8:	mov    QWORD PTR [rsp+0x8],rbx
   14000aadd:	mov    QWORD PTR [rsp+0x10],rbp
   14000aae2:	mov    QWORD PTR [rsp+0x18],rsi
   14000aae7:	push   rdi
   14000aae8:	push   r12
   14000aaea:	push   r13
   14000aaec:	push   r14
   14000aaee:	push   r15
   14000aaf0:	sub    rsp,0x20
   14000aaf4:	mov    rsi,rdx
   14000aaf7:	mov    r14,rcx
   14000aafa:	test   rdx,rdx
   14000aafd:	jne    0x14000ab0a
   14000aaff:	call   0x140008444
   14000ab04:	call   0x140008418
   14000ab09:	int3   
   14000ab0a:	xor    edi,edi
   14000ab0c:	xor    r12b,r12b
   14000ab0f:	cmp    DWORD PTR [rdx],edi
   14000ab11:	jle    0x14000ab8b
   14000ab13:	call   0x140007048
   14000ab18:	mov    r11,rax
   14000ab1b:	mov    rax,QWORD PTR [r14+0x30]
   14000ab1f:	movsxd rcx,DWORD PTR [rax+0xc]
   14000ab23:	lea    r13,[r11+rcx*1+0x4]
   14000ab28:	call   0x140007048
   14000ab2d:	mov    r11,rax
   14000ab30:	mov    rax,QWORD PTR [r14+0x30]
   14000ab34:	movsxd rcx,DWORD PTR [rax+0xc]
   14000ab38:	mov    ebp,DWORD PTR [r11+rcx*1]
   14000ab3c:	test   ebp,ebp
   14000ab3e:	jle    0x14000ab85
   14000ab40:	movsxd rax,edi
   14000ab43:	lea    r15,[rax+rax*4]
   14000ab47:	call   0x140007048
   14000ab4c:	mov    rbx,rax
   14000ab4f:	movsxd rax,DWORD PTR [r13+0x0]
   14000ab53:	add    rbx,rax
   14000ab56:	call   0x14000702c
   14000ab5b:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000ab5f:	mov    r8,QWORD PTR [r14+0x30]
   14000ab63:	lea    rax,[rax+r15*4]
   14000ab67:	mov    rdx,rbx
   14000ab6a:	add    rcx,rax
   14000ab6d:	call   0x14000a750
   14000ab72:	test   eax,eax
   14000ab74:	jne    0x14000ab82
   14000ab76:	dec    ebp
   14000ab78:	add    r13,0x4
   14000ab7c:	test   ebp,ebp
   14000ab7e:	jg     0x14000ab47
   14000ab80:	jmp    0x14000ab85
   14000ab82:	mov    r12b,0x1
   14000ab85:	inc    edi
   14000ab87:	cmp    edi,DWORD PTR [rsi]
   14000ab89:	jl     0x14000ab13
   14000ab8b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ab90:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ab95:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ab9a:	mov    al,r12b
   14000ab9d:	add    rsp,0x20
   14000aba1:	pop    r15
   14000aba3:	pop    r14
   14000aba5:	pop    r13
   14000aba7:	pop    r12
   14000aba9:	pop    rdi
   14000abaa:	ret    
   14000abab:	int3   
   14000abac:	int3   
   14000abad:	int3   
   14000abae:	int3   
   14000abaf:	int3   
   14000abb0:	int3   
   14000abb1:	int3   
   14000abb2:	int3   
   14000abb3:	int3   
   14000abb4:	rex push rbx
   14000abb6:	push   rsi
   14000abb7:	push   rdi
   14000abb8:	push   r12
   14000abba:	push   r13
   14000abbc:	push   r14
   14000abbe:	push   r15
   14000abc0:	sub    rsp,0x80
   14000abc7:	mov    rdi,rcx
   14000abca:	xor    r13d,r13d
   14000abcd:	mov    DWORD PTR [rsp+0x20],r13d
   14000abd2:	and    DWORD PTR [rsp+0xc0],r13d
   14000abda:	and    QWORD PTR [rsp+0x48],r13
   14000abdf:	and    QWORD PTR [rsp+0x40],r13
   14000abe4:	call   0x1400055c4
   14000abe9:	mov    rax,QWORD PTR [rax+0xf8]
   14000abf0:	mov    QWORD PTR [rsp+0xd8],rax
   14000abf8:	call   0x1400055c4
   14000abfd:	mov    rax,QWORD PTR [rax+0xf0]
   14000ac04:	mov    QWORD PTR [rsp+0xd0],rax
   14000ac0c:	mov    rsi,QWORD PTR [rdi+0x50]
   14000ac10:	mov    QWORD PTR [rsp+0xc8],rsi
   14000ac18:	mov    rax,QWORD PTR [rdi+0x48]
   14000ac1c:	mov    QWORD PTR [rsp+0x38],rax
   14000ac21:	mov    rbx,QWORD PTR [rdi+0x40]
   14000ac25:	mov    r15,QWORD PTR [rdi+0x30]
   14000ac29:	mov    r12,QWORD PTR [rdi+0x28]
   14000ac2d:	mov    QWORD PTR [rsp+0x60],r12
   14000ac32:	call   0x1400055c4
   14000ac37:	mov    QWORD PTR [rax+0xf0],rsi
   14000ac3e:	call   0x1400055c4
   14000ac43:	mov    QWORD PTR [rax+0xf8],rbx
   14000ac4a:	call   0x1400055c4
   14000ac4f:	mov    rdx,QWORD PTR [rax+0xf0]
   14000ac56:	mov    rdx,QWORD PTR [rdx+0x28]
   14000ac5a:	lea    rcx,[rsp+0x70]
   14000ac5f:	call   0x140007420
   14000ac64:	mov    r14,rax
   14000ac67:	mov    QWORD PTR [rsp+0x50],rax
   14000ac6c:	cmp    QWORD PTR [rdi+0x58],r13
   14000ac70:	je     0x14000ac8e
   14000ac72:	mov    DWORD PTR [rsp+0xc0],0x1
   14000ac7d:	call   0x1400055c4
   14000ac82:	mov    rcx,QWORD PTR [rax+0x138]
   14000ac89:	mov    QWORD PTR [rsp+0x40],rcx
   14000ac8e:	mov    r8d,0x100
   14000ac94:	mov    rdx,r12
   14000ac97:	mov    rcx,r15
   14000ac9a:	call   0x14000d7c0
   14000ac9f:	mov    rbx,rax
   14000aca2:	mov    QWORD PTR [rsp+0x48],rax
   14000aca7:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000acaf:	mov    r15,QWORD PTR [rsp+0xd0]
   14000acb7:	jmp    0x14000ad36
   14000acb9:	mov    DWORD PTR [rsp+0x20],0x1
   14000acc1:	call   0x1400055c4
   14000acc6:	and    DWORD PTR [rax+0x2c0],0x0
   14000accd:	mov    rsi,QWORD PTR [rsp+0xc8]
   14000acd5:	cmp    DWORD PTR [rsp+0xc0],0x0
   14000acdd:	je     0x14000acff
   14000acdf:	mov    dl,0x1
   14000ace1:	mov    rcx,rsi
   14000ace4:	call   0x14000aa64
   14000ace9:	mov    r11,QWORD PTR [rsp+0x40]
   14000acee:	lea    r9,[r11+0x20]
   14000acf2:	mov    r8d,DWORD PTR [r11+0x18]
   14000acf6:	mov    edx,DWORD PTR [r11+0x4]
   14000acfa:	mov    ecx,DWORD PTR [r11]
   14000acfd:	jmp    0x14000ad0c
   14000acff:	lea    r9,[rsi+0x20]
   14000ad03:	mov    r8d,DWORD PTR [rsi+0x18]
   14000ad07:	mov    edx,DWORD PTR [rsi+0x4]
   14000ad0a:	mov    ecx,DWORD PTR [rsi]
   14000ad0c:	call   QWORD PTR [rip+0x532e]        # 0x140010040
   14000ad12:	mov    r13d,DWORD PTR [rsp+0x20]
   14000ad17:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ad1c:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000ad24:	mov    r15,QWORD PTR [rsp+0xd0]
   14000ad2c:	mov    r12,QWORD PTR [rsp+0x60]
   14000ad31:	mov    r14,QWORD PTR [rsp+0x50]
   14000ad36:	mov    rcx,r14
   14000ad39:	call   0x1400074a4
   14000ad3e:	test   r13d,r13d
   14000ad41:	jne    0x14000ad83
   14000ad43:	cmp    DWORD PTR [rsi],0xe06d7363
   14000ad49:	jne    0x14000ad83
   14000ad4b:	cmp    DWORD PTR [rsi+0x18],0x4
   14000ad4f:	jne    0x14000ad83
   14000ad51:	cmp    DWORD PTR [rsi+0x20],0x19930520
   14000ad58:	je     0x14000ad6c
   14000ad5a:	cmp    DWORD PTR [rsi+0x20],0x19930521
   14000ad61:	je     0x14000ad6c
   14000ad63:	cmp    DWORD PTR [rsi+0x20],0x19930522
   14000ad6a:	jne    0x14000ad83
   14000ad6c:	mov    rcx,QWORD PTR [rsi+0x28]
   14000ad70:	call   0x14000746c
   14000ad75:	test   eax,eax
   14000ad77:	je     0x14000ad83
   14000ad79:	mov    dl,0x1
   14000ad7b:	mov    rcx,rsi
   14000ad7e:	call   0x14000aa64
   14000ad83:	call   0x1400055c4
   14000ad88:	mov    QWORD PTR [rax+0xf0],r15
   14000ad8f:	call   0x1400055c4
   14000ad94:	mov    QWORD PTR [rax+0xf8],rdi
   14000ad9b:	mov    rax,QWORD PTR [rsp+0x38]
   14000ada0:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000ada4:	mov    rax,QWORD PTR [r12]
   14000ada8:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000adb0:	mov    rax,rbx
   14000adb3:	add    rsp,0x80
   14000adba:	pop    r15
   14000adbc:	pop    r14
   14000adbe:	pop    r13
   14000adc0:	pop    r12
   14000adc2:	pop    rdi
   14000adc3:	pop    rsi
   14000adc4:	pop    rbx
   14000adc5:	ret    
   14000adc6:	int3   
   14000adc7:	int3   
   14000adc8:	int3   
   14000adc9:	int3   
   14000adca:	int3   
   14000adcb:	int3   
   14000adcc:	mov    QWORD PTR [rsp+0x8],rbx
   14000add1:	mov    QWORD PTR [rsp+0x10],rsi
   14000add6:	mov    QWORD PTR [rsp+0x18],rdi
   14000addb:	push   r12
   14000addd:	push   r13
   14000addf:	push   r14
   14000ade1:	sub    rsp,0x30
   14000ade5:	mov    rsi,r9
   14000ade8:	mov    rdi,r8
   14000adeb:	mov    r12,rdx
   14000adee:	mov    r14,rcx
   14000adf1:	xor    ebx,ebx
   14000adf3:	mov    r13d,DWORD PTR [r8+0x4]
   14000adf7:	test   r13d,r13d
   14000adfa:	je     0x14000ae0b
   14000adfc:	movsxd r13,r13d
   14000adff:	call   0x14000702c
   14000ae04:	lea    r11,[r13+rax*1+0x0]
   14000ae09:	jmp    0x14000ae0e
   14000ae0b:	mov    r11,rbx
   14000ae0e:	test   r11,r11
   14000ae11:	je     0x14000afb2
   14000ae17:	test   r13d,r13d
   14000ae1a:	je     0x14000ae2d
   14000ae1c:	call   0x14000702c
   14000ae21:	mov    r11,rax
   14000ae24:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ae28:	add    r11,rax
   14000ae2b:	jmp    0x14000ae30
   14000ae2d:	mov    r11,rbx
   14000ae30:	cmp    BYTE PTR [r11+0x10],bl
   14000ae34:	je     0x14000afb2
   14000ae3a:	cmp    DWORD PTR [rdi+0x8],ebx
   14000ae3d:	jne    0x14000ae4b
   14000ae3f:	test   DWORD PTR [rdi],0x80000000
   14000ae45:	je     0x14000afb2
   14000ae4b:	mov    ecx,DWORD PTR [rdi]
   14000ae4d:	test   ecx,ecx
   14000ae4f:	js     0x14000ae5c
   14000ae51:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ae55:	add    rax,QWORD PTR [r12]
   14000ae59:	mov    r12,rax
   14000ae5c:	mov    edi,0x1
   14000ae61:	test   cl,0x8
   14000ae64:	je     0x14000aea5
   14000ae66:	mov    edx,edi
   14000ae68:	mov    rcx,QWORD PTR [r14+0x28]
   14000ae6c:	call   0x14000d810
   14000ae71:	test   eax,eax
   14000ae73:	je     0x14000afa2
   14000ae79:	mov    edx,edi
   14000ae7b:	mov    rcx,r12
   14000ae7e:	call   0x14000d810
   14000ae83:	test   eax,eax
   14000ae85:	je     0x14000afa2
   14000ae8b:	mov    rcx,QWORD PTR [r14+0x28]
   14000ae8f:	mov    QWORD PTR [r12],rcx
   14000ae93:	lea    rdx,[rsi+0x8]
   14000ae97:	call   0x14000aaac
   14000ae9c:	mov    QWORD PTR [r12],rax
   14000aea0:	jmp    0x14000afa8
   14000aea5:	test   BYTE PTR [rsi],dil
   14000aea8:	je     0x14000aef9
   14000aeaa:	mov    edx,edi
   14000aeac:	mov    rcx,QWORD PTR [r14+0x28]
   14000aeb0:	call   0x14000d810
   14000aeb5:	test   eax,eax
   14000aeb7:	je     0x14000afa2
   14000aebd:	mov    edx,edi
   14000aebf:	mov    rcx,r12
   14000aec2:	call   0x14000d810
   14000aec7:	test   eax,eax
   14000aec9:	je     0x14000afa2
   14000aecf:	movsxd r8,DWORD PTR [rsi+0x14]
   14000aed3:	mov    rdx,QWORD PTR [r14+0x28]
   14000aed7:	mov    rcx,r12
   14000aeda:	call   0x140006c00
   14000aedf:	cmp    DWORD PTR [rsi+0x14],0x8
   14000aee3:	jne    0x14000afa8
   14000aee9:	cmp    QWORD PTR [r12],rbx
   14000aeed:	je     0x14000afa8
   14000aef3:	mov    rcx,QWORD PTR [r12]
   14000aef7:	jmp    0x14000ae93
   14000aef9:	cmp    DWORD PTR [rsi+0x18],ebx
   14000aefc:	je     0x14000af0f
   14000aefe:	call   0x140007048
   14000af03:	mov    r11,rax
   14000af06:	movsxd rax,DWORD PTR [rsi+0x18]
   14000af0a:	add    r11,rax
   14000af0d:	jmp    0x14000af12
   14000af0f:	mov    r11,rbx
   14000af12:	mov    edx,edi
   14000af14:	mov    rcx,QWORD PTR [r14+0x28]
   14000af18:	test   r11,r11
   14000af1b:	jne    0x14000af55
   14000af1d:	call   0x14000d810
   14000af22:	test   eax,eax
   14000af24:	je     0x14000afa2
   14000af26:	mov    edx,edi
   14000af28:	mov    rcx,r12
   14000af2b:	call   0x14000d810
   14000af30:	test   eax,eax
   14000af32:	je     0x14000afa2
   14000af34:	movsxd r10,DWORD PTR [rsi+0x14]
   14000af38:	lea    rdx,[rsi+0x8]
   14000af3c:	mov    rcx,QWORD PTR [r14+0x28]
   14000af40:	call   0x14000aaac
   14000af45:	mov    rdx,rax
   14000af48:	mov    r8,r10
   14000af4b:	mov    rcx,r12
   14000af4e:	call   0x140006c00
   14000af53:	jmp    0x14000afa8
   14000af55:	call   0x14000d810
   14000af5a:	test   eax,eax
   14000af5c:	je     0x14000afa2
   14000af5e:	mov    edx,edi
   14000af60:	mov    rcx,r12
   14000af63:	call   0x14000d810
   14000af68:	test   eax,eax
   14000af6a:	je     0x14000afa2
   14000af6c:	cmp    DWORD PTR [rsi+0x18],ebx
   14000af6f:	je     0x14000af82
   14000af71:	call   0x140007048
   14000af76:	mov    rcx,rax
   14000af79:	movsxd rax,DWORD PTR [rsi+0x18]
   14000af7d:	add    rcx,rax
   14000af80:	jmp    0x14000af85
   14000af82:	mov    rcx,rbx
   14000af85:	call   0x14000d810
   14000af8a:	test   eax,eax
   14000af8c:	je     0x14000afa2
   14000af8e:	mov    al,BYTE PTR [rsi]
   14000af90:	and    al,0x4
   14000af92:	neg    al
   14000af94:	sbb    ecx,ecx
   14000af96:	neg    ecx
   14000af98:	add    ecx,edi
   14000af9a:	mov    ebx,ecx
   14000af9c:	mov    DWORD PTR [rsp+0x20],ecx
   14000afa0:	jmp    0x14000afa8
   14000afa2:	call   0x140008444
   14000afa7:	nop
   14000afa8:	mov    eax,ebx
   14000afaa:	jmp    0x14000afb4
   14000afac:	call   0x140008418
   14000afb1:	nop
   14000afb2:	xor    eax,eax
   14000afb4:	mov    rbx,QWORD PTR [rsp+0x50]
   14000afb9:	mov    rsi,QWORD PTR [rsp+0x58]
   14000afbe:	mov    rdi,QWORD PTR [rsp+0x60]
   14000afc3:	add    rsp,0x30
   14000afc7:	pop    r14
   14000afc9:	pop    r13
   14000afcb:	pop    r12
   14000afcd:	ret    
   14000afce:	int3   
   14000afcf:	int3   
   14000afd0:	int3   
   14000afd1:	int3   
   14000afd2:	int3   
   14000afd3:	int3   
   14000afd4:	mov    QWORD PTR [rsp+0x8],rbx
   14000afd9:	mov    QWORD PTR [rsp+0x10],rsi
   14000afde:	push   rdi
   14000afdf:	sub    rsp,0x20
   14000afe3:	mov    rbx,r9
   14000afe6:	mov    rsi,rcx
   14000afe9:	test   DWORD PTR [r8],0x80000000
   14000aff0:	je     0x14000aff7
   14000aff2:	mov    rdi,rdx
   14000aff5:	jmp    0x14000affe
   14000aff7:	movsxd rdi,DWORD PTR [r8+0x8]
   14000affb:	add    rdi,QWORD PTR [rdx]
   14000affe:	call   0x14000adcc
   14000b003:	dec    eax
   14000b005:	je     0x14000b041
   14000b007:	dec    eax
   14000b009:	jne    0x14000b06c
   14000b00b:	xor    r10d,r10d
   14000b00e:	cmp    DWORD PTR [rbx+0x18],r10d
   14000b012:	je     0x14000b023
   14000b014:	call   0x140007048
   14000b019:	mov    r10,rax
   14000b01c:	movsxd rax,DWORD PTR [rbx+0x18]
   14000b020:	add    r10,rax
   14000b023:	lea    rdx,[rbx+0x8]
   14000b027:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b02b:	call   0x14000aaac
   14000b030:	mov    rdx,rax
   14000b033:	mov    r8d,0x1
   14000b039:	mov    rcx,rdi
   14000b03c:	call   r10
   14000b03f:	jmp    0x14000b06c
   14000b041:	xor    r10d,r10d
   14000b044:	cmp    DWORD PTR [rbx+0x18],r10d
   14000b048:	je     0x14000b056
   14000b04a:	call   0x140007048
   14000b04f:	movsxd r10,DWORD PTR [rbx+0x18]
   14000b053:	add    r10,rax
   14000b056:	lea    rdx,[rbx+0x8]
   14000b05a:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b05e:	call   0x14000aaac
   14000b063:	mov    rdx,rax
   14000b066:	mov    rcx,rdi
   14000b069:	call   r10
   14000b06c:	jmp    0x14000b074
   14000b06e:	call   0x140008418
   14000b073:	nop
   14000b074:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b079:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b07e:	add    rsp,0x20
   14000b082:	pop    rdi
   14000b083:	ret    
   14000b084:	int3   
   14000b085:	int3   
   14000b086:	int3   
   14000b087:	int3   
   14000b088:	int3   
   14000b089:	int3   
   14000b08a:	int3   
   14000b08b:	int3   
   14000b08c:	mov    rax,rsp
   14000b08f:	mov    QWORD PTR [rax+0x8],rbx
   14000b093:	mov    QWORD PTR [rax+0x18],rbp
   14000b097:	push   rsi
   14000b098:	push   rdi
   14000b099:	push   r12
   14000b09b:	push   r13
   14000b09d:	push   r14
   14000b09f:	sub    rsp,0x50
   14000b0a3:	mov    r13,QWORD PTR [rsp+0xa0]
   14000b0ab:	mov    rbp,r9
   14000b0ae:	mov    r12,rdx
   14000b0b1:	mov    r14,r8
   14000b0b4:	mov    rbx,rcx
   14000b0b7:	lea    r9,[rax+0x10]
   14000b0bb:	mov    r8,r13
   14000b0be:	mov    rdx,rbp
   14000b0c1:	mov    rcx,r12
   14000b0c4:	call   0x140006f3c
   14000b0c9:	mov    r9,QWORD PTR [rsp+0xb0]
   14000b0d1:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b0d9:	mov    rdi,rax
   14000b0dc:	test   r9,r9
   14000b0df:	je     0x14000b0ef
   14000b0e1:	mov    r8,rsi
   14000b0e4:	mov    rdx,rax
   14000b0e7:	mov    rcx,rbx
   14000b0ea:	call   0x14000afd4
   14000b0ef:	call   0x14000702c
   14000b0f4:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000b0f8:	mov    r9,rdi
   14000b0fb:	add    rax,rcx
   14000b0fe:	mov    cl,BYTE PTR [rsp+0xc0]
   14000b105:	mov    r8,r14
   14000b108:	mov    BYTE PTR [rsp+0x40],cl
   14000b10c:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000b114:	mov    QWORD PTR [rsp+0x38],rbp
   14000b119:	mov    edx,DWORD PTR [rcx]
   14000b11b:	mov    QWORD PTR [rsp+0x30],r13
   14000b120:	mov    rcx,r12
   14000b123:	mov    DWORD PTR [rsp+0x28],edx
   14000b127:	mov    rdx,rbx
   14000b12a:	mov    QWORD PTR [rsp+0x20],rax
   14000b12f:	call   0x140007508
   14000b134:	lea    r11,[rsp+0x50]
   14000b139:	mov    rbx,QWORD PTR [r11+0x30]
   14000b13d:	mov    rbp,QWORD PTR [r11+0x40]
   14000b141:	mov    rsp,r11
   14000b144:	pop    r14
   14000b146:	pop    r13
   14000b148:	pop    r12
   14000b14a:	pop    rdi
   14000b14b:	pop    rsi
   14000b14c:	ret    
   14000b14d:	int3   
   14000b14e:	int3   
   14000b14f:	int3   
   14000b150:	int3   
   14000b151:	int3   
   14000b152:	int3   
   14000b153:	int3   
   14000b154:	mov    QWORD PTR [rsp+0x10],rbx
   14000b159:	mov    QWORD PTR [rsp+0x18],r8
   14000b15e:	push   rbp
   14000b15f:	push   rsi
   14000b160:	push   rdi
   14000b161:	push   r12
   14000b163:	push   r13
   14000b165:	push   r14
   14000b167:	push   r15
   14000b169:	sub    rsp,0x60
   14000b16d:	cmp    DWORD PTR [rcx],0x80000003
   14000b173:	mov    r14,r9
   14000b176:	mov    r12,r8
   14000b179:	mov    r15,rdx
   14000b17c:	mov    rsi,rcx
   14000b17f:	je     0x14000b374
   14000b185:	call   0x1400055c4
   14000b18a:	mov    edi,DWORD PTR [rsp+0xd0]
   14000b191:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000b199:	cmp    QWORD PTR [rax+0xe0],0x0
   14000b1a1:	je     0x14000b1f8
   14000b1a3:	call   0x1400055c4
   14000b1a8:	mov    rbx,rax
   14000b1ab:	call   0x140005440
   14000b1b0:	cmp    QWORD PTR [rbx+0xe0],rax
   14000b1b7:	je     0x14000b1f8
   14000b1b9:	cmp    DWORD PTR [rsi],0xe0434f4d
   14000b1bf:	je     0x14000b1f8
   14000b1c1:	cmp    DWORD PTR [rsi],0xe0434352
   14000b1c7:	je     0x14000b1f8
   14000b1c9:	mov    rax,QWORD PTR [rsp+0xd8]
   14000b1d1:	mov    r9,r14
   14000b1d4:	mov    r8,r12
   14000b1d7:	mov    QWORD PTR [rsp+0x30],rax
   14000b1dc:	mov    rdx,r15
   14000b1df:	mov    rcx,rsi
   14000b1e2:	mov    DWORD PTR [rsp+0x28],edi
   14000b1e6:	mov    QWORD PTR [rsp+0x20],rbp
   14000b1eb:	call   0x140007298
   14000b1f0:	test   eax,eax
   14000b1f2:	jne    0x14000b374
   14000b1f8:	cmp    DWORD PTR [rbp+0xc],0x0
   14000b1fc:	jne    0x14000b203
   14000b1fe:	call   0x140008444
   14000b203:	mov    r12d,DWORD PTR [rsp+0xc8]
   14000b20b:	lea    rax,[rsp+0x50]
   14000b210:	mov    QWORD PTR [rsp+0x30],r14
   14000b215:	mov    QWORD PTR [rsp+0x28],rax
   14000b21a:	lea    rax,[rsp+0xa0]
   14000b222:	mov    r8d,edi
   14000b225:	mov    r9d,r12d
   14000b228:	mov    rdx,rbp
   14000b22b:	mov    rcx,r15
   14000b22e:	mov    QWORD PTR [rsp+0x20],rax
   14000b233:	call   0x1400072f0
   14000b238:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000b23f:	cmp    ecx,DWORD PTR [rsp+0x50]
   14000b243:	jae    0x14000b374
   14000b249:	lea    rdi,[rax+0xc]
   14000b24d:	lea    r13,[rdi-0xc]
   14000b251:	cmp    r12d,DWORD PTR [r13+0x0]
   14000b255:	jl     0x14000b35d
   14000b25b:	cmp    r12d,DWORD PTR [rdi-0x8]
   14000b25f:	jg     0x14000b35d
   14000b265:	call   0x14000702c
   14000b26a:	movsxd rcx,DWORD PTR [rdi]
   14000b26d:	lea    rdx,[rcx+rcx*4]
   14000b271:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b275:	lea    rdx,[rcx+rdx*4]
   14000b279:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000b27e:	je     0x14000b2a3
   14000b280:	call   0x14000702c
   14000b285:	movsxd rcx,DWORD PTR [rdi]
   14000b288:	lea    rdx,[rcx+rcx*4]
   14000b28c:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b290:	lea    rdx,[rcx+rdx*4]
   14000b294:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000b299:	call   0x14000702c
   14000b29e:	add    rax,rbx
   14000b2a1:	jmp    0x14000b2a5
   14000b2a3:	xor    eax,eax
   14000b2a5:	test   rax,rax
   14000b2a8:	je     0x14000b2f0
   14000b2aa:	call   0x14000702c
   14000b2af:	movsxd rcx,DWORD PTR [rdi]
   14000b2b2:	lea    rdx,[rcx+rcx*4]
   14000b2b6:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b2ba:	lea    rdx,[rcx+rdx*4]
   14000b2be:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000b2c3:	je     0x14000b2e8
   14000b2c5:	call   0x14000702c
   14000b2ca:	movsxd rcx,DWORD PTR [rdi]
   14000b2cd:	lea    rdx,[rcx+rcx*4]
   14000b2d1:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b2d5:	lea    rdx,[rcx+rdx*4]
   14000b2d9:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000b2de:	call   0x14000702c
   14000b2e3:	add    rax,rbx
   14000b2e6:	jmp    0x14000b2ea
   14000b2e8:	xor    eax,eax
   14000b2ea:	cmp    BYTE PTR [rax+0x10],0x0
   14000b2ee:	jne    0x14000b356
   14000b2f0:	call   0x14000702c
   14000b2f5:	movsxd rcx,DWORD PTR [rdi]
   14000b2f8:	lea    rdx,[rcx+rcx*4]
   14000b2fc:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000b300:	lea    rdx,[rcx+rdx*4]
   14000b304:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000b309:	jne    0x14000b356
   14000b30b:	call   0x14000702c
   14000b310:	mov    ecx,DWORD PTR [rdi]
   14000b312:	mov    r8,QWORD PTR [rsp+0xb0]
   14000b31a:	dec    ecx
   14000b31c:	mov    BYTE PTR [rsp+0x40],0x0
   14000b321:	mov    QWORD PTR [rsp+0x38],r13
   14000b326:	and    QWORD PTR [rsp+0x30],0x0
   14000b32c:	movsxd rcx,ecx
   14000b32f:	mov    r9,r14
   14000b332:	lea    rdx,[rcx+rcx*4]
   14000b336:	lea    rcx,[rax+rdx*4]
   14000b33a:	movsxd rax,DWORD PTR [rdi+0x4]
   14000b33e:	mov    rdx,r15
   14000b341:	add    rcx,rax
   14000b344:	mov    QWORD PTR [rsp+0x28],rcx
   14000b349:	mov    rcx,rsi
   14000b34c:	mov    QWORD PTR [rsp+0x20],rbp
   14000b351:	call   0x14000b08c
   14000b356:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000b35d:	inc    ecx
   14000b35f:	add    rdi,0x14
   14000b363:	mov    DWORD PTR [rsp+0xa0],ecx
   14000b36a:	cmp    ecx,DWORD PTR [rsp+0x50]
   14000b36e:	jb     0x14000b24d
   14000b374:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000b37c:	add    rsp,0x60
   14000b380:	pop    r15
   14000b382:	pop    r14
   14000b384:	pop    r13
   14000b386:	pop    r12
   14000b388:	pop    rdi
   14000b389:	pop    rsi
   14000b38a:	pop    rbp
   14000b38b:	ret    
   14000b38c:	int3   
   14000b38d:	int3   
   14000b38e:	int3   
   14000b38f:	int3   
   14000b390:	int3   
   14000b391:	int3   
   14000b392:	int3   
   14000b393:	int3   
   14000b394:	mov    rax,rsp
   14000b397:	mov    QWORD PTR [rax+0x20],rbx
   14000b39b:	mov    QWORD PTR [rax+0x18],r8
   14000b39f:	mov    QWORD PTR [rax+0x10],rdx
   14000b3a3:	push   rbp
   14000b3a4:	push   rsi
   14000b3a5:	push   rdi
   14000b3a6:	push   r12
   14000b3a8:	push   r13
   14000b3aa:	push   r14
   14000b3ac:	push   r15
   14000b3ae:	lea    rbp,[rax-0x3f]
   14000b3b2:	sub    rsp,0x90
   14000b3b9:	mov    rbx,QWORD PTR [rbp+0x67]
   14000b3bd:	mov    r13,rdx
   14000b3c0:	mov    rdi,rcx
   14000b3c3:	xor    r14b,r14b
   14000b3c6:	mov    rdx,r9
   14000b3c9:	mov    rcx,rbx
   14000b3cc:	mov    r15,r9
   14000b3cf:	mov    r12,r8
   14000b3d2:	mov    BYTE PTR [rbp+0x47],r14b
   14000b3d6:	call   0x14000a630
   14000b3db:	lea    r9,[rbp-0x21]
   14000b3df:	mov    r8,rbx
   14000b3e2:	mov    rdx,r15
   14000b3e5:	mov    rcx,r13
   14000b3e8:	mov    esi,eax
   14000b3ea:	call   0x140006f3c
   14000b3ef:	mov    r8,rbx
   14000b3f2:	mov    rdx,r15
   14000b3f5:	mov    rcx,r13
   14000b3f8:	call   0x14000a6c8
   14000b3fd:	mov    r8,rbx
   14000b400:	mov    rdx,r15
   14000b403:	cmp    esi,eax
   14000b405:	jle    0x14000b426
   14000b407:	lea    rcx,[rbp-0x21]
   14000b40b:	mov    r9d,esi
   14000b40e:	call   0x14000a670
   14000b413:	mov    r9d,esi
   14000b416:	mov    r8,rbx
   14000b419:	mov    rdx,r15
   14000b41c:	mov    rcx,r13
   14000b41f:	call   0x14000a684
   14000b424:	jmp    0x14000b430
   14000b426:	mov    rcx,r13
   14000b429:	call   0x14000a6c8
   14000b42e:	mov    esi,eax
   14000b430:	cmp    esi,0xffffffff
   14000b433:	jl     0x14000b43a
   14000b435:	cmp    esi,DWORD PTR [rbx+0x4]
   14000b438:	jl     0x14000b43f
   14000b43a:	call   0x140008444
   14000b43f:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b445:	jne    0x14000b823
   14000b44b:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b44f:	jne    0x14000b5e6
   14000b455:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14000b45c:	je     0x14000b474
   14000b45e:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14000b465:	je     0x14000b474
   14000b467:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14000b46e:	jne    0x14000b5e6
   14000b474:	cmp    QWORD PTR [rdi+0x30],0x0
   14000b479:	jne    0x14000b5e6
   14000b47f:	call   0x1400055c4
   14000b484:	cmp    QWORD PTR [rax+0xf0],0x0
   14000b48c:	je     0x14000b808
   14000b492:	call   0x1400055c4
   14000b497:	mov    rdi,QWORD PTR [rax+0xf0]
   14000b49e:	call   0x1400055c4
   14000b4a3:	mov    rcx,QWORD PTR [rdi+0x38]
   14000b4a7:	mov    r12,QWORD PTR [rax+0xf8]
   14000b4ae:	mov    QWORD PTR [rbp+0x57],r12
   14000b4b2:	call   0x140007088
   14000b4b7:	mov    edx,0x1
   14000b4bc:	mov    rcx,rdi
   14000b4bf:	call   0x14000d810
   14000b4c4:	test   eax,eax
   14000b4c6:	jne    0x14000b4cd
   14000b4c8:	call   0x140008444
   14000b4cd:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b4d3:	jne    0x14000b502
   14000b4d5:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b4d9:	jne    0x14000b502
   14000b4db:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14000b4e2:	je     0x14000b4f6
   14000b4e4:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14000b4eb:	je     0x14000b4f6
   14000b4ed:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14000b4f4:	jne    0x14000b502
   14000b4f6:	cmp    QWORD PTR [rdi+0x30],0x0
   14000b4fb:	jne    0x14000b502
   14000b4fd:	call   0x140008444
   14000b502:	call   0x1400055c4
   14000b507:	cmp    QWORD PTR [rax+0x108],0x0
   14000b50f:	je     0x14000b5e6
   14000b515:	call   0x1400055c4
   14000b51a:	mov    r12,QWORD PTR [rax+0x108]
   14000b521:	call   0x1400055c4
   14000b526:	mov    rdx,r12
   14000b529:	and    QWORD PTR [rax+0x108],0x0
   14000b531:	mov    rcx,rdi
   14000b534:	call   0x14000aad8
   14000b539:	test   al,al
   14000b53b:	jne    0x14000b5e2
   14000b541:	xor    r13d,r13d
   14000b544:	cmp    DWORD PTR [r12],r13d
   14000b548:	jle    0x14000b59e
   14000b54a:	xor    esi,esi
   14000b54c:	call   0x14000702c
   14000b551:	movsxd rcx,DWORD PTR [r12+0x4]
   14000b556:	add    rax,rsi
   14000b559:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000b55e:	je     0x14000b57c
   14000b560:	call   0x14000702c
   14000b565:	movsxd rcx,DWORD PTR [r12+0x4]
   14000b56a:	add    rax,rsi
   14000b56d:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000b572:	call   0x14000702c
   14000b577:	add    rax,rbx
   14000b57a:	jmp    0x14000b57e
   14000b57c:	xor    eax,eax
   14000b57e:	lea    rdx,[rip+0xac8b]        # 0x140016210
   14000b585:	mov    rcx,rax
   14000b588:	call   0x14000bccc
   14000b58d:	test   al,al
   14000b58f:	jne    0x14000b5a4
   14000b591:	inc    r13d
   14000b594:	add    rsi,0x14
   14000b598:	cmp    r13d,DWORD PTR [r12]
   14000b59c:	jl     0x14000b54c
   14000b59e:	call   0x140008418
   14000b5a3:	int3   
   14000b5a4:	mov    dl,0x1
   14000b5a6:	mov    rcx,rdi
   14000b5a9:	call   0x14000aa64
   14000b5ae:	lea    r11,[rip+0x601b]        # 0x1400115d0
   14000b5b5:	lea    rdx,[rbp+0x47]
   14000b5b9:	lea    rcx,[rbp-0x11]
   14000b5bd:	mov    QWORD PTR [rbp+0x47],r11
   14000b5c1:	call   0x14000bb84
   14000b5c6:	lea    r11,[rip+0x5ff3]        # 0x1400115c0
   14000b5cd:	lea    rdx,[rip+0x8a3c]        # 0x140014010
   14000b5d4:	lea    rcx,[rbp-0x11]
   14000b5d8:	mov    QWORD PTR [rbp-0x11],r11
   14000b5dc:	call   0x14000bdac
   14000b5e1:	int3   
   14000b5e2:	mov    r12,QWORD PTR [rbp+0x57]
   14000b5e6:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b5ec:	jne    0x14000b823
   14000b5f2:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b5f6:	jne    0x14000b823
   14000b5fc:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14000b603:	je     0x14000b61b
   14000b605:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14000b60c:	je     0x14000b61b
   14000b60e:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14000b615:	jne    0x14000b823
   14000b61b:	cmp    DWORD PTR [rbx+0xc],0x0
   14000b61f:	jbe    0x14000b768
   14000b625:	mov    r8d,DWORD PTR [rbp+0x77]
   14000b629:	lea    rax,[rbp-0x31]
   14000b62d:	mov    QWORD PTR [rsp+0x30],r15
   14000b632:	mov    QWORD PTR [rsp+0x28],rax
   14000b637:	lea    rax,[rbp-0x39]
   14000b63b:	mov    r9d,esi
   14000b63e:	mov    rdx,rbx
   14000b641:	mov    rcx,r13
   14000b644:	mov    QWORD PTR [rsp+0x20],rax
   14000b649:	call   0x1400072f0
   14000b64e:	mov    ecx,DWORD PTR [rbp-0x39]
   14000b651:	mov    edx,DWORD PTR [rbp-0x31]
   14000b654:	cmp    ecx,edx
   14000b656:	jae    0x14000b768
   14000b65c:	lea    r12,[rax+0x10]
   14000b660:	cmp    DWORD PTR [r12-0x10],esi
   14000b665:	jg     0x14000b74e
   14000b66b:	cmp    esi,DWORD PTR [r12-0xc]
   14000b670:	jg     0x14000b74e
   14000b676:	call   0x14000702c
   14000b67b:	movsxd r13,DWORD PTR [r12]
   14000b67f:	mov    r14d,DWORD PTR [r12-0x4]
   14000b684:	add    r13,rax
   14000b687:	test   r14d,r14d
   14000b68a:	jle    0x14000b740
   14000b690:	call   0x140007048
   14000b695:	mov    rcx,QWORD PTR [rdi+0x30]
   14000b699:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b69d:	lea    rax,[rax+rdx*1+0x4]
   14000b6a2:	mov    QWORD PTR [rbp-0x29],rax
   14000b6a6:	call   0x140007048
   14000b6ab:	mov    rcx,QWORD PTR [rdi+0x30]
   14000b6af:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b6b3:	mov    ecx,DWORD PTR [rax+rdx*1]
   14000b6b6:	mov    DWORD PTR [rbp-0x35],ecx
   14000b6b9:	test   ecx,ecx
   14000b6bb:	jle    0x14000b6f4
   14000b6bd:	call   0x140007048
   14000b6c2:	mov    rcx,QWORD PTR [rbp-0x29]
   14000b6c6:	mov    r8,QWORD PTR [rdi+0x30]
   14000b6ca:	movsxd rcx,DWORD PTR [rcx]
   14000b6cd:	add    rax,rcx
   14000b6d0:	mov    rcx,r13
   14000b6d3:	mov    rdx,rax
   14000b6d6:	mov    QWORD PTR [rbp-0x19],rax
   14000b6da:	call   0x14000a750
   14000b6df:	test   eax,eax
   14000b6e1:	jne    0x14000b6fd
   14000b6e3:	mov    eax,DWORD PTR [rbp-0x35]
   14000b6e6:	add    QWORD PTR [rbp-0x29],0x4
   14000b6eb:	dec    eax
   14000b6ed:	mov    DWORD PTR [rbp-0x35],eax
   14000b6f0:	test   eax,eax
   14000b6f2:	jg     0x14000b6bd
   14000b6f4:	dec    r14d
   14000b6f7:	add    r13,0x14
   14000b6fb:	jmp    0x14000b687
   14000b6fd:	mov    al,BYTE PTR [rbp+0x6f]
   14000b700:	mov    r8,QWORD PTR [rbp+0x57]
   14000b704:	mov    r14b,0x1
   14000b707:	mov    BYTE PTR [rsp+0x40],al
   14000b70b:	lea    rax,[r12-0x10]
   14000b710:	mov    r9,r15
   14000b713:	mov    QWORD PTR [rsp+0x38],rax
   14000b718:	mov    rax,QWORD PTR [rbp-0x19]
   14000b71c:	mov    rcx,rdi
   14000b71f:	mov    QWORD PTR [rsp+0x30],rax
   14000b724:	mov    QWORD PTR [rsp+0x28],r13
   14000b729:	mov    r13,QWORD PTR [rbp+0x4f]
   14000b72d:	mov    rdx,r13
   14000b730:	mov    BYTE PTR [rbp+0x47],r14b
   14000b734:	mov    QWORD PTR [rsp+0x20],rbx
   14000b739:	call   0x14000b08c
   14000b73e:	jmp    0x14000b748
   14000b740:	mov    r14b,BYTE PTR [rbp+0x47]
   14000b744:	mov    r13,QWORD PTR [rbp+0x4f]
   14000b748:	mov    edx,DWORD PTR [rbp-0x31]
   14000b74b:	mov    ecx,DWORD PTR [rbp-0x39]
   14000b74e:	inc    ecx
   14000b750:	add    r12,0x14
   14000b754:	mov    DWORD PTR [rbp-0x39],ecx
   14000b757:	cmp    ecx,edx
   14000b759:	jb     0x14000b660
   14000b75f:	test   r14b,r14b
   14000b762:	jne    0x14000b7f4
   14000b768:	mov    eax,DWORD PTR [rbx]
   14000b76a:	and    eax,0x1fffffff
   14000b76f:	cmp    eax,0x19930521
   14000b774:	jb     0x14000b7f4
   14000b776:	mov    esi,DWORD PTR [rbx+0x20]
   14000b779:	test   esi,esi
   14000b77b:	je     0x14000b78a
   14000b77d:	movsxd rsi,esi
   14000b780:	call   0x14000702c
   14000b785:	add    rax,rsi
   14000b788:	jmp    0x14000b78c
   14000b78a:	xor    eax,eax
   14000b78c:	test   rax,rax
   14000b78f:	je     0x14000b7f4
   14000b791:	test   esi,esi
   14000b793:	je     0x14000b7a6
   14000b795:	call   0x14000702c
   14000b79a:	mov    rdx,rax
   14000b79d:	movsxd rax,DWORD PTR [rbx+0x20]
   14000b7a1:	add    rdx,rax
   14000b7a4:	jmp    0x14000b7a8
   14000b7a6:	xor    edx,edx
   14000b7a8:	mov    rcx,rdi
   14000b7ab:	call   0x14000aad8
   14000b7b0:	test   al,al
   14000b7b2:	jne    0x14000b7f4
   14000b7b4:	lea    r9,[rbp+0x47]
   14000b7b8:	mov    r8,rbx
   14000b7bb:	mov    rdx,r15
   14000b7be:	mov    rcx,r13
   14000b7c1:	call   0x140006f3c
   14000b7c6:	mov    cl,BYTE PTR [rbp+0x6f]
   14000b7c9:	mov    r8,QWORD PTR [rbp+0x57]
   14000b7cd:	mov    BYTE PTR [rsp+0x40],cl
   14000b7d1:	mov    QWORD PTR [rsp+0x38],r15
   14000b7d6:	mov    QWORD PTR [rsp+0x30],rbx
   14000b7db:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000b7e0:	and    QWORD PTR [rsp+0x20],0x0
   14000b7e6:	mov    r9,rax
   14000b7e9:	mov    rdx,rdi
   14000b7ec:	mov    rcx,r13
   14000b7ef:	call   0x140007508
   14000b7f4:	call   0x1400055c4
   14000b7f9:	cmp    QWORD PTR [rax+0x108],0x0
   14000b801:	je     0x14000b808
   14000b803:	call   0x140008444
   14000b808:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000b810:	add    rsp,0x90
   14000b817:	pop    r15
   14000b819:	pop    r14
   14000b81b:	pop    r13
   14000b81d:	pop    r12
   14000b81f:	pop    rdi
   14000b820:	pop    rsi
   14000b821:	pop    rbp
   14000b822:	ret    
   14000b823:	cmp    DWORD PTR [rbx+0xc],0x0
   14000b827:	jbe    0x14000b7f4
   14000b829:	cmp    BYTE PTR [rbp+0x6f],0x0
   14000b82d:	jne    0x14000b85b
   14000b82f:	mov    rax,QWORD PTR [rbp+0x7f]
   14000b833:	mov    r9,r15
   14000b836:	mov    r8,r12
   14000b839:	mov    QWORD PTR [rsp+0x38],rax
   14000b83e:	mov    eax,DWORD PTR [rbp+0x77]
   14000b841:	mov    rdx,r13
   14000b844:	mov    DWORD PTR [rsp+0x30],eax
   14000b848:	mov    rcx,rdi
   14000b84b:	mov    DWORD PTR [rsp+0x28],esi
   14000b84f:	mov    QWORD PTR [rsp+0x20],rbx
   14000b854:	call   0x14000b154
   14000b859:	jmp    0x14000b7f4
   14000b85b:	call   0x140008418
   14000b860:	int3   
   14000b861:	int3   
   14000b862:	int3   
   14000b863:	int3   
   14000b864:	int3   
   14000b865:	int3   
   14000b866:	int3   
   14000b867:	int3   
   14000b868:	rex push rbx
   14000b86a:	sub    rsp,0x20
   14000b86e:	mov    rbx,rcx
   14000b871:	call   0x14000bc5c
   14000b876:	lea    r11,[rip+0x5d43]        # 0x1400115c0
   14000b87d:	mov    QWORD PTR [rbx],r11
   14000b880:	mov    rax,rbx
   14000b883:	add    rsp,0x20
   14000b887:	pop    rbx
   14000b888:	ret    
   14000b889:	int3   
   14000b88a:	int3   
   14000b88b:	int3   
   14000b88c:	int3   
   14000b88d:	int3   
   14000b88e:	int3   
   14000b88f:	int3   
   14000b890:	mov    QWORD PTR [rsp+0x8],rbx
   14000b895:	mov    QWORD PTR [rsp+0x10],rbp
   14000b89a:	mov    QWORD PTR [rsp+0x18],rsi
   14000b89f:	push   rdi
   14000b8a0:	push   r12
   14000b8a2:	push   r14
   14000b8a4:	sub    rsp,0x40
   14000b8a8:	mov    rbp,r9
   14000b8ab:	mov    r12,r8
   14000b8ae:	mov    rsi,rdx
   14000b8b1:	mov    rbx,rcx
   14000b8b4:	call   0x1400055c4
   14000b8b9:	mov    rdi,QWORD PTR [rsp+0x80]
   14000b8c1:	cmp    DWORD PTR [rax+0x2c0],0x0
   14000b8c8:	mov    edx,0x1fffffff
   14000b8cd:	mov    r8d,0x80000029
   14000b8d3:	mov    r9d,0x80000026
   14000b8d9:	mov    r14d,0x1
   14000b8df:	jne    0x14000b919
   14000b8e1:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b8e7:	je     0x14000b919
   14000b8e9:	cmp    DWORD PTR [rbx],r8d
   14000b8ec:	jne    0x14000b8fe
   14000b8ee:	cmp    DWORD PTR [rbx+0x18],0xf
   14000b8f2:	jne    0x14000b8fe
   14000b8f4:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000b8fc:	je     0x14000b919
   14000b8fe:	cmp    DWORD PTR [rbx],r9d
   14000b901:	je     0x14000b919
   14000b903:	mov    ecx,DWORD PTR [rdi]
   14000b905:	and    ecx,edx
   14000b907:	cmp    ecx,0x19930522
   14000b90d:	jb     0x14000b919
   14000b90f:	test   BYTE PTR [rdi+0x24],r14b
   14000b913:	jne    0x14000ba99
   14000b919:	mov    eax,DWORD PTR [rbx+0x4]
   14000b91c:	test   al,0x66
   14000b91e:	je     0x14000b9b7
   14000b924:	cmp    DWORD PTR [rdi+0x4],0x0
   14000b928:	je     0x14000ba99
   14000b92e:	cmp    DWORD PTR [rsp+0x88],0x0
   14000b936:	jne    0x14000ba99
   14000b93c:	and    eax,0x20
   14000b93f:	je     0x14000b980
   14000b941:	cmp    DWORD PTR [rbx],r9d
   14000b944:	jne    0x14000b980
   14000b946:	mov    r8,QWORD PTR [r12+0xf8]
   14000b94e:	mov    rdx,rbp
   14000b951:	mov    rcx,rdi
   14000b954:	call   0x14000a5a0
   14000b959:	mov    ebx,eax
   14000b95b:	cmp    eax,0xffffffff
   14000b95e:	jl     0x14000b965
   14000b960:	cmp    eax,DWORD PTR [rdi+0x4]
   14000b963:	jl     0x14000b96a
   14000b965:	call   0x140008444
   14000b96a:	mov    r9d,ebx
   14000b96d:	mov    rcx,rsi
   14000b970:	mov    rdx,rbp
   14000b973:	mov    r8,rdi
   14000b976:	call   0x14000a8d4
   14000b97b:	jmp    0x14000ba99
   14000b980:	test   eax,eax
   14000b982:	je     0x14000b9a4
   14000b984:	cmp    DWORD PTR [rbx],r8d
   14000b987:	jne    0x14000b9a4
   14000b989:	mov    esi,DWORD PTR [rbx+0x38]
   14000b98c:	cmp    esi,0xffffffff
   14000b98f:	jl     0x14000b996
   14000b991:	cmp    esi,DWORD PTR [rdi+0x4]
   14000b994:	jl     0x14000b99b
   14000b996:	call   0x140008444
   14000b99b:	mov    rcx,QWORD PTR [rbx+0x28]
   14000b99f:	mov    r9d,esi
   14000b9a2:	jmp    0x14000b970
   14000b9a4:	mov    r8,rdi
   14000b9a7:	mov    rdx,rbp
   14000b9aa:	mov    rcx,rsi
   14000b9ad:	call   0x1400070ac
   14000b9b2:	jmp    0x14000ba99
   14000b9b7:	cmp    DWORD PTR [rdi+0xc],0x0
   14000b9bb:	jne    0x14000b9eb
   14000b9bd:	mov    eax,DWORD PTR [rdi]
   14000b9bf:	and    eax,edx
   14000b9c1:	cmp    eax,0x19930521
   14000b9c6:	jb     0x14000ba99
   14000b9cc:	cmp    DWORD PTR [rdi+0x20],0x0
   14000b9d0:	je     0x14000b9e0
   14000b9d2:	call   0x14000702c
   14000b9d7:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000b9db:	add    rax,rcx
   14000b9de:	jmp    0x14000b9e2
   14000b9e0:	xor    eax,eax
   14000b9e2:	test   rax,rax
   14000b9e5:	je     0x14000ba99
   14000b9eb:	cmp    DWORD PTR [rbx],0xe06d7363
   14000b9f1:	jne    0x14000ba60
   14000b9f3:	cmp    DWORD PTR [rbx+0x18],0x3
   14000b9f7:	jb     0x14000ba60
   14000b9f9:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000ba00:	jbe    0x14000ba60
   14000ba02:	mov    rax,QWORD PTR [rbx+0x30]
   14000ba06:	cmp    DWORD PTR [rax+0x8],0x0
   14000ba0a:	je     0x14000ba1e
   14000ba0c:	call   0x140007048
   14000ba11:	mov    rcx,QWORD PTR [rbx+0x30]
   14000ba15:	movsxd r11,DWORD PTR [rcx+0x8]
   14000ba19:	add    r11,rax
   14000ba1c:	jmp    0x14000ba21
   14000ba1e:	xor    r11d,r11d
   14000ba21:	test   r11,r11
   14000ba24:	je     0x14000ba60
   14000ba26:	movzx  eax,BYTE PTR [rsp+0x98]
   14000ba2e:	mov    r9,rbp
   14000ba31:	mov    r8,r12
   14000ba34:	mov    DWORD PTR [rsp+0x38],eax
   14000ba38:	mov    rax,QWORD PTR [rsp+0x90]
   14000ba40:	mov    rdx,rsi
   14000ba43:	mov    QWORD PTR [rsp+0x30],rax
   14000ba48:	mov    eax,DWORD PTR [rsp+0x88]
   14000ba4f:	mov    rcx,rbx
   14000ba52:	mov    DWORD PTR [rsp+0x28],eax
   14000ba56:	mov    QWORD PTR [rsp+0x20],rdi
   14000ba5b:	call   r11
   14000ba5e:	jmp    0x14000ba9c
   14000ba60:	mov    rax,QWORD PTR [rsp+0x90]
   14000ba68:	mov    r9,rbp
   14000ba6b:	mov    r8,r12
   14000ba6e:	mov    QWORD PTR [rsp+0x38],rax
   14000ba73:	mov    eax,DWORD PTR [rsp+0x88]
   14000ba7a:	mov    rdx,rsi
   14000ba7d:	mov    DWORD PTR [rsp+0x30],eax
   14000ba81:	mov    al,BYTE PTR [rsp+0x98]
   14000ba88:	mov    rcx,rbx
   14000ba8b:	mov    BYTE PTR [rsp+0x28],al
   14000ba8f:	mov    QWORD PTR [rsp+0x20],rdi
   14000ba94:	call   0x14000b394
   14000ba99:	mov    eax,r14d
   14000ba9c:	mov    rbx,QWORD PTR [rsp+0x60]
   14000baa1:	mov    rbp,QWORD PTR [rsp+0x68]
   14000baa6:	mov    rsi,QWORD PTR [rsp+0x70]
   14000baab:	add    rsp,0x40
   14000baaf:	pop    r14
   14000bab1:	pop    r12
   14000bab3:	pop    rdi
   14000bab4:	ret    
   14000bab5:	int3   
   14000bab6:	int3   
   14000bab7:	int3   
   14000bab8:	int3   
   14000bab9:	int3   
   14000baba:	int3   
   14000babb:	int3   
   14000babc:	lea    rax,[rip+0x5b25]        # 0x1400115e8
   14000bac3:	mov    QWORD PTR [rcx],rax
   14000bac6:	mov    rax,QWORD PTR [rdx]
   14000bac9:	mov    BYTE PTR [rcx+0x10],0x0
   14000bacd:	mov    QWORD PTR [rcx+0x8],rax
   14000bad1:	mov    rax,rcx
   14000bad4:	ret    
   14000bad5:	int3   
   14000bad6:	int3   
   14000bad7:	int3   
   14000bad8:	int3   
   14000bad9:	int3   
   14000bada:	int3   
   14000badb:	int3   
   14000badc:	cmp    QWORD PTR [rcx+0x8],0x0
   14000bae1:	lea    rax,[rip+0x5b10]        # 0x1400115f8
   14000bae8:	cmovne rax,QWORD PTR [rcx+0x8]
   14000baed:	ret    
   14000baee:	int3   
   14000baef:	int3   
   14000baf0:	int3   
   14000baf1:	int3   
   14000baf2:	int3   
   14000baf3:	int3   
   14000baf4:	test   rdx,rdx
   14000baf7:	je     0x14000bb4d
   14000baf9:	mov    QWORD PTR [rsp+0x8],rbx
   14000bafe:	mov    QWORD PTR [rsp+0x10],rsi
   14000bb03:	push   rdi
   14000bb04:	sub    rsp,0x20
   14000bb08:	mov    rdi,rcx
   14000bb0b:	mov    rcx,rdx
   14000bb0e:	mov    rbx,rdx
   14000bb11:	call   0x140008d20
   14000bb16:	mov    rsi,rax
   14000bb19:	lea    rcx,[rax+0x1]
   14000bb1d:	call   0x14000bcf0
   14000bb22:	mov    QWORD PTR [rdi+0x8],rax
   14000bb26:	test   rax,rax
   14000bb29:	je     0x14000bb3e
   14000bb2b:	lea    rdx,[rsi+0x1]
   14000bb2f:	mov    r8,rbx
   14000bb32:	mov    rcx,rax
   14000bb35:	call   0x14000c9e4
   14000bb3a:	mov    BYTE PTR [rdi+0x10],0x1
   14000bb3e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb43:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bb48:	add    rsp,0x20
   14000bb4c:	pop    rdi
   14000bb4d:	ret    
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	int3   
   14000bb51:	int3   
   14000bb52:	int3   
   14000bb53:	int3   
   14000bb54:	rex push rbx
   14000bb56:	sub    rsp,0x20
   14000bb5a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000bb5e:	mov    rbx,rcx
   14000bb61:	je     0x14000bb6c
   14000bb63:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bb67:	call   0x1400058cc
   14000bb6c:	and    QWORD PTR [rbx+0x8],0x0
   14000bb71:	mov    BYTE PTR [rbx+0x10],0x0
   14000bb75:	add    rsp,0x20
   14000bb79:	pop    rbx
   14000bb7a:	ret    
   14000bb7b:	int3   
   14000bb7c:	int3   
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	int3   
   14000bb81:	int3   
   14000bb82:	int3   
   14000bb83:	int3   
   14000bb84:	rex push rbx
   14000bb86:	sub    rsp,0x20
   14000bb8a:	and    QWORD PTR [rcx+0x8],0x0
   14000bb8f:	lea    rax,[rip+0x5a52]        # 0x1400115e8
   14000bb96:	mov    BYTE PTR [rcx+0x10],0x0
   14000bb9a:	mov    QWORD PTR [rcx],rax
   14000bb9d:	mov    rdx,QWORD PTR [rdx]
   14000bba0:	mov    rbx,rcx
   14000bba3:	call   0x14000baf4
   14000bba8:	mov    rax,rbx
   14000bbab:	add    rsp,0x20
   14000bbaf:	pop    rbx
   14000bbb0:	ret    
   14000bbb1:	int3   
   14000bbb2:	int3   
   14000bbb3:	int3   
   14000bbb4:	int3   
   14000bbb5:	int3   
   14000bbb6:	int3   
   14000bbb7:	int3   
   14000bbb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000bbbd:	push   rdi
   14000bbbe:	sub    rsp,0x20
   14000bbc2:	mov    rdi,rdx
   14000bbc5:	mov    rbx,rcx
   14000bbc8:	cmp    rcx,rdx
   14000bbcb:	je     0x14000bbee
   14000bbcd:	call   0x14000bb54
   14000bbd2:	cmp    BYTE PTR [rdi+0x10],0x0
   14000bbd6:	je     0x14000bbe6
   14000bbd8:	mov    rdx,QWORD PTR [rdi+0x8]
   14000bbdc:	mov    rcx,rbx
   14000bbdf:	call   0x14000baf4
   14000bbe4:	jmp    0x14000bbee
   14000bbe6:	mov    rax,QWORD PTR [rdi+0x8]
   14000bbea:	mov    QWORD PTR [rbx+0x8],rax
   14000bbee:	mov    rax,rbx
   14000bbf1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bbf6:	add    rsp,0x20
   14000bbfa:	pop    rdi
   14000bbfb:	ret    
   14000bbfc:	int3   
   14000bbfd:	int3   
   14000bbfe:	int3   
   14000bbff:	int3   
   14000bc00:	int3   
   14000bc01:	int3   
   14000bc02:	int3   
   14000bc03:	int3   
   14000bc04:	lea    rax,[rip+0x59dd]        # 0x1400115e8
   14000bc0b:	mov    QWORD PTR [rcx],rax
   14000bc0e:	jmp    0x14000bb54
   14000bc13:	int3   
   14000bc14:	int3   
   14000bc15:	int3   
   14000bc16:	int3   
   14000bc17:	int3   
   14000bc18:	int3   
   14000bc19:	int3   
   14000bc1a:	int3   
   14000bc1b:	int3   
   14000bc1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000bc21:	push   rdi
   14000bc22:	sub    rsp,0x20
   14000bc26:	lea    rax,[rip+0x59bb]        # 0x1400115e8
   14000bc2d:	mov    ebx,edx
   14000bc2f:	mov    rdi,rcx
   14000bc32:	mov    QWORD PTR [rcx],rax
   14000bc35:	call   0x14000bb54
   14000bc3a:	test   bl,0x1
   14000bc3d:	je     0x14000bc47
   14000bc3f:	mov    rcx,rdi
   14000bc42:	call   0x140003c2c
   14000bc47:	mov    rax,rdi
   14000bc4a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bc4f:	add    rsp,0x20
   14000bc53:	pop    rdi
   14000bc54:	ret    
   14000bc55:	int3   
   14000bc56:	int3   
   14000bc57:	int3   
   14000bc58:	int3   
   14000bc59:	int3   
   14000bc5a:	int3   
   14000bc5b:	int3   
   14000bc5c:	rex push rbx
   14000bc5e:	sub    rsp,0x20
   14000bc62:	and    QWORD PTR [rcx+0x8],0x0
   14000bc67:	lea    rax,[rip+0x597a]        # 0x1400115e8
   14000bc6e:	mov    rbx,rcx
   14000bc71:	mov    QWORD PTR [rcx],rax
   14000bc74:	mov    BYTE PTR [rcx+0x10],0x0
   14000bc78:	call   0x14000bbb8
   14000bc7d:	mov    rax,rbx
   14000bc80:	add    rsp,0x20
   14000bc84:	pop    rbx
   14000bc85:	ret    
   14000bc86:	int3   
   14000bc87:	int3   
   14000bc88:	int3   
   14000bc89:	int3   
   14000bc8a:	int3   
   14000bc8b:	int3   
   14000bc8c:	mov    QWORD PTR [rsp+0x8],rbx
   14000bc91:	push   rdi
   14000bc92:	sub    rsp,0x20
   14000bc96:	lea    rax,[rip+0x597b]        # 0x140011618
   14000bc9d:	mov    ebx,edx
   14000bc9f:	mov    rdi,rcx
   14000bca2:	mov    QWORD PTR [rcx],rax
   14000bca5:	call   0x14000d820
   14000bcaa:	test   bl,0x1
   14000bcad:	je     0x14000bcb7
   14000bcaf:	mov    rcx,rdi
   14000bcb2:	call   0x140003c2c
   14000bcb7:	mov    rax,rdi
   14000bcba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bcbf:	add    rsp,0x20
   14000bcc3:	pop    rdi
   14000bcc4:	ret    
   14000bcc5:	int3   
   14000bcc6:	int3   
   14000bcc7:	int3   
   14000bcc8:	int3   
   14000bcc9:	int3   
   14000bcca:	int3   
   14000bccb:	int3   
   14000bccc:	sub    rsp,0x28
   14000bcd0:	mov    rax,rdx
   14000bcd3:	lea    rdx,[rcx+0x11]
   14000bcd7:	lea    rcx,[rax+0x11]
   14000bcdb:	call   0x14000ca60
   14000bce0:	test   eax,eax
   14000bce2:	sete   al
   14000bce5:	add    rsp,0x28
   14000bce9:	ret    
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	int3   
   14000bced:	int3   
   14000bcee:	int3   
   14000bcef:	int3   
   14000bcf0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bcf5:	mov    QWORD PTR [rsp+0x10],rsi
   14000bcfa:	push   rdi
   14000bcfb:	sub    rsp,0x20
   14000bcff:	mov    rbx,rcx
   14000bd02:	cmp    rcx,0xffffffffffffffe0
   14000bd06:	ja     0x14000bd84
   14000bd08:	mov    edi,0x1
   14000bd0d:	test   rcx,rcx
   14000bd10:	cmovne rdi,rcx
   14000bd14:	mov    rcx,QWORD PTR [rip+0xaef5]        # 0x140016c10
   14000bd1b:	test   rcx,rcx
   14000bd1e:	jne    0x14000bd40
   14000bd20:	call   0x140004860
   14000bd25:	mov    ecx,0x1e
   14000bd2a:	call   0x1400045fc
   14000bd2f:	mov    ecx,0xff
   14000bd34:	call   0x1400041fc
   14000bd39:	mov    rcx,QWORD PTR [rip+0xaed0]        # 0x140016c10
   14000bd40:	mov    r8,rdi
   14000bd43:	xor    edx,edx
   14000bd45:	call   QWORD PTR [rip+0x437d]        # 0x1400100c8
   14000bd4b:	mov    rsi,rax
   14000bd4e:	test   rax,rax
   14000bd51:	jne    0x14000bd7f
   14000bd53:	cmp    DWORD PTR [rip+0xb767],eax        # 0x1400174c0
   14000bd59:	je     0x14000bd69
   14000bd5b:	mov    rcx,rbx
   14000bd5e:	call   0x1400089a8
   14000bd63:	test   eax,eax
   14000bd65:	je     0x14000bd74
   14000bd67:	jmp    0x14000bd14
   14000bd69:	call   0x140006a54
   14000bd6e:	mov    DWORD PTR [rax],0xc
   14000bd74:	call   0x140006a54
   14000bd79:	mov    DWORD PTR [rax],0xc
   14000bd7f:	mov    rax,rsi
   14000bd82:	jmp    0x14000bd96
   14000bd84:	call   0x1400089a8
   14000bd89:	call   0x140006a54
   14000bd8e:	mov    DWORD PTR [rax],0xc
   14000bd94:	xor    eax,eax
   14000bd96:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd9b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bda0:	add    rsp,0x20
   14000bda4:	pop    rdi
   14000bda5:	ret    
   14000bda6:	int3   
   14000bda7:	int3   
   14000bda8:	int3   
   14000bda9:	int3   
   14000bdaa:	int3   
   14000bdab:	int3   
   14000bdac:	mov    QWORD PTR [rsp+0x10],rbx
   14000bdb1:	mov    QWORD PTR [rsp+0x18],rdi
   14000bdb6:	push   rbp
   14000bdb7:	mov    rbp,rsp
   14000bdba:	sub    rsp,0x60
   14000bdbe:	mov    rdi,rdx
   14000bdc1:	mov    rbx,rcx
   14000bdc4:	lea    rcx,[rbp-0x40]
   14000bdc8:	lea    rdx,[rip+0x5851]        # 0x140011620
   14000bdcf:	mov    r8d,0x40
   14000bdd5:	call   0x140006c00
   14000bdda:	lea    rdx,[rbp+0x10]
   14000bdde:	mov    rcx,rdi
   14000bde1:	mov    QWORD PTR [rbp-0x18],rbx
   14000bde5:	mov    QWORD PTR [rbp-0x10],rdi
   14000bde9:	call   0x14000dce6
   14000bdee:	mov    r11,rax
   14000bdf1:	mov    QWORD PTR [rbp+0x10],rax
   14000bdf5:	mov    QWORD PTR [rbp-0x8],rax
   14000bdf9:	test   rdi,rdi
   14000bdfc:	je     0x14000be19
   14000bdfe:	test   BYTE PTR [rdi],0x8
   14000be01:	mov    ecx,0x1994000
   14000be06:	je     0x14000be0d
   14000be08:	mov    DWORD PTR [rbp-0x20],ecx
   14000be0b:	jmp    0x14000be19
   14000be0d:	mov    eax,DWORD PTR [rbp-0x20]
   14000be10:	test   r11,r11
   14000be13:	cmove  eax,ecx
   14000be16:	mov    DWORD PTR [rbp-0x20],eax
   14000be19:	mov    r8d,DWORD PTR [rbp-0x28]
   14000be1d:	mov    edx,DWORD PTR [rbp-0x3c]
   14000be20:	mov    ecx,DWORD PTR [rbp-0x40]
   14000be23:	lea    r9,[rbp-0x20]
   14000be27:	call   QWORD PTR [rip+0x4213]        # 0x140010040
   14000be2d:	lea    r11,[rsp+0x60]
   14000be32:	mov    rbx,QWORD PTR [r11+0x18]
   14000be36:	mov    rdi,QWORD PTR [r11+0x20]
   14000be3a:	mov    rsp,r11
   14000be3d:	pop    rbp
   14000be3e:	ret    
   14000be3f:	int3   
   14000be40:	int3   
   14000be41:	int3   
   14000be42:	int3   
   14000be43:	int3   
   14000be44:	int3   
   14000be45:	int3   
   14000be46:	int3   
   14000be47:	int3   
   14000be48:	rex push rbp
   14000be4a:	push   r12
   14000be4c:	push   r13
   14000be4e:	push   r14
   14000be50:	push   r15
   14000be52:	sub    rsp,0x50
   14000be56:	lea    rbp,[rsp+0x40]
   14000be5b:	mov    QWORD PTR [rbp+0x40],rbx
   14000be5f:	mov    QWORD PTR [rbp+0x48],rsi
   14000be63:	mov    QWORD PTR [rbp+0x50],rdi
   14000be67:	mov    rax,QWORD PTR [rip+0x9202]        # 0x140015070
   14000be6e:	xor    rax,rbp
   14000be71:	mov    QWORD PTR [rbp+0x8],rax
   14000be75:	mov    ebx,DWORD PTR [rbp+0x60]
   14000be78:	xor    edi,edi
   14000be7a:	mov    r14,r9
   14000be7d:	mov    r15d,r8d
   14000be80:	mov    DWORD PTR [rbp+0x0],edx
   14000be83:	test   ebx,ebx
   14000be85:	jle    0x14000beb1
   14000be87:	mov    r10d,ebx
   14000be8a:	mov    rax,r9
   14000be8d:	dec    r10d
   14000be90:	cmp    BYTE PTR [rax],dil
   14000be93:	je     0x14000bea1
   14000be95:	inc    rax
   14000be98:	test   r10d,r10d
   14000be9b:	jne    0x14000be8d
   14000be9d:	or     r10d,0xffffffff
   14000bea1:	mov    eax,ebx
   14000bea3:	sub    eax,r10d
   14000bea6:	dec    eax
   14000bea8:	cmp    eax,ebx
   14000beaa:	lea    ebx,[rax+0x1]
   14000bead:	jl     0x14000beb1
   14000beaf:	mov    ebx,eax
   14000beb1:	mov    r12d,DWORD PTR [rbp+0x78]
   14000beb5:	mov    esi,edi
   14000beb7:	test   r12d,r12d
   14000beba:	jne    0x14000bec3
   14000bebc:	mov    rax,QWORD PTR [rcx]
   14000bebf:	mov    r12d,DWORD PTR [rax+0x4]
   14000bec3:	neg    DWORD PTR [rbp+0x80]
   14000bec9:	mov    r9d,ebx
   14000becc:	mov    r8,r14
   14000becf:	sbb    edx,edx
   14000bed1:	mov    ecx,r12d
   14000bed4:	mov    DWORD PTR [rsp+0x28],edi
   14000bed8:	and    edx,0x8
   14000bedb:	mov    QWORD PTR [rsp+0x20],rdi
   14000bee0:	inc    edx
   14000bee2:	call   QWORD PTR [rip+0x41f0]        # 0x1400100d8
   14000bee8:	movsxd r13,eax
   14000beeb:	test   eax,eax
   14000beed:	jne    0x14000bef6
   14000beef:	xor    eax,eax
   14000bef1:	jmp    0x14000c0ec
   14000bef6:	movabs r8,0xffffffffffffff0
   14000bf00:	test   eax,eax
   14000bf02:	jle    0x14000bf62
   14000bf04:	xor    edx,edx
   14000bf06:	lea    rax,[rdx-0x20]
   14000bf0a:	div    r13
   14000bf0d:	cmp    rax,0x2
   14000bf11:	jb     0x14000bf62
   14000bf13:	lea    rcx,[r13+r13*1+0x10]
   14000bf18:	cmp    rcx,0x400
   14000bf1f:	ja     0x14000bf4b
   14000bf21:	lea    rax,[rcx+0xf]
   14000bf25:	cmp    rax,rcx
   14000bf28:	ja     0x14000bf2d
   14000bf2a:	mov    rax,r8
   14000bf2d:	and    rax,0xfffffffffffffff0
   14000bf31:	call   0x14000d150
   14000bf36:	sub    rsp,rax
   14000bf39:	lea    rdi,[rsp+0x40]
   14000bf3e:	test   rdi,rdi
   14000bf41:	je     0x14000beef
   14000bf43:	mov    DWORD PTR [rdi],0xcccc
   14000bf49:	jmp    0x14000bf5e
   14000bf4b:	call   0x14000bcf0
   14000bf50:	mov    rdi,rax
   14000bf53:	test   rax,rax
   14000bf56:	je     0x14000bf62
   14000bf58:	mov    DWORD PTR [rax],0xdddd
   14000bf5e:	add    rdi,0x10
   14000bf62:	test   rdi,rdi
   14000bf65:	je     0x14000beef
   14000bf67:	mov    r9d,ebx
   14000bf6a:	mov    r8,r14
   14000bf6d:	mov    edx,0x1
   14000bf72:	mov    ecx,r12d
   14000bf75:	mov    DWORD PTR [rsp+0x28],r13d
   14000bf7a:	mov    QWORD PTR [rsp+0x20],rdi
   14000bf7f:	call   QWORD PTR [rip+0x4153]        # 0x1400100d8
   14000bf85:	test   eax,eax
   14000bf87:	je     0x14000c0d9
   14000bf8d:	mov    r14d,DWORD PTR [rbp+0x0]
   14000bf91:	and    DWORD PTR [rsp+0x28],esi
   14000bf95:	and    QWORD PTR [rsp+0x20],rsi
   14000bf9a:	mov    ecx,r14d
   14000bf9d:	mov    r9d,r13d
   14000bfa0:	mov    r8,rdi
   14000bfa3:	mov    edx,r15d
   14000bfa6:	call   QWORD PTR [rip+0x4114]        # 0x1400100c0
   14000bfac:	movsxd rsi,eax
   14000bfaf:	test   eax,eax
   14000bfb1:	je     0x14000c0d9
   14000bfb7:	mov    r8d,0x400
   14000bfbd:	test   r8d,r15d
   14000bfc0:	je     0x14000bff9
   14000bfc2:	mov    ecx,DWORD PTR [rbp+0x70]
   14000bfc5:	test   ecx,ecx
   14000bfc7:	je     0x14000c0d9
   14000bfcd:	cmp    esi,ecx
   14000bfcf:	jg     0x14000c0d9
   14000bfd5:	mov    rax,QWORD PTR [rbp+0x68]
   14000bfd9:	mov    DWORD PTR [rsp+0x28],ecx
   14000bfdd:	mov    r9d,r13d
   14000bfe0:	mov    r8,rdi
   14000bfe3:	mov    edx,r15d
   14000bfe6:	mov    ecx,r14d
   14000bfe9:	mov    QWORD PTR [rsp+0x20],rax
   14000bfee:	call   QWORD PTR [rip+0x40cc]        # 0x1400100c0
   14000bff4:	jmp    0x14000c0d9
   14000bff9:	test   eax,eax
   14000bffb:	jle    0x14000c064
   14000bffd:	xor    edx,edx
   14000bfff:	lea    rax,[rdx-0x20]
   14000c003:	div    rsi
   14000c006:	cmp    rax,0x2
   14000c00a:	jb     0x14000c064
   14000c00c:	lea    rcx,[rsi+rsi*1+0x10]
   14000c011:	cmp    rcx,r8
   14000c014:	ja     0x14000c04b
   14000c016:	lea    rax,[rcx+0xf]
   14000c01a:	cmp    rax,rcx
   14000c01d:	ja     0x14000c029
   14000c01f:	movabs rax,0xffffffffffffff0
   14000c029:	and    rax,0xfffffffffffffff0
   14000c02d:	call   0x14000d150
   14000c032:	sub    rsp,rax
   14000c035:	lea    rbx,[rsp+0x40]
   14000c03a:	test   rbx,rbx
   14000c03d:	je     0x14000c0d9
   14000c043:	mov    DWORD PTR [rbx],0xcccc
   14000c049:	jmp    0x14000c05e
   14000c04b:	call   0x14000bcf0
   14000c050:	mov    rbx,rax
   14000c053:	test   rax,rax
   14000c056:	je     0x14000c066
   14000c058:	mov    DWORD PTR [rax],0xdddd
   14000c05e:	add    rbx,0x10
   14000c062:	jmp    0x14000c066
   14000c064:	xor    ebx,ebx
   14000c066:	test   rbx,rbx
   14000c069:	je     0x14000c0d9
   14000c06b:	mov    r9d,r13d
   14000c06e:	mov    r8,rdi
   14000c071:	mov    edx,r15d
   14000c074:	mov    ecx,r14d
   14000c077:	mov    DWORD PTR [rsp+0x28],esi
   14000c07b:	mov    QWORD PTR [rsp+0x20],rbx
   14000c080:	call   QWORD PTR [rip+0x403a]        # 0x1400100c0
   14000c086:	xor    ecx,ecx
   14000c088:	test   eax,eax
   14000c08a:	je     0x14000c0c8
   14000c08c:	mov    eax,DWORD PTR [rbp+0x70]
   14000c08f:	xor    edx,edx
   14000c091:	mov    QWORD PTR [rsp+0x38],rcx
   14000c096:	mov    r9d,esi
   14000c099:	mov    r8,rbx
   14000c09c:	mov    QWORD PTR [rsp+0x30],rcx
   14000c0a1:	test   eax,eax
   14000c0a3:	jne    0x14000c0b0
   14000c0a5:	mov    DWORD PTR [rsp+0x28],ecx
   14000c0a9:	mov    QWORD PTR [rsp+0x20],rcx
   14000c0ae:	jmp    0x14000c0bd
   14000c0b0:	mov    DWORD PTR [rsp+0x28],eax
   14000c0b4:	mov    rax,QWORD PTR [rbp+0x68]
   14000c0b8:	mov    QWORD PTR [rsp+0x20],rax
   14000c0bd:	mov    ecx,r12d
   14000c0c0:	call   QWORD PTR [rip+0x402a]        # 0x1400100f0
   14000c0c6:	mov    esi,eax
   14000c0c8:	lea    rcx,[rbx-0x10]
   14000c0cc:	cmp    DWORD PTR [rcx],0xdddd
   14000c0d2:	jne    0x14000c0d9
   14000c0d4:	call   0x1400058cc
   14000c0d9:	lea    rcx,[rdi-0x10]
   14000c0dd:	cmp    DWORD PTR [rcx],0xdddd
   14000c0e3:	jne    0x14000c0ea
   14000c0e5:	call   0x1400058cc
   14000c0ea:	mov    eax,esi
   14000c0ec:	mov    rcx,QWORD PTR [rbp+0x8]
   14000c0f0:	xor    rcx,rbp
   14000c0f3:	call   0x140003c50
   14000c0f8:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c0fc:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c100:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c104:	lea    rsp,[rbp+0x10]
   14000c108:	pop    r15
   14000c10a:	pop    r14
   14000c10c:	pop    r13
   14000c10e:	pop    r12
   14000c110:	pop    rbp
   14000c111:	ret    
   14000c112:	int3   
   14000c113:	int3   
   14000c114:	int3   
   14000c115:	int3   
   14000c116:	int3   
   14000c117:	int3   
   14000c118:	mov    QWORD PTR [rsp+0x8],rbx
   14000c11d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c122:	push   rdi
   14000c123:	sub    rsp,0x70
   14000c127:	mov    esi,edx
   14000c129:	mov    rdx,rcx
   14000c12c:	lea    rcx,[rsp+0x50]
   14000c131:	mov    rbx,r9
   14000c134:	mov    edi,r8d
   14000c137:	call   0x140003f18
   14000c13c:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c143:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000c14b:	lea    rcx,[rsp+0x50]
   14000c150:	mov    DWORD PTR [rsp+0x40],r11d
   14000c155:	mov    DWORD PTR [rsp+0x38],eax
   14000c159:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c160:	mov    DWORD PTR [rsp+0x30],eax
   14000c164:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c16c:	mov    r9,rbx
   14000c16f:	mov    QWORD PTR [rsp+0x28],rax
   14000c174:	mov    eax,DWORD PTR [rsp+0xa0]
   14000c17b:	mov    r8d,edi
   14000c17e:	mov    edx,esi
   14000c180:	mov    DWORD PTR [rsp+0x20],eax
   14000c184:	call   0x14000be48
   14000c189:	cmp    BYTE PTR [rsp+0x68],0x0
   14000c18e:	je     0x14000c19c
   14000c190:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c195:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c19c:	lea    r11,[rsp+0x70]
   14000c1a1:	mov    rbx,QWORD PTR [r11+0x10]
   14000c1a5:	mov    rsi,QWORD PTR [r11+0x18]
   14000c1a9:	mov    rsp,r11
   14000c1ac:	pop    rdi
   14000c1ad:	ret    
   14000c1ae:	int3   
   14000c1af:	int3   
   14000c1b0:	int3   
   14000c1b1:	int3   
   14000c1b2:	int3   
   14000c1b3:	int3   
   14000c1b4:	rex push rbp
   14000c1b6:	push   r12
   14000c1b8:	push   r13
   14000c1ba:	push   r14
   14000c1bc:	push   r15
   14000c1be:	sub    rsp,0x40
   14000c1c2:	lea    rbp,[rsp+0x30]
   14000c1c7:	mov    QWORD PTR [rbp+0x40],rbx
   14000c1cb:	mov    QWORD PTR [rbp+0x48],rsi
   14000c1cf:	mov    QWORD PTR [rbp+0x50],rdi
   14000c1d3:	mov    rax,QWORD PTR [rip+0x8e96]        # 0x140015070
   14000c1da:	xor    rax,rbp
   14000c1dd:	mov    QWORD PTR [rbp+0x0],rax
   14000c1e1:	mov    esi,DWORD PTR [rbp+0x68]
   14000c1e4:	xor    edi,edi
   14000c1e6:	mov    r13d,r9d
   14000c1e9:	mov    r14,r8
   14000c1ec:	mov    r15d,edx
   14000c1ef:	test   esi,esi
   14000c1f1:	jne    0x14000c1f9
   14000c1f3:	mov    rax,QWORD PTR [rcx]
   14000c1f6:	mov    esi,DWORD PTR [rax+0x4]
   14000c1f9:	neg    DWORD PTR [rbp+0x70]
   14000c1fc:	mov    ecx,esi
   14000c1fe:	mov    DWORD PTR [rsp+0x28],edi
   14000c202:	sbb    edx,edx
   14000c204:	mov    QWORD PTR [rsp+0x20],rdi
   14000c209:	and    edx,0x8
   14000c20c:	inc    edx
   14000c20e:	call   QWORD PTR [rip+0x3ec4]        # 0x1400100d8
   14000c214:	movsxd r12,eax
   14000c217:	test   eax,eax
   14000c219:	jne    0x14000c222
   14000c21b:	xor    eax,eax
   14000c21d:	jmp    0x14000c2ec
   14000c222:	jle    0x14000c28b
   14000c224:	movabs rax,0x7ffffffffffffff0
   14000c22e:	cmp    r12,rax
   14000c231:	ja     0x14000c28b
   14000c233:	lea    rcx,[r12+r12*1+0x10]
   14000c238:	cmp    rcx,0x400
   14000c23f:	ja     0x14000c272
   14000c241:	lea    rax,[rcx+0xf]
   14000c245:	cmp    rax,rcx
   14000c248:	ja     0x14000c254
   14000c24a:	movabs rax,0xffffffffffffff0
   14000c254:	and    rax,0xfffffffffffffff0
   14000c258:	call   0x14000d150
   14000c25d:	sub    rsp,rax
   14000c260:	lea    rbx,[rsp+0x30]
   14000c265:	test   rbx,rbx
   14000c268:	je     0x14000c21b
   14000c26a:	mov    DWORD PTR [rbx],0xcccc
   14000c270:	jmp    0x14000c285
   14000c272:	call   0x14000bcf0
   14000c277:	mov    rbx,rax
   14000c27a:	test   rax,rax
   14000c27d:	je     0x14000c28e
   14000c27f:	mov    DWORD PTR [rax],0xdddd
   14000c285:	add    rbx,0x10
   14000c289:	jmp    0x14000c28e
   14000c28b:	mov    rbx,rdi
   14000c28e:	test   rbx,rbx
   14000c291:	je     0x14000c21b
   14000c293:	mov    r8,r12
   14000c296:	xor    edx,edx
   14000c298:	mov    rcx,rbx
   14000c29b:	add    r8,r8
   14000c29e:	call   0x140006b00
   14000c2a3:	mov    r9d,r13d
   14000c2a6:	mov    r8,r14
   14000c2a9:	mov    edx,0x1
   14000c2ae:	mov    ecx,esi
   14000c2b0:	mov    DWORD PTR [rsp+0x28],r12d
   14000c2b5:	mov    QWORD PTR [rsp+0x20],rbx
   14000c2ba:	call   QWORD PTR [rip+0x3e18]        # 0x1400100d8
   14000c2c0:	test   eax,eax
   14000c2c2:	je     0x14000c2d9
   14000c2c4:	mov    r9,QWORD PTR [rbp+0x60]
   14000c2c8:	mov    r8d,eax
   14000c2cb:	mov    rdx,rbx
   14000c2ce:	mov    ecx,r15d
   14000c2d1:	call   QWORD PTR [rip+0x3de1]        # 0x1400100b8
   14000c2d7:	mov    edi,eax
   14000c2d9:	lea    rcx,[rbx-0x10]
   14000c2dd:	cmp    DWORD PTR [rcx],0xdddd
   14000c2e3:	jne    0x14000c2ea
   14000c2e5:	call   0x1400058cc
   14000c2ea:	mov    eax,edi
   14000c2ec:	mov    rcx,QWORD PTR [rbp+0x0]
   14000c2f0:	xor    rcx,rbp
   14000c2f3:	call   0x140003c50
   14000c2f8:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c2fc:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c300:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c304:	lea    rsp,[rbp+0x10]
   14000c308:	pop    r15
   14000c30a:	pop    r14
   14000c30c:	pop    r13
   14000c30e:	pop    r12
   14000c310:	pop    rbp
   14000c311:	ret    
   14000c312:	int3   
   14000c313:	int3   
   14000c314:	int3   
   14000c315:	int3   
   14000c316:	int3   
   14000c317:	int3   
   14000c318:	mov    QWORD PTR [rsp+0x8],rbx
   14000c31d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c322:	push   rdi
   14000c323:	sub    rsp,0x60
   14000c327:	mov    esi,edx
   14000c329:	mov    rdx,rcx
   14000c32c:	lea    rcx,[rsp+0x40]
   14000c331:	mov    ebx,r9d
   14000c334:	mov    rdi,r8
   14000c337:	call   0x140003f18
   14000c33c:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000c344:	mov    eax,DWORD PTR [rsp+0x98]
   14000c34b:	lea    rcx,[rsp+0x40]
   14000c350:	mov    DWORD PTR [rsp+0x30],r11d
   14000c355:	mov    DWORD PTR [rsp+0x28],eax
   14000c359:	mov    rax,QWORD PTR [rsp+0x90]
   14000c361:	mov    r9d,ebx
   14000c364:	mov    r8,rdi
   14000c367:	mov    edx,esi
   14000c369:	mov    QWORD PTR [rsp+0x20],rax
   14000c36e:	call   0x14000c1b4
   14000c373:	cmp    BYTE PTR [rsp+0x58],0x0
   14000c378:	je     0x14000c386
   14000c37a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c37f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c386:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c38b:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c390:	add    rsp,0x60
   14000c394:	pop    rdi
   14000c395:	ret    
   14000c396:	int3   
   14000c397:	int3   
   14000c398:	int3   
   14000c399:	int3   
   14000c39a:	int3   
   14000c39b:	int3   
   14000c39c:	test   rcx,rcx
   14000c39f:	je     0x14000c789
   14000c3a5:	push   rbx
   14000c3a6:	sub    rsp,0x20
   14000c3aa:	mov    rbx,rcx
   14000c3ad:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c3b1:	call   0x1400058cc
   14000c3b6:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c3ba:	call   0x1400058cc
   14000c3bf:	mov    rcx,QWORD PTR [rbx+0x18]
   14000c3c3:	call   0x1400058cc
   14000c3c8:	mov    rcx,QWORD PTR [rbx+0x20]
   14000c3cc:	call   0x1400058cc
   14000c3d1:	mov    rcx,QWORD PTR [rbx+0x28]
   14000c3d5:	call   0x1400058cc
   14000c3da:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c3de:	call   0x1400058cc
   14000c3e3:	mov    rcx,QWORD PTR [rbx]
   14000c3e6:	call   0x1400058cc
   14000c3eb:	mov    rcx,QWORD PTR [rbx+0x40]
   14000c3ef:	call   0x1400058cc
   14000c3f4:	mov    rcx,QWORD PTR [rbx+0x48]
   14000c3f8:	call   0x1400058cc
   14000c3fd:	mov    rcx,QWORD PTR [rbx+0x50]
   14000c401:	call   0x1400058cc
   14000c406:	mov    rcx,QWORD PTR [rbx+0x58]
   14000c40a:	call   0x1400058cc
   14000c40f:	mov    rcx,QWORD PTR [rbx+0x60]
   14000c413:	call   0x1400058cc
   14000c418:	mov    rcx,QWORD PTR [rbx+0x68]
   14000c41c:	call   0x1400058cc
   14000c421:	mov    rcx,QWORD PTR [rbx+0x38]
   14000c425:	call   0x1400058cc
   14000c42a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000c42e:	call   0x1400058cc
   14000c433:	mov    rcx,QWORD PTR [rbx+0x78]
   14000c437:	call   0x1400058cc
   14000c43c:	mov    rcx,QWORD PTR [rbx+0x80]
   14000c443:	call   0x1400058cc
   14000c448:	mov    rcx,QWORD PTR [rbx+0x88]
   14000c44f:	call   0x1400058cc
   14000c454:	mov    rcx,QWORD PTR [rbx+0x90]
   14000c45b:	call   0x1400058cc
   14000c460:	mov    rcx,QWORD PTR [rbx+0x98]
   14000c467:	call   0x1400058cc
   14000c46c:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000c473:	call   0x1400058cc
   14000c478:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000c47f:	call   0x1400058cc
   14000c484:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000c48b:	call   0x1400058cc
   14000c490:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000c497:	call   0x1400058cc
   14000c49c:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000c4a3:	call   0x1400058cc
   14000c4a8:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000c4af:	call   0x1400058cc
   14000c4b4:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000c4bb:	call   0x1400058cc
   14000c4c0:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000c4c7:	call   0x1400058cc
   14000c4cc:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000c4d3:	call   0x1400058cc
   14000c4d8:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000c4df:	call   0x1400058cc
   14000c4e4:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000c4eb:	call   0x1400058cc
   14000c4f0:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000c4f7:	call   0x1400058cc
   14000c4fc:	mov    rcx,QWORD PTR [rbx+0x100]
   14000c503:	call   0x1400058cc
   14000c508:	mov    rcx,QWORD PTR [rbx+0x108]
   14000c50f:	call   0x1400058cc
   14000c514:	mov    rcx,QWORD PTR [rbx+0x110]
   14000c51b:	call   0x1400058cc
   14000c520:	mov    rcx,QWORD PTR [rbx+0x118]
   14000c527:	call   0x1400058cc
   14000c52c:	mov    rcx,QWORD PTR [rbx+0x120]
   14000c533:	call   0x1400058cc
   14000c538:	mov    rcx,QWORD PTR [rbx+0x128]
   14000c53f:	call   0x1400058cc
   14000c544:	mov    rcx,QWORD PTR [rbx+0x130]
   14000c54b:	call   0x1400058cc
   14000c550:	mov    rcx,QWORD PTR [rbx+0x138]
   14000c557:	call   0x1400058cc
   14000c55c:	mov    rcx,QWORD PTR [rbx+0x140]
   14000c563:	call   0x1400058cc
   14000c568:	mov    rcx,QWORD PTR [rbx+0x148]
   14000c56f:	call   0x1400058cc
   14000c574:	mov    rcx,QWORD PTR [rbx+0x150]
   14000c57b:	call   0x1400058cc
   14000c580:	mov    rcx,QWORD PTR [rbx+0x170]
   14000c587:	call   0x1400058cc
   14000c58c:	mov    rcx,QWORD PTR [rbx+0x178]
   14000c593:	call   0x1400058cc
   14000c598:	mov    rcx,QWORD PTR [rbx+0x180]
   14000c59f:	call   0x1400058cc
   14000c5a4:	mov    rcx,QWORD PTR [rbx+0x188]
   14000c5ab:	call   0x1400058cc
   14000c5b0:	mov    rcx,QWORD PTR [rbx+0x190]
   14000c5b7:	call   0x1400058cc
   14000c5bc:	mov    rcx,QWORD PTR [rbx+0x198]
   14000c5c3:	call   0x1400058cc
   14000c5c8:	mov    rcx,QWORD PTR [rbx+0x168]
   14000c5cf:	call   0x1400058cc
   14000c5d4:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000c5db:	call   0x1400058cc
   14000c5e0:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000c5e7:	call   0x1400058cc
   14000c5ec:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000c5f3:	call   0x1400058cc
   14000c5f8:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000c5ff:	call   0x1400058cc
   14000c604:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000c60b:	call   0x1400058cc
   14000c610:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000c617:	call   0x1400058cc
   14000c61c:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000c623:	call   0x1400058cc
   14000c628:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000c62f:	call   0x1400058cc
   14000c634:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000c63b:	call   0x1400058cc
   14000c640:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000c647:	call   0x1400058cc
   14000c64c:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000c653:	call   0x1400058cc
   14000c658:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000c65f:	call   0x1400058cc
   14000c664:	mov    rcx,QWORD PTR [rbx+0x200]
   14000c66b:	call   0x1400058cc
   14000c670:	mov    rcx,QWORD PTR [rbx+0x208]
   14000c677:	call   0x1400058cc
   14000c67c:	mov    rcx,QWORD PTR [rbx+0x210]
   14000c683:	call   0x1400058cc
   14000c688:	mov    rcx,QWORD PTR [rbx+0x218]
   14000c68f:	call   0x1400058cc
   14000c694:	mov    rcx,QWORD PTR [rbx+0x220]
   14000c69b:	call   0x1400058cc
   14000c6a0:	mov    rcx,QWORD PTR [rbx+0x228]
   14000c6a7:	call   0x1400058cc
   14000c6ac:	mov    rcx,QWORD PTR [rbx+0x230]
   14000c6b3:	call   0x1400058cc
   14000c6b8:	mov    rcx,QWORD PTR [rbx+0x238]
   14000c6bf:	call   0x1400058cc
   14000c6c4:	mov    rcx,QWORD PTR [rbx+0x240]
   14000c6cb:	call   0x1400058cc
   14000c6d0:	mov    rcx,QWORD PTR [rbx+0x248]
   14000c6d7:	call   0x1400058cc
   14000c6dc:	mov    rcx,QWORD PTR [rbx+0x250]
   14000c6e3:	call   0x1400058cc
   14000c6e8:	mov    rcx,QWORD PTR [rbx+0x258]
   14000c6ef:	call   0x1400058cc
   14000c6f4:	mov    rcx,QWORD PTR [rbx+0x260]
   14000c6fb:	call   0x1400058cc
   14000c700:	mov    rcx,QWORD PTR [rbx+0x268]
   14000c707:	call   0x1400058cc
   14000c70c:	mov    rcx,QWORD PTR [rbx+0x270]
   14000c713:	call   0x1400058cc
   14000c718:	mov    rcx,QWORD PTR [rbx+0x278]
   14000c71f:	call   0x1400058cc
   14000c724:	mov    rcx,QWORD PTR [rbx+0x280]
   14000c72b:	call   0x1400058cc
   14000c730:	mov    rcx,QWORD PTR [rbx+0x288]
   14000c737:	call   0x1400058cc
   14000c73c:	mov    rcx,QWORD PTR [rbx+0x290]
   14000c743:	call   0x1400058cc
   14000c748:	mov    rcx,QWORD PTR [rbx+0x298]
   14000c74f:	call   0x1400058cc
   14000c754:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000c75b:	call   0x1400058cc
   14000c760:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000c767:	call   0x1400058cc
   14000c76c:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000c773:	call   0x1400058cc
   14000c778:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000c77f:	call   0x1400058cc
   14000c784:	add    rsp,0x20
   14000c788:	pop    rbx
   14000c789:	ret    
   14000c78a:	int3   
   14000c78b:	int3   
   14000c78c:	int3   
   14000c78d:	int3   
   14000c78e:	int3   
   14000c78f:	int3   
   14000c790:	test   rcx,rcx
   14000c793:	je     0x14000c7fb
   14000c795:	push   rbx
   14000c796:	sub    rsp,0x20
   14000c79a:	mov    rbx,rcx
   14000c79d:	mov    rcx,QWORD PTR [rcx]
   14000c7a0:	cmp    rcx,QWORD PTR [rip+0x9ac9]        # 0x140016270
   14000c7a7:	je     0x14000c7ae
   14000c7a9:	call   0x1400058cc
   14000c7ae:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c7b2:	cmp    rcx,QWORD PTR [rip+0x9abf]        # 0x140016278
   14000c7b9:	je     0x14000c7c0
   14000c7bb:	call   0x1400058cc
   14000c7c0:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c7c4:	cmp    rcx,QWORD PTR [rip+0x9ab5]        # 0x140016280
   14000c7cb:	je     0x14000c7d2
   14000c7cd:	call   0x1400058cc
   14000c7d2:	mov    rcx,QWORD PTR [rbx+0x58]
   14000c7d6:	cmp    rcx,QWORD PTR [rip+0x9aeb]        # 0x1400162c8
   14000c7dd:	je     0x14000c7e4
   14000c7df:	call   0x1400058cc
   14000c7e4:	mov    rcx,QWORD PTR [rbx+0x60]
   14000c7e8:	cmp    rcx,QWORD PTR [rip+0x9ae1]        # 0x1400162d0
   14000c7ef:	je     0x14000c7f6
   14000c7f1:	call   0x1400058cc
   14000c7f6:	add    rsp,0x20
   14000c7fa:	pop    rbx
   14000c7fb:	ret    
   14000c7fc:	int3   
   14000c7fd:	int3   
   14000c7fe:	int3   
   14000c7ff:	int3   
   14000c800:	int3   
   14000c801:	int3   
   14000c802:	int3   
   14000c803:	int3   
   14000c804:	test   rcx,rcx
   14000c807:	je     0x14000c90d
   14000c80d:	push   rbx
   14000c80e:	sub    rsp,0x20
   14000c812:	mov    rbx,rcx
   14000c815:	mov    rcx,QWORD PTR [rcx+0x18]
   14000c819:	cmp    rcx,QWORD PTR [rip+0x9a68]        # 0x140016288
   14000c820:	je     0x14000c827
   14000c822:	call   0x1400058cc
   14000c827:	mov    rcx,QWORD PTR [rbx+0x20]
   14000c82b:	cmp    rcx,QWORD PTR [rip+0x9a5e]        # 0x140016290
   14000c832:	je     0x14000c839
   14000c834:	call   0x1400058cc
   14000c839:	mov    rcx,QWORD PTR [rbx+0x28]
   14000c83d:	cmp    rcx,QWORD PTR [rip+0x9a54]        # 0x140016298
   14000c844:	je     0x14000c84b
   14000c846:	call   0x1400058cc
   14000c84b:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c84f:	cmp    rcx,QWORD PTR [rip+0x9a4a]        # 0x1400162a0
   14000c856:	je     0x14000c85d
   14000c858:	call   0x1400058cc
   14000c85d:	mov    rcx,QWORD PTR [rbx+0x38]
   14000c861:	cmp    rcx,QWORD PTR [rip+0x9a40]        # 0x1400162a8
   14000c868:	je     0x14000c86f
   14000c86a:	call   0x1400058cc
   14000c86f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000c873:	cmp    rcx,QWORD PTR [rip+0x9a36]        # 0x1400162b0
   14000c87a:	je     0x14000c881
   14000c87c:	call   0x1400058cc
   14000c881:	mov    rcx,QWORD PTR [rbx+0x48]
   14000c885:	cmp    rcx,QWORD PTR [rip+0x9a2c]        # 0x1400162b8
   14000c88c:	je     0x14000c893
   14000c88e:	call   0x1400058cc
   14000c893:	mov    rcx,QWORD PTR [rbx+0x68]
   14000c897:	cmp    rcx,QWORD PTR [rip+0x9a3a]        # 0x1400162d8
   14000c89e:	je     0x14000c8a5
   14000c8a0:	call   0x1400058cc
   14000c8a5:	mov    rcx,QWORD PTR [rbx+0x70]
   14000c8a9:	cmp    rcx,QWORD PTR [rip+0x9a30]        # 0x1400162e0
   14000c8b0:	je     0x14000c8b7
   14000c8b2:	call   0x1400058cc
   14000c8b7:	mov    rcx,QWORD PTR [rbx+0x78]
   14000c8bb:	cmp    rcx,QWORD PTR [rip+0x9a26]        # 0x1400162e8
   14000c8c2:	je     0x14000c8c9
   14000c8c4:	call   0x1400058cc
   14000c8c9:	mov    rcx,QWORD PTR [rbx+0x80]
   14000c8d0:	cmp    rcx,QWORD PTR [rip+0x9a19]        # 0x1400162f0
   14000c8d7:	je     0x14000c8de
   14000c8d9:	call   0x1400058cc
   14000c8de:	mov    rcx,QWORD PTR [rbx+0x88]
   14000c8e5:	cmp    rcx,QWORD PTR [rip+0x9a0c]        # 0x1400162f8
   14000c8ec:	je     0x14000c8f3
   14000c8ee:	call   0x1400058cc
   14000c8f3:	mov    rcx,QWORD PTR [rbx+0x90]
   14000c8fa:	cmp    rcx,QWORD PTR [rip+0x99ff]        # 0x140016300
   14000c901:	je     0x14000c908
   14000c903:	call   0x1400058cc
   14000c908:	add    rsp,0x20
   14000c90c:	pop    rbx
   14000c90d:	ret    
   14000c90e:	int3   
   14000c90f:	int3   
   14000c910:	int3   
   14000c911:	int3   
   14000c912:	int3   
   14000c913:	int3   
   14000c914:	mov    QWORD PTR [rsp+0x8],rbx
   14000c919:	mov    QWORD PTR [rsp+0x10],rsi
   14000c91e:	push   rdi
   14000c91f:	sub    rsp,0x30
   14000c923:	movsxd rax,r9d
   14000c926:	mov    rbx,r8
   14000c929:	mov    edi,edx
   14000c92b:	mov    esi,ecx
   14000c92d:	test   r9d,r9d
   14000c930:	jle    0x14000c93d
   14000c932:	mov    rdx,rax
   14000c935:	mov    rcx,rbx
   14000c938:	call   0x14000d894
   14000c93d:	mov    r9d,DWORD PTR [rsp+0x68]
   14000c942:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c947:	mov    r8,rbx
   14000c94a:	mov    DWORD PTR [rsp+0x28],r9d
   14000c94f:	mov    QWORD PTR [rsp+0x20],rdx
   14000c954:	mov    edx,edi
   14000c956:	mov    r9d,eax
   14000c959:	mov    ecx,esi
   14000c95b:	call   QWORD PTR [rip+0x375f]        # 0x1400100c0
   14000c961:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c966:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c96b:	add    rsp,0x30
   14000c96f:	pop    rdi
   14000c970:	ret    
   14000c971:	int3   
   14000c972:	int3   
   14000c973:	int3   
   14000c974:	int3   
   14000c975:	int3   
   14000c976:	int3   
   14000c977:	int3   
   14000c978:	mov    WORD PTR [rsp+0x8],cx
   14000c97d:	push   rbx
   14000c97e:	sub    rsp,0x20
   14000c982:	mov    eax,0xffff
   14000c987:	movzx  ebx,dx
   14000c98a:	cmp    cx,ax
   14000c98d:	jne    0x14000c993
   14000c98f:	xor    eax,eax
   14000c991:	jmp    0x14000c9d8
   14000c993:	mov    eax,0x100
   14000c998:	cmp    cx,ax
   14000c99b:	jae    0x14000c9ad
   14000c99d:	mov    rax,QWORD PTR [rip+0x996c]        # 0x140016310
   14000c9a4:	movzx  ecx,cx
   14000c9a7:	movzx  eax,WORD PTR [rax+rcx*2]
   14000c9ab:	jmp    0x14000c9d3
   14000c9ad:	mov    ecx,0x1
   14000c9b2:	lea    r9,[rsp+0x40]
   14000c9b7:	lea    rdx,[rsp+0x30]
   14000c9bc:	mov    r8d,ecx
   14000c9bf:	call   QWORD PTR [rip+0x36f3]        # 0x1400100b8
   14000c9c5:	xor    ecx,ecx
   14000c9c7:	test   eax,eax
   14000c9c9:	je     0x14000c9d0
   14000c9cb:	movzx  ecx,WORD PTR [rsp+0x40]
   14000c9d0:	movzx  eax,cx
   14000c9d3:	movzx  ecx,bx
   14000c9d6:	and    eax,ecx
   14000c9d8:	add    rsp,0x20
   14000c9dc:	pop    rbx
   14000c9dd:	ret    
   14000c9de:	int3   
   14000c9df:	int3   
   14000c9e0:	int3   
   14000c9e1:	int3   
   14000c9e2:	int3   
   14000c9e3:	int3   
   14000c9e4:	rex push rbx
   14000c9e6:	sub    rsp,0x20
   14000c9ea:	test   rcx,rcx
   14000c9ed:	je     0x14000c9fc
   14000c9ef:	test   rdx,rdx
   14000c9f2:	je     0x14000c9fc
   14000c9f4:	test   r8,r8
   14000c9f7:	jne    0x14000ca15
   14000c9f9:	mov    BYTE PTR [rcx],r8b
   14000c9fc:	call   0x140006a54
   14000ca01:	mov    ebx,0x16
   14000ca06:	mov    DWORD PTR [rax],ebx
   14000ca08:	call   0x1400069e0
   14000ca0d:	mov    eax,ebx
   14000ca0f:	add    rsp,0x20
   14000ca13:	pop    rbx
   14000ca14:	ret    
   14000ca15:	mov    r9,rcx
   14000ca18:	sub    r9,r8
   14000ca1b:	mov    al,BYTE PTR [r8]
   14000ca1e:	mov    BYTE PTR [r9+r8*1],al
   14000ca22:	inc    r8
   14000ca25:	test   al,al
   14000ca27:	je     0x14000ca2e
   14000ca29:	dec    rdx
   14000ca2c:	jne    0x14000ca1b
   14000ca2e:	test   rdx,rdx
   14000ca31:	jne    0x14000ca41
   14000ca33:	mov    BYTE PTR [rcx],dl
   14000ca35:	call   0x140006a54
   14000ca3a:	mov    ebx,0x22
   14000ca3f:	jmp    0x14000ca06
   14000ca41:	xor    eax,eax
   14000ca43:	jmp    0x14000ca0f
   14000ca45:	int3   
   14000ca46:	int3   
   14000ca47:	int3   
   14000ca48:	int3   
   14000ca49:	int3   
   14000ca4a:	int3   
   14000ca4b:	int3   
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	int3   
   14000ca51:	int3   
   14000ca52:	int3   
   14000ca53:	int3   
   14000ca54:	int3   
   14000ca55:	int3   
   14000ca56:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ca60:	sub    rdx,rcx
   14000ca63:	mov    r9,rdx
   14000ca66:	test   cl,0x7
   14000ca69:	je     0x14000ca86
   14000ca6b:	mov    al,BYTE PTR [rcx]
   14000ca6d:	mov    dl,BYTE PTR [rcx+r9*1]
   14000ca71:	cmp    al,dl
   14000ca73:	jne    0x14000cacb
   14000ca75:	inc    rcx
   14000ca78:	test   al,al
   14000ca7a:	je     0x14000cad3
   14000ca7c:	test   rcx,0x7
   14000ca83:	jne    0x14000ca6b
   14000ca85:	nop
   14000ca86:	movabs r11,0x8101010101010100
   14000ca90:	lea    rdx,[rcx+r9*1]
   14000ca94:	and    dx,0xfff
   14000ca99:	cmp    dx,0xff8
   14000ca9e:	ja     0x14000ca6b
   14000caa0:	mov    rax,QWORD PTR [rcx]
   14000caa3:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000caa7:	cmp    rax,rdx
   14000caaa:	jne    0x14000ca6b
   14000caac:	movabs r10,0x7efefefefefefeff
   14000cab6:	add    r10,rdx
   14000cab9:	xor    rax,0xffffffffffffffff
   14000cabd:	add    rcx,0x8
   14000cac1:	xor    rax,r10
   14000cac4:	test   r11,rax
   14000cac7:	je     0x14000ca90
   14000cac9:	jmp    0x14000cada
   14000cacb:	sbb    rax,rax
   14000cace:	sbb    rax,0xffffffffffffffff
   14000cad2:	ret    
   14000cad3:	xor    eax,eax
   14000cad5:	ret    
   14000cad6:	data16 data16 xchg ax,ax
   14000cada:	test   dl,dl
   14000cadc:	je     0x14000cb05
   14000cade:	test   dh,dh
   14000cae0:	je     0x14000cb05
   14000cae2:	shr    rdx,0x10
   14000cae6:	test   dl,dl
   14000cae8:	je     0x14000cb05
   14000caea:	test   dh,dh
   14000caec:	je     0x14000cb05
   14000caee:	shr    rdx,0x10
   14000caf2:	test   dl,dl
   14000caf4:	je     0x14000cb05
   14000caf6:	test   dh,dh
   14000caf8:	je     0x14000cb05
   14000cafa:	shr    edx,0x10
   14000cafd:	test   dl,dl
   14000caff:	je     0x14000cb05
   14000cb01:	test   dh,dh
   14000cb03:	jne    0x14000ca90
   14000cb05:	xor    eax,eax
   14000cb07:	ret    
   14000cb08:	sbb    rax,rax
   14000cb0b:	sbb    rax,0xffffffffffffffff
   14000cb0f:	ret    
   14000cb10:	int3   
   14000cb11:	int3   
   14000cb12:	int3   
   14000cb13:	int3   
   14000cb14:	int3   
   14000cb15:	int3   
   14000cb16:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cb20:	sub    rdx,rcx
   14000cb23:	cmp    r8,0x8
   14000cb27:	jb     0x14000cb4b
   14000cb29:	test   cl,0x7
   14000cb2c:	je     0x14000cb42
   14000cb2e:	xchg   ax,ax
   14000cb30:	mov    al,BYTE PTR [rcx]
   14000cb32:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000cb35:	jne    0x14000cb63
   14000cb37:	inc    rcx
   14000cb3a:	dec    r8
   14000cb3d:	test   cl,0x7
   14000cb40:	jne    0x14000cb30
   14000cb42:	mov    r9,r8
   14000cb45:	shr    r9,0x3
   14000cb49:	jne    0x14000cb6a
   14000cb4b:	test   r8,r8
   14000cb4e:	je     0x14000cb5f
   14000cb50:	mov    al,BYTE PTR [rcx]
   14000cb52:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000cb55:	jne    0x14000cb63
   14000cb57:	inc    rcx
   14000cb5a:	dec    r8
   14000cb5d:	jne    0x14000cb50
   14000cb5f:	xor    rax,rax
   14000cb62:	ret    
   14000cb63:	sbb    eax,eax
   14000cb65:	sbb    eax,0xffffffff
   14000cb68:	ret    
   14000cb69:	nop
   14000cb6a:	shr    r9,0x2
   14000cb6e:	je     0x14000cba7
   14000cb70:	mov    rax,QWORD PTR [rcx]
   14000cb73:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000cb77:	jne    0x14000cbd4
   14000cb79:	mov    rax,QWORD PTR [rcx+0x8]
   14000cb7d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000cb82:	jne    0x14000cbd0
   14000cb84:	mov    rax,QWORD PTR [rcx+0x10]
   14000cb88:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000cb8d:	jne    0x14000cbcc
   14000cb8f:	mov    rax,QWORD PTR [rcx+0x18]
   14000cb93:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000cb98:	jne    0x14000cbc8
   14000cb9a:	add    rcx,0x20
   14000cb9e:	dec    r9
   14000cba1:	jne    0x14000cb70
   14000cba3:	and    r8,0x1f
   14000cba7:	mov    r9,r8
   14000cbaa:	shr    r9,0x3
   14000cbae:	je     0x14000cb4b
   14000cbb0:	mov    rax,QWORD PTR [rcx]
   14000cbb3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000cbb7:	jne    0x14000cbd4
   14000cbb9:	add    rcx,0x8
   14000cbbd:	dec    r9
   14000cbc0:	jne    0x14000cbb0
   14000cbc2:	and    r8,0x7
   14000cbc6:	jmp    0x14000cb4b
   14000cbc8:	add    rcx,0x8
   14000cbcc:	add    rcx,0x8
   14000cbd0:	add    rcx,0x8
   14000cbd4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000cbd8:	bswap  rax
   14000cbdb:	bswap  rcx
   14000cbde:	cmp    rax,rcx
   14000cbe1:	sbb    eax,eax
   14000cbe3:	sbb    eax,0xffffffff
   14000cbe6:	ret    
   14000cbe7:	int3   
   14000cbe8:	int3   
   14000cbe9:	int3   
   14000cbea:	int3   
   14000cbeb:	int3   
   14000cbec:	int3   
   14000cbed:	int3   
   14000cbee:	int3   
   14000cbef:	int3   
   14000cbf0:	int3   
   14000cbf1:	int3   
   14000cbf2:	int3   
   14000cbf3:	int3   
   14000cbf4:	int3   
   14000cbf5:	int3   
   14000cbf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc00:	test   r8,r8
   14000cc03:	je     0x14000cc7a
   14000cc05:	sub    rdx,rcx
   14000cc08:	mov    r9,rdx
   14000cc0b:	movabs r11,0x8101010101010100
   14000cc15:	test   cl,0x7
   14000cc18:	je     0x14000cc39
   14000cc1a:	mov    al,BYTE PTR [rcx]
   14000cc1c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000cc20:	inc    rcx
   14000cc23:	cmp    al,dl
   14000cc25:	jne    0x14000cc7e
   14000cc27:	dec    r8
   14000cc2a:	je     0x14000cc7a
   14000cc2c:	test   al,al
   14000cc2e:	je     0x14000cc7a
   14000cc30:	test   rcx,0x7
   14000cc37:	jne    0x14000cc1a
   14000cc39:	lea    rdx,[rcx+r9*1]
   14000cc3d:	and    dx,0xfff
   14000cc42:	cmp    dx,0xff8
   14000cc47:	ja     0x14000cc1a
   14000cc49:	mov    rax,QWORD PTR [rcx]
   14000cc4c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000cc50:	cmp    rax,rdx
   14000cc53:	jne    0x14000cc1a
   14000cc55:	add    rcx,0x8
   14000cc59:	sub    r8,0x8
   14000cc5d:	movabs r10,0x7efefefefefefeff
   14000cc67:	jbe    0x14000cc7a
   14000cc69:	xor    rax,0xffffffffffffffff
   14000cc6d:	add    r10,rdx
   14000cc70:	xor    rax,r10
   14000cc73:	test   r11,rax
   14000cc76:	je     0x14000cc39
   14000cc78:	jmp    0x14000cc86
   14000cc7a:	xor    rax,rax
   14000cc7d:	ret    
   14000cc7e:	sbb    rax,rax
   14000cc81:	sbb    rax,0xffffffffffffffff
   14000cc85:	ret    
   14000cc86:	test   dl,dl
   14000cc88:	je     0x14000ccb1
   14000cc8a:	test   dh,dh
   14000cc8c:	je     0x14000ccb1
   14000cc8e:	shr    rdx,0x10
   14000cc92:	test   dl,dl
   14000cc94:	je     0x14000ccb1
   14000cc96:	test   dh,dh
   14000cc98:	je     0x14000ccb1
   14000cc9a:	shr    rdx,0x10
   14000cc9e:	test   dl,dl
   14000cca0:	je     0x14000ccb1
   14000cca2:	test   dh,dh
   14000cca4:	je     0x14000ccb1
   14000cca6:	shr    edx,0x10
   14000cca9:	test   dl,dl
   14000ccab:	je     0x14000ccb1
   14000ccad:	test   dh,dh
   14000ccaf:	jne    0x14000cc39
   14000ccb1:	xor    rax,rax
   14000ccb4:	ret    
   14000ccb5:	int3   
   14000ccb6:	int3   
   14000ccb7:	int3   
   14000ccb8:	int3   
   14000ccb9:	int3   
   14000ccba:	int3   
   14000ccbb:	int3   
   14000ccbc:	sub    rsp,0x28
   14000ccc0:	call   0x14000872c
   14000ccc5:	test   rax,rax
   14000ccc8:	je     0x14000ccd4
   14000ccca:	mov    ecx,0x16
   14000cccf:	call   0x140008740
   14000ccd4:	test   BYTE PTR [rip+0x9655],0x2        # 0x140016330
   14000ccdb:	je     0x14000ccf1
   14000ccdd:	mov    r8d,0x1
   14000cce3:	mov    edx,0x40000015
   14000cce8:	lea    ecx,[r8+0x2]
   14000ccec:	call   0x1400067dc
   14000ccf1:	mov    ecx,0x3
   14000ccf6:	call   0x140004560
   14000ccfb:	int3   
   14000ccfc:	int3   
   14000ccfd:	int3   
   14000ccfe:	int3   
   14000ccff:	int3   
   14000cd00:	int3   
   14000cd01:	int3   
   14000cd02:	int3   
   14000cd03:	int3   
   14000cd04:	sub    rsp,0x28
   14000cd08:	test   rcx,rcx
   14000cd0b:	jne    0x14000cd26
   14000cd0d:	call   0x140006a54
   14000cd12:	mov    DWORD PTR [rax],0x16
   14000cd18:	call   0x1400069e0
   14000cd1d:	or     rax,0xffffffffffffffff
   14000cd21:	add    rsp,0x28
   14000cd25:	ret    
   14000cd26:	mov    r8,rcx
   14000cd29:	mov    rcx,QWORD PTR [rip+0x9ee0]        # 0x140016c10
   14000cd30:	xor    edx,edx
   14000cd32:	add    rsp,0x28
   14000cd36:	rex.W jmp QWORD PTR [rip+0x3373]        # 0x1400100b0
   14000cd3d:	int3   
   14000cd3e:	int3   
   14000cd3f:	int3   
   14000cd40:	int3   
   14000cd41:	int3   
   14000cd42:	int3   
   14000cd43:	int3   
   14000cd44:	mov    ecx,0x2
   14000cd49:	jmp    0x1400045a0
   14000cd4e:	int3   
   14000cd4f:	int3   
   14000cd50:	int3   
   14000cd51:	int3   
   14000cd52:	int3   
   14000cd53:	int3   
   14000cd54:	mov    QWORD PTR [rsp+0x8],rbx
   14000cd59:	push   rdi
   14000cd5a:	sub    rsp,0x20
   14000cd5e:	mov    rbx,r8
   14000cd61:	mov    rdi,rdx
   14000cd64:	test   rcx,rcx
   14000cd67:	je     0x14000cd86
   14000cd69:	xor    edx,edx
   14000cd6b:	lea    rax,[rdx-0x20]
   14000cd6f:	div    rcx
   14000cd72:	cmp    rax,rdi
   14000cd75:	jae    0x14000cd86
   14000cd77:	call   0x140006a54
   14000cd7c:	mov    DWORD PTR [rax],0xc
   14000cd82:	xor    eax,eax
   14000cd84:	jmp    0x14000cde3
   14000cd86:	imul   rdi,rcx
   14000cd8a:	mov    eax,0x1
   14000cd8f:	test   rdi,rdi
   14000cd92:	cmove  rdi,rax
   14000cd96:	xor    eax,eax
   14000cd98:	cmp    rdi,0xffffffffffffffe0
   14000cd9c:	ja     0x14000cdb6
   14000cd9e:	mov    rcx,QWORD PTR [rip+0x9e6b]        # 0x140016c10
   14000cda5:	lea    edx,[rax+0x8]
   14000cda8:	mov    r8,rdi
   14000cdab:	call   QWORD PTR [rip+0x3317]        # 0x1400100c8
   14000cdb1:	test   rax,rax
   14000cdb4:	jne    0x14000cde3
   14000cdb6:	cmp    DWORD PTR [rip+0xa703],0x0        # 0x1400174c0
   14000cdbd:	je     0x14000cdd8
   14000cdbf:	mov    rcx,rdi
   14000cdc2:	call   0x1400089a8
   14000cdc7:	test   eax,eax
   14000cdc9:	jne    0x14000cd96
   14000cdcb:	test   rbx,rbx
   14000cdce:	je     0x14000cd82
   14000cdd0:	mov    DWORD PTR [rbx],0xc
   14000cdd6:	jmp    0x14000cd82
   14000cdd8:	test   rbx,rbx
   14000cddb:	je     0x14000cde3
   14000cddd:	mov    DWORD PTR [rbx],0xc
   14000cde3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cde8:	add    rsp,0x20
   14000cdec:	pop    rdi
   14000cded:	ret    
   14000cdee:	int3   
   14000cdef:	int3   
   14000cdf0:	int3   
   14000cdf1:	int3   
   14000cdf2:	int3   
   14000cdf3:	int3   
   14000cdf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000cdf9:	mov    QWORD PTR [rsp+0x10],rsi
   14000cdfe:	push   rdi
   14000cdff:	sub    rsp,0x20
   14000ce03:	mov    rbx,rdx
   14000ce06:	mov    rdi,rcx
   14000ce09:	test   rcx,rcx
   14000ce0c:	jne    0x14000ce18
   14000ce0e:	mov    rcx,rdx
   14000ce11:	call   0x14000bcf0
   14000ce16:	jmp    0x14000ce82
   14000ce18:	test   rdx,rdx
   14000ce1b:	jne    0x14000ce24
   14000ce1d:	call   0x1400058cc
   14000ce22:	jmp    0x14000ce80
   14000ce24:	cmp    rdx,0xffffffffffffffe0
   14000ce28:	ja     0x14000ce6d
   14000ce2a:	mov    rcx,QWORD PTR [rip+0x9ddf]        # 0x140016c10
   14000ce31:	mov    eax,0x1
   14000ce36:	test   rbx,rbx
   14000ce39:	cmove  rbx,rax
   14000ce3d:	mov    r8,rdi
   14000ce40:	xor    edx,edx
   14000ce42:	mov    r9,rbx
   14000ce45:	call   QWORD PTR [rip+0x325d]        # 0x1400100a8
   14000ce4b:	mov    rsi,rax
   14000ce4e:	test   rax,rax
   14000ce51:	jne    0x14000cec2
   14000ce53:	cmp    DWORD PTR [rip+0xa667],eax        # 0x1400174c0
   14000ce59:	je     0x14000ceab
   14000ce5b:	mov    rcx,rbx
   14000ce5e:	call   0x1400089a8
   14000ce63:	test   eax,eax
   14000ce65:	je     0x14000ce92
   14000ce67:	cmp    rbx,0xffffffffffffffe0
   14000ce6b:	jbe    0x14000ce2a
   14000ce6d:	mov    rcx,rbx
   14000ce70:	call   0x1400089a8
   14000ce75:	call   0x140006a54
   14000ce7a:	mov    DWORD PTR [rax],0xc
   14000ce80:	xor    eax,eax
   14000ce82:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce87:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ce8c:	add    rsp,0x20
   14000ce90:	pop    rdi
   14000ce91:	ret    
   14000ce92:	call   0x140006a54
   14000ce97:	mov    rbx,rax
   14000ce9a:	call   QWORD PTR [rip+0x31a8]        # 0x140010048
   14000cea0:	mov    ecx,eax
   14000cea2:	call   0x140006a04
   14000cea7:	mov    DWORD PTR [rbx],eax
   14000cea9:	jmp    0x14000ce80
   14000ceab:	call   0x140006a54
   14000ceb0:	mov    rbx,rax
   14000ceb3:	call   QWORD PTR [rip+0x318f]        # 0x140010048
   14000ceb9:	mov    ecx,eax
   14000cebb:	call   0x140006a04
   14000cec0:	mov    DWORD PTR [rbx],eax
   14000cec2:	mov    rax,rsi
   14000cec5:	jmp    0x14000ce82
   14000cec7:	int3   
   14000cec8:	int3   
   14000cec9:	int3   
   14000ceca:	int3   
   14000cecb:	int3   
   14000cecc:	int3   
   14000cecd:	int3   
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	mov    QWORD PTR [rsp+0x8],rbx
   14000ced5:	mov    QWORD PTR [rsp+0x10],rbp
   14000ceda:	push   rdi
   14000cedb:	sub    rsp,0x20
   14000cedf:	test   ecx,ecx
   14000cee1:	js     0x14000cf54
   14000cee3:	cmp    ecx,DWORD PTR [rip+0xb89f]        # 0x140018788
   14000cee9:	jae    0x14000cf54
   14000ceeb:	movsxd rbx,ecx
   14000ceee:	lea    rbp,[rip+0xb8ab]        # 0x1400187a0
   14000cef5:	mov    rdi,rbx
   14000cef8:	and    ebx,0x1f
   14000cefb:	sar    rdi,0x5
   14000ceff:	imul   rbx,rbx,0x58
   14000cf03:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000cf08:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000cf0d:	je     0x14000cf54
   14000cf0f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000cf14:	je     0x14000cf54
   14000cf16:	cmp    DWORD PTR [rip+0x80e3],0x1        # 0x140015000
   14000cf1d:	jne    0x14000cf46
   14000cf1f:	test   ecx,ecx
   14000cf21:	je     0x14000cf39
   14000cf23:	dec    ecx
   14000cf25:	je     0x14000cf32
   14000cf27:	dec    ecx
   14000cf29:	jne    0x14000cf46
   14000cf2b:	mov    ecx,0xfffffff4
   14000cf30:	jmp    0x14000cf3e
   14000cf32:	mov    ecx,0xfffffff5
   14000cf37:	jmp    0x14000cf3e
   14000cf39:	mov    ecx,0xfffffff6
   14000cf3e:	xor    edx,edx
   14000cf40:	call   QWORD PTR [rip+0x315a]        # 0x1400100a0
   14000cf46:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000cf4b:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000cf50:	xor    eax,eax
   14000cf52:	jmp    0x14000cf6a
   14000cf54:	call   0x140006a54
   14000cf59:	mov    DWORD PTR [rax],0x9
   14000cf5f:	call   0x140006a7c
   14000cf64:	and    DWORD PTR [rax],0x0
   14000cf67:	or     eax,0xffffffff
   14000cf6a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cf6f:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cf74:	add    rsp,0x20
   14000cf78:	pop    rdi
   14000cf79:	ret    
   14000cf7a:	int3   
   14000cf7b:	int3   
   14000cf7c:	int3   
   14000cf7d:	int3   
   14000cf7e:	int3   
   14000cf7f:	int3   
   14000cf80:	sub    rsp,0x28
   14000cf84:	cmp    ecx,0xfffffffe
   14000cf87:	jne    0x14000cf9e
   14000cf89:	call   0x140006a7c
   14000cf8e:	and    DWORD PTR [rax],0x0
   14000cf91:	call   0x140006a54
   14000cf96:	mov    DWORD PTR [rax],0x9
   14000cf9c:	jmp    0x14000cfeb
   14000cf9e:	test   ecx,ecx
   14000cfa0:	js     0x14000cfd3
   14000cfa2:	cmp    ecx,DWORD PTR [rip+0xb7e0]        # 0x140018788
   14000cfa8:	jae    0x14000cfd3
   14000cfaa:	movsxd rdx,ecx
   14000cfad:	lea    rcx,[rip+0xb7ec]        # 0x1400187a0
   14000cfb4:	mov    rax,rdx
   14000cfb7:	and    edx,0x1f
   14000cfba:	sar    rax,0x5
   14000cfbe:	imul   rdx,rdx,0x58
   14000cfc2:	mov    rax,QWORD PTR [rcx+rax*8]
   14000cfc6:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000cfcb:	je     0x14000cfd3
   14000cfcd:	mov    rax,QWORD PTR [rax+rdx*1]
   14000cfd1:	jmp    0x14000cfef
   14000cfd3:	call   0x140006a7c
   14000cfd8:	and    DWORD PTR [rax],0x0
   14000cfdb:	call   0x140006a54
   14000cfe0:	mov    DWORD PTR [rax],0x9
   14000cfe6:	call   0x1400069e0
   14000cfeb:	or     rax,0xffffffffffffffff
   14000cfef:	add    rsp,0x28
   14000cff3:	ret    
   14000cff4:	int3   
   14000cff5:	int3   
   14000cff6:	int3   
   14000cff7:	int3   
   14000cff8:	int3   
   14000cff9:	int3   
   14000cffa:	int3   
   14000cffb:	int3   
   14000cffc:	mov    rax,rsp
   14000cfff:	mov    QWORD PTR [rax+0x8],rbx
   14000d003:	mov    QWORD PTR [rax+0x10],rsi
   14000d007:	mov    QWORD PTR [rax+0x18],rdi
   14000d00b:	mov    QWORD PTR [rax+0x20],r12
   14000d00f:	push   r14
   14000d011:	sub    rsp,0x20
   14000d015:	movsxd rbx,ecx
   14000d018:	mov    r12,rbx
   14000d01b:	sar    r12,0x5
   14000d01f:	lea    r14,[rip+0xb77a]        # 0x1400187a0
   14000d026:	and    ebx,0x1f
   14000d029:	imul   rbx,rbx,0x58
   14000d02d:	mov    rsi,QWORD PTR [r14+r12*8]
   14000d031:	mov    edi,0x1
   14000d036:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000d03b:	jne    0x14000d071
   14000d03d:	lea    ecx,[rdi+0x9]
   14000d040:	call   0x1400086bc
   14000d045:	nop
   14000d046:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000d04b:	jne    0x14000d067
   14000d04d:	lea    rcx,[rbx+rsi*1+0x10]
   14000d052:	mov    edx,0xfa0
   14000d057:	call   QWORD PTR [rip+0x30f3]        # 0x140010150
   14000d05d:	neg    eax
   14000d05f:	sbb    edx,edx
   14000d061:	and    edi,edx
   14000d063:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14000d067:	mov    ecx,0xa
   14000d06c:	call   0x1400085b0
   14000d071:	test   edi,edi
   14000d073:	je     0x14000d084
   14000d075:	mov    rcx,QWORD PTR [r14+r12*8]
   14000d079:	lea    rcx,[rcx+rbx*1+0x10]
   14000d07e:	call   QWORD PTR [rip+0x31c4]        # 0x140010248
   14000d084:	mov    eax,edi
   14000d086:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d08b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d090:	mov    rdi,QWORD PTR [rsp+0x40]
   14000d095:	mov    r12,QWORD PTR [rsp+0x48]
   14000d09a:	add    rsp,0x20
   14000d09e:	pop    r14
   14000d0a0:	ret    
   14000d0a1:	int3   
   14000d0a2:	int3   
   14000d0a3:	int3   
   14000d0a4:	int3   
   14000d0a5:	int3   
   14000d0a6:	int3   
   14000d0a7:	int3   
   14000d0a8:	movsxd rdx,ecx
   14000d0ab:	lea    rcx,[rip+0xb6ee]        # 0x1400187a0
   14000d0b2:	mov    rax,rdx
   14000d0b5:	and    edx,0x1f
   14000d0b8:	sar    rax,0x5
   14000d0bc:	imul   rdx,rdx,0x58
   14000d0c0:	mov    rax,QWORD PTR [rcx+rax*8]
   14000d0c4:	lea    rcx,[rax+rdx*1+0x10]
   14000d0c9:	rex.W jmp QWORD PTR [rip+0x3170]        # 0x140010240
   14000d0d0:	int3   
   14000d0d1:	int3   
   14000d0d2:	int3   
   14000d0d3:	int3   
   14000d0d4:	int3   
   14000d0d5:	int3   
   14000d0d6:	int3   
   14000d0d7:	int3   
   14000d0d8:	mov    WORD PTR [rsp+0x8],cx
   14000d0dd:	sub    rsp,0x38
   14000d0e1:	mov    rcx,QWORD PTR [rip+0x9258]        # 0x140016340
   14000d0e8:	cmp    rcx,0xfffffffffffffffe
   14000d0ec:	jne    0x14000d0fa
   14000d0ee:	call   0x14000d8bc
   14000d0f3:	mov    rcx,QWORD PTR [rip+0x9246]        # 0x140016340
   14000d0fa:	cmp    rcx,0xffffffffffffffff
   14000d0fe:	jne    0x14000d107
   14000d100:	mov    eax,0xffff
   14000d105:	jmp    0x14000d12c
   14000d107:	and    QWORD PTR [rsp+0x20],0x0
   14000d10d:	lea    r9,[rsp+0x48]
   14000d112:	lea    rdx,[rsp+0x40]
   14000d117:	mov    r8d,0x1
   14000d11d:	call   QWORD PTR [rip+0x2f75]        # 0x140010098
   14000d123:	test   eax,eax
   14000d125:	je     0x14000d100
   14000d127:	movzx  eax,WORD PTR [rsp+0x40]
   14000d12c:	add    rsp,0x38
   14000d130:	ret    
   14000d131:	int3   
   14000d132:	int3   
   14000d133:	int3   
   14000d134:	int3   
   14000d135:	int3   
   14000d136:	int3   
   14000d137:	int3   
   14000d138:	int3   
   14000d139:	int3   
   14000d13a:	int3   
   14000d13b:	int3   
   14000d13c:	int3   
   14000d13d:	int3   
   14000d13e:	int3   
   14000d13f:	int3   
   14000d140:	int3   
   14000d141:	int3   
   14000d142:	int3   
   14000d143:	int3   
   14000d144:	int3   
   14000d145:	int3   
   14000d146:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d150:	sub    rsp,0x10
   14000d154:	mov    QWORD PTR [rsp],r10
   14000d158:	mov    QWORD PTR [rsp+0x8],r11
   14000d15d:	xor    r11,r11
   14000d160:	lea    r10,[rsp+0x18]
   14000d165:	sub    r10,rax
   14000d168:	cmovb  r10,r11
   14000d16c:	mov    r11,QWORD PTR gs:0x10
   14000d175:	cmp    r10,r11
   14000d178:	jae    0x14000d190
   14000d17a:	and    r10w,0xf000
   14000d180:	lea    r11,[r11-0x1000]
   14000d187:	mov    BYTE PTR [r11],0x0
   14000d18b:	cmp    r10,r11
   14000d18e:	jne    0x14000d180
   14000d190:	mov    r10,QWORD PTR [rsp]
   14000d194:	mov    r11,QWORD PTR [rsp+0x8]
   14000d199:	add    rsp,0x10
   14000d19d:	ret    
   14000d19e:	int3   
   14000d19f:	int3   
   14000d1a0:	int3   
   14000d1a1:	int3   
   14000d1a2:	int3   
   14000d1a3:	int3   
   14000d1a4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1a9:	mov    QWORD PTR [rsp+0x10],rsi
   14000d1ae:	push   rdi
   14000d1af:	sub    rsp,0x30
   14000d1b3:	xor    edi,edi
   14000d1b5:	lea    ecx,[rdi+0x1]
   14000d1b8:	call   0x1400086bc
   14000d1bd:	nop
   14000d1be:	lea    ebx,[rdi+0x3]
   14000d1c1:	mov    DWORD PTR [rsp+0x20],ebx
   14000d1c5:	cmp    ebx,DWORD PTR [rip+0xb5b5]        # 0x140018780
   14000d1cb:	jge    0x14000d232
   14000d1cd:	movsxd rsi,ebx
   14000d1d0:	mov    rax,QWORD PTR [rip+0xa589]        # 0x140017760
   14000d1d7:	cmp    QWORD PTR [rax+rsi*8],0x0
   14000d1dc:	je     0x14000d22e
   14000d1de:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000d1e2:	test   BYTE PTR [rcx+0x18],0x83
   14000d1e6:	je     0x14000d1f8
   14000d1e8:	call   0x14000d9a8
   14000d1ed:	cmp    eax,0xffffffff
   14000d1f0:	je     0x14000d1f8
   14000d1f2:	inc    edi
   14000d1f4:	mov    DWORD PTR [rsp+0x24],edi
   14000d1f8:	cmp    ebx,0x14
   14000d1fb:	jl     0x14000d22e
   14000d1fd:	mov    rax,QWORD PTR [rip+0xa55c]        # 0x140017760
   14000d204:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000d208:	add    rcx,0x30
   14000d20c:	call   QWORD PTR [rip+0x2f56]        # 0x140010168
   14000d212:	mov    rcx,QWORD PTR [rip+0xa547]        # 0x140017760
   14000d219:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14000d21d:	call   0x1400058cc
   14000d222:	mov    r11,QWORD PTR [rip+0xa537]        # 0x140017760
   14000d229:	and    QWORD PTR [r11+rsi*8],0x0
   14000d22e:	inc    ebx
   14000d230:	jmp    0x14000d1c1
   14000d232:	mov    ecx,0x1
   14000d237:	call   0x1400085b0
   14000d23c:	mov    eax,edi
   14000d23e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d243:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d248:	add    rsp,0x30
   14000d24c:	pop    rdi
   14000d24d:	ret    
   14000d24e:	int3   
   14000d24f:	int3   
   14000d250:	int3   
   14000d251:	int3   
   14000d252:	int3   
   14000d253:	int3   
   14000d254:	mov    QWORD PTR [rsp+0x8],rbx
   14000d259:	mov    QWORD PTR [rsp+0x10],rsi
   14000d25e:	push   rdi
   14000d25f:	sub    rsp,0x20
   14000d263:	mov    eax,DWORD PTR [rcx+0x18]
   14000d266:	xor    esi,esi
   14000d268:	mov    rbx,rcx
   14000d26b:	and    al,0x3
   14000d26d:	cmp    al,0x2
   14000d26f:	jne    0x14000d2b0
   14000d271:	test   DWORD PTR [rcx+0x18],0x108
   14000d278:	je     0x14000d2b0
   14000d27a:	mov    edi,DWORD PTR [rcx]
   14000d27c:	sub    edi,DWORD PTR [rcx+0x10]
   14000d27f:	test   edi,edi
   14000d281:	jle    0x14000d2b0
   14000d283:	call   0x14000a124
   14000d288:	mov    rdx,QWORD PTR [rbx+0x10]
   14000d28c:	mov    r8d,edi
   14000d28f:	mov    ecx,eax
   14000d291:	call   0x140009d34
   14000d296:	cmp    eax,edi
   14000d298:	jne    0x14000d2a9
   14000d29a:	mov    eax,DWORD PTR [rbx+0x18]
   14000d29d:	test   al,al
   14000d29f:	jns    0x14000d2b0
   14000d2a1:	and    eax,0xfffffffd
   14000d2a4:	mov    DWORD PTR [rbx+0x18],eax
   14000d2a7:	jmp    0x14000d2b0
   14000d2a9:	or     DWORD PTR [rbx+0x18],0x20
   14000d2ad:	or     esi,0xffffffff
   14000d2b0:	mov    rcx,QWORD PTR [rbx+0x10]
   14000d2b4:	and    DWORD PTR [rbx+0x8],0x0
   14000d2b8:	mov    eax,esi
   14000d2ba:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d2bf:	mov    QWORD PTR [rbx],rcx
   14000d2c2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d2c7:	add    rsp,0x20
   14000d2cb:	pop    rdi
   14000d2cc:	ret    
   14000d2cd:	int3   
   14000d2ce:	int3   
   14000d2cf:	int3   
   14000d2d0:	int3   
   14000d2d1:	int3   
   14000d2d2:	int3   
   14000d2d3:	int3   
   14000d2d4:	rex push rbx
   14000d2d6:	sub    rsp,0x20
   14000d2da:	mov    rbx,rcx
   14000d2dd:	test   rcx,rcx
   14000d2e0:	jne    0x14000d2ec
   14000d2e2:	add    rsp,0x20
   14000d2e6:	pop    rbx
   14000d2e7:	jmp    0x14000d328
   14000d2ec:	call   0x14000d254
   14000d2f1:	test   eax,eax
   14000d2f3:	je     0x14000d2fa
   14000d2f5:	or     eax,0xffffffff
   14000d2f8:	jmp    0x14000d31a
   14000d2fa:	test   DWORD PTR [rbx+0x18],0x4000
   14000d301:	je     0x14000d318
   14000d303:	mov    rcx,rbx
   14000d306:	call   0x14000a124
   14000d30b:	mov    ecx,eax
   14000d30d:	call   0x14000da14
   14000d312:	neg    eax
   14000d314:	sbb    eax,eax
   14000d316:	jmp    0x14000d31a
   14000d318:	xor    eax,eax
   14000d31a:	add    rsp,0x20
   14000d31e:	pop    rbx
   14000d31f:	ret    
   14000d320:	int3   
   14000d321:	int3   
   14000d322:	int3   
   14000d323:	int3   
   14000d324:	int3   
   14000d325:	int3   
   14000d326:	int3   
   14000d327:	int3   
   14000d328:	mov    QWORD PTR [rsp+0x8],rbx
   14000d32d:	mov    QWORD PTR [rsp+0x10],rsi
   14000d332:	mov    QWORD PTR [rsp+0x18],rdi
   14000d337:	push   r12
   14000d339:	push   r13
   14000d33b:	push   r15
   14000d33d:	sub    rsp,0x30
   14000d341:	mov    r13d,ecx
   14000d344:	xor    esi,esi
   14000d346:	xor    edi,edi
   14000d348:	lea    ecx,[rsi+0x1]
   14000d34b:	call   0x1400086bc
   14000d350:	nop
   14000d351:	xor    ebx,ebx
   14000d353:	or     r15d,0xffffffff
   14000d357:	mov    DWORD PTR [rsp+0x20],ebx
   14000d35b:	cmp    ebx,DWORD PTR [rip+0xb41f]        # 0x140018780
   14000d361:	jge    0x14000d3e7
   14000d367:	movsxd r12,ebx
   14000d36a:	mov    rax,QWORD PTR [rip+0xa3ef]        # 0x140017760
   14000d371:	cmp    QWORD PTR [rax+r12*8],0x0
   14000d376:	je     0x14000d3e0
   14000d378:	mov    rdx,QWORD PTR [rax+r12*8]
   14000d37c:	test   BYTE PTR [rdx+0x18],0x83
   14000d380:	je     0x14000d3e0
   14000d382:	mov    ecx,ebx
   14000d384:	call   0x14000a074
   14000d389:	nop
   14000d38a:	mov    rax,QWORD PTR [rip+0xa3cf]        # 0x140017760
   14000d391:	mov    rcx,QWORD PTR [rax+r12*8]
   14000d395:	test   BYTE PTR [rcx+0x18],0x83
   14000d399:	je     0x14000d3ce
   14000d39b:	cmp    r13d,0x1
   14000d39f:	jne    0x14000d3b3
   14000d3a1:	call   0x14000d2d4
   14000d3a6:	cmp    eax,r15d
   14000d3a9:	je     0x14000d3ce
   14000d3ab:	inc    esi
   14000d3ad:	mov    DWORD PTR [rsp+0x24],esi
   14000d3b1:	jmp    0x14000d3ce
   14000d3b3:	test   r13d,r13d
   14000d3b6:	jne    0x14000d3ce
   14000d3b8:	test   BYTE PTR [rcx+0x18],0x2
   14000d3bc:	je     0x14000d3ce
   14000d3be:	call   0x14000d2d4
   14000d3c3:	cmp    eax,r15d
   14000d3c6:	cmove  edi,r15d
   14000d3ca:	mov    DWORD PTR [rsp+0x28],edi
   14000d3ce:	mov    rdx,QWORD PTR [rip+0xa38b]        # 0x140017760
   14000d3d5:	mov    rdx,QWORD PTR [rdx+r12*8]
   14000d3d9:	mov    ecx,ebx
   14000d3db:	call   0x14000a100
   14000d3e0:	inc    ebx
   14000d3e2:	jmp    0x14000d357
   14000d3e7:	mov    ecx,0x1
   14000d3ec:	call   0x1400085b0
   14000d3f1:	cmp    r13d,0x1
   14000d3f5:	cmove  edi,esi
   14000d3f8:	mov    eax,edi
   14000d3fa:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d3ff:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d404:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d409:	add    rsp,0x30
   14000d40d:	pop    r15
   14000d40f:	pop    r13
   14000d411:	pop    r12
   14000d413:	ret    
   14000d414:	int3   
   14000d415:	int3   
   14000d416:	int3   
   14000d417:	int3   
   14000d418:	int3   
   14000d419:	int3   
   14000d41a:	int3   
   14000d41b:	int3   
   14000d41c:	mov    ecx,0x1
   14000d421:	jmp    0x14000d328
   14000d426:	int3   
   14000d427:	int3   
   14000d428:	int3   
   14000d429:	int3   
   14000d42a:	int3   
   14000d42b:	int3   
   14000d42c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d431:	mov    QWORD PTR [rsp+0x18],rbp
   14000d436:	push   rsi
   14000d437:	push   rdi
   14000d438:	push   r12
   14000d43a:	sub    rsp,0x20
   14000d43e:	mov    r12d,ecx
   14000d441:	mov    rcx,rdx
   14000d444:	mov    rbx,rdx
   14000d447:	call   0x14000a124
   14000d44c:	mov    edx,DWORD PTR [rbx+0x18]
   14000d44f:	movsxd rsi,eax
   14000d452:	test   dl,0x82
   14000d455:	jne    0x14000d470
   14000d457:	call   0x140006a54
   14000d45c:	mov    DWORD PTR [rax],0x9
   14000d462:	or     DWORD PTR [rbx+0x18],0x20
   14000d466:	mov    eax,0xffff
   14000d46b:	jmp    0x14000d5a8
   14000d470:	test   dl,0x40
   14000d473:	je     0x14000d482
   14000d475:	call   0x140006a54
   14000d47a:	mov    DWORD PTR [rax],0x22
   14000d480:	jmp    0x14000d462
   14000d482:	xor    edi,edi
   14000d484:	test   dl,0x1
   14000d487:	je     0x14000d4a2
   14000d489:	mov    DWORD PTR [rbx+0x8],edi
   14000d48c:	test   dl,0x10
   14000d48f:	je     0x14000d51f
   14000d495:	mov    rax,QWORD PTR [rbx+0x10]
   14000d499:	and    edx,0xfffffffe
   14000d49c:	mov    QWORD PTR [rbx],rax
   14000d49f:	mov    DWORD PTR [rbx+0x18],edx
   14000d4a2:	mov    eax,DWORD PTR [rbx+0x18]
   14000d4a5:	mov    DWORD PTR [rbx+0x8],edi
   14000d4a8:	and    eax,0xffffffef
   14000d4ab:	or     eax,0x2
   14000d4ae:	mov    DWORD PTR [rbx+0x18],eax
   14000d4b1:	test   eax,0x10c
   14000d4b6:	jne    0x14000d4e7
   14000d4b8:	call   0x140009ee0
   14000d4bd:	add    rax,0x30
   14000d4c1:	cmp    rbx,rax
   14000d4c4:	je     0x14000d4d4
   14000d4c6:	call   0x140009ee0
   14000d4cb:	add    rax,0x60
   14000d4cf:	cmp    rbx,rax
   14000d4d2:	jne    0x14000d4df
   14000d4d4:	mov    ecx,esi
   14000d4d6:	call   0x140009e78
   14000d4db:	test   eax,eax
   14000d4dd:	jne    0x14000d4e7
   14000d4df:	mov    rcx,rbx
   14000d4e2:	call   0x140009e1c
   14000d4e7:	test   DWORD PTR [rbx+0x18],0x108
   14000d4ee:	je     0x14000d580
   14000d4f4:	mov    ebp,DWORD PTR [rbx]
   14000d4f6:	mov    rdx,QWORD PTR [rbx+0x10]
   14000d4fa:	sub    ebp,DWORD PTR [rbx+0x10]
   14000d4fd:	lea    rax,[rdx+0x2]
   14000d501:	mov    QWORD PTR [rbx],rax
   14000d504:	mov    eax,DWORD PTR [rbx+0x24]
   14000d507:	sub    eax,0x2
   14000d50a:	mov    DWORD PTR [rbx+0x8],eax
   14000d50d:	test   ebp,ebp
   14000d50f:	jle    0x14000d52a
   14000d511:	mov    r8d,ebp
   14000d514:	mov    ecx,esi
   14000d516:	call   0x140009d34
   14000d51b:	mov    edi,eax
   14000d51d:	jmp    0x14000d576
   14000d51f:	or     edx,0x20
   14000d522:	mov    DWORD PTR [rbx+0x18],edx
   14000d525:	jmp    0x14000d466
   14000d52a:	cmp    esi,0xffffffff
   14000d52d:	je     0x14000d552
   14000d52f:	cmp    esi,0xfffffffe
   14000d532:	je     0x14000d552
   14000d534:	mov    rcx,rsi
   14000d537:	mov    rax,rsi
   14000d53a:	lea    rdx,[rip+0xb25f]        # 0x1400187a0
   14000d541:	and    ecx,0x1f
   14000d544:	sar    rax,0x5
   14000d548:	imul   rcx,rcx,0x58
   14000d54c:	add    rcx,QWORD PTR [rdx+rax*8]
   14000d550:	jmp    0x14000d559
   14000d552:	lea    rcx,[rip+0x7ab7]        # 0x140015010
   14000d559:	test   BYTE PTR [rcx+0x8],0x20
   14000d55d:	je     0x14000d576
   14000d55f:	xor    edx,edx
   14000d561:	mov    ecx,esi
   14000d563:	lea    r8d,[rdx+0x2]
   14000d567:	call   0x1400094e0
   14000d56c:	cmp    rax,0xffffffffffffffff
   14000d570:	je     0x14000d462
   14000d576:	mov    rax,QWORD PTR [rbx+0x10]
   14000d57a:	mov    WORD PTR [rax],r12w
   14000d57e:	jmp    0x14000d59c
   14000d580:	mov    ebp,0x2
   14000d585:	lea    rdx,[rsp+0x48]
   14000d58a:	mov    ecx,esi
   14000d58c:	mov    r8d,ebp
   14000d58f:	mov    WORD PTR [rsp+0x48],r12w
   14000d595:	call   0x140009d34
   14000d59a:	mov    edi,eax
   14000d59c:	cmp    edi,ebp
   14000d59e:	jne    0x14000d462
   14000d5a4:	movzx  eax,r12w
   14000d5a8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d5ad:	mov    rbp,QWORD PTR [rsp+0x50]
   14000d5b2:	add    rsp,0x20
   14000d5b6:	pop    r12
   14000d5b8:	pop    rdi
   14000d5b9:	pop    rsi
   14000d5ba:	ret    
   14000d5bb:	int3   
   14000d5bc:	int3   
   14000d5bd:	int3   
   14000d5be:	int3   
   14000d5bf:	int3   
   14000d5c0:	int3   
   14000d5c1:	int3   
   14000d5c2:	int3   
   14000d5c3:	int3   
   14000d5c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5c9:	mov    WORD PTR [rsp+0x20],r9w
   14000d5cf:	push   rbp
   14000d5d0:	push   rsi
   14000d5d1:	push   rdi
   14000d5d2:	mov    rbp,rsp
   14000d5d5:	sub    rsp,0x60
   14000d5d9:	mov    rdi,r8
   14000d5dc:	mov    rsi,rdx
   14000d5df:	mov    rbx,rcx
   14000d5e2:	test   rdx,rdx
   14000d5e5:	jne    0x14000d5fa
   14000d5e7:	test   r8,r8
   14000d5ea:	je     0x14000d5fa
   14000d5ec:	test   rcx,rcx
   14000d5ef:	je     0x14000d5f3
   14000d5f1:	and    DWORD PTR [rcx],edx
   14000d5f3:	xor    eax,eax
   14000d5f5:	jmp    0x14000d684
   14000d5fa:	test   rcx,rcx
   14000d5fd:	je     0x14000d602
   14000d5ff:	or     DWORD PTR [rcx],0xffffffff
   14000d602:	cmp    r8,0x7fffffff
   14000d609:	jbe    0x14000d620
   14000d60b:	call   0x140006a54
   14000d610:	mov    ebx,0x16
   14000d615:	mov    DWORD PTR [rax],ebx
   14000d617:	call   0x1400069e0
   14000d61c:	mov    eax,ebx
   14000d61e:	jmp    0x14000d684
   14000d620:	mov    rdx,QWORD PTR [rbp+0x40]
   14000d624:	lea    rcx,[rbp-0x20]
   14000d628:	call   0x140003f18
   14000d62d:	mov    r11,QWORD PTR [rbp-0x20]
   14000d631:	cmp    DWORD PTR [r11+0x14],0x0
   14000d636:	jne    0x14000d6ee
   14000d63c:	movzx  eax,WORD PTR [rbp+0x38]
   14000d640:	mov    ecx,0xff
   14000d645:	cmp    ax,cx
   14000d648:	jbe    0x14000d694
   14000d64a:	test   rsi,rsi
   14000d64d:	je     0x14000d661
   14000d64f:	test   rdi,rdi
   14000d652:	je     0x14000d661
   14000d654:	mov    r8,rdi
   14000d657:	xor    edx,edx
   14000d659:	mov    rcx,rsi
   14000d65c:	call   0x140006b00
   14000d661:	call   0x140006a54
   14000d666:	mov    DWORD PTR [rax],0x2a
   14000d66c:	call   0x140006a54
   14000d671:	cmp    BYTE PTR [rbp-0x8],0x0
   14000d675:	mov    eax,DWORD PTR [rax]
   14000d677:	je     0x14000d684
   14000d679:	mov    rcx,QWORD PTR [rbp-0x10]
   14000d67d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d684:	mov    rbx,QWORD PTR [rsp+0x80]
   14000d68c:	add    rsp,0x60
   14000d690:	pop    rdi
   14000d691:	pop    rsi
   14000d692:	pop    rbp
   14000d693:	ret    
   14000d694:	test   rsi,rsi
   14000d697:	je     0x14000d6c9
   14000d699:	test   rdi,rdi
   14000d69c:	jne    0x14000d6c7
   14000d69e:	call   0x140006a54
   14000d6a3:	lea    ebx,[rdi+0x22]
   14000d6a6:	mov    DWORD PTR [rax],ebx
   14000d6a8:	call   0x1400069e0
   14000d6ad:	cmp    BYTE PTR [rbp-0x8],dil
   14000d6b1:	je     0x14000d61c
   14000d6b7:	mov    rcx,QWORD PTR [rbp-0x10]
   14000d6bb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d6c2:	jmp    0x14000d61c
   14000d6c7:	mov    BYTE PTR [rsi],al
   14000d6c9:	test   rbx,rbx
   14000d6cc:	je     0x14000d6d4
   14000d6ce:	mov    DWORD PTR [rbx],0x1
   14000d6d4:	cmp    BYTE PTR [rbp-0x8],0x0
   14000d6d8:	je     0x14000d5f3
   14000d6de:	mov    rax,QWORD PTR [rbp-0x10]
   14000d6e2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d6e9:	jmp    0x14000d5f3
   14000d6ee:	and    DWORD PTR [rbp+0x28],0x0
   14000d6f2:	mov    ecx,DWORD PTR [r11+0x4]
   14000d6f6:	lea    rax,[rbp+0x28]
   14000d6fa:	mov    QWORD PTR [rsp+0x38],rax
   14000d6ff:	and    QWORD PTR [rsp+0x30],0x0
   14000d705:	lea    r8,[rbp+0x38]
   14000d709:	mov    r9d,0x1
   14000d70f:	xor    edx,edx
   14000d711:	mov    DWORD PTR [rsp+0x28],edi
   14000d715:	mov    QWORD PTR [rsp+0x20],rsi
   14000d71a:	call   QWORD PTR [rip+0x29d0]        # 0x1400100f0
   14000d720:	test   eax,eax
   14000d722:	je     0x14000d737
   14000d724:	cmp    DWORD PTR [rbp+0x28],0x0
   14000d728:	jne    0x14000d661
   14000d72e:	test   rbx,rbx
   14000d731:	je     0x14000d6d4
   14000d733:	mov    DWORD PTR [rbx],eax
   14000d735:	jmp    0x14000d6d4
   14000d737:	call   QWORD PTR [rip+0x290b]        # 0x140010048
   14000d73d:	cmp    eax,0x7a
   14000d740:	jne    0x14000d661
   14000d746:	test   rsi,rsi
   14000d749:	je     0x14000d75d
   14000d74b:	test   rdi,rdi
   14000d74e:	je     0x14000d75d
   14000d750:	mov    r8,rdi
   14000d753:	xor    edx,edx
   14000d755:	mov    rcx,rsi
   14000d758:	call   0x140006b00
   14000d75d:	call   0x140006a54
   14000d762:	mov    ebx,0x22
   14000d767:	mov    DWORD PTR [rax],ebx
   14000d769:	call   0x1400069e0
   14000d76e:	cmp    BYTE PTR [rbp-0x8],0x0
   14000d772:	je     0x14000d61c
   14000d778:	mov    rax,QWORD PTR [rbp-0x10]
   14000d77c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d783:	jmp    0x14000d61c
   14000d788:	int3   
   14000d789:	int3   
   14000d78a:	int3   
   14000d78b:	int3   
   14000d78c:	int3   
   14000d78d:	int3   
   14000d78e:	int3   
   14000d78f:	int3   
   14000d790:	sub    rsp,0x38
   14000d794:	and    QWORD PTR [rsp+0x20],0x0
   14000d79a:	call   0x14000d5c4
   14000d79f:	add    rsp,0x38
   14000d7a3:	ret    
   14000d7a4:	int3   
   14000d7a5:	int3   
   14000d7a6:	int3   
   14000d7a7:	int3   
   14000d7a8:	int3   
   14000d7a9:	int3   
   14000d7aa:	int3   
   14000d7ab:	int3   
   14000d7ac:	int3   
   14000d7ad:	int3   
   14000d7ae:	int3   
   14000d7af:	int3   
   14000d7b0:	int3   
   14000d7b1:	int3   
   14000d7b2:	int3   
   14000d7b3:	int3   
   14000d7b4:	int3   
   14000d7b5:	int3   
   14000d7b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d7c0:	sub    rsp,0x28
   14000d7c4:	mov    QWORD PTR [rsp+0x30],rcx
   14000d7c9:	mov    QWORD PTR [rsp+0x38],rdx
   14000d7ce:	mov    DWORD PTR [rsp+0x40],r8d
   14000d7d3:	mov    rdx,QWORD PTR [rdx]
   14000d7d6:	mov    rax,rcx
   14000d7d9:	call   0x140009260
   14000d7de:	call   rax
   14000d7e0:	call   0x140009290
   14000d7e5:	mov    rcx,rax
   14000d7e8:	mov    rdx,QWORD PTR [rsp+0x38]
   14000d7ed:	mov    rdx,QWORD PTR [rdx]
   14000d7f0:	mov    r8d,0x2
   14000d7f6:	call   0x140009260
   14000d7fb:	add    rsp,0x28
   14000d7ff:	ret    
   14000d800:	mov    rax,QWORD PTR [rsp]
   14000d804:	mov    QWORD PTR [rcx],rax
   14000d807:	ret    
   14000d808:	int3   
   14000d809:	int3   
   14000d80a:	int3   
   14000d80b:	int3   
   14000d80c:	int3   
   14000d80d:	int3   
   14000d80e:	int3   
   14000d80f:	int3   
   14000d810:	neg    rcx
   14000d813:	sbb    eax,eax
   14000d815:	and    eax,0x1
   14000d818:	ret    
   14000d819:	int3   
   14000d81a:	int3   
   14000d81b:	int3   
   14000d81c:	int3   
   14000d81d:	int3   
   14000d81e:	int3   
   14000d81f:	int3   
   14000d820:	rex push rbx
   14000d822:	sub    rsp,0x30
   14000d826:	mov    rbx,rcx
   14000d829:	mov    ecx,0xe
   14000d82e:	call   0x1400086bc
   14000d833:	nop
   14000d834:	mov    rax,QWORD PTR [rbx+0x8]
   14000d838:	test   rax,rax
   14000d83b:	je     0x14000d87c
   14000d83d:	mov    rcx,QWORD PTR [rip+0x9c74]        # 0x1400174b8
   14000d844:	lea    rdx,[rip+0x9c65]        # 0x1400174b0
   14000d84b:	mov    QWORD PTR [rsp+0x20],rcx
   14000d850:	test   rcx,rcx
   14000d853:	je     0x14000d86e
   14000d855:	cmp    QWORD PTR [rcx],rax
   14000d858:	jne    0x14000d869
   14000d85a:	mov    rax,QWORD PTR [rcx+0x8]
   14000d85e:	mov    QWORD PTR [rdx+0x8],rax
   14000d862:	call   0x1400058cc
   14000d867:	jmp    0x14000d86e
   14000d869:	mov    rdx,rcx
   14000d86c:	jmp    0x14000d84b
   14000d86e:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d872:	call   0x1400058cc
   14000d877:	and    QWORD PTR [rbx+0x8],0x0
   14000d87c:	mov    ecx,0xe
   14000d881:	call   0x1400085b0
   14000d886:	add    rsp,0x30
   14000d88a:	pop    rbx
   14000d88b:	ret    
   14000d88c:	int3   
   14000d88d:	int3   
   14000d88e:	int3   
   14000d88f:	int3   
   14000d890:	int3   
   14000d891:	int3   
   14000d892:	int3   
   14000d893:	int3   
   14000d894:	xor    r8d,r8d
   14000d897:	mov    eax,r8d
   14000d89a:	test   rdx,rdx
   14000d89d:	je     0x14000d8b1
   14000d89f:	cmp    WORD PTR [rcx],r8w
   14000d8a3:	je     0x14000d8b1
   14000d8a5:	inc    rax
   14000d8a8:	add    rcx,0x2
   14000d8ac:	cmp    rax,rdx
   14000d8af:	jb     0x14000d89f
   14000d8b1:	repz ret 
   14000d8b3:	int3   
   14000d8b4:	int3   
   14000d8b5:	int3   
   14000d8b6:	int3   
   14000d8b7:	int3   
   14000d8b8:	int3   
   14000d8b9:	int3   
   14000d8ba:	int3   
   14000d8bb:	int3   
   14000d8bc:	sub    rsp,0x48
   14000d8c0:	and    QWORD PTR [rsp+0x30],0x0
   14000d8c6:	and    DWORD PTR [rsp+0x28],0x0
   14000d8cb:	mov    r8d,0x3
   14000d8d1:	lea    rcx,[rip+0x4598]        # 0x140011e70
   14000d8d8:	xor    r9d,r9d
   14000d8db:	mov    edx,0x40000000
   14000d8e0:	mov    DWORD PTR [rsp+0x20],r8d
   14000d8e5:	call   QWORD PTR [rip+0x27a5]        # 0x140010090
   14000d8eb:	mov    QWORD PTR [rip+0x8a4e],rax        # 0x140016340
   14000d8f2:	add    rsp,0x48
   14000d8f6:	ret    
   14000d8f7:	int3   
   14000d8f8:	int3   
   14000d8f9:	int3   
   14000d8fa:	int3   
   14000d8fb:	int3   
   14000d8fc:	int3   
   14000d8fd:	int3   
   14000d8fe:	int3   
   14000d8ff:	int3   
   14000d900:	sub    rsp,0x28
   14000d904:	mov    rcx,QWORD PTR [rip+0x8a35]        # 0x140016340
   14000d90b:	cmp    rcx,0xffffffffffffffff
   14000d90f:	je     0x14000d91d
   14000d911:	cmp    rcx,0xfffffffffffffffe
   14000d915:	je     0x14000d91d
   14000d917:	call   QWORD PTR [rip+0x2753]        # 0x140010070
   14000d91d:	add    rsp,0x28
   14000d921:	ret    
   14000d922:	int3   
   14000d923:	int3   
   14000d924:	int3   
   14000d925:	int3   
   14000d926:	int3   
   14000d927:	int3   
   14000d928:	mov    QWORD PTR [rsp+0x8],rbx
   14000d92d:	push   rdi
   14000d92e:	sub    rsp,0x20
   14000d932:	or     edi,0xffffffff
   14000d935:	mov    rbx,rcx
   14000d938:	test   rcx,rcx
   14000d93b:	jne    0x14000d951
   14000d93d:	call   0x140006a54
   14000d942:	mov    DWORD PTR [rax],0x16
   14000d948:	call   0x1400069e0
   14000d94d:	or     eax,edi
   14000d94f:	jmp    0x14000d997
   14000d951:	test   BYTE PTR [rcx+0x18],0x83
   14000d955:	je     0x14000d991
   14000d957:	call   0x14000d254
   14000d95c:	mov    rcx,rbx
   14000d95f:	mov    edi,eax
   14000d961:	call   0x14000dc84
   14000d966:	mov    rcx,rbx
   14000d969:	call   0x14000a124
   14000d96e:	mov    ecx,eax
   14000d970:	call   0x14000dbb8
   14000d975:	test   eax,eax
   14000d977:	jns    0x14000d97e
   14000d979:	or     edi,0xffffffff
   14000d97c:	jmp    0x14000d991
   14000d97e:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d982:	test   rcx,rcx
   14000d985:	je     0x14000d991
   14000d987:	call   0x1400058cc
   14000d98c:	and    QWORD PTR [rbx+0x28],0x0
   14000d991:	and    DWORD PTR [rbx+0x18],0x0
   14000d995:	mov    eax,edi
   14000d997:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d99c:	add    rsp,0x20
   14000d9a0:	pop    rdi
   14000d9a1:	ret    
   14000d9a2:	int3   
   14000d9a3:	int3   
   14000d9a4:	int3   
   14000d9a5:	int3   
   14000d9a6:	int3   
   14000d9a7:	int3   
   14000d9a8:	mov    QWORD PTR [rsp+0x10],rbx
   14000d9ad:	mov    QWORD PTR [rsp+0x8],rcx
   14000d9b2:	push   rdi
   14000d9b3:	sub    rsp,0x20
   14000d9b7:	mov    rbx,rcx
   14000d9ba:	or     edi,0xffffffff
   14000d9bd:	xor    eax,eax
   14000d9bf:	test   rcx,rcx
   14000d9c2:	setne  al
   14000d9c5:	test   eax,eax
   14000d9c7:	jne    0x14000d9dd
   14000d9c9:	call   0x140006a54
   14000d9ce:	mov    DWORD PTR [rax],0x16
   14000d9d4:	call   0x1400069e0
   14000d9d9:	mov    eax,edi
   14000d9db:	jmp    0x14000da03
   14000d9dd:	test   BYTE PTR [rcx+0x18],0x40
   14000d9e1:	je     0x14000d9e9
   14000d9e3:	and    DWORD PTR [rcx+0x18],0x0
   14000d9e7:	jmp    0x14000d9d9
   14000d9e9:	call   0x14000a008
   14000d9ee:	nop
   14000d9ef:	mov    rcx,rbx
   14000d9f2:	call   0x14000d928
   14000d9f7:	mov    edi,eax
   14000d9f9:	mov    rcx,rbx
   14000d9fc:	call   0x14000a0ac
   14000da01:	jmp    0x14000d9d9
   14000da03:	mov    rbx,QWORD PTR [rsp+0x38]
   14000da08:	add    rsp,0x20
   14000da0c:	pop    rdi
   14000da0d:	ret    
   14000da0e:	int3   
   14000da0f:	int3   
   14000da10:	int3   
   14000da11:	int3   
   14000da12:	int3   
   14000da13:	int3   
   14000da14:	mov    QWORD PTR [rsp+0x18],rbx
   14000da19:	mov    DWORD PTR [rsp+0x8],ecx
   14000da1d:	push   rsi
   14000da1e:	push   rdi
   14000da1f:	push   r12
   14000da21:	sub    rsp,0x20
   14000da25:	movsxd rdi,ecx
   14000da28:	cmp    edi,0xfffffffe
   14000da2b:	jne    0x14000da3d
   14000da2d:	call   0x140006a54
   14000da32:	mov    DWORD PTR [rax],0x9
   14000da38:	jmp    0x14000dada
   14000da3d:	test   ecx,ecx
   14000da3f:	js     0x14000daca
   14000da45:	cmp    edi,DWORD PTR [rip+0xad3d]        # 0x140018788
   14000da4b:	jae    0x14000daca
   14000da4d:	mov    rbx,rdi
   14000da50:	mov    rsi,rdi
   14000da53:	sar    rsi,0x5
   14000da57:	lea    r12,[rip+0xad42]        # 0x1400187a0
   14000da5e:	and    ebx,0x1f
   14000da61:	imul   rbx,rbx,0x58
   14000da65:	mov    rax,QWORD PTR [r12+rsi*8]
   14000da69:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000da6e:	and    ecx,0x1
   14000da71:	je     0x14000daca
   14000da73:	mov    ecx,edi
   14000da75:	call   0x14000cffc
   14000da7a:	nop
   14000da7b:	mov    rax,QWORD PTR [r12+rsi*8]
   14000da7f:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000da84:	je     0x14000dab1
   14000da86:	mov    ecx,edi
   14000da88:	call   0x14000cf80
   14000da8d:	mov    rcx,rax
   14000da90:	call   QWORD PTR [rip+0x25f2]        # 0x140010088
   14000da96:	test   eax,eax
   14000da98:	jne    0x14000daa4
   14000da9a:	call   QWORD PTR [rip+0x25a8]        # 0x140010048
   14000daa0:	mov    ebx,eax
   14000daa2:	jmp    0x14000daa6
   14000daa4:	xor    ebx,ebx
   14000daa6:	test   ebx,ebx
   14000daa8:	je     0x14000dabf
   14000daaa:	call   0x140006a7c
   14000daaf:	mov    DWORD PTR [rax],ebx
   14000dab1:	call   0x140006a54
   14000dab6:	mov    DWORD PTR [rax],0x9
   14000dabc:	or     ebx,0xffffffff
   14000dabf:	mov    ecx,edi
   14000dac1:	call   0x14000d0a8
   14000dac6:	mov    eax,ebx
   14000dac8:	jmp    0x14000dadd
   14000daca:	call   0x140006a54
   14000dacf:	mov    DWORD PTR [rax],0x9
   14000dad5:	call   0x1400069e0
   14000dada:	or     eax,0xffffffff
   14000dadd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dae2:	add    rsp,0x20
   14000dae6:	pop    r12
   14000dae8:	pop    rdi
   14000dae9:	pop    rsi
   14000daea:	ret    
   14000daeb:	int3   
   14000daec:	int3   
   14000daed:	int3   
   14000daee:	int3   
   14000daef:	int3   
   14000daf0:	int3   
   14000daf1:	int3   
   14000daf2:	int3   
   14000daf3:	int3   
   14000daf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000daf9:	push   rdi
   14000dafa:	sub    rsp,0x20
   14000dafe:	movsxd rdi,ecx
   14000db01:	mov    ecx,edi
   14000db03:	call   0x14000cf80
   14000db08:	cmp    rax,0xffffffffffffffff
   14000db0c:	je     0x14000db67
   14000db0e:	mov    rax,QWORD PTR [rip+0xac8b]        # 0x1400187a0
   14000db15:	mov    ecx,0x2
   14000db1a:	cmp    edi,0x1
   14000db1d:	jne    0x14000db28
   14000db1f:	test   BYTE PTR [rax+0xb8],dil
   14000db26:	jne    0x14000db32
   14000db28:	cmp    edi,ecx
   14000db2a:	jne    0x14000db49
   14000db2c:	test   BYTE PTR [rax+0x60],0x1
   14000db30:	je     0x14000db49
   14000db32:	call   0x14000cf80
   14000db37:	mov    ecx,0x1
   14000db3c:	mov    rbx,rax
   14000db3f:	call   0x14000cf80
   14000db44:	cmp    rax,rbx
   14000db47:	je     0x14000db67
   14000db49:	mov    ecx,edi
   14000db4b:	call   0x14000cf80
   14000db50:	mov    rcx,rax
   14000db53:	call   QWORD PTR [rip+0x2517]        # 0x140010070
   14000db59:	test   eax,eax
   14000db5b:	jne    0x14000db67
   14000db5d:	call   QWORD PTR [rip+0x24e5]        # 0x140010048
   14000db63:	mov    ebx,eax
   14000db65:	jmp    0x14000db69
   14000db67:	xor    ebx,ebx
   14000db69:	mov    ecx,edi
   14000db6b:	call   0x14000ced0
   14000db70:	mov    r11,rdi
   14000db73:	mov    rcx,rdi
   14000db76:	sar    rcx,0x5
   14000db7a:	and    r11d,0x1f
   14000db7e:	lea    rdx,[rip+0xac1b]        # 0x1400187a0
   14000db85:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14000db89:	imul   r11,r11,0x58
   14000db8d:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   14000db93:	test   ebx,ebx
   14000db95:	je     0x14000dba3
   14000db97:	mov    ecx,ebx
   14000db99:	call   0x140006aa4
   14000db9e:	or     eax,0xffffffff
   14000dba1:	jmp    0x14000dba5
   14000dba3:	xor    eax,eax
   14000dba5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dbaa:	add    rsp,0x20
   14000dbae:	pop    rdi
   14000dbaf:	ret    
   14000dbb0:	int3   
   14000dbb1:	int3   
   14000dbb2:	int3   
   14000dbb3:	int3   
   14000dbb4:	int3   
   14000dbb5:	int3   
   14000dbb6:	int3   
   14000dbb7:	int3   
   14000dbb8:	mov    QWORD PTR [rsp+0x18],rbx
   14000dbbd:	mov    DWORD PTR [rsp+0x8],ecx
   14000dbc1:	push   rsi
   14000dbc2:	push   rdi
   14000dbc3:	push   r12
   14000dbc5:	sub    rsp,0x20
   14000dbc9:	movsxd rbx,ecx
   14000dbcc:	cmp    ebx,0xfffffffe
   14000dbcf:	jne    0x14000dbe9
   14000dbd1:	call   0x140006a7c
   14000dbd6:	and    DWORD PTR [rax],0x0
   14000dbd9:	call   0x140006a54
   14000dbde:	mov    DWORD PTR [rax],0x9
   14000dbe4:	jmp    0x14000dc6a
   14000dbe9:	test   ecx,ecx
   14000dbeb:	js     0x14000dc52
   14000dbed:	cmp    ebx,DWORD PTR [rip+0xab95]        # 0x140018788
   14000dbf3:	jae    0x14000dc52
   14000dbf5:	mov    rdi,rbx
   14000dbf8:	mov    rsi,rbx
   14000dbfb:	sar    rsi,0x5
   14000dbff:	lea    r12,[rip+0xab9a]        # 0x1400187a0
   14000dc06:	and    edi,0x1f
   14000dc09:	imul   rdi,rdi,0x58
   14000dc0d:	mov    rax,QWORD PTR [r12+rsi*8]
   14000dc11:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   14000dc16:	and    ecx,0x1
   14000dc19:	je     0x14000dc52
   14000dc1b:	mov    ecx,ebx
   14000dc1d:	call   0x14000cffc
   14000dc22:	nop
   14000dc23:	mov    rax,QWORD PTR [r12+rsi*8]
   14000dc27:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   14000dc2c:	je     0x14000dc39
   14000dc2e:	mov    ecx,ebx
   14000dc30:	call   0x14000daf4
   14000dc35:	mov    edi,eax
   14000dc37:	jmp    0x14000dc47
   14000dc39:	call   0x140006a54
   14000dc3e:	mov    DWORD PTR [rax],0x9
   14000dc44:	or     edi,0xffffffff
   14000dc47:	mov    ecx,ebx
   14000dc49:	call   0x14000d0a8
   14000dc4e:	mov    eax,edi
   14000dc50:	jmp    0x14000dc6d
   14000dc52:	call   0x140006a7c
   14000dc57:	and    DWORD PTR [rax],0x0
   14000dc5a:	call   0x140006a54
   14000dc5f:	mov    DWORD PTR [rax],0x9
   14000dc65:	call   0x1400069e0
   14000dc6a:	or     eax,0xffffffff
   14000dc6d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dc72:	add    rsp,0x20
   14000dc76:	pop    r12
   14000dc78:	pop    rdi
   14000dc79:	pop    rsi
   14000dc7a:	ret    
   14000dc7b:	int3   
   14000dc7c:	int3   
   14000dc7d:	int3   
   14000dc7e:	int3   
   14000dc7f:	int3   
   14000dc80:	int3   
   14000dc81:	int3   
   14000dc82:	int3   
   14000dc83:	int3   
   14000dc84:	rex push rbx
   14000dc86:	sub    rsp,0x20
   14000dc8a:	test   BYTE PTR [rcx+0x18],0x83
   14000dc8e:	mov    rbx,rcx
   14000dc91:	je     0x14000dcb5
   14000dc93:	test   BYTE PTR [rcx+0x18],0x8
   14000dc97:	je     0x14000dcb5
   14000dc99:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dc9d:	call   0x1400058cc
   14000dca2:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000dca9:	xor    eax,eax
   14000dcab:	mov    QWORD PTR [rbx],rax
   14000dcae:	mov    QWORD PTR [rbx+0x10],rax
   14000dcb2:	mov    DWORD PTR [rbx+0x8],eax
   14000dcb5:	add    rsp,0x20
   14000dcb9:	pop    rbx
   14000dcba:	ret    
   14000dcbb:	int3   
   14000dcbc:	int3   
   14000dcbd:	int3   
   14000dcbe:	int3   
   14000dcbf:	int3   
   14000dcc0:	int3   
   14000dcc1:	int3   
   14000dcc2:	jmp    QWORD PTR [rip+0x2468]        # 0x140010130
   14000dcc8:	int3   
   14000dcc9:	int3   
   14000dcca:	int3   
   14000dccb:	int3   
   14000dccc:	int3   
   14000dccd:	int3   
   14000dcce:	jmp    QWORD PTR [rip+0x2534]        # 0x140010208
   14000dcd4:	int3   
   14000dcd5:	int3   
   14000dcd6:	int3   
   14000dcd7:	int3   
   14000dcd8:	int3   
   14000dcd9:	int3   
   14000dcda:	jmp    QWORD PTR [rip+0x2530]        # 0x140010210
   14000dce0:	int3   
   14000dce1:	int3   
   14000dce2:	int3   
   14000dce3:	int3   
   14000dce4:	int3   
   14000dce5:	int3   
   14000dce6:	jmp    QWORD PTR [rip+0x23e4]        # 0x1400100d0
   14000dcec:	int3   
   14000dced:	int3   
   14000dcee:	int3   
   14000dcef:	int3   
   14000dcf0:	int3   
   14000dcf1:	int3   
   14000dcf2:	int3   
   14000dcf3:	int3   
   14000dcf4:	mov    r9,rcx
   14000dcf7:	xor    r8d,r8d
   14000dcfa:	movzx  eax,WORD PTR [rcx]
   14000dcfd:	add    rcx,0x2
   14000dd01:	test   ax,ax
   14000dd04:	jne    0x14000dcfa
   14000dd06:	sub    rcx,0x2
   14000dd0a:	cmp    rcx,r9
   14000dd0d:	je     0x14000dd14
   14000dd0f:	cmp    WORD PTR [rcx],dx
   14000dd12:	jne    0x14000dd06
   14000dd14:	cmp    WORD PTR [rcx],dx
   14000dd17:	cmove  r8,rcx
   14000dd1b:	mov    rax,r8
   14000dd1e:	ret    
   14000dd1f:	int3   
   14000dd20:	int3   
   14000dd21:	int3   
   14000dd22:	int3   
   14000dd23:	int3   
   14000dd24:	int3   
   14000dd25:	int3   
   14000dd26:	int3   
   14000dd27:	int3   
   14000dd28:	mov    r11,rsp
   14000dd2b:	mov    QWORD PTR [r11+0x20],r9
   14000dd2f:	sub    rsp,0x38
   14000dd33:	lea    rax,[r11+0x28]
   14000dd37:	mov    QWORD PTR [r11-0x10],rax
   14000dd3b:	and    QWORD PTR [r11-0x18],0x0
   14000dd40:	call   0x14000de84
   14000dd45:	add    rsp,0x38
   14000dd49:	ret    
   14000dd4a:	int3   
   14000dd4b:	int3   
   14000dd4c:	int3   
   14000dd4d:	int3   
   14000dd4e:	int3   
   14000dd4f:	int3   
   14000dd50:	xor    edx,edx
   14000dd52:	lea    r8d,[rdx+0xa]
   14000dd56:	jmp    0x14000e1c8
   14000dd5b:	int3   
   14000dd5c:	int3   
   14000dd5d:	int3   
   14000dd5e:	int3   
   14000dd5f:	int3   
   14000dd60:	int3   
   14000dd61:	int3   
   14000dd62:	int3   
   14000dd63:	int3   
   14000dd64:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd69:	mov    QWORD PTR [rsp+0x10],rsi
   14000dd6e:	mov    QWORD PTR [rsp+0x18],rdi
   14000dd73:	push   rbp
   14000dd74:	push   r12
   14000dd76:	push   r13
   14000dd78:	mov    rbp,rsp
   14000dd7b:	sub    rsp,0x50
   14000dd7f:	xor    ebx,ebx
   14000dd81:	mov    r12,r8
   14000dd84:	mov    r13,rcx
   14000dd87:	mov    rsi,rdx
   14000dd8a:	lea    rcx,[rbp-0x28]
   14000dd8e:	lea    r8d,[rbx+0x28]
   14000dd92:	xor    edx,edx
   14000dd94:	mov    rdi,r9
   14000dd97:	mov    QWORD PTR [rbp-0x30],rbx
   14000dd9b:	call   0x140006b00
   14000dda0:	test   rdi,rdi
   14000dda3:	jne    0x14000ddbd
   14000dda5:	call   0x140006a54
   14000ddaa:	mov    DWORD PTR [rax],0x16
   14000ddb0:	call   0x1400069e0
   14000ddb5:	or     eax,0xffffffff
   14000ddb8:	jmp    0x14000de64
   14000ddbd:	test   r12,r12
   14000ddc0:	je     0x14000ddc7
   14000ddc2:	test   rsi,rsi
   14000ddc5:	je     0x14000dda5
   14000ddc7:	mov    DWORD PTR [rbp-0x18],0x42
   14000ddce:	mov    QWORD PTR [rbp-0x20],rsi
   14000ddd2:	mov    QWORD PTR [rbp-0x30],rsi
   14000ddd6:	cmp    r12,0x3fffffff
   14000dddd:	jbe    0x14000dde8
   14000dddf:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000dde6:	jmp    0x14000ddef
   14000dde8:	lea    eax,[r12+r12*1]
   14000ddec:	mov    DWORD PTR [rbp-0x28],eax
   14000ddef:	mov    r9,QWORD PTR [rbp+0x48]
   14000ddf3:	mov    r8,QWORD PTR [rbp+0x40]
   14000ddf7:	lea    rcx,[rbp-0x30]
   14000ddfb:	mov    rdx,rdi
   14000ddfe:	call   r13
   14000de01:	mov    edi,eax
   14000de03:	test   rsi,rsi
   14000de06:	je     0x14000de64
   14000de08:	test   eax,eax
   14000de0a:	js     0x14000de55
   14000de0c:	dec    DWORD PTR [rbp-0x28]
   14000de0f:	js     0x14000de24
   14000de11:	mov    rax,QWORD PTR [rbp-0x30]
   14000de15:	mov    BYTE PTR [rax],bl
   14000de17:	mov    rax,QWORD PTR [rbp-0x30]
   14000de1b:	inc    rax
   14000de1e:	mov    QWORD PTR [rbp-0x30],rax
   14000de22:	jmp    0x14000de38
   14000de24:	lea    rdx,[rbp-0x30]
   14000de28:	xor    ecx,ecx
   14000de2a:	call   0x140005a60
   14000de2f:	cmp    eax,0xffffffff
   14000de32:	je     0x14000de55
   14000de34:	mov    rax,QWORD PTR [rbp-0x30]
   14000de38:	dec    DWORD PTR [rbp-0x28]
   14000de3b:	js     0x14000de41
   14000de3d:	mov    BYTE PTR [rax],bl
   14000de3f:	jmp    0x14000de51
   14000de41:	lea    rdx,[rbp-0x30]
   14000de45:	xor    ecx,ecx
   14000de47:	call   0x140005a60
   14000de4c:	cmp    eax,0xffffffff
   14000de4f:	je     0x14000de55
   14000de51:	mov    eax,edi
   14000de53:	jmp    0x14000de64
   14000de55:	cmp    DWORD PTR [rbp-0x28],ebx
   14000de58:	mov    WORD PTR [rsi+r12*2-0x2],bx
   14000de5e:	setge  bl
   14000de61:	lea    eax,[rbx-0x2]
   14000de64:	lea    r11,[rsp+0x50]
   14000de69:	mov    rbx,QWORD PTR [r11+0x20]
   14000de6d:	mov    rsi,QWORD PTR [r11+0x28]
   14000de71:	mov    rdi,QWORD PTR [r11+0x30]
   14000de75:	mov    rsp,r11
   14000de78:	pop    r13
   14000de7a:	pop    r12
   14000de7c:	pop    rbp
   14000de7d:	ret    
   14000de7e:	int3   
   14000de7f:	int3   
   14000de80:	int3   
   14000de81:	int3   
   14000de82:	int3   
   14000de83:	int3   
   14000de84:	mov    QWORD PTR [rsp+0x8],rbx
   14000de89:	mov    QWORD PTR [rsp+0x10],rbp
   14000de8e:	mov    QWORD PTR [rsp+0x18],rsi
   14000de93:	push   rdi
   14000de94:	push   r12
   14000de96:	push   r13
   14000de98:	sub    rsp,0x30
   14000de9c:	xor    r13d,r13d
   14000de9f:	mov    rbp,r9
   14000dea2:	mov    rsi,r8
   14000dea5:	mov    rbx,rdx
   14000dea8:	mov    rdi,rcx
   14000deab:	test   r9,r9
   14000deae:	je     0x14000dfa5
   14000deb4:	test   r8,r8
   14000deb7:	jne    0x14000dece
   14000deb9:	test   rcx,rcx
   14000debc:	jne    0x14000ded7
   14000debe:	test   rdx,rdx
   14000dec1:	jne    0x14000dfa5
   14000dec7:	xor    eax,eax
   14000dec9:	jmp    0x14000dfb8
   14000dece:	test   rcx,rcx
   14000ded1:	je     0x14000dfa5
   14000ded7:	test   rdx,rdx
   14000deda:	je     0x14000dfa5
   14000dee0:	cmp    rdx,r8
   14000dee3:	jbe    0x14000df35
   14000dee5:	call   0x140006a54
   14000deea:	lea    r8,[rsi+0x1]
   14000deee:	lea    rcx,[rip+0x33b]        # 0x14000e230
   14000def5:	mov    ebx,DWORD PTR [rax]
   14000def7:	mov    rax,QWORD PTR [rsp+0x78]
   14000defc:	mov    r9,rbp
   14000deff:	mov    QWORD PTR [rsp+0x28],rax
   14000df04:	mov    rax,QWORD PTR [rsp+0x70]
   14000df09:	mov    rdx,rdi
   14000df0c:	mov    QWORD PTR [rsp+0x20],rax
   14000df11:	call   0x14000dd64
   14000df16:	cmp    eax,0xfffffffe
   14000df19:	jne    0x14000df8b
   14000df1b:	call   0x140006a54
   14000df20:	cmp    DWORD PTR [rax],0x22
   14000df23:	jne    0x14000dfb5
   14000df29:	call   0x140006a54
   14000df2e:	mov    DWORD PTR [rax],ebx
   14000df30:	jmp    0x14000dfb5
   14000df35:	call   0x140006a54
   14000df3a:	lea    rcx,[rip+0x2ef]        # 0x14000e230
   14000df41:	mov    r9,rbp
   14000df44:	mov    r12d,DWORD PTR [rax]
   14000df47:	mov    rax,QWORD PTR [rsp+0x78]
   14000df4c:	mov    r8,rbx
   14000df4f:	mov    QWORD PTR [rsp+0x28],rax
   14000df54:	mov    rax,QWORD PTR [rsp+0x70]
   14000df59:	mov    rdx,rdi
   14000df5c:	mov    QWORD PTR [rsp+0x20],rax
   14000df61:	call   0x14000dd64
   14000df66:	mov    WORD PTR [rdi+rbx*2-0x2],r13w
   14000df6c:	cmp    eax,0xfffffffe
   14000df6f:	jne    0x14000df8b
   14000df71:	cmp    rsi,0xffffffffffffffff
   14000df75:	jne    0x14000df8f
   14000df77:	call   0x140006a54
   14000df7c:	cmp    DWORD PTR [rax],0x22
   14000df7f:	jne    0x14000dfb5
   14000df81:	call   0x140006a54
   14000df86:	mov    DWORD PTR [rax],r12d
   14000df89:	jmp    0x14000dfb5
   14000df8b:	test   eax,eax
   14000df8d:	jns    0x14000dfb8
   14000df8f:	mov    WORD PTR [rdi],r13w
   14000df93:	cmp    eax,0xfffffffe
   14000df96:	jne    0x14000dfb5
   14000df98:	call   0x140006a54
   14000df9d:	mov    DWORD PTR [rax],0x22
   14000dfa3:	jmp    0x14000dfb0
   14000dfa5:	call   0x140006a54
   14000dfaa:	mov    DWORD PTR [rax],0x16
   14000dfb0:	call   0x1400069e0
   14000dfb5:	or     eax,0xffffffff
   14000dfb8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dfbd:	mov    rbp,QWORD PTR [rsp+0x58]
   14000dfc2:	mov    rsi,QWORD PTR [rsp+0x60]
   14000dfc7:	add    rsp,0x30
   14000dfcb:	pop    r13
   14000dfcd:	pop    r12
   14000dfcf:	pop    rdi
   14000dfd0:	ret    
   14000dfd1:	int3   
   14000dfd2:	int3   
   14000dfd3:	int3   
   14000dfd4:	int3   
   14000dfd5:	int3   
   14000dfd6:	int3   
   14000dfd7:	int3   
   14000dfd8:	mov    QWORD PTR [rsp+0x18],rbx
   14000dfdd:	mov    QWORD PTR [rsp+0x8],rcx
   14000dfe2:	push   rbp
   14000dfe3:	push   rsi
   14000dfe4:	push   rdi
   14000dfe5:	push   r12
   14000dfe7:	push   r13
   14000dfe9:	push   r14
   14000dfeb:	push   r15
   14000dfed:	sub    rsp,0x20
   14000dff1:	mov    ebp,r9d
   14000dff4:	mov    r12d,r8d
   14000dff7:	mov    r13,rdx
   14000dffa:	test   rdx,rdx
   14000dffd:	je     0x14000e002
   14000dfff:	mov    QWORD PTR [rdx],rcx
   14000e002:	test   rcx,rcx
   14000e005:	jne    0x14000e01e
   14000e007:	call   0x140006a54
   14000e00c:	mov    DWORD PTR [rax],0x16
   14000e012:	call   0x1400069e0
   14000e017:	xor    eax,eax
   14000e019:	jmp    0x14000e1ab
   14000e01e:	test   r8d,r8d
   14000e021:	je     0x14000e02f
   14000e023:	cmp    r8d,0x2
   14000e027:	jl     0x14000e007
   14000e029:	cmp    r8d,0x24
   14000e02d:	jg     0x14000e007
   14000e02f:	movzx  esi,WORD PTR [rcx]
   14000e032:	xor    edi,edi
   14000e034:	lea    rbx,[rcx+0x2]
   14000e038:	lea    r15d,[rdi+0x8]
   14000e03c:	jmp    0x14000e045
   14000e03e:	movzx  esi,WORD PTR [rbx]
   14000e041:	add    rbx,0x2
   14000e045:	mov    edx,r15d
   14000e048:	movzx  ecx,si
   14000e04b:	call   0x14000c978
   14000e050:	test   eax,eax
   14000e052:	jne    0x14000e03e
   14000e054:	cmp    si,0x2d
   14000e058:	jne    0x14000e05f
   14000e05a:	or     ebp,0x2
   14000e05d:	jmp    0x14000e065
   14000e05f:	cmp    si,0x2b
   14000e063:	jne    0x14000e06c
   14000e065:	movzx  esi,WORD PTR [rbx]
   14000e068:	add    rbx,0x2
   14000e06c:	test   r12d,r12d
   14000e06f:	jne    0x14000e09c
   14000e071:	movzx  ecx,si
   14000e074:	call   0x14000ed78
   14000e079:	test   eax,eax
   14000e07b:	je     0x14000e085
   14000e07d:	mov    r12d,0xa
   14000e083:	jmp    0x14000e0c2
   14000e085:	cmp    WORD PTR [rbx],0x78
   14000e089:	je     0x14000e096
   14000e08b:	cmp    WORD PTR [rbx],0x58
   14000e08f:	je     0x14000e096
   14000e091:	mov    r12d,r15d
   14000e094:	jmp    0x14000e0c2
   14000e096:	mov    r12d,0x10
   14000e09c:	cmp    r12d,0x10
   14000e0a0:	jne    0x14000e0c2
   14000e0a2:	movzx  ecx,si
   14000e0a5:	call   0x14000ed78
   14000e0aa:	test   eax,eax
   14000e0ac:	jne    0x14000e0c2
   14000e0ae:	cmp    WORD PTR [rbx],0x78
   14000e0b2:	je     0x14000e0ba
   14000e0b4:	cmp    WORD PTR [rbx],0x58
   14000e0b8:	jne    0x14000e0c2
   14000e0ba:	movzx  esi,WORD PTR [rbx+0x2]
   14000e0be:	add    rbx,0x4
   14000e0c2:	xor    edx,edx
   14000e0c4:	or     eax,0xffffffff
   14000e0c7:	div    r12d
   14000e0ca:	mov    r15d,eax
   14000e0cd:	mov    r14d,edx
   14000e0d0:	movzx  ecx,si
   14000e0d3:	call   0x14000ed78
   14000e0d8:	cmp    eax,0xffffffff
   14000e0db:	jne    0x14000e108
   14000e0dd:	mov    eax,0x41
   14000e0e2:	cmp    ax,si
   14000e0e5:	ja     0x14000e0ed
   14000e0e7:	cmp    si,0x5a
   14000e0eb:	jbe    0x14000e0f6
   14000e0ed:	lea    eax,[rsi-0x61]
   14000e0f0:	cmp    ax,0x19
   14000e0f4:	ja     0x14000e124
   14000e0f6:	lea    eax,[rsi-0x61]
   14000e0f9:	cmp    ax,0x19
   14000e0fd:	movzx  eax,si
   14000e100:	ja     0x14000e105
   14000e102:	sub    eax,0x20
   14000e105:	add    eax,0xffffffc9
   14000e108:	cmp    eax,r12d
   14000e10b:	jae    0x14000e124
   14000e10d:	or     ebp,0x8
   14000e110:	cmp    edi,r15d
   14000e113:	jb     0x14000e13e
   14000e115:	jne    0x14000e11c
   14000e117:	cmp    eax,r14d
   14000e11a:	jbe    0x14000e13e
   14000e11c:	or     ebp,0x4
   14000e11f:	test   r13,r13
   14000e122:	jne    0x14000e144
   14000e124:	mov    r14,QWORD PTR [rsp+0x60]
   14000e129:	sub    rbx,0x2
   14000e12d:	test   bpl,0x8
   14000e131:	jne    0x14000e14d
   14000e133:	test   r13,r13
   14000e136:	cmovne rbx,r14
   14000e13a:	xor    edi,edi
   14000e13c:	jmp    0x14000e198
   14000e13e:	imul   edi,r12d
   14000e142:	add    edi,eax
   14000e144:	movzx  esi,WORD PTR [rbx]
   14000e147:	add    rbx,0x2
   14000e14b:	jmp    0x14000e0d0
   14000e14d:	mov    esi,0x7fffffff
   14000e152:	test   bpl,0x4
   14000e156:	jne    0x14000e175
   14000e158:	test   bpl,0x1
   14000e15c:	jne    0x14000e198
   14000e15e:	mov    eax,ebp
   14000e160:	and    eax,0x2
   14000e163:	je     0x14000e16d
   14000e165:	cmp    edi,0x80000000
   14000e16b:	ja     0x14000e175
   14000e16d:	test   eax,eax
   14000e16f:	jne    0x14000e198
   14000e171:	cmp    edi,esi
   14000e173:	jbe    0x14000e198
   14000e175:	call   0x140006a54
   14000e17a:	mov    DWORD PTR [rax],0x22
   14000e180:	test   bpl,0x1
   14000e184:	je     0x14000e18b
   14000e186:	or     edi,0xffffffff
   14000e189:	jmp    0x14000e198
   14000e18b:	mov    al,bpl
   14000e18e:	and    al,0x2
   14000e190:	neg    al
   14000e192:	sbb    edi,edi
   14000e194:	neg    edi
   14000e196:	add    edi,esi
   14000e198:	test   r13,r13
   14000e19b:	je     0x14000e1a1
   14000e19d:	mov    QWORD PTR [r13+0x0],rbx
   14000e1a1:	test   bpl,0x2
   14000e1a5:	je     0x14000e1a9
   14000e1a7:	neg    edi
   14000e1a9:	mov    eax,edi
   14000e1ab:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e1b0:	add    rsp,0x20
   14000e1b4:	pop    r15
   14000e1b6:	pop    r14
   14000e1b8:	pop    r13
   14000e1ba:	pop    r12
   14000e1bc:	pop    rdi
   14000e1bd:	pop    rsi
   14000e1be:	pop    rbp
   14000e1bf:	ret    
   14000e1c0:	int3   
   14000e1c1:	int3   
   14000e1c2:	int3   
   14000e1c3:	int3   
   14000e1c4:	int3   
   14000e1c5:	int3   
   14000e1c6:	int3   
   14000e1c7:	int3   
   14000e1c8:	xor    r9d,r9d
   14000e1cb:	jmp    0x14000dfd8
   14000e1d0:	int3   
   14000e1d1:	int3   
   14000e1d2:	int3   
   14000e1d3:	int3   
   14000e1d4:	int3   
   14000e1d5:	int3   
   14000e1d6:	int3   
   14000e1d7:	int3   
   14000e1d8:	test   edx,edx
   14000e1da:	jle    0x14000e228
   14000e1dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000e1e1:	mov    QWORD PTR [rsp+0x10],rbp
   14000e1e6:	mov    QWORD PTR [rsp+0x18],rsi
   14000e1eb:	push   rdi
   14000e1ec:	sub    rsp,0x20
   14000e1f0:	mov    rdi,r9
   14000e1f3:	mov    rsi,r8
   14000e1f6:	mov    ebx,edx
   14000e1f8:	movzx  ebp,cx
   14000e1fb:	mov    r8,rdi
   14000e1fe:	mov    rdx,rsi
   14000e201:	movzx  ecx,bp
   14000e204:	dec    ebx
   14000e206:	call   0x140005bf4
   14000e20b:	cmp    DWORD PTR [rdi],0xffffffff
   14000e20e:	je     0x14000e214
   14000e210:	test   ebx,ebx
   14000e212:	jg     0x14000e1fb
   14000e214:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e219:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e21e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e223:	add    rsp,0x20
   14000e227:	pop    rdi
   14000e228:	ret    
   14000e229:	int3   
   14000e22a:	int3   
   14000e22b:	int3   
   14000e22c:	int3   
   14000e22d:	int3   
   14000e22e:	int3   
   14000e22f:	int3   
   14000e230:	mov    QWORD PTR [rsp+0x18],rbx
   14000e235:	push   rbp
   14000e236:	push   rsi
   14000e237:	push   rdi
   14000e238:	push   r12
   14000e23a:	push   r13
   14000e23c:	push   r14
   14000e23e:	push   r15
   14000e240:	lea    rbp,[rsp-0x3d0]
   14000e248:	sub    rsp,0x4d0
   14000e24f:	mov    rax,QWORD PTR [rip+0x6e1a]        # 0x140015070
   14000e256:	xor    rax,rsp
   14000e259:	mov    QWORD PTR [rbp+0x3c0],rax
   14000e260:	xor    eax,eax
   14000e262:	mov    rbx,rcx
   14000e265:	mov    QWORD PTR [rsp+0x78],rcx
   14000e26a:	mov    QWORD PTR [rbp-0x80],rdx
   14000e26e:	lea    rcx,[rbp-0x70]
   14000e272:	mov    rdx,r8
   14000e275:	mov    r14,r9
   14000e278:	mov    QWORD PTR [rsp+0x50],r9
   14000e27d:	mov    DWORD PTR [rsp+0x70],eax
   14000e281:	mov    r12d,eax
   14000e284:	mov    DWORD PTR [rsp+0x58],eax
   14000e288:	mov    edi,eax
   14000e28a:	mov    DWORD PTR [rsp+0x48],eax
   14000e28e:	mov    DWORD PTR [rsp+0x4c],eax
   14000e292:	mov    DWORD PTR [rsp+0x6c],eax
   14000e296:	mov    DWORD PTR [rsp+0x44],eax
   14000e29a:	call   0x140003f18
   14000e29f:	xor    r10d,r10d
   14000e2a2:	test   rbx,rbx
   14000e2a5:	jne    0x14000e2d3
   14000e2a7:	call   0x140006a54
   14000e2ac:	mov    DWORD PTR [rax],0x16
   14000e2b2:	call   0x1400069e0
   14000e2b7:	xor    r11d,r11d
   14000e2ba:	cmp    BYTE PTR [rbp-0x58],r11b
   14000e2be:	je     0x14000e2cb
   14000e2c0:	mov    rax,QWORD PTR [rbp-0x60]
   14000e2c4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e2cb:	or     eax,0xffffffff
   14000e2ce:	jmp    0x14000ed1d
   14000e2d3:	mov    r8,QWORD PTR [rbp-0x80]
   14000e2d7:	test   r8,r8
   14000e2da:	je     0x14000e2a7
   14000e2dc:	movzx  r13d,WORD PTR [r8]
   14000e2e0:	mov    edx,r10d
   14000e2e3:	mov    r15d,r10d
   14000e2e6:	mov    r9d,r10d
   14000e2e9:	mov    QWORD PTR [rbp-0x50],r10
   14000e2ed:	mov    DWORD PTR [rsp+0x40],edx
   14000e2f1:	test   r13w,r13w
   14000e2f5:	je     0x14000ed0a
   14000e2fb:	mov    rbx,QWORD PTR [rbp-0x48]
   14000e2ff:	or     esi,0xffffffff
   14000e302:	lea    ecx,[rsi+0x59]
   14000e305:	lea    r11d,[rsi+0x21]
   14000e309:	add    r8,0x2
   14000e30d:	mov    QWORD PTR [rbp-0x80],r8
   14000e311:	test   edx,edx
   14000e313:	js     0x14000ecff
   14000e319:	movzx  eax,r13w
   14000e31d:	sub    ax,r11w
   14000e321:	cmp    ax,cx
   14000e324:	ja     0x14000e33b
   14000e326:	lea    rcx,[rip+0x3b53]        # 0x140011e80
   14000e32d:	movzx  eax,r13w
   14000e331:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000e336:	and    ecx,0xf
   14000e339:	jmp    0x14000e33e
   14000e33b:	mov    ecx,r10d
   14000e33e:	movsxd rax,ecx
   14000e341:	lea    rcx,[rax+rax*8]
   14000e345:	movsxd rax,r9d
   14000e348:	add    rcx,rax
   14000e34b:	lea    rax,[rip+0x3b2e]        # 0x140011e80
   14000e352:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14000e357:	shr    r9d,0x4
   14000e35b:	mov    DWORD PTR [rsp+0x68],r9d
   14000e360:	cmp    r9d,0x8
   14000e364:	je     0x14000ed47
   14000e36a:	mov    ecx,r9d
   14000e36d:	test   r9d,r9d
   14000e370:	je     0x14000ebae
   14000e376:	dec    ecx
   14000e378:	je     0x14000ecb9
   14000e37e:	dec    ecx
   14000e380:	je     0x14000ec6c
   14000e386:	dec    ecx
   14000e388:	je     0x14000ec21
   14000e38e:	dec    ecx
   14000e390:	je     0x14000ec14
   14000e396:	dec    ecx
   14000e398:	je     0x14000ebd1
   14000e39e:	dec    ecx
   14000e3a0:	je     0x14000eabb
   14000e3a6:	dec    ecx
   14000e3a8:	jne    0x14000ecec
   14000e3ae:	movzx  eax,r13w
   14000e3b2:	mov    ecx,0x64
   14000e3b7:	cmp    eax,ecx
   14000e3b9:	jg     0x14000e5d1
   14000e3bf:	je     0x14000e6fa
   14000e3c5:	cmp    eax,0x41
   14000e3c8:	je     0x14000e59a
   14000e3ce:	cmp    eax,0x43
   14000e3d1:	je     0x14000e528
   14000e3d7:	cmp    eax,0x45
   14000e3da:	je     0x14000e59a
   14000e3e0:	cmp    eax,0x47
   14000e3e3:	je     0x14000e59a
   14000e3e9:	cmp    eax,0x53
   14000e3ec:	je     0x14000e4b3
   14000e3f2:	cmp    eax,0x58
   14000e3f5:	je     0x14000e676
   14000e3fb:	cmp    eax,0x5a
   14000e3fe:	je     0x14000e44f
   14000e400:	cmp    eax,0x61
   14000e403:	je     0x14000e5a5
   14000e409:	cmp    eax,0x63
   14000e40c:	je     0x14000e534
   14000e412:	mov    r13d,DWORD PTR [rsp+0x44]
   14000e417:	mov    edi,0x2d
   14000e41c:	cmp    DWORD PTR [rsp+0x6c],r10d
   14000e421:	jne    0x14000ea72
   14000e427:	test   r12b,0x40
   14000e42b:	je     0x14000e960
   14000e431:	bt     r12d,0x8
   14000e436:	jae    0x14000e932
   14000e43c:	mov    WORD PTR [rsp+0x5c],di
   14000e441:	mov    edi,0x1
   14000e446:	mov    DWORD PTR [rsp+0x4c],edi
   14000e44a:	jmp    0x14000e964
   14000e44f:	mov    rax,QWORD PTR [r14]
   14000e452:	add    r14,0x8
   14000e456:	mov    QWORD PTR [rsp+0x50],r14
   14000e45b:	test   rax,rax
   14000e45e:	je     0x14000e499
   14000e460:	mov    rbx,QWORD PTR [rax+0x8]
   14000e464:	test   rbx,rbx
   14000e467:	je     0x14000e499
   14000e469:	mov    edi,0x2d
   14000e46e:	bt     r12d,0xb
   14000e473:	jae    0x14000e48b
   14000e475:	movsx  eax,WORD PTR [rax]
   14000e478:	lea    r13d,[rdi-0x2c]
   14000e47c:	cdq    
   14000e47d:	mov    DWORD PTR [rsp+0x44],r13d
   14000e482:	sub    eax,edx
   14000e484:	sar    eax,1
   14000e486:	mov    r15d,eax
   14000e489:	jmp    0x14000e41c
   14000e48b:	movsx  r15d,WORD PTR [rax]
   14000e48f:	mov    r13d,r10d
   14000e492:	mov    DWORD PTR [rsp+0x44],r10d
   14000e497:	jmp    0x14000e41c
   14000e499:	mov    rbx,QWORD PTR [rip+0x7d60]        # 0x140016200
   14000e4a0:	mov    rcx,rbx
   14000e4a3:	call   0x140008d20
   14000e4a8:	xor    r10d,r10d
   14000e4ab:	mov    r15,rax
   14000e4ae:	jmp    0x14000e412
   14000e4b3:	test   r12d,0x830
   14000e4ba:	jne    0x14000e4bf
   14000e4bc:	or     r12d,r11d
   14000e4bf:	cmp    DWORD PTR [rsp+0x48],esi
   14000e4c3:	mov    rbx,QWORD PTR [r14]
   14000e4c6:	mov    eax,0x7fffffff
   14000e4cb:	cmove  edi,eax
   14000e4ce:	add    r14,0x8
   14000e4d2:	mov    QWORD PTR [rsp+0x50],r14
   14000e4d7:	test   r11b,r12b
   14000e4da:	je     0x14000e633
   14000e4e0:	test   rbx,rbx
   14000e4e3:	mov    r15d,r10d
   14000e4e6:	cmove  rbx,QWORD PTR [rip+0x7d12]        # 0x140016200
   14000e4ee:	mov    rsi,rbx
   14000e4f1:	test   edi,edi
   14000e4f3:	jle    0x14000e412
   14000e4f9:	cmp    BYTE PTR [rsi],r10b
   14000e4fc:	je     0x14000e412
   14000e502:	movzx  ecx,BYTE PTR [rsi]
   14000e505:	lea    rdx,[rbp-0x70]
   14000e509:	call   0x14000a504
   14000e50e:	xor    r10d,r10d
   14000e511:	test   eax,eax
   14000e513:	je     0x14000e518
   14000e515:	inc    rsi
   14000e518:	inc    r15d
   14000e51b:	inc    rsi
   14000e51e:	cmp    r15d,edi
   14000e521:	jl     0x14000e4f9
   14000e523:	jmp    0x14000e412
   14000e528:	test   r12d,0x830
   14000e52f:	jne    0x14000e534
   14000e531:	or     r12d,r11d
   14000e534:	movzx  eax,WORD PTR [r14]
   14000e538:	add    r14,0x8
   14000e53c:	mov    r13d,0x1
   14000e542:	mov    WORD PTR [rsp+0x60],ax
   14000e547:	mov    DWORD PTR [rsp+0x44],r13d
   14000e54c:	mov    QWORD PTR [rsp+0x50],r14
   14000e551:	test   r11b,r12b
   14000e554:	je     0x14000e58a
   14000e556:	mov    BYTE PTR [rsp+0x64],al
   14000e55a:	mov    rax,QWORD PTR [rbp-0x70]
   14000e55e:	mov    BYTE PTR [rsp+0x65],r10b
   14000e563:	movsxd r8,DWORD PTR [rax+0x10c]
   14000e56a:	lea    r9,[rbp-0x70]
   14000e56e:	lea    rdx,[rsp+0x64]
   14000e573:	lea    rcx,[rbp-0x40]
   14000e577:	call   0x14000a378
   14000e57c:	xor    r10d,r10d
   14000e57f:	test   eax,eax
   14000e581:	jns    0x14000e58e
   14000e583:	mov    DWORD PTR [rsp+0x6c],r13d
   14000e588:	jmp    0x14000e58e
   14000e58a:	mov    WORD PTR [rbp-0x40],ax
   14000e58e:	lea    rbx,[rbp-0x40]
   14000e592:	mov    r15d,r13d
   14000e595:	jmp    0x14000e417
   14000e59a:	mov    DWORD PTR [rbp-0x78],0x1
   14000e5a1:	add    r13w,r11w
   14000e5a5:	mov    ecx,0x67
   14000e5aa:	mov    eax,0x200
   14000e5af:	or     r12d,0x40
   14000e5b3:	lea    rbx,[rbp-0x40]
   14000e5b7:	mov    esi,eax
   14000e5b9:	test   edi,edi
   14000e5bb:	jns    0x14000e81d
   14000e5c1:	mov    r15d,0x6
   14000e5c7:	mov    DWORD PTR [rsp+0x48],r15d
   14000e5cc:	jmp    0x14000e86e
   14000e5d1:	cmp    eax,0x65
   14000e5d4:	jl     0x14000e412
   14000e5da:	mov    ecx,0x67
   14000e5df:	cmp    eax,ecx
   14000e5e1:	jle    0x14000e5aa
   14000e5e3:	mov    ecx,0x69
   14000e5e8:	cmp    eax,ecx
   14000e5ea:	je     0x14000e6fa
   14000e5f0:	cmp    eax,0x6e
   14000e5f3:	je     0x14000e6bd
   14000e5f9:	mov    ecx,0x6f
   14000e5fe:	cmp    eax,ecx
   14000e600:	je     0x14000e6a8
   14000e606:	cmp    eax,0x70
   14000e609:	je     0x14000e66c
   14000e60b:	cmp    eax,0x73
   14000e60e:	je     0x14000e4bf
   14000e614:	mov    ecx,0x75
   14000e619:	cmp    eax,ecx
   14000e61b:	je     0x14000e6fe
   14000e621:	mov    ecx,0x78
   14000e626:	cmp    eax,ecx
   14000e628:	jne    0x14000e923
   14000e62e:	lea    eax,[rcx-0x51]
   14000e631:	jmp    0x14000e67b
   14000e633:	test   rbx,rbx
   14000e636:	mov    r13d,0x1
   14000e63c:	cmove  rbx,QWORD PTR [rip+0x7bc4]        # 0x140016208
   14000e644:	mov    DWORD PTR [rsp+0x44],r13d
   14000e649:	mov    rax,rbx
   14000e64c:	jmp    0x14000e65a
   14000e64e:	dec    edi
   14000e650:	cmp    WORD PTR [rax],r10w
   14000e654:	je     0x14000e65e
   14000e656:	add    rax,0x2
   14000e65a:	test   edi,edi
   14000e65c:	jne    0x14000e64e
   14000e65e:	sub    rax,rbx
   14000e661:	sar    rax,1
   14000e664:	mov    r15d,eax
   14000e667:	jmp    0x14000e417
   14000e66c:	mov    edi,0x10
   14000e671:	bts    r12d,0xf
   14000e676:	mov    eax,0x7
   14000e67b:	mov    r9d,0x10
   14000e681:	mov    DWORD PTR [rsp+0x70],eax
   14000e685:	mov    esi,0x200
   14000e68a:	lea    r13d,[r9+0x20]
   14000e68e:	test   r12b,r12b
   14000e691:	jns    0x14000e70f
   14000e693:	add    ax,0x51
   14000e697:	mov    WORD PTR [rsp+0x5c],r13w
   14000e69d:	lea    edx,[r9-0xe]
   14000e6a1:	mov    WORD PTR [rsp+0x5e],ax
   14000e6a6:	jmp    0x14000e713
   14000e6a8:	mov    r9d,0x8
   14000e6ae:	test   r12b,r12b
   14000e6b1:	jns    0x14000e704
   14000e6b3:	mov    esi,0x200
   14000e6b8:	or     r12d,esi
   14000e6bb:	jmp    0x14000e709
   14000e6bd:	mov    rdi,QWORD PTR [r14]
   14000e6c0:	add    r14,0x8
   14000e6c4:	mov    QWORD PTR [rsp+0x50],r14
   14000e6c9:	call   0x14000a358
   14000e6ce:	xor    r10d,r10d
   14000e6d1:	test   eax,eax
   14000e6d3:	je     0x14000ed47
   14000e6d9:	mov    eax,DWORD PTR [rsp+0x40]
   14000e6dd:	lea    r11d,[r10+0x20]
   14000e6e1:	test   r11b,r12b
   14000e6e4:	je     0x14000e6eb
   14000e6e6:	mov    WORD PTR [rdi],ax
   14000e6e9:	jmp    0x14000e6ed
   14000e6eb:	mov    DWORD PTR [rdi],eax
   14000e6ed:	mov    DWORD PTR [rsp+0x6c],0x1
   14000e6f5:	jmp    0x14000ea78
   14000e6fa:	or     r12d,0x40
   14000e6fe:	mov    r9d,0xa
   14000e704:	mov    esi,0x200
   14000e709:	mov    r13d,0x30
   14000e70f:	mov    edx,DWORD PTR [rsp+0x4c]
   14000e713:	mov    eax,0x8000
   14000e718:	test   eax,r12d
   14000e71b:	je     0x14000e726
   14000e71d:	mov    r8,QWORD PTR [r14]
   14000e720:	add    r14,0x8
   14000e724:	jmp    0x14000e75f
   14000e726:	bt     r12d,0xc
   14000e72b:	jb     0x14000e71d
   14000e72d:	add    r14,0x8
   14000e731:	test   r11b,r12b
   14000e734:	je     0x14000e74f
   14000e736:	mov    QWORD PTR [rsp+0x50],r14
   14000e73b:	test   r12b,0x40
   14000e73f:	je     0x14000e748
   14000e741:	movsx  r8,WORD PTR [r14-0x8]
   14000e746:	jmp    0x14000e764
   14000e748:	movzx  r8d,WORD PTR [r14-0x8]
   14000e74d:	jmp    0x14000e764
   14000e74f:	test   r12b,0x40
   14000e753:	je     0x14000e75b
   14000e755:	movsxd r8,DWORD PTR [r14-0x8]
   14000e759:	jmp    0x14000e75f
   14000e75b:	mov    r8d,DWORD PTR [r14-0x8]
   14000e75f:	mov    QWORD PTR [rsp+0x50],r14
   14000e764:	test   r12b,0x40
   14000e768:	je     0x14000e777
   14000e76a:	test   r8,r8
   14000e76d:	jns    0x14000e777
   14000e76f:	neg    r8
   14000e772:	bts    r12d,0x8
   14000e777:	test   eax,r12d
   14000e77a:	jne    0x14000e786
   14000e77c:	bt     r12d,0xc
   14000e781:	jb     0x14000e786
   14000e783:	mov    r8d,r8d
   14000e786:	test   edi,edi
   14000e788:	jns    0x14000e791
   14000e78a:	mov    edi,0x1
   14000e78f:	jmp    0x14000e79a
   14000e791:	and    r12d,0xfffffff7
   14000e795:	cmp    edi,esi
   14000e797:	cmovg  edi,esi
   14000e79a:	mov    r14d,DWORD PTR [rsp+0x70]
   14000e79f:	mov    rax,r8
   14000e7a2:	lea    rbx,[rbp+0x1bf]
   14000e7a9:	neg    rax
   14000e7ac:	sbb    ecx,ecx
   14000e7ae:	and    ecx,edx
   14000e7b0:	mov    DWORD PTR [rsp+0x4c],ecx
   14000e7b4:	mov    ecx,edi
   14000e7b6:	dec    edi
   14000e7b8:	test   ecx,ecx
   14000e7ba:	jg     0x14000e7c1
   14000e7bc:	test   r8,r8
   14000e7bf:	je     0x14000e7e1
   14000e7c1:	xor    edx,edx
   14000e7c3:	mov    rax,r8
   14000e7c6:	movsxd rcx,r9d
   14000e7c9:	div    rcx
   14000e7cc:	mov    r8,rax
   14000e7cf:	lea    eax,[rdx+0x30]
   14000e7d2:	cmp    eax,0x39
   14000e7d5:	jle    0x14000e7da
   14000e7d7:	add    eax,r14d
   14000e7da:	mov    BYTE PTR [rbx],al
   14000e7dc:	dec    rbx
   14000e7df:	jmp    0x14000e7b4
   14000e7e1:	mov    r14,QWORD PTR [rsp+0x50]
   14000e7e6:	lea    rax,[rbp+0x1bf]
   14000e7ed:	mov    DWORD PTR [rsp+0x48],edi
   14000e7f1:	sub    eax,ebx
   14000e7f3:	inc    rbx
   14000e7f6:	mov    r15d,eax
   14000e7f9:	test   esi,r12d
   14000e7fc:	je     0x14000e412
   14000e802:	test   eax,eax
   14000e804:	je     0x14000e80f
   14000e806:	cmp    BYTE PTR [rbx],r13b
   14000e809:	je     0x14000e412
   14000e80f:	dec    rbx
   14000e812:	inc    r15d
   14000e815:	mov    BYTE PTR [rbx],r13b
   14000e818:	jmp    0x14000e412
   14000e81d:	jne    0x14000e830
   14000e81f:	cmp    r13w,cx
   14000e823:	jne    0x14000e864
   14000e825:	mov    r15d,0x1
   14000e82b:	jmp    0x14000e5c7
   14000e830:	cmp    edi,eax
   14000e832:	mov    r15d,0xa3
   14000e838:	cmovg  edi,eax
   14000e83b:	mov    DWORD PTR [rsp+0x48],edi
   14000e83f:	cmp    edi,r15d
   14000e842:	jle    0x14000e86b
   14000e844:	add    edi,0x15d
   14000e84a:	movsxd rcx,edi
   14000e84d:	call   0x140009298
   14000e852:	mov    QWORD PTR [rbp-0x50],rax
   14000e856:	test   rax,rax
   14000e859:	je     0x14000e5c7
   14000e85f:	mov    rbx,rax
   14000e862:	mov    esi,edi
   14000e864:	mov    r15d,DWORD PTR [rsp+0x48]
   14000e869:	jmp    0x14000e86e
   14000e86b:	mov    r15d,edi
   14000e86e:	mov    rax,QWORD PTR [r14]
   14000e871:	mov    rcx,QWORD PTR [rip+0x75a8]        # 0x140015e20
   14000e878:	add    r14,0x8
   14000e87c:	mov    QWORD PTR [rsp+0x50],r14
   14000e881:	movsx  edi,r13b
   14000e885:	movsxd rsi,esi
   14000e888:	mov    QWORD PTR [rbp-0x48],rax
   14000e88c:	call   QWORD PTR [rip+0x1886]        # 0x140010118
   14000e892:	lea    rcx,[rbp-0x70]
   14000e896:	mov    QWORD PTR [rsp+0x30],rcx
   14000e89b:	mov    ecx,DWORD PTR [rbp-0x78]
   14000e89e:	mov    r9d,edi
   14000e8a1:	mov    DWORD PTR [rsp+0x28],ecx
   14000e8a5:	lea    rcx,[rbp-0x48]
   14000e8a9:	mov    r8,rsi
   14000e8ac:	mov    rdx,rbx
   14000e8af:	mov    DWORD PTR [rsp+0x20],r15d
   14000e8b4:	call   rax
   14000e8b6:	mov    edi,r12d
   14000e8b9:	and    edi,0x80
   14000e8bf:	je     0x14000e8dc
   14000e8c1:	test   r15d,r15d
   14000e8c4:	jne    0x14000e8dc
   14000e8c6:	mov    rcx,QWORD PTR [rip+0x756b]        # 0x140015e38
   14000e8cd:	call   QWORD PTR [rip+0x1845]        # 0x140010118
   14000e8d3:	lea    rdx,[rbp-0x70]
   14000e8d7:	mov    rcx,rbx
   14000e8da:	call   rax
   14000e8dc:	mov    ecx,0x67
   14000e8e1:	cmp    r13w,cx
   14000e8e5:	jne    0x14000e901
   14000e8e7:	test   edi,edi
   14000e8e9:	jne    0x14000e901
   14000e8eb:	mov    rcx,QWORD PTR [rip+0x753e]        # 0x140015e30
   14000e8f2:	call   QWORD PTR [rip+0x1820]        # 0x140010118
   14000e8f8:	lea    rdx,[rbp-0x70]
   14000e8fc:	mov    rcx,rbx
   14000e8ff:	call   rax
   14000e901:	mov    edi,0x2d
   14000e906:	cmp    BYTE PTR [rbx],dil
   14000e909:	jne    0x14000e913
   14000e90b:	bts    r12d,0x8
   14000e910:	inc    rbx
   14000e913:	mov    rcx,rbx
   14000e916:	call   0x140008d20
   14000e91b:	xor    r10d,r10d
   14000e91e:	mov    r15d,eax
   14000e921:	jmp    0x14000e928
   14000e923:	mov    edi,0x2d
   14000e928:	mov    r13d,DWORD PTR [rsp+0x44]
   14000e92d:	jmp    0x14000e41c
   14000e932:	test   r12b,0x1
   14000e936:	je     0x14000e947
   14000e938:	mov    eax,0x2b
   14000e93d:	mov    WORD PTR [rsp+0x5c],ax
   14000e942:	jmp    0x14000e441
   14000e947:	test   r12b,0x2
   14000e94b:	je     0x14000e960
   14000e94d:	mov    eax,0x20
   14000e952:	mov    WORD PTR [rsp+0x5c],ax
   14000e957:	lea    edi,[rax-0x1f]
   14000e95a:	mov    DWORD PTR [rsp+0x4c],edi
   14000e95e:	jmp    0x14000e969
   14000e960:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e964:	mov    eax,0x20
   14000e969:	mov    r14d,DWORD PTR [rsp+0x58]
   14000e96e:	mov    rsi,QWORD PTR [rsp+0x78]
   14000e973:	sub    r14d,r15d
   14000e976:	sub    r14d,edi
   14000e979:	test   r12b,0xc
   14000e97d:	jne    0x14000e991
   14000e97f:	lea    r9,[rsp+0x40]
   14000e984:	mov    ecx,eax
   14000e986:	mov    r8,rsi
   14000e989:	mov    edx,r14d
   14000e98c:	call   0x14000e1d8
   14000e991:	lea    r9,[rsp+0x40]
   14000e996:	lea    rcx,[rsp+0x5c]
   14000e99b:	mov    r8,rsi
   14000e99e:	mov    edx,edi
   14000e9a0:	call   0x140005c34
   14000e9a5:	test   r12b,0x8
   14000e9a9:	je     0x14000e9c6
   14000e9ab:	test   r12b,0x4
   14000e9af:	jne    0x14000e9c6
   14000e9b1:	lea    r9,[rsp+0x40]
   14000e9b6:	mov    ecx,0x30
   14000e9bb:	mov    r8,rsi
   14000e9be:	mov    edx,r14d
   14000e9c1:	call   0x14000e1d8
   14000e9c6:	test   r13d,r13d
   14000e9c9:	jne    0x14000ea31
   14000e9cb:	test   r15d,r15d
   14000e9ce:	jle    0x14000ea31
   14000e9d0:	mov    rdi,rbx
   14000e9d3:	mov    esi,r15d
   14000e9d6:	mov    rax,QWORD PTR [rbp-0x70]
   14000e9da:	lea    r9,[rbp-0x70]
   14000e9de:	lea    rcx,[rsp+0x60]
   14000e9e3:	movsxd r8,DWORD PTR [rax+0x10c]
   14000e9ea:	mov    rdx,rdi
   14000e9ed:	dec    esi
   14000e9ef:	call   0x14000a378
   14000e9f4:	xor    r10d,r10d
   14000e9f7:	movsxd r13,eax
   14000e9fa:	test   eax,eax
   14000e9fc:	jle    0x14000ea23
   14000e9fe:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ea03:	movzx  ecx,WORD PTR [rsp+0x60]
   14000ea08:	lea    r8,[rsp+0x40]
   14000ea0d:	call   0x140005bf4
   14000ea12:	add    rdi,r13
   14000ea15:	xor    r10d,r10d
   14000ea18:	test   esi,esi
   14000ea1a:	jg     0x14000e9d6
   14000ea1c:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ea21:	jmp    0x14000ea47
   14000ea23:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ea28:	or     edx,0xffffffff
   14000ea2b:	mov    DWORD PTR [rsp+0x40],edx
   14000ea2f:	jmp    0x14000ea4b
   14000ea31:	lea    r9,[rsp+0x40]
   14000ea36:	mov    r8,rsi
   14000ea39:	mov    edx,r15d
   14000ea3c:	mov    rcx,rbx
   14000ea3f:	call   0x140005c34
   14000ea44:	xor    r10d,r10d
   14000ea47:	mov    edx,DWORD PTR [rsp+0x40]
   14000ea4b:	test   edx,edx
   14000ea4d:	js     0x14000eaae
   14000ea4f:	test   r12b,0x4
   14000ea53:	je     0x14000eaae
   14000ea55:	lea    r9,[rsp+0x40]
   14000ea5a:	mov    ecx,0x20
   14000ea5f:	mov    r8,rsi
   14000ea62:	mov    edx,r14d
   14000ea65:	call   0x14000e1d8
   14000ea6a:	mov    r14,QWORD PTR [rsp+0x50]
   14000ea6f:	xor    r10d,r10d
   14000ea72:	mov    r11d,0x20
   14000ea78:	mov    edx,DWORD PTR [rsp+0x40]
   14000ea7c:	mov    rax,QWORD PTR [rbp-0x50]
   14000ea80:	test   rax,rax
   14000ea83:	je     0x14000ecdc
   14000ea89:	mov    rcx,rax
   14000ea8c:	call   0x1400058cc
   14000ea91:	mov    edi,DWORD PTR [rsp+0x48]
   14000ea95:	xor    r10d,r10d
   14000ea98:	mov    QWORD PTR [rbp-0x50],r10
   14000ea9c:	or     esi,0xffffffff
   14000ea9f:	mov    edx,DWORD PTR [rsp+0x40]
   14000eaa3:	mov    r11d,0x20
   14000eaa9:	jmp    0x14000ece3
   14000eaae:	mov    r14,QWORD PTR [rsp+0x50]
   14000eab3:	mov    r11d,0x20
   14000eab9:	jmp    0x14000ea7c
   14000eabb:	movzx  eax,r13w
   14000eabf:	cmp    eax,0x49
   14000eac2:	je     0x14000eb14
   14000eac4:	cmp    eax,0x68
   14000eac7:	je     0x14000eb0c
   14000eac9:	mov    ecx,0x6c
   14000eace:	cmp    eax,ecx
   14000ead0:	je     0x14000eaea
   14000ead2:	mov    ecx,0x58
   14000ead7:	cmp    eax,0x77
   14000eada:	jne    0x14000ecf1
   14000eae0:	bts    r12d,0xb
   14000eae5:	jmp    0x14000ecf1
   14000eaea:	cmp    WORD PTR [r8],cx
   14000eaee:	mov    ecx,0x58
   14000eaf3:	jne    0x14000eb03
   14000eaf5:	add    r8,0x2
   14000eaf9:	bts    r12d,0xc
   14000eafe:	jmp    0x14000ecf1
   14000eb03:	or     r12d,0x10
   14000eb07:	jmp    0x14000ecf1
   14000eb0c:	or     r12d,r11d
   14000eb0f:	jmp    0x14000ecec
   14000eb14:	bts    r12d,0xf
   14000eb19:	cmp    WORD PTR [r8],0x36
   14000eb1e:	jne    0x14000eb36
   14000eb20:	cmp    WORD PTR [r8+0x2],0x34
   14000eb26:	jne    0x14000eb36
   14000eb28:	add    r8,0x4
   14000eb2c:	bts    r12d,0xf
   14000eb31:	jmp    0x14000ecec
   14000eb36:	cmp    WORD PTR [r8],0x33
   14000eb3b:	jne    0x14000eb53
   14000eb3d:	cmp    WORD PTR [r8+0x2],0x32
   14000eb43:	jne    0x14000eb53
   14000eb45:	add    r8,0x4
   14000eb49:	btr    r12d,0xf
   14000eb4e:	jmp    0x14000ecec
   14000eb53:	mov    eax,0x64
   14000eb58:	cmp    WORD PTR [r8],ax
   14000eb5c:	je     0x14000ecec
   14000eb62:	mov    eax,0x69
   14000eb67:	cmp    WORD PTR [r8],ax
   14000eb6b:	je     0x14000ecec
   14000eb71:	mov    eax,0x6f
   14000eb76:	cmp    WORD PTR [r8],ax
   14000eb7a:	je     0x14000ecec
   14000eb80:	mov    eax,0x75
   14000eb85:	lea    ecx,[rax-0x1d]
   14000eb88:	cmp    WORD PTR [r8],ax
   14000eb8c:	je     0x14000ecf1
   14000eb92:	lea    eax,[rcx+0x20]
   14000eb95:	cmp    WORD PTR [r8],ax
   14000eb99:	je     0x14000ecf1
   14000eb9f:	cmp    WORD PTR [r8],cx
   14000eba3:	je     0x14000ecf1
   14000eba9:	mov    DWORD PTR [rsp+0x68],r10d
   14000ebae:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ebb3:	lea    r8,[rsp+0x40]
   14000ebb8:	movzx  ecx,r13w
   14000ebbc:	mov    DWORD PTR [rsp+0x44],0x1
   14000ebc4:	call   0x140005bf4
   14000ebc9:	xor    r10d,r10d
   14000ebcc:	jmp    0x14000ea9f
   14000ebd1:	cmp    r13w,0x2a
   14000ebd6:	jne    0x14000ec00
   14000ebd8:	mov    edi,DWORD PTR [r14]
   14000ebdb:	add    r14,0x8
   14000ebdf:	mov    ecx,0x58
   14000ebe4:	mov    QWORD PTR [rsp+0x50],r14
   14000ebe9:	mov    DWORD PTR [rsp+0x48],edi
   14000ebed:	test   edi,edi
   14000ebef:	jns    0x14000ecf1
   14000ebf5:	mov    edi,esi
   14000ebf7:	mov    DWORD PTR [rsp+0x48],esi
   14000ebfb:	jmp    0x14000ecf1
   14000ec00:	lea    ecx,[rdi+rdi*4]
   14000ec03:	movzx  eax,r13w
   14000ec07:	lea    edi,[rax+rcx*2-0x30]
   14000ec0b:	mov    DWORD PTR [rsp+0x48],edi
   14000ec0f:	jmp    0x14000ecec
   14000ec14:	mov    edi,r10d
   14000ec17:	mov    DWORD PTR [rsp+0x48],r10d
   14000ec1c:	jmp    0x14000ecec
   14000ec21:	cmp    r13w,0x2a
   14000ec26:	jne    0x14000ec54
   14000ec28:	mov    eax,DWORD PTR [r14]
   14000ec2b:	add    r14,0x8
   14000ec2f:	mov    ecx,0x58
   14000ec34:	mov    QWORD PTR [rsp+0x50],r14
   14000ec39:	mov    DWORD PTR [rsp+0x58],eax
   14000ec3d:	test   eax,eax
   14000ec3f:	jns    0x14000ecf1
   14000ec45:	or     r12d,0x4
   14000ec49:	neg    eax
   14000ec4b:	mov    DWORD PTR [rsp+0x58],eax
   14000ec4f:	jmp    0x14000ecf1
   14000ec54:	mov    eax,DWORD PTR [rsp+0x58]
   14000ec58:	lea    ecx,[rax+rax*4]
   14000ec5b:	movzx  eax,r13w
   14000ec5f:	lea    eax,[rax+rcx*2-0x30]
   14000ec63:	mov    DWORD PTR [rsp+0x58],eax
   14000ec67:	jmp    0x14000ecec
   14000ec6c:	movzx  eax,r13w
   14000ec70:	cmp    eax,r11d
   14000ec73:	je     0x14000ecb3
   14000ec75:	cmp    eax,0x23
   14000ec78:	je     0x14000ecac
   14000ec7a:	mov    ecx,0x2b
   14000ec7f:	cmp    eax,ecx
   14000ec81:	je     0x14000eca6
   14000ec83:	mov    ecx,0x2d
   14000ec88:	cmp    eax,ecx
   14000ec8a:	je     0x14000eca0
   14000ec8c:	mov    ecx,0x30
   14000ec91:	cmp    eax,ecx
   14000ec93:	mov    ecx,0x58
   14000ec98:	jne    0x14000ecf1
   14000ec9a:	or     r12d,0x8
   14000ec9e:	jmp    0x14000ecf1
   14000eca0:	or     r12d,0x4
   14000eca4:	jmp    0x14000ecec
   14000eca6:	or     r12d,0x1
   14000ecaa:	jmp    0x14000ecec
   14000ecac:	bts    r12d,0x7
   14000ecb1:	jmp    0x14000ecec
   14000ecb3:	or     r12d,0x2
   14000ecb7:	jmp    0x14000ecec
   14000ecb9:	mov    DWORD PTR [rbp-0x78],r10d
   14000ecbd:	mov    DWORD PTR [rsp+0x6c],r10d
   14000ecc2:	mov    DWORD PTR [rsp+0x58],r10d
   14000ecc7:	mov    DWORD PTR [rsp+0x4c],r10d
   14000eccc:	mov    r12d,r10d
   14000eccf:	mov    edi,esi
   14000ecd1:	mov    DWORD PTR [rsp+0x48],esi
   14000ecd5:	mov    DWORD PTR [rsp+0x44],r10d
   14000ecda:	jmp    0x14000ecec
   14000ecdc:	mov    edi,DWORD PTR [rsp+0x48]
   14000ece0:	or     esi,0xffffffff
   14000ece3:	mov    r9d,DWORD PTR [rsp+0x68]
   14000ece8:	mov    r8,QWORD PTR [rbp-0x80]
   14000ecec:	mov    ecx,0x58
   14000ecf1:	movzx  r13d,WORD PTR [r8]
   14000ecf5:	test   r13w,r13w
   14000ecf9:	jne    0x14000e309
   14000ecff:	test   r9d,r9d
   14000ed02:	je     0x14000ed0a
   14000ed04:	cmp    r9d,0x7
   14000ed08:	jne    0x14000ed47
   14000ed0a:	cmp    BYTE PTR [rbp-0x58],r10b
   14000ed0e:	je     0x14000ed1b
   14000ed10:	mov    rcx,QWORD PTR [rbp-0x60]
   14000ed14:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ed1b:	mov    eax,edx
   14000ed1d:	mov    rcx,QWORD PTR [rbp+0x3c0]
   14000ed24:	xor    rcx,rsp
   14000ed27:	call   0x140003c50
   14000ed2c:	mov    rbx,QWORD PTR [rsp+0x520]
   14000ed34:	add    rsp,0x4d0
   14000ed3b:	pop    r15
   14000ed3d:	pop    r14
   14000ed3f:	pop    r13
   14000ed41:	pop    r12
   14000ed43:	pop    rdi
   14000ed44:	pop    rsi
   14000ed45:	pop    rbp
   14000ed46:	ret    
   14000ed47:	call   0x140006a54
   14000ed4c:	mov    DWORD PTR [rax],0x16
   14000ed52:	call   0x1400069e0
   14000ed57:	xor    r11d,r11d
   14000ed5a:	cmp    BYTE PTR [rbp-0x58],r11b
   14000ed5e:	je     0x14000ed6b
   14000ed60:	mov    rax,QWORD PTR [rbp-0x60]
   14000ed64:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ed6b:	mov    eax,esi
   14000ed6d:	jmp    0x14000ed1d
   14000ed6f:	int3   
   14000ed70:	int3   
   14000ed71:	int3   
   14000ed72:	int3   
   14000ed73:	int3   
   14000ed74:	int3   
   14000ed75:	int3   
   14000ed76:	int3   
   14000ed77:	int3   
   14000ed78:	mov    edx,0x30
   14000ed7d:	cmp    cx,dx
   14000ed80:	jb     0x14000ef09
   14000ed86:	cmp    cx,0x3a
   14000ed8a:	jae    0x14000ed92
   14000ed8c:	movzx  eax,cx
   14000ed8f:	sub    eax,edx
   14000ed91:	ret    
   14000ed92:	mov    edx,0xff10
   14000ed97:	cmp    cx,dx
   14000ed9a:	jae    0x14000eefb
   14000eda0:	mov    edx,0x660
   14000eda5:	cmp    cx,dx
   14000eda8:	jb     0x14000ef09
   14000edae:	lea    eax,[rdx+0xa]
   14000edb1:	cmp    cx,ax
   14000edb4:	jb     0x14000ed8c
   14000edb6:	mov    edx,0x6f0
   14000edbb:	cmp    cx,dx
   14000edbe:	jb     0x14000ef09
   14000edc4:	lea    eax,[rdx+0xa]
   14000edc7:	cmp    cx,ax
   14000edca:	jb     0x14000ed8c
   14000edcc:	mov    edx,0x966
   14000edd1:	cmp    cx,dx
   14000edd4:	jb     0x14000ef09
   14000edda:	lea    eax,[rdx+0xa]
   14000eddd:	cmp    cx,ax
   14000ede0:	jb     0x14000ed8c
   14000ede2:	lea    edx,[rax+0x76]
   14000ede5:	cmp    cx,dx
   14000ede8:	jb     0x14000ef09
   14000edee:	lea    eax,[rdx+0xa]
   14000edf1:	cmp    cx,ax
   14000edf4:	jb     0x14000ed8c
   14000edf6:	lea    edx,[rax+0x76]
   14000edf9:	cmp    cx,dx
   14000edfc:	jb     0x14000ef09
   14000ee02:	lea    eax,[rdx+0xa]
   14000ee05:	cmp    cx,ax
   14000ee08:	jb     0x14000ed8c
   14000ee0a:	lea    edx,[rax+0x76]
   14000ee0d:	cmp    cx,dx
   14000ee10:	jb     0x14000ef09
   14000ee16:	lea    eax,[rdx+0xa]
   14000ee19:	cmp    cx,ax
   14000ee1c:	jb     0x14000ed8c
   14000ee22:	lea    edx,[rax+0x76]
   14000ee25:	cmp    cx,dx
   14000ee28:	jb     0x14000ef09
   14000ee2e:	lea    eax,[rdx+0xa]
   14000ee31:	cmp    cx,ax
   14000ee34:	jb     0x14000ed8c
   14000ee3a:	mov    edx,0xc66
   14000ee3f:	cmp    cx,dx
   14000ee42:	jb     0x14000ef09
   14000ee48:	lea    eax,[rdx+0xa]
   14000ee4b:	cmp    cx,ax
   14000ee4e:	jb     0x14000ed8c
   14000ee54:	lea    edx,[rax+0x76]
   14000ee57:	cmp    cx,dx
   14000ee5a:	jb     0x14000ef09
   14000ee60:	lea    eax,[rdx+0xa]
   14000ee63:	cmp    cx,ax
   14000ee66:	jb     0x14000ed8c
   14000ee6c:	lea    edx,[rax+0x76]
   14000ee6f:	cmp    cx,dx
   14000ee72:	jb     0x14000ef09
   14000ee78:	lea    eax,[rdx+0xa]
   14000ee7b:	cmp    cx,ax
   14000ee7e:	jb     0x14000ed8c
   14000ee84:	mov    edx,0xe50
   14000ee89:	cmp    cx,dx
   14000ee8c:	jb     0x14000ef09
   14000ee8e:	lea    eax,[rdx+0xa]
   14000ee91:	cmp    cx,ax
   14000ee94:	jb     0x14000ed8c
   14000ee9a:	lea    edx,[rax+0x76]
   14000ee9d:	cmp    cx,dx
   14000eea0:	jb     0x14000ef09
   14000eea2:	lea    eax,[rdx+0xa]
   14000eea5:	cmp    cx,ax
   14000eea8:	jb     0x14000ed8c
   14000eeae:	lea    edx,[rax+0x46]
   14000eeb1:	cmp    cx,dx
   14000eeb4:	jb     0x14000ef09
   14000eeb6:	lea    eax,[rdx+0xa]
   14000eeb9:	cmp    cx,ax
   14000eebc:	jb     0x14000ed8c
   14000eec2:	mov    edx,0x1040
   14000eec7:	cmp    cx,dx
   14000eeca:	jb     0x14000ef09
   14000eecc:	lea    eax,[rdx+0xa]
   14000eecf:	cmp    cx,ax
   14000eed2:	jb     0x14000ed8c
   14000eed8:	mov    edx,0x17e0
   14000eedd:	cmp    cx,dx
   14000eee0:	jb     0x14000ef09
   14000eee2:	lea    eax,[rdx+0xa]
   14000eee5:	cmp    cx,ax
   14000eee8:	jb     0x14000ed8c
   14000eeee:	lea    edx,[rax+0x26]
   14000eef1:	cmp    cx,dx
   14000eef4:	jb     0x14000ef09
   14000eef6:	lea    eax,[rdx+0xa]
   14000eef9:	jmp    0x14000ef00
   14000eefb:	mov    eax,0xff1a
   14000ef00:	cmp    cx,ax
   14000ef03:	jb     0x14000ed8c
   14000ef09:	or     eax,0xffffffff
   14000ef0c:	ret    
   14000ef0d:	int3   
   14000ef0e:	int3   
   14000ef0f:	int3   
   14000ef10:	int3   
   14000ef11:	int3   
   14000ef12:	int3   
   14000ef13:	int3   
   14000ef14:	int3   
   14000ef15:	int3   
   14000ef16:	rex push rbp
   14000ef18:	sub    rsp,0x20
   14000ef1c:	mov    rbp,rdx
   14000ef1f:	mov    rax,QWORD PTR [rcx]
   14000ef22:	mov    rdx,rcx
   14000ef25:	mov    ecx,DWORD PTR [rax]
   14000ef27:	call   0x140004ab0
   14000ef2c:	nop
   14000ef2d:	add    rsp,0x20
   14000ef31:	pop    rbp
   14000ef32:	ret    
   14000ef33:	int3   
   14000ef34:	int3   
   14000ef35:	int3   
   14000ef36:	int3   
   14000ef37:	int3   
   14000ef38:	int3   
   14000ef39:	int3   
   14000ef3a:	mov    QWORD PTR [rsp+0x10],rdx
   14000ef3f:	push   rbp
   14000ef40:	sub    rsp,0x20
   14000ef44:	mov    rbp,rdx
   14000ef47:	and    QWORD PTR [rbp+0x50],0x0
   14000ef4c:	lea    rax,[rip+0xffffffffffff4f7e]        # 0x140003ed1
   14000ef53:	add    rsp,0x20
   14000ef57:	pop    rbp
   14000ef58:	ret    
   14000ef59:	int3   
   14000ef5a:	int3   
   14000ef5b:	int3   
   14000ef5c:	int3   
   14000ef5d:	int3   
   14000ef5e:	int3   
   14000ef5f:	int3   
   14000ef60:	rex push rbp
   14000ef62:	sub    rsp,0x20
   14000ef66:	mov    rbp,rdx
   14000ef69:	cmp    DWORD PTR [rbp+0x80],0x0
   14000ef70:	je     0x14000ef7d
   14000ef72:	mov    ecx,0x8
   14000ef77:	call   0x1400085b0
   14000ef7c:	nop
   14000ef7d:	add    rsp,0x20
   14000ef81:	pop    rbp
   14000ef82:	ret    
   14000ef83:	int3   
   14000ef84:	int3   
   14000ef85:	int3   
   14000ef86:	int3   
   14000ef87:	int3   
   14000ef88:	int3   
   14000ef89:	int3   
   14000ef8a:	rex push rbp
   14000ef8c:	sub    rsp,0x20
   14000ef90:	mov    rbp,rdx
   14000ef93:	mov    ecx,0xd
   14000ef98:	call   0x1400085b0
   14000ef9d:	nop
   14000ef9e:	add    rsp,0x20
   14000efa2:	pop    rbp
   14000efa3:	ret    
   14000efa4:	int3   
   14000efa5:	int3   
   14000efa6:	int3   
   14000efa7:	int3   
   14000efa8:	int3   
   14000efa9:	int3   
   14000efaa:	rex push rbp
   14000efac:	sub    rsp,0x20
   14000efb0:	mov    rbp,rdx
   14000efb3:	mov    ecx,0xc
   14000efb8:	call   0x1400085b0
   14000efbd:	nop
   14000efbe:	add    rsp,0x20
   14000efc2:	pop    rbp
   14000efc3:	ret    
   14000efc4:	int3   
   14000efc5:	int3   
   14000efc6:	int3   
   14000efc7:	int3   
   14000efc8:	int3   
   14000efc9:	int3   
   14000efca:	int3   
   14000efcb:	rex push rbp
   14000efcd:	sub    rsp,0x40
   14000efd1:	mov    rbp,rdx
   14000efd4:	lea    rax,[rbp+0x40]
   14000efd8:	mov    QWORD PTR [rsp+0x30],rax
   14000efdd:	mov    rax,QWORD PTR [rbp+0x90]
   14000efe4:	mov    QWORD PTR [rsp+0x28],rax
   14000efe9:	mov    rax,QWORD PTR [rbp+0x88]
   14000eff0:	mov    QWORD PTR [rsp+0x20],rax
   14000eff5:	mov    r9,QWORD PTR [rbp+0x80]
   14000effc:	mov    r8,QWORD PTR [rbp+0x78]
   14000f000:	mov    rdx,QWORD PTR [rbp+0x70]
   14000f004:	call   0x1400071f0
   14000f009:	nop
   14000f00a:	add    rsp,0x40
   14000f00e:	pop    rbp
   14000f00f:	ret    
   14000f010:	int3   
   14000f011:	int3   
   14000f012:	int3   
   14000f013:	int3   
   14000f014:	int3   
   14000f015:	int3   
   14000f016:	int3   
   14000f017:	rex push rbp
   14000f019:	sub    rsp,0x20
   14000f01d:	mov    rbp,rdx
   14000f020:	mov    ecx,0xd
   14000f025:	call   0x1400085b0
   14000f02a:	nop
   14000f02b:	add    rsp,0x20
   14000f02f:	pop    rbp
   14000f030:	ret    
   14000f031:	int3   
   14000f032:	int3   
   14000f033:	int3   
   14000f034:	int3   
   14000f035:	int3   
   14000f036:	int3   
   14000f037:	int3   
   14000f038:	rex push rbp
   14000f03a:	sub    rsp,0x20
   14000f03e:	mov    rbp,rdx
   14000f041:	mov    ecx,0xc
   14000f046:	call   0x1400085b0
   14000f04b:	nop
   14000f04c:	add    rsp,0x20
   14000f050:	pop    rbp
   14000f051:	ret    
   14000f052:	int3   
   14000f053:	int3   
   14000f054:	int3   
   14000f055:	int3   
   14000f056:	int3   
   14000f057:	int3   
   14000f058:	int3   
   14000f059:	rex push rbp
   14000f05b:	sub    rsp,0x20
   14000f05f:	mov    rbp,rdx
   14000f062:	mov    rcx,QWORD PTR [rip+0x6be7]        # 0x140015c50
   14000f069:	call   QWORD PTR [rip+0x11d1]        # 0x140010240
   14000f06f:	nop
   14000f070:	add    rsp,0x20
   14000f074:	pop    rbp
   14000f075:	ret    
   14000f076:	int3   
   14000f077:	int3   
   14000f078:	int3   
   14000f079:	int3   
   14000f07a:	int3   
   14000f07b:	int3   
   14000f07c:	int3   
   14000f07d:	rex push rbp
   14000f07f:	sub    rsp,0x20
   14000f083:	mov    rbp,rdx
   14000f086:	cmp    DWORD PTR [rbp+0x60],0x0
   14000f08a:	je     0x14000f094
   14000f08c:	xor    ecx,ecx
   14000f08e:	call   0x1400085b0
   14000f093:	nop
   14000f094:	add    rsp,0x20
   14000f098:	pop    rbp
   14000f099:	ret    
   14000f09a:	int3   
   14000f09b:	int3   
   14000f09c:	int3   
   14000f09d:	int3   
   14000f09e:	int3   
   14000f09f:	int3   
   14000f0a0:	int3   
   14000f0a1:	rex push rbp
   14000f0a3:	sub    rsp,0x20
   14000f0a7:	mov    rbp,rdx
   14000f0aa:	call   0x140004228
   14000f0af:	nop
   14000f0b0:	add    rsp,0x20
   14000f0b4:	pop    rbp
   14000f0b5:	ret    
   14000f0b6:	int3   
   14000f0b7:	int3   
   14000f0b8:	int3   
   14000f0b9:	int3   
   14000f0ba:	int3   
   14000f0bb:	int3   
   14000f0bc:	int3   
   14000f0bd:	int3   
   14000f0be:	int3   
   14000f0bf:	int3   
   14000f0c0:	rex push rbp
   14000f0c2:	sub    rsp,0x20
   14000f0c6:	mov    rbp,rdx
   14000f0c9:	mov    rax,QWORD PTR [rcx]
   14000f0cc:	xor    ecx,ecx
   14000f0ce:	cmp    DWORD PTR [rax],0xc0000005
   14000f0d4:	sete   cl
   14000f0d7:	mov    eax,ecx
   14000f0d9:	mov    eax,ecx
   14000f0db:	add    rsp,0x20
   14000f0df:	pop    rbp
   14000f0e0:	ret    
   14000f0e1:	int3   
   14000f0e2:	int3   
   14000f0e3:	int3   
   14000f0e4:	int3   
   14000f0e5:	int3   
   14000f0e6:	int3   
   14000f0e7:	int3   
   14000f0e8:	rex push rbp
   14000f0ea:	sub    rsp,0x20
   14000f0ee:	mov    rbp,rdx
   14000f0f1:	mov    ecx,DWORD PTR [rbp+0x50]
   14000f0f4:	call   0x14000d0a8
   14000f0f9:	nop
   14000f0fa:	add    rsp,0x20
   14000f0fe:	pop    rbp
   14000f0ff:	ret    
   14000f100:	int3   
   14000f101:	int3   
   14000f102:	int3   
   14000f103:	int3   
   14000f104:	int3   
   14000f105:	int3   
   14000f106:	int3   
   14000f107:	rex push rbp
   14000f109:	sub    rsp,0x20
   14000f10d:	mov    rbp,rdx
   14000f110:	call   0x14000a87c
   14000f115:	nop
   14000f116:	add    rsp,0x20
   14000f11a:	pop    rbp
   14000f11b:	ret    
   14000f11c:	int3   
   14000f11d:	int3   
   14000f11e:	int3   
   14000f11f:	int3   
   14000f120:	int3   
   14000f121:	int3   
   14000f122:	int3   
   14000f123:	int3   
   14000f124:	int3   
   14000f125:	int3   
   14000f126:	int3   
   14000f127:	rex push rbp
   14000f129:	sub    rsp,0x20
   14000f12d:	mov    rbp,rdx
   14000f130:	call   0x1400055c4
   14000f135:	cmp    DWORD PTR [rax+0x100],0x0
   14000f13c:	jle    0x14000f149
   14000f13e:	call   0x1400055c4
   14000f143:	dec    DWORD PTR [rax+0x100]
   14000f149:	add    rsp,0x20
   14000f14d:	pop    rbp
   14000f14e:	ret    
   14000f14f:	int3   
   14000f150:	int3   
   14000f151:	int3   
   14000f152:	int3   
   14000f153:	int3   
   14000f154:	int3   
   14000f155:	int3   
   14000f156:	rex push rbp
   14000f158:	sub    rsp,0x20
   14000f15c:	mov    rbp,rdx
   14000f15f:	xor    eax,eax
   14000f161:	cmp    BYTE PTR [rbp+0x38],al
   14000f164:	setne  al
   14000f167:	add    rsp,0x20
   14000f16b:	pop    rbp
   14000f16c:	ret    
   14000f16d:	int3   
   14000f16e:	int3   
   14000f16f:	int3   
   14000f170:	int3   
   14000f171:	int3   
   14000f172:	int3   
   14000f173:	int3   
   14000f174:	rex push rbp
   14000f176:	sub    rsp,0x20
   14000f17a:	mov    rbp,rdx
   14000f17d:	mov    QWORD PTR [rbp+0x68],rcx
   14000f181:	mov    QWORD PTR [rbp+0x58],rcx
   14000f185:	mov    rax,QWORD PTR [rbp+0x58]
   14000f189:	mov    rcx,QWORD PTR [rax]
   14000f18c:	mov    QWORD PTR [rbp+0x28],rcx
   14000f190:	mov    DWORD PTR [rbp+0x20],0x0
   14000f197:	mov    rax,QWORD PTR [rbp+0x28]
   14000f19b:	cmp    DWORD PTR [rax],0xe06d7363
   14000f1a1:	jne    0x14000f1f0
   14000f1a3:	mov    rax,QWORD PTR [rbp+0x28]
   14000f1a7:	cmp    DWORD PTR [rax+0x18],0x4
   14000f1ab:	jne    0x14000f1f0
   14000f1ad:	mov    rax,QWORD PTR [rbp+0x28]
   14000f1b1:	cmp    DWORD PTR [rax+0x20],0x19930520
   14000f1b8:	je     0x14000f1d4
   14000f1ba:	mov    rax,QWORD PTR [rbp+0x28]
   14000f1be:	cmp    DWORD PTR [rax+0x20],0x19930521
   14000f1c5:	je     0x14000f1d4
   14000f1c7:	mov    rax,QWORD PTR [rbp+0x28]
   14000f1cb:	cmp    DWORD PTR [rax+0x20],0x19930522
   14000f1d2:	jne    0x14000f1f0
   14000f1d4:	mov    rdx,QWORD PTR [rbp+0x28]
   14000f1d8:	mov    rax,QWORD PTR [rbp+0xc8]
   14000f1df:	mov    rcx,QWORD PTR [rax+0x28]
   14000f1e3:	cmp    QWORD PTR [rdx+0x28],rcx
   14000f1e7:	jne    0x14000f1f0
   14000f1e9:	mov    DWORD PTR [rbp+0x20],0x1
   14000f1f0:	mov    rax,QWORD PTR [rbp+0x28]
   14000f1f4:	cmp    DWORD PTR [rax],0xe06d7363
   14000f1fa:	jne    0x14000f257
   14000f1fc:	mov    rax,QWORD PTR [rbp+0x28]
   14000f200:	cmp    DWORD PTR [rax+0x18],0x4
   14000f204:	jne    0x14000f257
   14000f206:	mov    rax,QWORD PTR [rbp+0x28]
   14000f20a:	cmp    DWORD PTR [rax+0x20],0x19930520
   14000f211:	je     0x14000f22d
   14000f213:	mov    rax,QWORD PTR [rbp+0x28]
   14000f217:	cmp    DWORD PTR [rax+0x20],0x19930521
   14000f21e:	je     0x14000f22d
   14000f220:	mov    rax,QWORD PTR [rbp+0x28]
   14000f224:	cmp    DWORD PTR [rax+0x20],0x19930522
   14000f22b:	jne    0x14000f257
   14000f22d:	mov    rax,QWORD PTR [rbp+0x28]
   14000f231:	cmp    QWORD PTR [rax+0x30],0x0
   14000f236:	jne    0x14000f257
   14000f238:	call   0x1400055c4
   14000f23d:	mov    DWORD PTR [rax+0x2c0],0x1
   14000f247:	mov    DWORD PTR [rbp+0x20],0x1
   14000f24e:	mov    DWORD PTR [rbp+0x30],0x1
   14000f255:	jmp    0x14000f25e
   14000f257:	mov    DWORD PTR [rbp+0x30],0x0
   14000f25e:	mov    eax,DWORD PTR [rbp+0x30]
   14000f261:	add    rsp,0x20
   14000f265:	pop    rbp
   14000f266:	ret    
   14000f267:	int3   
   14000f268:	int3   
   14000f269:	int3   
   14000f26a:	int3   
   14000f26b:	int3   
   14000f26c:	int3   
   14000f26d:	int3   
   14000f26e:	int3   
   14000f26f:	int3   
   14000f270:	int3   
   14000f271:	int3   
   14000f272:	int3   
   14000f273:	int3   
   14000f274:	rex push rbx
   14000f276:	push   rbp
   14000f277:	sub    rsp,0x28
   14000f27b:	mov    rbp,rdx
   14000f27e:	mov    rcx,QWORD PTR [rbp+0x50]
   14000f282:	call   0x1400074a4
   14000f287:	cmp    DWORD PTR [rbp+0x20],0x0
   14000f28b:	jne    0x14000f2d5
   14000f28d:	mov    rbx,QWORD PTR [rbp+0xc8]
   14000f294:	cmp    DWORD PTR [rbx],0xe06d7363
   14000f29a:	jne    0x14000f2d5
   14000f29c:	cmp    DWORD PTR [rbx+0x18],0x4
   14000f2a0:	jne    0x14000f2d5
   14000f2a2:	cmp    DWORD PTR [rbx+0x20],0x19930520
   14000f2a9:	je     0x14000f2bd
   14000f2ab:	cmp    DWORD PTR [rbx+0x20],0x19930521
   14000f2b2:	je     0x14000f2bd
   14000f2b4:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000f2bb:	jne    0x14000f2d5
   14000f2bd:	mov    rcx,QWORD PTR [rbx+0x28]
   14000f2c1:	call   0x14000746c
   14000f2c6:	test   eax,eax
   14000f2c8:	je     0x14000f2d5
   14000f2ca:	mov    dl,0x1
   14000f2cc:	mov    rcx,rbx
   14000f2cf:	call   0x14000aa64
   14000f2d4:	nop
   14000f2d5:	call   0x1400055c4
   14000f2da:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000f2e1:	mov    QWORD PTR [rax+0xf0],rcx
   14000f2e8:	call   0x1400055c4
   14000f2ed:	mov    rcx,QWORD PTR [rbp+0xd8]
   14000f2f4:	mov    QWORD PTR [rax+0xf8],rcx
   14000f2fb:	add    rsp,0x28
   14000f2ff:	pop    rbp
   14000f300:	pop    rbx
   14000f301:	ret    
   14000f302:	int3   
   14000f303:	int3   
   14000f304:	int3   
   14000f305:	int3   
   14000f306:	int3   
   14000f307:	int3   
   14000f308:	int3   
   14000f309:	rex push rbp
   14000f30b:	sub    rsp,0x20
   14000f30f:	mov    rbp,rdx
   14000f312:	mov    ecx,0xa
   14000f317:	call   0x1400085b0
   14000f31c:	nop
   14000f31d:	add    rsp,0x20
   14000f321:	pop    rbp
   14000f322:	ret    
   14000f323:	int3   
   14000f324:	int3   
   14000f325:	int3   
   14000f326:	int3   
   14000f327:	int3   
   14000f328:	int3   
   14000f329:	int3   
   14000f32a:	rex push rbp
   14000f32c:	sub    rsp,0x20
   14000f330:	mov    rbp,rdx
   14000f333:	mov    ecx,0x1
   14000f338:	call   0x1400085b0
   14000f33d:	nop
   14000f33e:	add    rsp,0x20
   14000f342:	pop    rbp
   14000f343:	ret    
   14000f344:	int3   
   14000f345:	int3   
   14000f346:	int3   
   14000f347:	int3   
   14000f348:	int3   
   14000f349:	int3   
   14000f34a:	int3   
   14000f34b:	rex push rbp
   14000f34d:	sub    rsp,0x20
   14000f351:	mov    rbp,rdx
   14000f354:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000f358:	mov    rax,rcx
   14000f35b:	mov    rdx,QWORD PTR [rip+0x83fe]        # 0x140017760
   14000f362:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000f366:	call   0x14000a100
   14000f36b:	nop
   14000f36c:	add    rsp,0x20
   14000f370:	pop    rbp
   14000f371:	ret    
   14000f372:	int3   
   14000f373:	int3   
   14000f374:	int3   
   14000f375:	int3   
   14000f376:	int3   
   14000f377:	int3   
   14000f378:	int3   
   14000f379:	int3   
   14000f37a:	int3   
   14000f37b:	rex push rbp
   14000f37d:	sub    rsp,0x20
   14000f381:	mov    rbp,rdx
   14000f384:	mov    ecx,0x1
   14000f389:	call   0x1400085b0
   14000f38e:	nop
   14000f38f:	add    rsp,0x20
   14000f393:	pop    rbp
   14000f394:	ret    
   14000f395:	int3   
   14000f396:	int3   
   14000f397:	int3   
   14000f398:	int3   
   14000f399:	int3   
   14000f39a:	int3   
   14000f39b:	int3   
   14000f39c:	rex push rbp
   14000f39e:	sub    rsp,0x20
   14000f3a2:	mov    rbp,rdx
   14000f3a5:	mov    ecx,0xe
   14000f3aa:	call   0x1400085b0
   14000f3af:	nop
   14000f3b0:	add    rsp,0x20
   14000f3b4:	pop    rbp
   14000f3b5:	ret    
   14000f3b6:	int3   
   14000f3b7:	int3   
   14000f3b8:	int3   
   14000f3b9:	int3   
   14000f3ba:	int3   
   14000f3bb:	int3   
   14000f3bc:	int3   
   14000f3bd:	rex push rbp
   14000f3bf:	sub    rsp,0x20
   14000f3c3:	mov    rbp,rdx
   14000f3c6:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f3ca:	call   0x14000a0ac
   14000f3cf:	nop
   14000f3d0:	add    rsp,0x20
   14000f3d4:	pop    rbp
   14000f3d5:	ret    
   14000f3d6:	int3   
   14000f3d7:	int3   
   14000f3d8:	int3   
   14000f3d9:	int3   
   14000f3da:	int3   
   14000f3db:	int3   
   14000f3dc:	int3   
   14000f3dd:	rex push rbp
   14000f3df:	sub    rsp,0x20
   14000f3e3:	mov    rbp,rdx
   14000f3e6:	mov    ecx,DWORD PTR [rbp+0x40]
   14000f3e9:	call   0x14000d0a8
   14000f3ee:	nop
   14000f3ef:	add    rsp,0x20
   14000f3f3:	pop    rbp
   14000f3f4:	ret    
   14000f3f5:	int3   
   14000f3f6:	int3   
   14000f3f7:	int3   
   14000f3f8:	int3   
   14000f3f9:	int3   
   14000f3fa:	int3   
   14000f3fb:	int3   
   14000f3fc:	int3   
   14000f3fd:	int3   
   14000f3fe:	int3   
   14000f3ff:	int3   
   14000f400:	lea    rax,[rip+0x1c49]        # 0x140011050
   14000f407:	lea    rcx,[rip+0x7d8a]        # 0x140017198
   14000f40e:	mov    QWORD PTR [rip+0x7d83],rax        # 0x140017198
   14000f415:	jmp    0x14000bc04

Disassembly of section .rdata:

0000000140010000 <.rdata>:
   140010000:	xor    al,0x44
   140010002:	add    DWORD PTR [rax],eax
   140010004:	add    BYTE PTR [rax],al
   140010006:	add    BYTE PTR [rax],al
   140010008:	rex.R
   140010009:	add    DWORD PTR [rax],r8d
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	add    BYTE PTR [rax],al
   140010010:	and    BYTE PTR [rcx+rax*1+0x0],al
	...
   140010020:	(bad)  
   140010021:	add    DWORD PTR [rax],r8d
   140010024:	add    BYTE PTR [rax],al
   140010026:	add    BYTE PTR [rax],al
   140010028:	outs   dx,BYTE PTR ds:[rsi]
   140010029:	add    DWORD PTR [rax],r8d
   14001002c:	add    BYTE PTR [rax],al
   14001002e:	add    BYTE PTR [rax],al
   140010030:	jle    0x140010076
   140010032:	add    DWORD PTR [rax],eax
   140010034:	add    BYTE PTR [rax],al
   140010036:	add    BYTE PTR [rax],al
   140010038:	xchg   esp,eax
   140010039:	add    DWORD PTR [rax],r8d
   14001003c:	add    BYTE PTR [rax],al
   14001003e:	add    BYTE PTR [rax],al
   140010040:	movabs al,ds:0xb200000000000144
   140010049:	add    DWORD PTR [rax],r8d
   14001004c:	add    BYTE PTR [rax],al
   14001004e:	add    BYTE PTR [rax],al
   140010050:	ret    0x144
   140010053:	add    BYTE PTR [rax],al
   140010055:	add    BYTE PTR [rax],al
   140010057:	add    ah,dl
   140010059:	add    DWORD PTR [rax],r8d
   14001005c:	add    BYTE PTR [rax],al
   14001005e:	add    BYTE PTR [rax],al
   140010060:	out    0x44,al
   140010062:	add    DWORD PTR [rax],eax
   140010064:	add    BYTE PTR [rax],al
   140010066:	add    BYTE PTR [rax],al
   140010068:	cld    
   140010069:	add    DWORD PTR [rax],r8d
   14001006c:	add    BYTE PTR [rax],al
   14001006e:	add    BYTE PTR [rax],al
   140010070:	adc    al,BYTE PTR [rbp+0x1]
   140010073:	add    BYTE PTR [rax],al
   140010075:	add    BYTE PTR [rax],al
   140010077:	add    BYTE PTR [rdx+rcx*2+0x1],al
   14001007b:	add    BYTE PTR [rax],al
   14001007d:	add    BYTE PTR [rax],al
   14001007f:	add    BYTE PTR [rax],ch
   140010081:	rex.WX add QWORD PTR [rax],rax
   140010084:	add    BYTE PTR [rax],al
   140010086:	add    BYTE PTR [rax],al
   140010088:	adc    al,0x4a
   14001008a:	add    DWORD PTR [rax],eax
   14001008c:	add    BYTE PTR [rax],al
   14001008e:	add    BYTE PTR [rax],al
   140010090:	(bad)  
   140010091:	rex.WX add QWORD PTR [rax],rax
   140010094:	add    BYTE PTR [rax],al
   140010096:	add    BYTE PTR [rax],al
   140010098:	test   BYTE PTR [rcx+0x1],0x0
   14001009c:	add    BYTE PTR [rax],al
   14001009e:	add    BYTE PTR [rax],al
   1400100a0:	out    0x49,al
   1400100a2:	add    DWORD PTR [rax],eax
   1400100a4:	add    BYTE PTR [rax],al
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	fmul   DWORD PTR [rcx+0x1]
   1400100ab:	add    BYTE PTR [rax],al
   1400100ad:	add    BYTE PTR [rax],al
   1400100af:	add    ah,cl
   1400100b1:	add    QWORD PTR [r8],rax
   1400100b4:	add    BYTE PTR [rax],al
   1400100b6:	add    BYTE PTR [rax],al
   1400100b8:	mov    edx,0x149
   1400100bd:	add    BYTE PTR [rax],al
   1400100bf:	add    BYTE PTR [rdx+0x149],ch
   1400100c5:	add    BYTE PTR [rax],al
   1400100c7:	add    BYTE PTR [rsi+0x149],bl
   1400100cd:	add    BYTE PTR [rax],al
   1400100cf:	add    BYTE PTR [rdx+0x149],cl
   1400100d5:	add    BYTE PTR [rax],al
   1400100d7:	add    BYTE PTR [rcx+rcx*2+0x1],dh
   1400100db:	add    BYTE PTR [rax],al
   1400100dd:	add    BYTE PTR [rax],al
   1400100df:	add    BYTE PTR [rdx+0x49],ah
   1400100e2:	add    DWORD PTR [rax],eax
   1400100e4:	add    BYTE PTR [rax],al
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	push   rdx
   1400100e9:	add    QWORD PTR [r8],rax
   1400100ec:	add    BYTE PTR [rax],al
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	cmp    al,0x49
   1400100f2:	add    DWORD PTR [rax],eax
   1400100f4:	add    BYTE PTR [rax],al
   1400100f6:	add    BYTE PTR [rax],al
   1400100f8:	sub    cl,BYTE PTR [rcx+0x1]
   1400100fb:	add    BYTE PTR [rax],al
   1400100fd:	add    BYTE PTR [rax],al
   1400100ff:	add    BYTE PTR [rsi+rax*2],al
   140010102:	add    DWORD PTR [rax],eax
   140010104:	add    BYTE PTR [rax],al
   140010106:	add    BYTE PTR [rax],al
   140010108:	and    al,BYTE PTR [rsi+0x1]
   14001010b:	add    BYTE PTR [rax],al
   14001010d:	add    BYTE PTR [rax],al
   14001010f:	add    BYTE PTR [rsi],dh
   140010111:	rex.RX add DWORD PTR [rax],r8d
   140010114:	add    BYTE PTR [rax],al
   140010116:	add    BYTE PTR [rax],al
   140010118:	rex.R
   140010119:	rex.RX add DWORD PTR [rax],r8d
   14001011c:	add    BYTE PTR [rax],al
   14001011e:	add    BYTE PTR [rax],al
   140010120:	push   rsp
   140010121:	rex.RX add DWORD PTR [rax],r8d
   140010124:	add    BYTE PTR [rax],al
   140010126:	add    BYTE PTR [rax],al
   140010128:	(bad)  
   140010129:	rex.RX add DWORD PTR [rax],r8d
   14001012c:	add    BYTE PTR [rax],al
   14001012e:	add    BYTE PTR [rax],al
   140010130:	jo     0x140010178
   140010132:	add    DWORD PTR [rax],eax
   140010134:	add    BYTE PTR [rax],al
   140010136:	add    BYTE PTR [rax],al
   140010138:	jle    0x140010180
   14001013a:	add    DWORD PTR [rax],eax
   14001013c:	add    BYTE PTR [rax],al
   14001013e:	add    BYTE PTR [rax],al
   140010140:	cwde   
   140010141:	rex.RX add DWORD PTR [rax],r8d
   140010144:	add    BYTE PTR [rax],al
   140010146:	add    BYTE PTR [rax],al
   140010148:	mov    dl,0x46
   14001014a:	add    DWORD PTR [rax],eax
   14001014c:	add    BYTE PTR [rax],al
   14001014e:	add    BYTE PTR [rax],al
   140010150:	(bad)  
   140010151:	rex.RX add DWORD PTR [rax],r8d
   140010154:	add    BYTE PTR [rax],al
   140010156:	add    BYTE PTR [rax],al
   140010158:	in     al,dx
   140010159:	rex.RX add DWORD PTR [rax],r8d
   14001015c:	add    BYTE PTR [rax],al
   14001015e:	add    BYTE PTR [rax],al
   140010160:	cli    
   140010161:	rex.RX add DWORD PTR [rax],r8d
   140010164:	add    BYTE PTR [rax],al
   140010166:	add    BYTE PTR [rax],al
   140010168:	or     al,0x47
   14001016a:	add    DWORD PTR [rax],eax
   14001016c:	add    BYTE PTR [rax],al
   14001016e:	add    BYTE PTR [rax],al
   140010170:	and    al,0x47
   140010172:	add    DWORD PTR [rax],eax
   140010174:	add    BYTE PTR [rax],al
   140010176:	add    BYTE PTR [rax],al
   140010178:	xor    al,0x47
   14001017a:	add    DWORD PTR [rax],eax
   14001017c:	add    BYTE PTR [rax],al
   14001017e:	add    BYTE PTR [rax],al
   140010180:	rex.X
   140010181:	rex.RXB add DWORD PTR [r8],r8d
   140010184:	add    BYTE PTR [rax],al
   140010186:	add    BYTE PTR [rax],al
   140010188:	push   rax
   140010189:	rex.RXB add DWORD PTR [r8],r8d
   14001018c:	add    BYTE PTR [rax],al
   14001018e:	add    BYTE PTR [rax],al
   140010190:	pop    rdx
   140010191:	rex.RXB add DWORD PTR [r8],r8d
   140010194:	add    BYTE PTR [rax],al
   140010196:	add    BYTE PTR [rax],al
   140010198:	push   0x47
   14001019a:	add    DWORD PTR [rax],eax
   14001019c:	add    BYTE PTR [rax],al
   14001019e:	add    BYTE PTR [rax],al
   1400101a0:	add    BYTE PTR [rdi+0x1],0x0
   1400101a4:	add    BYTE PTR [rax],al
   1400101a6:	add    BYTE PTR [rax],al
   1400101a8:	mov    WORD PTR [rdi+0x1],es
   1400101ab:	add    BYTE PTR [rax],al
   1400101ad:	add    BYTE PTR [rax],al
   1400101af:	add    BYTE PTR [rdx+0x147],ah
   1400101b5:	add    BYTE PTR [rax],al
   1400101b7:	add    BYTE PTR [rax+0x147],dh
   1400101bd:	add    BYTE PTR [rax],al
   1400101bf:	add    BYTE PTR [rsi+0x147],bh
   1400101c5:	add    BYTE PTR [rax],al
   1400101c7:	add    al,bl
   1400101c9:	rex.RXB add DWORD PTR [r8],r8d
   1400101cc:	add    BYTE PTR [rax],al
   1400101ce:	add    BYTE PTR [rax],al
   1400101d0:	call   0x14001031c
   1400101d5:	add    BYTE PTR [rax],al
   1400101d7:	add    dh,bh
   1400101d9:	rex.RXB add DWORD PTR [r8],r8d
   1400101dc:	add    BYTE PTR [rax],al
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	sbb    BYTE PTR [rax+0x1],cl
   1400101e3:	add    BYTE PTR [rax],al
   1400101e5:	add    BYTE PTR [rax],al
   1400101e7:	add    BYTE PTR [rax+rcx*2],ah
   1400101ea:	add    DWORD PTR [rax],eax
   1400101ec:	add    BYTE PTR [rax],al
   1400101ee:	add    BYTE PTR [rax],al
   1400101f0:	cmp    BYTE PTR [rax+0x1],cl
   1400101f3:	add    BYTE PTR [rax],al
   1400101f5:	add    BYTE PTR [rax],al
   1400101f7:	add    BYTE PTR [rax+rcx*2+0x1],cl
   1400101fb:	add    BYTE PTR [rax],al
   1400101fd:	add    BYTE PTR [rax],al
   1400101ff:	add    BYTE PTR [rax+0x48],ch
   140010202:	add    DWORD PTR [rax],eax
   140010204:	add    BYTE PTR [rax],al
   140010206:	add    BYTE PTR [rax],al
   140010208:	jl     0x140010252
   14001020a:	add    DWORD PTR [rax],eax
   14001020c:	add    BYTE PTR [rax],al
   14001020e:	add    BYTE PTR [rax],al
   140010210:	nop
   140010211:	add    QWORD PTR [rax],rax
   140010214:	add    BYTE PTR [rax],al
   140010216:	add    BYTE PTR [rax],al
   140010218:	stos   BYTE PTR es:[rdi],al
   140010219:	add    QWORD PTR [rax],rax
   14001021c:	add    BYTE PTR [rax],al
   14001021e:	add    BYTE PTR [rax],al
   140010220:	mov    esi,0x148
   140010225:	add    BYTE PTR [rax],al
   140010227:	add    dl,cl
   140010229:	add    QWORD PTR [rax],rax
   14001022c:	add    BYTE PTR [rax],al
   14001022e:	add    BYTE PTR [rax],al
   140010230:	(bad)  
   140010231:	add    QWORD PTR [rax],rax
   140010234:	add    BYTE PTR [rax],al
   140010236:	add    BYTE PTR [rax],al
   140010238:	loopne 0x140010282
   14001023a:	add    DWORD PTR [rax],eax
   14001023c:	add    BYTE PTR [rax],al
   14001023e:	add    BYTE PTR [rax],al
   140010240:	repnz add QWORD PTR [rax],rax
   140010244:	add    BYTE PTR [rax],al
   140010246:	add    BYTE PTR [rax],al
   140010248:	or     cl,BYTE PTR [rcx+0x1]
   14001024b:	add    BYTE PTR [rax],al
   14001024d:	add    BYTE PTR [rax],al
   14001024f:	add    BYTE PTR [rdx],ah
   140010251:	add    QWORD PTR [r8],rax
	...
   140010260:	or     BYTE PTR [rax],al
   140010262:	add    BYTE PTR [rax],al
   140010264:	add    BYTE PTR [rax],al
   140010266:	add    BYTE PTR [rax+0x139],al
   14001026c:	add    BYTE PTR [rax],al
   14001026e:	add    BYTE PTR [rax+0x4],al
   140010274:	add    BYTE PTR [rax],al
   140010276:	add    BYTE PTR [rax+0x6],al
   14001027c:	add    BYTE PTR [rax],al
   14001027e:	add    BYTE PTR [rax+0x9],al
   140010284:	add    BYTE PTR [rax],al
   140010286:	add    BYTE PTR [rax+0x7],al
   14001028c:	add    BYTE PTR [rax],al
   14001028e:	add    BYTE PTR [rax+0xc8],al
   140010294:	add    BYTE PTR [rax],al
   140010296:	add    BYTE PTR [rax+0x0],al
   14001029c:	add    BYTE PTR [rax],al
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	push   0x45
   1400102a2:	add    DWORD PTR [rax],eax
   1400102a4:	add    BYTE PTR [rax],al
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	(bad)  
   1400102a9:	rex.WX add QWORD PTR [rax],rax
	...
   1400102b8:	sahf   
   1400102b9:	add    DWORD PTR [r8],r8d
   1400102bc:	add    BYTE PTR [rax],al
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	mov    al,0x45
   1400102c2:	add    DWORD PTR [rax],eax
   1400102c4:	add    BYTE PTR [rax],al
   1400102c6:	add    BYTE PTR [rax],al
   1400102c8:	mov    esi,0x145
   1400102cd:	add    BYTE PTR [rax],al
   1400102cf:	add    BYTE PTR [rax+0x145],cl
	...
   1400102dd:	add    BYTE PTR [rax],al
   1400102df:	add    dl,ch
   1400102e1:	add    DWORD PTR [r8],r8d
   1400102e4:	add    BYTE PTR [rax],al
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	fadd   QWORD PTR [rbp+0x1]
	...
   1400102f7:	add    BYTE PTR [rsi+0x45],cl
   1400102fa:	add    DWORD PTR [rax],eax
   1400102fc:	add    BYTE PTR [rax],al
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	cmp    al,0x45
   140010302:	add    DWORD PTR [rax],eax
	...
   140010328:	jo     0x1400103a9
   14001032a:	add    BYTE PTR [rax+0x1],al
   14001032d:	add    BYTE PTR [rax],al
   14001032f:	add    ah,ah
   140010331:	mov    DWORD PTR [rax],eax
   140010333:	rex add DWORD PTR [rax],eax
   140010336:	add    BYTE PTR [rax],al
   140010338:	lock sahf 
   14001033a:	add    BYTE PTR [rax+0x1],al
   14001033d:	add    BYTE PTR [rax],al
   14001033f:	add    BYTE PTR [rcx+rax*2+0x14000],bl
	...
   140010356:	add    BYTE PTR [rax],al
   140010358:	add    cl,bl
   14001035a:	add    BYTE PTR [rax+0x1],al
   14001035d:	add    BYTE PTR [rax],al
   14001035f:	add    al,bl
   140010361:	lahf   
   140010362:	add    BYTE PTR [rax+0x1],al
	...
   140010381:	add    BYTE PTR [rax],al
   140010383:	add    BYTE PTR [rip+0x4f84cd],dl        # 0x140508856
   140010389:	add    BYTE PTR [rax],al
   14001038b:	add    BYTE PTR [rdx],al
   14001038d:	add    BYTE PTR [rax],al
   14001038f:	add    BYTE PTR [rdx],ch
   140010391:	add    BYTE PTR [rax],al
   140010393:	add    BYTE PTR [rax+rsi*1+0x1],cl
   140010397:	add    BYTE PTR [rdx+rbx*1+0x1],cl
   14001039b:	add    BYTE PTR [rax],al
   14001039d:	add    BYTE PTR [rax],al
   14001039f:	add    BYTE PTR [rdx],ah
   1400103a1:	add    eax,0x21993
   1400103a6:	add    BYTE PTR [rax],al
   1400103a8:	adc    al,0x33
   1400103aa:	add    DWORD PTR [rax],eax
   1400103ac:	add    DWORD PTR [rax],eax
   1400103ae:	add    BYTE PTR [rax],al
   1400103b0:	in     al,dx
   1400103b1:	xor    al,BYTE PTR [rcx]
   1400103b3:	add    BYTE PTR [rsi],al
   1400103b5:	add    BYTE PTR [rax],al
   1400103b7:	add    BYTE PTR [rbx+rsi*1],ah
   1400103ba:	add    DWORD PTR [rax],eax
   1400103bc:	and    BYTE PTR [rax],al
   1400103be:	add    BYTE PTR [rax],al
   1400103c0:	add    BYTE PTR [rax],al
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	add    DWORD PTR [rax],eax
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400103ca:	jb     0x140010411
   1400103cc:	js     0x140010437
   1400103ce:	je     0x140010420
   1400103d0:	jb     0x140010441
   1400103d2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400103d5:	jae    0x1400103d7
   1400103d7:	add    BYTE PTR [rdx+0x0],dh
   1400103da:	jne    0x1400103dc
   1400103dc:	outs   dx,BYTE PTR ds:[rsi]
   1400103dd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400103e1:	add    BYTE PTR [rbp+0x0],ch
   1400103e4:	add    BYTE PTR gs:[rax],ah
   1400103e7:	add    BYTE PTR [rbp+0x0],ah
   1400103ea:	jb     0x1400103ec
   1400103ec:	jb     0x1400103ee
   1400103ee:	outs   dx,DWORD PTR ds:[rsi]
   1400103ef:	add    BYTE PTR [rdx+0x0],dh
   1400103f2:	and    BYTE PTR [rax],al
   1400103f4:	add    BYTE PTR [rax],al
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	or     eax,0xa00
   1400103fd:	add    BYTE PTR [rax],al
   1400103ff:	add    BYTE PTR [rax+rax*1+0x4c],dl
   140010403:	add    BYTE PTR [rdi+0x0],cl
   140010406:	push   rbx
   140010407:	add    BYTE PTR [rbx+0x0],dl
   14001040a:	and    BYTE PTR [rax],al
   14001040c:	add    BYTE PTR gs:[rdx+0x0],dh
   140010410:	jb     0x140010412
   140010412:	outs   dx,DWORD PTR ds:[rsi]
   140010413:	add    BYTE PTR [rdx+0x0],dh
   140010416:	or     eax,0xa00
   14001041b:	add    BYTE PTR [rax],al
   14001041d:	add    BYTE PTR [rax],al
   14001041f:	add    BYTE PTR [rbx+0x0],dl
   140010422:	rex.WB add BYTE PTR [r14+0x0],cl
   140010426:	rex.RXB add BYTE PTR [r8],r12b
   140010429:	add    BYTE PTR [rbp+0x0],ah
   14001042c:	jb     0x14001042e
   14001042e:	jb     0x140010430
   140010430:	outs   dx,DWORD PTR ds:[rsi]
   140010431:	add    BYTE PTR [rdx+0x0],dh
   140010434:	or     eax,0xa00
   140010439:	add    BYTE PTR [rax],al
   14001043b:	add    BYTE PTR [rax],al
   14001043d:	add    BYTE PTR [rax],al
   14001043f:	add    BYTE PTR [rax+rax*1+0x4f],al
   140010443:	add    BYTE PTR [rbp+0x0],cl
   140010446:	add    BYTE PTR [r9+0x0],cl
   14001044a:	rex.WRX add BYTE PTR [rax],r12b
   14001044d:	add    BYTE PTR [rbp+0x0],ah
   140010450:	jb     0x140010452
   140010452:	jb     0x140010454
   140010454:	outs   dx,DWORD PTR ds:[rsi]
   140010455:	add    BYTE PTR [rdx+0x0],dh
   140010458:	or     eax,0xa00
   14001045d:	add    BYTE PTR [rax],al
   14001045f:	add    BYTE PTR [rdx+0x0],dl
   140010462:	add    BYTE PTR ss:[rax],dh
   140010465:	add    BYTE PTR [rbx],dh
   140010467:	add    BYTE PTR [rbx],dh
   140010469:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d010e6f
   14001046f:	add    BYTE PTR [rax],ah
   140010471:	add    BYTE PTR [rcx+0x0],al
   140010474:	je     0x140010476
   140010476:	je     0x140010478
   140010478:	add    BYTE PTR gs:[rbp+0x0],ch
   14001047c:	jo     0x14001047e
   14001047e:	je     0x140010480
   140010480:	and    BYTE PTR [rax],al
   140010482:	je     0x140010484
   140010484:	outs   dx,DWORD PTR ds:[rsi]
   140010485:	add    BYTE PTR [rax],ah
   140010487:	add    BYTE PTR [rbp+0x0],dh
   14001048a:	jae    0x14001048c
   14001048c:	add    BYTE PTR gs:[rax],ah
   14001048f:	add    BYTE PTR [rbp+0x0],cl
   140010492:	push   rbx
   140010493:	add    BYTE PTR [rcx+0x0],cl
   140010496:	rex.WR add BYTE PTR [rax],r12b
   140010499:	add    BYTE PTR [rbx+0x0],ah
   14001049c:	outs   dx,DWORD PTR ds:[rsi]
   14001049d:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400104a1:	add    BYTE PTR [rax],ah
   1400104a3:	add    BYTE PTR [rsi+0x0],ah
   1400104a6:	jb     0x1400104a8
   1400104a8:	outs   dx,DWORD PTR ds:[rsi]
   1400104a9:	add    BYTE PTR [rbp+0x0],ch
   1400104ac:	and    BYTE PTR [rax],al
   1400104ae:	je     0x1400104b0
   1400104b0:	push   0x73006900
   1400104b5:	add    BYTE PTR [rax],ah
   1400104b7:	add    BYTE PTR [rcx+0x0],ah
   1400104ba:	jae    0x1400104bc
   1400104bc:	jae    0x1400104be
   1400104be:	add    BYTE PTR gs:[rbp+0x0],ch
   1400104c2:	(bad)  
   1400104c3:	add    BYTE PTR [rax+rax*1+0x79],ch
   1400104c7:	add    BYTE PTR [rax],ah
   1400104c9:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400104cd:	add    BYTE PTR [rdx+0x0],dh
   1400104d0:	imul   eax,DWORD PTR [rax],0x67006e
   1400104d6:	and    BYTE PTR [rax],al
   1400104d8:	outs   dx,BYTE PTR ds:[rsi]
   1400104d9:	add    BYTE PTR [rcx+0x0],ah
   1400104dc:	je     0x1400104de
   1400104de:	imul   eax,DWORD PTR [rax],0x650076
   1400104e4:	and    BYTE PTR [rax],al
   1400104e6:	movsxd eax,DWORD PTR [rax]
   1400104e8:	outs   dx,DWORD PTR ds:[rsi]
   1400104e9:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400104ed:	add    BYTE PTR [rax],ah
   1400104ef:	add    BYTE PTR [rcx+0x0],ch
   1400104f2:	outs   dx,BYTE PTR ds:[rsi]
   1400104f3:	add    BYTE PTR [rcx+0x0],ch
   1400104f6:	je     0x1400104f8
   1400104f8:	imul   eax,DWORD PTR [rax],0x6c0061
   1400104fe:	imul   eax,DWORD PTR [rax],0x61007a
   140010504:	je     0x140010506
   140010506:	imul   eax,DWORD PTR [rax],0x6e006f
   14001050c:	or     al,BYTE PTR [rax]
   14001050e:	push   rsp
   14001050f:	add    BYTE PTR [rax+0x0],ch
   140010512:	imul   eax,DWORD PTR [rax],0x200073
   140010518:	imul   eax,DWORD PTR [rax],0x64006e
   14001051e:	imul   eax,DWORD PTR [rax],0x610063
   140010524:	je     0x140010526
   140010526:	add    BYTE PTR gs:[rbx+0x0],dh
   14001052a:	and    BYTE PTR [rax],al
   14001052c:	(bad)  
   14001052d:	add    BYTE PTR [rax],ah
   14001052f:	add    BYTE PTR [rdx+0x0],ah
   140010532:	jne    0x140010534
   140010534:	add    BYTE PTR [eax],ah
   140010537:	add    BYTE PTR [rcx+0x0],ch
   14001053a:	outs   dx,BYTE PTR ds:[rsi]
   14001053b:	add    BYTE PTR [rax],ah
   14001053d:	add    BYTE PTR [rcx+0x0],bh
   140010540:	outs   dx,DWORD PTR ds:[rsi]
   140010541:	add    BYTE PTR [rbp+0x0],dh
   140010544:	jb     0x140010546
   140010546:	and    BYTE PTR [rax],al
   140010548:	(bad)  
   140010549:	add    BYTE PTR [rax+0x0],dh
   14001054c:	jo     0x14001054e
   14001054e:	ins    BYTE PTR es:[rdi],dx
   14001054f:	add    BYTE PTR [rcx+0x0],ch
   140010552:	movsxd eax,DWORD PTR [rax]
   140010554:	(bad)  
   140010555:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010559:	add    BYTE PTR [rdi+0x0],ch
   14001055c:	outs   dx,BYTE PTR ds:[rsi]
   14001055d:	add    BYTE PTR [rsi],ch
   14001055f:	add    BYTE PTR [rax],ah
   140010561:	add    BYTE PTR [rcx+0x0],cl
   140010564:	je     0x140010566
   140010566:	and    BYTE PTR [rax],al
   140010568:	imul   eax,DWORD PTR [rax],0x200073
   14001056e:	ins    DWORD PTR es:[rdi],dx
   14001056f:	add    BYTE PTR [rdi+0x0],ch
   140010572:	jae    0x140010574
   140010574:	je     0x140010576
   140010576:	and    BYTE PTR [rax],al
   140010578:	ins    BYTE PTR es:[rdi],dx
   140010579:	add    BYTE PTR [rcx+0x0],ch
   14001057c:	imul   eax,DWORD PTR [rax],0x65
   14001057f:	add    BYTE PTR [rax+rax*1+0x79],ch
   140010583:	add    BYTE PTR [rax],ah
   140010585:	add    BYTE PTR [rax+rax*1+0x68],dh
   140010589:	add    BYTE PTR [rbp+0x0],ah
   14001058c:	and    BYTE PTR [rax],al
   14001058e:	jb     0x140010590
   140010590:	add    BYTE PTR gs:[rbx+0x0],dh
   140010594:	jne    0x140010596
   140010596:	ins    BYTE PTR es:[rdi],dx
   140010597:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001059b:	add    BYTE PTR [rdi+0x0],ch
   14001059e:	data16 add BYTE PTR [rax],ah
   1400105a1:	add    BYTE PTR [rbx+0x0],ah
   1400105a4:	(bad)  
   1400105a5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400105a9:	add    BYTE PTR [rcx+0x0],ch
   1400105ac:	outs   dx,BYTE PTR ds:[rsi]
   1400105ad:	add    BYTE PTR [rdi+0x0],ah
   1400105b0:	and    BYTE PTR [rax],al
   1400105b2:	(bad)  
   1400105b3:	add    BYTE PTR [rsi+0x0],ch
   1400105b6:	and    BYTE PTR [rax],al
   1400105b8:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400105bc:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   1400105c1:	add    BYTE PTR [rbx+0x0],ah
   1400105c4:	outs   dx,DWORD PTR ds:[rsi]
   1400105c5:	add    BYTE PTR [rbp+0x0],ch
   1400105c8:	jo     0x1400105ca
   1400105ca:	imul   eax,DWORD PTR [rax],0x65006c
   1400105d0:	add    BYTE PTR fs:[rax],ah
   1400105d3:	add    BYTE PTR [rax],ch
   1400105d5:	add    BYTE PTR [rdi],ch
   1400105d7:	add    BYTE PTR [rbx+0x0],ah
   1400105da:	ins    BYTE PTR es:[rdi],dx
   1400105db:	add    BYTE PTR [rdx+0x0],dh
   1400105de:	sub    DWORD PTR [rax],eax
   1400105e0:	and    BYTE PTR [rax],al
   1400105e2:	data16 add BYTE PTR [rbp+0x0],dh
   1400105e6:	outs   dx,BYTE PTR ds:[rsi]
   1400105e7:	add    BYTE PTR [rbx+0x0],ah
   1400105ea:	je     0x1400105ec
   1400105ec:	imul   eax,DWORD PTR [rax],0x6e006f
   1400105f2:	and    BYTE PTR [rax],al
   1400105f4:	data16 add BYTE PTR [rdx+0x0],dh
   1400105f8:	outs   dx,DWORD PTR ds:[rsi]
   1400105f9:	add    BYTE PTR [rbp+0x0],ch
   1400105fc:	and    BYTE PTR [rax],al
   1400105fe:	(bad)  
   1400105ff:	add    BYTE PTR [rax],ah
   140010601:	add    BYTE PTR [rsi+0x0],ch
   140010604:	(bad)  
   140010605:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010609:	add    BYTE PTR [rsi+0x0],dh
   14001060c:	add    BYTE PTR gs:[rax],ah
   14001060f:	add    BYTE PTR [rbx+0x0],ah
   140010612:	outs   dx,DWORD PTR ds:[rsi]
   140010613:	add    BYTE PTR [rsi+0x0],ch
   140010616:	jae    0x140010618
   140010618:	je     0x14001061a
   14001061a:	jb     0x14001061c
   14001061c:	jne    0x14001061e
   14001061e:	movsxd eax,DWORD PTR [rax]
   140010620:	je     0x140010622
   140010622:	outs   dx,DWORD PTR ds:[rsi]
   140010623:	add    BYTE PTR [rdx+0x0],dh
   140010626:	and    BYTE PTR [rax],al
   140010628:	outs   dx,DWORD PTR ds:[rsi]
   140010629:	add    BYTE PTR [rdx+0x0],dh
   14001062c:	and    BYTE PTR [rax],al
   14001062e:	data16 add BYTE PTR [rdx+0x0],dh
   140010632:	outs   dx,DWORD PTR ds:[rsi]
   140010633:	add    BYTE PTR [rbp+0x0],ch
   140010636:	and    BYTE PTR [rax],al
   140010638:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14001063d:	add    BYTE PTR [rbp+0x0],cl
   140010640:	(bad)  
   140010641:	add    BYTE PTR [rcx+0x0],ch
   140010644:	outs   dx,BYTE PTR ds:[rsi]
   140010645:	add    BYTE PTR [rsi],ch
   140010647:	add    BYTE PTR [rip+0xa00],cl        # 0x14001104d
   14001064d:	add    BYTE PTR [rax],al
   14001064f:	add    BYTE PTR [rdx+0x0],dl
   140010652:	add    BYTE PTR ss:[rax],dh
   140010655:	add    BYTE PTR [rbx],dh
   140010657:	add    BYTE PTR [rdx],dh
   140010659:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01105f
   14001065f:	add    BYTE PTR [rax],ah
   140010661:	add    BYTE PTR [rsi+0x0],ch
   140010664:	outs   dx,DWORD PTR ds:[rsi]
   140010665:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010669:	add    BYTE PTR [rbp+0x0],ah
   14001066c:	outs   dx,BYTE PTR ds:[rsi]
   14001066d:	add    BYTE PTR [rdi+0x0],ch
   140010670:	jne    0x140010672
   140010672:	add    BYTE PTR [eax+0x0],ch
   140010676:	and    BYTE PTR [rax],al
   140010678:	jae    0x14001067a
   14001067a:	jo     0x14001067c
   14001067c:	(bad)  
   14001067d:	add    BYTE PTR [rbx+0x0],ah
   140010680:	add    BYTE PTR gs:[rax],ah
   140010683:	add    BYTE PTR [rsi+0x0],ah
   140010686:	outs   dx,DWORD PTR ds:[rsi]
   140010687:	add    BYTE PTR [rdx+0x0],dh
   14001068a:	and    BYTE PTR [rax],al
   14001068c:	ins    BYTE PTR es:[rdi],dx
   14001068d:	add    BYTE PTR [rdi+0x0],ch
   140010690:	movsxd eax,DWORD PTR [rax]
   140010692:	(bad)  
   140010693:	add    BYTE PTR [rax+rax*1+0x65],ch
   140010697:	add    BYTE PTR [rax],ah
   140010699:	add    BYTE PTR [rcx+0x0],ch
   14001069c:	outs   dx,BYTE PTR ds:[rsi]
   14001069d:	add    BYTE PTR [rsi+0x0],ah
   1400106a0:	outs   dx,DWORD PTR ds:[rsi]
   1400106a1:	add    BYTE PTR [rdx+0x0],dh
   1400106a4:	ins    DWORD PTR es:[rdi],dx
   1400106a5:	add    BYTE PTR [rcx+0x0],ah
   1400106a8:	je     0x1400106aa
   1400106aa:	imul   eax,DWORD PTR [rax],0x6e006f
   1400106b0:	or     eax,0xa00
	...
   1400106bd:	add    BYTE PTR [rax],al
   1400106bf:	add    BYTE PTR [rdx+0x0],dl
   1400106c2:	add    BYTE PTR ss:[rax],dh
   1400106c5:	add    BYTE PTR [rbx],dh
   1400106c7:	add    BYTE PTR [rcx],dh
   1400106c9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0110cf
   1400106cf:	add    BYTE PTR [rax],ah
   1400106d1:	add    BYTE PTR [rcx+0x0],al
   1400106d4:	je     0x1400106d6
   1400106d6:	je     0x1400106d8
   1400106d8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400106dc:	jo     0x1400106de
   1400106de:	je     0x1400106e0
   1400106e0:	and    BYTE PTR [rax],al
   1400106e2:	je     0x1400106e4
   1400106e4:	outs   dx,DWORD PTR ds:[rsi]
   1400106e5:	add    BYTE PTR [rax],ah
   1400106e7:	add    BYTE PTR [rcx+0x0],ch
   1400106ea:	outs   dx,BYTE PTR ds:[rsi]
   1400106eb:	add    BYTE PTR [rcx+0x0],ch
   1400106ee:	je     0x1400106f0
   1400106f0:	imul   eax,DWORD PTR [rax],0x6c0061
   1400106f6:	imul   eax,DWORD PTR [rax],0x65007a
   1400106fc:	and    BYTE PTR [rax],al
   1400106fe:	je     0x140010700
   140010700:	push   0x20006500
   140010705:	add    BYTE PTR [rbx+0x0],al
   140010708:	push   rdx
   140010709:	add    BYTE PTR [rax+rax*1+0x20],dl
   14001070d:	add    BYTE PTR [rbp+0x0],ch
   140010710:	outs   dx,DWORD PTR ds:[rsi]
   140010711:	add    BYTE PTR [rdx+0x0],dh
   140010714:	add    BYTE PTR gs:[rax],ah
   140010717:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001071b:	add    BYTE PTR [rcx+0x0],ah
   14001071e:	outs   dx,BYTE PTR ds:[rsi]
   14001071f:	add    BYTE PTR [rax],ah
   140010721:	add    BYTE PTR [rdi+0x0],ch
   140010724:	outs   dx,BYTE PTR ds:[rsi]
   140010725:	add    BYTE PTR [rbx+0x0],ah
   140010728:	add    BYTE PTR gs:[rsi],ch
   14001072b:	add    BYTE PTR [rdx],cl
   14001072d:	add    BYTE PTR [rax+rax*1+0x68],dl
   140010731:	add    BYTE PTR [rcx+0x0],ch
   140010734:	jae    0x140010736
   140010736:	and    BYTE PTR [rax],al
   140010738:	imul   eax,DWORD PTR [rax],0x64006e
   14001073e:	imul   eax,DWORD PTR [rax],0x610063
   140010744:	je     0x140010746
   140010746:	add    BYTE PTR gs:[rbx+0x0],dh
   14001074a:	and    BYTE PTR [rax],al
   14001074c:	(bad)  
   14001074d:	add    BYTE PTR [rax],ah
   14001074f:	add    BYTE PTR [rdx+0x0],ah
   140010752:	jne    0x140010754
   140010754:	add    BYTE PTR [eax],ah
   140010757:	add    BYTE PTR [rcx+0x0],ch
   14001075a:	outs   dx,BYTE PTR ds:[rsi]
   14001075b:	add    BYTE PTR [rax],ah
   14001075d:	add    BYTE PTR [rcx+0x0],bh
   140010760:	outs   dx,DWORD PTR ds:[rsi]
   140010761:	add    BYTE PTR [rbp+0x0],dh
   140010764:	jb     0x140010766
   140010766:	and    BYTE PTR [rax],al
   140010768:	(bad)  
   140010769:	add    BYTE PTR [rax+0x0],dh
   14001076c:	jo     0x14001076e
   14001076e:	ins    BYTE PTR es:[rdi],dx
   14001076f:	add    BYTE PTR [rcx+0x0],ch
   140010772:	movsxd eax,DWORD PTR [rax]
   140010774:	(bad)  
   140010775:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010779:	add    BYTE PTR [rdi+0x0],ch
   14001077c:	outs   dx,BYTE PTR ds:[rsi]
   14001077d:	add    BYTE PTR [rsi],ch
   14001077f:	add    BYTE PTR [rip+0xa00],cl        # 0x140011185
   140010785:	add    BYTE PTR [rax],al
   140010787:	add    BYTE PTR [rdx+0x0],dl
   14001078a:	add    BYTE PTR ss:[rax],dh
   14001078d:	add    BYTE PTR [rbx],dh
   14001078f:	add    BYTE PTR [rax],dh
   140010791:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d011197
   140010797:	add    BYTE PTR [rax],ah
   140010799:	add    BYTE PTR [rbx+0x0],al
   14001079c:	push   rdx
   14001079d:	add    BYTE PTR [rax+rax*1+0x20],dl
   1400107a1:	add    BYTE PTR [rsi+0x0],ch
   1400107a4:	outs   dx,DWORD PTR ds:[rsi]
   1400107a5:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400107a9:	add    BYTE PTR [rcx+0x0],ch
   1400107ac:	outs   dx,BYTE PTR ds:[rsi]
   1400107ad:	add    BYTE PTR [rcx+0x0],ch
   1400107b0:	je     0x1400107b2
   1400107b2:	imul   eax,DWORD PTR [rax],0x6c0061
   1400107b8:	imul   eax,DWORD PTR [rax],0x65007a
   1400107be:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x1400111c5
	...
   1400107cd:	add    BYTE PTR [rax],al
   1400107cf:	add    BYTE PTR [rdx+0x0],dl
   1400107d2:	add    BYTE PTR ss:[rax],dh
   1400107d5:	add    BYTE PTR [rdx],dh
   1400107d7:	add    BYTE PTR [rax],bh
   1400107d9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0111df
   1400107df:	add    BYTE PTR [rax],ah
   1400107e1:	add    BYTE PTR [rbp+0x0],dh
   1400107e4:	outs   dx,BYTE PTR ds:[rsi]
   1400107e5:	add    BYTE PTR [rcx+0x0],ah
   1400107e8:	(bad)  
   1400107e9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400107ed:	add    BYTE PTR [rax],ah
   1400107ef:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400107f3:	add    BYTE PTR [rax],ah
   1400107f5:	add    BYTE PTR [rcx+0x0],ch
   1400107f8:	outs   dx,BYTE PTR ds:[rsi]
   1400107f9:	add    BYTE PTR [rcx+0x0],ch
   1400107fc:	je     0x1400107fe
   1400107fe:	imul   eax,DWORD PTR [rax],0x6c0061
   140010804:	imul   eax,DWORD PTR [rax],0x65007a
   14001080a:	and    BYTE PTR [rax],al
   14001080c:	push   0x61006500
   140010811:	add    BYTE PTR [rax+0x0],dh
   140010814:	or     eax,0xa00
   140010819:	add    BYTE PTR [rax],al
   14001081b:	add    BYTE PTR [rax],al
   14001081d:	add    BYTE PTR [rax],al
   14001081f:	add    BYTE PTR [rdx+0x0],dl
   140010822:	add    BYTE PTR ss:[rax],dh
   140010825:	add    BYTE PTR [rdx],dh
   140010827:	add    BYTE PTR [rdi],dh
   140010829:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01122f
   14001082f:	add    BYTE PTR [rax],ah
   140010831:	add    BYTE PTR [rsi+0x0],ch
   140010834:	outs   dx,DWORD PTR ds:[rsi]
   140010835:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010839:	add    BYTE PTR [rbp+0x0],ah
   14001083c:	outs   dx,BYTE PTR ds:[rsi]
   14001083d:	add    BYTE PTR [rdi+0x0],ch
   140010840:	jne    0x140010842
   140010842:	add    BYTE PTR [eax+0x0],ch
   140010846:	and    BYTE PTR [rax],al
   140010848:	jae    0x14001084a
   14001084a:	jo     0x14001084c
   14001084c:	(bad)  
   14001084d:	add    BYTE PTR [rbx+0x0],ah
   140010850:	add    BYTE PTR gs:[rax],ah
   140010853:	add    BYTE PTR [rsi+0x0],ah
   140010856:	outs   dx,DWORD PTR ds:[rsi]
   140010857:	add    BYTE PTR [rdx+0x0],dh
   14001085a:	and    BYTE PTR [rax],al
   14001085c:	ins    BYTE PTR es:[rdi],dx
   14001085d:	add    BYTE PTR [rdi+0x0],ch
   140010860:	ja     0x140010862
   140010862:	imul   eax,DWORD PTR [rax],0x20006f
   140010868:	imul   eax,DWORD PTR [rax],0x69006e
   14001086e:	je     0x140010870
   140010870:	imul   eax,DWORD PTR [rax],0x6c0061
   140010876:	imul   eax,DWORD PTR [rax],0x61007a
   14001087c:	je     0x14001087e
   14001087e:	imul   eax,DWORD PTR [rax],0x6e006f
   140010884:	or     eax,0xa00
   140010889:	add    BYTE PTR [rax],al
   14001088b:	add    BYTE PTR [rax],al
   14001088d:	add    BYTE PTR [rax],al
   14001088f:	add    BYTE PTR [rdx+0x0],dl
   140010892:	add    BYTE PTR ss:[rax],dh
   140010895:	add    BYTE PTR [rdx],dh
   140010897:	add    BYTE PTR [rsi],dh
   140010899:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01129f
   14001089f:	add    BYTE PTR [rax],ah
   1400108a1:	add    BYTE PTR [rsi+0x0],ch
   1400108a4:	outs   dx,DWORD PTR ds:[rsi]
   1400108a5:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400108a9:	add    BYTE PTR [rbp+0x0],ah
   1400108ac:	outs   dx,BYTE PTR ds:[rsi]
   1400108ad:	add    BYTE PTR [rdi+0x0],ch
   1400108b0:	jne    0x1400108b2
   1400108b2:	add    BYTE PTR [eax+0x0],ch
   1400108b6:	and    BYTE PTR [rax],al
   1400108b8:	jae    0x1400108ba
   1400108ba:	jo     0x1400108bc
   1400108bc:	(bad)  
   1400108bd:	add    BYTE PTR [rbx+0x0],ah
   1400108c0:	add    BYTE PTR gs:[rax],ah
   1400108c3:	add    BYTE PTR [rsi+0x0],ah
   1400108c6:	outs   dx,DWORD PTR ds:[rsi]
   1400108c7:	add    BYTE PTR [rdx+0x0],dh
   1400108ca:	and    BYTE PTR [rax],al
   1400108cc:	jae    0x1400108ce
   1400108ce:	je     0x1400108d0
   1400108d0:	add    BYTE PTR fs:[rcx+0x0],ch
   1400108d4:	outs   dx,DWORD PTR ds:[rsi]
   1400108d5:	add    BYTE PTR [rax],ah
   1400108d7:	add    BYTE PTR [rcx+0x0],ch
   1400108da:	outs   dx,BYTE PTR ds:[rsi]
   1400108db:	add    BYTE PTR [rcx+0x0],ch
   1400108de:	je     0x1400108e0
   1400108e0:	imul   eax,DWORD PTR [rax],0x6c0061
   1400108e6:	imul   eax,DWORD PTR [rax],0x61007a
   1400108ec:	je     0x1400108ee
   1400108ee:	imul   eax,DWORD PTR [rax],0x6e006f
   1400108f4:	or     eax,0xa00
   1400108f9:	add    BYTE PTR [rax],al
   1400108fb:	add    BYTE PTR [rax],al
   1400108fd:	add    BYTE PTR [rax],al
   1400108ff:	add    BYTE PTR [rdx+0x0],dl
   140010902:	add    BYTE PTR ss:[rax],dh
   140010905:	add    BYTE PTR [rdx],dh
   140010907:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a01160d
   14001090d:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b0012913
   140010913:	add    BYTE PTR [rbp+0x0],dh
   140010916:	jb     0x140010918
   140010918:	add    BYTE PTR gs:[rax],ah
   14001091b:	add    BYTE PTR [rsi+0x0],dh
   14001091e:	imul   eax,DWORD PTR [rax],0x740072
   140010924:	jne    0x140010926
   140010926:	(bad)  
   140010927:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001092b:	add    BYTE PTR [rsi+0x0],ah
   14001092e:	jne    0x140010930
   140010930:	outs   dx,BYTE PTR ds:[rsi]
   140010931:	add    BYTE PTR [rbx+0x0],ah
   140010934:	je     0x140010936
   140010936:	imul   eax,DWORD PTR [rax],0x6e006f
   14001093c:	and    BYTE PTR [rax],al
   14001093e:	movsxd eax,DWORD PTR [rax]
   140010940:	(bad)  
   140010941:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140010945:	add    BYTE PTR [rip+0xa00],cl        # 0x14001134b
   14001094b:	add    BYTE PTR [rax],al
   14001094d:	add    BYTE PTR [rax],al
   14001094f:	add    BYTE PTR [rdx+0x0],dl
   140010952:	add    BYTE PTR ss:[rax],dh
   140010955:	add    BYTE PTR [rdx],dh
   140010957:	add    BYTE PTR [rax+rax*1],dh
   14001095a:	or     eax,0x2d000a00
   14001095f:	add    BYTE PTR [rax],ah
   140010961:	add    BYTE PTR [rsi+0x0],ch
   140010964:	outs   dx,DWORD PTR ds:[rsi]
   140010965:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010969:	add    BYTE PTR [rbp+0x0],ah
   14001096c:	outs   dx,BYTE PTR ds:[rsi]
   14001096d:	add    BYTE PTR [rdi+0x0],ch
   140010970:	jne    0x140010972
   140010972:	add    BYTE PTR [eax+0x0],ch
   140010976:	and    BYTE PTR [rax],al
   140010978:	jae    0x14001097a
   14001097a:	jo     0x14001097c
   14001097c:	(bad)  
   14001097d:	add    BYTE PTR [rbx+0x0],ah
   140010980:	add    BYTE PTR gs:[rax],ah
   140010983:	add    BYTE PTR [rsi+0x0],ah
   140010986:	outs   dx,DWORD PTR ds:[rsi]
   140010987:	add    BYTE PTR [rdx+0x0],dh
   14001098a:	and    BYTE PTR [rax],al
   14001098c:	pop    rdi
   14001098d:	add    BYTE PTR [rdi+0x0],ch
   140010990:	outs   dx,BYTE PTR ds:[rsi]
   140010991:	add    BYTE PTR [rbp+0x0],ah
   140010994:	js     0x140010996
   140010996:	imul   eax,DWORD PTR [rax],0x2f0074
   14001099c:	(bad)  
   14001099d:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400109a1:	add    BYTE PTR [rax+0x0],bh
   1400109a4:	imul   eax,DWORD PTR [rax],0x200074
   1400109aa:	je     0x1400109ac
   1400109ac:	(bad)  
   1400109ad:	add    BYTE PTR [rdx+0x0],ah
   1400109b0:	ins    BYTE PTR es:[rdi],dx
   1400109b1:	add    BYTE PTR [rbp+0x0],ah
   1400109b4:	or     eax,0xa00
   1400109b9:	add    BYTE PTR [rax],al
   1400109bb:	add    BYTE PTR [rax],al
   1400109bd:	add    BYTE PTR [rax],al
   1400109bf:	add    BYTE PTR [rdx+0x0],dl
   1400109c2:	add    BYTE PTR ss:[rax],dh
   1400109c5:	add    BYTE PTR [rcx],dh
   1400109c7:	add    BYTE PTR [rcx],bh
   1400109c9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0113cf
   1400109cf:	add    BYTE PTR [rax],ah
   1400109d1:	add    BYTE PTR [rbp+0x0],dh
   1400109d4:	outs   dx,BYTE PTR ds:[rsi]
   1400109d5:	add    BYTE PTR [rcx+0x0],ah
   1400109d8:	(bad)  
   1400109d9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400109dd:	add    BYTE PTR [rax],ah
   1400109df:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400109e3:	add    BYTE PTR [rax],ah
   1400109e5:	add    BYTE PTR [rdi+0x0],ch
   1400109e8:	jo     0x1400109ea
   1400109ea:	add    BYTE PTR gs:[rsi+0x0],ch
   1400109ee:	and    BYTE PTR [rax],al
   1400109f0:	movsxd eax,DWORD PTR [rax]
   1400109f2:	outs   dx,DWORD PTR ds:[rsi]
   1400109f3:	add    BYTE PTR [rsi+0x0],ch
   1400109f6:	jae    0x1400109f8
   1400109f8:	outs   dx,DWORD PTR ds:[rsi]
   1400109f9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400109fd:	add    BYTE PTR [rax],ah
   1400109ff:	add    BYTE PTR [rax+rax*1+0x65],ah
   140010a03:	add    BYTE PTR [rsi+0x0],dh
   140010a06:	imul   eax,DWORD PTR [rax],0x650063
   140010a0c:	or     eax,0xa00
	...
   140010a1d:	add    BYTE PTR [rax],al
   140010a1f:	add    BYTE PTR [rdx+0x0],dl
   140010a22:	add    BYTE PTR ss:[rax],dh
   140010a25:	add    BYTE PTR [rcx],dh
   140010a27:	add    BYTE PTR [rax],bh
   140010a29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01142f
   140010a2f:	add    BYTE PTR [rax],ah
   140010a31:	add    BYTE PTR [rbp+0x0],dh
   140010a34:	outs   dx,BYTE PTR ds:[rsi]
   140010a35:	add    BYTE PTR [rbp+0x0],ah
   140010a38:	js     0x140010a3a
   140010a3a:	jo     0x140010a3c
   140010a3c:	add    BYTE PTR gs:[rbx+0x0],ah
   140010a40:	je     0x140010a42
   140010a42:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140010a47:	add    BYTE PTR [rax+0x0],ch
   140010a4a:	add    BYTE PTR gs:[rcx+0x0],ah
   140010a4e:	jo     0x140010a50
   140010a50:	and    BYTE PTR [rax],al
   140010a52:	add    BYTE PTR gs:[rdx+0x0],dh
   140010a56:	jb     0x140010a58
   140010a58:	outs   dx,DWORD PTR ds:[rsi]
   140010a59:	add    BYTE PTR [rdx+0x0],dh
   140010a5c:	or     eax,0xa00
	...
   140010a6d:	add    BYTE PTR [rax],al
   140010a6f:	add    BYTE PTR [rdx+0x0],dl
   140010a72:	add    BYTE PTR ss:[rax],dh
   140010a75:	add    BYTE PTR [rcx],dh
   140010a77:	add    BYTE PTR [rdi],dh
   140010a79:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01147f
   140010a7f:	add    BYTE PTR [rax],ah
   140010a81:	add    BYTE PTR [rbp+0x0],dh
   140010a84:	outs   dx,BYTE PTR ds:[rsi]
   140010a85:	add    BYTE PTR [rbp+0x0],ah
   140010a88:	js     0x140010a8a
   140010a8a:	jo     0x140010a8c
   140010a8c:	add    BYTE PTR gs:[rbx+0x0],ah
   140010a90:	je     0x140010a92
   140010a92:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140010a97:	add    BYTE PTR [rbp+0x0],ch
   140010a9a:	jne    0x140010a9c
   140010a9c:	ins    BYTE PTR es:[rdi],dx
   140010a9d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010aa1:	add    BYTE PTR [rax+rax*1+0x68],dh
   140010aa5:	add    BYTE PTR [rdx+0x0],dh
   140010aa8:	add    BYTE PTR gs:[rcx+0x0],ah
   140010aac:	add    BYTE PTR fs:[rax],ah
   140010aaf:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140010ab3:	add    BYTE PTR [rbx+0x0],ah
   140010ab6:	imul   eax,DWORD PTR [rax],0x20
   140010ab9:	add    BYTE PTR [rbp+0x0],ah
   140010abc:	jb     0x140010abe
   140010abe:	jb     0x140010ac0
   140010ac0:	outs   dx,DWORD PTR ds:[rsi]
   140010ac1:	add    BYTE PTR [rdx+0x0],dh
   140010ac4:	or     eax,0xa00
   140010ac9:	add    BYTE PTR [rax],al
   140010acb:	add    BYTE PTR [rax],al
   140010acd:	add    BYTE PTR [rax],al
   140010acf:	add    BYTE PTR [rdx+0x0],dl
   140010ad2:	add    BYTE PTR ss:[rax],dh
   140010ad5:	add    BYTE PTR [rcx],dh
   140010ad7:	add    BYTE PTR [rsi],dh
   140010ad9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0114df
   140010adf:	add    BYTE PTR [rax],ah
   140010ae1:	add    BYTE PTR [rsi+0x0],ch
   140010ae4:	outs   dx,DWORD PTR ds:[rsi]
   140010ae5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010ae9:	add    BYTE PTR [rbp+0x0],ah
   140010aec:	outs   dx,BYTE PTR ds:[rsi]
   140010aed:	add    BYTE PTR [rdi+0x0],ch
   140010af0:	jne    0x140010af2
   140010af2:	add    BYTE PTR [eax+0x0],ch
   140010af6:	and    BYTE PTR [rax],al
   140010af8:	jae    0x140010afa
   140010afa:	jo     0x140010afc
   140010afc:	(bad)  
   140010afd:	add    BYTE PTR [rbx+0x0],ah
   140010b00:	add    BYTE PTR gs:[rax],ah
   140010b03:	add    BYTE PTR [rsi+0x0],ah
   140010b06:	outs   dx,DWORD PTR ds:[rsi]
   140010b07:	add    BYTE PTR [rdx+0x0],dh
   140010b0a:	and    BYTE PTR [rax],al
   140010b0c:	je     0x140010b0e
   140010b0e:	push   0x65007200
   140010b13:	add    BYTE PTR [rcx+0x0],ah
   140010b16:	add    BYTE PTR fs:[rax],ah
   140010b19:	add    BYTE PTR [rax+rax*1+0x61],ah
   140010b1d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140010b21:	add    BYTE PTR [rip+0xa00],cl        # 0x140011527
	...
   140010b2f:	add    BYTE PTR [rdx+0x0],dl
   140010b32:	add    BYTE PTR ss:[rax],dh
   140010b35:	add    BYTE PTR [rcx],dh
   140010b37:	add    BYTE PTR [rax],dh
   140010b39:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01153f
   140010b3f:	add    BYTE PTR [rax],ah
   140010b41:	add    BYTE PTR [rcx+0x0],ah
   140010b44:	(bad)  
   140010b45:	add    BYTE PTR [rdi+0x0],ch
   140010b48:	jb     0x140010b4a
   140010b4a:	je     0x140010b4c
   140010b4c:	sub    BYTE PTR [rax],al
   140010b4e:	sub    DWORD PTR [rax],eax
   140010b50:	and    BYTE PTR [rax],al
   140010b52:	push   0x73006100
   140010b57:	add    BYTE PTR [rax],ah
   140010b59:	add    BYTE PTR [rdx+0x0],ah
   140010b5c:	add    BYTE PTR gs:[rbp+0x0],ah
   140010b60:	outs   dx,BYTE PTR ds:[rsi]
   140010b61:	add    BYTE PTR [rax],ah
   140010b63:	add    BYTE PTR [rbx+0x0],ah
   140010b66:	(bad)  
   140010b67:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140010b6b:	add    BYTE PTR [rbp+0x0],ah
   140010b6e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x140011575
	...
   140010b7d:	add    BYTE PTR [rax],al
   140010b7f:	add    BYTE PTR [rdx+0x0],dl
   140010b82:	add    BYTE PTR ss:[rax],dh
   140010b85:	add    BYTE PTR [rax],dh
   140010b87:	add    BYTE PTR [rcx],bh
   140010b89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01158f
   140010b8f:	add    BYTE PTR [rax],ah
   140010b91:	add    BYTE PTR [rsi+0x0],ch
   140010b94:	outs   dx,DWORD PTR ds:[rsi]
   140010b95:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010b99:	add    BYTE PTR [rbp+0x0],ah
   140010b9c:	outs   dx,BYTE PTR ds:[rsi]
   140010b9d:	add    BYTE PTR [rdi+0x0],ch
   140010ba0:	jne    0x140010ba2
   140010ba2:	add    BYTE PTR [eax+0x0],ch
   140010ba6:	and    BYTE PTR [rax],al
   140010ba8:	jae    0x140010baa
   140010baa:	jo     0x140010bac
   140010bac:	(bad)  
   140010bad:	add    BYTE PTR [rbx+0x0],ah
   140010bb0:	add    BYTE PTR gs:[rax],ah
   140010bb3:	add    BYTE PTR [rsi+0x0],ah
   140010bb6:	outs   dx,DWORD PTR ds:[rsi]
   140010bb7:	add    BYTE PTR [rdx+0x0],dh
   140010bba:	and    BYTE PTR [rax],al
   140010bbc:	add    BYTE PTR gs:[rsi+0x0],ch
   140010bc0:	jbe    0x140010bc2
   140010bc2:	imul   eax,DWORD PTR [rax],0x6f0072
   140010bc8:	outs   dx,BYTE PTR ds:[rsi]
   140010bc9:	add    BYTE PTR [rbp+0x0],ch
   140010bcc:	add    BYTE PTR gs:[rsi+0x0],ch
   140010bd0:	je     0x140010bd2
   140010bd2:	or     eax,0xa00
	...
   140010bdf:	add    BYTE PTR [rdx+0x0],dl
   140010be2:	add    BYTE PTR ss:[rax],dh
   140010be5:	add    BYTE PTR [rax],dh
   140010be7:	add    BYTE PTR [rax],bh
   140010be9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0115ef
   140010bef:	add    BYTE PTR [rax],ah
   140010bf1:	add    BYTE PTR [rsi+0x0],ch
   140010bf4:	outs   dx,DWORD PTR ds:[rsi]
   140010bf5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010bf9:	add    BYTE PTR [rbp+0x0],ah
   140010bfc:	outs   dx,BYTE PTR ds:[rsi]
   140010bfd:	add    BYTE PTR [rdi+0x0],ch
   140010c00:	jne    0x140010c02
   140010c02:	add    BYTE PTR [eax+0x0],ch
   140010c06:	and    BYTE PTR [rax],al
   140010c08:	jae    0x140010c0a
   140010c0a:	jo     0x140010c0c
   140010c0c:	(bad)  
   140010c0d:	add    BYTE PTR [rbx+0x0],ah
   140010c10:	add    BYTE PTR gs:[rax],ah
   140010c13:	add    BYTE PTR [rsi+0x0],ah
   140010c16:	outs   dx,DWORD PTR ds:[rsi]
   140010c17:	add    BYTE PTR [rdx+0x0],dh
   140010c1a:	and    BYTE PTR [rax],al
   140010c1c:	(bad)  
   140010c1d:	add    BYTE PTR [rdx+0x0],dh
   140010c20:	add    BYTE PTR [ebp+0x0],dh
   140010c24:	ins    DWORD PTR es:[rdi],dx
   140010c25:	add    BYTE PTR [rbp+0x0],ah
   140010c28:	outs   dx,BYTE PTR ds:[rsi]
   140010c29:	add    BYTE PTR [rax+rax*1+0x73],dh
   140010c2d:	add    BYTE PTR [rip+0xa00],cl        # 0x140011633
	...
   140010c3f:	add    BYTE PTR [rdx+0x0],dl
   140010c42:	add    BYTE PTR ss:[rax],dh
   140010c45:	add    BYTE PTR [rax],dh
   140010c47:	add    BYTE PTR [rdx],dh
   140010c49:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01164f
   140010c4f:	add    BYTE PTR [rax],ah
   140010c51:	add    BYTE PTR [rsi+0x0],ah
   140010c54:	ins    BYTE PTR es:[rdi],dx
   140010c55:	add    BYTE PTR [rdi+0x0],ch
   140010c58:	(bad)  
   140010c59:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010c5d:	add    BYTE PTR [rsi+0x0],ch
   140010c60:	add    BYTE PTR [eax],ah
   140010c63:	add    BYTE PTR [rax+0x0],dh
   140010c66:	outs   dx,DWORD PTR ds:[rsi]
   140010c67:	add    BYTE PTR [rcx+0x0],ch
   140010c6a:	outs   dx,BYTE PTR ds:[rsi]
   140010c6b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140010c6f:	add    BYTE PTR [rbx+0x0],dh
   140010c72:	jne    0x140010c74
   140010c74:	jo     0x140010c76
   140010c76:	jo     0x140010c78
   140010c78:	outs   dx,DWORD PTR ds:[rsi]
   140010c79:	add    BYTE PTR [rdx+0x0],dh
   140010c7c:	je     0x140010c7e
   140010c7e:	and    BYTE PTR [rax],al
   140010c80:	outs   dx,BYTE PTR ds:[rsi]
   140010c81:	add    BYTE PTR [rdi+0x0],ch
   140010c84:	je     0x140010c86
   140010c86:	and    BYTE PTR [rax],al
   140010c88:	ins    BYTE PTR es:[rdi],dx
   140010c89:	add    BYTE PTR [rdi+0x0],ch
   140010c8c:	(bad)  
   140010c8d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140010c91:	add    BYTE PTR [rax+rax*1+0xd],ah
   140010c95:	add    BYTE PTR [rdx],cl
	...
   140010c9f:	add    BYTE PTR [rdx],al
   140010ca1:	add    BYTE PTR [rax],al
   140010ca3:	add    BYTE PTR [rax],al
   140010ca5:	add    BYTE PTR [rax],al
   140010ca7:	add    BYTE PTR [rax+0xc],al
   140010caa:	add    DWORD PTR [rax+0x1],eax
   140010cad:	add    BYTE PTR [rax],al
   140010caf:	add    BYTE PTR [rax],cl
   140010cb1:	add    BYTE PTR [rax],al
   140010cb3:	add    BYTE PTR [rax],al
   140010cb5:	add    BYTE PTR [rax],al
   140010cb7:	add    al,ah
   140010cb9:	or     eax,DWORD PTR [rcx]
   140010cbb:	rex add DWORD PTR [rax],eax
   140010cbe:	add    BYTE PTR [rax],al
   140010cc0:	or     DWORD PTR [rax],eax
   140010cc2:	add    BYTE PTR [rax],al
   140010cc4:	add    BYTE PTR [rax],al
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	or     BYTE PTR [rbx],0x1
   140010ccb:	rex add DWORD PTR [rax],eax
   140010cce:	add    BYTE PTR [rax],al
   140010cd0:	or     al,BYTE PTR [rax]
   140010cd2:	add    BYTE PTR [rax],al
   140010cd4:	add    BYTE PTR [rax],al
   140010cd6:	add    BYTE PTR [rax],al
   140010cd8:	xor    BYTE PTR [rbx],cl
   140010cda:	add    DWORD PTR [rax+0x1],eax
   140010cdd:	add    BYTE PTR [rax],al
   140010cdf:	add    BYTE PTR [rax],dl
   140010ce1:	add    BYTE PTR [rax],al
   140010ce3:	add    BYTE PTR [rax],al
   140010ce5:	add    BYTE PTR [rax],al
   140010ce7:	add    al,dl
   140010ce9:	or     al,BYTE PTR [rcx]
   140010ceb:	rex add DWORD PTR [rax],eax
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	adc    DWORD PTR [rax],eax
   140010cf2:	add    BYTE PTR [rax],al
   140010cf4:	add    BYTE PTR [rax],al
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	jo     0x140010d04
   140010cfa:	add    DWORD PTR [rax+0x1],eax
   140010cfd:	add    BYTE PTR [rax],al
   140010cff:	add    BYTE PTR [rdx],dl
   140010d01:	add    BYTE PTR [rax],al
   140010d03:	add    BYTE PTR [rax],al
   140010d05:	add    BYTE PTR [rax],al
   140010d07:	add    BYTE PTR [rax],ah
   140010d09:	or     al,BYTE PTR [rcx]
   140010d0b:	rex add DWORD PTR [rax],eax
   140010d0e:	add    BYTE PTR [rax],al
   140010d10:	adc    eax,DWORD PTR [rax]
   140010d12:	add    BYTE PTR [rax],al
   140010d14:	add    BYTE PTR [rax],al
   140010d16:	add    BYTE PTR [rax],al
   140010d18:	ror    BYTE PTR [rcx],0x1
   140010d1b:	rex add DWORD PTR [rax],eax
   140010d1e:	add    BYTE PTR [rax],al
   140010d20:	sbb    BYTE PTR [rax],al
   140010d22:	add    BYTE PTR [rax],al
   140010d24:	add    BYTE PTR [rax],al
   140010d26:	add    BYTE PTR [rax],al
   140010d28:	push   rax
   140010d29:	or     DWORD PTR [rcx],eax
   140010d2b:	rex add DWORD PTR [rax],eax
   140010d2e:	add    BYTE PTR [rax],al
   140010d30:	sbb    DWORD PTR [rax],eax
   140010d32:	add    BYTE PTR [rax],al
   140010d34:	add    BYTE PTR [rax],al
   140010d36:	add    BYTE PTR [rax],al
   140010d38:	add    BYTE PTR [rcx],cl
   140010d3a:	add    DWORD PTR [rax+0x1],eax
   140010d3d:	add    BYTE PTR [rax],al
   140010d3f:	add    BYTE PTR [rdx],bl
   140010d41:	add    BYTE PTR [rax],al
   140010d43:	add    BYTE PTR [rax],al
   140010d45:	add    BYTE PTR [rax],al
   140010d47:	add    BYTE PTR [rax+0x1400108],dl
   140010d4d:	add    BYTE PTR [rax],al
   140010d4f:	add    BYTE PTR [rbx],bl
   140010d51:	add    BYTE PTR [rax],al
   140010d53:	add    BYTE PTR [rax],al
   140010d55:	add    BYTE PTR [rax],al
   140010d57:	add    BYTE PTR [rax],ah
   140010d59:	or     BYTE PTR [rcx],al
   140010d5b:	rex add DWORD PTR [rax],eax
   140010d5e:	add    BYTE PTR [rax],al
   140010d60:	sbb    al,0x0
   140010d62:	add    BYTE PTR [rax],al
   140010d64:	add    BYTE PTR [rax],al
   140010d66:	add    BYTE PTR [rax],al
   140010d68:	rol    BYTE PTR [rdi],1
   140010d6a:	add    DWORD PTR [rax+0x1],eax
   140010d6d:	add    BYTE PTR [rax],al
   140010d6f:	add    BYTE PTR [rsi],bl
   140010d71:	add    BYTE PTR [rax],al
   140010d73:	add    BYTE PTR [rax],al
   140010d75:	add    BYTE PTR [rax],al
   140010d77:	add    BYTE PTR [rax+0x1400107],cl
   140010d7d:	add    BYTE PTR [rax],al
   140010d7f:	add    BYTE PTR [rdi],bl
   140010d81:	add    BYTE PTR [rax],al
   140010d83:	add    BYTE PTR [rax],al
   140010d85:	add    BYTE PTR [rax],al
   140010d87:	add    al,al
   140010d89:	(bad)  
   140010d8a:	add    DWORD PTR [rax+0x1],eax
   140010d8d:	add    BYTE PTR [rax],al
   140010d8f:	add    BYTE PTR [rax],ah
   140010d91:	add    BYTE PTR [rax],al
   140010d93:	add    BYTE PTR [rax],al
   140010d95:	add    BYTE PTR [rax],al
   140010d97:	add    BYTE PTR [rax+0x6],dl
   140010d9a:	add    DWORD PTR [rax+0x1],eax
   140010d9d:	add    BYTE PTR [rax],al
   140010d9f:	add    BYTE PTR [rcx],ah
   140010da1:	add    BYTE PTR [rax],al
   140010da3:	add    BYTE PTR [rax],al
   140010da5:	add    BYTE PTR [rax],al
   140010da7:	add    BYTE PTR [rax+0x4],ah
   140010daa:	add    DWORD PTR [rax+0x1],eax
   140010dad:	add    BYTE PTR [rax],al
   140010daf:	add    BYTE PTR [rax+0x0],bh
   140010db2:	add    BYTE PTR [rax],al
   140010db4:	add    BYTE PTR [rax],al
   140010db6:	add    BYTE PTR [rax],al
   140010db8:	add    al,0x1
   140010dbb:	rex add DWORD PTR [rax],eax
   140010dbe:	add    BYTE PTR [rax],al
   140010dc0:	jns    0x140010dc2
   140010dc2:	add    BYTE PTR [rax],al
   140010dc4:	add    BYTE PTR [rax],al
   140010dc6:	add    BYTE PTR [rax],al
   140010dc8:	and    BYTE PTR [rcx+rax*1],al
   140010dcb:	rex add DWORD PTR [rax],eax
   140010dce:	add    BYTE PTR [rax],al
   140010dd0:	jp     0x140010dd2
   140010dd2:	add    BYTE PTR [rax],al
   140010dd4:	add    BYTE PTR [rax],al
   140010dd6:	add    BYTE PTR [rax],al
   140010dd8:	add    BYTE PTR [rcx+rax*1],al
   140010ddb:	rex add DWORD PTR [rax],eax
   140010dde:	add    BYTE PTR [rax],al
   140010de0:	cld    
   140010de1:	add    BYTE PTR [rax],al
   140010de3:	add    BYTE PTR [rax],al
   140010de5:	add    BYTE PTR [rax],al
   140010de7:	add    al,bh
   140010de9:	add    eax,DWORD PTR [rcx]
   140010deb:	rex add DWORD PTR [rax],eax
   140010dee:	add    BYTE PTR [rax],al
   140010df0:	inc    DWORD PTR [rax]
   140010df2:	add    BYTE PTR [rax],al
   140010df4:	add    BYTE PTR [rax],al
   140010df6:	add    BYTE PTR [rax],al
   140010df8:	fadd   DWORD PTR [rbx]
   140010dfa:	add    DWORD PTR [rax+0x1],eax
   140010dfd:	add    BYTE PTR [rax],al
   140010dff:	add    BYTE PTR [rbp+0x0],cl
   140010e02:	imul   eax,DWORD PTR [rax],0x720063
   140010e08:	outs   dx,DWORD PTR ds:[rsi]
   140010e09:	add    BYTE PTR [rbx+0x0],dh
   140010e0c:	outs   dx,DWORD PTR ds:[rsi]
   140010e0d:	add    BYTE PTR [rsi+0x0],ah
   140010e10:	je     0x140010e12
   140010e12:	and    BYTE PTR [rax],al
   140010e14:	push   rsi
   140010e15:	add    BYTE PTR [rcx+0x0],ch
   140010e18:	jae    0x140010e1a
   140010e1a:	jne    0x140010e1c
   140010e1c:	(bad)  
   140010e1d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140010e21:	add    BYTE PTR [rbx+0x0],al
   140010e24:	sub    eax,DWORD PTR [rax]
   140010e26:	sub    eax,DWORD PTR [rax]
   140010e28:	and    BYTE PTR [rax],al
   140010e2a:	push   rdx
   140010e2b:	add    BYTE PTR [rbp+0x0],dh
   140010e2e:	outs   dx,BYTE PTR ds:[rsi]
   140010e2f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010e33:	add    BYTE PTR [rbp+0x0],ch
   140010e36:	add    BYTE PTR gs:[rax],ah
   140010e39:	add    BYTE PTR [rax+rax*1+0x69],cl
   140010e3d:	add    BYTE PTR [rdx+0x0],ah
   140010e40:	jb     0x140010e42
   140010e42:	(bad)  
   140010e43:	add    BYTE PTR [rdx+0x0],dh
   140010e46:	jns    0x140010e48
   140010e48:	add    BYTE PTR [rax],al
   140010e4a:	add    BYTE PTR [rax],al
   140010e4c:	or     al,BYTE PTR [rax]
   140010e4e:	or     al,BYTE PTR [rax]
	...
   140010e58:	add    BYTE PTR cs:[rsi],ch
   140010e5b:	add    BYTE PTR [rsi],ch
   140010e5d:	add    BYTE PTR [rax],al
   140010e5f:	add    BYTE PTR [rax+rax*1],bh
   140010e62:	jo     0x140010e64
   140010e64:	jb     0x140010e66
   140010e66:	outs   dx,DWORD PTR ds:[rsi]
   140010e67:	add    BYTE PTR [rdi+0x0],ah
   140010e6a:	jb     0x140010e6c
   140010e6c:	(bad)  
   140010e6d:	add    BYTE PTR [rbp+0x0],ch
   140010e70:	and    BYTE PTR [rax],al
   140010e72:	outs   dx,BYTE PTR ds:[rsi]
   140010e73:	add    BYTE PTR [rcx+0x0],ah
   140010e76:	ins    DWORD PTR es:[rdi],dx
   140010e77:	add    BYTE PTR [rbp+0x0],ah
   140010e7a:	and    BYTE PTR [rax],al
   140010e7c:	jne    0x140010e7e
   140010e7e:	outs   dx,BYTE PTR ds:[rsi]
   140010e7f:	add    BYTE PTR [rbx+0x0],ch
   140010e82:	outs   dx,BYTE PTR ds:[rsi]
   140010e83:	add    BYTE PTR [rdi+0x0],ch
   140010e86:	ja     0x140010e88
   140010e88:	outs   dx,BYTE PTR ds:[rsi]
   140010e89:	add    BYTE PTR [rsi],bh
   140010e8b:	add    BYTE PTR [rax],al
   140010e8d:	add    BYTE PTR [rax],al
   140010e8f:	add    BYTE PTR [rdx+0x0],dl
   140010e92:	jne    0x140010e94
   140010e94:	outs   dx,BYTE PTR ds:[rsi]
   140010e95:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010e99:	add    BYTE PTR [rbp+0x0],ch
   140010e9c:	add    BYTE PTR gs:[rax],ah
   140010e9f:	add    BYTE PTR [rbp+0x0],al
   140010ea2:	jb     0x140010ea4
   140010ea4:	jb     0x140010ea6
   140010ea6:	outs   dx,DWORD PTR ds:[rsi]
   140010ea7:	add    BYTE PTR [rdx+0x0],dh
   140010eaa:	and    DWORD PTR [rax],eax
   140010eac:	or     al,BYTE PTR [rax]
   140010eae:	or     al,BYTE PTR [rax]
   140010eb0:	push   rax
   140010eb1:	add    BYTE PTR [rdx+0x0],dh
   140010eb4:	outs   dx,DWORD PTR ds:[rsi]
   140010eb5:	add    BYTE PTR [rdi+0x0],ah
   140010eb8:	jb     0x140010eba
   140010eba:	(bad)  
   140010ebb:	add    BYTE PTR [rbp+0x0],ch
   140010ebe:	cmp    al,BYTE PTR [rax]
   140010ec0:	and    BYTE PTR [rax],al
	...
   140010ece:	add    BYTE PTR [rax],al
   140010ed0:	add    eax,0xbc00000
	...
   140010edd:	add    BYTE PTR [rax],al
   140010edf:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c10ee5
	...
   140010eed:	add    BYTE PTR [rax],al
   140010eef:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   140010efd:	add    BYTE PTR [rax],al
   140010eff:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   140010f0d:	add    BYTE PTR [rax],al
   140010f0f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   140010f1d:	add    BYTE PTR [rax],al
   140010f1f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   140010f2d:	add    BYTE PTR [rax],al
   140010f2f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   140010f3d:	add    BYTE PTR [rax],al
   140010f3f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   140010f4d:	add    BYTE PTR [rax],al
   140010f4f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   140010f5d:	add    BYTE PTR [rax],al
   140010f5f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   140010f6d:	add    BYTE PTR [rax],al
   140010f6f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   140010f7e:	add    BYTE PTR [rax],al
   140010f80:	mov    ch,0x2
   140010f82:	add    al,al
   140010f84:	or     BYTE PTR [rax],al
	...
   140010f8e:	add    BYTE PTR [rax],al
   140010f90:	add    eax,DWORD PTR [rax]
   140010f92:	add    BYTE PTR [rax],al
   140010f94:	or     DWORD PTR [rax],eax
   140010f96:	add    BYTE PTR [rax],al
   140010f98:	rol    BYTE PTR [rax],0x0
   140010f9b:	add    BYTE PTR [rax+rax*1],cl
   140010f9e:	add    BYTE PTR [rax],al
   140010fa0:	and    BYTE PTR [rcx+rax*1+0x40],ch
   140010fa4:	add    DWORD PTR [rax],eax
   140010fa6:	add    BYTE PTR [rax],al
   140010fa8:	shr    BYTE PTR [rcx+rax*1+0x40],0x1
   140010fad:	add    BYTE PTR [rax],al
   140010faf:	add    BYTE PTR [rcx],ch
   140010fb1:	add    BYTE PTR [rax],al
   140010fb3:	add    BYTE PTR [rcx],0x0
	...
   140010fc6:	add    BYTE PTR [rax],al
   140010fc8:	sldt   WORD PTR [rax]
   140010fcb:	add    BYTE PTR [rax],al
   140010fcd:	add    BYTE PTR [rax],al
   140010fcf:	add    BYTE PTR [rax],ah
   140010fd1:	add    eax,0x1993
	...
   140011046:	add    BYTE PTR [rax],al
   140011048:	js     0x14001107a
   14001104a:	add    DWORD PTR [rax+0x1],eax
   14001104d:	add    BYTE PTR [rax],al
   14001104f:	add    BYTE PTR [rax],bl
   140011051:	jbe    0x140011053
   140011053:	rex add DWORD PTR [rax],eax
   140011056:	add    BYTE PTR [rax],al
   140011058:	fdivr  QWORD PTR [rdx+0x14000]
   14001105e:	add    BYTE PTR [rax],al
   140011060:	(bad)
   140011065:	ins    BYTE PTR es:[rdi],dx
   140011066:	ins    BYTE PTR es:[rdi],dx
   140011067:	outs   dx,DWORD PTR ds:[rsi]
   140011068:	movsxd esp,DWORD PTR [rcx+0x74]
   14001106b:	imul   ebp,DWORD PTR [rdi+0x6e],0x480000
   140011072:	rex.W add BYTE PTR [rdx],dil
   140011075:	add    BYTE PTR [rbp+0x0],ch
   140011078:	ins    DWORD PTR es:[rdi],dx
   140011079:	add    BYTE PTR [rdx],bh
   14001107b:	add    BYTE PTR [rbx+0x0],dh
   14001107e:	jae    0x140011080
	...
   140011088:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14001108d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   140011091:	add    BYTE PTR [rax],ah
   140011093:	add    BYTE PTR [rbp+0x0],cl
   140011096:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14001109a:	rex.WRB add BYTE PTR [r8],r12b
   14001109d:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400110a1:	add    BYTE PTR [rax+rax*1],ch
   1400110a4:	and    BYTE PTR [rax],al
   1400110a6:	jns    0x1400110a8
   1400110a8:	jns    0x1400110aa
   1400110aa:	jns    0x1400110ac
   1400110ac:	jns    0x1400110ae
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	rex.WRB add BYTE PTR [r13+0x0],r9b
   1400110b4:	(bad)  
   1400110b5:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400110b9:	add    BYTE PTR [rdi],ch
   1400110bb:	add    BYTE PTR [rcx+0x0],bh
   1400110be:	jns    0x1400110c0
   1400110c0:	add    BYTE PTR [rax],al
   1400110c2:	add    BYTE PTR [rax],al
   1400110c4:	push   rax
   1400110c5:	add    BYTE PTR [rbp+0x0],cl
   1400110c8:	add    BYTE PTR [rax],al
   1400110ca:	add    BYTE PTR [rax],al
   1400110cc:	add    BYTE PTR [r13+0x0],cl
	...
   1400110d8:	add    BYTE PTR [rbp+0x0],r12b
   1400110dc:	movsxd eax,DWORD PTR [rax]
   1400110de:	add    BYTE PTR gs:[rbp+0x0],ch
   1400110e2:	(bad)  
   1400110e3:	add    BYTE PTR [rbp+0x0],ah
   1400110e6:	jb     0x1400110e8
	...
   1400110f0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400110f4:	jbe    0x1400110f6
   1400110f6:	add    BYTE PTR gs:[rbp+0x0],ch
   1400110fa:	(bad)  
   1400110fb:	add    BYTE PTR [rbp+0x0],ah
   1400110fe:	jb     0x140011100
	...
   140011108:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14001110c:	je     0x14001110e
   14001110e:	outs   dx,DWORD PTR ds:[rsi]
   14001110f:	add    BYTE PTR [rdx+0x0],ah
   140011112:	add    BYTE PTR gs:[rdx+0x0],dh
   140011116:	add    BYTE PTR [rax],al
   140011118:	push   rbx
   140011119:	add    BYTE PTR [rbp+0x0],ah
   14001111c:	jo     0x14001111e
   14001111e:	je     0x140011120
   140011120:	add    BYTE PTR gs:[rbp+0x0],ch
   140011124:	(bad)  
   140011125:	add    BYTE PTR [rbp+0x0],ah
   140011128:	jb     0x14001112a
   14001112a:	add    BYTE PTR [rax],al
   14001112c:	add    BYTE PTR [rax],al
   14001112e:	add    BYTE PTR [rax],al
   140011130:	add    BYTE PTR [r13+0x0],sil
   140011134:	add    BYTE PTR [ebp+0x0],dh
   140011138:	jae    0x14001113a
   14001113a:	je     0x14001113c
   14001113c:	add    BYTE PTR [rax],al
   14001113e:	add    BYTE PTR [rax],al
   140011140:	rex.WX add BYTE PTR [rbp+0x0],sil
   140011144:	ins    BYTE PTR es:[rdi],dx
   140011145:	add    BYTE PTR [rcx+0x0],bh
	...
   140011150:	rex.WX add BYTE PTR [rbp+0x0],sil
   140011154:	outs   dx,BYTE PTR ds:[rsi]
   140011155:	add    BYTE PTR [rbp+0x0],ah
	...
   140011160:	add    BYTE PTR [r8+0x0],sil
   140011164:	jb     0x140011166
   140011166:	imul   eax,DWORD PTR [rax],0x6c
   14001116c:	add    BYTE PTR [rax],al
   14001116e:	add    BYTE PTR [rax],al
   140011170:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140011174:	jb     0x140011176
   140011176:	movsxd eax,DWORD PTR [rax]
   140011178:	push   0x0
   14001117d:	add    BYTE PTR [rax],al
   14001117f:	add    BYTE PTR [rsi+0x0],al
   140011182:	add    BYTE PTR gs:[rdx+0x0],ah
   140011186:	jb     0x140011188
   140011188:	jne    0x14001118a
   14001118a:	(bad)  
   14001118b:	add    BYTE PTR [rdx+0x0],dh
   14001118e:	jns    0x140011190
	...
   140011198:	rex.WX add BYTE PTR [rcx+0x0],spl
   14001119c:	outs   dx,BYTE PTR ds:[rsi]
   14001119d:	add    BYTE PTR [rbp+0x0],dh
   1400111a0:	(bad)  
   1400111a1:	add    BYTE PTR [rdx+0x0],dh
   1400111a4:	jns    0x1400111a6
   1400111a6:	add    BYTE PTR [rax],al
   1400111a8:	add    BYTE PTR [rbp+0x0],r12b
   1400111ac:	movsxd eax,DWORD PTR [rax]
   1400111ae:	add    BYTE PTR [rax],al
   1400111b0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400111b4:	jbe    0x1400111b6
   1400111b6:	add    BYTE PTR [rax],al
   1400111b8:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   1400111bc:	je     0x1400111be
   1400111be:	add    BYTE PTR [rax],al
   1400111c0:	push   rbx
   1400111c1:	add    BYTE PTR [rbp+0x0],ah
   1400111c4:	jo     0x1400111c6
   1400111c6:	add    BYTE PTR [rax],al
   1400111c8:	add    BYTE PTR [r13+0x0],sil
   1400111cc:	add    BYTE PTR [eax],al
   1400111cf:	add    BYTE PTR [rdx+0x0],cl
   1400111d2:	jne    0x1400111d4
   1400111d4:	ins    BYTE PTR es:[rdi],dx
   1400111d5:	add    BYTE PTR [rax],al
   1400111d7:	add    BYTE PTR [rdx+0x0],cl
   1400111da:	jne    0x1400111dc
   1400111dc:	outs   dx,BYTE PTR ds:[rsi]
   1400111dd:	add    BYTE PTR [rax],al
   1400111df:	add    BYTE PTR [rbp+0x0],cl
   1400111e2:	(bad)  
   1400111e3:	add    BYTE PTR [rcx+0x0],bh
   1400111e6:	add    BYTE PTR [rax],al
   1400111e8:	add    BYTE PTR [r8+0x0],sil
   1400111ec:	jb     0x1400111ee
   1400111ee:	add    BYTE PTR [rax],al
   1400111f0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400111f4:	jb     0x1400111f6
   1400111f6:	add    BYTE PTR [rax],al
   1400111f8:	rex.RX add BYTE PTR [rbp+0x0],r12b
   1400111fc:	(bad)  
   1400111fd:	add    BYTE PTR [rax],al
   1400111ff:	add    BYTE PTR [rdx+0x0],cl
   140011202:	(bad)  
   140011203:	add    BYTE PTR [rsi+0x0],ch
   140011206:	add    BYTE PTR [rax],al
   140011208:	push   rbx
   140011209:	add    BYTE PTR [rcx+0x0],ah
   14001120c:	je     0x14001120e
   14001120e:	jne    0x140011210
   140011210:	jb     0x140011212
   140011212:	add    BYTE PTR fs:[rcx+0x0],ah
   140011216:	jns    0x140011218
	...
   140011220:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140011224:	imul   eax,DWORD PTR [rax],0x610064
   14001122a:	jns    0x14001122c
   14001122c:	add    BYTE PTR [rax],al
   14001122e:	add    BYTE PTR [rax],al
   140011230:	push   rsp
   140011231:	add    BYTE PTR [rax+0x0],ch
   140011234:	jne    0x140011236
   140011236:	jb     0x140011238
   140011238:	jae    0x14001123a
   14001123a:	add    BYTE PTR fs:[rcx+0x0],ah
   14001123e:	jns    0x140011240
	...
   140011248:	push   rdi
   140011249:	add    BYTE PTR [rbp+0x0],ah
   14001124c:	add    BYTE PTR fs:[rsi+0x0],ch
   140011250:	add    BYTE PTR gs:[rbx+0x0],dh
   140011254:	add    BYTE PTR fs:[rcx+0x0],ah
   140011258:	jns    0x14001125a
   14001125a:	add    BYTE PTR [rax],al
   14001125c:	add    BYTE PTR [rax],al
   14001125e:	add    BYTE PTR [rax],al
   140011260:	push   rsp
   140011261:	add    BYTE PTR [rbp+0x0],dh
   140011264:	add    BYTE PTR gs:[rbx+0x0],dh
   140011268:	add    BYTE PTR fs:[rcx+0x0],ah
   14001126c:	jns    0x14001126e
   14001126e:	add    BYTE PTR [rax],al
   140011270:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140011274:	outs   dx,BYTE PTR ds:[rsi]
   140011275:	add    BYTE PTR [rax+rax*1+0x61],ah
   140011279:	add    BYTE PTR [rcx+0x0],bh
   14001127c:	add    BYTE PTR [rax],al
   14001127e:	add    BYTE PTR [rax],al
   140011280:	push   rbx
   140011281:	add    BYTE PTR [rbp+0x0],dh
   140011284:	outs   dx,BYTE PTR ds:[rsi]
   140011285:	add    BYTE PTR [rax+rax*1+0x61],ah
   140011289:	add    BYTE PTR [rcx+0x0],bh
   14001128c:	add    BYTE PTR [rax],al
   14001128e:	add    BYTE PTR [rax],al
   140011290:	push   rbx
   140011291:	add    BYTE PTR [rcx+0x0],ah
   140011294:	je     0x140011296
   140011296:	add    BYTE PTR [rax],al
   140011298:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14001129c:	imul   eax,DWORD PTR [rax],0x540000
   1400112a2:	push   0x7500
   1400112a7:	add    BYTE PTR [rdi+0x0],dl
   1400112aa:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400112af:	add    BYTE PTR [rax+rax*1+0x75],dl
   1400112b3:	add    BYTE PTR [rbp+0x0],ah
   1400112b6:	add    BYTE PTR [rax],al
   1400112b8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   1400112bc:	outs   dx,BYTE PTR ds:[rsi]
   1400112bd:	add    BYTE PTR [rax],al
   1400112bf:	add    BYTE PTR [rbx+0x0],dl
   1400112c2:	jne    0x1400112c4
   1400112c4:	outs   dx,BYTE PTR ds:[rsi]
   1400112c5:	add    BYTE PTR [rax],al
   1400112c7:	add    BYTE PTR [rax+0x48],cl
   1400112ca:	cmp    ch,BYTE PTR [rbp+0x6d]
   1400112cd:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   1400112d8:	fs fs fs fs sub al,0x20
   1400112de:	rex.WRB
   1400112df:	rex.WRB
   1400112e0:	rex.WRB
   1400112e1:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   1400112e6:	and    BYTE PTR [rcx+0x79],bh
   1400112e9:	jns    0x140011364
   1400112eb:	add    BYTE PTR [rax],al
   1400112ed:	add    BYTE PTR [rax],al
   1400112ef:	add    BYTE PTR [rbp+0x4d],cl
   1400112f2:	(bad)  
   1400112f3:	fs fs (bad) 
   1400112f6:	jns    0x140011371
   1400112f8:	add    BYTE PTR [rax],al
   1400112fa:	add    BYTE PTR [rax],al
   1400112fc:	push   rax
   1400112fd:	rex.WRB add BYTE PTR [r8],r8b
   140011300:	rex.B
   140011301:	rex.WRB add BYTE PTR [r8],r8b
   140011304:	add    BYTE PTR [rax],al
   140011306:	add    BYTE PTR [rax],al
   140011308:	rex.R
   140011309:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   14001130d:	(bad)  
   14001130e:	gs jb  0x140011311
   140011311:	add    BYTE PTR [rax],al
   140011313:	add    BYTE PTR [rax],al
   140011315:	add    BYTE PTR [rax],al
   140011317:	add    BYTE PTR [rsi+0x6f],cl
   14001131a:	jbe    0x140011381
   14001131c:	ins    DWORD PTR es:[rdi],dx
   14001131d:	(bad)  
   14001131e:	gs jb  0x140011321
   140011321:	add    BYTE PTR [rax],al
   140011323:	add    BYTE PTR [rax],al
   140011325:	add    BYTE PTR [rax],al
   140011327:	add    BYTE PTR [rdi+0x63],cl
   14001132a:	je     0x14001139b
   14001132c:	(bad)  
   14001132d:	gs jb  0x140011330
   140011330:	push   rbx
   140011331:	gs jo  0x1400113a8
   140011334:	gs ins DWORD PTR es:[rdi],dx
   140011336:	(bad)  
   140011337:	gs jb  0x14001133a
   14001133a:	add    BYTE PTR [rax],al
   14001133c:	rex.B jne 0x1400113a6
   14001133f:	jne    0x1400113b4
   140011341:	je     0x140011343
   140011343:	add    BYTE PTR [rdx+0x75],cl
   140011346:	ins    BYTE PTR es:[rdi],dx
   140011347:	jns    0x140011349
   140011349:	add    BYTE PTR [rax],al
   14001134b:	add    BYTE PTR [rdx+0x75],cl
   14001134e:	outs   dx,BYTE PTR ds:[rsi]
   14001134f:	add    BYTE PTR gs:[rax],al
   140011352:	add    BYTE PTR [rax],al
   140011354:	rex.B jo 0x1400113c9
   140011357:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14001135f:	movsxd ebp,DWORD PTR [rax+0x0]
   140011362:	add    BYTE PTR [rax],al
   140011364:	add    BYTE PTR [rax],al
   140011366:	add    BYTE PTR [rax],al
   140011368:	rex.RX
   140011369:	(bad)
   14001136f:	jns    0x140011371
   140011371:	add    BYTE PTR [rax],al
   140011373:	add    BYTE PTR [rax],al
   140011375:	add    BYTE PTR [rax],al
   140011377:	add    BYTE PTR [rdx+0x61],cl
   14001137a:	outs   dx,BYTE PTR ds:[rsi]
   14001137b:	jne    0x1400113de
   14001137d:	jb     0x1400113f8
   14001137f:	add    BYTE PTR [rbp+riz*2+0x63],al
   140011383:	add    BYTE PTR [rsi+0x6f],cl
   140011386:	jbe    0x140011388
   140011388:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14001138d:	gs jo  0x140011390
   140011390:	rex.B jne 0x1400113fa
   140011393:	add    BYTE PTR [rdx+0x75],cl
   140011396:	ins    BYTE PTR es:[rdi],dx
   140011397:	add    BYTE PTR [rdx+0x75],cl
   14001139a:	outs   dx,BYTE PTR ds:[rsi]
   14001139b:	add    BYTE PTR [rbp+0x61],cl
   14001139e:	jns    0x1400113a0
   1400113a0:	rex.B jo 0x140011415
   1400113a3:	add    BYTE PTR [rbp+0x61],cl
   1400113a6:	jb     0x1400113a8
   1400113a8:	rex.RX
   1400113a9:	gs (bad) 
   1400113ab:	add    BYTE PTR [rdx+0x61],cl
   1400113ae:	outs   dx,BYTE PTR ds:[rsi]
   1400113af:	add    BYTE PTR [rbx+0x61],dl
   1400113b2:	je     0x140011429
   1400113b4:	jb     0x14001141a
   1400113b6:	(bad)  
   1400113b7:	jns    0x1400113b9
   1400113b9:	add    BYTE PTR [rax],al
   1400113bb:	add    BYTE PTR [rsi+0x72],al
   1400113be:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   1400113c6:	add    BYTE PTR [rax],al
   1400113c8:	push   rsp
   1400113c9:	push   0x64737275
   1400113ce:	(bad)  
   1400113cf:	jns    0x1400113d1
   1400113d1:	add    BYTE PTR [rax],al
   1400113d3:	add    BYTE PTR [rax],al
   1400113d5:	add    BYTE PTR [rax],al
   1400113d7:	add    BYTE PTR [rdi+0x65],dl
   1400113da:	outs   dx,BYTE PTR fs:[rsi]
   1400113dc:	gs jae 0x140011443
   1400113df:	(bad)  
   1400113e0:	jns    0x1400113e2
   1400113e2:	add    BYTE PTR [rax],al
   1400113e4:	add    BYTE PTR [rax],al
   1400113e6:	add    BYTE PTR [rax],al
   1400113e8:	push   rsp
   1400113e9:	jne    0x140011450
   1400113eb:	jae    0x140011451
   1400113ed:	(bad)  
   1400113ee:	jns    0x1400113f0
   1400113f0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400113f2:	outs   dx,BYTE PTR ds:[rsi]
   1400113f3:	fs (bad) 
   1400113f5:	jns    0x1400113f7
   1400113f7:	add    BYTE PTR [rbx+0x75],dl
   1400113fa:	outs   dx,BYTE PTR ds:[rsi]
   1400113fb:	fs (bad) 
   1400113fd:	jns    0x1400113ff
   1400113ff:	add    BYTE PTR [rbx+0x61],dl
   140011402:	je     0x140011404
   140011404:	rex.RX jb 0x140011470
   140011407:	add    BYTE PTR [rax+rbp*2+0x75],dl
   14001140b:	add    BYTE PTR [rdi+0x65],dl
   14001140e:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   140011413:	add    BYTE PTR [rbp+0x6f],cl
   140011416:	outs   dx,BYTE PTR ds:[rsi]
   140011417:	add    BYTE PTR [rbx+0x75],dl
   14001141a:	outs   dx,BYTE PTR ds:[rsi]
   14001141b:	add    BYTE PTR [rax],al
   14001141d:	add    BYTE PTR [rax],al
   14001141f:	add    BYTE PTR [rcx],al
   140011421:	add    al,BYTE PTR [rbx]
   140011423:	add    al,0x5
   140011425:	(bad)  
   140011426:	(bad)  
   140011427:	or     BYTE PTR [rcx],cl
   140011429:	or     cl,BYTE PTR [rbx]
   14001142b:	or     al,0xd
   14001142d:	(bad)  
   14001142e:	movups xmm2,XMMWORD PTR [rcx]
   140011431:	adc    dl,BYTE PTR [rbx]
   140011433:	adc    al,0x15
   140011435:	(bad)  
   140011436:	(bad)  
   140011437:	sbb    BYTE PTR [rcx],bl
   140011439:	sbb    bl,BYTE PTR [rbx]
   14001143b:	sbb    al,0x1d
   14001143d:	(bad)  
   14001143e:	(bad)  
   14001143f:	and    BYTE PTR [rcx],ah
   140011441:	and    ah,BYTE PTR [rbx]
   140011443:	and    al,0x25
   140011445:	es (bad) 
   140011447:	sub    BYTE PTR [rcx],ch
   140011449:	sub    ch,BYTE PTR [rbx]
   14001144b:	sub    al,0x2d
   14001144d:	cs (bad) 
   14001144f:	xor    BYTE PTR [rcx],dh
   140011451:	xor    dh,BYTE PTR [rbx]
   140011453:	xor    al,0x35
   140011455:	ss (bad) 
   140011457:	cmp    BYTE PTR [rcx],bh
   140011459:	cmp    bh,BYTE PTR [rbx]
   14001145b:	cmp    al,0x3d
   14001145d:	ds (bad) 
   14001145f:	rex
   140011460:	rex.B
   140011461:	rex.X
   140011462:	rex.XB
   140011463:	rex.R
   140011464:	rex.RB
   140011465:	rex.RX
   140011466:	rex.RXB
   140011467:	rex.W
   140011468:	rex.WB
   140011469:	rex.WX
   14001146a:	rex.WXB
   14001146b:	rex.WR
   14001146c:	rex.WRB
   14001146d:	rex.WRX
   14001146e:	rex.WRXB push r8
   140011470:	push   rcx
   140011471:	push   rdx
   140011472:	push   rbx
   140011473:	push   rsp
   140011474:	push   rbp
   140011475:	push   rsi
   140011476:	push   rdi
   140011477:	pop    rax
   140011478:	pop    rcx
   140011479:	pop    rdx
   14001147a:	pop    rbx
   14001147b:	pop    rsp
   14001147c:	pop    rbp
   14001147d:	pop    rsi
   14001147e:	pop    rdi
   14001147f:	(bad)  
   140011480:	(bad)  
   140011481:	(bad)
   140011486:	addr32 push 0x6c6b6a69
   14001148c:	ins    DWORD PTR es:[rdi],dx
   14001148d:	outs   dx,BYTE PTR ds:[rsi]
   14001148e:	outs   dx,DWORD PTR ds:[rsi]
   14001148f:	jo     0x140011502
   140011491:	jb     0x140011506
   140011493:	je     0x14001150a
   140011495:	jbe    0x14001150e
   140011497:	js     0x140011512
   140011499:	jp     0x140011516
   14001149b:	jl     0x14001151a
   14001149d:	jle    0x14001151e
   14001149f:	add    BYTE PTR [rip+0x0],bh        # 0x1400114a5
   1400114a5:	add    BYTE PTR [rax],al
   1400114a7:	add    BYTE PTR [rdi+0x65],al
   1400114aa:	je     0x1400114fc
   1400114ac:	jb     0x14001151d
   1400114ae:	movsxd esp,DWORD PTR [rbp+0x73]
   1400114b1:	jae    0x14001150a
   1400114b3:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   1400114ba:	(bad)  
   1400114bb:	je     0x140011526
   1400114bd:	outs   dx,DWORD PTR ds:[rsi]
   1400114be:	outs   dx,BYTE PTR ds:[rsi]
   1400114bf:	add    BYTE PTR [rdi+0x65],al
   1400114c2:	je     0x140011519
   1400114c4:	jae    0x14001152b
   1400114c6:	jb     0x140011517
   1400114c8:	(bad)  
   1400114c9:	push   0x65
   1400114cb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   1400114cf:	outs   dx,WORD PTR ds:[rsi]
   1400114d1:	jb     0x140011540
   1400114d3:	(bad)  
   1400114d4:	je     0x14001153f
   1400114d6:	outs   dx,DWORD PTR ds:[rsi]
   1400114d7:	outs   dx,BYTE PTR ds:[rsi]
   1400114d8:	push   rdi
   1400114d9:	add    BYTE PTR [rax],al
   1400114db:	add    BYTE PTR [rax],al
   1400114dd:	add    BYTE PTR [rax],al
   1400114df:	add    BYTE PTR [rdi+0x65],al
   1400114e2:	je     0x140011530
   1400114e4:	(bad)  
   1400114e5:	jae    0x14001155b
   1400114e7:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400114ec:	gs push rax
   1400114ee:	outs   dx,DWORD PTR ds:[rsi]
   1400114ef:	jo     0x140011566
   1400114f1:	jo     0x1400114f3
   1400114f3:	add    BYTE PTR [rax],al
   1400114f5:	add    BYTE PTR [rax],al
   1400114f7:	add    BYTE PTR [rdi+0x65],al
   1400114fa:	je     0x14001153d
   1400114fc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140011500:	gs push rdi
   140011502:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   140011509:	gs jae 0x14001157f
   14001150c:	(bad)  
   14001150d:	rex.X outs dx,DWORD PTR gs:[esi]
   140011511:	js     0x14001156a
   140011513:	add    BYTE PTR [rax],al
   140011515:	add    BYTE PTR [rax],al
   140011517:	add    BYTE PTR [rbp+0x0],dl
   14001151a:	push   rbx
   14001151b:	add    BYTE PTR [rbp+0x0],al
   14001151e:	push   rdx
   14001151f:	add    BYTE PTR [rbx],dh
   140011521:	add    BYTE PTR [rdx],dh
   140011523:	add    BYTE PTR [rsi],ch
   140011525:	add    BYTE PTR [rax+rax*1+0x4c],al
   140011529:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001152d:	add    BYTE PTR [rax],al
   14001152f:	add    BYTE PTR [rax],ch
   140011531:	add    BYTE PTR [rsi+0x0],ch
   140011534:	jne    0x140011536
   140011536:	ins    BYTE PTR es:[rdi],dx
   140011537:	add    BYTE PTR [rax+rax*1+0x29],ch
   14001153b:	add    BYTE PTR [rax],al
   14001153d:	add    BYTE PTR [rax],al
   14001153f:	add    BYTE PTR [rax],ch
   140011541:	outs   dx,BYTE PTR ds:[rsi]
   140011542:	jne    0x1400115b0
   140011544:	ins    BYTE PTR es:[rdi],dx
   140011545:	sub    DWORD PTR [rax],eax
	...
   14001154f:	add    BYTE PTR [rsi],al
   140011551:	add    BYTE PTR [rax],al
   140011553:	(bad)  
   140011554:	add    BYTE PTR [rcx],al
   140011556:	add    BYTE PTR [rax],al
   140011558:	adc    BYTE PTR [rax],al
   14001155a:	add    eax,DWORD PTR [rsi]
   14001155c:	add    BYTE PTR [rsi],al
   14001155e:	add    dl,BYTE PTR [rax]
   140011560:	add    al,0x45
   140011562:	rex.RB
   140011563:	rex.RB add eax,0x5050505
   140011569:	xor    eax,0x500030
   14001156e:	add    BYTE PTR [rax],al
   140011570:	add    BYTE PTR [rax],ch
   140011572:	and    BYTE PTR [rax],bh
   140011574:	push   rax
   140011575:	pop    rax
   140011576:	(bad)  
   140011577:	or     BYTE PTR [rax],al
   140011579:	(bad)  
   14001157a:	xor    BYTE PTR [rax],dh
   14001157c:	push   rdi
   14001157d:	push   rax
   14001157e:	(bad)  
   14001157f:	add    BYTE PTR [rax],al
   140011581:	and    BYTE PTR [rax],ah
   140011583:	or     BYTE PTR [rax],al
   140011585:	add    BYTE PTR [rax],al
   140011587:	add    BYTE PTR [rax],cl
   140011589:	(bad)  
   14001158a:	push   0x60606060
   14001158f:	add    BYTE PTR [rax],al
   140011591:	js     0x140011603
   140011593:	js     0x14001160d
   140011595:	js     0x14001160f
   140011597:	or     BYTE PTR [rdi],al
   140011599:	or     BYTE PTR [rax],al
   14001159b:	add    BYTE PTR [rdi],al
   14001159d:	add    BYTE PTR [rax],cl
   14001159f:	or     BYTE PTR [rax],cl
   1400115a1:	add    BYTE PTR [rax],al
   1400115a3:	or     BYTE PTR [rax],al
   1400115a5:	or     BYTE PTR [rax],al
   1400115a7:	(bad)  
   1400115a8:	or     BYTE PTR [rax],al
   1400115aa:	add    BYTE PTR [rax],al
   1400115ac:	add    BYTE PTR [rax],al
   1400115ae:	add    BYTE PTR [rax],al
   1400115b0:	fs stos BYTE PTR es:[rdi],al
   1400115b2:	add    BYTE PTR [rax+0x1],al
   1400115b5:	add    BYTE PTR [rax],al
   1400115b7:	add    BYTE PTR [rax+0x31],cl
   1400115ba:	add    DWORD PTR [rax+0x1],eax
   1400115bd:	add    BYTE PTR [rax],al
   1400115bf:	add    BYTE PTR [rax],dl
   1400115c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400115c2:	add    BYTE PTR [rax+0x1],al
   1400115c5:	add    BYTE PTR [rax],al
   1400115c7:	add    ah,bl
   1400115c9:	mov    edx,0x14000
   1400115ce:	add    BYTE PTR [rax],al
   1400115d0:	(bad)
   1400115d5:	js     0x14001163a
   1400115d7:	gs jo  0x14001164e
   1400115da:	imul   ebp,DWORD PTR [rdi+0x6e],0xc8000000
   1400115e1:	xor    DWORD PTR [rcx],eax
   1400115e3:	rex add DWORD PTR [rax],eax
   1400115e6:	add    BYTE PTR [rax],al
   1400115e8:	sbb    al,0xbc
   1400115ea:	add    BYTE PTR [rax+0x1],al
   1400115ed:	add    BYTE PTR [rax],al
   1400115ef:	add    ah,bl
   1400115f1:	mov    edx,0x14000
   1400115f6:	add    BYTE PTR [rax],al
   1400115f8:	push   rbp
   1400115f9:	outs   dx,BYTE PTR ds:[rsi]
   1400115fa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400115fe:	outs   dx,BYTE PTR ds:[rsi]
   1400115ff:	and    BYTE PTR [rbp+0x78],ah
   140011602:	movsxd esp,DWORD PTR [rbp+0x70]
   140011605:	je     0x140011670
   140011607:	outs   dx,DWORD PTR ds:[rsi]
   140011608:	outs   dx,BYTE PTR ds:[rsi]
   140011609:	add    BYTE PTR [rax],al
   14001160b:	add    BYTE PTR [rax],al
   14001160d:	add    BYTE PTR [rax],al
   14001160f:	add    al,dh
   140011611:	xor    DWORD PTR [rcx],eax
   140011613:	rex add DWORD PTR [rax],eax
   140011616:	add    BYTE PTR [rax],al
   140011618:	mov    WORD PTR [rax+rax*1+0x140],?
   14001161f:	add    BYTE PTR [rbx+0x73],ah
   140011622:	ins    DWORD PTR es:[rdi],dx
   140011623:	loopne 0x140011626
	...
   140011635:	add    BYTE PTR [rax],al
   140011637:	add    BYTE PTR [rax+rax*1],al
   14001163a:	add    BYTE PTR [rax],al
   14001163c:	add    BYTE PTR [rax],al
   14001163e:	add    BYTE PTR [rax],al
   140011640:	and    BYTE PTR [rip+0x1993],al        # 0x140012fd9
	...
   14001175e:	add    BYTE PTR [rax],al
   140011760:	and    BYTE PTR [rax],al
   140011762:	and    BYTE PTR [rax],al
   140011764:	and    BYTE PTR [rax],al
   140011766:	and    BYTE PTR [rax],al
   140011768:	and    BYTE PTR [rax],al
   14001176a:	and    BYTE PTR [rax],al
   14001176c:	and    BYTE PTR [rax],al
   14001176e:	and    BYTE PTR [rax],al
   140011770:	and    BYTE PTR [rax],al
   140011772:	sub    BYTE PTR [rax],al
   140011774:	sub    BYTE PTR [rax],al
   140011776:	sub    BYTE PTR [rax],al
   140011778:	sub    BYTE PTR [rax],al
   14001177a:	sub    BYTE PTR [rax],al
   14001177c:	and    BYTE PTR [rax],al
   14001177e:	and    BYTE PTR [rax],al
   140011780:	and    BYTE PTR [rax],al
   140011782:	and    BYTE PTR [rax],al
   140011784:	and    BYTE PTR [rax],al
   140011786:	and    BYTE PTR [rax],al
   140011788:	and    BYTE PTR [rax],al
   14001178a:	and    BYTE PTR [rax],al
   14001178c:	and    BYTE PTR [rax],al
   14001178e:	and    BYTE PTR [rax],al
   140011790:	and    BYTE PTR [rax],al
   140011792:	and    BYTE PTR [rax],al
   140011794:	and    BYTE PTR [rax],al
   140011796:	and    BYTE PTR [rax],al
   140011798:	and    BYTE PTR [rax],al
   14001179a:	and    BYTE PTR [rax],al
   14001179c:	and    BYTE PTR [rax],al
   14001179e:	and    BYTE PTR [rax],al
   1400117a0:	rex.W add BYTE PTR [rax],dl
   1400117a3:	add    BYTE PTR [rax],dl
   1400117a5:	add    BYTE PTR [rax],dl
   1400117a7:	add    BYTE PTR [rax],dl
   1400117a9:	add    BYTE PTR [rax],dl
   1400117ab:	add    BYTE PTR [rax],dl
   1400117ad:	add    BYTE PTR [rax],dl
   1400117af:	add    BYTE PTR [rax],dl
   1400117b1:	add    BYTE PTR [rax],dl
   1400117b3:	add    BYTE PTR [rax],dl
   1400117b5:	add    BYTE PTR [rax],dl
   1400117b7:	add    BYTE PTR [rax],dl
   1400117b9:	add    BYTE PTR [rax],dl
   1400117bb:	add    BYTE PTR [rax],dl
   1400117bd:	add    BYTE PTR [rax],dl
   1400117bf:	add    BYTE PTR [rax+rax*1+0x840084],al
   1400117c6:	test   BYTE PTR [rax],al
   1400117c8:	test   BYTE PTR [rax],al
   1400117ca:	test   BYTE PTR [rax],al
   1400117cc:	test   BYTE PTR [rax],al
   1400117ce:	test   BYTE PTR [rax],al
   1400117d0:	test   BYTE PTR [rax],al
   1400117d2:	test   BYTE PTR [rax],al
   1400117d4:	adc    BYTE PTR [rax],al
   1400117d6:	adc    BYTE PTR [rax],al
   1400117d8:	adc    BYTE PTR [rax],al
   1400117da:	adc    BYTE PTR [rax],al
   1400117dc:	adc    BYTE PTR [rax],al
   1400117de:	adc    BYTE PTR [rax],al
   1400117e0:	adc    BYTE PTR [rax],al
   1400117e2:	add    DWORD PTR [rax],0x810081
   1400117e8:	add    DWORD PTR [rax],0x810081
   1400117ee:	add    DWORD PTR [rax],eax
   1400117f0:	add    DWORD PTR [rax],eax
   1400117f2:	add    DWORD PTR [rax],eax
   1400117f4:	add    DWORD PTR [rax],eax
   1400117f6:	add    DWORD PTR [rax],eax
   1400117f8:	add    DWORD PTR [rax],eax
   1400117fa:	add    DWORD PTR [rax],eax
   1400117fc:	add    DWORD PTR [rax],eax
   1400117fe:	add    DWORD PTR [rax],eax
   140011800:	add    DWORD PTR [rax],eax
   140011802:	add    DWORD PTR [rax],eax
   140011804:	add    DWORD PTR [rax],eax
   140011806:	add    DWORD PTR [rax],eax
   140011808:	add    DWORD PTR [rax],eax
   14001180a:	add    DWORD PTR [rax],eax
   14001180c:	add    DWORD PTR [rax],eax
   14001180e:	add    DWORD PTR [rax],eax
   140011810:	add    DWORD PTR [rax],eax
   140011812:	add    DWORD PTR [rax],eax
   140011814:	add    DWORD PTR [rax],eax
   140011816:	adc    BYTE PTR [rax],al
   140011818:	adc    BYTE PTR [rax],al
   14001181a:	adc    BYTE PTR [rax],al
   14001181c:	adc    BYTE PTR [rax],al
   14001181e:	adc    BYTE PTR [rax],al
   140011820:	adc    BYTE PTR [rax],al
   140011822:	(bad)  
   140011823:	add    BYTE PTR [rdx-0x7dff7e00],al
   140011829:	add    BYTE PTR [rdx+0x2008200],al
   14001182f:	add    BYTE PTR [rdx],al
   140011831:	add    BYTE PTR [rdx],al
   140011833:	add    BYTE PTR [rdx],al
   140011835:	add    BYTE PTR [rdx],al
   140011837:	add    BYTE PTR [rdx],al
   140011839:	add    BYTE PTR [rdx],al
   14001183b:	add    BYTE PTR [rdx],al
   14001183d:	add    BYTE PTR [rdx],al
   14001183f:	add    BYTE PTR [rdx],al
   140011841:	add    BYTE PTR [rdx],al
   140011843:	add    BYTE PTR [rdx],al
   140011845:	add    BYTE PTR [rdx],al
   140011847:	add    BYTE PTR [rdx],al
   140011849:	add    BYTE PTR [rdx],al
   14001184b:	add    BYTE PTR [rdx],al
   14001184d:	add    BYTE PTR [rdx],al
   14001184f:	add    BYTE PTR [rdx],al
   140011851:	add    BYTE PTR [rdx],al
   140011853:	add    BYTE PTR [rdx],al
   140011855:	add    BYTE PTR [rax],dl
   140011857:	add    BYTE PTR [rax],dl
   140011859:	add    BYTE PTR [rax],dl
   14001185b:	add    BYTE PTR [rax],dl
   14001185d:	add    BYTE PTR [rax],ah
	...
   14001195f:	add    BYTE PTR [rax],al
   140011961:	add    BYTE PTR [rax],ah
   140011963:	add    BYTE PTR [rax],ah
   140011965:	add    BYTE PTR [rax],ah
   140011967:	add    BYTE PTR [rax],ah
   140011969:	add    BYTE PTR [rax],ah
   14001196b:	add    BYTE PTR [rax],ah
   14001196d:	add    BYTE PTR [rax],ah
   14001196f:	add    BYTE PTR [rax],ah
   140011971:	add    BYTE PTR [rax],ah
   140011973:	add    BYTE PTR [rax+0x0],ch
   140011976:	sub    BYTE PTR [rax],al
   140011978:	sub    BYTE PTR [rax],al
   14001197a:	sub    BYTE PTR [rax],al
   14001197c:	sub    BYTE PTR [rax],al
   14001197e:	and    BYTE PTR [rax],al
   140011980:	and    BYTE PTR [rax],al
   140011982:	and    BYTE PTR [rax],al
   140011984:	and    BYTE PTR [rax],al
   140011986:	and    BYTE PTR [rax],al
   140011988:	and    BYTE PTR [rax],al
   14001198a:	and    BYTE PTR [rax],al
   14001198c:	and    BYTE PTR [rax],al
   14001198e:	and    BYTE PTR [rax],al
   140011990:	and    BYTE PTR [rax],al
   140011992:	and    BYTE PTR [rax],al
   140011994:	and    BYTE PTR [rax],al
   140011996:	and    BYTE PTR [rax],al
   140011998:	and    BYTE PTR [rax],al
   14001199a:	and    BYTE PTR [rax],al
   14001199c:	and    BYTE PTR [rax],al
   14001199e:	and    BYTE PTR [rax],al
   1400119a0:	and    BYTE PTR [rax],al
   1400119a2:	rex.W add BYTE PTR [rax],dl
   1400119a5:	add    BYTE PTR [rax],dl
   1400119a7:	add    BYTE PTR [rax],dl
   1400119a9:	add    BYTE PTR [rax],dl
   1400119ab:	add    BYTE PTR [rax],dl
   1400119ad:	add    BYTE PTR [rax],dl
   1400119af:	add    BYTE PTR [rax],dl
   1400119b1:	add    BYTE PTR [rax],dl
   1400119b3:	add    BYTE PTR [rax],dl
   1400119b5:	add    BYTE PTR [rax],dl
   1400119b7:	add    BYTE PTR [rax],dl
   1400119b9:	add    BYTE PTR [rax],dl
   1400119bb:	add    BYTE PTR [rax],dl
   1400119bd:	add    BYTE PTR [rax],dl
   1400119bf:	add    BYTE PTR [rax],dl
   1400119c1:	add    BYTE PTR [rax+rax*1+0x840084],al
   1400119c8:	test   BYTE PTR [rax],al
   1400119ca:	test   BYTE PTR [rax],al
   1400119cc:	test   BYTE PTR [rax],al
   1400119ce:	test   BYTE PTR [rax],al
   1400119d0:	test   BYTE PTR [rax],al
   1400119d2:	test   BYTE PTR [rax],al
   1400119d4:	test   BYTE PTR [rax],al
   1400119d6:	adc    BYTE PTR [rax],al
   1400119d8:	adc    BYTE PTR [rax],al
   1400119da:	adc    BYTE PTR [rax],al
   1400119dc:	adc    BYTE PTR [rax],al
   1400119de:	adc    BYTE PTR [rax],al
   1400119e0:	adc    BYTE PTR [rax],al
   1400119e2:	adc    BYTE PTR [rax],al
   1400119e4:	add    DWORD PTR [rcx],0x1810181
   1400119ea:	add    DWORD PTR [rcx],0x1810181
   1400119f0:	add    DWORD PTR [rcx],eax
   1400119f2:	add    DWORD PTR [rcx],eax
   1400119f4:	add    DWORD PTR [rcx],eax
   1400119f6:	add    DWORD PTR [rcx],eax
   1400119f8:	add    DWORD PTR [rcx],eax
   1400119fa:	add    DWORD PTR [rcx],eax
   1400119fc:	add    DWORD PTR [rcx],eax
   1400119fe:	add    DWORD PTR [rcx],eax
   140011a00:	add    DWORD PTR [rcx],eax
   140011a02:	add    DWORD PTR [rcx],eax
   140011a04:	add    DWORD PTR [rcx],eax
   140011a06:	add    DWORD PTR [rcx],eax
   140011a08:	add    DWORD PTR [rcx],eax
   140011a0a:	add    DWORD PTR [rcx],eax
   140011a0c:	add    DWORD PTR [rcx],eax
   140011a0e:	add    DWORD PTR [rcx],eax
   140011a10:	add    DWORD PTR [rcx],eax
   140011a12:	add    DWORD PTR [rcx],eax
   140011a14:	add    DWORD PTR [rcx],eax
   140011a16:	add    DWORD PTR [rcx],eax
   140011a18:	adc    BYTE PTR [rax],al
   140011a1a:	adc    BYTE PTR [rax],al
   140011a1c:	adc    BYTE PTR [rax],al
   140011a1e:	adc    BYTE PTR [rax],al
   140011a20:	adc    BYTE PTR [rax],al
   140011a22:	adc    BYTE PTR [rax],al
   140011a24:	(bad)  
   140011a25:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   140011a2b:	add    DWORD PTR [rdx+0x2018201],eax
   140011a31:	add    DWORD PTR [rdx],eax
   140011a33:	add    DWORD PTR [rdx],eax
   140011a35:	add    DWORD PTR [rdx],eax
   140011a37:	add    DWORD PTR [rdx],eax
   140011a39:	add    DWORD PTR [rdx],eax
   140011a3b:	add    DWORD PTR [rdx],eax
   140011a3d:	add    DWORD PTR [rdx],eax
   140011a3f:	add    DWORD PTR [rdx],eax
   140011a41:	add    DWORD PTR [rdx],eax
   140011a43:	add    DWORD PTR [rdx],eax
   140011a45:	add    DWORD PTR [rdx],eax
   140011a47:	add    DWORD PTR [rdx],eax
   140011a49:	add    DWORD PTR [rdx],eax
   140011a4b:	add    DWORD PTR [rdx],eax
   140011a4d:	add    DWORD PTR [rdx],eax
   140011a4f:	add    DWORD PTR [rdx],eax
   140011a51:	add    DWORD PTR [rdx],eax
   140011a53:	add    DWORD PTR [rdx],eax
   140011a55:	add    DWORD PTR [rdx],eax
   140011a57:	add    DWORD PTR [rax],edx
   140011a59:	add    BYTE PTR [rax],dl
   140011a5b:	add    BYTE PTR [rax],dl
   140011a5d:	add    BYTE PTR [rax],dl
   140011a5f:	add    BYTE PTR [rax],ah
   140011a61:	add    BYTE PTR [rax],ah
   140011a63:	add    BYTE PTR [rax],ah
   140011a65:	add    BYTE PTR [rax],ah
   140011a67:	add    BYTE PTR [rax],ah
   140011a69:	add    BYTE PTR [rax],ah
   140011a6b:	add    BYTE PTR [rax],ah
   140011a6d:	add    BYTE PTR [rax],ah
   140011a6f:	add    BYTE PTR [rax],ah
   140011a71:	add    BYTE PTR [rax],ah
   140011a73:	add    BYTE PTR [rax],ah
   140011a75:	add    BYTE PTR [rax],ah
   140011a77:	add    BYTE PTR [rax],ah
   140011a79:	add    BYTE PTR [rax],ah
   140011a7b:	add    BYTE PTR [rax],ah
   140011a7d:	add    BYTE PTR [rax],ah
   140011a7f:	add    BYTE PTR [rax],ah
   140011a81:	add    BYTE PTR [rax],ah
   140011a83:	add    BYTE PTR [rax],ah
   140011a85:	add    BYTE PTR [rax],ah
   140011a87:	add    BYTE PTR [rax],ah
   140011a89:	add    BYTE PTR [rax],ah
   140011a8b:	add    BYTE PTR [rax],ah
   140011a8d:	add    BYTE PTR [rax],ah
   140011a8f:	add    BYTE PTR [rax],ah
   140011a91:	add    BYTE PTR [rax],ah
   140011a93:	add    BYTE PTR [rax],ah
   140011a95:	add    BYTE PTR [rax],ah
   140011a97:	add    BYTE PTR [rax],ah
   140011a99:	add    BYTE PTR [rax],ah
   140011a9b:	add    BYTE PTR [rax],ah
   140011a9d:	add    BYTE PTR [rax],ah
   140011a9f:	add    BYTE PTR [rax],ah
   140011aa1:	add    BYTE PTR [rax+0x0],cl
   140011aa4:	adc    BYTE PTR [rax],al
   140011aa6:	adc    BYTE PTR [rax],al
   140011aa8:	adc    BYTE PTR [rax],al
   140011aaa:	adc    BYTE PTR [rax],al
   140011aac:	adc    BYTE PTR [rax],al
   140011aae:	adc    BYTE PTR [rax],al
   140011ab0:	adc    BYTE PTR [rax],al
   140011ab2:	adc    BYTE PTR [rax],al
   140011ab4:	adc    BYTE PTR [rax],al
   140011ab6:	adc    BYTE PTR [rax],al
   140011ab8:	adc    BYTE PTR [rax],al
   140011aba:	adc    BYTE PTR [rax],al
   140011abc:	adc    BYTE PTR [rax],al
   140011abe:	adc    BYTE PTR [rax],al
   140011ac0:	adc    BYTE PTR [rax],al
   140011ac2:	adc    BYTE PTR [rax],al
   140011ac4:	adc    BYTE PTR [rax],al
   140011ac6:	adc    al,0x0
   140011ac8:	adc    al,0x0
   140011aca:	adc    BYTE PTR [rax],al
   140011acc:	adc    BYTE PTR [rax],al
   140011ace:	adc    BYTE PTR [rax],al
   140011ad0:	adc    BYTE PTR [rax],al
   140011ad2:	adc    BYTE PTR [rax],al
   140011ad4:	adc    al,0x0
   140011ad6:	adc    BYTE PTR [rax],al
   140011ad8:	adc    BYTE PTR [rax],al
   140011ada:	adc    BYTE PTR [rax],al
   140011adc:	adc    BYTE PTR [rax],al
   140011ade:	adc    BYTE PTR [rax],al
   140011ae0:	adc    BYTE PTR [rax],al
   140011ae2:	add    DWORD PTR [rcx],eax
   140011ae4:	add    DWORD PTR [rcx],eax
   140011ae6:	add    DWORD PTR [rcx],eax
   140011ae8:	add    DWORD PTR [rcx],eax
   140011aea:	add    DWORD PTR [rcx],eax
   140011aec:	add    DWORD PTR [rcx],eax
   140011aee:	add    DWORD PTR [rcx],eax
   140011af0:	add    DWORD PTR [rcx],eax
   140011af2:	add    DWORD PTR [rcx],eax
   140011af4:	add    DWORD PTR [rcx],eax
   140011af6:	add    DWORD PTR [rcx],eax
   140011af8:	add    DWORD PTR [rcx],eax
   140011afa:	add    DWORD PTR [rcx],eax
   140011afc:	add    DWORD PTR [rcx],eax
   140011afe:	add    DWORD PTR [rcx],eax
   140011b00:	add    DWORD PTR [rcx],eax
   140011b02:	add    DWORD PTR [rcx],eax
   140011b04:	add    DWORD PTR [rcx],eax
   140011b06:	add    DWORD PTR [rcx],eax
   140011b08:	add    DWORD PTR [rcx],eax
   140011b0a:	add    DWORD PTR [rcx],eax
   140011b0c:	add    DWORD PTR [rcx],eax
   140011b0e:	add    DWORD PTR [rcx],eax
   140011b10:	adc    BYTE PTR [rax],al
   140011b12:	add    DWORD PTR [rcx],eax
   140011b14:	add    DWORD PTR [rcx],eax
   140011b16:	add    DWORD PTR [rcx],eax
   140011b18:	add    DWORD PTR [rcx],eax
   140011b1a:	add    DWORD PTR [rcx],eax
   140011b1c:	add    DWORD PTR [rcx],eax
   140011b1e:	add    DWORD PTR [rcx],eax
   140011b20:	add    al,BYTE PTR [rcx]
   140011b22:	add    al,BYTE PTR [rcx]
   140011b24:	add    al,BYTE PTR [rcx]
   140011b26:	add    al,BYTE PTR [rcx]
   140011b28:	add    al,BYTE PTR [rcx]
   140011b2a:	add    al,BYTE PTR [rcx]
   140011b2c:	add    al,BYTE PTR [rcx]
   140011b2e:	add    al,BYTE PTR [rcx]
   140011b30:	add    al,BYTE PTR [rcx]
   140011b32:	add    al,BYTE PTR [rcx]
   140011b34:	add    al,BYTE PTR [rcx]
   140011b36:	add    al,BYTE PTR [rcx]
   140011b38:	add    al,BYTE PTR [rcx]
   140011b3a:	add    al,BYTE PTR [rcx]
   140011b3c:	add    al,BYTE PTR [rcx]
   140011b3e:	add    al,BYTE PTR [rcx]
   140011b40:	add    al,BYTE PTR [rcx]
   140011b42:	add    al,BYTE PTR [rcx]
   140011b44:	add    al,BYTE PTR [rcx]
   140011b46:	add    al,BYTE PTR [rcx]
   140011b48:	add    al,BYTE PTR [rcx]
   140011b4a:	add    al,BYTE PTR [rcx]
   140011b4c:	add    al,BYTE PTR [rcx]
   140011b4e:	add    al,BYTE PTR [rcx]
   140011b50:	adc    BYTE PTR [rax],al
   140011b52:	add    al,BYTE PTR [rcx]
   140011b54:	add    al,BYTE PTR [rcx]
   140011b56:	add    al,BYTE PTR [rcx]
   140011b58:	add    al,BYTE PTR [rcx]
   140011b5a:	add    al,BYTE PTR [rcx]
   140011b5c:	add    al,BYTE PTR [rcx]
   140011b5e:	add    al,BYTE PTR [rcx]
   140011b60:	add    al,BYTE PTR [rcx]
   140011b62:	add    DWORD PTR [rcx],eax
	...
   140011b70:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140011b77:	xchg   DWORD PTR [rax-0x73747577],ecx
   140011b7d:	lea    ecx,[rsi-0x6d6e6f71]
   140011b83:	xchg   ebx,eax
   140011b84:	xchg   esp,eax
   140011b85:	xchg   ebp,eax
   140011b86:	xchg   esi,eax
   140011b87:	xchg   edi,eax
   140011b88:	cwde   
   140011b89:	cdq    
   140011b8a:	(bad)  
   140011b8b:	fwait
   140011b8c:	pushf  
   140011b8d:	popf   
   140011b8e:	sahf   
   140011b8f:	lahf   
   140011b90:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140011b99:	test   eax,0xadacabaa
   140011b9e:	scas   al,BYTE PTR es:[rdi]
   140011b9f:	scas   eax,DWORD PTR es:[rdi]
   140011ba0:	mov    al,0xb1
   140011ba2:	mov    dl,0xb3
   140011ba4:	mov    ah,0xb5
   140011ba6:	mov    dh,0xb7
   140011ba8:	mov    eax,0xbcbbbab9
   140011bad:	mov    ebp,0xc1c0bfbe
   140011bb2:	ret    0xc4c3
   140011bb5:	(bad)
   140011bb8:	enter  0xcac9,0xcb
   140011bbc:	int3   
   140011bbd:	int    0xce
   140011bbf:	iret   
   140011bc0:	rcl    cl,1
   140011bc2:	rcl    bl,cl
   140011bc4:	(bad)  
   140011bc5:	(bad)  
   140011bc6:	(bad)  
   140011bc7:	xlat   BYTE PTR ds:[rbx]
   140011bc8:	fcomp  st(1)
   140011bca:	fcmovu st,st(3)
   140011bcc:	(bad)  
   140011bce:	(bad)  
   140011bd0:	loopne 0x140011bb3
   140011bd2:	loop   0x140011bb7
   140011bd4:	in     al,0xe5
   140011bd6:	out    0xe7,al
   140011bd8:	call   0x12ced06c6
   140011bdd:	in     eax,dx
   140011bde:	out    dx,al
   140011bdf:	out    dx,eax
   140011be0:	lock icebp 
   140011be2:	repnz repz hlt 
   140011be5:	cmc    
   140011be6:	div    bh
   140011be8:	clc    
   140011be9:	stc    
   140011bea:	cli    
   140011beb:	sti    
   140011bec:	cld    
   140011bed:	std    
   140011bee:	(bad)  
   140011bef:	inc    DWORD PTR [rax]
   140011bf1:	add    DWORD PTR [rdx],eax
   140011bf3:	add    eax,DWORD PTR [rax*1+0x9080706]
   140011bfa:	or     cl,BYTE PTR [rbx]
   140011bfc:	or     al,0xd
   140011bfe:	(bad)  
   140011bff:	movups xmm2,XMMWORD PTR [rcx]
   140011c02:	adc    dl,BYTE PTR [rbx]
   140011c04:	adc    al,0x15
   140011c06:	(bad)  
   140011c07:	(bad)  
   140011c08:	sbb    BYTE PTR [rcx],bl
   140011c0a:	sbb    bl,BYTE PTR [rbx]
   140011c0c:	sbb    al,0x1d
   140011c0e:	(bad)  
   140011c0f:	(bad)  
   140011c10:	and    BYTE PTR [rcx],ah
   140011c12:	and    ah,BYTE PTR [rbx]
   140011c14:	and    al,0x25
   140011c16:	es (bad) 
   140011c18:	sub    BYTE PTR [rcx],ch
   140011c1a:	sub    ch,BYTE PTR [rbx]
   140011c1c:	sub    al,0x2d
   140011c1e:	cs (bad) 
   140011c20:	xor    BYTE PTR [rcx],dh
   140011c22:	xor    dh,BYTE PTR [rbx]
   140011c24:	xor    al,0x35
   140011c26:	ss (bad) 
   140011c28:	cmp    BYTE PTR [rcx],bh
   140011c2a:	cmp    bh,BYTE PTR [rbx]
   140011c2c:	cmp    al,0x3d
   140011c2e:	ds (bad) 
   140011c30:	rex (bad) 
   140011c32:	(bad)
   140011c37:	addr32 push 0x6c6b6a69
   140011c3d:	ins    DWORD PTR es:[rdi],dx
   140011c3e:	outs   dx,BYTE PTR ds:[rsi]
   140011c3f:	outs   dx,DWORD PTR ds:[rsi]
   140011c40:	jo     0x140011cb3
   140011c42:	jb     0x140011cb7
   140011c44:	je     0x140011cbb
   140011c46:	jbe    0x140011cbf
   140011c48:	js     0x140011cc3
   140011c4a:	jp     0x140011ca7
   140011c4c:	pop    rsp
   140011c4d:	pop    rbp
   140011c4e:	pop    rsi
   140011c4f:	pop    rdi
   140011c50:	(bad)  
   140011c51:	(bad)  
   140011c52:	(bad)
   140011c57:	addr32 push 0x6c6b6a69
   140011c5d:	ins    DWORD PTR es:[rdi],dx
   140011c5e:	outs   dx,BYTE PTR ds:[rsi]
   140011c5f:	outs   dx,DWORD PTR ds:[rsi]
   140011c60:	jo     0x140011cd3
   140011c62:	jb     0x140011cd7
   140011c64:	je     0x140011cdb
   140011c66:	jbe    0x140011cdf
   140011c68:	js     0x140011ce3
   140011c6a:	jp     0x140011ce7
   140011c6c:	jl     0x140011ceb
   140011c6e:	jle    0x140011cef
   140011c70:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140011c77:	xchg   DWORD PTR [rax-0x73747577],ecx
   140011c7d:	lea    ecx,[rsi-0x6d6e6f71]
   140011c83:	xchg   ebx,eax
   140011c84:	xchg   esp,eax
   140011c85:	xchg   ebp,eax
   140011c86:	xchg   esi,eax
   140011c87:	xchg   edi,eax
   140011c88:	cwde   
   140011c89:	cdq    
   140011c8a:	(bad)  
   140011c8b:	fwait
   140011c8c:	pushf  
   140011c8d:	popf   
   140011c8e:	sahf   
   140011c8f:	lahf   
   140011c90:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140011c99:	test   eax,0xadacabaa
   140011c9e:	scas   al,BYTE PTR es:[rdi]
   140011c9f:	scas   eax,DWORD PTR es:[rdi]
   140011ca0:	mov    al,0xb1
   140011ca2:	mov    dl,0xb3
   140011ca4:	mov    ah,0xb5
   140011ca6:	mov    dh,0xb7
   140011ca8:	mov    eax,0xbcbbbab9
   140011cad:	mov    ebp,0xc1c0bfbe
   140011cb2:	ret    0xc4c3
   140011cb5:	(bad)
   140011cb8:	enter  0xcac9,0xcb
   140011cbc:	int3   
   140011cbd:	int    0xce
   140011cbf:	iret   
   140011cc0:	rcl    cl,1
   140011cc2:	rcl    bl,cl
   140011cc4:	(bad)  
   140011cc5:	(bad)  
   140011cc6:	(bad)  
   140011cc7:	xlat   BYTE PTR ds:[rbx]
   140011cc8:	fcomp  st(1)
   140011cca:	fcmovu st,st(3)
   140011ccc:	(bad)  
   140011cce:	(bad)  
   140011cd0:	loopne 0x140011cb3
   140011cd2:	loop   0x140011cb7
   140011cd4:	in     al,0xe5
   140011cd6:	out    0xe7,al
   140011cd8:	call   0x12ced07c6
   140011cdd:	in     eax,dx
   140011cde:	out    dx,al
   140011cdf:	out    dx,eax
   140011ce0:	lock icebp 
   140011ce2:	repnz repz hlt 
   140011ce5:	cmc    
   140011ce6:	div    bh
   140011ce8:	clc    
   140011ce9:	stc    
   140011cea:	cli    
   140011ceb:	sti    
   140011cec:	cld    
   140011ced:	std    
   140011cee:	(bad)  
   140011cef:	inc    DWORD PTR [rax-0x7b7c7d7f]
   140011cf5:	test   DWORD PTR [rsi-0x75767779],eax
   140011cfb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140011d02:	xchg   edx,eax
   140011d03:	xchg   ebx,eax
   140011d04:	xchg   esp,eax
   140011d05:	xchg   ebp,eax
   140011d06:	xchg   esi,eax
   140011d07:	xchg   edi,eax
   140011d08:	cwde   
   140011d09:	cdq    
   140011d0a:	(bad)  
   140011d0b:	fwait
   140011d0c:	pushf  
   140011d0d:	popf   
   140011d0e:	sahf   
   140011d0f:	lahf   
   140011d10:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140011d19:	test   eax,0xadacabaa
   140011d1e:	scas   al,BYTE PTR es:[rdi]
   140011d1f:	scas   eax,DWORD PTR es:[rdi]
   140011d20:	mov    al,0xb1
   140011d22:	mov    dl,0xb3
   140011d24:	mov    ah,0xb5
   140011d26:	mov    dh,0xb7
   140011d28:	mov    eax,0xbcbbbab9
   140011d2d:	mov    ebp,0xc1c0bfbe
   140011d32:	ret    0xc4c3
   140011d35:	(bad)
   140011d38:	enter  0xcac9,0xcb
   140011d3c:	int3   
   140011d3d:	int    0xce
   140011d3f:	iret   
   140011d40:	rcl    cl,1
   140011d42:	rcl    bl,cl
   140011d44:	(bad)  
   140011d45:	(bad)  
   140011d46:	(bad)  
   140011d47:	xlat   BYTE PTR ds:[rbx]
   140011d48:	fcomp  st(1)
   140011d4a:	fcmovu st,st(3)
   140011d4c:	(bad)  
   140011d4e:	(bad)  
   140011d50:	loopne 0x140011d33
   140011d52:	loop   0x140011d37
   140011d54:	in     al,0xe5
   140011d56:	out    0xe7,al
   140011d58:	call   0x12ced0846
   140011d5d:	in     eax,dx
   140011d5e:	out    dx,al
   140011d5f:	out    dx,eax
   140011d60:	lock icebp 
   140011d62:	repnz repz hlt 
   140011d65:	cmc    
   140011d66:	div    bh
   140011d68:	clc    
   140011d69:	stc    
   140011d6a:	cli    
   140011d6b:	sti    
   140011d6c:	cld    
   140011d6d:	std    
   140011d6e:	(bad)  
   140011d6f:	inc    DWORD PTR [rax]
   140011d71:	add    DWORD PTR [rdx],eax
   140011d73:	add    eax,DWORD PTR [rax*1+0x9080706]
   140011d7a:	or     cl,BYTE PTR [rbx]
   140011d7c:	or     al,0xd
   140011d7e:	(bad)  
   140011d7f:	movups xmm2,XMMWORD PTR [rcx]
   140011d82:	adc    dl,BYTE PTR [rbx]
   140011d84:	adc    al,0x15
   140011d86:	(bad)  
   140011d87:	(bad)  
   140011d88:	sbb    BYTE PTR [rcx],bl
   140011d8a:	sbb    bl,BYTE PTR [rbx]
   140011d8c:	sbb    al,0x1d
   140011d8e:	(bad)  
   140011d8f:	(bad)  
   140011d90:	and    BYTE PTR [rcx],ah
   140011d92:	and    ah,BYTE PTR [rbx]
   140011d94:	and    al,0x25
   140011d96:	es (bad) 
   140011d98:	sub    BYTE PTR [rcx],ch
   140011d9a:	sub    ch,BYTE PTR [rbx]
   140011d9c:	sub    al,0x2d
   140011d9e:	cs (bad) 
   140011da0:	xor    BYTE PTR [rcx],dh
   140011da2:	xor    dh,BYTE PTR [rbx]
   140011da4:	xor    al,0x35
   140011da6:	ss (bad) 
   140011da8:	cmp    BYTE PTR [rcx],bh
   140011daa:	cmp    bh,BYTE PTR [rbx]
   140011dac:	cmp    al,0x3d
   140011dae:	ds (bad) 
   140011db0:	rex
   140011db1:	rex.B
   140011db2:	rex.X
   140011db3:	rex.XB
   140011db4:	rex.R
   140011db5:	rex.RB
   140011db6:	rex.RX
   140011db7:	rex.RXB
   140011db8:	rex.W
   140011db9:	rex.WB
   140011dba:	rex.WX
   140011dbb:	rex.WXB
   140011dbc:	rex.WR
   140011dbd:	rex.WRB
   140011dbe:	rex.WRX
   140011dbf:	rex.WRXB push r8
   140011dc1:	push   rcx
   140011dc2:	push   rdx
   140011dc3:	push   rbx
   140011dc4:	push   rsp
   140011dc5:	push   rbp
   140011dc6:	push   rsi
   140011dc7:	push   rdi
   140011dc8:	pop    rax
   140011dc9:	pop    rcx
   140011dca:	pop    rdx
   140011dcb:	pop    rbx
   140011dcc:	pop    rsp
   140011dcd:	pop    rbp
   140011dce:	pop    rsi
   140011dcf:	pop    rdi
   140011dd0:	(bad)  
   140011dd1:	rex.B
   140011dd2:	rex.X
   140011dd3:	rex.XB
   140011dd4:	rex.R
   140011dd5:	rex.RB
   140011dd6:	rex.RX
   140011dd7:	rex.RXB
   140011dd8:	rex.W
   140011dd9:	rex.WB
   140011dda:	rex.WX
   140011ddb:	rex.WXB
   140011ddc:	rex.WR
   140011ddd:	rex.WRB
   140011dde:	rex.WRX
   140011ddf:	rex.WRXB push r8
   140011de1:	push   rcx
   140011de2:	push   rdx
   140011de3:	push   rbx
   140011de4:	push   rsp
   140011de5:	push   rbp
   140011de6:	push   rsi
   140011de7:	push   rdi
   140011de8:	pop    rax
   140011de9:	pop    rcx
   140011dea:	pop    rdx
   140011deb:	jnp    0x140011e69
   140011ded:	jge    0x140011e6d
   140011def:	jg     0x140011d71
   140011df1:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   140011dfb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140011e02:	xchg   edx,eax
   140011e03:	xchg   ebx,eax
   140011e04:	xchg   esp,eax
   140011e05:	xchg   ebp,eax
   140011e06:	xchg   esi,eax
   140011e07:	xchg   edi,eax
   140011e08:	cwde   
   140011e09:	cdq    
   140011e0a:	(bad)  
   140011e0b:	fwait
   140011e0c:	pushf  
   140011e0d:	popf   
   140011e0e:	sahf   
   140011e0f:	lahf   
   140011e10:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140011e19:	test   eax,0xadacabaa
   140011e1e:	scas   al,BYTE PTR es:[rdi]
   140011e1f:	scas   eax,DWORD PTR es:[rdi]
   140011e20:	mov    al,0xb1
   140011e22:	mov    dl,0xb3
   140011e24:	mov    ah,0xb5
   140011e26:	mov    dh,0xb7
   140011e28:	mov    eax,0xbcbbbab9
   140011e2d:	mov    ebp,0xc1c0bfbe
   140011e32:	ret    0xc4c3
   140011e35:	(bad)
   140011e38:	enter  0xcac9,0xcb
   140011e3c:	int3   
   140011e3d:	int    0xce
   140011e3f:	iret   
   140011e40:	rcl    cl,1
   140011e42:	rcl    bl,cl
   140011e44:	(bad)  
   140011e45:	(bad)  
   140011e46:	(bad)  
   140011e47:	xlat   BYTE PTR ds:[rbx]
   140011e48:	fcomp  st(1)
   140011e4a:	fcmovu st,st(3)
   140011e4c:	(bad)  
   140011e4e:	(bad)  
   140011e50:	loopne 0x140011e33
   140011e52:	loop   0x140011e37
   140011e54:	in     al,0xe5
   140011e56:	out    0xe7,al
   140011e58:	call   0x12ced0946
   140011e5d:	in     eax,dx
   140011e5e:	out    dx,al
   140011e5f:	out    dx,eax
   140011e60:	lock icebp 
   140011e62:	repnz repz hlt 
   140011e65:	cmc    
   140011e66:	div    bh
   140011e68:	clc    
   140011e69:	stc    
   140011e6a:	cli    
   140011e6b:	sti    
   140011e6c:	cld    
   140011e6d:	std    
   140011e6e:	(bad)  
   140011e6f:	inc    DWORD PTR [rbx+0x0]
   140011e72:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140011e76:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140011e7a:	push   rsp
   140011e7b:	add    BYTE PTR [rax+rax*1],ah
   140011e7e:	add    BYTE PTR [rax],al
   140011e80:	(bad)  
   140011e81:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140011e88:	add    BYTE PTR [rax],dl
   140011e8a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   140011e90:	adc    al,0x5
   140011e92:	add    eax,0x85454545
   140011e97:	test   DWORD PTR [rbp+0x30000005],eax
   140011e9d:	xor    BYTE PTR [rax+0x888050],al
   140011ea3:	or     BYTE PTR [rax],al
   140011ea5:	sub    BYTE PTR [rdi],ah
   140011ea7:	cmp    BYTE PTR [rax+0x57],dl
   140011eaa:	add    BYTE PTR [rax],0x7
   140011ead:	add    BYTE PTR [rdi],dh
   140011eaf:	xor    BYTE PTR [rax],dh
   140011eb1:	push   rax
   140011eb2:	push   rax
   140011eb3:	mov    BYTE PTR [rax],al
   140011eb5:	add    BYTE PTR [rax],al
   140011eb7:	and    BYTE PTR [rax],ch
   140011eb9:	or     BYTE PTR [rax+0x8080],0x0
   140011ec0:	(bad)  
   140011ec1:	push   0x68686860
   140011ec6:	or     BYTE PTR [rax],cl
   140011ec8:	(bad)  
   140011ec9:	js     0x140011f3b
   140011ecb:	jo     0x140011f44
   140011ecd:	jo     0x140011f3f
   140011ecf:	or     BYTE PTR [rax],cl
   140011ed1:	add    BYTE PTR [rax],al
   140011ed3:	or     BYTE PTR [rax],al
   140011ed5:	or     BYTE PTR [rax],al
   140011ed7:	(bad)  
   140011ed8:	or     BYTE PTR [rax],al
   140011eda:	add    BYTE PTR [rax],al
   140011edc:	add    BYTE PTR [rax],al
   140011ede:	add    BYTE PTR [rax],al
   140011ee0:	and    BYTE PTR [rbx+0x6f],al
   140011ee3:	ins    DWORD PTR es:[rdi],dx
   140011ee4:	jo     0x140011f52
   140011ee6:	gs je  0x140011f4e
   140011ee9:	and    BYTE PTR [rdi+0x62],cl
   140011eec:	push   0x65
   140011eee:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   140011ef2:	outs   dx,DWORD PTR ds:[rsi]
   140011ef3:	movsxd esp,DWORD PTR [rcx+0x74]
   140011ef6:	outs   dx,DWORD PTR ds:[rsi]
   140011ef7:	jb     0x140011f20
   140011ef9:	add    BYTE PTR [rax],al
   140011efb:	add    BYTE PTR [rax],al
   140011efd:	add    BYTE PTR [rax],al
   140011eff:	add    BYTE PTR [rax],ah
   140011f01:	rex.XB ins BYTE PTR es:[rdi],dx
   140011f03:	(bad)  
   140011f04:	jae    0x140011f79
   140011f06:	and    BYTE PTR [rax+0x69],cl
   140011f09:	gs jb  0x140011f6d
   140011f0c:	jb     0x140011f71
   140011f0e:	push   0x65442079
   140011f13:	jae    0x140011f78
   140011f15:	jb     0x140011f80
   140011f17:	jo     0x140011f8d
   140011f19:	outs   dx,DWORD PTR ds:[rsi]
   140011f1a:	jb     0x140011f43
   140011f1c:	add    BYTE PTR [rax],al
   140011f1e:	add    BYTE PTR [rax],al
   140011f20:	and    BYTE PTR [rdx+0x61],al
   140011f23:	jae    0x140011f8a
   140011f25:	and    BYTE PTR [rbx+0x6c],al
   140011f28:	(bad)  
   140011f29:	jae    0x140011f9e
   140011f2b:	and    BYTE PTR [rcx+0x72],al
   140011f2e:	jb     0x140011f91
   140011f30:	jns    0x140011f59
   140011f32:	add    BYTE PTR [rax],al
   140011f34:	add    BYTE PTR [rax],al
   140011f36:	add    BYTE PTR [rax],al
   140011f38:	and    BYTE PTR [rdx+0x61],al
   140011f3b:	jae    0x140011fa2
   140011f3d:	and    BYTE PTR [rbx+0x6c],al
   140011f40:	(bad)  
   140011f41:	jae    0x140011fb6
   140011f43:	and    BYTE PTR [rbp+riz*2+0x73],al
   140011f47:	movsxd esi,DWORD PTR [rdx+0x69]
   140011f4a:	jo     0x140011fc0
   140011f4c:	outs   dx,DWORD PTR ds:[rsi]
   140011f4d:	jb     0x140011f6f
   140011f4f:	(bad)  
   140011f50:	je     0x140011f72
   140011f52:	sub    BYTE PTR [rax],al
   140011f54:	add    BYTE PTR [rax],al
   140011f56:	add    BYTE PTR [rax],al
   140011f58:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   140011f5c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140011f61:	movsxd esi,DWORD PTR [rdx+0x69]
   140011f64:	jo     0x140011fda
   140011f66:	outs   dx,DWORD PTR ds:[rsi]
   140011f67:	jb     0x140011f90
   140011f69:	add    BYTE PTR [rax],al
   140011f6b:	add    BYTE PTR [rax],al
   140011f6d:	add    BYTE PTR [rax],al
   140011f6f:	add    BYTE PTR [rax+0x6c],ah
   140011f72:	outs   dx,DWORD PTR ds:[rsi]
   140011f73:	movsxd esp,DWORD PTR [rcx+0x6c]
   140011f76:	and    BYTE PTR [rbx+0x74],dh
   140011f79:	(bad)  
   140011f7a:	je     0x140011fe5
   140011f7c:	movsxd esp,DWORD PTR [rax]
   140011f7e:	je     0x140011fe8
   140011f80:	jb     0x140011fe7
   140011f82:	(bad)  
   140011f83:	and    BYTE PTR fs:[rdi+0x75],ah
   140011f87:	(bad)  
   140011f88:	jb     0x140011fee
   140011f8a:	(bad)  
   140011f8b:	add    BYTE PTR [rax],al
   140011f8d:	add    BYTE PTR [rax],al
   140011f8f:	add    BYTE PTR [rax+0x6d],ah
   140011f92:	(bad)  
   140011f93:	outs   dx,BYTE PTR ds:[rsi]
   140011f94:	(bad)  
   140011f95:	gs and BYTE PTR fs:[esi+0x65],dh
   140011f9b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140011f9f:	and    BYTE PTR [rbx+0x6f],ah
   140011fa2:	jo     0x14001201d
   140011fa4:	and    BYTE PTR [rbx+0x6f],ah
   140011fa7:	outs   dx,BYTE PTR ds:[rsi]
   140011fa8:	jae    0x14001201e
   140011faa:	jb     0x140012021
   140011fac:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140011fb0:	and    BYTE PTR [rcx+0x74],ch
   140011fb3:	gs jb  0x140012017
   140011fb6:	je     0x140012027
   140011fb8:	jb     0x140011fe1
   140011fba:	add    BYTE PTR [rax],al
   140011fbc:	add    BYTE PTR [rax],al
   140011fbe:	add    BYTE PTR [rax],al
   140011fc0:	(bad)  
   140011fc1:	jbe    0x140012028
   140011fc3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140011fc7:	and    BYTE PTR [rsi+0x62],dh
   140011fca:	(bad)  
   140011fcb:	jae    0x140012032
   140011fcd:	and    BYTE PTR [rbx+0x6f],ah
   140011fd0:	jo     0x14001204b
   140011fd2:	and    BYTE PTR [rbx+0x6f],ah
   140011fd5:	outs   dx,BYTE PTR ds:[rsi]
   140011fd6:	jae    0x14001204c
   140011fd8:	jb     0x14001204f
   140011fda:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140011fde:	and    BYTE PTR [rcx+0x74],ch
   140011fe1:	gs jb  0x140012045
   140011fe4:	je     0x140012055
   140011fe6:	jb     0x14001200f
	...
   140011ff0:	(bad)  
   140011ff1:	jbe    0x140012058
   140011ff3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140011ff7:	and    BYTE PTR [rbx+0x6f],ah
   140011ffa:	jo     0x140012075
   140011ffc:	and    BYTE PTR [rbx+0x6f],ah
   140011fff:	outs   dx,BYTE PTR ds:[rsi]
   140012000:	jae    0x140012076
   140012002:	jb     0x140012079
   140012004:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012008:	and    BYTE PTR [rcx+0x74],ch
   14001200b:	gs jb  0x14001206f
   14001200e:	je     0x14001207f
   140012010:	jb     0x140012039
   140012012:	add    BYTE PTR [rax],al
   140012014:	add    BYTE PTR [rax],al
   140012016:	add    BYTE PTR [rax],al
   140012018:	(bad)  
   140012019:	fs jns 0x14001208a
   14001201c:	(bad)  
   14001201d:	ins    DWORD PTR es:[rdi],dx
   14001201e:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   140012025:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   14001202d:	jne    0x140012092
   14001202f:	je     0x1400120a0
   140012031:	jb     0x140012053
   140012033:	outs   dx,WORD PTR ds:[rsi]
   140012035:	jb     0x140012057
   140012037:	(bad)  
	...
   140012040:	(bad)  
   140012041:	fs jns 0x1400120b2
   140012044:	(bad)  
   140012045:	ins    DWORD PTR es:[rdi],dx
   140012046:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   14001204d:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   140012054:	and    BYTE PTR [rsi+0x6f],ah
   140012057:	jb     0x140012079
   140012059:	(bad)  
   14001205a:	add    BYTE PTR [rax],al
   14001205c:	add    BYTE PTR [rax],al
   14001205e:	add    BYTE PTR [rax],al
   140012060:	(bad)  
   140012061:	gs push 0x63657620
   140012067:	je     0x1400120d8
   140012069:	jb     0x14001208b
   14001206b:	jbe    0x1400120cf
   14001206d:	(bad)  
   14001206e:	jae    0x1400120d5
   140012070:	and    BYTE PTR [rbx+0x6f],ah
   140012073:	jo     0x1400120ee
   140012075:	and    BYTE PTR [rbx+0x6f],ah
   140012078:	outs   dx,BYTE PTR ds:[rsi]
   140012079:	jae    0x1400120ef
   14001207b:	jb     0x1400120f2
   14001207d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012081:	and    BYTE PTR [rcx+0x74],ch
   140012084:	gs jb  0x1400120e8
   140012087:	je     0x1400120f8
   140012089:	jb     0x1400120b2
   14001208b:	add    BYTE PTR [rax],al
   14001208d:	add    BYTE PTR [rax],al
   14001208f:	add    BYTE PTR [rax+0x65],ah
   140012092:	push   0x63657620
   140012097:	je     0x140012108
   140012099:	jb     0x1400120bb
   14001209b:	movsxd ebp,DWORD PTR [rdi+0x70]
   14001209e:	jns    0x1400120c0
   1400120a0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400120a3:	jae    0x140012119
   1400120a5:	jb     0x14001211c
   1400120a7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400120ab:	and    BYTE PTR [rcx+0x74],ch
   1400120ae:	gs jb  0x140012112
   1400120b1:	je     0x140012122
   1400120b3:	jb     0x1400120dc
   1400120b5:	add    BYTE PTR [rax],al
   1400120b7:	add    BYTE PTR [rax+0x6d],ah
   1400120ba:	(bad)  
   1400120bb:	outs   dx,BYTE PTR ds:[rsi]
   1400120bc:	(bad)  
   1400120bd:	gs and BYTE PTR fs:[esi+0x65],dh
   1400120c3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400120c7:	and    BYTE PTR [rbp+riz*2+0x73],ah
   1400120cb:	je     0x14001213f
   1400120cd:	jne    0x140012132
   1400120cf:	je     0x140012140
   1400120d1:	jb     0x1400120f3
   1400120d3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   1400120db:	(bad)  
   1400120dc:	add    BYTE PTR [rax],al
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	(bad)  
   1400120e1:	ins    DWORD PTR es:[rdi],dx
   1400120e2:	(bad)  
   1400120e3:	outs   dx,BYTE PTR ds:[rsi]
   1400120e4:	(bad)  
   1400120e5:	gs and BYTE PTR fs:[esi+0x65],dh
   1400120eb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400120ef:	and    BYTE PTR [rbx+0x6f],ah
   1400120f2:	outs   dx,BYTE PTR ds:[rsi]
   1400120f3:	jae    0x140012169
   1400120f5:	jb     0x14001216c
   1400120f7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400120fb:	and    BYTE PTR [rcx+0x74],ch
   1400120fe:	gs jb  0x140012162
   140012101:	je     0x140012172
   140012103:	jb     0x14001212c
   140012105:	add    BYTE PTR [rax],al
   140012107:	add    BYTE PTR [rax+0x70],ah
   14001210a:	ins    BYTE PTR es:[rdi],dx
   14001210b:	(bad)  
   14001210c:	movsxd esp,DWORD PTR [rbp+0x6d]
   14001210f:	outs   dx,BYTE PTR gs:[rsi]
   140012111:	je     0x140012133
   140012113:	fs gs ins BYTE PTR es:[rdi],dx
   140012116:	gs je  0x14001217e
   140012119:	pop    rbx
   14001211a:	pop    rbp
   14001211b:	and    BYTE PTR [rbx+0x6c],ah
   14001211e:	outs   dx,DWORD PTR ds:[rsi]
   14001211f:	jae    0x140012196
   140012121:	jb     0x140012188
   140012123:	(bad)  
   140012124:	add    BYTE PTR [rax],al
   140012126:	add    BYTE PTR [rax],al
   140012128:	(bad)  
   140012129:	jo     0x140012197
   14001212b:	(bad)  
   14001212c:	movsxd esp,DWORD PTR [rbp+0x6d]
   14001212f:	outs   dx,BYTE PTR gs:[rsi]
   140012131:	je     0x140012153
   140012133:	fs gs ins BYTE PTR es:[rdi],dx
   140012136:	gs je  0x14001219e
   140012139:	and    BYTE PTR [rbx+0x6c],ah
   14001213c:	outs   dx,DWORD PTR ds:[rsi]
   14001213d:	jae    0x1400121b4
   14001213f:	jb     0x1400121a6
   140012141:	(bad)  
   140012142:	add    BYTE PTR [rax],al
   140012144:	add    BYTE PTR [rax],al
   140012146:	add    BYTE PTR [rax],al
   140012148:	(bad)  
   140012149:	outs   dx,DWORD PTR ds:[rsi]
   14001214a:	ins    DWORD PTR es:[rdi],dx
   14001214b:	outs   dx,BYTE PTR ds:[rsi]
   14001214c:	imul   esp,DWORD PTR [rax],0x6c6c6163
   140012152:	jae    0x1400121bd
   140012154:	addr32 (bad) 
   140012156:	add    BYTE PTR [rax],al
   140012158:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14001215c:	gs je  0x1400121c4
   14001215f:	pop    rbx
   140012160:	pop    rbp
   140012161:	add    BYTE PTR [rax],al
   140012163:	add    BYTE PTR [rax],ah
   140012165:	outs   dx,BYTE PTR ds:[rsi]
   140012166:	gs ja  0x1400121c4
   140012169:	pop    rbp
   14001216a:	add    BYTE PTR [rax],al
   14001216c:	add    BYTE PTR [rax],al
   14001216e:	add    BYTE PTR [rax],al
   140012170:	(bad)  
   140012171:	ins    BYTE PTR es:[rdi],dx
   140012172:	outs   dx,DWORD PTR ds:[rsi]
   140012173:	movsxd esp,DWORD PTR [rcx+0x6c]
   140012176:	and    BYTE PTR [rsi+0x66],dh
   140012179:	je     0x1400121dc
   14001217b:	(bad)  
   14001217c:	ins    BYTE PTR es:[rdi],dx
   14001217d:	and    BYTE PTR gs:[rbx+0x6f],ah
   140012181:	outs   dx,BYTE PTR ds:[rsi]
   140012182:	jae    0x1400121f8
   140012184:	jb     0x1400121fb
   140012186:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14001218a:	and    BYTE PTR [rbx+0x6c],ah
   14001218d:	outs   dx,DWORD PTR ds:[rsi]
   14001218e:	jae    0x140012205
   140012190:	jb     0x1400121f7
   140012192:	(bad)  
   140012193:	add    BYTE PTR [rax],al
   140012195:	add    BYTE PTR [rax],al
   140012197:	add    BYTE PTR [rax+0x6c],ah
   14001219a:	outs   dx,DWORD PTR ds:[rsi]
   14001219b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001219e:	and    BYTE PTR [rsi+0x66],dh
   1400121a1:	je     0x140012204
   1400121a3:	(bad)  
   1400121a4:	ins    BYTE PTR es:[rdi],dx
   1400121a5:	gs (bad) 
   1400121a7:	add    BYTE PTR [rax+0x52],ah
   1400121aa:	push   rsp
   1400121ab:	push   rsp
   1400121ac:	rex.WB add BYTE PTR [r8],al
   1400121af:	add    BYTE PTR [rax+0x45],ah
   1400121b2:	rex.W add BYTE PTR [rax],al
   1400121b5:	add    BYTE PTR [rax],al
   1400121b7:	add    BYTE PTR [rax+0x75],ah
   1400121ba:	fs je  0x1400121dd
   1400121bd:	jb     0x140012224
   1400121bf:	je     0x140012236
   1400121c1:	jb     0x140012231
   1400121c3:	imul   ebp,DWORD PTR [rsi+0x67],0x63600027
   1400121ca:	outs   dx,DWORD PTR ds:[rsi]
   1400121cb:	jo     0x140012246
   1400121cd:	and    BYTE PTR [rbx+0x6f],ah
   1400121d0:	outs   dx,BYTE PTR ds:[rsi]
   1400121d1:	jae    0x140012247
   1400121d3:	jb     0x14001224a
   1400121d5:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400121d9:	and    BYTE PTR [rbx+0x6c],ah
   1400121dc:	outs   dx,DWORD PTR ds:[rsi]
   1400121dd:	jae    0x140012254
   1400121df:	jb     0x140012246
   1400121e1:	(bad)  
   1400121e2:	add    BYTE PTR [rax],al
   1400121e4:	add    BYTE PTR [rax],al
   1400121e6:	add    BYTE PTR [rax],al
   1400121e8:	(bad)  
   1400121e9:	gs push 0x63657620
   1400121ef:	je     0x140012260
   1400121f1:	jb     0x140012213
   1400121f3:	jbe    0x140012257
   1400121f5:	(bad)  
   1400121f6:	jae    0x14001225d
   1400121f8:	and    BYTE PTR [rbx+0x6f],ah
   1400121fb:	outs   dx,BYTE PTR ds:[rsi]
   1400121fc:	jae    0x140012272
   1400121fe:	jb     0x140012275
   140012200:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012204:	and    BYTE PTR [rcx+0x74],ch
   140012207:	gs jb  0x14001226b
   14001220a:	je     0x14001227b
   14001220c:	jb     0x140012235
   14001220e:	add    BYTE PTR [rax],al
   140012210:	(bad)  
   140012211:	gs push 0x63657620
   140012217:	je     0x140012288
   140012219:	jb     0x14001223b
   14001221b:	fs gs jae 0x140012293
   14001221f:	jb     0x140012296
   140012221:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012225:	and    BYTE PTR [rcx+0x74],ch
   140012228:	gs jb  0x14001228c
   14001222b:	je     0x14001229c
   14001222d:	jb     0x140012256
   14001222f:	add    BYTE PTR [rax+0x65],ah
   140012232:	push   0x63657620
   140012237:	je     0x1400122a8
   140012239:	jb     0x14001225b
   14001223b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001223e:	jae    0x1400122b4
   140012240:	jb     0x1400122b7
   140012242:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012246:	and    BYTE PTR [rcx+0x74],ch
   140012249:	gs jb  0x1400122ad
   14001224c:	je     0x1400122bd
   14001224e:	jb     0x140012277
	...
   140012258:	(bad)  
   140012259:	jbe    0x1400122c4
   14001225b:	jb     0x1400122d1
   14001225d:	jne    0x1400122c0
   14001225f:	ins    BYTE PTR es:[rdi],dx
   140012260:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   140012264:	jo     0x1400122d2
   140012266:	(bad)  
   140012267:	movsxd esp,DWORD PTR [rbp+0x6d]
   14001226a:	outs   dx,BYTE PTR gs:[rsi]
   14001226c:	je     0x14001228e
   14001226e:	ins    DWORD PTR es:[rdi],dx
   14001226f:	(bad)  
   140012270:	jo     0x140012299
   140012272:	add    BYTE PTR [rax],al
   140012274:	add    BYTE PTR [rax],al
   140012276:	add    BYTE PTR [rax],al
   140012278:	(bad)  
   140012279:	jbe    0x1400122e0
   14001227b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14001227f:	and    BYTE PTR [rsi+0x62],dh
   140012282:	(bad)  
   140012283:	jae    0x1400122ea
   140012285:	and    BYTE PTR [rbx+0x6f],ah
   140012288:	outs   dx,BYTE PTR ds:[rsi]
   140012289:	jae    0x1400122ff
   14001228b:	jb     0x140012302
   14001228d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012291:	and    BYTE PTR [rcx+0x74],ch
   140012294:	gs jb  0x1400122f8
   140012297:	je     0x140012308
   140012299:	jb     0x1400122c2
   14001229b:	add    BYTE PTR [rax],al
   14001229d:	add    BYTE PTR [rax],al
   14001229f:	add    BYTE PTR [rax+0x76],ah
   1400122a2:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400122a7:	and    BYTE PTR [rbp+riz*2+0x73],ah
   1400122ab:	je     0x14001231f
   1400122ad:	jne    0x140012312
   1400122af:	je     0x140012320
   1400122b1:	jb     0x1400122d3
   1400122b3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   1400122bb:	(bad)  
   1400122bc:	add    BYTE PTR [rax],al
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	(bad)  
   1400122c1:	jbe    0x140012328
   1400122c3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400122c7:	and    BYTE PTR [rbx+0x6f],ah
   1400122ca:	outs   dx,BYTE PTR ds:[rsi]
   1400122cb:	jae    0x140012341
   1400122cd:	jb     0x140012344
   1400122cf:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400122d3:	and    BYTE PTR [rcx+0x74],ch
   1400122d6:	gs jb  0x14001233a
   1400122d9:	je     0x14001234a
   1400122db:	jb     0x140012304
   1400122dd:	add    BYTE PTR [rax],al
   1400122df:	add    BYTE PTR [rax+0x73],ah
   1400122e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400122e5:	(bad)  
   1400122e6:	jb     0x140012308
   1400122e8:	fs gs ins BYTE PTR es:[rdi],dx
   1400122eb:	gs je  0x140012357
   1400122ee:	outs   dx,BYTE PTR ds:[rsi]
   1400122ef:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400122f4:	je     0x140012368
   1400122f6:	jne    0x14001235b
   1400122f8:	je     0x140012369
   1400122fa:	jb     0x140012323
   1400122fc:	add    BYTE PTR [rax],al
   1400122fe:	add    BYTE PTR [rax],al
   140012300:	(bad)  
   140012301:	fs gs data16 (bad) 
   140012305:	jne    0x140012373
   140012307:	je     0x140012329
   140012309:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001230c:	jae    0x140012382
   14001230e:	jb     0x140012385
   140012310:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140012314:	and    BYTE PTR [rbx+0x6c],ah
   140012317:	outs   dx,DWORD PTR ds:[rsi]
   140012318:	jae    0x14001238f
   14001231a:	jb     0x140012381
   14001231c:	(bad)  
   14001231d:	add    BYTE PTR [rax],al
   14001231f:	add    BYTE PTR [rax+0x76],ah
   140012322:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140012327:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14001232b:	gs je  0x140012397
   14001232e:	outs   dx,BYTE PTR ds:[rsi]
   14001232f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   140012334:	je     0x1400123a8
   140012336:	jne    0x14001239b
   140012338:	je     0x1400123a9
   14001233a:	jb     0x140012363
   14001233c:	add    BYTE PTR [rax],al
   14001233e:	add    BYTE PTR [rax],al
   140012340:	(bad)  
   140012341:	jbe    0x1400123a5
   140012343:	(bad)  
   140012344:	jae    0x1400123ab
   140012346:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14001234a:	je     0x1400123be
   14001234c:	jne    0x1400123b1
   14001234e:	je     0x1400123bf
   140012350:	jb     0x140012379
   140012352:	add    BYTE PTR [rax],al
   140012354:	add    BYTE PTR [rax],al
   140012356:	add    BYTE PTR [rax],al
   140012358:	(bad)  
   140012359:	jae    0x1400123cf
   14001235b:	jb     0x1400123c6
   14001235d:	outs   dx,BYTE PTR ds:[rsi]
   14001235e:	addr32 (bad) 
	...
   140012368:	(bad)  
   140012369:	ins    BYTE PTR es:[rdi],dx
   14001236a:	outs   dx,DWORD PTR ds:[rsi]
   14001236b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001236e:	and    BYTE PTR [rbx+0x74],dh
   140012371:	(bad)  
   140012372:	je     0x1400123dd
   140012374:	movsxd esp,DWORD PTR [rax]
   140012376:	addr32 jne 0x1400123da
   140012379:	jb     0x1400123df
   14001237b:	(bad)  
   14001237c:	add    BYTE PTR [rax],al
   14001237e:	add    BYTE PTR [rax],al
   140012380:	(bad)  
   140012381:	je     0x1400123fc
   140012383:	jo     0x1400123ea
   140012385:	outs   dx,DWORD PTR ds:[rsi]
   140012386:	data16 (bad) 
	...
   140012390:	(bad)  
   140012391:	jbe    0x1400123f6
   140012393:	(bad)  
   140012394:	ins    BYTE PTR es:[rdi],dx
   140012395:	ins    BYTE PTR es:[rdi],dx
   140012396:	(bad)  
   140012397:	add    BYTE PTR [rax+0x76],ah
   14001239a:	(bad)  
   14001239b:	je     0x1400123fe
   14001239d:	(bad)  
   14001239e:	ins    BYTE PTR es:[rdi],dx
   14001239f:	gs (bad) 
   1400123a1:	add    BYTE PTR [rax],al
   1400123a3:	add    BYTE PTR [rax],al
   1400123a5:	add    BYTE PTR [rax],al
   1400123a7:	add    BYTE PTR [rax+0x76],ah
   1400123aa:	data16 je 0x14001240e
   1400123ad:	(bad)  
   1400123ae:	ins    BYTE PTR es:[rdi],dx
   1400123af:	gs (bad) 
   1400123b1:	add    BYTE PTR [rax],al
   1400123b3:	add    BYTE PTR [rsi+0x3d],bl
   1400123b6:	add    BYTE PTR [rax],al
   1400123b8:	jl     0x1400123f7
   1400123ba:	add    BYTE PTR [rax],al
   1400123bc:	es cmp eax,0x3c3c0000
   1400123c2:	cmp    eax,0x3d3e3e00
   1400123c7:	add    BYTE PTR [rip+0x2f00003d],ah        # 0x16f01240a
   1400123cd:	cmp    eax,0x3d2d0000
   1400123d2:	add    BYTE PTR [rax],al
   1400123d4:	sub    edi,DWORD PTR [rip+0x3d2a0000]        # 0x17d2b23da
   1400123da:	add    BYTE PTR [rax],al
   1400123dc:	jl     0x14001245a
   1400123de:	add    BYTE PTR [rax],al
   1400123e0:	es add BYTE PTR es:[rax],al
   1400123e4:	jl     0x1400123e6
   1400123e6:	add    BYTE PTR [rax],al
   1400123e8:	pop    rsi
   1400123e9:	add    BYTE PTR [rax],al
   1400123eb:	add    BYTE PTR [rsi+0x0],bh
   1400123ee:	add    BYTE PTR [rax],al
   1400123f0:	sub    BYTE PTR [rcx],ch
   1400123f2:	add    BYTE PTR [rax],al
   1400123f4:	sub    al,0x0
   1400123f6:	add    BYTE PTR [rax],al
   1400123f8:	ds cmp eax,0x3e0000
   1400123fe:	add    BYTE PTR [rax],al
   140012400:	cmp    al,0x3d
   140012402:	add    BYTE PTR [rax],al
   140012404:	cmp    al,0x0
   140012406:	add    BYTE PTR [rax],al
   140012408:	and    eax,0x2f000000
   14001240d:	add    BYTE PTR [rax],al
   14001240f:	add    BYTE PTR [rip+0x26002a3e],ch        # 0x166014e53
   140012415:	add    BYTE PTR [rax],al
   140012417:	add    BYTE PTR [rbx],ch
   140012419:	add    BYTE PTR [rax],al
   14001241b:	add    BYTE PTR [rip+0x2d000000],ch        # 0x16d012421
   140012421:	sub    eax,0x2b2b0000
   140012426:	add    BYTE PTR [rax],al
   140012428:	sub    al,BYTE PTR [rax]
   14001242a:	add    BYTE PTR [rax],al
   14001242c:	sub    eax,0x6f00003e
   140012431:	jo     0x140012498
   140012433:	jb     0x140012496
   140012435:	je     0x1400124a6
   140012437:	jb     0x140012439
   140012439:	add    BYTE PTR [rax],al
   14001243b:	add    BYTE PTR [rbx+0x5d],bl
   14001243e:	add    BYTE PTR [rax],al
   140012440:	and    DWORD PTR [rip+0x3d3d0000],edi        # 0x17d3e2446
   140012446:	add    BYTE PTR [rax],al
   140012448:	and    DWORD PTR [rax],eax
   14001244a:	add    BYTE PTR [rax],al
   14001244c:	cmp    al,0x3c
   14001244e:	add    BYTE PTR [rax],al
   140012450:	ds add BYTE PTR ds:[rax],al
   140012454:	add    BYTE PTR [rax],al
   140012456:	add    BYTE PTR [rax],al
   140012458:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14001245c:	gs je  0x1400124c4
   14001245f:	add    BYTE PTR [rax],ah
   140012461:	outs   dx,BYTE PTR ds:[rsi]
   140012462:	gs ja  0x140012465
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rdi+0x5f],bl
   14001246a:	jne    0x1400124da
   14001246c:	(bad)  
   14001246d:	ins    BYTE PTR es:[rdi],dx
   14001246e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   140012475:	add    BYTE PTR [rax],al
   140012477:	add    BYTE PTR [rdi+0x5f],bl
   14001247a:	jb     0x1400124e1
   14001247c:	jae    0x1400124f2
   14001247e:	jb     0x1400124e9
   140012480:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140012484:	add    BYTE PTR [rax],al
   140012486:	add    BYTE PTR [rax],al
   140012488:	pop    rdi
   140012489:	pop    rdi
   14001248a:	jo     0x140012500
   14001248c:	jb     0x1400124c4
   14001248e:	xor    al,0x0
   140012490:	pop    rdi
   140012491:	pop    rdi
   140012492:	gs (bad) 
   140012494:	(bad)  
   140012495:	imul   eax,DWORD PTR [rax],0x635f5f00
   14001249b:	ins    BYTE PTR es:[rdi],dx
   14001249c:	jb     0x140012501
   14001249e:	(bad)  
   14001249f:	ins    BYTE PTR es:[rdi],dx
   1400124a0:	ins    BYTE PTR es:[rdi],dx
   1400124a1:	add    BYTE PTR [rax],al
   1400124a3:	add    BYTE PTR [rax],al
   1400124a5:	add    BYTE PTR [rax],al
   1400124a7:	add    BYTE PTR [rdi+0x5f],bl
   1400124aa:	data16 (bad) 
   1400124ac:	jae    0x140012522
   1400124ae:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400124b1:	ins    BYTE PTR es:[rdi],dx
   1400124b2:	add    BYTE PTR [rax],al
   1400124b4:	add    BYTE PTR [rax],al
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	pop    rdi
   1400124b9:	pop    rdi
   1400124ba:	je     0x140012524
   1400124bc:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   1400124c3:	add    BYTE PTR [rax],al
   1400124c5:	add    BYTE PTR [rax],al
   1400124c7:	add    BYTE PTR [rdi+0x5f],bl
   1400124ca:	jae    0x140012540
   1400124cc:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   1400124d0:	ins    BYTE PTR es:[rdi],dx
   1400124d1:	add    BYTE PTR [rax],al
   1400124d3:	add    BYTE PTR [rax],al
   1400124d5:	add    BYTE PTR [rax],al
   1400124d7:	add    BYTE PTR [rdi+0x5f],bl
   1400124da:	jo     0x14001253d
   1400124dc:	jae    0x140012541
   1400124de:	(bad)  
   1400124df:	ins    BYTE PTR es:[rdi],dx
	...
   1400124e8:	pop    rdi
   1400124e9:	pop    rdi
   1400124ea:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   1400124ee:	ins    BYTE PTR es:[rdi],dx
   1400124ef:	add    BYTE PTR [rdi+0x5f],bl
   1400124f2:	(bad)  
   1400124f4:	jae    0x14001255b
   1400124f6:	sub    BYTE PTR fs:[rax],al
   1400124f9:	add    BYTE PTR [rax],al
   1400124fb:	add    BYTE PTR [rax],al
   1400124fd:	add    BYTE PTR [rax],al
   1400124ff:	add    al,dh
   140012501:	and    al,0x1
   140012503:	rex add DWORD PTR [rax],eax
   140012506:	add    BYTE PTR [rax],al
   140012508:	call   0x141412631
   14001250d:	add    BYTE PTR [rax],al
   14001250f:	add    al,bl
   140012511:	and    al,0x1
   140012513:	rex add DWORD PTR [rax],eax
   140012516:	add    BYTE PTR [rax],al
   140012518:	enter  0x124,0x40
   14001251c:	add    DWORD PTR [rax],eax
   14001251e:	add    BYTE PTR [rax],al
   140012520:	mov    eax,0x1400124
   140012525:	add    BYTE PTR [rax],al
   140012527:	add    BYTE PTR [rax+0x1400124],ch
   14001252d:	add    BYTE PTR [rax],al
   14001252f:	add    BYTE PTR [rax+0x1400124],bl
   140012535:	add    BYTE PTR [rax],al
   140012537:	add    BYTE PTR [rax+0x1400124],dl
   14001253d:	add    BYTE PTR [rax],al
   14001253f:	add    BYTE PTR [rax+0x1400124],cl
   140012545:	add    BYTE PTR [rax],al
   140012547:	add    BYTE PTR [rax+0x24],bh
   14001254a:	add    DWORD PTR [rax+0x1],eax
   14001254d:	add    BYTE PTR [rax],al
   14001254f:	add    BYTE PTR [rax+0x24],ch
   140012552:	add    DWORD PTR [rax+0x1],eax
   140012555:	add    BYTE PTR [rax],al
   140012557:	add    BYTE PTR [rdx+0x1400114],ah
   14001255d:	add    BYTE PTR [rax],al
   14001255f:	add    BYTE PTR [rax+0x24],ah
   140012562:	add    DWORD PTR [rax+0x1],eax
   140012565:	add    BYTE PTR [rax],al
   140012567:	add    BYTE PTR [rax+0x24],bl
   14001256a:	add    DWORD PTR [rax+0x1],eax
   14001256d:	add    BYTE PTR [rax],al
   14001256f:	add    BYTE PTR [rax+0x1400114],ah
   140012575:	add    BYTE PTR [rax],al
   140012577:	add    BYTE PTR [rax+0x24],dl
   14001257a:	add    DWORD PTR [rax+0x1],eax
   14001257d:	add    BYTE PTR [rax],al
   14001257f:	add    BYTE PTR [rsp+0x1],cl
   140012583:	rex add DWORD PTR [rax],eax
   140012586:	add    BYTE PTR [rax],al
   140012588:	rex.W and al,0x1
   14001258b:	rex add DWORD PTR [rax],eax
   14001258e:	add    BYTE PTR [rax],al
   140012590:	rex.R and al,0x1
   140012593:	rex add DWORD PTR [rax],eax
   140012596:	add    BYTE PTR [rax],al
   140012598:	and    al,0x1
   14001259b:	rex add DWORD PTR [rax],eax
   14001259e:	add    BYTE PTR [rax],al
   1400125a0:	cmp    al,0x24
   1400125a2:	add    DWORD PTR [rax+0x1],eax
   1400125a5:	add    BYTE PTR [rax],al
   1400125a7:	add    BYTE PTR [rax],dh
   1400125a9:	and    al,0x1
   1400125ab:	rex add DWORD PTR [rax],eax
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	sub    al,0x24
   1400125b2:	add    DWORD PTR [rax+0x1],eax
   1400125b5:	add    BYTE PTR [rax],al
   1400125b7:	add    BYTE PTR [rax],ch
   1400125b9:	and    al,0x1
   1400125bb:	rex add DWORD PTR [rax],eax
   1400125be:	add    BYTE PTR [rax],al
   1400125c0:	and    al,0x24
   1400125c2:	add    DWORD PTR [rax+0x1],eax
   1400125c5:	add    BYTE PTR [rax],al
   1400125c7:	add    BYTE PTR [rax],ah
   1400125c9:	and    al,0x1
   1400125cb:	rex add DWORD PTR [rax],eax
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	sbb    al,0x24
   1400125d2:	add    DWORD PTR [rax+0x1],eax
   1400125d5:	add    BYTE PTR [rax],al
   1400125d7:	add    BYTE PTR [rax],bl
   1400125d9:	and    al,0x1
   1400125db:	rex add DWORD PTR [rax],eax
   1400125de:	add    BYTE PTR [rax],al
   1400125e0:	adc    al,0x24
   1400125e2:	add    DWORD PTR [rax+0x1],eax
   1400125e5:	add    BYTE PTR [rax],al
   1400125e7:	add    BYTE PTR [rax],dl
   1400125e9:	and    al,0x1
   1400125eb:	rex add DWORD PTR [rax],eax
   1400125ee:	add    BYTE PTR [rax],al
   1400125f0:	or     al,0x24
   1400125f2:	add    DWORD PTR [rax+0x1],eax
   1400125f5:	add    BYTE PTR [rax],al
   1400125f7:	add    BYTE PTR [rax],cl
   1400125f9:	and    al,0x1
   1400125fb:	rex add DWORD PTR [rax],eax
   1400125fe:	add    BYTE PTR [rax],al
   140012600:	add    al,0x24
   140012602:	add    DWORD PTR [rax+0x1],eax
   140012605:	add    BYTE PTR [rax],al
   140012607:	add    BYTE PTR [rax],al
   140012609:	and    al,0x1
   14001260b:	rex add DWORD PTR [rax],eax
   14001260e:	add    BYTE PTR [rax],al
   140012610:	cld    
   140012611:	and    eax,DWORD PTR [rcx]
   140012613:	rex add DWORD PTR [rax],eax
   140012616:	add    BYTE PTR [rax],al
   140012618:	clc    
   140012619:	and    eax,DWORD PTR [rcx]
   14001261b:	rex add DWORD PTR [rax],eax
   14001261e:	add    BYTE PTR [rax],al
   140012620:	hlt    
   140012621:	and    eax,DWORD PTR [rcx]
   140012623:	rex add DWORD PTR [rax],eax
   140012626:	add    BYTE PTR [rax],al
   140012628:	lock and eax,DWORD PTR [rcx]
   14001262b:	rex add DWORD PTR [rax],eax
   14001262e:	add    BYTE PTR [rax],al
   140012630:	in     al,dx
   140012631:	and    eax,DWORD PTR [rcx]
   140012633:	rex add DWORD PTR [rax],eax
   140012636:	add    BYTE PTR [rax],al
   140012638:	call   0x141412760
   14001263d:	add    BYTE PTR [rax],al
   14001263f:	add    ah,ah
   140012641:	and    eax,DWORD PTR [rcx]
   140012643:	rex add DWORD PTR [rax],eax
   140012646:	add    BYTE PTR [rax],al
   140012648:	loopne 0x14001266d
   14001264a:	add    DWORD PTR [rax+0x1],eax
   14001264d:	add    BYTE PTR [rax],al
   14001264f:	add    ah,bl
   140012651:	and    eax,DWORD PTR [rcx]
   140012653:	rex add DWORD PTR [rax],eax
   140012656:	add    BYTE PTR [rax],al
   140012658:	fsub   DWORD PTR [rbx]
   14001265a:	add    DWORD PTR [rax+0x1],eax
   14001265d:	add    BYTE PTR [rax],al
   14001265f:	add    ah,dl
   140012661:	and    eax,DWORD PTR [rcx]
   140012663:	rex add DWORD PTR [rax],eax
   140012666:	add    BYTE PTR [rax],al
   140012668:	shl    BYTE PTR [rbx],1
   14001266a:	add    DWORD PTR [rax+0x1],eax
   14001266d:	add    BYTE PTR [rax],al
   14001266f:	add    ah,cl
   140012671:	and    eax,DWORD PTR [rcx]
   140012673:	rex add DWORD PTR [rax],eax
   140012676:	add    BYTE PTR [rax],al
   140012678:	enter  0x123,0x40
   14001267c:	add    DWORD PTR [rax],eax
   14001267e:	add    BYTE PTR [rax],al
   140012680:	vdpps  xmm8,xmm15,XMMWORD PTR [rcx],0x0
   140012686:	add    BYTE PTR [rax],al
   140012688:	shl    BYTE PTR [rbx],0x1
   14001268b:	rex add DWORD PTR [rax],eax
   14001268e:	add    BYTE PTR [rax],al
   140012690:	mov    esp,0x1400123
   140012695:	add    BYTE PTR [rax],al
   140012697:	add    BYTE PTR [rax+0x1400123],bh
   14001269d:	add    BYTE PTR [rax],al
   14001269f:	add    BYTE PTR [rbx+riz*1+0x14001],dh
   1400126a6:	add    BYTE PTR [rax],al
   1400126a8:	test   al,0x23
   1400126aa:	add    DWORD PTR [rax+0x1],eax
   1400126ad:	add    BYTE PTR [rax],al
   1400126af:	add    BYTE PTR [rax+0x1400123],bl
   1400126b5:	add    BYTE PTR [rax],al
   1400126b7:	add    BYTE PTR [rax+0x1400123],dl
   1400126bd:	add    BYTE PTR [rax],al
   1400126bf:	add    BYTE PTR [rax+0x1400123],al
   1400126c5:	add    BYTE PTR [rax],al
   1400126c7:	add    BYTE PTR [rax+0x23],ch
   1400126ca:	add    DWORD PTR [rax+0x1],eax
   1400126cd:	add    BYTE PTR [rax],al
   1400126cf:	add    BYTE PTR [rax+0x23],bl
   1400126d2:	add    DWORD PTR [rax+0x1],eax
   1400126d5:	add    BYTE PTR [rax],al
   1400126d7:	add    BYTE PTR [rax+0x23],al
   1400126da:	add    DWORD PTR [rax+0x1],eax
   1400126dd:	add    BYTE PTR [rax],al
   1400126df:	add    BYTE PTR [rax],ah
   1400126e1:	and    eax,DWORD PTR [rcx]
   1400126e3:	rex add DWORD PTR [rax],eax
   1400126e6:	add    BYTE PTR [rax],al
   1400126e8:	add    BYTE PTR [rbx],ah
   1400126ea:	add    DWORD PTR [rax+0x1],eax
   1400126ed:	add    BYTE PTR [rax],al
   1400126ef:	add    al,ah
   1400126f1:	and    al,BYTE PTR [rcx]
   1400126f3:	rex add DWORD PTR [rax],eax
   1400126f6:	add    BYTE PTR [rax],al
   1400126f8:	shl    BYTE PTR [rdx],0x1
   1400126fb:	rex add DWORD PTR [rax],eax
   1400126fe:	add    BYTE PTR [rax],al
   140012700:	movabs al,ds:0x7800000001400122
   140012709:	and    al,BYTE PTR [rcx]
   14001270b:	rex add DWORD PTR [rax],eax
   14001270e:	add    BYTE PTR [rax],al
   140012710:	pop    rax
   140012711:	and    al,BYTE PTR [rcx]
   140012713:	rex add DWORD PTR [rax],eax
   140012716:	add    BYTE PTR [rax],al
   140012718:	xor    BYTE PTR [rdx],ah
   14001271a:	add    DWORD PTR [rax+0x1],eax
   14001271d:	add    BYTE PTR [rax],al
   14001271f:	add    BYTE PTR [rax],dl
   140012721:	and    al,BYTE PTR [rcx]
   140012723:	rex add DWORD PTR [rax],eax
   140012726:	add    BYTE PTR [rax],al
   140012728:	call   0x14141284e
   14001272d:	add    BYTE PTR [rax],al
   14001272f:	add    al,cl
   140012731:	and    DWORD PTR [rcx],eax
   140012733:	rex add DWORD PTR [rax],eax
   140012736:	add    BYTE PTR [rax],al
   140012738:	mov    eax,0x1400121
   14001273d:	add    BYTE PTR [rax],al
   14001273f:	add    BYTE PTR [rax+0x1400121],dh
   140012745:	add    BYTE PTR [rax],al
   140012747:	add    BYTE PTR [rax+0x1400121],ch
   14001274d:	add    BYTE PTR [rax],al
   14001274f:	add    BYTE PTR [rax+0x1400121],bl
   140012755:	add    BYTE PTR [rax],al
   140012757:	add    BYTE PTR [rax+0x21],dh
   14001275a:	add    DWORD PTR [rax+0x1],eax
   14001275d:	add    BYTE PTR [rax],al
   14001275f:	add    BYTE PTR [rcx+riz*1+0x1],ah
   140012763:	rex add DWORD PTR [rax],eax
   140012766:	add    BYTE PTR [rax],al
   140012768:	pop    rax
   140012769:	and    DWORD PTR [rcx],eax
   14001276b:	rex add DWORD PTR [rax],eax
   14001276e:	add    BYTE PTR [rax],al
   140012770:	and    QWORD PTR [rcx],rax
   140012773:	rex add DWORD PTR [rax],eax
   140012776:	add    BYTE PTR [rax],al
   140012778:	sub    BYTE PTR [rcx],ah
   14001277a:	add    DWORD PTR [rax+0x1],eax
   14001277d:	add    BYTE PTR [rax],al
   14001277f:	add    BYTE PTR [rax],cl
   140012781:	and    DWORD PTR [rcx],eax
   140012783:	rex add DWORD PTR [rax],eax
   140012786:	add    BYTE PTR [rax],al
   140012788:	loopne 0x1400127aa
   14001278a:	add    DWORD PTR [rax+0x1],eax
   14001278d:	add    BYTE PTR [rax],al
   14001278f:	add    BYTE PTR [rax+0x1400120],bh
   140012795:	add    BYTE PTR [rax],al
   140012797:	add    BYTE PTR [rax+0x1400120],dl
   14001279d:	add    BYTE PTR [rax],al
   14001279f:	add    BYTE PTR [rax+0x20],ah
   1400127a2:	add    DWORD PTR [rax+0x1],eax
   1400127a5:	add    BYTE PTR [rax],al
   1400127a7:	add    BYTE PTR [rax+0x20],al
   1400127aa:	add    DWORD PTR [rax+0x1],eax
   1400127ad:	add    BYTE PTR [rax],al
   1400127af:	add    BYTE PTR [rax],bl
   1400127b1:	and    BYTE PTR [rcx],al
   1400127b3:	rex add DWORD PTR [rax],eax
   1400127b6:	add    BYTE PTR [rax],al
   1400127b8:	lock (bad) 
   1400127ba:	add    DWORD PTR [rax+0x1],eax
   1400127bd:	add    BYTE PTR [rax],al
   1400127bf:	add    al,al
   1400127c1:	(bad)  
   1400127c2:	add    DWORD PTR [rax+0x1],eax
   1400127c5:	add    BYTE PTR [rax],al
   1400127c7:	add    BYTE PTR [rax+0x140011f],dl
   1400127cd:	add    BYTE PTR [rax],al
   1400127cf:	add    BYTE PTR [rax+0x1f],dh
   1400127d2:	add    DWORD PTR [rax+0x1],eax
   1400127d5:	add    BYTE PTR [rax],al
   1400127d7:	add    BYTE PTR [rdx+0x1400114],ah
   1400127dd:	add    BYTE PTR [rax],al
   1400127df:	add    BYTE PTR [rax+0x1f],bl
   1400127e2:	add    DWORD PTR [rax+0x1],eax
   1400127e5:	add    BYTE PTR [rax],al
   1400127e7:	add    BYTE PTR [rax],bh
   1400127e9:	(bad)  
   1400127ea:	add    DWORD PTR [rax+0x1],eax
   1400127ed:	add    BYTE PTR [rax],al
   1400127ef:	add    BYTE PTR [rax],ah
   1400127f1:	(bad)  
   1400127f2:	add    DWORD PTR [rax+0x1],eax
   1400127f5:	add    BYTE PTR [rax],al
   1400127f7:	add    BYTE PTR [rax],al
   1400127f9:	(bad)  
   1400127fa:	add    DWORD PTR [rax+0x1],eax
   1400127fd:	add    BYTE PTR [rax],al
   1400127ff:	add    al,ah
   140012801:	(bad)  
   140012802:	add    DWORD PTR [rax+0x1],eax
   140012805:	add    BYTE PTR [rax],al
   140012807:	add    BYTE PTR [rbp-0x716d7fe8],cl
   14001280d:	(bad)  
   14001280e:	addr32 rex.W mov bl,0xc
   140012812:	jg     0x1400127bc
   140012814:	cmp    BYTE PTR [rax+rbp*8+0x73006dde],al
   14001281b:	add    BYTE PTR [rbx+0x0],ah
   14001281e:	outs   dx,DWORD PTR ds:[rsi]
   14001281f:	add    BYTE PTR [rdx+0x0],dh
   140012822:	add    BYTE PTR gs:[rbp+0x0],ah
   140012826:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14001282b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14001282f:	add    BYTE PTR [rbx+0x6f],al
   140012832:	jb     0x140012876
   140012834:	imul   ebp,DWORD PTR [rsi+0x64],0x75526f54
   14001283b:	outs   dx,BYTE PTR ds:[rsi]
   14001283c:	je     0x1400128a7
   14001283e:	ins    DWORD PTR es:[rdi],dx
   14001283f:	gs rex.RB js 0x140012843
   140012843:	add    BYTE PTR [rax],al
   140012845:	add    BYTE PTR [rax],al
   140012847:	add    BYTE PTR [rdx+0x0],dl
   14001284a:	jne    0x14001284c
   14001284c:	outs   dx,BYTE PTR ds:[rsi]
   14001284d:	add    BYTE PTR [rcx+0x0],cl
   140012850:	outs   dx,BYTE PTR ds:[rsi]
   140012851:	add    BYTE PTR [rbx+0x0],dh
   140012854:	je     0x140012856
   140012856:	(bad)  
   140012857:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001285b:	add    BYTE PTR [rbp+0x0],ah
   14001285e:	jb     0x140012860
	...
   140012868:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001286c:	jae    0x14001286e
   14001286e:	je     0x140012870
   140012870:	(bad)  
   140012871:	add    BYTE PTR [rax+rax*1+0x6c],ch
	...
   14001287d:	add    BYTE PTR [rax],al
   14001287f:	add    BYTE PTR [rbx+0x0],dl
   140012882:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140012886:	push   rsp
   140012887:	add    BYTE PTR [rdi+0x0],dl
   14001288a:	add    BYTE PTR [r10+0x0],dl
   14001288e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140012893:	add    BYTE PTR [rcx+0x0],ch
   140012896:	movsxd eax,DWORD PTR [rax]
   140012898:	jb     0x14001289a
   14001289a:	outs   dx,DWORD PTR ds:[rsi]
   14001289b:	add    BYTE PTR [rbx+0x0],dh
   14001289e:	outs   dx,DWORD PTR ds:[rsi]
   14001289f:	add    BYTE PTR [rsi+0x0],ah
   1400128a2:	je     0x1400128a4
   1400128a4:	pop    rsp
   1400128a5:	add    BYTE PTR [rsi+0x0],cl
   1400128a8:	add    BYTE PTR [r8+rax*1+0x20],r10b
   1400128ad:	add    BYTE PTR [rsi+0x0],al
   1400128b0:	jb     0x1400128b2
   1400128b2:	(bad)  
   1400128b3:	add    BYTE PTR [rbp+0x0],ch
   1400128b6:	add    BYTE PTR gs:[rdi+0x0],dh
   1400128ba:	outs   dx,DWORD PTR ds:[rsi]
   1400128bb:	add    BYTE PTR [rdx+0x0],dh
   1400128be:	imul   eax,DWORD PTR [rax],0x20
   1400128c1:	add    BYTE PTR [rbx+0x0],dl
   1400128c4:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400128c9:	add    BYTE PTR [rax+0x0],dh
   1400128cc:	pop    rsp
   1400128cd:	add    BYTE PTR [rsi+0x0],cl
   1400128d0:	add    BYTE PTR [rax+0x0],r10b
   1400128d4:	pop    rsp
   1400128d5:	add    BYTE PTR [rsi+0x0],dh
   1400128d8:	xor    eax,DWORD PTR [rax]
   1400128da:	add    BYTE PTR cs:[rip+0x53000000],dh        # 0x1930128e1
   1400128e1:	add    BYTE PTR [rdi+0x0],cl
   1400128e4:	add    BYTE PTR [rax+r8*1+0x57],r10b
   1400128e9:	add    BYTE PTR [rcx+0x0],al
   1400128ec:	push   rdx
   1400128ed:	add    BYTE PTR [rbp+0x0],al
   1400128f0:	pop    rsp
   1400128f1:	add    BYTE PTR [rbp+0x0],cl
   1400128f4:	imul   eax,DWORD PTR [rax],0x720063
   1400128fa:	outs   dx,DWORD PTR ds:[rsi]
   1400128fb:	add    BYTE PTR [rbx+0x0],dh
   1400128fe:	outs   dx,DWORD PTR ds:[rsi]
   1400128ff:	add    BYTE PTR [rsi+0x0],ah
   140012902:	je     0x140012904
   140012904:	pop    rsp
   140012905:	add    BYTE PTR [rsi+0x0],cl
   140012908:	add    BYTE PTR [r8+rax*1+0x20],r10b
   14001290d:	add    BYTE PTR [rsi+0x0],al
   140012910:	jb     0x140012912
   140012912:	(bad)  
   140012913:	add    BYTE PTR [rbp+0x0],ch
   140012916:	add    BYTE PTR gs:[rdi+0x0],dh
   14001291a:	outs   dx,DWORD PTR ds:[rsi]
   14001291b:	add    BYTE PTR [rdx+0x0],dh
   14001291e:	imul   eax,DWORD PTR [rax],0x20
   140012921:	add    BYTE PTR [rbx+0x0],dl
   140012924:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140012929:	add    BYTE PTR [rax+0x0],dh
   14001292c:	pop    rsp
   14001292d:	add    BYTE PTR [rax+rax*1+0x6f],al
   140012931:	add    BYTE PTR [rax+rax*1+0x4e],dh
   140012935:	add    BYTE PTR [rbp+0x0],ah
   140012938:	je     0x14001293a
   14001293a:	add    BYTE PTR [r8+r8*1+0x69],bpl
   14001293f:	add    BYTE PTR [rbp+0x0],ah
   140012942:	outs   dx,BYTE PTR ds:[rsi]
   140012943:	add    BYTE PTR [rax+rax*1+0x5c],dh
   140012947:	add    BYTE PTR [rsi+0x0],dh
   14001294a:	xor    eax,DWORD PTR [rax]
   14001294c:	add    BYTE PTR cs:[rip+0x0],dh        # 0x140012953
	...
   14001295f:	add    BYTE PTR [rbx+0x0],dl
   140012962:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140012966:	push   rsp
   140012967:	add    BYTE PTR [rdi+0x0],dl
   14001296a:	add    BYTE PTR [r10+0x0],dl
   14001296e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140012973:	add    BYTE PTR [rcx+0x0],ch
   140012976:	movsxd eax,DWORD PTR [rax]
   140012978:	jb     0x14001297a
   14001297a:	outs   dx,DWORD PTR ds:[rsi]
   14001297b:	add    BYTE PTR [rbx+0x0],dh
   14001297e:	outs   dx,DWORD PTR ds:[rsi]
   14001297f:	add    BYTE PTR [rsi+0x0],ah
   140012982:	je     0x140012984
   140012984:	pop    rsp
   140012985:	add    BYTE PTR [rsi+0x0],cl
   140012988:	add    BYTE PTR [r8+rax*1+0x20],r10b
   14001298d:	add    BYTE PTR [rsi+0x0],al
   140012990:	jb     0x140012992
   140012992:	(bad)  
   140012993:	add    BYTE PTR [rbp+0x0],ch
   140012996:	add    BYTE PTR gs:[rdi+0x0],dh
   14001299a:	outs   dx,DWORD PTR ds:[rsi]
   14001299b:	add    BYTE PTR [rdx+0x0],dh
   14001299e:	imul   eax,DWORD PTR [rax],0x20
   1400129a1:	add    BYTE PTR [rbx+0x0],dl
   1400129a4:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400129a9:	add    BYTE PTR [rax+0x0],dh
   1400129ac:	pop    rsp
   1400129ad:	add    BYTE PTR [rsi+0x0],cl
   1400129b0:	add    BYTE PTR [rax+0x0],r10b
   1400129b4:	pop    rsp
   1400129b5:	add    BYTE PTR [rsi+0x0],dh
   1400129b8:	xor    al,0x0
   1400129ba:	pop    rsp
   1400129bb:	add    BYTE PTR [rsi+0x0],al
   1400129be:	jne    0x1400129c0
   1400129c0:	ins    BYTE PTR es:[rdi],dx
   1400129c1:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   1400129cd:	add    BYTE PTR [rax],al
   1400129cf:	add    BYTE PTR [rbx+0x0],dl
   1400129d2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400129d6:	push   rsp
   1400129d7:	add    BYTE PTR [rdi+0x0],dl
   1400129da:	add    BYTE PTR [r10+0x0],dl
   1400129de:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   1400129e3:	add    BYTE PTR [rcx+0x0],ch
   1400129e6:	movsxd eax,DWORD PTR [rax]
   1400129e8:	jb     0x1400129ea
   1400129ea:	outs   dx,DWORD PTR ds:[rsi]
   1400129eb:	add    BYTE PTR [rbx+0x0],dh
   1400129ee:	outs   dx,DWORD PTR ds:[rsi]
   1400129ef:	add    BYTE PTR [rsi+0x0],ah
   1400129f2:	je     0x1400129f4
   1400129f4:	pop    rsp
   1400129f5:	add    BYTE PTR [rsi+0x0],cl
   1400129f8:	add    BYTE PTR [r8+rax*1+0x20],r10b
   1400129fd:	add    BYTE PTR [rsi+0x0],al
   140012a00:	jb     0x140012a02
   140012a02:	(bad)  
   140012a03:	add    BYTE PTR [rbp+0x0],ch
   140012a06:	add    BYTE PTR gs:[rdi+0x0],dh
   140012a0a:	outs   dx,DWORD PTR ds:[rsi]
   140012a0b:	add    BYTE PTR [rdx+0x0],dh
   140012a0e:	imul   eax,DWORD PTR [rax],0x20
   140012a11:	add    BYTE PTR [rbx+0x0],dl
   140012a14:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140012a19:	add    BYTE PTR [rax+0x0],dh
   140012a1c:	pop    rsp
   140012a1d:	add    BYTE PTR [rsi+0x0],cl
   140012a20:	add    BYTE PTR [rax+0x0],r10b
   140012a24:	pop    rsp
   140012a25:	add    BYTE PTR [rsi+0x0],dh
   140012a28:	xor    al,0x0
   140012a2a:	pop    rsp
   140012a2b:	add    BYTE PTR [rbx+0x0],al
   140012a2e:	ins    BYTE PTR es:[rdi],dx
   140012a2f:	add    BYTE PTR [rcx+0x0],ch
   140012a32:	add    BYTE PTR gs:[rsi+0x0],ch
   140012a36:	je     0x140012a38
	...
   140012a40:	push   rbx
   140012a41:	add    BYTE PTR [rdi+0x0],cl
   140012a44:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140012a49:	add    BYTE PTR [rcx+0x0],al
   140012a4c:	push   rdx
   140012a4d:	add    BYTE PTR [rbp+0x0],al
   140012a50:	pop    rsp
   140012a51:	add    BYTE PTR [rbp+0x0],cl
   140012a54:	imul   eax,DWORD PTR [rax],0x720063
   140012a5a:	outs   dx,DWORD PTR ds:[rsi]
   140012a5b:	add    BYTE PTR [rbx+0x0],dh
   140012a5e:	outs   dx,DWORD PTR ds:[rsi]
   140012a5f:	add    BYTE PTR [rsi+0x0],ah
   140012a62:	je     0x140012a64
   140012a64:	pop    rsp
   140012a65:	add    BYTE PTR [rsi+0x0],cl
   140012a68:	add    BYTE PTR [r8+rax*1+0x20],r10b
   140012a6d:	add    BYTE PTR [rsi+0x0],al
   140012a70:	jb     0x140012a72
   140012a72:	(bad)  
   140012a73:	add    BYTE PTR [rbp+0x0],ch
   140012a76:	add    BYTE PTR gs:[rdi+0x0],dh
   140012a7a:	outs   dx,DWORD PTR ds:[rsi]
   140012a7b:	add    BYTE PTR [rdx+0x0],dh
   140012a7e:	imul   eax,DWORD PTR [rax],0x20
   140012a81:	add    BYTE PTR [rbx+0x0],dl
   140012a84:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140012a89:	add    BYTE PTR [rax+0x0],dh
   140012a8c:	pop    rsp
   140012a8d:	add    BYTE PTR [rsi+0x0],cl
   140012a90:	add    BYTE PTR [rax+0x0],r10b
   140012a94:	pop    rsp
   140012a95:	add    BYTE PTR [rsi+0x0],dh
   140012a98:	xor    al,0x0
   140012a9a:	pop    rsp
   140012a9b:	add    BYTE PTR [rip+0x7300],ah        # 0x140019da1
   140012aa1:	add    BYTE PTR [rax],al
   140012aa3:	add    BYTE PTR [rax],al
   140012aa5:	add    BYTE PTR [rax],al
   140012aa7:	add    BYTE PTR [rsi+0x0],dl
   140012aaa:	push   rbx
   140012aab:	add    BYTE PTR [rax+rax*1+0x4f],dl
   140012aaf:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140012ab3:	add    BYTE PTR [rcx+0x0],ah
   140012ab6:	add    BYTE PTR fs:[rbp+0x0],ah
   140012aba:	jb     0x140012abc
   140012abc:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140012ac1:	add    BYTE PTR [rax+rax*1+0x0],ch
   140012ac5:	add    BYTE PTR [rax],al
   140012ac7:	add    BYTE PTR [rsi+0x0],dh
   140012aca:	xor    al,BYTE PTR [rax]
   140012acc:	add    BYTE PTR cs:[rax],dh
   140012acf:	add    BYTE PTR [rsi],ch
   140012ad1:	add    BYTE PTR [rip+0x37003000],dh        # 0x177015ad7
   140012ad7:	add    BYTE PTR [rdx],dh
   140012ad9:	add    BYTE PTR [rdi],dh
   140012adb:	add    BYTE PTR [rax],al
   140012add:	add    BYTE PTR [rax],al
   140012adf:	add    BYTE PTR [rbp+0x6e],al
   140012ae2:	jae    0x140012b59
   140012ae4:	jb     0x140012b4b
   140012ae6:	push   rsi
   140012ae7:	push   rbx
   140012ae8:	push   rsp
   140012ae9:	rex.WRXB
   140012aea:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140012aec:	ins    DWORD PTR es:[rdi],dx
   140012aed:	jo     0x140012b5e
   140012aef:	outs   dx,BYTE PTR ds:[rsi]
   140012af0:	outs   dx,BYTE PTR gs:[rsi]
   140012af2:	je     0x140012af4
	...
   140012b00:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140012b04:	movsxd eax,DWORD PTR [rax]
   140012b06:	jb     0x140012b08
   140012b08:	outs   dx,DWORD PTR ds:[rsi]
   140012b09:	add    BYTE PTR [rbx+0x0],dh
   140012b0c:	outs   dx,DWORD PTR ds:[rsi]
   140012b0d:	add    BYTE PTR [rsi+0x0],ah
   140012b10:	je     0x140012b12
   140012b12:	add    BYTE PTR cs:[rsi+0x0],dl
   140012b16:	imul   eax,DWORD PTR [rax],0x750073
   140012b1c:	(bad)  
   140012b1d:	add    BYTE PTR [rax+rax*1+0x53],ch
   140012b21:	add    BYTE PTR [rax+rax*1+0x75],dh
   140012b25:	add    BYTE PTR [rax+rax*1+0x69],ah
   140012b29:	add    BYTE PTR [rdi+0x0],ch
   140012b2c:	add    BYTE PTR cs:[rax+rax*1+0x6f],dl
   140012b31:	add    BYTE PTR [rdi+0x0],ch
   140012b34:	ins    BYTE PTR es:[rdi],dx
   140012b35:	add    BYTE PTR [rbx+0x0],dh
   140012b38:	add    BYTE PTR cs:[rdi+0x0],cl
   140012b3c:	data16 add BYTE PTR [rsi+0x0],ah
   140012b40:	imul   eax,DWORD PTR [rax],0x650063
   140012b46:	add    BYTE PTR cs:[rdx+0x0],dl
   140012b4a:	jne    0x140012b4c
   140012b4c:	outs   dx,BYTE PTR ds:[rsi]
   140012b4d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012b51:	add    BYTE PTR [rbp+0x0],ch
   140012b54:	add    BYTE PTR gs:[rsi],ch
   140012b57:	add    BYTE PTR [rsi+0x0],dh
   140012b5a:	xor    DWORD PTR [rax],eax
   140012b5c:	xor    BYTE PTR [rax],al
   140012b5e:	add    BYTE PTR cs:[rax],dh
   140012b61:	add    BYTE PTR [rax+rax*1],ch
   140012b64:	and    BYTE PTR [rax],al
   140012b66:	push   rsi
   140012b67:	add    BYTE PTR [rbp+0x0],ah
   140012b6a:	jb     0x140012b6c
   140012b6c:	jae    0x140012b6e
   140012b6e:	imul   eax,DWORD PTR [rax],0x6e006f
   140012b74:	cmp    eax,0x30003100
   140012b79:	add    BYTE PTR [rsi],ch
   140012b7b:	add    BYTE PTR [rax],dh
   140012b7d:	add    BYTE PTR [rsi],ch
   140012b7f:	add    BYTE PTR [rax],dh
   140012b81:	add    BYTE PTR [rsi],ch
   140012b83:	add    BYTE PTR [rax],dh
   140012b85:	add    BYTE PTR [rax+rax*1],ch
   140012b88:	and    BYTE PTR [rax],al
   140012b8a:	rex.XB add BYTE PTR [r13+0x0],sil
   140012b8e:	ins    BYTE PTR es:[rdi],dx
   140012b8f:	add    BYTE PTR [rax+rax*1+0x75],dh
   140012b93:	add    BYTE PTR [rdx+0x0],dh
   140012b96:	add    BYTE PTR gs:[rip+0x65006e00],bh        # 0x1a501999d
   140012b9d:	add    BYTE PTR [rbp+0x0],dh
   140012ba0:	je     0x140012ba2
   140012ba2:	jb     0x140012ba4
   140012ba4:	(bad)  
   140012ba5:	add    BYTE PTR [rax+rax*1+0x2c],ch
   140012ba9:	add    BYTE PTR [rax],ah
   140012bab:	add    BYTE PTR [rax+0x0],dl
   140012bae:	jne    0x140012bb0
   140012bb0:	(bad)  
   140012bb1:	add    BYTE PTR [rax+rax*1+0x69],ch
   140012bb5:	add    BYTE PTR [rbx+0x0],ah
   140012bb8:	rex.WXB add BYTE PTR [r13+0x0],spl
   140012bbc:	jns    0x140012bbe
   140012bbe:	push   rsp
   140012bbf:	add    BYTE PTR [rdi+0x0],ch
   140012bc2:	imul   eax,DWORD PTR [rax],0x65
   140012bc5:	add    BYTE PTR [rsi+0x0],ch
   140012bc8:	cmp    eax,0x30006200
   140012bcd:	add    BYTE PTR [rbx],dh
   140012bcf:	add    BYTE PTR [rsi+0x0],ah
   140012bd2:	xor    eax,0x37006600
   140012bd7:	add    BYTE PTR [rsi+0x0],ah
   140012bda:	xor    DWORD PTR [rax],eax
   140012bdc:	xor    DWORD PTR [rax],eax
   140012bde:	add    BYTE PTR fs:[rip+0x61003000],dh        # 0x1a1015be5
   140012be5:	add    BYTE PTR [rbx],dh
   140012be7:	add    BYTE PTR [rcx+0x0],ah
   140012bea:	add    BYTE PTR [rax],al
   140012bec:	add    BYTE PTR [rax],al
   140012bee:	add    BYTE PTR [rax],al
   140012bf0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140012bf4:	movsxd eax,DWORD PTR [rax]
   140012bf6:	jb     0x140012bf8
   140012bf8:	outs   dx,DWORD PTR ds:[rsi]
   140012bf9:	add    BYTE PTR [rbx+0x0],dh
   140012bfc:	outs   dx,DWORD PTR ds:[rsi]
   140012bfd:	add    BYTE PTR [rsi+0x0],ah
   140012c00:	je     0x140012c02
   140012c02:	add    BYTE PTR cs:[rsi+0x0],dl
   140012c06:	imul   eax,DWORD PTR [rax],0x750073
   140012c0c:	(bad)  
   140012c0d:	add    BYTE PTR [rax+rax*1+0x53],ch
   140012c11:	add    BYTE PTR [rax+rax*1+0x75],dh
   140012c15:	add    BYTE PTR [rax+rax*1+0x69],ah
   140012c19:	add    BYTE PTR [rdi+0x0],ch
   140012c1c:	add    BYTE PTR cs:[rax+rax*1+0x6f],dl
   140012c21:	add    BYTE PTR [rdi+0x0],ch
   140012c24:	ins    BYTE PTR es:[rdi],dx
   140012c25:	add    BYTE PTR [rbx+0x0],dh
   140012c28:	add    BYTE PTR cs:[rdi+0x0],cl
   140012c2c:	data16 add BYTE PTR [rsi+0x0],ah
   140012c30:	imul   eax,DWORD PTR [rax],0x650063
   140012c36:	add    BYTE PTR cs:[rdx+0x0],dl
   140012c3a:	jne    0x140012c3c
   140012c3c:	outs   dx,BYTE PTR ds:[rsi]
   140012c3d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012c41:	add    BYTE PTR [rbp+0x0],ch
   140012c44:	add    BYTE PTR gs:[rsi],ch
   140012c47:	add    BYTE PTR [rcx+0x0],cl
   140012c4a:	outs   dx,BYTE PTR ds:[rsi]
   140012c4b:	add    BYTE PTR [rbx+0x0],dh
   140012c4e:	je     0x140012c50
   140012c50:	(bad)  
   140012c51:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140012c55:	add    BYTE PTR [rbp+0x0],ah
   140012c58:	jb     0x140012c5a
   140012c5a:	add    BYTE PTR cs:[rcx+0x0],cl
   140012c5e:	outs   dx,BYTE PTR ds:[rsi]
   140012c5f:	add    BYTE PTR [rbx+0x0],dh
   140012c62:	je     0x140012c64
   140012c64:	(bad)  
   140012c65:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140012c69:	add    BYTE PTR [rbp+0x0],ah
   140012c6c:	jb     0x140012c6e
   140012c6e:	add    BYTE PTR [r14+0x0],r13b
   140012c72:	je     0x140012c74
   140012c74:	jb     0x140012c76
   140012c76:	jns    0x140012c78
   140012c78:	push   rax
   140012c79:	add    BYTE PTR [rdi+0x0],ch
   140012c7c:	imul   eax,DWORD PTR [rax],0x74006e
	...
   140012c8e:	add    BYTE PTR [rax],al
   140012c90:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140012c94:	movsxd eax,DWORD PTR [rax]
   140012c96:	jb     0x140012c98
   140012c98:	outs   dx,DWORD PTR ds:[rsi]
   140012c99:	add    BYTE PTR [rbx+0x0],dh
   140012c9c:	outs   dx,DWORD PTR ds:[rsi]
   140012c9d:	add    BYTE PTR [rsi+0x0],ah
   140012ca0:	je     0x140012ca2
   140012ca2:	add    BYTE PTR cs:[rsi+0x0],dl
   140012ca6:	imul   eax,DWORD PTR [rax],0x750073
   140012cac:	(bad)  
   140012cad:	add    BYTE PTR [rax+rax*1+0x53],ch
   140012cb1:	add    BYTE PTR [rax+rax*1+0x75],dh
   140012cb5:	add    BYTE PTR [rax+rax*1+0x69],ah
   140012cb9:	add    BYTE PTR [rdi+0x0],ch
   140012cbc:	add    BYTE PTR cs:[rax+rax*1+0x6f],dl
   140012cc1:	add    BYTE PTR [rdi+0x0],ch
   140012cc4:	ins    BYTE PTR es:[rdi],dx
   140012cc5:	add    BYTE PTR [rbx+0x0],dh
   140012cc8:	add    BYTE PTR cs:[rdi+0x0],cl
   140012ccc:	data16 add BYTE PTR [rsi+0x0],ah
   140012cd0:	imul   eax,DWORD PTR [rax],0x650063
   140012cd6:	add    BYTE PTR cs:[rdx+0x0],dl
   140012cda:	jne    0x140012cdc
   140012cdc:	outs   dx,BYTE PTR ds:[rsi]
   140012cdd:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012ce1:	add    BYTE PTR [rbp+0x0],ch
   140012ce4:	add    BYTE PTR gs:[rax+rax*1],ch
   140012ce8:	and    BYTE PTR [rax],al
   140012cea:	push   rsi
   140012ceb:	add    BYTE PTR [rbp+0x0],ah
   140012cee:	jb     0x140012cf0
   140012cf0:	jae    0x140012cf2
   140012cf2:	imul   eax,DWORD PTR [rax],0x6e006f
   140012cf8:	cmp    eax,0x30003100
   140012cfd:	add    BYTE PTR [rsi],ch
   140012cff:	add    BYTE PTR [rax],dh
   140012d01:	add    BYTE PTR [rsi],ch
   140012d03:	add    BYTE PTR [rax],dh
   140012d05:	add    BYTE PTR [rsi],ch
   140012d07:	add    BYTE PTR [rax],dh
   140012d09:	add    BYTE PTR [rax+rax*1],ch
   140012d0c:	and    BYTE PTR [rax],al
   140012d0e:	rex.XB add BYTE PTR [r13+0x0],sil
   140012d12:	ins    BYTE PTR es:[rdi],dx
   140012d13:	add    BYTE PTR [rax+rax*1+0x75],dh
   140012d17:	add    BYTE PTR [rdx+0x0],dh
   140012d1a:	add    BYTE PTR gs:[rip+0x65006e00],bh        # 0x1a5019b21
   140012d21:	add    BYTE PTR [rbp+0x0],dh
   140012d24:	je     0x140012d26
   140012d26:	jb     0x140012d28
   140012d28:	(bad)  
   140012d29:	add    BYTE PTR [rax+rax*1+0x2c],ch
   140012d2d:	add    BYTE PTR [rax],ah
   140012d2f:	add    BYTE PTR [rax+0x0],dl
   140012d32:	jne    0x140012d34
   140012d34:	(bad)  
   140012d35:	add    BYTE PTR [rax+rax*1+0x69],ch
   140012d39:	add    BYTE PTR [rbx+0x0],ah
   140012d3c:	rex.WXB add BYTE PTR [r13+0x0],spl
   140012d40:	jns    0x140012d42
   140012d42:	push   rsp
   140012d43:	add    BYTE PTR [rdi+0x0],ch
   140012d46:	imul   eax,DWORD PTR [rax],0x65
   140012d49:	add    BYTE PTR [rsi+0x0],ch
   140012d4c:	cmp    eax,0x30006200
   140012d51:	add    BYTE PTR [rbx],dh
   140012d53:	add    BYTE PTR [rsi+0x0],ah
   140012d56:	xor    eax,0x37006600
   140012d5b:	add    BYTE PTR [rsi+0x0],ah
   140012d5e:	xor    DWORD PTR [rax],eax
   140012d60:	xor    DWORD PTR [rax],eax
   140012d62:	add    BYTE PTR fs:[rip+0x61003000],dh        # 0x1a1015d69
   140012d69:	add    BYTE PTR [rbx],dh
   140012d6b:	add    BYTE PTR [rcx+0x0],ah
   140012d6e:	add    BYTE PTR [rax],al
   140012d70:	rex.RXB
   140012d71:	gs je  0x140012dca
   140012d74:	(bad)  
   140012d75:	ins    BYTE PTR es:[rdi],dx
   140012d76:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x7461706d
   140012d7e:	imul   esp,DWORD PTR [rdx+0x6c],0x61724665
   140012d85:	ins    DWORD PTR es:[rdi],dx
   140012d86:	gs ja  0x140012df8
   140012d89:	jb     0x140012df6
   140012d8b:	add    BYTE PTR [rax],al
   140012d8d:	add    BYTE PTR [rax],al
   140012d8f:	add    BYTE PTR [rsi+0x0],dh
   140012d92:	jae    0x140012d94
   140012d94:	je     0x140012d96
   140012d96:	outs   dx,DWORD PTR ds:[rsi]
   140012d97:	add    BYTE PTR [rbp+0x0],ah
   140012d9a:	add    BYTE PTR gs:[rsi],ch
   140012d9d:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140012da1:	add    BYTE PTR [rax+rax*1+0x0],ch
   140012da5:	add    BYTE PTR [rax],al
   140012da7:	add    BYTE PTR [rax+rax*1+0x61],dh
   140012dab:	add    BYTE PTR [rdx+0x0],dh
   140012dae:	add    BYTE PTR [ebp+0x0],ah
   140012db2:	je     0x140012db4
   140012db4:	push   rsi
   140012db5:	add    BYTE PTR [rbp+0x0],ah
   140012db8:	jb     0x140012dba
   140012dba:	jae    0x140012dbc
   140012dbc:	imul   eax,DWORD PTR [rax],0x6e006f
   140012dc2:	add    BYTE PTR [rax],al
   140012dc4:	add    BYTE PTR [rax],al
   140012dc6:	add    BYTE PTR [rax],al
   140012dc8:	jo     0x140012dca
   140012dca:	jb     0x140012dcc
   140012dcc:	outs   dx,DWORD PTR ds:[rsi]
   140012dcd:	add    BYTE PTR [rsi+0x0],ah
   140012dd0:	imul   eax,DWORD PTR [rax],0x65006c
   140012dd6:	add    BYTE PTR [rax],al
   140012dd8:	jae    0x140012dda
   140012dda:	jne    0x140012ddc
   140012ddc:	jo     0x140012dde
   140012dde:	jo     0x140012de0
   140012de0:	outs   dx,DWORD PTR ds:[rsi]
   140012de1:	add    BYTE PTR [rdx+0x0],dh
   140012de4:	je     0x140012de6
   140012de6:	add    BYTE PTR gs:[rax+rax*1+0x52],ah
   140012deb:	add    BYTE PTR [rbp+0x0],dh
   140012dee:	outs   dx,BYTE PTR ds:[rsi]
   140012def:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012df3:	add    BYTE PTR [rbp+0x0],ch
   140012df6:	add    BYTE PTR gs:[rax],al
   140012df9:	add    BYTE PTR [rax],al
   140012dfb:	add    BYTE PTR [rax],al
   140012dfd:	add    BYTE PTR [rax],al
   140012dff:	add    BYTE PTR [rsi+0x0],dl
   140012e02:	push   rbx
   140012e03:	add    BYTE PTR [rax+rax*1+0x4f],dl
   140012e07:	add    BYTE PTR [rcx+0x0],cl
   140012e0a:	outs   dx,BYTE PTR ds:[rsi]
   140012e0b:	add    BYTE PTR [rbx+0x0],dh
   140012e0e:	je     0x140012e10
   140012e10:	(bad)  
   140012e11:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140012e15:	add    BYTE PTR [rbp+0x0],ah
   140012e18:	jb     0x140012e1a
   140012e1a:	push   rbp
   140012e1b:	add    BYTE PTR [rcx+0x0],cl
   140012e1e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140012e23:	add    BYTE PTR [rax+rax*1+0x0],ch
   140012e27:	add    BYTE PTR [rbx+0x0],al
   140012e2a:	outs   dx,DWORD PTR ds:[rsi]
   140012e2b:	add    BYTE PTR [rbp+0x0],dh
   140012e2e:	ins    BYTE PTR es:[rdi],dx
   140012e2f:	add    BYTE PTR [rax+rax*1+0x20],ah
   140012e33:	add    BYTE PTR [rsi+0x0],ch
   140012e36:	outs   dx,DWORD PTR ds:[rsi]
   140012e37:	add    BYTE PTR [rax+rax*1+0x20],dh
   140012e3b:	add    BYTE PTR [rdx+0x0],dh
   140012e3e:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   140012e43:	add    BYTE PTR [rcx+0x0],ch
   140012e46:	add    BYTE PTR gs:[rsi+0x0],dh
   140012e4a:	add    BYTE PTR gs:[rax],ah
   140012e4d:	add    BYTE PTR [rdx+0x0],dh
   140012e50:	add    BYTE PTR gs:[rbx+0x0],dh
   140012e54:	outs   dx,DWORD PTR ds:[rsi]
   140012e55:	add    BYTE PTR [rbp+0x0],dh
   140012e58:	jb     0x140012e5a
   140012e5a:	movsxd eax,DWORD PTR [rax]
   140012e5c:	add    BYTE PTR gs:[rax],al
   140012e5f:	add    ah,bl
   140012e61:	xchg   esi,eax
   140012e62:	test   BYTE PTR [rip+0x36632b29],0xad        # 0x176645992
   140012e69:	mov    eax,esp
   140012e6b:	cmp    BYTE PTR [rdx+rsi*8+0x672313a7],bl
   140012e72:	(bad)  
   140012e73:	retf   
   140012e74:	cmp    ch,BYTE PTR [rbx+0x409c11d2]
   140012e7a:	add    al,al
   140012e7c:	rex.WRXB movabs ds:0xab3acb2f67223e0a,rax
   140012e86:	rcl    BYTE PTR [rcx],cl
   140012e88:	pushf  
   140012e89:	add    al,al
   140012e8c:	rex.WRXB movabs ds:0xba2fbd39d1d23e0a,rax
   140012e96:	push   0x48
   140012e98:	mov    DWORD PTR [rax+0x46cbb0b4],esi
   140012e9e:	push   0x4c004391
   140012ea3:	add    BYTE PTR [rbx+0x0],dl
   140012ea6:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   140012eab:	add    BYTE PTR [rbx+0x0],bh
   140012eae:	xor    BYTE PTR [rax],al
   140012eb0:	xor    BYTE PTR [rax],al
   140012eb2:	xor    BYTE PTR [rax],al
   140012eb4:	rex.XB add BYTE PTR [r8],sil
   140012eb7:	add    BYTE PTR [rcx],dh
   140012eb9:	add    BYTE PTR [rdx],dh
   140012ebb:	add    BYTE PTR [rsi],dh
   140012ebd:	add    BYTE PTR [rip+0x30003000],ch        # 0x170015ec3
   140012ec3:	add    BYTE PTR [rax],dh
   140012ec5:	add    BYTE PTR [rax],dh
   140012ec7:	add    BYTE PTR [rip+0x30003000],ch        # 0x170015ecd
   140012ecd:	add    BYTE PTR [rax],dh
   140012ecf:	add    BYTE PTR [rax],dh
   140012ed1:	add    BYTE PTR [rip+0x30004300],ch        # 0x1700171d7
   140012ed7:	add    BYTE PTR [rax],dh
   140012ed9:	add    BYTE PTR [rax],dh
   140012edb:	add    BYTE PTR [rip+0x30003000],ch        # 0x170015ee1
   140012ee1:	add    BYTE PTR [rax],dh
   140012ee3:	add    BYTE PTR [rax],dh
   140012ee5:	add    BYTE PTR [rax],dh
   140012ee7:	add    BYTE PTR [rax],dh
   140012ee9:	add    BYTE PTR [rax],dh
   140012eeb:	add    BYTE PTR [rax],dh
   140012eed:	add    BYTE PTR [rax],dh
   140012eef:	add    BYTE PTR [rax],dh
   140012ef1:	add    BYTE PTR [rax+rax*1],dh
   140012ef4:	add    BYTE PTR ss:[rbp+0x0],bh
   140012ef8:	pop    rsp
   140012ef9:	add    BYTE PTR [rcx+0x0],cl
   140012efc:	outs   dx,BYTE PTR ds:[rsi]
   140012efd:	add    BYTE PTR [rax+0x0],dh
   140012f00:	jb     0x140012f02
   140012f02:	outs   dx,DWORD PTR ds:[rsi]
   140012f03:	add    BYTE PTR [rbx+0x0],ah
   140012f06:	push   rbx
   140012f07:	add    BYTE PTR [rbp+0x0],ah
   140012f0a:	jb     0x140012f0c
   140012f0c:	jbe    0x140012f0e
   140012f0e:	add    BYTE PTR gs:[rdx+0x0],dh
   140012f12:	xor    eax,DWORD PTR [rax]
   140012f14:	xor    al,BYTE PTR [rax]
   140012f16:	add    BYTE PTR [rax],al
   140012f18:	(bad)  
   140012f19:	add    BYTE PTR [rbx+0x0],dh
   140012f1c:	imul   eax,DWORD PTR [rax],0x65006c
   140012f22:	outs   dx,BYTE PTR ds:[rsi]
   140012f23:	add    BYTE PTR [rax+rax*1+0x0],dh
   140012f27:	add    BYTE PTR [rdi],ch
   140012f29:	add    BYTE PTR [rbx+0x0],dh
   140012f2c:	add    BYTE PTR [rax],al
   140012f2e:	add    BYTE PTR [rax],al
   140012f30:	xor    eax,DWORD PTR [rax]
   140012f32:	add    BYTE PTR cs:[rip+0x34000000],dh        # 0x174012f39
   140012f39:	add    BYTE PTR [rsi],ch
   140012f3b:	add    BYTE PTR [rax],dh
   140012f3d:	add    BYTE PTR [rax],al
   140012f3f:	add    BYTE PTR [rax],dh
   140012f41:	add    BYTE PTR [rax+0x0],bh
   140012f44:	and    eax,0x38003000
   140012f49:	add    BYTE PTR [rax+0x0],bl
   140012f4c:	add    BYTE PTR [rax],al
   140012f4e:	add    BYTE PTR [rax],al
   140012f50:	and    eax,0x5c007500
   140012f55:	add    BYTE PTR [rip+0x7300],ah        # 0x14001a25b
   140012f5b:	add    BYTE PTR [rax],al
   140012f5d:	add    BYTE PTR [rax],al
   140012f5f:	add    BYTE PTR [rbp+0x0],cl
   140012f62:	push   rbx
   140012f63:	add    BYTE PTR [rdi+0x0],cl
   140012f66:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140012f6b:	add    BYTE PTR [rax+rax*1+0x0],ch
   140012f6f:	add    BYTE PTR [rdi+0x4d],bl
   140012f72:	jae    0x140012fe3
   140012f74:	rex.RXB
   140012f75:	gs je  0x140012fcd
   140012f78:	rex.WB
   140012f79:	movsxd r13,DWORD PTR [rcx+0x64]
   140012f7d:	xor    BYTE PTR [rax],al
   140012f80:	rex.XB
   140012f81:	rex.WR push rdx
   140012f83:	rex.XB jb 0x140012feb
   140012f86:	(bad)  
   140012f87:	je     0x140012fee
   140012f89:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140012f8b:	jae    0x140013001
   140012f8d:	(bad)  
   140012f8e:	outs   dx,BYTE PTR ds:[rsi]
   140012f8f:	movsxd esp,DWORD PTR [rbp+0x0]
   140012f92:	add    BYTE PTR [rax],al
   140012f94:	add    BYTE PTR [rax],al
   140012f96:	add    BYTE PTR [rax],al
   140012f98:	jbe    0x140012f9a
   140012f9a:	and    eax,0x2e006400
   140012f9f:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e0193a5
   140012fa5:	add    BYTE PTR [rip+0x6400],ah        # 0x1400193ab
   140012fab:	add    BYTE PTR [rax],al
   140012fad:	add    BYTE PTR [rax],al
   140012faf:	add    BYTE PTR [rsi-0x4c2ccd25],bl
   140012fb5:	mov    ecx,0x7824125
   140012fba:	movabs eax,ds:0x69004d1632f58448
   140012fc3:	add    BYTE PTR [rbx+0x0],ah
   140012fc6:	jb     0x140012fc8
   140012fc8:	outs   dx,DWORD PTR ds:[rsi]
   140012fc9:	add    BYTE PTR [rbx+0x0],dh
   140012fcc:	outs   dx,DWORD PTR ds:[rsi]
   140012fcd:	add    BYTE PTR [rsi+0x0],ah
   140012fd0:	je     0x140012fd2
   140012fd2:	and    BYTE PTR [rax],al
   140012fd4:	push   rbx
   140012fd5:	add    BYTE PTR [rax+0x0],ch
   140012fd8:	(bad)  
   140012fd9:	add    BYTE PTR [rdx+0x0],dh
   140012fdc:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   140012fe1:	add    BYTE PTR [rsi+0x0],dl
   140012fe4:	push   rbx
   140012fe5:	add    BYTE PTR [rax+rax*1+0x4f],dl
   140012fe9:	add    BYTE PTR [rax],al
   140012feb:	add    BYTE PTR [rax],al
   140012fed:	add    BYTE PTR [rax],al
   140012fef:	add    BYTE PTR [rcx],dh
   140012ff1:	add    BYTE PTR [rax],dh
   140012ff3:	add    BYTE PTR [rsi],ch
   140012ff5:	add    BYTE PTR [rax],dh
   140012ff7:	add    BYTE PTR [rax+rax*1+0x56],bl
   140012ffb:	add    BYTE PTR [rbx+0x0],dl
   140012ffe:	push   rsp
   140012fff:	add    BYTE PTR [rdi+0x0],cl
   140013002:	rex.WB add BYTE PTR [r14+0x0],bpl
   140013006:	jae    0x140013008
   140013008:	je     0x14001300a
   14001300a:	(bad)  
   14001300b:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001300f:	add    BYTE PTR [rbp+0x0],ah
   140013012:	jb     0x140013014
   140013014:	add    BYTE PTR cs:[rbp+0x0],ah
   140013018:	js     0x14001301a
   14001301a:	add    BYTE PTR gs:[rax],al
   14001301d:	add    BYTE PTR [rax],al
   14001301f:	add    BYTE PTR [rcx],bh
   140013021:	add    BYTE PTR [rsi],ch
   140013023:	add    BYTE PTR [rax],dh
   140013025:	add    BYTE PTR [rax+rax*1+0x56],bl
   140013029:	add    BYTE PTR [rbx+0x0],dl
   14001302c:	push   rsp
   14001302d:	add    BYTE PTR [rdi+0x0],cl
   140013030:	rex.WB add BYTE PTR [r14+0x0],bpl
   140013034:	jae    0x140013036
   140013036:	je     0x140013038
   140013038:	(bad)  
   140013039:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001303d:	add    BYTE PTR [rbp+0x0],ah
   140013040:	jb     0x140013042
   140013042:	add    BYTE PTR cs:[rbp+0x0],ah
   140013046:	js     0x140013048
   140013048:	add    BYTE PTR gs:[rax],al
   14001304b:	add    BYTE PTR [rdx+0x53],dl
   14001304e:	rex.R push rbx
   140013050:	add    eax,0xa42239a9
   140013055:	add    eax,0x6cb5429a
   14001305a:	pop    rax
   14001305b:	(bad)  
   14001305c:	add    al,0xc3
   14001305e:	adc    edx,ebx
   140013060:	add    al,BYTE PTR [rax]
   140013062:	add    BYTE PTR [rax],al
   140013064:	push   rsi
   140013065:	push   rbx
   140013066:	push   rsp
   140013067:	rex.WRXB
   140013068:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001306a:	jae    0x1400130e0
   14001306c:	(bad)  
   14001306d:	ins    BYTE PTR es:[rdi],dx
   14001306e:	ins    BYTE PTR es:[rdi],dx
   14001306f:	gs jb  0x1400130a0
   140013072:	jo     0x1400130d8
   140013074:	(bad)  
   140013075:	add    BYTE PTR [rax],al
   140013077:	add    BYTE PTR [rcx],al
	...
   140013081:	add    BYTE PTR [rax],al
   140013083:	add    al,dh
   140013085:	push   rcx
   140013086:	add    DWORD PTR [rax],eax
   140013088:	movabs al,ds:0x13078000130
	...
   1400130a5:	add    BYTE PTR [rax],al
   1400130a7:	add    BYTE PTR [rdx],al
   1400130a9:	add    BYTE PTR [rax],al
   1400130ab:	add    BYTE PTR [rax+0x130],bh
   1400130b1:	add    BYTE PTR [rax],al
   1400130b3:	add    BYTE PTR [rax],al
   1400130b5:	add    BYTE PTR [rax],al
   1400130b7:	add    al,dl
   1400130b9:	xor    BYTE PTR [rcx],al
   1400130bb:	add    al,bh
   1400130bd:	xor    BYTE PTR [rcx],al
	...
   1400130cf:	add    al,dh
   1400130d1:	push   rcx
   1400130d2:	add    DWORD PTR [rax],eax
   1400130d4:	add    DWORD PTR [rax],eax
   1400130d6:	add    BYTE PTR [rax],al
   1400130d8:	add    BYTE PTR [rax],al
   1400130da:	add    BYTE PTR [rax],al
   1400130dc:	(bad)  
   1400130dd:	(bad)  
   1400130de:	(bad)  
   1400130df:	inc    DWORD PTR [rax]
   1400130e1:	add    BYTE PTR [rax],al
   1400130e3:	add    BYTE PTR [rax+0x0],al
   1400130e6:	add    BYTE PTR [rax],al
   1400130e8:	movabs al,ds:0x130
   1400130f1:	add    BYTE PTR [rax],al
   1400130f3:	add    BYTE PTR [rax],al
   1400130f5:	add    BYTE PTR [rax],al
   1400130f7:	add    BYTE PTR [rax],bl
   1400130f9:	push   rdx
   1400130fa:	add    DWORD PTR [rax],eax
	...
   140013104:	(bad)  
   140013105:	(bad)  
   140013106:	(bad)  
   140013107:	inc    DWORD PTR [rax]
   140013109:	add    BYTE PTR [rax],al
   14001310b:	add    BYTE PTR [rax+0x0],al
   14001310e:	add    BYTE PTR [rax],al
   140013110:	and    BYTE PTR [rcx],dh
   140013112:	add    DWORD PTR [rax],eax
	...
   140013128:	add    DWORD PTR [rax],eax
   14001312a:	add    BYTE PTR [rax],al
   14001312c:	cmp    BYTE PTR [rcx],dh
   14001312e:	add    DWORD PTR [rax],eax
	...
   140013138:	clc    
   140013139:	xor    BYTE PTR [rcx],al
	...
   140013147:	add    BYTE PTR [rcx],al
	...
   140013151:	add    BYTE PTR [rax],al
   140013153:	add    BYTE PTR [rax],dl
   140013155:	(bad)  
   140013157:	add    BYTE PTR [rax+0x31],dh
   14001315a:	add    DWORD PTR [rax],eax
   14001315c:	xor    QWORD PTR [rcx],rax
	...
   140013177:	add    BYTE PTR [rdx],al
   140013179:	add    BYTE PTR [rax],al
   14001317b:	add    BYTE PTR [rax+0x131],cl
   140013181:	add    BYTE PTR [rax],al
   140013183:	add    BYTE PTR [rax],al
   140013185:	add    BYTE PTR [rax],al
   140013187:	add    BYTE PTR [rax-0x7fffecf],ah
   14001318d:	xor    BYTE PTR [rcx],al
	...
   14001319f:	add    BYTE PTR [rax],dl
   1400131a1:	(bad)  
   1400131a3:	add    BYTE PTR [rcx],al
   1400131a5:	add    BYTE PTR [rax],al
   1400131a7:	add    BYTE PTR [rax],al
   1400131a9:	add    BYTE PTR [rax],al
   1400131ab:	add    bh,bh
   1400131ad:	(bad)  
   1400131ae:	(bad)  
   1400131af:	inc    DWORD PTR [rax]
   1400131b1:	add    BYTE PTR [rax],al
   1400131b3:	add    BYTE PTR [rax+0x0],al
   1400131b6:	add    BYTE PTR [rax],al
   1400131b8:	jo     0x1400131eb
   1400131ba:	add    DWORD PTR [rax],eax
	...
   1400131c8:	add    DWORD PTR [rax],eax
	...
   1400131d2:	add    BYTE PTR [rax],al
   1400131d4:	sbb    BYTE PTR [rdx+0x1],dl
   1400131d7:	add    BYTE PTR [rax],ah
   1400131d9:	xor    DWORD PTR [rcx],eax
   1400131db:	add    al,cl
   1400131dd:	xor    DWORD PTR [rcx],eax
	...
   1400131ef:	add    BYTE PTR [rcx],al
	...
   1400131f9:	add    BYTE PTR [rax],al
   1400131fb:	add    BYTE PTR [rax],bh
   1400131fd:	(bad)  
   1400131ff:	add    BYTE PTR [rax],bl
   140013201:	xor    al,BYTE PTR [rcx]
   140013203:	add    al,dh
   140013205:	xor    DWORD PTR [rcx],eax
	...
   14001321f:	add    BYTE PTR [rcx],al
   140013221:	add    BYTE PTR [rax],al
   140013223:	add    BYTE PTR [rax],dh
   140013225:	xor    al,BYTE PTR [rcx]
	...
   14001322f:	add    BYTE PTR [rax+0x32],al
   140013232:	add    DWORD PTR [rax],eax
	...
   140013240:	cmp    BYTE PTR [rdx+0x1],ah
	...
   14001324b:	add    bh,bh
   14001324d:	(bad)  
   14001324e:	(bad)  
   14001324f:	inc    DWORD PTR [rax]
   140013251:	add    BYTE PTR [rax],al
   140013253:	add    BYTE PTR [rax+0x0],al
   140013256:	add    BYTE PTR [rax],al
   140013258:	sbb    BYTE PTR [rdx],dh
   14001325a:	add    DWORD PTR [rax],eax
	...
   140013288:	or     DWORD PTR [rdx],ecx
   14001328a:	add    al,0x0
   14001328c:	or     dh,BYTE PTR [rcx+rcx*1]
   14001328f:	add    BYTE PTR [rdx],cl
   140013291:	push   rdx
   140013292:	(bad)  
   140013293:	jo     0x140013241
   140013295:	rex.W add BYTE PTR [rax],al
   140013298:	add    DWORD PTR [rax],eax
   14001329a:	add    BYTE PTR [rax],al
   14001329c:	cmp    rax,QWORD PTR [rax]
   14001329f:	add    bh,ah
   1400132a1:	cmp    eax,DWORD PTR [rax]
   1400132a3:	add    BYTE PTR [rsi],dl
   1400132a5:	out    dx,eax
   1400132a6:	add    BYTE PTR [rax],al
   1400132a8:	out    0x3b,eax
   1400132aa:	add    BYTE PTR [rax],al
   1400132ac:	add    BYTE PTR [rax],al
   1400132ae:	add    BYTE PTR [rax],al
   1400132b0:	add    DWORD PTR [rax],eax
   1400132b2:	add    BYTE PTR [rax],al
   1400132b4:	add    DWORD PTR [rbx],ebx
   1400132b6:	or     al,BYTE PTR [rax]
   1400132b8:	sbb    eax,esp
   1400132ba:	ltr    WORD PTR [rbx]
   1400132bd:	je     0x1400132cd
   1400132bf:	add    BYTE PTR [rbx],bl
   1400132c1:	fs or  eax,0xc341b00
   1400132c7:	add    BYTE PTR [rbx],bl
   1400132c9:	xchg   edx,eax
   1400132ca:	adc    al,0x50
   1400132cc:	sbb    DWORD PTR [rdx],ecx
   1400132ce:	add    al,BYTE PTR [rax]
   1400132d0:	or     dh,BYTE PTR [rdx]
   1400132d2:	(bad)  
   1400132d3:	push   rax
   1400132d4:	(bad)  
   1400132d5:	jno    0x1400132d7
   1400132d7:	add    BYTE PTR [rax+0x19000103],ah
   1400132dd:	or     eax,0x62040001
   1400132e2:	add    BYTE PTR [rax],al
   1400132e4:	(bad)  
   1400132e5:	jno    0x1400132e7
   1400132e7:	add    BYTE PTR [rax+0x103],ah
   1400132ed:	add    BYTE PTR [rax],al
   1400132ef:	add    BYTE PTR [rax],al
   1400132f1:	add    BYTE PTR [rax],al
   1400132f3:	add    BYTE PTR [rcx],al
   1400132f5:	add    BYTE PTR [rax],al
   1400132f7:	add    BYTE PTR [rcx],al
   1400132f9:	add    BYTE PTR [rax],al
   1400132fb:	add    BYTE PTR [rax],al
   1400132fd:	xor    eax,DWORD PTR [rcx]
   1400132ff:	add    BYTE PTR [rax+0x0],al
	...
   14001330a:	add    BYTE PTR [rax],al
   14001330c:	cmp    ch,bh
   14001330e:	add    BYTE PTR [rax],al
   140013310:	cmp    BYTE PTR [rax],al
   140013312:	add    BYTE PTR [rax],al
   140013314:	(bad)  
   140013315:	(bad)  
   140013316:	(bad)  
   140013317:	inc    DWORD PTR [rax]
   140013319:	add    BYTE PTR [rax],al
   14001331b:	add    bh,bh
   14001331d:	(bad)  
   14001331e:	(bad)  
   14001331f:	inc    DWORD PTR [rax]
   140013321:	add    BYTE PTR [rax],al
   140013323:	add    BYTE PTR [rsi+rdi*1-0x10000],bh
   14001332a:	(bad)  
   14001332b:	dec    ecx
   14001332d:	add    BYTE PTR ds:[rax],al
   140013330:	add    BYTE PTR [rax],al
   140013332:	add    BYTE PTR [rax],al
   140013334:	iret   
   140013335:	add    BYTE PTR ds:[rax],al
   140013338:	(bad)  
   140013339:	(bad)  
   14001333a:	(bad)  
   14001333b:	(bad)  
   14001333c:	cmp    ch,bh
   14001333e:	add    BYTE PTR [rax],al
   140013340:	add    BYTE PTR [rax],al
   140013342:	add    BYTE PTR [rax],al
   140013344:	rex.RXB out dx,eax
   140013346:	add    BYTE PTR [rax],al
   140013348:	add    DWORD PTR [rax],eax
   14001334a:	add    BYTE PTR [rax],al
   14001334c:	rex.WR out dx,eax
   14001334e:	add    BYTE PTR [rax],al
   140013350:	add    BYTE PTR [rax],al
   140013352:	add    BYTE PTR [rax],al
   140013354:	add    DWORD PTR [rax+rcx*1],edx
   140013357:	add    BYTE PTR [rsp+riz*2],dl
   14001335a:	or     al,0x0
   14001335c:	adc    al,0x54
   14001335e:	or     eax,DWORD PTR [rax]
   140013360:	adc    al,0x34
   140013362:	or     al,BYTE PTR [rax]
   140013364:	adc    al,0x72
   140013366:	adc    BYTE PTR [rax+0x1],dh
   140013369:	(bad)  
   14001336b:	add    BYTE PTR [rdi],cl
   14001336d:	xor    al,0x6
   14001336f:	add    BYTE PTR [rdi],cl
   140013371:	xor    cl,BYTE PTR [rbx]
   140013373:	jo     0x140013386
   140013375:	sbb    al,0xa
   140013377:	add    BYTE PTR [rsp+riz*2],bl
   14001337a:	ltr    WORD PTR [rsp+rsi*1]
   14001337e:	(bad)  
   14001337f:	add    BYTE PTR [rdx+rsi*2],bl
   140013382:	sbb    al,dh
   140013384:	(bad)  
   140013385:	loopne 0x14001339b
   140013387:	rcl    BYTE PTR [rdx],1
   140013389:	rcl    BYTE PTR [rax],0x70
   14001338c:	lods   al,BYTE PTR ds:[rsi]
   14001338d:	rex.W add BYTE PTR [rax],al
   140013390:	add    DWORD PTR [rax],eax
   140013392:	add    BYTE PTR [rax],al
   140013394:	out    0x43,eax
   140013396:	add    BYTE PTR [rax],al
   140013398:	cmc    
   140013399:	add    BYTE PTR [rax],r8b
   14001339c:	(bad)  
   14001339d:	out    dx,eax
   14001339e:	add    BYTE PTR [rax],al
   1400133a0:	add    BYTE PTR [rax],al
   1400133a2:	add    BYTE PTR [rax],al
   1400133a4:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41c33b5
   1400133aa:	push   rcx
   1400133ab:	add    BYTE PTR [rbx],bl
   1400133ad:	push   rsp
   1400133ae:	push   rax
   1400133af:	add    BYTE PTR [rbx],bl
   1400133b1:	xor    al,0x4f
   1400133b3:	add    BYTE PTR [rbx],bl
   1400133b5:	add    DWORD PTR [rdx+0x0],ecx
   1400133b8:	adc    al,0xd0
   1400133ba:	adc    al,al
   1400133bc:	adc    BYTE PTR [rax+0x0],dh
   1400133bf:	add    ah,ah
   1400133c1:	mov    WORD PTR [rax],es
   1400133c3:	add    BYTE PTR [rax+0x2],al
   1400133c6:	add    BYTE PTR [rax],al
   1400133c8:	add    DWORD PTR [rax],esp
   1400133ca:	or     al,0x0
   1400133cc:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   1400133d0:	and    BYTE PTR [rax+rdx*1+0x0],dl
   1400133d4:	and    BYTE PTR [rsi+rcx*1],dh
   1400133d7:	add    BYTE PTR [rax],ah
   1400133d9:	jb     0x1400133f7
   1400133db:	lock sbb ah,al
   1400133de:	sbb    al,dl
   1400133e0:	(bad)  
   1400133e1:	rcl    BYTE PTR [rax+rsi*2],0x1
   1400133e5:	sbb    DWORD PTR [rdx],ecx
   1400133e7:	add    BYTE PTR [rcx],bl
   1400133e9:	je     0x1400133f6
   1400133eb:	add    BYTE PTR [rcx],bl
   1400133ed:	or     al,BYTE PTR fs:[rax]
   1400133f0:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   1400133f4:	sbb    DWORD PTR [rax+rcx*1],esi
   1400133f7:	add    BYTE PTR [rcx],bl
   1400133f9:	push   rdx
   1400133fa:	adc    eax,0x91501c0
   1400133ff:	add    BYTE PTR [rip+0x150005d4],dl        # 0x1550139d9
   140013405:	je     0x14001340b
   140013407:	add    BYTE PTR [rip+0x15000364],dl        # 0x155013771
   14001340d:	xor    al,0x2
   14001340f:	add    BYTE PTR [rip+0x10000e0],dl        # 0x1410134f5
   140013415:	or     al,0x6
   140013417:	add    BYTE PTR [rsp+rsi*1],cl
   14001341a:	or     al,0x0
   14001341c:	or     al,0x52
   14001341e:	or     BYTE PTR [rax+0x7],dh
   140013421:	(bad)  
   140013422:	(bad)  
   140013423:	push   rax
   140013424:	add    DWORD PTR [rbx+rcx*1],ebx
   140013427:	add    BYTE PTR [rsp+rsi*2],bl
   14001342a:	sbb    BYTE PTR [rax],al
   14001342c:	sbb    al,0x54
   14001342e:	(bad)  
   14001342f:	add    BYTE PTR [rsp+rsi*1],bl
   140013432:	(bad)  
   140013433:	add    BYTE PTR [rcx+rax*1],bl
   140013436:	adc    al,BYTE PTR [rax]
   140013438:	adc    eax,0x11d013e0
   14001343d:	rol    BYTE PTR [rax],0x0
   140013440:	adc    DWORD PTR [rdx],ecx
   140013442:	add    al,0x0
   140013444:	or     dh,BYTE PTR [rsi+rax*1]
   140013447:	add    BYTE PTR [rdx],cl
   140013449:	xor    al,BYTE PTR [rsi]
   14001344b:	jo     0x1400133f9
   14001344d:	rex.W add BYTE PTR [rax],al
   140013450:	add    al,BYTE PTR [rax]
   140013452:	add    BYTE PTR [rax],al
   140013454:	(bad)  
   140013455:	push   rsp
   140013456:	add    BYTE PTR [rax],al
   140013458:	loopne 0x1400134ae
   14001345a:	add    BYTE PTR [rax],al
   14001345c:	mov    ch,bh
   14001345e:	add    BYTE PTR [rax],al
   140013460:	add    BYTE PTR [rax],al
   140013462:	add    BYTE PTR [rax],al
   140013464:	cmc    
   140013465:	push   rsp
   140013466:	add    BYTE PTR [rax],al
   140013468:	sbb    al,0x55
   14001346a:	add    BYTE PTR [rax],al
   14001346c:	stos   BYTE PTR es:[rdi],al
   14001346d:	out    dx,eax
   14001346e:	add    BYTE PTR [rax],al
   140013470:	add    BYTE PTR [rax],al
   140013472:	add    BYTE PTR [rax],al
   140013474:	adc    DWORD PTR [rbx],edx
   140013476:	add    al,0x0
   140013478:	adc    esi,DWORD PTR [rdi+rax*1]
   14001347b:	add    BYTE PTR [rbx],dl
   14001347d:	xor    cl,BYTE PTR [rdi]
   14001347f:	jo     0x14001342d
   140013481:	rex.W add BYTE PTR [rax],al
   140013484:	add    al,BYTE PTR [rax]
   140013486:	add    BYTE PTR [rax],al
   140013488:	nop
   140013489:	push   rsi
   14001348a:	add    BYTE PTR [rax],al
   14001348c:	mov    ebp,0x8a000056
   140013491:	out    dx,eax
   140013492:	add    BYTE PTR [rax],al
   140013494:	add    BYTE PTR [rax],al
   140013496:	add    BYTE PTR [rax],al
   140013498:	iret   
   140013499:	push   rsi
   14001349a:	add    BYTE PTR [rax],al
   14001349c:	(bad)  
   14001349d:	push   rdi
   14001349e:	add    BYTE PTR [rax],al
   1400134a0:	stos   BYTE PTR es:[rdi],al
   1400134a1:	out    dx,eax
   1400134a2:	add    BYTE PTR [rax],al
   1400134a4:	add    BYTE PTR [rax],al
   1400134a6:	add    BYTE PTR [rax],al
   1400134a8:	add    DWORD PTR [rdx],ecx
   1400134aa:	add    al,0x0
   1400134ac:	or     dh,BYTE PTR [rax+rcx*1]
   1400134af:	add    BYTE PTR [rdx],cl
   1400134b1:	xor    al,BYTE PTR [rsi]
   1400134b3:	jo     0x1400134b6
   1400134b5:	or     al,BYTE PTR [rdx]
   1400134b7:	add    BYTE PTR [rdx],cl
   1400134b9:	xor    al,BYTE PTR [rsi]
   1400134bb:	xor    BYTE PTR [rcx],al
   1400134bd:	or     al,0x2
   1400134bf:	add    BYTE PTR [rcx+rax*1],cl
   1400134c2:	adc    DWORD PTR [rax],eax
   1400134c4:	add    DWORD PTR [rdi],edx
   1400134c6:	or     BYTE PTR [rax],al
   1400134c8:	(bad)  
   1400134c9:	or     DWORD PTR fs:[rax],eax
   1400134cc:	(bad)  
   1400134cd:	push   rsp
   1400134ce:	or     BYTE PTR [rax],al
   1400134d0:	(bad)  
   1400134d1:	xor    al,0x7
   1400134d3:	add    BYTE PTR [rdi],dl
   1400134d5:	xor    dl,BYTE PTR [rbx]
   1400134d7:	jo     0x1400134f2
   1400134d9:	xor    BYTE PTR [rbx],cl
   1400134db:	add    BYTE PTR [rdi],bl
   1400134dd:	xor    al,0xa4
   1400134df:	add    BYTE PTR [rdi],bl
   1400134e1:	add    DWORD PTR [rdx+0xef01000],ebx
   1400134e7:	loopne 0x1400134f5
   1400134e9:	ror    BYTE PTR [rdx],1
   1400134eb:	ror    BYTE PTR [rax],0x70
   1400134ee:	(bad)  
   1400134ef:	(bad)  
   1400134f0:	(bad)  
   1400134f1:	push   rax
   1400134f2:	add    BYTE PTR [rax],al
   1400134f4:	in     al,0x8c
   1400134f6:	add    BYTE PTR [rax],al
   1400134f8:	rol    BYTE PTR [rax+rax*1],0x0
   1400134fc:	sbb    DWORD PTR [rsi],ebp
   1400134fe:	or     DWORD PTR [rax],eax
   140013500:	sbb    eax,0x1d00c464
   140013505:	xor    al,0xc3
   140013507:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e01f30e
   14001350d:	ror    BYTE PTR [rax+rsi*2],0xb
   140013511:	push   rax
   140013512:	add    BYTE PTR [rax],al
   140013514:	in     al,0x8c
   140013516:	add    BYTE PTR [rax],al
   140013518:	loopne 0x14001351f
   14001351a:	add    BYTE PTR [rax],al
   14001351c:	add    DWORD PTR [rax+rcx*1],edx
   14001351f:	add    BYTE PTR [rsp+riz*2],dl
   140013522:	or     al,BYTE PTR [rax]
   140013524:	adc    al,0x54
   140013526:	or     DWORD PTR [rax],eax
   140013528:	adc    al,0x34
   14001352a:	or     BYTE PTR [rax],al
   14001352c:	adc    al,0x52
   14001352e:	adc    BYTE PTR [rax+0x1],dh
   140013531:	add    al,0x1
   140013533:	add    BYTE PTR [rdx+riz*2],al
   140013536:	add    BYTE PTR [rax],al
   140013538:	add    DWORD PTR [rsi],eax
   14001353a:	add    al,BYTE PTR [rax]
   14001353c:	(bad)  
   14001353d:	xor    al,BYTE PTR [rdx]
   14001353f:	xor    BYTE PTR [rcx],al
   140013541:	add    BYTE PTR [rax],al
   140013543:	add    BYTE PTR [rax],al
   140013545:	add    BYTE PTR [rax],al
   140013547:	add    BYTE PTR [rcx],al
   140013549:	add    BYTE PTR [rax],al
   14001354b:	add    BYTE PTR [rcx],al
   14001354d:	sbb    al,0xc
   14001354f:	add    BYTE PTR [rsp+riz*2],bl
   140013552:	or     eax,0xc541c00
   140013557:	add    BYTE PTR [rsp+rsi*1],bl
   14001355a:	or     eax,DWORD PTR [rax]
   14001355c:	sbb    al,0x32
   14001355e:	sbb    al,dh
   140013560:	(bad)  
   140013561:	loopne 0x140013577
   140013563:	rcl    BYTE PTR [rdx],1
   140013565:	rcl    BYTE PTR [rax],0x70
   140013568:	add    DWORD PTR [rax],ebx
   14001356a:	or     al,BYTE PTR [rax]
   14001356c:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   140013570:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140013574:	sbb    BYTE PTR [rax+rcx*1],dh
   140013577:	add    BYTE PTR [rax],bl
   140013579:	xor    dl,BYTE PTR [rax+rdx*8]
   14001357c:	adc    al,al
   14001357e:	adc    BYTE PTR [rax+0x1],dh
   140013581:	clts   
   140013583:	add    BYTE PTR [rdi],cl
   140013585:	fs or  al,0x0
   140013588:	sysenter 
   14001358a:	or     eax,DWORD PTR [rax]
   14001358c:	(bad)  
   14001358e:	or     esi,DWORD PTR [rax+0x1]
   140013591:	(bad)  
   140013592:	add    al,BYTE PTR [rax]
   140013594:	(bad)  
   140013595:	jb     0x140013599
   140013597:	push   rax
   140013598:	or     DWORD PTR [rax],ebx
   14001359a:	add    al,BYTE PTR [rax]
   14001359c:	sbb    BYTE PTR [rdx+0x48ac3014],dh
   1400135a2:	add    BYTE PTR [rax],al
   1400135a4:	add    DWORD PTR [rax],eax
   1400135a6:	add    BYTE PTR [rax],al
   1400135a8:	mov    edi,0xdf000072
   1400135ad:	jb     0x1400135af
   1400135af:	add    bl,cl
   1400135b1:	out    dx,eax
   1400135b2:	add    BYTE PTR [rax],al
   1400135b4:	fbstp  TBYTE PTR [rdx+0x0]
   1400135b7:	add    BYTE PTR [rcx],al
   1400135b9:	sbb    BYTE PTR [rdx],cl
   1400135bb:	add    BYTE PTR [rax],bl
   1400135bd:	or     al,BYTE PTR fs:[rax]
   1400135c0:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400135c4:	sbb    BYTE PTR [rax+rcx*1],dh
   1400135c7:	add    BYTE PTR [rax],bl
   1400135c9:	xor    dl,BYTE PTR [rax+rdx*8]
   1400135cc:	adc    al,al
   1400135ce:	adc    BYTE PTR [rax+0x19],dh
   1400135d1:	sub    eax,0x11c000a
   1400135d6:	mov    bh,0x0
   1400135d8:	or     eax,0x9e00bf0
   1400135dd:	rol    BYTE PTR [rdi],1
   1400135df:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143613a56
   1400135e6:	add    dl,BYTE PTR [rax-0x1c]
   1400135e9:	mov    WORD PTR [rax],es
   1400135eb:	add    BYTE PTR [rax+0x1000005],ah
   1400135f1:	(bad)  
   1400135f2:	add    al,BYTE PTR [rax]
   1400135f4:	(bad)  
   1400135f5:	jb     0x1400135f9
   1400135f7:	xor    BYTE PTR [rcx],bl
   1400135f9:	(bad)  
   1400135fa:	or     DWORD PTR [rax],eax
   1400135fc:	(bad)  
   1400135fd:	je     0x1400135b4
   1400135ff:	add    BYTE PTR [rsi],bl
   140013601:	fs mov ah,0x0
   140013604:	(bad)  
   140013605:	xor    al,0xb3
   140013607:	add    BYTE PTR [rsi],bl
   140013609:	add    DWORD PTR [rax+0x501000],esi
   14001360f:	add    ah,ah
   140013611:	mov    WORD PTR [rax],es
   140013613:	add    BYTE PTR [rax+0x5],dh
   140013616:	add    BYTE PTR [rax],al
   140013618:	adc    DWORD PTR [rdx],ecx
   14001361a:	add    al,0x0
   14001361c:	or     dh,BYTE PTR [rdi+rax*1]
   14001361f:	add    BYTE PTR [rdx],cl
   140013621:	xor    al,BYTE PTR [rsi]
   140013623:	jo     0x1400135d1
   140013625:	rex.W add BYTE PTR [rax],al
   140013628:	add    DWORD PTR [rax],eax
   14001362a:	add    BYTE PTR [rax],al
   14001362c:	idiv   BYTE PTR [rcx+0x0]
   14001362f:	add    BYTE PTR [rbp+0x7a],cl
   140013632:	add    BYTE PTR [rax],al
   140013634:	(bad)  
   140013635:	lock add BYTE PTR [rax],al
   140013638:	add    BYTE PTR [rax],al
   14001363a:	add    BYTE PTR [rax],al
   14001363c:	sbb    DWORD PTR [rdi],ebx
   14001363e:	or     BYTE PTR [rax],al
   140013640:	adc    BYTE PTR [rax+rdx*1],dh
   140013643:	add    BYTE PTR [rax],dl
   140013645:	jb     0x140013653
   140013647:	ror    BYTE PTR [rdx],1
   140013649:	ror    BYTE PTR [rax],0x70
   14001364c:	(bad)  
   14001364d:	(bad)  
   14001364e:	(bad)  
   14001364f:	push   rax
   140013650:	in     al,0x8c
   140013652:	add    BYTE PTR [rax],al
   140013654:	cmp    BYTE PTR [rax],al
   140013656:	add    BYTE PTR [rax],al
   140013658:	adc    DWORD PTR [rcx],ebx
   14001365a:	or     al,BYTE PTR [rax]
   14001365c:	sbb    esp,eax
   14001365e:	or     eax,DWORD PTR [rax]
   140013660:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140013664:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140013668:	sbb    DWORD PTR [rax+rcx*1],esi
   14001366b:	add    BYTE PTR [rcx],bl
   14001366d:	push   rdx
   14001366e:	adc    eax,0x48acd0
   140013673:	add    BYTE PTR [rcx],al
   140013675:	add    BYTE PTR [rax],al
   140013677:	add    BYTE PTR [rsi+rdi*2+0x0],ch
   14001367b:	add    BYTE PTR [rax],bl
   14001367d:	jg     0x14001367f
   14001367f:	add    BYTE PTR [rdi],dl
   140013681:	lock add BYTE PTR [rax],al
   140013684:	add    BYTE PTR [rax],al
   140013686:	add    BYTE PTR [rax],al
   140013688:	adc    DWORD PTR [rsi],eax
   14001368a:	add    al,BYTE PTR [rax]
   14001368c:	(bad)  
   14001368d:	xor    al,BYTE PTR [rdx]
   14001368f:	xor    BYTE PTR [rax+rcx*2+0x10000],ch
   140013696:	add    BYTE PTR [rax],al
   140013698:	inc    DWORD PTR [rdx-0x7ceb0000]
   14001369e:	add    BYTE PTR [rax],al
   1400136a0:	cmp    al,dh
   1400136a2:	add    BYTE PTR [rax],al
   1400136a4:	add    BYTE PTR [rax],al
   1400136a6:	add    BYTE PTR [rax],al
   1400136a8:	add    DWORD PTR [rdx],edx
   1400136aa:	add    al,0x0
   1400136ac:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   1400136b3:	push   rax
   1400136b4:	or     DWORD PTR [rcx+rax*1],eax
   1400136b7:	add    BYTE PTR [rdx+rax*2],al
   1400136ba:	add    BYTE PTR [rax],al
   1400136bc:	lods   al,BYTE PTR ds:[rsi]
   1400136bd:	rex.W add BYTE PTR [rax],al
   1400136c0:	add    DWORD PTR [rax],eax
   1400136c2:	add    BYTE PTR [rax],al
   1400136c4:	sub    eax,0x31000084
   1400136c9:	test   BYTE PTR [rax],al
   1400136cb:	add    BYTE PTR [rcx],al
   1400136cd:	add    BYTE PTR [rax],al
   1400136cf:	add    BYTE PTR [rcx],dh
   1400136d1:	test   BYTE PTR [rax],al
   1400136d3:	add    BYTE PTR [rcx],cl
   1400136d5:	add    al,0x1
   1400136d7:	add    BYTE PTR [rdx+rax*2],al
   1400136da:	add    BYTE PTR [rax],al
   1400136dc:	lods   al,BYTE PTR ds:[rsi]
   1400136dd:	rex.W add BYTE PTR [rax],al
   1400136e0:	add    DWORD PTR [rax],eax
   1400136e2:	add    BYTE PTR [rax],al
   1400136e4:	pop    rdx
   1400136e5:	test   BYTE PTR [rax],al
   1400136e7:	add    BYTE PTR [rsi-0x7c],bl
   1400136ea:	add    BYTE PTR [rax],al
   1400136ec:	add    DWORD PTR [rax],eax
   1400136ee:	add    BYTE PTR [rax],al
   1400136f0:	pop    rsi
   1400136f1:	test   BYTE PTR [rax],al
   1400136f3:	add    BYTE PTR [rcx],al
   1400136f5:	adc    eax,0x74150008
   1400136fa:	or     BYTE PTR [rax],al
   1400136fc:	adc    eax,0x15000764
   140013701:	xor    al,0x6
   140013703:	add    BYTE PTR [rip+0x11c01132],dl        # 0x151c1483b
   140013709:	adc    eax,0x74150008
   14001370e:	or     BYTE PTR [rax],al
   140013710:	adc    eax,0x15000764
   140013715:	xor    al,0x6
   140013717:	add    BYTE PTR [rip+0xffffffffacd01132],dl        # 0xecd1484f
   14001371d:	rex.W add BYTE PTR [rax],al
   140013720:	add    DWORD PTR [rax],eax
   140013722:	add    BYTE PTR [rax],al
   140013724:	push   rbx
   140013725:	xchg   BYTE PTR [rax],al
   140013727:	add    BYTE PTR [rcx+0x59000086],dl
   14001372d:	lock add BYTE PTR [rax],al
   140013730:	add    BYTE PTR [rax],al
   140013732:	add    BYTE PTR [rax],al
   140013734:	adc    DWORD PTR [rdi],edx
   140013736:	or     al,BYTE PTR [rax]
   140013738:	(bad)  
   140013739:	fs (bad) 
   14001373b:	add    BYTE PTR [rdi],dl
   14001373d:	xor    al,0xd
   14001373f:	add    BYTE PTR [rdi],dl
   140013741:	push   rdx
   140013742:	adc    esi,eax
   140013744:	adc    eax,esp
   140013746:	(bad)  
   140013748:	or     eax,0xac700bc0
   14001374d:	rex.W add BYTE PTR [rax],al
   140013750:	add    DWORD PTR [rax],eax
   140013752:	add    BYTE PTR [rax],al
   140013754:	jns    0x1400136de
   140013756:	add    BYTE PTR [rax],al
   140013758:	(bad)  
   140013759:	mov    DWORD PTR [rax],eax
   14001375b:	add    BYTE PTR [rbp-0x10],bh
   14001375e:	add    BYTE PTR [rax],al
   140013760:	add    BYTE PTR [rax],al
   140013762:	add    BYTE PTR [rax],al
   140013764:	adc    DWORD PTR [rcx],ebx
   140013766:	or     al,BYTE PTR [rax]
   140013768:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14001376c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140013770:	sbb    DWORD PTR [rax+rcx*1],esi
   140013773:	add    BYTE PTR [rcx],bl
   140013775:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d14b5b
   14001377b:	shr    BYTE PTR [rax+rcx*2+0x10000],0x0
   140013783:	add    BYTE PTR [rdx-0x76],dl
   140013786:	add    BYTE PTR [rax],al
   140013788:	sbb    BYTE PTR [rbx-0xf5f0000],cl
   14001378e:	add    BYTE PTR [rax],al
   140013790:	add    BYTE PTR [rax],al
   140013792:	add    BYTE PTR [rax],al
   140013794:	or     DWORD PTR [rcx+rax*1],eax
   140013797:	add    BYTE PTR [rdx+rax*2],al
   14001379a:	add    BYTE PTR [rax],al
   14001379c:	lods   al,BYTE PTR ds:[rsi]
   14001379d:	rex.W add BYTE PTR [rax],al
   1400137a0:	add    DWORD PTR [rax],eax
   1400137a2:	add    BYTE PTR [rax],al
   1400137a4:	(bad)  
   1400137a5:	mov    WORD PTR [rax],es
   1400137a7:	add    BYTE PTR [rdx-0x74],ch
   1400137aa:	add    BYTE PTR [rax],al
   1400137ac:	shl    al,0x0
   1400137af:	add    BYTE PTR [rdx-0x74],ch
   1400137b2:	add    BYTE PTR [rax],al
   1400137b4:	add    BYTE PTR [rax],al
   1400137b6:	add    BYTE PTR [rax],al
   1400137b8:	add    DWORD PTR [rax],eax
   1400137ba:	add    BYTE PTR [rax],al
   1400137bc:	sbb    DWORD PTR [rsi],ebx
   1400137be:	or     BYTE PTR [rax],al
   1400137c0:	setb   BYTE PTR [rbx]
   1400137c3:	loopne 0x1400137ce
   1400137c5:	rol    BYTE PTR [rdi],1
   1400137c7:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143613c3e
   1400137ce:	add    dh,BYTE PTR [rax]
   1400137d0:	in     al,0x8c
   1400137d2:	add    BYTE PTR [rax],al
   1400137d4:	rex.W add BYTE PTR [rax],al
   1400137d7:	add    BYTE PTR [rcx],al
   1400137d9:	(bad)  
   1400137da:	add    al,BYTE PTR [rax]
   1400137dc:	(bad)  
   1400137dd:	add    DWORD PTR [rbx+0x100],ebx
   1400137e3:	add    BYTE PTR [rcx],al
   1400137e5:	add    BYTE PTR [rax],al
   1400137e7:	add    BYTE PTR [rcx],al
   1400137e9:	add    BYTE PTR [rax],al
   1400137eb:	add    BYTE PTR [rcx],al
   1400137ed:	sbb    DWORD PTR [rdx],ecx
   1400137ef:	add    BYTE PTR [rcx],bl
   1400137f1:	je     0x1400137fc
   1400137f3:	add    BYTE PTR [rcx],bl
   1400137f5:	or     BYTE PTR fs:[rax],al
   1400137f8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400137fc:	sbb    DWORD PTR [rsi+rax*1],esi
   1400137ff:	add    BYTE PTR [rcx],bl
   140013801:	xor    dl,BYTE PTR [rip+0x81511c0]        # 0x1481649c7
   140013807:	add    BYTE PTR [rip+0x15000b34],dl        # 0x155014341
   14001380d:	xor    dl,BYTE PTR [rcx]
   14001380f:	loopne 0x140013820
   140013811:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a7143d7
   140013817:	(bad)  
   140013818:	lods   al,BYTE PTR ds:[rsi]
   140013819:	rex.W add BYTE PTR [rax],al
   14001381c:	add    DWORD PTR [rax],eax
   14001381e:	add    BYTE PTR [rax],al
   140013820:	push   rbp
   140013821:	xchg   ebp,eax
   140013822:	add    BYTE PTR [rax],al
   140013824:	mov    DWORD PTR [rbp-0xf180000],edx
   14001382a:	add    BYTE PTR [rax],al
   14001382c:	add    BYTE PTR [rax],al
   14001382e:	add    BYTE PTR [rax],al
   140013830:	sbb    DWORD PTR [rsi],esi
   140013832:	or     eax,DWORD PTR [rax]
   140013834:	and    eax,0x25037134
   140013839:	add    DWORD PTR [rsi+0x3],esp
   14001383c:	adc    al,dh
   14001383e:	(bad)  
   14001383f:	loopne 0x14001384d
   140013841:	ror    BYTE PTR [rdx],1
   140013843:	ror    BYTE PTR [rax],0x70
   140013846:	(bad)  
   140013847:	(bad)  
   140013848:	(bad)  
   140013849:	push   rax
   14001384a:	add    BYTE PTR [rax],al
   14001384c:	in     al,0x8c
   14001384e:	add    BYTE PTR [rax],al
   140013850:	and    BYTE PTR [rbx],bl
   140013852:	add    BYTE PTR [rax],al
   140013854:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174163862
   14001385a:	or     eax,DWORD PTR [rax]
   14001385c:	adc    eax,0xfe01132
   140013861:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a714427
   140013867:	(bad)  
   140013868:	lods   al,BYTE PTR ds:[rsi]
   140013869:	rex.W add BYTE PTR [rax],al
   14001386c:	add    DWORD PTR [rax],eax
   14001386e:	add    BYTE PTR [rax],al
   140013870:	test   eax,0xdb00009d
   140013875:	popf   
   140013876:	add    BYTE PTR [rax],al
   140013878:	call   0x14001396d
   14001387d:	add    BYTE PTR [rax],al
   14001387f:	add    BYTE PTR [rcx],bl
   140013881:	and    DWORD PTR [rax],ecx
   140013883:	add    BYTE PTR [rdx],dl
   140013885:	push   rsp
   140013886:	lldt   WORD PTR [rdx]
   140013889:	xor    al,0xe
   14001388b:	add    BYTE PTR [rdx],dl
   14001388d:	jb     0x14001389d
   14001388f:	ror    BYTE PTR [rax+rsi*2],0xb
   140013893:	(bad)  
   140013894:	in     al,0x8c
   140013896:	add    BYTE PTR [rax],al
   140013898:	xor    BYTE PTR [rax],al
   14001389a:	add    BYTE PTR [rax],al
   14001389c:	sbb    DWORD PTR [rdx],esp
   14001389e:	or     BYTE PTR [rax],al
   1400138a0:	and    dl,BYTE PTR [rdx+0x1e]
   1400138a3:	lock sbb al,0xe0
   1400138a6:	sbb    dl,al
   1400138a8:	sbb    al,al
   1400138aa:	(bad)  
   1400138ab:	jo     0x1400138c2
   1400138ad:	(bad)  
   1400138ae:	adc    al,0x30
   1400138b0:	lods   al,BYTE PTR ds:[rsi]
   1400138b1:	rex.W add BYTE PTR [rax],al
   1400138b4:	add    al,BYTE PTR [rax]
   1400138b6:	add    BYTE PTR [rax],al
   1400138b8:	push   rsi
   1400138b9:	test   eax,0xa9ed0000
   1400138be:	add    BYTE PTR [rax],al
   1400138c0:	(bad)  
   1400138c1:	icebp  
   1400138c2:	add    BYTE PTR [rax],al
   1400138c4:	in     eax,dx
   1400138c5:	test   eax,0xa91e0000
   1400138ca:	add    BYTE PTR [rax],al
   1400138cc:	adc    al,0xaa
   1400138ce:	add    BYTE PTR [rax],al
   1400138d0:	(bad)  
   1400138d1:	icebp  
   1400138d2:	add    BYTE PTR [rax],al
   1400138d4:	add    BYTE PTR [rax],al
   1400138d6:	add    BYTE PTR [rax],al
   1400138d8:	or     DWORD PTR [rip+0x420d0001],ecx        # 0x1820e38df
   1400138de:	add    BYTE PTR [rax],al
   1400138e0:	lods   al,BYTE PTR ds:[rsi]
   1400138e1:	rex.W add BYTE PTR [rax],al
   1400138e4:	add    DWORD PTR [rax],eax
   1400138e6:	add    BYTE PTR [rax],al
   1400138e8:	mov    BYTE PTR [rdx-0x55650000],ch
   1400138ee:	add    BYTE PTR [rax],al
   1400138f0:	push   rsi
   1400138f1:	icebp  
   1400138f2:	add    BYTE PTR [rax],al
   1400138f4:	fwait
   1400138f5:	stos   BYTE PTR es:[rdi],al
   1400138f6:	add    BYTE PTR [rax],al
   1400138f8:	add    DWORD PTR [rsp+rcx*1],ebx
   1400138fb:	add    BYTE PTR [rsp+riz*2],bl
   1400138fe:	or     al,0x0
   140013900:	sbb    al,0x54
   140013902:	or     eax,DWORD PTR [rax]
   140013904:	sbb    al,0x34
   140013906:	or     al,BYTE PTR [rax]
   140013908:	sbb    al,0x32
   14001390a:	sbb    al,dh
   14001390c:	(bad)  
   14001390d:	loopne 0x140013923
   14001390f:	rcl    BYTE PTR [rdx],1
   140013911:	rcl    BYTE PTR [rax],0x70
   140013914:	add    DWORD PTR [rdi],eax
   140013916:	add    eax,DWORD PTR [rax]
   140013918:	(bad)  
   140013919:	rex.X add edx,DWORD PTR [rax+0x2]
   14001391d:	xor    BYTE PTR [rax],al
   14001391f:	add    BYTE PTR [rcx],bl
   140013921:	adc    ecx,DWORD PTR [rax]
   140013923:	add    BYTE PTR [rbx],dl
   140013925:	repnz or al,0xf0
   140013928:	or     ah,al
   14001392a:	or     al,dl
   14001392c:	(bad)  
   14001392d:	rol    BYTE PTR [rax+rsi*2],0x3
   140013931:	(bad)  
   140013932:	add    dh,BYTE PTR [rax]
   140013934:	lods   al,BYTE PTR ds:[rsi]
   140013935:	rex.W add BYTE PTR [rax],al
   140013938:	add    al,BYTE PTR [rax]
   14001393a:	add    BYTE PTR [rax],al
   14001393c:	mov    gs,WORD PTR [rax+rax*1+0xacb900]
   140013943:	add    BYTE PTR [rcx+rsi*8+0x0],dh
   140013947:	add    BYTE PTR [rcx-0x71ffff54],bh
   14001394d:	lods   al,BYTE PTR ds:[rsi]
   14001394e:	add    BYTE PTR [rax],al
   140013950:	lods   eax,DWORD PTR ss:[rsi]
   140013952:	add    BYTE PTR [rax],al
   140013954:	je     0x140013948
   140013956:	add    BYTE PTR [rax],al
   140013958:	add    BYTE PTR [rax],al
   14001395a:	add    BYTE PTR [rax],al
   14001395c:	or     DWORD PTR [rcx],ebx
   14001395e:	or     al,BYTE PTR [rax]
   140013960:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   140013964:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   140013968:	sbb    DWORD PTR [rdx+rcx*1],esi
   14001396b:	add    BYTE PTR [rcx],bl
   14001396d:	push   rdx
   14001396e:	adc    eax,0x11d013e0
   140013973:	shr    BYTE PTR [rax+rcx*2+0x10000],0x0
   14001397b:	add    BYTE PTR [rsi+rbp*4+0x0],bl
   14001397f:	add    BYTE PTR [rax+0x10000af],ch
   140013985:	add    BYTE PTR [rax],al
   140013987:	add    BYTE PTR [rdi+rbp*4+0xf090000],ch
   14001398e:	(bad)  
   14001398f:	add    BYTE PTR [rdi],cl
   140013991:	fs (bad) 
   140013993:	add    BYTE PTR [rdi],cl
   140013995:	xor    al,0x6
   140013997:	add    BYTE PTR [rdi],cl
   140013999:	xor    cl,BYTE PTR [rbx]
   14001399b:	jo     0x140013949
   14001399d:	rex.W add BYTE PTR [rax],al
   1400139a0:	add    DWORD PTR [rax],eax
   1400139a2:	add    BYTE PTR [rax],al
   1400139a4:	(bad)  
   1400139a5:	scas   eax,DWORD PTR es:[rdi]
   1400139a6:	add    BYTE PTR [rax],al
   1400139a8:	outs   dx,BYTE PTR ds:[rsi]
   1400139a9:	mov    al,0x0
   1400139ab:	add    BYTE PTR [rcx],al
   1400139ad:	add    BYTE PTR [rax],al
   1400139af:	add    BYTE PTR [rsi-0x50],ch
   1400139b2:	add    BYTE PTR [rax],al
   1400139b4:	add    DWORD PTR [rdi],edx
   1400139b6:	or     al,BYTE PTR [rax]
   1400139b8:	(bad)  
   1400139b9:	push   rsp
   1400139ba:	adc    al,BYTE PTR [rax]
   1400139bc:	(bad)  
   1400139bd:	xor    al,0x10
   1400139bf:	add    BYTE PTR [rdi],dl
   1400139c1:	xchg   edx,eax
   1400139c2:	adc    esp,eax
   1400139c4:	adc    eax,edx
   1400139c6:	xadd   BYTE PTR [rip+0x1600c70],cl        # 0x14161463d
   1400139cd:	sbb    DWORD PTR [rdx],ecx
   1400139cf:	add    BYTE PTR [rcx],bl
   1400139d1:	xor    al,0x15
   1400139d3:	add    BYTE PTR [rcx],bl
   1400139d5:	mov    dl,0x15
   1400139d7:	lock adc esp,eax
   1400139da:	adc    eax,edx
   1400139dc:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b614653
   1400139e3:	push   rax
   1400139e4:	add    DWORD PTR [rip+0x3425000b],esp        # 0x1742639f5
   1400139ea:	sbb    eax,0x12012500
   1400139ef:	add    BYTE PTR [rdx],bl
   1400139f1:	lock sbb al,ah
   1400139f4:	(bad)  
   1400139f5:	rcl    BYTE PTR [rax+rax*8],1
   1400139f8:	adc    dh,BYTE PTR [rax+0x11]
   1400139fb:	(bad)  
   1400139fc:	adc    BYTE PTR [rax+0x0],dl
   1400139ff:	add    BYTE PTR [rcx],al
   140013a01:	sbb    BYTE PTR [rdx],cl
   140013a03:	add    BYTE PTR [rax],bl
   140013a05:	fs (bad) 
   140013a07:	add    BYTE PTR [rax],bl
   140013a09:	push   rsp
   140013a0a:	or     eax,0xc341800
   140013a0f:	add    BYTE PTR [rax],bl
   140013a11:	jb     0x140013a27
   140013a13:	loopne 0x140013a27
   140013a15:	rcl    BYTE PTR [rax],0x70
   140013a18:	add    DWORD PTR [rsi+rax*1],edx
   140013a1b:	add    BYTE PTR [rsp+riz*2],dl
   140013a1e:	(bad)  
   140013a1f:	add    BYTE PTR [rsp+rsi*1],dl
   140013a22:	(bad)  
   140013a23:	add    BYTE PTR [rdx+rsi*1],dl
   140013a26:	adc    BYTE PTR [rax+0x1],dh
   140013a29:	adc    al,BYTE PTR [rsi]
   140013a2b:	add    BYTE PTR [rdx],dl
   140013a2d:	je     0x140013a3f
   140013a2f:	add    BYTE PTR [rdx],dl
   140013a31:	xor    al,0xf
   140013a33:	add    BYTE PTR [rdx],dl
   140013a35:	mov    dl,0xb
   140013a37:	push   rax
   140013a38:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4207f4b
   140013a3e:	adc    al,BYTE PTR [rax]
   140013a40:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140013a44:	(bad)  
   140013a45:	xor    al,0x10
   140013a47:	add    BYTE PTR [rbx],dl
   140013a49:	rex.XB (bad) 
   140013a4b:	xchg   edx,eax
   140013a4c:	or     dh,al
   140013a4e:	or     al,ah
   140013a50:	(bad)  
   140013a51:	rol    BYTE PTR [rax+rax*8],1
   140013a54:	add    dl,BYTE PTR [rax+0x0]
   140013a57:	add    ah,ah
   140013a59:	mov    WORD PTR [rax],es
   140013a5b:	add    BYTE PTR [rax+0x0],cl
   140013a5e:	add    BYTE PTR [rax],al
   140013a60:	add    DWORD PTR [rdi],ecx
   140013a62:	(bad)  
   140013a63:	add    BYTE PTR [rdi],cl
   140013a65:	adc    DWORD PTR fs:[rax],eax
   140013a68:	sysenter 
   140013a6a:	adc    BYTE PTR [rax],al
   140013a6c:	psrld  mm1,QWORD PTR [rbx]
   140013a6f:	jo     0x140013a8a
   140013a71:	sub    eax,0x741f350d
   140013a76:	adc    BYTE PTR [rax],al
   140013a78:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140013a7c:	(bad)  
   140013a7d:	xor    al,0xe
   140013a7f:	add    BYTE PTR [rbx],dl
   140013a81:	xor    ecx,DWORD PTR [rsi]
   140013a83:	jb     0x140013a8f
   140013a85:	lock or al,ah
   140013a88:	(bad)  
   140013a89:	rol    BYTE PTR [rax+rax*8],1
   140013a8c:	add    dl,BYTE PTR [rax+0x0]
   140013a8f:	add    ah,ah
   140013a91:	mov    WORD PTR [rax],es
   140013a93:	add    BYTE PTR [rax],dh
   140013a95:	add    BYTE PTR [rax],al
   140013a97:	add    BYTE PTR [rcx],al
   140013a99:	clts   
   140013a9b:	add    BYTE PTR [rdi],cl
   140013a9d:	str    WORD PTR fs:[rdi]
   140013aa1:	xor    al,0xe
   140013aa3:	add    BYTE PTR [rdi],cl
   140013aa5:	mov    dl,0xb
   140013aa7:	jo     0x140013aaa
   140013aa9:	(bad)  
   140013aaa:	add    al,BYTE PTR [rax]
   140013aac:	(bad)  
   140013aad:	xor    cl,BYTE PTR [rdx]
   140013aaf:	xor    BYTE PTR [rcx],al
   140013ab1:	clts   
   140013ab3:	add    BYTE PTR [rdi],cl
   140013ab5:	or     DWORD PTR fs:[rax],eax
   140013ab8:	sysenter 
   140013aba:	or     BYTE PTR [rax],al
   140013abc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140013abf:	jo     0x140013ac2
   140013ac1:	add    BYTE PTR [rax],al
   140013ac3:	add    BYTE PTR [rax],al
   140013ac5:	add    BYTE PTR [rax],al
   140013ac7:	add    BYTE PTR [rcx],al
   140013ac9:	add    BYTE PTR [rax],al
   140013acb:	add    BYTE PTR [rax],al
   140013acd:	add    BYTE PTR [rax],al
   140013acf:	add    BYTE PTR [rcx],al
   140013ad1:	add    BYTE PTR [rax],al
   140013ad3:	add    BYTE PTR [rcx],al
   140013ad5:	clts   
   140013ad7:	add    BYTE PTR [rdi],cl
   140013ad9:	push   rsp
   140013ada:	(bad)  
   140013adb:	add    BYTE PTR [rdi],cl
   140013add:	xor    al,0x6
   140013adf:	add    BYTE PTR [rdi],cl
   140013ae1:	xor    cl,BYTE PTR [rbx]
   140013ae3:	jo     0x140013ae6
   140013ae5:	add    al,0x1
   140013ae7:	add    BYTE PTR [rdx+rax*2],al
   140013aea:	add    BYTE PTR [rax],al
   140013aec:	adc    DWORD PTR [rcx],ebx
   140013aee:	or     al,BYTE PTR [rax]
   140013af0:	sbb    esp,eax
   140013af2:	or     DWORD PTR [rax],eax
   140013af4:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140013af8:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140013afc:	sbb    DWORD PTR [rsi+rax*1],esi
   140013aff:	add    BYTE PTR [rcx],bl
   140013b01:	xor    dl,BYTE PTR [rip+0x48ace0]        # 0x14049e7e7
   140013b07:	add    BYTE PTR [rcx],al
   140013b09:	add    BYTE PTR [rax],al
   140013b0b:	add    BYTE PTR [rsi-0x30],al
   140013b0e:	add    BYTE PTR [rax],al
   140013b10:	rol    BYTE PTR [eax],1
   140013b13:	add    BYTE PTR [rcx],cl
   140013b15:	repz add BYTE PTR [rax],al
   140013b18:	add    BYTE PTR [rax],al
   140013b1a:	add    BYTE PTR [rax],al
   140013b1c:	add    DWORD PTR [rcx],ecx
   140013b1e:	add    DWORD PTR [rax],eax
   140013b20:	or     DWORD PTR [rdx+0x0],esp
   140013b23:	add    BYTE PTR [rax],al
   140013b25:	add    BYTE PTR [rax],al
   140013b27:	add    BYTE PTR [rcx],al
   140013b29:	add    al,0x1
   140013b2b:	add    BYTE PTR [rdx+rdx*1],al
   140013b2e:	add    BYTE PTR [rax],al
   140013b30:	add    DWORD PTR [rsi],eax
   140013b32:	add    al,BYTE PTR [rax]
   140013b34:	(bad)  
   140013b35:	xor    al,BYTE PTR [rdx]
   140013b37:	push   rax
   140013b38:	adc    DWORD PTR [rdi],ecx
   140013b3a:	(bad)  
   140013b3b:	add    BYTE PTR [rdi],cl
   140013b3d:	or     DWORD PTR fs:[rax],eax
   140013b40:	sysenter 
   140013b42:	or     BYTE PTR [rax],al
   140013b44:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140013b47:	jo     0x140013af5
   140013b49:	rex.W add BYTE PTR [rax],al
   140013b4c:	add    DWORD PTR [rax],eax
   140013b4e:	add    BYTE PTR [rax],al
   140013b50:	mov    esi,0x320000d1
   140013b55:	rol    BYTE PTR [rax],cl
   140013b57:	add    BYTE PTR [rdx],ch
   140013b59:	repz add BYTE PTR [rax],al
   140013b5c:	add    BYTE PTR [rax],al
   140013b5e:	add    BYTE PTR [rax],al
   140013b60:	adc    DWORD PTR [rcx],ebx
   140013b62:	or     al,BYTE PTR [rax]
   140013b64:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   140013b68:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   140013b6c:	sbb    DWORD PTR [rdx+rcx*1],esi
   140013b6f:	add    BYTE PTR [rcx],bl
   140013b71:	push   rdx
   140013b72:	adc    eax,0x11d013f0
   140013b77:	shr    BYTE PTR [rax+rcx*2+0x20000],0x0
   140013b7f:	add    BYTE PTR [rdx-0x31ffff2d],cl
   140013b85:	rol    DWORD PTR [rax],cl
   140013b87:	add    BYTE PTR [rbx-0xd],cl
   140013b8a:	add    BYTE PTR [rax],al
   140013b8c:	add    BYTE PTR [rax],al
   140013b8e:	add    BYTE PTR [rax],al
   140013b90:	push   rcx
   140013b91:	rol    DWORD PTR [rax],cl
   140013b93:	add    bh,ah
   140013b95:	rol    DWORD PTR [rax],cl
   140013b97:	add    BYTE PTR [rbx-0xd],bh
   140013b9a:	add    BYTE PTR [rax],al
   140013b9c:	add    BYTE PTR [rax],al
   140013b9e:	add    BYTE PTR [rax],al
   140013ba0:	add    DWORD PTR [rdx],edx
   140013ba2:	or     BYTE PTR [rax],al
   140013ba4:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140013ba8:	adc    dh,BYTE PTR [rax+rcx*1]
   140013bab:	add    BYTE PTR [rdx],dl
   140013bad:	xor    cl,BYTE PTR [rsi]
   140013baf:	ror    BYTE PTR [rax+rsi*2],0xb
   140013bb3:	(bad)  
   140013bb4:	add    DWORD PTR [rip+0x34150006],edx        # 0x174163bc0
   140013bba:	adc    BYTE PTR [rax],al
   140013bbc:	adc    eax,0xd700eb2
   140013bc1:	(bad)  
   140013bc2:	or     al,0x50
   140013bc4:	add    BYTE PTR [rax],al
   140013bc6:	add    BYTE PTR [rax],al
   140013bc8:	add    DWORD PTR [rcx+rax*1],eax
   140013bcb:	add    BYTE PTR [rdx+rax*2],al
   140013bce:	add    BYTE PTR [rax],al
   140013bd0:	adc    DWORD PTR [rsi],eax
   140013bd2:	add    al,BYTE PTR [rax]
   140013bd4:	(bad)  
   140013bd5:	push   rdx
   140013bd6:	add    dh,BYTE PTR [rax]
   140013bd8:	lods   al,BYTE PTR ds:[rsi]
   140013bd9:	rex.W add BYTE PTR [rax],al
   140013bdc:	add    DWORD PTR [rax],eax
   140013bde:	add    BYTE PTR [rax],al
   140013be0:	xor    al,0xd8
   140013be2:	add    BYTE PTR [rax],al
   140013be4:	jl     0x140013bbe
   140013be6:	add    BYTE PTR [rax],al
   140013be8:	pushf  
   140013be9:	repz add BYTE PTR [rax],al
   140013bec:	add    BYTE PTR [rax],al
   140013bee:	add    BYTE PTR [rax],al
   140013bf0:	add    DWORD PTR [rcx+rax*1],eax
   140013bf3:	add    BYTE PTR [rdx+rax*4],al
   140013bf6:	add    BYTE PTR [rax],al
   140013bf8:	add    DWORD PTR [rdx],ecx
   140013bfa:	add    al,0x0
   140013bfc:	or     dh,BYTE PTR [rsi+rax*1]
   140013bff:	add    BYTE PTR [rdx],cl
   140013c01:	xor    al,BYTE PTR [rsi]
   140013c03:	jo     0x140013c16
   140013c05:	(bad)  
   140013c07:	add    BYTE PTR [rdi],cl
   140013c09:	xor    al,0x7
   140013c0b:	add    BYTE PTR [rdi],cl
   140013c0d:	xor    cl,BYTE PTR [rbx]
   140013c0f:	jo     0x140013bbd
   140013c11:	rex.W add BYTE PTR [rax],al
   140013c14:	add    DWORD PTR [rax],eax
   140013c16:	add    BYTE PTR [rax],al
   140013c18:	out    dx,eax
   140013c19:	fld    DWORD PTR [rax]
   140013c1b:	add    cl,bh
   140013c1d:	fld    DWORD PTR [rax]
   140013c1f:	add    BYTE PTR [rbp+0xf3],bh
   140013c25:	add    BYTE PTR [rax],al
   140013c27:	add    BYTE PTR [rcx],dl
   140013c29:	adc    DWORD PTR [rsi],eax
   140013c2b:	add    BYTE PTR [rcx],dl
   140013c2d:	xor    al,0xa
   140013c2f:	add    BYTE PTR [rcx],dl
   140013c31:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a7147f7
   140013c37:	(bad)  
   140013c38:	lods   al,BYTE PTR ds:[rsi]
   140013c39:	rex.W add BYTE PTR [rax],al
   140013c3c:	add    DWORD PTR [rax],eax
   140013c3e:	add    BYTE PTR [rax],al
   140013c40:	jnp    0x140013c1c
   140013c42:	add    BYTE PTR [rax],al
   140013c44:	mov    edi,0xdd0000da
   140013c49:	repz add BYTE PTR [rax],al
   140013c4c:	add    BYTE PTR [rax],al
   140013c4e:	add    BYTE PTR [rax],al
   140013c50:	adc    DWORD PTR [rcx],edx
   140013c52:	(bad)  
   140013c53:	add    BYTE PTR [rcx],dl
   140013c55:	xor    al,0xa
   140013c57:	add    BYTE PTR [rcx],dl
   140013c59:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a71481f
   140013c5f:	(bad)  
   140013c60:	lods   al,BYTE PTR ds:[rsi]
   140013c61:	rex.W add BYTE PTR [rax],al
   140013c64:	add    DWORD PTR [rax],eax
   140013c66:	add    BYTE PTR [rax],al
   140013c68:	and    ebx,esp
   140013c6a:	add    BYTE PTR [rax],al
   140013c6c:	rex.RXB fadd QWORD PTR [r8]
   140013c6f:	add    ch,bl
   140013c71:	repz add BYTE PTR [rax],al
   140013c74:	add    BYTE PTR [rax],al
   140013c76:	add    BYTE PTR [rax],al
   140013c78:	add    DWORD PTR [rbx],ecx
   140013c7a:	add    DWORD PTR [rax],eax
   140013c7c:	or     esp,DWORD PTR [rdx+0x0]
   140013c7f:	add    BYTE PTR [rcx],al
   140013c81:	sbb    ecx,DWORD PTR [rdx]
   140013c83:	add    BYTE PTR [rbx],bl
   140013c85:	je     0x140013c97
   140013c87:	add    BYTE PTR [rbx],bl
   140013c89:	ltr    WORD PTR fs:[rbx]
   140013c8d:	xor    al,0xe
   140013c8f:	add    BYTE PTR [rbx],bl
   140013c91:	xchg   edx,eax
   140013c92:	adc    al,0xd0
   140013c94:	adc    al,al
   140013c96:	adc    BYTE PTR [rax+0x1],dl
   140013c99:	sbb    BYTE PTR [rdx],cl
   140013c9b:	add    BYTE PTR [rax],bl
   140013c9d:	fs or  al,0x0
   140013ca0:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140013ca4:	sbb    BYTE PTR [rdx+rcx*1],dh
   140013ca7:	add    BYTE PTR [rax],bl
   140013ca9:	push   rdx
   140013caa:	adc    al,0xd0
   140013cac:	adc    al,al
   140013cae:	adc    BYTE PTR [rax+0x1],dh
   140013cb1:	sbb    DWORD PTR [rdx],ecx
   140013cb3:	add    BYTE PTR [rcx],bl
   140013cb5:	xor    al,0xe
   140013cb7:	add    BYTE PTR [rcx],bl
   140013cb9:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e150af
   140013cbf:	ror    BYTE PTR [rdi],1
   140013cc1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b614938
   140013cc8:	add    DWORD PTR [rax],ebx
   140013cca:	or     BYTE PTR [rax],al
   140013ccc:	sbb    BYTE PTR [rax+rcx*1+0x0],ah
   140013cd0:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140013cd4:	sbb    BYTE PTR [rsi+rax*1],dh
   140013cd7:	add    BYTE PTR [rax],bl
   140013cd9:	xor    dl,BYTE PTR [rax+rsi*2]
   140013cdc:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41e3cee
   140013ce2:	or     eax,DWORD PTR [rax]
   140013ce4:	sbb    eax,0x1d000a64
   140013ce9:	push   rsp
   140013cea:	or     DWORD PTR [rax],eax
   140013cec:	sbb    eax,0x1d000834
   140013cf1:	xor    bl,BYTE PTR [rcx]
   140013cf3:	loopne 0x140013d0c
   140013cf5:	rcl    BYTE PTR [rip+0x51201c0],1        # 0x145133ebb
   140013cfb:	add    BYTE PTR [rdx],dl
   140013cfd:	rex.X (bad) 
   140013cff:	jo     0x140013d0e
   140013d01:	(bad)  
   140013d02:	or     al,0x50
   140013d04:	or     esi,DWORD PTR [rax]
   140013d06:	add    BYTE PTR [rax],al
   140013d08:	sbb    DWORD PTR [rdi],esp
   140013d0a:	or     DWORD PTR [rax],eax
   140013d0c:	adc    eax,0x15005054
   140013d11:	xor    al,0x4f
   140013d13:	add    BYTE PTR [rip+0xe004a01],dl        # 0x14e01871a
   140013d19:	ror    BYTE PTR [rax+rsi*2],0xb
   140013d1d:	(bad)  
   140013d1e:	add    BYTE PTR [rax],al
   140013d20:	in     al,0x8c
   140013d22:	add    BYTE PTR [rax],al
   140013d24:	add    al,BYTE PTR [rax]
   140013d27:	add    BYTE PTR [rcx],bl
   140013d29:	and    DWORD PTR [rax],ecx
   140013d2b:	add    BYTE PTR [rdx],dl
   140013d2d:	push   rsp
   140013d2e:	adc    al,0x0
   140013d30:	adc    dh,BYTE PTR [rdx+rdx*1]
   140013d33:	add    BYTE PTR [rdx],dl
   140013d35:	ror    BYTE PTR [rsi],cl
   140013d37:	ror    BYTE PTR [rax+rsi*2],0xb
   140013d3b:	(bad)  
   140013d3c:	in     al,0x8c
   140013d3e:	add    BYTE PTR [rax],al
   140013d40:	(bad)  
   140013d41:	add    BYTE PTR [rax],al
   140013d43:	add    BYTE PTR [rcx],bl
   140013d45:	sub    al,0xb
   140013d47:	add    BYTE PTR [rsi],bl
   140013d49:	fs (bad) 
   140013d4b:	add    BYTE PTR [rsi],bl
   140013d4d:	xor    al,0x1d
   140013d4f:	add    BYTE PTR [rsi],bl
   140013d51:	add    DWORD PTR [rsi],edx
   140013d53:	add    BYTE PTR [rdx],dl
   140013d55:	loopne 0x140013d67
   140013d57:	ror    BYTE PTR [rsi],1
   140013d59:	ror    BYTE PTR [rax+rsi*2],0xb
   140013d5d:	push   rax
   140013d5e:	add    BYTE PTR [rax],al
   140013d60:	in     al,0x8c
   140013d62:	add    BYTE PTR [rax],al
   140013d64:	movabs al,ds:0x26000d3719000000
   140013d6d:	(bad)  
   140013d6e:	push   rbx
   140013d6f:	add    BYTE PTR [rsi],ah
   140013d71:	je     0x140013dc5
   140013d73:	add    BYTE PTR [rsi],ah
   140013d75:	fs push rcx
   140013d77:	add    BYTE PTR [rsi],ah
   140013d79:	xor    al,0x50
   140013d7b:	add    BYTE PTR [rsi],ah
   140013d7d:	add    DWORD PTR [rax+rax*1+0x18],ecx
   140013d81:	lock (bad) 
   140013d83:	loopne 0x140013d99
   140013d85:	push   rax
   140013d86:	add    BYTE PTR [rax],al
   140013d88:	in     al,0x8c
   140013d8a:	add    BYTE PTR [rax],al
   140013d8c:	push   rax
   140013d8d:	add    al,BYTE PTR [rax]
   140013d8f:	add    BYTE PTR [rcx],al
   140013d91:	adc    al,0x8
   140013d93:	add    BYTE PTR [rsp+riz*2],dl
   140013d96:	or     BYTE PTR [rax],al
   140013d98:	adc    al,0x54
   140013d9a:	(bad)  
   140013d9b:	add    BYTE PTR [rsp+rsi*1],dl
   140013d9e:	(bad)  
   140013d9f:	add    BYTE PTR [rdx+rsi*1],dl
   140013da2:	adc    BYTE PTR [rax+0x1],dh
   140013da5:	clts   
   140013da7:	add    BYTE PTR [rdi],cl
   140013da9:	fs (bad) 
   140013dab:	add    BYTE PTR [rdi],cl
   140013dad:	xor    al,0x6
   140013daf:	add    BYTE PTR [rdi],cl
   140013db1:	xor    cl,BYTE PTR [rbx]
   140013db3:	jo     0x140013dce
   140013db5:	(bad)  
   140013db6:	or     DWORD PTR [rax],eax
   140013db8:	adc    eax,0x15005154
   140013dbd:	xor    al,0x50
   140013dbf:	add    BYTE PTR [rip+0xe004a01],dl        # 0x14e0187c6
   140013dc5:	ror    BYTE PTR [rax+rsi*2],1
   140013dc8:	or     esp,DWORD PTR [rax+0x0]
   140013dcb:	add    ah,ah
   140013dcd:	mov    WORD PTR [rax],es
   140013dcf:	add    BYTE PTR [rax+0x2],al
   140013dd2:	add    BYTE PTR [rax],al
   140013dd4:	add    DWORD PTR [rbx],edx
   140013dd6:	or     BYTE PTR [rax],al
   140013dd8:	adc    edx,DWORD PTR [rdx+rcx*1+0x0]
   140013ddc:	adc    esi,DWORD PTR [rax+rcx*1]
   140013ddf:	add    BYTE PTR [rbx],dl
   140013de1:	xor    cl,BYTE PTR [rdi]
   140013de3:	ror    BYTE PTR [rip+0x1600c70],0xc        # 0x141614a5a
   140013dea:	add    al,0x0
   140013dec:	or     al,0x34
   140013dee:	(bad)  
   140013def:	add    BYTE PTR [rdx+rsi*1],cl
   140013df2:	or     BYTE PTR [rax+0x1],dh
   140013df5:	(bad)  
   140013df6:	add    al,BYTE PTR [rax]
   140013df8:	(bad)  
   140013df9:	push   rdx
   140013dfa:	add    dh,BYTE PTR [rax]
   140013dfc:	sbb    DWORD PTR [rax],ebp
   140013dfe:	(bad)  
   140013dff:	add    BYTE PTR [rdi],dl
   140013e01:	xor    al,0x5e
   140013e03:	add    BYTE PTR [rdi],dl
   140013e05:	add    DWORD PTR [rdx+0x0],ebx
   140013e08:	or     BYTE PTR [rax+0x7],dh
   140013e0b:	(bad)  
   140013e0c:	(bad)  
   140013e0d:	push   rax
   140013e0e:	add    BYTE PTR [rax],al
   140013e10:	in     al,0x8c
   140013e12:	add    BYTE PTR [rax],al
   140013e14:	rol    BYTE PTR [rdx],0x0
   140013e17:	add    BYTE PTR [rcx],bl
   140013e19:	sbb    eax,0x10b0005
   140013e1e:	or     BYTE PTR [rcx],al
   140013e20:	add    al,0x70
   140013e22:	add    esp,DWORD PTR [rax+0x2]
   140013e25:	xor    BYTE PTR [rax],al
   140013e27:	add    ah,ah
   140013e29:	mov    WORD PTR [rax],es
   140013e2b:	add    BYTE PTR [rax],dh
   140013e2d:	or     BYTE PTR [rax],al
   140013e2f:	add    BYTE PTR [rcx],bl
   140013e31:	(bad)  
   140013e32:	add    eax,0xa340d00
   140013e37:	add    DWORD PTR [rip+0x6010601],ecx        # 0x14602443e
   140013e3d:	jo     0x140013e3f
   140013e3f:	add    ah,ah
   140013e41:	mov    WORD PTR [rax],es
   140013e43:	add    BYTE PTR [rax],ah
   140013e45:	or     BYTE PTR [rax],al
   140013e47:	add    BYTE PTR [rcx],bl
   140013e49:	and    al,0x7
   140013e4b:	add    BYTE PTR [rdx],dl
   140013e4d:	rex.WXB add BYTE PTR fs:[r10],dl
   140013e51:	xor    al,0x4a
   140013e53:	add    BYTE PTR [rdx],dl
   140013e55:	add    DWORD PTR [rax+0x0],ecx
   140013e58:	or     esi,DWORD PTR [rax+0x0]
   140013e5b:	add    ah,ah
   140013e5d:	mov    WORD PTR [rax],es
   140013e5f:	add    BYTE PTR [rax],dh
   140013e61:	add    al,BYTE PTR [rax]
   140013e63:	add    BYTE PTR [rcx],bl
   140013e65:	sub    BYTE PTR [rdi],al
   140013e67:	add    BYTE PTR [rdi],dl
   140013e69:	xor    al,0x50
   140013e6b:	add    BYTE PTR [rdi],dl
   140013e6d:	add    DWORD PTR [rdx+0x0],ecx
   140013e70:	or     BYTE PTR [rax+0x7],dh
   140013e73:	(bad)  
   140013e74:	(bad)  
   140013e75:	push   rax
   140013e76:	add    BYTE PTR [rax],al
   140013e78:	in     al,0x8c
   140013e7a:	add    BYTE PTR [rax],al
   140013e7c:	add    al,BYTE PTR [rax]
   140013e7f:	add    BYTE PTR [rcx],al
   140013e81:	sbb    eax,0x741d000c
   140013e86:	or     eax,0xc641d00
   140013e8b:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d0149e5
   140013e91:	xor    al,0xa
   140013e93:	add    BYTE PTR [rip+0x17e01952],bl        # 0x157e157eb
   140013e99:	rcl    BYTE PTR [rip+0x72e19c0],1        # 0x1472f585f
   140013e9f:	add    BYTE PTR [rip+0x1d021234],bl        # 0x15d0350d9
   140013ea5:	add    DWORD PTR [rdx+rax*1],ecx
   140013ea8:	or     BYTE PTR [rax+0x7],dh
   140013eab:	(bad)  
   140013eac:	(bad)  
   140013ead:	push   rax
   140013eae:	add    BYTE PTR [rax],al
   140013eb0:	in     al,0x8c
   140013eb2:	add    BYTE PTR [rax],al
   140013eb4:	push   rax
   140013eb5:	adc    BYTE PTR [rax],al
   140013eb7:	add    BYTE PTR [rcx],al
   140013eb9:	or     al,0x4
   140013ebb:	add    BYTE PTR [rsp+rsi*1],cl
   140013ebe:	or     BYTE PTR [rax],al
   140013ec0:	or     al,0x52
   140013ec2:	or     BYTE PTR [rax+0x1],dh
   140013ec5:	sbb    DWORD PTR [rdx],ecx
   140013ec7:	add    BYTE PTR [rcx],bl
   140013ec9:	je     0x140013ed6
   140013ecb:	add    BYTE PTR [rcx],bl
   140013ecd:	push   rsp
   140013ece:	or     al,BYTE PTR [rax]
   140013ed0:	sbb    DWORD PTR [rcx+rcx*1],esi
   140013ed3:	add    BYTE PTR [rcx],bl
   140013ed5:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d152bb
   140013edb:	rol    BYTE PTR [rcx],0x18
   140013ede:	or     DWORD PTR [rax],eax
   140013ee0:	sbb    BYTE PTR [rdx+0x11],al
   140013ee3:	lock pavgb mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c14abb
   140013eeb:	jo     0x140013ef5
   140013eed:	(bad)  
   140013eee:	(bad)  
   140013eef:	xor    BYTE PTR [rsi],al
   140013ef1:	push   rax
   140013ef2:	add    BYTE PTR [rax],al
   140013ef4:	add    DWORD PTR [rcx+rcx*1],edx
   140013ef7:	add    BYTE PTR [rdx+riz*2],dl
   140013efa:	or     eax,0x9e00bf0
   140013eff:	rol    BYTE PTR [rdi],1
   140013f01:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143614378
   140013f08:	add    dl,BYTE PTR [rax+0x0]
   140013f0b:	add    BYTE PTR [rcx],al
   140013f0d:	adc    eax,0x64150008
   140013f12:	or     eax,DWORD PTR [rax]
   140013f14:	adc    eax,0x15000834
   140013f19:	xor    cl,BYTE PTR [rsi]
   140013f1b:	ror    BYTE PTR [rax+rsi*2],0xb
   140013f1f:	push   rax
   140013f20:	add    DWORD PTR [rbx+rcx*1],ebx
   140013f23:	add    BYTE PTR [rsp+rsi*1],bl
   140013f26:	and    al,BYTE PTR [rax]
   140013f28:	sbb    al,0x1
   140013f2a:	sbb    al,BYTE PTR [rax]
   140013f2c:	adc    al,dh
   140013f2e:	(bad)  
   140013f2f:	loopne 0x140013f3d
   140013f31:	ror    BYTE PTR [rdx],1
   140013f33:	ror    BYTE PTR [rax],0x70
   140013f36:	(bad)  
   140013f37:	(bad)  
   140013f38:	(bad)  
   140013f39:	push   rax
   140013f3a:	add    BYTE PTR [rax],al
   140013f3c:	add    DWORD PTR [rdx],edx
   140013f3e:	or     BYTE PTR [rax],al
   140013f40:	adc    dl,BYTE PTR [rdx+0xb]
   140013f43:	loopne 0x140013f4e
   140013f45:	rol    BYTE PTR [rdi],1
   140013f47:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436143be
   140013f4e:	add    dl,BYTE PTR [rax+0x1]
   140013f51:	(bad)  
   140013f52:	(bad)  
   140013f53:	add    BYTE PTR [rsi],cl
   140013f55:	xor    al,BYTE PTR [rdi]
   140013f57:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436143ce
   140013f5e:	add    dl,BYTE PTR [rax+0x1]
   140013f61:	adc    eax,0x64150008
   140013f66:	(bad)  
   140013f67:	add    BYTE PTR [rip+0x15000d34],dl        # 0x155014ca1
   140013f6d:	jb     0x140013f7d
   140013f6f:	ror    BYTE PTR [rax+rsi*2],0xb
   140013f73:	push   rax
   140013f74:	add    DWORD PTR [rdi],ecx
   140013f76:	or     BYTE PTR [rax],al
   140013f78:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140013f7b:	loopne 0x140013f86
   140013f7d:	rol    BYTE PTR [rdi],1
   140013f7f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436143f6
   140013f86:	add    dh,BYTE PTR [rax]
   140013f88:	add    BYTE PTR [rax],al
   140013f8a:	add    BYTE PTR [rax],al
   140013f8c:	add    BYTE PTR [rsi+0x0],dh
   140013f8f:	add    BYTE PTR [rax],al
   140013f91:	add    BYTE PTR [rax],al
   140013f93:	add    BYTE PTR [rax+0x13f],ch
	...
   140013fa5:	add    BYTE PTR [rax],al
   140013fa7:	add    BYTE PTR [rdx],al
   140013fa9:	add    BYTE PTR [rax],al
   140013fab:	add    al,al
   140013fad:	(bad)  
   140013fae:	add    DWORD PTR [rax],eax
   140013fb0:	call   0x1400140f4
	...
   140013fc1:	add    BYTE PTR [rax],al
   140013fc3:	add    al,dh
   140013fc5:	push   rcx
   140013fc6:	add    DWORD PTR [rax],eax
   140013fc8:	add    BYTE PTR [rax],al
   140013fca:	add    BYTE PTR [rax],al
   140013fcc:	(bad)  
   140013fcd:	(bad)  
   140013fce:	(bad)  
   140013fcf:	inc    DWORD PTR [rax]
   140013fd1:	add    BYTE PTR [rax],al
   140013fd3:	add    BYTE PTR [rax],bl
   140013fd5:	add    BYTE PTR [rax],al
   140013fd7:	add    BYTE PTR [rax+0x76],bl
	...
   140013fea:	add    BYTE PTR [rax],al
   140013fec:	sbb    BYTE PTR [rdx+0x1],dl
   140013fef:	add    BYTE PTR [rax],al
   140013ff1:	add    BYTE PTR [rax],al
   140013ff3:	add    bh,bh
   140013ff5:	(bad)  
   140013ff6:	(bad)  
   140013ff7:	inc    DWORD PTR [rax]
   140013ff9:	add    BYTE PTR [rax],al
   140013ffb:	add    BYTE PTR [rax],bl
   140013ffd:	add    BYTE PTR [rax],al
   140013fff:	add    BYTE PTR [rsp+rdi*4+0x0],bl
	...
   140014013:	add    al,bh
   140014015:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014016:	add    BYTE PTR [rax],al
   140014018:	add    BYTE PTR [rax],al
   14001401a:	add    BYTE PTR [rax],al
   14001401c:	xor    BYTE PTR [rax+0x1],al
	...
   14001402f:	add    BYTE PTR [rdx],al
   140014031:	add    BYTE PTR [rax],al
   140014033:	add    BYTE PTR [rax+0x40],cl
   140014036:	add    DWORD PTR [rax],eax
   140014038:	call   0x14001417c
	...
   140014049:	add    BYTE PTR [rax],al
   14001404b:	add    BYTE PTR [rax],dl
   14001404d:	(bad)  
   14001404f:	add    BYTE PTR [rax],al
   140014051:	add    BYTE PTR [rax],al
   140014053:	add    bh,bh
   140014055:	(bad)  
   140014056:	(bad)  
   140014057:	inc    DWORD PTR [rax]
   140014059:	add    BYTE PTR [rax],al
   14001405b:	add    BYTE PTR [rax],bl
   14001405d:	add    BYTE PTR [rax],al
   14001405f:	add    BYTE PTR [rax-0x48],ch
	...
   14001406e:	add    BYTE PTR [rax],al
   140014070:	adc    BYTE PTR [rcx+0x1],al
	...
   14001407b:	add    BYTE PTR [rdx+0x44],dl
   14001407e:	add    DWORD PTR [rax],eax
   140014080:	add    BYTE PTR [rax],al
   140014082:	add    DWORD PTR [rax],eax
   140014084:	xor    BYTE PTR [rcx+0x1],al
	...
   14001408f:	add    BYTE PTR [rax],ah
   140014091:	add    DWORD PTR [r8],r8d
   140014094:	and    BYTE PTR [rax],al
   140014096:	add    DWORD PTR [rax],eax
   140014098:	jo     0x1400140dd
   14001409a:	add    DWORD PTR [rax],eax
	...
   1400140a4:	add    DWORD PTR cs:[r8],r8d
   1400140a8:	(bad)  
   1400140a9:	add    al,BYTE PTR [rcx]
   1400140ab:	add    BYTE PTR [rax],cl
   1400140ad:	add    DWORD PTR [rax],r8d
	...
   1400140b8:	(bad)  
   1400140b9:	add    DWORD PTR [r8],r8d
   1400140bc:	clc    
   1400140bd:	add    al,BYTE PTR [rcx]
   1400140bf:	add    BYTE PTR [rax+0x143],dh
   1400140c5:	add    BYTE PTR [rax],al
   1400140c7:	add    BYTE PTR [rax],al
   1400140c9:	add    BYTE PTR [rax],al
   1400140cb:	add    BYTE PTR [rbp+rax*2+0x1],bh
   1400140cf:	add    BYTE PTR [rax-0x37fffefe],ah
   1400140d5:	rex.XB add DWORD PTR [r8],eax
	...
   1400140e0:	rol    BYTE PTR [rbp+0x1],1
   1400140e3:	add    BYTE PTR [rax-0xffffefe],bh
   1400140e9:	rex.XB add DWORD PTR [r8],eax
	...
   1400140f4:	clc    
   1400140f5:	add    DWORD PTR [r8],r8d
   1400140f8:	loopne 0x1400140fc
   1400140fa:	add    DWORD PTR [rax],eax
	...
   140014110:	xor    al,0x44
   140014112:	add    DWORD PTR [rax],eax
   140014114:	add    BYTE PTR [rax],al
   140014116:	add    BYTE PTR [rax],al
   140014118:	rex.R
   140014119:	add    DWORD PTR [rax],r8d
   14001411c:	add    BYTE PTR [rax],al
   14001411e:	add    BYTE PTR [rax],al
   140014120:	and    BYTE PTR [rcx+rax*1+0x0],al
	...
   140014130:	(bad)  
   140014131:	add    DWORD PTR [rax],r8d
   140014134:	add    BYTE PTR [rax],al
   140014136:	add    BYTE PTR [rax],al
   140014138:	outs   dx,BYTE PTR ds:[rsi]
   140014139:	add    DWORD PTR [rax],r8d
   14001413c:	add    BYTE PTR [rax],al
   14001413e:	add    BYTE PTR [rax],al
   140014140:	jle    0x140014186
   140014142:	add    DWORD PTR [rax],eax
   140014144:	add    BYTE PTR [rax],al
   140014146:	add    BYTE PTR [rax],al
   140014148:	xchg   esp,eax
   140014149:	add    DWORD PTR [rax],r8d
   14001414c:	add    BYTE PTR [rax],al
   14001414e:	add    BYTE PTR [rax],al
   140014150:	movabs al,ds:0xb200000000000144
   140014159:	add    DWORD PTR [rax],r8d
   14001415c:	add    BYTE PTR [rax],al
   14001415e:	add    BYTE PTR [rax],al
   140014160:	ret    0x144
   140014163:	add    BYTE PTR [rax],al
   140014165:	add    BYTE PTR [rax],al
   140014167:	add    ah,dl
   140014169:	add    DWORD PTR [rax],r8d
   14001416c:	add    BYTE PTR [rax],al
   14001416e:	add    BYTE PTR [rax],al
   140014170:	out    0x44,al
   140014172:	add    DWORD PTR [rax],eax
   140014174:	add    BYTE PTR [rax],al
   140014176:	add    BYTE PTR [rax],al
   140014178:	cld    
   140014179:	add    DWORD PTR [rax],r8d
   14001417c:	add    BYTE PTR [rax],al
   14001417e:	add    BYTE PTR [rax],al
   140014180:	adc    al,BYTE PTR [rbp+0x1]
   140014183:	add    BYTE PTR [rax],al
   140014185:	add    BYTE PTR [rax],al
   140014187:	add    BYTE PTR [rdx+rcx*2+0x1],al
   14001418b:	add    BYTE PTR [rax],al
   14001418d:	add    BYTE PTR [rax],al
   14001418f:	add    BYTE PTR [rax],ch
   140014191:	rex.WX add QWORD PTR [rax],rax
   140014194:	add    BYTE PTR [rax],al
   140014196:	add    BYTE PTR [rax],al
   140014198:	adc    al,0x4a
   14001419a:	add    DWORD PTR [rax],eax
   14001419c:	add    BYTE PTR [rax],al
   14001419e:	add    BYTE PTR [rax],al
   1400141a0:	(bad)  
   1400141a1:	rex.WX add QWORD PTR [rax],rax
   1400141a4:	add    BYTE PTR [rax],al
   1400141a6:	add    BYTE PTR [rax],al
   1400141a8:	test   BYTE PTR [rcx+0x1],0x0
   1400141ac:	add    BYTE PTR [rax],al
   1400141ae:	add    BYTE PTR [rax],al
   1400141b0:	out    0x49,al
   1400141b2:	add    DWORD PTR [rax],eax
   1400141b4:	add    BYTE PTR [rax],al
   1400141b6:	add    BYTE PTR [rax],al
   1400141b8:	fmul   DWORD PTR [rcx+0x1]
   1400141bb:	add    BYTE PTR [rax],al
   1400141bd:	add    BYTE PTR [rax],al
   1400141bf:	add    ah,cl
   1400141c1:	add    QWORD PTR [r8],rax
   1400141c4:	add    BYTE PTR [rax],al
   1400141c6:	add    BYTE PTR [rax],al
   1400141c8:	mov    edx,0x149
   1400141cd:	add    BYTE PTR [rax],al
   1400141cf:	add    BYTE PTR [rdx+0x149],ch
   1400141d5:	add    BYTE PTR [rax],al
   1400141d7:	add    BYTE PTR [rsi+0x149],bl
   1400141dd:	add    BYTE PTR [rax],al
   1400141df:	add    BYTE PTR [rdx+0x149],cl
   1400141e5:	add    BYTE PTR [rax],al
   1400141e7:	add    BYTE PTR [rcx+rcx*2+0x1],dh
   1400141eb:	add    BYTE PTR [rax],al
   1400141ed:	add    BYTE PTR [rax],al
   1400141ef:	add    BYTE PTR [rdx+0x49],ah
   1400141f2:	add    DWORD PTR [rax],eax
   1400141f4:	add    BYTE PTR [rax],al
   1400141f6:	add    BYTE PTR [rax],al
   1400141f8:	push   rdx
   1400141f9:	add    QWORD PTR [r8],rax
   1400141fc:	add    BYTE PTR [rax],al
   1400141fe:	add    BYTE PTR [rax],al
   140014200:	cmp    al,0x49
   140014202:	add    DWORD PTR [rax],eax
   140014204:	add    BYTE PTR [rax],al
   140014206:	add    BYTE PTR [rax],al
   140014208:	sub    cl,BYTE PTR [rcx+0x1]
   14001420b:	add    BYTE PTR [rax],al
   14001420d:	add    BYTE PTR [rax],al
   14001420f:	add    BYTE PTR [rsi+rax*2],al
   140014212:	add    DWORD PTR [rax],eax
   140014214:	add    BYTE PTR [rax],al
   140014216:	add    BYTE PTR [rax],al
   140014218:	and    al,BYTE PTR [rsi+0x1]
   14001421b:	add    BYTE PTR [rax],al
   14001421d:	add    BYTE PTR [rax],al
   14001421f:	add    BYTE PTR [rsi],dh
   140014221:	rex.RX add DWORD PTR [rax],r8d
   140014224:	add    BYTE PTR [rax],al
   140014226:	add    BYTE PTR [rax],al
   140014228:	rex.R
   140014229:	rex.RX add DWORD PTR [rax],r8d
   14001422c:	add    BYTE PTR [rax],al
   14001422e:	add    BYTE PTR [rax],al
   140014230:	push   rsp
   140014231:	rex.RX add DWORD PTR [rax],r8d
   140014234:	add    BYTE PTR [rax],al
   140014236:	add    BYTE PTR [rax],al
   140014238:	(bad)  
   140014239:	rex.RX add DWORD PTR [rax],r8d
   14001423c:	add    BYTE PTR [rax],al
   14001423e:	add    BYTE PTR [rax],al
   140014240:	jo     0x140014288
   140014242:	add    DWORD PTR [rax],eax
   140014244:	add    BYTE PTR [rax],al
   140014246:	add    BYTE PTR [rax],al
   140014248:	jle    0x140014290
   14001424a:	add    DWORD PTR [rax],eax
   14001424c:	add    BYTE PTR [rax],al
   14001424e:	add    BYTE PTR [rax],al
   140014250:	cwde   
   140014251:	rex.RX add DWORD PTR [rax],r8d
   140014254:	add    BYTE PTR [rax],al
   140014256:	add    BYTE PTR [rax],al
   140014258:	mov    dl,0x46
   14001425a:	add    DWORD PTR [rax],eax
   14001425c:	add    BYTE PTR [rax],al
   14001425e:	add    BYTE PTR [rax],al
   140014260:	(bad)  
   140014261:	rex.RX add DWORD PTR [rax],r8d
   140014264:	add    BYTE PTR [rax],al
   140014266:	add    BYTE PTR [rax],al
   140014268:	in     al,dx
   140014269:	rex.RX add DWORD PTR [rax],r8d
   14001426c:	add    BYTE PTR [rax],al
   14001426e:	add    BYTE PTR [rax],al
   140014270:	cli    
   140014271:	rex.RX add DWORD PTR [rax],r8d
   140014274:	add    BYTE PTR [rax],al
   140014276:	add    BYTE PTR [rax],al
   140014278:	or     al,0x47
   14001427a:	add    DWORD PTR [rax],eax
   14001427c:	add    BYTE PTR [rax],al
   14001427e:	add    BYTE PTR [rax],al
   140014280:	and    al,0x47
   140014282:	add    DWORD PTR [rax],eax
   140014284:	add    BYTE PTR [rax],al
   140014286:	add    BYTE PTR [rax],al
   140014288:	xor    al,0x47
   14001428a:	add    DWORD PTR [rax],eax
   14001428c:	add    BYTE PTR [rax],al
   14001428e:	add    BYTE PTR [rax],al
   140014290:	rex.X
   140014291:	rex.RXB add DWORD PTR [r8],r8d
   140014294:	add    BYTE PTR [rax],al
   140014296:	add    BYTE PTR [rax],al
   140014298:	push   rax
   140014299:	rex.RXB add DWORD PTR [r8],r8d
   14001429c:	add    BYTE PTR [rax],al
   14001429e:	add    BYTE PTR [rax],al
   1400142a0:	pop    rdx
   1400142a1:	rex.RXB add DWORD PTR [r8],r8d
   1400142a4:	add    BYTE PTR [rax],al
   1400142a6:	add    BYTE PTR [rax],al
   1400142a8:	push   0x47
   1400142aa:	add    DWORD PTR [rax],eax
   1400142ac:	add    BYTE PTR [rax],al
   1400142ae:	add    BYTE PTR [rax],al
   1400142b0:	add    BYTE PTR [rdi+0x1],0x0
   1400142b4:	add    BYTE PTR [rax],al
   1400142b6:	add    BYTE PTR [rax],al
   1400142b8:	mov    WORD PTR [rdi+0x1],es
   1400142bb:	add    BYTE PTR [rax],al
   1400142bd:	add    BYTE PTR [rax],al
   1400142bf:	add    BYTE PTR [rdx+0x147],ah
   1400142c5:	add    BYTE PTR [rax],al
   1400142c7:	add    BYTE PTR [rax+0x147],dh
   1400142cd:	add    BYTE PTR [rax],al
   1400142cf:	add    BYTE PTR [rsi+0x147],bh
   1400142d5:	add    BYTE PTR [rax],al
   1400142d7:	add    al,bl
   1400142d9:	rex.RXB add DWORD PTR [r8],r8d
   1400142dc:	add    BYTE PTR [rax],al
   1400142de:	add    BYTE PTR [rax],al
   1400142e0:	call   0x14001442c
   1400142e5:	add    BYTE PTR [rax],al
   1400142e7:	add    dh,bh
   1400142e9:	rex.RXB add DWORD PTR [r8],r8d
   1400142ec:	add    BYTE PTR [rax],al
   1400142ee:	add    BYTE PTR [rax],al
   1400142f0:	sbb    BYTE PTR [rax+0x1],cl
   1400142f3:	add    BYTE PTR [rax],al
   1400142f5:	add    BYTE PTR [rax],al
   1400142f7:	add    BYTE PTR [rax+rcx*2],ah
   1400142fa:	add    DWORD PTR [rax],eax
   1400142fc:	add    BYTE PTR [rax],al
   1400142fe:	add    BYTE PTR [rax],al
   140014300:	cmp    BYTE PTR [rax+0x1],cl
   140014303:	add    BYTE PTR [rax],al
   140014305:	add    BYTE PTR [rax],al
   140014307:	add    BYTE PTR [rax+rcx*2+0x1],cl
   14001430b:	add    BYTE PTR [rax],al
   14001430d:	add    BYTE PTR [rax],al
   14001430f:	add    BYTE PTR [rax+0x48],ch
   140014312:	add    DWORD PTR [rax],eax
   140014314:	add    BYTE PTR [rax],al
   140014316:	add    BYTE PTR [rax],al
   140014318:	jl     0x140014362
   14001431a:	add    DWORD PTR [rax],eax
   14001431c:	add    BYTE PTR [rax],al
   14001431e:	add    BYTE PTR [rax],al
   140014320:	nop
   140014321:	add    QWORD PTR [rax],rax
   140014324:	add    BYTE PTR [rax],al
   140014326:	add    BYTE PTR [rax],al
   140014328:	stos   BYTE PTR es:[rdi],al
   140014329:	add    QWORD PTR [rax],rax
   14001432c:	add    BYTE PTR [rax],al
   14001432e:	add    BYTE PTR [rax],al
   140014330:	mov    esi,0x148
   140014335:	add    BYTE PTR [rax],al
   140014337:	add    dl,cl
   140014339:	add    QWORD PTR [rax],rax
   14001433c:	add    BYTE PTR [rax],al
   14001433e:	add    BYTE PTR [rax],al
   140014340:	(bad)  
   140014341:	add    QWORD PTR [rax],rax
   140014344:	add    BYTE PTR [rax],al
   140014346:	add    BYTE PTR [rax],al
   140014348:	loopne 0x140014392
   14001434a:	add    DWORD PTR [rax],eax
   14001434c:	add    BYTE PTR [rax],al
   14001434e:	add    BYTE PTR [rax],al
   140014350:	repnz add QWORD PTR [rax],rax
   140014354:	add    BYTE PTR [rax],al
   140014356:	add    BYTE PTR [rax],al
   140014358:	or     cl,BYTE PTR [rcx+0x1]
   14001435b:	add    BYTE PTR [rax],al
   14001435d:	add    BYTE PTR [rax],al
   14001435f:	add    BYTE PTR [rdx],ah
   140014361:	add    QWORD PTR [r8],rax
	...
   140014370:	or     BYTE PTR [rax],al
   140014372:	add    BYTE PTR [rax],al
   140014374:	add    BYTE PTR [rax],al
   140014376:	add    BYTE PTR [rax+0x139],al
   14001437c:	add    BYTE PTR [rax],al
   14001437e:	add    BYTE PTR [rax+0x4],al
   140014384:	add    BYTE PTR [rax],al
   140014386:	add    BYTE PTR [rax+0x6],al
   14001438c:	add    BYTE PTR [rax],al
   14001438e:	add    BYTE PTR [rax+0x9],al
   140014394:	add    BYTE PTR [rax],al
   140014396:	add    BYTE PTR [rax+0x7],al
   14001439c:	add    BYTE PTR [rax],al
   14001439e:	add    BYTE PTR [rax+0xc8],al
   1400143a4:	add    BYTE PTR [rax],al
   1400143a6:	add    BYTE PTR [rax+0x0],al
   1400143ac:	add    BYTE PTR [rax],al
   1400143ae:	add    BYTE PTR [rax],al
   1400143b0:	push   0x45
   1400143b2:	add    DWORD PTR [rax],eax
   1400143b4:	add    BYTE PTR [rax],al
   1400143b6:	add    BYTE PTR [rax],al
   1400143b8:	(bad)  
   1400143b9:	rex.WX add QWORD PTR [rax],rax
	...
   1400143c8:	sahf   
   1400143c9:	add    DWORD PTR [r8],r8d
   1400143cc:	add    BYTE PTR [rax],al
   1400143ce:	add    BYTE PTR [rax],al
   1400143d0:	mov    al,0x45
   1400143d2:	add    DWORD PTR [rax],eax
   1400143d4:	add    BYTE PTR [rax],al
   1400143d6:	add    BYTE PTR [rax],al
   1400143d8:	mov    esi,0x145
   1400143dd:	add    BYTE PTR [rax],al
   1400143df:	add    BYTE PTR [rax+0x145],cl
	...
   1400143ed:	add    BYTE PTR [rax],al
   1400143ef:	add    dl,ch
   1400143f1:	add    DWORD PTR [r8],r8d
   1400143f4:	add    BYTE PTR [rax],al
   1400143f6:	add    BYTE PTR [rax],al
   1400143f8:	fadd   QWORD PTR [rbp+0x1]
	...
   140014407:	add    BYTE PTR [rsi+0x45],cl
   14001440a:	add    DWORD PTR [rax],eax
   14001440c:	add    BYTE PTR [rax],al
   14001440e:	add    BYTE PTR [rax],al
   140014410:	cmp    al,0x45
   140014412:	add    DWORD PTR [rax],eax
	...
   140014420:	outs   dx,BYTE PTR ds:[rsi]
   140014421:	add    dl,BYTE PTR [rdx+0x65]
   140014424:	addr32 push rcx
   140014426:	jne    0x14001448d
   140014428:	jb     0x1400144a3
   14001442a:	push   rsi
   14001442b:	(bad)  
   14001442c:	ins    BYTE PTR es:[rdi],dx
   14001442d:	jne    0x140014494
   14001442f:	rex.RB js 0x140014489
   140014432:	add    BYTE PTR [rax],al
   140014434:	(bad)  
   140014435:	add    dl,BYTE PTR [rdx+0x65]
   140014438:	addr32 rex.WRXB jo 0x1400144a1
   14001443c:	outs   dx,BYTE PTR ds:[rsi]
   14001443d:	rex.WXB
   14001443e:	gs jns 0x140014486
   140014441:	js     0x14001449a
   140014443:	add    BYTE PTR [rax],dh
   140014445:	add    dl,BYTE PTR [rdx+0x65]
   140014448:	rex.XB ins BYTE PTR es:[edi],dx
   14001444b:	outs   dx,DWORD PTR ds:[rsi]
   14001444c:	jae    0x1400144b3
   14001444e:	rex.WXB
   14001444f:	gs jns 0x140014452
   140014452:	rex.B
   140014453:	rex.R push rsi
   140014455:	push   r8
   140014457:	xor    rsi,QWORD PTR [r10]
   14001445a:	cs fs ins BYTE PTR es:[rdi],dx
   14001445d:	ins    BYTE PTR es:[rdi],dx
   14001445e:	add    BYTE PTR [rax],al
   140014460:	push   0x65724601
   140014465:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   14001446e:	add    ecx,DWORD PTR [r15+rbp*2+0x61]
   140014473:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14001447c:	add    BYTE PTR [rax],al
   14001447e:	sbb    al,BYTE PTR [rdx]
   140014480:	rex.RXB
   140014481:	gs je  0x1400144d1
   140014484:	outs   dx,DWORD PTR ds:[rsi]
   140014485:	fs jne 0x1400144f4
   140014488:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140014492:	add    BYTE PTR [rax],al
   140014494:	(bad)  
   140014495:	add    eax,0x7274736c
   14001449a:	ins    BYTE PTR es:[rdi],dx
   14001449b:	outs   dx,BYTE PTR gs:[rsi]
   14001449d:	push   rdi
   14001449e:	add    BYTE PTR [rax],al
   1400144a0:	mov    ah,0x3
   1400144a2:	push   rdx
   1400144a3:	(bad)  
   1400144a4:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   1400144ab:	jo     0x140014521
   1400144ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x2080000
   1400144b4:	rex.RXB
   1400144b5:	gs je  0x140014504
   1400144b8:	(bad)  
   1400144b9:	jae    0x14001452f
   1400144bb:	rex.RB jb 0x140014530
   1400144be:	outs   dx,DWORD PTR ds:[rsi]
   1400144bf:	jb     0x1400144c1
   1400144c1:	add    BYTE PTR [rdx+rax*1+0x47],cl
   1400144c5:	gs je  0x140014518
   1400144c8:	jb     0x140014539
   1400144ca:	movsxd eax,DWORD PTR [rcx+0x64]
   1400144cd:	fs jb  0x140014535
   1400144d0:	jae    0x140014545
   1400144d2:	add    BYTE PTR [rax],al
   1400144d4:	lea    eax,[rcx]
   1400144d6:	rex.RXB
   1400144d7:	gs je  0x14001451d
   1400144da:	outs   dx,DWORD PTR ds:[rsi]
   1400144db:	ins    DWORD PTR es:[rdi],dx
   1400144dc:	ins    DWORD PTR es:[rdi],dx
   1400144dd:	(bad)  
   1400144de:	outs   dx,BYTE PTR ds:[rsi]
   1400144df:	imul   r13,QWORD PTR fs:[rsi+0x65],0x5080057
   1400144e8:	push   rdi
   1400144e9:	(bad)  
   1400144ea:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400144f2:	ins    BYTE PTR es:[edi],dx
   1400144f4:	gs rex.WRXB (bad) 
   1400144f7:	push   0x65
   1400144f9:	movsxd esi,DWORD PTR [rax+rax*1-0x1a]
   1400144fd:	add    DWORD PTR [rdi+0x65],eax
   140014500:	je     0x140014547
   140014502:	js     0x14001456d
   140014504:	je     0x140014549
   140014506:	outs   dx,DWORD PTR ds:[rsi]
   140014507:	fs gs push rax
   14001450a:	jb     0x14001457b
   14001450c:	movsxd esp,DWORD PTR [rbp+0x73]
   14001450f:	jae    0x140014511
   140014511:	add    BYTE PTR [rdx+0x0],dl
   140014514:	rex.XB ins BYTE PTR es:[rdi],dx
   140014516:	outs   dx,DWORD PTR ds:[rsi]
   140014517:	jae    0x14001457e
   140014519:	rex.W (bad) 
   14001451b:	outs   dx,BYTE PTR ds:[rsi]
   14001451c:	fs ins BYTE PTR es:[rdi],dx
   14001451e:	add    BYTE PTR gs:[rbx+0x45],cl
   140014522:	push   rdx
   140014523:	rex.WRX
   140014524:	rex.RB
   140014525:	xor    r14,QWORD PTR [rdx]
   140014528:	cs fs ins BYTE PTR es:[rdi],dx
   14001452b:	ins    BYTE PTR es:[rdi],dx
   14001452c:	add    BYTE PTR [rax],al
   14001452e:	rex.WRXB
   14001452f:	rex.WR
   140014530:	rex.RB
   140014531:	push   r13
   140014533:	push   rsp
   140014534:	xor    esi,DWORD PTR [rdx]
   140014536:	cs fs ins BYTE PTR es:[rdi],dx
   140014539:	ins    BYTE PTR es:[rdi],dx
   14001453a:	add    BYTE PTR [rax],al
   14001453c:	jo     0x14001453e
   14001453e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014540:	push   rbp
   140014541:	outs   dx,BYTE PTR ds:[rsi]
   140014542:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140014549:	imul   edi,DWORD PTR [rdx+0x65],0x430000
   140014550:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014552:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140014554:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001455c:	rex.RB js 0x14001455f
   14001455f:	add    BYTE PTR [rdi+0x6c],ch
   140014562:	xor    esi,DWORD PTR gs:[rdx]
   140014565:	cs fs ins BYTE PTR es:[rdi],dx
   140014568:	ins    BYTE PTR es:[rdi],dx
   140014569:	add    BYTE PTR [rcx],ah
   14001456b:	add    DWORD PTR [rbx+0x68],edx
   14001456e:	gs ins BYTE PTR es:[rdi],dx
   140014570:	ins    BYTE PTR es:[rdi],dx
   140014571:	rex.RB js 0x1400145d9
   140014574:	movsxd esi,DWORD PTR [rbp+0x74]
   140014577:	gs rex.RB js 0x1400145d2
   14001457b:	add    BYTE PTR [rbx+0x48],dl
   14001457e:	rex.RB
   14001457f:	rex.WR
   140014580:	xor    r14,QWORD PTR [rdx]
   140014583:	cs fs ins BYTE PTR es:[rdi],dx
   140014586:	ins    BYTE PTR es:[rdi],dx
   140014587:	add    BYTE PTR [rbx+0x74615000],cl
   14001458d:	push   0x6f6d6552
   140014592:	jbe    0x1400145f9
   140014594:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x57636570
   14001459d:	add    BYTE PTR [rbp+0x0],al
   1400145a0:	push   rax
   1400145a1:	(bad)  
   1400145a2:	je     0x14001460c
   1400145a4:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   1400145ad:	jae    0x140014606
   1400145af:	add    BYTE PTR [rax+rax*1],dh
   1400145b2:	push   rax
   1400145b3:	(bad)  
   1400145b4:	je     0x14001461e
   1400145b6:	rex.B jo 0x140014629
   1400145b9:	outs   dx,BYTE PTR gs:[rsi]
   1400145bb:	fs push rdi
   1400145bd:	add    BYTE PTR [rbp+0x74615000],dl
   1400145c3:	push   0x69727453
   1400145c8:	jo     0x14001461a
   1400145ca:	(bad)  
   1400145cb:	je     0x140014635
   1400145cd:	push   rdi
   1400145ce:	add    BYTE PTR [rax],al
   1400145d0:	push   rbx
   1400145d1:	rex.W
   1400145d2:	rex.WR push rdi
   1400145d4:	push   r8
   1400145d6:	rex.WB
   1400145d7:	cs fs ins BYTE PTR es:[rdi],dx
   1400145da:	ins    BYTE PTR es:[rdi],dx
   1400145db:	add    dh,bh
   1400145dd:	add    DWORD PTR [rdi+rbp*2+0x61],ecx
   1400145e1:	fs push rbx
   1400145e3:	je     0x140014657
   1400145e5:	imul   ebp,DWORD PTR [rsi+0x67],0x2190057
   1400145ec:	rex.WRB
   1400145ed:	gs jae 0x140014663
   1400145f0:	(bad)  
   1400145f1:	rex.X outs dx,DWORD PTR gs:[esi]
   1400145f5:	js     0x14001464e
   1400145f7:	add    BYTE PTR [rbp+0x53],dl
   1400145fa:	rex.RB push r10
   1400145fc:	xor    esi,DWORD PTR [rdx]
   1400145fe:	cs fs ins BYTE PTR es:[rdi],dx
   140014601:	ins    BYTE PTR es:[rdi],dx
   140014602:	add    BYTE PTR [rax],al
   140014604:	mov    bl,0x4
   140014606:	push   rbx
   140014607:	gs je  0x14001465f
   14001460a:	outs   dx,BYTE PTR ds:[rsi]
   14001460b:	push   0x6c646e61
   140014610:	gs fs rex.RB js 0x140014678
   140014615:	gs jo  0x14001468c
   140014618:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001461f:	gs jb  0x140014622
   140014622:	(bad)  
   140014623:	add    al,BYTE PTR [rdi+0x65]
   140014626:	je     0x140014675
   140014628:	outs   dx,DWORD PTR ds:[rsi]
   140014629:	fs jne 0x140014698
   14001462c:	gs rex.W (bad) 
   14001462f:	outs   dx,BYTE PTR ds:[rsi]
   140014630:	fs ins BYTE PTR es:[rdi],dx
   140014632:	gs push rdi
   140014634:	add    BYTE PTR [rax],al
   140014636:	(bad)  
   140014637:	add    DWORD PTR [rbp+0x78],eax
   14001463a:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140014642:	jae    0x140014644
   140014644:	retf   
   140014645:	add    BYTE PTR [rbp+riz*2+0x63],al
   140014649:	outs   dx,DWORD PTR ds:[rsi]
   14001464a:	fs gs push rax
   14001464d:	outs   dx,DWORD PTR ds:[rsi]
   14001464e:	imul   ebp,DWORD PTR [rsi+0x74],0x34007265
   140014655:	add    eax,0x74697257
   14001465a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x6547026b
   140014664:	je     0x1400146b9
   140014666:	je     0x1400146cc
   140014668:	rex.W (bad) 
   14001466a:	outs   dx,BYTE PTR ds:[rsi]
   14001466b:	fs ins BYTE PTR es:[rdi],dx
   14001466d:	add    BYTE PTR gs:[rax],al
   140014670:	and    eax,0x6c745204
   140014675:	push   rbp
   140014676:	outs   dx,BYTE PTR ds:[rsi]
   140014677:	ja     0x1400146e2
   140014679:	outs   dx,BYTE PTR ds:[rsi]
   14001467a:	fs rex.RB js 0x14001467e
   14001467e:	add    DWORD PTR [esi+0x72],eax
   140014682:	gs rex.RB outs dx,BYTE PTR gs:[rsi]
   140014686:	jbe    0x1400146f1
   140014688:	jb     0x1400146f9
   14001468a:	outs   dx,BYTE PTR ds:[rsi]
   14001468b:	ins    DWORD PTR es:[rdi],dx
   14001468c:	outs   dx,BYTE PTR gs:[rsi]
   14001468e:	je     0x1400146e3
   140014690:	je     0x140014704
   140014692:	imul   ebp,DWORD PTR [rsi+0x67],0xe1005773
   140014699:	add    DWORD PTR [rdi+0x65],eax
   14001469c:	je     0x1400146e3
   14001469e:	outs   dx,BYTE PTR ds:[rsi]
   14001469f:	jbe    0x14001470a
   1400146a1:	jb     0x140014712
   1400146a3:	outs   dx,BYTE PTR ds:[rsi]
   1400146a4:	ins    DWORD PTR es:[rdi],dx
   1400146a5:	outs   dx,BYTE PTR gs:[rsi]
   1400146a7:	je     0x1400146fc
   1400146a9:	je     0x14001471d
   1400146ab:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   1400146b2:	jl     0x1400146b8
   1400146b4:	push   rbx
   1400146b5:	gs je  0x140014700
   1400146b8:	(bad)  
   1400146b9:	outs   dx,BYTE PTR ds:[rsi]
   1400146ba:	fs ins BYTE PTR es:[rdi],dx
   1400146bc:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400146bf:	jne    0x14001472f
   1400146c1:	je     0x1400146c3
   1400146c3:	add    bl,ch
   1400146c5:	add    cl,BYTE PTR [rcx+0x6e]
   1400146c8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400146d0:	rex.XB jb 0x14001473c
   1400146d3:	je     0x14001473e
   1400146d5:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400146d8:	push   rbx
   1400146d9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400146de:	outs   dx,BYTE PTR ds:[rsi]
   1400146df:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400146e1:	fs push rbx
   1400146e3:	jo     0x14001474e
   1400146e5:	outs   dx,BYTE PTR ds:[rsi]
   1400146e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400146e8:	jne    0x140014758
   1400146ea:	je     0x1400146ec
   1400146ec:	cli    
   1400146ed:	add    DWORD PTR [rdi+0x65],eax
   1400146f0:	je     0x140014738
   1400146f2:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400146fa:	push   0x2
   1400146fc:	rex.RXB
   1400146fd:	gs je  0x140014753
   140014700:	je     0x140014763
   140014702:	jb     0x140014778
   140014704:	jne    0x140014776
   140014706:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140014708:	outs   dx,WORD PTR ds:[rsi]
   14001470a:	push   rdi
   14001470b:	add    dl,dl
   14001470d:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140014711:	gs je  0x140014779
   140014714:	rex.XB jb 0x140014780
   140014717:	je     0x140014782
   140014719:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001471c:	push   rbx
   14001471d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140014722:	outs   dx,BYTE PTR ds:[rsi]
   140014723:	add    dh,ch
   140014725:	add    BYTE PTR [rbp+0x6e],al
   140014728:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001472b:	gs push rax
   14001472d:	outs   dx,DWORD PTR ds:[rsi]
   14001472e:	imul   ebp,DWORD PTR [rsi+0x74],0x5a007265
   140014735:	add    DWORD PTR [rsi+0x6c],eax
   140014738:	jae    0x140014781
   14001473a:	gs je  0x140014793
   14001473d:	(bad)  
   14001473e:	ins    BYTE PTR es:[rdi],dx
   14001473f:	jne    0x1400147a6
   140014741:	add    BYTE PTR [rbx+0x1],bl
   140014744:	rex.RX ins BYTE PTR es:[rdi],dx
   140014746:	jae    0x14001479b
   140014748:	gs je  0x1400147a1
   14001474b:	(bad)  
   14001474c:	ins    BYTE PTR es:[rdi],dx
   14001474d:	jne    0x1400147b4
   14001474f:	add    BYTE PTR [rcx+0x1],bl
   140014752:	rex.RX ins BYTE PTR es:[rdi],dx
   140014754:	jae    0x14001479c
   140014756:	jb     0x1400147bd
   140014758:	add    BYTE PTR gs:[rax+0x74655304],al
   14001475f:	rex.WR (bad) 
   140014761:	jae    0x1400147d7
   140014763:	rex.RB jb 0x1400147d8
   140014766:	outs   dx,DWORD PTR ds:[rsi]
   140014767:	jb     0x140014769
   140014769:	add    bl,cl
   14001476b:	add    DWORD PTR [rdi+0x65],eax
   14001476e:	je     0x1400147b3
   140014770:	jne    0x1400147e4
   140014772:	jb     0x1400147d9
   140014774:	outs   dx,BYTE PTR ds:[rsi]
   140014775:	je     0x1400147cb
   140014777:	push   0x64616572
   14001477c:	rex.WB
   14001477d:	add    BYTE PTR fs:[rax],al
   140014780:	pop    rax
   140014781:	add    DWORD PTR [rsi+0x6c],eax
   140014784:	jae    0x1400147c7
   140014786:	ins    BYTE PTR es:[rdi],dx
   140014787:	ins    BYTE PTR es:[rdi],dx
   140014788:	outs   dx,DWORD PTR ds:[rsi]
   140014789:	movsxd eax,DWORD PTR [rax]
   14001478b:	add    bl,bl
   14001478d:	add    cl,BYTE PTR [rax+0x65]
   140014790:	(bad)  
   140014791:	jo     0x1400147e6
   140014793:	gs je  0x1400147df
   140014796:	outs   dx,BYTE PTR ds:[rsi]
   140014797:	outs   dx,WORD PTR ds:[rsi]
   140014799:	jb     0x140014808
   14001479b:	(bad)  
   14001479c:	je     0x140014807
   14001479e:	outs   dx,DWORD PTR ds:[rsi]
   14001479f:	outs   dx,BYTE PTR ds:[rsi]
   1400147a0:	add    BYTE PTR [rax],al
   1400147a2:	stos   BYTE PTR es:[rdi],al
   1400147a3:	add    al,BYTE PTR [rdi+0x65]
   1400147a6:	je     0x1400147fe
   1400147a8:	gs jb  0x14001481e
   1400147ab:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d50000
   1400147b2:	rex.W
   1400147b3:	gs (bad) 
   1400147b5:	jo     0x1400147fa
   1400147b7:	jb     0x14001481e
   1400147b9:	(bad)  
   1400147ba:	je     0x140014821
   1400147bc:	add    BYTE PTR [rax],al
   1400147be:	test   eax,0x65755103
   1400147c3:	jb     0x14001483e
   1400147c5:	push   rax
   1400147c6:	gs jb  0x14001482f
   1400147c9:	outs   dx,DWORD PTR ds:[rsi]
   1400147ca:	jb     0x140014839
   1400147cc:	(bad)  
   1400147cd:	outs   dx,BYTE PTR ds:[rsi]
   1400147ce:	movsxd esp,DWORD PTR [rbp+0x43]
   1400147d1:	outs   dx,DWORD PTR ds:[rsi]
   1400147d2:	jne    0x140014842
   1400147d4:	je     0x14001483b
   1400147d6:	jb     0x1400147d8
   1400147d8:	(bad)  
   1400147d9:	add    al,BYTE PTR [rdi+0x65]
   1400147dc:	je     0x140014832
   1400147de:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400147e5:	je     0x1400147e7
   1400147e7:	add    bh,al
   1400147e9:	add    DWORD PTR [rdi+0x65],eax
   1400147ec:	je     0x140014831
   1400147ee:	jne    0x140014862
   1400147f0:	jb     0x140014857
   1400147f2:	outs   dx,BYTE PTR ds:[rsi]
   1400147f3:	je     0x140014845
   1400147f5:	jb     0x140014866
   1400147f7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400147fa:	jae    0x140014845
   1400147fc:	add    BYTE PTR fs:[rax+0x74654702],al
   140014803:	push   rbx
   140014804:	jns    0x140014879
   140014806:	je     0x14001486d
   140014808:	ins    DWORD PTR es:[rdi],dx
   140014809:	push   rsp
   14001480a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140014811:	ins    BYTE PTR es:[rdi],dx
   140014812:	gs push rsp
   140014814:	imul   ebp,DWORD PTR [rbp+0x65],0x4802d700
   14001481b:	gs (bad) 
   14001481d:	jo     0x140014865
   14001481f:	jb     0x140014886
   140014821:	add    BYTE PTR gs:[rax],al
   140014824:	(bad)  
   140014825:	add    al,0x54
   140014827:	gs jb  0x140014897
   14001482a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140014831:	outs   dx,DWORD PTR ds:[rsi]
   140014832:	movsxd esp,DWORD PTR [rbp+0x73]
   140014835:	jae    0x140014837
   140014837:	add    dh,al
   140014839:	add    DWORD PTR [rdi+0x65],eax
   14001483c:	je     0x140014881
   14001483e:	jne    0x1400148b2
   140014840:	jb     0x1400148a7
   140014842:	outs   dx,BYTE PTR ds:[rsi]
   140014843:	je     0x140014895
   140014845:	jb     0x1400148b6
   140014847:	movsxd esp,DWORD PTR [rbp+0x73]
   14001484a:	jae    0x14001484c
   14001484c:	loop   0x140014852
   14001484e:	push   rbp
   14001484f:	outs   dx,BYTE PTR ds:[rsi]
   140014850:	push   0x6c646e61
   140014855:	gs fs rex.RB js 0x1400148bd
   14001485a:	gs jo  0x1400148d1
   14001485d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140014864:	gs jb  0x140014867
   140014867:	add    BYTE PTR [rdx],al
   140014869:	add    ecx,DWORD PTR [rcx+0x73]
   14001486c:	rex.R
   14001486d:	gs (bad) 
   14001486f:	jne    0x1400148d8
   140014871:	addr32 gs jb 0x1400148c5
   140014875:	jb     0x1400148dc
   140014877:	jae    0x1400148de
   140014879:	outs   dx,BYTE PTR ds:[rsi]
   14001487a:	je     0x14001487c
   14001487c:	es add al,0x52
   14001487f:	je     0x1400148ed
   140014881:	push   rsi
   140014882:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140014889:	outs   dx,BYTE PTR ds:[rsi]
   14001488a:	ja     0x1400148f5
   14001488c:	outs   dx,BYTE PTR ds:[rsi]
   14001488d:	add    BYTE PTR fs:[rax],al
   140014890:	(bad)  
   140014891:	add    al,0x52
   140014893:	je     0x140014901
   140014895:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140014897:	outs   dx,DWORD PTR ds:[rsi]
   140014898:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14001489c:	jne    0x14001490c
   14001489e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400148a2:	outs   dx,BYTE PTR ds:[rsi]
   1400148a3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400148a5:	je     0x140014919
   1400148a7:	jns    0x1400148a9
   1400148a9:	add    BYTE PTR [rax],bl
   1400148ab:	add    al,0x52
   1400148ad:	je     0x14001491b
   1400148af:	rex.XB (bad) 
   1400148b1:	jo     0x140014927
   1400148b3:	jne    0x140014927
   1400148b5:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400148b8:	outs   dx,BYTE PTR ds:[rsi]
   1400148b9:	je     0x140014920
   1400148bb:	js     0x140014931
   1400148bd:	add    BYTE PTR [rax+0x1],bh
   1400148c0:	rex.RXB
   1400148c1:	gs je  0x140014907
   1400148c4:	push   rax
   1400148c5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400148c7:	outs   dx,WORD PTR ds:[rsi]
   1400148c9:	add    BYTE PTR [rsi+0x1],ch
   1400148cc:	rex.RXB
   1400148cd:	gs je  0x140014911
   1400148d0:	rex.XB push r8
   1400148d2:	add    BYTE PTR [rax],al
   1400148d4:	add    al,BYTE PTR ds:[rdi+0x65]
   1400148d8:	je     0x140014929
   1400148da:	rex.RB
   1400148db:	rex.WRB
   1400148dc:	rex.XB push r8
   1400148de:	add    BYTE PTR [rax],al
   1400148e0:	or     al,0x3
   1400148e2:	rex.WB jae 0x14001493b
   1400148e5:	(bad)  
   1400148e6:	ins    BYTE PTR es:[rdi],dx
   1400148e7:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   1400148ef:	add    BYTE PTR gs:[ebx],bh
   1400148f3:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   1400148f7:	jbe    0x14001495e
   1400148f9:	rex.XB jb 0x140014965
   1400148fc:	je     0x140014967
   1400148fe:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014901:	push   rbx
   140014902:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140014907:	outs   dx,BYTE PTR ds:[rsi]
   140014908:	add    BYTE PTR [rax],al
   14001490a:	repnz add BYTE PTR [rbp+0x6e],al
   14001490e:	je     0x140014975
   140014910:	jb     0x140014955
   140014912:	jb     0x14001497d
   140014914:	je     0x14001497f
   140014916:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014919:	push   rbx
   14001491a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001491f:	outs   dx,BYTE PTR ds:[rsi]
   140014920:	add    BYTE PTR [rax],al
   140014922:	rol    BYTE PTR [rbx+rdx*2],0x6c
   140014926:	gs gs jo 0x14001492a
   14001492a:	je     0x140014930
   14001492c:	push   rbx
   14001492d:	gs je  0x140014976
   140014930:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140014938:	gs jb  0x14001493b
   14001493b:	add    BYTE PTR [rax],ah
   14001493d:	add    eax,0x65646957
   140014942:	rex.XB push 0x6f547261
   140014948:	rex.WRB jne 0x1400149b7
   14001494b:	je     0x1400149b6
   14001494d:	rex.X jns 0x1400149c4
   140014950:	add    BYTE PTR gs:[rax+0x74654701],ah
   140014957:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014959:	outs   dx,BYTE PTR ds:[rsi]
   14001495a:	jae    0x1400149cb
   14001495c:	ins    BYTE PTR es:[rdi],dx
   14001495d:	gs rex.XB push r8
   140014960:	add    BYTE PTR [rax],al
   140014962:	mov    dl,0x1
   140014964:	rex.RXB
   140014965:	gs je  0x1400149ab
   140014968:	outs   dx,DWORD PTR ds:[rsi]
   140014969:	outs   dx,BYTE PTR ds:[rsi]
   14001496a:	jae    0x1400149db
   14001496c:	ins    BYTE PTR es:[rdi],dx
   14001496d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140014970:	fs add BYTE PTR gs:[rax],al
   140014974:	imul   eax,DWORD PTR [rbx],0x746c754d
   14001497a:	imul   eax,DWORD PTR [rdx+0x79],0x6f546574
   140014981:	push   rdi
   140014982:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14001498a:	and    DWORD PTR [rdx+rdx*2],eax
   14001498d:	je     0x1400149fb
   14001498f:	push   rax
   140014990:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   140014994:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   14001499c:	jb     0x14001499e
   14001499e:	rol    DWORD PTR [rdx],cl
   1400149a0:	rex.W
   1400149a1:	gs (bad) 
   1400149a3:	jo     0x1400149e6
   1400149a5:	ins    BYTE PTR es:[rdi],dx
   1400149a6:	ins    BYTE PTR es:[rdi],dx
   1400149a7:	outs   dx,DWORD PTR ds:[rsi]
   1400149a8:	movsxd eax,DWORD PTR [rax]
   1400149aa:	(bad)  
   1400149ab:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   1400149af:	(bad)  
   1400149b0:	jo     0x140014a05
   1400149b2:	je     0x140014a26
   1400149b4:	imul   ebp,DWORD PTR [rsi+0x67],0x70000057
   1400149bb:	add    al,BYTE PTR [rdi+0x65]
   1400149be:	je     0x140014a13
   1400149c0:	je     0x140014a34
   1400149c2:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   1400149c9:	push   rdi
   1400149ca:	add    BYTE PTR [rax],al
   1400149cc:	fadd   QWORD PTR [rdx]
   1400149ce:	rex.W
   1400149cf:	gs (bad) 
   1400149d1:	jo     0x140014a26
   1400149d3:	imul   edi,DWORD PTR [rdx+0x65],0x2da0000
   1400149da:	rex.W
   1400149db:	gs (bad) 
   1400149dd:	jo     0x140014a31
   1400149df:	gs rex.B ins BYTE PTR es:[rdi],dx
   1400149e2:	ins    BYTE PTR es:[rdi],dx
   1400149e3:	outs   dx,DWORD PTR ds:[rsi]
   1400149e4:	movsxd eax,DWORD PTR [rax]
   1400149e6:	xchg   esp,eax
   1400149e7:	add    al,0x53
   1400149e9:	gs je  0x140014a3f
   1400149ec:	je     0x140014a52
   1400149ee:	rex.W (bad) 
   1400149f0:	outs   dx,BYTE PTR ds:[rsi]
   1400149f1:	fs ins BYTE PTR es:[rdi],dx
   1400149f3:	add    BYTE PTR gs:[rax],al
   1400149f6:	xor    eax,DWORD PTR [rip+0x74697257]        # 0x1b46abc53
   1400149fc:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400149ff:	outs   dx,BYTE PTR ds:[rsi]
   140014a00:	jae    0x140014a71
   140014a02:	ins    BYTE PTR es:[rdi],dx
   140014a03:	gs push rdi
   140014a05:	add    BYTE PTR [rdi+0x65724300],cl
   140014a0b:	(bad)  
   140014a0c:	je     0x140014a73
   140014a0e:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46015d00
   140014a17:	ins    BYTE PTR es:[rdi],dx
   140014a18:	jne    0x140014a8d
   140014a1a:	push   0x656c6946
   140014a1f:	rex.X jne 0x140014a88
   140014a22:	data16 gs jb 0x140014a99
   140014a26:	add    BYTE PTR [rax],al
   140014a28:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014a29:	add    al,BYTE PTR [rdi+0x65]
   140014a2c:	je     0x140014a83
   140014a2e:	jae    0x140014a95
   140014a30:	jb     0x140014a76
   140014a32:	gs data16 (bad) 
   140014a35:	jne    0x140014aa3
   140014a37:	je     0x140014a8e
   140014a39:	rex.WB
   140014a3a:	rex.WR (bad) 
   140014a3c:	outs   dx,BYTE PTR ds:[rsi]
   140014a3d:	addr32 jne 0x140014aa1
   140014a40:	add    BYTE PTR gs:[eax],al
   140014a44:	jne    0x140014a48
   140014a46:	rex.RXB
   140014a47:	gs je  0x140014a9d
   140014a4a:	jns    0x140014abf
   140014a4c:	je     0x140014ab3
   140014a4e:	ins    DWORD PTR es:[rdi],dx
   140014a4f:	rex.R
   140014a50:	gs data16 (bad) 
   140014a53:	jne    0x140014ac1
   140014a55:	je     0x140014aac
   140014a57:	rex.WB
   140014a58:	rex.WR (bad) 
   140014a5a:	outs   dx,BYTE PTR ds:[rsi]
   140014a5b:	addr32 jne 0x140014abf
   140014a5e:	add    BYTE PTR gs:[eax],al
   140014a62:	ret    
   140014a63:	add    BYTE PTR [rbx+0x48],dl
   140014a66:	rex.RXB
   140014a67:	gs je  0x140014ab0
   140014a6a:	outs   dx,DWORD PTR ds:[rsi]
   140014a6b:	ins    BYTE PTR es:[rdi],dx
   140014a6c:	fs gs jb 0x140014ac0
   140014a70:	(bad)  
   140014a71:	je     0x140014adb
   140014a73:	push   rdi
	...

Disassembly of section .data:

0000000140015000 <.data>:
   140015000:	add    DWORD PTR [rax],eax
	...
   14001500e:	add    BYTE PTR [rax],al
   140015010:	(bad)  
   140015011:	(bad)  
   140015012:	(bad)  
   140015013:	(bad)  
   140015014:	(bad)  
   140015015:	(bad)  
   140015016:	(bad)  
   140015017:	inc    DWORD PTR [rax+0xa]
	...
   140015065:	add    BYTE PTR [rax],al
   140015067:	add    bh,bh
   140015069:	(bad)  
   14001506a:	(bad)  
   14001506b:	inc    DWORD PTR [rax]
   14001506d:	add    BYTE PTR [rax],al
   14001506f:	add    BYTE PTR [rdx],dh
   140015071:	movabs ds:0x5dcd00002b992ddf,al
   14001507a:	and    dl,dl
   14001507c:	data16 (bad) 
   14001507e:	(bad)  
   14001507f:	inc    DWORD PTR [rcx]
   140015081:	add    BYTE PTR [rax],al
   140015083:	add    BYTE PTR [rsi],dl
   140015085:	add    BYTE PTR [rax],al
   140015087:	add    BYTE PTR [rdx],al
   140015089:	add    BYTE PTR [rax],al
   14001508b:	add    BYTE PTR [rdx],al
   14001508d:	add    BYTE PTR [rax],al
   14001508f:	add    BYTE PTR [rbx],al
   140015091:	add    BYTE PTR [rax],al
   140015093:	add    BYTE PTR [rdx],al
   140015095:	add    BYTE PTR [rax],al
   140015097:	add    BYTE PTR [rax+rax*1],al
   14001509a:	add    BYTE PTR [rax],al
   14001509c:	sbb    BYTE PTR [rax],al
   14001509e:	add    BYTE PTR [rax],al
   1400150a0:	add    eax,0xd000000
   1400150a5:	add    BYTE PTR [rax],al
   1400150a7:	add    BYTE PTR [rsi],al
   1400150a9:	add    BYTE PTR [rax],al
   1400150ab:	add    BYTE PTR [rcx],cl
   1400150ad:	add    BYTE PTR [rax],al
   1400150af:	add    BYTE PTR [rdi],al
   1400150b1:	add    BYTE PTR [rax],al
   1400150b3:	add    BYTE PTR [rax+rax*1],cl
   1400150b6:	add    BYTE PTR [rax],al
   1400150b8:	or     BYTE PTR [rax],al
   1400150ba:	add    BYTE PTR [rax],al
   1400150bc:	or     al,0x0
   1400150be:	add    BYTE PTR [rax],al
   1400150c0:	or     DWORD PTR [rax],eax
   1400150c2:	add    BYTE PTR [rax],al
   1400150c4:	or     al,0x0
   1400150c6:	add    BYTE PTR [rax],al
   1400150c8:	or     al,BYTE PTR [rax]
   1400150ca:	add    BYTE PTR [rax],al
   1400150cc:	(bad)  
   1400150cd:	add    BYTE PTR [rax],al
   1400150cf:	add    BYTE PTR [rbx],cl
   1400150d1:	add    BYTE PTR [rax],al
   1400150d3:	add    BYTE PTR [rax],cl
   1400150d5:	add    BYTE PTR [rax],al
   1400150d7:	add    BYTE PTR [rax+rax*1],cl
   1400150da:	add    BYTE PTR [rax],al
   1400150dc:	(bad)  
   1400150dd:	add    BYTE PTR [rax],al
   1400150df:	add    BYTE PTR [rip+0x16000000],cl        # 0x1560150e5
   1400150e5:	add    BYTE PTR [rax],al
   1400150e7:	add    BYTE PTR [rdi],cl
   1400150e9:	add    BYTE PTR [rax],al
   1400150eb:	add    BYTE PTR [rdx],al
   1400150ed:	add    BYTE PTR [rax],al
   1400150ef:	add    BYTE PTR [rax],dl
   1400150f1:	add    BYTE PTR [rax],al
   1400150f3:	add    BYTE PTR [rip+0x11000000],cl        # 0x1510150f9
   1400150f9:	add    BYTE PTR [rax],al
   1400150fb:	add    BYTE PTR [rdx],dl
   1400150fd:	add    BYTE PTR [rax],al
   1400150ff:	add    BYTE PTR [rdx],dl
   140015101:	add    BYTE PTR [rax],al
   140015103:	add    BYTE PTR [rdx],al
   140015105:	add    BYTE PTR [rax],al
   140015107:	add    BYTE PTR [rcx],ah
   140015109:	add    BYTE PTR [rax],al
   14001510b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175015111
   140015111:	add    BYTE PTR [rax],al
   140015113:	add    BYTE PTR [rdx],al
   140015115:	add    BYTE PTR [rax],al
   140015117:	add    BYTE PTR [rcx+0x0],al
   14001511a:	add    BYTE PTR [rax],al
   14001511c:	or     eax,0x43000000
   140015121:	add    BYTE PTR [rax],al
   140015123:	add    BYTE PTR [rdx],al
   140015125:	add    BYTE PTR [rax],al
   140015127:	add    BYTE PTR [rax+0x0],dl
   14001512a:	add    BYTE PTR [rax],al
   14001512c:	adc    DWORD PTR [rax],eax
   14001512e:	add    BYTE PTR [rax],al
   140015130:	push   rdx
   140015131:	add    BYTE PTR [rax],al
   140015133:	add    BYTE PTR [rip+0x53000000],cl        # 0x193015139
   140015139:	add    BYTE PTR [rax],al
   14001513b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197015141
   140015141:	add    BYTE PTR [rax],al
   140015143:	add    BYTE PTR [rsi],dl
   140015145:	add    BYTE PTR [rax],al
   140015147:	add    BYTE PTR [rcx+0x0],bl
   14001514a:	add    BYTE PTR [rax],al
   14001514c:	or     eax,DWORD PTR [rax]
   14001514e:	add    BYTE PTR [rax],al
   140015150:	ins    BYTE PTR es:[rdi],dx
   140015151:	add    BYTE PTR [rax],al
   140015153:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad015159
   140015159:	add    BYTE PTR [rax],al
   14001515b:	add    BYTE PTR [rax],ah
   14001515d:	add    BYTE PTR [rax],al
   14001515f:	add    BYTE PTR [rax+0x0],dh
   140015162:	add    BYTE PTR [rax],al
   140015164:	sbb    al,0x0
   140015166:	add    BYTE PTR [rax],al
   140015168:	jb     0x14001516a
   14001516a:	add    BYTE PTR [rax],al
   14001516c:	or     DWORD PTR [rax],eax
   14001516e:	add    BYTE PTR [rax],al
   140015170:	(bad)  
   140015171:	add    BYTE PTR [rax],al
   140015173:	add    BYTE PTR [rsi],dl
   140015175:	add    BYTE PTR [rax],al
   140015177:	add    BYTE PTR [rax+0xa000000],al
   14001517d:	add    BYTE PTR [rax],al
   14001517f:	add    BYTE PTR [rcx+0xa000000],al
   140015185:	add    BYTE PTR [rax],al
   140015187:	add    BYTE PTR [rdx+0x9000000],al
   14001518d:	add    BYTE PTR [rax],al
   14001518f:	add    BYTE PTR [rbx+0x16000000],al
   140015195:	add    BYTE PTR [rax],al
   140015197:	add    BYTE PTR [rax+rax*1+0xd0000],al
   14001519e:	add    BYTE PTR [rax],al
   1400151a0:	xchg   ecx,eax
   1400151a1:	add    BYTE PTR [rax],al
   1400151a3:	add    BYTE PTR [rcx],ch
   1400151a5:	add    BYTE PTR [rax],al
   1400151a7:	add    BYTE PTR [rsi+0xd000000],bl
   1400151ad:	add    BYTE PTR [rax],al
   1400151af:	add    BYTE PTR [rcx+0x2000000],ah
   1400151b5:	add    BYTE PTR [rax],al
   1400151b7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   1400151be:	add    BYTE PTR [rax],al
   1400151c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400151c1:	add    BYTE PTR [rax],al
   1400151c3:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf70151c9
   1400151c9:	add    BYTE PTR [rax],al
   1400151cb:	add    BYTE PTR [rcx],dl
   1400151cd:	add    BYTE PTR [rax],al
   1400151cf:	add    dh,cl
   1400151d1:	add    BYTE PTR [rax],al
   1400151d3:	add    BYTE PTR [rdx],al
   1400151d5:	add    BYTE PTR [rax],al
   1400151d7:	add    bh,dl
   1400151d9:	add    BYTE PTR [rax],al
   1400151db:	add    BYTE PTR [rbx],cl
   1400151dd:	add    BYTE PTR [rax],al
   1400151df:	add    BYTE PTR [rax],bl
   1400151e1:	(bad)  
   1400151e2:	add    BYTE PTR [rax],al
   1400151e4:	or     al,0x0
   1400151e6:	add    BYTE PTR [rax],al
   1400151e8:	or     al,0x0
   1400151ea:	add    BYTE PTR [rax],al
   1400151ec:	or     BYTE PTR [rax],al
   1400151ee:	add    BYTE PTR [rax],al
   1400151f0:	sbb    BYTE PTR [rsi],dl
   1400151f2:	add    DWORD PTR [rax+0x1],eax
	...
   1400151fd:	add    BYTE PTR [rax],al
   1400151ff:	add    BYTE PTR [rsi],ch
   140015201:	(bad)  
   140015202:	push   r14
   140015204:	(bad)
   140015209:	ins    BYTE PTR es:[rdi],dx
   14001520a:	ins    BYTE PTR es:[rdi],dx
   14001520b:	outs   dx,DWORD PTR ds:[rsi]
   14001520c:	movsxd eax,DWORD PTR [rax+0x73]
   14001520f:	je     0x140015275
   140015211:	rex
   140015212:	add    BYTE PTR [rax],al
   140015215:	add    BYTE PTR [rax],al
   140015217:	add    BYTE PTR [rax],bl
   140015219:	(bad)  
   14001521a:	add    DWORD PTR [rax+0x1],eax
	...
   140015225:	add    BYTE PTR [rax],al
   140015227:	add    BYTE PTR [rsi],ch
   140015229:	(bad)  
   14001522a:	push   r14
   14001522c:	gs js  0x140015292
   14001522f:	gs jo  0x1400152a6
   140015232:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140015239:	rex
   14001523a:	add    BYTE PTR [rax],al
	...
   14001529d:	add    BYTE PTR [rax],dl
   14001529f:	adc    BYTE PTR [rax],dl
   1400152a1:	adc    BYTE PTR [rax],dl
   1400152a3:	adc    BYTE PTR [rax],dl
   1400152a5:	adc    BYTE PTR [rax],dl
   1400152a7:	adc    BYTE PTR [rax],dl
   1400152a9:	adc    BYTE PTR [rax],dl
   1400152ab:	adc    BYTE PTR [rax],dl
   1400152ad:	adc    BYTE PTR [rax],dl
   1400152af:	adc    BYTE PTR [rax],dl
   1400152b1:	adc    BYTE PTR [rax],dl
   1400152b3:	adc    BYTE PTR [rax],dl
   1400152b5:	adc    BYTE PTR [rax],dl
   1400152b7:	adc    BYTE PTR [rax],al
   1400152b9:	add    BYTE PTR [rax],al
   1400152bb:	add    BYTE PTR [rax],al
   1400152bd:	add    BYTE PTR [rax],ah
   1400152bf:	and    BYTE PTR [rax],ah
   1400152c1:	and    BYTE PTR [rax],ah
   1400152c3:	and    BYTE PTR [rax],ah
   1400152c5:	and    BYTE PTR [rax],ah
   1400152c7:	and    BYTE PTR [rax],ah
   1400152c9:	and    BYTE PTR [rax],ah
   1400152cb:	and    BYTE PTR [rax],ah
   1400152cd:	and    BYTE PTR [rax],ah
   1400152cf:	and    BYTE PTR [rax],ah
   1400152d1:	and    BYTE PTR [rax],ah
   1400152d3:	and    BYTE PTR [rax],ah
   1400152d5:	and    BYTE PTR [rax],ah
   1400152d7:	and    BYTE PTR [rax],al
	...
   14001539d:	add    BYTE PTR [rcx+0x62],ah
   1400153a0:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   1400153a4:	addr32 push 0x6c6b6a69
   1400153aa:	ins    DWORD PTR es:[rdi],dx
   1400153ab:	outs   dx,BYTE PTR ds:[rsi]
   1400153ac:	outs   dx,DWORD PTR ds:[rsi]
   1400153ad:	jo     0x140015420
   1400153af:	jb     0x140015424
   1400153b1:	je     0x140015428
   1400153b3:	jbe    0x14001542c
   1400153b5:	js     0x140015430
   1400153b7:	jp     0x1400153b9
   1400153b9:	add    BYTE PTR [rax],al
   1400153bb:	add    BYTE PTR [rax],al
   1400153bd:	add    BYTE PTR [rcx+0x42],al
   1400153c0:	rex.XB
   1400153c1:	rex.R
   1400153c2:	rex.RB
   1400153c3:	rex.RX
   1400153c4:	rex.RXB
   1400153c5:	rex.W
   1400153c6:	rex.WB
   1400153c7:	rex.WX
   1400153c8:	rex.WXB
   1400153c9:	rex.WR
   1400153ca:	rex.WRB
   1400153cb:	rex.WRX
   1400153cc:	rex.WRXB push r8
   1400153ce:	push   rcx
   1400153cf:	push   rdx
   1400153d0:	push   rbx
   1400153d1:	push   rsp
   1400153d2:	push   rbp
   1400153d3:	push   rsi
   1400153d4:	push   rdi
   1400153d5:	pop    rax
   1400153d6:	pop    rcx
   1400153d7:	pop    rdx
	...
   1400154a0:	add    BYTE PTR [rax],al
   1400154a2:	adc    BYTE PTR [rax],dl
   1400154a4:	adc    BYTE PTR [rax],dl
   1400154a6:	adc    BYTE PTR [rax],dl
   1400154a8:	adc    BYTE PTR [rax],dl
   1400154aa:	adc    BYTE PTR [rax],dl
   1400154ac:	adc    BYTE PTR [rax],dl
   1400154ae:	adc    BYTE PTR [rax],dl
   1400154b0:	adc    BYTE PTR [rax],dl
   1400154b2:	adc    BYTE PTR [rax],dl
   1400154b4:	adc    BYTE PTR [rax],dl
   1400154b6:	adc    BYTE PTR [rax],dl
   1400154b8:	adc    BYTE PTR [rax],dl
   1400154ba:	adc    BYTE PTR [rax],dl
   1400154bc:	add    BYTE PTR [rax],al
   1400154be:	add    BYTE PTR [rax],al
   1400154c0:	add    BYTE PTR [rax],al
   1400154c2:	and    BYTE PTR [rax],ah
   1400154c4:	and    BYTE PTR [rax],ah
   1400154c6:	and    BYTE PTR [rax],ah
   1400154c8:	and    BYTE PTR [rax],ah
   1400154ca:	and    BYTE PTR [rax],ah
   1400154cc:	and    BYTE PTR [rax],ah
   1400154ce:	and    BYTE PTR [rax],ah
   1400154d0:	and    BYTE PTR [rax],ah
   1400154d2:	and    BYTE PTR [rax],ah
   1400154d4:	and    BYTE PTR [rax],ah
   1400154d6:	and    BYTE PTR [rax],ah
   1400154d8:	and    BYTE PTR [rax],ah
   1400154da:	and    BYTE PTR [rax],ah
	...
   1400155b0:	add    BYTE PTR [rcx+0x62],ah
   1400155b3:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   1400155b7:	addr32 push 0x6c6b6a69
   1400155bd:	ins    DWORD PTR es:[rdi],dx
   1400155be:	outs   dx,BYTE PTR ds:[rsi]
   1400155bf:	outs   dx,DWORD PTR ds:[rsi]
   1400155c0:	jo     0x140015633
   1400155c2:	jb     0x140015637
   1400155c4:	je     0x14001563b
   1400155c6:	jbe    0x14001563f
   1400155c8:	js     0x140015643
   1400155ca:	jp     0x1400155cc
   1400155cc:	add    BYTE PTR [rax],al
   1400155ce:	add    BYTE PTR [rax],al
   1400155d0:	add    BYTE PTR [rcx+0x42],al
   1400155d3:	rex.XB
   1400155d4:	rex.R
   1400155d5:	rex.RB
   1400155d6:	rex.RX
   1400155d7:	rex.RXB
   1400155d8:	rex.W
   1400155d9:	rex.WB
   1400155da:	rex.WX
   1400155db:	rex.WXB
   1400155dc:	rex.WR
   1400155dd:	rex.WRB
   1400155de:	rex.WRX
   1400155df:	rex.WRXB push r8
   1400155e1:	push   rcx
   1400155e2:	push   rdx
   1400155e3:	push   rbx
   1400155e4:	push   rsp
   1400155e5:	push   rbp
   1400155e6:	push   rsi
   1400155e7:	push   rdi
   1400155e8:	pop    rax
   1400155e9:	pop    rcx
   1400155ea:	pop    rdx
	...
   14001566f:	add    BYTE PTR [rax+0x52],al
   140015672:	add    DWORD PTR [rax+0x1],eax
   140015675:	add    BYTE PTR [rax],al
   140015677:	add    BYTE PTR [rcx],al
   140015679:	add    al,BYTE PTR [rax+rcx*1]
   14001567c:	add    BYTE PTR [rax],al
   14001567e:	add    BYTE PTR [rax],al
   140015680:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015681:	add    eax,DWORD PTR [rax]
   140015683:	add    BYTE PTR [rax-0x7e],ah
   140015686:	jns    0x14001560a
   140015688:	and    DWORD PTR [rax],eax
   14001568a:	add    BYTE PTR [rax],al
   14001568c:	add    BYTE PTR [rax],al
   14001568e:	add    BYTE PTR [rax],al
   140015690:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015691:	fild   WORD PTR [rax]
   140015693:	add    BYTE PTR [rax],al
   140015695:	add    BYTE PTR [rax],al
   140015697:	add    BYTE PTR [rcx+0xa5],ah
   14001569d:	add    BYTE PTR [rax],al
   14001569f:	add    BYTE PTR [rcx+0xfce09f],al
   1400156a5:	add    BYTE PTR [rax],al
   1400156a7:	add    BYTE PTR [rax+0x7e],al
   1400156aa:	cmp    ah,0x0
   1400156ad:	add    BYTE PTR [rax],al
   1400156af:	add    BYTE PTR [rax-0x3efffffd],ch
   1400156b5:	movabs ds:0x20a3da,eax
	...
   1400156ce:	add    BYTE PTR [rax],al
   1400156d0:	cmp    esi,0x0
   1400156d6:	add    BYTE PTR [rax],al
   1400156d8:	rex inc BYTE PTR [rax]
   1400156db:	add    BYTE PTR [rax],al
   1400156dd:	add    BYTE PTR [rax],al
   1400156df:	add    BYTE PTR [rbp-0x3efffffd],dh
   1400156e5:	movabs ds:0x20a3da,eax
	...
   1400156fe:	add    BYTE PTR [rax],al
   140015700:	cmp    esi,0x0
   140015706:	add    BYTE PTR [rax],al
   140015708:	inc    BYTE PTR [r8]
   14001570b:	add    BYTE PTR [rax],al
   14001570d:	add    BYTE PTR [rax],al
   14001570f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140015715:	movabs ds:0xa2e8a2e5001aa2e4,al
   14001571e:	pop    rbx
	...
   14001572f:	add    BYTE PTR [rcx+0xfe],al
   140015735:	add    BYTE PTR [rax],al
   140015737:	add    BYTE PTR [rax+0x7e],al
   14001573a:	movabs eax,ds:0x55100000000fe
   140015743:	add    BYTE PTR [rcx-0x26],dl
   140015746:	pop    rsi
   140015747:	fisub  DWORD PTR [rax]
   140015749:	add    BYTE PTR [rdi-0x26],bl
   14001574c:	push   0xffffffffffffffda
   14001574e:	xor    al,BYTE PTR [rax]
	...
   140015760:	adc    ebx,0xf9e0ded8
   140015766:	add    BYTE PTR [rax],al
   140015768:	xor    DWORD PTR [rsi-0x7f],edi
   14001576b:	inc    BYTE PTR [rax]
   14001576d:	add    BYTE PTR [rax],al
   14001576f:	add    dh,bh
   140015771:	(bad)  
   140015772:	(bad)  
   140015773:	inc    DWORD PTR [rbx+0x0]
	...
   14001577e:	add    BYTE PTR [rax],al
   140015780:	sbb    BYTE PTR [rcx+rax*1],dl
   140015783:	rex add DWORD PTR [rax],eax
   140015786:	add    BYTE PTR [rax],al
   140015788:	adc    al,0x14
   14001578a:	add    DWORD PTR [rax+0x1],eax
   14001578d:	add    BYTE PTR [rax],al
   14001578f:	add    BYTE PTR [rax],dl
   140015791:	adc    al,0x1
   140015793:	rex add DWORD PTR [rax],eax
   140015796:	add    BYTE PTR [rax],al
   140015798:	or     al,0x14
   14001579a:	add    DWORD PTR [rax+0x1],eax
   14001579d:	add    BYTE PTR [rax],al
   14001579f:	add    BYTE PTR [rax],cl
   1400157a1:	adc    al,0x1
   1400157a3:	rex add DWORD PTR [rax],eax
   1400157a6:	add    BYTE PTR [rax],al
   1400157a8:	add    al,0x14
   1400157aa:	add    DWORD PTR [rax+0x1],eax
   1400157ad:	add    BYTE PTR [rax],al
   1400157af:	add    BYTE PTR [rax],al
   1400157b1:	adc    al,0x1
   1400157b3:	rex add DWORD PTR [rax],eax
   1400157b6:	add    BYTE PTR [rax],al
   1400157b8:	clc    
   1400157b9:	adc    eax,DWORD PTR [rcx]
   1400157bb:	rex add DWORD PTR [rax],eax
   1400157be:	add    BYTE PTR [rax],al
   1400157c0:	lock adc eax,DWORD PTR [rcx]
   1400157c3:	rex add DWORD PTR [rax],eax
   1400157c6:	add    BYTE PTR [rax],al
   1400157c8:	call   0x1414158e0
   1400157cd:	add    BYTE PTR [rax],al
   1400157cf:	add    al,bl
   1400157d1:	adc    eax,DWORD PTR [rcx]
   1400157d3:	rex add DWORD PTR [rax],eax
   1400157d6:	add    BYTE PTR [rax],al
   1400157d8:	enter  0x113,0x40
   1400157dc:	add    DWORD PTR [rax],eax
   1400157de:	add    BYTE PTR [rax],al
   1400157e0:	mov    esp,0x1400113
   1400157e5:	add    BYTE PTR [rax],al
   1400157e7:	add    BYTE PTR [rax+0x1400113],dh
   1400157ed:	add    BYTE PTR [rax],al
   1400157ef:	add    BYTE PTR [rbx+rdx*1+0x14001],ch
   1400157f6:	add    BYTE PTR [rax],al
   1400157f8:	test   al,0x13
   1400157fa:	add    DWORD PTR [rax+0x1],eax
   1400157fd:	add    BYTE PTR [rax],al
   1400157ff:	add    BYTE PTR [rbx+rdx*1+0x14001],ah
   140015806:	add    BYTE PTR [rax],al
   140015808:	movabs al,ds:0x9c00000001400113
   140015811:	adc    eax,DWORD PTR [rcx]
   140015813:	rex add DWORD PTR [rax],eax
   140015816:	add    BYTE PTR [rax],al
   140015818:	cwde   
   140015819:	adc    eax,DWORD PTR [rcx]
   14001581b:	rex add DWORD PTR [rax],eax
   14001581e:	add    BYTE PTR [rax],al
   140015820:	xchg   esp,eax
   140015821:	adc    eax,DWORD PTR [rcx]
   140015823:	rex add DWORD PTR [rax],eax
   140015826:	add    BYTE PTR [rax],al
   140015828:	nop
   140015829:	adc    eax,DWORD PTR [rcx]
   14001582b:	rex add DWORD PTR [rax],eax
   14001582e:	add    BYTE PTR [rax],al
   140015830:	mov    WORD PTR [rbx],ss
   140015832:	add    DWORD PTR [rax+0x1],eax
   140015835:	add    BYTE PTR [rax],al
   140015837:	add    BYTE PTR [rax+0x1400113],cl
   14001583d:	add    BYTE PTR [rax],al
   14001583f:	add    BYTE PTR [rbx+rdx*1+0x14001],al
   140015846:	add    BYTE PTR [rax],al
   140015848:	adc    BYTE PTR [rbx],0x1
   14001584b:	rex add DWORD PTR [rax],eax
   14001584e:	add    BYTE PTR [rax],al
   140015850:	js     0x140015865
   140015852:	add    DWORD PTR [rax+0x1],eax
   140015855:	add    BYTE PTR [rax],al
   140015857:	add    BYTE PTR [rax+0x13],ch
   14001585a:	add    DWORD PTR [rax+0x1],eax
   14001585d:	add    BYTE PTR [rax],al
   14001585f:	add    BYTE PTR [rbx+rdx*1+0x1],bl
   140015863:	rex add DWORD PTR [rax],eax
   140015866:	add    BYTE PTR [rax],al
   140015868:	push   rsp
   140015869:	adc    eax,DWORD PTR [rcx]
   14001586b:	rex add DWORD PTR [rax],eax
   14001586e:	add    BYTE PTR [rax],al
   140015870:	pushf  
   140015871:	adc    eax,DWORD PTR [rcx]
   140015873:	rex add DWORD PTR [rax],eax
   140015876:	add    BYTE PTR [rax],al
   140015878:	adc    r8,QWORD PTR [rcx]
   14001587b:	rex add DWORD PTR [rax],eax
   14001587e:	add    BYTE PTR [rax],al
   140015880:	adc    r8d,DWORD PTR [rcx]
   140015883:	rex add DWORD PTR [rax],eax
   140015886:	add    BYTE PTR [rax],al
   140015888:	cmp    al,0x13
   14001588a:	add    DWORD PTR [rax+0x1],eax
   14001588d:	add    BYTE PTR [rax],al
   14001588f:	add    BYTE PTR [rax],dh
   140015891:	adc    eax,DWORD PTR [rcx]
   140015893:	rex add DWORD PTR [rax],eax
   140015896:	add    BYTE PTR [rax],al
   140015898:	sub    BYTE PTR [rbx],dl
   14001589a:	add    DWORD PTR [rax+0x1],eax
   14001589d:	add    BYTE PTR [rax],al
   14001589f:	add    BYTE PTR [rax],bl
   1400158a1:	adc    eax,DWORD PTR [rcx]
   1400158a3:	rex add DWORD PTR [rax],eax
   1400158a6:	add    BYTE PTR [rax],al
   1400158a8:	or     BYTE PTR [rbx],dl
   1400158aa:	add    DWORD PTR [rax+0x1],eax
   1400158ad:	add    BYTE PTR [rax],al
   1400158af:	add    BYTE PTR [rax],al
   1400158b1:	adc    eax,DWORD PTR [rcx]
   1400158b3:	rex add DWORD PTR [rax],eax
   1400158b6:	add    BYTE PTR [rax],al
   1400158b8:	cld    
   1400158b9:	adc    al,BYTE PTR [rcx]
   1400158bb:	rex add DWORD PTR [rax],eax
   1400158be:	add    BYTE PTR [rax],al
   1400158c0:	lock adc al,BYTE PTR [rcx]
   1400158c3:	rex add DWORD PTR [rax],eax
   1400158c6:	add    BYTE PTR [rax],al
   1400158c8:	fcom   DWORD PTR [rdx]
   1400158ca:	add    DWORD PTR [rax+0x1],eax
   1400158cd:	add    BYTE PTR [rax],al
   1400158cf:	add    al,cl
   1400158d1:	adc    al,BYTE PTR [rcx]
   1400158d3:	rex add DWORD PTR [rax],eax
   1400158d6:	add    BYTE PTR [rax],al
   1400158d8:	or     DWORD PTR [rax+rax*1],eax
   1400158db:	add    BYTE PTR [rcx],al
	...
   1400158e5:	add    BYTE PTR [rax],al
   1400158e7:	add    al,al
   1400158e9:	adc    al,BYTE PTR [rcx]
   1400158eb:	rex add DWORD PTR [rax],eax
   1400158ee:	add    BYTE PTR [rax],al
   1400158f0:	mov    eax,0x1400112
   1400158f5:	add    BYTE PTR [rax],al
   1400158f7:	add    BYTE PTR [rax+0x1400112],dh
   1400158fd:	add    BYTE PTR [rax],al
   1400158ff:	add    BYTE PTR [rax+0x1400112],ch
   140015905:	add    BYTE PTR [rax],al
   140015907:	add    BYTE PTR [rax+0x1400112],ah
   14001590d:	add    BYTE PTR [rax],al
   14001590f:	add    BYTE PTR [rax+0x1400112],bl
   140015915:	add    BYTE PTR [rax],al
   140015917:	add    BYTE PTR [rax+0x1400112],dl
   14001591d:	add    BYTE PTR [rax],al
   14001591f:	add    BYTE PTR [rax+0x1400112],al
   140015925:	add    BYTE PTR [rax],al
   140015927:	add    BYTE PTR [rax+0x12],dh
   14001592a:	add    DWORD PTR [rax+0x1],eax
   14001592d:	add    BYTE PTR [rax],al
   14001592f:	add    BYTE PTR [rax+0x12],ah
   140015932:	add    DWORD PTR [rax+0x1],eax
   140015935:	add    BYTE PTR [rax],al
   140015937:	add    BYTE PTR [rax+0x12],cl
   14001593a:	add    DWORD PTR [rax+0x1],eax
   14001593d:	add    BYTE PTR [rax],al
   14001593f:	add    BYTE PTR [rax],dh
   140015941:	adc    al,BYTE PTR [rcx]
   140015943:	rex add DWORD PTR [rax],eax
   140015946:	add    BYTE PTR [rax],al
   140015948:	and    BYTE PTR [rdx],dl
   14001594a:	add    DWORD PTR [rax+0x1],eax
   14001594d:	add    BYTE PTR [rax],al
   14001594f:	add    BYTE PTR [rax],cl
   140015951:	adc    al,BYTE PTR [rcx]
   140015953:	rex add DWORD PTR [rax],eax
   140015956:	add    BYTE PTR [rax],al
   140015958:	add    BYTE PTR [rdx],dl
   14001595a:	add    DWORD PTR [rax+0x1],eax
   14001595d:	add    BYTE PTR [rax],al
   14001595f:	add    al,bh
   140015961:	adc    DWORD PTR [rcx],eax
   140015963:	rex add DWORD PTR [rax],eax
   140015966:	add    BYTE PTR [rax],al
   140015968:	lock adc DWORD PTR [rcx],eax
   14001596b:	rex add DWORD PTR [rax],eax
   14001596e:	add    BYTE PTR [rax],al
   140015970:	call   0x141415a86
   140015975:	add    BYTE PTR [rax],al
   140015977:	add    al,ah
   140015979:	adc    DWORD PTR [rcx],eax
   14001597b:	rex add DWORD PTR [rax],eax
   14001597e:	add    BYTE PTR [rax],al
   140015980:	fcom   DWORD PTR [rcx]
   140015982:	add    DWORD PTR [rax+0x1],eax
   140015985:	add    BYTE PTR [rax],al
   140015987:	add    al,dl
   140015989:	adc    DWORD PTR [rcx],eax
   14001598b:	rex add DWORD PTR [rax],eax
   14001598e:	add    BYTE PTR [rax],al
   140015990:	enter  0x111,0x40
   140015994:	add    DWORD PTR [rax],eax
   140015996:	add    BYTE PTR [rax],al
   140015998:	rcl    BYTE PTR [rcx],0x1
   14001599b:	rex add DWORD PTR [rax],eax
   14001599e:	add    BYTE PTR [rax],al
   1400159a0:	mov    eax,0x1400111
   1400159a5:	add    BYTE PTR [rax],al
   1400159a7:	add    BYTE PTR [rax+0x1400111],dh
   1400159ad:	add    BYTE PTR [rax],al
   1400159af:	add    BYTE PTR [rax+0x1400111],ch
   1400159b5:	add    BYTE PTR [rax],al
   1400159b7:	add    BYTE PTR [rax+0x1400111],bl
   1400159bd:	add    BYTE PTR [rax],al
   1400159bf:	add    BYTE PTR [rax+0x1400111],al
   1400159c5:	add    BYTE PTR [rax],al
   1400159c7:	add    BYTE PTR [rax+0x11],dh
   1400159ca:	add    DWORD PTR [rax+0x1],eax
   1400159cd:	add    BYTE PTR [rax],al
   1400159cf:	add    BYTE PTR [rax+0x11],ah
   1400159d2:	add    DWORD PTR [rax+0x1],eax
   1400159d5:	add    BYTE PTR [rax],al
   1400159d7:	add    al,ah
   1400159d9:	adc    DWORD PTR [rcx],eax
   1400159db:	rex add DWORD PTR [rax],eax
   1400159de:	add    BYTE PTR [rax],al
   1400159e0:	push   rax
   1400159e1:	adc    DWORD PTR [rcx],eax
   1400159e3:	rex add DWORD PTR [rax],eax
   1400159e6:	add    BYTE PTR [rax],al
   1400159e8:	rex adc DWORD PTR [rcx],eax
   1400159eb:	rex add DWORD PTR [rax],eax
   1400159ee:	add    BYTE PTR [rax],al
   1400159f0:	xor    BYTE PTR [rcx],dl
   1400159f2:	add    DWORD PTR [rax+0x1],eax
   1400159f5:	add    BYTE PTR [rax],al
   1400159f7:	add    BYTE PTR [rax],bl
   1400159f9:	adc    DWORD PTR [rcx],eax
   1400159fb:	rex add DWORD PTR [rax],eax
   1400159fe:	add    BYTE PTR [rax],al
   140015a00:	or     BYTE PTR [rcx],dl
   140015a02:	add    DWORD PTR [rax+0x1],eax
   140015a05:	add    BYTE PTR [rax],al
   140015a07:	add    al,dh
   140015a09:	adc    BYTE PTR [rcx],al
   140015a0b:	rex add DWORD PTR [rax],eax
   140015a0e:	add    BYTE PTR [rax],al
   140015a10:	fcom   DWORD PTR [rax]
   140015a12:	add    DWORD PTR [rax+0x1],eax
   140015a15:	add    BYTE PTR [rax],al
   140015a17:	add    ah,cl
   140015a19:	adc    BYTE PTR [rcx],al
   140015a1b:	rex add DWORD PTR [rax],eax
   140015a1e:	add    BYTE PTR [rax],al
   140015a20:	(bad)  
   140015a21:	adc    BYTE PTR [rcx],al
   140015a23:	rex add DWORD PTR [rax],eax
   140015a26:	add    BYTE PTR [rax],al
   140015a28:	mov    al,0x10
   140015a2a:	add    DWORD PTR [rax+0x1],eax
   140015a2d:	add    BYTE PTR [rax],al
   140015a2f:	add    BYTE PTR [rax+0x1400110],cl
   140015a35:	add    BYTE PTR [rax],al
   140015a37:	add    BYTE PTR [rax+0x10],dh
   140015a3a:	add    DWORD PTR [rax+0x1],eax
   140015a3d:	add    BYTE PTR [rax],al
   140015a3f:	add    BYTE PTR [rcx],al
	...
   140015aa5:	add    BYTE PTR [rax],al
   140015aa7:	add    BYTE PTR [rdi+rdx*2+0x1],dh
   140015aab:	rex add DWORD PTR [rax],eax
	...
   140015ac6:	add    BYTE PTR [rax],al
   140015ac8:	je     0x140015b21
   140015aca:	add    DWORD PTR [rax+0x1],eax
	...
   140015ae5:	add    BYTE PTR [rax],al
   140015ae7:	add    BYTE PTR [rdi+rdx*2+0x1],dh
   140015aeb:	rex add DWORD PTR [rax],eax
	...
   140015b06:	add    BYTE PTR [rax],al
   140015b08:	je     0x140015b61
   140015b0a:	add    DWORD PTR [rax+0x1],eax
	...
   140015b25:	add    BYTE PTR [rax],al
   140015b27:	add    BYTE PTR [rdi+rdx*2+0x1],dh
   140015b2b:	rex add DWORD PTR [rax],eax
	...
   140015b46:	add    BYTE PTR [rax],al
   140015b48:	add    DWORD PTR [rax],eax
   140015b4a:	add    BYTE PTR [rax],al
   140015b4c:	add    DWORD PTR [rax],eax
	...
   140015b66:	add    BYTE PTR [rax],al
   140015b68:	jo     0x140015bcc
   140015b6a:	add    DWORD PTR [rax+0x1],eax
	...
   140015b7d:	add    BYTE PTR [rax],al
   140015b7f:	add    BYTE PTR [rax+0x17],ah
   140015b82:	add    DWORD PTR [rax+0x1],eax
   140015b85:	add    BYTE PTR [rax],al
   140015b87:	add    al,dh
   140015b89:	sbb    eax,DWORD PTR [rcx]
   140015b8b:	rex add DWORD PTR [rax],eax
   140015b8e:	add    BYTE PTR [rax],al
   140015b90:	jo     0x140015baf
   140015b92:	add    DWORD PTR [rax+0x1],eax
   140015b95:	add    BYTE PTR [rax],al
   140015b97:	add    BYTE PTR [rax+0x1400157],al
   140015b9d:	add    BYTE PTR [rax],al
   140015b9f:	add    BYTE PTR [rax+0x5a],al
   140015ba2:	add    DWORD PTR [rax+0x1],eax
   140015ba5:	add    BYTE PTR [rax],al
   140015ba7:	add    BYTE PTR [rcx+rbx*1+0x1],ah
   140015bab:	rex add DWORD PTR [rax],eax
	...
   140015bb6:	add    BYTE PTR [rax],al
   140015bb8:	add    DWORD PTR [rax],eax
	...
   140015bc6:	add    BYTE PTR [rax],al
   140015bc8:	add    DWORD PTR [rax],eax
	...
   140015be6:	add    BYTE PTR [rax],al
   140015be8:	add    DWORD PTR [rax],eax
	...
   140015bf6:	add    BYTE PTR [rax],al
   140015bf8:	add    DWORD PTR [rax],eax
	...
   140015c16:	add    BYTE PTR [rax],al
   140015c18:	add    DWORD PTR [rax],eax
	...
   140015c26:	add    BYTE PTR [rax],al
   140015c28:	add    DWORD PTR [rax],eax
	...
   140015c36:	add    BYTE PTR [rax],al
   140015c38:	add    DWORD PTR [rax],eax
	...
   140015c56:	add    BYTE PTR [rax],al
   140015c58:	add    DWORD PTR [rax],eax
	...
   140015c76:	add    BYTE PTR [rax],al
   140015c78:	add    DWORD PTR [rax],eax
	...
   140015c86:	add    BYTE PTR [rax],al
   140015c88:	add    DWORD PTR [rax],eax
	...
   140015c96:	add    BYTE PTR [rax],al
   140015c98:	add    DWORD PTR [rax],eax
	...
   140015cb6:	add    BYTE PTR [rax],al
   140015cb8:	add    DWORD PTR [rax],eax
	...
   140015cc6:	add    BYTE PTR [rax],al
   140015cc8:	add    DWORD PTR [rax],eax
	...
   140015cd6:	add    BYTE PTR [rax],al
   140015cd8:	add    DWORD PTR [rax],eax
	...
   140015dee:	add    BYTE PTR [rax],al
   140015df0:	rex.R int 0x0
   140015df3:	rex add DWORD PTR [rax],eax
   140015df6:	add    BYTE PTR [rax],al
   140015df8:	rex.R int 0x0
   140015dfb:	rex add DWORD PTR [rax],eax
   140015dfe:	add    BYTE PTR [rax],al
   140015e00:	rex.R int 0x0
   140015e03:	rex add DWORD PTR [rax],eax
   140015e06:	add    BYTE PTR [rax],al
   140015e08:	rex.R int 0x0
   140015e0b:	rex add DWORD PTR [rax],eax
   140015e0e:	add    BYTE PTR [rax],al
   140015e10:	rex.R int 0x0
   140015e13:	rex add DWORD PTR [rax],eax
   140015e16:	add    BYTE PTR [rax],al
   140015e18:	rex.R int 0x0
   140015e1b:	rex add DWORD PTR [rax],eax
   140015e1e:	add    BYTE PTR [rax],al
   140015e20:	rex.R int 0x0
   140015e23:	rex add DWORD PTR [rax],eax
   140015e26:	add    BYTE PTR [rax],al
   140015e28:	rex.R int 0x0
   140015e2b:	rex add DWORD PTR [rax],eax
   140015e2e:	add    BYTE PTR [rax],al
   140015e30:	rex.R int 0x0
   140015e33:	rex add DWORD PTR [rax],eax
   140015e36:	add    BYTE PTR [rax],al
   140015e38:	rex.R int 0x0
   140015e3b:	rex add DWORD PTR [rax],eax
   140015e3e:	add    BYTE PTR [rax],al
   140015e40:	xor    BYTE PTR [rdi+0x1],0x40
   140015e44:	add    DWORD PTR [rax],eax
	...
   140015e4e:	add    BYTE PTR [rax],al
   140015e50:	xor    BYTE PTR [rdi+0x1],0x40
   140015e54:	add    DWORD PTR [rax],eax
   140015e56:	add    BYTE PTR [rax],al
   140015e58:	add    DWORD PTR [rcx],eax
	...
   140015e62:	add    BYTE PTR [rax],al
   140015e64:	add    BYTE PTR [rax],dl
	...
   140015e86:	add    BYTE PTR [rax],al
   140015e88:	add    al,BYTE PTR [rax]
   140015e8a:	add    BYTE PTR [rax],al
   140015e8c:	add    DWORD PTR [rax],eax
	...
   140015eb6:	add    BYTE PTR [rax],al
   140015eb8:	add    al,BYTE PTR [rax]
   140015eba:	add    BYTE PTR [rax],al
   140015ebc:	add    al,BYTE PTR [rax]
	...
   1400161fe:	add    BYTE PTR [rax],al
   140016200:	rex adc eax,0x14001
   140016206:	add    BYTE PTR [rax],al
   140016208:	xor    BYTE PTR [rip+0x14001],dl        # 0x14002a20f
   14001620e:	add    BYTE PTR [rax],al
   140016210:	sbb    BYTE PTR [rsi],dl
   140016212:	add    DWORD PTR [rax+0x1],eax
	...
   14001621d:	add    BYTE PTR [rax],al
   14001621f:	add    BYTE PTR [rsi],ch
   140016221:	(bad)  
   140016222:	push   r14
   140016224:	(bad)
   140016229:	js     0x14001628e
   14001622b:	gs jo  0x1400162a2
   14001622e:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140016235:	rex
   140016236:	add    BYTE PTR [rax],bl
   140016239:	(bad)  
   14001623a:	add    DWORD PTR [rax+0x1],eax
	...
   140016245:	add    BYTE PTR [rax],al
   140016247:	add    BYTE PTR [rsi],ch
   140016249:	(bad)  
   14001624a:	push   r14
   14001624c:	je     0x1400162c7
   14001624e:	jo     0x1400162b5
   140016250:	pop    rdi
   140016251:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...
   140016260:	add    BYTE PTR cs:[rax],al
   140016263:	add    BYTE PTR [rsi],ch
   140016265:	add    BYTE PTR [rax],al
   140016267:	add    BYTE PTR [rax+0x62],dh
   14001626a:	add    DWORD PTR [rax+0x1],eax
   14001626d:	add    BYTE PTR [rax],al
   14001626f:	add    BYTE PTR [rax+0x62],ah
   140016272:	add    DWORD PTR [rax+0x1],eax
   140016275:	add    BYTE PTR [rax],al
   140016277:	add    BYTE PTR [rax+0x1400174],bl
   14001627d:	add    BYTE PTR [rax],al
   14001627f:	add    BYTE PTR [rax+0x1400174],bl
   140016285:	add    BYTE PTR [rax],al
   140016287:	add    BYTE PTR [rax+0x1400174],bl
   14001628d:	add    BYTE PTR [rax],al
   14001628f:	add    BYTE PTR [rax+0x1400174],bl
   140016295:	add    BYTE PTR [rax],al
   140016297:	add    BYTE PTR [rax+0x1400174],bl
   14001629d:	add    BYTE PTR [rax],al
   14001629f:	add    BYTE PTR [rax+0x1400174],bl
   1400162a5:	add    BYTE PTR [rax],al
   1400162a7:	add    BYTE PTR [rax+0x1400174],bl
   1400162ad:	add    BYTE PTR [rax],al
   1400162af:	add    BYTE PTR [rax+0x1400174],bl
   1400162b5:	add    BYTE PTR [rax],al
   1400162b7:	add    BYTE PTR [rax+0x1400174],bl
   1400162bd:	add    BYTE PTR [rax],al
   1400162bf:	add    BYTE PTR [rdi+0x7f],bh
   1400162c2:	jg     0x140016343
   1400162c4:	jg     0x140016345
   1400162c6:	jg     0x140016347
   1400162c8:	fs (bad) 
   1400162cb:	rex add DWORD PTR [rax],eax
   1400162ce:	add    BYTE PTR [rax],al
   1400162d0:	pushf  
   1400162d1:	je     0x1400162d4
   1400162d3:	rex add DWORD PTR [rax],eax
   1400162d6:	add    BYTE PTR [rax],al
   1400162d8:	pushf  
   1400162d9:	je     0x1400162dc
   1400162db:	rex add DWORD PTR [rax],eax
   1400162de:	add    BYTE PTR [rax],al
   1400162e0:	pushf  
   1400162e1:	je     0x1400162e4
   1400162e3:	rex add DWORD PTR [rax],eax
   1400162e6:	add    BYTE PTR [rax],al
   1400162e8:	pushf  
   1400162e9:	je     0x1400162ec
   1400162eb:	rex add DWORD PTR [rax],eax
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	pushf  
   1400162f1:	je     0x1400162f4
   1400162f3:	rex add DWORD PTR [rax],eax
   1400162f6:	add    BYTE PTR [rax],al
   1400162f8:	pushf  
   1400162f9:	je     0x1400162fc
   1400162fb:	rex add DWORD PTR [rax],eax
   1400162fe:	add    BYTE PTR [rax],al
   140016300:	pushf  
   140016301:	je     0x140016304
   140016303:	rex add DWORD PTR [rax],eax
   140016306:	add    BYTE PTR [rax],al
   140016308:	(bad)  
   140016309:	(bad)  
   14001630a:	add    DWORD PTR [rax+0x1],eax
   14001630d:	add    BYTE PTR [rax],al
   14001630f:	add    BYTE PTR [rdx+0x19],ah
   140016312:	add    DWORD PTR [rax+0x1],eax
   140016315:	add    BYTE PTR [rax],al
   140016317:	add    BYTE PTR [rcx],al
   140016319:	add    BYTE PTR [rax],al
   14001631b:	add    BYTE PTR [rsi],ch
   14001631d:	add    BYTE PTR [rax],al
   14001631f:	add    BYTE PTR [rcx],al
	...
   14001632d:	add    BYTE PTR [rax],al
   14001632f:	add    BYTE PTR [rdx],al
	...
   14001633d:	add    BYTE PTR [rax],al
   14001633f:	add    dh,bh
   140016341:	(bad)  
   140016342:	(bad)  
   140016343:	(bad)  
   140016344:	(bad)  
   140016345:	(bad)  
   140016346:	(bad)  
   140016347:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140019000 <.pdata>:
   140019000:	or     BYTE PTR [rax],dl
   140019002:	add    BYTE PTR [rax],al
   140019004:	xor    dl,BYTE PTR [rax]
   140019006:	add    BYTE PTR [rax],al
   140019008:	in     al,0x3a
   14001900a:	add    DWORD PTR [rax],eax
   14001900c:	cmp    BYTE PTR [rax],dl
   14001900e:	add    BYTE PTR [rax],al
   140019010:	mov    edx,0xdc000011
   140019015:	cmp    al,0x1
   140019017:	add    al,al
   140019019:	adc    DWORD PTR [rax],eax
   14001901b:	add    BYTE PTR [rsi],ah
   14001901d:	adc    al,BYTE PTR [rax]
   14001901f:	add    al,bh
   140019021:	cmp    al,0x1
   140019023:	add    BYTE PTR [rdx+rdx*1],ch
   140019026:	add    BYTE PTR [rax],al
   140019028:	add    DWORD PTR [rbx],edx
   14001902a:	add    BYTE PTR [rax],al
   14001902c:	cmp    BYTE PTR [rsi],0x1
   14001902f:	add    BYTE PTR [rax],cl
   140019031:	adc    eax,DWORD PTR [rax]
   140019033:	add    BYTE PTR [rdi],bh
   140019035:	adc    eax,DWORD PTR [rax]
   140019037:	add    al,bh
   140019039:	cmp    eax,DWORD PTR [rcx]
   14001903b:	add    BYTE PTR [rax+0x13],cl
   14001903e:	add    BYTE PTR [rax],al
   140019040:	not    BYTE PTR [rsi]
   140019042:	add    BYTE PTR [rax],al
   140019044:	and    BYTE PTR [rdi],bh
   140019046:	add    DWORD PTR [rax],eax
   140019048:	cld    
   140019049:	(bad)  
   14001904a:	add    BYTE PTR [rax],al
   14001904c:	xor    eax,0x38000017
   140019051:	xor    eax,0x173c0001
   140019056:	add    BYTE PTR [rax],al
   140019058:	sbb    ebx,DWORD PTR [rax]
   14001905a:	add    BYTE PTR [rax],al
   14001905c:	hlt    
   14001905d:	cmp    eax,0x18240001
   140019062:	add    BYTE PTR [rax],al
   140019064:	fstp   DWORD PTR [rax]
   140019066:	add    BYTE PTR [rax],al
   140019068:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019069:	cmp    eax,0x18e00001
   14001906e:	add    BYTE PTR [rax],al
   140019070:	lock sbb DWORD PTR [rax],eax
   140019073:	add    BYTE PTR [rax-0x7fffecb],bh
   140019079:	sbb    DWORD PTR [rax],eax
   14001907b:	add    bh,al
   14001907d:	sbb    eax,DWORD PTR [rax]
   14001907f:	add    BYTE PTR [rsi+rdi*1+0x1],ah
   140019083:	add    al,dl
   140019085:	sbb    eax,DWORD PTR [rax]
   140019087:	add    BYTE PTR [rsp+rbx*1+0x3e480000],bl
   14001908e:	add    DWORD PTR [rax],eax
   140019090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019091:	sbb    al,0x0
   140019093:	add    BYTE PTR [rdx+0x1d],bl
   140019096:	add    BYTE PTR [rax],al
   140019098:	call   0x1a00191da
   14001909d:	sbb    eax,0x1e7a0000
   1400190a2:	add    BYTE PTR [rax],al
   1400190a4:	or     al,0x3f
   1400190a6:	add    DWORD PTR [rax],eax
   1400190a8:	sbb    BYTE PTR [rsi],0x0
   1400190ab:	add    BYTE PTR [rcx],al
   1400190ad:	and    BYTE PTR [rax],al
   1400190af:	add    ah,dl
   1400190b1:	cmp    eax,0x20080001
   1400190b6:	add    BYTE PTR [rax],al
   1400190b8:	je     0x1400190da
   1400190ba:	add    BYTE PTR [rax],al
   1400190bc:	mov    eax,0x7c00013e
   1400190c1:	and    BYTE PTR [rax],al
   1400190c3:	add    BYTE PTR [rip+0xfffffffff4000022],ch        # 0x1340190eb
   1400190c9:	add    DWORD PTR ds:[rax],eax
   1400190cc:	xor    al,0x22
   1400190ce:	add    BYTE PTR [rax],al
   1400190d0:	pop    rax
   1400190d1:	and    eax,DWORD PTR [rax]
   1400190d3:	add    BYTE PTR [rbp+rdi*1+0x23600001],dh
   1400190da:	add    BYTE PTR [rax],al
   1400190dc:	and    ah,BYTE PTR [rax+rax*1]
   1400190df:	add    BYTE PTR [rbp+rdi*1+0x24280001],ah
   1400190e6:	add    BYTE PTR [rax],al
   1400190e8:	rex.RB and eax,0x3edc0000
   1400190ee:	add    DWORD PTR [rax],eax
   1400190f0:	rex.WR and rax,0x26620000
   1400190f6:	add    BYTE PTR [rax],al
   1400190f8:	(bad)  
   1400190f9:	add    DWORD PTR ds:[rax],eax
   1400190fc:	push   0x77000026
   140019101:	(bad)  
   140019102:	add    BYTE PTR [rax],al
   140019104:	nop
   140019105:	cmp    eax,0x27800001
   14001910a:	add    BYTE PTR [rax],al
   14001910c:	sub    BYTE PTR [r8],al
   14001910f:	add    BYTE PTR [rax],dh
   140019111:	add    DWORD PTR ds:[rax],eax
   140019114:	rex.W sub BYTE PTR [rax],al
   140019117:	add    BYTE PTR [rax],cl
   140019119:	sub    DWORD PTR [rax],eax
   14001911b:	add    BYTE PTR [rax],bl
   14001911d:	add    DWORD PTR ds:[rax],eax
   140019120:	adc    BYTE PTR [rcx],ch
   140019122:	add    BYTE PTR [rax],al
   140019124:	sub    al,BYTE PTR ds:[rax]
   140019127:	add    ah,bl
   140019129:	cmp    al,0x1
   14001912b:	add    BYTE PTR [rdx+rbp*1+0x0],al
   14001912f:	add    dl,ah
   140019131:	sub    eax,DWORD PTR [rax]
   140019133:	add    ah,bh
   140019135:	cmp    eax,0x2be80001
   14001913a:	add    BYTE PTR [rax],al
   14001913c:	(bad)  
   14001913d:	sub    al,0x0
   14001913f:	add    BYTE PTR [rax+0x3f],dl
   140019142:	add    DWORD PTR [rax],eax
   140019144:	shr    BYTE PTR [rax+rax*1],1
   140019147:	add    BYTE PTR [rbx+0x2e],ah
   14001914a:	add    BYTE PTR [rax],al
   14001914c:	cmp    al,0x3f
   14001914e:	add    DWORD PTR [rax],eax
   140019150:	ins    BYTE PTR es:[rdi],dx
   140019151:	add    BYTE PTR cs:[rax],al
   140019154:	mov    ebp,DWORD PTR [rdi]
   140019156:	add    BYTE PTR [rax],al
   140019158:	(bad)  
   140019159:	(bad)  
   14001915a:	add    DWORD PTR [rax],eax
   14001915c:	xchg   esp,eax
   14001915d:	(bad)  
   14001915e:	add    BYTE PTR [rax],al
   140019160:	icebp  
   140019161:	xor    BYTE PTR [rax],al
   140019163:	add    BYTE PTR [rsi+rdi*1+0x30f80001],bl
   14001916a:	add    BYTE PTR [rax],al
   14001916c:	sub    eax,0x74000033
   140019171:	(bad)  
   140019172:	add    DWORD PTR [rax],eax
   140019174:	xor    al,0x33
   140019176:	add    BYTE PTR [rax],al
   140019178:	pop    rax
   140019179:	xor    eax,0x3d680000
   14001917e:	add    DWORD PTR [rax],eax
   140019180:	(bad)  
   140019181:	xor    eax,0x37350000
   140019186:	add    BYTE PTR [rax],al
   140019188:	rex.R cmp eax,0x373c0001
   14001918e:	add    BYTE PTR [rax],al
   140019190:	sahf   
   140019191:	cmp    BYTE PTR [rax],al
   140019193:	add    BYTE PTR [rax],ch
   140019195:	cmp    eax,0x38a40001
   14001919a:	add    BYTE PTR [rax],al
   14001919c:	mov    edi,DWORD PTR [rdx]
   14001919e:	add    BYTE PTR [rax],al
   1400191a0:	or     BYTE PTR [rip+0x3a940001],bh        # 0x17a9591a7
   1400191a6:	add    BYTE PTR [rax],al
   1400191a8:	or     edi,DWORD PTR [rax+rax*1]
   1400191ab:	add    BYTE PTR [rax+0x14000132],cl
   1400191b1:	cmp    al,0x0
   1400191b3:	add    BYTE PTR [rsi],ah
   1400191b5:	cmp    al,0x0
   1400191b7:	add    ah,ah
   1400191b9:	cmp    al,BYTE PTR [rcx]
   1400191bb:	add    BYTE PTR [rax+0x3c],dl
   1400191be:	add    BYTE PTR [rax],al
   1400191c0:	outs   dx,DWORD PTR ds:[rsi]
   1400191c1:	cmp    al,0x0
   1400191c3:	add    BYTE PTR [rax+0xc000132],dh
   1400191c9:	cmp    eax,0x3e080000
   1400191ce:	add    BYTE PTR [rax],al
   1400191d0:	mov    ah,0x32
   1400191d2:	add    DWORD PTR [rax],eax
   1400191d4:	adc    BYTE PTR [rsi],bh
   1400191d6:	add    BYTE PTR [rax],al
   1400191d8:	es add BYTE PTR ds:[rax],al
   1400191dc:	xor    BYTE PTR [rip+0x3e2c0001],dh        # 0x17e2d91e3
   1400191e2:	add    BYTE PTR [rax],al
   1400191e4:	mov    bl,0x3e
   1400191e6:	add    BYTE PTR [rax],al
   1400191e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400191e9:	cmp    eax,0x3ebc0001
   1400191ee:	add    BYTE PTR [rax],al
   1400191f0:	fstp   TBYTE PTR [rsi]
   1400191f2:	add    BYTE PTR [rax],al
   1400191f4:	fdiv   QWORD PTR [rdx]
   1400191f6:	add    DWORD PTR [rax],eax
   1400191f8:	sbb    BYTE PTR [rdi],bh
   1400191fa:	add    BYTE PTR [rax],al
   1400191fc:	mov    ecx,0x3800003f
   140019201:	xor    eax,0x3fc00001
   140019206:	add    BYTE PTR [rax],al
   140019208:	ret    0x40
   14001920b:	add    BYTE PTR [rbx+rsi*1+0x1],dl
   14001920f:	add    al,cl
   140019211:	add    BYTE PTR [rax],al
   140019214:	rex.WRX
   140019215:	add    BYTE PTR [r8],al
   140019218:	in     al,0x3a
   14001921a:	add    DWORD PTR [rax],eax
   14001921c:	push   rsp
   14001921d:	add    BYTE PTR [r8],al
   140019220:	xchg   ebp,eax
   140019221:	add    BYTE PTR [r8],al
   140019224:	in     al,0x3a
   140019226:	add    DWORD PTR [rax],eax
   140019228:	pushf  
   140019229:	add    BYTE PTR [r8],al
   14001922c:	mov    ah,0x41
   14001922e:	add    BYTE PTR [rax],al
   140019230:	in     al,0x3a
   140019232:	add    DWORD PTR [rax],eax
   140019234:	mov    esp,0xf5000041
   140019239:	add    BYTE PTR [r8],al
   14001923c:	cmp    BYTE PTR [rip+0x41fc0001],dh        # 0x181fd9243
   140019242:	add    BYTE PTR [rax],al
   140019244:	adc    al,BYTE PTR [rdx+0x0]
   140019247:	add    BYTE PTR [rax],bh
   140019249:	xor    eax,0x42380001
   14001924e:	add    BYTE PTR [rax],al
   140019250:	jnp    0x140019294
   140019252:	add    BYTE PTR [rax],al
   140019254:	cmp    BYTE PTR [rip+0x42840001],dh        # 0x18285925b
   14001925a:	add    BYTE PTR [rax],al
   14001925c:	mov    bh,0x42
   14001925e:	add    BYTE PTR [rax],al
   140019260:	push   0xffffffffc0000133
   140019265:	rex.X add BYTE PTR [rax],al
   140019268:	stc    
   140019269:	rex.X add BYTE PTR [rax],al
   14001926c:	clc    
   14001926d:	cmp    eax,DWORD PTR [rcx]
   14001926f:	add    BYTE PTR [rax],al
   140019271:	rex.XB add BYTE PTR [r8],al
   140019274:	scas   eax,DWORD PTR es:[rdi]
   140019275:	rex.XB add BYTE PTR [r8],al
   140019278:	clc    
   140019279:	cmp    eax,DWORD PTR [rcx]
   14001927b:	add    BYTE PTR [rax+0x47000043],bh
   140019281:	add    BYTE PTR [r8],r8b
   140019284:	je     0x1400192b9
   140019286:	add    DWORD PTR [rax],eax
   140019288:	movabs al,ds:0x38000045c6000045
   140019291:	xor    eax,0x45fc0001
   140019296:	add    BYTE PTR [rax],al
   140019298:	pop    rcx
   140019299:	rex.W add BYTE PTR [rax],al
   14001929c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001929d:	xor    eax,DWORD PTR [rcx]
   14001929f:	add    BYTE PTR [rax+0x48],ah
   1400192a2:	add    BYTE PTR [rax],al
   1400192a4:	movabs ds:0xac00013ae4000048,eax
   1400192ad:	rex.W add BYTE PTR [rax],al
   1400192b0:	test   eax,0xc800004a
   1400192b5:	xor    eax,DWORD PTR [rcx]
   1400192b7:	add    BYTE PTR [rax-0x7fffffb6],dh
   1400192bd:	rex.WR add BYTE PTR [rax],r8b
   1400192c0:	nop
   1400192c1:	cmp    eax,0x4c880001
   1400192c6:	add    BYTE PTR [rax],al
   1400192c8:	mov    ebp,0xe400004d
   1400192cd:	xor    eax,DWORD PTR [rcx]
   1400192cf:	add    ah,al
   1400192d1:	rex.WRB add BYTE PTR [r8],r8b
   1400192d4:	pop    rsp
   1400192d5:	rex.WRXB add BYTE PTR [r8],r8b
   1400192d8:	cld    
   1400192d9:	xor    eax,DWORD PTR [rcx]
   1400192db:	add    BYTE PTR [rdi+rcx*2+0x0],ah
   1400192df:	add    BYTE PTR [rax+rdx*2+0x0],dl
   1400192e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400192e6:	add    DWORD PTR [rax],eax
   1400192e8:	pop    rsp
   1400192e9:	push   rax
   1400192ea:	add    BYTE PTR [rax],al
   1400192ec:	loope  0x14001933e
   1400192ee:	add    BYTE PTR [rax],al
   1400192f0:	nop
   1400192f1:	cmp    eax,0x50e80001
   1400192f6:	add    BYTE PTR [rax],al
   1400192f8:	mov    edx,0x24000053
   1400192fd:	xor    al,0x1
   1400192ff:	add    al,al
   140019301:	push   rbx
   140019302:	add    BYTE PTR [rax],al
   140019304:	clc    
   140019305:	push   rbx
   140019306:	add    BYTE PTR [rax],al
   140019308:	clc    
   140019309:	cmp    eax,DWORD PTR [rcx]
   14001930b:	add    BYTE PTR [rax],al
   14001930d:	push   rsp
   14001930e:	add    BYTE PTR [rax],al
   140019310:	cmp    BYTE PTR [rax+rax*1+0x0],dl
   140019314:	clc    
   140019315:	cmp    eax,DWORD PTR [rcx]
   140019317:	add    BYTE PTR [rax+0x54],dl
   14001931a:	add    BYTE PTR [rax],al
   14001931c:	jne    0x140019372
   14001931e:	add    BYTE PTR [rax],al
   140019320:	in     al,0x3a
   140019322:	add    DWORD PTR [rax],eax
   140019324:	jl     0x14001937a
   140019326:	add    BYTE PTR [rax],al
   140019328:	xor    DWORD PTR [rbp+0x0],edx
   14001932b:	add    BYTE PTR [rax+0x34],al
   14001932e:	add    DWORD PTR [rax],eax
   140019330:	cmp    BYTE PTR [rbp+0x0],dl
   140019333:	add    BYTE PTR [rbp+rdx*2+0x3bf80000],bh
   14001933a:	add    DWORD PTR [rax],eax
   14001933c:	(bad)  
   14001933d:	push   rbp
   14001933e:	add    BYTE PTR [rax],al
   140019340:	call   0x17801939a
   140019345:	xor    eax,0x55f00001
   14001934a:	add    BYTE PTR [rax],al
   14001934c:	and    edx,DWORD PTR [rdi+0x0]
   14001934f:	add    BYTE PTR [rsp+rsi*1+0x1],dh
   140019353:	add    BYTE PTR [rdi+rdx*2],ch
   140019356:	add    BYTE PTR [rax],al
   140019358:	lods   eax,DWORD PTR ds:[rsi]
   140019359:	push   rdi
   14001935a:	add    BYTE PTR [rax],al
   14001935c:	cmp    BYTE PTR [rip+0x57b40001],dh        # 0x197b59363
   140019362:	add    BYTE PTR [rax],al
   140019364:	or     bl,BYTE PTR [rax+0x0]
   140019367:	add    ah,ah
   140019369:	cmp    al,BYTE PTR [rcx]
   14001936b:	add    BYTE PTR [rax],dl
   14001936d:	pop    rax
   14001936e:	add    BYTE PTR [rax],al
   140019370:	ret    
   140019371:	pop    rax
   140019372:	add    BYTE PTR [rax],al
   140019374:	test   al,0x34
   140019376:	add    DWORD PTR [rax],eax
   140019378:	int3   
   140019379:	pop    rax
   14001937a:	add    BYTE PTR [rax],al
   14001937c:	or     DWORD PTR [rcx+0x0],ebx
   14001937f:	add    BYTE PTR [rsp+rsi*1+0x59100001],dh
   140019386:	add    BYTE PTR [rax],al
   140019388:	pop    rdx
   140019389:	pop    rdx
   14001938a:	add    BYTE PTR [rax],al
   14001938c:	mov    esp,0x60000134
   140019391:	pop    rdx
   140019392:	add    BYTE PTR [rax],al
   140019394:	in     eax,dx
   140019395:	pop    rbx
   140019396:	add    BYTE PTR [rax],al
   140019398:	(bad)  
   140019399:	xor    al,0x1
   14001939b:	add    ah,dh
   14001939d:	pop    rbx
   14001939e:	add    BYTE PTR [rax],al
   1400193a0:	sub    ebx,DWORD PTR [rax+rax*1+0x0]
   1400193a4:	cmp    BYTE PTR [rip+0x5c340001],dh        # 0x19c3593ab
   1400193aa:	add    BYTE PTR [rax],al
   1400193ac:	loopne 0x14001940a
   1400193ae:	add    BYTE PTR [rax],al
   1400193b0:	in     al,dx
   1400193b1:	(bad)  
   1400193b2:	add    DWORD PTR [rax],eax
   1400193b4:	call   0x105019415
   1400193b9:	add    BYTE PTR [eax],al
   1400193bc:	fdiv   DWORD PTR [rcx+rax*1]
   1400193bf:	add    ah,bl
   1400193c1:	add    BYTE PTR [eax],al
   1400193c4:	(bad)  
   1400193c5:	imul   eax,DWORD PTR [rax],0x134fc00
   1400193cb:	add    BYTE PTR [rax],dh
   1400193cd:	imul   eax,DWORD PTR [rax],0x696100
   1400193d3:	add    ah,ah
   1400193d5:	cmp    al,BYTE PTR [rcx]
   1400193d7:	add    BYTE PTR [rax+0x69],ch
   1400193da:	add    BYTE PTR [rax],al
   1400193dc:	xlat   BYTE PTR ds:[rbx]
   1400193dd:	imul   eax,DWORD PTR [rax],0x1351c00
   1400193e3:	add    al,ah
   1400193e5:	imul   eax,DWORD PTR [rax],0x69fe00
   1400193eb:	add    BYTE PTR [rax],dh
   1400193ed:	xor    eax,0x6a540001
   1400193f2:	add    BYTE PTR [rax],al
   1400193f4:	je     0x140019460
   1400193f6:	add    BYTE PTR [rax],al
   1400193f8:	in     al,0x3a
   1400193fa:	add    DWORD PTR [rax],eax
   1400193fc:	jl     0x140019468
   1400193fe:	add    BYTE PTR [rax],al
   140019400:	pushf  
   140019401:	push   0x0
   140019403:	add    ah,ah
   140019405:	cmp    al,BYTE PTR [rcx]
   140019407:	add    BYTE PTR [rdx+rbp*2+0x6aea0000],ah
   14001940e:	add    BYTE PTR [rax],al
   140019410:	cmp    BYTE PTR [rip+0x6b000001],dh        # 0x1ab019417
   140019416:	add    BYTE PTR [rax],al
   140019418:	(bad)  
   140019419:	imul   eax,DWORD PTR [rax],0x0
   14001941c:	rex xor eax,0x6c000001
   140019422:	add    BYTE PTR [rax],al
   140019424:	xor    al,0x6f
   140019426:	add    BYTE PTR [rax],al
   140019428:	xor    rax,0x6f3c0001
   14001942e:	add    BYTE PTR [rax],al
   140019430:	es jo  0x140019433
   140019433:	add    BYTE PTR [rbp+rsi*1+0x1],cl
   140019437:	add    BYTE PTR [rax+rsi*2],ch
   14001943a:	add    BYTE PTR [rax],al
   14001943c:	rex.B jo 0x14001943f
   14001943f:	add    ah,ah
   140019441:	cmp    al,BYTE PTR [rcx]
   140019443:	add    BYTE PTR [rax+0x70],cl
   140019446:	add    BYTE PTR [rax],al
   140019448:	pop    rbp
   140019449:	jo     0x14001944b
   14001944b:	add    ah,ah
   14001944d:	cmp    al,BYTE PTR [rcx]
   14001944f:	add    BYTE PTR [rax+rsi*2+0x0],ah
   140019453:	add    BYTE PTR [rdi+0x70],bh
   140019456:	add    BYTE PTR [rax],al
   140019458:	cmp    BYTE PTR [rip+0x70880001],dh        # 0x1b089945f
   14001945e:	add    BYTE PTR [rax],al
   140019460:	movabs ds:0xac00013538000070,eax
   140019469:	jo     0x14001946b
   14001946b:	add    BYTE PTR [rdi+0x71],dl
   14001946e:	add    BYTE PTR [rax],al
   140019470:	push   0x60000135
   140019475:	jno    0x140019477
   140019477:	add    bh,ah
   140019479:	jno    0x14001947b
   14001947b:	add    BYTE PTR [rax-0xffffecb],al
   140019481:	jno    0x140019483
   140019483:	add    BYTE PTR [rcx+0x54000072],dl
   140019489:	xor    eax,DWORD PTR [rcx]
   14001948b:	add    BYTE PTR [rax-0x16ffff8e],bl
   140019491:	jb     0x140019493
   140019493:	add    BYTE PTR [rax-0xffffecb],bl
   140019499:	jb     0x14001949b
   14001949b:	add    BYTE PTR [rcx],bl
   14001949d:	je     0x14001949f
   14001949f:	add    BYTE PTR [rax+0x20000135],bh
   1400194a5:	je     0x1400194a7
   1400194a7:	add    BYTE PTR [rbx+0x74],ah
   1400194aa:	add    BYTE PTR [rax],al
   1400194ac:	cmp    BYTE PTR [rip+0x746c0001],dh        # 0x1b46d94b3
   1400194b2:	add    BYTE PTR [rax],al
   1400194b4:	sahf   
   1400194b5:	je     0x1400194b7
   1400194b7:	add    BYTE PTR [rax],bh
   1400194b9:	xor    eax,0x74a40001
   1400194be:	add    BYTE PTR [rax],al
   1400194c0:	add    dh,BYTE PTR [rbp+0x0]
   1400194c3:	add    al,bh
   1400194c5:	cmp    eax,DWORD PTR [rcx]
   1400194c7:	add    BYTE PTR [rax],cl
   1400194c9:	jne    0x1400194cb
   1400194cb:	add    al,bh
   1400194cd:	jne    0x1400194cf
   1400194cf:	add    al,dl
   1400194d1:	xor    eax,0x76180001
   1400194d6:	add    BYTE PTR [rax],al
   1400194d8:	push   rcx
   1400194d9:	jbe    0x1400194db
   1400194db:	add    al,bh
   1400194dd:	cmp    eax,DWORD PTR [rcx]
   1400194df:	add    BYTE PTR [rax+0x76],bl
   1400194e2:	add    BYTE PTR [rax],al
   1400194e4:	jns    0x14001955c
   1400194e6:	add    BYTE PTR [rax],al
   1400194e8:	cmp    BYTE PTR [rip+0x76800001],dh        # 0x1b68194ef
   1400194ee:	add    BYTE PTR [rax],al
   1400194f0:	and    esi,DWORD PTR [rdi+0x0]
   1400194f3:	add    al,dh
   1400194f5:	xor    eax,0x772c0001
   1400194fa:	add    BYTE PTR [rax],al
   1400194fc:	mov    eax,0x90000077
   140019501:	cmp    eax,0x77c00001
   140019506:	add    BYTE PTR [rax],al
   140019508:	mov    al,0x79
   14001950a:	add    BYTE PTR [rax],al
   14001950c:	clc    
   14001950d:	xor    eax,0x79b80001
   140019512:	add    BYTE PTR [rax],al
   140019514:	jb     0x140019590
   140019516:	add    BYTE PTR [rax],al
   140019518:	sbb    BYTE PTR [rsi],dh
   14001951a:	add    DWORD PTR [rax],eax
   14001951c:	js     0x140019598
   14001951e:	add    BYTE PTR [rax],al
   140019520:	or     BYTE PTR [rbx+0x0],bh
   140019523:	add    al,dh
   140019525:	xor    eax,0x7b100001
   14001952a:	add    BYTE PTR [rax],al
   14001952c:	test   DWORD PTR [rbp+0x0],edi
   14001952f:	add    BYTE PTR [rsi+rsi*1],bh
   140019532:	add    DWORD PTR [rax],eax
   140019534:	mov    WORD PTR [rbp+0x0],?
   140019537:	add    BYTE PTR [rdx+0x7f],ch
   14001953a:	add    BYTE PTR [rax],al
   14001953c:	pop    rax
   14001953d:	add    DWORD PTR ss:[rax],eax
   140019540:	jo     0x1400195c1
   140019542:	add    BYTE PTR [rax],al
   140019544:	cwde   
   140019545:	jg     0x140019547
   140019547:	add    ah,ah
   140019549:	cmp    al,BYTE PTR [rcx]
   14001954b:	add    al,ah
   14001954d:	add    BYTE PTR [rax],0x0
   140019550:	pop    rcx
   140019551:	(bad)  
   140019552:	add    BYTE PTR [rax],al
   140019554:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019555:	cmp    eax,0x82600001
   14001955a:	add    BYTE PTR [rax],al
   14001955c:	mov    bh,0x82
   14001955e:	add    BYTE PTR [rax],al
   140019560:	cmp    BYTE PTR [rip+0xffffffff82c00001],dh        # 0xc2c19567
   140019566:	add    BYTE PTR [rax],al
   140019568:	xor    eax,0x88000083
   14001956d:	add    DWORD PTR ss:[rax],eax
   140019570:	cmp    al,0x83
   140019572:	add    BYTE PTR [rax],al
   140019574:	adc    DWORD PTR [rax+rax*1+0x136a800],eax
   14001957b:	add    BYTE PTR [rax],bl
   14001957d:	test   BYTE PTR [rax],al
   14001957f:	add    BYTE PTR [rbx],bh
   140019581:	test   BYTE PTR [rax],al
   140019583:	add    BYTE PTR [rsi+rsi*1-0x7bbbffff],dh
   14001958a:	add    BYTE PTR [rax],al
   14001958c:	imul   eax,DWORD PTR [rax+rax*1+0x136d400],0x847000
   140019597:	add    BYTE PTR [rbp-0x1bffff7c],cl
   14001959d:	cmp    al,BYTE PTR [rcx]
   14001959f:	add    BYTE PTR [rsp+rax*4-0x7ae80000],dl
   1400195a6:	add    BYTE PTR [rax],al
   1400195a8:	hlt    
   1400195a9:	add    DWORD PTR ss:[rax],eax
   1400195ac:	and    BYTE PTR [rbp-0x7a590000],al
   1400195b2:	add    BYTE PTR [rax],al
   1400195b4:	nop
   1400195b5:	cmp    eax,0x85d00001
   1400195ba:	add    BYTE PTR [rax],al
   1400195bc:	mov    dh,0x86
   1400195be:	add    BYTE PTR [rax],al
   1400195c0:	or     BYTE PTR [rdi],dh
   1400195c2:	add    DWORD PTR [rax],eax
   1400195c4:	mov    esp,0x86
   1400195c9:	xchg   DWORD PTR [rax],eax
   1400195cb:	add    al,bh
   1400195cd:	cmp    eax,DWORD PTR [rcx]
   1400195cf:	add    BYTE PTR [rax-0x79],al
   1400195d2:	add    BYTE PTR [rax],al
   1400195d4:	jb     0x14001955f
   1400195d6:	add    BYTE PTR [rax],al
   1400195d8:	xor    al,0x37
   1400195da:	add    DWORD PTR [rax],eax
   1400195dc:	test   al,0x89
   1400195de:	add    BYTE PTR [rax],al
   1400195e0:	fisttp DWORD PTR [rcx+0x35380000]
   1400195e6:	add    DWORD PTR [rax],eax
   1400195e8:	in     al,0x89
   1400195ea:	add    BYTE PTR [rax],al
   1400195ec:	(bad)  
   1400195ed:	mov    al,BYTE PTR [rax]
   1400195ef:	add    BYTE PTR [rax],bh
   1400195f1:	xor    eax,0x8a300001
   1400195f6:	add    BYTE PTR [rax],al
   1400195f8:	cmp    cl,BYTE PTR [rbx+0x37640000]
   1400195fe:	add    DWORD PTR [rax],eax
   140019600:	rex mov eax,DWORD PTR [rax]
   140019603:	add    BYTE PTR [rdi-0x75],dl
   140019606:	add    BYTE PTR [rax],al
   140019608:	in     al,0x3a
   14001960a:	add    DWORD PTR [rax],eax
   14001960c:	(bad)  
   14001960d:	mov    eax,DWORD PTR [rax]
   14001960f:	add    BYTE PTR [rsi-0x7ffff75],dl
   140019615:	cmp    eax,DWORD PTR [rcx]
   140019617:	add    BYTE PTR [rax],dh
   140019619:	mov    WORD PTR [rax],es
   14001961b:	add    BYTE PTR [rcx-0x74],dh
   14001961e:	add    BYTE PTR [rax],al
   140019620:	xchg   esp,eax
   140019621:	(bad)  
   140019622:	add    DWORD PTR [rax],eax
   140019624:	js     0x1400195b2
   140019626:	add    BYTE PTR [rax],al
   140019628:	fisttp DWORD PTR [rax+rax*1+0x1353800]
   14001962f:	add    ah,ah
   140019631:	mov    WORD PTR [rax],es
   140019633:	add    BYTE PTR [rcx],al
   140019635:	lea    eax,[rax]
   140019637:	add    ah,ah
   140019639:	cmp    al,BYTE PTR [rcx]
   14001963b:	add    BYTE PTR [rax],ah
   14001963d:	lea    eax,[rax]
   14001963f:	add    al,cl
   140019641:	lea    eax,[rax]
   140019643:	add    BYTE PTR [rax-0x2ffffec9],bh
   140019649:	lea    eax,[rax]
   14001964b:	add    al,bl
   14001964d:	pop    QWORD PTR [rax]
   14001964f:	add    BYTE PTR [rdi+rsi*1-0x701fffff],bh
   140019656:	add    BYTE PTR [rax],al
   140019658:	gs nop
   14001965a:	add    BYTE PTR [rax],al
   14001965c:	cmp    BYTE PTR [rip+0xffffffff906c0001],dh        # 0xd06d9663
   140019662:	add    BYTE PTR [rax],al
   140019664:	cmp    edx,DWORD PTR [rcx+0x35380000]
   14001966a:	add    DWORD PTR [rax],eax
   14001966c:	fs xchg ecx,eax
   14001966e:	add    BYTE PTR [rax],al
   140019670:	iret   
   140019671:	xchg   ecx,eax
   140019672:	add    BYTE PTR [rax],al
   140019674:	cmp    BYTE PTR [rip+0xffffffff91d80001],dh        # 0xd1d9967b
   14001967a:	add    BYTE PTR [rax],al
   14001967c:	sbb    BYTE PTR [rdx+0x3ae40000],dl
   140019682:	add    DWORD PTR [rax],eax
   140019684:	xor    BYTE PTR [rdx-0x6dac0000],dl
   14001968a:	add    BYTE PTR [rax],al
   14001968c:	fdiv   DWORD PTR [rdi]
   14001968e:	add    DWORD PTR [rax],eax
   140019690:	(bad)  
   140019691:	xchg   edx,eax
   140019692:	add    BYTE PTR [rax],al
   140019694:	js     0x140019628
   140019696:	add    BYTE PTR [rax],al
   140019698:	loopne 0x1400196d1
   14001969a:	add    DWORD PTR [rax],eax
   14001969c:	adc    BYTE PTR [rdx-0x6d7f0000],0x0
   1400196a3:	add    ah,ah
   1400196a5:	(bad)  
   1400196a6:	add    DWORD PTR [rax],eax
   1400196a8:	nop
   1400196a9:	xchg   edx,eax
   1400196aa:	add    BYTE PTR [rax],al
   1400196ac:	xchg   ecx,eax
   1400196ad:	xchg   edx,eax
   1400196ae:	add    BYTE PTR [rax],al
   1400196b0:	call   0xd80197ec
   1400196b5:	xchg   edx,eax
   1400196b6:	add    BYTE PTR [rax],al
   1400196b8:	(bad)  
   1400196b9:	xchg   ebx,eax
   1400196ba:	add    BYTE PTR [rax],al
   1400196bc:	in     al,dx
   1400196bd:	(bad)  
   1400196be:	add    DWORD PTR [rax],eax
   1400196c0:	sbb    al,0x93
   1400196c2:	add    BYTE PTR [rax],al
   1400196c4:	lahf   
   1400196c5:	xchg   ebx,eax
   1400196c6:	add    BYTE PTR [rax],al
   1400196c8:	in     al,dx
   1400196c9:	(bad)  
   1400196ca:	add    DWORD PTR [rax],eax
   1400196cc:	test   al,0x93
   1400196ce:	add    BYTE PTR [rax],al
   1400196d0:	sub    eax,0xec000094
   1400196d5:	(bad)  
   1400196d6:	add    DWORD PTR [rax],eax
   1400196d8:	rex.R xchg esp,eax
   1400196da:	add    BYTE PTR [rax],al
   1400196dc:	fst    DWORD PTR [rax+rax*1+0x13bf800]
   1400196e3:	add    al,ah
   1400196e5:	xchg   esp,eax
   1400196e6:	add    BYTE PTR [rax],al
   1400196e8:	ret    
   1400196e9:	xchg   ebp,eax
   1400196ea:	add    BYTE PTR [rax],al
   1400196ec:	add    al,0x38
   1400196ee:	add    DWORD PTR [rax],eax
   1400196f0:	int3   
   1400196f1:	xchg   ebp,eax
   1400196f2:	add    BYTE PTR [rax],al
   1400196f4:	sub    al,0x9d
   1400196f6:	add    BYTE PTR [rax],al
   1400196f8:	xor    BYTE PTR [rax],bh
   1400196fa:	add    DWORD PTR [rax],eax
   1400196fc:	xor    al,0x9d
   1400196fe:	add    BYTE PTR [rax],al
   140019700:	adc    ebx,DWORD PTR [rsi+0x38540000]
   140019706:	add    DWORD PTR [rax],eax
   140019708:	sbb    al,0x9e
   14001970a:	add    BYTE PTR [rax],al
   14001970c:	outs   dx,DWORD PTR ds:[rsi]
   14001970d:	sahf   
   14001970e:	add    BYTE PTR [rax],al
   140019710:	cmp    BYTE PTR [rip+0xffffffff9e780001],dh        # 0xde799717
   140019716:	add    BYTE PTR [rax],al
   140019718:	xlat   BYTE PTR ds:[rbx]
   140019719:	sahf   
   14001971a:	add    BYTE PTR [rax],al
   14001971c:	in     al,0x3a
   14001971e:	add    DWORD PTR [rax],eax
   140019720:	lock sahf 
   140019722:	add    BYTE PTR [rax],al
   140019724:	rcr    BYTE PTR [rdi+0x35380000],1
   14001972a:	add    DWORD PTR [rax],eax
   14001972c:	fcomp  DWORD PTR [rdi-0x60010000]
   140019732:	add    BYTE PTR [rax],al
   140019734:	in     al,0x3a
   140019736:	add    DWORD PTR [rax],eax
   140019738:	or     BYTE PTR [rax-0x5f950000],ah
   14001973e:	add    BYTE PTR [rax],al
   140019740:	cmp    BYTE PTR [rip+0xffffffffa0740001],dh        # 0xe0759747
   140019746:	add    BYTE PTR [rax],al
   140019748:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019749:	movabs al,ds:0xa124000135380000
   140019752:	add    BYTE PTR [rax],al
   140019754:	rex.WX movabs rax,ds:0xa15000013ae40000
   14001975e:	add    BYTE PTR [rax],al
   140019760:	rex.WRXB movabs ds:0xa378000138800000,rax
   14001976a:	add    BYTE PTR [rax],al
   14001976c:	in     eax,dx
   14001976d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001976e:	add    BYTE PTR [rax],al
   140019770:	mov    ah,0x32
   140019772:	add    DWORD PTR [rax],eax
   140019774:	add    al,0xa5
   140019776:	add    BYTE PTR [rax],al
   140019778:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001977a:	add    BYTE PTR [rax],al
   14001977c:	lock xor eax,0xa5500001
   140019782:	add    BYTE PTR [rax],al
   140019784:	xchg   edi,eax
   140019785:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019786:	add    BYTE PTR [rax],al
   140019788:	lock xor eax,0xa5a00001
   14001978e:	add    BYTE PTR [rax],al
   140019790:	sub    ah,BYTE PTR [rsi+0x3d900000]
   140019796:	add    DWORD PTR [rax],eax
   140019798:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001979a:	add    BYTE PTR [rax],al
   14001979c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14001979e:	add    BYTE PTR [rax],al
   1400197a0:	in     al,0x3a
   1400197a2:	add    DWORD PTR [rax],eax
   1400197a4:	test   BYTE PTR [rsi-0x59410000],ah
   1400197aa:	add    BYTE PTR [rax],al
   1400197ac:	clc    
   1400197ad:	cmp    eax,DWORD PTR [rcx]
   1400197af:	add    al,cl
   1400197b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400197b2:	add    BYTE PTR [rax],al
   1400197b4:	icebp  
   1400197b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400197b6:	add    BYTE PTR [rax],al
   1400197b8:	cmp    BYTE PTR [rip+0xffffffffa7100001],dh        # 0xe71197bf
   1400197be:	add    BYTE PTR [rax],al
   1400197c0:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400197c2:	add    BYTE PTR [rax],al
   1400197c4:	clc    
   1400197c5:	cmp    eax,DWORD PTR [rcx]
   1400197c7:	add    BYTE PTR [rax-0x59],dl
   1400197ca:	add    BYTE PTR [rax],al
   1400197cc:	jae    0x140019776
   1400197ce:	add    BYTE PTR [rax],al
   1400197d0:	in     al,dx
   1400197d1:	(bad)  
   1400197d2:	add    DWORD PTR [rax],eax
   1400197d4:	jl     0x14001977e
   1400197d6:	add    BYTE PTR [rax],al
   1400197d8:	int    0xa8
   1400197da:	add    BYTE PTR [rax],al
   1400197dc:	in     al,0x3a
   1400197de:	add    DWORD PTR [rax],eax
   1400197e0:	(bad)  
   1400197e1:	test   al,0x0
   1400197e3:	add    BYTE PTR [rbp-0x56],bl
   1400197e6:	add    BYTE PTR [rax],al
   1400197e8:	pushf  
   1400197e9:	cmp    BYTE PTR [rcx],al
   1400197eb:	add    BYTE PTR [rdx+rbp*4+0x0],ah
   1400197ef:	add    BYTE PTR [rsi-0x27ffff56],ah
   1400197f5:	cmp    BYTE PTR [rcx],al
   1400197f7:	add    al,bl
   1400197f9:	stos   BYTE PTR es:[rdi],al
   1400197fa:	add    BYTE PTR [rax],al
   1400197fc:	stos   DWORD PTR es:[rdi],eax
   1400197fd:	stos   DWORD PTR es:[rdi],eax
   1400197fe:	add    BYTE PTR [rax],al
   140019800:	clc    
   140019801:	cmp    BYTE PTR [rcx],al
   140019803:	add    BYTE PTR [rbx+rbp*4-0x523a0000],dh
   14001980a:	add    BYTE PTR [rax],al
   14001980c:	and    BYTE PTR [rcx],bh
   14001980e:	add    DWORD PTR [rax],eax
   140019810:	int3   
   140019811:	lods   eax,DWORD PTR ds:[rsi]
   140019812:	add    BYTE PTR [rax],al
   140019814:	(bad)  
   140019815:	scas   eax,DWORD PTR es:[rdi]
   140019816:	add    BYTE PTR [rax],al
   140019818:	pop    rsp
   140019819:	cmp    DWORD PTR [rcx],eax
   14001981b:	add    ah,dl
   14001981d:	scas   eax,DWORD PTR es:[rdi]
   14001981e:	add    BYTE PTR [rax],al
   140019820:	test   BYTE PTR [rax+0x398c0000],dh
   140019826:	add    DWORD PTR [rax],eax
   140019828:	mov    WORD PTR [rax-0x4eb30000],?
   14001982e:	add    BYTE PTR [rax],al
   140019830:	mov    ah,0x39
   140019832:	add    DWORD PTR [rax],eax
   140019834:	push   rsp
   140019835:	mov    cl,0x0
   140019837:	add    BYTE PTR [rbx+rsi*4+0x39cc0000],cl
   14001983e:	add    DWORD PTR [rax],eax
   140019840:	xchg   esp,eax
   140019841:	mov    bl,0x0
   140019843:	add    BYTE PTR [rcx-0x48],ah
   140019846:	add    BYTE PTR [rax],al
   140019848:	in     al,0x39
   14001984a:	add    DWORD PTR [rax],eax
   14001984c:	push   0xffffffff890000b8
   140019851:	mov    eax,0x35380000
   140019856:	add    DWORD PTR [rax],eax
   140019858:	nop
   140019859:	mov    eax,0xbab50000
   14001985e:	add    BYTE PTR [rax],al
   140019860:	add    BYTE PTR [rdx],bh
   140019862:	add    DWORD PTR [rax],eax
   140019864:	hlt    
   140019865:	mov    edx,0xbb4e0000
   14001986a:	add    BYTE PTR [rax],al
   14001986c:	sbb    BYTE PTR [rdx],bh
   14001986e:	add    DWORD PTR [rax],eax
   140019870:	push   rsp
   140019871:	mov    ebx,0xbb7b0000
   140019876:	add    BYTE PTR [rax],al
   140019878:	cmp    BYTE PTR [rip+0xffffffffbb840001],dh        # 0xfb85987f
   14001987e:	add    BYTE PTR [rax],al
   140019880:	mov    cl,0xbb
   140019882:	add    BYTE PTR [rax],al
   140019884:	cmp    BYTE PTR [rip+0xffffffffbbb80001],dh        # 0xfbb9988b
   14001988a:	add    BYTE PTR [rax],al
   14001988c:	cld    
   14001988d:	mov    ebx,0x3bf80000
   140019892:	add    DWORD PTR [rax],eax
   140019894:	sbb    al,0xbc
   140019896:	add    BYTE PTR [rax],al
   140019898:	push   rbp
   140019899:	mov    esp,0x3bf80000
   14001989e:	add    DWORD PTR [rax],eax
   1400198a0:	pop    rsp
   1400198a1:	mov    esp,0xbc860000
   1400198a6:	add    BYTE PTR [rax],al
   1400198a8:	cmp    BYTE PTR [rip+0xffffffffbc8c0001],dh        # 0xfc8d98af
   1400198ae:	add    BYTE PTR [rax],al
   1400198b0:	(bad)
   1400198b3:	add    al,bh
   1400198b5:	cmp    eax,DWORD PTR [rcx]
   1400198b7:	add    ah,cl
   1400198b9:	mov    esp,0xbcea0000
   1400198be:	add    BYTE PTR [rax],al
   1400198c0:	in     al,0x3a
   1400198c2:	add    DWORD PTR [rax],eax
   1400198c4:	lock mov esp,0xbda60000
   1400198ca:	add    BYTE PTR [rax],al
   1400198cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400198cd:	cmp    eax,0xbdac0001
   1400198d2:	add    BYTE PTR [rax],al
   1400198d4:	(bad)  
   1400198d5:	mov    esi,0x3a280000
   1400198da:	add    DWORD PTR [rax],eax
   1400198dc:	movabs rsi,0x3a380000c1120000
   1400198e6:	add    DWORD PTR [rax],eax
   1400198e8:	sbb    cl,al
   1400198ea:	add    BYTE PTR [rax],al
   1400198ec:	scas   al,BYTE PTR es:[rdi]
   1400198ed:	rol    DWORD PTR [rax],0x0
   1400198f0:	(bad)  
   1400198f1:	cmp    al,BYTE PTR [rcx]
   1400198f3:	add    BYTE PTR [rcx+rax*8-0x3cee0000],dh
   1400198fa:	add    BYTE PTR [rax],al
   1400198fc:	jo     0x140019938
   1400198fe:	add    DWORD PTR [rax],eax
   140019900:	sbb    bl,al
   140019902:	add    BYTE PTR [rax],al
   140019904:	xchg   esi,eax
   140019905:	ret    
   140019906:	add    BYTE PTR [rax],al
   140019908:	cwde   
   140019909:	cmp    al,BYTE PTR [rcx]
   14001990b:	add    BYTE PTR [rbx+rax*8-0x38760000],bl
   140019912:	add    BYTE PTR [rax],al
   140019914:	test   al,0x3a
   140019916:	add    DWORD PTR [rax],eax
   140019918:	nop
   140019919:	mov    DWORD PTR [rax],0xc7fc00
   14001991f:	add    BYTE PTR [rsp+rsi*1-0x37fbffff],dh
   140019926:	add    BYTE PTR [rax],al
   140019928:	(bad)  
   140019929:	leave  
   14001992a:	add    BYTE PTR [rax],al
   14001992c:	test   al,0x3a
   14001992e:	add    DWORD PTR [rax],eax
   140019930:	adc    al,0xc9
   140019932:	add    BYTE PTR [rax],al
   140019934:	jno    0x1400198ff
   140019936:	add    BYTE PTR [rax],al
   140019938:	mov    al,0x3a
   14001993a:	add    DWORD PTR [rax],eax
   14001993c:	js     0x140019907
   14001993e:	add    BYTE PTR [rax],al
   140019940:	fmulp  st(1),st
   140019942:	add    BYTE PTR [rax],al
   140019944:	mov    ah,0x34
   140019946:	add    DWORD PTR [rax],eax
   140019948:	in     al,0xc9
   14001994a:	add    BYTE PTR [rax],al
   14001994c:	rex.RB retf 0x0
   140019950:	cmp    BYTE PTR [rip+0xffffffffca600001],dh        # 0x10a619957
   140019956:	add    BYTE PTR [rax],al
   140019958:	adc    bl,cl
   14001995a:	add    BYTE PTR [rax],al
   14001995c:	sar    BYTE PTR [rdx],0x1
   14001995f:	add    BYTE PTR [rax],ah
   140019961:	retf   
   140019962:	add    BYTE PTR [rax],al
   140019964:	out    0xcb,eax
   140019966:	add    BYTE PTR [rax],al
   140019968:	enter  0x13a,0x0
   14001996c:	add    ah,cl
   14001996e:	add    BYTE PTR [rax],al
   140019970:	mov    ch,0xcc
   140019972:	add    BYTE PTR [rax],al
   140019974:	sar    BYTE PTR [rdx],1
   140019976:	add    DWORD PTR [rax],eax
   140019978:	mov    esp,0xfc0000cc
   14001997d:	int3   
   14001997e:	add    BYTE PTR [rax],al
   140019980:	in     al,0x3a
   140019982:	add    DWORD PTR [rax],eax
   140019984:	add    al,0xcd
   140019986:	add    BYTE PTR [rax],al
   140019988:	cmp    eax,0xe40000cd
   14001998d:	cmp    al,BYTE PTR [rcx]
   14001998f:	add    BYTE PTR [rbp+rcx*8+0x0],dl
   140019993:	add    dh,ch
   140019995:	int    0x0
   140019997:	add    al,bh
   140019999:	cmp    eax,DWORD PTR [rcx]
   14001999b:	add    ah,dh
   14001999d:	int    0x0
   14001999f:	add    bh,al
   1400199a1:	(bad)  
   1400199a2:	add    BYTE PTR [rax],al
   1400199a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400199a5:	cmp    eax,0xced00001
   1400199aa:	add    BYTE PTR [rax],al
   1400199ac:	jp     0x14001997d
   1400199ae:	add    BYTE PTR [rax],al
   1400199b0:	(bad)  
   1400199b1:	cmp    al,BYTE PTR [rcx]
   1400199b3:	add    BYTE PTR [rax-0xbffff31],al
   1400199b9:	iret   
   1400199ba:	add    BYTE PTR [rax],al
   1400199bc:	in     al,0x3a
   1400199be:	add    DWORD PTR [rax],eax
   1400199c0:	cld    
   1400199c1:	iret   
   1400199c2:	add    BYTE PTR [rax],al
   1400199c4:	movabs eax,ds:0xd800013aec0000d0
   1400199cd:	rol    BYTE PTR [rax],1
   1400199cf:	add    BYTE PTR [rcx],dh
   1400199d1:	rol    DWORD PTR [rax],1
   1400199d3:	add    BYTE PTR [rbx+rdi*1],bl
   1400199d6:	add    DWORD PTR [rax],eax
   1400199d8:	push   rax
   1400199d9:	rol    DWORD PTR [rax],1
   1400199db:	add    BYTE PTR [rsi+0x280000d1],bl
   1400199e1:	cmp    eax,DWORD PTR [rcx]
   1400199e3:	add    BYTE PTR [rcx+rdx*8-0x2db20000],ah
   1400199ea:	add    BYTE PTR [rax],al
   1400199ec:	cmp    BYTE PTR [rbx],bh
   1400199ee:	add    DWORD PTR [rax],eax
   1400199f0:	push   rsp
   1400199f1:	rol    BYTE PTR [rax],cl
   1400199f3:	add    ch,cl
   1400199f5:	rol    BYTE PTR [rax],cl
   1400199f7:	add    BYTE PTR [rbp+rdi*1-0x2d2bffff],ah
   1400199fe:	add    BYTE PTR [rax],al
   140019a00:	and    bl,dl
   140019a02:	add    BYTE PTR [rax],al
   140019a04:	cmp    BYTE PTR [rip+0xffffffffd3280001],dh        # 0x113299a0b
   140019a0a:	add    BYTE PTR [rax],al
   140019a0c:	adc    al,0xd4
   140019a0e:	add    BYTE PTR [rax],al
   140019a10:	(bad)  
   140019a11:	cmp    eax,DWORD PTR [rcx]
   140019a13:	add    BYTE PTR [rsp+rdx*8],ch
   140019a16:	add    BYTE PTR [rax],al
   140019a18:	mov    ebx,0xa00000d5
   140019a1d:	cmp    eax,DWORD PTR [rcx]
   140019a1f:	add    ah,al
   140019a21:	(bad)  
   140019a22:	add    BYTE PTR [rax],al
   140019a24:	mov    bh,dl
   140019a26:	add    BYTE PTR [rax],al
   140019a28:	mov    ah,0x3b
   140019a2a:	add    DWORD PTR [rax],eax
   140019a2c:	nop
   140019a2d:	xlat   BYTE PTR ds:[rbx]
   140019a2e:	add    BYTE PTR [rax],al
   140019a30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019a31:	xlat   BYTE PTR ds:[rbx]
   140019a32:	add    BYTE PTR [rax],al
   140019a34:	xor    BYTE PTR [rip+0xffffffffd7c00001],dh        # 0x117c19a3b
   140019a3a:	add    BYTE PTR [rax],al
   140019a3c:	add    al,bl
   140019a3e:	add    BYTE PTR [rax],al
   140019a40:	enter  0x13b,0x0
   140019a44:	and    al,bl
   140019a46:	add    BYTE PTR [rax],al
   140019a48:	mov    eax,ds
   140019a4a:	add    BYTE PTR [rax],al
   140019a4c:	sar    BYTE PTR [rbx],1
   140019a4e:	add    DWORD PTR [rax],eax
   140019a50:	mov    esp,0xf70000d8
   140019a55:	fadd   DWORD PTR [rax]
   140019a57:	add    al,dh
   140019a59:	cmp    eax,DWORD PTR [rcx]
   140019a5b:	add    BYTE PTR [rax],al
   140019a5d:	fld    DWORD PTR [rax]
   140019a5f:	add    BYTE PTR [rdx],ah
   140019a61:	fld    DWORD PTR [rax]
   140019a63:	add    ah,ah
   140019a65:	cmp    al,BYTE PTR [rcx]
   140019a67:	add    BYTE PTR [rax],ch
   140019a69:	fld    DWORD PTR [rax]
   140019a6b:	add    BYTE PTR [rdx-0x7ffff27],ah
   140019a71:	cmp    eax,DWORD PTR [rcx]
   140019a73:	add    BYTE PTR [rax+0xe0000d9],ch
   140019a79:	fiadd  DWORD PTR [rax]
   140019a7b:	add    BYTE PTR [rsp+rdi*1],al
   140019a7e:	add    DWORD PTR [rax],eax
   140019a80:	adc    al,0xda
   140019a82:	add    BYTE PTR [rax],al
   140019a84:	jmp    0x140019a60
   140019a86:	add    BYTE PTR [rax],al
   140019a88:	sub    BYTE PTR [rcx+rax*1],bh
   140019a8b:	add    ah,dh
   140019a8d:	fiadd  DWORD PTR [rax]
   140019a8f:	add    BYTE PTR [rax-0x7ffff25],dh
   140019a95:	cmp    eax,DWORD PTR [rcx]
   140019a97:	add    BYTE PTR [rax+0x7b0000db],bh
   140019a9d:	fadd   QWORD PTR [rax]
   140019a9f:	add    BYTE PTR [rax+0x3c],dl
   140019aa2:	add    DWORD PTR [rax],eax
   140019aa4:	test   ah,bl
   140019aa6:	add    BYTE PTR [rax],al
   140019aa8:	mov    ebx,0x380000dc
   140019aad:	xor    eax,0xdd280001
   140019ab2:	add    BYTE PTR [rax],al
   140019ab4:	rex.WX fld QWORD PTR [rax]
   140019ab7:	add    BYTE PTR [rax+0x3c],bh
   140019aba:	add    DWORD PTR [rax],eax
   140019abc:	fld    QWORD PTR fs:[rax]
   140019abf:	add    BYTE PTR [rsi-0x22],bh
   140019ac2:	add    BYTE PTR [rax],al
   140019ac4:	cmp    BYTE PTR [rcx+rax*1],0x0
   140019ac8:	test   dh,bl
   140019aca:	add    BYTE PTR [rax],al
   140019acc:	rcr    edi,1
   140019ace:	add    BYTE PTR [rax],al
   140019ad0:	cwde   
   140019ad1:	cmp    al,0x1
   140019ad3:	add    al,bl
   140019ad5:	fild   WORD PTR [rax]
   140019ad7:	add    al,al
   140019ad9:	loope  0x140019adb
   140019adb:	add    BYTE PTR [rax-0x27fffec4],dh
   140019ae1:	loope  0x140019ae3
   140019ae3:	add    BYTE PTR [rcx],ch
   140019ae5:	loop   0x140019ae7
   140019ae7:	add    al,cl
   140019ae9:	cmp    al,0x1
   140019aeb:	add    BYTE PTR [rax],dh
   140019aed:	loop   0x140019aef
   140019aef:	add    BYTE PTR [rdi-0x13],ch
   140019af2:	add    BYTE PTR [rax],al
   140019af4:	fdiv   DWORD PTR [rcx+rax*1]
   140019af7:	add    BYTE PTR [rsi],dl
   140019af9:	out    dx,eax
   140019afa:	add    BYTE PTR [rax],al
   140019afc:	xor    al,0xef
   140019afe:	add    BYTE PTR [rax],al
   140019b00:	xor    BYTE PTR [rbx],bh
   140019b02:	add    DWORD PTR [rax],eax
   140019b04:	cmp    ch,bh
   140019b06:	add    BYTE PTR [rax],al
   140019b08:	pop    rdx
   140019b09:	out    dx,eax
   140019b0a:	add    BYTE PTR [rax],al
   140019b0c:	int3   
   140019b0d:	xor    al,BYTE PTR [rcx]
   140019b0f:	add    BYTE PTR [rax-0x11],ah
   140019b12:	add    BYTE PTR [rax],al
   140019b14:	test   bh,ch
   140019b16:	add    BYTE PTR [rax],al
   140019b18:	xor    BYTE PTR [rbx],bh
   140019b1a:	add    DWORD PTR [rax],eax
   140019b1c:	mov    ch,bh
   140019b1e:	add    BYTE PTR [rax],al
   140019b20:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019b21:	out    dx,eax
   140019b22:	add    BYTE PTR [rax],al
   140019b24:	xor    BYTE PTR [rbx],bh
   140019b26:	add    DWORD PTR [rax],eax
   140019b28:	stos   BYTE PTR es:[rdi],al
   140019b29:	out    dx,eax
   140019b2a:	add    BYTE PTR [rax],al
   140019b2c:	(bad)
   140019b2f:	add    BYTE PTR [rax],dh
   140019b31:	cmp    eax,DWORD PTR [rcx]
   140019b33:	add    bl,cl
   140019b35:	out    dx,eax
   140019b36:	add    BYTE PTR [rax],al
   140019b38:	adc    eax,esi
   140019b3a:	add    BYTE PTR [rax],al
   140019b3c:	nop
   140019b3d:	xor    eax,0xf0170001
   140019b42:	add    BYTE PTR [rax],al
   140019b44:	xor    dh,al
   140019b46:	add    BYTE PTR [rax],al
   140019b48:	xor    BYTE PTR [rbx],bh
   140019b4a:	add    DWORD PTR [rax],eax
   140019b4c:	cmp    al,dh
   140019b4e:	add    BYTE PTR [rax],al
   140019b50:	push   rbx
   140019b51:	lock add BYTE PTR [rax],al
   140019b54:	xor    BYTE PTR [rbx],bh
   140019b56:	add    DWORD PTR [rax],eax
   140019b58:	pop    rcx
   140019b59:	lock add BYTE PTR [rax],al
   140019b5c:	ja     0x140019b4e
   140019b5e:	add    BYTE PTR [rax],al
   140019b60:	xor    BYTE PTR [rbx],bh
   140019b62:	add    DWORD PTR [rax],eax
   140019b64:	jge    0x140019b56
   140019b66:	add    BYTE PTR [rax],al
   140019b68:	fwait
   140019b69:	lock add BYTE PTR [rax],al
   140019b6c:	xor    BYTE PTR [rbx],bh
   140019b6e:	add    DWORD PTR [rax],eax
   140019b70:	movabs eax,ds:0x300000f0b70000f0
   140019b79:	cmp    eax,DWORD PTR [rcx]
   140019b7b:	add    al,al
   140019b7d:	lock add BYTE PTR [rax],al
   140019b80:	loop   0x140019b72
   140019b82:	add    BYTE PTR [rax],al
   140019b84:	xor    BYTE PTR [rbx],bh
   140019b86:	add    DWORD PTR [rax],eax
   140019b88:	call   0x141019c7d
   140019b8d:	icebp  
   140019b8e:	add    BYTE PTR [rax],al
   140019b90:	xor    BYTE PTR [rbx],bh
   140019b92:	add    DWORD PTR [rax],eax
   140019b94:	(bad)  
   140019b95:	icebp  
   140019b96:	add    BYTE PTR [rax],al
   140019b98:	sbb    eax,0x300000f1
   140019b9d:	cmp    eax,DWORD PTR [rcx]
   140019b9f:	add    BYTE PTR [rdi],ah
   140019ba1:	icebp  
   140019ba2:	add    BYTE PTR [rax],al
   140019ba4:	push   rax
   140019ba5:	icebp  
   140019ba6:	add    BYTE PTR [rax],al
   140019ba8:	xor    BYTE PTR [rbx],bh
   140019baa:	add    DWORD PTR [rax],eax
   140019bac:	push   rsi
   140019bad:	icebp  
   140019bae:	add    BYTE PTR [rax],al
   140019bb0:	outs   dx,BYTE PTR ds:[rsi]
   140019bb1:	icebp  
   140019bb2:	add    BYTE PTR [rax],al
   140019bb4:	xor    BYTE PTR [rbx],bh
   140019bb6:	add    DWORD PTR [rax],eax
   140019bb8:	je     0x140019bab
   140019bba:	add    BYTE PTR [rax],al
   140019bbc:	push   0x300000f2
   140019bc1:	cmp    eax,DWORD PTR [rcx]
   140019bc3:	add    BYTE PTR [rdx+rsi*8+0x0],dh
   140019bc7:	add    BYTE PTR [rbx],al
   140019bc9:	repz add BYTE PTR [rax],al
   140019bcc:	adc    al,0x39
   140019bce:	add    DWORD PTR [rax],eax
   140019bd0:	or     ebx,esi
   140019bd2:	add    BYTE PTR [rax],al
   140019bd4:	and    al,0xf3
   140019bd6:	add    BYTE PTR [rax],al
   140019bd8:	xor    BYTE PTR [rbx],bh
   140019bda:	add    DWORD PTR [rax],eax
   140019bdc:	sub    dh,bl
   140019bde:	add    BYTE PTR [rax],al
   140019be0:	rex.RB
   140019be1:	repz add BYTE PTR [rax],al
   140019be4:	xor    BYTE PTR [rbx],bh
   140019be6:	add    DWORD PTR [rax],eax
   140019be8:	rex.WXB
   140019be9:	repz add BYTE PTR [rax],al
   140019bec:	jae    0x140019be1
   140019bee:	add    BYTE PTR [rax],al
   140019bf0:	xor    BYTE PTR [rbx],bh
   140019bf2:	add    DWORD PTR [rax],eax
   140019bf4:	jnp    0x140019be9
   140019bf6:	add    BYTE PTR [rax],al
   140019bf8:	xchg   esi,eax
   140019bf9:	repz add BYTE PTR [rax],al
   140019bfc:	xor    BYTE PTR [rbx],bh
   140019bfe:	add    DWORD PTR [rax],eax
   140019c00:	pushf  
   140019c01:	repz add BYTE PTR [rax],al
   140019c04:	mov    bh,0xf3
   140019c06:	add    BYTE PTR [rax],al
   140019c08:	xor    BYTE PTR [rbx],bh
   140019c0a:	add    DWORD PTR [rax],eax
   140019c0c:	mov    ebp,0xd70000f3
   140019c11:	repz add BYTE PTR [rax],al
   140019c14:	xor    BYTE PTR [rbx],bh
   140019c16:	add    DWORD PTR [rax],eax
   140019c18:	(bad)  
   140019c1a:	add    BYTE PTR [rax],al
   140019c1c:	div    bl
   140019c1e:	add    BYTE PTR [rax],al
   140019c20:	xor    BYTE PTR [rbx],bh
   140019c22:	add    DWORD PTR [rax],eax

Disassembly of section .rsrc:

000000014001a000 <.rsrc>:
	...
   14001a008:	add    al,0x0
   14001a00a:	add    BYTE PTR [rax],al
   14001a00c:	add    BYTE PTR [rax],al
   14001a00e:	add    al,BYTE PTR [rax]
   14001a010:	adc    BYTE PTR [rax],al
   14001a012:	add    BYTE PTR [rax],al
   14001a014:	and    BYTE PTR [rax],al
   14001a016:	add    BYTE PTR [rax+0x18],al
   14001a01c:	cmp    BYTE PTR [rax],al
   14001a01e:	add    BYTE PTR [rax+0x0],al
   14001a024:	add    BYTE PTR [rax],al
   14001a026:	add    BYTE PTR [rax],al
   14001a028:	add    al,0x0
   14001a02a:	add    BYTE PTR [rax],al
   14001a02c:	add    BYTE PTR [rax],al
   14001a02e:	add    DWORD PTR [rax],eax
   14001a030:	add    DWORD PTR [rax],eax
   14001a032:	add    BYTE PTR [rax],al
   14001a034:	push   rax
   14001a035:	add    BYTE PTR [rax],al
   14001a037:	add    BYTE PTR [rax],0x0
   14001a03a:	add    BYTE PTR [rax],al
   14001a03c:	add    BYTE PTR [rax],al
   14001a03e:	add    BYTE PTR [rax],al
   14001a040:	add    al,0x0
   14001a042:	add    BYTE PTR [rax],al
   14001a044:	add    BYTE PTR [rax],al
   14001a046:	add    DWORD PTR [rax],eax
   14001a048:	add    DWORD PTR [rax],eax
   14001a04a:	add    BYTE PTR [rax],al
   14001a04c:	push   0x800000
   14001a051:	add    BYTE PTR [rax],al
   14001a053:	add    BYTE PTR [rax],al
   14001a055:	add    BYTE PTR [rax],al
   14001a057:	add    BYTE PTR [rax+rax*1],al
   14001a05a:	add    BYTE PTR [rax],al
   14001a05c:	add    BYTE PTR [rax],al
   14001a05e:	add    DWORD PTR [rax],eax
   14001a060:	or     DWORD PTR [rax+rax*1],eax
   14001a063:	add    BYTE PTR [rax+0x0],al
   14001a069:	add    BYTE PTR [rax],al
   14001a06b:	add    BYTE PTR [rax],al
   14001a06d:	add    BYTE PTR [rax],al
   14001a06f:	add    BYTE PTR [rax+rax*1],al
   14001a072:	add    BYTE PTR [rax],al
   14001a074:	add    BYTE PTR [rax],al
   14001a076:	add    DWORD PTR [rax],eax
   14001a078:	or     DWORD PTR [rax+rax*1],eax
   14001a07b:	add    BYTE PTR [rax-0x60000000],dl
   14001a081:	movabs al,ds:0x4e4000003c40001
   14001a08a:	add    BYTE PTR [rax],al
   14001a08c:	add    BYTE PTR [rax],al
   14001a08e:	add    BYTE PTR [rax],al
   14001a090:	movs   BYTE PTR es:[rdi],BYTE PTR fs:[rsi]
   14001a092:	add    DWORD PTR [rax],eax
   14001a094:	(bad)  
   14001a095:	add    DWORD PTR [rax],eax
   14001a097:	add    ah,ah
   14001a099:	add    al,0x0
   14001a09b:	add    BYTE PTR [rax],al
   14001a09d:	add    BYTE PTR [rax],al
   14001a09f:	add    ah,al
   14001a0a1:	add    esi,DWORD PTR [rax+rax*1]
   14001a0a4:	add    BYTE PTR [rax],al
   14001a0a6:	push   rsi
   14001a0a7:	add    BYTE PTR [rbx+0x0],dl
   14001a0aa:	pop    rdi
   14001a0ab:	add    BYTE PTR [rsi+0x0],dl
   14001a0ae:	add    BYTE PTR [r10+0x0],r10b
   14001a0b2:	push   rbx
   14001a0b3:	add    BYTE PTR [rcx+0x0],cl
   14001a0b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001a0ba:	pop    rdi
   14001a0bb:	add    BYTE PTR [rcx+0x0],cl
   14001a0be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001a0c2:	rex.WRXB add BYTE PTR [r8],r8b
   14001a0c5:	add    BYTE PTR [rax],al
   14001a0c7:	add    BYTE PTR [rbp+0xfeef04],bh
   14001a0cd:	add    BYTE PTR [rcx],al
   14001a0cf:	add    BYTE PTR [rax],al
   14001a0d1:	add    BYTE PTR [rdx],cl
   14001a0d3:	add    BYTE PTR [rax],al
   14001a0d5:	add    BYTE PTR [rbp+0xa000079],dl
   14001a0db:	add    BYTE PTR [rax],al
   14001a0dd:	add    BYTE PTR [rbp+0x3f79],dl
   14001a0e3:	add    BYTE PTR [rax],al
   14001a0e5:	add    BYTE PTR [rax],al
   14001a0e7:	add    BYTE PTR [rax+rax*1],al
   14001a0ea:	add    BYTE PTR [rax],al
   14001a0ec:	add    al,BYTE PTR [rax]
	...
   14001a0fa:	add    BYTE PTR [rax],al
   14001a0fc:	and    al,BYTE PTR [rbx]
   14001a0fe:	add    BYTE PTR [rax],al
   14001a100:	add    DWORD PTR [rax],eax
   14001a102:	push   rbx
   14001a103:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001a107:	add    BYTE PTR [rcx+0x0],ch
   14001a10a:	outs   dx,BYTE PTR ds:[rsi]
   14001a10b:	add    BYTE PTR [rdi+0x0],ah
   14001a10e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001a112:	ins    BYTE PTR es:[rdi],dx
   14001a113:	add    BYTE PTR [rbp+0x0],ah
   14001a116:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001a11a:	data16 add BYTE PTR [rdi+0x0],ch
   14001a11e:	add    BYTE PTR [rax],al
   14001a120:	inc    BYTE PTR [rdx]
   14001a122:	add    BYTE PTR [rax],al
   14001a124:	add    DWORD PTR [rax],eax
   14001a126:	xor    BYTE PTR [rax],al
   14001a128:	xor    al,0x0
   14001a12a:	xor    BYTE PTR [rax],al
   14001a12c:	cmp    DWORD PTR [rax],eax
   14001a12e:	xor    BYTE PTR [rax],al
   14001a130:	xor    al,0x0
   14001a132:	rex.X add BYTE PTR [rax],sil
   14001a135:	add    BYTE PTR [rax],al
   14001a137:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001a13b:	add    BYTE PTR [rcx],al
   14001a13d:	add    BYTE PTR [rbx+0x0],al
   14001a140:	outs   dx,DWORD PTR ds:[rsi]
   14001a141:	add    BYTE PTR [rbp+0x0],ch
   14001a144:	jo     0x14001a146
   14001a146:	(bad)  
   14001a147:	add    BYTE PTR [rsi+0x0],ch
   14001a14a:	jns    0x14001a14c
   14001a14c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001a150:	ins    DWORD PTR es:[rdi],dx
   14001a151:	add    BYTE PTR [rbp+0x0],ah
   14001a154:	add    BYTE PTR [rax],al
   14001a156:	add    BYTE PTR [rax],al
   14001a158:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001a15c:	movsxd eax,DWORD PTR [rax]
   14001a15e:	jb     0x14001a160
   14001a160:	outs   dx,DWORD PTR ds:[rsi]
   14001a161:	add    BYTE PTR [rbx+0x0],dh
   14001a164:	outs   dx,DWORD PTR ds:[rsi]
   14001a165:	add    BYTE PTR [rsi+0x0],ah
   14001a168:	je     0x14001a16a
   14001a16a:	and    BYTE PTR [rax],al
   14001a16c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001a170:	jb     0x14001a172
   14001a172:	jo     0x14001a174
   14001a174:	outs   dx,DWORD PTR ds:[rsi]
   14001a175:	add    BYTE PTR [rdx+0x0],dh
   14001a178:	(bad)  
   14001a179:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001a17d:	add    BYTE PTR [rdi+0x0],ch
   14001a180:	outs   dx,BYTE PTR ds:[rsi]
   14001a181:	add    BYTE PTR [rax],al
   14001a183:	add    BYTE PTR [rax+rax*1+0x10032],cl
   14001a18a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001a18e:	ins    BYTE PTR es:[rdi],dx
   14001a18f:	add    BYTE PTR [rbp+0x0],ah
   14001a192:	add    BYTE PTR [rbp+0x0],r12b
   14001a196:	jae    0x14001a198
   14001a198:	movsxd eax,DWORD PTR [rax]
   14001a19a:	jb     0x14001a19c
   14001a19c:	imul   eax,DWORD PTR [rax],0x740070
   14001a1a2:	imul   eax,DWORD PTR [rax],0x6e006f
   14001a1a8:	add    BYTE PTR [rax],al
   14001a1aa:	add    BYTE PTR [rax],al
   14001a1ac:	push   rsi
   14001a1ad:	add    BYTE PTR [rcx+0x0],ch
   14001a1b0:	jae    0x14001a1b2
   14001a1b2:	jne    0x14001a1b4
   14001a1b4:	(bad)  
   14001a1b5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001a1b9:	add    BYTE PTR [rbx+0x0],dl
   14001a1bc:	je     0x14001a1be
   14001a1be:	jne    0x14001a1c0
   14001a1c0:	add    BYTE PTR fs:[rcx+0x0],ch
   14001a1c4:	outs   dx,DWORD PTR ds:[rsi]
   14001a1c5:	add    BYTE PTR [rax],ah
   14001a1c7:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14001a1cb:	add    BYTE PTR [rdi+0x0],ch
   14001a1ce:	ins    BYTE PTR es:[rdi],dx
   14001a1cf:	add    BYTE PTR [rbx+0x0],dh
   14001a1d2:	and    BYTE PTR [rax],al
   14001a1d4:	data16 add BYTE PTR [rdi+0x0],ch
   14001a1d8:	jb     0x14001a1da
   14001a1da:	and    BYTE PTR [rax],al
   14001a1dc:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   14001a1e0:	data16 add BYTE PTR [rcx+0x0],ch
   14001a1e4:	movsxd eax,DWORD PTR [rax]
   14001a1e6:	add    BYTE PTR gs:[rax],ah
   14001a1e9:	add    BYTE PTR [rbx+0x0],dl
   14001a1ec:	outs   dx,DWORD PTR ds:[rsi]
   14001a1ed:	add    BYTE PTR [rax+rax*1+0x75],ch
   14001a1f1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001a1f5:	add    BYTE PTR [rdi+0x0],ch
   14001a1f8:	outs   dx,BYTE PTR ds:[rsi]
   14001a1f9:	add    BYTE PTR [rax],ah
   14001a1fb:	add    BYTE PTR [rcx+0x0],cl
   14001a1fe:	outs   dx,BYTE PTR ds:[rsi]
   14001a1ff:	add    BYTE PTR [rbx+0x0],dh
   14001a202:	je     0x14001a204
   14001a204:	(bad)  
   14001a205:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001a209:	add    BYTE PTR [rbp+0x0],ah
   14001a20c:	jb     0x14001a20e
   14001a20e:	add    BYTE PTR [rax],al
   14001a210:	(bad)  
   14001a211:	add    BYTE PTR [rax],ah
   14001a213:	add    BYTE PTR [rcx],al
   14001a215:	add    BYTE PTR [rsi+0x0],al
   14001a218:	imul   eax,DWORD PTR [rax],0x65006c
   14001a21e:	push   rsi
   14001a21f:	add    BYTE PTR [rbp+0x0],ah
   14001a222:	jb     0x14001a224
   14001a224:	jae    0x14001a226
   14001a226:	imul   eax,DWORD PTR [rax],0x6e006f
   14001a22c:	add    BYTE PTR [rax],al
   14001a22e:	add    BYTE PTR [rax],al
   14001a230:	xor    DWORD PTR [rax],eax
   14001a232:	xor    BYTE PTR [rax],al
   14001a234:	add    BYTE PTR cs:[rax],dh
   14001a237:	add    BYTE PTR [rsi],ch
   14001a239:	add    BYTE PTR [rbx],dh
   14001a23b:	add    BYTE PTR [rcx],dh
   14001a23d:	add    BYTE PTR [rcx],dh
   14001a23f:	add    BYTE PTR [rdx],dh
   14001a241:	add    BYTE PTR [rip+0x30002e00],dh        # 0x17001d047
   14001a247:	add    BYTE PTR [rax],ah
   14001a249:	add    BYTE PTR [rdx+0x0],ah
   14001a24c:	jne    0x14001a24e
   14001a24e:	imul   eax,DWORD PTR [rax],0x74006c
   14001a254:	and    BYTE PTR [rax],al
   14001a256:	(bad)  
   14001a257:	add    BYTE PTR [rcx+0x0],bh
   14001a25a:	cmp    al,BYTE PTR [rax]
   14001a25c:	and    BYTE PTR [rax],al
   14001a25e:	push   rsi
   14001a25f:	add    BYTE PTR [rbx+0x0],dl
   14001a262:	push   rsp
   14001a263:	add    BYTE PTR [rdi+0x0],cl
   14001a266:	pop    rdi
   14001a267:	add    BYTE PTR [rdx+0x0],dl
   14001a26a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14001a26f:	add    BYTE PTR [rax+rax*1+0x12],al
   14001a273:	add    BYTE PTR [rcx],al
   14001a275:	add    BYTE PTR [rcx+0x0],cl
   14001a278:	outs   dx,BYTE PTR ds:[rsi]
   14001a279:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001a27d:	add    BYTE PTR [rdx+0x0],dh
   14001a280:	outs   dx,BYTE PTR ds:[rsi]
   14001a281:	add    BYTE PTR [rcx+0x0],ah
   14001a284:	ins    BYTE PTR es:[rdi],dx
   14001a285:	add    BYTE PTR [rsi+0x0],cl
   14001a288:	(bad)  
   14001a289:	add    BYTE PTR [rbp+0x0],ch
   14001a28c:	add    BYTE PTR gs:[rax],al
   14001a28f:	add    BYTE PTR [rsi+0x0],dl
   14001a292:	push   rbx
   14001a293:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14001a297:	add    BYTE PTR [rcx+0x0],cl
   14001a29a:	outs   dx,BYTE PTR ds:[rsi]
   14001a29b:	add    BYTE PTR [rbx+0x0],dh
   14001a29e:	je     0x14001a2a0
   14001a2a0:	(bad)  
   14001a2a1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001a2a5:	add    BYTE PTR [rbp+0x0],ah
   14001a2a8:	jb     0x14001a2aa
   14001a2aa:	add    BYTE PTR cs:[rbp+0x0],ah
   14001a2ae:	js     0x14001a2b0
   14001a2b0:	add    BYTE PTR gs:[rax],al
   14001a2b3:	add    BYTE PTR [rax+0x1002e00],al
   14001a2b9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001a2bd:	add    BYTE PTR [rdi+0x0],ah
   14001a2c0:	(bad)  
   14001a2c1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001a2c5:	add    BYTE PTR [rdi+0x0],ch
   14001a2c8:	jo     0x14001a2ca
   14001a2ca:	jns    0x14001a2cc
   14001a2cc:	jb     0x14001a2ce
   14001a2ce:	imul   eax,DWORD PTR [rax],0x680067
   14001a2d4:	je     0x14001a2d6
   14001a2d6:	add    BYTE PTR [rax],al
   14001a2d8:	test   eax,0x4d002000
   14001a2dd:	add    BYTE PTR [rcx+0x0],ch
   14001a2e0:	movsxd eax,DWORD PTR [rax]
   14001a2e2:	jb     0x14001a2e4
   14001a2e4:	outs   dx,DWORD PTR ds:[rsi]
   14001a2e5:	add    BYTE PTR [rbx+0x0],dh
   14001a2e8:	outs   dx,DWORD PTR ds:[rsi]
   14001a2e9:	add    BYTE PTR [rsi+0x0],ah
   14001a2ec:	je     0x14001a2ee
   14001a2ee:	and    BYTE PTR [rax],al
   14001a2f0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001a2f4:	jb     0x14001a2f6
   14001a2f6:	jo     0x14001a2f8
   14001a2f8:	outs   dx,DWORD PTR ds:[rsi]
   14001a2f9:	add    BYTE PTR [rdx+0x0],dh
   14001a2fc:	(bad)  
   14001a2fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001a301:	add    BYTE PTR [rdi+0x0],ch
   14001a304:	outs   dx,BYTE PTR ds:[rsi]
   14001a305:	add    BYTE PTR [rsi],ch
   14001a307:	add    BYTE PTR [rax],ah
   14001a309:	add    BYTE PTR [rcx+0x0],al
   14001a30c:	ins    BYTE PTR es:[rdi],dx
   14001a30d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001a311:	add    BYTE PTR [rdx+0x0],dh
   14001a314:	imul   eax,DWORD PTR [rax],0x680067
   14001a31a:	je     0x14001a31c
   14001a31c:	jae    0x14001a31e
   14001a31e:	and    BYTE PTR [rax],al
   14001a320:	jb     0x14001a322
   14001a322:	add    BYTE PTR gs:[rbx+0x0],dh
   14001a326:	add    BYTE PTR gs:[rdx+0x0],dh
   14001a32a:	jbe    0x14001a32c
   14001a32c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001a331:	add    BYTE PTR [rax],al
   14001a333:	add    BYTE PTR [rax+rax*1+0x12],cl
   14001a337:	add    BYTE PTR [rcx],al
   14001a339:	add    BYTE PTR [rdi+0x0],cl
   14001a33c:	jb     0x14001a33e
   14001a33e:	imul   eax,DWORD PTR [rax],0x690067
   14001a344:	outs   dx,BYTE PTR ds:[rsi]
   14001a345:	add    BYTE PTR [rcx+0x0],ah
   14001a348:	ins    BYTE PTR es:[rdi],dx
   14001a349:	add    BYTE PTR [rsi+0x0],al
   14001a34c:	imul   eax,DWORD PTR [rax],0x65006c
   14001a352:	outs   dx,BYTE PTR ds:[rsi]
   14001a353:	add    BYTE PTR [rcx+0x0],ah
   14001a356:	ins    DWORD PTR es:[rdi],dx
   14001a357:	add    BYTE PTR [rbp+0x0],ah
   14001a35a:	add    BYTE PTR [rax],al
   14001a35c:	push   rsi
   14001a35d:	add    BYTE PTR [rbx+0x0],dl
   14001a360:	push   rsp
   14001a361:	add    BYTE PTR [rdi+0x0],cl
   14001a364:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001a368:	jae    0x14001a36a
   14001a36a:	je     0x14001a36c
   14001a36c:	(bad)  
   14001a36d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001a371:	add    BYTE PTR [rbp+0x0],ah
   14001a374:	jb     0x14001a376
   14001a376:	add    BYTE PTR cs:[rbp+0x0],ah
   14001a37a:	js     0x14001a37c
   14001a37c:	add    BYTE PTR gs:[rax],al
   14001a37f:	add    BYTE PTR [rsi+0x0],bl
   14001a382:	(bad)  
   14001a383:	add    BYTE PTR [rcx],al
   14001a385:	add    BYTE PTR [rax+0x0],dl
   14001a388:	jb     0x14001a38a
   14001a38a:	outs   dx,DWORD PTR ds:[rsi]
   14001a38b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001a38f:	add    BYTE PTR [rbx+0x0],ah
   14001a392:	je     0x14001a394
   14001a394:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001a398:	ins    DWORD PTR es:[rdi],dx
   14001a399:	add    BYTE PTR [rbp+0x0],ah
   14001a39c:	add    BYTE PTR [rax],al
   14001a39e:	add    BYTE PTR [rax],al
   14001a3a0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001a3a4:	movsxd eax,DWORD PTR [rax]
   14001a3a6:	jb     0x14001a3a8
   14001a3a8:	outs   dx,DWORD PTR ds:[rsi]
   14001a3a9:	add    BYTE PTR [rbx+0x0],dh
   14001a3ac:	outs   dx,DWORD PTR ds:[rsi]
   14001a3ad:	add    BYTE PTR [rsi+0x0],ah
   14001a3b0:	je     0x14001a3b2
   14001a3b2:	scas   al,BYTE PTR es:[rdi]
   14001a3b3:	add    BYTE PTR [rax],ah
   14001a3b5:	add    BYTE PTR [rsi+0x0],dl
   14001a3b8:	imul   eax,DWORD PTR [rax],0x750073
   14001a3be:	(bad)  
   14001a3bf:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001a3c3:	add    BYTE PTR [rbx+0x0],dl
   14001a3c6:	je     0x14001a3c8
   14001a3c8:	jne    0x14001a3ca
   14001a3ca:	add    BYTE PTR fs:[rcx+0x0],ch
   14001a3ce:	outs   dx,DWORD PTR ds:[rsi]
   14001a3cf:	add    BYTE PTR [rsi+0x32002000],ch
   14001a3d5:	add    BYTE PTR [rax],dh
   14001a3d7:	add    BYTE PTR [rcx],dh
   14001a3d9:	add    BYTE PTR [rax],dh
   14001a3db:	add    BYTE PTR [rax],al
   14001a3dd:	add    BYTE PTR [rax],al
   14001a3df:	add    BYTE PTR [rsi],bh
   14001a3e1:	add    BYTE PTR [rip+0x50000100],cl        # 0x19001a4e7
   14001a3e7:	add    BYTE PTR [rdx+0x0],dh
   14001a3ea:	outs   dx,DWORD PTR ds:[rsi]
   14001a3eb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001a3ef:	add    BYTE PTR [rbx+0x0],ah
   14001a3f2:	je     0x14001a3f4
   14001a3f4:	push   rsi
   14001a3f5:	add    BYTE PTR [rbp+0x0],ah
   14001a3f8:	jb     0x14001a3fa
   14001a3fa:	jae    0x14001a3fc
   14001a3fc:	imul   eax,DWORD PTR [rax],0x6e006f
   14001a402:	add    BYTE PTR [rax],al
   14001a404:	xor    DWORD PTR [rax],eax
   14001a406:	xor    BYTE PTR [rax],al
   14001a408:	add    BYTE PTR cs:[rax],dh
   14001a40b:	add    BYTE PTR [rsi],ch
   14001a40d:	add    BYTE PTR [rbx],dh
   14001a40f:	add    BYTE PTR [rcx],dh
   14001a411:	add    BYTE PTR [rcx],dh
   14001a413:	add    BYTE PTR [rdx],dh
   14001a415:	add    BYTE PTR [rip+0x30002e00],dh        # 0x17001d21b
   14001a41b:	add    BYTE PTR [rax],al
   14001a41d:	add    BYTE PTR [rax],al
   14001a41f:	add    BYTE PTR [rax+rax*1+0x0],al
   14001a423:	add    BYTE PTR [rcx],al
   14001a425:	add    BYTE PTR [rsi+0x0],dl
   14001a428:	(bad)  
   14001a429:	add    BYTE PTR [rdx+0x0],dh
   14001a42c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001a430:	ins    BYTE PTR es:[rdi],dx
   14001a431:	add    BYTE PTR [rbp+0x0],ah
   14001a434:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001a438:	data16 add BYTE PTR [rdi+0x0],ch
   14001a43c:	add    BYTE PTR [rax],al
   14001a43e:	add    BYTE PTR [rax],al
   14001a440:	and    al,0x0
   14001a442:	add    al,0x0
   14001a444:	add    BYTE PTR [rax],al
   14001a446:	push   rsp
   14001a447:	add    BYTE PTR [rdx+0x0],dh
   14001a44a:	(bad)  
   14001a44b:	add    BYTE PTR [rsi+0x0],ch
   14001a44e:	jae    0x14001a450
   14001a450:	ins    BYTE PTR es:[rdi],dx
   14001a451:	add    BYTE PTR [rcx+0x0],ah
   14001a454:	je     0x14001a456
   14001a456:	imul   eax,DWORD PTR [rax],0x6e006f
   14001a45c:	add    BYTE PTR [rax],al
   14001a45e:	add    BYTE PTR [rax],al
   14001a460:	or     DWORD PTR [rax+rsi*4],eax
   14001a463:	add    al,0x3c
   14001a465:	(bad)  
   14001a466:	jae    0x14001a4db
   14001a468:	gs ins DWORD PTR es:[rdi],dx
   14001a46a:	(bad)  
   14001a46b:	ins    BYTE PTR es:[rdi],dx
   14001a46c:	jns    0x14001a48e
   14001a46e:	js     0x14001a4dd
   14001a470:	ins    BYTE PTR es:[rdi],dx
   14001a471:	outs   dx,BYTE PTR ds:[rsi]
   14001a472:	jae    0x14001a4b1
   14001a474:	and    dh,BYTE PTR [rbp+0x72]
   14001a477:	outs   dx,BYTE PTR ds:[rsi]
   14001a478:	cmp    dh,BYTE PTR [rbx+0x63]
   14001a47b:	push   0x73616d65
   14001a480:	sub    eax,0x7263696d
   14001a485:	outs   dx,DWORD PTR ds:[rsi]
   14001a486:	jae    0x14001a4f7
   14001a488:	data16 je 0x14001a4b8
   14001a48b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001a48e:	cmp    ah,BYTE PTR [rcx+0x73]
   14001a491:	ins    DWORD PTR es:[rdi],dx
   14001a492:	cs jbe 0x14001a4c6
   14001a495:	and    ah,BYTE PTR [rax]
   14001a497:	ins    DWORD PTR es:[rdi],dx
   14001a498:	(bad)  
   14001a499:	outs   dx,BYTE PTR ds:[rsi]
   14001a49a:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001a4a1:	jb     0x14001a516
   14001a4a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001a4aa:	xor    BYTE PTR [rdx],ah
   14001a4ac:	ds or  eax,0x3c20200a
   14001a4b2:	ins    DWORD PTR es:[rdi],dx
   14001a4b3:	jae    0x14001a514
   14001a4b5:	(bad)  
   14001a4b6:	jae    0x14001a525
   14001a4b8:	jbe    0x14001a4ec
   14001a4ba:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14001a4be:	jae    0x14001a534
   14001a4c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001a4c2:	outs   dx,WORD PTR ds:[rsi]
   14001a4c4:	and    BYTE PTR [rax+0x6d],bh
   14001a4c7:	ins    BYTE PTR es:[rdi],dx
   14001a4c8:	outs   dx,BYTE PTR ds:[rsi]
   14001a4c9:	jae    0x14001a505
   14001a4cb:	ins    DWORD PTR es:[rdi],dx
   14001a4cc:	jae    0x14001a52d
   14001a4ce:	(bad)  
   14001a4cf:	jae    0x14001a53e
   14001a4d1:	jbe    0x14001a505
   14001a4d3:	cmp    eax,0x6e727522
   14001a4d8:	cmp    dh,BYTE PTR [rbx+0x63]
   14001a4db:	push   0x73616d65
   14001a4e0:	sub    eax,0x7263696d
   14001a4e5:	outs   dx,DWORD PTR ds:[rsi]
   14001a4e6:	jae    0x14001a557
   14001a4e8:	data16 je 0x14001a518
   14001a4eb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001a4ee:	cmp    ah,BYTE PTR [rcx+0x73]
   14001a4f1:	ins    DWORD PTR es:[rdi],dx
   14001a4f2:	cs jbe 0x14001a527
   14001a4f5:	and    bh,BYTE PTR [rsi]
   14001a4f7:	or     eax,0x2020200a
   14001a4fc:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14001a503:	ins    DWORD PTR es:[rdi],dx
   14001a504:	jbe    0x14001a538
   14001a506:	cmp    dh,BYTE PTR [rbx+0x65]
   14001a509:	movsxd esi,DWORD PTR [rbp+0x72]
   14001a50c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001a514:	and    BYTE PTR [rax],ah
   14001a516:	and    BYTE PTR [rax],ah
   14001a518:	cmp    al,0x6d
   14001a51a:	jae    0x14001a57b
   14001a51c:	(bad)  
   14001a51d:	jae    0x14001a58c
   14001a51f:	jbe    0x14001a553
   14001a521:	cmp    dh,BYTE PTR [rdx+0x65]
   14001a524:	jno    0x14001a59b
   14001a526:	gs jae 0x14001a59d
   14001a529:	gs fs push rax
   14001a52c:	jb     0x14001a597
   14001a52e:	jbe    0x14001a599
   14001a530:	ins    BYTE PTR es:[rdi],dx
   14001a531:	gs addr32 gs jae 0x14001a574
   14001a536:	or     eax,0x2020200a
   14001a53b:	and    BYTE PTR [rax],ah
   14001a53d:	and    BYTE PTR [rax],ah
   14001a53f:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14001a546:	ins    DWORD PTR es:[rdi],dx
   14001a547:	jbe    0x14001a57b
   14001a549:	cmp    dh,BYTE PTR [rdx+0x65]
   14001a54c:	jno    0x14001a5c3
   14001a54e:	gs jae 0x14001a5c5
   14001a551:	gs fs rex.RB js 0x14001a5bb
   14001a556:	movsxd esi,DWORD PTR [rbp+0x74]
   14001a559:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001a560:	ins    BYTE PTR es:[rdi],dx
   14001a561:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001a565:	gs ins BYTE PTR es:[rdi],dx
   14001a567:	cmp    eax,0x49736122
   14001a56c:	outs   dx,BYTE PTR ds:[rsi]
   14001a56d:	jbe    0x14001a5de
   14001a56f:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001a573:	ds cmp al,0x2f
   14001a576:	ins    DWORD PTR es:[rdi],dx
   14001a577:	jae    0x14001a5d8
   14001a579:	(bad)  
   14001a57a:	jae    0x14001a5e9
   14001a57c:	jbe    0x14001a5b0
   14001a57e:	cmp    dh,BYTE PTR [rdx+0x65]
   14001a581:	jno    0x14001a5f8
   14001a583:	gs jae 0x14001a5fa
   14001a586:	gs fs rex.RB js 0x14001a5f0
   14001a58b:	movsxd esi,DWORD PTR [rbp+0x74]
   14001a58e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001a595:	ins    BYTE PTR es:[rdi],dx
   14001a596:	ds or  eax,0x2020200a
   14001a59c:	and    BYTE PTR [rax],ah
   14001a59e:	and    BYTE PTR [rdi+rbp*1],bh
   14001a5a1:	ins    DWORD PTR es:[rdi],dx
   14001a5a2:	jae    0x14001a603
   14001a5a4:	(bad)  
   14001a5a5:	jae    0x14001a614
   14001a5a7:	jbe    0x14001a5db
   14001a5a9:	cmp    dh,BYTE PTR [rdx+0x65]
   14001a5ac:	jno    0x14001a623
   14001a5ae:	gs jae 0x14001a625
   14001a5b1:	gs fs push rax
   14001a5b4:	jb     0x14001a61f
   14001a5b6:	jbe    0x14001a621
   14001a5b8:	ins    BYTE PTR es:[rdi],dx
   14001a5b9:	gs addr32 gs jae 0x14001a5fc
   14001a5be:	or     eax,0x2020200a
   14001a5c3:	and    BYTE PTR [rdi+rbp*1],bh
   14001a5c6:	ins    DWORD PTR es:[rdi],dx
   14001a5c7:	jae    0x14001a628
   14001a5c9:	(bad)  
   14001a5ca:	jae    0x14001a639
   14001a5cc:	jbe    0x14001a600
   14001a5ce:	cmp    dh,BYTE PTR [rbx+0x65]
   14001a5d1:	movsxd esi,DWORD PTR [rbp+0x72]
   14001a5d4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001a5dc:	cmp    al,0x2f
   14001a5de:	ins    DWORD PTR es:[rdi],dx
   14001a5df:	jae    0x14001a640
   14001a5e1:	(bad)  
   14001a5e2:	jae    0x14001a651
   14001a5e4:	jbe    0x14001a618
   14001a5e6:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14001a5ea:	jae    0x14001a660
   14001a5ec:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001a5ee:	outs   dx,WORD PTR ds:[rsi]
   14001a5f0:	ds or  eax,0x612f3c0a
   14001a5f6:	jae    0x14001a66b
   14001a5f8:	gs ins DWORD PTR es:[rdi],dx
   14001a5fa:	(bad)  
   14001a5fb:	ins    BYTE PTR es:[rdi],dx
   14001a5fc:	jns    0x14001a63c
   14001a5fe:	push   rax
   14001a5ff:	rex.B

Disassembly of section .reloc:

000000014001b000 <.reloc>:
   14001b000:	add    BYTE PTR [rax],al
   14001b002:	add    DWORD PTR [rax],eax
   14001b004:	add    BYTE PTR [rax],r8b
   14001b007:	add    BYTE PTR [rax],ch
   14001b009:	movabs ds:0xa358a340a338a330,eax
   14001b012:	(bad)  
   14001b013:	movabs ds:0xacd8acc8acb8aca8,eax
   14001b01c:	call   0x148aea8cd
   14001b021:	lods   eax,DWORD PTR ds:[rsi]
   14001b022:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   14001b028:	lods   rax,QWORD PTR ds:[rsi]
   14001b02a:	pop    rax
   14001b02b:	lods   eax,DWORD PTR ds:[rsi]
   14001b02c:	push   0xffffffff88ad78ad
   14001b031:	lods   eax,DWORD PTR ds:[rsi]
   14001b032:	cwde   
   14001b033:	lods   eax,DWORD PTR ds:[rsi]
   14001b034:	test   al,0xad
   14001b036:	mov    eax,0xd8adc8ad
   14001b03b:	lods   eax,DWORD PTR ds:[rsi]
   14001b03c:	call   0xe0afa8ee
   14001b041:	scas   eax,DWORD PTR es:[rdi]
   14001b042:	test   al,0xaf
   14001b044:	add    BYTE PTR [rax],dl
   14001b046:	add    DWORD PTR [rax],eax
   14001b048:	and    BYTE PTR [rax],al
   14001b04a:	add    BYTE PTR [rax],al
   14001b04c:	rex.W movabs al,ds:0xa5b8a5b0a058a050
   14001b056:	shl    BYTE PTR [rbp-0x5a1f5a38],0xe8
   14001b05d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b05e:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b060:	adc    BYTE PTR [rsi+0x2000a618],ah
   14001b066:	add    DWORD PTR [rax],eax
   14001b068:	int3   
   14001b069:	add    BYTE PTR [rax],al
   14001b06b:	add    BYTE PTR [rax],al
   14001b06d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b06e:	or     BYTE PTR [rbp-0x5ae75af0],ah
   14001b074:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   14001b07a:	cmp    BYTE PTR [rbp-0x5ab75ac0],ah
   14001b080:	push   rax
   14001b081:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b082:	pop    rax
   14001b083:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b084:	(bad)  
   14001b085:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b086:	push   0x78a570a5
   14001b08b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b08c:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14001b093:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b094:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14001b09d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b09e:	enter  0xd0a5,0xa5
   14001b0a2:	fsub   DWORD PTR [rbp-0x5a175a20]
   14001b0a8:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b0aa:	clc    
   14001b0ab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b0ac:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14001b0b2:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14001b0b8:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14001b0be:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0c0:	push   rax
   14001b0c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0c2:	pop    rax
   14001b0c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0c4:	(bad)  
   14001b0c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0c6:	push   0x78a670a6
   14001b0cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0cc:	and    BYTE PTR [rsi-0x596f5978],0x98
   14001b0d3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0d4:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14001b0dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0de:	enter  0xd0a6,0xa6
   14001b0e2:	fsub   DWORD PTR [rsi-0x59175920]
   14001b0e8:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0ea:	clc    
   14001b0eb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b0ec:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14001b0f2:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14001b0f8:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14001b0fe:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001b100:	push   rax
   14001b101:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b102:	pop    rax
   14001b103:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b104:	(bad)  
   14001b105:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b106:	push   0x78a770a7
   14001b10b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b10c:	and    BYTE PTR [rdi-0x586f5878],0x98
   14001b113:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b114:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14001b11d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b11e:	enter  0xd0a7,0xa7
   14001b122:	fsub   DWORD PTR [rdi-0x58175820]
   14001b128:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b12a:	clc    
   14001b12b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b12c:	add    BYTE PTR [rax+0x50000000],ch
   14001b132:	add    DWORD PTR [rax],eax
   14001b134:	in     al,dx
   14001b135:	add    BYTE PTR [rax],al
   14001b137:	add    al,dh
   14001b139:	movabs eax,ds:0xa788a780a670a218
   14001b142:	nop
   14001b143:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b144:	cwde   
   14001b145:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b146:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14001b14f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b150:	enter  0xd0a7,0xa7
   14001b154:	fsub   DWORD PTR [rdi-0x58175820]
   14001b15a:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b15c:	clc    
   14001b15d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b15e:	add    BYTE PTR [rax-0x57ef57f8],ch
   14001b164:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14001b16a:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14001b170:	rex.W test al,0x50
   14001b173:	test   al,0x58
   14001b175:	test   al,0x60
   14001b177:	test   al,0x68
   14001b179:	test   al,0x70
   14001b17b:	test   al,0x78
   14001b17d:	test   al,0x80
   14001b17f:	test   al,0x88
   14001b181:	test   al,0x90
   14001b183:	test   al,0x98
   14001b185:	test   al,0xa0
   14001b187:	test   al,0xa8
   14001b189:	test   al,0xb0
   14001b18b:	test   al,0xb8
   14001b18d:	test   al,0xc0
   14001b18f:	test   al,0xc8
   14001b191:	test   al,0xd0
   14001b193:	test   al,0xe8
   14001b195:	test   al,0xf0
   14001b197:	test   al,0xf8
   14001b199:	test   al,0x0
   14001b19b:	test   eax,0xa910a908
   14001b1a0:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14001b1a6:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001b1ac:	test   rax,0xffffffffa958a950
   14001b1b2:	(bad)  
   14001b1b3:	test   eax,0xa970a968
   14001b1b8:	js     0x14001b163
   14001b1ba:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14001b1c1:	test   eax,0xa9a8a9a0
   14001b1c6:	mov    al,0xa9
   14001b1c8:	mov    eax,0xc8a9c0a9
   14001b1cd:	test   eax,0xa9d8a9d0
   14001b1d2:	loopne 0x14001b17d
   14001b1d4:	call   0x138aba282
   14001b1d9:	test   eax,0xaa08aa00
   14001b1de:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14001b1e4:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14001b1ea:	test   al,0xaa
   14001b1ec:	enter  0xe8aa,0xaa
   14001b1f0:	or     BYTE PTR [rbx-0x549754d8],ch
   14001b1f6:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14001b1fd:	stos   DWORD PTR es:[rdi],eax
   14001b1fe:	movabs al,ds:0xadf8adf0aba8ab
   14001b207:	scas   al,BYTE PTR es:[rdi]
   14001b208:	or     BYTE PTR [rsi-0x51e751f0],ch
   14001b20e:	and    BYTE PTR [rsi-0x51cf51d8],ch
   14001b214:	cmp    BYTE PTR [rsi-0x51af51c0],ch
   14001b21a:	add    BYTE PTR [rax],al
   14001b21c:	add    BYTE PTR [rax+0x1],ah
   14001b21f:	add    BYTE PTR [rax+rax*1],bh
   14001b222:	add    BYTE PTR [rax],al
   14001b224:	add    BYTE PTR [rdx-0x5def5df8],ah
   14001b22a:	cmp    BYTE PTR [rdx-0x5d8f5d98],ah
   14001b230:	js     0x14001b1d4
   14001b232:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14001b239:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14001b242:	enter  0xd0a2,0xa2
   14001b246:	fsub   DWORD PTR [rdx-0x5d175d20]
   14001b24c:	lock movabs ds:0xa310a308a300a2f8,al
	...
