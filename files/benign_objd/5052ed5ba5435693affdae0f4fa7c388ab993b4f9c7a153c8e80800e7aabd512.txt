
5052ed5ba5435693affdae0f4fa7c388ab993b4f9c7a153c8e80800e7aabd512.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x9a95]        # 0x40aab0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x9a96]        # 0x40aac0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x9a99]        # 0x40aad0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x9a5c]        # 0x40aaa0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x98df]        # 0x40a930
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x9a31]        # 0x40aa90
  40105f:	mov    DWORD PTR [rip+0xbfa3],edx        # 0x40d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4065a0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x405560
  401081:	mov    rdx,QWORD PTR [rip+0x9938]        # 0x40a9c0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x991e]        # 0x40a9b0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x9984]        # 0x40aa20
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x98bb]        # 0x40a960
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x405140
  4010af:	mov    rax,QWORD PTR [rip+0x982a]        # 0x40a8e0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4065a0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x4319]        # 0x405440
  401127:	call   0x405430
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x98e5]        # 0x40aa50
  40116b:	lea    r8,[rip+0xbea6]        # 0x40d018
  401172:	lea    rdx,[rip+0xbea7]        # 0x40d020
  401179:	lea    rcx,[rip+0xbea8]        # 0x40d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xbe78],eax        # 0x40d000
  401188:	lea    rax,[rip+0xbe71]        # 0x40d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x9875]        # 0x40aa10
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4065b8
  4011a3:	mov    DWORD PTR [rip+0xbe67],eax        # 0x40d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x98ca]        # 0x40aa90
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x979b]        # 0x40a990
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xd7ba]        # 0x40e9bc
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x9777]        # 0x40a9a0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xbdba],0x1        # 0x40d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x96bc]        # 0x40a920
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x405750
  40127d:	lea    rcx,[rip+0x4a6c]        # 0x405cf0
  401284:	call   QWORD PTR [rip+0xd72a]        # 0x40e9b4
  40128a:	mov    rdx,QWORD PTR [rip+0x96ef]        # 0x40a980
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x405c00
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4065e0
  4012a5:	call   0x405540
  4012aa:	mov    rax,QWORD PTR [rip+0x967f]        # 0x40a930
  4012b1:	mov    QWORD PTR [rip+0xc750],rax        # 0x40da08
  4012b8:	mov    rax,QWORD PTR [rip+0x9691]        # 0x40a950
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xc6e9],rax        # 0x40da00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x6cca],eax        # 0x408000
  401336:	mov    r12d,DWORD PTR [rip+0xbceb]        # 0x40d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x406530
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xbcc2]        # 0x40d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x406510
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x406530
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x406528
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xbc6a],rbp        # 0x40d020
  4013b6:	call   0x405110
  4013bb:	mov    rax,QWORD PTR [rip+0x957e]        # 0x40a940
  4013c2:	mov    rdx,QWORD PTR [rip+0xbc4f]        # 0x40d018
  4013c9:	mov    ecx,DWORD PTR [rip+0xbc59]        # 0x40d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xbc3c]        # 0x40d018
  4013dc:	mov    rdx,QWORD PTR [rip+0xbc3d]        # 0x40d020
  4013e3:	call   0x4066b0
  4013e8:	mov    ecx,DWORD PTR [rip+0xbc1a]        # 0x40d008
  4013ee:	mov    DWORD PTR [rip+0xbc18],eax        # 0x40d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xbc02]        # 0x40d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x406588
  40140b:	mov    eax,DWORD PTR [rip+0xbbfb]        # 0x40d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x9569]        # 0x40a9a0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x406590
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x957d]        # 0x40a9e0
  401463:	mov    rcx,QWORD PTR [rip+0x9566]        # 0x40a9d0
  40146a:	call   0x406580
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xd4cb]        # 0x40e964
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x9559]        # 0x40aa00
  4014a7:	mov    rcx,QWORD PTR [rip+0x9542]        # 0x40a9f0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x406580
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x406550
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x95b5]        # 0x40aa90
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x405150
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x9585]        # 0x40aa90
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x405150
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	movsx  r9d,BYTE PTR [rcx]
  401534:	mov    eax,0x1505
  401539:	mov    r11,rdx
  40153c:	test   r9b,r9b
  40153f:	je     0x40155b
  401541:	mov    r10d,eax
  401544:	add    rcx,0x1
  401548:	shl    r10d,0x5
  40154c:	add    eax,r10d
  40154f:	add    eax,r9d
  401552:	movsx  r9d,BYTE PTR [rcx]
  401556:	test   r9b,r9b
  401559:	jne    0x401541
  40155b:	xor    edx,edx
  40155d:	div    DWORD PTR [r8+0x8]
  401561:	mov    eax,edx
  401563:	mov    rdx,QWORD PTR [r8]
  401566:	lea    rax,[rdx+rax*8]
  40156a:	mov    rdx,QWORD PTR [rax]
  40156d:	mov    QWORD PTR [r11+0x20],rdx
  401571:	mov    QWORD PTR [rax],r11
  401574:	ret    
  401575:	nop
  401576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401580:	push   rbx
  401581:	sub    rsp,0x20
  401585:	mov    rbx,rcx
  401588:	mov    rcx,QWORD PTR [rcx]
  40158b:	call   0x404f18
  401590:	mov    rcx,QWORD PTR [rbx+0x28]
  401594:	test   rcx,rcx
  401597:	je     0x40159e
  401599:	call   0x404c20
  40159e:	mov    rcx,QWORD PTR [rbx+0x30]
  4015a2:	test   rcx,rcx
  4015a5:	je     0x4015ac
  4015a7:	call   0x404ed8
  4015ac:	mov    rdx,rbx
  4015af:	mov    ecx,0x40
  4015b4:	add    rsp,0x20
  4015b8:	pop    rbx
  4015b9:	jmp    0x404d98
  4015be:	xchg   ax,ax
  4015c0:	push   r12
  4015c2:	push   rbp
  4015c3:	push   rdi
  4015c4:	push   rsi
  4015c5:	push   rbx
  4015c6:	sub    rsp,0x20
  4015ca:	xor    eax,eax
  4015cc:	mov    rbp,QWORD PTR [rsp+0x70]
  4015d1:	test   r9,r9
  4015d4:	je     0x401638
  4015d6:	mov    rax,QWORD PTR [rdx]
  4015d9:	mov    rbx,rdx
  4015dc:	mov    r12,rcx
  4015df:	lea    ecx,[r8-0x1]
  4015e3:	mov    rsi,r9
  4015e6:	mov    rdx,rax
  4015e9:	neg    rdx
  4015ec:	and    rdx,rcx
  4015ef:	mov    ecx,0x18
  4015f4:	add    rax,rdx
  4015f7:	mov    QWORD PTR [rbx],rax
  4015fa:	call   0x404da8
  4015ff:	mov    rdi,rax
  401602:	mov    rax,QWORD PTR [rbx]
  401605:	mov    rcx,rsi
  401608:	mov    QWORD PTR [rdi+0x8],rsi
  40160c:	mov    QWORD PTR [rdi],rax
  40160f:	call   0x404ea0
  401614:	mov    r9,QWORD PTR [rbx]
  401617:	mov    rcx,QWORD PTR [r12]
  40161b:	mov    rdx,rdi
  40161e:	mov    QWORD PTR [rdi+0x10],rax
  401622:	add    rsi,r9
  401625:	mov    DWORD PTR [rbp+0x0],r9d
  401629:	mov    QWORD PTR [rbx],rsi
  40162c:	mov    DWORD PTR [rbp+0x4],esi
  40162f:	call   0x404dc8
  401634:	mov    rax,QWORD PTR [rdi+0x10]
  401638:	add    rsp,0x20
  40163c:	pop    rbx
  40163d:	pop    rsi
  40163e:	pop    rdi
  40163f:	pop    rbp
  401640:	pop    r12
  401642:	ret    
  401643:	nop    DWORD PTR [rax]
  401646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401650:	push   r15
  401652:	push   r14
  401654:	push   r13
  401656:	push   r12
  401658:	push   rbp
  401659:	push   rdi
  40165a:	push   rsi
  40165b:	push   rbx
  40165c:	sub    rsp,0x58
  401660:	mov    rsi,rcx
  401663:	mov    rcx,rdx
  401666:	mov    rbx,rdx
  401669:	mov    rbp,r8
  40166c:	call   0x404ee0
  401671:	mov    ecx,0x10
  401676:	mov    r12d,eax
  401679:	call   0x404da8
  40167e:	movsxd rcx,r12d
  401681:	mov    edx,0x8
  401686:	mov    rdi,rax
  401689:	call   0x404e98
  40168e:	lea    rdx,[rip+0xfffffffffffffe9b]        # 0x401530
  401695:	mov    rcx,rbx
  401698:	mov    r8,rdi
  40169b:	mov    QWORD PTR [rdi],rax
  40169e:	mov    DWORD PTR [rdi+0x8],r12d
  4016a2:	call   0x404f10
  4016a7:	mov    ebx,DWORD PTR [rdi+0x8]
  4016aa:	test   ebx,ebx
  4016ac:	jle    0x401a6f
  4016b2:	mov    r9,QWORD PTR [rdi]
  4016b5:	lea    eax,[rbx-0x1]
  4016b8:	xor    edx,edx
  4016ba:	lea    r10,[r9+rax*8+0x8]
  4016bf:	nop
  4016c0:	mov    rax,QWORD PTR [r9]
  4016c3:	test   rax,rax
  4016c6:	je     0x4016e1
  4016c8:	mov    ecx,edx
  4016ca:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	mov    DWORD PTR [rax+0xc],ecx
  4016d3:	mov    rax,QWORD PTR [rax+0x20]
  4016d7:	add    edx,0x1
  4016da:	mov    ecx,edx
  4016dc:	test   rax,rax
  4016df:	jne    0x4016d0
  4016e1:	add    r9,0x8
  4016e5:	cmp    r9,r10
  4016e8:	jne    0x4016c0
  4016ea:	lea    r14,[rdx+rdx*2]
  4016ee:	lea    rax,[r14+r14*1]
  4016f2:	shl    r14,0x3
  4016f6:	movsxd r15,ebx
  4016f9:	lea    r13,[rsi+0x8]
  4016fd:	mov    r8d,0x4
  401703:	lea    r12,[r15+rax*1+0x2]
  401708:	mov    QWORD PTR [rsp+0x20],rbp
  40170d:	mov    rcx,rsi
  401710:	mov    rdx,r13
  401713:	shl    r12,0x2
  401717:	mov    r9,r12
  40171a:	call   0x4015c0
  40171f:	lea    rdx,[r15*4+0x0]
  401727:	mov    DWORD PTR [rax+0x4],ebx
  40172a:	mov    DWORD PTR [rax],0x28000000
  401730:	sub    r12,rdx
  401733:	lea    rbx,[rax+rdx*1+0x8]
  401738:	mov    r8,rdx
  40173b:	lea    rax,[r12-0x8]
  401740:	neg    r8
  401743:	cmp    r14,rax
  401746:	je     0x401774
  401748:	lea    rax,[rip+0x78ce]        # 0x40901d
  40174f:	lea    r9,[rip+0x7a7a]        # 0x4091d0
  401756:	lea    rdx,[rip+0x78a3]        # 0x409000
  40175d:	lea    rcx,[rip+0x78b0]        # 0x409014
  401764:	mov    r8d,0x151
  40176a:	mov    QWORD PTR [rsp+0x20],rax
  40176f:	call   0x404f50
  401774:	mov    edx,DWORD PTR [rdi+0x8]
  401777:	mov    rcx,QWORD PTR [rdi]
  40177a:	test   edx,edx
  40177c:	jle    0x401aa0
  401782:	lea    rdx,[rbx+r8*1]
  401786:	mov    QWORD PTR [rsp+0x38],0x0
  40178f:	xor    eax,eax
  401791:	mov    QWORD PTR [rsp+0x40],rdx
  401796:	mov    rdx,QWORD PTR [rsp+0x38]
  40179b:	mov    r11,QWORD PTR [rsp+0x40]
  4017a0:	mov    r15,QWORD PTR [rcx+rdx*8]
  4017a4:	mov    DWORD PTR [r11+rdx*4],eax
  4017a8:	test   r15,r15
  4017ab:	je     0x401a83
  4017b1:	mov    ebp,DWORD PTR [r15+0xc]
  4017b5:	cmp    ebp,eax
  4017b7:	je     0x4017e5
  4017b9:	lea    rax,[rip+0x7868]        # 0x409028
  4017c0:	lea    r9,[rip+0x7a29]        # 0x4091f0
  4017c7:	lea    rdx,[rip+0x7832]        # 0x409000
  4017ce:	lea    rcx,[rip+0x783f]        # 0x409014
  4017d5:	mov    r8d,0x178
  4017db:	mov    QWORD PTR [rsp+0x20],rax
  4017e0:	call   0x404f50
  4017e5:	add    rbx,0x10
  4017e9:	lea    rax,[rbx+0x8]
  4017ed:	mov    QWORD PTR [rsp+0x48],rax
  4017f2:	mov    eax,DWORD PTR [r15+0x8]
  4017f6:	mov    DWORD PTR [rbx-0x10],eax
  4017f9:	mov    rax,QWORD PTR [r15+0x10]
  4017fd:	test   rax,rax
  401800:	je     0x401a65
  401806:	mov    eax,DWORD PTR [rax+0xc]
  401809:	mov    DWORD PTR [rbx-0xc],eax
  40180c:	mov    BYTE PTR [rbx-0x1],0x0
  401810:	mov    rax,QWORD PTR [r15+0x10]
  401814:	test   rax,rax
  401817:	je     0x401a35
  40181d:	mov    rcx,QWORD PTR [rax]
  401820:	call   0x406510
  401825:	add    rax,QWORD PTR [r15]
  401828:	mov    rdx,rax
  40182b:	mov    rcx,rdx
  40182e:	mov    QWORD PTR [rsp+0x30],rdx
  401833:	call   0x406510
  401838:	mov    ecx,0x18
  40183d:	mov    r12,rax
  401840:	call   0x404da8
  401845:	mov    r14,rax
  401848:	mov    rax,QWORD PTR [rsi+0x8]
  40184c:	mov    rcx,r12
  40184f:	mov    QWORD PTR [r14+0x8],r12
  401853:	mov    QWORD PTR [r14],rax
  401856:	call   0x404ea0
  40185b:	mov    rdx,QWORD PTR [rsp+0x30]
  401860:	mov    r8,r12
  401863:	mov    rcx,rax
  401866:	mov    QWORD PTR [r14+0x10],rax
  40186a:	call   0x406528
  40186f:	mov    rax,QWORD PTR [rsi+0x8]
  401873:	mov    rcx,QWORD PTR [rsi]
  401876:	mov    rdx,r14
  401879:	mov    WORD PTR [rbx-0x4],r12w
  40187e:	add    r12,rax
  401881:	mov    DWORD PTR [rbx-0x8],eax
  401884:	mov    QWORD PTR [rsi+0x8],r12
  401888:	call   0x404dc8
  40188d:	mov    rcx,QWORD PTR [r15+0x28]
  401891:	test   rcx,rcx
  401894:	je     0x401932
  40189a:	cmp    QWORD PTR [r15+0x38],0x0
  40189f:	je     0x4018cd
  4018a1:	lea    rax,[rip+0x77b0]        # 0x409058
  4018a8:	lea    r9,[rip+0x7941]        # 0x4091f0
  4018af:	lea    rdx,[rip+0x774a]        # 0x409000
  4018b6:	lea    rcx,[rip+0x7757]        # 0x409014
  4018bd:	mov    r8d,0x188
  4018c3:	mov    QWORD PTR [rsp+0x20],rax
  4018c8:	call   0x404f50
  4018cd:	cmp    QWORD PTR [r15+0x30],0x0
  4018d2:	jne    0x4018a1
  4018d4:	mov    eax,DWORD PTR [rsi+0x10]
  4018d7:	test   eax,eax
  4018d9:	jne    0x401a3d
  4018df:	call   0x404c98
  4018e4:	mov    r14,rax
  4018e7:	mov    rcx,r14
  4018ea:	call   0x404cd0
  4018ef:	mov    rcx,r14
  4018f2:	mov    r12,rax
  4018f5:	call   0x404c20
  4018fa:	mov    rcx,r12
  4018fd:	call   0x404cc8
  401902:	mov    r8d,0x8
  401908:	mov    r9,rax
  40190b:	mov    rdx,r13
  40190e:	mov    rcx,rsi
  401911:	mov    QWORD PTR [rsp+0x20],rbx
  401916:	call   0x4015c0
  40191b:	mov    rcx,r12
  40191e:	mov    rdx,rax
  401921:	call   0x404c78
  401926:	mov    rcx,r12
  401929:	call   0x404c20
  40192e:	mov    BYTE PTR [rbx-0x2],0x76
  401932:	mov    rax,QWORD PTR [r15+0x38]
  401936:	test   rax,rax
  401939:	je     0x4019fc
  40193f:	cmp    QWORD PTR [r15+0x30],0x0
  401944:	je     0x401972
  401946:	lea    rax,[rip+0x7736]        # 0x409083
  40194d:	lea    r9,[rip+0x789c]        # 0x4091f0
  401954:	lea    rdx,[rip+0x76a5]        # 0x409000
  40195b:	lea    rcx,[rip+0x76b2]        # 0x409014
  401962:	mov    r8d,0x194
  401968:	mov    QWORD PTR [rsp+0x20],rax
  40196d:	call   0x404f50
  401972:	xor    r12d,r12d
  401975:	mov    rax,QWORD PTR [rax+0x18]
  401979:	add    r12d,0x1
  40197d:	test   rax,rax
  401980:	jne    0x401975
  401982:	lea    r9d,[r12*4+0x0]
  40198a:	mov    rcx,rsi
  40198d:	mov    QWORD PTR [rsp+0x20],rbx
  401992:	mov    r8d,0x4
  401998:	mov    rdx,r13
  40199b:	call   0x4015c0
  4019a0:	mov    BYTE PTR [rbx-0x2],0x4c
  4019a4:	mov    rcx,QWORD PTR [r15+0x38]
  4019a8:	test   rcx,rcx
  4019ab:	je     0x401a5d
  4019b1:	xor    edx,edx
  4019b3:	mov    r9d,DWORD PTR [rcx+0xc]
  4019b7:	mov    rcx,QWORD PTR [rcx+0x18]
  4019bb:	lea    r8d,[rdx+0x1]
  4019bf:	test   rcx,rcx
  4019c2:	mov    DWORD PTR [rax+rdx*4],r9d
  4019c6:	mov    edx,r8d
  4019c9:	jne    0x4019b3
  4019cb:	cmp    r12d,r8d
  4019ce:	je     0x4019fc
  4019d0:	lea    rax,[rip+0x76c0]        # 0x409097
  4019d7:	lea    r9,[rip+0x7812]        # 0x4091f0
  4019de:	lea    rdx,[rip+0x761b]        # 0x409000
  4019e5:	lea    rcx,[rip+0x7628]        # 0x409014
  4019ec:	mov    r8d,0x1a0
  4019f2:	mov    QWORD PTR [rsp+0x20],rax
  4019f7:	call   0x404f50
  4019fc:	cmp    QWORD PTR [r15+0x30],0x0
  401a01:	je     0x401a16
  401a03:	mov    BYTE PTR [rbx-0x2],0x48
  401a07:	mov    rdx,QWORD PTR [r15+0x30]
  401a0b:	mov    r8,rbx
  401a0e:	mov    rcx,rsi
  401a11:	call   0x401650
  401a16:	mov    r15,QWORD PTR [r15+0x20]
  401a1a:	add    ebp,0x1
  401a1d:	test   r15,r15
  401a20:	je     0x401a79
  401a22:	add    rbx,0x18
  401a26:	cmp    ebp,DWORD PTR [r15+0xc]
  401a2a:	jne    0x4017b9
  401a30:	jmp    0x4017e9
  401a35:	mov    rdx,QWORD PTR [r15]
  401a38:	jmp    0x40182b
  401a3d:	call   0x404ce8
  401a42:	mov    r12,rax
  401a45:	mov    rcx,rax
  401a48:	call   0x404c98
  401a4d:	mov    rcx,r12
  401a50:	mov    r14,rax
  401a53:	call   0x404c20
  401a58:	jmp    0x4018e7
  401a5d:	xor    r8d,r8d
  401a60:	jmp    0x4019cb
  401a65:	mov    eax,0xffffffff
  401a6a:	jmp    0x401809
  401a6f:	xor    r14d,r14d
  401a72:	xor    eax,eax
  401a74:	jmp    0x4016f6
  401a79:	mov    rbx,QWORD PTR [rsp+0x48]
  401a7e:	mov    rcx,QWORD PTR [rdi]
  401a81:	mov    eax,ebp
  401a83:	mov    r11,QWORD PTR [rsp+0x38]
  401a88:	mov    edx,r11d
  401a8b:	add    r11,0x1
  401a8f:	add    edx,0x1
  401a92:	cmp    DWORD PTR [rdi+0x8],edx
  401a95:	mov    QWORD PTR [rsp+0x38],r11
  401a9a:	jg     0x401796
  401aa0:	call   0x404f18
  401aa5:	mov    rdx,rdi
  401aa8:	mov    ecx,0x10
  401aad:	add    rsp,0x58
  401ab1:	pop    rbx
  401ab2:	pop    rsi
  401ab3:	pop    rdi
  401ab4:	pop    rbp
  401ab5:	pop    r12
  401ab7:	pop    r13
  401ab9:	pop    r14
  401abb:	pop    r15
  401abd:	jmp    0x404d98
  401ac2:	nop    DWORD PTR [rax+0x0]
  401ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ad0:	push   rbp
  401ad1:	push   rdi
  401ad2:	push   rsi
  401ad3:	push   rbx
  401ad4:	sub    rsp,0x28
  401ad8:	mov    rbp,rdx
  401adb:	mov    rdi,rcx
  401ade:	mov    ecx,0x40
  401ae3:	call   0x404da0
  401ae8:	mov    rcx,rbp
  401aeb:	mov    rsi,rax
  401aee:	call   0x404d58
  401af3:	movsx  r9d,BYTE PTR [rbp+0x0]
  401af8:	mov    QWORD PTR [rsi],rax
  401afb:	test   r9b,r9b
  401afe:	je     0x401b4f
  401b00:	mov    r11,rbp
  401b03:	mov    r10d,0x1505
  401b09:	nop    DWORD PTR [rax+0x0]
  401b10:	mov    ebx,r10d
  401b13:	add    r11,0x1
  401b17:	shl    ebx,0x5
  401b1a:	add    r10d,ebx
  401b1d:	add    r10d,r9d
  401b20:	movsx  r9d,BYTE PTR [r11]
  401b24:	test   r9b,r9b
  401b27:	jne    0x401b10
  401b29:	mov    rcx,rbp
  401b2c:	mov    DWORD PTR [rsi+0x8],r10d
  401b30:	call   0x404d58
  401b35:	mov    r8,rsi
  401b38:	mov    rdx,rax
  401b3b:	mov    rcx,rdi
  401b3e:	call   0x404f08
  401b43:	mov    rax,rsi
  401b46:	add    rsp,0x28
  401b4a:	pop    rbx
  401b4b:	pop    rsi
  401b4c:	pop    rdi
  401b4d:	pop    rbp
  401b4e:	ret    
  401b4f:	mov    r10d,0x1505
  401b55:	jmp    0x401b29
  401b57:	nop    WORD PTR [rax+rax*1+0x0]
  401b60:	push   rbx
  401b61:	sub    rsp,0x20
  401b65:	cmp    QWORD PTR [rcx+0x28],0x0
  401b6a:	je     0x401b90
  401b6c:	lea    r8,[rip+0x7535]        # 0x4090a8
  401b73:	lea    rdx,[rip+0x76d6]        # 0x409250
  401b7a:	lea    rcx,[rip+0x7493]        # 0x409014
  401b81:	add    rsp,0x20
  401b85:	pop    rbx
  401b86:	jmp    0x404dc0
  401b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	cmp    QWORD PTR [rcx+0x30],0x0
  401b95:	jne    0x401b6c
  401b97:	cmp    QWORD PTR [rcx+0x38],0x0
  401b9c:	jne    0x401b6c
  401b9e:	mov    rbx,rcx
  401ba1:	mov    rcx,rdx
  401ba4:	call   0x404c80
  401ba9:	mov    QWORD PTR [rbx+0x28],rax
  401bad:	add    rsp,0x20
  401bb1:	pop    rbx
  401bb2:	ret    
  401bb3:	nop    DWORD PTR [rax]
  401bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bc0:	push   rsi
  401bc1:	push   rbx
  401bc2:	sub    rsp,0x28
  401bc6:	mov    rsi,r8
  401bc9:	call   0x401ad0
  401bce:	mov    rcx,rsi
  401bd1:	mov    rbx,rax
  401bd4:	call   0x404ca0
  401bd9:	mov    rcx,rbx
  401bdc:	mov    rdx,rax
  401bdf:	add    rsp,0x28
  401be3:	pop    rbx
  401be4:	pop    rsi
  401be5:	jmp    0x401b60
  401bea:	nop    WORD PTR [rax+rax*1+0x0]
  401bf0:	push   rbx
  401bf1:	sub    rsp,0x20
  401bf5:	cmp    QWORD PTR [rcx+0x28],0x0
  401bfa:	je     0x401c20
  401bfc:	lea    r8,[rip+0x74a5]        # 0x4090a8
  401c03:	lea    rdx,[rip+0x7626]        # 0x409230
  401c0a:	lea    rcx,[rip+0x7403]        # 0x409014
  401c11:	add    rsp,0x20
  401c15:	pop    rbx
  401c16:	jmp    0x404dc0
  401c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c20:	cmp    QWORD PTR [rcx+0x30],0x0
  401c25:	jne    0x401bfc
  401c27:	cmp    QWORD PTR [rcx+0x38],0x0
  401c2c:	jne    0x401bfc
  401c2e:	mov    rbx,rcx
  401c31:	mov    rcx,rdx
  401c34:	call   0x404ef0
  401c39:	mov    QWORD PTR [rbx+0x30],rax
  401c3d:	add    rsp,0x20
  401c41:	pop    rbx
  401c42:	ret    
  401c43:	nop    DWORD PTR [rax]
  401c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c50:	push   rdi
  401c51:	push   rsi
  401c52:	push   rbx
  401c53:	sub    rsp,0x20
  401c57:	lea    r9,[rip+0xfffffffffffff922]        # 0x401580
  401c5e:	lea    r8,[rip+0x32b3]        # 0x404f18
  401c65:	mov    rsi,rcx
  401c68:	mov    rdi,rdx
  401c6b:	lea    rcx,[rip+0x30f6]        # 0x404d68
  401c72:	lea    rdx,[rip+0x3107]        # 0x404d80
  401c79:	call   0x404ef8
  401c7e:	test   rsi,rsi
  401c81:	mov    rbx,rax
  401c84:	je     0x401c9c
  401c86:	mov    rdx,rdi
  401c89:	mov    rcx,rsi
  401c8c:	call   0x401ad0
  401c91:	mov    rdx,rbx
  401c94:	mov    rcx,rax
  401c97:	call   0x401bf0
  401c9c:	mov    rax,rbx
  401c9f:	add    rsp,0x20
  401ca3:	pop    rbx
  401ca4:	pop    rsi
  401ca5:	pop    rdi
  401ca6:	ret    
  401ca7:	nop    WORD PTR [rax+rax*1+0x0]
  401cb0:	push   r12
  401cb2:	push   rbp
  401cb3:	push   rdi
  401cb4:	push   rsi
  401cb5:	push   rbx
  401cb6:	sub    rsp,0x20
  401cba:	mov    rbp,rcx
  401cbd:	mov    r12,rdx
  401cc0:	mov    rcx,QWORD PTR [rcx]
  401cc3:	mov    rdx,QWORD PTR [rdx]
  401cc6:	call   0x404d78
  401ccb:	test   eax,eax
  401ccd:	je     0x401d00
  401ccf:	cmp    QWORD PTR [r12+0x28],0x0
  401cd5:	je     0x401d09
  401cd7:	lea    r8,[rip+0x742a]        # 0x409108
  401cde:	lea    rdx,[rip+0x752b]        # 0x409210
  401ce5:	lea    rcx,[rip+0x7328]        # 0x409014
  401cec:	add    rsp,0x20
  401cf0:	pop    rbx
  401cf1:	pop    rsi
  401cf2:	pop    rdi
  401cf3:	pop    rbp
  401cf4:	pop    r12
  401cf6:	jmp    0x404dc0
  401cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  401d00:	lea    r8,[rip+0x73d1]        # 0x4090d8
  401d07:	jmp    0x401cde
  401d09:	cmp    QWORD PTR [r12+0x30],0x0
  401d0f:	jne    0x401cd7
  401d11:	cmp    QWORD PTR [rbp+0x10],0x0
  401d16:	je     0x401d29
  401d18:	nop    DWORD PTR [rax+rax*1+0x0]
  401d20:	lea    r8,[rip+0x7409]        # 0x409130
  401d27:	jmp    0x401cde
  401d29:	cmp    QWORD PTR [rbp+0x18],0x0
  401d2e:	jne    0x401d20
  401d30:	mov    rbx,QWORD PTR [r12+0x38]
  401d35:	lea    rsi,[r12+0x38]
  401d3a:	test   rbx,rbx
  401d3d:	je     0x401d61
  401d3f:	mov    rdi,QWORD PTR [rbp+0x0]
  401d43:	jmp    0x401d52
  401d45:	lea    rsi,[rbx+0x18]
  401d49:	mov    rbx,QWORD PTR [rbx+0x18]
  401d4d:	test   rbx,rbx
  401d50:	je     0x401d61
  401d52:	mov    rcx,QWORD PTR [rbx]
  401d55:	mov    rdx,rdi
  401d58:	call   0x406518
  401d5d:	test   eax,eax
  401d5f:	jle    0x401d45
  401d61:	mov    QWORD PTR [rbp+0x10],r12
  401d65:	mov    rax,QWORD PTR [rsi]
  401d68:	mov    QWORD PTR [rbp+0x18],rax
  401d6c:	mov    QWORD PTR [rsi],rbp
  401d6f:	add    rsp,0x20
  401d73:	pop    rbx
  401d74:	pop    rsi
  401d75:	pop    rdi
  401d76:	pop    rbp
  401d77:	pop    r12
  401d79:	ret    
  401d7a:	nop    WORD PTR [rax+rax*1+0x0]
  401d80:	push   r13
  401d82:	push   r12
  401d84:	push   rbp
  401d85:	push   rdi
  401d86:	push   rsi
  401d87:	push   rbx
  401d88:	sub    rsp,0x78
  401d8c:	mov    rbx,rcx
  401d8f:	mov    ecx,0x18
  401d94:	mov    edi,r8d
  401d97:	mov    r12,rdx
  401d9a:	mov    r13,r9
  401d9d:	call   0x404da8
  401da2:	mov    rsi,rax
  401da5:	call   0x404dd8
  401daa:	lea    r8,[rsp+0x30]
  401daf:	mov    rdx,rbx
  401db2:	mov    rcx,rsi
  401db5:	mov    QWORD PTR [rsi],rax
  401db8:	mov    QWORD PTR [rsi+0x8],0x18
  401dc0:	mov    DWORD PTR [rsi+0x10],edi
  401dc3:	call   0x401650
  401dc8:	mov    eax,DWORD PTR [rsi+0x10]
  401dcb:	mov    ebp,DWORD PTR [rsp+0x30]
  401dcf:	mov    ebx,DWORD PTR [rsp+0x34]
  401dd3:	mov    QWORD PTR [rsp+0x58],0x0
  401ddc:	mov    QWORD PTR [rsp+0x60],0x0
  401de5:	test   eax,eax
  401de7:	je     0x401f30
  401ded:	mov    DWORD PTR [rsp+0x50],0x47566172
  401df5:	mov    DWORD PTR [rsp+0x54],0x69616e74
  401dfd:	xor    ecx,ecx
  401dff:	call   0x404d30
  401e04:	mov    DWORD PTR [rsp+0x60],ebp
  401e08:	lea    rdx,[rsp+0x50]
  401e0d:	lea    rbp,[rsp+0x40]
  401e12:	mov    r8d,0x18
  401e18:	mov    rcx,rax
  401e1b:	mov    rdi,rax
  401e1e:	mov    DWORD PTR [rsp+0x64],ebx
  401e22:	call   0x404d48
  401e27:	mov    rcx,QWORD PTR [rsi]
  401e2a:	call   0x404de0
  401e2f:	test   eax,eax
  401e31:	jne    0x401f45
  401e37:	mov    rcx,QWORD PTR [rsi]
  401e3a:	call   0x404dd0
  401e3f:	mov    rbx,rax
  401e42:	mov    rax,QWORD PTR [rdi+0x8]
  401e46:	mov    r8,QWORD PTR [rbx]
  401e49:	cmp    rax,r8
  401e4c:	je     0x401e92
  401e4e:	mov    QWORD PTR [rsp+0x40],0x0
  401e57:	jae    0x401ec0
  401e59:	sub    r8,rax
  401e5c:	cmp    r8,0x7
  401e60:	jbe    0x401ef0
  401e66:	lea    rax,[rip+0x7303]        # 0x409170
  401e6d:	lea    r9,[rip+0x733c]        # 0x4091b0
  401e74:	lea    rdx,[rip+0x7185]        # 0x409000
  401e7b:	lea    rcx,[rip+0x7192]        # 0x409014
  401e82:	mov    r8d,0x1dd
  401e88:	mov    QWORD PTR [rsp+0x20],rax
  401e8d:	call   0x404f50
  401e92:	mov    rdx,QWORD PTR [rbx+0x10]
  401e96:	mov    r8,QWORD PTR [rbx+0x8]
  401e9a:	mov    rcx,rdi
  401e9d:	call   0x404d48
  401ea2:	mov    rcx,QWORD PTR [rbx+0x10]
  401ea6:	call   0x404f18
  401eab:	mov    rdx,rbx
  401eae:	mov    ecx,0x18
  401eb3:	call   0x404d98
  401eb8:	jmp    0x401e27
  401ebd:	nop    DWORD PTR [rax]
  401ec0:	lea    rax,[rip+0x7289]        # 0x409150
  401ec7:	lea    r9,[rip+0x72e2]        # 0x4091b0
  401ece:	lea    rdx,[rip+0x712b]        # 0x409000
  401ed5:	lea    rcx,[rip+0x7138]        # 0x409014
  401edc:	mov    r8d,0x1dc
  401ee2:	mov    QWORD PTR [rsp+0x20],rax
  401ee7:	call   0x404f50
  401eec:	nop    DWORD PTR [rax+0x0]
  401ef0:	mov    rdx,rbp
  401ef3:	mov    rcx,rdi
  401ef6:	call   0x404d48
  401efb:	mov    rax,QWORD PTR [rbx]
  401efe:	cmp    QWORD PTR [rdi+0x8],rax
  401f02:	je     0x401e92
  401f04:	lea    rax,[rip+0x7285]        # 0x409190
  401f0b:	lea    r9,[rip+0x729e]        # 0x4091b0
  401f12:	lea    rdx,[rip+0x70e7]        # 0x409000
  401f19:	lea    rcx,[rip+0x70f4]        # 0x409014
  401f20:	mov    r8d,0x1e0
  401f26:	mov    QWORD PTR [rsp+0x20],rax
  401f2b:	call   0x404f50
  401f30:	mov    DWORD PTR [rsp+0x50],0x72615647
  401f38:	mov    DWORD PTR [rsp+0x54],0x746e6169
  401f40:	jmp    0x401dfd
  401f45:	mov    rcx,QWORD PTR [rsi]
  401f48:	call   0x404de8
  401f4d:	mov    rdx,rsi
  401f50:	mov    ecx,0x18
  401f55:	call   0x404d98
  401f5a:	mov    r8,QWORD PTR [rdi+0x8]
  401f5e:	mov    rdx,QWORD PTR [rdi]
  401f61:	mov    r9,r13
  401f64:	mov    rcx,r12
  401f67:	call   0x404f20
  401f6c:	mov    edx,0x1
  401f71:	mov    ebx,eax
  401f73:	mov    rcx,rdi
  401f76:	call   0x404d38
  401f7b:	mov    eax,ebx
  401f7d:	add    rsp,0x78
  401f81:	pop    rbx
  401f82:	pop    rsi
  401f83:	pop    rdi
  401f84:	pop    rbp
  401f85:	pop    r12
  401f87:	pop    r13
  401f89:	ret    
  401f8a:	nop
  401f8b:	nop
  401f8c:	nop
  401f8d:	nop
  401f8e:	nop
  401f8f:	nop
  401f90:	push   rdi
  401f91:	push   rsi
  401f92:	push   rbx
  401f93:	sub    rsp,0x20
  401f97:	mov    rdi,QWORD PTR [rdx]
  401f9a:	mov    rsi,QWORD PTR [rcx]
  401f9d:	lea    rdx,[rip+0x72cc]        # 0x409270
  401fa4:	mov    rcx,rdi
  401fa7:	call   0x404d70
  401fac:	lea    rdx,[rip+0x72bd]        # 0x409270
  401fb3:	mov    ebx,eax
  401fb5:	mov    rcx,rsi
  401fb8:	call   0x404d70
  401fbd:	sub    ebx,eax
  401fbf:	mov    eax,ebx
  401fc1:	jne    0x401fd5
  401fc3:	mov    rdx,rdi
  401fc6:	mov    rcx,rsi
  401fc9:	add    rsp,0x20
  401fcd:	pop    rbx
  401fce:	pop    rsi
  401fcf:	pop    rdi
  401fd0:	jmp    0x406518
  401fd5:	add    rsp,0x20
  401fd9:	pop    rbx
  401fda:	pop    rsi
  401fdb:	pop    rdi
  401fdc:	ret    
  401fdd:	nop    DWORD PTR [rax]
  401fe0:	push   rbx
  401fe1:	sub    rsp,0x20
  401fe5:	mov    rbx,rcx
  401fe8:	mov    rcx,QWORD PTR [rcx+0x8]
  401fec:	call   0x404f18
  401ff1:	mov    rcx,QWORD PTR [rbx+0x10]
  401ff5:	call   0x404f18
  401ffa:	mov    rcx,QWORD PTR [rbx+0x28]
  401ffe:	add    rsp,0x20
  402002:	pop    rbx
  402003:	jmp    0x404ed8
  402008:	nop    DWORD PTR [rax+rax*1+0x0]
  402010:	push   rbx
  402011:	sub    rsp,0x20
  402015:	mov    edx,0x1
  40201a:	mov    rbx,rcx
  40201d:	mov    rcx,QWORD PTR [rcx]
  402020:	call   0x404d38
  402025:	mov    rdx,rbx
  402028:	mov    ecx,0x10
  40202d:	add    rsp,0x20
  402031:	pop    rbx
  402032:	jmp    0x404d98
  402037:	nop    WORD PTR [rax+rax*1+0x0]
  402040:	push   r12
  402042:	push   rbp
  402043:	push   rdi
  402044:	push   rsi
  402045:	push   rbx
  402046:	sub    rsp,0x30
  40204a:	movzx  eax,BYTE PTR [rcx]
  40204d:	mov    rsi,rcx
  402050:	mov    rbp,rdx
  402053:	test   al,al
  402055:	je     0x402114
  40205b:	mov    edi,DWORD PTR [rip+0xafcf]        # 0x40d030
  402061:	test   edi,edi
  402063:	jne    0x402102
  402069:	mov    rdx,QWORD PTR [rip+0xc544]        # 0x40e5b4
  402070:	mov    r11,QWORD PTR [rdx]
  402073:	movzx  edx,al
  402076:	test   BYTE PTR [r11+rdx*2],0x20
  40207b:	je     0x4021b0
  402081:	movzx  ebx,BYTE PTR [rcx+0x1]
  402085:	mov    r8d,0x2
  40208b:	test   bl,bl
  40208d:	jne    0x4020b5
  40208f:	jmp    0x4020fa
  402091:	movzx  r9d,bl
  402095:	test   BYTE PTR [r11+r9*2],0x28
  40209a:	je     0x402170
  4020a0:	lea    r9,[r8+0x1]
  4020a4:	movzx  ebx,BYTE PTR [rsi+r9*1-0x1]
  4020aa:	test   bl,bl
  4020ac:	je     0x402150
  4020b2:	mov    r8,r9
  4020b5:	cmp    bl,0x2d
  4020b8:	jne    0x402091
  4020ba:	cmp    BYTE PTR [rsi+r8*1],0x2d
  4020bf:	jne    0x4020a0
  4020c1:	lea    rcx,[rip+0x7288]        # 0x409350
  4020c8:	call   0x404f78
  4020cd:	mov    rbx,rax
  4020d0:	call   0x404e88
  4020d5:	mov    QWORD PTR [rsp+0x20],rsi
  4020da:	mov    edx,eax
  4020dc:	mov    r9,rbx
  4020df:	mov    r8d,0x5
  4020e5:	mov    rcx,rbp
  4020e8:	call   0x404db8
  4020ed:	mov    eax,edi
  4020ef:	add    rsp,0x30
  4020f3:	pop    rbx
  4020f4:	pop    rsi
  4020f5:	pop    rdi
  4020f6:	pop    rbp
  4020f7:	pop    r12
  4020f9:	ret    
  4020fa:	cmp    al,0x2d
  4020fc:	je     0x4021bc
  402102:	mov    edi,0x1
  402107:	mov    eax,edi
  402109:	add    rsp,0x30
  40210d:	pop    rbx
  40210e:	pop    rsi
  40210f:	pop    rdi
  402110:	pop    rbp
  402111:	pop    r12
  402113:	ret    
  402114:	lea    rcx,[rip+0x7160]        # 0x40927b
  40211b:	xor    edi,edi
  40211d:	call   0x404f78
  402122:	mov    rbx,rax
  402125:	call   0x404e88
  40212a:	mov    r9,rbx
  40212d:	mov    edx,eax
  40212f:	mov    r8d,0x5
  402135:	mov    rcx,rbp
  402138:	call   0x404db0
  40213d:	mov    eax,edi
  40213f:	add    rsp,0x30
  402143:	pop    rbx
  402144:	pop    rsi
  402145:	pop    rdi
  402146:	pop    rbp
  402147:	pop    r12
  402149:	ret    
  40214a:	nop    WORD PTR [rax+rax*1+0x0]
  402150:	cmp    BYTE PTR [rsi+r8*1-0x1],0x2d
  402156:	je     0x4021bc
  402158:	cmp    r8d,0x400
  40215f:	jle    0x402102
  402161:	lea    rcx,[rip+0x7278]        # 0x4093e0
  402168:	jmp    0x4020c8
  40216d:	nop    DWORD PTR [rax]
  402170:	lea    rcx,[rip+0x7169]        # 0x4092e0
  402177:	movsx  ebx,bl
  40217a:	call   0x404f78
  40217f:	mov    r12,rax
  402182:	call   0x404e88
  402187:	mov    DWORD PTR [rsp+0x28],ebx
  40218b:	mov    edx,eax
  40218d:	mov    QWORD PTR [rsp+0x20],rsi
  402192:	mov    r9,r12
  402195:	mov    r8d,0x5
  40219b:	mov    rcx,rbp
  40219e:	call   0x404db8
  4021a3:	mov    eax,edi
  4021a5:	add    rsp,0x30
  4021a9:	pop    rbx
  4021aa:	pop    rsi
  4021ab:	pop    rdi
  4021ac:	pop    rbp
  4021ad:	pop    r12
  4021af:	ret    
  4021b0:	lea    rcx,[rip+0x70e9]        # 0x4092a0
  4021b7:	jmp    0x4020c8
  4021bc:	lea    rcx,[rip+0x71d5]        # 0x409398
  4021c3:	jmp    0x4020c8
  4021c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021d0:	push   rbp
  4021d1:	push   rdi
  4021d2:	push   rsi
  4021d3:	push   rbx
  4021d4:	sub    rsp,0x28
  4021d8:	mov    rsi,rdx
  4021db:	mov    rdi,rcx
  4021de:	mov    ebp,r8d
  4021e1:	call   0x406510
  4021e6:	lea    rbx,[rax+0x6]
  4021ea:	mov    edx,0x2
  4021ef:	shr    rbx,0x2
  4021f3:	cmp    rbx,0x2
  4021f7:	cmovb  rbx,rdx
  4021fb:	xor    r9d,r9d
  4021fe:	cmp    ebx,0x11
  402201:	mov    edx,ebx
  402203:	ja     0x402235
  402205:	cmp    ebp,0x1
  402208:	lea    rcx,[rsi+0x1]
  40220c:	lea    r8,[rax+0x1]
  402210:	sbb    r9d,r9d
  402213:	sub    edx,0x1
  402216:	not    r9d
  402219:	add    r9d,0xff
  402220:	mov    DWORD PTR [rsi],r9d
  402223:	mov    DWORD PTR [rsi+rdx*4],0xff000000
  40222a:	mov    rdx,rdi
  40222d:	call   0x406528
  402232:	mov    r9d,ebx
  402235:	mov    eax,r9d
  402238:	add    rsp,0x28
  40223c:	pop    rbx
  40223d:	pop    rsi
  40223e:	pop    rdi
  40223f:	pop    rbp
  402240:	ret    
  402241:	nop    DWORD PTR [rax+rax*1+0x0]
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402250:	push   rbp
  402251:	push   rdi
  402252:	push   rsi
  402253:	push   rbx
  402254:	sub    rsp,0x78
  402258:	test   edx,edx
  40225a:	mov    rax,r8
  40225d:	je     0x4022df
  402263:	lea    rdi,[rsp+0x20]
  402268:	mov    esi,edx
  40226a:	mov    r8d,r9d
  40226d:	mov    rbx,rcx
  402270:	sub    esi,0x1
  402273:	mov    rcx,rax
  402276:	mov    rdx,rdi
  402279:	call   0x4021d0
  40227e:	cmp    eax,esi
  402280:	ja     0x4022df
  402282:	mov    edx,DWORD PTR [rsp+0x20]
  402286:	sub    esi,eax
  402288:	xor    r11d,r11d
  40228b:	mov    ebp,0x1
  402290:	test   eax,eax
  402292:	je     0x4022c0
  402294:	mov    ecx,r11d
  402297:	cmp    DWORD PTR [rbx+rcx*4+0x4],edx
  40229b:	jne    0x4022ed
  40229d:	mov    r9,rdi
  4022a0:	xor    r8d,r8d
  4022a3:	jmp    0x4022b7
  4022a5:	lea    r10d,[r11+r8*1]
  4022a9:	add    r9,0x4
  4022ad:	mov    ecx,DWORD PTR [r9]
  4022b0:	cmp    DWORD PTR [rbx+r10*4+0x4],ecx
  4022b5:	jne    0x4022d0
  4022b7:	add    r8d,0x1
  4022bb:	cmp    r8d,eax
  4022be:	jne    0x4022a5
  4022c0:	mov    eax,r11d
  4022c3:	add    rsp,0x78
  4022c7:	pop    rbx
  4022c8:	pop    rsi
  4022c9:	pop    rdi
  4022ca:	pop    rbp
  4022cb:	ret    
  4022cc:	nop    DWORD PTR [rax+0x0]
  4022d0:	test   r8d,r8d
  4022d3:	cmove  r8d,ebp
  4022d7:	add    r11d,r8d
  4022da:	cmp    r11d,esi
  4022dd:	jbe    0x402290
  4022df:	mov    eax,0xffffffff
  4022e4:	add    rsp,0x78
  4022e8:	pop    rbx
  4022e9:	pop    rsi
  4022ea:	pop    rdi
  4022eb:	pop    rbp
  4022ec:	ret    
  4022ed:	mov    r8d,0x1
  4022f3:	jmp    0x4022d7
  4022f5:	nop
  4022f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402300:	push   rdi
  402301:	push   rsi
  402302:	push   rbx
  402303:	sub    rsp,0x70
  402307:	lea    rdi,[rsp+0x20]
  40230c:	mov    rsi,rcx
  40230f:	mov    DWORD PTR [rsp+0xa0],r8d
  402317:	mov    rcx,rdx
  40231a:	xor    r8d,r8d
  40231d:	mov    rdx,rdi
  402320:	call   0x4021d0
  402325:	lea    rdx,[rsp+0xa0]
  40232d:	mov    ebx,eax
  40232f:	mov    rcx,rsi
  402332:	mov    r8d,0x4
  402338:	call   0x404d48
  40233d:	lea    r8d,[rbx*4+0x0]
  402345:	mov    rdx,rdi
  402348:	mov    rcx,rsi
  40234b:	call   0x404d48
  402350:	nop
  402351:	add    rsp,0x70
  402355:	pop    rbx
  402356:	pop    rsi
  402357:	pop    rdi
  402358:	ret    
  402359:	nop    DWORD PTR [rax+0x0]
  402360:	push   rbp
  402361:	push   rdi
  402362:	push   rsi
  402363:	push   rbx
  402364:	sub    rsp,0x48
  402368:	test   rdx,rdx
  40236b:	mov    rbx,rcx
  40236e:	mov    rbp,r9
  402371:	je     0x4023d0
  402373:	lea    rdi,[rip+0x7090]        # 0x40940a
  40237a:	mov    ecx,0x9
  40237f:	mov    rsi,rdx
  402382:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402384:	je     0x4023c3
  402386:	lea    rdi,[rip+0x7086]        # 0x409413
  40238d:	mov    ecx,0x5
  402392:	mov    rsi,rdx
  402395:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402397:	jne    0x402420
  40239d:	mov    BYTE PTR [rbx+0x14],0x74
  4023a1:	mov    eax,DWORD PTR [rbx+0x10]
  4023a4:	test   eax,eax
  4023a6:	je     0x4023f3
  4023a8:	mov    rcx,r8
  4023ab:	call   0x404d58
  4023b0:	mov    QWORD PTR [rbx+0x18],rax
  4023b4:	xor    ecx,ecx
  4023b6:	add    rsp,0x48
  4023ba:	pop    rbx
  4023bb:	pop    rsi
  4023bc:	pop    rdi
  4023bd:	pop    rbp
  4023be:	jmp    0x404d30
  4023c3:	mov    BYTE PTR [rbx+0x14],0x6d
  4023c7:	jmp    0x4023a1
  4023c9:	nop    DWORD PTR [rax+0x0]
  4023d0:	test   r8,r8
  4023d3:	je     0x4023b4
  4023d5:	call   0x404e88
  4023da:	lea    r9,[rip+0x7087]        # 0x409468
  4023e1:	mov    r8d,0x5
  4023e7:	mov    edx,eax
  4023e9:	mov    rcx,rbp
  4023ec:	call   0x404db0
  4023f1:	jmp    0x40240f
  4023f3:	call   0x404e88
  4023f8:	lea    r9,[rip+0x7039]        # 0x409438
  4023ff:	mov    r8d,0x5
  402405:	mov    edx,eax
  402407:	mov    rcx,rbp
  40240a:	call   0x404db0
  40240f:	xor    eax,eax
  402411:	add    rsp,0x48
  402415:	pop    rbx
  402416:	pop    rsi
  402417:	pop    rdi
  402418:	pop    rbp
  402419:	ret    
  40241a:	nop    WORD PTR [rax+rax*1+0x0]
  402420:	mov    QWORD PTR [rsp+0x38],rdx
  402425:	call   0x404e88
  40242a:	mov    rdx,QWORD PTR [rsp+0x38]
  40242f:	lea    r9,[rip+0x6fe2]        # 0x409418
  402436:	mov    r8d,0x5
  40243c:	mov    rcx,rbp
  40243f:	mov    QWORD PTR [rsp+0x20],rdx
  402444:	mov    edx,eax
  402446:	call   0x404db8
  40244b:	jmp    0x40240f
  40244d:	nop    DWORD PTR [rax]
  402450:	push   rdi
  402451:	push   rsi
  402452:	push   rbx
  402453:	sub    rsp,0x30
  402457:	mov    rbx,rcx
  40245a:	mov    rsi,rdx
  40245d:	mov    rdi,r8
  402460:	call   0x406518
  402465:	test   eax,eax
  402467:	mov    r9d,0x1
  40246d:	jne    0x402480
  40246f:	mov    eax,r9d
  402472:	add    rsp,0x30
  402476:	pop    rbx
  402477:	pop    rsi
  402478:	pop    rdi
  402479:	ret    
  40247a:	nop    WORD PTR [rax+rax*1+0x0]
  402480:	mov    rdx,rbx
  402483:	mov    rcx,rdi
  402486:	call   0x404f00
  40248b:	test   rax,rax
  40248e:	je     0x4024c0
  402490:	mov    rcx,QWORD PTR [rax+0x18]
  402494:	xor    r9d,r9d
  402497:	test   rcx,rcx
  40249a:	je     0x40246f
  40249c:	mov    r8,rdi
  40249f:	mov    rdx,rsi
  4024a2:	call   0x402450
  4024a7:	xor    r9d,r9d
  4024aa:	test   eax,eax
  4024ac:	setne  r9b
  4024b0:	mov    eax,r9d
  4024b3:	add    rsp,0x30
  4024b7:	pop    rbx
  4024b8:	pop    rsi
  4024b9:	pop    rdi
  4024ba:	ret    
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4024c0:	lea    rax,[rip+0x6ffb]        # 0x4094c2
  4024c7:	lea    r9,[rip+0x8153]        # 0x40a621
  4024ce:	lea    rdx,[rip+0x6fcd]        # 0x4094a2
  4024d5:	lea    rcx,[rip+0x6fdd]        # 0x4094b9
  4024dc:	mov    r8d,0x44f
  4024e2:	mov    QWORD PTR [rsp+0x20],rax
  4024e7:	call   0x404f50
  4024ec:	nop
  4024ed:	nop    DWORD PTR [rax]
  4024f0:	push   r13
  4024f2:	push   r12
  4024f4:	push   rbp
  4024f5:	push   rdi
  4024f6:	push   rsi
  4024f7:	push   rbx
  4024f8:	sub    rsp,0x38
  4024fc:	test   r8d,r8d
  4024ff:	mov    rsi,rcx
  402502:	mov    rbx,rdx
  402505:	mov    ebp,r8d
  402508:	mov    r12,r9
  40250b:	je     0x402570
  40250d:	mov    rdi,QWORD PTR [rcx+0x10]
  402511:	lea    r13,[rip+0x6fbd]        # 0x4094d5
  402518:	mov    rcx,rdi
  40251b:	call   0x404f00
  402520:	test   rax,rax
  402523:	je     0x4025e3
  402529:	lea    rcx,[rip+0x6fb0]        # 0x4094e0
  402530:	call   0x404f78
  402535:	mov    rsi,rax
  402538:	call   0x404e88
  40253d:	mov    QWORD PTR [rsp+0x28],rbx
  402542:	mov    edx,eax
  402544:	mov    QWORD PTR [rsp+0x20],r13
  402549:	mov    r9,rsi
  40254c:	mov    r8d,0x5
  402552:	mov    rcx,r12
  402555:	call   0x404db8
  40255a:	nop
  40255b:	add    rsp,0x38
  40255f:	pop    rbx
  402560:	pop    rsi
  402561:	pop    rdi
  402562:	pop    rbp
  402563:	pop    r12
  402565:	pop    r13
  402567:	ret    
  402568:	nop    DWORD PTR [rax+rax*1+0x0]
  402570:	mov    rdi,QWORD PTR [rcx+0x18]
  402574:	lea    r13,[rip+0x6f55]        # 0x4094d0
  40257b:	mov    rcx,rdi
  40257e:	call   0x404f00
  402583:	test   rax,rax
  402586:	jne    0x402529
  402588:	lea    r13,[rsi+0x30]
  40258c:	mov    ecx,0x10
  402591:	call   0x404da8
  402596:	xor    ecx,ecx
  402598:	mov    r12,rax
  40259b:	call   0x404d30
  4025a0:	mov    rcx,rbx
  4025a3:	mov    QWORD PTR [r12],rax
  4025a7:	mov    DWORD PTR [r12+0x8],ebp
  4025ac:	mov    QWORD PTR [rsi+0x50],r12
  4025b0:	call   0x404d58
  4025b5:	mov    rcx,QWORD PTR [r13+0x0]
  4025b9:	mov    rdx,rax
  4025bc:	mov    rbx,rax
  4025bf:	call   0x404d88
  4025c4:	mov    QWORD PTR [r13+0x0],rax
  4025c8:	mov    r8,QWORD PTR [rsi+0x50]
  4025cc:	mov    rdx,rbx
  4025cf:	mov    rcx,rdi
  4025d2:	add    rsp,0x38
  4025d6:	pop    rbx
  4025d7:	pop    rsi
  4025d8:	pop    rdi
  4025d9:	pop    rbp
  4025da:	pop    r12
  4025dc:	pop    r13
  4025de:	jmp    0x404f08
  4025e3:	lea    r13,[rsi+0x28]
  4025e7:	jmp    0x40258c
  4025e9:	nop    DWORD PTR [rax+0x0]
  4025f0:	push   rbx
  4025f1:	sub    rsp,0x20
  4025f5:	mov    rbx,rcx
  4025f8:	mov    rcx,QWORD PTR [rcx+0x8]
  4025fc:	test   rcx,rcx
  4025ff:	je     0x402606
  402601:	call   0x404c48
  402606:	mov    rcx,QWORD PTR [rbx+0x18]
  40260a:	call   0x404f18
  40260f:	mov    rcx,QWORD PTR [rbx+0x20]
  402613:	test   rcx,rcx
  402616:	je     0x402622
  402618:	mov    edx,0x1
  40261d:	call   0x404d38
  402622:	mov    rcx,QWORD PTR [rbx+0x28]
  402626:	test   rcx,rcx
  402629:	je     0x402630
  40262b:	call   0x404c20
  402630:	mov    rcx,QWORD PTR [rbx+0x30]
  402634:	test   rcx,rcx
  402637:	je     0x402643
  402639:	mov    edx,0x1
  40263e:	call   0x404d38
  402643:	mov    rcx,QWORD PTR [rbx+0x40]
  402647:	test   rcx,rcx
  40264a:	je     0x402651
  40264c:	call   0x404c20
  402651:	mov    rcx,QWORD PTR [rbx+0x48]
  402655:	test   rcx,rcx
  402658:	je     0x40265f
  40265a:	call   0x404c20
  40265f:	mov    rcx,QWORD PTR [rbx+0x60]
  402663:	test   rcx,rcx
  402666:	je     0x40266d
  402668:	call   0x404c20
  40266d:	mov    rdx,rbx
  402670:	mov    ecx,0x70
  402675:	add    rsp,0x20
  402679:	pop    rbx
  40267a:	jmp    0x404d98
  40267f:	nop
  402680:	push   rbx
  402681:	sub    rsp,0x20
  402685:	xor    edx,edx
  402687:	mov    rbx,rcx
  40268a:	xor    ecx,ecx
  40268c:	call   0x401c50
  402691:	lea    rdx,[rip+0x6e67]        # 0x4094ff
  402698:	mov    QWORD PTR [rbx],rax
  40269b:	mov    rcx,rax
  40269e:	call   0x401ad0
  4026a3:	mov    QWORD PTR [rbx+0x8],rax
  4026a7:	add    rsp,0x20
  4026ab:	pop    rbx
  4026ac:	ret    
  4026ad:	nop    DWORD PTR [rax]
  4026b0:	push   rbp
  4026b1:	push   rdi
  4026b2:	push   rsi
  4026b3:	push   rbx
  4026b4:	sub    rsp,0x48
  4026b8:	mov    rax,QWORD PTR [r8]
  4026bb:	mov    rbp,rcx
  4026be:	lea    rcx,[rsp+0x28]
  4026c3:	mov    rsi,r8
  4026c6:	mov    rbx,rdx
  4026c9:	lea    rdi,[rsp+0x20]
  4026ce:	mov    QWORD PTR [rsp+0x20],rax
  4026d3:	call   0x402680
  4026d8:	mov    rcx,QWORD PTR [rsi+0x8]
  4026dc:	mov    rdx,rbp
  4026df:	mov    DWORD PTR [rsp+0x38],0x0
  4026e7:	call   0x401ad0
  4026ec:	mov    rdx,QWORD PTR [rsi+0x10]
  4026f0:	mov    rcx,rax
  4026f3:	mov    rbp,rax
  4026f6:	call   0x401cb0
  4026fb:	mov    rdx,QWORD PTR [rsp+0x28]
  402700:	mov    rcx,rbp
  402703:	call   0x401bf0
  402708:	mov    rcx,QWORD PTR [rbx+0x28]
  40270c:	lea    rdx,[rip+0x221d]        # 0x404930
  402713:	mov    r8,rdi
  402716:	call   0x404f10
  40271b:	mov    r8,QWORD PTR [rbx+0x8]
  40271f:	test   r8,r8
  402722:	je     0x402735
  402724:	mov    rcx,QWORD PTR [rsp+0x28]
  402729:	lea    rdx,[rip+0x6dd0]        # 0x409500
  402730:	call   0x401bc0
  402735:	mov    r8,QWORD PTR [rbx+0x18]
  402739:	test   r8,r8
  40273c:	je     0x40274f
  40273e:	mov    rcx,QWORD PTR [rsp+0x28]
  402743:	lea    rdx,[rip+0x6dbc]        # 0x409506
  40274a:	call   0x401bc0
  40274f:	mov    r8,QWORD PTR [rbx+0x20]
  402753:	test   r8,r8
  402756:	je     0x402769
  402758:	mov    rcx,QWORD PTR [rsp+0x28]
  40275d:	lea    rdx,[rip+0x6dab]        # 0x40950f
  402764:	call   0x401bc0
  402769:	mov    eax,DWORD PTR [rsp+0x38]
  40276d:	test   eax,eax
  40276f:	je     0x402787
  402771:	mov    r8,QWORD PTR [rbx+0x10]
  402775:	mov    rcx,QWORD PTR [rsp+0x28]
  40277a:	lea    rdx,[rip+0x6d97]        # 0x409518
  402781:	call   0x401bc0
  402786:	nop
  402787:	add    rsp,0x48
  40278b:	pop    rbx
  40278c:	pop    rsi
  40278d:	pop    rdi
  40278e:	pop    rbp
  40278f:	ret    
  402790:	push   rdi
  402791:	push   rsi
  402792:	push   rbx
  402793:	sub    rsp,0x20
  402797:	mov    rax,QWORD PTR [r9+0x58]
  40279b:	mov    rbx,QWORD PTR [rsp+0x60]
  4027a0:	test   rax,rax
  4027a3:	je     0x4027b4
  4027a5:	mov    rcx,rax
  4027a8:	add    rsp,0x20
  4027ac:	pop    rbx
  4027ad:	pop    rsi
  4027ae:	pop    rdi
  4027af:	jmp    0x404d48
  4027b4:	test   r8,r8
  4027b7:	je     0x4027f5
  4027b9:	mov    rax,QWORD PTR [rip+0xbdf4]        # 0x40e5b4
  4027c0:	mov    r10,QWORD PTR [rax]
  4027c3:	movzx  eax,BYTE PTR [rdx]
  4027c6:	test   BYTE PTR [r10+rax*2+0x1],0x1
  4027cc:	je     0x402800
  4027ce:	lea    rax,[rdx+0x1]
  4027d2:	add    rdx,r8
  4027d5:	jmp    0x4027f0
  4027d7:	nop    WORD PTR [rax+rax*1+0x0]
  4027e0:	movzx  r9d,BYTE PTR [rax]
  4027e4:	add    rax,0x1
  4027e8:	test   BYTE PTR [r10+r9*2+0x1],0x1
  4027ee:	je     0x402800
  4027f0:	cmp    rax,rdx
  4027f3:	jne    0x4027e0
  4027f5:	add    rsp,0x20
  4027f9:	pop    rbx
  4027fa:	pop    rsi
  4027fb:	pop    rdi
  4027fc:	ret    
  4027fd:	nop    DWORD PTR [rax]
  402800:	call   0x404e70
  402805:	lea    rcx,[rip+0x6d1c]        # 0x409528
  40280c:	mov    rdi,rax
  40280f:	call   0x404f78
  402814:	mov    rsi,rax
  402817:	call   0x404e88
  40281c:	mov    r9,rsi
  40281f:	mov    edx,eax
  402821:	mov    r8d,0x5
  402827:	mov    rcx,rbx
  40282a:	mov    QWORD PTR [rsp+0x60],rdi
  40282f:	add    rsp,0x20
  402833:	pop    rbx
  402834:	pop    rsi
  402835:	pop    rdi
  402836:	jmp    0x404db8
  40283b:	nop    DWORD PTR [rax+rax*1+0x0]
  402840:	push   rbp
  402841:	push   rdi
  402842:	push   rsi
  402843:	push   rbx
  402844:	sub    rsp,0xb8
  40284b:	mov    rbx,rcx
  40284e:	mov    rdi,rdx
  402851:	call   0x404ce0
  402856:	cmp    eax,0x6d
  402859:	je     0x402892
  40285b:	cmp    eax,0x73
  40285e:	je     0x4028f0
  402864:	cmp    eax,0x61
  402867:	je     0x402892
  402869:	lea    r9,[rip+0x7dc0]        # 0x40a630
  402870:	lea    rdx,[rip+0x6c2b]        # 0x4094a2
  402877:	lea    rcx,[rip+0x6c3b]        # 0x4094b9
  40287e:	mov    QWORD PTR [rsp+0x20],0x0
  402887:	mov    r8d,0x121
  40288d:	call   0x404f50
  402892:	lea    rbp,[rsp+0x30]
  402897:	mov    rdx,rbx
  40289a:	mov    esi,0x1
  40289f:	mov    rcx,rbp
  4028a2:	call   0x404cb8
  4028a7:	nop    WORD PTR [rax+rax*1+0x0]
  4028b0:	mov    rcx,rbp
  4028b3:	call   0x404cb0
  4028b8:	test   rax,rax
  4028bb:	mov    rbx,rax
  4028be:	je     0x4028d9
  4028c0:	mov    rdx,rdi
  4028c3:	mov    rcx,rbx
  4028c6:	call   0x402840
  4028cb:	mov    rcx,rbx
  4028ce:	mov    esi,eax
  4028d0:	call   0x404c20
  4028d5:	test   esi,esi
  4028d7:	jne    0x4028b0
  4028d9:	mov    eax,esi
  4028db:	add    rsp,0xb8
  4028e2:	pop    rbx
  4028e3:	pop    rsi
  4028e4:	pop    rdi
  4028e5:	pop    rbp
  4028e6:	ret    
  4028e7:	nop    WORD PTR [rax+rax*1+0x0]
  4028f0:	xor    edx,edx
  4028f2:	mov    rcx,rbx
  4028f5:	call   0x404cc0
  4028fa:	mov    rdx,QWORD PTR [rdi+0x8]
  4028fe:	mov    rcx,QWORD PTR [rdi]
  402901:	xor    r9d,r9d
  402904:	mov    r8,rax
  402907:	shr    rdx,0x2
  40290b:	call   0x402250
  402910:	cmp    eax,0xffffffff
  402913:	setne  al
  402916:	movzx  eax,al
  402919:	add    rsp,0xb8
  402920:	pop    rbx
  402921:	pop    rsi
  402922:	pop    rdi
  402923:	pop    rbp
  402924:	ret    
  402925:	nop
  402926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402930:	push   rdi
  402931:	push   rsi
  402932:	push   rbx
  402933:	sub    rsp,0x30
  402937:	mov    rax,QWORD PTR [rcx+0x28]
  40293b:	test   rax,rax
  40293e:	je     0x4029a8
  402940:	mov    rbx,rcx
  402943:	mov    rsi,rdx
  402946:	mov    ecx,DWORD PTR [rcx+0x58]
  402949:	lea    rdx,[rip+0x6c01]        # 0x409551
  402950:	mov    rdi,rdx
  402953:	mov    rdx,QWORD PTR [rbx+0x40]
  402957:	test   ecx,ecx
  402959:	lea    rcx,[rip+0x6be8]        # 0x409548
  402960:	cmovne rdi,rcx
  402964:	test   rdx,rdx
  402967:	je     0x4029b0
  402969:	mov    rcx,rax
  40296c:	call   0x404cd8
  402971:	test   eax,eax
  402973:	js     0x402986
  402975:	mov    rdx,QWORD PTR [rbx+0x48]
  402979:	mov    rcx,QWORD PTR [rbx+0x28]
  40297d:	call   0x404cd8
  402982:	test   eax,eax
  402984:	jle    0x4029a8
  402986:	call   0x404e88
  40298b:	lea    r9,[rip+0x6bce]        # 0x409560
  402992:	mov    QWORD PTR [rsp+0x20],rdi
  402997:	mov    r8d,0x5
  40299d:	mov    edx,eax
  40299f:	mov    rcx,rsi
  4029a2:	call   0x404db8
  4029a7:	nop
  4029a8:	add    rsp,0x30
  4029ac:	pop    rbx
  4029ad:	pop    rsi
  4029ae:	pop    rdi
  4029af:	ret    
  4029b0:	mov    rdx,QWORD PTR [rbx+0x30]
  4029b4:	cmp    QWORD PTR [rdx+0x8],0x0
  4029b9:	je     0x4029a8
  4029bb:	mov    rcx,rax
  4029be:	call   0x402840
  4029c3:	test   eax,eax
  4029c5:	jne    0x4029a8
  4029c7:	mov    edx,DWORD PTR [rbx+0x38]
  4029ca:	test   edx,edx
  4029cc:	jne    0x402a23
  4029ce:	mov    eax,DWORD PTR [rbx+0x3c]
  4029d1:	test   eax,eax
  4029d3:	jne    0x402a00
  4029d5:	call   0x404e88
  4029da:	lea    r9,[rip+0x6c27]        # 0x409608
  4029e1:	mov    QWORD PTR [rsp+0x20],rdi
  4029e6:	mov    r8d,0x5
  4029ec:	mov    edx,eax
  4029ee:	mov    rcx,rsi
  4029f1:	call   0x404db8
  4029f6:	jmp    0x4029a8
  4029f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402a00:	call   0x404e88
  402a05:	lea    r9,[rip+0x6bc4]        # 0x4095d0
  402a0c:	mov    QWORD PTR [rsp+0x20],rdi
  402a11:	mov    r8d,0x5
  402a17:	mov    edx,eax
  402a19:	mov    rcx,rsi
  402a1c:	call   0x404db8
  402a21:	jmp    0x4029a8
  402a23:	call   0x404e88
  402a28:	lea    r9,[rip+0x6b61]        # 0x409590
  402a2f:	mov    QWORD PTR [rsp+0x20],rdi
  402a34:	mov    r8d,0x5
  402a3a:	mov    edx,eax
  402a3c:	mov    rcx,rsi
  402a3f:	call   0x404db8
  402a44:	jmp    0x4029a8
  402a49:	nop    DWORD PTR [rax+0x0]
  402a50:	push   rdi
  402a51:	push   rsi
  402a52:	push   rbx
  402a53:	sub    rsp,0x30
  402a57:	mov    rax,QWORD PTR [rdx]
  402a5a:	xor    r9d,r9d
  402a5d:	mov    rbx,rcx
  402a60:	mov    rsi,r8
  402a63:	mov    QWORD PTR [rcx+0x20],rax
  402a67:	mov    QWORD PTR [rdx],0x0
  402a6e:	mov    rax,QWORD PTR [rcx+0x20]
  402a72:	mov    rcx,QWORD PTR [rcx+0x8]
  402a76:	mov    QWORD PTR [rsp+0x20],r8
  402a7b:	xor    r8d,r8d
  402a7e:	mov    rdx,QWORD PTR [rax]
  402a81:	call   0x404c90
  402a86:	test   rax,rax
  402a89:	mov    QWORD PTR [rbx+0x28],rax
  402a8d:	je     0x402aa1
  402a8f:	mov    rdx,rsi
  402a92:	mov    rcx,rbx
  402a95:	add    rsp,0x30
  402a99:	pop    rbx
  402a9a:	pop    rsi
  402a9b:	pop    rdi
  402a9c:	jmp    0x402930
  402aa1:	mov    rcx,QWORD PTR [rbx+0x8]
  402aa5:	call   0x404c60
  402aaa:	lea    rdx,[rip+0x6b7f]        # 0x409630
  402ab1:	mov    rdi,rax
  402ab4:	mov    rcx,rsi
  402ab7:	mov    r8,rax
  402aba:	call   0x404e18
  402abf:	mov    rcx,rdi
  402ac2:	call   0x404f18
  402ac7:	jmp    0x402a8f
  402ac9:	nop    DWORD PTR [rax+0x0]
  402ad0:	push   rbp
  402ad1:	push   rdi
  402ad2:	push   rsi
  402ad3:	push   rbx
  402ad4:	sub    rsp,0x38
  402ad8:	lea    rdi,[rip+0x6b80]        # 0x40965f
  402adf:	mov    ecx,0xb
  402ae4:	mov    rsi,rdx
  402ae7:	mov    rbx,r8
  402aea:	mov    rbp,r9
  402aed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402aef:	je     0x402c50
  402af5:	lea    rdi,[rip+0x69d4]        # 0x4094d0
  402afc:	mov    ecx,0x5
  402b01:	mov    rsi,rdx
  402b04:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402b06:	je     0x402b1b
  402b08:	lea    rdi,[rip+0x69c6]        # 0x4094d5
  402b0f:	mov    ecx,0x6
  402b14:	mov    rsi,rdx
  402b17:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402b19:	jne    0x402b90
  402b1b:	mov    rax,QWORD PTR [rbx+0x50]
  402b1f:	mov    QWORD PTR [rbx+0x50],0x0
  402b27:	mov    rdx,QWORD PTR [rax]
  402b2a:	cmp    QWORD PTR [rdx+0x8],0x0
  402b2f:	jne    0x402b69
  402b31:	mov    ecx,DWORD PTR [rax+0x8]
  402b34:	lea    rdi,[rip+0x6995]        # 0x4094d0
  402b3b:	lea    rax,[rip+0x6993]        # 0x4094d5
  402b42:	test   ecx,ecx
  402b44:	cmovne rdi,rax
  402b48:	call   0x404e88
  402b4d:	lea    r9,[rip+0x6b1c]        # 0x409670
  402b54:	mov    QWORD PTR [rsp+0x20],rdi
  402b59:	mov    r8d,0x5
  402b5f:	mov    edx,eax
  402b61:	mov    rcx,rbp
  402b64:	call   0x404db8
  402b69:	mov    rcx,QWORD PTR [rbx+0x58]
  402b6d:	test   rcx,rcx
  402b70:	je     0x402b84
  402b72:	mov    edx,0x1
  402b77:	call   0x404d38
  402b7c:	mov    QWORD PTR [rbx+0x58],0x0
  402b84:	add    rsp,0x38
  402b88:	pop    rbx
  402b89:	pop    rsi
  402b8a:	pop    rdi
  402b8b:	pop    rbp
  402b8c:	ret    
  402b8d:	nop    DWORD PTR [rax]
  402b90:	lea    rdi,[rip+0x6b00]        # 0x409697
  402b97:	mov    ecx,0x7
  402b9c:	mov    rsi,rdx
  402b9f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ba1:	je     0x402c70
  402ba7:	lea    rdi,[rip+0x699a]        # 0x409548
  402bae:	mov    ecx,0x9
  402bb3:	mov    rsi,rdx
  402bb6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402bb8:	je     0x402c95
  402bbe:	lea    rdi,[rip+0x6ad9]        # 0x40969e
  402bc5:	mov    ecx,0x4
  402bca:	mov    rsi,rdx
  402bcd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402bcf:	je     0x402cb2
  402bd5:	lea    rdi,[rip+0x6975]        # 0x409551
  402bdc:	mov    ecx,0x8
  402be1:	mov    rsi,rdx
  402be4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402be6:	je     0x402c80
  402bec:	lea    rdi,[rip+0x6adc]        # 0x4096cf
  402bf3:	mov    ecx,0x8
  402bf8:	mov    rsi,rdx
  402bfb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402bfd:	je     0x402cf0
  402c03:	lea    rdi,[rip+0x6afb]        # 0x409705
  402c0a:	mov    ecx,0x8
  402c0f:	mov    rsi,rdx
  402c12:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402c14:	jne    0x402b69
  402c1a:	mov    rax,QWORD PTR [r8+0x48]
  402c1e:	mov    eax,DWORD PTR [rax+0x54]
  402c21:	test   eax,eax
  402c23:	jne    0x402b69
  402c29:	call   0x404e88
  402c2e:	lea    r9,[rip+0x6adb]        # 0x409710
  402c35:	mov    r8d,0x5
  402c3b:	mov    edx,eax
  402c3d:	mov    rcx,rbp
  402c40:	call   0x404db8
  402c45:	jmp    0x402b69
  402c4a:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	mov    rcx,QWORD PTR [r8+0x38]
  402c54:	call   0x404f18
  402c59:	mov    QWORD PTR [rbx+0x38],0x0
  402c61:	jmp    0x402b69
  402c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c70:	mov    QWORD PTR [r8+0x40],0x0
  402c78:	jmp    0x402b69
  402c7d:	nop    DWORD PTR [rax]
  402c80:	mov    rcx,QWORD PTR [r8+0x48]
  402c84:	lea    rdx,[r8+0x58]
  402c88:	mov    r8,r9
  402c8b:	call   0x402a50
  402c90:	jmp    0x402b69
  402c95:	mov    rcx,QWORD PTR [r8+0x48]
  402c99:	lea    rdx,[r8+0x58]
  402c9d:	mov    r8,r9
  402ca0:	call   0x402a50
  402ca5:	mov    QWORD PTR [rbx+0x48],0x0
  402cad:	jmp    0x402b69
  402cb2:	mov    rax,QWORD PTR [r8+0x48]
  402cb6:	mov    QWORD PTR [r8+0x48],0x0
  402cbe:	cmp    QWORD PTR [rax+0x28],0x0
  402cc3:	jne    0x402b69
  402cc9:	call   0x404e88
  402cce:	lea    r9,[rip+0x69d3]        # 0x4096a8
  402cd5:	mov    r8d,0x5
  402cdb:	mov    edx,eax
  402cdd:	mov    rcx,rbp
  402ce0:	call   0x404db0
  402ce5:	jmp    0x402b69
  402cea:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	mov    rcx,QWORD PTR [r8+0x48]
  402cf4:	mov    edx,DWORD PTR [rcx+0x50]
  402cf7:	test   edx,edx
  402cf9:	je     0x402d08
  402cfb:	mov    rdx,r9
  402cfe:	call   0x402930
  402d03:	jmp    0x402b69
  402d08:	call   0x404e88
  402d0d:	lea    r9,[rip+0x69c4]        # 0x4096d8
  402d14:	mov    r8d,0x5
  402d1a:	mov    edx,eax
  402d1c:	mov    rcx,rbp
  402d1f:	call   0x404db8
  402d24:	jmp    0x402b69
  402d29:	nop    DWORD PTR [rax+0x0]
  402d30:	push   rdi
  402d31:	push   rsi
  402d32:	push   rbx
  402d33:	sub    rsp,0x20
  402d37:	xor    r9d,r9d
  402d3a:	mov    rdi,rdx
  402d3d:	mov    rdx,QWORD PTR [rdx]
  402d40:	mov    rbx,rcx
  402d43:	mov    rcx,QWORD PTR [rcx]
  402d46:	mov    rsi,r8
  402d49:	shr    rdx,0x2
  402d4d:	call   0x402250
  402d52:	cmp    eax,0xffffffff
  402d55:	mov    r9d,0x1
  402d5b:	je     0x402d70
  402d5d:	mov    eax,r9d
  402d60:	add    rsp,0x20
  402d64:	pop    rbx
  402d65:	pop    rsi
  402d66:	pop    rdi
  402d67:	ret    
  402d68:	nop    DWORD PTR [rax+rax*1+0x0]
  402d70:	mov    rdx,QWORD PTR [rdi]
  402d73:	mov    rcx,QWORD PTR [rbx]
  402d76:	mov    r8,rsi
  402d79:	shr    rdx,0x2
  402d7d:	call   0x402250
  402d82:	xor    r9d,r9d
  402d85:	cmp    eax,0xffffffff
  402d88:	setne  r9b
  402d8c:	mov    eax,r9d
  402d8f:	add    rsp,0x20
  402d93:	pop    rbx
  402d94:	pop    rsi
  402d95:	pop    rdi
  402d96:	ret    
  402d97:	nop    WORD PTR [rax+rax*1+0x0]
  402da0:	push   r15
  402da2:	push   r14
  402da4:	push   r13
  402da6:	push   r12
  402da8:	push   rbp
  402da9:	push   rdi
  402daa:	push   rsi
  402dab:	push   rbx
  402dac:	sub    rsp,0x198
  402db3:	lea    rdi,[rip+0x68a5]        # 0x40965f
  402dba:	mov    rbx,rdx
  402dbd:	mov    r12,r8
  402dc0:	mov    r13,r9
  402dc3:	call   0x404e68
  402dc8:	mov    rax,QWORD PTR [rax+0x8]
  402dcc:	mov    ecx,0xb
  402dd1:	test   rax,rax
  402dd4:	je     0x4034b2
  402dda:	mov    rbp,QWORD PTR [rax]
  402ddd:	test   rbp,rbp
  402de0:	je     0x4034b2
  402de6:	mov    rsi,rbp
  402de9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402deb:	jne    0x402e81
  402df1:	lea    rdi,[rip+0x689f]        # 0x409697
  402df8:	mov    ecx,0x7
  402dfd:	mov    rsi,rbx
  402e00:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e02:	je     0x4034f3
  402e08:	lea    rdi,[rip+0x66c1]        # 0x4094d0
  402e0f:	mov    ecx,0x5
  402e14:	mov    rsi,rbx
  402e17:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e19:	je     0x403650
  402e1f:	lea    rdi,[rip+0x66af]        # 0x4094d5
  402e26:	mov    ecx,0x6
  402e2b:	mov    rsi,rbx
  402e2e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e30:	je     0x403200
  402e36:	lea    rcx,[rip+0x71a3]        # 0x409fe0
  402e3d:	call   0x404f78
  402e42:	mov    rsi,rax
  402e45:	call   0x404e88
  402e4a:	mov    rcx,QWORD PTR [rsp+0x208]
  402e52:	mov    edx,eax
  402e54:	mov    QWORD PTR [rsp+0x28],rbp
  402e59:	mov    QWORD PTR [rsp+0x20],rbx
  402e5e:	mov    r9,rsi
  402e61:	mov    r8d,0x3
  402e67:	call   0x404db8
  402e6c:	nop
  402e6d:	add    rsp,0x198
  402e74:	pop    rbx
  402e75:	pop    rsi
  402e76:	pop    rdi
  402e77:	pop    rbp
  402e78:	pop    r12
  402e7a:	pop    r13
  402e7c:	pop    r14
  402e7e:	pop    r15
  402e80:	ret    
  402e81:	lea    rax,[rip+0x680f]        # 0x409697
  402e88:	mov    ecx,0x7
  402e8d:	mov    rsi,rbp
  402e90:	mov    rdi,rax
  402e93:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e95:	mov    ecx,0x4
  402e9a:	lea    rdi,[rip+0x67fd]        # 0x40969e
  402ea1:	jne    0x403010
  402ea7:	mov    rsi,rbx
  402eaa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402eac:	je     0x403270
  402eb2:	lea    rdi,[rip+0x6cc1]        # 0x409b7a
  402eb9:	mov    ecx,0x6
  402ebe:	mov    rsi,rbx
  402ec1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ec3:	je     0x403a00
  402ec9:	lea    rdi,[rip+0x6678]        # 0x409548
  402ed0:	mov    ecx,0x9
  402ed5:	mov    rsi,rbx
  402ed8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402eda:	jne    0x402e36
  402ee0:	lea    rax,[rsp+0xd0]
  402ee8:	mov    r9,QWORD PTR [rsp+0x208]
  402ef0:	mov    DWORD PTR [rsp+0x68],0x0
  402ef8:	mov    DWORD PTR [rsp+0x50],0x10001
  402f00:	mov    DWORD PTR [rsp+0x38],0x10001
  402f08:	mov    r8,r13
  402f0b:	mov    QWORD PTR [rsp+0x60],rax
  402f10:	lea    rax,[rip+0x6c8d]        # 0x409ba4
  402f17:	mov    DWORD PTR [rsp+0x20],0x1
  402f1f:	mov    rdx,r12
  402f22:	mov    rcx,rbx
  402f25:	mov    QWORD PTR [rsp+0x58],rax
  402f2a:	lea    rax,[rsp+0xc8]
  402f32:	mov    QWORD PTR [rsp+0x48],rax
  402f37:	lea    rax,[rip+0x6c6e]        # 0x409bac
  402f3e:	mov    QWORD PTR [rsp+0x40],rax
  402f43:	lea    rax,[rsp+0xc0]
  402f4b:	mov    QWORD PTR [rsp+0x30],rax
  402f50:	lea    rax,[rip+0x6acf]        # 0x409a26
  402f57:	mov    QWORD PTR [rsp+0x28],rax
  402f5c:	call   0x404e90
  402f61:	test   eax,eax
  402f63:	je     0x402e6d
  402f69:	mov    rax,QWORD PTR [rsp+0x200]
  402f71:	mov    r12,QWORD PTR [rsp+0xd0]
  402f79:	mov    r13,QWORD PTR [rsp+0xc8]
  402f81:	mov    rdi,QWORD PTR [rsp+0xc0]
  402f89:	mov    rbp,QWORD PTR [rax+0x40]
  402f8d:	mov    rbx,QWORD PTR [rbp+0x0]
  402f91:	test   rbx,rbx
  402f94:	jne    0x402fac
  402f96:	jmp    0x404523
  402f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	mov    rbx,QWORD PTR [rbx]
  402fa3:	test   rbx,rbx
  402fa6:	je     0x403fae
  402fac:	mov    rcx,QWORD PTR [rbx+0x28]
  402fb0:	mov    rdx,rdi
  402fb3:	call   0x404f00
  402fb8:	test   rax,rax
  402fbb:	mov    rsi,rax
  402fbe:	je     0x402fa0
  402fc0:	mov    rcx,QWORD PTR [rbp+0x28]
  402fc4:	mov    rdx,rdi
  402fc7:	call   0x404f00
  402fcc:	test   rax,rax
  402fcf:	lea    rcx,[rip+0x6c1a]        # 0x409bf0
  402fd6:	je     0x40412c
  402fdc:	call   0x404f78
  402fe1:	mov    rbx,rax
  402fe4:	call   0x404e88
  402fe9:	mov    rcx,QWORD PTR [rsp+0x208]
  402ff1:	mov    edx,eax
  402ff3:	mov    QWORD PTR [rsp+0x20],rdi
  402ff8:	mov    r9,rbx
  402ffb:	mov    r8d,0x5
  403001:	call   0x404db8
  403006:	jmp    0x402e6d
  40300b:	nop    DWORD PTR [rax+rax*1+0x0]
  403010:	mov    rsi,rbp
  403013:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403015:	mov    ecx,0x8
  40301a:	seta   dl
  40301d:	setb   al
  403020:	cmp    dl,al
  403022:	jne    0x403140
  403028:	lea    rdi,[rip+0x6522]        # 0x409551
  40302f:	mov    rsi,rbx
  403032:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403034:	je     0x403b20
  40303a:	lea    rdi,[rip+0x6bd6]        # 0x409c17
  403041:	mov    ecx,0x8
  403046:	mov    rsi,rbx
  403049:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40304b:	je     0x403bc2
  403051:	lea    rdi,[rip+0x6bf2]        # 0x409c4a
  403058:	mov    ecx,0xc
  40305d:	mov    rsi,rbx
  403060:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403062:	je     0x403973
  403068:	lea    rdi,[rip+0x6be7]        # 0x409c56
  40306f:	mov    ecx,0x6
  403074:	mov    rsi,rbx
  403077:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403079:	je     0x403c81
  40307f:	lea    rdi,[rip+0x6649]        # 0x4096cf
  403086:	mov    ecx,0x8
  40308b:	mov    rsi,rbx
  40308e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403090:	je     0x403ebc
  403096:	lea    rdi,[rip+0x6668]        # 0x409705
  40309d:	mov    ecx,0x8
  4030a2:	mov    rsi,rbx
  4030a5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030a7:	jne    0x402e36
  4030ad:	mov    r9,QWORD PTR [rsp+0x208]
  4030b5:	mov    DWORD PTR [rsp+0x30],0x0
  4030bd:	mov    r8,r13
  4030c0:	mov    QWORD PTR [rsp+0x28],0x0
  4030c9:	mov    DWORD PTR [rsp+0x20],0x0
  4030d1:	mov    rdx,r12
  4030d4:	mov    rcx,rbx
  4030d7:	call   0x404e90
  4030dc:	test   eax,eax
  4030de:	je     0x402e6d
  4030e4:	mov    rax,QWORD PTR [rsp+0x200]
  4030ec:	mov    rax,QWORD PTR [rax+0x48]
  4030f0:	mov    edx,DWORD PTR [rax+0x54]
  4030f3:	test   edx,edx
  4030f5:	jne    0x404608
  4030fb:	cmp    QWORD PTR [rax+0x38],0x0
  403100:	jne    0x402e6d
  403106:	cmp    DWORD PTR [rax+0x50],0x0
  40310a:	jne    0x402e6d
  403110:	call   0x404e88
  403115:	mov    rcx,QWORD PTR [rsp+0x208]
  40311d:	lea    r9,[rip+0x6c84]        # 0x409da8
  403124:	mov    r8d,0x5
  40312a:	mov    edx,eax
  40312c:	call   0x404db0
  403131:	jmp    0x402e6d
  403136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403140:	lea    rdi,[rip+0x6588]        # 0x4096cf
  403147:	mov    rsi,rbp
  40314a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40314c:	jne    0x4036c0
  403152:	lea    rdi,[rip+0x6caa]        # 0x409e03
  403159:	mov    ecx,0x7
  40315e:	mov    rsi,rbx
  403161:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403163:	jne    0x402e36
  403169:	lea    rax,[rsp+0xd0]
  403171:	mov    r9,QWORD PTR [rsp+0x208]
  403179:	mov    DWORD PTR [rsp+0x38],0x0
  403181:	mov    DWORD PTR [rsp+0x20],0x1
  403189:	mov    r8,r13
  40318c:	mov    rdx,r12
  40318f:	mov    QWORD PTR [rsp+0x30],rax
  403194:	lea    rax,[rip+0x6c6f]        # 0x409e0a
  40319b:	mov    rcx,rbx
  40319e:	mov    QWORD PTR [rsp+0x28],rax
  4031a3:	call   0x404e90
  4031a8:	test   eax,eax
  4031aa:	je     0x402e6d
  4031b0:	mov    rax,QWORD PTR [rsp+0x200]
  4031b8:	mov    rsi,QWORD PTR [rsp+0xd0]
  4031c0:	mov    rbx,QWORD PTR [rax+0x48]
  4031c4:	mov    r8,rsi
  4031c7:	mov    rcx,QWORD PTR [rbx+0x30]
  4031cb:	lea    rdx,[rcx+0x8]
  4031cf:	call   0x402d30
  4031d4:	test   eax,eax
  4031d6:	jne    0x404101
  4031dc:	mov    rcx,QWORD PTR [rbx+0x30]
  4031e0:	xor    r8d,r8d
  4031e3:	mov    rdx,rsi
  4031e6:	call   0x402300
  4031eb:	mov    DWORD PTR [rbx+0x50],0x1
  4031f2:	jmp    0x402e6d
  4031f7:	nop    WORD PTR [rax+rax*1+0x0]
  403200:	lea    rax,[rsp+0xd0]
  403208:	mov    r9,QWORD PTR [rsp+0x208]
  403210:	mov    DWORD PTR [rsp+0x38],0x0
  403218:	mov    DWORD PTR [rsp+0x20],0x1
  403220:	mov    r8,r13
  403223:	mov    rdx,r12
  403226:	mov    QWORD PTR [rsp+0x30],rax
  40322b:	lea    rax,[rip+0x654d]        # 0x40977f
  403232:	mov    rcx,rbx
  403235:	mov    QWORD PTR [rsp+0x28],rax
  40323a:	call   0x404e90
  40323f:	test   eax,eax
  403241:	je     0x402e6d
  403247:	mov    r9,QWORD PTR [rsp+0x208]
  40324f:	mov    rdx,QWORD PTR [rsp+0xd0]
  403257:	mov    r8d,0x1
  40325d:	mov    rcx,QWORD PTR [rsp+0x200]
  403265:	call   0x4024f0
  40326a:	jmp    0x402e6d
  40326f:	nop
  403270:	lea    rax,[rsp+0xd0]
  403278:	mov    r9,QWORD PTR [rsp+0x208]
  403280:	mov    DWORD PTR [rsp+0x80],0x0
  40328b:	mov    DWORD PTR [rsp+0x68],0x10001
  403293:	mov    DWORD PTR [rsp+0x50],0x10001
  40329b:	mov    r8,r13
  40329e:	mov    QWORD PTR [rsp+0x78],rax
  4032a3:	lea    rax,[rip+0x622b]        # 0x4094d5
  4032aa:	mov    DWORD PTR [rsp+0x38],0x10001
  4032b2:	mov    DWORD PTR [rsp+0x20],0x1
  4032ba:	mov    rdx,r12
  4032bd:	mov    rcx,rbx
  4032c0:	mov    QWORD PTR [rsp+0x70],rax
  4032c5:	lea    rax,[rsp+0xc8]
  4032cd:	mov    QWORD PTR [rsp+0x60],rax
  4032d2:	lea    rax,[rip+0x61f7]        # 0x4094d0
  4032d9:	mov    QWORD PTR [rsp+0x58],rax
  4032de:	lea    rax,[rsp+0xc0]
  4032e6:	mov    QWORD PTR [rsp+0x48],rax
  4032eb:	lea    rax,[rip+0x672f]        # 0x409a21
  4032f2:	mov    QWORD PTR [rsp+0x40],rax
  4032f7:	lea    rax,[rsp+0xb8]
  4032ff:	mov    QWORD PTR [rsp+0x30],rax
  403304:	lea    rax,[rip+0x671b]        # 0x409a26
  40330b:	mov    QWORD PTR [rsp+0x28],rax
  403310:	call   0x404e90
  403315:	test   eax,eax
  403317:	je     0x402e6d
  40331d:	mov    rax,QWORD PTR [rsp+0x200]
  403325:	mov    r12,QWORD PTR [rsp+0xd0]
  40332d:	mov    r13,QWORD PTR [rsp+0xc8]
  403335:	mov    rbp,QWORD PTR [rsp+0xc0]
  40333d:	mov    rsi,QWORD PTR [rsp+0xb8]
  403345:	mov    rax,QWORD PTR [rax+0x10]
  403349:	mov    QWORD PTR [rsp+0xa0],rax
  403351:	mov    rax,QWORD PTR [rsp+0x200]
  403359:	mov    rdi,QWORD PTR [rax+0x40]
  40335d:	mov    r15,QWORD PTR [rax+0x18]
  403361:	cmp    QWORD PTR [rdi+0x20],0x0
  403366:	jne    0x403d50
  40336c:	mov    rdx,QWORD PTR [rsp+0x208]
  403374:	mov    rcx,rsi
  403377:	xor    r14d,r14d
  40337a:	call   0x402040
  40337f:	test   eax,eax
  403381:	je     0x4034a1
  403387:	mov    rcx,QWORD PTR [rdi+0x28]
  40338b:	mov    rdx,rsi
  40338e:	mov    rbx,rdi
  403391:	call   0x404f00
  403396:	test   rax,rax
  403399:	jne    0x4040cb
  40339f:	nop
  4033a0:	mov    rax,QWORD PTR [rbx]
  4033a3:	test   rax,rax
  4033a6:	je     0x4033d0
  4033a8:	mov    rcx,QWORD PTR [rax+0x28]
  4033ac:	mov    rdx,rsi
  4033af:	call   0x404f00
  4033b4:	test   rax,rax
  4033b7:	je     0x4033c6
  4033b9:	mov    r14d,DWORD PTR [rax+0x58]
  4033bd:	test   r14d,r14d
  4033c0:	je     0x40403d
  4033c6:	mov    rbx,QWORD PTR [rbx]
  4033c9:	test   rbx,rbx
  4033cc:	jne    0x4033a0
  4033ce:	xchg   ax,ax
  4033d0:	test   r13,r13
  4033d3:	setne  dl
  4033d6:	test   r12,r12
  4033d9:	setne  r14b
  4033dd:	xor    eax,eax
  4033df:	test   rbp,rbp
  4033e2:	setne  al
  4033e5:	movzx  r9d,dl
  4033e9:	movzx  ebx,r14b
  4033ed:	add    eax,r9d
  4033f0:	add    eax,ebx
  4033f2:	cmp    eax,0x1
  4033f5:	jne    0x404483
  4033fb:	test   rbp,rbp
  4033fe:	je     0x404224
  403404:	mov    rcx,rbp
  403407:	mov    DWORD PTR [rsp+0xa0],r9d
  40340f:	call   0x404c28
  403414:	test   eax,eax
  403416:	mov    r9d,DWORD PTR [rsp+0xa0]
  40341e:	je     0x4046e1
  403424:	mov    r13,QWORD PTR [rdi+0x10]
  403428:	mov    ecx,0x70
  40342d:	mov    DWORD PTR [rsp+0xa0],r9d
  403435:	call   0x404da0
  40343a:	mov    rcx,rbp
  40343d:	mov    r12,rax
  403440:	call   0x404c30
  403445:	mov    r9d,DWORD PTR [rsp+0xa0]
  40344d:	mov    QWORD PTR [r12+0x8],rax
  403452:	xor    eax,eax
  403454:	test   r13,r13
  403457:	mov    DWORD PTR [r12+0x3c],ebx
  40345c:	mov    DWORD PTR [r12+0x68],0x0
  403465:	setne  al
  403468:	mov    DWORD PTR [r12+0x6c],0x0
  403471:	mov    DWORD PTR [r12+0x10],eax
  403476:	mov    DWORD PTR [r12+0x38],r9d
  40347b:	xor    ecx,ecx
  40347d:	call   0x404d30
  403482:	mov    QWORD PTR [r12+0x30],rax
  403487:	mov    rcx,rsi
  40348a:	mov    r14,r12
  40348d:	call   0x404d58
  403492:	mov    rcx,QWORD PTR [rdi+0x28]
  403496:	mov    r8,r12
  403499:	mov    rdx,rax
  40349c:	call   0x404f08
  4034a1:	mov    rax,QWORD PTR [rsp+0x200]
  4034a9:	mov    QWORD PTR [rax+0x48],r14
  4034ad:	jmp    0x402e6d
  4034b2:	mov    rsi,rbx
  4034b5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4034b7:	je     0x403ad0
  4034bd:	lea    rcx,[rip+0x6b44]        # 0x40a008
  4034c4:	call   0x404f78
  4034c9:	mov    rsi,rax
  4034cc:	call   0x404e88
  4034d1:	mov    rcx,QWORD PTR [rsp+0x208]
  4034d9:	mov    edx,eax
  4034db:	mov    QWORD PTR [rsp+0x20],rbx
  4034e0:	mov    r9,rsi
  4034e3:	mov    r8d,0x3
  4034e9:	call   0x404db8
  4034ee:	jmp    0x402e6d
  4034f3:	lea    rax,[rsp+0xd0]
  4034fb:	mov    r9,QWORD PTR [rsp+0x208]
  403503:	mov    DWORD PTR [rsp+0x98],0x0
  40350e:	mov    DWORD PTR [rsp+0x80],0x10001
  403519:	mov    DWORD PTR [rsp+0x68],0x10001
  403521:	mov    r8,r13
  403524:	mov    QWORD PTR [rsp+0x90],rax
  40352c:	lea    rax,[rip+0x6237]        # 0x40976a
  403533:	mov    DWORD PTR [rsp+0x50],0x10001
  40353b:	mov    DWORD PTR [rsp+0x38],0x10001
  403543:	mov    DWORD PTR [rsp+0x20],0x1
  40354b:	mov    rdx,r12
  40354e:	mov    QWORD PTR [rsp+0x88],rax
  403556:	lea    rax,[rsp+0xc8]
  40355e:	mov    rcx,rbx
  403561:	mov    QWORD PTR [rsp+0x78],rax
  403566:	lea    rax,[rip+0x6205]        # 0x409772
  40356d:	mov    QWORD PTR [rsp+0x70],rax
  403572:	lea    rax,[rsp+0xc0]
  40357a:	mov    QWORD PTR [rsp+0x60],rax
  40357f:	lea    rax,[rip+0x61d5]        # 0x40975b
  403586:	mov    QWORD PTR [rsp+0x58],rax
  40358b:	lea    rax,[rsp+0xb8]
  403593:	mov    QWORD PTR [rsp+0x48],rax
  403598:	lea    rax,[rip+0x61db]        # 0x40977a
  40359f:	mov    QWORD PTR [rsp+0x40],rax
  4035a4:	lea    rax,[rsp+0xb0]
  4035ac:	mov    QWORD PTR [rsp+0x30],rax
  4035b1:	lea    rax,[rip+0x61c7]        # 0x40977f
  4035b8:	mov    QWORD PTR [rsp+0x28],rax
  4035bd:	call   0x404e90
  4035c2:	test   eax,eax
  4035c4:	je     0x402e6d
  4035ca:	mov    rsi,QWORD PTR [rsp+0xc0]
  4035d2:	mov    rdi,QWORD PTR [rsp+0xd0]
  4035da:	mov    rbp,QWORD PTR [rsp+0xc8]
  4035e2:	test   rsi,rsi
  4035e5:	je     0x403c70
  4035eb:	mov    rax,QWORD PTR [rsp+0x200]
  4035f3:	mov    rbx,QWORD PTR [rsp+0xb0]
  4035fb:	mov    r13,QWORD PTR [rsp+0xb8]
  403603:	mov    rcx,QWORD PTR [rax+0x8]
  403607:	mov    rdx,rbx
  40360a:	call   0x404f00
  40360f:	test   rax,rax
  403612:	lea    rcx,[rip+0x616f]        # 0x409788
  403619:	je     0x4037d0
  40361f:	call   0x404f78
  403624:	mov    rsi,rax
  403627:	call   0x404e88
  40362c:	mov    rcx,QWORD PTR [rsp+0x208]
  403634:	mov    edx,eax
  403636:	mov    QWORD PTR [rsp+0x20],rbx
  40363b:	mov    r9,rsi
  40363e:	mov    r8d,0x5
  403644:	call   0x404db8
  403649:	jmp    0x402e6d
  40364e:	xchg   ax,ax
  403650:	lea    rax,[rsp+0xd0]
  403658:	mov    r9,QWORD PTR [rsp+0x208]
  403660:	mov    DWORD PTR [rsp+0x38],0x0
  403668:	mov    DWORD PTR [rsp+0x20],0x1
  403670:	mov    r8,r13
  403673:	mov    rdx,r12
  403676:	mov    QWORD PTR [rsp+0x30],rax
  40367b:	lea    rax,[rip+0x60fd]        # 0x40977f
  403682:	mov    rcx,rbx
  403685:	mov    QWORD PTR [rsp+0x28],rax
  40368a:	call   0x404e90
  40368f:	test   eax,eax
  403691:	je     0x402e6d
  403697:	mov    r9,QWORD PTR [rsp+0x208]
  40369f:	mov    rdx,QWORD PTR [rsp+0xd0]
  4036a7:	xor    r8d,r8d
  4036aa:	mov    rcx,QWORD PTR [rsp+0x200]
  4036b2:	call   0x4024f0
  4036b7:	jmp    0x402e6d
  4036bc:	nop    DWORD PTR [rax+0x0]
  4036c0:	lea    rdi,[rip+0x603e]        # 0x409705
  4036c7:	mov    ecx,0x8
  4036cc:	mov    rsi,rbp
  4036cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4036d1:	je     0x403862
  4036d7:	lea    rdi,[rip+0x5df2]        # 0x4094d0
  4036de:	mov    ecx,0x5
  4036e3:	mov    rsi,rbp
  4036e6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4036e8:	je     0x403701
  4036ea:	lea    rdi,[rip+0x5de4]        # 0x4094d5
  4036f1:	mov    ecx,0x6
  4036f6:	mov    rsi,rbp
  4036f9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4036fb:	jne    0x402e36
  403701:	lea    rax,[rip+0x6702]        # 0x409e0a
  403708:	mov    ecx,0x6
  40370d:	mov    rsi,rbx
  403710:	mov    rdi,rax
  403713:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403715:	jne    0x402e36
  40371b:	mov    QWORD PTR [rsp+0x40],rax
  403720:	lea    rax,[rsp+0xc0]
  403728:	lea    rdx,[rsp+0xc8]
  403730:	mov    r9,QWORD PTR [rsp+0x208]
  403738:	mov    DWORD PTR [rsp+0x50],0x0
  403740:	mov    r8,r13
  403743:	mov    QWORD PTR [rsp+0x30],rax
  403748:	lea    rax,[rip+0x67d0]        # 0x409f1f
  40374f:	mov    QWORD PTR [rsp+0x48],rdx
  403754:	mov    DWORD PTR [rsp+0x38],0x1
  40375c:	mov    DWORD PTR [rsp+0x20],0x1
  403764:	mov    rdx,r12
  403767:	mov    QWORD PTR [rsp+0x28],rax
  40376c:	mov    rcx,rbx
  40376f:	call   0x404e90
  403774:	test   eax,eax
  403776:	je     0x402e6d
  40377c:	mov    rbx,QWORD PTR [rsp+0xc0]
  403784:	mov    rax,QWORD PTR [rsp+0x200]
  40378c:	mov    rdi,QWORD PTR [rsp+0xc8]
  403794:	cmp    BYTE PTR [rbx],0x0
  403797:	mov    rbp,QWORD PTR [rax+0x50]
  40379b:	je     0x4037a7
  40379d:	cmp    BYTE PTR [rbx+0x1],0x0
  4037a1:	jne    0x404554
  4037a7:	call   0x404e88
  4037ac:	mov    rcx,QWORD PTR [rsp+0x208]
  4037b4:	lea    r9,[rip+0x676d]        # 0x409f28
  4037bb:	mov    r8d,0x5
  4037c1:	mov    edx,eax
  4037c3:	call   0x404db8
  4037c8:	jmp    0x402e6d
  4037cd:	nop    DWORD PTR [rax]
  4037d0:	test   rbp,rbp
  4037d3:	je     0x403d84
  4037d9:	mov    rax,QWORD PTR [rsp+0x200]
  4037e1:	mov    rdx,rbp
  4037e4:	mov    rcx,QWORD PTR [rax+0x8]
  4037e8:	call   0x404f00
  4037ed:	test   rax,rax
  4037f0:	mov    r12,rax
  4037f3:	lea    rcx,[rip+0x5fb6]        # 0x4097b0
  4037fa:	je     0x404361
  403800:	test   rdi,rdi
  403803:	je     0x403f99
  403809:	mov    rax,QWORD PTR [rsp+0x200]
  403811:	mov    rdx,rdi
  403814:	mov    rcx,QWORD PTR [rax+0x8]
  403818:	call   0x404f00
  40381d:	test   rax,rax
  403820:	je     0x404433
  403826:	cmp    QWORD PTR [rax+0x8],0x0
  40382b:	lea    rcx,[rip+0x5ff6]        # 0x409828
  403832:	je     0x403c4b
  403838:	call   0x404f78
  40383d:	mov    rbx,rax
  403840:	call   0x404e88
  403845:	mov    rcx,QWORD PTR [rsp+0x208]
  40384d:	mov    edx,eax
  40384f:	mov    r9,rbx
  403852:	mov    r8d,0x5
  403858:	call   0x404db8
  40385d:	jmp    0x402e6d
  403862:	lea    rdi,[rip+0x65ca]        # 0x409e33
  403869:	mov    ecx,0x6
  40386e:	mov    rsi,rbx
  403871:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403873:	jne    0x402e36
  403879:	lea    rax,[rsp+0xc8]
  403881:	mov    r9,QWORD PTR [rsp+0x208]
  403889:	mov    DWORD PTR [rsp+0x50],0x0
  403891:	mov    DWORD PTR [rsp+0x38],0x1
  403899:	mov    DWORD PTR [rsp+0x20],0x1
  4038a1:	mov    r8,r13
  4038a4:	mov    QWORD PTR [rsp+0x48],rax
  4038a9:	lea    rax,[rip+0x6589]        # 0x409e39
  4038b0:	mov    rdx,r12
  4038b3:	mov    rcx,rbx
  4038b6:	mov    QWORD PTR [rsp+0x40],rax
  4038bb:	lea    rax,[rsp+0xc0]
  4038c3:	mov    QWORD PTR [rsp+0x30],rax
  4038c8:	lea    rax,[rip+0x653b]        # 0x409e0a
  4038cf:	mov    QWORD PTR [rsp+0x28],rax
  4038d4:	call   0x404e90
  4038d9:	test   eax,eax
  4038db:	je     0x402e6d
  4038e1:	mov    rax,QWORD PTR [rsp+0x200]
  4038e9:	mov    rbx,QWORD PTR [rsp+0xc0]
  4038f1:	mov    rdi,QWORD PTR [rsp+0xc8]
  4038f9:	mov    rsi,QWORD PTR [rax+0x48]
  4038fd:	mov    r8,rbx
  403900:	mov    rcx,QWORD PTR [rsi+0x30]
  403904:	lea    rdx,[rcx+0x8]
  403908:	call   0x402d30
  40390d:	test   eax,eax
  40390f:	je     0x4042df
  403915:	mov    rax,QWORD PTR [rsi+0x30]
  403919:	xor    r9d,r9d
  40391c:	mov    r8,rbx
  40391f:	mov    rdx,QWORD PTR [rax+0x8]
  403923:	mov    rcx,QWORD PTR [rax]
  403926:	shr    rdx,0x2
  40392a:	call   0x402250
  40392f:	cmp    eax,0xffffffff
  403932:	je     0x404819
  403938:	mov    eax,DWORD PTR [rsi+0x38]
  40393b:	test   eax,eax
  40393d:	je     0x404453
  403943:	call   0x404e88
  403948:	mov    rcx,QWORD PTR [rsp+0x208]
  403950:	lea    r9,[rip+0x64e9]        # 0x409e40
  403957:	mov    QWORD PTR [rsp+0x28],rbx
  40395c:	mov    QWORD PTR [rsp+0x20],rbx
  403961:	mov    r8d,0x5
  403967:	mov    edx,eax
  403969:	call   0x404db8
  40396e:	jmp    0x402e6d
  403973:	mov    r9,QWORD PTR [rsp+0x208]
  40397b:	mov    DWORD PTR [rsp+0x30],0x0
  403983:	mov    r8,r13
  403986:	mov    QWORD PTR [rsp+0x28],0x0
  40398f:	mov    DWORD PTR [rsp+0x20],0x0
  403997:	mov    rdx,r12
  40399a:	mov    rcx,rbx
  40399d:	call   0x404e90
  4039a2:	test   eax,eax
  4039a4:	je     0x402e6d
  4039aa:	mov    rax,QWORD PTR [rsp+0x200]
  4039b2:	mov    rax,QWORD PTR [rax+0x48]
  4039b6:	mov    r10d,DWORD PTR [rax+0x6c]
  4039ba:	test   r10d,r10d
  4039bd:	je     0x4039d3
  4039bf:	mov    rax,QWORD PTR [rsp+0x200]
  4039c7:	mov    r9d,DWORD PTR [rax]
  4039ca:	test   r9d,r9d
  4039cd:	jne    0x4041e9
  4039d3:	xor    ecx,ecx
  4039d5:	call   0x404d30
  4039da:	mov    rbx,QWORD PTR [rsp+0x200]
  4039e2:	mov    QWORD PTR [rbx+0x58],rax
  4039e6:	mov    rax,QWORD PTR [rsp+0x200]
  4039ee:	mov    rax,QWORD PTR [rax+0x48]
  4039f2:	mov    DWORD PTR [rax+0x6c],0x1
  4039f9:	jmp    0x402e6d
  4039fe:	xchg   ax,ax
  403a00:	mov    QWORD PTR [rsp+0x40],rax
  403a05:	lea    rax,[rsp+0xc8]
  403a0d:	lea    rdx,[rsp+0xd0]
  403a15:	mov    r9,QWORD PTR [rsp+0x208]
  403a1d:	mov    DWORD PTR [rsp+0x50],0x0
  403a25:	mov    r8,r13
  403a28:	mov    QWORD PTR [rsp+0x30],rax
  403a2d:	lea    rax,[rip+0x5ff2]        # 0x409a26
  403a34:	mov    QWORD PTR [rsp+0x48],rdx
  403a39:	mov    DWORD PTR [rsp+0x38],0x1
  403a41:	mov    DWORD PTR [rsp+0x20],0x1
  403a49:	mov    rdx,r12
  403a4c:	mov    QWORD PTR [rsp+0x28],rax
  403a51:	mov    rcx,rbx
  403a54:	call   0x404e90
  403a59:	test   eax,eax
  403a5b:	je     0x402e6d
  403a61:	mov    rbx,QWORD PTR [rsp+0xc8]
  403a69:	mov    rax,QWORD PTR [rsp+0x200]
  403a71:	mov    rdx,QWORD PTR [rsp+0x208]
  403a79:	mov    rdi,QWORD PTR [rsp+0xd0]
  403a81:	mov    rcx,rbx
  403a84:	mov    rsi,QWORD PTR [rax+0x40]
  403a88:	call   0x402040
  403a8d:	test   eax,eax
  403a8f:	je     0x402e6d
  403a95:	lea    rdx,[rip+0x5e96]        # 0x409932
  403a9c:	xor    r8d,r8d
  403a9f:	mov    rcx,rbx
  403aa2:	call   0x404d60
  403aa7:	mov    rcx,QWORD PTR [rsi+0x28]
  403aab:	mov    rdx,rax
  403aae:	mov    rbp,rax
  403ab1:	call   0x404f00
  403ab6:	test   rax,rax
  403ab9:	je     0x404395
  403abf:	lea    rcx,[rip+0x60ba]        # 0x409b80
  403ac6:	jmp    0x40361f
  403acb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ad0:	mov    rax,QWORD PTR [rsp+0x200]
  403ad8:	mov    r9,QWORD PTR [rsp+0x208]
  403ae0:	mov    r8,r13
  403ae3:	mov    DWORD PTR [rsp+0x38],0x0
  403aeb:	mov    DWORD PTR [rsp+0x20],0x10002
  403af3:	mov    rdx,r12
  403af6:	mov    rcx,rbx
  403af9:	add    rax,0x38
  403afd:	mov    QWORD PTR [rsp+0x30],rax
  403b02:	lea    rax,[rip+0x5c52]        # 0x40975b
  403b09:	mov    QWORD PTR [rsp+0x28],rax
  403b0e:	call   0x404e90
  403b13:	jmp    0x402e6d
  403b18:	nop    DWORD PTR [rax+rax*1+0x0]
  403b20:	lea    rax,[rsp+0xd0]
  403b28:	mov    r9,QWORD PTR [rsp+0x208]
  403b30:	mov    DWORD PTR [rsp+0x50],0x0
  403b38:	mov    DWORD PTR [rsp+0x38],0x10001
  403b40:	mov    DWORD PTR [rsp+0x20],0x10001
  403b48:	mov    r8,r13
  403b4b:	mov    QWORD PTR [rsp+0x48],rax
  403b50:	lea    rax,[rip+0x604d]        # 0x409ba4
  403b57:	mov    rdx,r12
  403b5a:	mov    rcx,rbx
  403b5d:	mov    QWORD PTR [rsp+0x40],rax
  403b62:	lea    rax,[rsp+0xc8]
  403b6a:	mov    QWORD PTR [rsp+0x30],rax
  403b6f:	lea    rax,[rip+0x6036]        # 0x409bac
  403b76:	mov    QWORD PTR [rsp+0x28],rax
  403b7b:	call   0x404e90
  403b80:	test   eax,eax
  403b82:	je     0x402e6d
  403b88:	mov    rax,QWORD PTR [rsp+0x200]
  403b90:	mov    r9,QWORD PTR [rsp+0x208]
  403b98:	mov    r8,QWORD PTR [rsp+0xd0]
  403ba0:	mov    rdx,QWORD PTR [rsp+0xc8]
  403ba8:	mov    rcx,QWORD PTR [rax+0x48]
  403bac:	call   0x402360
  403bb1:	mov    rbx,QWORD PTR [rsp+0x200]
  403bb9:	mov    QWORD PTR [rbx+0x58],rax
  403bbd:	jmp    0x402e6d
  403bc2:	mov    r9,QWORD PTR [rsp+0x208]
  403bca:	mov    DWORD PTR [rsp+0x30],0x0
  403bd2:	mov    r8,r13
  403bd5:	mov    QWORD PTR [rsp+0x28],0x0
  403bde:	mov    DWORD PTR [rsp+0x20],0x0
  403be6:	mov    rdx,r12
  403be9:	mov    rcx,rbx
  403bec:	call   0x404e90
  403bf1:	test   eax,eax
  403bf3:	je     0x402e6d
  403bf9:	mov    rax,QWORD PTR [rsp+0x200]
  403c01:	mov    rax,QWORD PTR [rax+0x48]
  403c05:	mov    esi,DWORD PTR [rax+0x68]
  403c08:	test   esi,esi
  403c0a:	je     0x403c20
  403c0c:	mov    rax,QWORD PTR [rsp+0x200]
  403c14:	mov    r11d,DWORD PTR [rax]
  403c17:	test   r11d,r11d
  403c1a:	jne    0x404090
  403c20:	xor    ecx,ecx
  403c22:	call   0x404d30
  403c27:	mov    rbx,QWORD PTR [rsp+0x200]
  403c2f:	mov    QWORD PTR [rbx+0x58],rax
  403c33:	mov    rax,QWORD PTR [rsp+0x200]
  403c3b:	mov    rax,QWORD PTR [rax+0x48]
  403c3f:	mov    DWORD PTR [rax+0x68],0x1
  403c46:	jmp    0x402e6d
  403c4b:	test   r12,r12
  403c4e:	je     0x403d93
  403c54:	cmp    QWORD PTR [r12+0x8],0x0
  403c5a:	je     0x403fba
  403c60:	lea    rcx,[rip+0x5bf1]        # 0x409858
  403c67:	jmp    0x403838
  403c6c:	nop    DWORD PTR [rax+0x0]
  403c70:	mov    rax,QWORD PTR [rsp+0x200]
  403c78:	mov    rsi,QWORD PTR [rax+0x38]
  403c7c:	jmp    0x4035eb
  403c81:	lea    rax,[rsp+0xc8]
  403c89:	mov    r9,QWORD PTR [rsp+0x208]
  403c91:	mov    DWORD PTR [rsp+0x50],0x0
  403c99:	mov    DWORD PTR [rsp+0x38],0x10001
  403ca1:	mov    DWORD PTR [rsp+0x20],0x10001
  403ca9:	mov    r8,r13
  403cac:	mov    QWORD PTR [rsp+0x48],rax
  403cb1:	lea    rax,[rip+0x5fa4]        # 0x409c5c
  403cb8:	mov    rdx,r12
  403cbb:	mov    rcx,rbx
  403cbe:	mov    QWORD PTR [rsp+0x40],rax
  403cc3:	lea    rax,[rsp+0xc0]
  403ccb:	mov    QWORD PTR [rsp+0x30],rax
  403cd0:	lea    rax,[rip+0x5f89]        # 0x409c60
  403cd7:	mov    QWORD PTR [rsp+0x28],rax
  403cdc:	call   0x404e90
  403ce1:	test   eax,eax
  403ce3:	je     0x402e6d
  403ce9:	mov    rax,QWORD PTR [rsp+0x200]
  403cf1:	lea    rsi,[rip+0x4348]        # 0x408040
  403cf8:	mov    ecx,0x18
  403cfd:	mov    rbp,QWORD PTR [rsp+0xc8]
  403d05:	mov    r10,QWORD PTR [rsp+0xc0]
  403d0d:	mov    rbx,QWORD PTR [rax+0x48]
  403d11:	lea    rax,[rsp+0xd0]
  403d19:	mov    rdi,rax
  403d1c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  403d1f:	cmp    QWORD PTR [rbx+0x40],0x0
  403d24:	je     0x4043c1
  403d2a:	call   0x404e88
  403d2f:	mov    rcx,QWORD PTR [rsp+0x208]
  403d37:	lea    r9,[rip+0x5f2a]        # 0x409c68
  403d3e:	mov    r8d,0x5
  403d44:	mov    edx,eax
  403d46:	call   0x404db0
  403d4b:	jmp    0x402e6d
  403d50:	lea    rcx,[rip+0x5cd9]        # 0x409a30
  403d57:	xor    r14d,r14d
  403d5a:	call   0x404f78
  403d5f:	mov    rbx,rax
  403d62:	call   0x404e88
  403d67:	mov    rcx,QWORD PTR [rsp+0x208]
  403d6f:	mov    edx,eax
  403d71:	mov    r9,rbx
  403d74:	mov    r8d,0x5
  403d7a:	call   0x404db0
  403d7f:	jmp    0x4034a1
  403d84:	xor    r12d,r12d
  403d87:	test   rdi,rdi
  403d8a:	jne    0x403809
  403d90:	mov    r12,rdi
  403d93:	test   r13,r13
  403d96:	je     0x403e0b
  403d98:	lea    rdx,[rip+0x5b93]        # 0x409932
  403d9f:	mov    rcx,r13
  403da2:	call   0x404d78
  403da7:	test   eax,eax
  403da9:	je     0x404084
  403daf:	lea    rdx,[rip+0x5b7c]        # 0x409932
  403db6:	mov    rcx,r13
  403db9:	call   0x404d70
  403dbe:	test   eax,eax
  403dc0:	je     0x404084
  403dc6:	test   rdi,rdi
  403dc9:	jne    0x404410
  403dcf:	lea    rdx,[rip+0x5bc0]        # 0x409996
  403dd6:	mov    rcx,r13
  403dd9:	call   0x404d78
  403dde:	test   eax,eax
  403de0:	jne    0x403df9
  403de2:	lea    rdx,[rip+0x5c25]        # 0x409a0e
  403de9:	mov    rcx,r13
  403dec:	call   0x404d78
  403df1:	test   eax,eax
  403df3:	je     0x4045c6
  403df9:	lea    rcx,[rip+0x5ba0]        # 0x4099a0
  403e00:	mov    r8,r13
  403e03:	mov    rdx,rbx
  403e06:	call   0x404e10
  403e0b:	mov    ecx,0x30
  403e10:	call   0x404da8
  403e15:	mov    rcx,r13
  403e18:	mov    r14,rax
  403e1b:	call   0x404d58
  403e20:	mov    rcx,rsi
  403e23:	mov    QWORD PTR [r14+0x8],rax
  403e27:	call   0x404d58
  403e2c:	mov    rcx,rbp
  403e2f:	mov    QWORD PTR [r14+0x10],rax
  403e33:	mov    QWORD PTR [r14],r12
  403e36:	call   0x404d58
  403e3b:	mov    rcx,rdi
  403e3e:	mov    QWORD PTR [r14+0x18],rax
  403e42:	call   0x404d58
  403e47:	lea    r9,[rip+0xffffffffffffe7a2]        # 0x4025f0
  403e4e:	lea    r8,[rip+0x10c3]        # 0x404f18
  403e55:	lea    rdx,[rip+0xf24]        # 0x404d80
  403e5c:	lea    rcx,[rip+0xf05]        # 0x404d68
  403e63:	mov    QWORD PTR [r14+0x20],rax
  403e67:	call   0x404ef8
  403e6c:	mov    QWORD PTR [r14+0x28],rax
  403e70:	mov    rax,QWORD PTR [rsp+0x200]
  403e78:	mov    rcx,rbx
  403e7b:	mov    QWORD PTR [rax+0x40],r14
  403e7f:	call   0x404d58
  403e84:	mov    rbx,rax
  403e87:	mov    rax,QWORD PTR [rsp+0x200]
  403e8f:	mov    rdx,rbx
  403e92:	mov    rcx,QWORD PTR [rax+0x20]
  403e96:	call   0x404d88
  403e9b:	mov    rsi,QWORD PTR [rsp+0x200]
  403ea3:	mov    rdx,rbx
  403ea6:	mov    rcx,QWORD PTR [rsi+0x8]
  403eaa:	mov    r8,QWORD PTR [rsi+0x40]
  403eae:	mov    QWORD PTR [rsi+0x20],rax
  403eb2:	call   0x404f08
  403eb7:	jmp    0x402e6d
  403ebc:	mov    r9,QWORD PTR [rsp+0x208]
  403ec4:	mov    DWORD PTR [rsp+0x30],0x0
  403ecc:	mov    r8,r13
  403ecf:	mov    QWORD PTR [rsp+0x28],0x0
  403ed8:	mov    DWORD PTR [rsp+0x20],0x0
  403ee0:	mov    rdx,r12
  403ee3:	mov    rcx,rbx
  403ee6:	call   0x404e90
  403eeb:	test   eax,eax
  403eed:	je     0x402e6d
  403ef3:	mov    rax,QWORD PTR [rsp+0x200]
  403efb:	mov    rsi,QWORD PTR [rax+0x48]
  403eff:	mov    r8d,DWORD PTR [rsi+0x38]
  403f03:	mov    rbx,QWORD PTR [rsi+0x8]
  403f07:	test   r8d,r8d
  403f0a:	jne    0x4044fd
  403f10:	mov    ecx,DWORD PTR [rsi+0x50]
  403f13:	test   ecx,ecx
  403f15:	je     0x403f2b
  403f17:	jmp    0x4045e2
  403f1c:	nop    DWORD PTR [rax+0x0]
  403f20:	mov    rcx,rbx
  403f23:	call   0x404c58
  403f28:	mov    rbx,rax
  403f2b:	mov    rcx,rbx
  403f2e:	call   0x404c38
  403f33:	test   eax,eax
  403f35:	jne    0x403f20
  403f37:	mov    rcx,rbx
  403f3a:	call   0x404c40
  403f3f:	test   eax,eax
  403f41:	jne    0x403f20
  403f43:	lea    rdx,[rip+0x57f5]        # 0x40973f
  403f4a:	mov    rcx,rbx
  403f4d:	call   0x404c50
  403f52:	test   eax,eax
  403f54:	jne    0x402e6d
  403f5a:	mov    rcx,QWORD PTR [rsi+0x8]
  403f5e:	call   0x404c60
  403f63:	mov    rbx,rax
  403f66:	call   0x404e88
  403f6b:	lea    r9,[rip+0x5dd6]        # 0x409d48
  403f72:	mov    QWORD PTR [rsp+0x20],rbx
  403f77:	mov    rcx,QWORD PTR [rsp+0x208]
  403f7f:	mov    r8d,0x5
  403f85:	mov    edx,eax
  403f87:	call   0x404db8
  403f8c:	mov    rcx,rbx
  403f8f:	call   0x404f18
  403f94:	jmp    0x402e6d
  403f99:	cmp    QWORD PTR [rax+0x8],0x0
  403f9e:	jne    0x403c60
  403fa4:	mov    rdi,QWORD PTR [r12+0x20]
  403fa9:	jmp    0x403d93
  403fae:	lea    rcx,[rip+0x6083]        # 0x40a038
  403fb5:	jmp    0x402fdc
  403fba:	test   rdi,rdi
  403fbd:	je     0x403fa4
  403fbf:	mov    rdx,QWORD PTR [r12+0x20]
  403fc4:	test   rdx,rdx
  403fc7:	je     0x40435a
  403fcd:	mov    rax,QWORD PTR [rsp+0x200]
  403fd5:	mov    rcx,rdi
  403fd8:	mov    r8,QWORD PTR [rax+0x8]
  403fdc:	call   0x402450
  403fe1:	test   eax,eax
  403fe3:	jne    0x403d93
  403fe9:	lea    rcx,[rip+0x58e0]        # 0x4098d0
  403ff0:	mov    rsi,QWORD PTR [r12+0x20]
  403ff5:	call   0x404f78
  403ffa:	mov    r12,rax
  403ffd:	call   0x404e88
  404002:	mov    rcx,QWORD PTR [rsp+0x208]
  40400a:	mov    edx,eax
  40400c:	mov    QWORD PTR [rsp+0x48],rsi
  404011:	mov    QWORD PTR [rsp+0x40],rdi
  404016:	mov    QWORD PTR [rsp+0x38],rsi
  40401b:	mov    r9,r12
  40401e:	mov    QWORD PTR [rsp+0x30],rbp
  404023:	mov    QWORD PTR [rsp+0x28],rdi
  404028:	mov    r8d,0x5
  40402e:	mov    QWORD PTR [rsp+0x20],rbx
  404033:	call   0x404db8
  404038:	jmp    0x402e6d
  40403d:	lea    rcx,[rip+0x5a3c]        # 0x409a80
  404044:	mov    rdi,QWORD PTR [rbx+0x18]
  404048:	xor    r14d,r14d
  40404b:	call   0x404f78
  404050:	mov    rbx,rax
  404053:	call   0x404e88
  404058:	mov    rcx,QWORD PTR [rsp+0x208]
  404060:	mov    edx,eax
  404062:	mov    QWORD PTR [rsp+0x30],rdi
  404067:	mov    QWORD PTR [rsp+0x28],rsi
  40406c:	mov    QWORD PTR [rsp+0x20],rsi
  404071:	mov    r9,rbx
  404074:	mov    r8d,0x5
  40407a:	call   0x404db8
  40407f:	jmp    0x4034a1
  404084:	lea    rcx,[rip+0x58ad]        # 0x409938
  40408b:	jmp    0x403838
  404090:	lea    rcx,[rip+0x5b89]        # 0x409c20
  404097:	call   0x404f78
  40409c:	mov    rsi,rax
  40409f:	call   0x404e88
  4040a4:	mov    rcx,QWORD PTR [rsp+0x208]
  4040ac:	mov    edx,eax
  4040ae:	mov    QWORD PTR [rsp+0x28],rbp
  4040b3:	mov    QWORD PTR [rsp+0x20],rbx
  4040b8:	mov    r9,rsi
  4040bb:	mov    r8d,0x5
  4040c1:	call   0x404db8
  4040c6:	jmp    0x403c33
  4040cb:	lea    rcx,[rip+0x5986]        # 0x409a58
  4040d2:	call   0x404f78
  4040d7:	mov    rbx,rax
  4040da:	call   0x404e88
  4040df:	mov    rcx,QWORD PTR [rsp+0x208]
  4040e7:	mov    edx,eax
  4040e9:	mov    QWORD PTR [rsp+0x20],rsi
  4040ee:	mov    r9,rbx
  4040f1:	mov    r8d,0x5
  4040f7:	call   0x404db8
  4040fc:	jmp    0x4034a1
  404101:	call   0x404e88
  404106:	mov    rcx,QWORD PTR [rsp+0x208]
  40410e:	lea    r9,[rip+0x5cfb]        # 0x409e10
  404115:	mov    QWORD PTR [rsp+0x20],rsi
  40411a:	mov    r8d,0x5
  404120:	mov    edx,eax
  404122:	call   0x404db8
  404127:	jmp    0x402e6d
  40412c:	mov    ecx,0x70
  404131:	mov    r14,QWORD PTR [rbp+0x10]
  404135:	call   0x404da0
  40413a:	mov    rcx,QWORD PTR [rsi+0x8]
  40413e:	mov    rbx,rax
  404141:	call   0x404c68
  404146:	mov    QWORD PTR [rbx+0x8],rax
  40414a:	xor    eax,eax
  40414c:	test   r14,r14
  40414f:	setne  al
  404152:	mov    DWORD PTR [rbx+0x10],eax
  404155:	mov    rax,QWORD PTR [rsi+0x30]
  404159:	mov    rcx,QWORD PTR [rax]
  40415c:	mov    rdx,QWORD PTR [rax+0x8]
  404160:	call   0x404d28
  404165:	mov    QWORD PTR [rbx+0x30],rax
  404169:	mov    eax,DWORD PTR [rsi+0x38]
  40416c:	mov    rcx,QWORD PTR [rsi+0x40]
  404170:	mov    DWORD PTR [rbx+0x38],eax
  404173:	mov    eax,DWORD PTR [rsi+0x3c]
  404176:	test   rcx,rcx
  404179:	mov    DWORD PTR [rbx+0x58],0x1
  404180:	mov    DWORD PTR [rbx+0x3c],eax
  404183:	je     0x40419b
  404185:	call   0x404c88
  40418a:	mov    rcx,QWORD PTR [rsi+0x48]
  40418e:	mov    QWORD PTR [rbx+0x40],rax
  404192:	call   0x404c88
  404197:	mov    QWORD PTR [rbx+0x48],rax
  40419b:	mov    rax,QWORD PTR [rsp+0x200]
  4041a3:	mov    r9,QWORD PTR [rsp+0x208]
  4041ab:	mov    r8,r12
  4041ae:	mov    rdx,r13
  4041b1:	mov    rcx,rbx
  4041b4:	mov    QWORD PTR [rax+0x48],rbx
  4041b8:	call   0x402360
  4041bd:	mov    rbx,QWORD PTR [rsp+0x200]
  4041c5:	mov    rcx,rdi
  4041c8:	mov    QWORD PTR [rbx+0x58],rax
  4041cc:	mov    rbx,QWORD PTR [rbx+0x48]
  4041d0:	call   0x404d58
  4041d5:	mov    rcx,QWORD PTR [rbp+0x28]
  4041d9:	mov    rdx,rax
  4041dc:	mov    r8,rbx
  4041df:	call   0x404f08
  4041e4:	jmp    0x402e6d
  4041e9:	lea    rcx,[rip+0x5a30]        # 0x409c20
  4041f0:	call   0x404f78
  4041f5:	mov    rsi,rax
  4041f8:	call   0x404e88
  4041fd:	mov    rcx,QWORD PTR [rsp+0x208]
  404205:	mov    edx,eax
  404207:	mov    QWORD PTR [rsp+0x28],rbp
  40420c:	mov    QWORD PTR [rsp+0x20],rbx
  404211:	mov    r9,rsi
  404214:	mov    r8d,0x5
  40421a:	call   0x404db8
  40421f:	jmp    0x4039e6
  404224:	test   dl,dl
  404226:	je     0x40471a
  40422c:	mov    rdx,r13
  40422f:	mov    rcx,r15
  404232:	mov    DWORD PTR [rsp+0xa0],r9d
  40423a:	call   0x404f00
  40423f:	mov    r9d,DWORD PTR [rsp+0xa0]
  404247:	test   rax,rax
  40424a:	je     0x4048a9
  404250:	lea    rdx,[rip+0x54e8]        # 0x40973f
  404257:	lea    r13,[rip+0x54de]        # 0x40973c
  40425e:	test   r14b,r14b
  404261:	mov    ecx,0x70
  404266:	mov    r14,QWORD PTR [rdi+0x10]
  40426a:	mov    DWORD PTR [rsp+0xa0],r9d
  404272:	cmove  r13,rdx
  404276:	mov    rbp,QWORD PTR [rax]
  404279:	call   0x404da0
  40427e:	mov    rcx,r13
  404281:	mov    r12,rax
  404284:	call   0x404c30
  404289:	mov    r9d,DWORD PTR [rsp+0xa0]
  404291:	mov    QWORD PTR [r12+0x8],rax
  404296:	xor    eax,eax
  404298:	test   r14,r14
  40429b:	mov    DWORD PTR [r12+0x3c],ebx
  4042a0:	mov    DWORD PTR [r12+0x68],0x0
  4042a9:	setne  al
  4042ac:	test   rbp,rbp
  4042af:	mov    DWORD PTR [r12+0x6c],0x0
  4042b8:	mov    DWORD PTR [r12+0x10],eax
  4042bd:	mov    DWORD PTR [r12+0x38],r9d
  4042c2:	je     0x40347b
  4042c8:	mov    rdx,QWORD PTR [rbp+0x8]
  4042cc:	mov    rcx,QWORD PTR [rbp+0x0]
  4042d0:	call   0x404d28
  4042d5:	mov    QWORD PTR [r12+0x30],rax
  4042da:	jmp    0x403487
  4042df:	mov    rbp,QWORD PTR [rsi+0x30]
  4042e3:	xor    r9d,r9d
  4042e6:	mov    r8,rdi
  4042e9:	mov    rdx,QWORD PTR [rbp+0x8]
  4042ed:	mov    rcx,QWORD PTR [rbp+0x0]
  4042f1:	shr    rdx,0x2
  4042f5:	call   0x402250
  4042fa:	cmp    eax,0xffffffff
  4042fd:	je     0x4044b7
  404303:	lea    rdi,[rsp+0xd0]
  40430b:	mov    rcx,rbx
  40430e:	mov    r8d,0x1
  404314:	mov    DWORD PTR [rsp+0xb8],eax
  40431b:	mov    rdx,rdi
  40431e:	call   0x4021d0
  404323:	lea    rdx,[rsp+0xb8]
  40432b:	mov    ebx,eax
  40432d:	mov    r8d,0x4
  404333:	mov    rcx,rbp
  404336:	call   0x404d48
  40433b:	lea    r8d,[rbx*4+0x0]
  404343:	mov    rdx,rdi
  404346:	mov    rcx,rbp
  404349:	call   0x404d48
  40434e:	mov    DWORD PTR [rsi+0x54],0x1
  404355:	jmp    0x402e6d
  40435a:	lea    rcx,[rip+0x551f]        # 0x409880
  404361:	call   0x404f78
  404366:	mov    rsi,rax
  404369:	call   0x404e88
  40436e:	mov    QWORD PTR [rsp+0x28],rbp
  404373:	mov    edx,eax
  404375:	mov    rcx,QWORD PTR [rsp+0x208]
  40437d:	mov    QWORD PTR [rsp+0x20],rbx
  404382:	mov    r9,rsi
  404385:	mov    r8d,0x5
  40438b:	call   0x404db8
  404390:	jmp    0x402e6d
  404395:	mov    ecx,0x70
  40439a:	call   0x404da0
  40439f:	mov    rcx,rdi
  4043a2:	mov    rbx,rax
  4043a5:	call   0x404d58
  4043aa:	mov    QWORD PTR [rbx],rax
  4043ad:	mov    rcx,QWORD PTR [rsi+0x28]
  4043b1:	mov    r8,rbx
  4043b4:	mov    rdx,rbp
  4043b7:	call   0x404f08
  4043bc:	jmp    0x402e6d
  4043c1:	mov    rcx,QWORD PTR [rbx+0x8]
  4043c5:	mov    r8d,0x1
  4043cb:	movzx  edx,BYTE PTR [rcx]
  4043ce:	cmp    dl,BYTE PTR [rsp+0xd0]
  4043d5:	je     0x40462e
  4043db:	cmp    BYTE PTR [rax+0x18],dl
  4043de:	je     0x404631
  4043e4:	add    r8d,0x1
  4043e8:	add    rax,0x18
  4043ec:	cmp    r8d,0x8
  4043f0:	jne    0x4043db
  4043f2:	call   0x404c60
  4043f7:	mov    rbx,rax
  4043fa:	call   0x404e88
  4043ff:	mov    QWORD PTR [rsp+0x20],rbx
  404404:	lea    r9,[rip+0x5c4d]        # 0x40a058
  40440b:	jmp    0x403f77
  404410:	lea    rdx,[rip+0x5553]        # 0x40996a
  404417:	mov    rcx,r13
  40441a:	call   0x404d70
  40441f:	test   eax,eax
  404421:	lea    rcx,[rip+0x5548]        # 0x409970
  404428:	jne    0x403dcf
  40442e:	jmp    0x403838
  404433:	lea    rcx,[rip+0x53ae]        # 0x4097e8
  40443a:	call   0x404f78
  40443f:	mov    rsi,rax
  404442:	call   0x404e88
  404447:	mov    QWORD PTR [rsp+0x28],rdi
  40444c:	mov    edx,eax
  40444e:	jmp    0x404375
  404453:	call   0x404e88
  404458:	mov    rcx,QWORD PTR [rsp+0x208]
  404460:	lea    r9,[rip+0x5a29]        # 0x409e90
  404467:	mov    QWORD PTR [rsp+0x28],rbx
  40446c:	mov    QWORD PTR [rsp+0x20],rbx
  404471:	mov    r8d,0x5
  404477:	mov    edx,eax
  404479:	call   0x404db8
  40447e:	jmp    0x402e6d
  404483:	lea    rcx,[rip+0x5656]        # 0x409ae0
  40448a:	xor    r14d,r14d
  40448d:	call   0x404f78
  404492:	mov    rbx,rax
  404495:	call   0x404e88
  40449a:	mov    rcx,QWORD PTR [rsp+0x208]
  4044a2:	mov    edx,eax
  4044a4:	mov    r9,rbx
  4044a7:	mov    r8d,0x6
  4044ad:	call   0x404db8
  4044b2:	jmp    0x4034a1
  4044b7:	cmp    DWORD PTR [rsi+0x38],0x0
  4044bb:	lea    rax,[rip+0x527f]        # 0x409741
  4044c2:	lea    rbx,[rip+0x5288]        # 0x409751
  4044c9:	cmovne rbx,rax
  4044cd:	call   0x404e88
  4044d2:	mov    rcx,QWORD PTR [rsp+0x208]
  4044da:	lea    r9,[rip+0x5a1f]        # 0x409f00
  4044e1:	mov    QWORD PTR [rsp+0x28],rbx
  4044e6:	mov    QWORD PTR [rsp+0x20],rdi
  4044eb:	mov    r8d,0x5
  4044f1:	mov    edx,eax
  4044f3:	call   0x404db8
  4044f8:	jmp    0x402e6d
  4044fd:	call   0x404e88
  404502:	mov    rcx,QWORD PTR [rsp+0x208]
  40450a:	lea    r9,[rip+0x57b7]        # 0x409cc8
  404511:	mov    r8d,0x5
  404517:	mov    edx,eax
  404519:	call   0x404db0
  40451e:	jmp    0x402e6d
  404523:	lea    rcx,[rip+0x568e]        # 0x409bb8
  40452a:	call   0x404f78
  40452f:	mov    rbx,rax
  404532:	call   0x404e88
  404537:	mov    rcx,QWORD PTR [rsp+0x208]
  40453f:	mov    edx,eax
  404541:	mov    r9,rbx
  404544:	mov    r8d,0x5
  40454a:	call   0x404db0
  40454f:	jmp    0x402e6d
  404554:	lea    rdx,[rsp+0xd0]
  40455c:	xor    r8d,r8d
  40455f:	mov    rcx,rdi
  404562:	call   0x404f58
  404567:	mov    rsi,rax
  40456a:	mov    rax,QWORD PTR [rsp+0xd0]
  404572:	cmp    BYTE PTR [rax],0x0
  404575:	jne    0x4046d1
  40457b:	cmp    DWORD PTR [rbp+0x8],0x0
  40457f:	jne    0x4046d1
  404585:	mov    eax,0x80000000
  40458a:	mov    edx,0xffffffff
  40458f:	add    rax,rsi
  404592:	cmp    rax,rdx
  404595:	seta   al
  404598:	test   al,al
  40459a:	je     0x40473f
  4045a0:	call   0x404e88
  4045a5:	mov    rcx,QWORD PTR [rsp+0x208]
  4045ad:	lea    r9,[rip+0x599b]        # 0x409f4f
  4045b4:	mov    r8d,0x5
  4045ba:	mov    edx,eax
  4045bc:	call   0x404db8
  4045c1:	jmp    0x402e6d
  4045c6:	lea    rdx,[rip+0x544b]        # 0x409a18
  4045cd:	mov    rcx,r13
  4045d0:	call   0x404d78
  4045d5:	test   eax,eax
  4045d7:	jne    0x403df9
  4045dd:	jmp    0x403e0b
  4045e2:	call   0x404e88
  4045e7:	mov    rcx,QWORD PTR [rsp+0x208]
  4045ef:	lea    r9,[rip+0x5722]        # 0x409d18
  4045f6:	mov    r8d,0x5
  4045fc:	mov    edx,eax
  4045fe:	call   0x404db0
  404603:	jmp    0x402e6d
  404608:	call   0x404e88
  40460d:	mov    rcx,QWORD PTR [rsp+0x208]
  404615:	lea    r9,[rip+0x575c]        # 0x409d78
  40461c:	mov    r8d,0x5
  404622:	mov    edx,eax
  404624:	call   0x404db0
  404629:	jmp    0x402e6d
  40462e:	xor    r8d,r8d
  404631:	test   r10,r10
  404634:	je     0x40486d
  40463a:	test   rbp,rbp
  40463d:	je     0x404859
  404643:	mov    rax,QWORD PTR [rsp+0x208]
  40464b:	xor    r9d,r9d
  40464e:	xor    r8d,r8d
  404651:	mov    rdx,r10
  404654:	mov    QWORD PTR [rsp+0x20],rax
  404659:	call   0x404c90
  40465e:	test   rax,rax
  404661:	mov    QWORD PTR [rbx+0x40],rax
  404665:	je     0x402e6d
  40466b:	mov    rax,QWORD PTR [rsp+0x208]
  404673:	mov    rcx,QWORD PTR [rbx+0x8]
  404677:	xor    r9d,r9d
  40467a:	xor    r8d,r8d
  40467d:	mov    rdx,rbp
  404680:	mov    QWORD PTR [rsp+0x20],rax
  404685:	call   0x404c90
  40468a:	test   rax,rax
  40468d:	mov    QWORD PTR [rbx+0x48],rax
  404691:	je     0x402e6d
  404697:	mov    rcx,QWORD PTR [rbx+0x40]
  40469b:	mov    rdx,rax
  40469e:	call   0x404cd8
  4046a3:	test   eax,eax
  4046a5:	jle    0x404844
  4046ab:	call   0x404e88
  4046b0:	mov    rcx,QWORD PTR [rsp+0x208]
  4046b8:	lea    r9,[rip+0x55d1]        # 0x409c90
  4046bf:	mov    r8d,0x5
  4046c5:	mov    edx,eax
  4046c7:	call   0x404db8
  4046cc:	jmp    0x402e6d
  4046d1:	mov    eax,0xffffffff
  4046d6:	cmp    rsi,rax
  4046d9:	seta   al
  4046dc:	jmp    0x404598
  4046e1:	lea    rcx,[rip+0x5470]        # 0x409b58
  4046e8:	xor    r14d,r14d
  4046eb:	call   0x404f78
  4046f0:	mov    rbx,rax
  4046f3:	call   0x404e88
  4046f8:	mov    rcx,QWORD PTR [rsp+0x208]
  404700:	mov    edx,eax
  404702:	mov    QWORD PTR [rsp+0x20],rbp
  404707:	mov    r9,rbx
  40470a:	mov    r8d,0x5
  404710:	call   0x404db8
  404715:	jmp    0x4034a1
  40471a:	mov    rcx,QWORD PTR [rsp+0xa0]
  404722:	mov    rdx,r12
  404725:	mov    DWORD PTR [rsp+0xac],r9d
  40472d:	call   0x404f00
  404732:	mov    r9d,DWORD PTR [rsp+0xac]
  40473a:	jmp    0x404247
  40473f:	mov    rcx,QWORD PTR [rbp+0x0]
  404743:	mov    r8,rbx
  404746:	lea    rdx,[rcx+0x8]
  40474a:	call   0x402d30
  40474f:	test   eax,eax
  404751:	jne    0x4047ee
  404757:	mov    rcx,QWORD PTR [rbp+0x0]
  40475b:	mov    eax,esi
  40475d:	mov    r11,QWORD PTR [rcx+0x8]
  404761:	mov    rdx,QWORD PTR [rcx]
  404764:	shr    r11,0x2
  404768:	test   r11d,r11d
  40476b:	je     0x404881
  404771:	mov    r10,rdx
  404774:	xor    r9d,r9d
  404777:	jmp    0x404791
  404779:	nop    DWORD PTR [rax+0x0]
  404780:	add    r9d,0x1
  404784:	add    r10,0x4
  404788:	cmp    r9d,r11d
  40478b:	je     0x404881
  404791:	cmp    eax,DWORD PTR [r10]
  404794:	jne    0x404780
  404796:	test   r9d,r9d
  404799:	je     0x4047a2
  40479b:	cmp    BYTE PTR [r10-0x1],0xff
  4047a0:	jne    0x404780
  4047a2:	cmp    BYTE PTR [r10+0x4],0xff
  4047a7:	jne    0x404780
  4047a9:	test   r9d,r9d
  4047ac:	js     0x404881
  4047b2:	movsxd r9,r9d
  4047b5:	lea    rax,[rdx+r9*4+0x5]
  4047ba:	test   rax,rax
  4047bd:	je     0x404881
  4047c3:	call   0x404e88
  4047c8:	mov    rcx,QWORD PTR [rsp+0x208]
  4047d0:	lea    r9,[rip+0x57b6]        # 0x409f8d
  4047d7:	mov    QWORD PTR [rsp+0x20],rdi
  4047dc:	mov    r8d,0x5
  4047e2:	mov    edx,eax
  4047e4:	call   0x404db8
  4047e9:	jmp    0x402e6d
  4047ee:	call   0x404e88
  4047f3:	mov    rcx,QWORD PTR [rsp+0x208]
  4047fb:	lea    r9,[rip+0x5766]        # 0x409f68
  404802:	mov    QWORD PTR [rsp+0x20],rbx
  404807:	mov    r8d,0x5
  40480d:	mov    edx,eax
  40480f:	call   0x404db8
  404814:	jmp    0x402e6d
  404819:	call   0x404e88
  40481e:	mov    rcx,QWORD PTR [rsp+0x208]
  404826:	lea    r9,[rip+0x56ab]        # 0x409ed8
  40482d:	mov    QWORD PTR [rsp+0x20],rbx
  404832:	mov    r8d,0x5
  404838:	mov    edx,eax
  40483a:	call   0x404db8
  40483f:	jmp    0x402e6d
  404844:	mov    rdx,QWORD PTR [rsp+0x208]
  40484c:	mov    rcx,rbx
  40484f:	call   0x402930
  404854:	jmp    0x402e6d
  404859:	movsxd rax,r8d
  40485c:	imul   rax,rax,0x18
  404860:	mov    rbp,QWORD PTR [rsp+rax*1+0xe0]
  404868:	jmp    0x404643
  40486d:	movsxd rax,r8d
  404870:	imul   rax,rax,0x18
  404874:	mov    r10,QWORD PTR [rsp+rax*1+0xd8]
  40487c:	jmp    0x40463a
  404881:	cmp    DWORD PTR [rbp+0x8],0x0
  404885:	je     0x404899
  404887:	test   rsi,rsi
  40488a:	je     0x402e6d
  404890:	lea    rax,[rsi-0x1]
  404894:	test   rax,rsi
  404897:	jne    0x404900
  404899:	mov    r8d,esi
  40489c:	mov    rdx,rbx
  40489f:	call   0x402300
  4048a4:	jmp    0x402e6d
  4048a9:	lea    rcx,[rip+0x5288]        # 0x409b38
  4048b0:	lea    rax,[rip+0x4c1e]        # 0x4094d5
  4048b7:	lea    rbx,[rip+0x4c12]        # 0x4094d0
  4048be:	test   r14b,r14b
  4048c1:	cmove  r12,r13
  4048c5:	cmovne rbx,rax
  4048c9:	xor    r14d,r14d
  4048cc:	call   0x404f78
  4048d1:	mov    rsi,rax
  4048d4:	call   0x404e88
  4048d9:	mov    rcx,QWORD PTR [rsp+0x208]
  4048e1:	mov    edx,eax
  4048e3:	mov    QWORD PTR [rsp+0x28],r12
  4048e8:	mov    QWORD PTR [rsp+0x20],rbx
  4048ed:	mov    r9,rsi
  4048f0:	mov    r8d,0x5
  4048f6:	call   0x404db8
  4048fb:	jmp    0x4034a1
  404900:	call   0x404e88
  404905:	mov    rcx,QWORD PTR [rsp+0x208]
  40490d:	lea    r9,[rip+0x569c]        # 0x409fb0
  404914:	mov    r8d,0x5
  40491a:	mov    edx,eax
  40491c:	call   0x404db8
  404921:	jmp    0x402e6d
  404926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404930:	push   r13
  404932:	push   r12
  404934:	push   rbp
  404935:	push   rdi
  404936:	push   rsi
  404937:	push   rbx
  404938:	sub    rsp,0xb8
  40493f:	mov    rbx,rdx
  404942:	mov    rdx,rcx
  404945:	mov    rcx,QWORD PTR [r8+0x8]
  404949:	mov    rsi,r8
  40494c:	call   0x401ad0
  404951:	mov    rdx,QWORD PTR [rsi+0x10]
  404955:	mov    rcx,rax
  404958:	mov    rdi,rax
  40495b:	call   0x401cb0
  404960:	mov    rcx,QWORD PTR [rbx+0x60]
  404964:	test   rcx,rcx
  404967:	je     0x4049b0
  404969:	call   0x404c88
  40496e:	mov    rcx,rdi
  404971:	mov    rdx,rax
  404974:	call   0x401b60
  404979:	cmp    BYTE PTR [rbx+0x14],0x0
  40497d:	je     0x404986
  40497f:	mov    DWORD PTR [rsi+0x18],0x1
  404986:	mov    rdx,QWORD PTR [rbx]
  404989:	test   rdx,rdx
  40498c:	je     0x40499f
  40498e:	mov    rcx,QWORD PTR [rsi]
  404991:	call   0x404f00
  404996:	test   rax,rax
  404999:	je     0x404a50
  40499f:	add    rsp,0xb8
  4049a6:	pop    rbx
  4049a7:	pop    rsi
  4049a8:	pop    rdi
  4049a9:	pop    rbp
  4049aa:	pop    r12
  4049ac:	pop    r13
  4049ae:	ret    
  4049af:	nop
  4049b0:	mov    rcx,QWORD PTR [rbx]
  4049b3:	test   rcx,rcx
  4049b6:	je     0x4049d0
  4049b8:	call   0x404ca0
  4049bd:	mov    QWORD PTR [rbx+0x60],rax
  4049c1:	mov    rcx,rax
  4049c4:	call   0x404c80
  4049c9:	mov    rcx,QWORD PTR [rbx+0x60]
  4049cd:	jmp    0x404969
  4049cf:	nop
  4049d0:	mov    edx,DWORD PTR [rbx+0x5c]
  4049d3:	test   edx,edx
  4049d5:	je     0x404a64
  4049db:	lea    rbp,[rsp+0x30]
  4049e0:	lea    rdx,[rip+0x571d]        # 0x40a104
  4049e7:	mov    rcx,rbp
  4049ea:	call   0x404cf0
  4049ef:	mov    rdx,QWORD PTR [rbx+0x28]
  4049f3:	mov    rcx,rbp
  4049f6:	call   0x404d00
  4049fb:	cmp    BYTE PTR [rbx+0x14],0x0
  4049ff:	jne    0x404b00
  404a05:	mov    rax,QWORD PTR [rbx+0x30]
  404a09:	mov    r12,QWORD PTR [rax+0x8]
  404a0d:	test   r12,r12
  404a10:	jne    0x404a80
  404a12:	mov    r9,QWORD PTR [rbx+0x40]
  404a16:	mov    rax,QWORD PTR [rbx+0x48]
  404a1a:	test   r9,r9
  404a1d:	je     0x404a70
  404a1f:	lea    rdx,[rip+0x56f3]        # 0x40a119
  404a26:	mov    QWORD PTR [rsp+0x20],rax
  404a2b:	mov    r8d,0x72
  404a31:	mov    rcx,rbp
  404a34:	call   0x404d08
  404a39:	mov    rcx,rbp
  404a3c:	call   0x404cf8
  404a41:	mov    QWORD PTR [rbx+0x60],rax
  404a45:	jmp    0x4049c1
  404a4a:	nop    WORD PTR [rax+rax*1+0x0]
  404a50:	mov    rdx,QWORD PTR [rbx]
  404a53:	lea    rcx,[rip+0x56ce]        # 0x40a128
  404a5a:	call   0x404e10
  404a5f:	jmp    0x40499f
  404a64:	mov    DWORD PTR [rbx+0x5c],0x1
  404a6b:	jmp    0x4049db
  404a70:	test   rax,rax
  404a73:	jne    0x404a1f
  404a75:	jmp    0x404a39
  404a77:	nop    WORD PTR [rax+rax*1+0x0]
  404a80:	lea    rcx,[rip+0x5688]        # 0x40a10f
  404a87:	mov    r13,QWORD PTR [rax]
  404a8a:	call   0x404c70
  404a8f:	mov    rdx,QWORD PTR [rip+0x5fca]        # 0x40aa60
  404a96:	mov    r8,r12
  404a99:	mov    r9d,0x1
  404a9f:	mov    rcx,rax
  404aa2:	mov    QWORD PTR [rsp+0x28],r13
  404aa7:	mov    QWORD PTR [rsp+0x20],rdx
  404aac:	mov    rdx,r13
  404aaf:	call   0x404ca8
  404ab4:	mov    rcx,QWORD PTR [rbx+0x30]
  404ab8:	xor    edx,edx
  404aba:	mov    r12,rax
  404abd:	call   0x404d38
  404ac2:	mov    eax,DWORD PTR [rbx+0x3c]
  404ac5:	mov    QWORD PTR [rbx+0x30],0x0
  404acd:	mov    r8d,0x66
  404ad3:	test   eax,eax
  404ad5:	jne    0x404ae6
  404ad7:	cmp    DWORD PTR [rbx+0x38],0x1
  404adb:	sbb    r8d,r8d
  404ade:	and    r8d,0xfffffffe
  404ae2:	add    r8d,0x65
  404ae6:	lea    rdx,[rip+0x5625]        # 0x40a112
  404aed:	mov    r9,r12
  404af0:	mov    rcx,rbp
  404af3:	call   0x404d08
  404af8:	jmp    0x404a12
  404afd:	nop    DWORD PTR [rax]
  404b00:	mov    rax,QWORD PTR [rip+0x9aad]        # 0x40e5b4
  404b07:	mov    r13,QWORD PTR [rbx+0x20]
  404b0b:	mov    r12,QWORD PTR [rax]
  404b0e:	mov    rax,QWORD PTR [r13+0x0]
  404b12:	movzx  edx,BYTE PTR [rax]
  404b15:	test   BYTE PTR [r12+rdx*2+0x1],0x1
  404b1b:	je     0x404c10
  404b21:	add    rax,0x1
  404b25:	xor    r8d,r8d
  404b28:	nop    DWORD PTR [rax+rax*1+0x0]
  404b30:	movzx  edx,BYTE PTR [rax]
  404b33:	add    r8d,0x1
  404b37:	add    rax,0x1
  404b3b:	test   BYTE PTR [r12+rdx*2+0x1],0x1
  404b41:	jne    0x404b30
  404b43:	movsxd r8,r8d
  404b46:	xor    edx,edx
  404b48:	mov    rcx,r13
  404b4b:	call   0x404d40
  404b50:	mov    rdx,QWORD PTR [r13+0x8]
  404b54:	test   rdx,rdx
  404b57:	je     0x404b91
  404b59:	sub    edx,0x1
  404b5c:	movsxd rax,edx
  404b5f:	add    rax,QWORD PTR [r13+0x0]
  404b63:	movzx  ecx,BYTE PTR [rax]
  404b66:	test   BYTE PTR [r12+rcx*2+0x1],0x1
  404b6c:	je     0x404b83
  404b6e:	xchg   ax,ax
  404b70:	movzx  ecx,BYTE PTR [rax-0x1]
  404b74:	sub    edx,0x1
  404b77:	sub    rax,0x1
  404b7b:	test   BYTE PTR [r12+rcx*2+0x1],0x1
  404b81:	jne    0x404b70
  404b83:	add    edx,0x1
  404b86:	mov    rcx,r13
  404b89:	movsxd rdx,edx
  404b8c:	call   0x404d18
  404b91:	mov    r12,QWORD PTR [rbx+0x18]
  404b95:	test   r12,r12
  404b98:	je     0x404bcf
  404b9a:	mov    rcx,r12
  404b9d:	call   0x406510
  404ba2:	movsxd rdx,eax
  404ba5:	lea    r8d,[rax+0x1]
  404ba9:	mov    BYTE PTR [r12+rdx*1],0x4
  404bae:	mov    rdx,QWORD PTR [rbx+0x18]
  404bb2:	mov    rcx,QWORD PTR [rbx+0x20]
  404bb6:	movsxd r8,r8d
  404bb9:	call   0x404d20
  404bbe:	mov    rcx,QWORD PTR [rbx+0x18]
  404bc2:	call   0x404f18
  404bc7:	mov    QWORD PTR [rbx+0x18],0x0
  404bcf:	mov    rax,QWORD PTR [rbx+0x20]
  404bd3:	movsx  r9d,BYTE PTR [rbx+0x14]
  404bd8:	lea    rdx,[rip+0x5527]        # 0x40a106
  404bdf:	mov    r8d,0x6c
  404be5:	mov    rcx,rbp
  404be8:	mov    rax,QWORD PTR [rax]
  404beb:	mov    QWORD PTR [rsp+0x20],rax
  404bf0:	call   0x404d08
  404bf5:	mov    rcx,QWORD PTR [rbx+0x20]
  404bf9:	mov    edx,0x1
  404bfe:	call   0x404d38
  404c03:	mov    QWORD PTR [rbx+0x20],0x0
  404c0b:	jmp    0x404a05
  404c10:	xor    r8d,r8d
  404c13:	jmp    0x404b46
  404c18:	nop
  404c19:	nop
  404c1a:	nop
  404c1b:	nop
  404c1c:	nop
  404c1d:	nop
  404c1e:	nop
  404c1f:	nop
  404c20:	jmp    QWORD PTR [rip+0x9cc6]        # 0x40e8ec
  404c26:	nop
  404c27:	nop
  404c28:	jmp    QWORD PTR [rip+0x9cb6]        # 0x40e8e4
  404c2e:	nop
  404c2f:	nop
  404c30:	jmp    QWORD PTR [rip+0x9ca6]        # 0x40e8dc
  404c36:	nop
  404c37:	nop
  404c38:	jmp    QWORD PTR [rip+0x9c96]        # 0x40e8d4
  404c3e:	nop
  404c3f:	nop
  404c40:	jmp    QWORD PTR [rip+0x9c86]        # 0x40e8cc
  404c46:	nop
  404c47:	nop
  404c48:	jmp    QWORD PTR [rip+0x9c76]        # 0x40e8c4
  404c4e:	nop
  404c4f:	nop
  404c50:	jmp    QWORD PTR [rip+0x9c66]        # 0x40e8bc
  404c56:	nop
  404c57:	nop
  404c58:	jmp    QWORD PTR [rip+0x9c56]        # 0x40e8b4
  404c5e:	nop
  404c5f:	nop
  404c60:	jmp    QWORD PTR [rip+0x9c46]        # 0x40e8ac
  404c66:	nop
  404c67:	nop
  404c68:	jmp    QWORD PTR [rip+0x9c36]        # 0x40e8a4
  404c6e:	nop
  404c6f:	nop
  404c70:	jmp    QWORD PTR [rip+0x9c26]        # 0x40e89c
  404c76:	nop
  404c77:	nop
  404c78:	jmp    QWORD PTR [rip+0x9c16]        # 0x40e894
  404c7e:	nop
  404c7f:	nop
  404c80:	jmp    QWORD PTR [rip+0x9c06]        # 0x40e88c
  404c86:	nop
  404c87:	nop
  404c88:	jmp    QWORD PTR [rip+0x9bf6]        # 0x40e884
  404c8e:	nop
  404c8f:	nop
  404c90:	jmp    QWORD PTR [rip+0x9be6]        # 0x40e87c
  404c96:	nop
  404c97:	nop
  404c98:	jmp    QWORD PTR [rip+0x9bd6]        # 0x40e874
  404c9e:	nop
  404c9f:	nop
  404ca0:	jmp    QWORD PTR [rip+0x9bc6]        # 0x40e86c
  404ca6:	nop
  404ca7:	nop
  404ca8:	jmp    QWORD PTR [rip+0x9bb6]        # 0x40e864
  404cae:	nop
  404caf:	nop
  404cb0:	jmp    QWORD PTR [rip+0x9ba6]        # 0x40e85c
  404cb6:	nop
  404cb7:	nop
  404cb8:	jmp    QWORD PTR [rip+0x9b96]        # 0x40e854
  404cbe:	nop
  404cbf:	nop
  404cc0:	jmp    QWORD PTR [rip+0x9b86]        # 0x40e84c
  404cc6:	nop
  404cc7:	nop
  404cc8:	jmp    QWORD PTR [rip+0x9b76]        # 0x40e844
  404cce:	nop
  404ccf:	nop
  404cd0:	jmp    QWORD PTR [rip+0x9b66]        # 0x40e83c
  404cd6:	nop
  404cd7:	nop
  404cd8:	jmp    QWORD PTR [rip+0x9b56]        # 0x40e834
  404cde:	nop
  404cdf:	nop
  404ce0:	jmp    QWORD PTR [rip+0x9b46]        # 0x40e82c
  404ce6:	nop
  404ce7:	nop
  404ce8:	jmp    QWORD PTR [rip+0x9b36]        # 0x40e824
  404cee:	nop
  404cef:	nop
  404cf0:	jmp    QWORD PTR [rip+0x9b26]        # 0x40e81c
  404cf6:	nop
  404cf7:	nop
  404cf8:	jmp    QWORD PTR [rip+0x9b16]        # 0x40e814
  404cfe:	nop
  404cff:	nop
  404d00:	jmp    QWORD PTR [rip+0x9b06]        # 0x40e80c
  404d06:	nop
  404d07:	nop
  404d08:	jmp    QWORD PTR [rip+0x9af6]        # 0x40e804
  404d0e:	nop
  404d0f:	nop
  404d10:	jmp    QWORD PTR [rip+0x9ae6]        # 0x40e7fc
  404d16:	nop
  404d17:	nop
  404d18:	jmp    QWORD PTR [rip+0x9ad6]        # 0x40e7f4
  404d1e:	nop
  404d1f:	nop
  404d20:	jmp    QWORD PTR [rip+0x9ac6]        # 0x40e7ec
  404d26:	nop
  404d27:	nop
  404d28:	jmp    QWORD PTR [rip+0x9ab6]        # 0x40e7e4
  404d2e:	nop
  404d2f:	nop
  404d30:	jmp    QWORD PTR [rip+0x9aa6]        # 0x40e7dc
  404d36:	nop
  404d37:	nop
  404d38:	jmp    QWORD PTR [rip+0x9a96]        # 0x40e7d4
  404d3e:	nop
  404d3f:	nop
  404d40:	jmp    QWORD PTR [rip+0x9a86]        # 0x40e7cc
  404d46:	nop
  404d47:	nop
  404d48:	jmp    QWORD PTR [rip+0x9a76]        # 0x40e7c4
  404d4e:	nop
  404d4f:	nop
  404d50:	jmp    QWORD PTR [rip+0x9a66]        # 0x40e7bc
  404d56:	nop
  404d57:	nop
  404d58:	jmp    QWORD PTR [rip+0x9a56]        # 0x40e7b4
  404d5e:	nop
  404d5f:	nop
  404d60:	jmp    QWORD PTR [rip+0x9a46]        # 0x40e7ac
  404d66:	nop
  404d67:	nop
  404d68:	jmp    QWORD PTR [rip+0x9a36]        # 0x40e7a4
  404d6e:	nop
  404d6f:	nop
  404d70:	jmp    QWORD PTR [rip+0x9a26]        # 0x40e79c
  404d76:	nop
  404d77:	nop
  404d78:	jmp    QWORD PTR [rip+0x9a16]        # 0x40e794
  404d7e:	nop
  404d7f:	nop
  404d80:	jmp    QWORD PTR [rip+0x9a06]        # 0x40e78c
  404d86:	nop
  404d87:	nop
  404d88:	jmp    QWORD PTR [rip+0x99f6]        # 0x40e784
  404d8e:	nop
  404d8f:	nop
  404d90:	jmp    QWORD PTR [rip+0x99e6]        # 0x40e77c
  404d96:	nop
  404d97:	nop
  404d98:	jmp    QWORD PTR [rip+0x99d6]        # 0x40e774
  404d9e:	nop
  404d9f:	nop
  404da0:	jmp    QWORD PTR [rip+0x99c6]        # 0x40e76c
  404da6:	nop
  404da7:	nop
  404da8:	jmp    QWORD PTR [rip+0x99b6]        # 0x40e764
  404dae:	nop
  404daf:	nop
  404db0:	jmp    QWORD PTR [rip+0x99a6]        # 0x40e75c
  404db6:	nop
  404db7:	nop
  404db8:	jmp    QWORD PTR [rip+0x9996]        # 0x40e754
  404dbe:	nop
  404dbf:	nop
  404dc0:	jmp    QWORD PTR [rip+0x9986]        # 0x40e74c
  404dc6:	nop
  404dc7:	nop
  404dc8:	jmp    QWORD PTR [rip+0x9976]        # 0x40e744
  404dce:	nop
  404dcf:	nop
  404dd0:	jmp    QWORD PTR [rip+0x9966]        # 0x40e73c
  404dd6:	nop
  404dd7:	nop
  404dd8:	jmp    QWORD PTR [rip+0x9956]        # 0x40e734
  404dde:	nop
  404ddf:	nop
  404de0:	jmp    QWORD PTR [rip+0x9946]        # 0x40e72c
  404de6:	nop
  404de7:	nop
  404de8:	jmp    QWORD PTR [rip+0x9936]        # 0x40e724
  404dee:	nop
  404def:	nop
  404df0:	jmp    QWORD PTR [rip+0x9926]        # 0x40e71c
  404df6:	nop
  404df7:	nop
  404df8:	jmp    QWORD PTR [rip+0x9916]        # 0x40e714
  404dfe:	nop
  404dff:	nop
  404e00:	jmp    QWORD PTR [rip+0x9906]        # 0x40e70c
  404e06:	nop
  404e07:	nop
  404e08:	jmp    QWORD PTR [rip+0x98f6]        # 0x40e704
  404e0e:	nop
  404e0f:	nop
  404e10:	jmp    QWORD PTR [rip+0x98e6]        # 0x40e6fc
  404e16:	nop
  404e17:	nop
  404e18:	jmp    QWORD PTR [rip+0x98d6]        # 0x40e6f4
  404e1e:	nop
  404e1f:	nop
  404e20:	jmp    QWORD PTR [rip+0x98c6]        # 0x40e6ec
  404e26:	nop
  404e27:	nop
  404e28:	jmp    QWORD PTR [rip+0x98b6]        # 0x40e6e4
  404e2e:	nop
  404e2f:	nop
  404e30:	jmp    QWORD PTR [rip+0x98a6]        # 0x40e6dc
  404e36:	nop
  404e37:	nop
  404e38:	jmp    QWORD PTR [rip+0x9896]        # 0x40e6d4
  404e3e:	nop
  404e3f:	nop
  404e40:	jmp    QWORD PTR [rip+0x9886]        # 0x40e6cc
  404e46:	nop
  404e47:	nop
  404e48:	jmp    QWORD PTR [rip+0x9876]        # 0x40e6c4
  404e4e:	nop
  404e4f:	nop
  404e50:	jmp    QWORD PTR [rip+0x9866]        # 0x40e6bc
  404e56:	nop
  404e57:	nop
  404e58:	jmp    QWORD PTR [rip+0x9856]        # 0x40e6b4
  404e5e:	nop
  404e5f:	nop
  404e60:	jmp    QWORD PTR [rip+0x9846]        # 0x40e6ac
  404e66:	nop
  404e67:	nop
  404e68:	jmp    QWORD PTR [rip+0x9836]        # 0x40e6a4
  404e6e:	nop
  404e6f:	nop
  404e70:	jmp    QWORD PTR [rip+0x9826]        # 0x40e69c
  404e76:	nop
  404e77:	nop
  404e78:	jmp    QWORD PTR [rip+0x9816]        # 0x40e694
  404e7e:	nop
  404e7f:	nop
  404e80:	jmp    QWORD PTR [rip+0x9806]        # 0x40e68c
  404e86:	nop
  404e87:	nop
  404e88:	jmp    QWORD PTR [rip+0x97f6]        # 0x40e684
  404e8e:	nop
  404e8f:	nop
  404e90:	jmp    QWORD PTR [rip+0x97e6]        # 0x40e67c
  404e96:	nop
  404e97:	nop
  404e98:	jmp    QWORD PTR [rip+0x97d6]        # 0x40e674
  404e9e:	nop
  404e9f:	nop
  404ea0:	jmp    QWORD PTR [rip+0x97c6]        # 0x40e66c
  404ea6:	nop
  404ea7:	nop
  404ea8:	jmp    QWORD PTR [rip+0x97b6]        # 0x40e664
  404eae:	nop
  404eaf:	nop
  404eb0:	jmp    QWORD PTR [rip+0x97a6]        # 0x40e65c
  404eb6:	nop
  404eb7:	nop
  404eb8:	jmp    QWORD PTR [rip+0x9796]        # 0x40e654
  404ebe:	nop
  404ebf:	nop
  404ec0:	jmp    QWORD PTR [rip+0x9786]        # 0x40e64c
  404ec6:	nop
  404ec7:	nop
  404ec8:	jmp    QWORD PTR [rip+0x9776]        # 0x40e644
  404ece:	nop
  404ecf:	nop
  404ed0:	jmp    QWORD PTR [rip+0x9766]        # 0x40e63c
  404ed6:	nop
  404ed7:	nop
  404ed8:	jmp    QWORD PTR [rip+0x9756]        # 0x40e634
  404ede:	nop
  404edf:	nop
  404ee0:	jmp    QWORD PTR [rip+0x9746]        # 0x40e62c
  404ee6:	nop
  404ee7:	nop
  404ee8:	jmp    QWORD PTR [rip+0x9736]        # 0x40e624
  404eee:	nop
  404eef:	nop
  404ef0:	jmp    QWORD PTR [rip+0x9726]        # 0x40e61c
  404ef6:	nop
  404ef7:	nop
  404ef8:	jmp    QWORD PTR [rip+0x9716]        # 0x40e614
  404efe:	nop
  404eff:	nop
  404f00:	jmp    QWORD PTR [rip+0x9706]        # 0x40e60c
  404f06:	nop
  404f07:	nop
  404f08:	jmp    QWORD PTR [rip+0x96f6]        # 0x40e604
  404f0e:	nop
  404f0f:	nop
  404f10:	jmp    QWORD PTR [rip+0x96e6]        # 0x40e5fc
  404f16:	nop
  404f17:	nop
  404f18:	jmp    QWORD PTR [rip+0x96d6]        # 0x40e5f4
  404f1e:	nop
  404f1f:	nop
  404f20:	jmp    QWORD PTR [rip+0x96c6]        # 0x40e5ec
  404f26:	nop
  404f27:	nop
  404f28:	jmp    QWORD PTR [rip+0x96b6]        # 0x40e5e4
  404f2e:	nop
  404f2f:	nop
  404f30:	jmp    QWORD PTR [rip+0x96a6]        # 0x40e5dc
  404f36:	nop
  404f37:	nop
  404f38:	jmp    QWORD PTR [rip+0x9696]        # 0x40e5d4
  404f3e:	nop
  404f3f:	nop
  404f40:	jmp    QWORD PTR [rip+0x9686]        # 0x40e5cc
  404f46:	nop
  404f47:	nop
  404f48:	jmp    QWORD PTR [rip+0x9676]        # 0x40e5c4
  404f4e:	nop
  404f4f:	nop
  404f50:	jmp    QWORD PTR [rip+0x9666]        # 0x40e5bc
  404f56:	nop
  404f57:	nop
  404f58:	jmp    QWORD PTR [rip+0x964e]        # 0x40e5ac
  404f5e:	nop
  404f5f:	nop
  404f60:	jmp    QWORD PTR [rip+0x963e]        # 0x40e5a4
  404f66:	nop
  404f67:	nop
  404f68:	jmp    QWORD PTR [rip+0x99b6]        # 0x40e924
  404f6e:	nop
  404f6f:	nop
  404f70:	jmp    QWORD PTR [rip+0x99a6]        # 0x40e91c
  404f76:	nop
  404f77:	nop
  404f78:	jmp    QWORD PTR [rip+0x9996]        # 0x40e914
  404f7e:	nop
  404f7f:	nop
  404f80:	jmp    QWORD PTR [rip+0x9986]        # 0x40e90c
  404f86:	nop
  404f87:	nop
  404f88:	jmp    QWORD PTR [rip+0x9976]        # 0x40e904
  404f8e:	nop
  404f8f:	nop
  404f90:	jmp    QWORD PTR [rip+0x9966]        # 0x40e8fc
  404f96:	nop
  404f97:	nop
  404f98:	nop    DWORD PTR [rax+rax*1+0x0]
  404fa0:	push   rbx
  404fa1:	sub    rsp,0x30
  404fa5:	mov    rbx,rcx
  404fa8:	mov    rcx,QWORD PTR [rip+0x8a61]        # 0x40da10
  404faf:	call   0x405550
  404fb4:	cmp    rax,0xffffffffffffffff
  404fb8:	mov    QWORD PTR [rsp+0x20],rax
  404fbd:	je     0x405035
  404fbf:	mov    ecx,0x8
  404fc4:	call   0x406578
  404fc9:	mov    rcx,QWORD PTR [rip+0x8a40]        # 0x40da10
  404fd0:	call   0x405550
  404fd5:	mov    rcx,QWORD PTR [rip+0x8a3c]        # 0x40da18
  404fdc:	mov    QWORD PTR [rsp+0x20],rax
  404fe1:	call   0x405550
  404fe6:	lea    rdx,[rsp+0x20]
  404feb:	lea    r8,[rsp+0x28]
  404ff0:	mov    rcx,rbx
  404ff3:	mov    QWORD PTR [rsp+0x28],rax
  404ff8:	call   0x4065c0
  404ffd:	mov    rcx,QWORD PTR [rsp+0x20]
  405002:	mov    rbx,rax
  405005:	call   0x405560
  40500a:	mov    rcx,QWORD PTR [rsp+0x28]
  40500f:	mov    QWORD PTR [rip+0x89fa],rax        # 0x40da10
  405016:	call   0x405560
  40501b:	mov    ecx,0x8
  405020:	mov    QWORD PTR [rip+0x89f1],rax        # 0x40da18
  405027:	call   0x406568
  40502c:	mov    rax,rbx
  40502f:	add    rsp,0x30
  405033:	pop    rbx
  405034:	ret    
  405035:	mov    rax,QWORD PTR [rip+0x5934]        # 0x40a970
  40503c:	mov    rcx,rbx
  40503f:	call   QWORD PTR [rax]
  405041:	add    rsp,0x30
  405045:	pop    rbx
  405046:	ret    
  405047:	nop    WORD PTR [rax+rax*1+0x0]
  405050:	sub    rsp,0x28
  405054:	call   0x404fa0
  405059:	test   rax,rax
  40505c:	sete   al
  40505f:	movzx  eax,al
  405062:	neg    eax
  405064:	add    rsp,0x28
  405068:	ret    
  405069:	nop
  40506a:	nop
  40506b:	nop
  40506c:	nop
  40506d:	nop
  40506e:	nop
  40506f:	nop
  405070:	sub    rsp,0x28
  405074:	mov    rax,QWORD PTR [rip+0x3085]        # 0x408100
  40507b:	mov    rax,QWORD PTR [rax]
  40507e:	test   rax,rax
  405081:	je     0x4050a0
  405083:	call   rax
  405085:	mov    rax,QWORD PTR [rip+0x3074]        # 0x408100
  40508c:	lea    rdx,[rax+0x8]
  405090:	mov    rax,QWORD PTR [rax+0x8]
  405094:	mov    QWORD PTR [rip+0x3065],rdx        # 0x408100
  40509b:	test   rax,rax
  40509e:	jne    0x405083
  4050a0:	add    rsp,0x28
  4050a4:	ret    
  4050a5:	nop
  4050a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050b0:	push   rsi
  4050b1:	push   rbx
  4050b2:	sub    rsp,0x28
  4050b6:	mov    rsi,QWORD PTR [rip+0x5833]        # 0x40a8f0
  4050bd:	mov    rax,QWORD PTR [rsi]
  4050c0:	cmp    eax,0xffffffff
  4050c3:	mov    ebx,eax
  4050c5:	je     0x4050f0
  4050c7:	test   ebx,ebx
  4050c9:	je     0x4050da
  4050cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050d0:	mov    eax,ebx
  4050d2:	call   QWORD PTR [rsi+rax*8]
  4050d5:	sub    ebx,0x1
  4050d8:	jne    0x4050d0
  4050da:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x405070
  4050e1:	add    rsp,0x28
  4050e5:	pop    rbx
  4050e6:	pop    rsi
  4050e7:	jmp    0x405050
  4050ec:	nop    DWORD PTR [rax+0x0]
  4050f0:	xor    ebx,ebx
  4050f2:	jmp    0x4050f6
  4050f4:	mov    ebx,eax
  4050f6:	lea    edx,[rbx+0x1]
  4050f9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4050fe:	mov    rax,rdx
  405101:	jne    0x4050f4
  405103:	jmp    0x4050c7
  405105:	nop
  405106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405110:	mov    eax,DWORD PTR [rip+0x7f2a]        # 0x40d040
  405116:	test   eax,eax
  405118:	je     0x405120
  40511a:	repz ret 
  40511c:	nop    DWORD PTR [rax+0x0]
  405120:	mov    DWORD PTR [rip+0x7f16],0x1        # 0x40d040
  40512a:	jmp    0x4050b0
  40512c:	nop
  40512d:	nop
  40512e:	nop
  40512f:	nop
  405130:	mov    rax,QWORD PTR [rip+0x98e5]        # 0x40ea1c
  405137:	rex.W jmp rax
  40513a:	nop
  40513b:	nop
  40513c:	nop
  40513d:	nop
  40513e:	nop
  40513f:	nop
  405140:	xor    eax,eax
  405142:	ret    
  405143:	nop
  405144:	nop
  405145:	nop
  405146:	nop
  405147:	nop
  405148:	nop
  405149:	nop
  40514a:	nop
  40514b:	nop
  40514c:	nop
  40514d:	nop
  40514e:	nop
  40514f:	nop
  405150:	push   r12
  405152:	push   rbp
  405153:	push   rdi
  405154:	push   rsi
  405155:	push   rbx
  405156:	sub    rsp,0x40
  40515a:	mov    rbx,QWORD PTR [rip+0x2fff]        # 0x408160
  405161:	movabs rax,0x2b992ddfa232
  40516b:	mov    QWORD PTR [rsp+0x20],0x0
  405174:	cmp    rbx,rax
  405177:	je     0x405190
  405179:	not    rbx
  40517c:	mov    QWORD PTR [rip+0x2fed],rbx        # 0x408170
  405183:	add    rsp,0x40
  405187:	pop    rbx
  405188:	pop    rsi
  405189:	pop    rdi
  40518a:	pop    rbp
  40518b:	pop    r12
  40518d:	ret    
  40518e:	xchg   ax,ax
  405190:	lea    rcx,[rsp+0x20]
  405195:	call   QWORD PTR [rip+0x97d1]        # 0x40e96c
  40519b:	mov    r12,QWORD PTR [rsp+0x20]
  4051a0:	call   QWORD PTR [rip+0x97a6]        # 0x40e94c
  4051a6:	mov    ebp,eax
  4051a8:	call   QWORD PTR [rip+0x97a6]        # 0x40e954
  4051ae:	mov    edi,eax
  4051b0:	call   QWORD PTR [rip+0x97be]        # 0x40e974
  4051b6:	lea    rcx,[rsp+0x30]
  4051bb:	mov    esi,eax
  4051bd:	call   QWORD PTR [rip+0x97c9]        # 0x40e98c
  4051c3:	xor    r12,QWORD PTR [rsp+0x30]
  4051c8:	mov    edx,edi
  4051ca:	movabs rax,0xffffffffffff
  4051d4:	xor    rbp,r12
  4051d7:	mov    rdi,rbp
  4051da:	xor    rdi,rdx
  4051dd:	mov    edx,esi
  4051df:	xor    rdi,rdx
  4051e2:	mov    rsi,rdi
  4051e5:	and    rsi,rax
  4051e8:	cmp    rsi,rbx
  4051eb:	je     0x405210
  4051ed:	mov    rax,rsi
  4051f0:	not    rax
  4051f3:	mov    QWORD PTR [rip+0x2f66],rsi        # 0x408160
  4051fa:	mov    QWORD PTR [rip+0x2f6f],rax        # 0x408170
  405201:	add    rsp,0x40
  405205:	pop    rbx
  405206:	pop    rsi
  405207:	pop    rdi
  405208:	pop    rbp
  405209:	pop    r12
  40520b:	ret    
  40520c:	nop    DWORD PTR [rax+0x0]
  405210:	movabs rax,0xffffd466d2205dcc
  40521a:	movabs rsi,0x2b992ddfa233
  405224:	jmp    0x4051f3
  405226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405230:	push   rbp
  405231:	push   rsi
  405232:	push   rbx
  405233:	mov    rbp,rsp
  405236:	sub    rsp,0x70
  40523a:	mov    rsi,rcx
  40523d:	lea    rcx,[rip+0x7e3c]        # 0x40d080
  405244:	call   QWORD PTR [rip+0x9752]        # 0x40e99c
  40524a:	mov    rbx,QWORD PTR [rip+0x7f27]        # 0x40d178
  405251:	xor    r8d,r8d
  405254:	lea    rdx,[rbp-0x28]
  405258:	mov    rcx,rbx
  40525b:	call   QWORD PTR [rip+0x9743]        # 0x40e9a4
  405261:	test   rax,rax
  405264:	mov    r9,rax
  405267:	je     0x405310
  40526d:	lea    rax,[rbp-0x20]
  405271:	mov    QWORD PTR [rsp+0x38],0x0
  40527a:	mov    r8,rbx
  40527d:	mov    rdx,QWORD PTR [rbp-0x28]
  405281:	xor    ecx,ecx
  405283:	mov    QWORD PTR [rsp+0x30],rax
  405288:	lea    rax,[rbp-0x18]
  40528c:	mov    QWORD PTR [rsp+0x28],rax
  405291:	lea    rax,[rip+0x7de8]        # 0x40d080
  405298:	mov    QWORD PTR [rsp+0x20],rax
  40529d:	call   QWORD PTR [rip+0x9709]        # 0x40e9ac
  4052a3:	mov    rax,QWORD PTR [rip+0x7ece]        # 0x40d178
  4052aa:	xor    ecx,ecx
  4052ac:	mov    QWORD PTR [rip+0x7e4d],rsi        # 0x40d100
  4052b3:	mov    DWORD PTR [rip+0x82c3],0xc0000409        # 0x40d580
  4052bd:	mov    DWORD PTR [rip+0x82bd],0x1        # 0x40d584
  4052c7:	mov    QWORD PTR [rip+0x82c2],rax        # 0x40d590
  4052ce:	mov    rax,QWORD PTR [rip+0x2e8b]        # 0x408160
  4052d5:	mov    QWORD PTR [rbp-0x10],rax
  4052d9:	mov    rax,QWORD PTR [rip+0x2e90]        # 0x408170
  4052e0:	mov    QWORD PTR [rbp-0x8],rax
  4052e4:	call   QWORD PTR [rip+0x96ca]        # 0x40e9b4
  4052ea:	lea    rcx,[rip+0x535f]        # 0x40a650
  4052f1:	call   QWORD PTR [rip+0x96dd]        # 0x40e9d4
  4052f7:	call   QWORD PTR [rip+0x9647]        # 0x40e944
  4052fd:	mov    edx,0xc0000409
  405302:	mov    rcx,rax
  405305:	call   QWORD PTR [rip+0x96b9]        # 0x40e9c4
  40530b:	call   0x406560
  405310:	mov    rax,QWORD PTR [rbp+0x18]
  405314:	mov    QWORD PTR [rip+0x7e5d],rax        # 0x40d178
  40531b:	lea    rax,[rbp+0x8]
  40531f:	mov    QWORD PTR [rip+0x7df2],rax        # 0x40d118
  405326:	jmp    0x4052a3
  40532b:	nop
  40532c:	nop
  40532d:	nop
  40532e:	nop
  40532f:	nop
  405330:	sub    rsp,0x28
  405334:	test   edx,edx
  405336:	je     0x405350
  405338:	cmp    edx,0x3
  40533b:	je     0x405350
  40533d:	mov    eax,0x1
  405342:	add    rsp,0x28
  405346:	ret    
  405347:	nop    WORD PTR [rax+rax*1+0x0]
  405350:	call   0x406040
  405355:	mov    eax,0x1
  40535a:	add    rsp,0x28
  40535e:	ret    
  40535f:	nop
  405360:	push   rsi
  405361:	push   rbx
  405362:	sub    rsp,0x28
  405366:	mov    rax,QWORD PTR [rip+0x5563]        # 0x40a8d0
  40536d:	cmp    DWORD PTR [rax],0x2
  405370:	je     0x405378
  405372:	mov    DWORD PTR [rax],0x2
  405378:	cmp    edx,0x2
  40537b:	je     0x405390
  40537d:	cmp    edx,0x1
  405380:	je     0x4053c2
  405382:	mov    eax,0x1
  405387:	add    rsp,0x28
  40538b:	pop    rbx
  40538c:	pop    rsi
  40538d:	ret    
  40538e:	xchg   ax,ax
  405390:	lea    rbx,[rip+0xacc9]        # 0x410060
  405397:	lea    rsi,[rip+0xacc2]        # 0x410060
  40539e:	cmp    rbx,rsi
  4053a1:	je     0x405382
  4053a3:	mov    rax,QWORD PTR [rbx]
  4053a6:	test   rax,rax
  4053a9:	je     0x4053ad
  4053ab:	call   rax
  4053ad:	add    rbx,0x8
  4053b1:	cmp    rbx,rsi
  4053b4:	jne    0x4053a3
  4053b6:	mov    eax,0x1
  4053bb:	add    rsp,0x28
  4053bf:	pop    rbx
  4053c0:	pop    rsi
  4053c1:	ret    
  4053c2:	call   0x406040
  4053c7:	jmp    0x405382
  4053c9:	nop    DWORD PTR [rax+0x0]
  4053d0:	xor    eax,eax
  4053d2:	ret    
  4053d3:	nop
  4053d4:	nop
  4053d5:	nop
  4053d6:	nop
  4053d7:	nop
  4053d8:	nop
  4053d9:	nop
  4053da:	nop
  4053db:	nop
  4053dc:	nop
  4053dd:	nop
  4053de:	nop
  4053df:	nop
  4053e0:	sub    rsp,0x58
  4053e4:	mov    rax,QWORD PTR [rip+0x8275]        # 0x40d660
  4053eb:	test   rax,rax
  4053ee:	je     0x40541c
  4053f0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4053f9:	mov    DWORD PTR [rsp+0x20],ecx
  4053fd:	lea    rcx,[rsp+0x20]
  405402:	mov    QWORD PTR [rsp+0x28],rdx
  405407:	movsd  QWORD PTR [rsp+0x30],xmm2
  40540d:	movsd  QWORD PTR [rsp+0x38],xmm3
  405413:	movsd  QWORD PTR [rsp+0x40],xmm0
  405419:	call   rax
  40541b:	nop
  40541c:	add    rsp,0x58
  405420:	ret    
  405421:	nop    DWORD PTR [rax+rax*1+0x0]
  405426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405430:	mov    QWORD PTR [rip+0x8229],rcx        # 0x40d660
  405437:	jmp    0x406598
  40543c:	nop    DWORD PTR [rax+0x0]
  405440:	push   rsi
  405441:	push   rbx
  405442:	sub    rsp,0x78
  405446:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40544b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  405450:	movaps XMMWORD PTR [rsp+0x60],xmm8
  405456:	cmp    DWORD PTR [rcx],0x6
  405459:	ja     0x405530
  40545f:	mov    edx,DWORD PTR [rcx]
  405461:	lea    rax,[rip+0x532c]        # 0x40a794
  405468:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40546c:	add    rax,rdx
  40546f:	jmp    rax
  405471:	lea    rbx,[rip+0x51f8]        # 0x40a670
  405478:	nop    DWORD PTR [rax+rax*1+0x0]
  405480:	movsd  xmm8,QWORD PTR [rcx+0x20]
  405486:	mov    rsi,QWORD PTR [rcx+0x8]
  40548a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40548f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  405494:	call   0x4065b0
  405499:	movsd  QWORD PTR [rsp+0x30],xmm8
  4054a0:	lea    rcx,[rax+0x60]
  4054a4:	lea    rdx,[rip+0x52bd]        # 0x40a768
  4054ab:	movsd  QWORD PTR [rsp+0x28],xmm7
  4054b1:	mov    r9,rsi
  4054b4:	mov    r8,rbx
  4054b7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4054bd:	call   0x406548
  4054c2:	nop
  4054c3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4054c8:	xor    eax,eax
  4054ca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4054cf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4054d5:	add    rsp,0x78
  4054d9:	pop    rbx
  4054da:	pop    rsi
  4054db:	ret    
  4054dc:	nop    DWORD PTR [rax+0x0]
  4054e0:	lea    rbx,[rip+0x51a8]        # 0x40a68f
  4054e7:	jmp    0x405480
  4054e9:	nop    DWORD PTR [rax+0x0]
  4054f0:	lea    rbx,[rip+0x51b9]        # 0x40a6b0
  4054f7:	jmp    0x405480
  4054f9:	nop    DWORD PTR [rax+0x0]
  405500:	lea    rbx,[rip+0x5219]        # 0x40a720
  405507:	jmp    0x405480
  40550c:	nop    DWORD PTR [rax+0x0]
  405510:	lea    rbx,[rip+0x51e1]        # 0x40a6f8
  405517:	jmp    0x405480
  40551c:	nop    DWORD PTR [rax+0x0]
  405520:	lea    rbx,[rip+0x51a9]        # 0x40a6d0
  405527:	jmp    0x405480
  40552c:	nop    DWORD PTR [rax+0x0]
  405530:	lea    rbx,[rip+0x521f]        # 0x40a756
  405537:	jmp    0x405480
  40553c:	nop
  40553d:	nop
  40553e:	nop
  40553f:	nop
  405540:	fninit 
  405542:	ret    
  405543:	nop
  405544:	nop
  405545:	nop
  405546:	nop
  405547:	nop
  405548:	nop
  405549:	nop
  40554a:	nop
  40554b:	nop
  40554c:	nop
  40554d:	nop
  40554e:	nop
  40554f:	nop
  405550:	mov    rax,rcx
  405553:	ret    
  405554:	xchg   ax,ax
  405556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405560:	mov    rax,rcx
  405563:	ret    
  405564:	nop
  405565:	nop
  405566:	nop
  405567:	nop
  405568:	nop
  405569:	nop
  40556a:	nop
  40556b:	nop
  40556c:	nop
  40556d:	nop
  40556e:	nop
  40556f:	nop
  405570:	push   rsi
  405571:	push   rbx
  405572:	sub    rsp,0x38
  405576:	lea    rax,[rsp+0x58]
  40557b:	mov    rbx,rcx
  40557e:	mov    QWORD PTR [rsp+0x58],rdx
  405583:	mov    QWORD PTR [rsp+0x60],r8
  405588:	mov    QWORD PTR [rsp+0x68],r9
  40558d:	mov    QWORD PTR [rsp+0x28],rax
  405592:	call   0x4065b0
  405597:	lea    rcx,[rip+0x5212]        # 0x40a7b0
  40559e:	lea    r9,[rax+0x60]
  4055a2:	mov    r8d,0x1b
  4055a8:	mov    edx,0x1
  4055ad:	call   0x406538
  4055b2:	mov    rsi,QWORD PTR [rsp+0x28]
  4055b7:	call   0x4065b0
  4055bc:	lea    rcx,[rax+0x60]
  4055c0:	mov    rdx,rbx
  4055c3:	mov    r8,rsi
  4055c6:	call   0x406500
  4055cb:	call   0x406560
  4055d0:	nop
  4055d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4055d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055e0:	push   r13
  4055e2:	push   r12
  4055e4:	push   rbp
  4055e5:	push   rdi
  4055e6:	push   rsi
  4055e7:	push   rbx
  4055e8:	sub    rsp,0x58
  4055ec:	movsxd rbp,DWORD PTR [rip+0x8091]        # 0x40d684
  4055f3:	mov    rbx,rcx
  4055f6:	mov    rsi,rdx
  4055f9:	mov    rdi,r8
  4055fc:	test   ebp,ebp
  4055fe:	jle    0x4056fa
  405604:	mov    rax,QWORD PTR [rip+0x807d]        # 0x40d688
  40560b:	xor    r9d,r9d
  40560e:	add    rax,0x8
  405612:	mov    r10,QWORD PTR [rax]
  405615:	cmp    rbx,r10
  405618:	jb     0x40562e
  40561a:	mov    rdx,QWORD PTR [rax+0x8]
  40561e:	mov    r11d,DWORD PTR [rdx+0x8]
  405622:	add    r10,r11
  405625:	cmp    rbx,r10
  405628:	jb     0x4056e0
  40562e:	add    r9d,0x1
  405632:	add    rax,0x18
  405636:	cmp    r9d,ebp
  405639:	jne    0x405612
  40563b:	mov    rcx,rbx
  40563e:	call   0x406250
  405643:	test   rax,rax
  405646:	mov    r12,rax
  405649:	je     0x405732
  40564f:	lea    rbp,[rbp+rbp*2+0x0]
  405654:	shl    rbp,0x3
  405658:	mov    r13,rbp
  40565b:	add    r13,QWORD PTR [rip+0x8026]        # 0x40d688
  405662:	mov    QWORD PTR [r13+0x10],rax
  405666:	mov    DWORD PTR [r13+0x0],0x0
  40566e:	call   0x406370
  405673:	mov    edx,DWORD PTR [r12+0xc]
  405678:	mov    r8d,0x30
  40567e:	add    rax,rdx
  405681:	lea    rdx,[rsp+0x20]
  405686:	mov    QWORD PTR [r13+0x8],rax
  40568a:	mov    rax,QWORD PTR [rip+0x7ff7]        # 0x40d688
  405691:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  405696:	call   QWORD PTR [rip+0x9348]        # 0x40e9e4
  40569c:	test   rax,rax
  40569f:	je     0x405715
  4056a1:	mov    eax,DWORD PTR [rsp+0x44]
  4056a5:	lea    edx,[rax-0x4]
  4056a8:	and    edx,0xfffffffb
  4056ab:	je     0x4056d9
  4056ad:	sub    eax,0x40
  4056b0:	and    eax,0xffffffbf
  4056b3:	je     0x4056d9
  4056b5:	mov    r9,rbp
  4056b8:	add    r9,QWORD PTR [rip+0x7fc9]        # 0x40d688
  4056bf:	mov    r8d,0x40
  4056c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4056ca:	mov    rcx,QWORD PTR [rsp+0x20]
  4056cf:	call   QWORD PTR [rip+0x9307]        # 0x40e9dc
  4056d5:	test   eax,eax
  4056d7:	je     0x405701
  4056d9:	add    DWORD PTR [rip+0x7fa4],0x1        # 0x40d684
  4056e0:	mov    r8,rdi
  4056e3:	mov    rdx,rsi
  4056e6:	mov    rcx,rbx
  4056e9:	add    rsp,0x58
  4056ed:	pop    rbx
  4056ee:	pop    rsi
  4056ef:	pop    rdi
  4056f0:	pop    rbp
  4056f1:	pop    r12
  4056f3:	pop    r13
  4056f5:	jmp    0x406528
  4056fa:	xor    ebp,ebp
  4056fc:	jmp    0x40563b
  405701:	call   QWORD PTR [rip+0x9255]        # 0x40e95c
  405707:	lea    rcx,[rip+0x511a]        # 0x40a828
  40570e:	mov    edx,eax
  405710:	call   0x405570
  405715:	mov    rax,QWORD PTR [rip+0x7f6c]        # 0x40d688
  40571c:	mov    edx,DWORD PTR [r12+0x8]
  405721:	lea    rcx,[rip+0x50c8]        # 0x40a7f0
  405728:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40572d:	call   0x405570
  405732:	lea    rcx,[rip+0x5097]        # 0x40a7d0
  405739:	mov    rdx,rbx
  40573c:	call   0x405570
  405741:	nop
  405742:	nop    DWORD PTR [rax+0x0]
  405746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405750:	push   rbp
  405751:	push   r14
  405753:	push   r13
  405755:	push   r12
  405757:	push   rdi
  405758:	push   rsi
  405759:	push   rbx
  40575a:	mov    rbp,rsp
  40575d:	sub    rsp,0x60
  405761:	mov    ebx,DWORD PTR [rip+0x7f19]        # 0x40d680
  405767:	test   ebx,ebx
  405769:	je     0x405780
  40576b:	mov    rsp,rbp
  40576e:	pop    rbx
  40576f:	pop    rsi
  405770:	pop    rdi
  405771:	pop    r12
  405773:	pop    r13
  405775:	pop    r14
  405777:	pop    rbp
  405778:	ret    
  405779:	nop    DWORD PTR [rax+0x0]
  405780:	mov    DWORD PTR [rip+0x7ef6],0x1        # 0x40d680
  40578a:	call   0x4062a0
  40578f:	cdqe   
  405791:	lea    rax,[rax+rax*2]
  405795:	lea    rax,[rax*8+0x1e]
  40579d:	and    rax,0xfffffffffffffff0
  4057a1:	call   0x4064c0
  4057a6:	mov    rsi,QWORD PTR [rip+0x5153]        # 0x40a900
  4057ad:	mov    rbx,QWORD PTR [rip+0x515c]        # 0x40a910
  4057b4:	sub    rsp,rax
  4057b7:	mov    DWORD PTR [rip+0x7ec3],0x0        # 0x40d684
  4057c1:	lea    rax,[rsp+0x20]
  4057c6:	mov    QWORD PTR [rip+0x7ebb],rax        # 0x40d688
  4057cd:	mov    rax,rsi
  4057d0:	sub    rax,rbx
  4057d3:	cmp    rax,0x7
  4057d7:	jle    0x40576b
  4057d9:	cmp    rax,0xb
  4057dd:	jle    0x405805
  4057df:	mov    r11d,DWORD PTR [rbx]
  4057e2:	test   r11d,r11d
  4057e5:	jne    0x405930
  4057eb:	mov    r10d,DWORD PTR [rbx+0x4]
  4057ef:	test   r10d,r10d
  4057f2:	jne    0x405930
  4057f8:	mov    r9d,DWORD PTR [rbx+0x8]
  4057fc:	test   r9d,r9d
  4057ff:	jne    0x40581c
  405801:	add    rbx,0xc
  405805:	mov    r8d,DWORD PTR [rbx]
  405808:	test   r8d,r8d
  40580b:	jne    0x405930
  405811:	mov    ecx,DWORD PTR [rbx+0x4]
  405814:	test   ecx,ecx
  405816:	jne    0x405930
  40581c:	mov    edx,DWORD PTR [rbx+0x8]
  40581f:	cmp    edx,0x1
  405822:	jne    0x405a3c
  405828:	add    rbx,0xc
  40582c:	cmp    rbx,rsi
  40582f:	jae    0x40576b
  405835:	mov    r12,QWORD PTR [rip+0x50f4]        # 0x40a930
  40583c:	lea    r13,[rbp-0x30]
  405840:	movabs r14,0xffffffff00000000
  40584a:	mov    ecx,DWORD PTR [rbx+0x4]
  40584d:	mov    eax,DWORD PTR [rbx]
  40584f:	movzx  edx,BYTE PTR [rbx+0x8]
  405853:	add    rax,r12
  405856:	add    rcx,r12
  405859:	cmp    edx,0x10
  40585c:	mov    r8,QWORD PTR [rax]
  40585f:	je     0x4059a6
  405865:	jbe    0x40596d
  40586b:	cmp    edx,0x20
  40586e:	je     0x4059ef
  405874:	cmp    edx,0x40
  405877:	jne    0x4059db
  40587d:	sub    r8,rax
  405880:	mov    rdx,r13
  405883:	mov    rdi,r13
  405886:	mov    rax,r8
  405889:	add    rax,QWORD PTR [rcx]
  40588c:	mov    r8d,0x8
  405892:	mov    QWORD PTR [rbp-0x30],rax
  405896:	call   0x4055e0
  40589b:	add    rbx,0xc
  40589f:	cmp    rbx,rsi
  4058a2:	jb     0x40584a
  4058a4:	mov    eax,DWORD PTR [rip+0x7dda]        # 0x40d684
  4058aa:	xor    ebx,ebx
  4058ac:	xor    esi,esi
  4058ae:	test   eax,eax
  4058b0:	jle    0x40576b
  4058b6:	mov    r14,QWORD PTR [rip+0x9127]        # 0x40e9e4
  4058bd:	lea    r13,[rbp-0x34]
  4058c1:	mov    r12,QWORD PTR [rip+0x9114]        # 0x40e9dc
  4058c8:	jmp    0x4058e3
  4058ca:	nop    WORD PTR [rax+rax*1+0x0]
  4058d0:	add    esi,0x1
  4058d3:	add    rbx,0x18
  4058d7:	cmp    esi,DWORD PTR [rip+0x7da7]        # 0x40d684
  4058dd:	jge    0x40576b
  4058e3:	mov    rax,rbx
  4058e6:	add    rax,QWORD PTR [rip+0x7d9b]        # 0x40d688
  4058ed:	mov    edx,DWORD PTR [rax]
  4058ef:	test   edx,edx
  4058f1:	je     0x4058d0
  4058f3:	mov    rcx,QWORD PTR [rax+0x8]
  4058f7:	mov    r8d,0x30
  4058fd:	mov    rdx,rdi
  405900:	call   r14
  405903:	test   rax,rax
  405906:	je     0x405a1e
  40590c:	mov    rax,QWORD PTR [rip+0x7d75]        # 0x40d688
  405913:	mov    r9,r13
  405916:	mov    rdx,QWORD PTR [rbp-0x18]
  40591a:	mov    rcx,QWORD PTR [rbp-0x30]
  40591e:	mov    r8d,DWORD PTR [rax+rbx*1]
  405922:	call   r12
  405925:	jmp    0x4058d0
  405927:	nop    WORD PTR [rax+rax*1+0x0]
  405930:	cmp    rbx,rsi
  405933:	jae    0x40576b
  405939:	mov    r12,QWORD PTR [rip+0x4ff0]        # 0x40a930
  405940:	lea    rdi,[rbp-0x30]
  405944:	mov    ecx,DWORD PTR [rbx+0x4]
  405947:	mov    eax,DWORD PTR [rbx]
  405949:	mov    r8d,0x4
  40594f:	mov    rdx,rdi
  405952:	add    rbx,0x8
  405956:	add    rcx,r12
  405959:	add    eax,DWORD PTR [rcx]
  40595b:	mov    DWORD PTR [rbp-0x30],eax
  40595e:	call   0x4055e0
  405963:	cmp    rbx,rsi
  405966:	jb     0x405944
  405968:	jmp    0x4058a4
  40596d:	cmp    edx,0x8
  405970:	jne    0x4059db
  405972:	movzx  edx,BYTE PTR [rcx]
  405975:	mov    rdi,r13
  405978:	mov    r10,rdx
  40597b:	or     r10,0xffffffffffffff00
  405982:	test   dl,dl
  405984:	cmovs  rdx,r10
  405988:	sub    rdx,rax
  40598b:	lea    rax,[r8+rdx*1]
  40598f:	mov    r8d,0x1
  405995:	mov    rdx,r13
  405998:	mov    QWORD PTR [rbp-0x30],rax
  40599c:	call   0x4055e0
  4059a1:	jmp    0x40589b
  4059a6:	movzx  edx,WORD PTR [rcx]
  4059a9:	mov    rdi,r13
  4059ac:	mov    r10,rdx
  4059af:	or     r10,0xffffffffffff0000
  4059b6:	test   dx,dx
  4059b9:	cmovs  rdx,r10
  4059bd:	sub    rdx,rax
  4059c0:	lea    rax,[r8+rdx*1]
  4059c4:	mov    r8d,0x2
  4059ca:	mov    rdx,r13
  4059cd:	mov    QWORD PTR [rbp-0x30],rax
  4059d1:	call   0x4055e0
  4059d6:	jmp    0x40589b
  4059db:	lea    rcx,[rip+0x4ea6]        # 0x40a888
  4059e2:	mov    QWORD PTR [rbp-0x30],0x0
  4059ea:	call   0x405570
  4059ef:	mov    edx,DWORD PTR [rcx]
  4059f1:	mov    rdi,r13
  4059f4:	mov    r10,rdx
  4059f7:	or     r10,r14
  4059fa:	test   edx,edx
  4059fc:	cmovs  rdx,r10
  405a00:	sub    rdx,rax
  405a03:	lea    rax,[r8+rdx*1]
  405a07:	mov    r8d,0x4
  405a0d:	mov    rdx,r13
  405a10:	mov    QWORD PTR [rbp-0x30],rax
  405a14:	call   0x4055e0
  405a19:	jmp    0x40589b
  405a1e:	add    rbx,QWORD PTR [rip+0x7c63]        # 0x40d688
  405a25:	lea    rcx,[rip+0x4dc4]        # 0x40a7f0
  405a2c:	mov    rax,QWORD PTR [rbx+0x10]
  405a30:	mov    r8,QWORD PTR [rbx+0x8]
  405a34:	mov    edx,DWORD PTR [rax+0x8]
  405a37:	call   0x405570
  405a3c:	lea    rcx,[rip+0x4e0d]        # 0x40a850
  405a43:	call   0x405570
  405a48:	nop
  405a49:	nop
  405a4a:	nop
  405a4b:	nop
  405a4c:	nop
  405a4d:	nop
  405a4e:	nop
  405a4f:	nop
  405a50:	sub    rsp,0x28
  405a54:	mov    eax,DWORD PTR [rcx]
  405a56:	cmp    eax,0xc0000091
  405a5b:	ja     0x405ac0
  405a5d:	cmp    eax,0xc000008d
  405a62:	jae    0x405adf
  405a64:	cmp    eax,0xc0000008
  405a69:	je     0x405b80
  405a6f:	ja     0x405b50
  405a75:	cmp    eax,0x80000002
  405a7a:	je     0x405b80
  405a80:	cmp    eax,0xc0000005
  405a85:	jne    0x405b5e
  405a8b:	xor    edx,edx
  405a8d:	mov    ecx,0xb
  405a92:	call   0x406520
  405a97:	cmp    rax,0x1
  405a9b:	je     0x405be0
  405aa1:	test   rax,rax
  405aa4:	je     0x405bc0
  405aaa:	mov    ecx,0xb
  405aaf:	call   rax
  405ab1:	xor    eax,eax
  405ab3:	add    rsp,0x28
  405ab7:	ret    
  405ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ac0:	cmp    eax,0xc0000094
  405ac5:	je     0x405b90
  405acb:	ja     0x405b10
  405acd:	cmp    eax,0xc0000092
  405ad2:	je     0x405b80
  405ad8:	cmp    eax,0xc0000093
  405add:	jne    0x405b5e
  405adf:	xor    edx,edx
  405ae1:	mov    ecx,0x8
  405ae6:	call   0x406520
  405aeb:	cmp    rax,0x1
  405aef:	mov    rdx,rax
  405af2:	je     0x405b68
  405af4:	test   rdx,rdx
  405af7:	mov    eax,0x1
  405afc:	je     0x405ab3
  405afe:	mov    ecx,0x8
  405b03:	call   rdx
  405b05:	xor    eax,eax
  405b07:	add    rsp,0x28
  405b0b:	ret    
  405b0c:	nop    DWORD PTR [rax+0x0]
  405b10:	cmp    eax,0xc0000095
  405b15:	je     0x405b80
  405b17:	cmp    eax,0xc0000096
  405b1c:	jne    0x405b5e
  405b1e:	xor    edx,edx
  405b20:	mov    ecx,0x4
  405b25:	call   0x406520
  405b2a:	cmp    rax,0x1
  405b2e:	je     0x405bca
  405b34:	test   rax,rax
  405b37:	je     0x405bc0
  405b3d:	mov    ecx,0x4
  405b42:	call   rax
  405b44:	xor    eax,eax
  405b46:	jmp    0x405ab3
  405b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b50:	cmp    eax,0xc000001d
  405b55:	je     0x405b1e
  405b57:	cmp    eax,0xc000008c
  405b5c:	je     0x405b80
  405b5e:	mov    eax,0x1
  405b63:	add    rsp,0x28
  405b67:	ret    
  405b68:	mov    edx,0x1
  405b6d:	mov    ecx,0x8
  405b72:	call   0x406520
  405b77:	call   0x405540
  405b7c:	nop    DWORD PTR [rax+0x0]
  405b80:	xor    eax,eax
  405b82:	add    rsp,0x28
  405b86:	ret    
  405b87:	nop    WORD PTR [rax+rax*1+0x0]
  405b90:	xor    edx,edx
  405b92:	mov    ecx,0x8
  405b97:	call   0x406520
  405b9c:	cmp    rax,0x1
  405ba0:	mov    rdx,rax
  405ba3:	jne    0x405af4
  405ba9:	mov    edx,0x1
  405bae:	mov    ecx,0x8
  405bb3:	call   0x406520
  405bb8:	xor    eax,eax
  405bba:	jmp    0x405ab3
  405bbf:	nop
  405bc0:	mov    eax,0x4
  405bc5:	add    rsp,0x28
  405bc9:	ret    
  405bca:	mov    edx,0x1
  405bcf:	mov    ecx,0x4
  405bd4:	call   0x406520
  405bd9:	xor    eax,eax
  405bdb:	jmp    0x405ab3
  405be0:	mov    edx,0x1
  405be5:	mov    ecx,0xb
  405bea:	call   0x406520
  405bef:	xor    eax,eax
  405bf1:	jmp    0x405ab3
  405bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c00:	push   r12
  405c02:	push   rbp
  405c03:	push   rdi
  405c04:	push   rsi
  405c05:	push   rbx
  405c06:	sub    rsp,0x20
  405c0a:	call   0x406370
  405c0f:	mov    rbp,rax
  405c12:	mov    eax,DWORD PTR [rip+0x7ab0]        # 0x40d6c8
  405c18:	test   eax,eax
  405c1a:	jne    0x405c41
  405c1c:	test   rbp,rbp
  405c1f:	je     0x405c41
  405c21:	lea    rcx,[rip+0x4c98]        # 0x40a8c0
  405c28:	mov    DWORD PTR [rip+0x7a96],0x1        # 0x40d6c8
  405c32:	call   0x4061b0
  405c37:	test   rax,rax
  405c3a:	je     0x405c50
  405c3c:	mov    eax,0x1
  405c41:	add    rsp,0x20
  405c45:	pop    rbx
  405c46:	pop    rsi
  405c47:	pop    rdi
  405c48:	pop    rbp
  405c49:	pop    r12
  405c4b:	ret    
  405c4c:	nop    DWORD PTR [rax+0x0]
  405c50:	lea    rbx,[rip+0x7ba9]        # 0x40d800
  405c57:	mov    ecx,0x30
  405c5c:	lea    rdx,[rip+0x7a9d]        # 0x40d700
  405c63:	lea    r12,[rip+0xfffffffffffffde6]        # 0x405a50
  405c6a:	xor    esi,esi
  405c6c:	mov    rdi,rbx
  405c6f:	rep stos QWORD PTR es:[rdi],rax
  405c72:	mov    rdi,rdx
  405c75:	sub    r12,rbp
  405c78:	mov    cl,0x20
  405c7a:	rep stos QWORD PTR es:[rdi],rax
  405c7d:	mov    rdi,rdx
  405c80:	jmp    0x405cb0
  405c82:	mov    BYTE PTR [rdi],0x9
  405c85:	mov    DWORD PTR [rdi+0x4],r12d
  405c89:	add    rsi,0x1
  405c8d:	mov    edx,DWORD PTR [rax+0xc]
  405c90:	add    rbx,0xc
  405c94:	mov    DWORD PTR [rbx-0xc],edx
  405c97:	add    edx,DWORD PTR [rax+0x8]
  405c9a:	mov    rax,rdi
  405c9d:	sub    rax,rbp
  405ca0:	add    rdi,0x8
  405ca4:	mov    DWORD PTR [rbx-0x4],eax
  405ca7:	mov    DWORD PTR [rbx-0x8],edx
  405caa:	cmp    rsi,0x20
  405cae:	je     0x405ce5
  405cb0:	mov    rcx,rsi
  405cb3:	call   0x4062e0
  405cb8:	test   rax,rax
  405cbb:	jne    0x405c82
  405cbd:	test   rsi,rsi
  405cc0:	je     0x405c3c
  405cc6:	mov    edx,esi
  405cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  405cd0:	mov    r8,rbp
  405cd3:	lea    rcx,[rip+0x7b26]        # 0x40d800
  405cda:	call   QWORD PTR [rip+0x8cb4]        # 0x40e994
  405ce0:	jmp    0x405c3c
  405ce5:	mov    edx,0x20
  405cea:	jmp    0x405cd0
  405cec:	nop    DWORD PTR [rax+0x0]
  405cf0:	push   rbx
  405cf1:	sub    rsp,0x20
  405cf5:	mov    rdx,QWORD PTR [rcx]
  405cf8:	mov    eax,DWORD PTR [rdx]
  405cfa:	mov    r8d,eax
  405cfd:	and    r8d,0x20ffffff
  405d04:	cmp    r8d,0x20474343
  405d0b:	je     0x405e10
  405d11:	cmp    eax,0xc0000091
  405d16:	mov    rbx,rcx
  405d19:	ja     0x405da0
  405d1f:	cmp    eax,0xc000008d
  405d24:	jae    0x405db7
  405d2a:	cmp    eax,0xc0000008
  405d2f:	je     0x405d63
  405d31:	ja     0x405d70
  405d33:	cmp    eax,0x80000002
  405d38:	je     0x405d63
  405d3a:	cmp    eax,0xc0000005
  405d3f:	jne    0x405d82
  405d41:	xor    edx,edx
  405d43:	mov    ecx,0xb
  405d48:	call   0x406520
  405d4d:	cmp    rax,0x1
  405d51:	je     0x405e80
  405d57:	test   rax,rax
  405d5a:	je     0x405d82
  405d5c:	mov    ecx,0xb
  405d61:	call   rax
  405d63:	mov    eax,0xffffffff
  405d68:	add    rsp,0x20
  405d6c:	pop    rbx
  405d6d:	ret    
  405d6e:	xchg   ax,ax
  405d70:	cmp    eax,0xc000001d
  405d75:	je     0x405e36
  405d7b:	cmp    eax,0xc000008c
  405d80:	je     0x405d63
  405d82:	mov    rax,QWORD PTR [rip+0x7937]        # 0x40d6c0
  405d89:	test   rax,rax
  405d8c:	je     0x405d68
  405d8e:	mov    rcx,rbx
  405d91:	add    rsp,0x20
  405d95:	pop    rbx
  405d96:	rex.W jmp rax
  405d99:	nop    DWORD PTR [rax+0x0]
  405da0:	cmp    eax,0xc0000094
  405da5:	je     0x405de2
  405da7:	ja     0x405e20
  405da9:	cmp    eax,0xc0000092
  405dae:	je     0x405d63
  405db0:	cmp    eax,0xc0000093
  405db5:	jne    0x405d82
  405db7:	xor    edx,edx
  405db9:	mov    ecx,0x8
  405dbe:	call   0x406520
  405dc3:	cmp    rax,0x1
  405dc7:	jne    0x405df4
  405dc9:	mov    edx,0x1
  405dce:	mov    ecx,0x8
  405dd3:	call   0x406520
  405dd8:	call   0x405540
  405ddd:	jmp    0x405d63
  405de2:	xor    edx,edx
  405de4:	mov    ecx,0x8
  405de9:	call   0x406520
  405dee:	cmp    rax,0x1
  405df2:	je     0x405e62
  405df4:	test   rax,rax
  405df7:	je     0x405d82
  405df9:	mov    ecx,0x8
  405dfe:	call   rax
  405e00:	mov    eax,0xffffffff
  405e05:	jmp    0x405d68
  405e0a:	nop    WORD PTR [rax+rax*1+0x0]
  405e10:	test   BYTE PTR [rdx+0x4],0x1
  405e14:	jne    0x405d11
  405e1a:	jmp    0x405d63
  405e1f:	nop
  405e20:	cmp    eax,0xc0000095
  405e25:	je     0x405d63
  405e2b:	cmp    eax,0xc0000096
  405e30:	jne    0x405d82
  405e36:	xor    edx,edx
  405e38:	mov    ecx,0x4
  405e3d:	call   0x406520
  405e42:	cmp    rax,0x1
  405e46:	je     0x405e94
  405e48:	test   rax,rax
  405e4b:	je     0x405d82
  405e51:	mov    ecx,0x4
  405e56:	call   rax
  405e58:	mov    eax,0xffffffff
  405e5d:	jmp    0x405d68
  405e62:	mov    edx,0x1
  405e67:	mov    ecx,0x8
  405e6c:	call   0x406520
  405e71:	jmp    0x405d63
  405e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e80:	mov    edx,0x1
  405e85:	mov    ecx,0xb
  405e8a:	call   0x406520
  405e8f:	jmp    0x405d63
  405e94:	mov    edx,0x1
  405e99:	mov    ecx,0x4
  405e9e:	call   0x406520
  405ea3:	jmp    0x405d63
  405ea8:	nop
  405ea9:	nop
  405eaa:	nop
  405eab:	nop
  405eac:	nop
  405ead:	nop
  405eae:	nop
  405eaf:	nop
  405eb0:	push   rbp
  405eb1:	push   rdi
  405eb2:	push   rsi
  405eb3:	push   rbx
  405eb4:	sub    rsp,0x28
  405eb8:	lea    rcx,[rip+0x7ae1]        # 0x40d9a0
  405ebf:	call   QWORD PTR [rip+0x8a77]        # 0x40e93c
  405ec5:	mov    rbx,QWORD PTR [rip+0x7ab4]        # 0x40d980
  405ecc:	test   rbx,rbx
  405ecf:	je     0x405f04
  405ed1:	mov    rbp,QWORD PTR [rip+0x8af4]        # 0x40e9cc
  405ed8:	mov    rdi,QWORD PTR [rip+0x8a7d]        # 0x40e95c
  405edf:	nop
  405ee0:	mov    ecx,DWORD PTR [rbx]
  405ee2:	call   rbp
  405ee4:	mov    rsi,rax
  405ee7:	call   rdi
  405ee9:	test   eax,eax
  405eeb:	jne    0x405efb
  405eed:	test   rsi,rsi
  405ef0:	je     0x405efb
  405ef2:	mov    rax,QWORD PTR [rbx+0x8]
  405ef6:	mov    rcx,rsi
  405ef9:	call   rax
  405efb:	mov    rbx,QWORD PTR [rbx+0x10]
  405eff:	test   rbx,rbx
  405f02:	jne    0x405ee0
  405f04:	mov    rax,QWORD PTR [rip+0x8a79]        # 0x40e984
  405f0b:	lea    rcx,[rip+0x7a8e]        # 0x40d9a0
  405f12:	add    rsp,0x28
  405f16:	pop    rbx
  405f17:	pop    rsi
  405f18:	pop    rdi
  405f19:	pop    rbp
  405f1a:	rex.W jmp rax
  405f1d:	nop    DWORD PTR [rax]
  405f20:	push   rdi
  405f21:	push   rsi
  405f22:	push   rbx
  405f23:	sub    rsp,0x20
  405f27:	mov    eax,DWORD PTR [rip+0x7a5b]        # 0x40d988
  405f2d:	test   eax,eax
  405f2f:	jne    0x405f40
  405f31:	add    rsp,0x20
  405f35:	pop    rbx
  405f36:	pop    rsi
  405f37:	pop    rdi
  405f38:	ret    
  405f39:	nop    DWORD PTR [rax+0x0]
  405f40:	mov    rsi,rdx
  405f43:	mov    edi,ecx
  405f45:	mov    edx,0x18
  405f4a:	mov    ecx,0x1
  405f4f:	call   0x406558
  405f54:	test   rax,rax
  405f57:	mov    rbx,rax
  405f5a:	je     0x405f98
  405f5c:	mov    DWORD PTR [rax],edi
  405f5e:	mov    QWORD PTR [rax+0x8],rsi
  405f62:	lea    rcx,[rip+0x7a37]        # 0x40d9a0
  405f69:	call   QWORD PTR [rip+0x89cd]        # 0x40e93c
  405f6f:	mov    rax,QWORD PTR [rip+0x7a0a]        # 0x40d980
  405f76:	lea    rcx,[rip+0x7a23]        # 0x40d9a0
  405f7d:	mov    QWORD PTR [rip+0x79fc],rbx        # 0x40d980
  405f84:	mov    QWORD PTR [rbx+0x10],rax
  405f88:	call   QWORD PTR [rip+0x89f6]        # 0x40e984
  405f8e:	xor    eax,eax
  405f90:	add    rsp,0x20
  405f94:	pop    rbx
  405f95:	pop    rsi
  405f96:	pop    rdi
  405f97:	ret    
  405f98:	mov    eax,0xffffffff
  405f9d:	jmp    0x405f31
  405f9f:	nop
  405fa0:	push   rbx
  405fa1:	sub    rsp,0x20
  405fa5:	mov    eax,DWORD PTR [rip+0x79dd]        # 0x40d988
  405fab:	test   eax,eax
  405fad:	jne    0x405fc0
  405faf:	xor    eax,eax
  405fb1:	add    rsp,0x20
  405fb5:	pop    rbx
  405fb6:	ret    
  405fb7:	nop    WORD PTR [rax+rax*1+0x0]
  405fc0:	mov    ebx,ecx
  405fc2:	lea    rcx,[rip+0x79d7]        # 0x40d9a0
  405fc9:	call   QWORD PTR [rip+0x896d]        # 0x40e93c
  405fcf:	mov    rdx,QWORD PTR [rip+0x79aa]        # 0x40d980
  405fd6:	test   rdx,rdx
  405fd9:	je     0x405ff7
  405fdb:	mov    eax,DWORD PTR [rdx]
  405fdd:	cmp    eax,ebx
  405fdf:	jne    0x405fee
  405fe1:	jmp    0x40602f
  405fe3:	mov    r8d,DWORD PTR [rax]
  405fe6:	cmp    r8d,ebx
  405fe9:	je     0x406010
  405feb:	mov    rdx,rax
  405fee:	mov    rax,QWORD PTR [rdx+0x10]
  405ff2:	test   rax,rax
  405ff5:	jne    0x405fe3
  405ff7:	lea    rcx,[rip+0x79a2]        # 0x40d9a0
  405ffe:	call   QWORD PTR [rip+0x8980]        # 0x40e984
  406004:	xor    eax,eax
  406006:	add    rsp,0x20
  40600a:	pop    rbx
  40600b:	ret    
  40600c:	nop    DWORD PTR [rax+0x0]
  406010:	mov    rcx,rax
  406013:	mov    rax,QWORD PTR [rax+0x10]
  406017:	mov    QWORD PTR [rdx+0x10],rax
  40601b:	call   0x406540
  406020:	lea    rcx,[rip+0x7979]        # 0x40d9a0
  406027:	call   QWORD PTR [rip+0x8957]        # 0x40e984
  40602d:	jmp    0x406004
  40602f:	mov    rax,QWORD PTR [rdx+0x10]
  406033:	mov    rcx,rdx
  406036:	mov    QWORD PTR [rip+0x7943],rax        # 0x40d980
  40603d:	jmp    0x40601b
  40603f:	nop
  406040:	push   rbx
  406041:	sub    rsp,0x20
  406045:	cmp    edx,0x1
  406048:	je     0x4060e0
  40604e:	jb     0x406080
  406050:	cmp    edx,0x2
  406053:	je     0x406070
  406055:	cmp    edx,0x3
  406058:	jne    0x406075
  40605a:	mov    eax,DWORD PTR [rip+0x7928]        # 0x40d988
  406060:	test   eax,eax
  406062:	je     0x406075
  406064:	call   0x405eb0
  406069:	jmp    0x406075
  40606b:	nop    DWORD PTR [rax+rax*1+0x0]
  406070:	call   0x405540
  406075:	mov    eax,0x1
  40607a:	add    rsp,0x20
  40607e:	pop    rbx
  40607f:	ret    
  406080:	mov    eax,DWORD PTR [rip+0x7902]        # 0x40d988
  406086:	test   eax,eax
  406088:	jne    0x406110
  40608e:	mov    eax,DWORD PTR [rip+0x78f4]        # 0x40d988
  406094:	cmp    eax,0x1
  406097:	jne    0x406075
  406099:	mov    rcx,QWORD PTR [rip+0x78e0]        # 0x40d980
  4060a0:	test   rcx,rcx
  4060a3:	je     0x4060b6
  4060a5:	mov    rbx,QWORD PTR [rcx+0x10]
  4060a9:	call   0x406540
  4060ae:	test   rbx,rbx
  4060b1:	mov    rcx,rbx
  4060b4:	jne    0x4060a5
  4060b6:	lea    rcx,[rip+0x78e3]        # 0x40d9a0
  4060bd:	mov    QWORD PTR [rip+0x78b8],0x0        # 0x40d980
  4060c8:	mov    DWORD PTR [rip+0x78b6],0x0        # 0x40d988
  4060d2:	call   QWORD PTR [rip+0x885c]        # 0x40e934
  4060d8:	jmp    0x406075
  4060da:	nop    WORD PTR [rax+rax*1+0x0]
  4060e0:	mov    eax,DWORD PTR [rip+0x78a2]        # 0x40d988
  4060e6:	test   eax,eax
  4060e8:	je     0x406100
  4060ea:	mov    eax,0x1
  4060ef:	mov    DWORD PTR [rip+0x788f],0x1        # 0x40d988
  4060f9:	add    rsp,0x20
  4060fd:	pop    rbx
  4060fe:	ret    
  4060ff:	nop
  406100:	lea    rcx,[rip+0x7899]        # 0x40d9a0
  406107:	call   QWORD PTR [rip+0x886f]        # 0x40e97c
  40610d:	jmp    0x4060ea
  40610f:	nop
  406110:	call   0x405eb0
  406115:	jmp    0x40608e
  40611a:	nop
  40611b:	nop
  40611c:	nop
  40611d:	nop
  40611e:	nop
  40611f:	nop
  406120:	movsxd rax,DWORD PTR [rcx+0x3c]
  406124:	add    rcx,rax
  406127:	xor    eax,eax
  406129:	cmp    DWORD PTR [rcx],0x4550
  40612f:	je     0x406133
  406131:	repz ret 
  406133:	xor    eax,eax
  406135:	cmp    WORD PTR [rcx+0x18],0x20b
  40613b:	sete   al
  40613e:	ret    
  40613f:	nop
  406140:	cmp    WORD PTR [rcx],0x5a4d
  406145:	je     0x406150
  406147:	xor    eax,eax
  406149:	ret    
  40614a:	nop    WORD PTR [rax+rax*1+0x0]
  406150:	jmp    0x406120
  406152:	nop    DWORD PTR [rax+0x0]
  406156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406160:	movsxd rax,DWORD PTR [rcx+0x3c]
  406164:	add    rcx,rax
  406167:	movzx  eax,WORD PTR [rcx+0x14]
  40616b:	lea    rax,[rcx+rax*1+0x18]
  406170:	movzx  ecx,WORD PTR [rcx+0x6]
  406174:	test   ecx,ecx
  406176:	je     0x4061a1
  406178:	sub    ecx,0x1
  40617b:	lea    rcx,[rcx+rcx*4]
  40617f:	lea    r9,[rax+rcx*8+0x28]
  406184:	mov    r8d,DWORD PTR [rax+0xc]
  406188:	cmp    r8,rdx
  40618b:	mov    rcx,r8
  40618e:	ja     0x406198
  406190:	add    ecx,DWORD PTR [rax+0x8]
  406193:	cmp    rdx,rcx
  406196:	jb     0x4061a3
  406198:	add    rax,0x28
  40619c:	cmp    rax,r9
  40619f:	jne    0x406184
  4061a1:	xor    eax,eax
  4061a3:	repz ret 
  4061a5:	nop
  4061a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061b0:	push   rdi
  4061b1:	push   rsi
  4061b2:	push   rbx
  4061b3:	sub    rsp,0x20
  4061b7:	mov    rsi,rcx
  4061ba:	call   0x406510
  4061bf:	cmp    rax,0x8
  4061c3:	ja     0x4061e0
  4061c5:	mov    rbx,QWORD PTR [rip+0x4764]        # 0x40a930
  4061cc:	xor    edi,edi
  4061ce:	cmp    WORD PTR [rbx],0x5a4d
  4061d3:	je     0x4061f0
  4061d5:	mov    rax,rdi
  4061d8:	add    rsp,0x20
  4061dc:	pop    rbx
  4061dd:	pop    rsi
  4061de:	pop    rdi
  4061df:	ret    
  4061e0:	xor    edi,edi
  4061e2:	mov    rax,rdi
  4061e5:	add    rsp,0x20
  4061e9:	pop    rbx
  4061ea:	pop    rsi
  4061eb:	pop    rdi
  4061ec:	ret    
  4061ed:	nop    DWORD PTR [rax]
  4061f0:	mov    rcx,rbx
  4061f3:	call   0x406120
  4061f8:	test   eax,eax
  4061fa:	je     0x4061d5
  4061fc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  406200:	add    rdx,rbx
  406203:	movzx  eax,WORD PTR [rdx+0x14]
  406207:	lea    rbx,[rdx+rax*1+0x18]
  40620c:	movzx  eax,WORD PTR [rdx+0x6]
  406210:	test   eax,eax
  406212:	je     0x4061d5
  406214:	sub    eax,0x1
  406217:	lea    rax,[rax+rax*4]
  40621b:	lea    rdi,[rbx+rax*8+0x28]
  406220:	jmp    0x40622b
  406222:	add    rbx,0x28
  406226:	cmp    rbx,rdi
  406229:	je     0x4061e0
  40622b:	mov    r8d,0x8
  406231:	mov    rdx,rsi
  406234:	mov    rcx,rbx
  406237:	call   0x406508
  40623c:	test   eax,eax
  40623e:	jne    0x406222
  406240:	mov    rdi,rbx
  406243:	mov    rax,rdi
  406246:	add    rsp,0x20
  40624a:	pop    rbx
  40624b:	pop    rsi
  40624c:	pop    rdi
  40624d:	ret    
  40624e:	xchg   ax,ax
  406250:	push   rsi
  406251:	push   rbx
  406252:	sub    rsp,0x28
  406256:	mov    rbx,QWORD PTR [rip+0x46d3]        # 0x40a930
  40625d:	cmp    WORD PTR [rbx],0x5a4d
  406262:	je     0x406270
  406264:	xor    eax,eax
  406266:	add    rsp,0x28
  40626a:	pop    rbx
  40626b:	pop    rsi
  40626c:	ret    
  40626d:	nop    DWORD PTR [rax]
  406270:	mov    rsi,rcx
  406273:	mov    rcx,rbx
  406276:	call   0x406120
  40627b:	test   eax,eax
  40627d:	je     0x406264
  40627f:	sub    rsi,rbx
  406282:	mov    rcx,rbx
  406285:	mov    rdx,rsi
  406288:	add    rsp,0x28
  40628c:	pop    rbx
  40628d:	pop    rsi
  40628e:	jmp    0x406160
  406293:	nop    DWORD PTR [rax]
  406296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062a0:	push   rbx
  4062a1:	sub    rsp,0x20
  4062a5:	mov    rbx,QWORD PTR [rip+0x4684]        # 0x40a930
  4062ac:	xor    eax,eax
  4062ae:	cmp    WORD PTR [rbx],0x5a4d
  4062b3:	je     0x4062c0
  4062b5:	add    rsp,0x20
  4062b9:	pop    rbx
  4062ba:	ret    
  4062bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4062c0:	mov    rcx,rbx
  4062c3:	call   0x406120
  4062c8:	test   eax,eax
  4062ca:	je     0x4062b5
  4062cc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4062d0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4062d5:	add    rsp,0x20
  4062d9:	pop    rbx
  4062da:	ret    
  4062db:	nop    DWORD PTR [rax+rax*1+0x0]
  4062e0:	push   rdi
  4062e1:	push   rsi
  4062e2:	push   rbx
  4062e3:	sub    rsp,0x20
  4062e7:	mov    rsi,QWORD PTR [rip+0x4642]        # 0x40a930
  4062ee:	xor    edi,edi
  4062f0:	mov    rbx,rcx
  4062f3:	cmp    WORD PTR [rsi],0x5a4d
  4062f8:	je     0x406305
  4062fa:	mov    rax,rdi
  4062fd:	add    rsp,0x20
  406301:	pop    rbx
  406302:	pop    rsi
  406303:	pop    rdi
  406304:	ret    
  406305:	mov    rcx,rsi
  406308:	call   0x406120
  40630d:	test   eax,eax
  40630f:	je     0x4062fa
  406311:	movsxd rax,DWORD PTR [rsi+0x3c]
  406315:	add    rsi,rax
  406318:	movzx  eax,WORD PTR [rsi+0x14]
  40631c:	lea    rdx,[rsi+rax*1+0x18]
  406321:	movzx  eax,WORD PTR [rsi+0x6]
  406325:	test   eax,eax
  406327:	je     0x4062fa
  406329:	sub    eax,0x1
  40632c:	lea    rax,[rax+rax*4]
  406330:	lea    rax,[rdx+rax*8+0x28]
  406335:	test   BYTE PTR [rdx+0x27],0x20
  406339:	je     0x406344
  40633b:	test   rbx,rbx
  40633e:	je     0x406360
  406340:	sub    rbx,0x1
  406344:	add    rdx,0x28
  406348:	cmp    rdx,rax
  40634b:	jne    0x406335
  40634d:	xor    edi,edi
  40634f:	mov    rax,rdi
  406352:	add    rsp,0x20
  406356:	pop    rbx
  406357:	pop    rsi
  406358:	pop    rdi
  406359:	ret    
  40635a:	nop    WORD PTR [rax+rax*1+0x0]
  406360:	mov    rdi,rdx
  406363:	mov    rax,rdi
  406366:	add    rsp,0x20
  40636a:	pop    rbx
  40636b:	pop    rsi
  40636c:	pop    rdi
  40636d:	ret    
  40636e:	xchg   ax,ax
  406370:	push   rsi
  406371:	push   rbx
  406372:	sub    rsp,0x28
  406376:	mov    rsi,QWORD PTR [rip+0x45b3]        # 0x40a930
  40637d:	xor    ebx,ebx
  40637f:	cmp    WORD PTR [rsi],0x5a4d
  406384:	je     0x406390
  406386:	mov    rax,rbx
  406389:	add    rsp,0x28
  40638d:	pop    rbx
  40638e:	pop    rsi
  40638f:	ret    
  406390:	mov    rcx,rsi
  406393:	call   0x406120
  406398:	test   eax,eax
  40639a:	cmovne rbx,rsi
  40639e:	mov    rax,rbx
  4063a1:	add    rsp,0x28
  4063a5:	pop    rbx
  4063a6:	pop    rsi
  4063a7:	ret    
  4063a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4063b0:	push   rsi
  4063b1:	push   rbx
  4063b2:	sub    rsp,0x28
  4063b6:	mov    rbx,QWORD PTR [rip+0x4573]        # 0x40a930
  4063bd:	xor    eax,eax
  4063bf:	cmp    WORD PTR [rbx],0x5a4d
  4063c4:	je     0x4063d0
  4063c6:	add    rsp,0x28
  4063ca:	pop    rbx
  4063cb:	pop    rsi
  4063cc:	ret    
  4063cd:	nop    DWORD PTR [rax]
  4063d0:	mov    rsi,rcx
  4063d3:	mov    rcx,rbx
  4063d6:	call   0x406120
  4063db:	test   eax,eax
  4063dd:	je     0x4063c6
  4063df:	sub    rsi,rbx
  4063e2:	mov    rcx,rbx
  4063e5:	mov    rdx,rsi
  4063e8:	call   0x406160
  4063ed:	test   rax,rax
  4063f0:	je     0x406401
  4063f2:	mov    eax,DWORD PTR [rax+0x24]
  4063f5:	not    eax
  4063f7:	shr    eax,0x1f
  4063fa:	add    rsp,0x28
  4063fe:	pop    rbx
  4063ff:	pop    rsi
  406400:	ret    
  406401:	xor    eax,eax
  406403:	jmp    0x4063c6
  406405:	nop
  406406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406410:	push   rbp
  406411:	push   rdi
  406412:	push   rsi
  406413:	push   rbx
  406414:	sub    rsp,0x28
  406418:	mov    rdi,QWORD PTR [rip+0x4511]        # 0x40a930
  40641f:	xor    ebp,ebp
  406421:	mov    esi,ecx
  406423:	cmp    WORD PTR [rdi],0x5a4d
  406428:	je     0x406440
  40642a:	mov    rax,rbp
  40642d:	add    rsp,0x28
  406431:	pop    rbx
  406432:	pop    rsi
  406433:	pop    rdi
  406434:	pop    rbp
  406435:	ret    
  406436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406440:	mov    rcx,rdi
  406443:	call   0x406120
  406448:	test   eax,eax
  40644a:	je     0x40642a
  40644c:	movsxd rax,DWORD PTR [rdi+0x3c]
  406450:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  406457:	test   edx,edx
  406459:	je     0x40642a
  40645b:	mov    ebx,edx
  40645d:	mov    rcx,rdi
  406460:	mov    rdx,rbx
  406463:	call   0x406160
  406468:	test   rax,rax
  40646b:	je     0x40642a
  40646d:	add    rbx,rdi
  406470:	mov    rdx,rbx
  406473:	jne    0x406487
  406475:	jmp    0x40642a
  406477:	nop    WORD PTR [rax+rax*1+0x0]
  406480:	sub    esi,0x1
  406483:	add    rdx,0x14
  406487:	mov    ecx,DWORD PTR [rdx+0x4]
  40648a:	test   ecx,ecx
  40648c:	jne    0x406495
  40648e:	mov    eax,DWORD PTR [rdx+0xc]
  406491:	test   eax,eax
  406493:	je     0x4064b0
  406495:	test   esi,esi
  406497:	jg     0x406480
  406499:	mov    ebp,DWORD PTR [rdx+0xc]
  40649c:	add    rbp,rdi
  40649f:	mov    rax,rbp
  4064a2:	add    rsp,0x28
  4064a6:	pop    rbx
  4064a7:	pop    rsi
  4064a8:	pop    rdi
  4064a9:	pop    rbp
  4064aa:	ret    
  4064ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4064b0:	xor    ebp,ebp
  4064b2:	mov    rax,rbp
  4064b5:	add    rsp,0x28
  4064b9:	pop    rbx
  4064ba:	pop    rsi
  4064bb:	pop    rdi
  4064bc:	pop    rbp
  4064bd:	ret    
  4064be:	nop
  4064bf:	nop
  4064c0:	push   rcx
  4064c1:	push   rax
  4064c2:	cmp    rax,0x1000
  4064c8:	lea    rcx,[rsp+0x18]
  4064cd:	jb     0x4064e8
  4064cf:	sub    rcx,0x1000
  4064d6:	or     QWORD PTR [rcx],0x0
  4064da:	sub    rax,0x1000
  4064e0:	cmp    rax,0x1000
  4064e6:	ja     0x4064cf
  4064e8:	sub    rcx,rax
  4064eb:	or     QWORD PTR [rcx],0x0
  4064ef:	pop    rax
  4064f0:	pop    rcx
  4064f1:	ret    
  4064f2:	nop
  4064f3:	nop
  4064f4:	nop
  4064f5:	nop
  4064f6:	nop
  4064f7:	nop
  4064f8:	nop
  4064f9:	nop
  4064fa:	nop
  4064fb:	nop
  4064fc:	nop
  4064fd:	nop
  4064fe:	nop
  4064ff:	nop
  406500:	jmp    QWORD PTR [rip+0x85ce]        # 0x40ead4
  406506:	nop
  406507:	nop
  406508:	jmp    QWORD PTR [rip+0x85be]        # 0x40eacc
  40650e:	nop
  40650f:	nop
  406510:	jmp    QWORD PTR [rip+0x85ae]        # 0x40eac4
  406516:	nop
  406517:	nop
  406518:	jmp    QWORD PTR [rip+0x859e]        # 0x40eabc
  40651e:	nop
  40651f:	nop
  406520:	jmp    QWORD PTR [rip+0x858e]        # 0x40eab4
  406526:	nop
  406527:	nop
  406528:	jmp    QWORD PTR [rip+0x857e]        # 0x40eaac
  40652e:	nop
  40652f:	nop
  406530:	jmp    QWORD PTR [rip+0x856e]        # 0x40eaa4
  406536:	nop
  406537:	nop
  406538:	jmp    QWORD PTR [rip+0x855e]        # 0x40ea9c
  40653e:	nop
  40653f:	nop
  406540:	jmp    QWORD PTR [rip+0x854e]        # 0x40ea94
  406546:	nop
  406547:	nop
  406548:	jmp    QWORD PTR [rip+0x853e]        # 0x40ea8c
  40654e:	nop
  40654f:	nop
  406550:	jmp    QWORD PTR [rip+0x852e]        # 0x40ea84
  406556:	nop
  406557:	nop
  406558:	jmp    QWORD PTR [rip+0x851e]        # 0x40ea7c
  40655e:	nop
  40655f:	nop
  406560:	jmp    QWORD PTR [rip+0x850e]        # 0x40ea74
  406566:	nop
  406567:	nop
  406568:	jmp    QWORD PTR [rip+0x84fe]        # 0x40ea6c
  40656e:	nop
  40656f:	nop
  406570:	jmp    QWORD PTR [rip+0x84ee]        # 0x40ea64
  406576:	nop
  406577:	nop
  406578:	jmp    QWORD PTR [rip+0x84de]        # 0x40ea5c
  40657e:	nop
  40657f:	nop
  406580:	jmp    QWORD PTR [rip+0x84ce]        # 0x40ea54
  406586:	nop
  406587:	nop
  406588:	jmp    QWORD PTR [rip+0x84b6]        # 0x40ea44
  40658e:	nop
  40658f:	nop
  406590:	jmp    QWORD PTR [rip+0x84a6]        # 0x40ea3c
  406596:	nop
  406597:	nop
  406598:	jmp    QWORD PTR [rip+0x848e]        # 0x40ea2c
  40659e:	nop
  40659f:	nop
  4065a0:	jmp    QWORD PTR [rip+0x847e]        # 0x40ea24
  4065a6:	nop
  4065a7:	nop
  4065a8:	jmp    QWORD PTR [rip+0x846e]        # 0x40ea1c
  4065ae:	nop
  4065af:	nop
  4065b0:	jmp    QWORD PTR [rip+0x845e]        # 0x40ea14
  4065b6:	nop
  4065b7:	nop
  4065b8:	jmp    QWORD PTR [rip+0x8446]        # 0x40ea04
  4065be:	nop
  4065bf:	nop
  4065c0:	jmp    QWORD PTR [rip+0x8436]        # 0x40e9fc
  4065c6:	nop
  4065c7:	nop
  4065c8:	jmp    QWORD PTR [rip+0x8426]        # 0x40e9f4
  4065ce:	nop
  4065cf:	nop
  4065d0:	mov    rax,QWORD PTR [rip+0x7419]        # 0x40d9f0
  4065d7:	ret    
  4065d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4065e0:	mov    rax,rcx
  4065e3:	xchg   QWORD PTR [rip+0x7406],rax        # 0x40d9f0
  4065ea:	ret    
  4065eb:	nop
  4065ec:	nop
  4065ed:	nop
  4065ee:	nop
  4065ef:	nop
  4065f0:	jmp    QWORD PTR [rip+0x83ee]        # 0x40e9e4
  4065f6:	nop
  4065f7:	nop
  4065f8:	jmp    QWORD PTR [rip+0x83de]        # 0x40e9dc
  4065fe:	nop
  4065ff:	nop
  406600:	jmp    QWORD PTR [rip+0x83ce]        # 0x40e9d4
  406606:	nop
  406607:	nop
  406608:	jmp    QWORD PTR [rip+0x83be]        # 0x40e9cc
  40660e:	nop
  40660f:	nop
  406610:	jmp    QWORD PTR [rip+0x83ae]        # 0x40e9c4
  406616:	nop
  406617:	nop
  406618:	jmp    QWORD PTR [rip+0x839e]        # 0x40e9bc
  40661e:	nop
  40661f:	nop
  406620:	jmp    QWORD PTR [rip+0x838e]        # 0x40e9b4
  406626:	nop
  406627:	nop
  406628:	jmp    QWORD PTR [rip+0x837e]        # 0x40e9ac
  40662e:	nop
  40662f:	nop
  406630:	jmp    QWORD PTR [rip+0x836e]        # 0x40e9a4
  406636:	nop
  406637:	nop
  406638:	jmp    QWORD PTR [rip+0x835e]        # 0x40e99c
  40663e:	nop
  40663f:	nop
  406640:	jmp    QWORD PTR [rip+0x834e]        # 0x40e994
  406646:	nop
  406647:	nop
  406648:	jmp    QWORD PTR [rip+0x833e]        # 0x40e98c
  40664e:	nop
  40664f:	nop
  406650:	jmp    QWORD PTR [rip+0x832e]        # 0x40e984
  406656:	nop
  406657:	nop
  406658:	jmp    QWORD PTR [rip+0x831e]        # 0x40e97c
  40665e:	nop
  40665f:	nop
  406660:	jmp    QWORD PTR [rip+0x830e]        # 0x40e974
  406666:	nop
  406667:	nop
  406668:	jmp    QWORD PTR [rip+0x82fe]        # 0x40e96c
  40666e:	nop
  40666f:	nop
  406670:	jmp    QWORD PTR [rip+0x82ee]        # 0x40e964
  406676:	nop
  406677:	nop
  406678:	jmp    QWORD PTR [rip+0x82de]        # 0x40e95c
  40667e:	nop
  40667f:	nop
  406680:	jmp    QWORD PTR [rip+0x82ce]        # 0x40e954
  406686:	nop
  406687:	nop
  406688:	jmp    QWORD PTR [rip+0x82be]        # 0x40e94c
  40668e:	nop
  40668f:	nop
  406690:	jmp    QWORD PTR [rip+0x82ae]        # 0x40e944
  406696:	nop
  406697:	nop
  406698:	jmp    QWORD PTR [rip+0x829e]        # 0x40e93c
  40669e:	nop
  40669f:	nop
  4066a0:	jmp    QWORD PTR [rip+0x828e]        # 0x40e934
  4066a6:	nop
  4066a7:	nop
  4066a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4066b0:	push   r15
  4066b2:	push   r14
  4066b4:	push   r13
  4066b6:	push   r12
  4066b8:	push   rbp
  4066b9:	push   rdi
  4066ba:	push   rsi
  4066bb:	push   rbx
  4066bc:	sub    rsp,0x298
  4066c3:	lea    rdi,[rsp+0x170]
  4066cb:	mov    DWORD PTR [rsp+0x2e0],ecx
  4066d2:	mov    QWORD PTR [rsp+0x2e8],rdx
  4066da:	call   0x405110
  4066df:	xor    eax,eax
  4066e1:	mov    ecx,0x24
  4066e6:	lea    rdx,[rip+0x2e12]        # 0x4094ff
  4066ed:	rep stos QWORD PTR es:[rdi],rax
  4066f0:	lea    rax,[rip+0x3a64]        # 0x40a15b
  4066f7:	mov    QWORD PTR [rsp+0xb8],0x0
  406703:	mov    DWORD PTR [rsp+0xa0],0x0
  40670e:	mov    DWORD PTR [rsp+0xa4],0x0
  406719:	mov    QWORD PTR [rsp+0xc0],0x0
  406725:	mov    QWORD PTR [rsp+0x170],rax
  40672d:	lea    rax,[rsp+0xb8]
  406735:	mov    DWORD PTR [rsp+0x180],0x4
  406740:	mov    DWORD PTR [rsp+0x23c],0x1
  40674b:	mov    DWORD PTR [rsp+0x240],0x6
  406756:	mov    QWORD PTR [rsp+0x188],rax
  40675e:	lea    rax,[rip+0x3a03]        # 0x40a168
  406765:	mov    QWORD PTR [rsp+0x190],rax
  40676d:	lea    rax,[rip+0x3a1e]        # 0x40a192
  406774:	mov    QWORD PTR [rsp+0x198],rax
  40677c:	lea    rax,[rip+0x3a19]        # 0x40a19c
  406783:	mov    QWORD PTR [rsp+0x1a0],rax
  40678b:	lea    rax,[rsp+0xa4]
  406793:	mov    QWORD PTR [rsp+0x1b8],rax
  40679b:	lea    rax,[rip+0x3a06]        # 0x40a1a8
  4067a2:	mov    QWORD PTR [rsp+0x1c0],rax
  4067aa:	lea    rax,[rip+0x3a16]        # 0x40a1c7
  4067b1:	mov    QWORD PTR [rsp+0x1d0],rax
  4067b9:	lea    rax,[rsp+0xa0]
  4067c1:	mov    QWORD PTR [rsp+0x1e8],rax
  4067c9:	lea    rax,[rip+0x3a00]        # 0x40a1d0
  4067d0:	mov    QWORD PTR [rsp+0x1f0],rax
  4067d8:	lea    rax,[rip+0x3a18]        # 0x40a1f7
  4067df:	mov    QWORD PTR [rsp+0x200],rax
  4067e7:	lea    rax,[rip+0x6842]        # 0x40d030
  4067ee:	mov    QWORD PTR [rsp+0x218],rax
  4067f6:	lea    rax,[rip+0x3a0b]        # 0x40a208
  4067fd:	mov    QWORD PTR [rsp+0x220],rax
  406805:	lea    rax,[rip+0x3a21]        # 0x40a22d
  40680c:	mov    QWORD PTR [rsp+0x230],rax
  406814:	lea    rax,[rsp+0xc0]
  40681c:	mov    QWORD PTR [rsp+0x248],rax
  406824:	call   0x404f70
  406829:	lea    rcx,[rip+0x3a09]        # 0x40a239
  406830:	call   0x404f68
  406835:	call   0x404f60
  40683a:	lea    rcx,[rip+0x39f8]        # 0x40a239
  406841:	mov    rbx,rax
  406844:	mov    rdx,rax
  406847:	call   0x404f88
  40684c:	mov    rcx,rbx
  40684f:	call   0x404f18
  406854:	lea    rdx,[rip+0x39e5]        # 0x40a240
  40685b:	lea    rcx,[rip+0x39d7]        # 0x40a239
  406862:	call   0x404f90
  406867:	lea    rcx,[rip+0x3924]        # 0x40a192
  40686e:	call   0x404e38
  406873:	lea    rdx,[rip+0x39bf]        # 0x40a239
  40687a:	mov    rcx,rax
  40687d:	mov    rbx,rax
  406880:	call   0x404e20
  406885:	lea    rdx,[rip+0x39bc]        # 0x40a248
  40688c:	mov    rcx,rbx
  40688f:	call   0x404e28
  406894:	lea    rdx,[rsp+0x170]
  40689c:	lea    r8,[rip+0x3996]        # 0x40a239
  4068a3:	mov    rcx,rbx
  4068a6:	call   0x404e48
  4068ab:	lea    rax,[rsp+0xb0]
  4068b3:	lea    r8,[rsp+0x2e8]
  4068bb:	lea    rdx,[rsp+0x2e0]
  4068c3:	mov    rcx,rbx
  4068c6:	mov    QWORD PTR [rsp+0xb0],0x0
  4068d2:	mov    r9,rax
  4068d5:	mov    QWORD PTR [rsp+0x78],rax
  4068da:	call   0x404e30
  4068df:	test   eax,eax
  4068e1:	je     0x406dc5
  4068e7:	mov    rcx,rbx
  4068ea:	call   0x404e40
  4068ef:	cmp    QWORD PTR [rsp+0xc0],0x0
  4068f8:	je     0x4072b3
  4068fe:	cmp    QWORD PTR [rsp+0xb8],0x0
  406907:	mov    rax,QWORD PTR [rsp+0x2e8]
  40690f:	mov    rsi,QWORD PTR [rax+0x8]
  406913:	je     0x4070d1
  406919:	mov    rcx,QWORD PTR [rsp+0xb8]
  406921:	lea    rdx,[rip+0x39fc]        # 0x40a324
  406928:	xor    r8d,r8d
  40692b:	call   0x404f48
  406930:	cmp    QWORD PTR [rsp+0xc0],0x0
  406939:	mov    QWORD PTR [rsp+0x70],rax
  40693e:	mov    QWORD PTR [rsp+0x68],0x0
  406947:	je     0x4070de
  40694d:	mov    eax,DWORD PTR [rsp+0xa4]
  406954:	lea    rdi,[rsp+0xe0]
  40695c:	mov    ecx,0xa
  406961:	lea    r9,[rip+0xffffffffffffb6a8]        # 0x402010
  406968:	lea    r8,[rip+0xffffffffffffe5a9]        # 0x404f18
  40696f:	mov    rsi,QWORD PTR [rsp+0xc0]
  406977:	mov    QWORD PTR [rsp+0x48],rdi
  40697c:	mov    QWORD PTR [rsp+0xc8],0x0
  406988:	lea    r13,[rsp+0xd8]
  406990:	mov    edx,eax
  406992:	mov    DWORD PTR [rsp+0x58],eax
  406996:	xor    eax,eax
  406998:	rep stos DWORD PTR es:[rdi],eax
  40699a:	lea    rdi,[rip+0xffffffffffffc3ff]        # 0x402da0
  4069a1:	mov    QWORD PTR [rsp+0xe0],rdi
  4069a9:	lea    rdi,[rip+0xffffffffffffc120]        # 0x402ad0
  4069b0:	mov    QWORD PTR [rsp+0xe8],rdi
  4069b8:	lea    rdi,[rip+0xffffffffffffbdd1]        # 0x402790
  4069bf:	mov    cl,0x18
  4069c1:	mov    QWORD PTR [rsp+0xf0],rdi
  4069c9:	lea    rdi,[rsp+0x110]
  4069d1:	mov    QWORD PTR [rsp+0x40],rdi
  4069d6:	rep stos DWORD PTR es:[rdi],eax
  4069d8:	mov    DWORD PTR [rsp+0x110],edx
  4069df:	lea    rcx,[rip+0xffffffffffffe382]        # 0x404d68
  4069e6:	lea    rdx,[rip+0xffffffffffffe393]        # 0x404d80
  4069ed:	lea    rdi,[rsp+0xc8]
  4069f5:	call   0x404ef8
  4069fa:	lea    r9,[rip+0xffffffffffffb60f]        # 0x402010
  406a01:	lea    r8,[rip+0xffffffffffffe510]        # 0x404f18
  406a08:	lea    rdx,[rip+0xffffffffffffe371]        # 0x404d80
  406a0f:	lea    rcx,[rip+0xffffffffffffe352]        # 0x404d68
  406a16:	mov    QWORD PTR [rsp+0x128],rax
  406a1e:	call   0x404ef8
  406a23:	lea    r9,[rip+0xffffffffffffb5b6]        # 0x401fe0
  406a2a:	lea    r8,[rip+0xffffffffffffe4e7]        # 0x404f18
  406a31:	lea    rdx,[rip+0xffffffffffffe348]        # 0x404d80
  406a38:	lea    rcx,[rip+0xffffffffffffe329]        # 0x404d68
  406a3f:	mov    QWORD PTR [rsp+0x120],rax
  406a47:	call   0x404ef8
  406a4c:	mov    QWORD PTR [rsp+0x118],rax
  406a54:	lea    rax,[rsp+0xd0]
  406a5c:	mov    r14,QWORD PTR [rip+0x7fb1]        # 0x40ea14
  406a63:	mov    QWORD PTR [rsp+0x30],rax
  406a68:	lea    rax,[rsp+0xac]
  406a70:	mov    QWORD PTR [rsp+0x50],r14
  406a75:	mov    QWORD PTR [rsp+0x60],rax
  406a7a:	nop    WORD PTR [rax+rax*1+0x0]
  406a80:	add    rsi,0x8
  406a84:	mov    rbp,QWORD PTR [rsi-0x8]
  406a88:	test   rbp,rbp
  406a8b:	je     0x406ae3
  406a8d:	mov    rdx,QWORD PTR [rsp+0x30]
  406a92:	mov    r9,rdi
  406a95:	mov    r8,r13
  406a98:	mov    rcx,rbp
  406a9b:	call   0x404f28
  406aa0:	test   eax,eax
  406aa2:	jne    0x406c00
  406aa8:	mov    rax,QWORD PTR [rsp+0xc8]
  406ab0:	add    rsi,0x8
  406ab4:	mov    rbx,QWORD PTR [rax+0x8]
  406ab8:	mov    rax,QWORD PTR [rsp+0x50]
  406abd:	call   rax
  406abf:	lea    rdx,[rip+0x3828]        # 0x40a2ee
  406ac6:	lea    rcx,[rax+0x60]
  406aca:	mov    r8,rbx
  406acd:	call   0x404f80
  406ad2:	mov    rcx,rdi
  406ad5:	call   0x404f40
  406ada:	mov    rbp,QWORD PTR [rsi-0x8]
  406ade:	test   rbp,rbp
  406ae1:	jne    0x406a8d
  406ae3:	mov    rcx,QWORD PTR [rsp+0x120]
  406aeb:	call   0x404ed8
  406af0:	mov    rcx,QWORD PTR [rsp+0x128]
  406af8:	call   0x404ed8
  406afd:	mov    rax,QWORD PTR [rsp+0x118]
  406b05:	test   rax,rax
  406b08:	mov    QWORD PTR [rsp+0x38],rax
  406b0d:	je     0x406ec5
  406b13:	cmp    QWORD PTR [rsp+0x68],0x0
  406b19:	je     0x406e05
  406b1f:	mov    eax,DWORD PTR [rsp+0xa4]
  406b26:	mov    QWORD PTR [rsp+0x110],0x0
  406b32:	mov    DWORD PTR [rsp+0x30],eax
  406b36:	mov    rax,QWORD PTR [rip+0x7ed7]        # 0x40ea14
  406b3d:	mov    QWORD PTR [rsp+0x90],rax
  406b45:	mov    QWORD PTR [rsp+0x48],rax
  406b4a:	mov    QWORD PTR [rsp+0x98],rax
  406b52:	mov    QWORD PTR [rsp+0x58],rax
  406b57:	mov    rax,QWORD PTR [rsp+0x68]
  406b5c:	mov    r13,QWORD PTR [rax]
  406b5f:	test   r13,r13
  406b62:	je     0x406e05
  406b68:	call   0x404ea8
  406b6d:	mov    r9,QWORD PTR [rsp+0x40]
  406b72:	xor    r8d,r8d
  406b75:	mov    rdx,r13
  406b78:	mov    rcx,rax
  406b7b:	mov    r14,rax
  406b7e:	call   0x404eb0
  406b83:	test   eax,eax
  406b85:	jne    0x406ed9
  406b8b:	mov    rax,QWORD PTR [rsp+0x110]
  406b93:	mov    rsi,QWORD PTR [rsp+0x58]
  406b98:	mov    rbx,QWORD PTR [rax+0x8]
  406b9c:	call   rsi
  406b9e:	lea    rdx,[rip+0x3857]        # 0x40a3fc
  406ba5:	lea    rcx,[rax+0x60]
  406ba9:	mov    r8,r13
  406bac:	mov    r9,rbx
  406baf:	call   0x404f80
  406bb4:	mov    rcx,r14
  406bb7:	call   0x404ed0
  406bbc:	mov    rcx,QWORD PTR [rsp+0x40]
  406bc1:	call   0x404f40
  406bc6:	cmp    DWORD PTR [rsp+0x30],0x0
  406bcb:	jne    0x4070aa
  406bd1:	lea    rcx,[rip+0x382e]        # 0x40a406
  406bd8:	call   0x404f78
  406bdd:	mov    rbx,rax
  406be0:	call   rsi
  406be2:	lea    rcx,[rax+0x60]
  406be6:	mov    rdx,rbx
  406be9:	call   0x404f80
  406bee:	add    QWORD PTR [rsp+0x68],0x8
  406bf4:	jmp    0x406b57
  406bf9:	nop    DWORD PTR [rax+0x0]
  406c00:	mov    r8,QWORD PTR [rsp+0x40]
  406c05:	mov    rcx,QWORD PTR [rsp+0x48]
  406c0a:	xor    r9d,r9d
  406c0d:	mov    edx,0xe
  406c12:	call   0x404e58
  406c17:	mov    r8,QWORD PTR [rsp+0xd8]
  406c1f:	mov    rdx,QWORD PTR [rsp+0xd0]
  406c27:	mov    r9,rdi
  406c2a:	mov    rcx,rax
  406c2d:	mov    r12,rax
  406c30:	call   0x404e50
  406c35:	test   eax,eax
  406c37:	jne    0x406db0
  406c3d:	mov    rbx,QWORD PTR [rsp+0x130]
  406c45:	test   rbx,rbx
  406c48:	je     0x406c69
  406c4a:	nop    WORD PTR [rax+rax*1+0x0]
  406c50:	mov    rdx,QWORD PTR [rbx]
  406c53:	mov    rcx,QWORD PTR [rsp+0x118]
  406c5b:	call   0x404ee8
  406c60:	mov    rbx,QWORD PTR [rbx+0x8]
  406c64:	test   rbx,rbx
  406c67:	jne    0x406c50
  406c69:	mov    rbx,QWORD PTR [rsp+0x138]
  406c71:	test   rbx,rbx
  406c74:	je     0x406c99
  406c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c80:	mov    rdx,QWORD PTR [rbx]
  406c83:	mov    rcx,QWORD PTR [rsp+0x120]
  406c8b:	call   0x404ee8
  406c90:	mov    rbx,QWORD PTR [rbx+0x8]
  406c94:	test   rbx,rbx
  406c97:	jne    0x406c80
  406c99:	mov    rbx,QWORD PTR [rsp+0x140]
  406ca1:	test   rbx,rbx
  406ca4:	je     0x406cc9
  406ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cb0:	mov    rdx,QWORD PTR [rbx]
  406cb3:	mov    rcx,QWORD PTR [rsp+0x128]
  406cbb:	call   0x404ee8
  406cc0:	mov    rbx,QWORD PTR [rbx+0x8]
  406cc4:	test   rbx,rbx
  406cc7:	jne    0x406cb0
  406cc9:	mov    r8,QWORD PTR [rsp+0x60]
  406cce:	lea    rdx,[rsp+0xa8]
  406cd6:	mov    rcx,r12
  406cd9:	call   0x404e60
  406cde:	mov    rax,QWORD PTR [rsp+0xc8]
  406ce6:	mov    r9d,DWORD PTR [rsp+0xa8]
  406cee:	mov    r15d,DWORD PTR [rsp+0xac]
  406cf6:	mov    rbx,QWORD PTR [rax+0x8]
  406cfa:	mov    DWORD PTR [rsp+0x38],r9d
  406cff:	call   r14
  406d02:	mov    r9d,DWORD PTR [rsp+0x38]
  406d07:	lea    rcx,[rax+0x60]
  406d0b:	lea    rdx,[rip+0x368d]        # 0x40a39f
  406d12:	mov    r8,rbp
  406d15:	mov    QWORD PTR [rsp+0x28],rbx
  406d1a:	mov    DWORD PTR [rsp+0x20],r15d
  406d1f:	call   0x404f80
  406d24:	mov    rcx,rdi
  406d27:	call   0x404f40
  406d2c:	mov    eax,DWORD PTR [rsp+0x58]
  406d30:	test   eax,eax
  406d32:	jne    0x4071d2
  406d38:	lea    rcx,[rip+0x3699]        # 0x40a3d8
  406d3f:	call   0x404f78
  406d44:	mov    rbx,rax
  406d47:	call   r14
  406d4a:	lea    rcx,[rax+0x60]
  406d4e:	mov    rdx,rbx
  406d51:	call   0x404f80
  406d56:	mov    rcx,r12
  406d59:	call   0x404e78
  406d5e:	mov    rcx,QWORD PTR [rsp+0x130]
  406d66:	call   0x404d90
  406d6b:	mov    rcx,QWORD PTR [rsp+0x138]
  406d73:	call   0x404d90
  406d78:	mov    rcx,QWORD PTR [rsp+0x140]
  406d80:	call   0x404d90
  406d85:	mov    QWORD PTR [rsp+0x130],0x0
  406d91:	mov    QWORD PTR [rsp+0x138],0x0
  406d9d:	mov    QWORD PTR [rsp+0x140],0x0
  406da9:	jmp    0x406a80
  406dae:	xchg   ax,ax
  406db0:	mov    rdx,rdi
  406db3:	mov    rcx,r12
  406db6:	call   0x404e80
  406dbb:	test   eax,eax
  406dbd:	je     0x406c3d
  406dc3:	jmp    0x406d56
  406dc5:	mov    rax,QWORD PTR [rsp+0xb0]
  406dcd:	mov    rbx,QWORD PTR [rax+0x8]
  406dd1:	call   QWORD PTR [rip+0x7c3d]        # 0x40ea14
  406dd7:	lea    rdx,[rip+0x3510]        # 0x40a2ee
  406dde:	lea    rcx,[rax+0x60]
  406de2:	mov    r8,rbx
  406de5:	mov    ebx,0x1
  406dea:	call   0x404f80
  406def:	mov    eax,ebx
  406df1:	add    rsp,0x298
  406df8:	pop    rbx
  406df9:	pop    rsi
  406dfa:	pop    rdi
  406dfb:	pop    rbp
  406dfc:	pop    r12
  406dfe:	pop    r13
  406e00:	pop    r14
  406e02:	pop    r15
  406e04:	ret    
  406e05:	cmp    DWORD PTR [rsp+0xa0],0x0
  406e0d:	jne    0x406e6d
  406e0f:	mov    rdi,QWORD PTR [rsp+0x40]
  406e14:	mov    rsi,QWORD PTR [rsp+0x38]
  406e19:	lea    rcx,[rdi+0x8]
  406e1d:	mov    QWORD PTR [rsp+0x110],rsi
  406e25:	call   0x402680
  406e2a:	lea    rdx,[rip+0xffffffffffffb87f]        # 0x4026b0
  406e31:	mov    r8,rdi
  406e34:	mov    rcx,rsi
  406e37:	call   0x404f10
  406e3c:	mov    r9,QWORD PTR [rsp+0x78]
  406e41:	mov    rdx,QWORD PTR [rsp+0x70]
  406e46:	xor    r8d,r8d
  406e49:	mov    rcx,QWORD PTR [rsp+0x118]
  406e51:	call   0x401d80
  406e56:	mov    rcx,QWORD PTR [rsp+0x118]
  406e5e:	mov    ebx,eax
  406e60:	call   0x404ed8
  406e65:	test   ebx,ebx
  406e67:	je     0x4073fa
  406e6d:	mov    rcx,QWORD PTR [rsp+0x70]
  406e72:	xor    ebx,ebx
  406e74:	call   0x404f18
  406e79:	jmp    0x406def
  406e7e:	lea    rcx,[rip+0x360b]        # 0x40a490
  406e85:	call   0x404f78
  406e8a:	mov    rbx,rax
  406e8d:	mov    rax,QWORD PTR [rsp+0x90]
  406e95:	call   rax
  406e97:	lea    rcx,[rax+0x60]
  406e9b:	mov    rdx,rbx
  406e9e:	call   0x404f80
  406ea3:	mov    rcx,r14
  406ea6:	call   0x404ed0
  406eab:	mov    rcx,QWORD PTR [rsp+0x88]
  406eb3:	call   0x404d50
  406eb8:	mov    rcx,QWORD PTR [rsp+0x80]
  406ec0:	call   0x404d50
  406ec5:	mov    rcx,QWORD PTR [rsp+0x70]
  406eca:	mov    ebx,0x1
  406ecf:	call   0x404f18
  406ed4:	jmp    0x406def
  406ed9:	xor    edx,edx
  406edb:	mov    rcx,r14
  406ede:	call   0x404ec8
  406ee3:	mov    QWORD PTR [rsp+0x60],r13
  406ee8:	mov    QWORD PTR [rsp+0x88],rax
  406ef0:	mov    QWORD PTR [rsp+0x50],rax
  406ef5:	mov    rax,QWORD PTR [rsp+0x50]
  406efa:	mov    rdi,QWORD PTR [rax]
  406efd:	test   rdi,rdi
  406f00:	je     0x407540
  406f06:	mov    rcx,QWORD PTR [rsp+0x38]
  406f0b:	mov    rdx,rdi
  406f0e:	call   0x404f00
  406f13:	test   rax,rax
  406f16:	mov    r15,rax
  406f19:	je     0x407086
  406f1f:	xor    r9d,r9d
  406f22:	xor    r8d,r8d
  406f25:	mov    rdx,rdi
  406f28:	mov    rcx,r14
  406f2b:	call   0x404ec0
  406f30:	test   rax,rax
  406f33:	mov    QWORD PTR [rsp+0x80],rax
  406f3b:	je     0x40744d
  406f41:	mov    rbx,QWORD PTR [rax]
  406f44:	lea    r13,[rax+0x8]
  406f48:	test   rbx,rbx
  406f4b:	je     0x407079
  406f51:	mov    rcx,QWORD PTR [r15+0x28]
  406f55:	mov    rdx,rbx
  406f58:	call   0x404f00
  406f5d:	test   rax,rax
  406f60:	mov    rsi,rax
  406f63:	je     0x407251
  406f69:	xor    r9d,r9d
  406f6c:	mov    r8,rbx
  406f6f:	mov    rdx,rdi
  406f72:	mov    rcx,r14
  406f75:	call   0x404eb8
  406f7a:	test   rax,rax
  406f7d:	mov    rbp,rax
  406f80:	je     0x4072ec
  406f86:	mov    rax,QWORD PTR [rsp+0x40]
  406f8b:	mov    rcx,QWORD PTR [rsi+0x8]
  406f8f:	xor    r9d,r9d
  406f92:	xor    r8d,r8d
  406f95:	mov    rdx,rbp
  406f98:	mov    QWORD PTR [rsp+0x20],rax
  406f9d:	call   0x404c90
  406fa2:	test   rax,rax
  406fa5:	mov    r12,rax
  406fa8:	je     0x407479
  406fae:	mov    rdx,QWORD PTR [rsi+0x40]
  406fb2:	test   rdx,rdx
  406fb5:	je     0x407044
  406fbb:	mov    rcx,r12
  406fbe:	call   0x404cd8
  406fc3:	test   eax,eax
  406fc5:	js     0x406fd7
  406fc7:	mov    rdx,QWORD PTR [rsi+0x48]
  406fcb:	mov    rcx,r12
  406fce:	call   0x404cd8
  406fd3:	test   eax,eax
  406fd5:	jle    0x407053
  406fd7:	lea    rcx,[rip+0x3552]        # 0x40a530
  406fde:	call   0x404f78
  406fe3:	mov    rsi,rax
  406fe6:	mov    rax,QWORD PTR [rsp+0x48]
  406feb:	call   rax
  406fed:	lea    rcx,[rax+0x60]
  406ff1:	mov    rax,QWORD PTR [rsp+0x60]
  406ff6:	mov    r9,rdi
  406ff9:	mov    r8,rbx
  406ffc:	mov    rdx,rsi
  406fff:	mov    QWORD PTR [rsp+0x20],rax
  407004:	call   0x404f80
  407009:	mov    rcx,r12
  40700c:	call   0x404c20
  407011:	mov    rcx,rbp
  407014:	call   0x404f18
  407019:	cmp    DWORD PTR [rsp+0x30],0x0
  40701e:	jne    0x407091
  407020:	lea    rcx,[rip+0x3441]        # 0x40a468
  407027:	call   0x404f78
  40702c:	mov    rbx,rax
  40702f:	mov    rax,QWORD PTR [rsp+0x48]
  407034:	call   rax
  407036:	lea    rcx,[rax+0x60]
  40703a:	mov    rdx,rbx
  40703d:	call   0x404f80
  407042:	jmp    0x407068
  407044:	mov    rdx,QWORD PTR [rsi+0x30]
  407048:	cmp    QWORD PTR [rdx+0x8],0x0
  40704d:	jne    0x407318
  407053:	mov    rcx,QWORD PTR [rsi+0x28]
  407057:	call   0x404c20
  40705c:	mov    QWORD PTR [rsi+0x28],r12
  407060:	mov    rcx,rbp
  407063:	call   0x404f18
  407068:	add    r13,0x8
  40706c:	mov    rbx,QWORD PTR [r13-0x8]
  407070:	test   rbx,rbx
  407073:	jne    0x406f51
  407079:	mov    rcx,QWORD PTR [rsp+0x80]
  407081:	call   0x404d50
  407086:	add    QWORD PTR [rsp+0x50],0x8
  40708c:	jmp    0x406ef5
  407091:	lea    rcx,[rip+0x33f8]        # 0x40a490
  407098:	call   0x404f78
  40709d:	mov    rbx,rax
  4070a0:	mov    rax,QWORD PTR [rsp+0x48]
  4070a5:	jmp    0x406e95
  4070aa:	lea    rcx,[rip+0x32ff]        # 0x40a3b0
  4070b1:	call   0x404f78
  4070b6:	mov    rbx,rax
  4070b9:	mov    rax,QWORD PTR [rsp+0x58]
  4070be:	call   rax
  4070c0:	lea    rcx,[rax+0x60]
  4070c4:	mov    rdx,rbx
  4070c7:	call   0x404f80
  4070cc:	jmp    0x406ec5
  4070d1:	mov    QWORD PTR [rsp+0xb8],rsi
  4070d9:	jmp    0x406919
  4070de:	call   0x404df8
  4070e3:	mov    rbp,rax
  4070e6:	call   0x404df8
  4070eb:	mov    r8,QWORD PTR [rsp+0x78]
  4070f0:	xor    edx,edx
  4070f2:	mov    rcx,rsi
  4070f5:	mov    r12,rax
  4070f8:	call   0x404f38
  4070fd:	test   rax,rax
  407100:	mov    rdi,rax
  407103:	je     0x406dc5
  407109:	mov    rcx,rdi
  40710c:	call   0x404f30
  407111:	test   rax,rax
  407114:	mov    rbx,rax
  407117:	je     0x40716c
  407119:	lea    rdx,[rip+0x3216]        # 0x40a336
  407120:	mov    rcx,rbx
  407123:	call   0x404d70
  407128:	test   eax,eax
  40712a:	jne    0x407143
  40712c:	lea    rdx,[rip+0x213d]        # 0x409270
  407133:	mov    rcx,rbx
  407136:	call   0x404d70
  40713b:	test   eax,eax
  40713d:	je     0x40721c
  407143:	xor    r8d,r8d
  407146:	mov    rdx,rbx
  407149:	mov    rcx,rsi
  40714c:	call   0x404f48
  407151:	mov    rcx,rbp
  407154:	mov    rdx,rax
  407157:	call   0x404e08
  40715c:	mov    rcx,rdi
  40715f:	call   0x404f30
  407164:	test   rax,rax
  407167:	mov    rbx,rax
  40716a:	jne    0x407119
  40716c:	cmp    DWORD PTR [rbp+0x8],0x0
  407170:	jne    0x4073a2
  407176:	lea    rcx,[rip+0x31d8]        # 0x40a355
  40717d:	call   0x404f78
  407182:	mov    rsi,QWORD PTR [rip+0x788b]        # 0x40ea14
  407189:	mov    rbx,rax
  40718c:	call   rsi
  40718e:	lea    rcx,[rax+0x30]
  407192:	mov    rdx,rbx
  407195:	call   0x404f80
  40719a:	mov    rcx,QWORD PTR [rsp+0x70]
  40719f:	call   0x404d10
  4071a4:	test   eax,eax
  4071a6:	mov    ebx,eax
  4071a8:	je     0x407502
  4071ae:	lea    rcx,[rip+0x31b8]        # 0x40a36d
  4071b5:	call   0x404f78
  4071ba:	mov    rbx,rax
  4071bd:	call   rsi
  4071bf:	lea    rcx,[rax+0x30]
  4071c3:	mov    rdx,rbx
  4071c6:	xor    ebx,ebx
  4071c8:	call   0x404f80
  4071cd:	jmp    0x406def
  4071d2:	lea    rcx,[rip+0x31d7]        # 0x40a3b0
  4071d9:	call   0x404f78
  4071de:	mov    rbx,rax
  4071e1:	call   r14
  4071e4:	lea    rcx,[rax+0x60]
  4071e8:	mov    rdx,rbx
  4071eb:	call   0x404f80
  4071f0:	mov    rcx,QWORD PTR [rsp+0x118]
  4071f8:	call   0x404ed8
  4071fd:	mov    rcx,QWORD PTR [rsp+0x120]
  407205:	call   0x404ed8
  40720a:	mov    rcx,QWORD PTR [rsp+0x128]
  407212:	call   0x404ed8
  407217:	jmp    0x406ec5
  40721c:	lea    rdx,[rip+0x3120]        # 0x40a343
  407223:	mov    rcx,rbx
  407226:	call   0x404d70
  40722b:	test   eax,eax
  40722d:	je     0x407109
  407233:	mov    rdx,rbx
  407236:	mov    rcx,rsi
  407239:	xor    r8d,r8d
  40723c:	call   0x404f48
  407241:	mov    rcx,r12
  407244:	mov    rdx,rax
  407247:	call   0x404e08
  40724c:	jmp    0x407109
  407251:	lea    rcx,[rip+0x31c8]        # 0x40a420
  407258:	call   0x404f78
  40725d:	mov    rsi,rax
  407260:	call   QWORD PTR [rip+0x77ae]        # 0x40ea14
  407266:	lea    rcx,[rax+0x60]
  40726a:	mov    rax,QWORD PTR [rsp+0x60]
  40726f:	mov    r9,rdi
  407272:	mov    r8,rbx
  407275:	mov    rdx,rsi
  407278:	mov    QWORD PTR [rsp+0x20],rax
  40727d:	call   0x404f80
  407282:	cmp    DWORD PTR [rsp+0x30],0x0
  407287:	jne    0x407433
  40728d:	lea    rcx,[rip+0x31d4]        # 0x40a468
  407294:	call   0x404f78
  407299:	mov    rbx,rax
  40729c:	call   QWORD PTR [rip+0x7772]        # 0x40ea14
  4072a2:	lea    rcx,[rax+0x60]
  4072a6:	mov    rdx,rbx
  4072a9:	call   0x404f80
  4072ae:	jmp    0x407068
  4072b3:	cmp    DWORD PTR [rsp+0x2e0],0x2
  4072bb:	je     0x4068fe
  4072c1:	lea    rcx,[rip+0x3030]        # 0x40a2f8
  4072c8:	call   0x404f78
  4072cd:	mov    rbx,rax
  4072d0:	call   QWORD PTR [rip+0x773e]        # 0x40ea14
  4072d6:	lea    rcx,[rax+0x60]
  4072da:	mov    rdx,rbx
  4072dd:	mov    ebx,0x1
  4072e2:	call   0x404f80
  4072e7:	jmp    0x406def
  4072ec:	lea    rax,[rip+0x3311]        # 0x40a604
  4072f3:	lea    r9,[rip+0x3319]        # 0x40a613
  4072fa:	lea    rdx,[rip+0x21a1]        # 0x4094a2
  407301:	lea    rcx,[rip+0x21b1]        # 0x4094b9
  407308:	mov    r8d,0x780
  40730e:	mov    QWORD PTR [rsp+0x20],rax
  407313:	call   0x404f50
  407318:	mov    rcx,r12
  40731b:	call   0x402840
  407320:	test   eax,eax
  407322:	jne    0x407053
  407328:	lea    rcx,[rip+0x3269]        # 0x40a598
  40732f:	call   0x404f78
  407334:	mov    rsi,rax
  407337:	mov    rax,QWORD PTR [rsp+0x90]
  40733f:	call   rax
  407341:	mov    rdx,QWORD PTR [rsp+0x60]
  407346:	lea    rcx,[rax+0x60]
  40734a:	mov    r9,rdi
  40734d:	mov    r8,rbx
  407350:	mov    QWORD PTR [rsp+0x20],rdx
  407355:	mov    rdx,rsi
  407358:	call   0x404f80
  40735d:	mov    rcx,r12
  407360:	call   0x404c20
  407365:	mov    rcx,rbp
  407368:	call   0x404f18
  40736d:	cmp    DWORD PTR [rsp+0x30],0x0
  407372:	jne    0x406e7e
  407378:	lea    rcx,[rip+0x30e9]        # 0x40a468
  40737f:	call   0x404f78
  407384:	mov    rbx,rax
  407387:	mov    rax,QWORD PTR [rsp+0x90]
  40738f:	call   rax
  407391:	lea    rcx,[rax+0x60]
  407395:	mov    rdx,rbx
  407398:	call   0x404f80
  40739d:	jmp    0x407068
  4073a2:	lea    rdx,[rip+0xffffffffffffabe7]        # 0x401f90
  4073a9:	mov    rcx,rbp
  4073ac:	call   0x404df0
  4073b1:	xor    edx,edx
  4073b3:	mov    rcx,rbp
  4073b6:	call   0x404e08
  4073bb:	lea    rdx,[rip+0xffffffffffffabce]        # 0x401f90
  4073c2:	mov    rcx,r12
  4073c5:	call   0x404df0
  4073ca:	xor    edx,edx
  4073cc:	mov    rcx,r12
  4073cf:	call   0x404e08
  4073d4:	xor    edx,edx
  4073d6:	mov    rcx,rbp
  4073d9:	call   0x404e00
  4073de:	xor    edx,edx
  4073e0:	mov    rcx,r12
  4073e3:	mov    QWORD PTR [rsp+0xc0],rax
  4073eb:	call   0x404e00
  4073f0:	mov    QWORD PTR [rsp+0x68],rax
  4073f5:	jmp    0x40694d
  4073fa:	mov    rax,QWORD PTR [rsp+0xb0]
  407402:	mov    rbx,QWORD PTR [rax+0x8]
  407406:	call   QWORD PTR [rip+0x7608]        # 0x40ea14
  40740c:	lea    rdx,[rip+0x2edb]        # 0x40a2ee
  407413:	lea    rcx,[rax+0x60]
  407417:	mov    r8,rbx
  40741a:	mov    ebx,0x1
  40741f:	call   0x404f80
  407424:	mov    rcx,QWORD PTR [rsp+0x70]
  407429:	call   0x404f18
  40742e:	jmp    0x406def
  407433:	lea    rcx,[rip+0x3056]        # 0x40a490
  40743a:	call   0x404f78
  40743f:	mov    rbx,rax
  407442:	call   QWORD PTR [rip+0x75cc]        # 0x40ea14
  407448:	jmp    0x406e97
  40744d:	lea    rax,[rip+0x31a3]        # 0x40a5f7
  407454:	lea    r9,[rip+0x31b8]        # 0x40a613
  40745b:	lea    rdx,[rip+0x2040]        # 0x4094a2
  407462:	lea    rcx,[rip+0x2050]        # 0x4094b9
  407469:	mov    r8d,0x760
  40746f:	mov    QWORD PTR [rsp+0x20],rax
  407474:	call   0x404f50
  407479:	mov    rax,QWORD PTR [rsp+0x110]
  407481:	lea    rcx,[rip+0x3030]        # 0x40a4b8
  407488:	mov    r12,QWORD PTR [rax+0x8]
  40748c:	call   0x404f78
  407491:	mov    rsi,rax
  407494:	mov    rax,QWORD PTR [rsp+0x98]
  40749c:	call   rax
  40749e:	mov    rdx,QWORD PTR [rsp+0x60]
  4074a3:	lea    rcx,[rax+0x60]
  4074a7:	mov    r9,rdi
  4074aa:	mov    r8,rbx
  4074ad:	mov    QWORD PTR [rsp+0x28],r12
  4074b2:	mov    QWORD PTR [rsp+0x20],rdx
  4074b7:	mov    rdx,rsi
  4074ba:	call   0x404f80
  4074bf:	mov    rcx,QWORD PTR [rsp+0x40]
  4074c4:	call   0x404f40
  4074c9:	mov    rcx,rbp
  4074cc:	call   0x404f18
  4074d1:	cmp    DWORD PTR [rsp+0x30],0x0
  4074d6:	jne    0x407524
  4074d8:	lea    rcx,[rip+0x3029]        # 0x40a508
  4074df:	call   0x404f78
  4074e4:	mov    rbx,rax
  4074e7:	mov    rax,QWORD PTR [rsp+0x98]
  4074ef:	call   rax
  4074f1:	lea    rcx,[rax+0x60]
  4074f5:	mov    rdx,rbx
  4074f8:	call   0x404f80
  4074fd:	jmp    0x407068
  407502:	lea    rcx,[rip+0x2e77]        # 0x40a380
  407509:	call   0x404f78
  40750e:	mov    rdi,rax
  407511:	call   rsi
  407513:	lea    rcx,[rax+0x30]
  407517:	mov    rdx,rdi
  40751a:	call   0x404f80
  40751f:	jmp    0x406def
  407524:	lea    rcx,[rip+0x2e85]        # 0x40a3b0
  40752b:	call   0x404f78
  407530:	mov    rbx,rax
  407533:	mov    rax,QWORD PTR [rsp+0x98]
  40753b:	jmp    0x406e95
  407540:	mov    rcx,QWORD PTR [rsp+0x88]
  407548:	call   0x404d50
  40754d:	jmp    0x406bee
  407552:	nop
  407553:	nop
  407554:	nop
  407555:	nop
  407556:	nop
  407557:	nop
  407558:	nop
  407559:	nop
  40755a:	nop
  40755b:	nop
  40755c:	nop
  40755d:	nop
  40755e:	nop
  40755f:	nop
  407560:	(bad)  
  407561:	(bad)  
  407562:	(bad)  
  407563:	(bad)  
  407564:	(bad)  
  407565:	(bad)  
  407566:	(bad)  
  407567:	inc    DWORD PTR [rax]
  407569:	add    BYTE PTR [rax],al
  40756b:	add    BYTE PTR [rax],al
  40756d:	add    BYTE PTR [rax],al
  40756f:	add    bh,bh
  407571:	(bad)  
  407572:	(bad)  
  407573:	(bad)  
  407574:	(bad)  
  407575:	(bad)  
  407576:	(bad)  
  407577:	inc    DWORD PTR [rax]
  407579:	add    BYTE PTR [rax],al
  40757b:	add    BYTE PTR [rax],al
  40757d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000408000 <.data>:
  408000:	or     al,BYTE PTR [rax]
	...
  40803e:	add    BYTE PTR [rax],al
  408040:	jns    0x408042
  408042:	add    BYTE PTR [rax],al
  408044:	add    BYTE PTR [rax],al
  408046:	add    BYTE PTR [rax],al
  408048:	(bad)  
  408049:	movabs al,ds:0xa084000000000040
  408052:	add    BYTE PTR [rax],al
  408055:	add    BYTE PTR [rax],al
  408057:	add    BYTE PTR [rsi+0x0],ch
  40805a:	add    BYTE PTR [rax],al
  40805c:	add    BYTE PTR [rax],al
  40805e:	add    BYTE PTR [rax],al
  408060:	mov    BYTE PTR [rax+0x40],ah
  408066:	add    BYTE PTR [rax],al
  408068:	(bad)  
  408069:	movabs al,ds:0x71000000000040
  408072:	add    BYTE PTR [rax],al
  408074:	add    BYTE PTR [rax],al
  408076:	add    BYTE PTR [rax],al
  408078:	(bad)  
  408079:	movabs al,ds:0xa095000000000040
  408082:	add    BYTE PTR [rax],al
  408085:	add    BYTE PTR [rax],al
  408087:	add    BYTE PTR [rcx+0x0],ch
  40808a:	add    BYTE PTR [rax],al
  40808c:	add    BYTE PTR [rax],al
  40808e:	add    BYTE PTR [rax],al
  408090:	fwait
  408091:	movabs al,ds:0xa0a7000000000040
  40809a:	add    BYTE PTR [rax],al
  40809d:	add    BYTE PTR [rax],al
  40809f:	add    BYTE PTR [rbp+0x0],dh
  4080a2:	add    BYTE PTR [rax],al
  4080a4:	add    BYTE PTR [rax],al
  4080a6:	add    BYTE PTR [rax],al
  4080a8:	(bad)  
  4080a9:	movabs al,ds:0xa0b2000000000040
  4080b2:	add    BYTE PTR [rax],al
  4080b5:	add    BYTE PTR [rax],al
  4080b7:	add    BYTE PTR [rax+0x0],bh
  4080ba:	add    BYTE PTR [rax],al
  4080bc:	add    BYTE PTR [rax],al
  4080be:	add    BYTE PTR [rax],al
  4080c0:	mov    ebp,0x40a0
  4080c5:	add    BYTE PTR [rax],al
  4080c7:	add    dl,dl
  4080c9:	movabs al,ds:0x74000000000040
  4080d2:	add    BYTE PTR [rax],al
  4080d4:	add    BYTE PTR [rax],al
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	(bad)  
  4080d9:	movabs al,ds:0xa0e6000000000040
  4080e2:	add    BYTE PTR [rax],al
  4080e5:	add    BYTE PTR [rax],al
  4080e7:	add    BYTE PTR [rax+rax*1+0x0],ah
  4080eb:	add    BYTE PTR [rax],al
  4080ed:	add    BYTE PTR [rax],al
  4080ef:	add    bl,bh
  4080f1:	movabs al,ds:0xa100000000000040
  4080fa:	add    BYTE PTR [rax],al
  4080fd:	add    BYTE PTR [rax],al
  4080ff:	add    BYTE PTR [rax+0x75],bh
  408102:	add    BYTE PTR [rax],al
	...
  40810d:	add    BYTE PTR [rax],al
  40810f:	add    bh,bh
  408111:	(bad)  
  408112:	(bad)  
  408113:	(bad)  
  408114:	(bad)  
  408115:	(bad)  
  408116:	(bad)  
  408117:	inc    DWORD PTR [rax]
  408119:	add    BYTE PTR [rax],al
  40811b:	add    BYTE PTR [rax],al
  40811d:	add    BYTE PTR [rax],al
  40811f:	add    bh,bh
	...
  40812d:	add    BYTE PTR [rax],al
  40812f:	add    BYTE PTR [rdx],al
	...
  40813d:	add    BYTE PTR [rax],al
  40813f:	add    bh,bh
  408141:	(bad)  
  408142:	(bad)  
  408143:	inc    DWORD PTR [rax]
	...
  40814d:	add    BYTE PTR [rax],al
  40814f:	add    al,dl
  408151:	add    BYTE PTR gs:[rax],al
  408155:	add    BYTE PTR [rax],al
  408157:	add    al,ah
  408159:	add    BYTE PTR gs:[rax],al
  40815d:	add    BYTE PTR [rax],al
  40815f:	add    BYTE PTR [rdx],dh
  408161:	movabs ds:0x2b992ddf,al
  40816a:	add    BYTE PTR [rax],al
  40816c:	add    BYTE PTR [rax],al
  40816e:	add    BYTE PTR [rax],al
  408170:	int    0x5d
  408172:	and    dl,dl
  408174:	data16 (bad) 
  408176:	(bad)  
  408177:	inc    DWORD PTR [rax]
  408179:	add    BYTE PTR [rax],al
  40817b:	add    BYTE PTR [rax],al
  40817d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000409000 <.rdata>:
  409000:	addr32 jbe 0x409067
  409003:	(bad)  
  409004:	(bad)  
  409005:	addr32 jbe 0x40906c
  409008:	(bad)  
  409009:	sub    eax,0x6c697562
  40900e:	fs gs jb 0x409040
  409012:	movsxd eax,DWORD PTR [rax]
  409014:	rex.RXB
  409015:	imul   r12,QWORD PTR [rdx+0x2d],0x4f4947
  40901d:	jae    0x409088
  40901f:	jp     0x409086
  409021:	and    BYTE PTR [rip+0x30203d],bh        # 0x70b064
  409027:	add    BYTE PTR [rcx+0x6e],ch
  40902a:	fs gs js 0x40904e
  40902e:	cmp    eax,0x7567203d
  409033:	imul   ebp,DWORD PTR [rsi+0x74],0x665f3233
  40903a:	jb     0x4090ab
  40903c:	ins    DWORD PTR es:[rdi],dx
  40903d:	pop    rdi
  40903e:	ins    BYTE PTR es:[rdi],dx
  40903f:	and    BYTE PTR gs:[rax],ch
  409042:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x73613e2d
  40904a:	jae    0x4090b5
  40904c:	outs   dx,BYTE PTR ds:[esi]
  40904e:	gs fs pop rdi
  409051:	imul   ebp,DWORD PTR [rsi+0x64],0x297865
  409058:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x68633e2d
  409060:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x4e203d3d
  409068:	push   rbp
  409069:	rex.WR
  40906a:	rex.WR and BYTE PTR [rsi],r12b
  40906d:	and    BYTE PTR es:[rcx+0x74],ch
  409071:	gs ins DWORD PTR es:[rdi],dx
  409073:	sub    eax,0x6261743e
  409078:	ins    BYTE PTR es:[rdi],dx
  409079:	and    BYTE PTR gs:[rip+0x554e203d],bh        # 0x558eb0bd
  409080:	rex.WR
  409081:	rex.WR add BYTE PTR [rcx+0x74],r13b
  409085:	gs ins DWORD PTR es:[rdi],dx
  409087:	sub    eax,0x6261743e
  40908c:	ins    BYTE PTR es:[rdi],dx
  40908d:	and    BYTE PTR gs:[rip+0x554e203d],bh        # 0x558eb0d1
  409094:	rex.WR
  409095:	rex.WR add BYTE PTR [rbx+0x68],r12b
  409099:	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x3d206e65
  4090a1:	cmp    eax,0x6920
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	and    DWORD PTR [rcx+0x74],ebp
  4090ab:	gs ins DWORD PTR es:[rdi],dx
  4090ad:	sub    eax,0x6c61763e
  4090b2:	jne    0x409119
  4090b4:	and    BYTE PTR [rsi],ah
  4090b6:	and    BYTE PTR es:[rcx],ah
  4090b9:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x61743e2d
  4090c1:	(bad)  
  4090c2:	ins    BYTE PTR es:[rdi],dx
  4090c3:	and    BYTE PTR gs:[rsi],ah
  4090c6:	and    BYTE PTR es:[rcx],ah
  4090c9:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x68633e2d
  4090d1:	imul   ebp,DWORD PTR [rsp+riz*2+0x0],0x67000000
  4090d9:	pop    rdi
  4090da:	jae    0x409150
  4090dc:	jb     0x40913d
  4090de:	push   0x705f7361
  4090e3:	jb     0x40914a
  4090e5:	imul   di,WORD PTR [rax+0x20],0x6928
  4090eb:	je     0x409152
  4090ed:	ins    DWORD PTR es:[rdi],dx
  4090ee:	sub    eax,0x79656b3e
  4090f3:	sub    al,0x20
  4090f5:	jo     0x409158
  4090f7:	jb     0x40915e
  4090f9:	outs   dx,BYTE PTR ds:[rsi]
  4090fa:	je     0x409129
  4090fc:	imul   esp,DWORD PTR ds:[rbp+0x79],0x29
  409101:	add    BYTE PTR [rax],al
  409103:	add    BYTE PTR [rax],al
  409105:	add    BYTE PTR [rax],al
  409107:	add    BYTE PTR [rcx],ah
  409109:	jo     0x40916c
  40910b:	jb     0x409172
  40910d:	outs   dx,BYTE PTR ds:[rsi]
  40910e:	je     0x40913d
  409110:	ds jbe 0x409174
  409113:	ins    BYTE PTR es:[rdi],dx
  409114:	jne    0x40917b
  409116:	and    BYTE PTR [rsi],ah
  409118:	and    BYTE PTR es:[rcx],ah
  40911b:	jo     0x40917e
  40911d:	jb     0x409184
  40911f:	outs   dx,BYTE PTR ds:[rsi]
  409120:	je     0x40914f
  409122:	ds je  0x409186
  409125:	(bad)  
  409126:	ins    BYTE PTR es:[rdi],dx
  409127:	add    BYTE PTR gs:[rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	and    DWORD PTR [rcx+0x74],ebp
  409133:	gs ins DWORD PTR es:[rdi],dx
  409135:	sub    eax,0x7261703e
  40913a:	outs   dx,BYTE PTR gs:[rsi]
  40913c:	je     0x40915e
  40913e:	es and BYTE PTR es:[rcx],ah
  409142:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x69733e2d
  40914a:	(bad)  
  40914b:	ins    BYTE PTR es:[rdi],dx
  40914c:	imul   ebp,DWORD PTR [rsi+0x67],0x75686300
  409153:	outs   dx,BYTE PTR ds:[rsi]
  409154:	imul   ebp,DWORD PTR [rip+0x66666f3e],0x73        # 0x66a70099
  40915b:	gs je  0x40917e
  40915e:	and    BYTE PTR ds:[rdx+0x65],dh
  409162:	jae    0x4091d9
  409164:	ins    BYTE PTR es:[rdi],dx
  409165:	je     0x409194
  409167:	ds ins BYTE PTR es:[rdi],dx
  409169:	outs   dx,BYTE PTR gs:[rsi]
  40916b:	add    BYTE PTR [rax],al
  40916d:	add    BYTE PTR [rax],al
  40916f:	add    BYTE PTR [rbx+0x68],ah
  409172:	jne    0x4091e2
  409174:	imul   ebp,DWORD PTR [rip+0x66666f3e],0x73        # 0x66a700b9
  40917b:	gs je  0x40919e
  40917e:	sub    eax,0x73657220
  409183:	jne    0x4091f1
  409185:	je     0x4091b4
  409187:	ds ins BYTE PTR es:[rdi],dx
  409189:	outs   dx,BYTE PTR gs:[rsi]
  40918b:	and    BYTE PTR [rax+riz*1],bh
  40918e:	cmp    BYTE PTR [rax],al
  409190:	jb     0x4091f7
  409192:	jae    0x409209
  409194:	ins    BYTE PTR es:[rdi],dx
  409195:	je     0x4091c4
  409197:	ds ins BYTE PTR es:[rdi],dx
  409199:	outs   dx,BYTE PTR gs:[rsi]
  40919b:	and    BYTE PTR [rip+0x6863203d],bh        # 0x68a3b1de
  4091a1:	jne    0x409211
  4091a3:	imul   ebp,DWORD PTR [rip+0x66666f3e],0x73        # 0x66a700e8
  4091aa:	gs je  0x4091ad
  4091ad:	add    BYTE PTR [rax],al
  4091af:	add    BYTE PTR [rsi+0x69],ah
  4091b2:	ins    BYTE PTR es:[rdi],dx
  4091b3:	gs pop rdi
  4091b5:	(bad)  
  4091b6:	jne    0x409221
  4091b8:	ins    BYTE PTR es:[rdi],dx
  4091b9:	fs gs jb 0x40921c
  4091bd:	jae    0x409224
  4091bf:	jb     0x40922a
  4091c1:	(bad)  
  4091c2:	ins    BYTE PTR es:[rdi],dx
  4091c3:	imul   esi,DWORD PTR [rbx+0x65],0x0
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7562
  4091d7:	imul   ebp,DWORD PTR [rsp+riz*2+0x65],0x6c615f72
  4091df:	ins    BYTE PTR es:[rdi],dx
  4091e0:	outs   dx,DWORD PTR ds:[rsi]
  4091e1:	movsxd esp,DWORD PTR [rcx+0x74]
  4091e4:	gs pop rdi
  4091e6:	outs   dx,WORD PTR ds:[rsi]
  4091e8:	jb     0x409249
  4091ea:	push   0x687361
  4091ef:	add    BYTE PTR [rsi+0x69],ah
  4091f2:	ins    BYTE PTR es:[rdi],dx
  4091f3:	gs pop rdi
  4091f5:	(bad)  
  4091f6:	jne    0x409261
  4091f8:	ins    BYTE PTR es:[rdi],dx
  4091f9:	fs gs jb 0x40925c
  4091fd:	(bad)  
  4091fe:	fs fs pop rdi
  409201:	push   0x687361
	...
  40920e:	add    BYTE PTR [rax],al
  409210:	addr32 jbe 0x409277
  409213:	(bad)  
  409214:	pop    rdi
  409215:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  40921d:	pop    rdi
  40921e:	jo     0x409281
  409220:	jb     0x409287
  409222:	outs   dx,BYTE PTR ds:[rsi]
  409223:	je     0x409225
	...
  40922d:	add    BYTE PTR [rax],al
  40922f:	add    BYTE PTR [rdi+0x76],ah
  409232:	fs (bad) 
  409234:	pop    rdi
  409235:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  40923d:	pop    rdi
  40923e:	push   0x5f687361
  409243:	je     0x4092a6
  409245:	(bad)  
  409246:	ins    BYTE PTR es:[rdi],dx
  409247:	add    BYTE PTR gs:[rax],al
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	addr32 jbe 0x4092b7
  409253:	(bad)  
  409254:	pop    rdi
  409255:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x7465735f
  40925d:	pop    rdi
  40925e:	jbe    0x4092c1
  409260:	ins    BYTE PTR es:[rdi],dx
  409261:	jne    0x4092c8
	...
  40926f:	add    BYTE PTR [rsi],ch
  409271:	outs   dx,BYTE PTR gs:[rsi]
  409273:	jne    0x4092e2
  409275:	jae    0x4092a5
  409277:	js     0x4092e6
  409279:	ins    BYTE PTR es:[rdi],dx
  40927a:	add    BYTE PTR [rbp+0x6d],ah
  40927d:	jo     0x4092f3
  40927f:	jns    0x4092a1
  409281:	outs   dx,BYTE PTR ds:[rsi]
  409282:	(bad)  
  409283:	ins    DWORD PTR es:[rdi],dx
  409284:	gs jae 0x4092a7
  409287:	(bad)  
  409288:	jb     0x4092ef
  40928a:	and    BYTE PTR [rsi+0x6f],ch
  40928d:	je     0x4092af
  40928f:	jo     0x4092f6
  409291:	jb     0x409300
  409293:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x64
  40929b:	add    BYTE PTR [rax],al
  40929d:	add    BYTE PTR [rax],al
  40929f:	add    BYTE PTR [rcx+0x6e],ch
  4092a2:	jbe    0x409305
  4092a4:	ins    BYTE PTR es:[rdi],dx
  4092a5:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
  4092ad:	(bad)  
  4092ae:	and    eax,0x203a2773
  4092b3:	outs   dx,BYTE PTR ds:[rsi]
  4092b4:	(bad)  
  4092b5:	ins    DWORD PTR es:[rdi],dx
  4092b6:	gs jae 0x4092d9
  4092b9:	ins    DWORD PTR es:[rdi],dx
  4092ba:	jne    0x40932f
  4092bc:	je     0x4092de
  4092be:	(bad)  
  4092bf:	imul   ebp,DWORD PTR gs:[esi+0x20],0x68746977
  4092c8:	and    BYTE PTR [rcx+0x20],ah
  4092cb:	ins    BYTE PTR es:[rdi],dx
  4092cc:	outs   dx,DWORD PTR ds:[rsi]
  4092cd:	ja     0x409334
  4092cf:	jb     0x409334
  4092d1:	(bad)  
  4092d2:	jae    0x409339
  4092d4:	and    BYTE PTR [rbp+riz*2+0x74],ch
  4092d8:	je     0x40933f
  4092da:	jb     0x4092dc
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  4092e7:	and    BYTE PTR [rsi+0x61],ch
  4092ea:	ins    DWORD PTR es:[rdi],dx
  4092eb:	and    BYTE PTR gs:[rdi],ah
  4092ee:	and    eax,0x203a2773
  4092f3:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  4092fa:	and    BYTE PTR [rbx+0x68],ah
  4092fd:	(bad)  
  4092fe:	jb     0x409361
  409300:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  409304:	and    BYTE PTR [rdi],ah
  409306:	and    eax,0x203b2763
  40930b:	outs   dx,DWORD PTR ds:[rsi]
  40930c:	outs   dx,BYTE PTR ds:[rsi]
  40930d:	ins    BYTE PTR es:[rdi],dx
  40930e:	jns    0x409330
  409310:	ins    BYTE PTR es:[rdi],dx
  409311:	outs   dx,DWORD PTR ds:[rsi]
  409312:	ja     0x409379
  409314:	jb     0x409379
  409316:	(bad)  
  409317:	jae    0x40937e
  409319:	and    BYTE PTR [rbp+riz*2+0x74],ch
  40931d:	je     0x409384
  40931f:	jb     0x409394
  409321:	sub    al,0x20
  409323:	outs   dx,BYTE PTR ds:[rsi]
  409324:	jne    0x409393
  409326:	(bad)  
  409327:	gs jb  0x40939d
  40932a:	and    BYTE PTR [rcx+0x6e],ah
  40932d:	and    BYTE PTR fs:[rax+0x79],ch
  409331:	jo     0x40939b
  409333:	outs   dx,BYTE PTR gs:[rsi]
  409335:	and    BYTE PTR [rax],ch
  409337:	(bad)  
  409338:	sub    eax,0x61202927
  40933d:	jb     0x4093a4
  40933f:	and    BYTE PTR [rax+0x65],dh
  409342:	jb     0x4093b1
  409344:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x2e64
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  409357:	and    BYTE PTR [rsi+0x61],ch
  40935a:	ins    DWORD PTR es:[rdi],dx
  40935b:	and    BYTE PTR gs:[rdi],ah
  40935e:	and    eax,0x203a2773
  409363:	je     0x4093dc
  409365:	outs   dx,DWORD PTR ds:[rsi]
  409366:	and    BYTE PTR [rbx+0x75],dh
  409369:	movsxd esp,DWORD PTR [rbx+0x65]
  40936c:	jae    0x4093e1
  40936e:	imul   esi,DWORD PTR [rsi+0x65],0x70796820
  409375:	push   0x20736e65
  40937a:	sub    BYTE PTR [rdi],ah
  40937c:	sub    eax,0x2029272d
  409381:	(bad)  
  409382:	jb     0x4093e9
  409384:	and    BYTE PTR [rsi+0x6f],ch
  409387:	je     0x4093a9
  409389:	jo     0x4093f0
  40938b:	jb     0x4093fa
  40938d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x2e64
  409395:	add    BYTE PTR [rax],al
  409397:	add    BYTE PTR [rcx+0x6e],ch
  40939a:	jbe    0x4093fd
  40939c:	ins    BYTE PTR es:[rdi],dx
  40939d:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
  4093a5:	(bad)  
  4093a6:	and    eax,0x203a2773
  4093ab:	je     0x409415
  4093ad:	and    BYTE PTR gs:[rcx+riz*2+0x73],ch
  4093b2:	je     0x4093d4
  4093b4:	movsxd ebp,DWORD PTR [rax+0x61]
  4093b7:	jb     0x40941a
  4093b9:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  4093bd:	and    BYTE PTR [rbp+0x61],ch
  4093c0:	jns    0x4093e2
  4093c2:	outs   dx,BYTE PTR ds:[rsi]
  4093c3:	outs   dx,DWORD PTR ds:[rsi]
  4093c4:	je     0x4093e6
  4093c6:	(bad)  
  4093c7:	and    BYTE PTR gs:[rcx+0x20],ah
  4093cb:	push   0x65687079
  4093d0:	outs   dx,BYTE PTR ds:[rsi]
  4093d1:	and    BYTE PTR [rax],ch
  4093d3:	(bad)  
  4093d4:	sub    eax,0x2e2927
  4093d9:	add    BYTE PTR [rax],al
  4093db:	add    BYTE PTR [rax],al
  4093dd:	add    BYTE PTR [rax],al
  4093df:	add    BYTE PTR [rcx+0x6e],ch
  4093e2:	jbe    0x409445
  4093e4:	ins    BYTE PTR es:[rdi],dx
  4093e5:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
  4093ed:	(bad)  
  4093ee:	and    eax,0x203a2773
  4093f3:	ins    DWORD PTR es:[rdi],dx
  4093f4:	(bad)  
  4093f5:	js     0x409460
  4093f7:	ins    DWORD PTR es:[rdi],dx
  4093f8:	jne    0x409467
  4093fa:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  4093fe:	addr32 je 0x409469
  409401:	and    BYTE PTR [rcx+0x73],ch
  409404:	and    BYTE PTR [rcx],dh
  409406:	xor    BYTE PTR [rdx],dh
  409408:	xor    al,0x0
  40940a:	ins    DWORD PTR es:[rdi],dx
  40940b:	gs jae 0x409481
  40940e:	(bad)  
  40940f:	addr32 gs jae 0x409413
  409413:	je     0x40947e
  409415:	ins    DWORD PTR es:[rdi],dx
  409416:	add    BYTE PTR gs:[rbp+0x6e],dh
  40941a:	jae    0x409491
  40941c:	jo     0x40948e
  40941e:	outs   dx,DWORD PTR ds:[rsi]
  40941f:	jb     0x409495
  409421:	gs and BYTE PTR fs:[rcx+rsi*1+0x30],ch
  409427:	outs   dx,BYTE PTR ds:[rsi]
  409428:	and    BYTE PTR [rbx+0x61],ah
  40942b:	je     0x409492
  40942d:	outs   dx,DWORD PTR ds:[esi]
  40942f:	jb     0x4094aa
  409431:	cmp    ah,BYTE PTR [rax]
  409433:	and    eax,0x73
  409438:	ins    BYTE PTR es:[rdi],dx
  409439:	xor    DWORD PTR [rax],esi
  40943b:	outs   dx,BYTE PTR ds:[rsi]
  40943c:	and    BYTE PTR [rdx+0x65],dh
  40943f:	jno    0x4094b6
  409441:	gs jae 0x4094b8
  409444:	gs fs sub al,0x20
  409448:	(bad)  
  409449:	jne    0x4094bf
  40944b:	and    BYTE PTR [rsi+0x6f],ch
  40944e:	and    BYTE PTR [rdi+0x65],ah
  409451:	je     0x4094c7
  409453:	gs js  0x4094ca
  409456:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
  40945a:	(bad)  
  40945b:	imul   ebp,DWORD PTR [rsi+0x20],0x65766967
  409462:	outs   dx,BYTE PTR ds:[rsi]
  409463:	add    BYTE PTR [rax],al
  409465:	add    BYTE PTR [rax],al
  409467:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  40946b:	outs   dx,BYTE PTR ds:[rsi]
  40946c:	jae    0x4094da
  40946e:	(bad)  
  40946f:	je     0x4094da
  409471:	outs   dx,DWORD PTR ds:[rsi]
  409472:	outs   dx,BYTE PTR ds:[rsi]
  409473:	and    BYTE PTR [rbx+0x6f],ah
  409476:	outs   dx,BYTE PTR ds:[rsi]
  409477:	je     0x4094de
  409479:	js     0x4094ef
  40947b:	and    BYTE PTR [rdi+0x69],ah
  40947e:	jbe    0x4094e5
  409480:	outs   dx,BYTE PTR ds:[rsi]
  409481:	and    BYTE PTR [rsi+0x6f],ah
  409484:	jb     0x4094a6
  409486:	and    BYTE PTR [rsi+0x61],dh
  409489:	ins    BYTE PTR es:[rdi],dx
  40948a:	jne    0x4094f1
  40948c:	and    BYTE PTR [rdi+0x69],dh
  40948f:	je     0x4094f9
  409491:	outs   dx,DWORD PTR ds:[rsi]
  409492:	jne    0x409508
  409494:	and    BYTE PTR [rcx+rsi*1+0x30],ch
  409498:	outs   dx,BYTE PTR ds:[rsi]
  409499:	and    BYTE PTR [rbp+0x6e],ah
  40949c:	(bad)  
  40949d:	(bad)  
  40949e:	ins    BYTE PTR es:[rdi],dx
  40949f:	gs add BYTE PTR fs:[rdi+0x6c],ah
  4094a4:	imul   esp,DWORD PTR [rdx+0x2d],0x706d6f63
  4094ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x65686373
  4094b3:	ins    DWORD PTR es:[rdi],dx
  4094b4:	(bad)  
  4094b5:	jae    0x4094e5
  4094b7:	movsxd eax,DWORD PTR [rax]
  4094b9:	rex.RXB
  4094ba:	imul   r12,QWORD PTR [rdx+0x2d],0x4f4947
  4094c2:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4094c6:	jae    0x4094e8
  4094c8:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c95e2ee
  4094ce:	rex.WR add BYTE PTR [rbp+0x6e],r12b
  4094d2:	jne    0x409541
  4094d4:	add    BYTE PTR [rsi+0x6c],ah
  4094d7:	(bad)  
  4094d8:	addr32 jae 0x4094db
  4094db:	add    BYTE PTR [rax],al
  4094dd:	add    BYTE PTR [rax],al
  4094df:	add    BYTE PTR ds:0x64692073,bh
  4094e6:	cmp    eax,0x27732527
  4094eb:	and    BYTE PTR ds:[rcx+0x6c],ah
  4094ef:	jb     0x409556
  4094f1:	(bad)  
  4094f2:	fs jns 0x409515
  4094f5:	jae    0x409567
  4094f7:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4094fb:	imul   esp,DWORD PTR [rbp+0x64],0x702e0000
  409502:	(bad)  
  409503:	je     0x40956d
  409505:	add    BYTE PTR [rsi],ch
  409507:	gs js  0x40957e
  40950a:	outs   dx,BYTE PTR gs:[rsi]
  40950c:	fs jae 0x40950f
  40950f:	cs ins BYTE PTR es:[rdi],dx
  409511:	imul   esi,DWORD PTR [rbx+0x74],0x666f2d
  409518:	cs addr32 gs je 0x409591
  40951d:	gs js  0x409594
  409520:	sub    eax,0x616d6f64
  409525:	imul   ebp,DWORD PTR [rsi+0x0],0x74786574
  40952c:	and    BYTE PTR [rbp+0x61],ch
  40952f:	jns    0x409551
  409531:	outs   dx,BYTE PTR ds:[rsi]
  409532:	outs   dx,DWORD PTR ds:[rsi]
  409533:	je     0x409555
  409535:	(bad)  
  409536:	jo     0x4095a8
  409538:	gs (bad) 
  40953a:	jb     0x40955c
  40953c:	imul   ebp,DWORD PTR [rsi+0x73],0x20656469
  409543:	cmp    al,0x25
  409545:	jae    0x409585
  409547:	add    BYTE PTR [rdi+0x76],ch
  40954a:	gs jb  0x4095bf
  40954d:	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x61666564
  409555:	jne    0x4095c3
  409557:	je     0x409559
  409559:	add    BYTE PTR [rax],al
  40955b:	add    BYTE PTR [rax],al
  40955d:	add    BYTE PTR [rax],al
  40955f:	add    BYTE PTR ds:0x69203e73,bh
  409566:	jae    0x409588
  409568:	outs   dx,BYTE PTR ds:[rsi]
  409569:	outs   dx,DWORD PTR ds:[rsi]
  40956a:	je     0x40958c
  40956c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40956f:	je     0x4095d2
  409571:	imul   ebp,DWORD PTR [rsi+0x65],0x6e692064
  409578:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40957c:	and    BYTE PTR [rbx+0x70],dh
  40957f:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409583:	imul   esp,DWORD PTR [rbp+0x64],0x6e617220
  40958a:	add    BYTE PTR gs:[eax],al
  40958e:	add    BYTE PTR [rax],al
  409590:	cmp    al,0x25
  409592:	jae    0x4095d2
  409594:	and    BYTE PTR [rcx+0x73],ch
  409597:	and    BYTE PTR [rsi+0x6f],ch
  40959a:	je     0x4095bc
  40959c:	(bad)  
  40959d:	and    BYTE PTR [rsi+0x61],dh
  4095a0:	ins    BYTE PTR es:[rdi],dx
  4095a1:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x65626d65
  4095a9:	jb     0x4095cb
  4095ab:	outs   dx,DWORD PTR ds:[rsi]
  4095ac:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4095b1:	and    BYTE PTR [rbx+0x70],dh
  4095b4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4095b8:	imul   esp,DWORD PTR [rbp+0x64],0x756e6520
  4095bf:	ins    DWORD PTR es:[rdi],dx
  4095c0:	gs jb  0x409624
  4095c3:	je     0x40962a
  4095c5:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  4095ca:	add    BYTE PTR gs:[rax],al
  4095cd:	add    BYTE PTR [rax],al
  4095cf:	add    BYTE PTR ds:0x63203e73,bh
  4095d6:	outs   dx,DWORD PTR ds:[rsi]
  4095d7:	outs   dx,BYTE PTR ds:[rsi]
  4095d8:	je     0x40963b
  4095da:	imul   ebp,DWORD PTR [rsi+0x73],0x72747320
  4095e1:	imul   ebp,DWORD PTR [rsi+0x67],0x746f6e20
  4095e8:	and    BYTE PTR [rcx+0x6e],ch
  4095eb:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4095ef:	and    BYTE PTR [rbx+0x70],dh
  4095f2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4095f6:	imul   esp,DWORD PTR [rbp+0x64],0x616c6620
  4095fd:	addr32 jae 0x409620
  409600:	je     0x40967b
  409602:	jo     0x409669
  409604:	add    BYTE PTR [rax],al
  409606:	add    BYTE PTR [rax],al
  409608:	cmp    al,0x25
  40960a:	jae    0x40964a
  40960c:	and    BYTE PTR [rbx+0x6f],ah
  40960f:	outs   dx,BYTE PTR ds:[rsi]
  409610:	je     0x409673
  409612:	imul   ebp,DWORD PTR [rsi+0x73],0x72747320
  409619:	imul   ebp,DWORD PTR [rsi+0x67],0x746f6e20
  409620:	and    BYTE PTR [rcx+0x6e],ch
  409623:	and    BYTE PTR [rbx+riz*2],bh
  409626:	push   0x6563696f
  40962b:	jae    0x40966b
  40962d:	add    BYTE PTR [rax],al
  40962f:	add    BYTE PTR [rsi+0x61],ah
  409632:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40963a:	jo     0x40969d
  40963c:	jb     0x4096b1
  40963e:	and    BYTE PTR gs:[rsp+riz*2],bh
  409642:	gs data16 (bad) 
  409645:	jne    0x4096b3
  409647:	je     0x409687
  409649:	and    BYTE PTR [rsi+0x61],dh
  40964c:	ins    BYTE PTR es:[rdi],dx
  40964d:	jne    0x4096b4
  40964f:	and    BYTE PTR [rdi+0x66],ch
  409652:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  409656:	and    BYTE PTR gs:[rdi],ah
  409659:	and    eax,0x203a2773
  40965e:	add    BYTE PTR [rbx+0x63],dh
  409661:	push   0x6c616d65
  409666:	imul   esi,DWORD PTR [rbx+0x74],0x0
  40966d:	add    BYTE PTR [rax],al
  40966f:	add    BYTE PTR ds:0x6d203e73,bh
  409676:	jne    0x4096eb
  409678:	je     0x40969a
  40967a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40967d:	je     0x4096e0
  40967f:	imul   ebp,DWORD PTR [rsi+0x20],0x6c207461
  409686:	gs (bad) 
  409688:	jae    0x4096fe
  40968a:	and    BYTE PTR [rdi+0x6e],ch
  40968d:	and    BYTE PTR gs:[rsi+rsi*2],bh
  409691:	(bad)  
  409692:	ins    BYTE PTR es:[rdi],dx
  409693:	jne    0x4096fa
  409695:	add    BYTE PTR ds:[rbx+0x63],dh
  409699:	push   0x616d65
  40969e:	imul   esp,DWORD PTR [rbp+0x79],0x0
  4096a2:	add    BYTE PTR [rax],al
  4096a4:	add    BYTE PTR [rax],al
  4096a6:	add    BYTE PTR [rax],al
  4096a8:	gs ins BYTE PTR es:[rdi],dx
  4096aa:	gs ins DWORD PTR es:[rdi],dx
  4096ac:	outs   dx,BYTE PTR gs:[rsi]
  4096ae:	je     0x4096d0
  4096b0:	cmp    al,0x64
  4096b2:	gs data16 (bad) 
  4096b5:	jne    0x409723
  4096b7:	je     0x4096f7
  4096b9:	and    BYTE PTR [rcx+0x73],ch
  4096bc:	and    BYTE PTR [rdx+0x65],dh
  4096bf:	jno    0x409736
  4096c1:	imul   esi,DWORD PTR [rdx+0x65],0x6e692064
  4096c8:	and    BYTE PTR [rbx+rbp*2],bh
  4096cb:	gs jns 0x40970c
  4096ce:	add    BYTE PTR [rbx+0x68],ah
  4096d1:	outs   dx,DWORD PTR ds:[rsi]
  4096d2:	imul   esp,DWORD PTR [rbx+0x65],0x3c000073
  4096d9:	movsxd ebp,DWORD PTR [rax+0x6f]
  4096dc:	imul   esp,DWORD PTR [rbx+0x65],0x6d203e73
  4096e3:	jne    0x409758
  4096e5:	je     0x409707
  4096e7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4096ea:	je     0x40974d
  4096ec:	imul   ebp,DWORD PTR [rsi+0x20],0x6c207461
  4096f3:	gs (bad) 
  4096f5:	jae    0x40976b
  4096f7:	and    BYTE PTR [rdi+0x6e],ch
  4096fa:	and    BYTE PTR gs:[rbx+riz*2],bh
  4096fe:	push   0x6563696f
  409703:	add    BYTE PTR ds:[rcx+0x6c],ah
  409707:	imul   esp,DWORD PTR [rcx+0x73],0x7365
  40970e:	add    BYTE PTR [rax],al
  409710:	cmp    al,0x61
  409712:	ins    BYTE PTR es:[rdi],dx
  409713:	imul   esp,DWORD PTR [rcx+0x73],0x203e7365
  40971a:	ins    DWORD PTR es:[rdi],dx
  40971b:	jne    0x409790
  40971d:	je     0x40973f
  40971f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409722:	je     0x409785
  409724:	imul   ebp,DWORD PTR [rsi+0x20],0x6c207461
  40972b:	gs (bad) 
  40972d:	jae    0x4097a3
  40972f:	and    BYTE PTR [rdi+0x6e],ch
  409732:	and    BYTE PTR gs:[rcx+riz*2],bh
  409736:	ins    BYTE PTR es:[rdi],dx
  409737:	imul   esp,DWORD PTR [rcx+0x73],0x7361003e
  40973e:	add    BYTE PTR [rbx+0x0],dh
  409741:	outs   dx,BYTE PTR gs:[rsi]
  409743:	jne    0x4097b2
  409745:	gs jb  0x4097a9
  409748:	je     0x4097af
  40974a:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  40974f:	add    BYTE PTR gs:[rbx+riz*2],bh
  409753:	push   0x6563696f
  409758:	jae    0x409798
  40975a:	add    BYTE PTR [rdi+0x65],ah
  40975d:	je     0x4097d3
  40975f:	gs js  0x4097d6
  409762:	sub    eax,0x616d6f64
  409767:	imul   ebp,DWORD PTR [rsi+0x0],0x7473696c
  40976e:	sub    eax,0x6500666f
  409773:	js     0x4097e9
  409775:	outs   dx,BYTE PTR gs:[rsi]
  409777:	fs jae 0x40977a
  40977a:	jo     0x4097dd
  40977c:	je     0x4097e6
  40977e:	add    BYTE PTR [rcx+0x64],ch
  409781:	add    BYTE PTR [rax],al
  409783:	add    BYTE PTR [rax],al
  409785:	add    BYTE PTR [rax],al
  409787:	add    BYTE PTR [rbx+rsi*2],bh
  40978a:	movsxd ebp,DWORD PTR [rax+0x65]
  40978d:	ins    DWORD PTR es:[rdi],dx
  40978e:	(bad)  
  40978f:	and    BYTE PTR [rcx+0x64],ch
  409792:	cmp    eax,0x27732527
  409797:	and    BYTE PTR ds:[rcx+0x6c],ah
  40979b:	jb     0x409802
  40979d:	(bad)  
  40979e:	fs jns 0x4097c1
  4097a1:	jae    0x409813
  4097a3:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4097a7:	imul   esp,DWORD PTR [rbp+0x64],0x0
  4097ae:	add    BYTE PTR [rax],al
  4097b0:	cmp    al,0x73
  4097b2:	movsxd ebp,DWORD PTR [rax+0x65]
  4097b5:	ins    DWORD PTR es:[rdi],dx
  4097b6:	(bad)  
  4097b7:	and    BYTE PTR [rcx+0x64],ch
  4097ba:	cmp    eax,0x27732527
  4097bf:	and    BYTE PTR ds:[rbp+0x78],ah
  4097c3:	je     0x40982a
  4097c5:	outs   dx,BYTE PTR ds:[rsi]
  4097c6:	fs jae 0x4097e9
  4097c9:	outs   dx,BYTE PTR ds:[rsi]
  4097ca:	outs   dx,DWORD PTR ds:[rsi]
  4097cb:	je     0x4097ed
  4097cd:	jns    0x409834
  4097cf:	je     0x4097f1
  4097d1:	gs js  0x40983d
  4097d4:	jae    0x40984a
  4097d6:	imul   ebp,DWORD PTR [rsi+0x67],0x68637320
  4097dd:	gs ins DWORD PTR es:[rdi],dx
  4097df:	(bad)  
  4097e0:	and    BYTE PTR [rdi],ah
  4097e2:	and    eax,0x2773
  4097e7:	add    BYTE PTR [rbx+rsi*2],bh
  4097ea:	movsxd ebp,DWORD PTR [rax+0x65]
  4097ed:	ins    DWORD PTR es:[rdi],dx
  4097ee:	(bad)  
  4097ef:	and    BYTE PTR [rcx+0x64],ch
  4097f2:	cmp    eax,0x27732527
  4097f7:	and    BYTE PTR ds:[rcx+0x73],ch
  4097fb:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4097ff:	je     0x409821
  409801:	outs   dx,DWORD PTR ds:[rsi]
  409802:	data16 and BYTE PTR [rsi+0x6f],ch
  409806:	je     0x409828
  409808:	jns    0x40986f
  40980a:	je     0x40982c
  40980c:	gs js  0x409878
  40980f:	jae    0x409885
  409811:	imul   ebp,DWORD PTR [rsi+0x67],0x68637320
  409818:	gs ins DWORD PTR es:[rdi],dx
  40981a:	(bad)  
  40981b:	and    BYTE PTR [rdi],ah
  40981d:	and    eax,0x2773
  409822:	add    BYTE PTR [rax],al
  409824:	add    BYTE PTR [rax],al
  409826:	add    BYTE PTR [rax],al
  409828:	rex.XB (bad) 
  40982a:	outs   dx,BYTE PTR ds:[rsi]
  40982b:	and    BYTE PTR [rsi+0x6f],ch
  40982e:	je     0x409850
  409830:	(bad)  
  409831:	and    BYTE PTR gs:[rcx+0x20],ah
  409835:	ins    BYTE PTR es:[rdi],dx
  409836:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  40983d:	(bad)  
  40983e:	and    BYTE PTR [rbx+0x63],dh
  409841:	push   0x20616d65
  409846:	ja     0x4098b1
  409848:	je     0x4098b2
  40984a:	and    BYTE PTR [rcx+0x20],ah
  40984d:	jo     0x4098b0
  40984f:	je     0x4098b9
  409851:	add    BYTE PTR [rax],al
  409853:	add    BYTE PTR [rax],al
  409855:	add    BYTE PTR [rax],al
  409857:	add    BYTE PTR [rbx+0x61],al
  40985a:	outs   dx,BYTE PTR ds:[rsi]
  40985b:	and    BYTE PTR [rsi+0x6f],ch
  40985e:	je     0x409880
  409860:	gs js  0x4098d7
  409863:	outs   dx,BYTE PTR gs:[rsi]
  409865:	and    BYTE PTR fs:[rcx+0x20],ah
  409869:	jae    0x4098ce
  40986b:	push   0x20616d65
  409870:	ja     0x4098db
  409872:	je     0x4098dc
  409874:	and    BYTE PTR [rcx+0x20],ah
  409877:	jo     0x4098da
  409879:	je     0x4098e3
  40987b:	add    BYTE PTR [rax],al
  40987d:	add    BYTE PTR [rax],al
  40987f:	add    BYTE PTR [rbx+rsi*2],bh
  409882:	movsxd ebp,DWORD PTR [rax+0x65]
  409885:	ins    DWORD PTR es:[rdi],dx
  409886:	(bad)  
  409887:	and    BYTE PTR [rcx+0x64],ch
  40988a:	cmp    eax,0x27732527
  40988f:	and    BYTE PTR ds:[rcx+0x73],ch
  409893:	and    BYTE PTR [rcx+0x20],ah
  409896:	ins    BYTE PTR es:[rdi],dx
  409897:	imul   esi,DWORD PTR [rbx+0x74],0x7865202c
  40989e:	je     0x409905
  4098a0:	outs   dx,BYTE PTR ds:[rsi]
  4098a1:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x63733c20
  4098a9:	push   0x20616d65
  4098ae:	imul   esp,DWORD PTR [rbp+rdi*1+0x27],0x3e277325
  4098b6:	and    BYTE PTR [rdi+0x68],dh
  4098b9:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  4098c0:	outs   dx,BYTE PTR ds:[rsi]
  4098c1:	outs   dx,DWORD PTR ds:[rsi]
  4098c2:	je     0x4098e4
  4098c4:	(bad)  
  4098c5:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4098c9:	je     0x4098cb
  4098cb:	add    BYTE PTR [rax],al
  4098cd:	add    BYTE PTR [rax],al
  4098cf:	add    BYTE PTR [rbx+rsi*2],bh
  4098d2:	movsxd ebp,DWORD PTR [rax+0x65]
  4098d5:	ins    DWORD PTR es:[rdi],dx
  4098d6:	(bad)  
  4098d7:	and    BYTE PTR [rcx+0x64],ch
  4098da:	cmp    eax,0x27732527
  4098df:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4098e3:	je     0x409912
  4098e5:	outs   dx,DWORD PTR ds:[rsi]
  4098e6:	cmp    ax,0x2527
  4098ea:	jae    0x409913
  4098ec:	and    BYTE PTR ds:[rbp+0x78],ah
  4098f0:	je     0x409957
  4098f2:	outs   dx,BYTE PTR ds:[rsi]
  4098f3:	fs jae 0x409916
  4098f6:	cmp    al,0x73
  4098f8:	movsxd ebp,DWORD PTR [rax+0x65]
  4098fb:	ins    DWORD PTR es:[rdi],dx
  4098fc:	(bad)  
  4098fd:	and    BYTE PTR [rcx+0x64],ch
  409900:	cmp    eax,0x27732527
  409905:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  409909:	je     0x409938
  40990b:	outs   dx,DWORD PTR ds:[rsi]
  40990c:	cmp    ax,0x2527
  409910:	jae    0x409939
  409912:	and    BYTE PTR ds:[rdx+0x75],ah
  409916:	je     0x409938
  409918:	(bad)  
  409919:	and    eax,0x64202773
  40991e:	outs   dx,DWORD PTR ds:[rsi]
  40991f:	gs jae 0x409942
  409922:	outs   dx,BYTE PTR ds:[rsi]
  409923:	outs   dx,DWORD PTR ds:[rsi]
  409924:	je     0x409946
  409926:	gs js  0x40999d
  409929:	outs   dx,BYTE PTR gs:[rsi]
  40992b:	and    BYTE PTR fs:[rdi],ah
  40992e:	and    eax,0x2f002773
  409933:	add    BYTE PTR [rax],al
  409935:	add    BYTE PTR [rax],al
  409937:	add    BYTE PTR [rcx+0x20],ah
  40993a:	jo     0x40999d
  40993c:	je     0x4099a6
  40993e:	sub    al,0x20
  409940:	imul   esp,DWORD PTR [rsi+0x20],0x65766967
  409947:	outs   dx,BYTE PTR ds:[rsi]
  409948:	sub    al,0x20
  40994a:	ins    DWORD PTR es:[rdi],dx
  40994b:	jne    0x4099c0
  40994d:	je     0x40996f
  40994f:	(bad)  
  409950:	imul   ebp,DWORD PTR gs:[esi+0x20],0x20646e61
  409959:	outs   dx,BYTE PTR gs:[rsi]
  40995b:	and    BYTE PTR fs:[rdi+0x69],dh
  40995f:	je     0x4099c9
  409961:	and    BYTE PTR [rcx+0x20],ah
  409964:	jae    0x4099d2
  409966:	(bad)  
  409967:	jae    0x4099d1
  409969:	add    BYTE PTR [rdx],bh
  40996b:	(bad)  
  40996c:	add    BYTE PTR [rax],al
  40996e:	add    BYTE PTR [rax],al
  409970:	je     0x4099da
  409972:	and    BYTE PTR gs:[rax+0x61],dh
  409976:	je     0x4099e0
  409978:	and    BYTE PTR [rdi+0x66],ch
  40997b:	and    BYTE PTR [rcx+0x20],ah
  40997e:	ins    BYTE PTR es:[rdi],dx
  40997f:	imul   esi,DWORD PTR [rbx+0x74],0x73756d20
  409986:	je     0x4099a8
  409988:	outs   dx,BYTE PTR gs:[rsi]
  40998a:	and    BYTE PTR fs:[rdi+0x69],dh
  40998e:	je     0x4099f8
  409990:	and    BYTE PTR [rdi],ah
  409992:	cmp    ch,BYTE PTR [rdi]
  409994:	(bad)  
  409995:	add    BYTE PTR [rdi],ch
  409997:	(bad)  
  409998:	jo     0x409a0a
  40999a:	jae    0x4099cb
  40999c:	add    BYTE PTR [rax],al
  40999e:	add    BYTE PTR [rax],al
  4099a0:	ja     0x409a03
  4099a2:	jb     0x409a12
  4099a4:	imul   ebp,DWORD PTR [rsi+0x67],0x6353203a
  4099ab:	push   0x20616d65
  4099b0:	(bad)  
  4099b1:	and    eax,0x68202773
  4099b6:	(bad)  
  4099b7:	jae    0x4099d9
  4099b9:	jo     0x409a1c
  4099bb:	je     0x409a25
  4099bd:	and    BYTE PTR [rdi],ah
  4099bf:	and    eax,0x202e2773
  4099c4:	and    BYTE PTR [rax+0x61],dl
  4099c7:	je     0x409a31
  4099c9:	jae    0x4099eb
  4099cb:	jae    0x409a41
  4099cd:	(bad)  
  4099ce:	jb     0x409a44
  4099d0:	imul   ebp,DWORD PTR [rsi+0x67],0x74697720
  4099d7:	push   0x612f2720
  4099dc:	jo     0x409a4e
  4099de:	jae    0x409a0f
  4099e0:	(bad)  
  4099e1:	sub    al,0x20
  4099e3:	(bad)  
  4099e4:	(bad)  
  4099e5:	fs gs jae 0x409a54
  4099e9:	je     0x409a5a
  4099eb:	jo     0x409a1c
  4099ed:	(bad)  
  4099ee:	and    BYTE PTR [rdi+0x72],ch
  4099f1:	and    BYTE PTR [rdi],ah
  4099f3:	(bad)  
  4099f4:	jae    0x409a6f
  4099f6:	jae    0x409a6c
  4099f8:	gs ins DWORD PTR es:[rdi],dx
  4099fa:	(bad)  
  4099fb:	(bad)  
  4099fc:	and    BYTE PTR [rcx+0x72],ah
  4099ff:	and    BYTE PTR gs:[rbp+riz*2+0x70],ah
  409a04:	jb     0x409a6b
  409a06:	movsxd esp,DWORD PTR [rcx+0x74]
  409a09:	gs fs or al,BYTE PTR cs:[rax]
  409a0e:	(bad)  
  409a0f:	fs gs jae 0x409a7e
  409a13:	je     0x409a84
  409a15:	jo     0x409a46
  409a17:	add    BYTE PTR [rdi],ch
  409a19:	jae    0x409a94
  409a1b:	jae    0x409a91
  409a1d:	gs ins DWORD PTR es:[rdi],dx
  409a1f:	(bad)  
  409a20:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  409a24:	add    BYTE PTR gs:[rsi+0x61],ch
  409a28:	ins    DWORD PTR es:[rdi],dx
  409a29:	add    BYTE PTR gs:[rax],al
  409a2c:	add    BYTE PTR [rax],al
  409a2e:	add    BYTE PTR [rax],al
  409a30:	movsxd esp,DWORD PTR [rcx+0x6e]
  409a33:	outs   dx,BYTE PTR ds:[rsi]
  409a34:	outs   dx,DWORD PTR ds:[rsi]
  409a35:	je     0x409a57
  409a37:	(bad)  
  409a38:	fs and BYTE PTR fs:[rbx+0x65],ch
  409a3d:	jns    0x409ab2
  409a3f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  409a43:	(bad)  
  409a44:	and    BYTE PTR [rdi],ah
  409a46:	ins    BYTE PTR es:[rdi],dx
  409a47:	imul   esi,DWORD PTR [rbx+0x74],0x27666f2d
  409a4e:	and    BYTE PTR [rbx+0x63],dh
  409a51:	push   0x616d65
  409a56:	add    BYTE PTR [rax],al
  409a58:	cmp    al,0x6b
  409a5a:	gs jns 0x409a7d
  409a5d:	outs   dx,BYTE PTR ds:[rsi]
  409a5e:	(bad)  
  409a5f:	ins    DWORD PTR es:[rdi],dx
  409a60:	gs cmp eax,0x27732527
  409a66:	and    BYTE PTR ds:[rcx+0x6c],ah
  409a6a:	jb     0x409ad1
  409a6c:	(bad)  
  409a6d:	fs jns 0x409a90
  409a70:	jae    0x409ae2
  409a72:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409a76:	imul   esp,DWORD PTR [rbp+0x64],0x0
  409a7d:	add    BYTE PTR [rax],al
  409a7f:	add    BYTE PTR [rbx+rbp*2],bh
  409a82:	gs jns 0x409aa5
  409a85:	outs   dx,BYTE PTR ds:[rsi]
  409a86:	(bad)  
  409a87:	ins    DWORD PTR es:[rdi],dx
  409a88:	gs cmp eax,0x27732527
  409a8e:	and    BYTE PTR ds:[rbx+0x68],dh
  409a92:	(bad)  
  409a93:	outs   dx,DWORD PTR fs:[rsi]
  409a95:	ja     0x409b0a
  409a97:	and    BYTE PTR [rbx+rbp*2],bh
  409a9a:	gs jns 0x409abd
  409a9d:	outs   dx,BYTE PTR ds:[rsi]
  409a9e:	(bad)  
  409a9f:	ins    DWORD PTR es:[rdi],dx
  409aa0:	gs cmp eax,0x27732527
  409aa6:	and    BYTE PTR ds:[rcx+0x6e],ch
  409aaa:	and    BYTE PTR [rbx+rsi*2],bh
  409aad:	movsxd ebp,DWORD PTR [rax+0x65]
  409ab0:	ins    DWORD PTR es:[rdi],dx
  409ab1:	(bad)  
  409ab2:	and    BYTE PTR [rcx+0x64],ch
  409ab5:	cmp    eax,0x27732527
  409aba:	cmp    esp,DWORD PTR ds:[rax]
  409abd:	jne    0x409b32
  409abf:	and    BYTE PTR gs:[rdi+rbp*2],bh
  409ac3:	jbe    0x409b2a
  409ac5:	jb     0x409b39
  409ac7:	imul   esp,DWORD PTR [rbp+riz*2+0x3e],0x206f7420
  409acf:	ins    DWORD PTR es:[rdi],dx
  409ad0:	outs   dx,DWORD PTR ds:[rsi]
  409ad1:	imul   esp,DWORD PTR fs:[rsi+0x79],0x6c617620
  409ad9:	jne    0x409b40
  409adb:	add    BYTE PTR [rax],al
  409add:	add    BYTE PTR [rax],al
  409adf:	add    BYTE PTR [rbp+0x78],ah
  409ae2:	(bad)  
  409ae3:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  409ae7:	and    BYTE PTR [rdi+0x6e],ch
  409aea:	and    BYTE PTR gs:[rdi+0x66],ch
  409aee:	and    BYTE PTR [rdi],ah
  409af0:	je     0x409b6b
  409af2:	jo     0x409b59
  409af4:	(bad)  
  409af5:	sub    al,0x20
  409af7:	(bad)  
  409af8:	outs   dx,BYTE PTR gs:[rsi]
  409afa:	jne    0x409b69
  409afc:	(bad)  
  409afd:	and    BYTE PTR [rdi+0x72],ch
  409b00:	and    BYTE PTR [rdi],ah
  409b02:	data16 ins BYTE PTR es:[rdi],dx
  409b04:	(bad)  
  409b05:	addr32 jae 0x409b2f
  409b08:	and    BYTE PTR [rbp+0x75],ch
  409b0b:	jae    0x409b81
  409b0d:	and    BYTE PTR [rdx+0x65],ah
  409b10:	and    BYTE PTR [rbx+0x70],dh
  409b13:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409b17:	imul   esp,DWORD PTR [rbp+0x64],0x20736120
  409b1e:	(bad)  
  409b1f:	outs   dx,BYTE PTR ds:[rsi]
  409b20:	and    BYTE PTR [rcx+0x74],ah
  409b23:	je     0x409b97
  409b25:	imul   esp,DWORD PTR [rdx+0x75],0x74206574
  409b2c:	outs   dx,DWORD PTR ds:[rsi]
  409b2d:	and    BYTE PTR [rbx+rbp*2],bh
  409b30:	gs jns 0x409b71
  409b33:	add    BYTE PTR [rax],al
  409b35:	add    BYTE PTR [rax],al
  409b37:	add    BYTE PTR ds:0x64692073,bh
  409b3e:	cmp    eax,0x27732527
  409b43:	and    BYTE PTR ds:[rsi+0x6f],ch
  409b47:	je     0x409b69
  409b49:	sub    BYTE PTR [rcx+0x65],bh
  409b4c:	je     0x409b77
  409b4e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  409b52:	imul   ebp,DWORD PTR [rsi+0x65],0x69002e64
  409b59:	outs   dx,BYTE PTR ds:[rsi]
  409b5a:	jbe    0x409bbd
  409b5c:	ins    BYTE PTR es:[rdi],dx
  409b5d:	imul   esp,DWORD PTR [rax+riz*1+0x47],0x69726156
  409b65:	(bad)  
  409b66:	outs   dx,BYTE PTR ds:[rsi]
  409b67:	je     0x409b89
  409b69:	je     0x409be4
  409b6b:	jo     0x409bd2
  409b6d:	and    BYTE PTR [rbx+0x74],dh
  409b70:	jb     0x409bdb
  409b72:	outs   dx,BYTE PTR ds:[rsi]
  409b73:	and    BYTE PTR [edi],ah
  409b76:	and    eax,0x63002773
  409b7b:	push   0x646c69
  409b80:	cmp    al,0x63
  409b82:	push   0x20646c69
  409b87:	outs   dx,BYTE PTR ds:[rsi]
  409b88:	(bad)  
  409b89:	ins    DWORD PTR es:[rdi],dx
  409b8a:	gs cmp eax,0x27732527
  409b90:	and    BYTE PTR ds:[rcx+0x6c],ah
  409b94:	jb     0x409bfb
  409b96:	(bad)  
  409b97:	fs jns 0x409bba
  409b9a:	jae    0x409c0c
  409b9c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409ba0:	imul   esp,DWORD PTR [rbp+0x64],0x6e6f6300
  409ba7:	je     0x409c0e
  409ba9:	js     0x409c1f
  409bab:	add    BYTE PTR [rcx+rsi*1+0x30],ch
  409baf:	outs   dx,BYTE PTR ds:[rsi]
	...
  409bb8:	cmp    al,0x6f
  409bba:	jbe    0x409c21
  409bbc:	jb     0x409c30
  409bbe:	imul   esp,DWORD PTR [rbp+riz*2+0x3e],0x76696720
  409bc6:	outs   dx,BYTE PTR gs:[rsi]
  409bc8:	and    BYTE PTR [rdx+0x75],ah
  409bcb:	je     0x409bed
  409bcd:	jae    0x409c32
  409bcf:	push   0x20616d65
  409bd4:	imul   esi,DWORD PTR [rbx+0x6e],0x65207427
  409bdb:	js     0x409c51
  409bdd:	outs   dx,BYTE PTR gs:[rsi]
  409bdf:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x796e6120
  409be7:	je     0x409c51
  409be9:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  409bf0:	cmp    al,0x6f
  409bf2:	jbe    0x409c59
  409bf4:	jb     0x409c68
  409bf6:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x656d616e
  409bfe:	cmp    eax,0x27732527
  409c03:	and    BYTE PTR ds:[rcx+0x6c],ah
  409c07:	jb     0x409c6e
  409c09:	(bad)  
  409c0a:	fs jns 0x409c2d
  409c0d:	jae    0x409c7f
  409c0f:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409c13:	imul   esp,DWORD PTR [rbp+0x64],0x6d757300
  409c1a:	ins    DWORD PTR es:[rdi],dx
  409c1b:	(bad)  
  409c1c:	jb     0x409c97
  409c1e:	add    BYTE PTR [rax],al
  409c20:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  409c22:	ins    BYTE PTR es:[rdi],dx
  409c23:	jns    0x409c45
  409c25:	outs   dx,DWORD PTR ds:[rsi]
  409c26:	outs   dx,BYTE PTR ds:[rsi]
  409c27:	and    BYTE PTR gs:0x65203e73,bh
  409c2f:	ins    BYTE PTR es:[rdi],dx
  409c30:	gs ins DWORD PTR es:[rdi],dx
  409c32:	outs   dx,BYTE PTR gs:[rsi]
  409c34:	je     0x409c56
  409c36:	(bad)  
  409c37:	ins    BYTE PTR es:[rdi],dx
  409c38:	ins    BYTE PTR es:[rdi],dx
  409c39:	outs   dx,DWORD PTR ds:[rsi]
  409c3a:	ja     0x409ca1
  409c3c:	and    BYTE PTR fs:[rcx+0x6e],ch
  409c40:	jae    0x409cab
  409c42:	fs and BYTE PTR gs:0x64003e73,bh
  409c4b:	gs jae 0x409cb1
  409c4e:	jb     0x409cb9
  409c50:	jo     0x409cc6
  409c52:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e617200
  409c59:	add    BYTE PTR gs:[ebp+0x61],ch
  409c5e:	js     0x409c60
  409c60:	ins    DWORD PTR es:[rdi],dx
  409c61:	imul   ebp,DWORD PTR [rsi+0x0],0x0
  409c68:	cmp    al,0x72
  409c6a:	(bad)  
  409c6b:	outs   dx,BYTE PTR ds:[rsi]
  409c6c:	addr32 gs (bad) 
  409c6f:	and    BYTE PTR ds:[rcx+0x6c],ah
  409c73:	jb     0x409cda
  409c75:	(bad)  
  409c76:	fs jns 0x409c99
  409c79:	jae    0x409ceb
  409c7b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409c7f:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  409c86:	and    BYTE PTR [rax+rbp*2+0x69],dh
  409c8a:	jae    0x409cac
  409c8c:	imul   esp,DWORD PTR [rbp+0x79],0x0
  409c90:	cmp    al,0x72
  409c92:	(bad)  
  409c93:	outs   dx,BYTE PTR ds:[rsi]
  409c94:	gs and BYTE PTR ds:[ebx+0x70],dh
  409c9a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409c9e:	imul   esp,DWORD PTR [rbp+0x64],0x6e696d20
  409ca5:	imul   ebp,DWORD PTR [rbp+0x75],0x7369206d
  409cac:	and    BYTE PTR [rdi+0x72],ah
  409caf:	gs (bad) 
  409cb1:	je     0x409d18
  409cb3:	jb     0x409cd5
  409cb5:	je     0x409d1f
  409cb7:	(bad)  
  409cb8:	outs   dx,BYTE PTR ds:[rsi]
  409cb9:	and    BYTE PTR [rbp+0x61],ch
  409cbc:	js     0x409d2b
  409cbe:	imul   ebp,DWORD PTR [rbp+0x75],0x6d
  409cc5:	add    BYTE PTR [rax],al
  409cc7:	add    BYTE PTR [rbx+riz*2],bh
  409cca:	push   0x6563696f
  409ccf:	jae    0x409d0f
  409cd1:	and    BYTE PTR [rbx+0x61],ah
  409cd4:	outs   dx,BYTE PTR ds:[rsi]
  409cd5:	outs   dx,BYTE PTR ds:[rsi]
  409cd6:	outs   dx,DWORD PTR ds:[rsi]
  409cd7:	je     0x409cf9
  409cd9:	(bad)  
  409cda:	and    BYTE PTR gs:[rbx+0x70],dh
  409cde:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409ce2:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  409ce9:	and    BYTE PTR [rbx+0x65],ch
  409cec:	jns    0x409d61
  409cee:	and    BYTE PTR [rcx+riz*2+0x67],dh
  409cf2:	gs and BYTE PTR fs:[ecx+0x73],ah
  409cf8:	and    BYTE PTR [rax+0x61],ch
  409cfb:	jbe    0x409d66
  409cfd:	outs   dx,BYTE PTR ds:[rsi]
  409cfe:	and    BYTE PTR [ecx+0x6e],ah
  409d02:	and    BYTE PTR [rbp+0x6e],ah
  409d05:	jne    0x409d74
  409d07:	gs jb  0x409d6b
  409d0a:	je     0x409d71
  409d0c:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  409d11:	add    BYTE PTR gs:[rax],al
  409d14:	add    BYTE PTR [rax],al
  409d16:	add    BYTE PTR [rax],al
  409d18:	cmp    al,0x63
  409d1a:	push   0x6563696f
  409d1f:	jae    0x409d5f
  409d21:	and    BYTE PTR [rcx+0x6c],ah
  409d24:	jb     0x409d8b
  409d26:	(bad)  
  409d27:	fs jns 0x409d4a
  409d2a:	jae    0x409d9c
  409d2c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409d30:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  409d37:	and    BYTE PTR [rax+rbp*2+0x69],dh
  409d3b:	jae    0x409d5d
  409d3d:	imul   esp,DWORD PTR [rbp+0x79],0x0
  409d41:	add    BYTE PTR [rax],al
  409d43:	add    BYTE PTR [rax],al
  409d45:	add    BYTE PTR [rax],al
  409d47:	add    BYTE PTR [rbx+riz*2],bh
  409d4a:	push   0x6563696f
  409d4f:	jae    0x409d8f
  409d51:	and    BYTE PTR [rsi+0x6f],ch
  409d54:	je     0x409d76
  409d56:	(bad)  
  409d57:	ins    BYTE PTR es:[rdi],dx
  409d58:	ins    BYTE PTR es:[rdi],dx
  409d59:	outs   dx,DWORD PTR ds:[rsi]
  409d5a:	ja     0x409dc1
  409d5c:	and    BYTE PTR fs:[rsi+0x6f],ah
  409d60:	jb     0x409d82
  409d62:	imul   esp,DWORD PTR [rbp+0x79],0x73
  409d66:	and    BYTE PTR [rdi+0x66],ch
  409d69:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  409d6d:	and    BYTE PTR gs:[rdi],ah
  409d70:	and    eax,0x2773
  409d75:	add    BYTE PTR [rax],al
  409d77:	add    BYTE PTR [rcx+riz*2],bh
  409d7a:	ins    BYTE PTR es:[rdi],dx
  409d7b:	imul   esp,DWORD PTR [rcx+0x73],0x203e7365
  409d82:	(bad)  
  409d83:	ins    BYTE PTR es:[rdi],dx
  409d84:	jb     0x409deb
  409d86:	(bad)  
  409d87:	fs jns 0x409daa
  409d8a:	jae    0x409dfc
  409d8c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409d90:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  409d97:	and    BYTE PTR [rax+rbp*2+0x69],dh
  409d9b:	jae    0x409dbd
  409d9d:	imul   esp,DWORD PTR [rbp+0x79],0x0
  409da1:	add    BYTE PTR [rax],al
  409da3:	add    BYTE PTR [rax],al
  409da5:	add    BYTE PTR [rax],al
  409da7:	add    BYTE PTR [rcx+riz*2],bh
  409daa:	ins    BYTE PTR es:[rdi],dx
  409dab:	imul   esp,DWORD PTR [rcx+0x73],0x203e7365
  409db2:	movsxd esp,DWORD PTR [rcx+0x6e]
  409db5:	and    BYTE PTR [rdi+0x6e],ch
  409db8:	ins    BYTE PTR es:[rdi],dx
  409db9:	jns    0x409ddb
  409dbb:	(bad)  
  409dbc:	and    BYTE PTR gs:[rbx+0x70],dh
  409dc0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409dc4:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
  409dcb:	and    BYTE PTR [rbx+0x65],ch
  409dce:	jns    0x409e43
  409dd0:	and    BYTE PTR [rdi+0x69],dh
  409dd3:	je     0x409e3d
  409dd5:	and    BYTE PTR [rbp+0x6e],ah
  409dd8:	jne    0x409e47
  409dda:	gs jb  0x409e3e
  409ddd:	je     0x409e44
  409ddf:	and    BYTE PTR fs:[rdi+0x72],ch
  409de3:	and    BYTE PTR [rsi+0x6c],ah
  409de6:	(bad)  
  409de7:	addr32 jae 0x409e0a
  409dea:	je     0x409e65
  409dec:	jo     0x409e53
  409dee:	jae    0x409e10
  409df0:	outs   dx,DWORD PTR ds:[rsi]
  409df1:	jb     0x409e13
  409df3:	(bad)  
  409df4:	data16 je 0x409e5c
  409df7:	jb     0x409e19
  409df9:	cmp    al,0x63
  409dfb:	push   0x6563696f
  409e00:	jae    0x409e40
  409e02:	add    BYTE PTR [rbx+0x68],ah
  409e05:	outs   dx,DWORD PTR ds:[rsi]
  409e06:	imul   esp,DWORD PTR [rbx+0x65],0x6c617600
  409e0d:	jne    0x409e74
  409e0f:	add    BYTE PTR [rbx+riz*2],bh
  409e12:	push   0x6563696f
  409e17:	and    BYTE PTR [rsi+0x61],dh
  409e1a:	ins    BYTE PTR es:[rdi],dx
  409e1b:	jne    0x409e82
  409e1d:	cmp    eax,0x27732527
  409e22:	(bad)  
  409e23:	and    BYTE PTR ds:[rcx+0x6c],ah
  409e27:	jb     0x409e8e
  409e29:	(bad)  
  409e2a:	fs jns 0x409e4d
  409e2d:	imul   esi,DWORD PTR [esi+0x65],0x6c61006e
  409e35:	imul   esp,DWORD PTR [rcx+0x73],0x72617400
  409e3c:	addr32 gs je 0x409e40
  409e40:	cmp    al,0x61
  409e42:	ins    BYTE PTR es:[rdi],dx
  409e43:	imul   esp,DWORD PTR [rcx+0x73],0x6c617620
  409e4a:	jne    0x409eb1
  409e4c:	cmp    eax,0x27732527
  409e51:	(bad)  
  409e52:	and    BYTE PTR ds:[rdi+0x69],ah
  409e56:	jbe    0x409ebd
  409e58:	outs   dx,BYTE PTR ds:[rsi]
  409e59:	and    BYTE PTR [rdi+0x68],dh
  409e5c:	outs   dx,BYTE PTR gs:[rsi]
  409e5e:	and    BYTE PTR [rdi],ah
  409e60:	and    eax,0x69202773
  409e65:	jae    0x409e87
  409e67:	(bad)  
  409e68:	ins    BYTE PTR es:[rdi],dx
  409e69:	jb     0x409ed0
  409e6b:	(bad)  
  409e6c:	fs jns 0x409e8f
  409e6f:	(bad)  
  409e70:	and    BYTE PTR [rbp+0x65],ch
  409e73:	ins    DWORD PTR es:[rdi],dx
  409e74:	(bad)  
  409e75:	gs jb  0x409e98
  409e78:	outs   dx,DWORD PTR ds:[rsi]
  409e79:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  409e7e:	and    BYTE PTR [rbp+0x6e],ah
  409e81:	jne    0x409ef0
  409e83:	gs jb  0x409ee7
  409e86:	je     0x409eed
  409e88:	and    BYTE PTR fs:[rcx+rdi*2+0x70],dh
  409e8d:	add    BYTE PTR gs:[rax],al
  409e90:	cmp    al,0x61
  409e92:	ins    BYTE PTR es:[rdi],dx
  409e93:	imul   esp,DWORD PTR [rcx+0x73],0x6c617620
  409e9a:	jne    0x409f01
  409e9c:	cmp    eax,0x27732527
  409ea1:	(bad)  
  409ea2:	and    BYTE PTR ds:[rdi+0x69],ah
  409ea6:	jbe    0x409f0d
  409ea8:	outs   dx,BYTE PTR ds:[rsi]
  409ea9:	and    BYTE PTR [rdi+0x68],dh
  409eac:	outs   dx,BYTE PTR gs:[rsi]
  409eae:	and    BYTE PTR [rbx+riz*2],bh
  409eb1:	push   0x6563696f
  409eb6:	and    BYTE PTR [rsi+0x61],dh
  409eb9:	ins    BYTE PTR es:[rdi],dx
  409eba:	jne    0x409f21
  409ebc:	cmp    eax,0x27732527
  409ec1:	(bad)  
  409ec2:	and    BYTE PTR ds:[rdi+0x61],dh
  409ec6:	jae    0x409ee8
  409ec8:	(bad)  
  409ec9:	ins    BYTE PTR es:[rdi],dx
  409eca:	jb     0x409f31
  409ecc:	(bad)  
  409ecd:	fs jns 0x409ef0
  409ed0:	imul   esi,DWORD PTR [esi+0x65],0x6e
  409ed8:	cmp    al,0x61
  409eda:	ins    BYTE PTR es:[rdi],dx
  409edb:	imul   esp,DWORD PTR [rcx+0x73],0x6c617620
  409ee2:	jne    0x409f49
  409ee4:	cmp    eax,0x27732527
  409ee9:	(bad)  
  409eea:	and    BYTE PTR ds:[rcx+0x6c],ah
  409eee:	jb     0x409f55
  409ef0:	(bad)  
  409ef1:	fs jns 0x409f14
  409ef4:	jae    0x409f66
  409ef6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409efa:	imul   esp,DWORD PTR [rbp+0x64],0x61000000
  409f01:	ins    BYTE PTR es:[rdi],dx
  409f02:	imul   esp,DWORD PTR [rcx+0x73],0x72617420
  409f09:	addr32 gs je 0x409f2d
  409f0d:	(bad)  
  409f0e:	and    eax,0x69202773
  409f13:	jae    0x409f35
  409f15:	outs   dx,BYTE PTR ds:[rsi]
  409f16:	outs   dx,DWORD PTR ds:[rsi]
  409f17:	je     0x409f39
  409f19:	imul   ebp,DWORD PTR [rsi+0x20],0x6e007325
  409f20:	imul   esp,DWORD PTR [rbx+0x6b],0x0
  409f27:	add    BYTE PTR [rsi+0x69],ch
  409f2a:	movsxd ebp,DWORD PTR [rbx+0x20]
  409f2d:	ins    DWORD PTR es:[rdi],dx
  409f2e:	jne    0x409fa3
  409f30:	je     0x409f52
  409f32:	(bad)  
  409f33:	and    BYTE PTR gs:[rcx+0x20],ah
  409f37:	ins    DWORD PTR es:[rdi],dx
  409f38:	imul   ebp,DWORD PTR [rsi+0x69],0x206d756d
  409f3f:	outs   dx,DWORD PTR ds:[rsi]
  409f40:	data16 and BYTE PTR [rdx],dh
  409f43:	and    BYTE PTR [rbx+0x68],ah
  409f46:	(bad)  
  409f47:	jb     0x409faa
  409f49:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  409f4d:	jae    0x409f4f
  409f4f:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  409f56:	and    BYTE PTR [rsi+0x75],ch
  409f59:	ins    DWORD PTR es:[rdi],dx
  409f5a:	gs jb  0x409fc6
  409f5d:	movsxd esp,DWORD PTR [rax]
  409f5f:	jbe    0x409fc2
  409f61:	ins    BYTE PTR es:[rdi],dx
  409f62:	jne    0x409fc9
  409f64:	add    BYTE PTR [rax],al
  409f66:	add    BYTE PTR [rax],al
  409f68:	cmp    al,0x76
  409f6a:	(bad)  
  409f6b:	ins    BYTE PTR es:[rdi],dx
  409f6c:	jne    0x409fd3
  409f6e:	and    BYTE PTR [rsi+0x69],ch
  409f71:	movsxd ebp,DWORD PTR [rbx+0x3d]
  409f74:	(bad)  
  409f75:	and    eax,0x3e2f2773
  409f7a:	and    BYTE PTR [rcx+0x6c],ah
  409f7d:	jb     0x409fe4
  409f7f:	(bad)  
  409f80:	fs jns 0x409fa3
  409f83:	jae    0x409ff5
  409f85:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409f89:	imul   esp,DWORD PTR [rbp+0x64],0x6c617600
  409f90:	jne    0x409ff7
  409f92:	cmp    eax,0x27732527
  409f97:	and    BYTE PTR [rcx+0x6c],ah
  409f9a:	jb     0x40a001
  409f9c:	(bad)  
  409f9d:	fs jns 0x409fc0
  409fa0:	jae    0x40a012
  409fa2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409fa6:	imul   esp,DWORD PTR [rbp+0x64],0x0
  409fad:	add    BYTE PTR [rax],al
  409faf:	add    BYTE PTR [rsi+0x6c],ah
  409fb2:	(bad)  
  409fb3:	addr32 jae 0x409fd6
  409fb6:	jbe    0x40a019
  409fb8:	ins    BYTE PTR es:[rdi],dx
  409fb9:	jne    0x40a020
  409fbb:	jae    0x409fdd
  409fbd:	ins    DWORD PTR es:[rdi],dx
  409fbe:	jne    0x40a033
  409fc0:	je     0x409fe2
  409fc2:	push   0x20657661
  409fc7:	(bad)  
  409fc8:	je     0x409fea
  409fca:	ins    DWORD PTR es:[rdi],dx
  409fcb:	outs   dx,DWORD PTR ds:[rsi]
  409fcc:	jae    0x40a042
  409fce:	and    BYTE PTR [rcx],dh
  409fd0:	and    BYTE PTR [rdx+0x69],ah
  409fd3:	je     0x409ff5
  409fd5:	jae    0x40a03c
  409fd7:	je     0x409fd9
  409fd9:	add    BYTE PTR [rax],al
  409fdb:	add    BYTE PTR [rax],al
  409fdd:	add    BYTE PTR [rax],al
  409fdf:	add    BYTE PTR [rbp+0x6c],al
  409fe2:	gs ins DWORD PTR es:[rdi],dx
  409fe4:	outs   dx,BYTE PTR gs:[rsi]
  409fe6:	je     0x40a008
  409fe8:	cmp    al,0x25
  409fea:	jae    0x40a02a
  409fec:	and    BYTE PTR [rsi+0x6f],ch
  409fef:	je     0x40a011
  409ff1:	(bad)  
  409ff2:	ins    BYTE PTR es:[rdi],dx
  409ff3:	ins    BYTE PTR es:[rdi],dx
  409ff4:	outs   dx,DWORD PTR ds:[rsi]
  409ff5:	ja     0x40a05c
  409ff7:	and    BYTE PTR fs:[rcx+0x6e],ch
  409ffb:	jae    0x40a066
  409ffd:	fs and BYTE PTR gs:0x3e73,bh
  40a006:	add    BYTE PTR [rax],al
  40a008:	rex.RB ins BYTE PTR es:[rdi],dx
  40a00a:	gs ins DWORD PTR es:[rdi],dx
  40a00c:	outs   dx,BYTE PTR gs:[rsi]
  40a00e:	je     0x40a030
  40a010:	cmp    al,0x25
  40a012:	jae    0x40a052
  40a014:	and    BYTE PTR [rsi+0x6f],ch
  40a017:	je     0x40a039
  40a019:	(bad)  
  40a01a:	ins    BYTE PTR es:[rdi],dx
  40a01b:	ins    BYTE PTR es:[rdi],dx
  40a01c:	outs   dx,DWORD PTR ds:[rsi]
  40a01d:	ja     0x40a084
  40a01f:	and    BYTE PTR fs:[rcx+0x74],ah
  40a023:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40a027:	and    BYTE PTR [rdi+rbp*2+0x70],dh
  40a02b:	and    BYTE PTR [rbp+riz*2+0x76],ch
  40a02f:	gs ins BYTE PTR es:[rdi],dx
  40a031:	add    BYTE PTR [rax],al
  40a033:	add    BYTE PTR [rax],al
  40a035:	add    BYTE PTR [rax],al
  40a037:	add    BYTE PTR [rsi+0x6f],ch
  40a03a:	and    BYTE PTR [rbx+rbp*2],bh
  40a03d:	gs jns 0x40a060
  40a040:	outs   dx,BYTE PTR ds:[rsi]
  40a041:	(bad)  
  40a042:	ins    DWORD PTR es:[rdi],dx
  40a043:	gs cmp eax,0x27732527
  40a049:	and    BYTE PTR ds:[rdi+rbp*2+0x20],dh
  40a04e:	outs   dx,DWORD PTR ds:[rsi]
  40a04f:	jbe    0x40a0b6
  40a051:	jb     0x40a0c5
  40a053:	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x61723c00
  40a05b:	outs   dx,BYTE PTR ds:[rsi]
  40a05c:	gs and BYTE PTR ds:[esi+0x6f],ch
  40a062:	je     0x40a084
  40a064:	(bad)  
  40a065:	ins    BYTE PTR es:[rdi],dx
  40a066:	ins    BYTE PTR es:[rdi],dx
  40a067:	outs   dx,DWORD PTR ds:[rsi]
  40a068:	ja     0x40a0cf
  40a06a:	and    BYTE PTR fs:[rsi+0x6f],ah
  40a06e:	jb     0x40a090
  40a070:	imul   esp,DWORD PTR [rbp+0x79],0x73
  40a074:	and    BYTE PTR [rdi+0x66],ch
  40a077:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  40a07b:	and    BYTE PTR gs:[rdi],ah
  40a07e:	and    eax,0x30002773
  40a083:	add    BYTE PTR [rdx],dh
  40a085:	xor    eax,0x332d0035
  40a08a:	xor    dh,BYTE PTR [rdi]
  40a08c:	cmp    BYTE PTR ss:[rax],al
  40a08f:	xor    esi,DWORD PTR [rdx]
  40a091:	(bad)  
  40a092:	ss (bad) 
  40a094:	add    BYTE PTR [rsi],dh
  40a096:	xor    eax,0x353335
  40a09b:	sub    eax,0x37343132
  40a0a0:	xor    al,0x38
  40a0a2:	xor    esi,DWORD PTR [rsi]
  40a0a4:	xor    al,0x38
  40a0a6:	add    BYTE PTR [rdx],dh
  40a0a8:	xor    DWORD PTR [rdi+rsi*1],esi
  40a0ab:	xor    al,0x38
  40a0ad:	xor    esi,DWORD PTR [rsi]
  40a0af:	xor    al,0x37
  40a0b1:	add    BYTE PTR [rdx+rsi*1],dh
  40a0b4:	cmp    DWORD PTR [rcx+rdi*1],esi
  40a0b7:	ss (bad) 
  40a0b9:	xor    bh,BYTE PTR [rcx]
  40a0bb:	xor    eax,0x32392d00
  40a0c0:	xor    dh,BYTE PTR [rbx]
  40a0c2:	xor    esi,DWORD PTR [rdi]
  40a0c4:	xor    dh,BYTE PTR [rax]
  40a0c6:	xor    esi,DWORD PTR [rsi]
  40a0c8:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x3577d802
  40a0ce:	cmp    BYTE PTR [rax],dh
  40a0d0:	cmp    BYTE PTR [rax],al
  40a0d2:	cmp    DWORD PTR [rdx],esi
  40a0d4:	xor    dh,BYTE PTR [rbx]
  40a0d6:	xor    esi,DWORD PTR [rdi]
  40a0d8:	xor    dh,BYTE PTR [rax]
  40a0da:	xor    esi,DWORD PTR [rsi]
  40a0dc:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x3577d816
  40a0e2:	cmp    BYTE PTR [rax],dh
  40a0e4:	(bad)  
  40a0e5:	add    BYTE PTR [rcx],dh
  40a0e7:	cmp    BYTE PTR [rsp+rsi*1],dh
  40a0ea:	ss (bad) 
  40a0ec:	xor    al,0x34
  40a0ee:	xor    BYTE PTR [rdi],dh
  40a0f0:	xor    esi,DWORD PTR [rdi]
  40a0f2:	xor    BYTE PTR [rcx],bh
  40a0f4:	xor    eax,0x31363135
  40a0f9:	xor    eax,0x6e692d00
  40a0fe:	data16 add BYTE PTR [rcx+0x6e],ch
  40a102:	data16 add BYTE PTR [rdx+0x0],dh
  40a106:	sub    BYTE PTR [rcx+0x28],bh
  40a109:	jns    0x40a131
  40a10b:	jae    0x40a136
  40a10d:	sub    DWORD PTR [rax],eax
  40a10f:	(bad)  
  40a110:	jne    0x40a112
  40a112:	sub    BYTE PTR [rcx+0x40],bh
  40a115:	(bad)  
  40a116:	jne    0x40a141
  40a118:	add    BYTE PTR [rax],ch
  40a11a:	jns    0x40a144
  40a11c:	sub    ch,BYTE PTR [rdx]
  40a11e:	sub    DWORD PTR [rcx],ebp
	...
  40a128:	ja     0x40a18b
  40a12a:	jb     0x40a19a
  40a12c:	imul   ebp,DWORD PTR [rsi+0x67],0x6e75203a
  40a133:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  40a13b:	jb     0x40a1a2
  40a13d:	data16 gs jb 0x40a1a6
  40a141:	outs   dx,BYTE PTR ds:[rsi]
  40a142:	movsxd esp,DWORD PTR [rbp+0x20]
  40a145:	je     0x40a1b6
  40a147:	and    BYTE PTR [rbx+rsi*2],bh
  40a14a:	movsxd ebp,DWORD PTR [rax+0x65]
  40a14d:	ins    DWORD PTR es:[rdi],dx
  40a14e:	(bad)  
  40a14f:	and    BYTE PTR [rcx+0x64],ch
  40a152:	cmp    eax,0x27732527
  40a157:	(bad)  
  40a158:	or     al,BYTE PTR ds:[rax]
  40a15b:	je     0x40a1be
  40a15d:	jb     0x40a1c6
  40a15f:	gs je  0x40a1c6
  40a162:	imul   esi,DWORD PTR [rdx+0x0],0x77000000
  40a169:	push   0x20657265
  40a16e:	je     0x40a1df
  40a170:	and    BYTE PTR [rbx+0x74],dh
  40a173:	outs   dx,DWORD PTR ds:[rsi]
  40a174:	jb     0x40a1db
  40a176:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40a17a:	and    BYTE PTR [rdi+0x73],ah
  40a17d:	movsxd ebp,DWORD PTR [rax+0x65]
  40a180:	ins    DWORD PTR es:[rdi],dx
  40a181:	(bad)  
  40a182:	jae    0x40a1b2
  40a184:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40a187:	jo     0x40a1f2
  40a189:	ins    BYTE PTR es:[rdi],dx
  40a18a:	gs and BYTE PTR fs:[rsi+0x69],ah
  40a18f:	ins    BYTE PTR es:[rdi],dx
  40a190:	add    BYTE PTR gs:[rcx+rcx*2+0x52],al
  40a195:	rex.RB
  40a196:	rex.XB push r12
  40a198:	rex.WRXB push r10
  40a19a:	pop    rcx
  40a19b:	add    BYTE PTR [rbx+0x74],dh
  40a19e:	jb     0x40a209
  40a1a0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40a1a4:	add    BYTE PTR [rax],al
  40a1a6:	add    BYTE PTR [rax],al
  40a1a8:	rex.B (bad) 
  40a1aa:	outs   dx,DWORD PTR ds:[rsi]
  40a1ab:	jb     0x40a221
  40a1ad:	and    BYTE PTR [rdi+0x6e],ch
  40a1b0:	and    BYTE PTR [rcx+0x6e],ah
  40a1b3:	jns    0x40a1d5
  40a1b5:	gs jb  0x40a22a
  40a1b8:	outs   dx,DWORD PTR ds:[rsi]
  40a1b9:	jb     0x40a22e
  40a1bb:	and    BYTE PTR [rcx+0x6e],ch
  40a1be:	and    BYTE PTR [rbx+0x63],dh
  40a1c1:	push   0x73616d65
  40a1c6:	add    BYTE PTR [rdx+rsi*2+0x79],ah
  40a1ca:	sub    eax,0x6e7572
  40a1cf:	add    BYTE PTR [rdi+rbp*2+0x20],al
  40a1d3:	outs   dx,BYTE PTR ds:[rsi]
  40a1d4:	outs   dx,DWORD PTR ds:[rsi]
  40a1d5:	je     0x40a1f7
  40a1d7:	ja     0x40a24b
  40a1d9:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x20656874
  40a1e1:	addr32 jae 0x40a247
  40a1e4:	push   0x2e616d65
  40a1e9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40a1ec:	jo     0x40a257
  40a1ee:	ins    BYTE PTR es:[rdi],dx
  40a1ef:	gs and BYTE PTR fs:[rsi+0x69],ah
  40a1f4:	ins    BYTE PTR es:[rdi],dx
  40a1f5:	add    BYTE PTR gs:[rcx+0x6c],ah
  40a1f9:	ins    BYTE PTR es:[rdi],dx
  40a1fa:	outs   dx,DWORD PTR ds:[rsi]
  40a1fb:	ja     0x40a22a
  40a1fd:	(bad)  
  40a1fe:	outs   dx,BYTE PTR ds:[rsi]
  40a1ff:	jns    0x40a22e
  40a201:	outs   dx,BYTE PTR ds:[rsi]
  40a202:	(bad)  
  40a203:	ins    DWORD PTR es:[rdi],dx
  40a204:	add    BYTE PTR gs:[rax],al
  40a207:	add    BYTE PTR [rdi+rbp*2+0x20],al
  40a20b:	outs   dx,BYTE PTR ds:[rsi]
  40a20c:	outs   dx,DWORD PTR ds:[rsi]
  40a20d:	je     0x40a22f
  40a20f:	outs   dx,BYTE PTR gs:[rsi]
  40a211:	outs   dx,WORD PTR ds:[rsi]
  40a213:	jb     0x40a278
  40a215:	and    BYTE PTR gs:[rbx+0x65],ch
  40a219:	jns    0x40a23b
  40a21b:	outs   dx,BYTE PTR ds:[rsi]
  40a21c:	(bad)  
  40a21d:	ins    DWORD PTR es:[rdi],dx
  40a21e:	and    BYTE PTR gs:[rdx+0x65],dh
  40a222:	jae    0x40a298
  40a224:	jb     0x40a28f
  40a226:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a22a:	outs   dx,BYTE PTR ds:[rsi]
  40a22b:	jae    0x40a22d
  40a22d:	jae    0x40a292
  40a22f:	push   0x2d616d65
  40a234:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6c67
  40a23b:	imul   esp,DWORD PTR [rdx+0x32],0x54550030
  40a242:	rex.RX sub eax,0x38
  40a248:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40a24a:	ins    DWORD PTR es:[rdi],dx
  40a24b:	jo     0x40a2b6
  40a24d:	ins    BYTE PTR es:[rdi],dx
  40a24e:	and    BYTE PTR gs:[rcx+0x6c],ah
  40a252:	ins    BYTE PTR es:[rdi],dx
  40a253:	and    BYTE PTR [rdi+0x53],al
  40a256:	gs je  0x40a2cd
  40a259:	imul   ebp,DWORD PTR [rsi+0x67],0x63732073
  40a260:	push   0x20616d65
  40a265:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6920
  40a26c:	outs   dx,BYTE PTR ds:[rsi]
  40a26d:	je     0x40a2de
  40a26f:	and    BYTE PTR [rcx+0x20],ah
  40a272:	jae    0x40a2d7
  40a274:	push   0x20616d65
  40a279:	movsxd esp,DWORD PTR [rcx+0x63]
  40a27c:	push   0x530a2e65
  40a281:	movsxd ebp,DWORD PTR [rax+0x65]
  40a284:	ins    DWORD PTR es:[rdi],dx
  40a285:	(bad)  
  40a286:	and    BYTE PTR [rsi+0x69],ah
  40a289:	ins    BYTE PTR es:[rdi],dx
  40a28a:	gs jae 0x40a2ad
  40a28d:	(bad)  
  40a28e:	jb     0x40a2f5
  40a290:	and    BYTE PTR [rdx+0x65],dh
  40a293:	jno    0x40a30a
  40a295:	imul   esi,DWORD PTR [rdx+0x65],0x6f742064
  40a29c:	and    BYTE PTR [rax+0x61],ch
  40a29f:	jbe    0x40a306
  40a2a1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40a2a5:	and    BYTE PTR [rbp+0x78],ah
  40a2a8:	je     0x40a30f
  40a2aa:	outs   dx,BYTE PTR ds:[rsi]
  40a2ab:	jae    0x40a316
  40a2ad:	outs   dx,DWORD PTR ds:[rsi]
  40a2ae:	outs   dx,BYTE PTR ds:[rsi]
  40a2af:	and    BYTE PTR [rsi],ch
  40a2b1:	addr32 jae 0x40a317
  40a2b4:	push   0x2e616d65
  40a2b9:	js     0x40a328
  40a2bb:	ins    BYTE PTR es:[rdi],dx
  40a2bc:	sub    al,0xa
  40a2be:	(bad)  
  40a2bf:	outs   dx,BYTE PTR ds:[rsi]
  40a2c0:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  40a2c5:	and    BYTE PTR [rbx+0x61],ah
  40a2c8:	movsxd ebp,DWORD PTR [rax+0x65]
  40a2cb:	and    BYTE PTR [rsi+0x69],ah
  40a2ce:	ins    BYTE PTR es:[rdi],dx
  40a2cf:	and    BYTE PTR gs:[rcx+0x73],ch
  40a2d3:	and    BYTE PTR [rbx+0x61],ah
  40a2d6:	ins    BYTE PTR es:[rdi],dx
  40a2d7:	ins    BYTE PTR es:[rdi],dx
  40a2d8:	gs and BYTE PTR fs:[rdi+0x73],ah
  40a2dd:	movsxd ebp,DWORD PTR [rax+0x65]
  40a2e0:	ins    DWORD PTR es:[rdi],dx
  40a2e1:	(bad)  
  40a2e2:	jae    0x40a312
  40a2e4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40a2e7:	jo     0x40a352
  40a2e9:	ins    BYTE PTR es:[rdi],dx
  40a2ea:	gs fs add BYTE PTR cs:[rip+0xa73],ah        # 0x40ad66
  40a2f3:	add    BYTE PTR [rax],al
  40a2f5:	add    BYTE PTR [rax],al
  40a2f7:	add    BYTE PTR [rcx+0x6f],bl
  40a2fa:	jne    0x40a31c
  40a2fc:	jae    0x40a366
  40a2fe:	outs   dx,DWORD PTR ds:[rsi]
  40a2ff:	jne    0x40a36d
  40a301:	and    BYTE PTR fs:[rdi+0x69],ah
  40a305:	jbe    0x40a36c
  40a307:	and    BYTE PTR [rbp+0x78],ah
  40a30a:	(bad)  
  40a30b:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  40a30f:	and    BYTE PTR [rdi+0x6e],ch
  40a312:	and    BYTE PTR gs:[rcx+rbp*2+0x72],ah
  40a317:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  40a31c:	jns    0x40a33e
  40a31e:	outs   dx,BYTE PTR ds:[rsi]
  40a31f:	(bad)  
  40a320:	ins    DWORD PTR es:[rdi],dx
  40a321:	or     al,BYTE PTR gs:[rax]
  40a324:	addr32 jae 0x40a38a
  40a327:	push   0x73616d65
  40a32c:	movsxd ebp,DWORD PTR cs:[rdi+0x6d]
  40a330:	jo     0x40a39b
  40a332:	ins    BYTE PTR es:[rdi],dx
  40a333:	gs add BYTE PTR fs:[rsi],ch
  40a337:	addr32 jae 0x40a39d
  40a33a:	push   0x2e616d65
  40a33f:	js     0x40a3ae
  40a341:	ins    BYTE PTR es:[rdi],dx
  40a342:	add    BYTE PTR [rsi],ch
  40a344:	addr32 jae 0x40a3aa
  40a347:	push   0x2e616d65
  40a34c:	outs   dx,DWORD PTR ds:[rsi]
  40a34d:	jbe    0x40a3b4
  40a34f:	jb     0x40a3c3
  40a351:	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x73206f4e
  40a359:	movsxd ebp,DWORD PTR [rax+0x65]
  40a35c:	ins    DWORD PTR es:[rdi],dx
  40a35d:	(bad)  
  40a35e:	and    BYTE PTR [rsi+0x69],ah
  40a361:	ins    BYTE PTR es:[rdi],dx
  40a362:	gs jae 0x40a385
  40a365:	outs   dx,WORD PTR ds:[rsi]
  40a367:	jne    0x40a3d7
  40a369:	cmp    ah,BYTE PTR fs:[rax]
  40a36c:	add    BYTE PTR [rdi+rbp*2+0x69],ah
  40a370:	outs   dx,BYTE PTR ds:[rsi]
  40a371:	and    BYTE PTR [esi+0x6f],ch
  40a375:	je     0x40a3df
  40a377:	imul   ebp,DWORD PTR [rsi+0x67],0xa2e
  40a37e:	add    BYTE PTR [rax],al
  40a380:	jb     0x40a3e7
  40a382:	ins    DWORD PTR es:[rdi],dx
  40a383:	outs   dx,DWORD PTR ds:[rsi]
  40a384:	jbe    0x40a3eb
  40a386:	and    BYTE PTR fs:[rbp+0x78],ah
  40a38a:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  40a391:	outs   dx,DWORD PTR ds:[rsi]
  40a392:	jne    0x40a408
  40a394:	jo     0x40a40b
  40a396:	je     0x40a3b8
  40a398:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0xa
  40a39f:	and    eax,0x64253a73
  40a3a4:	cmp    ah,BYTE PTR [rip+0x25202064]        # 0x2560c40e
  40a3aa:	jae    0x40a3da
  40a3ac:	and    BYTE PTR [rax],ah
  40a3ae:	add    BYTE PTR [rax],al
  40a3b0:	sub    eax,0x7274732d
  40a3b5:	imul   esp,DWORD PTR [rbx+0x74],0x73617720
  40a3bc:	and    BYTE PTR [rbx+0x70],dh
  40a3bf:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a3c3:	imul   esp,DWORD PTR [rbp+0x64],0x7865203b
  40a3ca:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
  40a3d2:	add    BYTE PTR [rax],al
  40a3d4:	add    BYTE PTR [rax],al
  40a3d6:	add    BYTE PTR [rax],al
  40a3d8:	push   rsp
  40a3d9:	push   0x65207369
  40a3de:	outs   dx,BYTE PTR ds:[rsi]
  40a3df:	je     0x40a44a
  40a3e1:	jb     0x40a448
  40a3e3:	and    BYTE PTR [rsi+0x69],ah
  40a3e6:	ins    BYTE PTR es:[rdi],dx
  40a3e7:	and    BYTE PTR gs:[rax+0x61],ch
  40a3eb:	jae    0x40a40d
  40a3ed:	(bad)  
  40a3ee:	gs outs dx,BYTE PTR gs:[rsi]
  40a3f1:	and    BYTE PTR [rcx+0x67],ch
  40a3f4:	outs   dx,BYTE PTR ds:[rsi]
  40a3f5:	outs   dx,DWORD PTR ds:[rsi]
  40a3f6:	jb     0x40a45d
  40a3f8:	fs or  al,BYTE PTR cs:[rax]
  40a3fc:	and    eax,0x25203a73
  40a401:	jae    0x40a431
  40a403:	and    BYTE PTR [rax],ah
  40a405:	add    BYTE PTR [rcx+0x67],cl
  40a408:	outs   dx,BYTE PTR ds:[rsi]
  40a409:	outs   dx,DWORD PTR ds:[rsi]
  40a40a:	jb     0x40a475
  40a40c:	outs   dx,BYTE PTR ds:[rsi]
  40a40d:	and    BYTE PTR [eax+ebp*2+0x69],dh
  40a412:	jae    0x40a434
  40a414:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0xa
  40a41b:	add    BYTE PTR [rax],al
  40a41d:	add    BYTE PTR [rax],al
  40a41f:	add    BYTE PTR [rsi+0x6f],cl
  40a422:	and    BYTE PTR [rbx+0x75],dh
  40a425:	movsxd ebp,DWORD PTR [rax+0x20]
  40a428:	imul   esp,DWORD PTR [rbp+0x79],0x20
  40a42c:	(bad)  
  40a42d:	and    eax,0x69202773
  40a432:	outs   dx,BYTE PTR ds:[rsi]
  40a433:	and    BYTE PTR [rbx+0x63],dh
  40a436:	push   0x20616d65
  40a43b:	(bad)  
  40a43c:	and    eax,0x61202773
  40a441:	jae    0x40a463
  40a443:	jae    0x40a4b5
  40a445:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a449:	imul   esp,DWORD PTR [rbp+0x64],0x206e6920
  40a450:	outs   dx,DWORD PTR ds:[rsi]
  40a451:	jbe    0x40a4b8
  40a453:	jb     0x40a4c7
  40a455:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x656c6966
  40a45d:	and    BYTE PTR [rdi],ah
  40a45f:	and    eax,0x2773
  40a464:	add    BYTE PTR [rax],al
  40a466:	add    BYTE PTR [rax],al
  40a468:	cmp    esp,DWORD PTR [rax]
  40a46a:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  40a471:	and    BYTE PTR [edi+0x76],ch
  40a475:	gs jb  0x40a4ea
  40a478:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
  40a480:	je     0x40a4ea
  40a482:	imul   esi,DWORD PTR [rbx+0x20],0x2e79656b
  40a489:	or     al,BYTE PTR [rax]
  40a48b:	add    BYTE PTR [rax],al
  40a48d:	add    BYTE PTR [rax],al
  40a48f:	add    BYTE PTR [rax],ah
  40a491:	(bad)  
  40a492:	outs   dx,BYTE PTR ds:[rsi]
  40a493:	and    BYTE PTR fs:[rip+0x7274732d],ch        # 0x72b517c7
  40a49a:	imul   esp,DWORD PTR [rbx+0x74],0x73617720
  40a4a1:	and    BYTE PTR [rbx+0x70],dh
  40a4a4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a4a8:	imul   esp,DWORD PTR [rbp+0x64],0x7865203b
  40a4af:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
  40a4b7:	add    BYTE PTR [rbp+0x72],ah
  40a4ba:	jb     0x40a52b
  40a4bc:	jb     0x40a4de
  40a4be:	jo     0x40a521
  40a4c0:	jb     0x40a535
  40a4c2:	imul   ebp,DWORD PTR [rsi+0x67],0x79656b20
  40a4c9:	and    BYTE PTR [rdi],ah
  40a4cb:	and    eax,0x69202773
  40a4d0:	outs   dx,BYTE PTR ds:[rsi]
  40a4d1:	and    BYTE PTR [rbx+0x63],dh
  40a4d4:	push   0x20616d65
  40a4d9:	(bad)  
  40a4da:	and    eax,0x61202773
  40a4df:	jae    0x40a501
  40a4e1:	jae    0x40a553
  40a4e3:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a4e7:	imul   esp,DWORD PTR [rbp+0x64],0x206e6920
  40a4ee:	outs   dx,DWORD PTR ds:[rsi]
  40a4ef:	jbe    0x40a556
  40a4f1:	jb     0x40a565
  40a4f3:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x656c6966
  40a4fb:	and    BYTE PTR [rdi],ah
  40a4fd:	and    eax,0x203a2773
  40a502:	and    eax,0x2e73
  40a507:	add    BYTE PTR [rcx+0x67],cl
  40a50a:	outs   dx,BYTE PTR ds:[rsi]
  40a50b:	outs   dx,DWORD PTR ds:[rsi]
  40a50c:	jb     0x40a577
  40a50e:	outs   dx,BYTE PTR ds:[rsi]
  40a50f:	and    BYTE PTR [edi+0x76],ch
  40a513:	gs jb  0x40a588
  40a516:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
  40a51e:	je     0x40a588
  40a520:	imul   esi,DWORD PTR [rbx+0x20],0x2e79656b
  40a527:	or     al,BYTE PTR [rax]
  40a529:	add    BYTE PTR [rax],al
  40a52b:	add    BYTE PTR [rax],al
  40a52d:	add    BYTE PTR [rax],al
  40a52f:	add    BYTE PTR [rdi+0x76],ch
  40a532:	gs jb  0x40a5a7
  40a535:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
  40a53d:	imul   esp,DWORD PTR [rbp+0x79],0x20
  40a541:	(bad)  
  40a542:	and    eax,0x69202773
  40a547:	outs   dx,BYTE PTR ds:[rsi]
  40a548:	and    BYTE PTR [rbx+0x63],dh
  40a54b:	push   0x20616d65
  40a550:	(bad)  
  40a551:	and    eax,0x69202773
  40a556:	outs   dx,BYTE PTR ds:[rsi]
  40a557:	and    BYTE PTR [rdi+0x76],ch
  40a55a:	gs jb  0x40a5cf
  40a55d:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x656c6966
  40a565:	and    BYTE PTR [rdi],ah
  40a567:	and    eax,0x69202773
  40a56c:	jae    0x40a58e
  40a56e:	outs   dx,DWORD PTR ds:[rsi]
  40a56f:	jne    0x40a5e5
  40a571:	jae    0x40a5dc
  40a573:	fs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  40a579:	and    BYTE PTR [rdx+0x61],dh
  40a57c:	outs   dx,BYTE PTR ds:[rsi]
  40a57d:	and    BYTE PTR gs:[edi+0x69],ah
  40a582:	jbe    0x40a5e9
  40a584:	outs   dx,BYTE PTR ds:[rsi]
  40a585:	and    BYTE PTR [rcx+0x6e],ch
  40a588:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40a58c:	and    BYTE PTR [rbx+0x63],dh
  40a58f:	push   0x616d65
  40a594:	add    BYTE PTR [rax],al
  40a596:	add    BYTE PTR [rax],al
  40a598:	outs   dx,DWORD PTR ds:[rsi]
  40a599:	jbe    0x40a600
  40a59b:	jb     0x40a60f
  40a59d:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
  40a5a5:	imul   esp,DWORD PTR [rbp+0x79],0x20
  40a5a9:	(bad)  
  40a5aa:	and    eax,0x69202773
  40a5af:	outs   dx,BYTE PTR ds:[rsi]
  40a5b0:	and    BYTE PTR [rbx+0x63],dh
  40a5b3:	push   0x20616d65
  40a5b8:	(bad)  
  40a5b9:	and    eax,0x69202773
  40a5be:	outs   dx,BYTE PTR ds:[rsi]
  40a5bf:	and    BYTE PTR [rdi+0x76],ch
  40a5c2:	gs jb  0x40a637
  40a5c5:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x656c6966
  40a5cd:	and    BYTE PTR [rdi],ah
  40a5cf:	and    eax,0x69202773
  40a5d4:	jae    0x40a5f6
  40a5d6:	outs   dx,BYTE PTR ds:[rsi]
  40a5d7:	outs   dx,DWORD PTR ds:[rsi]
  40a5d8:	je     0x40a5fa
  40a5da:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  40a5e1:	ins    BYTE PTR es:[rdi],dx
  40a5e2:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  40a5e9:	jbe    0x40a64c
  40a5eb:	ins    BYTE PTR es:[rdi],dx
  40a5ec:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x63696f68
  40a5f4:	gs jae 0x40a5f7
  40a5f7:	imul   esp,DWORD PTR [rbp+0x79],0x73
  40a5fb:	and    BYTE PTR [rcx],ah
  40a5fd:	cmp    eax,0x4c554e20
  40a602:	rex.WR add BYTE PTR [rbx+0x74],r14b
  40a606:	jb     0x40a671
  40a608:	outs   dx,BYTE PTR ds:[rsi]
  40a609:	and    BYTE PTR [ecx],ah
  40a60c:	cmp    eax,0x4c554e20
  40a611:	rex.WR add BYTE PTR [rbx+0x65],r14b
  40a615:	je     0x40a676
  40a617:	outs   dx,DWORD PTR ds:[rsi]
  40a618:	jbe    0x40a67f
  40a61a:	jb     0x40a68e
  40a61c:	imul   esp,DWORD PTR [rbp+riz*2+0x73],0x5f736900
  40a624:	jae    0x40a69b
  40a626:	(bad)
  40a62b:	jae    0x40a62d
  40a62d:	add    BYTE PTR [rax],al
  40a62f:	add    BYTE PTR [rcx+0x73],ch
  40a632:	pop    rdi
  40a633:	jbe    0x40a696
  40a635:	ins    BYTE PTR es:[rdi],dx
  40a636:	imul   esp,DWORD PTR [rdi+rbx*2+0x63],0x63696f68
  40a63e:	gs jae 0x40a641
	...
  40a64d:	add    BYTE PTR [rax],al
  40a64f:	add    BYTE PTR [rax+0x40d5],al
  40a655:	add    BYTE PTR [rax],al
  40a657:	add    BYTE PTR [rax+0x40d0],al
  40a65d:	add    BYTE PTR [rax],al
  40a65f:	add    BYTE PTR [rax+0x53],ah
  40a662:	add    BYTE PTR [rax],al
	...
  40a66d:	add    BYTE PTR [rax],al
  40a66f:	add    BYTE PTR [rcx+0x72],al
  40a672:	addr32 jne 0x40a6e2
  40a675:	outs   dx,BYTE PTR gs:[rsi]
  40a677:	je     0x40a699
  40a679:	outs   dx,DWORD PTR fs:[rsi]
  40a67b:	ins    DWORD PTR es:[rdi],dx
  40a67c:	(bad)  
  40a67d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40a684:	jb     0x40a6a6
  40a686:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40a68a:	rex.B
  40a68b:	rex.WB
  40a68c:	rex.WRX sub QWORD PTR [rax],r8
  40a68f:	rex.B jb 0x40a6f9
  40a692:	jne    0x40a701
  40a694:	outs   dx,BYTE PTR gs:[rsi]
  40a696:	je     0x40a6b8
  40a698:	jae    0x40a703
  40a69a:	outs   dx,BYTE PTR ds:[rsi]
  40a69b:	addr32 jne 0x40a70a
  40a69e:	(bad)  
  40a69f:	jb     0x40a70a
  40a6a1:	je     0x40a71c
  40a6a3:	and    BYTE PTR [rax],ch
  40a6a5:	push   rbx
  40a6a6:	rex.WB
  40a6a7:	rex.RXB
  40a6a8:	rex.WRX sub QWORD PTR [rax],r8
  40a6ab:	add    BYTE PTR [rax],al
  40a6ad:	add    BYTE PTR [rax],al
  40a6af:	add    BYTE PTR [rdi+0x76],cl
  40a6b2:	gs jb  0x40a71b
  40a6b5:	ins    BYTE PTR es:[rdi],dx
  40a6b6:	outs   dx,DWORD PTR ds:[rsi]
  40a6b7:	ja     0x40a6d9
  40a6b9:	jb     0x40a71c
  40a6bb:	outs   dx,BYTE PTR ds:[rsi]
  40a6bc:	and    BYTE PTR gs:[ebp+0x72],ah
  40a6c1:	jb     0x40a732
  40a6c3:	jb     0x40a6e5
  40a6c5:	sub    BYTE PTR [rdi+0x56],cl
  40a6c8:	rex.RB push r10
  40a6ca:	rex.RX
  40a6cb:	rex.WR
  40a6cc:	rex.WRXB push r15
  40a6ce:	sub    DWORD PTR [rax],eax
  40a6d0:	push   rax
  40a6d1:	(bad)  
  40a6d2:	jb     0x40a748
  40a6d4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40a6db:	jae    0x40a6fd
  40a6dd:	outs   dx,DWORD PTR ds:[rsi]
  40a6de:	data16 and BYTE PTR [rbx+0x69],dh
  40a6e2:	outs   dx,BYTE PTR ds:[esi]
  40a6e4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40a6eb:	and    BYTE PTR gs:[rax],ch
  40a6ee:	push   rax
  40a6ef:	rex.WR
  40a6f0:	rex.WRXB push r11
  40a6f2:	push   rbx
  40a6f3:	sub    DWORD PTR [rax],eax
  40a6f5:	add    BYTE PTR [rax],al
  40a6f7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40a6fb:	(bad)  
  40a6fc:	ins    BYTE PTR es:[rdi],dx
  40a6fd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40a701:	jae    0x40a723
  40a703:	outs   dx,DWORD PTR ds:[rsi]
  40a704:	data16 and BYTE PTR [rbx+0x69],dh
  40a708:	outs   dx,BYTE PTR ds:[esi]
  40a70a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40a711:	and    BYTE PTR gs:[rax],ch
  40a714:	push   rsp
  40a715:	rex.WR
  40a716:	rex.WRXB push r11
  40a718:	push   rbx
  40a719:	sub    DWORD PTR [rax],eax
  40a71b:	add    BYTE PTR [rax],al
  40a71d:	add    BYTE PTR [rax],al
  40a71f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40a723:	and    BYTE PTR [rdx+0x65],dh
  40a726:	jae    0x40a79d
  40a728:	ins    BYTE PTR es:[rdi],dx
  40a729:	je     0x40a74b
  40a72b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40a732:	jae    0x40a7a1
  40a734:	(bad)  
  40a735:	ins    BYTE PTR es:[rdi],dx
  40a736:	ins    BYTE PTR es:[rdi],dx
  40a737:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40a73b:	(bad)  
  40a73c:	and    BYTE PTR gs:[rdx+0x65],dh
  40a740:	jo     0x40a7b4
  40a742:	gs jae 0x40a7aa
  40a745:	outs   dx,BYTE PTR ds:[rsi]
  40a746:	je     0x40a7ad
  40a748:	and    BYTE PTR fs:[rax],ch
  40a74b:	push   rbp
  40a74c:	rex.WRX
  40a74d:	rex.R
  40a74e:	rex.RB push r10
  40a750:	rex.RX
  40a751:	rex.WR
  40a752:	rex.WRXB push r15
  40a754:	sub    DWORD PTR [rax],eax
  40a756:	push   rbp
  40a757:	outs   dx,BYTE PTR ds:[rsi]
  40a758:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40a75c:	outs   dx,BYTE PTR ds:[rsi]
  40a75d:	and    BYTE PTR [rbp+0x72],ah
  40a760:	jb     0x40a7d1
  40a762:	jb     0x40a764
  40a764:	add    BYTE PTR [rax],al
  40a766:	add    BYTE PTR [rax],al
  40a768:	pop    rdi
  40a769:	ins    DWORD PTR es:[rdi],dx
  40a76a:	(bad)  
  40a76b:	je     0x40a7d5
  40a76d:	gs jb  0x40a7e2
  40a770:	sub    BYTE PTR [rcx],ch
  40a772:	cmp    ah,BYTE PTR [rax]
  40a774:	and    eax,0x6e692073
  40a779:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765cff2
  40a77f:	sub    al,0x20
  40a781:	and    eax,0x20202967
  40a786:	sub    BYTE PTR [rdx+0x65],dh
  40a789:	je     0x40a801
  40a78b:	(bad)  
  40a78c:	ins    BYTE PTR es:[rdi],dx
  40a78d:	cmp    eax,0xa296725
  40a792:	add    BYTE PTR [rax],al
  40a794:	pushf  
  40a795:	lods   eax,DWORD PTR ds:[rsi]
  40a796:	(bad)  
  40a797:	(bad)  
  40a798:	(bad)  [rdi+rdi*8-0x52b301]
  40a79f:	call   FWORD PTR [rbp+rbp*4-0x1]
  40a7a3:	jmp    FWORD PTR [rbp+rbp*4-0x1]
  40a7a7:	(bad)  
  40a7a8:	jl     0x40a757
  40a7aa:	(bad)  
  40a7ab:	dec    DWORD PTR [rbp+rbp*4+0x694dffff]
  40a7b2:	outs   dx,BYTE PTR ds:[rsi]
  40a7b3:	addr32 ja 0x40a7e3
  40a7b6:	ja     0x40a7ee
  40a7b8:	xor    al,0x20
  40a7ba:	jb     0x40a831
  40a7bc:	outs   dx,BYTE PTR ds:[rsi]
  40a7bd:	je     0x40a828
  40a7bf:	ins    DWORD PTR es:[rdi],dx
  40a7c0:	and    BYTE PTR gs:[rsi+0x61],ah
  40a7c4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40a7cc:	add    BYTE PTR [rax],al
  40a7ce:	add    BYTE PTR [rax],al
  40a7d0:	rex.B
  40a7d1:	fs fs jb 0x40a83a
  40a7d5:	jae    0x40a84a
  40a7d7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8c84d
  40a7dd:	jae    0x40a7ff
  40a7df:	outs   dx,BYTE PTR ds:[rsi]
  40a7e0:	outs   dx,DWORD PTR ds:[rsi]
  40a7e1:	and    BYTE PTR [rcx+0x6d],ch
  40a7e4:	(bad)  
  40a7e5:	addr32 gs sub eax,0x74636573
  40a7ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40a7f3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40a7fa:	jne    0x40a861
  40a7fc:	jb     0x40a877
  40a7fe:	and    BYTE PTR [rsi+0x61],ah
  40a801:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40a809:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2c873
  40a80f:	je     0x40a876
  40a811:	jae    0x40a833
  40a813:	(bad)  
  40a814:	je     0x40a836
  40a816:	(bad)  
  40a817:	fs fs jb 0x40a880
  40a81b:	jae    0x40a890
  40a81d:	and    BYTE PTR [rip+0x70],ah        # 0x40a893
  40a823:	add    BYTE PTR [rax],al
  40a825:	add    BYTE PTR [rax],al
  40a827:	add    BYTE PTR [rax],ah
  40a829:	and    BYTE PTR [rsi+0x69],dl
  40a82c:	jb     0x40a8a2
  40a82e:	jne    0x40a891
  40a830:	ins    BYTE PTR es:[rdi],dx
  40a831:	push   rax
  40a832:	jb     0x40a8a3
  40a834:	je     0x40a89b
  40a836:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40a83a:	(bad)  
  40a83b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40a843:	push   0x646f6320
  40a848:	and    BYTE PTR gs:[rax],dh
  40a84b:	js     0x40a872
  40a84d:	js     0x40a84f
  40a84f:	add    BYTE PTR [rax],ah
  40a851:	and    BYTE PTR [rbp+0x6e],dl
  40a854:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40a858:	outs   dx,BYTE PTR ds:[rsi]
  40a859:	and    BYTE PTR [rax+0x73],dh
  40a85c:	gs jne 0x40a8c3
  40a85f:	outs   dx,DWORD PTR ds:[rsi]
  40a860:	and    BYTE PTR [rdx+0x65],dh
  40a863:	ins    BYTE PTR es:[rdi],dx
  40a864:	outs   dx,DWORD PTR ds:[rsi]
  40a865:	movsxd esp,DWORD PTR [rcx+0x74]
  40a868:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40a86f:	je     0x40a8e0
  40a871:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40a874:	and    BYTE PTR [rsi+0x65],dh
  40a877:	jb     0x40a8ec
  40a879:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40a880:	or     al,BYTE PTR [rax]
  40a882:	add    BYTE PTR [rax],al
  40a884:	add    BYTE PTR [rax],al
  40a886:	add    BYTE PTR [rax],al
  40a888:	and    BYTE PTR [rax],ah
  40a88a:	push   rbp
  40a88b:	outs   dx,BYTE PTR ds:[rsi]
  40a88c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40a890:	outs   dx,BYTE PTR ds:[rsi]
  40a891:	and    BYTE PTR [rax+0x73],dh
  40a894:	gs jne 0x40a8fb
  40a897:	outs   dx,DWORD PTR ds:[rsi]
  40a898:	and    BYTE PTR [rdx+0x65],dh
  40a89b:	ins    BYTE PTR es:[rdi],dx
  40a89c:	outs   dx,DWORD PTR ds:[rsi]
  40a89d:	movsxd esp,DWORD PTR [rcx+0x74]
  40a8a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40a8a7:	and    BYTE PTR [rbx+0x69],dh
  40a8aa:	jp     0x40a911
  40a8ac:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ad716
	...
  40a8be:	add    BYTE PTR [rax],al
  40a8c0:	cs jo  0x40a927
  40a8c3:	(bad)  
  40a8c4:	je     0x40a927
	...
  40a8ce:	add    BYTE PTR [rax],al
  40a8d0:	xor    BYTE PTR [rcx+0x40],al
	...
  40a8de:	add    BYTE PTR [rax],al
  40a8e0:	rex add DWORD PTR [rax+0x0],0x0
	...
  40a8f0:	(bad)  
  40a8f1:	jne    0x40a933
	...
  40a8ff:	add    BYTE PTR [rax-0x52],ah
  40a902:	add    BYTE PTR [rax],al
	...
  40a90d:	add    BYTE PTR [rax],al
  40a90f:	add    BYTE PTR [rax-0x52],ah
  40a912:	add    BYTE PTR [rax],al
	...
  40a91d:	add    BYTE PTR [rax],al
  40a91f:	add    BYTE PTR [rax-0x5a],ah
  40a922:	add    BYTE PTR [rax],al
	...
  40a931:	add    BYTE PTR [rax+0x0],al
	...
  40a940:	or     al,0xea
  40a942:	add    BYTE PTR [rax],al
	...
  40a94d:	add    BYTE PTR [rax],al
  40a94f:	add    BYTE PTR [rdx+rbp*8],dh
  40a952:	add    BYTE PTR [rax],al
	...
  40a95d:	add    BYTE PTR [rax],al
  40a95f:	add    BYTE PTR [rdx+rbp*8+0x40],cl
	...
  40a96f:	add    BYTE PTR [rdx+rbp*8+0x40],ah
	...
  40a97f:	add    al,al
  40a981:	(bad)  
  40a982:	add    BYTE PTR [rax],al
	...
  40a98d:	add    BYTE PTR [rax],al
  40a98f:	add    BYTE PTR [rax],ch
  40a991:	fiadd  DWORD PTR [rax+0x0]
	...
  40a9a0:	and    dl,bl
  40a9a2:	add    BYTE PTR [rax],al
	...
  40a9ad:	add    BYTE PTR [rax],al
  40a9af:	add    BYTE PTR [rax],dl
  40a9b1:	fiadd  DWORD PTR [rax+0x0]
	...
  40a9c0:	sbb    dl,bl
  40a9c2:	add    BYTE PTR [rax],al
	...
  40a9d1:	add    BYTE PTR [rcx+0x0],al
	...
  40a9e0:	adc    BYTE PTR [rax],al
  40a9e2:	add    BYTE PTR [r8],al
	...
  40a9ed:	add    BYTE PTR [rax],al
  40a9ef:	add    BYTE PTR [rax],bl
  40a9f1:	add    BYTE PTR [rcx+0x0],al
	...
  40aa00:	xor    BYTE PTR [rax],al
  40aa02:	add    BYTE PTR [r8],al
	...
  40aa0d:	add    BYTE PTR [rax],al
  40aa0f:	add    BYTE PTR [rax-0x30],dl
  40aa12:	add    BYTE PTR [rax],al
	...
  40aa1d:	add    BYTE PTR [rax],al
  40aa1f:	add    BYTE PTR [rax+0x40d6],dl
	...
  40aa2d:	add    BYTE PTR [rax],al
  40aa2f:	add    al,dh
  40aa31:	pop    rsp
  40aa32:	add    BYTE PTR [rax],al
	...
  40aa3d:	add    BYTE PTR [rax],al
  40aa3f:	add    BYTE PTR [rax+0x54],al
  40aa42:	add    BYTE PTR [rax],al
	...
  40aa4d:	add    BYTE PTR [rax],al
  40aa4f:	add    BYTE PTR [rax-0x2a],al
  40aa52:	add    BYTE PTR [rax],al
	...
  40aa5d:	add    BYTE PTR [rax],al
  40aa5f:	add    BYTE PTR [rax],bl
  40aa61:	rex.WRXB
  40aa62:	add    BYTE PTR [rax],al
	...
  40aa6d:	add    BYTE PTR [rax],al
  40aa6f:	add    BYTE PTR [rax+0x404d],al
	...
  40aa7d:	add    BYTE PTR [rax],al
  40aa7f:	add    BYTE PTR [rax+0x4d],ch
  40aa82:	add    BYTE PTR [rax],al
	...
  40aa8d:	add    BYTE PTR [rax],al
  40aa8f:	add    BYTE PTR [rax-0x2a],dh
  40aa92:	add    BYTE PTR [rax],al
	...
  40aa9d:	add    BYTE PTR [rax],al
  40aa9f:	add    BYTE PTR [rax-0x30],ah
  40aaa2:	add    BYTE PTR [rax],al
	...
  40aaad:	add    BYTE PTR [rax],al
  40aaaf:	add    BYTE PTR [rax-0x2a],bl
  40aab2:	add    BYTE PTR [rax],al
	...
  40aabd:	add    BYTE PTR [rax],al
  40aabf:	add    BYTE PTR [rsi+rdx*8+0x40],dl
	...
  40aacf:	add    BYTE PTR [rax-0x2a],dl
  40aad2:	add    BYTE PTR [rax],al
	...
  40aadd:	add    BYTE PTR [rax],al
  40aadf:	add    BYTE PTR [rdi+0x43],al
  40aae2:	rex.XB cmp spl,BYTE PTR [r8]
  40aae5:	sub    BYTE PTR [rdi+0x4e],al
  40aae8:	push   rbp
  40aae9:	sub    DWORD PTR [rax],esp
  40aaeb:	xor    al,0x2e
  40aaed:	cmp    DWORD PTR [rsi],ebp
  40aaef:	xor    al,0x0
	...
  40aafd:	add    BYTE PTR [rax],al
  40aaff:	add    BYTE PTR [rdi+0x43],al
  40ab02:	rex.XB cmp spl,BYTE PTR [r8]
  40ab05:	sub    BYTE PTR [rdi+0x4e],al
  40ab08:	push   rbp
  40ab09:	sub    DWORD PTR [rax],esp
  40ab0b:	xor    al,0x2e
  40ab0d:	cmp    DWORD PTR [rsi],ebp
  40ab0f:	xor    al,0x0
	...
  40ab1d:	add    BYTE PTR [rax],al
  40ab1f:	add    BYTE PTR [rdi+0x43],al
  40ab22:	rex.XB cmp spl,BYTE PTR [r8]
  40ab25:	sub    BYTE PTR [rdi+0x4e],al
  40ab28:	push   rbp
  40ab29:	sub    DWORD PTR [rax],esp
  40ab2b:	xor    al,0x2e
  40ab2d:	cmp    DWORD PTR [rsi],ebp
  40ab2f:	xor    al,0x0
	...
  40ab3d:	add    BYTE PTR [rax],al
  40ab3f:	add    BYTE PTR [rdi+0x43],al
  40ab42:	rex.XB cmp spl,BYTE PTR [r8]
  40ab45:	sub    BYTE PTR [rdi+0x4e],al
  40ab48:	push   rbp
  40ab49:	sub    DWORD PTR [rax],esp
  40ab4b:	xor    al,0x2e
  40ab4d:	cmp    DWORD PTR [rsi],ebp
  40ab4f:	xor    al,0x0
	...
  40ab5d:	add    BYTE PTR [rax],al
  40ab5f:	add    BYTE PTR [rdi+0x43],al
  40ab62:	rex.XB cmp spl,BYTE PTR [r8]
  40ab65:	sub    BYTE PTR [rdi+0x4e],al
  40ab68:	push   rbp
  40ab69:	sub    DWORD PTR [rax],esp
  40ab6b:	xor    al,0x2e
  40ab6d:	cmp    DWORD PTR [rsi],ebp
  40ab6f:	xor    al,0x0
	...
  40ab7d:	add    BYTE PTR [rax],al
  40ab7f:	add    BYTE PTR [rdi+0x43],al
  40ab82:	rex.XB cmp spl,BYTE PTR [r8]
  40ab85:	sub    BYTE PTR [rdi+0x4e],al
  40ab88:	push   rbp
  40ab89:	sub    DWORD PTR [rax],esp
  40ab8b:	xor    al,0x2e
  40ab8d:	cmp    DWORD PTR [rsi],ebp
  40ab8f:	xor    al,0x0
	...
  40ab9d:	add    BYTE PTR [rax],al
  40ab9f:	add    BYTE PTR [rdi+0x43],al
  40aba2:	rex.XB cmp spl,BYTE PTR [r8]
  40aba5:	sub    BYTE PTR [rdi+0x4e],al
  40aba8:	push   rbp
  40aba9:	sub    DWORD PTR [rax],esp
  40abab:	xor    al,0x2e
  40abad:	cmp    DWORD PTR [rsi],ebp
  40abaf:	xor    al,0x0
	...
  40abbd:	add    BYTE PTR [rax],al
  40abbf:	add    BYTE PTR [rdi+0x43],al
  40abc2:	rex.XB cmp spl,BYTE PTR [r8]
  40abc5:	sub    BYTE PTR [rdi+0x4e],al
  40abc8:	push   rbp
  40abc9:	sub    DWORD PTR [rax],esp
  40abcb:	xor    al,0x2e
  40abcd:	cmp    DWORD PTR [rsi],ebp
  40abcf:	xor    al,0x0
	...
  40abdd:	add    BYTE PTR [rax],al
  40abdf:	add    BYTE PTR [rdi+0x43],al
  40abe2:	rex.XB cmp spl,BYTE PTR [r8]
  40abe5:	sub    BYTE PTR [rdi+0x4e],al
  40abe8:	push   rbp
  40abe9:	sub    DWORD PTR [rax],esp
  40abeb:	xor    al,0x2e
  40abed:	cmp    DWORD PTR [rsi],ebp
  40abef:	xor    al,0x0
	...
  40abfd:	add    BYTE PTR [rax],al
  40abff:	add    BYTE PTR [rdi+0x43],al
  40ac02:	rex.XB cmp spl,BYTE PTR [r8]
  40ac05:	sub    BYTE PTR [rdi+0x4e],al
  40ac08:	push   rbp
  40ac09:	sub    DWORD PTR [rax],esp
  40ac0b:	xor    al,0x2e
  40ac0d:	cmp    DWORD PTR [rsi],ebp
  40ac0f:	xor    al,0x0
	...
  40ac1d:	add    BYTE PTR [rax],al
  40ac1f:	add    BYTE PTR [rdi+0x43],al
  40ac22:	rex.XB cmp spl,BYTE PTR [r8]
  40ac25:	sub    BYTE PTR [rdi+0x4e],al
  40ac28:	push   rbp
  40ac29:	sub    DWORD PTR [rax],esp
  40ac2b:	xor    al,0x2e
  40ac2d:	cmp    DWORD PTR [rsi],ebp
  40ac2f:	xor    al,0x0
	...
  40ac3d:	add    BYTE PTR [rax],al
  40ac3f:	add    BYTE PTR [rdi+0x43],al
  40ac42:	rex.XB cmp spl,BYTE PTR [r8]
  40ac45:	sub    BYTE PTR [rdi+0x4e],al
  40ac48:	push   rbp
  40ac49:	sub    DWORD PTR [rax],esp
  40ac4b:	xor    al,0x2e
  40ac4d:	cmp    DWORD PTR [rsi],ebp
  40ac4f:	xor    al,0x0
	...
  40ac5d:	add    BYTE PTR [rax],al
  40ac5f:	add    BYTE PTR [rdi+0x43],al
  40ac62:	rex.XB cmp spl,BYTE PTR [r8]
  40ac65:	sub    BYTE PTR [rdi+0x4e],al
  40ac68:	push   rbp
  40ac69:	sub    DWORD PTR [rax],esp
  40ac6b:	xor    al,0x2e
  40ac6d:	cmp    DWORD PTR [rsi],ebp
  40ac6f:	xor    al,0x0
	...
  40ac7d:	add    BYTE PTR [rax],al
  40ac7f:	add    BYTE PTR [rdi+0x43],al
  40ac82:	rex.XB cmp spl,BYTE PTR [r8]
  40ac85:	sub    BYTE PTR [rdi+0x4e],al
  40ac88:	push   rbp
  40ac89:	sub    DWORD PTR [rax],esp
  40ac8b:	xor    al,0x2e
  40ac8d:	cmp    DWORD PTR [rsi],ebp
  40ac8f:	xor    al,0x0
	...
  40ac9d:	add    BYTE PTR [rax],al
  40ac9f:	add    BYTE PTR [rdi+0x43],al
  40aca2:	rex.XB cmp spl,BYTE PTR [r8]
  40aca5:	sub    BYTE PTR [rdi+0x4e],al
  40aca8:	push   rbp
  40aca9:	sub    DWORD PTR [rax],esp
  40acab:	xor    al,0x2e
  40acad:	cmp    DWORD PTR [rsi],ebp
  40acaf:	xor    al,0x0
	...
  40acbd:	add    BYTE PTR [rax],al
  40acbf:	add    BYTE PTR [rdi+0x43],al
  40acc2:	rex.XB cmp spl,BYTE PTR [r8]
  40acc5:	sub    BYTE PTR [rdi+0x4e],al
  40acc8:	push   rbp
  40acc9:	sub    DWORD PTR [rax],esp
  40accb:	xor    al,0x2e
  40accd:	cmp    DWORD PTR [rsi],ebp
  40accf:	xor    al,0x0
	...
  40acdd:	add    BYTE PTR [rax],al
  40acdf:	add    BYTE PTR [rdi+0x43],al
  40ace2:	rex.XB cmp spl,BYTE PTR [r8]
  40ace5:	sub    BYTE PTR [rdi+0x4e],al
  40ace8:	push   rbp
  40ace9:	sub    DWORD PTR [rax],esp
  40aceb:	xor    al,0x2e
  40aced:	cmp    DWORD PTR [rsi],ebp
  40acef:	xor    al,0x0
	...
  40acfd:	add    BYTE PTR [rax],al
  40acff:	add    BYTE PTR [rdi+0x43],al
  40ad02:	rex.XB cmp spl,BYTE PTR [r8]
  40ad05:	sub    BYTE PTR [rdi+0x4e],al
  40ad08:	push   rbp
  40ad09:	sub    DWORD PTR [rax],esp
  40ad0b:	xor    al,0x2e
  40ad0d:	cmp    DWORD PTR [rsi],ebp
  40ad0f:	xor    al,0x0
	...
  40ad1d:	add    BYTE PTR [rax],al
  40ad1f:	add    BYTE PTR [rdi+0x43],al
  40ad22:	rex.XB cmp spl,BYTE PTR [r8]
  40ad25:	sub    BYTE PTR [rdi+0x4e],al
  40ad28:	push   rbp
  40ad29:	sub    DWORD PTR [rax],esp
  40ad2b:	xor    al,0x2e
  40ad2d:	cmp    DWORD PTR [rsi],ebp
  40ad2f:	xor    al,0x0
	...
  40ad3d:	add    BYTE PTR [rax],al
  40ad3f:	add    BYTE PTR [rdi+0x43],al
  40ad42:	rex.XB cmp spl,BYTE PTR [r8]
  40ad45:	sub    BYTE PTR [rdi+0x4e],al
  40ad48:	push   rbp
  40ad49:	sub    DWORD PTR [rax],esp
  40ad4b:	xor    al,0x2e
  40ad4d:	cmp    DWORD PTR [rsi],ebp
  40ad4f:	xor    al,0x0
	...
  40ad5d:	add    BYTE PTR [rax],al
  40ad5f:	add    BYTE PTR [rdi+0x43],al
  40ad62:	rex.XB cmp spl,BYTE PTR [r8]
  40ad65:	sub    BYTE PTR [rdi+0x4e],al
  40ad68:	push   rbp
  40ad69:	sub    DWORD PTR [rax],esp
  40ad6b:	xor    al,0x2e
  40ad6d:	cmp    DWORD PTR [rsi],ebp
  40ad6f:	xor    al,0x0
	...
  40ad7d:	add    BYTE PTR [rax],al
  40ad7f:	add    BYTE PTR [rdi+0x43],al
  40ad82:	rex.XB cmp spl,BYTE PTR [r8]
  40ad85:	sub    BYTE PTR [rdi+0x4e],al
  40ad88:	push   rbp
  40ad89:	sub    DWORD PTR [rax],esp
  40ad8b:	xor    al,0x2e
  40ad8d:	cmp    DWORD PTR [rsi],ebp
  40ad8f:	xor    al,0x0
	...
  40ad9d:	add    BYTE PTR [rax],al
  40ad9f:	add    BYTE PTR [rdi+0x43],al
  40ada2:	rex.XB cmp spl,BYTE PTR [r8]
  40ada5:	sub    BYTE PTR [rdi+0x4e],al
  40ada8:	push   rbp
  40ada9:	sub    DWORD PTR [rax],esp
  40adab:	xor    al,0x2e
  40adad:	cmp    DWORD PTR [rsi],ebp
  40adaf:	xor    al,0x0
	...
  40adbd:	add    BYTE PTR [rax],al
  40adbf:	add    BYTE PTR [rdi+0x43],al
  40adc2:	rex.XB cmp spl,BYTE PTR [r8]
  40adc5:	sub    BYTE PTR [rdi+0x4e],al
  40adc8:	push   rbp
  40adc9:	sub    DWORD PTR [rax],esp
  40adcb:	xor    al,0x2e
  40adcd:	cmp    DWORD PTR [rsi],ebp
  40adcf:	xor    al,0x0
	...
  40addd:	add    BYTE PTR [rax],al
  40addf:	add    BYTE PTR [rdi+0x43],al
  40ade2:	rex.XB cmp spl,BYTE PTR [r8]
  40ade5:	sub    BYTE PTR [rdi+0x4e],al
  40ade8:	push   rbp
  40ade9:	sub    DWORD PTR [rax],esp
  40adeb:	xor    al,0x2e
  40aded:	cmp    DWORD PTR [rsi],ebp
  40adef:	xor    al,0x0
	...
  40adfd:	add    BYTE PTR [rax],al
  40adff:	add    BYTE PTR [rdi+0x43],al
  40ae02:	rex.XB cmp spl,BYTE PTR [r8]
  40ae05:	sub    BYTE PTR [rdi+0x4e],al
  40ae08:	push   rbp
  40ae09:	sub    DWORD PTR [rax],esp
  40ae0b:	xor    al,0x2e
  40ae0d:	cmp    DWORD PTR [rsi],ebp
  40ae0f:	xor    al,0x0
	...
  40ae1d:	add    BYTE PTR [rax],al
  40ae1f:	add    BYTE PTR [rdi+0x43],al
  40ae22:	rex.XB cmp spl,BYTE PTR [r8]
  40ae25:	sub    BYTE PTR [rdi+0x4e],al
  40ae28:	push   rbp
  40ae29:	sub    DWORD PTR [rax],esp
  40ae2b:	xor    al,0x2e
  40ae2d:	cmp    DWORD PTR [rsi],ebp
  40ae2f:	xor    al,0x0
	...
  40ae3d:	add    BYTE PTR [rax],al
  40ae3f:	add    BYTE PTR [rdi+0x43],al
  40ae42:	rex.XB cmp spl,BYTE PTR [r8]
  40ae45:	sub    BYTE PTR [rdi+0x4e],al
  40ae48:	push   rbp
  40ae49:	sub    DWORD PTR [rax],esp
  40ae4b:	xor    al,0x2e
  40ae4d:	cmp    DWORD PTR [rsi],ebp
  40ae4f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040b000 <.pdata>:
  40b000:	add    BYTE PTR [rax],dl
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rax],edx
  40b006:	add    BYTE PTR [rax],al
  40b008:	add    al,al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	adc    BYTE PTR [rax],dl
  40b00e:	add    BYTE PTR [rax],al
  40b010:	push   rcx
  40b011:	adc    DWORD PTR [rax],eax
  40b013:	add    BYTE PTR [rax+rax*8],al
  40b016:	add    BYTE PTR [rax],al
  40b018:	(bad)  
  40b019:	adc    DWORD PTR [rax],eax
  40b01b:	add    BYTE PTR [rsi+0xc000011],ch
  40b021:	rol    BYTE PTR [rax],0x0
  40b024:	mov    al,0x11
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	adc    al,0x0
  40b02b:	add    BYTE PTR [rax+rax*8],dl
  40b02e:	add    BYTE PTR [rax],al
  40b030:	rcl    BYTE PTR [rax+rax*1],1
  40b033:	add    dl,dh
  40b035:	adc    al,0x0
  40b037:	add    BYTE PTR [rax],ch
  40b039:	rol    BYTE PTR [rax],0x0
  40b03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562b042
  40b042:	add    BYTE PTR [rax],al
  40b044:	rex.W rol BYTE PTR [rax],0x0
  40b048:	xor    BYTE PTR [rip+0x15750000],dl        # 0x15b5b04e
  40b04e:	add    BYTE PTR [rax],al
  40b050:	push   0xffffffff800000c0
  40b055:	adc    eax,0x15be0000
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	ins    BYTE PTR es:[rdi],dx
  40b05d:	rol    BYTE PTR [rax],0x0
  40b060:	rcl    BYTE PTR [rip+0x16430000],0x0        # 0x1683b067
  40b067:	add    BYTE PTR [rax+rax*8+0x0],dh
  40b06b:	add    BYTE PTR [rax+0x16],dl
  40b06e:	add    BYTE PTR [rax],al
  40b070:	ret    0x1a
  40b073:	add    BYTE PTR [rax+rax*8+0x1ad00000],al
  40b07a:	add    BYTE PTR [rax],al
  40b07c:	push   rdi
  40b07d:	sbb    eax,DWORD PTR [rax]
  40b07f:	add    BYTE PTR [rax+rax*8+0x1b600000],bl
  40b086:	add    BYTE PTR [rax],al
  40b088:	mov    bl,0x1b
  40b08a:	add    BYTE PTR [rax],al
  40b08c:	lods   al,BYTE PTR ds:[rsi]
  40b08d:	rol    BYTE PTR [rax],0x0
  40b090:	rcr    BYTE PTR [rbx],0x0
  40b093:	add    dl,ch
  40b095:	sbb    eax,DWORD PTR [rax]
  40b097:	add    BYTE PTR [rax+rax*8+0x1bf00000],dh
  40b09e:	add    BYTE PTR [rax],al
  40b0a0:	rex.XB sbb al,0x0
  40b0a3:	add    al,al
  40b0a5:	rol    BYTE PTR [rax],0x0
  40b0a8:	push   rax
  40b0a9:	sbb    al,0x0
  40b0ab:	add    BYTE PTR [rdi-0x37ffffe4],ah
  40b0b1:	rol    BYTE PTR [rax],0x0
  40b0b4:	mov    al,0x1c
  40b0b6:	add    BYTE PTR [rax],al
  40b0b8:	jp     0x40b0d7
  40b0ba:	add    BYTE PTR [rax],al
  40b0bc:	(bad)  
  40b0bd:	rol    BYTE PTR [rax],0x0
  40b0c0:	sbb    BYTE PTR [rip+0x1f8a0000],0x0        # 0x1fcab0c7
  40b0c7:	add    ah,ah
  40b0c9:	rol    BYTE PTR [rax],0x0
  40b0cc:	nop
  40b0cd:	(bad)  
  40b0ce:	add    BYTE PTR [rax],al
  40b0d0:	fstp   QWORD PTR [rdi]
  40b0d2:	add    BYTE PTR [rax],al
  40b0d4:	clc    
  40b0d5:	rol    BYTE PTR [rax],0x0
  40b0d8:	loopne 0x40b0f9
  40b0da:	add    BYTE PTR [rax],al
  40b0dc:	or     BYTE PTR [rax],ah
  40b0de:	add    BYTE PTR [rax],al
  40b0e0:	add    al,0xc1
  40b0e2:	add    BYTE PTR [rax],al
  40b0e4:	adc    BYTE PTR [rax],ah
  40b0e6:	add    BYTE PTR [rax],al
  40b0e8:	(bad)  
  40b0e9:	and    BYTE PTR [rax],al
  40b0eb:	add    BYTE PTR [rcx+rax*8],cl
  40b0ee:	add    BYTE PTR [rax],al
  40b0f0:	and    BYTE PTR [rax],al
  40b0f3:	add    al,cl
  40b0f5:	and    DWORD PTR [rax],eax
  40b0f7:	add    BYTE PTR [rcx+rax*8],dl
  40b0fa:	add    BYTE PTR [rax],al
  40b0fc:	shl    BYTE PTR [rcx],1
  40b0fe:	add    BYTE PTR [rax],al
  40b100:	and    al,BYTE PTR [r8]
  40b103:	add    BYTE PTR [rcx+rax*8],ah
  40b106:	add    BYTE PTR [rax],al
  40b108:	push   rax
  40b109:	and    al,BYTE PTR [rax]
  40b10b:	add    ch,dh
  40b10d:	and    al,BYTE PTR [rax]
  40b10f:	add    BYTE PTR [rcx+rax*8],dh
  40b112:	add    BYTE PTR [rax],al
  40b114:	add    BYTE PTR [rbx],ah
  40b116:	add    BYTE PTR [rax],al
  40b118:	pop    rcx
  40b119:	and    eax,DWORD PTR [rax]
  40b11b:	add    BYTE PTR [rcx+rax*8+0x0],al
  40b11f:	add    BYTE PTR [rax+0x23],ah
  40b122:	add    BYTE PTR [rax],al
  40b124:	rex.WRB and al,0x0
  40b127:	add    BYTE PTR [rax-0x3f],dl
  40b12a:	add    BYTE PTR [rax],al
  40b12c:	push   rax
  40b12d:	and    al,0x0
  40b12f:	add    ch,ch
  40b131:	and    al,0x0
  40b133:	add    BYTE PTR [rax-0x3f],ah
  40b136:	add    BYTE PTR [rax],al
  40b138:	lock and al,0x0
  40b13b:	add    cl,ch
  40b13d:	and    eax,0xc16c0000
  40b142:	add    BYTE PTR [rax],al
  40b144:	lock and eax,0x267f0000
  40b14a:	add    BYTE PTR [rax],al
  40b14c:	add    cl,0x0
  40b14f:	add    BYTE PTR [rax-0x52ffffda],al
  40b155:	add    BYTE PTR es:[rax],al
  40b158:	mov    cl,al
  40b15a:	add    BYTE PTR [rax],al
  40b15c:	mov    al,0x26
  40b15e:	add    BYTE PTR [rax],al
  40b160:	nop
  40b161:	(bad)  
  40b162:	add    BYTE PTR [rax],al
  40b164:	nop
  40b165:	rol    DWORD PTR [rax],0x0
  40b168:	nop
  40b169:	(bad)  
  40b16a:	add    BYTE PTR [rax],al
  40b16c:	cmp    ebp,DWORD PTR [rax]
  40b16e:	add    BYTE PTR [rax],al
  40b170:	movabs al,ds:0x25000028400000c1
  40b179:	sub    DWORD PTR [rax],eax
  40b17b:	add    BYTE PTR [rcx+rax*8+0x29300000],ch
  40b182:	add    BYTE PTR [rax],al
  40b184:	rex.WB sub al,BYTE PTR [r8]
  40b187:	add    BYTE PTR [rcx+rax*8+0x2a500000],bh
  40b18e:	add    BYTE PTR [rax],al
  40b190:	leave  
  40b191:	sub    al,BYTE PTR [rax]
  40b193:	add    al,cl
  40b195:	rol    DWORD PTR [rax],0x0
  40b198:	shr    BYTE PTR [rdx],1
  40b19a:	add    BYTE PTR [rax],al
  40b19c:	sub    DWORD PTR [rip+0xffffffffc1d40000],ebp        # 0xffffffffc214b1a2
  40b1a2:	add    BYTE PTR [rax],al
  40b1a4:	xor    BYTE PTR [rip+0x2d970000],ch        # 0x2dd7b1aa
  40b1aa:	add    BYTE PTR [rax],al
  40b1ac:	in     al,0xc1
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	movabs al,ds:0xf00000492600002d
  40b1b9:	rol    DWORD PTR [rax],0x0
  40b1bc:	xor    BYTE PTR [rcx+0x0],cl
  40b1bf:	add    BYTE PTR [rax],bl
  40b1c1:	rex.WR add BYTE PTR [rax],r8b
  40b1c4:	or     dl,al
  40b1c6:	add    BYTE PTR [rax],al
  40b1c8:	movabs al,ds:0x340000504700004f
  40b1d1:	ret    0x0
  40b1d4:	push   rax
  40b1d5:	push   rax
  40b1d6:	add    BYTE PTR [rax],al
  40b1d8:	imul   edx,DWORD PTR [rax+0x0],0xc23c00
  40b1df:	add    BYTE PTR [rax+0x50],dh
  40b1e2:	add    BYTE PTR [rax],al
  40b1e4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b1e5:	push   rax
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	rex.R ret 0x0
  40b1ec:	mov    al,0x50
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	add    eax,0x4c000051
  40b1f5:	ret    0x0
  40b1f8:	adc    BYTE PTR [rcx+0x0],dl
  40b1fb:	add    BYTE PTR [rcx+rdx*2],ch
  40b1fe:	add    BYTE PTR [rax],al
  40b200:	pop    rax
  40b201:	ret    0x0
  40b204:	xor    BYTE PTR [rcx+0x0],dl
  40b207:	add    BYTE PTR [rdx],bh
  40b209:	push   rcx
  40b20a:	add    BYTE PTR [rax],al
  40b20c:	pop    rsp
  40b20d:	ret    0x0
  40b210:	rex push rcx
  40b212:	add    BYTE PTR [rax],al
  40b214:	rex.XB push r9
  40b216:	add    BYTE PTR [rax],al
  40b218:	(bad)  
  40b219:	ret    0x0
  40b21c:	push   rax
  40b21d:	push   rcx
  40b21e:	add    BYTE PTR [rax],al
  40b220:	es push rdx
  40b222:	add    BYTE PTR [rax],al
  40b224:	fs ret 0x0
  40b228:	xor    BYTE PTR [rdx+0x0],dl
  40b22b:	add    BYTE PTR [rbx],ch
  40b22d:	push   rbx
  40b22e:	add    BYTE PTR [rax],al
  40b230:	je     0x40b1f4
  40b232:	add    BYTE PTR [rax],al
  40b234:	xor    BYTE PTR [rbx+0x0],dl
  40b237:	add    BYTE PTR [rdi+0x53],bl
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	test   dl,al
  40b23e:	add    BYTE PTR [rax],al
  40b240:	(bad)  
  40b241:	push   rbx
  40b242:	add    BYTE PTR [rax],al
  40b244:	leave  
  40b245:	push   rbx
  40b246:	add    BYTE PTR [rax],al
  40b248:	mov    edx,es
  40b24a:	add    BYTE PTR [rax],al
  40b24c:	rcl    BYTE PTR [rbx+0x0],1
  40b24f:	add    bl,dl
  40b251:	push   rbx
  40b252:	add    BYTE PTR [rax],al
  40b254:	cwde   
  40b255:	ret    0x0
  40b258:	loopne 0x40b2ad
  40b25a:	add    BYTE PTR [rax],al
  40b25c:	and    DWORD PTR [rax+rax*1+0x0],edx
  40b260:	pushf  
  40b261:	ret    0x0
  40b264:	xor    BYTE PTR [rax+rax*1+0x0],dl
  40b268:	cmp    al,0x54
  40b26a:	add    BYTE PTR [rax],al
  40b26c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b26d:	ret    0x0
  40b270:	rex push rsp
  40b272:	add    BYTE PTR [rax],al
  40b274:	cmp    al,0x55
  40b276:	add    BYTE PTR [rax],al
  40b278:	test   al,0xc2
  40b27a:	add    BYTE PTR [rax],al
  40b27c:	rex push rbp
  40b27e:	add    BYTE PTR [rax],al
  40b280:	rex.XB push r13
  40b282:	add    BYTE PTR [rax],al
  40b284:	rol    dl,0x0
  40b287:	add    BYTE PTR [rax+0x55],dl
  40b28a:	add    BYTE PTR [rax],al
  40b28c:	push   rsp
  40b28d:	push   rbp
  40b28e:	add    BYTE PTR [rax],al
  40b290:	(bad)
  40b294:	(bad)  
  40b295:	push   rbp
  40b296:	add    BYTE PTR [rax],al
  40b298:	fs push rbp
  40b29a:	add    BYTE PTR [rax],al
  40b29c:	enter  0xc2,0x0
  40b2a0:	jo     0x40b2f7
  40b2a2:	add    BYTE PTR [rax],al
  40b2a4:	rcl    DWORD PTR [rbp+0x0],1
  40b2a7:	add    ah,cl
  40b2a9:	ret    0x0
  40b2ac:	loopne 0x40b303
  40b2ae:	add    BYTE PTR [rax],al
  40b2b0:	rex.X push rdi
  40b2b2:	add    BYTE PTR [rax],al
  40b2b4:	fadd   st,st(2)
  40b2b6:	add    BYTE PTR [rax],al
  40b2b8:	push   rax
  40b2b9:	push   rdi
  40b2ba:	add    BYTE PTR [rax],al
  40b2bc:	rex.WB pop r10
  40b2be:	add    BYTE PTR [rax],al
  40b2c0:	in     al,dx
  40b2c1:	ret    0x0
  40b2c4:	push   rax
  40b2c5:	pop    rdx
  40b2c6:	add    BYTE PTR [rax],al
  40b2c8:	neg    BYTE PTR [rbx+0x0]
  40b2cb:	add    BYTE PTR [rbx+rax*8],al
  40b2ce:	add    BYTE PTR [rax],al
  40b2d0:	add    BYTE PTR [rax+rax*1+0x0],bl
  40b2d4:	in     al,dx
  40b2d5:	pop    rsp
  40b2d6:	add    BYTE PTR [rax],al
  40b2d8:	or     al,0xc3
  40b2da:	add    BYTE PTR [rax],al
  40b2dc:	lock pop rsp
  40b2de:	add    BYTE PTR [rax],al
  40b2e0:	test   al,0x5e
  40b2e2:	add    BYTE PTR [rax],al
  40b2e4:	sbb    al,0xc3
  40b2e6:	add    BYTE PTR [rax],al
  40b2e8:	mov    al,0x5e
  40b2ea:	add    BYTE PTR [rax],al
  40b2ec:	sbb    eax,0x2400005f
  40b2f1:	ret    
  40b2f2:	add    BYTE PTR [rax],al
  40b2f4:	and    BYTE PTR [rdi+0x0],bl
  40b2f7:	add    BYTE PTR [rdi+0x3400005f],bl
  40b2fd:	ret    
  40b2fe:	add    BYTE PTR [rax],al
  40b300:	movabs al,ds:0x400000603f00005f
  40b309:	ret    
  40b30a:	add    BYTE PTR [rax],al
  40b30c:	rex (bad) 
  40b30e:	add    BYTE PTR [rax],al
  40b310:	sbb    ah,BYTE PTR [rcx+0x0]
  40b313:	add    BYTE PTR [rax-0x3d],cl
  40b316:	add    BYTE PTR [rax],al
  40b318:	and    BYTE PTR [rcx+0x0],ah
  40b31b:	add    BYTE PTR [rdi],bh
  40b31d:	(bad)  
  40b31e:	add    BYTE PTR [rax],al
  40b320:	push   rax
  40b321:	ret    
  40b322:	add    BYTE PTR [rax],al
  40b324:	rex (bad) 
  40b326:	add    BYTE PTR [rax],al
  40b328:	push   rdx
  40b329:	(bad)  
  40b32a:	add    BYTE PTR [rax],al
  40b32c:	push   rsp
  40b32d:	ret    
  40b32e:	add    BYTE PTR [rax],al
  40b330:	(bad)  
  40b331:	(bad)  
  40b332:	add    BYTE PTR [rax],al
  40b334:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b335:	(bad)  
  40b336:	add    BYTE PTR [rax],al
  40b338:	pop    rax
  40b339:	ret    
  40b33a:	add    BYTE PTR [rax],al
  40b33c:	mov    al,0x61
  40b33e:	add    BYTE PTR [rax],al
  40b340:	rex.WRX (bad) 
  40b342:	add    BYTE PTR [rax],al
  40b344:	pop    rsp
  40b345:	ret    
  40b346:	add    BYTE PTR [rax],al
  40b348:	push   rax
  40b349:	(bad)  
  40b34a:	add    BYTE PTR [rax],al
  40b34c:	xchg   ebx,eax
  40b34d:	(bad)  
  40b34e:	add    BYTE PTR [rax],al
  40b350:	push   0xffffffffa00000c3
  40b355:	(bad)  
  40b356:	add    BYTE PTR [rax],al
  40b358:	(bad)  [rdx+0x0]
  40b35b:	add    BYTE PTR [rbx+rax*8+0x0],dh
  40b35f:	add    al,ah
  40b361:	(bad)  
  40b362:	add    BYTE PTR [rax],al
  40b364:	outs   dx,BYTE PTR ds:[rsi]
  40b365:	movsxd eax,DWORD PTR [rax]
  40b367:	add    BYTE PTR [rbx+rax*8+0x0],bh
  40b36b:	add    BYTE PTR [rax+0x63],dh
  40b36e:	add    BYTE PTR [rax],al
  40b370:	test   al,0x63
  40b372:	add    BYTE PTR [rax],al
  40b374:	mov    bl,al
  40b376:	add    BYTE PTR [rax],al
  40b378:	mov    al,0x63
  40b37a:	add    BYTE PTR [rax],al
  40b37c:	add    eax,0x94000064
  40b381:	ret    
  40b382:	add    BYTE PTR [rax],al
  40b384:	adc    BYTE PTR [rax+rax*1+0x0],ah
  40b388:	mov    esi,0xa0000064
  40b38d:	ret    
  40b38e:	add    BYTE PTR [rax],al
  40b390:	shl    BYTE PTR [rbp+0x0],1
  40b393:	add    al,bl
  40b395:	add    BYTE PTR gs:[rax],al
  40b398:	mov    al,0xc3
  40b39a:	add    BYTE PTR [rax],al
  40b39c:	loopne 0x40b403
  40b39e:	add    BYTE PTR [rax],al
  40b3a0:	jmp    0x40b407
  40b3a2:	add    BYTE PTR [rax],al
  40b3a4:	mov    ah,0xc3
  40b3a6:	add    BYTE PTR [rax],al
  40b3a8:	mov    al,0x66
  40b3aa:	add    BYTE PTR [rax],al
  40b3ac:	push   rdx
  40b3ad:	jne    0x40b3af
  40b3af:	add    BYTE PTR [rdx+rax*8],bl
	...

Disassembly of section .xdata:

000000000040c000 <.xdata>:
  40c000:	add    DWORD PTR [rax],eax
  40c002:	add    BYTE PTR [rax],al
  40c004:	add    DWORD PTR [rcx+rax*1],eax
  40c007:	add    BYTE PTR [rdx+rax*2],al
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	add    DWORD PTR [rcx+rax*1],eax
  40c00f:	add    BYTE PTR [rdx+riz*2],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	add    DWORD PTR [rdi],ecx
  40c016:	or     BYTE PTR [rax],al
  40c018:	lgdt   [rbx]
  40c01b:	add    BYTE PTR [rax],cl
  40c01d:	xor    BYTE PTR [rdi],al
  40c01f:	(bad)  
  40c020:	(bad)  
  40c021:	jo     0x40c028
  40c023:	push   rax
  40c024:	add    al,0xc0
  40c026:	add    dl,al
  40c028:	or     DWORD PTR [rcx+rax*1],eax
  40c02b:	add    BYTE PTR [rdx+rax*2],al
  40c02e:	add    BYTE PTR [rax],al
  40c030:	enter  0x65,0x0
  40c034:	add    DWORD PTR [rax],eax
  40c036:	add    BYTE PTR [rax],al
  40c038:	(bad)  
  40c039:	adc    al,0x0
  40c03b:	add    ah,ch
  40c03d:	adc    al,0x0
  40c03f:	add    al,dh
  40c041:	pop    rsp
  40c042:	add    BYTE PTR [rax],al
  40c044:	in     al,dx
  40c045:	adc    al,0x0
  40c047:	add    BYTE PTR [rcx],cl
  40c049:	add    al,0x1
  40c04b:	add    BYTE PTR [rdx+rax*2],al
  40c04e:	add    BYTE PTR [rax],al
  40c050:	enter  0x65,0x0
  40c054:	add    DWORD PTR [rax],eax
  40c056:	add    BYTE PTR [rax],al
  40c058:	add    al,0x15
  40c05a:	add    BYTE PTR [rax],al
  40c05c:	sbb    al,0x15
  40c05e:	add    BYTE PTR [rax],al
  40c060:	lock pop rsp
  40c062:	add    BYTE PTR [rax],al
  40c064:	sbb    al,0x15
  40c066:	add    BYTE PTR [rax],al
  40c068:	add    DWORD PTR [rax],eax
  40c06a:	add    BYTE PTR [rax],al
  40c06c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c074
  40c072:	add    DWORD PTR [rax],esi
  40c074:	add    DWORD PTR [rdx],ecx
  40c076:	(bad)  
  40c077:	add    BYTE PTR [rdx],cl
  40c079:	xor    al,BYTE PTR [rsi]
  40c07b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c4e1
  40c081:	push   rax
  40c082:	add    al,al
  40c084:	add    DWORD PTR [rax],edx
  40c086:	or     DWORD PTR [rax],eax
  40c088:	adc    BYTE PTR [rdx+0x600b300c],ah
  40c08e:	or     dh,BYTE PTR [rax+0x9]
  40c091:	push   rax
  40c092:	or     al,al
  40c094:	(bad)  
  40c095:	rol    BYTE PTR [rax+riz*8],1
  40c098:	add    dh,al
  40c09a:	add    BYTE PTR [rax],al
  40c09c:	add    DWORD PTR [rax],ecx
  40c09e:	add    eax,0x4420800
  40c0a3:	xor    BYTE PTR [rbx],al
  40c0a5:	(bad)  
  40c0a6:	add    dh,BYTE PTR [rax+0x1]
  40c0a9:	push   rax
  40c0aa:	add    BYTE PTR [rax],al
  40c0ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c0b4
  40c0b2:	add    DWORD PTR [rax],esi
  40c0b4:	add    DWORD PTR [rsi],eax
  40c0b6:	add    eax,DWORD PTR [rax]
  40c0b8:	(bad)  
  40c0b9:	rex.X add sil,BYTE PTR [rax]
  40c0bc:	add    DWORD PTR [rax+0x0],esp
  40c0bf:	add    BYTE PTR [rcx],al
  40c0c1:	add    eax,0x32050002
  40c0c6:	add    DWORD PTR [rax],esi
  40c0c8:	add    DWORD PTR [rdi],eax
  40c0ca:	add    al,0x0
  40c0cc:	(bad)  
  40c0cd:	xor    al,BYTE PTR [rbx]
  40c0cf:	xor    BYTE PTR [rdx],al
  40c0d1:	(bad)  
  40c0d2:	add    DWORD PTR [rax+0x1],esi
  40c0d5:	or     al,BYTE PTR [rsi]
  40c0d7:	add    BYTE PTR [rdx],cl
  40c0d9:	xor    al,BYTE PTR [rsi]
  40c0db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c541
  40c0e1:	push   rax
  40c0e2:	add    al,al
  40c0e4:	add    DWORD PTR [rdi+rax*1],ecx
  40c0e7:	add    BYTE PTR [rdx+riz*8],cl
  40c0ea:	or     BYTE PTR [rax],dh
  40c0ec:	(bad)  
  40c0ed:	(bad)  
  40c0ee:	(bad)  
  40c0ef:	jo     0x40c0f6
  40c0f1:	push   rax
  40c0f2:	add    al,0xc0
  40c0f4:	add    dl,al
  40c0f6:	add    BYTE PTR [rax],al
  40c0f8:	add    DWORD PTR [rdi],eax
  40c0fa:	add    al,0x0
  40c0fc:	(bad)  
  40c0fd:	xor    al,BYTE PTR [rbx]
  40c0ff:	xor    BYTE PTR [rdx],al
  40c101:	(bad)  
  40c102:	add    DWORD PTR [rax+0x1],esi
  40c105:	add    eax,0x32050002
  40c10a:	add    DWORD PTR [rax],esi
  40c10c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c114
  40c112:	add    DWORD PTR [rax],esi
  40c114:	add    DWORD PTR [rdx],ecx
  40c116:	(bad)  
  40c117:	add    BYTE PTR [rdx],cl
  40c119:	push   rdx
  40c11a:	(bad)  
  40c11b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c581
  40c121:	push   rax
  40c122:	add    al,al
  40c124:	add    DWORD PTR [rax],ecx
  40c126:	add    eax,0x4420800
  40c12b:	xor    BYTE PTR [rbx],al
  40c12d:	(bad)  
  40c12e:	add    dh,BYTE PTR [rax+0x1]
  40c131:	push   rax
  40c132:	add    BYTE PTR [rax],al
  40c134:	add    DWORD PTR [rax],ecx
  40c136:	add    eax,0x4e20800
  40c13b:	xor    BYTE PTR [rbx],al
  40c13d:	(bad)  
  40c13e:	add    dh,BYTE PTR [rax+0x1]
  40c141:	push   rax
  40c142:	add    BYTE PTR [rax],al
  40c144:	add    DWORD PTR [rdi],eax
  40c146:	add    al,0x0
  40c148:	(bad)  
  40c149:	rol    BYTE PTR [rbx],cl
  40c14b:	xor    BYTE PTR [rdx],al
  40c14d:	(bad)  
  40c14e:	add    DWORD PTR [rax+0x1],esi
  40c151:	or     BYTE PTR [rip+0x4820800],al        # 0x4c2c957
  40c157:	xor    BYTE PTR [rbx],al
  40c159:	(bad)  
  40c15a:	add    dh,BYTE PTR [rax+0x1]
  40c15d:	push   rax
  40c15e:	add    BYTE PTR [rax],al
  40c160:	add    DWORD PTR [rdi],eax
  40c162:	add    al,0x0
  40c164:	(bad)  
  40c165:	push   rdx
  40c166:	add    esi,DWORD PTR [rax]
  40c168:	add    ah,BYTE PTR [rax+0x1]
  40c16b:	jo     0x40c16e
  40c16d:	or     al,0x7
  40c16f:	add    BYTE PTR [rdx+riz*2],cl
  40c172:	or     BYTE PTR [rax],dh
  40c174:	(bad)  
  40c175:	(bad)  
  40c176:	(bad)  
  40c177:	jo     0x40c17e
  40c179:	push   rax
  40c17a:	add    al,0xc0
  40c17c:	add    dl,al
  40c17e:	add    BYTE PTR [rax],al
  40c180:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c188
  40c186:	add    DWORD PTR [rax],esi
  40c188:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c190
  40c18e:	add    DWORD PTR [rax],esi
  40c190:	add    DWORD PTR [rax],ecx
  40c192:	add    eax,0x4820800
  40c197:	xor    BYTE PTR [rbx],al
  40c199:	(bad)  
  40c19a:	add    dh,BYTE PTR [rax+0x1]
  40c19d:	push   rax
  40c19e:	add    BYTE PTR [rax],al
  40c1a0:	add    DWORD PTR [rdi],eax
  40c1a2:	add    al,0x0
  40c1a4:	(bad)  
  40c1a5:	xor    al,BYTE PTR [rbx]
  40c1a7:	xor    BYTE PTR [rdx],al
  40c1a9:	(bad)  
  40c1aa:	add    DWORD PTR [rax+0x1],esi
  40c1ad:	or     eax,DWORD PTR [rsi]
  40c1af:	add    BYTE PTR [rbx],cl
  40c1b1:	add    DWORD PTR [rdi],edx
  40c1b3:	add    BYTE PTR [rax+rsi*1],al
  40c1b6:	add    esp,DWORD PTR [rax+0x2]
  40c1b9:	jo     0x40c1bc
  40c1bb:	push   rax
  40c1bc:	add    DWORD PTR [rdi],eax
  40c1be:	add    al,0x0
  40c1c0:	(bad)  
  40c1c1:	push   rdx
  40c1c2:	add    esi,DWORD PTR [rax]
  40c1c4:	add    ah,BYTE PTR [rax+0x1]
  40c1c7:	jo     0x40c1ca
  40c1c9:	(bad)  
  40c1ca:	add    al,0x0
  40c1cc:	(bad)  
  40c1cd:	push   rdx
  40c1ce:	add    esi,DWORD PTR [rax]
  40c1d0:	add    ah,BYTE PTR [rax+0x1]
  40c1d3:	jo     0x40c1d6
  40c1d5:	or     BYTE PTR [rip+0x4620800],al        # 0x4a2c9db
  40c1db:	xor    BYTE PTR [rbx],al
  40c1dd:	(bad)  
  40c1de:	add    dh,BYTE PTR [rax+0x1]
  40c1e1:	push   rax
  40c1e2:	add    BYTE PTR [rax],al
  40c1e4:	add    DWORD PTR [rdi],eax
  40c1e6:	add    al,0x0
  40c1e8:	(bad)  
  40c1e9:	xor    al,BYTE PTR [rbx]
  40c1eb:	xor    BYTE PTR [rdx],al
  40c1ed:	(bad)  
  40c1ee:	add    DWORD PTR [rax+0x1],esi
  40c1f1:	adc    ecx,DWORD PTR [rdx]
  40c1f3:	add    BYTE PTR [rbx],dl
  40c1f5:	add    DWORD PTR [rbx],esi
  40c1f7:	add    BYTE PTR [rax+rsi*1],cl
  40c1fa:	or     esp,DWORD PTR [rax+0xa]
  40c1fd:	jo     0x40c208
  40c1ff:	push   rax
  40c200:	or     al,al
  40c202:	(bad)  
  40c203:	rol    BYTE PTR [rax+riz*8],1
  40c206:	add    dh,al
  40c208:	add    DWORD PTR [rdi],ecx
  40c20a:	or     BYTE PTR [rax],al
  40c20c:	lgdt   [rdi]
  40c20f:	add    BYTE PTR [rax],cl
  40c211:	xor    BYTE PTR [rdi],al
  40c213:	(bad)  
  40c214:	(bad)  
  40c215:	jo     0x40c21c
  40c217:	push   rax
  40c218:	add    al,0xc0
  40c21a:	add    dl,al
  40c21c:	add    DWORD PTR [rbx],edx
  40c21e:	or     al,BYTE PTR [rax]
  40c220:	adc    eax,DWORD PTR [rcx]
  40c222:	push   rbx
  40c223:	add    BYTE PTR [rax+rsi*1],cl
  40c226:	or     esp,DWORD PTR [rax+0xa]
  40c229:	jo     0x40c234
  40c22b:	push   rax
  40c22c:	or     al,al
  40c22e:	(bad)  
  40c22f:	rol    BYTE PTR [rax+riz*8],1
  40c232:	add    dh,al
  40c234:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245c23c
  40c23a:	add    DWORD PTR [rax],esi
  40c23c:	add    DWORD PTR [rcx+rax*1],eax
  40c23f:	add    BYTE PTR [rdx+rax*2],al
  40c242:	add    BYTE PTR [rax],al
  40c244:	add    DWORD PTR [rcx+rax*1],eax
  40c247:	add    BYTE PTR [rdx+rax*2],al
  40c24a:	add    BYTE PTR [rax],al
  40c24c:	add    DWORD PTR [rsi],eax
  40c24e:	add    eax,DWORD PTR [rax]
  40c250:	(bad)  
  40c251:	rex.X add sil,BYTE PTR [rax]
  40c254:	add    DWORD PTR [rax+0x0],esp
  40c257:	add    BYTE PTR [rcx],al
  40c259:	add    BYTE PTR [rax],al
  40c25b:	add    BYTE PTR [rcx],al
  40c25d:	add    BYTE PTR [rax],al
  40c25f:	add    BYTE PTR [rcx],al
  40c261:	add    BYTE PTR [rax],al
  40c263:	add    BYTE PTR [rcx],al
  40c265:	or     al,BYTE PTR [rsi]
  40c267:	add    BYTE PTR [rdx],cl
  40c269:	jb     0x40c271
  40c26b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c6d1
  40c271:	push   rax
  40c272:	add    al,al
  40c274:	add    DWORD PTR [rdx],ecx
  40c276:	add    eax,0x6d20a05
  40c27b:	add    eax,DWORD PTR [rbx]
  40c27d:	xor    BYTE PTR [rdx],al
  40c27f:	(bad)  
  40c280:	add    DWORD PTR [rax+0x0],edx
  40c283:	add    BYTE PTR [rcx],al
  40c285:	add    al,0x1
  40c287:	add    BYTE PTR [rdx+rax*2],al
  40c28a:	add    BYTE PTR [rax],al
  40c28c:	add    DWORD PTR [rsi],eax
  40c28e:	add    eax,DWORD PTR [rax]
  40c290:	(bad)  
  40c291:	rex.X add sil,BYTE PTR [rax]
  40c294:	add    DWORD PTR [rax+0x0],esp
  40c297:	add    BYTE PTR [rcx],al
  40c299:	add    BYTE PTR [rax],al
  40c29b:	add    BYTE PTR [rcx],al
  40c29d:	add    al,0x1
  40c29f:	add    BYTE PTR [rdx+riz*4],al
  40c2a2:	add    BYTE PTR [rax],al
  40c2a4:	add    DWORD PTR [rax],eax
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	add    DWORD PTR [rsi],edx
  40c2aa:	or     DWORD PTR [rax],eax
  40c2ac:	(bad)  
  40c2ad:	mov    BYTE PTR [rsi],al
  40c2af:	add    BYTE PTR [rax],dl
  40c2b1:	js     0x40c2b8
  40c2b3:	add    BYTE PTR [rbx],cl
  40c2b5:	push   0xffffffffe2060004
  40c2ba:	add    dh,BYTE PTR [rax]
  40c2bc:	add    DWORD PTR [rax+0x0],esp
  40c2bf:	add    BYTE PTR [rcx],al
  40c2c1:	add    BYTE PTR [rax],al
  40c2c3:	add    BYTE PTR [rcx],al
  40c2c5:	add    BYTE PTR [rax],al
  40c2c7:	add    BYTE PTR [rcx],al
  40c2c9:	add    BYTE PTR [rax],al
  40c2cb:	add    BYTE PTR [rcx],al
  40c2cd:	(bad)  
  40c2ce:	add    eax,DWORD PTR [rax]
  40c2d0:	(bad)  
  40c2d1:	(bad)  
  40c2d3:	xor    BYTE PTR [rcx],al
  40c2d5:	(bad)  
  40c2d6:	add    BYTE PTR [rax],al
  40c2d8:	add    DWORD PTR [rdi+rax*1],ecx
  40c2db:	add    BYTE PTR [rdx+riz*4],cl
  40c2de:	or     BYTE PTR [rax],dh
  40c2e0:	(bad)  
  40c2e1:	(bad)  
  40c2e2:	(bad)  
  40c2e3:	jo     0x40c2ea
  40c2e5:	push   rax
  40c2e6:	add    al,0xc0
  40c2e8:	add    dl,al
  40c2ea:	add    BYTE PTR [rax],al
  40c2ec:	add    DWORD PTR [rcx],edx
  40c2ee:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e7505
  40c2f4:	or     dh,BYTE PTR [rax]
  40c2f6:	or     DWORD PTR [rax+0x8],esp
  40c2f9:	jo     0x40c302
  40c2fb:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220c6d2
  40c302:	add    BYTE PTR [rax],al
  40c304:	add    DWORD PTR [rcx+rax*1],eax
  40c307:	add    BYTE PTR [rdx+rax*2],al
  40c30a:	add    BYTE PTR [rax],al
  40c30c:	add    DWORD PTR [rdx],ecx
  40c30e:	(bad)  
  40c30f:	add    BYTE PTR [rdx],cl
  40c311:	xor    al,BYTE PTR [rsi]
  40c313:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c779
  40c319:	push   rax
  40c31a:	add    al,al
  40c31c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c324
  40c322:	add    DWORD PTR [rax],esi
  40c324:	add    DWORD PTR [rax],ecx
  40c326:	add    eax,0x4420800
  40c32b:	xor    BYTE PTR [rbx],al
  40c32d:	(bad)  
  40c32e:	add    dh,BYTE PTR [rax+0x1]
  40c331:	push   rax
  40c332:	add    BYTE PTR [rax],al
  40c334:	add    DWORD PTR [rdi],eax
  40c336:	add    al,0x0
  40c338:	(bad)  
  40c339:	xor    al,BYTE PTR [rbx]
  40c33b:	xor    BYTE PTR [rdx],al
  40c33d:	(bad)  
  40c33e:	add    DWORD PTR [rax+0x1],esi
  40c341:	add    eax,0x32050002
  40c346:	add    DWORD PTR [rax],esi
  40c348:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c350
  40c34e:	add    DWORD PTR [rax],esi
  40c350:	add    DWORD PTR [rax],eax
  40c352:	add    BYTE PTR [rax],al
  40c354:	add    DWORD PTR [rax],eax
  40c356:	add    BYTE PTR [rax],al
  40c358:	add    DWORD PTR [rax],eax
  40c35a:	add    BYTE PTR [rax],al
  40c35c:	add    DWORD PTR [rdi],eax
  40c35e:	add    al,0x0
  40c360:	(bad)  
  40c361:	xor    al,BYTE PTR [rbx]
  40c363:	xor    BYTE PTR [rdx],al
  40c365:	(bad)  
  40c366:	add    DWORD PTR [rax+0x1],esi
  40c369:	(bad)  
  40c36a:	add    eax,DWORD PTR [rax]
  40c36c:	(bad)  
  40c36d:	rex.X add sil,BYTE PTR [rax]
  40c370:	add    DWORD PTR [rax+0x0],esp
  40c373:	add    BYTE PTR [rcx],al
  40c375:	add    eax,0x32050002
  40c37a:	add    DWORD PTR [rax],esi
  40c37c:	add    DWORD PTR [rdi],eax
  40c37e:	add    al,0x0
  40c380:	(bad)  
  40c381:	xor    al,BYTE PTR [rbx]
  40c383:	xor    BYTE PTR [rdx],al
  40c385:	(bad)  
  40c386:	add    DWORD PTR [rax+0x1],esi
  40c389:	(bad)  
  40c38a:	add    eax,DWORD PTR [rax]
  40c38c:	(bad)  
  40c38d:	rex.X add sil,BYTE PTR [rax]
  40c390:	add    DWORD PTR [rax+0x0],esp
  40c393:	add    BYTE PTR [rcx],al
  40c395:	(bad)  
  40c396:	add    eax,DWORD PTR [rax]
  40c398:	(bad)  
  40c399:	rex.X add sil,BYTE PTR [rax]
  40c39c:	add    DWORD PTR [rax+0x0],esp
  40c39f:	add    BYTE PTR [rcx],al
  40c3a1:	or     BYTE PTR [rip+0x4420800],al        # 0x482cba7
  40c3a7:	xor    BYTE PTR [rbx],al
  40c3a9:	(bad)  
  40c3aa:	add    dh,BYTE PTR [rax+0x1]
  40c3ad:	push   rax
  40c3ae:	add    BYTE PTR [rax],al
  40c3b0:	add    DWORD PTR [rax],eax
  40c3b2:	add    BYTE PTR [rax],al
  40c3b4:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040d000 <.bss>:
	...

Disassembly of section .idata:

000000000040e000 <.idata>:
  40e000:	fs loopne 0x40e003
	...
  40e00b:	add    BYTE PTR [rdx+rdi*8],al
  40e00e:	add    BYTE PTR [rax],al
  40e010:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e011:	in     eax,0x0
  40e013:	add    BYTE PTR [rbx+riz*8+0x0],bh
  40e01a:	add    BYTE PTR [rax],al
  40e01c:	add    BYTE PTR [rax],al
  40e01e:	add    BYTE PTR [rax],al
  40e020:	xor    dl,bh
  40e022:	add    BYTE PTR [rax],al
  40e024:	cld    
  40e025:	call   0xffffffffe434e02a
	...
  40e032:	add    BYTE PTR [rax],al
  40e034:	pushf  
  40e035:	cli    
  40e036:	add    BYTE PTR [rax],al
  40e038:	xor    al,0xe9
  40e03a:	add    BYTE PTR [rax],al
  40e03c:	mov    ah,0xe4
	...
  40e046:	add    BYTE PTR [rax],al
  40e048:	and    bl,bh
  40e04a:	add    BYTE PTR [rax],al
  40e04c:	hlt    
  40e04d:	jmp    0x40e052
	...
  40e062:	add    BYTE PTR [rax],al
  40e064:	in     al,0xea
  40e066:	add    BYTE PTR [rax],al
  40e068:	add    BYTE PTR [rax],al
  40e06a:	add    BYTE PTR [rax],al
  40e06c:	cld    
  40e06d:	(bad)  
  40e06e:	add    BYTE PTR [rax],al
  40e070:	add    BYTE PTR [rax],al
  40e072:	add    BYTE PTR [rax],al
  40e074:	adc    bl,ch
  40e076:	add    BYTE PTR [rax],al
  40e078:	add    BYTE PTR [rax],al
  40e07a:	add    BYTE PTR [rax],al
  40e07c:	and    bl,ch
  40e07e:	add    BYTE PTR [rax],al
  40e080:	add    BYTE PTR [rax],al
  40e082:	add    BYTE PTR [rax],al
  40e084:	cmp    al,0xeb
  40e086:	add    BYTE PTR [rax],al
  40e088:	add    BYTE PTR [rax],al
  40e08a:	add    BYTE PTR [rax],al
  40e08c:	push   rax
  40e08d:	jmp    0x40e08f
  40e08f:	add    BYTE PTR [rax],al
  40e091:	add    BYTE PTR [rax],al
  40e093:	add    BYTE PTR [rax-0x15],ah
  40e096:	add    BYTE PTR [rax],al
  40e098:	add    BYTE PTR [rax],al
  40e09a:	add    BYTE PTR [rax],al
  40e09c:	je     0x40e089
  40e09e:	add    BYTE PTR [rax],al
  40e0a0:	add    BYTE PTR [rax],al
  40e0a2:	add    BYTE PTR [rax],al
  40e0a4:	mov    ebx,gs
  40e0a6:	add    BYTE PTR [rax],al
  40e0a8:	add    BYTE PTR [rax],al
  40e0aa:	add    BYTE PTR [rax],al
  40e0ac:	test   al,0xeb
  40e0ae:	add    BYTE PTR [rax],al
  40e0b0:	add    BYTE PTR [rax],al
  40e0b2:	add    BYTE PTR [rax],al
  40e0b4:	shr    bl,0x0
  40e0b7:	add    BYTE PTR [rax],al
  40e0b9:	add    BYTE PTR [rax],al
  40e0bb:	add    ah,cl
  40e0bd:	jmp    0x40e0bf
  40e0bf:	add    BYTE PTR [rax],al
  40e0c1:	add    BYTE PTR [rax],al
  40e0c3:	add    ah,ah
  40e0c5:	jmp    0x40e0c7
  40e0c7:	add    BYTE PTR [rax],al
  40e0c9:	add    BYTE PTR [rax],al
  40e0cb:	add    ah,bh
  40e0cd:	jmp    0x40e0cf
  40e0cf:	add    BYTE PTR [rax],al
  40e0d1:	add    BYTE PTR [rax],al
  40e0d3:	add    BYTE PTR [rsp+rbp*8],dl
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	add    BYTE PTR [rax],al
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	sub    al,0xec
  40e0de:	add    BYTE PTR [rax],al
  40e0e0:	add    BYTE PTR [rax],al
  40e0e2:	add    BYTE PTR [rax],al
  40e0e4:	in     al,dx
  40e0e6:	add    BYTE PTR [rax],al
  40e0e8:	add    BYTE PTR [rax],al
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	pop    rax
  40e0ed:	in     al,dx
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	add    BYTE PTR [rax],al
  40e0f2:	add    BYTE PTR [rax],al
  40e0f4:	ins    BYTE PTR es:[rdi],dx
  40e0f5:	in     al,dx
  40e0f6:	add    BYTE PTR [rax],al
  40e0f8:	add    BYTE PTR [rax],al
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	test   ah,ch
  40e0fe:	add    BYTE PTR [rax],al
  40e100:	add    BYTE PTR [rax],al
  40e102:	add    BYTE PTR [rax],al
  40e104:	cwde   
  40e105:	in     al,dx
  40e106:	add    BYTE PTR [rax],al
  40e108:	add    BYTE PTR [rax],al
  40e10a:	add    BYTE PTR [rax],al
  40e10c:	mov    al,0xec
  40e10e:	add    BYTE PTR [rax],al
  40e110:	add    BYTE PTR [rax],al
  40e112:	add    BYTE PTR [rax],al
  40e114:	enter  0xec,0x0
  40e118:	add    BYTE PTR [rax],al
  40e11a:	add    BYTE PTR [rax],al
  40e11c:	loopne 0x40e10a
  40e11e:	add    BYTE PTR [rax],al
  40e120:	add    BYTE PTR [rax],al
  40e122:	add    BYTE PTR [rax],al
  40e124:	cld    
  40e125:	in     al,dx
  40e126:	add    BYTE PTR [rax],al
  40e128:	add    BYTE PTR [rax],al
  40e12a:	add    BYTE PTR [rax],al
  40e12c:	adc    ch,ch
  40e12e:	add    BYTE PTR [rax],al
  40e130:	add    BYTE PTR [rax],al
  40e132:	add    BYTE PTR [rax],al
  40e134:	sbb    al,0xed
  40e136:	add    BYTE PTR [rax],al
  40e138:	add    BYTE PTR [rax],al
  40e13a:	add    BYTE PTR [rax],al
  40e13c:	sub    al,0xed
  40e13e:	add    BYTE PTR [rax],al
  40e140:	add    BYTE PTR [rax],al
  40e142:	add    BYTE PTR [rax],al
  40e144:	rex.WR in eax,dx
  40e146:	add    BYTE PTR [rax],al
  40e148:	add    BYTE PTR [rax],al
  40e14a:	add    BYTE PTR [rax],al
  40e14c:	fs in  eax,dx
  40e14e:	add    BYTE PTR [rax],al
  40e150:	add    BYTE PTR [rax],al
  40e152:	add    BYTE PTR [rax],al
  40e154:	mov    ch,ch
  40e156:	add    BYTE PTR [rax],al
  40e158:	add    BYTE PTR [rax],al
  40e15a:	add    BYTE PTR [rax],al
  40e15c:	test   al,0xed
  40e15e:	add    BYTE PTR [rax],al
  40e160:	add    BYTE PTR [rax],al
  40e162:	add    BYTE PTR [rax],al
  40e164:	shr    ch,1
  40e166:	add    BYTE PTR [rax],al
  40e168:	add    BYTE PTR [rax],al
  40e16a:	add    BYTE PTR [rax],al
  40e16c:	cld    
  40e16d:	in     eax,dx
  40e16e:	add    BYTE PTR [rax],al
  40e170:	add    BYTE PTR [rax],al
  40e172:	add    BYTE PTR [rax],al
  40e174:	and    al,0xee
  40e176:	add    BYTE PTR [rax],al
  40e178:	add    BYTE PTR [rax],al
  40e17a:	add    BYTE PTR [rax],al
  40e17c:	rex.R out dx,al
  40e17e:	add    BYTE PTR [rax],al
  40e180:	add    BYTE PTR [rax],al
  40e182:	add    BYTE PTR [rax],al
  40e184:	fs out dx,al
  40e186:	add    BYTE PTR [rax],al
  40e188:	add    BYTE PTR [rax],al
  40e18a:	add    BYTE PTR [rax],al
  40e18c:	mov    dh,ch
  40e18e:	add    BYTE PTR [rax],al
  40e190:	add    BYTE PTR [rax],al
  40e192:	add    BYTE PTR [rax],al
  40e194:	movabs al,ds:0xb8000000000000ee
  40e19d:	out    dx,al
  40e19e:	add    BYTE PTR [rax],al
  40e1a0:	add    BYTE PTR [rax],al
  40e1a2:	add    BYTE PTR [rax],al
  40e1a4:	(bad)  
  40e1a5:	out    dx,al
  40e1a6:	add    BYTE PTR [rax],al
  40e1a8:	add    BYTE PTR [rax],al
  40e1aa:	add    BYTE PTR [rax],al
  40e1ac:	hlt    
  40e1ad:	out    dx,al
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	add    BYTE PTR [rax],al
  40e1b2:	add    BYTE PTR [rax],al
  40e1b4:	and    bh,ch
  40e1b6:	add    BYTE PTR [rax],al
  40e1b8:	add    BYTE PTR [rax],al
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	xor    al,0xef
  40e1be:	add    BYTE PTR [rax],al
  40e1c0:	add    BYTE PTR [rax],al
  40e1c2:	add    BYTE PTR [rax],al
  40e1c4:	rex.R out dx,eax
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	add    BYTE PTR [rax],al
  40e1ca:	add    BYTE PTR [rax],al
  40e1cc:	pop    rax
  40e1cd:	out    dx,eax
  40e1ce:	add    BYTE PTR [rax],al
  40e1d0:	add    BYTE PTR [rax],al
  40e1d2:	add    BYTE PTR [rax],al
  40e1d4:	ins    BYTE PTR es:[rdi],dx
  40e1d5:	out    dx,eax
  40e1d6:	add    BYTE PTR [rax],al
  40e1d8:	add    BYTE PTR [rax],al
  40e1da:	add    BYTE PTR [rax],al
  40e1dc:	sub    bh,0x0
  40e1df:	add    BYTE PTR [rax],al
  40e1e1:	add    BYTE PTR [rax],al
  40e1e3:	add    BYTE PTR [rdi+rbp*8+0x0],dl
  40e1ea:	add    BYTE PTR [rax],al
  40e1ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e1ed:	out    dx,eax
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	add    BYTE PTR [rax],al
  40e1f2:	add    BYTE PTR [rax],al
  40e1f4:	mov    eax,0xef
  40e1f9:	add    BYTE PTR [rax],al
  40e1fb:	add    al,cl
  40e1fd:	out    dx,eax
  40e1fe:	add    BYTE PTR [rax],al
  40e200:	add    BYTE PTR [rax],al
  40e202:	add    BYTE PTR [rax],al
  40e204:	fsub   st(7),st
  40e206:	add    BYTE PTR [rax],al
  40e208:	add    BYTE PTR [rax],al
  40e20a:	add    BYTE PTR [rax],al
  40e20c:	lock out dx,eax
  40e20e:	add    BYTE PTR [rax],al
  40e210:	add    BYTE PTR [rax],al
  40e212:	add    BYTE PTR [rax],al
  40e214:	or     al,0xf0
  40e216:	add    BYTE PTR [rax],al
  40e218:	add    BYTE PTR [rax],al
  40e21a:	add    BYTE PTR [rax],al
  40e21c:	sbb    al,0xf0
  40e21e:	add    BYTE PTR [rax],al
  40e220:	add    BYTE PTR [rax],al
  40e222:	add    BYTE PTR [rax],al
  40e224:	xor    al,0xf0
  40e226:	add    BYTE PTR [rax],al
  40e228:	add    BYTE PTR [rax],al
  40e22a:	add    BYTE PTR [rax],al
  40e22c:	rex.R
  40e22d:	lock add BYTE PTR [rax],al
  40e230:	add    BYTE PTR [rax],al
  40e232:	add    BYTE PTR [rax],al
  40e234:	pop    rax
  40e235:	lock add BYTE PTR [rax],al
  40e238:	add    BYTE PTR [rax],al
  40e23a:	add    BYTE PTR [rax],al
  40e23c:	push   0xf0
  40e241:	add    BYTE PTR [rax],al
  40e243:	add    BYTE PTR [rax-0x10],bh
  40e246:	add    BYTE PTR [rax],al
  40e248:	add    BYTE PTR [rax],al
  40e24a:	add    BYTE PTR [rax],al
  40e24c:	mov    eax,?
  40e24e:	add    BYTE PTR [rax],al
  40e250:	add    BYTE PTR [rax],al
  40e252:	add    BYTE PTR [rax],al
  40e254:	pushf  
  40e255:	lock add BYTE PTR [rax],al
  40e258:	add    BYTE PTR [rax],al
  40e25a:	add    BYTE PTR [rax],al
  40e25c:	mov    al,0xf0
  40e25e:	add    BYTE PTR [rax],al
  40e260:	add    BYTE PTR [rax],al
  40e262:	add    BYTE PTR [rax],al
  40e264:	(bad)  
  40e265:	lock add BYTE PTR [rax],al
  40e268:	add    BYTE PTR [rax],al
  40e26a:	add    BYTE PTR [rax],al
  40e26c:	(bad)  
  40e26d:	lock add BYTE PTR [rax],al
  40e270:	add    BYTE PTR [rax],al
  40e272:	add    BYTE PTR [rax],al
  40e274:	in     al,0xf0
  40e276:	add    BYTE PTR [rax],al
  40e278:	add    BYTE PTR [rax],al
  40e27a:	add    BYTE PTR [rax],al
  40e27c:	lock lock add BYTE PTR [rax],al
  40e280:	add    BYTE PTR [rax],al
  40e282:	add    BYTE PTR [rax],al
  40e284:	add    cl,dh
  40e286:	add    BYTE PTR [rax],al
  40e288:	add    BYTE PTR [rax],al
  40e28a:	add    BYTE PTR [rax],al
  40e28c:	sbb    cl,dh
  40e28e:	add    BYTE PTR [rax],al
  40e290:	add    BYTE PTR [rax],al
  40e292:	add    BYTE PTR [rax],al
  40e294:	sub    al,0xf1
  40e296:	add    BYTE PTR [rax],al
  40e298:	add    BYTE PTR [rax],al
  40e29a:	add    BYTE PTR [rax],al
  40e29c:	cmp    al,0xf1
  40e29e:	add    BYTE PTR [rax],al
  40e2a0:	add    BYTE PTR [rax],al
  40e2a2:	add    BYTE PTR [rax],al
  40e2a4:	rex.WR icebp 
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	add    BYTE PTR [rax],al
  40e2aa:	add    BYTE PTR [rax],al
  40e2ac:	(bad)  
  40e2ad:	icebp  
  40e2ae:	add    BYTE PTR [rax],al
  40e2b0:	add    BYTE PTR [rax],al
  40e2b2:	add    BYTE PTR [rax],al
  40e2b4:	js     0x40e2a7
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	add    BYTE PTR [rax],al
  40e2ba:	add    BYTE PTR [rax],al
  40e2bc:	mov    ecx,?
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	add    BYTE PTR [rax],al
  40e2c2:	add    BYTE PTR [rax],al
  40e2c4:	cwde   
  40e2c5:	icebp  
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	add    BYTE PTR [rax],al
  40e2ca:	add    BYTE PTR [rax],al
  40e2cc:	mov    al,0xf1
  40e2ce:	add    BYTE PTR [rax],al
  40e2d0:	add    BYTE PTR [rax],al
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	shl    cl,1
  40e2d6:	add    BYTE PTR [rax],al
  40e2d8:	add    BYTE PTR [rax],al
  40e2da:	add    BYTE PTR [rax],al
  40e2dc:	call   0x40e3d2
  40e2e1:	add    BYTE PTR [rax],al
  40e2e3:	add    BYTE PTR [rdx+rsi*8],al
  40e2e6:	add    BYTE PTR [rax],al
  40e2e8:	add    BYTE PTR [rax],al
  40e2ea:	add    BYTE PTR [rax],al
  40e2ec:	sbb    al,0xf2
  40e2ee:	add    BYTE PTR [rax],al
  40e2f0:	add    BYTE PTR [rax],al
  40e2f2:	add    BYTE PTR [rax],al
  40e2f4:	xor    al,0xf2
  40e2f6:	add    BYTE PTR [rax],al
  40e2f8:	add    BYTE PTR [rax],al
  40e2fa:	add    BYTE PTR [rax],al
  40e2fc:	rex.W
  40e2fd:	repnz add BYTE PTR [rax],al
  40e300:	add    BYTE PTR [rax],al
  40e302:	add    BYTE PTR [rax],al
  40e304:	repnz add BYTE PTR fs:[rax],al
  40e308:	add    BYTE PTR [rax],al
  40e30a:	add    BYTE PTR [rax],al
  40e30c:	jl     0x40e300
  40e30e:	add    BYTE PTR [rax],al
  40e310:	add    BYTE PTR [rax],al
  40e312:	add    BYTE PTR [rax],al
  40e314:	xchg   esp,eax
  40e315:	repnz add BYTE PTR [rax],al
  40e318:	add    BYTE PTR [rax],al
  40e31a:	add    BYTE PTR [rax],al
  40e31c:	lods   al,BYTE PTR ds:[rsi]
  40e31d:	repnz add BYTE PTR [rax],al
  40e320:	add    BYTE PTR [rax],al
  40e322:	add    BYTE PTR [rax],al
  40e324:	enter  0xf2,0x0
  40e328:	add    BYTE PTR [rax],al
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	in     al,0xf2
  40e32e:	add    BYTE PTR [rax],al
  40e330:	add    BYTE PTR [rax],al
  40e332:	add    BYTE PTR [rax],al
  40e334:	cld    
  40e335:	repnz add BYTE PTR [rax],al
  40e338:	add    BYTE PTR [rax],al
  40e33a:	add    BYTE PTR [rax],al
  40e33c:	adc    al,0xf3
  40e33e:	add    BYTE PTR [rax],al
  40e340:	add    BYTE PTR [rax],al
  40e342:	add    BYTE PTR [rax],al
  40e344:	sub    bl,dh
  40e346:	add    BYTE PTR [rax],al
  40e348:	add    BYTE PTR [rax],al
  40e34a:	add    BYTE PTR [rax],al
  40e34c:	cmp    bl,dh
  40e34e:	add    BYTE PTR [rax],al
  40e350:	add    BYTE PTR [rax],al
  40e352:	add    BYTE PTR [rax],al
  40e354:	push   rax
  40e355:	repz add BYTE PTR [rax],al
  40e358:	add    BYTE PTR [rax],al
  40e35a:	add    BYTE PTR [rax],al
  40e35c:	repz add BYTE PTR fs:[rax],al
  40e360:	add    BYTE PTR [rax],al
  40e362:	add    BYTE PTR [rax],al
  40e364:	xor    bl,0x0
  40e367:	add    BYTE PTR [rax],al
  40e369:	add    BYTE PTR [rax],al
  40e36b:	add    BYTE PTR [rax+0xf3],bl
  40e371:	add    BYTE PTR [rax],al
  40e373:	add    BYTE PTR [rbx+rsi*8+0x0],dh
  40e37a:	add    BYTE PTR [rax],al
  40e37c:	shl    bl,1
  40e37e:	add    BYTE PTR [rax],al
  40e380:	add    BYTE PTR [rax],al
  40e382:	add    BYTE PTR [rax],al
  40e384:	call   0x40e47c
  40e389:	add    BYTE PTR [rax],al
  40e38b:	add    BYTE PTR [rax],al
  40e38d:	hlt    
  40e38e:	add    BYTE PTR [rax],al
  40e390:	add    BYTE PTR [rax],al
  40e392:	add    BYTE PTR [rax],al
  40e394:	sbb    al,0xf4
  40e396:	add    BYTE PTR [rax],al
  40e398:	add    BYTE PTR [rax],al
  40e39a:	add    BYTE PTR [rax],al
  40e39c:	cmp    ah,dh
  40e39e:	add    BYTE PTR [rax],al
  40e3a0:	add    BYTE PTR [rax],al
  40e3a2:	add    BYTE PTR [rax],al
  40e3a4:	push   rax
  40e3a5:	hlt    
  40e3a6:	add    BYTE PTR [rax],al
  40e3a8:	add    BYTE PTR [rax],al
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	je     0x40e3a2
	...
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	mov    ah,dh
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	add    BYTE PTR [rax],al
  40e3c2:	add    BYTE PTR [rax],al
  40e3c4:	lods   al,BYTE PTR ds:[rsi]
  40e3c5:	hlt    
  40e3c6:	add    BYTE PTR [rax],al
  40e3c8:	add    BYTE PTR [rax],al
  40e3ca:	add    BYTE PTR [rax],al
  40e3cc:	enter  0xf4,0x0
  40e3d0:	add    BYTE PTR [rax],al
  40e3d2:	add    BYTE PTR [rax],al
  40e3d4:	fdivr  st(4),st
  40e3d6:	add    BYTE PTR [rax],al
  40e3d8:	add    BYTE PTR [rax],al
  40e3da:	add    BYTE PTR [rax],al
  40e3dc:	lock hlt 
  40e3de:	add    BYTE PTR [rax],al
  40e3e0:	add    BYTE PTR [rax],al
  40e3e2:	add    BYTE PTR [rax],al
  40e3e4:	add    al,0xf5
	...
  40e3f2:	add    BYTE PTR [rax],al
  40e3f4:	sbb    al,0xf5
  40e3f6:	add    BYTE PTR [rax],al
  40e3f8:	add    BYTE PTR [rax],al
  40e3fa:	add    BYTE PTR [rax],al
  40e3fc:	xor    al,0xf5
  40e3fe:	add    BYTE PTR [rax],al
  40e400:	add    BYTE PTR [rax],al
  40e402:	add    BYTE PTR [rax],al
  40e404:	rex.WR cmc 
  40e406:	add    BYTE PTR [rax],al
  40e408:	add    BYTE PTR [rax],al
  40e40a:	add    BYTE PTR [rax],al
  40e40c:	(bad)  
  40e40d:	cmc    
  40e40e:	add    BYTE PTR [rax],al
  40e410:	add    BYTE PTR [rax],al
  40e412:	add    BYTE PTR [rax],al
  40e414:	jbe    0x40e40b
  40e416:	add    BYTE PTR [rax],al
  40e418:	add    BYTE PTR [rax],al
  40e41a:	add    BYTE PTR [rax],al
  40e41c:	mov    ebp,?
  40e41e:	add    BYTE PTR [rax],al
  40e420:	add    BYTE PTR [rax],al
  40e422:	add    BYTE PTR [rax],al
  40e424:	pushf  
  40e425:	cmc    
  40e426:	add    BYTE PTR [rax],al
  40e428:	add    BYTE PTR [rax],al
  40e42a:	add    BYTE PTR [rax],al
  40e42c:	scas   al,BYTE PTR es:[rdi]
  40e42d:	cmc    
  40e42e:	add    BYTE PTR [rax],al
  40e430:	add    BYTE PTR [rax],al
  40e432:	add    BYTE PTR [rax],al
  40e434:	enter  0xf5,0x0
  40e438:	add    BYTE PTR [rax],al
  40e43a:	add    BYTE PTR [rax],al
  40e43c:	fdiv   st,st(5)
  40e43e:	add    BYTE PTR [rax],al
  40e440:	add    BYTE PTR [rax],al
  40e442:	add    BYTE PTR [rax],al
  40e444:	hlt    
  40e445:	cmc    
  40e446:	add    BYTE PTR [rax],al
  40e448:	add    BYTE PTR [rax],al
  40e44a:	add    BYTE PTR [rax],al
  40e44c:	or     al,0xf6
  40e44e:	add    BYTE PTR [rax],al
  40e450:	add    BYTE PTR [rax],al
  40e452:	add    BYTE PTR [rax],al
  40e454:	test   BYTE PTR es:[rax],0x0
  40e458:	add    BYTE PTR [rax],al
  40e45a:	add    BYTE PTR [rax],al
  40e45c:	cmp    al,0xf6
  40e45e:	add    BYTE PTR [rax],al
  40e460:	add    BYTE PTR [rax],al
  40e462:	add    BYTE PTR [rax],al
  40e464:	push   rax
  40e465:	test   BYTE PTR [rax],0x0
  40e468:	add    BYTE PTR [rax],al
  40e46a:	add    BYTE PTR [rax],al
  40e46c:	push   0xfffffffffffffff6
  40e46e:	add    BYTE PTR [rax],al
  40e470:	add    BYTE PTR [rax],al
  40e472:	add    BYTE PTR [rax],al
  40e474:	jle    0x40e46c
  40e476:	add    BYTE PTR [rax],al
  40e478:	add    BYTE PTR [rax],al
  40e47a:	add    BYTE PTR [rax],al
  40e47c:	pushf  
  40e47d:	test   BYTE PTR [rax],0x0
  40e480:	add    BYTE PTR [rax],al
  40e482:	add    BYTE PTR [rax],al
  40e484:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e485:	test   BYTE PTR [rax],0x0
  40e488:	add    BYTE PTR [rax],al
  40e48a:	add    BYTE PTR [rax],al
  40e48c:	mov    eax,0xf6
  40e491:	add    BYTE PTR [rax],al
  40e493:	add    dh,al
  40e495:	test   BYTE PTR [rax],0x0
  40e498:	add    BYTE PTR [rax],al
  40e49a:	add    BYTE PTR [rax],al
  40e49c:	loop   0x40e494
  40e49e:	add    BYTE PTR [rax],al
  40e4a0:	add    BYTE PTR [rax],al
  40e4a2:	add    BYTE PTR [rax],al
  40e4a4:	hlt    
  40e4a5:	test   BYTE PTR [rax],0x0
	...
  40e4b4:	add    al,0xf7
  40e4b6:	add    BYTE PTR [rax],al
  40e4b8:	add    BYTE PTR [rax],al
  40e4ba:	add    BYTE PTR [rax],al
  40e4bc:	sbb    al,0xf7
  40e4be:	add    BYTE PTR [rax],al
  40e4c0:	add    BYTE PTR [rax],al
  40e4c2:	add    BYTE PTR [rax],al
  40e4c4:	sub    dh,bh
  40e4c6:	add    BYTE PTR [rax],al
  40e4c8:	add    BYTE PTR [rax],al
  40e4ca:	add    BYTE PTR [rax],al
  40e4cc:	cmp    dh,bh
  40e4ce:	add    BYTE PTR [rax],al
  40e4d0:	add    BYTE PTR [rax],al
  40e4d2:	add    BYTE PTR [rax],al
  40e4d4:	rex.RX test DWORD PTR [rax],0x0
  40e4db:	add    BYTE PTR [rdi+rsi*8+0x0],dl
  40e4df:	add    BYTE PTR [rax],al
  40e4e1:	add    BYTE PTR [rax],al
  40e4e3:	add    BYTE PTR [rdi+rsi*8+0x0],ah
  40e4e7:	add    BYTE PTR [rax],al
  40e4e9:	add    BYTE PTR [rax],al
  40e4eb:	add    BYTE PTR [rsi-0x9],dh
  40e4ee:	add    BYTE PTR [rax],al
  40e4f0:	add    BYTE PTR [rax],al
  40e4f2:	add    BYTE PTR [rax],al
  40e4f4:	mov    dh,bh
  40e4f6:	add    BYTE PTR [rax],al
  40e4f8:	add    BYTE PTR [rax],al
  40e4fa:	add    BYTE PTR [rax],al
  40e4fc:	xchg   esp,eax
  40e4fd:	test   DWORD PTR [rax],0x0
  40e503:	add    BYTE PTR [rdx+0xf7],ah
  40e509:	add    BYTE PTR [rax],al
  40e50b:	add    BYTE PTR [rdi+rsi*8+0x0],ch
  40e512:	add    BYTE PTR [rax],al
  40e514:	mov    dh,0xf7
  40e516:	add    BYTE PTR [rax],al
  40e518:	add    BYTE PTR [rax],al
  40e51a:	add    BYTE PTR [rax],al
  40e51c:	ret    0xf7
  40e51f:	add    BYTE PTR [rax],al
  40e521:	add    BYTE PTR [rax],al
  40e523:	add    dl,cl
  40e525:	test   DWORD PTR [rax],0x0
  40e52b:	add    ah,dl
  40e52d:	test   DWORD PTR [rax],0x0
  40e533:	add    dh,bl
  40e535:	test   DWORD PTR [rax],0x0
  40e53b:	add    dh,ah
  40e53d:	test   DWORD PTR [rax],0x0
  40e543:	add    al,dh
  40e545:	test   DWORD PTR [rax],0x0
  40e54b:	add    al,bh
  40e54d:	test   DWORD PTR [rax],0x0
  40e553:	add    BYTE PTR [rdx],al
  40e555:	clc    
  40e556:	add    BYTE PTR [rax],al
  40e558:	add    BYTE PTR [rax],al
  40e55a:	add    BYTE PTR [rax],al
  40e55c:	or     bh,al
  40e55e:	add    BYTE PTR [rax],al
  40e560:	add    BYTE PTR [rax],al
  40e562:	add    BYTE PTR [rax],al
  40e564:	adc    al,0xf8
  40e566:	add    BYTE PTR [rax],al
  40e568:	add    BYTE PTR [rax],al
  40e56a:	add    BYTE PTR [rax],al
  40e56c:	(bad)  
  40e56d:	clc    
  40e56e:	add    BYTE PTR [rax],al
  40e570:	add    BYTE PTR [rax],al
  40e572:	add    BYTE PTR [rax],al
  40e574:	sub    al,bh
  40e576:	add    BYTE PTR [rax],al
  40e578:	add    BYTE PTR [rax],al
  40e57a:	add    BYTE PTR [rax],al
  40e57c:	xor    bh,al
  40e57e:	add    BYTE PTR [rax],al
  40e580:	add    BYTE PTR [rax],al
  40e582:	add    BYTE PTR [rax],al
  40e584:	cmp    al,0xf8
  40e586:	add    BYTE PTR [rax],al
  40e588:	add    BYTE PTR [rax],al
  40e58a:	add    BYTE PTR [rax],al
  40e58c:	rex.RX clc 
  40e58e:	add    BYTE PTR [rax],al
  40e590:	add    BYTE PTR [rax],al
  40e592:	add    BYTE PTR [rax],al
  40e594:	push   rax
  40e595:	clc    
	...
  40e5a2:	add    BYTE PTR [rax],al
  40e5a4:	in     al,0xea
  40e5a6:	add    BYTE PTR [rax],al
  40e5a8:	add    BYTE PTR [rax],al
  40e5aa:	add    BYTE PTR [rax],al
  40e5ac:	cld    
  40e5ad:	(bad)  
  40e5ae:	add    BYTE PTR [rax],al
  40e5b0:	add    BYTE PTR [rax],al
  40e5b2:	add    BYTE PTR [rax],al
  40e5b4:	adc    bl,ch
  40e5b6:	add    BYTE PTR [rax],al
  40e5b8:	add    BYTE PTR [rax],al
  40e5ba:	add    BYTE PTR [rax],al
  40e5bc:	and    bl,ch
  40e5be:	add    BYTE PTR [rax],al
  40e5c0:	add    BYTE PTR [rax],al
  40e5c2:	add    BYTE PTR [rax],al
  40e5c4:	cmp    al,0xeb
  40e5c6:	add    BYTE PTR [rax],al
  40e5c8:	add    BYTE PTR [rax],al
  40e5ca:	add    BYTE PTR [rax],al
  40e5cc:	push   rax
  40e5cd:	jmp    0x40e5cf
  40e5cf:	add    BYTE PTR [rax],al
  40e5d1:	add    BYTE PTR [rax],al
  40e5d3:	add    BYTE PTR [rax-0x15],ah
  40e5d6:	add    BYTE PTR [rax],al
  40e5d8:	add    BYTE PTR [rax],al
  40e5da:	add    BYTE PTR [rax],al
  40e5dc:	je     0x40e5c9
  40e5de:	add    BYTE PTR [rax],al
  40e5e0:	add    BYTE PTR [rax],al
  40e5e2:	add    BYTE PTR [rax],al
  40e5e4:	mov    ebx,gs
  40e5e6:	add    BYTE PTR [rax],al
  40e5e8:	add    BYTE PTR [rax],al
  40e5ea:	add    BYTE PTR [rax],al
  40e5ec:	test   al,0xeb
  40e5ee:	add    BYTE PTR [rax],al
  40e5f0:	add    BYTE PTR [rax],al
  40e5f2:	add    BYTE PTR [rax],al
  40e5f4:	shr    bl,0x0
  40e5f7:	add    BYTE PTR [rax],al
  40e5f9:	add    BYTE PTR [rax],al
  40e5fb:	add    ah,cl
  40e5fd:	jmp    0x40e5ff
  40e5ff:	add    BYTE PTR [rax],al
  40e601:	add    BYTE PTR [rax],al
  40e603:	add    ah,ah
  40e605:	jmp    0x40e607
  40e607:	add    BYTE PTR [rax],al
  40e609:	add    BYTE PTR [rax],al
  40e60b:	add    ah,bh
  40e60d:	jmp    0x40e60f
  40e60f:	add    BYTE PTR [rax],al
  40e611:	add    BYTE PTR [rax],al
  40e613:	add    BYTE PTR [rsp+rbp*8],dl
  40e616:	add    BYTE PTR [rax],al
  40e618:	add    BYTE PTR [rax],al
  40e61a:	add    BYTE PTR [rax],al
  40e61c:	sub    al,0xec
  40e61e:	add    BYTE PTR [rax],al
  40e620:	add    BYTE PTR [rax],al
  40e622:	add    BYTE PTR [rax],al
  40e624:	in     al,dx
  40e626:	add    BYTE PTR [rax],al
  40e628:	add    BYTE PTR [rax],al
  40e62a:	add    BYTE PTR [rax],al
  40e62c:	pop    rax
  40e62d:	in     al,dx
  40e62e:	add    BYTE PTR [rax],al
  40e630:	add    BYTE PTR [rax],al
  40e632:	add    BYTE PTR [rax],al
  40e634:	ins    BYTE PTR es:[rdi],dx
  40e635:	in     al,dx
  40e636:	add    BYTE PTR [rax],al
  40e638:	add    BYTE PTR [rax],al
  40e63a:	add    BYTE PTR [rax],al
  40e63c:	test   ah,ch
  40e63e:	add    BYTE PTR [rax],al
  40e640:	add    BYTE PTR [rax],al
  40e642:	add    BYTE PTR [rax],al
  40e644:	cwde   
  40e645:	in     al,dx
  40e646:	add    BYTE PTR [rax],al
  40e648:	add    BYTE PTR [rax],al
  40e64a:	add    BYTE PTR [rax],al
  40e64c:	mov    al,0xec
  40e64e:	add    BYTE PTR [rax],al
  40e650:	add    BYTE PTR [rax],al
  40e652:	add    BYTE PTR [rax],al
  40e654:	enter  0xec,0x0
  40e658:	add    BYTE PTR [rax],al
  40e65a:	add    BYTE PTR [rax],al
  40e65c:	loopne 0x40e64a
  40e65e:	add    BYTE PTR [rax],al
  40e660:	add    BYTE PTR [rax],al
  40e662:	add    BYTE PTR [rax],al
  40e664:	cld    
  40e665:	in     al,dx
  40e666:	add    BYTE PTR [rax],al
  40e668:	add    BYTE PTR [rax],al
  40e66a:	add    BYTE PTR [rax],al
  40e66c:	adc    ch,ch
  40e66e:	add    BYTE PTR [rax],al
  40e670:	add    BYTE PTR [rax],al
  40e672:	add    BYTE PTR [rax],al
  40e674:	sbb    al,0xed
  40e676:	add    BYTE PTR [rax],al
  40e678:	add    BYTE PTR [rax],al
  40e67a:	add    BYTE PTR [rax],al
  40e67c:	sub    al,0xed
  40e67e:	add    BYTE PTR [rax],al
  40e680:	add    BYTE PTR [rax],al
  40e682:	add    BYTE PTR [rax],al
  40e684:	rex.WR in eax,dx
  40e686:	add    BYTE PTR [rax],al
  40e688:	add    BYTE PTR [rax],al
  40e68a:	add    BYTE PTR [rax],al
  40e68c:	fs in  eax,dx
  40e68e:	add    BYTE PTR [rax],al
  40e690:	add    BYTE PTR [rax],al
  40e692:	add    BYTE PTR [rax],al
  40e694:	mov    ch,ch
  40e696:	add    BYTE PTR [rax],al
  40e698:	add    BYTE PTR [rax],al
  40e69a:	add    BYTE PTR [rax],al
  40e69c:	test   al,0xed
  40e69e:	add    BYTE PTR [rax],al
  40e6a0:	add    BYTE PTR [rax],al
  40e6a2:	add    BYTE PTR [rax],al
  40e6a4:	shr    ch,1
  40e6a6:	add    BYTE PTR [rax],al
  40e6a8:	add    BYTE PTR [rax],al
  40e6aa:	add    BYTE PTR [rax],al
  40e6ac:	cld    
  40e6ad:	in     eax,dx
  40e6ae:	add    BYTE PTR [rax],al
  40e6b0:	add    BYTE PTR [rax],al
  40e6b2:	add    BYTE PTR [rax],al
  40e6b4:	and    al,0xee
  40e6b6:	add    BYTE PTR [rax],al
  40e6b8:	add    BYTE PTR [rax],al
  40e6ba:	add    BYTE PTR [rax],al
  40e6bc:	rex.R out dx,al
  40e6be:	add    BYTE PTR [rax],al
  40e6c0:	add    BYTE PTR [rax],al
  40e6c2:	add    BYTE PTR [rax],al
  40e6c4:	fs out dx,al
  40e6c6:	add    BYTE PTR [rax],al
  40e6c8:	add    BYTE PTR [rax],al
  40e6ca:	add    BYTE PTR [rax],al
  40e6cc:	mov    dh,ch
  40e6ce:	add    BYTE PTR [rax],al
  40e6d0:	add    BYTE PTR [rax],al
  40e6d2:	add    BYTE PTR [rax],al
  40e6d4:	movabs al,ds:0xb8000000000000ee
  40e6dd:	out    dx,al
  40e6de:	add    BYTE PTR [rax],al
  40e6e0:	add    BYTE PTR [rax],al
  40e6e2:	add    BYTE PTR [rax],al
  40e6e4:	(bad)  
  40e6e5:	out    dx,al
  40e6e6:	add    BYTE PTR [rax],al
  40e6e8:	add    BYTE PTR [rax],al
  40e6ea:	add    BYTE PTR [rax],al
  40e6ec:	hlt    
  40e6ed:	out    dx,al
  40e6ee:	add    BYTE PTR [rax],al
  40e6f0:	add    BYTE PTR [rax],al
  40e6f2:	add    BYTE PTR [rax],al
  40e6f4:	and    bh,ch
  40e6f6:	add    BYTE PTR [rax],al
  40e6f8:	add    BYTE PTR [rax],al
  40e6fa:	add    BYTE PTR [rax],al
  40e6fc:	xor    al,0xef
  40e6fe:	add    BYTE PTR [rax],al
  40e700:	add    BYTE PTR [rax],al
  40e702:	add    BYTE PTR [rax],al
  40e704:	rex.R out dx,eax
  40e706:	add    BYTE PTR [rax],al
  40e708:	add    BYTE PTR [rax],al
  40e70a:	add    BYTE PTR [rax],al
  40e70c:	pop    rax
  40e70d:	out    dx,eax
  40e70e:	add    BYTE PTR [rax],al
  40e710:	add    BYTE PTR [rax],al
  40e712:	add    BYTE PTR [rax],al
  40e714:	ins    BYTE PTR es:[rdi],dx
  40e715:	out    dx,eax
  40e716:	add    BYTE PTR [rax],al
  40e718:	add    BYTE PTR [rax],al
  40e71a:	add    BYTE PTR [rax],al
  40e71c:	sub    bh,0x0
  40e71f:	add    BYTE PTR [rax],al
  40e721:	add    BYTE PTR [rax],al
  40e723:	add    BYTE PTR [rdi+rbp*8+0x0],dl
  40e72a:	add    BYTE PTR [rax],al
  40e72c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e72d:	out    dx,eax
  40e72e:	add    BYTE PTR [rax],al
  40e730:	add    BYTE PTR [rax],al
  40e732:	add    BYTE PTR [rax],al
  40e734:	mov    eax,0xef
  40e739:	add    BYTE PTR [rax],al
  40e73b:	add    al,cl
  40e73d:	out    dx,eax
  40e73e:	add    BYTE PTR [rax],al
  40e740:	add    BYTE PTR [rax],al
  40e742:	add    BYTE PTR [rax],al
  40e744:	fsub   st(7),st
  40e746:	add    BYTE PTR [rax],al
  40e748:	add    BYTE PTR [rax],al
  40e74a:	add    BYTE PTR [rax],al
  40e74c:	lock out dx,eax
  40e74e:	add    BYTE PTR [rax],al
  40e750:	add    BYTE PTR [rax],al
  40e752:	add    BYTE PTR [rax],al
  40e754:	or     al,0xf0
  40e756:	add    BYTE PTR [rax],al
  40e758:	add    BYTE PTR [rax],al
  40e75a:	add    BYTE PTR [rax],al
  40e75c:	sbb    al,0xf0
  40e75e:	add    BYTE PTR [rax],al
  40e760:	add    BYTE PTR [rax],al
  40e762:	add    BYTE PTR [rax],al
  40e764:	xor    al,0xf0
  40e766:	add    BYTE PTR [rax],al
  40e768:	add    BYTE PTR [rax],al
  40e76a:	add    BYTE PTR [rax],al
  40e76c:	rex.R
  40e76d:	lock add BYTE PTR [rax],al
  40e770:	add    BYTE PTR [rax],al
  40e772:	add    BYTE PTR [rax],al
  40e774:	pop    rax
  40e775:	lock add BYTE PTR [rax],al
  40e778:	add    BYTE PTR [rax],al
  40e77a:	add    BYTE PTR [rax],al
  40e77c:	push   0xf0
  40e781:	add    BYTE PTR [rax],al
  40e783:	add    BYTE PTR [rax-0x10],bh
  40e786:	add    BYTE PTR [rax],al
  40e788:	add    BYTE PTR [rax],al
  40e78a:	add    BYTE PTR [rax],al
  40e78c:	mov    eax,?
  40e78e:	add    BYTE PTR [rax],al
  40e790:	add    BYTE PTR [rax],al
  40e792:	add    BYTE PTR [rax],al
  40e794:	pushf  
  40e795:	lock add BYTE PTR [rax],al
  40e798:	add    BYTE PTR [rax],al
  40e79a:	add    BYTE PTR [rax],al
  40e79c:	mov    al,0xf0
  40e79e:	add    BYTE PTR [rax],al
  40e7a0:	add    BYTE PTR [rax],al
  40e7a2:	add    BYTE PTR [rax],al
  40e7a4:	(bad)  
  40e7a5:	lock add BYTE PTR [rax],al
  40e7a8:	add    BYTE PTR [rax],al
  40e7aa:	add    BYTE PTR [rax],al
  40e7ac:	(bad)  
  40e7ad:	lock add BYTE PTR [rax],al
  40e7b0:	add    BYTE PTR [rax],al
  40e7b2:	add    BYTE PTR [rax],al
  40e7b4:	in     al,0xf0
  40e7b6:	add    BYTE PTR [rax],al
  40e7b8:	add    BYTE PTR [rax],al
  40e7ba:	add    BYTE PTR [rax],al
  40e7bc:	lock lock add BYTE PTR [rax],al
  40e7c0:	add    BYTE PTR [rax],al
  40e7c2:	add    BYTE PTR [rax],al
  40e7c4:	add    cl,dh
  40e7c6:	add    BYTE PTR [rax],al
  40e7c8:	add    BYTE PTR [rax],al
  40e7ca:	add    BYTE PTR [rax],al
  40e7cc:	sbb    cl,dh
  40e7ce:	add    BYTE PTR [rax],al
  40e7d0:	add    BYTE PTR [rax],al
  40e7d2:	add    BYTE PTR [rax],al
  40e7d4:	sub    al,0xf1
  40e7d6:	add    BYTE PTR [rax],al
  40e7d8:	add    BYTE PTR [rax],al
  40e7da:	add    BYTE PTR [rax],al
  40e7dc:	cmp    al,0xf1
  40e7de:	add    BYTE PTR [rax],al
  40e7e0:	add    BYTE PTR [rax],al
  40e7e2:	add    BYTE PTR [rax],al
  40e7e4:	rex.WR icebp 
  40e7e6:	add    BYTE PTR [rax],al
  40e7e8:	add    BYTE PTR [rax],al
  40e7ea:	add    BYTE PTR [rax],al
  40e7ec:	(bad)  
  40e7ed:	icebp  
  40e7ee:	add    BYTE PTR [rax],al
  40e7f0:	add    BYTE PTR [rax],al
  40e7f2:	add    BYTE PTR [rax],al
  40e7f4:	js     0x40e7e7
  40e7f6:	add    BYTE PTR [rax],al
  40e7f8:	add    BYTE PTR [rax],al
  40e7fa:	add    BYTE PTR [rax],al
  40e7fc:	mov    ecx,?
  40e7fe:	add    BYTE PTR [rax],al
  40e800:	add    BYTE PTR [rax],al
  40e802:	add    BYTE PTR [rax],al
  40e804:	cwde   
  40e805:	icebp  
  40e806:	add    BYTE PTR [rax],al
  40e808:	add    BYTE PTR [rax],al
  40e80a:	add    BYTE PTR [rax],al
  40e80c:	mov    al,0xf1
  40e80e:	add    BYTE PTR [rax],al
  40e810:	add    BYTE PTR [rax],al
  40e812:	add    BYTE PTR [rax],al
  40e814:	shl    cl,1
  40e816:	add    BYTE PTR [rax],al
  40e818:	add    BYTE PTR [rax],al
  40e81a:	add    BYTE PTR [rax],al
  40e81c:	call   0x40e912
  40e821:	add    BYTE PTR [rax],al
  40e823:	add    BYTE PTR [rdx+rsi*8],al
  40e826:	add    BYTE PTR [rax],al
  40e828:	add    BYTE PTR [rax],al
  40e82a:	add    BYTE PTR [rax],al
  40e82c:	sbb    al,0xf2
  40e82e:	add    BYTE PTR [rax],al
  40e830:	add    BYTE PTR [rax],al
  40e832:	add    BYTE PTR [rax],al
  40e834:	xor    al,0xf2
  40e836:	add    BYTE PTR [rax],al
  40e838:	add    BYTE PTR [rax],al
  40e83a:	add    BYTE PTR [rax],al
  40e83c:	rex.W
  40e83d:	repnz add BYTE PTR [rax],al
  40e840:	add    BYTE PTR [rax],al
  40e842:	add    BYTE PTR [rax],al
  40e844:	repnz add BYTE PTR fs:[rax],al
  40e848:	add    BYTE PTR [rax],al
  40e84a:	add    BYTE PTR [rax],al
  40e84c:	jl     0x40e840
  40e84e:	add    BYTE PTR [rax],al
  40e850:	add    BYTE PTR [rax],al
  40e852:	add    BYTE PTR [rax],al
  40e854:	xchg   esp,eax
  40e855:	repnz add BYTE PTR [rax],al
  40e858:	add    BYTE PTR [rax],al
  40e85a:	add    BYTE PTR [rax],al
  40e85c:	lods   al,BYTE PTR ds:[rsi]
  40e85d:	repnz add BYTE PTR [rax],al
  40e860:	add    BYTE PTR [rax],al
  40e862:	add    BYTE PTR [rax],al
  40e864:	enter  0xf2,0x0
  40e868:	add    BYTE PTR [rax],al
  40e86a:	add    BYTE PTR [rax],al
  40e86c:	in     al,0xf2
  40e86e:	add    BYTE PTR [rax],al
  40e870:	add    BYTE PTR [rax],al
  40e872:	add    BYTE PTR [rax],al
  40e874:	cld    
  40e875:	repnz add BYTE PTR [rax],al
  40e878:	add    BYTE PTR [rax],al
  40e87a:	add    BYTE PTR [rax],al
  40e87c:	adc    al,0xf3
  40e87e:	add    BYTE PTR [rax],al
  40e880:	add    BYTE PTR [rax],al
  40e882:	add    BYTE PTR [rax],al
  40e884:	sub    bl,dh
  40e886:	add    BYTE PTR [rax],al
  40e888:	add    BYTE PTR [rax],al
  40e88a:	add    BYTE PTR [rax],al
  40e88c:	cmp    bl,dh
  40e88e:	add    BYTE PTR [rax],al
  40e890:	add    BYTE PTR [rax],al
  40e892:	add    BYTE PTR [rax],al
  40e894:	push   rax
  40e895:	repz add BYTE PTR [rax],al
  40e898:	add    BYTE PTR [rax],al
  40e89a:	add    BYTE PTR [rax],al
  40e89c:	repz add BYTE PTR fs:[rax],al
  40e8a0:	add    BYTE PTR [rax],al
  40e8a2:	add    BYTE PTR [rax],al
  40e8a4:	xor    bl,0x0
  40e8a7:	add    BYTE PTR [rax],al
  40e8a9:	add    BYTE PTR [rax],al
  40e8ab:	add    BYTE PTR [rax+0xf3],bl
  40e8b1:	add    BYTE PTR [rax],al
  40e8b3:	add    BYTE PTR [rbx+rsi*8+0x0],dh
  40e8ba:	add    BYTE PTR [rax],al
  40e8bc:	shl    bl,1
  40e8be:	add    BYTE PTR [rax],al
  40e8c0:	add    BYTE PTR [rax],al
  40e8c2:	add    BYTE PTR [rax],al
  40e8c4:	call   0x40e9bc
  40e8c9:	add    BYTE PTR [rax],al
  40e8cb:	add    BYTE PTR [rax],al
  40e8cd:	hlt    
  40e8ce:	add    BYTE PTR [rax],al
  40e8d0:	add    BYTE PTR [rax],al
  40e8d2:	add    BYTE PTR [rax],al
  40e8d4:	sbb    al,0xf4
  40e8d6:	add    BYTE PTR [rax],al
  40e8d8:	add    BYTE PTR [rax],al
  40e8da:	add    BYTE PTR [rax],al
  40e8dc:	cmp    ah,dh
  40e8de:	add    BYTE PTR [rax],al
  40e8e0:	add    BYTE PTR [rax],al
  40e8e2:	add    BYTE PTR [rax],al
  40e8e4:	push   rax
  40e8e5:	hlt    
  40e8e6:	add    BYTE PTR [rax],al
  40e8e8:	add    BYTE PTR [rax],al
  40e8ea:	add    BYTE PTR [rax],al
  40e8ec:	je     0x40e8e2
	...
  40e8fa:	add    BYTE PTR [rax],al
  40e8fc:	mov    ah,dh
  40e8fe:	add    BYTE PTR [rax],al
  40e900:	add    BYTE PTR [rax],al
  40e902:	add    BYTE PTR [rax],al
  40e904:	lods   al,BYTE PTR ds:[rsi]
  40e905:	hlt    
  40e906:	add    BYTE PTR [rax],al
  40e908:	add    BYTE PTR [rax],al
  40e90a:	add    BYTE PTR [rax],al
  40e90c:	enter  0xf4,0x0
  40e910:	add    BYTE PTR [rax],al
  40e912:	add    BYTE PTR [rax],al
  40e914:	fdivr  st(4),st
  40e916:	add    BYTE PTR [rax],al
  40e918:	add    BYTE PTR [rax],al
  40e91a:	add    BYTE PTR [rax],al
  40e91c:	lock hlt 
  40e91e:	add    BYTE PTR [rax],al
  40e920:	add    BYTE PTR [rax],al
  40e922:	add    BYTE PTR [rax],al
  40e924:	add    al,0xf5
	...
  40e932:	add    BYTE PTR [rax],al
  40e934:	sbb    al,0xf5
  40e936:	add    BYTE PTR [rax],al
  40e938:	add    BYTE PTR [rax],al
  40e93a:	add    BYTE PTR [rax],al
  40e93c:	xor    al,0xf5
  40e93e:	add    BYTE PTR [rax],al
  40e940:	add    BYTE PTR [rax],al
  40e942:	add    BYTE PTR [rax],al
  40e944:	rex.WR cmc 
  40e946:	add    BYTE PTR [rax],al
  40e948:	add    BYTE PTR [rax],al
  40e94a:	add    BYTE PTR [rax],al
  40e94c:	(bad)  
  40e94d:	cmc    
  40e94e:	add    BYTE PTR [rax],al
  40e950:	add    BYTE PTR [rax],al
  40e952:	add    BYTE PTR [rax],al
  40e954:	jbe    0x40e94b
  40e956:	add    BYTE PTR [rax],al
  40e958:	add    BYTE PTR [rax],al
  40e95a:	add    BYTE PTR [rax],al
  40e95c:	mov    ebp,?
  40e95e:	add    BYTE PTR [rax],al
  40e960:	add    BYTE PTR [rax],al
  40e962:	add    BYTE PTR [rax],al
  40e964:	pushf  
  40e965:	cmc    
  40e966:	add    BYTE PTR [rax],al
  40e968:	add    BYTE PTR [rax],al
  40e96a:	add    BYTE PTR [rax],al
  40e96c:	scas   al,BYTE PTR es:[rdi]
  40e96d:	cmc    
  40e96e:	add    BYTE PTR [rax],al
  40e970:	add    BYTE PTR [rax],al
  40e972:	add    BYTE PTR [rax],al
  40e974:	enter  0xf5,0x0
  40e978:	add    BYTE PTR [rax],al
  40e97a:	add    BYTE PTR [rax],al
  40e97c:	fdiv   st,st(5)
  40e97e:	add    BYTE PTR [rax],al
  40e980:	add    BYTE PTR [rax],al
  40e982:	add    BYTE PTR [rax],al
  40e984:	hlt    
  40e985:	cmc    
  40e986:	add    BYTE PTR [rax],al
  40e988:	add    BYTE PTR [rax],al
  40e98a:	add    BYTE PTR [rax],al
  40e98c:	or     al,0xf6
  40e98e:	add    BYTE PTR [rax],al
  40e990:	add    BYTE PTR [rax],al
  40e992:	add    BYTE PTR [rax],al
  40e994:	test   BYTE PTR es:[rax],0x0
  40e998:	add    BYTE PTR [rax],al
  40e99a:	add    BYTE PTR [rax],al
  40e99c:	cmp    al,0xf6
  40e99e:	add    BYTE PTR [rax],al
  40e9a0:	add    BYTE PTR [rax],al
  40e9a2:	add    BYTE PTR [rax],al
  40e9a4:	push   rax
  40e9a5:	test   BYTE PTR [rax],0x0
  40e9a8:	add    BYTE PTR [rax],al
  40e9aa:	add    BYTE PTR [rax],al
  40e9ac:	push   0xfffffffffffffff6
  40e9ae:	add    BYTE PTR [rax],al
  40e9b0:	add    BYTE PTR [rax],al
  40e9b2:	add    BYTE PTR [rax],al
  40e9b4:	jle    0x40e9ac
  40e9b6:	add    BYTE PTR [rax],al
  40e9b8:	add    BYTE PTR [rax],al
  40e9ba:	add    BYTE PTR [rax],al
  40e9bc:	pushf  
  40e9bd:	test   BYTE PTR [rax],0x0
  40e9c0:	add    BYTE PTR [rax],al
  40e9c2:	add    BYTE PTR [rax],al
  40e9c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e9c5:	test   BYTE PTR [rax],0x0
  40e9c8:	add    BYTE PTR [rax],al
  40e9ca:	add    BYTE PTR [rax],al
  40e9cc:	mov    eax,0xf6
  40e9d1:	add    BYTE PTR [rax],al
  40e9d3:	add    dh,al
  40e9d5:	test   BYTE PTR [rax],0x0
  40e9d8:	add    BYTE PTR [rax],al
  40e9da:	add    BYTE PTR [rax],al
  40e9dc:	loop   0x40e9d4
  40e9de:	add    BYTE PTR [rax],al
  40e9e0:	add    BYTE PTR [rax],al
  40e9e2:	add    BYTE PTR [rax],al
  40e9e4:	hlt    
  40e9e5:	test   BYTE PTR [rax],0x0
	...
  40e9f4:	add    al,0xf7
  40e9f6:	add    BYTE PTR [rax],al
  40e9f8:	add    BYTE PTR [rax],al
  40e9fa:	add    BYTE PTR [rax],al
  40e9fc:	sbb    al,0xf7
  40e9fe:	add    BYTE PTR [rax],al
  40ea00:	add    BYTE PTR [rax],al
  40ea02:	add    BYTE PTR [rax],al
  40ea04:	sub    dh,bh
  40ea06:	add    BYTE PTR [rax],al
  40ea08:	add    BYTE PTR [rax],al
  40ea0a:	add    BYTE PTR [rax],al
  40ea0c:	cmp    dh,bh
  40ea0e:	add    BYTE PTR [rax],al
  40ea10:	add    BYTE PTR [rax],al
  40ea12:	add    BYTE PTR [rax],al
  40ea14:	rex.RX test DWORD PTR [rax],0x0
  40ea1b:	add    BYTE PTR [rdi+rsi*8+0x0],dl
  40ea1f:	add    BYTE PTR [rax],al
  40ea21:	add    BYTE PTR [rax],al
  40ea23:	add    BYTE PTR [rdi+rsi*8+0x0],ah
  40ea27:	add    BYTE PTR [rax],al
  40ea29:	add    BYTE PTR [rax],al
  40ea2b:	add    BYTE PTR [rsi-0x9],dh
  40ea2e:	add    BYTE PTR [rax],al
  40ea30:	add    BYTE PTR [rax],al
  40ea32:	add    BYTE PTR [rax],al
  40ea34:	mov    dh,bh
  40ea36:	add    BYTE PTR [rax],al
  40ea38:	add    BYTE PTR [rax],al
  40ea3a:	add    BYTE PTR [rax],al
  40ea3c:	xchg   esp,eax
  40ea3d:	test   DWORD PTR [rax],0x0
  40ea43:	add    BYTE PTR [rdx+0xf7],ah
  40ea49:	add    BYTE PTR [rax],al
  40ea4b:	add    BYTE PTR [rdi+rsi*8+0x0],ch
  40ea52:	add    BYTE PTR [rax],al
  40ea54:	mov    dh,0xf7
  40ea56:	add    BYTE PTR [rax],al
  40ea58:	add    BYTE PTR [rax],al
  40ea5a:	add    BYTE PTR [rax],al
  40ea5c:	ret    0xf7
  40ea5f:	add    BYTE PTR [rax],al
  40ea61:	add    BYTE PTR [rax],al
  40ea63:	add    dl,cl
  40ea65:	test   DWORD PTR [rax],0x0
  40ea6b:	add    ah,dl
  40ea6d:	test   DWORD PTR [rax],0x0
  40ea73:	add    dh,bl
  40ea75:	test   DWORD PTR [rax],0x0
  40ea7b:	add    dh,ah
  40ea7d:	test   DWORD PTR [rax],0x0
  40ea83:	add    al,dh
  40ea85:	test   DWORD PTR [rax],0x0
  40ea8b:	add    al,bh
  40ea8d:	test   DWORD PTR [rax],0x0
  40ea93:	add    BYTE PTR [rdx],al
  40ea95:	clc    
  40ea96:	add    BYTE PTR [rax],al
  40ea98:	add    BYTE PTR [rax],al
  40ea9a:	add    BYTE PTR [rax],al
  40ea9c:	or     bh,al
  40ea9e:	add    BYTE PTR [rax],al
  40eaa0:	add    BYTE PTR [rax],al
  40eaa2:	add    BYTE PTR [rax],al
  40eaa4:	adc    al,0xf8
  40eaa6:	add    BYTE PTR [rax],al
  40eaa8:	add    BYTE PTR [rax],al
  40eaaa:	add    BYTE PTR [rax],al
  40eaac:	(bad)  
  40eaad:	clc    
  40eaae:	add    BYTE PTR [rax],al
  40eab0:	add    BYTE PTR [rax],al
  40eab2:	add    BYTE PTR [rax],al
  40eab4:	sub    al,bh
  40eab6:	add    BYTE PTR [rax],al
  40eab8:	add    BYTE PTR [rax],al
  40eaba:	add    BYTE PTR [rax],al
  40eabc:	xor    bh,al
  40eabe:	add    BYTE PTR [rax],al
  40eac0:	add    BYTE PTR [rax],al
  40eac2:	add    BYTE PTR [rax],al
  40eac4:	cmp    al,0xf8
  40eac6:	add    BYTE PTR [rax],al
  40eac8:	add    BYTE PTR [rax],al
  40eaca:	add    BYTE PTR [rax],al
  40eacc:	rex.RX clc 
  40eace:	add    BYTE PTR [rax],al
  40ead0:	add    BYTE PTR [rax],al
  40ead2:	add    BYTE PTR [rax],al
  40ead4:	push   rax
  40ead5:	clc    
	...
  40eae2:	add    BYTE PTR [rax],al
  40eae4:	add    DWORD PTR [rax],eax
  40eae6:	pop    rdi
  40eae7:	ins    BYTE PTR es:[edi],dx
  40eae9:	imul   esp,DWORD PTR [rdx+0x5f],0x5f746567
  40eaf0:	ins    BYTE PTR es:[rdi],dx
  40eaf1:	outs   dx,DWORD PTR ds:[rsi]
  40eaf2:	movsxd esp,DWORD PTR [rcx+0x6c]
  40eaf5:	gs pop rdi
  40eaf7:	imul   esi,DWORD PTR fs:[rdx+0x0],0x67001c00
  40eaff:	pop    rdi
  40eb00:	(bad)  
  40eb01:	jae    0x40eb66
  40eb03:	imul   ebp,DWORD PTR [rcx+0x5f],0x74727473
  40eb0a:	outs   dx,DWORD PTR ds:[rsi]
  40eb0b:	ins    BYTE PTR es:[rdi],dx
  40eb0c:	ins    BYTE PTR es:[rdi],dx
  40eb0d:	add    BYTE PTR [rax],al
  40eb0f:	add    BYTE PTR [rdi],bl
  40eb11:	add    BYTE PTR [rdi+0x5f],ah
  40eb14:	(bad)  
  40eb15:	jae    0x40eb7a
  40eb17:	imul   ebp,DWORD PTR [rcx+0x5f],0x6c626174
  40eb1e:	add    BYTE PTR gs:[rax],ch
  40eb21:	add    BYTE PTR [rdi+0x5f],ah
  40eb24:	(bad)  
  40eb25:	jae    0x40eb9a
  40eb27:	gs jb  0x40eb9e
  40eb2a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73656d5f
  40eb31:	jae    0x40eb94
  40eb33:	addr32 gs pop rdi
  40eb36:	gs js  0x40eba9
  40eb39:	jb     0x40eb3b
  40eb3b:	add    BYTE PTR [rbp+0x625f6700],cl
  40eb41:	jne    0x40ebac
  40eb43:	ins    BYTE PTR es:[rdi],dx
  40eb44:	fs pop rdi
  40eb46:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40eb4d:	add    BYTE PTR gs:[rax],al
  40eb50:	ret    0x6700
  40eb53:	pop    rdi
  40eb54:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  40eb58:	jb     0x40ebb9
  40eb5a:	gs jb  0x40ebcf
  40eb5d:	outs   dx,DWORD PTR ds:[rsi]
  40eb5e:	jb     0x40eb60
  40eb60:	push   rsp
  40eb61:	add    DWORD PTR [rdi+0x5f],esp
  40eb64:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x6e65706f
  40eb6c:	pop    rdi
  40eb6d:	jne    0x40ebe3
  40eb6f:	data16 cmp BYTE PTR [rax],al
  40eb72:	add    BYTE PTR [rax],al
  40eb74:	push   rbp
  40eb75:	add    DWORD PTR [rdi+0x5f],esp
  40eb78:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x64616572
  40eb80:	pop    rdi
  40eb81:	outs   dx,BYTE PTR ds:[rsi]
  40eb82:	(bad)  
  40eb83:	ins    DWORD PTR es:[rdi],dx
  40eb84:	gs pop rdi
  40eb86:	jne    0x40ebfc
  40eb88:	data16 cmp BYTE PTR [rax],al
  40eb8b:	add    BYTE PTR [rcx+0x1],ch
  40eb8e:	addr32 pop rdi
  40eb90:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6567
  40eb97:	je     0x40ebf8
  40eb99:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40eb9c:	je     0x40ec03
  40eb9e:	outs   dx,BYTE PTR ds:[rsi]
  40eb9f:	je     0x40ec14
  40eba1:	pop    rdi
  40eba2:	jne    0x40ec18
  40eba4:	data16 cmp BYTE PTR [rax],al
  40eba7:	add    BYTE PTR [rcx+rax*1+0x67],ch
  40ebab:	pop    rdi
  40ebac:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6573
  40ebb3:	je     0x40ec14
  40ebb5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ebb8:	je     0x40ec1f
  40ebba:	outs   dx,BYTE PTR ds:[rsi]
  40ebbb:	je     0x40ec30
  40ebbd:	add    BYTE PTR [rax],al
  40ebbf:	add    BYTE PTR [rdx+0x1],bh
  40ebc2:	addr32 pop rdi
  40ebc4:	data16 jb 0x40ec2c
  40ebc7:	add    BYTE PTR gs:[rax],al
  40ebca:	add    BYTE PTR [rax],al
  40ebcc:	(bad)  
  40ebcd:	add    DWORD PTR [rdi+0x5f],esp
  40ebd0:	push   0x5f687361
  40ebd5:	je     0x40ec38
  40ebd7:	(bad)  
  40ebd8:	ins    BYTE PTR es:[rdi],dx
  40ebd9:	gs pop rdi
  40ebdb:	outs   dx,WORD PTR ds:[rsi]
  40ebdd:	jb     0x40ec44
  40ebdf:	(bad)  
  40ebe0:	movsxd ebp,DWORD PTR [rax+0x0]
  40ebe3:	add    BYTE PTR [rax+0x685f6701],ah
  40ebe9:	(bad)  
  40ebea:	jae    0x40ec54
  40ebec:	pop    rdi
  40ebed:	je     0x40ec50
  40ebef:	(bad)  
  40ebf0:	ins    BYTE PTR es:[rdi],dx
  40ebf1:	gs pop rdi
  40ebf3:	imul   ebp,DWORD PTR [rsi+0x73],0x747265
  40ebfa:	add    BYTE PTR [rax],al
  40ebfc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40ebfd:	add    DWORD PTR [rdi+0x5f],esp
  40ec00:	push   0x5f687361
  40ec05:	je     0x40ec68
  40ec07:	(bad)  
  40ec08:	ins    BYTE PTR es:[rdi],dx
  40ec09:	gs pop rdi
  40ec0b:	ins    BYTE PTR es:[rdi],dx
  40ec0c:	outs   dx,DWORD PTR ds:[rsi]
  40ec0d:	outs   dx,DWORD PTR ds:[rsi]
  40ec0e:	imul   esi,DWORD PTR [rbp+0x70],0x0
  40ec12:	add    BYTE PTR [rax],al
  40ec14:	stos   BYTE PTR es:[rdi],al
  40ec15:	add    DWORD PTR [rdi+0x5f],esp
  40ec18:	push   0x5f687361
  40ec1d:	je     0x40ec80
  40ec1f:	(bad)  
  40ec20:	ins    BYTE PTR es:[rdi],dx
  40ec21:	gs pop rdi
  40ec23:	outs   dx,BYTE PTR ds:[rsi]
  40ec24:	gs ja  0x40ec86
  40ec27:	data16 jne 0x40ec96
  40ec2a:	ins    BYTE PTR es:[rdi],dx
  40ec2b:	add    BYTE PTR [rbx+0x685f6701],ch
  40ec31:	(bad)  
  40ec32:	jae    0x40ec9c
  40ec34:	pop    rdi
  40ec35:	je     0x40ec98
  40ec37:	(bad)  
  40ec38:	ins    BYTE PTR es:[rdi],dx
  40ec39:	gs pop rdi
  40ec3b:	jb     0x40eca2
  40ec3d:	data16 add BYTE PTR [rax],al
  40ec40:	lods   al,BYTE PTR ds:[rsi]
  40ec41:	add    DWORD PTR [rdi+0x5f],esp
  40ec44:	push   0x5f687361
  40ec49:	je     0x40ecac
  40ec4b:	(bad)  
  40ec4c:	ins    BYTE PTR es:[rdi],dx
  40ec4d:	gs pop rdi
  40ec4f:	jb     0x40ecb6
  40ec51:	ins    DWORD PTR es:[rdi],dx
  40ec52:	outs   dx,DWORD PTR ds:[rsi]
  40ec53:	jbe    0x40ecba
  40ec55:	add    BYTE PTR [rax],al
  40ec57:	add    BYTE PTR [rdi+0x685f6701],ch
  40ec5d:	(bad)  
  40ec5e:	jae    0x40ecc8
  40ec60:	pop    rdi
  40ec61:	je     0x40ecc4
  40ec63:	(bad)  
  40ec64:	ins    BYTE PTR es:[rdi],dx
  40ec65:	gs pop rdi
  40ec67:	jae    0x40ecd2
  40ec69:	jp     0x40ecd0
  40ec6b:	add    BYTE PTR [rdx+0x685f6701],dh
  40ec71:	(bad)  
  40ec72:	jae    0x40ecdc
  40ec74:	pop    rdi
  40ec75:	je     0x40ecd8
  40ec77:	(bad)  
  40ec78:	ins    BYTE PTR es:[rdi],dx
  40ec79:	gs pop rdi
  40ec7b:	jne    0x40eceb
  40ec7d:	jb     0x40ece4
  40ec7f:	data16 add BYTE PTR [rax],al
  40ec82:	add    BYTE PTR [rax],al
  40ec84:	adc    eax,DWORD PTR [rdx]
  40ec86:	addr32 pop rdi
  40ec88:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40ec8c:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7266
  40ec93:	gs add BYTE PTR gs:[rax],al
  40ec97:	add    BYTE PTR [rcx],bl
  40ec99:	add    ah,BYTE PTR [rdi+0x5f]
  40ec9c:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40eca0:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6567
  40eca7:	je     0x40ed08
  40eca9:	addr32 jb 0x40ed1b
  40ecac:	jne    0x40ed1e
  40ecae:	jae    0x40ecb0
  40ecb0:	sbb    eax,0x6b5f6702
  40ecb5:	gs jns 0x40ed17
  40ecb8:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6567
  40ecbf:	je     0x40ed20
  40ecc1:	imul   esp,DWORD PTR [rbp+0x79],0x73
  40ecc5:	add    BYTE PTR [rax],al
  40ecc7:	add    BYTE PTR [rdx+rax*1],ah
  40ecca:	addr32 pop rdi
  40eccc:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40ecd0:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6567
  40ecd7:	je     0x40ed38
  40ecd9:	jbe    0x40ed3c
  40ecdb:	ins    BYTE PTR es:[rdi],dx
  40ecdc:	jne    0x40ed43
  40ecde:	add    BYTE PTR [rax],al
  40ece0:	sub    al,BYTE PTR [rdx]
  40ece2:	addr32 pop rdi
  40ece4:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40ece8:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6f6c
  40ecef:	(bad)  
  40ecf0:	fs pop rdi
  40ecf2:	data16 jb 0x40ed64
  40ecf5:	ins    DWORD PTR es:[rdi],dx
  40ecf6:	pop    rdi
  40ecf7:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x22b
  40ecfe:	addr32 pop rdi
  40ed00:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40ed04:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x656e
  40ed0b:	ja     0x40ed0d
  40ed0d:	add    BYTE PTR [rax],al
  40ed0f:	add    BYTE PTR [rbp+0x6d5f6702],dl
  40ed15:	(bad)  
  40ed16:	ins    BYTE PTR es:[rdi],dx
  40ed17:	ins    BYTE PTR es:[rdi],dx
  40ed18:	outs   dx,DWORD PTR ds:[rsi]
  40ed19:	movsxd eax,DWORD PTR [rax]
  40ed1b:	add    BYTE PTR [rdi+0x6d5f6702],dl
  40ed21:	(bad)  
  40ed22:	ins    BYTE PTR es:[rdi],dx
  40ed23:	ins    BYTE PTR es:[rdi],dx
  40ed24:	outs   dx,DWORD PTR ds:[rsi]
  40ed25:	movsxd esi,DWORD PTR [rax]
  40ed27:	pop    rdi
  40ed28:	outs   dx,BYTE PTR ds:[rsi]
  40ed29:	add    BYTE PTR [rax],al
  40ed2b:	add    BYTE PTR [rcx+0x6d5f6702],ah
  40ed31:	(bad)  
  40ed32:	jb     0x40ed9f
  40ed34:	jne    0x40eda6
  40ed36:	pop    rdi
  40ed37:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40ed3a:	ins    BYTE PTR es:[rdi],dx
  40ed3b:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x61]
  40ed40:	je     0x40edb6
  40ed42:	jb     0x40edad
  40ed44:	(bad)  
  40ed45:	jne    0x40edbb
  40ed47:	gs jae 0x40ed4a
  40ed4a:	add    BYTE PTR [rax],al
  40ed4c:	movabs ds:0x756b72616d5f6702,al
  40ed55:	jo     0x40edb6
  40ed57:	gs jb  0x40edcc
  40ed5a:	outs   dx,DWORD PTR ds:[rsi]
  40ed5b:	jb     0x40edbc
  40ed5d:	jno    0x40edd4
  40ed5f:	(bad)  
  40ed60:	jb     0x40edcd
  40ed62:	add    BYTE PTR [rax],al
  40ed64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40ed65:	add    ah,BYTE PTR [rdi+0x5f]
  40ed68:	ins    DWORD PTR es:[rdi],dx
  40ed69:	(bad)  
  40ed6a:	jb     0x40edd7
  40ed6c:	jne    0x40edde
  40ed6e:	pop    rdi
  40ed6f:	jo     0x40edd2
  40ed71:	jb     0x40ede6
  40ed73:	gs pop rdi
  40ed75:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ed78:	je     0x40eddf
  40ed7a:	js     0x40edf0
  40ed7c:	pop    rdi
  40ed7d:	outs   dx,BYTE PTR gs:[rsi]
  40ed7f:	fs pop rdi
  40ed81:	jo     0x40ede4
  40ed83:	jb     0x40edf8
  40ed85:	add    BYTE PTR gs:[rax],al
  40ed88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40ed89:	add    ah,BYTE PTR [rdi+0x5f]
  40ed8c:	ins    DWORD PTR es:[rdi],dx
  40ed8d:	(bad)  
  40ed8e:	jb     0x40edfb
  40ed90:	jne    0x40ee02
  40ed92:	pop    rdi
  40ed93:	jo     0x40edf6
  40ed95:	jb     0x40ee0a
  40ed97:	gs pop rdi
  40ed99:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ed9c:	je     0x40ee03
  40ed9e:	js     0x40ee14
  40eda0:	pop    rdi
  40eda1:	data16 jb 0x40ee09
  40eda4:	add    BYTE PTR gs:[rax],al
  40eda7:	add    BYTE PTR [rsi+0x6d5f6702],ah
  40edad:	(bad)  
  40edae:	jb     0x40ee1b
  40edb0:	jne    0x40ee22
  40edb2:	pop    rdi
  40edb3:	jo     0x40ee16
  40edb5:	jb     0x40ee2a
  40edb7:	gs pop rdi
  40edb9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40edbc:	je     0x40ee23
  40edbe:	js     0x40ee34
  40edc0:	pop    rdi
  40edc1:	addr32 gs je 0x40ee24
  40edc5:	gs ins BYTE PTR es:[rdi],dx
  40edc7:	gs ins DWORD PTR es:[rdi],dx
  40edc9:	outs   dx,BYTE PTR gs:[rsi]
  40edcb:	je     0x40edcd
  40edcd:	add    BYTE PTR [rax],al
  40edcf:	add    BYTE PTR [rdi+0x6d5f6702],ah
  40edd5:	(bad)  
  40edd6:	jb     0x40ee43
  40edd8:	jne    0x40ee4a
  40edda:	pop    rdi
  40eddb:	jo     0x40ee3e
  40eddd:	jb     0x40ee52
  40eddf:	gs pop rdi
  40ede1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ede4:	je     0x40ee4b
  40ede6:	js     0x40ee5c
  40ede8:	pop    rdi
  40ede9:	addr32 gs je 0x40ee4c
  40eded:	gs ins BYTE PTR es:[rdi],dx
  40edef:	gs ins DWORD PTR es:[rdi],dx
  40edf1:	outs   dx,BYTE PTR gs:[rsi]
  40edf3:	je     0x40ee54
  40edf5:	jae    0x40ee6b
  40edf7:	(bad)  
  40edf8:	movsxd ebp,DWORD PTR [rbx+0x0]
  40edfb:	add    BYTE PTR [rax+0x6d5f6702],ch
  40ee01:	(bad)  
  40ee02:	jb     0x40ee6f
  40ee04:	jne    0x40ee76
  40ee06:	pop    rdi
  40ee07:	jo     0x40ee6a
  40ee09:	jb     0x40ee7e
  40ee0b:	gs pop rdi
  40ee0d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ee10:	je     0x40ee77
  40ee12:	js     0x40ee88
  40ee14:	pop    rdi
  40ee15:	addr32 gs je 0x40ee78
  40ee19:	jo     0x40ee8a
  40ee1b:	jae    0x40ee86
  40ee1d:	je     0x40ee88
  40ee1f:	outs   dx,DWORD PTR ds:[rsi]
  40ee20:	outs   dx,BYTE PTR ds:[rsi]
  40ee21:	add    BYTE PTR [rax],al
  40ee23:	add    BYTE PTR [rdx+0x6d5f6702],ch
  40ee29:	(bad)  
  40ee2a:	jb     0x40ee97
  40ee2c:	jne    0x40ee9e
  40ee2e:	pop    rdi
  40ee2f:	jo     0x40ee92
  40ee31:	jb     0x40eea6
  40ee33:	gs pop rdi
  40ee35:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ee38:	je     0x40ee9f
  40ee3a:	js     0x40eeb0
  40ee3c:	pop    rdi
  40ee3d:	outs   dx,BYTE PTR ds:[rsi]
  40ee3e:	gs ja  0x40ee41
  40ee41:	add    BYTE PTR [rax],al
  40ee43:	add    BYTE PTR [rbx+0x6d5f6702],ch
  40ee49:	(bad)  
  40ee4a:	jb     0x40eeb7
  40ee4c:	jne    0x40eebe
  40ee4e:	pop    rdi
  40ee4f:	jo     0x40eeb2
  40ee51:	jb     0x40eec6
  40ee53:	gs pop rdi
  40ee55:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ee58:	je     0x40eebf
  40ee5a:	js     0x40eed0
  40ee5c:	pop    rdi
  40ee5d:	jo     0x40eec0
  40ee5f:	jb     0x40eed4
  40ee61:	add    BYTE PTR gs:[rax],al
  40ee64:	add    DWORD PTR [rbx],eax
  40ee66:	addr32 pop rdi
  40ee68:	outs   dx,DWORD PTR ds:[rsi]
  40ee69:	jo     0x40eedf
  40ee6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40ee72:	je     0x40eed9
  40ee74:	js     0x40eeea
  40ee76:	pop    rdi
  40ee77:	(bad)  
  40ee78:	fs fs pop rdi
  40ee7b:	ins    DWORD PTR es:[rdi],dx
  40ee7c:	(bad)  
  40ee7d:	imul   ebp,DWORD PTR [rsi+0x5f],0x72746e65
  40ee84:	imul   esp,DWORD PTR [rbp+0x73],0x67030200
  40ee8b:	pop    rdi
  40ee8c:	outs   dx,DWORD PTR ds:[rsi]
  40ee8d:	jo     0x40ef03
  40ee8f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40ee96:	je     0x40eefd
  40ee98:	js     0x40ef0e
  40ee9a:	pop    rdi
  40ee9b:	data16 jb 0x40ef03
  40ee9e:	add    BYTE PTR gs:[rdx],cl
  40eea1:	add    esp,DWORD PTR [rdi+0x5f]
  40eea4:	outs   dx,DWORD PTR ds:[rsi]
  40eea5:	jo     0x40ef1b
  40eea7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40eeae:	je     0x40ef15
  40eeb0:	js     0x40ef26
  40eeb2:	pop    rdi
  40eeb3:	outs   dx,BYTE PTR ds:[rsi]
  40eeb4:	gs ja  0x40eeb7
  40eeb7:	add    BYTE PTR [rbx],cl
  40eeb9:	add    esp,DWORD PTR [rdi+0x5f]
  40eebc:	outs   dx,DWORD PTR ds:[rsi]
  40eebd:	jo     0x40ef33
  40eebf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40eec6:	je     0x40ef2d
  40eec8:	js     0x40ef3e
  40eeca:	pop    rdi
  40eecb:	jo     0x40ef2e
  40eecd:	jb     0x40ef42
  40eecf:	add    BYTE PTR gs:[rax],al
  40eed2:	add    BYTE PTR [rax],al
  40eed4:	adc    al,BYTE PTR [rbx]
  40eed6:	addr32 pop rdi
  40eed8:	outs   dx,DWORD PTR ds:[rsi]
  40eed9:	jo     0x40ef4f
  40eedb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40eee2:	je     0x40ef49
  40eee4:	js     0x40ef5a
  40eee6:	pop    rdi
  40eee7:	jae    0x40ef4e
  40eee9:	je     0x40ef4a
  40eeeb:	jae    0x40ef62
  40eeed:	ins    DWORD PTR es:[rdi],dx
  40eeee:	ins    DWORD PTR es:[rdi],dx
  40eeef:	(bad)  
  40eef0:	jb     0x40ef6b
  40eef2:	add    BYTE PTR [rax],al
  40eef4:	adc    al,0x3
  40eef6:	addr32 pop rdi
  40eef8:	outs   dx,DWORD PTR ds:[rsi]
  40eef9:	jo     0x40ef6f
  40eefb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40ef02:	je     0x40ef69
  40ef04:	js     0x40ef7a
  40ef06:	pop    rdi
  40ef07:	jae    0x40ef6e
  40ef09:	je     0x40ef6a
  40ef0b:	je     0x40ef7f
  40ef0d:	(bad)  
  40ef0e:	outs   dx,BYTE PTR ds:[rsi]
  40ef0f:	jae    0x40ef7d
  40ef11:	(bad)  
  40ef12:	je     0x40ef7d
  40ef14:	outs   dx,DWORD PTR ds:[rsi]
  40ef15:	outs   dx,BYTE PTR ds:[rsi]
  40ef16:	pop    rdi
  40ef17:	outs   dx,DWORD PTR fs:[rsi]
  40ef19:	ins    DWORD PTR es:[rdi],dx
  40ef1a:	(bad)  
  40ef1b:	imul   ebp,DWORD PTR [rsi+0x0],0x32e0000
  40ef22:	addr32 pop rdi
  40ef24:	jo     0x40ef98
  40ef26:	imul   di,WORD PTR gs:[rax+0x5f],0x7265
  40ef2d:	jb     0x40ef9e
  40ef2f:	jb     0x40ef31
  40ef31:	add    BYTE PTR [rax],al
  40ef33:	add    BYTE PTR [rax],dh
  40ef35:	add    esp,DWORD PTR [rdi+0x5f]
  40ef38:	jo     0x40efac
  40ef3a:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  40ef41:	add    BYTE PTR [rax],al
  40ef43:	add    BYTE PTR [rcx],bh
  40ef45:	add    esp,DWORD PTR [rdi+0x5f]
  40ef48:	jo     0x40efbe
  40ef4a:	jb     0x40efab
  40ef4c:	(bad)  
  40ef4d:	jb     0x40efc1
  40ef4f:	(bad)  
  40ef50:	jns    0x40efb1
  40ef52:	(bad)  
  40ef53:	fs add BYTE PTR fs:[rax],al
  40ef57:	add    BYTE PTR [rbx],bh
  40ef59:	add    esp,DWORD PTR [rdi+0x5f]
  40ef5c:	jo     0x40efd2
  40ef5e:	jb     0x40efbf
  40ef60:	(bad)  
  40ef61:	jb     0x40efd5
  40ef63:	(bad)  
  40ef64:	jns    0x40efc5
  40ef66:	data16 jb 0x40efce
  40ef69:	add    BYTE PTR gs:[rax],al
  40ef6c:	cmp    eax,0x705f6703
  40ef71:	je     0x40efe5
  40ef73:	pop    rdi
  40ef74:	(bad)  
  40ef75:	jb     0x40efe9
  40ef77:	(bad)  
  40ef78:	jns    0x40efd9
  40ef7a:	outs   dx,BYTE PTR ds:[rsi]
  40ef7b:	gs ja  0x40ef7e
  40ef7e:	add    BYTE PTR [rax],al
  40ef80:	add    rsp,QWORD PTR [r15+0x5f]
  40ef84:	jo     0x40effa
  40ef86:	jb     0x40efe7
  40ef88:	(bad)  
  40ef89:	jb     0x40effd
  40ef8b:	(bad)  
  40ef8c:	jns    0x40efed
  40ef8e:	jae    0x40efff
  40ef90:	jb     0x40f006
  40ef92:	add    BYTE PTR [rax],al
  40ef94:	push   rdi
  40ef95:	add    esp,DWORD PTR [rdi+0x5f]
  40ef98:	jno    0x40f00f
  40ef9a:	gs jne 0x40f002
  40ef9d:	pop    rdi
  40ef9e:	data16 jb 0x40f006
  40efa1:	add    BYTE PTR gs:[rax],al
  40efa4:	pop    rdi
  40efa5:	add    esp,DWORD PTR [rdi+0x5f]
  40efa8:	jno    0x40f01f
  40efaa:	gs jne 0x40f012
  40efad:	pop    rdi
  40efae:	imul   esi,DWORD PTR [rbx+0x5f],0x74706d65
  40efb5:	jns    0x40efb7
  40efb7:	add    BYTE PTR [rcx+0x3],ah
  40efba:	addr32 pop rdi
  40efbc:	jno    0x40f033
  40efbe:	gs jne 0x40f026
  40efc1:	pop    rdi
  40efc2:	outs   dx,BYTE PTR ds:[rsi]
  40efc3:	gs ja  0x40efc6
  40efc6:	add    BYTE PTR [rax],al
  40efc8:	push   0x715f6703
  40efcd:	jne    0x40f034
  40efcf:	jne    0x40f036
  40efd1:	pop    rdi
  40efd2:	jo     0x40f043
  40efd4:	jo     0x40f035
  40efd6:	push   0x646165
  40efdb:	add    BYTE PTR [rdx+0x3],dh
  40efde:	addr32 pop rdi
  40efe0:	jno    0x40f057
  40efe2:	gs jne 0x40f04a
  40efe5:	pop    rdi
  40efe6:	jo     0x40f05d
  40efe8:	jae    0x40f052
  40efea:	pop    rdi
  40efeb:	je     0x40f04e
  40efed:	imul   ebp,DWORD PTR [rax+rax*1-0x4a],0x725f6703
  40eff5:	gs je  0x40f06d
  40eff8:	jb     0x40f068
  40effa:	pop    rdi
  40effb:	imul   esp,DWORD PTR [rsi+0x5f],0x6c696166
  40f002:	pop    rdi
  40f003:	ja     0x40f066
  40f005:	jb     0x40f075
  40f007:	imul   ebp,DWORD PTR [rsi+0x67],0x3fc0000
  40f00e:	addr32 pop rdi
  40f010:	jae    0x40f077
  40f012:	je     0x40f073
  40f014:	gs jb  0x40f089
  40f017:	outs   dx,DWORD PTR ds:[rsi]
  40f018:	jb     0x40f01a
  40f01a:	add    BYTE PTR [rax],al
  40f01c:	std    
  40f01d:	add    esp,DWORD PTR [rdi+0x5f]
  40f020:	jae    0x40f087
  40f022:	je     0x40f083
  40f024:	gs jb  0x40f099
  40f027:	outs   dx,DWORD PTR ds:[rsi]
  40f028:	jb     0x40f089
  40f02a:	ins    BYTE PTR es:[rdi],dx
  40f02b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6c61
  40f033:	add    BYTE PTR [rsi],al
  40f035:	add    al,0x67
  40f037:	pop    rdi
  40f038:	jae    0x40f0a6
  40f03a:	imul   esp,DWORD PTR [rbx+0x65],0x6c6c615f
  40f041:	outs   dx,DWORD PTR ds:[rsi]
  40f042:	movsxd eax,DWORD PTR [rax]
  40f044:	(bad)  
  40f045:	add    al,0x67
  40f047:	pop    rdi
  40f048:	jae    0x40f0b6
  40f04a:	imul   esp,DWORD PTR [rbx+0x65],0x6c6c615f
  40f051:	outs   dx,DWORD PTR ds:[rsi]
  40f052:	movsxd esi,DWORD PTR [rax]
  40f054:	add    BYTE PTR [rax],al
  40f056:	add    BYTE PTR [rax],al
  40f058:	or     DWORD PTR [rdi+riz*2],eax
  40f05b:	pop    rdi
  40f05c:	jae    0x40f0ca
  40f05e:	imul   esp,DWORD PTR [rbx+0x65],0x6572665f
  40f065:	xor    DWORD PTR gs:[rax],eax
  40f068:	(bad)  
  40f069:	add    al,0x67
  40f06b:	pop    rdi
  40f06c:	jae    0x40f0da
  40f06e:	imul   esi,DWORD PTR [rbx+0x74],0x6572665f
  40f075:	add    BYTE PTR gs:[rax],al
  40f078:	and    eax,0x735f6704
  40f07d:	ins    BYTE PTR es:[rdi],dx
  40f07e:	imul   esi,DWORD PTR [rbx+0x74],0x6572705f
  40f085:	jo     0x40f0ec
  40f087:	outs   dx,BYTE PTR ds:[rsi]
  40f088:	add    BYTE PTR fs:[rax],al
  40f08b:	add    BYTE PTR [rsi+0x4],ch
  40f08e:	addr32 pop rdi
  40f090:	jae    0x40f106
  40f092:	jb     0x40f0f3
  40f094:	gs jno 0x40f10c
  40f097:	(bad)  
  40f098:	ins    BYTE PTR es:[rdi],dx
  40f099:	add    BYTE PTR [rax],al
  40f09b:	add    BYTE PTR [rdi+0x4],ch
  40f09e:	addr32 pop rdi
  40f0a0:	jae    0x40f116
  40f0a2:	jb     0x40f103
  40f0a4:	push   0x705f7361
  40f0a9:	jb     0x40f110
  40f0ab:	imul   di,WORD PTR [rax+0x0],0x7000
  40f0b1:	add    al,0x67
  40f0b3:	pop    rdi
  40f0b4:	jae    0x40f12a
  40f0b6:	jb     0x40f117
  40f0b8:	push   0x735f7361
  40f0bd:	jne    0x40f125
  40f0bf:	imul   di,WORD PTR [rax+0x0],0x7100
  40f0c5:	add    al,0x67
  40f0c7:	pop    rdi
  40f0c8:	jae    0x40f13e
  40f0ca:	jb     0x40f12b
  40f0cc:	push   0x687361
  40f0d1:	add    BYTE PTR [rax],al
  40f0d3:	add    BYTE PTR [rsp+rax*1+0x67],bh
  40f0d7:	pop    rdi
  40f0d8:	jae    0x40f14e
  40f0da:	jb     0x40f13f
  40f0dc:	outs   dx,DWORD PTR ds:[rsi]
  40f0dd:	outs   dx,BYTE PTR ds:[rsi]
  40f0de:	movsxd esp,DWORD PTR [rcx+0x74]
  40f0e1:	add    BYTE PTR [rax],al
  40f0e3:	add    BYTE PTR [rdi+0x4],bh
  40f0e6:	addr32 pop rdi
  40f0e8:	jae    0x40f15e
  40f0ea:	jb     0x40f150
  40f0ec:	jne    0x40f15e
  40f0ee:	add    BYTE PTR [rax],al
  40f0f0:	test   DWORD PTR [rdi+riz*2],eax
  40f0f3:	pop    rdi
  40f0f4:	jae    0x40f16a
  40f0f6:	jb     0x40f15e
  40f0f8:	jb     0x40f15f
  40f0fa:	gs jbe 0x40f0fd
  40f0fd:	add    BYTE PTR [rax],al
  40f0ff:	add    BYTE PTR [rax+0x735f6704],cl
  40f105:	je     0x40f179
  40f107:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40f10e:	outs   dx,BYTE PTR gs:[rsi]
  40f110:	fs pop rdi
  40f112:	ins    BYTE PTR es:[rdi],dx
  40f113:	outs   dx,BYTE PTR gs:[rsi]
  40f115:	add    BYTE PTR [rax],al
  40f117:	add    BYTE PTR [rax+0x735f6704],bl
  40f11d:	je     0x40f191
  40f11f:	imul   ebp,DWORD PTR [rsi+0x67],0x6172655f
  40f126:	jae    0x40f18d
  40f128:	add    BYTE PTR [rax],al
  40f12a:	add    BYTE PTR [rax],al
  40f12c:	cdq    
  40f12d:	add    al,0x67
  40f12f:	pop    rdi
  40f130:	jae    0x40f1a6
  40f132:	jb     0x40f19d
  40f134:	outs   dx,BYTE PTR ds:[rsi]
  40f135:	addr32 pop rdi
  40f137:	data16 jb 0x40f19f
  40f13a:	add    BYTE PTR gs:[rax+0x735f6704],ah
  40f141:	je     0x40f1b5
  40f143:	imul   ebp,DWORD PTR [rsi+0x67],0x77656e5f
  40f14a:	add    BYTE PTR [rax],al
  40f14c:	movabs eax,ds:0x6e697274735f6704
  40f155:	addr32 pop rdi
  40f157:	outs   dx,BYTE PTR ds:[rsi]
  40f158:	gs ja  0x40f1ba
  40f15b:	ins    BYTE PTR es:[rdi],dx
  40f15c:	outs   dx,BYTE PTR gs:[rsi]
  40f15e:	add    BYTE PTR [rax],al
  40f160:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f161:	add    al,0x67
  40f163:	pop    rdi
  40f164:	jae    0x40f1da
  40f166:	jb     0x40f1d1
  40f168:	outs   dx,BYTE PTR ds:[rsi]
  40f169:	addr32 pop rdi
  40f16b:	jo     0x40f1df
  40f16d:	gs jo  0x40f1d5
  40f170:	outs   dx,BYTE PTR ds:[rsi]
  40f171:	fs pop rdi
  40f173:	ins    BYTE PTR es:[rdi],dx
  40f174:	outs   dx,BYTE PTR gs:[rsi]
  40f176:	add    BYTE PTR [rax],al
  40f178:	stos   DWORD PTR es:[rdi],eax
  40f179:	add    al,0x67
  40f17b:	pop    rdi
  40f17c:	jae    0x40f1f2
  40f17e:	jb     0x40f1e9
  40f180:	outs   dx,BYTE PTR ds:[rsi]
  40f181:	addr32 pop rdi
  40f183:	je     0x40f1f7
  40f185:	jne    0x40f1f5
  40f187:	movsxd esp,DWORD PTR [rcx+0x74]
  40f18a:	add    BYTE PTR gs:[rbx+0x5],dh
  40f18e:	addr32 pop rdi
  40f190:	jne    0x40f200
  40f192:	ins    BYTE PTR es:[rdi],dx
  40f193:	imul   ebp,DWORD PTR [rsi+0x6b],0x5970000
  40f19a:	addr32 pop rdi
  40f19c:	jbe    0x40f1ff
  40f19e:	jb     0x40f209
  40f1a0:	(bad)  
  40f1a1:	outs   dx,BYTE PTR ds:[rsi]
  40f1a2:	je     0x40f203
  40f1a4:	(bad)  
  40f1a5:	jne    0x40f210
  40f1a7:	ins    BYTE PTR es:[rdi],dx
  40f1a8:	fs gs jb 0x40f20b
  40f1ac:	(bad)  
  40f1ad:	fs add BYTE PTR fs:[rcx+0x765f6705],bl
  40f1b5:	(bad)  
  40f1b6:	jb     0x40f221
  40f1b8:	(bad)  
  40f1b9:	outs   dx,BYTE PTR ds:[rsi]
  40f1ba:	je     0x40f21b
  40f1bc:	(bad)  
  40f1bd:	jne    0x40f228
  40f1bf:	ins    BYTE PTR es:[rdi],dx
  40f1c0:	fs gs jb 0x40f223
  40f1c4:	(bad)  
  40f1c5:	fs fs pop rdi
  40f1c8:	jbe    0x40f22b
  40f1ca:	ins    BYTE PTR es:[rdi],dx
  40f1cb:	jne    0x40f232
  40f1cd:	add    BYTE PTR [rax],al
  40f1cf:	add    BYTE PTR [rbp+rax*1+0x61765f67],bl
  40f1d6:	jb     0x40f241
  40f1d8:	(bad)  
  40f1d9:	outs   dx,BYTE PTR ds:[rsi]
  40f1da:	je     0x40f23b
  40f1dc:	(bad)  
  40f1dd:	jne    0x40f248
  40f1df:	ins    BYTE PTR es:[rdi],dx
  40f1e0:	fs gs jb 0x40f243
  40f1e4:	outs   dx,BYTE PTR gs:[rsi]
  40f1e6:	add    BYTE PTR fs:[rbp+0x765f6705],bl
  40f1ed:	(bad)  
  40f1ee:	jb     0x40f259
  40f1f0:	(bad)  
  40f1f1:	outs   dx,BYTE PTR ds:[rsi]
  40f1f2:	je     0x40f253
  40f1f4:	(bad)  
  40f1f5:	jne    0x40f260
  40f1f7:	ins    BYTE PTR es:[rdi],dx
  40f1f8:	fs gs jb 0x40f25b
  40f1fc:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  40f203:	add    BYTE PTR [rdx+0x765f6705],ah
  40f209:	(bad)  
  40f20a:	jb     0x40f275
  40f20c:	(bad)  
  40f20d:	outs   dx,BYTE PTR ds:[rsi]
  40f20e:	je     0x40f26f
  40f210:	(bad)  
  40f211:	jns    0x40f287
  40f213:	gs jae 0x40f28d
  40f216:	(bad)  
  40f217:	jo     0x40f219
  40f219:	add    BYTE PTR [rax],al
  40f21b:	add    BYTE PTR [rbp+rax*1+0x61765f67],ah
  40f222:	jb     0x40f28d
  40f224:	(bad)  
  40f225:	outs   dx,BYTE PTR ds:[rsi]
  40f226:	je     0x40f287
  40f228:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  40f22c:	jae    0x40f297
  40f22e:	data16 jns 0x40f231
  40f231:	add    BYTE PTR [rax],al
  40f233:	add    BYTE PTR [rbp+0x765f6705],ah
  40f239:	(bad)  
  40f23a:	jb     0x40f2a5
  40f23c:	(bad)  
  40f23d:	outs   dx,BYTE PTR ds:[rsi]
  40f23e:	je     0x40f29f
  40f240:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40f243:	jo     0x40f2a6
  40f245:	jb     0x40f2ac
  40f247:	add    dl,cl
  40f249:	add    eax,0x61765f67
  40f24e:	jb     0x40f2b9
  40f250:	(bad)  
  40f251:	outs   dx,BYTE PTR ds:[rsi]
  40f252:	je     0x40f2b3
  40f254:	addr32 gs je 0x40f2b7
  40f258:	outs   dx,BYTE PTR ds:[rsi]
  40f259:	outs   dx,DWORD PTR ds:[rsi]
  40f25a:	jb     0x40f2c9
  40f25c:	(bad)  
  40f25d:	ins    BYTE PTR es:[rdi],dx
  40f25e:	pop    rdi
  40f25f:	outs   dx,WORD PTR ds:[rsi]
  40f261:	jb     0x40f2d0
  40f263:	add    ah,cl
  40f265:	add    eax,0x61765f67
  40f26a:	jb     0x40f2d5
  40f26c:	(bad)  
  40f26d:	outs   dx,BYTE PTR ds:[rsi]
  40f26e:	je     0x40f2cf
  40f270:	addr32 gs je 0x40f2d3
  40f274:	jae    0x40f2df
  40f276:	jp     0x40f2dd
  40f278:	add    BYTE PTR [rax],al
  40f27a:	add    BYTE PTR [rax],al
  40f27c:	int    0x5
  40f27e:	addr32 pop rdi
  40f280:	jbe    0x40f2e3
  40f282:	jb     0x40f2ed
  40f284:	(bad)  
  40f285:	outs   dx,BYTE PTR ds:[rsi]
  40f286:	je     0x40f2e7
  40f288:	addr32 gs je 0x40f2eb
  40f28c:	jae    0x40f302
  40f28e:	jb     0x40f2f9
  40f290:	outs   dx,BYTE PTR ds:[rsi]
  40f291:	add    BYTE PTR [eax],al
  40f294:	fild   WORD PTR [rip+0x61765f67]        # 0x61b75201
  40f29a:	jb     0x40f305
  40f29c:	(bad)  
  40f29d:	outs   dx,BYTE PTR ds:[rsi]
  40f29e:	je     0x40f2ff
  40f2a0:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  40f2a8:	je     0x40f2aa
  40f2aa:	add    BYTE PTR [rax],al
  40f2ac:	in     al,0x5
  40f2ae:	addr32 pop rdi
  40f2b0:	jbe    0x40f313
  40f2b2:	jb     0x40f31d
  40f2b4:	(bad)  
  40f2b5:	outs   dx,BYTE PTR ds:[rsi]
  40f2b6:	je     0x40f317
  40f2b8:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x78656e5f
  40f2c0:	je     0x40f321
  40f2c2:	jbe    0x40f325
  40f2c4:	ins    BYTE PTR es:[rdi],dx
  40f2c5:	jne    0x40f32c
  40f2c7:	add    dl,dh
  40f2c9:	add    eax,0x61765f67
  40f2ce:	jb     0x40f339
  40f2d0:	(bad)  
  40f2d1:	outs   dx,BYTE PTR ds:[rsi]
  40f2d2:	je     0x40f333
  40f2d4:	outs   dx,BYTE PTR ds:[rsi]
  40f2d5:	gs ja  0x40f337
  40f2d8:	data16 jb 0x40f34a
  40f2db:	ins    DWORD PTR es:[rdi],dx
  40f2dc:	pop    rdi
  40f2dd:	fs (bad) 
  40f2df:	je     0x40f342
  40f2e1:	add    BYTE PTR [rax],al
  40f2e3:	add    dh,bh
  40f2e5:	add    eax,0x61765f67
  40f2ea:	jb     0x40f355
  40f2ec:	(bad)  
  40f2ed:	outs   dx,BYTE PTR ds:[rsi]
  40f2ee:	je     0x40f34f
  40f2f0:	outs   dx,BYTE PTR ds:[rsi]
  40f2f1:	gs ja  0x40f353
  40f2f4:	jae    0x40f36a
  40f2f6:	jb     0x40f361
  40f2f8:	outs   dx,BYTE PTR ds:[rsi]
  40f2f9:	add    BYTE PTR [eax],al
  40f2fc:	(bad)  
  40f2fd:	(bad)  
  40f2fe:	addr32 pop rdi
  40f300:	jbe    0x40f363
  40f302:	jb     0x40f36d
  40f304:	(bad)  
  40f305:	outs   dx,BYTE PTR ds:[rsi]
  40f306:	je     0x40f367
  40f308:	outs   dx,BYTE PTR ds:[rsi]
  40f309:	gs ja  0x40f36b
  40f30c:	jbe    0x40f36f
  40f30e:	jb     0x40f379
  40f310:	(bad)  
  40f311:	outs   dx,BYTE PTR ds:[rsi]
  40f312:	je     0x40f314
  40f314:	(bad)  
  40f315:	(bad)  
  40f316:	addr32 pop rdi
  40f318:	jbe    0x40f37b
  40f31a:	jb     0x40f385
  40f31c:	(bad)  
  40f31d:	outs   dx,BYTE PTR ds:[rsi]
  40f31e:	je     0x40f37f
  40f320:	jo     0x40f383
  40f322:	jb     0x40f397
  40f324:	add    BYTE PTR gs:[rax],al
  40f327:	add    BYTE PTR [rip+0x765f6706],cl        # 0x76a05a33
  40f32d:	(bad)  
  40f32e:	jb     0x40f399
  40f330:	(bad)  
  40f331:	outs   dx,BYTE PTR ds:[rsi]
  40f332:	je     0x40f393
  40f334:	jb     0x40f39b
  40f336:	data16 add BYTE PTR [rsi],cl
  40f339:	(bad)  
  40f33a:	addr32 pop rdi
  40f33c:	jbe    0x40f39f
  40f33e:	jb     0x40f3a9
  40f340:	(bad)  
  40f341:	outs   dx,BYTE PTR ds:[rsi]
  40f342:	je     0x40f3a3
  40f344:	jb     0x40f3ab
  40f346:	pop    di
  40f348:	jae    0x40f3b3
  40f34a:	outs   dx,BYTE PTR ds:[rsi]
  40f34b:	imul   eax,DWORD PTR [rax],0x0
  40f34e:	add    BYTE PTR [rax],al
  40f350:	sbb    BYTE PTR [rsi],al
  40f352:	addr32 pop rdi
  40f354:	jbe    0x40f3b7
  40f356:	jb     0x40f3c1
  40f358:	(bad)  
  40f359:	outs   dx,BYTE PTR ds:[rsi]
  40f35a:	je     0x40f3bb
  40f35c:	jae    0x40f3d2
  40f35e:	outs   dx,DWORD PTR ds:[rsi]
  40f35f:	jb     0x40f3c6
  40f361:	add    BYTE PTR [rax],al
  40f363:	add    BYTE PTR [rdx],bl
  40f365:	(bad)  
  40f366:	addr32 pop rdi
  40f368:	jbe    0x40f3cb
  40f36a:	jb     0x40f3d5
  40f36c:	(bad)  
  40f36d:	outs   dx,BYTE PTR ds:[rsi]
  40f36e:	je     0x40f3cf
  40f370:	je     0x40f3eb
  40f372:	jo     0x40f3d9
  40f374:	pop    rdi
  40f375:	movsxd ebp,DWORD PTR [rax+0x65]
  40f378:	movsxd ebp,DWORD PTR [rbx+0x65]
  40f37b:	fs pop rdi
  40f37d:	add    BYTE PTR [rax],al
  40f37f:	add    BYTE PTR [rbx],bl
  40f381:	(bad)  
  40f382:	addr32 pop rdi
  40f384:	jbe    0x40f3e7
  40f386:	jb     0x40f3f1
  40f388:	(bad)  
  40f389:	outs   dx,BYTE PTR ds:[rsi]
  40f38a:	je     0x40f3eb
  40f38c:	je     0x40f407
  40f38e:	jo     0x40f3f5
  40f390:	pop    rdi
  40f391:	movsxd ebp,DWORD PTR [rdi+0x70]
  40f394:	jns    0x40f396
  40f396:	add    BYTE PTR [rax],al
  40f398:	sbb    al,0x6
  40f39a:	addr32 pop rdi
  40f39c:	jbe    0x40f3ff
  40f39e:	jb     0x40f409
  40f3a0:	(bad)  
  40f3a1:	outs   dx,BYTE PTR ds:[rsi]
  40f3a2:	je     0x40f403
  40f3a4:	je     0x40f41f
  40f3a6:	jo     0x40f40d
  40f3a8:	pop    rdi
  40f3a9:	fs jne 0x40f41c
  40f3ac:	pop    rdi
  40f3ad:	jae    0x40f423
  40f3af:	jb     0x40f41a
  40f3b1:	outs   dx,BYTE PTR ds:[rsi]
  40f3b2:	add    BYTE PTR [eip+0x765f6706],bl        # 0x76a05abf
  40f3b9:	(bad)  
  40f3ba:	jb     0x40f425
  40f3bc:	(bad)  
  40f3bd:	outs   dx,BYTE PTR ds:[rsi]
  40f3be:	je     0x40f41f
  40f3c0:	je     0x40f43b
  40f3c2:	jo     0x40f429
  40f3c4:	pop    rdi
  40f3c5:	gs ins BYTE PTR es:[rdi],dx
  40f3c7:	gs ins DWORD PTR es:[rdi],dx
  40f3c9:	outs   dx,BYTE PTR gs:[rsi]
  40f3cb:	je     0x40f3cd
  40f3cd:	add    BYTE PTR [rax],al
  40f3cf:	add    BYTE PTR [rsi],bl
  40f3d1:	(bad)  
  40f3d2:	addr32 pop rdi
  40f3d4:	jbe    0x40f437
  40f3d6:	jb     0x40f441
  40f3d8:	(bad)  
  40f3d9:	outs   dx,BYTE PTR ds:[rsi]
  40f3da:	je     0x40f43b
  40f3dc:	je     0x40f457
  40f3de:	jo     0x40f445
  40f3e0:	pop    rdi
  40f3e1:	gs jno 0x40f459
  40f3e4:	(bad)  
  40f3e5:	ins    BYTE PTR es:[rdi],dx
  40f3e6:	add    BYTE PTR [rax],al
  40f3e8:	and    BYTE PTR [rsi],al
  40f3ea:	addr32 pop rdi
  40f3ec:	jbe    0x40f44f
  40f3ee:	jb     0x40f459
  40f3f0:	(bad)  
  40f3f1:	outs   dx,BYTE PTR ds:[rsi]
  40f3f2:	je     0x40f453
  40f3f4:	je     0x40f46f
  40f3f6:	jo     0x40f45d
  40f3f8:	pop    rdi
  40f3f9:	data16 jb 0x40f461
  40f3fc:	add    BYTE PTR gs:[rax],al
  40f3ff:	add    BYTE PTR [rip+0x765f6706],ch        # 0x76a05b0b
  40f405:	(bad)  
  40f406:	jb     0x40f471
  40f408:	(bad)  
  40f409:	outs   dx,BYTE PTR ds:[rsi]
  40f40a:	je     0x40f46b
  40f40c:	je     0x40f487
  40f40e:	jo     0x40f475
  40f410:	pop    rdi
  40f411:	imul   esi,DWORD PTR [rbx+0x5f],0x61727261
  40f418:	jns    0x40f41a
  40f41a:	add    BYTE PTR [rax],al
  40f41c:	xor    al,BYTE PTR [rsi]
  40f41e:	addr32 pop rdi
  40f420:	jbe    0x40f483
  40f422:	jb     0x40f48d
  40f424:	(bad)  
  40f425:	outs   dx,BYTE PTR ds:[rsi]
  40f426:	je     0x40f487
  40f428:	je     0x40f4a3
  40f42a:	jo     0x40f491
  40f42c:	pop    rdi
  40f42d:	imul   esi,DWORD PTR [rbx+0x5f],0x6279616d
  40f434:	add    BYTE PTR gs:[rax],al
  40f437:	add    BYTE PTR [rax],bh
  40f439:	(bad)  
  40f43a:	addr32 pop rdi
  40f43c:	jbe    0x40f49f
  40f43e:	jb     0x40f4a9
  40f440:	(bad)  
  40f441:	outs   dx,BYTE PTR ds:[rsi]
  40f442:	je     0x40f4a3
  40f444:	je     0x40f4bf
  40f446:	jo     0x40f4ad
  40f448:	pop    rdi
  40f449:	outs   dx,BYTE PTR ds:[rsi]
  40f44a:	gs ja  0x40f44d
  40f44d:	add    BYTE PTR [rax],al
  40f44f:	add    BYTE PTR [rdi],bh
  40f451:	(bad)  
  40f452:	addr32 pop rdi
  40f454:	jbe    0x40f4b7
  40f456:	jb     0x40f4c1
  40f458:	(bad)  
  40f459:	outs   dx,BYTE PTR ds:[rsi]
  40f45a:	je     0x40f4bb
  40f45c:	je     0x40f4d7
  40f45e:	jo     0x40f4c5
  40f460:	pop    rdi
  40f461:	jae    0x40f4d7
  40f463:	jb     0x40f4ce
  40f465:	outs   dx,BYTE PTR ds:[rsi]
  40f466:	addr32 pop rdi
  40f468:	imul   esi,DWORD PTR [rbx+0x5f],0x696c6176
  40f46f:	add    BYTE PTR fs:[rax],al
  40f472:	add    BYTE PTR [rax],al
  40f474:	rex.X (bad) 
  40f476:	addr32 pop rdi
  40f478:	jbe    0x40f4db
  40f47a:	jb     0x40f4e5
  40f47c:	(bad)  
  40f47d:	outs   dx,BYTE PTR ds:[rsi]
  40f47e:	je     0x40f4df
  40f480:	jne    0x40f4f0
  40f482:	jb     0x40f4e9
  40f484:	data16 add BYTE PTR [rax],al
  40f487:	add    BYTE PTR [rip+0x62696c00],bl        # 0x62aa608d
  40f48d:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40f494:	outs   dx,BYTE PTR ds:[rsi]
  40f495:	fs pop rdi
  40f497:	je     0x40f4fe
  40f499:	js     0x40f50f
  40f49b:	outs   dx,DWORD PTR fs:[rsi]
  40f49d:	ins    DWORD PTR es:[rdi],dx
  40f49e:	(bad)  
  40f49f:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  40f4a6:	jae    0x40f50d
  40f4a8:	je     0x40f4aa
  40f4aa:	add    BYTE PTR [rax],al
  40f4ac:	(bad)  
  40f4ad:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40f4b1:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40f4b8:	outs   dx,BYTE PTR ds:[rsi]
  40f4b9:	fs je  0x40f521
  40f4bc:	js     0x40f532
  40f4be:	outs   dx,DWORD PTR fs:[rsi]
  40f4c0:	ins    DWORD PTR es:[rdi],dx
  40f4c1:	(bad)  
  40f4c2:	imul   ebp,DWORD PTR [rsi+0x0],0x24000000
  40f4c9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40f4cd:	imul   ebp,DWORD PTR [rsi+0x74],0x70665f6c
  40f4d4:	jb     0x40f53f
  40f4d6:	outs   dx,BYTE PTR ds:[rsi]
  40f4d7:	je     0x40f53f
  40f4d9:	add    BYTE PTR [rax],al
  40f4db:	add    BYTE PTR [rsi],ah
  40f4dd:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40f4e1:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  40f4e8:	je     0x40f55e
  40f4ea:	gs js  0x40f561
  40f4ed:	add    BYTE PTR [rax],al
  40f4ef:	add    BYTE PTR [rcx+0x0],al
  40f4f2:	ins    BYTE PTR es:[rdi],dx
  40f4f3:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40f4fa:	jae    0x40f561
  40f4fc:	je     0x40f56a
  40f4fe:	outs   dx,DWORD PTR ds:[rsi]
  40f4ff:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f502:	add    BYTE PTR gs:[rbp+0x0],al
  40f506:	ins    BYTE PTR es:[rdi],dx
  40f507:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40f50e:	je     0x40f575
  40f510:	js     0x40f586
  40f512:	outs   dx,DWORD PTR fs:[rsi]
  40f514:	ins    DWORD PTR es:[rdi],dx
  40f515:	(bad)  
  40f516:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  40f51d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40f521:	gs je  0x40f589
  40f524:	rex.XB jb 0x40f590
  40f527:	je     0x40f592
  40f529:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f52c:	push   rbx
  40f52d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f532:	outs   dx,BYTE PTR ds:[rsi]
  40f533:	add    al,bh
  40f535:	add    BYTE PTR [rbp+0x6e],al
  40f538:	je     0x40f59f
  40f53a:	jb     0x40f57f
  40f53c:	jb     0x40f5a7
  40f53e:	je     0x40f5a9
  40f540:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f543:	push   rbx
  40f544:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f549:	outs   dx,BYTE PTR ds:[rsi]
  40f54a:	add    BYTE PTR [rax],al
  40f54c:	int    0x1
  40f54e:	rex.RXB
  40f54f:	gs je  0x40f595
  40f552:	jne    0x40f5c6
  40f554:	jb     0x40f5bb
  40f556:	outs   dx,BYTE PTR ds:[rsi]
  40f557:	je     0x40f5a9
  40f559:	jb     0x40f5ca
  40f55b:	movsxd esp,DWORD PTR [rbp+0x73]
  40f55e:	jae    0x40f560
  40f560:	(bad)  
  40f561:	add    DWORD PTR [rdi+0x65],eax
  40f564:	je     0x40f5a9
  40f566:	jne    0x40f5da
  40f568:	jb     0x40f5cf
  40f56a:	outs   dx,BYTE PTR ds:[rsi]
  40f56b:	je     0x40f5bd
  40f56d:	jb     0x40f5de
  40f56f:	movsxd esp,DWORD PTR [rbp+0x73]
  40f572:	jae    0x40f5bd
  40f574:	fs add dl,dl
  40f577:	add    DWORD PTR [rdi+0x65],eax
  40f57a:	je     0x40f5bf
  40f57c:	jne    0x40f5f0
  40f57e:	jb     0x40f5e5
  40f580:	outs   dx,BYTE PTR ds:[rsi]
  40f581:	je     0x40f5d7
  40f583:	push   0x64616572
  40f588:	rex.WB
  40f589:	add    BYTE PTR fs:[rax],al
  40f58c:	adc    BYTE PTR [rdx],al
  40f58e:	rex.RXB
  40f58f:	gs je  0x40f5de
  40f592:	(bad)  
  40f593:	jae    0x40f609
  40f595:	rex.RB jb 0x40f60a
  40f598:	outs   dx,DWORD PTR ds:[rsi]
  40f599:	jb     0x40f59b
  40f59b:	add    BYTE PTR [rbx+0x2],dh
  40f59e:	rex.RXB
  40f59f:	gs je  0x40f5f5
  40f5a2:	je     0x40f605
  40f5a4:	jb     0x40f61a
  40f5a6:	jne    0x40f618
  40f5a8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40f5aa:	outs   dx,WORD PTR ds:[rsi]
  40f5ac:	add    BYTE PTR [r10+0x74654702],cl
  40f5b3:	push   rbx
  40f5b4:	jns    0x40f629
  40f5b6:	je     0x40f61d
  40f5b8:	ins    DWORD PTR es:[rdi],dx
  40f5b9:	push   rsp
  40f5ba:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40f5c1:	ins    BYTE PTR es:[rdi],dx
  40f5c2:	gs push rsp
  40f5c4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40f5cb:	gs je  0x40f622
  40f5ce:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40f5d5:	je     0x40f5d7
  40f5d7:	add    cl,bh
  40f5d9:	add    cl,BYTE PTR [rcx+0x6e]
  40f5dc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40f5e4:	rex.XB jb 0x40f650
  40f5e7:	je     0x40f652
  40f5e9:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f5ec:	push   rbx
  40f5ed:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f5f2:	outs   dx,BYTE PTR ds:[rsi]
  40f5f3:	add    BYTE PTR [rbx+0x3],cl
  40f5f6:	rex.WR
  40f5f7:	gs (bad) 
  40f5f9:	jbe    0x40f660
  40f5fb:	rex.XB jb 0x40f667
  40f5fe:	je     0x40f669
  40f600:	movsxd esp,DWORD PTR [rcx+0x6c]
  40f603:	push   rbx
  40f604:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40f609:	outs   dx,BYTE PTR ds:[rsi]
  40f60a:	add    BYTE PTR [rax],al
  40f60c:	mov    ebx,0x65755103
  40f611:	jb     0x40f68c
  40f613:	push   rax
  40f614:	gs jb  0x40f67d
  40f617:	outs   dx,DWORD PTR ds:[rsi]
  40f618:	jb     0x40f687
  40f61a:	(bad)  
  40f61b:	outs   dx,BYTE PTR ds:[rsi]
  40f61c:	movsxd esp,DWORD PTR [rbp+0x43]
  40f61f:	outs   dx,DWORD PTR ds:[rsi]
  40f620:	jne    0x40f690
  40f622:	je     0x40f689
  40f624:	jb     0x40f626
  40f626:	add    DWORD PTR [rdx+rdx*2],eax
  40f629:	je     0x40f697
  40f62b:	rex.B
  40f62c:	fs fs rex.RX jne 0x40f69f
  40f631:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40f635:	outs   dx,BYTE PTR ds:[rsi]
  40f636:	push   rsp
  40f637:	(bad)  
  40f638:	(bad)  
  40f639:	ins    BYTE PTR es:[rdi],dx
  40f63a:	add    BYTE PTR gs:[rdx],al
  40f63d:	add    al,0x52
  40f63f:	je     0x40f6ad
  40f641:	rex.XB (bad) 
  40f643:	jo     0x40f6b9
  40f645:	jne    0x40f6b9
  40f647:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40f64a:	outs   dx,BYTE PTR ds:[rsi]
  40f64b:	je     0x40f6b2
  40f64d:	js     0x40f6c3
  40f64f:	add    BYTE PTR [rcx],cl
  40f651:	add    al,0x52
  40f653:	je     0x40f6c1
  40f655:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40f657:	outs   dx,DWORD PTR ds:[rsi]
  40f658:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40f65c:	jne    0x40f6cc
  40f65e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40f662:	outs   dx,BYTE PTR ds:[rsi]
  40f663:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40f665:	je     0x40f6d9
  40f667:	jns    0x40f669
  40f669:	add    BYTE PTR [rax],dl
  40f66b:	add    al,0x52
  40f66d:	je     0x40f6db
  40f66f:	push   rsi
  40f670:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40f677:	outs   dx,BYTE PTR ds:[rsi]
  40f678:	ja     0x40f6e3
  40f67a:	outs   dx,BYTE PTR ds:[rsi]
  40f67b:	add    BYTE PTR fs:[rax],al
  40f67e:	lahf   
  40f67f:	add    al,0x53
  40f681:	gs je  0x40f6d9
  40f684:	outs   dx,BYTE PTR ds:[rsi]
  40f685:	push   0x6c646e61
  40f68a:	gs fs rex.RB js 0x40f6f2
  40f68f:	gs jo  0x40f706
  40f692:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40f699:	gs jb  0x40f69c
  40f69c:	lods   al,BYTE PTR ds:[rsi]
  40f69d:	add    al,0x53
  40f69f:	ins    BYTE PTR es:[rdi],dx
  40f6a0:	gs gs jo 0x40f6a4
  40f6a4:	mov    edx,0x72655404
  40f6a9:	ins    DWORD PTR es:[rdi],dx
  40f6aa:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40f6b1:	outs   dx,DWORD PTR ds:[rsi]
  40f6b2:	movsxd esp,DWORD PTR [rbp+0x73]
  40f6b5:	jae    0x40f6b7
  40f6b7:	add    cl,al
  40f6b9:	add    al,0x54
  40f6bb:	ins    BYTE PTR es:[rdi],dx
  40f6bc:	jae    0x40f705
  40f6be:	gs je  0x40f717
  40f6c1:	(bad)  
  40f6c2:	ins    BYTE PTR es:[rdi],dx
  40f6c3:	jne    0x40f72a
  40f6c5:	add    dh,cl
  40f6c7:	add    al,0x55
  40f6c9:	outs   dx,BYTE PTR ds:[rsi]
  40f6ca:	push   0x6c646e61
  40f6cf:	gs fs rex.RB js 0x40f737
  40f6d4:	gs jo  0x40f74b
  40f6d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40f6de:	gs jb  0x40f6e1
  40f6e1:	add    ah,ch
  40f6e3:	add    al,0x56
  40f6e5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40f6ec:	jb     0x40f75d
  40f6ee:	je     0x40f755
  40f6f0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40f6f4:	out    dx,al
  40f6f5:	add    al,0x56
  40f6f7:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40f6fe:	jne    0x40f765
  40f700:	jb     0x40f77b
  40f702:	add    BYTE PTR [rax],al
  40f704:	(bad)  
  40f705:	add    BYTE PTR [rdi+0x5f],bl
  40f708:	rex.XB pop r15
  40f70a:	jae    0x40f77c
  40f70c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40f710:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40f717:	ins    BYTE PTR es:[rdi],dx
  40f718:	gs jb  0x40f71b
  40f71b:	add    BYTE PTR [rsi+0x0],cl
  40f71e:	pop    rdi
  40f71f:	pop    rdi
  40f720:	fs ins BYTE PTR es:[rdi],dx
  40f722:	ins    BYTE PTR es:[rdi],dx
  40f723:	outs   dx,DWORD PTR ds:[rsi]
  40f724:	outs   dx,BYTE PTR ds:[rsi]
  40f725:	gs js  0x40f791
  40f728:	je     0x40f72a
  40f72a:	push   rcx
  40f72b:	add    BYTE PTR [rdi+0x5f],bl
  40f72e:	addr32 gs je 0x40f79f
  40f732:	(bad)  
  40f733:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40f73a:	push   rdx
  40f73b:	add    BYTE PTR [rdi+0x5f],bl
  40f73e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40f745:	add    BYTE PTR [rbx+0x0],dl
  40f748:	pop    rdi
  40f749:	pop    rdi
  40f74a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40f751:	movsxd eax,DWORD PTR [rax]
  40f753:	add    BYTE PTR [rdx+0x0],bl
  40f756:	pop    rdi
  40f757:	pop    rdi
  40f758:	ins    BYTE PTR es:[rdi],dx
  40f759:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40f75c:	jbe    0x40f7bd
  40f75e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40f765:	add    BYTE PTR [rdi+0x5f],bl
  40f768:	jae    0x40f7cf
  40f76a:	je     0x40f7cb
  40f76c:	(bad)  
  40f76d:	jo     0x40f7df
  40f76f:	pop    rdi
  40f770:	je     0x40f7eb
  40f772:	jo     0x40f7d9
  40f774:	add    BYTE PTR [rax],al
  40f776:	(bad)  
  40f777:	add    BYTE PTR [rdi+0x5f],bl
  40f77a:	jae    0x40f7e1
  40f77c:	je     0x40f7f3
  40f77e:	jae    0x40f7e5
  40f780:	jb     0x40f7ef
  40f782:	(bad)  
  40f783:	je     0x40f7ed
  40f785:	gs jb  0x40f7fa
  40f788:	add    BYTE PTR [rax],al
  40f78a:	jno    0x40f78c
  40f78c:	pop    rdi
  40f78d:	(bad)  
  40f78e:	movsxd ebp,DWORD PTR [rbp+0x64]
  40f791:	ins    BYTE PTR es:[rdi],dx
  40f792:	outs   dx,BYTE PTR ds:[rsi]
  40f793:	add    BYTE PTR [rax+0x0],bh
  40f796:	pop    rdi
  40f797:	(bad)  
  40f798:	ins    DWORD PTR es:[rdi],dx
  40f799:	jae    0x40f802
  40f79b:	pop    rdi
  40f79c:	gs js  0x40f808
  40f79f:	je     0x40f7a1
  40f7a1:	add    BYTE PTR [rdx+0x65635f00],cl
  40f7a7:	js     0x40f812
  40f7a9:	je     0x40f7ab
  40f7ab:	add    dl,bl
  40f7ad:	add    BYTE PTR [rdi+0x66],bl
  40f7b0:	ins    DWORD PTR es:[rdi],dx
  40f7b1:	outs   dx,DWORD PTR ds:[rsi]
  40f7b2:	fs add BYTE PTR gs:[rax],al
  40f7b6:	sbb    al,BYTE PTR [rcx]
  40f7b8:	pop    rdi
  40f7b9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40f7c0:	ins    DWORD PTR es:[rdi],dx
  40f7c1:	add    BYTE PTR [rax+0x6f6c5f01],al
  40f7c7:	movsxd ebp,DWORD PTR [rbx+0x0]
  40f7ca:	and    eax,0x6e6f5f02
  40f7cf:	gs js  0x40f83b
  40f7d2:	je     0x40f7d4
  40f7d4:	(bad)
  40f7d8:	outs   dx,BYTE PTR ds:[rsi]
  40f7d9:	ins    BYTE PTR es:[rdi],dx
  40f7da:	outs   dx,DWORD PTR ds:[rsi]
  40f7db:	movsxd ebp,DWORD PTR [rbx+0x0]
  40f7de:	jg     0x40f7e3
  40f7e0:	(bad)  
  40f7e1:	(bad)  
  40f7e2:	outs   dx,DWORD PTR ds:[rsi]
  40f7e3:	jb     0x40f859
  40f7e5:	add    BYTE PTR [rax+0x6c616303],dl
  40f7eb:	ins    BYTE PTR es:[rdi],dx
  40f7ec:	outs   dx,DWORD PTR ds:[rsi]
  40f7ed:	movsxd eax,DWORD PTR [rax]
  40f7ef:	add    BYTE PTR [rbp+0x69786503],bl
  40f7f5:	je     0x40f7f7
  40f7f7:	add    BYTE PTR [rax+0x72706603],dh
  40f7fd:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40f804:	data16 jb 0x40f86c
  40f807:	add    BYTE PTR gs:[rax],al
  40f80a:	ret    0x6603
  40f80d:	ja     0x40f881
  40f80f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40f817:	(bad)  
  40f818:	ins    BYTE PTR es:[rdi],dx
  40f819:	ins    BYTE PTR es:[rdi],dx
  40f81a:	outs   dx,DWORD PTR ds:[rsi]
  40f81b:	movsxd eax,DWORD PTR [rax]
  40f81d:	add    al,bh
  40f81f:	add    ebp,DWORD PTR [rbp+0x65]
  40f822:	ins    DWORD PTR es:[rdi],dx
  40f823:	movsxd esi,DWORD PTR [rax+0x79]
  40f826:	add    BYTE PTR [rax],al
  40f828:	(bad)  
  40f829:	add    al,0x73
  40f82b:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40f832:	and    al,0x4
  40f834:	jae    0x40f8aa
  40f836:	jb     0x40f89b
  40f838:	ins    DWORD PTR es:[rdi],dx
  40f839:	jo     0x40f83b
  40f83b:	add    BYTE PTR [rbx],ch
  40f83d:	add    al,0x73
  40f83f:	je     0x40f8b3
  40f841:	ins    BYTE PTR es:[rdi],dx
  40f842:	outs   dx,BYTE PTR gs:[rsi]
  40f844:	add    BYTE PTR [rax],al
  40f846:	cs add al,0x73
  40f849:	je     0x40f8bd
  40f84b:	outs   dx,BYTE PTR ds:[rsi]
  40f84c:	movsxd ebp,DWORD PTR [rbp+0x70]
  40f84f:	add    BYTE PTR [rsi+0x4],cl
  40f852:	jbe    0x40f8ba
  40f854:	jo     0x40f8c8
  40f856:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40f85d:	loopne 0x40f85f
  40f85f:	add    BYTE PTR [rax],al
  40f861:	loopne 0x40f863
  40f863:	add    BYTE PTR [rax],al
  40f865:	loopne 0x40f867
  40f867:	add    BYTE PTR [rax],al
  40f869:	loopne 0x40f86b
  40f86b:	add    BYTE PTR [rax],al
  40f86d:	loopne 0x40f86f
  40f86f:	add    BYTE PTR [rax],al
  40f871:	loopne 0x40f873
  40f873:	add    BYTE PTR [rax],al
  40f875:	loopne 0x40f877
  40f877:	add    BYTE PTR [rax],al
  40f879:	loopne 0x40f87b
  40f87b:	add    BYTE PTR [rax],al
  40f87d:	loopne 0x40f87f
  40f87f:	add    BYTE PTR [rax],al
  40f881:	loopne 0x40f883
  40f883:	add    BYTE PTR [rax],al
  40f885:	loopne 0x40f887
  40f887:	add    BYTE PTR [rax],al
  40f889:	loopne 0x40f88b
  40f88b:	add    BYTE PTR [rax],al
  40f88d:	loopne 0x40f88f
  40f88f:	add    BYTE PTR [rax],al
  40f891:	loopne 0x40f893
  40f893:	add    BYTE PTR [rax],al
  40f895:	loopne 0x40f897
  40f897:	add    BYTE PTR [rax],al
  40f899:	loopne 0x40f89b
  40f89b:	add    BYTE PTR [rax],al
  40f89d:	loopne 0x40f89f
  40f89f:	add    BYTE PTR [rax],al
  40f8a1:	loopne 0x40f8a3
  40f8a3:	add    BYTE PTR [rax],al
  40f8a5:	loopne 0x40f8a7
  40f8a7:	add    BYTE PTR [rax],al
  40f8a9:	loopne 0x40f8ab
  40f8ab:	add    BYTE PTR [rax],al
  40f8ad:	loopne 0x40f8af
  40f8af:	add    BYTE PTR [rax],al
  40f8b1:	loopne 0x40f8b3
  40f8b3:	add    BYTE PTR [rax],al
  40f8b5:	loopne 0x40f8b7
  40f8b7:	add    BYTE PTR [rax],al
  40f8b9:	loopne 0x40f8bb
  40f8bb:	add    BYTE PTR [rax],al
  40f8bd:	loopne 0x40f8bf
  40f8bf:	add    BYTE PTR [rax],al
  40f8c1:	loopne 0x40f8c3
  40f8c3:	add    BYTE PTR [rax],al
  40f8c5:	loopne 0x40f8c7
  40f8c7:	add    BYTE PTR [rax],al
  40f8c9:	loopne 0x40f8cb
  40f8cb:	add    BYTE PTR [rax],al
  40f8cd:	loopne 0x40f8cf
  40f8cf:	add    BYTE PTR [rax],al
  40f8d1:	loopne 0x40f8d3
  40f8d3:	add    BYTE PTR [rax],al
  40f8d5:	loopne 0x40f8d7
  40f8d7:	add    BYTE PTR [rax],al
  40f8d9:	loopne 0x40f8db
  40f8db:	add    BYTE PTR [rax],al
  40f8dd:	loopne 0x40f8df
  40f8df:	add    BYTE PTR [rax],al
  40f8e1:	loopne 0x40f8e3
  40f8e3:	add    BYTE PTR [rax],al
  40f8e5:	loopne 0x40f8e7
  40f8e7:	add    BYTE PTR [rax],al
  40f8e9:	loopne 0x40f8eb
  40f8eb:	add    BYTE PTR [rax],al
  40f8ed:	loopne 0x40f8ef
  40f8ef:	add    BYTE PTR [rax],al
  40f8f1:	loopne 0x40f8f3
  40f8f3:	add    BYTE PTR [rax],al
  40f8f5:	loopne 0x40f8f7
  40f8f7:	add    BYTE PTR [rax],al
  40f8f9:	loopne 0x40f8fb
  40f8fb:	add    BYTE PTR [rax],al
  40f8fd:	loopne 0x40f8ff
  40f8ff:	add    BYTE PTR [rax],al
  40f901:	loopne 0x40f903
  40f903:	add    BYTE PTR [rax],al
  40f905:	loopne 0x40f907
  40f907:	add    BYTE PTR [rax],al
  40f909:	loopne 0x40f90b
  40f90b:	add    BYTE PTR [rax],al
  40f90d:	loopne 0x40f90f
  40f90f:	add    BYTE PTR [rax],al
  40f911:	loopne 0x40f913
  40f913:	add    BYTE PTR [rax],al
  40f915:	loopne 0x40f917
  40f917:	add    BYTE PTR [rax],al
  40f919:	loopne 0x40f91b
  40f91b:	add    BYTE PTR [rax],al
  40f91d:	loopne 0x40f91f
  40f91f:	add    BYTE PTR [rax],al
  40f921:	loopne 0x40f923
  40f923:	add    BYTE PTR [rax],al
  40f925:	loopne 0x40f927
  40f927:	add    BYTE PTR [rax],al
  40f929:	loopne 0x40f92b
  40f92b:	add    BYTE PTR [rax],al
  40f92d:	loopne 0x40f92f
  40f92f:	add    BYTE PTR [rax],al
  40f931:	loopne 0x40f933
  40f933:	add    BYTE PTR [rax],al
  40f935:	loopne 0x40f937
  40f937:	add    BYTE PTR [rax],al
  40f939:	loopne 0x40f93b
  40f93b:	add    BYTE PTR [rax],al
  40f93d:	loopne 0x40f93f
  40f93f:	add    BYTE PTR [rax],al
  40f941:	loopne 0x40f943
  40f943:	add    BYTE PTR [rax],al
  40f945:	loopne 0x40f947
  40f947:	add    BYTE PTR [rax],al
  40f949:	loopne 0x40f94b
  40f94b:	add    BYTE PTR [rax],al
  40f94d:	loopne 0x40f94f
  40f94f:	add    BYTE PTR [rax],al
  40f951:	loopne 0x40f953
  40f953:	add    BYTE PTR [rax],al
  40f955:	loopne 0x40f957
  40f957:	add    BYTE PTR [rax],al
  40f959:	loopne 0x40f95b
  40f95b:	add    BYTE PTR [rax],al
  40f95d:	loopne 0x40f95f
  40f95f:	add    BYTE PTR [rax],al
  40f961:	loopne 0x40f963
  40f963:	add    BYTE PTR [rax],al
  40f965:	loopne 0x40f967
  40f967:	add    BYTE PTR [rax],al
  40f969:	loopne 0x40f96b
  40f96b:	add    BYTE PTR [rax],al
  40f96d:	loopne 0x40f96f
  40f96f:	add    BYTE PTR [rax],al
  40f971:	loopne 0x40f973
  40f973:	add    BYTE PTR [rax],al
  40f975:	loopne 0x40f977
  40f977:	add    BYTE PTR [rax],al
  40f979:	loopne 0x40f97b
  40f97b:	add    BYTE PTR [rax],al
  40f97d:	loopne 0x40f97f
  40f97f:	add    BYTE PTR [rax],al
  40f981:	loopne 0x40f983
  40f983:	add    BYTE PTR [rax],al
  40f985:	loopne 0x40f987
  40f987:	add    BYTE PTR [rax],al
  40f989:	loopne 0x40f98b
  40f98b:	add    BYTE PTR [rax],al
  40f98d:	loopne 0x40f98f
  40f98f:	add    BYTE PTR [rax],al
  40f991:	loopne 0x40f993
  40f993:	add    BYTE PTR [rax],al
  40f995:	loopne 0x40f997
  40f997:	add    BYTE PTR [rax],al
  40f999:	loopne 0x40f99b
  40f99b:	add    BYTE PTR [rax],al
  40f99d:	loopne 0x40f99f
  40f99f:	add    BYTE PTR [rax],al
  40f9a1:	loopne 0x40f9a3
  40f9a3:	add    BYTE PTR [rax],al
  40f9a5:	loopne 0x40f9a7
  40f9a7:	add    BYTE PTR [rax],al
  40f9a9:	loopne 0x40f9ab
  40f9ab:	add    BYTE PTR [rax],al
  40f9ad:	loopne 0x40f9af
  40f9af:	add    BYTE PTR [rax],al
  40f9b1:	loopne 0x40f9b3
  40f9b3:	add    BYTE PTR [rax],al
  40f9b5:	loopne 0x40f9b7
  40f9b7:	add    BYTE PTR [rax],al
  40f9b9:	loopne 0x40f9bb
  40f9bb:	add    BYTE PTR [rax],al
  40f9bd:	loopne 0x40f9bf
  40f9bf:	add    BYTE PTR [rax],al
  40f9c1:	loopne 0x40f9c3
  40f9c3:	add    BYTE PTR [rax],al
  40f9c5:	loopne 0x40f9c7
  40f9c7:	add    BYTE PTR [rax],al
  40f9c9:	loopne 0x40f9cb
  40f9cb:	add    BYTE PTR [rax],al
  40f9cd:	loopne 0x40f9cf
  40f9cf:	add    BYTE PTR [rax],al
  40f9d1:	loopne 0x40f9d3
  40f9d3:	add    BYTE PTR [rax],al
  40f9d5:	loopne 0x40f9d7
  40f9d7:	add    BYTE PTR [rax],al
  40f9d9:	loopne 0x40f9db
  40f9db:	add    BYTE PTR [rax],al
  40f9dd:	loopne 0x40f9df
  40f9df:	add    BYTE PTR [rax],al
  40f9e1:	loopne 0x40f9e3
  40f9e3:	add    BYTE PTR [rax],al
  40f9e5:	loopne 0x40f9e7
  40f9e7:	add    BYTE PTR [rax],al
  40f9e9:	loopne 0x40f9eb
  40f9eb:	add    BYTE PTR [rax],al
  40f9ed:	loopne 0x40f9ef
  40f9ef:	add    BYTE PTR [rax],al
  40f9f1:	loopne 0x40f9f3
  40f9f3:	add    BYTE PTR [rax],al
  40f9f5:	loopne 0x40f9f7
  40f9f7:	add    BYTE PTR [rax],al
  40f9f9:	loopne 0x40f9fb
  40f9fb:	add    BYTE PTR [rax],al
  40f9fd:	loopne 0x40f9ff
  40f9ff:	add    BYTE PTR [rax],al
  40fa01:	loopne 0x40fa03
  40fa03:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40fa07:	ins    BYTE PTR es:[edi],dx
  40fa09:	imul   esp,DWORD PTR [rdx+0x2d],0x2d302e32
  40fa10:	xor    BYTE PTR [rsi],ch
  40fa12:	fs ins BYTE PTR es:[rdi],dx
  40fa14:	ins    BYTE PTR es:[rdi],dx
  40fa15:	add    BYTE PTR [rax],al
  40fa17:	add    BYTE PTR [rax+riz*8],dl
  40fa1a:	add    BYTE PTR [rax],al
  40fa1c:	adc    al,0xe0
  40fa1e:	add    BYTE PTR [rax],al
  40fa20:	adc    al,0xe0
  40fa22:	add    BYTE PTR [rax],al
  40fa24:	adc    al,0xe0
  40fa26:	add    BYTE PTR [rax],al
  40fa28:	adc    al,0xe0
  40fa2a:	add    BYTE PTR [rax],al
  40fa2c:	adc    al,0xe0
  40fa2e:	add    BYTE PTR [rax],al
  40fa30:	ins    BYTE PTR es:[rdi],dx
  40fa31:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  40fa38:	cmp    BYTE PTR [rsi],ch
  40fa3a:	fs ins BYTE PTR es:[rdi],dx
  40fa3c:	ins    BYTE PTR es:[rdi],dx
  40fa3d:	add    BYTE PTR [rax],al
  40fa3f:	add    BYTE PTR [rax],ch
  40fa41:	loopne 0x40fa43
  40fa43:	add    BYTE PTR [rax],ch
  40fa45:	loopne 0x40fa47
  40fa47:	add    BYTE PTR [rax],ch
  40fa49:	loopne 0x40fa4b
  40fa4b:	add    BYTE PTR [rax],ch
  40fa4d:	loopne 0x40fa4f
  40fa4f:	add    BYTE PTR [rax],ch
  40fa51:	loopne 0x40fa53
  40fa53:	add    BYTE PTR [rax],ch
  40fa55:	loopne 0x40fa57
  40fa57:	add    BYTE PTR [rax],ch
  40fa59:	loopne 0x40fa5b
  40fa5b:	add    BYTE PTR [rax],ch
  40fa5d:	loopne 0x40fa5f
  40fa5f:	add    BYTE PTR [rax],ch
  40fa61:	loopne 0x40fa63
  40fa63:	add    BYTE PTR [rax],ch
  40fa65:	loopne 0x40fa67
  40fa67:	add    BYTE PTR [rax],ch
  40fa69:	loopne 0x40fa6b
  40fa6b:	add    BYTE PTR [rax],ch
  40fa6d:	loopne 0x40fa6f
  40fa6f:	add    BYTE PTR [rax],ch
  40fa71:	loopne 0x40fa73
  40fa73:	add    BYTE PTR [rax],ch
  40fa75:	loopne 0x40fa77
  40fa77:	add    BYTE PTR [rax],ch
  40fa79:	loopne 0x40fa7b
  40fa7b:	add    BYTE PTR [rax],ch
  40fa7d:	loopne 0x40fa7f
  40fa7f:	add    BYTE PTR [rax],ch
  40fa81:	loopne 0x40fa83
  40fa83:	add    BYTE PTR [rax],ch
  40fa85:	loopne 0x40fa87
  40fa87:	add    BYTE PTR [rax],ch
  40fa89:	loopne 0x40fa8b
  40fa8b:	add    BYTE PTR [rax],ch
  40fa8d:	loopne 0x40fa8f
  40fa8f:	add    BYTE PTR [rax],ch
  40fa91:	loopne 0x40fa93
  40fa93:	add    BYTE PTR [rax],ch
  40fa95:	loopne 0x40fa97
  40fa97:	add    BYTE PTR [rax],ch
  40fa99:	loopne 0x40fa9b
  40fa9b:	add    BYTE PTR [rbx+0x45],cl
  40fa9e:	push   rdx
  40fa9f:	rex.WRX
  40faa0:	rex.RB
  40faa1:	xor    r14,QWORD PTR [rdx]
  40faa4:	cs fs ins BYTE PTR es:[rdi],dx
  40faa7:	ins    BYTE PTR es:[rdi],dx
  40faa8:	add    BYTE PTR [rax],al
  40faaa:	add    BYTE PTR [rax],al
  40faac:	cmp    al,0xe0
  40faae:	add    BYTE PTR [rax],al
  40fab0:	cmp    al,0xe0
  40fab2:	add    BYTE PTR [rax],al
  40fab4:	cmp    al,0xe0
  40fab6:	add    BYTE PTR [rax],al
  40fab8:	cmp    al,0xe0
  40faba:	add    BYTE PTR [rax],al
  40fabc:	cmp    al,0xe0
  40fabe:	add    BYTE PTR [rax],al
  40fac0:	cmp    al,0xe0
  40fac2:	add    BYTE PTR [rax],al
  40fac4:	cmp    al,0xe0
  40fac6:	add    BYTE PTR [rax],al
  40fac8:	cmp    al,0xe0
  40faca:	add    BYTE PTR [rax],al
  40facc:	cmp    al,0xe0
  40face:	add    BYTE PTR [rax],al
  40fad0:	cmp    al,0xe0
  40fad2:	add    BYTE PTR [rax],al
  40fad4:	cmp    al,0xe0
  40fad6:	add    BYTE PTR [rax],al
  40fad8:	cmp    al,0xe0
  40fada:	add    BYTE PTR [rax],al
  40fadc:	cmp    al,0xe0
  40fade:	add    BYTE PTR [rax],al
  40fae0:	cmp    al,0xe0
  40fae2:	add    BYTE PTR [rax],al
  40fae4:	cmp    al,0xe0
  40fae6:	add    BYTE PTR [rax],al
  40fae8:	cmp    al,0xe0
  40faea:	add    BYTE PTR [rax],al
  40faec:	cmp    al,0xe0
  40faee:	add    BYTE PTR [rax],al
  40faf0:	cmp    al,0xe0
  40faf2:	add    BYTE PTR [rax],al
  40faf4:	cmp    al,0xe0
  40faf6:	add    BYTE PTR [rax],al
  40faf8:	cmp    al,0xe0
  40fafa:	add    BYTE PTR [rax],al
  40fafc:	cmp    al,0xe0
  40fafe:	add    BYTE PTR [rax],al
  40fb00:	cmp    al,0xe0
  40fb02:	add    BYTE PTR [rax],al
  40fb04:	cmp    al,0xe0
  40fb06:	add    BYTE PTR [rax],al
  40fb08:	cmp    al,0xe0
  40fb0a:	add    BYTE PTR [rax],al
  40fb0c:	cmp    al,0xe0
  40fb0e:	add    BYTE PTR [rax],al
  40fb10:	cmp    al,0xe0
  40fb12:	add    BYTE PTR [rax],al
  40fb14:	cmp    al,0xe0
  40fb16:	add    BYTE PTR [rax],al
  40fb18:	cmp    al,0xe0
  40fb1a:	add    BYTE PTR [rax],al
  40fb1c:	cmp    al,0xe0
  40fb1e:	add    BYTE PTR [rax],al
  40fb20:	ins    DWORD PTR es:[rdi],dx
  40fb21:	jae    0x40fb99
  40fb23:	movsxd esi,DWORD PTR [rdx+0x74]
  40fb26:	cs fs ins BYTE PTR es:[rdi],dx
  40fb29:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000410000 <.CRT>:
	...
  410008:	(bad)  
  410009:	adc    DWORD PTR [rax+0x0],eax
	...
  410020:	adc    BYTE PTR [rax],dl
  410022:	add    BYTE PTR [rax],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax],dh
  410029:	push   rcx
  41002a:	add    BYTE PTR [rax],al
	...
  41003d:	add    BYTE PTR [rax],al
  41003f:	add    BYTE PTR [rax+0x53],ah
  410042:	add    BYTE PTR [rax],al
  410045:	add    BYTE PTR [rax],al
  410047:	add    BYTE PTR [rax],dh
  410049:	push   rbx
  41004a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000411000 <.tls>:
	...
  411020:	add    BYTE PTR [rax],dl
  411022:	add    BYTE PTR [r8],al
  411025:	add    BYTE PTR [rax],al
  411027:	add    BYTE PTR [rax+0x10],ah
  41102a:	add    BYTE PTR [r8],al
  41102d:	add    BYTE PTR [rax],al
  41102f:	add    BYTE PTR [rsi+rdx*8+0x40],bl
  411033:	add    BYTE PTR [rax],al
  411035:	add    BYTE PTR [rax],al
  411037:	add    BYTE PTR [rax+0x0],al
  41103a:	add    BYTE PTR [r8],al
	...
