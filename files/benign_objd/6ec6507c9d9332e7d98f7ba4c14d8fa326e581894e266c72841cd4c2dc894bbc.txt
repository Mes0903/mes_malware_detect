
6ec6507c9d9332e7d98f7ba4c14d8fa326e581894e266c72841cd4c2dc894bbc.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	ret    0x0
   140001003:	int3   
   140001004:	mov    eax,0x208
   140001009:	mov    r11,r8
   14000100c:	mov    rdx,rcx
   14000100f:	mov    r10d,eax
   140001012:	xor    r9d,r9d
   140001015:	cmp    BYTE PTR [rdx],r9b
   140001018:	je     0x140001022
   14000101a:	inc    rdx
   14000101d:	dec    r10
   140001020:	jne    0x140001015
   140001022:	test   r10,r10
   140001025:	jne    0x140001031
   140001027:	xor    edx,edx
   140001029:	mov    r9d,0x80070057
   14000102f:	jmp    0x140001037
   140001031:	mov    rdx,rax
   140001034:	sub    rdx,r10
   140001037:	test   r9d,r9d
   14000103a:	js     0x140001083
   14000103c:	lea    rcx,[rdx+rcx*1]
   140001040:	mov    r9d,0x0
   140001046:	sub    rax,rdx
   140001049:	je     0x140001077
   14000104b:	lea    r8,[rdx+0x7ffffdf6]
   140001052:	add    r8,rax
   140001055:	sub    r11,rcx
   140001058:	test   r8,r8
   14000105b:	je     0x140001072
   14000105d:	mov    dl,BYTE PTR [r11+rcx*1]
   140001061:	test   dl,dl
   140001063:	je     0x140001072
   140001065:	mov    BYTE PTR [rcx],dl
   140001067:	dec    r8
   14000106a:	inc    rcx
   14000106d:	dec    rax
   140001070:	jne    0x140001058
   140001072:	test   rax,rax
   140001075:	jne    0x140001080
   140001077:	dec    rcx
   14000107a:	mov    r9d,0x8007007a
   140001080:	mov    BYTE PTR [rcx],0x0
   140001083:	mov    eax,r9d
   140001086:	ret    
   140001087:	int3   
   140001088:	mov    QWORD PTR [rsp+0x18],r8
   14000108d:	mov    QWORD PTR [rsp+0x20],r9
   140001092:	push   rbx
   140001093:	push   rsi
   140001094:	push   rdi
   140001095:	sub    rsp,0x20
   140001099:	xor    edi,edi
   14000109b:	lea    rax,[rdx-0x1]
   14000109f:	mov    rsi,rcx
   1400010a2:	cmp    rax,0x7ffffffe
   1400010a8:	mov    ecx,0x80070057
   1400010ad:	cmova  edi,ecx
   1400010b0:	test   edi,edi
   1400010b2:	js     0x1400010e8
   1400010b4:	lea    rbx,[rdx-0x1]
   1400010b8:	lea    r9,[rsp+0x58]
   1400010bd:	mov    rcx,rsi
   1400010c0:	mov    rdx,rbx
   1400010c3:	xor    edi,edi
   1400010c5:	call   0x140006738
   1400010ca:	test   eax,eax
   1400010cc:	js     0x1400010dd
   1400010ce:	cdqe   
   1400010d0:	cmp    rax,rbx
   1400010d3:	ja     0x1400010dd
   1400010d5:	jne    0x1400010f0
   1400010d7:	mov    BYTE PTR [rbx+rsi*1],dil
   1400010db:	jmp    0x1400010f0
   1400010dd:	mov    BYTE PTR [rbx+rsi*1],dil
   1400010e1:	mov    edi,0x8007007a
   1400010e6:	jmp    0x1400010f0
   1400010e8:	test   rdx,rdx
   1400010eb:	je     0x1400010f0
   1400010ed:	mov    BYTE PTR [rsi],0x0
   1400010f0:	mov    eax,edi
   1400010f2:	add    rsp,0x20
   1400010f6:	pop    rdi
   1400010f7:	pop    rsi
   1400010f8:	pop    rbx
   1400010f9:	ret    
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	rex push rbx
   1400010fe:	sub    rsp,0x20
   140001102:	lea    rax,[rip+0x15bcf]        # 0x140016cd8
   140001109:	mov    rbx,rcx
   14000110c:	mov    QWORD PTR [rcx],rax
   14000110f:	test   dl,0x1
   140001112:	je     0x140001119
   140001114:	call   0x140005fbc
   140001119:	mov    rax,rbx
   14000111c:	add    rsp,0x20
   140001120:	pop    rbx
   140001121:	ret    
   140001122:	int3   
   140001123:	int3   
   140001124:	mov    DWORD PTR [rdx],r8d
   140001127:	mov    QWORD PTR [rdx+0x8],rcx
   14000112b:	mov    rax,rdx
   14000112e:	ret    
   14000112f:	int3   
   140001130:	rex push rbx
   140001132:	sub    rsp,0x30
   140001136:	mov    rax,QWORD PTR [rcx]
   140001139:	mov    rbx,r8
   14000113c:	mov    r8d,edx
   14000113f:	lea    rdx,[rsp+0x20]
   140001144:	call   QWORD PTR [rax+0x18]
   140001147:	mov    rcx,QWORD PTR [rbx+0x8]
   14000114b:	cmp    QWORD PTR [rax+0x8],rcx
   14000114f:	jne    0x14000115e
   140001151:	mov    ecx,DWORD PTR [rbx]
   140001153:	cmp    DWORD PTR [rax],ecx
   140001155:	jne    0x14000115e
   140001157:	mov    eax,0x1
   14000115c:	jmp    0x140001160
   14000115e:	xor    eax,eax
   140001160:	add    rsp,0x30
   140001164:	pop    rbx
   140001165:	ret    
   140001166:	int3   
   140001167:	int3   
   140001168:	cmp    rcx,QWORD PTR [rdx+0x8]
   14000116c:	jne    0x140001179
   14000116e:	cmp    DWORD PTR [rdx],r8d
   140001171:	jne    0x140001179
   140001173:	mov    eax,0x1
   140001178:	ret    
   140001179:	xor    eax,eax
   14000117b:	ret    
   14000117c:	lea    rax,[rip+0x15da5]        # 0x140016f28
   140001183:	ret    
   140001184:	mov    QWORD PTR [rsp+0x8],rbx
   140001189:	push   rdi
   14000118a:	sub    rsp,0x30
   14000118e:	xor    ebx,ebx
   140001190:	mov    ecx,r8d
   140001193:	mov    rdi,rdx
   140001196:	mov    DWORD PTR [rsp+0x20],ebx
   14000119a:	call   0x14000f10c
   14000119f:	mov    QWORD PTR [rdi+0x18],0xf
   1400011a7:	test   rax,rax
   1400011aa:	mov    QWORD PTR [rdi+0x10],rbx
   1400011ae:	lea    rdx,[rip+0x15d7b]        # 0x140016f30
   1400011b5:	cmovne rdx,rax
   1400011b9:	mov    BYTE PTR [rdi],bl
   1400011bb:	cmp    BYTE PTR [rdx],bl
   1400011bd:	je     0x1400011ce
   1400011bf:	or     rax,0xffffffffffffffff
   1400011c3:	inc    rax
   1400011c6:	cmp    BYTE PTR [rdx+rax*1],bl
   1400011c9:	jne    0x1400011c3
   1400011cb:	mov    rbx,rax
   1400011ce:	mov    r8,rbx
   1400011d1:	mov    rcx,rdi
   1400011d4:	call   0x140001f38
   1400011d9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400011de:	mov    rax,rdi
   1400011e1:	add    rsp,0x30
   1400011e5:	pop    rdi
   1400011e6:	ret    
   1400011e7:	int3   
   1400011e8:	lea    rax,[rip+0x15d51]        # 0x140016f40
   1400011ef:	ret    
   1400011f0:	rex push rbx
   1400011f2:	sub    rsp,0x30
   1400011f6:	xor    eax,eax
   1400011f8:	mov    rbx,rdx
   1400011fb:	mov    DWORD PTR [rsp+0x20],eax
   1400011ff:	cmp    r8d,0x1
   140001203:	jne    0x140001228
   140001205:	mov    QWORD PTR [rdx+0x18],0xf
   14000120d:	mov    QWORD PTR [rdx+0x10],rax
   140001211:	mov    BYTE PTR [rdx],al
   140001213:	lea    rdx,[rip+0x15d36]        # 0x140016f50
   14000121a:	lea    r8d,[rax+0x15]
   14000121e:	mov    rcx,rbx
   140001221:	call   0x140001f38
   140001226:	jmp    0x14000122d
   140001228:	call   0x140001184
   14000122d:	mov    rax,rbx
   140001230:	add    rsp,0x30
   140001234:	pop    rbx
   140001235:	ret    
   140001236:	int3   
   140001237:	int3   
   140001238:	lea    rax,[rip+0x15d29]        # 0x140016f68
   14000123f:	ret    
   140001240:	mov    QWORD PTR [rsp+0x8],rbx
   140001245:	push   rdi
   140001246:	sub    rsp,0x30
   14000124a:	xor    ebx,ebx
   14000124c:	mov    ecx,r8d
   14000124f:	mov    rdi,rdx
   140001252:	mov    DWORD PTR [rsp+0x20],ebx
   140001256:	call   0x14000f134
   14000125b:	mov    QWORD PTR [rdi+0x18],0xf
   140001263:	test   rax,rax
   140001266:	mov    QWORD PTR [rdi+0x10],rbx
   14000126a:	lea    rdx,[rip+0x15cbf]        # 0x140016f30
   140001271:	cmovne rdx,rax
   140001275:	mov    BYTE PTR [rdi],bl
   140001277:	cmp    BYTE PTR [rdx],bl
   140001279:	je     0x14000128a
   14000127b:	or     rax,0xffffffffffffffff
   14000127f:	inc    rax
   140001282:	cmp    BYTE PTR [rdx+rax*1],bl
   140001285:	jne    0x14000127f
   140001287:	mov    rbx,rax
   14000128a:	mov    r8,rbx
   14000128d:	mov    rcx,rdi
   140001290:	call   0x140001f38
   140001295:	mov    rbx,QWORD PTR [rsp+0x40]
   14000129a:	mov    rax,rdi
   14000129d:	add    rsp,0x30
   1400012a1:	pop    rdi
   1400012a2:	ret    
   1400012a3:	int3   
   1400012a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400012a9:	push   rdi
   1400012aa:	sub    rsp,0x20
   1400012ae:	mov    ecx,r8d
   1400012b1:	mov    edi,r8d
   1400012b4:	mov    rbx,rdx
   1400012b7:	call   0x14000f10c
   1400012bc:	mov    DWORD PTR [rbx],edi
   1400012be:	test   rax,rax
   1400012c1:	lea    rax,[rip+0x1b618]        # 0x14001c8e0
   1400012c8:	jne    0x1400012d1
   1400012ca:	lea    rax,[rip+0x1b5ff]        # 0x14001c8d0
   1400012d1:	mov    QWORD PTR [rbx+0x8],rax
   1400012d5:	mov    rax,rbx
   1400012d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012dd:	add    rsp,0x20
   1400012e1:	pop    rdi
   1400012e2:	ret    
   1400012e3:	int3   
   1400012e4:	sub    rsp,0x28
   1400012e8:	mov    DWORD PTR [rsp+0x30],ecx
   1400012ec:	lea    rdx,[rip+0x18b5d]        # 0x140019e50
   1400012f3:	lea    rcx,[rsp+0x30]
   1400012f8:	call   0x140009ec8
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x8],rbx
   140001305:	mov    QWORD PTR [rsp+0x10],rbp
   14000130a:	mov    QWORD PTR [rsp+0x18],rsi
   14000130f:	push   rdi
   140001310:	sub    rsp,0x20
   140001314:	mov    edi,r8d
   140001317:	mov    rsi,rdx
   14000131a:	mov    rbp,rcx
   14000131d:	call   QWORD PTR [rip+0x120d5]        # 0x1400133f8
   140001323:	test   rax,rax
   140001326:	jne    0x14000132c
   140001328:	xor    eax,eax
   14000132a:	jmp    0x140001378
   14000132c:	mov    rcx,rax
   14000132f:	call   QWORD PTR [rip+0x11df3]        # 0x140013128
   140001335:	mov    rbx,rax
   140001338:	test   rax,rax
   14000133b:	je     0x140001328
   14000133d:	mov    rdx,rsi
   140001340:	mov    rcx,rbp
   140001343:	call   QWORD PTR [rip+0x11e1f]        # 0x140013168
   140001349:	mov    ecx,eax
   14000134b:	add    rcx,rbx
   14000134e:	and    edi,0xf
   140001351:	jbe    0x140001367
   140001353:	cmp    rbx,rcx
   140001356:	jae    0x140001328
   140001358:	movzx  eax,WORD PTR [rbx]
   14000135b:	lea    rbx,[rbx+rax*2]
   14000135f:	add    rbx,0x2
   140001363:	dec    edi
   140001365:	jne    0x140001353
   140001367:	cmp    rbx,rcx
   14000136a:	jae    0x140001328
   14000136c:	movzx  eax,WORD PTR [rbx]
   14000136f:	neg    ax
   140001372:	sbb    rax,rax
   140001375:	and    rax,rbx
   140001378:	mov    rbx,QWORD PTR [rsp+0x30]
   14000137d:	mov    rbp,QWORD PTR [rsp+0x38]
   140001382:	mov    rsi,QWORD PTR [rsp+0x40]
   140001387:	add    rsp,0x20
   14000138b:	pop    rdi
   14000138c:	ret    
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    rax,rsp
   140001393:	mov    QWORD PTR [rax+0x8],rbx
   140001397:	mov    QWORD PTR [rax+0x10],rbp
   14000139b:	mov    QWORD PTR [rax+0x18],rsi
   14000139f:	mov    QWORD PTR [rax+0x20],rdi
   1400013a3:	push   r14
   1400013a5:	sub    rsp,0x20
   1400013a9:	mov    ebp,ecx
   1400013ab:	lea    rcx,[rip+0x1c62e]        # 0x14001d9e0
   1400013b2:	xor    edx,edx
   1400013b4:	call   0x14000f384
   1400013b9:	mov    r14d,0x1
   1400013bf:	mov    rbx,rax
   1400013c2:	mov    esi,r14d
   1400013c5:	test   rax,rax
   1400013c8:	je     0x140001418
   1400013ca:	mov    edi,ebp
   1400013cc:	shr    edi,0x4
   1400013cf:	xor    r9d,r9d
   1400013d2:	lea    ecx,[r14+rdi*1]
   1400013d6:	movzx  r8d,cx
   1400013da:	lea    edx,[r9+0x6]
   1400013de:	mov    rcx,rbx
   1400013e1:	call   QWORD PTR [rip+0x12021]        # 0x140013408
   1400013e7:	test   rax,rax
   1400013ea:	je     0x1400013ff
   1400013ec:	mov    r8d,ebp
   1400013ef:	mov    rdx,rax
   1400013f2:	mov    rcx,rbx
   1400013f5:	call   0x140001300
   1400013fa:	test   rax,rax
   1400013fd:	jne    0x140001435
   1400013ff:	lea    rcx,[rip+0x1c5da]        # 0x14001d9e0
   140001406:	mov    edx,esi
   140001408:	call   0x14000f384
   14000140d:	add    esi,r14d
   140001410:	mov    rbx,rax
   140001413:	test   rax,rax
   140001416:	jne    0x1400013cf
   140001418:	xor    eax,eax
   14000141a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000141f:	mov    rbp,QWORD PTR [rsp+0x38]
   140001424:	mov    rsi,QWORD PTR [rsp+0x40]
   140001429:	mov    rdi,QWORD PTR [rsp+0x48]
   14000142e:	add    rsp,0x20
   140001432:	pop    r14
   140001434:	ret    
   140001435:	mov    rax,rbx
   140001438:	jmp    0x14000141a
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	rex push rbx
   14000143e:	sub    rsp,0x20
   140001442:	cmp    DWORD PTR [rcx+0x8],0x0
   140001446:	lea    rax,[rip+0x15bd3]        # 0x140017020
   14000144d:	mov    rbx,rcx
   140001450:	mov    QWORD PTR [rcx],rax
   140001453:	je     0x14000145b
   140001455:	call   QWORD PTR [rip+0x11bd5]        # 0x140013030
   14000145b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000145f:	test   rcx,rcx
   140001462:	je     0x14000146a
   140001464:	call   QWORD PTR [rip+0x11cae]        # 0x140013118
   14000146a:	mov    rcx,QWORD PTR [rbx+0x18]
   14000146e:	test   rcx,rcx
   140001471:	je     0x140001479
   140001473:	call   QWORD PTR [rip+0x11c9f]        # 0x140013118
   140001479:	mov    rcx,QWORD PTR [rbx+0x20]
   14000147d:	test   rcx,rcx
   140001480:	je     0x140001488
   140001482:	call   QWORD PTR [rip+0x11c90]        # 0x140013118
   140001488:	mov    rcx,QWORD PTR [rbx+0x28]
   14000148c:	test   rcx,rcx
   14000148f:	je     0x140001497
   140001491:	call   QWORD PTR [rip+0x11c81]        # 0x140013118
   140001497:	add    rsp,0x20
   14000149b:	pop    rbx
   14000149c:	ret    
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014a5:	push   rdi
   1400014a6:	sub    rsp,0x20
   1400014aa:	mov    ebx,edx
   1400014ac:	mov    rdi,rcx
   1400014af:	call   0x14000143c
   1400014b4:	test   bl,0x1
   1400014b7:	je     0x1400014c1
   1400014b9:	mov    rcx,rdi
   1400014bc:	call   0x140005fbc
   1400014c1:	mov    rax,rdi
   1400014c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014c9:	add    rsp,0x20
   1400014cd:	pop    rdi
   1400014ce:	ret    
   1400014cf:	int3   
   1400014d0:	rex push rbx
   1400014d2:	push   rsi
   1400014d3:	push   rdi
   1400014d4:	sub    rsp,0x80
   1400014db:	mov    rax,QWORD PTR [rip+0x19ba6]        # 0x14001b088
   1400014e2:	xor    rax,rsp
   1400014e5:	mov    QWORD PTR [rsp+0x70],rax
   1400014ea:	mov    rdi,r8
   1400014ed:	xor    edx,edx
   1400014ef:	mov    r8d,0x208
   1400014f5:	mov    rbx,r9
   1400014f8:	mov    rsi,rcx
   1400014fb:	call   0x1400099c0
   140001500:	cmp    DWORD PTR [rdi],0x0
   140001503:	lea    rax,[rip+0x15a66]        # 0x140016f70
   14000150a:	lea    rcx,[rip+0x15a67]        # 0x140016f78
   140001511:	cmovne rcx,rax
   140001515:	mov    eax,DWORD PTR [rdi+0x4]
   140001518:	lea    r8,[rip+0x15a61]        # 0x140016f80
   14000151f:	mov    DWORD PTR [rsp+0x28],eax
   140001523:	mov    QWORD PTR [rsp+0x20],rcx
   140001528:	mov    r9,rbx
   14000152b:	mov    rcx,rsi
   14000152e:	mov    edx,0x208
   140001533:	call   0x140001088
   140001538:	test   eax,eax
   14000153a:	jns    0x140001543
   14000153c:	xor    eax,eax
   14000153e:	jmp    0x140001623
   140001543:	cmp    DWORD PTR [rdi],0x0
   140001546:	je     0x14000161e
   14000154c:	mov    eax,DWORD PTR [rdi+0xc]
   14000154f:	cmp    eax,0x1
   140001552:	je     0x140001590
   140001554:	cmp    eax,0x3
   140001557:	je     0x140001587
   140001559:	cmp    eax,0x4
   14000155c:	je     0x14000157e
   14000155e:	add    eax,0xfffffffb
   140001561:	cmp    eax,0x2
   140001564:	ja     0x14000153c
   140001566:	lea    r8,[rip+0x15a3b]        # 0x140016fa8
   14000156d:	lea    rcx,[rsp+0x30]
   140001572:	mov    edx,0x40
   140001577:	call   0x140001088
   14000157c:	jmp    0x1400015b4
   14000157e:	lea    r9,[rip+0x15a13]        # 0x140016f98
   140001585:	jmp    0x140001597
   140001587:	lea    r9,[rip+0x15a06]        # 0x140016f94
   14000158e:	jmp    0x140001597
   140001590:	lea    r9,[rip+0x159f5]        # 0x140016f8c
   140001597:	mov    eax,DWORD PTR [rdi+0x10]
   14000159a:	lea    r8,[rip+0x159ff]        # 0x140016fa0
   1400015a1:	lea    rcx,[rsp+0x30]
   1400015a6:	mov    edx,0x40
   1400015ab:	mov    DWORD PTR [rsp+0x20],eax
   1400015af:	call   0x140001088
   1400015b4:	test   eax,eax
   1400015b6:	js     0x14000153c
   1400015b8:	lea    r8,[rsp+0x30]
   1400015bd:	mov    rcx,rsi
   1400015c0:	call   0x140001004
   1400015c5:	test   eax,eax
   1400015c7:	js     0x14000153c
   1400015cd:	cmp    DWORD PTR [rdi+0x14],0x0
   1400015d1:	je     0x1400015fe
   1400015d3:	lea    r8,[rip+0x159d6]        # 0x140016fb0
   1400015da:	mov    rcx,rsi
   1400015dd:	call   0x140001004
   1400015e2:	test   eax,eax
   1400015e4:	js     0x14000153c
   1400015ea:	lea    r8,[rdi+0x18]
   1400015ee:	mov    rcx,rsi
   1400015f1:	call   0x140001004
   1400015f6:	test   eax,eax
   1400015f8:	js     0x14000153c
   1400015fe:	cmp    DWORD PTR [rdi+0x11c],0x0
   140001605:	je     0x14000161e
   140001607:	lea    r8,[rip+0x159b2]        # 0x140016fc0
   14000160e:	mov    rcx,rsi
   140001611:	call   0x140001004
   140001616:	test   eax,eax
   140001618:	js     0x14000153c
   14000161e:	mov    eax,0x1
   140001623:	mov    rcx,QWORD PTR [rsp+0x70]
   140001628:	xor    rcx,rsp
   14000162b:	call   0x140005fe0
   140001630:	add    rsp,0x80
   140001637:	pop    rdi
   140001638:	pop    rsi
   140001639:	pop    rbx
   14000163a:	ret    
   14000163b:	int3   
   14000163c:	mov    rax,rsp
   14000163f:	push   rbp
   140001640:	push   rdi
   140001641:	push   r14
   140001643:	lea    rbp,[rax-0x278]
   14000164a:	sub    rsp,0x360
   140001651:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140001659:	mov    QWORD PTR [rax+0x18],rbx
   14000165d:	mov    QWORD PTR [rax+0x20],rsi
   140001661:	mov    rax,QWORD PTR [rip+0x19a20]        # 0x14001b088
   140001668:	xor    rax,rsp
   14000166b:	mov    QWORD PTR [rbp+0x250],rax
   140001672:	mov    r14,rdx
   140001675:	mov    rbx,rcx
   140001678:	lea    rax,[rip+0x159a1]        # 0x140017020
   14000167f:	mov    QWORD PTR [rbp-0x80],rax
   140001683:	and    DWORD PTR [rbp-0x78],0x0
   140001687:	and    QWORD PTR [rbp-0x70],0x0
   14000168c:	and    QWORD PTR [rbp-0x68],0x0
   140001691:	and    QWORD PTR [rbp-0x60],0x0
   140001696:	and    QWORD PTR [rbp-0x58],0x0
   14000169b:	call   QWORD PTR [rip+0x11987]        # 0x140013028
   1400016a1:	test   eax,eax
   1400016a3:	je     0x140001730
   1400016a9:	mov    DWORD PTR [rbp-0x78],0x1
   1400016b0:	mov    r8d,DWORD PTR [r14+0x4]
   1400016b4:	xor    edx,edx
   1400016b6:	mov    ecx,0x16047a
   1400016bb:	call   QWORD PTR [rip+0x11ab7]        # 0x140013178
   1400016c1:	test   rax,rax
   1400016c4:	jne    0x1400016f0
   1400016c6:	call   QWORD PTR [rip+0x11a6c]        # 0x140013138
   1400016cc:	cmp    eax,0x5
   1400016cf:	jne    0x1400016db
   1400016d1:	mov    edi,0xe123057f
   1400016d6:	jmp    0x1400018ef
   1400016db:	mov    edi,0x80070057
   1400016e0:	mov    ecx,0xe1230589
   1400016e5:	cmp    eax,0x57
   1400016e8:	cmove  edi,ecx
   1400016eb:	jmp    0x1400018ef
   1400016f0:	mov    QWORD PTR [rbp-0x68],rax
   1400016f4:	call   QWORD PTR [rip+0x11936]        # 0x140013030
   1400016fa:	test   eax,eax
   1400016fc:	je     0x140001730
   1400016fe:	and    DWORD PTR [rbp-0x78],0x0
   140001702:	mov    rcx,rbx
   140001705:	call   0x140001b64
   14000170a:	mov    rdi,rax
   14000170d:	test   rax,rax
   140001710:	je     0x140001730
   140001712:	mov    QWORD PTR [rbp-0x70],rax
   140001716:	lea    r8,[r14+0x8]
   14000171a:	mov    edx,0xc
   14000171f:	lea    r9d,[rdx-0x8]
   140001723:	mov    rcx,rax
   140001726:	call   QWORD PTR [rip+0x118ec]        # 0x140013018
   14000172c:	test   eax,eax
   14000172e:	jne    0x14000173a
   140001730:	mov    edi,0xe1230553
   140001735:	jmp    0x1400018ef
   14000173a:	lea    rdx,[rip+0x1af0f]        # 0x14001c650
   140001741:	cmp    QWORD PTR [rip+0x1af1f],0x8        # 0x14001c668
   140001749:	cmovae rdx,QWORD PTR [rip+0x1aeff]        # 0x14001c650
   140001751:	lea    rcx,[rsp+0x78]
   140001756:	call   0x140001bf0
   14000175b:	nop
   14000175c:	lea    rdx,[rsp+0x78]
   140001761:	lea    rcx,[rsp+0x70]
   140001766:	call   0x140001cac
   14000176b:	nop
   14000176c:	mov    rsi,QWORD PTR [rsp+0x70]
   140001771:	lea    rcx,[rip+0x1ac00]        # 0x14001c378
   140001778:	mov    rax,QWORD PTR [rip+0x1abf9]        # 0x14001c378
   14000177f:	call   QWORD PTR [rax+0x18]
   140001782:	lea    rbx,[rax+0x18]
   140001786:	mov    QWORD PTR [rsp+0x68],rbx
   14000178b:	test   rsi,rsi
   14000178e:	je     0x1400017ba
   140001790:	test   rsi,0xffffffffffff0000
   140001797:	jne    0x1400017ba
   140001799:	movzx  esi,si
   14000179c:	mov    ecx,esi
   14000179e:	call   0x140001390
   1400017a3:	test   rax,rax
   1400017a6:	je     0x1400017cc
   1400017a8:	mov    r8d,esi
   1400017ab:	mov    rdx,rax
   1400017ae:	lea    rcx,[rsp+0x68]
   1400017b3:	call   0x14000215c
   1400017b8:	jmp    0x1400017c7
   1400017ba:	mov    rdx,rsi
   1400017bd:	lea    rcx,[rsp+0x68]
   1400017c2:	call   0x140001e0c
   1400017c7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400017cc:	mov    r9,rbx
   1400017cf:	mov    r8,r14
   1400017d2:	lea    rcx,[rbp+0x40]
   1400017d6:	call   0x1400014d0
   1400017db:	test   eax,eax
   1400017dd:	je     0x14000188b
   1400017e3:	mov    esi,0x68
   1400017e8:	mov    r8d,esi
   1400017eb:	xor    edx,edx
   1400017ed:	lea    rcx,[rbp-0x30]
   1400017f1:	call   0x1400099c0
   1400017f6:	mov    DWORD PTR [rbp-0x30],esi
   1400017f9:	lea    rax,[rbp-0x50]
   1400017fd:	mov    QWORD PTR [rsp+0x50],rax
   140001802:	lea    rax,[rbp-0x30]
   140001806:	mov    QWORD PTR [rsp+0x48],rax
   14000180b:	and    QWORD PTR [rsp+0x40],0x0
   140001811:	and    QWORD PTR [rsp+0x38],0x0
   140001817:	mov    DWORD PTR [rsp+0x30],0xc000400
   14000181f:	and    DWORD PTR [rsp+0x28],0x0
   140001824:	and    QWORD PTR [rsp+0x20],0x0
   14000182a:	xor    r9d,r9d
   14000182d:	lea    r8,[rbp+0x40]
   140001831:	mov    rdx,rbx
   140001834:	mov    rcx,rdi
   140001837:	call   QWORD PTR [rip+0x117c3]        # 0x140013000
   14000183d:	test   eax,eax
   14000183f:	je     0x14000188b
   140001841:	mov    rax,QWORD PTR [rbp-0x48]
   140001845:	mov    QWORD PTR [rbp-0x60],rax
   140001849:	mov    rcx,QWORD PTR [rbp-0x50]
   14000184d:	mov    QWORD PTR [rbp-0x58],rcx
   140001851:	mov    edx,0x7530
   140001856:	call   QWORD PTR [rip+0x1195c]        # 0x1400131b8
   14000185c:	cmp    eax,0x102
   140001861:	je     0x140001880
   140001863:	test   eax,eax
   140001865:	jne    0x140001880
   140001867:	lea    rdx,[rsp+0x60]
   14000186c:	mov    rcx,QWORD PTR [rbp-0x50]
   140001870:	call   QWORD PTR [rip+0x118ea]        # 0x140013160
   140001876:	test   eax,eax
   140001878:	je     0x140001880
   14000187a:	mov    edi,DWORD PTR [rsp+0x60]
   14000187e:	jmp    0x140001890
   140001880:	mov    edi,0xe1230553
   140001885:	mov    DWORD PTR [rsp+0x60],edi
   140001889:	jmp    0x140001890
   14000188b:	mov    edi,0xe1230553
   140001890:	lea    rdx,[rbx-0x18]
   140001894:	or     ebx,0xffffffff
   140001897:	mov    eax,ebx
   140001899:	lock xadd DWORD PTR [rdx+0x10],eax
   14000189e:	add    eax,ebx
   1400018a0:	test   eax,eax
   1400018a2:	jg     0x1400018ae
   1400018a4:	mov    rcx,QWORD PTR [rdx]
   1400018a7:	mov    rax,QWORD PTR [rcx]
   1400018aa:	call   QWORD PTR [rax+0x8]
   1400018ad:	nop
   1400018ae:	mov    rdx,QWORD PTR [rsp+0x70]
   1400018b3:	add    rdx,0xffffffffffffffe8
   1400018b7:	mov    eax,ebx
   1400018b9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400018be:	add    eax,ebx
   1400018c0:	test   eax,eax
   1400018c2:	jg     0x1400018ce
   1400018c4:	mov    rcx,QWORD PTR [rdx]
   1400018c7:	mov    rax,QWORD PTR [rcx]
   1400018ca:	call   QWORD PTR [rax+0x8]
   1400018cd:	nop
   1400018ce:	mov    rdx,QWORD PTR [rsp+0x78]
   1400018d3:	add    rdx,0xffffffffffffffe8
   1400018d7:	mov    ecx,ebx
   1400018d9:	lock xadd DWORD PTR [rdx+0x10],ecx
   1400018de:	add    ecx,ebx
   1400018e0:	test   ecx,ecx
   1400018e2:	jg     0x1400018ef
   1400018e4:	mov    rcx,QWORD PTR [rdx]
   1400018e7:	mov    r8,QWORD PTR [rcx]
   1400018ea:	call   QWORD PTR [r8+0x8]
   1400018ee:	nop
   1400018ef:	lea    rcx,[rbp-0x80]
   1400018f3:	call   0x14000143c
   1400018f8:	mov    eax,edi
   1400018fa:	mov    rcx,QWORD PTR [rbp+0x250]
   140001901:	xor    rcx,rsp
   140001904:	call   0x140005fe0
   140001909:	lea    r11,[rsp+0x360]
   140001911:	mov    rbx,QWORD PTR [r11+0x30]
   140001915:	mov    rsi,QWORD PTR [r11+0x38]
   140001919:	mov    rsp,r11
   14000191c:	pop    r14
   14000191e:	pop    rdi
   14000191f:	pop    rbp
   140001920:	ret    
   140001921:	int3   
   140001922:	int3   
   140001923:	int3   
   140001924:	rex push rbp
   140001926:	push   rbx
   140001927:	push   rdi
   140001928:	push   r14
   14000192a:	mov    rbp,rsp
   14000192d:	sub    rsp,0x68
   140001931:	mov    r14,rcx
   140001934:	test   rcx,rcx
   140001937:	jne    0x140001941
   140001939:	or     eax,0xffffffff
   14000193c:	jmp    0x140001b5a
   140001941:	call   0x140003198
   140001946:	xor    ecx,ecx
   140001948:	mov    edx,0x10000
   14000194d:	lea    r9d,[rcx+0x4]
   140001951:	mov    r8d,0x3000
   140001957:	call   QWORD PTR [rip+0x117d3]        # 0x140013130
   14000195d:	mov    rdi,rax
   140001960:	test   rax,rax
   140001963:	jne    0x140001970
   140001965:	call   QWORD PTR [rip+0x117cd]        # 0x140013138
   14000196b:	jmp    0x140001b5a
   140001970:	mov    rcx,QWORD PTR [r14+0x8]
   140001974:	mov    rbx,QWORD PTR [r14+0x10]
   140001978:	mov    rax,QWORD PTR [r14]
   14000197b:	and    DWORD PTR [rbp-0x18],0x0
   14000197f:	and    DWORD PTR [rbp-0x14],0x0
   140001983:	mov    QWORD PTR [rbp-0x10],rcx
   140001987:	mov    QWORD PTR [rbp-0x30],rcx
   14000198b:	lea    rdx,[rbp-0x28]
   14000198f:	mov    rcx,rbx
   140001992:	mov    QWORD PTR [rbp-0x38],rax
   140001996:	call   QWORD PTR [rip+0x117fc]        # 0x140013198
   14000199c:	test   eax,eax
   14000199e:	jne    0x1400019fc
   1400019a0:	call   QWORD PTR [rip+0x11792]        # 0x140013138
   1400019a6:	cmp    eax,0x217
   1400019ab:	je     0x1400019fc
   1400019ad:	cmp    eax,0x3e5
   1400019b2:	jne    0x1400019ee
   1400019b4:	xor    r8d,r8d
   1400019b7:	lea    rdx,[rbp-0x38]
   1400019bb:	or     r9d,0xffffffff
   1400019bf:	lea    ecx,[r8+0x2]
   1400019c3:	call   QWORD PTR [rip+0x11757]        # 0x140013120
   1400019c9:	test   eax,eax
   1400019cb:	je     0x140001b42
   1400019d1:	cmp    eax,0x1
   1400019d4:	jne    0x1400019ee
   1400019d6:	lea    r8,[rbp+0x38]
   1400019da:	lea    rdx,[rbp-0x28]
   1400019de:	mov    r9d,eax
   1400019e1:	mov    rcx,rbx
   1400019e4:	call   QWORD PTR [rip+0x11766]        # 0x140013150
   1400019ea:	test   eax,eax
   1400019ec:	jne    0x1400019fc
   1400019ee:	mov    rcx,rbx
   1400019f1:	call   QWORD PTR [rip+0x11751]        # 0x140013148
   1400019f7:	jmp    0x140001970
   1400019fc:	and    DWORD PTR [rbp-0x18],0x0
   140001a00:	and    DWORD PTR [rbp-0x14],0x0
   140001a04:	lea    rax,[rbp-0x28]
   140001a08:	xor    r9d,r9d
   140001a0b:	mov    r8d,0x10000
   140001a11:	mov    rdx,rdi
   140001a14:	mov    rcx,rbx
   140001a17:	mov    QWORD PTR [rsp+0x20],rax
   140001a1c:	call   QWORD PTR [rip+0x11736]        # 0x140013158
   140001a22:	test   eax,eax
   140001a24:	jne    0x140001a55
   140001a26:	call   QWORD PTR [rip+0x1170c]        # 0x140013138
   140001a2c:	cmp    eax,0x3e5
   140001a31:	jne    0x1400019ee
   140001a33:	xor    r8d,r8d
   140001a36:	lea    rdx,[rbp-0x38]
   140001a3a:	or     r9d,0xffffffff
   140001a3e:	lea    ecx,[r8+0x2]
   140001a42:	call   QWORD PTR [rip+0x116d8]        # 0x140013120
   140001a48:	test   eax,eax
   140001a4a:	je     0x140001b39
   140001a50:	cmp    eax,0x1
   140001a53:	jne    0x1400019ee
   140001a55:	lea    r8,[rbp+0x28]
   140001a59:	lea    rdx,[rbp-0x28]
   140001a5d:	mov    r9d,0x1
   140001a63:	mov    rcx,rbx
   140001a66:	call   QWORD PTR [rip+0x116e4]        # 0x140013150
   140001a6c:	test   eax,eax
   140001a6e:	je     0x1400019ee
   140001a74:	mov    eax,DWORD PTR [rbp+0x28]
   140001a77:	test   eax,eax
   140001a79:	je     0x1400019ee
   140001a7f:	cmp    eax,0x124
   140001a84:	je     0x140001a8d
   140001a86:	mov    eax,0xe1230553
   140001a8b:	jmp    0x140001ac9
   140001a8d:	cmp    DWORD PTR [rdi],0x0
   140001a90:	mov    eax,0x80004005
   140001a95:	jle    0x140001ac9
   140001a97:	cmp    DWORD PTR [rdi],0x2
   140001a9a:	jle    0x140001abd
   140001a9c:	cmp    DWORD PTR [rdi],0x3
   140001a9f:	je     0x140001aaf
   140001aa1:	cmp    DWORD PTR [rdi],0x4
   140001aa4:	jne    0x140001ac9
   140001aa6:	call   0x140003244
   140001aab:	xor    eax,eax
   140001aad:	jmp    0x140001ac9
   140001aaf:	lea    rdx,[rdi+0x4]
   140001ab3:	mov    rcx,rbx
   140001ab6:	call   0x1400032f0
   140001abb:	jmp    0x140001ac9
   140001abd:	lea    rdx,[rdi+0x4]
   140001ac1:	mov    rcx,rbx
   140001ac4:	call   0x14000163c
   140001ac9:	and    DWORD PTR [rbp-0x18],0x0
   140001acd:	and    DWORD PTR [rbp-0x14],0x0
   140001ad1:	mov    DWORD PTR [rbp+0x30],eax
   140001ad4:	lea    rax,[rbp-0x28]
   140001ad8:	lea    r9,[rbp+0x40]
   140001adc:	lea    rdx,[rbp+0x30]
   140001ae0:	mov    r8d,0x4
   140001ae6:	mov    rcx,rbx
   140001ae9:	mov    QWORD PTR [rsp+0x20],rax
   140001aee:	call   QWORD PTR [rip+0x1168c]        # 0x140013180
   140001af4:	test   eax,eax
   140001af6:	jne    0x140001b2b
   140001af8:	call   QWORD PTR [rip+0x1163a]        # 0x140013138
   140001afe:	cmp    eax,0x3e5
   140001b03:	jne    0x1400019ee
   140001b09:	xor    r8d,r8d
   140001b0c:	lea    rdx,[rbp-0x38]
   140001b10:	or     r9d,0xffffffff
   140001b14:	lea    ecx,[r8+0x2]
   140001b18:	call   QWORD PTR [rip+0x11602]        # 0x140013120
   140001b1e:	test   eax,eax
   140001b20:	je     0x140001b39
   140001b22:	cmp    eax,0x1
   140001b25:	jne    0x1400019ee
   140001b2b:	mov    rcx,rbx
   140001b2e:	call   QWORD PTR [rip+0x1160c]        # 0x140013140
   140001b34:	jmp    0x1400019ee
   140001b39:	mov    rcx,rbx
   140001b3c:	call   QWORD PTR [rip+0x11606]        # 0x140013148
   140001b42:	xor    edx,edx
   140001b44:	mov    r8d,0x8000
   140001b4a:	mov    rcx,rdi
   140001b4d:	call   QWORD PTR [rip+0x11635]        # 0x140013188
   140001b53:	call   0x140003244
   140001b58:	xor    eax,eax
   140001b5a:	add    rsp,0x68
   140001b5e:	pop    r14
   140001b60:	pop    rdi
   140001b61:	pop    rbx
   140001b62:	pop    rbp
   140001b63:	ret    
   140001b64:	sub    rsp,0x38
   140001b68:	call   QWORD PTR [rip+0x114ba]        # 0x140013028
   140001b6e:	test   eax,eax
   140001b70:	jne    0x140001b76
   140001b72:	xor    eax,eax
   140001b74:	jmp    0x140001be9
   140001b76:	call   QWORD PTR [rip+0x11614]        # 0x140013190
   140001b7c:	lea    r9,[rsp+0x50]
   140001b81:	xor    r8d,r8d
   140001b84:	mov    rcx,rax
   140001b87:	mov    edx,0xf01ff
   140001b8c:	call   QWORD PTR [rip+0x11476]        # 0x140013008
   140001b92:	test   eax,eax
   140001b94:	jne    0x140001b9e
   140001b96:	call   QWORD PTR [rip+0x11494]        # 0x140013030
   140001b9c:	jmp    0x140001b72
   140001b9e:	mov    rcx,QWORD PTR [rsp+0x50]
   140001ba3:	lea    rax,[rsp+0x48]
   140001ba8:	mov    r9d,0x2
   140001bae:	mov    QWORD PTR [rsp+0x28],rax
   140001bb3:	xor    r8d,r8d
   140001bb6:	mov    edx,0x2000000
   140001bbb:	mov    DWORD PTR [rsp+0x20],0x1
   140001bc3:	call   QWORD PTR [rip+0x11457]        # 0x140013020
   140001bc9:	neg    eax
   140001bcb:	sbb    rcx,rcx
   140001bce:	and    QWORD PTR [rsp+0x48],rcx
   140001bd3:	mov    rcx,QWORD PTR [rsp+0x50]
   140001bd8:	call   QWORD PTR [rip+0x1153a]        # 0x140013118
   140001bde:	call   QWORD PTR [rip+0x1144c]        # 0x140013030
   140001be4:	mov    rax,QWORD PTR [rsp+0x48]
   140001be9:	add    rsp,0x38
   140001bed:	ret    
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    rax,rsp
   140001bf3:	mov    QWORD PTR [rax+0x8],rcx
   140001bf7:	push   rdi
   140001bf8:	sub    rsp,0x30
   140001bfc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001c04:	mov    QWORD PTR [rax+0x10],rbx
   140001c08:	mov    QWORD PTR [rax+0x18],rsi
   140001c0c:	mov    rbx,rdx
   140001c0f:	mov    rdi,rcx
   140001c12:	lea    rcx,[rip+0x1a75f]        # 0x14001c378
   140001c19:	mov    rax,QWORD PTR [rip+0x1a758]        # 0x14001c378
   140001c20:	call   QWORD PTR [rax+0x18]
   140001c23:	add    rax,0x18
   140001c27:	mov    QWORD PTR [rdi],rax
   140001c2a:	xor    esi,esi
   140001c2c:	test   rbx,rbx
   140001c2f:	je     0x140001c68
   140001c31:	test   rbx,0xffffffffffff0000
   140001c38:	jne    0x140001c59
   140001c3a:	movzx  ebx,bx
   140001c3d:	mov    ecx,ebx
   140001c3f:	call   0x140001390
   140001c44:	test   rax,rax
   140001c47:	je     0x140001c79
   140001c49:	mov    r8d,ebx
   140001c4c:	mov    rdx,rax
   140001c4f:	mov    rcx,rdi
   140001c52:	call   0x140002284
   140001c57:	jmp    0x140001c79
   140001c59:	or     rax,0xffffffffffffffff
   140001c5d:	inc    rax
   140001c60:	cmp    WORD PTR [rbx+rax*2],si
   140001c64:	jne    0x140001c5d
   140001c66:	jmp    0x140001c6a
   140001c68:	mov    eax,esi
   140001c6a:	mov    r8d,eax
   140001c6d:	mov    rdx,rbx
   140001c70:	mov    rcx,rdi
   140001c73:	call   0x1400025c8
   140001c78:	nop
   140001c79:	mov    rax,rdi
   140001c7c:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c81:	mov    rsi,QWORD PTR [rsp+0x50]
   140001c86:	add    rsp,0x30
   140001c8a:	pop    rdi
   140001c8b:	ret    
   140001c8c:	sub    rsp,0x28
   140001c90:	mov    rdx,QWORD PTR [rcx]
   140001c93:	sub    rdx,0x18
   140001c97:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001c9c:	jg     0x140001ca7
   140001c9e:	mov    rcx,QWORD PTR [rdx]
   140001ca1:	mov    rax,QWORD PTR [rcx]
   140001ca4:	call   QWORD PTR [rax+0x8]
   140001ca7:	add    rsp,0x28
   140001cab:	ret    
   140001cac:	mov    rax,rsp
   140001caf:	mov    QWORD PTR [rax+0x8],rcx
   140001cb3:	push   rdi
   140001cb4:	push   r14
   140001cb6:	push   r15
   140001cb8:	sub    rsp,0x30
   140001cbc:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140001cc4:	mov    QWORD PTR [rax+0x10],rbx
   140001cc8:	mov    QWORD PTR [rax+0x18],rbp
   140001ccc:	mov    QWORD PTR [rax+0x20],rsi
   140001cd0:	mov    rbx,rdx
   140001cd3:	mov    rsi,rcx
   140001cd6:	xor    r15d,r15d
   140001cd9:	mov    DWORD PTR [rax-0x28],r15d
   140001cdd:	mov    rax,QWORD PTR [rdx]
   140001ce0:	mov    rcx,QWORD PTR [rax-0x18]
   140001ce4:	test   rcx,rcx
   140001ce7:	je     0x140001cf4
   140001ce9:	mov    rax,QWORD PTR [rcx]
   140001cec:	call   QWORD PTR [rax+0x20]
   140001cef:	mov    rdx,rax
   140001cf2:	jmp    0x140001cf7
   140001cf4:	mov    rdx,r15
   140001cf7:	test   rdx,rdx
   140001cfa:	jne    0x140001d10
   140001cfc:	lea    rcx,[rip+0x1a675]        # 0x14001c378
   140001d03:	mov    rax,QWORD PTR [rip+0x1a66e]        # 0x14001c378
   140001d0a:	call   QWORD PTR [rax+0x20]
   140001d0d:	mov    rdx,rax
   140001d10:	mov    ecx,r15d
   140001d13:	test   rdx,rdx
   140001d16:	setne  cl
   140001d19:	test   ecx,ecx
   140001d1b:	jne    0x140001d28
   140001d1d:	mov    ecx,0x80004005
   140001d22:	call   0x1400012e4
   140001d27:	int3   
   140001d28:	mov    rax,QWORD PTR [rdx]
   140001d2b:	mov    rcx,rdx
   140001d2e:	call   QWORD PTR [rax+0x18]
   140001d31:	add    rax,0x18
   140001d35:	mov    QWORD PTR [rsi],rax
   140001d38:	mov    ecx,0x1
   140001d3d:	mov    DWORD PTR [rsp+0x20],ecx
   140001d41:	mov    r14,QWORD PTR [rbx]
   140001d44:	movsxd rbx,DWORD PTR [r14-0x10]
   140001d48:	lea    ebp,[rbx+0xe]
   140001d4b:	test   ebp,ebp
   140001d4d:	jns    0x140001d5a
   140001d4f:	mov    ecx,0x80070057
   140001d54:	call   0x1400012e4
   140001d59:	int3   
   140001d5a:	sub    ecx,DWORD PTR [rax-0x8]
   140001d5d:	mov    eax,DWORD PTR [rax-0xc]
   140001d60:	sub    eax,ebp
   140001d62:	or     ecx,eax
   140001d64:	jge    0x140001d70
   140001d66:	mov    edx,ebp
   140001d68:	mov    rcx,rsi
   140001d6b:	call   0x14000270c
   140001d70:	mov    rdi,QWORD PTR [rsi]
   140001d73:	add    rbx,rbx
   140001d76:	mov    r9,rbx
   140001d79:	mov    r8,r14
   140001d7c:	mov    rdx,rbx
   140001d7f:	mov    rcx,rdi
   140001d82:	call   0x140006850
   140001d87:	lea    rcx,[rbx+rdi*1]
   140001d8b:	mov    edx,0x1c
   140001d90:	mov    r9d,edx
   140001d93:	lea    r8,[rip+0x15236]        # 0x140016fd0
   140001d9a:	call   0x140006850
   140001d9f:	mov    rax,QWORD PTR [rsi]
   140001da2:	cmp    ebp,DWORD PTR [rax-0xc]
   140001da5:	jg     0x140001dba
   140001da7:	mov    DWORD PTR [rax-0x10],ebp
   140001daa:	movsxd rcx,ebp
   140001dad:	mov    rax,QWORD PTR [rsi]
   140001db0:	mov    WORD PTR [rax+rcx*2],r15w
   140001db5:	mov    rax,rsi
   140001db8:	jmp    0x140001dc5
   140001dba:	mov    ecx,0x80070057
   140001dbf:	call   0x1400012e4
   140001dc4:	nop
   140001dc5:	mov    rbx,QWORD PTR [rsp+0x58]
   140001dca:	mov    rbp,QWORD PTR [rsp+0x60]
   140001dcf:	mov    rsi,QWORD PTR [rsp+0x68]
   140001dd4:	add    rsp,0x30
   140001dd8:	pop    r15
   140001dda:	pop    r14
   140001ddc:	pop    rdi
   140001ddd:	ret    
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	rex push rbx
   140001de2:	sub    rsp,0x20
   140001de6:	mov    rbx,rcx
   140001de9:	mov    rcx,QWORD PTR [rcx]
   140001dec:	test   rcx,rcx
   140001def:	je     0x140001e04
   140001df1:	call   0x140005fbc
   140001df6:	and    QWORD PTR [rbx],0x0
   140001dfa:	and    QWORD PTR [rbx+0x8],0x0
   140001dff:	and    QWORD PTR [rbx+0x10],0x0
   140001e04:	add    rsp,0x20
   140001e08:	pop    rbx
   140001e09:	ret    
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	mov    rax,rsp
   140001e0f:	mov    QWORD PTR [rax+0x8],rbx
   140001e13:	mov    QWORD PTR [rax+0x10],rbp
   140001e17:	mov    QWORD PTR [rax+0x18],rsi
   140001e1b:	mov    QWORD PTR [rax+0x20],rdi
   140001e1f:	push   r14
   140001e21:	sub    rsp,0x40
   140001e25:	xor    r14d,r14d
   140001e28:	mov    rbp,rdx
   140001e2b:	mov    rbx,rcx
   140001e2e:	mov    esi,0x1
   140001e33:	test   rdx,rdx
   140001e36:	je     0x140001e60
   140001e38:	mov    QWORD PTR [rax-0x10],r14
   140001e3c:	mov    QWORD PTR [rax-0x18],r14
   140001e40:	mov    r8,rdx
   140001e43:	mov    DWORD PTR [rax-0x20],r14d
   140001e47:	lea    ecx,[rsi+0x2]
   140001e4a:	or     r9d,0xffffffff
   140001e4e:	xor    edx,edx
   140001e50:	mov    QWORD PTR [rax-0x28],r14
   140001e54:	call   QWORD PTR [rip+0x11316]        # 0x140013170
   140001e5a:	mov    edi,eax
   140001e5c:	sub    edi,esi
   140001e5e:	jmp    0x140001e63
   140001e60:	mov    edi,r14d
   140001e63:	mov    rax,QWORD PTR [rbx]
   140001e66:	test   edi,edi
   140001e68:	jle    0x140001ebf
   140001e6a:	sub    esi,DWORD PTR [rax-0x8]
   140001e6d:	mov    eax,DWORD PTR [rax-0xc]
   140001e70:	sub    eax,edi
   140001e72:	or     esi,eax
   140001e74:	jge    0x140001e80
   140001e76:	mov    edx,edi
   140001e78:	mov    rcx,rbx
   140001e7b:	call   0x140002568
   140001e80:	mov    rax,QWORD PTR [rbx]
   140001e83:	mov    QWORD PTR [rsp+0x38],r14
   140001e88:	xor    edx,edx
   140001e8a:	mov    QWORD PTR [rsp+0x30],r14
   140001e8f:	lea    ecx,[rdx+0x3]
   140001e92:	or     r9d,0xffffffff
   140001e96:	mov    r8,rbp
   140001e99:	mov    DWORD PTR [rsp+0x28],edi
   140001e9d:	mov    QWORD PTR [rsp+0x20],rax
   140001ea2:	call   QWORD PTR [rip+0x112c8]        # 0x140013170
   140001ea8:	mov    rax,QWORD PTR [rbx]
   140001eab:	cmp    edi,DWORD PTR [rax-0xc]
   140001eae:	jg     0x140001f22
   140001eb0:	mov    DWORD PTR [rax-0x10],edi
   140001eb3:	mov    rax,QWORD PTR [rbx]
   140001eb6:	movsxd rcx,edi
   140001eb9:	mov    BYTE PTR [rcx+rax*1],r14b
   140001ebd:	jmp    0x140001f04
   140001ebf:	lea    rdx,[rax-0x18]
   140001ec3:	mov    rdi,QWORD PTR [rdx]
   140001ec6:	cmp    DWORD PTR [rdx+0x8],r14d
   140001eca:	je     0x140001f04
   140001ecc:	cmp    DWORD PTR [rdx+0x10],r14d
   140001ed0:	jge    0x140001ee4
   140001ed2:	cmp    DWORD PTR [rax-0xc],r14d
   140001ed6:	jl     0x140001f2d
   140001ed8:	mov    DWORD PTR [rax-0x10],r14d
   140001edc:	mov    rax,QWORD PTR [rbx]
   140001edf:	mov    BYTE PTR [rax],r14b
   140001ee2:	jmp    0x140001f04
   140001ee4:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001ee9:	jg     0x140001ef4
   140001eeb:	mov    rcx,QWORD PTR [rdx]
   140001eee:	mov    rax,QWORD PTR [rcx]
   140001ef1:	call   QWORD PTR [rax+0x8]
   140001ef4:	mov    rax,QWORD PTR [rdi]
   140001ef7:	mov    rcx,rdi
   140001efa:	call   QWORD PTR [rax+0x18]
   140001efd:	add    rax,0x18
   140001f01:	mov    QWORD PTR [rbx],rax
   140001f04:	mov    rbp,QWORD PTR [rsp+0x58]
   140001f09:	mov    rsi,QWORD PTR [rsp+0x60]
   140001f0e:	mov    rdi,QWORD PTR [rsp+0x68]
   140001f13:	mov    rax,rbx
   140001f16:	mov    rbx,QWORD PTR [rsp+0x50]
   140001f1b:	add    rsp,0x40
   140001f1f:	pop    r14
   140001f21:	ret    
   140001f22:	mov    ecx,0x80070057
   140001f27:	call   0x1400012e4
   140001f2c:	int3   
   140001f2d:	mov    ecx,0x80070057
   140001f32:	call   0x1400012e4
   140001f37:	int3   
   140001f38:	mov    QWORD PTR [rsp+0x8],rbx
   140001f3d:	mov    QWORD PTR [rsp+0x10],rsi
   140001f42:	push   rdi
   140001f43:	sub    rsp,0x20
   140001f47:	mov    rdi,r8
   140001f4a:	mov    rsi,rdx
   140001f4d:	mov    rbx,rcx
   140001f50:	test   rdx,rdx
   140001f53:	je     0x140001fa1
   140001f55:	cmp    QWORD PTR [rcx+0x18],0x10
   140001f5a:	jb     0x140001f61
   140001f5c:	mov    rax,QWORD PTR [rcx]
   140001f5f:	jmp    0x140001f64
   140001f61:	mov    rax,rcx
   140001f64:	cmp    rdx,rax
   140001f67:	jb     0x140001fa1
   140001f69:	cmp    QWORD PTR [rcx+0x18],0x10
   140001f6e:	jb     0x140001f73
   140001f70:	mov    rcx,QWORD PTR [rcx]
   140001f73:	add    rcx,QWORD PTR [rbx+0x10]
   140001f77:	cmp    rcx,rdx
   140001f7a:	jbe    0x140001fa1
   140001f7c:	cmp    QWORD PTR [rbx+0x18],0x10
   140001f81:	jb     0x140001f88
   140001f83:	mov    rax,QWORD PTR [rbx]
   140001f86:	jmp    0x140001f8b
   140001f88:	mov    rax,rbx
   140001f8b:	sub    rsi,rax
   140001f8e:	mov    r9,r8
   140001f91:	mov    rdx,rbx
   140001f94:	mov    r8,rsi
   140001f97:	mov    rcx,rbx
   140001f9a:	call   0x140002038
   140001f9f:	jmp    0x14000201b
   140001fa1:	cmp    r8,0xfffffffffffffffe
   140001fa5:	ja     0x14000202b
   140001fab:	cmp    QWORD PTR [rbx+0x18],r8
   140001faf:	jae    0x140001fc2
   140001fb1:	mov    r8,QWORD PTR [rbx+0x10]
   140001fb5:	mov    rdx,rdi
   140001fb8:	mov    rcx,rbx
   140001fbb:	call   0x140002464
   140001fc0:	jmp    0x140001fdd
   140001fc2:	test   r8,r8
   140001fc5:	jne    0x140001fdd
   140001fc7:	and    QWORD PTR [rbx+0x10],r8
   140001fcb:	cmp    QWORD PTR [rbx+0x18],0x10
   140001fd0:	jb     0x140001fd7
   140001fd2:	mov    rax,QWORD PTR [rbx]
   140001fd5:	jmp    0x140001fda
   140001fd7:	mov    rax,rbx
   140001fda:	mov    BYTE PTR [rax],0x0
   140001fdd:	test   rdi,rdi
   140001fe0:	je     0x140002018
   140001fe2:	cmp    QWORD PTR [rbx+0x18],0x10
   140001fe7:	jb     0x140001fee
   140001fe9:	mov    rcx,QWORD PTR [rbx]
   140001fec:	jmp    0x140001ff1
   140001fee:	mov    rcx,rbx
   140001ff1:	test   rdi,rdi
   140001ff4:	je     0x140002001
   140001ff6:	mov    r8,rdi
   140001ff9:	mov    rdx,rsi
   140001ffc:	call   0x140006070
   140002001:	cmp    QWORD PTR [rbx+0x18],0x10
   140002006:	mov    QWORD PTR [rbx+0x10],rdi
   14000200a:	jb     0x140002011
   14000200c:	mov    rax,QWORD PTR [rbx]
   14000200f:	jmp    0x140002014
   140002011:	mov    rax,rbx
   140002014:	mov    BYTE PTR [rax+rdi*1],0x0
   140002018:	mov    rax,rbx
   14000201b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002020:	mov    rsi,QWORD PTR [rsp+0x38]
   140002025:	add    rsp,0x20
   140002029:	pop    rdi
   14000202a:	ret    
   14000202b:	lea    rcx,[rip+0x14fd6]        # 0x140017008
   140002032:	call   0x14000f244
   140002037:	int3   
   140002038:	mov    QWORD PTR [rsp+0x8],rbx
   14000203d:	mov    QWORD PTR [rsp+0x10],rbp
   140002042:	mov    QWORD PTR [rsp+0x18],rsi
   140002047:	push   rdi
   140002048:	sub    rsp,0x20
   14000204c:	mov    rdi,QWORD PTR [rdx+0x10]
   140002050:	mov    rbp,r8
   140002053:	mov    rsi,rdx
   140002056:	mov    rbx,rcx
   140002059:	cmp    rdi,r8
   14000205c:	jb     0x140002134
   140002062:	sub    rdi,r8
   140002065:	cmp    r9,rdi
   140002068:	cmovb  rdi,r9
   14000206c:	cmp    rcx,rdx
   14000206f:	jne    0x14000209d
   140002071:	lea    rax,[rdi+r8*1]
   140002075:	cmp    QWORD PTR [rcx+0x10],rax
   140002079:	jb     0x140002141
   14000207f:	cmp    QWORD PTR [rcx+0x18],0x10
   140002084:	mov    QWORD PTR [rcx+0x10],rax
   140002088:	jb     0x14000208d
   14000208a:	mov    rcx,QWORD PTR [rcx]
   14000208d:	mov    BYTE PTR [rax+rcx*1],0x0
   140002091:	xor    edx,edx
   140002093:	mov    rcx,rbx
   140002096:	call   0x1400023c8
   14000209b:	jmp    0x14000211c
   14000209d:	cmp    rdi,0xfffffffffffffffe
   1400020a1:	ja     0x14000214e
   1400020a7:	cmp    QWORD PTR [rcx+0x18],rdi
   1400020ab:	jae    0x1400020bb
   1400020ad:	mov    r8,QWORD PTR [rcx+0x10]
   1400020b1:	mov    rdx,rdi
   1400020b4:	call   0x140002464
   1400020b9:	jmp    0x1400020d6
   1400020bb:	test   rdi,rdi
   1400020be:	jne    0x1400020db
   1400020c0:	and    QWORD PTR [rcx+0x10],rdi
   1400020c4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400020c9:	jb     0x1400020d0
   1400020cb:	mov    rax,QWORD PTR [rcx]
   1400020ce:	jmp    0x1400020d3
   1400020d0:	mov    rax,rcx
   1400020d3:	mov    BYTE PTR [rax],0x0
   1400020d6:	test   rdi,rdi
   1400020d9:	je     0x14000211c
   1400020db:	cmp    QWORD PTR [rsi+0x18],0x10
   1400020e0:	jb     0x1400020e5
   1400020e2:	mov    rsi,QWORD PTR [rsi]
   1400020e5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400020ea:	jb     0x1400020f1
   1400020ec:	mov    rcx,QWORD PTR [rbx]
   1400020ef:	jmp    0x1400020f4
   1400020f1:	mov    rcx,rbx
   1400020f4:	test   rdi,rdi
   1400020f7:	je     0x140002105
   1400020f9:	lea    rdx,[rsi+rbp*1]
   1400020fd:	mov    r8,rdi
   140002100:	call   0x140006070
   140002105:	cmp    QWORD PTR [rbx+0x18],0x10
   14000210a:	mov    QWORD PTR [rbx+0x10],rdi
   14000210e:	jb     0x140002115
   140002110:	mov    rax,QWORD PTR [rbx]
   140002113:	jmp    0x140002118
   140002115:	mov    rax,rbx
   140002118:	mov    BYTE PTR [rax+rdi*1],0x0
   14000211c:	mov    rbp,QWORD PTR [rsp+0x38]
   140002121:	mov    rsi,QWORD PTR [rsp+0x40]
   140002126:	mov    rax,rbx
   140002129:	mov    rbx,QWORD PTR [rsp+0x30]
   14000212e:	add    rsp,0x20
   140002132:	pop    rdi
   140002133:	ret    
   140002134:	lea    rcx,[rip+0x14eb5]        # 0x140016ff0
   14000213b:	call   0x14000f27c
   140002140:	int3   
   140002141:	lea    rcx,[rip+0x14ea8]        # 0x140016ff0
   140002148:	call   0x14000f27c
   14000214d:	int3   
   14000214e:	lea    rcx,[rip+0x14eb3]        # 0x140017008
   140002155:	call   0x14000f244
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	mov    rax,rsp
   14000215f:	mov    QWORD PTR [rax+0x8],rbx
   140002163:	mov    QWORD PTR [rax+0x10],rbp
   140002167:	mov    QWORD PTR [rax+0x18],rsi
   14000216b:	mov    QWORD PTR [rax+0x20],rdi
   14000216f:	push   r15
   140002171:	sub    rsp,0x40
   140002175:	mov    eax,r8d
   140002178:	mov    rsi,rdx
   14000217b:	mov    r15d,0x1
   140002181:	shr    eax,0x4
   140002184:	mov    ebx,r8d
   140002187:	mov    rdi,rcx
   14000218a:	add    ax,r15w
   14000218e:	lea    r8d,[r15+0x5]
   140002192:	mov    rcx,rsi
   140002195:	movzx  edx,ax
   140002198:	call   QWORD PTR [rip+0x11262]        # 0x140013400
   14000219e:	test   rax,rax
   1400021a1:	je     0x140002250
   1400021a7:	mov    r8d,ebx
   1400021aa:	mov    rdx,rax
   1400021ad:	mov    rcx,rsi
   1400021b0:	call   0x140001300
   1400021b5:	mov    rsi,rax
   1400021b8:	test   rax,rax
   1400021bb:	je     0x140002250
   1400021c1:	and    QWORD PTR [rsp+0x38],0x0
   1400021c7:	and    QWORD PTR [rsp+0x30],0x0
   1400021cd:	movzx  r9d,WORD PTR [rax]
   1400021d1:	and    DWORD PTR [rsp+0x28],0x0
   1400021d6:	and    QWORD PTR [rsp+0x20],0x0
   1400021dc:	xor    edx,edx
   1400021de:	lea    ecx,[rdx+0x3]
   1400021e1:	lea    r8,[rax+0x2]
   1400021e5:	call   QWORD PTR [rip+0x10f85]        # 0x140013170
   1400021eb:	movsxd rbx,eax
   1400021ee:	test   eax,eax
   1400021f0:	js     0x14000226d
   1400021f2:	mov    rax,QWORD PTR [rdi]
   1400021f5:	mov    ecx,r15d
   1400021f8:	sub    ecx,DWORD PTR [rax-0x8]
   1400021fb:	mov    eax,DWORD PTR [rax-0xc]
   1400021fe:	sub    eax,ebx
   140002200:	or     ecx,eax
   140002202:	jge    0x14000220e
   140002204:	mov    edx,ebx
   140002206:	mov    rcx,rdi
   140002209:	call   0x140002568
   14000220e:	mov    rdx,QWORD PTR [rdi]
   140002211:	and    QWORD PTR [rsp+0x38],0x0
   140002217:	and    QWORD PTR [rsp+0x30],0x0
   14000221d:	movzx  r9d,WORD PTR [rsi]
   140002221:	mov    DWORD PTR [rsp+0x28],ebx
   140002225:	mov    QWORD PTR [rsp+0x20],rdx
   14000222a:	xor    edx,edx
   14000222c:	lea    r8,[rsi+0x2]
   140002230:	lea    ecx,[rdx+0x3]
   140002233:	call   QWORD PTR [rip+0x10f37]        # 0x140013170
   140002239:	mov    rcx,QWORD PTR [rdi]
   14000223c:	cmp    ebx,DWORD PTR [rcx-0xc]
   14000223f:	jg     0x140002278
   140002241:	mov    DWORD PTR [rcx-0x10],ebx
   140002244:	mov    rcx,QWORD PTR [rdi]
   140002247:	mov    eax,r15d
   14000224a:	mov    BYTE PTR [rbx+rcx*1],0x0
   14000224e:	jmp    0x140002252
   140002250:	xor    eax,eax
   140002252:	mov    rbx,QWORD PTR [rsp+0x50]
   140002257:	mov    rbp,QWORD PTR [rsp+0x58]
   14000225c:	mov    rsi,QWORD PTR [rsp+0x60]
   140002261:	mov    rdi,QWORD PTR [rsp+0x68]
   140002266:	add    rsp,0x40
   14000226a:	pop    r15
   14000226c:	ret    
   14000226d:	mov    ecx,0x80070057
   140002272:	call   0x1400012e4
   140002277:	int3   
   140002278:	mov    ecx,0x80070057
   14000227d:	call   0x1400012e4
   140002282:	int3   
   140002283:	int3   
   140002284:	mov    rax,rsp
   140002287:	mov    QWORD PTR [rax+0x8],rbx
   14000228b:	mov    QWORD PTR [rax+0x10],rbp
   14000228f:	mov    QWORD PTR [rax+0x18],rsi
   140002293:	mov    QWORD PTR [rax+0x20],rdi
   140002297:	push   r14
   140002299:	sub    rsp,0x20
   14000229d:	mov    eax,r8d
   1400022a0:	mov    rdi,rdx
   1400022a3:	mov    r14d,0x1
   1400022a9:	shr    eax,0x4
   1400022ac:	mov    ebx,r8d
   1400022af:	mov    rsi,rcx
   1400022b2:	add    ax,r14w
   1400022b6:	lea    r8d,[r14+0x5]
   1400022ba:	mov    rcx,rdi
   1400022bd:	movzx  edx,ax
   1400022c0:	call   QWORD PTR [rip+0x1113a]        # 0x140013400
   1400022c6:	xor    ebp,ebp
   1400022c8:	test   rax,rax
   1400022cb:	je     0x140002374
   1400022d1:	mov    r8d,ebx
   1400022d4:	mov    rdx,rax
   1400022d7:	mov    rcx,rdi
   1400022da:	call   0x140001300
   1400022df:	mov    rdi,rax
   1400022e2:	test   rax,rax
   1400022e5:	je     0x140002374
   1400022eb:	movzx  ebx,WORD PTR [rax]
   1400022ee:	test   ebx,ebx
   1400022f0:	js     0x140002391
   1400022f6:	mov    rax,QWORD PTR [rsi]
   1400022f9:	mov    ecx,r14d
   1400022fc:	sub    ecx,DWORD PTR [rax-0x8]
   1400022ff:	mov    eax,DWORD PTR [rax-0xc]
   140002302:	sub    eax,ebx
   140002304:	or     ecx,eax
   140002306:	jge    0x140002312
   140002308:	mov    edx,ebx
   14000230a:	mov    rcx,rsi
   14000230d:	call   0x14000270c
   140002312:	movzx  ecx,WORD PTR [rdi]
   140002315:	or     rax,0xffffffffffffffff
   140002319:	lea    r8,[rdi+0x2]
   14000231d:	cmp    ecx,eax
   14000231f:	jne    0x140002337
   140002321:	test   r8,r8
   140002324:	jne    0x14000232a
   140002326:	mov    eax,ebp
   140002328:	jmp    0x140002334
   14000232a:	inc    rax
   14000232d:	cmp    WORD PTR [r8+rax*2],bp
   140002332:	jne    0x14000232a
   140002334:	lea    ecx,[rax+0x1]
   140002337:	movsxd r9,ecx
   14000233a:	mov    rcx,QWORD PTR [rsi]
   14000233d:	mov    rdx,rbx
   140002340:	call   0x140006554
   140002345:	test   eax,eax
   140002347:	je     0x14000235d
   140002349:	cmp    eax,0xc
   14000234c:	je     0x1400023b2
   14000234e:	cmp    eax,0x16
   140002351:	je     0x1400023a7
   140002353:	cmp    eax,0x22
   140002356:	je     0x1400023a7
   140002358:	cmp    eax,0x50
   14000235b:	jne    0x14000239c
   14000235d:	mov    rcx,QWORD PTR [rsi]
   140002360:	cmp    ebx,DWORD PTR [rcx-0xc]
   140002363:	jg     0x1400023bd
   140002365:	mov    DWORD PTR [rcx-0x10],ebx
   140002368:	mov    rcx,QWORD PTR [rsi]
   14000236b:	mov    eax,r14d
   14000236e:	mov    WORD PTR [rcx+rbx*2],bp
   140002372:	jmp    0x140002376
   140002374:	xor    eax,eax
   140002376:	mov    rbx,QWORD PTR [rsp+0x30]
   14000237b:	mov    rbp,QWORD PTR [rsp+0x38]
   140002380:	mov    rsi,QWORD PTR [rsp+0x40]
   140002385:	mov    rdi,QWORD PTR [rsp+0x48]
   14000238a:	add    rsp,0x20
   14000238e:	pop    r14
   140002390:	ret    
   140002391:	mov    ecx,0x80070057
   140002396:	call   0x1400012e4
   14000239b:	int3   
   14000239c:	mov    ecx,0x80004005
   1400023a1:	call   0x1400012e4
   1400023a6:	int3   
   1400023a7:	mov    ecx,0x80070057
   1400023ac:	call   0x1400012e4
   1400023b1:	int3   
   1400023b2:	mov    ecx,0x8007000e
   1400023b7:	call   0x1400012e4
   1400023bc:	int3   
   1400023bd:	mov    ecx,0x80070057
   1400023c2:	call   0x1400012e4
   1400023c7:	int3   
   1400023c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400023cd:	push   rdi
   1400023ce:	sub    rsp,0x20
   1400023d2:	mov    rdi,QWORD PTR [rcx+0x10]
   1400023d6:	mov    rbx,rcx
   1400023d9:	cmp    rdi,rdx
   1400023dc:	jb     0x140002456
   1400023de:	mov    rax,rdi
   1400023e1:	sub    rax,rdx
   1400023e4:	cmp    rax,r8
   1400023e7:	ja     0x140002402
   1400023e9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400023ee:	mov    QWORD PTR [rcx+0x10],rdx
   1400023f2:	jb     0x1400023f9
   1400023f4:	mov    rax,QWORD PTR [rcx]
   1400023f7:	jmp    0x1400023fc
   1400023f9:	mov    rax,rcx
   1400023fc:	mov    BYTE PTR [rax+rdx*1],0x0
   140002400:	jmp    0x140002448
   140002402:	test   r8,r8
   140002405:	je     0x140002448
   140002407:	cmp    QWORD PTR [rcx+0x18],0x10
   14000240c:	jb     0x140002413
   14000240e:	mov    rax,QWORD PTR [rcx]
   140002411:	jmp    0x140002416
   140002413:	mov    rax,rcx
   140002416:	sub    rdi,r8
   140002419:	lea    rcx,[rax+rdx*1]
   14000241d:	mov    rax,rdi
   140002420:	sub    rax,rdx
   140002423:	je     0x140002431
   140002425:	lea    rdx,[rcx+r8*1]
   140002429:	mov    r8,rax
   14000242c:	call   0x140006070
   140002431:	cmp    QWORD PTR [rbx+0x18],0x10
   140002436:	mov    QWORD PTR [rbx+0x10],rdi
   14000243a:	jb     0x140002441
   14000243c:	mov    rax,QWORD PTR [rbx]
   14000243f:	jmp    0x140002444
   140002441:	mov    rax,rbx
   140002444:	mov    BYTE PTR [rax+rdi*1],0x0
   140002448:	mov    rax,rbx
   14000244b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002450:	add    rsp,0x20
   140002454:	pop    rdi
   140002455:	ret    
   140002456:	lea    rcx,[rip+0x14b93]        # 0x140016ff0
   14000245d:	call   0x14000f27c
   140002462:	int3   
   140002463:	int3   
   140002464:	mov    rax,rsp
   140002467:	mov    QWORD PTR [rax+0x18],r8
   14000246b:	mov    QWORD PTR [rax+0x10],rdx
   14000246f:	mov    QWORD PTR [rax+0x8],rcx
   140002473:	push   rbx
   140002474:	push   rsi
   140002475:	push   rdi
   140002476:	push   r14
   140002478:	sub    rsp,0x38
   14000247c:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140002484:	mov    rsi,r8
   140002487:	mov    rbx,rcx
   14000248a:	mov    rdi,rdx
   14000248d:	or     rdi,0xf
   140002491:	mov    r9,0xfffffffffffffffe
   140002498:	cmp    rdi,r9
   14000249b:	jbe    0x1400024a2
   14000249d:	mov    rdi,rdx
   1400024a0:	jmp    0x1400024d3
   1400024a2:	mov    r8,QWORD PTR [rcx+0x18]
   1400024a6:	mov    rcx,r8
   1400024a9:	shr    rcx,1
   1400024ac:	movabs rax,0xaaaaaaaaaaaaaaab
   1400024b6:	mul    rdi
   1400024b9:	shr    rdx,1
   1400024bc:	cmp    rcx,rdx
   1400024bf:	jbe    0x1400024d3
   1400024c1:	mov    rax,r9
   1400024c4:	sub    rax,rcx
   1400024c7:	cmp    r8,rax
   1400024ca:	lea    rdi,[rcx+r8*1]
   1400024ce:	jbe    0x1400024d3
   1400024d0:	mov    rdi,r9
   1400024d3:	lea    rcx,[rdi+0x1]
   1400024d7:	xor    r14d,r14d
   1400024da:	test   rcx,rcx
   1400024dd:	je     0x1400024f8
   1400024df:	cmp    rcx,0xffffffffffffffff
   1400024e3:	ja     0x1400024f2
   1400024e5:	call   0x140006968
   1400024ea:	mov    r14,rax
   1400024ed:	test   rax,rax
   1400024f0:	jne    0x1400024f8
   1400024f2:	call   0x14000f200
   1400024f7:	nop
   1400024f8:	jmp    0x14000250e
   1400024fa:	mov    rbx,QWORD PTR [rsp+0x60]
   1400024ff:	mov    rsi,QWORD PTR [rsp+0x70]
   140002504:	mov    rdi,QWORD PTR [rsp+0x68]
   140002509:	mov    r14,QWORD PTR [rsp+0x78]
   14000250e:	test   rsi,rsi
   140002511:	je     0x140002532
   140002513:	cmp    QWORD PTR [rbx+0x18],0x10
   140002518:	jb     0x14000251f
   14000251a:	mov    rdx,QWORD PTR [rbx]
   14000251d:	jmp    0x140002522
   14000251f:	mov    rdx,rbx
   140002522:	test   rsi,rsi
   140002525:	je     0x140002532
   140002527:	mov    r8,rsi
   14000252a:	mov    rcx,r14
   14000252d:	call   0x140006070
   140002532:	cmp    QWORD PTR [rbx+0x18],0x10
   140002537:	jb     0x140002541
   140002539:	mov    rcx,QWORD PTR [rbx]
   14000253c:	call   0x140005fbc
   140002541:	mov    BYTE PTR [rbx],0x0
   140002544:	mov    QWORD PTR [rbx],r14
   140002547:	mov    QWORD PTR [rbx+0x18],rdi
   14000254b:	mov    QWORD PTR [rbx+0x10],rsi
   14000254f:	cmp    rdi,0x10
   140002553:	jb     0x140002558
   140002555:	mov    rbx,r14
   140002558:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000255c:	add    rsp,0x38
   140002560:	pop    r14
   140002562:	pop    rdi
   140002563:	pop    rsi
   140002564:	pop    rbx
   140002565:	ret    
   140002566:	int3   
   140002567:	int3   
   140002568:	sub    rsp,0x28
   14000256c:	mov    rax,QWORD PTR [rcx]
   14000256f:	mov    r8d,edx
   140002572:	mov    r9,rcx
   140002575:	cmp    DWORD PTR [rax-0x10],edx
   140002578:	cmovg  r8d,DWORD PTR [rax-0x10]
   14000257d:	cmp    DWORD PTR [rax-0x8],0x1
   140002581:	jle    0x14000258f
   140002583:	mov    edx,r8d
   140002586:	add    rsp,0x28
   14000258a:	jmp    0x14000276c
   14000258f:	mov    ecx,DWORD PTR [rax-0xc]
   140002592:	cmp    ecx,r8d
   140002595:	jge    0x1400025c1
   140002597:	cmp    ecx,0x40000000
   14000259d:	jle    0x1400025a7
   14000259f:	add    ecx,0x100000
   1400025a5:	jmp    0x1400025b0
   1400025a7:	mov    eax,ecx
   1400025a9:	cdq    
   1400025aa:	sub    eax,edx
   1400025ac:	sar    eax,1
   1400025ae:	add    ecx,eax
   1400025b0:	cmp    ecx,r8d
   1400025b3:	cmovl  ecx,r8d
   1400025b7:	mov    edx,ecx
   1400025b9:	mov    rcx,r9
   1400025bc:	call   0x14000280c
   1400025c1:	add    rsp,0x28
   1400025c5:	ret    
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400025cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400025d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400025d7:	push   rdi
   1400025d8:	push   r14
   1400025da:	push   r15
   1400025dc:	sub    rsp,0x20
   1400025e0:	xor    r15d,r15d
   1400025e3:	movsxd rdi,r8d
   1400025e6:	mov    rbp,rdx
   1400025e9:	mov    rbx,rcx
   1400025ec:	test   r8d,r8d
   1400025ef:	jne    0x140002657
   1400025f1:	mov    rax,QWORD PTR [rcx]
   1400025f4:	lea    rdx,[rax-0x18]
   1400025f8:	mov    rdi,QWORD PTR [rdx]
   1400025fb:	cmp    DWORD PTR [rdx+0x8],r15d
   1400025ff:	je     0x14000261c
   140002601:	cmp    DWORD PTR [rdx+0x10],r15d
   140002605:	jge    0x140002635
   140002607:	cmp    DWORD PTR [rax-0xc],r15d
   14000260b:	jl     0x1400026cd
   140002611:	mov    DWORD PTR [rax-0x10],r15d
   140002615:	mov    rax,QWORD PTR [rcx]
   140002618:	mov    WORD PTR [rax],r15w
   14000261c:	mov    rbx,QWORD PTR [rsp+0x40]
   140002621:	mov    rbp,QWORD PTR [rsp+0x48]
   140002626:	mov    rsi,QWORD PTR [rsp+0x50]
   14000262b:	add    rsp,0x20
   14000262f:	pop    r15
   140002631:	pop    r14
   140002633:	pop    rdi
   140002634:	ret    
   140002635:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000263a:	jg     0x140002645
   14000263c:	mov    rcx,QWORD PTR [rdx]
   14000263f:	mov    rax,QWORD PTR [rcx]
   140002642:	call   QWORD PTR [rax+0x8]
   140002645:	mov    rax,QWORD PTR [rdi]
   140002648:	mov    rcx,rdi
   14000264b:	call   QWORD PTR [rax+0x18]
   14000264e:	add    rax,0x18
   140002652:	mov    QWORD PTR [rbx],rax
   140002655:	jmp    0x14000261c
   140002657:	test   rdx,rdx
   14000265a:	je     0x1400026d8
   14000265c:	mov    rax,QWORD PTR [rcx]
   14000265f:	mov    rsi,rdx
   140002662:	mov    r14d,DWORD PTR [rax-0x10]
   140002666:	sub    rsi,rax
   140002669:	sar    rsi,1
   14000266c:	test   r8d,r8d
   14000266f:	js     0x1400026e3
   140002671:	mov    ecx,0x1
   140002676:	sub    ecx,DWORD PTR [rax-0x8]
   140002679:	mov    eax,DWORD PTR [rax-0xc]
   14000267c:	sub    eax,edi
   14000267e:	or     ecx,eax
   140002680:	jge    0x14000268c
   140002682:	mov    edx,edi
   140002684:	mov    rcx,rbx
   140002687:	call   0x14000270c
   14000268c:	mov    rcx,QWORD PTR [rbx]
   14000268f:	movsxd rdx,DWORD PTR [rcx-0xc]
   140002693:	add    rdx,rdx
   140002696:	cmp    rsi,r14
   140002699:	lea    r14,[rdi+rdi*1]
   14000269d:	mov    r9,r14
   1400026a0:	ja     0x1400026ad
   1400026a2:	lea    r8,[rcx+rsi*2]
   1400026a6:	call   0x140006000
   1400026ab:	jmp    0x1400026b5
   1400026ad:	mov    r8,rbp
   1400026b0:	call   0x140006850
   1400026b5:	mov    rax,QWORD PTR [rbx]
   1400026b8:	cmp    edi,DWORD PTR [rax-0xc]
   1400026bb:	jg     0x1400026ee
   1400026bd:	mov    DWORD PTR [rax-0x10],edi
   1400026c0:	mov    rax,QWORD PTR [rbx]
   1400026c3:	mov    WORD PTR [r14+rax*1],r15w
   1400026c8:	jmp    0x14000261c
   1400026cd:	mov    ecx,0x80070057
   1400026d2:	call   0x1400012e4
   1400026d7:	int3   
   1400026d8:	mov    ecx,0x80070057
   1400026dd:	call   0x1400012e4
   1400026e2:	int3   
   1400026e3:	mov    ecx,0x80070057
   1400026e8:	call   0x1400012e4
   1400026ed:	int3   
   1400026ee:	mov    ecx,0x80070057
   1400026f3:	call   0x1400012e4
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	sub    rsp,0x28
   140002700:	mov    ecx,0x8007000e
   140002705:	call   0x1400012e4
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	sub    rsp,0x28
   140002710:	mov    rax,QWORD PTR [rcx]
   140002713:	mov    r8d,edx
   140002716:	mov    r9,rcx
   140002719:	cmp    DWORD PTR [rax-0x10],edx
   14000271c:	cmovg  r8d,DWORD PTR [rax-0x10]
   140002721:	cmp    DWORD PTR [rax-0x8],0x1
   140002725:	jle    0x140002733
   140002727:	mov    edx,r8d
   14000272a:	add    rsp,0x28
   14000272e:	jmp    0x140002858
   140002733:	mov    ecx,DWORD PTR [rax-0xc]
   140002736:	cmp    ecx,r8d
   140002739:	jge    0x140002765
   14000273b:	cmp    ecx,0x40000000
   140002741:	jle    0x14000274b
   140002743:	add    ecx,0x100000
   140002749:	jmp    0x140002754
   14000274b:	mov    eax,ecx
   14000274d:	cdq    
   14000274e:	sub    eax,edx
   140002750:	sar    eax,1
   140002752:	add    ecx,eax
   140002754:	cmp    ecx,r8d
   140002757:	cmovl  ecx,r8d
   14000275b:	mov    edx,ecx
   14000275d:	mov    rcx,r9
   140002760:	call   0x140002900
   140002765:	add    rsp,0x28
   140002769:	ret    
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	mov    rax,rsp
   14000276f:	mov    QWORD PTR [rax+0x8],rbx
   140002773:	mov    QWORD PTR [rax+0x10],rbp
   140002777:	mov    QWORD PTR [rax+0x18],rsi
   14000277b:	mov    QWORD PTR [rax+0x20],rdi
   14000277f:	push   r14
   140002781:	sub    rsp,0x20
   140002785:	mov    rbx,QWORD PTR [rcx]
   140002788:	mov    rsi,rcx
   14000278b:	mov    edi,edx
   14000278d:	mov    rcx,QWORD PTR [rbx-0x18]
   140002791:	mov    ebp,DWORD PTR [rbx-0x10]
   140002794:	mov    rax,QWORD PTR [rcx]
   140002797:	call   QWORD PTR [rax+0x20]
   14000279a:	mov    r8d,0x1
   1400027a0:	mov    edx,edi
   1400027a2:	mov    r9,QWORD PTR [rax]
   1400027a5:	mov    rcx,rax
   1400027a8:	call   QWORD PTR [r9]
   1400027ab:	mov    r14,rax
   1400027ae:	test   rax,rax
   1400027b1:	je     0x140002806
   1400027b3:	cmp    ebp,edi
   1400027b5:	mov    r8,rbx
   1400027b8:	cmovl  edi,ebp
   1400027bb:	inc    edi
   1400027bd:	movsxd rdx,edi
   1400027c0:	lea    rdi,[rax+0x18]
   1400027c4:	mov    rcx,rdi
   1400027c7:	mov    r9,rdx
   1400027ca:	call   0x140006850
   1400027cf:	mov    DWORD PTR [r14+0x8],ebp
   1400027d3:	lock add DWORD PTR [rbx-0x8],0xffffffff
   1400027d8:	jg     0x1400027e8
   1400027da:	mov    rcx,QWORD PTR [rbx-0x18]
   1400027de:	lea    rdx,[rbx-0x18]
   1400027e2:	mov    rax,QWORD PTR [rcx]
   1400027e5:	call   QWORD PTR [rax+0x8]
   1400027e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400027f2:	mov    QWORD PTR [rsi],rdi
   1400027f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400027fa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400027ff:	add    rsp,0x20
   140002803:	pop    r14
   140002805:	ret    
   140002806:	call   0x1400026fc
   14000280b:	int3   
   14000280c:	rex push rbx
   14000280e:	sub    rsp,0x20
   140002812:	mov    r8d,edx
   140002815:	mov    rdx,QWORD PTR [rcx]
   140002818:	mov    rbx,rcx
   14000281b:	sub    rdx,0x18
   14000281f:	mov    rcx,QWORD PTR [rdx]
   140002822:	cmp    DWORD PTR [rdx+0xc],r8d
   140002826:	jge    0x140002851
   140002828:	test   r8d,r8d
   14000282b:	jle    0x140002851
   14000282d:	mov    rax,QWORD PTR [rcx]
   140002830:	mov    r9d,0x1
   140002836:	call   QWORD PTR [rax+0x10]
   140002839:	test   rax,rax
   14000283c:	je     0x14000284b
   14000283e:	add    rax,0x18
   140002842:	mov    QWORD PTR [rbx],rax
   140002845:	add    rsp,0x20
   140002849:	pop    rbx
   14000284a:	ret    
   14000284b:	call   0x1400026fc
   140002850:	int3   
   140002851:	call   0x1400026fc
   140002856:	int3   
   140002857:	int3   
   140002858:	mov    rax,rsp
   14000285b:	mov    QWORD PTR [rax+0x8],rbx
   14000285f:	mov    QWORD PTR [rax+0x10],rbp
   140002863:	mov    QWORD PTR [rax+0x18],rsi
   140002867:	mov    QWORD PTR [rax+0x20],rdi
   14000286b:	push   r14
   14000286d:	sub    rsp,0x20
   140002871:	mov    rbx,QWORD PTR [rcx]
   140002874:	mov    rsi,rcx
   140002877:	mov    edi,edx
   140002879:	mov    rcx,QWORD PTR [rbx-0x18]
   14000287d:	mov    r14d,DWORD PTR [rbx-0x10]
   140002881:	mov    rax,QWORD PTR [rcx]
   140002884:	call   QWORD PTR [rax+0x20]
   140002887:	mov    r8d,0x2
   14000288d:	mov    edx,edi
   14000288f:	mov    r9,QWORD PTR [rax]
   140002892:	mov    rcx,rax
   140002895:	call   QWORD PTR [r9]
   140002898:	mov    rbp,rax
   14000289b:	test   rax,rax
   14000289e:	je     0x1400028f8
   1400028a0:	cmp    r14d,edi
   1400028a3:	mov    r8,rbx
   1400028a6:	cmovl  edi,r14d
   1400028aa:	inc    edi
   1400028ac:	movsxd rdx,edi
   1400028af:	lea    rdi,[rax+0x18]
   1400028b3:	add    rdx,rdx
   1400028b6:	mov    rcx,rdi
   1400028b9:	mov    r9,rdx
   1400028bc:	call   0x140006850
   1400028c1:	mov    DWORD PTR [rbp+0x8],r14d
   1400028c5:	lock add DWORD PTR [rbx-0x8],0xffffffff
   1400028ca:	jg     0x1400028da
   1400028cc:	mov    rcx,QWORD PTR [rbx-0x18]
   1400028d0:	lea    rdx,[rbx-0x18]
   1400028d4:	mov    rax,QWORD PTR [rcx]
   1400028d7:	call   QWORD PTR [rax+0x8]
   1400028da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028df:	mov    rbp,QWORD PTR [rsp+0x38]
   1400028e4:	mov    QWORD PTR [rsi],rdi
   1400028e7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400028ec:	mov    rdi,QWORD PTR [rsp+0x48]
   1400028f1:	add    rsp,0x20
   1400028f5:	pop    r14
   1400028f7:	ret    
   1400028f8:	call   0x1400026fc
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	rex push rbx
   140002902:	sub    rsp,0x20
   140002906:	mov    r8d,edx
   140002909:	mov    rdx,QWORD PTR [rcx]
   14000290c:	mov    rbx,rcx
   14000290f:	sub    rdx,0x18
   140002913:	mov    rcx,QWORD PTR [rdx]
   140002916:	cmp    DWORD PTR [rdx+0xc],r8d
   14000291a:	jge    0x140002945
   14000291c:	test   r8d,r8d
   14000291f:	jle    0x140002945
   140002921:	mov    rax,QWORD PTR [rcx]
   140002924:	mov    r9d,0x2
   14000292a:	call   QWORD PTR [rax+0x10]
   14000292d:	test   rax,rax
   140002930:	je     0x14000293f
   140002932:	add    rax,0x18
   140002936:	mov    QWORD PTR [rbx],rax
   140002939:	add    rsp,0x20
   14000293d:	pop    rbx
   14000293e:	ret    
   14000293f:	call   0x1400026fc
   140002944:	int3   
   140002945:	call   0x1400026fc
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	rex push rbx
   14000294e:	sub    rsp,0x20
   140002952:	lea    rax,[rip+0x14857]        # 0x1400171b0
   140002959:	mov    rbx,rcx
   14000295c:	mov    QWORD PTR [rcx],rax
   14000295f:	mov    rcx,QWORD PTR [rcx+0x8]
   140002963:	test   rcx,rcx
   140002966:	je     0x14000296e
   140002968:	call   QWORD PTR [rip+0x107aa]        # 0x140013118
   14000296e:	mov    rcx,QWORD PTR [rbx+0x10]
   140002972:	test   rcx,rcx
   140002975:	je     0x14000297d
   140002977:	call   QWORD PTR [rip+0x1079b]        # 0x140013118
   14000297d:	mov    rcx,QWORD PTR [rbx+0x18]
   140002981:	test   rcx,rcx
   140002984:	je     0x14000298c
   140002986:	call   QWORD PTR [rip+0x1078c]        # 0x140013118
   14000298c:	mov    rcx,QWORD PTR [rbx+0x20]
   140002990:	test   rcx,rcx
   140002993:	je     0x14000299b
   140002995:	call   QWORD PTR [rip+0x1077d]        # 0x140013118
   14000299b:	add    rsp,0x20
   14000299f:	pop    rbx
   1400029a0:	ret    
   1400029a1:	int3   
   1400029a2:	int3   
   1400029a3:	int3   
   1400029a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400029a9:	push   rdi
   1400029aa:	sub    rsp,0x20
   1400029ae:	lea    rax,[rip+0x147fb]        # 0x1400171b0
   1400029b5:	mov    rbx,rcx
   1400029b8:	mov    edi,edx
   1400029ba:	mov    QWORD PTR [rcx],rax
   1400029bd:	mov    rcx,QWORD PTR [rcx+0x8]
   1400029c1:	test   rcx,rcx
   1400029c4:	je     0x1400029cc
   1400029c6:	call   QWORD PTR [rip+0x1074c]        # 0x140013118
   1400029cc:	mov    rcx,QWORD PTR [rbx+0x10]
   1400029d0:	test   rcx,rcx
   1400029d3:	je     0x1400029db
   1400029d5:	call   QWORD PTR [rip+0x1073d]        # 0x140013118
   1400029db:	mov    rcx,QWORD PTR [rbx+0x18]
   1400029df:	test   rcx,rcx
   1400029e2:	je     0x1400029ea
   1400029e4:	call   QWORD PTR [rip+0x1072e]        # 0x140013118
   1400029ea:	mov    rcx,QWORD PTR [rbx+0x20]
   1400029ee:	test   rcx,rcx
   1400029f1:	je     0x1400029f9
   1400029f3:	call   QWORD PTR [rip+0x1071f]        # 0x140013118
   1400029f9:	test   dil,0x1
   1400029fd:	je     0x140002a07
   1400029ff:	mov    rcx,rbx
   140002a02:	call   0x140005fbc
   140002a07:	mov    rax,rbx
   140002a0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a0f:	add    rsp,0x20
   140002a13:	pop    rdi
   140002a14:	ret    
   140002a15:	int3   
   140002a16:	int3   
   140002a17:	int3   
   140002a18:	sub    rsp,0x158
   140002a1f:	mov    rax,QWORD PTR [rip+0x18662]        # 0x14001b088
   140002a26:	xor    rax,rsp
   140002a29:	mov    QWORD PTR [rsp+0x140],rax
   140002a31:	xor    r9d,r9d
   140002a34:	xor    r8d,r8d
   140002a37:	xor    ecx,ecx
   140002a39:	lea    edx,[r9+0x1]
   140002a3d:	call   QWORD PTR [rip+0x106ad]        # 0x1400130f0
   140002a43:	call   0x140002efc
   140002a48:	and    QWORD PTR [rsp+0x30],0x0
   140002a4e:	and    QWORD PTR [rsp+0x38],0x0
   140002a54:	lea    rax,[rip+0x1460d]        # 0x140017068
   140002a5b:	lea    rcx,[rsp+0x20]
   140002a60:	mov    QWORD PTR [rsp+0x20],rax
   140002a65:	lea    rax,[rip+0x48]        # 0x140002ab4
   140002a6c:	mov    QWORD PTR [rsp+0x28],rax
   140002a71:	call   QWORD PTR [rip+0x105c9]        # 0x140013040
   140002a77:	test   eax,eax
   140002a79:	jne    0x140002a9a
   140002a7b:	call   QWORD PTR [rip+0x106b7]        # 0x140013138
   140002a81:	lea    r8,[rip+0x145f0]        # 0x140017078
   140002a88:	lea    rcx,[rsp+0x40]
   140002a8d:	mov    r9d,eax
   140002a90:	mov    edx,0x100
   140002a95:	call   0x140001088
   140002a9a:	xor    eax,eax
   140002a9c:	mov    rcx,QWORD PTR [rsp+0x140]
   140002aa4:	xor    rcx,rsp
   140002aa7:	call   0x140005fe0
   140002aac:	add    rsp,0x158
   140002ab3:	ret    
   140002ab4:	mov    rax,rsp
   140002ab7:	push   rbp
   140002ab8:	push   r12
   140002aba:	push   r14
   140002abc:	lea    rbp,[rax-0x5f]
   140002ac0:	sub    rsp,0xd0
   140002ac7:	mov    QWORD PTR [rbp+0x37],0xfffffffffffffffe
   140002acf:	mov    QWORD PTR [rax+0x8],rbx
   140002ad3:	mov    QWORD PTR [rax+0x10],rsi
   140002ad7:	mov    QWORD PTR [rax+0x20],rdi
   140002adb:	lea    rax,[rip+0x146ce]        # 0x1400171b0
   140002ae2:	mov    QWORD PTR [rbp-0x19],rax
   140002ae6:	xor    ebx,ebx
   140002ae8:	mov    QWORD PTR [rbp-0x11],rbx
   140002aec:	xor    r14d,r14d
   140002aef:	mov    QWORD PTR [rbp-0x9],r14
   140002af3:	xor    esi,esi
   140002af5:	mov    QWORD PTR [rbp-0x1],rsi
   140002af9:	xor    edi,edi
   140002afb:	mov    QWORD PTR [rbp+0x7],rdi
   140002aff:	lea    rdx,[rip+0x1f2]        # 0x140002cf8
   140002b06:	lea    rcx,[rip+0x1455b]        # 0x140017068
   140002b0d:	call   QWORD PTR [rip+0x10535]        # 0x140013048
   140002b13:	mov    QWORD PTR [rip+0x1afbe],rax        # 0x14001dad8
   140002b1a:	test   rax,rax
   140002b1d:	je     0x140002b5c
   140002b1f:	xor    r9d,r9d
   140002b22:	xor    r8d,r8d
   140002b25:	lea    edx,[rbx+0x1]
   140002b28:	xor    ecx,ecx
   140002b2a:	call   QWORD PTR [rip+0x105d8]        # 0x140013108
   140002b30:	mov    QWORD PTR [rip+0x1afa9],rax        # 0x14001dae0
   140002b37:	test   rax,rax
   140002b3a:	je     0x140002b5c
   140002b3c:	mov    rbx,rax
   140002b3f:	mov    QWORD PTR [rbp-0x11],rax
   140002b43:	xor    r9d,r9d
   140002b46:	xor    r8d,r8d
   140002b49:	lea    edx,[rsi+0x1]
   140002b4c:	xor    ecx,ecx
   140002b4e:	call   QWORD PTR [rip+0x105b4]        # 0x140013108
   140002b54:	mov    r12,rax
   140002b57:	test   rax,rax
   140002b5a:	jne    0x140002b66
   140002b5c:	call   0x140002dc4
   140002b61:	jmp    0x140002ca3
   140002b66:	mov    r14,rax
   140002b69:	mov    QWORD PTR [rbp-0x9],rax
   140002b6d:	mov    DWORD PTR [rbp-0x31],0x18
   140002b74:	and    QWORD PTR [rbp-0x29],0x0
   140002b79:	and    DWORD PTR [rbp-0x21],0x0
   140002b7d:	and    QWORD PTR [rbp-0x49],0x0
   140002b82:	and    QWORD PTR [rbp-0x41],0x0
   140002b87:	and    QWORD PTR [rbp-0x39],0x0
   140002b8c:	lea    rcx,[rbp-0x49]
   140002b90:	call   0x140005cd8
   140002b95:	mov    rcx,QWORD PTR [rbp-0x29]
   140002b99:	test   eax,eax
   140002b9b:	cmovns rcx,QWORD PTR [rbp-0x49]
   140002ba0:	mov    QWORD PTR [rbp-0x29],rcx
   140002ba4:	lea    rax,[rbp-0x31]
   140002ba8:	mov    QWORD PTR [rsp+0x38],rax
   140002bad:	mov    DWORD PTR [rsp+0x30],0x3e8
   140002bb5:	mov    eax,0x12c
   140002bba:	mov    DWORD PTR [rsp+0x28],eax
   140002bbe:	mov    DWORD PTR [rsp+0x20],eax
   140002bc2:	mov    edx,0x40080003
   140002bc7:	mov    r9d,0x1
   140002bcd:	lea    r8d,[r9+0x5]
   140002bd1:	lea    rcx,[rip+0x144d0]        # 0x1400170a8
   140002bd8:	call   QWORD PTR [rip+0x1051a]        # 0x1400130f8
   140002bde:	mov    rcx,rax
   140002be1:	cmp    rax,0xffffffffffffffff
   140002be5:	je     0x140002c31
   140002be7:	mov    rdi,rax
   140002bea:	mov    QWORD PTR [rbp+0x7],rax
   140002bee:	mov    rax,QWORD PTR [rip+0x1aeeb]        # 0x14001dae0
   140002bf5:	mov    QWORD PTR [rbp+0x1f],rax
   140002bf9:	mov    QWORD PTR [rbp+0x27],r12
   140002bfd:	mov    QWORD PTR [rbp+0x2f],rcx
   140002c01:	lea    rax,[rbp+0x77]
   140002c05:	mov    QWORD PTR [rsp+0x28],rax
   140002c0a:	and    DWORD PTR [rsp+0x20],0x0
   140002c0f:	lea    r9,[rbp+0x1f]
   140002c13:	lea    r8,[rip+0xffffffffffffed0a]        # 0x140001924
   140002c1a:	xor    edx,edx
   140002c1c:	xor    ecx,ecx
   140002c1e:	call   QWORD PTR [rip+0x104c4]        # 0x1400130e8
   140002c24:	mov    QWORD PTR [rip+0x1aea5],rax        # 0x14001dad0
   140002c2b:	cmp    rax,0xffffffffffffffff
   140002c2f:	jne    0x140002c38
   140002c31:	call   0x140002dc4
   140002c36:	jmp    0x140002c92
   140002c38:	mov    rsi,rax
   140002c3b:	mov    QWORD PTR [rbp-0x1],rax
   140002c3f:	xor    r9d,r9d
   140002c42:	xor    r8d,r8d
   140002c45:	xor    edx,edx
   140002c47:	lea    ecx,[rdx+0x4]
   140002c4a:	call   0x140002d54
   140002c4f:	mov    rax,QWORD PTR [rip+0x1ae8a]        # 0x14001dae0
   140002c56:	mov    QWORD PTR [rbp+0xf],rax
   140002c5a:	mov    rax,QWORD PTR [rip+0x1ae6f]        # 0x14001dad0
   140002c61:	mov    QWORD PTR [rbp+0x17],rax
   140002c65:	or     r9d,0xffffffff
   140002c69:	mov    r12d,0x1
   140002c6f:	mov    r8d,r12d
   140002c72:	lea    rdx,[rbp+0xf]
   140002c76:	lea    ecx,[r12+0x1]
   140002c7b:	call   QWORD PTR [rip+0x1049f]        # 0x140013120
   140002c81:	xor    r9d,r9d
   140002c84:	xor    r8d,r8d
   140002c87:	xor    edx,edx
   140002c89:	mov    ecx,r12d
   140002c8c:	call   0x140002d54
   140002c91:	nop
   140002c92:	cmp    QWORD PTR [rbp-0x49],0x0
   140002c97:	je     0x140002ca3
   140002c99:	mov    rcx,QWORD PTR [rbp-0x49]
   140002c9d:	call   0x140005fbc
   140002ca2:	nop
   140002ca3:	test   rbx,rbx
   140002ca6:	je     0x140002cb1
   140002ca8:	mov    rcx,rbx
   140002cab:	call   QWORD PTR [rip+0x10467]        # 0x140013118
   140002cb1:	test   r14,r14
   140002cb4:	je     0x140002cbf
   140002cb6:	mov    rcx,r14
   140002cb9:	call   QWORD PTR [rip+0x10459]        # 0x140013118
   140002cbf:	test   rsi,rsi
   140002cc2:	je     0x140002ccd
   140002cc4:	mov    rcx,rsi
   140002cc7:	call   QWORD PTR [rip+0x1044b]        # 0x140013118
   140002ccd:	test   rdi,rdi
   140002cd0:	je     0x140002cdb
   140002cd2:	mov    rcx,rdi
   140002cd5:	call   QWORD PTR [rip+0x1043d]        # 0x140013118
   140002cdb:	lea    r11,[rsp+0xd0]
   140002ce3:	mov    rbx,QWORD PTR [r11+0x20]
   140002ce7:	mov    rsi,QWORD PTR [r11+0x28]
   140002ceb:	mov    rdi,QWORD PTR [r11+0x38]
   140002cef:	mov    rsp,r11
   140002cf2:	pop    r14
   140002cf4:	pop    r12
   140002cf6:	pop    rbp
   140002cf7:	ret    
   140002cf8:	rex push rbx
   140002cfa:	sub    rsp,0x20
   140002cfe:	mov    ebx,ecx
   140002d00:	mov    ecx,0x4
   140002d05:	mov    eax,ebx
   140002d07:	dec    eax
   140002d09:	je     0x140002d14
   140002d0b:	sub    eax,0x3
   140002d0e:	je     0x140002d19
   140002d10:	dec    eax
   140002d12:	jne    0x140002d19
   140002d14:	mov    ecx,0x3
   140002d19:	xor    r9d,r9d
   140002d1c:	xor    r8d,r8d
   140002d1f:	xor    edx,edx
   140002d21:	call   0x140002d54
   140002d26:	lea    eax,[rbx-0x1]
   140002d29:	test   eax,0xfffffffb
   140002d2e:	jne    0x140002d4b
   140002d30:	mov    rcx,QWORD PTR [rip+0x1ada9]        # 0x14001dae0
   140002d37:	test   rcx,rcx
   140002d3a:	je     0x140002d4b
   140002d3c:	call   QWORD PTR [rip+0x103ce]        # 0x140013110
   140002d42:	test   eax,eax
   140002d44:	jne    0x140002d4b
   140002d46:	call   0x140002dc4
   140002d4b:	add    rsp,0x20
   140002d4f:	pop    rbx
   140002d50:	ret    
   140002d51:	int3   
   140002d52:	int3   
   140002d53:	int3   
   140002d54:	sub    rsp,0x58
   140002d58:	mov    rax,QWORD PTR [rip+0x18329]        # 0x14001b088
   140002d5f:	xor    rax,rsp
   140002d62:	mov    QWORD PTR [rsp+0x40],rax
   140002d67:	lea    eax,[rcx-0x2]
   140002d6a:	mov    DWORD PTR [rsp+0x24],ecx
   140002d6e:	mov    rcx,QWORD PTR [rip+0x1ad63]        # 0x14001dad8
   140002d75:	neg    eax
   140002d77:	mov    DWORD PTR [rsp+0x2c],edx
   140002d7b:	lea    rdx,[rsp+0x20]
   140002d80:	sbb    eax,eax
   140002d82:	and    DWORD PTR [rsp+0x30],0x0
   140002d87:	mov    DWORD PTR [rsp+0x20],0x10
   140002d8f:	and    eax,0x5
   140002d92:	mov    DWORD PTR [rsp+0x34],r8d
   140002d97:	mov    DWORD PTR [rsp+0x38],r9d
   140002d9c:	mov    DWORD PTR [rsp+0x28],eax
   140002da0:	call   QWORD PTR [rip+0x102aa]        # 0x140013050
   140002da6:	test   eax,eax
   140002da8:	jne    0x140002daf
   140002daa:	call   0x140002dc4
   140002daf:	mov    rcx,QWORD PTR [rsp+0x40]
   140002db4:	xor    rcx,rsp
   140002db7:	call   0x140005fe0
   140002dbc:	add    rsp,0x58
   140002dc0:	ret    
   140002dc1:	int3   
   140002dc2:	int3   
   140002dc3:	int3   
   140002dc4:	mov    QWORD PTR [rsp+0x8],rbx
   140002dc9:	mov    QWORD PTR [rsp+0x10],rsi
   140002dce:	mov    QWORD PTR [rsp+0x18],rdi
   140002dd3:	push   rbp
   140002dd4:	mov    rbp,rsp
   140002dd7:	sub    rsp,0x70
   140002ddb:	mov    rax,QWORD PTR [rip+0x182a6]        # 0x14001b088
   140002de2:	xor    rax,rsp
   140002de5:	mov    QWORD PTR [rbp-0x10],rax
   140002de9:	call   QWORD PTR [rip+0x10349]        # 0x140013138
   140002def:	mov    rcx,QWORD PTR [rip+0x1acea]        # 0x14001dae0
   140002df6:	mov    esi,eax
   140002df8:	test   rcx,rcx
   140002dfb:	je     0x140002e03
   140002dfd:	call   QWORD PTR [rip+0x1030d]        # 0x140013110
   140002e03:	mov    rcx,QWORD PTR [rip+0x1acc6]        # 0x14001dad0
   140002e0a:	test   rcx,rcx
   140002e0d:	je     0x140002e8c
   140002e0f:	mov    ebx,0x1
   140002e14:	mov    edi,ebx
   140002e16:	mov    edx,0x3e8
   140002e1b:	call   QWORD PTR [rip+0x10397]        # 0x1400131b8
   140002e21:	test   eax,eax
   140002e23:	je     0x140002e7b
   140002e25:	cmp    eax,0xffffffff
   140002e28:	je     0x140002e7b
   140002e2a:	cmp    eax,0x80
   140002e2f:	je     0x140002e7b
   140002e31:	mov    rcx,QWORD PTR [rip+0x1aca0]        # 0x14001dad8
   140002e38:	and    DWORD PTR [rbp-0x40],0x0
   140002e3c:	and    DWORD PTR [rbp-0x44],0x0
   140002e40:	lea    rdx,[rbp-0x50]
   140002e44:	mov    DWORD PTR [rbp-0x48],0x5
   140002e4b:	mov    DWORD PTR [rbp-0x50],0x10
   140002e52:	mov    DWORD PTR [rbp-0x4c],0x3
   140002e59:	mov    DWORD PTR [rbp-0x3c],edi
   140002e5c:	mov    DWORD PTR [rbp-0x38],0xbb8
   140002e63:	call   QWORD PTR [rip+0x101e7]        # 0x140013050
   140002e69:	test   eax,eax
   140002e6b:	jne    0x140002e7d
   140002e6d:	lea    rcx,[rip+0x1424c]        # 0x1400170c0
   140002e74:	call   0x140002dc4
   140002e79:	jmp    0x140002e7d
   140002e7b:	xor    ebx,ebx
   140002e7d:	inc    edi
   140002e7f:	test   ebx,ebx
   140002e81:	je     0x140002e8c
   140002e83:	mov    rcx,QWORD PTR [rip+0x1ac46]        # 0x14001dad0
   140002e8a:	jmp    0x140002e16
   140002e8c:	mov    rcx,QWORD PTR [rip+0x1ac45]        # 0x14001dad8
   140002e93:	and    DWORD PTR [rbp-0x20],0x0
   140002e97:	and    DWORD PTR [rbp-0x1c],0x0
   140002e9b:	and    DWORD PTR [rbp-0x18],0x0
   140002e9f:	lea    rdx,[rbp-0x30]
   140002ea3:	mov    DWORD PTR [rbp-0x28],0x5
   140002eaa:	mov    DWORD PTR [rbp-0x30],0x10
   140002eb1:	mov    DWORD PTR [rbp-0x2c],0x1
   140002eb8:	mov    DWORD PTR [rbp-0x24],esi
   140002ebb:	call   QWORD PTR [rip+0x1018f]        # 0x140013050
   140002ec1:	test   eax,eax
   140002ec3:	jne    0x140002ed1
   140002ec5:	lea    rcx,[rip+0x141f4]        # 0x1400170c0
   140002ecc:	call   0x140002dc4
   140002ed1:	mov    ecx,esi
   140002ed3:	call   QWORD PTR [rip+0x10227]        # 0x140013100
   140002ed9:	mov    rcx,QWORD PTR [rbp-0x10]
   140002edd:	xor    rcx,rsp
   140002ee0:	call   0x140005fe0
   140002ee5:	lea    r11,[rsp+0x70]
   140002eea:	mov    rbx,QWORD PTR [r11+0x10]
   140002eee:	mov    rsi,QWORD PTR [r11+0x18]
   140002ef2:	mov    rdi,QWORD PTR [r11+0x20]
   140002ef6:	mov    rsp,r11
   140002ef9:	pop    rbp
   140002efa:	ret    
   140002efb:	int3   
   140002efc:	mov    rax,rsp
   140002eff:	push   rbp
   140002f00:	mov    rbp,rsp
   140002f03:	sub    rsp,0x70
   140002f07:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140002f0f:	mov    QWORD PTR [rax+0x8],rbx
   140002f13:	mov    QWORD PTR [rax+0x10],rdi
   140002f17:	xor    ebx,ebx
   140002f19:	mov    QWORD PTR [rbp-0x30],rbx
   140002f1d:	mov    QWORD PTR [rbp-0x20],rbx
   140002f21:	mov    QWORD PTR [rbp-0x10],rbx
   140002f25:	call   QWORD PTR [rip+0x103b5]        # 0x1400132e0
   140002f2b:	lea    r8,[rbp-0x38]
   140002f2f:	lea    edx,[rbx+0x28]
   140002f32:	mov    rcx,rax
   140002f35:	call   QWORD PTR [rip+0x10175]        # 0x1400130b0
   140002f3b:	neg    eax
   140002f3d:	sbb    rcx,rcx
   140002f40:	and    rcx,QWORD PTR [rbp-0x38]
   140002f44:	mov    QWORD PTR [rbp-0x38],rcx
   140002f48:	lea    edi,[rbx+0x6]
   140002f4b:	cmp    QWORD PTR [rbp-0x38],rbx
   140002f4f:	jne    0x140002f5b
   140002f51:	mov    ecx,edi
   140002f53:	call   QWORD PTR [rip+0x101a7]        # 0x140013100
   140002f59:	jmp    0x140002f9a
   140002f5b:	mov    rcx,QWORD PTR [rbp-0x30]
   140002f5f:	test   rcx,rcx
   140002f62:	jne    0x140002f7a
   140002f64:	lea    rcx,[rbp-0x38]
   140002f68:	call   0x1400038bc
   140002f6d:	test   eax,eax
   140002f6f:	jne    0x140002f76
   140002f71:	lea    ecx,[rax+0xd]
   140002f74:	jmp    0x140002f53
   140002f76:	mov    rcx,QWORD PTR [rbp-0x30]
   140002f7a:	mov    edx,ebx
   140002f7c:	cmp    DWORD PTR [rcx],ebx
   140002f7e:	jbe    0x140002f9a
   140002f80:	mov    eax,edx
   140002f82:	inc    rax
   140002f85:	lea    rax,[rax+rax*2]
   140002f89:	mov    DWORD PTR [rcx+rax*4],0x4
   140002f90:	inc    edx
   140002f92:	mov    rcx,QWORD PTR [rbp-0x30]
   140002f96:	cmp    edx,DWORD PTR [rcx]
   140002f98:	jb     0x140002f80
   140002f9a:	cmp    QWORD PTR [rbp-0x38],rbx
   140002f9e:	jne    0x140002faa
   140002fa0:	mov    ecx,edi
   140002fa2:	call   QWORD PTR [rip+0x10158]        # 0x140013100
   140002fa8:	jmp    0x140002fba
   140002faa:	lea    rdx,[rip+0x14127]        # 0x1400170d8
   140002fb1:	lea    rcx,[rbp-0x38]
   140002fb5:	call   0x140003978
   140002fba:	cmp    QWORD PTR [rbp-0x38],rbx
   140002fbe:	jne    0x140002fca
   140002fc0:	mov    ecx,edi
   140002fc2:	call   QWORD PTR [rip+0x10138]        # 0x140013100
   140002fc8:	jmp    0x140002fda
   140002fca:	lea    rdx,[rip+0x14117]        # 0x1400170e8
   140002fd1:	lea    rcx,[rbp-0x38]
   140002fd5:	call   0x140003978
   140002fda:	cmp    QWORD PTR [rbp-0x38],rbx
   140002fde:	jne    0x140002fea
   140002fe0:	mov    ecx,edi
   140002fe2:	call   QWORD PTR [rip+0x10118]        # 0x140013100
   140002fe8:	jmp    0x140002ffa
   140002fea:	lea    rdx,[rip+0x1410f]        # 0x140017100
   140002ff1:	lea    rcx,[rbp-0x38]
   140002ff5:	call   0x140003978
   140002ffa:	cmp    QWORD PTR [rbp-0x38],rbx
   140002ffe:	jne    0x14000300a
   140003000:	mov    ecx,edi
   140003002:	call   QWORD PTR [rip+0x100f8]        # 0x140013100
   140003008:	jmp    0x14000301a
   14000300a:	lea    rdx,[rip+0x1410f]        # 0x140017120
   140003011:	lea    rcx,[rbp-0x38]
   140003015:	call   0x140003978
   14000301a:	cmp    QWORD PTR [rbp-0x38],rbx
   14000301e:	jne    0x14000302a
   140003020:	mov    ecx,edi
   140003022:	call   QWORD PTR [rip+0x100d8]        # 0x140013100
   140003028:	jmp    0x14000303a
   14000302a:	lea    rdx,[rip+0x14107]        # 0x140017138
   140003031:	lea    rcx,[rbp-0x38]
   140003035:	call   0x140003978
   14000303a:	cmp    QWORD PTR [rbp-0x38],rbx
   14000303e:	jne    0x14000304a
   140003040:	mov    ecx,edi
   140003042:	call   QWORD PTR [rip+0x100b8]        # 0x140013100
   140003048:	jmp    0x14000305a
   14000304a:	lea    rdx,[rip+0x140ff]        # 0x140017150
   140003051:	lea    rcx,[rbp-0x38]
   140003055:	call   0x140003978
   14000305a:	cmp    QWORD PTR [rbp-0x38],rbx
   14000305e:	jne    0x14000306a
   140003060:	mov    ecx,edi
   140003062:	call   QWORD PTR [rip+0x10098]        # 0x140013100
   140003068:	jmp    0x14000307a
   14000306a:	lea    rdx,[rip+0x140f7]        # 0x140017168
   140003071:	lea    rcx,[rbp-0x38]
   140003075:	call   0x140003978
   14000307a:	cmp    QWORD PTR [rbp-0x38],rbx
   14000307e:	jne    0x14000308a
   140003080:	mov    ecx,edi
   140003082:	call   QWORD PTR [rip+0x10078]        # 0x140013100
   140003088:	jmp    0x14000309a
   14000308a:	lea    rdx,[rip+0x140f7]        # 0x140017188
   140003091:	lea    rcx,[rbp-0x38]
   140003095:	call   0x140003978
   14000309a:	mov    rcx,QWORD PTR [rbp-0x38]
   14000309e:	test   rcx,rcx
   1400030a1:	jne    0x1400030ad
   1400030a3:	mov    ecx,edi
   1400030a5:	call   QWORD PTR [rip+0x10055]        # 0x140013100
   1400030ab:	jmp    0x1400030d3
   1400030ad:	mov    r8,QWORD PTR [rbp-0x30]
   1400030b1:	test   r8,r8
   1400030b4:	jne    0x1400030bc
   1400030b6:	lea    ecx,[r8+0xd]
   1400030ba:	jmp    0x1400030a5
   1400030bc:	mov    QWORD PTR [rsp+0x28],rbx
   1400030c1:	mov    QWORD PTR [rsp+0x20],rbx
   1400030c6:	mov    r9d,DWORD PTR [rbp-0x28]
   1400030ca:	xor    edx,edx
   1400030cc:	call   QWORD PTR [rip+0xffee]        # 0x1400130c0
   1400030d2:	nop
   1400030d3:	mov    rcx,QWORD PTR [rbp-0x30]
   1400030d7:	test   rcx,rcx
   1400030da:	je     0x1400030e1
   1400030dc:	call   0x14000fcb0
   1400030e1:	mov    rcx,QWORD PTR [rbp-0x20]
   1400030e5:	test   rcx,rcx
   1400030e8:	je     0x1400030ef
   1400030ea:	call   0x14000fcb0
   1400030ef:	mov    rcx,QWORD PTR [rbp-0x10]
   1400030f3:	test   rcx,rcx
   1400030f6:	je     0x1400030fd
   1400030f8:	call   0x14000fcb0
   1400030fd:	mov    rcx,QWORD PTR [rbp-0x38]
   140003101:	test   rcx,rcx
   140003104:	je     0x14000310c
   140003106:	call   QWORD PTR [rip+0x1000c]        # 0x140013118
   14000310c:	lea    r11,[rsp+0x70]
   140003111:	mov    rbx,QWORD PTR [r11+0x10]
   140003115:	mov    rdi,QWORD PTR [r11+0x18]
   140003119:	mov    rsp,r11
   14000311c:	pop    rbp
   14000311d:	ret    
   14000311e:	int3   
   14000311f:	int3   
   140003120:	mov    QWORD PTR [rsp+0x18],r8
   140003125:	mov    QWORD PTR [rsp+0x20],r9
   14000312a:	push   rbx
   14000312b:	push   rbp
   14000312c:	push   rsi
   14000312d:	push   rdi
   14000312e:	sub    rsp,0x28
   140003132:	xor    ebp,ebp
   140003134:	lea    rax,[rdx-0x1]
   140003138:	mov    rsi,rcx
   14000313b:	cmp    rax,0x7ffffffe
   140003141:	mov    edi,ebp
   140003143:	mov    ecx,0x80070057
   140003148:	cmova  edi,ecx
   14000314b:	test   edi,edi
   14000314d:	js     0x140003183
   14000314f:	lea    rbx,[rdx-0x1]
   140003153:	lea    r9,[rsp+0x68]
   140003158:	mov    rcx,rsi
   14000315b:	mov    rdx,rbx
   14000315e:	mov    edi,ebp
   140003160:	call   0x140006b68
   140003165:	test   eax,eax
   140003167:	js     0x140003178
   140003169:	cdqe   
   14000316b:	cmp    rax,rbx
   14000316e:	ja     0x140003178
   140003170:	jne    0x14000318b
   140003172:	mov    WORD PTR [rsi+rbx*2],bp
   140003176:	jmp    0x14000318b
   140003178:	mov    WORD PTR [rsi+rbx*2],bp
   14000317c:	mov    edi,0x8007007a
   140003181:	jmp    0x14000318b
   140003183:	test   rdx,rdx
   140003186:	je     0x14000318b
   140003188:	mov    WORD PTR [rsi],bp
   14000318b:	mov    eax,edi
   14000318d:	add    rsp,0x28
   140003191:	pop    rdi
   140003192:	pop    rsi
   140003193:	pop    rbp
   140003194:	pop    rbx
   140003195:	ret    
   140003196:	int3   
   140003197:	int3   
   140003198:	rex push rbx
   14000319a:	sub    rsp,0x20
   14000319e:	mov    rcx,QWORD PTR [rip+0x1ad23]        # 0x14001dec8
   1400031a5:	xor    ebx,ebx
   1400031a7:	mov    WORD PTR [rip+0x1a942],bx        # 0x14001daf0
   1400031ae:	test   rcx,rcx
   1400031b1:	je     0x1400031bf
   1400031b3:	call   0x140006aa0
   1400031b8:	mov    QWORD PTR [rip+0x1ad09],rbx        # 0x14001dec8
   1400031bf:	lea    rcx,[rip+0x1ad3a]        # 0x14001df00
   1400031c6:	xor    edx,edx
   1400031c8:	mov    r8d,0xb0
   1400031ce:	mov    QWORD PTR [rip+0x1acfb],rbx        # 0x14001ded0
   1400031d5:	call   0x1400099c0
   1400031da:	lea    rax,[rip+0x5ef]        # 0x1400037d0
   1400031e1:	mov    QWORD PTR [rip+0x1ad50],rax        # 0x14001df38
   1400031e8:	lea    rax,[rip+0x5ed]        # 0x1400037dc
   1400031ef:	mov    QWORD PTR [rip+0x1ad4a],rax        # 0x14001df40
   1400031f6:	lea    rax,[rip+0x5eb]        # 0x1400037e8
   1400031fd:	mov    QWORD PTR [rip+0x1ad44],rax        # 0x14001df48
   140003204:	lea    rax,[rip+0x5e9]        # 0x1400037f4
   14000320b:	mov    QWORD PTR [rip+0x1ad3e],rax        # 0x14001df50
   140003212:	lea    rax,[rip+0x5e7]        # 0x140003800
   140003219:	mov    QWORD PTR [rip+0x1ad38],rax        # 0x14001df58
   140003220:	lea    rax,[rip+0x649]        # 0x140003870
   140003227:	mov    QWORD PTR [rip+0x1ad32],rax        # 0x14001df60
   14000322e:	lea    rax,[rip+0x647]        # 0x14000387c
   140003235:	mov    QWORD PTR [rip+0x1ad2c],rax        # 0x14001df68
   14000323c:	add    rsp,0x20
   140003240:	pop    rbx
   140003241:	ret    
   140003242:	int3   
   140003243:	int3   
   140003244:	mov    QWORD PTR [rsp+0x8],rbx
   140003249:	mov    QWORD PTR [rsp+0x10],rbp
   14000324e:	mov    QWORD PTR [rsp+0x18],rsi
   140003253:	push   rdi
   140003254:	sub    rsp,0x20
   140003258:	mov    eax,DWORD PTR [rip+0x1ac72]        # 0x14001ded0
   14000325e:	mov    rcx,QWORD PTR [rip+0x1ac63]        # 0x14001dec8
   140003265:	xor    ebp,ebp
   140003267:	mov    ebx,ebp
   140003269:	mov    edi,ebp
   14000326b:	mov    esi,eax
   14000326d:	test   eax,eax
   14000326f:	je     0x1400032a6
   140003271:	test   rdi,rdi
   140003274:	js     0x1400032da
   140003276:	cmp    ebx,eax
   140003278:	jge    0x1400032da
   14000327a:	mov    r8,QWORD PTR [rcx+rdi*8]
   14000327e:	test   r8,r8
   140003281:	je     0x14000329d
   140003283:	mov    rax,QWORD PTR [r8]
   140003286:	mov    edx,0x1
   14000328b:	mov    rcx,r8
   14000328e:	call   QWORD PTR [rax]
   140003290:	mov    eax,DWORD PTR [rip+0x1ac3a]        # 0x14001ded0
   140003296:	mov    rcx,QWORD PTR [rip+0x1ac2b]        # 0x14001dec8
   14000329d:	inc    ebx
   14000329f:	inc    rdi
   1400032a2:	cmp    ebx,esi
   1400032a4:	jb     0x140003271
   1400032a6:	test   rcx,rcx
   1400032a9:	je     0x1400032b7
   1400032ab:	call   0x140006aa0
   1400032b0:	mov    QWORD PTR [rip+0x1ac11],rbp        # 0x14001dec8
   1400032b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032bc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400032c1:	mov    QWORD PTR [rip+0x1ac08],rbp        # 0x14001ded0
   1400032c8:	mov    WORD PTR [rip+0x1a821],bp        # 0x14001daf0
   1400032cf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400032d4:	add    rsp,0x20
   1400032d8:	pop    rdi
   1400032d9:	ret    
   1400032da:	xor    r9d,r9d
   1400032dd:	xor    r8d,r8d
   1400032e0:	mov    ecx,0xc000008c
   1400032e5:	lea    edx,[r9+0x1]
   1400032e9:	call   QWORD PTR [rip+0xfdf1]        # 0x1400130e0
   1400032ef:	int3   
   1400032f0:	mov    rax,rsp
   1400032f3:	push   rsi
   1400032f4:	push   rdi
   1400032f5:	push   r14
   1400032f7:	sub    rsp,0x4b0
   1400032fe:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140003307:	mov    QWORD PTR [rax+0x18],rbx
   14000330b:	mov    rax,QWORD PTR [rip+0x17d76]        # 0x14001b088
   140003312:	xor    rax,rsp
   140003315:	mov    QWORD PTR [rsp+0x4a0],rax
   14000331d:	mov    rsi,rdx
   140003320:	mov    r14,rcx
   140003323:	and    QWORD PTR [rsp+0x58],0x0
   140003329:	and    QWORD PTR [rsp+0x60],0x0
   14000332f:	and    QWORD PTR [rsp+0x68],0x0
   140003335:	lea    rcx,[rsp+0x58]
   14000333a:	call   0x140005b54
   14000333f:	test   eax,eax
   140003341:	jns    0x14000335b
   140003343:	mov    rcx,QWORD PTR [rsp+0x58]
   140003348:	test   rcx,rcx
   14000334b:	je     0x140003436
   140003351:	call   0x140005fbc
   140003356:	jmp    0x140003436
   14000335b:	mov    rdi,QWORD PTR [rsp+0x58]
   140003360:	mov    rcx,rdi
   140003363:	call   QWORD PTR [rip+0xfccf]        # 0x140013038
   140003369:	test   eax,eax
   14000336b:	jne    0x14000337b
   14000336d:	test   rdi,rdi
   140003370:	je     0x140003436
   140003376:	mov    rcx,rdi
   140003379:	jmp    0x140003351
   14000337b:	mov    DWORD PTR [rsp+0x50],0x14
   140003383:	mov    rcx,r14
   140003386:	call   QWORD PTR [rip+0xfc9c]        # 0x140013028
   14000338c:	test   eax,eax
   14000338e:	je     0x14000336d
   140003390:	call   QWORD PTR [rip+0xfdfa]        # 0x140013190
   140003396:	mov    rcx,rax
   140003399:	lea    r9,[rsp+0x48]
   14000339e:	xor    r8d,r8d
   1400033a1:	mov    edx,0x20008
   1400033a6:	call   QWORD PTR [rip+0xfc5c]        # 0x140013008
   1400033ac:	test   eax,eax
   1400033ae:	jne    0x1400033b8
   1400033b0:	call   QWORD PTR [rip+0xfc7a]        # 0x140013030
   1400033b6:	jmp    0x14000336d
   1400033b8:	lea    rax,[rsp+0x40]
   1400033bd:	mov    QWORD PTR [rsp+0x38],rax
   1400033c2:	lea    rax,[rsp+0x70]
   1400033c7:	mov    QWORD PTR [rsp+0x30],rax
   1400033cc:	lea    rax,[rsp+0x50]
   1400033d1:	mov    QWORD PTR [rsp+0x28],rax
   1400033d6:	lea    rax,[rsp+0x80]
   1400033de:	mov    QWORD PTR [rsp+0x20],rax
   1400033e3:	lea    r9,[rip+0x13c3e]        # 0x140017028
   1400033ea:	mov    r8d,0x1
   1400033f0:	mov    rdx,QWORD PTR [rsp+0x48]
   1400033f5:	mov    rcx,rdi
   1400033f8:	call   QWORD PTR [rip+0xfc12]        # 0x140013010
   1400033fe:	mov    ebx,eax
   140003400:	mov    rcx,QWORD PTR [rsp+0x48]
   140003405:	call   QWORD PTR [rip+0xfd0d]        # 0x140013118
   14000340b:	call   QWORD PTR [rip+0xfc1f]        # 0x140013030
   140003411:	test   ebx,ebx
   140003413:	je     0x140003423
   140003415:	cmp    DWORD PTR [rsp+0x40],0x0
   14000341a:	je     0x140003423
   14000341c:	mov    ebx,0x1
   140003421:	jmp    0x140003425
   140003423:	xor    ebx,ebx
   140003425:	test   rdi,rdi
   140003428:	je     0x140003432
   14000342a:	mov    rcx,rdi
   14000342d:	call   0x140005fbc
   140003432:	test   ebx,ebx
   140003434:	jne    0x140003440
   140003436:	mov    eax,0xe1230553
   14000343b:	jmp    0x1400035f1
   140003440:	lea    rdx,[rsp+0x40]
   140003445:	mov    rcx,rsi
   140003448:	call   0x140003618
   14000344d:	test   eax,eax
   14000344f:	je     0x1400035e5
   140003455:	movsxd rcx,DWORD PTR [rsp+0x40]
   14000345a:	lea    eax,[rcx-0x7]
   14000345d:	cmp    eax,0x6
   140003460:	ja     0x1400035e5
   140003466:	lea    rdx,[rip+0x1aa93]        # 0x14001df00
   14000346d:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140003471:	test   rdx,rdx
   140003474:	je     0x1400035e5
   14000347a:	mov    ecx,DWORD PTR [rsi]
   14000347c:	call   rdx
   14000347e:	test   eax,eax
   140003480:	je     0x1400035e5
   140003486:	mov    rcx,r14
   140003489:	call   0x140001b64
   14000348e:	mov    rbx,rax
   140003491:	test   rax,rax
   140003494:	jne    0x1400034a0
   140003496:	mov    eax,0xe1230553
   14000349b:	jmp    0x1400035f1
   1400034a0:	lea    rax,[rsp+0x54]
   1400034a5:	mov    QWORD PTR [rsp+0x20],rax
   1400034aa:	mov    r9d,0x400
   1400034b0:	lea    r8,[rsp+0xa0]
   1400034b8:	mov    edx,0x1
   1400034bd:	mov    rcx,rbx
   1400034c0:	call   QWORD PTR [rip+0xfb92]        # 0x140013058
   1400034c6:	mov    rcx,rbx
   1400034c9:	test   eax,eax
   1400034cb:	jne    0x1400034de
   1400034cd:	call   QWORD PTR [rip+0xfc45]        # 0x140013118
   1400034d3:	call   QWORD PTR [rip+0xfc5f]        # 0x140013138
   1400034d9:	jmp    0x1400035f1
   1400034de:	call   QWORD PTR [rip+0xfc34]        # 0x140013118
   1400034e4:	mov    ecx,0x140
   1400034e9:	call   0x140006968
   1400034ee:	test   rax,rax
   1400034f1:	je     0x140003500
   1400034f3:	mov    rcx,rax
   1400034f6:	call   0x140003a94
   1400034fb:	mov    rdi,rax
   1400034fe:	jmp    0x140003502
   140003500:	xor    edi,edi
   140003502:	lea    rdx,[rsi+0x4]
   140003506:	mov    eax,DWORD PTR [rsi+0x10c]
   14000350c:	mov    DWORD PTR [rsp+0x28],eax
   140003510:	mov    r9d,DWORD PTR [rsi+0x108]
   140003517:	mov    r8d,DWORD PTR [rsi]
   14000351a:	mov    rcx,rdi
   14000351d:	call   0x140003bd0
   140003522:	lea    rcx,[rdi+0x8]
   140003526:	mov    rax,QWORD PTR [rcx]
   140003529:	mov    r8d,0xf001f
   14000352f:	mov    rdx,QWORD PTR [rsp+0xa0]
   140003537:	call   QWORD PTR [rax]
   140003539:	mov    edx,DWORD PTR [rip+0x1a991]        # 0x14001ded0
   14000353f:	movsxd r8,DWORD PTR [rip+0x1a98e]        # 0x14001ded4
   140003546:	cmp    edx,r8d
   140003549:	jne    0x1400035bd
   14000354b:	lea    rax,[rsp+0x48]
   140003550:	mov    r9,QWORD PTR [rip+0x1a971]        # 0x14001dec8
   140003557:	cmp    rax,r9
   14000355a:	jb     0x140003574
   14000355c:	lea    rcx,[r9+r8*8]
   140003560:	lea    rax,[rsp+0x48]
   140003565:	cmp    rax,rcx
   140003568:	jae    0x140003574
   14000356a:	mov    ecx,0x80004005
   14000356f:	call   0x1400012e4
   140003574:	test   r8d,r8d
   140003577:	jne    0x14000357f
   140003579:	lea    ebx,[r8+0x1]
   14000357d:	jmp    0x140003586
   14000357f:	lea    ebx,[rdx+rdx*1]
   140003582:	test   ebx,ebx
   140003584:	js     0x1400035e1
   140003586:	movsxd rdx,ebx
   140003589:	cmp    rdx,0xfffffff
   140003590:	ja     0x1400035e1
   140003592:	mov    r8d,0x8
   140003598:	mov    rcx,r9
   14000359b:	call   0x140006ae0
   1400035a0:	mov    rcx,rax
   1400035a3:	test   rax,rax
   1400035a6:	je     0x1400035e1
   1400035a8:	mov    DWORD PTR [rip+0x1a926],ebx        # 0x14001ded4
   1400035ae:	mov    QWORD PTR [rip+0x1a913],rax        # 0x14001dec8
   1400035b5:	mov    edx,DWORD PTR [rip+0x1a915]        # 0x14001ded0
   1400035bb:	jmp    0x1400035c4
   1400035bd:	mov    rcx,QWORD PTR [rip+0x1a904]        # 0x14001dec8
   1400035c4:	movsxd rax,edx
   1400035c7:	lea    r8,[rcx+rax*8]
   1400035cb:	test   r8,r8
   1400035ce:	je     0x1400035d9
   1400035d0:	mov    QWORD PTR [r8],rdi
   1400035d3:	mov    edx,DWORD PTR [rip+0x1a8f7]        # 0x14001ded0
   1400035d9:	inc    edx
   1400035db:	mov    DWORD PTR [rip+0x1a8ef],edx        # 0x14001ded0
   1400035e1:	xor    eax,eax
   1400035e3:	jmp    0x1400035f1
   1400035e5:	mov    eax,0xe1230553
   1400035ea:	jmp    0x1400035f1
   1400035ec:	mov    eax,0xe1230553
   1400035f1:	mov    rcx,QWORD PTR [rsp+0x4a0]
   1400035f9:	xor    rcx,rsp
   1400035fc:	call   0x140005fe0
   140003601:	mov    rbx,QWORD PTR [rsp+0x4e0]
   140003609:	add    rsp,0x4b0
   140003610:	pop    r14
   140003612:	pop    rdi
   140003613:	pop    rsi
   140003614:	ret    
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	mov    QWORD PTR [rsp+0x18],rbx
   14000361d:	mov    QWORD PTR [rsp+0x20],rbp
   140003622:	push   rsi
   140003623:	push   rdi
   140003624:	push   r13
   140003626:	push   r14
   140003628:	push   r15
   14000362a:	sub    rsp,0x140
   140003631:	mov    rax,QWORD PTR [rip+0x17a50]        # 0x14001b088
   140003638:	xor    rax,rsp
   14000363b:	mov    QWORD PTR [rsp+0x130],rax
   140003643:	or     DWORD PTR [rdx],0xffffffff
   140003646:	lea    rbp,[rcx+0x4]
   14000364a:	xor    r15d,r15d
   14000364d:	lea    rax,[rsp+0x20]
   140003652:	mov    esi,0x104
   140003657:	mov    r10,rbp
   14000365a:	mov    r14,rdx
   14000365d:	lea    rcx,[rsp+0x20]
   140003662:	mov    r9d,r15d
   140003665:	sub    r10,rax
   140003668:	mov    r8d,esi
   14000366b:	lea    rax,[r8+0x7ffffefa]
   140003672:	test   rax,rax
   140003675:	je     0x140003689
   140003677:	mov    al,BYTE PTR [r10+rcx*1]
   14000367b:	test   al,al
   14000367d:	je     0x140003689
   14000367f:	mov    BYTE PTR [rcx],al
   140003681:	inc    rcx
   140003684:	dec    r8
   140003687:	jne    0x14000366b
   140003689:	test   r8,r8
   14000368c:	jne    0x140003697
   14000368e:	dec    rcx
   140003691:	mov    r9d,0x8007007a
   140003697:	mov    BYTE PTR [rcx],r15b
   14000369a:	test   r9d,r9d
   14000369d:	js     0x14000378a
   1400036a3:	mov    rax,rsi
   1400036a6:	lea    rcx,[rsp+0x20]
   1400036ab:	cmp    BYTE PTR [rcx],r15b
   1400036ae:	je     0x1400036b8
   1400036b0:	inc    rcx
   1400036b3:	dec    rax
   1400036b6:	jne    0x1400036ab
   1400036b8:	test   rax,rax
   1400036bb:	je     0x14000378a
   1400036c1:	mov    rdi,rsi
   1400036c4:	mov    ebx,0x7
   1400036c9:	sub    rdi,rax
   1400036cc:	cmp    rdi,rbx
   1400036cf:	jbe    0x14000378a
   1400036d5:	lea    rdx,[rip+0x13adc]        # 0x1400171b8
   1400036dc:	lea    rcx,[rsp+0x20]
   1400036e1:	mov    r8d,ebx
   1400036e4:	call   0x140006a20
   1400036e9:	test   eax,eax
   1400036eb:	jne    0x14000378a
   1400036f1:	cmp    WORD PTR [rip+0x1a3f7],r15w        # 0x14001daf0
   1400036f9:	jne    0x14000374e
   1400036fb:	lea    rax,[rdi-0x1]
   1400036ff:	cmp    rax,rbx
   140003702:	jb     0x14000378a
   140003708:	cmp    BYTE PTR [rsp+rax*1+0x20],0x2e
   14000370d:	je     0x140003717
   14000370f:	dec    rax
   140003712:	cmp    rax,rbx
   140003715:	jae    0x140003708
   140003717:	cmp    rax,rbx
   14000371a:	jb     0x14000378a
   14000371c:	cmp    rax,rsi
   14000371f:	jae    0x1400037ca
   140003725:	lea    r9,[rsp+0x27]
   14000372a:	lea    r8,[rip+0x13a8f]        # 0x1400171c0
   140003731:	lea    rcx,[rip+0x1a3b8]        # 0x14001daf0
   140003738:	mov    rdx,rsi
   14000373b:	mov    BYTE PTR [rsp+rax*1+0x20],r15b
   140003740:	call   0x140003120
   140003745:	test   eax,eax
   140003747:	js     0x14000378a
   140003749:	call   0x140005a3c
   14000374e:	lea    r13,[rip+0x18de3]        # 0x14001c538
   140003755:	mov    esi,r15d
   140003758:	mov    rbx,r13
   14000375b:	movsxd rax,DWORD PTR [rbx]
   14000375e:	lea    rdx,[rip+0x1a6ab]        # 0x14001de10
   140003765:	mov    r8,rdi
   140003768:	mov    rdx,QWORD PTR [rdx+rax*8]
   14000376c:	mov    rcx,rbp
   14000376f:	call   0x140006a20
   140003774:	test   eax,eax
   140003776:	je     0x1400037b8
   140003778:	lea    rax,[rip+0x18dd5]        # 0x14001c554
   14000377f:	add    rbx,0x4
   140003783:	inc    esi
   140003785:	cmp    rbx,rax
   140003788:	jl     0x14000375b
   14000378a:	xor    eax,eax
   14000378c:	mov    rcx,QWORD PTR [rsp+0x130]
   140003794:	xor    rcx,rsp
   140003797:	call   0x140005fe0
   14000379c:	lea    r11,[rsp+0x140]
   1400037a4:	mov    rbx,QWORD PTR [r11+0x40]
   1400037a8:	mov    rbp,QWORD PTR [r11+0x48]
   1400037ac:	mov    rsp,r11
   1400037af:	pop    r15
   1400037b1:	pop    r14
   1400037b3:	pop    r13
   1400037b5:	pop    rdi
   1400037b6:	pop    rsi
   1400037b7:	ret    
   1400037b8:	movsxd rcx,esi
   1400037bb:	mov    eax,0x1
   1400037c0:	mov    ecx,DWORD PTR [r13+rcx*4+0x0]
   1400037c5:	mov    DWORD PTR [r14],ecx
   1400037c8:	jmp    0x14000378c
   1400037ca:	call   0x140006d9c
   1400037cf:	int3   
   1400037d0:	xor    eax,eax
   1400037d2:	cmp    ecx,0x10000000
   1400037d8:	setbe  al
   1400037db:	ret    
   1400037dc:	xor    eax,eax
   1400037de:	cmp    ecx,0x96000
   1400037e4:	setbe  al
   1400037e7:	ret    
   1400037e8:	xor    eax,eax
   1400037ea:	cmp    ecx,0x1000000
   1400037f0:	setbe  al
   1400037f3:	ret    
   1400037f4:	xor    eax,eax
   1400037f6:	cmp    ecx,0x4b8
   1400037fc:	sete   al
   1400037ff:	ret    
   140003800:	mov    QWORD PTR [rsp+0x8],rbx
   140003805:	mov    QWORD PTR [rsp+0x10],rsi
   14000380a:	push   rdi
   14000380b:	sub    rsp,0x20
   14000380f:	mov    eax,DWORD PTR [rip+0x1a4e3]        # 0x14001dcf8
   140003815:	xor    ebx,ebx
   140003817:	mov    esi,ecx
   140003819:	test   eax,eax
   14000381b:	jne    0x14000382b
   14000381d:	call   0x1400042bc
   140003822:	lea    eax,[rbx+0x1]
   140003825:	mov    DWORD PTR [rip+0x1a4cd],eax        # 0x14001dcf8
   14000382b:	mov    edx,DWORD PTR [rip+0x1a2bb]        # 0x14001daec
   140003831:	mov    edi,edx
   140003833:	test   eax,eax
   140003835:	jne    0x14000384c
   140003837:	call   0x1400042bc
   14000383c:	mov    edx,DWORD PTR [rip+0x1a2aa]        # 0x14001daec
   140003842:	mov    DWORD PTR [rip+0x1a4ac],0x1        # 0x14001dcf8
   14000384c:	dec    edx
   14000384e:	lea    ecx,[rdi+0x4d27]
   140003854:	not    edx
   140003856:	and    edx,ecx
   140003858:	cmp    edx,esi
   14000385a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000385f:	sete   bl
   140003862:	mov    eax,ebx
   140003864:	mov    rbx,QWORD PTR [rsp+0x30]
   140003869:	add    rsp,0x20
   14000386d:	pop    rdi
   14000386e:	ret    
   14000386f:	int3   
   140003870:	xor    eax,eax
   140003872:	cmp    ecx,0x3c9c30
   140003878:	setbe  al
   14000387b:	ret    
   14000387c:	xor    eax,eax
   14000387e:	cmp    ecx,0x440
   140003884:	sete   al
   140003887:	ret    
   140003888:	rex push rbx
   14000388a:	sub    rsp,0x20
   14000388e:	lea    rax,[rip+0x13973]        # 0x140017208
   140003895:	mov    rbx,rcx
   140003898:	mov    QWORD PTR [rcx],rax
   14000389b:	test   dl,0x1
   14000389e:	je     0x1400038a5
   1400038a0:	call   0x140005fbc
   1400038a5:	mov    rax,rbx
   1400038a8:	add    rsp,0x20
   1400038ac:	pop    rbx
   1400038ad:	ret    
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	lea    rax,[rip+0x13951]        # 0x140017208
   1400038b7:	mov    QWORD PTR [rcx],rax
   1400038ba:	ret    
   1400038bb:	int3   
   1400038bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400038c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400038c6:	push   rdi
   1400038c7:	sub    rsp,0x30
   1400038cb:	cmp    QWORD PTR [rcx],0x0
   1400038cf:	mov    rbx,rcx
   1400038d2:	jne    0x1400038e6
   1400038d4:	mov    ecx,0x6
   1400038d9:	call   QWORD PTR [rip+0xf821]        # 0x140013100
   1400038df:	xor    eax,eax
   1400038e1:	jmp    0x140003968
   1400038e6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400038ea:	test   rcx,rcx
   1400038ed:	je     0x1400038f9
   1400038ef:	call   0x14000fcb0
   1400038f4:	and    QWORD PTR [rbx+0x8],0x0
   1400038f9:	mov    rcx,QWORD PTR [rbx]
   1400038fc:	xor    r9d,r9d
   1400038ff:	lea    rsi,[rbx+0x10]
   140003903:	lea    edx,[r9+0x3]
   140003907:	xor    r8d,r8d
   14000390a:	mov    QWORD PTR [rsp+0x20],rsi
   14000390f:	call   QWORD PTR [rip+0xf743]        # 0x140013058
   140003915:	test   eax,eax
   140003917:	jne    0x140003924
   140003919:	call   QWORD PTR [rip+0xf819]        # 0x140013138
   14000391f:	cmp    eax,0x7a
   140003922:	jne    0x1400038df
   140003924:	mov    ecx,DWORD PTR [rsi]
   140003926:	call   0x14000fcb8
   14000392b:	mov    rdi,rax
   14000392e:	test   rax,rax
   140003931:	jne    0x140003938
   140003933:	lea    ecx,[rax+0x8]
   140003936:	jmp    0x1400038d9
   140003938:	mov    r9d,DWORD PTR [rsi]
   14000393b:	mov    rcx,QWORD PTR [rbx]
   14000393e:	mov    r8,rax
   140003941:	mov    edx,0x3
   140003946:	mov    QWORD PTR [rsp+0x20],rsi
   14000394b:	call   QWORD PTR [rip+0xf707]        # 0x140013058
   140003951:	test   eax,eax
   140003953:	jne    0x14000395f
   140003955:	mov    rcx,rdi
   140003958:	call   0x14000fcb0
   14000395d:	jmp    0x1400038df
   14000395f:	mov    QWORD PTR [rbx+0x8],rdi
   140003963:	mov    eax,0x1
   140003968:	mov    rbx,QWORD PTR [rsp+0x40]
   14000396d:	mov    rsi,QWORD PTR [rsp+0x48]
   140003972:	add    rsp,0x30
   140003976:	pop    rdi
   140003977:	ret    
   140003978:	mov    QWORD PTR [rsp+0x10],rbx
   14000397d:	mov    QWORD PTR [rsp+0x18],rsi
   140003982:	push   rdi
   140003983:	sub    rsp,0x20
   140003987:	xor    ebx,ebx
   140003989:	mov    rsi,rdx
   14000398c:	mov    rdi,rcx
   14000398f:	cmp    QWORD PTR [rcx+0x8],rbx
   140003993:	jne    0x1400039a3
   140003995:	call   0x1400038bc
   14000399a:	test   eax,eax
   14000399c:	jne    0x1400039a3
   14000399e:	lea    ecx,[rbx+0xd]
   1400039a1:	jmp    0x1400039e6
   1400039a3:	lea    r8,[rsp+0x30]
   1400039a8:	mov    rdx,rsi
   1400039ab:	xor    ecx,ecx
   1400039ad:	call   QWORD PTR [rip+0xf705]        # 0x1400130b8
   1400039b3:	test   eax,eax
   1400039b5:	je     0x1400039ec
   1400039b7:	mov    rdx,QWORD PTR [rdi+0x8]
   1400039bb:	cmp    DWORD PTR [rdx],ebx
   1400039bd:	jbe    0x1400039e1
   1400039bf:	mov    rax,QWORD PTR [rsp+0x30]
   1400039c4:	mov    r8d,DWORD PTR [rsp+0x34]
   1400039c9:	lea    rcx,[rdx+0x4]
   1400039cd:	cmp    DWORD PTR [rcx],eax
   1400039cf:	jne    0x1400039d7
   1400039d1:	cmp    DWORD PTR [rcx+0x4],r8d
   1400039d5:	je     0x1400039fe
   1400039d7:	inc    ebx
   1400039d9:	add    rcx,0xc
   1400039dd:	cmp    ebx,DWORD PTR [rdx]
   1400039df:	jb     0x1400039cd
   1400039e1:	mov    ecx,0x490
   1400039e6:	call   QWORD PTR [rip+0xf714]        # 0x140013100
   1400039ec:	xor    eax,eax
   1400039ee:	mov    rbx,QWORD PTR [rsp+0x38]
   1400039f3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400039f8:	add    rsp,0x20
   1400039fc:	pop    rdi
   1400039fd:	ret    
   1400039fe:	mov    ecx,ebx
   140003a00:	mov    eax,0x1
   140003a05:	inc    rcx
   140003a08:	lea    rcx,[rcx+rcx*2]
   140003a0c:	mov    DWORD PTR [rdx+rcx*4],0x2
   140003a13:	jmp    0x1400039ee
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	rex push rbx
   140003a1a:	sub    rsp,0x20
   140003a1e:	mov    rbx,rcx
   140003a21:	mov    rcx,QWORD PTR [rcx+0x8]
   140003a25:	test   rcx,rcx
   140003a28:	je     0x140003a2f
   140003a2a:	call   0x14000fcb0
   140003a2f:	mov    rcx,QWORD PTR [rbx+0x18]
   140003a33:	test   rcx,rcx
   140003a36:	je     0x140003a3d
   140003a38:	call   0x14000fcb0
   140003a3d:	mov    rcx,QWORD PTR [rbx+0x28]
   140003a41:	test   rcx,rcx
   140003a44:	je     0x140003a4b
   140003a46:	call   0x14000fcb0
   140003a4b:	mov    rcx,QWORD PTR [rbx]
   140003a4e:	test   rcx,rcx
   140003a51:	je     0x140003a59
   140003a53:	call   QWORD PTR [rip+0xf6bf]        # 0x140013118
   140003a59:	add    rsp,0x20
   140003a5d:	pop    rbx
   140003a5e:	ret    
   140003a5f:	int3   
   140003a60:	lea    rax,[rip+0x137c9]        # 0x140017230
   140003a67:	mov    QWORD PTR [rcx],rax
   140003a6a:	ret    
   140003a6b:	int3   
   140003a6c:	rex push rbx
   140003a6e:	sub    rsp,0x20
   140003a72:	lea    rax,[rip+0x137b7]        # 0x140017230
   140003a79:	mov    rbx,rcx
   140003a7c:	mov    QWORD PTR [rcx],rax
   140003a7f:	test   dl,0x1
   140003a82:	je     0x140003a89
   140003a84:	call   0x140005fbc
   140003a89:	mov    rax,rbx
   140003a8c:	add    rsp,0x20
   140003a90:	pop    rbx
   140003a91:	ret    
   140003a92:	int3   
   140003a93:	int3   
   140003a94:	mov    QWORD PTR [rsp+0x8],rcx
   140003a99:	sub    rsp,0x18
   140003a9d:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140003aa5:	lea    rax,[rip+0x1375c]        # 0x140017208
   140003aac:	mov    QWORD PTR [rcx],rax
   140003aaf:	lea    rax,[rip+0x1377a]        # 0x140017230
   140003ab6:	mov    QWORD PTR [rcx+0x8],rax
   140003aba:	xor    edx,edx
   140003abc:	mov    QWORD PTR [rcx+0x10],rdx
   140003ac0:	lea    rax,[rip+0x13751]        # 0x140017218
   140003ac7:	mov    QWORD PTR [rcx],rax
   140003aca:	lea    rax,[rip+0x1377f]        # 0x140017250
   140003ad1:	mov    QWORD PTR [rcx+0x8],rax
   140003ad5:	mov    QWORD PTR [rcx+0x18],rdx
   140003ad9:	mov    QWORD PTR [rcx+0x20],rdx
   140003add:	mov    DWORD PTR [rcx+0x28],edx
   140003ae0:	mov    QWORD PTR [rcx+0x30],rdx
   140003ae4:	mov    BYTE PTR [rcx+0x38],dl
   140003ae7:	mov    rax,rcx
   140003aea:	add    rsp,0x18
   140003aee:	ret    
   140003aef:	int3   
   140003af0:	mov    QWORD PTR [rsp+0x8],rbx
   140003af5:	push   rdi
   140003af6:	sub    rsp,0x20
   140003afa:	mov    ebx,edx
   140003afc:	mov    rdi,rcx
   140003aff:	call   0x140003b20
   140003b04:	test   bl,0x1
   140003b07:	je     0x140003b11
   140003b09:	mov    rcx,rdi
   140003b0c:	call   0x140005fbc
   140003b11:	mov    rax,rdi
   140003b14:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b19:	add    rsp,0x20
   140003b1d:	pop    rdi
   140003b1e:	ret    
   140003b1f:	int3   
   140003b20:	mov    QWORD PTR [rsp+0x8],rcx
   140003b25:	push   rbx
   140003b26:	sub    rsp,0x30
   140003b2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003b33:	mov    rbx,rcx
   140003b36:	lea    rax,[rip+0x136db]        # 0x140017218
   140003b3d:	mov    QWORD PTR [rcx],rax
   140003b40:	lea    rax,[rip+0x13709]        # 0x140017250
   140003b47:	mov    QWORD PTR [rcx+0x8],rax
   140003b4b:	cmp    QWORD PTR [rcx+0x18],0x0
   140003b50:	je     0x140003b9c
   140003b52:	cmp    DWORD PTR [rcx+0x24],0x0
   140003b56:	jne    0x140003b9c
   140003b58:	cmp    DWORD PTR [rcx+0x30],0x0
   140003b5c:	je     0x140003b92
   140003b5e:	cmp    DWORD PTR [rcx+0x20],0x0
   140003b62:	jne    0x140003b92
   140003b64:	cmp    DWORD PTR [rip+0x1a18d],0x0        # 0x14001dcf8
   140003b6b:	jne    0x140003b7c
   140003b6d:	call   0x1400042bc
   140003b72:	mov    DWORD PTR [rip+0x1a17c],0x1        # 0x14001dcf8
   140003b7c:	cmp    DWORD PTR [rip+0x19f65],0x0        # 0x14001dae8
   140003b83:	je     0x140003b92
   140003b85:	mov    edx,DWORD PTR [rbx+0x34]
   140003b88:	mov    rcx,QWORD PTR [rbx+0x18]
   140003b8c:	call   QWORD PTR [rip+0xf816]        # 0x1400133a8
   140003b92:	mov    rcx,QWORD PTR [rbx+0x18]
   140003b96:	call   QWORD PTR [rip+0xf804]        # 0x1400133a0
   140003b9c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003ba0:	test   rcx,rcx
   140003ba3:	je     0x140003bab
   140003ba5:	call   QWORD PTR [rip+0xf56d]        # 0x140013118
   140003bab:	and    QWORD PTR [rbx+0x10],0x0
   140003bb0:	and    QWORD PTR [rbx+0x18],0x0
   140003bb5:	lea    rax,[rip+0x13674]        # 0x140017230
   140003bbc:	mov    QWORD PTR [rbx+0x8],rax
   140003bc0:	lea    rax,[rip+0x13641]        # 0x140017208
   140003bc7:	mov    QWORD PTR [rbx],rax
   140003bca:	add    rsp,0x30
   140003bce:	pop    rbx
   140003bcf:	ret    
   140003bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140003bd5:	mov    QWORD PTR [rsp+0x18],rsi
   140003bda:	push   rdi
   140003bdb:	sub    rsp,0x20
   140003bdf:	xor    eax,eax
   140003be1:	mov    DWORD PTR [rcx+0x34],r8d
   140003be5:	lea    r8,[rcx+0x38]
   140003be9:	cmp    DWORD PTR [rsp+0x58],eax
   140003bed:	mov    edi,0x104
   140003bf2:	mov    rsi,rdx
   140003bf5:	setne  al
   140003bf8:	mov    rbx,rcx
   140003bfb:	mov    DWORD PTR [rcx+0x2c],0x1
   140003c02:	mov    DWORD PTR [rcx+0x30],eax
   140003c05:	mov    DWORD PTR [rcx+0x28],r9d
   140003c09:	mov    ecx,edi
   140003c0b:	sub    rdx,r8
   140003c0e:	lea    rax,[rcx+0x7ffffefa]
   140003c15:	test   rax,rax
   140003c18:	je     0x140003c2d
   140003c1a:	mov    al,BYTE PTR [rdx+r8*1]
   140003c1e:	test   al,al
   140003c20:	je     0x140003c2d
   140003c22:	mov    BYTE PTR [r8],al
   140003c25:	inc    r8
   140003c28:	dec    rcx
   140003c2b:	jne    0x140003c0e
   140003c2d:	test   rcx,rcx
   140003c30:	jne    0x140003c35
   140003c32:	dec    r8
   140003c35:	mov    BYTE PTR [r8],0x0
   140003c39:	and    QWORD PTR [rbx+0x18],0x0
   140003c3e:	mov    rcx,rbx
   140003c41:	call   0x140003cc0
   140003c46:	test   eax,eax
   140003c48:	jne    0x140003caf
   140003c4a:	test   rsi,rsi
   140003c4d:	je     0x140003c6f
   140003c4f:	mov    rcx,rdi
   140003c52:	mov    rdx,rsi
   140003c55:	cmp    BYTE PTR [rdx],al
   140003c57:	je     0x140003c61
   140003c59:	inc    rdx
   140003c5c:	dec    rcx
   140003c5f:	jne    0x140003c55
   140003c61:	test   rcx,rcx
   140003c64:	jne    0x140003c6a
   140003c66:	xor    edi,edi
   140003c68:	jmp    0x140003c74
   140003c6a:	sub    rdi,rcx
   140003c6d:	jmp    0x140003c79
   140003c6f:	mov    rdi,QWORD PTR [rsp+0x30]
   140003c74:	mov    eax,0x80070057
   140003c79:	test   eax,eax
   140003c7b:	js     0x140003caf
   140003c7d:	mov    r8d,0x7
   140003c83:	cmp    rdi,r8
   140003c86:	jbe    0x140003caf
   140003c88:	lea    rdx,[rip+0x13529]        # 0x1400171b8
   140003c8f:	mov    rcx,rsi
   140003c92:	call   0x140006a20
   140003c97:	test   eax,eax
   140003c99:	jne    0x140003caf
   140003c9b:	mov    rcx,rbx
   140003c9e:	call   0x140003fc8
   140003ca3:	and    DWORD PTR [rbx+0x2c],0x0
   140003ca7:	mov    rcx,rbx
   140003caa:	call   0x140003cc0
   140003caf:	mov    rbx,QWORD PTR [rsp+0x38]
   140003cb4:	mov    rsi,QWORD PTR [rsp+0x40]
   140003cb9:	add    rsp,0x20
   140003cbd:	pop    rdi
   140003cbe:	ret    
   140003cbf:	int3   
   140003cc0:	mov    rax,rsp
   140003cc3:	mov    QWORD PTR [rax+0x10],rbx
   140003cc7:	mov    QWORD PTR [rax+0x18],rsi
   140003ccb:	mov    QWORD PTR [rax+0x20],rdi
   140003ccf:	push   rbp
   140003cd0:	push   r12
   140003cd2:	push   r13
   140003cd4:	push   r14
   140003cd6:	push   r15
   140003cd8:	lea    rbp,[rax-0x198]
   140003cdf:	sub    rsp,0x270
   140003ce6:	mov    rax,QWORD PTR [rip+0x1739b]        # 0x14001b088
   140003ced:	xor    rax,rsp
   140003cf0:	mov    QWORD PTR [rbp+0x160],rax
   140003cf7:	xor    r13d,r13d
   140003cfa:	mov    rbx,rcx
   140003cfd:	mov    ecx,DWORD PTR [rcx+0x28]
   140003d00:	mov    r8d,r13d
   140003d03:	mov    r12d,r13d
   140003d06:	mov    edi,r13d
   140003d09:	test   ecx,ecx
   140003d0b:	je     0x140003d20
   140003d0d:	dec    ecx
   140003d0f:	jne    0x140003d2f
   140003d11:	lea    edi,[rcx+0x6]
   140003d14:	mov    r8d,0x4000004
   140003d1a:	lea    r12d,[r13+0x4]
   140003d1e:	jmp    0x140003d2f
   140003d20:	mov    edi,0x4
   140003d25:	mov    r8d,0x4000002
   140003d2b:	lea    r12d,[rdi-0x2]
   140003d2f:	mov    esi,0x1
   140003d34:	cmp    DWORD PTR [rbx+0x2c],esi
   140003d37:	jne    0x140003dfb
   140003d3d:	mov    eax,DWORD PTR [rbx+0x34]
   140003d40:	lea    r14,[rbx+0x38]
   140003d44:	or     rsi,0xffffffffffffffff
   140003d48:	xor    r9d,r9d
   140003d4b:	xor    edx,edx
   140003d4d:	mov    rcx,rsi
   140003d50:	mov    QWORD PTR [rsp+0x28],r14
   140003d55:	mov    DWORD PTR [rsp+0x20],eax
   140003d59:	call   QWORD PTR [rip+0xf651]        # 0x1400133b0
   140003d5f:	mov    QWORD PTR [rbx+0x10],rax
   140003d63:	call   QWORD PTR [rip+0xf3cf]        # 0x140013138
   140003d69:	mov    r15d,eax
   140003d6c:	cmp    eax,0xb7
   140003d71:	jne    0x140003da5
   140003d73:	mov    rcx,QWORD PTR [rbx+0x10]
   140003d77:	call   QWORD PTR [rip+0xf39b]        # 0x140013118
   140003d7d:	mov    QWORD PTR [rbx+0x10],r13
   140003d81:	cmp    QWORD PTR [rbx+0x10],r13
   140003d85:	jne    0x140003e4c
   140003d8b:	mov    eax,r15d
   140003d8e:	sub    eax,0x5
   140003d91:	je     0x140003dbf
   140003d93:	dec    eax
   140003d95:	je     0x140003db8
   140003d97:	cmp    eax,0xb1
   140003d9c:	je     0x140003db1
   140003d9e:	mov    eax,0xe123054a
   140003da3:	jmp    0x140003dc4
   140003da5:	cmp    eax,0x5
   140003da8:	jne    0x140003d81
   140003daa:	xor    eax,eax
   140003dac:	jmp    0x140003ee1
   140003db1:	mov    eax,0xe1230547
   140003db6:	jmp    0x140003dc4
   140003db8:	mov    eax,0xe1230548
   140003dbd:	jmp    0x140003dc4
   140003dbf:	mov    eax,0xe1230549
   140003dc4:	mov    DWORD PTR [rsp+0x40],0x1
   140003dcc:	mov    DWORD PTR [rsp+0x44],eax
   140003dd0:	mov    DWORD PTR [rsp+0x48],r15d
   140003dd5:	mov    WORD PTR [rsp+0x4c],r13w
   140003ddb:	test   r14,r14
   140003dde:	je     0x140003f32
   140003de4:	inc    rsi
   140003de7:	cmp    BYTE PTR [r14+rsi*1],r13b
   140003deb:	jne    0x140003de4
   140003ded:	test   rsi,rsi
   140003df0:	je     0x140003f32
   140003df6:	jmp    0x140003f11
   140003dfb:	cmp    DWORD PTR [rbx+0x2c],r13d
   140003dff:	jne    0x140003e51
   140003e01:	lea    r8,[rbx+0x38]
   140003e05:	xor    edx,edx
   140003e07:	mov    ecx,edi
   140003e09:	call   QWORD PTR [rip+0xf5b1]        # 0x1400133c0
   140003e0f:	mov    QWORD PTR [rbx+0x10],rax
   140003e13:	call   QWORD PTR [rip+0xf31f]        # 0x140013138
   140003e19:	cmp    QWORD PTR [rbx+0x10],r13
   140003e1d:	je     0x140003e24
   140003e1f:	mov    DWORD PTR [rbx+0x20],esi
   140003e22:	jmp    0x140003e51
   140003e24:	lea    rdx,[rip+0x1612d]        # 0x140019f58
   140003e2b:	lea    rcx,[rsp+0x30]
   140003e30:	cmp    eax,0x5
   140003e33:	je     0x140003f44
   140003e39:	mov    DWORD PTR [rsp+0x30],r13d
   140003e3e:	cmp    eax,0x2
   140003e41:	je     0x140003f60
   140003e47:	jmp    0x140003f78
   140003e4c:	mov    esi,0x1
   140003e51:	cmp    QWORD PTR [rbx+0x18],r13
   140003e55:	je     0x140003e5f
   140003e57:	mov    DWORD PTR [rbx+0x24],esi
   140003e5a:	jmp    0x140003edf
   140003e5f:	mov    eax,DWORD PTR [rbx+0x34]
   140003e62:	mov    rcx,QWORD PTR [rbx+0x10]
   140003e66:	xor    r9d,r9d
   140003e69:	xor    r8d,r8d
   140003e6c:	mov    edx,edi
   140003e6e:	mov    QWORD PTR [rsp+0x20],rax
   140003e73:	call   QWORD PTR [rip+0xf51f]        # 0x140013398
   140003e79:	mov    QWORD PTR [rbx+0x18],rax
   140003e7d:	test   rax,rax
   140003e80:	je     0x140003f90
   140003e86:	cmp    DWORD PTR [rbx+0x20],r13d
   140003e8a:	jne    0x140003ea1
   140003e8c:	mov    edx,DWORD PTR [rbx+0x34]
   140003e8f:	mov    r9d,r12d
   140003e92:	mov    r8d,0x1000
   140003e98:	mov    rcx,rax
   140003e9b:	call   QWORD PTR [rip+0xf28f]        # 0x140013130
   140003ea1:	cmp    DWORD PTR [rbx+0x30],r13d
   140003ea5:	je     0x140003edf
   140003ea7:	cmp    DWORD PTR [rbx+0x20],r13d
   140003eab:	jne    0x140003edf
   140003ead:	cmp    DWORD PTR [rip+0x19e44],r13d        # 0x14001dcf8
   140003eb4:	jne    0x140003ec1
   140003eb6:	call   0x1400042bc
   140003ebb:	mov    DWORD PTR [rip+0x19e37],esi        # 0x14001dcf8
   140003ec1:	cmp    DWORD PTR [rip+0x19c20],r13d        # 0x14001dae8
   140003ec8:	je     0x140003edf
   140003eca:	mov    edx,DWORD PTR [rbx+0x34]
   140003ecd:	mov    rcx,QWORD PTR [rbx+0x18]
   140003ed1:	call   QWORD PTR [rip+0xf4e1]        # 0x1400133b8
   140003ed7:	test   eax,eax
   140003ed9:	jne    0x140003edf
   140003edb:	mov    DWORD PTR [rbx+0x30],r13d
   140003edf:	mov    eax,esi
   140003ee1:	mov    rcx,QWORD PTR [rbp+0x160]
   140003ee8:	xor    rcx,rsp
   140003eeb:	call   0x140005fe0
   140003ef0:	lea    r11,[rsp+0x270]
   140003ef8:	mov    rbx,QWORD PTR [r11+0x38]
   140003efc:	mov    rsi,QWORD PTR [r11+0x40]
   140003f00:	mov    rdi,QWORD PTR [r11+0x48]
   140003f04:	mov    rsp,r11
   140003f07:	pop    r15
   140003f09:	pop    r14
   140003f0b:	pop    r13
   140003f0d:	pop    r12
   140003f0f:	pop    rbp
   140003f10:	ret    
   140003f11:	lea    rdx,[rsp+0x4c]
   140003f16:	lea    rcx,[rsp+0x30]
   140003f1b:	mov    r9,r14
   140003f1e:	mov    r8d,0x104
   140003f24:	mov    QWORD PTR [rsp+0x20],0x103
   140003f2d:	call   0x14000ffcc
   140003f32:	lea    rdx,[rip+0x15f97]        # 0x140019ed0
   140003f39:	lea    rcx,[rsp+0x40]
   140003f3e:	call   0x140009ec8
   140003f43:	int3   
   140003f44:	mov    DWORD PTR [rsp+0x30],esi
   140003f48:	mov    DWORD PTR [rsp+0x34],0xe1230fb6
   140003f50:	mov    rax,QWORD PTR [rsp+0x30]
   140003f55:	mov    QWORD PTR [rsp+0x30],rax
   140003f5a:	call   0x140009ec8
   140003f5f:	int3   
   140003f60:	mov    DWORD PTR [rsp+0x34],0xe1232742
   140003f68:	mov    rax,QWORD PTR [rsp+0x30]
   140003f6d:	mov    QWORD PTR [rsp+0x30],rax
   140003f72:	call   0x140009ec8
   140003f77:	int3   
   140003f78:	mov    DWORD PTR [rsp+0x34],0xe1232738
   140003f80:	mov    rax,QWORD PTR [rsp+0x30]
   140003f85:	mov    QWORD PTR [rsp+0x30],rax
   140003f8a:	call   0x140009ec8
   140003f8f:	int3   
   140003f90:	mov    rcx,QWORD PTR [rbx+0x10]
   140003f94:	call   QWORD PTR [rip+0xf17e]        # 0x140013118
   140003f9a:	mov    DWORD PTR [rsp+0x30],r13d
   140003f9f:	mov    DWORD PTR [rsp+0x34],0xe1232739
   140003fa7:	mov    rax,QWORD PTR [rsp+0x30]
   140003fac:	lea    rdx,[rip+0x15fa5]        # 0x140019f58
   140003fb3:	lea    rcx,[rsp+0x30]
   140003fb8:	mov    QWORD PTR [rsp+0x30],rax
   140003fbd:	mov    QWORD PTR [rbx+0x10],r13
   140003fc1:	call   0x140009ec8
   140003fc6:	int3   
   140003fc7:	int3   
   140003fc8:	rex push rbp
   140003fca:	lea    rbp,[rsp-0x90]
   140003fd2:	sub    rsp,0x190
   140003fd9:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140003fe2:	mov    DWORD PTR [rsp+0x60],0x3
   140003fea:	mov    eax,DWORD PTR [rcx+0x34]
   140003fed:	mov    DWORD PTR [rsp+0x64],eax
   140003ff1:	mov    eax,DWORD PTR [rcx+0x28]
   140003ff4:	mov    DWORD PTR [rbp+0x6c],eax
   140003ff7:	mov    eax,DWORD PTR [rcx+0x30]
   140003ffa:	mov    DWORD PTR [rbp+0x70],eax
   140003ffd:	lea    r9,[rcx+0x38]
   140004001:	mov    edx,0x104
   140004006:	lea    rcx,[rsp+0x68]
   14000400b:	xor    r8d,r8d
   14000400e:	lea    rax,[rsp+0x68]
   140004013:	sub    r9,rax
   140004016:	lea    rax,[rdx+0x7ffffefa]
   14000401d:	test   rax,rax
   140004020:	je     0x140004034
   140004022:	mov    al,BYTE PTR [r9+rcx*1]
   140004026:	test   al,al
   140004028:	je     0x140004034
   14000402a:	mov    BYTE PTR [rcx],al
   14000402c:	inc    rcx
   14000402f:	dec    rdx
   140004032:	jne    0x140004016
   140004034:	test   rdx,rdx
   140004037:	jne    0x140004042
   140004039:	dec    rcx
   14000403c:	mov    r8d,0x8007007a
   140004042:	mov    BYTE PTR [rcx],0x0
   140004045:	test   r8d,r8d
   140004048:	jns    0x14000407d
   14000404a:	and    DWORD PTR [rbp+0xa0],0x0
   140004051:	mov    DWORD PTR [rbp+0xa4],0xe1232738
   14000405b:	mov    rax,QWORD PTR [rbp+0xa0]
   140004062:	mov    QWORD PTR [rbp+0xa0],rax
   140004069:	lea    rdx,[rip+0x15ee8]        # 0x140019f58
   140004070:	lea    rcx,[rbp+0xa0]
   140004077:	call   0x140009ec8
   14000407c:	int3   
   14000407d:	lea    rax,[rsp+0x60]
   140004082:	test   rax,rax
   140004085:	je     0x140004093
   140004087:	lea    rcx,[rsp+0x60]
   14000408c:	call   0x14000590c
   140004091:	jmp    0x140004098
   140004093:	mov    eax,0xe1230554
   140004098:	test   eax,eax
   14000409a:	je     0x1400040de
   14000409c:	mov    DWORD PTR [rsp+0x20],0x1
   1400040a4:	mov    DWORD PTR [rsp+0x24],eax
   1400040a8:	and    QWORD PTR [rsp+0x28],0x0
   1400040ae:	and    QWORD PTR [rsp+0x30],0x0
   1400040b4:	and    QWORD PTR [rsp+0x38],0x0
   1400040ba:	and    QWORD PTR [rsp+0x40],0x0
   1400040c0:	and    QWORD PTR [rsp+0x48],0x0
   1400040c6:	and    QWORD PTR [rsp+0x50],0x0
   1400040cc:	lea    rdx,[rip+0x15ddd]        # 0x140019eb0
   1400040d3:	lea    rcx,[rsp+0x20]
   1400040d8:	call   0x140009ec8
   1400040dd:	int3   
   1400040de:	add    rsp,0x190
   1400040e5:	pop    rbp
   1400040e6:	ret    
   1400040e7:	int3   
   1400040e8:	mov    rax,QWORD PTR [rcx+0x18]
   1400040ec:	ret    
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	sub    rcx,0x8
   1400040f4:	jmp    0x140003af0
   1400040f9:	int3   
   1400040fa:	int3   
   1400040fb:	int3   
   1400040fc:	mov    QWORD PTR [rsp+0x10],rbx
   140004101:	mov    QWORD PTR [rsp+0x18],rsi
   140004106:	mov    QWORD PTR [rsp+0x20],rdi
   14000410b:	push   rbp
   14000410c:	mov    rbp,rsp
   14000410f:	sub    rsp,0x50
   140004113:	mov    rax,QWORD PTR [rip+0x16f6e]        # 0x14001b088
   14000411a:	xor    rax,rsp
   14000411d:	mov    QWORD PTR [rbp-0x10],rax
   140004121:	mov    rbx,rcx
   140004124:	lea    rdx,[rbp-0x20]
   140004128:	xor    ecx,ecx
   14000412a:	call   0x1400115d0
   14000412f:	mov    eax,DWORD PTR [rbp-0x1c]
   140004132:	mov    edi,DWORD PTR [rbp-0x20]
   140004135:	mov    DWORD PTR [rbx],eax
   140004137:	mov    eax,DWORD PTR [rbp-0x14]
   14000413a:	mov    esi,0x1
   14000413f:	mov    DWORD PTR [rbx+0x4],eax
   140004142:	mov    eax,DWORD PTR [rbp-0x18]
   140004145:	lea    rdx,[rbp-0x20]
   140004149:	mov    ecx,esi
   14000414b:	mov    DWORD PTR [rbx+0x8],eax
   14000414e:	call   0x1400115d0
   140004153:	mov    eax,DWORD PTR [rbp-0x20]
   140004156:	mov    DWORD PTR [rbx+0xc],eax
   140004159:	mov    eax,DWORD PTR [rbp-0x1c]
   14000415c:	mov    DWORD PTR [rbx+0x10],eax
   14000415f:	mov    eax,DWORD PTR [rbp-0x14]
   140004162:	mov    DWORD PTR [rbx+0x14],eax
   140004165:	mov    eax,DWORD PTR [rbp-0x18]
   140004168:	mov    DWORD PTR [rbx+0x18],eax
   14000416b:	test   eax,eax
   14000416d:	jns    0x1400041e2
   14000416f:	lea    rdx,[rbp-0x30]
   140004173:	mov    ecx,0x40000000
   140004178:	call   0x1400115d0
   14000417d:	cmp    DWORD PTR [rbp-0x30],0x40000005
   140004184:	jb     0x1400041e2
   140004186:	cmp    DWORD PTR [rbp-0x2c],0x7263694d
   14000418d:	jne    0x1400041e2
   14000418f:	cmp    DWORD PTR [rbp-0x28],0x666f736f
   140004196:	jne    0x1400041e2
   140004198:	cmp    DWORD PTR [rbp-0x24],0x76482074
   14000419f:	jne    0x1400041e2
   1400041a1:	lea    rdx,[rbp-0x30]
   1400041a5:	mov    ecx,0x40000001
   1400041aa:	call   0x1400115d0
   1400041af:	cmp    DWORD PTR [rbp-0x30],0x31237648
   1400041b6:	jne    0x1400041e2
   1400041b8:	lea    rdx,[rbp-0x30]
   1400041bc:	mov    ecx,0x40000002
   1400041c1:	call   0x1400115d0
   1400041c6:	cmp    DWORD PTR [rbp-0x30],0x0
   1400041ca:	jne    0x1400041de
   1400041cc:	cmp    DWORD PTR [rbp-0x2c],0x0
   1400041d0:	jne    0x1400041de
   1400041d2:	cmp    DWORD PTR [rbp-0x28],0x0
   1400041d6:	jne    0x1400041de
   1400041d8:	cmp    DWORD PTR [rbp-0x24],0x0
   1400041dc:	je     0x1400041e2
   1400041de:	mov    eax,esi
   1400041e0:	jmp    0x1400041e4
   1400041e2:	xor    eax,eax
   1400041e4:	and    DWORD PTR [rbx+0x1c],0x0
   1400041e8:	cmp    DWORD PTR [rbx],0x756e6547
   1400041ee:	mov    DWORD PTR [rbx+0x20],eax
   1400041f1:	mov    r8d,0x2
   1400041f7:	jne    0x140004230
   1400041f9:	cmp    DWORD PTR [rbx+0x4],0x49656e69
   140004200:	jne    0x140004230
   140004202:	cmp    DWORD PTR [rbx+0x8],0x6c65746e
   140004209:	jne    0x140004230
   14000420b:	mov    edx,DWORD PTR [rbx+0xc]
   14000420e:	lea    ecx,[r8+0x4]
   140004212:	shr    edx,0x8
   140004215:	and    edx,0xf
   140004218:	cmp    edx,ecx
   14000421a:	je     0x14000422a
   14000421c:	lea    eax,[rcx-0x3]
   14000421f:	cmp    edx,0xf
   140004222:	cmovne eax,esi
   140004225:	mov    DWORD PTR [rbx+0x1c],eax
   140004228:	jmp    0x140004271
   14000422a:	mov    DWORD PTR [rbx+0x1c],r8d
   14000422e:	jmp    0x140004271
   140004230:	cmp    DWORD PTR [rbx],0x68747541
   140004236:	jne    0x140004271
   140004238:	cmp    DWORD PTR [rbx+0x4],0x69746e65
   14000423f:	jne    0x140004271
   140004241:	cmp    DWORD PTR [rbx+0x8],0x444d4163
   140004248:	jne    0x140004271
   14000424a:	mov    eax,DWORD PTR [rbx+0xc]
   14000424d:	mov    ecx,0x6
   140004252:	shr    eax,0x8
   140004255:	and    eax,0xf
   140004258:	cmp    eax,ecx
   14000425a:	je     0x14000426a
   14000425c:	lea    edx,[rcx-0x2]
   14000425f:	cmp    eax,0xf
   140004262:	cmovne ecx,edx
   140004265:	mov    DWORD PTR [rbx+0x1c],ecx
   140004268:	jmp    0x140004271
   14000426a:	mov    DWORD PTR [rbx+0x1c],0x5
   140004271:	and    DWORD PTR [rbx+0x24],0x0
   140004275:	cmp    DWORD PTR [rbx+0x1c],r8d
   140004279:	jne    0x140004298
   14000427b:	mov    ecx,0xa
   140004280:	mov    DWORD PTR [rbx+0x24],r8d
   140004284:	cmp    edi,ecx
   140004286:	jb     0x140004298
   140004288:	lea    rdx,[rbp-0x20]
   14000428c:	call   0x1400115d0
   140004291:	movzx  eax,BYTE PTR [rbp-0x1f]
   140004295:	mov    DWORD PTR [rbx+0x24],eax
   140004298:	mov    rcx,QWORD PTR [rbp-0x10]
   14000429c:	xor    rcx,rsp
   14000429f:	call   0x140005fe0
   1400042a4:	mov    rbx,QWORD PTR [rsp+0x68]
   1400042a9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400042ae:	mov    rdi,QWORD PTR [rsp+0x78]
   1400042b3:	add    rsp,0x50
   1400042b7:	pop    rbp
   1400042b8:	ret    
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	mov    rax,rsp
   1400042bf:	mov    QWORD PTR [rax+0x8],rbx
   1400042c3:	mov    QWORD PTR [rax+0x10],rsi
   1400042c7:	mov    QWORD PTR [rax+0x18],rdi
   1400042cb:	mov    QWORD PTR [rax+0x20],r14
   1400042cf:	push   rbp
   1400042d0:	lea    rbp,[rax-0x38]
   1400042d4:	sub    rsp,0x130
   1400042db:	mov    rax,QWORD PTR [rip+0x16da6]        # 0x14001b088
   1400042e2:	xor    rax,rsp
   1400042e5:	mov    QWORD PTR [rbp+0x20],rax
   1400042e9:	lea    rcx,[rsp+0x20]
   1400042ee:	call   QWORD PTR [rip+0xf0d4]        # 0x1400133c8
   1400042f4:	mov    eax,DWORD PTR [rsp+0x48]
   1400042f8:	xor    edx,edx
   1400042fa:	mov    DWORD PTR [rip+0x19a1c],eax        # 0x14001dd1c
   140004300:	movzx  eax,WORD PTR [rsp+0x40]
   140004305:	lea    r8d,[rdx+0x28]
   140004309:	mov    WORD PTR [rip+0x199ec],ax        # 0x14001dcfc
   140004310:	mov    eax,DWORD PTR [rsp+0x24]
   140004314:	lea    rcx,[rip+0x19ab5]        # 0x14001ddd0
   14000431b:	mov    DWORD PTR [rip+0x197cb],eax        # 0x14001daec
   140004321:	movzx  eax,WORD PTR [rsp+0x20]
   140004326:	mov    WORD PTR [rip+0x199f3],ax        # 0x14001dd20
   14000432d:	call   0x1400099c0
   140004332:	lea    rcx,[rip+0x19a97]        # 0x14001ddd0
   140004339:	call   0x1400040fc
   14000433e:	lea    rcx,[rip+0x199eb]        # 0x14001dd30
   140004345:	mov    DWORD PTR [rip+0x199e1],0x9c        # 0x14001dd30
   14000434f:	call   QWORD PTR [rip+0xf07b]        # 0x1400133d0
   140004355:	xor    ebx,ebx
   140004357:	lea    rcx,[rip+0x12e7a]        # 0x1400171d8
   14000435e:	mov    eax,ebx
   140004360:	lea    esi,[rbx+0x2]
   140004363:	lea    r14d,[rbx+0x1]
   140004367:	cmp    DWORD PTR [rip+0x199d3],esi        # 0x14001dd40
   14000436d:	sete   al
   140004370:	cmp    DWORD PTR [rip+0x199c9],r14d        # 0x14001dd40
   140004377:	mov    DWORD PTR [rip+0x1976b],eax        # 0x14001dae8
   14000437d:	mov    eax,ebx
   14000437f:	sete   al
   140004382:	mov    DWORD PTR [rip+0x19a44],eax        # 0x14001ddcc
   140004388:	call   QWORD PTR [rip+0xf002]        # 0x140013390
   14000438e:	lea    rdx,[rip+0x12e33]        # 0x1400171c8
   140004395:	mov    rcx,rax
   140004398:	call   QWORD PTR [rip+0xee4a]        # 0x1400131e8
   14000439e:	mov    rdi,rax
   1400043a1:	test   rax,rax
   1400043a4:	je     0x1400043b8
   1400043a6:	call   QWORD PTR [rip+0xef34]        # 0x1400132e0
   1400043ac:	lea    rdx,[rip+0x1994d]        # 0x14001dd00
   1400043b3:	mov    rcx,rax
   1400043b6:	call   rdi
   1400043b8:	cmp    DWORD PTR [rip+0x19942],ebx        # 0x14001dd00
   1400043be:	je     0x1400043ff
   1400043c0:	lea    rcx,[rip+0x12e11]        # 0x1400171d8
   1400043c7:	call   QWORD PTR [rip+0xefc3]        # 0x140013390
   1400043cd:	lea    rdx,[rip+0x12e94]        # 0x140017268
   1400043d4:	mov    rcx,rax
   1400043d7:	call   QWORD PTR [rip+0xee0b]        # 0x1400131e8
   1400043dd:	test   rax,rax
   1400043e0:	je     0x1400043ff
   1400043e2:	lea    rcx,[rsp+0x50]
   1400043e7:	call   rax
   1400043e9:	mov    eax,DWORD PTR [rip+0x19935]        # 0x14001dd24
   1400043ef:	cmp    WORD PTR [rsp+0x50],0x6
   1400043f5:	cmove  eax,r14d
   1400043f9:	mov    DWORD PTR [rip+0x19925],eax        # 0x14001dd24
   1400043ff:	lea    rcx,[rbp-0x80]
   140004403:	xor    edx,edx
   140004405:	mov    r8d,0x9c
   14000440b:	mov    DWORD PTR [rip+0x19917],ebx        # 0x14001dd28
   140004411:	call   0x1400099c0
   140004416:	mov    eax,0x3
   14000441b:	mov    edx,esi
   14000441d:	xor    ecx,ecx
   14000441f:	mov    WORD PTR [rbp+0x14],ax
   140004423:	mov    DWORD PTR [rbp-0x80],0x9c
   14000442a:	mov    QWORD PTR [rbp-0x7c],0x5
   140004432:	call   0x140005800
   140004437:	mov    rcx,rax
   14000443a:	mov    edx,r14d
   14000443d:	call   0x140005800
   140004442:	mov    edx,0x20
   140004447:	mov    rcx,rax
   14000444a:	call   0x140005800
   14000444f:	mov    rdi,rax
   140004452:	mov    rax,QWORD PTR [rip+0x199a7]        # 0x14001de00
   140004459:	test   rax,rax
   14000445c:	jne    0x14000448b
   14000445e:	lea    rcx,[rip+0x12e1b]        # 0x140017280
   140004465:	call   QWORD PTR [rip+0xef25]        # 0x140013390
   14000446b:	lea    rdx,[rip+0x12e1e]        # 0x140017290
   140004472:	mov    rcx,rax
   140004475:	call   QWORD PTR [rip+0xed6d]        # 0x1400131e8
   14000447b:	mov    QWORD PTR [rip+0x1997e],rax        # 0x14001de00
   140004482:	test   rax,rax
   140004485:	jne    0x14000448b
   140004487:	mov    eax,ebx
   140004489:	jmp    0x140004499
   14000448b:	lea    rcx,[rbp-0x80]
   14000448f:	mov    r8,rdi
   140004492:	mov    edx,0x23
   140004497:	call   rax
   140004499:	mov    DWORD PTR [rip+0x19889],eax        # 0x14001dd28
   14000449f:	mov    eax,DWORD PTR [rip+0x1988f]        # 0x14001dd34
   1400044a5:	cmp    eax,0x5
   1400044a8:	jne    0x1400044cf
   1400044aa:	mov    eax,DWORD PTR [rip+0x19888]        # 0x14001dd38
   1400044b0:	cmp    eax,r14d
   1400044b3:	jne    0x1400044c1
   1400044b5:	cmp    WORD PTR [rip+0x19908],si        # 0x14001ddc4
   1400044bc:	setae  bl
   1400044bf:	jmp    0x1400044d2
   1400044c1:	cmp    eax,esi
   1400044c3:	jne    0x1400044cf
   1400044c5:	cmp    WORD PTR [rip+0x198f7],r14w        # 0x14001ddc4
   1400044cd:	jmp    0x1400044bc
   1400044cf:	seta   bl
   1400044d2:	mov    DWORD PTR [rip+0x19834],ebx        # 0x14001dd0c
   1400044d8:	mov    rcx,QWORD PTR [rbp+0x20]
   1400044dc:	xor    rcx,rsp
   1400044df:	call   0x140005fe0
   1400044e4:	lea    r11,[rsp+0x130]
   1400044ec:	mov    rbx,QWORD PTR [r11+0x10]
   1400044f0:	mov    rsi,QWORD PTR [r11+0x18]
   1400044f4:	mov    rdi,QWORD PTR [r11+0x20]
   1400044f8:	mov    r14,QWORD PTR [r11+0x28]
   1400044fc:	mov    rsp,r11
   1400044ff:	pop    rbp
   140004500:	ret    
   140004501:	int3   
   140004502:	int3   
   140004503:	int3   
   140004504:	rex push rbx
   140004506:	sub    rsp,0x20
   14000450a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000450f:	mov    rbx,rcx
   140004512:	jb     0x14000451c
   140004514:	mov    rcx,QWORD PTR [rcx]
   140004517:	call   0x140005fbc
   14000451c:	xor    eax,eax
   14000451e:	mov    QWORD PTR [rbx+0x18],0x7
   140004526:	mov    QWORD PTR [rbx+0x10],rax
   14000452a:	mov    WORD PTR [rbx],ax
   14000452d:	add    rsp,0x20
   140004531:	pop    rbx
   140004532:	ret    
   140004533:	int3   
   140004534:	mov    QWORD PTR [rsp+0x8],rbx
   140004539:	mov    QWORD PTR [rsp+0x10],rbp
   14000453e:	mov    QWORD PTR [rsp+0x18],rsi
   140004543:	push   rdi
   140004544:	sub    rsp,0x20
   140004548:	xor    ebp,ebp
   14000454a:	mov    rsi,rdx
   14000454d:	mov    rbx,rcx
   140004550:	cmp    WORD PTR [rdx],bp
   140004553:	jne    0x140004559
   140004555:	mov    edi,ebp
   140004557:	jmp    0x140004566
   140004559:	or     rdi,0xffffffffffffffff
   14000455d:	inc    rdi
   140004560:	cmp    WORD PTR [rdx+rdi*2],bp
   140004564:	jne    0x14000455d
   140004566:	mov    rdx,QWORD PTR [rcx+0x18]
   14000456a:	cmp    rdx,0x8
   14000456e:	jb     0x140004575
   140004570:	mov    rax,QWORD PTR [rcx]
   140004573:	jmp    0x140004578
   140004575:	mov    rax,rcx
   140004578:	cmp    rsi,rax
   14000457b:	jb     0x1400045bd
   14000457d:	cmp    rdx,0x8
   140004581:	jb     0x140004586
   140004583:	mov    rcx,QWORD PTR [rcx]
   140004586:	mov    rax,QWORD PTR [rbx+0x10]
   14000458a:	lea    rcx,[rcx+rax*2]
   14000458e:	cmp    rcx,rsi
   140004591:	jbe    0x1400045bd
   140004593:	cmp    rdx,0x8
   140004597:	jb     0x14000459e
   140004599:	mov    rax,QWORD PTR [rbx]
   14000459c:	jmp    0x1400045a1
   14000459e:	mov    rax,rbx
   1400045a1:	sub    rsi,rax
   1400045a4:	mov    r9,rdi
   1400045a7:	mov    rdx,rbx
   1400045aa:	sar    rsi,1
   1400045ad:	mov    rcx,rbx
   1400045b0:	mov    r8,rsi
   1400045b3:	call   0x140004664
   1400045b8:	mov    rbx,rax
   1400045bb:	jmp    0x14000463c
   1400045bd:	movabs rax,0x7ffffffffffffffe
   1400045c7:	cmp    rdi,rax
   1400045ca:	ja     0x140004654
   1400045d0:	cmp    rdx,rdi
   1400045d3:	jae    0x1400045e6
   1400045d5:	mov    r8,QWORD PTR [rbx+0x10]
   1400045d9:	mov    rdx,rdi
   1400045dc:	mov    rcx,rbx
   1400045df:	call   0x140004854
   1400045e4:	jmp    0x140004600
   1400045e6:	test   rdi,rdi
   1400045e9:	jne    0x140004605
   1400045eb:	mov    QWORD PTR [rbx+0x10],rbp
   1400045ef:	cmp    rdx,0x8
   1400045f3:	jb     0x1400045fa
   1400045f5:	mov    rax,QWORD PTR [rbx]
   1400045f8:	jmp    0x1400045fd
   1400045fa:	mov    rax,rbx
   1400045fd:	mov    WORD PTR [rax],bp
   140004600:	test   rdi,rdi
   140004603:	je     0x14000463c
   140004605:	cmp    QWORD PTR [rbx+0x18],0x8
   14000460a:	jb     0x140004611
   14000460c:	mov    rcx,QWORD PTR [rbx]
   14000460f:	jmp    0x140004614
   140004611:	mov    rcx,rbx
   140004614:	test   rdi,rdi
   140004617:	je     0x140004625
   140004619:	lea    r8,[rdi+rdi*1]
   14000461d:	mov    rdx,rsi
   140004620:	call   0x140006070
   140004625:	cmp    QWORD PTR [rbx+0x18],0x8
   14000462a:	mov    QWORD PTR [rbx+0x10],rdi
   14000462e:	jb     0x140004635
   140004630:	mov    rax,QWORD PTR [rbx]
   140004633:	jmp    0x140004638
   140004635:	mov    rax,rbx
   140004638:	mov    WORD PTR [rax+rdi*2],bp
   14000463c:	mov    rbp,QWORD PTR [rsp+0x38]
   140004641:	mov    rsi,QWORD PTR [rsp+0x40]
   140004646:	mov    rax,rbx
   140004649:	mov    rbx,QWORD PTR [rsp+0x30]
   14000464e:	add    rsp,0x20
   140004652:	pop    rdi
   140004653:	ret    
   140004654:	lea    rcx,[rip+0x129ad]        # 0x140017008
   14000465b:	call   0x14000f244
   140004660:	int3   
   140004661:	int3   
   140004662:	int3   
   140004663:	int3   
   140004664:	mov    rax,rsp
   140004667:	mov    QWORD PTR [rax+0x8],rbx
   14000466b:	mov    QWORD PTR [rax+0x10],rbp
   14000466f:	mov    QWORD PTR [rax+0x18],rsi
   140004673:	mov    QWORD PTR [rax+0x20],rdi
   140004677:	push   r14
   140004679:	sub    rsp,0x20
   14000467d:	mov    rdi,QWORD PTR [rdx+0x10]
   140004681:	mov    rbp,r8
   140004684:	mov    r14,rdx
   140004687:	mov    rbx,rcx
   14000468a:	cmp    rdi,r8
   14000468d:	jb     0x14000477c
   140004693:	sub    rdi,r8
   140004696:	cmp    r9,rdi
   140004699:	cmovb  rdi,r9
   14000469d:	cmp    rcx,rdx
   1400046a0:	jne    0x1400046d3
   1400046a2:	lea    rax,[rdi+r8*1]
   1400046a6:	cmp    QWORD PTR [rcx+0x10],rax
   1400046aa:	jb     0x140004789
   1400046b0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400046b5:	mov    QWORD PTR [rcx+0x10],rax
   1400046b9:	jb     0x1400046be
   1400046bb:	mov    rcx,QWORD PTR [rcx]
   1400046be:	xor    esi,esi
   1400046c0:	xor    edx,edx
   1400046c2:	mov    WORD PTR [rcx+rax*2],si
   1400046c6:	mov    rcx,rbx
   1400046c9:	call   0x1400047a4
   1400046ce:	jmp    0x14000475e
   1400046d3:	movabs rax,0x7ffffffffffffffe
   1400046dd:	cmp    rdi,rax
   1400046e0:	ja     0x140004796
   1400046e6:	xor    esi,esi
   1400046e8:	cmp    QWORD PTR [rcx+0x18],rdi
   1400046ec:	jae    0x1400046fc
   1400046ee:	mov    r8,QWORD PTR [rcx+0x10]
   1400046f2:	mov    rdx,rdi
   1400046f5:	call   0x140004854
   1400046fa:	jmp    0x140004717
   1400046fc:	test   rdi,rdi
   1400046ff:	jne    0x14000471c
   140004701:	cmp    QWORD PTR [rcx+0x18],0x8
   140004706:	mov    QWORD PTR [rcx+0x10],rsi
   14000470a:	jb     0x140004711
   14000470c:	mov    rax,QWORD PTR [rcx]
   14000470f:	jmp    0x140004714
   140004711:	mov    rax,rcx
   140004714:	mov    WORD PTR [rax],si
   140004717:	test   rdi,rdi
   14000471a:	je     0x14000475e
   14000471c:	cmp    QWORD PTR [r14+0x18],0x8
   140004721:	jb     0x140004726
   140004723:	mov    r14,QWORD PTR [r14]
   140004726:	cmp    QWORD PTR [rbx+0x18],0x8
   14000472b:	jb     0x140004732
   14000472d:	mov    rcx,QWORD PTR [rbx]
   140004730:	jmp    0x140004735
   140004732:	mov    rcx,rbx
   140004735:	test   rdi,rdi
   140004738:	je     0x140004747
   14000473a:	lea    r8,[rdi+rdi*1]
   14000473e:	lea    rdx,[r14+rbp*2]
   140004742:	call   0x140006070
   140004747:	cmp    QWORD PTR [rbx+0x18],0x8
   14000474c:	mov    QWORD PTR [rbx+0x10],rdi
   140004750:	jb     0x140004757
   140004752:	mov    rax,QWORD PTR [rbx]
   140004755:	jmp    0x14000475a
   140004757:	mov    rax,rbx
   14000475a:	mov    WORD PTR [rax+rdi*2],si
   14000475e:	mov    rbp,QWORD PTR [rsp+0x38]
   140004763:	mov    rsi,QWORD PTR [rsp+0x40]
   140004768:	mov    rdi,QWORD PTR [rsp+0x48]
   14000476d:	mov    rax,rbx
   140004770:	mov    rbx,QWORD PTR [rsp+0x30]
   140004775:	add    rsp,0x20
   140004779:	pop    r14
   14000477b:	ret    
   14000477c:	lea    rcx,[rip+0x1286d]        # 0x140016ff0
   140004783:	call   0x14000f27c
   140004788:	int3   
   140004789:	lea    rcx,[rip+0x12860]        # 0x140016ff0
   140004790:	call   0x14000f27c
   140004795:	int3   
   140004796:	lea    rcx,[rip+0x1286b]        # 0x140017008
   14000479d:	call   0x14000f244
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400047a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400047ae:	push   rdi
   1400047af:	sub    rsp,0x20
   1400047b3:	mov    rdi,QWORD PTR [rcx+0x10]
   1400047b7:	mov    r9,r8
   1400047ba:	mov    rbx,rcx
   1400047bd:	cmp    rdi,rdx
   1400047c0:	jb     0x140004847
   1400047c6:	mov    rax,rdi
   1400047c9:	sub    rax,rdx
   1400047cc:	cmp    rax,r8
   1400047cf:	ja     0x1400047ec
   1400047d1:	cmp    QWORD PTR [rcx+0x18],0x8
   1400047d6:	mov    QWORD PTR [rcx+0x10],rdx
   1400047da:	jb     0x1400047e1
   1400047dc:	mov    rax,QWORD PTR [rcx]
   1400047df:	jmp    0x1400047e4
   1400047e1:	mov    rax,rcx
   1400047e4:	xor    esi,esi
   1400047e6:	mov    WORD PTR [rax+rdx*2],si
   1400047ea:	jmp    0x140004834
   1400047ec:	xor    esi,esi
   1400047ee:	test   r8,r8
   1400047f1:	je     0x140004834
   1400047f3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400047f8:	jb     0x1400047ff
   1400047fa:	mov    rax,QWORD PTR [rcx]
   1400047fd:	jmp    0x140004802
   1400047ff:	mov    rax,rcx
   140004802:	sub    rdi,r8
   140004805:	lea    rcx,[rax+rdx*2]
   140004809:	mov    r8,rdi
   14000480c:	sub    r8,rdx
   14000480f:	je     0x14000481d
   140004811:	lea    rdx,[rcx+r9*2]
   140004815:	add    r8,r8
   140004818:	call   0x140006070
   14000481d:	cmp    QWORD PTR [rbx+0x18],0x8
   140004822:	mov    QWORD PTR [rbx+0x10],rdi
   140004826:	jb     0x14000482d
   140004828:	mov    rax,QWORD PTR [rbx]
   14000482b:	jmp    0x140004830
   14000482d:	mov    rax,rbx
   140004830:	mov    WORD PTR [rax+rdi*2],si
   140004834:	mov    rsi,QWORD PTR [rsp+0x38]
   140004839:	mov    rax,rbx
   14000483c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004841:	add    rsp,0x20
   140004845:	pop    rdi
   140004846:	ret    
   140004847:	lea    rcx,[rip+0x127a2]        # 0x140016ff0
   14000484e:	call   0x14000f27c
   140004853:	int3   
   140004854:	mov    rax,rsp
   140004857:	mov    QWORD PTR [rax+0x18],r8
   14000485b:	mov    QWORD PTR [rax+0x10],rdx
   14000485f:	mov    QWORD PTR [rax+0x8],rcx
   140004863:	push   rbx
   140004864:	push   rsi
   140004865:	push   rdi
   140004866:	push   r14
   140004868:	push   r15
   14000486a:	sub    rsp,0x30
   14000486e:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140004876:	mov    r15,r8
   140004879:	mov    rbx,rcx
   14000487c:	mov    rsi,rdx
   14000487f:	or     rsi,0x7
   140004883:	movabs r9,0x7ffffffffffffffe
   14000488d:	cmp    rsi,r9
   140004890:	jbe    0x140004897
   140004892:	mov    rsi,rdx
   140004895:	jmp    0x1400048c8
   140004897:	mov    r8,QWORD PTR [rcx+0x18]
   14000489b:	mov    rcx,r8
   14000489e:	shr    rcx,1
   1400048a1:	movabs rax,0xaaaaaaaaaaaaaaab
   1400048ab:	mul    rsi
   1400048ae:	shr    rdx,1
   1400048b1:	cmp    rcx,rdx
   1400048b4:	jbe    0x1400048c8
   1400048b6:	mov    rax,r9
   1400048b9:	sub    rax,rcx
   1400048bc:	cmp    r8,rax
   1400048bf:	lea    rsi,[rcx+r8*1]
   1400048c3:	jbe    0x1400048c8
   1400048c5:	mov    rsi,r9
   1400048c8:	lea    rcx,[rsi+0x1]
   1400048cc:	xor    edi,edi
   1400048ce:	mov    r14d,edi
   1400048d1:	test   rcx,rcx
   1400048d4:	je     0x1400048fa
   1400048d6:	movabs rax,0x7fffffffffffffff
   1400048e0:	cmp    rcx,rax
   1400048e3:	ja     0x1400048f5
   1400048e5:	add    rcx,rcx
   1400048e8:	call   0x140006968
   1400048ed:	mov    r14,rax
   1400048f0:	test   rax,rax
   1400048f3:	jne    0x1400048fa
   1400048f5:	call   0x14000f200
   1400048fa:	mov    QWORD PTR [rsp+0x20],r14
   1400048ff:	jmp    0x140004917
   140004901:	xor    edi,edi
   140004903:	mov    rbx,QWORD PTR [rsp+0x60]
   140004908:	mov    r15,QWORD PTR [rsp+0x70]
   14000490d:	mov    rsi,QWORD PTR [rsp+0x68]
   140004912:	mov    r14,QWORD PTR [rsp+0x20]
   140004917:	test   r15,r15
   14000491a:	je     0x14000493c
   14000491c:	cmp    QWORD PTR [rbx+0x18],0x8
   140004921:	jb     0x140004928
   140004923:	mov    rdx,QWORD PTR [rbx]
   140004926:	jmp    0x14000492b
   140004928:	mov    rdx,rbx
   14000492b:	test   r15,r15
   14000492e:	je     0x14000493c
   140004930:	lea    r8,[r15+r15*1]
   140004934:	mov    rcx,r14
   140004937:	call   0x140006070
   14000493c:	cmp    QWORD PTR [rbx+0x18],0x8
   140004941:	jb     0x14000494b
   140004943:	mov    rcx,QWORD PTR [rbx]
   140004946:	call   0x140005fbc
   14000494b:	mov    QWORD PTR [rbx+0x18],0x7
   140004953:	mov    QWORD PTR [rbx+0x10],rdi
   140004957:	mov    WORD PTR [rbx],di
   14000495a:	mov    QWORD PTR [rsp+0x68],rbx
   14000495f:	mov    QWORD PTR [rsp+0x78],rbx
   140004964:	mov    QWORD PTR [rbx],r14
   140004967:	mov    QWORD PTR [rbx+0x18],rsi
   14000496b:	mov    QWORD PTR [rbx+0x10],r15
   14000496f:	cmp    rsi,0x8
   140004973:	jb     0x140004978
   140004975:	mov    rbx,QWORD PTR [rbx]
   140004978:	mov    WORD PTR [rbx+r15*2],di
   14000497d:	add    rsp,0x30
   140004981:	pop    r15
   140004983:	pop    r14
   140004985:	pop    rdi
   140004986:	pop    rsi
   140004987:	pop    rbx
   140004988:	ret    
   140004989:	int3   
   14000498a:	int3   
   14000498b:	int3   
   14000498c:	mov    r8d,DWORD PTR [rdx+0x4]
   140004990:	mov    eax,DWORD PTR [rdx]
   140004992:	lea    r9,[rdx+0xc]
   140004996:	mov    DWORD PTR [rcx+0x4],r8d
   14000499a:	mov    DWORD PTR [rcx],eax
   14000499c:	mov    eax,DWORD PTR [rdx+0x8]
   14000499f:	lea    r8,[rcx+0xc]
   1400049a3:	mov    edx,0x104
   1400049a8:	mov    DWORD PTR [rcx+0x8],eax
   1400049ab:	sub    r9,r8
   1400049ae:	xor    r10d,r10d
   1400049b1:	lea    rax,[rdx+0x7ffffefa]
   1400049b8:	test   rax,rax
   1400049bb:	je     0x1400049d4
   1400049bd:	movzx  eax,WORD PTR [r9+r8*1]
   1400049c2:	test   ax,ax
   1400049c5:	je     0x1400049d4
   1400049c7:	mov    WORD PTR [r8],ax
   1400049cb:	add    r8,0x2
   1400049cf:	dec    rdx
   1400049d2:	jne    0x1400049b1
   1400049d4:	test   rdx,rdx
   1400049d7:	jne    0x1400049dd
   1400049d9:	sub    r8,0x2
   1400049dd:	mov    WORD PTR [r8],r10w
   1400049e1:	mov    rax,rcx
   1400049e4:	ret    
   1400049e5:	int3   
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	mov    rax,rsp
   1400049eb:	mov    QWORD PTR [rax+0x8],rcx
   1400049ef:	push   rsi
   1400049f0:	push   rdi
   1400049f1:	push   r12
   1400049f3:	push   r14
   1400049f5:	push   r15
   1400049f7:	sub    rsp,0x30
   1400049fb:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140004a03:	mov    QWORD PTR [rax+0x10],rbx
   140004a07:	mov    QWORD PTR [rax+0x18],rbp
   140004a0b:	mov    r15,rdx
   140004a0e:	mov    r14,rcx
   140004a11:	mov    r8d,DWORD PTR [rdx+0x4]
   140004a15:	mov    eax,DWORD PTR [rdx]
   140004a17:	mov    DWORD PTR [rcx],eax
   140004a19:	mov    DWORD PTR [rcx+0x4],r8d
   140004a1d:	lea    r12,[rcx+0x8]
   140004a21:	xor    ebx,ebx
   140004a23:	mov    QWORD PTR [r12],rbx
   140004a27:	mov    QWORD PTR [r12+0x8],rbx
   140004a2c:	mov    QWORD PTR [r12+0x10],rbx
   140004a31:	lea    rdi,[rcx+0x20]
   140004a35:	mov    QWORD PTR [rdi],rbx
   140004a38:	mov    QWORD PTR [rdi+0x8],rbx
   140004a3c:	mov    QWORD PTR [rdi+0x10],rbx
   140004a40:	mov    rdx,QWORD PTR [rdx+0x28]
   140004a44:	sub    rdx,QWORD PTR [r15+0x20]
   140004a48:	sar    rdx,0x5
   140004a4c:	test   rdx,rdx
   140004a4f:	je     0x140004ad0
   140004a51:	mov    rcx,rdi
   140004a54:	call   0x140004cec
   140004a59:	mov    rdx,QWORD PTR [r15+0x28]
   140004a5d:	sub    rdx,QWORD PTR [r15+0x20]
   140004a61:	sar    rdx,0x5
   140004a65:	mov    rcx,r12
   140004a68:	call   0x140004b30
   140004a6d:	mov    rax,QWORD PTR [rdi+0x8]
   140004a71:	sub    rax,QWORD PTR [rdi]
   140004a74:	sar    rax,0x5
   140004a78:	test   rax,rax
   140004a7b:	je     0x140004ad0
   140004a7d:	mov    ebp,ebx
   140004a7f:	mov    rsi,rbp
   140004a82:	shl    rsi,0x5
   140004a86:	mov    rdx,QWORD PTR [r15+0x20]
   140004a8a:	add    rdx,rsi
   140004a8d:	mov    rcx,QWORD PTR [rdi]
   140004a90:	add    rcx,rsi
   140004a93:	cmp    rcx,rdx
   140004a96:	je     0x140004aa4
   140004a98:	or     r9,0xffffffffffffffff
   140004a9c:	xor    r8d,r8d
   140004a9f:	call   0x140004664
   140004aa4:	mov    rcx,QWORD PTR [rdi]
   140004aa7:	add    rcx,rsi
   140004aaa:	cmp    QWORD PTR [rcx+0x18],0x8
   140004aaf:	jb     0x140004ab4
   140004ab1:	mov    rcx,QWORD PTR [rcx]
   140004ab4:	mov    rax,QWORD PTR [r12]
   140004ab8:	mov    QWORD PTR [rax+rbp*8],rcx
   140004abc:	inc    ebx
   140004abe:	mov    ebp,ebx
   140004ac0:	mov    rax,QWORD PTR [rdi+0x8]
   140004ac4:	sub    rax,QWORD PTR [rdi]
   140004ac7:	sar    rax,0x5
   140004acb:	cmp    rbp,rax
   140004ace:	jb     0x140004a7f
   140004ad0:	mov    rax,r14
   140004ad3:	mov    rbx,QWORD PTR [rsp+0x68]
   140004ad8:	mov    rbp,QWORD PTR [rsp+0x70]
   140004add:	add    rsp,0x30
   140004ae1:	pop    r15
   140004ae3:	pop    r14
   140004ae5:	pop    r12
   140004ae7:	pop    rdi
   140004ae8:	pop    rsi
   140004ae9:	ret    
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	mov    QWORD PTR [rsp+0x8],rcx
   140004af1:	push   rbx
   140004af2:	sub    rsp,0x30
   140004af6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004aff:	mov    rbx,rcx
   140004b02:	add    rcx,0x20
   140004b06:	call   0x140004c74
   140004b0b:	nop
   140004b0c:	mov    rcx,QWORD PTR [rbx+0x8]
   140004b10:	test   rcx,rcx
   140004b13:	je     0x140004b29
   140004b15:	call   0x140005fbc
   140004b1a:	and    QWORD PTR [rbx+0x8],0x0
   140004b1f:	and    QWORD PTR [rbx+0x10],0x0
   140004b24:	and    QWORD PTR [rbx+0x18],0x0
   140004b29:	add    rsp,0x30
   140004b2d:	pop    rbx
   140004b2e:	ret    
   140004b2f:	int3   
   140004b30:	mov    rax,rsp
   140004b33:	mov    QWORD PTR [rax+0x8],rcx
   140004b37:	push   rdi
   140004b38:	sub    rsp,0x40
   140004b3c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004b44:	mov    QWORD PTR [rax+0x10],rbx
   140004b48:	mov    QWORD PTR [rax+0x18],rsi
   140004b4c:	mov    rbx,rdx
   140004b4f:	mov    rsi,rcx
   140004b52:	mov    rax,QWORD PTR [rcx+0x8]
   140004b56:	mov    r9,QWORD PTR [rcx]
   140004b59:	mov    r8,rax
   140004b5c:	sub    r8,r9
   140004b5f:	sar    r8,0x3
   140004b63:	cmp    r8,rdx
   140004b66:	jbe    0x140004ba8
   140004b68:	lea    rbx,[r9+rdx*8]
   140004b6c:	cmp    rbx,r9
   140004b6f:	jne    0x140004b7a
   140004b71:	mov    QWORD PTR [rcx+0x8],r9
   140004b75:	jmp    0x140004c63
   140004b7a:	cmp    rbx,rax
   140004b7d:	je     0x140004c63
   140004b83:	mov    rdi,rax
   140004b86:	sub    rdi,rax
   140004b89:	and    rdi,0xfffffffffffffff8
   140004b8d:	mov    r8,rdi
   140004b90:	mov    rdx,rax
   140004b93:	mov    rcx,rbx
   140004b96:	call   0x140006070
   140004b9b:	lea    rax,[rdi+rbx*1]
   140004b9f:	mov    QWORD PTR [rsi+0x8],rax
   140004ba3:	jmp    0x140004c63
   140004ba8:	jae    0x140004c63
   140004bae:	mov    r10,rdx
   140004bb1:	sub    r10,r8
   140004bb4:	mov    rdx,QWORD PTR [rcx+0x10]
   140004bb8:	mov    rcx,rdx
   140004bbb:	sub    rcx,rax
   140004bbe:	sar    rcx,0x3
   140004bc2:	cmp    rcx,r10
   140004bc5:	jae    0x140004c19
   140004bc7:	movabs rcx,0x1fffffffffffffff
   140004bd1:	mov    rax,rcx
   140004bd4:	sub    rax,r8
   140004bd7:	cmp    rax,r10
   140004bda:	jae    0x140004be9
   140004bdc:	lea    rcx,[rip+0x12605]        # 0x1400171e8
   140004be3:	call   0x14000f244
   140004be8:	int3   
   140004be9:	lea    r11,[r8+r10*1]
   140004bed:	sub    rdx,r9
   140004bf0:	sar    rdx,0x3
   140004bf4:	mov    rax,rdx
   140004bf7:	shr    rax,1
   140004bfa:	sub    rcx,rax
   140004bfd:	cmp    rcx,rdx
   140004c00:	jae    0x140004c06
   140004c02:	xor    edx,edx
   140004c04:	jmp    0x140004c09
   140004c06:	add    rdx,rax
   140004c09:	cmp    rdx,r11
   140004c0c:	cmovb  rdx,r11
   140004c10:	mov    rcx,rsi
   140004c13:	call   0x140004f54
   140004c18:	nop
   140004c19:	mov    rdx,QWORD PTR [rsi+0x8]
   140004c1d:	mov    rax,rdx
   140004c20:	sub    rax,QWORD PTR [rsi]
   140004c23:	sar    rax,0x3
   140004c27:	mov    rcx,rbx
   140004c2a:	sub    rcx,rax
   140004c2d:	mov    QWORD PTR [rsp+0x20],rcx
   140004c32:	mov    QWORD PTR [rsp+0x28],rdx
   140004c37:	test   rcx,rcx
   140004c3a:	je     0x140004c49
   140004c3c:	and    QWORD PTR [rdx],0x0
   140004c40:	dec    rcx
   140004c43:	add    rdx,0x8
   140004c47:	jmp    0x140004c2d
   140004c49:	mov    rcx,QWORD PTR [rsi+0x8]
   140004c4d:	mov    rax,rcx
   140004c50:	sub    rax,QWORD PTR [rsi]
   140004c53:	sar    rax,0x3
   140004c57:	sub    rbx,rax
   140004c5a:	lea    rax,[rcx+rbx*8]
   140004c5e:	jmp    0x140004b9f
   140004c63:	mov    rbx,QWORD PTR [rsp+0x58]
   140004c68:	mov    rsi,QWORD PTR [rsp+0x60]
   140004c6d:	add    rsp,0x40
   140004c71:	pop    rdi
   140004c72:	ret    
   140004c73:	int3   
   140004c74:	mov    QWORD PTR [rsp+0x8],rbx
   140004c79:	mov    QWORD PTR [rsp+0x10],rbp
   140004c7e:	mov    QWORD PTR [rsp+0x18],rsi
   140004c83:	push   rdi
   140004c84:	sub    rsp,0x20
   140004c88:	mov    rbx,QWORD PTR [rcx]
   140004c8b:	xor    ebp,ebp
   140004c8d:	mov    rdi,rcx
   140004c90:	test   rbx,rbx
   140004c93:	je     0x140004cd5
   140004c95:	mov    rsi,QWORD PTR [rcx+0x8]
   140004c99:	jmp    0x140004cbd
   140004c9b:	cmp    QWORD PTR [rbx+0x18],0x8
   140004ca0:	jb     0x140004caa
   140004ca2:	mov    rcx,QWORD PTR [rbx]
   140004ca5:	call   0x140005fbc
   140004caa:	mov    QWORD PTR [rbx+0x18],0x7
   140004cb2:	mov    QWORD PTR [rbx+0x10],rbp
   140004cb6:	mov    WORD PTR [rbx],bp
   140004cb9:	add    rbx,0x20
   140004cbd:	cmp    rbx,rsi
   140004cc0:	jne    0x140004c9b
   140004cc2:	mov    rcx,QWORD PTR [rdi]
   140004cc5:	call   0x140005fbc
   140004cca:	mov    QWORD PTR [rdi],rbp
   140004ccd:	mov    QWORD PTR [rdi+0x8],rbp
   140004cd1:	mov    QWORD PTR [rdi+0x10],rbp
   140004cd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004cda:	mov    rbp,QWORD PTR [rsp+0x38]
   140004cdf:	mov    rsi,QWORD PTR [rsp+0x40]
   140004ce4:	add    rsp,0x20
   140004ce8:	pop    rdi
   140004ce9:	ret    
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	mov    rax,rsp
   140004cef:	mov    QWORD PTR [rax+0x8],rcx
   140004cf3:	push   rdi
   140004cf4:	sub    rsp,0x40
   140004cf8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004d00:	mov    QWORD PTR [rax+0x10],rbx
   140004d04:	mov    rbx,rdx
   140004d07:	mov    rdi,rcx
   140004d0a:	mov    rcx,QWORD PTR [rcx+0x8]
   140004d0e:	sub    rcx,QWORD PTR [rdi]
   140004d11:	sar    rcx,0x5
   140004d15:	cmp    rcx,rdx
   140004d18:	jbe    0x140004d39
   140004d1a:	shl    rbx,0x5
   140004d1e:	add    rbx,QWORD PTR [rdi]
   140004d21:	mov    r9,QWORD PTR [rdi+0x8]
   140004d25:	mov    r8,rbx
   140004d28:	lea    rdx,[rax+0x8]
   140004d2c:	mov    rcx,rdi
   140004d2f:	call   0x140004de8
   140004d34:	jmp    0x140004ddb
   140004d39:	jae    0x140004ddb
   140004d3f:	mov    r8,rdx
   140004d42:	sub    r8,rcx
   140004d45:	mov    rdx,QWORD PTR [rdi+0x10]
   140004d49:	mov    rax,rdx
   140004d4c:	sub    rax,QWORD PTR [rdi+0x8]
   140004d50:	sar    rax,0x5
   140004d54:	cmp    rax,r8
   140004d57:	jae    0x140004dab
   140004d59:	movabs r9,0x7ffffffffffffff
   140004d63:	mov    rax,r9
   140004d66:	sub    rax,rcx
   140004d69:	cmp    rax,r8
   140004d6c:	jae    0x140004d7b
   140004d6e:	lea    rcx,[rip+0x12473]        # 0x1400171e8
   140004d75:	call   0x14000f244
   140004d7a:	int3   
   140004d7b:	lea    r10,[rcx+r8*1]
   140004d7f:	sub    rdx,QWORD PTR [rdi]
   140004d82:	sar    rdx,0x5
   140004d86:	mov    rax,rdx
   140004d89:	shr    rax,1
   140004d8c:	sub    r9,rax
   140004d8f:	cmp    r9,rdx
   140004d92:	jae    0x140004d98
   140004d94:	xor    edx,edx
   140004d96:	jmp    0x140004d9b
   140004d98:	add    rdx,rax
   140004d9b:	cmp    rdx,r10
   140004d9e:	cmovb  rdx,r10
   140004da2:	mov    rcx,rdi
   140004da5:	call   0x14000500c
   140004daa:	nop
   140004dab:	mov    rcx,QWORD PTR [rdi+0x8]
   140004daf:	mov    rax,rcx
   140004db2:	sub    rax,QWORD PTR [rdi]
   140004db5:	sar    rax,0x5
   140004db9:	mov    rdx,rbx
   140004dbc:	sub    rdx,rax
   140004dbf:	call   0x1400050f8
   140004dc4:	nop
   140004dc5:	mov    rax,QWORD PTR [rdi+0x8]
   140004dc9:	sub    rax,QWORD PTR [rdi]
   140004dcc:	sar    rax,0x5
   140004dd0:	sub    rbx,rax
   140004dd3:	shl    rbx,0x5
   140004dd7:	add    QWORD PTR [rdi+0x8],rbx
   140004ddb:	mov    rbx,QWORD PTR [rsp+0x58]
   140004de0:	add    rsp,0x40
   140004de4:	pop    rdi
   140004de5:	ret    
   140004de6:	int3   
   140004de7:	int3   
   140004de8:	mov    QWORD PTR [rsp+0x18],r8
   140004ded:	push   rbx
   140004dee:	push   rbp
   140004def:	push   rsi
   140004df0:	push   rdi
   140004df1:	push   r12
   140004df3:	push   r14
   140004df5:	push   r15
   140004df7:	sub    rsp,0x30
   140004dfb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004e04:	mov    rbx,r9
   140004e07:	mov    r12,rdx
   140004e0a:	mov    rsi,rcx
   140004e0d:	mov    rdi,QWORD PTR [rcx]
   140004e10:	cmp    r8,rdi
   140004e13:	jne    0x140004e60
   140004e15:	mov    r14,QWORD PTR [rcx+0x8]
   140004e19:	cmp    rbx,r14
   140004e1c:	jne    0x140004e60
   140004e1e:	cmp    rdi,r14
   140004e21:	je     0x140004e54
   140004e23:	xor    ebp,ebp
   140004e25:	lea    r15d,[rbp+0x7]
   140004e29:	cmp    QWORD PTR [rdi+0x18],0x8
   140004e2e:	jb     0x140004e38
   140004e30:	mov    rcx,QWORD PTR [rdi]
   140004e33:	call   0x140005fbc
   140004e38:	mov    QWORD PTR [rdi+0x18],r15
   140004e3c:	mov    QWORD PTR [rdi+0x10],rbp
   140004e40:	mov    WORD PTR [rdi],bp
   140004e43:	add    rdi,0x20
   140004e47:	cmp    rdi,r14
   140004e4a:	jne    0x140004e29
   140004e4c:	mov    r8,QWORD PTR [rsp+0x80]
   140004e54:	mov    rax,QWORD PTR [rsi]
   140004e57:	mov    QWORD PTR [rsi+0x8],rax
   140004e5b:	jmp    0x140004f3c
   140004e60:	cmp    r8,rbx
   140004e63:	je     0x140004f3c
   140004e69:	mov    r14,QWORD PTR [rcx+0x8]
   140004e6d:	mov    rdi,r8
   140004e70:	xor    ebp,ebp
   140004e72:	lea    r15d,[rbp+0x7]
   140004e76:	cmp    rbx,r14
   140004e79:	je     0x140004f01
   140004e7f:	cmp    rdi,rbx
   140004e82:	je     0x140004eec
   140004e84:	cmp    QWORD PTR [rdi+0x18],0x8
   140004e89:	jb     0x140004e93
   140004e8b:	mov    rcx,QWORD PTR [rdi]
   140004e8e:	call   0x140005fbc
   140004e93:	mov    QWORD PTR [rdi+0x18],r15
   140004e97:	mov    QWORD PTR [rdi+0x10],rbp
   140004e9b:	mov    WORD PTR [rdi],bp
   140004e9e:	cmp    QWORD PTR [rbx+0x18],0x8
   140004ea3:	jae    0x140004ebe
   140004ea5:	mov    r8,QWORD PTR [rbx+0x10]
   140004ea9:	inc    r8
   140004eac:	je     0x140004ed1
   140004eae:	add    r8,r8
   140004eb1:	mov    rdx,rbx
   140004eb4:	mov    rcx,rdi
   140004eb7:	call   0x140006070
   140004ebc:	jmp    0x140004ed1
   140004ebe:	mov    QWORD PTR [rsp+0x70],rdi
   140004ec3:	mov    QWORD PTR [rsp+0x78],rdi
   140004ec8:	mov    rax,QWORD PTR [rbx]
   140004ecb:	mov    QWORD PTR [rdi],rax
   140004ece:	mov    QWORD PTR [rbx],rbp
   140004ed1:	mov    rax,QWORD PTR [rbx+0x10]
   140004ed5:	mov    QWORD PTR [rdi+0x10],rax
   140004ed9:	mov    rax,QWORD PTR [rbx+0x18]
   140004edd:	mov    QWORD PTR [rdi+0x18],rax
   140004ee1:	mov    QWORD PTR [rbx+0x18],r15
   140004ee5:	mov    QWORD PTR [rbx+0x10],rbp
   140004ee9:	mov    WORD PTR [rbx],bp
   140004eec:	add    rdi,0x20
   140004ef0:	add    rbx,0x20
   140004ef4:	cmp    rbx,r14
   140004ef7:	jne    0x140004e7f
   140004ef9:	mov    r8,QWORD PTR [rsp+0x80]
   140004f01:	mov    r14,QWORD PTR [rsi+0x8]
   140004f05:	mov    rbx,rdi
   140004f08:	cmp    rdi,r14
   140004f0b:	je     0x140004f38
   140004f0d:	cmp    QWORD PTR [rbx+0x18],0x8
   140004f12:	jb     0x140004f1c
   140004f14:	mov    rcx,QWORD PTR [rbx]
   140004f17:	call   0x140005fbc
   140004f1c:	mov    QWORD PTR [rbx+0x18],r15
   140004f20:	mov    QWORD PTR [rbx+0x10],rbp
   140004f24:	mov    WORD PTR [rbx],bp
   140004f27:	add    rbx,0x20
   140004f2b:	cmp    rbx,r14
   140004f2e:	jne    0x140004f0d
   140004f30:	mov    r8,QWORD PTR [rsp+0x80]
   140004f38:	mov    QWORD PTR [rsi+0x8],rdi
   140004f3c:	mov    QWORD PTR [r12],r8
   140004f40:	mov    rax,r12
   140004f43:	add    rsp,0x30
   140004f47:	pop    r15
   140004f49:	pop    r14
   140004f4b:	pop    r12
   140004f4d:	pop    rdi
   140004f4e:	pop    rsi
   140004f4f:	pop    rbp
   140004f50:	pop    rbx
   140004f51:	ret    
   140004f52:	int3   
   140004f53:	int3   
   140004f54:	mov    rax,rsp
   140004f57:	push   r14
   140004f59:	sub    rsp,0x30
   140004f5d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004f65:	mov    QWORD PTR [rax+0x8],rbx
   140004f69:	mov    QWORD PTR [rax+0x18],rsi
   140004f6d:	mov    QWORD PTR [rax+0x20],rdi
   140004f71:	mov    rsi,rdx
   140004f74:	mov    rdi,rcx
   140004f77:	xor    ebx,ebx
   140004f79:	mov    QWORD PTR [rsp+0x48],rbx
   140004f7e:	test   rdx,rdx
   140004f81:	je     0x140004fb1
   140004f83:	movabs rax,0x1fffffffffffffff
   140004f8d:	cmp    rdx,rax
   140004f90:	ja     0x140004fab
   140004f92:	mov    rcx,rdx
   140004f95:	shl    rcx,0x3
   140004f99:	call   0x140006968
   140004f9e:	mov    rbx,rax
   140004fa1:	mov    QWORD PTR [rsp+0x48],rax
   140004fa6:	test   rax,rax
   140004fa9:	jne    0x140004fb1
   140004fab:	call   0x14000f200
   140004fb0:	nop
   140004fb1:	mov    r8,QWORD PTR [rdi+0x8]
   140004fb5:	sub    r8,QWORD PTR [rdi]
   140004fb8:	and    r8,0xfffffffffffffff8
   140004fbc:	mov    rdx,QWORD PTR [rdi]
   140004fbf:	mov    rcx,rbx
   140004fc2:	call   0x140006070
   140004fc7:	nop
   140004fc8:	mov    rcx,QWORD PTR [rdi]
   140004fcb:	mov    r14,QWORD PTR [rdi+0x8]
   140004fcf:	sub    r14,rcx
   140004fd2:	sar    r14,0x3
   140004fd6:	test   rcx,rcx
   140004fd9:	je     0x140004fe0
   140004fdb:	call   0x140005fbc
   140004fe0:	lea    rax,[rbx+rsi*8]
   140004fe4:	mov    QWORD PTR [rdi+0x10],rax
   140004fe8:	lea    rax,[rbx+r14*8]
   140004fec:	mov    QWORD PTR [rdi+0x8],rax
   140004ff0:	mov    QWORD PTR [rdi],rbx
   140004ff3:	mov    rbx,QWORD PTR [rsp+0x40]
   140004ff8:	mov    rsi,QWORD PTR [rsp+0x50]
   140004ffd:	mov    rdi,QWORD PTR [rsp+0x58]
   140005002:	add    rsp,0x30
   140005006:	pop    r14
   140005008:	ret    
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	mov    rax,rsp
   14000500f:	push   rdi
   140005010:	push   r12
   140005012:	push   r13
   140005014:	push   r14
   140005016:	push   r15
   140005018:	sub    rsp,0x40
   14000501c:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140005024:	mov    QWORD PTR [rax+0x8],rbx
   140005028:	mov    QWORD PTR [rax+0x18],rsi
   14000502c:	mov    rdi,rdx
   14000502f:	mov    r15,rcx
   140005032:	xor    r13d,r13d
   140005035:	mov    esi,r13d
   140005038:	mov    QWORD PTR [rsp+0x78],r13
   14000503d:	test   rdx,rdx
   140005040:	je     0x140005070
   140005042:	movabs rax,0x7ffffffffffffff
   14000504c:	cmp    rdx,rax
   14000504f:	ja     0x14000506a
   140005051:	mov    rcx,rdx
   140005054:	shl    rcx,0x5
   140005058:	call   0x140006968
   14000505d:	mov    rsi,rax
   140005060:	mov    QWORD PTR [rsp+0x78],rax
   140005065:	test   rax,rax
   140005068:	jne    0x140005070
   14000506a:	call   0x14000f200
   14000506f:	nop
   140005070:	mov    r8,rsi
   140005073:	mov    rdx,QWORD PTR [r15+0x8]
   140005077:	mov    rcx,QWORD PTR [r15]
   14000507a:	call   0x14000516c
   14000507f:	nop
   140005080:	mov    r12,QWORD PTR [r15+0x8]
   140005084:	mov    rbx,QWORD PTR [r15]
   140005087:	mov    r14,r12
   14000508a:	sub    r14,rbx
   14000508d:	test   rbx,rbx
   140005090:	je     0x1400050c4
   140005092:	jmp    0x1400050b7
   140005094:	cmp    QWORD PTR [rbx+0x18],0x8
   140005099:	jb     0x1400050a3
   14000509b:	mov    rcx,QWORD PTR [rbx]
   14000509e:	call   0x140005fbc
   1400050a3:	mov    QWORD PTR [rbx+0x18],0x7
   1400050ab:	mov    QWORD PTR [rbx+0x10],r13
   1400050af:	mov    WORD PTR [rbx],r13w
   1400050b3:	add    rbx,0x20
   1400050b7:	cmp    rbx,r12
   1400050ba:	jne    0x140005094
   1400050bc:	mov    rcx,QWORD PTR [r15]
   1400050bf:	call   0x140005fbc
   1400050c4:	shl    rdi,0x5
   1400050c8:	add    rdi,rsi
   1400050cb:	mov    QWORD PTR [r15+0x10],rdi
   1400050cf:	and    r14,0xffffffffffffffe0
   1400050d3:	add    r14,rsi
   1400050d6:	mov    QWORD PTR [r15+0x8],r14
   1400050da:	mov    QWORD PTR [r15],rsi
   1400050dd:	lea    r11,[rsp+0x40]
   1400050e2:	mov    rbx,QWORD PTR [r11+0x30]
   1400050e6:	mov    rsi,QWORD PTR [r11+0x40]
   1400050ea:	mov    rsp,r11
   1400050ed:	pop    r15
   1400050ef:	pop    r14
   1400050f1:	pop    r13
   1400050f3:	pop    r12
   1400050f5:	pop    rdi
   1400050f6:	ret    
   1400050f7:	int3   
   1400050f8:	mov    rax,rsp
   1400050fb:	mov    QWORD PTR [rax+0x20],r9
   1400050ff:	mov    QWORD PTR [rax+0x18],r8
   140005103:	mov    QWORD PTR [rax+0x8],rcx
   140005107:	sub    rsp,0x38
   14000510b:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140005113:	mov    QWORD PTR [rsp+0x58],rcx
   140005118:	xor    r8d,r8d
   14000511b:	test   rdx,rdx
   14000511e:	je     0x140005164
   140005120:	mov    QWORD PTR [rsp+0x50],rcx
   140005125:	test   rcx,rcx
   140005128:	je     0x140005151
   14000512a:	mov    QWORD PTR [rcx+0x10],r8
   14000512e:	mov    QWORD PTR [rcx+0x18],r8
   140005132:	mov    QWORD PTR [rcx+0x18],0x7
   14000513a:	mov    QWORD PTR [rcx+0x10],r8
   14000513e:	cmp    QWORD PTR [rcx+0x18],0x8
   140005143:	jb     0x14000514a
   140005145:	mov    rax,QWORD PTR [rcx]
   140005148:	jmp    0x14000514d
   14000514a:	mov    rax,rcx
   14000514d:	mov    WORD PTR [rax],r8w
   140005151:	dec    rdx
   140005154:	mov    QWORD PTR [rsp+0x48],rdx
   140005159:	add    rcx,0x20
   14000515d:	mov    QWORD PTR [rsp+0x40],rcx
   140005162:	jmp    0x14000511b
   140005164:	add    rsp,0x38
   140005168:	ret    
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	mov    QWORD PTR [rsp+0x20],r9
   140005171:	mov    QWORD PTR [rsp+0x18],r8
   140005176:	push   rbx
   140005177:	push   rsi
   140005178:	push   rdi
   140005179:	sub    rsp,0x30
   14000517d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005186:	mov    rbx,r8
   140005189:	mov    rsi,rdx
   14000518c:	mov    rdi,rcx
   14000518f:	mov    QWORD PTR [rsp+0x68],rbx
   140005194:	cmp    rdi,rsi
   140005197:	je     0x1400051b8
   140005199:	mov    r8,rdi
   14000519c:	mov    rdx,rbx
   14000519f:	call   0x1400051c4
   1400051a4:	add    rbx,0x20
   1400051a8:	mov    QWORD PTR [rsp+0x60],rbx
   1400051ad:	add    rdi,0x20
   1400051b1:	mov    QWORD PTR [rsp+0x50],rdi
   1400051b6:	jmp    0x140005194
   1400051b8:	mov    rax,rbx
   1400051bb:	add    rsp,0x30
   1400051bf:	pop    rdi
   1400051c0:	pop    rsi
   1400051c1:	pop    rbx
   1400051c2:	ret    
   1400051c3:	int3   
   1400051c4:	mov    rax,rsp
   1400051c7:	mov    QWORD PTR [rax+0x10],rdx
   1400051cb:	mov    QWORD PTR [rax+0x8],rcx
   1400051cf:	push   rbx
   1400051d0:	push   rsi
   1400051d1:	push   rdi
   1400051d2:	sub    rsp,0x30
   1400051d6:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400051de:	mov    rdi,r8
   1400051e1:	mov    rbx,rdx
   1400051e4:	mov    QWORD PTR [rax+0x8],rdx
   1400051e8:	xor    esi,esi
   1400051ea:	test   rdx,rdx
   1400051ed:	je     0x140005250
   1400051ef:	mov    QWORD PTR [rdx+0x18],0x7
   1400051f7:	mov    QWORD PTR [rdx+0x10],rsi
   1400051fb:	mov    WORD PTR [rdx],si
   1400051fe:	cmp    QWORD PTR [r8+0x18],0x8
   140005203:	jae    0x14000521e
   140005205:	mov    r8,QWORD PTR [r8+0x10]
   140005209:	inc    r8
   14000520c:	je     0x140005231
   14000520e:	add    r8,r8
   140005211:	mov    rdx,rdi
   140005214:	mov    rcx,rbx
   140005217:	call   0x140006070
   14000521c:	jmp    0x140005231
   14000521e:	mov    QWORD PTR [rsp+0x68],rdx
   140005223:	mov    QWORD PTR [rsp+0x28],rdx
   140005228:	mov    rax,QWORD PTR [r8]
   14000522b:	mov    QWORD PTR [rdx],rax
   14000522e:	mov    QWORD PTR [r8],rsi
   140005231:	mov    rax,QWORD PTR [rdi+0x10]
   140005235:	mov    QWORD PTR [rbx+0x10],rax
   140005239:	mov    rax,QWORD PTR [rdi+0x18]
   14000523d:	mov    QWORD PTR [rbx+0x18],rax
   140005241:	mov    QWORD PTR [rdi+0x18],0x7
   140005249:	mov    QWORD PTR [rdi+0x10],rsi
   14000524d:	mov    WORD PTR [rdi],si
   140005250:	add    rsp,0x30
   140005254:	pop    rdi
   140005255:	pop    rsi
   140005256:	pop    rbx
   140005257:	ret    
   140005258:	sub    rsp,0x38
   14000525c:	mov    r9d,r8d
   14000525f:	mov    BYTE PTR [rsp+0x20],0x1
   140005264:	call   0x140005288
   140005269:	add    rsp,0x38
   14000526d:	ret    
   14000526e:	int3   
   14000526f:	int3   
   140005270:	sub    rsp,0x38
   140005274:	xor    r9d,r9d
   140005277:	mov    BYTE PTR [rsp+0x20],0x0
   14000527c:	call   0x140005288
   140005281:	add    rsp,0x38
   140005285:	ret    
   140005286:	int3   
   140005287:	int3   
   140005288:	mov    QWORD PTR [rsp+0x10],rbx
   14000528d:	mov    QWORD PTR [rsp+0x18],rsi
   140005292:	push   rbp
   140005293:	push   rdi
   140005294:	push   r14
   140005296:	mov    rbp,rsp
   140005299:	sub    rsp,0x80
   1400052a0:	mov    rsi,rcx
   1400052a3:	mov    rcx,QWORD PTR [rcx+0x8]
   1400052a7:	mov    r14d,r9d
   1400052aa:	mov    rdi,rdx
   1400052ad:	test   rcx,rcx
   1400052b0:	jne    0x1400052ba
   1400052b2:	lea    eax,[rcx+0x6]
   1400052b5:	jmp    0x140005392
   1400052ba:	test   rdx,rdx
   1400052bd:	jne    0x1400052c7
   1400052bf:	lea    eax,[rdx+0x57]
   1400052c2:	jmp    0x140005392
   1400052c7:	and    QWORD PTR [rbp-0x40],0x0
   1400052cc:	xor    r9d,r9d
   1400052cf:	lea    rax,[rbp-0x40]
   1400052d3:	mov    QWORD PTR [rsp+0x38],rax
   1400052d8:	and    QWORD PTR [rsp+0x30],0x0
   1400052de:	lea    rax,[rbp-0x38]
   1400052e2:	mov    QWORD PTR [rsp+0x28],rax
   1400052e7:	and    QWORD PTR [rsp+0x20],0x0
   1400052ed:	lea    edx,[r9+0x6]
   1400052f1:	lea    r8d,[r9+0x4]
   1400052f5:	call   QWORD PTR [rip+0xddad]        # 0x1400130a8
   1400052fb:	mov    ebx,eax
   1400052fd:	test   eax,eax
   1400052ff:	jne    0x140005390
   140005305:	mov    dl,BYTE PTR [rbp+0x40]
   140005308:	mov    r8,QWORD PTR [rbp-0x38]
   14000530c:	lea    r9,[rbp+0x20]
   140005310:	mov    al,dl
   140005312:	mov    QWORD PTR [rbp-0x8],rdi
   140005316:	neg    al
   140005318:	sbb    ecx,ecx
   14000531a:	and    ecx,r14d
   14000531d:	neg    dl
   14000531f:	lea    rdx,[rbp-0x30]
   140005323:	sbb    eax,eax
   140005325:	and    DWORD PTR [rbp-0x28],ebx
   140005328:	and    QWORD PTR [rbp-0x20],0x0
   14000532d:	and    DWORD PTR [rbp-0x18],ebx
   140005330:	and    DWORD PTR [rbp-0x14],ebx
   140005333:	and    eax,0xfffffffd
   140005336:	mov    DWORD PTR [rbp-0x30],ecx
   140005339:	lea    ecx,[rbx+0x1]
   14000533c:	add    eax,0x4
   14000533f:	mov    DWORD PTR [rbp-0x2c],eax
   140005342:	mov    DWORD PTR [rbp-0x10],ecx
   140005345:	call   QWORD PTR [rip+0xdd7d]        # 0x1400130c8
   14000534b:	mov    ebx,eax
   14000534d:	test   eax,eax
   14000534f:	jne    0x140005386
   140005351:	mov    rax,QWORD PTR [rbp+0x20]
   140005355:	and    QWORD PTR [rsp+0x30],0x0
   14000535b:	mov    rcx,QWORD PTR [rsi+0x8]
   14000535f:	mov    QWORD PTR [rsp+0x28],rax
   140005364:	and    QWORD PTR [rsp+0x20],0x0
   14000536a:	lea    edx,[rbx+0x6]
   14000536d:	lea    r8d,[rbx+0x4]
   140005371:	xor    r9d,r9d
   140005374:	call   QWORD PTR [rip+0xdd26]        # 0x1400130a0
   14000537a:	mov    rcx,QWORD PTR [rbp+0x20]
   14000537e:	mov    ebx,eax
   140005380:	call   QWORD PTR [rip+0xe052]        # 0x1400133d8
   140005386:	mov    rcx,QWORD PTR [rbp-0x40]
   14000538a:	call   QWORD PTR [rip+0xe048]        # 0x1400133d8
   140005390:	mov    eax,ebx
   140005392:	lea    r11,[rsp+0x80]
   14000539a:	mov    rbx,QWORD PTR [r11+0x28]
   14000539e:	mov    rsi,QWORD PTR [r11+0x30]
   1400053a2:	mov    rsp,r11
   1400053a5:	pop    r14
   1400053a7:	pop    rdi
   1400053a8:	pop    rbp
   1400053a9:	ret    
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400053b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400053b6:	push   rdi
   1400053b7:	sub    rsp,0x20
   1400053bb:	mov    rdx,QWORD PTR [rcx+0x18]
   1400053bf:	mov    rbx,rcx
   1400053c2:	cmp    rdx,0x8
   1400053c6:	jb     0x1400053cd
   1400053c8:	mov    rax,QWORD PTR [rcx]
   1400053cb:	jmp    0x1400053d0
   1400053cd:	mov    rax,rcx
   1400053d0:	lea    r8,[rip+0x121a1]        # 0x140017578
   1400053d7:	cmp    r8,rax
   1400053da:	jb     0x14000541f
   1400053dc:	cmp    rdx,0x8
   1400053e0:	jb     0x1400053e5
   1400053e2:	mov    rcx,QWORD PTR [rcx]
   1400053e5:	mov    rax,QWORD PTR [rbx+0x10]
   1400053e9:	lea    rcx,[rcx+rax*2]
   1400053ed:	cmp    rcx,r8
   1400053f0:	jbe    0x14000541f
   1400053f2:	cmp    rdx,0x8
   1400053f6:	jb     0x1400053fd
   1400053f8:	mov    rax,QWORD PTR [rbx]
   1400053fb:	jmp    0x140005400
   1400053fd:	mov    rax,rbx
   140005400:	sub    r8,rax
   140005403:	mov    r9d,0xb
   140005409:	mov    rdx,rbx
   14000540c:	sar    r8,1
   14000540f:	mov    rcx,rbx
   140005412:	call   0x140005604
   140005417:	mov    rbx,rax
   14000541a:	jmp    0x1400054d5
   14000541f:	mov    r8,QWORD PTR [rbx+0x10]
   140005423:	or     rax,0xffffffffffffffff
   140005427:	sub    rax,r8
   14000542a:	cmp    rax,0xb
   14000542e:	jbe    0x1400054e8
   140005434:	lea    rdi,[r8+0xb]
   140005438:	movabs rax,0x7ffffffffffffffe
   140005442:	cmp    rdi,rax
   140005445:	ja     0x1400054f5
   14000544b:	xor    esi,esi
   14000544d:	cmp    rdx,rdi
   140005450:	jae    0x14000545f
   140005452:	mov    rdx,rdi
   140005455:	mov    rcx,rbx
   140005458:	call   0x140004854
   14000545d:	jmp    0x140005479
   14000545f:	test   rdi,rdi
   140005462:	jne    0x14000547e
   140005464:	mov    QWORD PTR [rbx+0x10],rsi
   140005468:	cmp    rdx,0x8
   14000546c:	jb     0x140005473
   14000546e:	mov    rax,QWORD PTR [rbx]
   140005471:	jmp    0x140005476
   140005473:	mov    rax,rbx
   140005476:	mov    WORD PTR [rax],si
   140005479:	test   rdi,rdi
   14000547c:	je     0x1400054d5
   14000547e:	cmp    QWORD PTR [rbx+0x18],0x8
   140005483:	jb     0x14000548a
   140005485:	mov    rdx,QWORD PTR [rbx]
   140005488:	jmp    0x14000548d
   14000548a:	mov    rdx,rbx
   14000548d:	mov    rax,QWORD PTR [rip+0x120e4]        # 0x140017578
   140005494:	mov    rcx,QWORD PTR [rbx+0x10]
   140005498:	mov    QWORD PTR [rdx+rcx*2],rax
   14000549c:	mov    rax,QWORD PTR [rip+0x120dd]        # 0x140017580
   1400054a3:	mov    QWORD PTR [rdx+rcx*2+0x8],rax
   1400054a8:	mov    eax,DWORD PTR [rip+0x120da]        # 0x140017588
   1400054ae:	mov    DWORD PTR [rdx+rcx*2+0x10],eax
   1400054b2:	movzx  eax,WORD PTR [rip+0x120d3]        # 0x14001758c
   1400054b9:	mov    WORD PTR [rdx+rcx*2+0x14],ax
   1400054be:	cmp    QWORD PTR [rbx+0x18],0x8
   1400054c3:	mov    QWORD PTR [rbx+0x10],rdi
   1400054c7:	jb     0x1400054ce
   1400054c9:	mov    rax,QWORD PTR [rbx]
   1400054cc:	jmp    0x1400054d1
   1400054ce:	mov    rax,rbx
   1400054d1:	mov    WORD PTR [rax+rdi*2],si
   1400054d5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400054da:	mov    rax,rbx
   1400054dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054e2:	add    rsp,0x20
   1400054e6:	pop    rdi
   1400054e7:	ret    
   1400054e8:	lea    rcx,[rip+0x11b19]        # 0x140017008
   1400054ef:	call   0x14000f244
   1400054f4:	int3   
   1400054f5:	lea    rcx,[rip+0x11b0c]        # 0x140017008
   1400054fc:	call   0x14000f244
   140005501:	int3   
   140005502:	int3   
   140005503:	int3   
   140005504:	mov    rax,rsp
   140005507:	mov    QWORD PTR [rax+0x8],rcx
   14000550b:	push   rdi
   14000550c:	sub    rsp,0x30
   140005510:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140005518:	mov    QWORD PTR [rax+0x10],rbx
   14000551c:	mov    QWORD PTR [rax+0x18],rsi
   140005520:	mov    rbx,rdx
   140005523:	mov    rsi,rcx
   140005526:	mov    rax,QWORD PTR [rcx+0x8]
   14000552a:	mov    r8,QWORD PTR [rcx]
   14000552d:	mov    r9,rax
   140005530:	sub    r9,r8
   140005533:	cmp    r9,rdx
   140005536:	jbe    0x140005573
   140005538:	add    rbx,r8
   14000553b:	cmp    rbx,r8
   14000553e:	jne    0x140005549
   140005540:	mov    QWORD PTR [rcx+0x8],r8
   140005544:	jmp    0x1400055f3
   140005549:	cmp    rbx,rax
   14000554c:	je     0x1400055f3
   140005552:	mov    rdi,rax
   140005555:	sub    rdi,rax
   140005558:	mov    r8,rdi
   14000555b:	mov    rdx,rax
   14000555e:	mov    rcx,rbx
   140005561:	call   0x140006070
   140005566:	lea    rax,[rdi+rbx*1]
   14000556a:	mov    QWORD PTR [rsi+0x8],rax
   14000556e:	jmp    0x1400055f3
   140005573:	jae    0x1400055f3
   140005575:	mov    r10,r8
   140005578:	sub    r10,rax
   14000557b:	lea    r11,[r10+rdx*1]
   14000557f:	mov    rdx,QWORD PTR [rcx+0x10]
   140005583:	mov    rcx,rdx
   140005586:	sub    rcx,rax
   140005589:	cmp    rcx,r11
   14000558c:	jae    0x1400055d4
   14000558e:	lea    rax,[r10-0x1]
   140005592:	cmp    rax,r11
   140005595:	jae    0x1400055a4
   140005597:	lea    rcx,[rip+0x11c4a]        # 0x1400171e8
   14000559e:	call   0x14000f244
   1400055a3:	int3   
   1400055a4:	lea    r10,[r9+r11*1]
   1400055a8:	sub    rdx,r8
   1400055ab:	mov    rcx,rdx
   1400055ae:	shr    rcx,1
   1400055b1:	or     rax,0xffffffffffffffff
   1400055b5:	sub    rax,rcx
   1400055b8:	cmp    rax,rdx
   1400055bb:	jae    0x1400055c1
   1400055bd:	xor    edx,edx
   1400055bf:	jmp    0x1400055c4
   1400055c1:	add    rdx,rcx
   1400055c4:	cmp    rdx,r10
   1400055c7:	cmovb  rdx,r10
   1400055cb:	mov    rcx,rsi
   1400055ce:	call   0x140005738
   1400055d3:	nop
   1400055d4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400055d8:	mov    r8,QWORD PTR [rsi]
   1400055db:	sub    r8,rcx
   1400055de:	add    r8,rbx
   1400055e1:	xor    edx,edx
   1400055e3:	call   0x1400099c0
   1400055e8:	nop
   1400055e9:	mov    rcx,QWORD PTR [rsi]
   1400055ec:	add    rcx,rbx
   1400055ef:	mov    QWORD PTR [rsi+0x8],rcx
   1400055f3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400055f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400055fd:	add    rsp,0x30
   140005601:	pop    rdi
   140005602:	ret    
   140005603:	int3   
   140005604:	mov    QWORD PTR [rsp+0x8],rbx
   140005609:	mov    QWORD PTR [rsp+0x10],rbp
   14000560e:	mov    QWORD PTR [rsp+0x18],rsi
   140005613:	push   rdi
   140005614:	push   r14
   140005616:	push   r15
   140005618:	sub    rsp,0x20
   14000561c:	mov    rax,QWORD PTR [rdx+0x10]
   140005620:	mov    rsi,r9
   140005623:	mov    rbp,r8
   140005626:	mov    r14,rdx
   140005629:	mov    rbx,rcx
   14000562c:	cmp    rax,r8
   14000562f:	jb     0x14000570e
   140005635:	sub    rax,r8
   140005638:	mov    r8,QWORD PTR [rcx+0x10]
   14000563c:	cmp    rax,r9
   14000563f:	cmovb  rsi,rax
   140005643:	or     rax,0xffffffffffffffff
   140005647:	sub    rax,r8
   14000564a:	cmp    rax,rsi
   14000564d:	jbe    0x14000571b
   140005653:	xor    r15d,r15d
   140005656:	test   rsi,rsi
   140005659:	je     0x1400056f2
   14000565f:	lea    rdi,[r8+rsi*1]
   140005663:	movabs rax,0x7ffffffffffffffe
   14000566d:	cmp    rdi,rax
   140005670:	ja     0x140005728
   140005676:	cmp    QWORD PTR [rcx+0x18],rdi
   14000567a:	jae    0x140005686
   14000567c:	mov    rdx,rdi
   14000567f:	call   0x140004854
   140005684:	jmp    0x1400056a2
   140005686:	test   rdi,rdi
   140005689:	jne    0x1400056a7
   14000568b:	cmp    QWORD PTR [rcx+0x18],0x8
   140005690:	mov    QWORD PTR [rcx+0x10],r15
   140005694:	jb     0x14000569b
   140005696:	mov    rax,QWORD PTR [rcx]
   140005699:	jmp    0x14000569e
   14000569b:	mov    rax,rcx
   14000569e:	mov    WORD PTR [rax],r15w
   1400056a2:	test   rdi,rdi
   1400056a5:	je     0x1400056f2
   1400056a7:	cmp    QWORD PTR [r14+0x18],0x8
   1400056ac:	jb     0x1400056b1
   1400056ae:	mov    r14,QWORD PTR [r14]
   1400056b1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400056b6:	jb     0x1400056bd
   1400056b8:	mov    rcx,QWORD PTR [rbx]
   1400056bb:	jmp    0x1400056c0
   1400056bd:	mov    rcx,rbx
   1400056c0:	test   rsi,rsi
   1400056c3:	je     0x1400056da
   1400056c5:	mov    rax,QWORD PTR [rbx+0x10]
   1400056c9:	lea    r8,[rsi+rsi*1]
   1400056cd:	lea    rdx,[r14+rbp*2]
   1400056d1:	lea    rcx,[rcx+rax*2]
   1400056d5:	call   0x140006070
   1400056da:	cmp    QWORD PTR [rbx+0x18],0x8
   1400056df:	mov    QWORD PTR [rbx+0x10],rdi
   1400056e3:	jb     0x1400056ea
   1400056e5:	mov    rax,QWORD PTR [rbx]
   1400056e8:	jmp    0x1400056ed
   1400056ea:	mov    rax,rbx
   1400056ed:	mov    WORD PTR [rax+rdi*2],r15w
   1400056f2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400056f7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400056fc:	mov    rax,rbx
   1400056ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140005704:	add    rsp,0x20
   140005708:	pop    r15
   14000570a:	pop    r14
   14000570c:	pop    rdi
   14000570d:	ret    
   14000570e:	lea    rcx,[rip+0x118db]        # 0x140016ff0
   140005715:	call   0x14000f27c
   14000571a:	int3   
   14000571b:	lea    rcx,[rip+0x118e6]        # 0x140017008
   140005722:	call   0x14000f244
   140005727:	int3   
   140005728:	lea    rcx,[rip+0x118d9]        # 0x140017008
   14000572f:	call   0x14000f244
   140005734:	int3   
   140005735:	int3   
   140005736:	int3   
   140005737:	int3   
   140005738:	mov    rax,rsp
   14000573b:	push   r14
   14000573d:	sub    rsp,0x30
   140005741:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140005749:	mov    QWORD PTR [rax+0x8],rbx
   14000574d:	mov    QWORD PTR [rax+0x18],rsi
   140005751:	mov    QWORD PTR [rax+0x20],rdi
   140005755:	mov    rsi,rdx
   140005758:	mov    rdi,rcx
   14000575b:	xor    ebx,ebx
   14000575d:	mov    QWORD PTR [rsp+0x48],rbx
   140005762:	test   rdx,rdx
   140005765:	je     0x140005788
   140005767:	cmp    rdx,0xffffffffffffffff
   14000576b:	ja     0x140005782
   14000576d:	mov    rcx,rdx
   140005770:	call   0x140006968
   140005775:	mov    rbx,rax
   140005778:	mov    QWORD PTR [rsp+0x48],rax
   14000577d:	test   rax,rax
   140005780:	jne    0x140005788
   140005782:	call   0x14000f200
   140005787:	nop
   140005788:	mov    r8,QWORD PTR [rdi+0x8]
   14000578c:	sub    r8,QWORD PTR [rdi]
   14000578f:	mov    rdx,QWORD PTR [rdi]
   140005792:	mov    rcx,rbx
   140005795:	call   0x140006070
   14000579a:	nop
   14000579b:	mov    rcx,QWORD PTR [rdi]
   14000579e:	mov    r14,QWORD PTR [rdi+0x8]
   1400057a2:	sub    r14,rcx
   1400057a5:	test   rcx,rcx
   1400057a8:	je     0x1400057af
   1400057aa:	call   0x140005fbc
   1400057af:	lea    rax,[rbx+rsi*1]
   1400057b3:	mov    QWORD PTR [rdi+0x10],rax
   1400057b7:	lea    rax,[rbx+r14*1]
   1400057bb:	mov    QWORD PTR [rdi+0x8],rax
   1400057bf:	mov    QWORD PTR [rdi],rbx
   1400057c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400057c7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400057cc:	mov    rdi,QWORD PTR [rsp+0x58]
   1400057d1:	add    rsp,0x30
   1400057d5:	pop    r14
   1400057d7:	ret    
   1400057d8:	rex push rbx
   1400057da:	sub    rsp,0x20
   1400057de:	lea    rax,[rip+0x11afb]        # 0x1400172e0
   1400057e5:	mov    rbx,rcx
   1400057e8:	mov    QWORD PTR [rcx],rax
   1400057eb:	test   dl,0x1
   1400057ee:	je     0x1400057f5
   1400057f0:	call   0x140005fbc
   1400057f5:	mov    rax,rbx
   1400057f8:	add    rsp,0x20
   1400057fc:	pop    rbx
   1400057fd:	ret    
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	mov    QWORD PTR [rsp+0x8],rbx
   140005805:	push   rdi
   140005806:	sub    rsp,0x20
   14000580a:	mov    rax,QWORD PTR [rip+0x185e7]        # 0x14001ddf8
   140005811:	mov    edi,edx
   140005813:	mov    rbx,rcx
   140005816:	test   rax,rax
   140005819:	jne    0x140005849
   14000581b:	lea    rcx,[rip+0x11a5e]        # 0x140017280
   140005822:	call   QWORD PTR [rip+0xdb68]        # 0x140013390
   140005828:	lea    rdx,[rip+0x11a79]        # 0x1400172a8
   14000582f:	mov    rcx,rax
   140005832:	call   QWORD PTR [rip+0xd9b0]        # 0x1400131e8
   140005838:	mov    QWORD PTR [rip+0x185b9],rax        # 0x14001ddf8
   14000583f:	test   rax,rax
   140005842:	jne    0x140005849
   140005844:	mov    rax,rbx
   140005847:	jmp    0x140005853
   140005849:	mov    r8b,0x3
   14000584c:	mov    edx,edi
   14000584e:	mov    rcx,rbx
   140005851:	call   rax
   140005853:	mov    rbx,QWORD PTR [rsp+0x30]
   140005858:	add    rsp,0x20
   14000585c:	pop    rdi
   14000585d:	ret    
   14000585e:	int3   
   14000585f:	int3   
   140005860:	rex push rbx
   140005862:	sub    rsp,0x20
   140005866:	lea    rax,[rip+0x11ae3]        # 0x140017350
   14000586d:	mov    rbx,rcx
   140005870:	mov    QWORD PTR [rcx],rax
   140005873:	mov    rcx,QWORD PTR [rcx+0x8]
   140005877:	test   rcx,rcx
   14000587a:	je     0x140005882
   14000587c:	call   QWORD PTR [rip+0xd80e]        # 0x140013090
   140005882:	mov    rcx,QWORD PTR [rbx+0x10]
   140005886:	test   rcx,rcx
   140005889:	je     0x140005891
   14000588b:	call   QWORD PTR [rip+0xd7ff]        # 0x140013090
   140005891:	mov    rcx,QWORD PTR [rbx+0x18]
   140005895:	test   rcx,rcx
   140005898:	je     0x1400058a0
   14000589a:	call   QWORD PTR [rip+0xd878]        # 0x140013118
   1400058a0:	add    rsp,0x20
   1400058a4:	pop    rbx
   1400058a5:	ret    
   1400058a6:	int3   
   1400058a7:	int3   
   1400058a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400058ad:	push   rdi
   1400058ae:	sub    rsp,0x20
   1400058b2:	lea    rax,[rip+0x11a97]        # 0x140017350
   1400058b9:	mov    rbx,rcx
   1400058bc:	mov    edi,edx
   1400058be:	mov    QWORD PTR [rcx],rax
   1400058c1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400058c5:	test   rcx,rcx
   1400058c8:	je     0x1400058d0
   1400058ca:	call   QWORD PTR [rip+0xd7c0]        # 0x140013090
   1400058d0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400058d4:	test   rcx,rcx
   1400058d7:	je     0x1400058df
   1400058d9:	call   QWORD PTR [rip+0xd7b1]        # 0x140013090
   1400058df:	mov    rcx,QWORD PTR [rbx+0x18]
   1400058e3:	test   rcx,rcx
   1400058e6:	je     0x1400058ee
   1400058e8:	call   QWORD PTR [rip+0xd82a]        # 0x140013118
   1400058ee:	test   dil,0x1
   1400058f2:	je     0x1400058fc
   1400058f4:	mov    rcx,rbx
   1400058f7:	call   0x140005fbc
   1400058fc:	mov    rax,rbx
   1400058ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140005904:	add    rsp,0x20
   140005908:	pop    rdi
   140005909:	ret    
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	rex push rbp
   14000590e:	push   rbx
   14000590f:	push   rsi
   140005910:	push   rdi
   140005911:	push   r12
   140005913:	mov    rbp,rsp
   140005916:	sub    rsp,0x70
   14000591a:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140005922:	mov    rsi,rcx
   140005925:	lea    r12,[rip+0x11a24]        # 0x140017350
   14000592c:	mov    QWORD PTR [rbp-0x20],r12
   140005930:	and    QWORD PTR [rbp-0x18],0x0
   140005935:	and    QWORD PTR [rbp-0x10],0x0
   14000593a:	xor    edi,edi
   14000593c:	mov    QWORD PTR [rbp-0x8],rdi
   140005940:	jmp    0x14000596a
   140005942:	call   QWORD PTR [rip+0xd7f0]        # 0x140013138
   140005948:	cmp    eax,0xe7
   14000594d:	jne    0x140005a16
   140005953:	xor    edx,edx
   140005955:	lea    rcx,[rip+0x1174c]        # 0x1400170a8
   14000595c:	call   QWORD PTR [rip+0xda86]        # 0x1400133e8
   140005962:	test   eax,eax
   140005964:	je     0x140005a16
   14000596a:	and    QWORD PTR [rsp+0x30],0x0
   140005970:	and    DWORD PTR [rsp+0x28],0x0
   140005975:	mov    DWORD PTR [rsp+0x20],0x3
   14000597d:	xor    r9d,r9d
   140005980:	xor    r8d,r8d
   140005983:	mov    edx,0xc0000000
   140005988:	lea    rcx,[rip+0x11719]        # 0x1400170a8
   14000598f:	call   QWORD PTR [rip+0xda4b]        # 0x1400133e0
   140005995:	cmp    rax,0xffffffffffffffff
   140005999:	mov    rbx,rax
   14000599c:	je     0x140005942
   14000599e:	mov    rdi,rax
   1400059a1:	mov    QWORD PTR [rbp-0x8],rax
   1400059a5:	mov    DWORD PTR [rbp+0x38],0x2
   1400059ac:	xor    r9d,r9d
   1400059af:	xor    r8d,r8d
   1400059b2:	lea    rdx,[rbp+0x38]
   1400059b6:	mov    rcx,rax
   1400059b9:	call   QWORD PTR [rip+0xda31]        # 0x1400133f0
   1400059bf:	test   eax,eax
   1400059c1:	je     0x140005a16
   1400059c3:	and    QWORD PTR [rsp+0x20],0x0
   1400059c9:	lea    r9,[rbp+0x40]
   1400059cd:	mov    r8d,0x124
   1400059d3:	mov    rdx,rsi
   1400059d6:	mov    rcx,rbx
   1400059d9:	call   QWORD PTR [rip+0xd7a1]        # 0x140013180
   1400059df:	test   eax,eax
   1400059e1:	je     0x140005a16
   1400059e3:	cmp    DWORD PTR [rbp+0x40],0x124
   1400059ea:	jne    0x140005a16
   1400059ec:	and    QWORD PTR [rsp+0x20],0x0
   1400059f2:	lea    r9,[rbp+0x48]
   1400059f6:	mov    r8d,0x4
   1400059fc:	lea    rdx,[rbp-0x30]
   140005a00:	mov    rcx,rbx
   140005a03:	call   QWORD PTR [rip+0xd74f]        # 0x140013158
   140005a09:	test   eax,eax
   140005a0b:	je     0x140005a16
   140005a0d:	cmp    DWORD PTR [rbp+0x48],0x4
   140005a11:	mov    ebx,DWORD PTR [rbp-0x30]
   140005a14:	je     0x140005a1b
   140005a16:	mov    ebx,0xe1230555
   140005a1b:	mov    QWORD PTR [rbp-0x20],r12
   140005a1f:	test   rdi,rdi
   140005a22:	je     0x140005a2d
   140005a24:	mov    rcx,rdi
   140005a27:	call   QWORD PTR [rip+0xd6eb]        # 0x140013118
   140005a2d:	mov    eax,ebx
   140005a2f:	add    rsp,0x70
   140005a33:	pop    r12
   140005a35:	pop    rdi
   140005a36:	pop    rsi
   140005a37:	pop    rbx
   140005a38:	pop    rbp
   140005a39:	ret    
   140005a3a:	int3   
   140005a3b:	int3   
   140005a3c:	mov    rax,rsp
   140005a3f:	mov    QWORD PTR [rax+0x8],rbx
   140005a43:	mov    QWORD PTR [rax+0x10],rbp
   140005a47:	mov    QWORD PTR [rax+0x18],rsi
   140005a4b:	mov    QWORD PTR [rax+0x20],rdi
   140005a4f:	push   r14
   140005a51:	sub    rsp,0x30
   140005a55:	xor    ebp,ebp
   140005a57:	lea    rbx,[rip+0x18552]        # 0x14001dfb0
   140005a5e:	lea    r14,[rip+0xffffffffffffa59b]        # 0x140000000
   140005a65:	lea    esi,[rbp+0x16]
   140005a68:	mov    edi,ebp
   140005a6a:	cmp    WORD PTR [rip+0x1807f],bp        # 0x14001daf0
   140005a71:	lea    rax,[rip+0x11aa0]        # 0x140017518
   140005a78:	lea    rcx,[rip+0x18071]        # 0x14001daf0
   140005a7f:	cmove  rcx,rax
   140005a83:	mov    rax,QWORD PTR [rdi+r14*1+0x1c560]
   140005a8b:	lea    r9,[rip+0x11726]        # 0x1400171b8
   140005a92:	mov    QWORD PTR [rsp+0x28],rax
   140005a97:	mov    QWORD PTR [rsp+0x20],rcx
   140005a9c:	lea    r8,[rip+0x11a85]        # 0x140017528
   140005aa3:	mov    rcx,rbx
   140005aa6:	mov    edx,0x50
   140005aab:	call   0x140001088
   140005ab0:	mov    QWORD PTR [rdi+r14*1+0x1de10],rbx
   140005ab8:	add    rbx,0x50
   140005abc:	lea    rdi,[rdi+0x8]
   140005ac0:	dec    rsi
   140005ac3:	jne    0x140005a6a
   140005ac5:	mov    rbx,QWORD PTR [rsp+0x40]
   140005aca:	mov    rbp,QWORD PTR [rsp+0x48]
   140005acf:	mov    rsi,QWORD PTR [rsp+0x50]
   140005ad4:	mov    rdi,QWORD PTR [rsp+0x58]
   140005ad9:	mov    DWORD PTR [rip+0x18325],0x1        # 0x14001de08
   140005ae3:	add    rsp,0x30
   140005ae7:	pop    r14
   140005ae9:	ret    
   140005aea:	int3   
   140005aeb:	int3   
   140005aec:	rex push rbx
   140005aee:	sub    rsp,0x20
   140005af2:	mov    rbx,rcx
   140005af5:	lea    r9,[rsp+0x38]
   140005afa:	lea    r8,[rsp+0x40]
   140005aff:	lea    rcx,[rip+0x11a2a]        # 0x140017530
   140005b06:	mov    edx,0x1
   140005b0b:	call   QWORD PTR [rip+0xd567]        # 0x140013078
   140005b11:	test   eax,eax
   140005b13:	jne    0x140005b2c
   140005b15:	call   QWORD PTR [rip+0xd61d]        # 0x140013138
   140005b1b:	mov    ecx,eax
   140005b1d:	movzx  eax,ax
   140005b20:	or     eax,0x80070000
   140005b25:	test   ecx,ecx
   140005b27:	cmovle eax,ecx
   140005b2a:	jmp    0x140005b4c
   140005b2c:	mov    edx,DWORD PTR [rsp+0x38]
   140005b30:	mov    rcx,rbx
   140005b33:	call   0x140005504
   140005b38:	mov    r8d,DWORD PTR [rsp+0x38]
   140005b3d:	mov    rdx,QWORD PTR [rsp+0x40]
   140005b42:	mov    rcx,QWORD PTR [rbx]
   140005b45:	call   0x140006070
   140005b4a:	xor    eax,eax
   140005b4c:	add    rsp,0x20
   140005b50:	pop    rbx
   140005b51:	ret    
   140005b52:	int3   
   140005b53:	int3   
   140005b54:	mov    rax,rsp
   140005b57:	push   rbp
   140005b58:	mov    rbp,rsp
   140005b5b:	sub    rsp,0x70
   140005b5f:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140005b67:	mov    QWORD PTR [rax+0x10],rbx
   140005b6b:	mov    QWORD PTR [rax+0x18],rsi
   140005b6f:	mov    QWORD PTR [rax+0x20],rdi
   140005b73:	mov    rax,QWORD PTR [rip+0x1550e]        # 0x14001b088
   140005b7a:	xor    rax,rsp
   140005b7d:	mov    QWORD PTR [rbp-0x8],rax
   140005b81:	mov    rbx,rcx
   140005b84:	mov    rax,QWORD PTR [rcx]
   140005b87:	mov    QWORD PTR [rcx+0x8],rax
   140005b8b:	xor    esi,esi
   140005b8d:	mov    QWORD PTR [rbp-0x18],rsi
   140005b91:	mov    QWORD PTR [rbp-0x10],rsi
   140005b95:	mov    QWORD PTR [rbp-0x10],0x7
   140005b9d:	mov    QWORD PTR [rbp-0x18],rsi
   140005ba1:	mov    WORD PTR [rbp-0x28],si
   140005ba5:	lea    rdx,[rip+0x11744]        # 0x1400172f0
   140005bac:	lea    rcx,[rbp-0x28]
   140005bb0:	call   0x140004534
   140005bb5:	nop
   140005bb6:	lea    rcx,[rbp-0x28]
   140005bba:	call   0x1400053ac
   140005bbf:	lea    rdx,[rbp-0x28]
   140005bc3:	cmp    QWORD PTR [rbp-0x10],0x8
   140005bc8:	cmovae rdx,QWORD PTR [rbp-0x28]
   140005bcd:	lea    rax,[rbp-0x38]
   140005bd1:	mov    QWORD PTR [rsp+0x20],rax
   140005bd6:	mov    r9d,0x20019
   140005bdc:	xor    r8d,r8d
   140005bdf:	mov    rcx,0xffffffff80000002
   140005be6:	call   QWORD PTR [rip+0xd484]        # 0x140013070
   140005bec:	test   eax,eax
   140005bee:	je     0x140005c0c
   140005bf0:	cmp    eax,0x2
   140005bf3:	je     0x140005c79
   140005bf9:	movzx  ebx,ax
   140005bfc:	or     ebx,0x80070000
   140005c02:	test   eax,eax
   140005c04:	cmovle ebx,eax
   140005c07:	jmp    0x140005c93
   140005c0c:	mov    eax,0x100
   140005c11:	mov    DWORD PTR [rbp-0x3c],eax
   140005c14:	mov    DWORD PTR [rbp-0x40],0x3
   140005c1b:	mov    edx,eax
   140005c1d:	mov    rcx,rbx
   140005c20:	call   0x140005504
   140005c25:	mov    rax,QWORD PTR [rbx]
   140005c28:	lea    rcx,[rbp-0x3c]
   140005c2c:	mov    QWORD PTR [rsp+0x28],rcx
   140005c31:	mov    QWORD PTR [rsp+0x20],rax
   140005c36:	lea    r9,[rbp-0x40]
   140005c3a:	xor    r8d,r8d
   140005c3d:	lea    rdx,[rip+0x1194c]        # 0x140017590
   140005c44:	mov    rcx,QWORD PTR [rbp-0x38]
   140005c48:	call   QWORD PTR [rip+0xd43a]        # 0x140013088
   140005c4e:	mov    edi,eax
   140005c50:	test   eax,eax
   140005c52:	jne    0x140005c5d
   140005c54:	cmp    DWORD PTR [rbp-0x40],0x3
   140005c58:	je     0x140005c6a
   140005c5a:	lea    edi,[rax+0xd]
   140005c5d:	cmp    edi,0xea
   140005c63:	jne    0x140005c6a
   140005c65:	mov    eax,DWORD PTR [rbp-0x3c]
   140005c68:	jmp    0x140005c1b
   140005c6a:	mov    rcx,QWORD PTR [rbp-0x38]
   140005c6e:	call   QWORD PTR [rip+0xd424]        # 0x140013098
   140005c74:	cmp    edi,0x2
   140005c77:	jne    0x140005c85
   140005c79:	mov    rcx,rbx
   140005c7c:	call   0x140005aec
   140005c81:	mov    ebx,eax
   140005c83:	jmp    0x140005c93
   140005c85:	movzx  ebx,di
   140005c88:	or     ebx,0x80070000
   140005c8e:	test   edi,edi
   140005c90:	cmovle ebx,edi
   140005c93:	cmp    QWORD PTR [rbp-0x10],0x8
   140005c98:	jb     0x140005ca3
   140005c9a:	mov    rcx,QWORD PTR [rbp-0x28]
   140005c9e:	call   0x140005fbc
   140005ca3:	mov    QWORD PTR [rbp-0x10],0x7
   140005cab:	mov    QWORD PTR [rbp-0x18],rsi
   140005caf:	mov    WORD PTR [rbp-0x28],si
   140005cb3:	mov    eax,ebx
   140005cb5:	mov    rcx,QWORD PTR [rbp-0x8]
   140005cb9:	xor    rcx,rsp
   140005cbc:	call   0x140005fe0
   140005cc1:	lea    r11,[rsp+0x70]
   140005cc6:	mov    rbx,QWORD PTR [r11+0x18]
   140005cca:	mov    rsi,QWORD PTR [r11+0x20]
   140005cce:	mov    rdi,QWORD PTR [r11+0x28]
   140005cd2:	mov    rsp,r11
   140005cd5:	pop    rbp
   140005cd6:	ret    
   140005cd7:	int3   
   140005cd8:	mov    QWORD PTR [rsp+0x10],rbx
   140005cdd:	mov    QWORD PTR [rsp+0x18],rsi
   140005ce2:	mov    QWORD PTR [rsp+0x20],rdi
   140005ce7:	push   rbp
   140005ce8:	mov    rbp,rsp
   140005ceb:	sub    rsp,0x60
   140005cef:	mov    rax,QWORD PTR [rip+0x15392]        # 0x14001b088
   140005cf6:	xor    rax,rsp
   140005cf9:	mov    QWORD PTR [rbp-0x10],rax
   140005cfd:	mov    rbx,rcx
   140005d00:	call   0x140005b54
   140005d05:	mov    rsi,QWORD PTR [rbx]
   140005d08:	xor    ebx,ebx
   140005d0a:	test   eax,eax
   140005d0c:	js     0x140005e0f
   140005d12:	lea    r9,[rbp-0x3c]
   140005d16:	lea    r8,[rbp-0x30]
   140005d1a:	lea    rdx,[rbp-0x40]
   140005d1e:	mov    rcx,rsi
   140005d21:	call   QWORD PTR [rip+0xd339]        # 0x140013060
   140005d27:	test   eax,eax
   140005d29:	je     0x140005da5
   140005d2b:	cmp    DWORD PTR [rbp-0x40],ebx
   140005d2e:	je     0x140005da5
   140005d30:	mov    rcx,QWORD PTR [rbp-0x30]
   140005d34:	lea    r9d,[rbx+0x2]
   140005d38:	lea    r8d,[rbx+0xc]
   140005d3c:	lea    rdx,[rbp-0x20]
   140005d40:	call   QWORD PTR [rip+0xd38a]        # 0x1400130d0
   140005d46:	mov    edi,ebx
   140005d48:	cmp    DWORD PTR [rbp-0x20],ebx
   140005d4b:	jbe    0x140005da5
   140005d4d:	mov    rcx,QWORD PTR [rbp-0x30]
   140005d51:	lea    r8,[rbp-0x38]
   140005d55:	mov    edx,edi
   140005d57:	call   QWORD PTR [rip+0xd323]        # 0x140013080
   140005d5d:	mov    rcx,QWORD PTR [rbp-0x38]
   140005d61:	movzx  edx,BYTE PTR [rcx]
   140005d64:	test   edx,edx
   140005d66:	je     0x140005d7f
   140005d68:	dec    edx
   140005d6a:	jne    0x140005d9e
   140005d6c:	mov    eax,DWORD PTR [rcx+0x4]
   140005d6f:	and    eax,0xf
   140005d72:	cmp    al,0xf
   140005d74:	jne    0x140005d9e
   140005d76:	mov    DWORD PTR [rcx+0x4],0x1f01ff
   140005d7d:	jmp    0x140005d9e
   140005d7f:	mov    eax,DWORD PTR [rcx+0x4]
   140005d82:	test   al,0xf
   140005d84:	je     0x140005d9e
   140005d86:	or     eax,0xc0000000
   140005d8b:	mov    DWORD PTR [rcx+0x4],eax
   140005d8e:	test   al,0x8
   140005d90:	jne    0x140005d9a
   140005d92:	and    eax,0x40000
   140005d97:	mov    DWORD PTR [rcx+0x4],eax
   140005d9a:	and    DWORD PTR [rcx+0x4],0xfffffff0
   140005d9e:	inc    edi
   140005da0:	cmp    edi,DWORD PTR [rbp-0x20]
   140005da3:	jb     0x140005d4d
   140005da5:	lea    r9,[rbp-0x3c]
   140005da9:	lea    r8,[rbp-0x28]
   140005dad:	lea    rdx,[rbp-0x40]
   140005db1:	mov    rcx,rsi
   140005db4:	call   QWORD PTR [rip+0xd2ae]        # 0x140013068
   140005dba:	test   eax,eax
   140005dbc:	je     0x140005e0d
   140005dbe:	cmp    DWORD PTR [rbp-0x40],ebx
   140005dc1:	je     0x140005e0d
   140005dc3:	mov    rcx,QWORD PTR [rbp-0x28]
   140005dc7:	mov    r9d,0x2
   140005dcd:	lea    rdx,[rbp-0x20]
   140005dd1:	lea    r8d,[r9+0xa]
   140005dd5:	call   QWORD PTR [rip+0xd2f5]        # 0x1400130d0
   140005ddb:	cmp    DWORD PTR [rbp-0x20],ebx
   140005dde:	jbe    0x140005e0d
   140005de0:	mov    rcx,QWORD PTR [rbp-0x28]
   140005de4:	lea    r8,[rbp-0x38]
   140005de8:	mov    edx,ebx
   140005dea:	call   QWORD PTR [rip+0xd290]        # 0x140013080
   140005df0:	mov    rax,QWORD PTR [rbp-0x38]
   140005df4:	cmp    BYTE PTR [rax],0x2
   140005df7:	jne    0x140005e06
   140005df9:	test   BYTE PTR [rax+0x4],0xf
   140005dfd:	je     0x140005e06
   140005dff:	mov    DWORD PTR [rax+0x4],0x1f01ff
   140005e06:	inc    ebx
   140005e08:	cmp    ebx,DWORD PTR [rbp-0x20]
   140005e0b:	jb     0x140005de0
   140005e0d:	xor    eax,eax
   140005e0f:	mov    rcx,QWORD PTR [rbp-0x10]
   140005e13:	xor    rcx,rsp
   140005e16:	call   0x140005fe0
   140005e1b:	lea    r11,[rsp+0x60]
   140005e20:	mov    rbx,QWORD PTR [r11+0x18]
   140005e24:	mov    rsi,QWORD PTR [r11+0x20]
   140005e28:	mov    rdi,QWORD PTR [r11+0x28]
   140005e2c:	mov    rsp,r11
   140005e2f:	pop    rbp
   140005e30:	ret    
   140005e31:	int3   
   140005e32:	int3   
   140005e33:	int3   
   140005e34:	mov    QWORD PTR [rsp+0x10],rbx
   140005e39:	push   rdi
   140005e3a:	sub    rsp,0x30
   140005e3e:	mov    edi,0x1
   140005e43:	mov    ecx,edi
   140005e45:	call   0x140008214
   140005e4a:	mov    eax,0x5a4d
   140005e4f:	cmp    WORD PTR [rip+0xffffffffffffa1aa],ax        # 0x140000000
   140005e56:	je     0x140005e5c
   140005e58:	xor    ebx,ebx
   140005e5a:	jmp    0x140005e94
   140005e5c:	movsxd rax,DWORD PTR [rip+0xffffffffffffa1d9]        # 0x14000003c
   140005e63:	lea    rcx,[rip+0xffffffffffffa196]        # 0x140000000
   140005e6a:	add    rax,rcx
   140005e6d:	cmp    DWORD PTR [rax],0x4550
   140005e73:	jne    0x140005e58
   140005e75:	mov    ecx,0x20b
   140005e7a:	cmp    WORD PTR [rax+0x18],cx
   140005e7e:	jne    0x140005e58
   140005e80:	xor    ebx,ebx
   140005e82:	cmp    DWORD PTR [rax+0x84],0xe
   140005e89:	jbe    0x140005e94
   140005e8b:	cmp    DWORD PTR [rax+0xf8],ebx
   140005e91:	setne  bl
   140005e94:	mov    DWORD PTR [rsp+0x40],ebx
   140005e98:	call   0x140007a5c
   140005e9d:	test   eax,eax
   140005e9f:	jne    0x140005ec3
   140005ea1:	cmp    DWORD PTR [rip+0x17790],0x2        # 0x14001d638
   140005ea8:	je     0x140005eaf
   140005eaa:	call   0x140007778
   140005eaf:	mov    ecx,0x1c
   140005eb4:	call   0x1400077ec
   140005eb9:	mov    ecx,0xff
   140005ebe:	call   0x1400073e8
   140005ec3:	call   0x140007300
   140005ec8:	test   eax,eax
   140005eca:	jne    0x140005eee
   140005ecc:	cmp    DWORD PTR [rip+0x17765],0x2        # 0x14001d638
   140005ed3:	je     0x140005eda
   140005ed5:	call   0x140007778
   140005eda:	mov    ecx,0x10
   140005edf:	call   0x1400077ec
   140005ee4:	mov    ecx,0xff
   140005ee9:	call   0x1400073e8
   140005eee:	call   0x140008314
   140005ef3:	nop
   140005ef4:	call   0x140007aa8
   140005ef9:	call   QWORD PTR [rip+0xd2a1]        # 0x1400131a0
   140005eff:	mov    QWORD PTR [rip+0x19a02],rax        # 0x14001f908
   140005f06:	call   0x140008384
   140005f0b:	mov    QWORD PTR [rip+0x169ee],rax        # 0x14001c900
   140005f12:	call   0x140007e24
   140005f17:	test   eax,eax
   140005f19:	jns    0x140005f25
   140005f1b:	mov    ecx,0x8
   140005f20:	call   0x140007400
   140005f25:	call   0x1400080e0
   140005f2a:	test   eax,eax
   140005f2c:	jns    0x140005f38
   140005f2e:	mov    ecx,0x9
   140005f33:	call   0x140007400
   140005f38:	mov    ecx,edi
   140005f3a:	call   0x140007448
   140005f3f:	test   eax,eax
   140005f41:	je     0x140005f4a
   140005f43:	mov    ecx,eax
   140005f45:	call   0x140007400
   140005f4a:	mov    r8,QWORD PTR [rip+0x16f4f]        # 0x14001cea0
   140005f51:	mov    QWORD PTR [rip+0x16f80],r8        # 0x14001ced8
   140005f58:	mov    rdx,QWORD PTR [rip+0x16f31]        # 0x14001ce90
   140005f5f:	mov    ecx,DWORD PTR [rip+0x16f27]        # 0x14001ce8c
   140005f65:	call   0x140002a18
   140005f6a:	mov    edi,eax
   140005f6c:	mov    DWORD PTR [rsp+0x20],eax
   140005f70:	test   ebx,ebx
   140005f72:	jne    0x140005f7b
   140005f74:	mov    ecx,eax
   140005f76:	call   0x14000776c
   140005f7b:	call   0x140007438
   140005f80:	jmp    0x140005f99
   140005f82:	mov    edi,eax
   140005f84:	cmp    DWORD PTR [rsp+0x40],0x0
   140005f89:	jne    0x140005f93
   140005f8b:	mov    ecx,eax
   140005f8d:	call   0x1400074f8
   140005f92:	int3   
   140005f93:	call   0x140007428
   140005f98:	nop
   140005f99:	mov    eax,edi
   140005f9b:	mov    rbx,QWORD PTR [rsp+0x48]
   140005fa0:	add    rsp,0x30
   140005fa4:	pop    rdi
   140005fa5:	ret    
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	sub    rsp,0x28
   140005fac:	call   0x14000825c
   140005fb1:	add    rsp,0x28
   140005fb5:	jmp    0x140005e34
   140005fba:	int3   
   140005fbb:	int3   
   140005fbc:	jmp    0x140006aa0
   140005fc1:	int3   
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	int3   
   140005fc7:	int3   
   140005fc8:	int3   
   140005fc9:	int3   
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005fe0:	cmp    rcx,QWORD PTR [rip+0x150a1]        # 0x14001b088
   140005fe7:	jne    0x140005ffa
   140005fe9:	rol    rcx,0x10
   140005fed:	test   cx,0xffff
   140005ff2:	jne    0x140005ff6
   140005ff4:	repz ret 
   140005ff6:	ror    rcx,0x10
   140005ffa:	jmp    0x140006cc8
   140005fff:	int3   
   140006000:	rex push rbx
   140006002:	sub    rsp,0x20
   140006006:	mov    rax,r8
   140006009:	test   r9,r9
   14000600c:	je     0x140006049
   14000600e:	test   rcx,rcx
   140006011:	jne    0x140006028
   140006013:	call   0x140008888
   140006018:	mov    ebx,0x16
   14000601d:	mov    DWORD PTR [rax],ebx
   14000601f:	call   0x1400087bc
   140006024:	mov    eax,ebx
   140006026:	jmp    0x14000604b
   140006028:	test   rax,rax
   14000602b:	je     0x140006013
   14000602d:	cmp    rdx,r9
   140006030:	jae    0x14000603e
   140006032:	call   0x140008888
   140006037:	mov    ebx,0x22
   14000603c:	jmp    0x14000601d
   14000603e:	mov    r8,r9
   140006041:	mov    rdx,rax
   140006044:	call   0x140006070
   140006049:	xor    eax,eax
   14000604b:	add    rsp,0x20
   14000604f:	pop    rbx
   140006050:	ret    
   140006051:	int3   
   140006052:	int3   
   140006053:	int3   
   140006054:	int3   
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	int3   
   140006061:	int3   
   140006062:	int3   
   140006063:	int3   
   140006064:	int3   
   140006065:	int3   
   140006066:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006070:	mov    r11,rcx
   140006073:	mov    r10,rdx
   140006076:	cmp    r8,0x10
   14000607a:	jbe    0x140006129
   140006080:	sub    rdx,rcx
   140006083:	jae    0x140006094
   140006085:	mov    rax,r10
   140006088:	add    rax,r8
   14000608b:	cmp    rcx,rax
   14000608e:	jl     0x1400063da
   140006094:	bt     DWORD PTR [rip+0x175ac],0x1        # 0x14001d648
   14000609c:	jae    0x1400060b1
   14000609e:	push   rdi
   14000609f:	push   rsi
   1400060a0:	mov    rdi,rcx
   1400060a3:	mov    rsi,r10
   1400060a6:	mov    rcx,r8
   1400060a9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400060ab:	pop    rsi
   1400060ac:	pop    rdi
   1400060ad:	mov    rax,r11
   1400060b0:	ret    
   1400060b1:	test   cl,0x7
   1400060b4:	je     0x1400060ec
   1400060b6:	test   cl,0x1
   1400060b9:	je     0x1400060c6
   1400060bb:	mov    al,BYTE PTR [rdx+rcx*1]
   1400060be:	dec    r8
   1400060c1:	mov    BYTE PTR [rcx],al
   1400060c3:	inc    rcx
   1400060c6:	test   cl,0x2
   1400060c9:	je     0x1400060da
   1400060cb:	mov    ax,WORD PTR [rdx+rcx*1]
   1400060cf:	sub    r8,0x2
   1400060d3:	mov    WORD PTR [rcx],ax
   1400060d6:	add    rcx,0x2
   1400060da:	test   cl,0x4
   1400060dd:	je     0x1400060ec
   1400060df:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400060e2:	sub    r8,0x4
   1400060e6:	mov    DWORD PTR [rcx],eax
   1400060e8:	add    rcx,0x4
   1400060ec:	mov    r9,r8
   1400060ef:	shr    r9,0x5
   1400060f3:	jne    0x1400062d7
   1400060f9:	mov    r9,r8
   1400060fc:	shr    r9,0x3
   140006100:	je     0x140006116
   140006102:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006106:	mov    QWORD PTR [rcx],rax
   140006109:	add    rcx,0x8
   14000610d:	dec    r9
   140006110:	jne    0x140006102
   140006112:	and    r8,0x7
   140006116:	test   r8,r8
   140006119:	jne    0x140006120
   14000611b:	mov    rax,r11
   14000611e:	ret    
   14000611f:	nop
   140006120:	lea    rdx,[rdx+rcx*1]
   140006124:	mov    r10,rcx
   140006127:	jmp    0x14000612c
   140006129:	mov    r10,r11
   14000612c:	lea    r9,[rip+0xffffffffffff9ecd]        # 0x140000000
   140006133:	mov    rax,r8
   140006136:	mov    eax,DWORD PTR [r9+r8*4+0x6143]
   14000613e:	add    rax,r9
   140006141:	jmp    rax
   140006143:	xchg   DWORD PTR [rcx+0x0],esp
   140006146:	add    BYTE PTR [rbx-0x69ffff9f],cl
   14000614c:	(bad)  
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	movabs ds:0xc0000061b7000061,al
   140006158:	(bad)  
   140006159:	add    BYTE PTR [rax],al
   14000615b:	shl    BYTE PTR [rcx+0x0],cl
   14000615e:	add    ch,ah
   140006160:	(bad)  
   140006161:	add    BYTE PTR [rax],al
   140006163:	add    DWORD PTR [rdx+0x0],esp
   140006166:	add    BYTE PTR [rbx],cl
   140006168:	(bad)  
   140006169:	add    BYTE PTR [rax],al
   14000616b:	(bad)  
   14000616c:	(bad)  
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	xor    ah,BYTE PTR [rdx+0x0]
   140006172:	add    BYTE PTR [rdi+0x62],cl
   140006175:	add    BYTE PTR [rax],al
   140006177:	(bad)  
   140006178:	(bad)  
   140006179:	add    BYTE PTR [rax],al
   14000617b:	jp     0x1400061df
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	xchg   ebp,eax
   140006180:	(bad)  
   140006181:	add    BYTE PTR [rax],al
   140006183:	mov    ecx,0x49000062
   140006188:	mov    eax,ebx
   14000618a:	ret    
   14000618b:	movzx  rax,BYTE PTR [rdx]
   14000618f:	mov    BYTE PTR [r10],al
   140006192:	mov    rax,r11
   140006195:	ret    
   140006196:	movzx  rax,WORD PTR [rdx]
   14000619a:	mov    WORD PTR [r10],ax
   14000619e:	mov    rax,r11
   1400061a1:	ret    
   1400061a2:	movzx  rax,BYTE PTR [rdx]
   1400061a6:	movzx  rcx,WORD PTR [rdx+0x1]
   1400061ab:	mov    BYTE PTR [r10],al
   1400061ae:	mov    WORD PTR [r10+0x1],cx
   1400061b3:	mov    rax,r11
   1400061b6:	ret    
   1400061b7:	mov    eax,DWORD PTR [rdx]
   1400061b9:	mov    DWORD PTR [r10],eax
   1400061bc:	mov    rax,r11
   1400061bf:	ret    
   1400061c0:	movzx  rax,BYTE PTR [rdx]
   1400061c4:	mov    ecx,DWORD PTR [rdx+0x1]
   1400061c7:	mov    BYTE PTR [r10],al
   1400061ca:	mov    DWORD PTR [r10+0x1],ecx
   1400061ce:	mov    rax,r11
   1400061d1:	ret    
   1400061d2:	movzx  rax,WORD PTR [rdx]
   1400061d6:	mov    ecx,DWORD PTR [rdx+0x2]
   1400061d9:	mov    WORD PTR [r10],ax
   1400061dd:	mov    DWORD PTR [r10+0x2],ecx
   1400061e1:	mov    rax,r11
   1400061e4:	ret    
   1400061e5:	movzx  rax,BYTE PTR [rdx]
   1400061e9:	movzx  rcx,WORD PTR [rdx+0x1]
   1400061ee:	mov    edx,DWORD PTR [rdx+0x3]
   1400061f1:	mov    BYTE PTR [r10],al
   1400061f4:	mov    WORD PTR [r10+0x1],cx
   1400061f9:	mov    DWORD PTR [r10+0x3],edx
   1400061fd:	mov    rax,r11
   140006200:	ret    
   140006201:	mov    rax,QWORD PTR [rdx]
   140006204:	mov    QWORD PTR [r10],rax
   140006207:	mov    rax,r11
   14000620a:	ret    
   14000620b:	movzx  rax,BYTE PTR [rdx]
   14000620f:	mov    rcx,QWORD PTR [rdx+0x1]
   140006213:	mov    BYTE PTR [r10],al
   140006216:	mov    QWORD PTR [r10+0x1],rcx
   14000621a:	mov    rax,r11
   14000621d:	ret    
   14000621e:	movzx  rax,WORD PTR [rdx]
   140006222:	mov    rcx,QWORD PTR [rdx+0x2]
   140006226:	mov    WORD PTR [r10],ax
   14000622a:	mov    QWORD PTR [r10+0x2],rcx
   14000622e:	mov    rax,r11
   140006231:	ret    
   140006232:	movzx  rax,BYTE PTR [rdx]
   140006236:	movzx  rcx,WORD PTR [rdx+0x1]
   14000623b:	mov    rdx,QWORD PTR [rdx+0x3]
   14000623f:	mov    BYTE PTR [r10],al
   140006242:	mov    WORD PTR [r10+0x1],cx
   140006247:	mov    QWORD PTR [r10+0x3],rdx
   14000624b:	mov    rax,r11
   14000624e:	ret    
   14000624f:	mov    eax,DWORD PTR [rdx]
   140006251:	mov    rcx,QWORD PTR [rdx+0x4]
   140006255:	mov    DWORD PTR [r10],eax
   140006258:	mov    QWORD PTR [r10+0x4],rcx
   14000625c:	mov    rax,r11
   14000625f:	ret    
   140006260:	movzx  rax,BYTE PTR [rdx]
   140006264:	mov    ecx,DWORD PTR [rdx+0x1]
   140006267:	mov    rdx,QWORD PTR [rdx+0x5]
   14000626b:	mov    BYTE PTR [r10],al
   14000626e:	mov    DWORD PTR [r10+0x1],ecx
   140006272:	mov    QWORD PTR [r10+0x5],rdx
   140006276:	mov    rax,r11
   140006279:	ret    
   14000627a:	movzx  rax,WORD PTR [rdx]
   14000627e:	mov    ecx,DWORD PTR [rdx+0x2]
   140006281:	mov    rdx,QWORD PTR [rdx+0x6]
   140006285:	mov    WORD PTR [r10],ax
   140006289:	mov    DWORD PTR [r10+0x2],ecx
   14000628d:	mov    QWORD PTR [r10+0x6],rdx
   140006291:	mov    rax,r11
   140006294:	ret    
   140006295:	movzx  r8,BYTE PTR [rdx]
   140006299:	movzx  rax,WORD PTR [rdx+0x1]
   14000629e:	mov    ecx,DWORD PTR [rdx+0x3]
   1400062a1:	mov    rdx,QWORD PTR [rdx+0x7]
   1400062a5:	mov    BYTE PTR [r10],r8b
   1400062a8:	mov    WORD PTR [r10+0x1],ax
   1400062ad:	mov    DWORD PTR [r10+0x3],ecx
   1400062b1:	mov    QWORD PTR [r10+0x7],rdx
   1400062b5:	mov    rax,r11
   1400062b8:	ret    
   1400062b9:	movdqu xmm0,XMMWORD PTR [rdx]
   1400062bd:	movdqu XMMWORD PTR [r10],xmm0
   1400062c2:	mov    rax,r11
   1400062c5:	ret    
   1400062c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400062d0:	data16 data16 xchg ax,ax
   1400062d4:	data16 xchg ax,ax
   1400062d7:	cmp    r9,0x2000
   1400062de:	jae    0x140006322
   1400062e0:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400062e4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400062e9:	add    rcx,0x20
   1400062ed:	mov    QWORD PTR [rcx-0x20],rax
   1400062f1:	mov    QWORD PTR [rcx-0x18],r10
   1400062f5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   1400062fa:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400062ff:	dec    r9
   140006302:	mov    QWORD PTR [rcx-0x10],rax
   140006306:	mov    QWORD PTR [rcx-0x8],r10
   14000630a:	jne    0x1400062e0
   14000630c:	and    r8,0x1f
   140006310:	jmp    0x1400060f9
   140006315:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006320:	xchg   ax,ax
   140006322:	cmp    rdx,0x1000
   140006329:	jb     0x1400062e0
   14000632b:	mov    eax,0x20
   140006330:	prefetchnta BYTE PTR [rdx+rcx*1]
   140006334:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140006339:	add    rcx,0x80
   140006340:	dec    eax
   140006342:	jne    0x140006330
   140006344:	sub    rcx,0x1000
   14000634b:	mov    eax,0x40
   140006350:	mov    r9,QWORD PTR [rdx+rcx*1]
   140006354:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140006359:	movnti QWORD PTR [rcx],r9
   14000635d:	movnti QWORD PTR [rcx+0x8],r10
   140006362:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140006367:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000636c:	movnti QWORD PTR [rcx+0x10],r9
   140006371:	movnti QWORD PTR [rcx+0x18],r10
   140006376:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000637b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140006380:	add    rcx,0x40
   140006384:	movnti QWORD PTR [rcx-0x20],r9
   140006389:	movnti QWORD PTR [rcx-0x18],r10
   14000638e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140006393:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140006398:	dec    eax
   14000639a:	movnti QWORD PTR [rcx-0x10],r9
   14000639f:	movnti QWORD PTR [rcx-0x8],r10
   1400063a4:	jne    0x140006350
   1400063a6:	sub    r8,0x1000
   1400063ad:	cmp    r8,0x1000
   1400063b4:	jae    0x14000632b
   1400063ba:	lock or BYTE PTR [rsp],0x0
   1400063bf:	jmp    0x1400060ec
   1400063c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400063d0:	data16 data16 xchg ax,ax
   1400063d4:	data16 data16 xchg ax,ax
   1400063d8:	xchg   ax,ax
   1400063da:	add    rcx,r8
   1400063dd:	test   cl,0x7
   1400063e0:	je     0x140006418
   1400063e2:	test   cl,0x1
   1400063e5:	je     0x1400063f2
   1400063e7:	dec    rcx
   1400063ea:	mov    al,BYTE PTR [rdx+rcx*1]
   1400063ed:	dec    r8
   1400063f0:	mov    BYTE PTR [rcx],al
   1400063f2:	test   cl,0x2
   1400063f5:	je     0x140006406
   1400063f7:	sub    rcx,0x2
   1400063fb:	mov    ax,WORD PTR [rdx+rcx*1]
   1400063ff:	sub    r8,0x2
   140006403:	mov    WORD PTR [rcx],ax
   140006406:	test   cl,0x4
   140006409:	je     0x140006418
   14000640b:	sub    rcx,0x4
   14000640f:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006412:	sub    r8,0x4
   140006416:	mov    DWORD PTR [rcx],eax
   140006418:	mov    r9,r8
   14000641b:	shr    r9,0x5
   14000641f:	jne    0x140006467
   140006421:	mov    r9,r8
   140006424:	shr    r9,0x3
   140006428:	je     0x14000643e
   14000642a:	sub    rcx,0x8
   14000642e:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006432:	dec    r9
   140006435:	mov    QWORD PTR [rcx],rax
   140006438:	jne    0x14000642a
   14000643a:	and    r8,0x7
   14000643e:	test   r8,r8
   140006441:	jne    0x140006450
   140006443:	mov    rax,r11
   140006446:	ret    
   140006447:	nop    WORD PTR [rax+rax*1+0x0]
   140006450:	sub    rcx,r8
   140006453:	mov    r10,rcx
   140006456:	lea    rdx,[rdx+rcx*1]
   14000645a:	jmp    0x14000612c
   14000645f:	nop
   140006460:	data16 data16 xchg ax,ax
   140006464:	data16 xchg ax,ax
   140006467:	cmp    r9,0x2000
   14000646e:	jae    0x1400064b2
   140006470:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140006475:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000647a:	sub    rcx,0x20
   14000647e:	mov    QWORD PTR [rcx+0x18],rax
   140006482:	mov    QWORD PTR [rcx+0x10],r10
   140006486:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000648b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000648f:	dec    r9
   140006492:	mov    QWORD PTR [rcx+0x8],rax
   140006496:	mov    QWORD PTR [rcx],r10
   140006499:	jne    0x140006470
   14000649b:	and    r8,0x1f
   14000649f:	jmp    0x140006421
   1400064a1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400064b0:	xchg   ax,ax
   1400064b2:	cmp    rdx,0xfffffffffffff000
   1400064b9:	ja     0x140006470
   1400064bb:	mov    eax,0x20
   1400064c0:	sub    rcx,0x80
   1400064c7:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400064cb:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400064d0:	dec    eax
   1400064d2:	jne    0x1400064c0
   1400064d4:	add    rcx,0x1000
   1400064db:	mov    eax,0x40
   1400064e0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   1400064e5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400064ea:	movnti QWORD PTR [rcx-0x8],r9
   1400064ef:	movnti QWORD PTR [rcx-0x10],r10
   1400064f4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   1400064f9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   1400064fe:	movnti QWORD PTR [rcx-0x18],r9
   140006503:	movnti QWORD PTR [rcx-0x20],r10
   140006508:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000650d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140006512:	sub    rcx,0x40
   140006516:	movnti QWORD PTR [rcx+0x18],r9
   14000651b:	movnti QWORD PTR [rcx+0x10],r10
   140006520:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140006525:	mov    r10,QWORD PTR [rdx+rcx*1]
   140006529:	dec    eax
   14000652b:	movnti QWORD PTR [rcx+0x8],r9
   140006530:	movnti QWORD PTR [rcx],r10
   140006534:	jne    0x1400064e0
   140006536:	sub    r8,0x1000
   14000653d:	cmp    r8,0x1000
   140006544:	jae    0x1400064bb
   14000654a:	lock or BYTE PTR [rsp],0x0
   14000654f:	jmp    0x140006418
   140006554:	rex push rdi
   140006556:	sub    rsp,0x20
   14000655a:	mov    r10,r8
   14000655d:	xor    r8d,r8d
   140006560:	test   r9,r9
   140006563:	jne    0x140006569
   140006565:	xor    eax,eax
   140006567:	jmp    0x1400065c8
   140006569:	test   rcx,rcx
   14000656c:	jne    0x140006583
   14000656e:	call   0x140008888
   140006573:	mov    edi,0x16
   140006578:	mov    DWORD PTR [rax],edi
   14000657a:	call   0x1400087bc
   14000657f:	mov    eax,edi
   140006581:	jmp    0x1400065c8
   140006583:	test   r10,r10
   140006586:	je     0x14000659b
   140006588:	cmp    rdx,r9
   14000658b:	jb     0x14000659b
   14000658d:	lea    r8,[r9+r9*1]
   140006591:	mov    rdx,r10
   140006594:	call   0x140006070
   140006599:	jmp    0x140006565
   14000659b:	test   rdx,rdx
   14000659e:	je     0x1400065ad
   1400065a0:	mov    rdi,rcx
   1400065a3:	movzx  eax,r8w
   1400065a7:	mov    rcx,rdx
   1400065aa:	rep stos WORD PTR es:[rdi],ax
   1400065ad:	test   r10,r10
   1400065b0:	je     0x14000656e
   1400065b2:	cmp    rdx,r9
   1400065b5:	jae    0x1400065c3
   1400065b7:	call   0x140008888
   1400065bc:	mov    edi,0x22
   1400065c1:	jmp    0x140006578
   1400065c3:	mov    eax,0x16
   1400065c8:	add    rsp,0x20
   1400065cc:	pop    rdi
   1400065cd:	ret    
   1400065ce:	int3   
   1400065cf:	int3   
   1400065d0:	rex push rbx
   1400065d2:	sub    rsp,0x20
   1400065d6:	mov    edx,0x8
   1400065db:	lea    ecx,[rdx+0x18]
   1400065de:	call   0x140008a3c
   1400065e3:	mov    rcx,rax
   1400065e6:	mov    rbx,rax
   1400065e9:	call   QWORD PTR [rip+0xcbb9]        # 0x1400131a8
   1400065ef:	mov    QWORD PTR [rip+0x192fa],rax        # 0x14001f8f0
   1400065f6:	mov    QWORD PTR [rip+0x192eb],rax        # 0x14001f8e8
   1400065fd:	test   rbx,rbx
   140006600:	jne    0x140006607
   140006602:	lea    eax,[rbx+0x18]
   140006605:	jmp    0x14000660d
   140006607:	and    QWORD PTR [rbx],0x0
   14000660b:	xor    eax,eax
   14000660d:	add    rsp,0x20
   140006611:	pop    rbx
   140006612:	ret    
   140006613:	int3   
   140006614:	mov    QWORD PTR [rsp+0x8],rbx
   140006619:	mov    QWORD PTR [rsp+0x10],rsi
   14000661e:	mov    QWORD PTR [rsp+0x18],rdi
   140006623:	push   r12
   140006625:	push   r14
   140006627:	push   r15
   140006629:	sub    rsp,0x20
   14000662d:	mov    r12,rcx
   140006630:	call   0x1400075bc
   140006635:	nop
   140006636:	mov    rcx,QWORD PTR [rip+0x192b3]        # 0x14001f8f0
   14000663d:	call   QWORD PTR [rip+0xcb6d]        # 0x1400131b0
   140006643:	mov    r14,rax
   140006646:	mov    rcx,QWORD PTR [rip+0x1929b]        # 0x14001f8e8
   14000664d:	call   QWORD PTR [rip+0xcb5d]        # 0x1400131b0
   140006653:	mov    rbx,rax
   140006656:	cmp    rax,r14
   140006659:	jb     0x1400066fa
   14000665f:	mov    rdi,rax
   140006662:	sub    rdi,r14
   140006665:	lea    r15,[rdi+0x8]
   140006669:	cmp    r15,0x8
   14000666d:	jb     0x1400066fa
   140006673:	mov    rcx,r14
   140006676:	call   0x140008a00
   14000667b:	mov    rsi,rax
   14000667e:	cmp    rax,r15
   140006681:	jae    0x1400066d8
   140006683:	mov    edx,0x1000
   140006688:	cmp    rax,rdx
   14000668b:	cmovb  rdx,rax
   14000668f:	add    rdx,rax
   140006692:	cmp    rdx,rax
   140006695:	jb     0x1400066a8
   140006697:	mov    rcx,r14
   14000669a:	call   0x140008b38
   14000669f:	xor    ebx,ebx
   1400066a1:	test   rax,rax
   1400066a4:	jne    0x1400066c0
   1400066a6:	jmp    0x1400066aa
   1400066a8:	xor    ebx,ebx
   1400066aa:	lea    rdx,[rsi+0x20]
   1400066ae:	cmp    rdx,rsi
   1400066b1:	jb     0x1400066fc
   1400066b3:	mov    rcx,r14
   1400066b6:	call   0x140008b38
   1400066bb:	test   rax,rax
   1400066be:	je     0x1400066fc
   1400066c0:	sar    rdi,0x3
   1400066c4:	lea    rbx,[rax+rdi*8]
   1400066c8:	mov    rcx,rax
   1400066cb:	call   QWORD PTR [rip+0xcad7]        # 0x1400131a8
   1400066d1:	mov    QWORD PTR [rip+0x19218],rax        # 0x14001f8f0
   1400066d8:	mov    rcx,r12
   1400066db:	call   QWORD PTR [rip+0xcac7]        # 0x1400131a8
   1400066e1:	mov    QWORD PTR [rbx],rax
   1400066e4:	lea    rcx,[rbx+0x8]
   1400066e8:	call   QWORD PTR [rip+0xcaba]        # 0x1400131a8
   1400066ee:	mov    QWORD PTR [rip+0x191f3],rax        # 0x14001f8e8
   1400066f5:	mov    rbx,r12
   1400066f8:	jmp    0x1400066fc
   1400066fa:	xor    ebx,ebx
   1400066fc:	call   0x1400075c8
   140006701:	mov    rax,rbx
   140006704:	mov    rbx,QWORD PTR [rsp+0x40]
   140006709:	mov    rsi,QWORD PTR [rsp+0x48]
   14000670e:	mov    rdi,QWORD PTR [rsp+0x50]
   140006713:	add    rsp,0x20
   140006717:	pop    r15
   140006719:	pop    r14
   14000671b:	pop    r12
   14000671d:	ret    
   14000671e:	int3   
   14000671f:	int3   
   140006720:	sub    rsp,0x28
   140006724:	call   0x140006614
   140006729:	neg    rax
   14000672c:	sbb    eax,eax
   14000672e:	neg    eax
   140006730:	dec    eax
   140006732:	add    rsp,0x28
   140006736:	ret    
   140006737:	int3   
   140006738:	sub    rsp,0x38
   14000673c:	mov    QWORD PTR [rsp+0x20],r9
   140006741:	xor    r9d,r9d
   140006744:	call   0x140006750
   140006749:	add    rsp,0x38
   14000674d:	ret    
   14000674e:	int3   
   14000674f:	int3   
   140006750:	mov    rax,rsp
   140006753:	mov    QWORD PTR [rax+0x8],rbx
   140006757:	mov    QWORD PTR [rax+0x10],rbp
   14000675b:	mov    QWORD PTR [rax+0x18],rsi
   14000675f:	push   rdi
   140006760:	sub    rsp,0x50
   140006764:	and    QWORD PTR [rax-0x38],0x0
   140006769:	mov    rbx,rdx
   14000676c:	xor    edx,edx
   14000676e:	mov    rsi,r8
   140006771:	mov    rdi,rcx
   140006774:	lea    r8d,[rdx+0x28]
   140006778:	lea    rcx,[rax-0x30]
   14000677c:	mov    rbp,r9
   14000677f:	call   0x1400099c0
   140006784:	test   rsi,rsi
   140006787:	jne    0x14000679e
   140006789:	call   0x140008888
   14000678e:	mov    DWORD PTR [rax],0x16
   140006794:	call   0x1400087bc
   140006799:	or     eax,0xffffffff
   14000679c:	jmp    0x140006806
   14000679e:	test   rbx,rbx
   1400067a1:	je     0x1400067a8
   1400067a3:	test   rdi,rdi
   1400067a6:	je     0x140006789
   1400067a8:	mov    r9,QWORD PTR [rsp+0x80]
   1400067b0:	mov    eax,0x7fffffff
   1400067b5:	lea    rcx,[rsp+0x20]
   1400067ba:	cmp    rbx,rax
   1400067bd:	mov    r8,rbp
   1400067c0:	mov    rdx,rsi
   1400067c3:	cmova  ebx,eax
   1400067c6:	mov    DWORD PTR [rsp+0x38],0x42
   1400067ce:	mov    QWORD PTR [rsp+0x30],rdi
   1400067d3:	mov    DWORD PTR [rsp+0x28],ebx
   1400067d7:	mov    QWORD PTR [rsp+0x20],rdi
   1400067dc:	call   0x140008dfc
   1400067e1:	mov    ebx,eax
   1400067e3:	test   rdi,rdi
   1400067e6:	je     0x140006806
   1400067e8:	dec    DWORD PTR [rsp+0x28]
   1400067ec:	js     0x1400067f8
   1400067ee:	mov    rax,QWORD PTR [rsp+0x20]
   1400067f3:	mov    BYTE PTR [rax],0x0
   1400067f6:	jmp    0x140006804
   1400067f8:	lea    rdx,[rsp+0x20]
   1400067fd:	xor    ecx,ecx
   1400067ff:	call   0x140008bbc
   140006804:	mov    eax,ebx
   140006806:	mov    rbx,QWORD PTR [rsp+0x60]
   14000680b:	mov    rbp,QWORD PTR [rsp+0x68]
   140006810:	mov    rsi,QWORD PTR [rsp+0x70]
   140006815:	add    rsp,0x50
   140006819:	pop    rdi
   14000681a:	ret    
   14000681b:	int3   
   14000681c:	sub    rsp,0x28
   140006820:	mov    rcx,QWORD PTR [rip+0x16e29]        # 0x14001d650
   140006827:	call   QWORD PTR [rip+0xc983]        # 0x1400131b0
   14000682d:	test   rax,rax
   140006830:	je     0x140006834
   140006832:	call   rax
   140006834:	mov    ecx,0x19
   140006839:	call   0x1400077ec
   14000683e:	mov    edx,0x1
   140006843:	xor    ecx,ecx
   140006845:	call   0x140009acc
   14000684a:	call   0x140009ae8
   14000684f:	int3   
   140006850:	mov    QWORD PTR [rsp+0x8],rbx
   140006855:	mov    QWORD PTR [rsp+0x10],rsi
   14000685a:	push   rdi
   14000685b:	sub    rsp,0x20
   14000685f:	mov    rbx,r9
   140006862:	mov    rsi,r8
   140006865:	mov    rdi,rdx
   140006868:	test   r9,r9
   14000686b:	jne    0x140006871
   14000686d:	xor    eax,eax
   14000686f:	jmp    0x1400068c7
   140006871:	test   rcx,rcx
   140006874:	jne    0x14000688b
   140006876:	call   0x140008888
   14000687b:	mov    ebx,0x16
   140006880:	mov    DWORD PTR [rax],ebx
   140006882:	call   0x1400087bc
   140006887:	mov    eax,ebx
   140006889:	jmp    0x1400068c7
   14000688b:	test   r8,r8
   14000688e:	je     0x1400068a2
   140006890:	cmp    rdx,rbx
   140006893:	jb     0x1400068a2
   140006895:	mov    r8,rbx
   140006898:	mov    rdx,rsi
   14000689b:	call   0x140006070
   1400068a0:	jmp    0x14000686d
   1400068a2:	mov    r8,rdx
   1400068a5:	xor    edx,edx
   1400068a7:	call   0x1400099c0
   1400068ac:	test   rsi,rsi
   1400068af:	je     0x140006876
   1400068b1:	cmp    rdi,rbx
   1400068b4:	jae    0x1400068c2
   1400068b6:	call   0x140008888
   1400068bb:	mov    ebx,0x22
   1400068c0:	jmp    0x140006880
   1400068c2:	mov    eax,0x16
   1400068c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068cc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400068d1:	add    rsp,0x20
   1400068d5:	pop    rdi
   1400068d6:	ret    
   1400068d7:	int3   
   1400068d8:	sub    rsp,0x28
   1400068dc:	mov    rax,rdx
   1400068df:	lea    rdx,[rcx+0x11]
   1400068e3:	lea    rcx,[rax+0x11]
   1400068e7:	call   0x140009b60
   1400068ec:	test   eax,eax
   1400068ee:	sete   al
   1400068f1:	add    rsp,0x28
   1400068f5:	ret    
   1400068f6:	int3   
   1400068f7:	int3   
   1400068f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400068fd:	push   rdi
   1400068fe:	sub    rsp,0x20
   140006902:	lea    rax,[rip+0xcc27]        # 0x140013530
   140006909:	mov    ebx,edx
   14000690b:	mov    rdi,rcx
   14000690e:	mov    QWORD PTR [rcx],rax
   140006911:	call   0x140009bc8
   140006916:	test   bl,0x1
   140006919:	je     0x140006923
   14000691b:	mov    rcx,rdi
   14000691e:	call   0x140005fbc
   140006923:	mov    rax,rdi
   140006926:	mov    rbx,QWORD PTR [rsp+0x30]
   14000692b:	add    rsp,0x20
   14000692f:	pop    rdi
   140006930:	ret    
   140006931:	int3   
   140006932:	int3   
   140006933:	int3   
   140006934:	rex push rbx
   140006936:	sub    rsp,0x20
   14000693a:	mov    rbx,rcx
   14000693d:	call   0x140009d38
   140006942:	lea    rax,[rip+0xcbf7]        # 0x140013540
   140006949:	mov    QWORD PTR [rbx],rax
   14000694c:	mov    rax,rbx
   14000694f:	add    rsp,0x20
   140006953:	pop    rbx
   140006954:	ret    
   140006955:	int3   
   140006956:	int3   
   140006957:	int3   
   140006958:	lea    rax,[rip+0xcbe1]        # 0x140013540
   14000695f:	mov    QWORD PTR [rcx],rax
   140006962:	jmp    0x140009d64
   140006967:	int3   
   140006968:	rex push rbx
   14000696a:	sub    rsp,0x40
   14000696e:	mov    rbx,rcx
   140006971:	jmp    0x140006982
   140006973:	mov    rcx,rbx
   140006976:	call   0x140009e8c
   14000697b:	test   eax,eax
   14000697d:	je     0x140006992
   14000697f:	mov    rcx,rbx
   140006982:	call   0x140009c34
   140006987:	test   rax,rax
   14000698a:	je     0x140006973
   14000698c:	add    rsp,0x40
   140006990:	pop    rbx
   140006991:	ret    
   140006992:	lea    rax,[rip+0xcbb7]        # 0x140013550
   140006999:	lea    rdx,[rsp+0x58]
   14000699e:	lea    rcx,[rsp+0x20]
   1400069a3:	mov    r8d,0x1
   1400069a9:	mov    QWORD PTR [rsp+0x58],rax
   1400069ae:	call   0x140009d1c
   1400069b3:	lea    rax,[rip+0xcb86]        # 0x140013540
   1400069ba:	lea    rdx,[rip+0x132c7]        # 0x140019c88
   1400069c1:	lea    rcx,[rsp+0x20]
   1400069c6:	mov    QWORD PTR [rsp+0x20],rax
   1400069cb:	call   0x140009ec8
   1400069d0:	int3   
   1400069d1:	int3   
   1400069d2:	int3   
   1400069d3:	int3   
   1400069d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400069d9:	push   rdi
   1400069da:	sub    rsp,0x20
   1400069de:	lea    rax,[rip+0xcb5b]        # 0x140013540
   1400069e5:	mov    ebx,edx
   1400069e7:	mov    rdi,rcx
   1400069ea:	mov    QWORD PTR [rcx],rax
   1400069ed:	call   0x140009d64
   1400069f2:	test   bl,0x1
   1400069f5:	je     0x1400069ff
   1400069f7:	mov    rcx,rdi
   1400069fa:	call   0x140005fbc
   1400069ff:	mov    rax,rdi
   140006a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a07:	add    rsp,0x20
   140006a0b:	pop    rdi
   140006a0c:	ret    
   140006a0d:	int3   
   140006a0e:	int3   
   140006a0f:	int3   
   140006a10:	int3   
   140006a11:	int3   
   140006a12:	int3   
   140006a13:	int3   
   140006a14:	int3   
   140006a15:	int3   
   140006a16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006a20:	sub    rdx,rcx
   140006a23:	test   r8,r8
   140006a26:	je     0x140006a92
   140006a28:	test   ecx,0x7
   140006a2e:	je     0x140006a4d
   140006a30:	movzx  eax,BYTE PTR [rcx]
   140006a33:	cmp    al,BYTE PTR [rcx+rdx*1]
   140006a36:	jne    0x140006a95
   140006a38:	inc    rcx
   140006a3b:	dec    r8
   140006a3e:	je     0x140006a92
   140006a40:	test   al,al
   140006a42:	je     0x140006a92
   140006a44:	test   rcx,0x7
   140006a4b:	jne    0x140006a30
   140006a4d:	movabs r11,0x8080808080808080
   140006a57:	movabs r10,0xfefefefefefefeff
   140006a61:	lea    eax,[rcx+rdx*1]
   140006a64:	and    eax,0xfff
   140006a69:	cmp    eax,0xff8
   140006a6e:	ja     0x140006a30
   140006a70:	mov    rax,QWORD PTR [rcx]
   140006a73:	cmp    rax,QWORD PTR [rcx+rdx*1]
   140006a77:	jne    0x140006a30
   140006a79:	add    rcx,0x8
   140006a7d:	sub    r8,0x8
   140006a81:	jbe    0x140006a92
   140006a83:	lea    r9,[rax+r10*1]
   140006a87:	not    rax
   140006a8a:	and    rax,r9
   140006a8d:	test   r11,rax
   140006a90:	je     0x140006a61
   140006a92:	xor    eax,eax
   140006a94:	ret    
   140006a95:	sbb    rax,rax
   140006a98:	or     rax,0x1
   140006a9c:	ret    
   140006a9d:	int3   
   140006a9e:	int3   
   140006a9f:	int3   
   140006aa0:	test   rcx,rcx
   140006aa3:	je     0x140006adc
   140006aa5:	push   rbx
   140006aa6:	sub    rsp,0x20
   140006aaa:	mov    r8,rcx
   140006aad:	mov    rcx,QWORD PTR [rip+0x16a64]        # 0x14001d518
   140006ab4:	xor    edx,edx
   140006ab6:	call   QWORD PTR [rip+0xc954]        # 0x140013410
   140006abc:	test   eax,eax
   140006abe:	jne    0x140006ad7
   140006ac0:	call   0x140008888
   140006ac5:	mov    rbx,rax
   140006ac8:	call   QWORD PTR [rip+0xc66a]        # 0x140013138
   140006ace:	mov    ecx,eax
   140006ad0:	call   0x1400088a8
   140006ad5:	mov    DWORD PTR [rbx],eax
   140006ad7:	add    rsp,0x20
   140006adb:	pop    rbx
   140006adc:	ret    
   140006add:	int3   
   140006ade:	int3   
   140006adf:	int3   
   140006ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ae5:	mov    QWORD PTR [rsp+0x10],rsi
   140006aea:	push   rdi
   140006aeb:	sub    rsp,0x20
   140006aef:	xor    edi,edi
   140006af1:	mov    rbx,rdx
   140006af4:	mov    rsi,rcx
   140006af7:	test   rdx,rdx
   140006afa:	je     0x140006b19
   140006afc:	xor    edx,edx
   140006afe:	lea    rax,[rdi-0x20]
   140006b02:	div    rbx
   140006b05:	cmp    rax,r8
   140006b08:	jae    0x140006b19
   140006b0a:	call   0x140008888
   140006b0f:	mov    DWORD PTR [rax],0xc
   140006b15:	xor    eax,eax
   140006b17:	jmp    0x140006b56
   140006b19:	imul   rbx,r8
   140006b1d:	test   rcx,rcx
   140006b20:	je     0x140006b2a
   140006b22:	call   0x140008a00
   140006b27:	mov    rdi,rax
   140006b2a:	mov    rdx,rbx
   140006b2d:	mov    rcx,rsi
   140006b30:	call   0x140009fa8
   140006b35:	mov    rsi,rax
   140006b38:	test   rax,rax
   140006b3b:	je     0x140006b53
   140006b3d:	cmp    rdi,rbx
   140006b40:	jae    0x140006b53
   140006b42:	sub    rbx,rdi
   140006b45:	lea    rcx,[rdi+rax*1]
   140006b49:	xor    edx,edx
   140006b4b:	mov    r8,rbx
   140006b4e:	call   0x1400099c0
   140006b53:	mov    rax,rsi
   140006b56:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b5b:	mov    rsi,QWORD PTR [rsp+0x38]
   140006b60:	add    rsp,0x20
   140006b64:	pop    rdi
   140006b65:	ret    
   140006b66:	int3   
   140006b67:	int3   
   140006b68:	sub    rsp,0x38
   140006b6c:	mov    QWORD PTR [rsp+0x20],r9
   140006b71:	xor    r9d,r9d
   140006b74:	call   0x140006b80
   140006b79:	add    rsp,0x38
   140006b7d:	ret    
   140006b7e:	int3   
   140006b7f:	int3   
   140006b80:	mov    rax,rsp
   140006b83:	mov    QWORD PTR [rax+0x8],rbx
   140006b87:	mov    QWORD PTR [rax+0x10],rsi
   140006b8b:	mov    QWORD PTR [rax+0x18],rdi
   140006b8f:	mov    QWORD PTR [rax+0x20],r14
   140006b93:	push   rbp
   140006b94:	mov    rbp,rsp
   140006b97:	sub    rsp,0x50
   140006b9b:	and    QWORD PTR [rbp-0x30],0x0
   140006ba0:	mov    rdi,rdx
   140006ba3:	xor    edx,edx
   140006ba5:	mov    rsi,r8
   140006ba8:	mov    rbx,rcx
   140006bab:	lea    r8d,[rdx+0x28]
   140006baf:	lea    rcx,[rbp-0x28]
   140006bb3:	mov    r14,r9
   140006bb6:	call   0x1400099c0
   140006bbb:	test   rsi,rsi
   140006bbe:	jne    0x140006bd8
   140006bc0:	call   0x140008888
   140006bc5:	mov    DWORD PTR [rax],0x16
   140006bcb:	call   0x1400087bc
   140006bd0:	or     eax,0xffffffff
   140006bd3:	jmp    0x140006c62
   140006bd8:	test   rdi,rdi
   140006bdb:	je     0x140006be2
   140006bdd:	test   rbx,rbx
   140006be0:	je     0x140006bc0
   140006be2:	mov    DWORD PTR [rbp-0x18],0x42
   140006be9:	mov    QWORD PTR [rbp-0x20],rbx
   140006bed:	mov    QWORD PTR [rbp-0x30],rbx
   140006bf1:	cmp    rdi,0x3fffffff
   140006bf8:	jbe    0x140006c03
   140006bfa:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140006c01:	jmp    0x140006c09
   140006c03:	lea    eax,[rdi+rdi*1]
   140006c06:	mov    DWORD PTR [rbp-0x28],eax
   140006c09:	mov    r9,QWORD PTR [rbp+0x30]
   140006c0d:	lea    rcx,[rbp-0x30]
   140006c11:	mov    r8,r14
   140006c14:	mov    rdx,rsi
   140006c17:	call   0x14000a07c
   140006c1c:	mov    edi,eax
   140006c1e:	test   rbx,rbx
   140006c21:	je     0x140006c62
   140006c23:	dec    DWORD PTR [rbp-0x28]
   140006c26:	js     0x140006c3c
   140006c28:	mov    rax,QWORD PTR [rbp-0x30]
   140006c2c:	mov    BYTE PTR [rax],0x0
   140006c2f:	mov    rax,QWORD PTR [rbp-0x30]
   140006c33:	inc    rax
   140006c36:	mov    QWORD PTR [rbp-0x30],rax
   140006c3a:	jmp    0x140006c4b
   140006c3c:	lea    rdx,[rbp-0x30]
   140006c40:	xor    ecx,ecx
   140006c42:	call   0x140008bbc
   140006c47:	mov    rax,QWORD PTR [rbp-0x30]
   140006c4b:	dec    DWORD PTR [rbp-0x28]
   140006c4e:	js     0x140006c55
   140006c50:	mov    BYTE PTR [rax],0x0
   140006c53:	jmp    0x140006c60
   140006c55:	lea    rdx,[rbp-0x30]
   140006c59:	xor    ecx,ecx
   140006c5b:	call   0x140008bbc
   140006c60:	mov    eax,edi
   140006c62:	mov    rbx,QWORD PTR [rsp+0x60]
   140006c67:	mov    rsi,QWORD PTR [rsp+0x68]
   140006c6c:	mov    rdi,QWORD PTR [rsp+0x70]
   140006c71:	mov    r14,QWORD PTR [rsp+0x78]
   140006c76:	add    rsp,0x50
   140006c7a:	pop    rbp
   140006c7b:	ret    
   140006c7c:	rex push rbx
   140006c7e:	sub    rsp,0x20
   140006c82:	mov    rbx,rcx
   140006c85:	call   QWORD PTR [rip+0xc535]        # 0x1400131c0
   140006c8b:	mov    ecx,0x1
   140006c90:	mov    DWORD PTR [rip+0x161ea],eax        # 0x14001ce80
   140006c96:	call   0x14000ac4c
   140006c9b:	mov    rcx,rbx
   140006c9e:	call   0x14000ade0
   140006ca3:	cmp    DWORD PTR [rip+0x161d6],0x0        # 0x14001ce80
   140006caa:	jne    0x140006cb6
   140006cac:	mov    ecx,0x1
   140006cb1:	call   0x14000ac4c
   140006cb6:	mov    ecx,0xc0000409
   140006cbb:	add    rsp,0x20
   140006cbf:	pop    rbx
   140006cc0:	jmp    0x14000adc0
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	mov    QWORD PTR [rsp+0x8],rcx
   140006ccd:	sub    rsp,0x38
   140006cd1:	mov    ecx,0x17
   140006cd6:	call   0x14000f5e0
   140006cdb:	test   eax,eax
   140006cdd:	je     0x140006ce6
   140006cdf:	mov    ecx,0x2
   140006ce4:	int    0x29
   140006ce6:	lea    rcx,[rip+0x15cc3]        # 0x14001c9b0
   140006ced:	call   0x14000acc4
   140006cf2:	mov    rax,QWORD PTR [rsp+0x38]
   140006cf7:	mov    QWORD PTR [rip+0x15daa],rax        # 0x14001caa8
   140006cfe:	lea    rax,[rsp+0x38]
   140006d03:	add    rax,0x8
   140006d07:	mov    QWORD PTR [rip+0x15d3a],rax        # 0x14001ca48
   140006d0e:	mov    rax,QWORD PTR [rip+0x15d93]        # 0x14001caa8
   140006d15:	mov    QWORD PTR [rip+0x15c04],rax        # 0x14001c920
   140006d1c:	mov    rax,QWORD PTR [rsp+0x40]
   140006d21:	mov    QWORD PTR [rip+0x15d08],rax        # 0x14001ca30
   140006d28:	mov    DWORD PTR [rip+0x15bde],0xc0000409        # 0x14001c910
   140006d32:	mov    DWORD PTR [rip+0x15bd8],0x1        # 0x14001c914
   140006d3c:	mov    DWORD PTR [rip+0x15be2],0x1        # 0x14001c928
   140006d46:	mov    eax,0x8
   140006d4b:	imul   rax,rax,0x0
   140006d4f:	lea    rcx,[rip+0x15bda]        # 0x14001c930
   140006d56:	mov    QWORD PTR [rcx+rax*1],0x2
   140006d5e:	mov    eax,0x8
   140006d63:	imul   rax,rax,0x0
   140006d67:	mov    rcx,QWORD PTR [rip+0x1431a]        # 0x14001b088
   140006d6e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140006d73:	mov    eax,0x8
   140006d78:	imul   rax,rax,0x1
   140006d7c:	mov    rcx,QWORD PTR [rip+0x1430d]        # 0x14001b090
   140006d83:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140006d88:	lea    rcx,[rip+0xc7d1]        # 0x140013560
   140006d8f:	call   0x140006c7c
   140006d94:	add    rsp,0x38
   140006d98:	ret    
   140006d99:	int3   
   140006d9a:	int3   
   140006d9b:	int3   
   140006d9c:	sub    rsp,0x28
   140006da0:	mov    ecx,0x8
   140006da5:	call   0x140006db0
   140006daa:	add    rsp,0x28
   140006dae:	ret    
   140006daf:	int3   
   140006db0:	mov    DWORD PTR [rsp+0x8],ecx
   140006db4:	sub    rsp,0x28
   140006db8:	mov    ecx,0x17
   140006dbd:	call   0x14000f5e0
   140006dc2:	test   eax,eax
   140006dc4:	je     0x140006dce
   140006dc6:	mov    eax,DWORD PTR [rsp+0x30]
   140006dca:	mov    ecx,eax
   140006dcc:	int    0x29
   140006dce:	lea    rcx,[rip+0x15bdb]        # 0x14001c9b0
   140006dd5:	call   0x14000ac54
   140006dda:	mov    rax,QWORD PTR [rsp+0x28]
   140006ddf:	mov    QWORD PTR [rip+0x15cc2],rax        # 0x14001caa8
   140006de6:	lea    rax,[rsp+0x28]
   140006deb:	add    rax,0x8
   140006def:	mov    QWORD PTR [rip+0x15c52],rax        # 0x14001ca48
   140006df6:	mov    rax,QWORD PTR [rip+0x15cab]        # 0x14001caa8
   140006dfd:	mov    QWORD PTR [rip+0x15b1c],rax        # 0x14001c920
   140006e04:	mov    DWORD PTR [rip+0x15b02],0xc0000409        # 0x14001c910
   140006e0e:	mov    DWORD PTR [rip+0x15afc],0x1        # 0x14001c914
   140006e18:	mov    DWORD PTR [rip+0x15b06],0x1        # 0x14001c928
   140006e22:	mov    eax,0x8
   140006e27:	imul   rax,rax,0x0
   140006e2b:	lea    rcx,[rip+0x15afe]        # 0x14001c930
   140006e32:	mov    edx,DWORD PTR [rsp+0x30]
   140006e36:	mov    QWORD PTR [rcx+rax*1],rdx
   140006e3a:	lea    rcx,[rip+0xc71f]        # 0x140013560
   140006e41:	call   0x140006c7c
   140006e46:	add    rsp,0x28
   140006e4a:	ret    
   140006e4b:	int3   
   140006e4c:	sub    rsp,0x28
   140006e50:	mov    rax,QWORD PTR [rcx]
   140006e53:	cmp    DWORD PTR [rax],0xe06d7363
   140006e59:	jne    0x140006e77
   140006e5b:	cmp    DWORD PTR [rax+0x18],0x4
   140006e5f:	jne    0x140006e77
   140006e61:	mov    ecx,DWORD PTR [rax+0x20]
   140006e64:	lea    eax,[rcx-0x19930520]
   140006e6a:	cmp    eax,0x2
   140006e6d:	jbe    0x140006e7e
   140006e6f:	cmp    ecx,0x1994000
   140006e75:	je     0x140006e7e
   140006e77:	xor    eax,eax
   140006e79:	add    rsp,0x28
   140006e7d:	ret    
   140006e7e:	call   0x14000ae20
   140006e83:	int3   
   140006e84:	sub    rsp,0x28
   140006e88:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140006e4c
   140006e8f:	call   0x14000adb8
   140006e94:	xor    eax,eax
   140006e96:	add    rsp,0x28
   140006e9a:	ret    
   140006e9b:	int3   
   140006e9c:	mov    QWORD PTR [rsp+0x8],rbx
   140006ea1:	mov    QWORD PTR [rsp+0x10],rbp
   140006ea6:	mov    QWORD PTR [rsp+0x18],rsi
   140006eab:	push   rdi
   140006eac:	sub    rsp,0x20
   140006eb0:	mov    rsi,rdx
   140006eb3:	mov    edi,ecx
   140006eb5:	call   0x1400071c0
   140006eba:	xor    r9d,r9d
   140006ebd:	mov    rbx,rax
   140006ec0:	test   rax,rax
   140006ec3:	je     0x140007051
   140006ec9:	mov    rdx,QWORD PTR [rax+0xa0]
   140006ed0:	mov    rcx,rdx
   140006ed3:	cmp    DWORD PTR [rcx],edi
   140006ed5:	je     0x140006ee7
   140006ed7:	lea    rax,[rdx+0xc0]
   140006ede:	add    rcx,0x10
   140006ee2:	cmp    rcx,rax
   140006ee5:	jb     0x140006ed3
   140006ee7:	lea    rax,[rdx+0xc0]
   140006eee:	cmp    rcx,rax
   140006ef1:	jae    0x140006ef7
   140006ef3:	cmp    DWORD PTR [rcx],edi
   140006ef5:	je     0x140006efa
   140006ef7:	mov    rcx,r9
   140006efa:	test   rcx,rcx
   140006efd:	je     0x140007051
   140006f03:	mov    r8,QWORD PTR [rcx+0x8]
   140006f07:	test   r8,r8
   140006f0a:	je     0x140007051
   140006f10:	cmp    r8,0x5
   140006f14:	jne    0x140006f23
   140006f16:	mov    QWORD PTR [rcx+0x8],r9
   140006f1a:	lea    eax,[r8-0x4]
   140006f1e:	jmp    0x140007053
   140006f23:	cmp    r8,0x1
   140006f27:	jne    0x140006f31
   140006f29:	or     eax,0xffffffff
   140006f2c:	jmp    0x140007053
   140006f31:	mov    rbp,QWORD PTR [rbx+0xa8]
   140006f38:	mov    QWORD PTR [rbx+0xa8],rsi
   140006f3f:	cmp    DWORD PTR [rcx+0x4],0x8
   140006f43:	jne    0x14000703b
   140006f49:	mov    edx,0x30
   140006f4e:	mov    rax,QWORD PTR [rbx+0xa0]
   140006f55:	add    rdx,0x10
   140006f59:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140006f5e:	cmp    rdx,0xc0
   140006f65:	jl     0x140006f4e
   140006f67:	cmp    DWORD PTR [rcx],0xc000008e
   140006f6d:	mov    edi,DWORD PTR [rbx+0xb0]
   140006f73:	jne    0x140006f84
   140006f75:	mov    DWORD PTR [rbx+0xb0],0x83
   140006f7f:	jmp    0x140007025
   140006f84:	cmp    DWORD PTR [rcx],0xc0000090
   140006f8a:	jne    0x140006f9b
   140006f8c:	mov    DWORD PTR [rbx+0xb0],0x81
   140006f96:	jmp    0x140007025
   140006f9b:	cmp    DWORD PTR [rcx],0xc0000091
   140006fa1:	jne    0x140006faf
   140006fa3:	mov    DWORD PTR [rbx+0xb0],0x84
   140006fad:	jmp    0x140007025
   140006faf:	cmp    DWORD PTR [rcx],0xc0000093
   140006fb5:	jne    0x140006fc3
   140006fb7:	mov    DWORD PTR [rbx+0xb0],0x85
   140006fc1:	jmp    0x140007025
   140006fc3:	cmp    DWORD PTR [rcx],0xc000008d
   140006fc9:	jne    0x140006fd7
   140006fcb:	mov    DWORD PTR [rbx+0xb0],0x82
   140006fd5:	jmp    0x140007025
   140006fd7:	cmp    DWORD PTR [rcx],0xc000008f
   140006fdd:	jne    0x140006feb
   140006fdf:	mov    DWORD PTR [rbx+0xb0],0x86
   140006fe9:	jmp    0x140007025
   140006feb:	cmp    DWORD PTR [rcx],0xc0000092
   140006ff1:	jne    0x140006fff
   140006ff3:	mov    DWORD PTR [rbx+0xb0],0x8a
   140006ffd:	jmp    0x140007025
   140006fff:	cmp    DWORD PTR [rcx],0xc00002b5
   140007005:	jne    0x140007013
   140007007:	mov    DWORD PTR [rbx+0xb0],0x8d
   140007011:	jmp    0x140007025
   140007013:	cmp    DWORD PTR [rcx],0xc00002b4
   140007019:	jne    0x140007025
   14000701b:	mov    DWORD PTR [rbx+0xb0],0x8e
   140007025:	mov    edx,DWORD PTR [rbx+0xb0]
   14000702b:	mov    ecx,0x8
   140007030:	call   r8
   140007033:	mov    DWORD PTR [rbx+0xb0],edi
   140007039:	jmp    0x140007045
   14000703b:	mov    QWORD PTR [rcx+0x8],r9
   14000703f:	mov    ecx,DWORD PTR [rcx+0x4]
   140007042:	call   r8
   140007045:	mov    QWORD PTR [rbx+0xa8],rbp
   14000704c:	jmp    0x140006f29
   140007051:	xor    eax,eax
   140007053:	mov    rbx,QWORD PTR [rsp+0x30]
   140007058:	mov    rbp,QWORD PTR [rsp+0x38]
   14000705d:	mov    rsi,QWORD PTR [rsp+0x40]
   140007062:	add    rsp,0x20
   140007066:	pop    rdi
   140007067:	ret    
   140007068:	test   rcx,rcx
   14000706b:	je     0x14000719a
   140007071:	mov    QWORD PTR [rsp+0x10],rbx
   140007076:	push   rdi
   140007077:	sub    rsp,0x20
   14000707b:	mov    rbx,rcx
   14000707e:	mov    rcx,QWORD PTR [rcx+0x38]
   140007082:	test   rcx,rcx
   140007085:	je     0x14000708c
   140007087:	call   0x140006aa0
   14000708c:	mov    rcx,QWORD PTR [rbx+0x48]
   140007090:	test   rcx,rcx
   140007093:	je     0x14000709a
   140007095:	call   0x140006aa0
   14000709a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000709e:	test   rcx,rcx
   1400070a1:	je     0x1400070a8
   1400070a3:	call   0x140006aa0
   1400070a8:	mov    rcx,QWORD PTR [rbx+0x68]
   1400070ac:	test   rcx,rcx
   1400070af:	je     0x1400070b6
   1400070b1:	call   0x140006aa0
   1400070b6:	mov    rcx,QWORD PTR [rbx+0x70]
   1400070ba:	test   rcx,rcx
   1400070bd:	je     0x1400070c4
   1400070bf:	call   0x140006aa0
   1400070c4:	mov    rcx,QWORD PTR [rbx+0x78]
   1400070c8:	test   rcx,rcx
   1400070cb:	je     0x1400070d2
   1400070cd:	call   0x140006aa0
   1400070d2:	mov    rcx,QWORD PTR [rbx+0x80]
   1400070d9:	test   rcx,rcx
   1400070dc:	je     0x1400070e3
   1400070de:	call   0x140006aa0
   1400070e3:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400070ea:	lea    rax,[rip+0xc47f]        # 0x140013570
   1400070f1:	cmp    rcx,rax
   1400070f4:	je     0x1400070fb
   1400070f6:	call   0x140006aa0
   1400070fb:	mov    edi,0xd
   140007100:	mov    ecx,edi
   140007102:	call   0x14000ae60
   140007107:	nop
   140007108:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000710f:	mov    QWORD PTR [rsp+0x30],rcx
   140007114:	test   rcx,rcx
   140007117:	je     0x140007135
   140007119:	lock dec DWORD PTR [rcx]
   14000711c:	jne    0x140007135
   14000711e:	lea    rax,[rip+0x14abb]        # 0x14001bbe0
   140007125:	mov    rcx,QWORD PTR [rsp+0x30]
   14000712a:	cmp    rcx,rax
   14000712d:	je     0x140007135
   14000712f:	call   0x140006aa0
   140007134:	nop
   140007135:	mov    ecx,edi
   140007137:	call   0x14000b048
   14000713c:	mov    ecx,0xc
   140007141:	call   0x14000ae60
   140007146:	nop
   140007147:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000714e:	test   rdi,rdi
   140007151:	je     0x14000717e
   140007153:	mov    rcx,rdi
   140007156:	call   0x14000b284
   14000715b:	cmp    rdi,QWORD PTR [rip+0x145fe]        # 0x14001b760
   140007162:	je     0x14000717e
   140007164:	lea    rax,[rip+0x14605]        # 0x14001b770
   14000716b:	cmp    rdi,rax
   14000716e:	je     0x14000717e
   140007170:	cmp    DWORD PTR [rdi],0x0
   140007173:	jne    0x14000717e
   140007175:	mov    rcx,rdi
   140007178:	call   0x14000b0ec
   14000717d:	nop
   14000717e:	mov    ecx,0xc
   140007183:	call   0x14000b048
   140007188:	mov    rcx,rbx
   14000718b:	call   0x140006aa0
   140007190:	mov    rbx,QWORD PTR [rsp+0x38]
   140007195:	add    rsp,0x20
   140007199:	pop    rdi
   14000719a:	ret    
   14000719b:	int3   
   14000719c:	rex push rbx
   14000719e:	sub    rsp,0x20
   1400071a2:	call   0x1400071c0
   1400071a7:	mov    rbx,rax
   1400071aa:	test   rax,rax
   1400071ad:	jne    0x1400071b7
   1400071af:	lea    ecx,[rax+0x10]
   1400071b2:	call   0x140007400
   1400071b7:	mov    rax,rbx
   1400071ba:	add    rsp,0x20
   1400071be:	pop    rbx
   1400071bf:	ret    
   1400071c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071c5:	push   rdi
   1400071c6:	sub    rsp,0x20
   1400071ca:	call   QWORD PTR [rip+0xbf68]        # 0x140013138
   1400071d0:	mov    ecx,DWORD PTR [rip+0x13e4a]        # 0x14001b020
   1400071d6:	mov    edi,eax
   1400071d8:	call   0x14000ad48
   1400071dd:	mov    rbx,rax
   1400071e0:	test   rax,rax
   1400071e3:	jne    0x14000722c
   1400071e5:	lea    ecx,[rax+0x1]
   1400071e8:	mov    edx,0x470
   1400071ed:	call   0x140008a3c
   1400071f2:	mov    rbx,rax
   1400071f5:	test   rax,rax
   1400071f8:	je     0x14000722c
   1400071fa:	mov    ecx,DWORD PTR [rip+0x13e20]        # 0x14001b020
   140007200:	mov    rdx,rax
   140007203:	call   0x14000ad50
   140007208:	mov    rcx,rbx
   14000720b:	test   eax,eax
   14000720d:	je     0x140007225
   14000720f:	xor    edx,edx
   140007211:	call   0x140007244
   140007216:	call   QWORD PTR [rip+0xbfb4]        # 0x1400131d0
   14000721c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140007221:	mov    DWORD PTR [rbx],eax
   140007223:	jmp    0x14000722c
   140007225:	call   0x140006aa0
   14000722a:	xor    ebx,ebx
   14000722c:	mov    ecx,edi
   14000722e:	call   QWORD PTR [rip+0xbecc]        # 0x140013100
   140007234:	mov    rax,rbx
   140007237:	mov    rbx,QWORD PTR [rsp+0x30]
   14000723c:	add    rsp,0x20
   140007240:	pop    rdi
   140007241:	ret    
   140007242:	int3   
   140007243:	int3   
   140007244:	mov    QWORD PTR [rsp+0x8],rbx
   140007249:	push   rdi
   14000724a:	sub    rsp,0x20
   14000724e:	mov    rdi,rdx
   140007251:	mov    rbx,rcx
   140007254:	lea    rax,[rip+0xc315]        # 0x140013570
   14000725b:	mov    QWORD PTR [rcx+0xa0],rax
   140007262:	and    DWORD PTR [rcx+0x10],0x0
   140007266:	mov    DWORD PTR [rcx+0x1c],0x1
   14000726d:	mov    DWORD PTR [rcx+0xc8],0x1
   140007277:	mov    eax,0x43
   14000727c:	mov    WORD PTR [rcx+0x164],ax
   140007283:	mov    WORD PTR [rcx+0x26a],ax
   14000728a:	lea    rax,[rip+0x1494f]        # 0x14001bbe0
   140007291:	mov    QWORD PTR [rcx+0xb8],rax
   140007298:	mov    ecx,0xd
   14000729d:	call   0x14000ae60
   1400072a2:	nop
   1400072a3:	mov    rax,QWORD PTR [rbx+0xb8]
   1400072aa:	lock inc DWORD PTR [rax]
   1400072ad:	mov    ecx,0xd
   1400072b2:	call   0x14000b048
   1400072b7:	mov    ecx,0xc
   1400072bc:	call   0x14000ae60
   1400072c1:	nop
   1400072c2:	mov    QWORD PTR [rbx+0xc0],rdi
   1400072c9:	test   rdi,rdi
   1400072cc:	jne    0x1400072dc
   1400072ce:	mov    rax,QWORD PTR [rip+0x1448b]        # 0x14001b760
   1400072d5:	mov    QWORD PTR [rbx+0xc0],rax
   1400072dc:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400072e3:	call   0x14000b060
   1400072e8:	nop
   1400072e9:	mov    ecx,0xc
   1400072ee:	call   0x14000b048
   1400072f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072f8:	add    rsp,0x20
   1400072fc:	pop    rdi
   1400072fd:	ret    
   1400072fe:	int3   
   1400072ff:	int3   
   140007300:	rex push rbx
   140007302:	sub    rsp,0x20
   140007306:	call   0x140007504
   14000730b:	call   0x14000afe8
   140007310:	test   eax,eax
   140007312:	je     0x140007372
   140007314:	lea    rcx,[rip+0xfffffffffffffd4d]        # 0x140007068
   14000731b:	call   0x14000ad38
   140007320:	mov    DWORD PTR [rip+0x13cfa],eax        # 0x14001b020
   140007326:	cmp    eax,0xffffffff
   140007329:	je     0x140007372
   14000732b:	mov    edx,0x470
   140007330:	mov    ecx,0x1
   140007335:	call   0x140008a3c
   14000733a:	mov    rbx,rax
   14000733d:	test   rax,rax
   140007340:	je     0x140007372
   140007342:	mov    ecx,DWORD PTR [rip+0x13cd8]        # 0x14001b020
   140007348:	mov    rdx,rax
   14000734b:	call   0x14000ad50
   140007350:	test   eax,eax
   140007352:	je     0x140007372
   140007354:	xor    edx,edx
   140007356:	mov    rcx,rbx
   140007359:	call   0x140007244
   14000735e:	call   QWORD PTR [rip+0xbe6c]        # 0x1400131d0
   140007364:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140007369:	mov    DWORD PTR [rbx],eax
   14000736b:	mov    eax,0x1
   140007370:	jmp    0x140007379
   140007372:	call   0x140007380
   140007377:	xor    eax,eax
   140007379:	add    rsp,0x20
   14000737d:	pop    rbx
   14000737e:	ret    
   14000737f:	int3   
   140007380:	sub    rsp,0x28
   140007384:	mov    ecx,DWORD PTR [rip+0x13c96]        # 0x14001b020
   14000738a:	cmp    ecx,0xffffffff
   14000738d:	je     0x14000739b
   14000738f:	call   0x14000ad40
   140007394:	or     DWORD PTR [rip+0x13c85],0xffffffff        # 0x14001b020
   14000739b:	add    rsp,0x28
   14000739f:	jmp    0x14000aea4
   1400073a4:	rex push rbx
   1400073a6:	sub    rsp,0x20
   1400073aa:	mov    ebx,ecx
   1400073ac:	lea    r8,[rsp+0x38]
   1400073b1:	lea    rdx,[rip+0xff08]        # 0x1400172c0
   1400073b8:	xor    ecx,ecx
   1400073ba:	call   QWORD PTR [rip+0xbe20]        # 0x1400131e0
   1400073c0:	test   eax,eax
   1400073c2:	je     0x1400073df
   1400073c4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400073c9:	lea    rdx,[rip+0xc270]        # 0x140013640
   1400073d0:	call   QWORD PTR [rip+0xbe12]        # 0x1400131e8
   1400073d6:	test   rax,rax
   1400073d9:	je     0x1400073df
   1400073db:	mov    ecx,ebx
   1400073dd:	call   rax
   1400073df:	add    rsp,0x20
   1400073e3:	pop    rbx
   1400073e4:	ret    
   1400073e5:	int3   
   1400073e6:	int3   
   1400073e7:	int3   
   1400073e8:	rex push rbx
   1400073ea:	sub    rsp,0x20
   1400073ee:	mov    ebx,ecx
   1400073f0:	call   0x1400073a4
   1400073f5:	mov    ecx,ebx
   1400073f7:	call   QWORD PTR [rip+0xbddb]        # 0x1400131d8
   1400073fd:	int3   
   1400073fe:	int3   
   1400073ff:	int3   
   140007400:	rex push rbx
   140007402:	sub    rsp,0x20
   140007406:	mov    ebx,ecx
   140007408:	call   0x140007778
   14000740d:	mov    ecx,ebx
   14000740f:	call   0x1400077ec
   140007414:	xor    r8d,r8d
   140007417:	mov    ecx,0xff
   14000741c:	lea    edx,[r8+0x1]
   140007420:	call   0x1400075d4
   140007425:	int3   
   140007426:	int3   
   140007427:	int3   
   140007428:	mov    edx,0x1
   14000742d:	xor    ecx,ecx
   14000742f:	mov    r8d,edx
   140007432:	jmp    0x1400075d4
   140007437:	int3   
   140007438:	xor    edx,edx
   14000743a:	xor    ecx,ecx
   14000743c:	lea    r8d,[rdx+0x1]
   140007440:	jmp    0x1400075d4
   140007445:	int3   
   140007446:	int3   
   140007447:	int3   
   140007448:	mov    QWORD PTR [rsp+0x8],rbx
   14000744d:	push   rdi
   14000744e:	sub    rsp,0x20
   140007452:	cmp    QWORD PTR [rip+0x1849e],0x0        # 0x14001f8f8
   14000745a:	mov    ebx,ecx
   14000745c:	je     0x140007476
   14000745e:	lea    rcx,[rip+0x18493]        # 0x14001f8f8
   140007465:	call   0x14000bd40
   14000746a:	test   eax,eax
   14000746c:	je     0x140007476
   14000746e:	mov    ecx,ebx
   140007470:	call   QWORD PTR [rip+0x18482]        # 0x14001f8f8
   140007476:	call   0x14000bdc0
   14000747b:	lea    rdx,[rip+0xc026]        # 0x1400134a8
   140007482:	lea    rcx,[rip+0xbfef]        # 0x140013478
   140007489:	call   0x140007580
   14000748e:	test   eax,eax
   140007490:	jne    0x1400074ec
   140007492:	lea    rcx,[rip+0xeb3]        # 0x14000834c
   140007499:	call   0x140006720
   14000749e:	lea    rbx,[rip+0xbf7b]        # 0x140013420
   1400074a5:	lea    rdi,[rip+0xbfc4]        # 0x140013470
   1400074ac:	jmp    0x1400074bc
   1400074ae:	mov    rax,QWORD PTR [rbx]
   1400074b1:	test   rax,rax
   1400074b4:	je     0x1400074b8
   1400074b6:	call   rax
   1400074b8:	add    rbx,0x8
   1400074bc:	cmp    rbx,rdi
   1400074bf:	jb     0x1400074ae
   1400074c1:	cmp    QWORD PTR [rip+0x18417],0x0        # 0x14001f8e0
   1400074c9:	je     0x1400074ea
   1400074cb:	lea    rcx,[rip+0x1840e]        # 0x14001f8e0
   1400074d2:	call   0x14000bd40
   1400074d7:	test   eax,eax
   1400074d9:	je     0x1400074ea
   1400074db:	xor    r8d,r8d
   1400074de:	xor    ecx,ecx
   1400074e0:	lea    edx,[r8+0x2]
   1400074e4:	call   QWORD PTR [rip+0x183f6]        # 0x14001f8e0
   1400074ea:	xor    eax,eax
   1400074ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400074f1:	add    rsp,0x20
   1400074f5:	pop    rdi
   1400074f6:	ret    
   1400074f7:	int3   
   1400074f8:	xor    r8d,r8d
   1400074fb:	lea    edx,[r8+0x1]
   1400074ff:	jmp    0x1400075d4
   140007504:	rex push rbx
   140007506:	sub    rsp,0x20
   14000750a:	xor    ecx,ecx
   14000750c:	call   QWORD PTR [rip+0xbc96]        # 0x1400131a8
   140007512:	mov    rcx,rax
   140007515:	mov    rbx,rax
   140007518:	call   0x140009ec0
   14000751d:	mov    rcx,rbx
   140007520:	call   0x14000874c
   140007525:	mov    rcx,rbx
   140007528:	call   0x140009b40
   14000752d:	mov    rcx,rbx
   140007530:	call   0x14000bdfc
   140007535:	mov    rcx,rbx
   140007538:	call   0x14000be14
   14000753d:	mov    rcx,rbx
   140007540:	add    rsp,0x20
   140007544:	pop    rbx
   140007545:	jmp    0x14000ae40
   14000754a:	int3   
   14000754b:	int3   
   14000754c:	cmp    rcx,rdx
   14000754f:	jae    0x14000757e
   140007551:	mov    QWORD PTR [rsp+0x8],rbx
   140007556:	push   rdi
   140007557:	sub    rsp,0x20
   14000755b:	mov    rdi,rdx
   14000755e:	mov    rbx,rcx
   140007561:	mov    rax,QWORD PTR [rbx]
   140007564:	test   rax,rax
   140007567:	je     0x14000756b
   140007569:	call   rax
   14000756b:	add    rbx,0x8
   14000756f:	cmp    rbx,rdi
   140007572:	jb     0x140007561
   140007574:	mov    rbx,QWORD PTR [rsp+0x30]
   140007579:	add    rsp,0x20
   14000757d:	pop    rdi
   14000757e:	ret    
   14000757f:	int3   
   140007580:	mov    QWORD PTR [rsp+0x8],rbx
   140007585:	push   rdi
   140007586:	sub    rsp,0x20
   14000758a:	xor    eax,eax
   14000758c:	mov    rdi,rdx
   14000758f:	mov    rbx,rcx
   140007592:	cmp    rcx,rdx
   140007595:	jae    0x1400075ae
   140007597:	test   eax,eax
   140007599:	jne    0x1400075ae
   14000759b:	mov    rcx,QWORD PTR [rbx]
   14000759e:	test   rcx,rcx
   1400075a1:	je     0x1400075a5
   1400075a3:	call   rcx
   1400075a5:	add    rbx,0x8
   1400075a9:	cmp    rbx,rdi
   1400075ac:	jb     0x140007597
   1400075ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075b3:	add    rsp,0x20
   1400075b7:	pop    rdi
   1400075b8:	ret    
   1400075b9:	int3   
   1400075ba:	int3   
   1400075bb:	int3   
   1400075bc:	mov    ecx,0x8
   1400075c1:	jmp    0x14000ae60
   1400075c6:	int3   
   1400075c7:	int3   
   1400075c8:	mov    ecx,0x8
   1400075cd:	jmp    0x14000b048
   1400075d2:	int3   
   1400075d3:	int3   
   1400075d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400075d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400075de:	mov    DWORD PTR [rsp+0x18],r8d
   1400075e3:	push   rdi
   1400075e4:	push   r12
   1400075e6:	push   r13
   1400075e8:	push   r14
   1400075ea:	push   r15
   1400075ec:	sub    rsp,0x40
   1400075f0:	mov    r14d,r8d
   1400075f3:	mov    ebx,edx
   1400075f5:	mov    r13d,ecx
   1400075f8:	mov    ecx,0x8
   1400075fd:	call   0x14000ae60
   140007602:	nop
   140007603:	cmp    DWORD PTR [rip+0x1587e],0x1        # 0x14001ce88
   14000760a:	je     0x140007717
   140007610:	mov    DWORD PTR [rip+0x158ae],0x1        # 0x14001cec8
   14000761a:	mov    BYTE PTR [rip+0x158a3],r14b        # 0x14001cec4
   140007621:	test   ebx,ebx
   140007623:	jne    0x140007703
   140007629:	mov    rcx,QWORD PTR [rip+0x182c0]        # 0x14001f8f0
   140007630:	call   QWORD PTR [rip+0xbb7a]        # 0x1400131b0
   140007636:	mov    rsi,rax
   140007639:	mov    QWORD PTR [rsp+0x30],rax
   14000763e:	test   rax,rax
   140007641:	je     0x1400076f0
   140007647:	mov    rcx,QWORD PTR [rip+0x1829a]        # 0x14001f8e8
   14000764e:	call   QWORD PTR [rip+0xbb5c]        # 0x1400131b0
   140007654:	mov    rdi,rax
   140007657:	mov    QWORD PTR [rsp+0x20],rax
   14000765c:	mov    r12,rsi
   14000765f:	mov    QWORD PTR [rsp+0x28],rsi
   140007664:	mov    r15,rax
   140007667:	mov    QWORD PTR [rsp+0x38],rax
   14000766c:	sub    rdi,0x8
   140007670:	mov    QWORD PTR [rsp+0x20],rdi
   140007675:	cmp    rdi,rsi
   140007678:	jb     0x1400076f0
   14000767a:	xor    ecx,ecx
   14000767c:	call   QWORD PTR [rip+0xbb26]        # 0x1400131a8
   140007682:	cmp    QWORD PTR [rdi],rax
   140007685:	jne    0x140007689
   140007687:	jmp    0x14000766c
   140007689:	cmp    rdi,rsi
   14000768c:	jb     0x1400076f0
   14000768e:	mov    rcx,QWORD PTR [rdi]
   140007691:	call   QWORD PTR [rip+0xbb19]        # 0x1400131b0
   140007697:	mov    rbx,rax
   14000769a:	xor    ecx,ecx
   14000769c:	call   QWORD PTR [rip+0xbb06]        # 0x1400131a8
   1400076a2:	mov    QWORD PTR [rdi],rax
   1400076a5:	call   rbx
   1400076a7:	mov    rcx,QWORD PTR [rip+0x18242]        # 0x14001f8f0
   1400076ae:	call   QWORD PTR [rip+0xbafc]        # 0x1400131b0
   1400076b4:	mov    rbx,rax
   1400076b7:	mov    rcx,QWORD PTR [rip+0x1822a]        # 0x14001f8e8
   1400076be:	call   QWORD PTR [rip+0xbaec]        # 0x1400131b0
   1400076c4:	cmp    r12,rbx
   1400076c7:	jne    0x1400076ce
   1400076c9:	cmp    r15,rax
   1400076cc:	je     0x140007687
   1400076ce:	mov    r12,rbx
   1400076d1:	mov    QWORD PTR [rsp+0x28],rbx
   1400076d6:	mov    rsi,rbx
   1400076d9:	mov    QWORD PTR [rsp+0x30],rbx
   1400076de:	mov    r15,rax
   1400076e1:	mov    QWORD PTR [rsp+0x38],rax
   1400076e6:	mov    rdi,rax
   1400076e9:	mov    QWORD PTR [rsp+0x20],rax
   1400076ee:	jmp    0x140007687
   1400076f0:	lea    rdx,[rip+0xbdd9]        # 0x1400134d0
   1400076f7:	lea    rcx,[rip+0xbdb2]        # 0x1400134b0
   1400076fe:	call   0x14000754c
   140007703:	lea    rdx,[rip+0xbdd6]        # 0x1400134e0
   14000770a:	lea    rcx,[rip+0xbdc7]        # 0x1400134d8
   140007711:	call   0x14000754c
   140007716:	nop
   140007717:	test   r14d,r14d
   14000771a:	je     0x14000772b
   14000771c:	mov    ecx,0x8
   140007721:	call   0x14000b048
   140007726:	test   r14d,r14d
   140007729:	jne    0x140007751
   14000772b:	mov    DWORD PTR [rip+0x15753],0x1        # 0x14001ce88
   140007735:	mov    ecx,0x8
   14000773a:	call   0x14000b048
   14000773f:	mov    ecx,r13d
   140007742:	call   0x1400073a4
   140007747:	mov    ecx,r13d
   14000774a:	call   QWORD PTR [rip+0xba88]        # 0x1400131d8
   140007750:	int3   
   140007751:	mov    rbx,QWORD PTR [rsp+0x70]
   140007756:	mov    rsi,QWORD PTR [rsp+0x78]
   14000775b:	add    rsp,0x40
   14000775f:	pop    r15
   140007761:	pop    r14
   140007763:	pop    r13
   140007765:	pop    r12
   140007767:	pop    rdi
   140007768:	ret    
   140007769:	int3   
   14000776a:	int3   
   14000776b:	int3   
   14000776c:	xor    r8d,r8d
   14000776f:	xor    edx,edx
   140007771:	jmp    0x1400075d4
   140007776:	int3   
   140007777:	int3   
   140007778:	sub    rsp,0x28
   14000777c:	mov    ecx,0x3
   140007781:	call   0x14000821c
   140007786:	cmp    eax,0x1
   140007789:	je     0x1400077a2
   14000778b:	mov    ecx,0x3
   140007790:	call   0x14000821c
   140007795:	test   eax,eax
   140007797:	jne    0x1400077b6
   140007799:	cmp    DWORD PTR [rip+0x15740],0x1        # 0x14001cee0
   1400077a0:	jne    0x1400077b6
   1400077a2:	mov    ecx,0xfc
   1400077a7:	call   0x1400077ec
   1400077ac:	mov    ecx,0xff
   1400077b1:	call   0x1400077ec
   1400077b6:	add    rsp,0x28
   1400077ba:	ret    
   1400077bb:	int3   
   1400077bc:	lea    r9,[rip+0xbe8d]        # 0x140013650
   1400077c3:	xor    edx,edx
   1400077c5:	mov    r8,r9
   1400077c8:	cmp    ecx,DWORD PTR [r8]
   1400077cb:	je     0x1400077df
   1400077cd:	inc    edx
   1400077cf:	add    r8,0x10
   1400077d3:	movsxd rax,edx
   1400077d6:	cmp    rax,0x17
   1400077da:	jb     0x1400077c8
   1400077dc:	xor    eax,eax
   1400077de:	ret    
   1400077df:	movsxd rax,edx
   1400077e2:	add    rax,rax
   1400077e5:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   1400077ea:	ret    
   1400077eb:	int3   
   1400077ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400077f1:	mov    QWORD PTR [rsp+0x18],rbp
   1400077f6:	mov    QWORD PTR [rsp+0x20],rsi
   1400077fb:	push   rdi
   1400077fc:	push   r14
   1400077fe:	push   r15
   140007800:	sub    rsp,0x250
   140007807:	mov    rax,QWORD PTR [rip+0x1387a]        # 0x14001b088
   14000780e:	xor    rax,rsp
   140007811:	mov    QWORD PTR [rsp+0x240],rax
   140007819:	mov    edi,ecx
   14000781b:	call   0x1400077bc
   140007820:	xor    esi,esi
   140007822:	mov    rbx,rax
   140007825:	test   rax,rax
   140007828:	je     0x1400079c7
   14000782e:	lea    ecx,[rsi+0x3]
   140007831:	call   0x14000821c
   140007836:	cmp    eax,0x1
   140007839:	je     0x14000795c
   14000783f:	lea    ecx,[rsi+0x3]
   140007842:	call   0x14000821c
   140007847:	test   eax,eax
   140007849:	jne    0x140007858
   14000784b:	cmp    DWORD PTR [rip+0x1568e],0x1        # 0x14001cee0
   140007852:	je     0x14000795c
   140007858:	cmp    edi,0xfc
   14000785e:	je     0x1400079c7
   140007864:	lea    rbp,[rip+0x15685]        # 0x14001cef0
   14000786b:	mov    r15d,0x314
   140007871:	lea    r8,[rip+0xc878]        # 0x1400140f0
   140007878:	mov    rcx,rbp
   14000787b:	mov    edx,r15d
   14000787e:	call   0x14000c1a0
   140007883:	xor    ecx,ecx
   140007885:	test   eax,eax
   140007887:	jne    0x140007a48
   14000788d:	lea    r14,[rip+0x1568e]        # 0x14001cf22
   140007894:	mov    r8d,0x104
   14000789a:	mov    WORD PTR [rip+0x15889],si        # 0x14001d12a
   1400078a1:	mov    rdx,r14
   1400078a4:	call   QWORD PTR [rip+0xb956]        # 0x140013200
   1400078aa:	lea    edi,[r15-0x19]
   1400078ae:	test   eax,eax
   1400078b0:	jne    0x1400078cb
   1400078b2:	lea    r8,[rip+0xc86f]        # 0x140014128
   1400078b9:	mov    edx,edi
   1400078bb:	mov    rcx,r14
   1400078be:	call   0x14000c1a0
   1400078c3:	test   eax,eax
   1400078c5:	jne    0x1400079f4
   1400078cb:	mov    rcx,r14
   1400078ce:	call   0x14000c20c
   1400078d3:	inc    rax
   1400078d6:	cmp    rax,0x3c
   1400078da:	jbe    0x140007915
   1400078dc:	mov    rcx,r14
   1400078df:	call   0x14000c20c
   1400078e4:	lea    rcx,[rbp-0x44]
   1400078e8:	lea    r8,[rip+0xc869]        # 0x140014158
   1400078ef:	lea    rcx,[rcx+rax*2]
   1400078f3:	mov    r9d,0x3
   1400078f9:	mov    rax,rcx
   1400078fc:	sub    rax,r14
   1400078ff:	sar    rax,1
   140007902:	sub    rdi,rax
   140007905:	mov    rdx,rdi
   140007908:	call   0x14000c228
   14000790d:	test   eax,eax
   14000790f:	jne    0x140007a09
   140007915:	lea    r8,[rip+0xc844]        # 0x140014160
   14000791c:	mov    rdx,r15
   14000791f:	mov    rcx,rbp
   140007922:	call   0x14000c118
   140007927:	test   eax,eax
   140007929:	jne    0x140007a33
   14000792f:	mov    r8,rbx
   140007932:	mov    rdx,r15
   140007935:	mov    rcx,rbp
   140007938:	call   0x14000c118
   14000793d:	test   eax,eax
   14000793f:	jne    0x140007a1e
   140007945:	lea    rdx,[rip+0xc824]        # 0x140014170
   14000794c:	mov    r8d,0x12010
   140007952:	mov    rcx,rbp
   140007955:	call   0x14000c2f4
   14000795a:	jmp    0x1400079c7
   14000795c:	mov    ecx,0xfffffff4
   140007961:	call   QWORD PTR [rip+0xb891]        # 0x1400131f8
   140007967:	mov    rdi,rax
   14000796a:	lea    rcx,[rax-0x1]
   14000796e:	cmp    rcx,0xfffffffffffffffd
   140007972:	ja     0x1400079c7
   140007974:	mov    r8d,esi
   140007977:	lea    rdx,[rsp+0x40]
   14000797c:	mov    cl,BYTE PTR [rbx]
   14000797e:	mov    BYTE PTR [rdx],cl
   140007980:	cmp    WORD PTR [rbx],si
   140007983:	je     0x14000799a
   140007985:	inc    r8d
   140007988:	inc    rdx
   14000798b:	add    rbx,0x2
   14000798f:	movsxd rax,r8d
   140007992:	cmp    rax,0x1f4
   140007998:	jb     0x14000797c
   14000799a:	lea    rcx,[rsp+0x40]
   14000799f:	mov    BYTE PTR [rsp+0x233],sil
   1400079a7:	call   0x14000c070
   1400079ac:	lea    r9,[rsp+0x30]
   1400079b1:	lea    rdx,[rsp+0x40]
   1400079b6:	mov    rcx,rdi
   1400079b9:	mov    r8,rax
   1400079bc:	mov    QWORD PTR [rsp+0x20],rsi
   1400079c1:	call   QWORD PTR [rip+0xb7b9]        # 0x140013180
   1400079c7:	mov    rcx,QWORD PTR [rsp+0x240]
   1400079cf:	xor    rcx,rsp
   1400079d2:	call   0x140005fe0
   1400079d7:	lea    r11,[rsp+0x250]
   1400079df:	mov    rbx,QWORD PTR [r11+0x28]
   1400079e3:	mov    rbp,QWORD PTR [r11+0x30]
   1400079e7:	mov    rsi,QWORD PTR [r11+0x38]
   1400079eb:	mov    rsp,r11
   1400079ee:	pop    r15
   1400079f0:	pop    r14
   1400079f2:	pop    rdi
   1400079f3:	ret    
   1400079f4:	xor    r9d,r9d
   1400079f7:	xor    r8d,r8d
   1400079fa:	xor    edx,edx
   1400079fc:	xor    ecx,ecx
   1400079fe:	mov    QWORD PTR [rsp+0x20],rsi
   140007a03:	call   0x1400087dc
   140007a08:	int3   
   140007a09:	xor    r9d,r9d
   140007a0c:	xor    r8d,r8d
   140007a0f:	xor    edx,edx
   140007a11:	xor    ecx,ecx
   140007a13:	mov    QWORD PTR [rsp+0x20],rsi
   140007a18:	call   0x1400087dc
   140007a1d:	int3   
   140007a1e:	xor    r9d,r9d
   140007a21:	xor    r8d,r8d
   140007a24:	xor    edx,edx
   140007a26:	xor    ecx,ecx
   140007a28:	mov    QWORD PTR [rsp+0x20],rsi
   140007a2d:	call   0x1400087dc
   140007a32:	int3   
   140007a33:	xor    r9d,r9d
   140007a36:	xor    r8d,r8d
   140007a39:	xor    edx,edx
   140007a3b:	xor    ecx,ecx
   140007a3d:	mov    QWORD PTR [rsp+0x20],rsi
   140007a42:	call   0x1400087dc
   140007a47:	int3   
   140007a48:	xor    r9d,r9d
   140007a4b:	xor    r8d,r8d
   140007a4e:	xor    edx,edx
   140007a50:	mov    QWORD PTR [rsp+0x20],rsi
   140007a55:	call   0x1400087dc
   140007a5a:	int3   
   140007a5b:	int3   
   140007a5c:	sub    rsp,0x28
   140007a60:	call   QWORD PTR [rip+0xb7a2]        # 0x140013208
   140007a66:	xor    ecx,ecx
   140007a68:	test   rax,rax
   140007a6b:	mov    QWORD PTR [rip+0x15aa6],rax        # 0x14001d518
   140007a72:	setne  cl
   140007a75:	mov    eax,ecx
   140007a77:	add    rsp,0x28
   140007a7b:	ret    
   140007a7c:	sub    rsp,0x28
   140007a80:	lea    rdx,[rip+0x49]        # 0x140007ad0
   140007a87:	lea    rcx,[rip+0x15a92]        # 0x14001d520
   140007a8e:	xor    r9d,r9d
   140007a91:	xor    r8d,r8d
   140007a94:	call   QWORD PTR [rip+0xb78e]        # 0x140013228
   140007a9a:	neg    eax
   140007a9c:	sbb    eax,eax
   140007a9e:	neg    eax
   140007aa0:	dec    eax
   140007aa2:	add    rsp,0x28
   140007aa6:	ret    
   140007aa7:	int3   
   140007aa8:	sub    rsp,0x28
   140007aac:	lea    rcx,[rip+0x17c2d]        # 0x14001f6e0
   140007ab3:	xor    edx,edx
   140007ab5:	mov    r8d,0x200
   140007abb:	call   0x1400099c0
   140007ac0:	mov    DWORD PTR [rip+0x17bfa],0x3        # 0x14001f6c4
   140007aca:	add    rsp,0x28
   140007ace:	ret    
   140007acf:	int3   
   140007ad0:	mov    rax,rsp
   140007ad3:	mov    QWORD PTR [rax+0x8],rbx
   140007ad7:	mov    QWORD PTR [rax+0x10],rsi
   140007adb:	mov    QWORD PTR [rax+0x18],rdi
   140007adf:	mov    QWORD PTR [rax+0x20],r12
   140007ae3:	push   r13
   140007ae5:	push   r14
   140007ae7:	push   r15
   140007ae9:	sub    rsp,0xc0
   140007af0:	mov    QWORD PTR [rsp+0x38],rsp
   140007af5:	mov    ecx,0xb
   140007afa:	call   0x14000ae60
   140007aff:	nop
   140007b00:	xor    r12d,r12d
   140007b03:	cmp    QWORD PTR [rip+0x17bd6],r12        # 0x14001f6e0
   140007b0a:	je     0x140007b27
   140007b0c:	lea    rdx,[rip+0xa]        # 0x140007b1d
   140007b13:	mov    rcx,rsp
   140007b16:	call   0x14000c600
   140007b1b:	nop
   140007b1c:	nop
   140007b1d:	mov    eax,0x1
   140007b22:	jmp    0x140007e02
   140007b27:	mov    edi,0x58
   140007b2c:	mov    edx,edi
   140007b2e:	lea    r13d,[rdi-0x38]
   140007b32:	mov    ecx,r13d
   140007b35:	call   0x140008a3c
   140007b3a:	mov    rcx,rax
   140007b3d:	mov    QWORD PTR [rsp+0x28],rax
   140007b42:	test   rax,rax
   140007b45:	jne    0x140007b61
   140007b47:	lea    rdx,[rip+0xc]        # 0x140007b5a
   140007b4e:	mov    rcx,QWORD PTR [rsp+0x38]
   140007b53:	call   0x14000c600
   140007b58:	nop
   140007b59:	nop
   140007b5a:	xor    eax,eax
   140007b5c:	jmp    0x140007e02
   140007b61:	mov    QWORD PTR [rip+0x17b78],rax        # 0x14001f6e0
   140007b68:	mov    DWORD PTR [rip+0x17b55],r13d        # 0x14001f6c4
   140007b6f:	add    rax,0xb00
   140007b75:	cmp    rcx,rax
   140007b78:	jae    0x140007bb3
   140007b7a:	mov    WORD PTR [rcx+0x8],0xa00
   140007b80:	or     QWORD PTR [rcx],0xffffffffffffffff
   140007b84:	mov    DWORD PTR [rcx+0xc],r12d
   140007b88:	and    BYTE PTR [rcx+0x38],0x80
   140007b8c:	mov    al,BYTE PTR [rcx+0x38]
   140007b8f:	and    al,0x7f
   140007b91:	mov    BYTE PTR [rcx+0x38],al
   140007b94:	mov    WORD PTR [rcx+0x39],0xa0a
   140007b9a:	mov    DWORD PTR [rcx+0x50],r12d
   140007b9e:	mov    BYTE PTR [rcx+0x4c],r12b
   140007ba2:	add    rcx,rdi
   140007ba5:	mov    QWORD PTR [rsp+0x28],rcx
   140007baa:	mov    rax,QWORD PTR [rip+0x17b2f]        # 0x14001f6e0
   140007bb1:	jmp    0x140007b6f
   140007bb3:	lea    rcx,[rsp+0x50]
   140007bb8:	call   QWORD PTR [rip+0xb672]        # 0x140013230
   140007bbe:	cmp    WORD PTR [rsp+0x92],r12w
   140007bc7:	je     0x140007d0d
   140007bcd:	mov    rax,QWORD PTR [rsp+0x98]
   140007bd5:	test   rax,rax
   140007bd8:	je     0x140007d0d
   140007bde:	lea    r14,[rax+0x4]
   140007be2:	mov    QWORD PTR [rsp+0x48],r14
   140007be7:	movsxd rsi,DWORD PTR [rax]
   140007bea:	add    rsi,r14
   140007bed:	mov    QWORD PTR [rsp+0x40],rsi
   140007bf2:	mov    r15d,0x800
   140007bf8:	cmp    DWORD PTR [rax],r15d
   140007bfb:	cmovl  r15d,DWORD PTR [rax]
   140007bff:	mov    ebx,0x1
   140007c04:	mov    DWORD PTR [rsp+0x30],ebx
   140007c08:	cmp    DWORD PTR [rip+0x17ab5],r15d        # 0x14001f6c4
   140007c0f:	jge    0x140007c84
   140007c11:	mov    rdx,rdi
   140007c14:	mov    rcx,r13
   140007c17:	call   0x140008a3c
   140007c1c:	mov    rcx,rax
   140007c1f:	mov    QWORD PTR [rsp+0x28],rax
   140007c24:	test   rax,rax
   140007c27:	jne    0x140007c32
   140007c29:	mov    r15d,DWORD PTR [rip+0x17a94]        # 0x14001f6c4
   140007c30:	jmp    0x140007c84
   140007c32:	movsxd rdx,ebx
   140007c35:	lea    r8,[rip+0x17aa4]        # 0x14001f6e0
   140007c3c:	mov    QWORD PTR [r8+rdx*8],rax
   140007c40:	add    DWORD PTR [rip+0x17a7d],r13d        # 0x14001f6c4
   140007c47:	mov    rax,QWORD PTR [r8+rdx*8]
   140007c4b:	add    rax,0xb00
   140007c51:	cmp    rcx,rax
   140007c54:	jae    0x140007c80
   140007c56:	mov    WORD PTR [rcx+0x8],0xa00
   140007c5c:	or     QWORD PTR [rcx],0xffffffffffffffff
   140007c60:	mov    DWORD PTR [rcx+0xc],r12d
   140007c64:	and    BYTE PTR [rcx+0x38],0x80
   140007c68:	mov    WORD PTR [rcx+0x39],0xa0a
   140007c6e:	mov    DWORD PTR [rcx+0x50],r12d
   140007c72:	mov    BYTE PTR [rcx+0x4c],r12b
   140007c76:	add    rcx,rdi
   140007c79:	mov    QWORD PTR [rsp+0x28],rcx
   140007c7e:	jmp    0x140007c47
   140007c80:	inc    ebx
   140007c82:	jmp    0x140007c04
   140007c84:	mov    edi,r12d
   140007c87:	mov    DWORD PTR [rsp+0x20],r12d
   140007c8c:	lea    r13,[rip+0x17a4d]        # 0x14001f6e0
   140007c93:	cmp    edi,r15d
   140007c96:	jge    0x140007d0d
   140007c98:	mov    rcx,QWORD PTR [rsi]
   140007c9b:	lea    rax,[rcx+0x2]
   140007c9f:	cmp    rax,0x1
   140007ca3:	jbe    0x140007cf4
   140007ca5:	test   BYTE PTR [r14],0x1
   140007ca9:	je     0x140007cf4
   140007cab:	test   BYTE PTR [r14],0x8
   140007caf:	jne    0x140007cbb
   140007cb1:	call   QWORD PTR [rip+0xb559]        # 0x140013210
   140007cb7:	test   eax,eax
   140007cb9:	je     0x140007cf4
   140007cbb:	movsxd rbx,edi
   140007cbe:	mov    rax,rbx
   140007cc1:	sar    rax,0x5
   140007cc5:	and    ebx,0x1f
   140007cc8:	imul   rbx,rbx,0x58
   140007ccc:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   140007cd1:	mov    QWORD PTR [rsp+0x28],rbx
   140007cd6:	mov    rax,QWORD PTR [rsi]
   140007cd9:	mov    QWORD PTR [rbx],rax
   140007cdc:	mov    al,BYTE PTR [r14]
   140007cdf:	mov    BYTE PTR [rbx+0x8],al
   140007ce2:	lea    rcx,[rbx+0x10]
   140007ce6:	mov    edx,0xfa0
   140007ceb:	call   QWORD PTR [rip+0xb527]        # 0x140013218
   140007cf1:	inc    DWORD PTR [rbx+0xc]
   140007cf4:	inc    edi
   140007cf6:	mov    DWORD PTR [rsp+0x20],edi
   140007cfa:	inc    r14
   140007cfd:	mov    QWORD PTR [rsp+0x48],r14
   140007d02:	add    rsi,0x8
   140007d06:	mov    QWORD PTR [rsp+0x40],rsi
   140007d0b:	jmp    0x140007c93
   140007d0d:	mov    edi,r12d
   140007d10:	mov    DWORD PTR [rsp+0x20],r12d
   140007d15:	mov    r15,0xfffffffffffffffe
   140007d1c:	cmp    edi,0x3
   140007d1f:	jge    0x140007df3
   140007d25:	movsxd r14,edi
   140007d28:	mov    rbx,r14
   140007d2b:	imul   rbx,rbx,0x58
   140007d2f:	add    rbx,QWORD PTR [rip+0x179aa]        # 0x14001f6e0
   140007d36:	mov    QWORD PTR [rsp+0x28],rbx
   140007d3b:	mov    rax,QWORD PTR [rbx]
   140007d3e:	add    rax,0x2
   140007d42:	cmp    rax,0x1
   140007d46:	jbe    0x140007d58
   140007d48:	movsx  eax,BYTE PTR [rbx+0x8]
   140007d4c:	bts    eax,0x7
   140007d50:	mov    BYTE PTR [rbx+0x8],al
   140007d53:	jmp    0x140007de8
   140007d58:	mov    BYTE PTR [rbx+0x8],0x81
   140007d5c:	lea    eax,[rdi-0x1]
   140007d5f:	neg    eax
   140007d61:	sbb    ecx,ecx
   140007d63:	add    ecx,0xfffffff5
   140007d66:	mov    eax,0xfffffff6
   140007d6b:	test   edi,edi
   140007d6d:	cmove  ecx,eax
   140007d70:	call   QWORD PTR [rip+0xb482]        # 0x1400131f8
   140007d76:	mov    rsi,rax
   140007d79:	lea    rcx,[rax+0x1]
   140007d7d:	cmp    rcx,0x1
   140007d81:	jbe    0x140007dc7
   140007d83:	mov    rcx,rax
   140007d86:	call   QWORD PTR [rip+0xb484]        # 0x140013210
   140007d8c:	test   eax,eax
   140007d8e:	je     0x140007dc7
   140007d90:	mov    QWORD PTR [rbx],rsi
   140007d93:	movzx  eax,al
   140007d96:	cmp    eax,0x2
   140007d99:	jne    0x140007da4
   140007d9b:	movsx  eax,BYTE PTR [rbx+0x8]
   140007d9f:	or     eax,0x40
   140007da2:	jmp    0x140007db0
   140007da4:	cmp    eax,0x3
   140007da7:	jne    0x140007db3
   140007da9:	movsx  eax,BYTE PTR [rbx+0x8]
   140007dad:	or     eax,0x8
   140007db0:	mov    BYTE PTR [rbx+0x8],al
   140007db3:	lea    rcx,[rbx+0x10]
   140007db7:	mov    edx,0xfa0
   140007dbc:	call   QWORD PTR [rip+0xb456]        # 0x140013218
   140007dc2:	inc    DWORD PTR [rbx+0xc]
   140007dc5:	jmp    0x140007de8
   140007dc7:	movsx  eax,BYTE PTR [rbx+0x8]
   140007dcb:	or     eax,0x40
   140007dce:	mov    BYTE PTR [rbx+0x8],al
   140007dd1:	mov    QWORD PTR [rbx],r15
   140007dd4:	mov    rax,QWORD PTR [rip+0x168d5]        # 0x14001e6b0
   140007ddb:	test   rax,rax
   140007dde:	je     0x140007de8
   140007de0:	mov    rax,QWORD PTR [rax+r14*8]
   140007de4:	mov    DWORD PTR [rax+0x1c],r15d
   140007de8:	inc    edi
   140007dea:	mov    DWORD PTR [rsp+0x20],edi
   140007dee:	jmp    0x140007d1c
   140007df3:	mov    ecx,0xb
   140007df8:	call   0x14000b048
   140007dfd:	mov    eax,0x1
   140007e02:	lea    r11,[rsp+0xc0]
   140007e0a:	mov    rbx,QWORD PTR [r11+0x20]
   140007e0e:	mov    rsi,QWORD PTR [r11+0x28]
   140007e12:	mov    rdi,QWORD PTR [r11+0x30]
   140007e16:	mov    r12,QWORD PTR [r11+0x38]
   140007e1a:	mov    rsp,r11
   140007e1d:	pop    r15
   140007e1f:	pop    r14
   140007e21:	pop    r13
   140007e23:	ret    
   140007e24:	mov    QWORD PTR [rsp+0x18],rbx
   140007e29:	mov    QWORD PTR [rsp+0x20],rsi
   140007e2e:	push   rdi
   140007e2f:	sub    rsp,0x30
   140007e33:	cmp    DWORD PTR [rip+0x17ac6],0x0        # 0x14001f900
   140007e3a:	jne    0x140007e41
   140007e3c:	call   0x14000b404
   140007e41:	lea    rdi,[rip+0x156e8]        # 0x14001d530
   140007e48:	mov    r8d,0x104
   140007e4e:	xor    ecx,ecx
   140007e50:	mov    rdx,rdi
   140007e53:	mov    BYTE PTR [rip+0x157da],0x0        # 0x14001d634
   140007e5a:	call   QWORD PTR [rip+0xb3d8]        # 0x140013238
   140007e60:	mov    rbx,QWORD PTR [rip+0x17aa1]        # 0x14001f908
   140007e67:	mov    QWORD PTR [rip+0x15042],rdi        # 0x14001ceb0
   140007e6e:	test   rbx,rbx
   140007e71:	je     0x140007e78
   140007e73:	cmp    BYTE PTR [rbx],0x0
   140007e76:	jne    0x140007e7b
   140007e78:	mov    rbx,rdi
   140007e7b:	lea    rax,[rsp+0x48]
   140007e80:	lea    r9,[rsp+0x40]
   140007e85:	xor    r8d,r8d
   140007e88:	xor    edx,edx
   140007e8a:	mov    rcx,rbx
   140007e8d:	mov    QWORD PTR [rsp+0x20],rax
   140007e92:	call   0x140007f18
   140007e97:	movsxd rsi,DWORD PTR [rsp+0x40]
   140007e9c:	movabs rcx,0x1fffffffffffffff
   140007ea6:	cmp    rsi,rcx
   140007ea9:	jae    0x140007f04
   140007eab:	movsxd rcx,DWORD PTR [rsp+0x48]
   140007eb0:	cmp    rcx,0xffffffffffffffff
   140007eb4:	jae    0x140007f04
   140007eb6:	lea    rdx,[rcx+rsi*8]
   140007eba:	cmp    rdx,rcx
   140007ebd:	jb     0x140007f04
   140007ebf:	mov    rcx,rdx
   140007ec2:	call   0x140008abc
   140007ec7:	mov    rdi,rax
   140007eca:	test   rax,rax
   140007ecd:	je     0x140007f04
   140007ecf:	lea    r8,[rax+rsi*8]
   140007ed3:	lea    rax,[rsp+0x48]
   140007ed8:	lea    r9,[rsp+0x40]
   140007edd:	mov    rdx,rdi
   140007ee0:	mov    rcx,rbx
   140007ee3:	mov    QWORD PTR [rsp+0x20],rax
   140007ee8:	call   0x140007f18
   140007eed:	mov    eax,DWORD PTR [rsp+0x40]
   140007ef1:	mov    QWORD PTR [rip+0x14f98],rdi        # 0x14001ce90
   140007ef8:	dec    eax
   140007efa:	mov    DWORD PTR [rip+0x14f8c],eax        # 0x14001ce8c
   140007f00:	xor    eax,eax
   140007f02:	jmp    0x140007f07
   140007f04:	or     eax,0xffffffff
   140007f07:	mov    rbx,QWORD PTR [rsp+0x50]
   140007f0c:	mov    rsi,QWORD PTR [rsp+0x58]
   140007f11:	add    rsp,0x30
   140007f15:	pop    rdi
   140007f16:	ret    
   140007f17:	int3   
   140007f18:	mov    rax,rsp
   140007f1b:	mov    QWORD PTR [rax+0x8],rbx
   140007f1f:	mov    QWORD PTR [rax+0x10],rbp
   140007f23:	mov    QWORD PTR [rax+0x18],rsi
   140007f27:	mov    QWORD PTR [rax+0x20],rdi
   140007f2b:	push   r12
   140007f2d:	push   r14
   140007f2f:	push   r15
   140007f31:	sub    rsp,0x20
   140007f35:	mov    r14,QWORD PTR [rsp+0x60]
   140007f3a:	mov    r12,r9
   140007f3d:	mov    rdi,r8
   140007f40:	and    DWORD PTR [r14],0x0
   140007f44:	mov    r15,rdx
   140007f47:	mov    rbx,rcx
   140007f4a:	mov    DWORD PTR [r9],0x1
   140007f51:	test   rdx,rdx
   140007f54:	je     0x140007f5d
   140007f56:	mov    QWORD PTR [rdx],r8
   140007f59:	add    r15,0x8
   140007f5d:	xor    ebp,ebp
   140007f5f:	cmp    BYTE PTR [rbx],0x22
   140007f62:	jne    0x140007f75
   140007f64:	xor    eax,eax
   140007f66:	test   ebp,ebp
   140007f68:	mov    sil,0x22
   140007f6b:	sete   al
   140007f6e:	inc    rbx
   140007f71:	mov    ebp,eax
   140007f73:	jmp    0x140007fac
   140007f75:	inc    DWORD PTR [r14]
   140007f78:	test   rdi,rdi
   140007f7b:	je     0x140007f84
   140007f7d:	mov    al,BYTE PTR [rbx]
   140007f7f:	mov    BYTE PTR [rdi],al
   140007f81:	inc    rdi
   140007f84:	movzx  esi,BYTE PTR [rbx]
   140007f87:	inc    rbx
   140007f8a:	mov    ecx,esi
   140007f8c:	call   0x14000c8bc
   140007f91:	test   eax,eax
   140007f93:	je     0x140007fa7
   140007f95:	inc    DWORD PTR [r14]
   140007f98:	test   rdi,rdi
   140007f9b:	je     0x140007fa4
   140007f9d:	mov    al,BYTE PTR [rbx]
   140007f9f:	mov    BYTE PTR [rdi],al
   140007fa1:	inc    rdi
   140007fa4:	inc    rbx
   140007fa7:	test   sil,sil
   140007faa:	je     0x140007fc7
   140007fac:	test   ebp,ebp
   140007fae:	jne    0x140007f5f
   140007fb0:	cmp    sil,0x20
   140007fb4:	je     0x140007fbc
   140007fb6:	cmp    sil,0x9
   140007fba:	jne    0x140007f5f
   140007fbc:	test   rdi,rdi
   140007fbf:	je     0x140007fca
   140007fc1:	mov    BYTE PTR [rdi-0x1],0x0
   140007fc5:	jmp    0x140007fca
   140007fc7:	dec    rbx
   140007fca:	xor    esi,esi
   140007fcc:	cmp    BYTE PTR [rbx],0x0
   140007fcf:	je     0x1400080b3
   140007fd5:	cmp    BYTE PTR [rbx],0x20
   140007fd8:	je     0x140007fdf
   140007fda:	cmp    BYTE PTR [rbx],0x9
   140007fdd:	jne    0x140007fe4
   140007fdf:	inc    rbx
   140007fe2:	jmp    0x140007fd5
   140007fe4:	cmp    BYTE PTR [rbx],0x0
   140007fe7:	je     0x1400080b3
   140007fed:	test   r15,r15
   140007ff0:	je     0x140007ff9
   140007ff2:	mov    QWORD PTR [r15],rdi
   140007ff5:	add    r15,0x8
   140007ff9:	inc    DWORD PTR [r12]
   140007ffd:	mov    edx,0x1
   140008002:	xor    ecx,ecx
   140008004:	jmp    0x14000800b
   140008006:	inc    rbx
   140008009:	inc    ecx
   14000800b:	cmp    BYTE PTR [rbx],0x5c
   14000800e:	je     0x140008006
   140008010:	cmp    BYTE PTR [rbx],0x22
   140008013:	jne    0x14000804a
   140008015:	test   dl,cl
   140008017:	jne    0x140008036
   140008019:	test   esi,esi
   14000801b:	je     0x14000802b
   14000801d:	lea    rax,[rbx+0x1]
   140008021:	cmp    BYTE PTR [rax],0x22
   140008024:	jne    0x14000802b
   140008026:	mov    rbx,rax
   140008029:	jmp    0x140008036
   14000802b:	xor    eax,eax
   14000802d:	xor    edx,edx
   14000802f:	test   esi,esi
   140008031:	sete   al
   140008034:	mov    esi,eax
   140008036:	shr    ecx,1
   140008038:	jmp    0x14000804a
   14000803a:	dec    ecx
   14000803c:	test   rdi,rdi
   14000803f:	je     0x140008047
   140008041:	mov    BYTE PTR [rdi],0x5c
   140008044:	inc    rdi
   140008047:	inc    DWORD PTR [r14]
   14000804a:	test   ecx,ecx
   14000804c:	jne    0x14000803a
   14000804e:	mov    al,BYTE PTR [rbx]
   140008050:	test   al,al
   140008052:	je     0x1400080a0
   140008054:	test   esi,esi
   140008056:	jne    0x140008060
   140008058:	cmp    al,0x20
   14000805a:	je     0x1400080a0
   14000805c:	cmp    al,0x9
   14000805e:	je     0x1400080a0
   140008060:	test   edx,edx
   140008062:	je     0x140008098
   140008064:	movsx  ecx,al
   140008067:	call   0x14000c8bc
   14000806c:	test   rdi,rdi
   14000806f:	je     0x14000808b
   140008071:	test   eax,eax
   140008073:	je     0x140008082
   140008075:	mov    al,BYTE PTR [rbx]
   140008077:	inc    rbx
   14000807a:	mov    BYTE PTR [rdi],al
   14000807c:	inc    rdi
   14000807f:	inc    DWORD PTR [r14]
   140008082:	mov    al,BYTE PTR [rbx]
   140008084:	mov    BYTE PTR [rdi],al
   140008086:	inc    rdi
   140008089:	jmp    0x140008095
   14000808b:	test   eax,eax
   14000808d:	je     0x140008095
   14000808f:	inc    rbx
   140008092:	inc    DWORD PTR [r14]
   140008095:	inc    DWORD PTR [r14]
   140008098:	inc    rbx
   14000809b:	jmp    0x140007ffd
   1400080a0:	test   rdi,rdi
   1400080a3:	je     0x1400080ab
   1400080a5:	mov    BYTE PTR [rdi],0x0
   1400080a8:	inc    rdi
   1400080ab:	inc    DWORD PTR [r14]
   1400080ae:	jmp    0x140007fcc
   1400080b3:	test   r15,r15
   1400080b6:	je     0x1400080bc
   1400080b8:	and    QWORD PTR [r15],0x0
   1400080bc:	inc    DWORD PTR [r12]
   1400080c0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400080c5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400080ca:	mov    rsi,QWORD PTR [rsp+0x50]
   1400080cf:	mov    rdi,QWORD PTR [rsp+0x58]
   1400080d4:	add    rsp,0x20
   1400080d8:	pop    r15
   1400080da:	pop    r14
   1400080dc:	pop    r12
   1400080de:	ret    
   1400080df:	int3   
   1400080e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400080ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400080ef:	push   rdi
   1400080f0:	sub    rsp,0x30
   1400080f4:	cmp    DWORD PTR [rip+0x17805],0x0        # 0x14001f900
   1400080fb:	jne    0x140008102
   1400080fd:	call   0x14000b404
   140008102:	mov    rbx,QWORD PTR [rip+0x147f7]        # 0x14001c900
   140008109:	xor    edi,edi
   14000810b:	test   rbx,rbx
   14000810e:	jne    0x14000812c
   140008110:	or     eax,0xffffffff
   140008113:	jmp    0x1400081cd
   140008118:	cmp    al,0x3d
   14000811a:	je     0x14000811e
   14000811c:	inc    edi
   14000811e:	mov    rcx,rbx
   140008121:	call   0x14000c070
   140008126:	inc    rbx
   140008129:	add    rbx,rax
   14000812c:	mov    al,BYTE PTR [rbx]
   14000812e:	test   al,al
   140008130:	jne    0x140008118
   140008132:	lea    eax,[rdi+0x1]
   140008135:	mov    edx,0x8
   14000813a:	movsxd rcx,eax
   14000813d:	call   0x140008a3c
   140008142:	mov    rdi,rax
   140008145:	mov    QWORD PTR [rip+0x14d54],rax        # 0x14001cea0
   14000814c:	test   rax,rax
   14000814f:	je     0x140008110
   140008151:	mov    rbx,QWORD PTR [rip+0x147a8]        # 0x14001c900
   140008158:	cmp    BYTE PTR [rbx],0x0
   14000815b:	je     0x1400081ad
   14000815d:	mov    rcx,rbx
   140008160:	call   0x14000c070
   140008165:	cmp    BYTE PTR [rbx],0x3d
   140008168:	lea    esi,[rax+0x1]
   14000816b:	je     0x14000819b
   14000816d:	movsxd rbp,esi
   140008170:	mov    edx,0x1
   140008175:	mov    rcx,rbp
   140008178:	call   0x140008a3c
   14000817d:	mov    QWORD PTR [rdi],rax
   140008180:	test   rax,rax
   140008183:	je     0x1400081e2
   140008185:	mov    r8,rbx
   140008188:	mov    rdx,rbp
   14000818b:	mov    rcx,rax
   14000818e:	call   0x14000c8d0
   140008193:	test   eax,eax
   140008195:	jne    0x1400081fb
   140008197:	add    rdi,0x8
   14000819b:	movsxd rax,esi
   14000819e:	add    rbx,rax
   1400081a1:	cmp    BYTE PTR [rbx],0x0
   1400081a4:	jne    0x14000815d
   1400081a6:	mov    rbx,QWORD PTR [rip+0x14753]        # 0x14001c900
   1400081ad:	mov    rcx,rbx
   1400081b0:	call   0x140006aa0
   1400081b5:	and    QWORD PTR [rip+0x14743],0x0        # 0x14001c900
   1400081bd:	and    QWORD PTR [rdi],0x0
   1400081c1:	mov    DWORD PTR [rip+0x17739],0x1        # 0x14001f904
   1400081cb:	xor    eax,eax
   1400081cd:	mov    rbx,QWORD PTR [rsp+0x40]
   1400081d2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400081d7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400081dc:	add    rsp,0x30
   1400081e0:	pop    rdi
   1400081e1:	ret    
   1400081e2:	mov    rcx,QWORD PTR [rip+0x14cb7]        # 0x14001cea0
   1400081e9:	call   0x140006aa0
   1400081ee:	and    QWORD PTR [rip+0x14caa],0x0        # 0x14001cea0
   1400081f6:	jmp    0x140008110
   1400081fb:	and    QWORD PTR [rsp+0x20],0x0
   140008201:	xor    r9d,r9d
   140008204:	xor    r8d,r8d
   140008207:	xor    edx,edx
   140008209:	xor    ecx,ecx
   14000820b:	call   0x1400087dc
   140008210:	int3   
   140008211:	int3   
   140008212:	int3   
   140008213:	int3   
   140008214:	mov    DWORD PTR [rip+0x14cc6],ecx        # 0x14001cee0
   14000821a:	ret    
   14000821b:	int3   
   14000821c:	sub    rsp,0x28
   140008220:	test   ecx,ecx
   140008222:	js     0x140008244
   140008224:	cmp    ecx,0x2
   140008227:	jle    0x140008236
   140008229:	cmp    ecx,0x3
   14000822c:	jne    0x140008244
   14000822e:	mov    eax,DWORD PTR [rip+0x15404]        # 0x14001d638
   140008234:	jmp    0x140008257
   140008236:	mov    eax,DWORD PTR [rip+0x153fc]        # 0x14001d638
   14000823c:	mov    DWORD PTR [rip+0x153f6],ecx        # 0x14001d638
   140008242:	jmp    0x140008257
   140008244:	call   0x140008888
   140008249:	mov    DWORD PTR [rax],0x16
   14000824f:	call   0x1400087bc
   140008254:	or     eax,0xffffffff
   140008257:	add    rsp,0x28
   14000825b:	ret    
   14000825c:	mov    QWORD PTR [rsp+0x20],rbx
   140008261:	push   rbp
   140008262:	mov    rbp,rsp
   140008265:	sub    rsp,0x20
   140008269:	mov    rax,QWORD PTR [rip+0x12e18]        # 0x14001b088
   140008270:	and    QWORD PTR [rbp+0x18],0x0
   140008275:	movabs rbx,0x2b992ddfa232
   14000827f:	cmp    rax,rbx
   140008282:	jne    0x1400082ff
   140008284:	lea    rcx,[rbp+0x18]
   140008288:	call   QWORD PTR [rip+0xafba]        # 0x140013248
   14000828e:	mov    rax,QWORD PTR [rbp+0x18]
   140008292:	mov    QWORD PTR [rbp+0x10],rax
   140008296:	call   QWORD PTR [rip+0xaf34]        # 0x1400131d0
   14000829c:	mov    eax,eax
   14000829e:	xor    QWORD PTR [rbp+0x10],rax
   1400082a2:	call   QWORD PTR [rip+0xafa8]        # 0x140013250
   1400082a8:	shl    rax,0x18
   1400082ac:	xor    QWORD PTR [rbp+0x10],rax
   1400082b0:	call   QWORD PTR [rip+0xaf9a]        # 0x140013250
   1400082b6:	lea    rcx,[rbp+0x20]
   1400082ba:	xor    QWORD PTR [rbp+0x10],rax
   1400082be:	call   QWORD PTR [rip+0xaf7c]        # 0x140013240
   1400082c4:	mov    eax,DWORD PTR [rbp+0x20]
   1400082c7:	shl    rax,0x20
   1400082cb:	lea    rcx,[rbp+0x10]
   1400082cf:	xor    rax,QWORD PTR [rbp+0x20]
   1400082d3:	xor    rax,QWORD PTR [rbp+0x10]
   1400082d7:	xor    rax,rcx
   1400082da:	movabs rcx,0xffffffffffff
   1400082e4:	and    rax,rcx
   1400082e7:	movabs rcx,0x2b992ddfa233
   1400082f1:	cmp    rax,rbx
   1400082f4:	cmove  rax,rcx
   1400082f8:	mov    QWORD PTR [rip+0x12d89],rax        # 0x14001b088
   1400082ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140008304:	not    rax
   140008307:	mov    QWORD PTR [rip+0x12d82],rax        # 0x14001b090
   14000830e:	add    rsp,0x20
   140008312:	pop    rbp
   140008313:	ret    
   140008314:	mov    QWORD PTR [rsp+0x8],rbx
   140008319:	push   rdi
   14000831a:	sub    rsp,0x20
   14000831e:	lea    rbx,[rip+0x101e3]        # 0x140018508
   140008325:	lea    rdi,[rip+0x101dc]        # 0x140018508
   14000832c:	jmp    0x14000833c
   14000832e:	mov    rax,QWORD PTR [rbx]
   140008331:	test   rax,rax
   140008334:	je     0x140008338
   140008336:	call   rax
   140008338:	add    rbx,0x8
   14000833c:	cmp    rbx,rdi
   14000833f:	jb     0x14000832e
   140008341:	mov    rbx,QWORD PTR [rsp+0x30]
   140008346:	add    rsp,0x20
   14000834a:	pop    rdi
   14000834b:	ret    
   14000834c:	mov    QWORD PTR [rsp+0x8],rbx
   140008351:	push   rdi
   140008352:	sub    rsp,0x20
   140008356:	lea    rbx,[rip+0x101bb]        # 0x140018518
   14000835d:	lea    rdi,[rip+0x101b4]        # 0x140018518
   140008364:	jmp    0x140008374
   140008366:	mov    rax,QWORD PTR [rbx]
   140008369:	test   rax,rax
   14000836c:	je     0x140008370
   14000836e:	call   rax
   140008370:	add    rbx,0x8
   140008374:	cmp    rbx,rdi
   140008377:	jb     0x140008366
   140008379:	mov    rbx,QWORD PTR [rsp+0x30]
   14000837e:	add    rsp,0x20
   140008382:	pop    rdi
   140008383:	ret    
   140008384:	mov    rax,rsp
   140008387:	mov    QWORD PTR [rax+0x8],rbx
   14000838b:	mov    QWORD PTR [rax+0x10],rbp
   14000838f:	mov    QWORD PTR [rax+0x18],rsi
   140008393:	mov    QWORD PTR [rax+0x20],rdi
   140008397:	push   r14
   140008399:	sub    rsp,0x40
   14000839d:	call   QWORD PTR [rip+0xaeb5]        # 0x140013258
   1400083a3:	xor    r14d,r14d
   1400083a6:	mov    rdi,rax
   1400083a9:	test   rax,rax
   1400083ac:	je     0x14000845b
   1400083b2:	mov    rbx,rax
   1400083b5:	cmp    WORD PTR [rax],r14w
   1400083b9:	je     0x1400083cf
   1400083bb:	add    rbx,0x2
   1400083bf:	cmp    WORD PTR [rbx],r14w
   1400083c3:	jne    0x1400083bb
   1400083c5:	add    rbx,0x2
   1400083c9:	cmp    WORD PTR [rbx],r14w
   1400083cd:	jne    0x1400083bb
   1400083cf:	mov    QWORD PTR [rsp+0x38],r14
   1400083d4:	sub    rbx,rax
   1400083d7:	mov    QWORD PTR [rsp+0x30],r14
   1400083dc:	sar    rbx,1
   1400083df:	mov    r8,rax
   1400083e2:	xor    edx,edx
   1400083e4:	lea    r9d,[rbx+0x1]
   1400083e8:	xor    ecx,ecx
   1400083ea:	mov    DWORD PTR [rsp+0x28],r14d
   1400083ef:	mov    QWORD PTR [rsp+0x20],r14
   1400083f4:	call   QWORD PTR [rip+0xad76]        # 0x140013170
   1400083fa:	movsxd rbp,eax
   1400083fd:	test   eax,eax
   1400083ff:	je     0x140008452
   140008401:	mov    rcx,rbp
   140008404:	call   0x140008abc
   140008409:	mov    rsi,rax
   14000840c:	test   rax,rax
   14000840f:	je     0x140008452
   140008411:	mov    QWORD PTR [rsp+0x38],r14
   140008416:	mov    QWORD PTR [rsp+0x30],r14
   14000841b:	lea    r9d,[rbx+0x1]
   14000841f:	mov    r8,rdi
   140008422:	xor    edx,edx
   140008424:	xor    ecx,ecx
   140008426:	mov    DWORD PTR [rsp+0x28],ebp
   14000842a:	mov    QWORD PTR [rsp+0x20],rax
   14000842f:	call   QWORD PTR [rip+0xad3b]        # 0x140013170
   140008435:	test   eax,eax
   140008437:	jne    0x140008444
   140008439:	mov    rcx,rsi
   14000843c:	call   0x140006aa0
   140008441:	mov    rsi,r14
   140008444:	mov    rcx,rdi
   140008447:	call   QWORD PTR [rip+0xae13]        # 0x140013260
   14000844d:	mov    rax,rsi
   140008450:	jmp    0x14000845d
   140008452:	mov    rcx,rdi
   140008455:	call   QWORD PTR [rip+0xae05]        # 0x140013260
   14000845b:	xor    eax,eax
   14000845d:	mov    rbx,QWORD PTR [rsp+0x50]
   140008462:	mov    rbp,QWORD PTR [rsp+0x58]
   140008467:	mov    rsi,QWORD PTR [rsp+0x60]
   14000846c:	mov    rdi,QWORD PTR [rsp+0x68]
   140008471:	add    rsp,0x40
   140008475:	pop    r14
   140008477:	ret    
   140008478:	mov    rax,rsp
   14000847b:	mov    QWORD PTR [rax+0x8],rbx
   14000847f:	mov    QWORD PTR [rax+0x10],rbp
   140008483:	mov    QWORD PTR [rax+0x18],rsi
   140008487:	push   rdi
   140008488:	push   r12
   14000848a:	push   r13
   14000848c:	push   r14
   14000848e:	push   r15
   140008490:	sub    rsp,0x40
   140008494:	mov    r12,QWORD PTR [r9+0x8]
   140008498:	mov    r15,QWORD PTR [r9]
   14000849b:	mov    rbx,QWORD PTR [r9+0x38]
   14000849f:	sub    r15,r12
   1400084a2:	test   BYTE PTR [rcx+0x4],0x66
   1400084a6:	mov    r14,r9
   1400084a9:	mov    r13,rdx
   1400084ac:	mov    rbp,rcx
   1400084af:	jne    0x140008593
   1400084b5:	mov    esi,DWORD PTR [r9+0x48]
   1400084b9:	mov    QWORD PTR [rax-0x38],rcx
   1400084bd:	mov    QWORD PTR [rax-0x30],r8
   1400084c1:	cmp    esi,DWORD PTR [rbx]
   1400084c3:	jae    0x140008633
   1400084c9:	mov    edi,esi
   1400084cb:	add    rdi,rdi
   1400084ce:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   1400084d2:	cmp    r15,rax
   1400084d5:	jb     0x140008585
   1400084db:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   1400084df:	cmp    r15,rax
   1400084e2:	jae    0x140008585
   1400084e8:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   1400084ed:	je     0x140008585
   1400084f3:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   1400084f8:	je     0x140008511
   1400084fa:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   1400084fe:	lea    rcx,[rsp+0x30]
   140008503:	mov    rdx,r13
   140008506:	add    rax,r12
   140008509:	call   rax
   14000850b:	test   eax,eax
   14000850d:	js     0x14000858c
   14000850f:	jle    0x140008585
   140008511:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140008518:	jne    0x140008542
   14000851a:	cmp    QWORD PTR [rip+0xe9d6],0x0        # 0x140016ef8
   140008522:	je     0x140008542
   140008524:	lea    rcx,[rip+0xe9cd]        # 0x140016ef8
   14000852b:	call   0x14000bd40
   140008530:	test   eax,eax
   140008532:	je     0x140008542
   140008534:	mov    edx,0x1
   140008539:	mov    rcx,rbp
   14000853c:	call   QWORD PTR [rip+0xe9b6]        # 0x140016ef8
   140008542:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140008546:	mov    r8d,0x1
   14000854c:	mov    rdx,r13
   14000854f:	add    rcx,r12
   140008552:	call   0x14000c630
   140008557:	mov    rax,QWORD PTR [r14+0x40]
   14000855b:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   14000855f:	mov    r9d,DWORD PTR [rbp+0x0]
   140008563:	mov    QWORD PTR [rsp+0x28],rax
   140008568:	mov    rax,QWORD PTR [r14+0x28]
   14000856c:	add    rdx,r12
   14000856f:	mov    r8,rbp
   140008572:	mov    rcx,r13
   140008575:	mov    QWORD PTR [rsp+0x20],rax
   14000857a:	call   QWORD PTR [rip+0xace8]        # 0x140013268
   140008580:	call   0x14000c660
   140008585:	inc    esi
   140008587:	jmp    0x1400084c1
   14000858c:	xor    eax,eax
   14000858e:	jmp    0x140008638
   140008593:	mov    rsi,QWORD PTR [r9+0x20]
   140008597:	mov    edi,DWORD PTR [r9+0x48]
   14000859b:	sub    rsi,r12
   14000859e:	jmp    0x140008629
   1400085a3:	mov    ecx,edi
   1400085a5:	add    rcx,rcx
   1400085a8:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   1400085ac:	cmp    r15,rax
   1400085af:	jb     0x140008627
   1400085b1:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   1400085b5:	cmp    r15,rax
   1400085b8:	jae    0x140008627
   1400085ba:	test   BYTE PTR [rbp+0x4],0x20
   1400085be:	je     0x140008601
   1400085c0:	xor    r9d,r9d
   1400085c3:	test   edx,edx
   1400085c5:	je     0x1400085fc
   1400085c7:	lea    r8,[rbx+0x8]
   1400085cb:	mov    eax,DWORD PTR [r8-0x4]
   1400085cf:	cmp    rsi,rax
   1400085d2:	jb     0x1400085f0
   1400085d4:	mov    eax,DWORD PTR [r8]
   1400085d7:	cmp    rsi,rax
   1400085da:	jae    0x1400085f0
   1400085dc:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400085e0:	cmp    DWORD PTR [r8+0x8],eax
   1400085e4:	jne    0x1400085f0
   1400085e6:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   1400085ea:	cmp    DWORD PTR [r8+0x4],eax
   1400085ee:	je     0x1400085fc
   1400085f0:	inc    r9d
   1400085f3:	add    r8,0x10
   1400085f7:	cmp    r9d,edx
   1400085fa:	jb     0x1400085cb
   1400085fc:	cmp    r9d,edx
   1400085ff:	jne    0x140008633
   140008601:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140008605:	test   eax,eax
   140008607:	je     0x140008610
   140008609:	cmp    rsi,rax
   14000860c:	je     0x140008633
   14000860e:	jmp    0x140008627
   140008610:	lea    eax,[rdi+0x1]
   140008613:	mov    rdx,r13
   140008616:	mov    DWORD PTR [r14+0x48],eax
   14000861a:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   14000861f:	mov    cl,0x1
   140008621:	add    r8,r12
   140008624:	call   r8
   140008627:	inc    edi
   140008629:	mov    edx,DWORD PTR [rbx]
   14000862b:	cmp    edi,edx
   14000862d:	jb     0x1400085a3
   140008633:	mov    eax,0x1
   140008638:	lea    r11,[rsp+0x40]
   14000863d:	mov    rbx,QWORD PTR [r11+0x30]
   140008641:	mov    rbp,QWORD PTR [r11+0x38]
   140008645:	mov    rsi,QWORD PTR [r11+0x40]
   140008649:	mov    rsp,r11
   14000864c:	pop    r15
   14000864e:	pop    r14
   140008650:	pop    r13
   140008652:	pop    r12
   140008654:	pop    rdi
   140008655:	ret    
   140008656:	int3   
   140008657:	int3   
   140008658:	mov    rax,rsp
   14000865b:	mov    QWORD PTR [rax+0x10],rbx
   14000865f:	mov    QWORD PTR [rax+0x18],rsi
   140008663:	mov    QWORD PTR [rax+0x20],rdi
   140008667:	push   rbp
   140008668:	lea    rbp,[rax-0x4b8]
   14000866f:	sub    rsp,0x5b0
   140008676:	mov    rax,QWORD PTR [rip+0x12a0b]        # 0x14001b088
   14000867d:	xor    rax,rsp
   140008680:	mov    QWORD PTR [rbp+0x4a0],rax
   140008687:	mov    edi,r8d
   14000868a:	mov    esi,edx
   14000868c:	mov    ebx,ecx
   14000868e:	cmp    ecx,0xffffffff
   140008691:	je     0x140008698
   140008693:	call   0x14000ac4c
   140008698:	and    DWORD PTR [rsp+0x30],0x0
   14000869d:	lea    rcx,[rsp+0x34]
   1400086a2:	xor    edx,edx
   1400086a4:	mov    r8d,0x94
   1400086aa:	call   0x1400099c0
   1400086af:	lea    rax,[rsp+0x30]
   1400086b4:	lea    rcx,[rbp-0x30]
   1400086b8:	mov    QWORD PTR [rsp+0x20],rax
   1400086bd:	lea    rax,[rbp-0x30]
   1400086c1:	mov    QWORD PTR [rsp+0x28],rax
   1400086c6:	call   0x14000ac54
   1400086cb:	mov    rax,QWORD PTR [rbp+0x4b8]
   1400086d2:	mov    QWORD PTR [rbp+0xc8],rax
   1400086d9:	lea    rax,[rbp+0x4b8]
   1400086e0:	mov    DWORD PTR [rsp+0x30],esi
   1400086e4:	add    rax,0x8
   1400086e8:	mov    DWORD PTR [rsp+0x34],edi
   1400086ec:	mov    QWORD PTR [rbp+0x68],rax
   1400086f0:	mov    rax,QWORD PTR [rbp+0x4b8]
   1400086f7:	mov    QWORD PTR [rsp+0x40],rax
   1400086fc:	call   QWORD PTR [rip+0xaabe]        # 0x1400131c0
   140008702:	lea    rcx,[rsp+0x20]
   140008707:	mov    edi,eax
   140008709:	call   0x14000ade0
   14000870e:	test   eax,eax
   140008710:	jne    0x140008722
   140008712:	test   edi,edi
   140008714:	jne    0x140008722
   140008716:	cmp    ebx,0xffffffff
   140008719:	je     0x140008722
   14000871b:	mov    ecx,ebx
   14000871d:	call   0x14000ac4c
   140008722:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140008729:	xor    rcx,rsp
   14000872c:	call   0x140005fe0
   140008731:	lea    r11,[rsp+0x5b0]
   140008739:	mov    rbx,QWORD PTR [r11+0x18]
   14000873d:	mov    rsi,QWORD PTR [r11+0x20]
   140008741:	mov    rdi,QWORD PTR [r11+0x28]
   140008745:	mov    rsp,r11
   140008748:	pop    rbp
   140008749:	ret    
   14000874a:	int3   
   14000874b:	int3   
   14000874c:	mov    QWORD PTR [rip+0x14eed],rcx        # 0x14001d640
   140008753:	ret    
   140008754:	mov    QWORD PTR [rsp+0x8],rbx
   140008759:	mov    QWORD PTR [rsp+0x10],rbp
   14000875e:	mov    QWORD PTR [rsp+0x18],rsi
   140008763:	push   rdi
   140008764:	sub    rsp,0x30
   140008768:	mov    rbp,rcx
   14000876b:	mov    rcx,QWORD PTR [rip+0x14ece]        # 0x14001d640
   140008772:	mov    ebx,r9d
   140008775:	mov    rdi,r8
   140008778:	mov    rsi,rdx
   14000877b:	call   QWORD PTR [rip+0xaa2f]        # 0x1400131b0
   140008781:	mov    r9d,ebx
   140008784:	mov    r8,rdi
   140008787:	mov    rdx,rsi
   14000878a:	mov    rcx,rbp
   14000878d:	test   rax,rax
   140008790:	je     0x1400087a9
   140008792:	mov    rbx,QWORD PTR [rsp+0x40]
   140008797:	mov    rbp,QWORD PTR [rsp+0x48]
   14000879c:	mov    rsi,QWORD PTR [rsp+0x50]
   1400087a1:	add    rsp,0x30
   1400087a5:	pop    rdi
   1400087a6:	rex.W jmp rax
   1400087a9:	mov    rax,QWORD PTR [rsp+0x60]
   1400087ae:	mov    QWORD PTR [rsp+0x20],rax
   1400087b3:	call   0x1400087dc
   1400087b8:	int3   
   1400087b9:	int3   
   1400087ba:	int3   
   1400087bb:	int3   
   1400087bc:	sub    rsp,0x38
   1400087c0:	and    QWORD PTR [rsp+0x20],0x0
   1400087c6:	xor    r9d,r9d
   1400087c9:	xor    r8d,r8d
   1400087cc:	xor    edx,edx
   1400087ce:	xor    ecx,ecx
   1400087d0:	call   0x140008754
   1400087d5:	add    rsp,0x38
   1400087d9:	ret    
   1400087da:	int3   
   1400087db:	int3   
   1400087dc:	sub    rsp,0x28
   1400087e0:	mov    ecx,0x17
   1400087e5:	call   0x14000f5e0
   1400087ea:	test   eax,eax
   1400087ec:	je     0x1400087f5
   1400087ee:	mov    ecx,0x5
   1400087f3:	int    0x29
   1400087f5:	mov    r8d,0x1
   1400087fb:	mov    edx,0xc0000417
   140008800:	lea    ecx,[r8+0x1]
   140008804:	call   0x140008658
   140008809:	mov    ecx,0xc0000417
   14000880e:	add    rsp,0x28
   140008812:	jmp    0x14000adc0
   140008817:	int3   
   140008818:	sub    rsp,0x28
   14000881c:	call   0x1400071c0
   140008821:	test   rax,rax
   140008824:	jne    0x14000882f
   140008826:	lea    rax,[rip+0x129df]        # 0x14001b20c
   14000882d:	jmp    0x140008833
   14000882f:	add    rax,0x14
   140008833:	add    rsp,0x28
   140008837:	ret    
   140008838:	mov    QWORD PTR [rsp+0x8],rbx
   14000883d:	push   rdi
   14000883e:	sub    rsp,0x20
   140008842:	mov    edi,ecx
   140008844:	call   0x1400071c0
   140008849:	test   rax,rax
   14000884c:	jne    0x140008857
   14000884e:	lea    rax,[rip+0x129b7]        # 0x14001b20c
   140008855:	jmp    0x14000885b
   140008857:	add    rax,0x14
   14000885b:	mov    DWORD PTR [rax],edi
   14000885d:	call   0x1400071c0
   140008862:	lea    rbx,[rip+0x1299f]        # 0x14001b208
   140008869:	test   rax,rax
   14000886c:	je     0x140008872
   14000886e:	lea    rbx,[rax+0x10]
   140008872:	mov    ecx,edi
   140008874:	call   0x1400088a8
   140008879:	mov    DWORD PTR [rbx],eax
   14000887b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008880:	add    rsp,0x20
   140008884:	pop    rdi
   140008885:	ret    
   140008886:	int3   
   140008887:	int3   
   140008888:	sub    rsp,0x28
   14000888c:	call   0x1400071c0
   140008891:	test   rax,rax
   140008894:	jne    0x14000889f
   140008896:	lea    rax,[rip+0x1296b]        # 0x14001b208
   14000889d:	jmp    0x1400088a3
   14000889f:	add    rax,0x10
   1400088a3:	add    rsp,0x28
   1400088a7:	ret    
   1400088a8:	lea    r10,[rip+0x127f1]        # 0x14001b0a0
   1400088af:	xor    edx,edx
   1400088b1:	mov    r8,r10
   1400088b4:	lea    r9d,[rdx+0x8]
   1400088b8:	cmp    ecx,DWORD PTR [r8]
   1400088bb:	je     0x1400088ec
   1400088bd:	inc    edx
   1400088bf:	add    r8,r9
   1400088c2:	movsxd rax,edx
   1400088c5:	cmp    rax,0x2d
   1400088c9:	jb     0x1400088b8
   1400088cb:	lea    eax,[rcx-0x13]
   1400088ce:	cmp    eax,0x11
   1400088d1:	ja     0x1400088d9
   1400088d3:	mov    eax,0xd
   1400088d8:	ret    
   1400088d9:	add    ecx,0xffffff44
   1400088df:	mov    eax,0x16
   1400088e4:	cmp    ecx,0xe
   1400088e7:	cmovbe eax,r9d
   1400088eb:	ret    
   1400088ec:	movsxd rax,edx
   1400088ef:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   1400088f4:	ret    
   1400088f5:	int3   
   1400088f6:	int3   
   1400088f7:	int3   
   1400088f8:	rex push rbx
   1400088fa:	sub    rsp,0x10
   1400088fe:	mov    r9d,0x2
   140008904:	xor    ecx,ecx
   140008906:	lea    r10d,[r9-0x1]
   14000890a:	mov    DWORD PTR [rip+0x12903],r9d        # 0x14001b214
   140008911:	mov    eax,r10d
   140008914:	mov    DWORD PTR [rip+0x128f5],r10d        # 0x14001b210
   14000891b:	cpuid  
   14000891d:	mov    DWORD PTR [rsp],eax
   140008920:	mov    DWORD PTR [rsp+0x4],ebx
   140008924:	mov    DWORD PTR [rsp+0xc],edx
   140008928:	bt     ecx,0x14
   14000892c:	jae    0x140008959
   14000892e:	mov    DWORD PTR [rip+0x128db],r9d        # 0x14001b210
   140008935:	mov    DWORD PTR [rip+0x128d5],0x6        # 0x14001b214
   14000893f:	bt     ecx,0x1c
   140008943:	jae    0x140008959
   140008945:	mov    DWORD PTR [rip+0x128c1],0x3        # 0x14001b210
   14000894f:	mov    DWORD PTR [rip+0x128bb],0xe        # 0x14001b214
   140008959:	mov    r8d,DWORD PTR [rip+0x14ce8]        # 0x14001d648
   140008960:	xor    ecx,ecx
   140008962:	mov    eax,0x7
   140008967:	cpuid  
   140008969:	mov    DWORD PTR [rsp],eax
   14000896c:	mov    DWORD PTR [rsp+0x8],ecx
   140008970:	mov    DWORD PTR [rsp+0xc],edx
   140008974:	bt     ebx,0x9
   140008978:	jae    0x140008984
   14000897a:	or     r8d,r9d
   14000897d:	mov    DWORD PTR [rip+0x14cc4],r8d        # 0x14001d648
   140008984:	xor    eax,eax
   140008986:	xor    ecx,ecx
   140008988:	cpuid  
   14000898a:	mov    DWORD PTR [rsp],eax
   14000898d:	cmp    ebx,0x756e6547
   140008993:	jne    0x1400089f6
   140008995:	cmp    edx,0x49656e69
   14000899b:	jne    0x1400089f6
   14000899d:	cmp    ecx,0x6c65746e
   1400089a3:	jne    0x1400089f6
   1400089a5:	xor    ecx,ecx
   1400089a7:	mov    eax,r10d
   1400089aa:	cpuid  
   1400089ac:	and    eax,0xfff3ff0
   1400089b1:	mov    DWORD PTR [rsp+0x4],ebx
   1400089b5:	mov    DWORD PTR [rsp+0x8],ecx
   1400089b9:	mov    DWORD PTR [rsp+0xc],edx
   1400089bd:	cmp    eax,0x106c0
   1400089c2:	je     0x1400089ec
   1400089c4:	cmp    eax,0x20660
   1400089c9:	je     0x1400089ec
   1400089cb:	cmp    eax,0x20670
   1400089d0:	je     0x1400089ec
   1400089d2:	add    eax,0xfffcf9b0
   1400089d7:	cmp    eax,0x20
   1400089da:	ja     0x1400089f6
   1400089dc:	movabs rcx,0x100010001
   1400089e6:	bt     rcx,rax
   1400089ea:	jae    0x1400089f6
   1400089ec:	or     r8d,r10d
   1400089ef:	mov    DWORD PTR [rip+0x14c52],r8d        # 0x14001d648
   1400089f6:	xor    eax,eax
   1400089f8:	add    rsp,0x10
   1400089fc:	pop    rbx
   1400089fd:	ret    
   1400089fe:	int3   
   1400089ff:	int3   
   140008a00:	sub    rsp,0x28
   140008a04:	test   rcx,rcx
   140008a07:	jne    0x140008a22
   140008a09:	call   0x140008888
   140008a0e:	mov    DWORD PTR [rax],0x16
   140008a14:	call   0x1400087bc
   140008a19:	or     rax,0xffffffffffffffff
   140008a1d:	add    rsp,0x28
   140008a21:	ret    
   140008a22:	mov    r8,rcx
   140008a25:	mov    rcx,QWORD PTR [rip+0x14aec]        # 0x14001d518
   140008a2c:	xor    edx,edx
   140008a2e:	add    rsp,0x28
   140008a32:	rex.W jmp QWORD PTR [rip+0xa837]        # 0x140013270
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	mov    rax,rsp
   140008a3f:	mov    QWORD PTR [rax+0x8],rbx
   140008a43:	mov    QWORD PTR [rax+0x10],rbp
   140008a47:	mov    QWORD PTR [rax+0x18],rsi
   140008a4b:	mov    QWORD PTR [rax+0x20],rdi
   140008a4f:	push   r14
   140008a51:	sub    rsp,0x20
   140008a55:	xor    ebx,ebx
   140008a57:	mov    rsi,rdx
   140008a5a:	mov    rbp,rcx
   140008a5d:	or     r14d,0xffffffff
   140008a61:	xor    r8d,r8d
   140008a64:	mov    rdx,rsi
   140008a67:	mov    rcx,rbp
   140008a6a:	call   0x14000c934
   140008a6f:	mov    rdi,rax
   140008a72:	test   rax,rax
   140008a75:	jne    0x140008a9e
   140008a77:	cmp    DWORD PTR [rip+0x14bcf],eax        # 0x14001d64c
   140008a7d:	jbe    0x140008a9e
   140008a7f:	mov    ecx,ebx
   140008a81:	call   QWORD PTR [rip+0xa7f1]        # 0x140013278
   140008a87:	lea    ecx,[rbx+0x3e8]
   140008a8d:	cmp    ecx,DWORD PTR [rip+0x14bb9]        # 0x14001d64c
   140008a93:	mov    ebx,ecx
   140008a95:	cmova  ebx,r14d
   140008a99:	cmp    ebx,r14d
   140008a9c:	jne    0x140008a61
   140008a9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008aa3:	mov    rbp,QWORD PTR [rsp+0x38]
   140008aa8:	mov    rsi,QWORD PTR [rsp+0x40]
   140008aad:	mov    rax,rdi
   140008ab0:	mov    rdi,QWORD PTR [rsp+0x48]
   140008ab5:	add    rsp,0x20
   140008ab9:	pop    r14
   140008abb:	ret    
   140008abc:	mov    rax,rsp
   140008abf:	mov    QWORD PTR [rax+0x8],rbx
   140008ac3:	mov    QWORD PTR [rax+0x10],rbp
   140008ac7:	mov    QWORD PTR [rax+0x18],rsi
   140008acb:	mov    QWORD PTR [rax+0x20],rdi
   140008acf:	push   r14
   140008ad1:	sub    rsp,0x20
   140008ad5:	mov    esi,DWORD PTR [rip+0x14b71]        # 0x14001d64c
   140008adb:	xor    edi,edi
   140008add:	mov    rbp,rcx
   140008ae0:	or     r14d,0xffffffff
   140008ae4:	mov    rcx,rbp
   140008ae7:	call   0x140009c34
   140008aec:	mov    rbx,rax
   140008aef:	test   rax,rax
   140008af2:	jne    0x140008b19
   140008af4:	test   esi,esi
   140008af6:	je     0x140008b19
   140008af8:	mov    ecx,edi
   140008afa:	call   QWORD PTR [rip+0xa778]        # 0x140013278
   140008b00:	mov    esi,DWORD PTR [rip+0x14b46]        # 0x14001d64c
   140008b06:	lea    ecx,[rdi+0x3e8]
   140008b0c:	cmp    ecx,esi
   140008b0e:	mov    edi,ecx
   140008b10:	cmova  edi,r14d
   140008b14:	cmp    edi,r14d
   140008b17:	jne    0x140008ae4
   140008b19:	mov    rbp,QWORD PTR [rsp+0x38]
   140008b1e:	mov    rsi,QWORD PTR [rsp+0x40]
   140008b23:	mov    rdi,QWORD PTR [rsp+0x48]
   140008b28:	mov    rax,rbx
   140008b2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b30:	add    rsp,0x20
   140008b34:	pop    r14
   140008b36:	ret    
   140008b37:	int3   
   140008b38:	mov    rax,rsp
   140008b3b:	mov    QWORD PTR [rax+0x8],rbx
   140008b3f:	mov    QWORD PTR [rax+0x10],rbp
   140008b43:	mov    QWORD PTR [rax+0x18],rsi
   140008b47:	mov    QWORD PTR [rax+0x20],rdi
   140008b4b:	push   r14
   140008b4d:	sub    rsp,0x20
   140008b51:	xor    ebx,ebx
   140008b53:	mov    rsi,rdx
   140008b56:	mov    rbp,rcx
   140008b59:	or     r14d,0xffffffff
   140008b5d:	mov    rdx,rsi
   140008b60:	mov    rcx,rbp
   140008b63:	call   0x140009fa8
   140008b68:	mov    rdi,rax
   140008b6b:	test   rax,rax
   140008b6e:	jne    0x140008b9c
   140008b70:	test   rsi,rsi
   140008b73:	je     0x140008b9c
   140008b75:	cmp    DWORD PTR [rip+0x14ad1],eax        # 0x14001d64c
   140008b7b:	jbe    0x140008b9c
   140008b7d:	mov    ecx,ebx
   140008b7f:	call   QWORD PTR [rip+0xa6f3]        # 0x140013278
   140008b85:	lea    ecx,[rbx+0x3e8]
   140008b8b:	cmp    ecx,DWORD PTR [rip+0x14abb]        # 0x14001d64c
   140008b91:	mov    ebx,ecx
   140008b93:	cmova  ebx,r14d
   140008b97:	cmp    ebx,r14d
   140008b9a:	jne    0x140008b5d
   140008b9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ba1:	mov    rbp,QWORD PTR [rsp+0x38]
   140008ba6:	mov    rsi,QWORD PTR [rsp+0x40]
   140008bab:	mov    rax,rdi
   140008bae:	mov    rdi,QWORD PTR [rsp+0x48]
   140008bb3:	add    rsp,0x20
   140008bb7:	pop    r14
   140008bb9:	ret    
   140008bba:	int3   
   140008bbb:	int3   
   140008bbc:	mov    rax,rsp
   140008bbf:	mov    QWORD PTR [rax+0x10],rbx
   140008bc3:	mov    QWORD PTR [rax+0x18],rbp
   140008bc7:	mov    QWORD PTR [rax+0x20],rsi
   140008bcb:	mov    DWORD PTR [rax+0x8],ecx
   140008bce:	push   rdi
   140008bcf:	sub    rsp,0x20
   140008bd3:	mov    rbx,rdx
   140008bd6:	call   0x140007a7c
   140008bdb:	xor    edi,edi
   140008bdd:	test   eax,eax
   140008bdf:	jns    0x140008be9
   140008be1:	or     eax,0xffffffff
   140008be4:	jmp    0x140008d3d
   140008be9:	mov    rcx,rbx
   140008bec:	call   0x14000c9d0
   140008bf1:	mov    ecx,DWORD PTR [rbx+0x18]
   140008bf4:	movsxd rsi,eax
   140008bf7:	test   cl,0x82
   140008bfa:	jne    0x140008c0d
   140008bfc:	call   0x140008888
   140008c01:	mov    DWORD PTR [rax],0x9
   140008c07:	or     DWORD PTR [rbx+0x18],0x20
   140008c0b:	jmp    0x140008be1
   140008c0d:	test   cl,0x40
   140008c10:	je     0x140008c1f
   140008c12:	call   0x140008888
   140008c17:	mov    DWORD PTR [rax],0x22
   140008c1d:	jmp    0x140008c07
   140008c1f:	test   cl,0x1
   140008c22:	je     0x140008c3d
   140008c24:	mov    DWORD PTR [rbx+0x8],edi
   140008c27:	test   cl,0x10
   140008c2a:	je     0x140008cb9
   140008c30:	mov    rax,QWORD PTR [rbx+0x10]
   140008c34:	and    ecx,0xfffffffe
   140008c37:	mov    QWORD PTR [rbx],rax
   140008c3a:	mov    DWORD PTR [rbx+0x18],ecx
   140008c3d:	mov    eax,DWORD PTR [rbx+0x18]
   140008c40:	mov    DWORD PTR [rbx+0x8],edi
   140008c43:	and    eax,0xffffffef
   140008c46:	or     eax,0x2
   140008c49:	mov    DWORD PTR [rbx+0x18],eax
   140008c4c:	test   eax,0x10c
   140008c51:	jne    0x140008c82
   140008c53:	call   0x14000c72c
   140008c58:	add    rax,0x30
   140008c5c:	cmp    rbx,rax
   140008c5f:	je     0x140008c6f
   140008c61:	call   0x14000c72c
   140008c66:	add    rax,0x60
   140008c6a:	cmp    rbx,rax
   140008c6d:	jne    0x140008c7a
   140008c6f:	mov    ecx,esi
   140008c71:	call   0x14000c9f8
   140008c76:	test   eax,eax
   140008c78:	jne    0x140008c82
   140008c7a:	mov    rcx,rbx
   140008c7d:	call   0x14000d450
   140008c82:	test   DWORD PTR [rbx+0x18],0x108
   140008c89:	je     0x140008d1a
   140008c8f:	mov    ebp,DWORD PTR [rbx]
   140008c91:	mov    rdx,QWORD PTR [rbx+0x10]
   140008c95:	sub    ebp,DWORD PTR [rbx+0x10]
   140008c98:	lea    rax,[rdx+0x1]
   140008c9c:	mov    QWORD PTR [rbx],rax
   140008c9f:	mov    eax,DWORD PTR [rbx+0x24]
   140008ca2:	dec    eax
   140008ca4:	mov    DWORD PTR [rbx+0x8],eax
   140008ca7:	test   ebp,ebp
   140008ca9:	jle    0x140008cc4
   140008cab:	mov    r8d,ebp
   140008cae:	mov    ecx,esi
   140008cb0:	call   0x14000ca6c
   140008cb5:	mov    edi,eax
   140008cb7:	jmp    0x140008d0e
   140008cb9:	or     ecx,0x20
   140008cbc:	mov    DWORD PTR [rbx+0x18],ecx
   140008cbf:	jmp    0x140008be1
   140008cc4:	lea    eax,[rsi+0x2]
   140008cc7:	cmp    eax,0x1
   140008cca:	jbe    0x140008cea
   140008ccc:	mov    rcx,rsi
   140008ccf:	mov    rax,rsi
   140008cd2:	lea    rdx,[rip+0x16a07]        # 0x14001f6e0
   140008cd9:	and    ecx,0x1f
   140008cdc:	sar    rax,0x5
   140008ce0:	imul   rcx,rcx,0x58
   140008ce4:	add    rcx,QWORD PTR [rdx+rax*8]
   140008ce8:	jmp    0x140008cf1
   140008cea:	lea    rcx,[rip+0x1233f]        # 0x14001b030
   140008cf1:	test   BYTE PTR [rcx+0x8],0x20
   140008cf5:	je     0x140008d0e
   140008cf7:	xor    edx,edx
   140008cf9:	mov    ecx,esi
   140008cfb:	lea    r8d,[rdx+0x2]
   140008cff:	call   0x14000d2cc
   140008d04:	cmp    rax,0xffffffffffffffff
   140008d08:	je     0x140008c07
   140008d0e:	mov    rcx,QWORD PTR [rbx+0x10]
   140008d12:	mov    al,BYTE PTR [rsp+0x30]
   140008d16:	mov    BYTE PTR [rcx],al
   140008d18:	jmp    0x140008d30
   140008d1a:	mov    ebp,0x1
   140008d1f:	lea    rdx,[rsp+0x30]
   140008d24:	mov    ecx,esi
   140008d26:	mov    r8d,ebp
   140008d29:	call   0x14000ca6c
   140008d2e:	mov    edi,eax
   140008d30:	cmp    edi,ebp
   140008d32:	jne    0x140008c07
   140008d38:	movzx  eax,BYTE PTR [rsp+0x30]
   140008d3d:	mov    rbx,QWORD PTR [rsp+0x38]
   140008d42:	mov    rbp,QWORD PTR [rsp+0x40]
   140008d47:	mov    rsi,QWORD PTR [rsp+0x48]
   140008d4c:	add    rsp,0x20
   140008d50:	pop    rdi
   140008d51:	ret    
   140008d52:	int3   
   140008d53:	int3   
   140008d54:	rex push rbx
   140008d56:	sub    rsp,0x20
   140008d5a:	mov    rbx,rcx
   140008d5d:	mov    BYTE PTR [rcx+0x18],0x0
   140008d61:	test   rdx,rdx
   140008d64:	jne    0x140008dec
   140008d6a:	call   0x14000719c
   140008d6f:	mov    QWORD PTR [rbx+0x10],rax
   140008d73:	mov    rdx,QWORD PTR [rax+0xc0]
   140008d7a:	mov    QWORD PTR [rbx],rdx
   140008d7d:	mov    rcx,QWORD PTR [rax+0xb8]
   140008d84:	mov    QWORD PTR [rbx+0x8],rcx
   140008d88:	cmp    rdx,QWORD PTR [rip+0x129d1]        # 0x14001b760
   140008d8f:	je     0x140008da7
   140008d91:	mov    eax,DWORD PTR [rax+0xc8]
   140008d97:	test   DWORD PTR [rip+0x13483],eax        # 0x14001c220
   140008d9d:	jne    0x140008da7
   140008d9f:	call   0x14000b328
   140008da4:	mov    QWORD PTR [rbx],rax
   140008da7:	mov    rax,QWORD PTR [rip+0x12d2a]        # 0x14001bad8
   140008dae:	cmp    QWORD PTR [rbx+0x8],rax
   140008db2:	je     0x140008dcf
   140008db4:	mov    rax,QWORD PTR [rbx+0x10]
   140008db8:	mov    ecx,DWORD PTR [rax+0xc8]
   140008dbe:	test   DWORD PTR [rip+0x1345c],ecx        # 0x14001c220
   140008dc4:	jne    0x140008dcf
   140008dc6:	call   0x14000b720
   140008dcb:	mov    QWORD PTR [rbx+0x8],rax
   140008dcf:	mov    rcx,QWORD PTR [rbx+0x10]
   140008dd3:	mov    eax,DWORD PTR [rcx+0xc8]
   140008dd9:	test   al,0x2
   140008ddb:	jne    0x140008df3
   140008ddd:	or     eax,0x2
   140008de0:	mov    DWORD PTR [rcx+0xc8],eax
   140008de6:	mov    BYTE PTR [rbx+0x18],0x1
   140008dea:	jmp    0x140008df3
   140008dec:	movups xmm0,XMMWORD PTR [rdx]
   140008def:	movdqu XMMWORD PTR [rcx],xmm0
   140008df3:	mov    rax,rbx
   140008df6:	add    rsp,0x20
   140008dfa:	pop    rbx
   140008dfb:	ret    
   140008dfc:	mov    QWORD PTR [rsp+0x18],rbx
   140008e01:	push   rbp
   140008e02:	push   rsi
   140008e03:	push   rdi
   140008e04:	push   r12
   140008e06:	push   r13
   140008e08:	push   r14
   140008e0a:	push   r15
   140008e0c:	lea    rbp,[rsp-0x1e0]
   140008e14:	sub    rsp,0x2e0
   140008e1b:	mov    rax,QWORD PTR [rip+0x12266]        # 0x14001b088
   140008e22:	xor    rax,rsp
   140008e25:	mov    QWORD PTR [rbp+0x1d8],rax
   140008e2c:	xor    eax,eax
   140008e2e:	mov    rsi,rcx
   140008e31:	mov    QWORD PTR [rsp+0x68],rcx
   140008e36:	mov    rdi,rdx
   140008e39:	lea    rcx,[rbp-0x58]
   140008e3d:	mov    rdx,r8
   140008e40:	mov    r13,r9
   140008e43:	mov    DWORD PTR [rsp+0x64],eax
   140008e47:	mov    r14d,eax
   140008e4a:	mov    DWORD PTR [rsp+0x54],eax
   140008e4e:	mov    r12d,eax
   140008e51:	mov    DWORD PTR [rsp+0x48],eax
   140008e55:	mov    DWORD PTR [rsp+0x60],eax
   140008e59:	mov    DWORD PTR [rsp+0x58],eax
   140008e5d:	call   0x140008d54
   140008e62:	call   0x140008888
   140008e67:	mov    QWORD PTR [rbp-0x70],rax
   140008e6b:	call   0x140007a7c
   140008e70:	xor    r10d,r10d
   140008e73:	test   eax,eax
   140008e75:	js     0x140009838
   140008e7b:	test   rsi,rsi
   140008e7e:	je     0x140009825
   140008e84:	test   BYTE PTR [rsi+0x18],0x40
   140008e88:	lea    r9,[rip+0xffffffffffff7171]        # 0x140000000
   140008e8f:	jne    0x140008f20
   140008e95:	mov    rcx,rsi
   140008e98:	call   0x14000c9d0
   140008e9d:	lea    rdx,[rip+0x1218c]        # 0x14001b030
   140008ea4:	movsxd r9,eax
   140008ea7:	lea    ecx,[r9+0x2]
   140008eab:	cmp    ecx,0x1
   140008eae:	jbe    0x140008ed3
   140008eb0:	mov    r8,r9
   140008eb3:	mov    rcx,r9
   140008eb6:	lea    rax,[rip+0xffffffffffff7143]        # 0x140000000
   140008ebd:	and    r8d,0x1f
   140008ec1:	sar    rcx,0x5
   140008ec5:	imul   r8,r8,0x58
   140008ec9:	add    r8,QWORD PTR [rax+rcx*8+0x1f6e0]
   140008ed1:	jmp    0x140008ed6
   140008ed3:	mov    r8,rdx
   140008ed6:	test   BYTE PTR [r8+0x38],0x7f
   140008edb:	jne    0x140009825
   140008ee1:	lea    eax,[r9+0x2]
   140008ee5:	cmp    eax,0x1
   140008ee8:	jbe    0x140008f0c
   140008eea:	mov    rdx,r9
   140008eed:	mov    rax,r9
   140008ef0:	lea    r9,[rip+0xffffffffffff7109]        # 0x140000000
   140008ef7:	and    edx,0x1f
   140008efa:	sar    rax,0x5
   140008efe:	imul   rdx,rdx,0x58
   140008f02:	add    rdx,QWORD PTR [r9+rax*8+0x1f6e0]
   140008f0a:	jmp    0x140008f13
   140008f0c:	lea    r9,[rip+0xffffffffffff70ed]        # 0x140000000
   140008f13:	test   BYTE PTR [rdx+0x38],0x80
   140008f17:	jne    0x140009825
   140008f1d:	xor    r10d,r10d
   140008f20:	test   rdi,rdi
   140008f23:	je     0x140009825
   140008f29:	mov    r15b,BYTE PTR [rdi]
   140008f2c:	mov    r8d,r10d
   140008f2f:	mov    DWORD PTR [rsp+0x50],r10d
   140008f34:	mov    DWORD PTR [rsp+0x40],r10d
   140008f39:	mov    DWORD PTR [rsp+0x44],r10d
   140008f3e:	mov    edx,r10d
   140008f41:	mov    QWORD PTR [rbp-0x80],r10
   140008f45:	test   r15b,r15b
   140008f48:	je     0x14000983c
   140008f4e:	mov    rbx,QWORD PTR [rbp-0x60]
   140008f52:	mov    r11d,0x200
   140008f58:	inc    rdi
   140008f5b:	mov    QWORD PTR [rbp-0x68],rdi
   140008f5f:	test   r8d,r8d
   140008f62:	js     0x14000983c
   140008f68:	lea    eax,[r15-0x20]
   140008f6c:	cmp    al,0x58
   140008f6e:	ja     0x140008f82
   140008f70:	movsx  rax,r15b
   140008f74:	movsx  ecx,BYTE PTR [rax+r9*1+0x141c0]
   140008f7d:	and    ecx,0xf
   140008f80:	jmp    0x140008f85
   140008f82:	mov    ecx,r10d
   140008f85:	movsxd rax,edx
   140008f88:	movsxd rcx,ecx
   140008f8b:	lea    rdx,[rax+rcx*8]
   140008f8f:	movsx  edx,BYTE PTR [rdx+r9*1+0x141e0]
   140008f98:	sar    edx,0x4
   140008f9b:	mov    DWORD PTR [rsp+0x5c],edx
   140008f9f:	mov    ecx,edx
   140008fa1:	test   edx,edx
   140008fa3:	je     0x1400096df
   140008fa9:	dec    ecx
   140008fab:	je     0x140009800
   140008fb1:	dec    ecx
   140008fb3:	je     0x1400097b0
   140008fb9:	dec    ecx
   140008fbb:	je     0x140009774
   140008fc1:	dec    ecx
   140008fc3:	je     0x14000976c
   140008fc9:	dec    ecx
   140008fcb:	je     0x140009736
   140008fd1:	dec    ecx
   140008fd3:	je     0x14000963f
   140008fd9:	dec    ecx
   140008fdb:	jne    0x1400092a2
   140008fe1:	movsx  ecx,r15b
   140008fe5:	cmp    ecx,0x64
   140008fe8:	jg     0x140009158
   140008fee:	je     0x1400092b3
   140008ff4:	cmp    ecx,0x41
   140008ff7:	je     0x14000912d
   140008ffd:	cmp    ecx,0x43
   140009000:	je     0x1400090d3
   140009006:	lea    eax,[rcx-0x45]
   140009009:	test   eax,0xfffffffd
   14000900e:	je     0x14000912d
   140009014:	cmp    ecx,0x53
   140009017:	je     0x140009086
   140009019:	cmp    ecx,0x58
   14000901c:	je     0x1400091f2
   140009022:	cmp    ecx,0x5a
   140009025:	je     0x14000903e
   140009027:	cmp    ecx,0x61
   14000902a:	je     0x140009139
   140009030:	cmp    ecx,0x63
   140009033:	je     0x1400090e1
   140009039:	jmp    0x1400094be
   14000903e:	mov    rax,QWORD PTR [r13+0x0]
   140009042:	add    r13,0x8
   140009046:	test   rax,rax
   140009049:	je     0x14000907a
   14000904b:	mov    rbx,QWORD PTR [rax+0x8]
   14000904f:	test   rbx,rbx
   140009052:	je     0x14000907a
   140009054:	movsx  eax,WORD PTR [rax]
   140009057:	bt     r14d,0xb
   14000905c:	jae    0x140009070
   14000905e:	cdq    
   14000905f:	mov    DWORD PTR [rsp+0x58],0x1
   140009067:	sub    eax,edx
   140009069:	sar    eax,1
   14000906b:	jmp    0x1400094ba
   140009070:	mov    DWORD PTR [rsp+0x58],r10d
   140009075:	jmp    0x1400094ba
   14000907a:	mov    rbx,QWORD PTR [rip+0x12197]        # 0x14001b218
   140009081:	jmp    0x1400094af
   140009086:	test   r14d,0x830
   14000908d:	jne    0x140009094
   14000908f:	bts    r14d,0xb
   140009094:	mov    rbx,QWORD PTR [r13+0x0]
   140009098:	cmp    r12d,0xffffffff
   14000909c:	mov    eax,r12d
   14000909f:	mov    ecx,0x7fffffff
   1400090a4:	cmove  eax,ecx
   1400090a7:	add    r13,0x8
   1400090ab:	test   r14d,0x810
   1400090b2:	je     0x1400091be
   1400090b8:	test   rbx,rbx
   1400090bb:	mov    DWORD PTR [rsp+0x58],0x1
   1400090c3:	cmove  rbx,QWORD PTR [rip+0x12155]        # 0x14001b220
   1400090cb:	mov    rcx,rbx
   1400090ce:	jmp    0x1400091b2
   1400090d3:	test   r14d,0x830
   1400090da:	jne    0x1400090e1
   1400090dc:	bts    r14d,0xb
   1400090e1:	add    r13,0x8
   1400090e5:	test   r14d,0x810
   1400090ec:	je     0x140009115
   1400090ee:	movzx  r9d,WORD PTR [r13-0x8]
   1400090f3:	lea    rdx,[rbp-0x30]
   1400090f7:	lea    rcx,[rsp+0x44]
   1400090fc:	mov    r8,r11
   1400090ff:	call   0x14000d6d4
   140009104:	xor    r10d,r10d
   140009107:	test   eax,eax
   140009109:	je     0x140009124
   14000910b:	mov    DWORD PTR [rsp+0x60],0x1
   140009113:	jmp    0x140009124
   140009115:	mov    al,BYTE PTR [r13-0x8]
   140009119:	mov    DWORD PTR [rsp+0x44],0x1
   140009121:	mov    BYTE PTR [rbp-0x30],al
   140009124:	lea    rbx,[rbp-0x30]
   140009128:	jmp    0x1400094be
   14000912d:	mov    DWORD PTR [rsp+0x78],0x1
   140009135:	add    r15b,0x20
   140009139:	or     r14d,0x40
   14000913d:	lea    rbx,[rbp-0x30]
   140009141:	mov    esi,r11d
   140009144:	test   r12d,r12d
   140009147:	jns    0x1400093d1
   14000914d:	mov    r12d,0x6
   140009153:	jmp    0x140009417
   140009158:	cmp    ecx,0x65
   14000915b:	jl     0x1400094be
   140009161:	cmp    ecx,0x67
   140009164:	jle    0x140009139
   140009166:	cmp    ecx,0x69
   140009169:	je     0x1400092b3
   14000916f:	cmp    ecx,0x6e
   140009172:	je     0x140009235
   140009178:	cmp    ecx,0x6f
   14000917b:	je     0x14000921e
   140009181:	cmp    ecx,0x70
   140009184:	je     0x1400091e7
   140009186:	cmp    ecx,0x73
   140009189:	je     0x140009094
   14000918f:	cmp    ecx,0x75
   140009192:	je     0x1400092b7
   140009198:	cmp    ecx,0x78
   14000919b:	jne    0x1400094be
   1400091a1:	lea    eax,[rcx-0x51]
   1400091a4:	jmp    0x1400091f7
   1400091a6:	dec    eax
   1400091a8:	cmp    WORD PTR [rcx],r10w
   1400091ac:	je     0x1400091b6
   1400091ae:	add    rcx,0x2
   1400091b2:	test   eax,eax
   1400091b4:	jne    0x1400091a6
   1400091b6:	sub    rcx,rbx
   1400091b9:	sar    rcx,1
   1400091bc:	jmp    0x1400091de
   1400091be:	test   rbx,rbx
   1400091c1:	cmove  rbx,QWORD PTR [rip+0x1204f]        # 0x14001b218
   1400091c9:	mov    rcx,rbx
   1400091cc:	jmp    0x1400091d8
   1400091ce:	dec    eax
   1400091d0:	cmp    BYTE PTR [rcx],r10b
   1400091d3:	je     0x1400091dc
   1400091d5:	inc    rcx
   1400091d8:	test   eax,eax
   1400091da:	jne    0x1400091ce
   1400091dc:	sub    ecx,ebx
   1400091de:	mov    DWORD PTR [rsp+0x44],ecx
   1400091e2:	jmp    0x1400094be
   1400091e7:	mov    r12d,0x10
   1400091ed:	bts    r14d,0xf
   1400091f2:	mov    eax,0x7
   1400091f7:	mov    DWORD PTR [rsp+0x64],eax
   1400091fb:	mov    r9d,0x10
   140009201:	test   r14b,r14b
   140009204:	jns    0x1400092bd
   14000920a:	add    al,0x51
   14000920c:	mov    BYTE PTR [rsp+0x4c],0x30
   140009211:	lea    edx,[r9-0xe]
   140009215:	mov    BYTE PTR [rsp+0x4d],al
   140009219:	jmp    0x1400092c1
   14000921e:	mov    r9d,0x8
   140009224:	test   r14b,r14b
   140009227:	jns    0x1400092bd
   14000922d:	or     r14d,r11d
   140009230:	jmp    0x1400092bd
   140009235:	mov    rdi,QWORD PTR [r13+0x0]
   140009239:	add    r13,0x8
   14000923d:	call   0x14000d530
   140009242:	xor    r10d,r10d
   140009245:	test   eax,eax
   140009247:	je     0x140009825
   14000924d:	mov    eax,DWORD PTR [rsp+0x50]
   140009251:	test   r14b,0x20
   140009255:	je     0x14000925c
   140009257:	mov    WORD PTR [rdi],ax
   14000925a:	jmp    0x14000925e
   14000925c:	mov    DWORD PTR [rdi],eax
   14000925e:	mov    DWORD PTR [rsp+0x60],0x1
   140009266:	mov    r8d,DWORD PTR [rsp+0x50]
   14000926b:	mov    rax,QWORD PTR [rbp-0x80]
   14000926f:	test   rax,rax
   140009272:	je     0x140009288
   140009274:	mov    rcx,rax
   140009277:	call   0x140006aa0
   14000927c:	mov    r8d,DWORD PTR [rsp+0x50]
   140009281:	xor    r10d,r10d
   140009284:	mov    QWORD PTR [rbp-0x80],r10
   140009288:	mov    rsi,QWORD PTR [rsp+0x68]
   14000928d:	mov    rdi,QWORD PTR [rbp-0x68]
   140009291:	mov    edx,DWORD PTR [rsp+0x5c]
   140009295:	mov    r11d,0x200
   14000929b:	lea    r9,[rip+0xffffffffffff6d5e]        # 0x140000000
   1400092a2:	mov    r15b,BYTE PTR [rdi]
   1400092a5:	test   r15b,r15b
   1400092a8:	je     0x14000983c
   1400092ae:	jmp    0x140008f58
   1400092b3:	or     r14d,0x40
   1400092b7:	mov    r9d,0xa
   1400092bd:	mov    edx,DWORD PTR [rsp+0x48]
   1400092c1:	mov    eax,0x8000
   1400092c6:	test   eax,r14d
   1400092c9:	je     0x1400092d5
   1400092cb:	mov    r8,QWORD PTR [r13+0x0]
   1400092cf:	add    r13,0x8
   1400092d3:	jmp    0x14000930f
   1400092d5:	bt     r14d,0xc
   1400092da:	jb     0x1400092cb
   1400092dc:	add    r13,0x8
   1400092e0:	test   r14b,0x20
   1400092e4:	je     0x1400092ff
   1400092e6:	mov    QWORD PTR [rsp+0x70],r13
   1400092eb:	test   r14b,0x40
   1400092ef:	je     0x1400092f8
   1400092f1:	movsx  r8,WORD PTR [r13-0x8]
   1400092f6:	jmp    0x140009314
   1400092f8:	movzx  r8d,WORD PTR [r13-0x8]
   1400092fd:	jmp    0x140009314
   1400092ff:	test   r14b,0x40
   140009303:	je     0x14000930b
   140009305:	movsxd r8,DWORD PTR [r13-0x8]
   140009309:	jmp    0x14000930f
   14000930b:	mov    r8d,DWORD PTR [r13-0x8]
   14000930f:	mov    QWORD PTR [rsp+0x70],r13
   140009314:	test   r14b,0x40
   140009318:	je     0x140009327
   14000931a:	test   r8,r8
   14000931d:	jns    0x140009327
   14000931f:	neg    r8
   140009322:	bts    r14d,0x8
   140009327:	test   eax,r14d
   14000932a:	jne    0x140009336
   14000932c:	bt     r14d,0xc
   140009331:	jb     0x140009336
   140009333:	mov    r8d,r8d
   140009336:	test   r12d,r12d
   140009339:	jns    0x140009343
   14000933b:	mov    r12d,0x1
   140009341:	jmp    0x14000934e
   140009343:	and    r14d,0xfffffff7
   140009347:	cmp    r12d,r11d
   14000934a:	cmovg  r12d,r11d
   14000934e:	mov    r13d,DWORD PTR [rsp+0x64]
   140009353:	mov    rax,r8
   140009356:	lea    rbx,[rbp+0x1cf]
   14000935d:	neg    rax
   140009360:	sbb    ecx,ecx
   140009362:	and    ecx,edx
   140009364:	mov    DWORD PTR [rsp+0x48],ecx
   140009368:	mov    ecx,r12d
   14000936b:	dec    r12d
   14000936e:	test   ecx,ecx
   140009370:	jg     0x140009377
   140009372:	test   r8,r8
   140009375:	je     0x140009397
   140009377:	xor    edx,edx
   140009379:	mov    rax,r8
   14000937c:	movsxd rcx,r9d
   14000937f:	div    rcx
   140009382:	mov    r8,rax
   140009385:	lea    eax,[rdx+0x30]
   140009388:	cmp    eax,0x39
   14000938b:	jle    0x140009390
   14000938d:	add    eax,r13d
   140009390:	mov    BYTE PTR [rbx],al
   140009392:	dec    rbx
   140009395:	jmp    0x140009368
   140009397:	mov    r13,QWORD PTR [rsp+0x70]
   14000939c:	lea    rax,[rbp+0x1cf]
   1400093a3:	sub    eax,ebx
   1400093a5:	inc    rbx
   1400093a8:	mov    DWORD PTR [rsp+0x44],eax
   1400093ac:	test   r11d,r14d
   1400093af:	je     0x1400094be
   1400093b5:	test   eax,eax
   1400093b7:	je     0x1400093c2
   1400093b9:	cmp    BYTE PTR [rbx],0x30
   1400093bc:	je     0x1400094be
   1400093c2:	dec    rbx
   1400093c5:	inc    DWORD PTR [rsp+0x44]
   1400093c9:	mov    BYTE PTR [rbx],0x30
   1400093cc:	jmp    0x1400094be
   1400093d1:	jne    0x1400093e1
   1400093d3:	cmp    r15b,0x67
   1400093d7:	jne    0x140009417
   1400093d9:	mov    r12d,0x1
   1400093df:	jmp    0x140009417
   1400093e1:	cmp    r12d,r11d
   1400093e4:	cmovg  r12d,r11d
   1400093e8:	cmp    r12d,0xa3
   1400093ef:	jle    0x140009417
   1400093f1:	lea    edi,[r12+0x15d]
   1400093f9:	movsxd rcx,edi
   1400093fc:	call   0x140008abc
   140009401:	mov    QWORD PTR [rbp-0x80],rax
   140009405:	test   rax,rax
   140009408:	je     0x140009411
   14000940a:	mov    rbx,rax
   14000940d:	mov    esi,edi
   14000940f:	jmp    0x140009417
   140009411:	mov    r12d,0xa3
   140009417:	mov    rax,QWORD PTR [r13+0x0]
   14000941b:	mov    rcx,QWORD PTR [rip+0x12a1e]        # 0x14001be40
   140009422:	add    r13,0x8
   140009426:	movsx  edi,r15b
   14000942a:	movsxd rsi,esi
   14000942d:	mov    QWORD PTR [rbp-0x60],rax
   140009431:	call   QWORD PTR [rip+0x9d79]        # 0x1400131b0
   140009437:	lea    rcx,[rbp-0x58]
   14000943b:	mov    r9d,edi
   14000943e:	mov    QWORD PTR [rsp+0x30],rcx
   140009443:	mov    ecx,DWORD PTR [rsp+0x78]
   140009447:	mov    r8,rsi
   14000944a:	mov    DWORD PTR [rsp+0x28],ecx
   14000944e:	lea    rcx,[rbp-0x60]
   140009452:	mov    rdx,rbx
   140009455:	mov    DWORD PTR [rsp+0x20],r12d
   14000945a:	call   rax
   14000945c:	mov    edi,r14d
   14000945f:	and    edi,0x80
   140009465:	je     0x140009482
   140009467:	test   r12d,r12d
   14000946a:	jne    0x140009482
   14000946c:	mov    rcx,QWORD PTR [rip+0x129e5]        # 0x14001be58
   140009473:	call   QWORD PTR [rip+0x9d37]        # 0x1400131b0
   140009479:	lea    rdx,[rbp-0x58]
   14000947d:	mov    rcx,rbx
   140009480:	call   rax
   140009482:	cmp    r15b,0x67
   140009486:	jne    0x1400094a2
   140009488:	test   edi,edi
   14000948a:	jne    0x1400094a2
   14000948c:	mov    rcx,QWORD PTR [rip+0x129bd]        # 0x14001be50
   140009493:	call   QWORD PTR [rip+0x9d17]        # 0x1400131b0
   140009499:	lea    rdx,[rbp-0x58]
   14000949d:	mov    rcx,rbx
   1400094a0:	call   rax
   1400094a2:	cmp    BYTE PTR [rbx],0x2d
   1400094a5:	jne    0x1400094af
   1400094a7:	bts    r14d,0x8
   1400094ac:	inc    rbx
   1400094af:	mov    rcx,rbx
   1400094b2:	call   0x14000c070
   1400094b7:	xor    r10d,r10d
   1400094ba:	mov    DWORD PTR [rsp+0x44],eax
   1400094be:	cmp    DWORD PTR [rsp+0x60],r10d
   1400094c3:	jne    0x140009266
   1400094c9:	test   r14b,0x40
   1400094cd:	je     0x140009500
   1400094cf:	bt     r14d,0x8
   1400094d4:	jae    0x1400094dd
   1400094d6:	mov    BYTE PTR [rsp+0x4c],0x2d
   1400094db:	jmp    0x1400094e8
   1400094dd:	test   r14b,0x1
   1400094e1:	je     0x1400094f3
   1400094e3:	mov    BYTE PTR [rsp+0x4c],0x2b
   1400094e8:	mov    edi,0x1
   1400094ed:	mov    DWORD PTR [rsp+0x48],edi
   1400094f1:	jmp    0x140009504
   1400094f3:	test   r14b,0x2
   1400094f7:	je     0x140009500
   1400094f9:	mov    BYTE PTR [rsp+0x4c],0x20
   1400094fe:	jmp    0x1400094e8
   140009500:	mov    edi,DWORD PTR [rsp+0x48]
   140009504:	mov    esi,DWORD PTR [rsp+0x54]
   140009508:	mov    r15,QWORD PTR [rsp+0x68]
   14000950d:	sub    esi,DWORD PTR [rsp+0x44]
   140009511:	sub    esi,edi
   140009513:	test   r14b,0xc
   140009517:	jne    0x14000952a
   140009519:	lea    r9,[rsp+0x40]
   14000951e:	mov    r8,r15
   140009521:	mov    edx,esi
   140009523:	mov    cl,0x20
   140009525:	call   0x1400098c4
   14000952a:	mov    rax,QWORD PTR [rbp-0x70]
   14000952e:	lea    r9,[rsp+0x40]
   140009533:	lea    rcx,[rsp+0x4c]
   140009538:	mov    r8,r15
   14000953b:	mov    edx,edi
   14000953d:	mov    QWORD PTR [rsp+0x20],rax
   140009542:	call   0x140009918
   140009547:	test   r14b,0x8
   14000954b:	je     0x140009564
   14000954d:	test   r14b,0x4
   140009551:	jne    0x140009564
   140009553:	lea    r9,[rsp+0x40]
   140009558:	mov    r8,r15
   14000955b:	mov    edx,esi
   14000955d:	mov    cl,0x30
   14000955f:	call   0x1400098c4
   140009564:	cmp    DWORD PTR [rsp+0x58],0x0
   140009569:	mov    edi,DWORD PTR [rsp+0x44]
   14000956d:	je     0x1400095e1
   14000956f:	test   edi,edi
   140009571:	jle    0x1400095e1
   140009573:	mov    r15,rbx
   140009576:	movzx  r9d,WORD PTR [r15]
   14000957a:	lea    rdx,[rbp+0x1d0]
   140009581:	lea    rcx,[rbp-0x78]
   140009585:	mov    r8d,0x6
   14000958b:	dec    edi
   14000958d:	lea    r15,[r15+0x2]
   140009591:	call   0x14000d6d4
   140009596:	xor    r10d,r10d
   140009599:	test   eax,eax
   14000959b:	jne    0x1400095d1
   14000959d:	mov    edx,DWORD PTR [rbp-0x78]
   1400095a0:	test   edx,edx
   1400095a2:	je     0x1400095d1
   1400095a4:	mov    rax,QWORD PTR [rbp-0x70]
   1400095a8:	mov    r8,QWORD PTR [rsp+0x68]
   1400095ad:	lea    r9,[rsp+0x40]
   1400095b2:	lea    rcx,[rbp+0x1d0]
   1400095b9:	mov    QWORD PTR [rsp+0x20],rax
   1400095be:	call   0x140009918
   1400095c3:	xor    r10d,r10d
   1400095c6:	test   edi,edi
   1400095c8:	jne    0x140009576
   1400095ca:	mov    r15,QWORD PTR [rsp+0x68]
   1400095cf:	jmp    0x1400095ff
   1400095d1:	mov    r15,QWORD PTR [rsp+0x68]
   1400095d6:	or     r8d,0xffffffff
   1400095da:	mov    DWORD PTR [rsp+0x40],r8d
   1400095df:	jmp    0x140009604
   1400095e1:	mov    rax,QWORD PTR [rbp-0x70]
   1400095e5:	lea    r9,[rsp+0x40]
   1400095ea:	mov    r8,r15
   1400095ed:	mov    edx,edi
   1400095ef:	mov    rcx,rbx
   1400095f2:	mov    QWORD PTR [rsp+0x20],rax
   1400095f7:	call   0x140009918
   1400095fc:	xor    r10d,r10d
   1400095ff:	mov    r8d,DWORD PTR [rsp+0x40]
   140009604:	mov    DWORD PTR [rsp+0x50],r8d
   140009609:	test   r8d,r8d
   14000960c:	js     0x14000926b
   140009612:	test   r14b,0x4
   140009616:	je     0x14000926b
   14000961c:	lea    r9,[rsp+0x40]
   140009621:	mov    r8,r15
   140009624:	mov    edx,esi
   140009626:	mov    cl,0x20
   140009628:	call   0x1400098c4
   14000962d:	mov    r8d,DWORD PTR [rsp+0x40]
   140009632:	xor    r10d,r10d
   140009635:	mov    DWORD PTR [rsp+0x50],r8d
   14000963a:	jmp    0x14000926b
   14000963f:	cmp    r15b,0x49
   140009643:	je     0x140009689
   140009645:	cmp    r15b,0x68
   140009649:	je     0x140009680
   14000964b:	cmp    r15b,0x6c
   14000964f:	je     0x140009665
   140009651:	cmp    r15b,0x77
   140009655:	jne    0x1400092a2
   14000965b:	bts    r14d,0xb
   140009660:	jmp    0x1400092a2
   140009665:	cmp    BYTE PTR [rdi],0x6c
   140009668:	jne    0x140009677
   14000966a:	inc    rdi
   14000966d:	bts    r14d,0xc
   140009672:	jmp    0x1400092a2
   140009677:	or     r14d,0x10
   14000967b:	jmp    0x1400092a2
   140009680:	or     r14d,0x20
   140009684:	jmp    0x1400092a2
   140009689:	mov    al,BYTE PTR [rdi]
   14000968b:	bts    r14d,0xf
   140009690:	cmp    al,0x36
   140009692:	jne    0x1400096a8
   140009694:	cmp    BYTE PTR [rdi+0x1],0x34
   140009698:	jne    0x1400096a8
   14000969a:	add    rdi,0x2
   14000969e:	bts    r14d,0xf
   1400096a3:	jmp    0x1400092a2
   1400096a8:	cmp    al,0x33
   1400096aa:	jne    0x1400096c0
   1400096ac:	cmp    BYTE PTR [rdi+0x1],0x32
   1400096b0:	jne    0x1400096c0
   1400096b2:	add    rdi,0x2
   1400096b6:	btr    r14d,0xf
   1400096bb:	jmp    0x1400092a2
   1400096c0:	sub    al,0x58
   1400096c2:	cmp    al,0x20
   1400096c4:	ja     0x1400096da
   1400096c6:	movabs rcx,0x120821001
   1400096d0:	bt     rcx,rax
   1400096d4:	jb     0x1400092a2
   1400096da:	mov    DWORD PTR [rsp+0x5c],r10d
   1400096df:	lea    rdx,[rbp-0x58]
   1400096e3:	movzx  ecx,r15b
   1400096e7:	mov    DWORD PTR [rsp+0x58],r10d
   1400096ec:	call   0x14000d4a4
   1400096f1:	test   eax,eax
   1400096f3:	je     0x140009714
   1400096f5:	lea    r8,[rsp+0x40]
   1400096fa:	mov    rdx,rsi
   1400096fd:	mov    cl,r15b
   140009700:	call   0x14000987c
   140009705:	mov    r15b,BYTE PTR [rdi]
   140009708:	inc    rdi
   14000970b:	test   r15b,r15b
   14000970e:	je     0x140009825
   140009714:	lea    r8,[rsp+0x40]
   140009719:	mov    rdx,rsi
   14000971c:	mov    cl,r15b
   14000971f:	call   0x14000987c
   140009724:	mov    r8d,DWORD PTR [rsp+0x40]
   140009729:	xor    r10d,r10d
   14000972c:	mov    DWORD PTR [rsp+0x50],r8d
   140009731:	jmp    0x140009291
   140009736:	cmp    r15b,0x2a
   14000973a:	jne    0x140009756
   14000973c:	mov    r12d,DWORD PTR [r13+0x0]
   140009740:	add    r13,0x8
   140009744:	test   r12d,r12d
   140009747:	jns    0x1400092a2
   14000974d:	or     r12d,0xffffffff
   140009751:	jmp    0x1400092a2
   140009756:	lea    r12d,[r12+r12*4]
   14000975a:	movsx  eax,r15b
   14000975e:	lea    r12d,[r12-0x18]
   140009763:	lea    r12d,[rax+r12*2]
   140009767:	jmp    0x1400092a2
   14000976c:	mov    r12d,r10d
   14000976f:	jmp    0x1400092a2
   140009774:	cmp    r15b,0x2a
   140009778:	jne    0x140009796
   14000977a:	mov    eax,DWORD PTR [r13+0x0]
   14000977e:	add    r13,0x8
   140009782:	mov    DWORD PTR [rsp+0x54],eax
   140009786:	test   eax,eax
   140009788:	jns    0x1400092a2
   14000978e:	or     r14d,0x4
   140009792:	neg    eax
   140009794:	jmp    0x1400097a7
   140009796:	mov    eax,DWORD PTR [rsp+0x54]
   14000979a:	lea    ecx,[rax+rax*4]
   14000979d:	movsx  eax,r15b
   1400097a1:	lea    eax,[rax+rcx*2]
   1400097a4:	add    eax,0xffffffd0
   1400097a7:	mov    DWORD PTR [rsp+0x54],eax
   1400097ab:	jmp    0x1400092a2
   1400097b0:	cmp    r15b,0x20
   1400097b4:	je     0x1400097f7
   1400097b6:	cmp    r15b,0x23
   1400097ba:	je     0x1400097ed
   1400097bc:	cmp    r15b,0x2b
   1400097c0:	je     0x1400097e4
   1400097c2:	cmp    r15b,0x2d
   1400097c6:	je     0x1400097db
   1400097c8:	cmp    r15b,0x30
   1400097cc:	jne    0x1400092a2
   1400097d2:	or     r14d,0x8
   1400097d6:	jmp    0x1400092a2
   1400097db:	or     r14d,0x4
   1400097df:	jmp    0x1400092a2
   1400097e4:	or     r14d,0x1
   1400097e8:	jmp    0x1400092a2
   1400097ed:	bts    r14d,0x7
   1400097f2:	jmp    0x1400092a2
   1400097f7:	or     r14d,0x2
   1400097fb:	jmp    0x1400092a2
   140009800:	mov    DWORD PTR [rsp+0x78],r10d
   140009805:	mov    DWORD PTR [rsp+0x60],r10d
   14000980a:	mov    DWORD PTR [rsp+0x54],r10d
   14000980f:	mov    DWORD PTR [rsp+0x48],r10d
   140009814:	mov    r14d,r10d
   140009817:	or     r12d,0xffffffff
   14000981b:	mov    DWORD PTR [rsp+0x58],r10d
   140009820:	jmp    0x1400092a2
   140009825:	call   0x140008888
   14000982a:	mov    DWORD PTR [rax],0x16
   140009830:	call   0x1400087bc
   140009835:	xor    r10d,r10d
   140009838:	or     r8d,0xffffffff
   14000983c:	cmp    BYTE PTR [rbp-0x40],r10b
   140009840:	je     0x14000984d
   140009842:	mov    rcx,QWORD PTR [rbp-0x48]
   140009846:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000984d:	mov    eax,r8d
   140009850:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140009857:	xor    rcx,rsp
   14000985a:	call   0x140005fe0
   14000985f:	mov    rbx,QWORD PTR [rsp+0x330]
   140009867:	add    rsp,0x2e0
   14000986e:	pop    r15
   140009870:	pop    r14
   140009872:	pop    r13
   140009874:	pop    r12
   140009876:	pop    rdi
   140009877:	pop    rsi
   140009878:	pop    rbp
   140009879:	ret    
   14000987a:	int3   
   14000987b:	int3   
   14000987c:	rex push rbx
   14000987e:	sub    rsp,0x20
   140009882:	test   BYTE PTR [rdx+0x18],0x40
   140009886:	mov    rbx,r8
   140009889:	je     0x140009897
   14000988b:	cmp    QWORD PTR [rdx+0x10],0x0
   140009890:	jne    0x140009897
   140009892:	inc    DWORD PTR [r8]
   140009895:	jmp    0x1400098bc
   140009897:	dec    DWORD PTR [rdx+0x8]
   14000989a:	js     0x1400098a9
   14000989c:	mov    rax,QWORD PTR [rdx]
   14000989f:	mov    BYTE PTR [rax],cl
   1400098a1:	inc    QWORD PTR [rdx]
   1400098a4:	movzx  eax,cl
   1400098a7:	jmp    0x1400098b1
   1400098a9:	movsx  ecx,cl
   1400098ac:	call   0x140008bbc
   1400098b1:	cmp    eax,0xffffffff
   1400098b4:	jne    0x1400098ba
   1400098b6:	or     DWORD PTR [rbx],eax
   1400098b8:	jmp    0x1400098bc
   1400098ba:	inc    DWORD PTR [rbx]
   1400098bc:	add    rsp,0x20
   1400098c0:	pop    rbx
   1400098c1:	ret    
   1400098c2:	int3   
   1400098c3:	int3   
   1400098c4:	test   edx,edx
   1400098c6:	jle    0x140009914
   1400098c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400098cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400098d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400098d7:	push   rdi
   1400098d8:	sub    rsp,0x20
   1400098dc:	mov    rdi,r9
   1400098df:	mov    rsi,r8
   1400098e2:	mov    ebx,edx
   1400098e4:	mov    bpl,cl
   1400098e7:	mov    r8,rdi
   1400098ea:	mov    rdx,rsi
   1400098ed:	mov    cl,bpl
   1400098f0:	dec    ebx
   1400098f2:	call   0x14000987c
   1400098f7:	cmp    DWORD PTR [rdi],0xffffffff
   1400098fa:	je     0x140009900
   1400098fc:	test   ebx,ebx
   1400098fe:	jg     0x1400098e7
   140009900:	mov    rbx,QWORD PTR [rsp+0x30]
   140009905:	mov    rbp,QWORD PTR [rsp+0x38]
   14000990a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000990f:	add    rsp,0x20
   140009913:	pop    rdi
   140009914:	ret    
   140009915:	int3   
   140009916:	int3   
   140009917:	int3   
   140009918:	mov    QWORD PTR [rsp+0x8],rbx
   14000991d:	mov    QWORD PTR [rsp+0x10],rbp
   140009922:	mov    QWORD PTR [rsp+0x18],rsi
   140009927:	push   rdi
   140009928:	push   r14
   14000992a:	push   r15
   14000992c:	sub    rsp,0x20
   140009930:	test   BYTE PTR [r8+0x18],0x40
   140009935:	mov    rbx,QWORD PTR [rsp+0x60]
   14000993a:	mov    rdi,r9
   14000993d:	mov    r15d,DWORD PTR [rbx]
   140009940:	mov    rbp,r8
   140009943:	mov    esi,edx
   140009945:	mov    r14,rcx
   140009948:	je     0x140009956
   14000994a:	cmp    QWORD PTR [r8+0x10],0x0
   14000994f:	jne    0x140009956
   140009951:	add    DWORD PTR [r9],edx
   140009954:	jmp    0x140009993
   140009956:	and    DWORD PTR [rbx],0x0
   140009959:	test   edx,edx
   14000995b:	jle    0x140009990
   14000995d:	mov    cl,BYTE PTR [r14]
   140009960:	mov    r8,rdi
   140009963:	mov    rdx,rbp
   140009966:	dec    esi
   140009968:	call   0x14000987c
   14000996d:	inc    r14
   140009970:	cmp    DWORD PTR [rdi],0xffffffff
   140009973:	jne    0x140009987
   140009975:	cmp    DWORD PTR [rbx],0x2a
   140009978:	jne    0x14000998b
   14000997a:	mov    r8,rdi
   14000997d:	mov    rdx,rbp
   140009980:	mov    cl,0x3f
   140009982:	call   0x14000987c
   140009987:	test   esi,esi
   140009989:	jg     0x14000995d
   14000998b:	cmp    DWORD PTR [rbx],0x0
   14000998e:	jne    0x140009993
   140009990:	mov    DWORD PTR [rbx],r15d
   140009993:	mov    rbx,QWORD PTR [rsp+0x40]
   140009998:	mov    rbp,QWORD PTR [rsp+0x48]
   14000999d:	mov    rsi,QWORD PTR [rsp+0x50]
   1400099a2:	add    rsp,0x20
   1400099a6:	pop    r15
   1400099a8:	pop    r14
   1400099aa:	pop    rdi
   1400099ab:	ret    
   1400099ac:	int3   
   1400099ad:	int3   
   1400099ae:	int3   
   1400099af:	int3   
   1400099b0:	int3   
   1400099b1:	int3   
   1400099b2:	int3   
   1400099b3:	int3   
   1400099b4:	int3   
   1400099b5:	int3   
   1400099b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400099c0:	mov    r11,rcx
   1400099c3:	cmp    r8,0x8
   1400099c7:	jb     0x140009a34
   1400099c9:	movzx  edx,dl
   1400099cc:	bt     DWORD PTR [rip+0x13c74],0x1        # 0x14001d648
   1400099d4:	jae    0x1400099e4
   1400099d6:	push   rdi
   1400099d7:	mov    rdi,rcx
   1400099da:	mov    eax,edx
   1400099dc:	mov    rcx,r8
   1400099df:	rep stos BYTE PTR es:[rdi],al
   1400099e1:	pop    rdi
   1400099e2:	jmp    0x140009a43
   1400099e4:	movabs r9,0x101010101010101
   1400099ee:	imul   rdx,r9
   1400099f2:	cmp    r8,0x40
   1400099f6:	jb     0x140009a16
   1400099f8:	neg    rcx
   1400099fb:	and    ecx,0x7
   1400099fe:	je     0x140009a06
   140009a00:	sub    r8,rcx
   140009a03:	mov    QWORD PTR [r11],rdx
   140009a06:	add    rcx,r11
   140009a09:	mov    r9,r8
   140009a0c:	and    r8,0x3f
   140009a10:	shr    r9,0x6
   140009a14:	jne    0x140009a57
   140009a16:	mov    r9,r8
   140009a19:	and    r8,0x7
   140009a1d:	shr    r9,0x3
   140009a21:	je     0x140009a34
   140009a23:	data16 data16 xchg ax,ax
   140009a27:	nop
   140009a28:	mov    QWORD PTR [rcx],rdx
   140009a2b:	add    rcx,0x8
   140009a2f:	dec    r9
   140009a32:	jne    0x140009a28
   140009a34:	test   r8,r8
   140009a37:	je     0x140009a43
   140009a39:	mov    BYTE PTR [rcx],dl
   140009a3b:	inc    rcx
   140009a3e:	dec    r8
   140009a41:	jne    0x140009a39
   140009a43:	mov    rax,r11
   140009a46:	ret    
   140009a47:	nop    WORD PTR [rax+rax*1+0x0]
   140009a50:	data16 data16 xchg ax,ax
   140009a54:	data16 xchg ax,ax
   140009a57:	cmp    r9,0x1c00
   140009a5e:	jae    0x140009a90
   140009a60:	mov    QWORD PTR [rcx],rdx
   140009a63:	mov    QWORD PTR [rcx+0x8],rdx
   140009a67:	mov    QWORD PTR [rcx+0x10],rdx
   140009a6b:	add    rcx,0x40
   140009a6f:	mov    QWORD PTR [rcx-0x28],rdx
   140009a73:	mov    QWORD PTR [rcx-0x20],rdx
   140009a77:	dec    r9
   140009a7a:	mov    QWORD PTR [rcx-0x18],rdx
   140009a7e:	mov    QWORD PTR [rcx-0x10],rdx
   140009a82:	mov    QWORD PTR [rcx-0x8],rdx
   140009a86:	jne    0x140009a60
   140009a88:	jmp    0x140009a16
   140009a8a:	nop    WORD PTR [rax+rax*1+0x0]
   140009a90:	movnti QWORD PTR [rcx],rdx
   140009a94:	movnti QWORD PTR [rcx+0x8],rdx
   140009a99:	movnti QWORD PTR [rcx+0x10],rdx
   140009a9e:	add    rcx,0x40
   140009aa2:	movnti QWORD PTR [rcx-0x28],rdx
   140009aa7:	movnti QWORD PTR [rcx-0x20],rdx
   140009aac:	dec    r9
   140009aaf:	movnti QWORD PTR [rcx-0x18],rdx
   140009ab4:	movnti QWORD PTR [rcx-0x10],rdx
   140009ab9:	movnti QWORD PTR [rcx-0x8],rdx
   140009abe:	jne    0x140009a90
   140009ac0:	lock or BYTE PTR [rsp],0x0
   140009ac5:	jmp    0x140009a16
   140009aca:	int3   
   140009acb:	int3   
   140009acc:	mov    eax,DWORD PTR [rip+0x1175e]        # 0x14001b230
   140009ad2:	mov    r8d,edx
   140009ad5:	and    ecx,edx
   140009ad7:	not    r8d
   140009ada:	and    r8d,eax
   140009add:	or     r8d,ecx
   140009ae0:	mov    DWORD PTR [rip+0x11749],r8d        # 0x14001b230
   140009ae7:	ret    
   140009ae8:	sub    rsp,0x28
   140009aec:	call   0x14000be04
   140009af1:	test   rax,rax
   140009af4:	je     0x140009b00
   140009af6:	mov    ecx,0x16
   140009afb:	call   0x14000be34
   140009b00:	test   BYTE PTR [rip+0x11729],0x2        # 0x14001b230
   140009b07:	je     0x140009b32
   140009b09:	mov    ecx,0x17
   140009b0e:	call   0x14000f5e0
   140009b13:	test   eax,eax
   140009b15:	je     0x140009b1e
   140009b17:	mov    ecx,0x7
   140009b1c:	int    0x29
   140009b1e:	mov    r8d,0x1
   140009b24:	mov    edx,0x40000015
   140009b29:	lea    ecx,[r8+0x2]
   140009b2d:	call   0x140008658
   140009b32:	mov    ecx,0x3
   140009b37:	call   0x1400074f8
   140009b3c:	int3   
   140009b3d:	int3   
   140009b3e:	int3   
   140009b3f:	int3   
   140009b40:	mov    QWORD PTR [rip+0x13b09],rcx        # 0x14001d650
   140009b47:	ret    
   140009b48:	int3   
   140009b49:	int3   
   140009b4a:	int3   
   140009b4b:	int3   
   140009b4c:	int3   
   140009b4d:	int3   
   140009b4e:	int3   
   140009b4f:	int3   
   140009b50:	int3   
   140009b51:	int3   
   140009b52:	int3   
   140009b53:	int3   
   140009b54:	int3   
   140009b55:	int3   
   140009b56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009b60:	sub    rdx,rcx
   140009b63:	test   cl,0x7
   140009b66:	je     0x140009b7c
   140009b68:	movzx  eax,BYTE PTR [rcx]
   140009b6b:	cmp    al,BYTE PTR [rcx+rdx*1]
   140009b6e:	jne    0x140009bbf
   140009b70:	inc    rcx
   140009b73:	test   al,al
   140009b75:	je     0x140009bbc
   140009b77:	test   cl,0x7
   140009b7a:	jne    0x140009b68
   140009b7c:	movabs r11,0x8080808080808080
   140009b86:	movabs r10,0xfefefefefefefeff
   140009b90:	lea    eax,[ecx+edx*1]
   140009b94:	and    eax,0xfff
   140009b99:	cmp    eax,0xff8
   140009b9e:	ja     0x140009b68
   140009ba0:	mov    rax,QWORD PTR [rcx]
   140009ba3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   140009ba7:	jne    0x140009b68
   140009ba9:	lea    r9,[r10+rax*1]
   140009bad:	not    rax
   140009bb0:	add    rcx,0x8
   140009bb4:	and    rax,r9
   140009bb7:	test   r11,rax
   140009bba:	je     0x140009b90
   140009bbc:	xor    eax,eax
   140009bbe:	ret    
   140009bbf:	sbb    rax,rax
   140009bc2:	or     rax,0x1
   140009bc6:	ret    
   140009bc7:	int3   
   140009bc8:	rex push rbx
   140009bca:	sub    rsp,0x30
   140009bce:	mov    rbx,rcx
   140009bd1:	mov    ecx,0xe
   140009bd6:	call   0x14000ae60
   140009bdb:	nop
   140009bdc:	mov    rax,QWORD PTR [rbx+0x8]
   140009be0:	test   rax,rax
   140009be3:	je     0x140009c24
   140009be5:	mov    rcx,QWORD PTR [rip+0x13a74]        # 0x14001d660
   140009bec:	lea    rdx,[rip+0x13a65]        # 0x14001d658
   140009bf3:	mov    QWORD PTR [rsp+0x20],rcx
   140009bf8:	test   rcx,rcx
   140009bfb:	je     0x140009c16
   140009bfd:	cmp    QWORD PTR [rcx],rax
   140009c00:	jne    0x140009c11
   140009c02:	mov    rax,QWORD PTR [rcx+0x8]
   140009c06:	mov    QWORD PTR [rdx+0x8],rax
   140009c0a:	call   0x140006aa0
   140009c0f:	jmp    0x140009c16
   140009c11:	mov    rdx,rcx
   140009c14:	jmp    0x140009bf3
   140009c16:	mov    rcx,QWORD PTR [rbx+0x8]
   140009c1a:	call   0x140006aa0
   140009c1f:	and    QWORD PTR [rbx+0x8],0x0
   140009c24:	mov    ecx,0xe
   140009c29:	call   0x14000b048
   140009c2e:	add    rsp,0x30
   140009c32:	pop    rbx
   140009c33:	ret    
   140009c34:	mov    QWORD PTR [rsp+0x8],rbx
   140009c39:	mov    QWORD PTR [rsp+0x10],rsi
   140009c3e:	push   rdi
   140009c3f:	sub    rsp,0x20
   140009c43:	mov    rbx,rcx
   140009c46:	cmp    rcx,0xffffffffffffffe0
   140009c4a:	ja     0x140009cc8
   140009c4c:	mov    edi,0x1
   140009c51:	test   rcx,rcx
   140009c54:	cmovne rdi,rcx
   140009c58:	mov    rcx,QWORD PTR [rip+0x138b9]        # 0x14001d518
   140009c5f:	test   rcx,rcx
   140009c62:	jne    0x140009c84
   140009c64:	call   0x140007778
   140009c69:	mov    ecx,0x1e
   140009c6e:	call   0x1400077ec
   140009c73:	mov    ecx,0xff
   140009c78:	call   0x1400073e8
   140009c7d:	mov    rcx,QWORD PTR [rip+0x13894]        # 0x14001d518
   140009c84:	mov    r8,rdi
   140009c87:	xor    edx,edx
   140009c89:	call   QWORD PTR [rip+0x95f1]        # 0x140013280
   140009c8f:	mov    rsi,rax
   140009c92:	test   rax,rax
   140009c95:	jne    0x140009cc3
   140009c97:	cmp    DWORD PTR [rip+0x13d1b],eax        # 0x14001d9b8
   140009c9d:	je     0x140009cad
   140009c9f:	mov    rcx,rbx
   140009ca2:	call   0x140009e8c
   140009ca7:	test   eax,eax
   140009ca9:	je     0x140009cb8
   140009cab:	jmp    0x140009c58
   140009cad:	call   0x140008888
   140009cb2:	mov    DWORD PTR [rax],0xc
   140009cb8:	call   0x140008888
   140009cbd:	mov    DWORD PTR [rax],0xc
   140009cc3:	mov    rax,rsi
   140009cc6:	jmp    0x140009cda
   140009cc8:	call   0x140009e8c
   140009ccd:	call   0x140008888
   140009cd2:	mov    DWORD PTR [rax],0xc
   140009cd8:	xor    eax,eax
   140009cda:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cdf:	mov    rsi,QWORD PTR [rsp+0x38]
   140009ce4:	add    rsp,0x20
   140009ce8:	pop    rdi
   140009ce9:	ret    
   140009cea:	int3   
   140009ceb:	int3   
   140009cec:	rex push rbx
   140009cee:	sub    rsp,0x20
   140009cf2:	and    QWORD PTR [rcx+0x8],0x0
   140009cf7:	lea    rax,[rip+0xa54a]        # 0x140014248
   140009cfe:	mov    BYTE PTR [rcx+0x10],0x0
   140009d02:	mov    QWORD PTR [rcx],rax
   140009d05:	mov    rdx,QWORD PTR [rdx]
   140009d08:	mov    rbx,rcx
   140009d0b:	call   0x140009df4
   140009d10:	mov    rax,rbx
   140009d13:	add    rsp,0x20
   140009d17:	pop    rbx
   140009d18:	ret    
   140009d19:	int3   
   140009d1a:	int3   
   140009d1b:	int3   
   140009d1c:	lea    rax,[rip+0xa525]        # 0x140014248
   140009d23:	mov    QWORD PTR [rcx],rax
   140009d26:	mov    rax,QWORD PTR [rdx]
   140009d29:	mov    BYTE PTR [rcx+0x10],0x0
   140009d2d:	mov    QWORD PTR [rcx+0x8],rax
   140009d31:	mov    rax,rcx
   140009d34:	ret    
   140009d35:	int3   
   140009d36:	int3   
   140009d37:	int3   
   140009d38:	rex push rbx
   140009d3a:	sub    rsp,0x20
   140009d3e:	and    QWORD PTR [rcx+0x8],0x0
   140009d43:	lea    rax,[rip+0xa4fe]        # 0x140014248
   140009d4a:	mov    rbx,rcx
   140009d4d:	mov    QWORD PTR [rcx],rax
   140009d50:	mov    BYTE PTR [rcx+0x10],0x0
   140009d54:	call   0x140009d74
   140009d59:	mov    rax,rbx
   140009d5c:	add    rsp,0x20
   140009d60:	pop    rbx
   140009d61:	ret    
   140009d62:	int3   
   140009d63:	int3   
   140009d64:	lea    rax,[rip+0xa4dd]        # 0x140014248
   140009d6b:	mov    QWORD PTR [rcx],rax
   140009d6e:	jmp    0x140009e50
   140009d73:	int3   
   140009d74:	mov    QWORD PTR [rsp+0x8],rbx
   140009d79:	push   rdi
   140009d7a:	sub    rsp,0x20
   140009d7e:	mov    rdi,rdx
   140009d81:	mov    rbx,rcx
   140009d84:	cmp    rcx,rdx
   140009d87:	je     0x140009daa
   140009d89:	call   0x140009e50
   140009d8e:	cmp    BYTE PTR [rdi+0x10],0x0
   140009d92:	je     0x140009da2
   140009d94:	mov    rdx,QWORD PTR [rdi+0x8]
   140009d98:	mov    rcx,rbx
   140009d9b:	call   0x140009df4
   140009da0:	jmp    0x140009daa
   140009da2:	mov    rax,QWORD PTR [rdi+0x8]
   140009da6:	mov    QWORD PTR [rbx+0x8],rax
   140009daa:	mov    rax,rbx
   140009dad:	mov    rbx,QWORD PTR [rsp+0x30]
   140009db2:	add    rsp,0x20
   140009db6:	pop    rdi
   140009db7:	ret    
   140009db8:	mov    QWORD PTR [rsp+0x8],rbx
   140009dbd:	push   rdi
   140009dbe:	sub    rsp,0x20
   140009dc2:	lea    rax,[rip+0xa47f]        # 0x140014248
   140009dc9:	mov    ebx,edx
   140009dcb:	mov    rdi,rcx
   140009dce:	mov    QWORD PTR [rcx],rax
   140009dd1:	call   0x140009e50
   140009dd6:	test   bl,0x1
   140009dd9:	je     0x140009de3
   140009ddb:	mov    rcx,rdi
   140009dde:	call   0x140005fbc
   140009de3:	mov    rax,rdi
   140009de6:	mov    rbx,QWORD PTR [rsp+0x30]
   140009deb:	add    rsp,0x20
   140009def:	pop    rdi
   140009df0:	ret    
   140009df1:	int3   
   140009df2:	int3   
   140009df3:	int3   
   140009df4:	test   rdx,rdx
   140009df7:	je     0x140009e4d
   140009df9:	mov    QWORD PTR [rsp+0x8],rbx
   140009dfe:	mov    QWORD PTR [rsp+0x10],rsi
   140009e03:	push   rdi
   140009e04:	sub    rsp,0x20
   140009e08:	mov    rsi,rcx
   140009e0b:	mov    rcx,rdx
   140009e0e:	mov    rbx,rdx
   140009e11:	call   0x14000c070
   140009e16:	mov    rdi,rax
   140009e19:	lea    rcx,[rax+0x1]
   140009e1d:	call   0x140009c34
   140009e22:	mov    QWORD PTR [rsi+0x8],rax
   140009e26:	test   rax,rax
   140009e29:	je     0x140009e3e
   140009e2b:	lea    rdx,[rdi+0x1]
   140009e2f:	mov    r8,rbx
   140009e32:	mov    rcx,rax
   140009e35:	call   0x14000c8d0
   140009e3a:	mov    BYTE PTR [rsi+0x10],0x1
   140009e3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e43:	mov    rsi,QWORD PTR [rsp+0x38]
   140009e48:	add    rsp,0x20
   140009e4c:	pop    rdi
   140009e4d:	ret    
   140009e4e:	int3   
   140009e4f:	int3   
   140009e50:	rex push rbx
   140009e52:	sub    rsp,0x20
   140009e56:	cmp    BYTE PTR [rcx+0x10],0x0
   140009e5a:	mov    rbx,rcx
   140009e5d:	je     0x140009e68
   140009e5f:	mov    rcx,QWORD PTR [rcx+0x8]
   140009e63:	call   0x140006aa0
   140009e68:	and    QWORD PTR [rbx+0x8],0x0
   140009e6d:	mov    BYTE PTR [rbx+0x10],0x0
   140009e71:	add    rsp,0x20
   140009e75:	pop    rbx
   140009e76:	ret    
   140009e77:	int3   
   140009e78:	cmp    QWORD PTR [rcx+0x8],0x0
   140009e7d:	lea    rax,[rip+0xa3d4]        # 0x140014258
   140009e84:	cmovne rax,QWORD PTR [rcx+0x8]
   140009e89:	ret    
   140009e8a:	int3   
   140009e8b:	int3   
   140009e8c:	rex push rbx
   140009e8e:	sub    rsp,0x20
   140009e92:	mov    rbx,rcx
   140009e95:	mov    rcx,QWORD PTR [rip+0x137cc]        # 0x14001d668
   140009e9c:	call   QWORD PTR [rip+0x930e]        # 0x1400131b0
   140009ea2:	test   rax,rax
   140009ea5:	je     0x140009eb7
   140009ea7:	mov    rcx,rbx
   140009eaa:	call   rax
   140009eac:	test   eax,eax
   140009eae:	je     0x140009eb7
   140009eb0:	mov    eax,0x1
   140009eb5:	jmp    0x140009eb9
   140009eb7:	xor    eax,eax
   140009eb9:	add    rsp,0x20
   140009ebd:	pop    rbx
   140009ebe:	ret    
   140009ebf:	int3   
   140009ec0:	mov    QWORD PTR [rip+0x137a1],rcx        # 0x14001d668
   140009ec7:	ret    
   140009ec8:	mov    QWORD PTR [rsp+0x10],rbx
   140009ecd:	push   rbp
   140009ece:	mov    rbp,rsp
   140009ed1:	sub    rsp,0x60
   140009ed5:	mov    rax,QWORD PTR [rip+0xa394]        # 0x140014270
   140009edc:	mov    rbx,rdx
   140009edf:	mov    rdx,rcx
   140009ee2:	mov    QWORD PTR [rbp-0x40],rax
   140009ee6:	mov    rax,QWORD PTR [rip+0xa38b]        # 0x140014278
   140009eed:	mov    QWORD PTR [rbp-0x38],rax
   140009ef1:	mov    rax,QWORD PTR [rip+0xa388]        # 0x140014280
   140009ef8:	mov    QWORD PTR [rbp-0x30],rax
   140009efc:	mov    rax,QWORD PTR [rip+0xa385]        # 0x140014288
   140009f03:	mov    QWORD PTR [rbp-0x28],rax
   140009f07:	mov    rax,QWORD PTR [rip+0xa382]        # 0x140014290
   140009f0e:	mov    QWORD PTR [rbp-0x20],rax
   140009f12:	mov    rax,QWORD PTR [rip+0xa37f]        # 0x140014298
   140009f19:	mov    QWORD PTR [rbp-0x18],rax
   140009f1d:	mov    rax,QWORD PTR [rip+0xa37c]        # 0x1400142a0
   140009f24:	mov    QWORD PTR [rbp-0x10],rax
   140009f28:	mov    rax,QWORD PTR [rip+0xa379]        # 0x1400142a8
   140009f2f:	mov    QWORD PTR [rbp-0x8],rax
   140009f33:	test   rbx,rbx
   140009f36:	je     0x140009f48
   140009f38:	test   BYTE PTR [rbx],0x10
   140009f3b:	je     0x140009f48
   140009f3d:	mov    rax,QWORD PTR [rcx]
   140009f40:	mov    rcx,QWORD PTR [rax-0x8]
   140009f44:	mov    rbx,QWORD PTR [rcx+0x30]
   140009f48:	mov    QWORD PTR [rbp-0x18],rdx
   140009f4c:	lea    rdx,[rbp+0x10]
   140009f50:	mov    rcx,rbx
   140009f53:	mov    QWORD PTR [rbp-0x10],rbx
   140009f57:	call   QWORD PTR [rip+0x932b]        # 0x140013288
   140009f5d:	mov    rdx,rax
   140009f60:	mov    QWORD PTR [rbp+0x10],rax
   140009f64:	mov    QWORD PTR [rbp-0x8],rax
   140009f68:	test   rbx,rbx
   140009f6b:	je     0x140009f88
   140009f6d:	test   BYTE PTR [rbx],0x8
   140009f70:	mov    ecx,0x1994000
   140009f75:	je     0x140009f7c
   140009f77:	mov    DWORD PTR [rbp-0x20],ecx
   140009f7a:	jmp    0x140009f88
   140009f7c:	mov    eax,DWORD PTR [rbp-0x20]
   140009f7f:	test   rdx,rdx
   140009f82:	cmove  eax,ecx
   140009f85:	mov    DWORD PTR [rbp-0x20],eax
   140009f88:	mov    r8d,DWORD PTR [rbp-0x28]
   140009f8c:	mov    edx,DWORD PTR [rbp-0x3c]
   140009f8f:	mov    ecx,DWORD PTR [rbp-0x40]
   140009f92:	lea    r9,[rbp-0x20]
   140009f96:	call   QWORD PTR [rip+0x9144]        # 0x1400130e0
   140009f9c:	mov    rbx,QWORD PTR [rsp+0x78]
   140009fa1:	add    rsp,0x60
   140009fa5:	pop    rbp
   140009fa6:	ret    
   140009fa7:	int3   
   140009fa8:	mov    QWORD PTR [rsp+0x8],rbx
   140009fad:	mov    QWORD PTR [rsp+0x10],rsi
   140009fb2:	push   rdi
   140009fb3:	sub    rsp,0x20
   140009fb7:	mov    rbx,rdx
   140009fba:	mov    rdi,rcx
   140009fbd:	test   rcx,rcx
   140009fc0:	jne    0x140009fcc
   140009fc2:	mov    rcx,rdx
   140009fc5:	call   0x140009c34
   140009fca:	jmp    0x14000a036
   140009fcc:	test   rdx,rdx
   140009fcf:	jne    0x140009fd8
   140009fd1:	call   0x140006aa0
   140009fd6:	jmp    0x14000a034
   140009fd8:	cmp    rdx,0xffffffffffffffe0
   140009fdc:	ja     0x14000a021
   140009fde:	mov    rcx,QWORD PTR [rip+0x13533]        # 0x14001d518
   140009fe5:	mov    eax,0x1
   140009fea:	test   rbx,rbx
   140009fed:	cmove  rbx,rax
   140009ff1:	mov    r8,rdi
   140009ff4:	xor    edx,edx
   140009ff6:	mov    r9,rbx
   140009ff9:	call   QWORD PTR [rip+0x9291]        # 0x140013290
   140009fff:	mov    rsi,rax
   14000a002:	test   rax,rax
   14000a005:	jne    0x14000a076
   14000a007:	cmp    DWORD PTR [rip+0x139ab],eax        # 0x14001d9b8
   14000a00d:	je     0x14000a05f
   14000a00f:	mov    rcx,rbx
   14000a012:	call   0x140009e8c
   14000a017:	test   eax,eax
   14000a019:	je     0x14000a046
   14000a01b:	cmp    rbx,0xffffffffffffffe0
   14000a01f:	jbe    0x140009fde
   14000a021:	mov    rcx,rbx
   14000a024:	call   0x140009e8c
   14000a029:	call   0x140008888
   14000a02e:	mov    DWORD PTR [rax],0xc
   14000a034:	xor    eax,eax
   14000a036:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a03b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a040:	add    rsp,0x20
   14000a044:	pop    rdi
   14000a045:	ret    
   14000a046:	call   0x140008888
   14000a04b:	mov    rbx,rax
   14000a04e:	call   QWORD PTR [rip+0x90e4]        # 0x140013138
   14000a054:	mov    ecx,eax
   14000a056:	call   0x1400088a8
   14000a05b:	mov    DWORD PTR [rbx],eax
   14000a05d:	jmp    0x14000a034
   14000a05f:	call   0x140008888
   14000a064:	mov    rbx,rax
   14000a067:	call   QWORD PTR [rip+0x90cb]        # 0x140013138
   14000a06d:	mov    ecx,eax
   14000a06f:	call   0x1400088a8
   14000a074:	mov    DWORD PTR [rbx],eax
   14000a076:	mov    rax,rsi
   14000a079:	jmp    0x14000a036
   14000a07b:	int3   
   14000a07c:	mov    QWORD PTR [rsp+0x18],rbx
   14000a081:	push   rbp
   14000a082:	push   rsi
   14000a083:	push   rdi
   14000a084:	push   r12
   14000a086:	push   r13
   14000a088:	push   r14
   14000a08a:	push   r15
   14000a08c:	lea    rbp,[rsp-0x3e0]
   14000a094:	sub    rsp,0x4e0
   14000a09b:	mov    rax,QWORD PTR [rip+0x10fe6]        # 0x14001b088
   14000a0a2:	xor    rax,rsp
   14000a0a5:	mov    QWORD PTR [rbp+0x3d0],rax
   14000a0ac:	xor    eax,eax
   14000a0ae:	mov    rbx,rcx
   14000a0b1:	mov    QWORD PTR [rsp+0x78],rcx
   14000a0b6:	mov    QWORD PTR [rbp-0x80],rdx
   14000a0ba:	lea    rcx,[rbp-0x70]
   14000a0be:	mov    rdx,r8
   14000a0c1:	mov    r12,r9
   14000a0c4:	mov    QWORD PTR [rsp+0x50],r9
   14000a0c9:	mov    DWORD PTR [rsp+0x70],eax
   14000a0cd:	mov    r14d,eax
   14000a0d0:	mov    DWORD PTR [rsp+0x58],eax
   14000a0d4:	mov    edi,eax
   14000a0d6:	mov    DWORD PTR [rsp+0x44],eax
   14000a0da:	mov    DWORD PTR [rsp+0x48],eax
   14000a0de:	mov    DWORD PTR [rsp+0x6c],eax
   14000a0e2:	mov    DWORD PTR [rsp+0x4c],eax
   14000a0e6:	call   0x140008d54
   14000a0eb:	call   0x140008888
   14000a0f0:	mov    QWORD PTR [rbp-0x48],rax
   14000a0f4:	call   0x140007a7c
   14000a0f9:	xor    r10d,r10d
   14000a0fc:	test   eax,eax
   14000a0fe:	jns    0x14000a119
   14000a100:	cmp    BYTE PTR [rbp-0x58],r10b
   14000a104:	je     0x14000a111
   14000a106:	mov    rax,QWORD PTR [rbp-0x60]
   14000a10a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a111:	or     eax,0xffffffff
   14000a114:	jmp    0x14000a919
   14000a119:	test   rbx,rbx
   14000a11c:	jne    0x14000a135
   14000a11e:	call   0x140008888
   14000a123:	mov    DWORD PTR [rax],0x16
   14000a129:	call   0x1400087bc
   14000a12e:	xor    ecx,ecx
   14000a130:	cmp    BYTE PTR [rbp-0x58],cl
   14000a133:	jmp    0x14000a104
   14000a135:	mov    r8,QWORD PTR [rbp-0x80]
   14000a139:	test   r8,r8
   14000a13c:	je     0x14000a11e
   14000a13e:	movzx  r15d,WORD PTR [r8]
   14000a142:	mov    esi,r10d
   14000a145:	mov    DWORD PTR [rsp+0x40],r10d
   14000a14a:	mov    r13d,r10d
   14000a14d:	mov    edx,r10d
   14000a150:	mov    QWORD PTR [rbp-0x50],r10
   14000a154:	test   r15w,r15w
   14000a158:	je     0x14000a906
   14000a15e:	mov    rbx,QWORD PTR [rbp-0x40]
   14000a162:	mov    r11d,0x20
   14000a168:	mov    r9d,0x200
   14000a16e:	add    r8,0x2
   14000a172:	mov    QWORD PTR [rbp-0x80],r8
   14000a176:	test   esi,esi
   14000a178:	js     0x14000a906
   14000a17e:	movzx  eax,r15w
   14000a182:	mov    ecx,0x58
   14000a187:	sub    ax,r11w
   14000a18b:	cmp    ax,cx
   14000a18e:	ja     0x14000a1a5
   14000a190:	lea    rcx,[rip+0xa049]        # 0x1400141e0
   14000a197:	movzx  eax,r15w
   14000a19b:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000a1a0:	and    ecx,0xf
   14000a1a3:	jmp    0x14000a1a8
   14000a1a5:	mov    ecx,r10d
   14000a1a8:	movsxd rax,edx
   14000a1ab:	movsxd rcx,ecx
   14000a1ae:	lea    rdx,[rax+rcx*8]
   14000a1b2:	lea    rax,[rip+0xa027]        # 0x1400141e0
   14000a1b9:	movsx  edx,BYTE PTR [rdx+rax*1]
   14000a1bd:	sar    edx,0x4
   14000a1c0:	mov    DWORD PTR [rsp+0x68],edx
   14000a1c4:	mov    ecx,edx
   14000a1c6:	test   edx,edx
   14000a1c8:	je     0x14000a9ec
   14000a1ce:	dec    ecx
   14000a1d0:	je     0x14000aafc
   14000a1d6:	dec    ecx
   14000a1d8:	je     0x14000aaa1
   14000a1de:	dec    ecx
   14000a1e0:	je     0x14000aa5f
   14000a1e6:	dec    ecx
   14000a1e8:	je     0x14000aa52
   14000a1ee:	dec    ecx
   14000a1f0:	je     0x14000aa17
   14000a1f6:	dec    ecx
   14000a1f8:	je     0x14000a943
   14000a1fe:	dec    ecx
   14000a200:	jne    0x14000a8f8
   14000a206:	movzx  ecx,r15w
   14000a20a:	cmp    ecx,0x64
   14000a20d:	jg     0x14000a41e
   14000a213:	je     0x14000a531
   14000a219:	cmp    ecx,0x41
   14000a21c:	je     0x14000a3eb
   14000a222:	cmp    ecx,0x43
   14000a225:	je     0x14000a375
   14000a22b:	lea    eax,[rcx-0x45]
   14000a22e:	test   eax,0xfffffffd
   14000a233:	je     0x14000a3eb
   14000a239:	cmp    ecx,0x53
   14000a23c:	je     0x14000a2cf
   14000a242:	mov    eax,0x58
   14000a247:	cmp    ecx,eax
   14000a249:	je     0x14000a4b0
   14000a24f:	cmp    ecx,0x5a
   14000a252:	je     0x14000a26b
   14000a254:	cmp    ecx,0x61
   14000a257:	je     0x14000a3f6
   14000a25d:	cmp    ecx,0x63
   14000a260:	je     0x14000a381
   14000a266:	jmp    0x14000a33d
   14000a26b:	mov    rax,QWORD PTR [r12]
   14000a26f:	add    r12,0x8
   14000a273:	mov    QWORD PTR [rsp+0x50],r12
   14000a278:	test   rax,rax
   14000a27b:	je     0x14000a2b8
   14000a27d:	mov    rbx,QWORD PTR [rax+0x8]
   14000a281:	test   rbx,rbx
   14000a284:	je     0x14000a2b8
   14000a286:	mov    edi,0x2d
   14000a28b:	bt     r14d,0xb
   14000a290:	jae    0x14000a2aa
   14000a292:	movsx  eax,WORD PTR [rax]
   14000a295:	mov    DWORD PTR [rsp+0x4c],0x1
   14000a29d:	cdq    
   14000a29e:	sub    eax,edx
   14000a2a0:	sar    eax,1
   14000a2a2:	mov    r13d,eax
   14000a2a5:	jmp    0x14000a342
   14000a2aa:	movsx  r13d,WORD PTR [rax]
   14000a2ae:	mov    DWORD PTR [rsp+0x4c],r10d
   14000a2b3:	jmp    0x14000a342
   14000a2b8:	mov    rbx,QWORD PTR [rip+0x10f59]        # 0x14001b218
   14000a2bf:	mov    rcx,rbx
   14000a2c2:	call   0x14000c070
   14000a2c7:	xor    r10d,r10d
   14000a2ca:	mov    r13,rax
   14000a2cd:	jmp    0x14000a33d
   14000a2cf:	test   r14d,0x830
   14000a2d6:	jne    0x14000a2db
   14000a2d8:	or     r14d,r11d
   14000a2db:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   14000a2e0:	mov    rbx,QWORD PTR [r12]
   14000a2e4:	mov    eax,0x7fffffff
   14000a2e9:	cmove  edi,eax
   14000a2ec:	add    r12,0x8
   14000a2f0:	mov    QWORD PTR [rsp+0x50],r12
   14000a2f5:	test   r11b,r14b
   14000a2f8:	je     0x14000a470
   14000a2fe:	test   rbx,rbx
   14000a301:	mov    r13d,r10d
   14000a304:	cmove  rbx,QWORD PTR [rip+0x10f0c]        # 0x14001b218
   14000a30c:	mov    rsi,rbx
   14000a30f:	test   edi,edi
   14000a311:	jle    0x14000a339
   14000a313:	cmp    BYTE PTR [rsi],r10b
   14000a316:	je     0x14000a339
   14000a318:	movzx  ecx,BYTE PTR [rsi]
   14000a31b:	lea    rdx,[rbp-0x70]
   14000a31f:	call   0x14000d4a4
   14000a324:	xor    r10d,r10d
   14000a327:	test   eax,eax
   14000a329:	je     0x14000a32e
   14000a32b:	inc    rsi
   14000a32e:	inc    r13d
   14000a331:	inc    rsi
   14000a334:	cmp    r13d,edi
   14000a337:	jl     0x14000a313
   14000a339:	mov    esi,DWORD PTR [rsp+0x40]
   14000a33d:	mov    edi,0x2d
   14000a342:	cmp    DWORD PTR [rsp+0x6c],r10d
   14000a347:	jne    0x14000a8c4
   14000a34d:	test   r14b,0x40
   14000a351:	je     0x14000a794
   14000a357:	bt     r14d,0x8
   14000a35c:	jae    0x14000a766
   14000a362:	mov    WORD PTR [rsp+0x5c],di
   14000a367:	mov    esi,0x1
   14000a36c:	mov    DWORD PTR [rsp+0x48],esi
   14000a370:	jmp    0x14000a798
   14000a375:	test   r14d,0x830
   14000a37c:	jne    0x14000a381
   14000a37e:	or     r14d,r11d
   14000a381:	movzx  eax,WORD PTR [r12]
   14000a386:	add    r12,0x8
   14000a38a:	mov    DWORD PTR [rsp+0x4c],0x1
   14000a392:	mov    QWORD PTR [rsp+0x50],r12
   14000a397:	mov    WORD PTR [rsp+0x60],ax
   14000a39c:	test   r11b,r14b
   14000a39f:	je     0x14000a3d8
   14000a3a1:	mov    BYTE PTR [rsp+0x64],al
   14000a3a5:	mov    rax,QWORD PTR [rbp-0x70]
   14000a3a9:	mov    BYTE PTR [rsp+0x65],r10b
   14000a3ae:	movsxd r8,DWORD PTR [rax+0xd4]
   14000a3b5:	lea    r9,[rbp-0x70]
   14000a3b9:	lea    rdx,[rsp+0x64]
   14000a3be:	lea    rcx,[rbp-0x30]
   14000a3c2:	call   0x14000d8f8
   14000a3c7:	xor    r10d,r10d
   14000a3ca:	test   eax,eax
   14000a3cc:	jns    0x14000a3dc
   14000a3ce:	mov    DWORD PTR [rsp+0x6c],0x1
   14000a3d6:	jmp    0x14000a3dc
   14000a3d8:	mov    WORD PTR [rbp-0x30],ax
   14000a3dc:	lea    rbx,[rbp-0x30]
   14000a3e0:	mov    r13d,0x1
   14000a3e6:	jmp    0x14000a33d
   14000a3eb:	mov    DWORD PTR [rbp-0x78],0x1
   14000a3f2:	add    r15w,r11w
   14000a3f6:	mov    eax,0x67
   14000a3fb:	or     r14d,0x40
   14000a3ff:	lea    rbx,[rbp-0x30]
   14000a403:	mov    esi,r9d
   14000a406:	test   edi,edi
   14000a408:	jns    0x14000a656
   14000a40e:	mov    r13d,0x6
   14000a414:	mov    DWORD PTR [rsp+0x44],r13d
   14000a419:	jmp    0x14000a6a9
   14000a41e:	cmp    ecx,0x65
   14000a421:	jl     0x14000a33d
   14000a427:	mov    eax,0x67
   14000a42c:	cmp    ecx,eax
   14000a42e:	jle    0x14000a3fb
   14000a430:	cmp    ecx,0x69
   14000a433:	je     0x14000a531
   14000a439:	cmp    ecx,0x6e
   14000a43c:	je     0x14000a4f7
   14000a442:	cmp    ecx,0x6f
   14000a445:	je     0x14000a4e1
   14000a44b:	cmp    ecx,0x70
   14000a44e:	je     0x14000a4a6
   14000a450:	cmp    ecx,0x73
   14000a453:	je     0x14000a2db
   14000a459:	cmp    ecx,0x75
   14000a45c:	je     0x14000a535
   14000a462:	cmp    ecx,0x78
   14000a465:	jne    0x14000a33d
   14000a46b:	lea    eax,[rcx-0x51]
   14000a46e:	jmp    0x14000a4b5
   14000a470:	test   rbx,rbx
   14000a473:	mov    DWORD PTR [rsp+0x4c],0x1
   14000a47b:	cmove  rbx,QWORD PTR [rip+0x10d9d]        # 0x14001b220
   14000a483:	mov    rax,rbx
   14000a486:	jmp    0x14000a494
   14000a488:	dec    edi
   14000a48a:	cmp    WORD PTR [rax],r10w
   14000a48e:	je     0x14000a498
   14000a490:	add    rax,0x2
   14000a494:	test   edi,edi
   14000a496:	jne    0x14000a488
   14000a498:	sub    rax,rbx
   14000a49b:	sar    rax,1
   14000a49e:	mov    r13d,eax
   14000a4a1:	jmp    0x14000a33d
   14000a4a6:	mov    edi,0x10
   14000a4ab:	bts    r14d,0xf
   14000a4b0:	mov    eax,0x7
   14000a4b5:	mov    DWORD PTR [rsp+0x70],eax
   14000a4b9:	mov    r9d,0x10
   14000a4bf:	mov    r15d,0x200
   14000a4c5:	test   r14b,r14b
   14000a4c8:	jns    0x14000a541
   14000a4ca:	lea    ecx,[r9+0x20]
   14000a4ce:	add    ax,0x51
   14000a4d2:	lea    edx,[rcx-0x2e]
   14000a4d5:	mov    WORD PTR [rsp+0x5c],cx
   14000a4da:	mov    WORD PTR [rsp+0x5e],ax
   14000a4df:	jmp    0x14000a545
   14000a4e1:	mov    r9d,0x8
   14000a4e7:	test   r14b,r14b
   14000a4ea:	jns    0x14000a53b
   14000a4ec:	mov    r15d,0x200
   14000a4f2:	or     r14d,r15d
   14000a4f5:	jmp    0x14000a541
   14000a4f7:	mov    rdi,QWORD PTR [r12]
   14000a4fb:	add    r12,0x8
   14000a4ff:	mov    QWORD PTR [rsp+0x50],r12
   14000a504:	call   0x14000d530
   14000a509:	xor    r10d,r10d
   14000a50c:	test   eax,eax
   14000a50e:	je     0x14000a11e
   14000a514:	lea    r11d,[r10+0x20]
   14000a518:	test   r11b,r14b
   14000a51b:	je     0x14000a522
   14000a51d:	mov    WORD PTR [rdi],si
   14000a520:	jmp    0x14000a524
   14000a522:	mov    DWORD PTR [rdi],esi
   14000a524:	mov    DWORD PTR [rsp+0x6c],0x1
   14000a52c:	jmp    0x14000a8ca
   14000a531:	or     r14d,0x40
   14000a535:	mov    r9d,0xa
   14000a53b:	mov    r15d,0x200
   14000a541:	mov    edx,DWORD PTR [rsp+0x48]
   14000a545:	mov    eax,0x8000
   14000a54a:	test   eax,r14d
   14000a54d:	je     0x14000a559
   14000a54f:	mov    r8,QWORD PTR [r12]
   14000a553:	add    r12,0x8
   14000a557:	jmp    0x14000a596
   14000a559:	bt     r14d,0xc
   14000a55e:	jb     0x14000a54f
   14000a560:	add    r12,0x8
   14000a564:	test   r11b,r14b
   14000a567:	je     0x14000a584
   14000a569:	mov    QWORD PTR [rsp+0x50],r12
   14000a56e:	test   r14b,0x40
   14000a572:	je     0x14000a57c
   14000a574:	movsx  r8,WORD PTR [r12-0x8]
   14000a57a:	jmp    0x14000a59b
   14000a57c:	movzx  r8d,WORD PTR [r12-0x8]
   14000a582:	jmp    0x14000a59b
   14000a584:	test   r14b,0x40
   14000a588:	je     0x14000a591
   14000a58a:	movsxd r8,DWORD PTR [r12-0x8]
   14000a58f:	jmp    0x14000a596
   14000a591:	mov    r8d,DWORD PTR [r12-0x8]
   14000a596:	mov    QWORD PTR [rsp+0x50],r12
   14000a59b:	test   r14b,0x40
   14000a59f:	je     0x14000a5ae
   14000a5a1:	test   r8,r8
   14000a5a4:	jns    0x14000a5ae
   14000a5a6:	neg    r8
   14000a5a9:	bts    r14d,0x8
   14000a5ae:	test   eax,r14d
   14000a5b1:	jne    0x14000a5bd
   14000a5b3:	bt     r14d,0xc
   14000a5b8:	jb     0x14000a5bd
   14000a5ba:	mov    r8d,r8d
   14000a5bd:	test   edi,edi
   14000a5bf:	jns    0x14000a5c8
   14000a5c1:	mov    edi,0x1
   14000a5c6:	jmp    0x14000a5d3
   14000a5c8:	and    r14d,0xfffffff7
   14000a5cc:	cmp    edi,r15d
   14000a5cf:	cmovg  edi,r15d
   14000a5d3:	mov    esi,DWORD PTR [rsp+0x70]
   14000a5d7:	mov    rax,r8
   14000a5da:	lea    rbx,[rbp+0x1cf]
   14000a5e1:	neg    rax
   14000a5e4:	sbb    ecx,ecx
   14000a5e6:	and    ecx,edx
   14000a5e8:	mov    DWORD PTR [rsp+0x48],ecx
   14000a5ec:	mov    ecx,edi
   14000a5ee:	dec    edi
   14000a5f0:	test   ecx,ecx
   14000a5f2:	jg     0x14000a5f9
   14000a5f4:	test   r8,r8
   14000a5f7:	je     0x14000a618
   14000a5f9:	xor    edx,edx
   14000a5fb:	mov    rax,r8
   14000a5fe:	movsxd rcx,r9d
   14000a601:	div    rcx
   14000a604:	mov    r8,rax
   14000a607:	lea    eax,[rdx+0x30]
   14000a60a:	cmp    eax,0x39
   14000a60d:	jle    0x14000a611
   14000a60f:	add    eax,esi
   14000a611:	mov    BYTE PTR [rbx],al
   14000a613:	dec    rbx
   14000a616:	jmp    0x14000a5ec
   14000a618:	mov    esi,DWORD PTR [rsp+0x40]
   14000a61c:	lea    rax,[rbp+0x1cf]
   14000a623:	mov    DWORD PTR [rsp+0x44],edi
   14000a627:	sub    eax,ebx
   14000a629:	inc    rbx
   14000a62c:	mov    r13d,eax
   14000a62f:	test   r15d,r14d
   14000a632:	je     0x14000a33d
   14000a638:	test   eax,eax
   14000a63a:	mov    eax,0x30
   14000a63f:	je     0x14000a649
   14000a641:	cmp    BYTE PTR [rbx],al
   14000a643:	je     0x14000a33d
   14000a649:	dec    rbx
   14000a64c:	inc    r13d
   14000a64f:	mov    BYTE PTR [rbx],al
   14000a651:	jmp    0x14000a33d
   14000a656:	jne    0x14000a669
   14000a658:	cmp    r15w,ax
   14000a65c:	jne    0x14000a69f
   14000a65e:	mov    r13d,0x1
   14000a664:	jmp    0x14000a414
   14000a669:	cmp    edi,r9d
   14000a66c:	mov    r13d,0xa3
   14000a672:	cmovg  edi,r9d
   14000a676:	mov    DWORD PTR [rsp+0x44],edi
   14000a67a:	cmp    edi,r13d
   14000a67d:	jle    0x14000a6a6
   14000a67f:	add    edi,0x15d
   14000a685:	movsxd rcx,edi
   14000a688:	call   0x140008abc
   14000a68d:	mov    QWORD PTR [rbp-0x50],rax
   14000a691:	test   rax,rax
   14000a694:	je     0x14000a414
   14000a69a:	mov    rbx,rax
   14000a69d:	mov    esi,edi
   14000a69f:	mov    r13d,DWORD PTR [rsp+0x44]
   14000a6a4:	jmp    0x14000a6a9
   14000a6a6:	mov    r13d,edi
   14000a6a9:	mov    rax,QWORD PTR [r12]
   14000a6ad:	mov    rcx,QWORD PTR [rip+0x1178c]        # 0x14001be40
   14000a6b4:	add    r12,0x8
   14000a6b8:	mov    QWORD PTR [rsp+0x50],r12
   14000a6bd:	movsx  edi,r15b
   14000a6c1:	movsxd rsi,esi
   14000a6c4:	mov    QWORD PTR [rbp-0x40],rax
   14000a6c8:	call   QWORD PTR [rip+0x8ae2]        # 0x1400131b0
   14000a6ce:	lea    rcx,[rbp-0x70]
   14000a6d2:	mov    QWORD PTR [rsp+0x30],rcx
   14000a6d7:	mov    ecx,DWORD PTR [rbp-0x78]
   14000a6da:	mov    r9d,edi
   14000a6dd:	mov    DWORD PTR [rsp+0x28],ecx
   14000a6e1:	lea    rcx,[rbp-0x40]
   14000a6e5:	mov    r8,rsi
   14000a6e8:	mov    rdx,rbx
   14000a6eb:	mov    DWORD PTR [rsp+0x20],r13d
   14000a6f0:	call   rax
   14000a6f2:	mov    edi,r14d
   14000a6f5:	and    edi,0x80
   14000a6fb:	je     0x14000a718
   14000a6fd:	test   r13d,r13d
   14000a700:	jne    0x14000a718
   14000a702:	mov    rcx,QWORD PTR [rip+0x1174f]        # 0x14001be58
   14000a709:	call   QWORD PTR [rip+0x8aa1]        # 0x1400131b0
   14000a70f:	lea    rdx,[rbp-0x70]
   14000a713:	mov    rcx,rbx
   14000a716:	call   rax
   14000a718:	mov    ecx,0x67
   14000a71d:	cmp    r15w,cx
   14000a721:	jne    0x14000a73d
   14000a723:	test   edi,edi
   14000a725:	jne    0x14000a73d
   14000a727:	mov    rcx,QWORD PTR [rip+0x11722]        # 0x14001be50
   14000a72e:	call   QWORD PTR [rip+0x8a7c]        # 0x1400131b0
   14000a734:	lea    rdx,[rbp-0x70]
   14000a738:	mov    rcx,rbx
   14000a73b:	call   rax
   14000a73d:	mov    edi,0x2d
   14000a742:	cmp    BYTE PTR [rbx],dil
   14000a745:	jne    0x14000a74f
   14000a747:	bts    r14d,0x8
   14000a74c:	inc    rbx
   14000a74f:	mov    rcx,rbx
   14000a752:	call   0x14000c070
   14000a757:	mov    esi,DWORD PTR [rsp+0x40]
   14000a75b:	xor    r10d,r10d
   14000a75e:	mov    r13d,eax
   14000a761:	jmp    0x14000a342
   14000a766:	test   r14b,0x1
   14000a76a:	je     0x14000a77b
   14000a76c:	mov    eax,0x2b
   14000a771:	mov    WORD PTR [rsp+0x5c],ax
   14000a776:	jmp    0x14000a367
   14000a77b:	test   r14b,0x2
   14000a77f:	je     0x14000a794
   14000a781:	mov    eax,0x20
   14000a786:	mov    WORD PTR [rsp+0x5c],ax
   14000a78b:	lea    esi,[rax-0x1f]
   14000a78e:	mov    DWORD PTR [rsp+0x48],esi
   14000a792:	jmp    0x14000a79d
   14000a794:	mov    esi,DWORD PTR [rsp+0x48]
   14000a798:	mov    eax,0x20
   14000a79d:	mov    r15d,DWORD PTR [rsp+0x58]
   14000a7a2:	mov    rdi,QWORD PTR [rsp+0x78]
   14000a7a7:	sub    r15d,r13d
   14000a7aa:	sub    r15d,esi
   14000a7ad:	test   r14b,0xc
   14000a7b1:	jne    0x14000a7c5
   14000a7b3:	lea    r9,[rsp+0x40]
   14000a7b8:	mov    ecx,eax
   14000a7ba:	mov    r8,rdi
   14000a7bd:	mov    edx,r15d
   14000a7c0:	call   0x14000ab5c
   14000a7c5:	mov    rax,QWORD PTR [rbp-0x48]
   14000a7c9:	lea    r9,[rsp+0x40]
   14000a7ce:	lea    rcx,[rsp+0x5c]
   14000a7d3:	mov    r8,rdi
   14000a7d6:	mov    edx,esi
   14000a7d8:	mov    QWORD PTR [rsp+0x20],rax
   14000a7dd:	call   0x14000abb0
   14000a7e2:	test   r14b,0x8
   14000a7e6:	je     0x14000a803
   14000a7e8:	test   r14b,0x4
   14000a7ec:	jne    0x14000a803
   14000a7ee:	lea    r9,[rsp+0x40]
   14000a7f3:	mov    ecx,0x30
   14000a7f8:	mov    r8,rdi
   14000a7fb:	mov    edx,r15d
   14000a7fe:	call   0x14000ab5c
   14000a803:	xor    eax,eax
   14000a805:	cmp    DWORD PTR [rsp+0x4c],eax
   14000a809:	jne    0x14000a87b
   14000a80b:	test   r13d,r13d
   14000a80e:	jle    0x14000a87b
   14000a810:	mov    rdi,rbx
   14000a813:	mov    esi,r13d
   14000a816:	mov    rax,QWORD PTR [rbp-0x70]
   14000a81a:	lea    r9,[rbp-0x70]
   14000a81e:	lea    rcx,[rsp+0x60]
   14000a823:	movsxd r8,DWORD PTR [rax+0xd4]
   14000a82a:	mov    rdx,rdi
   14000a82d:	dec    esi
   14000a82f:	call   0x14000d8f8
   14000a834:	xor    r10d,r10d
   14000a837:	movsxd r12,eax
   14000a83a:	test   eax,eax
   14000a83c:	jle    0x14000a868
   14000a83e:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a843:	movzx  ecx,WORD PTR [rsp+0x60]
   14000a848:	lea    r8,[rsp+0x40]
   14000a84d:	call   0x14000ab24
   14000a852:	add    rdi,r12
   14000a855:	xor    r10d,r10d
   14000a858:	test   esi,esi
   14000a85a:	jg     0x14000a816
   14000a85c:	mov    r12,QWORD PTR [rsp+0x50]
   14000a861:	mov    rdi,QWORD PTR [rsp+0x78]
   14000a866:	jmp    0x14000a89a
   14000a868:	mov    r12,QWORD PTR [rsp+0x50]
   14000a86d:	mov    rdi,QWORD PTR [rsp+0x78]
   14000a872:	or     esi,0xffffffff
   14000a875:	mov    DWORD PTR [rsp+0x40],esi
   14000a879:	jmp    0x14000a89e
   14000a87b:	mov    rax,QWORD PTR [rbp-0x48]
   14000a87f:	lea    r9,[rsp+0x40]
   14000a884:	mov    r8,rdi
   14000a887:	mov    edx,r13d
   14000a88a:	mov    rcx,rbx
   14000a88d:	mov    QWORD PTR [rsp+0x20],rax
   14000a892:	call   0x14000abb0
   14000a897:	xor    r10d,r10d
   14000a89a:	mov    esi,DWORD PTR [rsp+0x40]
   14000a89e:	test   esi,esi
   14000a8a0:	js     0x14000a8c4
   14000a8a2:	test   r14b,0x4
   14000a8a6:	je     0x14000a8c4
   14000a8a8:	lea    r9,[rsp+0x40]
   14000a8ad:	mov    ecx,0x20
   14000a8b2:	mov    r8,rdi
   14000a8b5:	mov    edx,r15d
   14000a8b8:	call   0x14000ab5c
   14000a8bd:	mov    esi,DWORD PTR [rsp+0x40]
   14000a8c1:	xor    r10d,r10d
   14000a8c4:	mov    r11d,0x20
   14000a8ca:	mov    rax,QWORD PTR [rbp-0x50]
   14000a8ce:	test   rax,rax
   14000a8d1:	je     0x14000a8e6
   14000a8d3:	mov    rcx,rax
   14000a8d6:	call   0x140006aa0
   14000a8db:	xor    r10d,r10d
   14000a8de:	lea    r11d,[r10+0x20]
   14000a8e2:	mov    QWORD PTR [rbp-0x50],r10
   14000a8e6:	mov    edi,DWORD PTR [rsp+0x44]
   14000a8ea:	mov    r8,QWORD PTR [rbp-0x80]
   14000a8ee:	mov    edx,DWORD PTR [rsp+0x68]
   14000a8f2:	mov    r9d,0x200
   14000a8f8:	movzx  r15d,WORD PTR [r8]
   14000a8fc:	test   r15w,r15w
   14000a900:	jne    0x14000a16e
   14000a906:	cmp    BYTE PTR [rbp-0x58],r10b
   14000a90a:	je     0x14000a917
   14000a90c:	mov    rcx,QWORD PTR [rbp-0x60]
   14000a910:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a917:	mov    eax,esi
   14000a919:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000a920:	xor    rcx,rsp
   14000a923:	call   0x140005fe0
   14000a928:	mov    rbx,QWORD PTR [rsp+0x530]
   14000a930:	add    rsp,0x4e0
   14000a937:	pop    r15
   14000a939:	pop    r14
   14000a93b:	pop    r13
   14000a93d:	pop    r12
   14000a93f:	pop    rdi
   14000a940:	pop    rsi
   14000a941:	pop    rbp
   14000a942:	ret    
   14000a943:	movzx  eax,r15w
   14000a947:	cmp    eax,0x49
   14000a94a:	je     0x14000a988
   14000a94c:	cmp    eax,0x68
   14000a94f:	je     0x14000a980
   14000a951:	mov    ecx,0x6c
   14000a956:	cmp    eax,ecx
   14000a958:	je     0x14000a966
   14000a95a:	cmp    eax,0x77
   14000a95d:	jne    0x14000a8f8
   14000a95f:	bts    r14d,0xb
   14000a964:	jmp    0x14000a8f8
   14000a966:	cmp    WORD PTR [r8],cx
   14000a96a:	jne    0x14000a977
   14000a96c:	add    r8,0x2
   14000a970:	bts    r14d,0xc
   14000a975:	jmp    0x14000a8f8
   14000a977:	or     r14d,0x10
   14000a97b:	jmp    0x14000a8f8
   14000a980:	or     r14d,r11d
   14000a983:	jmp    0x14000a8f8
   14000a988:	movzx  eax,WORD PTR [r8]
   14000a98c:	bts    r14d,0xf
   14000a991:	cmp    ax,0x36
   14000a995:	jne    0x14000a9ad
   14000a997:	cmp    WORD PTR [r8+0x2],0x34
   14000a99d:	jne    0x14000a9ad
   14000a99f:	add    r8,0x4
   14000a9a3:	bts    r14d,0xf
   14000a9a8:	jmp    0x14000a8f8
   14000a9ad:	cmp    ax,0x33
   14000a9b1:	jne    0x14000a9c9
   14000a9b3:	cmp    WORD PTR [r8+0x2],0x32
   14000a9b9:	jne    0x14000a9c9
   14000a9bb:	add    r8,0x4
   14000a9bf:	btr    r14d,0xf
   14000a9c4:	jmp    0x14000a8f8
   14000a9c9:	sub    ax,0x58
   14000a9cd:	cmp    ax,r11w
   14000a9d1:	ja     0x14000a9e7
   14000a9d3:	movabs rcx,0x120821001
   14000a9dd:	bt     rcx,rax
   14000a9e1:	jb     0x14000a8f8
   14000a9e7:	mov    DWORD PTR [rsp+0x68],r10d
   14000a9ec:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a9f1:	lea    r8,[rsp+0x40]
   14000a9f6:	movzx  ecx,r15w
   14000a9fa:	mov    DWORD PTR [rsp+0x4c],0x1
   14000aa02:	call   0x14000ab24
   14000aa07:	mov    esi,DWORD PTR [rsp+0x40]
   14000aa0b:	xor    r10d,r10d
   14000aa0e:	lea    r11d,[r10+0x20]
   14000aa12:	jmp    0x14000a8ea
   14000aa17:	cmp    r15w,0x2a
   14000aa1c:	jne    0x14000aa3c
   14000aa1e:	mov    edi,DWORD PTR [r12]
   14000aa22:	add    r12,0x8
   14000aa26:	mov    QWORD PTR [rsp+0x50],r12
   14000aa2b:	mov    DWORD PTR [rsp+0x44],edi
   14000aa2f:	test   edi,edi
   14000aa31:	jns    0x14000a8f8
   14000aa37:	or     edi,0xffffffff
   14000aa3a:	jmp    0x14000aa49
   14000aa3c:	lea    edi,[rdi+rdi*4]
   14000aa3f:	movzx  eax,r15w
   14000aa43:	lea    edi,[rdi-0x18]
   14000aa46:	lea    edi,[rax+rdi*2]
   14000aa49:	mov    DWORD PTR [rsp+0x44],edi
   14000aa4d:	jmp    0x14000a8f8
   14000aa52:	mov    edi,r10d
   14000aa55:	mov    DWORD PTR [rsp+0x44],r10d
   14000aa5a:	jmp    0x14000a8f8
   14000aa5f:	cmp    r15w,0x2a
   14000aa64:	jne    0x14000aa87
   14000aa66:	mov    eax,DWORD PTR [r12]
   14000aa6a:	add    r12,0x8
   14000aa6e:	mov    QWORD PTR [rsp+0x50],r12
   14000aa73:	mov    DWORD PTR [rsp+0x58],eax
   14000aa77:	test   eax,eax
   14000aa79:	jns    0x14000a8f8
   14000aa7f:	or     r14d,0x4
   14000aa83:	neg    eax
   14000aa85:	jmp    0x14000aa98
   14000aa87:	mov    eax,DWORD PTR [rsp+0x58]
   14000aa8b:	lea    ecx,[rax+rax*4]
   14000aa8e:	movzx  eax,r15w
   14000aa92:	lea    eax,[rax+rcx*2]
   14000aa95:	add    eax,0xffffffd0
   14000aa98:	mov    DWORD PTR [rsp+0x58],eax
   14000aa9c:	jmp    0x14000a8f8
   14000aaa1:	movzx  eax,r15w
   14000aaa5:	cmp    eax,r11d
   14000aaa8:	je     0x14000aaf3
   14000aaaa:	cmp    eax,0x23
   14000aaad:	je     0x14000aae9
   14000aaaf:	mov    ecx,0x2b
   14000aab4:	cmp    eax,ecx
   14000aab6:	je     0x14000aae0
   14000aab8:	mov    ecx,0x2d
   14000aabd:	cmp    eax,ecx
   14000aabf:	je     0x14000aad7
   14000aac1:	mov    ecx,0x30
   14000aac6:	cmp    eax,ecx
   14000aac8:	jne    0x14000a8f8
   14000aace:	or     r14d,0x8
   14000aad2:	jmp    0x14000a8f8
   14000aad7:	or     r14d,0x4
   14000aadb:	jmp    0x14000a8f8
   14000aae0:	or     r14d,0x1
   14000aae4:	jmp    0x14000a8f8
   14000aae9:	bts    r14d,0x7
   14000aaee:	jmp    0x14000a8f8
   14000aaf3:	or     r14d,0x2
   14000aaf7:	jmp    0x14000a8f8
   14000aafc:	or     edi,0xffffffff
   14000aaff:	mov    DWORD PTR [rbp-0x78],r10d
   14000ab03:	mov    DWORD PTR [rsp+0x6c],r10d
   14000ab08:	mov    DWORD PTR [rsp+0x58],r10d
   14000ab0d:	mov    DWORD PTR [rsp+0x48],r10d
   14000ab12:	mov    r14d,r10d
   14000ab15:	mov    DWORD PTR [rsp+0x44],edi
   14000ab19:	mov    DWORD PTR [rsp+0x4c],r10d
   14000ab1e:	jmp    0x14000a8f8
   14000ab23:	int3   
   14000ab24:	rex push rbx
   14000ab26:	sub    rsp,0x20
   14000ab2a:	test   BYTE PTR [rdx+0x18],0x40
   14000ab2e:	mov    rbx,r8
   14000ab31:	je     0x14000ab3f
   14000ab33:	cmp    QWORD PTR [rdx+0x10],0x0
   14000ab38:	jne    0x14000ab3f
   14000ab3a:	inc    DWORD PTR [r8]
   14000ab3d:	jmp    0x14000ab55
   14000ab3f:	call   0x14000d720
   14000ab44:	mov    ecx,0xffff
   14000ab49:	cmp    ax,cx
   14000ab4c:	jne    0x14000ab53
   14000ab4e:	or     DWORD PTR [rbx],0xffffffff
   14000ab51:	jmp    0x14000ab55
   14000ab53:	inc    DWORD PTR [rbx]
   14000ab55:	add    rsp,0x20
   14000ab59:	pop    rbx
   14000ab5a:	ret    
   14000ab5b:	int3   
   14000ab5c:	test   edx,edx
   14000ab5e:	jle    0x14000abac
   14000ab60:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab65:	mov    QWORD PTR [rsp+0x10],rbp
   14000ab6a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ab6f:	push   rdi
   14000ab70:	sub    rsp,0x20
   14000ab74:	mov    rdi,r9
   14000ab77:	mov    rsi,r8
   14000ab7a:	mov    ebx,edx
   14000ab7c:	movzx  ebp,cx
   14000ab7f:	mov    r8,rdi
   14000ab82:	mov    rdx,rsi
   14000ab85:	movzx  ecx,bp
   14000ab88:	dec    ebx
   14000ab8a:	call   0x14000ab24
   14000ab8f:	cmp    DWORD PTR [rdi],0xffffffff
   14000ab92:	je     0x14000ab98
   14000ab94:	test   ebx,ebx
   14000ab96:	jg     0x14000ab7f
   14000ab98:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ab9d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000aba2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000aba7:	add    rsp,0x20
   14000abab:	pop    rdi
   14000abac:	ret    
   14000abad:	int3   
   14000abae:	int3   
   14000abaf:	int3   
   14000abb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000abb5:	mov    QWORD PTR [rsp+0x10],rbp
   14000abba:	mov    QWORD PTR [rsp+0x18],rsi
   14000abbf:	push   rdi
   14000abc0:	push   r14
   14000abc2:	push   r15
   14000abc4:	sub    rsp,0x20
   14000abc8:	test   BYTE PTR [r8+0x18],0x40
   14000abcd:	mov    rbx,QWORD PTR [rsp+0x60]
   14000abd2:	mov    rdi,r9
   14000abd5:	mov    r15d,DWORD PTR [rbx]
   14000abd8:	mov    rbp,r8
   14000abdb:	mov    esi,edx
   14000abdd:	mov    r14,rcx
   14000abe0:	je     0x14000abee
   14000abe2:	cmp    QWORD PTR [r8+0x10],0x0
   14000abe7:	jne    0x14000abee
   14000abe9:	add    DWORD PTR [r9],edx
   14000abec:	jmp    0x14000ac30
   14000abee:	and    DWORD PTR [rbx],0x0
   14000abf1:	test   edx,edx
   14000abf3:	jle    0x14000ac2d
   14000abf5:	movzx  ecx,WORD PTR [r14]
   14000abf9:	mov    r8,rdi
   14000abfc:	mov    rdx,rbp
   14000abff:	dec    esi
   14000ac01:	call   0x14000ab24
   14000ac06:	cmp    DWORD PTR [rdi],0xffffffff
   14000ac09:	lea    r14,[r14+0x2]
   14000ac0d:	jne    0x14000ac24
   14000ac0f:	cmp    DWORD PTR [rbx],0x2a
   14000ac12:	jne    0x14000ac28
   14000ac14:	mov    ecx,0x3f
   14000ac19:	mov    r8,rdi
   14000ac1c:	mov    rdx,rbp
   14000ac1f:	call   0x14000ab24
   14000ac24:	test   esi,esi
   14000ac26:	jg     0x14000abf5
   14000ac28:	cmp    DWORD PTR [rbx],0x0
   14000ac2b:	jne    0x14000ac30
   14000ac2d:	mov    DWORD PTR [rbx],r15d
   14000ac30:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ac35:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ac3a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ac3f:	add    rsp,0x20
   14000ac43:	pop    r15
   14000ac45:	pop    r14
   14000ac47:	pop    rdi
   14000ac48:	ret    
   14000ac49:	int3   
   14000ac4a:	int3   
   14000ac4b:	int3   
   14000ac4c:	and    DWORD PTR [rip+0x14a6d],0x0        # 0x14001f6c0
   14000ac53:	ret    
   14000ac54:	mov    QWORD PTR [rsp+0x20],rbx
   14000ac59:	push   rdi
   14000ac5a:	sub    rsp,0x40
   14000ac5e:	mov    rbx,rcx
   14000ac61:	call   QWORD PTR [rip+0x8631]        # 0x140013298
   14000ac67:	mov    rdi,QWORD PTR [rbx+0xf8]
   14000ac6e:	lea    rdx,[rsp+0x50]
   14000ac73:	xor    r8d,r8d
   14000ac76:	mov    rcx,rdi
   14000ac79:	call   QWORD PTR [rip+0x8621]        # 0x1400132a0
   14000ac7f:	test   rax,rax
   14000ac82:	je     0x14000acb6
   14000ac84:	and    QWORD PTR [rsp+0x38],0x0
   14000ac8a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ac8f:	lea    rcx,[rsp+0x58]
   14000ac94:	mov    QWORD PTR [rsp+0x30],rcx
   14000ac99:	lea    rcx,[rsp+0x60]
   14000ac9e:	mov    r9,rax
   14000aca1:	mov    QWORD PTR [rsp+0x28],rcx
   14000aca6:	xor    ecx,ecx
   14000aca8:	mov    r8,rdi
   14000acab:	mov    QWORD PTR [rsp+0x20],rbx
   14000acb0:	call   QWORD PTR [rip+0x85f2]        # 0x1400132a8
   14000acb6:	mov    rbx,QWORD PTR [rsp+0x68]
   14000acbb:	add    rsp,0x40
   14000acbf:	pop    rdi
   14000acc0:	ret    
   14000acc1:	int3   
   14000acc2:	int3   
   14000acc3:	int3   
   14000acc4:	rex push rbx
   14000acc6:	push   rsi
   14000acc7:	push   rdi
   14000acc8:	sub    rsp,0x40
   14000accc:	mov    rbx,rcx
   14000accf:	call   QWORD PTR [rip+0x85c3]        # 0x140013298
   14000acd5:	mov    rsi,QWORD PTR [rbx+0xf8]
   14000acdc:	xor    edi,edi
   14000acde:	lea    rdx,[rsp+0x60]
   14000ace3:	xor    r8d,r8d
   14000ace6:	mov    rcx,rsi
   14000ace9:	call   QWORD PTR [rip+0x85b1]        # 0x1400132a0
   14000acef:	test   rax,rax
   14000acf2:	je     0x14000ad2d
   14000acf4:	and    QWORD PTR [rsp+0x38],0x0
   14000acfa:	mov    rdx,QWORD PTR [rsp+0x60]
   14000acff:	lea    rcx,[rsp+0x68]
   14000ad04:	mov    QWORD PTR [rsp+0x30],rcx
   14000ad09:	lea    rcx,[rsp+0x70]
   14000ad0e:	mov    r9,rax
   14000ad11:	mov    QWORD PTR [rsp+0x28],rcx
   14000ad16:	xor    ecx,ecx
   14000ad18:	mov    r8,rsi
   14000ad1b:	mov    QWORD PTR [rsp+0x20],rbx
   14000ad20:	call   QWORD PTR [rip+0x8582]        # 0x1400132a8
   14000ad26:	inc    edi
   14000ad28:	cmp    edi,0x2
   14000ad2b:	jl     0x14000acde
   14000ad2d:	add    rsp,0x40
   14000ad31:	pop    rdi
   14000ad32:	pop    rsi
   14000ad33:	pop    rbx
   14000ad34:	ret    
   14000ad35:	int3   
   14000ad36:	int3   
   14000ad37:	int3   
   14000ad38:	rex.W jmp QWORD PTR [rip+0x8581]        # 0x1400132c0
   14000ad3f:	int3   
   14000ad40:	rex.W jmp QWORD PTR [rip+0x8591]        # 0x1400132d8
   14000ad47:	int3   
   14000ad48:	rex.W jmp QWORD PTR [rip+0x8579]        # 0x1400132c8
   14000ad4f:	int3   
   14000ad50:	rex.W jmp QWORD PTR [rip+0x8579]        # 0x1400132d0
   14000ad57:	int3   
   14000ad58:	rex push rbx
   14000ad5a:	sub    rsp,0x20
   14000ad5e:	mov    eax,DWORD PTR [rip+0x104dc]        # 0x14001b240
   14000ad64:	xor    ebx,ebx
   14000ad66:	test   eax,eax
   14000ad68:	jns    0x14000adab
   14000ad6a:	lea    rcx,[rip+0x9557]        # 0x1400142c8
   14000ad71:	mov    DWORD PTR [rsp+0x30],ebx
   14000ad75:	call   QWORD PTR [rip+0x8575]        # 0x1400132f0
   14000ad7b:	lea    rdx,[rip+0x952e]        # 0x1400142b0
   14000ad82:	mov    rcx,rax
   14000ad85:	call   QWORD PTR [rip+0x845d]        # 0x1400131e8
   14000ad8b:	test   rax,rax
   14000ad8e:	je     0x14000ada1
   14000ad90:	lea    rcx,[rsp+0x30]
   14000ad95:	xor    edx,edx
   14000ad97:	call   rax
   14000ad99:	cmp    eax,0x7a
   14000ad9c:	lea    eax,[rbx+0x1]
   14000ad9f:	je     0x14000ada3
   14000ada1:	mov    eax,ebx
   14000ada3:	mov    DWORD PTR [rip+0x10497],eax        # 0x14001b240
   14000ada9:	test   eax,eax
   14000adab:	setg   bl
   14000adae:	mov    eax,ebx
   14000adb0:	add    rsp,0x20
   14000adb4:	pop    rbx
   14000adb5:	ret    
   14000adb6:	int3   
   14000adb7:	int3   
   14000adb8:	rex.W jmp QWORD PTR [rip+0x84f9]        # 0x1400132b8
   14000adbf:	int3   
   14000adc0:	rex push rbx
   14000adc2:	sub    rsp,0x20
   14000adc6:	mov    ebx,ecx
   14000adc8:	call   QWORD PTR [rip+0x8512]        # 0x1400132e0
   14000adce:	mov    edx,ebx
   14000add0:	mov    rcx,rax
   14000add3:	add    rsp,0x20
   14000add7:	pop    rbx
   14000add8:	rex.W jmp QWORD PTR [rip+0x8509]        # 0x1400132e8
   14000addf:	int3   
   14000ade0:	rex push rbx
   14000ade2:	sub    rsp,0x20
   14000ade6:	mov    rbx,rcx
   14000ade9:	xor    ecx,ecx
   14000adeb:	call   QWORD PTR [rip+0x84c7]        # 0x1400132b8
   14000adf1:	mov    rcx,rbx
   14000adf4:	add    rsp,0x20
   14000adf8:	pop    rbx
   14000adf9:	rex.W jmp QWORD PTR [rip+0x84b0]        # 0x1400132b0
   14000ae00:	sub    rsp,0x28
   14000ae04:	mov    rcx,QWORD PTR [rip+0x12865]        # 0x14001d670
   14000ae0b:	call   QWORD PTR [rip+0x839f]        # 0x1400131b0
   14000ae11:	test   rax,rax
   14000ae14:	je     0x14000ae1a
   14000ae16:	call   rax
   14000ae18:	jmp    0x14000ae1a
   14000ae1a:	call   0x14000ae20
   14000ae1f:	nop
   14000ae20:	sub    rsp,0x28
   14000ae24:	call   0x14000719c
   14000ae29:	mov    rcx,QWORD PTR [rax+0xd0]
   14000ae30:	test   rcx,rcx
   14000ae33:	je     0x14000ae39
   14000ae35:	call   rcx
   14000ae37:	jmp    0x14000ae39
   14000ae39:	call   0x140009ae8
   14000ae3e:	nop
   14000ae3f:	int3   
   14000ae40:	sub    rsp,0x28
   14000ae44:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x14000ae20
   14000ae4b:	call   QWORD PTR [rip+0x8357]        # 0x1400131a8
   14000ae51:	mov    QWORD PTR [rip+0x12818],rax        # 0x14001d670
   14000ae58:	add    rsp,0x28
   14000ae5c:	ret    
   14000ae5d:	int3   
   14000ae5e:	int3   
   14000ae5f:	int3   
   14000ae60:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae65:	push   rdi
   14000ae66:	sub    rsp,0x20
   14000ae6a:	movsxd rbx,ecx
   14000ae6d:	lea    rdi,[rip+0x103dc]        # 0x14001b250
   14000ae74:	add    rbx,rbx
   14000ae77:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000ae7c:	jne    0x14000ae8f
   14000ae7e:	call   0x14000af2c
   14000ae83:	test   eax,eax
   14000ae85:	jne    0x14000ae8f
   14000ae87:	lea    ecx,[rax+0x11]
   14000ae8a:	call   0x140007400
   14000ae8f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000ae93:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae98:	add    rsp,0x20
   14000ae9c:	pop    rdi
   14000ae9d:	rex.W jmp QWORD PTR [rip+0x8454]        # 0x1400132f8
   14000aea4:	mov    QWORD PTR [rsp+0x8],rbx
   14000aea9:	mov    QWORD PTR [rsp+0x10],rbp
   14000aeae:	mov    QWORD PTR [rsp+0x18],rsi
   14000aeb3:	push   rdi
   14000aeb4:	sub    rsp,0x20
   14000aeb8:	mov    edi,0x24
   14000aebd:	lea    rbx,[rip+0x1038c]        # 0x14001b250
   14000aec4:	mov    ebp,edi
   14000aec6:	mov    rsi,QWORD PTR [rbx]
   14000aec9:	test   rsi,rsi
   14000aecc:	je     0x14000aee9
   14000aece:	cmp    DWORD PTR [rbx+0x8],0x1
   14000aed2:	je     0x14000aee9
   14000aed4:	mov    rcx,rsi
   14000aed7:	call   QWORD PTR [rip+0x8343]        # 0x140013220
   14000aedd:	mov    rcx,rsi
   14000aee0:	call   0x140006aa0
   14000aee5:	and    QWORD PTR [rbx],0x0
   14000aee9:	add    rbx,0x10
   14000aeed:	dec    rbp
   14000aef0:	jne    0x14000aec6
   14000aef2:	lea    rbx,[rip+0x1035f]        # 0x14001b258
   14000aef9:	mov    rcx,QWORD PTR [rbx-0x8]
   14000aefd:	test   rcx,rcx
   14000af00:	je     0x14000af0d
   14000af02:	cmp    DWORD PTR [rbx],0x1
   14000af05:	jne    0x14000af0d
   14000af07:	call   QWORD PTR [rip+0x8313]        # 0x140013220
   14000af0d:	add    rbx,0x10
   14000af11:	dec    rdi
   14000af14:	jne    0x14000aef9
   14000af16:	mov    rbx,QWORD PTR [rsp+0x30]
   14000af1b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000af20:	mov    rsi,QWORD PTR [rsp+0x40]
   14000af25:	add    rsp,0x20
   14000af29:	pop    rdi
   14000af2a:	ret    
   14000af2b:	int3   
   14000af2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000af31:	mov    QWORD PTR [rsp+0x10],rdi
   14000af36:	push   r14
   14000af38:	sub    rsp,0x20
   14000af3c:	movsxd rbx,ecx
   14000af3f:	cmp    QWORD PTR [rip+0x125d1],0x0        # 0x14001d518
   14000af47:	jne    0x14000af62
   14000af49:	call   0x140007778
   14000af4e:	mov    ecx,0x1e
   14000af53:	call   0x1400077ec
   14000af58:	mov    ecx,0xff
   14000af5d:	call   0x1400073e8
   14000af62:	add    rbx,rbx
   14000af65:	lea    r14,[rip+0x102e4]        # 0x14001b250
   14000af6c:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000af71:	je     0x14000af7a
   14000af73:	mov    eax,0x1
   14000af78:	jmp    0x14000afd6
   14000af7a:	mov    ecx,0x28
   14000af7f:	call   0x140008abc
   14000af84:	mov    rdi,rax
   14000af87:	test   rax,rax
   14000af8a:	jne    0x14000af9b
   14000af8c:	call   0x140008888
   14000af91:	mov    DWORD PTR [rax],0xc
   14000af97:	xor    eax,eax
   14000af99:	jmp    0x14000afd6
   14000af9b:	mov    ecx,0xa
   14000afa0:	call   0x14000ae60
   14000afa5:	nop
   14000afa6:	mov    rcx,rdi
   14000afa9:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000afae:	jne    0x14000afc1
   14000afb0:	mov    edx,0xfa0
   14000afb5:	call   QWORD PTR [rip+0x825d]        # 0x140013218
   14000afbb:	mov    QWORD PTR [r14+rbx*8],rdi
   14000afbf:	jmp    0x14000afc7
   14000afc1:	call   0x140006aa0
   14000afc6:	nop
   14000afc7:	mov    rcx,QWORD PTR [rip+0x10322]        # 0x14001b2f0
   14000afce:	call   QWORD PTR [rip+0x832c]        # 0x140013300
   14000afd4:	jmp    0x14000af73
   14000afd6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000afdb:	mov    rdi,QWORD PTR [rsp+0x38]
   14000afe0:	add    rsp,0x20
   14000afe4:	pop    r14
   14000afe6:	ret    
   14000afe7:	int3   
   14000afe8:	mov    QWORD PTR [rsp+0x8],rbx
   14000afed:	mov    QWORD PTR [rsp+0x10],rsi
   14000aff2:	push   rdi
   14000aff3:	sub    rsp,0x20
   14000aff7:	xor    esi,esi
   14000aff9:	lea    rbx,[rip+0x10250]        # 0x14001b250
   14000b000:	lea    edi,[rsi+0x24]
   14000b003:	cmp    DWORD PTR [rbx+0x8],0x1
   14000b007:	jne    0x14000b02b
   14000b009:	movsxd rax,esi
   14000b00c:	lea    rdx,[rip+0x1266d]        # 0x14001d680
   14000b013:	inc    esi
   14000b015:	lea    rcx,[rax+rax*4]
   14000b019:	lea    rcx,[rdx+rcx*8]
   14000b01d:	mov    edx,0xfa0
   14000b022:	mov    QWORD PTR [rbx],rcx
   14000b025:	call   QWORD PTR [rip+0x81ed]        # 0x140013218
   14000b02b:	add    rbx,0x10
   14000b02f:	dec    rdi
   14000b032:	jne    0x14000b003
   14000b034:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b039:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b03e:	lea    eax,[rdi+0x1]
   14000b041:	add    rsp,0x20
   14000b045:	pop    rdi
   14000b046:	ret    
   14000b047:	int3   
   14000b048:	movsxd rcx,ecx
   14000b04b:	lea    rax,[rip+0x101fe]        # 0x14001b250
   14000b052:	add    rcx,rcx
   14000b055:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000b059:	rex.W jmp QWORD PTR [rip+0x82a0]        # 0x140013300
   14000b060:	lock inc DWORD PTR [rcx]
   14000b063:	mov    rax,QWORD PTR [rcx+0xd8]
   14000b06a:	test   rax,rax
   14000b06d:	je     0x14000b072
   14000b06f:	lock inc DWORD PTR [rax]
   14000b072:	mov    rax,QWORD PTR [rcx+0xe8]
   14000b079:	test   rax,rax
   14000b07c:	je     0x14000b081
   14000b07e:	lock inc DWORD PTR [rax]
   14000b081:	mov    rax,QWORD PTR [rcx+0xe0]
   14000b088:	test   rax,rax
   14000b08b:	je     0x14000b090
   14000b08d:	lock inc DWORD PTR [rax]
   14000b090:	mov    rax,QWORD PTR [rcx+0xf8]
   14000b097:	test   rax,rax
   14000b09a:	je     0x14000b09f
   14000b09c:	lock inc DWORD PTR [rax]
   14000b09f:	lea    rax,[rcx+0x28]
   14000b0a3:	mov    r8d,0x6
   14000b0a9:	lea    rdx,[rip+0x103e0]        # 0x14001b490
   14000b0b0:	cmp    QWORD PTR [rax-0x10],rdx
   14000b0b4:	je     0x14000b0c1
   14000b0b6:	mov    rdx,QWORD PTR [rax]
   14000b0b9:	test   rdx,rdx
   14000b0bc:	je     0x14000b0c1
   14000b0be:	lock inc DWORD PTR [rdx]
   14000b0c1:	cmp    QWORD PTR [rax-0x18],0x0
   14000b0c6:	je     0x14000b0d4
   14000b0c8:	mov    rdx,QWORD PTR [rax-0x8]
   14000b0cc:	test   rdx,rdx
   14000b0cf:	je     0x14000b0d4
   14000b0d1:	lock inc DWORD PTR [rdx]
   14000b0d4:	add    rax,0x20
   14000b0d8:	dec    r8
   14000b0db:	jne    0x14000b0a9
   14000b0dd:	mov    rax,QWORD PTR [rcx+0x120]
   14000b0e4:	lock inc DWORD PTR [rax+0x15c]
   14000b0eb:	ret    
   14000b0ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0f1:	mov    QWORD PTR [rsp+0x10],rbp
   14000b0f6:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0fb:	push   rdi
   14000b0fc:	sub    rsp,0x20
   14000b100:	mov    rax,QWORD PTR [rcx+0xf0]
   14000b107:	mov    rbx,rcx
   14000b10a:	test   rax,rax
   14000b10d:	je     0x14000b188
   14000b10f:	lea    rcx,[rip+0x1112a]        # 0x14001c240
   14000b116:	cmp    rax,rcx
   14000b119:	je     0x14000b188
   14000b11b:	mov    rax,QWORD PTR [rbx+0xd8]
   14000b122:	test   rax,rax
   14000b125:	je     0x14000b188
   14000b127:	cmp    DWORD PTR [rax],0x0
   14000b12a:	jne    0x14000b188
   14000b12c:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000b133:	test   rcx,rcx
   14000b136:	je     0x14000b14e
   14000b138:	cmp    DWORD PTR [rcx],0x0
   14000b13b:	jne    0x14000b14e
   14000b13d:	call   0x140006aa0
   14000b142:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000b149:	call   0x14000da54
   14000b14e:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000b155:	test   rcx,rcx
   14000b158:	je     0x14000b170
   14000b15a:	cmp    DWORD PTR [rcx],0x0
   14000b15d:	jne    0x14000b170
   14000b15f:	call   0x140006aa0
   14000b164:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000b16b:	call   0x14000db60
   14000b170:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000b177:	call   0x140006aa0
   14000b17c:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000b183:	call   0x140006aa0
   14000b188:	mov    rax,QWORD PTR [rbx+0xf8]
   14000b18f:	test   rax,rax
   14000b192:	je     0x14000b1db
   14000b194:	cmp    DWORD PTR [rax],0x0
   14000b197:	jne    0x14000b1db
   14000b199:	mov    rcx,QWORD PTR [rbx+0x100]
   14000b1a0:	sub    rcx,0xfe
   14000b1a7:	call   0x140006aa0
   14000b1ac:	mov    rcx,QWORD PTR [rbx+0x110]
   14000b1b3:	mov    edi,0x80
   14000b1b8:	sub    rcx,rdi
   14000b1bb:	call   0x140006aa0
   14000b1c0:	mov    rcx,QWORD PTR [rbx+0x118]
   14000b1c7:	sub    rcx,rdi
   14000b1ca:	call   0x140006aa0
   14000b1cf:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000b1d6:	call   0x140006aa0
   14000b1db:	mov    rcx,QWORD PTR [rbx+0x120]
   14000b1e2:	lea    rax,[rip+0x102b7]        # 0x14001b4a0
   14000b1e9:	cmp    rcx,rax
   14000b1ec:	je     0x14000b208
   14000b1ee:	cmp    DWORD PTR [rcx+0x15c],0x0
   14000b1f5:	jne    0x14000b208
   14000b1f7:	call   0x14000dbcc
   14000b1fc:	mov    rcx,QWORD PTR [rbx+0x120]
   14000b203:	call   0x140006aa0
   14000b208:	lea    rsi,[rbx+0x128]
   14000b20f:	lea    rdi,[rbx+0x28]
   14000b213:	mov    ebp,0x6
   14000b218:	lea    rax,[rip+0x10271]        # 0x14001b490
   14000b21f:	cmp    QWORD PTR [rdi-0x10],rax
   14000b223:	je     0x14000b23f
   14000b225:	mov    rcx,QWORD PTR [rdi]
   14000b228:	test   rcx,rcx
   14000b22b:	je     0x14000b23f
   14000b22d:	cmp    DWORD PTR [rcx],0x0
   14000b230:	jne    0x14000b23f
   14000b232:	call   0x140006aa0
   14000b237:	mov    rcx,QWORD PTR [rsi]
   14000b23a:	call   0x140006aa0
   14000b23f:	cmp    QWORD PTR [rdi-0x18],0x0
   14000b244:	je     0x14000b259
   14000b246:	mov    rcx,QWORD PTR [rdi-0x8]
   14000b24a:	test   rcx,rcx
   14000b24d:	je     0x14000b259
   14000b24f:	cmp    DWORD PTR [rcx],0x0
   14000b252:	jne    0x14000b259
   14000b254:	call   0x140006aa0
   14000b259:	add    rsi,0x8
   14000b25d:	add    rdi,0x20
   14000b261:	dec    rbp
   14000b264:	jne    0x14000b218
   14000b266:	mov    rcx,rbx
   14000b269:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b26e:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b273:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b278:	add    rsp,0x20
   14000b27c:	pop    rdi
   14000b27d:	jmp    0x140006aa0
   14000b282:	int3   
   14000b283:	int3   
   14000b284:	test   rcx,rcx
   14000b287:	je     0x14000b324
   14000b28d:	or     r9d,0xffffffff
   14000b291:	lock add DWORD PTR [rcx],r9d
   14000b295:	mov    rax,QWORD PTR [rcx+0xd8]
   14000b29c:	test   rax,rax
   14000b29f:	je     0x14000b2a5
   14000b2a1:	lock add DWORD PTR [rax],r9d
   14000b2a5:	mov    rax,QWORD PTR [rcx+0xe8]
   14000b2ac:	test   rax,rax
   14000b2af:	je     0x14000b2b5
   14000b2b1:	lock add DWORD PTR [rax],r9d
   14000b2b5:	mov    rax,QWORD PTR [rcx+0xe0]
   14000b2bc:	test   rax,rax
   14000b2bf:	je     0x14000b2c5
   14000b2c1:	lock add DWORD PTR [rax],r9d
   14000b2c5:	mov    rax,QWORD PTR [rcx+0xf8]
   14000b2cc:	test   rax,rax
   14000b2cf:	je     0x14000b2d5
   14000b2d1:	lock add DWORD PTR [rax],r9d
   14000b2d5:	lea    rax,[rcx+0x28]
   14000b2d9:	mov    r8d,0x6
   14000b2df:	lea    rdx,[rip+0x101aa]        # 0x14001b490
   14000b2e6:	cmp    QWORD PTR [rax-0x10],rdx
   14000b2ea:	je     0x14000b2f8
   14000b2ec:	mov    rdx,QWORD PTR [rax]
   14000b2ef:	test   rdx,rdx
   14000b2f2:	je     0x14000b2f8
   14000b2f4:	lock add DWORD PTR [rdx],r9d
   14000b2f8:	cmp    QWORD PTR [rax-0x18],0x0
   14000b2fd:	je     0x14000b30c
   14000b2ff:	mov    rdx,QWORD PTR [rax-0x8]
   14000b303:	test   rdx,rdx
   14000b306:	je     0x14000b30c
   14000b308:	lock add DWORD PTR [rdx],r9d
   14000b30c:	add    rax,0x20
   14000b310:	dec    r8
   14000b313:	jne    0x14000b2df
   14000b315:	mov    rax,QWORD PTR [rcx+0x120]
   14000b31c:	lock add DWORD PTR [rax+0x15c],r9d
   14000b324:	mov    rax,rcx
   14000b327:	ret    
   14000b328:	rex push rbx
   14000b32a:	sub    rsp,0x20
   14000b32e:	call   0x14000719c
   14000b333:	mov    rbx,rax
   14000b336:	mov    ecx,DWORD PTR [rip+0x10ee4]        # 0x14001c220
   14000b33c:	test   DWORD PTR [rax+0xc8],ecx
   14000b342:	je     0x14000b35c
   14000b344:	cmp    QWORD PTR [rax+0xc0],0x0
   14000b34c:	je     0x14000b35c
   14000b34e:	call   0x14000719c
   14000b353:	mov    rbx,QWORD PTR [rax+0xc0]
   14000b35a:	jmp    0x14000b387
   14000b35c:	mov    ecx,0xc
   14000b361:	call   0x14000ae60
   14000b366:	nop
   14000b367:	lea    rcx,[rbx+0xc0]
   14000b36e:	mov    rdx,QWORD PTR [rip+0x103eb]        # 0x14001b760
   14000b375:	call   0x14000b3a0
   14000b37a:	mov    rbx,rax
   14000b37d:	mov    ecx,0xc
   14000b382:	call   0x14000b048
   14000b387:	test   rbx,rbx
   14000b38a:	jne    0x14000b394
   14000b38c:	lea    ecx,[rbx+0x20]
   14000b38f:	call   0x140007400
   14000b394:	mov    rax,rbx
   14000b397:	add    rsp,0x20
   14000b39b:	pop    rbx
   14000b39c:	ret    
   14000b39d:	int3   
   14000b39e:	int3   
   14000b39f:	int3   
   14000b3a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b3a5:	push   rdi
   14000b3a6:	sub    rsp,0x20
   14000b3aa:	mov    rdi,rdx
   14000b3ad:	test   rdx,rdx
   14000b3b0:	je     0x14000b3f5
   14000b3b2:	test   rcx,rcx
   14000b3b5:	je     0x14000b3f5
   14000b3b7:	mov    rbx,QWORD PTR [rcx]
   14000b3ba:	cmp    rbx,rdx
   14000b3bd:	je     0x14000b3f0
   14000b3bf:	mov    QWORD PTR [rcx],rdx
   14000b3c2:	mov    rcx,rdx
   14000b3c5:	call   0x14000b060
   14000b3ca:	test   rbx,rbx
   14000b3cd:	je     0x14000b3f0
   14000b3cf:	mov    rcx,rbx
   14000b3d2:	call   0x14000b284
   14000b3d7:	cmp    DWORD PTR [rbx],0x0
   14000b3da:	jne    0x14000b3f0
   14000b3dc:	lea    rax,[rip+0x1038d]        # 0x14001b770
   14000b3e3:	cmp    rbx,rax
   14000b3e6:	je     0x14000b3f0
   14000b3e8:	mov    rcx,rbx
   14000b3eb:	call   0x14000b0ec
   14000b3f0:	mov    rax,rdi
   14000b3f3:	jmp    0x14000b3f7
   14000b3f5:	xor    eax,eax
   14000b3f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3fc:	add    rsp,0x20
   14000b400:	pop    rdi
   14000b401:	ret    
   14000b402:	int3   
   14000b403:	int3   
   14000b404:	sub    rsp,0x28
   14000b408:	cmp    DWORD PTR [rip+0x144f1],0x0        # 0x14001f900
   14000b40f:	jne    0x14000b425
   14000b411:	mov    ecx,0xfffffffd
   14000b416:	call   0x14000b7dc
   14000b41b:	mov    DWORD PTR [rip+0x144db],0x1        # 0x14001f900
   14000b425:	xor    eax,eax
   14000b427:	add    rsp,0x28
   14000b42b:	ret    
   14000b42c:	rex push rbx
   14000b42e:	sub    rsp,0x40
   14000b432:	mov    ebx,ecx
   14000b434:	lea    rcx,[rsp+0x20]
   14000b439:	xor    edx,edx
   14000b43b:	call   0x140008d54
   14000b440:	and    DWORD PTR [rip+0x12485],0x0        # 0x14001d8cc
   14000b447:	cmp    ebx,0xfffffffe
   14000b44a:	jne    0x14000b45e
   14000b44c:	mov    DWORD PTR [rip+0x12476],0x1        # 0x14001d8cc
   14000b456:	call   QWORD PTR [rip+0x7ebc]        # 0x140013318
   14000b45c:	jmp    0x14000b473
   14000b45e:	cmp    ebx,0xfffffffd
   14000b461:	jne    0x14000b477
   14000b463:	mov    DWORD PTR [rip+0x1245f],0x1        # 0x14001d8cc
   14000b46d:	call   QWORD PTR [rip+0x7e9d]        # 0x140013310
   14000b473:	mov    ebx,eax
   14000b475:	jmp    0x14000b48e
   14000b477:	cmp    ebx,0xfffffffc
   14000b47a:	jne    0x14000b48e
   14000b47c:	mov    rax,QWORD PTR [rsp+0x20]
   14000b481:	mov    DWORD PTR [rip+0x12441],0x1        # 0x14001d8cc
   14000b48b:	mov    ebx,DWORD PTR [rax+0x4]
   14000b48e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000b493:	je     0x14000b4a1
   14000b495:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b49a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b4a1:	mov    eax,ebx
   14000b4a3:	add    rsp,0x40
   14000b4a7:	pop    rbx
   14000b4a8:	ret    
   14000b4a9:	int3   
   14000b4aa:	int3   
   14000b4ab:	int3   
   14000b4ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4b1:	mov    QWORD PTR [rsp+0x10],rbp
   14000b4b6:	mov    QWORD PTR [rsp+0x18],rsi
   14000b4bb:	push   rdi
   14000b4bc:	sub    rsp,0x20
   14000b4c0:	lea    rbx,[rcx+0x18]
   14000b4c4:	mov    rsi,rcx
   14000b4c7:	mov    ebp,0x101
   14000b4cc:	mov    rcx,rbx
   14000b4cf:	mov    r8d,ebp
   14000b4d2:	xor    edx,edx
   14000b4d4:	call   0x1400099c0
   14000b4d9:	xor    eax,eax
   14000b4db:	lea    rdi,[rsi+0xc]
   14000b4df:	mov    QWORD PTR [rsi+0x4],rax
   14000b4e3:	mov    QWORD PTR [rsi+0x220],rax
   14000b4ea:	mov    ecx,0x6
   14000b4ef:	movzx  eax,ax
   14000b4f2:	rep stos WORD PTR es:[rdi],ax
   14000b4f5:	lea    rdi,[rip+0x106e4]        # 0x14001bbe0
   14000b4fc:	sub    rdi,rsi
   14000b4ff:	mov    al,BYTE PTR [rdi+rbx*1]
   14000b502:	mov    BYTE PTR [rbx],al
   14000b504:	inc    rbx
   14000b507:	dec    rbp
   14000b50a:	jne    0x14000b4ff
   14000b50c:	lea    rcx,[rsi+0x119]
   14000b513:	mov    edx,0x100
   14000b518:	mov    al,BYTE PTR [rcx+rdi*1]
   14000b51b:	mov    BYTE PTR [rcx],al
   14000b51d:	inc    rcx
   14000b520:	dec    rdx
   14000b523:	jne    0x14000b518
   14000b525:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b52a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b52f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b534:	add    rsp,0x20
   14000b538:	pop    rdi
   14000b539:	ret    
   14000b53a:	int3   
   14000b53b:	int3   
   14000b53c:	mov    QWORD PTR [rsp+0x10],rbx
   14000b541:	mov    QWORD PTR [rsp+0x18],rdi
   14000b546:	push   rbp
   14000b547:	lea    rbp,[rsp-0x480]
   14000b54f:	sub    rsp,0x580
   14000b556:	mov    rax,QWORD PTR [rip+0xfb2b]        # 0x14001b088
   14000b55d:	xor    rax,rsp
   14000b560:	mov    QWORD PTR [rbp+0x470],rax
   14000b567:	mov    rdi,rcx
   14000b56a:	mov    ecx,DWORD PTR [rcx+0x4]
   14000b56d:	lea    rdx,[rsp+0x50]
   14000b572:	call   QWORD PTR [rip+0x7da8]        # 0x140013320
   14000b578:	mov    ebx,0x100
   14000b57d:	test   eax,eax
   14000b57f:	je     0x14000b6ba
   14000b585:	xor    eax,eax
   14000b587:	lea    rcx,[rsp+0x70]
   14000b58c:	mov    BYTE PTR [rcx],al
   14000b58e:	inc    eax
   14000b590:	inc    rcx
   14000b593:	cmp    eax,ebx
   14000b595:	jb     0x14000b58c
   14000b597:	mov    al,BYTE PTR [rsp+0x56]
   14000b59b:	mov    BYTE PTR [rsp+0x70],0x20
   14000b5a0:	lea    rdx,[rsp+0x56]
   14000b5a5:	jmp    0x14000b5c9
   14000b5a7:	movzx  r8d,BYTE PTR [rdx+0x1]
   14000b5ac:	movzx  ecx,al
   14000b5af:	jmp    0x14000b5be
   14000b5b1:	cmp    ecx,ebx
   14000b5b3:	jae    0x14000b5c3
   14000b5b5:	mov    eax,ecx
   14000b5b7:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14000b5bc:	inc    ecx
   14000b5be:	cmp    ecx,r8d
   14000b5c1:	jbe    0x14000b5b1
   14000b5c3:	add    rdx,0x2
   14000b5c7:	mov    al,BYTE PTR [rdx]
   14000b5c9:	test   al,al
   14000b5cb:	jne    0x14000b5a7
   14000b5cd:	mov    eax,DWORD PTR [rdi+0x4]
   14000b5d0:	and    DWORD PTR [rsp+0x30],0x0
   14000b5d5:	lea    r8,[rsp+0x70]
   14000b5da:	mov    DWORD PTR [rsp+0x28],eax
   14000b5de:	lea    rax,[rbp+0x270]
   14000b5e5:	mov    r9d,ebx
   14000b5e8:	mov    edx,0x1
   14000b5ed:	xor    ecx,ecx
   14000b5ef:	mov    QWORD PTR [rsp+0x20],rax
   14000b5f4:	call   0x14000e498
   14000b5f9:	and    DWORD PTR [rsp+0x40],0x0
   14000b5fe:	mov    eax,DWORD PTR [rdi+0x4]
   14000b601:	mov    rdx,QWORD PTR [rdi+0x220]
   14000b608:	mov    DWORD PTR [rsp+0x38],eax
   14000b60c:	lea    rax,[rbp+0x70]
   14000b610:	mov    DWORD PTR [rsp+0x30],ebx
   14000b614:	mov    QWORD PTR [rsp+0x28],rax
   14000b619:	lea    r9,[rsp+0x70]
   14000b61e:	mov    r8d,ebx
   14000b621:	xor    ecx,ecx
   14000b623:	mov    DWORD PTR [rsp+0x20],ebx
   14000b627:	call   0x14000e298
   14000b62c:	and    DWORD PTR [rsp+0x40],0x0
   14000b631:	mov    eax,DWORD PTR [rdi+0x4]
   14000b634:	mov    rdx,QWORD PTR [rdi+0x220]
   14000b63b:	mov    DWORD PTR [rsp+0x38],eax
   14000b63f:	lea    rax,[rbp+0x170]
   14000b646:	mov    DWORD PTR [rsp+0x30],ebx
   14000b64a:	mov    QWORD PTR [rsp+0x28],rax
   14000b64f:	lea    r9,[rsp+0x70]
   14000b654:	mov    r8d,0x200
   14000b65a:	xor    ecx,ecx
   14000b65c:	mov    DWORD PTR [rsp+0x20],ebx
   14000b660:	call   0x14000e298
   14000b665:	lea    r8,[rbp+0x70]
   14000b669:	lea    r9,[rbp+0x170]
   14000b670:	sub    r8,rdi
   14000b673:	lea    rdx,[rbp+0x270]
   14000b67a:	lea    rcx,[rdi+0x19]
   14000b67e:	sub    r9,rdi
   14000b681:	test   BYTE PTR [rdx],0x1
   14000b684:	je     0x14000b690
   14000b686:	or     BYTE PTR [rcx],0x10
   14000b689:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14000b68e:	jmp    0x14000b69d
   14000b690:	test   BYTE PTR [rdx],0x2
   14000b693:	je     0x14000b6a5
   14000b695:	or     BYTE PTR [rcx],0x20
   14000b698:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14000b69d:	mov    BYTE PTR [rcx+0x100],al
   14000b6a3:	jmp    0x14000b6ac
   14000b6a5:	mov    BYTE PTR [rcx+0x100],0x0
   14000b6ac:	inc    rcx
   14000b6af:	add    rdx,0x2
   14000b6b3:	dec    rbx
   14000b6b6:	jne    0x14000b681
   14000b6b8:	jmp    0x14000b6f9
   14000b6ba:	xor    edx,edx
   14000b6bc:	lea    rcx,[rdi+0x19]
   14000b6c0:	lea    r8d,[rdx-0x61]
   14000b6c4:	lea    eax,[r8+0x20]
   14000b6c8:	cmp    eax,0x19
   14000b6cb:	ja     0x14000b6d5
   14000b6cd:	or     BYTE PTR [rcx],0x10
   14000b6d0:	lea    eax,[rdx+0x20]
   14000b6d3:	jmp    0x14000b6e1
   14000b6d5:	cmp    r8d,0x19
   14000b6d9:	ja     0x14000b6e9
   14000b6db:	or     BYTE PTR [rcx],0x20
   14000b6de:	lea    eax,[rdx-0x20]
   14000b6e1:	mov    BYTE PTR [rcx+0x100],al
   14000b6e7:	jmp    0x14000b6f0
   14000b6e9:	mov    BYTE PTR [rcx+0x100],0x0
   14000b6f0:	inc    edx
   14000b6f2:	inc    rcx
   14000b6f5:	cmp    edx,ebx
   14000b6f7:	jb     0x14000b6c0
   14000b6f9:	mov    rcx,QWORD PTR [rbp+0x470]
   14000b700:	xor    rcx,rsp
   14000b703:	call   0x140005fe0
   14000b708:	lea    r11,[rsp+0x580]
   14000b710:	mov    rbx,QWORD PTR [r11+0x18]
   14000b714:	mov    rdi,QWORD PTR [r11+0x20]
   14000b718:	mov    rsp,r11
   14000b71b:	pop    rbp
   14000b71c:	ret    
   14000b71d:	int3   
   14000b71e:	int3   
   14000b71f:	int3   
   14000b720:	mov    QWORD PTR [rsp+0x10],rbx
   14000b725:	push   rdi
   14000b726:	sub    rsp,0x20
   14000b72a:	call   0x14000719c
   14000b72f:	mov    rdi,rax
   14000b732:	mov    ecx,DWORD PTR [rip+0x10ae8]        # 0x14001c220
   14000b738:	test   DWORD PTR [rax+0xc8],ecx
   14000b73e:	je     0x14000b753
   14000b740:	cmp    QWORD PTR [rax+0xc0],0x0
   14000b748:	je     0x14000b753
   14000b74a:	mov    rbx,QWORD PTR [rax+0xb8]
   14000b751:	jmp    0x14000b7bf
   14000b753:	mov    ecx,0xd
   14000b758:	call   0x14000ae60
   14000b75d:	nop
   14000b75e:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000b765:	mov    QWORD PTR [rsp+0x30],rbx
   14000b76a:	cmp    rbx,QWORD PTR [rip+0x10367]        # 0x14001bad8
   14000b771:	je     0x14000b7b5
   14000b773:	test   rbx,rbx
   14000b776:	je     0x14000b793
   14000b778:	lock dec DWORD PTR [rbx]
   14000b77b:	jne    0x14000b793
   14000b77d:	lea    rax,[rip+0x1045c]        # 0x14001bbe0
   14000b784:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b789:	cmp    rcx,rax
   14000b78c:	je     0x14000b793
   14000b78e:	call   0x140006aa0
   14000b793:	mov    rax,QWORD PTR [rip+0x1033e]        # 0x14001bad8
   14000b79a:	mov    QWORD PTR [rdi+0xb8],rax
   14000b7a1:	mov    rax,QWORD PTR [rip+0x10330]        # 0x14001bad8
   14000b7a8:	mov    QWORD PTR [rsp+0x30],rax
   14000b7ad:	lock inc DWORD PTR [rax]
   14000b7b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b7b5:	mov    ecx,0xd
   14000b7ba:	call   0x14000b048
   14000b7bf:	test   rbx,rbx
   14000b7c2:	jne    0x14000b7cc
   14000b7c4:	lea    ecx,[rbx+0x20]
   14000b7c7:	call   0x140007400
   14000b7cc:	mov    rax,rbx
   14000b7cf:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b7d4:	add    rsp,0x20
   14000b7d8:	pop    rdi
   14000b7d9:	ret    
   14000b7da:	int3   
   14000b7db:	int3   
   14000b7dc:	mov    rax,rsp
   14000b7df:	mov    QWORD PTR [rax+0x8],rbx
   14000b7e3:	mov    QWORD PTR [rax+0x10],rsi
   14000b7e7:	mov    QWORD PTR [rax+0x18],rdi
   14000b7eb:	mov    QWORD PTR [rax+0x20],r14
   14000b7ef:	push   r15
   14000b7f1:	sub    rsp,0x30
   14000b7f5:	mov    edi,ecx
   14000b7f7:	or     r15d,0xffffffff
   14000b7fb:	call   0x14000719c
   14000b800:	mov    rsi,rax
   14000b803:	call   0x14000b720
   14000b808:	mov    rbx,QWORD PTR [rsi+0xb8]
   14000b80f:	mov    ecx,edi
   14000b811:	call   0x14000b42c
   14000b816:	mov    r14d,eax
   14000b819:	cmp    eax,DWORD PTR [rbx+0x4]
   14000b81c:	je     0x14000ba15
   14000b822:	mov    ecx,0x228
   14000b827:	call   0x140008abc
   14000b82c:	mov    rbx,rax
   14000b82f:	xor    edi,edi
   14000b831:	test   rax,rax
   14000b834:	je     0x14000ba1a
   14000b83a:	mov    rdx,QWORD PTR [rsi+0xb8]
   14000b841:	mov    rcx,rax
   14000b844:	mov    rax,rdx
   14000b847:	or     rax,rcx
   14000b84a:	and    eax,0xf
   14000b84d:	jne    0x14000b8b7
   14000b84f:	lea    eax,[rdi+0x4]
   14000b852:	lea    r8d,[rax+0x7c]
   14000b856:	movaps xmm0,XMMWORD PTR [rdx]
   14000b859:	movaps XMMWORD PTR [rcx],xmm0
   14000b85c:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14000b860:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14000b864:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   14000b868:	movaps XMMWORD PTR [rcx+0x20],xmm0
   14000b86c:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14000b870:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14000b874:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   14000b878:	movaps XMMWORD PTR [rcx+0x40],xmm0
   14000b87c:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14000b880:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14000b884:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   14000b888:	movaps XMMWORD PTR [rcx+0x60],xmm0
   14000b88c:	add    rcx,r8
   14000b88f:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   14000b893:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14000b897:	add    rdx,r8
   14000b89a:	dec    rax
   14000b89d:	jne    0x14000b856
   14000b89f:	movaps xmm0,XMMWORD PTR [rdx]
   14000b8a2:	movaps XMMWORD PTR [rcx],xmm0
   14000b8a5:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14000b8a9:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14000b8ad:	mov    rax,QWORD PTR [rdx+0x20]
   14000b8b1:	mov    QWORD PTR [rcx+0x20],rax
   14000b8b5:	jmp    0x14000b8c2
   14000b8b7:	mov    r8d,0x228
   14000b8bd:	call   0x140006070
   14000b8c2:	mov    DWORD PTR [rbx],edi
   14000b8c4:	mov    rdx,rbx
   14000b8c7:	mov    ecx,r14d
   14000b8ca:	call   0x14000ba38
   14000b8cf:	mov    r15d,eax
   14000b8d2:	test   eax,eax
   14000b8d4:	jne    0x14000b9ef
   14000b8da:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000b8e1:	lea    r14,[rip+0x102f8]        # 0x14001bbe0
   14000b8e8:	lock dec DWORD PTR [rcx]
   14000b8eb:	jne    0x14000b8fe
   14000b8ed:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000b8f4:	cmp    rcx,r14
   14000b8f7:	je     0x14000b8fe
   14000b8f9:	call   0x140006aa0
   14000b8fe:	mov    QWORD PTR [rsi+0xb8],rbx
   14000b905:	lock inc DWORD PTR [rbx]
   14000b908:	test   BYTE PTR [rsi+0xc8],0x2
   14000b90f:	jne    0x14000ba1a
   14000b915:	test   BYTE PTR [rip+0x10904],0x1        # 0x14001c220
   14000b91c:	jne    0x14000ba1a
   14000b922:	mov    esi,0xd
   14000b927:	mov    ecx,esi
   14000b929:	call   0x14000ae60
   14000b92e:	nop
   14000b92f:	mov    eax,DWORD PTR [rbx+0x4]
   14000b932:	mov    DWORD PTR [rip+0x11f80],eax        # 0x14001d8b8
   14000b938:	mov    eax,DWORD PTR [rbx+0x8]
   14000b93b:	mov    DWORD PTR [rip+0x11f7b],eax        # 0x14001d8bc
   14000b941:	mov    rax,QWORD PTR [rbx+0x220]
   14000b948:	mov    QWORD PTR [rip+0x11f61],rax        # 0x14001d8b0
   14000b94f:	mov    edx,edi
   14000b951:	lea    r8,[rip+0xffffffffffff46a8]        # 0x140000000
   14000b958:	mov    DWORD PTR [rsp+0x20],edx
   14000b95c:	cmp    edx,0x5
   14000b95f:	jge    0x14000b976
   14000b961:	movsxd rcx,edx
   14000b964:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   14000b969:	mov    WORD PTR [r8+rcx*2+0x1d8c0],ax
   14000b972:	inc    edx
   14000b974:	jmp    0x14000b958
   14000b976:	mov    edx,edi
   14000b978:	mov    DWORD PTR [rsp+0x20],edx
   14000b97c:	cmp    edx,0x101
   14000b982:	jge    0x14000b997
   14000b984:	movsxd rcx,edx
   14000b987:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14000b98b:	mov    BYTE PTR [rcx+r8*1+0x1b9d0],al
   14000b993:	inc    edx
   14000b995:	jmp    0x14000b978
   14000b997:	mov    DWORD PTR [rsp+0x20],edi
   14000b99b:	cmp    edi,0x100
   14000b9a1:	jge    0x14000b9b9
   14000b9a3:	movsxd rcx,edi
   14000b9a6:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14000b9ad:	mov    BYTE PTR [rcx+r8*1+0x1bae0],al
   14000b9b5:	inc    edi
   14000b9b7:	jmp    0x14000b997
   14000b9b9:	mov    rcx,QWORD PTR [rip+0x10118]        # 0x14001bad8
   14000b9c0:	or     eax,0xffffffff
   14000b9c3:	lock xadd DWORD PTR [rcx],eax
   14000b9c7:	dec    eax
   14000b9c9:	jne    0x14000b9dc
   14000b9cb:	mov    rcx,QWORD PTR [rip+0x10106]        # 0x14001bad8
   14000b9d2:	cmp    rcx,r14
   14000b9d5:	je     0x14000b9dc
   14000b9d7:	call   0x140006aa0
   14000b9dc:	mov    QWORD PTR [rip+0x100f5],rbx        # 0x14001bad8
   14000b9e3:	lock inc DWORD PTR [rbx]
   14000b9e6:	mov    ecx,esi
   14000b9e8:	call   0x14000b048
   14000b9ed:	jmp    0x14000ba1a
   14000b9ef:	cmp    eax,0xffffffff
   14000b9f2:	jne    0x14000ba1a
   14000b9f4:	lea    r14,[rip+0x101e5]        # 0x14001bbe0
   14000b9fb:	cmp    rbx,r14
   14000b9fe:	je     0x14000ba08
   14000ba00:	mov    rcx,rbx
   14000ba03:	call   0x140006aa0
   14000ba08:	call   0x140008888
   14000ba0d:	mov    DWORD PTR [rax],0x16
   14000ba13:	jmp    0x14000ba1a
   14000ba15:	xor    edi,edi
   14000ba17:	mov    r15d,edi
   14000ba1a:	mov    eax,r15d
   14000ba1d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ba22:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ba27:	mov    rdi,QWORD PTR [rsp+0x50]
   14000ba2c:	mov    r14,QWORD PTR [rsp+0x58]
   14000ba31:	add    rsp,0x30
   14000ba35:	pop    r15
   14000ba37:	ret    
   14000ba38:	mov    QWORD PTR [rsp+0x18],rbx
   14000ba3d:	mov    QWORD PTR [rsp+0x20],rbp
   14000ba42:	push   rsi
   14000ba43:	push   rdi
   14000ba44:	push   r12
   14000ba46:	push   r14
   14000ba48:	push   r15
   14000ba4a:	sub    rsp,0x40
   14000ba4e:	mov    rax,QWORD PTR [rip+0xf633]        # 0x14001b088
   14000ba55:	xor    rax,rsp
   14000ba58:	mov    QWORD PTR [rsp+0x38],rax
   14000ba5d:	mov    rbx,rdx
   14000ba60:	call   0x14000b42c
   14000ba65:	xor    esi,esi
   14000ba67:	mov    edi,eax
   14000ba69:	test   eax,eax
   14000ba6b:	jne    0x14000ba7a
   14000ba6d:	mov    rcx,rbx
   14000ba70:	call   0x14000b4ac
   14000ba75:	jmp    0x14000bcbe
   14000ba7a:	lea    r12,[rip+0xfe5f]        # 0x14001b8e0
   14000ba81:	mov    ebp,esi
   14000ba83:	mov    r15d,0x1
   14000ba89:	mov    rax,r12
   14000ba8c:	cmp    DWORD PTR [rax],edi
   14000ba8e:	je     0x14000bbcc
   14000ba94:	add    ebp,r15d
   14000ba97:	add    rax,0x30
   14000ba9b:	cmp    ebp,0x5
   14000ba9e:	jb     0x14000ba8c
   14000baa0:	lea    eax,[rdi-0xfde8]
   14000baa6:	cmp    eax,r15d
   14000baa9:	jbe    0x14000bbc4
   14000baaf:	movzx  ecx,di
   14000bab2:	call   QWORD PTR [rip+0x7850]        # 0x140013308
   14000bab8:	test   eax,eax
   14000baba:	je     0x14000bbc4
   14000bac0:	lea    rdx,[rsp+0x20]
   14000bac5:	mov    ecx,edi
   14000bac7:	call   QWORD PTR [rip+0x7853]        # 0x140013320
   14000bacd:	test   eax,eax
   14000bacf:	je     0x14000bbb8
   14000bad5:	lea    rcx,[rbx+0x18]
   14000bad9:	xor    edx,edx
   14000badb:	mov    r8d,0x101
   14000bae1:	call   0x1400099c0
   14000bae6:	mov    DWORD PTR [rbx+0x4],edi
   14000bae9:	mov    QWORD PTR [rbx+0x220],rsi
   14000baf0:	cmp    DWORD PTR [rsp+0x20],r15d
   14000baf5:	jbe    0x14000bba1
   14000bafb:	lea    rdx,[rsp+0x26]
   14000bb00:	cmp    BYTE PTR [rsp+0x26],sil
   14000bb05:	je     0x14000bb40
   14000bb07:	cmp    BYTE PTR [rdx+0x1],sil
   14000bb0b:	je     0x14000bb40
   14000bb0d:	movzx  r8d,BYTE PTR [rdx]
   14000bb11:	movzx  edi,BYTE PTR [rdx+0x1]
   14000bb15:	cmp    r8d,edi
   14000bb18:	ja     0x14000bb37
   14000bb1a:	lea    ecx,[r8+0x1]
   14000bb1e:	lea    rax,[rbx+0x18]
   14000bb22:	add    rax,rcx
   14000bb25:	sub    edi,r8d
   14000bb28:	lea    ecx,[r15+rdi*1]
   14000bb2c:	or     BYTE PTR [rax],0x4
   14000bb2f:	add    rax,r15
   14000bb32:	sub    rcx,r15
   14000bb35:	jne    0x14000bb2c
   14000bb37:	add    rdx,0x2
   14000bb3b:	cmp    BYTE PTR [rdx],sil
   14000bb3e:	jne    0x14000bb07
   14000bb40:	lea    rax,[rbx+0x1a]
   14000bb44:	mov    ecx,0xfe
   14000bb49:	or     BYTE PTR [rax],0x8
   14000bb4c:	add    rax,r15
   14000bb4f:	sub    rcx,r15
   14000bb52:	jne    0x14000bb49
   14000bb54:	mov    ecx,DWORD PTR [rbx+0x4]
   14000bb57:	sub    ecx,0x3a4
   14000bb5d:	je     0x14000bb8d
   14000bb5f:	sub    ecx,0x4
   14000bb62:	je     0x14000bb84
   14000bb64:	sub    ecx,0xd
   14000bb67:	je     0x14000bb7b
   14000bb69:	dec    ecx
   14000bb6b:	je     0x14000bb72
   14000bb6d:	mov    rax,rsi
   14000bb70:	jmp    0x14000bb94
   14000bb72:	mov    rax,QWORD PTR [rip+0x8b3f]        # 0x1400146b8
   14000bb79:	jmp    0x14000bb94
   14000bb7b:	mov    rax,QWORD PTR [rip+0x8b2e]        # 0x1400146b0
   14000bb82:	jmp    0x14000bb94
   14000bb84:	mov    rax,QWORD PTR [rip+0x8b1d]        # 0x1400146a8
   14000bb8b:	jmp    0x14000bb94
   14000bb8d:	mov    rax,QWORD PTR [rip+0x8b0c]        # 0x1400146a0
   14000bb94:	mov    QWORD PTR [rbx+0x220],rax
   14000bb9b:	mov    DWORD PTR [rbx+0x8],r15d
   14000bb9f:	jmp    0x14000bba4
   14000bba1:	mov    DWORD PTR [rbx+0x8],esi
   14000bba4:	lea    rdi,[rbx+0xc]
   14000bba8:	movzx  eax,si
   14000bbab:	mov    ecx,0x6
   14000bbb0:	rep stos WORD PTR es:[rdi],ax
   14000bbb3:	jmp    0x14000bcb6
   14000bbb8:	cmp    DWORD PTR [rip+0x11d0e],esi        # 0x14001d8cc
   14000bbbe:	jne    0x14000ba6d
   14000bbc4:	or     eax,0xffffffff
   14000bbc7:	jmp    0x14000bcc0
   14000bbcc:	lea    rcx,[rbx+0x18]
   14000bbd0:	xor    edx,edx
   14000bbd2:	mov    r8d,0x101
   14000bbd8:	call   0x1400099c0
   14000bbdd:	mov    eax,ebp
   14000bbdf:	lea    r9,[r12+0x10]
   14000bbe4:	lea    r11,[rax+rax*2]
   14000bbe8:	lea    r14,[rip+0xfce1]        # 0x14001b8d0
   14000bbef:	mov    ebp,0x4
   14000bbf4:	shl    r11,0x4
   14000bbf8:	add    r9,r11
   14000bbfb:	mov    rdx,r9
   14000bbfe:	cmp    BYTE PTR [r9],sil
   14000bc01:	je     0x14000bc43
   14000bc03:	cmp    BYTE PTR [rdx+0x1],sil
   14000bc07:	je     0x14000bc43
   14000bc09:	movzx  r8d,BYTE PTR [rdx]
   14000bc0d:	movzx  eax,BYTE PTR [rdx+0x1]
   14000bc11:	cmp    r8d,eax
   14000bc14:	ja     0x14000bc3a
   14000bc16:	lea    r10d,[r8+0x1]
   14000bc1a:	cmp    r10d,0x101
   14000bc21:	jae    0x14000bc3a
   14000bc23:	mov    al,BYTE PTR [r14]
   14000bc26:	add    r8d,r15d
   14000bc29:	or     BYTE PTR [r10+rbx*1+0x18],al
   14000bc2e:	movzx  eax,BYTE PTR [rdx+0x1]
   14000bc32:	add    r10d,r15d
   14000bc35:	cmp    r8d,eax
   14000bc38:	jbe    0x14000bc1a
   14000bc3a:	add    rdx,0x2
   14000bc3e:	cmp    BYTE PTR [rdx],sil
   14000bc41:	jne    0x14000bc03
   14000bc43:	add    r9,0x8
   14000bc47:	add    r14,r15
   14000bc4a:	sub    rbp,r15
   14000bc4d:	jne    0x14000bbfb
   14000bc4f:	mov    DWORD PTR [rbx+0x4],edi
   14000bc52:	mov    DWORD PTR [rbx+0x8],r15d
   14000bc56:	sub    edi,0x3a4
   14000bc5c:	je     0x14000bc87
   14000bc5e:	sub    edi,0x4
   14000bc61:	je     0x14000bc7e
   14000bc63:	sub    edi,0xd
   14000bc66:	je     0x14000bc75
   14000bc68:	dec    edi
   14000bc6a:	jne    0x14000bc8e
   14000bc6c:	mov    rsi,QWORD PTR [rip+0x8a45]        # 0x1400146b8
   14000bc73:	jmp    0x14000bc8e
   14000bc75:	mov    rsi,QWORD PTR [rip+0x8a34]        # 0x1400146b0
   14000bc7c:	jmp    0x14000bc8e
   14000bc7e:	mov    rsi,QWORD PTR [rip+0x8a23]        # 0x1400146a8
   14000bc85:	jmp    0x14000bc8e
   14000bc87:	mov    rsi,QWORD PTR [rip+0x8a12]        # 0x1400146a0
   14000bc8e:	sub    r11,rbx
   14000bc91:	mov    QWORD PTR [rbx+0x220],rsi
   14000bc98:	lea    rcx,[rbx+0xc]
   14000bc9c:	lea    rdi,[r11+r12*1]
   14000bca0:	mov    edx,0x6
   14000bca5:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14000bcaa:	mov    WORD PTR [rcx],ax
   14000bcad:	lea    rcx,[rcx+0x2]
   14000bcb1:	sub    rdx,r15
   14000bcb4:	jne    0x14000bca5
   14000bcb6:	mov    rcx,rbx
   14000bcb9:	call   0x14000b53c
   14000bcbe:	xor    eax,eax
   14000bcc0:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bcc5:	xor    rcx,rsp
   14000bcc8:	call   0x140005fe0
   14000bccd:	lea    r11,[rsp+0x40]
   14000bcd2:	mov    rbx,QWORD PTR [r11+0x40]
   14000bcd6:	mov    rbp,QWORD PTR [r11+0x48]
   14000bcda:	mov    rsp,r11
   14000bcdd:	pop    r15
   14000bcdf:	pop    r14
   14000bce1:	pop    r12
   14000bce3:	pop    rdi
   14000bce4:	pop    rsi
   14000bce5:	ret    
   14000bce6:	int3   
   14000bce7:	int3   
   14000bce8:	int3   
   14000bce9:	int3   
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	int3   
   14000bced:	int3   
   14000bcee:	int3   
   14000bcef:	int3   
   14000bcf0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000bcf4:	xor    r9d,r9d
   14000bcf7:	mov    r10,rdx
   14000bcfa:	add    r8,rcx
   14000bcfd:	movzx  eax,WORD PTR [r8+0x14]
   14000bd02:	movzx  r11d,WORD PTR [r8+0x6]
   14000bd07:	add    rax,0x18
   14000bd0b:	add    rax,r8
   14000bd0e:	test   r11d,r11d
   14000bd11:	je     0x14000bd31
   14000bd13:	mov    edx,DWORD PTR [rax+0xc]
   14000bd16:	cmp    r10,rdx
   14000bd19:	jb     0x14000bd25
   14000bd1b:	mov    ecx,DWORD PTR [rax+0x8]
   14000bd1e:	add    ecx,edx
   14000bd20:	cmp    r10,rcx
   14000bd23:	jb     0x14000bd33
   14000bd25:	inc    r9d
   14000bd28:	add    rax,0x28
   14000bd2c:	cmp    r9d,r11d
   14000bd2f:	jb     0x14000bd13
   14000bd31:	xor    eax,eax
   14000bd33:	repz ret 
   14000bd35:	int3   
   14000bd36:	int3   
   14000bd37:	int3   
   14000bd38:	int3   
   14000bd39:	int3   
   14000bd3a:	int3   
   14000bd3b:	int3   
   14000bd3c:	int3   
   14000bd3d:	int3   
   14000bd3e:	int3   
   14000bd3f:	int3   
   14000bd40:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd45:	push   rdi
   14000bd46:	sub    rsp,0x20
   14000bd4a:	mov    rbx,rcx
   14000bd4d:	lea    rdi,[rip+0xffffffffffff42ac]        # 0x140000000
   14000bd54:	mov    rcx,rdi
   14000bd57:	call   0x14000bd90
   14000bd5c:	test   eax,eax
   14000bd5e:	je     0x14000bd82
   14000bd60:	sub    rbx,rdi
   14000bd63:	mov    rdx,rbx
   14000bd66:	mov    rcx,rdi
   14000bd69:	call   0x14000bcf0
   14000bd6e:	test   rax,rax
   14000bd71:	je     0x14000bd82
   14000bd73:	mov    eax,DWORD PTR [rax+0x24]
   14000bd76:	shr    eax,0x1f
   14000bd79:	not    eax
   14000bd7b:	and    eax,0x1
   14000bd7e:	jmp    0x14000bd82
   14000bd80:	xor    eax,eax
   14000bd82:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd87:	add    rsp,0x20
   14000bd8b:	pop    rdi
   14000bd8c:	ret    
   14000bd8d:	int3   
   14000bd8e:	int3   
   14000bd8f:	int3   
   14000bd90:	mov    rax,rcx
   14000bd93:	mov    ecx,0x5a4d
   14000bd98:	cmp    WORD PTR [rax],cx
   14000bd9b:	je     0x14000bda0
   14000bd9d:	xor    eax,eax
   14000bd9f:	ret    
   14000bda0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000bda4:	add    rcx,rax
   14000bda7:	xor    eax,eax
   14000bda9:	cmp    DWORD PTR [rcx],0x4550
   14000bdaf:	jne    0x14000bdbd
   14000bdb1:	mov    edx,0x20b
   14000bdb6:	cmp    WORD PTR [rcx+0x18],dx
   14000bdba:	sete   al
   14000bdbd:	repz ret 
   14000bdbf:	int3   
   14000bdc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bdc5:	push   rdi
   14000bdc6:	sub    rsp,0x20
   14000bdca:	xor    edi,edi
   14000bdcc:	lea    rbx,[rip+0x1003d]        # 0x14001be10
   14000bdd3:	mov    rcx,QWORD PTR [rbx]
   14000bdd6:	call   QWORD PTR [rip+0x73cc]        # 0x1400131a8
   14000bddc:	inc    edi
   14000bdde:	mov    QWORD PTR [rbx],rax
   14000bde1:	movsxd rax,edi
   14000bde4:	lea    rbx,[rbx+0x8]
   14000bde8:	cmp    rax,0xa
   14000bdec:	jb     0x14000bdd3
   14000bdee:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bdf3:	add    rsp,0x20
   14000bdf7:	pop    rdi
   14000bdf8:	ret    
   14000bdf9:	int3   
   14000bdfa:	int3   
   14000bdfb:	int3   
   14000bdfc:	mov    QWORD PTR [rip+0x11acd],rcx        # 0x14001d8d0
   14000be03:	ret    
   14000be04:	mov    rcx,QWORD PTR [rip+0x11add]        # 0x14001d8e8
   14000be0b:	rex.W jmp QWORD PTR [rip+0x739e]        # 0x1400131b0
   14000be12:	int3   
   14000be13:	int3   
   14000be14:	mov    QWORD PTR [rip+0x11abd],rcx        # 0x14001d8d8
   14000be1b:	mov    QWORD PTR [rip+0x11abe],rcx        # 0x14001d8e0
   14000be22:	mov    QWORD PTR [rip+0x11abf],rcx        # 0x14001d8e8
   14000be29:	mov    QWORD PTR [rip+0x11ac0],rcx        # 0x14001d8f0
   14000be30:	ret    
   14000be31:	int3   
   14000be32:	int3   
   14000be33:	int3   
   14000be34:	mov    QWORD PTR [rsp+0x18],rbx
   14000be39:	push   rsi
   14000be3a:	push   rdi
   14000be3b:	push   r12
   14000be3d:	push   r14
   14000be3f:	push   r15
   14000be41:	sub    rsp,0x30
   14000be45:	mov    ebx,ecx
   14000be47:	xor    edi,edi
   14000be49:	mov    DWORD PTR [rsp+0x60],edi
   14000be4d:	xor    esi,esi
   14000be4f:	mov    edx,ecx
   14000be51:	sub    edx,0x2
   14000be54:	je     0x14000bf1e
   14000be5a:	sub    edx,0x2
   14000be5d:	je     0x14000bec1
   14000be5f:	sub    edx,0x2
   14000be62:	je     0x14000beb1
   14000be64:	sub    edx,0x2
   14000be67:	je     0x14000bec1
   14000be69:	sub    edx,0x3
   14000be6c:	je     0x14000bec1
   14000be6e:	sub    edx,0x4
   14000be71:	je     0x14000bea1
   14000be73:	sub    edx,0x6
   14000be76:	je     0x14000be8e
   14000be78:	dec    edx
   14000be7a:	je     0x14000beb1
   14000be7c:	call   0x140008888
   14000be81:	mov    DWORD PTR [rax],0x16
   14000be87:	call   0x1400087bc
   14000be8c:	jmp    0x14000bece
   14000be8e:	lea    r14,[rip+0x11a4b]        # 0x14001d8e0
   14000be95:	mov    rcx,QWORD PTR [rip+0x11a44]        # 0x14001d8e0
   14000be9c:	jmp    0x14000bf2c
   14000bea1:	lea    r14,[rip+0x11a48]        # 0x14001d8f0
   14000bea8:	mov    rcx,QWORD PTR [rip+0x11a41]        # 0x14001d8f0
   14000beaf:	jmp    0x14000bf2c
   14000beb1:	lea    r14,[rip+0x11a30]        # 0x14001d8e8
   14000beb8:	mov    rcx,QWORD PTR [rip+0x11a29]        # 0x14001d8e8
   14000bebf:	jmp    0x14000bf2c
   14000bec1:	call   0x1400071c0
   14000bec6:	mov    rsi,rax
   14000bec9:	test   rax,rax
   14000becc:	jne    0x14000bed6
   14000bece:	or     eax,0xffffffff
   14000bed1:	jmp    0x14000c046
   14000bed6:	mov    rdx,QWORD PTR [rax+0xa0]
   14000bedd:	mov    rcx,rdx
   14000bee0:	movsxd r8,DWORD PTR [rip+0x7749]        # 0x140013630
   14000bee7:	cmp    DWORD PTR [rcx+0x4],ebx
   14000beea:	je     0x14000beff
   14000beec:	add    rcx,0x10
   14000bef0:	mov    rax,r8
   14000bef3:	shl    rax,0x4
   14000bef7:	add    rax,rdx
   14000befa:	cmp    rcx,rax
   14000befd:	jb     0x14000bee7
   14000beff:	mov    rax,r8
   14000bf02:	shl    rax,0x4
   14000bf06:	add    rax,rdx
   14000bf09:	cmp    rcx,rax
   14000bf0c:	jae    0x14000bf13
   14000bf0e:	cmp    DWORD PTR [rcx+0x4],ebx
   14000bf11:	je     0x14000bf15
   14000bf13:	xor    ecx,ecx
   14000bf15:	lea    r14,[rcx+0x8]
   14000bf19:	mov    r15,QWORD PTR [r14]
   14000bf1c:	jmp    0x14000bf3e
   14000bf1e:	lea    r14,[rip+0x119b3]        # 0x14001d8d8
   14000bf25:	mov    rcx,QWORD PTR [rip+0x119ac]        # 0x14001d8d8
   14000bf2c:	mov    edi,0x1
   14000bf31:	mov    DWORD PTR [rsp+0x60],edi
   14000bf35:	call   QWORD PTR [rip+0x7275]        # 0x1400131b0
   14000bf3b:	mov    r15,rax
   14000bf3e:	cmp    r15,0x1
   14000bf42:	jne    0x14000bf4b
   14000bf44:	xor    eax,eax
   14000bf46:	jmp    0x14000c046
   14000bf4b:	test   r15,r15
   14000bf4e:	jne    0x14000bf5a
   14000bf50:	lea    ecx,[r15+0x3]
   14000bf54:	call   0x1400074f8
   14000bf59:	int3   
   14000bf5a:	test   edi,edi
   14000bf5c:	je     0x14000bf66
   14000bf5e:	xor    ecx,ecx
   14000bf60:	call   0x14000ae60
   14000bf65:	nop
   14000bf66:	mov    r12d,0x910
   14000bf6c:	cmp    ebx,0xb
   14000bf6f:	ja     0x14000bfa4
   14000bf71:	bt     r12d,ebx
   14000bf75:	jae    0x14000bfa4
   14000bf77:	mov    rax,QWORD PTR [rsi+0xa8]
   14000bf7e:	mov    QWORD PTR [rsp+0x28],rax
   14000bf83:	and    QWORD PTR [rsi+0xa8],0x0
   14000bf8b:	cmp    ebx,0x8
   14000bf8e:	jne    0x14000bfe2
   14000bf90:	mov    eax,DWORD PTR [rsi+0xb0]
   14000bf96:	mov    DWORD PTR [rsp+0x68],eax
   14000bf9a:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000bfa4:	cmp    ebx,0x8
   14000bfa7:	jne    0x14000bfe2
   14000bfa9:	mov    ecx,DWORD PTR [rip+0x7689]        # 0x140013638
   14000bfaf:	mov    edx,ecx
   14000bfb1:	mov    DWORD PTR [rsp+0x20],ecx
   14000bfb5:	mov    eax,DWORD PTR [rip+0x7681]        # 0x14001363c
   14000bfbb:	add    ecx,eax
   14000bfbd:	cmp    edx,ecx
   14000bfbf:	jge    0x14000bfed
   14000bfc1:	movsxd rcx,edx
   14000bfc4:	add    rcx,rcx
   14000bfc7:	mov    rax,QWORD PTR [rsi+0xa0]
   14000bfce:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000bfd4:	inc    edx
   14000bfd6:	mov    DWORD PTR [rsp+0x20],edx
   14000bfda:	mov    ecx,DWORD PTR [rip+0x7658]        # 0x140013638
   14000bfe0:	jmp    0x14000bfb5
   14000bfe2:	xor    ecx,ecx
   14000bfe4:	call   QWORD PTR [rip+0x71be]        # 0x1400131a8
   14000bfea:	mov    QWORD PTR [r14],rax
   14000bfed:	test   edi,edi
   14000bfef:	je     0x14000bff8
   14000bff1:	xor    ecx,ecx
   14000bff3:	call   0x14000b048
   14000bff8:	cmp    ebx,0x8
   14000bffb:	jne    0x14000c00a
   14000bffd:	mov    edx,DWORD PTR [rsi+0xb0]
   14000c003:	mov    ecx,ebx
   14000c005:	call   r15
   14000c008:	jmp    0x14000c00f
   14000c00a:	mov    ecx,ebx
   14000c00c:	call   r15
   14000c00f:	cmp    ebx,0xb
   14000c012:	ja     0x14000bf44
   14000c018:	bt     r12d,ebx
   14000c01c:	jae    0x14000bf44
   14000c022:	mov    rax,QWORD PTR [rsp+0x28]
   14000c027:	mov    QWORD PTR [rsi+0xa8],rax
   14000c02e:	cmp    ebx,0x8
   14000c031:	jne    0x14000bf44
   14000c037:	mov    eax,DWORD PTR [rsp+0x68]
   14000c03b:	mov    DWORD PTR [rsi+0xb0],eax
   14000c041:	jmp    0x14000bf44
   14000c046:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c04b:	add    rsp,0x30
   14000c04f:	pop    r15
   14000c051:	pop    r14
   14000c053:	pop    r12
   14000c055:	pop    rdi
   14000c056:	pop    rsi
   14000c057:	ret    
   14000c058:	int3   
   14000c059:	int3   
   14000c05a:	int3   
   14000c05b:	int3   
   14000c05c:	int3   
   14000c05d:	int3   
   14000c05e:	int3   
   14000c05f:	int3   
   14000c060:	int3   
   14000c061:	int3   
   14000c062:	int3   
   14000c063:	int3   
   14000c064:	int3   
   14000c065:	int3   
   14000c066:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c070:	mov    rax,rcx
   14000c073:	neg    rcx
   14000c076:	test   rax,0x7
   14000c07c:	je     0x14000c08d
   14000c07e:	xchg   ax,ax
   14000c080:	mov    dl,BYTE PTR [rax]
   14000c082:	inc    rax
   14000c085:	test   dl,dl
   14000c087:	je     0x14000c0e8
   14000c089:	test   al,0x7
   14000c08b:	jne    0x14000c080
   14000c08d:	movabs r8,0x7efefefefefefeff
   14000c097:	movabs r11,0x8101010101010100
   14000c0a1:	mov    rdx,QWORD PTR [rax]
   14000c0a4:	mov    r9,r8
   14000c0a7:	add    rax,0x8
   14000c0ab:	add    r9,rdx
   14000c0ae:	not    rdx
   14000c0b1:	xor    rdx,r9
   14000c0b4:	and    rdx,r11
   14000c0b7:	je     0x14000c0a1
   14000c0b9:	mov    rdx,QWORD PTR [rax-0x8]
   14000c0bd:	test   dl,dl
   14000c0bf:	je     0x14000c112
   14000c0c1:	test   dh,dh
   14000c0c3:	je     0x14000c10c
   14000c0c5:	shr    rdx,0x10
   14000c0c9:	test   dl,dl
   14000c0cb:	je     0x14000c106
   14000c0cd:	test   dh,dh
   14000c0cf:	je     0x14000c100
   14000c0d1:	shr    rdx,0x10
   14000c0d5:	test   dl,dl
   14000c0d7:	je     0x14000c0fa
   14000c0d9:	test   dh,dh
   14000c0db:	je     0x14000c0f4
   14000c0dd:	shr    edx,0x10
   14000c0e0:	test   dl,dl
   14000c0e2:	je     0x14000c0ee
   14000c0e4:	test   dh,dh
   14000c0e6:	jne    0x14000c0a1
   14000c0e8:	lea    rax,[rcx+rax*1-0x1]
   14000c0ed:	ret    
   14000c0ee:	lea    rax,[rcx+rax*1-0x2]
   14000c0f3:	ret    
   14000c0f4:	lea    rax,[rcx+rax*1-0x3]
   14000c0f9:	ret    
   14000c0fa:	lea    rax,[rcx+rax*1-0x4]
   14000c0ff:	ret    
   14000c100:	lea    rax,[rcx+rax*1-0x5]
   14000c105:	ret    
   14000c106:	lea    rax,[rcx+rax*1-0x6]
   14000c10b:	ret    
   14000c10c:	lea    rax,[rcx+rax*1-0x7]
   14000c111:	ret    
   14000c112:	lea    rax,[rcx+rax*1-0x8]
   14000c117:	ret    
   14000c118:	rex push rbx
   14000c11a:	sub    rsp,0x20
   14000c11e:	xor    r10d,r10d
   14000c121:	mov    r9,rcx
   14000c124:	test   rcx,rcx
   14000c127:	je     0x14000c137
   14000c129:	test   rdx,rdx
   14000c12c:	je     0x14000c137
   14000c12e:	test   r8,r8
   14000c131:	jne    0x14000c150
   14000c133:	mov    WORD PTR [rcx],r10w
   14000c137:	call   0x140008888
   14000c13c:	mov    ebx,0x16
   14000c141:	mov    DWORD PTR [rax],ebx
   14000c143:	call   0x1400087bc
   14000c148:	mov    eax,ebx
   14000c14a:	add    rsp,0x20
   14000c14e:	pop    rbx
   14000c14f:	ret    
   14000c150:	cmp    WORD PTR [rcx],r10w
   14000c154:	je     0x14000c15f
   14000c156:	add    rcx,0x2
   14000c15a:	dec    rdx
   14000c15d:	jne    0x14000c150
   14000c15f:	test   rdx,rdx
   14000c162:	jne    0x14000c16a
   14000c164:	mov    WORD PTR [r9],r10w
   14000c168:	jmp    0x14000c137
   14000c16a:	sub    rcx,r8
   14000c16d:	movzx  eax,WORD PTR [r8]
   14000c171:	mov    WORD PTR [rcx+r8*1],ax
   14000c176:	lea    r8,[r8+0x2]
   14000c17a:	test   ax,ax
   14000c17d:	je     0x14000c184
   14000c17f:	dec    rdx
   14000c182:	jne    0x14000c16d
   14000c184:	test   rdx,rdx
   14000c187:	jne    0x14000c199
   14000c189:	mov    WORD PTR [r9],r10w
   14000c18d:	call   0x140008888
   14000c192:	mov    ebx,0x22
   14000c197:	jmp    0x14000c141
   14000c199:	xor    eax,eax
   14000c19b:	jmp    0x14000c14a
   14000c19d:	int3   
   14000c19e:	int3   
   14000c19f:	int3   
   14000c1a0:	rex push rbx
   14000c1a2:	sub    rsp,0x20
   14000c1a6:	xor    r10d,r10d
   14000c1a9:	test   rcx,rcx
   14000c1ac:	je     0x14000c1bc
   14000c1ae:	test   rdx,rdx
   14000c1b1:	je     0x14000c1bc
   14000c1b3:	test   r8,r8
   14000c1b6:	jne    0x14000c1d5
   14000c1b8:	mov    WORD PTR [rcx],r10w
   14000c1bc:	call   0x140008888
   14000c1c1:	mov    ebx,0x16
   14000c1c6:	mov    DWORD PTR [rax],ebx
   14000c1c8:	call   0x1400087bc
   14000c1cd:	mov    eax,ebx
   14000c1cf:	add    rsp,0x20
   14000c1d3:	pop    rbx
   14000c1d4:	ret    
   14000c1d5:	mov    r9,rcx
   14000c1d8:	sub    r9,r8
   14000c1db:	movzx  eax,WORD PTR [r8]
   14000c1df:	mov    WORD PTR [r9+r8*1],ax
   14000c1e4:	lea    r8,[r8+0x2]
   14000c1e8:	test   ax,ax
   14000c1eb:	je     0x14000c1f2
   14000c1ed:	dec    rdx
   14000c1f0:	jne    0x14000c1db
   14000c1f2:	test   rdx,rdx
   14000c1f5:	jne    0x14000c207
   14000c1f7:	mov    WORD PTR [rcx],r10w
   14000c1fb:	call   0x140008888
   14000c200:	mov    ebx,0x22
   14000c205:	jmp    0x14000c1c6
   14000c207:	xor    eax,eax
   14000c209:	jmp    0x14000c1cf
   14000c20b:	int3   
   14000c20c:	mov    rax,rcx
   14000c20f:	movzx  edx,WORD PTR [rax]
   14000c212:	add    rax,0x2
   14000c216:	test   dx,dx
   14000c219:	jne    0x14000c20f
   14000c21b:	sub    rax,rcx
   14000c21e:	sar    rax,1
   14000c221:	dec    rax
   14000c224:	ret    
   14000c225:	int3   
   14000c226:	int3   
   14000c227:	int3   
   14000c228:	rex push rbx
   14000c22a:	sub    rsp,0x20
   14000c22e:	xor    ebx,ebx
   14000c230:	test   r9,r9
   14000c233:	jne    0x14000c243
   14000c235:	test   rcx,rcx
   14000c238:	jne    0x14000c248
   14000c23a:	test   rdx,rdx
   14000c23d:	jne    0x14000c25f
   14000c23f:	xor    eax,eax
   14000c241:	jmp    0x14000c272
   14000c243:	test   rcx,rcx
   14000c246:	je     0x14000c25f
   14000c248:	test   rdx,rdx
   14000c24b:	je     0x14000c25f
   14000c24d:	test   r9,r9
   14000c250:	jne    0x14000c257
   14000c252:	mov    WORD PTR [rcx],bx
   14000c255:	jmp    0x14000c23f
   14000c257:	test   r8,r8
   14000c25a:	jne    0x14000c278
   14000c25c:	mov    WORD PTR [rcx],bx
   14000c25f:	call   0x140008888
   14000c264:	mov    ebx,0x16
   14000c269:	mov    DWORD PTR [rax],ebx
   14000c26b:	call   0x1400087bc
   14000c270:	mov    eax,ebx
   14000c272:	add    rsp,0x20
   14000c276:	pop    rbx
   14000c277:	ret    
   14000c278:	mov    r11,rcx
   14000c27b:	mov    r10,rdx
   14000c27e:	cmp    r9,0xffffffffffffffff
   14000c282:	jne    0x14000c2a0
   14000c284:	sub    r11,r8
   14000c287:	movzx  eax,WORD PTR [r8]
   14000c28b:	mov    WORD PTR [r11+r8*1],ax
   14000c290:	lea    r8,[r8+0x2]
   14000c294:	test   ax,ax
   14000c297:	je     0x14000c2c8
   14000c299:	dec    r10
   14000c29c:	jne    0x14000c287
   14000c29e:	jmp    0x14000c2c8
   14000c2a0:	sub    r8,rcx
   14000c2a3:	movzx  eax,WORD PTR [r8+r11*1]
   14000c2a8:	mov    WORD PTR [r11],ax
   14000c2ac:	lea    r11,[r11+0x2]
   14000c2b0:	test   ax,ax
   14000c2b3:	je     0x14000c2bf
   14000c2b5:	dec    r10
   14000c2b8:	je     0x14000c2bf
   14000c2ba:	dec    r9
   14000c2bd:	jne    0x14000c2a3
   14000c2bf:	test   r9,r9
   14000c2c2:	jne    0x14000c2c8
   14000c2c4:	mov    WORD PTR [r11],bx
   14000c2c8:	test   r10,r10
   14000c2cb:	jne    0x14000c23f
   14000c2d1:	cmp    r9,0xffffffffffffffff
   14000c2d5:	jne    0x14000c2e2
   14000c2d7:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   14000c2dc:	lea    eax,[r10+0x50]
   14000c2e0:	jmp    0x14000c272
   14000c2e2:	mov    WORD PTR [rcx],bx
   14000c2e5:	call   0x140008888
   14000c2ea:	mov    ebx,0x22
   14000c2ef:	jmp    0x14000c269
   14000c2f4:	rex push rbx
   14000c2f6:	push   rbp
   14000c2f7:	push   rsi
   14000c2f8:	push   rdi
   14000c2f9:	push   r12
   14000c2fb:	push   r14
   14000c2fd:	push   r15
   14000c2ff:	sub    rsp,0x50
   14000c303:	mov    rax,QWORD PTR [rip+0xed7e]        # 0x14001b088
   14000c30a:	xor    rax,rsp
   14000c30d:	mov    QWORD PTR [rsp+0x48],rax
   14000c312:	mov    r15,rcx
   14000c315:	xor    ecx,ecx
   14000c317:	mov    ebp,r8d
   14000c31a:	mov    r12,rdx
   14000c31d:	call   QWORD PTR [rip+0x6e85]        # 0x1400131a8
   14000c323:	xor    edi,edi
   14000c325:	mov    rsi,rax
   14000c328:	call   0x14000ad58
   14000c32d:	cmp    QWORD PTR [rip+0x115dc],rdi        # 0x14001d910
   14000c334:	mov    r14d,eax
   14000c337:	jne    0x14000c430
   14000c33d:	lea    rcx,[rip+0x83bc]        # 0x140014700
   14000c344:	xor    edx,edx
   14000c346:	mov    r8d,0x800
   14000c34c:	call   QWORD PTR [rip+0x6fd6]        # 0x140013328
   14000c352:	mov    rbx,rax
   14000c355:	test   rax,rax
   14000c358:	jne    0x14000c382
   14000c35a:	call   QWORD PTR [rip+0x6dd8]        # 0x140013138
   14000c360:	cmp    eax,0x57
   14000c363:	jne    0x14000c544
   14000c369:	lea    rcx,[rip+0x8390]        # 0x140014700
   14000c370:	call   QWORD PTR [rip+0x6fc2]        # 0x140013338
   14000c376:	mov    rbx,rax
   14000c379:	test   rax,rax
   14000c37c:	je     0x14000c544
   14000c382:	lea    rdx,[rip+0x838f]        # 0x140014718
   14000c389:	mov    rcx,rbx
   14000c38c:	call   QWORD PTR [rip+0x6e56]        # 0x1400131e8
   14000c392:	test   rax,rax
   14000c395:	je     0x14000c544
   14000c39b:	mov    rcx,rax
   14000c39e:	call   QWORD PTR [rip+0x6e04]        # 0x1400131a8
   14000c3a4:	lea    rdx,[rip+0x837d]        # 0x140014728
   14000c3ab:	mov    rcx,rbx
   14000c3ae:	mov    QWORD PTR [rip+0x1155b],rax        # 0x14001d910
   14000c3b5:	call   QWORD PTR [rip+0x6e2d]        # 0x1400131e8
   14000c3bb:	mov    rcx,rax
   14000c3be:	call   QWORD PTR [rip+0x6de4]        # 0x1400131a8
   14000c3c4:	lea    rdx,[rip+0x836d]        # 0x140014738
   14000c3cb:	mov    rcx,rbx
   14000c3ce:	mov    QWORD PTR [rip+0x11543],rax        # 0x14001d918
   14000c3d5:	call   QWORD PTR [rip+0x6e0d]        # 0x1400131e8
   14000c3db:	mov    rcx,rax
   14000c3de:	call   QWORD PTR [rip+0x6dc4]        # 0x1400131a8
   14000c3e4:	lea    rdx,[rip+0x8365]        # 0x140014750
   14000c3eb:	mov    rcx,rbx
   14000c3ee:	mov    QWORD PTR [rip+0x1152b],rax        # 0x14001d920
   14000c3f5:	call   QWORD PTR [rip+0x6ded]        # 0x1400131e8
   14000c3fb:	mov    rcx,rax
   14000c3fe:	call   QWORD PTR [rip+0x6da4]        # 0x1400131a8
   14000c404:	mov    QWORD PTR [rip+0x11525],rax        # 0x14001d930
   14000c40b:	test   rax,rax
   14000c40e:	je     0x14000c430
   14000c410:	lea    rdx,[rip+0x8359]        # 0x140014770
   14000c417:	mov    rcx,rbx
   14000c41a:	call   QWORD PTR [rip+0x6dc8]        # 0x1400131e8
   14000c420:	mov    rcx,rax
   14000c423:	call   QWORD PTR [rip+0x6d7f]        # 0x1400131a8
   14000c429:	mov    QWORD PTR [rip+0x114f8],rax        # 0x14001d928
   14000c430:	call   QWORD PTR [rip+0x6d8a]        # 0x1400131c0
   14000c436:	test   eax,eax
   14000c438:	je     0x14000c457
   14000c43a:	test   r15,r15
   14000c43d:	je     0x14000c448
   14000c43f:	mov    rcx,r15
   14000c442:	call   QWORD PTR [rip+0x6ee8]        # 0x140013330
   14000c448:	test   r14d,r14d
   14000c44b:	je     0x14000c473
   14000c44d:	mov    eax,0x4
   14000c452:	jmp    0x14000c546
   14000c457:	test   r14d,r14d
   14000c45a:	je     0x14000c473
   14000c45c:	mov    rcx,QWORD PTR [rip+0x114ad]        # 0x14001d910
   14000c463:	call   QWORD PTR [rip+0x6d47]        # 0x1400131b0
   14000c469:	mov    eax,0x3
   14000c46e:	jmp    0x14000c546
   14000c473:	mov    rcx,QWORD PTR [rip+0x114ae]        # 0x14001d928
   14000c47a:	cmp    rcx,rsi
   14000c47d:	je     0x14000c4e2
   14000c47f:	cmp    QWORD PTR [rip+0x114aa],rsi        # 0x14001d930
   14000c486:	je     0x14000c4e2
   14000c488:	call   QWORD PTR [rip+0x6d22]        # 0x1400131b0
   14000c48e:	mov    rcx,QWORD PTR [rip+0x1149b]        # 0x14001d930
   14000c495:	mov    rbx,rax
   14000c498:	call   QWORD PTR [rip+0x6d12]        # 0x1400131b0
   14000c49e:	mov    r14,rax
   14000c4a1:	test   rbx,rbx
   14000c4a4:	je     0x14000c4e2
   14000c4a6:	test   rax,rax
   14000c4a9:	je     0x14000c4e2
   14000c4ab:	call   rbx
   14000c4ad:	test   rax,rax
   14000c4b0:	je     0x14000c4dc
   14000c4b2:	lea    rcx,[rsp+0x30]
   14000c4b7:	mov    r9d,0xc
   14000c4bd:	lea    r8,[rsp+0x38]
   14000c4c2:	mov    QWORD PTR [rsp+0x20],rcx
   14000c4c7:	lea    edx,[r9-0xb]
   14000c4cb:	mov    rcx,rax
   14000c4ce:	call   r14
   14000c4d1:	test   eax,eax
   14000c4d3:	je     0x14000c4dc
   14000c4d5:	test   BYTE PTR [rsp+0x40],0x1
   14000c4da:	jne    0x14000c4e2
   14000c4dc:	bts    ebp,0x15
   14000c4e0:	jmp    0x14000c522
   14000c4e2:	mov    rcx,QWORD PTR [rip+0x1142f]        # 0x14001d918
   14000c4e9:	cmp    rcx,rsi
   14000c4ec:	je     0x14000c522
   14000c4ee:	call   QWORD PTR [rip+0x6cbc]        # 0x1400131b0
   14000c4f4:	test   rax,rax
   14000c4f7:	je     0x14000c522
   14000c4f9:	call   rax
   14000c4fb:	mov    rdi,rax
   14000c4fe:	test   rax,rax
   14000c501:	je     0x14000c522
   14000c503:	mov    rcx,QWORD PTR [rip+0x11416]        # 0x14001d920
   14000c50a:	cmp    rcx,rsi
   14000c50d:	je     0x14000c522
   14000c50f:	call   QWORD PTR [rip+0x6c9b]        # 0x1400131b0
   14000c515:	test   rax,rax
   14000c518:	je     0x14000c522
   14000c51a:	mov    rcx,rdi
   14000c51d:	call   rax
   14000c51f:	mov    rdi,rax
   14000c522:	mov    rcx,QWORD PTR [rip+0x113e7]        # 0x14001d910
   14000c529:	call   QWORD PTR [rip+0x6c81]        # 0x1400131b0
   14000c52f:	test   rax,rax
   14000c532:	je     0x14000c544
   14000c534:	mov    r9d,ebp
   14000c537:	mov    r8,r12
   14000c53a:	mov    rdx,r15
   14000c53d:	mov    rcx,rdi
   14000c540:	call   rax
   14000c542:	jmp    0x14000c546
   14000c544:	xor    eax,eax
   14000c546:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c54b:	xor    rcx,rsp
   14000c54e:	call   0x140005fe0
   14000c553:	add    rsp,0x50
   14000c557:	pop    r15
   14000c559:	pop    r14
   14000c55b:	pop    r12
   14000c55d:	pop    rdi
   14000c55e:	pop    rsi
   14000c55f:	pop    rbp
   14000c560:	pop    rbx
   14000c561:	ret    
   14000c562:	int3   
   14000c563:	int3   
   14000c564:	sub    rsp,0x28
   14000c568:	mov    r8,QWORD PTR [r9+0x38]
   14000c56c:	mov    rcx,rdx
   14000c56f:	mov    rdx,r9
   14000c572:	call   0x14000c584
   14000c577:	mov    eax,0x1
   14000c57c:	add    rsp,0x28
   14000c580:	ret    
   14000c581:	int3   
   14000c582:	int3   
   14000c583:	int3   
   14000c584:	rex push rbx
   14000c586:	sub    rsp,0x20
   14000c58a:	mov    r11d,DWORD PTR [r8]
   14000c58d:	mov    rbx,rdx
   14000c590:	mov    r9,rcx
   14000c593:	and    r11d,0xfffffff8
   14000c597:	test   BYTE PTR [r8],0x4
   14000c59b:	mov    r10,rcx
   14000c59e:	je     0x14000c5b3
   14000c5a0:	mov    eax,DWORD PTR [r8+0x8]
   14000c5a4:	movsxd r10,DWORD PTR [r8+0x4]
   14000c5a8:	neg    eax
   14000c5aa:	add    r10,rcx
   14000c5ad:	movsxd rcx,eax
   14000c5b0:	and    r10,rcx
   14000c5b3:	movsxd rax,r11d
   14000c5b6:	mov    rdx,QWORD PTR [rax+r10*1]
   14000c5ba:	mov    rax,QWORD PTR [rbx+0x10]
   14000c5be:	mov    ecx,DWORD PTR [rax+0x8]
   14000c5c1:	add    rcx,QWORD PTR [rbx+0x8]
   14000c5c5:	test   BYTE PTR [rcx+0x3],0xf
   14000c5c9:	je     0x14000c5d7
   14000c5cb:	movzx  eax,BYTE PTR [rcx+0x3]
   14000c5cf:	and    eax,0xfffffff0
   14000c5d2:	cdqe   
   14000c5d4:	add    r9,rax
   14000c5d7:	xor    r9,rdx
   14000c5da:	mov    rcx,r9
   14000c5dd:	add    rsp,0x20
   14000c5e1:	pop    rbx
   14000c5e2:	jmp    0x140005fe0
   14000c5e7:	int3   
   14000c5e8:	int3   
   14000c5e9:	int3   
   14000c5ea:	int3   
   14000c5eb:	int3   
   14000c5ec:	int3   
   14000c5ed:	int3   
   14000c5ee:	int3   
   14000c5ef:	int3   
   14000c5f0:	int3   
   14000c5f1:	int3   
   14000c5f2:	int3   
   14000c5f3:	int3   
   14000c5f4:	int3   
   14000c5f5:	int3   
   14000c5f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c600:	sub    rsp,0x4d8
   14000c607:	xor    r8,r8
   14000c60a:	xor    r9,r9
   14000c60d:	mov    QWORD PTR [rsp+0x20],rsp
   14000c612:	mov    QWORD PTR [rsp+0x28],r8
   14000c617:	call   0x14000f5e6
   14000c61c:	add    rsp,0x4d8
   14000c623:	ret    
   14000c624:	int3   
   14000c625:	int3   
   14000c626:	int3   
   14000c627:	int3   
   14000c628:	int3   
   14000c629:	int3   
   14000c62a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c630:	mov    QWORD PTR [rsp+0x8],rcx
   14000c635:	mov    QWORD PTR [rsp+0x18],rdx
   14000c63a:	mov    DWORD PTR [rsp+0x10],r8d
   14000c63f:	mov    r9,0x19930520
   14000c646:	jmp    0x14000c650
   14000c648:	int3   
   14000c649:	int3   
   14000c64a:	int3   
   14000c64b:	int3   
   14000c64c:	int3   
   14000c64d:	int3   
   14000c64e:	xchg   ax,ax
   14000c650:	ret    
   14000c651:	int3   
   14000c652:	int3   
   14000c653:	int3   
   14000c654:	int3   
   14000c655:	int3   
   14000c656:	int3   
   14000c657:	nop    WORD PTR [rax+rax*1+0x0]
   14000c660:	ret    
   14000c661:	int3   
   14000c662:	int3   
   14000c663:	int3   
   14000c664:	mov    QWORD PTR [rsp+0x8],rbx
   14000c669:	push   rdi
   14000c66a:	sub    rsp,0x20
   14000c66e:	mov    eax,DWORD PTR [rip+0x12044]        # 0x14001e6b8
   14000c674:	xor    ebx,ebx
   14000c676:	mov    edi,0x14
   14000c67b:	test   eax,eax
   14000c67d:	jne    0x14000c686
   14000c67f:	mov    eax,0x200
   14000c684:	jmp    0x14000c68b
   14000c686:	cmp    eax,edi
   14000c688:	cmovl  eax,edi
   14000c68b:	movsxd rcx,eax
   14000c68e:	mov    edx,0x8
   14000c693:	mov    DWORD PTR [rip+0x1201f],eax        # 0x14001e6b8
   14000c699:	call   0x140008a3c
   14000c69e:	mov    QWORD PTR [rip+0x1200b],rax        # 0x14001e6b0
   14000c6a5:	test   rax,rax
   14000c6a8:	jne    0x14000c6ce
   14000c6aa:	lea    edx,[rax+0x8]
   14000c6ad:	mov    rcx,rdi
   14000c6b0:	mov    DWORD PTR [rip+0x12002],edi        # 0x14001e6b8
   14000c6b6:	call   0x140008a3c
   14000c6bb:	mov    QWORD PTR [rip+0x11fee],rax        # 0x14001e6b0
   14000c6c2:	test   rax,rax
   14000c6c5:	jne    0x14000c6ce
   14000c6c7:	mov    eax,0x1a
   14000c6cc:	jmp    0x14000c6f1
   14000c6ce:	lea    rcx,[rip+0xf78b]        # 0x14001be60
   14000c6d5:	mov    QWORD PTR [rbx+rax*1],rcx
   14000c6d9:	add    rcx,0x30
   14000c6dd:	lea    rbx,[rbx+0x8]
   14000c6e1:	dec    rdi
   14000c6e4:	je     0x14000c6ef
   14000c6e6:	mov    rax,QWORD PTR [rip+0x11fc3]        # 0x14001e6b0
   14000c6ed:	jmp    0x14000c6d5
   14000c6ef:	xor    eax,eax
   14000c6f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6f6:	add    rsp,0x20
   14000c6fa:	pop    rdi
   14000c6fb:	ret    
   14000c6fc:	sub    rsp,0x28
   14000c700:	call   0x14000e5e8
   14000c705:	cmp    BYTE PTR [rip+0x107b8],0x0        # 0x14001cec4
   14000c70c:	je     0x14000c713
   14000c70e:	call   0x14000e6dc
   14000c713:	mov    rcx,QWORD PTR [rip+0x11f96]        # 0x14001e6b0
   14000c71a:	call   0x140006aa0
   14000c71f:	and    QWORD PTR [rip+0x11f89],0x0        # 0x14001e6b0
   14000c727:	add    rsp,0x28
   14000c72b:	ret    
   14000c72c:	lea    rax,[rip+0xf72d]        # 0x14001be60
   14000c733:	ret    
   14000c734:	rex push rbx
   14000c736:	sub    rsp,0x20
   14000c73a:	mov    rbx,rcx
   14000c73d:	lea    rcx,[rip+0xf71c]        # 0x14001be60
   14000c744:	cmp    rbx,rcx
   14000c747:	jb     0x14000c789
   14000c749:	lea    rax,[rip+0xfaa0]        # 0x14001c1f0
   14000c750:	cmp    rbx,rax
   14000c753:	ja     0x14000c789
   14000c755:	mov    rdx,rbx
   14000c758:	movabs rax,0x2aaaaaaaaaaaaaab
   14000c762:	sub    rdx,rcx
   14000c765:	imul   rdx
   14000c768:	sar    rdx,0x3
   14000c76c:	mov    rcx,rdx
   14000c76f:	shr    rcx,0x3f
   14000c773:	add    rcx,rdx
   14000c776:	add    ecx,0x10
   14000c779:	call   0x14000ae60
   14000c77e:	bts    DWORD PTR [rbx+0x18],0xf
   14000c783:	add    rsp,0x20
   14000c787:	pop    rbx
   14000c788:	ret    
   14000c789:	lea    rcx,[rbx+0x30]
   14000c78d:	add    rsp,0x20
   14000c791:	pop    rbx
   14000c792:	rex.W jmp QWORD PTR [rip+0x6b5f]        # 0x1400132f8
   14000c799:	int3   
   14000c79a:	int3   
   14000c79b:	int3   
   14000c79c:	rex push rbx
   14000c79e:	sub    rsp,0x20
   14000c7a2:	mov    rbx,rdx
   14000c7a5:	cmp    ecx,0x14
   14000c7a8:	jge    0x14000c7bd
   14000c7aa:	add    ecx,0x10
   14000c7ad:	call   0x14000ae60
   14000c7b2:	bts    DWORD PTR [rbx+0x18],0xf
   14000c7b7:	add    rsp,0x20
   14000c7bb:	pop    rbx
   14000c7bc:	ret    
   14000c7bd:	lea    rcx,[rdx+0x30]
   14000c7c1:	add    rsp,0x20
   14000c7c5:	pop    rbx
   14000c7c6:	rex.W jmp QWORD PTR [rip+0x6b2b]        # 0x1400132f8
   14000c7cd:	int3   
   14000c7ce:	int3   
   14000c7cf:	int3   
   14000c7d0:	lea    rdx,[rip+0xf689]        # 0x14001be60
   14000c7d7:	cmp    rcx,rdx
   14000c7da:	jb     0x14000c813
   14000c7dc:	lea    rax,[rip+0xfa0d]        # 0x14001c1f0
   14000c7e3:	cmp    rcx,rax
   14000c7e6:	ja     0x14000c813
   14000c7e8:	btr    DWORD PTR [rcx+0x18],0xf
   14000c7ed:	sub    rcx,rdx
   14000c7f0:	movabs rax,0x2aaaaaaaaaaaaaab
   14000c7fa:	imul   rcx
   14000c7fd:	sar    rdx,0x3
   14000c801:	mov    rcx,rdx
   14000c804:	shr    rcx,0x3f
   14000c808:	add    rcx,rdx
   14000c80b:	add    ecx,0x10
   14000c80e:	jmp    0x14000b048
   14000c813:	add    rcx,0x30
   14000c817:	rex.W jmp QWORD PTR [rip+0x6ae2]        # 0x140013300
   14000c81e:	int3   
   14000c81f:	int3   
   14000c820:	cmp    ecx,0x14
   14000c823:	jge    0x14000c832
   14000c825:	btr    DWORD PTR [rdx+0x18],0xf
   14000c82a:	add    ecx,0x10
   14000c82d:	jmp    0x14000b048
   14000c832:	lea    rcx,[rdx+0x30]
   14000c836:	rex.W jmp QWORD PTR [rip+0x6ac3]        # 0x140013300
   14000c83d:	int3   
   14000c83e:	int3   
   14000c83f:	int3   
   14000c840:	mov    QWORD PTR [rsp+0x8],rbx
   14000c845:	mov    QWORD PTR [rsp+0x10],rsi
   14000c84a:	push   rdi
   14000c84b:	sub    rsp,0x40
   14000c84f:	mov    ebx,edx
   14000c851:	mov    rdx,rcx
   14000c854:	lea    rcx,[rsp+0x20]
   14000c859:	mov    edi,r9d
   14000c85c:	mov    esi,r8d
   14000c85f:	call   0x140008d54
   14000c864:	mov    rax,QWORD PTR [rsp+0x28]
   14000c869:	movzx  edx,bl
   14000c86c:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14000c871:	jne    0x14000c891
   14000c873:	test   esi,esi
   14000c875:	je     0x14000c88b
   14000c877:	mov    rax,QWORD PTR [rsp+0x20]
   14000c87c:	mov    rcx,QWORD PTR [rax+0x108]
   14000c883:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000c887:	and    eax,esi
   14000c889:	jmp    0x14000c88d
   14000c88b:	xor    eax,eax
   14000c88d:	test   eax,eax
   14000c88f:	je     0x14000c896
   14000c891:	mov    eax,0x1
   14000c896:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c89b:	je     0x14000c8a9
   14000c89d:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c8a2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c8a9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c8ae:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c8b3:	add    rsp,0x40
   14000c8b7:	pop    rdi
   14000c8b8:	ret    
   14000c8b9:	int3   
   14000c8ba:	int3   
   14000c8bb:	int3   
   14000c8bc:	mov    edx,ecx
   14000c8be:	mov    r9d,0x4
   14000c8c4:	xor    r8d,r8d
   14000c8c7:	xor    ecx,ecx
   14000c8c9:	jmp    0x14000c840
   14000c8ce:	int3   
   14000c8cf:	int3   
   14000c8d0:	rex push rbx
   14000c8d2:	sub    rsp,0x20
   14000c8d6:	test   rcx,rcx
   14000c8d9:	je     0x14000c8e8
   14000c8db:	test   rdx,rdx
   14000c8de:	je     0x14000c8e8
   14000c8e0:	test   r8,r8
   14000c8e3:	jne    0x14000c901
   14000c8e5:	mov    BYTE PTR [rcx],r8b
   14000c8e8:	call   0x140008888
   14000c8ed:	mov    ebx,0x16
   14000c8f2:	mov    DWORD PTR [rax],ebx
   14000c8f4:	call   0x1400087bc
   14000c8f9:	mov    eax,ebx
   14000c8fb:	add    rsp,0x20
   14000c8ff:	pop    rbx
   14000c900:	ret    
   14000c901:	mov    r9,rcx
   14000c904:	sub    r9,r8
   14000c907:	mov    al,BYTE PTR [r8]
   14000c90a:	mov    BYTE PTR [r9+r8*1],al
   14000c90e:	inc    r8
   14000c911:	test   al,al
   14000c913:	je     0x14000c91a
   14000c915:	dec    rdx
   14000c918:	jne    0x14000c907
   14000c91a:	test   rdx,rdx
   14000c91d:	jne    0x14000c92d
   14000c91f:	mov    BYTE PTR [rcx],dl
   14000c921:	call   0x140008888
   14000c926:	mov    ebx,0x22
   14000c92b:	jmp    0x14000c8f2
   14000c92d:	xor    eax,eax
   14000c92f:	jmp    0x14000c8fb
   14000c931:	int3   
   14000c932:	int3   
   14000c933:	int3   
   14000c934:	mov    QWORD PTR [rsp+0x8],rbx
   14000c939:	push   rdi
   14000c93a:	sub    rsp,0x20
   14000c93e:	mov    rdi,r8
   14000c941:	mov    rbx,rdx
   14000c944:	test   rcx,rcx
   14000c947:	je     0x14000c966
   14000c949:	xor    edx,edx
   14000c94b:	lea    rax,[rdx-0x20]
   14000c94f:	div    rcx
   14000c952:	cmp    rax,rbx
   14000c955:	jae    0x14000c966
   14000c957:	call   0x140008888
   14000c95c:	mov    DWORD PTR [rax],0xc
   14000c962:	xor    eax,eax
   14000c964:	jmp    0x14000c9c3
   14000c966:	imul   rbx,rcx
   14000c96a:	mov    eax,0x1
   14000c96f:	test   rbx,rbx
   14000c972:	cmove  rbx,rax
   14000c976:	xor    eax,eax
   14000c978:	cmp    rbx,0xffffffffffffffe0
   14000c97c:	ja     0x14000c996
   14000c97e:	mov    rcx,QWORD PTR [rip+0x10b93]        # 0x14001d518
   14000c985:	lea    edx,[rax+0x8]
   14000c988:	mov    r8,rbx
   14000c98b:	call   QWORD PTR [rip+0x68ef]        # 0x140013280
   14000c991:	test   rax,rax
   14000c994:	jne    0x14000c9c3
   14000c996:	cmp    DWORD PTR [rip+0x1101b],0x0        # 0x14001d9b8
   14000c99d:	je     0x14000c9b8
   14000c99f:	mov    rcx,rbx
   14000c9a2:	call   0x140009e8c
   14000c9a7:	test   eax,eax
   14000c9a9:	jne    0x14000c976
   14000c9ab:	test   rdi,rdi
   14000c9ae:	je     0x14000c962
   14000c9b0:	mov    DWORD PTR [rdi],0xc
   14000c9b6:	jmp    0x14000c962
   14000c9b8:	test   rdi,rdi
   14000c9bb:	je     0x14000c9c3
   14000c9bd:	mov    DWORD PTR [rdi],0xc
   14000c9c3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c9c8:	add    rsp,0x20
   14000c9cc:	pop    rdi
   14000c9cd:	ret    
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	sub    rsp,0x28
   14000c9d4:	test   rcx,rcx
   14000c9d7:	jne    0x14000c9ee
   14000c9d9:	call   0x140008888
   14000c9de:	mov    DWORD PTR [rax],0x16
   14000c9e4:	call   0x1400087bc
   14000c9e9:	or     eax,0xffffffff
   14000c9ec:	jmp    0x14000c9f1
   14000c9ee:	mov    eax,DWORD PTR [rcx+0x1c]
   14000c9f1:	add    rsp,0x28
   14000c9f5:	ret    
   14000c9f6:	int3   
   14000c9f7:	int3   
   14000c9f8:	rex push rbx
   14000c9fa:	sub    rsp,0x20
   14000c9fe:	movsxd rbx,ecx
   14000ca01:	cmp    ebx,0xfffffffe
   14000ca04:	jne    0x14000ca13
   14000ca06:	call   0x140008888
   14000ca0b:	mov    DWORD PTR [rax],0x9
   14000ca11:	jmp    0x14000ca63
   14000ca13:	call   0x140007a7c
   14000ca18:	test   eax,eax
   14000ca1a:	jns    0x14000ca21
   14000ca1c:	or     eax,0xffffffff
   14000ca1f:	jmp    0x14000ca65
   14000ca21:	test   ebx,ebx
   14000ca23:	js     0x14000ca53
   14000ca25:	cmp    ebx,DWORD PTR [rip+0x12c99]        # 0x14001f6c4
   14000ca2b:	jae    0x14000ca53
   14000ca2d:	mov    rcx,rbx
   14000ca30:	mov    rax,rbx
   14000ca33:	lea    rdx,[rip+0x12ca6]        # 0x14001f6e0
   14000ca3a:	sar    rax,0x5
   14000ca3e:	and    ecx,0x1f
   14000ca41:	mov    rax,QWORD PTR [rdx+rax*8]
   14000ca45:	imul   rcx,rcx,0x58
   14000ca49:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14000ca4e:	and    eax,0x40
   14000ca51:	jmp    0x14000ca65
   14000ca53:	call   0x140008888
   14000ca58:	mov    DWORD PTR [rax],0x9
   14000ca5e:	call   0x1400087bc
   14000ca63:	xor    eax,eax
   14000ca65:	add    rsp,0x20
   14000ca69:	pop    rbx
   14000ca6a:	ret    
   14000ca6b:	int3   
   14000ca6c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ca71:	mov    DWORD PTR [rsp+0x8],ecx
   14000ca75:	push   rsi
   14000ca76:	push   rdi
   14000ca77:	push   r12
   14000ca79:	push   r14
   14000ca7b:	push   r15
   14000ca7d:	sub    rsp,0x20
   14000ca81:	mov    r14d,r8d
   14000ca84:	mov    r15,rdx
   14000ca87:	movsxd rdi,ecx
   14000ca8a:	cmp    edi,0xfffffffe
   14000ca8d:	jne    0x14000caa7
   14000ca8f:	call   0x140008818
   14000ca94:	and    DWORD PTR [rax],0x0
   14000ca97:	call   0x140008888
   14000ca9c:	mov    DWORD PTR [rax],0x9
   14000caa2:	jmp    0x14000cb43
   14000caa7:	call   0x140007a7c
   14000caac:	test   eax,eax
   14000caae:	js     0x14000cb43
   14000cab4:	test   edi,edi
   14000cab6:	js     0x14000cb2b
   14000cab8:	cmp    edi,DWORD PTR [rip+0x12c06]        # 0x14001f6c4
   14000cabe:	jae    0x14000cb2b
   14000cac0:	mov    rbx,rdi
   14000cac3:	mov    rsi,rdi
   14000cac6:	sar    rsi,0x5
   14000caca:	lea    r12,[rip+0x12c0f]        # 0x14001f6e0
   14000cad1:	and    ebx,0x1f
   14000cad4:	imul   rbx,rbx,0x58
   14000cad8:	mov    rax,QWORD PTR [r12+rsi*8]
   14000cadc:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14000cae1:	and    ecx,0x1
   14000cae4:	je     0x14000cb2b
   14000cae6:	mov    ecx,edi
   14000cae8:	call   0x14000e784
   14000caed:	nop
   14000caee:	mov    rax,QWORD PTR [r12+rsi*8]
   14000caf2:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14000caf7:	je     0x14000cb0a
   14000caf9:	mov    r8d,r14d
   14000cafc:	mov    rdx,r15
   14000caff:	mov    ecx,edi
   14000cb01:	call   0x14000cb58
   14000cb06:	mov    ebx,eax
   14000cb08:	jmp    0x14000cb20
   14000cb0a:	call   0x140008888
   14000cb0f:	mov    DWORD PTR [rax],0x9
   14000cb15:	call   0x140008818
   14000cb1a:	and    DWORD PTR [rax],0x0
   14000cb1d:	or     ebx,0xffffffff
   14000cb20:	mov    ecx,edi
   14000cb22:	call   0x14000e94c
   14000cb27:	mov    eax,ebx
   14000cb29:	jmp    0x14000cb46
   14000cb2b:	call   0x140008818
   14000cb30:	and    DWORD PTR [rax],0x0
   14000cb33:	call   0x140008888
   14000cb38:	mov    DWORD PTR [rax],0x9
   14000cb3e:	call   0x1400087bc
   14000cb43:	or     eax,0xffffffff
   14000cb46:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cb4b:	add    rsp,0x20
   14000cb4f:	pop    r15
   14000cb51:	pop    r14
   14000cb53:	pop    r12
   14000cb55:	pop    rdi
   14000cb56:	pop    rsi
   14000cb57:	ret    
   14000cb58:	mov    QWORD PTR [rsp+0x20],rbx
   14000cb5d:	push   rbp
   14000cb5e:	push   rsi
   14000cb5f:	push   rdi
   14000cb60:	push   r12
   14000cb62:	push   r13
   14000cb64:	push   r14
   14000cb66:	push   r15
   14000cb68:	lea    rbp,[rsp-0x1a30]
   14000cb70:	mov    eax,0x1b30
   14000cb75:	call   0x14000e9f0
   14000cb7a:	sub    rsp,rax
   14000cb7d:	mov    rax,QWORD PTR [rip+0xe504]        # 0x14001b088
   14000cb84:	xor    rax,rsp
   14000cb87:	mov    QWORD PTR [rbp+0x1a20],rax
   14000cb8e:	xor    edi,edi
   14000cb90:	mov    r15d,r8d
   14000cb93:	mov    r14,rdx
   14000cb96:	and    DWORD PTR [rsp+0x48],edi
   14000cb9a:	movsxd rbx,ecx
   14000cb9d:	test   r8d,r8d
   14000cba0:	jne    0x14000cba9
   14000cba2:	xor    eax,eax
   14000cba4:	jmp    0x14000d2a2
   14000cba9:	test   rdx,rdx
   14000cbac:	jne    0x14000cbcd
   14000cbae:	call   0x140008818
   14000cbb3:	and    DWORD PTR [rax],edi
   14000cbb5:	call   0x140008888
   14000cbba:	mov    DWORD PTR [rax],0x16
   14000cbc0:	call   0x1400087bc
   14000cbc5:	or     eax,0xffffffff
   14000cbc8:	jmp    0x14000d2a2
   14000cbcd:	call   0x140007a7c
   14000cbd2:	test   eax,eax
   14000cbd4:	js     0x14000cbc5
   14000cbd6:	lea    eax,[rbx-0x1]
   14000cbd9:	cmp    eax,0x1
   14000cbdc:	ja     0x14000cc01
   14000cbde:	mov    rsi,rbx
   14000cbe1:	imul   rsi,rsi,0x58
   14000cbe5:	add    rsi,QWORD PTR [rip+0x12af4]        # 0x14001f6e0
   14000cbec:	je     0x14000cc01
   14000cbee:	lea    eax,[rbx-0x1]
   14000cbf1:	neg    eax
   14000cbf3:	sbb    ecx,ecx
   14000cbf5:	add    ecx,0xfffffff5
   14000cbf8:	call   QWORD PTR [rip+0x65fa]        # 0x1400131f8
   14000cbfe:	mov    QWORD PTR [rsi],rax
   14000cc01:	mov    r12,rbx
   14000cc04:	lea    rax,[rip+0x12ad5]        # 0x14001f6e0
   14000cc0b:	mov    r13,rbx
   14000cc0e:	sar    r13,0x5
   14000cc12:	and    r12d,0x1f
   14000cc16:	mov    rcx,QWORD PTR [rax+r13*8]
   14000cc1a:	mov    QWORD PTR [rsp+0x50],r13
   14000cc1f:	imul   r12,r12,0x58
   14000cc23:	mov    sil,BYTE PTR [r12+rcx*1+0x38]
   14000cc28:	add    sil,sil
   14000cc2b:	sar    sil,1
   14000cc2e:	lea    eax,[rsi-0x1]
   14000cc31:	cmp    al,0x1
   14000cc33:	ja     0x14000cc42
   14000cc35:	mov    eax,r15d
   14000cc38:	not    eax
   14000cc3a:	test   al,0x1
   14000cc3c:	je     0x14000cbae
   14000cc42:	test   BYTE PTR [r12+rcx*1+0x8],0x20
   14000cc48:	je     0x14000cc57
   14000cc4a:	xor    edx,edx
   14000cc4c:	mov    ecx,ebx
   14000cc4e:	lea    r8d,[rdx+0x2]
   14000cc52:	call   0x14000d3bc
   14000cc57:	mov    ecx,ebx
   14000cc59:	call   0x14000c9f8
   14000cc5e:	test   eax,eax
   14000cc60:	je     0x14000cf22
   14000cc66:	lea    rax,[rip+0x12a73]        # 0x14001f6e0
   14000cc6d:	mov    rax,QWORD PTR [rax+r13*8]
   14000cc71:	test   BYTE PTR [r12+rax*1+0x8],0x80
   14000cc77:	je     0x14000cf22
   14000cc7d:	call   0x14000719c
   14000cc82:	xor    ebx,ebx
   14000cc84:	lea    rdx,[rsp+0x5c]
   14000cc89:	mov    rcx,QWORD PTR [rax+0xc0]
   14000cc90:	lea    rax,[rip+0x12a49]        # 0x14001f6e0
   14000cc97:	cmp    QWORD PTR [rcx+0x138],rbx
   14000cc9e:	mov    rcx,QWORD PTR [rax+r13*8]
   14000cca2:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000cca6:	sete   bl
   14000cca9:	call   QWORD PTR [rip+0x6699]        # 0x140013348
   14000ccaf:	test   eax,eax
   14000ccb1:	je     0x14000cf22
   14000ccb7:	test   ebx,ebx
   14000ccb9:	je     0x14000ccc4
   14000ccbb:	test   sil,sil
   14000ccbe:	je     0x14000cf22
   14000ccc4:	call   QWORD PTR [rip+0x6676]        # 0x140013340
   14000ccca:	and    DWORD PTR [rsp+0x58],edi
   14000ccce:	mov    rbx,r14
   14000ccd1:	mov    DWORD PTR [rsp+0x5c],eax
   14000ccd5:	test   r15d,r15d
   14000ccd8:	je     0x14000cf19
   14000ccde:	test   sil,sil
   14000cce1:	jne    0x14000ce6b
   14000cce7:	mov    cl,BYTE PTR [rbx]
   14000cce9:	xor    eax,eax
   14000cceb:	cmp    cl,0xa
   14000ccee:	sete   al
   14000ccf1:	mov    DWORD PTR [rsp+0x44],eax
   14000ccf5:	lea    rax,[rip+0x129e4]        # 0x14001f6e0
   14000ccfc:	mov    rdx,QWORD PTR [rax+r13*8]
   14000cd00:	cmp    DWORD PTR [r12+rdx*1+0x50],0x0
   14000cd06:	je     0x14000cd28
   14000cd08:	mov    al,BYTE PTR [r12+rdx*1+0x4c]
   14000cd0d:	mov    BYTE PTR [rsp+0x61],cl
   14000cd11:	mov    r8d,0x2
   14000cd17:	mov    BYTE PTR [rsp+0x60],al
   14000cd1b:	and    DWORD PTR [r12+rdx*1+0x50],0x0
   14000cd21:	lea    rdx,[rsp+0x60]
   14000cd26:	jmp    0x14000cd71
   14000cd28:	movsx  ecx,cl
   14000cd2b:	call   0x14000d4e8
   14000cd30:	test   eax,eax
   14000cd32:	je     0x14000cd68
   14000cd34:	mov    rax,r15
   14000cd37:	sub    rax,rbx
   14000cd3a:	add    rax,r14
   14000cd3d:	cmp    rax,0x1
   14000cd41:	jle    0x14000ceef
   14000cd47:	lea    rcx,[rsp+0x40]
   14000cd4c:	mov    r8d,0x2
   14000cd52:	mov    rdx,rbx
   14000cd55:	call   0x14000da4c
   14000cd5a:	cmp    eax,0xffffffff
   14000cd5d:	je     0x14000cf10
   14000cd63:	inc    rbx
   14000cd66:	jmp    0x14000cd84
   14000cd68:	mov    r8d,0x1
   14000cd6e:	mov    rdx,rbx
   14000cd71:	lea    rcx,[rsp+0x40]
   14000cd76:	call   0x14000da4c
   14000cd7b:	cmp    eax,0xffffffff
   14000cd7e:	je     0x14000cf10
   14000cd84:	and    QWORD PTR [rsp+0x38],0x0
   14000cd8a:	and    QWORD PTR [rsp+0x30],0x0
   14000cd90:	mov    ecx,DWORD PTR [rsp+0x5c]
   14000cd94:	lea    rax,[rsp+0x60]
   14000cd99:	lea    r8,[rsp+0x40]
   14000cd9e:	mov    r9d,0x1
   14000cda4:	xor    edx,edx
   14000cda6:	mov    DWORD PTR [rsp+0x28],0x5
   14000cdae:	inc    rbx
   14000cdb1:	mov    QWORD PTR [rsp+0x20],rax
   14000cdb6:	call   QWORD PTR [rip+0x63b4]        # 0x140013170
   14000cdbc:	mov    r13d,eax
   14000cdbf:	test   eax,eax
   14000cdc1:	je     0x14000cf10
   14000cdc7:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cdcc:	and    QWORD PTR [rsp+0x20],0x0
   14000cdd2:	lea    rax,[rip+0x12907]        # 0x14001f6e0
   14000cdd9:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000cddd:	lea    r9,[rsp+0x58]
   14000cde2:	lea    rdx,[rsp+0x60]
   14000cde7:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000cdeb:	mov    r8d,r13d
   14000cdee:	call   QWORD PTR [rip+0x638c]        # 0x140013180
   14000cdf4:	test   eax,eax
   14000cdf6:	je     0x14000d22a
   14000cdfc:	mov    edi,ebx
   14000cdfe:	sub    edi,r14d
   14000ce01:	add    edi,DWORD PTR [rsp+0x48]
   14000ce05:	cmp    DWORD PTR [rsp+0x58],r13d
   14000ce0a:	jl     0x14000cf10
   14000ce10:	cmp    DWORD PTR [rsp+0x44],0x0
   14000ce15:	mov    r13,QWORD PTR [rsp+0x50]
   14000ce1a:	je     0x14000cee0
   14000ce20:	and    QWORD PTR [rsp+0x20],0x0
   14000ce26:	lea    rax,[rip+0x128b3]        # 0x14001f6e0
   14000ce2d:	mov    BYTE PTR [rsp+0x60],0xd
   14000ce32:	mov    rcx,QWORD PTR [rax+r13*8]
   14000ce36:	lea    r9,[rsp+0x58]
   14000ce3b:	lea    rdx,[rsp+0x60]
   14000ce40:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000ce44:	mov    r8d,0x1
   14000ce4a:	call   QWORD PTR [rip+0x6330]        # 0x140013180
   14000ce50:	test   eax,eax
   14000ce52:	je     0x14000d22a
   14000ce58:	cmp    DWORD PTR [rsp+0x58],0x1
   14000ce5d:	jl     0x14000cf10
   14000ce63:	inc    DWORD PTR [rsp+0x48]
   14000ce67:	inc    edi
   14000ce69:	jmp    0x14000cee0
   14000ce6b:	lea    eax,[rsi-0x1]
   14000ce6e:	cmp    al,0x1
   14000ce70:	ja     0x14000ce90
   14000ce72:	movzx  eax,WORD PTR [rbx]
   14000ce75:	xor    r13d,r13d
   14000ce78:	cmp    ax,0xa
   14000ce7c:	mov    WORD PTR [rsp+0x40],ax
   14000ce81:	sete   r13b
   14000ce85:	add    rbx,0x2
   14000ce89:	mov    DWORD PTR [rsp+0x44],r13d
   14000ce8e:	jmp    0x14000ce95
   14000ce90:	mov    r13d,DWORD PTR [rsp+0x44]
   14000ce95:	lea    eax,[rsi-0x1]
   14000ce98:	cmp    al,0x1
   14000ce9a:	ja     0x14000cedb
   14000ce9c:	movzx  ecx,WORD PTR [rsp+0x40]
   14000cea1:	call   0x14000e978
   14000cea6:	cmp    ax,WORD PTR [rsp+0x40]
   14000ceab:	jne    0x14000d22a
   14000ceb1:	add    edi,0x2
   14000ceb4:	test   r13d,r13d
   14000ceb7:	je     0x14000cedb
   14000ceb9:	mov    eax,0xd
   14000cebe:	mov    ecx,eax
   14000cec0:	mov    WORD PTR [rsp+0x40],ax
   14000cec5:	call   0x14000e978
   14000ceca:	cmp    ax,WORD PTR [rsp+0x40]
   14000cecf:	jne    0x14000d22a
   14000ced5:	inc    edi
   14000ced7:	inc    DWORD PTR [rsp+0x48]
   14000cedb:	mov    r13,QWORD PTR [rsp+0x50]
   14000cee0:	mov    eax,ebx
   14000cee2:	sub    eax,r14d
   14000cee5:	cmp    eax,r15d
   14000cee8:	jae    0x14000cf10
   14000ceea:	jmp    0x14000ccde
   14000ceef:	mov    al,BYTE PTR [rbx]
   14000cef1:	lea    rdx,[rip+0x127e8]        # 0x14001f6e0
   14000cef8:	inc    edi
   14000cefa:	mov    rcx,QWORD PTR [rdx+r13*8]
   14000cefe:	mov    BYTE PTR [r12+rcx*1+0x4c],al
   14000cf03:	mov    rax,QWORD PTR [rdx+r13*8]
   14000cf07:	mov    DWORD PTR [r12+rax*1+0x50],0x1
   14000cf10:	mov    ebx,DWORD PTR [rsp+0x44]
   14000cf14:	jmp    0x14000d232
   14000cf19:	mov    ebx,DWORD PTR [rsp+0x44]
   14000cf1d:	jmp    0x14000d236
   14000cf22:	lea    rax,[rip+0x127b7]        # 0x14001f6e0
   14000cf29:	mov    rcx,QWORD PTR [rax+r13*8]
   14000cf2d:	test   BYTE PTR [r12+rcx*1+0x8],0x80
   14000cf33:	je     0x14000d204
   14000cf39:	xor    ebx,ebx
   14000cf3b:	mov    r13,r14
   14000cf3e:	mov    DWORD PTR [rsp+0x44],ebx
   14000cf42:	test   sil,sil
   14000cf45:	jne    0x14000d013
   14000cf4b:	test   r15d,r15d
   14000cf4e:	je     0x14000d262
   14000cf54:	lea    edx,[rbx+0xd]
   14000cf57:	mov    ebx,DWORD PTR [rsp+0x48]
   14000cf5b:	lea    rsi,[rbp+0x620]
   14000cf62:	xor    ecx,ecx
   14000cf64:	mov    eax,r13d
   14000cf67:	sub    eax,r14d
   14000cf6a:	cmp    eax,r15d
   14000cf6d:	jae    0x14000cf95
   14000cf6f:	mov    al,BYTE PTR [r13+0x0]
   14000cf73:	inc    r13
   14000cf76:	cmp    al,0xa
   14000cf78:	jne    0x14000cf84
   14000cf7a:	mov    BYTE PTR [rsi],dl
   14000cf7c:	inc    ebx
   14000cf7e:	inc    rsi
   14000cf81:	inc    rcx
   14000cf84:	inc    rcx
   14000cf87:	mov    BYTE PTR [rsi],al
   14000cf89:	inc    rsi
   14000cf8c:	cmp    rcx,0x13ff
   14000cf93:	jb     0x14000cf64
   14000cf95:	and    QWORD PTR [rsp+0x20],0x0
   14000cf9b:	lea    rax,[rbp+0x620]
   14000cfa2:	mov    r8d,esi
   14000cfa5:	sub    r8d,eax
   14000cfa8:	mov    rax,QWORD PTR [rsp+0x50]
   14000cfad:	lea    rcx,[rip+0x1272c]        # 0x14001f6e0
   14000cfb4:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000cfb8:	lea    r9,[rsp+0x4c]
   14000cfbd:	lea    rdx,[rbp+0x620]
   14000cfc4:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000cfc8:	mov    DWORD PTR [rsp+0x48],ebx
   14000cfcc:	call   QWORD PTR [rip+0x61ae]        # 0x140013180
   14000cfd2:	mov    ebx,DWORD PTR [rsp+0x44]
   14000cfd6:	test   eax,eax
   14000cfd8:	je     0x14000d22a
   14000cfde:	add    edi,DWORD PTR [rsp+0x4c]
   14000cfe2:	lea    rax,[rbp+0x620]
   14000cfe9:	sub    rsi,rax
   14000cfec:	movsxd rax,DWORD PTR [rsp+0x4c]
   14000cff1:	cmp    rax,rsi
   14000cff4:	jl     0x14000d232
   14000cffa:	mov    eax,r13d
   14000cffd:	mov    edx,0xd
   14000d002:	sub    eax,r14d
   14000d005:	cmp    eax,r15d
   14000d008:	jb     0x14000cf57
   14000d00e:	jmp    0x14000d232
   14000d013:	cmp    sil,0x2
   14000d017:	jne    0x14000d0f2
   14000d01d:	test   r15d,r15d
   14000d020:	je     0x14000d262
   14000d026:	mov    edx,0xd
   14000d02b:	mov    ebx,DWORD PTR [rsp+0x48]
   14000d02f:	lea    rsi,[rbp+0x620]
   14000d036:	xor    ecx,ecx
   14000d038:	mov    eax,r13d
   14000d03b:	sub    eax,r14d
   14000d03e:	cmp    eax,r15d
   14000d041:	jae    0x14000d074
   14000d043:	movzx  eax,WORD PTR [r13+0x0]
   14000d048:	add    r13,0x2
   14000d04c:	cmp    ax,0xa
   14000d050:	jne    0x14000d060
   14000d052:	mov    WORD PTR [rsi],dx
   14000d055:	add    ebx,0x2
   14000d058:	add    rsi,0x2
   14000d05c:	add    rcx,0x2
   14000d060:	add    rcx,0x2
   14000d064:	mov    WORD PTR [rsi],ax
   14000d067:	add    rsi,0x2
   14000d06b:	cmp    rcx,0x13fe
   14000d072:	jb     0x14000d038
   14000d074:	and    QWORD PTR [rsp+0x20],0x0
   14000d07a:	lea    rax,[rbp+0x620]
   14000d081:	mov    r8d,esi
   14000d084:	sub    r8d,eax
   14000d087:	mov    rax,QWORD PTR [rsp+0x50]
   14000d08c:	lea    rcx,[rip+0x1264d]        # 0x14001f6e0
   14000d093:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000d097:	lea    r9,[rsp+0x4c]
   14000d09c:	lea    rdx,[rbp+0x620]
   14000d0a3:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000d0a7:	mov    DWORD PTR [rsp+0x48],ebx
   14000d0ab:	call   QWORD PTR [rip+0x60cf]        # 0x140013180
   14000d0b1:	mov    ebx,DWORD PTR [rsp+0x44]
   14000d0b5:	test   eax,eax
   14000d0b7:	je     0x14000d22a
   14000d0bd:	add    edi,DWORD PTR [rsp+0x4c]
   14000d0c1:	lea    rax,[rbp+0x620]
   14000d0c8:	sub    rsi,rax
   14000d0cb:	movsxd rax,DWORD PTR [rsp+0x4c]
   14000d0d0:	cmp    rax,rsi
   14000d0d3:	jl     0x14000d232
   14000d0d9:	mov    eax,r13d
   14000d0dc:	mov    edx,0xd
   14000d0e1:	sub    eax,r14d
   14000d0e4:	cmp    eax,r15d
   14000d0e7:	jb     0x14000d02b
   14000d0ed:	jmp    0x14000d232
   14000d0f2:	test   r15d,r15d
   14000d0f5:	je     0x14000d262
   14000d0fb:	mov    r8d,0xd
   14000d101:	lea    rcx,[rsp+0x70]
   14000d106:	xor    edx,edx
   14000d108:	mov    eax,r13d
   14000d10b:	sub    eax,r14d
   14000d10e:	cmp    eax,r15d
   14000d111:	jae    0x14000d142
   14000d113:	movzx  eax,WORD PTR [r13+0x0]
   14000d118:	add    r13,0x2
   14000d11c:	cmp    ax,0xa
   14000d120:	jne    0x14000d12e
   14000d122:	mov    WORD PTR [rcx],r8w
   14000d126:	add    rcx,0x2
   14000d12a:	add    rdx,0x2
   14000d12e:	add    rdx,0x2
   14000d132:	mov    WORD PTR [rcx],ax
   14000d135:	add    rcx,0x2
   14000d139:	cmp    rdx,0x6a8
   14000d140:	jb     0x14000d108
   14000d142:	and    QWORD PTR [rsp+0x38],0x0
   14000d148:	and    QWORD PTR [rsp+0x30],0x0
   14000d14e:	lea    rax,[rsp+0x70]
   14000d153:	sub    ecx,eax
   14000d155:	lea    r8,[rsp+0x70]
   14000d15a:	mov    DWORD PTR [rsp+0x28],0xd55
   14000d162:	mov    eax,ecx
   14000d164:	mov    ecx,0xfde9
   14000d169:	cdq    
   14000d16a:	sub    eax,edx
   14000d16c:	xor    edx,edx
   14000d16e:	sar    eax,1
   14000d170:	mov    r9d,eax
   14000d173:	lea    rax,[rbp+0x620]
   14000d17a:	mov    QWORD PTR [rsp+0x20],rax
   14000d17f:	call   QWORD PTR [rip+0x5feb]        # 0x140013170
   14000d185:	mov    DWORD PTR [rsp+0x44],eax
   14000d189:	test   eax,eax
   14000d18b:	je     0x14000d22a
   14000d191:	xor    esi,esi
   14000d193:	and    QWORD PTR [rsp+0x20],0x0
   14000d199:	mov    r8d,eax
   14000d19c:	mov    rax,QWORD PTR [rsp+0x50]
   14000d1a1:	movsxd rcx,esi
   14000d1a4:	lea    rdx,[rbp+0x620]
   14000d1ab:	lea    r9,[rsp+0x4c]
   14000d1b0:	add    rdx,rcx
   14000d1b3:	lea    rcx,[rip+0x12526]        # 0x14001f6e0
   14000d1ba:	sub    r8d,esi
   14000d1bd:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000d1c1:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000d1c5:	call   QWORD PTR [rip+0x5fb5]        # 0x140013180
   14000d1cb:	test   eax,eax
   14000d1cd:	je     0x14000d1dd
   14000d1cf:	add    esi,DWORD PTR [rsp+0x4c]
   14000d1d3:	mov    eax,DWORD PTR [rsp+0x44]
   14000d1d7:	cmp    eax,esi
   14000d1d9:	jg     0x14000d193
   14000d1db:	jmp    0x14000d1e9
   14000d1dd:	call   QWORD PTR [rip+0x5f55]        # 0x140013138
   14000d1e3:	mov    ebx,eax
   14000d1e5:	mov    eax,DWORD PTR [rsp+0x44]
   14000d1e9:	cmp    eax,esi
   14000d1eb:	jg     0x14000d232
   14000d1ed:	mov    edi,r13d
   14000d1f0:	mov    r8d,0xd
   14000d1f6:	sub    edi,r14d
   14000d1f9:	cmp    edi,r15d
   14000d1fc:	jb     0x14000d101
   14000d202:	jmp    0x14000d232
   14000d204:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000d208:	and    QWORD PTR [rsp+0x20],rdi
   14000d20d:	lea    r9,[rsp+0x4c]
   14000d212:	mov    r8d,r15d
   14000d215:	mov    rdx,r14
   14000d218:	call   QWORD PTR [rip+0x5f62]        # 0x140013180
   14000d21e:	test   eax,eax
   14000d220:	je     0x14000d22a
   14000d222:	mov    edi,DWORD PTR [rsp+0x4c]
   14000d226:	xor    ebx,ebx
   14000d228:	jmp    0x14000d232
   14000d22a:	call   QWORD PTR [rip+0x5f08]        # 0x140013138
   14000d230:	mov    ebx,eax
   14000d232:	test   edi,edi
   14000d234:	jne    0x14000d29c
   14000d236:	test   ebx,ebx
   14000d238:	je     0x14000d262
   14000d23a:	cmp    ebx,0x5
   14000d23d:	jne    0x14000d256
   14000d23f:	call   0x140008888
   14000d244:	mov    DWORD PTR [rax],0x9
   14000d24a:	call   0x140008818
   14000d24f:	mov    DWORD PTR [rax],ebx
   14000d251:	jmp    0x14000cbc5
   14000d256:	mov    ecx,ebx
   14000d258:	call   0x140008838
   14000d25d:	jmp    0x14000cbc5
   14000d262:	mov    rax,QWORD PTR [rsp+0x50]
   14000d267:	lea    rcx,[rip+0x12472]        # 0x14001f6e0
   14000d26e:	mov    rax,QWORD PTR [rcx+rax*8]
   14000d272:	test   BYTE PTR [r12+rax*1+0x8],0x40
   14000d278:	je     0x14000d284
   14000d27a:	cmp    BYTE PTR [r14],0x1a
   14000d27e:	je     0x14000cba2
   14000d284:	call   0x140008888
   14000d289:	mov    DWORD PTR [rax],0x1c
   14000d28f:	call   0x140008818
   14000d294:	and    DWORD PTR [rax],0x0
   14000d297:	jmp    0x14000cbc5
   14000d29c:	sub    edi,DWORD PTR [rsp+0x48]
   14000d2a0:	mov    eax,edi
   14000d2a2:	mov    rcx,QWORD PTR [rbp+0x1a20]
   14000d2a9:	xor    rcx,rsp
   14000d2ac:	call   0x140005fe0
   14000d2b1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14000d2b9:	add    rsp,0x1b30
   14000d2c0:	pop    r15
   14000d2c2:	pop    r14
   14000d2c4:	pop    r13
   14000d2c6:	pop    r12
   14000d2c8:	pop    rdi
   14000d2c9:	pop    rsi
   14000d2ca:	pop    rbp
   14000d2cb:	ret    
   14000d2cc:	mov    QWORD PTR [rsp+0x10],rbx
   14000d2d1:	mov    DWORD PTR [rsp+0x8],ecx
   14000d2d5:	push   rsi
   14000d2d6:	push   rdi
   14000d2d7:	push   r12
   14000d2d9:	push   r14
   14000d2db:	push   r15
   14000d2dd:	sub    rsp,0x20
   14000d2e1:	mov    r14d,r8d
   14000d2e4:	mov    r15,rdx
   14000d2e7:	movsxd rdi,ecx
   14000d2ea:	cmp    edi,0xfffffffe
   14000d2ed:	jne    0x14000d307
   14000d2ef:	call   0x140008818
   14000d2f4:	and    DWORD PTR [rax],0x0
   14000d2f7:	call   0x140008888
   14000d2fc:	mov    DWORD PTR [rax],0x9
   14000d302:	jmp    0x14000d3a6
   14000d307:	call   0x140007a7c
   14000d30c:	test   eax,eax
   14000d30e:	js     0x14000d3a6
   14000d314:	test   edi,edi
   14000d316:	js     0x14000d38e
   14000d318:	cmp    edi,DWORD PTR [rip+0x123a6]        # 0x14001f6c4
   14000d31e:	jae    0x14000d38e
   14000d320:	mov    rbx,rdi
   14000d323:	mov    rsi,rdi
   14000d326:	sar    rsi,0x5
   14000d32a:	lea    r12,[rip+0x123af]        # 0x14001f6e0
   14000d331:	and    ebx,0x1f
   14000d334:	imul   rbx,rbx,0x58
   14000d338:	mov    rax,QWORD PTR [r12+rsi*8]
   14000d33c:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14000d341:	and    ecx,0x1
   14000d344:	je     0x14000d38e
   14000d346:	mov    ecx,edi
   14000d348:	call   0x14000e784
   14000d34d:	nop
   14000d34e:	mov    rax,QWORD PTR [r12+rsi*8]
   14000d352:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14000d357:	je     0x14000d36b
   14000d359:	mov    r8d,r14d
   14000d35c:	mov    rdx,r15
   14000d35f:	mov    ecx,edi
   14000d361:	call   0x14000d3bc
   14000d366:	mov    rbx,rax
   14000d369:	jmp    0x14000d382
   14000d36b:	call   0x140008888
   14000d370:	mov    DWORD PTR [rax],0x9
   14000d376:	call   0x140008818
   14000d37b:	and    DWORD PTR [rax],0x0
   14000d37e:	or     rbx,0xffffffffffffffff
   14000d382:	mov    ecx,edi
   14000d384:	call   0x14000e94c
   14000d389:	mov    rax,rbx
   14000d38c:	jmp    0x14000d3aa
   14000d38e:	call   0x140008818
   14000d393:	and    DWORD PTR [rax],0x0
   14000d396:	call   0x140008888
   14000d39b:	mov    DWORD PTR [rax],0x9
   14000d3a1:	call   0x1400087bc
   14000d3a6:	or     rax,0xffffffffffffffff
   14000d3aa:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d3af:	add    rsp,0x20
   14000d3b3:	pop    r15
   14000d3b5:	pop    r14
   14000d3b7:	pop    r12
   14000d3b9:	pop    rdi
   14000d3ba:	pop    rsi
   14000d3bb:	ret    
   14000d3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000d3c1:	mov    QWORD PTR [rsp+0x10],rsi
   14000d3c6:	push   rdi
   14000d3c7:	sub    rsp,0x20
   14000d3cb:	movsxd rbx,ecx
   14000d3ce:	mov    edi,r8d
   14000d3d1:	mov    rsi,rdx
   14000d3d4:	mov    ecx,ebx
   14000d3d6:	call   0x14000e8c8
   14000d3db:	cmp    rax,0xffffffffffffffff
   14000d3df:	jne    0x14000d3f2
   14000d3e1:	call   0x140008888
   14000d3e6:	mov    DWORD PTR [rax],0x9
   14000d3ec:	or     rax,0xffffffffffffffff
   14000d3f0:	jmp    0x14000d43f
   14000d3f2:	lea    r8,[rsp+0x48]
   14000d3f7:	mov    r9d,edi
   14000d3fa:	mov    rdx,rsi
   14000d3fd:	mov    rcx,rax
   14000d400:	call   QWORD PTR [rip+0x5f4a]        # 0x140013350
   14000d406:	test   eax,eax
   14000d408:	jne    0x14000d419
   14000d40a:	call   QWORD PTR [rip+0x5d28]        # 0x140013138
   14000d410:	mov    ecx,eax
   14000d412:	call   0x140008838
   14000d417:	jmp    0x14000d3ec
   14000d419:	mov    rcx,rbx
   14000d41c:	mov    rax,rbx
   14000d41f:	lea    rdx,[rip+0x122ba]        # 0x14001f6e0
   14000d426:	sar    rax,0x5
   14000d42a:	and    ecx,0x1f
   14000d42d:	mov    rax,QWORD PTR [rdx+rax*8]
   14000d431:	imul   rcx,rcx,0x58
   14000d435:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14000d43a:	mov    rax,QWORD PTR [rsp+0x48]
   14000d43f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d444:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d449:	add    rsp,0x20
   14000d44d:	pop    rdi
   14000d44e:	ret    
   14000d44f:	int3   
   14000d450:	rex push rbx
   14000d452:	sub    rsp,0x20
   14000d456:	inc    DWORD PTR [rip+0x104dc]        # 0x14001d938
   14000d45c:	mov    rbx,rcx
   14000d45f:	mov    ecx,0x1000
   14000d464:	call   0x140008abc
   14000d469:	mov    QWORD PTR [rbx+0x10],rax
   14000d46d:	test   rax,rax
   14000d470:	je     0x14000d47f
   14000d472:	or     DWORD PTR [rbx+0x18],0x8
   14000d476:	mov    DWORD PTR [rbx+0x24],0x1000
   14000d47d:	jmp    0x14000d492
   14000d47f:	or     DWORD PTR [rbx+0x18],0x4
   14000d483:	lea    rax,[rbx+0x20]
   14000d487:	mov    DWORD PTR [rbx+0x24],0x2
   14000d48e:	mov    QWORD PTR [rbx+0x10],rax
   14000d492:	mov    rax,QWORD PTR [rbx+0x10]
   14000d496:	and    DWORD PTR [rbx+0x8],0x0
   14000d49a:	mov    QWORD PTR [rbx],rax
   14000d49d:	add    rsp,0x20
   14000d4a1:	pop    rbx
   14000d4a2:	ret    
   14000d4a3:	int3   
   14000d4a4:	rex push rbx
   14000d4a6:	sub    rsp,0x40
   14000d4aa:	mov    ebx,ecx
   14000d4ac:	lea    rcx,[rsp+0x20]
   14000d4b1:	call   0x140008d54
   14000d4b6:	mov    rax,QWORD PTR [rsp+0x20]
   14000d4bb:	movzx  edx,bl
   14000d4be:	mov    rcx,QWORD PTR [rax+0x108]
   14000d4c5:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000d4c9:	and    eax,0x8000
   14000d4ce:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d4d3:	je     0x14000d4e1
   14000d4d5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d4da:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d4e1:	add    rsp,0x40
   14000d4e5:	pop    rbx
   14000d4e6:	ret    
   14000d4e7:	int3   
   14000d4e8:	rex push rbx
   14000d4ea:	sub    rsp,0x40
   14000d4ee:	mov    ebx,ecx
   14000d4f0:	lea    rcx,[rsp+0x20]
   14000d4f5:	xor    edx,edx
   14000d4f7:	call   0x140008d54
   14000d4fc:	mov    rax,QWORD PTR [rsp+0x20]
   14000d501:	movzx  edx,bl
   14000d504:	mov    rcx,QWORD PTR [rax+0x108]
   14000d50b:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000d50f:	and    eax,0x8000
   14000d514:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d519:	je     0x14000d527
   14000d51b:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d520:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d527:	add    rsp,0x40
   14000d52b:	pop    rbx
   14000d52c:	ret    
   14000d52d:	int3   
   14000d52e:	int3   
   14000d52f:	int3   
   14000d530:	mov    rcx,QWORD PTR [rip+0xdb51]        # 0x14001b088
   14000d537:	xor    eax,eax
   14000d539:	or     rcx,0x1
   14000d53d:	cmp    QWORD PTR [rip+0x103fc],rcx        # 0x14001d940
   14000d544:	sete   al
   14000d547:	ret    
   14000d548:	mov    QWORD PTR [rsp+0x8],rbx
   14000d54d:	mov    QWORD PTR [rsp+0x18],rsi
   14000d552:	mov    WORD PTR [rsp+0x20],r9w
   14000d558:	push   rdi
   14000d559:	sub    rsp,0x60
   14000d55d:	mov    rdi,r8
   14000d560:	mov    rsi,rdx
   14000d563:	mov    rbx,rcx
   14000d566:	test   rdx,rdx
   14000d569:	jne    0x14000d57e
   14000d56b:	test   r8,r8
   14000d56e:	je     0x14000d57e
   14000d570:	test   rcx,rcx
   14000d573:	je     0x14000d577
   14000d575:	and    DWORD PTR [rcx],edx
   14000d577:	xor    eax,eax
   14000d579:	jmp    0x14000d613
   14000d57e:	test   rcx,rcx
   14000d581:	je     0x14000d586
   14000d583:	or     DWORD PTR [rcx],0xffffffff
   14000d586:	cmp    r8,0x7fffffff
   14000d58d:	jbe    0x14000d5a2
   14000d58f:	call   0x140008888
   14000d594:	mov    ebx,0x16
   14000d599:	mov    DWORD PTR [rax],ebx
   14000d59b:	call   0x1400087bc
   14000d5a0:	jmp    0x14000d611
   14000d5a2:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d5aa:	lea    rcx,[rsp+0x40]
   14000d5af:	call   0x140008d54
   14000d5b4:	mov    rax,QWORD PTR [rsp+0x40]
   14000d5b9:	cmp    QWORD PTR [rax+0x138],0x0
   14000d5c1:	jne    0x14000d642
   14000d5c3:	movzx  eax,WORD PTR [rsp+0x88]
   14000d5cb:	mov    ecx,0xff
   14000d5d0:	cmp    ax,cx
   14000d5d3:	jbe    0x14000d625
   14000d5d5:	test   rsi,rsi
   14000d5d8:	je     0x14000d5ec
   14000d5da:	test   rdi,rdi
   14000d5dd:	je     0x14000d5ec
   14000d5df:	mov    r8,rdi
   14000d5e2:	xor    edx,edx
   14000d5e4:	mov    rcx,rsi
   14000d5e7:	call   0x1400099c0
   14000d5ec:	call   0x140008888
   14000d5f1:	mov    DWORD PTR [rax],0x2a
   14000d5f7:	call   0x140008888
   14000d5fc:	mov    ebx,DWORD PTR [rax]
   14000d5fe:	cmp    BYTE PTR [rsp+0x58],0x0
   14000d603:	je     0x14000d611
   14000d605:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d60a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d611:	mov    eax,ebx
   14000d613:	lea    r11,[rsp+0x60]
   14000d618:	mov    rbx,QWORD PTR [r11+0x10]
   14000d61c:	mov    rsi,QWORD PTR [r11+0x20]
   14000d620:	mov    rsp,r11
   14000d623:	pop    rdi
   14000d624:	ret    
   14000d625:	test   rsi,rsi
   14000d628:	je     0x14000d635
   14000d62a:	test   rdi,rdi
   14000d62d:	je     0x14000d6bc
   14000d633:	mov    BYTE PTR [rsi],al
   14000d635:	test   rbx,rbx
   14000d638:	je     0x14000d68f
   14000d63a:	mov    DWORD PTR [rbx],0x1
   14000d640:	jmp    0x14000d68f
   14000d642:	and    DWORD PTR [rsp+0x78],0x0
   14000d647:	lea    rcx,[rsp+0x78]
   14000d64c:	lea    r8,[rsp+0x88]
   14000d654:	mov    QWORD PTR [rsp+0x38],rcx
   14000d659:	and    QWORD PTR [rsp+0x30],0x0
   14000d65f:	mov    ecx,DWORD PTR [rax+0x4]
   14000d662:	mov    r9d,0x1
   14000d668:	xor    edx,edx
   14000d66a:	mov    DWORD PTR [rsp+0x28],edi
   14000d66e:	mov    QWORD PTR [rsp+0x20],rsi
   14000d673:	call   QWORD PTR [rip+0x5af7]        # 0x140013170
   14000d679:	test   eax,eax
   14000d67b:	je     0x14000d696
   14000d67d:	cmp    DWORD PTR [rsp+0x78],0x0
   14000d682:	jne    0x14000d5ec
   14000d688:	test   rbx,rbx
   14000d68b:	je     0x14000d68f
   14000d68d:	mov    DWORD PTR [rbx],eax
   14000d68f:	xor    ebx,ebx
   14000d691:	jmp    0x14000d5fe
   14000d696:	call   QWORD PTR [rip+0x5a9c]        # 0x140013138
   14000d69c:	cmp    eax,0x7a
   14000d69f:	jne    0x14000d5ec
   14000d6a5:	test   rsi,rsi
   14000d6a8:	je     0x14000d6bc
   14000d6aa:	test   rdi,rdi
   14000d6ad:	je     0x14000d6bc
   14000d6af:	mov    r8,rdi
   14000d6b2:	xor    edx,edx
   14000d6b4:	mov    rcx,rsi
   14000d6b7:	call   0x1400099c0
   14000d6bc:	call   0x140008888
   14000d6c1:	mov    ebx,0x22
   14000d6c6:	mov    DWORD PTR [rax],ebx
   14000d6c8:	call   0x1400087bc
   14000d6cd:	jmp    0x14000d5fe
   14000d6d2:	int3   
   14000d6d3:	int3   
   14000d6d4:	sub    rsp,0x38
   14000d6d8:	and    QWORD PTR [rsp+0x20],0x0
   14000d6de:	call   0x14000d548
   14000d6e3:	add    rsp,0x38
   14000d6e7:	ret    
   14000d6e8:	mov    r11,rsp
   14000d6eb:	sub    rsp,0x58
   14000d6ef:	xor    eax,eax
   14000d6f1:	mov    QWORD PTR [r11-0x18],rax
   14000d6f5:	mov    QWORD PTR [r11-0x20],rax
   14000d6f9:	mov    QWORD PTR [r11-0x28],rax
   14000d6fd:	mov    eax,DWORD PTR [rsp+0x88]
   14000d704:	mov    DWORD PTR [rsp+0x28],eax
   14000d708:	mov    rax,QWORD PTR [rsp+0x80]
   14000d710:	mov    QWORD PTR [r11-0x38],rax
   14000d714:	call   QWORD PTR [rip+0x5c3e]        # 0x140013358
   14000d71a:	add    rsp,0x58
   14000d71e:	ret    
   14000d71f:	int3   
   14000d720:	mov    QWORD PTR [rsp+0x18],rbx
   14000d725:	mov    QWORD PTR [rsp+0x20],rbp
   14000d72a:	push   rsi
   14000d72b:	push   rdi
   14000d72c:	push   r14
   14000d72e:	sub    rsp,0x40
   14000d732:	mov    rax,QWORD PTR [rip+0xd94f]        # 0x14001b088
   14000d739:	xor    rax,rsp
   14000d73c:	mov    QWORD PTR [rsp+0x30],rax
   14000d741:	test   BYTE PTR [rdx+0x18],0x40
   14000d745:	mov    rdi,rdx
   14000d748:	movzx  esi,cx
   14000d74b:	jne    0x14000d8ae
   14000d751:	mov    rcx,rdx
   14000d754:	call   0x14000c9d0
   14000d759:	lea    rbp,[rip+0xd8d0]        # 0x14001b030
   14000d760:	lea    r14,[rip+0x11f79]        # 0x14001f6e0
   14000d767:	cmp    eax,0xffffffff
   14000d76a:	je     0x14000d79d
   14000d76c:	mov    rcx,rdi
   14000d76f:	call   0x14000c9d0
   14000d774:	cmp    eax,0xfffffffe
   14000d777:	je     0x14000d79d
   14000d779:	mov    rcx,rdi
   14000d77c:	call   0x14000c9d0
   14000d781:	mov    rcx,rdi
   14000d784:	movsxd rbx,eax
   14000d787:	sar    rbx,0x5
   14000d78b:	call   0x14000c9d0
   14000d790:	and    eax,0x1f
   14000d793:	imul   rax,rax,0x58
   14000d797:	add    rax,QWORD PTR [r14+rbx*8]
   14000d79b:	jmp    0x14000d7a0
   14000d79d:	mov    rax,rbp
   14000d7a0:	mov    al,BYTE PTR [rax+0x38]
   14000d7a3:	and    al,0x7f
   14000d7a5:	cmp    al,0x2
   14000d7a7:	je     0x14000d8ae
   14000d7ad:	mov    rcx,rdi
   14000d7b0:	call   0x14000c9d0
   14000d7b5:	cmp    eax,0xffffffff
   14000d7b8:	je     0x14000d7eb
   14000d7ba:	mov    rcx,rdi
   14000d7bd:	call   0x14000c9d0
   14000d7c2:	cmp    eax,0xfffffffe
   14000d7c5:	je     0x14000d7eb
   14000d7c7:	mov    rcx,rdi
   14000d7ca:	call   0x14000c9d0
   14000d7cf:	mov    rcx,rdi
   14000d7d2:	movsxd rbx,eax
   14000d7d5:	sar    rbx,0x5
   14000d7d9:	call   0x14000c9d0
   14000d7de:	and    eax,0x1f
   14000d7e1:	imul   rax,rax,0x58
   14000d7e5:	add    rax,QWORD PTR [r14+rbx*8]
   14000d7e9:	jmp    0x14000d7ee
   14000d7eb:	mov    rax,rbp
   14000d7ee:	mov    al,BYTE PTR [rax+0x38]
   14000d7f1:	and    al,0x7f
   14000d7f3:	cmp    al,0x1
   14000d7f5:	je     0x14000d8ae
   14000d7fb:	mov    rcx,rdi
   14000d7fe:	call   0x14000c9d0
   14000d803:	cmp    eax,0xffffffff
   14000d806:	je     0x14000d839
   14000d808:	mov    rcx,rdi
   14000d80b:	call   0x14000c9d0
   14000d810:	cmp    eax,0xfffffffe
   14000d813:	je     0x14000d839
   14000d815:	mov    rcx,rdi
   14000d818:	call   0x14000c9d0
   14000d81d:	mov    rcx,rdi
   14000d820:	movsxd rbx,eax
   14000d823:	sar    rbx,0x5
   14000d827:	call   0x14000c9d0
   14000d82c:	mov    ebp,eax
   14000d82e:	and    ebp,0x1f
   14000d831:	imul   rbp,rbp,0x58
   14000d835:	add    rbp,QWORD PTR [r14+rbx*8]
   14000d839:	test   BYTE PTR [rbp+0x8],0x80
   14000d83d:	je     0x14000d8ae
   14000d83f:	lea    rdx,[rsp+0x24]
   14000d844:	lea    rcx,[rsp+0x20]
   14000d849:	movzx  r9d,si
   14000d84d:	mov    r8d,0x5
   14000d853:	call   0x14000d6d4
   14000d858:	xor    ebx,ebx
   14000d85a:	test   eax,eax
   14000d85c:	je     0x14000d865
   14000d85e:	mov    eax,0xffff
   14000d863:	jmp    0x14000d8d7
   14000d865:	cmp    DWORD PTR [rsp+0x20],ebx
   14000d869:	jle    0x14000d8a9
   14000d86b:	lea    r14,[rsp+0x24]
   14000d870:	dec    DWORD PTR [rdi+0x8]
   14000d873:	js     0x14000d88b
   14000d875:	mov    rcx,QWORD PTR [rdi]
   14000d878:	mov    al,BYTE PTR [r14]
   14000d87b:	mov    BYTE PTR [rcx],al
   14000d87d:	mov    rax,QWORD PTR [rdi]
   14000d880:	movzx  ecx,BYTE PTR [rax]
   14000d883:	inc    rax
   14000d886:	mov    QWORD PTR [rdi],rax
   14000d889:	jmp    0x14000d899
   14000d88b:	movsx  ecx,BYTE PTR [r14]
   14000d88f:	mov    rdx,rdi
   14000d892:	call   0x140008bbc
   14000d897:	mov    ecx,eax
   14000d899:	cmp    ecx,0xffffffff
   14000d89c:	je     0x14000d85e
   14000d89e:	inc    ebx
   14000d8a0:	inc    r14
   14000d8a3:	cmp    ebx,DWORD PTR [rsp+0x20]
   14000d8a7:	jl     0x14000d870
   14000d8a9:	movzx  eax,si
   14000d8ac:	jmp    0x14000d8d7
   14000d8ae:	movsxd rax,DWORD PTR [rdi+0x8]
   14000d8b2:	add    rax,0xfffffffffffffffe
   14000d8b6:	mov    DWORD PTR [rdi+0x8],eax
   14000d8b9:	test   eax,eax
   14000d8bb:	js     0x14000d8cc
   14000d8bd:	mov    rax,QWORD PTR [rdi]
   14000d8c0:	mov    WORD PTR [rax],si
   14000d8c3:	add    QWORD PTR [rdi],0x2
   14000d8c7:	movzx  eax,si
   14000d8ca:	jmp    0x14000d8d7
   14000d8cc:	mov    rdx,rdi
   14000d8cf:	movzx  ecx,si
   14000d8d2:	call   0x14000ea40
   14000d8d7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d8dc:	xor    rcx,rsp
   14000d8df:	call   0x140005fe0
   14000d8e4:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d8e9:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d8ee:	add    rsp,0x40
   14000d8f2:	pop    r14
   14000d8f4:	pop    rdi
   14000d8f5:	pop    rsi
   14000d8f6:	ret    
   14000d8f7:	int3   
   14000d8f8:	mov    rax,rsp
   14000d8fb:	mov    QWORD PTR [rax+0x8],rbx
   14000d8ff:	mov    QWORD PTR [rax+0x10],rbp
   14000d903:	mov    QWORD PTR [rax+0x18],rsi
   14000d907:	mov    QWORD PTR [rax+0x20],rdi
   14000d90b:	push   r14
   14000d90d:	sub    rsp,0x50
   14000d911:	xor    r14d,r14d
   14000d914:	mov    rbp,r8
   14000d917:	mov    rsi,rdx
   14000d91a:	mov    rdi,rcx
   14000d91d:	test   rdx,rdx
   14000d920:	je     0x14000d935
   14000d922:	test   r8,r8
   14000d925:	je     0x14000d935
   14000d927:	cmp    BYTE PTR [rdx],r14b
   14000d92a:	jne    0x14000d952
   14000d92c:	test   rcx,rcx
   14000d92f:	je     0x14000d935
   14000d931:	mov    WORD PTR [rcx],r14w
   14000d935:	xor    eax,eax
   14000d937:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d93c:	mov    rbp,QWORD PTR [rsp+0x68]
   14000d941:	mov    rsi,QWORD PTR [rsp+0x70]
   14000d946:	mov    rdi,QWORD PTR [rsp+0x78]
   14000d94b:	add    rsp,0x50
   14000d94f:	pop    r14
   14000d951:	ret    
   14000d952:	lea    rcx,[rsp+0x30]
   14000d957:	mov    rdx,r9
   14000d95a:	call   0x140008d54
   14000d95f:	mov    rax,QWORD PTR [rsp+0x30]
   14000d964:	cmp    QWORD PTR [rax+0x138],r14
   14000d96b:	jne    0x14000d982
   14000d96d:	test   rdi,rdi
   14000d970:	je     0x14000d978
   14000d972:	movzx  eax,BYTE PTR [rsi]
   14000d975:	mov    WORD PTR [rdi],ax
   14000d978:	mov    ebx,0x1
   14000d97d:	jmp    0x14000da2f
   14000d982:	movzx  ecx,BYTE PTR [rsi]
   14000d985:	lea    rdx,[rsp+0x30]
   14000d98a:	call   0x14000d4a4
   14000d98f:	mov    ebx,0x1
   14000d994:	test   eax,eax
   14000d996:	je     0x14000d9f2
   14000d998:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d99d:	mov    r9d,DWORD PTR [rcx+0xd4]
   14000d9a4:	cmp    r9d,ebx
   14000d9a7:	jle    0x14000d9d8
   14000d9a9:	cmp    ebp,r9d
   14000d9ac:	jl     0x14000d9d8
   14000d9ae:	mov    ecx,DWORD PTR [rcx+0x4]
   14000d9b1:	mov    eax,r14d
   14000d9b4:	test   rdi,rdi
   14000d9b7:	setne  al
   14000d9ba:	lea    edx,[rbx+0x8]
   14000d9bd:	mov    r8,rsi
   14000d9c0:	mov    DWORD PTR [rsp+0x28],eax
   14000d9c4:	mov    QWORD PTR [rsp+0x20],rdi
   14000d9c9:	call   QWORD PTR [rip+0x5821]        # 0x1400131f0
   14000d9cf:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d9d4:	test   eax,eax
   14000d9d6:	jne    0x14000d9ea
   14000d9d8:	movsxd rax,DWORD PTR [rcx+0xd4]
   14000d9df:	cmp    rbp,rax
   14000d9e2:	jb     0x14000da21
   14000d9e4:	cmp    BYTE PTR [rsi+0x1],r14b
   14000d9e8:	je     0x14000da21
   14000d9ea:	mov    ebx,DWORD PTR [rcx+0xd4]
   14000d9f0:	jmp    0x14000da2f
   14000d9f2:	mov    eax,r14d
   14000d9f5:	test   rdi,rdi
   14000d9f8:	mov    r9d,ebx
   14000d9fb:	setne  al
   14000d9fe:	mov    r8,rsi
   14000da01:	mov    edx,0x9
   14000da06:	mov    DWORD PTR [rsp+0x28],eax
   14000da0a:	mov    rax,QWORD PTR [rsp+0x30]
   14000da0f:	mov    QWORD PTR [rsp+0x20],rdi
   14000da14:	mov    ecx,DWORD PTR [rax+0x4]
   14000da17:	call   QWORD PTR [rip+0x57d3]        # 0x1400131f0
   14000da1d:	test   eax,eax
   14000da1f:	jne    0x14000da2f
   14000da21:	call   0x140008888
   14000da26:	or     ebx,0xffffffff
   14000da29:	mov    DWORD PTR [rax],0x2a
   14000da2f:	cmp    BYTE PTR [rsp+0x48],r14b
   14000da34:	je     0x14000da42
   14000da36:	mov    rcx,QWORD PTR [rsp+0x40]
   14000da3b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000da42:	mov    eax,ebx
   14000da44:	jmp    0x14000d937
   14000da49:	int3   
   14000da4a:	int3   
   14000da4b:	int3   
   14000da4c:	xor    r9d,r9d
   14000da4f:	jmp    0x14000d8f8
   14000da54:	test   rcx,rcx
   14000da57:	je     0x14000db5d
   14000da5d:	push   rbx
   14000da5e:	sub    rsp,0x20
   14000da62:	mov    rbx,rcx
   14000da65:	mov    rcx,QWORD PTR [rcx+0x18]
   14000da69:	cmp    rcx,QWORD PTR [rip+0xe7e8]        # 0x14001c258
   14000da70:	je     0x14000da77
   14000da72:	call   0x140006aa0
   14000da77:	mov    rcx,QWORD PTR [rbx+0x20]
   14000da7b:	cmp    rcx,QWORD PTR [rip+0xe7de]        # 0x14001c260
   14000da82:	je     0x14000da89
   14000da84:	call   0x140006aa0
   14000da89:	mov    rcx,QWORD PTR [rbx+0x28]
   14000da8d:	cmp    rcx,QWORD PTR [rip+0xe7d4]        # 0x14001c268
   14000da94:	je     0x14000da9b
   14000da96:	call   0x140006aa0
   14000da9b:	mov    rcx,QWORD PTR [rbx+0x30]
   14000da9f:	cmp    rcx,QWORD PTR [rip+0xe7ca]        # 0x14001c270
   14000daa6:	je     0x14000daad
   14000daa8:	call   0x140006aa0
   14000daad:	mov    rcx,QWORD PTR [rbx+0x38]
   14000dab1:	cmp    rcx,QWORD PTR [rip+0xe7c0]        # 0x14001c278
   14000dab8:	je     0x14000dabf
   14000daba:	call   0x140006aa0
   14000dabf:	mov    rcx,QWORD PTR [rbx+0x40]
   14000dac3:	cmp    rcx,QWORD PTR [rip+0xe7b6]        # 0x14001c280
   14000daca:	je     0x14000dad1
   14000dacc:	call   0x140006aa0
   14000dad1:	mov    rcx,QWORD PTR [rbx+0x48]
   14000dad5:	cmp    rcx,QWORD PTR [rip+0xe7ac]        # 0x14001c288
   14000dadc:	je     0x14000dae3
   14000dade:	call   0x140006aa0
   14000dae3:	mov    rcx,QWORD PTR [rbx+0x68]
   14000dae7:	cmp    rcx,QWORD PTR [rip+0xe7ba]        # 0x14001c2a8
   14000daee:	je     0x14000daf5
   14000daf0:	call   0x140006aa0
   14000daf5:	mov    rcx,QWORD PTR [rbx+0x70]
   14000daf9:	cmp    rcx,QWORD PTR [rip+0xe7b0]        # 0x14001c2b0
   14000db00:	je     0x14000db07
   14000db02:	call   0x140006aa0
   14000db07:	mov    rcx,QWORD PTR [rbx+0x78]
   14000db0b:	cmp    rcx,QWORD PTR [rip+0xe7a6]        # 0x14001c2b8
   14000db12:	je     0x14000db19
   14000db14:	call   0x140006aa0
   14000db19:	mov    rcx,QWORD PTR [rbx+0x80]
   14000db20:	cmp    rcx,QWORD PTR [rip+0xe799]        # 0x14001c2c0
   14000db27:	je     0x14000db2e
   14000db29:	call   0x140006aa0
   14000db2e:	mov    rcx,QWORD PTR [rbx+0x88]
   14000db35:	cmp    rcx,QWORD PTR [rip+0xe78c]        # 0x14001c2c8
   14000db3c:	je     0x14000db43
   14000db3e:	call   0x140006aa0
   14000db43:	mov    rcx,QWORD PTR [rbx+0x90]
   14000db4a:	cmp    rcx,QWORD PTR [rip+0xe77f]        # 0x14001c2d0
   14000db51:	je     0x14000db58
   14000db53:	call   0x140006aa0
   14000db58:	add    rsp,0x20
   14000db5c:	pop    rbx
   14000db5d:	ret    
   14000db5e:	int3   
   14000db5f:	int3   
   14000db60:	test   rcx,rcx
   14000db63:	je     0x14000dbcb
   14000db65:	push   rbx
   14000db66:	sub    rsp,0x20
   14000db6a:	mov    rbx,rcx
   14000db6d:	mov    rcx,QWORD PTR [rcx]
   14000db70:	cmp    rcx,QWORD PTR [rip+0xe6c9]        # 0x14001c240
   14000db77:	je     0x14000db7e
   14000db79:	call   0x140006aa0
   14000db7e:	mov    rcx,QWORD PTR [rbx+0x8]
   14000db82:	cmp    rcx,QWORD PTR [rip+0xe6bf]        # 0x14001c248
   14000db89:	je     0x14000db90
   14000db8b:	call   0x140006aa0
   14000db90:	mov    rcx,QWORD PTR [rbx+0x10]
   14000db94:	cmp    rcx,QWORD PTR [rip+0xe6b5]        # 0x14001c250
   14000db9b:	je     0x14000dba2
   14000db9d:	call   0x140006aa0
   14000dba2:	mov    rcx,QWORD PTR [rbx+0x58]
   14000dba6:	cmp    rcx,QWORD PTR [rip+0xe6eb]        # 0x14001c298
   14000dbad:	je     0x14000dbb4
   14000dbaf:	call   0x140006aa0
   14000dbb4:	mov    rcx,QWORD PTR [rbx+0x60]
   14000dbb8:	cmp    rcx,QWORD PTR [rip+0xe6e1]        # 0x14001c2a0
   14000dbbf:	je     0x14000dbc6
   14000dbc1:	call   0x140006aa0
   14000dbc6:	add    rsp,0x20
   14000dbca:	pop    rbx
   14000dbcb:	ret    
   14000dbcc:	test   rcx,rcx
   14000dbcf:	je     0x14000dfc5
   14000dbd5:	push   rbx
   14000dbd6:	sub    rsp,0x20
   14000dbda:	mov    rbx,rcx
   14000dbdd:	mov    rcx,QWORD PTR [rcx+0x8]
   14000dbe1:	call   0x140006aa0
   14000dbe6:	mov    rcx,QWORD PTR [rbx+0x10]
   14000dbea:	call   0x140006aa0
   14000dbef:	mov    rcx,QWORD PTR [rbx+0x18]
   14000dbf3:	call   0x140006aa0
   14000dbf8:	mov    rcx,QWORD PTR [rbx+0x20]
   14000dbfc:	call   0x140006aa0
   14000dc01:	mov    rcx,QWORD PTR [rbx+0x28]
   14000dc05:	call   0x140006aa0
   14000dc0a:	mov    rcx,QWORD PTR [rbx+0x30]
   14000dc0e:	call   0x140006aa0
   14000dc13:	mov    rcx,QWORD PTR [rbx]
   14000dc16:	call   0x140006aa0
   14000dc1b:	mov    rcx,QWORD PTR [rbx+0x40]
   14000dc1f:	call   0x140006aa0
   14000dc24:	mov    rcx,QWORD PTR [rbx+0x48]
   14000dc28:	call   0x140006aa0
   14000dc2d:	mov    rcx,QWORD PTR [rbx+0x50]
   14000dc31:	call   0x140006aa0
   14000dc36:	mov    rcx,QWORD PTR [rbx+0x58]
   14000dc3a:	call   0x140006aa0
   14000dc3f:	mov    rcx,QWORD PTR [rbx+0x60]
   14000dc43:	call   0x140006aa0
   14000dc48:	mov    rcx,QWORD PTR [rbx+0x68]
   14000dc4c:	call   0x140006aa0
   14000dc51:	mov    rcx,QWORD PTR [rbx+0x38]
   14000dc55:	call   0x140006aa0
   14000dc5a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000dc5e:	call   0x140006aa0
   14000dc63:	mov    rcx,QWORD PTR [rbx+0x78]
   14000dc67:	call   0x140006aa0
   14000dc6c:	mov    rcx,QWORD PTR [rbx+0x80]
   14000dc73:	call   0x140006aa0
   14000dc78:	mov    rcx,QWORD PTR [rbx+0x88]
   14000dc7f:	call   0x140006aa0
   14000dc84:	mov    rcx,QWORD PTR [rbx+0x90]
   14000dc8b:	call   0x140006aa0
   14000dc90:	mov    rcx,QWORD PTR [rbx+0x98]
   14000dc97:	call   0x140006aa0
   14000dc9c:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000dca3:	call   0x140006aa0
   14000dca8:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000dcaf:	call   0x140006aa0
   14000dcb4:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000dcbb:	call   0x140006aa0
   14000dcc0:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000dcc7:	call   0x140006aa0
   14000dccc:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000dcd3:	call   0x140006aa0
   14000dcd8:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000dcdf:	call   0x140006aa0
   14000dce4:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000dceb:	call   0x140006aa0
   14000dcf0:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000dcf7:	call   0x140006aa0
   14000dcfc:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000dd03:	call   0x140006aa0
   14000dd08:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000dd0f:	call   0x140006aa0
   14000dd14:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000dd1b:	call   0x140006aa0
   14000dd20:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000dd27:	call   0x140006aa0
   14000dd2c:	mov    rcx,QWORD PTR [rbx+0x100]
   14000dd33:	call   0x140006aa0
   14000dd38:	mov    rcx,QWORD PTR [rbx+0x108]
   14000dd3f:	call   0x140006aa0
   14000dd44:	mov    rcx,QWORD PTR [rbx+0x110]
   14000dd4b:	call   0x140006aa0
   14000dd50:	mov    rcx,QWORD PTR [rbx+0x118]
   14000dd57:	call   0x140006aa0
   14000dd5c:	mov    rcx,QWORD PTR [rbx+0x120]
   14000dd63:	call   0x140006aa0
   14000dd68:	mov    rcx,QWORD PTR [rbx+0x128]
   14000dd6f:	call   0x140006aa0
   14000dd74:	mov    rcx,QWORD PTR [rbx+0x130]
   14000dd7b:	call   0x140006aa0
   14000dd80:	mov    rcx,QWORD PTR [rbx+0x138]
   14000dd87:	call   0x140006aa0
   14000dd8c:	mov    rcx,QWORD PTR [rbx+0x140]
   14000dd93:	call   0x140006aa0
   14000dd98:	mov    rcx,QWORD PTR [rbx+0x148]
   14000dd9f:	call   0x140006aa0
   14000dda4:	mov    rcx,QWORD PTR [rbx+0x150]
   14000ddab:	call   0x140006aa0
   14000ddb0:	mov    rcx,QWORD PTR [rbx+0x168]
   14000ddb7:	call   0x140006aa0
   14000ddbc:	mov    rcx,QWORD PTR [rbx+0x170]
   14000ddc3:	call   0x140006aa0
   14000ddc8:	mov    rcx,QWORD PTR [rbx+0x178]
   14000ddcf:	call   0x140006aa0
   14000ddd4:	mov    rcx,QWORD PTR [rbx+0x180]
   14000dddb:	call   0x140006aa0
   14000dde0:	mov    rcx,QWORD PTR [rbx+0x188]
   14000dde7:	call   0x140006aa0
   14000ddec:	mov    rcx,QWORD PTR [rbx+0x190]
   14000ddf3:	call   0x140006aa0
   14000ddf8:	mov    rcx,QWORD PTR [rbx+0x160]
   14000ddff:	call   0x140006aa0
   14000de04:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000de0b:	call   0x140006aa0
   14000de10:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000de17:	call   0x140006aa0
   14000de1c:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000de23:	call   0x140006aa0
   14000de28:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000de2f:	call   0x140006aa0
   14000de34:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000de3b:	call   0x140006aa0
   14000de40:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000de47:	call   0x140006aa0
   14000de4c:	mov    rcx,QWORD PTR [rbx+0x198]
   14000de53:	call   0x140006aa0
   14000de58:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000de5f:	call   0x140006aa0
   14000de64:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000de6b:	call   0x140006aa0
   14000de70:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000de77:	call   0x140006aa0
   14000de7c:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000de83:	call   0x140006aa0
   14000de88:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000de8f:	call   0x140006aa0
   14000de94:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000de9b:	call   0x140006aa0
   14000dea0:	mov    rcx,QWORD PTR [rbx+0x200]
   14000dea7:	call   0x140006aa0
   14000deac:	mov    rcx,QWORD PTR [rbx+0x208]
   14000deb3:	call   0x140006aa0
   14000deb8:	mov    rcx,QWORD PTR [rbx+0x210]
   14000debf:	call   0x140006aa0
   14000dec4:	mov    rcx,QWORD PTR [rbx+0x218]
   14000decb:	call   0x140006aa0
   14000ded0:	mov    rcx,QWORD PTR [rbx+0x220]
   14000ded7:	call   0x140006aa0
   14000dedc:	mov    rcx,QWORD PTR [rbx+0x228]
   14000dee3:	call   0x140006aa0
   14000dee8:	mov    rcx,QWORD PTR [rbx+0x230]
   14000deef:	call   0x140006aa0
   14000def4:	mov    rcx,QWORD PTR [rbx+0x238]
   14000defb:	call   0x140006aa0
   14000df00:	mov    rcx,QWORD PTR [rbx+0x240]
   14000df07:	call   0x140006aa0
   14000df0c:	mov    rcx,QWORD PTR [rbx+0x248]
   14000df13:	call   0x140006aa0
   14000df18:	mov    rcx,QWORD PTR [rbx+0x250]
   14000df1f:	call   0x140006aa0
   14000df24:	mov    rcx,QWORD PTR [rbx+0x258]
   14000df2b:	call   0x140006aa0
   14000df30:	mov    rcx,QWORD PTR [rbx+0x260]
   14000df37:	call   0x140006aa0
   14000df3c:	mov    rcx,QWORD PTR [rbx+0x268]
   14000df43:	call   0x140006aa0
   14000df48:	mov    rcx,QWORD PTR [rbx+0x270]
   14000df4f:	call   0x140006aa0
   14000df54:	mov    rcx,QWORD PTR [rbx+0x278]
   14000df5b:	call   0x140006aa0
   14000df60:	mov    rcx,QWORD PTR [rbx+0x280]
   14000df67:	call   0x140006aa0
   14000df6c:	mov    rcx,QWORD PTR [rbx+0x288]
   14000df73:	call   0x140006aa0
   14000df78:	mov    rcx,QWORD PTR [rbx+0x290]
   14000df7f:	call   0x140006aa0
   14000df84:	mov    rcx,QWORD PTR [rbx+0x298]
   14000df8b:	call   0x140006aa0
   14000df90:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000df97:	call   0x140006aa0
   14000df9c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000dfa3:	call   0x140006aa0
   14000dfa8:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000dfaf:	call   0x140006aa0
   14000dfb4:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000dfbb:	call   0x140006aa0
   14000dfc0:	add    rsp,0x20
   14000dfc4:	pop    rbx
   14000dfc5:	ret    
   14000dfc6:	int3   
   14000dfc7:	int3   
   14000dfc8:	rex push rbp
   14000dfca:	push   r12
   14000dfcc:	push   r13
   14000dfce:	push   r14
   14000dfd0:	push   r15
   14000dfd2:	sub    rsp,0x50
   14000dfd6:	lea    rbp,[rsp+0x40]
   14000dfdb:	mov    QWORD PTR [rbp+0x40],rbx
   14000dfdf:	mov    QWORD PTR [rbp+0x48],rsi
   14000dfe3:	mov    QWORD PTR [rbp+0x50],rdi
   14000dfe7:	mov    rax,QWORD PTR [rip+0xd09a]        # 0x14001b088
   14000dfee:	xor    rax,rbp
   14000dff1:	mov    QWORD PTR [rbp+0x8],rax
   14000dff5:	mov    ebx,DWORD PTR [rbp+0x60]
   14000dff8:	xor    edi,edi
   14000dffa:	mov    r12,r9
   14000dffd:	mov    r13d,r8d
   14000e000:	mov    QWORD PTR [rbp+0x0],rdx
   14000e004:	test   ebx,ebx
   14000e006:	jle    0x14000e032
   14000e008:	mov    r10d,ebx
   14000e00b:	mov    rax,r9
   14000e00e:	dec    r10d
   14000e011:	cmp    BYTE PTR [rax],dil
   14000e014:	je     0x14000e022
   14000e016:	inc    rax
   14000e019:	test   r10d,r10d
   14000e01c:	jne    0x14000e00e
   14000e01e:	or     r10d,0xffffffff
   14000e022:	mov    eax,ebx
   14000e024:	sub    eax,r10d
   14000e027:	dec    eax
   14000e029:	cmp    eax,ebx
   14000e02b:	lea    ebx,[rax+0x1]
   14000e02e:	jl     0x14000e032
   14000e030:	mov    ebx,eax
   14000e032:	mov    r14d,DWORD PTR [rbp+0x78]
   14000e036:	mov    esi,edi
   14000e038:	test   r14d,r14d
   14000e03b:	jne    0x14000e044
   14000e03d:	mov    rax,QWORD PTR [rcx]
   14000e040:	mov    r14d,DWORD PTR [rax+0x4]
   14000e044:	neg    DWORD PTR [rbp+0x80]
   14000e04a:	mov    r9d,ebx
   14000e04d:	mov    r8,r12
   14000e050:	sbb    edx,edx
   14000e052:	mov    ecx,r14d
   14000e055:	mov    DWORD PTR [rsp+0x28],edi
   14000e059:	and    edx,0x8
   14000e05c:	mov    QWORD PTR [rsp+0x20],rdi
   14000e061:	inc    edx
   14000e063:	call   QWORD PTR [rip+0x5187]        # 0x1400131f0
   14000e069:	movsxd r15,eax
   14000e06c:	test   eax,eax
   14000e06e:	jne    0x14000e077
   14000e070:	xor    eax,eax
   14000e072:	jmp    0x14000e270
   14000e077:	movabs r8,0xffffffffffffff0
   14000e081:	test   eax,eax
   14000e083:	jle    0x14000e0e6
   14000e085:	xor    edx,edx
   14000e087:	lea    rax,[rdx-0x20]
   14000e08b:	div    r15
   14000e08e:	cmp    rax,0x2
   14000e092:	jb     0x14000e0e6
   14000e094:	lea    rcx,[r15*2+0x10]
   14000e09c:	cmp    rcx,0x400
   14000e0a3:	ja     0x14000e0cf
   14000e0a5:	lea    rax,[rcx+0xf]
   14000e0a9:	cmp    rax,rcx
   14000e0ac:	ja     0x14000e0b1
   14000e0ae:	mov    rax,r8
   14000e0b1:	and    rax,0xfffffffffffffff0
   14000e0b5:	call   0x14000e9f0
   14000e0ba:	sub    rsp,rax
   14000e0bd:	lea    rdi,[rsp+0x40]
   14000e0c2:	test   rdi,rdi
   14000e0c5:	je     0x14000e070
   14000e0c7:	mov    DWORD PTR [rdi],0xcccc
   14000e0cd:	jmp    0x14000e0e2
   14000e0cf:	call   0x140009c34
   14000e0d4:	mov    rdi,rax
   14000e0d7:	test   rax,rax
   14000e0da:	je     0x14000e0e6
   14000e0dc:	mov    DWORD PTR [rax],0xdddd
   14000e0e2:	add    rdi,0x10
   14000e0e6:	test   rdi,rdi
   14000e0e9:	je     0x14000e070
   14000e0eb:	mov    r9d,ebx
   14000e0ee:	mov    r8,r12
   14000e0f1:	mov    edx,0x1
   14000e0f6:	mov    ecx,r14d
   14000e0f9:	mov    DWORD PTR [rsp+0x28],r15d
   14000e0fe:	mov    QWORD PTR [rsp+0x20],rdi
   14000e103:	call   QWORD PTR [rip+0x50e7]        # 0x1400131f0
   14000e109:	test   eax,eax
   14000e10b:	je     0x14000e25d
   14000e111:	mov    r12,QWORD PTR [rbp+0x0]
   14000e115:	and    DWORD PTR [rsp+0x28],esi
   14000e119:	and    QWORD PTR [rsp+0x20],rsi
   14000e11e:	mov    rcx,r12
   14000e121:	mov    r9d,r15d
   14000e124:	mov    r8,rdi
   14000e127:	mov    edx,r13d
   14000e12a:	call   0x14000d6e8
   14000e12f:	movsxd rsi,eax
   14000e132:	test   eax,eax
   14000e134:	je     0x14000e25d
   14000e13a:	mov    r8d,0x400
   14000e140:	test   r8d,r13d
   14000e143:	je     0x14000e17b
   14000e145:	mov    ecx,DWORD PTR [rbp+0x70]
   14000e148:	test   ecx,ecx
   14000e14a:	je     0x14000e25d
   14000e150:	cmp    esi,ecx
   14000e152:	jg     0x14000e25d
   14000e158:	mov    rax,QWORD PTR [rbp+0x68]
   14000e15c:	mov    DWORD PTR [rsp+0x28],ecx
   14000e160:	mov    r9d,r15d
   14000e163:	mov    r8,rdi
   14000e166:	mov    edx,r13d
   14000e169:	mov    rcx,r12
   14000e16c:	mov    QWORD PTR [rsp+0x20],rax
   14000e171:	call   0x14000d6e8
   14000e176:	jmp    0x14000e25d
   14000e17b:	test   eax,eax
   14000e17d:	jle    0x14000e1e9
   14000e17f:	xor    edx,edx
   14000e181:	lea    rax,[rdx-0x20]
   14000e185:	div    rsi
   14000e188:	cmp    rax,0x2
   14000e18c:	jb     0x14000e1e9
   14000e18e:	lea    rcx,[rsi*2+0x10]
   14000e196:	cmp    rcx,r8
   14000e199:	ja     0x14000e1d0
   14000e19b:	lea    rax,[rcx+0xf]
   14000e19f:	cmp    rax,rcx
   14000e1a2:	ja     0x14000e1ae
   14000e1a4:	movabs rax,0xffffffffffffff0
   14000e1ae:	and    rax,0xfffffffffffffff0
   14000e1b2:	call   0x14000e9f0
   14000e1b7:	sub    rsp,rax
   14000e1ba:	lea    rbx,[rsp+0x40]
   14000e1bf:	test   rbx,rbx
   14000e1c2:	je     0x14000e25d
   14000e1c8:	mov    DWORD PTR [rbx],0xcccc
   14000e1ce:	jmp    0x14000e1e3
   14000e1d0:	call   0x140009c34
   14000e1d5:	mov    rbx,rax
   14000e1d8:	test   rax,rax
   14000e1db:	je     0x14000e1eb
   14000e1dd:	mov    DWORD PTR [rax],0xdddd
   14000e1e3:	add    rbx,0x10
   14000e1e7:	jmp    0x14000e1eb
   14000e1e9:	xor    ebx,ebx
   14000e1eb:	test   rbx,rbx
   14000e1ee:	je     0x14000e25d
   14000e1f0:	mov    r9d,r15d
   14000e1f3:	mov    r8,rdi
   14000e1f6:	mov    edx,r13d
   14000e1f9:	mov    rcx,r12
   14000e1fc:	mov    DWORD PTR [rsp+0x28],esi
   14000e200:	mov    QWORD PTR [rsp+0x20],rbx
   14000e205:	call   0x14000d6e8
   14000e20a:	xor    ecx,ecx
   14000e20c:	test   eax,eax
   14000e20e:	je     0x14000e24c
   14000e210:	mov    eax,DWORD PTR [rbp+0x70]
   14000e213:	xor    edx,edx
   14000e215:	mov    QWORD PTR [rsp+0x38],rcx
   14000e21a:	mov    r9d,esi
   14000e21d:	mov    r8,rbx
   14000e220:	mov    QWORD PTR [rsp+0x30],rcx
   14000e225:	test   eax,eax
   14000e227:	jne    0x14000e234
   14000e229:	mov    DWORD PTR [rsp+0x28],ecx
   14000e22d:	mov    QWORD PTR [rsp+0x20],rcx
   14000e232:	jmp    0x14000e241
   14000e234:	mov    DWORD PTR [rsp+0x28],eax
   14000e238:	mov    rax,QWORD PTR [rbp+0x68]
   14000e23c:	mov    QWORD PTR [rsp+0x20],rax
   14000e241:	mov    ecx,r14d
   14000e244:	call   QWORD PTR [rip+0x4f26]        # 0x140013170
   14000e24a:	mov    esi,eax
   14000e24c:	lea    rcx,[rbx-0x10]
   14000e250:	cmp    DWORD PTR [rcx],0xdddd
   14000e256:	jne    0x14000e25d
   14000e258:	call   0x140006aa0
   14000e25d:	lea    rcx,[rdi-0x10]
   14000e261:	cmp    DWORD PTR [rcx],0xdddd
   14000e267:	jne    0x14000e26e
   14000e269:	call   0x140006aa0
   14000e26e:	mov    eax,esi
   14000e270:	mov    rcx,QWORD PTR [rbp+0x8]
   14000e274:	xor    rcx,rbp
   14000e277:	call   0x140005fe0
   14000e27c:	mov    rbx,QWORD PTR [rbp+0x40]
   14000e280:	mov    rsi,QWORD PTR [rbp+0x48]
   14000e284:	mov    rdi,QWORD PTR [rbp+0x50]
   14000e288:	lea    rsp,[rbp+0x10]
   14000e28c:	pop    r15
   14000e28e:	pop    r14
   14000e290:	pop    r13
   14000e292:	pop    r12
   14000e294:	pop    rbp
   14000e295:	ret    
   14000e296:	int3   
   14000e297:	int3   
   14000e298:	mov    QWORD PTR [rsp+0x8],rbx
   14000e29d:	mov    QWORD PTR [rsp+0x10],rsi
   14000e2a2:	push   rdi
   14000e2a3:	sub    rsp,0x70
   14000e2a7:	mov    rsi,rdx
   14000e2aa:	mov    rdx,rcx
   14000e2ad:	lea    rcx,[rsp+0x50]
   14000e2b2:	mov    rbx,r9
   14000e2b5:	mov    edi,r8d
   14000e2b8:	call   0x140008d54
   14000e2bd:	mov    eax,DWORD PTR [rsp+0xc0]
   14000e2c4:	lea    rcx,[rsp+0x50]
   14000e2c9:	mov    r9,rbx
   14000e2cc:	mov    DWORD PTR [rsp+0x40],eax
   14000e2d0:	mov    eax,DWORD PTR [rsp+0xb8]
   14000e2d7:	mov    r8d,edi
   14000e2da:	mov    DWORD PTR [rsp+0x38],eax
   14000e2de:	mov    eax,DWORD PTR [rsp+0xb0]
   14000e2e5:	mov    rdx,rsi
   14000e2e8:	mov    DWORD PTR [rsp+0x30],eax
   14000e2ec:	mov    rax,QWORD PTR [rsp+0xa8]
   14000e2f4:	mov    QWORD PTR [rsp+0x28],rax
   14000e2f9:	mov    eax,DWORD PTR [rsp+0xa0]
   14000e300:	mov    DWORD PTR [rsp+0x20],eax
   14000e304:	call   0x14000dfc8
   14000e309:	cmp    BYTE PTR [rsp+0x68],0x0
   14000e30e:	je     0x14000e31c
   14000e310:	mov    rcx,QWORD PTR [rsp+0x60]
   14000e315:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e31c:	lea    r11,[rsp+0x70]
   14000e321:	mov    rbx,QWORD PTR [r11+0x10]
   14000e325:	mov    rsi,QWORD PTR [r11+0x18]
   14000e329:	mov    rsp,r11
   14000e32c:	pop    rdi
   14000e32d:	ret    
   14000e32e:	int3   
   14000e32f:	int3   
   14000e330:	rex push rbp
   14000e332:	push   r12
   14000e334:	push   r13
   14000e336:	push   r14
   14000e338:	push   r15
   14000e33a:	sub    rsp,0x40
   14000e33e:	lea    rbp,[rsp+0x30]
   14000e343:	mov    QWORD PTR [rbp+0x40],rbx
   14000e347:	mov    QWORD PTR [rbp+0x48],rsi
   14000e34b:	mov    QWORD PTR [rbp+0x50],rdi
   14000e34f:	mov    rax,QWORD PTR [rip+0xcd32]        # 0x14001b088
   14000e356:	xor    rax,rbp
   14000e359:	mov    QWORD PTR [rbp+0x0],rax
   14000e35d:	mov    r14d,DWORD PTR [rbp+0x68]
   14000e361:	xor    edi,edi
   14000e363:	mov    r15d,r9d
   14000e366:	mov    r12,r8
   14000e369:	mov    r13d,edx
   14000e36c:	test   r14d,r14d
   14000e36f:	jne    0x14000e378
   14000e371:	mov    rax,QWORD PTR [rcx]
   14000e374:	mov    r14d,DWORD PTR [rax+0x4]
   14000e378:	neg    DWORD PTR [rbp+0x70]
   14000e37b:	mov    ecx,r14d
   14000e37e:	mov    DWORD PTR [rsp+0x28],edi
   14000e382:	sbb    edx,edx
   14000e384:	mov    QWORD PTR [rsp+0x20],rdi
   14000e389:	and    edx,0x8
   14000e38c:	inc    edx
   14000e38e:	call   QWORD PTR [rip+0x4e5c]        # 0x1400131f0
   14000e394:	movsxd rsi,eax
   14000e397:	test   eax,eax
   14000e399:	jne    0x14000e3a2
   14000e39b:	xor    eax,eax
   14000e39d:	jmp    0x14000e46f
   14000e3a2:	jle    0x14000e40e
   14000e3a4:	movabs rax,0x7ffffffffffffff0
   14000e3ae:	cmp    rsi,rax
   14000e3b1:	ja     0x14000e40e
   14000e3b3:	lea    rcx,[rsi*2+0x10]
   14000e3bb:	cmp    rcx,0x400
   14000e3c2:	ja     0x14000e3f5
   14000e3c4:	lea    rax,[rcx+0xf]
   14000e3c8:	cmp    rax,rcx
   14000e3cb:	ja     0x14000e3d7
   14000e3cd:	movabs rax,0xffffffffffffff0
   14000e3d7:	and    rax,0xfffffffffffffff0
   14000e3db:	call   0x14000e9f0
   14000e3e0:	sub    rsp,rax
   14000e3e3:	lea    rbx,[rsp+0x30]
   14000e3e8:	test   rbx,rbx
   14000e3eb:	je     0x14000e39b
   14000e3ed:	mov    DWORD PTR [rbx],0xcccc
   14000e3f3:	jmp    0x14000e408
   14000e3f5:	call   0x140009c34
   14000e3fa:	mov    rbx,rax
   14000e3fd:	test   rax,rax
   14000e400:	je     0x14000e411
   14000e402:	mov    DWORD PTR [rax],0xdddd
   14000e408:	add    rbx,0x10
   14000e40c:	jmp    0x14000e411
   14000e40e:	mov    rbx,rdi
   14000e411:	test   rbx,rbx
   14000e414:	je     0x14000e39b
   14000e416:	mov    r8,rsi
   14000e419:	xor    edx,edx
   14000e41b:	mov    rcx,rbx
   14000e41e:	add    r8,r8
   14000e421:	call   0x1400099c0
   14000e426:	mov    r9d,r15d
   14000e429:	mov    r8,r12
   14000e42c:	mov    edx,0x1
   14000e431:	mov    ecx,r14d
   14000e434:	mov    DWORD PTR [rsp+0x28],esi
   14000e438:	mov    QWORD PTR [rsp+0x20],rbx
   14000e43d:	call   QWORD PTR [rip+0x4dad]        # 0x1400131f0
   14000e443:	test   eax,eax
   14000e445:	je     0x14000e45c
   14000e447:	mov    r9,QWORD PTR [rbp+0x60]
   14000e44b:	mov    r8d,eax
   14000e44e:	mov    rdx,rbx
   14000e451:	mov    ecx,r13d
   14000e454:	call   QWORD PTR [rip+0x4f06]        # 0x140013360
   14000e45a:	mov    edi,eax
   14000e45c:	lea    rcx,[rbx-0x10]
   14000e460:	cmp    DWORD PTR [rcx],0xdddd
   14000e466:	jne    0x14000e46d
   14000e468:	call   0x140006aa0
   14000e46d:	mov    eax,edi
   14000e46f:	mov    rcx,QWORD PTR [rbp+0x0]
   14000e473:	xor    rcx,rbp
   14000e476:	call   0x140005fe0
   14000e47b:	mov    rbx,QWORD PTR [rbp+0x40]
   14000e47f:	mov    rsi,QWORD PTR [rbp+0x48]
   14000e483:	mov    rdi,QWORD PTR [rbp+0x50]
   14000e487:	lea    rsp,[rbp+0x10]
   14000e48b:	pop    r15
   14000e48d:	pop    r14
   14000e48f:	pop    r13
   14000e491:	pop    r12
   14000e493:	pop    rbp
   14000e494:	ret    
   14000e495:	int3   
   14000e496:	int3   
   14000e497:	int3   
   14000e498:	mov    QWORD PTR [rsp+0x8],rbx
   14000e49d:	mov    QWORD PTR [rsp+0x10],rsi
   14000e4a2:	push   rdi
   14000e4a3:	sub    rsp,0x60
   14000e4a7:	mov    esi,edx
   14000e4a9:	mov    rdx,rcx
   14000e4ac:	lea    rcx,[rsp+0x40]
   14000e4b1:	mov    ebx,r9d
   14000e4b4:	mov    rdi,r8
   14000e4b7:	call   0x140008d54
   14000e4bc:	mov    eax,DWORD PTR [rsp+0xa0]
   14000e4c3:	lea    rcx,[rsp+0x40]
   14000e4c8:	mov    r9d,ebx
   14000e4cb:	mov    DWORD PTR [rsp+0x30],eax
   14000e4cf:	mov    eax,DWORD PTR [rsp+0x98]
   14000e4d6:	mov    r8,rdi
   14000e4d9:	mov    DWORD PTR [rsp+0x28],eax
   14000e4dd:	mov    rax,QWORD PTR [rsp+0x90]
   14000e4e5:	mov    edx,esi
   14000e4e7:	mov    QWORD PTR [rsp+0x20],rax
   14000e4ec:	call   0x14000e330
   14000e4f1:	cmp    BYTE PTR [rsp+0x58],0x0
   14000e4f6:	je     0x14000e504
   14000e4f8:	mov    rcx,QWORD PTR [rsp+0x50]
   14000e4fd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e504:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e509:	mov    rsi,QWORD PTR [rsp+0x78]
   14000e50e:	add    rsp,0x60
   14000e512:	pop    rdi
   14000e513:	ret    
   14000e514:	mov    ecx,0x2
   14000e519:	jmp    0x140007400
   14000e51e:	int3   
   14000e51f:	int3   
   14000e520:	rex push rbx
   14000e522:	sub    rsp,0x20
   14000e526:	mov    rbx,rcx
   14000e529:	test   rcx,rcx
   14000e52c:	jne    0x14000e538
   14000e52e:	add    rsp,0x20
   14000e532:	pop    rbx
   14000e533:	jmp    0x14000e5f4
   14000e538:	call   0x14000e56c
   14000e53d:	test   eax,eax
   14000e53f:	je     0x14000e546
   14000e541:	or     eax,0xffffffff
   14000e544:	jmp    0x14000e566
   14000e546:	test   DWORD PTR [rbx+0x18],0x4000
   14000e54d:	je     0x14000e564
   14000e54f:	mov    rcx,rbx
   14000e552:	call   0x14000c9d0
   14000e557:	mov    ecx,eax
   14000e559:	call   0x14000ec28
   14000e55e:	neg    eax
   14000e560:	sbb    eax,eax
   14000e562:	jmp    0x14000e566
   14000e564:	xor    eax,eax
   14000e566:	add    rsp,0x20
   14000e56a:	pop    rbx
   14000e56b:	ret    
   14000e56c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e571:	mov    QWORD PTR [rsp+0x10],rsi
   14000e576:	push   rdi
   14000e577:	sub    rsp,0x20
   14000e57b:	mov    eax,DWORD PTR [rcx+0x18]
   14000e57e:	xor    esi,esi
   14000e580:	mov    rbx,rcx
   14000e583:	and    al,0x3
   14000e585:	cmp    al,0x2
   14000e587:	jne    0x14000e5c8
   14000e589:	test   DWORD PTR [rcx+0x18],0x108
   14000e590:	je     0x14000e5c8
   14000e592:	mov    edi,DWORD PTR [rcx]
   14000e594:	sub    edi,DWORD PTR [rcx+0x10]
   14000e597:	test   edi,edi
   14000e599:	jle    0x14000e5c8
   14000e59b:	call   0x14000c9d0
   14000e5a0:	mov    rdx,QWORD PTR [rbx+0x10]
   14000e5a4:	mov    r8d,edi
   14000e5a7:	mov    ecx,eax
   14000e5a9:	call   0x14000ca6c
   14000e5ae:	cmp    eax,edi
   14000e5b0:	jne    0x14000e5c1
   14000e5b2:	mov    eax,DWORD PTR [rbx+0x18]
   14000e5b5:	test   al,al
   14000e5b7:	jns    0x14000e5c8
   14000e5b9:	and    eax,0xfffffffd
   14000e5bc:	mov    DWORD PTR [rbx+0x18],eax
   14000e5bf:	jmp    0x14000e5c8
   14000e5c1:	or     DWORD PTR [rbx+0x18],0x20
   14000e5c5:	or     esi,0xffffffff
   14000e5c8:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e5cc:	and    DWORD PTR [rbx+0x8],0x0
   14000e5d0:	mov    eax,esi
   14000e5d2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e5d7:	mov    QWORD PTR [rbx],rcx
   14000e5da:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e5df:	add    rsp,0x20
   14000e5e3:	pop    rdi
   14000e5e4:	ret    
   14000e5e5:	int3   
   14000e5e6:	int3   
   14000e5e7:	int3   
   14000e5e8:	mov    ecx,0x1
   14000e5ed:	jmp    0x14000e5f4
   14000e5f2:	int3   
   14000e5f3:	int3   
   14000e5f4:	mov    QWORD PTR [rsp+0x8],rbx
   14000e5f9:	mov    QWORD PTR [rsp+0x10],rsi
   14000e5fe:	mov    QWORD PTR [rsp+0x18],rdi
   14000e603:	push   r13
   14000e605:	push   r14
   14000e607:	push   r15
   14000e609:	sub    rsp,0x30
   14000e60d:	mov    r14d,ecx
   14000e610:	xor    esi,esi
   14000e612:	xor    edi,edi
   14000e614:	lea    ecx,[rsi+0x1]
   14000e617:	call   0x14000ae60
   14000e61c:	nop
   14000e61d:	xor    ebx,ebx
   14000e61f:	or     r13d,0xffffffff
   14000e623:	mov    DWORD PTR [rsp+0x20],ebx
   14000e627:	cmp    ebx,DWORD PTR [rip+0x1008b]        # 0x14001e6b8
   14000e62d:	jge    0x14000e6ad
   14000e62f:	movsxd r15,ebx
   14000e632:	mov    rax,QWORD PTR [rip+0x10077]        # 0x14001e6b0
   14000e639:	mov    rdx,QWORD PTR [rax+r15*8]
   14000e63d:	test   rdx,rdx
   14000e640:	je     0x14000e6a6
   14000e642:	test   BYTE PTR [rdx+0x18],0x83
   14000e646:	je     0x14000e6a6
   14000e648:	mov    ecx,ebx
   14000e64a:	call   0x14000c79c
   14000e64f:	nop
   14000e650:	mov    rax,QWORD PTR [rip+0x10059]        # 0x14001e6b0
   14000e657:	mov    rcx,QWORD PTR [rax+r15*8]
   14000e65b:	test   BYTE PTR [rcx+0x18],0x83
   14000e65f:	je     0x14000e694
   14000e661:	cmp    r14d,0x1
   14000e665:	jne    0x14000e679
   14000e667:	call   0x14000e520
   14000e66c:	cmp    eax,r13d
   14000e66f:	je     0x14000e694
   14000e671:	inc    esi
   14000e673:	mov    DWORD PTR [rsp+0x24],esi
   14000e677:	jmp    0x14000e694
   14000e679:	test   r14d,r14d
   14000e67c:	jne    0x14000e694
   14000e67e:	test   BYTE PTR [rcx+0x18],0x2
   14000e682:	je     0x14000e694
   14000e684:	call   0x14000e520
   14000e689:	cmp    eax,r13d
   14000e68c:	cmove  edi,r13d
   14000e690:	mov    DWORD PTR [rsp+0x28],edi
   14000e694:	mov    rdx,QWORD PTR [rip+0x10015]        # 0x14001e6b0
   14000e69b:	mov    rdx,QWORD PTR [rdx+r15*8]
   14000e69f:	mov    ecx,ebx
   14000e6a1:	call   0x14000c820
   14000e6a6:	inc    ebx
   14000e6a8:	jmp    0x14000e623
   14000e6ad:	mov    ecx,0x1
   14000e6b2:	call   0x14000b048
   14000e6b7:	cmp    r14d,0x1
   14000e6bb:	cmove  edi,esi
   14000e6be:	mov    eax,edi
   14000e6c0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e6c5:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e6ca:	mov    rdi,QWORD PTR [rsp+0x60]
   14000e6cf:	add    rsp,0x30
   14000e6d3:	pop    r15
   14000e6d5:	pop    r14
   14000e6d7:	pop    r13
   14000e6d9:	ret    
   14000e6da:	int3   
   14000e6db:	int3   
   14000e6dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000e6e1:	mov    QWORD PTR [rsp+0x10],rsi
   14000e6e6:	push   rdi
   14000e6e7:	sub    rsp,0x30
   14000e6eb:	xor    edi,edi
   14000e6ed:	lea    ecx,[rdi+0x1]
   14000e6f0:	call   0x14000ae60
   14000e6f5:	nop
   14000e6f6:	lea    ebx,[rdi+0x3]
   14000e6f9:	mov    DWORD PTR [rsp+0x20],ebx
   14000e6fd:	cmp    ebx,DWORD PTR [rip+0xffb5]        # 0x14001e6b8
   14000e703:	jge    0x14000e768
   14000e705:	movsxd rsi,ebx
   14000e708:	mov    rax,QWORD PTR [rip+0xffa1]        # 0x14001e6b0
   14000e70f:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000e713:	test   rcx,rcx
   14000e716:	je     0x14000e764
   14000e718:	test   BYTE PTR [rcx+0x18],0x83
   14000e71c:	je     0x14000e72e
   14000e71e:	call   0x14000ed90
   14000e723:	cmp    eax,0xffffffff
   14000e726:	je     0x14000e72e
   14000e728:	inc    edi
   14000e72a:	mov    DWORD PTR [rsp+0x24],edi
   14000e72e:	cmp    ebx,0x14
   14000e731:	jl     0x14000e764
   14000e733:	mov    rax,QWORD PTR [rip+0xff76]        # 0x14001e6b0
   14000e73a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000e73e:	add    rcx,0x30
   14000e742:	call   QWORD PTR [rip+0x4ad8]        # 0x140013220
   14000e748:	mov    rcx,QWORD PTR [rip+0xff61]        # 0x14001e6b0
   14000e74f:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14000e753:	call   0x140006aa0
   14000e758:	mov    rax,QWORD PTR [rip+0xff51]        # 0x14001e6b0
   14000e75f:	and    QWORD PTR [rax+rsi*8],0x0
   14000e764:	inc    ebx
   14000e766:	jmp    0x14000e6f9
   14000e768:	mov    ecx,0x1
   14000e76d:	call   0x14000b048
   14000e772:	mov    eax,edi
   14000e774:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e779:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e77e:	add    rsp,0x30
   14000e782:	pop    rdi
   14000e783:	ret    
   14000e784:	mov    QWORD PTR [rsp+0x8],rbx
   14000e789:	mov    QWORD PTR [rsp+0x10],rsi
   14000e78e:	mov    QWORD PTR [rsp+0x18],rdi
   14000e793:	push   r15
   14000e795:	sub    rsp,0x20
   14000e799:	movsxd rbx,ecx
   14000e79c:	mov    rsi,rbx
   14000e79f:	sar    rsi,0x5
   14000e7a3:	lea    r15,[rip+0x10f36]        # 0x14001f6e0
   14000e7aa:	and    ebx,0x1f
   14000e7ad:	imul   rbx,rbx,0x58
   14000e7b1:	mov    rdi,QWORD PTR [r15+rsi*8]
   14000e7b5:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14000e7ba:	jne    0x14000e7ee
   14000e7bc:	mov    ecx,0xa
   14000e7c1:	call   0x14000ae60
   14000e7c6:	nop
   14000e7c7:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14000e7cc:	jne    0x14000e7e4
   14000e7ce:	lea    rcx,[rbx+0x10]
   14000e7d2:	add    rcx,rdi
   14000e7d5:	mov    edx,0xfa0
   14000e7da:	call   QWORD PTR [rip+0x4a38]        # 0x140013218
   14000e7e0:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000e7e4:	mov    ecx,0xa
   14000e7e9:	call   0x14000b048
   14000e7ee:	mov    rcx,QWORD PTR [r15+rsi*8]
   14000e7f2:	add    rcx,0x10
   14000e7f6:	add    rcx,rbx
   14000e7f9:	call   QWORD PTR [rip+0x4af9]        # 0x1400132f8
   14000e7ff:	mov    eax,0x1
   14000e804:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e809:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e80e:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e813:	add    rsp,0x20
   14000e817:	pop    r15
   14000e819:	ret    
   14000e81a:	int3   
   14000e81b:	int3   
   14000e81c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e821:	mov    QWORD PTR [rsp+0x10],rdi
   14000e826:	push   r14
   14000e828:	sub    rsp,0x20
   14000e82c:	test   ecx,ecx
   14000e82e:	js     0x14000e89f
   14000e830:	cmp    ecx,DWORD PTR [rip+0x10e8e]        # 0x14001f6c4
   14000e836:	jae    0x14000e89f
   14000e838:	movsxd rbx,ecx
   14000e83b:	lea    r14,[rip+0x10e9e]        # 0x14001f6e0
   14000e842:	mov    rdi,rbx
   14000e845:	and    ebx,0x1f
   14000e848:	sar    rdi,0x5
   14000e84c:	imul   rbx,rbx,0x58
   14000e850:	mov    rax,QWORD PTR [r14+rdi*8]
   14000e854:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000e859:	je     0x14000e89f
   14000e85b:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000e860:	je     0x14000e89f
   14000e862:	cmp    DWORD PTR [rip+0xe677],0x1        # 0x14001cee0
   14000e869:	jne    0x14000e892
   14000e86b:	test   ecx,ecx
   14000e86d:	je     0x14000e885
   14000e86f:	dec    ecx
   14000e871:	je     0x14000e87e
   14000e873:	dec    ecx
   14000e875:	jne    0x14000e892
   14000e877:	mov    ecx,0xfffffff4
   14000e87c:	jmp    0x14000e88a
   14000e87e:	mov    ecx,0xfffffff5
   14000e883:	jmp    0x14000e88a
   14000e885:	mov    ecx,0xfffffff6
   14000e88a:	xor    edx,edx
   14000e88c:	call   QWORD PTR [rip+0x4ad6]        # 0x140013368
   14000e892:	mov    rax,QWORD PTR [r14+rdi*8]
   14000e896:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000e89b:	xor    eax,eax
   14000e89d:	jmp    0x14000e8b5
   14000e89f:	call   0x140008888
   14000e8a4:	mov    DWORD PTR [rax],0x9
   14000e8aa:	call   0x140008818
   14000e8af:	and    DWORD PTR [rax],0x0
   14000e8b2:	or     eax,0xffffffff
   14000e8b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e8ba:	mov    rdi,QWORD PTR [rsp+0x38]
   14000e8bf:	add    rsp,0x20
   14000e8c3:	pop    r14
   14000e8c5:	ret    
   14000e8c6:	int3   
   14000e8c7:	int3   
   14000e8c8:	rex push rbx
   14000e8ca:	sub    rsp,0x20
   14000e8ce:	movsxd rbx,ecx
   14000e8d1:	cmp    ebx,0xfffffffe
   14000e8d4:	jne    0x14000e8eb
   14000e8d6:	call   0x140008818
   14000e8db:	and    DWORD PTR [rax],0x0
   14000e8de:	call   0x140008888
   14000e8e3:	mov    DWORD PTR [rax],0x9
   14000e8e9:	jmp    0x14000e941
   14000e8eb:	call   0x140007a7c
   14000e8f0:	test   eax,eax
   14000e8f2:	js     0x14000e941
   14000e8f4:	test   ebx,ebx
   14000e8f6:	js     0x14000e929
   14000e8f8:	cmp    ebx,DWORD PTR [rip+0x10dc6]        # 0x14001f6c4
   14000e8fe:	jae    0x14000e929
   14000e900:	mov    rcx,rbx
   14000e903:	mov    rax,rbx
   14000e906:	lea    rdx,[rip+0x10dd3]        # 0x14001f6e0
   14000e90d:	sar    rax,0x5
   14000e911:	and    ecx,0x1f
   14000e914:	mov    rax,QWORD PTR [rdx+rax*8]
   14000e918:	imul   rcx,rcx,0x58
   14000e91c:	test   BYTE PTR [rax+rcx*1+0x8],0x1
   14000e921:	je     0x14000e929
   14000e923:	mov    rax,QWORD PTR [rax+rcx*1]
   14000e927:	jmp    0x14000e945
   14000e929:	call   0x140008818
   14000e92e:	and    DWORD PTR [rax],0x0
   14000e931:	call   0x140008888
   14000e936:	mov    DWORD PTR [rax],0x9
   14000e93c:	call   0x1400087bc
   14000e941:	or     rax,0xffffffffffffffff
   14000e945:	add    rsp,0x20
   14000e949:	pop    rbx
   14000e94a:	ret    
   14000e94b:	int3   
   14000e94c:	movsxd rdx,ecx
   14000e94f:	lea    rcx,[rip+0x10d8a]        # 0x14001f6e0
   14000e956:	mov    rax,rdx
   14000e959:	and    edx,0x1f
   14000e95c:	sar    rax,0x5
   14000e960:	imul   rdx,rdx,0x58
   14000e964:	mov    rax,QWORD PTR [rcx+rax*8]
   14000e968:	lea    rcx,[rdx+0x10]
   14000e96c:	add    rcx,rax
   14000e96f:	rex.W jmp QWORD PTR [rip+0x498a]        # 0x140013300
   14000e976:	int3   
   14000e977:	int3   
   14000e978:	mov    WORD PTR [rsp+0x8],cx
   14000e97d:	sub    rsp,0x38
   14000e981:	mov    rcx,QWORD PTR [rip+0xd970]        # 0x14001c2f8
   14000e988:	cmp    rcx,0xfffffffffffffffe
   14000e98c:	jne    0x14000e99a
   14000e98e:	call   0x14000ee18
   14000e993:	mov    rcx,QWORD PTR [rip+0xd95e]        # 0x14001c2f8
   14000e99a:	cmp    rcx,0xffffffffffffffff
   14000e99e:	jne    0x14000e9a7
   14000e9a0:	mov    eax,0xffff
   14000e9a5:	jmp    0x14000e9cc
   14000e9a7:	and    QWORD PTR [rsp+0x20],0x0
   14000e9ad:	lea    r9,[rsp+0x48]
   14000e9b2:	lea    rdx,[rsp+0x40]
   14000e9b7:	mov    r8d,0x1
   14000e9bd:	call   QWORD PTR [rip+0x49ad]        # 0x140013370
   14000e9c3:	test   eax,eax
   14000e9c5:	je     0x14000e9a0
   14000e9c7:	movzx  eax,WORD PTR [rsp+0x40]
   14000e9cc:	add    rsp,0x38
   14000e9d0:	ret    
   14000e9d1:	int3   
   14000e9d2:	int3   
   14000e9d3:	int3   
   14000e9d4:	int3   
   14000e9d5:	int3   
   14000e9d6:	int3   
   14000e9d7:	int3   
   14000e9d8:	int3   
   14000e9d9:	int3   
   14000e9da:	int3   
   14000e9db:	int3   
   14000e9dc:	int3   
   14000e9dd:	int3   
   14000e9de:	int3   
   14000e9df:	int3   
   14000e9e0:	int3   
   14000e9e1:	int3   
   14000e9e2:	int3   
   14000e9e3:	int3   
   14000e9e4:	int3   
   14000e9e5:	int3   
   14000e9e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e9f0:	sub    rsp,0x10
   14000e9f4:	mov    QWORD PTR [rsp],r10
   14000e9f8:	mov    QWORD PTR [rsp+0x8],r11
   14000e9fd:	xor    r11,r11
   14000ea00:	lea    r10,[rsp+0x18]
   14000ea05:	sub    r10,rax
   14000ea08:	cmovb  r10,r11
   14000ea0c:	mov    r11,QWORD PTR gs:0x10
   14000ea15:	cmp    r10,r11
   14000ea18:	jae    0x14000ea30
   14000ea1a:	and    r10w,0xf000
   14000ea20:	lea    r11,[r11-0x1000]
   14000ea27:	mov    BYTE PTR [r11],0x0
   14000ea2b:	cmp    r10,r11
   14000ea2e:	jne    0x14000ea20
   14000ea30:	mov    r10,QWORD PTR [rsp]
   14000ea34:	mov    r11,QWORD PTR [rsp+0x8]
   14000ea39:	add    rsp,0x10
   14000ea3d:	ret    
   14000ea3e:	int3   
   14000ea3f:	int3   
   14000ea40:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea45:	mov    QWORD PTR [rsp+0x10],rbp
   14000ea4a:	push   rsi
   14000ea4b:	push   rdi
   14000ea4c:	push   r14
   14000ea4e:	sub    rsp,0x20
   14000ea52:	mov    rbx,rdx
   14000ea55:	mov    r14d,ecx
   14000ea58:	call   0x140007a7c
   14000ea5d:	xor    edi,edi
   14000ea5f:	test   eax,eax
   14000ea61:	jns    0x14000ea6b
   14000ea63:	or     eax,0xffffffff
   14000ea66:	jmp    0x14000ebcb
   14000ea6b:	mov    rcx,rbx
   14000ea6e:	call   0x14000c9d0
   14000ea73:	mov    ecx,DWORD PTR [rbx+0x18]
   14000ea76:	movsxd rsi,eax
   14000ea79:	test   cl,0x82
   14000ea7c:	jne    0x14000ea97
   14000ea7e:	call   0x140008888
   14000ea83:	mov    DWORD PTR [rax],0x9
   14000ea89:	or     DWORD PTR [rbx+0x18],0x20
   14000ea8d:	mov    eax,0xffff
   14000ea92:	jmp    0x14000ebcb
   14000ea97:	test   cl,0x40
   14000ea9a:	je     0x14000eaa9
   14000ea9c:	call   0x140008888
   14000eaa1:	mov    DWORD PTR [rax],0x22
   14000eaa7:	jmp    0x14000ea89
   14000eaa9:	test   cl,0x1
   14000eaac:	je     0x14000eac7
   14000eaae:	mov    DWORD PTR [rbx+0x8],edi
   14000eab1:	test   cl,0x10
   14000eab4:	je     0x14000eb44
   14000eaba:	mov    rax,QWORD PTR [rbx+0x10]
   14000eabe:	and    ecx,0xfffffffe
   14000eac1:	mov    QWORD PTR [rbx],rax
   14000eac4:	mov    DWORD PTR [rbx+0x18],ecx
   14000eac7:	mov    eax,DWORD PTR [rbx+0x18]
   14000eaca:	mov    DWORD PTR [rbx+0x8],edi
   14000eacd:	and    eax,0xffffffef
   14000ead0:	or     eax,0x2
   14000ead3:	mov    DWORD PTR [rbx+0x18],eax
   14000ead6:	test   eax,0x10c
   14000eadb:	jne    0x14000eb0c
   14000eadd:	call   0x14000c72c
   14000eae2:	add    rax,0x30
   14000eae6:	cmp    rbx,rax
   14000eae9:	je     0x14000eaf9
   14000eaeb:	call   0x14000c72c
   14000eaf0:	add    rax,0x60
   14000eaf4:	cmp    rbx,rax
   14000eaf7:	jne    0x14000eb04
   14000eaf9:	mov    ecx,esi
   14000eafb:	call   0x14000c9f8
   14000eb00:	test   eax,eax
   14000eb02:	jne    0x14000eb0c
   14000eb04:	mov    rcx,rbx
   14000eb07:	call   0x14000d450
   14000eb0c:	test   DWORD PTR [rbx+0x18],0x108
   14000eb13:	je     0x14000eba3
   14000eb19:	mov    ebp,DWORD PTR [rbx]
   14000eb1b:	mov    rdx,QWORD PTR [rbx+0x10]
   14000eb1f:	sub    ebp,DWORD PTR [rbx+0x10]
   14000eb22:	lea    rax,[rdx+0x2]
   14000eb26:	mov    QWORD PTR [rbx],rax
   14000eb29:	mov    eax,DWORD PTR [rbx+0x24]
   14000eb2c:	sub    eax,0x2
   14000eb2f:	mov    DWORD PTR [rbx+0x8],eax
   14000eb32:	test   ebp,ebp
   14000eb34:	jle    0x14000eb4f
   14000eb36:	mov    r8d,ebp
   14000eb39:	mov    ecx,esi
   14000eb3b:	call   0x14000ca6c
   14000eb40:	mov    edi,eax
   14000eb42:	jmp    0x14000eb99
   14000eb44:	or     ecx,0x20
   14000eb47:	mov    DWORD PTR [rbx+0x18],ecx
   14000eb4a:	jmp    0x14000ea8d
   14000eb4f:	lea    eax,[rsi+0x2]
   14000eb52:	cmp    eax,0x1
   14000eb55:	jbe    0x14000eb75
   14000eb57:	mov    rcx,rsi
   14000eb5a:	mov    rax,rsi
   14000eb5d:	lea    rdx,[rip+0x10b7c]        # 0x14001f6e0
   14000eb64:	and    ecx,0x1f
   14000eb67:	sar    rax,0x5
   14000eb6b:	imul   rcx,rcx,0x58
   14000eb6f:	add    rcx,QWORD PTR [rdx+rax*8]
   14000eb73:	jmp    0x14000eb7c
   14000eb75:	lea    rcx,[rip+0xc4b4]        # 0x14001b030
   14000eb7c:	test   BYTE PTR [rcx+0x8],0x20
   14000eb80:	je     0x14000eb99
   14000eb82:	xor    edx,edx
   14000eb84:	mov    ecx,esi
   14000eb86:	lea    r8d,[rdx+0x2]
   14000eb8a:	call   0x14000d2cc
   14000eb8f:	cmp    rax,0xffffffffffffffff
   14000eb93:	je     0x14000ea89
   14000eb99:	mov    rax,QWORD PTR [rbx+0x10]
   14000eb9d:	mov    WORD PTR [rax],r14w
   14000eba1:	jmp    0x14000ebbf
   14000eba3:	mov    ebp,0x2
   14000eba8:	lea    rdx,[rsp+0x50]
   14000ebad:	mov    ecx,esi
   14000ebaf:	mov    r8d,ebp
   14000ebb2:	mov    WORD PTR [rsp+0x50],r14w
   14000ebb8:	call   0x14000ca6c
   14000ebbd:	mov    edi,eax
   14000ebbf:	cmp    edi,ebp
   14000ebc1:	jne    0x14000ea89
   14000ebc7:	movzx  eax,r14w
   14000ebcb:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ebd0:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ebd5:	add    rsp,0x20
   14000ebd9:	pop    r14
   14000ebdb:	pop    rdi
   14000ebdc:	pop    rsi
   14000ebdd:	ret    
   14000ebde:	int3   
   14000ebdf:	int3   
   14000ebe0:	rex push rdi
   14000ebe2:	sub    rsp,0x20
   14000ebe6:	lea    rdi,[rip+0xcb83]        # 0x14001b770
   14000ebed:	cmp    QWORD PTR [rip+0xcb6c],rdi        # 0x14001b760
   14000ebf4:	je     0x14000ec21
   14000ebf6:	mov    ecx,0xc
   14000ebfb:	call   0x14000ae60
   14000ec00:	nop
   14000ec01:	mov    rdx,rdi
   14000ec04:	lea    rcx,[rip+0xcb55]        # 0x14001b760
   14000ec0b:	call   0x14000b3a0
   14000ec10:	mov    QWORD PTR [rip+0xcb49],rax        # 0x14001b760
   14000ec17:	mov    ecx,0xc
   14000ec1c:	call   0x14000b048
   14000ec21:	add    rsp,0x20
   14000ec25:	pop    rdi
   14000ec26:	ret    
   14000ec27:	int3   
   14000ec28:	mov    QWORD PTR [rsp+0x18],rbx
   14000ec2d:	mov    DWORD PTR [rsp+0x8],ecx
   14000ec31:	push   rsi
   14000ec32:	push   rdi
   14000ec33:	push   r14
   14000ec35:	sub    rsp,0x20
   14000ec39:	movsxd rdi,ecx
   14000ec3c:	cmp    edi,0xfffffffe
   14000ec3f:	jne    0x14000ec51
   14000ec41:	call   0x140008888
   14000ec46:	mov    DWORD PTR [rax],0x9
   14000ec4c:	jmp    0x14000ed01
   14000ec51:	call   0x140007a7c
   14000ec56:	test   eax,eax
   14000ec58:	jns    0x14000ec64
   14000ec5a:	mov    eax,0x9
   14000ec5f:	jmp    0x14000ed04
   14000ec64:	test   edi,edi
   14000ec66:	js     0x14000ecf1
   14000ec6c:	cmp    edi,DWORD PTR [rip+0x10a52]        # 0x14001f6c4
   14000ec72:	jae    0x14000ecf1
   14000ec74:	mov    rbx,rdi
   14000ec77:	mov    rsi,rdi
   14000ec7a:	sar    rsi,0x5
   14000ec7e:	lea    r14,[rip+0x10a5b]        # 0x14001f6e0
   14000ec85:	and    ebx,0x1f
   14000ec88:	imul   rbx,rbx,0x58
   14000ec8c:	mov    rax,QWORD PTR [r14+rsi*8]
   14000ec90:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000ec95:	and    ecx,0x1
   14000ec98:	je     0x14000ecf1
   14000ec9a:	mov    ecx,edi
   14000ec9c:	call   0x14000e784
   14000eca1:	nop
   14000eca2:	mov    rax,QWORD PTR [r14+rsi*8]
   14000eca6:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000ecab:	je     0x14000ecd8
   14000ecad:	mov    ecx,edi
   14000ecaf:	call   0x14000e8c8
   14000ecb4:	mov    rcx,rax
   14000ecb7:	call   QWORD PTR [rip+0x4483]        # 0x140013140
   14000ecbd:	test   eax,eax
   14000ecbf:	jne    0x14000eccb
   14000ecc1:	call   QWORD PTR [rip+0x4471]        # 0x140013138
   14000ecc7:	mov    ebx,eax
   14000ecc9:	jmp    0x14000eccd
   14000eccb:	xor    ebx,ebx
   14000eccd:	test   ebx,ebx
   14000eccf:	je     0x14000ece6
   14000ecd1:	call   0x140008818
   14000ecd6:	mov    DWORD PTR [rax],ebx
   14000ecd8:	call   0x140008888
   14000ecdd:	mov    DWORD PTR [rax],0x9
   14000ece3:	or     ebx,0xffffffff
   14000ece6:	mov    ecx,edi
   14000ece8:	call   0x14000e94c
   14000eced:	mov    eax,ebx
   14000ecef:	jmp    0x14000ed04
   14000ecf1:	call   0x140008888
   14000ecf6:	mov    DWORD PTR [rax],0x9
   14000ecfc:	call   0x1400087bc
   14000ed01:	or     eax,0xffffffff
   14000ed04:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ed09:	add    rsp,0x20
   14000ed0d:	pop    r14
   14000ed0f:	pop    rdi
   14000ed10:	pop    rsi
   14000ed11:	ret    
   14000ed12:	int3   
   14000ed13:	int3   
   14000ed14:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed19:	push   rdi
   14000ed1a:	sub    rsp,0x20
   14000ed1e:	or     edi,0xffffffff
   14000ed21:	mov    rbx,rcx
   14000ed24:	test   rcx,rcx
   14000ed27:	jne    0x14000ed3d
   14000ed29:	call   0x140008888
   14000ed2e:	mov    DWORD PTR [rax],0x16
   14000ed34:	call   0x1400087bc
   14000ed39:	or     eax,edi
   14000ed3b:	jmp    0x14000ed83
   14000ed3d:	test   BYTE PTR [rcx+0x18],0x83
   14000ed41:	je     0x14000ed7d
   14000ed43:	call   0x14000e56c
   14000ed48:	mov    rcx,rbx
   14000ed4b:	mov    edi,eax
   14000ed4d:	call   0x14000f0d4
   14000ed52:	mov    rcx,rbx
   14000ed55:	call   0x14000c9d0
   14000ed5a:	mov    ecx,eax
   14000ed5c:	call   0x14000ef38
   14000ed61:	test   eax,eax
   14000ed63:	jns    0x14000ed6a
   14000ed65:	or     edi,0xffffffff
   14000ed68:	jmp    0x14000ed7d
   14000ed6a:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ed6e:	test   rcx,rcx
   14000ed71:	je     0x14000ed7d
   14000ed73:	call   0x140006aa0
   14000ed78:	and    QWORD PTR [rbx+0x28],0x0
   14000ed7d:	and    DWORD PTR [rbx+0x18],0x0
   14000ed81:	mov    eax,edi
   14000ed83:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ed88:	add    rsp,0x20
   14000ed8c:	pop    rdi
   14000ed8d:	ret    
   14000ed8e:	int3   
   14000ed8f:	int3   
   14000ed90:	mov    QWORD PTR [rsp+0x10],rbx
   14000ed95:	mov    QWORD PTR [rsp+0x8],rcx
   14000ed9a:	push   rdi
   14000ed9b:	sub    rsp,0x20
   14000ed9f:	mov    rbx,rcx
   14000eda2:	or     edi,0xffffffff
   14000eda5:	xor    eax,eax
   14000eda7:	test   rcx,rcx
   14000edaa:	setne  al
   14000edad:	test   eax,eax
   14000edaf:	jne    0x14000edc5
   14000edb1:	call   0x140008888
   14000edb6:	mov    DWORD PTR [rax],0x16
   14000edbc:	call   0x1400087bc
   14000edc1:	mov    eax,edi
   14000edc3:	jmp    0x14000edeb
   14000edc5:	test   BYTE PTR [rcx+0x18],0x40
   14000edc9:	je     0x14000edd1
   14000edcb:	and    DWORD PTR [rcx+0x18],0x0
   14000edcf:	jmp    0x14000edc1
   14000edd1:	call   0x14000c734
   14000edd6:	nop
   14000edd7:	mov    rcx,rbx
   14000edda:	call   0x14000ed14
   14000eddf:	mov    edi,eax
   14000ede1:	mov    rcx,rbx
   14000ede4:	call   0x14000c7d0
   14000ede9:	jmp    0x14000edc1
   14000edeb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000edf0:	add    rsp,0x20
   14000edf4:	pop    rdi
   14000edf5:	ret    
   14000edf6:	int3   
   14000edf7:	int3   
   14000edf8:	sub    rsp,0x28
   14000edfc:	mov    rcx,QWORD PTR [rip+0xd4f5]        # 0x14001c2f8
   14000ee03:	lea    rax,[rcx+0x2]
   14000ee07:	cmp    rax,0x1
   14000ee0b:	jbe    0x14000ee13
   14000ee0d:	call   QWORD PTR [rip+0x4305]        # 0x140013118
   14000ee13:	add    rsp,0x28
   14000ee17:	ret    
   14000ee18:	sub    rsp,0x48
   14000ee1c:	and    QWORD PTR [rsp+0x30],0x0
   14000ee22:	and    DWORD PTR [rsp+0x28],0x0
   14000ee27:	mov    r8d,0x3
   14000ee2d:	lea    rcx,[rip+0x6b3c]        # 0x140015970
   14000ee34:	xor    r9d,r9d
   14000ee37:	mov    edx,0x40000000
   14000ee3c:	mov    DWORD PTR [rsp+0x20],r8d
   14000ee41:	call   QWORD PTR [rip+0x4531]        # 0x140013378
   14000ee47:	mov    QWORD PTR [rip+0xd4aa],rax        # 0x14001c2f8
   14000ee4e:	add    rsp,0x48
   14000ee52:	ret    
   14000ee53:	int3   
   14000ee54:	int3   
   14000ee55:	int3   
   14000ee56:	int3   
   14000ee57:	int3   
   14000ee58:	int3   
   14000ee59:	int3   
   14000ee5a:	int3   
   14000ee5b:	int3   
   14000ee5c:	int3   
   14000ee5d:	int3   
   14000ee5e:	int3   
   14000ee5f:	int3   
   14000ee60:	int3   
   14000ee61:	int3   
   14000ee62:	int3   
   14000ee63:	int3   
   14000ee64:	int3   
   14000ee65:	int3   
   14000ee66:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ee70:	sub    rdx,rcx
   14000ee73:	cmp    r8,0x8
   14000ee77:	jb     0x14000ee9b
   14000ee79:	test   cl,0x7
   14000ee7c:	je     0x14000ee92
   14000ee7e:	xchg   ax,ax
   14000ee80:	mov    al,BYTE PTR [rcx]
   14000ee82:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000ee85:	jne    0x14000eeb3
   14000ee87:	inc    rcx
   14000ee8a:	dec    r8
   14000ee8d:	test   cl,0x7
   14000ee90:	jne    0x14000ee80
   14000ee92:	mov    r9,r8
   14000ee95:	shr    r9,0x3
   14000ee99:	jne    0x14000eeba
   14000ee9b:	test   r8,r8
   14000ee9e:	je     0x14000eeaf
   14000eea0:	mov    al,BYTE PTR [rcx]
   14000eea2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000eea5:	jne    0x14000eeb3
   14000eea7:	inc    rcx
   14000eeaa:	dec    r8
   14000eead:	jne    0x14000eea0
   14000eeaf:	xor    rax,rax
   14000eeb2:	ret    
   14000eeb3:	sbb    eax,eax
   14000eeb5:	sbb    eax,0xffffffff
   14000eeb8:	ret    
   14000eeb9:	nop
   14000eeba:	shr    r9,0x2
   14000eebe:	je     0x14000eef7
   14000eec0:	mov    rax,QWORD PTR [rcx]
   14000eec3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000eec7:	jne    0x14000ef24
   14000eec9:	mov    rax,QWORD PTR [rcx+0x8]
   14000eecd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000eed2:	jne    0x14000ef20
   14000eed4:	mov    rax,QWORD PTR [rcx+0x10]
   14000eed8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000eedd:	jne    0x14000ef1c
   14000eedf:	mov    rax,QWORD PTR [rcx+0x18]
   14000eee3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000eee8:	jne    0x14000ef18
   14000eeea:	add    rcx,0x20
   14000eeee:	dec    r9
   14000eef1:	jne    0x14000eec0
   14000eef3:	and    r8,0x1f
   14000eef7:	mov    r9,r8
   14000eefa:	shr    r9,0x3
   14000eefe:	je     0x14000ee9b
   14000ef00:	mov    rax,QWORD PTR [rcx]
   14000ef03:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000ef07:	jne    0x14000ef24
   14000ef09:	add    rcx,0x8
   14000ef0d:	dec    r9
   14000ef10:	jne    0x14000ef00
   14000ef12:	and    r8,0x7
   14000ef16:	jmp    0x14000ee9b
   14000ef18:	add    rcx,0x8
   14000ef1c:	add    rcx,0x8
   14000ef20:	add    rcx,0x8
   14000ef24:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000ef28:	bswap  rax
   14000ef2b:	bswap  rcx
   14000ef2e:	cmp    rax,rcx
   14000ef31:	sbb    eax,eax
   14000ef33:	sbb    eax,0xffffffff
   14000ef36:	ret    
   14000ef37:	int3   
   14000ef38:	mov    QWORD PTR [rsp+0x18],rbx
   14000ef3d:	mov    DWORD PTR [rsp+0x8],ecx
   14000ef41:	push   rsi
   14000ef42:	push   rdi
   14000ef43:	push   r14
   14000ef45:	sub    rsp,0x20
   14000ef49:	movsxd rdi,ecx
   14000ef4c:	cmp    edi,0xfffffffe
   14000ef4f:	jne    0x14000ef69
   14000ef51:	call   0x140008818
   14000ef56:	and    DWORD PTR [rax],0x0
   14000ef59:	call   0x140008888
   14000ef5e:	mov    DWORD PTR [rax],0x9
   14000ef64:	jmp    0x14000eff7
   14000ef69:	call   0x140007a7c
   14000ef6e:	test   eax,eax
   14000ef70:	js     0x14000eff7
   14000ef76:	test   edi,edi
   14000ef78:	js     0x14000efdf
   14000ef7a:	cmp    edi,DWORD PTR [rip+0x10744]        # 0x14001f6c4
   14000ef80:	jae    0x14000efdf
   14000ef82:	mov    rbx,rdi
   14000ef85:	mov    rsi,rdi
   14000ef88:	sar    rsi,0x5
   14000ef8c:	lea    r14,[rip+0x1074d]        # 0x14001f6e0
   14000ef93:	and    ebx,0x1f
   14000ef96:	imul   rbx,rbx,0x58
   14000ef9a:	mov    rax,QWORD PTR [r14+rsi*8]
   14000ef9e:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14000efa3:	and    ecx,0x1
   14000efa6:	je     0x14000efdf
   14000efa8:	mov    ecx,edi
   14000efaa:	call   0x14000e784
   14000efaf:	nop
   14000efb0:	mov    rax,QWORD PTR [r14+rsi*8]
   14000efb4:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14000efb9:	je     0x14000efc6
   14000efbb:	mov    ecx,edi
   14000efbd:	call   0x14000f008
   14000efc2:	mov    ebx,eax
   14000efc4:	jmp    0x14000efd4
   14000efc6:	call   0x140008888
   14000efcb:	mov    DWORD PTR [rax],0x9
   14000efd1:	or     ebx,0xffffffff
   14000efd4:	mov    ecx,edi
   14000efd6:	call   0x14000e94c
   14000efdb:	mov    eax,ebx
   14000efdd:	jmp    0x14000effa
   14000efdf:	call   0x140008818
   14000efe4:	and    DWORD PTR [rax],0x0
   14000efe7:	call   0x140008888
   14000efec:	mov    DWORD PTR [rax],0x9
   14000eff2:	call   0x1400087bc
   14000eff7:	or     eax,0xffffffff
   14000effa:	mov    rbx,QWORD PTR [rsp+0x50]
   14000efff:	add    rsp,0x20
   14000f003:	pop    r14
   14000f005:	pop    rdi
   14000f006:	pop    rsi
   14000f007:	ret    
   14000f008:	mov    QWORD PTR [rsp+0x8],rbx
   14000f00d:	push   rdi
   14000f00e:	sub    rsp,0x20
   14000f012:	movsxd rdi,ecx
   14000f015:	call   0x140007a7c
   14000f01a:	test   eax,eax
   14000f01c:	jns    0x14000f026
   14000f01e:	or     eax,0xffffffff
   14000f021:	jmp    0x14000f0c8
   14000f026:	mov    ecx,edi
   14000f028:	call   0x14000e8c8
   14000f02d:	cmp    rax,0xffffffffffffffff
   14000f031:	je     0x14000f08c
   14000f033:	mov    rax,QWORD PTR [rip+0x106a6]        # 0x14001f6e0
   14000f03a:	mov    ecx,0x2
   14000f03f:	cmp    edi,0x1
   14000f042:	jne    0x14000f04d
   14000f044:	test   BYTE PTR [rax+0xb8],dil
   14000f04b:	jne    0x14000f057
   14000f04d:	cmp    edi,ecx
   14000f04f:	jne    0x14000f06e
   14000f051:	test   BYTE PTR [rax+0x60],0x1
   14000f055:	je     0x14000f06e
   14000f057:	call   0x14000e8c8
   14000f05c:	mov    ecx,0x1
   14000f061:	mov    rbx,rax
   14000f064:	call   0x14000e8c8
   14000f069:	cmp    rax,rbx
   14000f06c:	je     0x14000f08c
   14000f06e:	mov    ecx,edi
   14000f070:	call   0x14000e8c8
   14000f075:	mov    rcx,rax
   14000f078:	call   QWORD PTR [rip+0x409a]        # 0x140013118
   14000f07e:	test   eax,eax
   14000f080:	jne    0x14000f08c
   14000f082:	call   QWORD PTR [rip+0x40b0]        # 0x140013138
   14000f088:	mov    ebx,eax
   14000f08a:	jmp    0x14000f08e
   14000f08c:	xor    ebx,ebx
   14000f08e:	mov    ecx,edi
   14000f090:	call   0x14000e81c
   14000f095:	mov    rcx,rdi
   14000f098:	mov    rax,rdi
   14000f09b:	sar    rax,0x5
   14000f09f:	and    ecx,0x1f
   14000f0a2:	lea    rdx,[rip+0x10637]        # 0x14001f6e0
   14000f0a9:	mov    rax,QWORD PTR [rdx+rax*8]
   14000f0ad:	imul   rcx,rcx,0x58
   14000f0b1:	mov    BYTE PTR [rax+rcx*1+0x8],0x0
   14000f0b6:	test   ebx,ebx
   14000f0b8:	je     0x14000f0c6
   14000f0ba:	mov    ecx,ebx
   14000f0bc:	call   0x140008838
   14000f0c1:	jmp    0x14000f01e
   14000f0c6:	xor    eax,eax
   14000f0c8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f0cd:	add    rsp,0x20
   14000f0d1:	pop    rdi
   14000f0d2:	ret    
   14000f0d3:	int3   
   14000f0d4:	rex push rbx
   14000f0d6:	sub    rsp,0x20
   14000f0da:	test   BYTE PTR [rcx+0x18],0x83
   14000f0de:	mov    rbx,rcx
   14000f0e1:	je     0x14000f105
   14000f0e3:	test   BYTE PTR [rcx+0x18],0x8
   14000f0e7:	je     0x14000f105
   14000f0e9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f0ed:	call   0x140006aa0
   14000f0f2:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000f0f9:	xor    eax,eax
   14000f0fb:	mov    QWORD PTR [rbx],rax
   14000f0fe:	mov    QWORD PTR [rbx+0x10],rax
   14000f102:	mov    DWORD PTR [rbx+0x8],eax
   14000f105:	add    rsp,0x20
   14000f109:	pop    rbx
   14000f10a:	ret    
   14000f10b:	int3   
   14000f10c:	cmp    QWORD PTR [rip+0x6d84],0x0        # 0x140015e98
   14000f114:	lea    rax,[rip+0x6d75]        # 0x140015e90
   14000f11b:	je     0x14000f12c
   14000f11d:	cmp    DWORD PTR [rax],ecx
   14000f11f:	je     0x14000f12f
   14000f121:	add    rax,0x10
   14000f125:	cmp    QWORD PTR [rax+0x8],0x0
   14000f12a:	jne    0x14000f11d
   14000f12c:	xor    eax,eax
   14000f12e:	ret    
   14000f12f:	mov    rax,QWORD PTR [rax+0x8]
   14000f133:	ret    
   14000f134:	cmp    QWORD PTR [rip+0x68ac],0x0        # 0x1400159e8
   14000f13c:	lea    rax,[rip+0x689d]        # 0x1400159e0
   14000f143:	je     0x14000f154
   14000f145:	cmp    DWORD PTR [rax],ecx
   14000f147:	je     0x14000f157
   14000f149:	add    rax,0x10
   14000f14d:	cmp    QWORD PTR [rax+0x8],0x0
   14000f152:	jne    0x14000f145
   14000f154:	xor    eax,eax
   14000f156:	ret    
   14000f157:	mov    rax,QWORD PTR [rax+0x8]
   14000f15b:	ret    
   14000f15c:	rex push rbx
   14000f15e:	sub    rsp,0x20
   14000f162:	mov    rbx,rcx
   14000f165:	call   0x140009d38
   14000f16a:	lea    rax,[rip+0x7c5f]        # 0x140016dd0
   14000f171:	mov    QWORD PTR [rbx],rax
   14000f174:	mov    rax,rbx
   14000f177:	add    rsp,0x20
   14000f17b:	pop    rbx
   14000f17c:	ret    
   14000f17d:	int3   
   14000f17e:	int3   
   14000f17f:	int3   
   14000f180:	rex push rbx
   14000f182:	sub    rsp,0x20
   14000f186:	mov    rbx,rcx
   14000f189:	call   0x140009d38
   14000f18e:	lea    rax,[rip+0x7c23]        # 0x140016db8
   14000f195:	mov    QWORD PTR [rbx],rax
   14000f198:	mov    rax,rbx
   14000f19b:	add    rsp,0x20
   14000f19f:	pop    rbx
   14000f1a0:	ret    
   14000f1a1:	int3   
   14000f1a2:	int3   
   14000f1a3:	int3   
   14000f1a4:	rex push rbx
   14000f1a6:	sub    rsp,0x20
   14000f1aa:	mov    rbx,rcx
   14000f1ad:	call   0x140009d38
   14000f1b2:	lea    rax,[rip+0x7c2f]        # 0x140016de8
   14000f1b9:	mov    QWORD PTR [rbx],rax
   14000f1bc:	mov    rax,rbx
   14000f1bf:	add    rsp,0x20
   14000f1c3:	pop    rbx
   14000f1c4:	ret    
   14000f1c5:	int3   
   14000f1c6:	int3   
   14000f1c7:	int3   
   14000f1c8:	jmp    0x140009d64
   14000f1cd:	int3   
   14000f1ce:	int3   
   14000f1cf:	int3   
   14000f1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f1d5:	push   rdi
   14000f1d6:	sub    rsp,0x20
   14000f1da:	mov    ebx,edx
   14000f1dc:	mov    rdi,rcx
   14000f1df:	call   0x140009d64
   14000f1e4:	test   bl,0x1
   14000f1e7:	je     0x14000f1f1
   14000f1e9:	mov    rcx,rdi
   14000f1ec:	call   0x140005fbc
   14000f1f1:	mov    rax,rdi
   14000f1f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f1f9:	add    rsp,0x20
   14000f1fd:	pop    rdi
   14000f1fe:	ret    
   14000f1ff:	int3   
   14000f200:	sub    rsp,0x48
   14000f204:	lea    rax,[rip+0x4345]        # 0x140013550
   14000f20b:	lea    rdx,[rsp+0x50]
   14000f210:	lea    rcx,[rsp+0x20]
   14000f215:	mov    r8d,0x1
   14000f21b:	mov    QWORD PTR [rsp+0x50],rax
   14000f220:	call   0x140009d1c
   14000f225:	lea    rax,[rip+0x4314]        # 0x140013540
   14000f22c:	lea    rdx,[rip+0xaa55]        # 0x140019c88
   14000f233:	lea    rcx,[rsp+0x20]
   14000f238:	mov    QWORD PTR [rsp+0x20],rax
   14000f23d:	call   0x140009ec8
   14000f242:	int3   
   14000f243:	int3   
   14000f244:	sub    rsp,0x48
   14000f248:	mov    QWORD PTR [rsp+0x50],rcx
   14000f24d:	lea    rdx,[rsp+0x50]
   14000f252:	lea    rcx,[rsp+0x20]
   14000f257:	call   0x140009cec
   14000f25c:	lea    rax,[rip+0x7b6d]        # 0x140016dd0
   14000f263:	lea    rdx,[rip+0xaaa6]        # 0x140019d10
   14000f26a:	lea    rcx,[rsp+0x20]
   14000f26f:	mov    QWORD PTR [rsp+0x20],rax
   14000f274:	call   0x140009ec8
   14000f279:	int3   
   14000f27a:	int3   
   14000f27b:	int3   
   14000f27c:	sub    rsp,0x48
   14000f280:	mov    QWORD PTR [rsp+0x50],rcx
   14000f285:	lea    rdx,[rsp+0x50]
   14000f28a:	lea    rcx,[rsp+0x20]
   14000f28f:	call   0x140009cec
   14000f294:	lea    rax,[rip+0x7b4d]        # 0x140016de8
   14000f29b:	lea    rdx,[rip+0xaad6]        # 0x140019d78
   14000f2a2:	lea    rcx,[rsp+0x20]
   14000f2a7:	mov    QWORD PTR [rsp+0x20],rax
   14000f2ac:	call   0x140009ec8
   14000f2b1:	int3   
   14000f2b2:	int3   
   14000f2b3:	int3   
   14000f2b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2b9:	push   rdi
   14000f2ba:	sub    rsp,0x20
   14000f2be:	xor    edx,edx
   14000f2c0:	mov    rdi,rcx
   14000f2c3:	lea    r8d,[rdx+0x28]
   14000f2c7:	add    rcx,r8
   14000f2ca:	call   0x1400099c0
   14000f2cf:	and    QWORD PTR [rdi+0x50],0x0
   14000f2d4:	and    DWORD PTR [rdi+0x58],0x0
   14000f2d8:	and    DWORD PTR [rdi+0x5c],0x0
   14000f2dc:	lea    rax,[rip+0xffffffffffff0d1d]        # 0x140000000
   14000f2e3:	lea    rcx,[rdi+0x28]
   14000f2e7:	mov    QWORD PTR [rdi+0x10],rax
   14000f2eb:	mov    QWORD PTR [rdi+0x8],rax
   14000f2ef:	lea    rax,[rip+0x7b02]        # 0x140016df8
   14000f2f6:	xor    r8d,r8d
   14000f2f9:	xor    edx,edx
   14000f2fb:	mov    DWORD PTR [rdi],0x60
   14000f301:	mov    QWORD PTR [rdi+0x20],rax
   14000f305:	mov    DWORD PTR [rdi+0x18],0xb00
   14000f30c:	call   QWORD PTR [rip+0x406e]        # 0x140013380
   14000f312:	test   eax,eax
   14000f314:	jne    0x14000f341
   14000f316:	call   QWORD PTR [rip+0x3e1c]        # 0x140013138
   14000f31c:	mov    edx,0x1
   14000f321:	movzx  ecx,ax
   14000f324:	or     ecx,0x80070000
   14000f32a:	test   eax,eax
   14000f32c:	cmovle ecx,eax
   14000f32f:	movzx  eax,BYTE PTR [rip+0xe793]        # 0x14001dac9
   14000f336:	test   ecx,ecx
   14000f338:	cmovs  eax,edx
   14000f33b:	mov    BYTE PTR [rip+0xe788],al        # 0x14001dac9
   14000f341:	mov    rax,rdi
   14000f344:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f349:	add    rsp,0x20
   14000f34d:	pop    rdi
   14000f34e:	ret    
   14000f34f:	int3   
   14000f350:	rex push rbx
   14000f352:	sub    rsp,0x20
   14000f356:	mov    rbx,rcx
   14000f359:	add    rcx,0x28
   14000f35d:	call   QWORD PTR [rip+0x3ebd]        # 0x140013220
   14000f363:	mov    rcx,QWORD PTR [rbx+0x50]
   14000f367:	test   rcx,rcx
   14000f36a:	je     0x14000f376
   14000f36c:	call   0x140006aa0
   14000f371:	and    QWORD PTR [rbx+0x50],0x0
   14000f376:	and    DWORD PTR [rbx+0x58],0x0
   14000f37a:	and    DWORD PTR [rbx+0x5c],0x0
   14000f37e:	add    rsp,0x20
   14000f382:	pop    rbx
   14000f383:	ret    
   14000f384:	mov    QWORD PTR [rsp+0x8],rbx
   14000f389:	mov    QWORD PTR [rsp+0x10],rbp
   14000f38e:	mov    QWORD PTR [rsp+0x18],rsi
   14000f393:	push   rdi
   14000f394:	sub    rsp,0x20
   14000f398:	mov    rsi,rcx
   14000f39b:	add    rcx,0x28
   14000f39f:	movsxd rbx,edx
   14000f3a2:	call   QWORD PTR [rip+0x3f50]        # 0x1400132f8
   14000f3a8:	xor    edi,edi
   14000f3aa:	cmp    ebx,DWORD PTR [rsi+0x58]
   14000f3ad:	jg     0x14000f3bc
   14000f3af:	test   ebx,ebx
   14000f3b1:	js     0x14000f3bc
   14000f3b3:	cmp    ebx,DWORD PTR [rsi+0x58]
   14000f3b6:	jne    0x14000f3de
   14000f3b8:	mov    rdi,QWORD PTR [rsi+0x10]
   14000f3bc:	lea    rcx,[rsi+0x28]
   14000f3c0:	call   QWORD PTR [rip+0x3f3a]        # 0x140013300
   14000f3c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f3cb:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f3d0:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f3d5:	mov    rax,rdi
   14000f3d8:	add    rsp,0x20
   14000f3dc:	pop    rdi
   14000f3dd:	ret    
   14000f3de:	jge    0x14000f3ea
   14000f3e0:	mov    rax,QWORD PTR [rsi+0x50]
   14000f3e4:	mov    rdi,QWORD PTR [rax+rbx*8]
   14000f3e8:	jmp    0x14000f3bc
   14000f3ea:	xor    r9d,r9d
   14000f3ed:	xor    r8d,r8d
   14000f3f0:	mov    ecx,0xc000008c
   14000f3f5:	lea    edx,[r9+0x1]
   14000f3f9:	call   QWORD PTR [rip+0x3ce1]        # 0x1400130e0
   14000f3ff:	int3   
   14000f400:	rex push rbx
   14000f402:	sub    rsp,0x20
   14000f406:	lea    rax,[rip+0x7a23]        # 0x140016e30
   14000f40d:	mov    rbx,rcx
   14000f410:	mov    QWORD PTR [rcx],rax
   14000f413:	test   dl,0x1
   14000f416:	je     0x14000f41d
   14000f418:	call   0x140005fbc
   14000f41d:	mov    rax,rbx
   14000f420:	add    rsp,0x20
   14000f424:	pop    rbx
   14000f425:	ret    
   14000f426:	int3   
   14000f427:	int3   
   14000f428:	mov    QWORD PTR [rsp+0x8],rbx
   14000f42d:	push   rdi
   14000f42e:	sub    rsp,0x20
   14000f432:	cmp    BYTE PTR [rcx+0x10],0x0
   14000f436:	lea    rax,[rip+0x79cb]        # 0x140016e08
   14000f43d:	mov    edi,edx
   14000f43f:	mov    QWORD PTR [rcx],rax
   14000f442:	mov    rbx,rcx
   14000f445:	je     0x14000f456
   14000f447:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f44b:	test   rcx,rcx
   14000f44e:	je     0x14000f456
   14000f450:	call   QWORD PTR [rip+0x3f32]        # 0x140013388
   14000f456:	test   dil,0x1
   14000f45a:	je     0x14000f464
   14000f45c:	mov    rcx,rbx
   14000f45f:	call   0x140005fbc
   14000f464:	mov    rax,rbx
   14000f467:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f46c:	add    rsp,0x20
   14000f470:	pop    rdi
   14000f471:	ret    
   14000f472:	int3   
   14000f473:	int3   
   14000f474:	mov    QWORD PTR [rsp+0x8],rbx
   14000f479:	push   rdi
   14000f47a:	sub    rsp,0x20
   14000f47e:	lea    ebx,[rdx+0x8]
   14000f481:	movsxd r9,r8d
   14000f484:	mov    rdi,rcx
   14000f487:	and    ebx,0xfffffff8
   14000f48a:	movsxd r8,ebx
   14000f48d:	jne    0x14000f494
   14000f48f:	xor    r8d,r8d
   14000f492:	jmp    0x14000f4ac
   14000f494:	xor    edx,edx
   14000f496:	or     rax,0xffffffffffffffff
   14000f49a:	div    r8
   14000f49d:	cmp    rax,r9
   14000f4a0:	jb     0x14000f4da
   14000f4a2:	imul   r8,r9
   14000f4a6:	cmp    r8,0xffffffffffffffe7
   14000f4aa:	ja     0x14000f4da
   14000f4ac:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f4b0:	lea    rdx,[r8+0x18]
   14000f4b4:	mov    rax,QWORD PTR [rcx]
   14000f4b7:	call   QWORD PTR [rax]
   14000f4b9:	mov    rcx,rax
   14000f4bc:	test   rax,rax
   14000f4bf:	je     0x14000f4da
   14000f4c1:	and    DWORD PTR [rcx+0x8],0x0
   14000f4c5:	mov    QWORD PTR [rax],rdi
   14000f4c8:	mov    DWORD PTR [rax+0x10],0x1
   14000f4cf:	lea    eax,[rbx-0x1]
   14000f4d2:	mov    DWORD PTR [rcx+0xc],eax
   14000f4d5:	mov    rax,rcx
   14000f4d8:	jmp    0x14000f4dc
   14000f4da:	xor    eax,eax
   14000f4dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4e1:	add    rsp,0x20
   14000f4e5:	pop    rdi
   14000f4e6:	ret    
   14000f4e7:	int3   
   14000f4e8:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f4ec:	mov    r8,rdx
   14000f4ef:	xor    edx,edx
   14000f4f1:	rex.W jmp QWORD PTR [rip+0x3d88]        # 0x140013280
   14000f4f8:	mov    rax,rcx
   14000f4fb:	ret    
   14000f4fc:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f500:	mov    rax,QWORD PTR [rcx]
   14000f503:	rex.W jmp QWORD PTR [rax+0x8]
   14000f507:	int3   
   14000f508:	sub    rsp,0x28
   14000f50c:	test   rdx,rdx
   14000f50f:	je     0x14000f520
   14000f511:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f515:	mov    r8,rdx
   14000f518:	xor    edx,edx
   14000f51a:	call   QWORD PTR [rip+0x3ef0]        # 0x140013410
   14000f520:	add    rsp,0x28
   14000f524:	ret    
   14000f525:	int3   
   14000f526:	int3   
   14000f527:	int3   
   14000f528:	lock inc DWORD PTR [rcx+0x20]
   14000f52c:	lea    rax,[rcx+0x10]
   14000f530:	ret    
   14000f531:	int3   
   14000f532:	int3   
   14000f533:	int3   
   14000f534:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f538:	mov    r8,rdx
   14000f53b:	xor    edx,edx
   14000f53d:	rex.W jmp QWORD PTR [rip+0x3d2c]        # 0x140013270
   14000f544:	rex push rbx
   14000f546:	sub    rsp,0x20
   14000f54a:	lea    ebx,[r8+0x8]
   14000f54e:	mov    eax,r9d
   14000f551:	and    ebx,0xfffffff8
   14000f554:	mov    r8d,ebx
   14000f557:	imul   r8,rax
   14000f55b:	mov    eax,0xffffffff
   14000f560:	cmp    r8,rax
   14000f563:	ja     0x14000f58d
   14000f565:	cmp    r8d,0xffffffe7
   14000f569:	ja     0x14000f58d
   14000f56b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f56f:	add    r8d,0x18
   14000f573:	mov    r9,QWORD PTR [rcx]
   14000f576:	call   QWORD PTR [r9+0x10]
   14000f57a:	mov    rcx,rax
   14000f57d:	test   rax,rax
   14000f580:	je     0x14000f58d
   14000f582:	lea    eax,[rbx-0x1]
   14000f585:	mov    DWORD PTR [rcx+0xc],eax
   14000f588:	mov    rax,rcx
   14000f58b:	jmp    0x14000f58f
   14000f58d:	xor    eax,eax
   14000f58f:	add    rsp,0x20
   14000f593:	pop    rbx
   14000f594:	ret    
   14000f595:	int3   
   14000f596:	int3   
   14000f597:	int3   
   14000f598:	sub    rsp,0x28
   14000f59c:	test   rdx,rdx
   14000f59f:	jne    0x14000f5ae
   14000f5a1:	mov    rax,QWORD PTR [rcx]
   14000f5a4:	mov    rdx,r8
   14000f5a7:	add    rsp,0x28
   14000f5ab:	rex.W jmp QWORD PTR [rax]
   14000f5ae:	test   r8,r8
   14000f5b1:	jne    0x14000f5c0
   14000f5b3:	mov    rax,QWORD PTR [rcx]
   14000f5b6:	call   QWORD PTR [rax+0x8]
   14000f5b9:	xor    eax,eax
   14000f5bb:	add    rsp,0x28
   14000f5bf:	ret    
   14000f5c0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f5c4:	mov    r9,r8
   14000f5c7:	mov    r8,rdx
   14000f5ca:	xor    edx,edx
   14000f5cc:	add    rsp,0x28
   14000f5d0:	rex.W jmp QWORD PTR [rip+0x3cb9]        # 0x140013290
   14000f5d7:	int3   
   14000f5d8:	int3   
   14000f5d9:	int3   
   14000f5da:	int3   
   14000f5db:	int3   
   14000f5dc:	int3   
   14000f5dd:	int3   
   14000f5de:	int3   
   14000f5df:	int3   
   14000f5e0:	jmp    QWORD PTR [rip+0x3be2]        # 0x1400131c8
   14000f5e6:	jmp    QWORD PTR [rip+0x3c7c]        # 0x140013268
   14000f5ec:	mov    QWORD PTR [rsp+0x10],rbx
   14000f5f1:	mov    QWORD PTR [rsp+0x18],rbp
   14000f5f6:	push   rsi
   14000f5f7:	push   rdi
   14000f5f8:	push   r12
   14000f5fa:	push   r14
   14000f5fc:	push   r15
   14000f5fe:	sub    rsp,0x20
   14000f602:	mov    edi,DWORD PTR [r8+0xc]
   14000f606:	mov    r12,rcx
   14000f609:	mov    rcx,r8
   14000f60c:	mov    rsi,r9
   14000f60f:	mov    r14,r8
   14000f612:	mov    r15,rdx
   14000f615:	call   0x14001142c
   14000f61a:	mov    r10,QWORD PTR [r12]
   14000f61e:	mov    QWORD PTR [rsi],r10
   14000f621:	mov    ebp,eax
   14000f623:	test   edi,edi
   14000f625:	je     0x14000f69b
   14000f627:	movsxd rax,DWORD PTR [r14+0x10]
   14000f62b:	dec    edi
   14000f62d:	lea    rdx,[rdi+rdi*4]
   14000f631:	lea    rbx,[rax+rdx*4]
   14000f635:	add    rbx,QWORD PTR [r15+0x8]
   14000f639:	cmp    ebp,DWORD PTR [rbx+0x4]
   14000f63c:	jle    0x14000f623
   14000f63e:	cmp    ebp,DWORD PTR [rbx+0x8]
   14000f641:	jg     0x14000f623
   14000f643:	mov    rcx,QWORD PTR [r15]
   14000f646:	lea    rdx,[rsp+0x50]
   14000f64b:	xor    r8d,r8d
   14000f64e:	call   QWORD PTR [rip+0x3c4c]        # 0x1400132a0
   14000f654:	movsxd r8,DWORD PTR [rbx+0x10]
   14000f658:	mov    r9d,DWORD PTR [rbx+0xc]
   14000f65c:	add    r8,QWORD PTR [rsp+0x50]
   14000f661:	mov    r10d,DWORD PTR [rax]
   14000f664:	xor    ecx,ecx
   14000f666:	test   r9d,r9d
   14000f669:	je     0x14000f682
   14000f66b:	lea    rdx,[r8+0xc]
   14000f66f:	movsxd rax,DWORD PTR [rdx]
   14000f672:	cmp    rax,r10
   14000f675:	je     0x14000f682
   14000f677:	inc    ecx
   14000f679:	add    rdx,0x14
   14000f67d:	cmp    ecx,r9d
   14000f680:	jb     0x14000f66f
   14000f682:	cmp    ecx,r9d
   14000f685:	jae    0x14000f623
   14000f687:	mov    rax,QWORD PTR [r12]
   14000f68b:	lea    rcx,[rcx+rcx*4]
   14000f68f:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   14000f694:	mov    rcx,QWORD PTR [rcx+rax*1]
   14000f698:	mov    QWORD PTR [rsi],rcx
   14000f69b:	mov    rbx,QWORD PTR [rsp+0x58]
   14000f6a0:	mov    rbp,QWORD PTR [rsp+0x60]
   14000f6a5:	mov    rax,rsi
   14000f6a8:	add    rsp,0x20
   14000f6ac:	pop    r15
   14000f6ae:	pop    r14
   14000f6b0:	pop    r12
   14000f6b2:	pop    rdi
   14000f6b3:	pop    rsi
   14000f6b4:	ret    
   14000f6b5:	int3   
   14000f6b6:	int3   
   14000f6b7:	int3   
   14000f6b8:	mov    rax,rsp
   14000f6bb:	mov    QWORD PTR [rax+0x8],rbx
   14000f6bf:	mov    QWORD PTR [rax+0x10],rbp
   14000f6c3:	mov    QWORD PTR [rax+0x18],rsi
   14000f6c7:	mov    QWORD PTR [rax+0x20],rdi
   14000f6cb:	push   r12
   14000f6cd:	push   r14
   14000f6cf:	push   r15
   14000f6d1:	sub    rsp,0x20
   14000f6d5:	mov    edi,DWORD PTR [rdx+0xc]
   14000f6d8:	mov    rbp,QWORD PTR [rsp+0x70]
   14000f6dd:	mov    rbx,rdx
   14000f6e0:	mov    rcx,rbx
   14000f6e3:	mov    rdx,rbp
   14000f6e6:	mov    r12d,r9d
   14000f6e9:	xor    esi,esi
   14000f6eb:	call   0x14001142c
   14000f6f0:	mov    r14d,eax
   14000f6f3:	test   edi,edi
   14000f6f5:	jne    0x14000f6fc
   14000f6f7:	call   0x14000ae00
   14000f6fc:	mov    r10,QWORD PTR [rsp+0x68]
   14000f701:	mov    r8,QWORD PTR [rsp+0x60]
   14000f706:	mov    edx,edi
   14000f708:	or     DWORD PTR [r10],0xffffffff
   14000f70c:	or     DWORD PTR [r8],0xffffffff
   14000f710:	test   edi,edi
   14000f712:	je     0x14000f73e
   14000f714:	movsxd r11,DWORD PTR [rbx+0x10]
   14000f718:	mov    r15,QWORD PTR [rbp+0x8]
   14000f71c:	lea    r9d,[rdx-0x1]
   14000f720:	lea    rcx,[r9+r9*4]
   14000f724:	lea    rax,[r15+rcx*4]
   14000f728:	cmp    r14d,DWORD PTR [rax+r11*1+0x4]
   14000f72d:	jle    0x14000f736
   14000f72f:	cmp    r14d,DWORD PTR [rax+r11*1+0x8]
   14000f734:	jle    0x14000f73e
   14000f736:	mov    edx,r9d
   14000f739:	test   r9d,r9d
   14000f73c:	jne    0x14000f71c
   14000f73e:	test   edx,edx
   14000f740:	je     0x14000f755
   14000f742:	lea    eax,[rdx-0x1]
   14000f745:	lea    rdx,[rax+rax*4]
   14000f749:	movsxd rax,DWORD PTR [rbx+0x10]
   14000f74d:	lea    rsi,[rax+rdx*4]
   14000f751:	add    rsi,QWORD PTR [rbp+0x8]
   14000f755:	xor    edx,edx
   14000f757:	test   edi,edi
   14000f759:	je     0x14000f7bb
   14000f75b:	xor    r9d,r9d
   14000f75e:	movsxd rcx,DWORD PTR [rbx+0x10]
   14000f762:	add    rcx,QWORD PTR [rbp+0x8]
   14000f766:	add    rcx,r9
   14000f769:	test   rsi,rsi
   14000f76c:	je     0x14000f77d
   14000f76e:	mov    eax,DWORD PTR [rsi+0x4]
   14000f771:	cmp    DWORD PTR [rcx],eax
   14000f773:	jle    0x14000f797
   14000f775:	mov    eax,DWORD PTR [rsi+0x8]
   14000f778:	cmp    DWORD PTR [rcx+0x4],eax
   14000f77b:	jg     0x14000f797
   14000f77d:	cmp    r12d,DWORD PTR [rcx]
   14000f780:	jl     0x14000f797
   14000f782:	cmp    r12d,DWORD PTR [rcx+0x4]
   14000f786:	jg     0x14000f797
   14000f788:	cmp    DWORD PTR [r8],0xffffffff
   14000f78c:	jne    0x14000f791
   14000f78e:	mov    DWORD PTR [r8],edx
   14000f791:	lea    eax,[rdx+0x1]
   14000f794:	mov    DWORD PTR [r10],eax
   14000f797:	inc    edx
   14000f799:	add    r9,0x14
   14000f79d:	cmp    edx,edi
   14000f79f:	jb     0x14000f75e
   14000f7a1:	mov    eax,DWORD PTR [r8]
   14000f7a4:	cmp    eax,0xffffffff
   14000f7a7:	je     0x14000f7bb
   14000f7a9:	lea    rcx,[rax+rax*4]
   14000f7ad:	movsxd rax,DWORD PTR [rbx+0x10]
   14000f7b1:	lea    rax,[rax+rcx*4]
   14000f7b5:	add    rax,QWORD PTR [rbp+0x8]
   14000f7b9:	jmp    0x14000f7c5
   14000f7bb:	and    DWORD PTR [r8],0x0
   14000f7bf:	and    DWORD PTR [r10],0x0
   14000f7c3:	xor    eax,eax
   14000f7c5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f7ca:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f7cf:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f7d4:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f7d9:	add    rsp,0x20
   14000f7dd:	pop    r15
   14000f7df:	pop    r14
   14000f7e1:	pop    r12
   14000f7e3:	ret    
   14000f7e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f7e9:	mov    QWORD PTR [rsp+0x10],rbp
   14000f7ee:	push   rsi
   14000f7ef:	push   rdi
   14000f7f0:	push   r14
   14000f7f2:	sub    rsp,0x20
   14000f7f6:	lea    r9,[rsp+0x50]
   14000f7fb:	mov    rdi,r8
   14000f7fe:	mov    rbp,rdx
   14000f801:	call   0x14000f5ec
   14000f806:	mov    rdx,rbp
   14000f809:	mov    rcx,rdi
   14000f80c:	mov    r14,rax
   14000f80f:	call   0x14001142c
   14000f814:	mov    ebx,DWORD PTR [rdi+0xc]
   14000f817:	mov    esi,eax
   14000f819:	jmp    0x14000f842
   14000f81b:	dec    ebx
   14000f81d:	call   0x14000719c
   14000f822:	lea    rdx,[rbx+rbx*4]
   14000f826:	mov    rax,QWORD PTR [rax+0x128]
   14000f82d:	lea    rcx,[rax+rdx*4]
   14000f831:	movsxd rax,DWORD PTR [rdi+0x10]
   14000f835:	add    rcx,rax
   14000f838:	cmp    esi,DWORD PTR [rcx+0x4]
   14000f83b:	jle    0x14000f842
   14000f83d:	cmp    esi,DWORD PTR [rcx+0x8]
   14000f840:	jle    0x14000f848
   14000f842:	test   ebx,ebx
   14000f844:	jne    0x14000f81b
   14000f846:	xor    ecx,ecx
   14000f848:	test   rcx,rcx
   14000f84b:	jne    0x14000f853
   14000f84d:	or     r9d,0xffffffff
   14000f851:	jmp    0x14000f857
   14000f853:	mov    r9d,DWORD PTR [rcx+0x4]
   14000f857:	mov    r8,rdi
   14000f85a:	mov    rdx,rbp
   14000f85d:	mov    rcx,r14
   14000f860:	call   0x140010eb8
   14000f865:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f86a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f86f:	add    rsp,0x20
   14000f873:	pop    r14
   14000f875:	pop    rdi
   14000f876:	pop    rsi
   14000f877:	ret    
   14000f878:	mov    QWORD PTR [rsp+0x8],rbx
   14000f87d:	mov    QWORD PTR [rsp+0x10],rbp
   14000f882:	mov    QWORD PTR [rsp+0x18],rsi
   14000f887:	push   rdi
   14000f888:	sub    rsp,0x40
   14000f88c:	mov    rsi,r9
   14000f88f:	mov    rbp,r8
   14000f892:	mov    rbx,rdx
   14000f895:	mov    rdi,rcx
   14000f898:	call   0x14000719c
   14000f89d:	mov    QWORD PTR [rax+0x138],rbx
   14000f8a4:	mov    rbx,QWORD PTR [rdi]
   14000f8a7:	call   0x14000719c
   14000f8ac:	mov    rdx,QWORD PTR [rbx+0x38]
   14000f8b0:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f8b5:	mov    r9,QWORD PTR [rsp+0x70]
   14000f8ba:	mov    DWORD PTR [rsp+0x38],0x1
   14000f8c2:	mov    QWORD PTR [rax+0x130],rdx
   14000f8c9:	xor    ebx,ebx
   14000f8cb:	mov    QWORD PTR [rsp+0x30],rbx
   14000f8d0:	mov    DWORD PTR [rsp+0x28],ebx
   14000f8d4:	mov    QWORD PTR [rsp+0x20],rcx
   14000f8d9:	mov    rcx,QWORD PTR [rdi]
   14000f8dc:	mov    r8,rsi
   14000f8df:	mov    rdx,rbp
   14000f8e2:	call   0x14001104c
   14000f8e7:	call   0x14000719c
   14000f8ec:	mov    rcx,QWORD PTR [rsp+0x80]
   14000f8f4:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f8f9:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f8fe:	mov    QWORD PTR [rax+0x138],rbx
   14000f905:	lea    eax,[rbx+0x1]
   14000f908:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f90d:	mov    DWORD PTR [rcx],0x1
   14000f913:	add    rsp,0x40
   14000f917:	pop    rdi
   14000f918:	ret    
   14000f919:	int3   
   14000f91a:	int3   
   14000f91b:	int3   
   14000f91c:	mov    rax,rsp
   14000f91f:	mov    QWORD PTR [rax+0x20],r9
   14000f923:	mov    QWORD PTR [rax+0x18],r8
   14000f927:	mov    QWORD PTR [rax+0x10],rdx
   14000f92b:	mov    QWORD PTR [rax+0x8],rcx
   14000f92f:	push   rbx
   14000f930:	sub    rsp,0x60
   14000f934:	mov    rbx,rcx
   14000f937:	and    DWORD PTR [rax-0x28],0x0
   14000f93b:	mov    QWORD PTR [rax-0x20],rcx
   14000f93f:	mov    QWORD PTR [rax-0x18],r8
   14000f943:	call   0x14000719c
   14000f948:	mov    r8,QWORD PTR [rax+0xe0]
   14000f94f:	lea    rdx,[rsp+0x48]
   14000f954:	mov    ecx,DWORD PTR [rbx]
   14000f956:	call   r8
   14000f959:	mov    DWORD PTR [rsp+0x40],0x0
   14000f961:	jmp    0x14000f963
   14000f963:	mov    eax,DWORD PTR [rsp+0x40]
   14000f967:	add    rsp,0x60
   14000f96b:	pop    rbx
   14000f96c:	ret    
   14000f96d:	int3   
   14000f96e:	int3   
   14000f96f:	int3   
   14000f970:	rex push rbx
   14000f972:	sub    rsp,0x20
   14000f976:	mov    rbx,rcx
   14000f979:	mov    QWORD PTR [rcx],rdx
   14000f97c:	call   0x14000719c
   14000f981:	cmp    rbx,QWORD PTR [rax+0x120]
   14000f988:	jae    0x14000f998
   14000f98a:	call   0x14000719c
   14000f98f:	mov    rcx,QWORD PTR [rax+0x120]
   14000f996:	jmp    0x14000f99a
   14000f998:	xor    ecx,ecx
   14000f99a:	mov    QWORD PTR [rbx+0x8],rcx
   14000f99e:	call   0x14000719c
   14000f9a3:	mov    QWORD PTR [rax+0x120],rbx
   14000f9aa:	mov    rax,rbx
   14000f9ad:	add    rsp,0x20
   14000f9b1:	pop    rbx
   14000f9b2:	ret    
   14000f9b3:	int3   
   14000f9b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f9b9:	push   rdi
   14000f9ba:	sub    rsp,0x20
   14000f9be:	mov    rdi,rcx
   14000f9c1:	call   0x14000719c
   14000f9c6:	cmp    rdi,QWORD PTR [rax+0x120]
   14000f9cd:	je     0x14000f9d4
   14000f9cf:	call   0x14000ae00
   14000f9d4:	call   0x14000719c
   14000f9d9:	mov    rbx,QWORD PTR [rax+0x120]
   14000f9e0:	jmp    0x14000f9eb
   14000f9e2:	cmp    rdi,rbx
   14000f9e5:	je     0x14000fa00
   14000f9e7:	mov    rbx,QWORD PTR [rbx+0x8]
   14000f9eb:	test   rbx,rbx
   14000f9ee:	jne    0x14000f9e2
   14000f9f0:	call   0x14000ae00
   14000f9f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f9fa:	add    rsp,0x20
   14000f9fe:	pop    rdi
   14000f9ff:	ret    
   14000fa00:	call   0x14000719c
   14000fa05:	mov    rcx,QWORD PTR [rbx+0x8]
   14000fa09:	mov    QWORD PTR [rax+0x120],rcx
   14000fa10:	jmp    0x14000f9f5
   14000fa12:	int3   
   14000fa13:	int3   
   14000fa14:	sub    rsp,0x28
   14000fa18:	call   0x14000719c
   14000fa1d:	mov    rax,QWORD PTR [rax+0x128]
   14000fa24:	add    rsp,0x28
   14000fa28:	ret    
   14000fa29:	int3   
   14000fa2a:	int3   
   14000fa2b:	int3   
   14000fa2c:	sub    rsp,0x28
   14000fa30:	call   0x14000719c
   14000fa35:	mov    rax,QWORD PTR [rax+0x130]
   14000fa3c:	add    rsp,0x28
   14000fa40:	ret    
   14000fa41:	int3   
   14000fa42:	int3   
   14000fa43:	int3   
   14000fa44:	rex push rbx
   14000fa46:	sub    rsp,0x20
   14000fa4a:	mov    rbx,rcx
   14000fa4d:	call   0x14000719c
   14000fa52:	mov    rdx,QWORD PTR [rax+0x120]
   14000fa59:	jmp    0x14000fa64
   14000fa5b:	cmp    QWORD PTR [rdx],rbx
   14000fa5e:	je     0x14000fa72
   14000fa60:	mov    rdx,QWORD PTR [rdx+0x8]
   14000fa64:	test   rdx,rdx
   14000fa67:	jne    0x14000fa5b
   14000fa69:	lea    eax,[rdx+0x1]
   14000fa6c:	add    rsp,0x20
   14000fa70:	pop    rbx
   14000fa71:	ret    
   14000fa72:	xor    eax,eax
   14000fa74:	jmp    0x14000fa6c
   14000fa76:	int3   
   14000fa77:	int3   
   14000fa78:	rex push rbx
   14000fa7a:	sub    rsp,0x20
   14000fa7e:	mov    rbx,rcx
   14000fa81:	call   0x14000719c
   14000fa86:	mov    QWORD PTR [rax+0x128],rbx
   14000fa8d:	add    rsp,0x20
   14000fa91:	pop    rbx
   14000fa92:	ret    
   14000fa93:	int3   
   14000fa94:	rex push rbx
   14000fa96:	sub    rsp,0x20
   14000fa9a:	mov    rbx,rcx
   14000fa9d:	call   0x14000719c
   14000faa2:	mov    QWORD PTR [rax+0x130],rbx
   14000faa9:	add    rsp,0x20
   14000faad:	pop    rbx
   14000faae:	ret    
   14000faaf:	int3   
   14000fab0:	mov    rax,rsp
   14000fab3:	mov    QWORD PTR [rax+0x10],rbx
   14000fab7:	mov    QWORD PTR [rax+0x18],rsi
   14000fabb:	mov    QWORD PTR [rax+0x20],rdi
   14000fabf:	push   rbp
   14000fac0:	push   r14
   14000fac2:	push   r15
   14000fac4:	lea    rbp,[rax-0x4c8]
   14000facb:	sub    rsp,0x5b0
   14000fad2:	mov    rax,QWORD PTR [rip+0xb5af]        # 0x14001b088
   14000fad9:	xor    rax,rsp
   14000fadc:	mov    QWORD PTR [rbp+0x4a0],rax
   14000fae3:	mov    rbx,QWORD PTR [rbp+0x508]
   14000faea:	mov    r14,rdx
   14000faed:	lea    rdx,[rip+0x736c]        # 0x140016e60
   14000faf4:	mov    r15,rcx
   14000faf7:	lea    rcx,[rsp+0x30]
   14000fafc:	mov    rax,rdx
   14000faff:	or     rax,rcx
   14000fb02:	mov    rdi,r9
   14000fb05:	mov    rsi,r8
   14000fb08:	lea    r9,[rsp+0x30]
   14000fb0d:	and    eax,0xf
   14000fb10:	jne    0x14000fb74
   14000fb12:	mov    eax,0x1
   14000fb17:	lea    r8d,[rax+0x7f]
   14000fb1b:	movaps xmm0,XMMWORD PTR [rdx]
   14000fb1e:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14000fb22:	movaps XMMWORD PTR [rcx],xmm0
   14000fb25:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   14000fb29:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14000fb2d:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14000fb31:	movaps XMMWORD PTR [rcx+0x20],xmm0
   14000fb35:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   14000fb39:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14000fb3d:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14000fb41:	movaps XMMWORD PTR [rcx+0x40],xmm0
   14000fb45:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   14000fb49:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14000fb4d:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   14000fb51:	add    rdx,r8
   14000fb54:	movaps XMMWORD PTR [rcx+0x60],xmm0
   14000fb58:	add    rcx,r8
   14000fb5b:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14000fb5f:	dec    rax
   14000fb62:	jne    0x14000fb1b
   14000fb64:	movaps xmm0,XMMWORD PTR [rdx]
   14000fb67:	mov    rax,QWORD PTR [rdx+0x10]
   14000fb6b:	movaps XMMWORD PTR [rcx],xmm0
   14000fb6e:	mov    QWORD PTR [rcx+0x10],rax
   14000fb72:	jmp    0x14000fb82
   14000fb74:	mov    r8d,0x98
   14000fb7a:	mov    rcx,r9
   14000fb7d:	call   0x140006070
   14000fb82:	mov    rdx,QWORD PTR [rbx]
   14000fb85:	mov    rcx,QWORD PTR [r15]
   14000fb88:	lea    rax,[rip+0x10d1]        # 0x140010c60
   14000fb8f:	mov    QWORD PTR [rsp+0x50],rax
   14000fb94:	mov    rax,QWORD PTR [rbp+0x4f0]
   14000fb9b:	lea    r8,[rsp+0x30]
   14000fba0:	mov    QWORD PTR [rsp+0x60],rax
   14000fba5:	movsxd rax,DWORD PTR [rbp+0x4f8]
   14000fbac:	xor    r9d,r9d
   14000fbaf:	mov    QWORD PTR [rsp+0x68],rax
   14000fbb4:	mov    rax,QWORD PTR [rbp+0x500]
   14000fbbb:	mov    QWORD PTR [rsp+0x58],rdi
   14000fbc0:	mov    QWORD PTR [rsp+0x78],rax
   14000fbc5:	movzx  eax,BYTE PTR [rbp+0x510]
   14000fbcc:	mov    QWORD PTR [rsp+0x70],rsi
   14000fbd1:	mov    QWORD PTR [rbp-0x78],rax
   14000fbd5:	mov    rax,QWORD PTR [rbx+0x40]
   14000fbd9:	mov    QWORD PTR [rbp-0x80],r14
   14000fbdd:	mov    QWORD PTR [rsp+0x28],rax
   14000fbe2:	lea    rax,[rbp-0x30]
   14000fbe6:	mov    QWORD PTR [rbp-0x70],0x19930520
   14000fbee:	mov    QWORD PTR [rsp+0x20],rax
   14000fbf3:	call   QWORD PTR [rip+0x366f]        # 0x140013268
   14000fbf9:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14000fc00:	xor    rcx,rsp
   14000fc03:	call   0x140005fe0
   14000fc08:	lea    r11,[rsp+0x5b0]
   14000fc10:	mov    rbx,QWORD PTR [r11+0x28]
   14000fc14:	mov    rsi,QWORD PTR [r11+0x30]
   14000fc18:	mov    rdi,QWORD PTR [r11+0x38]
   14000fc1c:	mov    rsp,r11
   14000fc1f:	pop    r15
   14000fc21:	pop    r14
   14000fc23:	pop    rbp
   14000fc24:	ret    
   14000fc25:	int3   
   14000fc26:	int3   
   14000fc27:	int3   
   14000fc28:	mov    QWORD PTR [rsp+0x10],rbx
   14000fc2d:	mov    QWORD PTR [rsp+0x18],rsi
   14000fc32:	push   rdi
   14000fc33:	sub    rsp,0x40
   14000fc37:	mov    rbx,r9
   14000fc3a:	mov    rdi,r8
   14000fc3d:	mov    rsi,rcx
   14000fc40:	mov    QWORD PTR [rsp+0x50],rdx
   14000fc45:	call   0x14000719c
   14000fc4a:	mov    rdx,QWORD PTR [rbx+0x8]
   14000fc4e:	mov    QWORD PTR [rax+0x128],rdx
   14000fc55:	call   0x14000719c
   14000fc5a:	mov    rdx,QWORD PTR [rsi+0x38]
   14000fc5e:	mov    QWORD PTR [rax+0x130],rdx
   14000fc65:	call   0x14000719c
   14000fc6a:	mov    rdx,QWORD PTR [rbx+0x38]
   14000fc6e:	mov    r8d,DWORD PTR [rdx]
   14000fc71:	lea    rdx,[rsp+0x50]
   14000fc76:	mov    r9,rbx
   14000fc79:	add    r8,QWORD PTR [rax+0x128]
   14000fc80:	xor    eax,eax
   14000fc82:	mov    rcx,rsi
   14000fc85:	mov    DWORD PTR [rsp+0x38],eax
   14000fc89:	mov    QWORD PTR [rsp+0x30],rax
   14000fc8e:	mov    DWORD PTR [rsp+0x28],eax
   14000fc92:	mov    QWORD PTR [rsp+0x20],r8
   14000fc97:	mov    r8,rdi
   14000fc9a:	call   0x14001104c
   14000fc9f:	mov    rbx,QWORD PTR [rsp+0x58]
   14000fca4:	mov    rsi,QWORD PTR [rsp+0x60]
   14000fca9:	add    rsp,0x40
   14000fcad:	pop    rdi
   14000fcae:	ret    
   14000fcaf:	int3   
   14000fcb0:	jmp    0x140005fbc
   14000fcb5:	int3   
   14000fcb6:	int3   
   14000fcb7:	int3   
   14000fcb8:	jmp    0x140006968
   14000fcbd:	int3   
   14000fcbe:	int3   
   14000fcbf:	int3   
   14000fcc0:	mov    rax,rsp
   14000fcc3:	mov    QWORD PTR [rax+0x8],rbx
   14000fcc7:	mov    QWORD PTR [rax+0x10],rbp
   14000fccb:	mov    QWORD PTR [rax+0x18],rsi
   14000fccf:	mov    QWORD PTR [rax+0x20],rdi
   14000fcd3:	push   r12
   14000fcd5:	push   r14
   14000fcd7:	push   r15
   14000fcd9:	sub    rsp,0x50
   14000fcdd:	xor    r12d,r12d
   14000fce0:	mov    rbp,r8
   14000fce3:	mov    r14,rdx
   14000fce6:	mov    rdi,rcx
   14000fce9:	mov    ebx,r12d
   14000fcec:	test   rcx,rcx
   14000fcef:	je     0x14000fd01
   14000fcf1:	test   r8,r8
   14000fcf4:	jne    0x14000fcfd
   14000fcf6:	xor    eax,eax
   14000fcf8:	jmp    0x14000fe7d
   14000fcfd:	mov    WORD PTR [rcx],r12w
   14000fd01:	test   rdx,rdx
   14000fd04:	jne    0x14000fd1f
   14000fd06:	call   0x140008888
   14000fd0b:	mov    DWORD PTR [rax],0x16
   14000fd11:	call   0x1400087bc
   14000fd16:	or     rax,0xffffffffffffffff
   14000fd1a:	jmp    0x14000fe7d
   14000fd1f:	lea    rcx,[rsp+0x30]
   14000fd24:	mov    rdx,r9
   14000fd27:	call   0x140008d54
   14000fd2c:	mov    rax,QWORD PTR [rsp+0x30]
   14000fd31:	test   rdi,rdi
   14000fd34:	je     0x14000fe19
   14000fd3a:	cmp    QWORD PTR [rax+0x138],r12
   14000fd41:	jne    0x14000fd6f
   14000fd43:	test   rbp,rbp
   14000fd46:	je     0x14000fe67
   14000fd4c:	movzx  eax,BYTE PTR [rbx+r14*1]
   14000fd51:	mov    WORD PTR [rdi],ax
   14000fd54:	cmp    BYTE PTR [rbx+r14*1],r12b
   14000fd58:	je     0x14000fe67
   14000fd5e:	inc    rbx
   14000fd61:	add    rdi,0x2
   14000fd65:	cmp    rbx,rbp
   14000fd68:	jb     0x14000fd4c
   14000fd6a:	jmp    0x14000fe67
   14000fd6f:	mov    ecx,DWORD PTR [rax+0x4]
   14000fd72:	or     rbx,0xffffffffffffffff
   14000fd76:	mov    r8,r14
   14000fd79:	lea    edx,[rbx+0xa]
   14000fd7c:	mov    r9d,ebx
   14000fd7f:	mov    DWORD PTR [rsp+0x28],ebp
   14000fd83:	mov    QWORD PTR [rsp+0x20],rdi
   14000fd88:	call   QWORD PTR [rip+0x3462]        # 0x1400131f0
   14000fd8e:	movsxd rcx,eax
   14000fd91:	test   eax,eax
   14000fd93:	jne    0x14000fe63
   14000fd99:	call   QWORD PTR [rip+0x3399]        # 0x140013138
   14000fd9f:	cmp    eax,0x7a
   14000fda2:	jne    0x14000fe03
   14000fda4:	mov    r15d,ebp
   14000fda7:	mov    rsi,r14
   14000fdaa:	test   ebp,ebp
   14000fdac:	je     0x14000fdd7
   14000fdae:	dec    r15d
   14000fdb1:	cmp    BYTE PTR [rsi],r12b
   14000fdb4:	je     0x14000fdd7
   14000fdb6:	movzx  ecx,BYTE PTR [rsi]
   14000fdb9:	lea    rdx,[rsp+0x30]
   14000fdbe:	call   0x14000d4a4
   14000fdc3:	test   eax,eax
   14000fdc5:	je     0x14000fdcf
   14000fdc7:	inc    rsi
   14000fdca:	cmp    BYTE PTR [rsi],r12b
   14000fdcd:	je     0x14000fe03
   14000fdcf:	inc    rsi
   14000fdd2:	test   r15d,r15d
   14000fdd5:	jmp    0x14000fdac
   14000fdd7:	mov    rax,QWORD PTR [rsp+0x30]
   14000fddc:	sub    esi,r14d
   14000fddf:	mov    r8,r14
   14000fde2:	mov    ecx,DWORD PTR [rax+0x4]
   14000fde5:	mov    edx,0x1
   14000fdea:	mov    r9d,esi
   14000fded:	mov    DWORD PTR [rsp+0x28],ebp
   14000fdf1:	mov    QWORD PTR [rsp+0x20],rdi
   14000fdf6:	call   QWORD PTR [rip+0x33f4]        # 0x1400131f0
   14000fdfc:	movsxd rcx,eax
   14000fdff:	test   eax,eax
   14000fe01:	jne    0x14000fe14
   14000fe03:	call   0x140008888
   14000fe08:	mov    DWORD PTR [rax],0x2a
   14000fe0e:	mov    WORD PTR [rdi],r12w
   14000fe12:	jmp    0x14000fe67
   14000fe14:	mov    rbx,rcx
   14000fe17:	jmp    0x14000fe67
   14000fe19:	cmp    QWORD PTR [rax+0x138],r12
   14000fe20:	jne    0x14000fe2f
   14000fe22:	mov    rcx,r14
   14000fe25:	call   0x14000c070
   14000fe2a:	mov    rbx,rax
   14000fe2d:	jmp    0x14000fe67
   14000fe2f:	mov    ecx,DWORD PTR [rax+0x4]
   14000fe32:	or     rbx,0xffffffffffffffff
   14000fe36:	mov    r8,r14
   14000fe39:	lea    edx,[rbx+0xa]
   14000fe3c:	mov    r9d,ebx
   14000fe3f:	mov    DWORD PTR [rsp+0x28],r12d
   14000fe44:	mov    QWORD PTR [rsp+0x20],r12
   14000fe49:	call   QWORD PTR [rip+0x33a1]        # 0x1400131f0
   14000fe4f:	movsxd rcx,eax
   14000fe52:	test   eax,eax
   14000fe54:	jne    0x14000fe63
   14000fe56:	call   0x140008888
   14000fe5b:	mov    DWORD PTR [rax],0x2a
   14000fe61:	jmp    0x14000fe67
   14000fe63:	lea    rbx,[rcx-0x1]
   14000fe67:	cmp    BYTE PTR [rsp+0x48],r12b
   14000fe6c:	je     0x14000fe7a
   14000fe6e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fe73:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000fe7a:	mov    rax,rbx
   14000fe7d:	lea    r11,[rsp+0x50]
   14000fe82:	mov    rbx,QWORD PTR [r11+0x20]
   14000fe86:	mov    rbp,QWORD PTR [r11+0x28]
   14000fe8a:	mov    rsi,QWORD PTR [r11+0x30]
   14000fe8e:	mov    rdi,QWORD PTR [r11+0x38]
   14000fe92:	mov    rsp,r11
   14000fe95:	pop    r15
   14000fe97:	pop    r14
   14000fe99:	pop    r12
   14000fe9b:	ret    
   14000fe9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fea1:	mov    QWORD PTR [rsp+0x10],rsi
   14000fea6:	mov    QWORD PTR [rsp+0x18],rdi
   14000feab:	push   r12
   14000fead:	push   r14
   14000feaf:	push   r15
   14000feb1:	sub    rsp,0x40
   14000feb5:	xor    r12d,r12d
   14000feb8:	mov    r15,r9
   14000febb:	mov    rsi,r8
   14000febe:	mov    rdi,rdx
   14000fec1:	mov    r14,rcx
   14000fec4:	mov    ebx,r12d
   14000fec7:	test   rdx,rdx
   14000feca:	jne    0x14000fed3
   14000fecc:	test   r8,r8
   14000fecf:	je     0x14000fef2
   14000fed1:	jmp    0x14000fed8
   14000fed3:	test   r8,r8
   14000fed6:	jne    0x14000feee
   14000fed8:	call   0x140008888
   14000fedd:	mov    ebx,0x16
   14000fee2:	mov    DWORD PTR [rax],ebx
   14000fee4:	call   0x1400087bc
   14000fee9:	jmp    0x14000ffb0
   14000feee:	mov    WORD PTR [rdx],r12w
   14000fef2:	test   rcx,rcx
   14000fef5:	je     0x14000fefa
   14000fef7:	mov    QWORD PTR [rcx],r12
   14000fefa:	mov    rdx,QWORD PTR [rsp+0x88]
   14000ff02:	lea    rcx,[rsp+0x20]
   14000ff07:	call   0x140008d54
   14000ff0c:	mov    r8,QWORD PTR [rsp+0x80]
   14000ff14:	cmp    r8,rsi
   14000ff17:	cmova  r8,rsi
   14000ff1b:	cmp    r8,0x7fffffff
   14000ff22:	jbe    0x14000ff30
   14000ff24:	call   0x140008888
   14000ff29:	mov    ebx,0x16
   14000ff2e:	jmp    0x14000ff7e
   14000ff30:	lea    r9,[rsp+0x20]
   14000ff35:	mov    rdx,r15
   14000ff38:	mov    rcx,rdi
   14000ff3b:	call   0x14000fcc0
   14000ff40:	cmp    rax,0xffffffffffffffff
   14000ff44:	jne    0x14000ff58
   14000ff46:	test   rdi,rdi
   14000ff49:	je     0x14000ff4f
   14000ff4b:	mov    WORD PTR [rdi],r12w
   14000ff4f:	call   0x140008888
   14000ff54:	mov    ebx,DWORD PTR [rax]
   14000ff56:	jmp    0x14000ff9d
   14000ff58:	inc    rax
   14000ff5b:	test   rdi,rdi
   14000ff5e:	je     0x14000ff95
   14000ff60:	cmp    rax,rsi
   14000ff63:	jbe    0x14000ff8f
   14000ff65:	cmp    QWORD PTR [rsp+0x80],0xffffffffffffffff
   14000ff6e:	je     0x14000ff87
   14000ff70:	mov    WORD PTR [rdi],r12w
   14000ff74:	call   0x140008888
   14000ff79:	mov    ebx,0x22
   14000ff7e:	mov    DWORD PTR [rax],ebx
   14000ff80:	call   0x1400087bc
   14000ff85:	jmp    0x14000ff9d
   14000ff87:	mov    rax,rsi
   14000ff8a:	mov    ebx,0x50
   14000ff8f:	mov    WORD PTR [rdi+rax*2-0x2],r12w
   14000ff95:	test   r14,r14
   14000ff98:	je     0x14000ff9d
   14000ff9a:	mov    QWORD PTR [r14],rax
   14000ff9d:	cmp    BYTE PTR [rsp+0x38],r12b
   14000ffa2:	je     0x14000ffb0
   14000ffa4:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ffa9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ffb0:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ffb5:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ffba:	mov    eax,ebx
   14000ffbc:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ffc1:	add    rsp,0x40
   14000ffc5:	pop    r15
   14000ffc7:	pop    r14
   14000ffc9:	pop    r12
   14000ffcb:	ret    
   14000ffcc:	sub    rsp,0x38
   14000ffd0:	mov    rax,QWORD PTR [rsp+0x60]
   14000ffd5:	and    QWORD PTR [rsp+0x28],0x0
   14000ffdb:	mov    QWORD PTR [rsp+0x20],rax
   14000ffe0:	call   0x14000fe9c
   14000ffe5:	add    rsp,0x38
   14000ffe9:	ret    
   14000ffea:	int3   
   14000ffeb:	int3   
   14000ffec:	test   rcx,rcx
   14000ffef:	je     0x140010059
   14000fff1:	mov    BYTE PTR [rsp+0x10],dl
   14000fff5:	sub    rsp,0x28
   14000fff9:	cmp    DWORD PTR [rcx],0xe06d7363
   14000ffff:	jne    0x140010055
   140010001:	cmp    DWORD PTR [rcx+0x18],0x4
   140010005:	jne    0x140010055
   140010007:	mov    eax,DWORD PTR [rcx+0x20]
   14001000a:	sub    eax,0x19930520
   14001000f:	cmp    eax,0x2
   140010012:	ja     0x140010055
   140010014:	mov    rax,QWORD PTR [rcx+0x30]
   140010018:	test   rax,rax
   14001001b:	je     0x140010055
   14001001d:	movsxd rdx,DWORD PTR [rax+0x4]
   140010021:	test   edx,edx
   140010023:	je     0x14001003e
   140010025:	mov    rax,rdx
   140010028:	mov    rdx,QWORD PTR [rcx+0x38]
   14001002c:	add    rdx,rax
   14001002f:	mov    rcx,QWORD PTR [rcx+0x28]
   140010033:	call   rdx
   140010035:	nop
   140010036:	jmp    0x140010055
   140010038:	call   0x14000ae20
   14001003d:	nop
   14001003e:	test   BYTE PTR [rax],0x10
   140010041:	je     0x140010055
   140010043:	mov    rax,QWORD PTR [rcx+0x28]
   140010047:	mov    rcx,QWORD PTR [rax]
   14001004a:	test   rcx,rcx
   14001004d:	je     0x140010055
   14001004f:	mov    rax,QWORD PTR [rcx]
   140010052:	call   QWORD PTR [rax+0x10]
   140010055:	add    rsp,0x28
   140010059:	ret    
   14001005a:	int3   
   14001005b:	int3   
   14001005c:	rex push rbx
   14001005e:	sub    rsp,0x20
   140010062:	mov    rbx,rcx
   140010065:	call   0x140009d38
   14001006a:	lea    rax,[rip+0x6e97]        # 0x140016f08
   140010071:	mov    QWORD PTR [rbx],rax
   140010074:	mov    rax,rbx
   140010077:	add    rsp,0x20
   14001007b:	pop    rbx
   14001007c:	ret    
   14001007d:	int3   
   14001007e:	int3   
   14001007f:	int3   
   140010080:	lea    rax,[rip+0x6e81]        # 0x140016f08
   140010087:	mov    QWORD PTR [rcx],rax
   14001008a:	jmp    0x140009d64
   14001008f:	int3   
   140010090:	mov    QWORD PTR [rsp+0x8],rbx
   140010095:	push   rdi
   140010096:	sub    rsp,0x20
   14001009a:	lea    rax,[rip+0x6e67]        # 0x140016f08
   1400100a1:	mov    ebx,edx
   1400100a3:	mov    rdi,rcx
   1400100a6:	mov    QWORD PTR [rcx],rax
   1400100a9:	call   0x140009d64
   1400100ae:	test   bl,0x1
   1400100b1:	je     0x1400100bb
   1400100b3:	mov    rcx,rdi
   1400100b6:	call   0x140005fbc
   1400100bb:	mov    rax,rdi
   1400100be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400100c3:	add    rsp,0x20
   1400100c7:	pop    rdi
   1400100c8:	ret    
   1400100c9:	int3   
   1400100ca:	int3   
   1400100cb:	int3   
   1400100cc:	mov    rax,rsp
   1400100cf:	mov    QWORD PTR [rax+0x8],rbx
   1400100d3:	mov    QWORD PTR [rax+0x18],rbp
   1400100d7:	push   rsi
   1400100d8:	push   rdi
   1400100d9:	push   r12
   1400100db:	push   r14
   1400100dd:	push   r15
   1400100df:	sub    rsp,0x50
   1400100e3:	mov    r15,QWORD PTR [rsp+0xa0]
   1400100eb:	mov    rbp,r9
   1400100ee:	mov    r14,rdx
   1400100f1:	mov    r12,r8
   1400100f4:	mov    rbx,rcx
   1400100f7:	lea    r9,[rax+0x10]
   1400100fb:	mov    r8,r15
   1400100fe:	mov    rdx,rbp
   140010101:	mov    rcx,r14
   140010104:	call   0x14000f5ec
   140010109:	mov    r9,QWORD PTR [rsp+0xb0]
   140010111:	mov    rsi,QWORD PTR [rsp+0xa8]
   140010119:	mov    rdi,rax
   14001011c:	test   r9,r9
   14001011f:	je     0x14001012f
   140010121:	mov    r8,rsi
   140010124:	mov    rdx,rax
   140010127:	mov    rcx,rbx
   14001012a:	call   0x1400109a8
   14001012f:	call   0x14000fa14
   140010134:	movsxd rcx,DWORD PTR [rsi+0xc]
   140010138:	mov    r9,rdi
   14001013b:	add    rax,rcx
   14001013e:	mov    cl,BYTE PTR [rsp+0xd8]
   140010145:	mov    r8,r12
   140010148:	mov    BYTE PTR [rsp+0x40],cl
   14001014c:	mov    rcx,QWORD PTR [rsp+0xb8]
   140010154:	mov    QWORD PTR [rsp+0x38],rbp
   140010159:	mov    edx,DWORD PTR [rcx]
   14001015b:	mov    QWORD PTR [rsp+0x30],r15
   140010160:	mov    rcx,r14
   140010163:	mov    DWORD PTR [rsp+0x28],edx
   140010167:	mov    rdx,rbx
   14001016a:	mov    QWORD PTR [rsp+0x20],rax
   14001016f:	call   0x14000fab0
   140010174:	lea    r11,[rsp+0x50]
   140010179:	mov    rbx,QWORD PTR [r11+0x30]
   14001017d:	mov    rbp,QWORD PTR [r11+0x40]
   140010181:	mov    rsp,r11
   140010184:	pop    r15
   140010186:	pop    r14
   140010188:	pop    r12
   14001018a:	pop    rdi
   14001018b:	pop    rsi
   14001018c:	ret    
   14001018d:	int3   
   14001018e:	int3   
   14001018f:	int3   
   140010190:	mov    QWORD PTR [rsp+0x10],rbx
   140010195:	mov    QWORD PTR [rsp+0x18],r8
   14001019a:	push   rbp
   14001019b:	push   rsi
   14001019c:	push   rdi
   14001019d:	push   r12
   14001019f:	push   r13
   1400101a1:	push   r14
   1400101a3:	push   r15
   1400101a5:	lea    rbp,[rsp-0x7]
   1400101aa:	sub    rsp,0xb0
   1400101b1:	mov    rbx,QWORD PTR [rbp+0x67]
   1400101b5:	mov    r13,rdx
   1400101b8:	mov    rdi,rcx
   1400101bb:	xor    r12d,r12d
   1400101be:	mov    rdx,r9
   1400101c1:	mov    rcx,rbx
   1400101c4:	mov    r15,r9
   1400101c7:	mov    r14,r8
   1400101ca:	mov    BYTE PTR [rbp+0x47],r12b
   1400101ce:	mov    BYTE PTR [rbp-0x49],r12b
   1400101d2:	call   0x14001142c
   1400101d7:	lea    r9,[rbp-0x21]
   1400101db:	mov    r8,rbx
   1400101de:	mov    rdx,r15
   1400101e1:	mov    rcx,r13
   1400101e4:	mov    esi,eax
   1400101e6:	call   0x14000f5ec
   1400101eb:	mov    r8,rbx
   1400101ee:	mov    rdx,r15
   1400101f1:	mov    rcx,r13
   1400101f4:	call   0x1400113b8
   1400101f9:	mov    r8,rbx
   1400101fc:	mov    rdx,r15
   1400101ff:	cmp    esi,eax
   140010201:	jle    0x140010222
   140010203:	lea    rcx,[rbp-0x21]
   140010207:	mov    r9d,esi
   14001020a:	call   0x1400113e4
   14001020f:	mov    r9d,esi
   140010212:	mov    r8,rbx
   140010215:	mov    rdx,r15
   140010218:	mov    rcx,r13
   14001021b:	call   0x1400113f0
   140010220:	jmp    0x14001022c
   140010222:	mov    rcx,r13
   140010225:	call   0x1400113b8
   14001022a:	mov    esi,eax
   14001022c:	cmp    esi,0xffffffff
   14001022f:	jl     0x140010236
   140010231:	cmp    esi,DWORD PTR [rbx+0x4]
   140010234:	jl     0x14001023b
   140010236:	call   0x14000ae00
   14001023b:	cmp    DWORD PTR [rdi],0xe06d7363
   140010241:	jne    0x1400105c2
   140010247:	cmp    DWORD PTR [rdi+0x18],0x4
   14001024b:	jne    0x140010388
   140010251:	mov    eax,DWORD PTR [rdi+0x20]
   140010254:	sub    eax,0x19930520
   140010259:	cmp    eax,0x2
   14001025c:	ja     0x140010388
   140010262:	cmp    QWORD PTR [rdi+0x30],r12
   140010266:	jne    0x140010388
   14001026c:	call   0x14000719c
   140010271:	cmp    QWORD PTR [rax+0xf0],r12
   140010278:	je     0x1400105a7
   14001027e:	call   0x14000719c
   140010283:	mov    rdi,QWORD PTR [rax+0xf0]
   14001028a:	call   0x14000719c
   14001028f:	mov    rcx,QWORD PTR [rdi+0x38]
   140010293:	mov    r14,QWORD PTR [rax+0xf8]
   14001029a:	mov    BYTE PTR [rbp+0x47],0x1
   14001029e:	mov    QWORD PTR [rbp+0x57],r14
   1400102a2:	call   0x14000fa94
   1400102a7:	mov    edx,0x1
   1400102ac:	mov    rcx,rdi
   1400102af:	call   0x1400114c0
   1400102b4:	test   eax,eax
   1400102b6:	jne    0x1400102bd
   1400102b8:	call   0x14000ae00
   1400102bd:	cmp    DWORD PTR [rdi],0xe06d7363
   1400102c3:	jne    0x1400102e3
   1400102c5:	cmp    DWORD PTR [rdi+0x18],0x4
   1400102c9:	jne    0x1400102e3
   1400102cb:	mov    eax,DWORD PTR [rdi+0x20]
   1400102ce:	sub    eax,0x19930520
   1400102d3:	cmp    eax,0x2
   1400102d6:	ja     0x1400102e3
   1400102d8:	cmp    QWORD PTR [rdi+0x30],r12
   1400102dc:	jne    0x1400102e3
   1400102de:	call   0x14000ae00
   1400102e3:	call   0x14000719c
   1400102e8:	cmp    QWORD PTR [rax+0x108],r12
   1400102ef:	je     0x140010388
   1400102f5:	call   0x14000719c
   1400102fa:	mov    r14,QWORD PTR [rax+0x108]
   140010301:	call   0x14000719c
   140010306:	mov    rdx,r14
   140010309:	mov    rcx,rdi
   14001030c:	mov    QWORD PTR [rax+0x108],r12
   140010313:	call   0x1400108ac
   140010318:	test   al,al
   14001031a:	jne    0x140010384
   14001031c:	mov    r15d,r12d
   14001031f:	cmp    DWORD PTR [r14],r12d
   140010322:	jle    0x1400105fa
   140010328:	mov    rsi,r12
   14001032b:	call   0x14000fa14
   140010330:	movsxd rcx,DWORD PTR [r14+0x4]
   140010334:	add    rax,rsi
   140010337:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14001033c:	je     0x140010359
   14001033e:	call   0x14000fa14
   140010343:	movsxd rcx,DWORD PTR [r14+0x4]
   140010347:	add    rax,rsi
   14001034a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001034f:	call   0x14000fa14
   140010354:	add    rax,rbx
   140010357:	jmp    0x14001035c
   140010359:	mov    rax,r12
   14001035c:	lea    rdx,[rip+0xc04d]        # 0x14001c3b0
   140010363:	mov    rcx,rax
   140010366:	call   0x1400068d8
   14001036b:	test   al,al
   14001036d:	jne    0x140010600
   140010373:	inc    r15d
   140010376:	add    rsi,0x14
   14001037a:	cmp    r15d,DWORD PTR [r14]
   14001037d:	jl     0x14001032b
   14001037f:	jmp    0x1400105fa
   140010384:	mov    r14,QWORD PTR [rbp+0x57]
   140010388:	cmp    DWORD PTR [rdi],0xe06d7363
   14001038e:	jne    0x1400105c2
   140010394:	cmp    DWORD PTR [rdi+0x18],0x4
   140010398:	jne    0x1400105c2
   14001039e:	mov    eax,DWORD PTR [rdi+0x20]
   1400103a1:	sub    eax,0x19930520
   1400103a6:	cmp    eax,0x2
   1400103a9:	ja     0x1400105c2
   1400103af:	cmp    DWORD PTR [rbx+0xc],r12d
   1400103b3:	jbe    0x140010507
   1400103b9:	mov    r8d,DWORD PTR [rbp+0x77]
   1400103bd:	lea    rax,[rbp-0x41]
   1400103c1:	mov    QWORD PTR [rsp+0x30],r15
   1400103c6:	mov    QWORD PTR [rsp+0x28],rax
   1400103cb:	lea    rax,[rbp-0x45]
   1400103cf:	mov    r9d,esi
   1400103d2:	mov    rdx,rbx
   1400103d5:	mov    rcx,r13
   1400103d8:	mov    QWORD PTR [rsp+0x20],rax
   1400103dd:	call   0x14000f6b8
   1400103e2:	mov    ecx,DWORD PTR [rbp-0x45]
   1400103e5:	mov    edx,DWORD PTR [rbp-0x41]
   1400103e8:	cmp    ecx,edx
   1400103ea:	jae    0x140010507
   1400103f0:	lea    r14,[rax+0x10]
   1400103f4:	cmp    DWORD PTR [r14-0x10],esi
   1400103f8:	jg     0x1400104e9
   1400103fe:	cmp    esi,DWORD PTR [r14-0xc]
   140010402:	jg     0x1400104e9
   140010408:	call   0x14000fa14
   14001040d:	movsxd r12,DWORD PTR [r14]
   140010410:	add    r12,rax
   140010413:	mov    eax,DWORD PTR [r14-0x4]
   140010417:	mov    DWORD PTR [rbp-0x3d],eax
   14001041a:	test   eax,eax
   14001041c:	jle    0x1400104e3
   140010422:	call   0x14000fa2c
   140010427:	mov    rcx,QWORD PTR [rdi+0x30]
   14001042b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001042f:	add    rax,0x4
   140010433:	add    rax,rdx
   140010436:	mov    QWORD PTR [rbp-0x31],rax
   14001043a:	call   0x14000fa2c
   14001043f:	mov    rcx,QWORD PTR [rdi+0x30]
   140010443:	movsxd rdx,DWORD PTR [rcx+0xc]
   140010447:	mov    ecx,DWORD PTR [rax+rdx*1]
   14001044a:	mov    DWORD PTR [rbp-0x39],ecx
   14001044d:	test   ecx,ecx
   14001044f:	jle    0x140010488
   140010451:	call   0x14000fa2c
   140010456:	mov    rcx,QWORD PTR [rbp-0x31]
   14001045a:	mov    r8,QWORD PTR [rdi+0x30]
   14001045e:	movsxd rcx,DWORD PTR [rcx]
   140010461:	add    rax,rcx
   140010464:	mov    rcx,r12
   140010467:	mov    rdx,rax
   14001046a:	mov    QWORD PTR [rbp-0x29],rax
   14001046e:	call   0x140011270
   140010473:	test   eax,eax
   140010475:	jne    0x140010493
   140010477:	mov    eax,DWORD PTR [rbp-0x39]
   14001047a:	add    QWORD PTR [rbp-0x31],0x4
   14001047f:	dec    eax
   140010481:	mov    DWORD PTR [rbp-0x39],eax
   140010484:	test   eax,eax
   140010486:	jg     0x140010451
   140010488:	mov    eax,DWORD PTR [rbp-0x3d]
   14001048b:	dec    eax
   14001048d:	add    r12,0x14
   140010491:	jmp    0x140010417
   140010493:	mov    al,BYTE PTR [rbp+0x6f]
   140010496:	mov    r8,QWORD PTR [rbp+0x57]
   14001049a:	mov    r9,r15
   14001049d:	mov    BYTE PTR [rsp+0x58],al
   1400104a1:	mov    al,BYTE PTR [rbp+0x47]
   1400104a4:	mov    rdx,r13
   1400104a7:	mov    BYTE PTR [rsp+0x50],al
   1400104ab:	mov    rax,QWORD PTR [rbp+0x7f]
   1400104af:	mov    rcx,rdi
   1400104b2:	mov    QWORD PTR [rsp+0x48],rax
   1400104b7:	mov    eax,DWORD PTR [rbp+0x77]
   1400104ba:	mov    BYTE PTR [rbp-0x49],0x1
   1400104be:	mov    DWORD PTR [rsp+0x40],eax
   1400104c2:	lea    rax,[r14-0x10]
   1400104c6:	mov    QWORD PTR [rsp+0x38],rax
   1400104cb:	mov    rax,QWORD PTR [rbp-0x29]
   1400104cf:	mov    QWORD PTR [rsp+0x30],rax
   1400104d4:	mov    QWORD PTR [rsp+0x28],r12
   1400104d9:	mov    QWORD PTR [rsp+0x20],rbx
   1400104de:	call   0x1400100cc
   1400104e3:	mov    edx,DWORD PTR [rbp-0x41]
   1400104e6:	mov    ecx,DWORD PTR [rbp-0x45]
   1400104e9:	inc    ecx
   1400104eb:	add    r14,0x14
   1400104ef:	mov    DWORD PTR [rbp-0x45],ecx
   1400104f2:	cmp    ecx,edx
   1400104f4:	jb     0x1400103f4
   1400104fa:	xor    r12d,r12d
   1400104fd:	cmp    BYTE PTR [rbp-0x49],r12b
   140010501:	jne    0x140010594
   140010507:	mov    eax,DWORD PTR [rbx]
   140010509:	and    eax,0x1fffffff
   14001050e:	cmp    eax,0x19930521
   140010513:	jb     0x140010594
   140010515:	mov    esi,DWORD PTR [rbx+0x20]
   140010518:	test   esi,esi
   14001051a:	je     0x140010529
   14001051c:	movsxd rsi,esi
   14001051f:	call   0x14000fa14
   140010524:	add    rax,rsi
   140010527:	jmp    0x14001052c
   140010529:	mov    rax,r12
   14001052c:	test   rax,rax
   14001052f:	je     0x140010594
   140010531:	test   esi,esi
   140010533:	je     0x140010546
   140010535:	call   0x14000fa14
   14001053a:	mov    rdx,rax
   14001053d:	movsxd rax,DWORD PTR [rbx+0x20]
   140010541:	add    rdx,rax
   140010544:	jmp    0x140010549
   140010546:	mov    rdx,r12
   140010549:	mov    rcx,rdi
   14001054c:	call   0x1400108ac
   140010551:	test   al,al
   140010553:	jne    0x140010594
   140010555:	lea    r9,[rbp+0x47]
   140010559:	mov    r8,rbx
   14001055c:	mov    rdx,r15
   14001055f:	mov    rcx,r13
   140010562:	call   0x14000f5ec
   140010567:	mov    cl,BYTE PTR [rbp+0x6f]
   14001056a:	mov    r8,QWORD PTR [rbp+0x57]
   14001056e:	mov    BYTE PTR [rsp+0x40],cl
   140010572:	mov    QWORD PTR [rsp+0x38],r15
   140010577:	mov    QWORD PTR [rsp+0x30],rbx
   14001057c:	or     DWORD PTR [rsp+0x28],0xffffffff
   140010581:	mov    r9,rax
   140010584:	mov    rdx,rdi
   140010587:	mov    rcx,r13
   14001058a:	mov    QWORD PTR [rsp+0x20],r12
   14001058f:	call   0x14000fab0
   140010594:	call   0x14000719c
   140010599:	cmp    QWORD PTR [rax+0x108],r12
   1400105a0:	je     0x1400105a7
   1400105a2:	call   0x14000ae00
   1400105a7:	mov    rbx,QWORD PTR [rsp+0xf8]
   1400105af:	add    rsp,0xb0
   1400105b6:	pop    r15
   1400105b8:	pop    r14
   1400105ba:	pop    r13
   1400105bc:	pop    r12
   1400105be:	pop    rdi
   1400105bf:	pop    rsi
   1400105c0:	pop    rbp
   1400105c1:	ret    
   1400105c2:	cmp    DWORD PTR [rbx+0xc],r12d
   1400105c6:	jbe    0x140010594
   1400105c8:	cmp    BYTE PTR [rbp+0x6f],r12b
   1400105cc:	jne    0x14001063e
   1400105ce:	mov    rax,QWORD PTR [rbp+0x7f]
   1400105d2:	mov    r9,r15
   1400105d5:	mov    r8,r14
   1400105d8:	mov    QWORD PTR [rsp+0x38],rax
   1400105dd:	mov    eax,DWORD PTR [rbp+0x77]
   1400105e0:	mov    rdx,r13
   1400105e3:	mov    DWORD PTR [rsp+0x30],eax
   1400105e7:	mov    rcx,rdi
   1400105ea:	mov    DWORD PTR [rsp+0x28],esi
   1400105ee:	mov    QWORD PTR [rsp+0x20],rbx
   1400105f3:	call   0x140010644
   1400105f8:	jmp    0x140010594
   1400105fa:	call   0x14000ae20
   1400105ff:	int3   
   140010600:	mov    dl,0x1
   140010602:	mov    rcx,rdi
   140010605:	call   0x14000ffec
   14001060a:	lea    rax,[rip+0x6907]        # 0x140016f18
   140010611:	lea    rdx,[rbp+0x47]
   140010615:	lea    rcx,[rbp-0x19]
   140010619:	mov    QWORD PTR [rbp+0x47],rax
   14001061d:	call   0x140009cec
   140010622:	lea    rax,[rip+0x68df]        # 0x140016f08
   140010629:	lea    rdx,[rip+0x97b0]        # 0x140019de0
   140010630:	lea    rcx,[rbp-0x19]
   140010634:	mov    QWORD PTR [rbp-0x19],rax
   140010638:	call   0x140009ec8
   14001063d:	int3   
   14001063e:	call   0x14000ae20
   140010643:	int3   
   140010644:	mov    QWORD PTR [rsp+0x10],rbx
   140010649:	mov    QWORD PTR [rsp+0x18],r8
   14001064e:	push   rbp
   14001064f:	push   rsi
   140010650:	push   rdi
   140010651:	push   r12
   140010653:	push   r13
   140010655:	push   r14
   140010657:	push   r15
   140010659:	sub    rsp,0x70
   14001065d:	cmp    DWORD PTR [rcx],0x80000003
   140010663:	mov    r15,r9
   140010666:	mov    rdi,r8
   140010669:	mov    r12,rdx
   14001066c:	mov    rsi,rcx
   14001066f:	je     0x140010891
   140010675:	call   0x14000719c
   14001067a:	mov    rbp,QWORD PTR [rsp+0xd0]
   140010682:	cmp    QWORD PTR [rax+0xe0],0x0
   14001068a:	je     0x1400106ed
   14001068c:	xor    ecx,ecx
   14001068e:	call   QWORD PTR [rip+0x2b14]        # 0x1400131a8
   140010694:	mov    rbx,rax
   140010697:	call   0x14000719c
   14001069c:	cmp    QWORD PTR [rax+0xe0],rbx
   1400106a3:	je     0x1400106ed
   1400106a5:	cmp    DWORD PTR [rsi],0xe0434f4d
   1400106ab:	je     0x1400106ed
   1400106ad:	cmp    DWORD PTR [rsi],0xe0434352
   1400106b3:	mov    ebx,DWORD PTR [rsp+0xe0]
   1400106ba:	je     0x1400106f4
   1400106bc:	mov    rax,QWORD PTR [rsp+0xe8]
   1400106c4:	mov    r9,r15
   1400106c7:	mov    r8,rdi
   1400106ca:	mov    QWORD PTR [rsp+0x30],rax
   1400106cf:	mov    rdx,r12
   1400106d2:	mov    rcx,rsi
   1400106d5:	mov    DWORD PTR [rsp+0x28],ebx
   1400106d9:	mov    QWORD PTR [rsp+0x20],rbp
   1400106de:	call   0x14000f91c
   1400106e3:	test   eax,eax
   1400106e5:	jne    0x140010891
   1400106eb:	jmp    0x1400106f4
   1400106ed:	mov    ebx,DWORD PTR [rsp+0xe0]
   1400106f4:	cmp    DWORD PTR [rbp+0xc],0x0
   1400106f8:	jne    0x1400106ff
   1400106fa:	call   0x14000ae00
   1400106ff:	mov    r14d,DWORD PTR [rsp+0xd8]
   140010707:	lea    rax,[rsp+0x60]
   14001070c:	mov    QWORD PTR [rsp+0x30],r15
   140010711:	mov    QWORD PTR [rsp+0x28],rax
   140010716:	lea    rax,[rsp+0xb0]
   14001071e:	mov    r8d,ebx
   140010721:	mov    r9d,r14d
   140010724:	mov    rdx,rbp
   140010727:	mov    rcx,r12
   14001072a:	mov    QWORD PTR [rsp+0x20],rax
   14001072f:	call   0x14000f6b8
   140010734:	mov    ecx,DWORD PTR [rsp+0xb0]
   14001073b:	cmp    ecx,DWORD PTR [rsp+0x60]
   14001073f:	jae    0x140010891
   140010745:	lea    rdi,[rax+0xc]
   140010749:	lea    r13,[rdi-0xc]
   14001074d:	cmp    r14d,DWORD PTR [r13+0x0]
   140010751:	jl     0x14001087a
   140010757:	cmp    r14d,DWORD PTR [rdi-0x8]
   14001075b:	jg     0x14001087a
   140010761:	call   0x14000fa14
   140010766:	movsxd rcx,DWORD PTR [rdi]
   140010769:	lea    rdx,[rcx+rcx*4]
   14001076d:	movsxd rcx,DWORD PTR [rdi+0x4]
   140010771:	lea    rdx,[rcx+rdx*4]
   140010775:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001077a:	je     0x14001079f
   14001077c:	call   0x14000fa14
   140010781:	movsxd rcx,DWORD PTR [rdi]
   140010784:	lea    rdx,[rcx+rcx*4]
   140010788:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001078c:	lea    rdx,[rcx+rdx*4]
   140010790:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140010795:	call   0x14000fa14
   14001079a:	add    rax,rbx
   14001079d:	jmp    0x1400107a1
   14001079f:	xor    eax,eax
   1400107a1:	test   rax,rax
   1400107a4:	je     0x1400107f0
   1400107a6:	call   0x14000fa14
   1400107ab:	movsxd rcx,DWORD PTR [rdi]
   1400107ae:	lea    rdx,[rcx+rcx*4]
   1400107b2:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400107b6:	lea    rdx,[rcx+rdx*4]
   1400107ba:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   1400107bf:	je     0x1400107e4
   1400107c1:	call   0x14000fa14
   1400107c6:	movsxd rcx,DWORD PTR [rdi]
   1400107c9:	lea    rdx,[rcx+rcx*4]
   1400107cd:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400107d1:	lea    rdx,[rcx+rdx*4]
   1400107d5:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   1400107da:	call   0x14000fa14
   1400107df:	add    rax,rbx
   1400107e2:	jmp    0x1400107e6
   1400107e4:	xor    eax,eax
   1400107e6:	cmp    BYTE PTR [rax+0x10],0x0
   1400107ea:	jne    0x140010873
   1400107f0:	call   0x14000fa14
   1400107f5:	movsxd rcx,DWORD PTR [rdi]
   1400107f8:	lea    rdx,[rcx+rcx*4]
   1400107fc:	movsxd rcx,DWORD PTR [rdi+0x4]
   140010800:	lea    rdx,[rcx+rdx*4]
   140010804:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   140010809:	jne    0x140010873
   14001080b:	call   0x14000fa14
   140010810:	mov    ecx,DWORD PTR [rdi]
   140010812:	mov    r8,QWORD PTR [rsp+0xc0]
   14001081a:	mov    BYTE PTR [rsp+0x58],0x0
   14001081f:	mov    BYTE PTR [rsp+0x50],0x1
   140010824:	dec    ecx
   140010826:	movsxd rcx,ecx
   140010829:	mov    r9,r15
   14001082c:	lea    rdx,[rcx+rcx*4]
   140010830:	lea    rcx,[rax+rdx*4]
   140010834:	movsxd rax,DWORD PTR [rdi+0x4]
   140010838:	mov    rdx,r12
   14001083b:	add    rcx,rax
   14001083e:	mov    rax,QWORD PTR [rsp+0xe8]
   140010846:	mov    QWORD PTR [rsp+0x48],rax
   14001084b:	mov    eax,DWORD PTR [rsp+0xe0]
   140010852:	mov    DWORD PTR [rsp+0x40],eax
   140010856:	mov    QWORD PTR [rsp+0x38],r13
   14001085b:	and    QWORD PTR [rsp+0x30],0x0
   140010861:	mov    QWORD PTR [rsp+0x28],rcx
   140010866:	mov    rcx,rsi
   140010869:	mov    QWORD PTR [rsp+0x20],rbp
   14001086e:	call   0x1400100cc
   140010873:	mov    ecx,DWORD PTR [rsp+0xb0]
   14001087a:	inc    ecx
   14001087c:	add    rdi,0x14
   140010880:	mov    DWORD PTR [rsp+0xb0],ecx
   140010887:	cmp    ecx,DWORD PTR [rsp+0x60]
   14001088b:	jb     0x140010749
   140010891:	mov    rbx,QWORD PTR [rsp+0xb8]
   140010899:	add    rsp,0x70
   14001089d:	pop    r15
   14001089f:	pop    r14
   1400108a1:	pop    r13
   1400108a3:	pop    r12
   1400108a5:	pop    rdi
   1400108a6:	pop    rsi
   1400108a7:	pop    rbp
   1400108a8:	ret    
   1400108a9:	int3   
   1400108aa:	int3   
   1400108ab:	int3   
   1400108ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400108b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400108b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400108bb:	push   rdi
   1400108bc:	push   r12
   1400108be:	push   r13
   1400108c0:	push   r14
   1400108c2:	push   r15
   1400108c4:	sub    rsp,0x20
   1400108c8:	mov    rsi,rdx
   1400108cb:	mov    r13,rcx
   1400108ce:	test   rdx,rdx
   1400108d1:	je     0x140010978
   1400108d7:	xor    edi,edi
   1400108d9:	xor    r14b,r14b
   1400108dc:	cmp    DWORD PTR [rdx],edi
   1400108de:	jle    0x140010958
   1400108e0:	call   0x14000fa2c
   1400108e5:	mov    rdx,rax
   1400108e8:	mov    rax,QWORD PTR [r13+0x30]
   1400108ec:	movsxd r15,DWORD PTR [rax+0xc]
   1400108f0:	add    r15,0x4
   1400108f4:	add    r15,rdx
   1400108f7:	call   0x14000fa2c
   1400108fc:	mov    rdx,rax
   1400108ff:	mov    rax,QWORD PTR [r13+0x30]
   140010903:	movsxd rcx,DWORD PTR [rax+0xc]
   140010907:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14001090a:	test   ebp,ebp
   14001090c:	jle    0x140010952
   14001090e:	movsxd rax,edi
   140010911:	lea    r12,[rax+rax*4]
   140010915:	call   0x14000fa2c
   14001091a:	mov    rbx,rax
   14001091d:	movsxd rax,DWORD PTR [r15]
   140010920:	add    rbx,rax
   140010923:	call   0x14000fa14
   140010928:	movsxd rcx,DWORD PTR [rsi+0x4]
   14001092c:	mov    r8,QWORD PTR [r13+0x30]
   140010930:	lea    rax,[rax+r12*4]
   140010934:	mov    rdx,rbx
   140010937:	add    rcx,rax
   14001093a:	call   0x140011270
   14001093f:	test   eax,eax
   140010941:	jne    0x14001094f
   140010943:	dec    ebp
   140010945:	add    r15,0x4
   140010949:	test   ebp,ebp
   14001094b:	jg     0x140010915
   14001094d:	jmp    0x140010952
   14001094f:	mov    r14b,0x1
   140010952:	inc    edi
   140010954:	cmp    edi,DWORD PTR [rsi]
   140010956:	jl     0x1400108e0
   140010958:	mov    rbx,QWORD PTR [rsp+0x50]
   14001095d:	mov    rbp,QWORD PTR [rsp+0x58]
   140010962:	mov    rsi,QWORD PTR [rsp+0x60]
   140010967:	mov    al,r14b
   14001096a:	add    rsp,0x20
   14001096e:	pop    r15
   140010970:	pop    r14
   140010972:	pop    r13
   140010974:	pop    r12
   140010976:	pop    rdi
   140010977:	ret    
   140010978:	call   0x14000ae00
   14001097d:	call   0x14000ae20
   140010982:	int3   
   140010983:	int3   
   140010984:	movsxd rax,DWORD PTR [rdx]
   140010987:	add    rax,rcx
   14001098a:	cmp    DWORD PTR [rdx+0x4],0x0
   14001098e:	jl     0x1400109a6
   140010990:	movsxd r9,DWORD PTR [rdx+0x4]
   140010994:	movsxd rdx,DWORD PTR [rdx+0x8]
   140010998:	mov    rcx,QWORD PTR [r9+rcx*1]
   14001099c:	movsxd r8,DWORD PTR [rdx+rcx*1]
   1400109a0:	add    r8,r9
   1400109a3:	add    rax,r8
   1400109a6:	ret    
   1400109a7:	int3   
   1400109a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400109ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400109b2:	mov    QWORD PTR [rsp+0x18],rdi
   1400109b7:	push   r14
   1400109b9:	sub    rsp,0x20
   1400109bd:	mov    rdi,r9
   1400109c0:	mov    r14,rcx
   1400109c3:	test   DWORD PTR [r8],0x80000000
   1400109ca:	je     0x1400109d1
   1400109cc:	mov    rsi,rdx
   1400109cf:	jmp    0x1400109d8
   1400109d1:	movsxd rsi,DWORD PTR [r8+0x8]
   1400109d5:	add    rsi,QWORD PTR [rdx]
   1400109d8:	call   0x140010a60
   1400109dd:	dec    eax
   1400109df:	je     0x140010a18
   1400109e1:	dec    eax
   1400109e3:	jne    0x140010a40
   1400109e5:	xor    ebx,ebx
   1400109e7:	cmp    DWORD PTR [rdi+0x18],ebx
   1400109ea:	je     0x1400109fb
   1400109ec:	call   0x14000fa2c
   1400109f1:	mov    rbx,rax
   1400109f4:	movsxd rax,DWORD PTR [rdi+0x18]
   1400109f8:	add    rbx,rax
   1400109fb:	lea    rdx,[rdi+0x8]
   1400109ff:	mov    rcx,QWORD PTR [r14+0x28]
   140010a03:	call   0x140010984
   140010a08:	mov    rdx,rax
   140010a0b:	mov    r8d,0x1
   140010a11:	mov    rcx,rsi
   140010a14:	call   rbx
   140010a16:	jmp    0x140010a40
   140010a18:	xor    ebx,ebx
   140010a1a:	cmp    DWORD PTR [rdi+0x18],ebx
   140010a1d:	je     0x140010a2b
   140010a1f:	call   0x14000fa2c
   140010a24:	movsxd rbx,DWORD PTR [rdi+0x18]
   140010a28:	add    rbx,rax
   140010a2b:	lea    rdx,[rdi+0x8]
   140010a2f:	mov    rcx,QWORD PTR [r14+0x28]
   140010a33:	call   0x140010984
   140010a38:	mov    rdx,rax
   140010a3b:	mov    rcx,rsi
   140010a3e:	call   rbx
   140010a40:	jmp    0x140010a48
   140010a42:	call   0x14000ae20
   140010a47:	nop
   140010a48:	mov    rbx,QWORD PTR [rsp+0x30]
   140010a4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140010a52:	mov    rdi,QWORD PTR [rsp+0x40]
   140010a57:	add    rsp,0x20
   140010a5b:	pop    r14
   140010a5d:	ret    
   140010a5e:	int3   
   140010a5f:	int3   
   140010a60:	mov    QWORD PTR [rsp+0x8],rbx
   140010a65:	mov    QWORD PTR [rsp+0x10],rsi
   140010a6a:	mov    QWORD PTR [rsp+0x18],rdi
   140010a6f:	push   r13
   140010a71:	push   r14
   140010a73:	push   r15
   140010a75:	sub    rsp,0x30
   140010a79:	mov    rsi,r9
   140010a7c:	mov    rbx,r8
   140010a7f:	mov    r14,rdx
   140010a82:	mov    r13,rcx
   140010a85:	xor    edi,edi
   140010a87:	mov    r15d,DWORD PTR [r8+0x4]
   140010a8b:	test   r15d,r15d
   140010a8e:	je     0x140010a9e
   140010a90:	movsxd r15,r15d
   140010a93:	call   0x14000fa14
   140010a98:	lea    rdx,[r15+rax*1]
   140010a9c:	jmp    0x140010aa1
   140010a9e:	mov    rdx,rdi
   140010aa1:	test   rdx,rdx
   140010aa4:	je     0x140010c41
   140010aaa:	test   r15d,r15d
   140010aad:	je     0x140010ac0
   140010aaf:	call   0x14000fa14
   140010ab4:	mov    rcx,rax
   140010ab7:	movsxd rax,DWORD PTR [rbx+0x4]
   140010abb:	add    rcx,rax
   140010abe:	jmp    0x140010ac3
   140010ac0:	mov    rcx,rdi
   140010ac3:	cmp    BYTE PTR [rcx+0x10],dil
   140010ac7:	je     0x140010c41
   140010acd:	cmp    DWORD PTR [rbx+0x8],edi
   140010ad0:	jne    0x140010ade
   140010ad2:	test   DWORD PTR [rbx],0x80000000
   140010ad8:	je     0x140010c41
   140010ade:	test   DWORD PTR [rbx],0x80000000
   140010ae4:	jne    0x140010af0
   140010ae6:	movsxd rax,DWORD PTR [rbx+0x8]
   140010aea:	add    rax,QWORD PTR [r14]
   140010aed:	mov    r14,rax
   140010af0:	test   BYTE PTR [rbx],0x8
   140010af3:	mov    ebx,0x1
   140010af8:	je     0x140010b37
   140010afa:	mov    edx,ebx
   140010afc:	mov    rcx,QWORD PTR [r13+0x28]
   140010b00:	call   0x1400114c0
   140010b05:	test   eax,eax
   140010b07:	je     0x140010c31
   140010b0d:	mov    edx,ebx
   140010b0f:	mov    rcx,r14
   140010b12:	call   0x1400114c0
   140010b17:	test   eax,eax
   140010b19:	je     0x140010c31
   140010b1f:	mov    rcx,QWORD PTR [r13+0x28]
   140010b23:	mov    QWORD PTR [r14],rcx
   140010b26:	lea    rdx,[rsi+0x8]
   140010b2a:	call   0x140010984
   140010b2f:	mov    QWORD PTR [r14],rax
   140010b32:	jmp    0x140010c37
   140010b37:	test   BYTE PTR [rsi],bl
   140010b39:	je     0x140010b88
   140010b3b:	mov    edx,ebx
   140010b3d:	mov    rcx,QWORD PTR [r13+0x28]
   140010b41:	call   0x1400114c0
   140010b46:	test   eax,eax
   140010b48:	je     0x140010c31
   140010b4e:	mov    edx,ebx
   140010b50:	mov    rcx,r14
   140010b53:	call   0x1400114c0
   140010b58:	test   eax,eax
   140010b5a:	je     0x140010c31
   140010b60:	movsxd r8,DWORD PTR [rsi+0x14]
   140010b64:	mov    rdx,QWORD PTR [r13+0x28]
   140010b68:	mov    rcx,r14
   140010b6b:	call   0x140006070
   140010b70:	cmp    DWORD PTR [rsi+0x14],0x8
   140010b74:	jne    0x140010c37
   140010b7a:	cmp    QWORD PTR [r14],rdi
   140010b7d:	je     0x140010c37
   140010b83:	mov    rcx,QWORD PTR [r14]
   140010b86:	jmp    0x140010b26
   140010b88:	cmp    DWORD PTR [rsi+0x18],edi
   140010b8b:	je     0x140010b9e
   140010b8d:	call   0x14000fa2c
   140010b92:	mov    rcx,rax
   140010b95:	movsxd rax,DWORD PTR [rsi+0x18]
   140010b99:	add    rcx,rax
   140010b9c:	jmp    0x140010ba1
   140010b9e:	mov    rcx,rdi
   140010ba1:	mov    edx,ebx
   140010ba3:	test   rcx,rcx
   140010ba6:	mov    rcx,QWORD PTR [r13+0x28]
   140010baa:	jne    0x140010be4
   140010bac:	call   0x1400114c0
   140010bb1:	test   eax,eax
   140010bb3:	je     0x140010c31
   140010bb5:	mov    edx,ebx
   140010bb7:	mov    rcx,r14
   140010bba:	call   0x1400114c0
   140010bbf:	test   eax,eax
   140010bc1:	je     0x140010c31
   140010bc3:	movsxd rbx,DWORD PTR [rsi+0x14]
   140010bc7:	lea    rdx,[rsi+0x8]
   140010bcb:	mov    rcx,QWORD PTR [r13+0x28]
   140010bcf:	call   0x140010984
   140010bd4:	mov    rdx,rax
   140010bd7:	mov    r8,rbx
   140010bda:	mov    rcx,r14
   140010bdd:	call   0x140006070
   140010be2:	jmp    0x140010c37
   140010be4:	call   0x1400114c0
   140010be9:	test   eax,eax
   140010beb:	je     0x140010c31
   140010bed:	mov    edx,ebx
   140010bef:	mov    rcx,r14
   140010bf2:	call   0x1400114c0
   140010bf7:	test   eax,eax
   140010bf9:	je     0x140010c31
   140010bfb:	cmp    DWORD PTR [rsi+0x18],edi
   140010bfe:	je     0x140010c11
   140010c00:	call   0x14000fa2c
   140010c05:	mov    rcx,rax
   140010c08:	movsxd rax,DWORD PTR [rsi+0x18]
   140010c0c:	add    rcx,rax
   140010c0f:	jmp    0x140010c14
   140010c11:	mov    rcx,rdi
   140010c14:	call   0x1400114c0
   140010c19:	test   eax,eax
   140010c1b:	je     0x140010c31
   140010c1d:	mov    al,BYTE PTR [rsi]
   140010c1f:	and    al,0x4
   140010c21:	neg    al
   140010c23:	sbb    ecx,ecx
   140010c25:	neg    ecx
   140010c27:	add    ecx,ebx
   140010c29:	mov    edi,ecx
   140010c2b:	mov    DWORD PTR [rsp+0x20],ecx
   140010c2f:	jmp    0x140010c37
   140010c31:	call   0x14000ae00
   140010c36:	nop
   140010c37:	mov    eax,edi
   140010c39:	jmp    0x140010c43
   140010c3b:	call   0x14000ae20
   140010c40:	nop
   140010c41:	xor    eax,eax
   140010c43:	mov    rbx,QWORD PTR [rsp+0x50]
   140010c48:	mov    rsi,QWORD PTR [rsp+0x58]
   140010c4d:	mov    rdi,QWORD PTR [rsp+0x60]
   140010c52:	add    rsp,0x30
   140010c56:	pop    r15
   140010c58:	pop    r14
   140010c5a:	pop    r13
   140010c5c:	ret    
   140010c5d:	int3   
   140010c5e:	int3   
   140010c5f:	int3   
   140010c60:	rex push rbx
   140010c62:	push   rsi
   140010c63:	push   rdi
   140010c64:	push   r12
   140010c66:	push   r13
   140010c68:	push   r14
   140010c6a:	push   r15
   140010c6c:	sub    rsp,0x90
   140010c73:	mov    rdi,rcx
   140010c76:	xor    r15d,r15d
   140010c79:	mov    DWORD PTR [rsp+0x20],r15d
   140010c7e:	and    DWORD PTR [rsp+0xd0],r15d
   140010c86:	and    QWORD PTR [rsp+0x40],r15
   140010c8b:	and    QWORD PTR [rsp+0xe8],r15
   140010c93:	call   0x14000719c
   140010c98:	mov    r13,QWORD PTR [rax+0xf8]
   140010c9f:	mov    QWORD PTR [rsp+0x50],r13
   140010ca4:	call   0x14000719c
   140010ca9:	mov    rax,QWORD PTR [rax+0xf0]
   140010cb0:	mov    QWORD PTR [rsp+0xe0],rax
   140010cb8:	mov    rsi,QWORD PTR [rdi+0x50]
   140010cbc:	mov    QWORD PTR [rsp+0xd8],rsi
   140010cc4:	mov    rax,QWORD PTR [rdi+0x48]
   140010cc8:	mov    QWORD PTR [rsp+0x48],rax
   140010ccd:	mov    rbx,QWORD PTR [rdi+0x40]
   140010cd1:	mov    rax,QWORD PTR [rdi+0x30]
   140010cd5:	mov    QWORD PTR [rsp+0x58],rax
   140010cda:	mov    r14,QWORD PTR [rdi+0x28]
   140010cde:	mov    QWORD PTR [rsp+0x60],r14
   140010ce3:	call   0x14000719c
   140010ce8:	mov    QWORD PTR [rax+0xf0],rsi
   140010cef:	call   0x14000719c
   140010cf4:	mov    QWORD PTR [rax+0xf8],rbx
   140010cfb:	call   0x14000719c
   140010d00:	mov    rdx,QWORD PTR [rax+0xf0]
   140010d07:	mov    rdx,QWORD PTR [rdx+0x28]
   140010d0b:	lea    rcx,[rsp+0x78]
   140010d10:	call   0x14000f970
   140010d15:	mov    r12,rax
   140010d18:	mov    QWORD PTR [rsp+0x38],rax
   140010d1d:	cmp    QWORD PTR [rdi+0x58],r15
   140010d21:	je     0x140010d42
   140010d23:	mov    DWORD PTR [rsp+0xd0],0x1
   140010d2e:	call   0x14000719c
   140010d33:	mov    rcx,QWORD PTR [rax+0x138]
   140010d3a:	mov    QWORD PTR [rsp+0xe8],rcx
   140010d42:	mov    r8d,0x100
   140010d48:	mov    rdx,r14
   140010d4b:	mov    rcx,QWORD PTR [rsp+0x58]
   140010d50:	call   0x1400114e0
   140010d55:	mov    rbx,rax
   140010d58:	mov    QWORD PTR [rsp+0x40],rax
   140010d5d:	mov    rdi,QWORD PTR [rsp+0xe0]
   140010d65:	jmp    0x140010de2
   140010d67:	mov    DWORD PTR [rsp+0x20],0x1
   140010d6f:	call   0x14000719c
   140010d74:	and    DWORD PTR [rax+0x460],0x0
   140010d7b:	mov    rsi,QWORD PTR [rsp+0xd8]
   140010d83:	cmp    DWORD PTR [rsp+0xd0],0x0
   140010d8b:	je     0x140010dae
   140010d8d:	mov    dl,0x1
   140010d8f:	mov    rcx,rsi
   140010d92:	call   0x14000ffec
   140010d97:	mov    rax,QWORD PTR [rsp+0xe8]
   140010d9f:	lea    r9,[rax+0x20]
   140010da3:	mov    r8d,DWORD PTR [rax+0x18]
   140010da7:	mov    edx,DWORD PTR [rax+0x4]
   140010daa:	mov    ecx,DWORD PTR [rax]
   140010dac:	jmp    0x140010dbb
   140010dae:	lea    r9,[rsi+0x20]
   140010db2:	mov    r8d,DWORD PTR [rsi+0x18]
   140010db6:	mov    edx,DWORD PTR [rsi+0x4]
   140010db9:	mov    ecx,DWORD PTR [rsi]
   140010dbb:	call   QWORD PTR [rip+0x231f]        # 0x1400130e0
   140010dc1:	mov    r15d,DWORD PTR [rsp+0x20]
   140010dc6:	mov    rbx,QWORD PTR [rsp+0x40]
   140010dcb:	mov    r13,QWORD PTR [rsp+0x50]
   140010dd0:	mov    rdi,QWORD PTR [rsp+0xe0]
   140010dd8:	mov    r14,QWORD PTR [rsp+0x60]
   140010ddd:	mov    r12,QWORD PTR [rsp+0x38]
   140010de2:	mov    rcx,r12
   140010de5:	call   0x14000f9b4
   140010dea:	test   r15d,r15d
   140010ded:	jne    0x140010e21
   140010def:	cmp    DWORD PTR [rsi],0xe06d7363
   140010df5:	jne    0x140010e21
   140010df7:	cmp    DWORD PTR [rsi+0x18],0x4
   140010dfb:	jne    0x140010e21
   140010dfd:	mov    eax,DWORD PTR [rsi+0x20]
   140010e00:	sub    eax,0x19930520
   140010e05:	cmp    eax,0x2
   140010e08:	ja     0x140010e21
   140010e0a:	mov    rcx,QWORD PTR [rsi+0x28]
   140010e0e:	call   0x14000fa44
   140010e13:	test   eax,eax
   140010e15:	je     0x140010e21
   140010e17:	mov    dl,0x1
   140010e19:	mov    rcx,rsi
   140010e1c:	call   0x14000ffec
   140010e21:	call   0x14000719c
   140010e26:	mov    QWORD PTR [rax+0xf0],rdi
   140010e2d:	call   0x14000719c
   140010e32:	mov    QWORD PTR [rax+0xf8],r13
   140010e39:	mov    rax,QWORD PTR [rsp+0x48]
   140010e3e:	movsxd rcx,DWORD PTR [rax+0x1c]
   140010e42:	mov    rax,QWORD PTR [r14]
   140010e45:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140010e4d:	mov    rax,rbx
   140010e50:	add    rsp,0x90
   140010e57:	pop    r15
   140010e59:	pop    r14
   140010e5b:	pop    r13
   140010e5d:	pop    r12
   140010e5f:	pop    rdi
   140010e60:	pop    rsi
   140010e61:	pop    rbx
   140010e62:	ret    
   140010e63:	int3   
   140010e64:	sub    rsp,0x28
   140010e68:	mov    rax,QWORD PTR [rcx]
   140010e6b:	cmp    DWORD PTR [rax],0xe0434352
   140010e71:	je     0x140010e85
   140010e73:	cmp    DWORD PTR [rax],0xe0434f4d
   140010e79:	je     0x140010e85
   140010e7b:	cmp    DWORD PTR [rax],0xe06d7363
   140010e81:	jne    0x140010e9e
   140010e83:	jmp    0x140010ea5
   140010e85:	call   0x14000719c
   140010e8a:	cmp    DWORD PTR [rax+0x100],0x0
   140010e91:	jle    0x140010e9e
   140010e93:	call   0x14000719c
   140010e98:	dec    DWORD PTR [rax+0x100]
   140010e9e:	xor    eax,eax
   140010ea0:	add    rsp,0x28
   140010ea4:	ret    
   140010ea5:	call   0x14000719c
   140010eaa:	and    DWORD PTR [rax+0x100],0x0
   140010eb1:	call   0x14000ae20
   140010eb6:	int3   
   140010eb7:	int3   
   140010eb8:	mov    rax,rsp
   140010ebb:	mov    DWORD PTR [rax+0x20],r9d
   140010ebf:	mov    QWORD PTR [rax+0x18],r8
   140010ec3:	mov    QWORD PTR [rax+0x10],rdx
   140010ec7:	mov    QWORD PTR [rax+0x8],rcx
   140010ecb:	push   rbx
   140010ecc:	push   rsi
   140010ecd:	push   rdi
   140010ece:	push   r12
   140010ed0:	push   r13
   140010ed2:	push   r14
   140010ed4:	push   r15
   140010ed6:	sub    rsp,0x30
   140010eda:	mov    r12d,r9d
   140010edd:	mov    rsi,r8
   140010ee0:	mov    r13,rdx
   140010ee3:	mov    r15,rcx
   140010ee6:	call   0x14000fa14
   140010eeb:	mov    QWORD PTR [rsp+0x28],rax
   140010ef0:	mov    r8,rsi
   140010ef3:	mov    rdx,r13
   140010ef6:	mov    rcx,r15
   140010ef9:	call   0x140011390
   140010efe:	mov    edi,eax
   140010f00:	call   0x14000719c
   140010f05:	inc    DWORD PTR [rax+0x100]
   140010f0b:	cmp    edi,0xffffffff
   140010f0e:	je     0x140011001
   140010f14:	cmp    edi,r12d
   140010f17:	jle    0x140011001
   140010f1d:	cmp    edi,0xffffffff
   140010f20:	jle    0x140010f27
   140010f22:	cmp    edi,DWORD PTR [rsi+0x4]
   140010f25:	jl     0x140010f2c
   140010f27:	call   0x14000ae00
   140010f2c:	movsxd r14,edi
   140010f2f:	call   0x14000fa14
   140010f34:	movsxd rcx,DWORD PTR [rsi+0x8]
   140010f38:	lea    rax,[rax+r14*8]
   140010f3c:	mov    edi,DWORD PTR [rcx+rax*1]
   140010f3f:	mov    DWORD PTR [rsp+0x20],edi
   140010f43:	call   0x14000fa14
   140010f48:	movsxd rcx,DWORD PTR [rsi+0x8]
   140010f4c:	lea    rax,[rax+r14*8]
   140010f50:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140010f55:	je     0x140010f73
   140010f57:	call   0x14000fa14
   140010f5c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140010f60:	lea    rax,[rax+r14*8]
   140010f64:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140010f69:	call   0x14000fa14
   140010f6e:	add    rax,rbx
   140010f71:	jmp    0x140010f75
   140010f73:	xor    eax,eax
   140010f75:	test   rax,rax
   140010f78:	je     0x140010fd8
   140010f7a:	mov    r9d,edi
   140010f7d:	mov    r8,rsi
   140010f80:	mov    rdx,r13
   140010f83:	mov    rcx,r15
   140010f86:	call   0x1400113e4
   140010f8b:	call   0x14000fa14
   140010f90:	movsxd rcx,DWORD PTR [rsi+0x8]
   140010f94:	lea    rax,[rax+r14*8]
   140010f98:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140010f9d:	je     0x140010fbb
   140010f9f:	call   0x14000fa14
   140010fa4:	movsxd rcx,DWORD PTR [rsi+0x8]
   140010fa8:	lea    rax,[rax+r14*8]
   140010fac:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140010fb1:	call   0x14000fa14
   140010fb6:	add    rax,rbx
   140010fb9:	jmp    0x140010fbd
   140010fbb:	xor    eax,eax
   140010fbd:	mov    r8d,0x103
   140010fc3:	mov    rdx,r15
   140010fc6:	mov    rcx,rax
   140010fc9:	call   0x1400114e0
   140010fce:	mov    rcx,QWORD PTR [rsp+0x28]
   140010fd3:	call   0x14000fa78
   140010fd8:	jmp    0x140010ff8
   140010fda:	mov    r12d,DWORD PTR [rsp+0x88]
   140010fe2:	mov    rsi,QWORD PTR [rsp+0x80]
   140010fea:	mov    r13,QWORD PTR [rsp+0x78]
   140010fef:	mov    r15,QWORD PTR [rsp+0x70]
   140010ff4:	mov    edi,DWORD PTR [rsp+0x20]
   140010ff8:	mov    DWORD PTR [rsp+0x24],edi
   140010ffc:	jmp    0x140010f0b
   140011001:	call   0x14000719c
   140011006:	cmp    DWORD PTR [rax+0x100],0x0
   14001100d:	jle    0x14001101a
   14001100f:	call   0x14000719c
   140011014:	dec    DWORD PTR [rax+0x100]
   14001101a:	cmp    edi,0xffffffff
   14001101d:	je     0x140011029
   14001101f:	cmp    edi,r12d
   140011022:	jle    0x140011029
   140011024:	call   0x14000ae00
   140011029:	mov    r9d,edi
   14001102c:	mov    r8,rsi
   14001102f:	mov    rdx,r13
   140011032:	mov    rcx,r15
   140011035:	call   0x1400113e4
   14001103a:	add    rsp,0x30
   14001103e:	pop    r15
   140011040:	pop    r14
   140011042:	pop    r13
   140011044:	pop    r12
   140011046:	pop    rdi
   140011047:	pop    rsi
   140011048:	pop    rbx
   140011049:	ret    
   14001104a:	int3   
   14001104b:	int3   
   14001104c:	mov    QWORD PTR [rsp+0x8],rbx
   140011051:	mov    QWORD PTR [rsp+0x10],rbp
   140011056:	mov    QWORD PTR [rsp+0x18],rsi
   14001105b:	push   rdi
   14001105c:	push   r12
   14001105e:	push   r14
   140011060:	sub    rsp,0x40
   140011064:	mov    rbp,r9
   140011067:	mov    r14,r8
   14001106a:	mov    rsi,rdx
   14001106d:	mov    rbx,rcx
   140011070:	call   0x14000719c
   140011075:	mov    rdi,QWORD PTR [rsp+0x80]
   14001107d:	cmp    DWORD PTR [rax+0x460],0x0
   140011084:	mov    edx,0x1fffffff
   140011089:	mov    r8d,0x80000029
   14001108f:	mov    r9d,0x80000026
   140011095:	mov    r12d,0x1
   14001109b:	jne    0x1400110d5
   14001109d:	cmp    DWORD PTR [rbx],0xe06d7363
   1400110a3:	je     0x1400110d5
   1400110a5:	cmp    DWORD PTR [rbx],r8d
   1400110a8:	jne    0x1400110ba
   1400110aa:	cmp    DWORD PTR [rbx+0x18],0xf
   1400110ae:	jne    0x1400110ba
   1400110b0:	cmp    QWORD PTR [rbx+0x60],0x19930520
   1400110b8:	je     0x1400110d5
   1400110ba:	cmp    DWORD PTR [rbx],r9d
   1400110bd:	je     0x1400110d5
   1400110bf:	mov    ecx,DWORD PTR [rdi]
   1400110c1:	and    ecx,edx
   1400110c3:	cmp    ecx,0x19930522
   1400110c9:	jb     0x1400110d5
   1400110cb:	test   BYTE PTR [rdi+0x24],r12b
   1400110cf:	jne    0x140011254
   1400110d5:	mov    eax,DWORD PTR [rbx+0x4]
   1400110d8:	test   al,0x66
   1400110da:	je     0x140011172
   1400110e0:	cmp    DWORD PTR [rdi+0x4],0x0
   1400110e4:	je     0x140011254
   1400110ea:	cmp    DWORD PTR [rsp+0x88],0x0
   1400110f2:	jne    0x140011254
   1400110f8:	and    eax,0x20
   1400110fb:	je     0x14001113b
   1400110fd:	cmp    DWORD PTR [rbx],r9d
   140011100:	jne    0x14001113b
   140011102:	mov    r8,QWORD PTR [r14+0xf8]
   140011109:	mov    rdx,rbp
   14001110c:	mov    rcx,rdi
   14001110f:	call   0x140011434
   140011114:	mov    ebx,eax
   140011116:	cmp    eax,0xffffffff
   140011119:	jl     0x140011120
   14001111b:	cmp    eax,DWORD PTR [rdi+0x4]
   14001111e:	jl     0x140011125
   140011120:	call   0x14000ae00
   140011125:	mov    r9d,ebx
   140011128:	mov    rcx,rsi
   14001112b:	mov    rdx,rbp
   14001112e:	mov    r8,rdi
   140011131:	call   0x140010eb8
   140011136:	jmp    0x140011254
   14001113b:	test   eax,eax
   14001113d:	je     0x14001115f
   14001113f:	cmp    DWORD PTR [rbx],r8d
   140011142:	jne    0x14001115f
   140011144:	mov    esi,DWORD PTR [rbx+0x38]
   140011147:	cmp    esi,0xffffffff
   14001114a:	jl     0x140011151
   14001114c:	cmp    esi,DWORD PTR [rdi+0x4]
   14001114f:	jl     0x140011156
   140011151:	call   0x14000ae00
   140011156:	mov    rcx,QWORD PTR [rbx+0x28]
   14001115a:	mov    r9d,esi
   14001115d:	jmp    0x14001112b
   14001115f:	mov    r8,rdi
   140011162:	mov    rdx,rbp
   140011165:	mov    rcx,rsi
   140011168:	call   0x14000f7e4
   14001116d:	jmp    0x140011254
   140011172:	cmp    DWORD PTR [rdi+0xc],0x0
   140011176:	jne    0x1400111a6
   140011178:	mov    eax,DWORD PTR [rdi]
   14001117a:	and    eax,edx
   14001117c:	cmp    eax,0x19930521
   140011181:	jb     0x140011254
   140011187:	cmp    DWORD PTR [rdi+0x20],0x0
   14001118b:	je     0x14001119b
   14001118d:	call   0x14000fa14
   140011192:	movsxd rcx,DWORD PTR [rdi+0x20]
   140011196:	add    rax,rcx
   140011199:	jmp    0x14001119d
   14001119b:	xor    eax,eax
   14001119d:	test   rax,rax
   1400111a0:	je     0x140011254
   1400111a6:	cmp    DWORD PTR [rbx],0xe06d7363
   1400111ac:	jne    0x14001121b
   1400111ae:	cmp    DWORD PTR [rbx+0x18],0x3
   1400111b2:	jb     0x14001121b
   1400111b4:	cmp    DWORD PTR [rbx+0x20],0x19930522
   1400111bb:	jbe    0x14001121b
   1400111bd:	mov    rax,QWORD PTR [rbx+0x30]
   1400111c1:	cmp    DWORD PTR [rax+0x8],0x0
   1400111c5:	je     0x1400111d9
   1400111c7:	call   0x14000fa2c
   1400111cc:	mov    rcx,QWORD PTR [rbx+0x30]
   1400111d0:	movsxd r10,DWORD PTR [rcx+0x8]
   1400111d4:	add    r10,rax
   1400111d7:	jmp    0x1400111dc
   1400111d9:	xor    r10d,r10d
   1400111dc:	test   r10,r10
   1400111df:	je     0x14001121b
   1400111e1:	movzx  eax,BYTE PTR [rsp+0x98]
   1400111e9:	mov    r9,rbp
   1400111ec:	mov    r8,r14
   1400111ef:	mov    DWORD PTR [rsp+0x38],eax
   1400111f3:	mov    rax,QWORD PTR [rsp+0x90]
   1400111fb:	mov    rdx,rsi
   1400111fe:	mov    QWORD PTR [rsp+0x30],rax
   140011203:	mov    eax,DWORD PTR [rsp+0x88]
   14001120a:	mov    rcx,rbx
   14001120d:	mov    DWORD PTR [rsp+0x28],eax
   140011211:	mov    QWORD PTR [rsp+0x20],rdi
   140011216:	call   r10
   140011219:	jmp    0x140011257
   14001121b:	mov    rax,QWORD PTR [rsp+0x90]
   140011223:	mov    r9,rbp
   140011226:	mov    r8,r14
   140011229:	mov    QWORD PTR [rsp+0x38],rax
   14001122e:	mov    eax,DWORD PTR [rsp+0x88]
   140011235:	mov    rdx,rsi
   140011238:	mov    DWORD PTR [rsp+0x30],eax
   14001123c:	mov    al,BYTE PTR [rsp+0x98]
   140011243:	mov    rcx,rbx
   140011246:	mov    BYTE PTR [rsp+0x28],al
   14001124a:	mov    QWORD PTR [rsp+0x20],rdi
   14001124f:	call   0x140010190
   140011254:	mov    eax,r12d
   140011257:	mov    rbx,QWORD PTR [rsp+0x60]
   14001125c:	mov    rbp,QWORD PTR [rsp+0x68]
   140011261:	mov    rsi,QWORD PTR [rsp+0x70]
   140011266:	add    rsp,0x40
   14001126a:	pop    r14
   14001126c:	pop    r12
   14001126e:	pop    rdi
   14001126f:	ret    
   140011270:	mov    rax,rsp
   140011273:	mov    QWORD PTR [rax+0x8],rbx
   140011277:	mov    QWORD PTR [rax+0x10],rbp
   14001127b:	mov    QWORD PTR [rax+0x18],rsi
   14001127f:	mov    QWORD PTR [rax+0x20],rdi
   140011283:	push   r14
   140011285:	sub    rsp,0x20
   140011289:	mov    esi,DWORD PTR [rcx+0x4]
   14001128c:	xor    ebx,ebx
   14001128e:	mov    r14,r8
   140011291:	mov    rbp,rdx
   140011294:	mov    rdi,rcx
   140011297:	test   esi,esi
   140011299:	je     0x1400112a9
   14001129b:	movsxd rsi,esi
   14001129e:	call   0x14000fa14
   1400112a3:	lea    rcx,[rsi+rax*1]
   1400112a7:	jmp    0x1400112ac
   1400112a9:	mov    rcx,rbx
   1400112ac:	test   rcx,rcx
   1400112af:	je     0x14001136e
   1400112b5:	test   esi,esi
   1400112b7:	je     0x1400112c8
   1400112b9:	movsxd rsi,DWORD PTR [rdi+0x4]
   1400112bd:	call   0x14000fa14
   1400112c2:	lea    rcx,[rsi+rax*1]
   1400112c6:	jmp    0x1400112cb
   1400112c8:	mov    rcx,rbx
   1400112cb:	cmp    BYTE PTR [rcx+0x10],bl
   1400112ce:	je     0x14001136e
   1400112d4:	test   esi,esi
   1400112d6:	je     0x1400112e9
   1400112d8:	call   0x14000fa14
   1400112dd:	mov    rsi,rax
   1400112e0:	movsxd rax,DWORD PTR [rdi+0x4]
   1400112e4:	add    rsi,rax
   1400112e7:	jmp    0x1400112ec
   1400112e9:	mov    rsi,rbx
   1400112ec:	call   0x14000fa2c
   1400112f1:	mov    rcx,rax
   1400112f4:	movsxd rax,DWORD PTR [rbp+0x4]
   1400112f8:	add    rcx,rax
   1400112fb:	cmp    rsi,rcx
   1400112fe:	je     0x14001133a
   140011300:	cmp    DWORD PTR [rdi+0x4],ebx
   140011303:	je     0x140011316
   140011305:	call   0x14000fa14
   14001130a:	mov    rsi,rax
   14001130d:	movsxd rax,DWORD PTR [rdi+0x4]
   140011311:	add    rsi,rax
   140011314:	jmp    0x140011319
   140011316:	mov    rsi,rbx
   140011319:	call   0x14000fa2c
   14001131e:	movsxd rdx,DWORD PTR [rbp+0x4]
   140011322:	lea    rcx,[rsi+0x10]
   140011326:	add    rdx,0x10
   14001132a:	add    rdx,rax
   14001132d:	call   0x140009b60
   140011332:	test   eax,eax
   140011334:	je     0x14001133a
   140011336:	xor    eax,eax
   140011338:	jmp    0x140011373
   14001133a:	mov    al,0x2
   14001133c:	test   BYTE PTR [rbp+0x0],al
   14001133f:	je     0x140011346
   140011341:	test   BYTE PTR [rdi],0x8
   140011344:	je     0x14001136a
   140011346:	test   BYTE PTR [r14],0x1
   14001134a:	je     0x140011351
   14001134c:	test   BYTE PTR [rdi],0x1
   14001134f:	je     0x14001136a
   140011351:	test   BYTE PTR [r14],0x4
   140011355:	je     0x14001135c
   140011357:	test   BYTE PTR [rdi],0x4
   14001135a:	je     0x14001136a
   14001135c:	test   BYTE PTR [r14],al
   14001135f:	je     0x140011365
   140011361:	test   BYTE PTR [rdi],al
   140011363:	je     0x14001136a
   140011365:	mov    ebx,0x1
   14001136a:	mov    eax,ebx
   14001136c:	jmp    0x140011373
   14001136e:	mov    eax,0x1
   140011373:	mov    rbx,QWORD PTR [rsp+0x30]
   140011378:	mov    rbp,QWORD PTR [rsp+0x38]
   14001137d:	mov    rsi,QWORD PTR [rsp+0x40]
   140011382:	mov    rdi,QWORD PTR [rsp+0x48]
   140011387:	add    rsp,0x20
   14001138b:	pop    r14
   14001138d:	ret    
   14001138e:	int3   
   14001138f:	int3   
   140011390:	sub    rsp,0x28
   140011394:	movsxd r9,DWORD PTR [r8+0x1c]
   140011398:	mov    rax,QWORD PTR [rcx]
   14001139b:	mov    r10,r8
   14001139e:	mov    eax,DWORD PTR [r9+rax*1]
   1400113a2:	cmp    eax,0xfffffffe
   1400113a5:	jne    0x1400113b2
   1400113a7:	mov    r8,QWORD PTR [rdx]
   1400113aa:	mov    rcx,r10
   1400113ad:	call   0x140011434
   1400113b2:	add    rsp,0x28
   1400113b6:	ret    
   1400113b7:	int3   
   1400113b8:	rex push rbx
   1400113ba:	sub    rsp,0x20
   1400113be:	lea    r9,[rsp+0x40]
   1400113c3:	mov    rbx,r8
   1400113c6:	call   0x14000f5ec
   1400113cb:	mov    rcx,QWORD PTR [rax]
   1400113ce:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400113d2:	mov    QWORD PTR [rsp+0x40],rcx
   1400113d7:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   1400113db:	add    rsp,0x20
   1400113df:	pop    rbx
   1400113e0:	ret    
   1400113e1:	int3   
   1400113e2:	int3   
   1400113e3:	int3   
   1400113e4:	movsxd rdx,DWORD PTR [r8+0x1c]
   1400113e8:	mov    rax,QWORD PTR [rcx]
   1400113eb:	mov    DWORD PTR [rdx+rax*1],r9d
   1400113ef:	ret    
   1400113f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400113f5:	push   rdi
   1400113f6:	sub    rsp,0x20
   1400113fa:	mov    edi,r9d
   1400113fd:	lea    r9,[rsp+0x40]
   140011402:	mov    rbx,r8
   140011405:	call   0x14000f5ec
   14001140a:	mov    rcx,QWORD PTR [rax]
   14001140d:	movsxd rax,DWORD PTR [rbx+0x1c]
   140011411:	mov    QWORD PTR [rsp+0x40],rcx
   140011416:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14001141a:	jle    0x140011420
   14001141c:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140011420:	mov    rbx,QWORD PTR [rsp+0x30]
   140011425:	add    rsp,0x20
   140011429:	pop    rdi
   14001142a:	ret    
   14001142b:	int3   
   14001142c:	mov    r8,QWORD PTR [rdx]
   14001142f:	jmp    0x140011434
   140011434:	mov    QWORD PTR [rsp+0x8],rbx
   140011439:	mov    QWORD PTR [rsp+0x10],rbp
   14001143e:	mov    QWORD PTR [rsp+0x18],rsi
   140011443:	push   rdi
   140011444:	sub    rsp,0x20
   140011448:	mov    rbp,r8
   14001144b:	mov    rsi,rdx
   14001144e:	mov    rbx,rcx
   140011451:	test   rcx,rcx
   140011454:	jne    0x14001145b
   140011456:	call   0x14000ae00
   14001145b:	movsxd rax,DWORD PTR [rbx+0x18]
   14001145f:	mov    edi,DWORD PTR [rbx+0x14]
   140011462:	add    rax,QWORD PTR [rsi+0x8]
   140011466:	jne    0x14001146d
   140011468:	call   0x14000ae00
   14001146d:	xor    ecx,ecx
   14001146f:	test   edi,edi
   140011471:	je     0x1400114a5
   140011473:	mov    r8,QWORD PTR [rsi+0x8]
   140011477:	movsxd r9,DWORD PTR [rbx+0x18]
   14001147b:	lea    rdx,[r8+r9*1]
   14001147f:	movsxd rax,DWORD PTR [rdx]
   140011482:	add    rax,r8
   140011485:	cmp    rbp,rax
   140011488:	jl     0x140011494
   14001148a:	inc    ecx
   14001148c:	add    rdx,0x8
   140011490:	cmp    ecx,edi
   140011492:	jb     0x14001147f
   140011494:	test   ecx,ecx
   140011496:	je     0x1400114a5
   140011498:	dec    ecx
   14001149a:	lea    rax,[r8+rcx*8]
   14001149e:	mov    eax,DWORD PTR [rax+r9*1+0x4]
   1400114a3:	jmp    0x1400114a8
   1400114a5:	or     eax,0xffffffff
   1400114a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400114ad:	mov    rbp,QWORD PTR [rsp+0x38]
   1400114b2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400114b7:	add    rsp,0x20
   1400114bb:	pop    rdi
   1400114bc:	ret    
   1400114bd:	int3   
   1400114be:	int3   
   1400114bf:	int3   
   1400114c0:	neg    rcx
   1400114c3:	sbb    eax,eax
   1400114c5:	and    eax,0x1
   1400114c8:	ret    
   1400114c9:	int3   
   1400114ca:	int3   
   1400114cb:	int3   
   1400114cc:	int3   
   1400114cd:	int3   
   1400114ce:	int3   
   1400114cf:	int3   
   1400114d0:	int3   
   1400114d1:	int3   
   1400114d2:	int3   
   1400114d3:	int3   
   1400114d4:	int3   
   1400114d5:	int3   
   1400114d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400114e0:	sub    rsp,0x28
   1400114e4:	mov    QWORD PTR [rsp+0x30],rcx
   1400114e9:	mov    QWORD PTR [rsp+0x38],rdx
   1400114ee:	mov    DWORD PTR [rsp+0x40],r8d
   1400114f3:	mov    rdx,QWORD PTR [rdx]
   1400114f6:	mov    rax,rcx
   1400114f9:	call   0x14000c630
   1400114fe:	call   rax
   140011500:	call   0x14000c660
   140011505:	mov    rcx,rax
   140011508:	mov    rdx,QWORD PTR [rsp+0x38]
   14001150d:	mov    rdx,QWORD PTR [rdx]
   140011510:	mov    r8d,0x2
   140011516:	call   0x14000c630
   14001151b:	add    rsp,0x28
   14001151f:	ret    
   140011520:	mov    rax,QWORD PTR [rsp]
   140011524:	mov    QWORD PTR [rcx],rax
   140011527:	ret    
   140011528:	mov    rax,rsp
   14001152b:	mov    QWORD PTR [rax+0x8],rbx
   14001152f:	mov    QWORD PTR [rax+0x10],rbp
   140011533:	mov    QWORD PTR [rax+0x18],rsi
   140011537:	mov    QWORD PTR [rax+0x20],rdi
   14001153b:	push   r14
   14001153d:	sub    rsp,0x20
   140011541:	mov    rbx,QWORD PTR [r9+0x38]
   140011545:	mov    rsi,rdx
   140011548:	mov    r14,r8
   14001154b:	mov    rbp,rcx
   14001154e:	lea    r8,[rbx+0x4]
   140011552:	mov    rdx,r9
   140011555:	mov    rcx,rsi
   140011558:	mov    rdi,r9
   14001155b:	call   0x14000c584
   140011560:	mov    r11d,DWORD PTR [rbx+0x4]
   140011564:	mov    r10d,DWORD PTR [rbp+0x4]
   140011568:	mov    eax,r11d
   14001156b:	and    r11d,0x2
   14001156f:	mov    r8d,0x1
   140011575:	and    eax,r8d
   140011578:	and    r10b,0x66
   14001157c:	cmove  r11d,eax
   140011580:	test   r11d,r11d
   140011583:	je     0x140011599
   140011585:	mov    r9,rdi
   140011588:	mov    r8,r14
   14001158b:	mov    rdx,rsi
   14001158e:	mov    rcx,rbp
   140011591:	call   0x14000fc28
   140011596:	mov    r8d,eax
   140011599:	mov    rbx,QWORD PTR [rsp+0x30]
   14001159e:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115a3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115a8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400115ad:	mov    eax,r8d
   1400115b0:	add    rsp,0x20
   1400115b4:	pop    r14
   1400115b6:	ret    
   1400115b7:	int3   
   1400115b8:	int3   
   1400115b9:	int3   
   1400115ba:	int3   
   1400115bb:	int3   
   1400115bc:	int3   
   1400115bd:	int3   
   1400115be:	int3   
   1400115bf:	int3   
   1400115c0:	int3   
   1400115c1:	int3   
   1400115c2:	int3   
   1400115c3:	int3   
   1400115c4:	int3   
   1400115c5:	int3   
   1400115c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400115d0:	push   rbx
   1400115d1:	mov    eax,ecx
   1400115d3:	mov    r9,rdx
   1400115d6:	mov    ecx,0x0
   1400115db:	cpuid  
   1400115dd:	mov    DWORD PTR [r9],eax
   1400115e0:	mov    DWORD PTR [r9+0x4],ebx
   1400115e4:	mov    DWORD PTR [r9+0x8],ecx
   1400115e8:	mov    DWORD PTR [r9+0xc],edx
   1400115ec:	pop    rbx
   1400115ed:	ret    
   1400115ee:	int3   
   1400115ef:	int3   
   1400115f0:	int3   
   1400115f1:	int3   
   1400115f2:	int3   
   1400115f3:	int3   
   1400115f4:	int3   
   1400115f5:	int3   
   1400115f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011600:	xor    rax,rax
   140011603:	rdpmc  
   140011605:	shl    rdx,0x20
   140011609:	or     rax,rdx
   14001160c:	ret    
   14001160d:	int3   
   14001160e:	int3   
   14001160f:	int3   
   140011610:	int3   
   140011611:	int3   
   140011612:	int3   
   140011613:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011620:	push   rbx
   140011621:	mov    eax,0x564d5868
   140011626:	mov    ebx,0x0
   14001162b:	mov    ecx,0xa
   140011630:	mov    edx,0x5658
   140011635:	in     eax,dx
   140011636:	mov    rax,0x0
   14001163d:	cmp    ebx,0x564d5868
   140011643:	jne    0x14001164c
   140011645:	mov    rax,0x1
   14001164c:	pop    rbx
   14001164d:	ret    
   14001164e:	int3   
   14001164f:	int3   
   140011650:	rex push rbp
   140011652:	sub    rsp,0x20
   140011656:	mov    rbp,rdx
   140011659:	mov    rax,QWORD PTR [rcx]
   14001165c:	mov    rdx,rcx
   14001165f:	mov    ecx,DWORD PTR [rax]
   140011661:	call   0x140006e9c
   140011666:	nop
   140011667:	add    rsp,0x20
   14001166b:	pop    rbp
   14001166c:	ret    
   14001166d:	int3   
   14001166e:	rex push rbp
   140011670:	sub    rsp,0x20
   140011674:	mov    rbp,rdx
   140011677:	add    rsp,0x20
   14001167b:	pop    rbp
   14001167c:	jmp    0x1400075c8
   140011681:	int3   
   140011682:	rex push rbp
   140011684:	sub    rsp,0x20
   140011688:	mov    rbp,rdx
   14001168b:	mov    ecx,0xd
   140011690:	add    rsp,0x20
   140011694:	pop    rbp
   140011695:	jmp    0x14000b048
   14001169a:	int3   
   14001169b:	rex push rbp
   14001169d:	sub    rsp,0x20
   1400116a1:	mov    rbp,rdx
   1400116a4:	mov    ecx,0xc
   1400116a9:	add    rsp,0x20
   1400116ad:	pop    rbp
   1400116ae:	jmp    0x14000b048
   1400116b3:	int3   
   1400116b4:	rex push rbp
   1400116b6:	sub    rsp,0x20
   1400116ba:	mov    rbp,rdx
   1400116bd:	cmp    DWORD PTR [rbp+0x80],0x0
   1400116c4:	je     0x1400116d1
   1400116c6:	mov    ecx,0x8
   1400116cb:	call   0x14000b048
   1400116d0:	nop
   1400116d1:	add    rsp,0x20
   1400116d5:	pop    rbp
   1400116d6:	ret    
   1400116d7:	int3   
   1400116d8:	rex push rbp
   1400116da:	sub    rsp,0x20
   1400116de:	mov    rbp,rdx
   1400116e1:	mov    ecx,0xb
   1400116e6:	call   0x14000b048
   1400116eb:	nop
   1400116ec:	add    rsp,0x20
   1400116f0:	pop    rbp
   1400116f1:	ret    
   1400116f2:	int3   
   1400116f3:	rex push rbp
   1400116f5:	sub    rsp,0x20
   1400116f9:	mov    rbp,rdx
   1400116fc:	mov    ecx,0xe
   140011701:	add    rsp,0x20
   140011705:	pop    rbp
   140011706:	jmp    0x14000b048
   14001170b:	int3   
   14001170c:	rex push rbp
   14001170e:	sub    rsp,0x20
   140011712:	mov    rbp,rdx
   140011715:	mov    rcx,QWORD PTR [rip+0x9bd4]        # 0x14001b2f0
   14001171c:	add    rsp,0x20
   140011720:	pop    rbp
   140011721:	rex.W jmp QWORD PTR [rip+0x1bd8]        # 0x140013300
   140011728:	int3   
   140011729:	rex push rbp
   14001172b:	sub    rsp,0x20
   14001172f:	mov    rbp,rdx
   140011732:	mov    ecx,0xc
   140011737:	add    rsp,0x20
   14001173b:	pop    rbp
   14001173c:	jmp    0x14000b048
   140011741:	int3   
   140011742:	rex push rbp
   140011744:	sub    rsp,0x20
   140011748:	mov    rbp,rdx
   14001174b:	mov    ecx,0xd
   140011750:	add    rsp,0x20
   140011754:	pop    rbp
   140011755:	jmp    0x14000b048
   14001175a:	int3   
   14001175b:	int3   
   14001175c:	int3   
   14001175d:	int3   
   14001175e:	int3   
   14001175f:	int3   
   140011760:	rex push rbp
   140011762:	sub    rsp,0x20
   140011766:	mov    rbp,rdx
   140011769:	mov    rax,QWORD PTR [rcx]
   14001176c:	xor    ecx,ecx
   14001176e:	cmp    DWORD PTR [rax],0xc0000005
   140011774:	sete   cl
   140011777:	mov    eax,ecx
   140011779:	add    rsp,0x20
   14001177d:	pop    rbp
   14001177e:	ret    
   14001177f:	int3   
   140011780:	rex push rbp
   140011782:	sub    rsp,0x20
   140011786:	mov    rbp,rdx
   140011789:	cmp    DWORD PTR [rbp+0x60],0x0
   14001178d:	je     0x140011797
   14001178f:	xor    ecx,ecx
   140011791:	call   0x14000b048
   140011796:	nop
   140011797:	add    rsp,0x20
   14001179b:	pop    rbp
   14001179c:	ret    
   14001179d:	int3   
   14001179e:	rex push rbp
   1400117a0:	sub    rsp,0x20
   1400117a4:	mov    rbp,rdx
   1400117a7:	mov    ecx,DWORD PTR [rbp+0x50]
   1400117aa:	add    rsp,0x20
   1400117ae:	pop    rbp
   1400117af:	jmp    0x14000e94c
   1400117b4:	int3   
   1400117b5:	rex push rbp
   1400117b7:	sub    rsp,0x20
   1400117bb:	mov    rbp,rdx
   1400117be:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400117c2:	mov    rax,rcx
   1400117c5:	mov    rdx,QWORD PTR [rip+0xcee4]        # 0x14001e6b0
   1400117cc:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400117d0:	call   0x14000c820
   1400117d5:	nop
   1400117d6:	add    rsp,0x20
   1400117da:	pop    rbp
   1400117db:	ret    
   1400117dc:	int3   
   1400117dd:	rex push rbp
   1400117df:	sub    rsp,0x20
   1400117e3:	mov    rbp,rdx
   1400117e6:	mov    ecx,0x1
   1400117eb:	add    rsp,0x20
   1400117ef:	pop    rbp
   1400117f0:	jmp    0x14000b048
   1400117f5:	int3   
   1400117f6:	rex push rbp
   1400117f8:	sub    rsp,0x20
   1400117fc:	mov    rbp,rdx
   1400117ff:	mov    ecx,0x1
   140011804:	add    rsp,0x20
   140011808:	pop    rbp
   140011809:	jmp    0x14000b048
   14001180e:	int3   
   14001180f:	rex push rbp
   140011811:	sub    rsp,0x20
   140011815:	mov    rbp,rdx
   140011818:	mov    ecx,0xa
   14001181d:	add    rsp,0x20
   140011821:	pop    rbp
   140011822:	jmp    0x14000b048
   140011827:	int3   
   140011828:	rex push rbp
   14001182a:	sub    rsp,0x20
   14001182e:	mov    rbp,rdx
   140011831:	mov    ecx,DWORD PTR [rbp+0x40]
   140011834:	add    rsp,0x20
   140011838:	pop    rbp
   140011839:	jmp    0x14000e94c
   14001183e:	int3   
   14001183f:	rex push rbp
   140011841:	sub    rsp,0x20
   140011845:	mov    rbp,rdx
   140011848:	mov    rcx,QWORD PTR [rbp+0x30]
   14001184c:	add    rsp,0x20
   140011850:	pop    rbp
   140011851:	jmp    0x14000c7d0
   140011856:	int3   
   140011857:	rex push rbp
   140011859:	sub    rsp,0x40
   14001185d:	mov    rbp,rdx
   140011860:	lea    rax,[rbp+0x40]
   140011864:	mov    QWORD PTR [rsp+0x30],rax
   140011869:	mov    rax,QWORD PTR [rbp+0x90]
   140011870:	mov    QWORD PTR [rsp+0x28],rax
   140011875:	mov    rax,QWORD PTR [rbp+0x88]
   14001187c:	mov    QWORD PTR [rsp+0x20],rax
   140011881:	mov    r9,QWORD PTR [rbp+0x80]
   140011888:	mov    r8,QWORD PTR [rbp+0x78]
   14001188c:	mov    rdx,QWORD PTR [rbp+0x70]
   140011890:	call   0x14000f878
   140011895:	nop
   140011896:	add    rsp,0x40
   14001189a:	pop    rbp
   14001189b:	ret    
   14001189c:	int3   
   14001189d:	rex push rbp
   14001189f:	sub    rsp,0x20
   1400118a3:	mov    rbp,rdx
   1400118a6:	mov    QWORD PTR [rbp+0x70],rcx
   1400118aa:	mov    QWORD PTR [rbp+0x68],rcx
   1400118ae:	mov    rax,QWORD PTR [rbp+0x68]
   1400118b2:	mov    rcx,QWORD PTR [rax]
   1400118b5:	mov    QWORD PTR [rbp+0x28],rcx
   1400118b9:	mov    DWORD PTR [rbp+0x20],0x0
   1400118c0:	mov    rax,QWORD PTR [rbp+0x28]
   1400118c4:	cmp    DWORD PTR [rax],0xe06d7363
   1400118ca:	jne    0x140011919
   1400118cc:	mov    rax,QWORD PTR [rbp+0x28]
   1400118d0:	cmp    DWORD PTR [rax+0x18],0x4
   1400118d4:	jne    0x140011919
   1400118d6:	mov    rax,QWORD PTR [rbp+0x28]
   1400118da:	cmp    DWORD PTR [rax+0x20],0x19930520
   1400118e1:	je     0x1400118fd
   1400118e3:	mov    rax,QWORD PTR [rbp+0x28]
   1400118e7:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400118ee:	je     0x1400118fd
   1400118f0:	mov    rax,QWORD PTR [rbp+0x28]
   1400118f4:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400118fb:	jne    0x140011919
   1400118fd:	mov    rdx,QWORD PTR [rbp+0x28]
   140011901:	mov    rax,QWORD PTR [rbp+0xd8]
   140011908:	mov    rcx,QWORD PTR [rax+0x28]
   14001190c:	cmp    QWORD PTR [rdx+0x28],rcx
   140011910:	jne    0x140011919
   140011912:	mov    DWORD PTR [rbp+0x20],0x1
   140011919:	mov    rax,QWORD PTR [rbp+0x28]
   14001191d:	cmp    DWORD PTR [rax],0xe06d7363
   140011923:	jne    0x140011980
   140011925:	mov    rax,QWORD PTR [rbp+0x28]
   140011929:	cmp    DWORD PTR [rax+0x18],0x4
   14001192d:	jne    0x140011980
   14001192f:	mov    rax,QWORD PTR [rbp+0x28]
   140011933:	cmp    DWORD PTR [rax+0x20],0x19930520
   14001193a:	je     0x140011956
   14001193c:	mov    rax,QWORD PTR [rbp+0x28]
   140011940:	cmp    DWORD PTR [rax+0x20],0x19930521
   140011947:	je     0x140011956
   140011949:	mov    rax,QWORD PTR [rbp+0x28]
   14001194d:	cmp    DWORD PTR [rax+0x20],0x19930522
   140011954:	jne    0x140011980
   140011956:	mov    rax,QWORD PTR [rbp+0x28]
   14001195a:	cmp    QWORD PTR [rax+0x30],0x0
   14001195f:	jne    0x140011980
   140011961:	call   0x14000719c
   140011966:	mov    DWORD PTR [rax+0x460],0x1
   140011970:	mov    DWORD PTR [rbp+0x20],0x1
   140011977:	mov    DWORD PTR [rbp+0x30],0x1
   14001197e:	jmp    0x140011987
   140011980:	mov    DWORD PTR [rbp+0x30],0x0
   140011987:	mov    eax,DWORD PTR [rbp+0x30]
   14001198a:	add    rsp,0x20
   14001198e:	pop    rbp
   14001198f:	ret    
   140011990:	int3   
   140011991:	rex push rbx
   140011993:	push   rbp
   140011994:	sub    rsp,0x28
   140011998:	mov    rbp,rdx
   14001199b:	mov    rcx,QWORD PTR [rbp+0x38]
   14001199f:	call   0x14000f9b4
   1400119a4:	cmp    DWORD PTR [rbp+0x20],0x0
   1400119a8:	jne    0x1400119e4
   1400119aa:	mov    rbx,QWORD PTR [rbp+0xd8]
   1400119b1:	cmp    DWORD PTR [rbx],0xe06d7363
   1400119b7:	jne    0x1400119e4
   1400119b9:	cmp    DWORD PTR [rbx+0x18],0x4
   1400119bd:	jne    0x1400119e4
   1400119bf:	mov    eax,DWORD PTR [rbx+0x20]
   1400119c2:	sub    eax,0x19930520
   1400119c7:	cmp    eax,0x2
   1400119ca:	ja     0x1400119e4
   1400119cc:	mov    rcx,QWORD PTR [rbx+0x28]
   1400119d0:	call   0x14000fa44
   1400119d5:	test   eax,eax
   1400119d7:	je     0x1400119e4
   1400119d9:	mov    dl,0x1
   1400119db:	mov    rcx,rbx
   1400119de:	call   0x14000ffec
   1400119e3:	nop
   1400119e4:	call   0x14000719c
   1400119e9:	mov    rcx,QWORD PTR [rbp+0xe0]
   1400119f0:	mov    QWORD PTR [rax+0xf0],rcx
   1400119f7:	call   0x14000719c
   1400119fc:	mov    rcx,QWORD PTR [rbp+0x50]
   140011a00:	mov    QWORD PTR [rax+0xf8],rcx
   140011a07:	add    rsp,0x28
   140011a0b:	pop    rbp
   140011a0c:	pop    rbx
   140011a0d:	ret    
   140011a0e:	int3   
   140011a0f:	rex push rbp
   140011a11:	sub    rsp,0x20
   140011a15:	mov    rbp,rdx
   140011a18:	xor    eax,eax
   140011a1a:	cmp    BYTE PTR [rbp+0x38],al
   140011a1d:	setne  al
   140011a20:	add    rsp,0x20
   140011a24:	pop    rbp
   140011a25:	ret    
   140011a26:	int3   
   140011a27:	rex push rbp
   140011a29:	sub    rsp,0x20
   140011a2d:	mov    rbp,rdx
   140011a30:	call   0x140010e64
   140011a35:	nop
   140011a36:	add    rsp,0x20
   140011a3a:	pop    rbp
   140011a3b:	ret    
   140011a3c:	int3   
   140011a3d:	rex push rbp
   140011a3f:	sub    rsp,0x20
   140011a43:	mov    rbp,rdx
   140011a46:	call   0x14000719c
   140011a4b:	cmp    DWORD PTR [rax+0x100],0x0
   140011a52:	jle    0x140011a5f
   140011a54:	call   0x14000719c
   140011a59:	dec    DWORD PTR [rax+0x100]
   140011a5f:	add    rsp,0x20
   140011a63:	pop    rbp
   140011a64:	ret    
   140011a65:	int3   
   140011a66:	mov    rcx,QWORD PTR [rdx+0x40]
   140011a6d:	jmp    0x140001c8c
   140011a72:	rex push rbp
   140011a74:	sub    rsp,0x20
   140011a78:	mov    rbp,rdx
   140011a7b:	mov    eax,DWORD PTR [rbp+0x20]
   140011a7e:	and    eax,0x1
   140011a81:	test   eax,eax
   140011a83:	je     0x140011a92
   140011a85:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140011a89:	mov    rcx,QWORD PTR [rbp+0x50]
   140011a8d:	call   0x140001c8c
   140011a92:	add    rsp,0x20
   140011a96:	pop    rbp
   140011a97:	ret    
   140011a98:	lea    rcx,[rdx+0x80]
   140011a9f:	jmp    0x14000143c
   140011aa4:	lea    rcx,[rdx+0x78]
   140011aab:	jmp    0x140001c8c
   140011ab0:	lea    rcx,[rdx+0x70]
   140011ab7:	jmp    0x140001c8c
   140011abc:	lea    rcx,[rdx+0x68]
   140011ac3:	jmp    0x140001c8c
   140011ac8:	mov    QWORD PTR [rsp+0x10],rdx
   140011acd:	push   rbp
   140011ace:	sub    rsp,0x20
   140011ad2:	mov    rbp,rdx
   140011ad5:	mov    rcx,QWORD PTR [rbp+0x68]
   140011ad9:	mov    QWORD PTR [rbp+0x68],rcx
   140011add:	xor    eax,eax
   140011adf:	inc    rcx
   140011ae2:	je     0x140011af9
   140011ae4:	cmp    rcx,0xffffffffffffffff
   140011ae8:	ja     0x140011af4
   140011aea:	call   0x140006968
   140011aef:	test   rax,rax
   140011af2:	jne    0x140011af9
   140011af4:	call   0x14000f200
   140011af9:	mov    QWORD PTR [rbp+0x78],rax
   140011afd:	lea    rax,[rip+0xffffffffffff09f6]        # 0x1400024fa
   140011b04:	add    rsp,0x20
   140011b08:	pop    rbp
   140011b09:	ret    
   140011b0a:	int3   
   140011b0b:	mov    QWORD PTR [rsp+0x10],rdx
   140011b10:	push   rbx
   140011b11:	push   rbp
   140011b12:	sub    rsp,0x28
   140011b16:	mov    rbp,rdx
   140011b19:	mov    rbx,QWORD PTR [rbp+0x60]
   140011b1d:	cmp    QWORD PTR [rbx+0x18],0x10
   140011b22:	jb     0x140011b2c
   140011b24:	mov    rcx,QWORD PTR [rbx]
   140011b27:	call   0x140005fbc
   140011b2c:	mov    QWORD PTR [rbx+0x18],0xf
   140011b34:	and    QWORD PTR [rbx+0x10],0x0
   140011b39:	mov    BYTE PTR [rbx],0x0
   140011b3c:	xor    edx,edx
   140011b3e:	xor    ecx,ecx
   140011b40:	call   0x140009ec8
   140011b45:	nop
   140011b46:	lea    rcx,[rdx+0x38]
   140011b4d:	jmp    0x140003a18
   140011b52:	lea    rcx,[rdx+0x70]
   140011b59:	jmp    0x14000294c
   140011b5e:	lea    rcx,[rdx+0x40]
   140011b65:	jmp    0x140001de0
   140011b6a:	lea    rcx,[rdx+0x58]
   140011b71:	jmp    0x140001de0
   140011b76:	mov    QWORD PTR [rsp+0x10],rdx
   140011b7b:	push   rbp
   140011b7c:	sub    rsp,0x40
   140011b80:	mov    rbp,rdx
   140011b83:	lea    rax,[rip+0xffffffffffff1a62]        # 0x1400035ec
   140011b8a:	add    rsp,0x40
   140011b8e:	pop    rbp
   140011b8f:	ret    
   140011b90:	int3   
   140011b91:	lea    rcx,[rip+0xaa98]        # 0x14001c630
   140011b98:	jmp    0x140004504
   140011b9d:	lea    rcx,[rip+0xaa8c]        # 0x14001c630
   140011ba4:	add    rcx,0x20
   140011ba8:	jmp    0x140004504
   140011bad:	lea    rcx,[rip+0xaa7c]        # 0x14001c630
   140011bb4:	add    rcx,0x40
   140011bb8:	jmp    0x140004504
   140011bbd:	mov    rcx,QWORD PTR [rdx+0x20]
   140011bc4:	jmp    0x1400038b0
   140011bc9:	mov    rcx,QWORD PTR [rdx+0x20]
   140011bd0:	add    rcx,0x8
   140011bd4:	jmp    0x140003a60
   140011bd9:	mov    rcx,QWORD PTR [rdx+0x40]
   140011be0:	jmp    0x1400038b0
   140011be5:	mov    rcx,QWORD PTR [rdx+0x40]
   140011bec:	add    rcx,0x8
   140011bf0:	jmp    0x140003a60
   140011bf5:	lea    rcx,[rdx+0x20]
   140011bfc:	add    rcx,0x8
   140011c00:	jmp    0x140001de0
   140011c05:	lea    rcx,[rdx+0x20]
   140011c0c:	add    rcx,0x20
   140011c10:	jmp    0x140004c74
   140011c15:	mov    QWORD PTR [rsp+0x10],rdx
   140011c1a:	push   rbp
   140011c1b:	sub    rsp,0x20
   140011c1f:	mov    rbp,rdx
   140011c22:	mov    rcx,QWORD PTR [rbp+0x68]
   140011c26:	mov    QWORD PTR [rbp+0x68],rcx
   140011c2a:	xor    eax,eax
   140011c2c:	inc    rcx
   140011c2f:	jne    0x140011c33
   140011c31:	jmp    0x140011c4f
   140011c33:	movabs rax,0x7fffffffffffffff
   140011c3d:	cmp    rcx,rax
   140011c40:	ja     0x140011c5c
   140011c42:	add    rcx,rcx
   140011c45:	call   0x140006968
   140011c4a:	test   rax,rax
   140011c4d:	je     0x140011c5c
   140011c4f:	mov    QWORD PTR [rbp+0x20],rax
   140011c53:	lea    rax,[rip+0xffffffffffff2ca7]        # 0x140004901
   140011c5a:	jmp    0x140011c62
   140011c5c:	call   0x14000f200
   140011c61:	nop
   140011c62:	add    rsp,0x20
   140011c66:	pop    rbp
   140011c67:	ret    
   140011c68:	int3   
   140011c69:	mov    QWORD PTR [rsp+0x10],rdx
   140011c6e:	push   rbx
   140011c6f:	push   rbp
   140011c70:	sub    rsp,0x28
   140011c74:	mov    rbp,rdx
   140011c77:	mov    rbx,QWORD PTR [rbp+0x60]
   140011c7b:	cmp    QWORD PTR [rbx+0x18],0x8
   140011c80:	jb     0x140011c8a
   140011c82:	mov    rcx,QWORD PTR [rbx]
   140011c85:	call   0x140005fbc
   140011c8a:	mov    QWORD PTR [rbx+0x18],0x7
   140011c92:	and    QWORD PTR [rbx+0x10],0x0
   140011c97:	xor    eax,eax
   140011c99:	mov    WORD PTR [rbx],ax
   140011c9c:	xor    edx,edx
   140011c9e:	xor    ecx,ecx
   140011ca0:	call   0x140009ec8
   140011ca5:	nop
   140011ca6:	rex push rbp
   140011ca8:	sub    rsp,0x20
   140011cac:	mov    rbp,rdx
   140011caf:	mov    rdx,QWORD PTR [rbp+0x68]
   140011cb3:	mov    rcx,QWORD PTR [rbp+0x78]
   140011cb7:	call   0x140001000
   140011cbc:	add    rsp,0x20
   140011cc0:	pop    rbp
   140011cc1:	ret    
   140011cc2:	rex push rbp
   140011cc4:	sub    rsp,0x20
   140011cc8:	mov    rbp,rdx
   140011ccb:	mov    rdx,QWORD PTR [rbp+0x40]
   140011ccf:	mov    rcx,QWORD PTR [rbp+0x50]
   140011cd3:	call   0x140001000
   140011cd8:	add    rsp,0x20
   140011cdc:	pop    rbp
   140011cdd:	ret    
   140011cde:	mov    QWORD PTR [rsp+0x10],rdx
   140011ce3:	push   rbx
   140011ce4:	push   rbp
   140011ce5:	sub    rsp,0x28
   140011ce9:	mov    rbp,rdx
   140011cec:	mov    rbx,QWORD PTR [rbp+0x58]
   140011cf0:	jmp    0x140011d17
   140011cf2:	cmp    QWORD PTR [rbx+0x18],0x8
   140011cf7:	jb     0x140011d01
   140011cf9:	mov    rcx,QWORD PTR [rbx]
   140011cfc:	call   0x140005fbc
   140011d01:	mov    QWORD PTR [rbx+0x18],0x7
   140011d09:	and    QWORD PTR [rbx+0x10],0x0
   140011d0e:	xor    eax,eax
   140011d10:	mov    WORD PTR [rbx],ax
   140011d13:	add    rbx,0x20
   140011d17:	cmp    rbx,QWORD PTR [rbp+0x40]
   140011d1b:	jne    0x140011cf2
   140011d1d:	xor    edx,edx
   140011d1f:	xor    ecx,ecx
   140011d21:	call   0x140009ec8
   140011d26:	nop
   140011d27:	mov    QWORD PTR [rsp+0x10],rdx
   140011d2c:	push   rbx
   140011d2d:	push   rbp
   140011d2e:	sub    rsp,0x28
   140011d32:	mov    rbp,rdx
   140011d35:	mov    rbx,QWORD PTR [rbp+0x68]
   140011d39:	jmp    0x140011d60
   140011d3b:	cmp    QWORD PTR [rbx+0x18],0x8
   140011d40:	jb     0x140011d4a
   140011d42:	mov    rcx,QWORD PTR [rbx]
   140011d45:	call   0x140005fbc
   140011d4a:	mov    QWORD PTR [rbx+0x18],0x7
   140011d52:	and    QWORD PTR [rbx+0x10],0x0
   140011d57:	xor    eax,eax
   140011d59:	mov    WORD PTR [rbx],ax
   140011d5c:	add    rbx,0x20
   140011d60:	cmp    rbx,QWORD PTR [rbp+0x60]
   140011d64:	jne    0x140011d3b
   140011d66:	xor    edx,edx
   140011d68:	xor    ecx,ecx
   140011d6a:	call   0x140009ec8
   140011d6f:	nop
   140011d70:	rex push rbp
   140011d72:	sub    rsp,0x20
   140011d76:	mov    rbp,rdx
   140011d79:	mov    rdx,QWORD PTR [rbp+0x58]
   140011d7d:	mov    rcx,QWORD PTR [rbp+0x50]
   140011d81:	call   0x140001000
   140011d86:	add    rsp,0x20
   140011d8a:	pop    rbp
   140011d8b:	ret    
   140011d8c:	rex push rbp
   140011d8e:	sub    rsp,0x20
   140011d92:	mov    rbp,rdx
   140011d95:	mov    rdx,QWORD PTR [rbp+0x68]
   140011d99:	mov    rcx,QWORD PTR [rbp+0x28]
   140011d9d:	call   0x140001000
   140011da2:	add    rsp,0x20
   140011da6:	pop    rbp
   140011da7:	ret    
   140011da8:	mov    rcx,QWORD PTR [rdx+0x60]
   140011daf:	add    rcx,0x8
   140011db3:	jmp    0x140001de0
   140011db8:	mov    rcx,QWORD PTR [rdx+0x60]
   140011dbf:	add    rcx,0x20
   140011dc3:	jmp    0x140004c74
   140011dc8:	mov    rcx,QWORD PTR [rdx+0x40]
   140011dcf:	add    rcx,0x8
   140011dd3:	jmp    0x140001de0
   140011dd8:	mov    rcx,QWORD PTR [rdx+0x40]
   140011ddf:	add    rcx,0x20
   140011de3:	jmp    0x140004c74
   140011de8:	mov    QWORD PTR [rsp+0x10],rdx
   140011ded:	push   rbp
   140011dee:	sub    rsp,0x20
   140011df2:	mov    rbp,rdx
   140011df5:	mov    rcx,QWORD PTR [rbp+0x48]
   140011df9:	call   0x140005fbc
   140011dfe:	xor    edx,edx
   140011e00:	xor    ecx,ecx
   140011e02:	call   0x140009ec8
   140011e07:	nop
   140011e08:	mov    QWORD PTR [rsp+0x10],rdx
   140011e0d:	push   rbp
   140011e0e:	sub    rsp,0x30
   140011e12:	mov    rbp,rdx
   140011e15:	mov    rcx,QWORD PTR [rbp+0x78]
   140011e19:	call   0x140005fbc
   140011e1e:	xor    edx,edx
   140011e20:	xor    ecx,ecx
   140011e22:	call   0x140009ec8
   140011e27:	nop
   140011e28:	rex push rbp
   140011e2a:	sub    rsp,0x20
   140011e2e:	mov    rbp,rdx
   140011e31:	mov    rdx,QWORD PTR [rbp+0x70]
   140011e35:	mov    rcx,QWORD PTR [rbp+0x78]
   140011e39:	call   0x140001000
   140011e3e:	add    rsp,0x20
   140011e42:	pop    rbp
   140011e43:	ret    
   140011e44:	mov    QWORD PTR [rsp+0x10],rdx
   140011e49:	push   rbx
   140011e4a:	push   rbp
   140011e4b:	sub    rsp,0x28
   140011e4f:	mov    rbp,rdx
   140011e52:	mov    rbx,QWORD PTR [rbp+0x50]
   140011e56:	mov    rcx,QWORD PTR [rbx]
   140011e59:	test   rcx,rcx
   140011e5c:	je     0x140011e71
   140011e5e:	call   0x140005fbc
   140011e63:	and    QWORD PTR [rbx],0x0
   140011e67:	and    QWORD PTR [rbx+0x8],0x0
   140011e6c:	and    QWORD PTR [rbx+0x10],0x0
   140011e71:	xor    edx,edx
   140011e73:	xor    ecx,ecx
   140011e75:	call   0x140009ec8
   140011e7a:	nop
   140011e7b:	mov    QWORD PTR [rsp+0x10],rdx
   140011e80:	push   rbx
   140011e81:	push   rbp
   140011e82:	push   rsi
   140011e83:	push   rdi
   140011e84:	sub    rsp,0x38
   140011e88:	mov    rbp,rdx
   140011e8b:	mov    rdi,QWORD PTR [rbp+0x50]
   140011e8f:	mov    rbx,QWORD PTR [rdi]
   140011e92:	test   rbx,rbx
   140011e95:	je     0x140011edd
   140011e97:	mov    rsi,QWORD PTR [rdi+0x8]
   140011e9b:	jmp    0x140011ec2
   140011e9d:	cmp    QWORD PTR [rbx+0x18],0x8
   140011ea2:	jb     0x140011eac
   140011ea4:	mov    rcx,QWORD PTR [rbx]
   140011ea7:	call   0x140005fbc
   140011eac:	mov    QWORD PTR [rbx+0x18],0x7
   140011eb4:	and    QWORD PTR [rbx+0x10],0x0
   140011eb9:	xor    eax,eax
   140011ebb:	mov    WORD PTR [rbx],ax
   140011ebe:	add    rbx,0x20
   140011ec2:	cmp    rbx,rsi
   140011ec5:	jne    0x140011e9d
   140011ec7:	mov    rcx,QWORD PTR [rdi]
   140011eca:	call   0x140005fbc
   140011ecf:	and    QWORD PTR [rdi],0x0
   140011ed3:	and    QWORD PTR [rdi+0x8],0x0
   140011ed8:	and    QWORD PTR [rdi+0x10],0x0
   140011edd:	xor    edx,edx
   140011edf:	xor    ecx,ecx
   140011ee1:	call   0x140009ec8
   140011ee6:	nop
   140011ee7:	mov    QWORD PTR [rsp+0x10],rdx
   140011eec:	push   rbp
   140011eed:	sub    rsp,0x20
   140011ef1:	mov    rbp,rdx
   140011ef4:	mov    rcx,QWORD PTR [rbp+0x48]
   140011ef8:	call   0x140005fbc
   140011efd:	xor    edx,edx
   140011eff:	xor    ecx,ecx
   140011f01:	call   0x140009ec8
   140011f06:	nop
   140011f07:	mov    QWORD PTR [rsp+0x10],rdx
   140011f0c:	push   rbx
   140011f0d:	push   rbp
   140011f0e:	sub    rsp,0x28
   140011f12:	mov    rbp,rdx
   140011f15:	mov    rbx,QWORD PTR [rbp+0x40]
   140011f19:	mov    rcx,QWORD PTR [rbx]
   140011f1c:	test   rcx,rcx
   140011f1f:	je     0x140011f34
   140011f21:	call   0x140005fbc
   140011f26:	and    QWORD PTR [rbx],0x0
   140011f2a:	and    QWORD PTR [rbx+0x8],0x0
   140011f2f:	and    QWORD PTR [rbx+0x10],0x0
   140011f34:	xor    edx,edx
   140011f36:	xor    ecx,ecx
   140011f38:	call   0x140009ec8
   140011f3d:	nop
   140011f3e:	lea    rcx,[rdx+0x50]
   140011f45:	jmp    0x140005860
   140011f4a:	lea    rcx,[rdx+0x48]
   140011f51:	jmp    0x140004504
   140011f56:	int3   
   140011f57:	int3   
   140011f58:	lea    rcx,[rip+0x20d]        # 0x14001216c
   140011f5f:	jmp    0x140006720
   140011f64:	lea    rcx,[rip+0x1f1]        # 0x14001215c
   140011f6b:	jmp    0x140006720
   140011f70:	lea    rcx,[rip+0x1d5]        # 0x14001214c
   140011f77:	jmp    0x140006720
   140011f7c:	lea    rcx,[rip+0x1f9]        # 0x14001217c
   140011f83:	jmp    0x140006720
   140011f88:	mov    rax,rsp
   140011f8b:	push   rdi
   140011f8c:	sub    rsp,0x240
   140011f93:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011f9c:	mov    QWORD PTR [rax+0x8],rbx
   140011fa0:	mov    QWORD PTR [rax+0x10],rsi
   140011fa4:	mov    rax,QWORD PTR [rip+0x90dd]        # 0x14001b088
   140011fab:	xor    rax,rsp
   140011fae:	mov    QWORD PTR [rsp+0x230],rax
   140011fb6:	xor    esi,esi
   140011fb8:	mov    QWORD PTR [rip+0xa6a1],rsi        # 0x14001c660
   140011fbf:	mov    QWORD PTR [rip+0xa6a2],rsi        # 0x14001c668
   140011fc6:	lea    eax,[rsi+0x7]
   140011fc9:	mov    QWORD PTR [rip+0xa698],rax        # 0x14001c668
   140011fd0:	mov    QWORD PTR [rip+0xa689],rsi        # 0x14001c660
   140011fd7:	mov    WORD PTR [rip+0xa672],si        # 0x14001c650
   140011fde:	mov    QWORD PTR [rip+0xa69b],rsi        # 0x14001c680
   140011fe5:	mov    QWORD PTR [rip+0xa69c],rsi        # 0x14001c688
   140011fec:	mov    QWORD PTR [rip+0xa695],rax        # 0x14001c688
   140011ff3:	mov    QWORD PTR [rip+0xa686],rsi        # 0x14001c680
   140011ffa:	mov    WORD PTR [rip+0xa66f],si        # 0x14001c670
   140012001:	mov    r8d,0xff
   140012007:	lea    rdx,[rsp+0x30]
   14001200c:	xor    ecx,ecx
   14001200e:	call   QWORD PTR [rip+0x11ec]        # 0x140013200
   140012014:	test   eax,eax
   140012016:	je     0x1400120aa
   14001201c:	lea    rdx,[rsp+0x30]
   140012021:	lea    rcx,[rip+0xa648]        # 0x14001c670
   140012028:	call   0x140004534
   14001202d:	lea    rcx,[rsp+0x30]
   140012032:	or     rbx,0xffffffffffffffff
   140012036:	mov    rax,rbx
   140012039:	inc    rax
   14001203c:	cmp    WORD PTR [rcx+rax*2],si
   140012040:	jne    0x140012039
   140012042:	lea    rdi,[rsp+0x30]
   140012047:	lea    rdi,[rdi+rax*2]
   14001204b:	test   rax,rax
   14001204e:	je     0x14001205f
   140012050:	cmp    WORD PTR [rdi],0x5c
   140012054:	je     0x14001205f
   140012056:	sub    rdi,0x2
   14001205a:	dec    rax
   14001205d:	jne    0x140012050
   14001205f:	mov    WORD PTR [rdi],si
   140012062:	lea    rdx,[rsp+0x30]
   140012067:	lea    rcx,[rip+0xa5e2]        # 0x14001c650
   14001206e:	call   0x140004534
   140012073:	inc    rbx
   140012076:	cmp    WORD PTR [rdi+rbx*2+0x2],si
   14001207b:	jne    0x140012073
   14001207d:	test   rbx,rbx
   140012080:	je     0x140012099
   140012082:	cmp    WORD PTR [rdi+rbx*2+0x2],0x2e
   140012088:	je     0x14001208f
   14001208a:	dec    rbx
   14001208d:	jne    0x140012082
   14001208f:	test   rbx,rbx
   140012092:	je     0x140012099
   140012094:	mov    WORD PTR [rdi+rbx*2+0x2],si
   140012099:	lea    rdx,[rdi+0x2]
   14001209d:	lea    rcx,[rip+0xa58c]        # 0x14001c630
   1400120a4:	call   0x140004534
   1400120a9:	nop
   1400120aa:	lea    rcx,[rip+0xfb]        # 0x1400121ac
   1400120b1:	call   0x140006720
   1400120b6:	mov    rcx,QWORD PTR [rsp+0x230]
   1400120be:	xor    rcx,rsp
   1400120c1:	call   0x140005fe0
   1400120c6:	lea    r11,[rsp+0x240]
   1400120ce:	mov    rbx,QWORD PTR [r11+0x10]
   1400120d2:	mov    rsi,QWORD PTR [r11+0x18]
   1400120d6:	mov    rsp,r11
   1400120d9:	pop    rdi
   1400120da:	ret    
   1400120db:	int3   
   1400120dc:	lea    rcx,[rip+0x171]        # 0x140012254
   1400120e3:	jmp    0x140006720
   1400120e8:	sub    rsp,0x28
   1400120ec:	lea    rcx,[rip+0xb8ed]        # 0x14001d9e0
   1400120f3:	call   0x14000f2b4
   1400120f8:	lea    rcx,[rip+0x165]        # 0x140012264
   1400120ff:	add    rsp,0x28
   140012103:	jmp    0x140006720
   140012108:	sub    rsp,0x28
   14001210c:	call   QWORD PTR [rip+0x10f6]        # 0x140013208
   140012112:	lea    rcx,[rip+0x4cef]        # 0x140016e08
   140012119:	mov    BYTE PTR [rip+0xb930],0x0        # 0x14001da50
   140012120:	mov    QWORD PTR [rip+0xb919],rcx        # 0x14001da40
   140012127:	lea    rcx,[rip+0x142]        # 0x140012270
   14001212e:	mov    QWORD PTR [rip+0xb913],rax        # 0x14001da48
   140012135:	add    rsp,0x28
   140012139:	jmp    0x140006720
   14001213e:	int3   
   14001213f:	int3   
   140012140:	lea    rcx,[rip+0x15d]        # 0x1400122a4
   140012147:	jmp    0x140006720
   14001214c:	lea    rax,[rip+0x4b85]        # 0x140016cd8
   140012153:	mov    QWORD PTR [rip+0xa776],rax        # 0x14001c8d0
   14001215a:	ret    
   14001215b:	int3   
   14001215c:	lea    rax,[rip+0x4b75]        # 0x140016cd8
   140012163:	mov    QWORD PTR [rip+0xa76e],rax        # 0x14001c8d8
   14001216a:	ret    
   14001216b:	int3   
   14001216c:	lea    rax,[rip+0x4b65]        # 0x140016cd8
   140012173:	mov    QWORD PTR [rip+0xa766],rax        # 0x14001c8e0
   14001217a:	ret    
   14001217b:	int3   
   14001217c:	sub    rsp,0x28
   140012180:	mov    rcx,QWORD PTR [rip+0xbd41]        # 0x14001dec8
   140012187:	test   rcx,rcx
   14001218a:	je     0x140012199
   14001218c:	call   0x140006aa0
   140012191:	and    QWORD PTR [rip+0xbd2f],0x0        # 0x14001dec8
   140012199:	and    DWORD PTR [rip+0xbd30],0x0        # 0x14001ded0
   1400121a0:	and    DWORD PTR [rip+0xbd2d],0x0        # 0x14001ded4
   1400121a7:	add    rsp,0x28
   1400121ab:	ret    
   1400121ac:	rex push rdi
   1400121ae:	sub    rsp,0x30
   1400121b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400121bb:	mov    QWORD PTR [rsp+0x40],rbx
   1400121c0:	cmp    QWORD PTR [rip+0xa4c0],0x8        # 0x14001c688
   1400121c8:	jb     0x1400121d6
   1400121ca:	mov    rcx,QWORD PTR [rip+0xa49f]        # 0x14001c670
   1400121d1:	call   0x140005fbc
   1400121d6:	mov    edi,0x7
   1400121db:	mov    QWORD PTR [rip+0xa4a6],rdi        # 0x14001c688
   1400121e2:	xor    ebx,ebx
   1400121e4:	mov    QWORD PTR [rip+0xa495],rbx        # 0x14001c680
   1400121eb:	mov    WORD PTR [rip+0xa47e],bx        # 0x14001c670
   1400121f2:	cmp    QWORD PTR [rip+0xa46e],0x8        # 0x14001c668
   1400121fa:	jb     0x140012208
   1400121fc:	mov    rcx,QWORD PTR [rip+0xa44d]        # 0x14001c650
   140012203:	call   0x140005fbc
   140012208:	mov    QWORD PTR [rip+0xa459],rdi        # 0x14001c668
   14001220f:	mov    QWORD PTR [rip+0xa44a],rbx        # 0x14001c660
   140012216:	mov    WORD PTR [rip+0xa433],bx        # 0x14001c650
   14001221d:	cmp    QWORD PTR [rip+0xa423],0x8        # 0x14001c648
   140012225:	jb     0x140012233
   140012227:	mov    rcx,QWORD PTR [rip+0xa402]        # 0x14001c630
   14001222e:	call   0x140005fbc
   140012233:	mov    QWORD PTR [rip+0xa40e],rdi        # 0x14001c648
   14001223a:	mov    QWORD PTR [rip+0xa3ff],rbx        # 0x14001c640
   140012241:	mov    WORD PTR [rip+0xa3e8],bx        # 0x14001c630
   140012248:	mov    rbx,QWORD PTR [rsp+0x40]
   14001224d:	add    rsp,0x30
   140012251:	pop    rdi
   140012252:	ret    
   140012253:	int3   
   140012254:	lea    rax,[rip+0x5085]        # 0x1400172e0
   14001225b:	mov    QWORD PTR [rip+0xa42e],rax        # 0x14001c690
   140012262:	ret    
   140012263:	int3   
   140012264:	lea    rcx,[rip+0xb775]        # 0x14001d9e0
   14001226b:	jmp    0x14000f350
   140012270:	sub    rsp,0x28
   140012274:	cmp    BYTE PTR [rip+0xb7d5],0x0        # 0x14001da50
   14001227b:	lea    rax,[rip+0x4b86]        # 0x140016e08
   140012282:	mov    QWORD PTR [rip+0xb7b7],rax        # 0x14001da40
   140012289:	je     0x14001229d
   14001228b:	mov    rcx,QWORD PTR [rip+0xb7b6]        # 0x14001da48
   140012292:	test   rcx,rcx
   140012295:	je     0x14001229d
   140012297:	call   QWORD PTR [rip+0x10eb]        # 0x140013388
   14001229d:	add    rsp,0x28
   1400122a1:	ret    
   1400122a2:	int3   
   1400122a3:	int3   
   1400122a4:	lea    rax,[rip+0x4b85]        # 0x140016e30
   1400122ab:	mov    QWORD PTR [rip+0xa0c6],rax        # 0x14001c378
   1400122b2:	ret    
