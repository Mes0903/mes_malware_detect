
08bf892562a748f1582b00283d8f15ec6f9a2f252c7ba95c2b55fbc60abfbd49.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	xor    eax,eax
   14000100a:	ret    
   14000100b:	int3   
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	int3   
   140001011:	int3   
   140001012:	int3   
   140001013:	int3   
   140001014:	mov    QWORD PTR [rsp+0x8],rbx
   140001019:	push   rdi
   14000101a:	sub    rsp,0x20
   14000101e:	mov    rbx,rdx
   140001021:	mov    rdi,rcx
   140001024:	test   rdx,rdx
   140001027:	jne    0x140001030
   140001029:	mov    eax,0x80004003
   14000102e:	jmp    0x140001054
   140001030:	cmp    QWORD PTR [rcx+0x48],rdx
   140001034:	je     0x140001052
   140001036:	mov    rax,QWORD PTR [rdx]
   140001039:	mov    rcx,rdx
   14000103c:	call   QWORD PTR [rax+0x8]
   14000103f:	mov    rcx,QWORD PTR [rdi+0x48]
   140001043:	mov    QWORD PTR [rdi+0x48],rbx
   140001047:	test   rcx,rcx
   14000104a:	je     0x140001052
   14000104c:	mov    rax,QWORD PTR [rcx]
   14000104f:	call   QWORD PTR [rax+0x10]
   140001052:	xor    eax,eax
   140001054:	mov    rbx,QWORD PTR [rsp+0x30]
   140001059:	add    rsp,0x20
   14000105d:	pop    rdi
   14000105e:	ret    
   14000105f:	int3   
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	mov    rcx,QWORD PTR [rcx+0x40]
   14000106c:	test   rcx,rcx
   14000106f:	jne    0x140001077
   140001071:	mov    eax,0x80004003
   140001076:	ret    
   140001077:	mov    rax,QWORD PTR [rcx]
   14000107a:	rex.W jmp QWORD PTR [rax+0x18]
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	mov    rcx,QWORD PTR [rcx+0x40]
   140001088:	test   rcx,rcx
   14000108b:	jne    0x140001093
   14000108d:	mov    eax,0x80004003
   140001092:	ret    
   140001093:	mov    rax,QWORD PTR [rcx]
   140001096:	rex.W jmp QWORD PTR [rax+0x20]
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    rcx,QWORD PTR [rcx+0x40]
   1400010a4:	test   rcx,rcx
   1400010a7:	jne    0x1400010af
   1400010a9:	mov    eax,0x80004003
   1400010ae:	ret    
   1400010af:	mov    rax,QWORD PTR [rcx]
   1400010b2:	rex.W jmp QWORD PTR [rax+0x28]
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	mov    rcx,QWORD PTR [rcx+0x40]
   1400010c0:	test   rcx,rcx
   1400010c3:	jne    0x1400010cb
   1400010c5:	mov    eax,0x80004003
   1400010ca:	ret    
   1400010cb:	mov    rax,QWORD PTR [rcx]
   1400010ce:	rex.W jmp QWORD PTR [rax+0x30]
   1400010d2:	int3   
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	mov    rax,rsp
   1400010db:	mov    QWORD PTR [rax+0x8],rbx
   1400010df:	mov    QWORD PTR [rax+0x10],rbp
   1400010e3:	mov    QWORD PTR [rax+0x18],rsi
   1400010e7:	mov    QWORD PTR [rax+0x20],rdi
   1400010eb:	push   r12
   1400010ed:	push   r14
   1400010ef:	push   r15
   1400010f1:	sub    rsp,0x20
   1400010f5:	xor    r12d,r12d
   1400010f8:	mov    r14,r8
   1400010fb:	mov    r15,rdx
   1400010fe:	mov    rbp,rcx
   140001101:	test   r8,r8
   140001104:	jne    0x140001110
   140001106:	mov    eax,0x80004003
   14000110b:	jmp    0x1400011be
   140001110:	lea    rdx,[rip+0x13299]        # 0x1400143b0
   140001117:	mov    ecx,0x48
   14000111c:	mov    QWORD PTR [r8],r12
   14000111f:	mov    esi,0x8007000e
   140001124:	call   0x140003978
   140001129:	mov    rdi,rax
   14000112c:	test   rax,rax
   14000112f:	je     0x140001154
   140001131:	xor    edx,edx
   140001133:	lea    rcx,[rax+0x10]
   140001137:	mov    DWORD PTR [rax+0x8],r12d
   14000113b:	lea    r8d,[rdx+0x28]
   14000113f:	call   0x140006bd0
   140001144:	lea    rax,[rip+0xf90d]        # 0x140010a58
   14000114b:	mov    BYTE PTR [rdi+0x38],r12b
   14000114f:	mov    QWORD PTR [rdi],rax
   140001152:	jmp    0x140001157
   140001154:	mov    rdi,r12
   140001157:	test   rdi,rdi
   14000115a:	je     0x1400011bc
   14000115c:	lea    rcx,[rdi+0x10]
   140001160:	xor    edx,edx
   140001162:	mov    QWORD PTR [rdi+0x40],rbp
   140001166:	mov    esi,r12d
   140001169:	call   QWORD PTR [rip+0xcf39]        # 0x14000e0a8
   14000116f:	test   eax,eax
   140001171:	jne    0x14000118b
   140001173:	call   QWORD PTR [rip+0xcf27]        # 0x14000e0a0
   140001179:	movzx  esi,ax
   14000117c:	or     esi,0x80070000
   140001182:	test   eax,eax
   140001184:	cmovle esi,eax
   140001187:	test   esi,esi
   140001189:	js     0x140001191
   14000118b:	mov    BYTE PTR [rdi+0x38],0x1
   14000118f:	test   esi,esi
   140001191:	cmovns esi,r12d
   140001195:	test   esi,esi
   140001197:	jne    0x1400011ad
   140001199:	mov    rax,QWORD PTR [rdi]
   14000119c:	mov    r8,r14
   14000119f:	mov    rdx,r15
   1400011a2:	mov    rcx,rdi
   1400011a5:	call   QWORD PTR [rax]
   1400011a7:	mov    esi,eax
   1400011a9:	test   eax,eax
   1400011ab:	je     0x1400011bc
   1400011ad:	mov    r8,QWORD PTR [rdi]
   1400011b0:	mov    edx,0x1
   1400011b5:	mov    rcx,rdi
   1400011b8:	call   QWORD PTR [r8+0x28]
   1400011bc:	mov    eax,esi
   1400011be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400011c3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400011c8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400011cd:	mov    rdi,QWORD PTR [rsp+0x58]
   1400011d2:	add    rsp,0x20
   1400011d6:	pop    r15
   1400011d8:	pop    r14
   1400011da:	pop    r12
   1400011dc:	ret    
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	int3   
   1400011e1:	int3   
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	test   rcx,rcx
   1400011e7:	je     0x140001268
   1400011ed:	test   r8,r8
   1400011f0:	jne    0x1400011f9
   1400011f2:	mov    eax,0x80004003
   1400011f7:	jmp    0x140001202
   1400011f9:	and    QWORD PTR [r8],0x0
   1400011fd:	mov    eax,0x80040110
   140001202:	ret    
   140001203:	int3   
   140001204:	int3   
   140001205:	int3   
   140001206:	int3   
   140001207:	int3   
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	mov    eax,0x1
   140001211:	lock xadd DWORD PTR [rcx+0x8],eax
   140001216:	inc    eax
   140001218:	ret    
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	rex push rbx
   140001222:	sub    rsp,0x20
   140001226:	or     ebx,0xffffffff
   140001229:	lock xadd DWORD PTR [rcx+0x8],ebx
   14000122e:	dec    ebx
   140001230:	jne    0x140001241
   140001232:	test   rcx,rcx
   140001235:	je     0x140001241
   140001237:	mov    r8,QWORD PTR [rcx]
   14000123a:	lea    edx,[rbx+0x1]
   14000123d:	call   QWORD PTR [r8+0x28]
   140001241:	mov    eax,ebx
   140001243:	add    rsp,0x20
   140001247:	pop    rbx
   140001248:	ret    
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    r9,r8
   140001253:	mov    r8,rdx
   140001256:	lea    rdx,[rip+0xf7cb]        # 0x140010a28
   14000125d:	jmp    0x140001674
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	mov    rax,rsp
   14000126b:	mov    QWORD PTR [rax+0x18],r8
   14000126f:	mov    QWORD PTR [rax+0x10],rdx
   140001273:	mov    QWORD PTR [rax+0x8],rcx
   140001277:	push   rbx
   140001278:	push   rsi
   140001279:	push   rdi
   14000127a:	push   r12
   14000127c:	push   r14
   14000127e:	push   r15
   140001280:	sub    rsp,0x38
   140001284:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000128c:	mov    r15,r8
   14000128f:	mov    r12,rdx
   140001292:	xor    esi,esi
   140001294:	test   r8,r8
   140001297:	jne    0x1400012a3
   140001299:	mov    eax,0x80004003
   14000129e:	jmp    0x1400013b2
   1400012a3:	mov    QWORD PTR [r8],rsi
   1400012a6:	mov    r14d,0x8007000e
   1400012ac:	mov    DWORD PTR [rsp+0x70],r14d
   1400012b1:	mov    QWORD PTR [rsp+0x88],rsi
   1400012b9:	lea    rdx,[rip+0x130f0]        # 0x1400143b0
   1400012c0:	mov    ecx,0x50
   1400012c5:	call   0x140003978
   1400012ca:	mov    rdi,rax
   1400012cd:	mov    QWORD PTR [rsp+0x28],rax
   1400012d2:	test   rax,rax
   1400012d5:	je     0x140001316
   1400012d7:	mov    DWORD PTR [rax+0x10],esi
   1400012da:	xor    edx,edx
   1400012dc:	lea    r8d,[rdx+0x28]
   1400012e0:	lea    rcx,[rax+0x18]
   1400012e4:	call   0x140006bd0
   1400012e9:	mov    BYTE PTR [rdi+0x40],sil
   1400012ed:	mov    QWORD PTR [rdi+0x48],rsi
   1400012f1:	lea    rax,[rip+0xf6f8]        # 0x1400109f0
   1400012f8:	mov    QWORD PTR [rdi],rax
   1400012fb:	lea    rax,[rip+0xf6b6]        # 0x1400109b8
   140001302:	mov    QWORD PTR [rdi+0x8],rax
   140001306:	mov    rcx,QWORD PTR [rip+0x14333]        # 0x140015640
   14000130d:	mov    rax,QWORD PTR [rcx]
   140001310:	call   QWORD PTR [rax+0x8]
   140001313:	nop
   140001314:	jmp    0x140001319
   140001316:	mov    rdi,rsi
   140001319:	mov    QWORD PTR [rsp+0x88],rdi
   140001321:	jmp    0x14000133f
   140001323:	xor    esi,esi
   140001325:	mov    r15,QWORD PTR [rsp+0x80]
   14000132d:	mov    r12,QWORD PTR [rsp+0x78]
   140001332:	mov    r14d,DWORD PTR [rsp+0x70]
   140001337:	mov    rdi,QWORD PTR [rsp+0x88]
   14000133f:	test   rdi,rdi
   140001342:	je     0x1400013af
   140001344:	lock inc DWORD PTR [rdi+0x10]
   140001348:	mov    r14d,esi
   14000134b:	xor    edx,edx
   14000134d:	lea    rcx,[rdi+0x18]
   140001351:	call   QWORD PTR [rip+0xcd51]        # 0x14000e0a8
   140001357:	test   eax,eax
   140001359:	jne    0x140001377
   14000135b:	call   QWORD PTR [rip+0xcd3f]        # 0x14000e0a0
   140001361:	movzx  r14d,ax
   140001365:	or     r14d,0x80070000
   14000136c:	test   eax,eax
   14000136e:	cmovle r14d,eax
   140001372:	test   r14d,r14d
   140001375:	js     0x14000137e
   140001377:	mov    BYTE PTR [rdi+0x40],0x1
   14000137b:	test   r14d,r14d
   14000137e:	cmovns r14d,esi
   140001382:	lock dec DWORD PTR [rdi+0x10]
   140001386:	test   r14d,r14d
   140001389:	jne    0x1400013a0
   14000138b:	mov    rax,QWORD PTR [rdi]
   14000138e:	mov    r8,r15
   140001391:	mov    rdx,r12
   140001394:	mov    rcx,rdi
   140001397:	call   QWORD PTR [rax]
   140001399:	mov    r14d,eax
   14000139c:	test   eax,eax
   14000139e:	je     0x1400013af
   1400013a0:	mov    r8,QWORD PTR [rdi]
   1400013a3:	mov    edx,0x1
   1400013a8:	mov    rcx,rdi
   1400013ab:	call   QWORD PTR [r8+0x20]
   1400013af:	mov    eax,r14d
   1400013b2:	add    rsp,0x38
   1400013b6:	pop    r15
   1400013b8:	pop    r14
   1400013ba:	pop    r12
   1400013bc:	pop    rdi
   1400013bd:	pop    rsi
   1400013be:	pop    rbx
   1400013bf:	ret    
   1400013c0:	int3   
   1400013c1:	int3   
   1400013c2:	int3   
   1400013c3:	int3   
   1400013c4:	int3   
   1400013c5:	int3   
   1400013c6:	int3   
   1400013c7:	int3   
   1400013c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400013cd:	push   rdi
   1400013ce:	sub    rsp,0x20
   1400013d2:	mov    DWORD PTR [rcx+0x8],0xc0000001
   1400013d9:	lea    rax,[rip+0xf6a8]        # 0x140010a88
   1400013e0:	mov    rbx,rcx
   1400013e3:	mov    QWORD PTR [rcx],rax
   1400013e6:	add    rcx,0x10
   1400013ea:	mov    edi,edx
   1400013ec:	cmp    BYTE PTR [rcx+0x28],0x0
   1400013f0:	je     0x1400013fc
   1400013f2:	mov    BYTE PTR [rcx+0x28],0x0
   1400013f6:	call   QWORD PTR [rip+0xccb4]        # 0x14000e0b0
   1400013fc:	test   dil,0x1
   140001400:	je     0x14000140a
   140001402:	mov    rcx,rbx
   140001405:	call   0x140003930
   14000140a:	mov    rax,rbx
   14000140d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001412:	add    rsp,0x20
   140001416:	pop    rdi
   140001417:	ret    
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	mov    QWORD PTR [rsp+0x8],rcx
   140001425:	push   rbx
   140001426:	sub    rsp,0x30
   14000142a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001433:	mov    rbx,rcx
   140001436:	lea    rax,[rip+0xf5b3]        # 0x1400109f0
   14000143d:	mov    QWORD PTR [rcx],rax
   140001440:	lea    rax,[rip+0xf571]        # 0x1400109b8
   140001447:	mov    QWORD PTR [rcx+0x8],rax
   14000144b:	mov    DWORD PTR [rcx+0x10],0xc0000001
   140001452:	mov    rcx,QWORD PTR [rip+0x141e7]        # 0x140015640
   140001459:	mov    rax,QWORD PTR [rcx]
   14000145c:	call   QWORD PTR [rax+0x10]
   14000145f:	nop
   140001460:	mov    rcx,QWORD PTR [rbx+0x48]
   140001464:	test   rcx,rcx
   140001467:	je     0x14000146f
   140001469:	mov    rax,QWORD PTR [rcx]
   14000146c:	call   QWORD PTR [rax+0x10]
   14000146f:	lea    rcx,[rbx+0x18]
   140001473:	cmp    BYTE PTR [rcx+0x28],0x0
   140001477:	je     0x140001483
   140001479:	mov    BYTE PTR [rcx+0x28],0x0
   14000147d:	call   QWORD PTR [rip+0xcc2d]        # 0x14000e0b0
   140001483:	add    rsp,0x30
   140001487:	pop    rbx
   140001488:	ret    
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	mov    eax,0x1
   140001495:	lock xadd DWORD PTR [rcx+0x10],eax
   14000149a:	inc    eax
   14000149c:	ret    
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	rex push rbx
   1400014a6:	sub    rsp,0x20
   1400014aa:	or     ebx,0xffffffff
   1400014ad:	lock xadd DWORD PTR [rcx+0x10],ebx
   1400014b2:	dec    ebx
   1400014b4:	jne    0x1400014c5
   1400014b6:	test   rcx,rcx
   1400014b9:	je     0x1400014c5
   1400014bb:	mov    r8,QWORD PTR [rcx]
   1400014be:	lea    edx,[rbx+0x1]
   1400014c1:	call   QWORD PTR [r8+0x20]
   1400014c5:	mov    eax,ebx
   1400014c7:	add    rsp,0x20
   1400014cb:	pop    rbx
   1400014cc:	ret    
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	int3   
   1400014d1:	int3   
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	mov    r9,r8
   1400014d7:	mov    r8,rdx
   1400014da:	lea    rdx,[rip+0xf62f]        # 0x140010b10
   1400014e1:	jmp    0x140001674
   1400014e6:	int3   
   1400014e7:	int3   
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400014f1:	push   rdi
   1400014f2:	sub    rsp,0x20
   1400014f6:	mov    ebx,edx
   1400014f8:	mov    rdi,rcx
   1400014fb:	call   0x140001420
   140001500:	test   bl,0x1
   140001503:	je     0x14000150d
   140001505:	mov    rcx,rdi
   140001508:	call   0x140003930
   14000150d:	mov    rax,rdi
   140001510:	mov    rbx,QWORD PTR [rsp+0x30]
   140001515:	add    rsp,0x20
   140001519:	pop    rdi
   14000151a:	ret    
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	int3   
   140001521:	int3   
   140001522:	int3   
   140001523:	int3   
   140001524:	rex push rbx
   140001526:	sub    rsp,0x20
   14000152a:	mov    rbx,rcx
   14000152d:	mov    rcx,QWORD PTR [rcx+0x48]
   140001531:	test   rcx,rcx
   140001534:	je     0x14000153c
   140001536:	mov    rax,QWORD PTR [rcx]
   140001539:	call   QWORD PTR [rax+0x10]
   14000153c:	lea    rcx,[rbx+0x18]
   140001540:	cmp    BYTE PTR [rcx+0x28],0x0
   140001544:	je     0x140001550
   140001546:	mov    BYTE PTR [rcx+0x28],0x0
   14000154a:	call   QWORD PTR [rip+0xcb60]        # 0x14000e0b0
   140001550:	add    rsp,0x20
   140001554:	pop    rbx
   140001555:	ret    
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	sub    rcx,0x8
   140001560:	jmp    0x1400014d4
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	sub    rcx,0x8
   140001570:	jmp    0x1400014a4
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	sub    rcx,0x8
   140001580:	jmp    0x140001490
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	sub    rsp,0x28
   140001590:	mov    r11,rcx
   140001593:	xor    ecx,ecx
   140001595:	mov    rax,r8
   140001598:	mov    r10,rdx
   14000159b:	mov    r8d,0x80004003
   1400015a1:	test   r9,r9
   1400015a4:	je     0x1400015e1
   1400015a6:	mov    QWORD PTR [r9],rcx
   1400015a9:	test   rdx,rdx
   1400015ac:	je     0x1400015d1
   1400015ae:	cmp    DWORD PTR [rax],ecx
   1400015b0:	jne    0x1400015c9
   1400015b2:	cmp    DWORD PTR [rax+0x4],ecx
   1400015b5:	jne    0x1400015c9
   1400015b7:	cmp    DWORD PTR [rax+0x8],0xc0
   1400015be:	jne    0x1400015c9
   1400015c0:	cmp    DWORD PTR [rax+0xc],0x46000000
   1400015c7:	je     0x1400015d1
   1400015c9:	mov    r8d,0x80040110
   1400015cf:	jmp    0x1400015e1
   1400015d1:	mov    r8,r9
   1400015d4:	mov    rdx,rax
   1400015d7:	mov    rcx,r10
   1400015da:	call   QWORD PTR [r11+0x40]
   1400015de:	mov    r8d,eax
   1400015e1:	mov    eax,r8d
   1400015e4:	add    rsp,0x28
   1400015e8:	ret    
   1400015e9:	int3   
   1400015ea:	int3   
   1400015eb:	int3   
   1400015ec:	int3   
   1400015ed:	int3   
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	sub    rsp,0x28
   1400015f4:	mov    rcx,QWORD PTR [rip+0x14045]        # 0x140015640
   1400015fb:	mov    rax,QWORD PTR [rcx]
   1400015fe:	test   edx,edx
   140001600:	je     0x140001607
   140001602:	call   QWORD PTR [rax+0x8]
   140001605:	jmp    0x14000160a
   140001607:	call   QWORD PTR [rax+0x10]
   14000160a:	xor    eax,eax
   14000160c:	add    rsp,0x28
   140001610:	ret    
   140001611:	int3   
   140001612:	int3   
   140001613:	int3   
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	mov    QWORD PTR [rsp+0x8],rbx
   14000161d:	push   rdi
   14000161e:	sub    rsp,0x20
   140001622:	lea    rax,[rip+0xf45f]        # 0x140010a88
   140001629:	mov    rbx,rcx
   14000162c:	mov    edi,edx
   14000162e:	mov    QWORD PTR [rcx],rax
   140001631:	add    rcx,0x10
   140001635:	cmp    BYTE PTR [rcx+0x28],0x0
   140001639:	je     0x140001645
   14000163b:	mov    BYTE PTR [rcx+0x28],0x0
   14000163f:	call   QWORD PTR [rip+0xca6b]        # 0x14000e0b0
   140001645:	test   dil,0x1
   140001649:	je     0x140001653
   14000164b:	mov    rcx,rbx
   14000164e:	call   0x140003930
   140001653:	mov    rax,rbx
   140001656:	mov    rbx,QWORD PTR [rsp+0x30]
   14000165b:	add    rsp,0x20
   14000165f:	pop    rdi
   140001660:	ret    
   140001661:	int3   
   140001662:	int3   
   140001663:	int3   
   140001664:	int3   
   140001665:	int3   
   140001666:	int3   
   140001667:	int3   
   140001668:	ret    0x0
   14000166b:	int3   
   14000166c:	int3   
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	int3   
   140001671:	int3   
   140001672:	int3   
   140001673:	int3   
   140001674:	mov    QWORD PTR [rsp+0x8],rbx
   140001679:	mov    QWORD PTR [rsp+0x10],rbp
   14000167e:	mov    QWORD PTR [rsp+0x18],rsi
   140001683:	push   rdi
   140001684:	push   r14
   140001686:	push   r15
   140001688:	sub    rsp,0x20
   14000168c:	xor    edi,edi
   14000168e:	mov    r14,r9
   140001691:	mov    rsi,r8
   140001694:	mov    rbx,rdx
   140001697:	mov    r15,rcx
   14000169a:	test   rcx,rcx
   14000169d:	je     0x14000176d
   1400016a3:	test   rdx,rdx
   1400016a6:	je     0x14000176d
   1400016ac:	test   r9,r9
   1400016af:	jne    0x1400016bb
   1400016b1:	mov    edi,0x80004003
   1400016b6:	jmp    0x140001772
   1400016bb:	cmp    DWORD PTR [r8],edi
   1400016be:	jne    0x1400016f2
   1400016c0:	cmp    DWORD PTR [r8+0x4],edi
   1400016c4:	jne    0x1400016f2
   1400016c6:	cmp    DWORD PTR [r8+0x8],0xc0
   1400016ce:	jne    0x1400016f2
   1400016d0:	cmp    DWORD PTR [r8+0xc],0x46000000
   1400016d8:	jne    0x1400016f2
   1400016da:	mov    rbx,QWORD PTR [rdx+0x8]
   1400016de:	add    rbx,rcx
   1400016e1:	mov    rax,QWORD PTR [rbx]
   1400016e4:	mov    rcx,rbx
   1400016e7:	call   QWORD PTR [rax+0x8]
   1400016ea:	mov    QWORD PTR [r14],rbx
   1400016ed:	jmp    0x140001772
   1400016f2:	cmp    QWORD PTR [rdx+0x10],rdi
   1400016f6:	je     0x140001755
   1400016f8:	mov    rcx,QWORD PTR [rbx]
   1400016fb:	mov    ebp,edi
   1400016fd:	test   rcx,rcx
   140001700:	sete   bpl
   140001704:	test   ebp,ebp
   140001706:	jne    0x140001726
   140001708:	mov    eax,DWORD PTR [rsi]
   14000170a:	cmp    DWORD PTR [rcx],eax
   14000170c:	jne    0x14000174b
   14000170e:	mov    eax,DWORD PTR [rsi+0x4]
   140001711:	cmp    DWORD PTR [rcx+0x4],eax
   140001714:	jne    0x14000174b
   140001716:	mov    eax,DWORD PTR [rsi+0x8]
   140001719:	cmp    DWORD PTR [rcx+0x8],eax
   14000171c:	jne    0x14000174b
   14000171e:	mov    eax,DWORD PTR [rsi+0xc]
   140001721:	cmp    DWORD PTR [rcx+0xc],eax
   140001724:	jne    0x14000174b
   140001726:	mov    rax,QWORD PTR [rbx+0x10]
   14000172a:	cmp    rax,0x1
   14000172e:	je     0x140001761
   140001730:	mov    r9,QWORD PTR [rbx+0x8]
   140001734:	mov    r8,r14
   140001737:	mov    rdx,rsi
   14000173a:	mov    rcx,r15
   14000173d:	call   rax
   14000173f:	test   eax,eax
   140001741:	je     0x140001772
   140001743:	test   ebp,ebp
   140001745:	jne    0x14000174b
   140001747:	test   eax,eax
   140001749:	js     0x14000175a
   14000174b:	add    rbx,0x18
   14000174f:	cmp    QWORD PTR [rbx+0x10],rdi
   140001753:	jne    0x1400016f8
   140001755:	mov    eax,0x80004002
   14000175a:	mov    QWORD PTR [r14],rdi
   14000175d:	mov    edi,eax
   14000175f:	jmp    0x140001772
   140001761:	mov    rbx,QWORD PTR [rbx+0x8]
   140001765:	add    rbx,r15
   140001768:	jmp    0x1400016e1
   14000176d:	mov    edi,0x80070057
   140001772:	mov    rbx,QWORD PTR [rsp+0x40]
   140001777:	mov    rbp,QWORD PTR [rsp+0x48]
   14000177c:	mov    rsi,QWORD PTR [rsp+0x50]
   140001781:	mov    eax,edi
   140001783:	add    rsp,0x20
   140001787:	pop    r15
   140001789:	pop    r14
   14000178b:	pop    rdi
   14000178c:	ret    
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	int3   
   140001791:	int3   
   140001792:	int3   
   140001793:	int3   
   140001794:	mov    QWORD PTR [rsp+0x8],rbx
   140001799:	push   rdi
   14000179a:	sub    rsp,0x20
   14000179e:	mov    ebx,edx
   1400017a0:	mov    rdi,rcx
   1400017a3:	call   0x140001970
   1400017a8:	test   bl,0x1
   1400017ab:	je     0x1400017b5
   1400017ad:	mov    rcx,rdi
   1400017b0:	call   0x140003930
   1400017b5:	mov    rax,rdi
   1400017b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017bd:	add    rsp,0x20
   1400017c1:	pop    rdi
   1400017c2:	ret    
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	mov    BYTE PTR [rsp+0x18],r8b
   1400017d1:	mov    QWORD PTR [rsp+0x20],r9
   1400017d6:	push   rbp
   1400017d7:	push   rbx
   1400017d8:	push   rsi
   1400017d9:	push   rdi
   1400017da:	push   r14
   1400017dc:	lea    rbp,[rsp-0x37]
   1400017e1:	sub    rsp,0x90
   1400017e8:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   1400017f0:	mov    rax,QWORD PTR [rip+0x118d9]        # 0x1400130d0
   1400017f7:	xor    rax,rsp
   1400017fa:	mov    QWORD PTR [rbp+0x27],rax
   1400017fe:	mov    rbx,rdx
   140001801:	mov    rdi,rcx
   140001804:	mov    QWORD PTR [rbp-0x39],rcx
   140001808:	lea    rax,[rip+0xf4d1]        # 0x140010ce0
   14000180f:	mov    QWORD PTR [rcx],rax
   140001812:	mov    BYTE PTR [rcx+0x4c],0x0
   140001816:	mov    DWORD PTR [rcx+0x50],0x7
   14000181d:	lea    rsi,[rip+0x12b24]        # 0x140014348
   140001824:	mov    rcx,rsi
   140001827:	mov    rax,QWORD PTR [rip+0x12b1a]        # 0x140014348
   14000182e:	call   QWORD PTR [rax+0x18]
   140001831:	add    rax,0x18
   140001835:	mov    QWORD PTR [rdi+0x58],rax
   140001839:	mov    rcx,rsi
   14000183c:	mov    rax,QWORD PTR [rip+0x12b05]        # 0x140014348
   140001843:	call   QWORD PTR [rax+0x18]
   140001846:	add    rax,0x18
   14000184a:	mov    QWORD PTR [rdi+0x60],rax
   14000184e:	mov    rcx,rsi
   140001851:	mov    rax,QWORD PTR [rip+0x12af0]        # 0x140014348
   140001858:	call   QWORD PTR [rax+0x18]
   14000185b:	add    rax,0x18
   14000185f:	mov    QWORD PTR [rdi+0x68],rax
   140001863:	mov    rcx,rsi
   140001866:	mov    rax,QWORD PTR [rip+0x12adb]        # 0x140014348
   14000186d:	call   QWORD PTR [rax+0x18]
   140001870:	add    rax,0x18
   140001874:	mov    QWORD PTR [rdi+0x70],rax
   140001878:	mov    cl,BYTE PTR [rbp+0x77]
   14000187b:	test   cl,cl
   14000187d:	je     0x140001944
   140001883:	call   QWORD PTR [rip+0xc777]        # 0x14000e000
   140001889:	cmp    eax,0x44
   14000188c:	ja     0x140001944
   140001892:	mov    r8b,BYTE PTR [rbp+0x77]
   140001896:	mov    rdx,rbx
   140001899:	lea    rcx,[rbp-0x29]
   14000189d:	call   QWORD PTR [rip+0xc765]        # 0x14000e008
   1400018a3:	test   eax,eax
   1400018a5:	jne    0x1400018ad
   1400018a7:	call   0x140003750
   1400018ac:	int3   
   1400018ad:	lea    r14,[rbp+0x7f]
   1400018b1:	xor    esi,esi
   1400018b3:	cmp    BYTE PTR [rbp+0x77],sil
   1400018b7:	jbe    0x1400018dc
   1400018b9:	add    r14,0xfffffffffffffff8
   1400018bd:	lea    r14,[r14+0x8]
   1400018c1:	mov    ebx,DWORD PTR [r14]
   1400018c4:	mov    edx,esi
   1400018c6:	lea    rcx,[rbp-0x29]
   1400018ca:	call   QWORD PTR [rip+0xc740]        # 0x14000e010
   1400018d0:	mov    DWORD PTR [rax],ebx
   1400018d2:	inc    esi
   1400018d4:	movzx  eax,BYTE PTR [rbp+0x77]
   1400018d8:	cmp    esi,eax
   1400018da:	jb     0x1400018bd
   1400018dc:	lea    rcx,[rbp-0x29]
   1400018e0:	call   QWORD PTR [rip+0xc742]        # 0x14000e028
   1400018e6:	test   eax,eax
   1400018e8:	jne    0x1400018f5
   1400018ea:	mov    ecx,0x80070057
   1400018ef:	call   0x140003774
   1400018f4:	int3   
   1400018f5:	lea    rcx,[rbp-0x29]
   1400018f9:	call   QWORD PTR [rip+0xc721]        # 0x14000e020
   1400018ff:	cmp    eax,0x44
   140001902:	jbe    0x14000190f
   140001904:	mov    ecx,0x80070057
   140001909:	call   0x140003774
   14000190e:	int3   
   14000190f:	mov    BYTE PTR [rdi+0x4c],0x1
   140001913:	lea    rdx,[rdi+0x8]
   140001917:	lea    r8,[rbp-0x29]
   14000191b:	mov    ecx,eax
   14000191d:	call   QWORD PTR [rip+0xc6f5]        # 0x14000e018
   140001923:	test   eax,eax
   140001925:	jne    0x140001938
   140001927:	call   0x14000372c
   14000192c:	mov    BYTE PTR [rdi+0x4c],0x0
   140001930:	mov    ecx,eax
   140001932:	call   0x140003774
   140001937:	int3   
   140001938:	mov    DWORD PTR [rdi+0x50],0x8
   14000193f:	mov    rax,rdi
   140001942:	jmp    0x14000194f
   140001944:	mov    ecx,0x80070057
   140001949:	call   0x140003774
   14000194e:	nop
   14000194f:	mov    rcx,QWORD PTR [rbp+0x27]
   140001953:	xor    rcx,rsp
   140001956:	call   0x140003950
   14000195b:	add    rsp,0x90
   140001962:	pop    r14
   140001964:	pop    rdi
   140001965:	pop    rsi
   140001966:	pop    rbx
   140001967:	pop    rbp
   140001968:	ret    
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	mov    QWORD PTR [rsp+0x8],rbx
   140001975:	push   rdi
   140001976:	sub    rsp,0x20
   14000197a:	mov    rdx,QWORD PTR [rcx+0x70]
   14000197e:	lea    rax,[rip+0xf35b]        # 0x140010ce0
   140001985:	mov    rbx,rcx
   140001988:	sub    rdx,0x18
   14000198c:	or     edi,0xffffffff
   14000198f:	mov    QWORD PTR [rcx],rax
   140001992:	mov    eax,edi
   140001994:	lock xadd DWORD PTR [rdx+0x10],eax
   140001999:	add    eax,edi
   14000199b:	test   eax,eax
   14000199d:	jg     0x1400019a8
   14000199f:	mov    rcx,QWORD PTR [rdx]
   1400019a2:	mov    rax,QWORD PTR [rcx]
   1400019a5:	call   QWORD PTR [rax+0x8]
   1400019a8:	mov    rdx,QWORD PTR [rbx+0x68]
   1400019ac:	mov    eax,edi
   1400019ae:	sub    rdx,0x18
   1400019b2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400019b7:	add    eax,edi
   1400019b9:	test   eax,eax
   1400019bb:	jg     0x1400019c6
   1400019bd:	mov    rcx,QWORD PTR [rdx]
   1400019c0:	mov    rax,QWORD PTR [rcx]
   1400019c3:	call   QWORD PTR [rax+0x8]
   1400019c6:	mov    rdx,QWORD PTR [rbx+0x60]
   1400019ca:	mov    eax,edi
   1400019cc:	sub    rdx,0x18
   1400019d0:	lock xadd DWORD PTR [rdx+0x10],eax
   1400019d5:	add    eax,edi
   1400019d7:	test   eax,eax
   1400019d9:	jg     0x1400019e4
   1400019db:	mov    rcx,QWORD PTR [rdx]
   1400019de:	mov    rax,QWORD PTR [rcx]
   1400019e1:	call   QWORD PTR [rax+0x8]
   1400019e4:	mov    rdx,QWORD PTR [rbx+0x58]
   1400019e8:	mov    eax,edi
   1400019ea:	sub    rdx,0x18
   1400019ee:	lock xadd DWORD PTR [rdx+0x10],eax
   1400019f3:	add    eax,edi
   1400019f5:	test   eax,eax
   1400019f7:	jg     0x140001a02
   1400019f9:	mov    rcx,QWORD PTR [rdx]
   1400019fc:	mov    rax,QWORD PTR [rcx]
   1400019ff:	call   QWORD PTR [rax+0x8]
   140001a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a07:	add    rsp,0x20
   140001a0b:	pop    rdi
   140001a0c:	ret    
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	int3   
   140001a11:	int3   
   140001a12:	int3   
   140001a13:	int3   
   140001a14:	rex push rbx
   140001a16:	sub    rsp,0x30
   140001a1a:	and    DWORD PTR [rsp+0x20],0x0
   140001a1f:	mov    r9d,0xa
   140001a25:	lea    rdx,[rip+0xf2ac]        # 0x140010cd8
   140001a2c:	lea    r8d,[r9-0x9]
   140001a30:	mov    rbx,rcx
   140001a33:	call   0x1400017cc
   140001a38:	mov    rax,rbx
   140001a3b:	add    rsp,0x30
   140001a3f:	pop    rbx
   140001a40:	ret    
   140001a41:	int3   
   140001a42:	int3   
   140001a43:	int3   
   140001a44:	int3   
   140001a45:	int3   
   140001a46:	int3   
   140001a47:	int3   
   140001a48:	rex push rbx
   140001a4a:	sub    rsp,0x30
   140001a4e:	and    DWORD PTR [rsp+0x20],0x0
   140001a53:	mov    r9d,0xb
   140001a59:	lea    rdx,[rip+0xf278]        # 0x140010cd8
   140001a60:	lea    r8d,[r9-0xa]
   140001a64:	mov    rbx,rcx
   140001a67:	call   0x1400017cc
   140001a6c:	mov    rax,rbx
   140001a6f:	add    rsp,0x30
   140001a73:	pop    rbx
   140001a74:	ret    
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	mov    QWORD PTR [rsp+0x8],rbx
   140001a81:	push   rdi
   140001a82:	sub    rsp,0x20
   140001a86:	lea    rax,[rip+0xf21b]        # 0x140010ca8
   140001a8d:	mov    rdi,rcx
   140001a90:	mov    ebx,edx
   140001a92:	mov    QWORD PTR [rcx],rax
   140001a95:	mov    rcx,QWORD PTR [rcx+0x8]
   140001a99:	call   0x140003aa4
   140001a9e:	test   bl,0x1
   140001aa1:	je     0x140001aab
   140001aa3:	mov    rcx,rdi
   140001aa6:	call   0x140003930
   140001aab:	mov    rax,rdi
   140001aae:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ab3:	add    rsp,0x20
   140001ab7:	pop    rdi
   140001ab8:	ret    
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    rax,rsp
   140001ac3:	mov    QWORD PTR [rax+0x8],rbx
   140001ac7:	mov    QWORD PTR [rax+0x10],rbp
   140001acb:	mov    QWORD PTR [rax+0x18],rsi
   140001acf:	mov    QWORD PTR [rax+0x20],rdi
   140001ad3:	push   r14
   140001ad5:	sub    rsp,0x30
   140001ad9:	cmp    QWORD PTR [rcx+0x8],0x0
   140001ade:	mov    rdi,rcx
   140001ae1:	jne    0x140001ba9
   140001ae7:	cmp    BYTE PTR [rcx+0x10],0x0
   140001aeb:	jne    0x140001ba9
   140001af1:	mov    rax,QWORD PTR [rcx]
   140001af4:	mov    esi,0x8
   140001af9:	call   QWORD PTR [rax+0x8]
   140001afc:	xor    ebx,ebx
   140001afe:	mov    ebp,eax
   140001b00:	test   eax,eax
   140001b02:	je     0x140001b26
   140001b04:	mov    r8,QWORD PTR [rdi]
   140001b07:	mov    edx,ebx
   140001b09:	mov    rcx,rdi
   140001b0c:	call   QWORD PTR [r8+0x20]
   140001b10:	test   rax,rax
   140001b13:	je     0x140001b20
   140001b15:	mov    rdx,QWORD PTR [rax]
   140001b18:	mov    rcx,rax
   140001b1b:	call   QWORD PTR [rdx+0x10]
   140001b1e:	add    esi,eax
   140001b20:	inc    ebx
   140001b22:	cmp    ebx,ebp
   140001b24:	jb     0x140001b04
   140001b26:	mov    ecx,esi
   140001b28:	call   0x1400039e8
   140001b2d:	mov    QWORD PTR [rdi+0x8],rax
   140001b31:	test   rax,rax
   140001b34:	je     0x140001bc8
   140001b3a:	mov    r8d,DWORD PTR [rdi+0x14]
   140001b3e:	mov    edx,esi
   140001b40:	mov    rcx,rax
   140001b43:	call   QWORD PTR [rip+0xc4e7]        # 0x14000e030
   140001b49:	test   eax,eax
   140001b4b:	je     0x140001bd3
   140001b51:	mov    rax,QWORD PTR [rdi]
   140001b54:	mov    rcx,rdi
   140001b57:	call   QWORD PTR [rax+0x28]
   140001b5a:	xor    esi,esi
   140001b5c:	test   ebp,ebp
   140001b5e:	je     0x140001ba9
   140001b60:	mov    rax,QWORD PTR [rdi]
   140001b63:	mov    edx,esi
   140001b65:	mov    rcx,rdi
   140001b68:	call   QWORD PTR [rax+0x20]
   140001b6b:	mov    r14,rax
   140001b6e:	test   rax,rax
   140001b71:	je     0x140001bf0
   140001b73:	mov    rdx,QWORD PTR [rax]
   140001b76:	mov    rcx,rax
   140001b79:	call   QWORD PTR [rdx+0x10]
   140001b7c:	mov    rdx,QWORD PTR [r14]
   140001b7f:	mov    rcx,r14
   140001b82:	mov    ebx,eax
   140001b84:	call   QWORD PTR [rdx+0x8]
   140001b87:	mov    edx,DWORD PTR [rdi+0x14]
   140001b8a:	mov    rcx,QWORD PTR [rdi+0x8]
   140001b8e:	or     r8d,0xffffffff
   140001b92:	mov    r9,rax
   140001b95:	mov    DWORD PTR [rsp+0x20],ebx
   140001b99:	call   QWORD PTR [rip+0xc499]        # 0x14000e038
   140001b9f:	test   eax,eax
   140001ba1:	je     0x140001bf0
   140001ba3:	inc    esi
   140001ba5:	cmp    esi,ebp
   140001ba7:	jb     0x140001b60
   140001ba9:	mov    rax,QWORD PTR [rdi+0x8]
   140001bad:	mov    rbx,QWORD PTR [rsp+0x40]
   140001bb2:	mov    rbp,QWORD PTR [rsp+0x48]
   140001bb7:	mov    rdi,QWORD PTR [rsp+0x58]
   140001bbc:	mov    rsi,QWORD PTR [rsp+0x50]
   140001bc1:	add    rsp,0x30
   140001bc5:	pop    r14
   140001bc7:	ret    
   140001bc8:	mov    ecx,0x8007000e
   140001bcd:	call   0x140003774
   140001bd2:	int3   
   140001bd3:	call   0x14000372c
   140001bd8:	mov    rcx,QWORD PTR [rdi+0x8]
   140001bdc:	mov    ebx,eax
   140001bde:	call   0x140003aa4
   140001be3:	and    QWORD PTR [rdi+0x8],0x0
   140001be8:	mov    ecx,ebx
   140001bea:	call   0x140003774
   140001bef:	int3   
   140001bf0:	call   0x14000372c
   140001bf5:	mov    rcx,QWORD PTR [rdi+0x8]
   140001bf9:	mov    ebx,eax
   140001bfb:	call   0x140003aa4
   140001c00:	and    QWORD PTR [rdi+0x8],0x0
   140001c05:	mov    ecx,ebx
   140001c07:	call   0x140003774
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	int3   
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	mov    QWORD PTR [rsp+0x8],rbx
   140001c19:	push   rdi
   140001c1a:	sub    rsp,0x20
   140001c1e:	lea    rax,[rip+0xf04b]        # 0x140010c70
   140001c25:	mov    rbx,rcx
   140001c28:	mov    edi,edx
   140001c2a:	mov    QWORD PTR [rcx],rax
   140001c2d:	mov    rcx,QWORD PTR [rcx+0x88]
   140001c34:	test   rcx,rcx
   140001c37:	je     0x140001c46
   140001c39:	call   0x140003aa4
   140001c3e:	and    QWORD PTR [rbx+0x88],0x0
   140001c46:	lea    rcx,[rbx+0x8]
   140001c4a:	call   0x140001970
   140001c4f:	test   dil,0x1
   140001c53:	je     0x140001c5d
   140001c55:	mov    rcx,rbx
   140001c58:	call   0x140003930
   140001c5d:	mov    rax,rbx
   140001c60:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c65:	add    rsp,0x20
   140001c69:	pop    rdi
   140001c6a:	ret    
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	int3   
   140001c71:	int3   
   140001c72:	int3   
   140001c73:	int3   
   140001c74:	xor    al,al
   140001c76:	ret    
   140001c77:	int3   
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	movups xmm0,XMMWORD PTR [rip+0xed11]        # 0x140010998
   140001c87:	mov    rax,rdx
   140001c8a:	movdqu XMMWORD PTR [rdx],xmm0
   140001c8e:	ret    
   140001c8f:	int3   
   140001c90:	int3   
   140001c91:	int3   
   140001c92:	int3   
   140001c93:	int3   
   140001c94:	int3   
   140001c95:	int3   
   140001c96:	int3   
   140001c97:	int3   
   140001c98:	mov    QWORD PTR [rsp+0x8],rbx
   140001c9d:	push   rdi
   140001c9e:	sub    rsp,0x20
   140001ca2:	mov    ebx,edx
   140001ca4:	mov    rdi,rcx
   140001ca7:	call   0x140001cd0
   140001cac:	test   bl,0x1
   140001caf:	je     0x140001cb9
   140001cb1:	mov    rcx,rdi
   140001cb4:	call   0x140003930
   140001cb9:	mov    rax,rdi
   140001cbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cc1:	add    rsp,0x20
   140001cc5:	pop    rdi
   140001cc6:	ret    
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	rex push rbx
   140001cd2:	sub    rsp,0x20
   140001cd6:	lea    rax,[rip+0xef63]        # 0x140010c40
   140001cdd:	mov    rbx,rcx
   140001ce0:	mov    QWORD PTR [rcx],rax
   140001ce3:	mov    rcx,QWORD PTR [rcx+0x18]
   140001ce7:	test   rcx,rcx
   140001cea:	je     0x140001d03
   140001cec:	mov    rdx,QWORD PTR [rbx+0x20]
   140001cf0:	call   0x14000351c
   140001cf5:	mov    rcx,QWORD PTR [rbx+0x18]
   140001cf9:	call   0x140003aa4
   140001cfe:	and    QWORD PTR [rbx+0x18],0x0
   140001d03:	and    QWORD PTR [rbx+0x20],0x0
   140001d08:	and    QWORD PTR [rbx+0x28],0x0
   140001d0d:	mov    rcx,QWORD PTR [rbx+0x8]
   140001d11:	call   0x140003aa4
   140001d16:	and    QWORD PTR [rbx+0x8],0x0
   140001d1b:	mov    rcx,QWORD PTR [rbx+0x18]
   140001d1f:	test   rcx,rcx
   140001d22:	je     0x140001d36
   140001d24:	mov    rdx,QWORD PTR [rbx+0x20]
   140001d28:	call   0x14000351c
   140001d2d:	mov    rcx,QWORD PTR [rbx+0x18]
   140001d31:	call   0x140003aa4
   140001d36:	mov    rcx,QWORD PTR [rbx+0x8]
   140001d3a:	lea    rax,[rip+0xef67]        # 0x140010ca8
   140001d41:	mov    QWORD PTR [rbx],rax
   140001d44:	add    rsp,0x20
   140001d48:	pop    rbx
   140001d49:	jmp    0x140003aa4
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	int3   
   140001d51:	int3   
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	mov    QWORD PTR [rsp+0x8],rcx
   140001d59:	push   rsi
   140001d5a:	push   r14
   140001d5c:	push   r15
   140001d5e:	sub    rsp,0x40
   140001d62:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001d6b:	mov    QWORD PTR [rsp+0x70],rbx
   140001d70:	mov    rbx,rdx
   140001d73:	mov    rsi,rcx
   140001d76:	cmp    BYTE PTR [rdx+0x4c],0x0
   140001d7a:	je     0x140001e56
   140001d80:	lea    rcx,[rdx+0x8]
   140001d84:	call   QWORD PTR [rip+0xc29e]        # 0x14000e028
   140001d8a:	test   eax,eax
   140001d8c:	je     0x140001e56
   140001d92:	cmp    BYTE PTR [rsi+0x10],0x0
   140001d96:	je     0x140001da5
   140001d98:	mov    rax,QWORD PTR [rsi]
   140001d9b:	mov    rcx,rsi
   140001d9e:	call   QWORD PTR [rax+0x10]
   140001da1:	mov    BYTE PTR [rsi+0x10],0x0
   140001da5:	and    QWORD PTR [rsp+0x68],0x0
   140001dab:	mov    ecx,0x98
   140001db0:	call   0x140003c1c
   140001db5:	mov    QWORD PTR [rsp+0x38],rax
   140001dba:	test   rax,rax
   140001dbd:	je     0x140001dcf
   140001dbf:	mov    rdx,rbx
   140001dc2:	mov    rcx,rax
   140001dc5:	call   0x14000227c
   140001dca:	mov    rbx,rax
   140001dcd:	jmp    0x140001dd1
   140001dcf:	xor    ebx,ebx
   140001dd1:	mov    QWORD PTR [rsp+0x68],rbx
   140001dd6:	jmp    0x140001de2
   140001dd8:	mov    rsi,QWORD PTR [rsp+0x60]
   140001ddd:	mov    rbx,QWORD PTR [rsp+0x68]
   140001de2:	test   rbx,rbx
   140001de5:	jne    0x140001df2
   140001de7:	mov    ecx,0x8007000e
   140001dec:	call   0x140003774
   140001df1:	int3   
   140001df2:	mov    r15,QWORD PTR [rsi+0x20]
   140001df6:	cmp    r15,QWORD PTR [rsi+0x28]
   140001dfa:	jb     0x140001e18
   140001dfc:	lea    rdx,[r15+0x1]
   140001e00:	lea    rcx,[rsi+0x18]
   140001e04:	call   0x14000341c
   140001e09:	test   al,al
   140001e0b:	jne    0x140001e18
   140001e0d:	mov    ecx,0x8007000e
   140001e12:	call   0x140003774
   140001e17:	int3   
   140001e18:	mov    rax,QWORD PTR [rsi+0x18]
   140001e1c:	lea    rcx,[rax+r15*8]
   140001e20:	test   rcx,rcx
   140001e23:	je     0x140001e2d
   140001e25:	mov    rax,rbx
   140001e28:	xor    ebx,ebx
   140001e2a:	mov    QWORD PTR [rcx],rax
   140001e2d:	inc    QWORD PTR [rsi+0x20]
   140001e31:	mov    rcx,QWORD PTR [rsi+0x8]
   140001e35:	call   0x140003aa4
   140001e3a:	and    QWORD PTR [rsi+0x8],0x0
   140001e3f:	test   rbx,rbx
   140001e42:	je     0x140001e52
   140001e44:	mov    r8,QWORD PTR [rbx]
   140001e47:	mov    edx,0x1
   140001e4c:	mov    rcx,rbx
   140001e4f:	call   QWORD PTR [r8]
   140001e52:	mov    al,0x1
   140001e54:	jmp    0x140001e58
   140001e56:	xor    al,al
   140001e58:	mov    rbx,QWORD PTR [rsp+0x70]
   140001e5d:	add    rsp,0x40
   140001e61:	pop    r15
   140001e63:	pop    r14
   140001e65:	pop    rsi
   140001e66:	ret    
   140001e67:	int3   
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	rex push rbx
   140001e72:	sub    rsp,0x20
   140001e76:	mov    rbx,rcx
   140001e79:	mov    rcx,QWORD PTR [rcx+0x18]
   140001e7d:	test   rcx,rcx
   140001e80:	je     0x140001e99
   140001e82:	mov    rdx,QWORD PTR [rbx+0x20]
   140001e86:	call   0x14000351c
   140001e8b:	mov    rcx,QWORD PTR [rbx+0x18]
   140001e8f:	call   0x140003aa4
   140001e94:	and    QWORD PTR [rbx+0x18],0x0
   140001e99:	and    QWORD PTR [rbx+0x20],0x0
   140001e9e:	and    QWORD PTR [rbx+0x28],0x0
   140001ea3:	mov    rcx,QWORD PTR [rbx+0x8]
   140001ea7:	call   0x140003aa4
   140001eac:	and    QWORD PTR [rbx+0x8],0x0
   140001eb1:	add    rsp,0x20
   140001eb5:	pop    rbx
   140001eb6:	ret    
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ec5:	mov    QWORD PTR [rsp+0x10],rbp
   140001eca:	mov    QWORD PTR [rsp+0x18],rsi
   140001ecf:	push   rdi
   140001ed0:	sub    rsp,0x20
   140001ed4:	mov    ebp,edx
   140001ed6:	mov    rbx,rcx
   140001ed9:	lea    rdi,[rbp+0x1]
   140001edd:	cmp    rdi,rbp
   140001ee0:	jb     0x140001f7c
   140001ee6:	mov    edx,0x1
   140001eeb:	cmp    rdi,rdx
   140001eee:	jb     0x140001f7c
   140001ef4:	mov    rsi,QWORD PTR [rcx+0x20]
   140001ef8:	cmp    rdi,rsi
   140001efb:	ja     0x140001f7c
   140001efd:	mov    rax,QWORD PTR [rcx+0x18]
   140001f01:	lea    rcx,[rax+rbp*8]
   140001f05:	call   0x14000351c
   140001f0a:	sub    rsi,rdi
   140001f0d:	je     0x140001f42
   140001f0f:	mov    rax,QWORD PTR [rbx+0x18]
   140001f13:	mov    rdx,rsi
   140001f16:	shl    rdx,0x3
   140001f1a:	lea    r8,[rax+rdi*8]
   140001f1e:	lea    rcx,[rax+rbp*8]
   140001f22:	mov    r9,rdx
   140001f25:	call   0x140003e48
   140001f2a:	test   eax,eax
   140001f2c:	je     0x140001f42
   140001f2e:	cmp    eax,0xc
   140001f31:	je     0x140001f71
   140001f33:	cmp    eax,0x16
   140001f36:	je     0x140001f66
   140001f38:	cmp    eax,0x22
   140001f3b:	je     0x140001f66
   140001f3d:	cmp    eax,0x50
   140001f40:	jne    0x140001f5b
   140001f42:	dec    QWORD PTR [rbx+0x20]
   140001f46:	mov    rbp,QWORD PTR [rsp+0x38]
   140001f4b:	mov    rsi,QWORD PTR [rsp+0x40]
   140001f50:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f55:	add    rsp,0x20
   140001f59:	pop    rdi
   140001f5a:	ret    
   140001f5b:	mov    ecx,0x80004005
   140001f60:	call   0x140003774
   140001f65:	int3   
   140001f66:	mov    ecx,0x80070057
   140001f6b:	call   0x140003774
   140001f70:	int3   
   140001f71:	mov    ecx,0x8007000e
   140001f76:	call   0x140003774
   140001f7b:	int3   
   140001f7c:	mov    ecx,0x80070057
   140001f81:	call   0x140003774
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    eax,DWORD PTR [rcx+0x20]
   140001f93:	ret    
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	sub    rsp,0x28
   140001fa0:	mov    r8d,edx
   140001fa3:	cmp    r8,QWORD PTR [rcx+0x20]
   140001fa7:	jae    0x140001fb6
   140001fa9:	mov    rax,QWORD PTR [rcx+0x18]
   140001fad:	mov    rax,QWORD PTR [rax+r8*8]
   140001fb1:	add    rsp,0x28
   140001fb5:	ret    
   140001fb6:	mov    ecx,0x80070057
   140001fbb:	call   0x140003774
   140001fc0:	int3   
   140001fc1:	int3   
   140001fc2:	int3   
   140001fc3:	int3   
   140001fc4:	int3   
   140001fc5:	int3   
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	mov    QWORD PTR [rsp+0x20],rbx
   140001fcd:	push   rbp
   140001fce:	push   rsi
   140001fcf:	push   rdi
   140001fd0:	push   r12
   140001fd2:	push   r13
   140001fd4:	push   r14
   140001fd6:	push   r15
   140001fd8:	sub    rsp,0x20
   140001fdc:	mov    r14,QWORD PTR [rcx+0x20]
   140001fe0:	mov    edi,0x1
   140001fe5:	xor    ebx,ebx
   140001fe7:	lea    eax,[rdi+0x3]
   140001fea:	mov    r15,rcx
   140001fed:	mov    QWORD PTR [rsp+0x60],r14
   140001ff2:	cmp    r14,rax
   140001ff5:	jbe    0x140002013
   140001ff7:	mov    rdi,rax
   140001ffa:	lea    rax,[rax*2+0x1]
   140002002:	add    rax,rdi
   140002005:	cmp    rax,r14
   140002008:	jb     0x140001ff7
   14000200a:	test   rdi,rdi
   14000200d:	je     0x140002227
   140002013:	lea    rbp,[rdi-0x1]
   140002017:	cmp    rbp,r14
   14000201a:	jae    0x1400021fc
   140002020:	mov    r13,rbp
   140002023:	sub    r13,rdi
   140002026:	shl    r13,0x3
   14000202a:	cmp    rbp,QWORD PTR [r15+0x20]
   14000202e:	jae    0x140002268
   140002034:	mov    rax,QWORD PTR [r15+0x18]
   140002038:	lea    rsi,[rax+rbp*8]
   14000203c:	cmp    rbx,QWORD PTR [rsi]
   14000203f:	jne    0x14000204d
   140002041:	lea    rax,[rsp+0x68]
   140002046:	cmp    rax,rsi
   140002049:	je     0x140002066
   14000204b:	jmp    0x140002062
   14000204d:	test   rbx,rbx
   140002050:	je     0x14000205f
   140002052:	mov    rax,QWORD PTR [rbx]
   140002055:	mov    edx,0x1
   14000205a:	mov    rcx,rbx
   14000205d:	call   QWORD PTR [rax]
   14000205f:	mov    rbx,QWORD PTR [rsi]
   140002062:	and    QWORD PTR [rsi],0x0
   140002066:	mov    r12,rbp
   140002069:	cmp    rbp,rdi
   14000206c:	jb     0x1400021af
   140002072:	mov    r8,rdi
   140002075:	mov    rax,rdi
   140002078:	mov    rdx,r13
   14000207b:	shl    r8,0x3
   14000207f:	neg    rax
   140002082:	mov    QWORD PTR [rsp+0x68],rdx
   140002087:	mov    QWORD PTR [rsp+0x70],rax
   14000208c:	lea    r14,[rax+r12*1]
   140002090:	cmp    r14,QWORD PTR [r15+0x20]
   140002094:	jae    0x140002252
   14000209a:	mov    rax,QWORD PTR [r15+0x18]
   14000209e:	mov    rsi,QWORD PTR [rdx+rax*1]
   1400020a2:	mov    al,BYTE PTR [rsi+0x84]
   1400020a8:	shr    al,0x4
   1400020ab:	and    al,0x1
   1400020ad:	je     0x1400020b8
   1400020af:	test   BYTE PTR [rbx+0x84],0x10
   1400020b6:	je     0x14000211b
   1400020b8:	test   al,al
   1400020ba:	jne    0x1400020c9
   1400020bc:	test   BYTE PTR [rbx+0x84],0x10
   1400020c3:	jne    0x1400021aa
   1400020c9:	mov    al,BYTE PTR [rsi+0x90]
   1400020cf:	test   al,al
   1400020d1:	je     0x1400020e0
   1400020d3:	cmp    BYTE PTR [rbx+0x90],0x0
   1400020da:	je     0x14000211b
   1400020dc:	test   al,al
   1400020de:	jne    0x1400020ed
   1400020e0:	cmp    BYTE PTR [rbx+0x90],0x0
   1400020e7:	jne    0x1400021aa
   1400020ed:	mov    rax,QWORD PTR [rsi]
   1400020f0:	mov    rcx,rsi
   1400020f3:	call   QWORD PTR [rax+0x20]
   1400020f6:	test   al,al
   1400020f8:	je     0x140002194
   1400020fe:	mov    rax,QWORD PTR [rbx]
   140002101:	mov    rcx,rbx
   140002104:	call   QWORD PTR [rax+0x20]
   140002107:	test   al,al
   140002109:	jne    0x140002194
   14000210f:	mov    rdx,QWORD PTR [rsp+0x68]
   140002114:	mov    r8,rdi
   140002117:	shl    r8,0x3
   14000211b:	cmp    r14,QWORD PTR [r15+0x20]
   14000211f:	jae    0x140002247
   140002125:	mov    rax,QWORD PTR [r15+0x18]
   140002129:	lea    rsi,[rdx+rax*1]
   14000212d:	cmp    r12,QWORD PTR [r15+0x20]
   140002131:	jae    0x14000223c
   140002137:	lea    r14,[r8+rdx*1]
   14000213b:	add    r14,rax
   14000213e:	mov    rcx,QWORD PTR [r14]
   140002141:	cmp    rcx,QWORD PTR [rsi]
   140002144:	jne    0x140002151
   140002146:	cmp    r14,rsi
   140002149:	je     0x14000217a
   14000214b:	and    QWORD PTR [rsi],0x0
   14000214f:	jmp    0x14000217a
   140002151:	test   rcx,rcx
   140002154:	je     0x14000216c
   140002156:	mov    rax,QWORD PTR [rcx]
   140002159:	mov    edx,0x1
   14000215e:	call   QWORD PTR [rax]
   140002160:	mov    rdx,QWORD PTR [rsp+0x68]
   140002165:	mov    r8,rdi
   140002168:	shl    r8,0x3
   14000216c:	and    QWORD PTR [r14],0x0
   140002170:	mov    rax,QWORD PTR [rsi]
   140002173:	and    QWORD PTR [rsi],0x0
   140002177:	mov    QWORD PTR [r14],rax
   14000217a:	sub    rdx,r8
   14000217d:	sub    r12,rdi
   140002180:	mov    QWORD PTR [rsp+0x68],rdx
   140002185:	cmp    r12,rdi
   140002188:	jb     0x1400021aa
   14000218a:	mov    rax,QWORD PTR [rsp+0x70]
   14000218f:	jmp    0x14000208c
   140002194:	mov    rax,QWORD PTR [rsi]
   140002197:	mov    rcx,rsi
   14000219a:	call   QWORD PTR [rax+0x20]
   14000219d:	test   al,al
   14000219f:	jne    0x1400021aa
   1400021a1:	mov    rax,QWORD PTR [rbx]
   1400021a4:	mov    rcx,rbx
   1400021a7:	call   QWORD PTR [rax+0x20]
   1400021aa:	mov    r14,QWORD PTR [rsp+0x60]
   1400021af:	cmp    r12,QWORD PTR [r15+0x20]
   1400021b3:	jae    0x14000225d
   1400021b9:	mov    rax,QWORD PTR [r15+0x18]
   1400021bd:	lea    rsi,[rax+r12*8]
   1400021c1:	mov    rcx,QWORD PTR [rsi]
   1400021c4:	cmp    rcx,rbx
   1400021c7:	jne    0x1400021d5
   1400021c9:	lea    rax,[rsp+0x68]
   1400021ce:	cmp    rsi,rax
   1400021d1:	je     0x1400021ec
   1400021d3:	jmp    0x1400021ea
   1400021d5:	test   rcx,rcx
   1400021d8:	je     0x1400021e4
   1400021da:	mov    rax,QWORD PTR [rcx]
   1400021dd:	mov    edx,0x1
   1400021e2:	call   QWORD PTR [rax]
   1400021e4:	mov    rax,rbx
   1400021e7:	mov    QWORD PTR [rsi],rbx
   1400021ea:	xor    ebx,ebx
   1400021ec:	inc    rbp
   1400021ef:	add    r13,0x8
   1400021f3:	cmp    rbp,r14
   1400021f6:	jb     0x14000202a
   1400021fc:	movabs rax,0xaaaaaaaaaaaaaaab
   140002206:	mul    rdi
   140002209:	mov    rdi,rdx
   14000220c:	shr    rdi,1
   14000220f:	jne    0x140002013
   140002215:	test   rbx,rbx
   140002218:	je     0x140002227
   14000221a:	mov    rax,QWORD PTR [rbx]
   14000221d:	mov    edx,0x1
   140002222:	mov    rcx,rbx
   140002225:	call   QWORD PTR [rax]
   140002227:	mov    rbx,QWORD PTR [rsp+0x78]
   14000222c:	add    rsp,0x20
   140002230:	pop    r15
   140002232:	pop    r14
   140002234:	pop    r13
   140002236:	pop    r12
   140002238:	pop    rdi
   140002239:	pop    rsi
   14000223a:	pop    rbp
   14000223b:	ret    
   14000223c:	mov    ecx,0x80070057
   140002241:	call   0x140003774
   140002246:	int3   
   140002247:	mov    ecx,0x80070057
   14000224c:	call   0x140003774
   140002251:	int3   
   140002252:	mov    ecx,0x80070057
   140002257:	call   0x140003774
   14000225c:	int3   
   14000225d:	mov    ecx,0x80070057
   140002262:	call   0x140003774
   140002267:	int3   
   140002268:	mov    ecx,0x80070057
   14000226d:	call   0x140003774
   140002272:	int3   
   140002273:	int3   
   140002274:	int3   
   140002275:	int3   
   140002276:	int3   
   140002277:	int3   
   140002278:	int3   
   140002279:	int3   
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	mov    r11,rsp
   14000227f:	push   rdi
   140002280:	sub    rsp,0x30
   140002284:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14000228c:	mov    QWORD PTR [r11+0x10],rbx
   140002290:	mov    QWORD PTR [r11+0x18],rsi
   140002294:	mov    rdi,rdx
   140002297:	mov    rbx,rcx
   14000229a:	lea    rax,[rip+0xe9cf]        # 0x140010c70
   1400022a1:	mov    QWORD PTR [rcx],rax
   1400022a4:	lea    rsi,[rcx+0x8]
   1400022a8:	mov    QWORD PTR [r11+0x8],rsi
   1400022ac:	lea    rax,[rip+0xea2d]        # 0x140010ce0
   1400022b3:	mov    QWORD PTR [rsi],rax
   1400022b6:	mov    al,BYTE PTR [rdx+0x4c]
   1400022b9:	mov    BYTE PTR [rsi+0x4c],al
   1400022bc:	mov    eax,DWORD PTR [rdx+0x50]
   1400022bf:	mov    DWORD PTR [rsi+0x50],eax
   1400022c2:	add    rdx,0x58
   1400022c6:	lea    rcx,[rsi+0x58]
   1400022ca:	call   0x140002fc8
   1400022cf:	nop
   1400022d0:	lea    rdx,[rdi+0x60]
   1400022d4:	lea    rcx,[rsi+0x60]
   1400022d8:	call   0x140002fc8
   1400022dd:	nop
   1400022de:	lea    rdx,[rdi+0x68]
   1400022e2:	lea    rcx,[rsi+0x68]
   1400022e6:	call   0x140002fc8
   1400022eb:	nop
   1400022ec:	lea    rcx,[rip+0x12055]        # 0x140014348
   1400022f3:	mov    rax,QWORD PTR [rip+0x1204e]        # 0x140014348
   1400022fa:	call   QWORD PTR [rax+0x18]
   1400022fd:	add    rax,0x18
   140002301:	mov    QWORD PTR [rsi+0x70],rax
   140002305:	cmp    BYTE PTR [rdi+0x4c],0x0
   140002309:	je     0x140002350
   14000230b:	add    rdi,0x8
   14000230f:	mov    rcx,rdi
   140002312:	call   QWORD PTR [rip+0xbd10]        # 0x14000e028
   140002318:	test   eax,eax
   14000231a:	jne    0x140002327
   14000231c:	mov    ecx,0x80070057
   140002321:	call   0x140003774
   140002326:	int3   
   140002327:	mov    rcx,rdi
   14000232a:	call   QWORD PTR [rip+0xbcf0]        # 0x14000e020
   140002330:	lea    rdx,[rsi+0x8]
   140002334:	mov    r8,rdi
   140002337:	mov    ecx,eax
   140002339:	call   QWORD PTR [rip+0xbcd9]        # 0x14000e018
   14000233f:	test   eax,eax
   140002341:	jne    0x140002350
   140002343:	call   0x14000372c
   140002348:	mov    ecx,eax
   14000234a:	call   0x140003774
   14000234f:	nop
   140002350:	mov    DWORD PTR [rbx+0x80],0x1
   14000235a:	mov    BYTE PTR [rbx+0x84],0x0
   140002361:	and    QWORD PTR [rbx+0x88],0x0
   140002369:	lea    rax,[rip+0xe898]        # 0x140010c08
   140002370:	mov    QWORD PTR [rbx],rax
   140002373:	mov    BYTE PTR [rbx+0x90],0x1
   14000237a:	mov    rax,rbx
   14000237d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002382:	mov    rsi,QWORD PTR [rsp+0x50]
   140002387:	add    rsp,0x30
   14000238b:	pop    rdi
   14000238c:	ret    
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	int3   
   140002391:	int3   
   140002392:	int3   
   140002393:	int3   
   140002394:	mov    QWORD PTR [rsp+0x8],rbx
   140002399:	mov    QWORD PTR [rsp+0x10],rbp
   14000239e:	mov    QWORD PTR [rsp+0x18],rsi
   1400023a3:	push   rdi
   1400023a4:	sub    rsp,0x20
   1400023a8:	cmp    QWORD PTR [rcx+0x88],0x0
   1400023b0:	mov    rdi,rcx
   1400023b3:	jne    0x14000243f
   1400023b9:	mov    rax,QWORD PTR [rcx]
   1400023bc:	call   QWORD PTR [rax+0x10]
   1400023bf:	mov    ecx,eax
   1400023c1:	mov    ebx,eax
   1400023c3:	call   0x1400039e8
   1400023c8:	mov    rsi,rax
   1400023cb:	test   rax,rax
   1400023ce:	je     0x14000245b
   1400023d4:	mov    r8d,ebx
   1400023d7:	xor    edx,edx
   1400023d9:	mov    rcx,rax
   1400023dc:	call   0x140006bd0
   1400023e1:	mov    WORD PTR [rsi+0x2],bx
   1400023e5:	mov    al,BYTE PTR [rdi+0x84]
   1400023eb:	mov    BYTE PTR [rsi+0x1],al
   1400023ee:	mov    rax,QWORD PTR [rdi]
   1400023f1:	mov    rcx,rdi
   1400023f4:	call   QWORD PTR [rax+0x18]
   1400023f7:	lea    rcx,[rdi+0x10]
   1400023fb:	mov    BYTE PTR [rsi],al
   1400023fd:	mov    eax,DWORD PTR [rdi+0x80]
   140002403:	mov    DWORD PTR [rsi+0x4],eax
   140002406:	call   QWORD PTR [rip+0xbc14]        # 0x14000e020
   14000240c:	lea    rdx,[rbx-0x8]
   140002410:	lea    rcx,[rsi+0x8]
   140002414:	lea    r8,[rdi+0x10]
   140002418:	mov    r9d,eax
   14000241b:	call   0x140003b4c
   140002420:	test   eax,eax
   140002422:	je     0x140002438
   140002424:	cmp    eax,0xc
   140002427:	je     0x14000247c
   140002429:	cmp    eax,0x16
   14000242c:	je     0x140002471
   14000242e:	cmp    eax,0x22
   140002431:	je     0x140002471
   140002433:	cmp    eax,0x50
   140002436:	jne    0x140002466
   140002438:	mov    QWORD PTR [rdi+0x88],rsi
   14000243f:	mov    rax,QWORD PTR [rdi+0x88]
   140002446:	mov    rbx,QWORD PTR [rsp+0x30]
   14000244b:	mov    rbp,QWORD PTR [rsp+0x38]
   140002450:	mov    rsi,QWORD PTR [rsp+0x40]
   140002455:	add    rsp,0x20
   140002459:	pop    rdi
   14000245a:	ret    
   14000245b:	mov    ecx,0x8007000e
   140002460:	call   0x140003774
   140002465:	int3   
   140002466:	mov    ecx,0x80004005
   14000246b:	call   0x140003774
   140002470:	int3   
   140002471:	mov    ecx,0x80070057
   140002476:	call   0x140003774
   14000247b:	int3   
   14000247c:	mov    ecx,0x8007000e
   140002481:	call   0x140003774
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	sub    rsp,0x28
   140002494:	add    rcx,0x10
   140002498:	call   QWORD PTR [rip+0xbb82]        # 0x14000e020
   14000249e:	add    rax,0x8
   1400024a2:	add    rsp,0x28
   1400024a6:	ret    
   1400024a7:	int3   
   1400024a8:	int3   
   1400024a9:	int3   
   1400024aa:	int3   
   1400024ab:	int3   
   1400024ac:	int3   
   1400024ad:	int3   
   1400024ae:	int3   
   1400024af:	int3   
   1400024b0:	xor    eax,eax
   1400024b2:	cmp    BYTE PTR [rcx+0x90],al
   1400024b8:	sete   al
   1400024bb:	ret    
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	int3   
   1400024c1:	int3   
   1400024c2:	int3   
   1400024c3:	int3   
   1400024c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400024c9:	push   rdi
   1400024ca:	sub    rsp,0x20
   1400024ce:	lea    rax,[rip+0xe723]        # 0x140010bf8
   1400024d5:	mov    ebx,edx
   1400024d7:	mov    rdi,rcx
   1400024da:	mov    QWORD PTR [rcx],rax
   1400024dd:	call   0x140002c00
   1400024e2:	test   bl,0x1
   1400024e5:	je     0x1400024ef
   1400024e7:	mov    rcx,rdi
   1400024ea:	call   0x140003930
   1400024ef:	mov    rax,rdi
   1400024f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024f7:	add    rsp,0x20
   1400024fb:	pop    rdi
   1400024fc:	ret    
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	int3   
   140002501:	int3   
   140002502:	int3   
   140002503:	int3   
   140002504:	lea    rax,[rip+0xe6ed]        # 0x140010bf8
   14000250b:	mov    QWORD PTR [rcx],rax
   14000250e:	jmp    0x140002c00
   140002513:	int3   
   140002514:	int3   
   140002515:	int3   
   140002516:	int3   
   140002517:	int3   
   140002518:	int3   
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	mov    QWORD PTR [rsp+0x10],rbx
   140002521:	mov    BYTE PTR [rsp+0x18],r8b
   140002526:	push   rbp
   140002527:	push   rsi
   140002528:	push   rdi
   140002529:	sub    rsp,0x20
   14000252d:	cmp    QWORD PTR [rcx+0x8],0x0
   140002532:	mov    rbx,rdx
   140002535:	mov    rdi,rcx
   140002538:	je     0x14000253f
   14000253a:	call   0x1400029d0
   14000253f:	mov    rcx,QWORD PTR [rdi+0x8]
   140002543:	test   rcx,rcx
   140002546:	je     0x140002561
   140002548:	lea    r8,[rsp+0x50]
   14000254d:	lea    rdx,[rsp+0x40]
   140002552:	call   QWORD PTR [rip+0xbaf0]        # 0x14000e048
   140002558:	test   eax,eax
   14000255a:	jne    0x140002594
   14000255c:	jmp    0x14000260a
   140002561:	mov    ecx,0x28
   140002566:	call   0x1400039e8
   14000256b:	mov    QWORD PTR [rdi+0x8],rax
   14000256f:	test   rax,rax
   140002572:	je     0x140002610
   140002578:	mov    edx,0x1
   14000257d:	mov    rcx,rax
   140002580:	call   QWORD PTR [rip+0xbb0a]        # 0x14000e090
   140002586:	test   eax,eax
   140002588:	je     0x14000261b
   14000258e:	and    QWORD PTR [rsp+0x40],0x0
   140002594:	cmp    BYTE PTR [rbx+0x4c],0x0
   140002598:	je     0x14000265a
   14000259e:	add    rbx,0x8
   1400025a2:	mov    rcx,rbx
   1400025a5:	call   QWORD PTR [rip+0xba7d]        # 0x14000e028
   1400025ab:	test   eax,eax
   1400025ad:	je     0x14000265a
   1400025b3:	mov    rcx,rbx
   1400025b6:	call   QWORD PTR [rip+0xba64]        # 0x14000e020
   1400025bc:	mov    ecx,eax
   1400025be:	mov    ebp,eax
   1400025c0:	call   0x1400039e8
   1400025c5:	mov    rsi,rax
   1400025c8:	test   rax,rax
   1400025cb:	je     0x140002638
   1400025cd:	mov    r8,rbx
   1400025d0:	mov    rdx,rax
   1400025d3:	mov    ecx,ebp
   1400025d5:	call   QWORD PTR [rip+0xba3d]        # 0x14000e018
   1400025db:	test   eax,eax
   1400025dd:	je     0x140002643
   1400025df:	mov    rcx,QWORD PTR [rdi+0x8]
   1400025e3:	xor    r8d,r8d
   1400025e6:	mov    rdx,rsi
   1400025e9:	call   QWORD PTR [rip+0xba61]        # 0x14000e050
   1400025ef:	test   eax,eax
   1400025f1:	je     0x140002643
   1400025f3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400025f8:	call   0x140003aa4
   1400025fd:	mov    rbx,QWORD PTR [rsp+0x48]
   140002602:	add    rsp,0x20
   140002606:	pop    rdi
   140002607:	pop    rsi
   140002608:	pop    rbp
   140002609:	ret    
   14000260a:	call   0x140003750
   14000260f:	int3   
   140002610:	mov    ecx,0x8007000e
   140002615:	call   0x140003774
   14000261a:	int3   
   14000261b:	call   0x14000372c
   140002620:	mov    rcx,QWORD PTR [rdi+0x8]
   140002624:	mov    ebx,eax
   140002626:	call   0x140003aa4
   14000262b:	and    QWORD PTR [rdi+0x8],0x0
   140002630:	mov    ecx,ebx
   140002632:	call   0x140003774
   140002637:	int3   
   140002638:	mov    ecx,0x8007000e
   14000263d:	call   0x140003774
   140002642:	int3   
   140002643:	call   0x14000372c
   140002648:	mov    rcx,rsi
   14000264b:	mov    ebx,eax
   14000264d:	call   0x140003aa4
   140002652:	mov    ecx,ebx
   140002654:	call   0x140003774
   140002659:	int3   
   14000265a:	mov    ecx,0x80004005
   14000265f:	call   0x140003774
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	mov    QWORD PTR [rsp+0x10],rbx
   140002671:	mov    BYTE PTR [rsp+0x18],r8b
   140002676:	push   rbp
   140002677:	push   rsi
   140002678:	push   rdi
   140002679:	sub    rsp,0x20
   14000267d:	cmp    QWORD PTR [rcx+0x8],0x0
   140002682:	mov    rbx,rdx
   140002685:	mov    rdi,rcx
   140002688:	je     0x14000268f
   14000268a:	call   0x1400029d0
   14000268f:	mov    rcx,QWORD PTR [rdi+0x8]
   140002693:	test   rcx,rcx
   140002696:	je     0x1400026b1
   140002698:	lea    r8,[rsp+0x50]
   14000269d:	lea    rdx,[rsp+0x40]
   1400026a2:	call   QWORD PTR [rip+0xb9b0]        # 0x14000e058
   1400026a8:	test   eax,eax
   1400026aa:	jne    0x1400026e4
   1400026ac:	jmp    0x14000275a
   1400026b1:	mov    ecx,0x28
   1400026b6:	call   0x1400039e8
   1400026bb:	mov    QWORD PTR [rdi+0x8],rax
   1400026bf:	test   rax,rax
   1400026c2:	je     0x140002760
   1400026c8:	mov    edx,0x1
   1400026cd:	mov    rcx,rax
   1400026d0:	call   QWORD PTR [rip+0xb9ba]        # 0x14000e090
   1400026d6:	test   eax,eax
   1400026d8:	je     0x14000276b
   1400026de:	and    QWORD PTR [rsp+0x40],0x0
   1400026e4:	cmp    BYTE PTR [rbx+0x4c],0x0
   1400026e8:	je     0x1400027aa
   1400026ee:	add    rbx,0x8
   1400026f2:	mov    rcx,rbx
   1400026f5:	call   QWORD PTR [rip+0xb92d]        # 0x14000e028
   1400026fb:	test   eax,eax
   1400026fd:	je     0x1400027aa
   140002703:	mov    rcx,rbx
   140002706:	call   QWORD PTR [rip+0xb914]        # 0x14000e020
   14000270c:	mov    ecx,eax
   14000270e:	mov    ebp,eax
   140002710:	call   0x1400039e8
   140002715:	mov    rsi,rax
   140002718:	test   rax,rax
   14000271b:	je     0x140002788
   14000271d:	mov    r8,rbx
   140002720:	mov    rdx,rax
   140002723:	mov    ecx,ebp
   140002725:	call   QWORD PTR [rip+0xb8ed]        # 0x14000e018
   14000272b:	test   eax,eax
   14000272d:	je     0x140002793
   14000272f:	mov    rcx,QWORD PTR [rdi+0x8]
   140002733:	xor    r8d,r8d
   140002736:	mov    rdx,rsi
   140002739:	call   QWORD PTR [rip+0xb921]        # 0x14000e060
   14000273f:	test   eax,eax
   140002741:	je     0x140002793
   140002743:	mov    rcx,QWORD PTR [rsp+0x40]
   140002748:	call   0x140003aa4
   14000274d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002752:	add    rsp,0x20
   140002756:	pop    rdi
   140002757:	pop    rsi
   140002758:	pop    rbp
   140002759:	ret    
   14000275a:	call   0x140003750
   14000275f:	int3   
   140002760:	mov    ecx,0x8007000e
   140002765:	call   0x140003774
   14000276a:	int3   
   14000276b:	call   0x14000372c
   140002770:	mov    rcx,QWORD PTR [rdi+0x8]
   140002774:	mov    ebx,eax
   140002776:	call   0x140003aa4
   14000277b:	and    QWORD PTR [rdi+0x8],0x0
   140002780:	mov    ecx,ebx
   140002782:	call   0x140003774
   140002787:	int3   
   140002788:	mov    ecx,0x8007000e
   14000278d:	call   0x140003774
   140002792:	int3   
   140002793:	call   0x14000372c
   140002798:	mov    rcx,rsi
   14000279b:	mov    ebx,eax
   14000279d:	call   0x140003aa4
   1400027a2:	mov    ecx,ebx
   1400027a4:	call   0x140003774
   1400027a9:	int3   
   1400027aa:	mov    ecx,0x80004005
   1400027af:	call   0x140003774
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	mov    QWORD PTR [rsp+0x18],rbx
   1400027c1:	mov    QWORD PTR [rsp+0x20],rbp
   1400027c6:	push   rsi
   1400027c7:	push   rdi
   1400027c8:	push   r14
   1400027ca:	sub    rsp,0x50
   1400027ce:	mov    rax,QWORD PTR [rip+0x108fb]        # 0x1400130d0
   1400027d5:	xor    rax,rsp
   1400027d8:	mov    QWORD PTR [rsp+0x40],rax
   1400027dd:	cmp    QWORD PTR [rcx+0x8],0x0
   1400027e2:	mov    rbx,rdx
   1400027e5:	mov    rdi,rcx
   1400027e8:	je     0x1400027ef
   1400027ea:	call   0x1400029d0
   1400027ef:	mov    rcx,QWORD PTR [rdi+0x8]
   1400027f3:	and    QWORD PTR [rsp+0x20],0x0
   1400027f9:	mov    ebp,0x1
   1400027fe:	test   rcx,rcx
   140002801:	je     0x140002821
   140002803:	lea    r9,[rsp+0x2c]
   140002808:	lea    r8,[rsp+0x20]
   14000280d:	lea    rdx,[rsp+0x28]
   140002812:	call   QWORD PTR [rip+0xb850]        # 0x14000e068
   140002818:	test   eax,eax
   14000281a:	jne    0x14000284b
   14000281c:	jmp    0x140002947
   140002821:	mov    ecx,0x28
   140002826:	call   0x1400039e8
   14000282b:	mov    QWORD PTR [rdi+0x8],rax
   14000282f:	test   rax,rax
   140002832:	je     0x14000294d
   140002838:	mov    edx,ebp
   14000283a:	mov    rcx,rax
   14000283d:	call   QWORD PTR [rip+0xb84d]        # 0x14000e090
   140002843:	test   eax,eax
   140002845:	je     0x140002958
   14000284b:	cmp    BYTE PTR [rbx+0x10],0x0
   14000284f:	jne    0x1400028f2
   140002855:	mov    rax,QWORD PTR [rbx]
   140002858:	mov    rcx,rbx
   14000285b:	call   QWORD PTR [rax+0x8]
   14000285e:	test   eax,eax
   140002860:	je     0x1400028f2
   140002866:	mov    rcx,rbx
   140002869:	call   0x140001ac0
   14000286e:	test   rax,rax
   140002871:	je     0x140002975
   140002877:	mov    r9d,0x2
   14000287d:	lea    rdx,[rsp+0x30]
   140002882:	mov    rcx,rax
   140002885:	lea    r8d,[r9+0xa]
   140002889:	call   QWORD PTR [rip+0xb7b1]        # 0x14000e040
   14000288f:	test   eax,eax
   140002891:	je     0x140002980
   140002897:	mov    r14d,DWORD PTR [rsp+0x34]
   14000289c:	mov    ecx,r14d
   14000289f:	call   0x1400039e8
   1400028a4:	mov    rsi,rax
   1400028a7:	test   rax,rax
   1400028aa:	je     0x140002986
   1400028b0:	mov    rcx,rbx
   1400028b3:	call   0x140001ac0
   1400028b8:	mov    r9d,r14d
   1400028bb:	mov    edx,r14d
   1400028be:	mov    r8,rax
   1400028c1:	mov    rcx,rsi
   1400028c4:	call   0x140003b4c
   1400028c9:	test   eax,eax
   1400028cb:	je     0x1400028f4
   1400028cd:	cmp    eax,0xc
   1400028d0:	je     0x1400029a7
   1400028d6:	cmp    eax,0x16
   1400028d9:	je     0x14000299c
   1400028df:	cmp    eax,0x22
   1400028e2:	je     0x14000299c
   1400028e8:	cmp    eax,0x50
   1400028eb:	je     0x1400028f4
   1400028ed:	jmp    0x140002991
   1400028f2:	xor    esi,esi
   1400028f4:	cmp    BYTE PTR [rbx+0x10],0x0
   1400028f8:	jne    0x140002901
   1400028fa:	test   rsi,rsi
   1400028fd:	jne    0x140002901
   1400028ff:	xor    ebp,ebp
   140002901:	mov    rcx,QWORD PTR [rdi+0x8]
   140002905:	xor    r9d,r9d
   140002908:	mov    r8,rsi
   14000290b:	mov    edx,ebp
   14000290d:	call   QWORD PTR [rip+0xb75d]        # 0x14000e070
   140002913:	test   eax,eax
   140002915:	je     0x1400029b2
   14000291b:	mov    rcx,QWORD PTR [rsp+0x20]
   140002920:	call   0x140003aa4
   140002925:	mov    rcx,QWORD PTR [rsp+0x40]
   14000292a:	xor    rcx,rsp
   14000292d:	call   0x140003950
   140002932:	lea    r11,[rsp+0x50]
   140002937:	mov    rbx,QWORD PTR [r11+0x30]
   14000293b:	mov    rbp,QWORD PTR [r11+0x38]
   14000293f:	mov    rsp,r11
   140002942:	pop    r14
   140002944:	pop    rdi
   140002945:	pop    rsi
   140002946:	ret    
   140002947:	call   0x140003750
   14000294c:	int3   
   14000294d:	mov    ecx,0x8007000e
   140002952:	call   0x140003774
   140002957:	int3   
   140002958:	call   0x14000372c
   14000295d:	mov    rcx,QWORD PTR [rdi+0x8]
   140002961:	mov    ebx,eax
   140002963:	call   0x140003aa4
   140002968:	and    QWORD PTR [rdi+0x8],0x0
   14000296d:	mov    ecx,ebx
   14000296f:	call   0x140003774
   140002974:	int3   
   140002975:	mov    ecx,0x80004005
   14000297a:	call   0x140003774
   14000297f:	int3   
   140002980:	call   0x140003750
   140002985:	int3   
   140002986:	mov    ecx,0x8007000e
   14000298b:	call   0x140003774
   140002990:	int3   
   140002991:	mov    ecx,0x80004005
   140002996:	call   0x140003774
   14000299b:	int3   
   14000299c:	mov    ecx,0x80070057
   1400029a1:	call   0x140003774
   1400029a6:	int3   
   1400029a7:	mov    ecx,0x8007000e
   1400029ac:	call   0x140003774
   1400029b1:	int3   
   1400029b2:	call   0x14000372c
   1400029b7:	mov    rcx,rsi
   1400029ba:	mov    ebx,eax
   1400029bc:	call   0x140003aa4
   1400029c1:	mov    ecx,ebx
   1400029c3:	call   0x140003774
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	rex push rbp
   1400029d2:	push   rbx
   1400029d3:	push   rdi
   1400029d4:	push   r12
   1400029d6:	push   r15
   1400029d8:	mov    rbp,rsp
   1400029db:	sub    rsp,0x80
   1400029e2:	mov    rbx,rcx
   1400029e5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400029e9:	xor    r15d,r15d
   1400029ec:	test   rcx,rcx
   1400029ef:	je     0x140002ba3
   1400029f5:	lea    r8,[rbp-0x18]
   1400029f9:	lea    rdx,[rbp+0x30]
   1400029fd:	mov    WORD PTR [rbp+0x30],r15w
   140002a02:	call   QWORD PTR [rip+0xb678]        # 0x14000e080
   140002a08:	test   eax,eax
   140002a0a:	je     0x140002bb2
   140002a10:	mov    eax,0x8000
   140002a15:	test   WORD PTR [rbp+0x30],ax
   140002a19:	je     0x140002ba3
   140002a1f:	mov    rcx,QWORD PTR [rbx+0x8]
   140002a23:	lea    rax,[rbp+0x38]
   140002a27:	lea    r8,[rbp-0x1c]
   140002a2b:	mov    QWORD PTR [rsp+0x50],rax
   140002a30:	mov    QWORD PTR [rsp+0x48],r15
   140002a35:	lea    rax,[rbp-0x20]
   140002a39:	mov    QWORD PTR [rsp+0x40],rax
   140002a3e:	mov    QWORD PTR [rsp+0x38],r15
   140002a43:	lea    rax,[rbp+0x40]
   140002a47:	mov    QWORD PTR [rsp+0x30],rax
   140002a4c:	lea    rax,[rbp+0x48]
   140002a50:	xor    r9d,r9d
   140002a53:	xor    edx,edx
   140002a55:	mov    QWORD PTR [rsp+0x28],r15
   140002a5a:	mov    DWORD PTR [rbp+0x40],r15d
   140002a5e:	mov    QWORD PTR [rsp+0x20],rax
   140002a63:	mov    DWORD PTR [rbp+0x48],r15d
   140002a67:	mov    DWORD PTR [rbp+0x38],r15d
   140002a6b:	mov    DWORD PTR [rbp-0x20],r15d
   140002a6f:	mov    DWORD PTR [rbp-0x1c],r15d
   140002a73:	call   QWORD PTR [rip+0xb60f]        # 0x14000e088
   140002a79:	call   QWORD PTR [rip+0xb621]        # 0x14000e0a0
   140002a7f:	cmp    eax,0x7a
   140002a82:	jne    0x140002bbd
   140002a88:	mov    ecx,DWORD PTR [rbp-0x1c]
   140002a8b:	call   0x1400039e8
   140002a90:	mov    edi,DWORD PTR [rbp-0x20]
   140002a93:	mov    QWORD PTR [rbp-0x8],rax
   140002a97:	test   edi,edi
   140002a99:	je     0x140002aa8
   140002a9b:	mov    ecx,edi
   140002a9d:	call   0x1400039e8
   140002aa2:	mov    QWORD PTR [rbp-0x10],rax
   140002aa6:	jmp    0x140002aac
   140002aa8:	mov    QWORD PTR [rbp-0x10],r15
   140002aac:	cmp    DWORD PTR [rbp+0x38],r15d
   140002ab0:	je     0x140002ac0
   140002ab2:	mov    ecx,DWORD PTR [rbp+0x38]
   140002ab5:	call   0x1400039e8
   140002aba:	mov    QWORD PTR [rbp-0x18],rax
   140002abe:	jmp    0x140002ac4
   140002ac0:	mov    QWORD PTR [rbp-0x18],r15
   140002ac4:	cmp    DWORD PTR [rbp+0x48],r15d
   140002ac8:	je     0x140002ad7
   140002aca:	mov    ecx,DWORD PTR [rbp+0x48]
   140002acd:	call   0x1400039e8
   140002ad2:	mov    r12,rax
   140002ad5:	jmp    0x140002ada
   140002ad7:	mov    r12,r15
   140002ada:	cmp    DWORD PTR [rbp+0x40],r15d
   140002ade:	je     0x140002aeb
   140002ae0:	mov    ecx,DWORD PTR [rbp+0x40]
   140002ae3:	call   0x1400039e8
   140002ae8:	mov    r15,rax
   140002aeb:	mov    rcx,QWORD PTR [rbp-0x8]
   140002aef:	test   rcx,rcx
   140002af2:	je     0x140002bc3
   140002af8:	mov    rax,QWORD PTR [rbp-0x10]
   140002afc:	test   edi,edi
   140002afe:	je     0x140002b09
   140002b00:	test   rax,rax
   140002b03:	je     0x140002bc3
   140002b09:	cmp    DWORD PTR [rbp+0x38],0x0
   140002b0d:	mov    rdi,QWORD PTR [rbp-0x18]
   140002b11:	je     0x140002b1c
   140002b13:	test   rdi,rdi
   140002b16:	je     0x140002bc7
   140002b1c:	cmp    DWORD PTR [rbp+0x48],0x0
   140002b20:	je     0x140002b2b
   140002b22:	test   r12,r12
   140002b25:	je     0x140002bc7
   140002b2b:	cmp    DWORD PTR [rbp+0x40],0x0
   140002b2f:	je     0x140002b3a
   140002b31:	test   r15,r15
   140002b34:	je     0x140002bc7
   140002b3a:	lea    rdx,[rbp+0x38]
   140002b3e:	lea    r8,[rbp-0x1c]
   140002b42:	mov    r9,r12
   140002b45:	mov    QWORD PTR [rsp+0x50],rdx
   140002b4a:	mov    QWORD PTR [rsp+0x48],rdi
   140002b4f:	lea    rdx,[rbp-0x20]
   140002b53:	mov    QWORD PTR [rsp+0x40],rdx
   140002b58:	mov    QWORD PTR [rsp+0x38],rax
   140002b5d:	lea    rax,[rbp+0x40]
   140002b61:	mov    QWORD PTR [rsp+0x30],rax
   140002b66:	mov    rdx,rcx
   140002b69:	mov    rcx,QWORD PTR [rbx+0x8]
   140002b6d:	lea    rax,[rbp+0x48]
   140002b71:	mov    QWORD PTR [rsp+0x28],r15
   140002b76:	mov    QWORD PTR [rsp+0x20],rax
   140002b7b:	call   QWORD PTR [rip+0xb507]        # 0x14000e088
   140002b81:	test   eax,eax
   140002b83:	jne    0x140002b92
   140002b85:	call   0x14000372c
   140002b8a:	mov    rcx,QWORD PTR [rbp-0x8]
   140002b8e:	mov    ebx,eax
   140002b90:	jmp    0x140002bcc
   140002b92:	mov    rax,QWORD PTR [rbx]
   140002b95:	mov    rcx,rbx
   140002b98:	call   QWORD PTR [rax+0x8]
   140002b9b:	mov    rax,QWORD PTR [rbp-0x8]
   140002b9f:	mov    QWORD PTR [rbx+0x8],rax
   140002ba3:	add    rsp,0x80
   140002baa:	pop    r15
   140002bac:	pop    r12
   140002bae:	pop    rdi
   140002baf:	pop    rbx
   140002bb0:	pop    rbp
   140002bb1:	ret    
   140002bb2:	mov    ecx,0x80004005
   140002bb7:	call   0x140003774
   140002bbc:	int3   
   140002bbd:	call   0x140003750
   140002bc2:	int3   
   140002bc3:	mov    rdi,QWORD PTR [rbp-0x18]
   140002bc7:	mov    ebx,0x8007000e
   140002bcc:	call   0x140003aa4
   140002bd1:	mov    rcx,QWORD PTR [rbp-0x10]
   140002bd5:	call   0x140003aa4
   140002bda:	mov    rcx,rdi
   140002bdd:	call   0x140003aa4
   140002be2:	mov    rcx,r12
   140002be5:	call   0x140003aa4
   140002bea:	mov    rcx,r15
   140002bed:	call   0x140003aa4
   140002bf2:	mov    ecx,ebx
   140002bf4:	call   0x140003774
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	rex push rbp
   140002c02:	push   rbx
   140002c03:	push   rdi
   140002c04:	mov    rbp,rsp
   140002c07:	sub    rsp,0x40
   140002c0b:	mov    rbx,rcx
   140002c0e:	mov    rcx,QWORD PTR [rcx+0x8]
   140002c12:	xor    edi,edi
   140002c14:	test   rcx,rcx
   140002c17:	je     0x140002ccd
   140002c1d:	lea    r8,[rbp+0x28]
   140002c21:	lea    rdx,[rbp+0x20]
   140002c25:	mov    WORD PTR [rbp+0x20],di
   140002c29:	call   QWORD PTR [rip+0xb451]        # 0x14000e080
   140002c2f:	test   eax,eax
   140002c31:	je     0x140002cc0
   140002c37:	mov    eax,0x8000
   140002c3c:	test   WORD PTR [rbp+0x20],ax
   140002c40:	jne    0x140002cc0
   140002c42:	mov    rcx,QWORD PTR [rbx+0x8]
   140002c46:	lea    r8,[rbp+0x28]
   140002c4a:	lea    rdx,[rbp+0x38]
   140002c4e:	call   QWORD PTR [rip+0xb3f4]        # 0x14000e048
   140002c54:	mov    rcx,QWORD PTR [rbp+0x38]
   140002c58:	call   0x140003aa4
   140002c5d:	mov    rcx,QWORD PTR [rbx+0x8]
   140002c61:	lea    r8,[rbp+0x28]
   140002c65:	lea    rdx,[rbp-0x20]
   140002c69:	call   QWORD PTR [rip+0xb3e9]        # 0x14000e058
   140002c6f:	mov    rcx,QWORD PTR [rbp-0x20]
   140002c73:	call   0x140003aa4
   140002c78:	mov    rcx,QWORD PTR [rbx+0x8]
   140002c7c:	lea    r9,[rbp+0x28]
   140002c80:	lea    r8,[rbp-0x18]
   140002c84:	lea    rdx,[rbp+0x30]
   140002c88:	call   QWORD PTR [rip+0xb3da]        # 0x14000e068
   140002c8e:	cmp    DWORD PTR [rbp+0x30],edi
   140002c91:	je     0x140002c9c
   140002c93:	mov    rcx,QWORD PTR [rbp-0x18]
   140002c97:	call   0x140003aa4
   140002c9c:	mov    rcx,QWORD PTR [rbx+0x8]
   140002ca0:	lea    r9,[rbp+0x28]
   140002ca4:	lea    r8,[rbp-0x10]
   140002ca8:	lea    rdx,[rbp+0x30]
   140002cac:	call   QWORD PTR [rip+0xb3c6]        # 0x14000e078
   140002cb2:	cmp    DWORD PTR [rbp+0x30],edi
   140002cb5:	je     0x140002cc0
   140002cb7:	mov    rcx,QWORD PTR [rbp-0x10]
   140002cbb:	call   0x140003aa4
   140002cc0:	mov    rcx,QWORD PTR [rbx+0x8]
   140002cc4:	call   0x140003aa4
   140002cc9:	mov    QWORD PTR [rbx+0x8],rdi
   140002ccd:	add    rsp,0x40
   140002cd1:	pop    rdi
   140002cd2:	pop    rbx
   140002cd3:	pop    rbp
   140002cd4:	ret    
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140002ce1:	mov    QWORD PTR [rsp+0x10],rsi
   140002ce6:	push   rdi
   140002ce7:	sub    rsp,0x20
   140002ceb:	mov    rbx,QWORD PTR [rip+0x1288e]        # 0x140015580
   140002cf2:	mov    rax,QWORD PTR [rip+0x1288f]        # 0x140015588
   140002cf9:	mov    esi,edx
   140002cfb:	mov    rdi,rcx
   140002cfe:	jmp    0x140002d19
   140002d00:	mov    r8,QWORD PTR [rbx]
   140002d03:	test   r8,r8
   140002d06:	je     0x140002d15
   140002d08:	xor    ecx,ecx
   140002d0a:	call   QWORD PTR [r8+0x38]
   140002d0e:	mov    rax,QWORD PTR [rip+0x12873]        # 0x140015588
   140002d15:	add    rbx,0x8
   140002d19:	cmp    rbx,rax
   140002d1c:	jb     0x140002d00
   140002d1e:	mov    rcx,rdi
   140002d21:	call   0x14000366c
   140002d26:	lea    rcx,[rip+0x12843]        # 0x140015570
   140002d2d:	call   0x1400035f4
   140002d32:	mov    rcx,rdi
   140002d35:	call   0x14000366c
   140002d3a:	test   sil,0x1
   140002d3e:	je     0x140002d48
   140002d40:	mov    rcx,rdi
   140002d43:	call   0x140003930
   140002d48:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002d52:	mov    rax,rdi
   140002d55:	add    rsp,0x20
   140002d59:	pop    rdi
   140002d5a:	ret    
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	int3   
   140002d61:	int3   
   140002d62:	int3   
   140002d63:	int3   
   140002d64:	mov    rax,rsp
   140002d67:	push   r14
   140002d69:	sub    rsp,0x140
   140002d70:	mov    QWORD PTR [rax-0xa8],0xfffffffffffffffe
   140002d7b:	mov    QWORD PTR [rax+0x8],rbx
   140002d7f:	mov    QWORD PTR [rax+0x10],rsi
   140002d83:	mov    QWORD PTR [rax+0x18],rdi
   140002d87:	mov    rax,QWORD PTR [rip+0x10342]        # 0x1400130d0
   140002d8e:	xor    rax,rsp
   140002d91:	mov    QWORD PTR [rsp+0x130],rax
   140002d99:	xor    ecx,ecx
   140002d9b:	call   QWORD PTR [rip+0xb59f]        # 0x14000e340
   140002da1:	xor    r14d,r14d
   140002da4:	test   eax,eax
   140002da6:	js     0x140002f95
   140002dac:	lea    rdi,[rip+0xde45]        # 0x140010bf8
   140002db3:	mov    QWORD PTR [rsp+0x50],rdi
   140002db8:	mov    QWORD PTR [rsp+0x58],r14
   140002dbd:	mov    QWORD PTR [rsp+0x70],r14
   140002dc2:	mov    BYTE PTR [rsp+0x78],r14b
   140002dc7:	lea    esi,[r14+0x2]
   140002dcb:	mov    DWORD PTR [rsp+0x7c],esi
   140002dcf:	lea    rax,[rip+0xde6a]        # 0x140010c40
   140002dd6:	mov    QWORD PTR [rsp+0x68],rax
   140002ddb:	mov    QWORD PTR [rsp+0x80],r14
   140002de3:	mov    QWORD PTR [rsp+0x88],r14
   140002deb:	mov    QWORD PTR [rsp+0x90],r14
   140002df3:	mov    DWORD PTR [rsp+0x98],r14d
   140002dfb:	lea    rcx,[rsp+0xb0]
   140002e03:	call   0x140001a48
   140002e08:	nop
   140002e09:	mov    rdx,rax
   140002e0c:	lea    rcx,[rsp+0x68]
   140002e11:	call   0x140001d54
   140002e16:	test   al,al
   140002e18:	sete   bl
   140002e1b:	lea    rcx,[rsp+0xb0]
   140002e23:	call   0x140001970
   140002e28:	test   bl,bl
   140002e2a:	je     0x140002e50
   140002e2c:	lea    rcx,[rsp+0x68]
   140002e31:	call   0x140001cd0
   140002e36:	nop
   140002e37:	mov    QWORD PTR [rsp+0x50],rdi
   140002e3c:	lea    rcx,[rsp+0x50]
   140002e41:	call   0x140002c00
   140002e46:	mov    eax,0x80070539
   140002e4b:	jmp    0x140002f95
   140002e50:	lea    rdx,[rsp+0x68]
   140002e55:	lea    rcx,[rsp+0x50]
   140002e5a:	call   0x1400027bc
   140002e5f:	lea    rcx,[rsp+0xb0]
   140002e67:	call   0x140001a14
   140002e6c:	nop
   140002e6d:	mov    rdx,rax
   140002e70:	lea    rcx,[rsp+0x50]
   140002e75:	call   0x14000266c
   140002e7a:	nop
   140002e7b:	lea    rcx,[rsp+0xb0]
   140002e83:	call   0x140001970
   140002e88:	lea    rcx,[rsp+0xb0]
   140002e90:	call   0x140001a14
   140002e95:	nop
   140002e96:	mov    rdx,rax
   140002e99:	lea    rcx,[rsp+0x50]
   140002e9e:	call   0x14000251c
   140002ea3:	nop
   140002ea4:	lea    rcx,[rsp+0xb0]
   140002eac:	call   0x140001970
   140002eb1:	nop
   140002eb2:	lea    rcx,[rsp+0x68]
   140002eb7:	call   0x140001cd0
   140002ebc:	nop
   140002ebd:	mov    QWORD PTR [rsp+0x40],r14
   140002ec2:	mov    DWORD PTR [rsp+0x38],r14d
   140002ec7:	mov    QWORD PTR [rsp+0x30],r14
   140002ecc:	mov    DWORD PTR [rsp+0x28],esi
   140002ed0:	mov    DWORD PTR [rsp+0x20],0x6
   140002ed8:	xor    r9d,r9d
   140002edb:	xor    r8d,r8d
   140002ede:	or     ebx,0xffffffff
   140002ee1:	mov    edx,ebx
   140002ee3:	mov    rcx,QWORD PTR [rsp+0x58]
   140002ee8:	call   QWORD PTR [rip+0xb44a]        # 0x14000e338
   140002eee:	mov    esi,eax
   140002ef0:	test   eax,eax
   140002ef2:	jns    0x140002f0a
   140002ef4:	mov    QWORD PTR [rsp+0x50],rdi
   140002ef9:	lea    rcx,[rsp+0x50]
   140002efe:	call   0x140002c00
   140002f03:	mov    eax,esi
   140002f05:	jmp    0x140002f95
   140002f0a:	xor    r8d,r8d
   140002f0d:	call   0x140003114
   140002f12:	cmp    BYTE PTR [rip+0x1273f],r14b        # 0x140015658
   140002f19:	jne    0x140002f68
   140002f1b:	xor    ecx,ecx
   140002f1d:	call   QWORD PTR [rip+0xb41d]        # 0x14000e340
   140002f23:	mov    ebx,eax
   140002f25:	test   eax,eax
   140002f27:	jns    0x140002f44
   140002f29:	cmp    eax,0x80010106
   140002f2e:	jne    0x140002f68
   140002f30:	lea    rcx,[rip+0xdc51]        # 0x140010b88
   140002f37:	call   QWORD PTR [rip+0xb1a3]        # 0x14000e0e0
   140002f3d:	test   rax,rax
   140002f40:	jne    0x140002f4b
   140002f42:	jmp    0x140002f68
   140002f44:	mov    BYTE PTR [rip+0x12777],0x1        # 0x1400156c2
   140002f4b:	call   QWORD PTR [rip+0xb197]        # 0x14000e0e8
   140002f51:	call   0x140003200
   140002f56:	mov    ebx,eax
   140002f58:	cmp    BYTE PTR [rip+0x12763],r14b        # 0x1400156c2
   140002f5f:	je     0x140002f68
   140002f61:	call   QWORD PTR [rip+0xb3e9]        # 0x14000e350
   140002f67:	nop
   140002f68:	mov    QWORD PTR [rsp+0x50],rdi
   140002f6d:	lea    rcx,[rsp+0x50]
   140002f72:	call   0x140002c00
   140002f77:	mov    eax,ebx
   140002f79:	jmp    0x140002f95
   140002f7b:	lea    rdi,[rip+0xdc76]        # 0x140010bf8
   140002f82:	mov    QWORD PTR [rsp+0x50],rdi
   140002f87:	lea    rcx,[rsp+0x50]
   140002f8c:	call   0x140002c00
   140002f91:	mov    eax,DWORD PTR [rsp+0x60]
   140002f95:	mov    rcx,QWORD PTR [rsp+0x130]
   140002f9d:	xor    rcx,rsp
   140002fa0:	call   0x140003950
   140002fa5:	lea    r11,[rsp+0x140]
   140002fad:	mov    rbx,QWORD PTR [r11+0x10]
   140002fb1:	mov    rsi,QWORD PTR [r11+0x18]
   140002fb5:	mov    rdi,QWORD PTR [r11+0x20]
   140002fb9:	mov    rsp,r11
   140002fbc:	pop    r14
   140002fbe:	ret    
   140002fbf:	int3   
   140002fc0:	int3   
   140002fc1:	int3   
   140002fc2:	int3   
   140002fc3:	int3   
   140002fc4:	int3   
   140002fc5:	int3   
   140002fc6:	int3   
   140002fc7:	int3   
   140002fc8:	mov    QWORD PTR [rsp+0x8],rbx
   140002fcd:	mov    QWORD PTR [rsp+0x10],rsi
   140002fd2:	push   rdi
   140002fd3:	sub    rsp,0x20
   140002fd7:	mov    rbx,QWORD PTR [rdx]
   140002fda:	mov    rsi,rcx
   140002fdd:	mov    rcx,QWORD PTR [rbx-0x18]
   140002fe1:	mov    rax,QWORD PTR [rcx]
   140002fe4:	call   QWORD PTR [rax+0x20]
   140002fe7:	cmp    DWORD PTR [rbx-0x8],0x0
   140002feb:	mov    rcx,rax
   140002fee:	jl     0x140003000
   140002ff0:	cmp    rax,QWORD PTR [rbx-0x18]
   140002ff4:	jne    0x140003000
   140002ff6:	lea    rdi,[rbx-0x18]
   140002ffa:	lock inc DWORD PTR [rbx-0x8]
   140002ffe:	jmp    0x140003036
   140003000:	mov    rax,QWORD PTR [rax]
   140003003:	mov    edx,DWORD PTR [rbx-0x10]
   140003006:	mov    r8d,0x2
   14000300c:	call   QWORD PTR [rax]
   14000300e:	mov    rdi,rax
   140003011:	test   rax,rax
   140003014:	je     0x140003050
   140003016:	mov    eax,DWORD PTR [rbx-0x10]
   140003019:	lea    rcx,[rdi+0x18]
   14000301d:	mov    r8,rbx
   140003020:	mov    DWORD PTR [rdi+0x8],eax
   140003023:	mov    eax,DWORD PTR [rbx-0x10]
   140003026:	inc    eax
   140003028:	movsxd rdx,eax
   14000302b:	add    rdx,rdx
   14000302e:	mov    r9,rdx
   140003031:	call   0x140003b4c
   140003036:	mov    rbx,QWORD PTR [rsp+0x30]
   14000303b:	lea    rax,[rdi+0x18]
   14000303f:	mov    QWORD PTR [rsi],rax
   140003042:	mov    rax,rsi
   140003045:	mov    rsi,QWORD PTR [rsp+0x38]
   14000304a:	add    rsp,0x20
   14000304e:	pop    rdi
   14000304f:	ret    
   140003050:	call   0x140003714
   140003055:	int3   
   140003056:	int3   
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	sub    rsp,0x28
   140003060:	mov    rdx,QWORD PTR [rcx]
   140003063:	sub    rdx,0x18
   140003067:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000306c:	jg     0x140003077
   14000306e:	mov    rcx,QWORD PTR [rdx]
   140003071:	mov    rax,QWORD PTR [rcx]
   140003074:	call   QWORD PTR [rax+0x8]
   140003077:	add    rsp,0x28
   14000307b:	ret    
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	int3   
   140003081:	int3   
   140003082:	int3   
   140003083:	int3   
   140003084:	rex push rbx
   140003086:	sub    rsp,0x20
   14000308a:	mov    rbx,rcx
   14000308d:	mov    rcx,QWORD PTR [rcx]
   140003090:	test   rcx,rcx
   140003093:	je     0x14000309f
   140003095:	mov    rax,QWORD PTR [rcx]
   140003098:	mov    edx,0x1
   14000309d:	call   QWORD PTR [rax]
   14000309f:	and    QWORD PTR [rbx],0x0
   1400030a3:	add    rsp,0x20
   1400030a7:	pop    rbx
   1400030a8:	ret    
   1400030a9:	int3   
   1400030aa:	int3   
   1400030ab:	int3   
   1400030ac:	int3   
   1400030ad:	int3   
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	rex.W jmp QWORD PTR [rip+0xb279]        # 0x14000e330
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030c5:	push   rdi
   1400030c6:	sub    rsp,0x20
   1400030ca:	mov    rbx,rcx
   1400030cd:	call   QWORD PTR [rip+0xb255]        # 0x14000e328
   1400030d3:	mov    edi,eax
   1400030d5:	test   eax,eax
   1400030d7:	jne    0x140003101
   1400030d9:	cmp    BYTE PTR [rbx+0x60],al
   1400030dc:	je     0x1400030ee
   1400030de:	mov    rcx,QWORD PTR [rbx+0x50]
   1400030e2:	mov    BYTE PTR [rbx+0x61],0x1
   1400030e6:	call   QWORD PTR [rip+0xafec]        # 0x14000e0d8
   1400030ec:	jmp    0x140003101
   1400030ee:	mov    ecx,DWORD PTR [rbx+0x48]
   1400030f1:	xor    r9d,r9d
   1400030f4:	xor    r8d,r8d
   1400030f7:	lea    edx,[r9+0x12]
   1400030fb:	call   QWORD PTR [rip+0xb1e7]        # 0x14000e2e8
   140003101:	mov    eax,edi
   140003103:	mov    rbx,QWORD PTR [rsp+0x30]
   140003108:	add    rsp,0x20
   14000310c:	pop    rdi
   14000310d:	ret    
   14000310e:	int3   
   14000310f:	int3   
   140003110:	int3   
   140003111:	int3   
   140003112:	int3   
   140003113:	int3   
   140003114:	mov    rax,rsp
   140003117:	mov    QWORD PTR [rax+0x10],rbx
   14000311b:	mov    QWORD PTR [rax+0x18],rbp
   14000311f:	mov    QWORD PTR [rax+0x20],rsi
   140003123:	mov    QWORD PTR [rax+0x8],rcx
   140003127:	push   rdi
   140003128:	sub    rsp,0x30
   14000312c:	mov    rdi,QWORD PTR [rip+0x1244d]        # 0x140015580
   140003133:	mov    rax,QWORD PTR [rip+0x1244e]        # 0x140015588
   14000313a:	mov    ebp,r8d
   14000313d:	mov    ebx,0x1
   140003142:	jmp    0x1400031bd
   140003144:	test   ebx,ebx
   140003146:	js     0x1400031c2
   140003148:	mov    rsi,QWORD PTR [rdi]
   14000314b:	test   rsi,rsi
   14000314e:	je     0x1400031b9
   140003150:	mov    r9,QWORD PTR [rsi+0x10]
   140003154:	and    QWORD PTR [rsp+0x40],0x0
   14000315a:	test   r9,r9
   14000315d:	jne    0x140003163
   14000315f:	xor    ebx,ebx
   140003161:	jmp    0x1400031b9
   140003163:	mov    rcx,QWORD PTR [rsi+0x18]
   140003167:	lea    r8,[rsp+0x40]
   14000316c:	lea    rdx,[rip+0xda05]        # 0x140010b78
   140003173:	call   r9
   140003176:	mov    ebx,eax
   140003178:	test   eax,eax
   14000317a:	js     0x1400031a2
   14000317c:	mov    rax,QWORD PTR [rsi+0x20]
   140003180:	mov    rdx,QWORD PTR [rsp+0x40]
   140003185:	mov    rcx,QWORD PTR [rsi]
   140003188:	add    rax,0x8
   14000318c:	mov    r9d,ebp
   14000318f:	mov    r8d,0x4
   140003195:	mov    QWORD PTR [rsp+0x20],rax
   14000319a:	call   QWORD PTR [rip+0xb180]        # 0x14000e320
   1400031a0:	mov    ebx,eax
   1400031a2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400031a7:	test   rcx,rcx
   1400031aa:	je     0x1400031b2
   1400031ac:	mov    rdx,QWORD PTR [rcx]
   1400031af:	call   QWORD PTR [rdx+0x10]
   1400031b2:	mov    rax,QWORD PTR [rip+0x123cf]        # 0x140015588
   1400031b9:	add    rdi,0x8
   1400031bd:	cmp    rdi,rax
   1400031c0:	jb     0x140003144
   1400031c2:	mov    rbp,QWORD PTR [rsp+0x50]
   1400031c7:	mov    rsi,QWORD PTR [rsp+0x58]
   1400031cc:	mov    eax,ebx
   1400031ce:	mov    rbx,QWORD PTR [rsp+0x48]
   1400031d3:	add    rsp,0x30
   1400031d7:	pop    rdi
   1400031d8:	ret    
   1400031d9:	int3   
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    rax,QWORD PTR [rdx]
   1400031e3:	mov    rcx,rdx
   1400031e6:	lea    r8,[rip+0xd9c3]        # 0x140010bb0
   1400031ed:	lea    rdx,[rip+0xd9c4]        # 0x140010bb8
   1400031f4:	rex.W jmp QWORD PTR [rax+0x18]
   1400031f8:	int3   
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	mov    QWORD PTR [rsp+0x8],rbx
   140003205:	mov    DWORD PTR [rsp+0x10],edx
   140003209:	push   rdi
   14000320a:	sub    rsp,0x60
   14000320e:	mov    r8d,0x5
   140003214:	call   0x140003114
   140003219:	mov    ebx,eax
   14000321b:	test   eax,eax
   14000321d:	js     0x140003324
   140003223:	jne    0x14000331d
   140003229:	cmp    BYTE PTR [rip+0x12490],0x0        # 0x1400156c0
   140003230:	je     0x1400032d6
   140003236:	xor    r9d,r9d
   140003239:	xor    r8d,r8d
   14000323c:	xor    edx,edx
   14000323e:	xor    ecx,ecx
   140003240:	call   QWORD PTR [rip+0xaeba]        # 0x14000e100
   140003246:	mov    QWORD PTR [rip+0x12463],rax        # 0x1400156b0
   14000324d:	test   rax,rax
   140003250:	je     0x1400032cf
   140003252:	lea    rax,[rsp+0x78]
   140003257:	lea    r9,[rip+0x12402]        # 0x140015660
   14000325e:	lea    r8,[rip+0x16f]        # 0x1400033d4
   140003265:	mov    QWORD PTR [rsp+0x28],rax
   14000326a:	and    DWORD PTR [rsp+0x20],0x0
   14000326f:	xor    edx,edx
   140003271:	xor    ecx,ecx
   140003273:	call   QWORD PTR [rip+0xae8f]        # 0x14000e108
   140003279:	mov    rdi,rax
   14000327c:	test   rax,rax
   14000327f:	jne    0x140003295
   140003281:	mov    rcx,QWORD PTR [rip+0x12428]        # 0x1400156b0
   140003288:	call   QWORD PTR [rip+0xae2a]        # 0x14000e0b8
   14000328e:	and    QWORD PTR [rip+0x1241b],rdi        # 0x1400156b0
   140003295:	test   rdi,rdi
   140003298:	je     0x1400032cf
   14000329a:	call   QWORD PTR [rip+0xb070]        # 0x14000e310
   1400032a0:	mov    ebx,eax
   1400032a2:	test   eax,eax
   1400032a4:	jns    0x1400032c4
   1400032a6:	mov    rcx,QWORD PTR [rip+0x12403]        # 0x1400156b0
   1400032ad:	call   QWORD PTR [rip+0xae25]        # 0x14000e0d8
   1400032b3:	mov    edx,DWORD PTR [rip+0x123ff]        # 0x1400156b8
   1400032b9:	mov    rcx,rdi
   1400032bc:	add    edx,edx
   1400032be:	call   QWORD PTR [rip+0xae2c]        # 0x14000e0f0
   1400032c4:	mov    rcx,rdi
   1400032c7:	call   QWORD PTR [rip+0xadeb]        # 0x14000e0b8
   1400032cd:	jmp    0x1400032de
   1400032cf:	mov    ebx,0x80004005
   1400032d4:	jmp    0x1400032e2
   1400032d6:	call   QWORD PTR [rip+0xb034]        # 0x14000e310
   1400032dc:	mov    ebx,eax
   1400032de:	test   ebx,ebx
   1400032e0:	jns    0x140003324
   1400032e2:	mov    rdi,QWORD PTR [rip+0x12297]        # 0x140015580
   1400032e9:	xor    eax,eax
   1400032eb:	jmp    0x140003312
   1400032ed:	test   eax,eax
   1400032ef:	jne    0x140003324
   1400032f1:	mov    rcx,QWORD PTR [rdi]
   1400032f4:	test   rcx,rcx
   1400032f7:	je     0x14000330e
   1400032f9:	mov    rax,QWORD PTR [rcx+0x20]
   1400032fd:	mov    ecx,DWORD PTR [rax+0x8]
   140003300:	test   ecx,ecx
   140003302:	jne    0x140003308
   140003304:	xor    eax,eax
   140003306:	jmp    0x14000330e
   140003308:	call   QWORD PTR [rip+0xb00a]        # 0x14000e318
   14000330e:	add    rdi,0x8
   140003312:	cmp    rdi,QWORD PTR [rip+0x1226f]        # 0x140015588
   140003319:	jb     0x1400032ed
   14000331b:	jmp    0x140003324
   14000331d:	mov    BYTE PTR [rip+0x1239c],0x0        # 0x1400156c0
   140003324:	mov    edi,ebx
   140003326:	test   ebx,ebx
   140003328:	jne    0x140003370
   14000332a:	lea    rcx,[rsp+0x30]
   14000332f:	xor    r9d,r9d
   140003332:	xor    r8d,r8d
   140003335:	xor    edx,edx
   140003337:	call   QWORD PTR [rip+0xafb3]        # 0x14000e2f0
   14000333d:	test   eax,eax
   14000333f:	jle    0x140003372
   140003341:	lea    rcx,[rsp+0x30]
   140003346:	call   QWORD PTR [rip+0xafac]        # 0x14000e2f8
   14000334c:	lea    rcx,[rsp+0x30]
   140003351:	call   QWORD PTR [rip+0xafa9]        # 0x14000e300
   140003357:	lea    rcx,[rsp+0x30]
   14000335c:	xor    r9d,r9d
   14000335f:	xor    r8d,r8d
   140003362:	xor    edx,edx
   140003364:	call   QWORD PTR [rip+0xaf86]        # 0x14000e2f0
   14000336a:	test   eax,eax
   14000336c:	jg     0x140003341
   14000336e:	test   ebx,ebx
   140003370:	js     0x1400033be
   140003372:	mov    rbx,QWORD PTR [rip+0x12207]        # 0x140015580
   140003379:	xor    edi,edi
   14000337b:	jmp    0x1400033a0
   14000337d:	test   edi,edi
   14000337f:	jne    0x1400033a9
   140003381:	mov    rax,QWORD PTR [rbx]
   140003384:	test   rax,rax
   140003387:	je     0x14000339c
   140003389:	mov    rax,QWORD PTR [rax+0x20]
   14000338d:	mov    ecx,DWORD PTR [rax+0x8]
   140003390:	test   ecx,ecx
   140003392:	je     0x14000339c
   140003394:	call   QWORD PTR [rip+0xaf7e]        # 0x14000e318
   14000339a:	mov    edi,eax
   14000339c:	add    rbx,0x8
   1400033a0:	cmp    rbx,QWORD PTR [rip+0x121e1]        # 0x140015588
   1400033a7:	jb     0x14000337d
   1400033a9:	cmp    BYTE PTR [rip+0x12310],0x0        # 0x1400156c0
   1400033b0:	je     0x1400033be
   1400033b2:	mov    ecx,DWORD PTR [rip+0x12304]        # 0x1400156bc
   1400033b8:	call   QWORD PTR [rip+0xad3a]        # 0x14000e0f8
   1400033be:	mov    eax,edi
   1400033c0:	mov    rbx,QWORD PTR [rsp+0x70]
   1400033c5:	add    rsp,0x60
   1400033c9:	pop    rdi
   1400033ca:	ret    
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	int3   
   1400033d1:	int3   
   1400033d2:	int3   
   1400033d3:	int3   
   1400033d4:	rex push rbx
   1400033d6:	sub    rsp,0x20
   1400033da:	mov    rbx,rcx
   1400033dd:	mov    rcx,QWORD PTR [rcx+0x50]
   1400033e1:	or     edx,0xffffffff
   1400033e4:	call   QWORD PTR [rip+0xad06]        # 0x14000e0f0
   1400033ea:	mov    rcx,QWORD PTR [rbx+0x50]
   1400033ee:	call   QWORD PTR [rip+0xacc4]        # 0x14000e0b8
   1400033f4:	mov    ecx,DWORD PTR [rbx+0x48]
   1400033f7:	and    QWORD PTR [rbx+0x50],0x0
   1400033fc:	xor    r9d,r9d
   1400033ff:	xor    r8d,r8d
   140003402:	lea    edx,[r9+0x12]
   140003406:	call   QWORD PTR [rip+0xaedc]        # 0x14000e2e8
   14000340c:	xor    eax,eax
   14000340e:	add    rsp,0x20
   140003412:	pop    rbx
   140003413:	ret    
   140003414:	int3   
   140003415:	int3   
   140003416:	int3   
   140003417:	int3   
   140003418:	int3   
   140003419:	int3   
   14000341a:	int3   
   14000341b:	int3   
   14000341c:	mov    QWORD PTR [rsp+0x8],rbx
   140003421:	mov    QWORD PTR [rsp+0x10],rsi
   140003426:	push   rdi
   140003427:	sub    rsp,0x20
   14000342b:	mov    rdi,rdx
   14000342e:	mov    rdx,QWORD PTR [rcx+0x10]
   140003432:	mov    rbx,rcx
   140003435:	cmp    rdi,rdx
   140003438:	jbe    0x1400034e1
   14000343e:	cmp    QWORD PTR [rcx],0x0
   140003442:	jne    0x140003468
   140003444:	movsxd rax,DWORD PTR [rcx+0x18]
   140003448:	mov    edx,0x8
   14000344d:	cmp    rax,rdi
   140003450:	cmova  rdi,rax
   140003454:	mov    rcx,rdi
   140003457:	call   0x140003ea0
   14000345c:	mov    QWORD PTR [rbx],rax
   14000345f:	test   rax,rax
   140003462:	jne    0x1400034dd
   140003464:	xor    al,al
   140003466:	jmp    0x1400034e3
   140003468:	movsxd rcx,DWORD PTR [rcx+0x18]
   14000346c:	test   rcx,rcx
   14000346f:	jne    0x140003484
   140003471:	mov    rcx,rdx
   140003474:	mov    rax,rdi
   140003477:	shr    rcx,1
   14000347a:	sub    rax,rdx
   14000347d:	cmp    rax,rcx
   140003480:	cmova  rcx,rax
   140003484:	lea    rax,[rdx+rcx*1]
   140003488:	mov    edx,0x8
   14000348d:	cmp    rdi,rax
   140003490:	cmovb  rdi,rax
   140003494:	mov    rcx,rdi
   140003497:	call   0x140003ea0
   14000349c:	mov    rsi,rax
   14000349f:	test   rax,rax
   1400034a2:	je     0x140003464
   1400034a4:	mov    rdx,QWORD PTR [rbx+0x8]
   1400034a8:	mov    r8,QWORD PTR [rbx]
   1400034ab:	mov    rcx,rax
   1400034ae:	shl    rdx,0x3
   1400034b2:	mov    r9,rdx
   1400034b5:	call   0x140003e48
   1400034ba:	test   eax,eax
   1400034bc:	je     0x1400034d2
   1400034be:	cmp    eax,0xc
   1400034c1:	je     0x140003509
   1400034c3:	cmp    eax,0x16
   1400034c6:	je     0x1400034fe
   1400034c8:	cmp    eax,0x22
   1400034cb:	je     0x1400034fe
   1400034cd:	cmp    eax,0x50
   1400034d0:	jne    0x1400034f3
   1400034d2:	mov    rcx,QWORD PTR [rbx]
   1400034d5:	call   0x140003aa4
   1400034da:	mov    QWORD PTR [rbx],rsi
   1400034dd:	mov    QWORD PTR [rbx+0x10],rdi
   1400034e1:	mov    al,0x1
   1400034e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034e8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400034ed:	add    rsp,0x20
   1400034f1:	pop    rdi
   1400034f2:	ret    
   1400034f3:	mov    ecx,0x80004005
   1400034f8:	call   0x140003774
   1400034fd:	int3   
   1400034fe:	mov    ecx,0x80070057
   140003503:	call   0x140003774
   140003508:	int3   
   140003509:	mov    ecx,0x8007000e
   14000350e:	call   0x140003774
   140003513:	int3   
   140003514:	int3   
   140003515:	int3   
   140003516:	int3   
   140003517:	int3   
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	test   rdx,rdx
   14000351f:	je     0x140003567
   140003521:	mov    QWORD PTR [rsp+0x8],rbx
   140003526:	mov    QWORD PTR [rsp+0x10],rsi
   14000352b:	push   rdi
   14000352c:	sub    rsp,0x20
   140003530:	mov    rdi,rdx
   140003533:	mov    rsi,rcx
   140003536:	xor    ebx,ebx
   140003538:	mov    rcx,QWORD PTR [rsi+rbx*8]
   14000353c:	test   rcx,rcx
   14000353f:	je     0x14000354b
   140003541:	mov    rax,QWORD PTR [rcx]
   140003544:	mov    edx,0x1
   140003549:	call   QWORD PTR [rax]
   14000354b:	and    QWORD PTR [rsi+rbx*8],0x0
   140003550:	inc    rbx
   140003553:	cmp    rbx,rdi
   140003556:	jb     0x140003538
   140003558:	mov    rbx,QWORD PTR [rsp+0x30]
   14000355d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003562:	add    rsp,0x20
   140003566:	pop    rdi
   140003567:	ret    
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	mov    QWORD PTR [rsp+0x8],rbx
   140003575:	mov    QWORD PTR [rsp+0x10],rsi
   14000357a:	push   rdi
   14000357b:	sub    rsp,0x30
   14000357f:	mov    rsi,rdx
   140003582:	test   rdx,rdx
   140003585:	jne    0x14000358e
   140003587:	mov    eax,0x80004003
   14000358c:	jmp    0x1400035cf
   14000358e:	lea    rbx,[rcx+0x40]
   140003592:	xor    edi,edi
   140003594:	cmp    QWORD PTR [rbx],rdi
   140003597:	jne    0x1400035be
   140003599:	lea    r9,[rip+0xd600]        # 0x140010ba0
   1400035a0:	lea    r8d,[rdi+0x1]
   1400035a4:	lea    rcx,[rip+0xd3fd]        # 0x1400109a8
   1400035ab:	xor    edx,edx
   1400035ad:	mov    QWORD PTR [rsp+0x20],rbx
   1400035b2:	call   QWORD PTR [rip+0xad90]        # 0x14000e348
   1400035b8:	mov    edi,eax
   1400035ba:	test   eax,eax
   1400035bc:	js     0x1400035cd
   1400035be:	mov    rcx,QWORD PTR [rbx]
   1400035c1:	mov    QWORD PTR [rsi],rcx
   1400035c4:	mov    rcx,QWORD PTR [rbx]
   1400035c7:	mov    rdx,QWORD PTR [rcx]
   1400035ca:	call   QWORD PTR [rdx+0x8]
   1400035cd:	mov    eax,edi
   1400035cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035d4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400035d9:	add    rsp,0x30
   1400035dd:	pop    rdi
   1400035de:	ret    
   1400035df:	int3   
   1400035e0:	int3   
   1400035e1:	int3   
   1400035e2:	int3   
   1400035e3:	int3   
   1400035e4:	int3   
   1400035e5:	int3   
   1400035e6:	int3   
   1400035e7:	int3   
   1400035e8:	mov    eax,DWORD PTR [rcx+0xc]
   1400035eb:	ret    
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	int3   
   1400035f1:	int3   
   1400035f2:	int3   
   1400035f3:	int3   
   1400035f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400035f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400035fe:	push   rdi
   1400035ff:	sub    rsp,0x20
   140003603:	cmp    DWORD PTR [rcx],0x0
   140003606:	mov    rbx,rcx
   140003609:	je     0x140003653
   14000360b:	mov    rdi,QWORD PTR [rcx+0x10]
   14000360f:	cmp    rdi,QWORD PTR [rcx+0x18]
   140003613:	jae    0x140003646
   140003615:	mov    rax,QWORD PTR [rdi]
   140003618:	test   rax,rax
   14000361b:	je     0x14000363c
   14000361d:	mov    rsi,QWORD PTR [rax+0x20]
   140003621:	mov    rcx,QWORD PTR [rsi]
   140003624:	test   rcx,rcx
   140003627:	je     0x14000363c
   140003629:	call   QWORD PTR [rip+0xaaa1]        # 0x14000e0d0
   14000362f:	mov    rcx,rax
   140003632:	mov    rdx,QWORD PTR [rax]
   140003635:	call   QWORD PTR [rdx+0x10]
   140003638:	and    QWORD PTR [rsi],0x0
   14000363c:	add    rdi,0x8
   140003640:	cmp    rdi,QWORD PTR [rbx+0x18]
   140003644:	jb     0x140003615
   140003646:	lea    rcx,[rbx+0x20]
   14000364a:	call   QWORD PTR [rip+0xaa60]        # 0x14000e0b0
   140003650:	and    DWORD PTR [rbx],0x0
   140003653:	mov    rbx,QWORD PTR [rsp+0x30]
   140003658:	mov    rsi,QWORD PTR [rsp+0x38]
   14000365d:	add    rsp,0x20
   140003661:	pop    rdi
   140003662:	ret    
   140003663:	int3   
   140003664:	int3   
   140003665:	int3   
   140003666:	int3   
   140003667:	int3   
   140003668:	int3   
   140003669:	int3   
   14000366a:	int3   
   14000366b:	int3   
   14000366c:	mov    QWORD PTR [rsp+0x8],rbx
   140003671:	mov    QWORD PTR [rsp+0x10],rbp
   140003676:	mov    QWORD PTR [rsp+0x18],rsi
   14000367b:	push   rdi
   14000367c:	sub    rsp,0x20
   140003680:	lea    rsi,[rcx+0x8]
   140003684:	mov    rdi,rcx
   140003687:	cmp    DWORD PTR [rsi],0x0
   14000368a:	je     0x1400036f7
   14000368c:	cmp    QWORD PTR [rcx+0x10],0x0
   140003691:	je     0x1400036db
   140003693:	test   rsi,rsi
   140003696:	jne    0x1400036ad
   140003698:	lea    edx,[rsi+0x1]
   14000369b:	xor    r9d,r9d
   14000369e:	xor    r8d,r8d
   1400036a1:	mov    ecx,0xc0000005
   1400036a6:	call   QWORD PTR [rip+0xaa1c]        # 0x14000e0c8
   1400036ac:	int3   
   1400036ad:	mov    rbp,QWORD PTR [rsi+0x8]
   1400036b1:	test   rbp,rbp
   1400036b4:	je     0x1400036d1
   1400036b6:	mov    rcx,QWORD PTR [rbp+0x8]
   1400036ba:	call   QWORD PTR [rbp+0x0]
   1400036bd:	mov    rbx,QWORD PTR [rbp+0x10]
   1400036c1:	mov    rcx,rbp
   1400036c4:	call   0x140003930
   1400036c9:	mov    rbp,rbx
   1400036cc:	test   rbx,rbx
   1400036cf:	jne    0x1400036b6
   1400036d1:	and    QWORD PTR [rsi+0x8],0x0
   1400036d6:	and    QWORD PTR [rdi+0x10],0x0
   1400036db:	mov    rcx,QWORD PTR [rdi+0x40]
   1400036df:	test   rcx,rcx
   1400036e2:	je     0x1400036ea
   1400036e4:	mov    rax,QWORD PTR [rcx]
   1400036e7:	call   QWORD PTR [rax+0x10]
   1400036ea:	lea    rcx,[rdi+0x18]
   1400036ee:	call   QWORD PTR [rip+0xa9bc]        # 0x14000e0b0
   1400036f4:	and    DWORD PTR [rsi],0x0
   1400036f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036fc:	mov    rbp,QWORD PTR [rsp+0x38]
   140003701:	mov    rsi,QWORD PTR [rsp+0x40]
   140003706:	add    rsp,0x20
   14000370a:	pop    rdi
   14000370b:	ret    
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	int3   
   140003711:	int3   
   140003712:	int3   
   140003713:	int3   
   140003714:	sub    rsp,0x28
   140003718:	mov    ecx,0x8007000e
   14000371d:	call   0x140003774
   140003722:	int3   
   140003723:	int3   
   140003724:	int3   
   140003725:	int3   
   140003726:	int3   
   140003727:	int3   
   140003728:	int3   
   140003729:	int3   
   14000372a:	int3   
   14000372b:	int3   
   14000372c:	sub    rsp,0x28
   140003730:	call   QWORD PTR [rip+0xa96a]        # 0x14000e0a0
   140003736:	mov    ecx,eax
   140003738:	movzx  eax,ax
   14000373b:	or     eax,0x80070000
   140003740:	test   ecx,ecx
   140003742:	cmovle eax,ecx
   140003745:	add    rsp,0x28
   140003749:	ret    
   14000374a:	int3   
   14000374b:	int3   
   14000374c:	int3   
   14000374d:	int3   
   14000374e:	int3   
   14000374f:	int3   
   140003750:	sub    rsp,0x28
   140003754:	call   QWORD PTR [rip+0xa946]        # 0x14000e0a0
   14000375a:	movzx  ecx,ax
   14000375d:	or     ecx,0x80070000
   140003763:	test   eax,eax
   140003765:	cmovle ecx,eax
   140003768:	call   0x140003774
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	int3   
   140003771:	int3   
   140003772:	int3   
   140003773:	int3   
   140003774:	sub    rsp,0x28
   140003778:	mov    DWORD PTR [rsp+0x30],ecx
   14000377c:	lea    rdx,[rip+0xe875]        # 0x140011ff8
   140003783:	lea    rcx,[rsp+0x30]
   140003788:	call   0x140006eb0
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	int3   
   140003791:	int3   
   140003792:	int3   
   140003793:	int3   
   140003794:	mov    QWORD PTR [rsp+0x10],rbx
   140003799:	mov    QWORD PTR [rsp+0x18],rsi
   14000379e:	push   rdi
   14000379f:	sub    rsp,0x30
   1400037a3:	call   0x1400056a0
   1400037a8:	movzx  esi,ax
   1400037ab:	mov    ecx,0x2
   1400037b0:	call   0x140005354
   1400037b5:	mov    eax,0x5a4d
   1400037ba:	lea    rdi,[rip+0xffffffffffffc83f]        # 0x140000000
   1400037c1:	cmp    WORD PTR [rip+0xffffffffffffc838],ax        # 0x140000000
   1400037c8:	je     0x1400037ce
   1400037ca:	xor    ebx,ebx
   1400037cc:	jmp    0x1400037ff
   1400037ce:	movsxd rax,DWORD PTR [rip+0xffffffffffffc867]        # 0x14000003c
   1400037d5:	add    rax,rdi
   1400037d8:	cmp    DWORD PTR [rax],0x4550
   1400037de:	jne    0x1400037ca
   1400037e0:	mov    ecx,0x20b
   1400037e5:	cmp    WORD PTR [rax+0x18],cx
   1400037e9:	jne    0x1400037ca
   1400037eb:	xor    ebx,ebx
   1400037ed:	cmp    DWORD PTR [rax+0x84],0xe
   1400037f4:	jbe    0x1400037ff
   1400037f6:	cmp    DWORD PTR [rax+0xf8],ebx
   1400037fc:	setne  bl
   1400037ff:	mov    DWORD PTR [rsp+0x40],ebx
   140003803:	call   0x140004b98
   140003808:	test   eax,eax
   14000380a:	jne    0x14000382e
   14000380c:	cmp    DWORD PTR [rip+0x11459],0x1        # 0x140014c6c
   140003813:	jne    0x14000381a
   140003815:	call   0x14000489c
   14000381a:	mov    ecx,0x1c
   14000381f:	call   0x140004920
   140003824:	mov    ecx,0xff
   140003829:	call   0x1400044c8
   14000382e:	call   0x1400043cc
   140003833:	test   eax,eax
   140003835:	jne    0x140003859
   140003837:	cmp    DWORD PTR [rip+0x1142e],0x1        # 0x140014c6c
   14000383e:	jne    0x140003845
   140003840:	call   0x14000489c
   140003845:	mov    ecx,0x10
   14000384a:	call   0x140004920
   14000384f:	mov    ecx,0xff
   140003854:	call   0x1400044c8
   140003859:	call   0x14000546c
   14000385e:	nop
   14000385f:	call   0x140004bf4
   140003864:	call   QWORD PTR [rip+0xa87e]        # 0x14000e0e8
   14000386a:	mov    QWORD PTR [rip+0x130b7],rax        # 0x140016928
   140003871:	call   0x1400054ec
   140003876:	mov    QWORD PTR [rip+0x10b2b],rax        # 0x1400143a8
   14000387d:	call   0x140004f80
   140003882:	test   eax,eax
   140003884:	jns    0x140003890
   140003886:	mov    ecx,0x8
   14000388b:	call   0x1400044e4
   140003890:	call   0x140005214
   140003895:	test   eax,eax
   140003897:	jns    0x1400038a3
   140003899:	mov    ecx,0x9
   14000389e:	call   0x1400044e4
   1400038a3:	mov    ecx,0x1
   1400038a8:	call   0x14000453c
   1400038ad:	test   eax,eax
   1400038af:	je     0x1400038b8
   1400038b1:	mov    ecx,eax
   1400038b3:	call   0x1400044e4
   1400038b8:	call   0x140005798
   1400038bd:	movzx  r9d,si
   1400038c1:	mov    r8,rax
   1400038c4:	xor    edx,edx
   1400038c6:	mov    rcx,rdi
   1400038c9:	call   0x140002d64
   1400038ce:	mov    edi,eax
   1400038d0:	mov    DWORD PTR [rsp+0x20],eax
   1400038d4:	test   ebx,ebx
   1400038d6:	jne    0x1400038df
   1400038d8:	mov    ecx,eax
   1400038da:	call   0x14000488c
   1400038df:	call   0x140004528
   1400038e4:	jmp    0x1400038fd
   1400038e6:	mov    edi,eax
   1400038e8:	cmp    DWORD PTR [rsp+0x40],0x0
   1400038ed:	jne    0x1400038f7
   1400038ef:	mov    ecx,eax
   1400038f1:	call   0x1400045f4
   1400038f6:	int3   
   1400038f7:	call   0x140004510
   1400038fc:	nop
   1400038fd:	mov    eax,edi
   1400038ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140003904:	mov    rsi,QWORD PTR [rsp+0x50]
   140003909:	add    rsp,0x30
   14000390d:	pop    rdi
   14000390e:	ret    
   14000390f:	int3   
   140003910:	int3   
   140003911:	int3   
   140003912:	int3   
   140003913:	int3   
   140003914:	int3   
   140003915:	int3   
   140003916:	int3   
   140003917:	int3   
   140003918:	sub    rsp,0x28
   14000391c:	call   0x1400053ac
   140003921:	add    rsp,0x28
   140003925:	jmp    0x140003794
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	jmp    0x140003aa4
   140003935:	int3   
   140003936:	int3   
   140003937:	int3   
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	int3   
   140003941:	int3   
   140003942:	int3   
   140003943:	int3   
   140003944:	int3   
   140003945:	int3   
   140003946:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003950:	cmp    rcx,QWORD PTR [rip+0xf779]        # 0x1400130d0
   140003957:	jne    0x14000396a
   140003959:	rol    rcx,0x10
   14000395d:	test   cx,0xffff
   140003962:	jne    0x140003966
   140003964:	repz ret 
   140003966:	ror    rcx,0x10
   14000396a:	jmp    0x140005a2c
   14000396f:	int3   
   140003970:	int3   
   140003971:	int3   
   140003972:	int3   
   140003973:	int3   
   140003974:	int3   
   140003975:	int3   
   140003976:	int3   
   140003977:	int3   
   140003978:	sub    rsp,0x38
   14000397c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003985:	call   0x140003c1c
   14000398a:	nop
   14000398b:	jmp    0x140003992
   14000398d:	mov    rax,QWORD PTR [rsp+0x50]
   140003992:	add    rsp,0x38
   140003996:	ret    
   140003997:	int3   
   140003998:	int3   
   140003999:	int3   
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	jmp    0x140003930
   1400039a5:	int3   
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	sub    rsp,0x28
   1400039b0:	mov    rcx,QWORD PTR [rip+0x11831]        # 0x1400151e8
   1400039b7:	call   QWORD PTR [rip+0xa713]        # 0x14000e0d0
   1400039bd:	test   rax,rax
   1400039c0:	je     0x1400039c4
   1400039c2:	call   rax
   1400039c4:	mov    ecx,0x19
   1400039c9:	call   0x140004920
   1400039ce:	mov    edx,0x1
   1400039d3:	xor    ecx,ecx
   1400039d5:	call   0x140006218
   1400039da:	call   0x14000623c
   1400039df:	int3   
   1400039e0:	int3   
   1400039e1:	int3   
   1400039e2:	int3   
   1400039e3:	int3   
   1400039e4:	int3   
   1400039e5:	int3   
   1400039e6:	int3   
   1400039e7:	int3   
   1400039e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400039ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400039f2:	push   rdi
   1400039f3:	sub    rsp,0x20
   1400039f7:	mov    rbx,rcx
   1400039fa:	cmp    rcx,0xffffffffffffffe0
   1400039fe:	ja     0x140003a7c
   140003a00:	mov    edi,0x1
   140003a05:	test   rcx,rcx
   140003a08:	cmovne rdi,rcx
   140003a0c:	mov    rcx,QWORD PTR [rip+0x11035]        # 0x140014a48
   140003a13:	test   rcx,rcx
   140003a16:	jne    0x140003a38
   140003a18:	call   0x14000489c
   140003a1d:	mov    ecx,0x1e
   140003a22:	call   0x140004920
   140003a27:	mov    ecx,0xff
   140003a2c:	call   0x1400044c8
   140003a31:	mov    rcx,QWORD PTR [rip+0x11010]        # 0x140014a48
   140003a38:	mov    r8,rdi
   140003a3b:	xor    edx,edx
   140003a3d:	call   QWORD PTR [rip+0xa72d]        # 0x14000e170
   140003a43:	mov    rsi,rax
   140003a46:	test   rax,rax
   140003a49:	jne    0x140003a77
   140003a4b:	cmp    DWORD PTR [rip+0x117a7],eax        # 0x1400151f8
   140003a51:	je     0x140003a61
   140003a53:	mov    rcx,rbx
   140003a56:	call   0x1400062a8
   140003a5b:	test   eax,eax
   140003a5d:	je     0x140003a6c
   140003a5f:	jmp    0x140003a0c
   140003a61:	call   0x140006370
   140003a66:	mov    DWORD PTR [rax],0xc
   140003a6c:	call   0x140006370
   140003a71:	mov    DWORD PTR [rax],0xc
   140003a77:	mov    rax,rsi
   140003a7a:	jmp    0x140003a8e
   140003a7c:	call   0x1400062a8
   140003a81:	call   0x140006370
   140003a86:	mov    DWORD PTR [rax],0xc
   140003a8c:	xor    eax,eax
   140003a8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a93:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a98:	add    rsp,0x20
   140003a9c:	pop    rdi
   140003a9d:	ret    
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	int3   
   140003aa1:	int3   
   140003aa2:	int3   
   140003aa3:	int3   
   140003aa4:	test   rcx,rcx
   140003aa7:	je     0x140003ae0
   140003aa9:	push   rbx
   140003aaa:	sub    rsp,0x20
   140003aae:	mov    r8,rcx
   140003ab1:	mov    rcx,QWORD PTR [rip+0x10f90]        # 0x140014a48
   140003ab8:	xor    edx,edx
   140003aba:	call   QWORD PTR [rip+0xa6b8]        # 0x14000e178
   140003ac0:	test   eax,eax
   140003ac2:	jne    0x140003adb
   140003ac4:	call   0x140006370
   140003ac9:	mov    rbx,rax
   140003acc:	call   QWORD PTR [rip+0xa5ce]        # 0x14000e0a0
   140003ad2:	mov    ecx,eax
   140003ad4:	call   0x140006398
   140003ad9:	mov    DWORD PTR [rbx],eax
   140003adb:	add    rsp,0x20
   140003adf:	pop    rbx
   140003ae0:	ret    
   140003ae1:	int3   
   140003ae2:	int3   
   140003ae3:	int3   
   140003ae4:	int3   
   140003ae5:	int3   
   140003ae6:	int3   
   140003ae7:	int3   
   140003ae8:	sub    rsp,0x28
   140003aec:	mov    rax,rdx
   140003aef:	lea    rdx,[rcx+0x11]
   140003af3:	lea    rcx,[rax+0x11]
   140003af7:	call   0x140006400
   140003afc:	test   eax,eax
   140003afe:	sete   al
   140003b01:	add    rsp,0x28
   140003b05:	ret    
   140003b06:	int3   
   140003b07:	int3   
   140003b08:	int3   
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	mov    QWORD PTR [rsp+0x8],rbx
   140003b11:	push   rdi
   140003b12:	sub    rsp,0x20
   140003b16:	lea    rax,[rip+0xa94b]        # 0x14000e468
   140003b1d:	mov    ebx,edx
   140003b1f:	mov    rdi,rcx
   140003b22:	mov    QWORD PTR [rcx],rax
   140003b25:	call   0x140006470
   140003b2a:	test   bl,0x1
   140003b2d:	je     0x140003b37
   140003b2f:	mov    rcx,rdi
   140003b32:	call   0x140003930
   140003b37:	mov    rax,rdi
   140003b3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b3f:	add    rsp,0x20
   140003b43:	pop    rdi
   140003b44:	ret    
   140003b45:	int3   
   140003b46:	int3   
   140003b47:	int3   
   140003b48:	int3   
   140003b49:	int3   
   140003b4a:	int3   
   140003b4b:	int3   
   140003b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140003b51:	mov    QWORD PTR [rsp+0x10],rsi
   140003b56:	push   rdi
   140003b57:	sub    rsp,0x20
   140003b5b:	mov    rbx,r9
   140003b5e:	mov    rsi,r8
   140003b61:	mov    rdi,rdx
   140003b64:	test   r9,r9
   140003b67:	jne    0x140003b6d
   140003b69:	xor    eax,eax
   140003b6b:	jmp    0x140003bc3
   140003b6d:	test   rcx,rcx
   140003b70:	jne    0x140003b87
   140003b72:	call   0x140006370
   140003b77:	mov    ebx,0x16
   140003b7c:	mov    DWORD PTR [rax],ebx
   140003b7e:	call   0x140006658
   140003b83:	mov    eax,ebx
   140003b85:	jmp    0x140003bc3
   140003b87:	test   r8,r8
   140003b8a:	je     0x140003b9e
   140003b8c:	cmp    rdx,rbx
   140003b8f:	jb     0x140003b9e
   140003b91:	mov    r8,rbx
   140003b94:	mov    rdx,rsi
   140003b97:	call   0x1400066d0
   140003b9c:	jmp    0x140003b69
   140003b9e:	mov    r8,rdx
   140003ba1:	xor    edx,edx
   140003ba3:	call   0x140006bd0
   140003ba8:	test   rsi,rsi
   140003bab:	je     0x140003b72
   140003bad:	cmp    rdi,rbx
   140003bb0:	jae    0x140003bbe
   140003bb2:	call   0x140006370
   140003bb7:	mov    ebx,0x22
   140003bbc:	jmp    0x140003b7c
   140003bbe:	mov    eax,0x16
   140003bc3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bc8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bcd:	add    rsp,0x20
   140003bd1:	pop    rdi
   140003bd2:	ret    
   140003bd3:	int3   
   140003bd4:	int3   
   140003bd5:	int3   
   140003bd6:	int3   
   140003bd7:	int3   
   140003bd8:	int3   
   140003bd9:	int3   
   140003bda:	int3   
   140003bdb:	int3   
   140003bdc:	rex push rbx
   140003bde:	sub    rsp,0x20
   140003be2:	mov    rbx,rcx
   140003be5:	call   0x140006d34
   140003bea:	lea    rax,[rip+0xa887]        # 0x14000e478
   140003bf1:	mov    QWORD PTR [rbx],rax
   140003bf4:	mov    rax,rbx
   140003bf7:	add    rsp,0x20
   140003bfb:	pop    rbx
   140003bfc:	ret    
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	int3   
   140003c01:	int3   
   140003c02:	int3   
   140003c03:	int3   
   140003c04:	lea    rax,[rip+0xa86d]        # 0x14000e478
   140003c0b:	mov    QWORD PTR [rcx],rax
   140003c0e:	jmp    0x140006d64
   140003c13:	int3   
   140003c14:	int3   
   140003c15:	int3   
   140003c16:	int3   
   140003c17:	int3   
   140003c18:	int3   
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	rex push rbx
   140003c1e:	sub    rsp,0x40
   140003c22:	mov    rbx,rcx
   140003c25:	jmp    0x140003c36
   140003c27:	mov    rcx,rbx
   140003c2a:	call   0x1400062a8
   140003c2f:	test   eax,eax
   140003c31:	je     0x140003c46
   140003c33:	mov    rcx,rbx
   140003c36:	call   0x1400039e8
   140003c3b:	test   rax,rax
   140003c3e:	je     0x140003c27
   140003c40:	add    rsp,0x40
   140003c44:	pop    rbx
   140003c45:	ret    
   140003c46:	lea    rax,[rip+0xa83b]        # 0x14000e488
   140003c4d:	lea    rdx,[rsp+0x58]
   140003c52:	lea    rcx,[rsp+0x20]
   140003c57:	mov    r8d,0x1
   140003c5d:	mov    QWORD PTR [rsp+0x58],rax
   140003c62:	call   0x140006d14
   140003c67:	lea    rax,[rip+0xa80a]        # 0x14000e478
   140003c6e:	lea    rdx,[rip+0xe263]        # 0x140011ed8
   140003c75:	lea    rcx,[rsp+0x20]
   140003c7a:	mov    QWORD PTR [rsp+0x20],rax
   140003c7f:	call   0x140006eb0
   140003c84:	int3   
   140003c85:	int3   
   140003c86:	int3   
   140003c87:	int3   
   140003c88:	int3   
   140003c89:	int3   
   140003c8a:	int3   
   140003c8b:	int3   
   140003c8c:	mov    QWORD PTR [rsp+0x8],rbx
   140003c91:	push   rdi
   140003c92:	sub    rsp,0x20
   140003c96:	lea    rax,[rip+0xa7db]        # 0x14000e478
   140003c9d:	mov    ebx,edx
   140003c9f:	mov    rdi,rcx
   140003ca2:	mov    QWORD PTR [rcx],rax
   140003ca5:	call   0x140006d64
   140003caa:	test   bl,0x1
   140003cad:	je     0x140003cb7
   140003caf:	mov    rcx,rdi
   140003cb2:	call   0x140003930
   140003cb7:	mov    rax,rdi
   140003cba:	mov    rbx,QWORD PTR [rsp+0x30]
   140003cbf:	add    rsp,0x20
   140003cc3:	pop    rdi
   140003cc4:	ret    
   140003cc5:	int3   
   140003cc6:	int3   
   140003cc7:	int3   
   140003cc8:	int3   
   140003cc9:	int3   
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	rex push rbx
   140003cce:	sub    rsp,0x20
   140003cd2:	mov    edx,0x8
   140003cd7:	lea    ecx,[rdx+0x18]
   140003cda:	call   0x140006fd8
   140003cdf:	mov    rcx,rax
   140003ce2:	mov    rbx,rax
   140003ce5:	call   QWORD PTR [rip+0xa47d]        # 0x14000e168
   140003ceb:	mov    QWORD PTR [rip+0x12c1e],rax        # 0x140016910
   140003cf2:	mov    QWORD PTR [rip+0x12c0f],rax        # 0x140016908
   140003cf9:	test   rbx,rbx
   140003cfc:	jne    0x140003d03
   140003cfe:	lea    eax,[rbx+0x18]
   140003d01:	jmp    0x140003d09
   140003d03:	and    QWORD PTR [rbx],0x0
   140003d07:	xor    eax,eax
   140003d09:	add    rsp,0x20
   140003d0d:	pop    rbx
   140003d0e:	ret    
   140003d0f:	int3   
   140003d10:	int3   
   140003d11:	int3   
   140003d12:	int3   
   140003d13:	int3   
   140003d14:	int3   
   140003d15:	int3   
   140003d16:	int3   
   140003d17:	int3   
   140003d18:	mov    QWORD PTR [rsp+0x8],rbx
   140003d1d:	mov    QWORD PTR [rsp+0x10],rsi
   140003d22:	mov    QWORD PTR [rsp+0x18],rdi
   140003d27:	push   r12
   140003d29:	push   r14
   140003d2b:	push   r15
   140003d2d:	sub    rsp,0x20
   140003d31:	mov    r12,rcx
   140003d34:	call   0x1400046d0
   140003d39:	nop
   140003d3a:	mov    rcx,QWORD PTR [rip+0x12bcf]        # 0x140016910
   140003d41:	call   QWORD PTR [rip+0xa389]        # 0x14000e0d0
   140003d47:	mov    r14,rax
   140003d4a:	mov    rcx,QWORD PTR [rip+0x12bb7]        # 0x140016908
   140003d51:	call   QWORD PTR [rip+0xa379]        # 0x14000e0d0
   140003d57:	mov    rbx,rax
   140003d5a:	cmp    rax,r14
   140003d5d:	jb     0x140003dfe
   140003d63:	mov    rdi,rax
   140003d66:	sub    rdi,r14
   140003d69:	lea    r15,[rdi+0x8]
   140003d6d:	cmp    r15,0x8
   140003d71:	jb     0x140003dfe
   140003d77:	mov    rcx,r14
   140003d7a:	call   0x140006f98
   140003d7f:	mov    rsi,rax
   140003d82:	cmp    rax,r15
   140003d85:	jae    0x140003ddc
   140003d87:	mov    edx,0x1000
   140003d8c:	cmp    rax,rdx
   140003d8f:	cmovb  rdx,rax
   140003d93:	add    rdx,rax
   140003d96:	cmp    rdx,rax
   140003d99:	jb     0x140003dac
   140003d9b:	mov    rcx,r14
   140003d9e:	call   0x1400070e4
   140003da3:	xor    ebx,ebx
   140003da5:	test   rax,rax
   140003da8:	jne    0x140003dc4
   140003daa:	jmp    0x140003dae
   140003dac:	xor    ebx,ebx
   140003dae:	lea    rdx,[rsi+0x20]
   140003db2:	cmp    rdx,rsi
   140003db5:	jb     0x140003e00
   140003db7:	mov    rcx,r14
   140003dba:	call   0x1400070e4
   140003dbf:	test   rax,rax
   140003dc2:	je     0x140003e00
   140003dc4:	sar    rdi,0x3
   140003dc8:	lea    rbx,[rax+rdi*8]
   140003dcc:	mov    rcx,rax
   140003dcf:	call   QWORD PTR [rip+0xa393]        # 0x14000e168
   140003dd5:	mov    QWORD PTR [rip+0x12b34],rax        # 0x140016910
   140003ddc:	mov    rcx,r12
   140003ddf:	call   QWORD PTR [rip+0xa383]        # 0x14000e168
   140003de5:	mov    QWORD PTR [rbx],rax
   140003de8:	lea    rcx,[rbx+0x8]
   140003dec:	call   QWORD PTR [rip+0xa376]        # 0x14000e168
   140003df2:	mov    QWORD PTR [rip+0x12b0f],rax        # 0x140016908
   140003df9:	mov    rbx,r12
   140003dfc:	jmp    0x140003e00
   140003dfe:	xor    ebx,ebx
   140003e00:	call   0x1400046e0
   140003e05:	mov    rax,rbx
   140003e08:	mov    rbx,QWORD PTR [rsp+0x40]
   140003e0d:	mov    rsi,QWORD PTR [rsp+0x48]
   140003e12:	mov    rdi,QWORD PTR [rsp+0x50]
   140003e17:	add    rsp,0x20
   140003e1b:	pop    r15
   140003e1d:	pop    r14
   140003e1f:	pop    r12
   140003e21:	ret    
   140003e22:	int3   
   140003e23:	int3   
   140003e24:	int3   
   140003e25:	int3   
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	sub    rsp,0x28
   140003e2c:	call   0x140003d18
   140003e31:	neg    rax
   140003e34:	sbb    eax,eax
   140003e36:	neg    eax
   140003e38:	dec    eax
   140003e3a:	add    rsp,0x28
   140003e3e:	ret    
   140003e3f:	int3   
   140003e40:	int3   
   140003e41:	int3   
   140003e42:	int3   
   140003e43:	int3   
   140003e44:	int3   
   140003e45:	int3   
   140003e46:	int3   
   140003e47:	int3   
   140003e48:	rex push rbx
   140003e4a:	sub    rsp,0x20
   140003e4e:	mov    rax,r8
   140003e51:	test   r9,r9
   140003e54:	je     0x140003e91
   140003e56:	test   rcx,rcx
   140003e59:	jne    0x140003e70
   140003e5b:	call   0x140006370
   140003e60:	mov    ebx,0x16
   140003e65:	mov    DWORD PTR [rax],ebx
   140003e67:	call   0x140006658
   140003e6c:	mov    eax,ebx
   140003e6e:	jmp    0x140003e93
   140003e70:	test   rax,rax
   140003e73:	je     0x140003e5b
   140003e75:	cmp    rdx,r9
   140003e78:	jae    0x140003e86
   140003e7a:	call   0x140006370
   140003e7f:	mov    ebx,0x22
   140003e84:	jmp    0x140003e65
   140003e86:	mov    r8,r9
   140003e89:	mov    rdx,rax
   140003e8c:	call   0x1400066d0
   140003e91:	xor    eax,eax
   140003e93:	add    rsp,0x20
   140003e97:	pop    rbx
   140003e98:	ret    
   140003e99:	int3   
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	rex push rbx
   140003ea2:	sub    rsp,0x20
   140003ea6:	and    DWORD PTR [rsp+0x40],0x0
   140003eab:	lea    r8,[rsp+0x40]
   140003eb0:	call   0x14000716c
   140003eb5:	mov    rbx,rax
   140003eb8:	test   rax,rax
   140003ebb:	jne    0x140003ed8
   140003ebd:	cmp    DWORD PTR [rsp+0x40],eax
   140003ec1:	je     0x140003ed8
   140003ec3:	call   0x140006370
   140003ec8:	test   rax,rax
   140003ecb:	je     0x140003ed8
   140003ecd:	call   0x140006370
   140003ed2:	mov    ecx,DWORD PTR [rsp+0x40]
   140003ed6:	mov    DWORD PTR [rax],ecx
   140003ed8:	mov    rax,rbx
   140003edb:	add    rsp,0x20
   140003edf:	pop    rbx
   140003ee0:	ret    
   140003ee1:	int3   
   140003ee2:	int3   
   140003ee3:	int3   
   140003ee4:	int3   
   140003ee5:	int3   
   140003ee6:	int3   
   140003ee7:	int3   
   140003ee8:	sub    rsp,0x28
   140003eec:	mov    rax,QWORD PTR [rcx]
   140003eef:	cmp    DWORD PTR [rax],0xe06d7363
   140003ef5:	jne    0x140003f13
   140003ef7:	cmp    DWORD PTR [rax+0x18],0x4
   140003efb:	jne    0x140003f13
   140003efd:	mov    ecx,DWORD PTR [rax+0x20]
   140003f00:	lea    eax,[rcx-0x19930520]
   140003f06:	cmp    eax,0x2
   140003f09:	jbe    0x140003f1a
   140003f0b:	cmp    ecx,0x1994000
   140003f11:	je     0x140003f1a
   140003f13:	xor    eax,eax
   140003f15:	add    rsp,0x28
   140003f19:	ret    
   140003f1a:	call   0x140007234
   140003f1f:	int3   
   140003f20:	int3   
   140003f21:	int3   
   140003f22:	int3   
   140003f23:	int3   
   140003f24:	int3   
   140003f25:	int3   
   140003f26:	int3   
   140003f27:	int3   
   140003f28:	sub    rsp,0x28
   140003f2c:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140003ee8
   140003f33:	call   0x140005738
   140003f38:	xor    eax,eax
   140003f3a:	add    rsp,0x28
   140003f3e:	ret    
   140003f3f:	int3   
   140003f40:	int3   
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	mov    QWORD PTR [rsp+0x8],rbx
   140003f4d:	mov    QWORD PTR [rsp+0x10],rbp
   140003f52:	mov    QWORD PTR [rsp+0x18],rsi
   140003f57:	push   rdi
   140003f58:	sub    rsp,0x20
   140003f5c:	mov    rsi,rdx
   140003f5f:	mov    edi,ecx
   140003f61:	call   0x140004284
   140003f66:	xor    r9d,r9d
   140003f69:	mov    rbx,rax
   140003f6c:	test   rax,rax
   140003f6f:	je     0x1400040fd
   140003f75:	mov    rdx,QWORD PTR [rax+0xa0]
   140003f7c:	mov    rcx,rdx
   140003f7f:	cmp    DWORD PTR [rcx],edi
   140003f81:	je     0x140003f93
   140003f83:	lea    rax,[rdx+0xc0]
   140003f8a:	add    rcx,0x10
   140003f8e:	cmp    rcx,rax
   140003f91:	jb     0x140003f7f
   140003f93:	lea    rax,[rdx+0xc0]
   140003f9a:	cmp    rcx,rax
   140003f9d:	jae    0x140003fa3
   140003f9f:	cmp    DWORD PTR [rcx],edi
   140003fa1:	je     0x140003fa6
   140003fa3:	mov    rcx,r9
   140003fa6:	test   rcx,rcx
   140003fa9:	je     0x1400040fd
   140003faf:	mov    r8,QWORD PTR [rcx+0x8]
   140003fb3:	test   r8,r8
   140003fb6:	je     0x1400040fd
   140003fbc:	cmp    r8,0x5
   140003fc0:	jne    0x140003fcf
   140003fc2:	mov    QWORD PTR [rcx+0x8],r9
   140003fc6:	lea    eax,[r8-0x4]
   140003fca:	jmp    0x1400040ff
   140003fcf:	cmp    r8,0x1
   140003fd3:	jne    0x140003fdd
   140003fd5:	or     eax,0xffffffff
   140003fd8:	jmp    0x1400040ff
   140003fdd:	mov    rbp,QWORD PTR [rbx+0xa8]
   140003fe4:	mov    QWORD PTR [rbx+0xa8],rsi
   140003feb:	cmp    DWORD PTR [rcx+0x4],0x8
   140003fef:	jne    0x1400040e7
   140003ff5:	mov    edx,0x30
   140003ffa:	mov    rax,QWORD PTR [rbx+0xa0]
   140004001:	add    rdx,0x10
   140004005:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000400a:	cmp    rdx,0xc0
   140004011:	jl     0x140003ffa
   140004013:	cmp    DWORD PTR [rcx],0xc000008e
   140004019:	mov    edi,DWORD PTR [rbx+0xb0]
   14000401f:	jne    0x140004030
   140004021:	mov    DWORD PTR [rbx+0xb0],0x83
   14000402b:	jmp    0x1400040d1
   140004030:	cmp    DWORD PTR [rcx],0xc0000090
   140004036:	jne    0x140004047
   140004038:	mov    DWORD PTR [rbx+0xb0],0x81
   140004042:	jmp    0x1400040d1
   140004047:	cmp    DWORD PTR [rcx],0xc0000091
   14000404d:	jne    0x14000405b
   14000404f:	mov    DWORD PTR [rbx+0xb0],0x84
   140004059:	jmp    0x1400040d1
   14000405b:	cmp    DWORD PTR [rcx],0xc0000093
   140004061:	jne    0x14000406f
   140004063:	mov    DWORD PTR [rbx+0xb0],0x85
   14000406d:	jmp    0x1400040d1
   14000406f:	cmp    DWORD PTR [rcx],0xc000008d
   140004075:	jne    0x140004083
   140004077:	mov    DWORD PTR [rbx+0xb0],0x82
   140004081:	jmp    0x1400040d1
   140004083:	cmp    DWORD PTR [rcx],0xc000008f
   140004089:	jne    0x140004097
   14000408b:	mov    DWORD PTR [rbx+0xb0],0x86
   140004095:	jmp    0x1400040d1
   140004097:	cmp    DWORD PTR [rcx],0xc0000092
   14000409d:	jne    0x1400040ab
   14000409f:	mov    DWORD PTR [rbx+0xb0],0x8a
   1400040a9:	jmp    0x1400040d1
   1400040ab:	cmp    DWORD PTR [rcx],0xc00002b5
   1400040b1:	jne    0x1400040bf
   1400040b3:	mov    DWORD PTR [rbx+0xb0],0x8d
   1400040bd:	jmp    0x1400040d1
   1400040bf:	cmp    DWORD PTR [rcx],0xc00002b4
   1400040c5:	jne    0x1400040d1
   1400040c7:	mov    DWORD PTR [rbx+0xb0],0x8e
   1400040d1:	mov    edx,DWORD PTR [rbx+0xb0]
   1400040d7:	mov    ecx,0x8
   1400040dc:	call   r8
   1400040df:	mov    DWORD PTR [rbx+0xb0],edi
   1400040e5:	jmp    0x1400040f1
   1400040e7:	mov    QWORD PTR [rcx+0x8],r9
   1400040eb:	mov    ecx,DWORD PTR [rcx+0x4]
   1400040ee:	call   r8
   1400040f1:	mov    QWORD PTR [rbx+0xa8],rbp
   1400040f8:	jmp    0x140003fd5
   1400040fd:	xor    eax,eax
   1400040ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140004104:	mov    rbp,QWORD PTR [rsp+0x38]
   140004109:	mov    rsi,QWORD PTR [rsp+0x40]
   14000410e:	add    rsp,0x20
   140004112:	pop    rdi
   140004113:	ret    
   140004114:	int3   
   140004115:	int3   
   140004116:	int3   
   140004117:	int3   
   140004118:	int3   
   140004119:	int3   
   14000411a:	int3   
   14000411b:	int3   
   14000411c:	test   rcx,rcx
   14000411f:	je     0x14000424e
   140004125:	mov    QWORD PTR [rsp+0x10],rbx
   14000412a:	push   rdi
   14000412b:	sub    rsp,0x20
   14000412f:	mov    rbx,rcx
   140004132:	mov    rcx,QWORD PTR [rcx+0x38]
   140004136:	test   rcx,rcx
   140004139:	je     0x140004140
   14000413b:	call   0x140003aa4
   140004140:	mov    rcx,QWORD PTR [rbx+0x48]
   140004144:	test   rcx,rcx
   140004147:	je     0x14000414e
   140004149:	call   0x140003aa4
   14000414e:	mov    rcx,QWORD PTR [rbx+0x58]
   140004152:	test   rcx,rcx
   140004155:	je     0x14000415c
   140004157:	call   0x140003aa4
   14000415c:	mov    rcx,QWORD PTR [rbx+0x68]
   140004160:	test   rcx,rcx
   140004163:	je     0x14000416a
   140004165:	call   0x140003aa4
   14000416a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000416e:	test   rcx,rcx
   140004171:	je     0x140004178
   140004173:	call   0x140003aa4
   140004178:	mov    rcx,QWORD PTR [rbx+0x78]
   14000417c:	test   rcx,rcx
   14000417f:	je     0x140004186
   140004181:	call   0x140003aa4
   140004186:	mov    rcx,QWORD PTR [rbx+0x80]
   14000418d:	test   rcx,rcx
   140004190:	je     0x140004197
   140004192:	call   0x140003aa4
   140004197:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000419e:	lea    rax,[rip+0xa2fb]        # 0x14000e4a0
   1400041a5:	cmp    rcx,rax
   1400041a8:	je     0x1400041af
   1400041aa:	call   0x140003aa4
   1400041af:	mov    edi,0xd
   1400041b4:	mov    ecx,edi
   1400041b6:	call   0x140007280
   1400041bb:	nop
   1400041bc:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400041c3:	mov    QWORD PTR [rsp+0x30],rcx
   1400041c8:	test   rcx,rcx
   1400041cb:	je     0x1400041e9
   1400041cd:	lock dec DWORD PTR [rcx]
   1400041d0:	jne    0x1400041e9
   1400041d2:	lea    rax,[rip+0xfa17]        # 0x140013bf0
   1400041d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400041de:	cmp    rcx,rax
   1400041e1:	je     0x1400041e9
   1400041e3:	call   0x140003aa4
   1400041e8:	nop
   1400041e9:	mov    ecx,edi
   1400041eb:	call   0x140007488
   1400041f0:	mov    ecx,0xc
   1400041f5:	call   0x140007280
   1400041fa:	nop
   1400041fb:	mov    rdi,QWORD PTR [rbx+0xc0]
   140004202:	test   rdi,rdi
   140004205:	je     0x140004232
   140004207:	mov    rcx,rdi
   14000420a:	call   0x1400076d8
   14000420f:	cmp    rdi,QWORD PTR [rip+0xf55a]        # 0x140013770
   140004216:	je     0x140004232
   140004218:	lea    rax,[rip+0xf561]        # 0x140013780
   14000421f:	cmp    rdi,rax
   140004222:	je     0x140004232
   140004224:	cmp    DWORD PTR [rdi],0x0
   140004227:	jne    0x140004232
   140004229:	mov    rcx,rdi
   14000422c:	call   0x14000753c
   140004231:	nop
   140004232:	mov    ecx,0xc
   140004237:	call   0x140007488
   14000423c:	mov    rcx,rbx
   14000423f:	call   0x140003aa4
   140004244:	mov    rbx,QWORD PTR [rsp+0x38]
   140004249:	add    rsp,0x20
   14000424d:	pop    rdi
   14000424e:	ret    
   14000424f:	int3   
   140004250:	int3   
   140004251:	int3   
   140004252:	int3   
   140004253:	int3   
   140004254:	int3   
   140004255:	int3   
   140004256:	int3   
   140004257:	int3   
   140004258:	rex push rbx
   14000425a:	sub    rsp,0x20
   14000425e:	call   0x140004284
   140004263:	mov    rbx,rax
   140004266:	test   rax,rax
   140004269:	jne    0x140004273
   14000426b:	lea    ecx,[rax+0x10]
   14000426e:	call   0x1400044e4
   140004273:	mov    rax,rbx
   140004276:	add    rsp,0x20
   14000427a:	pop    rbx
   14000427b:	ret    
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	int3   
   140004281:	int3   
   140004282:	int3   
   140004283:	int3   
   140004284:	mov    QWORD PTR [rsp+0x8],rbx
   140004289:	push   rdi
   14000428a:	sub    rsp,0x20
   14000428e:	call   QWORD PTR [rip+0x9e0c]        # 0x14000e0a0
   140004294:	mov    ecx,DWORD PTR [rip+0xedd2]        # 0x14001306c
   14000429a:	mov    edi,eax
   14000429c:	call   0x140005680
   1400042a1:	mov    rbx,rax
   1400042a4:	test   rax,rax
   1400042a7:	jne    0x1400042f0
   1400042a9:	lea    ecx,[rax+0x1]
   1400042ac:	mov    edx,0x470
   1400042b1:	call   0x140006fd8
   1400042b6:	mov    rbx,rax
   1400042b9:	test   rax,rax
   1400042bc:	je     0x1400042f0
   1400042be:	mov    ecx,DWORD PTR [rip+0xeda8]        # 0x14001306c
   1400042c4:	mov    rdx,rax
   1400042c7:	call   0x140005690
   1400042cc:	mov    rcx,rbx
   1400042cf:	test   eax,eax
   1400042d1:	je     0x1400042e9
   1400042d3:	xor    edx,edx
   1400042d5:	call   0x14000430c
   1400042da:	call   QWORD PTR [rip+0x9de0]        # 0x14000e0c0
   1400042e0:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400042e5:	mov    DWORD PTR [rbx],eax
   1400042e7:	jmp    0x1400042f0
   1400042e9:	call   0x140003aa4
   1400042ee:	xor    ebx,ebx
   1400042f0:	mov    ecx,edi
   1400042f2:	call   QWORD PTR [rip+0x9e88]        # 0x14000e180
   1400042f8:	mov    rax,rbx
   1400042fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140004300:	add    rsp,0x20
   140004304:	pop    rdi
   140004305:	ret    
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	mov    QWORD PTR [rsp+0x8],rbx
   140004311:	push   rdi
   140004312:	sub    rsp,0x20
   140004316:	mov    rdi,rdx
   140004319:	mov    rbx,rcx
   14000431c:	lea    rax,[rip+0xa17d]        # 0x14000e4a0
   140004323:	mov    QWORD PTR [rcx+0xa0],rax
   14000432a:	and    DWORD PTR [rcx+0x10],0x0
   14000432e:	mov    DWORD PTR [rcx+0x1c],0x1
   140004335:	mov    DWORD PTR [rcx+0xc8],0x1
   14000433f:	mov    eax,0x43
   140004344:	mov    WORD PTR [rcx+0x164],ax
   14000434b:	mov    WORD PTR [rcx+0x26a],ax
   140004352:	lea    rax,[rip+0xf897]        # 0x140013bf0
   140004359:	mov    QWORD PTR [rcx+0xb8],rax
   140004360:	mov    ecx,0xd
   140004365:	call   0x140007280
   14000436a:	nop
   14000436b:	mov    rax,QWORD PTR [rbx+0xb8]
   140004372:	lock inc DWORD PTR [rax]
   140004375:	mov    ecx,0xd
   14000437a:	call   0x140007488
   14000437f:	mov    ecx,0xc
   140004384:	call   0x140007280
   140004389:	nop
   14000438a:	mov    QWORD PTR [rbx+0xc0],rdi
   140004391:	test   rdi,rdi
   140004394:	jne    0x1400043a4
   140004396:	mov    rax,QWORD PTR [rip+0xf3d3]        # 0x140013770
   14000439d:	mov    QWORD PTR [rbx+0xc0],rax
   1400043a4:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400043ab:	call   0x1400074a8
   1400043b0:	nop
   1400043b1:	mov    ecx,0xc
   1400043b6:	call   0x140007488
   1400043bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043c0:	add    rsp,0x20
   1400043c4:	pop    rdi
   1400043c5:	ret    
   1400043c6:	int3   
   1400043c7:	int3   
   1400043c8:	int3   
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	rex push rbx
   1400043ce:	sub    rsp,0x20
   1400043d2:	call   0x140004608
   1400043d7:	call   0x140007420
   1400043dc:	test   eax,eax
   1400043de:	je     0x14000443e
   1400043e0:	lea    rcx,[rip+0xfffffffffffffd35]        # 0x14000411c
   1400043e7:	call   0x140005660
   1400043ec:	mov    DWORD PTR [rip+0xec7a],eax        # 0x14001306c
   1400043f2:	cmp    eax,0xffffffff
   1400043f5:	je     0x14000443e
   1400043f7:	mov    edx,0x470
   1400043fc:	mov    ecx,0x1
   140004401:	call   0x140006fd8
   140004406:	mov    rbx,rax
   140004409:	test   rax,rax
   14000440c:	je     0x14000443e
   14000440e:	mov    ecx,DWORD PTR [rip+0xec58]        # 0x14001306c
   140004414:	mov    rdx,rax
   140004417:	call   0x140005690
   14000441c:	test   eax,eax
   14000441e:	je     0x14000443e
   140004420:	xor    edx,edx
   140004422:	mov    rcx,rbx
   140004425:	call   0x14000430c
   14000442a:	call   QWORD PTR [rip+0x9c90]        # 0x14000e0c0
   140004430:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140004435:	mov    DWORD PTR [rbx],eax
   140004437:	mov    eax,0x1
   14000443c:	jmp    0x140004445
   14000443e:	call   0x140004454
   140004443:	xor    eax,eax
   140004445:	add    rsp,0x20
   140004449:	pop    rbx
   14000444a:	ret    
   14000444b:	int3   
   14000444c:	int3   
   14000444d:	int3   
   14000444e:	int3   
   14000444f:	int3   
   140004450:	int3   
   140004451:	int3   
   140004452:	int3   
   140004453:	int3   
   140004454:	sub    rsp,0x28
   140004458:	mov    ecx,DWORD PTR [rip+0xec0e]        # 0x14001306c
   14000445e:	cmp    ecx,0xffffffff
   140004461:	je     0x14000446f
   140004463:	call   0x140005670
   140004468:	or     DWORD PTR [rip+0xebfd],0xffffffff        # 0x14001306c
   14000446f:	add    rsp,0x28
   140004473:	jmp    0x1400072cc
   140004478:	int3   
   140004479:	int3   
   14000447a:	int3   
   14000447b:	int3   
   14000447c:	int3   
   14000447d:	int3   
   14000447e:	int3   
   14000447f:	int3   
   140004480:	rex push rbx
   140004482:	sub    rsp,0x20
   140004486:	mov    ebx,ecx
   140004488:	lea    r8,[rsp+0x38]
   14000448d:	lea    rdx,[rip+0xa0dc]        # 0x14000e570
   140004494:	xor    ecx,ecx
   140004496:	call   QWORD PTR [rip+0x9cf4]        # 0x14000e190
   14000449c:	test   eax,eax
   14000449e:	je     0x1400044bb
   1400044a0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400044a5:	lea    rdx,[rip+0xa0dc]        # 0x14000e588
   1400044ac:	call   QWORD PTR [rip+0x9ce6]        # 0x14000e198
   1400044b2:	test   rax,rax
   1400044b5:	je     0x1400044bb
   1400044b7:	mov    ecx,ebx
   1400044b9:	call   rax
   1400044bb:	add    rsp,0x20
   1400044bf:	pop    rbx
   1400044c0:	ret    
   1400044c1:	int3   
   1400044c2:	int3   
   1400044c3:	int3   
   1400044c4:	int3   
   1400044c5:	int3   
   1400044c6:	int3   
   1400044c7:	int3   
   1400044c8:	rex push rbx
   1400044ca:	sub    rsp,0x20
   1400044ce:	mov    ebx,ecx
   1400044d0:	call   0x140004480
   1400044d5:	mov    ecx,ebx
   1400044d7:	call   QWORD PTR [rip+0x9cab]        # 0x14000e188
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	int3   
   1400044e1:	int3   
   1400044e2:	int3   
   1400044e3:	int3   
   1400044e4:	rex push rbx
   1400044e6:	sub    rsp,0x20
   1400044ea:	mov    ebx,ecx
   1400044ec:	call   0x14000489c
   1400044f1:	mov    ecx,ebx
   1400044f3:	call   0x140004920
   1400044f8:	xor    r8d,r8d
   1400044fb:	mov    ecx,0xff
   140004500:	lea    edx,[r8+0x1]
   140004504:	call   0x1400046f0
   140004509:	int3   
   14000450a:	int3   
   14000450b:	int3   
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	mov    edx,0x1
   140004515:	xor    ecx,ecx
   140004517:	mov    r8d,edx
   14000451a:	jmp    0x1400046f0
   14000451f:	int3   
   140004520:	int3   
   140004521:	int3   
   140004522:	int3   
   140004523:	int3   
   140004524:	int3   
   140004525:	int3   
   140004526:	int3   
   140004527:	int3   
   140004528:	xor    edx,edx
   14000452a:	xor    ecx,ecx
   14000452c:	lea    r8d,[rdx+0x1]
   140004530:	jmp    0x1400046f0
   140004535:	int3   
   140004536:	int3   
   140004537:	int3   
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	mov    QWORD PTR [rsp+0x8],rbx
   140004541:	push   rdi
   140004542:	sub    rsp,0x20
   140004546:	cmp    QWORD PTR [rip+0x123ca],0x0        # 0x140016918
   14000454e:	mov    ebx,ecx
   140004550:	je     0x14000456a
   140004552:	lea    rcx,[rip+0x123bf]        # 0x140016918
   140004559:	call   0x140008270
   14000455e:	test   eax,eax
   140004560:	je     0x14000456a
   140004562:	mov    ecx,ebx
   140004564:	call   QWORD PTR [rip+0x123ae]        # 0x140016918
   14000456a:	call   0x140008308
   14000456f:	lea    rdx,[rip+0x9e4a]        # 0x14000e3c0
   140004576:	lea    rcx,[rip+0x9e13]        # 0x14000e390
   14000457d:	call   0x140004690
   140004582:	test   eax,eax
   140004584:	jne    0x1400045e0
   140004586:	lea    rcx,[rip+0xf1f]        # 0x1400054ac
   14000458d:	call   0x140003e28
   140004592:	lea    rbx,[rip+0x9dc7]        # 0x14000e360
   140004599:	lea    rdi,[rip+0x9de8]        # 0x14000e388
   1400045a0:	jmp    0x1400045b0
   1400045a2:	mov    rax,QWORD PTR [rbx]
   1400045a5:	test   rax,rax
   1400045a8:	je     0x1400045ac
   1400045aa:	call   rax
   1400045ac:	add    rbx,0x8
   1400045b0:	cmp    rbx,rdi
   1400045b3:	jb     0x1400045a2
   1400045b5:	cmp    QWORD PTR [rip+0x12343],0x0        # 0x140016900
   1400045bd:	je     0x1400045de
   1400045bf:	lea    rcx,[rip+0x1233a]        # 0x140016900
   1400045c6:	call   0x140008270
   1400045cb:	test   eax,eax
   1400045cd:	je     0x1400045de
   1400045cf:	xor    r8d,r8d
   1400045d2:	xor    ecx,ecx
   1400045d4:	lea    edx,[r8+0x2]
   1400045d8:	call   QWORD PTR [rip+0x12322]        # 0x140016900
   1400045de:	xor    eax,eax
   1400045e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045e5:	add    rsp,0x20
   1400045e9:	pop    rdi
   1400045ea:	ret    
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	int3   
   1400045f1:	int3   
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	xor    r8d,r8d
   1400045f7:	lea    edx,[r8+0x1]
   1400045fb:	jmp    0x1400046f0
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	rex push rbx
   14000460a:	sub    rsp,0x20
   14000460e:	xor    ecx,ecx
   140004610:	call   QWORD PTR [rip+0x9b52]        # 0x14000e168
   140004616:	mov    rcx,rax
   140004619:	mov    rbx,rax
   14000461c:	call   0x1400062e4
   140004621:	mov    rcx,rbx
   140004624:	call   0x1400065dc
   140004629:	mov    rcx,rbx
   14000462c:	call   0x140006298
   140004631:	mov    rcx,rbx
   140004634:	call   0x140008348
   140004639:	mov    rcx,rbx
   14000463c:	call   0x14000836c
   140004641:	mov    rcx,rbx
   140004644:	add    rsp,0x20
   140004648:	pop    rbx
   140004649:	jmp    0x14000725c
   14000464e:	int3   
   14000464f:	int3   
   140004650:	int3   
   140004651:	int3   
   140004652:	int3   
   140004653:	int3   
   140004654:	cmp    rcx,rdx
   140004657:	jae    0x140004686
   140004659:	mov    QWORD PTR [rsp+0x8],rbx
   14000465e:	push   rdi
   14000465f:	sub    rsp,0x20
   140004663:	mov    rdi,rdx
   140004666:	mov    rbx,rcx
   140004669:	mov    rax,QWORD PTR [rbx]
   14000466c:	test   rax,rax
   14000466f:	je     0x140004673
   140004671:	call   rax
   140004673:	add    rbx,0x8
   140004677:	cmp    rbx,rdi
   14000467a:	jb     0x140004669
   14000467c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004681:	add    rsp,0x20
   140004685:	pop    rdi
   140004686:	ret    
   140004687:	int3   
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    QWORD PTR [rsp+0x8],rbx
   140004695:	push   rdi
   140004696:	sub    rsp,0x20
   14000469a:	xor    eax,eax
   14000469c:	mov    rdi,rdx
   14000469f:	mov    rbx,rcx
   1400046a2:	cmp    rcx,rdx
   1400046a5:	jae    0x1400046be
   1400046a7:	test   eax,eax
   1400046a9:	jne    0x1400046be
   1400046ab:	mov    rcx,QWORD PTR [rbx]
   1400046ae:	test   rcx,rcx
   1400046b1:	je     0x1400046b5
   1400046b3:	call   rcx
   1400046b5:	add    rbx,0x8
   1400046b9:	cmp    rbx,rdi
   1400046bc:	jb     0x1400046a7
   1400046be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046c3:	add    rsp,0x20
   1400046c7:	pop    rdi
   1400046c8:	ret    
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	mov    ecx,0x8
   1400046d5:	jmp    0x140007280
   1400046da:	int3   
   1400046db:	int3   
   1400046dc:	int3   
   1400046dd:	int3   
   1400046de:	int3   
   1400046df:	int3   
   1400046e0:	mov    ecx,0x8
   1400046e5:	jmp    0x140007488
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400046fa:	mov    DWORD PTR [rsp+0x18],r8d
   1400046ff:	push   rdi
   140004700:	push   r12
   140004702:	push   r13
   140004704:	push   r14
   140004706:	push   r15
   140004708:	sub    rsp,0x40
   14000470c:	mov    r14d,r8d
   14000470f:	mov    ebx,edx
   140004711:	mov    r13d,ecx
   140004714:	mov    ecx,0x8
   140004719:	call   0x140007280
   14000471e:	nop
   14000471f:	cmp    DWORD PTR [rip+0xfc92],0x1        # 0x1400143b8
   140004726:	je     0x140004833
   14000472c:	mov    DWORD PTR [rip+0xfcc2],0x1        # 0x1400143f8
   140004736:	mov    BYTE PTR [rip+0xfcb7],r14b        # 0x1400143f4
   14000473d:	test   ebx,ebx
   14000473f:	jne    0x14000481f
   140004745:	mov    rcx,QWORD PTR [rip+0x121c4]        # 0x140016910
   14000474c:	call   QWORD PTR [rip+0x997e]        # 0x14000e0d0
   140004752:	mov    rsi,rax
   140004755:	mov    QWORD PTR [rsp+0x30],rax
   14000475a:	test   rax,rax
   14000475d:	je     0x14000480c
   140004763:	mov    rcx,QWORD PTR [rip+0x1219e]        # 0x140016908
   14000476a:	call   QWORD PTR [rip+0x9960]        # 0x14000e0d0
   140004770:	mov    rdi,rax
   140004773:	mov    QWORD PTR [rsp+0x20],rax
   140004778:	mov    r12,rsi
   14000477b:	mov    QWORD PTR [rsp+0x28],rsi
   140004780:	mov    r15,rax
   140004783:	mov    QWORD PTR [rsp+0x38],rax
   140004788:	sub    rdi,0x8
   14000478c:	mov    QWORD PTR [rsp+0x20],rdi
   140004791:	cmp    rdi,rsi
   140004794:	jb     0x14000480c
   140004796:	xor    ecx,ecx
   140004798:	call   QWORD PTR [rip+0x99ca]        # 0x14000e168
   14000479e:	cmp    QWORD PTR [rdi],rax
   1400047a1:	jne    0x1400047a5
   1400047a3:	jmp    0x140004788
   1400047a5:	cmp    rdi,rsi
   1400047a8:	jb     0x14000480c
   1400047aa:	mov    rcx,QWORD PTR [rdi]
   1400047ad:	call   QWORD PTR [rip+0x991d]        # 0x14000e0d0
   1400047b3:	mov    rbx,rax
   1400047b6:	xor    ecx,ecx
   1400047b8:	call   QWORD PTR [rip+0x99aa]        # 0x14000e168
   1400047be:	mov    QWORD PTR [rdi],rax
   1400047c1:	call   rbx
   1400047c3:	mov    rcx,QWORD PTR [rip+0x12146]        # 0x140016910
   1400047ca:	call   QWORD PTR [rip+0x9900]        # 0x14000e0d0
   1400047d0:	mov    rbx,rax
   1400047d3:	mov    rcx,QWORD PTR [rip+0x1212e]        # 0x140016908
   1400047da:	call   QWORD PTR [rip+0x98f0]        # 0x14000e0d0
   1400047e0:	cmp    r12,rbx
   1400047e3:	jne    0x1400047ea
   1400047e5:	cmp    r15,rax
   1400047e8:	je     0x1400047a3
   1400047ea:	mov    r12,rbx
   1400047ed:	mov    QWORD PTR [rsp+0x28],rbx
   1400047f2:	mov    rsi,rbx
   1400047f5:	mov    QWORD PTR [rsp+0x30],rbx
   1400047fa:	mov    r15,rax
   1400047fd:	mov    QWORD PTR [rsp+0x38],rax
   140004802:	mov    rdi,rax
   140004805:	mov    QWORD PTR [rsp+0x20],rax
   14000480a:	jmp    0x1400047a3
   14000480c:	lea    rdx,[rip+0x9bd5]        # 0x14000e3e8
   140004813:	lea    rcx,[rip+0x9bae]        # 0x14000e3c8
   14000481a:	call   0x140004654
   14000481f:	lea    rdx,[rip+0x9bd2]        # 0x14000e3f8
   140004826:	lea    rcx,[rip+0x9bc3]        # 0x14000e3f0
   14000482d:	call   0x140004654
   140004832:	nop
   140004833:	test   r14d,r14d
   140004836:	je     0x140004847
   140004838:	mov    ecx,0x8
   14000483d:	call   0x140007488
   140004842:	test   r14d,r14d
   140004845:	jne    0x14000486d
   140004847:	mov    DWORD PTR [rip+0xfb67],0x1        # 0x1400143b8
   140004851:	mov    ecx,0x8
   140004856:	call   0x140007488
   14000485b:	mov    ecx,r13d
   14000485e:	call   0x140004480
   140004863:	mov    ecx,r13d
   140004866:	call   QWORD PTR [rip+0x991c]        # 0x14000e188
   14000486c:	int3   
   14000486d:	mov    rbx,QWORD PTR [rsp+0x70]
   140004872:	mov    rsi,QWORD PTR [rsp+0x78]
   140004877:	add    rsp,0x40
   14000487b:	pop    r15
   14000487d:	pop    r14
   14000487f:	pop    r13
   140004881:	pop    r12
   140004883:	pop    rdi
   140004884:	ret    
   140004885:	int3   
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	xor    r8d,r8d
   14000488f:	xor    edx,edx
   140004891:	jmp    0x1400046f0
   140004896:	int3   
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	sub    rsp,0x28
   1400048a0:	mov    ecx,0x3
   1400048a5:	call   0x140005364
   1400048aa:	cmp    eax,0x1
   1400048ad:	je     0x1400048c6
   1400048af:	mov    ecx,0x3
   1400048b4:	call   0x140005364
   1400048b9:	test   eax,eax
   1400048bb:	jne    0x1400048da
   1400048bd:	cmp    DWORD PTR [rip+0xfb4c],0x1        # 0x140014410
   1400048c4:	jne    0x1400048da
   1400048c6:	mov    ecx,0xfc
   1400048cb:	call   0x140004920
   1400048d0:	mov    ecx,0xff
   1400048d5:	call   0x140004920
   1400048da:	add    rsp,0x28
   1400048de:	ret    
   1400048df:	int3   
   1400048e0:	int3   
   1400048e1:	int3   
   1400048e2:	int3   
   1400048e3:	int3   
   1400048e4:	int3   
   1400048e5:	int3   
   1400048e6:	int3   
   1400048e7:	int3   
   1400048e8:	lea    r9,[rip+0x9cb1]        # 0x14000e5a0
   1400048ef:	xor    edx,edx
   1400048f1:	mov    r8,r9
   1400048f4:	cmp    ecx,DWORD PTR [r8]
   1400048f7:	je     0x14000490b
   1400048f9:	inc    edx
   1400048fb:	add    r8,0x10
   1400048ff:	movsxd rax,edx
   140004902:	cmp    rax,0x17
   140004906:	jb     0x1400048f4
   140004908:	xor    eax,eax
   14000490a:	ret    
   14000490b:	movsxd rax,edx
   14000490e:	add    rax,rax
   140004911:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140004916:	ret    
   140004917:	int3   
   140004918:	int3   
   140004919:	int3   
   14000491a:	int3   
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	mov    QWORD PTR [rsp+0x10],rbx
   140004925:	mov    QWORD PTR [rsp+0x18],rbp
   14000492a:	mov    QWORD PTR [rsp+0x20],rsi
   14000492f:	push   rdi
   140004930:	push   r14
   140004932:	push   r15
   140004934:	sub    rsp,0x250
   14000493b:	mov    rax,QWORD PTR [rip+0xe78e]        # 0x1400130d0
   140004942:	xor    rax,rsp
   140004945:	mov    QWORD PTR [rsp+0x240],rax
   14000494d:	mov    edi,ecx
   14000494f:	call   0x1400048e8
   140004954:	xor    esi,esi
   140004956:	mov    rbx,rax
   140004959:	test   rax,rax
   14000495c:	je     0x140004afb
   140004962:	lea    ecx,[rsi+0x3]
   140004965:	call   0x140005364
   14000496a:	cmp    eax,0x1
   14000496d:	je     0x140004a90
   140004973:	lea    ecx,[rsi+0x3]
   140004976:	call   0x140005364
   14000497b:	test   eax,eax
   14000497d:	jne    0x14000498c
   14000497f:	cmp    DWORD PTR [rip+0xfa8a],0x1        # 0x140014410
   140004986:	je     0x140004a90
   14000498c:	cmp    edi,0xfc
   140004992:	je     0x140004afb
   140004998:	lea    rbp,[rip+0xfa81]        # 0x140014420
   14000499f:	mov    r15d,0x314
   1400049a5:	lea    r8,[rip+0xa694]        # 0x14000f040
   1400049ac:	mov    rcx,rbp
   1400049af:	mov    edx,r15d
   1400049b2:	call   0x14000870c
   1400049b7:	xor    ecx,ecx
   1400049b9:	test   eax,eax
   1400049bb:	jne    0x140004b7c
   1400049c1:	lea    r14,[rip+0xfa8a]        # 0x140014452
   1400049c8:	mov    r8d,0x104
   1400049ce:	mov    WORD PTR [rip+0xfc85],si        # 0x14001465a
   1400049d5:	mov    rdx,r14
   1400049d8:	call   QWORD PTR [rip+0x97da]        # 0x14000e1b8
   1400049de:	lea    edi,[r15-0x19]
   1400049e2:	test   eax,eax
   1400049e4:	jne    0x1400049ff
   1400049e6:	lea    r8,[rip+0xa68b]        # 0x14000f078
   1400049ed:	mov    edx,edi
   1400049ef:	mov    rcx,r14
   1400049f2:	call   0x14000870c
   1400049f7:	test   eax,eax
   1400049f9:	jne    0x140004b28
   1400049ff:	mov    rcx,r14
   140004a02:	call   0x140008780
   140004a07:	inc    rax
   140004a0a:	cmp    rax,0x3c
   140004a0e:	jbe    0x140004a49
   140004a10:	mov    rcx,r14
   140004a13:	call   0x140008780
   140004a18:	lea    rcx,[rbp-0x44]
   140004a1c:	lea    r8,[rip+0xa685]        # 0x14000f0a8
   140004a23:	lea    rcx,[rcx+rax*2]
   140004a27:	mov    r9d,0x3
   140004a2d:	mov    rax,rcx
   140004a30:	sub    rax,r14
   140004a33:	sar    rax,1
   140004a36:	sub    rdi,rax
   140004a39:	mov    rdx,rdi
   140004a3c:	call   0x1400087a0
   140004a41:	test   eax,eax
   140004a43:	jne    0x140004b3d
   140004a49:	lea    r8,[rip+0xa660]        # 0x14000f0b0
   140004a50:	mov    rdx,r15
   140004a53:	mov    rcx,rbp
   140004a56:	call   0x140008680
   140004a5b:	test   eax,eax
   140004a5d:	jne    0x140004b67
   140004a63:	mov    r8,rbx
   140004a66:	mov    rdx,r15
   140004a69:	mov    rcx,rbp
   140004a6c:	call   0x140008680
   140004a71:	test   eax,eax
   140004a73:	jne    0x140004b52
   140004a79:	lea    rdx,[rip+0xa640]        # 0x14000f0c0
   140004a80:	mov    r8d,0x12010
   140004a86:	mov    rcx,rbp
   140004a89:	call   0x140008874
   140004a8e:	jmp    0x140004afb
   140004a90:	mov    ecx,0xfffffff4
   140004a95:	call   QWORD PTR [rip+0x970d]        # 0x14000e1a8
   140004a9b:	mov    rdi,rax
   140004a9e:	lea    rcx,[rax-0x1]
   140004aa2:	cmp    rcx,0xfffffffffffffffd
   140004aa6:	ja     0x140004afb
   140004aa8:	mov    r8d,esi
   140004aab:	lea    rdx,[rsp+0x40]
   140004ab0:	mov    cl,BYTE PTR [rbx]
   140004ab2:	mov    BYTE PTR [rdx],cl
   140004ab4:	cmp    WORD PTR [rbx],si
   140004ab7:	je     0x140004ace
   140004ab9:	inc    r8d
   140004abc:	inc    rdx
   140004abf:	add    rbx,0x2
   140004ac3:	movsxd rax,r8d
   140004ac6:	cmp    rax,0x1f4
   140004acc:	jb     0x140004ab0
   140004ace:	lea    rcx,[rsp+0x40]
   140004ad3:	mov    BYTE PTR [rsp+0x233],sil
   140004adb:	call   0x1400085d0
   140004ae0:	lea    r9,[rsp+0x30]
   140004ae5:	lea    rdx,[rsp+0x40]
   140004aea:	mov    rcx,rdi
   140004aed:	mov    r8,rax
   140004af0:	mov    QWORD PTR [rsp+0x20],rsi
   140004af5:	call   QWORD PTR [rip+0x96b5]        # 0x14000e1b0
   140004afb:	mov    rcx,QWORD PTR [rsp+0x240]
   140004b03:	xor    rcx,rsp
   140004b06:	call   0x140003950
   140004b0b:	lea    r11,[rsp+0x250]
   140004b13:	mov    rbx,QWORD PTR [r11+0x28]
   140004b17:	mov    rbp,QWORD PTR [r11+0x30]
   140004b1b:	mov    rsi,QWORD PTR [r11+0x38]
   140004b1f:	mov    rsp,r11
   140004b22:	pop    r15
   140004b24:	pop    r14
   140004b26:	pop    rdi
   140004b27:	ret    
   140004b28:	xor    r9d,r9d
   140004b2b:	xor    r8d,r8d
   140004b2e:	xor    edx,edx
   140004b30:	xor    ecx,ecx
   140004b32:	mov    QWORD PTR [rsp+0x20],rsi
   140004b37:	call   0x14000667c
   140004b3c:	int3   
   140004b3d:	xor    r9d,r9d
   140004b40:	xor    r8d,r8d
   140004b43:	xor    edx,edx
   140004b45:	xor    ecx,ecx
   140004b47:	mov    QWORD PTR [rsp+0x20],rsi
   140004b4c:	call   0x14000667c
   140004b51:	int3   
   140004b52:	xor    r9d,r9d
   140004b55:	xor    r8d,r8d
   140004b58:	xor    edx,edx
   140004b5a:	xor    ecx,ecx
   140004b5c:	mov    QWORD PTR [rsp+0x20],rsi
   140004b61:	call   0x14000667c
   140004b66:	int3   
   140004b67:	xor    r9d,r9d
   140004b6a:	xor    r8d,r8d
   140004b6d:	xor    edx,edx
   140004b6f:	xor    ecx,ecx
   140004b71:	mov    QWORD PTR [rsp+0x20],rsi
   140004b76:	call   0x14000667c
   140004b7b:	int3   
   140004b7c:	xor    r9d,r9d
   140004b7f:	xor    r8d,r8d
   140004b82:	xor    edx,edx
   140004b84:	mov    QWORD PTR [rsp+0x20],rsi
   140004b89:	call   0x14000667c
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	int3   
   140004b91:	int3   
   140004b92:	int3   
   140004b93:	int3   
   140004b94:	int3   
   140004b95:	int3   
   140004b96:	int3   
   140004b97:	int3   
   140004b98:	sub    rsp,0x28
   140004b9c:	call   QWORD PTR [rip+0x961e]        # 0x14000e1c0
   140004ba2:	xor    ecx,ecx
   140004ba4:	test   rax,rax
   140004ba7:	mov    QWORD PTR [rip+0xfe9a],rax        # 0x140014a48
   140004bae:	setne  cl
   140004bb1:	mov    eax,ecx
   140004bb3:	add    rsp,0x28
   140004bb7:	ret    
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	sub    rsp,0x28
   140004bc4:	lea    rdx,[rip+0x59]        # 0x140004c24
   140004bcb:	lea    rcx,[rip+0xfe7e]        # 0x140014a50
   140004bd2:	xor    r9d,r9d
   140004bd5:	xor    r8d,r8d
   140004bd8:	call   QWORD PTR [rip+0x95f2]        # 0x14000e1d0
   140004bde:	neg    eax
   140004be0:	sbb    eax,eax
   140004be2:	neg    eax
   140004be4:	dec    eax
   140004be6:	add    rsp,0x28
   140004bea:	ret    
   140004beb:	int3   
   140004bec:	int3   
   140004bed:	int3   
   140004bee:	int3   
   140004bef:	int3   
   140004bf0:	int3   
   140004bf1:	int3   
   140004bf2:	int3   
   140004bf3:	int3   
   140004bf4:	sub    rsp,0x28
   140004bf8:	lea    rcx,[rip+0x11b01]        # 0x140016700
   140004bff:	xor    edx,edx
   140004c01:	mov    r8d,0x200
   140004c07:	call   0x140006bd0
   140004c0c:	mov    DWORD PTR [rip+0x11aca],0x3        # 0x1400166e0
   140004c16:	add    rsp,0x28
   140004c1a:	ret    
   140004c1b:	int3   
   140004c1c:	int3   
   140004c1d:	int3   
   140004c1e:	int3   
   140004c1f:	int3   
   140004c20:	int3   
   140004c21:	int3   
   140004c22:	int3   
   140004c23:	int3   
   140004c24:	mov    rax,rsp
   140004c27:	mov    QWORD PTR [rax+0x8],rbx
   140004c2b:	mov    QWORD PTR [rax+0x10],rsi
   140004c2f:	mov    QWORD PTR [rax+0x18],rdi
   140004c33:	mov    QWORD PTR [rax+0x20],r12
   140004c37:	push   r13
   140004c39:	push   r14
   140004c3b:	push   r15
   140004c3d:	sub    rsp,0xc0
   140004c44:	mov    QWORD PTR [rsp+0x38],rsp
   140004c49:	mov    ecx,0xb
   140004c4e:	call   0x140007280
   140004c53:	nop
   140004c54:	xor    r12d,r12d
   140004c57:	cmp    QWORD PTR [rip+0x11aa2],r12        # 0x140016700
   140004c5e:	je     0x140004c7b
   140004c60:	lea    rdx,[rip+0xa]        # 0x140004c71
   140004c67:	mov    rcx,rsp
   140004c6a:	call   0x140008b80
   140004c6f:	nop
   140004c70:	nop
   140004c71:	mov    eax,0x1
   140004c76:	jmp    0x140004f56
   140004c7b:	mov    edi,0x58
   140004c80:	mov    edx,edi
   140004c82:	lea    r13d,[rdi-0x38]
   140004c86:	mov    ecx,r13d
   140004c89:	call   0x140006fd8
   140004c8e:	mov    rcx,rax
   140004c91:	mov    QWORD PTR [rsp+0x28],rax
   140004c96:	test   rax,rax
   140004c99:	jne    0x140004cb5
   140004c9b:	lea    rdx,[rip+0xc]        # 0x140004cae
   140004ca2:	mov    rcx,QWORD PTR [rsp+0x38]
   140004ca7:	call   0x140008b80
   140004cac:	nop
   140004cad:	nop
   140004cae:	xor    eax,eax
   140004cb0:	jmp    0x140004f56
   140004cb5:	mov    QWORD PTR [rip+0x11a44],rax        # 0x140016700
   140004cbc:	mov    DWORD PTR [rip+0x11a1d],r13d        # 0x1400166e0
   140004cc3:	add    rax,0xb00
   140004cc9:	cmp    rcx,rax
   140004ccc:	jae    0x140004d07
   140004cce:	mov    WORD PTR [rcx+0x8],0xa00
   140004cd4:	or     QWORD PTR [rcx],0xffffffffffffffff
   140004cd8:	mov    DWORD PTR [rcx+0xc],r12d
   140004cdc:	and    BYTE PTR [rcx+0x38],0x80
   140004ce0:	mov    al,BYTE PTR [rcx+0x38]
   140004ce3:	and    al,0x7f
   140004ce5:	mov    BYTE PTR [rcx+0x38],al
   140004ce8:	mov    WORD PTR [rcx+0x39],0xa0a
   140004cee:	mov    DWORD PTR [rcx+0x50],r12d
   140004cf2:	mov    BYTE PTR [rcx+0x4c],r12b
   140004cf6:	add    rcx,rdi
   140004cf9:	mov    QWORD PTR [rsp+0x28],rcx
   140004cfe:	mov    rax,QWORD PTR [rip+0x119fb]        # 0x140016700
   140004d05:	jmp    0x140004cc3
   140004d07:	lea    rcx,[rsp+0x50]
   140004d0c:	call   QWORD PTR [rip+0x94c6]        # 0x14000e1d8
   140004d12:	cmp    WORD PTR [rsp+0x92],r12w
   140004d1b:	je     0x140004e61
   140004d21:	mov    rax,QWORD PTR [rsp+0x98]
   140004d29:	test   rax,rax
   140004d2c:	je     0x140004e61
   140004d32:	lea    r14,[rax+0x4]
   140004d36:	mov    QWORD PTR [rsp+0x48],r14
   140004d3b:	movsxd rsi,DWORD PTR [rax]
   140004d3e:	add    rsi,r14
   140004d41:	mov    QWORD PTR [rsp+0x40],rsi
   140004d46:	mov    r15d,0x800
   140004d4c:	cmp    DWORD PTR [rax],r15d
   140004d4f:	cmovl  r15d,DWORD PTR [rax]
   140004d53:	mov    ebx,0x1
   140004d58:	mov    DWORD PTR [rsp+0x30],ebx
   140004d5c:	cmp    DWORD PTR [rip+0x1197d],r15d        # 0x1400166e0
   140004d63:	jge    0x140004dd8
   140004d65:	mov    rdx,rdi
   140004d68:	mov    rcx,r13
   140004d6b:	call   0x140006fd8
   140004d70:	mov    rcx,rax
   140004d73:	mov    QWORD PTR [rsp+0x28],rax
   140004d78:	test   rax,rax
   140004d7b:	jne    0x140004d86
   140004d7d:	mov    r15d,DWORD PTR [rip+0x1195c]        # 0x1400166e0
   140004d84:	jmp    0x140004dd8
   140004d86:	movsxd rdx,ebx
   140004d89:	lea    r8,[rip+0x11970]        # 0x140016700
   140004d90:	mov    QWORD PTR [r8+rdx*8],rax
   140004d94:	add    DWORD PTR [rip+0x11945],r13d        # 0x1400166e0
   140004d9b:	mov    rax,QWORD PTR [r8+rdx*8]
   140004d9f:	add    rax,0xb00
   140004da5:	cmp    rcx,rax
   140004da8:	jae    0x140004dd4
   140004daa:	mov    WORD PTR [rcx+0x8],0xa00
   140004db0:	or     QWORD PTR [rcx],0xffffffffffffffff
   140004db4:	mov    DWORD PTR [rcx+0xc],r12d
   140004db8:	and    BYTE PTR [rcx+0x38],0x80
   140004dbc:	mov    WORD PTR [rcx+0x39],0xa0a
   140004dc2:	mov    DWORD PTR [rcx+0x50],r12d
   140004dc6:	mov    BYTE PTR [rcx+0x4c],r12b
   140004dca:	add    rcx,rdi
   140004dcd:	mov    QWORD PTR [rsp+0x28],rcx
   140004dd2:	jmp    0x140004d9b
   140004dd4:	inc    ebx
   140004dd6:	jmp    0x140004d58
   140004dd8:	mov    edi,r12d
   140004ddb:	mov    DWORD PTR [rsp+0x20],r12d
   140004de0:	lea    r13,[rip+0x11919]        # 0x140016700
   140004de7:	cmp    edi,r15d
   140004dea:	jge    0x140004e61
   140004dec:	mov    rcx,QWORD PTR [rsi]
   140004def:	lea    rax,[rcx+0x2]
   140004df3:	cmp    rax,0x1
   140004df7:	jbe    0x140004e48
   140004df9:	test   BYTE PTR [r14],0x1
   140004dfd:	je     0x140004e48
   140004dff:	test   BYTE PTR [r14],0x8
   140004e03:	jne    0x140004e0f
   140004e05:	call   QWORD PTR [rip+0x93bd]        # 0x14000e1c8
   140004e0b:	test   eax,eax
   140004e0d:	je     0x140004e48
   140004e0f:	movsxd rbx,edi
   140004e12:	mov    rax,rbx
   140004e15:	sar    rax,0x5
   140004e19:	and    ebx,0x1f
   140004e1c:	imul   rbx,rbx,0x58
   140004e20:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   140004e25:	mov    QWORD PTR [rsp+0x28],rbx
   140004e2a:	mov    rax,QWORD PTR [rsi]
   140004e2d:	mov    QWORD PTR [rbx],rax
   140004e30:	mov    al,BYTE PTR [r14]
   140004e33:	mov    BYTE PTR [rbx+0x8],al
   140004e36:	lea    rcx,[rbx+0x10]
   140004e3a:	mov    edx,0xfa0
   140004e3f:	call   QWORD PTR [rip+0x9263]        # 0x14000e0a8
   140004e45:	inc    DWORD PTR [rbx+0xc]
   140004e48:	inc    edi
   140004e4a:	mov    DWORD PTR [rsp+0x20],edi
   140004e4e:	inc    r14
   140004e51:	mov    QWORD PTR [rsp+0x48],r14
   140004e56:	add    rsi,0x8
   140004e5a:	mov    QWORD PTR [rsp+0x40],rsi
   140004e5f:	jmp    0x140004de7
   140004e61:	mov    edi,r12d
   140004e64:	mov    DWORD PTR [rsp+0x20],r12d
   140004e69:	mov    r15,0xfffffffffffffffe
   140004e70:	cmp    edi,0x3
   140004e73:	jge    0x140004f47
   140004e79:	movsxd r14,edi
   140004e7c:	mov    rbx,r14
   140004e7f:	imul   rbx,rbx,0x58
   140004e83:	add    rbx,QWORD PTR [rip+0x11876]        # 0x140016700
   140004e8a:	mov    QWORD PTR [rsp+0x28],rbx
   140004e8f:	mov    rax,QWORD PTR [rbx]
   140004e92:	add    rax,0x2
   140004e96:	cmp    rax,0x1
   140004e9a:	jbe    0x140004eac
   140004e9c:	movsx  eax,BYTE PTR [rbx+0x8]
   140004ea0:	bts    eax,0x7
   140004ea4:	mov    BYTE PTR [rbx+0x8],al
   140004ea7:	jmp    0x140004f3c
   140004eac:	mov    BYTE PTR [rbx+0x8],0x81
   140004eb0:	lea    eax,[rdi-0x1]
   140004eb3:	neg    eax
   140004eb5:	sbb    ecx,ecx
   140004eb7:	add    ecx,0xfffffff5
   140004eba:	mov    eax,0xfffffff6
   140004ebf:	test   edi,edi
   140004ec1:	cmove  ecx,eax
   140004ec4:	call   QWORD PTR [rip+0x92de]        # 0x14000e1a8
   140004eca:	mov    rsi,rax
   140004ecd:	lea    rcx,[rax+0x1]
   140004ed1:	cmp    rcx,0x1
   140004ed5:	jbe    0x140004f1b
   140004ed7:	mov    rcx,rax
   140004eda:	call   QWORD PTR [rip+0x92e8]        # 0x14000e1c8
   140004ee0:	test   eax,eax
   140004ee2:	je     0x140004f1b
   140004ee4:	mov    QWORD PTR [rbx],rsi
   140004ee7:	movzx  eax,al
   140004eea:	cmp    eax,0x2
   140004eed:	jne    0x140004ef8
   140004eef:	movsx  eax,BYTE PTR [rbx+0x8]
   140004ef3:	or     eax,0x40
   140004ef6:	jmp    0x140004f04
   140004ef8:	cmp    eax,0x3
   140004efb:	jne    0x140004f07
   140004efd:	movsx  eax,BYTE PTR [rbx+0x8]
   140004f01:	or     eax,0x8
   140004f04:	mov    BYTE PTR [rbx+0x8],al
   140004f07:	lea    rcx,[rbx+0x10]
   140004f0b:	mov    edx,0xfa0
   140004f10:	call   QWORD PTR [rip+0x9192]        # 0x14000e0a8
   140004f16:	inc    DWORD PTR [rbx+0xc]
   140004f19:	jmp    0x140004f3c
   140004f1b:	movsx  eax,BYTE PTR [rbx+0x8]
   140004f1f:	or     eax,0x40
   140004f22:	mov    BYTE PTR [rbx+0x8],al
   140004f25:	mov    QWORD PTR [rbx],r15
   140004f28:	mov    rax,QWORD PTR [rip+0x107a1]        # 0x1400156d0
   140004f2f:	test   rax,rax
   140004f32:	je     0x140004f3c
   140004f34:	mov    rax,QWORD PTR [rax+r14*8]
   140004f38:	mov    DWORD PTR [rax+0x1c],r15d
   140004f3c:	inc    edi
   140004f3e:	mov    DWORD PTR [rsp+0x20],edi
   140004f42:	jmp    0x140004e70
   140004f47:	mov    ecx,0xb
   140004f4c:	call   0x140007488
   140004f51:	mov    eax,0x1
   140004f56:	lea    r11,[rsp+0xc0]
   140004f5e:	mov    rbx,QWORD PTR [r11+0x20]
   140004f62:	mov    rsi,QWORD PTR [r11+0x28]
   140004f66:	mov    rdi,QWORD PTR [r11+0x30]
   140004f6a:	mov    r12,QWORD PTR [r11+0x38]
   140004f6e:	mov    rsp,r11
   140004f71:	pop    r15
   140004f73:	pop    r14
   140004f75:	pop    r13
   140004f77:	ret    
   140004f78:	int3   
   140004f79:	int3   
   140004f7a:	int3   
   140004f7b:	int3   
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	mov    QWORD PTR [rsp+0x18],rbx
   140004f85:	push   rbp
   140004f86:	push   rsi
   140004f87:	push   rdi
   140004f88:	sub    rsp,0x30
   140004f8c:	lea    rdi,[rip+0xfacd]        # 0x140014a60
   140004f93:	xor    ebp,ebp
   140004f95:	mov    r8d,0x104
   140004f9b:	mov    rdx,rdi
   140004f9e:	xor    ecx,ecx
   140004fa0:	mov    WORD PTR [rip+0xfcc1],bp        # 0x140014c68
   140004fa7:	call   QWORD PTR [rip+0x920b]        # 0x14000e1b8
   140004fad:	mov    rbx,QWORD PTR [rip+0x11974]        # 0x140016928
   140004fb4:	mov    QWORD PTR [rip+0xf42d],rdi        # 0x1400143e8
   140004fbb:	test   rbx,rbx
   140004fbe:	je     0x140004fc5
   140004fc0:	cmp    WORD PTR [rbx],bp
   140004fc3:	jne    0x140004fc8
   140004fc5:	mov    rbx,rdi
   140004fc8:	lea    rax,[rsp+0x58]
   140004fcd:	lea    r9,[rsp+0x50]
   140004fd2:	xor    r8d,r8d
   140004fd5:	xor    edx,edx
   140004fd7:	mov    rcx,rbx
   140004fda:	mov    QWORD PTR [rsp+0x20],rax
   140004fdf:	call   0x140005074
   140004fe4:	movsxd rsi,DWORD PTR [rsp+0x50]
   140004fe9:	movabs rax,0x1fffffffffffffff
   140004ff3:	cmp    rsi,rax
   140004ff6:	jae    0x14000505d
   140004ff8:	movsxd rax,DWORD PTR [rsp+0x58]
   140004ffd:	movabs rcx,0x7fffffffffffffff
   140005007:	cmp    rax,rcx
   14000500a:	jae    0x14000505d
   14000500c:	lea    rcx,[rax+rsi*4]
   140005010:	add    rax,rax
   140005013:	add    rcx,rcx
   140005016:	cmp    rcx,rax
   140005019:	jb     0x14000505d
   14000501b:	call   0x140007060
   140005020:	mov    rdi,rax
   140005023:	test   rax,rax
   140005026:	je     0x14000505d
   140005028:	lea    r8,[rax+rsi*8]
   14000502c:	lea    rax,[rsp+0x58]
   140005031:	lea    r9,[rsp+0x50]
   140005036:	mov    rdx,rdi
   140005039:	mov    rcx,rbx
   14000503c:	mov    QWORD PTR [rsp+0x20],rax
   140005041:	call   0x140005074
   140005046:	mov    eax,DWORD PTR [rsp+0x50]
   14000504a:	mov    QWORD PTR [rip+0xf377],rdi        # 0x1400143c8
   140005051:	dec    eax
   140005053:	mov    DWORD PTR [rip+0xf363],eax        # 0x1400143bc
   140005059:	xor    eax,eax
   14000505b:	jmp    0x140005060
   14000505d:	or     eax,0xffffffff
   140005060:	mov    rbx,QWORD PTR [rsp+0x60]
   140005065:	add    rsp,0x30
   140005069:	pop    rdi
   14000506a:	pop    rsi
   14000506b:	pop    rbp
   14000506c:	ret    
   14000506d:	int3   
   14000506e:	int3   
   14000506f:	int3   
   140005070:	int3   
   140005071:	int3   
   140005072:	int3   
   140005073:	int3   
   140005074:	mov    rax,rsp
   140005077:	mov    QWORD PTR [rax+0x8],rbx
   14000507b:	mov    QWORD PTR [rax+0x10],rsi
   14000507f:	mov    QWORD PTR [rax+0x18],rdi
   140005083:	mov    QWORD PTR [rax+0x20],r12
   140005087:	push   r15
   140005089:	mov    r11,QWORD PTR [rsp+0x30]
   14000508e:	xor    esi,esi
   140005090:	mov    rbx,r9
   140005093:	mov    DWORD PTR [r11],esi
   140005096:	mov    r10,rdx
   140005099:	mov    DWORD PTR [r9],0x1
   1400050a0:	test   rdx,rdx
   1400050a3:	je     0x1400050ac
   1400050a5:	mov    QWORD PTR [rdx],r8
   1400050a8:	add    r10,0x8
   1400050ac:	mov    edx,esi
   1400050ae:	mov    r12d,0x22
   1400050b4:	cmp    WORD PTR [rcx],r12w
   1400050b8:	jne    0x1400050cd
   1400050ba:	test   edx,edx
   1400050bc:	mov    eax,esi
   1400050be:	sete   al
   1400050c1:	add    rcx,0x2
   1400050c5:	mov    edx,eax
   1400050c7:	movzx  eax,r12w
   1400050cb:	jmp    0x1400050ec
   1400050cd:	inc    DWORD PTR [r11]
   1400050d0:	test   r8,r8
   1400050d3:	je     0x1400050e0
   1400050d5:	movzx  eax,WORD PTR [rcx]
   1400050d8:	mov    WORD PTR [r8],ax
   1400050dc:	add    r8,0x2
   1400050e0:	movzx  eax,WORD PTR [rcx]
   1400050e3:	add    rcx,0x2
   1400050e7:	test   ax,ax
   1400050ea:	je     0x140005108
   1400050ec:	test   edx,edx
   1400050ee:	jne    0x1400050b4
   1400050f0:	cmp    ax,0x20
   1400050f4:	je     0x1400050fc
   1400050f6:	cmp    ax,0x9
   1400050fa:	jne    0x1400050b4
   1400050fc:	test   r8,r8
   1400050ff:	je     0x14000510c
   140005101:	mov    WORD PTR [r8-0x2],si
   140005106:	jmp    0x14000510c
   140005108:	sub    rcx,0x2
   14000510c:	mov    edi,esi
   14000510e:	mov    r15d,0x5c
   140005114:	cmp    WORD PTR [rcx],si
   140005117:	je     0x1400051eb
   14000511d:	cmp    WORD PTR [rcx],0x20
   140005121:	je     0x140005129
   140005123:	cmp    WORD PTR [rcx],0x9
   140005127:	jne    0x14000512f
   140005129:	add    rcx,0x2
   14000512d:	jmp    0x14000511d
   14000512f:	cmp    WORD PTR [rcx],si
   140005132:	je     0x1400051eb
   140005138:	test   r10,r10
   14000513b:	je     0x140005144
   14000513d:	mov    QWORD PTR [r10],r8
   140005140:	add    r10,0x8
   140005144:	inc    DWORD PTR [rbx]
   140005146:	mov    r9d,0x1
   14000514c:	mov    edx,esi
   14000514e:	jmp    0x140005156
   140005150:	add    rcx,0x2
   140005154:	inc    edx
   140005156:	cmp    WORD PTR [rcx],r15w
   14000515a:	je     0x140005150
   14000515c:	cmp    WORD PTR [rcx],r12w
   140005160:	jne    0x14000519c
   140005162:	test   r9b,dl
   140005165:	jne    0x140005186
   140005167:	test   edi,edi
   140005169:	je     0x14000517a
   14000516b:	lea    rax,[rcx+0x2]
   14000516f:	cmp    WORD PTR [rax],r12w
   140005173:	jne    0x14000517a
   140005175:	mov    rcx,rax
   140005178:	jmp    0x140005186
   14000517a:	test   edi,edi
   14000517c:	mov    eax,esi
   14000517e:	mov    r9d,esi
   140005181:	sete   al
   140005184:	mov    edi,eax
   140005186:	shr    edx,1
   140005188:	jmp    0x14000519c
   14000518a:	dec    edx
   14000518c:	test   r8,r8
   14000518f:	je     0x140005199
   140005191:	mov    WORD PTR [r8],r15w
   140005195:	add    r8,0x2
   140005199:	inc    DWORD PTR [r11]
   14000519c:	test   edx,edx
   14000519e:	jne    0x14000518a
   1400051a0:	movzx  eax,WORD PTR [rcx]
   1400051a3:	test   ax,ax
   1400051a6:	je     0x1400051d6
   1400051a8:	test   edi,edi
   1400051aa:	jne    0x1400051b8
   1400051ac:	cmp    ax,0x20
   1400051b0:	je     0x1400051d6
   1400051b2:	cmp    ax,0x9
   1400051b6:	je     0x1400051d6
   1400051b8:	test   r9d,r9d
   1400051bb:	je     0x1400051cd
   1400051bd:	test   r8,r8
   1400051c0:	je     0x1400051ca
   1400051c2:	mov    WORD PTR [r8],ax
   1400051c6:	add    r8,0x2
   1400051ca:	inc    DWORD PTR [r11]
   1400051cd:	add    rcx,0x2
   1400051d1:	jmp    0x140005146
   1400051d6:	test   r8,r8
   1400051d9:	je     0x1400051e3
   1400051db:	mov    WORD PTR [r8],si
   1400051df:	add    r8,0x2
   1400051e3:	inc    DWORD PTR [r11]
   1400051e6:	jmp    0x140005114
   1400051eb:	test   r10,r10
   1400051ee:	je     0x1400051f3
   1400051f0:	mov    QWORD PTR [r10],rsi
   1400051f3:	inc    DWORD PTR [rbx]
   1400051f5:	mov    rsi,QWORD PTR [rsp+0x18]
   1400051fa:	mov    rdi,QWORD PTR [rsp+0x20]
   1400051ff:	mov    rbx,QWORD PTR [rsp+0x10]
   140005204:	mov    r12,QWORD PTR [rsp+0x28]
   140005209:	pop    r15
   14000520b:	ret    
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	int3   
   140005211:	int3   
   140005212:	int3   
   140005213:	int3   
   140005214:	mov    rax,rsp
   140005217:	mov    QWORD PTR [rax+0x8],rbx
   14000521b:	mov    QWORD PTR [rax+0x10],rbp
   14000521f:	mov    QWORD PTR [rax+0x18],rsi
   140005223:	mov    QWORD PTR [rax+0x20],rdi
   140005227:	push   r14
   140005229:	sub    rsp,0x30
   14000522d:	mov    rbx,QWORD PTR [rip+0xf174]        # 0x1400143a8
   140005234:	xor    r14d,r14d
   140005237:	mov    edi,r14d
   14000523a:	test   rbx,rbx
   14000523d:	jne    0x14000525f
   14000523f:	or     eax,0xffffffff
   140005242:	jmp    0x140005304
   140005247:	cmp    ax,0x3d
   14000524b:	je     0x14000524f
   14000524d:	inc    edi
   14000524f:	mov    rcx,rbx
   140005252:	call   0x140008780
   140005257:	lea    rbx,[rbx+rax*2]
   14000525b:	add    rbx,0x2
   14000525f:	movzx  eax,WORD PTR [rbx]
   140005262:	test   ax,ax
   140005265:	jne    0x140005247
   140005267:	lea    eax,[rdi+0x1]
   14000526a:	mov    edx,0x8
   14000526f:	movsxd rcx,eax
   140005272:	call   0x140006fd8
   140005277:	mov    rdi,rax
   14000527a:	mov    QWORD PTR [rip+0xf157],rax        # 0x1400143d8
   140005281:	test   rax,rax
   140005284:	je     0x14000523f
   140005286:	mov    rbx,QWORD PTR [rip+0xf11b]        # 0x1400143a8
   14000528d:	cmp    WORD PTR [rbx],r14w
   140005291:	je     0x1400052e6
   140005293:	mov    rcx,rbx
   140005296:	call   0x140008780
   14000529b:	cmp    WORD PTR [rbx],0x3d
   14000529f:	lea    esi,[rax+0x1]
   1400052a2:	je     0x1400052d2
   1400052a4:	movsxd rbp,esi
   1400052a7:	mov    edx,0x2
   1400052ac:	mov    rcx,rbp
   1400052af:	call   0x140006fd8
   1400052b4:	mov    QWORD PTR [rdi],rax
   1400052b7:	test   rax,rax
   1400052ba:	je     0x14000531f
   1400052bc:	mov    r8,rbx
   1400052bf:	mov    rdx,rbp
   1400052c2:	mov    rcx,rax
   1400052c5:	call   0x14000870c
   1400052ca:	test   eax,eax
   1400052cc:	jne    0x140005337
   1400052ce:	add    rdi,0x8
   1400052d2:	movsxd rax,esi
   1400052d5:	lea    rbx,[rbx+rax*2]
   1400052d9:	cmp    WORD PTR [rbx],r14w
   1400052dd:	jne    0x140005293
   1400052df:	mov    rbx,QWORD PTR [rip+0xf0c2]        # 0x1400143a8
   1400052e6:	mov    rcx,rbx
   1400052e9:	call   0x140003aa4
   1400052ee:	mov    QWORD PTR [rip+0xf0b3],r14        # 0x1400143a8
   1400052f5:	mov    QWORD PTR [rdi],r14
   1400052f8:	mov    DWORD PTR [rip+0x11622],0x1        # 0x140016924
   140005302:	xor    eax,eax
   140005304:	mov    rbx,QWORD PTR [rsp+0x40]
   140005309:	mov    rbp,QWORD PTR [rsp+0x48]
   14000530e:	mov    rsi,QWORD PTR [rsp+0x50]
   140005313:	mov    rdi,QWORD PTR [rsp+0x58]
   140005318:	add    rsp,0x30
   14000531c:	pop    r14
   14000531e:	ret    
   14000531f:	mov    rcx,QWORD PTR [rip+0xf0b2]        # 0x1400143d8
   140005326:	call   0x140003aa4
   14000532b:	mov    QWORD PTR [rip+0xf0a6],r14        # 0x1400143d8
   140005332:	jmp    0x14000523f
   140005337:	xor    r9d,r9d
   14000533a:	xor    r8d,r8d
   14000533d:	xor    edx,edx
   14000533f:	xor    ecx,ecx
   140005341:	mov    QWORD PTR [rsp+0x20],r14
   140005346:	call   0x14000667c
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	int3   
   140005351:	int3   
   140005352:	int3   
   140005353:	int3   
   140005354:	mov    DWORD PTR [rip+0xf0b6],ecx        # 0x140014410
   14000535a:	ret    
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	int3   
   140005361:	int3   
   140005362:	int3   
   140005363:	int3   
   140005364:	sub    rsp,0x28
   140005368:	test   ecx,ecx
   14000536a:	js     0x14000538c
   14000536c:	cmp    ecx,0x2
   14000536f:	jle    0x14000537e
   140005371:	cmp    ecx,0x3
   140005374:	jne    0x14000538c
   140005376:	mov    eax,DWORD PTR [rip+0xf8f0]        # 0x140014c6c
   14000537c:	jmp    0x14000539f
   14000537e:	mov    eax,DWORD PTR [rip+0xf8e8]        # 0x140014c6c
   140005384:	mov    DWORD PTR [rip+0xf8e2],ecx        # 0x140014c6c
   14000538a:	jmp    0x14000539f
   14000538c:	call   0x140006370
   140005391:	mov    DWORD PTR [rax],0x16
   140005397:	call   0x140006658
   14000539c:	or     eax,0xffffffff
   14000539f:	add    rsp,0x28
   1400053a3:	ret    
   1400053a4:	int3   
   1400053a5:	int3   
   1400053a6:	int3   
   1400053a7:	int3   
   1400053a8:	int3   
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	mov    QWORD PTR [rsp+0x20],rbx
   1400053b1:	push   rbp
   1400053b2:	mov    rbp,rsp
   1400053b5:	sub    rsp,0x20
   1400053b9:	mov    rax,QWORD PTR [rip+0xdd10]        # 0x1400130d0
   1400053c0:	and    QWORD PTR [rbp+0x18],0x0
   1400053c5:	movabs rbx,0x2b992ddfa232
   1400053cf:	cmp    rax,rbx
   1400053d2:	jne    0x14000544f
   1400053d4:	lea    rcx,[rbp+0x18]
   1400053d8:	call   QWORD PTR [rip+0x8e0a]        # 0x14000e1e8
   1400053de:	mov    rax,QWORD PTR [rbp+0x18]
   1400053e2:	mov    QWORD PTR [rbp+0x10],rax
   1400053e6:	call   QWORD PTR [rip+0x8cd4]        # 0x14000e0c0
   1400053ec:	mov    eax,eax
   1400053ee:	xor    QWORD PTR [rbp+0x10],rax
   1400053f2:	call   QWORD PTR [rip+0x8df8]        # 0x14000e1f0
   1400053f8:	shl    rax,0x18
   1400053fc:	xor    QWORD PTR [rbp+0x10],rax
   140005400:	call   QWORD PTR [rip+0x8dea]        # 0x14000e1f0
   140005406:	lea    rcx,[rbp+0x20]
   14000540a:	xor    QWORD PTR [rbp+0x10],rax
   14000540e:	call   QWORD PTR [rip+0x8dcc]        # 0x14000e1e0
   140005414:	mov    eax,DWORD PTR [rbp+0x20]
   140005417:	shl    rax,0x20
   14000541b:	lea    rcx,[rbp+0x10]
   14000541f:	xor    rax,QWORD PTR [rbp+0x20]
   140005423:	xor    rax,QWORD PTR [rbp+0x10]
   140005427:	xor    rax,rcx
   14000542a:	movabs rcx,0xffffffffffff
   140005434:	and    rax,rcx
   140005437:	movabs rcx,0x2b992ddfa233
   140005441:	cmp    rax,rbx
   140005444:	cmove  rax,rcx
   140005448:	mov    QWORD PTR [rip+0xdc81],rax        # 0x1400130d0
   14000544f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005454:	not    rax
   140005457:	mov    QWORD PTR [rip+0xdc7a],rax        # 0x1400130d8
   14000545e:	add    rsp,0x20
   140005462:	pop    rbp
   140005463:	ret    
   140005464:	int3   
   140005465:	int3   
   140005466:	int3   
   140005467:	int3   
   140005468:	int3   
   140005469:	int3   
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	mov    QWORD PTR [rsp+0x8],rbx
   140005471:	push   rdi
   140005472:	sub    rsp,0x20
   140005476:	lea    rbx,[rip+0xbc3b]        # 0x1400110b8
   14000547d:	lea    rdi,[rip+0xbc34]        # 0x1400110b8
   140005484:	jmp    0x140005494
   140005486:	mov    rax,QWORD PTR [rbx]
   140005489:	test   rax,rax
   14000548c:	je     0x140005490
   14000548e:	call   rax
   140005490:	add    rbx,0x8
   140005494:	cmp    rbx,rdi
   140005497:	jb     0x140005486
   140005499:	mov    rbx,QWORD PTR [rsp+0x30]
   14000549e:	add    rsp,0x20
   1400054a2:	pop    rdi
   1400054a3:	ret    
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400054b1:	push   rdi
   1400054b2:	sub    rsp,0x20
   1400054b6:	lea    rbx,[rip+0xbc0b]        # 0x1400110c8
   1400054bd:	lea    rdi,[rip+0xbc04]        # 0x1400110c8
   1400054c4:	jmp    0x1400054d4
   1400054c6:	mov    rax,QWORD PTR [rbx]
   1400054c9:	test   rax,rax
   1400054cc:	je     0x1400054d0
   1400054ce:	call   rax
   1400054d0:	add    rbx,0x8
   1400054d4:	cmp    rbx,rdi
   1400054d7:	jb     0x1400054c6
   1400054d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054de:	add    rsp,0x20
   1400054e2:	pop    rdi
   1400054e3:	ret    
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	int3   
   1400054e7:	int3   
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400054f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400054f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400054fb:	push   rdi
   1400054fc:	sub    rsp,0x20
   140005500:	call   QWORD PTR [rip+0x8cf2]        # 0x14000e1f8
   140005506:	xor    ebx,ebx
   140005508:	mov    rdi,rax
   14000550b:	test   rax,rax
   14000550e:	jne    0x14000551f
   140005510:	jmp    0x140005559
   140005512:	add    rax,0x2
   140005516:	cmp    WORD PTR [rax],bx
   140005519:	jne    0x140005512
   14000551b:	add    rax,0x2
   14000551f:	cmp    WORD PTR [rax],bx
   140005522:	jne    0x140005512
   140005524:	sub    eax,edi
   140005526:	add    eax,0x2
   140005529:	movsxd rbp,eax
   14000552c:	mov    rcx,rbp
   14000552f:	call   0x140007060
   140005534:	mov    rsi,rax
   140005537:	test   rax,rax
   14000553a:	je     0x14000554d
   14000553c:	mov    r8,rbp
   14000553f:	mov    rdx,rdi
   140005542:	mov    rcx,rax
   140005545:	call   0x1400066d0
   14000554a:	mov    rbx,rsi
   14000554d:	mov    rcx,rdi
   140005550:	call   QWORD PTR [rip+0x8caa]        # 0x14000e200
   140005556:	mov    rax,rbx
   140005559:	mov    rbx,QWORD PTR [rsp+0x30]
   14000555e:	mov    rbp,QWORD PTR [rsp+0x38]
   140005563:	mov    rsi,QWORD PTR [rsp+0x40]
   140005568:	add    rsp,0x20
   14000556c:	pop    rdi
   14000556d:	ret    
   14000556e:	int3   
   14000556f:	int3   
   140005570:	int3   
   140005571:	int3   
   140005572:	int3   
   140005573:	int3   
   140005574:	mov    QWORD PTR [rsp+0x20],rbx
   140005579:	push   rdi
   14000557a:	sub    rsp,0x40
   14000557e:	mov    rbx,rcx
   140005581:	call   QWORD PTR [rip+0x8c81]        # 0x14000e208
   140005587:	mov    rdi,QWORD PTR [rbx+0xf8]
   14000558e:	lea    rdx,[rsp+0x50]
   140005593:	xor    r8d,r8d
   140005596:	mov    rcx,rdi
   140005599:	call   QWORD PTR [rip+0x8c71]        # 0x14000e210
   14000559f:	test   rax,rax
   1400055a2:	je     0x1400055d6
   1400055a4:	and    QWORD PTR [rsp+0x38],0x0
   1400055aa:	mov    rdx,QWORD PTR [rsp+0x50]
   1400055af:	lea    rcx,[rsp+0x58]
   1400055b4:	mov    QWORD PTR [rsp+0x30],rcx
   1400055b9:	lea    rcx,[rsp+0x60]
   1400055be:	mov    r9,rax
   1400055c1:	mov    QWORD PTR [rsp+0x28],rcx
   1400055c6:	xor    ecx,ecx
   1400055c8:	mov    r8,rdi
   1400055cb:	mov    QWORD PTR [rsp+0x20],rbx
   1400055d0:	call   QWORD PTR [rip+0x8c42]        # 0x14000e218
   1400055d6:	mov    rbx,QWORD PTR [rsp+0x68]
   1400055db:	add    rsp,0x40
   1400055df:	pop    rdi
   1400055e0:	ret    
   1400055e1:	int3   
   1400055e2:	int3   
   1400055e3:	int3   
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	int3   
   1400055e7:	int3   
   1400055e8:	rex push rbx
   1400055ea:	push   rsi
   1400055eb:	push   rdi
   1400055ec:	sub    rsp,0x40
   1400055f0:	mov    rbx,rcx
   1400055f3:	call   QWORD PTR [rip+0x8c0f]        # 0x14000e208
   1400055f9:	mov    rsi,QWORD PTR [rbx+0xf8]
   140005600:	xor    edi,edi
   140005602:	lea    rdx,[rsp+0x60]
   140005607:	xor    r8d,r8d
   14000560a:	mov    rcx,rsi
   14000560d:	call   QWORD PTR [rip+0x8bfd]        # 0x14000e210
   140005613:	test   rax,rax
   140005616:	je     0x140005651
   140005618:	and    QWORD PTR [rsp+0x38],0x0
   14000561e:	mov    rdx,QWORD PTR [rsp+0x60]
   140005623:	lea    rcx,[rsp+0x68]
   140005628:	mov    QWORD PTR [rsp+0x30],rcx
   14000562d:	lea    rcx,[rsp+0x70]
   140005632:	mov    r9,rax
   140005635:	mov    QWORD PTR [rsp+0x28],rcx
   14000563a:	xor    ecx,ecx
   14000563c:	mov    r8,rsi
   14000563f:	mov    QWORD PTR [rsp+0x20],rbx
   140005644:	call   QWORD PTR [rip+0x8bce]        # 0x14000e218
   14000564a:	inc    edi
   14000564c:	cmp    edi,0x2
   14000564f:	jl     0x140005602
   140005651:	add    rsp,0x40
   140005655:	pop    rdi
   140005656:	pop    rsi
   140005657:	pop    rbx
   140005658:	ret    
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	rex.W jmp QWORD PTR [rip+0x8bc9]        # 0x14000e230
   140005667:	int3   
   140005668:	int3   
   140005669:	int3   
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	rex.W jmp QWORD PTR [rip+0x8bd1]        # 0x14000e248
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	rex.W jmp QWORD PTR [rip+0x8bb1]        # 0x14000e238
   140005687:	int3   
   140005688:	int3   
   140005689:	int3   
   14000568a:	int3   
   14000568b:	int3   
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	rex.W jmp QWORD PTR [rip+0x8ba9]        # 0x14000e240
   140005697:	int3   
   140005698:	int3   
   140005699:	int3   
   14000569a:	int3   
   14000569b:	int3   
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	sub    rsp,0x98
   1400056a7:	lea    rcx,[rsp+0x20]
   1400056ac:	call   QWORD PTR [rip+0x8b26]        # 0x14000e1d8
   1400056b2:	test   BYTE PTR [rsp+0x5c],0x1
   1400056b7:	movzx  ecx,WORD PTR [rsp+0x60]
   1400056bc:	mov    eax,0xa
   1400056c1:	cmovne eax,ecx
   1400056c4:	add    rsp,0x98
   1400056cb:	ret    
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	int3   
   1400056d1:	int3   
   1400056d2:	int3   
   1400056d3:	int3   
   1400056d4:	rex push rbx
   1400056d6:	sub    rsp,0x20
   1400056da:	mov    eax,DWORD PTR [rip+0xd9e8]        # 0x1400130c8
   1400056e0:	xor    ebx,ebx
   1400056e2:	test   eax,eax
   1400056e4:	jns    0x140005727
   1400056e6:	lea    rcx,[rip+0x9a3b]        # 0x14000f128
   1400056ed:	mov    DWORD PTR [rsp+0x30],ebx
   1400056f1:	call   QWORD PTR [rip+0x89e9]        # 0x14000e0e0
   1400056f7:	lea    rdx,[rip+0x9a12]        # 0x14000f110
   1400056fe:	mov    rcx,rax
   140005701:	call   QWORD PTR [rip+0x8a91]        # 0x14000e198
   140005707:	test   rax,rax
   14000570a:	je     0x14000571d
   14000570c:	lea    rcx,[rsp+0x30]
   140005711:	xor    edx,edx
   140005713:	call   rax
   140005715:	cmp    eax,0x7a
   140005718:	lea    eax,[rbx+0x1]
   14000571b:	je     0x14000571f
   14000571d:	mov    eax,ebx
   14000571f:	mov    DWORD PTR [rip+0xd9a3],eax        # 0x1400130c8
   140005725:	test   eax,eax
   140005727:	setg   bl
   14000572a:	mov    eax,ebx
   14000572c:	add    rsp,0x20
   140005730:	pop    rbx
   140005731:	ret    
   140005732:	int3   
   140005733:	int3   
   140005734:	int3   
   140005735:	int3   
   140005736:	int3   
   140005737:	int3   
   140005738:	rex.W jmp QWORD PTR [rip+0x8ae9]        # 0x14000e228
   14000573f:	int3   
   140005740:	int3   
   140005741:	int3   
   140005742:	int3   
   140005743:	int3   
   140005744:	int3   
   140005745:	int3   
   140005746:	int3   
   140005747:	int3   
   140005748:	rex push rbx
   14000574a:	sub    rsp,0x20
   14000574e:	mov    ebx,ecx
   140005750:	call   QWORD PTR [rip+0x8afa]        # 0x14000e250
   140005756:	mov    edx,ebx
   140005758:	mov    rcx,rax
   14000575b:	add    rsp,0x20
   14000575f:	pop    rbx
   140005760:	rex.W jmp QWORD PTR [rip+0x8af1]        # 0x14000e258
   140005767:	int3   
   140005768:	int3   
   140005769:	int3   
   14000576a:	int3   
   14000576b:	int3   
   14000576c:	int3   
   14000576d:	int3   
   14000576e:	int3   
   14000576f:	int3   
   140005770:	rex push rbx
   140005772:	sub    rsp,0x20
   140005776:	mov    rbx,rcx
   140005779:	xor    ecx,ecx
   14000577b:	call   QWORD PTR [rip+0x8aa7]        # 0x14000e228
   140005781:	mov    rcx,rbx
   140005784:	add    rsp,0x20
   140005788:	pop    rbx
   140005789:	rex.W jmp QWORD PTR [rip+0x8a90]        # 0x14000e220
   140005790:	int3   
   140005791:	int3   
   140005792:	int3   
   140005793:	int3   
   140005794:	int3   
   140005795:	int3   
   140005796:	int3   
   140005797:	int3   
   140005798:	mov    rcx,QWORD PTR [rip+0x11189]        # 0x140016928
   14000579f:	xor    r8d,r8d
   1400057a2:	lea    rax,[rip+0xb407]        # 0x140010bb0
   1400057a9:	test   rcx,rcx
   1400057ac:	mov    edx,r8d
   1400057af:	cmove  rcx,rax
   1400057b3:	cmp    WORD PTR [rcx],0x20
   1400057b7:	ja     0x1400057c3
   1400057b9:	cmp    WORD PTR [rcx],r8w
   1400057bd:	je     0x1400057eb
   1400057bf:	test   edx,edx
   1400057c1:	je     0x1400057e3
   1400057c3:	cmp    WORD PTR [rcx],0x22
   1400057c7:	jne    0x1400057d3
   1400057c9:	test   edx,edx
   1400057cb:	mov    eax,r8d
   1400057ce:	sete   al
   1400057d1:	mov    edx,eax
   1400057d3:	add    rcx,0x2
   1400057d7:	jmp    0x1400057b3
   1400057d9:	cmp    ax,0x20
   1400057dd:	ja     0x1400057eb
   1400057df:	add    rcx,0x2
   1400057e3:	movzx  eax,WORD PTR [rcx]
   1400057e6:	test   ax,ax
   1400057e9:	jne    0x1400057d9
   1400057eb:	mov    rax,rcx
   1400057ee:	ret    
   1400057ef:	int3   
   1400057f0:	int3   
   1400057f1:	int3   
   1400057f2:	int3   
   1400057f3:	int3   
   1400057f4:	int3   
   1400057f5:	int3   
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	mov    rax,rsp
   1400057fb:	mov    QWORD PTR [rax+0x8],rbx
   1400057ff:	mov    QWORD PTR [rax+0x10],rbp
   140005803:	mov    QWORD PTR [rax+0x18],rsi
   140005807:	push   rdi
   140005808:	push   r12
   14000580a:	push   r13
   14000580c:	push   r14
   14000580e:	push   r15
   140005810:	sub    rsp,0x40
   140005814:	mov    r12,QWORD PTR [r9+0x8]
   140005818:	mov    r15,QWORD PTR [r9]
   14000581b:	mov    rbx,QWORD PTR [r9+0x38]
   14000581f:	sub    r15,r12
   140005822:	test   BYTE PTR [rcx+0x4],0x66
   140005826:	mov    r14,r9
   140005829:	mov    r13,rdx
   14000582c:	mov    rbp,rcx
   14000582f:	jne    0x140005913
   140005835:	mov    esi,DWORD PTR [r9+0x48]
   140005839:	mov    QWORD PTR [rax-0x38],rcx
   14000583d:	mov    QWORD PTR [rax-0x30],r8
   140005841:	cmp    esi,DWORD PTR [rbx]
   140005843:	jae    0x1400059b3
   140005849:	mov    edi,esi
   14000584b:	add    rdi,rdi
   14000584e:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   140005852:	cmp    r15,rax
   140005855:	jb     0x140005905
   14000585b:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   14000585f:	cmp    r15,rax
   140005862:	jae    0x140005905
   140005868:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   14000586d:	je     0x140005905
   140005873:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140005878:	je     0x140005891
   14000587a:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   14000587e:	lea    rcx,[rsp+0x30]
   140005883:	mov    rdx,r13
   140005886:	add    rax,r12
   140005889:	call   rax
   14000588b:	test   eax,eax
   14000588d:	js     0x14000590c
   14000588f:	jle    0x140005905
   140005891:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140005898:	jne    0x1400058c2
   14000589a:	cmp    QWORD PTR [rip+0x9e76],0x0        # 0x14000f718
   1400058a2:	je     0x1400058c2
   1400058a4:	lea    rcx,[rip+0x9e6d]        # 0x14000f718
   1400058ab:	call   0x140008270
   1400058b0:	test   eax,eax
   1400058b2:	je     0x1400058c2
   1400058b4:	mov    edx,0x1
   1400058b9:	mov    rcx,rbp
   1400058bc:	call   QWORD PTR [rip+0x9e56]        # 0x14000f718
   1400058c2:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   1400058c6:	mov    r8d,0x1
   1400058cc:	mov    rdx,r13
   1400058cf:	add    rcx,r12
   1400058d2:	call   0x140008bb0
   1400058d7:	mov    rax,QWORD PTR [r14+0x40]
   1400058db:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   1400058df:	mov    r9d,DWORD PTR [rbp+0x0]
   1400058e3:	mov    QWORD PTR [rsp+0x28],rax
   1400058e8:	mov    rax,QWORD PTR [r14+0x28]
   1400058ec:	add    rdx,r12
   1400058ef:	mov    r8,rbp
   1400058f2:	mov    rcx,r13
   1400058f5:	mov    QWORD PTR [rsp+0x20],rax
   1400058fa:	call   QWORD PTR [rip+0x8960]        # 0x14000e260
   140005900:	call   0x140008be0
   140005905:	inc    esi
   140005907:	jmp    0x140005841
   14000590c:	xor    eax,eax
   14000590e:	jmp    0x1400059b8
   140005913:	mov    rsi,QWORD PTR [r9+0x20]
   140005917:	mov    edi,DWORD PTR [r9+0x48]
   14000591b:	sub    rsi,r12
   14000591e:	jmp    0x1400059a9
   140005923:	mov    ecx,edi
   140005925:	add    rcx,rcx
   140005928:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   14000592c:	cmp    r15,rax
   14000592f:	jb     0x1400059a7
   140005931:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   140005935:	cmp    r15,rax
   140005938:	jae    0x1400059a7
   14000593a:	test   BYTE PTR [rbp+0x4],0x20
   14000593e:	je     0x140005981
   140005940:	xor    r9d,r9d
   140005943:	test   edx,edx
   140005945:	je     0x14000597c
   140005947:	lea    r8,[rbx+0x8]
   14000594b:	mov    eax,DWORD PTR [r8-0x4]
   14000594f:	cmp    rsi,rax
   140005952:	jb     0x140005970
   140005954:	mov    eax,DWORD PTR [r8]
   140005957:	cmp    rsi,rax
   14000595a:	jae    0x140005970
   14000595c:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140005960:	cmp    DWORD PTR [r8+0x8],eax
   140005964:	jne    0x140005970
   140005966:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   14000596a:	cmp    DWORD PTR [r8+0x4],eax
   14000596e:	je     0x14000597c
   140005970:	inc    r9d
   140005973:	add    r8,0x10
   140005977:	cmp    r9d,edx
   14000597a:	jb     0x14000594b
   14000597c:	cmp    r9d,edx
   14000597f:	jne    0x1400059b3
   140005981:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140005985:	test   eax,eax
   140005987:	je     0x140005990
   140005989:	cmp    rsi,rax
   14000598c:	je     0x1400059b3
   14000598e:	jmp    0x1400059a7
   140005990:	lea    eax,[rdi+0x1]
   140005993:	mov    rdx,r13
   140005996:	mov    DWORD PTR [r14+0x48],eax
   14000599a:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   14000599f:	mov    cl,0x1
   1400059a1:	add    r8,r12
   1400059a4:	call   r8
   1400059a7:	inc    edi
   1400059a9:	mov    edx,DWORD PTR [rbx]
   1400059ab:	cmp    edi,edx
   1400059ad:	jb     0x140005923
   1400059b3:	mov    eax,0x1
   1400059b8:	lea    r11,[rsp+0x40]
   1400059bd:	mov    rbx,QWORD PTR [r11+0x30]
   1400059c1:	mov    rbp,QWORD PTR [r11+0x38]
   1400059c5:	mov    rsi,QWORD PTR [r11+0x40]
   1400059c9:	mov    rsp,r11
   1400059cc:	pop    r15
   1400059ce:	pop    r14
   1400059d0:	pop    r13
   1400059d2:	pop    r12
   1400059d4:	pop    rdi
   1400059d5:	ret    
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	rex push rbx
   1400059de:	sub    rsp,0x20
   1400059e2:	mov    rbx,rcx
   1400059e5:	call   QWORD PTR [rip+0x887d]        # 0x14000e268
   1400059eb:	mov    ecx,0x1
   1400059f0:	mov    DWORD PTR [rip+0xf7ea],eax        # 0x1400151e0
   1400059f6:	call   0x140008ddc
   1400059fb:	mov    rcx,rbx
   1400059fe:	call   0x140005770
   140005a03:	cmp    DWORD PTR [rip+0xf7d6],0x0        # 0x1400151e0
   140005a0a:	jne    0x140005a16
   140005a0c:	mov    ecx,0x1
   140005a11:	call   0x140008ddc
   140005a16:	mov    ecx,0xc0000409
   140005a1b:	add    rsp,0x20
   140005a1f:	pop    rbx
   140005a20:	jmp    0x140005748
   140005a25:	int3   
   140005a26:	int3   
   140005a27:	int3   
   140005a28:	int3   
   140005a29:	int3   
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	mov    QWORD PTR [rsp+0x8],rcx
   140005a31:	sub    rsp,0x38
   140005a35:	mov    ecx,0x17
   140005a3a:	call   0x14000ca52
   140005a3f:	test   eax,eax
   140005a41:	je     0x140005a4a
   140005a43:	mov    ecx,0x2
   140005a48:	int    0x29
   140005a4a:	lea    rcx,[rip+0xf2bf]        # 0x140014d10
   140005a51:	call   0x1400055e8
   140005a56:	mov    rax,QWORD PTR [rsp+0x38]
   140005a5b:	mov    QWORD PTR [rip+0xf3a6],rax        # 0x140014e08
   140005a62:	lea    rax,[rsp+0x38]
   140005a67:	add    rax,0x8
   140005a6b:	mov    QWORD PTR [rip+0xf336],rax        # 0x140014da8
   140005a72:	mov    rax,QWORD PTR [rip+0xf38f]        # 0x140014e08
   140005a79:	mov    QWORD PTR [rip+0xf200],rax        # 0x140014c80
   140005a80:	mov    rax,QWORD PTR [rsp+0x40]
   140005a85:	mov    QWORD PTR [rip+0xf304],rax        # 0x140014d90
   140005a8c:	mov    DWORD PTR [rip+0xf1da],0xc0000409        # 0x140014c70
   140005a96:	mov    DWORD PTR [rip+0xf1d4],0x1        # 0x140014c74
   140005aa0:	mov    DWORD PTR [rip+0xf1de],0x1        # 0x140014c88
   140005aaa:	mov    eax,0x8
   140005aaf:	imul   rax,rax,0x0
   140005ab3:	lea    rcx,[rip+0xf1d6]        # 0x140014c90
   140005aba:	mov    QWORD PTR [rcx+rax*1],0x2
   140005ac2:	mov    eax,0x8
   140005ac7:	imul   rax,rax,0x0
   140005acb:	mov    rcx,QWORD PTR [rip+0xd5fe]        # 0x1400130d0
   140005ad2:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140005ad7:	mov    eax,0x8
   140005adc:	imul   rax,rax,0x1
   140005ae0:	mov    rcx,QWORD PTR [rip+0xd5f1]        # 0x1400130d8
   140005ae7:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140005aec:	lea    rcx,[rip+0x9655]        # 0x14000f148
   140005af3:	call   0x1400059dc
   140005af8:	add    rsp,0x38
   140005afc:	ret    
   140005afd:	int3   
   140005afe:	int3   
   140005aff:	int3   
   140005b00:	int3   
   140005b01:	int3   
   140005b02:	int3   
   140005b03:	int3   
   140005b04:	mov    QWORD PTR [rsp+0x10],rbx
   140005b09:	mov    QWORD PTR [rsp+0x18],rbp
   140005b0e:	push   rsi
   140005b0f:	push   rdi
   140005b10:	push   r12
   140005b12:	push   r14
   140005b14:	push   r15
   140005b16:	sub    rsp,0x20
   140005b1a:	mov    edi,DWORD PTR [r8+0xc]
   140005b1e:	mov    r12,rcx
   140005b21:	mov    rcx,r8
   140005b24:	mov    rsi,r9
   140005b27:	mov    r14,r8
   140005b2a:	mov    r15,rdx
   140005b2d:	call   0x14000a2a4
   140005b32:	mov    r10,QWORD PTR [r12]
   140005b36:	mov    QWORD PTR [rsi],r10
   140005b39:	mov    ebp,eax
   140005b3b:	test   edi,edi
   140005b3d:	je     0x140005bb3
   140005b3f:	movsxd rax,DWORD PTR [r14+0x10]
   140005b43:	dec    edi
   140005b45:	lea    rdx,[rdi+rdi*4]
   140005b49:	lea    rbx,[rax+rdx*4]
   140005b4d:	add    rbx,QWORD PTR [r15+0x8]
   140005b51:	cmp    ebp,DWORD PTR [rbx+0x4]
   140005b54:	jle    0x140005b3b
   140005b56:	cmp    ebp,DWORD PTR [rbx+0x8]
   140005b59:	jg     0x140005b3b
   140005b5b:	mov    rcx,QWORD PTR [r15]
   140005b5e:	lea    rdx,[rsp+0x50]
   140005b63:	xor    r8d,r8d
   140005b66:	call   QWORD PTR [rip+0x86a4]        # 0x14000e210
   140005b6c:	movsxd r8,DWORD PTR [rbx+0x10]
   140005b70:	mov    r9d,DWORD PTR [rbx+0xc]
   140005b74:	add    r8,QWORD PTR [rsp+0x50]
   140005b79:	mov    r10d,DWORD PTR [rax]
   140005b7c:	xor    ecx,ecx
   140005b7e:	test   r9d,r9d
   140005b81:	je     0x140005b9a
   140005b83:	lea    rdx,[r8+0xc]
   140005b87:	movsxd rax,DWORD PTR [rdx]
   140005b8a:	cmp    rax,r10
   140005b8d:	je     0x140005b9a
   140005b8f:	inc    ecx
   140005b91:	add    rdx,0x14
   140005b95:	cmp    ecx,r9d
   140005b98:	jb     0x140005b87
   140005b9a:	cmp    ecx,r9d
   140005b9d:	jae    0x140005b3b
   140005b9f:	mov    rax,QWORD PTR [r12]
   140005ba3:	lea    rcx,[rcx+rcx*4]
   140005ba7:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140005bac:	mov    rcx,QWORD PTR [rcx+rax*1]
   140005bb0:	mov    QWORD PTR [rsi],rcx
   140005bb3:	mov    rbx,QWORD PTR [rsp+0x58]
   140005bb8:	mov    rbp,QWORD PTR [rsp+0x60]
   140005bbd:	mov    rax,rsi
   140005bc0:	add    rsp,0x20
   140005bc4:	pop    r15
   140005bc6:	pop    r14
   140005bc8:	pop    r12
   140005bca:	pop    rdi
   140005bcb:	pop    rsi
   140005bcc:	ret    
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	int3   
   140005bd1:	int3   
   140005bd2:	int3   
   140005bd3:	int3   
   140005bd4:	mov    rax,rsp
   140005bd7:	mov    QWORD PTR [rax+0x8],rbx
   140005bdb:	mov    QWORD PTR [rax+0x10],rbp
   140005bdf:	mov    QWORD PTR [rax+0x18],rsi
   140005be3:	mov    QWORD PTR [rax+0x20],rdi
   140005be7:	push   r12
   140005be9:	push   r14
   140005beb:	push   r15
   140005bed:	sub    rsp,0x20
   140005bf1:	mov    edi,DWORD PTR [rdx+0xc]
   140005bf4:	mov    rbp,QWORD PTR [rsp+0x70]
   140005bf9:	mov    rbx,rdx
   140005bfc:	mov    rcx,rbx
   140005bff:	mov    rdx,rbp
   140005c02:	mov    r12d,r9d
   140005c05:	xor    esi,esi
   140005c07:	call   0x14000a2a4
   140005c0c:	mov    r14d,eax
   140005c0f:	test   edi,edi
   140005c11:	jne    0x140005c18
   140005c13:	call   0x14000720c
   140005c18:	mov    r10,QWORD PTR [rsp+0x68]
   140005c1d:	mov    r8,QWORD PTR [rsp+0x60]
   140005c22:	mov    edx,edi
   140005c24:	or     DWORD PTR [r10],0xffffffff
   140005c28:	or     DWORD PTR [r8],0xffffffff
   140005c2c:	test   edi,edi
   140005c2e:	je     0x140005c5a
   140005c30:	movsxd r11,DWORD PTR [rbx+0x10]
   140005c34:	mov    r15,QWORD PTR [rbp+0x8]
   140005c38:	lea    r9d,[rdx-0x1]
   140005c3c:	lea    rcx,[r9+r9*4]
   140005c40:	lea    rax,[r15+rcx*4]
   140005c44:	cmp    r14d,DWORD PTR [rax+r11*1+0x4]
   140005c49:	jle    0x140005c52
   140005c4b:	cmp    r14d,DWORD PTR [rax+r11*1+0x8]
   140005c50:	jle    0x140005c5a
   140005c52:	mov    edx,r9d
   140005c55:	test   r9d,r9d
   140005c58:	jne    0x140005c38
   140005c5a:	test   edx,edx
   140005c5c:	je     0x140005c71
   140005c5e:	lea    eax,[rdx-0x1]
   140005c61:	lea    rdx,[rax+rax*4]
   140005c65:	movsxd rax,DWORD PTR [rbx+0x10]
   140005c69:	lea    rsi,[rax+rdx*4]
   140005c6d:	add    rsi,QWORD PTR [rbp+0x8]
   140005c71:	xor    edx,edx
   140005c73:	test   edi,edi
   140005c75:	je     0x140005cd7
   140005c77:	xor    r9d,r9d
   140005c7a:	movsxd rcx,DWORD PTR [rbx+0x10]
   140005c7e:	add    rcx,QWORD PTR [rbp+0x8]
   140005c82:	add    rcx,r9
   140005c85:	test   rsi,rsi
   140005c88:	je     0x140005c99
   140005c8a:	mov    eax,DWORD PTR [rsi+0x4]
   140005c8d:	cmp    DWORD PTR [rcx],eax
   140005c8f:	jle    0x140005cb3
   140005c91:	mov    eax,DWORD PTR [rsi+0x8]
   140005c94:	cmp    DWORD PTR [rcx+0x4],eax
   140005c97:	jg     0x140005cb3
   140005c99:	cmp    r12d,DWORD PTR [rcx]
   140005c9c:	jl     0x140005cb3
   140005c9e:	cmp    r12d,DWORD PTR [rcx+0x4]
   140005ca2:	jg     0x140005cb3
   140005ca4:	cmp    DWORD PTR [r8],0xffffffff
   140005ca8:	jne    0x140005cad
   140005caa:	mov    DWORD PTR [r8],edx
   140005cad:	lea    eax,[rdx+0x1]
   140005cb0:	mov    DWORD PTR [r10],eax
   140005cb3:	inc    edx
   140005cb5:	add    r9,0x14
   140005cb9:	cmp    edx,edi
   140005cbb:	jb     0x140005c7a
   140005cbd:	mov    eax,DWORD PTR [r8]
   140005cc0:	cmp    eax,0xffffffff
   140005cc3:	je     0x140005cd7
   140005cc5:	lea    rcx,[rax+rax*4]
   140005cc9:	movsxd rax,DWORD PTR [rbx+0x10]
   140005ccd:	lea    rax,[rax+rcx*4]
   140005cd1:	add    rax,QWORD PTR [rbp+0x8]
   140005cd5:	jmp    0x140005ce1
   140005cd7:	and    DWORD PTR [r8],0x0
   140005cdb:	and    DWORD PTR [r10],0x0
   140005cdf:	xor    eax,eax
   140005ce1:	mov    rbx,QWORD PTR [rsp+0x40]
   140005ce6:	mov    rbp,QWORD PTR [rsp+0x48]
   140005ceb:	mov    rsi,QWORD PTR [rsp+0x50]
   140005cf0:	mov    rdi,QWORD PTR [rsp+0x58]
   140005cf5:	add    rsp,0x20
   140005cf9:	pop    r15
   140005cfb:	pop    r14
   140005cfd:	pop    r12
   140005cff:	ret    
   140005d00:	int3   
   140005d01:	int3   
   140005d02:	int3   
   140005d03:	int3   
   140005d04:	int3   
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	mov    QWORD PTR [rsp+0x8],rbx
   140005d0d:	mov    QWORD PTR [rsp+0x10],rbp
   140005d12:	push   rsi
   140005d13:	push   rdi
   140005d14:	push   r14
   140005d16:	sub    rsp,0x20
   140005d1a:	lea    r9,[rsp+0x50]
   140005d1f:	mov    rdi,r8
   140005d22:	mov    rbp,rdx
   140005d25:	call   0x140005b04
   140005d2a:	mov    rdx,rbp
   140005d2d:	mov    rcx,rdi
   140005d30:	mov    r14,rax
   140005d33:	call   0x14000a2a4
   140005d38:	mov    ebx,DWORD PTR [rdi+0xc]
   140005d3b:	mov    esi,eax
   140005d3d:	jmp    0x140005d66
   140005d3f:	dec    ebx
   140005d41:	call   0x140004258
   140005d46:	lea    rdx,[rbx+rbx*4]
   140005d4a:	mov    rax,QWORD PTR [rax+0x128]
   140005d51:	lea    rcx,[rax+rdx*4]
   140005d55:	movsxd rax,DWORD PTR [rdi+0x10]
   140005d59:	add    rcx,rax
   140005d5c:	cmp    esi,DWORD PTR [rcx+0x4]
   140005d5f:	jle    0x140005d66
   140005d61:	cmp    esi,DWORD PTR [rcx+0x8]
   140005d64:	jle    0x140005d6c
   140005d66:	test   ebx,ebx
   140005d68:	jne    0x140005d3f
   140005d6a:	xor    ecx,ecx
   140005d6c:	test   rcx,rcx
   140005d6f:	jne    0x140005d77
   140005d71:	or     r9d,0xffffffff
   140005d75:	jmp    0x140005d7b
   140005d77:	mov    r9d,DWORD PTR [rcx+0x4]
   140005d7b:	mov    r8,rdi
   140005d7e:	mov    rdx,rbp
   140005d81:	mov    rcx,r14
   140005d84:	call   0x140009d04
   140005d89:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d8e:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d93:	add    rsp,0x20
   140005d97:	pop    r14
   140005d99:	pop    rdi
   140005d9a:	pop    rsi
   140005d9b:	ret    
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	mov    QWORD PTR [rsp+0x8],rbx
   140005da9:	mov    QWORD PTR [rsp+0x10],rbp
   140005dae:	mov    QWORD PTR [rsp+0x18],rsi
   140005db3:	push   rdi
   140005db4:	sub    rsp,0x40
   140005db8:	mov    rsi,r9
   140005dbb:	mov    rbp,r8
   140005dbe:	mov    rbx,rdx
   140005dc1:	mov    rdi,rcx
   140005dc4:	call   0x140004258
   140005dc9:	mov    QWORD PTR [rax+0x138],rbx
   140005dd0:	mov    rbx,QWORD PTR [rdi]
   140005dd3:	call   0x140004258
   140005dd8:	mov    rdx,QWORD PTR [rbx+0x38]
   140005ddc:	mov    rcx,QWORD PTR [rsp+0x78]
   140005de1:	mov    r9,QWORD PTR [rsp+0x70]
   140005de6:	mov    DWORD PTR [rsp+0x38],0x1
   140005dee:	mov    QWORD PTR [rax+0x130],rdx
   140005df5:	xor    ebx,ebx
   140005df7:	mov    QWORD PTR [rsp+0x30],rbx
   140005dfc:	mov    DWORD PTR [rsp+0x28],ebx
   140005e00:	mov    QWORD PTR [rsp+0x20],rcx
   140005e05:	mov    rcx,QWORD PTR [rdi]
   140005e08:	mov    r8,rsi
   140005e0b:	mov    rdx,rbp
   140005e0e:	call   0x140009e9c
   140005e13:	call   0x140004258
   140005e18:	mov    rcx,QWORD PTR [rsp+0x80]
   140005e20:	mov    rbp,QWORD PTR [rsp+0x58]
   140005e25:	mov    rsi,QWORD PTR [rsp+0x60]
   140005e2a:	mov    QWORD PTR [rax+0x138],rbx
   140005e31:	lea    eax,[rbx+0x1]
   140005e34:	mov    rbx,QWORD PTR [rsp+0x50]
   140005e39:	mov    DWORD PTR [rcx],0x1
   140005e3f:	add    rsp,0x40
   140005e43:	pop    rdi
   140005e44:	ret    
   140005e45:	int3   
   140005e46:	int3   
   140005e47:	int3   
   140005e48:	int3   
   140005e49:	int3   
   140005e4a:	int3   
   140005e4b:	int3   
   140005e4c:	mov    rax,rsp
   140005e4f:	mov    QWORD PTR [rax+0x20],r9
   140005e53:	mov    QWORD PTR [rax+0x18],r8
   140005e57:	mov    QWORD PTR [rax+0x10],rdx
   140005e5b:	mov    QWORD PTR [rax+0x8],rcx
   140005e5f:	push   rbx
   140005e60:	sub    rsp,0x60
   140005e64:	mov    rbx,rcx
   140005e67:	and    DWORD PTR [rax-0x28],0x0
   140005e6b:	mov    QWORD PTR [rax-0x20],rcx
   140005e6f:	mov    QWORD PTR [rax-0x18],r8
   140005e73:	call   0x140004258
   140005e78:	mov    r8,QWORD PTR [rax+0xe0]
   140005e7f:	lea    rdx,[rsp+0x48]
   140005e84:	mov    ecx,DWORD PTR [rbx]
   140005e86:	call   r8
   140005e89:	mov    DWORD PTR [rsp+0x40],0x0
   140005e91:	jmp    0x140005e93
   140005e93:	mov    eax,DWORD PTR [rsp+0x40]
   140005e97:	add    rsp,0x60
   140005e9b:	pop    rbx
   140005e9c:	ret    
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	int3   
   140005ea1:	int3   
   140005ea2:	int3   
   140005ea3:	int3   
   140005ea4:	rex push rbx
   140005ea6:	sub    rsp,0x20
   140005eaa:	mov    rbx,rcx
   140005ead:	mov    QWORD PTR [rcx],rdx
   140005eb0:	call   0x140004258
   140005eb5:	cmp    rbx,QWORD PTR [rax+0x120]
   140005ebc:	jae    0x140005ecc
   140005ebe:	call   0x140004258
   140005ec3:	mov    rcx,QWORD PTR [rax+0x120]
   140005eca:	jmp    0x140005ece
   140005ecc:	xor    ecx,ecx
   140005ece:	mov    QWORD PTR [rbx+0x8],rcx
   140005ed2:	call   0x140004258
   140005ed7:	mov    QWORD PTR [rax+0x120],rbx
   140005ede:	mov    rax,rbx
   140005ee1:	add    rsp,0x20
   140005ee5:	pop    rbx
   140005ee6:	ret    
   140005ee7:	int3   
   140005ee8:	int3   
   140005ee9:	int3   
   140005eea:	int3   
   140005eeb:	int3   
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ef5:	push   rdi
   140005ef6:	sub    rsp,0x20
   140005efa:	mov    rdi,rcx
   140005efd:	call   0x140004258
   140005f02:	cmp    rdi,QWORD PTR [rax+0x120]
   140005f09:	je     0x140005f10
   140005f0b:	call   0x14000720c
   140005f10:	call   0x140004258
   140005f15:	mov    rbx,QWORD PTR [rax+0x120]
   140005f1c:	jmp    0x140005f27
   140005f1e:	cmp    rdi,rbx
   140005f21:	je     0x140005f3c
   140005f23:	mov    rbx,QWORD PTR [rbx+0x8]
   140005f27:	test   rbx,rbx
   140005f2a:	jne    0x140005f1e
   140005f2c:	call   0x14000720c
   140005f31:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f36:	add    rsp,0x20
   140005f3a:	pop    rdi
   140005f3b:	ret    
   140005f3c:	call   0x140004258
   140005f41:	mov    rcx,QWORD PTR [rbx+0x8]
   140005f45:	mov    QWORD PTR [rax+0x120],rcx
   140005f4c:	jmp    0x140005f31
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	int3   
   140005f51:	int3   
   140005f52:	int3   
   140005f53:	int3   
   140005f54:	sub    rsp,0x28
   140005f58:	call   0x140004258
   140005f5d:	mov    rax,QWORD PTR [rax+0x128]
   140005f64:	add    rsp,0x28
   140005f68:	ret    
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	sub    rsp,0x28
   140005f74:	call   0x140004258
   140005f79:	mov    rax,QWORD PTR [rax+0x130]
   140005f80:	add    rsp,0x28
   140005f84:	ret    
   140005f85:	int3   
   140005f86:	int3   
   140005f87:	int3   
   140005f88:	int3   
   140005f89:	int3   
   140005f8a:	int3   
   140005f8b:	int3   
   140005f8c:	rex push rbx
   140005f8e:	sub    rsp,0x20
   140005f92:	mov    rbx,rcx
   140005f95:	call   0x140004258
   140005f9a:	mov    rdx,QWORD PTR [rax+0x120]
   140005fa1:	jmp    0x140005fac
   140005fa3:	cmp    QWORD PTR [rdx],rbx
   140005fa6:	je     0x140005fba
   140005fa8:	mov    rdx,QWORD PTR [rdx+0x8]
   140005fac:	test   rdx,rdx
   140005faf:	jne    0x140005fa3
   140005fb1:	lea    eax,[rdx+0x1]
   140005fb4:	add    rsp,0x20
   140005fb8:	pop    rbx
   140005fb9:	ret    
   140005fba:	xor    eax,eax
   140005fbc:	jmp    0x140005fb4
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	int3   
   140005fc1:	int3   
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	rex push rbx
   140005fc6:	sub    rsp,0x20
   140005fca:	mov    rbx,rcx
   140005fcd:	call   0x140004258
   140005fd2:	mov    QWORD PTR [rax+0x128],rbx
   140005fd9:	add    rsp,0x20
   140005fdd:	pop    rbx
   140005fde:	ret    
   140005fdf:	int3   
   140005fe0:	int3   
   140005fe1:	int3   
   140005fe2:	int3   
   140005fe3:	int3   
   140005fe4:	int3   
   140005fe5:	int3   
   140005fe6:	int3   
   140005fe7:	int3   
   140005fe8:	rex push rbx
   140005fea:	sub    rsp,0x20
   140005fee:	mov    rbx,rcx
   140005ff1:	call   0x140004258
   140005ff6:	mov    QWORD PTR [rax+0x130],rbx
   140005ffd:	add    rsp,0x20
   140006001:	pop    rbx
   140006002:	ret    
   140006003:	int3   
   140006004:	int3   
   140006005:	int3   
   140006006:	int3   
   140006007:	int3   
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	mov    rax,rsp
   14000600f:	mov    QWORD PTR [rax+0x10],rbx
   140006013:	mov    QWORD PTR [rax+0x18],rsi
   140006017:	mov    QWORD PTR [rax+0x20],rdi
   14000601b:	push   rbp
   14000601c:	push   r14
   14000601e:	push   r15
   140006020:	lea    rbp,[rax-0x4c8]
   140006027:	sub    rsp,0x5b0
   14000602e:	mov    rax,QWORD PTR [rip+0xd09b]        # 0x1400130d0
   140006035:	xor    rax,rsp
   140006038:	mov    QWORD PTR [rbp+0x4a0],rax
   14000603f:	mov    rbx,QWORD PTR [rbp+0x508]
   140006046:	mov    r14,rdx
   140006049:	lea    rdx,[rip+0x9110]        # 0x14000f160
   140006050:	mov    r15,rcx
   140006053:	lea    rcx,[rsp+0x30]
   140006058:	mov    rax,rdx
   14000605b:	or     rax,rcx
   14000605e:	mov    rdi,r9
   140006061:	mov    rsi,r8
   140006064:	lea    r9,[rsp+0x30]
   140006069:	and    eax,0xf
   14000606c:	jne    0x1400060d0
   14000606e:	mov    eax,0x1
   140006073:	lea    r8d,[rax+0x7f]
   140006077:	movaps xmm0,XMMWORD PTR [rdx]
   14000607a:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14000607e:	movaps XMMWORD PTR [rcx],xmm0
   140006081:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   140006085:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140006089:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14000608d:	movaps XMMWORD PTR [rcx+0x20],xmm0
   140006091:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   140006095:	movaps XMMWORD PTR [rcx+0x30],xmm1
   140006099:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14000609d:	movaps XMMWORD PTR [rcx+0x40],xmm0
   1400060a1:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   1400060a5:	movaps XMMWORD PTR [rcx+0x50],xmm1
   1400060a9:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   1400060ad:	add    rdx,r8
   1400060b0:	movaps XMMWORD PTR [rcx+0x60],xmm0
   1400060b4:	add    rcx,r8
   1400060b7:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400060bb:	dec    rax
   1400060be:	jne    0x140006077
   1400060c0:	movaps xmm0,XMMWORD PTR [rdx]
   1400060c3:	mov    rax,QWORD PTR [rdx+0x10]
   1400060c7:	movaps XMMWORD PTR [rcx],xmm0
   1400060ca:	mov    QWORD PTR [rcx+0x10],rax
   1400060ce:	jmp    0x1400060de
   1400060d0:	mov    r8d,0x98
   1400060d6:	mov    rcx,r9
   1400060d9:	call   0x1400066d0
   1400060de:	mov    rdx,QWORD PTR [rbx]
   1400060e1:	mov    rcx,QWORD PTR [r15]
   1400060e4:	lea    rax,[rip+0x39b1]        # 0x140009a9c
   1400060eb:	mov    QWORD PTR [rsp+0x50],rax
   1400060f0:	mov    rax,QWORD PTR [rbp+0x4f0]
   1400060f7:	lea    r8,[rsp+0x30]
   1400060fc:	mov    QWORD PTR [rsp+0x60],rax
   140006101:	movsxd rax,DWORD PTR [rbp+0x4f8]
   140006108:	xor    r9d,r9d
   14000610b:	mov    QWORD PTR [rsp+0x68],rax
   140006110:	mov    rax,QWORD PTR [rbp+0x500]
   140006117:	mov    QWORD PTR [rsp+0x58],rdi
   14000611c:	mov    QWORD PTR [rsp+0x78],rax
   140006121:	movzx  eax,BYTE PTR [rbp+0x510]
   140006128:	mov    QWORD PTR [rsp+0x70],rsi
   14000612d:	mov    QWORD PTR [rbp-0x78],rax
   140006131:	mov    rax,QWORD PTR [rbx+0x40]
   140006135:	mov    QWORD PTR [rbp-0x80],r14
   140006139:	mov    QWORD PTR [rsp+0x28],rax
   14000613e:	lea    rax,[rbp-0x30]
   140006142:	mov    QWORD PTR [rbp-0x70],0x19930520
   14000614a:	mov    QWORD PTR [rsp+0x20],rax
   14000614f:	call   QWORD PTR [rip+0x810b]        # 0x14000e260
   140006155:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14000615c:	xor    rcx,rsp
   14000615f:	call   0x140003950
   140006164:	lea    r11,[rsp+0x5b0]
   14000616c:	mov    rbx,QWORD PTR [r11+0x28]
   140006170:	mov    rsi,QWORD PTR [r11+0x30]
   140006174:	mov    rdi,QWORD PTR [r11+0x38]
   140006178:	mov    rsp,r11
   14000617b:	pop    r15
   14000617d:	pop    r14
   14000617f:	pop    rbp
   140006180:	ret    
   140006181:	int3   
   140006182:	int3   
   140006183:	int3   
   140006184:	int3   
   140006185:	int3   
   140006186:	int3   
   140006187:	int3   
   140006188:	mov    QWORD PTR [rsp+0x10],rbx
   14000618d:	mov    QWORD PTR [rsp+0x18],rsi
   140006192:	push   rdi
   140006193:	sub    rsp,0x40
   140006197:	mov    rbx,r9
   14000619a:	mov    rdi,r8
   14000619d:	mov    rsi,rcx
   1400061a0:	mov    QWORD PTR [rsp+0x50],rdx
   1400061a5:	call   0x140004258
   1400061aa:	mov    rdx,QWORD PTR [rbx+0x8]
   1400061ae:	mov    QWORD PTR [rax+0x128],rdx
   1400061b5:	call   0x140004258
   1400061ba:	mov    rdx,QWORD PTR [rsi+0x38]
   1400061be:	mov    QWORD PTR [rax+0x130],rdx
   1400061c5:	call   0x140004258
   1400061ca:	mov    rdx,QWORD PTR [rbx+0x38]
   1400061ce:	mov    r8d,DWORD PTR [rdx]
   1400061d1:	lea    rdx,[rsp+0x50]
   1400061d6:	mov    r9,rbx
   1400061d9:	add    r8,QWORD PTR [rax+0x128]
   1400061e0:	xor    eax,eax
   1400061e2:	mov    rcx,rsi
   1400061e5:	mov    DWORD PTR [rsp+0x38],eax
   1400061e9:	mov    QWORD PTR [rsp+0x30],rax
   1400061ee:	mov    DWORD PTR [rsp+0x28],eax
   1400061f2:	mov    QWORD PTR [rsp+0x20],r8
   1400061f7:	mov    r8,rdi
   1400061fa:	call   0x140009e9c
   1400061ff:	mov    rbx,QWORD PTR [rsp+0x58]
   140006204:	mov    rsi,QWORD PTR [rsp+0x60]
   140006209:	add    rsp,0x40
   14000620d:	pop    rdi
   14000620e:	ret    
   14000620f:	int3   
   140006210:	int3   
   140006211:	int3   
   140006212:	int3   
   140006213:	int3   
   140006214:	int3   
   140006215:	int3   
   140006216:	int3   
   140006217:	int3   
   140006218:	mov    eax,DWORD PTR [rip+0xcec2]        # 0x1400130e0
   14000621e:	mov    r8d,edx
   140006221:	and    ecx,edx
   140006223:	not    r8d
   140006226:	and    r8d,eax
   140006229:	or     r8d,ecx
   14000622c:	mov    DWORD PTR [rip+0xcead],r8d        # 0x1400130e0
   140006233:	ret    
   140006234:	int3   
   140006235:	int3   
   140006236:	int3   
   140006237:	int3   
   140006238:	int3   
   140006239:	int3   
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	sub    rsp,0x28
   140006240:	call   0x140008358
   140006245:	test   rax,rax
   140006248:	je     0x140006254
   14000624a:	mov    ecx,0x16
   14000624f:	call   0x140008390
   140006254:	test   BYTE PTR [rip+0xce85],0x2        # 0x1400130e0
   14000625b:	je     0x140006286
   14000625d:	mov    ecx,0x17
   140006262:	call   0x14000ca52
   140006267:	test   eax,eax
   140006269:	je     0x140006272
   14000626b:	mov    ecx,0x7
   140006270:	int    0x29
   140006272:	mov    r8d,0x1
   140006278:	mov    edx,0x40000015
   14000627d:	lea    ecx,[r8+0x2]
   140006281:	call   0x1400064e4
   140006286:	mov    ecx,0x3
   14000628b:	call   0x1400045f4
   140006290:	int3   
   140006291:	int3   
   140006292:	int3   
   140006293:	int3   
   140006294:	int3   
   140006295:	int3   
   140006296:	int3   
   140006297:	int3   
   140006298:	mov    QWORD PTR [rip+0xef49],rcx        # 0x1400151e8
   14000629f:	ret    
   1400062a0:	int3   
   1400062a1:	int3   
   1400062a2:	int3   
   1400062a3:	int3   
   1400062a4:	int3   
   1400062a5:	int3   
   1400062a6:	int3   
   1400062a7:	int3   
   1400062a8:	rex push rbx
   1400062aa:	sub    rsp,0x20
   1400062ae:	mov    rbx,rcx
   1400062b1:	mov    rcx,QWORD PTR [rip+0xef38]        # 0x1400151f0
   1400062b8:	call   QWORD PTR [rip+0x7e12]        # 0x14000e0d0
   1400062be:	test   rax,rax
   1400062c1:	je     0x1400062d3
   1400062c3:	mov    rcx,rbx
   1400062c6:	call   rax
   1400062c8:	test   eax,eax
   1400062ca:	je     0x1400062d3
   1400062cc:	mov    eax,0x1
   1400062d1:	jmp    0x1400062d5
   1400062d3:	xor    eax,eax
   1400062d5:	add    rsp,0x20
   1400062d9:	pop    rbx
   1400062da:	ret    
   1400062db:	int3   
   1400062dc:	int3   
   1400062dd:	int3   
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	int3   
   1400062e1:	int3   
   1400062e2:	int3   
   1400062e3:	int3   
   1400062e4:	mov    QWORD PTR [rip+0xef05],rcx        # 0x1400151f0
   1400062eb:	ret    
   1400062ec:	int3   
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	int3   
   1400062f1:	int3   
   1400062f2:	int3   
   1400062f3:	int3   
   1400062f4:	sub    rsp,0x28
   1400062f8:	call   0x140004284
   1400062fd:	test   rax,rax
   140006300:	jne    0x14000630b
   140006302:	lea    rax,[rip+0xcf53]        # 0x14001325c
   140006309:	jmp    0x14000630f
   14000630b:	add    rax,0x14
   14000630f:	add    rsp,0x28
   140006313:	ret    
   140006314:	int3   
   140006315:	int3   
   140006316:	int3   
   140006317:	int3   
   140006318:	int3   
   140006319:	int3   
   14000631a:	int3   
   14000631b:	int3   
   14000631c:	mov    QWORD PTR [rsp+0x8],rbx
   140006321:	push   rdi
   140006322:	sub    rsp,0x20
   140006326:	mov    edi,ecx
   140006328:	call   0x140004284
   14000632d:	test   rax,rax
   140006330:	jne    0x14000633b
   140006332:	lea    rax,[rip+0xcf23]        # 0x14001325c
   140006339:	jmp    0x14000633f
   14000633b:	add    rax,0x14
   14000633f:	mov    DWORD PTR [rax],edi
   140006341:	call   0x140004284
   140006346:	lea    rbx,[rip+0xcf0b]        # 0x140013258
   14000634d:	test   rax,rax
   140006350:	je     0x140006356
   140006352:	lea    rbx,[rax+0x10]
   140006356:	mov    ecx,edi
   140006358:	call   0x140006398
   14000635d:	mov    DWORD PTR [rbx],eax
   14000635f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006364:	add    rsp,0x20
   140006368:	pop    rdi
   140006369:	ret    
   14000636a:	int3   
   14000636b:	int3   
   14000636c:	int3   
   14000636d:	int3   
   14000636e:	int3   
   14000636f:	int3   
   140006370:	sub    rsp,0x28
   140006374:	call   0x140004284
   140006379:	test   rax,rax
   14000637c:	jne    0x140006387
   14000637e:	lea    rax,[rip+0xced3]        # 0x140013258
   140006385:	jmp    0x14000638b
   140006387:	add    rax,0x10
   14000638b:	add    rsp,0x28
   14000638f:	ret    
   140006390:	int3   
   140006391:	int3   
   140006392:	int3   
   140006393:	int3   
   140006394:	int3   
   140006395:	int3   
   140006396:	int3   
   140006397:	int3   
   140006398:	lea    r10,[rip+0xcd51]        # 0x1400130f0
   14000639f:	xor    edx,edx
   1400063a1:	mov    r8,r10
   1400063a4:	lea    r9d,[rdx+0x8]
   1400063a8:	cmp    ecx,DWORD PTR [r8]
   1400063ab:	je     0x1400063dc
   1400063ad:	inc    edx
   1400063af:	add    r8,r9
   1400063b2:	movsxd rax,edx
   1400063b5:	cmp    rax,0x2d
   1400063b9:	jb     0x1400063a8
   1400063bb:	lea    eax,[rcx-0x13]
   1400063be:	cmp    eax,0x11
   1400063c1:	ja     0x1400063c9
   1400063c3:	mov    eax,0xd
   1400063c8:	ret    
   1400063c9:	add    ecx,0xffffff44
   1400063cf:	mov    eax,0x16
   1400063d4:	cmp    ecx,0xe
   1400063d7:	cmovbe eax,r9d
   1400063db:	ret    
   1400063dc:	movsxd rax,edx
   1400063df:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   1400063e4:	ret    
   1400063e5:	int3   
   1400063e6:	int3   
   1400063e7:	int3   
   1400063e8:	int3   
   1400063e9:	int3   
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	int3   
   1400063f1:	int3   
   1400063f2:	int3   
   1400063f3:	int3   
   1400063f4:	int3   
   1400063f5:	int3   
   1400063f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006400:	sub    rdx,rcx
   140006403:	test   cl,0x7
   140006406:	je     0x14000641c
   140006408:	movzx  eax,BYTE PTR [rcx]
   14000640b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14000640e:	jne    0x14000645f
   140006410:	inc    rcx
   140006413:	test   al,al
   140006415:	je     0x14000645c
   140006417:	test   cl,0x7
   14000641a:	jne    0x140006408
   14000641c:	movabs r11,0x8080808080808080
   140006426:	movabs r10,0xfefefefefefefeff
   140006430:	lea    eax,[ecx+edx*1]
   140006434:	and    eax,0xfff
   140006439:	cmp    eax,0xff8
   14000643e:	ja     0x140006408
   140006440:	mov    rax,QWORD PTR [rcx]
   140006443:	cmp    rax,QWORD PTR [rcx+rdx*1]
   140006447:	jne    0x140006408
   140006449:	lea    r9,[r10+rax*1]
   14000644d:	not    rax
   140006450:	add    rcx,0x8
   140006454:	and    rax,r9
   140006457:	test   r11,rax
   14000645a:	je     0x140006430
   14000645c:	xor    eax,eax
   14000645e:	ret    
   14000645f:	sbb    rax,rax
   140006462:	or     rax,0x1
   140006466:	ret    
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	int3   
   14000646d:	int3   
   14000646e:	int3   
   14000646f:	int3   
   140006470:	rex push rbx
   140006472:	sub    rsp,0x30
   140006476:	mov    rbx,rcx
   140006479:	mov    ecx,0xe
   14000647e:	call   0x140007280
   140006483:	nop
   140006484:	mov    rax,QWORD PTR [rbx+0x8]
   140006488:	test   rax,rax
   14000648b:	je     0x1400064cc
   14000648d:	mov    rcx,QWORD PTR [rip+0xed74]        # 0x140015208
   140006494:	lea    rdx,[rip+0xed65]        # 0x140015200
   14000649b:	mov    QWORD PTR [rsp+0x20],rcx
   1400064a0:	test   rcx,rcx
   1400064a3:	je     0x1400064be
   1400064a5:	cmp    QWORD PTR [rcx],rax
   1400064a8:	jne    0x1400064b9
   1400064aa:	mov    rax,QWORD PTR [rcx+0x8]
   1400064ae:	mov    QWORD PTR [rdx+0x8],rax
   1400064b2:	call   0x140003aa4
   1400064b7:	jmp    0x1400064be
   1400064b9:	mov    rdx,rcx
   1400064bc:	jmp    0x14000649b
   1400064be:	mov    rcx,QWORD PTR [rbx+0x8]
   1400064c2:	call   0x140003aa4
   1400064c7:	and    QWORD PTR [rbx+0x8],0x0
   1400064cc:	mov    ecx,0xe
   1400064d1:	call   0x140007488
   1400064d6:	add    rsp,0x30
   1400064da:	pop    rbx
   1400064db:	ret    
   1400064dc:	int3   
   1400064dd:	int3   
   1400064de:	int3   
   1400064df:	int3   
   1400064e0:	int3   
   1400064e1:	int3   
   1400064e2:	int3   
   1400064e3:	int3   
   1400064e4:	mov    rax,rsp
   1400064e7:	mov    QWORD PTR [rax+0x10],rbx
   1400064eb:	mov    QWORD PTR [rax+0x18],rsi
   1400064ef:	mov    QWORD PTR [rax+0x20],rdi
   1400064f3:	push   rbp
   1400064f4:	lea    rbp,[rax-0x4b8]
   1400064fb:	sub    rsp,0x5b0
   140006502:	mov    rax,QWORD PTR [rip+0xcbc7]        # 0x1400130d0
   140006509:	xor    rax,rsp
   14000650c:	mov    QWORD PTR [rbp+0x4a0],rax
   140006513:	mov    edi,r8d
   140006516:	mov    esi,edx
   140006518:	mov    ebx,ecx
   14000651a:	cmp    ecx,0xffffffff
   14000651d:	je     0x140006524
   14000651f:	call   0x140008ddc
   140006524:	and    DWORD PTR [rsp+0x30],0x0
   140006529:	lea    rcx,[rsp+0x34]
   14000652e:	xor    edx,edx
   140006530:	mov    r8d,0x94
   140006536:	call   0x140006bd0
   14000653b:	lea    rax,[rsp+0x30]
   140006540:	lea    rcx,[rbp-0x30]
   140006544:	mov    QWORD PTR [rsp+0x20],rax
   140006549:	lea    rax,[rbp-0x30]
   14000654d:	mov    QWORD PTR [rsp+0x28],rax
   140006552:	call   0x140005574
   140006557:	mov    rax,QWORD PTR [rbp+0x4b8]
   14000655e:	mov    QWORD PTR [rbp+0xc8],rax
   140006565:	lea    rax,[rbp+0x4b8]
   14000656c:	mov    DWORD PTR [rsp+0x30],esi
   140006570:	add    rax,0x8
   140006574:	mov    DWORD PTR [rsp+0x34],edi
   140006578:	mov    QWORD PTR [rbp+0x68],rax
   14000657c:	mov    rax,QWORD PTR [rbp+0x4b8]
   140006583:	mov    QWORD PTR [rsp+0x40],rax
   140006588:	call   QWORD PTR [rip+0x7cda]        # 0x14000e268
   14000658e:	lea    rcx,[rsp+0x20]
   140006593:	mov    edi,eax
   140006595:	call   0x140005770
   14000659a:	test   eax,eax
   14000659c:	jne    0x1400065ae
   14000659e:	test   edi,edi
   1400065a0:	jne    0x1400065ae
   1400065a2:	cmp    ebx,0xffffffff
   1400065a5:	je     0x1400065ae
   1400065a7:	mov    ecx,ebx
   1400065a9:	call   0x140008ddc
   1400065ae:	mov    rcx,QWORD PTR [rbp+0x4a0]
   1400065b5:	xor    rcx,rsp
   1400065b8:	call   0x140003950
   1400065bd:	lea    r11,[rsp+0x5b0]
   1400065c5:	mov    rbx,QWORD PTR [r11+0x18]
   1400065c9:	mov    rsi,QWORD PTR [r11+0x20]
   1400065cd:	mov    rdi,QWORD PTR [r11+0x28]
   1400065d1:	mov    rsp,r11
   1400065d4:	pop    rbp
   1400065d5:	ret    
   1400065d6:	int3   
   1400065d7:	int3   
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	mov    QWORD PTR [rip+0xec2d],rcx        # 0x140015210
   1400065e3:	ret    
   1400065e4:	int3   
   1400065e5:	int3   
   1400065e6:	int3   
   1400065e7:	int3   
   1400065e8:	int3   
   1400065e9:	int3   
   1400065ea:	int3   
   1400065eb:	int3   
   1400065ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400065f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400065f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400065fb:	push   rdi
   1400065fc:	sub    rsp,0x30
   140006600:	mov    rbp,rcx
   140006603:	mov    rcx,QWORD PTR [rip+0xec06]        # 0x140015210
   14000660a:	mov    ebx,r9d
   14000660d:	mov    rdi,r8
   140006610:	mov    rsi,rdx
   140006613:	call   QWORD PTR [rip+0x7ab7]        # 0x14000e0d0
   140006619:	mov    r9d,ebx
   14000661c:	mov    r8,rdi
   14000661f:	mov    rdx,rsi
   140006622:	mov    rcx,rbp
   140006625:	test   rax,rax
   140006628:	je     0x140006641
   14000662a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000662f:	mov    rbp,QWORD PTR [rsp+0x48]
   140006634:	mov    rsi,QWORD PTR [rsp+0x50]
   140006639:	add    rsp,0x30
   14000663d:	pop    rdi
   14000663e:	rex.W jmp rax
   140006641:	mov    rax,QWORD PTR [rsp+0x60]
   140006646:	mov    QWORD PTR [rsp+0x20],rax
   14000664b:	call   0x14000667c
   140006650:	int3   
   140006651:	int3   
   140006652:	int3   
   140006653:	int3   
   140006654:	int3   
   140006655:	int3   
   140006656:	int3   
   140006657:	int3   
   140006658:	sub    rsp,0x38
   14000665c:	and    QWORD PTR [rsp+0x20],0x0
   140006662:	xor    r9d,r9d
   140006665:	xor    r8d,r8d
   140006668:	xor    edx,edx
   14000666a:	xor    ecx,ecx
   14000666c:	call   0x1400065ec
   140006671:	add    rsp,0x38
   140006675:	ret    
   140006676:	int3   
   140006677:	int3   
   140006678:	int3   
   140006679:	int3   
   14000667a:	int3   
   14000667b:	int3   
   14000667c:	sub    rsp,0x28
   140006680:	mov    ecx,0x17
   140006685:	call   0x14000ca52
   14000668a:	test   eax,eax
   14000668c:	je     0x140006695
   14000668e:	mov    ecx,0x5
   140006693:	int    0x29
   140006695:	mov    r8d,0x1
   14000669b:	mov    edx,0xc0000417
   1400066a0:	lea    ecx,[r8+0x1]
   1400066a4:	call   0x1400064e4
   1400066a9:	mov    ecx,0xc0000417
   1400066ae:	add    rsp,0x28
   1400066b2:	jmp    0x140005748
   1400066b7:	int3   
   1400066b8:	int3   
   1400066b9:	int3   
   1400066ba:	int3   
   1400066bb:	int3   
   1400066bc:	int3   
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	int3   
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	int3   
   1400066c5:	int3   
   1400066c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400066d0:	mov    r11,rcx
   1400066d3:	mov    r10,rdx
   1400066d6:	cmp    r8,0x10
   1400066da:	jbe    0x140006789
   1400066e0:	sub    rdx,rcx
   1400066e3:	jae    0x1400066f4
   1400066e5:	mov    rax,r10
   1400066e8:	add    rax,r8
   1400066eb:	cmp    rcx,rax
   1400066ee:	jl     0x140006a3a
   1400066f4:	bt     DWORD PTR [rip+0xee64],0x1        # 0x140015560
   1400066fc:	jae    0x140006711
   1400066fe:	push   rdi
   1400066ff:	push   rsi
   140006700:	mov    rdi,rcx
   140006703:	mov    rsi,r10
   140006706:	mov    rcx,r8
   140006709:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000670b:	pop    rsi
   14000670c:	pop    rdi
   14000670d:	mov    rax,r11
   140006710:	ret    
   140006711:	test   cl,0x7
   140006714:	je     0x14000674c
   140006716:	test   cl,0x1
   140006719:	je     0x140006726
   14000671b:	mov    al,BYTE PTR [rdx+rcx*1]
   14000671e:	dec    r8
   140006721:	mov    BYTE PTR [rcx],al
   140006723:	inc    rcx
   140006726:	test   cl,0x2
   140006729:	je     0x14000673a
   14000672b:	mov    ax,WORD PTR [rdx+rcx*1]
   14000672f:	sub    r8,0x2
   140006733:	mov    WORD PTR [rcx],ax
   140006736:	add    rcx,0x2
   14000673a:	test   cl,0x4
   14000673d:	je     0x14000674c
   14000673f:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006742:	sub    r8,0x4
   140006746:	mov    DWORD PTR [rcx],eax
   140006748:	add    rcx,0x4
   14000674c:	mov    r9,r8
   14000674f:	shr    r9,0x5
   140006753:	jne    0x140006937
   140006759:	mov    r9,r8
   14000675c:	shr    r9,0x3
   140006760:	je     0x140006776
   140006762:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006766:	mov    QWORD PTR [rcx],rax
   140006769:	add    rcx,0x8
   14000676d:	dec    r9
   140006770:	jne    0x140006762
   140006772:	and    r8,0x7
   140006776:	test   r8,r8
   140006779:	jne    0x140006780
   14000677b:	mov    rax,r11
   14000677e:	ret    
   14000677f:	nop
   140006780:	lea    rdx,[rdx+rcx*1]
   140006784:	mov    r10,rcx
   140006787:	jmp    0x14000678c
   140006789:	mov    r10,r11
   14000678c:	lea    r9,[rip+0xffffffffffff986d]        # 0x140000000
   140006793:	mov    rax,r8
   140006796:	mov    eax,DWORD PTR [r9+r8*4+0x67a3]
   14000679e:	add    rax,r9
   1400067a1:	jmp    rax
   1400067a3:	out    0x67,eax
   1400067a5:	add    BYTE PTR [rax],al
   1400067a7:	jmp    0x140006810
   1400067a9:	add    BYTE PTR [rax],al
   1400067ab:	mul    BYTE PTR [rdi+0x0]
   1400067ae:	add    BYTE PTR [rdx],al
   1400067b0:	push   0x68170000
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	and    BYTE PTR [rax+0x0],ch
   1400067ba:	add    BYTE PTR [rdx],dh
   1400067bc:	push   0x68450000
   1400067c1:	add    BYTE PTR [rax],al
   1400067c3:	(bad)  
   1400067c4:	push   0x686b0000
   1400067c9:	add    BYTE PTR [rax],al
   1400067cb:	jle    0x140006835
   1400067cd:	add    BYTE PTR [rax],al
   1400067cf:	xchg   edx,eax
   1400067d0:	push   0x68af0000
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	shr    BYTE PTR [rax+0x0],0x0
   1400067db:	fisubr DWORD PTR [rax+0x0]
   1400067de:	add    ch,dh
   1400067e0:	push   0x69190000
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	mov    rax,r11
   1400067ea:	ret    
   1400067eb:	movzx  rax,BYTE PTR [rdx]
   1400067ef:	mov    BYTE PTR [r10],al
   1400067f2:	mov    rax,r11
   1400067f5:	ret    
   1400067f6:	movzx  rax,WORD PTR [rdx]
   1400067fa:	mov    WORD PTR [r10],ax
   1400067fe:	mov    rax,r11
   140006801:	ret    
   140006802:	movzx  rax,BYTE PTR [rdx]
   140006806:	movzx  rcx,WORD PTR [rdx+0x1]
   14000680b:	mov    BYTE PTR [r10],al
   14000680e:	mov    WORD PTR [r10+0x1],cx
   140006813:	mov    rax,r11
   140006816:	ret    
   140006817:	mov    eax,DWORD PTR [rdx]
   140006819:	mov    DWORD PTR [r10],eax
   14000681c:	mov    rax,r11
   14000681f:	ret    
   140006820:	movzx  rax,BYTE PTR [rdx]
   140006824:	mov    ecx,DWORD PTR [rdx+0x1]
   140006827:	mov    BYTE PTR [r10],al
   14000682a:	mov    DWORD PTR [r10+0x1],ecx
   14000682e:	mov    rax,r11
   140006831:	ret    
   140006832:	movzx  rax,WORD PTR [rdx]
   140006836:	mov    ecx,DWORD PTR [rdx+0x2]
   140006839:	mov    WORD PTR [r10],ax
   14000683d:	mov    DWORD PTR [r10+0x2],ecx
   140006841:	mov    rax,r11
   140006844:	ret    
   140006845:	movzx  rax,BYTE PTR [rdx]
   140006849:	movzx  rcx,WORD PTR [rdx+0x1]
   14000684e:	mov    edx,DWORD PTR [rdx+0x3]
   140006851:	mov    BYTE PTR [r10],al
   140006854:	mov    WORD PTR [r10+0x1],cx
   140006859:	mov    DWORD PTR [r10+0x3],edx
   14000685d:	mov    rax,r11
   140006860:	ret    
   140006861:	mov    rax,QWORD PTR [rdx]
   140006864:	mov    QWORD PTR [r10],rax
   140006867:	mov    rax,r11
   14000686a:	ret    
   14000686b:	movzx  rax,BYTE PTR [rdx]
   14000686f:	mov    rcx,QWORD PTR [rdx+0x1]
   140006873:	mov    BYTE PTR [r10],al
   140006876:	mov    QWORD PTR [r10+0x1],rcx
   14000687a:	mov    rax,r11
   14000687d:	ret    
   14000687e:	movzx  rax,WORD PTR [rdx]
   140006882:	mov    rcx,QWORD PTR [rdx+0x2]
   140006886:	mov    WORD PTR [r10],ax
   14000688a:	mov    QWORD PTR [r10+0x2],rcx
   14000688e:	mov    rax,r11
   140006891:	ret    
   140006892:	movzx  rax,BYTE PTR [rdx]
   140006896:	movzx  rcx,WORD PTR [rdx+0x1]
   14000689b:	mov    rdx,QWORD PTR [rdx+0x3]
   14000689f:	mov    BYTE PTR [r10],al
   1400068a2:	mov    WORD PTR [r10+0x1],cx
   1400068a7:	mov    QWORD PTR [r10+0x3],rdx
   1400068ab:	mov    rax,r11
   1400068ae:	ret    
   1400068af:	mov    eax,DWORD PTR [rdx]
   1400068b1:	mov    rcx,QWORD PTR [rdx+0x4]
   1400068b5:	mov    DWORD PTR [r10],eax
   1400068b8:	mov    QWORD PTR [r10+0x4],rcx
   1400068bc:	mov    rax,r11
   1400068bf:	ret    
   1400068c0:	movzx  rax,BYTE PTR [rdx]
   1400068c4:	mov    ecx,DWORD PTR [rdx+0x1]
   1400068c7:	mov    rdx,QWORD PTR [rdx+0x5]
   1400068cb:	mov    BYTE PTR [r10],al
   1400068ce:	mov    DWORD PTR [r10+0x1],ecx
   1400068d2:	mov    QWORD PTR [r10+0x5],rdx
   1400068d6:	mov    rax,r11
   1400068d9:	ret    
   1400068da:	movzx  rax,WORD PTR [rdx]
   1400068de:	mov    ecx,DWORD PTR [rdx+0x2]
   1400068e1:	mov    rdx,QWORD PTR [rdx+0x6]
   1400068e5:	mov    WORD PTR [r10],ax
   1400068e9:	mov    DWORD PTR [r10+0x2],ecx
   1400068ed:	mov    QWORD PTR [r10+0x6],rdx
   1400068f1:	mov    rax,r11
   1400068f4:	ret    
   1400068f5:	movzx  r8,BYTE PTR [rdx]
   1400068f9:	movzx  rax,WORD PTR [rdx+0x1]
   1400068fe:	mov    ecx,DWORD PTR [rdx+0x3]
   140006901:	mov    rdx,QWORD PTR [rdx+0x7]
   140006905:	mov    BYTE PTR [r10],r8b
   140006908:	mov    WORD PTR [r10+0x1],ax
   14000690d:	mov    DWORD PTR [r10+0x3],ecx
   140006911:	mov    QWORD PTR [r10+0x7],rdx
   140006915:	mov    rax,r11
   140006918:	ret    
   140006919:	movdqu xmm0,XMMWORD PTR [rdx]
   14000691d:	movdqu XMMWORD PTR [r10],xmm0
   140006922:	mov    rax,r11
   140006925:	ret    
   140006926:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006930:	data16 data16 xchg ax,ax
   140006934:	data16 xchg ax,ax
   140006937:	cmp    r9,0x2000
   14000693e:	jae    0x140006982
   140006940:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006944:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140006949:	add    rcx,0x20
   14000694d:	mov    QWORD PTR [rcx-0x20],rax
   140006951:	mov    QWORD PTR [rcx-0x18],r10
   140006955:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000695a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000695f:	dec    r9
   140006962:	mov    QWORD PTR [rcx-0x10],rax
   140006966:	mov    QWORD PTR [rcx-0x8],r10
   14000696a:	jne    0x140006940
   14000696c:	and    r8,0x1f
   140006970:	jmp    0x140006759
   140006975:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006980:	xchg   ax,ax
   140006982:	cmp    rdx,0x1000
   140006989:	jb     0x140006940
   14000698b:	mov    eax,0x20
   140006990:	prefetchnta BYTE PTR [rdx+rcx*1]
   140006994:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140006999:	add    rcx,0x80
   1400069a0:	dec    eax
   1400069a2:	jne    0x140006990
   1400069a4:	sub    rcx,0x1000
   1400069ab:	mov    eax,0x40
   1400069b0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400069b4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400069b9:	movnti QWORD PTR [rcx],r9
   1400069bd:	movnti QWORD PTR [rcx+0x8],r10
   1400069c2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400069c7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400069cc:	movnti QWORD PTR [rcx+0x10],r9
   1400069d1:	movnti QWORD PTR [rcx+0x18],r10
   1400069d6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   1400069db:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   1400069e0:	add    rcx,0x40
   1400069e4:	movnti QWORD PTR [rcx-0x20],r9
   1400069e9:	movnti QWORD PTR [rcx-0x18],r10
   1400069ee:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400069f3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400069f8:	dec    eax
   1400069fa:	movnti QWORD PTR [rcx-0x10],r9
   1400069ff:	movnti QWORD PTR [rcx-0x8],r10
   140006a04:	jne    0x1400069b0
   140006a06:	sub    r8,0x1000
   140006a0d:	cmp    r8,0x1000
   140006a14:	jae    0x14000698b
   140006a1a:	lock or BYTE PTR [rsp],0x0
   140006a1f:	jmp    0x14000674c
   140006a24:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006a30:	data16 data16 xchg ax,ax
   140006a34:	data16 data16 xchg ax,ax
   140006a38:	xchg   ax,ax
   140006a3a:	add    rcx,r8
   140006a3d:	test   cl,0x7
   140006a40:	je     0x140006a78
   140006a42:	test   cl,0x1
   140006a45:	je     0x140006a52
   140006a47:	dec    rcx
   140006a4a:	mov    al,BYTE PTR [rdx+rcx*1]
   140006a4d:	dec    r8
   140006a50:	mov    BYTE PTR [rcx],al
   140006a52:	test   cl,0x2
   140006a55:	je     0x140006a66
   140006a57:	sub    rcx,0x2
   140006a5b:	mov    ax,WORD PTR [rdx+rcx*1]
   140006a5f:	sub    r8,0x2
   140006a63:	mov    WORD PTR [rcx],ax
   140006a66:	test   cl,0x4
   140006a69:	je     0x140006a78
   140006a6b:	sub    rcx,0x4
   140006a6f:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006a72:	sub    r8,0x4
   140006a76:	mov    DWORD PTR [rcx],eax
   140006a78:	mov    r9,r8
   140006a7b:	shr    r9,0x5
   140006a7f:	jne    0x140006ac7
   140006a81:	mov    r9,r8
   140006a84:	shr    r9,0x3
   140006a88:	je     0x140006a9e
   140006a8a:	sub    rcx,0x8
   140006a8e:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006a92:	dec    r9
   140006a95:	mov    QWORD PTR [rcx],rax
   140006a98:	jne    0x140006a8a
   140006a9a:	and    r8,0x7
   140006a9e:	test   r8,r8
   140006aa1:	jne    0x140006ab0
   140006aa3:	mov    rax,r11
   140006aa6:	ret    
   140006aa7:	nop    WORD PTR [rax+rax*1+0x0]
   140006ab0:	sub    rcx,r8
   140006ab3:	mov    r10,rcx
   140006ab6:	lea    rdx,[rdx+rcx*1]
   140006aba:	jmp    0x14000678c
   140006abf:	nop
   140006ac0:	data16 data16 xchg ax,ax
   140006ac4:	data16 xchg ax,ax
   140006ac7:	cmp    r9,0x2000
   140006ace:	jae    0x140006b12
   140006ad0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140006ad5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140006ada:	sub    rcx,0x20
   140006ade:	mov    QWORD PTR [rcx+0x18],rax
   140006ae2:	mov    QWORD PTR [rcx+0x10],r10
   140006ae6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140006aeb:	mov    r10,QWORD PTR [rdx+rcx*1]
   140006aef:	dec    r9
   140006af2:	mov    QWORD PTR [rcx+0x8],rax
   140006af6:	mov    QWORD PTR [rcx],r10
   140006af9:	jne    0x140006ad0
   140006afb:	and    r8,0x1f
   140006aff:	jmp    0x140006a81
   140006b01:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006b10:	xchg   ax,ax
   140006b12:	cmp    rdx,0xfffffffffffff000
   140006b19:	ja     0x140006ad0
   140006b1b:	mov    eax,0x20
   140006b20:	sub    rcx,0x80
   140006b27:	prefetchnta BYTE PTR [rdx+rcx*1]
   140006b2b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140006b30:	dec    eax
   140006b32:	jne    0x140006b20
   140006b34:	add    rcx,0x1000
   140006b3b:	mov    eax,0x40
   140006b40:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140006b45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140006b4a:	movnti QWORD PTR [rcx-0x8],r9
   140006b4f:	movnti QWORD PTR [rcx-0x10],r10
   140006b54:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140006b59:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   140006b5e:	movnti QWORD PTR [rcx-0x18],r9
   140006b63:	movnti QWORD PTR [rcx-0x20],r10
   140006b68:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   140006b6d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140006b72:	sub    rcx,0x40
   140006b76:	movnti QWORD PTR [rcx+0x18],r9
   140006b7b:	movnti QWORD PTR [rcx+0x10],r10
   140006b80:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140006b85:	mov    r10,QWORD PTR [rdx+rcx*1]
   140006b89:	dec    eax
   140006b8b:	movnti QWORD PTR [rcx+0x8],r9
   140006b90:	movnti QWORD PTR [rcx],r10
   140006b94:	jne    0x140006b40
   140006b96:	sub    r8,0x1000
   140006b9d:	cmp    r8,0x1000
   140006ba4:	jae    0x140006b1b
   140006baa:	lock or BYTE PTR [rsp],0x0
   140006baf:	jmp    0x140006a78
   140006bb4:	int3   
   140006bb5:	int3   
   140006bb6:	int3   
   140006bb7:	int3   
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	int3   
   140006bc1:	int3   
   140006bc2:	int3   
   140006bc3:	int3   
   140006bc4:	int3   
   140006bc5:	int3   
   140006bc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006bd0:	mov    r11,rcx
   140006bd3:	cmp    r8,0x8
   140006bd7:	jb     0x140006c44
   140006bd9:	movzx  edx,dl
   140006bdc:	bt     DWORD PTR [rip+0xe97c],0x1        # 0x140015560
   140006be4:	jae    0x140006bf4
   140006be6:	push   rdi
   140006be7:	mov    rdi,rcx
   140006bea:	mov    eax,edx
   140006bec:	mov    rcx,r8
   140006bef:	rep stos BYTE PTR es:[rdi],al
   140006bf1:	pop    rdi
   140006bf2:	jmp    0x140006c53
   140006bf4:	movabs r9,0x101010101010101
   140006bfe:	imul   rdx,r9
   140006c02:	cmp    r8,0x40
   140006c06:	jb     0x140006c26
   140006c08:	neg    rcx
   140006c0b:	and    ecx,0x7
   140006c0e:	je     0x140006c16
   140006c10:	sub    r8,rcx
   140006c13:	mov    QWORD PTR [r11],rdx
   140006c16:	add    rcx,r11
   140006c19:	mov    r9,r8
   140006c1c:	and    r8,0x3f
   140006c20:	shr    r9,0x6
   140006c24:	jne    0x140006c67
   140006c26:	mov    r9,r8
   140006c29:	and    r8,0x7
   140006c2d:	shr    r9,0x3
   140006c31:	je     0x140006c44
   140006c33:	data16 data16 xchg ax,ax
   140006c37:	nop
   140006c38:	mov    QWORD PTR [rcx],rdx
   140006c3b:	add    rcx,0x8
   140006c3f:	dec    r9
   140006c42:	jne    0x140006c38
   140006c44:	test   r8,r8
   140006c47:	je     0x140006c53
   140006c49:	mov    BYTE PTR [rcx],dl
   140006c4b:	inc    rcx
   140006c4e:	dec    r8
   140006c51:	jne    0x140006c49
   140006c53:	mov    rax,r11
   140006c56:	ret    
   140006c57:	nop    WORD PTR [rax+rax*1+0x0]
   140006c60:	data16 data16 xchg ax,ax
   140006c64:	data16 xchg ax,ax
   140006c67:	cmp    r9,0x1c00
   140006c6e:	jae    0x140006ca0
   140006c70:	mov    QWORD PTR [rcx],rdx
   140006c73:	mov    QWORD PTR [rcx+0x8],rdx
   140006c77:	mov    QWORD PTR [rcx+0x10],rdx
   140006c7b:	add    rcx,0x40
   140006c7f:	mov    QWORD PTR [rcx-0x28],rdx
   140006c83:	mov    QWORD PTR [rcx-0x20],rdx
   140006c87:	dec    r9
   140006c8a:	mov    QWORD PTR [rcx-0x18],rdx
   140006c8e:	mov    QWORD PTR [rcx-0x10],rdx
   140006c92:	mov    QWORD PTR [rcx-0x8],rdx
   140006c96:	jne    0x140006c70
   140006c98:	jmp    0x140006c26
   140006c9a:	nop    WORD PTR [rax+rax*1+0x0]
   140006ca0:	movnti QWORD PTR [rcx],rdx
   140006ca4:	movnti QWORD PTR [rcx+0x8],rdx
   140006ca9:	movnti QWORD PTR [rcx+0x10],rdx
   140006cae:	add    rcx,0x40
   140006cb2:	movnti QWORD PTR [rcx-0x28],rdx
   140006cb7:	movnti QWORD PTR [rcx-0x20],rdx
   140006cbc:	dec    r9
   140006cbf:	movnti QWORD PTR [rcx-0x18],rdx
   140006cc4:	movnti QWORD PTR [rcx-0x10],rdx
   140006cc9:	movnti QWORD PTR [rcx-0x8],rdx
   140006cce:	jne    0x140006ca0
   140006cd0:	lock or BYTE PTR [rsp],0x0
   140006cd5:	jmp    0x140006c26
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	rex push rbx
   140006ce2:	sub    rsp,0x20
   140006ce6:	and    QWORD PTR [rcx+0x8],0x0
   140006ceb:	lea    rax,[rip+0x850e]        # 0x14000f200
   140006cf2:	mov    BYTE PTR [rcx+0x10],0x0
   140006cf6:	mov    QWORD PTR [rcx],rax
   140006cf9:	mov    rdx,QWORD PTR [rdx]
   140006cfc:	mov    rbx,rcx
   140006cff:	call   0x140006e08
   140006d04:	mov    rax,rbx
   140006d07:	add    rsp,0x20
   140006d0b:	pop    rbx
   140006d0c:	ret    
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	int3   
   140006d11:	int3   
   140006d12:	int3   
   140006d13:	int3   
   140006d14:	lea    rax,[rip+0x84e5]        # 0x14000f200
   140006d1b:	mov    QWORD PTR [rcx],rax
   140006d1e:	mov    rax,QWORD PTR [rdx]
   140006d21:	mov    BYTE PTR [rcx+0x10],0x0
   140006d25:	mov    QWORD PTR [rcx+0x8],rax
   140006d29:	mov    rax,rcx
   140006d2c:	ret    
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	int3   
   140006d31:	int3   
   140006d32:	int3   
   140006d33:	int3   
   140006d34:	rex push rbx
   140006d36:	sub    rsp,0x20
   140006d3a:	and    QWORD PTR [rcx+0x8],0x0
   140006d3f:	lea    rax,[rip+0x84ba]        # 0x14000f200
   140006d46:	mov    rbx,rcx
   140006d49:	mov    QWORD PTR [rcx],rax
   140006d4c:	mov    BYTE PTR [rcx+0x10],0x0
   140006d50:	call   0x140006d7c
   140006d55:	mov    rax,rbx
   140006d58:	add    rsp,0x20
   140006d5c:	pop    rbx
   140006d5d:	ret    
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	int3   
   140006d61:	int3   
   140006d62:	int3   
   140006d63:	int3   
   140006d64:	lea    rax,[rip+0x8495]        # 0x14000f200
   140006d6b:	mov    QWORD PTR [rcx],rax
   140006d6e:	jmp    0x140006e68
   140006d73:	int3   
   140006d74:	int3   
   140006d75:	int3   
   140006d76:	int3   
   140006d77:	int3   
   140006d78:	int3   
   140006d79:	int3   
   140006d7a:	int3   
   140006d7b:	int3   
   140006d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140006d81:	push   rdi
   140006d82:	sub    rsp,0x20
   140006d86:	mov    rdi,rdx
   140006d89:	mov    rbx,rcx
   140006d8c:	cmp    rcx,rdx
   140006d8f:	je     0x140006db2
   140006d91:	call   0x140006e68
   140006d96:	cmp    BYTE PTR [rdi+0x10],0x0
   140006d9a:	je     0x140006daa
   140006d9c:	mov    rdx,QWORD PTR [rdi+0x8]
   140006da0:	mov    rcx,rbx
   140006da3:	call   0x140006e08
   140006da8:	jmp    0x140006db2
   140006daa:	mov    rax,QWORD PTR [rdi+0x8]
   140006dae:	mov    QWORD PTR [rbx+0x8],rax
   140006db2:	mov    rax,rbx
   140006db5:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dba:	add    rsp,0x20
   140006dbe:	pop    rdi
   140006dbf:	ret    
   140006dc0:	int3   
   140006dc1:	int3   
   140006dc2:	int3   
   140006dc3:	int3   
   140006dc4:	int3   
   140006dc5:	int3   
   140006dc6:	int3   
   140006dc7:	int3   
   140006dc8:	mov    QWORD PTR [rsp+0x8],rbx
   140006dcd:	push   rdi
   140006dce:	sub    rsp,0x20
   140006dd2:	lea    rax,[rip+0x8427]        # 0x14000f200
   140006dd9:	mov    ebx,edx
   140006ddb:	mov    rdi,rcx
   140006dde:	mov    QWORD PTR [rcx],rax
   140006de1:	call   0x140006e68
   140006de6:	test   bl,0x1
   140006de9:	je     0x140006df3
   140006deb:	mov    rcx,rdi
   140006dee:	call   0x140003930
   140006df3:	mov    rax,rdi
   140006df6:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dfb:	add    rsp,0x20
   140006dff:	pop    rdi
   140006e00:	ret    
   140006e01:	int3   
   140006e02:	int3   
   140006e03:	int3   
   140006e04:	int3   
   140006e05:	int3   
   140006e06:	int3   
   140006e07:	int3   
   140006e08:	test   rdx,rdx
   140006e0b:	je     0x140006e61
   140006e0d:	mov    QWORD PTR [rsp+0x8],rbx
   140006e12:	mov    QWORD PTR [rsp+0x10],rsi
   140006e17:	push   rdi
   140006e18:	sub    rsp,0x20
   140006e1c:	mov    rsi,rcx
   140006e1f:	mov    rcx,rdx
   140006e22:	mov    rbx,rdx
   140006e25:	call   0x1400085d0
   140006e2a:	mov    rdi,rax
   140006e2d:	lea    rcx,[rax+0x1]
   140006e31:	call   0x1400039e8
   140006e36:	mov    QWORD PTR [rsi+0x8],rax
   140006e3a:	test   rax,rax
   140006e3d:	je     0x140006e52
   140006e3f:	lea    rdx,[rdi+0x1]
   140006e43:	mov    r8,rbx
   140006e46:	mov    rcx,rax
   140006e49:	call   0x14000a384
   140006e4e:	mov    BYTE PTR [rsi+0x10],0x1
   140006e52:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e57:	mov    rsi,QWORD PTR [rsp+0x38]
   140006e5c:	add    rsp,0x20
   140006e60:	pop    rdi
   140006e61:	ret    
   140006e62:	int3   
   140006e63:	int3   
   140006e64:	int3   
   140006e65:	int3   
   140006e66:	int3   
   140006e67:	int3   
   140006e68:	rex push rbx
   140006e6a:	sub    rsp,0x20
   140006e6e:	cmp    BYTE PTR [rcx+0x10],0x0
   140006e72:	mov    rbx,rcx
   140006e75:	je     0x140006e80
   140006e77:	mov    rcx,QWORD PTR [rcx+0x8]
   140006e7b:	call   0x140003aa4
   140006e80:	and    QWORD PTR [rbx+0x8],0x0
   140006e85:	mov    BYTE PTR [rbx+0x10],0x0
   140006e89:	add    rsp,0x20
   140006e8d:	pop    rbx
   140006e8e:	ret    
   140006e8f:	int3   
   140006e90:	int3   
   140006e91:	int3   
   140006e92:	int3   
   140006e93:	int3   
   140006e94:	int3   
   140006e95:	int3   
   140006e96:	int3   
   140006e97:	int3   
   140006e98:	cmp    QWORD PTR [rcx+0x8],0x0
   140006e9d:	lea    rax,[rip+0x836c]        # 0x14000f210
   140006ea4:	cmovne rax,QWORD PTR [rcx+0x8]
   140006ea9:	ret    
   140006eaa:	int3   
   140006eab:	int3   
   140006eac:	int3   
   140006ead:	int3   
   140006eae:	int3   
   140006eaf:	int3   
   140006eb0:	mov    QWORD PTR [rsp+0x10],rbx
   140006eb5:	push   rbp
   140006eb6:	mov    rbp,rsp
   140006eb9:	sub    rsp,0x60
   140006ebd:	mov    rax,QWORD PTR [rip+0x836c]        # 0x14000f230
   140006ec4:	mov    rbx,rdx
   140006ec7:	mov    rdx,rcx
   140006eca:	mov    QWORD PTR [rbp-0x40],rax
   140006ece:	mov    rax,QWORD PTR [rip+0x8363]        # 0x14000f238
   140006ed5:	mov    QWORD PTR [rbp-0x38],rax
   140006ed9:	mov    rax,QWORD PTR [rip+0x8360]        # 0x14000f240
   140006ee0:	mov    QWORD PTR [rbp-0x30],rax
   140006ee4:	mov    rax,QWORD PTR [rip+0x835d]        # 0x14000f248
   140006eeb:	mov    QWORD PTR [rbp-0x28],rax
   140006eef:	mov    rax,QWORD PTR [rip+0x835a]        # 0x14000f250
   140006ef6:	mov    QWORD PTR [rbp-0x20],rax
   140006efa:	mov    rax,QWORD PTR [rip+0x8357]        # 0x14000f258
   140006f01:	mov    QWORD PTR [rbp-0x18],rax
   140006f05:	mov    rax,QWORD PTR [rip+0x8354]        # 0x14000f260
   140006f0c:	mov    QWORD PTR [rbp-0x10],rax
   140006f10:	mov    rax,QWORD PTR [rip+0x8351]        # 0x14000f268
   140006f17:	mov    QWORD PTR [rbp-0x8],rax
   140006f1b:	test   rbx,rbx
   140006f1e:	je     0x140006f30
   140006f20:	test   BYTE PTR [rbx],0x10
   140006f23:	je     0x140006f30
   140006f25:	mov    rax,QWORD PTR [rcx]
   140006f28:	mov    rcx,QWORD PTR [rax-0x8]
   140006f2c:	mov    rbx,QWORD PTR [rcx+0x30]
   140006f30:	mov    QWORD PTR [rbp-0x18],rdx
   140006f34:	lea    rdx,[rbp+0x10]
   140006f38:	mov    rcx,rbx
   140006f3b:	mov    QWORD PTR [rbp-0x10],rbx
   140006f3f:	call   QWORD PTR [rip+0x7333]        # 0x14000e278
   140006f45:	mov    rdx,rax
   140006f48:	mov    QWORD PTR [rbp+0x10],rax
   140006f4c:	mov    QWORD PTR [rbp-0x8],rax
   140006f50:	test   rbx,rbx
   140006f53:	je     0x140006f70
   140006f55:	test   BYTE PTR [rbx],0x8
   140006f58:	mov    ecx,0x1994000
   140006f5d:	je     0x140006f64
   140006f5f:	mov    DWORD PTR [rbp-0x20],ecx
   140006f62:	jmp    0x140006f70
   140006f64:	mov    eax,DWORD PTR [rbp-0x20]
   140006f67:	test   rdx,rdx
   140006f6a:	cmove  eax,ecx
   140006f6d:	mov    DWORD PTR [rbp-0x20],eax
   140006f70:	mov    r8d,DWORD PTR [rbp-0x28]
   140006f74:	mov    edx,DWORD PTR [rbp-0x3c]
   140006f77:	mov    ecx,DWORD PTR [rbp-0x40]
   140006f7a:	lea    r9,[rbp-0x20]
   140006f7e:	call   QWORD PTR [rip+0x7144]        # 0x14000e0c8
   140006f84:	mov    rbx,QWORD PTR [rsp+0x78]
   140006f89:	add    rsp,0x60
   140006f8d:	pop    rbp
   140006f8e:	ret    
   140006f8f:	int3   
   140006f90:	int3   
   140006f91:	int3   
   140006f92:	int3   
   140006f93:	int3   
   140006f94:	int3   
   140006f95:	int3   
   140006f96:	int3   
   140006f97:	int3   
   140006f98:	sub    rsp,0x28
   140006f9c:	test   rcx,rcx
   140006f9f:	jne    0x140006fba
   140006fa1:	call   0x140006370
   140006fa6:	mov    DWORD PTR [rax],0x16
   140006fac:	call   0x140006658
   140006fb1:	or     rax,0xffffffffffffffff
   140006fb5:	add    rsp,0x28
   140006fb9:	ret    
   140006fba:	mov    r8,rcx
   140006fbd:	mov    rcx,QWORD PTR [rip+0xda84]        # 0x140014a48
   140006fc4:	xor    edx,edx
   140006fc6:	add    rsp,0x28
   140006fca:	rex.W jmp QWORD PTR [rip+0x72af]        # 0x14000e280
   140006fd1:	int3   
   140006fd2:	int3   
   140006fd3:	int3   
   140006fd4:	int3   
   140006fd5:	int3   
   140006fd6:	int3   
   140006fd7:	int3   
   140006fd8:	mov    rax,rsp
   140006fdb:	mov    QWORD PTR [rax+0x8],rbx
   140006fdf:	mov    QWORD PTR [rax+0x10],rbp
   140006fe3:	mov    QWORD PTR [rax+0x18],rsi
   140006fe7:	mov    QWORD PTR [rax+0x20],rdi
   140006feb:	push   r14
   140006fed:	sub    rsp,0x20
   140006ff1:	xor    ebx,ebx
   140006ff3:	mov    rsi,rdx
   140006ff6:	mov    rbp,rcx
   140006ff9:	or     r14d,0xffffffff
   140006ffd:	xor    r8d,r8d
   140007000:	mov    rdx,rsi
   140007003:	mov    rcx,rbp
   140007006:	call   0x14000716c
   14000700b:	mov    rdi,rax
   14000700e:	test   rax,rax
   140007011:	jne    0x14000703a
   140007013:	cmp    DWORD PTR [rip+0xe1ff],eax        # 0x140015218
   140007019:	jbe    0x14000703a
   14000701b:	mov    ecx,ebx
   14000701d:	call   QWORD PTR [rip+0x70d5]        # 0x14000e0f8
   140007023:	lea    ecx,[rbx+0x3e8]
   140007029:	cmp    ecx,DWORD PTR [rip+0xe1e9]        # 0x140015218
   14000702f:	mov    ebx,ecx
   140007031:	cmova  ebx,r14d
   140007035:	cmp    ebx,r14d
   140007038:	jne    0x140006ffd
   14000703a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000703f:	mov    rbp,QWORD PTR [rsp+0x38]
   140007044:	mov    rsi,QWORD PTR [rsp+0x40]
   140007049:	mov    rax,rdi
   14000704c:	mov    rdi,QWORD PTR [rsp+0x48]
   140007051:	add    rsp,0x20
   140007055:	pop    r14
   140007057:	ret    
   140007058:	int3   
   140007059:	int3   
   14000705a:	int3   
   14000705b:	int3   
   14000705c:	int3   
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	mov    rax,rsp
   140007063:	mov    QWORD PTR [rax+0x8],rbx
   140007067:	mov    QWORD PTR [rax+0x10],rbp
   14000706b:	mov    QWORD PTR [rax+0x18],rsi
   14000706f:	mov    QWORD PTR [rax+0x20],rdi
   140007073:	push   r14
   140007075:	sub    rsp,0x20
   140007079:	mov    esi,DWORD PTR [rip+0xe199]        # 0x140015218
   14000707f:	xor    edi,edi
   140007081:	mov    rbp,rcx
   140007084:	or     r14d,0xffffffff
   140007088:	mov    rcx,rbp
   14000708b:	call   0x1400039e8
   140007090:	mov    rbx,rax
   140007093:	test   rax,rax
   140007096:	jne    0x1400070bd
   140007098:	test   esi,esi
   14000709a:	je     0x1400070bd
   14000709c:	mov    ecx,edi
   14000709e:	call   QWORD PTR [rip+0x7054]        # 0x14000e0f8
   1400070a4:	mov    esi,DWORD PTR [rip+0xe16e]        # 0x140015218
   1400070aa:	lea    ecx,[rdi+0x3e8]
   1400070b0:	cmp    ecx,esi
   1400070b2:	mov    edi,ecx
   1400070b4:	cmova  edi,r14d
   1400070b8:	cmp    edi,r14d
   1400070bb:	jne    0x140007088
   1400070bd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400070c2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400070c7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400070cc:	mov    rax,rbx
   1400070cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070d4:	add    rsp,0x20
   1400070d8:	pop    r14
   1400070da:	ret    
   1400070db:	int3   
   1400070dc:	int3   
   1400070dd:	int3   
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	int3   
   1400070e1:	int3   
   1400070e2:	int3   
   1400070e3:	int3   
   1400070e4:	mov    rax,rsp
   1400070e7:	mov    QWORD PTR [rax+0x8],rbx
   1400070eb:	mov    QWORD PTR [rax+0x10],rbp
   1400070ef:	mov    QWORD PTR [rax+0x18],rsi
   1400070f3:	mov    QWORD PTR [rax+0x20],rdi
   1400070f7:	push   r14
   1400070f9:	sub    rsp,0x20
   1400070fd:	xor    ebx,ebx
   1400070ff:	mov    rsi,rdx
   140007102:	mov    rbp,rcx
   140007105:	or     r14d,0xffffffff
   140007109:	mov    rdx,rsi
   14000710c:	mov    rcx,rbp
   14000710f:	call   0x14000a4f8
   140007114:	mov    rdi,rax
   140007117:	test   rax,rax
   14000711a:	jne    0x140007148
   14000711c:	test   rsi,rsi
   14000711f:	je     0x140007148
   140007121:	cmp    DWORD PTR [rip+0xe0f1],eax        # 0x140015218
   140007127:	jbe    0x140007148
   140007129:	mov    ecx,ebx
   14000712b:	call   QWORD PTR [rip+0x6fc7]        # 0x14000e0f8
   140007131:	lea    ecx,[rbx+0x3e8]
   140007137:	cmp    ecx,DWORD PTR [rip+0xe0db]        # 0x140015218
   14000713d:	mov    ebx,ecx
   14000713f:	cmova  ebx,r14d
   140007143:	cmp    ebx,r14d
   140007146:	jne    0x140007109
   140007148:	mov    rbx,QWORD PTR [rsp+0x30]
   14000714d:	mov    rbp,QWORD PTR [rsp+0x38]
   140007152:	mov    rsi,QWORD PTR [rsp+0x40]
   140007157:	mov    rax,rdi
   14000715a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000715f:	add    rsp,0x20
   140007163:	pop    r14
   140007165:	ret    
   140007166:	int3   
   140007167:	int3   
   140007168:	int3   
   140007169:	int3   
   14000716a:	int3   
   14000716b:	int3   
   14000716c:	mov    QWORD PTR [rsp+0x8],rbx
   140007171:	push   rdi
   140007172:	sub    rsp,0x20
   140007176:	mov    rdi,r8
   140007179:	mov    rbx,rdx
   14000717c:	test   rcx,rcx
   14000717f:	je     0x14000719e
   140007181:	xor    edx,edx
   140007183:	lea    rax,[rdx-0x20]
   140007187:	div    rcx
   14000718a:	cmp    rax,rbx
   14000718d:	jae    0x14000719e
   14000718f:	call   0x140006370
   140007194:	mov    DWORD PTR [rax],0xc
   14000719a:	xor    eax,eax
   14000719c:	jmp    0x1400071fb
   14000719e:	imul   rbx,rcx
   1400071a2:	mov    eax,0x1
   1400071a7:	test   rbx,rbx
   1400071aa:	cmove  rbx,rax
   1400071ae:	xor    eax,eax
   1400071b0:	cmp    rbx,0xffffffffffffffe0
   1400071b4:	ja     0x1400071ce
   1400071b6:	mov    rcx,QWORD PTR [rip+0xd88b]        # 0x140014a48
   1400071bd:	lea    edx,[rax+0x8]
   1400071c0:	mov    r8,rbx
   1400071c3:	call   QWORD PTR [rip+0x6fa7]        # 0x14000e170
   1400071c9:	test   rax,rax
   1400071cc:	jne    0x1400071fb
   1400071ce:	cmp    DWORD PTR [rip+0xe023],0x0        # 0x1400151f8
   1400071d5:	je     0x1400071f0
   1400071d7:	mov    rcx,rbx
   1400071da:	call   0x1400062a8
   1400071df:	test   eax,eax
   1400071e1:	jne    0x1400071ae
   1400071e3:	test   rdi,rdi
   1400071e6:	je     0x14000719a
   1400071e8:	mov    DWORD PTR [rdi],0xc
   1400071ee:	jmp    0x14000719a
   1400071f0:	test   rdi,rdi
   1400071f3:	je     0x1400071fb
   1400071f5:	mov    DWORD PTR [rdi],0xc
   1400071fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140007200:	add    rsp,0x20
   140007204:	pop    rdi
   140007205:	ret    
   140007206:	int3   
   140007207:	int3   
   140007208:	int3   
   140007209:	int3   
   14000720a:	int3   
   14000720b:	int3   
   14000720c:	sub    rsp,0x28
   140007210:	mov    rcx,QWORD PTR [rip+0xe009]        # 0x140015220
   140007217:	call   QWORD PTR [rip+0x6eb3]        # 0x14000e0d0
   14000721d:	test   rax,rax
   140007220:	je     0x140007226
   140007222:	call   rax
   140007224:	jmp    0x140007226
   140007226:	call   0x140007234
   14000722b:	nop
   14000722c:	int3   
   14000722d:	int3   
   14000722e:	int3   
   14000722f:	int3   
   140007230:	int3   
   140007231:	int3   
   140007232:	int3   
   140007233:	int3   
   140007234:	sub    rsp,0x28
   140007238:	call   0x140004258
   14000723d:	mov    rcx,QWORD PTR [rax+0xd0]
   140007244:	test   rcx,rcx
   140007247:	je     0x14000724d
   140007249:	call   rcx
   14000724b:	jmp    0x14000724d
   14000724d:	call   0x14000623c
   140007252:	nop
   140007253:	int3   
   140007254:	int3   
   140007255:	int3   
   140007256:	int3   
   140007257:	int3   
   140007258:	int3   
   140007259:	int3   
   14000725a:	int3   
   14000725b:	int3   
   14000725c:	sub    rsp,0x28
   140007260:	lea    rcx,[rip+0xffffffffffffffcd]        # 0x140007234
   140007267:	call   QWORD PTR [rip+0x6efb]        # 0x14000e168
   14000726d:	mov    QWORD PTR [rip+0xdfac],rax        # 0x140015220
   140007274:	add    rsp,0x28
   140007278:	ret    
   140007279:	int3   
   14000727a:	int3   
   14000727b:	int3   
   14000727c:	int3   
   14000727d:	int3   
   14000727e:	int3   
   14000727f:	int3   
   140007280:	mov    QWORD PTR [rsp+0x8],rbx
   140007285:	push   rdi
   140007286:	sub    rsp,0x20
   14000728a:	movsxd rbx,ecx
   14000728d:	lea    rdi,[rip+0xbfcc]        # 0x140013260
   140007294:	add    rbx,rbx
   140007297:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000729c:	jne    0x1400072af
   14000729e:	call   0x14000735c
   1400072a3:	test   eax,eax
   1400072a5:	jne    0x1400072af
   1400072a7:	lea    ecx,[rax+0x11]
   1400072aa:	call   0x1400044e4
   1400072af:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400072b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072b8:	add    rsp,0x20
   1400072bc:	pop    rdi
   1400072bd:	rex.W jmp QWORD PTR [rip+0x6fc4]        # 0x14000e288
   1400072c4:	int3   
   1400072c5:	int3   
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	int3   
   1400072c9:	int3   
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400072d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400072d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400072db:	push   rdi
   1400072dc:	sub    rsp,0x20
   1400072e0:	mov    edi,0x24
   1400072e5:	lea    rbx,[rip+0xbf74]        # 0x140013260
   1400072ec:	mov    ebp,edi
   1400072ee:	mov    rsi,QWORD PTR [rbx]
   1400072f1:	test   rsi,rsi
   1400072f4:	je     0x140007311
   1400072f6:	cmp    DWORD PTR [rbx+0x8],0x1
   1400072fa:	je     0x140007311
   1400072fc:	mov    rcx,rsi
   1400072ff:	call   QWORD PTR [rip+0x6dab]        # 0x14000e0b0
   140007305:	mov    rcx,rsi
   140007308:	call   0x140003aa4
   14000730d:	and    QWORD PTR [rbx],0x0
   140007311:	add    rbx,0x10
   140007315:	dec    rbp
   140007318:	jne    0x1400072ee
   14000731a:	lea    rbx,[rip+0xbf47]        # 0x140013268
   140007321:	mov    rcx,QWORD PTR [rbx-0x8]
   140007325:	test   rcx,rcx
   140007328:	je     0x140007335
   14000732a:	cmp    DWORD PTR [rbx],0x1
   14000732d:	jne    0x140007335
   14000732f:	call   QWORD PTR [rip+0x6d7b]        # 0x14000e0b0
   140007335:	add    rbx,0x10
   140007339:	dec    rdi
   14000733c:	jne    0x140007321
   14000733e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007343:	mov    rbp,QWORD PTR [rsp+0x38]
   140007348:	mov    rsi,QWORD PTR [rsp+0x40]
   14000734d:	add    rsp,0x20
   140007351:	pop    rdi
   140007352:	ret    
   140007353:	int3   
   140007354:	int3   
   140007355:	int3   
   140007356:	int3   
   140007357:	int3   
   140007358:	int3   
   140007359:	int3   
   14000735a:	int3   
   14000735b:	int3   
   14000735c:	mov    QWORD PTR [rsp+0x8],rbx
   140007361:	mov    QWORD PTR [rsp+0x10],rdi
   140007366:	push   r14
   140007368:	sub    rsp,0x20
   14000736c:	movsxd rbx,ecx
   14000736f:	cmp    QWORD PTR [rip+0xd6d1],0x0        # 0x140014a48
   140007377:	jne    0x140007392
   140007379:	call   0x14000489c
   14000737e:	mov    ecx,0x1e
   140007383:	call   0x140004920
   140007388:	mov    ecx,0xff
   14000738d:	call   0x1400044c8
   140007392:	add    rbx,rbx
   140007395:	lea    r14,[rip+0xbec4]        # 0x140013260
   14000739c:	cmp    QWORD PTR [r14+rbx*8],0x0
   1400073a1:	je     0x1400073aa
   1400073a3:	mov    eax,0x1
   1400073a8:	jmp    0x140007406
   1400073aa:	mov    ecx,0x28
   1400073af:	call   0x140007060
   1400073b4:	mov    rdi,rax
   1400073b7:	test   rax,rax
   1400073ba:	jne    0x1400073cb
   1400073bc:	call   0x140006370
   1400073c1:	mov    DWORD PTR [rax],0xc
   1400073c7:	xor    eax,eax
   1400073c9:	jmp    0x140007406
   1400073cb:	mov    ecx,0xa
   1400073d0:	call   0x140007280
   1400073d5:	nop
   1400073d6:	mov    rcx,rdi
   1400073d9:	cmp    QWORD PTR [r14+rbx*8],0x0
   1400073de:	jne    0x1400073f1
   1400073e0:	mov    edx,0xfa0
   1400073e5:	call   QWORD PTR [rip+0x6cbd]        # 0x14000e0a8
   1400073eb:	mov    QWORD PTR [r14+rbx*8],rdi
   1400073ef:	jmp    0x1400073f7
   1400073f1:	call   0x140003aa4
   1400073f6:	nop
   1400073f7:	mov    rcx,QWORD PTR [rip+0xbf02]        # 0x140013300
   1400073fe:	call   QWORD PTR [rip+0x6e8c]        # 0x14000e290
   140007404:	jmp    0x1400073a3
   140007406:	mov    rbx,QWORD PTR [rsp+0x30]
   14000740b:	mov    rdi,QWORD PTR [rsp+0x38]
   140007410:	add    rsp,0x20
   140007414:	pop    r14
   140007416:	ret    
   140007417:	int3   
   140007418:	int3   
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	int3   
   14000741d:	int3   
   14000741e:	int3   
   14000741f:	int3   
   140007420:	mov    QWORD PTR [rsp+0x8],rbx
   140007425:	mov    QWORD PTR [rsp+0x10],rsi
   14000742a:	push   rdi
   14000742b:	sub    rsp,0x20
   14000742f:	xor    esi,esi
   140007431:	lea    rbx,[rip+0xbe28]        # 0x140013260
   140007438:	lea    edi,[rsi+0x24]
   14000743b:	cmp    DWORD PTR [rbx+0x8],0x1
   14000743f:	jne    0x140007463
   140007441:	movsxd rax,esi
   140007444:	lea    rdx,[rip+0xdde5]        # 0x140015230
   14000744b:	inc    esi
   14000744d:	lea    rcx,[rax+rax*4]
   140007451:	lea    rcx,[rdx+rcx*8]
   140007455:	mov    edx,0xfa0
   14000745a:	mov    QWORD PTR [rbx],rcx
   14000745d:	call   QWORD PTR [rip+0x6c45]        # 0x14000e0a8
   140007463:	add    rbx,0x10
   140007467:	dec    rdi
   14000746a:	jne    0x14000743b
   14000746c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007471:	mov    rsi,QWORD PTR [rsp+0x38]
   140007476:	lea    eax,[rdi+0x1]
   140007479:	add    rsp,0x20
   14000747d:	pop    rdi
   14000747e:	ret    
   14000747f:	int3   
   140007480:	int3   
   140007481:	int3   
   140007482:	int3   
   140007483:	int3   
   140007484:	int3   
   140007485:	int3   
   140007486:	int3   
   140007487:	int3   
   140007488:	movsxd rcx,ecx
   14000748b:	lea    rax,[rip+0xbdce]        # 0x140013260
   140007492:	add    rcx,rcx
   140007495:	mov    rcx,QWORD PTR [rax+rcx*8]
   140007499:	rex.W jmp QWORD PTR [rip+0x6df0]        # 0x14000e290
   1400074a0:	int3   
   1400074a1:	int3   
   1400074a2:	int3   
   1400074a3:	int3   
   1400074a4:	int3   
   1400074a5:	int3   
   1400074a6:	int3   
   1400074a7:	int3   
   1400074a8:	lock inc DWORD PTR [rcx]
   1400074ab:	mov    rax,QWORD PTR [rcx+0xd8]
   1400074b2:	test   rax,rax
   1400074b5:	je     0x1400074ba
   1400074b7:	lock inc DWORD PTR [rax]
   1400074ba:	mov    rax,QWORD PTR [rcx+0xe8]
   1400074c1:	test   rax,rax
   1400074c4:	je     0x1400074c9
   1400074c6:	lock inc DWORD PTR [rax]
   1400074c9:	mov    rax,QWORD PTR [rcx+0xe0]
   1400074d0:	test   rax,rax
   1400074d3:	je     0x1400074d8
   1400074d5:	lock inc DWORD PTR [rax]
   1400074d8:	mov    rax,QWORD PTR [rcx+0xf8]
   1400074df:	test   rax,rax
   1400074e2:	je     0x1400074e7
   1400074e4:	lock inc DWORD PTR [rax]
   1400074e7:	lea    rax,[rcx+0x28]
   1400074eb:	mov    r8d,0x6
   1400074f1:	lea    rdx,[rip+0xbfa8]        # 0x1400134a0
   1400074f8:	cmp    QWORD PTR [rax-0x10],rdx
   1400074fc:	je     0x140007509
   1400074fe:	mov    rdx,QWORD PTR [rax]
   140007501:	test   rdx,rdx
   140007504:	je     0x140007509
   140007506:	lock inc DWORD PTR [rdx]
   140007509:	cmp    QWORD PTR [rax-0x18],0x0
   14000750e:	je     0x14000751c
   140007510:	mov    rdx,QWORD PTR [rax-0x8]
   140007514:	test   rdx,rdx
   140007517:	je     0x14000751c
   140007519:	lock inc DWORD PTR [rdx]
   14000751c:	add    rax,0x20
   140007520:	dec    r8
   140007523:	jne    0x1400074f1
   140007525:	mov    rax,QWORD PTR [rcx+0x120]
   14000752c:	lock inc DWORD PTR [rax+0x15c]
   140007533:	ret    
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	mov    QWORD PTR [rsp+0x8],rbx
   140007541:	mov    QWORD PTR [rsp+0x10],rbp
   140007546:	mov    QWORD PTR [rsp+0x18],rsi
   14000754b:	push   rdi
   14000754c:	sub    rsp,0x20
   140007550:	mov    rax,QWORD PTR [rcx+0xf0]
   140007557:	mov    rbx,rcx
   14000755a:	test   rax,rax
   14000755d:	je     0x1400075d8
   14000755f:	lea    rcx,[rip+0xcd1a]        # 0x140014280
   140007566:	cmp    rax,rcx
   140007569:	je     0x1400075d8
   14000756b:	mov    rax,QWORD PTR [rbx+0xd8]
   140007572:	test   rax,rax
   140007575:	je     0x1400075d8
   140007577:	cmp    DWORD PTR [rax],0x0
   14000757a:	jne    0x1400075d8
   14000757c:	mov    rcx,QWORD PTR [rbx+0xe8]
   140007583:	test   rcx,rcx
   140007586:	je     0x14000759e
   140007588:	cmp    DWORD PTR [rcx],0x0
   14000758b:	jne    0x14000759e
   14000758d:	call   0x140003aa4
   140007592:	mov    rcx,QWORD PTR [rbx+0xf0]
   140007599:	call   0x14000a5d4
   14000759e:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400075a5:	test   rcx,rcx
   1400075a8:	je     0x1400075c0
   1400075aa:	cmp    DWORD PTR [rcx],0x0
   1400075ad:	jne    0x1400075c0
   1400075af:	call   0x140003aa4
   1400075b4:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400075bb:	call   0x14000a6e4
   1400075c0:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400075c7:	call   0x140003aa4
   1400075cc:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400075d3:	call   0x140003aa4
   1400075d8:	mov    rax,QWORD PTR [rbx+0xf8]
   1400075df:	test   rax,rax
   1400075e2:	je     0x14000762b
   1400075e4:	cmp    DWORD PTR [rax],0x0
   1400075e7:	jne    0x14000762b
   1400075e9:	mov    rcx,QWORD PTR [rbx+0x100]
   1400075f0:	sub    rcx,0xfe
   1400075f7:	call   0x140003aa4
   1400075fc:	mov    rcx,QWORD PTR [rbx+0x110]
   140007603:	mov    edi,0x80
   140007608:	sub    rcx,rdi
   14000760b:	call   0x140003aa4
   140007610:	mov    rcx,QWORD PTR [rbx+0x118]
   140007617:	sub    rcx,rdi
   14000761a:	call   0x140003aa4
   14000761f:	mov    rcx,QWORD PTR [rbx+0xf8]
   140007626:	call   0x140003aa4
   14000762b:	mov    rcx,QWORD PTR [rbx+0x120]
   140007632:	lea    rax,[rip+0xbe77]        # 0x1400134b0
   140007639:	cmp    rcx,rax
   14000763c:	je     0x140007658
   14000763e:	cmp    DWORD PTR [rcx+0x15c],0x0
   140007645:	jne    0x140007658
   140007647:	call   0x14000a758
   14000764c:	mov    rcx,QWORD PTR [rbx+0x120]
   140007653:	call   0x140003aa4
   140007658:	lea    rsi,[rbx+0x128]
   14000765f:	lea    rdi,[rbx+0x28]
   140007663:	mov    ebp,0x6
   140007668:	lea    rax,[rip+0xbe31]        # 0x1400134a0
   14000766f:	cmp    QWORD PTR [rdi-0x10],rax
   140007673:	je     0x14000768f
   140007675:	mov    rcx,QWORD PTR [rdi]
   140007678:	test   rcx,rcx
   14000767b:	je     0x14000768f
   14000767d:	cmp    DWORD PTR [rcx],0x0
   140007680:	jne    0x14000768f
   140007682:	call   0x140003aa4
   140007687:	mov    rcx,QWORD PTR [rsi]
   14000768a:	call   0x140003aa4
   14000768f:	cmp    QWORD PTR [rdi-0x18],0x0
   140007694:	je     0x1400076a9
   140007696:	mov    rcx,QWORD PTR [rdi-0x8]
   14000769a:	test   rcx,rcx
   14000769d:	je     0x1400076a9
   14000769f:	cmp    DWORD PTR [rcx],0x0
   1400076a2:	jne    0x1400076a9
   1400076a4:	call   0x140003aa4
   1400076a9:	add    rsi,0x8
   1400076ad:	add    rdi,0x20
   1400076b1:	dec    rbp
   1400076b4:	jne    0x140007668
   1400076b6:	mov    rcx,rbx
   1400076b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400076be:	mov    rbp,QWORD PTR [rsp+0x38]
   1400076c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400076c8:	add    rsp,0x20
   1400076cc:	pop    rdi
   1400076cd:	jmp    0x140003aa4
   1400076d2:	int3   
   1400076d3:	int3   
   1400076d4:	int3   
   1400076d5:	int3   
   1400076d6:	int3   
   1400076d7:	int3   
   1400076d8:	test   rcx,rcx
   1400076db:	je     0x140007778
   1400076e1:	or     r9d,0xffffffff
   1400076e5:	lock add DWORD PTR [rcx],r9d
   1400076e9:	mov    rax,QWORD PTR [rcx+0xd8]
   1400076f0:	test   rax,rax
   1400076f3:	je     0x1400076f9
   1400076f5:	lock add DWORD PTR [rax],r9d
   1400076f9:	mov    rax,QWORD PTR [rcx+0xe8]
   140007700:	test   rax,rax
   140007703:	je     0x140007709
   140007705:	lock add DWORD PTR [rax],r9d
   140007709:	mov    rax,QWORD PTR [rcx+0xe0]
   140007710:	test   rax,rax
   140007713:	je     0x140007719
   140007715:	lock add DWORD PTR [rax],r9d
   140007719:	mov    rax,QWORD PTR [rcx+0xf8]
   140007720:	test   rax,rax
   140007723:	je     0x140007729
   140007725:	lock add DWORD PTR [rax],r9d
   140007729:	lea    rax,[rcx+0x28]
   14000772d:	mov    r8d,0x6
   140007733:	lea    rdx,[rip+0xbd66]        # 0x1400134a0
   14000773a:	cmp    QWORD PTR [rax-0x10],rdx
   14000773e:	je     0x14000774c
   140007740:	mov    rdx,QWORD PTR [rax]
   140007743:	test   rdx,rdx
   140007746:	je     0x14000774c
   140007748:	lock add DWORD PTR [rdx],r9d
   14000774c:	cmp    QWORD PTR [rax-0x18],0x0
   140007751:	je     0x140007760
   140007753:	mov    rdx,QWORD PTR [rax-0x8]
   140007757:	test   rdx,rdx
   14000775a:	je     0x140007760
   14000775c:	lock add DWORD PTR [rdx],r9d
   140007760:	add    rax,0x20
   140007764:	dec    r8
   140007767:	jne    0x140007733
   140007769:	mov    rax,QWORD PTR [rcx+0x120]
   140007770:	lock add DWORD PTR [rax+0x15c],r9d
   140007778:	mov    rax,rcx
   14000777b:	ret    
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	int3   
   140007781:	int3   
   140007782:	int3   
   140007783:	int3   
   140007784:	rex push rbx
   140007786:	sub    rsp,0x20
   14000778a:	call   0x140004258
   14000778f:	mov    rbx,rax
   140007792:	mov    ecx,DWORD PTR [rip+0xcac8]        # 0x140014260
   140007798:	test   DWORD PTR [rax+0xc8],ecx
   14000779e:	je     0x1400077b8
   1400077a0:	cmp    QWORD PTR [rax+0xc0],0x0
   1400077a8:	je     0x1400077b8
   1400077aa:	call   0x140004258
   1400077af:	mov    rbx,QWORD PTR [rax+0xc0]
   1400077b6:	jmp    0x1400077e3
   1400077b8:	mov    ecx,0xc
   1400077bd:	call   0x140007280
   1400077c2:	nop
   1400077c3:	lea    rcx,[rbx+0xc0]
   1400077ca:	mov    rdx,QWORD PTR [rip+0xbf9f]        # 0x140013770
   1400077d1:	call   0x140007800
   1400077d6:	mov    rbx,rax
   1400077d9:	mov    ecx,0xc
   1400077de:	call   0x140007488
   1400077e3:	test   rbx,rbx
   1400077e6:	jne    0x1400077f0
   1400077e8:	lea    ecx,[rbx+0x20]
   1400077eb:	call   0x1400044e4
   1400077f0:	mov    rax,rbx
   1400077f3:	add    rsp,0x20
   1400077f7:	pop    rbx
   1400077f8:	ret    
   1400077f9:	int3   
   1400077fa:	int3   
   1400077fb:	int3   
   1400077fc:	int3   
   1400077fd:	int3   
   1400077fe:	int3   
   1400077ff:	int3   
   140007800:	mov    QWORD PTR [rsp+0x8],rbx
   140007805:	push   rdi
   140007806:	sub    rsp,0x20
   14000780a:	mov    rdi,rdx
   14000780d:	test   rdx,rdx
   140007810:	je     0x140007855
   140007812:	test   rcx,rcx
   140007815:	je     0x140007855
   140007817:	mov    rbx,QWORD PTR [rcx]
   14000781a:	cmp    rbx,rdx
   14000781d:	je     0x140007850
   14000781f:	mov    QWORD PTR [rcx],rdx
   140007822:	mov    rcx,rdx
   140007825:	call   0x1400074a8
   14000782a:	test   rbx,rbx
   14000782d:	je     0x140007850
   14000782f:	mov    rcx,rbx
   140007832:	call   0x1400076d8
   140007837:	cmp    DWORD PTR [rbx],0x0
   14000783a:	jne    0x140007850
   14000783c:	lea    rax,[rip+0xbf3d]        # 0x140013780
   140007843:	cmp    rbx,rax
   140007846:	je     0x140007850
   140007848:	mov    rcx,rbx
   14000784b:	call   0x14000753c
   140007850:	mov    rax,rdi
   140007853:	jmp    0x140007857
   140007855:	xor    eax,eax
   140007857:	mov    rbx,QWORD PTR [rsp+0x30]
   14000785c:	add    rsp,0x20
   140007860:	pop    rdi
   140007861:	ret    
   140007862:	int3   
   140007863:	int3   
   140007864:	int3   
   140007865:	int3   
   140007866:	int3   
   140007867:	int3   
   140007868:	sub    rsp,0x28
   14000786c:	cmp    DWORD PTR [rip+0xf0ad],0x0        # 0x140016920
   140007873:	jne    0x140007889
   140007875:	mov    ecx,0xfffffffd
   14000787a:	call   0x140007d08
   14000787f:	mov    DWORD PTR [rip+0xf097],0x1        # 0x140016920
   140007889:	xor    eax,eax
   14000788b:	add    rsp,0x28
   14000788f:	ret    
   140007890:	int3   
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	int3   
   140007895:	int3   
   140007896:	int3   
   140007897:	int3   
   140007898:	rex push rbx
   14000789a:	sub    rsp,0x20
   14000789e:	mov    rbx,rcx
   1400078a1:	mov    BYTE PTR [rcx+0x18],0x0
   1400078a5:	test   rdx,rdx
   1400078a8:	jne    0x140007930
   1400078ae:	call   0x140004258
   1400078b3:	mov    QWORD PTR [rbx+0x10],rax
   1400078b7:	mov    rdx,QWORD PTR [rax+0xc0]
   1400078be:	mov    QWORD PTR [rbx],rdx
   1400078c1:	mov    rcx,QWORD PTR [rax+0xb8]
   1400078c8:	mov    QWORD PTR [rbx+0x8],rcx
   1400078cc:	cmp    rdx,QWORD PTR [rip+0xbe9d]        # 0x140013770
   1400078d3:	je     0x1400078eb
   1400078d5:	mov    eax,DWORD PTR [rax+0xc8]
   1400078db:	test   DWORD PTR [rip+0xc97f],eax        # 0x140014260
   1400078e1:	jne    0x1400078eb
   1400078e3:	call   0x140007784
   1400078e8:	mov    QWORD PTR [rbx],rax
   1400078eb:	mov    rax,QWORD PTR [rip+0xc1f6]        # 0x140013ae8
   1400078f2:	cmp    QWORD PTR [rbx+0x8],rax
   1400078f6:	je     0x140007913
   1400078f8:	mov    rax,QWORD PTR [rbx+0x10]
   1400078fc:	mov    ecx,DWORD PTR [rax+0xc8]
   140007902:	test   DWORD PTR [rip+0xc958],ecx        # 0x140014260
   140007908:	jne    0x140007913
   14000790a:	call   0x140007c48
   14000790f:	mov    QWORD PTR [rbx+0x8],rax
   140007913:	mov    rcx,QWORD PTR [rbx+0x10]
   140007917:	mov    eax,DWORD PTR [rcx+0xc8]
   14000791d:	test   al,0x2
   14000791f:	jne    0x140007937
   140007921:	or     eax,0x2
   140007924:	mov    DWORD PTR [rcx+0xc8],eax
   14000792a:	mov    BYTE PTR [rbx+0x18],0x1
   14000792e:	jmp    0x140007937
   140007930:	movups xmm0,XMMWORD PTR [rdx]
   140007933:	movdqu XMMWORD PTR [rcx],xmm0
   140007937:	mov    rax,rbx
   14000793a:	add    rsp,0x20
   14000793e:	pop    rbx
   14000793f:	ret    
   140007940:	int3   
   140007941:	int3   
   140007942:	int3   
   140007943:	int3   
   140007944:	int3   
   140007945:	int3   
   140007946:	int3   
   140007947:	int3   
   140007948:	rex push rbx
   14000794a:	sub    rsp,0x40
   14000794e:	mov    ebx,ecx
   140007950:	lea    rcx,[rsp+0x20]
   140007955:	xor    edx,edx
   140007957:	call   0x140007898
   14000795c:	and    DWORD PTR [rip+0xdb19],0x0        # 0x14001547c
   140007963:	cmp    ebx,0xfffffffe
   140007966:	jne    0x14000797a
   140007968:	mov    DWORD PTR [rip+0xdb0a],0x1        # 0x14001547c
   140007972:	call   QWORD PTR [rip+0x6930]        # 0x14000e2a8
   140007978:	jmp    0x14000798f
   14000797a:	cmp    ebx,0xfffffffd
   14000797d:	jne    0x140007993
   14000797f:	mov    DWORD PTR [rip+0xdaf3],0x1        # 0x14001547c
   140007989:	call   QWORD PTR [rip+0x6911]        # 0x14000e2a0
   14000798f:	mov    ebx,eax
   140007991:	jmp    0x1400079aa
   140007993:	cmp    ebx,0xfffffffc
   140007996:	jne    0x1400079aa
   140007998:	mov    rax,QWORD PTR [rsp+0x20]
   14000799d:	mov    DWORD PTR [rip+0xdad5],0x1        # 0x14001547c
   1400079a7:	mov    ebx,DWORD PTR [rax+0x4]
   1400079aa:	cmp    BYTE PTR [rsp+0x38],0x0
   1400079af:	je     0x1400079bd
   1400079b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079b6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400079bd:	mov    eax,ebx
   1400079bf:	add    rsp,0x40
   1400079c3:	pop    rbx
   1400079c4:	ret    
   1400079c5:	int3   
   1400079c6:	int3   
   1400079c7:	int3   
   1400079c8:	int3   
   1400079c9:	int3   
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400079d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400079d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400079db:	push   rdi
   1400079dc:	sub    rsp,0x20
   1400079e0:	lea    rbx,[rcx+0x18]
   1400079e4:	mov    rsi,rcx
   1400079e7:	mov    ebp,0x101
   1400079ec:	mov    rcx,rbx
   1400079ef:	mov    r8d,ebp
   1400079f2:	xor    edx,edx
   1400079f4:	call   0x140006bd0
   1400079f9:	xor    eax,eax
   1400079fb:	lea    rdi,[rsi+0xc]
   1400079ff:	mov    QWORD PTR [rsi+0x4],rax
   140007a03:	mov    QWORD PTR [rsi+0x220],rax
   140007a0a:	mov    ecx,0x6
   140007a0f:	movzx  eax,ax
   140007a12:	rep stos WORD PTR es:[rdi],ax
   140007a15:	lea    rdi,[rip+0xc1d4]        # 0x140013bf0
   140007a1c:	sub    rdi,rsi
   140007a1f:	mov    al,BYTE PTR [rdi+rbx*1]
   140007a22:	mov    BYTE PTR [rbx],al
   140007a24:	inc    rbx
   140007a27:	dec    rbp
   140007a2a:	jne    0x140007a1f
   140007a2c:	lea    rcx,[rsi+0x119]
   140007a33:	mov    edx,0x100
   140007a38:	mov    al,BYTE PTR [rcx+rdi*1]
   140007a3b:	mov    BYTE PTR [rcx],al
   140007a3d:	inc    rcx
   140007a40:	dec    rdx
   140007a43:	jne    0x140007a38
   140007a45:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a4a:	mov    rbp,QWORD PTR [rsp+0x38]
   140007a4f:	mov    rsi,QWORD PTR [rsp+0x40]
   140007a54:	add    rsp,0x20
   140007a58:	pop    rdi
   140007a59:	ret    
   140007a5a:	int3   
   140007a5b:	int3   
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	mov    QWORD PTR [rsp+0x10],rbx
   140007a65:	mov    QWORD PTR [rsp+0x18],rdi
   140007a6a:	push   rbp
   140007a6b:	lea    rbp,[rsp-0x480]
   140007a73:	sub    rsp,0x580
   140007a7a:	mov    rax,QWORD PTR [rip+0xb64f]        # 0x1400130d0
   140007a81:	xor    rax,rsp
   140007a84:	mov    QWORD PTR [rbp+0x470],rax
   140007a8b:	mov    rdi,rcx
   140007a8e:	mov    ecx,DWORD PTR [rcx+0x4]
   140007a91:	lea    rdx,[rsp+0x50]
   140007a96:	call   QWORD PTR [rip+0x6814]        # 0x14000e2b0
   140007a9c:	mov    ebx,0x100
   140007aa1:	test   eax,eax
   140007aa3:	je     0x140007bde
   140007aa9:	xor    eax,eax
   140007aab:	lea    rcx,[rsp+0x70]
   140007ab0:	mov    BYTE PTR [rcx],al
   140007ab2:	inc    eax
   140007ab4:	inc    rcx
   140007ab7:	cmp    eax,ebx
   140007ab9:	jb     0x140007ab0
   140007abb:	mov    al,BYTE PTR [rsp+0x56]
   140007abf:	mov    BYTE PTR [rsp+0x70],0x20
   140007ac4:	lea    rdx,[rsp+0x56]
   140007ac9:	jmp    0x140007aed
   140007acb:	movzx  r8d,BYTE PTR [rdx+0x1]
   140007ad0:	movzx  ecx,al
   140007ad3:	jmp    0x140007ae2
   140007ad5:	cmp    ecx,ebx
   140007ad7:	jae    0x140007ae7
   140007ad9:	mov    eax,ecx
   140007adb:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   140007ae0:	inc    ecx
   140007ae2:	cmp    ecx,r8d
   140007ae5:	jbe    0x140007ad5
   140007ae7:	add    rdx,0x2
   140007aeb:	mov    al,BYTE PTR [rdx]
   140007aed:	test   al,al
   140007aef:	jne    0x140007acb
   140007af1:	mov    eax,DWORD PTR [rdi+0x4]
   140007af4:	and    DWORD PTR [rsp+0x30],0x0
   140007af9:	lea    r8,[rsp+0x70]
   140007afe:	mov    DWORD PTR [rsp+0x28],eax
   140007b02:	lea    rax,[rbp+0x270]
   140007b09:	mov    r9d,ebx
   140007b0c:	mov    edx,0x1
   140007b11:	xor    ecx,ecx
   140007b13:	mov    QWORD PTR [rsp+0x20],rax
   140007b18:	call   0x14000b034
   140007b1d:	and    DWORD PTR [rsp+0x40],0x0
   140007b22:	mov    eax,DWORD PTR [rdi+0x4]
   140007b25:	mov    rdx,QWORD PTR [rdi+0x220]
   140007b2c:	mov    DWORD PTR [rsp+0x38],eax
   140007b30:	lea    rax,[rbp+0x70]
   140007b34:	mov    DWORD PTR [rsp+0x30],ebx
   140007b38:	mov    QWORD PTR [rsp+0x28],rax
   140007b3d:	lea    r9,[rsp+0x70]
   140007b42:	mov    r8d,ebx
   140007b45:	xor    ecx,ecx
   140007b47:	mov    DWORD PTR [rsp+0x20],ebx
   140007b4b:	call   0x14000ae2c
   140007b50:	and    DWORD PTR [rsp+0x40],0x0
   140007b55:	mov    eax,DWORD PTR [rdi+0x4]
   140007b58:	mov    rdx,QWORD PTR [rdi+0x220]
   140007b5f:	mov    DWORD PTR [rsp+0x38],eax
   140007b63:	lea    rax,[rbp+0x170]
   140007b6a:	mov    DWORD PTR [rsp+0x30],ebx
   140007b6e:	mov    QWORD PTR [rsp+0x28],rax
   140007b73:	lea    r9,[rsp+0x70]
   140007b78:	mov    r8d,0x200
   140007b7e:	xor    ecx,ecx
   140007b80:	mov    DWORD PTR [rsp+0x20],ebx
   140007b84:	call   0x14000ae2c
   140007b89:	lea    r8,[rbp+0x70]
   140007b8d:	lea    r9,[rbp+0x170]
   140007b94:	sub    r8,rdi
   140007b97:	lea    rdx,[rbp+0x270]
   140007b9e:	lea    rcx,[rdi+0x19]
   140007ba2:	sub    r9,rdi
   140007ba5:	test   BYTE PTR [rdx],0x1
   140007ba8:	je     0x140007bb4
   140007baa:	or     BYTE PTR [rcx],0x10
   140007bad:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   140007bb2:	jmp    0x140007bc1
   140007bb4:	test   BYTE PTR [rdx],0x2
   140007bb7:	je     0x140007bc9
   140007bb9:	or     BYTE PTR [rcx],0x20
   140007bbc:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   140007bc1:	mov    BYTE PTR [rcx+0x100],al
   140007bc7:	jmp    0x140007bd0
   140007bc9:	mov    BYTE PTR [rcx+0x100],0x0
   140007bd0:	inc    rcx
   140007bd3:	add    rdx,0x2
   140007bd7:	dec    rbx
   140007bda:	jne    0x140007ba5
   140007bdc:	jmp    0x140007c1d
   140007bde:	xor    edx,edx
   140007be0:	lea    rcx,[rdi+0x19]
   140007be4:	lea    r8d,[rdx-0x61]
   140007be8:	lea    eax,[r8+0x20]
   140007bec:	cmp    eax,0x19
   140007bef:	ja     0x140007bf9
   140007bf1:	or     BYTE PTR [rcx],0x10
   140007bf4:	lea    eax,[rdx+0x20]
   140007bf7:	jmp    0x140007c05
   140007bf9:	cmp    r8d,0x19
   140007bfd:	ja     0x140007c0d
   140007bff:	or     BYTE PTR [rcx],0x20
   140007c02:	lea    eax,[rdx-0x20]
   140007c05:	mov    BYTE PTR [rcx+0x100],al
   140007c0b:	jmp    0x140007c14
   140007c0d:	mov    BYTE PTR [rcx+0x100],0x0
   140007c14:	inc    edx
   140007c16:	inc    rcx
   140007c19:	cmp    edx,ebx
   140007c1b:	jb     0x140007be4
   140007c1d:	mov    rcx,QWORD PTR [rbp+0x470]
   140007c24:	xor    rcx,rsp
   140007c27:	call   0x140003950
   140007c2c:	lea    r11,[rsp+0x580]
   140007c34:	mov    rbx,QWORD PTR [r11+0x18]
   140007c38:	mov    rdi,QWORD PTR [r11+0x20]
   140007c3c:	mov    rsp,r11
   140007c3f:	pop    rbp
   140007c40:	ret    
   140007c41:	int3   
   140007c42:	int3   
   140007c43:	int3   
   140007c44:	int3   
   140007c45:	int3   
   140007c46:	int3   
   140007c47:	int3   
   140007c48:	mov    QWORD PTR [rsp+0x10],rbx
   140007c4d:	push   rdi
   140007c4e:	sub    rsp,0x20
   140007c52:	call   0x140004258
   140007c57:	mov    rdi,rax
   140007c5a:	mov    ecx,DWORD PTR [rip+0xc600]        # 0x140014260
   140007c60:	test   DWORD PTR [rax+0xc8],ecx
   140007c66:	je     0x140007c7b
   140007c68:	cmp    QWORD PTR [rax+0xc0],0x0
   140007c70:	je     0x140007c7b
   140007c72:	mov    rbx,QWORD PTR [rax+0xb8]
   140007c79:	jmp    0x140007ce7
   140007c7b:	mov    ecx,0xd
   140007c80:	call   0x140007280
   140007c85:	nop
   140007c86:	mov    rbx,QWORD PTR [rdi+0xb8]
   140007c8d:	mov    QWORD PTR [rsp+0x30],rbx
   140007c92:	cmp    rbx,QWORD PTR [rip+0xbe4f]        # 0x140013ae8
   140007c99:	je     0x140007cdd
   140007c9b:	test   rbx,rbx
   140007c9e:	je     0x140007cbb
   140007ca0:	lock dec DWORD PTR [rbx]
   140007ca3:	jne    0x140007cbb
   140007ca5:	lea    rax,[rip+0xbf44]        # 0x140013bf0
   140007cac:	mov    rcx,QWORD PTR [rsp+0x30]
   140007cb1:	cmp    rcx,rax
   140007cb4:	je     0x140007cbb
   140007cb6:	call   0x140003aa4
   140007cbb:	mov    rax,QWORD PTR [rip+0xbe26]        # 0x140013ae8
   140007cc2:	mov    QWORD PTR [rdi+0xb8],rax
   140007cc9:	mov    rax,QWORD PTR [rip+0xbe18]        # 0x140013ae8
   140007cd0:	mov    QWORD PTR [rsp+0x30],rax
   140007cd5:	lock inc DWORD PTR [rax]
   140007cd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cdd:	mov    ecx,0xd
   140007ce2:	call   0x140007488
   140007ce7:	test   rbx,rbx
   140007cea:	jne    0x140007cf4
   140007cec:	lea    ecx,[rbx+0x20]
   140007cef:	call   0x1400044e4
   140007cf4:	mov    rax,rbx
   140007cf7:	mov    rbx,QWORD PTR [rsp+0x38]
   140007cfc:	add    rsp,0x20
   140007d00:	pop    rdi
   140007d01:	ret    
   140007d02:	int3   
   140007d03:	int3   
   140007d04:	int3   
   140007d05:	int3   
   140007d06:	int3   
   140007d07:	int3   
   140007d08:	mov    rax,rsp
   140007d0b:	mov    QWORD PTR [rax+0x8],rbx
   140007d0f:	mov    QWORD PTR [rax+0x10],rsi
   140007d13:	mov    QWORD PTR [rax+0x18],rdi
   140007d17:	mov    QWORD PTR [rax+0x20],r14
   140007d1b:	push   r15
   140007d1d:	sub    rsp,0x30
   140007d21:	mov    edi,ecx
   140007d23:	or     r15d,0xffffffff
   140007d27:	call   0x140004258
   140007d2c:	mov    rsi,rax
   140007d2f:	call   0x140007c48
   140007d34:	mov    rbx,QWORD PTR [rsi+0xb8]
   140007d3b:	mov    ecx,edi
   140007d3d:	call   0x140007948
   140007d42:	mov    r14d,eax
   140007d45:	cmp    eax,DWORD PTR [rbx+0x4]
   140007d48:	je     0x140007f41
   140007d4e:	mov    ecx,0x228
   140007d53:	call   0x140007060
   140007d58:	mov    rbx,rax
   140007d5b:	xor    edi,edi
   140007d5d:	test   rax,rax
   140007d60:	je     0x140007f46
   140007d66:	mov    rdx,QWORD PTR [rsi+0xb8]
   140007d6d:	mov    rcx,rax
   140007d70:	mov    rax,rdx
   140007d73:	or     rax,rcx
   140007d76:	and    eax,0xf
   140007d79:	jne    0x140007de3
   140007d7b:	lea    eax,[rdi+0x4]
   140007d7e:	lea    r8d,[rax+0x7c]
   140007d82:	movaps xmm0,XMMWORD PTR [rdx]
   140007d85:	movaps XMMWORD PTR [rcx],xmm0
   140007d88:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   140007d8c:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140007d90:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   140007d94:	movaps XMMWORD PTR [rcx+0x20],xmm0
   140007d98:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   140007d9c:	movaps XMMWORD PTR [rcx+0x30],xmm1
   140007da0:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   140007da4:	movaps XMMWORD PTR [rcx+0x40],xmm0
   140007da8:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   140007dac:	movaps XMMWORD PTR [rcx+0x50],xmm1
   140007db0:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   140007db4:	movaps XMMWORD PTR [rcx+0x60],xmm0
   140007db8:	add    rcx,r8
   140007dbb:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   140007dbf:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140007dc3:	add    rdx,r8
   140007dc6:	dec    rax
   140007dc9:	jne    0x140007d82
   140007dcb:	movaps xmm0,XMMWORD PTR [rdx]
   140007dce:	movaps XMMWORD PTR [rcx],xmm0
   140007dd1:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   140007dd5:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140007dd9:	mov    rax,QWORD PTR [rdx+0x20]
   140007ddd:	mov    QWORD PTR [rcx+0x20],rax
   140007de1:	jmp    0x140007dee
   140007de3:	mov    r8d,0x228
   140007de9:	call   0x1400066d0
   140007dee:	mov    DWORD PTR [rbx],edi
   140007df0:	mov    rdx,rbx
   140007df3:	mov    ecx,r14d
   140007df6:	call   0x140007f6c
   140007dfb:	mov    r15d,eax
   140007dfe:	test   eax,eax
   140007e00:	jne    0x140007f1b
   140007e06:	mov    rcx,QWORD PTR [rsi+0xb8]
   140007e0d:	lea    r14,[rip+0xbddc]        # 0x140013bf0
   140007e14:	lock dec DWORD PTR [rcx]
   140007e17:	jne    0x140007e2a
   140007e19:	mov    rcx,QWORD PTR [rsi+0xb8]
   140007e20:	cmp    rcx,r14
   140007e23:	je     0x140007e2a
   140007e25:	call   0x140003aa4
   140007e2a:	mov    QWORD PTR [rsi+0xb8],rbx
   140007e31:	lock inc DWORD PTR [rbx]
   140007e34:	test   BYTE PTR [rsi+0xc8],0x2
   140007e3b:	jne    0x140007f46
   140007e41:	test   BYTE PTR [rip+0xc418],0x1        # 0x140014260
   140007e48:	jne    0x140007f46
   140007e4e:	mov    esi,0xd
   140007e53:	mov    ecx,esi
   140007e55:	call   0x140007280
   140007e5a:	nop
   140007e5b:	mov    eax,DWORD PTR [rbx+0x4]
   140007e5e:	mov    DWORD PTR [rip+0xd604],eax        # 0x140015468
   140007e64:	mov    eax,DWORD PTR [rbx+0x8]
   140007e67:	mov    DWORD PTR [rip+0xd5ff],eax        # 0x14001546c
   140007e6d:	mov    rax,QWORD PTR [rbx+0x220]
   140007e74:	mov    QWORD PTR [rip+0xd5e5],rax        # 0x140015460
   140007e7b:	mov    edx,edi
   140007e7d:	lea    r8,[rip+0xffffffffffff817c]        # 0x140000000
   140007e84:	mov    DWORD PTR [rsp+0x20],edx
   140007e88:	cmp    edx,0x5
   140007e8b:	jge    0x140007ea2
   140007e8d:	movsxd rcx,edx
   140007e90:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   140007e95:	mov    WORD PTR [r8+rcx*2+0x15470],ax
   140007e9e:	inc    edx
   140007ea0:	jmp    0x140007e84
   140007ea2:	mov    edx,edi
   140007ea4:	mov    DWORD PTR [rsp+0x20],edx
   140007ea8:	cmp    edx,0x101
   140007eae:	jge    0x140007ec3
   140007eb0:	movsxd rcx,edx
   140007eb3:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   140007eb7:	mov    BYTE PTR [rcx+r8*1+0x139e0],al
   140007ebf:	inc    edx
   140007ec1:	jmp    0x140007ea4
   140007ec3:	mov    DWORD PTR [rsp+0x20],edi
   140007ec7:	cmp    edi,0x100
   140007ecd:	jge    0x140007ee5
   140007ecf:	movsxd rcx,edi
   140007ed2:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   140007ed9:	mov    BYTE PTR [rcx+r8*1+0x13af0],al
   140007ee1:	inc    edi
   140007ee3:	jmp    0x140007ec3
   140007ee5:	mov    rcx,QWORD PTR [rip+0xbbfc]        # 0x140013ae8
   140007eec:	or     eax,0xffffffff
   140007eef:	lock xadd DWORD PTR [rcx],eax
   140007ef3:	dec    eax
   140007ef5:	jne    0x140007f08
   140007ef7:	mov    rcx,QWORD PTR [rip+0xbbea]        # 0x140013ae8
   140007efe:	cmp    rcx,r14
   140007f01:	je     0x140007f08
   140007f03:	call   0x140003aa4
   140007f08:	mov    QWORD PTR [rip+0xbbd9],rbx        # 0x140013ae8
   140007f0f:	lock inc DWORD PTR [rbx]
   140007f12:	mov    ecx,esi
   140007f14:	call   0x140007488
   140007f19:	jmp    0x140007f46
   140007f1b:	cmp    eax,0xffffffff
   140007f1e:	jne    0x140007f46
   140007f20:	lea    r14,[rip+0xbcc9]        # 0x140013bf0
   140007f27:	cmp    rbx,r14
   140007f2a:	je     0x140007f34
   140007f2c:	mov    rcx,rbx
   140007f2f:	call   0x140003aa4
   140007f34:	call   0x140006370
   140007f39:	mov    DWORD PTR [rax],0x16
   140007f3f:	jmp    0x140007f46
   140007f41:	xor    edi,edi
   140007f43:	mov    r15d,edi
   140007f46:	mov    eax,r15d
   140007f49:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f4e:	mov    rsi,QWORD PTR [rsp+0x48]
   140007f53:	mov    rdi,QWORD PTR [rsp+0x50]
   140007f58:	mov    r14,QWORD PTR [rsp+0x58]
   140007f5d:	add    rsp,0x30
   140007f61:	pop    r15
   140007f63:	ret    
   140007f64:	int3   
   140007f65:	int3   
   140007f66:	int3   
   140007f67:	int3   
   140007f68:	int3   
   140007f69:	int3   
   140007f6a:	int3   
   140007f6b:	int3   
   140007f6c:	mov    QWORD PTR [rsp+0x18],rbx
   140007f71:	mov    QWORD PTR [rsp+0x20],rbp
   140007f76:	push   rsi
   140007f77:	push   rdi
   140007f78:	push   r12
   140007f7a:	push   r14
   140007f7c:	push   r15
   140007f7e:	sub    rsp,0x40
   140007f82:	mov    rax,QWORD PTR [rip+0xb147]        # 0x1400130d0
   140007f89:	xor    rax,rsp
   140007f8c:	mov    QWORD PTR [rsp+0x38],rax
   140007f91:	mov    rbx,rdx
   140007f94:	call   0x140007948
   140007f99:	xor    esi,esi
   140007f9b:	mov    edi,eax
   140007f9d:	test   eax,eax
   140007f9f:	jne    0x140007fae
   140007fa1:	mov    rcx,rbx
   140007fa4:	call   0x1400079cc
   140007fa9:	jmp    0x1400081f2
   140007fae:	lea    r12,[rip+0xb93b]        # 0x1400138f0
   140007fb5:	mov    ebp,esi
   140007fb7:	mov    r15d,0x1
   140007fbd:	mov    rax,r12
   140007fc0:	cmp    DWORD PTR [rax],edi
   140007fc2:	je     0x140008100
   140007fc8:	add    ebp,r15d
   140007fcb:	add    rax,0x30
   140007fcf:	cmp    ebp,0x5
   140007fd2:	jb     0x140007fc0
   140007fd4:	lea    eax,[rdi-0xfde8]
   140007fda:	cmp    eax,r15d
   140007fdd:	jbe    0x1400080f8
   140007fe3:	movzx  ecx,di
   140007fe6:	call   QWORD PTR [rip+0x62ac]        # 0x14000e298
   140007fec:	test   eax,eax
   140007fee:	je     0x1400080f8
   140007ff4:	lea    rdx,[rsp+0x20]
   140007ff9:	mov    ecx,edi
   140007ffb:	call   QWORD PTR [rip+0x62af]        # 0x14000e2b0
   140008001:	test   eax,eax
   140008003:	je     0x1400080ec
   140008009:	lea    rcx,[rbx+0x18]
   14000800d:	xor    edx,edx
   14000800f:	mov    r8d,0x101
   140008015:	call   0x140006bd0
   14000801a:	mov    DWORD PTR [rbx+0x4],edi
   14000801d:	mov    QWORD PTR [rbx+0x220],rsi
   140008024:	cmp    DWORD PTR [rsp+0x20],r15d
   140008029:	jbe    0x1400080d5
   14000802f:	lea    rdx,[rsp+0x26]
   140008034:	cmp    BYTE PTR [rsp+0x26],sil
   140008039:	je     0x140008074
   14000803b:	cmp    BYTE PTR [rdx+0x1],sil
   14000803f:	je     0x140008074
   140008041:	movzx  r8d,BYTE PTR [rdx]
   140008045:	movzx  edi,BYTE PTR [rdx+0x1]
   140008049:	cmp    r8d,edi
   14000804c:	ja     0x14000806b
   14000804e:	lea    ecx,[r8+0x1]
   140008052:	lea    rax,[rbx+0x18]
   140008056:	add    rax,rcx
   140008059:	sub    edi,r8d
   14000805c:	lea    ecx,[r15+rdi*1]
   140008060:	or     BYTE PTR [rax],0x4
   140008063:	add    rax,r15
   140008066:	sub    rcx,r15
   140008069:	jne    0x140008060
   14000806b:	add    rdx,0x2
   14000806f:	cmp    BYTE PTR [rdx],sil
   140008072:	jne    0x14000803b
   140008074:	lea    rax,[rbx+0x1a]
   140008078:	mov    ecx,0xfe
   14000807d:	or     BYTE PTR [rax],0x8
   140008080:	add    rax,r15
   140008083:	sub    rcx,r15
   140008086:	jne    0x14000807d
   140008088:	mov    ecx,DWORD PTR [rbx+0x4]
   14000808b:	sub    ecx,0x3a4
   140008091:	je     0x1400080c1
   140008093:	sub    ecx,0x4
   140008096:	je     0x1400080b8
   140008098:	sub    ecx,0xd
   14000809b:	je     0x1400080af
   14000809d:	dec    ecx
   14000809f:	je     0x1400080a6
   1400080a1:	mov    rax,rsi
   1400080a4:	jmp    0x1400080c8
   1400080a6:	mov    rax,QWORD PTR [rip+0x759b]        # 0x14000f648
   1400080ad:	jmp    0x1400080c8
   1400080af:	mov    rax,QWORD PTR [rip+0x758a]        # 0x14000f640
   1400080b6:	jmp    0x1400080c8
   1400080b8:	mov    rax,QWORD PTR [rip+0x7579]        # 0x14000f638
   1400080bf:	jmp    0x1400080c8
   1400080c1:	mov    rax,QWORD PTR [rip+0x7568]        # 0x14000f630
   1400080c8:	mov    QWORD PTR [rbx+0x220],rax
   1400080cf:	mov    DWORD PTR [rbx+0x8],r15d
   1400080d3:	jmp    0x1400080d8
   1400080d5:	mov    DWORD PTR [rbx+0x8],esi
   1400080d8:	lea    rdi,[rbx+0xc]
   1400080dc:	movzx  eax,si
   1400080df:	mov    ecx,0x6
   1400080e4:	rep stos WORD PTR es:[rdi],ax
   1400080e7:	jmp    0x1400081ea
   1400080ec:	cmp    DWORD PTR [rip+0xd38a],esi        # 0x14001547c
   1400080f2:	jne    0x140007fa1
   1400080f8:	or     eax,0xffffffff
   1400080fb:	jmp    0x1400081f4
   140008100:	lea    rcx,[rbx+0x18]
   140008104:	xor    edx,edx
   140008106:	mov    r8d,0x101
   14000810c:	call   0x140006bd0
   140008111:	mov    eax,ebp
   140008113:	lea    r9,[r12+0x10]
   140008118:	lea    r11,[rax+rax*2]
   14000811c:	lea    r14,[rip+0xb7bd]        # 0x1400138e0
   140008123:	mov    ebp,0x4
   140008128:	shl    r11,0x4
   14000812c:	add    r9,r11
   14000812f:	mov    rdx,r9
   140008132:	cmp    BYTE PTR [r9],sil
   140008135:	je     0x140008177
   140008137:	cmp    BYTE PTR [rdx+0x1],sil
   14000813b:	je     0x140008177
   14000813d:	movzx  r8d,BYTE PTR [rdx]
   140008141:	movzx  eax,BYTE PTR [rdx+0x1]
   140008145:	cmp    r8d,eax
   140008148:	ja     0x14000816e
   14000814a:	lea    r10d,[r8+0x1]
   14000814e:	cmp    r10d,0x101
   140008155:	jae    0x14000816e
   140008157:	mov    al,BYTE PTR [r14]
   14000815a:	add    r8d,r15d
   14000815d:	or     BYTE PTR [r10+rbx*1+0x18],al
   140008162:	movzx  eax,BYTE PTR [rdx+0x1]
   140008166:	add    r10d,r15d
   140008169:	cmp    r8d,eax
   14000816c:	jbe    0x14000814e
   14000816e:	add    rdx,0x2
   140008172:	cmp    BYTE PTR [rdx],sil
   140008175:	jne    0x140008137
   140008177:	add    r9,0x8
   14000817b:	add    r14,r15
   14000817e:	sub    rbp,r15
   140008181:	jne    0x14000812f
   140008183:	mov    DWORD PTR [rbx+0x4],edi
   140008186:	mov    DWORD PTR [rbx+0x8],r15d
   14000818a:	sub    edi,0x3a4
   140008190:	je     0x1400081bb
   140008192:	sub    edi,0x4
   140008195:	je     0x1400081b2
   140008197:	sub    edi,0xd
   14000819a:	je     0x1400081a9
   14000819c:	dec    edi
   14000819e:	jne    0x1400081c2
   1400081a0:	mov    rsi,QWORD PTR [rip+0x74a1]        # 0x14000f648
   1400081a7:	jmp    0x1400081c2
   1400081a9:	mov    rsi,QWORD PTR [rip+0x7490]        # 0x14000f640
   1400081b0:	jmp    0x1400081c2
   1400081b2:	mov    rsi,QWORD PTR [rip+0x747f]        # 0x14000f638
   1400081b9:	jmp    0x1400081c2
   1400081bb:	mov    rsi,QWORD PTR [rip+0x746e]        # 0x14000f630
   1400081c2:	sub    r11,rbx
   1400081c5:	mov    QWORD PTR [rbx+0x220],rsi
   1400081cc:	lea    rcx,[rbx+0xc]
   1400081d0:	lea    rdi,[r11+r12*1]
   1400081d4:	mov    edx,0x6
   1400081d9:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   1400081de:	mov    WORD PTR [rcx],ax
   1400081e1:	lea    rcx,[rcx+0x2]
   1400081e5:	sub    rdx,r15
   1400081e8:	jne    0x1400081d9
   1400081ea:	mov    rcx,rbx
   1400081ed:	call   0x140007a60
   1400081f2:	xor    eax,eax
   1400081f4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400081f9:	xor    rcx,rsp
   1400081fc:	call   0x140003950
   140008201:	lea    r11,[rsp+0x40]
   140008206:	mov    rbx,QWORD PTR [r11+0x40]
   14000820a:	mov    rbp,QWORD PTR [r11+0x48]
   14000820e:	mov    rsp,r11
   140008211:	pop    r15
   140008213:	pop    r14
   140008215:	pop    r12
   140008217:	pop    rdi
   140008218:	pop    rsi
   140008219:	ret    
   14000821a:	int3   
   14000821b:	int3   
   14000821c:	int3   
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008224:	xor    r9d,r9d
   140008227:	mov    r10,rdx
   14000822a:	add    r8,rcx
   14000822d:	movzx  eax,WORD PTR [r8+0x14]
   140008232:	movzx  r11d,WORD PTR [r8+0x6]
   140008237:	add    rax,0x18
   14000823b:	add    rax,r8
   14000823e:	test   r11d,r11d
   140008241:	je     0x140008261
   140008243:	mov    edx,DWORD PTR [rax+0xc]
   140008246:	cmp    r10,rdx
   140008249:	jb     0x140008255
   14000824b:	mov    ecx,DWORD PTR [rax+0x8]
   14000824e:	add    ecx,edx
   140008250:	cmp    r10,rcx
   140008253:	jb     0x140008263
   140008255:	inc    r9d
   140008258:	add    rax,0x28
   14000825c:	cmp    r9d,r11d
   14000825f:	jb     0x140008243
   140008261:	xor    eax,eax
   140008263:	repz ret 
   140008265:	int3   
   140008266:	int3   
   140008267:	int3   
   140008268:	int3   
   140008269:	int3   
   14000826a:	int3   
   14000826b:	int3   
   14000826c:	int3   
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	mov    QWORD PTR [rsp+0x8],rbx
   140008275:	push   rdi
   140008276:	sub    rsp,0x20
   14000827a:	mov    rbx,rcx
   14000827d:	lea    rdi,[rip+0xffffffffffff7d7c]        # 0x140000000
   140008284:	mov    rcx,rdi
   140008287:	call   0x1400082d0
   14000828c:	test   eax,eax
   14000828e:	je     0x1400082b2
   140008290:	sub    rbx,rdi
   140008293:	mov    rdx,rbx
   140008296:	mov    rcx,rdi
   140008299:	call   0x140008220
   14000829e:	test   rax,rax
   1400082a1:	je     0x1400082b2
   1400082a3:	mov    eax,DWORD PTR [rax+0x24]
   1400082a6:	shr    eax,0x1f
   1400082a9:	not    eax
   1400082ab:	and    eax,0x1
   1400082ae:	jmp    0x1400082b2
   1400082b0:	xor    eax,eax
   1400082b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400082b7:	add    rsp,0x20
   1400082bb:	pop    rdi
   1400082bc:	ret    
   1400082bd:	int3   
   1400082be:	int3   
   1400082bf:	int3   
   1400082c0:	int3   
   1400082c1:	int3   
   1400082c2:	int3   
   1400082c3:	int3   
   1400082c4:	int3   
   1400082c5:	int3   
   1400082c6:	int3   
   1400082c7:	int3   
   1400082c8:	int3   
   1400082c9:	int3   
   1400082ca:	int3   
   1400082cb:	int3   
   1400082cc:	int3   
   1400082cd:	int3   
   1400082ce:	int3   
   1400082cf:	int3   
   1400082d0:	mov    rax,rcx
   1400082d3:	mov    ecx,0x5a4d
   1400082d8:	cmp    WORD PTR [rax],cx
   1400082db:	je     0x1400082e0
   1400082dd:	xor    eax,eax
   1400082df:	ret    
   1400082e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400082e4:	add    rcx,rax
   1400082e7:	xor    eax,eax
   1400082e9:	cmp    DWORD PTR [rcx],0x4550
   1400082ef:	jne    0x1400082fd
   1400082f1:	mov    edx,0x20b
   1400082f6:	cmp    WORD PTR [rcx+0x18],dx
   1400082fa:	sete   al
   1400082fd:	repz ret 
   1400082ff:	int3   
   140008300:	int3   
   140008301:	int3   
   140008302:	int3   
   140008303:	int3   
   140008304:	int3   
   140008305:	int3   
   140008306:	int3   
   140008307:	int3   
   140008308:	mov    QWORD PTR [rsp+0x8],rbx
   14000830d:	push   rdi
   14000830e:	sub    rsp,0x20
   140008312:	xor    edi,edi
   140008314:	lea    rbx,[rip+0xbb05]        # 0x140013e20
   14000831b:	mov    rcx,QWORD PTR [rbx]
   14000831e:	call   QWORD PTR [rip+0x5e44]        # 0x14000e168
   140008324:	inc    edi
   140008326:	mov    QWORD PTR [rbx],rax
   140008329:	movsxd rax,edi
   14000832c:	lea    rbx,[rbx+0x8]
   140008330:	cmp    rax,0xa
   140008334:	jb     0x14000831b
   140008336:	mov    rbx,QWORD PTR [rsp+0x30]
   14000833b:	add    rsp,0x20
   14000833f:	pop    rdi
   140008340:	ret    
   140008341:	int3   
   140008342:	int3   
   140008343:	int3   
   140008344:	int3   
   140008345:	int3   
   140008346:	int3   
   140008347:	int3   
   140008348:	mov    QWORD PTR [rip+0xd131],rcx        # 0x140015480
   14000834f:	ret    
   140008350:	int3   
   140008351:	int3   
   140008352:	int3   
   140008353:	int3   
   140008354:	int3   
   140008355:	int3   
   140008356:	int3   
   140008357:	int3   
   140008358:	mov    rcx,QWORD PTR [rip+0xd139]        # 0x140015498
   14000835f:	rex.W jmp QWORD PTR [rip+0x5d6a]        # 0x14000e0d0
   140008366:	int3   
   140008367:	int3   
   140008368:	int3   
   140008369:	int3   
   14000836a:	int3   
   14000836b:	int3   
   14000836c:	mov    QWORD PTR [rip+0xd115],rcx        # 0x140015488
   140008373:	mov    QWORD PTR [rip+0xd116],rcx        # 0x140015490
   14000837a:	mov    QWORD PTR [rip+0xd117],rcx        # 0x140015498
   140008381:	mov    QWORD PTR [rip+0xd118],rcx        # 0x1400154a0
   140008388:	ret    
   140008389:	int3   
   14000838a:	int3   
   14000838b:	int3   
   14000838c:	int3   
   14000838d:	int3   
   14000838e:	int3   
   14000838f:	int3   
   140008390:	mov    QWORD PTR [rsp+0x18],rbx
   140008395:	push   rsi
   140008396:	push   rdi
   140008397:	push   r12
   140008399:	push   r14
   14000839b:	push   r15
   14000839d:	sub    rsp,0x30
   1400083a1:	mov    ebx,ecx
   1400083a3:	xor    edi,edi
   1400083a5:	mov    DWORD PTR [rsp+0x60],edi
   1400083a9:	xor    esi,esi
   1400083ab:	mov    edx,ecx
   1400083ad:	sub    edx,0x2
   1400083b0:	je     0x14000847a
   1400083b6:	sub    edx,0x2
   1400083b9:	je     0x14000841d
   1400083bb:	sub    edx,0x2
   1400083be:	je     0x14000840d
   1400083c0:	sub    edx,0x2
   1400083c3:	je     0x14000841d
   1400083c5:	sub    edx,0x3
   1400083c8:	je     0x14000841d
   1400083ca:	sub    edx,0x4
   1400083cd:	je     0x1400083fd
   1400083cf:	sub    edx,0x6
   1400083d2:	je     0x1400083ea
   1400083d4:	dec    edx
   1400083d6:	je     0x14000840d
   1400083d8:	call   0x140006370
   1400083dd:	mov    DWORD PTR [rax],0x16
   1400083e3:	call   0x140006658
   1400083e8:	jmp    0x14000842a
   1400083ea:	lea    r14,[rip+0xd09f]        # 0x140015490
   1400083f1:	mov    rcx,QWORD PTR [rip+0xd098]        # 0x140015490
   1400083f8:	jmp    0x140008488
   1400083fd:	lea    r14,[rip+0xd09c]        # 0x1400154a0
   140008404:	mov    rcx,QWORD PTR [rip+0xd095]        # 0x1400154a0
   14000840b:	jmp    0x140008488
   14000840d:	lea    r14,[rip+0xd084]        # 0x140015498
   140008414:	mov    rcx,QWORD PTR [rip+0xd07d]        # 0x140015498
   14000841b:	jmp    0x140008488
   14000841d:	call   0x140004284
   140008422:	mov    rsi,rax
   140008425:	test   rax,rax
   140008428:	jne    0x140008432
   14000842a:	or     eax,0xffffffff
   14000842d:	jmp    0x1400085a2
   140008432:	mov    rdx,QWORD PTR [rax+0xa0]
   140008439:	mov    rcx,rdx
   14000843c:	movsxd r8,DWORD PTR [rip+0x611d]        # 0x14000e560
   140008443:	cmp    DWORD PTR [rcx+0x4],ebx
   140008446:	je     0x14000845b
   140008448:	add    rcx,0x10
   14000844c:	mov    rax,r8
   14000844f:	shl    rax,0x4
   140008453:	add    rax,rdx
   140008456:	cmp    rcx,rax
   140008459:	jb     0x140008443
   14000845b:	mov    rax,r8
   14000845e:	shl    rax,0x4
   140008462:	add    rax,rdx
   140008465:	cmp    rcx,rax
   140008468:	jae    0x14000846f
   14000846a:	cmp    DWORD PTR [rcx+0x4],ebx
   14000846d:	je     0x140008471
   14000846f:	xor    ecx,ecx
   140008471:	lea    r14,[rcx+0x8]
   140008475:	mov    r15,QWORD PTR [r14]
   140008478:	jmp    0x14000849a
   14000847a:	lea    r14,[rip+0xd007]        # 0x140015488
   140008481:	mov    rcx,QWORD PTR [rip+0xd000]        # 0x140015488
   140008488:	mov    edi,0x1
   14000848d:	mov    DWORD PTR [rsp+0x60],edi
   140008491:	call   QWORD PTR [rip+0x5c39]        # 0x14000e0d0
   140008497:	mov    r15,rax
   14000849a:	cmp    r15,0x1
   14000849e:	jne    0x1400084a7
   1400084a0:	xor    eax,eax
   1400084a2:	jmp    0x1400085a2
   1400084a7:	test   r15,r15
   1400084aa:	jne    0x1400084b6
   1400084ac:	lea    ecx,[r15+0x3]
   1400084b0:	call   0x1400045f4
   1400084b5:	int3   
   1400084b6:	test   edi,edi
   1400084b8:	je     0x1400084c2
   1400084ba:	xor    ecx,ecx
   1400084bc:	call   0x140007280
   1400084c1:	nop
   1400084c2:	mov    r12d,0x910
   1400084c8:	cmp    ebx,0xb
   1400084cb:	ja     0x140008500
   1400084cd:	bt     r12d,ebx
   1400084d1:	jae    0x140008500
   1400084d3:	mov    rax,QWORD PTR [rsi+0xa8]
   1400084da:	mov    QWORD PTR [rsp+0x28],rax
   1400084df:	and    QWORD PTR [rsi+0xa8],0x0
   1400084e7:	cmp    ebx,0x8
   1400084ea:	jne    0x14000853e
   1400084ec:	mov    eax,DWORD PTR [rsi+0xb0]
   1400084f2:	mov    DWORD PTR [rsp+0x68],eax
   1400084f6:	mov    DWORD PTR [rsi+0xb0],0x8c
   140008500:	cmp    ebx,0x8
   140008503:	jne    0x14000853e
   140008505:	mov    ecx,DWORD PTR [rip+0x605d]        # 0x14000e568
   14000850b:	mov    edx,ecx
   14000850d:	mov    DWORD PTR [rsp+0x20],ecx
   140008511:	mov    eax,DWORD PTR [rip+0x6055]        # 0x14000e56c
   140008517:	add    ecx,eax
   140008519:	cmp    edx,ecx
   14000851b:	jge    0x140008549
   14000851d:	movsxd rcx,edx
   140008520:	add    rcx,rcx
   140008523:	mov    rax,QWORD PTR [rsi+0xa0]
   14000852a:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140008530:	inc    edx
   140008532:	mov    DWORD PTR [rsp+0x20],edx
   140008536:	mov    ecx,DWORD PTR [rip+0x602c]        # 0x14000e568
   14000853c:	jmp    0x140008511
   14000853e:	xor    ecx,ecx
   140008540:	call   QWORD PTR [rip+0x5c22]        # 0x14000e168
   140008546:	mov    QWORD PTR [r14],rax
   140008549:	test   edi,edi
   14000854b:	je     0x140008554
   14000854d:	xor    ecx,ecx
   14000854f:	call   0x140007488
   140008554:	cmp    ebx,0x8
   140008557:	jne    0x140008566
   140008559:	mov    edx,DWORD PTR [rsi+0xb0]
   14000855f:	mov    ecx,ebx
   140008561:	call   r15
   140008564:	jmp    0x14000856b
   140008566:	mov    ecx,ebx
   140008568:	call   r15
   14000856b:	cmp    ebx,0xb
   14000856e:	ja     0x1400084a0
   140008574:	bt     r12d,ebx
   140008578:	jae    0x1400084a0
   14000857e:	mov    rax,QWORD PTR [rsp+0x28]
   140008583:	mov    QWORD PTR [rsi+0xa8],rax
   14000858a:	cmp    ebx,0x8
   14000858d:	jne    0x1400084a0
   140008593:	mov    eax,DWORD PTR [rsp+0x68]
   140008597:	mov    DWORD PTR [rsi+0xb0],eax
   14000859d:	jmp    0x1400084a0
   1400085a2:	mov    rbx,QWORD PTR [rsp+0x70]
   1400085a7:	add    rsp,0x30
   1400085ab:	pop    r15
   1400085ad:	pop    r14
   1400085af:	pop    r12
   1400085b1:	pop    rdi
   1400085b2:	pop    rsi
   1400085b3:	ret    
   1400085b4:	int3   
   1400085b5:	int3   
   1400085b6:	int3   
   1400085b7:	int3   
   1400085b8:	int3   
   1400085b9:	int3   
   1400085ba:	int3   
   1400085bb:	int3   
   1400085bc:	int3   
   1400085bd:	int3   
   1400085be:	int3   
   1400085bf:	int3   
   1400085c0:	int3   
   1400085c1:	int3   
   1400085c2:	int3   
   1400085c3:	int3   
   1400085c4:	int3   
   1400085c5:	int3   
   1400085c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400085d0:	mov    rax,rcx
   1400085d3:	neg    rcx
   1400085d6:	test   rax,0x7
   1400085dc:	je     0x1400085ed
   1400085de:	xchg   ax,ax
   1400085e0:	mov    dl,BYTE PTR [rax]
   1400085e2:	inc    rax
   1400085e5:	test   dl,dl
   1400085e7:	je     0x140008648
   1400085e9:	test   al,0x7
   1400085eb:	jne    0x1400085e0
   1400085ed:	movabs r8,0x7efefefefefefeff
   1400085f7:	movabs r11,0x8101010101010100
   140008601:	mov    rdx,QWORD PTR [rax]
   140008604:	mov    r9,r8
   140008607:	add    rax,0x8
   14000860b:	add    r9,rdx
   14000860e:	not    rdx
   140008611:	xor    rdx,r9
   140008614:	and    rdx,r11
   140008617:	je     0x140008601
   140008619:	mov    rdx,QWORD PTR [rax-0x8]
   14000861d:	test   dl,dl
   14000861f:	je     0x140008672
   140008621:	test   dh,dh
   140008623:	je     0x14000866c
   140008625:	shr    rdx,0x10
   140008629:	test   dl,dl
   14000862b:	je     0x140008666
   14000862d:	test   dh,dh
   14000862f:	je     0x140008660
   140008631:	shr    rdx,0x10
   140008635:	test   dl,dl
   140008637:	je     0x14000865a
   140008639:	test   dh,dh
   14000863b:	je     0x140008654
   14000863d:	shr    edx,0x10
   140008640:	test   dl,dl
   140008642:	je     0x14000864e
   140008644:	test   dh,dh
   140008646:	jne    0x140008601
   140008648:	lea    rax,[rcx+rax*1-0x1]
   14000864d:	ret    
   14000864e:	lea    rax,[rcx+rax*1-0x2]
   140008653:	ret    
   140008654:	lea    rax,[rcx+rax*1-0x3]
   140008659:	ret    
   14000865a:	lea    rax,[rcx+rax*1-0x4]
   14000865f:	ret    
   140008660:	lea    rax,[rcx+rax*1-0x5]
   140008665:	ret    
   140008666:	lea    rax,[rcx+rax*1-0x6]
   14000866b:	ret    
   14000866c:	lea    rax,[rcx+rax*1-0x7]
   140008671:	ret    
   140008672:	lea    rax,[rcx+rax*1-0x8]
   140008677:	ret    
   140008678:	int3   
   140008679:	int3   
   14000867a:	int3   
   14000867b:	int3   
   14000867c:	int3   
   14000867d:	int3   
   14000867e:	int3   
   14000867f:	int3   
   140008680:	rex push rbx
   140008682:	sub    rsp,0x20
   140008686:	xor    r10d,r10d
   140008689:	mov    r9,rcx
   14000868c:	test   rcx,rcx
   14000868f:	je     0x14000869f
   140008691:	test   rdx,rdx
   140008694:	je     0x14000869f
   140008696:	test   r8,r8
   140008699:	jne    0x1400086b8
   14000869b:	mov    WORD PTR [rcx],r10w
   14000869f:	call   0x140006370
   1400086a4:	mov    ebx,0x16
   1400086a9:	mov    DWORD PTR [rax],ebx
   1400086ab:	call   0x140006658
   1400086b0:	mov    eax,ebx
   1400086b2:	add    rsp,0x20
   1400086b6:	pop    rbx
   1400086b7:	ret    
   1400086b8:	cmp    WORD PTR [rcx],r10w
   1400086bc:	je     0x1400086c7
   1400086be:	add    rcx,0x2
   1400086c2:	dec    rdx
   1400086c5:	jne    0x1400086b8
   1400086c7:	test   rdx,rdx
   1400086ca:	jne    0x1400086d2
   1400086cc:	mov    WORD PTR [r9],r10w
   1400086d0:	jmp    0x14000869f
   1400086d2:	sub    rcx,r8
   1400086d5:	movzx  eax,WORD PTR [r8]
   1400086d9:	mov    WORD PTR [rcx+r8*1],ax
   1400086de:	lea    r8,[r8+0x2]
   1400086e2:	test   ax,ax
   1400086e5:	je     0x1400086ec
   1400086e7:	dec    rdx
   1400086ea:	jne    0x1400086d5
   1400086ec:	test   rdx,rdx
   1400086ef:	jne    0x140008701
   1400086f1:	mov    WORD PTR [r9],r10w
   1400086f5:	call   0x140006370
   1400086fa:	mov    ebx,0x22
   1400086ff:	jmp    0x1400086a9
   140008701:	xor    eax,eax
   140008703:	jmp    0x1400086b2
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	int3   
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	rex push rbx
   14000870e:	sub    rsp,0x20
   140008712:	xor    r10d,r10d
   140008715:	test   rcx,rcx
   140008718:	je     0x140008728
   14000871a:	test   rdx,rdx
   14000871d:	je     0x140008728
   14000871f:	test   r8,r8
   140008722:	jne    0x140008741
   140008724:	mov    WORD PTR [rcx],r10w
   140008728:	call   0x140006370
   14000872d:	mov    ebx,0x16
   140008732:	mov    DWORD PTR [rax],ebx
   140008734:	call   0x140006658
   140008739:	mov    eax,ebx
   14000873b:	add    rsp,0x20
   14000873f:	pop    rbx
   140008740:	ret    
   140008741:	mov    r9,rcx
   140008744:	sub    r9,r8
   140008747:	movzx  eax,WORD PTR [r8]
   14000874b:	mov    WORD PTR [r9+r8*1],ax
   140008750:	lea    r8,[r8+0x2]
   140008754:	test   ax,ax
   140008757:	je     0x14000875e
   140008759:	dec    rdx
   14000875c:	jne    0x140008747
   14000875e:	test   rdx,rdx
   140008761:	jne    0x140008773
   140008763:	mov    WORD PTR [rcx],r10w
   140008767:	call   0x140006370
   14000876c:	mov    ebx,0x22
   140008771:	jmp    0x140008732
   140008773:	xor    eax,eax
   140008775:	jmp    0x14000873b
   140008777:	int3   
   140008778:	int3   
   140008779:	int3   
   14000877a:	int3   
   14000877b:	int3   
   14000877c:	int3   
   14000877d:	int3   
   14000877e:	int3   
   14000877f:	int3   
   140008780:	mov    rax,rcx
   140008783:	movzx  edx,WORD PTR [rax]
   140008786:	add    rax,0x2
   14000878a:	test   dx,dx
   14000878d:	jne    0x140008783
   14000878f:	sub    rax,rcx
   140008792:	sar    rax,1
   140008795:	dec    rax
   140008798:	ret    
   140008799:	int3   
   14000879a:	int3   
   14000879b:	int3   
   14000879c:	int3   
   14000879d:	int3   
   14000879e:	int3   
   14000879f:	int3   
   1400087a0:	rex push rbx
   1400087a2:	sub    rsp,0x20
   1400087a6:	xor    ebx,ebx
   1400087a8:	test   r9,r9
   1400087ab:	jne    0x1400087bb
   1400087ad:	test   rcx,rcx
   1400087b0:	jne    0x1400087c0
   1400087b2:	test   rdx,rdx
   1400087b5:	jne    0x1400087d7
   1400087b7:	xor    eax,eax
   1400087b9:	jmp    0x1400087ea
   1400087bb:	test   rcx,rcx
   1400087be:	je     0x1400087d7
   1400087c0:	test   rdx,rdx
   1400087c3:	je     0x1400087d7
   1400087c5:	test   r9,r9
   1400087c8:	jne    0x1400087cf
   1400087ca:	mov    WORD PTR [rcx],bx
   1400087cd:	jmp    0x1400087b7
   1400087cf:	test   r8,r8
   1400087d2:	jne    0x1400087f0
   1400087d4:	mov    WORD PTR [rcx],bx
   1400087d7:	call   0x140006370
   1400087dc:	mov    ebx,0x16
   1400087e1:	mov    DWORD PTR [rax],ebx
   1400087e3:	call   0x140006658
   1400087e8:	mov    eax,ebx
   1400087ea:	add    rsp,0x20
   1400087ee:	pop    rbx
   1400087ef:	ret    
   1400087f0:	mov    r11,rcx
   1400087f3:	mov    r10,rdx
   1400087f6:	cmp    r9,0xffffffffffffffff
   1400087fa:	jne    0x140008818
   1400087fc:	sub    r11,r8
   1400087ff:	movzx  eax,WORD PTR [r8]
   140008803:	mov    WORD PTR [r11+r8*1],ax
   140008808:	lea    r8,[r8+0x2]
   14000880c:	test   ax,ax
   14000880f:	je     0x140008840
   140008811:	dec    r10
   140008814:	jne    0x1400087ff
   140008816:	jmp    0x140008840
   140008818:	sub    r8,rcx
   14000881b:	movzx  eax,WORD PTR [r8+r11*1]
   140008820:	mov    WORD PTR [r11],ax
   140008824:	lea    r11,[r11+0x2]
   140008828:	test   ax,ax
   14000882b:	je     0x140008837
   14000882d:	dec    r10
   140008830:	je     0x140008837
   140008832:	dec    r9
   140008835:	jne    0x14000881b
   140008837:	test   r9,r9
   14000883a:	jne    0x140008840
   14000883c:	mov    WORD PTR [r11],bx
   140008840:	test   r10,r10
   140008843:	jne    0x1400087b7
   140008849:	cmp    r9,0xffffffffffffffff
   14000884d:	jne    0x14000885a
   14000884f:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140008854:	lea    eax,[r10+0x50]
   140008858:	jmp    0x1400087ea
   14000885a:	mov    WORD PTR [rcx],bx
   14000885d:	call   0x140006370
   140008862:	mov    ebx,0x22
   140008867:	jmp    0x1400087e1
   14000886c:	int3   
   14000886d:	int3   
   14000886e:	int3   
   14000886f:	int3   
   140008870:	int3   
   140008871:	int3   
   140008872:	int3   
   140008873:	int3   
   140008874:	rex push rbx
   140008876:	push   rbp
   140008877:	push   rsi
   140008878:	push   rdi
   140008879:	push   r12
   14000887b:	push   r14
   14000887d:	push   r15
   14000887f:	sub    rsp,0x50
   140008883:	mov    rax,QWORD PTR [rip+0xa846]        # 0x1400130d0
   14000888a:	xor    rax,rsp
   14000888d:	mov    QWORD PTR [rsp+0x48],rax
   140008892:	mov    r15,rcx
   140008895:	xor    ecx,ecx
   140008897:	mov    ebp,r8d
   14000889a:	mov    r12,rdx
   14000889d:	call   QWORD PTR [rip+0x58c5]        # 0x14000e168
   1400088a3:	xor    edi,edi
   1400088a5:	mov    rsi,rax
   1400088a8:	call   0x1400056d4
   1400088ad:	cmp    QWORD PTR [rip+0xcc0c],rdi        # 0x1400154c0
   1400088b4:	mov    r14d,eax
   1400088b7:	jne    0x1400089b0
   1400088bd:	lea    rcx,[rip+0x6dcc]        # 0x14000f690
   1400088c4:	xor    edx,edx
   1400088c6:	mov    r8d,0x800
   1400088cc:	call   QWORD PTR [rip+0x59e6]        # 0x14000e2b8
   1400088d2:	mov    rbx,rax
   1400088d5:	test   rax,rax
   1400088d8:	jne    0x140008902
   1400088da:	call   QWORD PTR [rip+0x57c0]        # 0x14000e0a0
   1400088e0:	cmp    eax,0x57
   1400088e3:	jne    0x140008ac4
   1400088e9:	lea    rcx,[rip+0x6da0]        # 0x14000f690
   1400088f0:	call   QWORD PTR [rip+0x59d2]        # 0x14000e2c8
   1400088f6:	mov    rbx,rax
   1400088f9:	test   rax,rax
   1400088fc:	je     0x140008ac4
   140008902:	lea    rdx,[rip+0x6d9f]        # 0x14000f6a8
   140008909:	mov    rcx,rbx
   14000890c:	call   QWORD PTR [rip+0x5886]        # 0x14000e198
   140008912:	test   rax,rax
   140008915:	je     0x140008ac4
   14000891b:	mov    rcx,rax
   14000891e:	call   QWORD PTR [rip+0x5844]        # 0x14000e168
   140008924:	lea    rdx,[rip+0x6d8d]        # 0x14000f6b8
   14000892b:	mov    rcx,rbx
   14000892e:	mov    QWORD PTR [rip+0xcb8b],rax        # 0x1400154c0
   140008935:	call   QWORD PTR [rip+0x585d]        # 0x14000e198
   14000893b:	mov    rcx,rax
   14000893e:	call   QWORD PTR [rip+0x5824]        # 0x14000e168
   140008944:	lea    rdx,[rip+0x6d7d]        # 0x14000f6c8
   14000894b:	mov    rcx,rbx
   14000894e:	mov    QWORD PTR [rip+0xcb73],rax        # 0x1400154c8
   140008955:	call   QWORD PTR [rip+0x583d]        # 0x14000e198
   14000895b:	mov    rcx,rax
   14000895e:	call   QWORD PTR [rip+0x5804]        # 0x14000e168
   140008964:	lea    rdx,[rip+0x6d75]        # 0x14000f6e0
   14000896b:	mov    rcx,rbx
   14000896e:	mov    QWORD PTR [rip+0xcb5b],rax        # 0x1400154d0
   140008975:	call   QWORD PTR [rip+0x581d]        # 0x14000e198
   14000897b:	mov    rcx,rax
   14000897e:	call   QWORD PTR [rip+0x57e4]        # 0x14000e168
   140008984:	mov    QWORD PTR [rip+0xcb55],rax        # 0x1400154e0
   14000898b:	test   rax,rax
   14000898e:	je     0x1400089b0
   140008990:	lea    rdx,[rip+0x6d69]        # 0x14000f700
   140008997:	mov    rcx,rbx
   14000899a:	call   QWORD PTR [rip+0x57f8]        # 0x14000e198
   1400089a0:	mov    rcx,rax
   1400089a3:	call   QWORD PTR [rip+0x57bf]        # 0x14000e168
   1400089a9:	mov    QWORD PTR [rip+0xcb28],rax        # 0x1400154d8
   1400089b0:	call   QWORD PTR [rip+0x58b2]        # 0x14000e268
   1400089b6:	test   eax,eax
   1400089b8:	je     0x1400089d7
   1400089ba:	test   r15,r15
   1400089bd:	je     0x1400089c8
   1400089bf:	mov    rcx,r15
   1400089c2:	call   QWORD PTR [rip+0x58f8]        # 0x14000e2c0
   1400089c8:	test   r14d,r14d
   1400089cb:	je     0x1400089f3
   1400089cd:	mov    eax,0x4
   1400089d2:	jmp    0x140008ac6
   1400089d7:	test   r14d,r14d
   1400089da:	je     0x1400089f3
   1400089dc:	mov    rcx,QWORD PTR [rip+0xcadd]        # 0x1400154c0
   1400089e3:	call   QWORD PTR [rip+0x56e7]        # 0x14000e0d0
   1400089e9:	mov    eax,0x3
   1400089ee:	jmp    0x140008ac6
   1400089f3:	mov    rcx,QWORD PTR [rip+0xcade]        # 0x1400154d8
   1400089fa:	cmp    rcx,rsi
   1400089fd:	je     0x140008a62
   1400089ff:	cmp    QWORD PTR [rip+0xcada],rsi        # 0x1400154e0
   140008a06:	je     0x140008a62
   140008a08:	call   QWORD PTR [rip+0x56c2]        # 0x14000e0d0
   140008a0e:	mov    rcx,QWORD PTR [rip+0xcacb]        # 0x1400154e0
   140008a15:	mov    rbx,rax
   140008a18:	call   QWORD PTR [rip+0x56b2]        # 0x14000e0d0
   140008a1e:	mov    r14,rax
   140008a21:	test   rbx,rbx
   140008a24:	je     0x140008a62
   140008a26:	test   rax,rax
   140008a29:	je     0x140008a62
   140008a2b:	call   rbx
   140008a2d:	test   rax,rax
   140008a30:	je     0x140008a5c
   140008a32:	lea    rcx,[rsp+0x30]
   140008a37:	mov    r9d,0xc
   140008a3d:	lea    r8,[rsp+0x38]
   140008a42:	mov    QWORD PTR [rsp+0x20],rcx
   140008a47:	lea    edx,[r9-0xb]
   140008a4b:	mov    rcx,rax
   140008a4e:	call   r14
   140008a51:	test   eax,eax
   140008a53:	je     0x140008a5c
   140008a55:	test   BYTE PTR [rsp+0x40],0x1
   140008a5a:	jne    0x140008a62
   140008a5c:	bts    ebp,0x15
   140008a60:	jmp    0x140008aa2
   140008a62:	mov    rcx,QWORD PTR [rip+0xca5f]        # 0x1400154c8
   140008a69:	cmp    rcx,rsi
   140008a6c:	je     0x140008aa2
   140008a6e:	call   QWORD PTR [rip+0x565c]        # 0x14000e0d0
   140008a74:	test   rax,rax
   140008a77:	je     0x140008aa2
   140008a79:	call   rax
   140008a7b:	mov    rdi,rax
   140008a7e:	test   rax,rax
   140008a81:	je     0x140008aa2
   140008a83:	mov    rcx,QWORD PTR [rip+0xca46]        # 0x1400154d0
   140008a8a:	cmp    rcx,rsi
   140008a8d:	je     0x140008aa2
   140008a8f:	call   QWORD PTR [rip+0x563b]        # 0x14000e0d0
   140008a95:	test   rax,rax
   140008a98:	je     0x140008aa2
   140008a9a:	mov    rcx,rdi
   140008a9d:	call   rax
   140008a9f:	mov    rdi,rax
   140008aa2:	mov    rcx,QWORD PTR [rip+0xca17]        # 0x1400154c0
   140008aa9:	call   QWORD PTR [rip+0x5621]        # 0x14000e0d0
   140008aaf:	test   rax,rax
   140008ab2:	je     0x140008ac4
   140008ab4:	mov    r9d,ebp
   140008ab7:	mov    r8,r12
   140008aba:	mov    rdx,r15
   140008abd:	mov    rcx,rdi
   140008ac0:	call   rax
   140008ac2:	jmp    0x140008ac6
   140008ac4:	xor    eax,eax
   140008ac6:	mov    rcx,QWORD PTR [rsp+0x48]
   140008acb:	xor    rcx,rsp
   140008ace:	call   0x140003950
   140008ad3:	add    rsp,0x50
   140008ad7:	pop    r15
   140008ad9:	pop    r14
   140008adb:	pop    r12
   140008add:	pop    rdi
   140008ade:	pop    rsi
   140008adf:	pop    rbp
   140008ae0:	pop    rbx
   140008ae1:	ret    
   140008ae2:	int3   
   140008ae3:	int3   
   140008ae4:	int3   
   140008ae5:	int3   
   140008ae6:	int3   
   140008ae7:	int3   
   140008ae8:	sub    rsp,0x28
   140008aec:	mov    r8,QWORD PTR [r9+0x38]
   140008af0:	mov    rcx,rdx
   140008af3:	mov    rdx,r9
   140008af6:	call   0x140008b0c
   140008afb:	mov    eax,0x1
   140008b00:	add    rsp,0x28
   140008b04:	ret    
   140008b05:	int3   
   140008b06:	int3   
   140008b07:	int3   
   140008b08:	int3   
   140008b09:	int3   
   140008b0a:	int3   
   140008b0b:	int3   
   140008b0c:	rex push rbx
   140008b0e:	sub    rsp,0x20
   140008b12:	mov    r11d,DWORD PTR [r8]
   140008b15:	mov    rbx,rdx
   140008b18:	mov    r9,rcx
   140008b1b:	and    r11d,0xfffffff8
   140008b1f:	test   BYTE PTR [r8],0x4
   140008b23:	mov    r10,rcx
   140008b26:	je     0x140008b3b
   140008b28:	mov    eax,DWORD PTR [r8+0x8]
   140008b2c:	movsxd r10,DWORD PTR [r8+0x4]
   140008b30:	neg    eax
   140008b32:	add    r10,rcx
   140008b35:	movsxd rcx,eax
   140008b38:	and    r10,rcx
   140008b3b:	movsxd rax,r11d
   140008b3e:	mov    rdx,QWORD PTR [rax+r10*1]
   140008b42:	mov    rax,QWORD PTR [rbx+0x10]
   140008b46:	mov    ecx,DWORD PTR [rax+0x8]
   140008b49:	add    rcx,QWORD PTR [rbx+0x8]
   140008b4d:	test   BYTE PTR [rcx+0x3],0xf
   140008b51:	je     0x140008b5f
   140008b53:	movzx  eax,BYTE PTR [rcx+0x3]
   140008b57:	and    eax,0xfffffff0
   140008b5a:	cdqe   
   140008b5c:	add    r9,rax
   140008b5f:	xor    r9,rdx
   140008b62:	mov    rcx,r9
   140008b65:	add    rsp,0x20
   140008b69:	pop    rbx
   140008b6a:	jmp    0x140003950
   140008b6f:	int3   
   140008b70:	int3   
   140008b71:	int3   
   140008b72:	int3   
   140008b73:	int3   
   140008b74:	int3   
   140008b75:	int3   
   140008b76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008b80:	sub    rsp,0x4d8
   140008b87:	xor    r8,r8
   140008b8a:	xor    r9,r9
   140008b8d:	mov    QWORD PTR [rsp+0x20],rsp
   140008b92:	mov    QWORD PTR [rsp+0x28],r8
   140008b97:	call   0x14000ca46
   140008b9c:	add    rsp,0x4d8
   140008ba3:	ret    
   140008ba4:	int3   
   140008ba5:	int3   
   140008ba6:	int3   
   140008ba7:	int3   
   140008ba8:	int3   
   140008ba9:	int3   
   140008baa:	nop    WORD PTR [rax+rax*1+0x0]
   140008bb0:	mov    QWORD PTR [rsp+0x8],rcx
   140008bb5:	mov    QWORD PTR [rsp+0x18],rdx
   140008bba:	mov    DWORD PTR [rsp+0x10],r8d
   140008bbf:	mov    r9,0x19930520
   140008bc6:	jmp    0x140008bd0
   140008bc8:	int3   
   140008bc9:	int3   
   140008bca:	int3   
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	xchg   ax,ax
   140008bd0:	ret    
   140008bd1:	int3   
   140008bd2:	int3   
   140008bd3:	int3   
   140008bd4:	int3   
   140008bd5:	int3   
   140008bd6:	int3   
   140008bd7:	nop    WORD PTR [rax+rax*1+0x0]
   140008be0:	ret    
   140008be1:	int3   
   140008be2:	int3   
   140008be3:	int3   
   140008be4:	int3   
   140008be5:	int3   
   140008be6:	int3   
   140008be7:	int3   
   140008be8:	mov    QWORD PTR [rsp+0x8],rbx
   140008bed:	push   rdi
   140008bee:	sub    rsp,0x20
   140008bf2:	mov    eax,DWORD PTR [rip+0xcae0]        # 0x1400156d8
   140008bf8:	xor    ebx,ebx
   140008bfa:	mov    edi,0x14
   140008bff:	test   eax,eax
   140008c01:	jne    0x140008c0a
   140008c03:	mov    eax,0x200
   140008c08:	jmp    0x140008c0f
   140008c0a:	cmp    eax,edi
   140008c0c:	cmovl  eax,edi
   140008c0f:	movsxd rcx,eax
   140008c12:	mov    edx,0x8
   140008c17:	mov    DWORD PTR [rip+0xcabb],eax        # 0x1400156d8
   140008c1d:	call   0x140006fd8
   140008c22:	mov    QWORD PTR [rip+0xcaa7],rax        # 0x1400156d0
   140008c29:	test   rax,rax
   140008c2c:	jne    0x140008c52
   140008c2e:	lea    edx,[rax+0x8]
   140008c31:	mov    rcx,rdi
   140008c34:	mov    DWORD PTR [rip+0xca9e],edi        # 0x1400156d8
   140008c3a:	call   0x140006fd8
   140008c3f:	mov    QWORD PTR [rip+0xca8a],rax        # 0x1400156d0
   140008c46:	test   rax,rax
   140008c49:	jne    0x140008c52
   140008c4b:	mov    eax,0x1a
   140008c50:	jmp    0x140008c75
   140008c52:	lea    rcx,[rip+0xb217]        # 0x140013e70
   140008c59:	mov    QWORD PTR [rbx+rax*1],rcx
   140008c5d:	add    rcx,0x30
   140008c61:	lea    rbx,[rbx+0x8]
   140008c65:	dec    rdi
   140008c68:	je     0x140008c73
   140008c6a:	mov    rax,QWORD PTR [rip+0xca5f]        # 0x1400156d0
   140008c71:	jmp    0x140008c59
   140008c73:	xor    eax,eax
   140008c75:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c7a:	add    rsp,0x20
   140008c7e:	pop    rdi
   140008c7f:	ret    
   140008c80:	int3   
   140008c81:	int3   
   140008c82:	int3   
   140008c83:	int3   
   140008c84:	int3   
   140008c85:	int3   
   140008c86:	int3   
   140008c87:	int3   
   140008c88:	sub    rsp,0x28
   140008c8c:	call   0x14000b244
   140008c91:	cmp    BYTE PTR [rip+0xb75c],0x0        # 0x1400143f4
   140008c98:	je     0x140008c9f
   140008c9a:	call   0x14000b340
   140008c9f:	mov    rcx,QWORD PTR [rip+0xca2a]        # 0x1400156d0
   140008ca6:	call   0x140003aa4
   140008cab:	and    QWORD PTR [rip+0xca1d],0x0        # 0x1400156d0
   140008cb3:	add    rsp,0x28
   140008cb7:	ret    
   140008cb8:	int3   
   140008cb9:	int3   
   140008cba:	int3   
   140008cbb:	int3   
   140008cbc:	int3   
   140008cbd:	int3   
   140008cbe:	int3   
   140008cbf:	int3   
   140008cc0:	rex push rbx
   140008cc2:	sub    rsp,0x20
   140008cc6:	mov    rbx,rcx
   140008cc9:	lea    rcx,[rip+0xb1a0]        # 0x140013e70
   140008cd0:	cmp    rbx,rcx
   140008cd3:	jb     0x140008d15
   140008cd5:	lea    rax,[rip+0xb524]        # 0x140014200
   140008cdc:	cmp    rbx,rax
   140008cdf:	ja     0x140008d15
   140008ce1:	mov    rdx,rbx
   140008ce4:	movabs rax,0x2aaaaaaaaaaaaaab
   140008cee:	sub    rdx,rcx
   140008cf1:	imul   rdx
   140008cf4:	sar    rdx,0x3
   140008cf8:	mov    rcx,rdx
   140008cfb:	shr    rcx,0x3f
   140008cff:	add    rcx,rdx
   140008d02:	add    ecx,0x10
   140008d05:	call   0x140007280
   140008d0a:	bts    DWORD PTR [rbx+0x18],0xf
   140008d0f:	add    rsp,0x20
   140008d13:	pop    rbx
   140008d14:	ret    
   140008d15:	lea    rcx,[rbx+0x30]
   140008d19:	add    rsp,0x20
   140008d1d:	pop    rbx
   140008d1e:	rex.W jmp QWORD PTR [rip+0x5563]        # 0x14000e288
   140008d25:	int3   
   140008d26:	int3   
   140008d27:	int3   
   140008d28:	int3   
   140008d29:	int3   
   140008d2a:	int3   
   140008d2b:	int3   
   140008d2c:	rex push rbx
   140008d2e:	sub    rsp,0x20
   140008d32:	mov    rbx,rdx
   140008d35:	cmp    ecx,0x14
   140008d38:	jge    0x140008d4d
   140008d3a:	add    ecx,0x10
   140008d3d:	call   0x140007280
   140008d42:	bts    DWORD PTR [rbx+0x18],0xf
   140008d47:	add    rsp,0x20
   140008d4b:	pop    rbx
   140008d4c:	ret    
   140008d4d:	lea    rcx,[rdx+0x30]
   140008d51:	add    rsp,0x20
   140008d55:	pop    rbx
   140008d56:	rex.W jmp QWORD PTR [rip+0x552b]        # 0x14000e288
   140008d5d:	int3   
   140008d5e:	int3   
   140008d5f:	int3   
   140008d60:	int3   
   140008d61:	int3   
   140008d62:	int3   
   140008d63:	int3   
   140008d64:	lea    rdx,[rip+0xb105]        # 0x140013e70
   140008d6b:	cmp    rcx,rdx
   140008d6e:	jb     0x140008da7
   140008d70:	lea    rax,[rip+0xb489]        # 0x140014200
   140008d77:	cmp    rcx,rax
   140008d7a:	ja     0x140008da7
   140008d7c:	btr    DWORD PTR [rcx+0x18],0xf
   140008d81:	sub    rcx,rdx
   140008d84:	movabs rax,0x2aaaaaaaaaaaaaab
   140008d8e:	imul   rcx
   140008d91:	sar    rdx,0x3
   140008d95:	mov    rcx,rdx
   140008d98:	shr    rcx,0x3f
   140008d9c:	add    rcx,rdx
   140008d9f:	add    ecx,0x10
   140008da2:	jmp    0x140007488
   140008da7:	add    rcx,0x30
   140008dab:	rex.W jmp QWORD PTR [rip+0x54de]        # 0x14000e290
   140008db2:	int3   
   140008db3:	int3   
   140008db4:	int3   
   140008db5:	int3   
   140008db6:	int3   
   140008db7:	int3   
   140008db8:	cmp    ecx,0x14
   140008dbb:	jge    0x140008dca
   140008dbd:	btr    DWORD PTR [rdx+0x18],0xf
   140008dc2:	add    ecx,0x10
   140008dc5:	jmp    0x140007488
   140008dca:	lea    rcx,[rdx+0x30]
   140008dce:	rex.W jmp QWORD PTR [rip+0x54bb]        # 0x14000e290
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	int3   
   140008dd9:	int3   
   140008dda:	int3   
   140008ddb:	int3   
   140008ddc:	and    DWORD PTR [rip+0xc8e5],0x0        # 0x1400156c8
   140008de3:	ret    
   140008de4:	int3   
   140008de5:	int3   
   140008de6:	int3   
   140008de7:	int3   
   140008de8:	int3   
   140008de9:	int3   
   140008dea:	int3   
   140008deb:	int3   
   140008dec:	test   rcx,rcx
   140008def:	je     0x140008e59
   140008df1:	mov    BYTE PTR [rsp+0x10],dl
   140008df5:	sub    rsp,0x28
   140008df9:	cmp    DWORD PTR [rcx],0xe06d7363
   140008dff:	jne    0x140008e55
   140008e01:	cmp    DWORD PTR [rcx+0x18],0x4
   140008e05:	jne    0x140008e55
   140008e07:	mov    eax,DWORD PTR [rcx+0x20]
   140008e0a:	sub    eax,0x19930520
   140008e0f:	cmp    eax,0x2
   140008e12:	ja     0x140008e55
   140008e14:	mov    rax,QWORD PTR [rcx+0x30]
   140008e18:	test   rax,rax
   140008e1b:	je     0x140008e55
   140008e1d:	movsxd rdx,DWORD PTR [rax+0x4]
   140008e21:	test   edx,edx
   140008e23:	je     0x140008e3e
   140008e25:	mov    rax,rdx
   140008e28:	mov    rdx,QWORD PTR [rcx+0x38]
   140008e2c:	add    rdx,rax
   140008e2f:	mov    rcx,QWORD PTR [rcx+0x28]
   140008e33:	call   rdx
   140008e35:	nop
   140008e36:	jmp    0x140008e55
   140008e38:	call   0x140007234
   140008e3d:	nop
   140008e3e:	test   BYTE PTR [rax],0x10
   140008e41:	je     0x140008e55
   140008e43:	mov    rax,QWORD PTR [rcx+0x28]
   140008e47:	mov    rcx,QWORD PTR [rax]
   140008e4a:	test   rcx,rcx
   140008e4d:	je     0x140008e55
   140008e4f:	mov    rax,QWORD PTR [rcx]
   140008e52:	call   QWORD PTR [rax+0x10]
   140008e55:	add    rsp,0x28
   140008e59:	ret    
   140008e5a:	int3   
   140008e5b:	int3   
   140008e5c:	int3   
   140008e5d:	int3   
   140008e5e:	int3   
   140008e5f:	int3   
   140008e60:	rex push rbx
   140008e62:	sub    rsp,0x20
   140008e66:	mov    rbx,rcx
   140008e69:	call   0x140006d34
   140008e6e:	lea    rax,[rip+0x68b3]        # 0x14000f728
   140008e75:	mov    QWORD PTR [rbx],rax
   140008e78:	mov    rax,rbx
   140008e7b:	add    rsp,0x20
   140008e7f:	pop    rbx
   140008e80:	ret    
   140008e81:	int3   
   140008e82:	int3   
   140008e83:	int3   
   140008e84:	int3   
   140008e85:	int3   
   140008e86:	int3   
   140008e87:	int3   
   140008e88:	lea    rax,[rip+0x6899]        # 0x14000f728
   140008e8f:	mov    QWORD PTR [rcx],rax
   140008e92:	jmp    0x140006d64
   140008e97:	int3   
   140008e98:	int3   
   140008e99:	int3   
   140008e9a:	int3   
   140008e9b:	int3   
   140008e9c:	int3   
   140008e9d:	int3   
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ea5:	push   rdi
   140008ea6:	sub    rsp,0x20
   140008eaa:	lea    rax,[rip+0x6877]        # 0x14000f728
   140008eb1:	mov    ebx,edx
   140008eb3:	mov    rdi,rcx
   140008eb6:	mov    QWORD PTR [rcx],rax
   140008eb9:	call   0x140006d64
   140008ebe:	test   bl,0x1
   140008ec1:	je     0x140008ecb
   140008ec3:	mov    rcx,rdi
   140008ec6:	call   0x140003930
   140008ecb:	mov    rax,rdi
   140008ece:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ed3:	add    rsp,0x20
   140008ed7:	pop    rdi
   140008ed8:	ret    
   140008ed9:	int3   
   140008eda:	int3   
   140008edb:	int3   
   140008edc:	int3   
   140008edd:	int3   
   140008ede:	int3   
   140008edf:	int3   
   140008ee0:	mov    rax,rsp
   140008ee3:	mov    QWORD PTR [rax+0x8],rbx
   140008ee7:	mov    QWORD PTR [rax+0x18],rbp
   140008eeb:	push   rsi
   140008eec:	push   rdi
   140008eed:	push   r12
   140008eef:	push   r14
   140008ef1:	push   r15
   140008ef3:	sub    rsp,0x50
   140008ef7:	mov    r15,QWORD PTR [rsp+0xa0]
   140008eff:	mov    rbp,r9
   140008f02:	mov    r14,rdx
   140008f05:	mov    r12,r8
   140008f08:	mov    rbx,rcx
   140008f0b:	lea    r9,[rax+0x10]
   140008f0f:	mov    r8,r15
   140008f12:	mov    rdx,rbp
   140008f15:	mov    rcx,r14
   140008f18:	call   0x140005b04
   140008f1d:	mov    r9,QWORD PTR [rsp+0xb0]
   140008f25:	mov    rsi,QWORD PTR [rsp+0xa8]
   140008f2d:	mov    rdi,rax
   140008f30:	test   r9,r9
   140008f33:	je     0x140008f43
   140008f35:	mov    r8,rsi
   140008f38:	mov    rdx,rax
   140008f3b:	mov    rcx,rbx
   140008f3e:	call   0x1400097dc
   140008f43:	call   0x140005f54
   140008f48:	movsxd rcx,DWORD PTR [rsi+0xc]
   140008f4c:	mov    r9,rdi
   140008f4f:	add    rax,rcx
   140008f52:	mov    cl,BYTE PTR [rsp+0xd8]
   140008f59:	mov    r8,r12
   140008f5c:	mov    BYTE PTR [rsp+0x40],cl
   140008f60:	mov    rcx,QWORD PTR [rsp+0xb8]
   140008f68:	mov    QWORD PTR [rsp+0x38],rbp
   140008f6d:	mov    edx,DWORD PTR [rcx]
   140008f6f:	mov    QWORD PTR [rsp+0x30],r15
   140008f74:	mov    rcx,r14
   140008f77:	mov    DWORD PTR [rsp+0x28],edx
   140008f7b:	mov    rdx,rbx
   140008f7e:	mov    QWORD PTR [rsp+0x20],rax
   140008f83:	call   0x14000600c
   140008f88:	lea    r11,[rsp+0x50]
   140008f8d:	mov    rbx,QWORD PTR [r11+0x30]
   140008f91:	mov    rbp,QWORD PTR [r11+0x40]
   140008f95:	mov    rsp,r11
   140008f98:	pop    r15
   140008f9a:	pop    r14
   140008f9c:	pop    r12
   140008f9e:	pop    rdi
   140008f9f:	pop    rsi
   140008fa0:	ret    
   140008fa1:	int3   
   140008fa2:	int3   
   140008fa3:	int3   
   140008fa4:	int3   
   140008fa5:	int3   
   140008fa6:	int3   
   140008fa7:	int3   
   140008fa8:	mov    QWORD PTR [rsp+0x10],rbx
   140008fad:	mov    QWORD PTR [rsp+0x18],r8
   140008fb2:	push   rbp
   140008fb3:	push   rsi
   140008fb4:	push   rdi
   140008fb5:	push   r12
   140008fb7:	push   r13
   140008fb9:	push   r14
   140008fbb:	push   r15
   140008fbd:	lea    rbp,[rsp-0x7]
   140008fc2:	sub    rsp,0xb0
   140008fc9:	mov    rbx,QWORD PTR [rbp+0x67]
   140008fcd:	mov    r13,rdx
   140008fd0:	mov    rdi,rcx
   140008fd3:	xor    r12d,r12d
   140008fd6:	mov    rdx,r9
   140008fd9:	mov    rcx,rbx
   140008fdc:	mov    r15,r9
   140008fdf:	mov    r14,r8
   140008fe2:	mov    BYTE PTR [rbp+0x47],r12b
   140008fe6:	mov    BYTE PTR [rbp-0x49],r12b
   140008fea:	call   0x14000a2a4
   140008fef:	lea    r9,[rbp-0x21]
   140008ff3:	mov    r8,rbx
   140008ff6:	mov    rdx,r15
   140008ff9:	mov    rcx,r13
   140008ffc:	mov    esi,eax
   140008ffe:	call   0x140005b04
   140009003:	mov    r8,rbx
   140009006:	mov    rdx,r15
   140009009:	mov    rcx,r13
   14000900c:	call   0x14000a21c
   140009011:	mov    r8,rbx
   140009014:	mov    rdx,r15
   140009017:	cmp    esi,eax
   140009019:	jle    0x14000903a
   14000901b:	lea    rcx,[rbp-0x21]
   14000901f:	mov    r9d,esi
   140009022:	call   0x14000a24c
   140009027:	mov    r9d,esi
   14000902a:	mov    r8,rbx
   14000902d:	mov    rdx,r15
   140009030:	mov    rcx,r13
   140009033:	call   0x14000a260
   140009038:	jmp    0x140009044
   14000903a:	mov    rcx,r13
   14000903d:	call   0x14000a21c
   140009042:	mov    esi,eax
   140009044:	cmp    esi,0xffffffff
   140009047:	jl     0x14000904e
   140009049:	cmp    esi,DWORD PTR [rbx+0x4]
   14000904c:	jl     0x140009053
   14000904e:	call   0x14000720c
   140009053:	cmp    DWORD PTR [rdi],0xe06d7363
   140009059:	jne    0x1400093da
   14000905f:	cmp    DWORD PTR [rdi+0x18],0x4
   140009063:	jne    0x1400091a0
   140009069:	mov    eax,DWORD PTR [rdi+0x20]
   14000906c:	sub    eax,0x19930520
   140009071:	cmp    eax,0x2
   140009074:	ja     0x1400091a0
   14000907a:	cmp    QWORD PTR [rdi+0x30],r12
   14000907e:	jne    0x1400091a0
   140009084:	call   0x140004258
   140009089:	cmp    QWORD PTR [rax+0xf0],r12
   140009090:	je     0x1400093bf
   140009096:	call   0x140004258
   14000909b:	mov    rdi,QWORD PTR [rax+0xf0]
   1400090a2:	call   0x140004258
   1400090a7:	mov    rcx,QWORD PTR [rdi+0x38]
   1400090ab:	mov    r14,QWORD PTR [rax+0xf8]
   1400090b2:	mov    BYTE PTR [rbp+0x47],0x1
   1400090b6:	mov    QWORD PTR [rbp+0x57],r14
   1400090ba:	call   0x140005fe8
   1400090bf:	mov    edx,0x1
   1400090c4:	mov    rcx,rdi
   1400090c7:	call   0x14000b3f0
   1400090cc:	test   eax,eax
   1400090ce:	jne    0x1400090d5
   1400090d0:	call   0x14000720c
   1400090d5:	cmp    DWORD PTR [rdi],0xe06d7363
   1400090db:	jne    0x1400090fb
   1400090dd:	cmp    DWORD PTR [rdi+0x18],0x4
   1400090e1:	jne    0x1400090fb
   1400090e3:	mov    eax,DWORD PTR [rdi+0x20]
   1400090e6:	sub    eax,0x19930520
   1400090eb:	cmp    eax,0x2
   1400090ee:	ja     0x1400090fb
   1400090f0:	cmp    QWORD PTR [rdi+0x30],r12
   1400090f4:	jne    0x1400090fb
   1400090f6:	call   0x14000720c
   1400090fb:	call   0x140004258
   140009100:	cmp    QWORD PTR [rax+0x108],r12
   140009107:	je     0x1400091a0
   14000910d:	call   0x140004258
   140009112:	mov    r14,QWORD PTR [rax+0x108]
   140009119:	call   0x140004258
   14000911e:	mov    rdx,r14
   140009121:	mov    rcx,rdi
   140009124:	mov    QWORD PTR [rax+0x108],r12
   14000912b:	call   0x1400096d0
   140009130:	test   al,al
   140009132:	jne    0x14000919c
   140009134:	mov    r15d,r12d
   140009137:	cmp    DWORD PTR [r14],r12d
   14000913a:	jle    0x140009412
   140009140:	mov    rsi,r12
   140009143:	call   0x140005f54
   140009148:	movsxd rcx,DWORD PTR [r14+0x4]
   14000914c:	add    rax,rsi
   14000914f:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   140009154:	je     0x140009171
   140009156:	call   0x140005f54
   14000915b:	movsxd rcx,DWORD PTR [r14+0x4]
   14000915f:	add    rax,rsi
   140009162:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140009167:	call   0x140005f54
   14000916c:	add    rax,rbx
   14000916f:	jmp    0x140009174
   140009171:	mov    rax,r12
   140009174:	lea    rdx,[rip+0xb0b5]        # 0x140014230
   14000917b:	mov    rcx,rax
   14000917e:	call   0x140003ae8
   140009183:	test   al,al
   140009185:	jne    0x140009418
   14000918b:	inc    r15d
   14000918e:	add    rsi,0x14
   140009192:	cmp    r15d,DWORD PTR [r14]
   140009195:	jl     0x140009143
   140009197:	jmp    0x140009412
   14000919c:	mov    r14,QWORD PTR [rbp+0x57]
   1400091a0:	cmp    DWORD PTR [rdi],0xe06d7363
   1400091a6:	jne    0x1400093da
   1400091ac:	cmp    DWORD PTR [rdi+0x18],0x4
   1400091b0:	jne    0x1400093da
   1400091b6:	mov    eax,DWORD PTR [rdi+0x20]
   1400091b9:	sub    eax,0x19930520
   1400091be:	cmp    eax,0x2
   1400091c1:	ja     0x1400093da
   1400091c7:	cmp    DWORD PTR [rbx+0xc],r12d
   1400091cb:	jbe    0x14000931f
   1400091d1:	mov    r8d,DWORD PTR [rbp+0x77]
   1400091d5:	lea    rax,[rbp-0x41]
   1400091d9:	mov    QWORD PTR [rsp+0x30],r15
   1400091de:	mov    QWORD PTR [rsp+0x28],rax
   1400091e3:	lea    rax,[rbp-0x45]
   1400091e7:	mov    r9d,esi
   1400091ea:	mov    rdx,rbx
   1400091ed:	mov    rcx,r13
   1400091f0:	mov    QWORD PTR [rsp+0x20],rax
   1400091f5:	call   0x140005bd4
   1400091fa:	mov    ecx,DWORD PTR [rbp-0x45]
   1400091fd:	mov    edx,DWORD PTR [rbp-0x41]
   140009200:	cmp    ecx,edx
   140009202:	jae    0x14000931f
   140009208:	lea    r14,[rax+0x10]
   14000920c:	cmp    DWORD PTR [r14-0x10],esi
   140009210:	jg     0x140009301
   140009216:	cmp    esi,DWORD PTR [r14-0xc]
   14000921a:	jg     0x140009301
   140009220:	call   0x140005f54
   140009225:	movsxd r12,DWORD PTR [r14]
   140009228:	add    r12,rax
   14000922b:	mov    eax,DWORD PTR [r14-0x4]
   14000922f:	mov    DWORD PTR [rbp-0x3d],eax
   140009232:	test   eax,eax
   140009234:	jle    0x1400092fb
   14000923a:	call   0x140005f70
   14000923f:	mov    rcx,QWORD PTR [rdi+0x30]
   140009243:	movsxd rdx,DWORD PTR [rcx+0xc]
   140009247:	add    rax,0x4
   14000924b:	add    rax,rdx
   14000924e:	mov    QWORD PTR [rbp-0x31],rax
   140009252:	call   0x140005f70
   140009257:	mov    rcx,QWORD PTR [rdi+0x30]
   14000925b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000925f:	mov    ecx,DWORD PTR [rax+rdx*1]
   140009262:	mov    DWORD PTR [rbp-0x39],ecx
   140009265:	test   ecx,ecx
   140009267:	jle    0x1400092a0
   140009269:	call   0x140005f70
   14000926e:	mov    rcx,QWORD PTR [rbp-0x31]
   140009272:	mov    r8,QWORD PTR [rdi+0x30]
   140009276:	movsxd rcx,DWORD PTR [rcx]
   140009279:	add    rax,rcx
   14000927c:	mov    rcx,r12
   14000927f:	mov    rdx,rax
   140009282:	mov    QWORD PTR [rbp-0x29],rax
   140009286:	call   0x14000a0c8
   14000928b:	test   eax,eax
   14000928d:	jne    0x1400092ab
   14000928f:	mov    eax,DWORD PTR [rbp-0x39]
   140009292:	add    QWORD PTR [rbp-0x31],0x4
   140009297:	dec    eax
   140009299:	mov    DWORD PTR [rbp-0x39],eax
   14000929c:	test   eax,eax
   14000929e:	jg     0x140009269
   1400092a0:	mov    eax,DWORD PTR [rbp-0x3d]
   1400092a3:	dec    eax
   1400092a5:	add    r12,0x14
   1400092a9:	jmp    0x14000922f
   1400092ab:	mov    al,BYTE PTR [rbp+0x6f]
   1400092ae:	mov    r8,QWORD PTR [rbp+0x57]
   1400092b2:	mov    r9,r15
   1400092b5:	mov    BYTE PTR [rsp+0x58],al
   1400092b9:	mov    al,BYTE PTR [rbp+0x47]
   1400092bc:	mov    rdx,r13
   1400092bf:	mov    BYTE PTR [rsp+0x50],al
   1400092c3:	mov    rax,QWORD PTR [rbp+0x7f]
   1400092c7:	mov    rcx,rdi
   1400092ca:	mov    QWORD PTR [rsp+0x48],rax
   1400092cf:	mov    eax,DWORD PTR [rbp+0x77]
   1400092d2:	mov    BYTE PTR [rbp-0x49],0x1
   1400092d6:	mov    DWORD PTR [rsp+0x40],eax
   1400092da:	lea    rax,[r14-0x10]
   1400092de:	mov    QWORD PTR [rsp+0x38],rax
   1400092e3:	mov    rax,QWORD PTR [rbp-0x29]
   1400092e7:	mov    QWORD PTR [rsp+0x30],rax
   1400092ec:	mov    QWORD PTR [rsp+0x28],r12
   1400092f1:	mov    QWORD PTR [rsp+0x20],rbx
   1400092f6:	call   0x140008ee0
   1400092fb:	mov    edx,DWORD PTR [rbp-0x41]
   1400092fe:	mov    ecx,DWORD PTR [rbp-0x45]
   140009301:	inc    ecx
   140009303:	add    r14,0x14
   140009307:	mov    DWORD PTR [rbp-0x45],ecx
   14000930a:	cmp    ecx,edx
   14000930c:	jb     0x14000920c
   140009312:	xor    r12d,r12d
   140009315:	cmp    BYTE PTR [rbp-0x49],r12b
   140009319:	jne    0x1400093ac
   14000931f:	mov    eax,DWORD PTR [rbx]
   140009321:	and    eax,0x1fffffff
   140009326:	cmp    eax,0x19930521
   14000932b:	jb     0x1400093ac
   14000932d:	mov    esi,DWORD PTR [rbx+0x20]
   140009330:	test   esi,esi
   140009332:	je     0x140009341
   140009334:	movsxd rsi,esi
   140009337:	call   0x140005f54
   14000933c:	add    rax,rsi
   14000933f:	jmp    0x140009344
   140009341:	mov    rax,r12
   140009344:	test   rax,rax
   140009347:	je     0x1400093ac
   140009349:	test   esi,esi
   14000934b:	je     0x14000935e
   14000934d:	call   0x140005f54
   140009352:	mov    rdx,rax
   140009355:	movsxd rax,DWORD PTR [rbx+0x20]
   140009359:	add    rdx,rax
   14000935c:	jmp    0x140009361
   14000935e:	mov    rdx,r12
   140009361:	mov    rcx,rdi
   140009364:	call   0x1400096d0
   140009369:	test   al,al
   14000936b:	jne    0x1400093ac
   14000936d:	lea    r9,[rbp+0x47]
   140009371:	mov    r8,rbx
   140009374:	mov    rdx,r15
   140009377:	mov    rcx,r13
   14000937a:	call   0x140005b04
   14000937f:	mov    cl,BYTE PTR [rbp+0x6f]
   140009382:	mov    r8,QWORD PTR [rbp+0x57]
   140009386:	mov    BYTE PTR [rsp+0x40],cl
   14000938a:	mov    QWORD PTR [rsp+0x38],r15
   14000938f:	mov    QWORD PTR [rsp+0x30],rbx
   140009394:	or     DWORD PTR [rsp+0x28],0xffffffff
   140009399:	mov    r9,rax
   14000939c:	mov    rdx,rdi
   14000939f:	mov    rcx,r13
   1400093a2:	mov    QWORD PTR [rsp+0x20],r12
   1400093a7:	call   0x14000600c
   1400093ac:	call   0x140004258
   1400093b1:	cmp    QWORD PTR [rax+0x108],r12
   1400093b8:	je     0x1400093bf
   1400093ba:	call   0x14000720c
   1400093bf:	mov    rbx,QWORD PTR [rsp+0xf8]
   1400093c7:	add    rsp,0xb0
   1400093ce:	pop    r15
   1400093d0:	pop    r14
   1400093d2:	pop    r13
   1400093d4:	pop    r12
   1400093d6:	pop    rdi
   1400093d7:	pop    rsi
   1400093d8:	pop    rbp
   1400093d9:	ret    
   1400093da:	cmp    DWORD PTR [rbx+0xc],r12d
   1400093de:	jbe    0x1400093ac
   1400093e0:	cmp    BYTE PTR [rbp+0x6f],r12b
   1400093e4:	jne    0x140009456
   1400093e6:	mov    rax,QWORD PTR [rbp+0x7f]
   1400093ea:	mov    r9,r15
   1400093ed:	mov    r8,r14
   1400093f0:	mov    QWORD PTR [rsp+0x38],rax
   1400093f5:	mov    eax,DWORD PTR [rbp+0x77]
   1400093f8:	mov    rdx,r13
   1400093fb:	mov    DWORD PTR [rsp+0x30],eax
   1400093ff:	mov    rcx,rdi
   140009402:	mov    DWORD PTR [rsp+0x28],esi
   140009406:	mov    QWORD PTR [rsp+0x20],rbx
   14000940b:	call   0x140009464
   140009410:	jmp    0x1400093ac
   140009412:	call   0x140007234
   140009417:	int3   
   140009418:	mov    dl,0x1
   14000941a:	mov    rcx,rdi
   14000941d:	call   0x140008dec
   140009422:	lea    rax,[rip+0x630f]        # 0x14000f738
   140009429:	lea    rdx,[rbp+0x47]
   14000942d:	lea    rcx,[rbp-0x19]
   140009431:	mov    QWORD PTR [rbp+0x47],rax
   140009435:	call   0x140006ce0
   14000943a:	lea    rax,[rip+0x62e7]        # 0x14000f728
   140009441:	lea    rdx,[rip+0x8b18]        # 0x140011f60
   140009448:	lea    rcx,[rbp-0x19]
   14000944c:	mov    QWORD PTR [rbp-0x19],rax
   140009450:	call   0x140006eb0
   140009455:	int3   
   140009456:	call   0x140007234
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	int3   
   140009461:	int3   
   140009462:	int3   
   140009463:	int3   
   140009464:	mov    QWORD PTR [rsp+0x10],rbx
   140009469:	mov    QWORD PTR [rsp+0x18],r8
   14000946e:	push   rbp
   14000946f:	push   rsi
   140009470:	push   rdi
   140009471:	push   r12
   140009473:	push   r13
   140009475:	push   r14
   140009477:	push   r15
   140009479:	sub    rsp,0x70
   14000947d:	cmp    DWORD PTR [rcx],0x80000003
   140009483:	mov    r15,r9
   140009486:	mov    rdi,r8
   140009489:	mov    r12,rdx
   14000948c:	mov    rsi,rcx
   14000948f:	je     0x1400096b1
   140009495:	call   0x140004258
   14000949a:	mov    rbp,QWORD PTR [rsp+0xd0]
   1400094a2:	cmp    QWORD PTR [rax+0xe0],0x0
   1400094aa:	je     0x14000950d
   1400094ac:	xor    ecx,ecx
   1400094ae:	call   QWORD PTR [rip+0x4cb4]        # 0x14000e168
   1400094b4:	mov    rbx,rax
   1400094b7:	call   0x140004258
   1400094bc:	cmp    QWORD PTR [rax+0xe0],rbx
   1400094c3:	je     0x14000950d
   1400094c5:	cmp    DWORD PTR [rsi],0xe0434f4d
   1400094cb:	je     0x14000950d
   1400094cd:	cmp    DWORD PTR [rsi],0xe0434352
   1400094d3:	mov    ebx,DWORD PTR [rsp+0xe0]
   1400094da:	je     0x140009514
   1400094dc:	mov    rax,QWORD PTR [rsp+0xe8]
   1400094e4:	mov    r9,r15
   1400094e7:	mov    r8,rdi
   1400094ea:	mov    QWORD PTR [rsp+0x30],rax
   1400094ef:	mov    rdx,r12
   1400094f2:	mov    rcx,rsi
   1400094f5:	mov    DWORD PTR [rsp+0x28],ebx
   1400094f9:	mov    QWORD PTR [rsp+0x20],rbp
   1400094fe:	call   0x140005e4c
   140009503:	test   eax,eax
   140009505:	jne    0x1400096b1
   14000950b:	jmp    0x140009514
   14000950d:	mov    ebx,DWORD PTR [rsp+0xe0]
   140009514:	cmp    DWORD PTR [rbp+0xc],0x0
   140009518:	jne    0x14000951f
   14000951a:	call   0x14000720c
   14000951f:	mov    r14d,DWORD PTR [rsp+0xd8]
   140009527:	lea    rax,[rsp+0x60]
   14000952c:	mov    QWORD PTR [rsp+0x30],r15
   140009531:	mov    QWORD PTR [rsp+0x28],rax
   140009536:	lea    rax,[rsp+0xb0]
   14000953e:	mov    r8d,ebx
   140009541:	mov    r9d,r14d
   140009544:	mov    rdx,rbp
   140009547:	mov    rcx,r12
   14000954a:	mov    QWORD PTR [rsp+0x20],rax
   14000954f:	call   0x140005bd4
   140009554:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000955b:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000955f:	jae    0x1400096b1
   140009565:	lea    rdi,[rax+0xc]
   140009569:	lea    r13,[rdi-0xc]
   14000956d:	cmp    r14d,DWORD PTR [r13+0x0]
   140009571:	jl     0x14000969a
   140009577:	cmp    r14d,DWORD PTR [rdi-0x8]
   14000957b:	jg     0x14000969a
   140009581:	call   0x140005f54
   140009586:	movsxd rcx,DWORD PTR [rdi]
   140009589:	lea    rdx,[rcx+rcx*4]
   14000958d:	movsxd rcx,DWORD PTR [rdi+0x4]
   140009591:	lea    rdx,[rcx+rdx*4]
   140009595:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000959a:	je     0x1400095bf
   14000959c:	call   0x140005f54
   1400095a1:	movsxd rcx,DWORD PTR [rdi]
   1400095a4:	lea    rdx,[rcx+rcx*4]
   1400095a8:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400095ac:	lea    rdx,[rcx+rdx*4]
   1400095b0:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   1400095b5:	call   0x140005f54
   1400095ba:	add    rax,rbx
   1400095bd:	jmp    0x1400095c1
   1400095bf:	xor    eax,eax
   1400095c1:	test   rax,rax
   1400095c4:	je     0x140009610
   1400095c6:	call   0x140005f54
   1400095cb:	movsxd rcx,DWORD PTR [rdi]
   1400095ce:	lea    rdx,[rcx+rcx*4]
   1400095d2:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400095d6:	lea    rdx,[rcx+rdx*4]
   1400095da:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   1400095df:	je     0x140009604
   1400095e1:	call   0x140005f54
   1400095e6:	movsxd rcx,DWORD PTR [rdi]
   1400095e9:	lea    rdx,[rcx+rcx*4]
   1400095ed:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400095f1:	lea    rdx,[rcx+rdx*4]
   1400095f5:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   1400095fa:	call   0x140005f54
   1400095ff:	add    rax,rbx
   140009602:	jmp    0x140009606
   140009604:	xor    eax,eax
   140009606:	cmp    BYTE PTR [rax+0x10],0x0
   14000960a:	jne    0x140009693
   140009610:	call   0x140005f54
   140009615:	movsxd rcx,DWORD PTR [rdi]
   140009618:	lea    rdx,[rcx+rcx*4]
   14000961c:	movsxd rcx,DWORD PTR [rdi+0x4]
   140009620:	lea    rdx,[rcx+rdx*4]
   140009624:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   140009629:	jne    0x140009693
   14000962b:	call   0x140005f54
   140009630:	mov    ecx,DWORD PTR [rdi]
   140009632:	mov    r8,QWORD PTR [rsp+0xc0]
   14000963a:	mov    BYTE PTR [rsp+0x58],0x0
   14000963f:	mov    BYTE PTR [rsp+0x50],0x1
   140009644:	dec    ecx
   140009646:	movsxd rcx,ecx
   140009649:	mov    r9,r15
   14000964c:	lea    rdx,[rcx+rcx*4]
   140009650:	lea    rcx,[rax+rdx*4]
   140009654:	movsxd rax,DWORD PTR [rdi+0x4]
   140009658:	mov    rdx,r12
   14000965b:	add    rcx,rax
   14000965e:	mov    rax,QWORD PTR [rsp+0xe8]
   140009666:	mov    QWORD PTR [rsp+0x48],rax
   14000966b:	mov    eax,DWORD PTR [rsp+0xe0]
   140009672:	mov    DWORD PTR [rsp+0x40],eax
   140009676:	mov    QWORD PTR [rsp+0x38],r13
   14000967b:	and    QWORD PTR [rsp+0x30],0x0
   140009681:	mov    QWORD PTR [rsp+0x28],rcx
   140009686:	mov    rcx,rsi
   140009689:	mov    QWORD PTR [rsp+0x20],rbp
   14000968e:	call   0x140008ee0
   140009693:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000969a:	inc    ecx
   14000969c:	add    rdi,0x14
   1400096a0:	mov    DWORD PTR [rsp+0xb0],ecx
   1400096a7:	cmp    ecx,DWORD PTR [rsp+0x60]
   1400096ab:	jb     0x140009569
   1400096b1:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400096b9:	add    rsp,0x70
   1400096bd:	pop    r15
   1400096bf:	pop    r14
   1400096c1:	pop    r13
   1400096c3:	pop    r12
   1400096c5:	pop    rdi
   1400096c6:	pop    rsi
   1400096c7:	pop    rbp
   1400096c8:	ret    
   1400096c9:	int3   
   1400096ca:	int3   
   1400096cb:	int3   
   1400096cc:	int3   
   1400096cd:	int3   
   1400096ce:	int3   
   1400096cf:	int3   
   1400096d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400096d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400096da:	mov    QWORD PTR [rsp+0x18],rsi
   1400096df:	push   rdi
   1400096e0:	push   r12
   1400096e2:	push   r13
   1400096e4:	push   r14
   1400096e6:	push   r15
   1400096e8:	sub    rsp,0x20
   1400096ec:	mov    rsi,rdx
   1400096ef:	mov    r13,rcx
   1400096f2:	test   rdx,rdx
   1400096f5:	je     0x14000979c
   1400096fb:	xor    edi,edi
   1400096fd:	xor    r14b,r14b
   140009700:	cmp    DWORD PTR [rdx],edi
   140009702:	jle    0x14000977c
   140009704:	call   0x140005f70
   140009709:	mov    rdx,rax
   14000970c:	mov    rax,QWORD PTR [r13+0x30]
   140009710:	movsxd r15,DWORD PTR [rax+0xc]
   140009714:	add    r15,0x4
   140009718:	add    r15,rdx
   14000971b:	call   0x140005f70
   140009720:	mov    rdx,rax
   140009723:	mov    rax,QWORD PTR [r13+0x30]
   140009727:	movsxd rcx,DWORD PTR [rax+0xc]
   14000972b:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14000972e:	test   ebp,ebp
   140009730:	jle    0x140009776
   140009732:	movsxd rax,edi
   140009735:	lea    r12,[rax+rax*4]
   140009739:	call   0x140005f70
   14000973e:	mov    rbx,rax
   140009741:	movsxd rax,DWORD PTR [r15]
   140009744:	add    rbx,rax
   140009747:	call   0x140005f54
   14000974c:	movsxd rcx,DWORD PTR [rsi+0x4]
   140009750:	mov    r8,QWORD PTR [r13+0x30]
   140009754:	lea    rax,[rax+r12*4]
   140009758:	mov    rdx,rbx
   14000975b:	add    rcx,rax
   14000975e:	call   0x14000a0c8
   140009763:	test   eax,eax
   140009765:	jne    0x140009773
   140009767:	dec    ebp
   140009769:	add    r15,0x4
   14000976d:	test   ebp,ebp
   14000976f:	jg     0x140009739
   140009771:	jmp    0x140009776
   140009773:	mov    r14b,0x1
   140009776:	inc    edi
   140009778:	cmp    edi,DWORD PTR [rsi]
   14000977a:	jl     0x140009704
   14000977c:	mov    rbx,QWORD PTR [rsp+0x50]
   140009781:	mov    rbp,QWORD PTR [rsp+0x58]
   140009786:	mov    rsi,QWORD PTR [rsp+0x60]
   14000978b:	mov    al,r14b
   14000978e:	add    rsp,0x20
   140009792:	pop    r15
   140009794:	pop    r14
   140009796:	pop    r13
   140009798:	pop    r12
   14000979a:	pop    rdi
   14000979b:	ret    
   14000979c:	call   0x14000720c
   1400097a1:	call   0x140007234
   1400097a6:	int3   
   1400097a7:	int3   
   1400097a8:	int3   
   1400097a9:	int3   
   1400097aa:	int3   
   1400097ab:	int3   
   1400097ac:	int3   
   1400097ad:	int3   
   1400097ae:	int3   
   1400097af:	int3   
   1400097b0:	movsxd rax,DWORD PTR [rdx]
   1400097b3:	add    rax,rcx
   1400097b6:	cmp    DWORD PTR [rdx+0x4],0x0
   1400097ba:	jl     0x1400097d2
   1400097bc:	movsxd r9,DWORD PTR [rdx+0x4]
   1400097c0:	movsxd rdx,DWORD PTR [rdx+0x8]
   1400097c4:	mov    rcx,QWORD PTR [r9+rcx*1]
   1400097c8:	movsxd r8,DWORD PTR [rdx+rcx*1]
   1400097cc:	add    r8,r9
   1400097cf:	add    rax,r8
   1400097d2:	ret    
   1400097d3:	int3   
   1400097d4:	int3   
   1400097d5:	int3   
   1400097d6:	int3   
   1400097d7:	int3   
   1400097d8:	int3   
   1400097d9:	int3   
   1400097da:	int3   
   1400097db:	int3   
   1400097dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400097e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400097e6:	mov    QWORD PTR [rsp+0x18],rdi
   1400097eb:	push   r14
   1400097ed:	sub    rsp,0x20
   1400097f1:	mov    rdi,r9
   1400097f4:	mov    r14,rcx
   1400097f7:	test   DWORD PTR [r8],0x80000000
   1400097fe:	je     0x140009805
   140009800:	mov    rsi,rdx
   140009803:	jmp    0x14000980c
   140009805:	movsxd rsi,DWORD PTR [r8+0x8]
   140009809:	add    rsi,QWORD PTR [rdx]
   14000980c:	call   0x140009898
   140009811:	dec    eax
   140009813:	je     0x14000984c
   140009815:	dec    eax
   140009817:	jne    0x140009874
   140009819:	xor    ebx,ebx
   14000981b:	cmp    DWORD PTR [rdi+0x18],ebx
   14000981e:	je     0x14000982f
   140009820:	call   0x140005f70
   140009825:	mov    rbx,rax
   140009828:	movsxd rax,DWORD PTR [rdi+0x18]
   14000982c:	add    rbx,rax
   14000982f:	lea    rdx,[rdi+0x8]
   140009833:	mov    rcx,QWORD PTR [r14+0x28]
   140009837:	call   0x1400097b0
   14000983c:	mov    rdx,rax
   14000983f:	mov    r8d,0x1
   140009845:	mov    rcx,rsi
   140009848:	call   rbx
   14000984a:	jmp    0x140009874
   14000984c:	xor    ebx,ebx
   14000984e:	cmp    DWORD PTR [rdi+0x18],ebx
   140009851:	je     0x14000985f
   140009853:	call   0x140005f70
   140009858:	movsxd rbx,DWORD PTR [rdi+0x18]
   14000985c:	add    rbx,rax
   14000985f:	lea    rdx,[rdi+0x8]
   140009863:	mov    rcx,QWORD PTR [r14+0x28]
   140009867:	call   0x1400097b0
   14000986c:	mov    rdx,rax
   14000986f:	mov    rcx,rsi
   140009872:	call   rbx
   140009874:	jmp    0x14000987c
   140009876:	call   0x140007234
   14000987b:	nop
   14000987c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009881:	mov    rsi,QWORD PTR [rsp+0x38]
   140009886:	mov    rdi,QWORD PTR [rsp+0x40]
   14000988b:	add    rsp,0x20
   14000988f:	pop    r14
   140009891:	ret    
   140009892:	int3   
   140009893:	int3   
   140009894:	int3   
   140009895:	int3   
   140009896:	int3   
   140009897:	int3   
   140009898:	mov    QWORD PTR [rsp+0x8],rbx
   14000989d:	mov    QWORD PTR [rsp+0x10],rsi
   1400098a2:	mov    QWORD PTR [rsp+0x18],rdi
   1400098a7:	push   r13
   1400098a9:	push   r14
   1400098ab:	push   r15
   1400098ad:	sub    rsp,0x30
   1400098b1:	mov    rsi,r9
   1400098b4:	mov    rbx,r8
   1400098b7:	mov    r14,rdx
   1400098ba:	mov    r13,rcx
   1400098bd:	xor    edi,edi
   1400098bf:	mov    r15d,DWORD PTR [r8+0x4]
   1400098c3:	test   r15d,r15d
   1400098c6:	je     0x1400098d6
   1400098c8:	movsxd r15,r15d
   1400098cb:	call   0x140005f54
   1400098d0:	lea    rdx,[r15+rax*1]
   1400098d4:	jmp    0x1400098d9
   1400098d6:	mov    rdx,rdi
   1400098d9:	test   rdx,rdx
   1400098dc:	je     0x140009a79
   1400098e2:	test   r15d,r15d
   1400098e5:	je     0x1400098f8
   1400098e7:	call   0x140005f54
   1400098ec:	mov    rcx,rax
   1400098ef:	movsxd rax,DWORD PTR [rbx+0x4]
   1400098f3:	add    rcx,rax
   1400098f6:	jmp    0x1400098fb
   1400098f8:	mov    rcx,rdi
   1400098fb:	cmp    BYTE PTR [rcx+0x10],dil
   1400098ff:	je     0x140009a79
   140009905:	cmp    DWORD PTR [rbx+0x8],edi
   140009908:	jne    0x140009916
   14000990a:	test   DWORD PTR [rbx],0x80000000
   140009910:	je     0x140009a79
   140009916:	test   DWORD PTR [rbx],0x80000000
   14000991c:	jne    0x140009928
   14000991e:	movsxd rax,DWORD PTR [rbx+0x8]
   140009922:	add    rax,QWORD PTR [r14]
   140009925:	mov    r14,rax
   140009928:	test   BYTE PTR [rbx],0x8
   14000992b:	mov    ebx,0x1
   140009930:	je     0x14000996f
   140009932:	mov    edx,ebx
   140009934:	mov    rcx,QWORD PTR [r13+0x28]
   140009938:	call   0x14000b3f0
   14000993d:	test   eax,eax
   14000993f:	je     0x140009a69
   140009945:	mov    edx,ebx
   140009947:	mov    rcx,r14
   14000994a:	call   0x14000b3f0
   14000994f:	test   eax,eax
   140009951:	je     0x140009a69
   140009957:	mov    rcx,QWORD PTR [r13+0x28]
   14000995b:	mov    QWORD PTR [r14],rcx
   14000995e:	lea    rdx,[rsi+0x8]
   140009962:	call   0x1400097b0
   140009967:	mov    QWORD PTR [r14],rax
   14000996a:	jmp    0x140009a6f
   14000996f:	test   BYTE PTR [rsi],bl
   140009971:	je     0x1400099c0
   140009973:	mov    edx,ebx
   140009975:	mov    rcx,QWORD PTR [r13+0x28]
   140009979:	call   0x14000b3f0
   14000997e:	test   eax,eax
   140009980:	je     0x140009a69
   140009986:	mov    edx,ebx
   140009988:	mov    rcx,r14
   14000998b:	call   0x14000b3f0
   140009990:	test   eax,eax
   140009992:	je     0x140009a69
   140009998:	movsxd r8,DWORD PTR [rsi+0x14]
   14000999c:	mov    rdx,QWORD PTR [r13+0x28]
   1400099a0:	mov    rcx,r14
   1400099a3:	call   0x1400066d0
   1400099a8:	cmp    DWORD PTR [rsi+0x14],0x8
   1400099ac:	jne    0x140009a6f
   1400099b2:	cmp    QWORD PTR [r14],rdi
   1400099b5:	je     0x140009a6f
   1400099bb:	mov    rcx,QWORD PTR [r14]
   1400099be:	jmp    0x14000995e
   1400099c0:	cmp    DWORD PTR [rsi+0x18],edi
   1400099c3:	je     0x1400099d6
   1400099c5:	call   0x140005f70
   1400099ca:	mov    rcx,rax
   1400099cd:	movsxd rax,DWORD PTR [rsi+0x18]
   1400099d1:	add    rcx,rax
   1400099d4:	jmp    0x1400099d9
   1400099d6:	mov    rcx,rdi
   1400099d9:	mov    edx,ebx
   1400099db:	test   rcx,rcx
   1400099de:	mov    rcx,QWORD PTR [r13+0x28]
   1400099e2:	jne    0x140009a1c
   1400099e4:	call   0x14000b3f0
   1400099e9:	test   eax,eax
   1400099eb:	je     0x140009a69
   1400099ed:	mov    edx,ebx
   1400099ef:	mov    rcx,r14
   1400099f2:	call   0x14000b3f0
   1400099f7:	test   eax,eax
   1400099f9:	je     0x140009a69
   1400099fb:	movsxd rbx,DWORD PTR [rsi+0x14]
   1400099ff:	lea    rdx,[rsi+0x8]
   140009a03:	mov    rcx,QWORD PTR [r13+0x28]
   140009a07:	call   0x1400097b0
   140009a0c:	mov    rdx,rax
   140009a0f:	mov    r8,rbx
   140009a12:	mov    rcx,r14
   140009a15:	call   0x1400066d0
   140009a1a:	jmp    0x140009a6f
   140009a1c:	call   0x14000b3f0
   140009a21:	test   eax,eax
   140009a23:	je     0x140009a69
   140009a25:	mov    edx,ebx
   140009a27:	mov    rcx,r14
   140009a2a:	call   0x14000b3f0
   140009a2f:	test   eax,eax
   140009a31:	je     0x140009a69
   140009a33:	cmp    DWORD PTR [rsi+0x18],edi
   140009a36:	je     0x140009a49
   140009a38:	call   0x140005f70
   140009a3d:	mov    rcx,rax
   140009a40:	movsxd rax,DWORD PTR [rsi+0x18]
   140009a44:	add    rcx,rax
   140009a47:	jmp    0x140009a4c
   140009a49:	mov    rcx,rdi
   140009a4c:	call   0x14000b3f0
   140009a51:	test   eax,eax
   140009a53:	je     0x140009a69
   140009a55:	mov    al,BYTE PTR [rsi]
   140009a57:	and    al,0x4
   140009a59:	neg    al
   140009a5b:	sbb    ecx,ecx
   140009a5d:	neg    ecx
   140009a5f:	add    ecx,ebx
   140009a61:	mov    edi,ecx
   140009a63:	mov    DWORD PTR [rsp+0x20],ecx
   140009a67:	jmp    0x140009a6f
   140009a69:	call   0x14000720c
   140009a6e:	nop
   140009a6f:	mov    eax,edi
   140009a71:	jmp    0x140009a7b
   140009a73:	call   0x140007234
   140009a78:	nop
   140009a79:	xor    eax,eax
   140009a7b:	mov    rbx,QWORD PTR [rsp+0x50]
   140009a80:	mov    rsi,QWORD PTR [rsp+0x58]
   140009a85:	mov    rdi,QWORD PTR [rsp+0x60]
   140009a8a:	add    rsp,0x30
   140009a8e:	pop    r15
   140009a90:	pop    r14
   140009a92:	pop    r13
   140009a94:	ret    
   140009a95:	int3   
   140009a96:	int3   
   140009a97:	int3   
   140009a98:	int3   
   140009a99:	int3   
   140009a9a:	int3   
   140009a9b:	int3   
   140009a9c:	rex push rbx
   140009a9e:	push   rsi
   140009a9f:	push   rdi
   140009aa0:	push   r12
   140009aa2:	push   r13
   140009aa4:	push   r14
   140009aa6:	push   r15
   140009aa8:	sub    rsp,0x90
   140009aaf:	mov    rdi,rcx
   140009ab2:	xor    r15d,r15d
   140009ab5:	mov    DWORD PTR [rsp+0x20],r15d
   140009aba:	and    DWORD PTR [rsp+0xd0],r15d
   140009ac2:	and    QWORD PTR [rsp+0x40],r15
   140009ac7:	and    QWORD PTR [rsp+0xe8],r15
   140009acf:	call   0x140004258
   140009ad4:	mov    r13,QWORD PTR [rax+0xf8]
   140009adb:	mov    QWORD PTR [rsp+0x50],r13
   140009ae0:	call   0x140004258
   140009ae5:	mov    rax,QWORD PTR [rax+0xf0]
   140009aec:	mov    QWORD PTR [rsp+0xe0],rax
   140009af4:	mov    rsi,QWORD PTR [rdi+0x50]
   140009af8:	mov    QWORD PTR [rsp+0xd8],rsi
   140009b00:	mov    rax,QWORD PTR [rdi+0x48]
   140009b04:	mov    QWORD PTR [rsp+0x48],rax
   140009b09:	mov    rbx,QWORD PTR [rdi+0x40]
   140009b0d:	mov    rax,QWORD PTR [rdi+0x30]
   140009b11:	mov    QWORD PTR [rsp+0x58],rax
   140009b16:	mov    r14,QWORD PTR [rdi+0x28]
   140009b1a:	mov    QWORD PTR [rsp+0x60],r14
   140009b1f:	call   0x140004258
   140009b24:	mov    QWORD PTR [rax+0xf0],rsi
   140009b2b:	call   0x140004258
   140009b30:	mov    QWORD PTR [rax+0xf8],rbx
   140009b37:	call   0x140004258
   140009b3c:	mov    rdx,QWORD PTR [rax+0xf0]
   140009b43:	mov    rdx,QWORD PTR [rdx+0x28]
   140009b47:	lea    rcx,[rsp+0x78]
   140009b4c:	call   0x140005ea4
   140009b51:	mov    r12,rax
   140009b54:	mov    QWORD PTR [rsp+0x38],rax
   140009b59:	cmp    QWORD PTR [rdi+0x58],r15
   140009b5d:	je     0x140009b7e
   140009b5f:	mov    DWORD PTR [rsp+0xd0],0x1
   140009b6a:	call   0x140004258
   140009b6f:	mov    rcx,QWORD PTR [rax+0x138]
   140009b76:	mov    QWORD PTR [rsp+0xe8],rcx
   140009b7e:	mov    r8d,0x100
   140009b84:	mov    rdx,r14
   140009b87:	mov    rcx,QWORD PTR [rsp+0x58]
   140009b8c:	call   0x14000b410
   140009b91:	mov    rbx,rax
   140009b94:	mov    QWORD PTR [rsp+0x40],rax
   140009b99:	mov    rdi,QWORD PTR [rsp+0xe0]
   140009ba1:	jmp    0x140009c1e
   140009ba3:	mov    DWORD PTR [rsp+0x20],0x1
   140009bab:	call   0x140004258
   140009bb0:	and    DWORD PTR [rax+0x460],0x0
   140009bb7:	mov    rsi,QWORD PTR [rsp+0xd8]
   140009bbf:	cmp    DWORD PTR [rsp+0xd0],0x0
   140009bc7:	je     0x140009bea
   140009bc9:	mov    dl,0x1
   140009bcb:	mov    rcx,rsi
   140009bce:	call   0x140008dec
   140009bd3:	mov    rax,QWORD PTR [rsp+0xe8]
   140009bdb:	lea    r9,[rax+0x20]
   140009bdf:	mov    r8d,DWORD PTR [rax+0x18]
   140009be3:	mov    edx,DWORD PTR [rax+0x4]
   140009be6:	mov    ecx,DWORD PTR [rax]
   140009be8:	jmp    0x140009bf7
   140009bea:	lea    r9,[rsi+0x20]
   140009bee:	mov    r8d,DWORD PTR [rsi+0x18]
   140009bf2:	mov    edx,DWORD PTR [rsi+0x4]
   140009bf5:	mov    ecx,DWORD PTR [rsi]
   140009bf7:	call   QWORD PTR [rip+0x44cb]        # 0x14000e0c8
   140009bfd:	mov    r15d,DWORD PTR [rsp+0x20]
   140009c02:	mov    rbx,QWORD PTR [rsp+0x40]
   140009c07:	mov    r13,QWORD PTR [rsp+0x50]
   140009c0c:	mov    rdi,QWORD PTR [rsp+0xe0]
   140009c14:	mov    r14,QWORD PTR [rsp+0x60]
   140009c19:	mov    r12,QWORD PTR [rsp+0x38]
   140009c1e:	mov    rcx,r12
   140009c21:	call   0x140005ef0
   140009c26:	test   r15d,r15d
   140009c29:	jne    0x140009c5d
   140009c2b:	cmp    DWORD PTR [rsi],0xe06d7363
   140009c31:	jne    0x140009c5d
   140009c33:	cmp    DWORD PTR [rsi+0x18],0x4
   140009c37:	jne    0x140009c5d
   140009c39:	mov    eax,DWORD PTR [rsi+0x20]
   140009c3c:	sub    eax,0x19930520
   140009c41:	cmp    eax,0x2
   140009c44:	ja     0x140009c5d
   140009c46:	mov    rcx,QWORD PTR [rsi+0x28]
   140009c4a:	call   0x140005f8c
   140009c4f:	test   eax,eax
   140009c51:	je     0x140009c5d
   140009c53:	mov    dl,0x1
   140009c55:	mov    rcx,rsi
   140009c58:	call   0x140008dec
   140009c5d:	call   0x140004258
   140009c62:	mov    QWORD PTR [rax+0xf0],rdi
   140009c69:	call   0x140004258
   140009c6e:	mov    QWORD PTR [rax+0xf8],r13
   140009c75:	mov    rax,QWORD PTR [rsp+0x48]
   140009c7a:	movsxd rcx,DWORD PTR [rax+0x1c]
   140009c7e:	mov    rax,QWORD PTR [r14]
   140009c81:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140009c89:	mov    rax,rbx
   140009c8c:	add    rsp,0x90
   140009c93:	pop    r15
   140009c95:	pop    r14
   140009c97:	pop    r13
   140009c99:	pop    r12
   140009c9b:	pop    rdi
   140009c9c:	pop    rsi
   140009c9d:	pop    rbx
   140009c9e:	ret    
   140009c9f:	int3   
   140009ca0:	int3   
   140009ca1:	int3   
   140009ca2:	int3   
   140009ca3:	int3   
   140009ca4:	int3   
   140009ca5:	int3   
   140009ca6:	int3   
   140009ca7:	int3   
   140009ca8:	sub    rsp,0x28
   140009cac:	mov    rax,QWORD PTR [rcx]
   140009caf:	cmp    DWORD PTR [rax],0xe0434352
   140009cb5:	je     0x140009cc9
   140009cb7:	cmp    DWORD PTR [rax],0xe0434f4d
   140009cbd:	je     0x140009cc9
   140009cbf:	cmp    DWORD PTR [rax],0xe06d7363
   140009cc5:	jne    0x140009ce2
   140009cc7:	jmp    0x140009ce9
   140009cc9:	call   0x140004258
   140009cce:	cmp    DWORD PTR [rax+0x100],0x0
   140009cd5:	jle    0x140009ce2
   140009cd7:	call   0x140004258
   140009cdc:	dec    DWORD PTR [rax+0x100]
   140009ce2:	xor    eax,eax
   140009ce4:	add    rsp,0x28
   140009ce8:	ret    
   140009ce9:	call   0x140004258
   140009cee:	and    DWORD PTR [rax+0x100],0x0
   140009cf5:	call   0x140007234
   140009cfa:	int3   
   140009cfb:	int3   
   140009cfc:	int3   
   140009cfd:	int3   
   140009cfe:	int3   
   140009cff:	int3   
   140009d00:	int3   
   140009d01:	int3   
   140009d02:	int3   
   140009d03:	int3   
   140009d04:	mov    rax,rsp
   140009d07:	mov    DWORD PTR [rax+0x20],r9d
   140009d0b:	mov    QWORD PTR [rax+0x18],r8
   140009d0f:	mov    QWORD PTR [rax+0x10],rdx
   140009d13:	mov    QWORD PTR [rax+0x8],rcx
   140009d17:	push   rbx
   140009d18:	push   rsi
   140009d19:	push   rdi
   140009d1a:	push   r12
   140009d1c:	push   r13
   140009d1e:	push   r14
   140009d20:	push   r15
   140009d22:	sub    rsp,0x30
   140009d26:	mov    r12d,r9d
   140009d29:	mov    rsi,r8
   140009d2c:	mov    r13,rdx
   140009d2f:	mov    r15,rcx
   140009d32:	call   0x140005f54
   140009d37:	mov    QWORD PTR [rsp+0x28],rax
   140009d3c:	mov    r8,rsi
   140009d3f:	mov    rdx,r13
   140009d42:	mov    rcx,r15
   140009d45:	call   0x14000a1ec
   140009d4a:	mov    edi,eax
   140009d4c:	call   0x140004258
   140009d51:	inc    DWORD PTR [rax+0x100]
   140009d57:	cmp    edi,0xffffffff
   140009d5a:	je     0x140009e4d
   140009d60:	cmp    edi,r12d
   140009d63:	jle    0x140009e4d
   140009d69:	cmp    edi,0xffffffff
   140009d6c:	jle    0x140009d73
   140009d6e:	cmp    edi,DWORD PTR [rsi+0x4]
   140009d71:	jl     0x140009d78
   140009d73:	call   0x14000720c
   140009d78:	movsxd r14,edi
   140009d7b:	call   0x140005f54
   140009d80:	movsxd rcx,DWORD PTR [rsi+0x8]
   140009d84:	lea    rax,[rax+r14*8]
   140009d88:	mov    edi,DWORD PTR [rcx+rax*1]
   140009d8b:	mov    DWORD PTR [rsp+0x20],edi
   140009d8f:	call   0x140005f54
   140009d94:	movsxd rcx,DWORD PTR [rsi+0x8]
   140009d98:	lea    rax,[rax+r14*8]
   140009d9c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140009da1:	je     0x140009dbf
   140009da3:	call   0x140005f54
   140009da8:	movsxd rcx,DWORD PTR [rsi+0x8]
   140009dac:	lea    rax,[rax+r14*8]
   140009db0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140009db5:	call   0x140005f54
   140009dba:	add    rax,rbx
   140009dbd:	jmp    0x140009dc1
   140009dbf:	xor    eax,eax
   140009dc1:	test   rax,rax
   140009dc4:	je     0x140009e24
   140009dc6:	mov    r9d,edi
   140009dc9:	mov    r8,rsi
   140009dcc:	mov    rdx,r13
   140009dcf:	mov    rcx,r15
   140009dd2:	call   0x14000a24c
   140009dd7:	call   0x140005f54
   140009ddc:	movsxd rcx,DWORD PTR [rsi+0x8]
   140009de0:	lea    rax,[rax+r14*8]
   140009de4:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140009de9:	je     0x140009e07
   140009deb:	call   0x140005f54
   140009df0:	movsxd rcx,DWORD PTR [rsi+0x8]
   140009df4:	lea    rax,[rax+r14*8]
   140009df8:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140009dfd:	call   0x140005f54
   140009e02:	add    rax,rbx
   140009e05:	jmp    0x140009e09
   140009e07:	xor    eax,eax
   140009e09:	mov    r8d,0x103
   140009e0f:	mov    rdx,r15
   140009e12:	mov    rcx,rax
   140009e15:	call   0x14000b410
   140009e1a:	mov    rcx,QWORD PTR [rsp+0x28]
   140009e1f:	call   0x140005fc4
   140009e24:	jmp    0x140009e44
   140009e26:	mov    r12d,DWORD PTR [rsp+0x88]
   140009e2e:	mov    rsi,QWORD PTR [rsp+0x80]
   140009e36:	mov    r13,QWORD PTR [rsp+0x78]
   140009e3b:	mov    r15,QWORD PTR [rsp+0x70]
   140009e40:	mov    edi,DWORD PTR [rsp+0x20]
   140009e44:	mov    DWORD PTR [rsp+0x24],edi
   140009e48:	jmp    0x140009d57
   140009e4d:	call   0x140004258
   140009e52:	cmp    DWORD PTR [rax+0x100],0x0
   140009e59:	jle    0x140009e66
   140009e5b:	call   0x140004258
   140009e60:	dec    DWORD PTR [rax+0x100]
   140009e66:	cmp    edi,0xffffffff
   140009e69:	je     0x140009e75
   140009e6b:	cmp    edi,r12d
   140009e6e:	jle    0x140009e75
   140009e70:	call   0x14000720c
   140009e75:	mov    r9d,edi
   140009e78:	mov    r8,rsi
   140009e7b:	mov    rdx,r13
   140009e7e:	mov    rcx,r15
   140009e81:	call   0x14000a24c
   140009e86:	add    rsp,0x30
   140009e8a:	pop    r15
   140009e8c:	pop    r14
   140009e8e:	pop    r13
   140009e90:	pop    r12
   140009e92:	pop    rdi
   140009e93:	pop    rsi
   140009e94:	pop    rbx
   140009e95:	ret    
   140009e96:	int3   
   140009e97:	int3   
   140009e98:	int3   
   140009e99:	int3   
   140009e9a:	int3   
   140009e9b:	int3   
   140009e9c:	mov    QWORD PTR [rsp+0x8],rbx
   140009ea1:	mov    QWORD PTR [rsp+0x10],rbp
   140009ea6:	mov    QWORD PTR [rsp+0x18],rsi
   140009eab:	push   rdi
   140009eac:	push   r12
   140009eae:	push   r14
   140009eb0:	sub    rsp,0x40
   140009eb4:	mov    rbp,r9
   140009eb7:	mov    r14,r8
   140009eba:	mov    rsi,rdx
   140009ebd:	mov    rbx,rcx
   140009ec0:	call   0x140004258
   140009ec5:	mov    rdi,QWORD PTR [rsp+0x80]
   140009ecd:	cmp    DWORD PTR [rax+0x460],0x0
   140009ed4:	mov    edx,0x1fffffff
   140009ed9:	mov    r8d,0x80000029
   140009edf:	mov    r9d,0x80000026
   140009ee5:	mov    r12d,0x1
   140009eeb:	jne    0x140009f25
   140009eed:	cmp    DWORD PTR [rbx],0xe06d7363
   140009ef3:	je     0x140009f25
   140009ef5:	cmp    DWORD PTR [rbx],r8d
   140009ef8:	jne    0x140009f0a
   140009efa:	cmp    DWORD PTR [rbx+0x18],0xf
   140009efe:	jne    0x140009f0a
   140009f00:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140009f08:	je     0x140009f25
   140009f0a:	cmp    DWORD PTR [rbx],r9d
   140009f0d:	je     0x140009f25
   140009f0f:	mov    ecx,DWORD PTR [rdi]
   140009f11:	and    ecx,edx
   140009f13:	cmp    ecx,0x19930522
   140009f19:	jb     0x140009f25
   140009f1b:	test   BYTE PTR [rdi+0x24],r12b
   140009f1f:	jne    0x14000a0a4
   140009f25:	mov    eax,DWORD PTR [rbx+0x4]
   140009f28:	test   al,0x66
   140009f2a:	je     0x140009fc2
   140009f30:	cmp    DWORD PTR [rdi+0x4],0x0
   140009f34:	je     0x14000a0a4
   140009f3a:	cmp    DWORD PTR [rsp+0x88],0x0
   140009f42:	jne    0x14000a0a4
   140009f48:	and    eax,0x20
   140009f4b:	je     0x140009f8b
   140009f4d:	cmp    DWORD PTR [rbx],r9d
   140009f50:	jne    0x140009f8b
   140009f52:	mov    r8,QWORD PTR [r14+0xf8]
   140009f59:	mov    rdx,rbp
   140009f5c:	mov    rcx,rdi
   140009f5f:	call   0x14000a2b4
   140009f64:	mov    ebx,eax
   140009f66:	cmp    eax,0xffffffff
   140009f69:	jl     0x140009f70
   140009f6b:	cmp    eax,DWORD PTR [rdi+0x4]
   140009f6e:	jl     0x140009f75
   140009f70:	call   0x14000720c
   140009f75:	mov    r9d,ebx
   140009f78:	mov    rcx,rsi
   140009f7b:	mov    rdx,rbp
   140009f7e:	mov    r8,rdi
   140009f81:	call   0x140009d04
   140009f86:	jmp    0x14000a0a4
   140009f8b:	test   eax,eax
   140009f8d:	je     0x140009faf
   140009f8f:	cmp    DWORD PTR [rbx],r8d
   140009f92:	jne    0x140009faf
   140009f94:	mov    esi,DWORD PTR [rbx+0x38]
   140009f97:	cmp    esi,0xffffffff
   140009f9a:	jl     0x140009fa1
   140009f9c:	cmp    esi,DWORD PTR [rdi+0x4]
   140009f9f:	jl     0x140009fa6
   140009fa1:	call   0x14000720c
   140009fa6:	mov    rcx,QWORD PTR [rbx+0x28]
   140009faa:	mov    r9d,esi
   140009fad:	jmp    0x140009f7b
   140009faf:	mov    r8,rdi
   140009fb2:	mov    rdx,rbp
   140009fb5:	mov    rcx,rsi
   140009fb8:	call   0x140005d08
   140009fbd:	jmp    0x14000a0a4
   140009fc2:	cmp    DWORD PTR [rdi+0xc],0x0
   140009fc6:	jne    0x140009ff6
   140009fc8:	mov    eax,DWORD PTR [rdi]
   140009fca:	and    eax,edx
   140009fcc:	cmp    eax,0x19930521
   140009fd1:	jb     0x14000a0a4
   140009fd7:	cmp    DWORD PTR [rdi+0x20],0x0
   140009fdb:	je     0x140009feb
   140009fdd:	call   0x140005f54
   140009fe2:	movsxd rcx,DWORD PTR [rdi+0x20]
   140009fe6:	add    rax,rcx
   140009fe9:	jmp    0x140009fed
   140009feb:	xor    eax,eax
   140009fed:	test   rax,rax
   140009ff0:	je     0x14000a0a4
   140009ff6:	cmp    DWORD PTR [rbx],0xe06d7363
   140009ffc:	jne    0x14000a06b
   140009ffe:	cmp    DWORD PTR [rbx+0x18],0x3
   14000a002:	jb     0x14000a06b
   14000a004:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000a00b:	jbe    0x14000a06b
   14000a00d:	mov    rax,QWORD PTR [rbx+0x30]
   14000a011:	cmp    DWORD PTR [rax+0x8],0x0
   14000a015:	je     0x14000a029
   14000a017:	call   0x140005f70
   14000a01c:	mov    rcx,QWORD PTR [rbx+0x30]
   14000a020:	movsxd r10,DWORD PTR [rcx+0x8]
   14000a024:	add    r10,rax
   14000a027:	jmp    0x14000a02c
   14000a029:	xor    r10d,r10d
   14000a02c:	test   r10,r10
   14000a02f:	je     0x14000a06b
   14000a031:	movzx  eax,BYTE PTR [rsp+0x98]
   14000a039:	mov    r9,rbp
   14000a03c:	mov    r8,r14
   14000a03f:	mov    DWORD PTR [rsp+0x38],eax
   14000a043:	mov    rax,QWORD PTR [rsp+0x90]
   14000a04b:	mov    rdx,rsi
   14000a04e:	mov    QWORD PTR [rsp+0x30],rax
   14000a053:	mov    eax,DWORD PTR [rsp+0x88]
   14000a05a:	mov    rcx,rbx
   14000a05d:	mov    DWORD PTR [rsp+0x28],eax
   14000a061:	mov    QWORD PTR [rsp+0x20],rdi
   14000a066:	call   r10
   14000a069:	jmp    0x14000a0a7
   14000a06b:	mov    rax,QWORD PTR [rsp+0x90]
   14000a073:	mov    r9,rbp
   14000a076:	mov    r8,r14
   14000a079:	mov    QWORD PTR [rsp+0x38],rax
   14000a07e:	mov    eax,DWORD PTR [rsp+0x88]
   14000a085:	mov    rdx,rsi
   14000a088:	mov    DWORD PTR [rsp+0x30],eax
   14000a08c:	mov    al,BYTE PTR [rsp+0x98]
   14000a093:	mov    rcx,rbx
   14000a096:	mov    BYTE PTR [rsp+0x28],al
   14000a09a:	mov    QWORD PTR [rsp+0x20],rdi
   14000a09f:	call   0x140008fa8
   14000a0a4:	mov    eax,r12d
   14000a0a7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a0ac:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a0b1:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a0b6:	add    rsp,0x40
   14000a0ba:	pop    r14
   14000a0bc:	pop    r12
   14000a0be:	pop    rdi
   14000a0bf:	ret    
   14000a0c0:	int3   
   14000a0c1:	int3   
   14000a0c2:	int3   
   14000a0c3:	int3   
   14000a0c4:	int3   
   14000a0c5:	int3   
   14000a0c6:	int3   
   14000a0c7:	int3   
   14000a0c8:	mov    rax,rsp
   14000a0cb:	mov    QWORD PTR [rax+0x8],rbx
   14000a0cf:	mov    QWORD PTR [rax+0x10],rbp
   14000a0d3:	mov    QWORD PTR [rax+0x18],rsi
   14000a0d7:	mov    QWORD PTR [rax+0x20],rdi
   14000a0db:	push   r14
   14000a0dd:	sub    rsp,0x20
   14000a0e1:	mov    esi,DWORD PTR [rcx+0x4]
   14000a0e4:	xor    ebx,ebx
   14000a0e6:	mov    r14,r8
   14000a0e9:	mov    rbp,rdx
   14000a0ec:	mov    rdi,rcx
   14000a0ef:	test   esi,esi
   14000a0f1:	je     0x14000a101
   14000a0f3:	movsxd rsi,esi
   14000a0f6:	call   0x140005f54
   14000a0fb:	lea    rcx,[rsi+rax*1]
   14000a0ff:	jmp    0x14000a104
   14000a101:	mov    rcx,rbx
   14000a104:	test   rcx,rcx
   14000a107:	je     0x14000a1c6
   14000a10d:	test   esi,esi
   14000a10f:	je     0x14000a120
   14000a111:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000a115:	call   0x140005f54
   14000a11a:	lea    rcx,[rsi+rax*1]
   14000a11e:	jmp    0x14000a123
   14000a120:	mov    rcx,rbx
   14000a123:	cmp    BYTE PTR [rcx+0x10],bl
   14000a126:	je     0x14000a1c6
   14000a12c:	test   esi,esi
   14000a12e:	je     0x14000a141
   14000a130:	call   0x140005f54
   14000a135:	mov    rsi,rax
   14000a138:	movsxd rax,DWORD PTR [rdi+0x4]
   14000a13c:	add    rsi,rax
   14000a13f:	jmp    0x14000a144
   14000a141:	mov    rsi,rbx
   14000a144:	call   0x140005f70
   14000a149:	mov    rcx,rax
   14000a14c:	movsxd rax,DWORD PTR [rbp+0x4]
   14000a150:	add    rcx,rax
   14000a153:	cmp    rsi,rcx
   14000a156:	je     0x14000a192
   14000a158:	cmp    DWORD PTR [rdi+0x4],ebx
   14000a15b:	je     0x14000a16e
   14000a15d:	call   0x140005f54
   14000a162:	mov    rsi,rax
   14000a165:	movsxd rax,DWORD PTR [rdi+0x4]
   14000a169:	add    rsi,rax
   14000a16c:	jmp    0x14000a171
   14000a16e:	mov    rsi,rbx
   14000a171:	call   0x140005f70
   14000a176:	movsxd rdx,DWORD PTR [rbp+0x4]
   14000a17a:	lea    rcx,[rsi+0x10]
   14000a17e:	add    rdx,0x10
   14000a182:	add    rdx,rax
   14000a185:	call   0x140006400
   14000a18a:	test   eax,eax
   14000a18c:	je     0x14000a192
   14000a18e:	xor    eax,eax
   14000a190:	jmp    0x14000a1cb
   14000a192:	mov    al,0x2
   14000a194:	test   BYTE PTR [rbp+0x0],al
   14000a197:	je     0x14000a19e
   14000a199:	test   BYTE PTR [rdi],0x8
   14000a19c:	je     0x14000a1c2
   14000a19e:	test   BYTE PTR [r14],0x1
   14000a1a2:	je     0x14000a1a9
   14000a1a4:	test   BYTE PTR [rdi],0x1
   14000a1a7:	je     0x14000a1c2
   14000a1a9:	test   BYTE PTR [r14],0x4
   14000a1ad:	je     0x14000a1b4
   14000a1af:	test   BYTE PTR [rdi],0x4
   14000a1b2:	je     0x14000a1c2
   14000a1b4:	test   BYTE PTR [r14],al
   14000a1b7:	je     0x14000a1bd
   14000a1b9:	test   BYTE PTR [rdi],al
   14000a1bb:	je     0x14000a1c2
   14000a1bd:	mov    ebx,0x1
   14000a1c2:	mov    eax,ebx
   14000a1c4:	jmp    0x14000a1cb
   14000a1c6:	mov    eax,0x1
   14000a1cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1d0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a1d5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a1da:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a1df:	add    rsp,0x20
   14000a1e3:	pop    r14
   14000a1e5:	ret    
   14000a1e6:	int3   
   14000a1e7:	int3   
   14000a1e8:	int3   
   14000a1e9:	int3   
   14000a1ea:	int3   
   14000a1eb:	int3   
   14000a1ec:	sub    rsp,0x28
   14000a1f0:	movsxd r9,DWORD PTR [r8+0x1c]
   14000a1f4:	mov    rax,QWORD PTR [rcx]
   14000a1f7:	mov    r10,r8
   14000a1fa:	mov    eax,DWORD PTR [r9+rax*1]
   14000a1fe:	cmp    eax,0xfffffffe
   14000a201:	jne    0x14000a20e
   14000a203:	mov    r8,QWORD PTR [rdx]
   14000a206:	mov    rcx,r10
   14000a209:	call   0x14000a2b4
   14000a20e:	add    rsp,0x28
   14000a212:	ret    
   14000a213:	int3   
   14000a214:	int3   
   14000a215:	int3   
   14000a216:	int3   
   14000a217:	int3   
   14000a218:	int3   
   14000a219:	int3   
   14000a21a:	int3   
   14000a21b:	int3   
   14000a21c:	rex push rbx
   14000a21e:	sub    rsp,0x20
   14000a222:	lea    r9,[rsp+0x40]
   14000a227:	mov    rbx,r8
   14000a22a:	call   0x140005b04
   14000a22f:	mov    rcx,QWORD PTR [rax]
   14000a232:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000a236:	mov    QWORD PTR [rsp+0x40],rcx
   14000a23b:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000a23f:	add    rsp,0x20
   14000a243:	pop    rbx
   14000a244:	ret    
   14000a245:	int3   
   14000a246:	int3   
   14000a247:	int3   
   14000a248:	int3   
   14000a249:	int3   
   14000a24a:	int3   
   14000a24b:	int3   
   14000a24c:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000a250:	mov    rax,QWORD PTR [rcx]
   14000a253:	mov    DWORD PTR [rdx+rax*1],r9d
   14000a257:	ret    
   14000a258:	int3   
   14000a259:	int3   
   14000a25a:	int3   
   14000a25b:	int3   
   14000a25c:	int3   
   14000a25d:	int3   
   14000a25e:	int3   
   14000a25f:	int3   
   14000a260:	mov    QWORD PTR [rsp+0x8],rbx
   14000a265:	push   rdi
   14000a266:	sub    rsp,0x20
   14000a26a:	mov    edi,r9d
   14000a26d:	lea    r9,[rsp+0x40]
   14000a272:	mov    rbx,r8
   14000a275:	call   0x140005b04
   14000a27a:	mov    rcx,QWORD PTR [rax]
   14000a27d:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000a281:	mov    QWORD PTR [rsp+0x40],rcx
   14000a286:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000a28a:	jle    0x14000a290
   14000a28c:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000a290:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a295:	add    rsp,0x20
   14000a299:	pop    rdi
   14000a29a:	ret    
   14000a29b:	int3   
   14000a29c:	int3   
   14000a29d:	int3   
   14000a29e:	int3   
   14000a29f:	int3   
   14000a2a0:	int3   
   14000a2a1:	int3   
   14000a2a2:	int3   
   14000a2a3:	int3   
   14000a2a4:	mov    r8,QWORD PTR [rdx]
   14000a2a7:	jmp    0x14000a2b4
   14000a2ac:	int3   
   14000a2ad:	int3   
   14000a2ae:	int3   
   14000a2af:	int3   
   14000a2b0:	int3   
   14000a2b1:	int3   
   14000a2b2:	int3   
   14000a2b3:	int3   
   14000a2b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000a2b9:	mov    QWORD PTR [rsp+0x10],rbp
   14000a2be:	mov    QWORD PTR [rsp+0x18],rsi
   14000a2c3:	push   rdi
   14000a2c4:	sub    rsp,0x20
   14000a2c8:	mov    rbp,r8
   14000a2cb:	mov    rsi,rdx
   14000a2ce:	mov    rbx,rcx
   14000a2d1:	test   rcx,rcx
   14000a2d4:	jne    0x14000a2db
   14000a2d6:	call   0x14000720c
   14000a2db:	movsxd rax,DWORD PTR [rbx+0x18]
   14000a2df:	mov    edi,DWORD PTR [rbx+0x14]
   14000a2e2:	add    rax,QWORD PTR [rsi+0x8]
   14000a2e6:	jne    0x14000a2ed
   14000a2e8:	call   0x14000720c
   14000a2ed:	xor    ecx,ecx
   14000a2ef:	test   edi,edi
   14000a2f1:	je     0x14000a325
   14000a2f3:	mov    r8,QWORD PTR [rsi+0x8]
   14000a2f7:	movsxd r9,DWORD PTR [rbx+0x18]
   14000a2fb:	lea    rdx,[r8+r9*1]
   14000a2ff:	movsxd rax,DWORD PTR [rdx]
   14000a302:	add    rax,r8
   14000a305:	cmp    rbp,rax
   14000a308:	jl     0x14000a314
   14000a30a:	inc    ecx
   14000a30c:	add    rdx,0x8
   14000a310:	cmp    ecx,edi
   14000a312:	jb     0x14000a2ff
   14000a314:	test   ecx,ecx
   14000a316:	je     0x14000a325
   14000a318:	dec    ecx
   14000a31a:	lea    rax,[r8+rcx*8]
   14000a31e:	mov    eax,DWORD PTR [rax+r9*1+0x4]
   14000a323:	jmp    0x14000a328
   14000a325:	or     eax,0xffffffff
   14000a328:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a32d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a332:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a337:	add    rsp,0x20
   14000a33b:	pop    rdi
   14000a33c:	ret    
   14000a33d:	int3   
   14000a33e:	int3   
   14000a33f:	int3   
   14000a340:	int3   
   14000a341:	int3   
   14000a342:	int3   
   14000a343:	int3   
   14000a344:	mov    r11,rsp
   14000a347:	sub    rsp,0x58
   14000a34b:	xor    eax,eax
   14000a34d:	mov    QWORD PTR [r11-0x18],rax
   14000a351:	mov    QWORD PTR [r11-0x20],rax
   14000a355:	mov    QWORD PTR [r11-0x28],rax
   14000a359:	mov    eax,DWORD PTR [rsp+0x88]
   14000a360:	mov    DWORD PTR [rsp+0x28],eax
   14000a364:	mov    rax,QWORD PTR [rsp+0x80]
   14000a36c:	mov    QWORD PTR [r11-0x38],rax
   14000a370:	call   QWORD PTR [rip+0x3dea]        # 0x14000e160
   14000a376:	add    rsp,0x58
   14000a37a:	ret    
   14000a37b:	int3   
   14000a37c:	int3   
   14000a37d:	int3   
   14000a37e:	int3   
   14000a37f:	int3   
   14000a380:	int3   
   14000a381:	int3   
   14000a382:	int3   
   14000a383:	int3   
   14000a384:	rex push rbx
   14000a386:	sub    rsp,0x20
   14000a38a:	test   rcx,rcx
   14000a38d:	je     0x14000a39c
   14000a38f:	test   rdx,rdx
   14000a392:	je     0x14000a39c
   14000a394:	test   r8,r8
   14000a397:	jne    0x14000a3b5
   14000a399:	mov    BYTE PTR [rcx],r8b
   14000a39c:	call   0x140006370
   14000a3a1:	mov    ebx,0x16
   14000a3a6:	mov    DWORD PTR [rax],ebx
   14000a3a8:	call   0x140006658
   14000a3ad:	mov    eax,ebx
   14000a3af:	add    rsp,0x20
   14000a3b3:	pop    rbx
   14000a3b4:	ret    
   14000a3b5:	mov    r9,rcx
   14000a3b8:	sub    r9,r8
   14000a3bb:	mov    al,BYTE PTR [r8]
   14000a3be:	mov    BYTE PTR [r9+r8*1],al
   14000a3c2:	inc    r8
   14000a3c5:	test   al,al
   14000a3c7:	je     0x14000a3ce
   14000a3c9:	dec    rdx
   14000a3cc:	jne    0x14000a3bb
   14000a3ce:	test   rdx,rdx
   14000a3d1:	jne    0x14000a3e1
   14000a3d3:	mov    BYTE PTR [rcx],dl
   14000a3d5:	call   0x140006370
   14000a3da:	mov    ebx,0x22
   14000a3df:	jmp    0x14000a3a6
   14000a3e1:	xor    eax,eax
   14000a3e3:	jmp    0x14000a3af
   14000a3e5:	int3   
   14000a3e6:	int3   
   14000a3e7:	int3   
   14000a3e8:	int3   
   14000a3e9:	int3   
   14000a3ea:	int3   
   14000a3eb:	int3   
   14000a3ec:	rex push rbx
   14000a3ee:	sub    rsp,0x10
   14000a3f2:	mov    r9d,0x2
   14000a3f8:	xor    ecx,ecx
   14000a3fa:	lea    r10d,[r9-0x1]
   14000a3fe:	mov    DWORD PTR [rip+0x9e57],r9d        # 0x14001425c
   14000a405:	mov    eax,r10d
   14000a408:	mov    DWORD PTR [rip+0x9e49],r10d        # 0x140014258
   14000a40f:	cpuid  
   14000a411:	mov    DWORD PTR [rsp],eax
   14000a414:	mov    DWORD PTR [rsp+0x4],ebx
   14000a418:	mov    DWORD PTR [rsp+0xc],edx
   14000a41c:	bt     ecx,0x14
   14000a420:	jae    0x14000a44d
   14000a422:	mov    DWORD PTR [rip+0x9e2f],r9d        # 0x140014258
   14000a429:	mov    DWORD PTR [rip+0x9e29],0x6        # 0x14001425c
   14000a433:	bt     ecx,0x1c
   14000a437:	jae    0x14000a44d
   14000a439:	mov    DWORD PTR [rip+0x9e15],0x3        # 0x140014258
   14000a443:	mov    DWORD PTR [rip+0x9e0f],0xe        # 0x14001425c
   14000a44d:	mov    r8d,DWORD PTR [rip+0xb10c]        # 0x140015560
   14000a454:	xor    ecx,ecx
   14000a456:	mov    eax,0x7
   14000a45b:	cpuid  
   14000a45d:	mov    DWORD PTR [rsp],eax
   14000a460:	mov    DWORD PTR [rsp+0x8],ecx
   14000a464:	mov    DWORD PTR [rsp+0xc],edx
   14000a468:	bt     ebx,0x9
   14000a46c:	jae    0x14000a478
   14000a46e:	or     r8d,r9d
   14000a471:	mov    DWORD PTR [rip+0xb0e8],r8d        # 0x140015560
   14000a478:	xor    eax,eax
   14000a47a:	xor    ecx,ecx
   14000a47c:	cpuid  
   14000a47e:	mov    DWORD PTR [rsp],eax
   14000a481:	cmp    ebx,0x756e6547
   14000a487:	jne    0x14000a4ea
   14000a489:	cmp    edx,0x49656e69
   14000a48f:	jne    0x14000a4ea
   14000a491:	cmp    ecx,0x6c65746e
   14000a497:	jne    0x14000a4ea
   14000a499:	xor    ecx,ecx
   14000a49b:	mov    eax,r10d
   14000a49e:	cpuid  
   14000a4a0:	and    eax,0xfff3ff0
   14000a4a5:	mov    DWORD PTR [rsp+0x4],ebx
   14000a4a9:	mov    DWORD PTR [rsp+0x8],ecx
   14000a4ad:	mov    DWORD PTR [rsp+0xc],edx
   14000a4b1:	cmp    eax,0x106c0
   14000a4b6:	je     0x14000a4e0
   14000a4b8:	cmp    eax,0x20660
   14000a4bd:	je     0x14000a4e0
   14000a4bf:	cmp    eax,0x20670
   14000a4c4:	je     0x14000a4e0
   14000a4c6:	add    eax,0xfffcf9b0
   14000a4cb:	cmp    eax,0x20
   14000a4ce:	ja     0x14000a4ea
   14000a4d0:	movabs rcx,0x100010001
   14000a4da:	bt     rcx,rax
   14000a4de:	jae    0x14000a4ea
   14000a4e0:	or     r8d,r10d
   14000a4e3:	mov    DWORD PTR [rip+0xb076],r8d        # 0x140015560
   14000a4ea:	xor    eax,eax
   14000a4ec:	add    rsp,0x10
   14000a4f0:	pop    rbx
   14000a4f1:	ret    
   14000a4f2:	int3   
   14000a4f3:	int3   
   14000a4f4:	int3   
   14000a4f5:	int3   
   14000a4f6:	int3   
   14000a4f7:	int3   
   14000a4f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4fd:	mov    QWORD PTR [rsp+0x10],rsi
   14000a502:	push   rdi
   14000a503:	sub    rsp,0x20
   14000a507:	mov    rbx,rdx
   14000a50a:	mov    rdi,rcx
   14000a50d:	test   rcx,rcx
   14000a510:	jne    0x14000a51c
   14000a512:	mov    rcx,rdx
   14000a515:	call   0x1400039e8
   14000a51a:	jmp    0x14000a586
   14000a51c:	test   rdx,rdx
   14000a51f:	jne    0x14000a528
   14000a521:	call   0x140003aa4
   14000a526:	jmp    0x14000a584
   14000a528:	cmp    rdx,0xffffffffffffffe0
   14000a52c:	ja     0x14000a571
   14000a52e:	mov    rcx,QWORD PTR [rip+0xa513]        # 0x140014a48
   14000a535:	mov    eax,0x1
   14000a53a:	test   rbx,rbx
   14000a53d:	cmove  rbx,rax
   14000a541:	mov    r8,rdi
   14000a544:	xor    edx,edx
   14000a546:	mov    r9,rbx
   14000a549:	call   QWORD PTR [rip+0x3c09]        # 0x14000e158
   14000a54f:	mov    rsi,rax
   14000a552:	test   rax,rax
   14000a555:	jne    0x14000a5c6
   14000a557:	cmp    DWORD PTR [rip+0xac9b],eax        # 0x1400151f8
   14000a55d:	je     0x14000a5af
   14000a55f:	mov    rcx,rbx
   14000a562:	call   0x1400062a8
   14000a567:	test   eax,eax
   14000a569:	je     0x14000a596
   14000a56b:	cmp    rbx,0xffffffffffffffe0
   14000a56f:	jbe    0x14000a52e
   14000a571:	mov    rcx,rbx
   14000a574:	call   0x1400062a8
   14000a579:	call   0x140006370
   14000a57e:	mov    DWORD PTR [rax],0xc
   14000a584:	xor    eax,eax
   14000a586:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a58b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a590:	add    rsp,0x20
   14000a594:	pop    rdi
   14000a595:	ret    
   14000a596:	call   0x140006370
   14000a59b:	mov    rbx,rax
   14000a59e:	call   QWORD PTR [rip+0x3afc]        # 0x14000e0a0
   14000a5a4:	mov    ecx,eax
   14000a5a6:	call   0x140006398
   14000a5ab:	mov    DWORD PTR [rbx],eax
   14000a5ad:	jmp    0x14000a584
   14000a5af:	call   0x140006370
   14000a5b4:	mov    rbx,rax
   14000a5b7:	call   QWORD PTR [rip+0x3ae3]        # 0x14000e0a0
   14000a5bd:	mov    ecx,eax
   14000a5bf:	call   0x140006398
   14000a5c4:	mov    DWORD PTR [rbx],eax
   14000a5c6:	mov    rax,rsi
   14000a5c9:	jmp    0x14000a586
   14000a5cb:	int3   
   14000a5cc:	int3   
   14000a5cd:	int3   
   14000a5ce:	int3   
   14000a5cf:	int3   
   14000a5d0:	int3   
   14000a5d1:	int3   
   14000a5d2:	int3   
   14000a5d3:	int3   
   14000a5d4:	test   rcx,rcx
   14000a5d7:	je     0x14000a6dd
   14000a5dd:	push   rbx
   14000a5de:	sub    rsp,0x20
   14000a5e2:	mov    rbx,rcx
   14000a5e5:	mov    rcx,QWORD PTR [rcx+0x18]
   14000a5e9:	cmp    rcx,QWORD PTR [rip+0x9ca8]        # 0x140014298
   14000a5f0:	je     0x14000a5f7
   14000a5f2:	call   0x140003aa4
   14000a5f7:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a5fb:	cmp    rcx,QWORD PTR [rip+0x9c9e]        # 0x1400142a0
   14000a602:	je     0x14000a609
   14000a604:	call   0x140003aa4
   14000a609:	mov    rcx,QWORD PTR [rbx+0x28]
   14000a60d:	cmp    rcx,QWORD PTR [rip+0x9c94]        # 0x1400142a8
   14000a614:	je     0x14000a61b
   14000a616:	call   0x140003aa4
   14000a61b:	mov    rcx,QWORD PTR [rbx+0x30]
   14000a61f:	cmp    rcx,QWORD PTR [rip+0x9c8a]        # 0x1400142b0
   14000a626:	je     0x14000a62d
   14000a628:	call   0x140003aa4
   14000a62d:	mov    rcx,QWORD PTR [rbx+0x38]
   14000a631:	cmp    rcx,QWORD PTR [rip+0x9c80]        # 0x1400142b8
   14000a638:	je     0x14000a63f
   14000a63a:	call   0x140003aa4
   14000a63f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a643:	cmp    rcx,QWORD PTR [rip+0x9c76]        # 0x1400142c0
   14000a64a:	je     0x14000a651
   14000a64c:	call   0x140003aa4
   14000a651:	mov    rcx,QWORD PTR [rbx+0x48]
   14000a655:	cmp    rcx,QWORD PTR [rip+0x9c6c]        # 0x1400142c8
   14000a65c:	je     0x14000a663
   14000a65e:	call   0x140003aa4
   14000a663:	mov    rcx,QWORD PTR [rbx+0x68]
   14000a667:	cmp    rcx,QWORD PTR [rip+0x9c7a]        # 0x1400142e8
   14000a66e:	je     0x14000a675
   14000a670:	call   0x140003aa4
   14000a675:	mov    rcx,QWORD PTR [rbx+0x70]
   14000a679:	cmp    rcx,QWORD PTR [rip+0x9c70]        # 0x1400142f0
   14000a680:	je     0x14000a687
   14000a682:	call   0x140003aa4
   14000a687:	mov    rcx,QWORD PTR [rbx+0x78]
   14000a68b:	cmp    rcx,QWORD PTR [rip+0x9c66]        # 0x1400142f8
   14000a692:	je     0x14000a699
   14000a694:	call   0x140003aa4
   14000a699:	mov    rcx,QWORD PTR [rbx+0x80]
   14000a6a0:	cmp    rcx,QWORD PTR [rip+0x9c59]        # 0x140014300
   14000a6a7:	je     0x14000a6ae
   14000a6a9:	call   0x140003aa4
   14000a6ae:	mov    rcx,QWORD PTR [rbx+0x88]
   14000a6b5:	cmp    rcx,QWORD PTR [rip+0x9c4c]        # 0x140014308
   14000a6bc:	je     0x14000a6c3
   14000a6be:	call   0x140003aa4
   14000a6c3:	mov    rcx,QWORD PTR [rbx+0x90]
   14000a6ca:	cmp    rcx,QWORD PTR [rip+0x9c3f]        # 0x140014310
   14000a6d1:	je     0x14000a6d8
   14000a6d3:	call   0x140003aa4
   14000a6d8:	add    rsp,0x20
   14000a6dc:	pop    rbx
   14000a6dd:	ret    
   14000a6de:	int3   
   14000a6df:	int3   
   14000a6e0:	int3   
   14000a6e1:	int3   
   14000a6e2:	int3   
   14000a6e3:	int3   
   14000a6e4:	test   rcx,rcx
   14000a6e7:	je     0x14000a74f
   14000a6e9:	push   rbx
   14000a6ea:	sub    rsp,0x20
   14000a6ee:	mov    rbx,rcx
   14000a6f1:	mov    rcx,QWORD PTR [rcx]
   14000a6f4:	cmp    rcx,QWORD PTR [rip+0x9b85]        # 0x140014280
   14000a6fb:	je     0x14000a702
   14000a6fd:	call   0x140003aa4
   14000a702:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a706:	cmp    rcx,QWORD PTR [rip+0x9b7b]        # 0x140014288
   14000a70d:	je     0x14000a714
   14000a70f:	call   0x140003aa4
   14000a714:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a718:	cmp    rcx,QWORD PTR [rip+0x9b71]        # 0x140014290
   14000a71f:	je     0x14000a726
   14000a721:	call   0x140003aa4
   14000a726:	mov    rcx,QWORD PTR [rbx+0x58]
   14000a72a:	cmp    rcx,QWORD PTR [rip+0x9ba7]        # 0x1400142d8
   14000a731:	je     0x14000a738
   14000a733:	call   0x140003aa4
   14000a738:	mov    rcx,QWORD PTR [rbx+0x60]
   14000a73c:	cmp    rcx,QWORD PTR [rip+0x9b9d]        # 0x1400142e0
   14000a743:	je     0x14000a74a
   14000a745:	call   0x140003aa4
   14000a74a:	add    rsp,0x20
   14000a74e:	pop    rbx
   14000a74f:	ret    
   14000a750:	int3   
   14000a751:	int3   
   14000a752:	int3   
   14000a753:	int3   
   14000a754:	int3   
   14000a755:	int3   
   14000a756:	int3   
   14000a757:	int3   
   14000a758:	test   rcx,rcx
   14000a75b:	je     0x14000ab51
   14000a761:	push   rbx
   14000a762:	sub    rsp,0x20
   14000a766:	mov    rbx,rcx
   14000a769:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a76d:	call   0x140003aa4
   14000a772:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a776:	call   0x140003aa4
   14000a77b:	mov    rcx,QWORD PTR [rbx+0x18]
   14000a77f:	call   0x140003aa4
   14000a784:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a788:	call   0x140003aa4
   14000a78d:	mov    rcx,QWORD PTR [rbx+0x28]
   14000a791:	call   0x140003aa4
   14000a796:	mov    rcx,QWORD PTR [rbx+0x30]
   14000a79a:	call   0x140003aa4
   14000a79f:	mov    rcx,QWORD PTR [rbx]
   14000a7a2:	call   0x140003aa4
   14000a7a7:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a7ab:	call   0x140003aa4
   14000a7b0:	mov    rcx,QWORD PTR [rbx+0x48]
   14000a7b4:	call   0x140003aa4
   14000a7b9:	mov    rcx,QWORD PTR [rbx+0x50]
   14000a7bd:	call   0x140003aa4
   14000a7c2:	mov    rcx,QWORD PTR [rbx+0x58]
   14000a7c6:	call   0x140003aa4
   14000a7cb:	mov    rcx,QWORD PTR [rbx+0x60]
   14000a7cf:	call   0x140003aa4
   14000a7d4:	mov    rcx,QWORD PTR [rbx+0x68]
   14000a7d8:	call   0x140003aa4
   14000a7dd:	mov    rcx,QWORD PTR [rbx+0x38]
   14000a7e1:	call   0x140003aa4
   14000a7e6:	mov    rcx,QWORD PTR [rbx+0x70]
   14000a7ea:	call   0x140003aa4
   14000a7ef:	mov    rcx,QWORD PTR [rbx+0x78]
   14000a7f3:	call   0x140003aa4
   14000a7f8:	mov    rcx,QWORD PTR [rbx+0x80]
   14000a7ff:	call   0x140003aa4
   14000a804:	mov    rcx,QWORD PTR [rbx+0x88]
   14000a80b:	call   0x140003aa4
   14000a810:	mov    rcx,QWORD PTR [rbx+0x90]
   14000a817:	call   0x140003aa4
   14000a81c:	mov    rcx,QWORD PTR [rbx+0x98]
   14000a823:	call   0x140003aa4
   14000a828:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000a82f:	call   0x140003aa4
   14000a834:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000a83b:	call   0x140003aa4
   14000a840:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000a847:	call   0x140003aa4
   14000a84c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000a853:	call   0x140003aa4
   14000a858:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000a85f:	call   0x140003aa4
   14000a864:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000a86b:	call   0x140003aa4
   14000a870:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000a877:	call   0x140003aa4
   14000a87c:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000a883:	call   0x140003aa4
   14000a888:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000a88f:	call   0x140003aa4
   14000a894:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000a89b:	call   0x140003aa4
   14000a8a0:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000a8a7:	call   0x140003aa4
   14000a8ac:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000a8b3:	call   0x140003aa4
   14000a8b8:	mov    rcx,QWORD PTR [rbx+0x100]
   14000a8bf:	call   0x140003aa4
   14000a8c4:	mov    rcx,QWORD PTR [rbx+0x108]
   14000a8cb:	call   0x140003aa4
   14000a8d0:	mov    rcx,QWORD PTR [rbx+0x110]
   14000a8d7:	call   0x140003aa4
   14000a8dc:	mov    rcx,QWORD PTR [rbx+0x118]
   14000a8e3:	call   0x140003aa4
   14000a8e8:	mov    rcx,QWORD PTR [rbx+0x120]
   14000a8ef:	call   0x140003aa4
   14000a8f4:	mov    rcx,QWORD PTR [rbx+0x128]
   14000a8fb:	call   0x140003aa4
   14000a900:	mov    rcx,QWORD PTR [rbx+0x130]
   14000a907:	call   0x140003aa4
   14000a90c:	mov    rcx,QWORD PTR [rbx+0x138]
   14000a913:	call   0x140003aa4
   14000a918:	mov    rcx,QWORD PTR [rbx+0x140]
   14000a91f:	call   0x140003aa4
   14000a924:	mov    rcx,QWORD PTR [rbx+0x148]
   14000a92b:	call   0x140003aa4
   14000a930:	mov    rcx,QWORD PTR [rbx+0x150]
   14000a937:	call   0x140003aa4
   14000a93c:	mov    rcx,QWORD PTR [rbx+0x168]
   14000a943:	call   0x140003aa4
   14000a948:	mov    rcx,QWORD PTR [rbx+0x170]
   14000a94f:	call   0x140003aa4
   14000a954:	mov    rcx,QWORD PTR [rbx+0x178]
   14000a95b:	call   0x140003aa4
   14000a960:	mov    rcx,QWORD PTR [rbx+0x180]
   14000a967:	call   0x140003aa4
   14000a96c:	mov    rcx,QWORD PTR [rbx+0x188]
   14000a973:	call   0x140003aa4
   14000a978:	mov    rcx,QWORD PTR [rbx+0x190]
   14000a97f:	call   0x140003aa4
   14000a984:	mov    rcx,QWORD PTR [rbx+0x160]
   14000a98b:	call   0x140003aa4
   14000a990:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000a997:	call   0x140003aa4
   14000a99c:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000a9a3:	call   0x140003aa4
   14000a9a8:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000a9af:	call   0x140003aa4
   14000a9b4:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000a9bb:	call   0x140003aa4
   14000a9c0:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000a9c7:	call   0x140003aa4
   14000a9cc:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000a9d3:	call   0x140003aa4
   14000a9d8:	mov    rcx,QWORD PTR [rbx+0x198]
   14000a9df:	call   0x140003aa4
   14000a9e4:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000a9eb:	call   0x140003aa4
   14000a9f0:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000a9f7:	call   0x140003aa4
   14000a9fc:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000aa03:	call   0x140003aa4
   14000aa08:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000aa0f:	call   0x140003aa4
   14000aa14:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000aa1b:	call   0x140003aa4
   14000aa20:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000aa27:	call   0x140003aa4
   14000aa2c:	mov    rcx,QWORD PTR [rbx+0x200]
   14000aa33:	call   0x140003aa4
   14000aa38:	mov    rcx,QWORD PTR [rbx+0x208]
   14000aa3f:	call   0x140003aa4
   14000aa44:	mov    rcx,QWORD PTR [rbx+0x210]
   14000aa4b:	call   0x140003aa4
   14000aa50:	mov    rcx,QWORD PTR [rbx+0x218]
   14000aa57:	call   0x140003aa4
   14000aa5c:	mov    rcx,QWORD PTR [rbx+0x220]
   14000aa63:	call   0x140003aa4
   14000aa68:	mov    rcx,QWORD PTR [rbx+0x228]
   14000aa6f:	call   0x140003aa4
   14000aa74:	mov    rcx,QWORD PTR [rbx+0x230]
   14000aa7b:	call   0x140003aa4
   14000aa80:	mov    rcx,QWORD PTR [rbx+0x238]
   14000aa87:	call   0x140003aa4
   14000aa8c:	mov    rcx,QWORD PTR [rbx+0x240]
   14000aa93:	call   0x140003aa4
   14000aa98:	mov    rcx,QWORD PTR [rbx+0x248]
   14000aa9f:	call   0x140003aa4
   14000aaa4:	mov    rcx,QWORD PTR [rbx+0x250]
   14000aaab:	call   0x140003aa4
   14000aab0:	mov    rcx,QWORD PTR [rbx+0x258]
   14000aab7:	call   0x140003aa4
   14000aabc:	mov    rcx,QWORD PTR [rbx+0x260]
   14000aac3:	call   0x140003aa4
   14000aac8:	mov    rcx,QWORD PTR [rbx+0x268]
   14000aacf:	call   0x140003aa4
   14000aad4:	mov    rcx,QWORD PTR [rbx+0x270]
   14000aadb:	call   0x140003aa4
   14000aae0:	mov    rcx,QWORD PTR [rbx+0x278]
   14000aae7:	call   0x140003aa4
   14000aaec:	mov    rcx,QWORD PTR [rbx+0x280]
   14000aaf3:	call   0x140003aa4
   14000aaf8:	mov    rcx,QWORD PTR [rbx+0x288]
   14000aaff:	call   0x140003aa4
   14000ab04:	mov    rcx,QWORD PTR [rbx+0x290]
   14000ab0b:	call   0x140003aa4
   14000ab10:	mov    rcx,QWORD PTR [rbx+0x298]
   14000ab17:	call   0x140003aa4
   14000ab1c:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000ab23:	call   0x140003aa4
   14000ab28:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000ab2f:	call   0x140003aa4
   14000ab34:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000ab3b:	call   0x140003aa4
   14000ab40:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000ab47:	call   0x140003aa4
   14000ab4c:	add    rsp,0x20
   14000ab50:	pop    rbx
   14000ab51:	ret    
   14000ab52:	int3   
   14000ab53:	int3   
   14000ab54:	int3   
   14000ab55:	int3   
   14000ab56:	int3   
   14000ab57:	int3   
   14000ab58:	rex push rbp
   14000ab5a:	push   r12
   14000ab5c:	push   r13
   14000ab5e:	push   r14
   14000ab60:	push   r15
   14000ab62:	sub    rsp,0x50
   14000ab66:	lea    rbp,[rsp+0x40]
   14000ab6b:	mov    QWORD PTR [rbp+0x40],rbx
   14000ab6f:	mov    QWORD PTR [rbp+0x48],rsi
   14000ab73:	mov    QWORD PTR [rbp+0x50],rdi
   14000ab77:	mov    rax,QWORD PTR [rip+0x8552]        # 0x1400130d0
   14000ab7e:	xor    rax,rbp
   14000ab81:	mov    QWORD PTR [rbp+0x8],rax
   14000ab85:	mov    ebx,DWORD PTR [rbp+0x60]
   14000ab88:	xor    edi,edi
   14000ab8a:	mov    r12,r9
   14000ab8d:	mov    r13d,r8d
   14000ab90:	mov    QWORD PTR [rbp+0x0],rdx
   14000ab94:	test   ebx,ebx
   14000ab96:	jle    0x14000abc2
   14000ab98:	mov    r10d,ebx
   14000ab9b:	mov    rax,r9
   14000ab9e:	dec    r10d
   14000aba1:	cmp    BYTE PTR [rax],dil
   14000aba4:	je     0x14000abb2
   14000aba6:	inc    rax
   14000aba9:	test   r10d,r10d
   14000abac:	jne    0x14000ab9e
   14000abae:	or     r10d,0xffffffff
   14000abb2:	mov    eax,ebx
   14000abb4:	sub    eax,r10d
   14000abb7:	dec    eax
   14000abb9:	cmp    eax,ebx
   14000abbb:	lea    ebx,[rax+0x1]
   14000abbe:	jl     0x14000abc2
   14000abc0:	mov    ebx,eax
   14000abc2:	mov    r14d,DWORD PTR [rbp+0x78]
   14000abc6:	mov    esi,edi
   14000abc8:	test   r14d,r14d
   14000abcb:	jne    0x14000abd4
   14000abcd:	mov    rax,QWORD PTR [rcx]
   14000abd0:	mov    r14d,DWORD PTR [rax+0x4]
   14000abd4:	neg    DWORD PTR [rbp+0x80]
   14000abda:	mov    r9d,ebx
   14000abdd:	mov    r8,r12
   14000abe0:	sbb    edx,edx
   14000abe2:	mov    ecx,r14d
   14000abe5:	mov    DWORD PTR [rsp+0x28],edi
   14000abe9:	and    edx,0x8
   14000abec:	mov    QWORD PTR [rsp+0x20],rdi
   14000abf1:	inc    edx
   14000abf3:	call   QWORD PTR [rip+0x35a7]        # 0x14000e1a0
   14000abf9:	movsxd r15,eax
   14000abfc:	test   eax,eax
   14000abfe:	jne    0x14000ac07
   14000ac00:	xor    eax,eax
   14000ac02:	jmp    0x14000ae00
   14000ac07:	movabs r8,0xffffffffffffff0
   14000ac11:	test   eax,eax
   14000ac13:	jle    0x14000ac76
   14000ac15:	xor    edx,edx
   14000ac17:	lea    rax,[rdx-0x20]
   14000ac1b:	div    r15
   14000ac1e:	cmp    rax,0x2
   14000ac22:	jb     0x14000ac76
   14000ac24:	lea    rcx,[r15*2+0x10]
   14000ac2c:	cmp    rcx,0x400
   14000ac33:	ja     0x14000ac5f
   14000ac35:	lea    rax,[rcx+0xf]
   14000ac39:	cmp    rax,rcx
   14000ac3c:	ja     0x14000ac41
   14000ac3e:	mov    rax,r8
   14000ac41:	and    rax,0xfffffffffffffff0
   14000ac45:	call   0x14000b470
   14000ac4a:	sub    rsp,rax
   14000ac4d:	lea    rdi,[rsp+0x40]
   14000ac52:	test   rdi,rdi
   14000ac55:	je     0x14000ac00
   14000ac57:	mov    DWORD PTR [rdi],0xcccc
   14000ac5d:	jmp    0x14000ac72
   14000ac5f:	call   0x1400039e8
   14000ac64:	mov    rdi,rax
   14000ac67:	test   rax,rax
   14000ac6a:	je     0x14000ac76
   14000ac6c:	mov    DWORD PTR [rax],0xdddd
   14000ac72:	add    rdi,0x10
   14000ac76:	test   rdi,rdi
   14000ac79:	je     0x14000ac00
   14000ac7b:	mov    r9d,ebx
   14000ac7e:	mov    r8,r12
   14000ac81:	mov    edx,0x1
   14000ac86:	mov    ecx,r14d
   14000ac89:	mov    DWORD PTR [rsp+0x28],r15d
   14000ac8e:	mov    QWORD PTR [rsp+0x20],rdi
   14000ac93:	call   QWORD PTR [rip+0x3507]        # 0x14000e1a0
   14000ac99:	test   eax,eax
   14000ac9b:	je     0x14000aded
   14000aca1:	mov    r12,QWORD PTR [rbp+0x0]
   14000aca5:	and    DWORD PTR [rsp+0x28],esi
   14000aca9:	and    QWORD PTR [rsp+0x20],rsi
   14000acae:	mov    rcx,r12
   14000acb1:	mov    r9d,r15d
   14000acb4:	mov    r8,rdi
   14000acb7:	mov    edx,r13d
   14000acba:	call   0x14000a344
   14000acbf:	movsxd rsi,eax
   14000acc2:	test   eax,eax
   14000acc4:	je     0x14000aded
   14000acca:	mov    r8d,0x400
   14000acd0:	test   r8d,r13d
   14000acd3:	je     0x14000ad0b
   14000acd5:	mov    ecx,DWORD PTR [rbp+0x70]
   14000acd8:	test   ecx,ecx
   14000acda:	je     0x14000aded
   14000ace0:	cmp    esi,ecx
   14000ace2:	jg     0x14000aded
   14000ace8:	mov    rax,QWORD PTR [rbp+0x68]
   14000acec:	mov    DWORD PTR [rsp+0x28],ecx
   14000acf0:	mov    r9d,r15d
   14000acf3:	mov    r8,rdi
   14000acf6:	mov    edx,r13d
   14000acf9:	mov    rcx,r12
   14000acfc:	mov    QWORD PTR [rsp+0x20],rax
   14000ad01:	call   0x14000a344
   14000ad06:	jmp    0x14000aded
   14000ad0b:	test   eax,eax
   14000ad0d:	jle    0x14000ad79
   14000ad0f:	xor    edx,edx
   14000ad11:	lea    rax,[rdx-0x20]
   14000ad15:	div    rsi
   14000ad18:	cmp    rax,0x2
   14000ad1c:	jb     0x14000ad79
   14000ad1e:	lea    rcx,[rsi*2+0x10]
   14000ad26:	cmp    rcx,r8
   14000ad29:	ja     0x14000ad60
   14000ad2b:	lea    rax,[rcx+0xf]
   14000ad2f:	cmp    rax,rcx
   14000ad32:	ja     0x14000ad3e
   14000ad34:	movabs rax,0xffffffffffffff0
   14000ad3e:	and    rax,0xfffffffffffffff0
   14000ad42:	call   0x14000b470
   14000ad47:	sub    rsp,rax
   14000ad4a:	lea    rbx,[rsp+0x40]
   14000ad4f:	test   rbx,rbx
   14000ad52:	je     0x14000aded
   14000ad58:	mov    DWORD PTR [rbx],0xcccc
   14000ad5e:	jmp    0x14000ad73
   14000ad60:	call   0x1400039e8
   14000ad65:	mov    rbx,rax
   14000ad68:	test   rax,rax
   14000ad6b:	je     0x14000ad7b
   14000ad6d:	mov    DWORD PTR [rax],0xdddd
   14000ad73:	add    rbx,0x10
   14000ad77:	jmp    0x14000ad7b
   14000ad79:	xor    ebx,ebx
   14000ad7b:	test   rbx,rbx
   14000ad7e:	je     0x14000aded
   14000ad80:	mov    r9d,r15d
   14000ad83:	mov    r8,rdi
   14000ad86:	mov    edx,r13d
   14000ad89:	mov    rcx,r12
   14000ad8c:	mov    DWORD PTR [rsp+0x28],esi
   14000ad90:	mov    QWORD PTR [rsp+0x20],rbx
   14000ad95:	call   0x14000a344
   14000ad9a:	xor    ecx,ecx
   14000ad9c:	test   eax,eax
   14000ad9e:	je     0x14000addc
   14000ada0:	mov    eax,DWORD PTR [rbp+0x70]
   14000ada3:	xor    edx,edx
   14000ada5:	mov    QWORD PTR [rsp+0x38],rcx
   14000adaa:	mov    r9d,esi
   14000adad:	mov    r8,rbx
   14000adb0:	mov    QWORD PTR [rsp+0x30],rcx
   14000adb5:	test   eax,eax
   14000adb7:	jne    0x14000adc4
   14000adb9:	mov    DWORD PTR [rsp+0x28],ecx
   14000adbd:	mov    QWORD PTR [rsp+0x20],rcx
   14000adc2:	jmp    0x14000add1
   14000adc4:	mov    DWORD PTR [rsp+0x28],eax
   14000adc8:	mov    rax,QWORD PTR [rbp+0x68]
   14000adcc:	mov    QWORD PTR [rsp+0x20],rax
   14000add1:	mov    ecx,r14d
   14000add4:	call   QWORD PTR [rip+0x34f6]        # 0x14000e2d0
   14000adda:	mov    esi,eax
   14000addc:	lea    rcx,[rbx-0x10]
   14000ade0:	cmp    DWORD PTR [rcx],0xdddd
   14000ade6:	jne    0x14000aded
   14000ade8:	call   0x140003aa4
   14000aded:	lea    rcx,[rdi-0x10]
   14000adf1:	cmp    DWORD PTR [rcx],0xdddd
   14000adf7:	jne    0x14000adfe
   14000adf9:	call   0x140003aa4
   14000adfe:	mov    eax,esi
   14000ae00:	mov    rcx,QWORD PTR [rbp+0x8]
   14000ae04:	xor    rcx,rbp
   14000ae07:	call   0x140003950
   14000ae0c:	mov    rbx,QWORD PTR [rbp+0x40]
   14000ae10:	mov    rsi,QWORD PTR [rbp+0x48]
   14000ae14:	mov    rdi,QWORD PTR [rbp+0x50]
   14000ae18:	lea    rsp,[rbp+0x10]
   14000ae1c:	pop    r15
   14000ae1e:	pop    r14
   14000ae20:	pop    r13
   14000ae22:	pop    r12
   14000ae24:	pop    rbp
   14000ae25:	ret    
   14000ae26:	int3   
   14000ae27:	int3   
   14000ae28:	int3   
   14000ae29:	int3   
   14000ae2a:	int3   
   14000ae2b:	int3   
   14000ae2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae31:	mov    QWORD PTR [rsp+0x10],rsi
   14000ae36:	push   rdi
   14000ae37:	sub    rsp,0x70
   14000ae3b:	mov    rsi,rdx
   14000ae3e:	mov    rdx,rcx
   14000ae41:	lea    rcx,[rsp+0x50]
   14000ae46:	mov    rbx,r9
   14000ae49:	mov    edi,r8d
   14000ae4c:	call   0x140007898
   14000ae51:	mov    eax,DWORD PTR [rsp+0xc0]
   14000ae58:	lea    rcx,[rsp+0x50]
   14000ae5d:	mov    r9,rbx
   14000ae60:	mov    DWORD PTR [rsp+0x40],eax
   14000ae64:	mov    eax,DWORD PTR [rsp+0xb8]
   14000ae6b:	mov    r8d,edi
   14000ae6e:	mov    DWORD PTR [rsp+0x38],eax
   14000ae72:	mov    eax,DWORD PTR [rsp+0xb0]
   14000ae79:	mov    rdx,rsi
   14000ae7c:	mov    DWORD PTR [rsp+0x30],eax
   14000ae80:	mov    rax,QWORD PTR [rsp+0xa8]
   14000ae88:	mov    QWORD PTR [rsp+0x28],rax
   14000ae8d:	mov    eax,DWORD PTR [rsp+0xa0]
   14000ae94:	mov    DWORD PTR [rsp+0x20],eax
   14000ae98:	call   0x14000ab58
   14000ae9d:	cmp    BYTE PTR [rsp+0x68],0x0
   14000aea2:	je     0x14000aeb0
   14000aea4:	mov    rcx,QWORD PTR [rsp+0x60]
   14000aea9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000aeb0:	lea    r11,[rsp+0x70]
   14000aeb5:	mov    rbx,QWORD PTR [r11+0x10]
   14000aeb9:	mov    rsi,QWORD PTR [r11+0x18]
   14000aebd:	mov    rsp,r11
   14000aec0:	pop    rdi
   14000aec1:	ret    
   14000aec2:	int3   
   14000aec3:	int3   
   14000aec4:	int3   
   14000aec5:	int3   
   14000aec6:	int3   
   14000aec7:	int3   
   14000aec8:	rex push rbp
   14000aeca:	push   r12
   14000aecc:	push   r13
   14000aece:	push   r14
   14000aed0:	push   r15
   14000aed2:	sub    rsp,0x40
   14000aed6:	lea    rbp,[rsp+0x30]
   14000aedb:	mov    QWORD PTR [rbp+0x40],rbx
   14000aedf:	mov    QWORD PTR [rbp+0x48],rsi
   14000aee3:	mov    QWORD PTR [rbp+0x50],rdi
   14000aee7:	mov    rax,QWORD PTR [rip+0x81e2]        # 0x1400130d0
   14000aeee:	xor    rax,rbp
   14000aef1:	mov    QWORD PTR [rbp+0x0],rax
   14000aef5:	mov    r14d,DWORD PTR [rbp+0x68]
   14000aef9:	xor    edi,edi
   14000aefb:	mov    r15d,r9d
   14000aefe:	mov    r12,r8
   14000af01:	mov    r13d,edx
   14000af04:	test   r14d,r14d
   14000af07:	jne    0x14000af10
   14000af09:	mov    rax,QWORD PTR [rcx]
   14000af0c:	mov    r14d,DWORD PTR [rax+0x4]
   14000af10:	neg    DWORD PTR [rbp+0x70]
   14000af13:	mov    ecx,r14d
   14000af16:	mov    DWORD PTR [rsp+0x28],edi
   14000af1a:	sbb    edx,edx
   14000af1c:	mov    QWORD PTR [rsp+0x20],rdi
   14000af21:	and    edx,0x8
   14000af24:	inc    edx
   14000af26:	call   QWORD PTR [rip+0x3274]        # 0x14000e1a0
   14000af2c:	movsxd rsi,eax
   14000af2f:	test   eax,eax
   14000af31:	jne    0x14000af3a
   14000af33:	xor    eax,eax
   14000af35:	jmp    0x14000b007
   14000af3a:	jle    0x14000afa6
   14000af3c:	movabs rax,0x7ffffffffffffff0
   14000af46:	cmp    rsi,rax
   14000af49:	ja     0x14000afa6
   14000af4b:	lea    rcx,[rsi*2+0x10]
   14000af53:	cmp    rcx,0x400
   14000af5a:	ja     0x14000af8d
   14000af5c:	lea    rax,[rcx+0xf]
   14000af60:	cmp    rax,rcx
   14000af63:	ja     0x14000af6f
   14000af65:	movabs rax,0xffffffffffffff0
   14000af6f:	and    rax,0xfffffffffffffff0
   14000af73:	call   0x14000b470
   14000af78:	sub    rsp,rax
   14000af7b:	lea    rbx,[rsp+0x30]
   14000af80:	test   rbx,rbx
   14000af83:	je     0x14000af33
   14000af85:	mov    DWORD PTR [rbx],0xcccc
   14000af8b:	jmp    0x14000afa0
   14000af8d:	call   0x1400039e8
   14000af92:	mov    rbx,rax
   14000af95:	test   rax,rax
   14000af98:	je     0x14000afa9
   14000af9a:	mov    DWORD PTR [rax],0xdddd
   14000afa0:	add    rbx,0x10
   14000afa4:	jmp    0x14000afa9
   14000afa6:	mov    rbx,rdi
   14000afa9:	test   rbx,rbx
   14000afac:	je     0x14000af33
   14000afae:	mov    r8,rsi
   14000afb1:	xor    edx,edx
   14000afb3:	mov    rcx,rbx
   14000afb6:	add    r8,r8
   14000afb9:	call   0x140006bd0
   14000afbe:	mov    r9d,r15d
   14000afc1:	mov    r8,r12
   14000afc4:	mov    edx,0x1
   14000afc9:	mov    ecx,r14d
   14000afcc:	mov    DWORD PTR [rsp+0x28],esi
   14000afd0:	mov    QWORD PTR [rsp+0x20],rbx
   14000afd5:	call   QWORD PTR [rip+0x31c5]        # 0x14000e1a0
   14000afdb:	test   eax,eax
   14000afdd:	je     0x14000aff4
   14000afdf:	mov    r9,QWORD PTR [rbp+0x60]
   14000afe3:	mov    r8d,eax
   14000afe6:	mov    rdx,rbx
   14000afe9:	mov    ecx,r13d
   14000afec:	call   QWORD PTR [rip+0x315e]        # 0x14000e150
   14000aff2:	mov    edi,eax
   14000aff4:	lea    rcx,[rbx-0x10]
   14000aff8:	cmp    DWORD PTR [rcx],0xdddd
   14000affe:	jne    0x14000b005
   14000b000:	call   0x140003aa4
   14000b005:	mov    eax,edi
   14000b007:	mov    rcx,QWORD PTR [rbp+0x0]
   14000b00b:	xor    rcx,rbp
   14000b00e:	call   0x140003950
   14000b013:	mov    rbx,QWORD PTR [rbp+0x40]
   14000b017:	mov    rsi,QWORD PTR [rbp+0x48]
   14000b01b:	mov    rdi,QWORD PTR [rbp+0x50]
   14000b01f:	lea    rsp,[rbp+0x10]
   14000b023:	pop    r15
   14000b025:	pop    r14
   14000b027:	pop    r13
   14000b029:	pop    r12
   14000b02b:	pop    rbp
   14000b02c:	ret    
   14000b02d:	int3   
   14000b02e:	int3   
   14000b02f:	int3   
   14000b030:	int3   
   14000b031:	int3   
   14000b032:	int3   
   14000b033:	int3   
   14000b034:	mov    QWORD PTR [rsp+0x8],rbx
   14000b039:	mov    QWORD PTR [rsp+0x10],rsi
   14000b03e:	push   rdi
   14000b03f:	sub    rsp,0x60
   14000b043:	mov    esi,edx
   14000b045:	mov    rdx,rcx
   14000b048:	lea    rcx,[rsp+0x40]
   14000b04d:	mov    ebx,r9d
   14000b050:	mov    rdi,r8
   14000b053:	call   0x140007898
   14000b058:	mov    eax,DWORD PTR [rsp+0xa0]
   14000b05f:	lea    rcx,[rsp+0x40]
   14000b064:	mov    r9d,ebx
   14000b067:	mov    DWORD PTR [rsp+0x30],eax
   14000b06b:	mov    eax,DWORD PTR [rsp+0x98]
   14000b072:	mov    r8,rdi
   14000b075:	mov    DWORD PTR [rsp+0x28],eax
   14000b079:	mov    rax,QWORD PTR [rsp+0x90]
   14000b081:	mov    edx,esi
   14000b083:	mov    QWORD PTR [rsp+0x20],rax
   14000b088:	call   0x14000aec8
   14000b08d:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b092:	je     0x14000b0a0
   14000b094:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b099:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b0a0:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b0a5:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b0aa:	add    rsp,0x60
   14000b0ae:	pop    rdi
   14000b0af:	ret    
   14000b0b0:	int3   
   14000b0b1:	int3   
   14000b0b2:	int3   
   14000b0b3:	int3   
   14000b0b4:	int3   
   14000b0b5:	int3   
   14000b0b6:	int3   
   14000b0b7:	int3   
   14000b0b8:	mov    ecx,0x2
   14000b0bd:	jmp    0x1400044e4
   14000b0c2:	int3   
   14000b0c3:	int3   
   14000b0c4:	int3   
   14000b0c5:	int3   
   14000b0c6:	int3   
   14000b0c7:	int3   
   14000b0c8:	sub    rsp,0x28
   14000b0cc:	test   rcx,rcx
   14000b0cf:	jne    0x14000b0e6
   14000b0d1:	call   0x140006370
   14000b0d6:	mov    DWORD PTR [rax],0x16
   14000b0dc:	call   0x140006658
   14000b0e1:	or     eax,0xffffffff
   14000b0e4:	jmp    0x14000b0e9
   14000b0e6:	mov    eax,DWORD PTR [rcx+0x1c]
   14000b0e9:	add    rsp,0x28
   14000b0ed:	ret    
   14000b0ee:	int3   
   14000b0ef:	int3   
   14000b0f0:	int3   
   14000b0f1:	int3   
   14000b0f2:	int3   
   14000b0f3:	int3   
   14000b0f4:	rex push rbx
   14000b0f6:	sub    rsp,0x20
   14000b0fa:	movsxd rbx,ecx
   14000b0fd:	cmp    ebx,0xfffffffe
   14000b100:	jne    0x14000b10f
   14000b102:	call   0x140006370
   14000b107:	mov    DWORD PTR [rax],0x9
   14000b10d:	jmp    0x14000b15f
   14000b10f:	call   0x140004bc0
   14000b114:	test   eax,eax
   14000b116:	jns    0x14000b11d
   14000b118:	or     eax,0xffffffff
   14000b11b:	jmp    0x14000b161
   14000b11d:	test   ebx,ebx
   14000b11f:	js     0x14000b14f
   14000b121:	cmp    ebx,DWORD PTR [rip+0xb5b9]        # 0x1400166e0
   14000b127:	jae    0x14000b14f
   14000b129:	mov    rcx,rbx
   14000b12c:	mov    rax,rbx
   14000b12f:	lea    rdx,[rip+0xb5ca]        # 0x140016700
   14000b136:	sar    rax,0x5
   14000b13a:	and    ecx,0x1f
   14000b13d:	mov    rax,QWORD PTR [rdx+rax*8]
   14000b141:	imul   rcx,rcx,0x58
   14000b145:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14000b14a:	and    eax,0x40
   14000b14d:	jmp    0x14000b161
   14000b14f:	call   0x140006370
   14000b154:	mov    DWORD PTR [rax],0x9
   14000b15a:	call   0x140006658
   14000b15f:	xor    eax,eax
   14000b161:	add    rsp,0x20
   14000b165:	pop    rbx
   14000b166:	ret    
   14000b167:	int3   
   14000b168:	int3   
   14000b169:	int3   
   14000b16a:	int3   
   14000b16b:	int3   
   14000b16c:	int3   
   14000b16d:	int3   
   14000b16e:	int3   
   14000b16f:	int3   
   14000b170:	rex push rbx
   14000b172:	sub    rsp,0x20
   14000b176:	mov    rbx,rcx
   14000b179:	test   rcx,rcx
   14000b17c:	jne    0x14000b188
   14000b17e:	add    rsp,0x20
   14000b182:	pop    rbx
   14000b183:	jmp    0x14000b254
   14000b188:	call   0x14000b1c4
   14000b18d:	test   eax,eax
   14000b18f:	je     0x14000b196
   14000b191:	or     eax,0xffffffff
   14000b194:	jmp    0x14000b1b6
   14000b196:	test   DWORD PTR [rbx+0x18],0x4000
   14000b19d:	je     0x14000b1b4
   14000b19f:	mov    rcx,rbx
   14000b1a2:	call   0x14000b0c8
   14000b1a7:	mov    ecx,eax
   14000b1a9:	call   0x14000b514
   14000b1ae:	neg    eax
   14000b1b0:	sbb    eax,eax
   14000b1b2:	jmp    0x14000b1b6
   14000b1b4:	xor    eax,eax
   14000b1b6:	add    rsp,0x20
   14000b1ba:	pop    rbx
   14000b1bb:	ret    
   14000b1bc:	int3   
   14000b1bd:	int3   
   14000b1be:	int3   
   14000b1bf:	int3   
   14000b1c0:	int3   
   14000b1c1:	int3   
   14000b1c2:	int3   
   14000b1c3:	int3   
   14000b1c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1c9:	mov    QWORD PTR [rsp+0x10],rsi
   14000b1ce:	push   rdi
   14000b1cf:	sub    rsp,0x20
   14000b1d3:	mov    eax,DWORD PTR [rcx+0x18]
   14000b1d6:	xor    esi,esi
   14000b1d8:	mov    rbx,rcx
   14000b1db:	and    al,0x3
   14000b1dd:	cmp    al,0x2
   14000b1df:	jne    0x14000b220
   14000b1e1:	test   DWORD PTR [rcx+0x18],0x108
   14000b1e8:	je     0x14000b220
   14000b1ea:	mov    edi,DWORD PTR [rcx]
   14000b1ec:	sub    edi,DWORD PTR [rcx+0x10]
   14000b1ef:	test   edi,edi
   14000b1f1:	jle    0x14000b220
   14000b1f3:	call   0x14000b0c8
   14000b1f8:	mov    rdx,QWORD PTR [rbx+0x10]
   14000b1fc:	mov    r8d,edi
   14000b1ff:	mov    ecx,eax
   14000b201:	call   0x14000b604
   14000b206:	cmp    eax,edi
   14000b208:	jne    0x14000b219
   14000b20a:	mov    eax,DWORD PTR [rbx+0x18]
   14000b20d:	test   al,al
   14000b20f:	jns    0x14000b220
   14000b211:	and    eax,0xfffffffd
   14000b214:	mov    DWORD PTR [rbx+0x18],eax
   14000b217:	jmp    0x14000b220
   14000b219:	or     DWORD PTR [rbx+0x18],0x20
   14000b21d:	or     esi,0xffffffff
   14000b220:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b224:	and    DWORD PTR [rbx+0x8],0x0
   14000b228:	mov    eax,esi
   14000b22a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b22f:	mov    QWORD PTR [rbx],rcx
   14000b232:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b237:	add    rsp,0x20
   14000b23b:	pop    rdi
   14000b23c:	ret    
   14000b23d:	int3   
   14000b23e:	int3   
   14000b23f:	int3   
   14000b240:	int3   
   14000b241:	int3   
   14000b242:	int3   
   14000b243:	int3   
   14000b244:	mov    ecx,0x1
   14000b249:	jmp    0x14000b254
   14000b24e:	int3   
   14000b24f:	int3   
   14000b250:	int3   
   14000b251:	int3   
   14000b252:	int3   
   14000b253:	int3   
   14000b254:	mov    QWORD PTR [rsp+0x8],rbx
   14000b259:	mov    QWORD PTR [rsp+0x10],rsi
   14000b25e:	mov    QWORD PTR [rsp+0x18],rdi
   14000b263:	push   r13
   14000b265:	push   r14
   14000b267:	push   r15
   14000b269:	sub    rsp,0x30
   14000b26d:	mov    r14d,ecx
   14000b270:	xor    esi,esi
   14000b272:	xor    edi,edi
   14000b274:	lea    ecx,[rsi+0x1]
   14000b277:	call   0x140007280
   14000b27c:	nop
   14000b27d:	xor    ebx,ebx
   14000b27f:	or     r13d,0xffffffff
   14000b283:	mov    DWORD PTR [rsp+0x20],ebx
   14000b287:	cmp    ebx,DWORD PTR [rip+0xa44b]        # 0x1400156d8
   14000b28d:	jge    0x14000b30d
   14000b28f:	movsxd r15,ebx
   14000b292:	mov    rax,QWORD PTR [rip+0xa437]        # 0x1400156d0
   14000b299:	mov    rdx,QWORD PTR [rax+r15*8]
   14000b29d:	test   rdx,rdx
   14000b2a0:	je     0x14000b306
   14000b2a2:	test   BYTE PTR [rdx+0x18],0x83
   14000b2a6:	je     0x14000b306
   14000b2a8:	mov    ecx,ebx
   14000b2aa:	call   0x140008d2c
   14000b2af:	nop
   14000b2b0:	mov    rax,QWORD PTR [rip+0xa419]        # 0x1400156d0
   14000b2b7:	mov    rcx,QWORD PTR [rax+r15*8]
   14000b2bb:	test   BYTE PTR [rcx+0x18],0x83
   14000b2bf:	je     0x14000b2f4
   14000b2c1:	cmp    r14d,0x1
   14000b2c5:	jne    0x14000b2d9
   14000b2c7:	call   0x14000b170
   14000b2cc:	cmp    eax,r13d
   14000b2cf:	je     0x14000b2f4
   14000b2d1:	inc    esi
   14000b2d3:	mov    DWORD PTR [rsp+0x24],esi
   14000b2d7:	jmp    0x14000b2f4
   14000b2d9:	test   r14d,r14d
   14000b2dc:	jne    0x14000b2f4
   14000b2de:	test   BYTE PTR [rcx+0x18],0x2
   14000b2e2:	je     0x14000b2f4
   14000b2e4:	call   0x14000b170
   14000b2e9:	cmp    eax,r13d
   14000b2ec:	cmove  edi,r13d
   14000b2f0:	mov    DWORD PTR [rsp+0x28],edi
   14000b2f4:	mov    rdx,QWORD PTR [rip+0xa3d5]        # 0x1400156d0
   14000b2fb:	mov    rdx,QWORD PTR [rdx+r15*8]
   14000b2ff:	mov    ecx,ebx
   14000b301:	call   0x140008db8
   14000b306:	inc    ebx
   14000b308:	jmp    0x14000b283
   14000b30d:	mov    ecx,0x1
   14000b312:	call   0x140007488
   14000b317:	cmp    r14d,0x1
   14000b31b:	cmove  edi,esi
   14000b31e:	mov    eax,edi
   14000b320:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b325:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b32a:	mov    rdi,QWORD PTR [rsp+0x60]
   14000b32f:	add    rsp,0x30
   14000b333:	pop    r15
   14000b335:	pop    r14
   14000b337:	pop    r13
   14000b339:	ret    
   14000b33a:	int3   
   14000b33b:	int3   
   14000b33c:	int3   
   14000b33d:	int3   
   14000b33e:	int3   
   14000b33f:	int3   
   14000b340:	mov    QWORD PTR [rsp+0x8],rbx
   14000b345:	mov    QWORD PTR [rsp+0x10],rsi
   14000b34a:	push   rdi
   14000b34b:	sub    rsp,0x30
   14000b34f:	xor    edi,edi
   14000b351:	lea    ecx,[rdi+0x1]
   14000b354:	call   0x140007280
   14000b359:	nop
   14000b35a:	lea    ebx,[rdi+0x3]
   14000b35d:	mov    DWORD PTR [rsp+0x20],ebx
   14000b361:	cmp    ebx,DWORD PTR [rip+0xa371]        # 0x1400156d8
   14000b367:	jge    0x14000b3cc
   14000b369:	movsxd rsi,ebx
   14000b36c:	mov    rax,QWORD PTR [rip+0xa35d]        # 0x1400156d0
   14000b373:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000b377:	test   rcx,rcx
   14000b37a:	je     0x14000b3c8
   14000b37c:	test   BYTE PTR [rcx+0x18],0x83
   14000b380:	je     0x14000b392
   14000b382:	call   0x14000bef4
   14000b387:	cmp    eax,0xffffffff
   14000b38a:	je     0x14000b392
   14000b38c:	inc    edi
   14000b38e:	mov    DWORD PTR [rsp+0x24],edi
   14000b392:	cmp    ebx,0x14
   14000b395:	jl     0x14000b3c8
   14000b397:	mov    rax,QWORD PTR [rip+0xa332]        # 0x1400156d0
   14000b39e:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000b3a2:	add    rcx,0x30
   14000b3a6:	call   QWORD PTR [rip+0x2d04]        # 0x14000e0b0
   14000b3ac:	mov    rcx,QWORD PTR [rip+0xa31d]        # 0x1400156d0
   14000b3b3:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14000b3b7:	call   0x140003aa4
   14000b3bc:	mov    rax,QWORD PTR [rip+0xa30d]        # 0x1400156d0
   14000b3c3:	and    QWORD PTR [rax+rsi*8],0x0
   14000b3c8:	inc    ebx
   14000b3ca:	jmp    0x14000b35d
   14000b3cc:	mov    ecx,0x1
   14000b3d1:	call   0x140007488
   14000b3d6:	mov    eax,edi
   14000b3d8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b3dd:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b3e2:	add    rsp,0x30
   14000b3e6:	pop    rdi
   14000b3e7:	ret    
   14000b3e8:	int3   
   14000b3e9:	int3   
   14000b3ea:	int3   
   14000b3eb:	int3   
   14000b3ec:	int3   
   14000b3ed:	int3   
   14000b3ee:	int3   
   14000b3ef:	int3   
   14000b3f0:	neg    rcx
   14000b3f3:	sbb    eax,eax
   14000b3f5:	and    eax,0x1
   14000b3f8:	ret    
   14000b3f9:	int3   
   14000b3fa:	int3   
   14000b3fb:	int3   
   14000b3fc:	int3   
   14000b3fd:	int3   
   14000b3fe:	int3   
   14000b3ff:	int3   
   14000b400:	int3   
   14000b401:	int3   
   14000b402:	int3   
   14000b403:	int3   
   14000b404:	int3   
   14000b405:	int3   
   14000b406:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b410:	sub    rsp,0x28
   14000b414:	mov    QWORD PTR [rsp+0x30],rcx
   14000b419:	mov    QWORD PTR [rsp+0x38],rdx
   14000b41e:	mov    DWORD PTR [rsp+0x40],r8d
   14000b423:	mov    rdx,QWORD PTR [rdx]
   14000b426:	mov    rax,rcx
   14000b429:	call   0x140008bb0
   14000b42e:	call   rax
   14000b430:	call   0x140008be0
   14000b435:	mov    rcx,rax
   14000b438:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b43d:	mov    rdx,QWORD PTR [rdx]
   14000b440:	mov    r8d,0x2
   14000b446:	call   0x140008bb0
   14000b44b:	add    rsp,0x28
   14000b44f:	ret    
   14000b450:	mov    rax,QWORD PTR [rsp]
   14000b454:	mov    QWORD PTR [rcx],rax
   14000b457:	ret    
   14000b458:	int3   
   14000b459:	int3   
   14000b45a:	int3   
   14000b45b:	int3   
   14000b45c:	int3   
   14000b45d:	int3   
   14000b45e:	int3   
   14000b45f:	int3   
   14000b460:	int3   
   14000b461:	int3   
   14000b462:	int3   
   14000b463:	int3   
   14000b464:	int3   
   14000b465:	int3   
   14000b466:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b470:	sub    rsp,0x10
   14000b474:	mov    QWORD PTR [rsp],r10
   14000b478:	mov    QWORD PTR [rsp+0x8],r11
   14000b47d:	xor    r11,r11
   14000b480:	lea    r10,[rsp+0x18]
   14000b485:	sub    r10,rax
   14000b488:	cmovb  r10,r11
   14000b48c:	mov    r11,QWORD PTR gs:0x10
   14000b495:	cmp    r10,r11
   14000b498:	jae    0x14000b4b0
   14000b49a:	and    r10w,0xf000
   14000b4a0:	lea    r11,[r11-0x1000]
   14000b4a7:	mov    BYTE PTR [r11],0x0
   14000b4ab:	cmp    r10,r11
   14000b4ae:	jne    0x14000b4a0
   14000b4b0:	mov    r10,QWORD PTR [rsp]
   14000b4b4:	mov    r11,QWORD PTR [rsp+0x8]
   14000b4b9:	add    rsp,0x10
   14000b4bd:	ret    
   14000b4be:	int3   
   14000b4bf:	int3   
   14000b4c0:	int3   
   14000b4c1:	int3   
   14000b4c2:	int3   
   14000b4c3:	int3   
   14000b4c4:	rex push rdi
   14000b4c6:	sub    rsp,0x20
   14000b4ca:	lea    rdi,[rip+0x82af]        # 0x140013780
   14000b4d1:	cmp    QWORD PTR [rip+0x8298],rdi        # 0x140013770
   14000b4d8:	je     0x14000b505
   14000b4da:	mov    ecx,0xc
   14000b4df:	call   0x140007280
   14000b4e4:	nop
   14000b4e5:	mov    rdx,rdi
   14000b4e8:	lea    rcx,[rip+0x8281]        # 0x140013770
   14000b4ef:	call   0x140007800
   14000b4f4:	mov    QWORD PTR [rip+0x8275],rax        # 0x140013770
   14000b4fb:	mov    ecx,0xc
   14000b500:	call   0x140007488
   14000b505:	add    rsp,0x20
   14000b509:	pop    rdi
   14000b50a:	ret    
   14000b50b:	int3   
   14000b50c:	int3   
   14000b50d:	int3   
   14000b50e:	int3   
   14000b50f:	int3   
   14000b510:	int3   
   14000b511:	int3   
   14000b512:	int3   
   14000b513:	int3   
   14000b514:	mov    QWORD PTR [rsp+0x18],rbx
   14000b519:	mov    DWORD PTR [rsp+0x8],ecx
   14000b51d:	push   rsi
   14000b51e:	push   rdi
   14000b51f:	push   r14
   14000b521:	sub    rsp,0x20
   14000b525:	movsxd rdi,ecx
   14000b528:	cmp    edi,0xfffffffe
   14000b52b:	jne    0x14000b53d
   14000b52d:	call   0x140006370
   14000b532:	mov    DWORD PTR [rax],0x9
   14000b538:	jmp    0x14000b5ed
   14000b53d:	call   0x140004bc0
   14000b542:	test   eax,eax
   14000b544:	jns    0x14000b550
   14000b546:	mov    eax,0x9
   14000b54b:	jmp    0x14000b5f0
   14000b550:	test   edi,edi
   14000b552:	js     0x14000b5dd
   14000b558:	cmp    edi,DWORD PTR [rip+0xb182]        # 0x1400166e0
   14000b55e:	jae    0x14000b5dd
   14000b560:	mov    rbx,rdi
   14000b563:	mov    rsi,rdi
   14000b566:	sar    rsi,0x5
   14000b56a:	lea    r14,[rip+0xb18f]        # 0x140016700
   14000b571:	and    ebx,0x1f
   14000b574:	imul   rbx,rbx,0x58
   14000b578:	mov    rax,QWORD PTR [r14+rsi*8]
   14000b57c:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000b581:	and    ecx,0x1
   14000b584:	je     0x14000b5dd
   14000b586:	mov    ecx,edi
   14000b588:	call   0x14000c040
   14000b58d:	nop
   14000b58e:	mov    rax,QWORD PTR [r14+rsi*8]
   14000b592:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000b597:	je     0x14000b5c4
   14000b599:	mov    ecx,edi
   14000b59b:	call   0x14000c18c
   14000b5a0:	mov    rcx,rax
   14000b5a3:	call   QWORD PTR [rip+0x2b9f]        # 0x14000e148
   14000b5a9:	test   eax,eax
   14000b5ab:	jne    0x14000b5b7
   14000b5ad:	call   QWORD PTR [rip+0x2aed]        # 0x14000e0a0
   14000b5b3:	mov    ebx,eax
   14000b5b5:	jmp    0x14000b5b9
   14000b5b7:	xor    ebx,ebx
   14000b5b9:	test   ebx,ebx
   14000b5bb:	je     0x14000b5d2
   14000b5bd:	call   0x1400062f4
   14000b5c2:	mov    DWORD PTR [rax],ebx
   14000b5c4:	call   0x140006370
   14000b5c9:	mov    DWORD PTR [rax],0x9
   14000b5cf:	or     ebx,0xffffffff
   14000b5d2:	mov    ecx,edi
   14000b5d4:	call   0x14000c218
   14000b5d9:	mov    eax,ebx
   14000b5db:	jmp    0x14000b5f0
   14000b5dd:	call   0x140006370
   14000b5e2:	mov    DWORD PTR [rax],0x9
   14000b5e8:	call   0x140006658
   14000b5ed:	or     eax,0xffffffff
   14000b5f0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b5f5:	add    rsp,0x20
   14000b5f9:	pop    r14
   14000b5fb:	pop    rdi
   14000b5fc:	pop    rsi
   14000b5fd:	ret    
   14000b5fe:	int3   
   14000b5ff:	int3   
   14000b600:	int3   
   14000b601:	int3   
   14000b602:	int3   
   14000b603:	int3   
   14000b604:	mov    QWORD PTR [rsp+0x10],rbx
   14000b609:	mov    DWORD PTR [rsp+0x8],ecx
   14000b60d:	push   rsi
   14000b60e:	push   rdi
   14000b60f:	push   r12
   14000b611:	push   r14
   14000b613:	push   r15
   14000b615:	sub    rsp,0x20
   14000b619:	mov    r14d,r8d
   14000b61c:	mov    r15,rdx
   14000b61f:	movsxd rdi,ecx
   14000b622:	cmp    edi,0xfffffffe
   14000b625:	jne    0x14000b63f
   14000b627:	call   0x1400062f4
   14000b62c:	and    DWORD PTR [rax],0x0
   14000b62f:	call   0x140006370
   14000b634:	mov    DWORD PTR [rax],0x9
   14000b63a:	jmp    0x14000b6db
   14000b63f:	call   0x140004bc0
   14000b644:	test   eax,eax
   14000b646:	js     0x14000b6db
   14000b64c:	test   edi,edi
   14000b64e:	js     0x14000b6c3
   14000b650:	cmp    edi,DWORD PTR [rip+0xb08a]        # 0x1400166e0
   14000b656:	jae    0x14000b6c3
   14000b658:	mov    rbx,rdi
   14000b65b:	mov    rsi,rdi
   14000b65e:	sar    rsi,0x5
   14000b662:	lea    r12,[rip+0xb097]        # 0x140016700
   14000b669:	and    ebx,0x1f
   14000b66c:	imul   rbx,rbx,0x58
   14000b670:	mov    rax,QWORD PTR [r12+rsi*8]
   14000b674:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14000b679:	and    ecx,0x1
   14000b67c:	je     0x14000b6c3
   14000b67e:	mov    ecx,edi
   14000b680:	call   0x14000c040
   14000b685:	nop
   14000b686:	mov    rax,QWORD PTR [r12+rsi*8]
   14000b68a:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14000b68f:	je     0x14000b6a2
   14000b691:	mov    r8d,r14d
   14000b694:	mov    rdx,r15
   14000b697:	mov    ecx,edi
   14000b699:	call   0x14000b6f8
   14000b69e:	mov    ebx,eax
   14000b6a0:	jmp    0x14000b6b8
   14000b6a2:	call   0x140006370
   14000b6a7:	mov    DWORD PTR [rax],0x9
   14000b6ad:	call   0x1400062f4
   14000b6b2:	and    DWORD PTR [rax],0x0
   14000b6b5:	or     ebx,0xffffffff
   14000b6b8:	mov    ecx,edi
   14000b6ba:	call   0x14000c218
   14000b6bf:	mov    eax,ebx
   14000b6c1:	jmp    0x14000b6de
   14000b6c3:	call   0x1400062f4
   14000b6c8:	and    DWORD PTR [rax],0x0
   14000b6cb:	call   0x140006370
   14000b6d0:	mov    DWORD PTR [rax],0x9
   14000b6d6:	call   0x140006658
   14000b6db:	or     eax,0xffffffff
   14000b6de:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b6e3:	add    rsp,0x20
   14000b6e7:	pop    r15
   14000b6e9:	pop    r14
   14000b6eb:	pop    r12
   14000b6ed:	pop    rdi
   14000b6ee:	pop    rsi
   14000b6ef:	ret    
   14000b6f0:	int3   
   14000b6f1:	int3   
   14000b6f2:	int3   
   14000b6f3:	int3   
   14000b6f4:	int3   
   14000b6f5:	int3   
   14000b6f6:	int3   
   14000b6f7:	int3   
   14000b6f8:	mov    QWORD PTR [rsp+0x20],rbx
   14000b6fd:	push   rbp
   14000b6fe:	push   rsi
   14000b6ff:	push   rdi
   14000b700:	push   r12
   14000b702:	push   r13
   14000b704:	push   r14
   14000b706:	push   r15
   14000b708:	lea    rbp,[rsp-0x1a30]
   14000b710:	mov    eax,0x1b30
   14000b715:	call   0x14000b470
   14000b71a:	sub    rsp,rax
   14000b71d:	mov    rax,QWORD PTR [rip+0x79ac]        # 0x1400130d0
   14000b724:	xor    rax,rsp
   14000b727:	mov    QWORD PTR [rbp+0x1a20],rax
   14000b72e:	xor    edi,edi
   14000b730:	mov    r15d,r8d
   14000b733:	mov    r14,rdx
   14000b736:	and    DWORD PTR [rsp+0x48],edi
   14000b73a:	movsxd rbx,ecx
   14000b73d:	test   r8d,r8d
   14000b740:	jne    0x14000b749
   14000b742:	xor    eax,eax
   14000b744:	jmp    0x14000be42
   14000b749:	test   rdx,rdx
   14000b74c:	jne    0x14000b76d
   14000b74e:	call   0x1400062f4
   14000b753:	and    DWORD PTR [rax],edi
   14000b755:	call   0x140006370
   14000b75a:	mov    DWORD PTR [rax],0x16
   14000b760:	call   0x140006658
   14000b765:	or     eax,0xffffffff
   14000b768:	jmp    0x14000be42
   14000b76d:	call   0x140004bc0
   14000b772:	test   eax,eax
   14000b774:	js     0x14000b765
   14000b776:	lea    eax,[rbx-0x1]
   14000b779:	cmp    eax,0x1
   14000b77c:	ja     0x14000b7a1
   14000b77e:	mov    rsi,rbx
   14000b781:	imul   rsi,rsi,0x58
   14000b785:	add    rsi,QWORD PTR [rip+0xaf74]        # 0x140016700
   14000b78c:	je     0x14000b7a1
   14000b78e:	lea    eax,[rbx-0x1]
   14000b791:	neg    eax
   14000b793:	sbb    ecx,ecx
   14000b795:	add    ecx,0xfffffff5
   14000b798:	call   QWORD PTR [rip+0x2a0a]        # 0x14000e1a8
   14000b79e:	mov    QWORD PTR [rsi],rax
   14000b7a1:	mov    r12,rbx
   14000b7a4:	lea    rax,[rip+0xaf55]        # 0x140016700
   14000b7ab:	mov    r13,rbx
   14000b7ae:	sar    r13,0x5
   14000b7b2:	and    r12d,0x1f
   14000b7b6:	mov    rcx,QWORD PTR [rax+r13*8]
   14000b7ba:	mov    QWORD PTR [rsp+0x50],r13
   14000b7bf:	imul   r12,r12,0x58
   14000b7c3:	mov    sil,BYTE PTR [r12+rcx*1+0x38]
   14000b7c8:	add    sil,sil
   14000b7cb:	sar    sil,1
   14000b7ce:	lea    eax,[rsi-0x1]
   14000b7d1:	cmp    al,0x1
   14000b7d3:	ja     0x14000b7e2
   14000b7d5:	mov    eax,r15d
   14000b7d8:	not    eax
   14000b7da:	test   al,0x1
   14000b7dc:	je     0x14000b74e
   14000b7e2:	test   BYTE PTR [r12+rcx*1+0x8],0x20
   14000b7e8:	je     0x14000b7f7
   14000b7ea:	xor    edx,edx
   14000b7ec:	mov    ecx,ebx
   14000b7ee:	lea    r8d,[rdx+0x2]
   14000b7f2:	call   0x14000c2e0
   14000b7f7:	mov    ecx,ebx
   14000b7f9:	call   0x14000b0f4
   14000b7fe:	test   eax,eax
   14000b800:	je     0x14000bac2
   14000b806:	lea    rax,[rip+0xaef3]        # 0x140016700
   14000b80d:	mov    rax,QWORD PTR [rax+r13*8]
   14000b811:	test   BYTE PTR [r12+rax*1+0x8],0x80
   14000b817:	je     0x14000bac2
   14000b81d:	call   0x140004258
   14000b822:	xor    ebx,ebx
   14000b824:	lea    rdx,[rsp+0x5c]
   14000b829:	mov    rcx,QWORD PTR [rax+0xc0]
   14000b830:	lea    rax,[rip+0xaec9]        # 0x140016700
   14000b837:	cmp    QWORD PTR [rcx+0x138],rbx
   14000b83e:	mov    rcx,QWORD PTR [rax+r13*8]
   14000b842:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000b846:	sete   bl
   14000b849:	call   QWORD PTR [rip+0x28e9]        # 0x14000e138
   14000b84f:	test   eax,eax
   14000b851:	je     0x14000bac2
   14000b857:	test   ebx,ebx
   14000b859:	je     0x14000b864
   14000b85b:	test   sil,sil
   14000b85e:	je     0x14000bac2
   14000b864:	call   QWORD PTR [rip+0x28d6]        # 0x14000e140
   14000b86a:	and    DWORD PTR [rsp+0x58],edi
   14000b86e:	mov    rbx,r14
   14000b871:	mov    DWORD PTR [rsp+0x5c],eax
   14000b875:	test   r15d,r15d
   14000b878:	je     0x14000bab9
   14000b87e:	test   sil,sil
   14000b881:	jne    0x14000ba0b
   14000b887:	mov    cl,BYTE PTR [rbx]
   14000b889:	xor    eax,eax
   14000b88b:	cmp    cl,0xa
   14000b88e:	sete   al
   14000b891:	mov    DWORD PTR [rsp+0x44],eax
   14000b895:	lea    rax,[rip+0xae64]        # 0x140016700
   14000b89c:	mov    rdx,QWORD PTR [rax+r13*8]
   14000b8a0:	cmp    DWORD PTR [r12+rdx*1+0x50],0x0
   14000b8a6:	je     0x14000b8c8
   14000b8a8:	mov    al,BYTE PTR [r12+rdx*1+0x4c]
   14000b8ad:	mov    BYTE PTR [rsp+0x61],cl
   14000b8b1:	mov    r8d,0x2
   14000b8b7:	mov    BYTE PTR [rsp+0x60],al
   14000b8bb:	and    DWORD PTR [r12+rdx*1+0x50],0x0
   14000b8c1:	lea    rdx,[rsp+0x60]
   14000b8c6:	jmp    0x14000b911
   14000b8c8:	movsx  ecx,cl
   14000b8cb:	call   0x14000c294
   14000b8d0:	test   eax,eax
   14000b8d2:	je     0x14000b908
   14000b8d4:	mov    rax,r15
   14000b8d7:	sub    rax,rbx
   14000b8da:	add    rax,r14
   14000b8dd:	cmp    rax,0x1
   14000b8e1:	jle    0x14000ba8f
   14000b8e7:	lea    rcx,[rsp+0x40]
   14000b8ec:	mov    r8d,0x2
   14000b8f2:	mov    rdx,rbx
   14000b8f5:	call   0x14000c4d4
   14000b8fa:	cmp    eax,0xffffffff
   14000b8fd:	je     0x14000bab0
   14000b903:	inc    rbx
   14000b906:	jmp    0x14000b924
   14000b908:	mov    r8d,0x1
   14000b90e:	mov    rdx,rbx
   14000b911:	lea    rcx,[rsp+0x40]
   14000b916:	call   0x14000c4d4
   14000b91b:	cmp    eax,0xffffffff
   14000b91e:	je     0x14000bab0
   14000b924:	and    QWORD PTR [rsp+0x38],0x0
   14000b92a:	and    QWORD PTR [rsp+0x30],0x0
   14000b930:	mov    ecx,DWORD PTR [rsp+0x5c]
   14000b934:	lea    rax,[rsp+0x60]
   14000b939:	lea    r8,[rsp+0x40]
   14000b93e:	mov    r9d,0x1
   14000b944:	xor    edx,edx
   14000b946:	mov    DWORD PTR [rsp+0x28],0x5
   14000b94e:	inc    rbx
   14000b951:	mov    QWORD PTR [rsp+0x20],rax
   14000b956:	call   QWORD PTR [rip+0x2974]        # 0x14000e2d0
   14000b95c:	mov    r13d,eax
   14000b95f:	test   eax,eax
   14000b961:	je     0x14000bab0
   14000b967:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b96c:	and    QWORD PTR [rsp+0x20],0x0
   14000b972:	lea    rax,[rip+0xad87]        # 0x140016700
   14000b979:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000b97d:	lea    r9,[rsp+0x58]
   14000b982:	lea    rdx,[rsp+0x60]
   14000b987:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000b98b:	mov    r8d,r13d
   14000b98e:	call   QWORD PTR [rip+0x281c]        # 0x14000e1b0
   14000b994:	test   eax,eax
   14000b996:	je     0x14000bdca
   14000b99c:	mov    edi,ebx
   14000b99e:	sub    edi,r14d
   14000b9a1:	add    edi,DWORD PTR [rsp+0x48]
   14000b9a5:	cmp    DWORD PTR [rsp+0x58],r13d
   14000b9aa:	jl     0x14000bab0
   14000b9b0:	cmp    DWORD PTR [rsp+0x44],0x0
   14000b9b5:	mov    r13,QWORD PTR [rsp+0x50]
   14000b9ba:	je     0x14000ba80
   14000b9c0:	and    QWORD PTR [rsp+0x20],0x0
   14000b9c6:	lea    rax,[rip+0xad33]        # 0x140016700
   14000b9cd:	mov    BYTE PTR [rsp+0x60],0xd
   14000b9d2:	mov    rcx,QWORD PTR [rax+r13*8]
   14000b9d6:	lea    r9,[rsp+0x58]
   14000b9db:	lea    rdx,[rsp+0x60]
   14000b9e0:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000b9e4:	mov    r8d,0x1
   14000b9ea:	call   QWORD PTR [rip+0x27c0]        # 0x14000e1b0
   14000b9f0:	test   eax,eax
   14000b9f2:	je     0x14000bdca
   14000b9f8:	cmp    DWORD PTR [rsp+0x58],0x1
   14000b9fd:	jl     0x14000bab0
   14000ba03:	inc    DWORD PTR [rsp+0x48]
   14000ba07:	inc    edi
   14000ba09:	jmp    0x14000ba80
   14000ba0b:	lea    eax,[rsi-0x1]
   14000ba0e:	cmp    al,0x1
   14000ba10:	ja     0x14000ba30
   14000ba12:	movzx  eax,WORD PTR [rbx]
   14000ba15:	xor    r13d,r13d
   14000ba18:	cmp    ax,0xa
   14000ba1c:	mov    WORD PTR [rsp+0x40],ax
   14000ba21:	sete   r13b
   14000ba25:	add    rbx,0x2
   14000ba29:	mov    DWORD PTR [rsp+0x44],r13d
   14000ba2e:	jmp    0x14000ba35
   14000ba30:	mov    r13d,DWORD PTR [rsp+0x44]
   14000ba35:	lea    eax,[rsi-0x1]
   14000ba38:	cmp    al,0x1
   14000ba3a:	ja     0x14000ba7b
   14000ba3c:	movzx  ecx,WORD PTR [rsp+0x40]
   14000ba41:	call   0x14000c4e4
   14000ba46:	cmp    ax,WORD PTR [rsp+0x40]
   14000ba4b:	jne    0x14000bdca
   14000ba51:	add    edi,0x2
   14000ba54:	test   r13d,r13d
   14000ba57:	je     0x14000ba7b
   14000ba59:	mov    eax,0xd
   14000ba5e:	mov    ecx,eax
   14000ba60:	mov    WORD PTR [rsp+0x40],ax
   14000ba65:	call   0x14000c4e4
   14000ba6a:	cmp    ax,WORD PTR [rsp+0x40]
   14000ba6f:	jne    0x14000bdca
   14000ba75:	inc    edi
   14000ba77:	inc    DWORD PTR [rsp+0x48]
   14000ba7b:	mov    r13,QWORD PTR [rsp+0x50]
   14000ba80:	mov    eax,ebx
   14000ba82:	sub    eax,r14d
   14000ba85:	cmp    eax,r15d
   14000ba88:	jae    0x14000bab0
   14000ba8a:	jmp    0x14000b87e
   14000ba8f:	mov    al,BYTE PTR [rbx]
   14000ba91:	lea    rdx,[rip+0xac68]        # 0x140016700
   14000ba98:	inc    edi
   14000ba9a:	mov    rcx,QWORD PTR [rdx+r13*8]
   14000ba9e:	mov    BYTE PTR [r12+rcx*1+0x4c],al
   14000baa3:	mov    rax,QWORD PTR [rdx+r13*8]
   14000baa7:	mov    DWORD PTR [r12+rax*1+0x50],0x1
   14000bab0:	mov    ebx,DWORD PTR [rsp+0x44]
   14000bab4:	jmp    0x14000bdd2
   14000bab9:	mov    ebx,DWORD PTR [rsp+0x44]
   14000babd:	jmp    0x14000bdd6
   14000bac2:	lea    rax,[rip+0xac37]        # 0x140016700
   14000bac9:	mov    rcx,QWORD PTR [rax+r13*8]
   14000bacd:	test   BYTE PTR [r12+rcx*1+0x8],0x80
   14000bad3:	je     0x14000bda4
   14000bad9:	xor    ebx,ebx
   14000badb:	mov    r13,r14
   14000bade:	mov    DWORD PTR [rsp+0x44],ebx
   14000bae2:	test   sil,sil
   14000bae5:	jne    0x14000bbb3
   14000baeb:	test   r15d,r15d
   14000baee:	je     0x14000be02
   14000baf4:	lea    edx,[rbx+0xd]
   14000baf7:	mov    ebx,DWORD PTR [rsp+0x48]
   14000bafb:	lea    rsi,[rbp+0x620]
   14000bb02:	xor    ecx,ecx
   14000bb04:	mov    eax,r13d
   14000bb07:	sub    eax,r14d
   14000bb0a:	cmp    eax,r15d
   14000bb0d:	jae    0x14000bb35
   14000bb0f:	mov    al,BYTE PTR [r13+0x0]
   14000bb13:	inc    r13
   14000bb16:	cmp    al,0xa
   14000bb18:	jne    0x14000bb24
   14000bb1a:	mov    BYTE PTR [rsi],dl
   14000bb1c:	inc    ebx
   14000bb1e:	inc    rsi
   14000bb21:	inc    rcx
   14000bb24:	inc    rcx
   14000bb27:	mov    BYTE PTR [rsi],al
   14000bb29:	inc    rsi
   14000bb2c:	cmp    rcx,0x13ff
   14000bb33:	jb     0x14000bb04
   14000bb35:	and    QWORD PTR [rsp+0x20],0x0
   14000bb3b:	lea    rax,[rbp+0x620]
   14000bb42:	mov    r8d,esi
   14000bb45:	sub    r8d,eax
   14000bb48:	mov    rax,QWORD PTR [rsp+0x50]
   14000bb4d:	lea    rcx,[rip+0xabac]        # 0x140016700
   14000bb54:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000bb58:	lea    r9,[rsp+0x4c]
   14000bb5d:	lea    rdx,[rbp+0x620]
   14000bb64:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000bb68:	mov    DWORD PTR [rsp+0x48],ebx
   14000bb6c:	call   QWORD PTR [rip+0x263e]        # 0x14000e1b0
   14000bb72:	mov    ebx,DWORD PTR [rsp+0x44]
   14000bb76:	test   eax,eax
   14000bb78:	je     0x14000bdca
   14000bb7e:	add    edi,DWORD PTR [rsp+0x4c]
   14000bb82:	lea    rax,[rbp+0x620]
   14000bb89:	sub    rsi,rax
   14000bb8c:	movsxd rax,DWORD PTR [rsp+0x4c]
   14000bb91:	cmp    rax,rsi
   14000bb94:	jl     0x14000bdd2
   14000bb9a:	mov    eax,r13d
   14000bb9d:	mov    edx,0xd
   14000bba2:	sub    eax,r14d
   14000bba5:	cmp    eax,r15d
   14000bba8:	jb     0x14000baf7
   14000bbae:	jmp    0x14000bdd2
   14000bbb3:	cmp    sil,0x2
   14000bbb7:	jne    0x14000bc92
   14000bbbd:	test   r15d,r15d
   14000bbc0:	je     0x14000be02
   14000bbc6:	mov    edx,0xd
   14000bbcb:	mov    ebx,DWORD PTR [rsp+0x48]
   14000bbcf:	lea    rsi,[rbp+0x620]
   14000bbd6:	xor    ecx,ecx
   14000bbd8:	mov    eax,r13d
   14000bbdb:	sub    eax,r14d
   14000bbde:	cmp    eax,r15d
   14000bbe1:	jae    0x14000bc14
   14000bbe3:	movzx  eax,WORD PTR [r13+0x0]
   14000bbe8:	add    r13,0x2
   14000bbec:	cmp    ax,0xa
   14000bbf0:	jne    0x14000bc00
   14000bbf2:	mov    WORD PTR [rsi],dx
   14000bbf5:	add    ebx,0x2
   14000bbf8:	add    rsi,0x2
   14000bbfc:	add    rcx,0x2
   14000bc00:	add    rcx,0x2
   14000bc04:	mov    WORD PTR [rsi],ax
   14000bc07:	add    rsi,0x2
   14000bc0b:	cmp    rcx,0x13fe
   14000bc12:	jb     0x14000bbd8
   14000bc14:	and    QWORD PTR [rsp+0x20],0x0
   14000bc1a:	lea    rax,[rbp+0x620]
   14000bc21:	mov    r8d,esi
   14000bc24:	sub    r8d,eax
   14000bc27:	mov    rax,QWORD PTR [rsp+0x50]
   14000bc2c:	lea    rcx,[rip+0xaacd]        # 0x140016700
   14000bc33:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000bc37:	lea    r9,[rsp+0x4c]
   14000bc3c:	lea    rdx,[rbp+0x620]
   14000bc43:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000bc47:	mov    DWORD PTR [rsp+0x48],ebx
   14000bc4b:	call   QWORD PTR [rip+0x255f]        # 0x14000e1b0
   14000bc51:	mov    ebx,DWORD PTR [rsp+0x44]
   14000bc55:	test   eax,eax
   14000bc57:	je     0x14000bdca
   14000bc5d:	add    edi,DWORD PTR [rsp+0x4c]
   14000bc61:	lea    rax,[rbp+0x620]
   14000bc68:	sub    rsi,rax
   14000bc6b:	movsxd rax,DWORD PTR [rsp+0x4c]
   14000bc70:	cmp    rax,rsi
   14000bc73:	jl     0x14000bdd2
   14000bc79:	mov    eax,r13d
   14000bc7c:	mov    edx,0xd
   14000bc81:	sub    eax,r14d
   14000bc84:	cmp    eax,r15d
   14000bc87:	jb     0x14000bbcb
   14000bc8d:	jmp    0x14000bdd2
   14000bc92:	test   r15d,r15d
   14000bc95:	je     0x14000be02
   14000bc9b:	mov    r8d,0xd
   14000bca1:	lea    rcx,[rsp+0x70]
   14000bca6:	xor    edx,edx
   14000bca8:	mov    eax,r13d
   14000bcab:	sub    eax,r14d
   14000bcae:	cmp    eax,r15d
   14000bcb1:	jae    0x14000bce2
   14000bcb3:	movzx  eax,WORD PTR [r13+0x0]
   14000bcb8:	add    r13,0x2
   14000bcbc:	cmp    ax,0xa
   14000bcc0:	jne    0x14000bcce
   14000bcc2:	mov    WORD PTR [rcx],r8w
   14000bcc6:	add    rcx,0x2
   14000bcca:	add    rdx,0x2
   14000bcce:	add    rdx,0x2
   14000bcd2:	mov    WORD PTR [rcx],ax
   14000bcd5:	add    rcx,0x2
   14000bcd9:	cmp    rdx,0x6a8
   14000bce0:	jb     0x14000bca8
   14000bce2:	and    QWORD PTR [rsp+0x38],0x0
   14000bce8:	and    QWORD PTR [rsp+0x30],0x0
   14000bcee:	lea    rax,[rsp+0x70]
   14000bcf3:	sub    ecx,eax
   14000bcf5:	lea    r8,[rsp+0x70]
   14000bcfa:	mov    DWORD PTR [rsp+0x28],0xd55
   14000bd02:	mov    eax,ecx
   14000bd04:	mov    ecx,0xfde9
   14000bd09:	cdq    
   14000bd0a:	sub    eax,edx
   14000bd0c:	xor    edx,edx
   14000bd0e:	sar    eax,1
   14000bd10:	mov    r9d,eax
   14000bd13:	lea    rax,[rbp+0x620]
   14000bd1a:	mov    QWORD PTR [rsp+0x20],rax
   14000bd1f:	call   QWORD PTR [rip+0x25ab]        # 0x14000e2d0
   14000bd25:	mov    DWORD PTR [rsp+0x44],eax
   14000bd29:	test   eax,eax
   14000bd2b:	je     0x14000bdca
   14000bd31:	xor    esi,esi
   14000bd33:	and    QWORD PTR [rsp+0x20],0x0
   14000bd39:	mov    r8d,eax
   14000bd3c:	mov    rax,QWORD PTR [rsp+0x50]
   14000bd41:	movsxd rcx,esi
   14000bd44:	lea    rdx,[rbp+0x620]
   14000bd4b:	lea    r9,[rsp+0x4c]
   14000bd50:	add    rdx,rcx
   14000bd53:	lea    rcx,[rip+0xa9a6]        # 0x140016700
   14000bd5a:	sub    r8d,esi
   14000bd5d:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000bd61:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000bd65:	call   QWORD PTR [rip+0x2445]        # 0x14000e1b0
   14000bd6b:	test   eax,eax
   14000bd6d:	je     0x14000bd7d
   14000bd6f:	add    esi,DWORD PTR [rsp+0x4c]
   14000bd73:	mov    eax,DWORD PTR [rsp+0x44]
   14000bd77:	cmp    eax,esi
   14000bd79:	jg     0x14000bd33
   14000bd7b:	jmp    0x14000bd89
   14000bd7d:	call   QWORD PTR [rip+0x231d]        # 0x14000e0a0
   14000bd83:	mov    ebx,eax
   14000bd85:	mov    eax,DWORD PTR [rsp+0x44]
   14000bd89:	cmp    eax,esi
   14000bd8b:	jg     0x14000bdd2
   14000bd8d:	mov    edi,r13d
   14000bd90:	mov    r8d,0xd
   14000bd96:	sub    edi,r14d
   14000bd99:	cmp    edi,r15d
   14000bd9c:	jb     0x14000bca1
   14000bda2:	jmp    0x14000bdd2
   14000bda4:	mov    rcx,QWORD PTR [r12+rcx*1]
   14000bda8:	and    QWORD PTR [rsp+0x20],rdi
   14000bdad:	lea    r9,[rsp+0x4c]
   14000bdb2:	mov    r8d,r15d
   14000bdb5:	mov    rdx,r14
   14000bdb8:	call   QWORD PTR [rip+0x23f2]        # 0x14000e1b0
   14000bdbe:	test   eax,eax
   14000bdc0:	je     0x14000bdca
   14000bdc2:	mov    edi,DWORD PTR [rsp+0x4c]
   14000bdc6:	xor    ebx,ebx
   14000bdc8:	jmp    0x14000bdd2
   14000bdca:	call   QWORD PTR [rip+0x22d0]        # 0x14000e0a0
   14000bdd0:	mov    ebx,eax
   14000bdd2:	test   edi,edi
   14000bdd4:	jne    0x14000be3c
   14000bdd6:	test   ebx,ebx
   14000bdd8:	je     0x14000be02
   14000bdda:	cmp    ebx,0x5
   14000bddd:	jne    0x14000bdf6
   14000bddf:	call   0x140006370
   14000bde4:	mov    DWORD PTR [rax],0x9
   14000bdea:	call   0x1400062f4
   14000bdef:	mov    DWORD PTR [rax],ebx
   14000bdf1:	jmp    0x14000b765
   14000bdf6:	mov    ecx,ebx
   14000bdf8:	call   0x14000631c
   14000bdfd:	jmp    0x14000b765
   14000be02:	mov    rax,QWORD PTR [rsp+0x50]
   14000be07:	lea    rcx,[rip+0xa8f2]        # 0x140016700
   14000be0e:	mov    rax,QWORD PTR [rcx+rax*8]
   14000be12:	test   BYTE PTR [r12+rax*1+0x8],0x40
   14000be18:	je     0x14000be24
   14000be1a:	cmp    BYTE PTR [r14],0x1a
   14000be1e:	je     0x14000b742
   14000be24:	call   0x140006370
   14000be29:	mov    DWORD PTR [rax],0x1c
   14000be2f:	call   0x1400062f4
   14000be34:	and    DWORD PTR [rax],0x0
   14000be37:	jmp    0x14000b765
   14000be3c:	sub    edi,DWORD PTR [rsp+0x48]
   14000be40:	mov    eax,edi
   14000be42:	mov    rcx,QWORD PTR [rbp+0x1a20]
   14000be49:	xor    rcx,rsp
   14000be4c:	call   0x140003950
   14000be51:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14000be59:	add    rsp,0x1b30
   14000be60:	pop    r15
   14000be62:	pop    r14
   14000be64:	pop    r13
   14000be66:	pop    r12
   14000be68:	pop    rdi
   14000be69:	pop    rsi
   14000be6a:	pop    rbp
   14000be6b:	ret    
   14000be6c:	int3   
   14000be6d:	int3   
   14000be6e:	int3   
   14000be6f:	int3   
   14000be70:	int3   
   14000be71:	int3   
   14000be72:	int3   
   14000be73:	int3   
   14000be74:	mov    QWORD PTR [rsp+0x8],rbx
   14000be79:	push   rdi
   14000be7a:	sub    rsp,0x20
   14000be7e:	or     edi,0xffffffff
   14000be81:	mov    rbx,rcx
   14000be84:	test   rcx,rcx
   14000be87:	jne    0x14000be9d
   14000be89:	call   0x140006370
   14000be8e:	mov    DWORD PTR [rax],0x16
   14000be94:	call   0x140006658
   14000be99:	or     eax,edi
   14000be9b:	jmp    0x14000bee3
   14000be9d:	test   BYTE PTR [rcx+0x18],0x83
   14000bea1:	je     0x14000bedd
   14000bea3:	call   0x14000b1c4
   14000bea8:	mov    rcx,rbx
   14000beab:	mov    edi,eax
   14000bead:	call   0x14000c6f0
   14000beb2:	mov    rcx,rbx
   14000beb5:	call   0x14000b0c8
   14000beba:	mov    ecx,eax
   14000bebc:	call   0x14000c544
   14000bec1:	test   eax,eax
   14000bec3:	jns    0x14000beca
   14000bec5:	or     edi,0xffffffff
   14000bec8:	jmp    0x14000bedd
   14000beca:	mov    rcx,QWORD PTR [rbx+0x28]
   14000bece:	test   rcx,rcx
   14000bed1:	je     0x14000bedd
   14000bed3:	call   0x140003aa4
   14000bed8:	and    QWORD PTR [rbx+0x28],0x0
   14000bedd:	and    DWORD PTR [rbx+0x18],0x0
   14000bee1:	mov    eax,edi
   14000bee3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bee8:	add    rsp,0x20
   14000beec:	pop    rdi
   14000beed:	ret    
   14000beee:	int3   
   14000beef:	int3   
   14000bef0:	int3   
   14000bef1:	int3   
   14000bef2:	int3   
   14000bef3:	int3   
   14000bef4:	mov    QWORD PTR [rsp+0x10],rbx
   14000bef9:	mov    QWORD PTR [rsp+0x8],rcx
   14000befe:	push   rdi
   14000beff:	sub    rsp,0x20
   14000bf03:	mov    rbx,rcx
   14000bf06:	or     edi,0xffffffff
   14000bf09:	xor    eax,eax
   14000bf0b:	test   rcx,rcx
   14000bf0e:	setne  al
   14000bf11:	test   eax,eax
   14000bf13:	jne    0x14000bf29
   14000bf15:	call   0x140006370
   14000bf1a:	mov    DWORD PTR [rax],0x16
   14000bf20:	call   0x140006658
   14000bf25:	mov    eax,edi
   14000bf27:	jmp    0x14000bf4f
   14000bf29:	test   BYTE PTR [rcx+0x18],0x40
   14000bf2d:	je     0x14000bf35
   14000bf2f:	and    DWORD PTR [rcx+0x18],0x0
   14000bf33:	jmp    0x14000bf25
   14000bf35:	call   0x140008cc0
   14000bf3a:	nop
   14000bf3b:	mov    rcx,rbx
   14000bf3e:	call   0x14000be74
   14000bf43:	mov    edi,eax
   14000bf45:	mov    rcx,rbx
   14000bf48:	call   0x140008d64
   14000bf4d:	jmp    0x14000bf25
   14000bf4f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bf54:	add    rsp,0x20
   14000bf58:	pop    rdi
   14000bf59:	ret    
   14000bf5a:	int3   
   14000bf5b:	int3   
   14000bf5c:	int3   
   14000bf5d:	int3   
   14000bf5e:	int3   
   14000bf5f:	int3   
   14000bf60:	int3   
   14000bf61:	int3   
   14000bf62:	int3   
   14000bf63:	int3   
   14000bf64:	int3   
   14000bf65:	int3   
   14000bf66:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bf70:	sub    rdx,rcx
   14000bf73:	cmp    r8,0x8
   14000bf77:	jb     0x14000bf9b
   14000bf79:	test   cl,0x7
   14000bf7c:	je     0x14000bf92
   14000bf7e:	xchg   ax,ax
   14000bf80:	mov    al,BYTE PTR [rcx]
   14000bf82:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000bf85:	jne    0x14000bfb3
   14000bf87:	inc    rcx
   14000bf8a:	dec    r8
   14000bf8d:	test   cl,0x7
   14000bf90:	jne    0x14000bf80
   14000bf92:	mov    r9,r8
   14000bf95:	shr    r9,0x3
   14000bf99:	jne    0x14000bfba
   14000bf9b:	test   r8,r8
   14000bf9e:	je     0x14000bfaf
   14000bfa0:	mov    al,BYTE PTR [rcx]
   14000bfa2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000bfa5:	jne    0x14000bfb3
   14000bfa7:	inc    rcx
   14000bfaa:	dec    r8
   14000bfad:	jne    0x14000bfa0
   14000bfaf:	xor    rax,rax
   14000bfb2:	ret    
   14000bfb3:	sbb    eax,eax
   14000bfb5:	sbb    eax,0xffffffff
   14000bfb8:	ret    
   14000bfb9:	nop
   14000bfba:	shr    r9,0x2
   14000bfbe:	je     0x14000bff7
   14000bfc0:	mov    rax,QWORD PTR [rcx]
   14000bfc3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000bfc7:	jne    0x14000c024
   14000bfc9:	mov    rax,QWORD PTR [rcx+0x8]
   14000bfcd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000bfd2:	jne    0x14000c020
   14000bfd4:	mov    rax,QWORD PTR [rcx+0x10]
   14000bfd8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000bfdd:	jne    0x14000c01c
   14000bfdf:	mov    rax,QWORD PTR [rcx+0x18]
   14000bfe3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000bfe8:	jne    0x14000c018
   14000bfea:	add    rcx,0x20
   14000bfee:	dec    r9
   14000bff1:	jne    0x14000bfc0
   14000bff3:	and    r8,0x1f
   14000bff7:	mov    r9,r8
   14000bffa:	shr    r9,0x3
   14000bffe:	je     0x14000bf9b
   14000c000:	mov    rax,QWORD PTR [rcx]
   14000c003:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c007:	jne    0x14000c024
   14000c009:	add    rcx,0x8
   14000c00d:	dec    r9
   14000c010:	jne    0x14000c000
   14000c012:	and    r8,0x7
   14000c016:	jmp    0x14000bf9b
   14000c018:	add    rcx,0x8
   14000c01c:	add    rcx,0x8
   14000c020:	add    rcx,0x8
   14000c024:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000c028:	bswap  rax
   14000c02b:	bswap  rcx
   14000c02e:	cmp    rax,rcx
   14000c031:	sbb    eax,eax
   14000c033:	sbb    eax,0xffffffff
   14000c036:	ret    
   14000c037:	int3   
   14000c038:	int3   
   14000c039:	int3   
   14000c03a:	int3   
   14000c03b:	int3   
   14000c03c:	int3   
   14000c03d:	int3   
   14000c03e:	int3   
   14000c03f:	int3   
   14000c040:	mov    QWORD PTR [rsp+0x8],rbx
   14000c045:	mov    QWORD PTR [rsp+0x10],rsi
   14000c04a:	mov    QWORD PTR [rsp+0x18],rdi
   14000c04f:	push   r15
   14000c051:	sub    rsp,0x20
   14000c055:	movsxd rbx,ecx
   14000c058:	mov    rsi,rbx
   14000c05b:	sar    rsi,0x5
   14000c05f:	lea    r15,[rip+0xa69a]        # 0x140016700
   14000c066:	and    ebx,0x1f
   14000c069:	imul   rbx,rbx,0x58
   14000c06d:	mov    rdi,QWORD PTR [r15+rsi*8]
   14000c071:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14000c076:	jne    0x14000c0aa
   14000c078:	mov    ecx,0xa
   14000c07d:	call   0x140007280
   14000c082:	nop
   14000c083:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14000c088:	jne    0x14000c0a0
   14000c08a:	lea    rcx,[rbx+0x10]
   14000c08e:	add    rcx,rdi
   14000c091:	mov    edx,0xfa0
   14000c096:	call   QWORD PTR [rip+0x200c]        # 0x14000e0a8
   14000c09c:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000c0a0:	mov    ecx,0xa
   14000c0a5:	call   0x140007488
   14000c0aa:	mov    rcx,QWORD PTR [r15+rsi*8]
   14000c0ae:	add    rcx,0x10
   14000c0b2:	add    rcx,rbx
   14000c0b5:	call   QWORD PTR [rip+0x21cd]        # 0x14000e288
   14000c0bb:	mov    eax,0x1
   14000c0c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0c5:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c0ca:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c0cf:	add    rsp,0x20
   14000c0d3:	pop    r15
   14000c0d5:	ret    
   14000c0d6:	int3   
   14000c0d7:	int3   
   14000c0d8:	int3   
   14000c0d9:	int3   
   14000c0da:	int3   
   14000c0db:	int3   
   14000c0dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0e1:	mov    QWORD PTR [rsp+0x10],rdi
   14000c0e6:	push   r14
   14000c0e8:	sub    rsp,0x20
   14000c0ec:	test   ecx,ecx
   14000c0ee:	js     0x14000c15f
   14000c0f0:	cmp    ecx,DWORD PTR [rip+0xa5ea]        # 0x1400166e0
   14000c0f6:	jae    0x14000c15f
   14000c0f8:	movsxd rbx,ecx
   14000c0fb:	lea    r14,[rip+0xa5fe]        # 0x140016700
   14000c102:	mov    rdi,rbx
   14000c105:	and    ebx,0x1f
   14000c108:	sar    rdi,0x5
   14000c10c:	imul   rbx,rbx,0x58
   14000c110:	mov    rax,QWORD PTR [r14+rdi*8]
   14000c114:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000c119:	je     0x14000c15f
   14000c11b:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000c120:	je     0x14000c15f
   14000c122:	cmp    DWORD PTR [rip+0x82e7],0x1        # 0x140014410
   14000c129:	jne    0x14000c152
   14000c12b:	test   ecx,ecx
   14000c12d:	je     0x14000c145
   14000c12f:	dec    ecx
   14000c131:	je     0x14000c13e
   14000c133:	dec    ecx
   14000c135:	jne    0x14000c152
   14000c137:	mov    ecx,0xfffffff4
   14000c13c:	jmp    0x14000c14a
   14000c13e:	mov    ecx,0xfffffff5
   14000c143:	jmp    0x14000c14a
   14000c145:	mov    ecx,0xfffffff6
   14000c14a:	xor    edx,edx
   14000c14c:	call   QWORD PTR [rip+0x1fde]        # 0x14000e130
   14000c152:	mov    rax,QWORD PTR [r14+rdi*8]
   14000c156:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000c15b:	xor    eax,eax
   14000c15d:	jmp    0x14000c175
   14000c15f:	call   0x140006370
   14000c164:	mov    DWORD PTR [rax],0x9
   14000c16a:	call   0x1400062f4
   14000c16f:	and    DWORD PTR [rax],0x0
   14000c172:	or     eax,0xffffffff
   14000c175:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c17a:	mov    rdi,QWORD PTR [rsp+0x38]
   14000c17f:	add    rsp,0x20
   14000c183:	pop    r14
   14000c185:	ret    
   14000c186:	int3   
   14000c187:	int3   
   14000c188:	int3   
   14000c189:	int3   
   14000c18a:	int3   
   14000c18b:	int3   
   14000c18c:	rex push rbx
   14000c18e:	sub    rsp,0x20
   14000c192:	movsxd rbx,ecx
   14000c195:	cmp    ebx,0xfffffffe
   14000c198:	jne    0x14000c1af
   14000c19a:	call   0x1400062f4
   14000c19f:	and    DWORD PTR [rax],0x0
   14000c1a2:	call   0x140006370
   14000c1a7:	mov    DWORD PTR [rax],0x9
   14000c1ad:	jmp    0x14000c205
   14000c1af:	call   0x140004bc0
   14000c1b4:	test   eax,eax
   14000c1b6:	js     0x14000c205
   14000c1b8:	test   ebx,ebx
   14000c1ba:	js     0x14000c1ed
   14000c1bc:	cmp    ebx,DWORD PTR [rip+0xa51e]        # 0x1400166e0
   14000c1c2:	jae    0x14000c1ed
   14000c1c4:	mov    rcx,rbx
   14000c1c7:	mov    rax,rbx
   14000c1ca:	lea    rdx,[rip+0xa52f]        # 0x140016700
   14000c1d1:	sar    rax,0x5
   14000c1d5:	and    ecx,0x1f
   14000c1d8:	mov    rax,QWORD PTR [rdx+rax*8]
   14000c1dc:	imul   rcx,rcx,0x58
   14000c1e0:	test   BYTE PTR [rax+rcx*1+0x8],0x1
   14000c1e5:	je     0x14000c1ed
   14000c1e7:	mov    rax,QWORD PTR [rax+rcx*1]
   14000c1eb:	jmp    0x14000c209
   14000c1ed:	call   0x1400062f4
   14000c1f2:	and    DWORD PTR [rax],0x0
   14000c1f5:	call   0x140006370
   14000c1fa:	mov    DWORD PTR [rax],0x9
   14000c200:	call   0x140006658
   14000c205:	or     rax,0xffffffffffffffff
   14000c209:	add    rsp,0x20
   14000c20d:	pop    rbx
   14000c20e:	ret    
   14000c20f:	int3   
   14000c210:	int3   
   14000c211:	int3   
   14000c212:	int3   
   14000c213:	int3   
   14000c214:	int3   
   14000c215:	int3   
   14000c216:	int3   
   14000c217:	int3   
   14000c218:	movsxd rdx,ecx
   14000c21b:	lea    rcx,[rip+0xa4de]        # 0x140016700
   14000c222:	mov    rax,rdx
   14000c225:	and    edx,0x1f
   14000c228:	sar    rax,0x5
   14000c22c:	imul   rdx,rdx,0x58
   14000c230:	mov    rax,QWORD PTR [rcx+rax*8]
   14000c234:	lea    rcx,[rdx+0x10]
   14000c238:	add    rcx,rax
   14000c23b:	rex.W jmp QWORD PTR [rip+0x204e]        # 0x14000e290
   14000c242:	int3   
   14000c243:	int3   
   14000c244:	int3   
   14000c245:	int3   
   14000c246:	int3   
   14000c247:	int3   
   14000c248:	rex push rbx
   14000c24a:	sub    rsp,0x40
   14000c24e:	mov    ebx,ecx
   14000c250:	lea    rcx,[rsp+0x20]
   14000c255:	call   0x140007898
   14000c25a:	mov    rax,QWORD PTR [rsp+0x20]
   14000c25f:	movzx  edx,bl
   14000c262:	mov    rcx,QWORD PTR [rax+0x108]
   14000c269:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000c26d:	and    eax,0x8000
   14000c272:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c277:	je     0x14000c285
   14000c279:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c27e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c285:	add    rsp,0x40
   14000c289:	pop    rbx
   14000c28a:	ret    
   14000c28b:	int3   
   14000c28c:	int3   
   14000c28d:	int3   
   14000c28e:	int3   
   14000c28f:	int3   
   14000c290:	int3   
   14000c291:	int3   
   14000c292:	int3   
   14000c293:	int3   
   14000c294:	rex push rbx
   14000c296:	sub    rsp,0x40
   14000c29a:	mov    ebx,ecx
   14000c29c:	lea    rcx,[rsp+0x20]
   14000c2a1:	xor    edx,edx
   14000c2a3:	call   0x140007898
   14000c2a8:	mov    rax,QWORD PTR [rsp+0x20]
   14000c2ad:	movzx  edx,bl
   14000c2b0:	mov    rcx,QWORD PTR [rax+0x108]
   14000c2b7:	movzx  eax,WORD PTR [rcx+rdx*2]
   14000c2bb:	and    eax,0x8000
   14000c2c0:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c2c5:	je     0x14000c2d3
   14000c2c7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c2cc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c2d3:	add    rsp,0x40
   14000c2d7:	pop    rbx
   14000c2d8:	ret    
   14000c2d9:	int3   
   14000c2da:	int3   
   14000c2db:	int3   
   14000c2dc:	int3   
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c2e5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c2ea:	push   rdi
   14000c2eb:	sub    rsp,0x20
   14000c2ef:	movsxd rbx,ecx
   14000c2f2:	mov    edi,r8d
   14000c2f5:	mov    rsi,rdx
   14000c2f8:	mov    ecx,ebx
   14000c2fa:	call   0x14000c18c
   14000c2ff:	cmp    rax,0xffffffffffffffff
   14000c303:	jne    0x14000c316
   14000c305:	call   0x140006370
   14000c30a:	mov    DWORD PTR [rax],0x9
   14000c310:	or     rax,0xffffffffffffffff
   14000c314:	jmp    0x14000c363
   14000c316:	lea    r8,[rsp+0x48]
   14000c31b:	mov    r9d,edi
   14000c31e:	mov    rdx,rsi
   14000c321:	mov    rcx,rax
   14000c324:	call   QWORD PTR [rip+0x1dfe]        # 0x14000e128
   14000c32a:	test   eax,eax
   14000c32c:	jne    0x14000c33d
   14000c32e:	call   QWORD PTR [rip+0x1d6c]        # 0x14000e0a0
   14000c334:	mov    ecx,eax
   14000c336:	call   0x14000631c
   14000c33b:	jmp    0x14000c310
   14000c33d:	mov    rcx,rbx
   14000c340:	mov    rax,rbx
   14000c343:	lea    rdx,[rip+0xa3b6]        # 0x140016700
   14000c34a:	sar    rax,0x5
   14000c34e:	and    ecx,0x1f
   14000c351:	mov    rax,QWORD PTR [rdx+rax*8]
   14000c355:	imul   rcx,rcx,0x58
   14000c359:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14000c35e:	mov    rax,QWORD PTR [rsp+0x48]
   14000c363:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c368:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c36d:	add    rsp,0x20
   14000c371:	pop    rdi
   14000c372:	ret    
   14000c373:	int3   
   14000c374:	int3   
   14000c375:	int3   
   14000c376:	int3   
   14000c377:	int3   
   14000c378:	int3   
   14000c379:	int3   
   14000c37a:	int3   
   14000c37b:	int3   
   14000c37c:	mov    rax,rsp
   14000c37f:	mov    QWORD PTR [rax+0x8],rbx
   14000c383:	mov    QWORD PTR [rax+0x10],rbp
   14000c387:	mov    QWORD PTR [rax+0x18],rsi
   14000c38b:	mov    QWORD PTR [rax+0x20],rdi
   14000c38f:	push   r14
   14000c391:	sub    rsp,0x50
   14000c395:	xor    r14d,r14d
   14000c398:	mov    rbp,r8
   14000c39b:	mov    rsi,rdx
   14000c39e:	mov    rdi,rcx
   14000c3a1:	test   rdx,rdx
   14000c3a4:	je     0x14000c3b9
   14000c3a6:	test   r8,r8
   14000c3a9:	je     0x14000c3b9
   14000c3ab:	cmp    BYTE PTR [rdx],r14b
   14000c3ae:	jne    0x14000c3d6
   14000c3b0:	test   rcx,rcx
   14000c3b3:	je     0x14000c3b9
   14000c3b5:	mov    WORD PTR [rcx],r14w
   14000c3b9:	xor    eax,eax
   14000c3bb:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c3c0:	mov    rbp,QWORD PTR [rsp+0x68]
   14000c3c5:	mov    rsi,QWORD PTR [rsp+0x70]
   14000c3ca:	mov    rdi,QWORD PTR [rsp+0x78]
   14000c3cf:	add    rsp,0x50
   14000c3d3:	pop    r14
   14000c3d5:	ret    
   14000c3d6:	lea    rcx,[rsp+0x30]
   14000c3db:	mov    rdx,r9
   14000c3de:	call   0x140007898
   14000c3e3:	mov    rax,QWORD PTR [rsp+0x30]
   14000c3e8:	cmp    QWORD PTR [rax+0x138],r14
   14000c3ef:	jne    0x14000c406
   14000c3f1:	test   rdi,rdi
   14000c3f4:	je     0x14000c3fc
   14000c3f6:	movzx  eax,BYTE PTR [rsi]
   14000c3f9:	mov    WORD PTR [rdi],ax
   14000c3fc:	mov    ebx,0x1
   14000c401:	jmp    0x14000c4b3
   14000c406:	movzx  ecx,BYTE PTR [rsi]
   14000c409:	lea    rdx,[rsp+0x30]
   14000c40e:	call   0x14000c248
   14000c413:	mov    ebx,0x1
   14000c418:	test   eax,eax
   14000c41a:	je     0x14000c476
   14000c41c:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c421:	mov    r9d,DWORD PTR [rcx+0xd4]
   14000c428:	cmp    r9d,ebx
   14000c42b:	jle    0x14000c45c
   14000c42d:	cmp    ebp,r9d
   14000c430:	jl     0x14000c45c
   14000c432:	mov    ecx,DWORD PTR [rcx+0x4]
   14000c435:	mov    eax,r14d
   14000c438:	test   rdi,rdi
   14000c43b:	setne  al
   14000c43e:	lea    edx,[rbx+0x8]
   14000c441:	mov    r8,rsi
   14000c444:	mov    DWORD PTR [rsp+0x28],eax
   14000c448:	mov    QWORD PTR [rsp+0x20],rdi
   14000c44d:	call   QWORD PTR [rip+0x1d4d]        # 0x14000e1a0
   14000c453:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c458:	test   eax,eax
   14000c45a:	jne    0x14000c46e
   14000c45c:	movsxd rax,DWORD PTR [rcx+0xd4]
   14000c463:	cmp    rbp,rax
   14000c466:	jb     0x14000c4a5
   14000c468:	cmp    BYTE PTR [rsi+0x1],r14b
   14000c46c:	je     0x14000c4a5
   14000c46e:	mov    ebx,DWORD PTR [rcx+0xd4]
   14000c474:	jmp    0x14000c4b3
   14000c476:	mov    eax,r14d
   14000c479:	test   rdi,rdi
   14000c47c:	mov    r9d,ebx
   14000c47f:	setne  al
   14000c482:	mov    r8,rsi
   14000c485:	mov    edx,0x9
   14000c48a:	mov    DWORD PTR [rsp+0x28],eax
   14000c48e:	mov    rax,QWORD PTR [rsp+0x30]
   14000c493:	mov    QWORD PTR [rsp+0x20],rdi
   14000c498:	mov    ecx,DWORD PTR [rax+0x4]
   14000c49b:	call   QWORD PTR [rip+0x1cff]        # 0x14000e1a0
   14000c4a1:	test   eax,eax
   14000c4a3:	jne    0x14000c4b3
   14000c4a5:	call   0x140006370
   14000c4aa:	or     ebx,0xffffffff
   14000c4ad:	mov    DWORD PTR [rax],0x2a
   14000c4b3:	cmp    BYTE PTR [rsp+0x48],r14b
   14000c4b8:	je     0x14000c4c6
   14000c4ba:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c4bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c4c6:	mov    eax,ebx
   14000c4c8:	jmp    0x14000c3bb
   14000c4cd:	int3   
   14000c4ce:	int3   
   14000c4cf:	int3   
   14000c4d0:	int3   
   14000c4d1:	int3   
   14000c4d2:	int3   
   14000c4d3:	int3   
   14000c4d4:	xor    r9d,r9d
   14000c4d7:	jmp    0x14000c37c
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	int3   
   14000c4e1:	int3   
   14000c4e2:	int3   
   14000c4e3:	int3   
   14000c4e4:	mov    WORD PTR [rsp+0x8],cx
   14000c4e9:	sub    rsp,0x38
   14000c4ed:	mov    rcx,QWORD PTR [rip+0x7e4c]        # 0x140014340
   14000c4f4:	cmp    rcx,0xfffffffffffffffe
   14000c4f8:	jne    0x14000c506
   14000c4fa:	call   0x14000c758
   14000c4ff:	mov    rcx,QWORD PTR [rip+0x7e3a]        # 0x140014340
   14000c506:	cmp    rcx,0xffffffffffffffff
   14000c50a:	jne    0x14000c513
   14000c50c:	mov    eax,0xffff
   14000c511:	jmp    0x14000c538
   14000c513:	and    QWORD PTR [rsp+0x20],0x0
   14000c519:	lea    r9,[rsp+0x48]
   14000c51e:	lea    rdx,[rsp+0x40]
   14000c523:	mov    r8d,0x1
   14000c529:	call   QWORD PTR [rip+0x1bf1]        # 0x14000e120
   14000c52f:	test   eax,eax
   14000c531:	je     0x14000c50c
   14000c533:	movzx  eax,WORD PTR [rsp+0x40]
   14000c538:	add    rsp,0x38
   14000c53c:	ret    
   14000c53d:	int3   
   14000c53e:	int3   
   14000c53f:	int3   
   14000c540:	int3   
   14000c541:	int3   
   14000c542:	int3   
   14000c543:	int3   
   14000c544:	mov    QWORD PTR [rsp+0x18],rbx
   14000c549:	mov    DWORD PTR [rsp+0x8],ecx
   14000c54d:	push   rsi
   14000c54e:	push   rdi
   14000c54f:	push   r14
   14000c551:	sub    rsp,0x20
   14000c555:	movsxd rdi,ecx
   14000c558:	cmp    edi,0xfffffffe
   14000c55b:	jne    0x14000c575
   14000c55d:	call   0x1400062f4
   14000c562:	and    DWORD PTR [rax],0x0
   14000c565:	call   0x140006370
   14000c56a:	mov    DWORD PTR [rax],0x9
   14000c570:	jmp    0x14000c603
   14000c575:	call   0x140004bc0
   14000c57a:	test   eax,eax
   14000c57c:	js     0x14000c603
   14000c582:	test   edi,edi
   14000c584:	js     0x14000c5eb
   14000c586:	cmp    edi,DWORD PTR [rip+0xa154]        # 0x1400166e0
   14000c58c:	jae    0x14000c5eb
   14000c58e:	mov    rbx,rdi
   14000c591:	mov    rsi,rdi
   14000c594:	sar    rsi,0x5
   14000c598:	lea    r14,[rip+0xa161]        # 0x140016700
   14000c59f:	and    ebx,0x1f
   14000c5a2:	imul   rbx,rbx,0x58
   14000c5a6:	mov    rax,QWORD PTR [r14+rsi*8]
   14000c5aa:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14000c5af:	and    ecx,0x1
   14000c5b2:	je     0x14000c5eb
   14000c5b4:	mov    ecx,edi
   14000c5b6:	call   0x14000c040
   14000c5bb:	nop
   14000c5bc:	mov    rax,QWORD PTR [r14+rsi*8]
   14000c5c0:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14000c5c5:	je     0x14000c5d2
   14000c5c7:	mov    ecx,edi
   14000c5c9:	call   0x14000c61c
   14000c5ce:	mov    ebx,eax
   14000c5d0:	jmp    0x14000c5e0
   14000c5d2:	call   0x140006370
   14000c5d7:	mov    DWORD PTR [rax],0x9
   14000c5dd:	or     ebx,0xffffffff
   14000c5e0:	mov    ecx,edi
   14000c5e2:	call   0x14000c218
   14000c5e7:	mov    eax,ebx
   14000c5e9:	jmp    0x14000c606
   14000c5eb:	call   0x1400062f4
   14000c5f0:	and    DWORD PTR [rax],0x0
   14000c5f3:	call   0x140006370
   14000c5f8:	mov    DWORD PTR [rax],0x9
   14000c5fe:	call   0x140006658
   14000c603:	or     eax,0xffffffff
   14000c606:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c60b:	add    rsp,0x20
   14000c60f:	pop    r14
   14000c611:	pop    rdi
   14000c612:	pop    rsi
   14000c613:	ret    
   14000c614:	int3   
   14000c615:	int3   
   14000c616:	int3   
   14000c617:	int3   
   14000c618:	int3   
   14000c619:	int3   
   14000c61a:	int3   
   14000c61b:	int3   
   14000c61c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c621:	push   rdi
   14000c622:	sub    rsp,0x20
   14000c626:	movsxd rdi,ecx
   14000c629:	call   0x140004bc0
   14000c62e:	test   eax,eax
   14000c630:	jns    0x14000c63a
   14000c632:	or     eax,0xffffffff
   14000c635:	jmp    0x14000c6dc
   14000c63a:	mov    ecx,edi
   14000c63c:	call   0x14000c18c
   14000c641:	cmp    rax,0xffffffffffffffff
   14000c645:	je     0x14000c6a0
   14000c647:	mov    rax,QWORD PTR [rip+0xa0b2]        # 0x140016700
   14000c64e:	mov    ecx,0x2
   14000c653:	cmp    edi,0x1
   14000c656:	jne    0x14000c661
   14000c658:	test   BYTE PTR [rax+0xb8],dil
   14000c65f:	jne    0x14000c66b
   14000c661:	cmp    edi,ecx
   14000c663:	jne    0x14000c682
   14000c665:	test   BYTE PTR [rax+0x60],0x1
   14000c669:	je     0x14000c682
   14000c66b:	call   0x14000c18c
   14000c670:	mov    ecx,0x1
   14000c675:	mov    rbx,rax
   14000c678:	call   0x14000c18c
   14000c67d:	cmp    rax,rbx
   14000c680:	je     0x14000c6a0
   14000c682:	mov    ecx,edi
   14000c684:	call   0x14000c18c
   14000c689:	mov    rcx,rax
   14000c68c:	call   QWORD PTR [rip+0x1a26]        # 0x14000e0b8
   14000c692:	test   eax,eax
   14000c694:	jne    0x14000c6a0
   14000c696:	call   QWORD PTR [rip+0x1a04]        # 0x14000e0a0
   14000c69c:	mov    ebx,eax
   14000c69e:	jmp    0x14000c6a2
   14000c6a0:	xor    ebx,ebx
   14000c6a2:	mov    ecx,edi
   14000c6a4:	call   0x14000c0dc
   14000c6a9:	mov    rcx,rdi
   14000c6ac:	mov    rax,rdi
   14000c6af:	sar    rax,0x5
   14000c6b3:	and    ecx,0x1f
   14000c6b6:	lea    rdx,[rip+0xa043]        # 0x140016700
   14000c6bd:	mov    rax,QWORD PTR [rdx+rax*8]
   14000c6c1:	imul   rcx,rcx,0x58
   14000c6c5:	mov    BYTE PTR [rax+rcx*1+0x8],0x0
   14000c6ca:	test   ebx,ebx
   14000c6cc:	je     0x14000c6da
   14000c6ce:	mov    ecx,ebx
   14000c6d0:	call   0x14000631c
   14000c6d5:	jmp    0x14000c632
   14000c6da:	xor    eax,eax
   14000c6dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6e1:	add    rsp,0x20
   14000c6e5:	pop    rdi
   14000c6e6:	ret    
   14000c6e7:	int3   
   14000c6e8:	int3   
   14000c6e9:	int3   
   14000c6ea:	int3   
   14000c6eb:	int3   
   14000c6ec:	int3   
   14000c6ed:	int3   
   14000c6ee:	int3   
   14000c6ef:	int3   
   14000c6f0:	rex push rbx
   14000c6f2:	sub    rsp,0x20
   14000c6f6:	test   BYTE PTR [rcx+0x18],0x83
   14000c6fa:	mov    rbx,rcx
   14000c6fd:	je     0x14000c721
   14000c6ff:	test   BYTE PTR [rcx+0x18],0x8
   14000c703:	je     0x14000c721
   14000c705:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c709:	call   0x140003aa4
   14000c70e:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000c715:	xor    eax,eax
   14000c717:	mov    QWORD PTR [rbx],rax
   14000c71a:	mov    QWORD PTR [rbx+0x10],rax
   14000c71e:	mov    DWORD PTR [rbx+0x8],eax
   14000c721:	add    rsp,0x20
   14000c725:	pop    rbx
   14000c726:	ret    
   14000c727:	int3   
   14000c728:	int3   
   14000c729:	int3   
   14000c72a:	int3   
   14000c72b:	int3   
   14000c72c:	int3   
   14000c72d:	int3   
   14000c72e:	int3   
   14000c72f:	int3   
   14000c730:	sub    rsp,0x28
   14000c734:	mov    rcx,QWORD PTR [rip+0x7c05]        # 0x140014340
   14000c73b:	lea    rax,[rcx+0x2]
   14000c73f:	cmp    rax,0x1
   14000c743:	jbe    0x14000c74b
   14000c745:	call   QWORD PTR [rip+0x196d]        # 0x14000e0b8
   14000c74b:	add    rsp,0x28
   14000c74f:	ret    
   14000c750:	int3   
   14000c751:	int3   
   14000c752:	int3   
   14000c753:	int3   
   14000c754:	int3   
   14000c755:	int3   
   14000c756:	int3   
   14000c757:	int3   
   14000c758:	sub    rsp,0x48
   14000c75c:	and    QWORD PTR [rsp+0x30],0x0
   14000c762:	and    DWORD PTR [rsp+0x28],0x0
   14000c767:	mov    r8d,0x3
   14000c76d:	lea    rcx,[rip+0x41bc]        # 0x140010930
   14000c774:	xor    r9d,r9d
   14000c777:	mov    edx,0x40000000
   14000c77c:	mov    DWORD PTR [rsp+0x20],r8d
   14000c781:	call   QWORD PTR [rip+0x1991]        # 0x14000e118
   14000c787:	mov    QWORD PTR [rip+0x7bb2],rax        # 0x140014340
   14000c78e:	add    rsp,0x48
   14000c792:	ret    
   14000c793:	int3   
   14000c794:	int3   
   14000c795:	int3   
   14000c796:	int3   
   14000c797:	int3   
   14000c798:	int3   
   14000c799:	int3   
   14000c79a:	int3   
   14000c79b:	int3   
   14000c79c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7a1:	push   rdi
   14000c7a2:	sub    rsp,0x20
   14000c7a6:	xor    edx,edx
   14000c7a8:	mov    rdi,rcx
   14000c7ab:	add    rcx,0x20
   14000c7af:	lea    r8d,[rdx+0x28]
   14000c7b3:	call   0x140006bd0
   14000c7b8:	and    DWORD PTR [rdi],0x0
   14000c7bb:	lea    rax,[rip+0xffffffffffff383e]        # 0x140000000
   14000c7c2:	mov    QWORD PTR [rdi+0x8],rax
   14000c7c6:	lea    rax,[rip+0x5853]        # 0x140012020
   14000c7cd:	lea    rcx,[rdi+0x20]
   14000c7d1:	mov    QWORD PTR [rdi+0x10],rax
   14000c7d5:	lea    rax,[rip+0x584c]        # 0x140012028
   14000c7dc:	xor    r8d,r8d
   14000c7df:	xor    edx,edx
   14000c7e1:	mov    QWORD PTR [rdi+0x18],rax
   14000c7e5:	call   QWORD PTR [rip+0x1925]        # 0x14000e110
   14000c7eb:	test   eax,eax
   14000c7ed:	jne    0x14000c810
   14000c7ef:	call   QWORD PTR [rip+0x18ab]        # 0x14000e0a0
   14000c7f5:	movzx  ecx,ax
   14000c7f8:	or     ecx,0x80070000
   14000c7fe:	test   eax,eax
   14000c800:	cmovle ecx,eax
   14000c803:	test   ecx,ecx
   14000c805:	jns    0x14000c810
   14000c807:	mov    BYTE PTR [rip+0x8e4a],0x1        # 0x140015658
   14000c80e:	jmp    0x14000c816
   14000c810:	mov    DWORD PTR [rdi],0x48
   14000c816:	mov    rax,rdi
   14000c819:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c81e:	add    rsp,0x20
   14000c822:	pop    rdi
   14000c823:	ret    
   14000c824:	int3   
   14000c825:	int3   
   14000c826:	int3   
   14000c827:	int3   
   14000c828:	int3   
   14000c829:	int3   
   14000c82a:	int3   
   14000c82b:	int3   
   14000c82c:	rex push rbx
   14000c82e:	sub    rsp,0x20
   14000c832:	lea    rax,[rip+0x412f]        # 0x140010968
   14000c839:	mov    rbx,rcx
   14000c83c:	mov    QWORD PTR [rcx],rax
   14000c83f:	test   dl,0x1
   14000c842:	je     0x14000c849
   14000c844:	call   0x140003930
   14000c849:	mov    rax,rbx
   14000c84c:	add    rsp,0x20
   14000c850:	pop    rbx
   14000c851:	ret    
   14000c852:	int3   
   14000c853:	int3   
   14000c854:	int3   
   14000c855:	int3   
   14000c856:	int3   
   14000c857:	int3   
   14000c858:	mov    QWORD PTR [rsp+0x8],rbx
   14000c85d:	push   rdi
   14000c85e:	sub    rsp,0x20
   14000c862:	cmp    BYTE PTR [rcx+0x10],0x0
   14000c866:	lea    rax,[rip+0x40d3]        # 0x140010940
   14000c86d:	mov    edi,edx
   14000c86f:	mov    QWORD PTR [rcx],rax
   14000c872:	mov    rbx,rcx
   14000c875:	je     0x14000c886
   14000c877:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c87b:	test   rcx,rcx
   14000c87e:	je     0x14000c886
   14000c880:	call   QWORD PTR [rip+0x1a52]        # 0x14000e2d8
   14000c886:	test   dil,0x1
   14000c88a:	je     0x14000c894
   14000c88c:	mov    rcx,rbx
   14000c88f:	call   0x140003930
   14000c894:	mov    rax,rbx
   14000c897:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c89c:	add    rsp,0x20
   14000c8a0:	pop    rdi
   14000c8a1:	ret    
   14000c8a2:	int3   
   14000c8a3:	int3   
   14000c8a4:	int3   
   14000c8a5:	int3   
   14000c8a6:	int3   
   14000c8a7:	int3   
   14000c8a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c8ad:	push   rdi
   14000c8ae:	sub    rsp,0x20
   14000c8b2:	lea    ebx,[rdx+0x8]
   14000c8b5:	movsxd r9,r8d
   14000c8b8:	mov    rdi,rcx
   14000c8bb:	and    ebx,0xfffffff8
   14000c8be:	movsxd r8,ebx
   14000c8c1:	jne    0x14000c8c8
   14000c8c3:	xor    r8d,r8d
   14000c8c6:	jmp    0x14000c8e0
   14000c8c8:	xor    edx,edx
   14000c8ca:	or     rax,0xffffffffffffffff
   14000c8ce:	div    r8
   14000c8d1:	cmp    rax,r9
   14000c8d4:	jb     0x14000c90e
   14000c8d6:	imul   r8,r9
   14000c8da:	cmp    r8,0xffffffffffffffe7
   14000c8de:	ja     0x14000c90e
   14000c8e0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c8e4:	lea    rdx,[r8+0x18]
   14000c8e8:	mov    rax,QWORD PTR [rcx]
   14000c8eb:	call   QWORD PTR [rax]
   14000c8ed:	mov    rcx,rax
   14000c8f0:	test   rax,rax
   14000c8f3:	je     0x14000c90e
   14000c8f5:	and    DWORD PTR [rcx+0x8],0x0
   14000c8f9:	mov    QWORD PTR [rax],rdi
   14000c8fc:	mov    DWORD PTR [rax+0x10],0x1
   14000c903:	lea    eax,[rbx-0x1]
   14000c906:	mov    DWORD PTR [rcx+0xc],eax
   14000c909:	mov    rax,rcx
   14000c90c:	jmp    0x14000c910
   14000c90e:	xor    eax,eax
   14000c910:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c915:	add    rsp,0x20
   14000c919:	pop    rdi
   14000c91a:	ret    
   14000c91b:	int3   
   14000c91c:	int3   
   14000c91d:	int3   
   14000c91e:	int3   
   14000c91f:	int3   
   14000c920:	int3   
   14000c921:	int3   
   14000c922:	int3   
   14000c923:	int3   
   14000c924:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c928:	mov    r8,rdx
   14000c92b:	xor    edx,edx
   14000c92d:	rex.W jmp QWORD PTR [rip+0x183c]        # 0x14000e170
   14000c934:	int3   
   14000c935:	int3   
   14000c936:	int3   
   14000c937:	int3   
   14000c938:	int3   
   14000c939:	int3   
   14000c93a:	int3   
   14000c93b:	int3   
   14000c93c:	mov    rax,rcx
   14000c93f:	ret    
   14000c940:	int3   
   14000c941:	int3   
   14000c942:	int3   
   14000c943:	int3   
   14000c944:	int3   
   14000c945:	int3   
   14000c946:	int3   
   14000c947:	int3   
   14000c948:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c94c:	mov    rax,QWORD PTR [rcx]
   14000c94f:	rex.W jmp QWORD PTR [rax+0x8]
   14000c953:	int3   
   14000c954:	int3   
   14000c955:	int3   
   14000c956:	int3   
   14000c957:	int3   
   14000c958:	int3   
   14000c959:	int3   
   14000c95a:	int3   
   14000c95b:	int3   
   14000c95c:	sub    rsp,0x28
   14000c960:	test   rdx,rdx
   14000c963:	je     0x14000c974
   14000c965:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c969:	mov    r8,rdx
   14000c96c:	xor    edx,edx
   14000c96e:	call   QWORD PTR [rip+0x1804]        # 0x14000e178
   14000c974:	add    rsp,0x28
   14000c978:	ret    
   14000c979:	int3   
   14000c97a:	int3   
   14000c97b:	int3   
   14000c97c:	int3   
   14000c97d:	int3   
   14000c97e:	int3   
   14000c97f:	int3   
   14000c980:	lock inc DWORD PTR [rcx+0x20]
   14000c984:	lea    rax,[rcx+0x10]
   14000c988:	ret    
   14000c989:	int3   
   14000c98a:	int3   
   14000c98b:	int3   
   14000c98c:	int3   
   14000c98d:	int3   
   14000c98e:	int3   
   14000c98f:	int3   
   14000c990:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c994:	mov    r8,rdx
   14000c997:	xor    edx,edx
   14000c999:	rex.W jmp QWORD PTR [rip+0x18e0]        # 0x14000e280
   14000c9a0:	int3   
   14000c9a1:	int3   
   14000c9a2:	int3   
   14000c9a3:	int3   
   14000c9a4:	int3   
   14000c9a5:	int3   
   14000c9a6:	int3   
   14000c9a7:	int3   
   14000c9a8:	rex push rbx
   14000c9aa:	sub    rsp,0x20
   14000c9ae:	lea    ebx,[r8+0x8]
   14000c9b2:	mov    eax,r9d
   14000c9b5:	and    ebx,0xfffffff8
   14000c9b8:	mov    r8d,ebx
   14000c9bb:	imul   r8,rax
   14000c9bf:	mov    eax,0xffffffff
   14000c9c4:	cmp    r8,rax
   14000c9c7:	ja     0x14000c9f1
   14000c9c9:	cmp    r8d,0xffffffe7
   14000c9cd:	ja     0x14000c9f1
   14000c9cf:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c9d3:	add    r8d,0x18
   14000c9d7:	mov    r9,QWORD PTR [rcx]
   14000c9da:	call   QWORD PTR [r9+0x10]
   14000c9de:	mov    rcx,rax
   14000c9e1:	test   rax,rax
   14000c9e4:	je     0x14000c9f1
   14000c9e6:	lea    eax,[rbx-0x1]
   14000c9e9:	mov    DWORD PTR [rcx+0xc],eax
   14000c9ec:	mov    rax,rcx
   14000c9ef:	jmp    0x14000c9f3
   14000c9f1:	xor    eax,eax
   14000c9f3:	add    rsp,0x20
   14000c9f7:	pop    rbx
   14000c9f8:	ret    
   14000c9f9:	int3   
   14000c9fa:	int3   
   14000c9fb:	int3   
   14000c9fc:	int3   
   14000c9fd:	int3   
   14000c9fe:	int3   
   14000c9ff:	int3   
   14000ca00:	sub    rsp,0x28
   14000ca04:	test   rdx,rdx
   14000ca07:	jne    0x14000ca16
   14000ca09:	mov    rax,QWORD PTR [rcx]
   14000ca0c:	mov    rdx,r8
   14000ca0f:	add    rsp,0x28
   14000ca13:	rex.W jmp QWORD PTR [rax]
   14000ca16:	test   r8,r8
   14000ca19:	jne    0x14000ca28
   14000ca1b:	mov    rax,QWORD PTR [rcx]
   14000ca1e:	call   QWORD PTR [rax+0x8]
   14000ca21:	xor    eax,eax
   14000ca23:	add    rsp,0x28
   14000ca27:	ret    
   14000ca28:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ca2c:	mov    r9,r8
   14000ca2f:	mov    r8,rdx
   14000ca32:	xor    edx,edx
   14000ca34:	add    rsp,0x28
   14000ca38:	rex.W jmp QWORD PTR [rip+0x1719]        # 0x14000e158
   14000ca3f:	int3   
   14000ca40:	int3   
   14000ca41:	int3   
   14000ca42:	int3   
   14000ca43:	int3   
   14000ca44:	int3   
   14000ca45:	int3   
   14000ca46:	jmp    QWORD PTR [rip+0x1814]        # 0x14000e260
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	int3   
   14000ca51:	int3   
   14000ca52:	jmp    QWORD PTR [rip+0x1818]        # 0x14000e270
   14000ca58:	int3   
   14000ca59:	int3   
   14000ca5a:	int3   
   14000ca5b:	int3   
   14000ca5c:	int3   
   14000ca5d:	int3   
   14000ca5e:	int3   
   14000ca5f:	int3   
   14000ca60:	mov    rax,rsp
   14000ca63:	mov    QWORD PTR [rax+0x8],rbx
   14000ca67:	mov    QWORD PTR [rax+0x10],rbp
   14000ca6b:	mov    QWORD PTR [rax+0x18],rsi
   14000ca6f:	mov    QWORD PTR [rax+0x20],rdi
   14000ca73:	push   r14
   14000ca75:	sub    rsp,0x20
   14000ca79:	mov    rbx,QWORD PTR [r9+0x38]
   14000ca7d:	mov    rsi,rdx
   14000ca80:	mov    r14,r8
   14000ca83:	mov    rbp,rcx
   14000ca86:	lea    r8,[rbx+0x4]
   14000ca8a:	mov    rdx,r9
   14000ca8d:	mov    rcx,rsi
   14000ca90:	mov    rdi,r9
   14000ca93:	call   0x140008b0c
   14000ca98:	mov    r11d,DWORD PTR [rbx+0x4]
   14000ca9c:	mov    r10d,DWORD PTR [rbp+0x4]
   14000caa0:	mov    eax,r11d
   14000caa3:	and    r11d,0x2
   14000caa7:	mov    r8d,0x1
   14000caad:	and    eax,r8d
   14000cab0:	and    r10b,0x66
   14000cab4:	cmove  r11d,eax
   14000cab8:	test   r11d,r11d
   14000cabb:	je     0x14000cad1
   14000cabd:	mov    r9,rdi
   14000cac0:	mov    r8,r14
   14000cac3:	mov    rdx,rsi
   14000cac6:	mov    rcx,rbp
   14000cac9:	call   0x140006188
   14000cace:	mov    r8d,eax
   14000cad1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cad6:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cadb:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cae0:	mov    rdi,QWORD PTR [rsp+0x48]
   14000cae5:	mov    eax,r8d
   14000cae8:	add    rsp,0x20
   14000caec:	pop    r14
   14000caee:	ret    
   14000caef:	int3   
   14000caf0:	int3   
   14000caf1:	int3   
   14000caf2:	int3   
   14000caf3:	int3   
   14000caf4:	int3   
   14000caf5:	int3   
   14000caf6:	rex push rbp
   14000caf8:	sub    rsp,0x20
   14000cafc:	mov    rbp,rdx
   14000caff:	mov    rax,QWORD PTR [rcx]
   14000cb02:	mov    rdx,rcx
   14000cb05:	mov    ecx,DWORD PTR [rax]
   14000cb07:	call   0x140003f48
   14000cb0c:	nop
   14000cb0d:	add    rsp,0x20
   14000cb11:	pop    rbp
   14000cb12:	ret    
   14000cb13:	int3   
   14000cb14:	int3   
   14000cb15:	int3   
   14000cb16:	int3   
   14000cb17:	int3   
   14000cb18:	int3   
   14000cb19:	int3   
   14000cb1a:	mov    QWORD PTR [rsp+0x10],rdx
   14000cb1f:	push   rbp
   14000cb20:	sub    rsp,0x20
   14000cb24:	mov    rbp,rdx
   14000cb27:	and    QWORD PTR [rbp+0x50],0x0
   14000cb2c:	lea    rax,[rip+0xffffffffffff6e5a]        # 0x14000398d
   14000cb33:	add    rsp,0x20
   14000cb37:	pop    rbp
   14000cb38:	ret    
   14000cb39:	int3   
   14000cb3a:	int3   
   14000cb3b:	int3   
   14000cb3c:	int3   
   14000cb3d:	int3   
   14000cb3e:	int3   
   14000cb3f:	int3   
   14000cb40:	rex push rbp
   14000cb42:	sub    rsp,0x20
   14000cb46:	mov    rbp,rdx
   14000cb49:	add    rsp,0x20
   14000cb4d:	pop    rbp
   14000cb4e:	jmp    0x1400046e0
   14000cb53:	int3   
   14000cb54:	int3   
   14000cb55:	int3   
   14000cb56:	int3   
   14000cb57:	int3   
   14000cb58:	int3   
   14000cb59:	int3   
   14000cb5a:	rex push rbp
   14000cb5c:	sub    rsp,0x20
   14000cb60:	mov    rbp,rdx
   14000cb63:	mov    ecx,0xd
   14000cb68:	add    rsp,0x20
   14000cb6c:	pop    rbp
   14000cb6d:	jmp    0x140007488
   14000cb72:	int3   
   14000cb73:	rex push rbp
   14000cb75:	sub    rsp,0x20
   14000cb79:	mov    rbp,rdx
   14000cb7c:	mov    ecx,0xc
   14000cb81:	add    rsp,0x20
   14000cb85:	pop    rbp
   14000cb86:	jmp    0x140007488
   14000cb8b:	int3   
   14000cb8c:	int3   
   14000cb8d:	int3   
   14000cb8e:	int3   
   14000cb8f:	int3   
   14000cb90:	int3   
   14000cb91:	int3   
   14000cb92:	rex push rbp
   14000cb94:	sub    rsp,0x20
   14000cb98:	mov    rbp,rdx
   14000cb9b:	cmp    DWORD PTR [rbp+0x80],0x0
   14000cba2:	je     0x14000cbaf
   14000cba4:	mov    ecx,0x8
   14000cba9:	call   0x140007488
   14000cbae:	nop
   14000cbaf:	add    rsp,0x20
   14000cbb3:	pop    rbp
   14000cbb4:	ret    
   14000cbb5:	int3   
   14000cbb6:	int3   
   14000cbb7:	int3   
   14000cbb8:	int3   
   14000cbb9:	int3   
   14000cbba:	int3   
   14000cbbb:	int3   
   14000cbbc:	rex push rbp
   14000cbbe:	sub    rsp,0x20
   14000cbc2:	mov    rbp,rdx
   14000cbc5:	mov    ecx,0xb
   14000cbca:	call   0x140007488
   14000cbcf:	nop
   14000cbd0:	add    rsp,0x20
   14000cbd4:	pop    rbp
   14000cbd5:	ret    
   14000cbd6:	int3   
   14000cbd7:	int3   
   14000cbd8:	int3   
   14000cbd9:	int3   
   14000cbda:	int3   
   14000cbdb:	int3   
   14000cbdc:	int3   
   14000cbdd:	rex push rbp
   14000cbdf:	sub    rsp,0x40
   14000cbe3:	mov    rbp,rdx
   14000cbe6:	lea    rax,[rbp+0x40]
   14000cbea:	mov    QWORD PTR [rsp+0x30],rax
   14000cbef:	mov    rax,QWORD PTR [rbp+0x90]
   14000cbf6:	mov    QWORD PTR [rsp+0x28],rax
   14000cbfb:	mov    rax,QWORD PTR [rbp+0x88]
   14000cc02:	mov    QWORD PTR [rsp+0x20],rax
   14000cc07:	mov    r9,QWORD PTR [rbp+0x80]
   14000cc0e:	mov    r8,QWORD PTR [rbp+0x78]
   14000cc12:	mov    rdx,QWORD PTR [rbp+0x70]
   14000cc16:	call   0x140005da4
   14000cc1b:	nop
   14000cc1c:	add    rsp,0x40
   14000cc20:	pop    rbp
   14000cc21:	ret    
   14000cc22:	int3   
   14000cc23:	int3   
   14000cc24:	int3   
   14000cc25:	int3   
   14000cc26:	int3   
   14000cc27:	int3   
   14000cc28:	int3   
   14000cc29:	rex push rbp
   14000cc2b:	sub    rsp,0x20
   14000cc2f:	mov    rbp,rdx
   14000cc32:	mov    ecx,0xe
   14000cc37:	add    rsp,0x20
   14000cc3b:	pop    rbp
   14000cc3c:	jmp    0x140007488
   14000cc41:	int3   
   14000cc42:	int3   
   14000cc43:	int3   
   14000cc44:	int3   
   14000cc45:	int3   
   14000cc46:	int3   
   14000cc47:	int3   
   14000cc48:	rex push rbp
   14000cc4a:	sub    rsp,0x20
   14000cc4e:	mov    rbp,rdx
   14000cc51:	mov    rcx,QWORD PTR [rip+0x66a8]        # 0x140013300
   14000cc58:	add    rsp,0x20
   14000cc5c:	pop    rbp
   14000cc5d:	rex.W jmp QWORD PTR [rip+0x162c]        # 0x14000e290
   14000cc64:	int3   
   14000cc65:	int3   
   14000cc66:	int3   
   14000cc67:	int3   
   14000cc68:	int3   
   14000cc69:	int3   
   14000cc6a:	int3   
   14000cc6b:	rex push rbp
   14000cc6d:	sub    rsp,0x20
   14000cc71:	mov    rbp,rdx
   14000cc74:	mov    ecx,0xc
   14000cc79:	add    rsp,0x20
   14000cc7d:	pop    rbp
   14000cc7e:	jmp    0x140007488
   14000cc83:	int3   
   14000cc84:	int3   
   14000cc85:	int3   
   14000cc86:	int3   
   14000cc87:	int3   
   14000cc88:	int3   
   14000cc89:	int3   
   14000cc8a:	rex push rbp
   14000cc8c:	sub    rsp,0x20
   14000cc90:	mov    rbp,rdx
   14000cc93:	mov    ecx,0xd
   14000cc98:	add    rsp,0x20
   14000cc9c:	pop    rbp
   14000cc9d:	jmp    0x140007488
   14000cca2:	int3   
   14000cca3:	int3   
   14000cca4:	int3   
   14000cca5:	int3   
   14000cca6:	int3   
   14000cca7:	int3   
   14000cca8:	int3   
   14000cca9:	int3   
   14000ccaa:	int3   
   14000ccab:	int3   
   14000ccac:	int3   
   14000ccad:	int3   
   14000ccae:	int3   
   14000ccaf:	int3   
   14000ccb0:	rex push rbp
   14000ccb2:	sub    rsp,0x20
   14000ccb6:	mov    rbp,rdx
   14000ccb9:	mov    rax,QWORD PTR [rcx]
   14000ccbc:	xor    ecx,ecx
   14000ccbe:	cmp    DWORD PTR [rax],0xc0000005
   14000ccc4:	sete   cl
   14000ccc7:	mov    eax,ecx
   14000ccc9:	add    rsp,0x20
   14000cccd:	pop    rbp
   14000ccce:	ret    
   14000cccf:	int3   
   14000ccd0:	int3   
   14000ccd1:	int3   
   14000ccd2:	int3   
   14000ccd3:	int3   
   14000ccd4:	int3   
   14000ccd5:	int3   
   14000ccd6:	rex push rbp
   14000ccd8:	sub    rsp,0x20
   14000ccdc:	mov    rbp,rdx
   14000ccdf:	cmp    DWORD PTR [rbp+0x60],0x0
   14000cce3:	je     0x14000cced
   14000cce5:	xor    ecx,ecx
   14000cce7:	call   0x140007488
   14000ccec:	nop
   14000cced:	add    rsp,0x20
   14000ccf1:	pop    rbp
   14000ccf2:	ret    
   14000ccf3:	int3   
   14000ccf4:	int3   
   14000ccf5:	int3   
   14000ccf6:	int3   
   14000ccf7:	int3   
   14000ccf8:	int3   
   14000ccf9:	int3   
   14000ccfa:	rex push rbp
   14000ccfc:	sub    rsp,0x20
   14000cd00:	mov    rbp,rdx
   14000cd03:	mov    QWORD PTR [rbp+0x70],rcx
   14000cd07:	mov    QWORD PTR [rbp+0x68],rcx
   14000cd0b:	mov    rax,QWORD PTR [rbp+0x68]
   14000cd0f:	mov    rcx,QWORD PTR [rax]
   14000cd12:	mov    QWORD PTR [rbp+0x28],rcx
   14000cd16:	mov    DWORD PTR [rbp+0x20],0x0
   14000cd1d:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd21:	cmp    DWORD PTR [rax],0xe06d7363
   14000cd27:	jne    0x14000cd76
   14000cd29:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd2d:	cmp    DWORD PTR [rax+0x18],0x4
   14000cd31:	jne    0x14000cd76
   14000cd33:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd37:	cmp    DWORD PTR [rax+0x20],0x19930520
   14000cd3e:	je     0x14000cd5a
   14000cd40:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd44:	cmp    DWORD PTR [rax+0x20],0x19930521
   14000cd4b:	je     0x14000cd5a
   14000cd4d:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd51:	cmp    DWORD PTR [rax+0x20],0x19930522
   14000cd58:	jne    0x14000cd76
   14000cd5a:	mov    rdx,QWORD PTR [rbp+0x28]
   14000cd5e:	mov    rax,QWORD PTR [rbp+0xd8]
   14000cd65:	mov    rcx,QWORD PTR [rax+0x28]
   14000cd69:	cmp    QWORD PTR [rdx+0x28],rcx
   14000cd6d:	jne    0x14000cd76
   14000cd6f:	mov    DWORD PTR [rbp+0x20],0x1
   14000cd76:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd7a:	cmp    DWORD PTR [rax],0xe06d7363
   14000cd80:	jne    0x14000cddd
   14000cd82:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd86:	cmp    DWORD PTR [rax+0x18],0x4
   14000cd8a:	jne    0x14000cddd
   14000cd8c:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd90:	cmp    DWORD PTR [rax+0x20],0x19930520
   14000cd97:	je     0x14000cdb3
   14000cd99:	mov    rax,QWORD PTR [rbp+0x28]
   14000cd9d:	cmp    DWORD PTR [rax+0x20],0x19930521
   14000cda4:	je     0x14000cdb3
   14000cda6:	mov    rax,QWORD PTR [rbp+0x28]
   14000cdaa:	cmp    DWORD PTR [rax+0x20],0x19930522
   14000cdb1:	jne    0x14000cddd
   14000cdb3:	mov    rax,QWORD PTR [rbp+0x28]
   14000cdb7:	cmp    QWORD PTR [rax+0x30],0x0
   14000cdbc:	jne    0x14000cddd
   14000cdbe:	call   0x140004258
   14000cdc3:	mov    DWORD PTR [rax+0x460],0x1
   14000cdcd:	mov    DWORD PTR [rbp+0x20],0x1
   14000cdd4:	mov    DWORD PTR [rbp+0x30],0x1
   14000cddb:	jmp    0x14000cde4
   14000cddd:	mov    DWORD PTR [rbp+0x30],0x0
   14000cde4:	mov    eax,DWORD PTR [rbp+0x30]
   14000cde7:	add    rsp,0x20
   14000cdeb:	pop    rbp
   14000cdec:	ret    
   14000cded:	int3   
   14000cdee:	rex push rbx
   14000cdf0:	push   rbp
   14000cdf1:	sub    rsp,0x28
   14000cdf5:	mov    rbp,rdx
   14000cdf8:	mov    rcx,QWORD PTR [rbp+0x38]
   14000cdfc:	call   0x140005ef0
   14000ce01:	cmp    DWORD PTR [rbp+0x20],0x0
   14000ce05:	jne    0x14000ce41
   14000ce07:	mov    rbx,QWORD PTR [rbp+0xd8]
   14000ce0e:	cmp    DWORD PTR [rbx],0xe06d7363
   14000ce14:	jne    0x14000ce41
   14000ce16:	cmp    DWORD PTR [rbx+0x18],0x4
   14000ce1a:	jne    0x14000ce41
   14000ce1c:	mov    eax,DWORD PTR [rbx+0x20]
   14000ce1f:	sub    eax,0x19930520
   14000ce24:	cmp    eax,0x2
   14000ce27:	ja     0x14000ce41
   14000ce29:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ce2d:	call   0x140005f8c
   14000ce32:	test   eax,eax
   14000ce34:	je     0x14000ce41
   14000ce36:	mov    dl,0x1
   14000ce38:	mov    rcx,rbx
   14000ce3b:	call   0x140008dec
   14000ce40:	nop
   14000ce41:	call   0x140004258
   14000ce46:	mov    rcx,QWORD PTR [rbp+0xe0]
   14000ce4d:	mov    QWORD PTR [rax+0xf0],rcx
   14000ce54:	call   0x140004258
   14000ce59:	mov    rcx,QWORD PTR [rbp+0x50]
   14000ce5d:	mov    QWORD PTR [rax+0xf8],rcx
   14000ce64:	add    rsp,0x28
   14000ce68:	pop    rbp
   14000ce69:	pop    rbx
   14000ce6a:	ret    
   14000ce6b:	int3   
   14000ce6c:	int3   
   14000ce6d:	int3   
   14000ce6e:	int3   
   14000ce6f:	int3   
   14000ce70:	int3   
   14000ce71:	int3   
   14000ce72:	rex push rbp
   14000ce74:	sub    rsp,0x20
   14000ce78:	mov    rbp,rdx
   14000ce7b:	xor    eax,eax
   14000ce7d:	cmp    BYTE PTR [rbp+0x38],al
   14000ce80:	setne  al
   14000ce83:	add    rsp,0x20
   14000ce87:	pop    rbp
   14000ce88:	ret    
   14000ce89:	int3   
   14000ce8a:	int3   
   14000ce8b:	int3   
   14000ce8c:	int3   
   14000ce8d:	int3   
   14000ce8e:	int3   
   14000ce8f:	int3   
   14000ce90:	rex push rbp
   14000ce92:	sub    rsp,0x20
   14000ce96:	mov    rbp,rdx
   14000ce99:	call   0x140009ca8
   14000ce9e:	nop
   14000ce9f:	add    rsp,0x20
   14000cea3:	pop    rbp
   14000cea4:	ret    
   14000cea5:	int3   
   14000cea6:	rex push rbp
   14000cea8:	sub    rsp,0x20
   14000ceac:	mov    rbp,rdx
   14000ceaf:	call   0x140004258
   14000ceb4:	cmp    DWORD PTR [rax+0x100],0x0
   14000cebb:	jle    0x14000cec8
   14000cebd:	call   0x140004258
   14000cec2:	dec    DWORD PTR [rax+0x100]
   14000cec8:	add    rsp,0x20
   14000cecc:	pop    rbp
   14000cecd:	ret    
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	int3   
   14000ced1:	int3   
   14000ced2:	int3   
   14000ced3:	int3   
   14000ced4:	int3   
   14000ced5:	rex push rbp
   14000ced7:	sub    rsp,0x20
   14000cedb:	mov    rbp,rdx
   14000cede:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000cee2:	mov    rax,rcx
   14000cee5:	mov    rdx,QWORD PTR [rip+0x87e4]        # 0x1400156d0
   14000ceec:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000cef0:	call   0x140008db8
   14000cef5:	nop
   14000cef6:	add    rsp,0x20
   14000cefa:	pop    rbp
   14000cefb:	ret    
   14000cefc:	int3   
   14000cefd:	rex push rbp
   14000ceff:	sub    rsp,0x20
   14000cf03:	mov    rbp,rdx
   14000cf06:	mov    ecx,0x1
   14000cf0b:	add    rsp,0x20
   14000cf0f:	pop    rbp
   14000cf10:	jmp    0x140007488
   14000cf15:	int3   
   14000cf16:	int3   
   14000cf17:	int3   
   14000cf18:	int3   
   14000cf19:	int3   
   14000cf1a:	int3   
   14000cf1b:	int3   
   14000cf1c:	rex push rbp
   14000cf1e:	sub    rsp,0x20
   14000cf22:	mov    rbp,rdx
   14000cf25:	mov    ecx,0x1
   14000cf2a:	add    rsp,0x20
   14000cf2e:	pop    rbp
   14000cf2f:	jmp    0x140007488
   14000cf34:	int3   
   14000cf35:	int3   
   14000cf36:	int3   
   14000cf37:	int3   
   14000cf38:	int3   
   14000cf39:	int3   
   14000cf3a:	int3   
   14000cf3b:	rex push rbp
   14000cf3d:	sub    rsp,0x20
   14000cf41:	mov    rbp,rdx
   14000cf44:	mov    ecx,DWORD PTR [rbp+0x40]
   14000cf47:	add    rsp,0x20
   14000cf4b:	pop    rbp
   14000cf4c:	jmp    0x14000c218
   14000cf51:	int3   
   14000cf52:	int3   
   14000cf53:	int3   
   14000cf54:	int3   
   14000cf55:	int3   
   14000cf56:	int3   
   14000cf57:	int3   
   14000cf58:	rex push rbp
   14000cf5a:	sub    rsp,0x20
   14000cf5e:	mov    rbp,rdx
   14000cf61:	mov    ecx,DWORD PTR [rbp+0x50]
   14000cf64:	add    rsp,0x20
   14000cf68:	pop    rbp
   14000cf69:	jmp    0x14000c218
   14000cf6e:	int3   
   14000cf6f:	int3   
   14000cf70:	int3   
   14000cf71:	int3   
   14000cf72:	int3   
   14000cf73:	int3   
   14000cf74:	int3   
   14000cf75:	rex push rbp
   14000cf77:	sub    rsp,0x20
   14000cf7b:	mov    rbp,rdx
   14000cf7e:	mov    rcx,QWORD PTR [rbp+0x30]
   14000cf82:	add    rsp,0x20
   14000cf86:	pop    rbp
   14000cf87:	jmp    0x140008d64
   14000cf8c:	int3   
   14000cf8d:	int3   
   14000cf8e:	int3   
   14000cf8f:	int3   
   14000cf90:	int3   
   14000cf91:	int3   
   14000cf92:	int3   
   14000cf93:	rex push rbp
   14000cf95:	sub    rsp,0x20
   14000cf99:	mov    rbp,rdx
   14000cf9c:	mov    ecx,0xa
   14000cfa1:	add    rsp,0x20
   14000cfa5:	pop    rbp
   14000cfa6:	jmp    0x140007488
   14000cfab:	int3   
   14000cfac:	int3   
   14000cfad:	int3   
   14000cfae:	int3   
   14000cfaf:	int3   
   14000cfb0:	int3   
   14000cfb1:	int3   
   14000cfb2:	mov    rcx,QWORD PTR [rdx+0x40]
   14000cfb9:	jmp    0x140001524
   14000cfbe:	int3   
   14000cfbf:	int3   
   14000cfc0:	int3   
   14000cfc1:	int3   
   14000cfc2:	int3   
   14000cfc3:	int3   
   14000cfc4:	rex push rbp
   14000cfc6:	sub    rsp,0x20
   14000cfca:	mov    rbp,rdx
   14000cfcd:	lea    rdx,[rip+0x73dc]        # 0x1400143b0
   14000cfd4:	mov    rcx,QWORD PTR [rbp+0x28]
   14000cfd8:	call   0x1400039a0
   14000cfdd:	add    rsp,0x20
   14000cfe1:	pop    rbp
   14000cfe2:	ret    
   14000cfe3:	mov    rcx,QWORD PTR [rdx+0x28]
   14000cfea:	jmp    0x140001524
   14000cfef:	mov    QWORD PTR [rsp+0x10],rdx
   14000cff4:	push   rbp
   14000cff5:	sub    rsp,0x20
   14000cff9:	mov    rbp,rdx
   14000cffc:	lea    rax,[rip+0xffffffffffff4320]        # 0x140001323
   14000d003:	add    rsp,0x20
   14000d007:	pop    rbp
   14000d008:	ret    
   14000d009:	int3   
   14000d00a:	int3   
   14000d00b:	int3   
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	mov    rcx,QWORD PTR [rdx+0x40]
   14000d017:	add    rcx,0x58
   14000d01b:	jmp    0x14000305c
   14000d020:	mov    rcx,QWORD PTR [rdx+0x40]
   14000d027:	add    rcx,0x60
   14000d02b:	jmp    0x14000305c
   14000d030:	mov    rcx,QWORD PTR [rdx+0x40]
   14000d037:	add    rcx,0x68
   14000d03b:	jmp    0x14000305c
   14000d040:	mov    rcx,QWORD PTR [rdx+0x40]
   14000d047:	add    rcx,0x70
   14000d04b:	jmp    0x14000305c
   14000d050:	int3   
   14000d051:	int3   
   14000d052:	int3   
   14000d053:	int3   
   14000d054:	int3   
   14000d055:	int3   
   14000d056:	mov    rcx,QWORD PTR [rdx+0x20]
   14000d05d:	add    rcx,0x58
   14000d061:	jmp    0x14000305c
   14000d066:	mov    rcx,QWORD PTR [rdx+0x20]
   14000d06d:	add    rcx,0x60
   14000d071:	jmp    0x14000305c
   14000d076:	mov    rcx,QWORD PTR [rdx+0x20]
   14000d07d:	add    rcx,0x68
   14000d081:	jmp    0x14000305c
   14000d086:	mov    rcx,QWORD PTR [rdx+0x20]
   14000d08d:	add    rcx,0x70
   14000d091:	jmp    0x14000305c
   14000d096:	int3   
   14000d097:	int3   
   14000d098:	int3   
   14000d099:	int3   
   14000d09a:	int3   
   14000d09b:	int3   
   14000d09c:	lea    rcx,[rdx+0x68]
   14000d0a3:	jmp    0x140003084
   14000d0a8:	mov    rcx,QWORD PTR [rdx+0x38]
   14000d0af:	jmp    0x140003930
   14000d0b4:	mov    QWORD PTR [rsp+0x10],rdx
   14000d0b9:	push   rbp
   14000d0ba:	sub    rsp,0x30
   14000d0be:	mov    rbp,rdx
   14000d0c1:	lea    rax,[rip+0xffffffffffff4d10]        # 0x140001dd8
   14000d0c8:	add    rsp,0x30
   14000d0cc:	pop    rbp
   14000d0cd:	ret    
   14000d0ce:	int3   
   14000d0cf:	int3   
   14000d0d0:	int3   
   14000d0d1:	int3   
   14000d0d2:	int3   
   14000d0d3:	int3   
   14000d0d4:	int3   
   14000d0d5:	lea    rcx,[rdx+0x50]
   14000d0dc:	jmp    0x140002504
   14000d0e1:	lea    rcx,[rdx+0x68]
   14000d0e8:	jmp    0x140001cd0
   14000d0ed:	lea    rcx,[rdx+0xb0]
   14000d0f4:	jmp    0x140001970
   14000d0f9:	lea    rcx,[rdx+0xb0]
   14000d100:	jmp    0x140001970
   14000d105:	lea    rcx,[rdx+0xb0]
   14000d10c:	jmp    0x140001970
   14000d111:	mov    QWORD PTR [rsp+0x10],rdx
   14000d116:	push   rbp
   14000d117:	sub    rsp,0x50
   14000d11b:	mov    rbp,rdx
   14000d11e:	mov    ecx,0x80004005
   14000d123:	mov    eax,DWORD PTR [rbp+0x64]
   14000d126:	test   eax,eax
   14000d128:	cmovs  ecx,eax
   14000d12b:	mov    DWORD PTR [rbp+0x60],ecx
   14000d12e:	lea    rax,[rip+0xffffffffffff5e46]        # 0x140002f7b
   14000d135:	add    rsp,0x50
   14000d139:	pop    rbp
   14000d13a:	ret    
   14000d13b:	int3   
   14000d13c:	int3   
   14000d13d:	int3   
   14000d13e:	int3   
   14000d13f:	int3   
   14000d140:	int3   
   14000d141:	int3   
   14000d142:	int3   
   14000d143:	int3   
   14000d144:	rex push rbx
   14000d146:	sub    rsp,0x20
   14000d14a:	xor    edx,edx
   14000d14c:	lea    rcx,[rip+0x8525]        # 0x140015678
   14000d153:	lea    r8d,[rdx+0x28]
   14000d157:	call   0x140006bd0
   14000d15c:	and    DWORD PTR [rip+0x8505],0x0        # 0x140015668
   14000d163:	and    QWORD PTR [rip+0x8505],0x0        # 0x140015670
   14000d16b:	and    DWORD PTR [rip+0x84fa],0x0        # 0x14001566c
   14000d172:	and    QWORD PTR [rip+0x8526],0x0        # 0x1400156a0
   14000d17a:	lea    rax,[rip+0x84df]        # 0x140015660
   14000d181:	lea    rcx,[rip+0x84f0]        # 0x140015678
   14000d188:	xor    edx,edx
   14000d18a:	mov    QWORD PTR [rip+0x84af],rax        # 0x140015640
   14000d191:	call   QWORD PTR [rip+0xf11]        # 0x14000e0a8
   14000d197:	test   eax,eax
   14000d199:	jne    0x14000d1bc
   14000d19b:	call   QWORD PTR [rip+0xeff]        # 0x14000e0a0
   14000d1a1:	movzx  ecx,ax
   14000d1a4:	or     ecx,0x80070000
   14000d1aa:	test   eax,eax
   14000d1ac:	cmovle ecx,eax
   14000d1af:	test   ecx,ecx
   14000d1b1:	jns    0x14000d1bc
   14000d1b3:	mov    BYTE PTR [rip+0x849e],0x1        # 0x140015658
   14000d1ba:	jmp    0x14000d1c6
   14000d1bc:	mov    DWORD PTR [rip+0x84a2],0x38        # 0x140015668
   14000d1c6:	call   QWORD PTR [rip+0xef4]        # 0x14000e0c0
   14000d1cc:	and    QWORD PTR [rip+0x84dc],0x0        # 0x1400156b0
   14000d1d4:	mov    rbx,QWORD PTR [rip+0x83a5]        # 0x140015580
   14000d1db:	mov    DWORD PTR [rip+0x84c7],eax        # 0x1400156a8
   14000d1e1:	mov    rax,QWORD PTR [rip+0x83a0]        # 0x140015588
   14000d1e8:	mov    DWORD PTR [rip+0x84c6],0x1388        # 0x1400156b8
   14000d1f2:	mov    DWORD PTR [rip+0x84c0],0x3e8        # 0x1400156bc
   14000d1fc:	mov    BYTE PTR [rip+0x84bd],0x1        # 0x1400156c0
   14000d203:	mov    BYTE PTR [rip+0x84b8],0x0        # 0x1400156c2
   14000d20a:	jmp    0x14000d224
   14000d20c:	mov    rdx,QWORD PTR [rbx]
   14000d20f:	test   rdx,rdx
   14000d212:	je     0x14000d220
   14000d214:	mov    cl,0x1
   14000d216:	call   QWORD PTR [rdx+0x38]
   14000d219:	mov    rax,QWORD PTR [rip+0x8368]        # 0x140015588
   14000d220:	add    rbx,0x8
   14000d224:	cmp    rbx,rax
   14000d227:	jb     0x14000d20c
   14000d229:	lea    rax,[rip+0x3998]        # 0x140010bc8
   14000d230:	lea    rcx,[rip+0x91]        # 0x14000d2c8
   14000d237:	mov    QWORD PTR [rip+0x8422],rax        # 0x140015660
   14000d23e:	add    rsp,0x20
   14000d242:	pop    rbx
   14000d243:	jmp    0x140003e28
   14000d248:	int3   
   14000d249:	int3   
   14000d24a:	int3   
   14000d24b:	int3   
   14000d24c:	int3   
   14000d24d:	int3   
   14000d24e:	int3   
   14000d24f:	int3   
   14000d250:	sub    rsp,0x28
   14000d254:	lea    rcx,[rip+0x8315]        # 0x140015570
   14000d25b:	call   0x14000c79c
   14000d260:	lea    rcx,[rip+0xc5]        # 0x14000d32c
   14000d267:	add    rsp,0x28
   14000d26b:	jmp    0x140003e28
   14000d270:	int3   
   14000d271:	int3   
   14000d272:	int3   
   14000d273:	int3   
   14000d274:	int3   
   14000d275:	int3   
   14000d276:	int3   
   14000d277:	int3   
   14000d278:	sub    rsp,0x28
   14000d27c:	call   QWORD PTR [rip+0xf3e]        # 0x14000e1c0
   14000d282:	lea    rcx,[rip+0x36b7]        # 0x140010940
   14000d289:	mov    BYTE PTR [rip+0x8338],0x0        # 0x1400155c8
   14000d290:	mov    QWORD PTR [rip+0x8321],rcx        # 0x1400155b8
   14000d297:	lea    rcx,[rip+0xa2]        # 0x14000d340
   14000d29e:	mov    QWORD PTR [rip+0x831b],rax        # 0x1400155c0
   14000d2a5:	add    rsp,0x28
   14000d2a9:	jmp    0x140003e28
   14000d2ae:	int3   
   14000d2af:	int3   
   14000d2b0:	int3   
   14000d2b1:	int3   
   14000d2b2:	int3   
   14000d2b3:	int3   
   14000d2b4:	lea    rcx,[rip+0xbd]        # 0x14000d378
   14000d2bb:	jmp    0x140003e28
   14000d2c0:	int3   
   14000d2c1:	int3   
   14000d2c2:	int3   
   14000d2c3:	int3   
   14000d2c4:	int3   
   14000d2c5:	int3   
   14000d2c6:	int3   
   14000d2c7:	int3   
   14000d2c8:	rex push rbx
   14000d2ca:	sub    rsp,0x20
   14000d2ce:	mov    rbx,QWORD PTR [rip+0x82ab]        # 0x140015580
   14000d2d5:	mov    rax,QWORD PTR [rip+0x82ac]        # 0x140015588
   14000d2dc:	jmp    0x14000d2f6
   14000d2de:	mov    rdx,QWORD PTR [rbx]
   14000d2e1:	test   rdx,rdx
   14000d2e4:	je     0x14000d2f2
   14000d2e6:	xor    ecx,ecx
   14000d2e8:	call   QWORD PTR [rdx+0x38]
   14000d2eb:	mov    rax,QWORD PTR [rip+0x8296]        # 0x140015588
   14000d2f2:	add    rbx,0x8
   14000d2f6:	cmp    rbx,rax
   14000d2f9:	jb     0x14000d2de
   14000d2fb:	lea    rcx,[rip+0x835e]        # 0x140015660
   14000d302:	call   0x14000366c
   14000d307:	lea    rcx,[rip+0x8262]        # 0x140015570
   14000d30e:	call   0x1400035f4
   14000d313:	lea    rcx,[rip+0x8346]        # 0x140015660
   14000d31a:	add    rsp,0x20
   14000d31e:	pop    rbx
   14000d31f:	jmp    0x14000366c
   14000d324:	int3   
   14000d325:	int3   
   14000d326:	int3   
   14000d327:	int3   
   14000d328:	int3   
   14000d329:	int3   
   14000d32a:	int3   
   14000d32b:	int3   
   14000d32c:	lea    rcx,[rip+0x823d]        # 0x140015570
   14000d333:	jmp    0x1400035f4
   14000d338:	int3   
   14000d339:	int3   
   14000d33a:	int3   
   14000d33b:	int3   
   14000d33c:	int3   
   14000d33d:	int3   
   14000d33e:	int3   
   14000d33f:	int3   
   14000d340:	sub    rsp,0x28
   14000d344:	cmp    BYTE PTR [rip+0x827d],0x0        # 0x1400155c8
   14000d34b:	lea    rax,[rip+0x35ee]        # 0x140010940
   14000d352:	mov    QWORD PTR [rip+0x825f],rax        # 0x1400155b8
   14000d359:	je     0x14000d36d
   14000d35b:	mov    rcx,QWORD PTR [rip+0x825e]        # 0x1400155c0
   14000d362:	test   rcx,rcx
   14000d365:	je     0x14000d36d
   14000d367:	call   QWORD PTR [rip+0xf6b]        # 0x14000e2d8
   14000d36d:	add    rsp,0x28
   14000d371:	ret    
   14000d372:	int3   
   14000d373:	int3   
   14000d374:	int3   
   14000d375:	int3   
   14000d376:	int3   
   14000d377:	int3   
   14000d378:	lea    rax,[rip+0x35e9]        # 0x140010968
   14000d37f:	mov    QWORD PTR [rip+0x6fc2],rax        # 0x140014348
   14000d386:	ret    

Disassembly of section .rdata:

000000014000e000 <.rdata>:
   14000e000:	clc    
   14000e001:	and    eax,DWORD PTR [rcx]
   14000e003:	add    BYTE PTR [rax],al
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rax],dl
   14000e009:	and    al,0x1
   14000e00b:	add    BYTE PTR [rax],al
   14000e00d:	add    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rax],ah
   14000e011:	and    al,0x1
   14000e013:	add    BYTE PTR [rax],al
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	add    BYTE PTR [rsi],dh
   14000e019:	and    al,0x1
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rax+0x24],al
   14000e022:	add    DWORD PTR [rax],eax
   14000e024:	add    BYTE PTR [rax],al
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	push   rax
   14000e029:	and    al,0x1
   14000e02b:	add    BYTE PTR [rax],al
   14000e02d:	add    BYTE PTR [rax],al
   14000e02f:	add    BYTE PTR [rsi+0x24],bl
   14000e032:	add    DWORD PTR [rax],eax
   14000e034:	add    BYTE PTR [rax],al
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	outs   dx,BYTE PTR ds:[rsi]
   14000e039:	and    al,0x1
   14000e03b:	add    BYTE PTR [rax],al
   14000e03d:	add    BYTE PTR [rax],al
   14000e03f:	add    BYTE PTR [rax+0x24],bh
   14000e042:	add    DWORD PTR [rax],eax
   14000e044:	add    BYTE PTR [rax],al
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	mov    WORD PTR [rcx+rax*1],fs
   14000e04b:	add    BYTE PTR [rax],al
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rdx+0x124],ch
   14000e055:	add    BYTE PTR [rax],al
   14000e057:	add    al,cl
   14000e059:	and    al,0x1
   14000e05b:	add    BYTE PTR [rax],al
   14000e05d:	add    BYTE PTR [rax],al
   14000e05f:	add    dh,ah
   14000e061:	and    al,0x1
   14000e063:	add    BYTE PTR [rax],al
   14000e065:	add    BYTE PTR [rax],al
   14000e067:	add    BYTE PTR ds:0x1,al
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	and    BYTE PTR [rip+0x1],ah        # 0x14000e077
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	cmp    al,0x25
   14000e07a:	add    DWORD PTR [rax],eax
   14000e07c:	add    BYTE PTR [rax],al
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	pop    rax
   14000e081:	and    eax,0x1
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	js     0x14000e0af
   14000e08a:	add    DWORD PTR [rax],eax
   14000e08c:	add    BYTE PTR [rax],al
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	mov    ah,BYTE PTR [rip+0x1]        # 0x14000e097
	...
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	mov    eax,0x125
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	add    al,cl
   14000e0a9:	and    eax,0x1
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	lock and eax,0x1
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	or     BYTE PTR [rsi],ah
   14000e0ba:	add    DWORD PTR [rax],eax
   14000e0bc:	add    BYTE PTR [rax],al
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	(bad)  
   14000e0c1:	add    DWORD PTR es:[rax],eax
   14000e0c4:	add    BYTE PTR [rax],al
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	sub    al,0x26
   14000e0ca:	add    DWORD PTR [rax],eax
   14000e0cc:	add    BYTE PTR [rax],al
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	ds add DWORD PTR es:[rax],eax
   14000e0d4:	add    BYTE PTR [rax],al
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	rex.WRX
   14000e0d9:	add    DWORD PTR es:[rax],eax
   14000e0dc:	add    BYTE PTR [rax],al
   14000e0de:	add    BYTE PTR [rax],al
   14000e0e0:	pop    rdx
   14000e0e1:	add    DWORD PTR es:[rax],eax
   14000e0e4:	add    BYTE PTR [rax],al
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	outs   dx,BYTE PTR ds:[rsi]
   14000e0e9:	add    DWORD PTR es:[rax],eax
   14000e0ec:	add    BYTE PTR [rax],al
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	and    BYTE PTR [rsi],0x1
   14000e0f3:	add    BYTE PTR [rax],al
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rsi+0x126],dl
   14000e0fd:	add    BYTE PTR [rax],al
   14000e0ff:	add    BYTE PTR [rsi+0x126],bl
   14000e105:	add    BYTE PTR [rax],al
   14000e107:	add    BYTE PTR [rsi+0x126],ch
   14000e10d:	add    BYTE PTR [rax],al
   14000e10f:	add    dl,bh
   14000e111:	sub    eax,DWORD PTR [rcx]
   14000e113:	add    BYTE PTR [rax],al
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    ah,ch
   14000e119:	sub    eax,DWORD PTR [rcx]
   14000e11b:	add    BYTE PTR [rax],al
   14000e11d:	add    BYTE PTR [rax],al
   14000e11f:	add    ah,bl
   14000e121:	sub    eax,DWORD PTR [rcx]
   14000e123:	add    BYTE PTR [rax],al
   14000e125:	add    BYTE PTR [rax],al
   14000e127:	add    al,cl
   14000e129:	sub    eax,DWORD PTR [rcx]
   14000e12b:	add    BYTE PTR [rax],al
   14000e12d:	add    BYTE PTR [rax],al
   14000e12f:	add    BYTE PTR [rax+0x12b],bh
   14000e135:	add    BYTE PTR [rax],al
   14000e137:	add    BYTE PTR [rsi+0x12b],ah
   14000e13d:	add    BYTE PTR [rax],al
   14000e13f:	add    BYTE PTR [rsi+0x12b],dl
   14000e145:	add    BYTE PTR [rax],al
   14000e147:	add    BYTE PTR [rdx+0x12b],al
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    BYTE PTR [rax+0x2b],dh
   14000e152:	add    DWORD PTR [rax],eax
   14000e154:	add    BYTE PTR [rax],al
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	(bad)  
   14000e159:	sub    eax,DWORD PTR [rcx]
   14000e15b:	add    BYTE PTR [rax],al
   14000e15d:	add    BYTE PTR [rax],al
   14000e15f:	add    BYTE PTR [rdx+0x2b],dl
   14000e162:	add    DWORD PTR [rax],eax
   14000e164:	add    BYTE PTR [rax],al
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	hlt    
   14000e169:	(bad)  
   14000e16a:	add    DWORD PTR [rax],eax
   14000e16c:	add    BYTE PTR [rax],al
   14000e16e:	add    BYTE PTR [rax],al
   14000e170:	add    al,0x28
   14000e172:	add    DWORD PTR [rax],eax
   14000e174:	add    BYTE PTR [rax],al
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	adc    BYTE PTR [rax],ch
   14000e17a:	add    DWORD PTR [rax],eax
   14000e17c:	add    BYTE PTR [rax],al
   14000e17e:	add    BYTE PTR [rax],al
   14000e180:	sbb    al,0x28
   14000e182:	add    DWORD PTR [rax],eax
   14000e184:	add    BYTE PTR [rax],al
   14000e186:	add    BYTE PTR [rax],al
   14000e188:	sub    al,0x28
   14000e18a:	add    DWORD PTR [rax],eax
   14000e18c:	add    BYTE PTR [rax],al
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	cmp    ch,BYTE PTR [rax]
   14000e192:	add    DWORD PTR [rax],eax
   14000e194:	add    BYTE PTR [rax],al
   14000e196:	add    BYTE PTR [rax],al
   14000e198:	push   rax
   14000e199:	sub    BYTE PTR [rcx],al
   14000e19b:	add    BYTE PTR [rax],al
   14000e19d:	add    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rdx+0x28],ah
   14000e1a2:	add    DWORD PTR [rax],eax
   14000e1a4:	add    BYTE PTR [rax],al
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	js     0x14000e1d2
   14000e1aa:	add    DWORD PTR [rax],eax
   14000e1ac:	add    BYTE PTR [rax],al
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	mov    BYTE PTR [rax],ch
   14000e1b2:	add    DWORD PTR [rax],eax
   14000e1b4:	add    BYTE PTR [rax],al
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	xchg   esp,eax
   14000e1b9:	sub    BYTE PTR [rcx],al
   14000e1bb:	add    BYTE PTR [rax],al
   14000e1bd:	add    BYTE PTR [rax],al
   14000e1bf:	add    BYTE PTR [rdx+0x128],ch
   14000e1c5:	add    BYTE PTR [rax],al
   14000e1c7:	add    BYTE PTR [rax+rbp*1+0x1],bh
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	retf   0x128
   14000e1d3:	add    BYTE PTR [rax],al
   14000e1d5:	add    BYTE PTR [rax],al
   14000e1d7:	add    al,ah
   14000e1d9:	sub    BYTE PTR [rcx],al
   14000e1db:	add    BYTE PTR [rax],al
   14000e1dd:	add    BYTE PTR [rax],al
   14000e1df:	add    dl,dh
   14000e1e1:	sub    BYTE PTR [rcx],al
   14000e1e3:	add    BYTE PTR [rax],al
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    BYTE PTR [rcx+rbp*1],cl
   14000e1ea:	add    DWORD PTR [rax],eax
   14000e1ec:	add    BYTE PTR [rax],al
   14000e1ee:	add    BYTE PTR [rax],al
   14000e1f0:	sub    DWORD PTR es:[rcx],eax
   14000e1f3:	add    BYTE PTR [rax],al
   14000e1f5:	add    BYTE PTR [rax],al
   14000e1f7:	add    BYTE PTR [rax],bh
   14000e1f9:	sub    DWORD PTR [rcx],eax
   14000e1fb:	add    BYTE PTR [rax],al
   14000e1fd:	add    BYTE PTR [rax],al
   14000e1ff:	add    BYTE PTR [rdx+0x29],dl
   14000e202:	add    DWORD PTR [rax],eax
   14000e204:	add    BYTE PTR [rax],al
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	ins    BYTE PTR es:[rdi],dx
   14000e209:	sub    DWORD PTR [rcx],eax
   14000e20b:	add    BYTE PTR [rax],al
   14000e20d:	add    BYTE PTR [rax],al
   14000e20f:	add    BYTE PTR [rax+0x129],al
   14000e215:	add    BYTE PTR [rax],al
   14000e217:	add    BYTE PTR [rdx+0x129],bl
   14000e21d:	add    BYTE PTR [rax],al
   14000e21f:	add    BYTE PTR [rsi+0x129],ch
   14000e225:	add    BYTE PTR [rax],al
   14000e227:	add    dl,cl
   14000e229:	sub    DWORD PTR [rcx],eax
   14000e22b:	add    BYTE PTR [rax],al
   14000e22d:	add    BYTE PTR [rax],al
   14000e22f:	add    al,ch
   14000e231:	sub    DWORD PTR [rcx],eax
   14000e233:	add    BYTE PTR [rax],al
   14000e235:	add    BYTE PTR [rax],al
   14000e237:	add    ah,dh
   14000e239:	sub    DWORD PTR [rcx],eax
   14000e23b:	add    BYTE PTR [rax],al
   14000e23d:	add    BYTE PTR [rax],al
   14000e23f:	add    BYTE PTR [rdx],al
   14000e241:	sub    al,BYTE PTR [rcx]
   14000e243:	add    BYTE PTR [rax],al
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	add    BYTE PTR [rax],dl
   14000e249:	sub    al,BYTE PTR [rcx]
   14000e24b:	add    BYTE PTR [rax],al
   14000e24d:	add    BYTE PTR [rax],al
   14000e24f:	add    BYTE PTR [rdx],bl
   14000e251:	sub    al,BYTE PTR [rcx]
   14000e253:	add    BYTE PTR [rax],al
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    BYTE PTR [rsi],ch
   14000e259:	sub    al,BYTE PTR [rcx]
   14000e25b:	add    BYTE PTR [rax],al
   14000e25d:	add    BYTE PTR [rax],al
   14000e25f:	add    BYTE PTR [rdx+0x2a],al
   14000e262:	add    DWORD PTR [rax],eax
   14000e264:	add    BYTE PTR [rax],al
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	push   rax
   14000e269:	sub    al,BYTE PTR [rcx]
   14000e26b:	add    BYTE PTR [rax],al
   14000e26d:	add    BYTE PTR [rax],al
   14000e26f:	add    BYTE PTR [rdx+rbp*1+0x1],ah
   14000e273:	add    BYTE PTR [rax],al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    BYTE PTR [rax+0x12a],al
   14000e27d:	add    BYTE PTR [rax],al
   14000e27f:	add    BYTE PTR [rdx+rbp*1+0x1],dl
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	movabs al,ds:0xb80000000000012a
   14000e291:	sub    al,BYTE PTR [rcx]
   14000e293:	add    BYTE PTR [rax],al
   14000e295:	add    BYTE PTR [rax],al
   14000e297:	add    al,dl
   14000e299:	sub    al,BYTE PTR [rcx]
   14000e29b:	add    BYTE PTR [rax],al
   14000e29d:	add    BYTE PTR [rax],al
   14000e29f:	add    dl,ah
   14000e2a1:	sub    al,BYTE PTR [rcx]
   14000e2a3:	add    BYTE PTR [rax],al
   14000e2a5:	add    BYTE PTR [rax],al
   14000e2a7:	add    ah,ch
   14000e2a9:	sub    al,BYTE PTR [rcx]
   14000e2ab:	add    BYTE PTR [rax],al
   14000e2ad:	add    BYTE PTR [rax],al
   14000e2af:	add    al,bh
   14000e2b1:	sub    al,BYTE PTR [rcx]
   14000e2b3:	add    BYTE PTR [rax],al
   14000e2b5:	add    BYTE PTR [rax],al
   14000e2b7:	add    BYTE PTR [rbx+rbp*1],al
   14000e2ba:	add    DWORD PTR [rax],eax
   14000e2bc:	add    BYTE PTR [rax],al
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	(bad)  
   14000e2c1:	sub    eax,DWORD PTR [rcx]
   14000e2c3:	add    BYTE PTR [rax],al
   14000e2c5:	add    BYTE PTR [rax],al
   14000e2c7:	add    BYTE PTR [rbx+rbp*1],ch
   14000e2ca:	add    DWORD PTR [rax],eax
   14000e2cc:	add    BYTE PTR [rax],al
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	cmp    al,0x2b
   14000e2d2:	add    DWORD PTR [rax],eax
   14000e2d4:	add    BYTE PTR [rax],al
   14000e2d6:	add    BYTE PTR [rax],al
   14000e2d8:	sbb    BYTE PTR [rcx+rax*1],ch
	...
   14000e2e7:	add    BYTE PTR [rdi+riz*1+0x1],bl
   14000e2ee:	add    BYTE PTR [rax],al
   14000e2f0:	mov    dl,0x27
   14000e2f2:	add    DWORD PTR [rax],eax
   14000e2f4:	add    BYTE PTR [rax],al
   14000e2f6:	add    BYTE PTR [rax],al
   14000e2f8:	shl    BYTE PTR [rdi],0x1
   14000e2fb:	add    BYTE PTR [rax],al
   14000e2fd:	add    BYTE PTR [rax],al
   14000e2ff:	add    ah,dl
   14000e301:	(bad)  
   14000e302:	add    DWORD PTR [rax],eax
	...
   14000e310:	push   rax
   14000e311:	(bad)  
   14000e312:	add    DWORD PTR [rax],eax
   14000e314:	add    BYTE PTR [rax],al
   14000e316:	add    BYTE PTR [rax],al
   14000e318:	push   0x127
   14000e31d:	add    BYTE PTR [rax],al
   14000e31f:	add    BYTE PTR [rsi],ah
   14000e321:	(bad)  
   14000e322:	add    DWORD PTR [rax],eax
   14000e324:	add    BYTE PTR [rax],al
   14000e326:	add    BYTE PTR [rax],al
   14000e328:	or     al,0x27
   14000e32a:	add    DWORD PTR [rax],eax
   14000e32c:	add    BYTE PTR [rax],al
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	hlt    
   14000e331:	add    DWORD PTR es:[rax],eax
   14000e334:	add    BYTE PTR [rax],al
   14000e336:	add    BYTE PTR [rax],al
   14000e338:	fsub   QWORD PTR [rsi]
   14000e33a:	add    DWORD PTR [rax],eax
   14000e33c:	add    BYTE PTR [rax],al
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	int3   
   14000e341:	add    DWORD PTR es:[rax],eax
   14000e344:	add    BYTE PTR [rax],al
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	jle    0x14000e371
   14000e34a:	add    DWORD PTR [rax],eax
   14000e34c:	add    BYTE PTR [rax],al
   14000e34e:	add    BYTE PTR [rax],al
   14000e350:	ds (bad) 
   14000e352:	add    DWORD PTR [rax],eax
	...
   14000e368:	push   rax
   14000e369:	rol    BYTE PTR [rax],cl
   14000e36b:	rex add DWORD PTR [rax],eax
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	js     0x14000e344
   14000e372:	add    BYTE PTR [rax+0x1],al
   14000e375:	add    BYTE PTR [rax],al
   14000e377:	add    BYTE PTR [rdx+rdx*8+0x14000],dh
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	rex.R rol DWORD PTR [rax],1
   14000e383:	rex add DWORD PTR [rax],eax
	...
   14000e396:	add    BYTE PTR [rax],al
   14000e398:	int3   
   14000e399:	cmp    al,0x0
   14000e39b:	rex add DWORD PTR [rax],eax
   14000e39e:	add    BYTE PTR [rax],al
   14000e3a0:	push   0x1400078
   14000e3a5:	add    BYTE PTR [rax],al
   14000e3a7:	add    al,ch
   14000e3a9:	mov    eax,DWORD PTR [rax]
   14000e3ab:	rex add DWORD PTR [rax],eax
   14000e3ae:	add    BYTE PTR [rax],al
   14000e3b0:	in     al,dx
   14000e3b1:	movabs ds:0x3f28000000014000,eax
   14000e3ba:	add    BYTE PTR [rax+0x1],al
	...
   14000e3cd:	add    BYTE PTR [rax],al
   14000e3cf:	add    ah,al
   14000e3d1:	mov    ah,0x0
   14000e3d3:	rex add DWORD PTR [rax],eax
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	xor    bh,al
   14000e3da:	add    BYTE PTR [rax+0x1],al
   14000e3dd:	add    BYTE PTR [rax],al
   14000e3df:	add    BYTE PTR [rax+0x140008c],cl
	...
   14000e401:	add    BYTE PTR [rax],al
   14000e403:	add    BYTE PTR [rdi-0x44],dl
   14000e406:	adc    DWORD PTR [rax+0x0],edx
   14000e409:	add    BYTE PTR [rax],al
   14000e40b:	add    BYTE PTR [rdx],al
   14000e40d:	add    BYTE PTR [rax],al
   14000e40f:	add    BYTE PTR [rsi],ch
   14000e411:	add    BYTE PTR [rax],al
   14000e413:	add    BYTE PTR [rax-0x7ffffef2],al
   14000e419:	test   BYTE PTR [rax],0x0
   14000e41c:	add    BYTE PTR [rax],al
   14000e41e:	add    BYTE PTR [rax],al
   14000e420:	push   rdi
   14000e421:	mov    esp,0x5011
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	or     al,0x0
   14000e42a:	add    BYTE PTR [rax],al
   14000e42c:	adc    BYTE PTR [rax],al
   14000e42e:	add    BYTE PTR [rax],al
   14000e430:	mov    al,0xe
   14000e432:	add    DWORD PTR [rax],eax
   14000e434:	mov    al,0xf6
   14000e436:	add    BYTE PTR [rax],al
   14000e438:	and    al,BYTE PTR [rip+0x21993]        # 0x14002fdd1
   14000e43e:	add    BYTE PTR [rax],al
   14000e440:	or     al,0x11
   14000e442:	add    DWORD PTR [rax],eax
   14000e444:	add    DWORD PTR [rax],eax
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	sbb    al,0x11
   14000e44a:	add    DWORD PTR [rax],eax
   14000e44c:	(bad)  
   14000e44d:	add    BYTE PTR [rax],al
   14000e44f:	add    BYTE PTR [rcx+rdx*1+0x1],al
   14000e453:	add    BYTE PTR [rax],ah
   14000e455:	add    BYTE PTR [rax],al
   14000e457:	add    BYTE PTR [rax],al
   14000e459:	add    BYTE PTR [rax],al
   14000e45b:	add    BYTE PTR [rcx],al
   14000e45d:	add    BYTE PTR [rax],al
   14000e45f:	add    al,al
   14000e461:	(bad)  
   14000e462:	add    DWORD PTR [rax+0x1],eax
   14000e465:	add    BYTE PTR [rax],al
   14000e467:	add    BYTE PTR [rbx+rdi*1],cl
   14000e46a:	add    BYTE PTR [rax+0x1],al
   14000e46d:	add    BYTE PTR [rax],al
   14000e46f:	add    BYTE PTR [rax+0x140010f],cl
   14000e475:	add    BYTE PTR [rax],al
   14000e477:	add    BYTE PTR [rsp+rdi*1+0x14000],cl
   14000e47e:	add    BYTE PTR [rax],al
   14000e480:	cwde   
   14000e481:	outs   dx,BYTE PTR ds:[rsi]
   14000e482:	add    BYTE PTR [rax+0x1],al
   14000e485:	add    BYTE PTR [rax],al
   14000e487:	add    BYTE PTR [rdx+0x61],ah
   14000e48a:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000e48e:	ins    BYTE PTR es:[rdi],dx
   14000e48f:	outs   dx,DWORD PTR ds:[rsi]
   14000e490:	movsxd esp,DWORD PTR [rcx+0x74]
   14000e493:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000e49a:	add    BYTE PTR [rax],al
   14000e49c:	add    BYTE PTR [rax],al
   14000e49e:	add    BYTE PTR [rax],al
   14000e4a0:	add    eax,0xbc00000
	...
   14000e4ad:	add    BYTE PTR [rax],al
   14000e4af:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c0e4b5
	...
   14000e4bd:	add    BYTE PTR [rax],al
   14000e4bf:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14000e4cd:	add    BYTE PTR [rax],al
   14000e4cf:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14000e4dd:	add    BYTE PTR [rax],al
   14000e4df:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14000e4ed:	add    BYTE PTR [rax],al
   14000e4ef:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14000e4fd:	add    BYTE PTR [rax],al
   14000e4ff:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14000e50d:	add    BYTE PTR [rax],al
   14000e50f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14000e51d:	add    BYTE PTR [rax],al
   14000e51f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14000e52d:	add    BYTE PTR [rax],al
   14000e52f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14000e53d:	add    BYTE PTR [rax],al
   14000e53f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14000e54e:	add    BYTE PTR [rax],al
   14000e550:	mov    ch,0x2
   14000e552:	add    al,al
   14000e554:	or     BYTE PTR [rax],al
	...
   14000e55e:	add    BYTE PTR [rax],al
   14000e560:	or     al,0x0
   14000e562:	add    BYTE PTR [rax],al
   14000e564:	rol    BYTE PTR [rax],0x0
   14000e567:	add    BYTE PTR [rbx],al
   14000e569:	add    BYTE PTR [rax],al
   14000e56b:	add    BYTE PTR [rcx],cl
   14000e56d:	add    BYTE PTR [rax],al
   14000e56f:	add    BYTE PTR [rbp+0x0],ch
   14000e572:	jae    0x14000e574
   14000e574:	movsxd eax,DWORD PTR [rax]
   14000e576:	outs   dx,DWORD PTR ds:[rsi]
   14000e577:	add    BYTE PTR [rdx+0x0],dh
   14000e57a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000e57e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000e583:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e587:	add    BYTE PTR [rbx+0x6f],al
   14000e58a:	jb     0x14000e5d1
   14000e58c:	js     0x14000e5f7
   14000e58e:	je     0x14000e5e0
   14000e590:	jb     0x14000e601
   14000e592:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e595:	jae    0x14000e597
	...
   14000e59f:	add    BYTE PTR [rdx],al
   14000e5a1:	add    BYTE PTR [rax],al
   14000e5a3:	add    BYTE PTR [rax],al
   14000e5a5:	add    BYTE PTR [rax],al
   14000e5a7:	add    BYTE PTR [rax],dl
   14000e5a9:	out    0x0,eax
   14000e5ab:	rex add DWORD PTR [rax],eax
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	or     BYTE PTR [rax],al
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	add    BYTE PTR [rax],al
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	jo     0x14000e5a1
   14000e5ba:	add    BYTE PTR [rax+0x1],al
   14000e5bd:	add    BYTE PTR [rax],al
   14000e5bf:	add    BYTE PTR [rcx],cl
   14000e5c1:	add    BYTE PTR [rax],al
   14000e5c3:	add    BYTE PTR [rax],al
   14000e5c5:	add    BYTE PTR [rax],al
   14000e5c7:	add    al,dl
   14000e5c9:	out    0x0,eax
   14000e5cb:	rex add DWORD PTR [rax],eax
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	or     al,BYTE PTR [rax]
   14000e5d2:	add    BYTE PTR [rax],al
   14000e5d4:	add    BYTE PTR [rax],al
   14000e5d6:	add    BYTE PTR [rax],al
   14000e5d8:	xor    al,ch
   14000e5da:	add    BYTE PTR [rax+0x1],al
   14000e5dd:	add    BYTE PTR [rax],al
   14000e5df:	add    BYTE PTR [rax],dl
   14000e5e1:	add    BYTE PTR [rax],al
   14000e5e3:	add    BYTE PTR [rax],al
   14000e5e5:	add    BYTE PTR [rax],al
   14000e5e7:	add    BYTE PTR [rax+0x14000e8],al
   14000e5ed:	add    BYTE PTR [rax],al
   14000e5ef:	add    BYTE PTR [rcx],dl
   14000e5f1:	add    BYTE PTR [rax],al
   14000e5f3:	add    BYTE PTR [rax],al
   14000e5f5:	add    BYTE PTR [rax],al
   14000e5f7:	add    al,ah
   14000e5f9:	call   0x1400225fe
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	adc    al,BYTE PTR [rax]
   14000e602:	add    BYTE PTR [rax],al
   14000e604:	add    BYTE PTR [rax],al
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	rex jmp 0x14002260e
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	adc    eax,DWORD PTR [rax]
   14000e612:	add    BYTE PTR [rax],al
   14000e614:	add    BYTE PTR [rax],al
   14000e616:	add    BYTE PTR [rax],al
   14000e618:	nop
   14000e619:	jmp    0x14002261e
   14000e61e:	add    BYTE PTR [rax],al
   14000e620:	sbb    BYTE PTR [rax],al
   14000e622:	add    BYTE PTR [rax],al
   14000e624:	add    BYTE PTR [rax],al
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	lock jmp 0x14002262e
   14000e62e:	add    BYTE PTR [rax],al
   14000e630:	sbb    DWORD PTR [rax],eax
   14000e632:	add    BYTE PTR [rax],al
   14000e634:	add    BYTE PTR [rax],al
   14000e636:	add    BYTE PTR [rax],al
   14000e638:	(bad)  
   14000e639:	(bad)  
   14000e63a:	add    BYTE PTR [rax+0x1],al
   14000e63d:	add    BYTE PTR [rax],al
   14000e63f:	add    BYTE PTR [rdx],bl
   14000e641:	add    BYTE PTR [rax],al
   14000e643:	add    BYTE PTR [rax],al
   14000e645:	add    BYTE PTR [rax],al
   14000e647:	add    BYTE PTR [rax+0x14000ea],dh
   14000e64d:	add    BYTE PTR [rax],al
   14000e64f:	add    BYTE PTR [rbx],bl
   14000e651:	add    BYTE PTR [rax],al
   14000e653:	add    BYTE PTR [rax],al
   14000e655:	add    BYTE PTR [rax],al
   14000e657:	add    BYTE PTR [rax],ah
   14000e659:	jmp    0x14000e65b
   14000e65b:	rex add DWORD PTR [rax],eax
   14000e65e:	add    BYTE PTR [rax],al
   14000e660:	sbb    al,0x0
   14000e662:	add    BYTE PTR [rax],al
   14000e664:	add    BYTE PTR [rax],al
   14000e666:	add    BYTE PTR [rax],al
   14000e668:	nop
   14000e669:	jmp    0x14000e66b
   14000e66b:	rex add DWORD PTR [rax],eax
   14000e66e:	add    BYTE PTR [rax],al
   14000e670:	(bad)  
   14000e671:	add    BYTE PTR [rax],al
   14000e673:	add    BYTE PTR [rax],al
   14000e675:	add    BYTE PTR [rax],al
   14000e677:	add    al,ah
   14000e679:	jmp    0x14000e67b
   14000e67b:	rex add DWORD PTR [rax],eax
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	(bad)  
   14000e681:	add    BYTE PTR [rax],al
   14000e683:	add    BYTE PTR [rax],al
   14000e685:	add    BYTE PTR [rax],al
   14000e687:	add    BYTE PTR [rax],ah
   14000e689:	in     al,dx
   14000e68a:	add    BYTE PTR [rax+0x1],al
   14000e68d:	add    BYTE PTR [rax],al
   14000e68f:	add    BYTE PTR [rax],ah
   14000e691:	add    BYTE PTR [rax],al
   14000e693:	add    BYTE PTR [rax],al
   14000e695:	add    BYTE PTR [rax],al
   14000e697:	add    al,dh
   14000e699:	in     al,dx
   14000e69a:	add    BYTE PTR [rax+0x1],al
   14000e69d:	add    BYTE PTR [rax],al
   14000e69f:	add    BYTE PTR [rcx],ah
   14000e6a1:	add    BYTE PTR [rax],al
   14000e6a3:	add    BYTE PTR [rax],al
   14000e6a5:	add    BYTE PTR [rax],al
   14000e6a7:	add    BYTE PTR [rax-0x13],ah
   14000e6aa:	add    BYTE PTR [rax+0x1],al
   14000e6ad:	add    BYTE PTR [rax],al
   14000e6af:	add    BYTE PTR [rdx],ah
   14000e6b1:	add    BYTE PTR [rax],al
   14000e6b3:	add    BYTE PTR [rax],al
   14000e6b5:	add    BYTE PTR [rax],al
   14000e6b7:	add    BYTE PTR [rax-0x11],dl
   14000e6ba:	add    BYTE PTR [rax+0x1],al
   14000e6bd:	add    BYTE PTR [rax],al
   14000e6bf:	add    BYTE PTR [rax+0x0],bh
   14000e6c2:	add    BYTE PTR [rax],al
   14000e6c4:	add    BYTE PTR [rax],al
   14000e6c6:	add    BYTE PTR [rax],al
   14000e6c8:	mov    eax,0x14000ef
   14000e6cd:	add    BYTE PTR [rax],al
   14000e6cf:	add    BYTE PTR [rcx+0x0],bh
   14000e6d2:	add    BYTE PTR [rax],al
   14000e6d4:	add    BYTE PTR [rax],al
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	fsubr  st,st(7)
   14000e6da:	add    BYTE PTR [rax+0x1],al
   14000e6dd:	add    BYTE PTR [rax],al
   14000e6df:	add    BYTE PTR [rdx+0x0],bh
   14000e6e2:	add    BYTE PTR [rax],al
   14000e6e4:	add    BYTE PTR [rax],al
   14000e6e6:	add    BYTE PTR [rax],al
   14000e6e8:	clc    
   14000e6e9:	out    dx,eax
   14000e6ea:	add    BYTE PTR [rax+0x1],al
   14000e6ed:	add    BYTE PTR [rax],al
   14000e6ef:	add    ah,bh
   14000e6f1:	add    BYTE PTR [rax],al
   14000e6f3:	add    BYTE PTR [rax],al
   14000e6f5:	add    BYTE PTR [rax],al
   14000e6f7:	add    BYTE PTR [rax+rsi*8],dl
   14000e6fa:	add    BYTE PTR [rax+0x1],al
   14000e6fd:	add    BYTE PTR [rax],al
   14000e6ff:	add    bh,bh
   14000e701:	add    BYTE PTR [rax],al
   14000e703:	add    BYTE PTR [rax],al
   14000e705:	add    BYTE PTR [rax],al
   14000e707:	add    BYTE PTR [rax],ah
   14000e709:	lock add BYTE PTR [rax+0x1],al
   14000e70d:	add    BYTE PTR [rax],al
   14000e70f:	add    BYTE PTR [rdx+0x0],dl
   14000e712:	add    BYTE PTR ss:[rax],dh
   14000e715:	add    BYTE PTR [rax],dh
   14000e717:	add    BYTE PTR [rdx],dh
   14000e719:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f11f
   14000e71f:	add    BYTE PTR [rax],ah
   14000e721:	add    BYTE PTR [rsi+0x0],ah
   14000e724:	ins    BYTE PTR es:[rdi],dx
   14000e725:	add    BYTE PTR [rdi+0x0],ch
   14000e728:	(bad)  
   14000e729:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e72d:	add    BYTE PTR [rsi+0x0],ch
   14000e730:	add    BYTE PTR [eax],ah
   14000e733:	add    BYTE PTR [rax+0x0],dh
   14000e736:	outs   dx,DWORD PTR ds:[rsi]
   14000e737:	add    BYTE PTR [rcx+0x0],ch
   14000e73a:	outs   dx,BYTE PTR ds:[rsi]
   14000e73b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e73f:	add    BYTE PTR [rbx+0x0],dh
   14000e742:	jne    0x14000e744
   14000e744:	jo     0x14000e746
   14000e746:	jo     0x14000e748
   14000e748:	outs   dx,DWORD PTR ds:[rsi]
   14000e749:	add    BYTE PTR [rdx+0x0],dh
   14000e74c:	je     0x14000e74e
   14000e74e:	and    BYTE PTR [rax],al
   14000e750:	outs   dx,BYTE PTR ds:[rsi]
   14000e751:	add    BYTE PTR [rdi+0x0],ch
   14000e754:	je     0x14000e756
   14000e756:	and    BYTE PTR [rax],al
   14000e758:	ins    BYTE PTR es:[rdi],dx
   14000e759:	add    BYTE PTR [rdi+0x0],ch
   14000e75c:	(bad)  
   14000e75d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e761:	add    BYTE PTR [rax+rax*1+0xd],ah
   14000e765:	add    BYTE PTR [rdx],cl
	...
   14000e76f:	add    BYTE PTR [rdx+0x0],dl
   14000e772:	add    BYTE PTR ss:[rax],dh
   14000e775:	add    BYTE PTR [rax],dh
   14000e777:	add    BYTE PTR [rax],bh
   14000e779:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f17f
   14000e77f:	add    BYTE PTR [rax],ah
   14000e781:	add    BYTE PTR [rsi+0x0],ch
   14000e784:	outs   dx,DWORD PTR ds:[rsi]
   14000e785:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e789:	add    BYTE PTR [rbp+0x0],ah
   14000e78c:	outs   dx,BYTE PTR ds:[rsi]
   14000e78d:	add    BYTE PTR [rdi+0x0],ch
   14000e790:	jne    0x14000e792
   14000e792:	add    BYTE PTR [eax+0x0],ch
   14000e796:	and    BYTE PTR [rax],al
   14000e798:	jae    0x14000e79a
   14000e79a:	jo     0x14000e79c
   14000e79c:	(bad)  
   14000e79d:	add    BYTE PTR [rbx+0x0],ah
   14000e7a0:	add    BYTE PTR gs:[rax],ah
   14000e7a3:	add    BYTE PTR [rsi+0x0],ah
   14000e7a6:	outs   dx,DWORD PTR ds:[rsi]
   14000e7a7:	add    BYTE PTR [rdx+0x0],dh
   14000e7aa:	and    BYTE PTR [rax],al
   14000e7ac:	(bad)  
   14000e7ad:	add    BYTE PTR [rdx+0x0],dh
   14000e7b0:	add    BYTE PTR [ebp+0x0],dh
   14000e7b4:	ins    DWORD PTR es:[rdi],dx
   14000e7b5:	add    BYTE PTR [rbp+0x0],ah
   14000e7b8:	outs   dx,BYTE PTR ds:[rsi]
   14000e7b9:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000e7bd:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f1c3
	...
   14000e7cf:	add    BYTE PTR [rdx+0x0],dl
   14000e7d2:	add    BYTE PTR ss:[rax],dh
   14000e7d5:	add    BYTE PTR [rax],dh
   14000e7d7:	add    BYTE PTR [rcx],bh
   14000e7d9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f1df
   14000e7df:	add    BYTE PTR [rax],ah
   14000e7e1:	add    BYTE PTR [rsi+0x0],ch
   14000e7e4:	outs   dx,DWORD PTR ds:[rsi]
   14000e7e5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e7e9:	add    BYTE PTR [rbp+0x0],ah
   14000e7ec:	outs   dx,BYTE PTR ds:[rsi]
   14000e7ed:	add    BYTE PTR [rdi+0x0],ch
   14000e7f0:	jne    0x14000e7f2
   14000e7f2:	add    BYTE PTR [eax+0x0],ch
   14000e7f6:	and    BYTE PTR [rax],al
   14000e7f8:	jae    0x14000e7fa
   14000e7fa:	jo     0x14000e7fc
   14000e7fc:	(bad)  
   14000e7fd:	add    BYTE PTR [rbx+0x0],ah
   14000e800:	add    BYTE PTR gs:[rax],ah
   14000e803:	add    BYTE PTR [rsi+0x0],ah
   14000e806:	outs   dx,DWORD PTR ds:[rsi]
   14000e807:	add    BYTE PTR [rdx+0x0],dh
   14000e80a:	and    BYTE PTR [rax],al
   14000e80c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e810:	jbe    0x14000e812
   14000e812:	imul   eax,DWORD PTR [rax],0x6f0072
   14000e818:	outs   dx,BYTE PTR ds:[rsi]
   14000e819:	add    BYTE PTR [rbp+0x0],ch
   14000e81c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e820:	je     0x14000e822
   14000e822:	or     eax,0xa00
	...
   14000e82f:	add    BYTE PTR [rdx+0x0],dl
   14000e832:	add    BYTE PTR ss:[rax],dh
   14000e835:	add    BYTE PTR [rcx],dh
   14000e837:	add    BYTE PTR [rax],dh
   14000e839:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f23f
   14000e83f:	add    BYTE PTR [rax],ah
   14000e841:	add    BYTE PTR [rcx+0x0],ah
   14000e844:	(bad)  
   14000e845:	add    BYTE PTR [rdi+0x0],ch
   14000e848:	jb     0x14000e84a
   14000e84a:	je     0x14000e84c
   14000e84c:	sub    BYTE PTR [rax],al
   14000e84e:	sub    DWORD PTR [rax],eax
   14000e850:	and    BYTE PTR [rax],al
   14000e852:	push   0x73006100
   14000e857:	add    BYTE PTR [rax],ah
   14000e859:	add    BYTE PTR [rdx+0x0],ah
   14000e85c:	add    BYTE PTR gs:[rbp+0x0],ah
   14000e860:	outs   dx,BYTE PTR ds:[rsi]
   14000e861:	add    BYTE PTR [rax],ah
   14000e863:	add    BYTE PTR [rbx+0x0],ah
   14000e866:	(bad)  
   14000e867:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000e86b:	add    BYTE PTR [rbp+0x0],ah
   14000e86e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14000f275
	...
   14000e87d:	add    BYTE PTR [rax],al
   14000e87f:	add    BYTE PTR [rdx+0x0],dl
   14000e882:	add    BYTE PTR ss:[rax],dh
   14000e885:	add    BYTE PTR [rcx],dh
   14000e887:	add    BYTE PTR [rsi],dh
   14000e889:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f28f
   14000e88f:	add    BYTE PTR [rax],ah
   14000e891:	add    BYTE PTR [rsi+0x0],ch
   14000e894:	outs   dx,DWORD PTR ds:[rsi]
   14000e895:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e899:	add    BYTE PTR [rbp+0x0],ah
   14000e89c:	outs   dx,BYTE PTR ds:[rsi]
   14000e89d:	add    BYTE PTR [rdi+0x0],ch
   14000e8a0:	jne    0x14000e8a2
   14000e8a2:	add    BYTE PTR [eax+0x0],ch
   14000e8a6:	and    BYTE PTR [rax],al
   14000e8a8:	jae    0x14000e8aa
   14000e8aa:	jo     0x14000e8ac
   14000e8ac:	(bad)  
   14000e8ad:	add    BYTE PTR [rbx+0x0],ah
   14000e8b0:	add    BYTE PTR gs:[rax],ah
   14000e8b3:	add    BYTE PTR [rsi+0x0],ah
   14000e8b6:	outs   dx,DWORD PTR ds:[rsi]
   14000e8b7:	add    BYTE PTR [rdx+0x0],dh
   14000e8ba:	and    BYTE PTR [rax],al
   14000e8bc:	je     0x14000e8be
   14000e8be:	push   0x65007200
   14000e8c3:	add    BYTE PTR [rcx+0x0],ah
   14000e8c6:	add    BYTE PTR fs:[rax],ah
   14000e8c9:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000e8cd:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000e8d1:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f2d7
	...
   14000e8df:	add    BYTE PTR [rdx+0x0],dl
   14000e8e2:	add    BYTE PTR ss:[rax],dh
   14000e8e5:	add    BYTE PTR [rcx],dh
   14000e8e7:	add    BYTE PTR [rdi],dh
   14000e8e9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f2ef
   14000e8ef:	add    BYTE PTR [rax],ah
   14000e8f1:	add    BYTE PTR [rbp+0x0],dh
   14000e8f4:	outs   dx,BYTE PTR ds:[rsi]
   14000e8f5:	add    BYTE PTR [rbp+0x0],ah
   14000e8f8:	js     0x14000e8fa
   14000e8fa:	jo     0x14000e8fc
   14000e8fc:	add    BYTE PTR gs:[rbx+0x0],ah
   14000e900:	je     0x14000e902
   14000e902:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000e907:	add    BYTE PTR [rbp+0x0],ch
   14000e90a:	jne    0x14000e90c
   14000e90c:	ins    BYTE PTR es:[rdi],dx
   14000e90d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e911:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e915:	add    BYTE PTR [rdx+0x0],dh
   14000e918:	add    BYTE PTR gs:[rcx+0x0],ah
   14000e91c:	add    BYTE PTR fs:[rax],ah
   14000e91f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000e923:	add    BYTE PTR [rbx+0x0],ah
   14000e926:	imul   eax,DWORD PTR [rax],0x20
   14000e929:	add    BYTE PTR [rbp+0x0],ah
   14000e92c:	jb     0x14000e92e
   14000e92e:	jb     0x14000e930
   14000e930:	outs   dx,DWORD PTR ds:[rsi]
   14000e931:	add    BYTE PTR [rdx+0x0],dh
   14000e934:	or     eax,0xa00
   14000e939:	add    BYTE PTR [rax],al
   14000e93b:	add    BYTE PTR [rax],al
   14000e93d:	add    BYTE PTR [rax],al
   14000e93f:	add    BYTE PTR [rdx+0x0],dl
   14000e942:	add    BYTE PTR ss:[rax],dh
   14000e945:	add    BYTE PTR [rcx],dh
   14000e947:	add    BYTE PTR [rax],bh
   14000e949:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f34f
   14000e94f:	add    BYTE PTR [rax],ah
   14000e951:	add    BYTE PTR [rbp+0x0],dh
   14000e954:	outs   dx,BYTE PTR ds:[rsi]
   14000e955:	add    BYTE PTR [rbp+0x0],ah
   14000e958:	js     0x14000e95a
   14000e95a:	jo     0x14000e95c
   14000e95c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000e960:	je     0x14000e962
   14000e962:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000e967:	add    BYTE PTR [rax+0x0],ch
   14000e96a:	add    BYTE PTR gs:[rcx+0x0],ah
   14000e96e:	jo     0x14000e970
   14000e970:	and    BYTE PTR [rax],al
   14000e972:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e976:	jb     0x14000e978
   14000e978:	outs   dx,DWORD PTR ds:[rsi]
   14000e979:	add    BYTE PTR [rdx+0x0],dh
   14000e97c:	or     eax,0xa00
	...
   14000e98d:	add    BYTE PTR [rax],al
   14000e98f:	add    BYTE PTR [rdx+0x0],dl
   14000e992:	add    BYTE PTR ss:[rax],dh
   14000e995:	add    BYTE PTR [rcx],dh
   14000e997:	add    BYTE PTR [rcx],bh
   14000e999:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f39f
   14000e99f:	add    BYTE PTR [rax],ah
   14000e9a1:	add    BYTE PTR [rbp+0x0],dh
   14000e9a4:	outs   dx,BYTE PTR ds:[rsi]
   14000e9a5:	add    BYTE PTR [rcx+0x0],ah
   14000e9a8:	(bad)  
   14000e9a9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e9ad:	add    BYTE PTR [rax],ah
   14000e9af:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000e9b3:	add    BYTE PTR [rax],ah
   14000e9b5:	add    BYTE PTR [rdi+0x0],ch
   14000e9b8:	jo     0x14000e9ba
   14000e9ba:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e9be:	and    BYTE PTR [rax],al
   14000e9c0:	movsxd eax,DWORD PTR [rax]
   14000e9c2:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c3:	add    BYTE PTR [rsi+0x0],ch
   14000e9c6:	jae    0x14000e9c8
   14000e9c8:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e9cd:	add    BYTE PTR [rax],ah
   14000e9cf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e9d3:	add    BYTE PTR [rsi+0x0],dh
   14000e9d6:	imul   eax,DWORD PTR [rax],0x650063
   14000e9dc:	or     eax,0xa00
	...
   14000e9ed:	add    BYTE PTR [rax],al
   14000e9ef:	add    BYTE PTR [rdx+0x0],dl
   14000e9f2:	add    BYTE PTR ss:[rax],dh
   14000e9f5:	add    BYTE PTR [rdx],dh
   14000e9f7:	add    BYTE PTR [rax+rax*1],dh
   14000e9fa:	or     eax,0x2d000a00
   14000e9ff:	add    BYTE PTR [rax],ah
   14000ea01:	add    BYTE PTR [rsi+0x0],ch
   14000ea04:	outs   dx,DWORD PTR ds:[rsi]
   14000ea05:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ea09:	add    BYTE PTR [rbp+0x0],ah
   14000ea0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ea0d:	add    BYTE PTR [rdi+0x0],ch
   14000ea10:	jne    0x14000ea12
   14000ea12:	add    BYTE PTR [eax+0x0],ch
   14000ea16:	and    BYTE PTR [rax],al
   14000ea18:	jae    0x14000ea1a
   14000ea1a:	jo     0x14000ea1c
   14000ea1c:	(bad)  
   14000ea1d:	add    BYTE PTR [rbx+0x0],ah
   14000ea20:	add    BYTE PTR gs:[rax],ah
   14000ea23:	add    BYTE PTR [rsi+0x0],ah
   14000ea26:	outs   dx,DWORD PTR ds:[rsi]
   14000ea27:	add    BYTE PTR [rdx+0x0],dh
   14000ea2a:	and    BYTE PTR [rax],al
   14000ea2c:	pop    rdi
   14000ea2d:	add    BYTE PTR [rdi+0x0],ch
   14000ea30:	outs   dx,BYTE PTR ds:[rsi]
   14000ea31:	add    BYTE PTR [rbp+0x0],ah
   14000ea34:	js     0x14000ea36
   14000ea36:	imul   eax,DWORD PTR [rax],0x2f0074
   14000ea3c:	(bad)  
   14000ea3d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ea41:	add    BYTE PTR [rax+0x0],bh
   14000ea44:	imul   eax,DWORD PTR [rax],0x200074
   14000ea4a:	je     0x14000ea4c
   14000ea4c:	(bad)  
   14000ea4d:	add    BYTE PTR [rdx+0x0],ah
   14000ea50:	ins    BYTE PTR es:[rdi],dx
   14000ea51:	add    BYTE PTR [rbp+0x0],ah
   14000ea54:	or     eax,0xa00
   14000ea59:	add    BYTE PTR [rax],al
   14000ea5b:	add    BYTE PTR [rax],al
   14000ea5d:	add    BYTE PTR [rax],al
   14000ea5f:	add    BYTE PTR [rdx+0x0],dl
   14000ea62:	add    BYTE PTR ss:[rax],dh
   14000ea65:	add    BYTE PTR [rdx],dh
   14000ea67:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a00f76d
   14000ea6d:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b0010a73
   14000ea73:	add    BYTE PTR [rbp+0x0],dh
   14000ea76:	jb     0x14000ea78
   14000ea78:	add    BYTE PTR gs:[rax],ah
   14000ea7b:	add    BYTE PTR [rsi+0x0],dh
   14000ea7e:	imul   eax,DWORD PTR [rax],0x740072
   14000ea84:	jne    0x14000ea86
   14000ea86:	(bad)  
   14000ea87:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000ea8b:	add    BYTE PTR [rsi+0x0],ah
   14000ea8e:	jne    0x14000ea90
   14000ea90:	outs   dx,BYTE PTR ds:[rsi]
   14000ea91:	add    BYTE PTR [rbx+0x0],ah
   14000ea94:	je     0x14000ea96
   14000ea96:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ea9c:	and    BYTE PTR [rax],al
   14000ea9e:	movsxd eax,DWORD PTR [rax]
   14000eaa0:	(bad)  
   14000eaa1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eaa5:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f4ab
   14000eaab:	add    BYTE PTR [rax],al
   14000eaad:	add    BYTE PTR [rax],al
   14000eaaf:	add    BYTE PTR [rdx+0x0],dl
   14000eab2:	add    BYTE PTR ss:[rax],dh
   14000eab5:	add    BYTE PTR [rdx],dh
   14000eab7:	add    BYTE PTR [rsi],dh
   14000eab9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f4bf
   14000eabf:	add    BYTE PTR [rax],ah
   14000eac1:	add    BYTE PTR [rsi+0x0],ch
   14000eac4:	outs   dx,DWORD PTR ds:[rsi]
   14000eac5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000eac9:	add    BYTE PTR [rbp+0x0],ah
   14000eacc:	outs   dx,BYTE PTR ds:[rsi]
   14000eacd:	add    BYTE PTR [rdi+0x0],ch
   14000ead0:	jne    0x14000ead2
   14000ead2:	add    BYTE PTR [eax+0x0],ch
   14000ead6:	and    BYTE PTR [rax],al
   14000ead8:	jae    0x14000eada
   14000eada:	jo     0x14000eadc
   14000eadc:	(bad)  
   14000eadd:	add    BYTE PTR [rbx+0x0],ah
   14000eae0:	add    BYTE PTR gs:[rax],ah
   14000eae3:	add    BYTE PTR [rsi+0x0],ah
   14000eae6:	outs   dx,DWORD PTR ds:[rsi]
   14000eae7:	add    BYTE PTR [rdx+0x0],dh
   14000eaea:	and    BYTE PTR [rax],al
   14000eaec:	jae    0x14000eaee
   14000eaee:	je     0x14000eaf0
   14000eaf0:	add    BYTE PTR fs:[rcx+0x0],ch
   14000eaf4:	outs   dx,DWORD PTR ds:[rsi]
   14000eaf5:	add    BYTE PTR [rax],ah
   14000eaf7:	add    BYTE PTR [rcx+0x0],ch
   14000eafa:	outs   dx,BYTE PTR ds:[rsi]
   14000eafb:	add    BYTE PTR [rcx+0x0],ch
   14000eafe:	je     0x14000eb00
   14000eb00:	imul   eax,DWORD PTR [rax],0x6c0061
   14000eb06:	imul   eax,DWORD PTR [rax],0x61007a
   14000eb0c:	je     0x14000eb0e
   14000eb0e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000eb14:	or     eax,0xa00
   14000eb19:	add    BYTE PTR [rax],al
   14000eb1b:	add    BYTE PTR [rax],al
   14000eb1d:	add    BYTE PTR [rax],al
   14000eb1f:	add    BYTE PTR [rdx+0x0],dl
   14000eb22:	add    BYTE PTR ss:[rax],dh
   14000eb25:	add    BYTE PTR [rdx],dh
   14000eb27:	add    BYTE PTR [rdi],dh
   14000eb29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f52f
   14000eb2f:	add    BYTE PTR [rax],ah
   14000eb31:	add    BYTE PTR [rsi+0x0],ch
   14000eb34:	outs   dx,DWORD PTR ds:[rsi]
   14000eb35:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000eb39:	add    BYTE PTR [rbp+0x0],ah
   14000eb3c:	outs   dx,BYTE PTR ds:[rsi]
   14000eb3d:	add    BYTE PTR [rdi+0x0],ch
   14000eb40:	jne    0x14000eb42
   14000eb42:	add    BYTE PTR [eax+0x0],ch
   14000eb46:	and    BYTE PTR [rax],al
   14000eb48:	jae    0x14000eb4a
   14000eb4a:	jo     0x14000eb4c
   14000eb4c:	(bad)  
   14000eb4d:	add    BYTE PTR [rbx+0x0],ah
   14000eb50:	add    BYTE PTR gs:[rax],ah
   14000eb53:	add    BYTE PTR [rsi+0x0],ah
   14000eb56:	outs   dx,DWORD PTR ds:[rsi]
   14000eb57:	add    BYTE PTR [rdx+0x0],dh
   14000eb5a:	and    BYTE PTR [rax],al
   14000eb5c:	ins    BYTE PTR es:[rdi],dx
   14000eb5d:	add    BYTE PTR [rdi+0x0],ch
   14000eb60:	ja     0x14000eb62
   14000eb62:	imul   eax,DWORD PTR [rax],0x20006f
   14000eb68:	imul   eax,DWORD PTR [rax],0x69006e
   14000eb6e:	je     0x14000eb70
   14000eb70:	imul   eax,DWORD PTR [rax],0x6c0061
   14000eb76:	imul   eax,DWORD PTR [rax],0x61007a
   14000eb7c:	je     0x14000eb7e
   14000eb7e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000eb84:	or     eax,0xa00
   14000eb89:	add    BYTE PTR [rax],al
   14000eb8b:	add    BYTE PTR [rax],al
   14000eb8d:	add    BYTE PTR [rax],al
   14000eb8f:	add    BYTE PTR [rdx+0x0],dl
   14000eb92:	add    BYTE PTR ss:[rax],dh
   14000eb95:	add    BYTE PTR [rdx],dh
   14000eb97:	add    BYTE PTR [rax],bh
   14000eb99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f59f
   14000eb9f:	add    BYTE PTR [rax],ah
   14000eba1:	add    BYTE PTR [rbp+0x0],dh
   14000eba4:	outs   dx,BYTE PTR ds:[rsi]
   14000eba5:	add    BYTE PTR [rcx+0x0],ah
   14000eba8:	(bad)  
   14000eba9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000ebad:	add    BYTE PTR [rax],ah
   14000ebaf:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000ebb3:	add    BYTE PTR [rax],ah
   14000ebb5:	add    BYTE PTR [rcx+0x0],ch
   14000ebb8:	outs   dx,BYTE PTR ds:[rsi]
   14000ebb9:	add    BYTE PTR [rcx+0x0],ch
   14000ebbc:	je     0x14000ebbe
   14000ebbe:	imul   eax,DWORD PTR [rax],0x6c0061
   14000ebc4:	imul   eax,DWORD PTR [rax],0x65007a
   14000ebca:	and    BYTE PTR [rax],al
   14000ebcc:	push   0x61006500
   14000ebd1:	add    BYTE PTR [rax+0x0],dh
   14000ebd4:	or     eax,0xa00
   14000ebd9:	add    BYTE PTR [rax],al
   14000ebdb:	add    BYTE PTR [rax],al
   14000ebdd:	add    BYTE PTR [rax],al
   14000ebdf:	add    BYTE PTR [rdx+0x0],dl
   14000ebe2:	add    BYTE PTR ss:[rax],dh
   14000ebe5:	add    BYTE PTR [rbx],dh
   14000ebe7:	add    BYTE PTR [rax],dh
   14000ebe9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f5ef
   14000ebef:	add    BYTE PTR [rax],ah
   14000ebf1:	add    BYTE PTR [rbx+0x0],al
   14000ebf4:	push   rdx
   14000ebf5:	add    BYTE PTR [rax+rax*1+0x20],dl
   14000ebf9:	add    BYTE PTR [rsi+0x0],ch
   14000ebfc:	outs   dx,DWORD PTR ds:[rsi]
   14000ebfd:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ec01:	add    BYTE PTR [rcx+0x0],ch
   14000ec04:	outs   dx,BYTE PTR ds:[rsi]
   14000ec05:	add    BYTE PTR [rcx+0x0],ch
   14000ec08:	je     0x14000ec0a
   14000ec0a:	imul   eax,DWORD PTR [rax],0x6c0061
   14000ec10:	imul   eax,DWORD PTR [rax],0x65007a
   14000ec16:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14000f61d
   14000ec1d:	add    BYTE PTR [rax],al
   14000ec1f:	add    BYTE PTR [rdx+0x0],dl
   14000ec22:	add    BYTE PTR ss:[rax],dh
   14000ec25:	add    BYTE PTR [rbx],dh
   14000ec27:	add    BYTE PTR [rcx],dh
   14000ec29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f62f
   14000ec2f:	add    BYTE PTR [rax],ah
   14000ec31:	add    BYTE PTR [rcx+0x0],al
   14000ec34:	je     0x14000ec36
   14000ec36:	je     0x14000ec38
   14000ec38:	add    BYTE PTR gs:[rbp+0x0],ch
   14000ec3c:	jo     0x14000ec3e
   14000ec3e:	je     0x14000ec40
   14000ec40:	and    BYTE PTR [rax],al
   14000ec42:	je     0x14000ec44
   14000ec44:	outs   dx,DWORD PTR ds:[rsi]
   14000ec45:	add    BYTE PTR [rax],ah
   14000ec47:	add    BYTE PTR [rcx+0x0],ch
   14000ec4a:	outs   dx,BYTE PTR ds:[rsi]
   14000ec4b:	add    BYTE PTR [rcx+0x0],ch
   14000ec4e:	je     0x14000ec50
   14000ec50:	imul   eax,DWORD PTR [rax],0x6c0061
   14000ec56:	imul   eax,DWORD PTR [rax],0x65007a
   14000ec5c:	and    BYTE PTR [rax],al
   14000ec5e:	je     0x14000ec60
   14000ec60:	push   0x20006500
   14000ec65:	add    BYTE PTR [rbx+0x0],al
   14000ec68:	push   rdx
   14000ec69:	add    BYTE PTR [rax+rax*1+0x20],dl
   14000ec6d:	add    BYTE PTR [rbp+0x0],ch
   14000ec70:	outs   dx,DWORD PTR ds:[rsi]
   14000ec71:	add    BYTE PTR [rdx+0x0],dh
   14000ec74:	add    BYTE PTR gs:[rax],ah
   14000ec77:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ec7b:	add    BYTE PTR [rcx+0x0],ah
   14000ec7e:	outs   dx,BYTE PTR ds:[rsi]
   14000ec7f:	add    BYTE PTR [rax],ah
   14000ec81:	add    BYTE PTR [rdi+0x0],ch
   14000ec84:	outs   dx,BYTE PTR ds:[rsi]
   14000ec85:	add    BYTE PTR [rbx+0x0],ah
   14000ec88:	add    BYTE PTR gs:[rsi],ch
   14000ec8b:	add    BYTE PTR [rdx],cl
   14000ec8d:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000ec91:	add    BYTE PTR [rcx+0x0],ch
   14000ec94:	jae    0x14000ec96
   14000ec96:	and    BYTE PTR [rax],al
   14000ec98:	imul   eax,DWORD PTR [rax],0x64006e
   14000ec9e:	imul   eax,DWORD PTR [rax],0x610063
   14000eca4:	je     0x14000eca6
   14000eca6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ecaa:	and    BYTE PTR [rax],al
   14000ecac:	(bad)  
   14000ecad:	add    BYTE PTR [rax],ah
   14000ecaf:	add    BYTE PTR [rdx+0x0],ah
   14000ecb2:	jne    0x14000ecb4
   14000ecb4:	add    BYTE PTR [eax],ah
   14000ecb7:	add    BYTE PTR [rcx+0x0],ch
   14000ecba:	outs   dx,BYTE PTR ds:[rsi]
   14000ecbb:	add    BYTE PTR [rax],ah
   14000ecbd:	add    BYTE PTR [rcx+0x0],bh
   14000ecc0:	outs   dx,DWORD PTR ds:[rsi]
   14000ecc1:	add    BYTE PTR [rbp+0x0],dh
   14000ecc4:	jb     0x14000ecc6
   14000ecc6:	and    BYTE PTR [rax],al
   14000ecc8:	(bad)  
   14000ecc9:	add    BYTE PTR [rax+0x0],dh
   14000eccc:	jo     0x14000ecce
   14000ecce:	ins    BYTE PTR es:[rdi],dx
   14000eccf:	add    BYTE PTR [rcx+0x0],ch
   14000ecd2:	movsxd eax,DWORD PTR [rax]
   14000ecd4:	(bad)  
   14000ecd5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ecd9:	add    BYTE PTR [rdi+0x0],ch
   14000ecdc:	outs   dx,BYTE PTR ds:[rsi]
   14000ecdd:	add    BYTE PTR [rsi],ch
   14000ecdf:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f6e5
	...
   14000eced:	add    BYTE PTR [rax],al
   14000ecef:	add    BYTE PTR [rdx+0x0],dl
   14000ecf2:	add    BYTE PTR ss:[rax],dh
   14000ecf5:	add    BYTE PTR [rbx],dh
   14000ecf7:	add    BYTE PTR [rdx],dh
   14000ecf9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f6ff
   14000ecff:	add    BYTE PTR [rax],ah
   14000ed01:	add    BYTE PTR [rsi+0x0],ch
   14000ed04:	outs   dx,DWORD PTR ds:[rsi]
   14000ed05:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ed09:	add    BYTE PTR [rbp+0x0],ah
   14000ed0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ed0d:	add    BYTE PTR [rdi+0x0],ch
   14000ed10:	jne    0x14000ed12
   14000ed12:	add    BYTE PTR [eax+0x0],ch
   14000ed16:	and    BYTE PTR [rax],al
   14000ed18:	jae    0x14000ed1a
   14000ed1a:	jo     0x14000ed1c
   14000ed1c:	(bad)  
   14000ed1d:	add    BYTE PTR [rbx+0x0],ah
   14000ed20:	add    BYTE PTR gs:[rax],ah
   14000ed23:	add    BYTE PTR [rsi+0x0],ah
   14000ed26:	outs   dx,DWORD PTR ds:[rsi]
   14000ed27:	add    BYTE PTR [rdx+0x0],dh
   14000ed2a:	and    BYTE PTR [rax],al
   14000ed2c:	ins    BYTE PTR es:[rdi],dx
   14000ed2d:	add    BYTE PTR [rdi+0x0],ch
   14000ed30:	movsxd eax,DWORD PTR [rax]
   14000ed32:	(bad)  
   14000ed33:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000ed37:	add    BYTE PTR [rax],ah
   14000ed39:	add    BYTE PTR [rcx+0x0],ch
   14000ed3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ed3d:	add    BYTE PTR [rsi+0x0],ah
   14000ed40:	outs   dx,DWORD PTR ds:[rsi]
   14000ed41:	add    BYTE PTR [rdx+0x0],dh
   14000ed44:	ins    DWORD PTR es:[rdi],dx
   14000ed45:	add    BYTE PTR [rcx+0x0],ah
   14000ed48:	je     0x14000ed4a
   14000ed4a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ed50:	or     eax,0xa00
	...
   14000ed5d:	add    BYTE PTR [rax],al
   14000ed5f:	add    BYTE PTR [rdx+0x0],dl
   14000ed62:	add    BYTE PTR ss:[rax],dh
   14000ed65:	add    BYTE PTR [rbx],dh
   14000ed67:	add    BYTE PTR [rbx],dh
   14000ed69:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f76f
   14000ed6f:	add    BYTE PTR [rax],ah
   14000ed71:	add    BYTE PTR [rcx+0x0],al
   14000ed74:	je     0x14000ed76
   14000ed76:	je     0x14000ed78
   14000ed78:	add    BYTE PTR gs:[rbp+0x0],ch
   14000ed7c:	jo     0x14000ed7e
   14000ed7e:	je     0x14000ed80
   14000ed80:	and    BYTE PTR [rax],al
   14000ed82:	je     0x14000ed84
   14000ed84:	outs   dx,DWORD PTR ds:[rsi]
   14000ed85:	add    BYTE PTR [rax],ah
   14000ed87:	add    BYTE PTR [rbp+0x0],dh
   14000ed8a:	jae    0x14000ed8c
   14000ed8c:	add    BYTE PTR gs:[rax],ah
   14000ed8f:	add    BYTE PTR [rbp+0x0],cl
   14000ed92:	push   rbx
   14000ed93:	add    BYTE PTR [rcx+0x0],cl
   14000ed96:	rex.WR add BYTE PTR [rax],r12b
   14000ed99:	add    BYTE PTR [rbx+0x0],ah
   14000ed9c:	outs   dx,DWORD PTR ds:[rsi]
   14000ed9d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000eda1:	add    BYTE PTR [rax],ah
   14000eda3:	add    BYTE PTR [rsi+0x0],ah
   14000eda6:	jb     0x14000eda8
   14000eda8:	outs   dx,DWORD PTR ds:[rsi]
   14000eda9:	add    BYTE PTR [rbp+0x0],ch
   14000edac:	and    BYTE PTR [rax],al
   14000edae:	je     0x14000edb0
   14000edb0:	push   0x73006900
   14000edb5:	add    BYTE PTR [rax],ah
   14000edb7:	add    BYTE PTR [rcx+0x0],ah
   14000edba:	jae    0x14000edbc
   14000edbc:	jae    0x14000edbe
   14000edbe:	add    BYTE PTR gs:[rbp+0x0],ch
   14000edc2:	(bad)  
   14000edc3:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000edc7:	add    BYTE PTR [rax],ah
   14000edc9:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000edcd:	add    BYTE PTR [rdx+0x0],dh
   14000edd0:	imul   eax,DWORD PTR [rax],0x67006e
   14000edd6:	and    BYTE PTR [rax],al
   14000edd8:	outs   dx,BYTE PTR ds:[rsi]
   14000edd9:	add    BYTE PTR [rcx+0x0],ah
   14000eddc:	je     0x14000edde
   14000edde:	imul   eax,DWORD PTR [rax],0x650076
   14000ede4:	and    BYTE PTR [rax],al
   14000ede6:	movsxd eax,DWORD PTR [rax]
   14000ede8:	outs   dx,DWORD PTR ds:[rsi]
   14000ede9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000eded:	add    BYTE PTR [rax],ah
   14000edef:	add    BYTE PTR [rcx+0x0],ch
   14000edf2:	outs   dx,BYTE PTR ds:[rsi]
   14000edf3:	add    BYTE PTR [rcx+0x0],ch
   14000edf6:	je     0x14000edf8
   14000edf8:	imul   eax,DWORD PTR [rax],0x6c0061
   14000edfe:	imul   eax,DWORD PTR [rax],0x61007a
   14000ee04:	je     0x14000ee06
   14000ee06:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ee0c:	or     al,BYTE PTR [rax]
   14000ee0e:	push   rsp
   14000ee0f:	add    BYTE PTR [rax+0x0],ch
   14000ee12:	imul   eax,DWORD PTR [rax],0x200073
   14000ee18:	imul   eax,DWORD PTR [rax],0x64006e
   14000ee1e:	imul   eax,DWORD PTR [rax],0x610063
   14000ee24:	je     0x14000ee26
   14000ee26:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ee2a:	and    BYTE PTR [rax],al
   14000ee2c:	(bad)  
   14000ee2d:	add    BYTE PTR [rax],ah
   14000ee2f:	add    BYTE PTR [rdx+0x0],ah
   14000ee32:	jne    0x14000ee34
   14000ee34:	add    BYTE PTR [eax],ah
   14000ee37:	add    BYTE PTR [rcx+0x0],ch
   14000ee3a:	outs   dx,BYTE PTR ds:[rsi]
   14000ee3b:	add    BYTE PTR [rax],ah
   14000ee3d:	add    BYTE PTR [rcx+0x0],bh
   14000ee40:	outs   dx,DWORD PTR ds:[rsi]
   14000ee41:	add    BYTE PTR [rbp+0x0],dh
   14000ee44:	jb     0x14000ee46
   14000ee46:	and    BYTE PTR [rax],al
   14000ee48:	(bad)  
   14000ee49:	add    BYTE PTR [rax+0x0],dh
   14000ee4c:	jo     0x14000ee4e
   14000ee4e:	ins    BYTE PTR es:[rdi],dx
   14000ee4f:	add    BYTE PTR [rcx+0x0],ch
   14000ee52:	movsxd eax,DWORD PTR [rax]
   14000ee54:	(bad)  
   14000ee55:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ee59:	add    BYTE PTR [rdi+0x0],ch
   14000ee5c:	outs   dx,BYTE PTR ds:[rsi]
   14000ee5d:	add    BYTE PTR [rsi],ch
   14000ee5f:	add    BYTE PTR [rax],ah
   14000ee61:	add    BYTE PTR [rcx+0x0],cl
   14000ee64:	je     0x14000ee66
   14000ee66:	and    BYTE PTR [rax],al
   14000ee68:	imul   eax,DWORD PTR [rax],0x200073
   14000ee6e:	ins    DWORD PTR es:[rdi],dx
   14000ee6f:	add    BYTE PTR [rdi+0x0],ch
   14000ee72:	jae    0x14000ee74
   14000ee74:	je     0x14000ee76
   14000ee76:	and    BYTE PTR [rax],al
   14000ee78:	ins    BYTE PTR es:[rdi],dx
   14000ee79:	add    BYTE PTR [rcx+0x0],ch
   14000ee7c:	imul   eax,DWORD PTR [rax],0x65
   14000ee7f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000ee83:	add    BYTE PTR [rax],ah
   14000ee85:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ee89:	add    BYTE PTR [rbp+0x0],ah
   14000ee8c:	and    BYTE PTR [rax],al
   14000ee8e:	jb     0x14000ee90
   14000ee90:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ee94:	jne    0x14000ee96
   14000ee96:	ins    BYTE PTR es:[rdi],dx
   14000ee97:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ee9b:	add    BYTE PTR [rdi+0x0],ch
   14000ee9e:	data16 add BYTE PTR [rax],ah
   14000eea1:	add    BYTE PTR [rbx+0x0],ah
   14000eea4:	(bad)  
   14000eea5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eea9:	add    BYTE PTR [rcx+0x0],ch
   14000eeac:	outs   dx,BYTE PTR ds:[rsi]
   14000eead:	add    BYTE PTR [rdi+0x0],ah
   14000eeb0:	and    BYTE PTR [rax],al
   14000eeb2:	(bad)  
   14000eeb3:	add    BYTE PTR [rsi+0x0],ch
   14000eeb6:	and    BYTE PTR [rax],al
   14000eeb8:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14000eebc:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14000eec1:	add    BYTE PTR [rbx+0x0],ah
   14000eec4:	outs   dx,DWORD PTR ds:[rsi]
   14000eec5:	add    BYTE PTR [rbp+0x0],ch
   14000eec8:	jo     0x14000eeca
   14000eeca:	imul   eax,DWORD PTR [rax],0x65006c
   14000eed0:	add    BYTE PTR fs:[rax],ah
   14000eed3:	add    BYTE PTR [rax],ch
   14000eed5:	add    BYTE PTR [rdi],ch
   14000eed7:	add    BYTE PTR [rbx+0x0],ah
   14000eeda:	ins    BYTE PTR es:[rdi],dx
   14000eedb:	add    BYTE PTR [rdx+0x0],dh
   14000eede:	sub    DWORD PTR [rax],eax
   14000eee0:	and    BYTE PTR [rax],al
   14000eee2:	data16 add BYTE PTR [rbp+0x0],dh
   14000eee6:	outs   dx,BYTE PTR ds:[rsi]
   14000eee7:	add    BYTE PTR [rbx+0x0],ah
   14000eeea:	je     0x14000eeec
   14000eeec:	imul   eax,DWORD PTR [rax],0x6e006f
   14000eef2:	and    BYTE PTR [rax],al
   14000eef4:	data16 add BYTE PTR [rdx+0x0],dh
   14000eef8:	outs   dx,DWORD PTR ds:[rsi]
   14000eef9:	add    BYTE PTR [rbp+0x0],ch
   14000eefc:	and    BYTE PTR [rax],al
   14000eefe:	(bad)  
   14000eeff:	add    BYTE PTR [rax],ah
   14000ef01:	add    BYTE PTR [rsi+0x0],ch
   14000ef04:	(bad)  
   14000ef05:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ef09:	add    BYTE PTR [rsi+0x0],dh
   14000ef0c:	add    BYTE PTR gs:[rax],ah
   14000ef0f:	add    BYTE PTR [rbx+0x0],ah
   14000ef12:	outs   dx,DWORD PTR ds:[rsi]
   14000ef13:	add    BYTE PTR [rsi+0x0],ch
   14000ef16:	jae    0x14000ef18
   14000ef18:	je     0x14000ef1a
   14000ef1a:	jb     0x14000ef1c
   14000ef1c:	jne    0x14000ef1e
   14000ef1e:	movsxd eax,DWORD PTR [rax]
   14000ef20:	je     0x14000ef22
   14000ef22:	outs   dx,DWORD PTR ds:[rsi]
   14000ef23:	add    BYTE PTR [rdx+0x0],dh
   14000ef26:	and    BYTE PTR [rax],al
   14000ef28:	outs   dx,DWORD PTR ds:[rsi]
   14000ef29:	add    BYTE PTR [rdx+0x0],dh
   14000ef2c:	and    BYTE PTR [rax],al
   14000ef2e:	data16 add BYTE PTR [rdx+0x0],dh
   14000ef32:	outs   dx,DWORD PTR ds:[rsi]
   14000ef33:	add    BYTE PTR [rbp+0x0],ch
   14000ef36:	and    BYTE PTR [rax],al
   14000ef38:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14000ef3d:	add    BYTE PTR [rbp+0x0],cl
   14000ef40:	(bad)  
   14000ef41:	add    BYTE PTR [rcx+0x0],ch
   14000ef44:	outs   dx,BYTE PTR ds:[rsi]
   14000ef45:	add    BYTE PTR [rsi],ch
   14000ef47:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f94d
   14000ef4d:	add    BYTE PTR [rax],al
   14000ef4f:	add    BYTE PTR [rdx+0x0],dl
   14000ef52:	add    BYTE PTR ss:[rax],dh
   14000ef55:	add    BYTE PTR [rbx],dh
   14000ef57:	add    BYTE PTR [rax+rax*1],dh
   14000ef5a:	or     eax,0x2d000a00
   14000ef5f:	add    BYTE PTR [rax],ah
   14000ef61:	add    BYTE PTR [rcx+0x0],ch
   14000ef64:	outs   dx,BYTE PTR ds:[rsi]
   14000ef65:	add    BYTE PTR [rbx+0x0],ah
   14000ef68:	outs   dx,DWORD PTR ds:[rsi]
   14000ef69:	add    BYTE PTR [rsi+0x0],ch
   14000ef6c:	jae    0x14000ef6e
   14000ef6e:	imul   eax,DWORD PTR [rax],0x740073
   14000ef74:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ef78:	je     0x14000ef7a
   14000ef7a:	and    BYTE PTR [rax],al
   14000ef7c:	outs   dx,DWORD PTR ds:[rsi]
   14000ef7d:	add    BYTE PTR [rsi+0x0],ch
   14000ef80:	add    BYTE PTR gs:[rax+0x0],bh
   14000ef84:	imul   eax,DWORD PTR [rax],0x200074
   14000ef8a:	(bad)  
   14000ef8b:	add    BYTE PTR [rbp+0x0],ah
   14000ef8e:	add    BYTE PTR [ecx+0x0],ch
   14000ef92:	outs   dx,BYTE PTR ds:[rsi]
   14000ef93:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae015499
   14000ef99:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ef9d:	add    BYTE PTR [rsi+0x0],dh
   14000efa0:	(bad)  
   14000efa1:	add    BYTE PTR [rdx+0x0],dh
   14000efa4:	imul   eax,DWORD PTR [rax],0x620061
   14000efaa:	ins    BYTE PTR es:[rdi],dx
   14000efab:	add    BYTE PTR [rbp+0x0],ah
   14000efae:	jae    0x14000efb0
   14000efb0:	or     eax,0xa00
   14000efb5:	add    BYTE PTR [rax],al
   14000efb7:	add    BYTE PTR [rax+rax*1+0x4f],al
   14000efbb:	add    BYTE PTR [rbp+0x0],cl
   14000efbe:	add    BYTE PTR [r9+0x0],cl
   14000efc2:	rex.WRX add BYTE PTR [rax],r12b
   14000efc5:	add    BYTE PTR [rbp+0x0],ah
   14000efc8:	jb     0x14000efca
   14000efca:	jb     0x14000efcc
   14000efcc:	outs   dx,DWORD PTR ds:[rsi]
   14000efcd:	add    BYTE PTR [rdx+0x0],dh
   14000efd0:	or     eax,0xa00
   14000efd5:	add    BYTE PTR [rax],al
   14000efd7:	add    BYTE PTR [rbx+0x0],dl
   14000efda:	rex.WB add BYTE PTR [r14+0x0],cl
   14000efde:	rex.RXB add BYTE PTR [r8],r12b
   14000efe1:	add    BYTE PTR [rbp+0x0],ah
   14000efe4:	jb     0x14000efe6
   14000efe6:	jb     0x14000efe8
   14000efe8:	outs   dx,DWORD PTR ds:[rsi]
   14000efe9:	add    BYTE PTR [rdx+0x0],dh
   14000efec:	or     eax,0xa00
   14000eff1:	add    BYTE PTR [rax],al
   14000eff3:	add    BYTE PTR [rax],al
   14000eff5:	add    BYTE PTR [rax],al
   14000eff7:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14000effb:	add    BYTE PTR [rdi+0x0],cl
   14000effe:	push   rbx
   14000efff:	add    BYTE PTR [rbx+0x0],dl
   14000f002:	and    BYTE PTR [rax],al
   14000f004:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f008:	jb     0x14000f00a
   14000f00a:	outs   dx,DWORD PTR ds:[rsi]
   14000f00b:	add    BYTE PTR [rdx+0x0],dh
   14000f00e:	or     eax,0xa00
   14000f013:	add    BYTE PTR [rip+0xa00],cl        # 0x14000fa19
   14000f019:	add    BYTE PTR [rax],al
   14000f01b:	add    BYTE PTR [rax],al
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rdx+0x0],dh
   14000f022:	jne    0x14000f024
   14000f024:	outs   dx,BYTE PTR ds:[rsi]
   14000f025:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f029:	add    BYTE PTR [rbp+0x0],ch
   14000f02c:	add    BYTE PTR gs:[rax],ah
   14000f02f:	add    BYTE PTR [rbp+0x0],ah
   14000f032:	jb     0x14000f034
   14000f034:	jb     0x14000f036
   14000f036:	outs   dx,DWORD PTR ds:[rsi]
   14000f037:	add    BYTE PTR [rdx+0x0],dh
   14000f03a:	and    BYTE PTR [rax],al
   14000f03c:	add    BYTE PTR [rax],al
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	push   rdx
   14000f041:	add    BYTE PTR [rbp+0x0],dh
   14000f044:	outs   dx,BYTE PTR ds:[rsi]
   14000f045:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f049:	add    BYTE PTR [rbp+0x0],ch
   14000f04c:	add    BYTE PTR gs:[rax],ah
   14000f04f:	add    BYTE PTR [rbp+0x0],al
   14000f052:	jb     0x14000f054
   14000f054:	jb     0x14000f056
   14000f056:	outs   dx,DWORD PTR ds:[rsi]
   14000f057:	add    BYTE PTR [rdx+0x0],dh
   14000f05a:	and    DWORD PTR [rax],eax
   14000f05c:	or     al,BYTE PTR [rax]
   14000f05e:	or     al,BYTE PTR [rax]
   14000f060:	push   rax
   14000f061:	add    BYTE PTR [rdx+0x0],dh
   14000f064:	outs   dx,DWORD PTR ds:[rsi]
   14000f065:	add    BYTE PTR [rdi+0x0],ah
   14000f068:	jb     0x14000f06a
   14000f06a:	(bad)  
   14000f06b:	add    BYTE PTR [rbp+0x0],ch
   14000f06e:	cmp    al,BYTE PTR [rax]
   14000f070:	and    BYTE PTR [rax],al
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	add    BYTE PTR [rax],al
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	cmp    al,0x0
   14000f07a:	jo     0x14000f07c
   14000f07c:	jb     0x14000f07e
   14000f07e:	outs   dx,DWORD PTR ds:[rsi]
   14000f07f:	add    BYTE PTR [rdi+0x0],ah
   14000f082:	jb     0x14000f084
   14000f084:	(bad)  
   14000f085:	add    BYTE PTR [rbp+0x0],ch
   14000f088:	and    BYTE PTR [rax],al
   14000f08a:	outs   dx,BYTE PTR ds:[rsi]
   14000f08b:	add    BYTE PTR [rcx+0x0],ah
   14000f08e:	ins    DWORD PTR es:[rdi],dx
   14000f08f:	add    BYTE PTR [rbp+0x0],ah
   14000f092:	and    BYTE PTR [rax],al
   14000f094:	jne    0x14000f096
   14000f096:	outs   dx,BYTE PTR ds:[rsi]
   14000f097:	add    BYTE PTR [rbx+0x0],ch
   14000f09a:	outs   dx,BYTE PTR ds:[rsi]
   14000f09b:	add    BYTE PTR [rdi+0x0],ch
   14000f09e:	ja     0x14000f0a0
   14000f0a0:	outs   dx,BYTE PTR ds:[rsi]
   14000f0a1:	add    BYTE PTR [rsi],bh
   14000f0a3:	add    BYTE PTR [rax],al
   14000f0a5:	add    BYTE PTR [rax],al
   14000f0a7:	add    BYTE PTR [rsi],ch
   14000f0a9:	add    BYTE PTR [rsi],ch
   14000f0ab:	add    BYTE PTR [rsi],ch
   14000f0ad:	add    BYTE PTR [rax],al
   14000f0af:	add    BYTE PTR [rdx],cl
   14000f0b1:	add    BYTE PTR [rdx],cl
	...
   14000f0bf:	add    BYTE PTR [rbp+0x0],cl
   14000f0c2:	imul   eax,DWORD PTR [rax],0x720063
   14000f0c8:	outs   dx,DWORD PTR ds:[rsi]
   14000f0c9:	add    BYTE PTR [rbx+0x0],dh
   14000f0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000f0cd:	add    BYTE PTR [rsi+0x0],ah
   14000f0d0:	je     0x14000f0d2
   14000f0d2:	and    BYTE PTR [rax],al
   14000f0d4:	push   rsi
   14000f0d5:	add    BYTE PTR [rcx+0x0],ch
   14000f0d8:	jae    0x14000f0da
   14000f0da:	jne    0x14000f0dc
   14000f0dc:	(bad)  
   14000f0dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000f0e1:	add    BYTE PTR [rbx+0x0],al
   14000f0e4:	sub    eax,DWORD PTR [rax]
   14000f0e6:	sub    eax,DWORD PTR [rax]
   14000f0e8:	and    BYTE PTR [rax],al
   14000f0ea:	push   rdx
   14000f0eb:	add    BYTE PTR [rbp+0x0],dh
   14000f0ee:	outs   dx,BYTE PTR ds:[rsi]
   14000f0ef:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f0f3:	add    BYTE PTR [rbp+0x0],ch
   14000f0f6:	add    BYTE PTR gs:[rax],ah
   14000f0f9:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000f0fd:	add    BYTE PTR [rdx+0x0],ah
   14000f100:	jb     0x14000f102
   14000f102:	(bad)  
   14000f103:	add    BYTE PTR [rdx+0x0],dh
   14000f106:	jns    0x14000f108
	...
   14000f110:	rex.RXB
   14000f111:	gs je  0x14000f157
   14000f114:	jne    0x14000f188
   14000f116:	jb     0x14000f17d
   14000f118:	outs   dx,BYTE PTR ds:[rsi]
   14000f119:	je     0x14000f16b
   14000f11b:	(bad)  
   14000f11c:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000f11f:	addr32 gs rex.WB
   14000f122:	add    BYTE PTR fs:[rax],al
   14000f125:	add    BYTE PTR [rax],al
   14000f127:	add    BYTE PTR [rbx+0x0],ch
   14000f12a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f12e:	outs   dx,BYTE PTR ds:[rsi]
   14000f12f:	add    BYTE PTR [rbp+0x0],ah
   14000f132:	ins    BYTE PTR es:[rdi],dx
   14000f133:	add    BYTE PTR [rbx],dh
   14000f135:	add    BYTE PTR [rdx],dh
   14000f137:	add    BYTE PTR [rsi],ch
   14000f139:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000f13d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000f141:	add    BYTE PTR [rax],al
   14000f143:	add    BYTE PTR [rax],al
   14000f145:	add    BYTE PTR [rax],al
   14000f147:	add    BYTE PTR [rax+0x4c],dh
   14000f14a:	add    DWORD PTR [rax+0x1],eax
   14000f14d:	add    BYTE PTR [rax],al
   14000f14f:	add    BYTE PTR [rax],dl
   14000f151:	add    QWORD PTR [r8+0x1],r8
	...
   14000f15d:	add    BYTE PTR [rax],al
   14000f15f:	add    BYTE PTR [rcx],ch
   14000f161:	add    BYTE PTR [rax],al
   14000f163:	add    BYTE PTR [rcx],0x0
	...
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	sldt   WORD PTR [rax]
   14000f17b:	add    BYTE PTR [rax],al
   14000f17d:	add    BYTE PTR [rax],al
   14000f17f:	add    BYTE PTR [rax],ah
   14000f181:	add    eax,0x1993
	...
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	or     BYTE PTR [rax],dl
   14000f1fa:	add    DWORD PTR [rax+0x1],eax
   14000f1fd:	add    BYTE PTR [rax],al
   14000f1ff:	add    al,cl
   14000f201:	ins    DWORD PTR es:[rdi],dx
   14000f202:	add    BYTE PTR [rax+0x1],al
   14000f205:	add    BYTE PTR [rax],al
   14000f207:	add    BYTE PTR [rax+0x140006e],bl
   14000f20d:	add    BYTE PTR [rax],al
   14000f20f:	add    BYTE PTR [rbp+0x6e],dl
   14000f212:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000f216:	outs   dx,BYTE PTR ds:[rsi]
   14000f217:	and    BYTE PTR [rbp+0x78],ah
   14000f21a:	movsxd esp,DWORD PTR [rbp+0x70]
   14000f21d:	je     0x14000f288
   14000f21f:	outs   dx,DWORD PTR ds:[rsi]
   14000f220:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000f22d:	add    BYTE PTR [rax],al
   14000f22f:	add    BYTE PTR [rbx+0x73],ah
   14000f232:	ins    DWORD PTR es:[rdi],dx
   14000f233:	loopne 0x14000f236
	...
   14000f245:	add    BYTE PTR [rax],al
   14000f247:	add    BYTE PTR [rax+rax*1],al
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	add    BYTE PTR [rax],al
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	and    BYTE PTR [rip+0x1993],al        # 0x140010be9
	...
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	push   rbx
   14000f271:	jne    0x14000f2e1
   14000f273:	add    BYTE PTR [rbp+0x6f],cl
   14000f276:	outs   dx,BYTE PTR ds:[rsi]
   14000f277:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14000f27b:	add    BYTE PTR [rdi+0x65],dl
   14000f27e:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   14000f283:	add    BYTE PTR [rsi+0x72],al
   14000f286:	imul   eax,DWORD PTR [rax],0x746153
   14000f28c:	push   rbx
   14000f28d:	jne    0x14000f2fd
   14000f28f:	fs (bad) 
   14000f291:	jns    0x14000f293
   14000f293:	add    BYTE PTR [rbp+0x6f],cl
   14000f296:	outs   dx,BYTE PTR ds:[rsi]
   14000f297:	fs (bad) 
   14000f299:	jns    0x14000f29b
   14000f29b:	add    BYTE PTR [rax],al
   14000f29d:	add    BYTE PTR [rax],al
   14000f29f:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14000f2a3:	jae    0x14000f309
   14000f2a5:	(bad)  
   14000f2a6:	jns    0x14000f2a8
   14000f2a8:	push   rdi
   14000f2a9:	gs outs dx,BYTE PTR fs:[rsi]
   14000f2ac:	gs jae 0x14000f313
   14000f2af:	(bad)  
   14000f2b0:	jns    0x14000f2b2
   14000f2b2:	add    BYTE PTR [rax],al
   14000f2b4:	add    BYTE PTR [rax],al
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	push   rsp
   14000f2b9:	push   0x64737275
   14000f2be:	(bad)  
   14000f2bf:	jns    0x14000f2c1
   14000f2c1:	add    BYTE PTR [rax],al
   14000f2c3:	add    BYTE PTR [rsi+0x72],al
   14000f2c6:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	push   rbx
   14000f2d1:	(bad)  
   14000f2d2:	je     0x14000f349
   14000f2d4:	jb     0x14000f33a
   14000f2d6:	(bad)  
   14000f2d7:	jns    0x14000f2d9
   14000f2d9:	add    BYTE PTR [rax],al
   14000f2db:	add    BYTE PTR [rdx+0x61],cl
   14000f2de:	outs   dx,BYTE PTR ds:[rsi]
   14000f2df:	add    BYTE PTR [rsi+0x65],al
   14000f2e2:	(bad)  
   14000f2e3:	add    BYTE PTR [rbp+0x61],cl
   14000f2e6:	jb     0x14000f2e8
   14000f2e8:	rex.B jo 0x14000f35d
   14000f2eb:	add    BYTE PTR [rbp+0x61],cl
   14000f2ee:	jns    0x14000f2f0
   14000f2f0:	rex.WX jne 0x14000f361
   14000f2f3:	add    BYTE PTR [rdx+0x75],cl
   14000f2f6:	ins    BYTE PTR es:[rdi],dx
   14000f2f7:	add    BYTE PTR [rcx+0x75],al
   14000f2fa:	add    BYTE PTR [ebx+0x65],dl
   14000f2fe:	jo     0x14000f300
   14000f300:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   14000f305:	outs   dx,DWORD PTR ds:[rsi]
   14000f306:	jbe    0x14000f308
   14000f308:	rex.R
   14000f309:	movsxd eax,DWORD PTR gs:[rax]
   14000f30c:	add    BYTE PTR [rax],al
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	rex.WX (bad) 
   14000f312:	outs   dx,BYTE PTR ds:[rsi]
   14000f313:	jne    0x14000f376
   14000f315:	jb     0x14000f390
   14000f317:	add    BYTE PTR [rsi+0x65],al
   14000f31a:	(bad)
   14000f31f:	jns    0x14000f321
   14000f321:	add    BYTE PTR [rax],al
   14000f323:	add    BYTE PTR [rbp+0x61],cl
   14000f326:	jb     0x14000f38b
   14000f328:	push   0x41000000
   14000f32d:	jo     0x14000f3a1
   14000f32f:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   14000f337:	add    BYTE PTR gs:[rax],al
   14000f33a:	add    BYTE PTR [rax],al
   14000f33c:	rex.WX jne 0x14000f3ab
   14000f33f:	jns    0x14000f341
   14000f341:	add    BYTE PTR [rax],al
   14000f343:	add    BYTE PTR [rcx+0x75],al
   14000f346:	addr32 jne 0x14000f3bc
   14000f349:	je     0x14000f34b
   14000f34b:	add    BYTE PTR [rax],al
   14000f34d:	add    BYTE PTR [rax],al
   14000f34f:	add    BYTE PTR [rbx+0x65],dl
   14000f352:	jo     0x14000f3c8
   14000f354:	gs ins DWORD PTR es:[rdi],dx
   14000f356:	(bad)  
   14000f357:	gs jb  0x14000f35a
   14000f35a:	add    BYTE PTR [rax],al
   14000f35c:	add    BYTE PTR [rax],al
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   14000f365:	gs jb  0x14000f368
   14000f368:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000f36a:	jbe    0x14000f3d1
   14000f36c:	ins    DWORD PTR es:[rdi],dx
   14000f36d:	(bad)  
   14000f36e:	gs jb  0x14000f371
   14000f371:	add    BYTE PTR [rax],al
   14000f373:	add    BYTE PTR [rax],al
   14000f375:	add    BYTE PTR [rax],al
   14000f377:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000f37b:	gs ins DWORD PTR es:[rdi],dx
   14000f37d:	(bad)  
   14000f37e:	gs jb  0x14000f381
   14000f381:	add    BYTE PTR [rax],al
   14000f383:	add    BYTE PTR [rcx+0x4d],al
   14000f386:	add    BYTE PTR [rax],al
   14000f388:	push   rax
   14000f389:	rex.WRB add BYTE PTR [r8],r8b
   14000f38c:	add    BYTE PTR [rax],al
   14000f38e:	add    BYTE PTR [rax],al
   14000f390:	rex.WRB
   14000f391:	rex.WRB (bad) 
   14000f393:	fs fs (bad) 
   14000f396:	jns    0x14000f411
	...
   14000f3a0:	fs fs fs fs sub al,0x20
   14000f3a6:	rex.WRB
   14000f3a7:	rex.WRB
   14000f3a8:	rex.WRB
   14000f3a9:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14000f3ae:	and    BYTE PTR [rcx+0x79],bh
   14000f3b1:	jns    0x14000f42c
   14000f3b3:	add    BYTE PTR [rax],al
   14000f3b5:	add    BYTE PTR [rax],al
   14000f3b7:	add    BYTE PTR [rax+0x48],cl
   14000f3ba:	cmp    ch,BYTE PTR [rbp+0x6d]
   14000f3bd:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14000f3c8:	push   rbx
   14000f3c9:	add    BYTE PTR [rbp+0x0],dh
   14000f3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    BYTE PTR [rbp+0x0],cl
   14000f3d2:	outs   dx,DWORD PTR ds:[rsi]
   14000f3d3:	add    BYTE PTR [rsi+0x0],ch
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	push   rsp
   14000f3d9:	add    BYTE PTR [rbp+0x0],dh
   14000f3dc:	add    BYTE PTR gs:[rax],al
   14000f3df:	add    BYTE PTR [rdi+0x0],dl
   14000f3e2:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000f3e7:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000f3eb:	add    BYTE PTR [rbp+0x0],dh
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000f3f4:	imul   eax,DWORD PTR [rax],0x530000
   14000f3fa:	(bad)  
   14000f3fb:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000f3ff:	add    BYTE PTR [rbx+0x0],dl
   14000f402:	jne    0x14000f404
   14000f404:	outs   dx,BYTE PTR ds:[rsi]
   14000f405:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000f409:	add    BYTE PTR [rcx+0x0],bh
   14000f40c:	add    BYTE PTR [rax],al
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000f414:	outs   dx,BYTE PTR ds:[rsi]
   14000f415:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000f419:	add    BYTE PTR [rcx+0x0],bh
   14000f41c:	add    BYTE PTR [rax],al
   14000f41e:	add    BYTE PTR [rax],al
   14000f420:	push   rsp
   14000f421:	add    BYTE PTR [rbp+0x0],dh
   14000f424:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f428:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f42c:	jns    0x14000f42e
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	push   rdi
   14000f431:	add    BYTE PTR [rbp+0x0],ah
   14000f434:	add    BYTE PTR fs:[rsi+0x0],ch
   14000f438:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f43c:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f440:	jns    0x14000f442
   14000f442:	add    BYTE PTR [rax],al
   14000f444:	add    BYTE PTR [rax],al
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	push   rsp
   14000f449:	add    BYTE PTR [rax+0x0],ch
   14000f44c:	jne    0x14000f44e
   14000f44e:	jb     0x14000f450
   14000f450:	jae    0x14000f452
   14000f452:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f456:	jns    0x14000f458
	...
   14000f460:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000f464:	imul   eax,DWORD PTR [rax],0x610064
   14000f46a:	jns    0x14000f46c
   14000f46c:	add    BYTE PTR [rax],al
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	push   rbx
   14000f471:	add    BYTE PTR [rcx+0x0],ah
   14000f474:	je     0x14000f476
   14000f476:	jne    0x14000f478
   14000f478:	jb     0x14000f47a
   14000f47a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f47e:	jns    0x14000f480
	...
   14000f488:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000f48c:	outs   dx,BYTE PTR ds:[rsi]
   14000f48d:	add    BYTE PTR [rax],al
   14000f48f:	add    BYTE PTR [rsi+0x0],al
   14000f492:	add    BYTE PTR gs:[rdx+0x0],ah
   14000f496:	add    BYTE PTR [rax],al
   14000f498:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f49c:	jb     0x14000f49e
   14000f49e:	add    BYTE PTR [rax],al
   14000f4a0:	add    BYTE PTR [r8+0x0],sil
   14000f4a4:	jb     0x14000f4a6
   14000f4a6:	add    BYTE PTR [rax],al
   14000f4a8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f4ac:	jns    0x14000f4ae
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f4b4:	outs   dx,BYTE PTR ds:[rsi]
   14000f4b5:	add    BYTE PTR [rax],al
   14000f4b7:	add    BYTE PTR [rdx+0x0],cl
   14000f4ba:	jne    0x14000f4bc
   14000f4bc:	ins    BYTE PTR es:[rdi],dx
   14000f4bd:	add    BYTE PTR [rax],al
   14000f4bf:	add    BYTE PTR [rcx+0x0],al
   14000f4c2:	jne    0x14000f4c4
   14000f4c4:	add    BYTE PTR [eax],al
   14000f4c7:	add    BYTE PTR [rbx+0x0],dl
   14000f4ca:	add    BYTE PTR gs:[rax+0x0],dh
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000f4d4:	je     0x14000f4d6
   14000f4d6:	add    BYTE PTR [rax],al
   14000f4d8:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000f4dc:	jbe    0x14000f4de
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	add    BYTE PTR [rbp+0x0],r12b
   14000f4e4:	movsxd eax,DWORD PTR [rax]
   14000f4e6:	add    BYTE PTR [rax],al
   14000f4e8:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000f4ec:	outs   dx,BYTE PTR ds:[rsi]
   14000f4ed:	add    BYTE PTR [rbp+0x0],dh
   14000f4f0:	(bad)  
   14000f4f1:	add    BYTE PTR [rdx+0x0],dh
   14000f4f4:	jns    0x14000f4f6
   14000f4f6:	add    BYTE PTR [rax],al
   14000f4f8:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14000f4fc:	(bad)  
   14000f4fd:	add    BYTE PTR [rdx+0x0],dh
   14000f500:	jne    0x14000f502
   14000f502:	(bad)  
   14000f503:	add    BYTE PTR [rdx+0x0],dh
   14000f506:	jns    0x14000f508
	...
   14000f510:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f514:	jb     0x14000f516
   14000f516:	movsxd eax,DWORD PTR [rax]
   14000f518:	push   0x0
   14000f51d:	add    BYTE PTR [rax],al
   14000f51f:	add    BYTE PTR [rcx+0x0],al
   14000f522:	jo     0x14000f524
   14000f524:	jb     0x14000f526
   14000f526:	imul   eax,DWORD PTR [rax],0x6c
   14000f52c:	add    BYTE PTR [rax],al
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f534:	outs   dx,BYTE PTR ds:[rsi]
   14000f535:	add    BYTE PTR [rbp+0x0],ah
	...
   14000f540:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f544:	ins    BYTE PTR es:[rdi],dx
   14000f545:	add    BYTE PTR [rcx+0x0],bh
	...
   14000f550:	add    BYTE PTR [r13+0x0],sil
   14000f554:	add    BYTE PTR [ebp+0x0],dh
   14000f558:	jae    0x14000f55a
   14000f55a:	je     0x14000f55c
   14000f55c:	add    BYTE PTR [rax],al
   14000f55e:	add    BYTE PTR [rax],al
   14000f560:	push   rbx
   14000f561:	add    BYTE PTR [rbp+0x0],ah
   14000f564:	jo     0x14000f566
   14000f566:	je     0x14000f568
   14000f568:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f56c:	(bad)  
   14000f56d:	add    BYTE PTR [rbp+0x0],ah
   14000f570:	jb     0x14000f572
   14000f572:	add    BYTE PTR [rax],al
   14000f574:	add    BYTE PTR [rax],al
   14000f576:	add    BYTE PTR [rax],al
   14000f578:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000f57c:	je     0x14000f57e
   14000f57e:	outs   dx,DWORD PTR ds:[rsi]
   14000f57f:	add    BYTE PTR [rdx+0x0],ah
   14000f582:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f586:	add    BYTE PTR [rax],al
   14000f588:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000f58c:	jbe    0x14000f58e
   14000f58e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f592:	(bad)  
   14000f593:	add    BYTE PTR [rbp+0x0],ah
   14000f596:	jb     0x14000f598
	...
   14000f5a0:	add    BYTE PTR [rbp+0x0],r12b
   14000f5a4:	movsxd eax,DWORD PTR [rax]
   14000f5a6:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f5aa:	(bad)  
   14000f5ab:	add    BYTE PTR [rbp+0x0],ah
   14000f5ae:	jb     0x14000f5b0
   14000f5b0:	add    BYTE PTR [rax],al
   14000f5b2:	add    BYTE PTR [rax],al
   14000f5b4:	add    BYTE PTR [r13+0x0],cl
   14000f5b8:	add    BYTE PTR [rax],al
   14000f5ba:	add    BYTE PTR [rax],al
   14000f5bc:	push   rax
   14000f5bd:	add    BYTE PTR [rbp+0x0],cl
	...
   14000f5c8:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000f5cc:	(bad)  
   14000f5cd:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000f5d1:	add    BYTE PTR [rdi],ch
   14000f5d3:	add    BYTE PTR [rcx+0x0],bh
   14000f5d6:	jns    0x14000f5d8
	...
   14000f5e0:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14000f5e5:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14000f5e9:	add    BYTE PTR [rax],ah
   14000f5eb:	add    BYTE PTR [rbp+0x0],cl
   14000f5ee:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000f5f2:	rex.WRB add BYTE PTR [r8],r12b
   14000f5f5:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000f5f9:	add    BYTE PTR [rax+rax*1],ch
   14000f5fc:	and    BYTE PTR [rax],al
   14000f5fe:	jns    0x14000f600
   14000f600:	jns    0x14000f602
   14000f602:	jns    0x14000f604
   14000f604:	jns    0x14000f606
   14000f606:	add    BYTE PTR [rax],al
   14000f608:	rex.W add BYTE PTR [rax+0x0],cl
   14000f60c:	cmp    al,BYTE PTR [rax]
   14000f60e:	ins    DWORD PTR es:[rdi],dx
   14000f60f:	add    BYTE PTR [rbp+0x0],ch
   14000f612:	cmp    al,BYTE PTR [rax]
   14000f614:	jae    0x14000f616
   14000f616:	jae    0x14000f618
	...
   14000f620:	add    BYTE PTR gs:[rsi+0x0],ch
   14000f624:	sub    eax,0x53005500
   14000f629:	add    BYTE PTR [rax],al
   14000f62b:	add    BYTE PTR [rax],al
   14000f62d:	add    BYTE PTR [rax],al
   14000f62f:	add    BYTE PTR [rax-0xa],dl
   14000f632:	add    BYTE PTR [rax+0x1],al
   14000f635:	add    BYTE PTR [rax],al
   14000f637:	add    BYTE PTR [rax-0xa],ah
   14000f63a:	add    BYTE PTR [rax+0x1],al
   14000f63d:	add    BYTE PTR [rax],al
   14000f63f:	add    BYTE PTR [rax-0xa],dh
   14000f642:	add    BYTE PTR [rax+0x1],al
   14000f645:	add    BYTE PTR [rax],al
   14000f647:	add    BYTE PTR [rax+0x14000f6],al
   14000f64d:	add    BYTE PTR [rax],al
   14000f64f:	add    BYTE PTR [rdx+0x0],ch
   14000f652:	(bad)  
   14000f653:	add    BYTE PTR [rip+0x50004a00],ch        # 0x190014059
   14000f659:	add    BYTE PTR [rax],al
   14000f65b:	add    BYTE PTR [rax],al
   14000f65d:	add    BYTE PTR [rax],al
   14000f65f:	add    BYTE PTR [rdx+0x0],bh
   14000f662:	push   0x43002d00
   14000f667:	add    BYTE PTR [rsi+0x0],cl
   14000f66a:	add    BYTE PTR [rax],al
   14000f66c:	add    BYTE PTR [rax],al
   14000f66e:	add    BYTE PTR [rax],al
   14000f670:	imul   eax,DWORD PTR [rax],0x6f
   14000f673:	add    BYTE PTR [rip+0x52004b00],ch        # 0x192014179
   14000f679:	add    BYTE PTR [rax],al
   14000f67b:	add    BYTE PTR [rax],al
   14000f67d:	add    BYTE PTR [rax],al
   14000f67f:	add    BYTE PTR [rdx+0x0],bh
   14000f682:	push   0x54002d00
   14000f687:	add    BYTE PTR [rdi+0x0],dl
   14000f68a:	add    BYTE PTR [rax],al
   14000f68c:	add    BYTE PTR [rax],al
   14000f68e:	add    BYTE PTR [rax],al
   14000f690:	push   rbp
   14000f691:	add    BYTE PTR [rbx+0x0],dl
   14000f694:	add    BYTE PTR [r10+0x0],r10b
   14000f698:	xor    eax,DWORD PTR [rax]
   14000f69a:	xor    al,BYTE PTR [rax]
   14000f69c:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   14000f6a1:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000f6a5:	add    BYTE PTR [rax],al
   14000f6a7:	add    BYTE PTR [rbp+0x65],cl
   14000f6aa:	jae    0x14000f71f
   14000f6ac:	(bad)  
   14000f6ad:	rex.X outs dx,DWORD PTR gs:[esi]
   14000f6b1:	js     0x14000f70a
   14000f6b3:	add    BYTE PTR [rax],al
   14000f6b5:	add    BYTE PTR [rax],al
   14000f6b7:	add    BYTE PTR [rdi+0x65],al
   14000f6ba:	je     0x14000f6fd
   14000f6bc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000f6c0:	gs push rdi
   14000f6c2:	imul   ebp,DWORD PTR [rsi+0x64],0x4700776f
   14000f6c9:	gs je  0x14000f718
   14000f6cc:	(bad)  
   14000f6cd:	jae    0x14000f743
   14000f6cf:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000f6d4:	gs push rax
   14000f6d6:	outs   dx,DWORD PTR ds:[rsi]
   14000f6d7:	jo     0x14000f74e
   14000f6d9:	jo     0x14000f6db
   14000f6db:	add    BYTE PTR [rax],al
   14000f6dd:	add    BYTE PTR [rax],al
   14000f6df:	add    BYTE PTR [rdi+0x65],al
   14000f6e2:	je     0x14000f739
   14000f6e4:	jae    0x14000f74b
   14000f6e6:	jb     0x14000f737
   14000f6e8:	(bad)  
   14000f6e9:	push   0x65
   14000f6eb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14000f6ef:	outs   dx,WORD PTR ds:[rsi]
   14000f6f1:	jb     0x14000f760
   14000f6f3:	(bad)  
   14000f6f4:	je     0x14000f75f
   14000f6f6:	outs   dx,DWORD PTR ds:[rsi]
   14000f6f7:	outs   dx,BYTE PTR ds:[rsi]
   14000f6f8:	push   rdi
   14000f6f9:	add    BYTE PTR [rax],al
   14000f6fb:	add    BYTE PTR [rax],al
   14000f6fd:	add    BYTE PTR [rax],al
   14000f6ff:	add    BYTE PTR [rdi+0x65],al
   14000f702:	je     0x14000f754
   14000f704:	jb     0x14000f775
   14000f706:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f709:	jae    0x14000f762
   14000f70b:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14000f712:	(bad)  
   14000f713:	je     0x14000f77e
   14000f715:	outs   dx,DWORD PTR ds:[rsi]
   14000f716:	outs   dx,BYTE PTR ds:[rsi]
   14000f717:	add    ah,ch
   14000f719:	lea    eax,[rax]
   14000f71b:	rex add DWORD PTR [rax],eax
   14000f71e:	add    BYTE PTR [rax],al
   14000f720:	xor    BYTE PTR [rax],dl
   14000f722:	add    DWORD PTR [rax+0x1],eax
   14000f725:	add    BYTE PTR [rax],al
   14000f727:	add    BYTE PTR [rax+0x140008e],ah
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    BYTE PTR [rax+0x140006e],bl
   14000f735:	add    BYTE PTR [rax],al
   14000f737:	add    BYTE PTR [rdx+0x61],ah
   14000f73a:	and    BYTE PTR fs:[rbp+0x78],ah
   14000f73e:	movsxd esp,DWORD PTR [rbp+0x70]
   14000f741:	je     0x14000f7ac
   14000f743:	outs   dx,DWORD PTR ds:[rsi]
   14000f744:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000f74d:	add    BYTE PTR [rax],al
   14000f74f:	add    BYTE PTR [rax-0x6],ah
   14000f752:	add    BYTE PTR [rax+0x1],al
   14000f755:	add    BYTE PTR [rax],al
   14000f757:	add    BYTE PTR [rax-0x6],dh
   14000f75a:	add    BYTE PTR [rax+0x1],al
   14000f75d:	add    BYTE PTR [rax],al
   14000f75f:	add    BYTE PTR [rax-0x6],bh
   14000f762:	add    BYTE PTR [rax+0x1],al
   14000f765:	add    BYTE PTR [rax],al
   14000f767:	add    BYTE PTR [rax+0x14000fa],cl
   14000f76d:	add    BYTE PTR [rax],al
   14000f76f:	add    BYTE PTR [rax+0x14000fa],bl
   14000f775:	add    BYTE PTR [rax],al
   14000f777:	add    BYTE PTR [rax+0x14000fa],ch
   14000f77d:	add    BYTE PTR [rax],al
   14000f77f:	add    BYTE PTR [rax+0x14000fa],bh
   14000f785:	add    BYTE PTR [rax],al
   14000f787:	add    ah,al
   14000f789:	cli    
   14000f78a:	add    BYTE PTR [rax+0x1],al
   14000f78d:	add    BYTE PTR [rax],al
   14000f78f:	add    al,dl
   14000f791:	cli    
   14000f792:	add    BYTE PTR [rax+0x1],al
   14000f795:	add    BYTE PTR [rax],al
   14000f797:	add    al,bl
   14000f799:	cli    
   14000f79a:	add    BYTE PTR [rax+0x1],al
   14000f79d:	add    BYTE PTR [rax],al
   14000f79f:	add    al,ch
   14000f7a1:	cli    
   14000f7a2:	add    BYTE PTR [rax+0x1],al
   14000f7a5:	add    BYTE PTR [rax],al
   14000f7a7:	add    al,bh
   14000f7a9:	cli    
   14000f7aa:	add    BYTE PTR [rax+0x1],al
   14000f7ad:	add    BYTE PTR [rax],al
   14000f7af:	add    BYTE PTR [rdx],al
   14000f7b1:	sti    
   14000f7b2:	add    BYTE PTR [rax+0x1],al
   14000f7b5:	add    BYTE PTR [rax],al
   14000f7b7:	add    BYTE PTR [rax],cl
   14000f7b9:	add    BYTE PTR [rcx],al
   14000f7bb:	rex add DWORD PTR [rax],eax
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	and    BYTE PTR [rax],al
   14000f7c2:	add    DWORD PTR [rax+0x1],eax
   14000f7c5:	add    BYTE PTR [rax],al
   14000f7c7:	add    BYTE PTR [rax+0x0],al
   14000f7ca:	add    DWORD PTR [rax+0x1],eax
   14000f7cd:	add    BYTE PTR [rax],al
   14000f7cf:	add    BYTE PTR [rax+0x0],bl
   14000f7d2:	add    DWORD PTR [rax+0x1],eax
   14000f7d5:	add    BYTE PTR [rax],al
   14000f7d7:	add    BYTE PTR [rax+0x0],bh
   14000f7da:	add    DWORD PTR [rax+0x1],eax
   14000f7dd:	add    BYTE PTR [rax],al
   14000f7df:	add    BYTE PTR [rbx+rdi*8],al
   14000f7e2:	add    BYTE PTR [rax+0x1],al
   14000f7e5:	add    BYTE PTR [rax],al
   14000f7e7:	add    BYTE PTR [rax],dl
   14000f7e9:	sti    
   14000f7ea:	add    BYTE PTR [rax+0x1],al
   14000f7ed:	add    BYTE PTR [rax],al
   14000f7ef:	add    BYTE PTR [rax],bl
   14000f7f1:	sti    
   14000f7f2:	add    BYTE PTR [rax+0x1],al
   14000f7f5:	add    BYTE PTR [rax],al
   14000f7f7:	add    BYTE PTR [rbx+rdi*8],bl
   14000f7fa:	add    BYTE PTR [rax+0x1],al
   14000f7fd:	add    BYTE PTR [rax],al
   14000f7ff:	add    BYTE PTR [rax],ah
   14000f801:	sti    
   14000f802:	add    BYTE PTR [rax+0x1],al
   14000f805:	add    BYTE PTR [rax],al
   14000f807:	add    BYTE PTR [rbx+rdi*8],ah
   14000f80a:	add    BYTE PTR [rax+0x1],al
   14000f80d:	add    BYTE PTR [rax],al
   14000f80f:	add    BYTE PTR [rax],ch
   14000f811:	sti    
   14000f812:	add    BYTE PTR [rax+0x1],al
   14000f815:	add    BYTE PTR [rax],al
   14000f817:	add    BYTE PTR [rbx+rdi*8],ch
   14000f81a:	add    BYTE PTR [rax+0x1],al
   14000f81d:	add    BYTE PTR [rax],al
   14000f81f:	add    BYTE PTR [rax],dh
   14000f821:	sti    
   14000f822:	add    BYTE PTR [rax+0x1],al
   14000f825:	add    BYTE PTR [rax],al
   14000f827:	add    BYTE PTR [rax],bh
   14000f829:	sti    
   14000f82a:	add    BYTE PTR [rax+0x1],al
   14000f82d:	add    BYTE PTR [rax],al
   14000f82f:	add    BYTE PTR [rbx+rdi*8+0x0],al
   14000f833:	rex add DWORD PTR [rax],eax
   14000f836:	add    BYTE PTR [rax],al
   14000f838:	rex.W sti 
   14000f83a:	add    BYTE PTR [rax+0x1],al
   14000f83d:	add    BYTE PTR [rax],al
   14000f83f:	add    BYTE PTR [rbx+rdi*8+0x0],cl
   14000f843:	rex add DWORD PTR [rax],eax
   14000f846:	add    BYTE PTR [rax],al
   14000f848:	push   rax
   14000f849:	sti    
   14000f84a:	add    BYTE PTR [rax+0x1],al
   14000f84d:	add    BYTE PTR [rax],al
   14000f84f:	add    BYTE PTR [rbx+rdi*8+0x0],dl
   14000f853:	rex add DWORD PTR [rax],eax
   14000f856:	add    BYTE PTR [rax],al
   14000f858:	pop    rax
   14000f859:	sti    
   14000f85a:	add    BYTE PTR [rax+0x1],al
   14000f85d:	add    BYTE PTR [rax],al
   14000f85f:	add    BYTE PTR [rbx+rdi*8+0x0],bl
   14000f863:	rex add DWORD PTR [rax],eax
   14000f866:	add    BYTE PTR [rax],al
   14000f868:	(bad)  
   14000f869:	sti    
   14000f86a:	add    BYTE PTR [rax+0x1],al
   14000f86d:	add    BYTE PTR [rax],al
   14000f86f:	add    BYTE PTR [rbx+rdi*8+0x0],ah
   14000f873:	rex add DWORD PTR [rax],eax
   14000f876:	add    BYTE PTR [rax],al
   14000f878:	push   0x14000fb
   14000f87d:	add    BYTE PTR [rax],al
   14000f87f:	add    BYTE PTR [rbx+rdi*8+0x0],ch
   14000f883:	rex add DWORD PTR [rax],eax
   14000f886:	add    BYTE PTR [rax],al
   14000f888:	jo     0x14000f885
   14000f88a:	add    BYTE PTR [rax+0x1],al
   14000f88d:	add    BYTE PTR [rax],al
   14000f88f:	add    BYTE PTR [rbx+rdi*8+0x0],dh
   14000f893:	rex add DWORD PTR [rax],eax
   14000f896:	add    BYTE PTR [rax],al
   14000f898:	js     0x14000f895
   14000f89a:	add    BYTE PTR [rax+0x1],al
   14000f89d:	add    BYTE PTR [rax],al
   14000f89f:	add    BYTE PTR [rbx+rdi*8+0x0],bh
   14000f8a3:	rex add DWORD PTR [rax],eax
   14000f8a6:	add    BYTE PTR [rax],al
   14000f8a8:	cmp    bl,0x0
   14000f8ab:	rex add DWORD PTR [rax],eax
   14000f8ae:	add    BYTE PTR [rax],al
   14000f8b0:	test   bl,bh
   14000f8b2:	add    BYTE PTR [rax+0x1],al
   14000f8b5:	add    BYTE PTR [rax],al
   14000f8b7:	add    BYTE PTR [rax+0x14000fb],cl
   14000f8bd:	add    BYTE PTR [rax],al
   14000f8bf:	add    BYTE PTR [rbx+rdi*8+0x14000],cl
   14000f8c6:	add    BYTE PTR [rax],al
   14000f8c8:	nop
   14000f8c9:	sti    
   14000f8ca:	add    BYTE PTR [rax+0x1],al
   14000f8cd:	add    BYTE PTR [rax],al
   14000f8cf:	add    BYTE PTR [rbx+rdi*8+0x14000],dl
   14000f8d6:	add    BYTE PTR [rax],al
   14000f8d8:	cwde   
   14000f8d9:	sti    
   14000f8da:	add    BYTE PTR [rax+0x1],al
   14000f8dd:	add    BYTE PTR [rax],al
   14000f8df:	add    BYTE PTR [rbx+rdi*8+0x14000],bl
   14000f8e6:	add    BYTE PTR [rax],al
   14000f8e8:	movabs al,ds:0xa4000000014000fb
   14000f8f1:	sti    
   14000f8f2:	add    BYTE PTR [rax+0x1],al
   14000f8f5:	add    BYTE PTR [rax],al
   14000f8f7:	add    BYTE PTR [rax+0x14000fb],ch
   14000f8fd:	add    BYTE PTR [rax],al
   14000f8ff:	add    BYTE PTR [rbx+rdi*8+0x14000],ch
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	mov    al,0xfb
   14000f90a:	add    BYTE PTR [rax+0x1],al
   14000f90d:	add    BYTE PTR [rax],al
   14000f90f:	add    BYTE PTR [rbx+rdi*8+0x14000],dh
   14000f916:	add    BYTE PTR [rax],al
   14000f918:	mov    eax,0x14000fb
   14000f91d:	add    BYTE PTR [rax],al
   14000f91f:	add    BYTE PTR [rbx+rdi*8+0x14000],bh
   14000f926:	add    BYTE PTR [rax],al
   14000f928:	sar    bl,0x0
   14000f92b:	rex add DWORD PTR [rax],eax
   14000f92e:	add    BYTE PTR [rax],al
   14000f930:	sar    bl,1
   14000f932:	add    BYTE PTR [rax+0x1],al
   14000f935:	add    BYTE PTR [rax],al
   14000f937:	add    al,ah
   14000f939:	sti    
   14000f93a:	add    BYTE PTR [rax+0x1],al
   14000f93d:	add    BYTE PTR [rax],al
   14000f93f:	add    al,ch
   14000f941:	sti    
   14000f942:	add    BYTE PTR [rax+0x1],al
   14000f945:	add    BYTE PTR [rax],al
   14000f947:	add    al,bh
   14000f949:	sti    
   14000f94a:	add    BYTE PTR [rax+0x1],al
   14000f94d:	add    BYTE PTR [rax],al
   14000f94f:	add    BYTE PTR [rax],dl
   14000f951:	cld    
   14000f952:	add    BYTE PTR [rax+0x1],al
   14000f955:	add    BYTE PTR [rax],al
   14000f957:	add    BYTE PTR [rax],ah
   14000f959:	cld    
   14000f95a:	add    BYTE PTR [rax+0x1],al
   14000f95d:	add    BYTE PTR [rax],al
   14000f95f:	add    BYTE PTR [rax],bh
   14000f961:	cld    
   14000f962:	add    BYTE PTR [rax+0x1],al
   14000f965:	add    BYTE PTR [rax],al
   14000f967:	add    BYTE PTR [rax-0x4],bl
   14000f96a:	add    BYTE PTR [rax+0x1],al
   14000f96d:	add    BYTE PTR [rax],al
   14000f96f:	add    BYTE PTR [rax-0x4],bh
   14000f972:	add    BYTE PTR [rax+0x1],al
   14000f975:	add    BYTE PTR [rax],al
   14000f977:	add    BYTE PTR [rax+0x14000fc],bl
   14000f97d:	add    BYTE PTR [rax],al
   14000f97f:	add    BYTE PTR [rax+0x14000fc],bh
   14000f985:	add    BYTE PTR [rax],al
   14000f987:	add    al,bl
   14000f989:	cld    
   14000f98a:	add    BYTE PTR [rax+0x1],al
   14000f98d:	add    BYTE PTR [rax],al
   14000f98f:	add    BYTE PTR [rax],al
   14000f991:	std    
   14000f992:	add    BYTE PTR [rax+0x1],al
   14000f995:	add    BYTE PTR [rax],al
   14000f997:	add    BYTE PTR [rax],ah
   14000f999:	std    
   14000f99a:	add    BYTE PTR [rax+0x1],al
   14000f99d:	add    BYTE PTR [rax],al
   14000f99f:	add    BYTE PTR [rax-0x3],cl
   14000f9a2:	add    BYTE PTR [rax+0x1],al
   14000f9a5:	add    BYTE PTR [rax],al
   14000f9a7:	add    BYTE PTR [rax-0x3],ch
   14000f9aa:	add    BYTE PTR [rax+0x1],al
   14000f9ad:	add    BYTE PTR [rax],al
   14000f9af:	add    BYTE PTR [rax+0x14000fd],dl
   14000f9b5:	add    BYTE PTR [rax],al
   14000f9b7:	add    BYTE PTR [rax+0x14000fd],dh
   14000f9bd:	add    BYTE PTR [rax],al
   14000f9bf:	add    al,al
   14000f9c1:	std    
   14000f9c2:	add    BYTE PTR [rax+0x1],al
   14000f9c5:	add    BYTE PTR [rax],al
   14000f9c7:	add    ah,al
   14000f9c9:	std    
   14000f9ca:	add    BYTE PTR [rax+0x1],al
   14000f9cd:	add    BYTE PTR [rax],al
   14000f9cf:	add    al,dl
   14000f9d1:	std    
   14000f9d2:	add    BYTE PTR [rax+0x1],al
   14000f9d5:	add    BYTE PTR [rax],al
   14000f9d7:	add    al,ah
   14000f9d9:	std    
   14000f9da:	add    BYTE PTR [rax+0x1],al
   14000f9dd:	add    BYTE PTR [rax],al
   14000f9df:	add    BYTE PTR [rsi+rdi*8],al
   14000f9e2:	add    BYTE PTR [rax+0x1],al
   14000f9e5:	add    BYTE PTR [rax],al
   14000f9e7:	add    BYTE PTR [rax],dl
   14000f9e9:	inc    BYTE PTR [rax]
   14000f9eb:	rex add DWORD PTR [rax],eax
   14000f9ee:	add    BYTE PTR [rax],al
   14000f9f0:	and    dh,bh
   14000f9f2:	add    BYTE PTR [rax+0x1],al
   14000f9f5:	add    BYTE PTR [rax],al
   14000f9f7:	add    BYTE PTR [rax],dh
   14000f9f9:	inc    BYTE PTR [rax]
   14000f9fb:	rex add DWORD PTR [rax],eax
   14000f9fe:	add    BYTE PTR [rax],al
   14000fa00:	push   rax
   14000fa01:	inc    BYTE PTR [rax]
   14000fa03:	rex add DWORD PTR [rax],eax
   14000fa06:	add    BYTE PTR [rax],al
   14000fa08:	jo     0x14000fa08
   14000fa0a:	add    BYTE PTR [rax+0x1],al
   14000fa0d:	add    BYTE PTR [rax],al
   14000fa0f:	add    BYTE PTR [rax+0x14000fe],bl
   14000fa15:	add    BYTE PTR [rax],al
   14000fa17:	add    al,al
   14000fa19:	inc    BYTE PTR [rax]
   14000fa1b:	rex add DWORD PTR [rax],eax
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	call   0x14140fb23
   14000fa25:	add    BYTE PTR [rax],al
   14000fa27:	add    BYTE PTR [rax],bl
   14000fa29:	inc    DWORD PTR [rax]
   14000fa2b:	rex add DWORD PTR [rax],eax
   14000fa2e:	add    BYTE PTR [rax],al
   14000fa30:	cmp    bh,bh
   14000fa32:	add    BYTE PTR [rax+0x1],al
   14000fa35:	add    BYTE PTR [rax],al
   14000fa37:	add    BYTE PTR [rax-0x1],ah
   14000fa3a:	add    BYTE PTR [rax+0x1],al
   14000fa3d:	add    BYTE PTR [rax],al
   14000fa3f:	add    BYTE PTR [rax+0x14000ff],cl
   14000fa45:	add    BYTE PTR [rax],al
   14000fa47:	add    BYTE PTR [rax+0x14000ff],bh
   14000fa4d:	add    BYTE PTR [rax],al
   14000fa4f:	add    al,ch
   14000fa51:	inc    DWORD PTR [rax]
   14000fa53:	rex add DWORD PTR [rax],eax
   14000fa56:	add    BYTE PTR [rax],al
   14000fa58:	add    bh,bl
   14000fa5a:	add    BYTE PTR [rax+0x1],al
   14000fa5d:	add    BYTE PTR [rax],al
   14000fa5f:	add    BYTE PTR [rdi+0x5f],bl
   14000fa62:	(bad)  
   14000fa64:	jae    0x14000facb
   14000fa66:	sub    BYTE PTR fs:[rax],al
   14000fa69:	add    BYTE PTR [rax],al
   14000fa6b:	add    BYTE PTR [rax],al
   14000fa6d:	add    BYTE PTR [rax],al
   14000fa6f:	add    BYTE PTR [rdi+0x5f],bl
   14000fa72:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   14000fa76:	ins    BYTE PTR es:[rdi],dx
   14000fa77:	add    BYTE PTR [rdi+0x5f],bl
   14000fa7a:	jo     0x14000fadd
   14000fa7c:	jae    0x14000fae1
   14000fa7e:	(bad)  
   14000fa7f:	ins    BYTE PTR es:[rdi],dx
	...
   14000fa88:	pop    rdi
   14000fa89:	pop    rdi
   14000fa8a:	jae    0x14000fb00
   14000fa8c:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   14000fa90:	ins    BYTE PTR es:[rdi],dx
   14000fa91:	add    BYTE PTR [rax],al
   14000fa93:	add    BYTE PTR [rax],al
   14000fa95:	add    BYTE PTR [rax],al
   14000fa97:	add    BYTE PTR [rdi+0x5f],bl
   14000fa9a:	je     0x14000fb04
   14000fa9c:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   14000faa3:	add    BYTE PTR [rax],al
   14000faa5:	add    BYTE PTR [rax],al
   14000faa7:	add    BYTE PTR [rdi+0x5f],bl
   14000faaa:	data16 (bad) 
   14000faac:	jae    0x14000fb22
   14000faae:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fab1:	ins    BYTE PTR es:[rdi],dx
   14000fab2:	add    BYTE PTR [rax],al
   14000fab4:	add    BYTE PTR [rax],al
   14000fab6:	add    BYTE PTR [rax],al
   14000fab8:	pop    rdi
   14000fab9:	pop    rdi
   14000faba:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   14000fabe:	(bad)  
   14000fabf:	ins    BYTE PTR es:[rdi],dx
   14000fac0:	ins    BYTE PTR es:[rdi],dx
   14000fac1:	add    BYTE PTR [rax],al
   14000fac3:	add    BYTE PTR [rdi+0x5f],bl
   14000fac6:	gs (bad) 
   14000fac8:	(bad)  
   14000fac9:	imul   eax,DWORD PTR [rax],0x0
   14000facf:	add    BYTE PTR [rdi+0x5f],bl
   14000fad2:	jo     0x14000fb48
   14000fad4:	jb     0x14000fb0c
   14000fad6:	xor    al,0x0
   14000fad8:	pop    rdi
   14000fad9:	pop    rdi
   14000fada:	jb     0x14000fb41
   14000fadc:	jae    0x14000fb52
   14000fade:	jb     0x14000fb49
   14000fae0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000fae4:	add    BYTE PTR [rax],al
   14000fae6:	add    BYTE PTR [rax],al
   14000fae8:	pop    rdi
   14000fae9:	pop    rdi
   14000faea:	jne    0x14000fb5a
   14000faec:	(bad)  
   14000faed:	ins    BYTE PTR es:[rdi],dx
   14000faee:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   14000faf5:	add    BYTE PTR [rax],al
   14000faf7:	add    BYTE PTR [rdx+0x65],dh
   14000fafa:	jae    0x14000fb70
   14000fafc:	jb     0x14000fb67
   14000fafe:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   14000fb02:	add    BYTE PTR [rax],al
   14000fb04:	and    BYTE PTR [rsi+0x65],ch
   14000fb07:	ja     0x14000fb09
   14000fb09:	add    BYTE PTR [rax],al
   14000fb0b:	add    BYTE PTR [rax],al
   14000fb0d:	add    BYTE PTR [rax],al
   14000fb0f:	add    BYTE PTR [rax],ah
   14000fb11:	fs gs ins BYTE PTR es:[rdi],dx
   14000fb14:	gs je  0x14000fb7c
   14000fb17:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e00fb1d
   14000fb1d:	add    BYTE PTR ds:[rax],al
   14000fb20:	cmp    al,0x3c
   14000fb22:	add    BYTE PTR [rax],al
   14000fb24:	and    DWORD PTR [rax],eax
   14000fb26:	add    BYTE PTR [rax],al
   14000fb28:	cmp    eax,0x2100003d
   14000fb2d:	cmp    eax,0x5d5b0000
   14000fb32:	add    BYTE PTR [rax],al
   14000fb34:	add    BYTE PTR [rax],al
   14000fb36:	add    BYTE PTR [rax],al
   14000fb38:	outs   dx,DWORD PTR ds:[rsi]
   14000fb39:	jo     0x14000fba0
   14000fb3b:	jb     0x14000fb9e
   14000fb3d:	je     0x14000fbae
   14000fb3f:	jb     0x14000fb41
   14000fb41:	add    BYTE PTR [rax],al
   14000fb43:	add    BYTE PTR [rip+0x2a00003e],ch        # 0x16a00fb87
   14000fb49:	add    BYTE PTR [rax],al
   14000fb4b:	add    BYTE PTR [rbx],ch
   14000fb4d:	sub    eax,DWORD PTR [rax]
   14000fb4f:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d00fb82
   14000fb55:	add    BYTE PTR [rax],al
   14000fb57:	add    BYTE PTR [rbx],ch
   14000fb59:	add    BYTE PTR [rax],al
   14000fb5b:	add    BYTE PTR [rsi],ah
   14000fb5d:	add    BYTE PTR [rax],al
   14000fb5f:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f0125a3
   14000fb65:	add    BYTE PTR [rax],al
   14000fb67:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c00fb6d
   14000fb6d:	add    BYTE PTR [rax],al
   14000fb6f:	add    BYTE PTR [rdi*1+0x3e0000],bh
   14000fb76:	add    BYTE PTR [rax],al
   14000fb78:	ds cmp eax,0x2c0000
   14000fb7e:	add    BYTE PTR [rax],al
   14000fb80:	sub    BYTE PTR [rcx],ch
   14000fb82:	add    BYTE PTR [rax],al
   14000fb84:	jle    0x14000fb86
   14000fb86:	add    BYTE PTR [rax],al
   14000fb88:	pop    rsi
   14000fb89:	add    BYTE PTR [rax],al
   14000fb8b:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000fb8f:	add    BYTE PTR [rsi],ah
   14000fb91:	add    BYTE PTR es:[rax],al
   14000fb94:	jl     0x14000fc12
   14000fb96:	add    BYTE PTR [rax],al
   14000fb98:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2bfb9e
   14000fb9e:	add    BYTE PTR [rax],al
   14000fba0:	sub    eax,0x2f00003d
   14000fba5:	cmp    eax,0x3d250000
   14000fbaa:	add    BYTE PTR [rax],al
   14000fbac:	ds ds cmp eax,0x3d3c3c00
   14000fbb3:	add    BYTE PTR [rsi],ah
   14000fbb5:	cmp    eax,0x3d7c0000
   14000fbba:	add    BYTE PTR [rax],al
   14000fbbc:	pop    rsi
   14000fbbd:	cmp    eax,0x76600000
   14000fbc2:	data16 je 0x14000fc26
   14000fbc5:	(bad)  
   14000fbc6:	ins    BYTE PTR es:[rdi],dx
   14000fbc7:	gs (bad) 
   14000fbc9:	add    BYTE PTR [rax],al
   14000fbcb:	add    BYTE PTR [rax],al
   14000fbcd:	add    BYTE PTR [rax],al
   14000fbcf:	add    BYTE PTR [rax+0x76],ah
   14000fbd2:	(bad)  
   14000fbd3:	je     0x14000fc36
   14000fbd5:	(bad)  
   14000fbd6:	ins    BYTE PTR es:[rdi],dx
   14000fbd7:	gs (bad) 
   14000fbd9:	add    BYTE PTR [rax],al
   14000fbdb:	add    BYTE PTR [rax],al
   14000fbdd:	add    BYTE PTR [rax],al
   14000fbdf:	add    BYTE PTR [rax+0x76],ah
   14000fbe2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fbe5:	ins    BYTE PTR es:[rdi],dx
   14000fbe6:	(bad)  
   14000fbe7:	add    BYTE PTR [rax+0x74],ah
   14000fbea:	jns    0x14000fc5c
   14000fbec:	outs   dx,DWORD PTR gs:[rsi]
   14000fbee:	data16 (bad) 
	...
   14000fbf8:	(bad)  
   14000fbf9:	ins    BYTE PTR es:[rdi],dx
   14000fbfa:	outs   dx,DWORD PTR ds:[rsi]
   14000fbfb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fbfe:	and    BYTE PTR [rbx+0x74],dh
   14000fc01:	(bad)  
   14000fc02:	je     0x14000fc6d
   14000fc04:	movsxd esp,DWORD PTR [rax]
   14000fc06:	addr32 jne 0x14000fc6a
   14000fc09:	jb     0x14000fc6f
   14000fc0b:	(bad)  
   14000fc0c:	add    BYTE PTR [rax],al
   14000fc0e:	add    BYTE PTR [rax],al
   14000fc10:	(bad)  
   14000fc11:	jae    0x14000fc87
   14000fc13:	jb     0x14000fc7e
   14000fc15:	outs   dx,BYTE PTR ds:[rsi]
   14000fc16:	addr32 (bad) 
	...
   14000fc20:	(bad)  
   14000fc21:	jbe    0x14000fc85
   14000fc23:	(bad)  
   14000fc24:	jae    0x14000fc8b
   14000fc26:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14000fc2a:	je     0x14000fc9e
   14000fc2c:	jne    0x14000fc91
   14000fc2e:	je     0x14000fc9f
   14000fc30:	jb     0x14000fc59
   14000fc32:	add    BYTE PTR [rax],al
   14000fc34:	add    BYTE PTR [rax],al
   14000fc36:	add    BYTE PTR [rax],al
   14000fc38:	(bad)  
   14000fc39:	jbe    0x14000fca0
   14000fc3b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fc3f:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14000fc43:	gs je  0x14000fcaf
   14000fc46:	outs   dx,BYTE PTR ds:[rsi]
   14000fc47:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14000fc4c:	je     0x14000fcc0
   14000fc4e:	jne    0x14000fcb3
   14000fc50:	je     0x14000fcc1
   14000fc52:	jb     0x14000fc7b
   14000fc54:	add    BYTE PTR [rax],al
   14000fc56:	add    BYTE PTR [rax],al
   14000fc58:	(bad)  
   14000fc59:	fs gs data16 (bad) 
   14000fc5d:	jne    0x14000fccb
   14000fc5f:	je     0x14000fc81
   14000fc61:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000fc64:	jae    0x14000fcda
   14000fc66:	jb     0x14000fcdd
   14000fc68:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fc6c:	and    BYTE PTR [rbx+0x6c],ah
   14000fc6f:	outs   dx,DWORD PTR ds:[rsi]
   14000fc70:	jae    0x14000fce7
   14000fc72:	jb     0x14000fcd9
   14000fc74:	(bad)  
   14000fc75:	add    BYTE PTR [rax],al
   14000fc77:	add    BYTE PTR [rax+0x73],ah
   14000fc7a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fc7d:	(bad)  
   14000fc7e:	jb     0x14000fca0
   14000fc80:	fs gs ins BYTE PTR es:[rdi],dx
   14000fc83:	gs je  0x14000fcef
   14000fc86:	outs   dx,BYTE PTR ds:[rsi]
   14000fc87:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14000fc8c:	je     0x14000fd00
   14000fc8e:	jne    0x14000fcf3
   14000fc90:	je     0x14000fd01
   14000fc92:	jb     0x14000fcbb
   14000fc94:	add    BYTE PTR [rax],al
   14000fc96:	add    BYTE PTR [rax],al
   14000fc98:	(bad)  
   14000fc99:	jbe    0x14000fd00
   14000fc9b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fc9f:	and    BYTE PTR [rbx+0x6f],ah
   14000fca2:	outs   dx,BYTE PTR ds:[rsi]
   14000fca3:	jae    0x14000fd19
   14000fca5:	jb     0x14000fd1c
   14000fca7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fcab:	and    BYTE PTR [rcx+0x74],ch
   14000fcae:	gs jb  0x14000fd12
   14000fcb1:	je     0x14000fd22
   14000fcb3:	jb     0x14000fcdc
   14000fcb5:	add    BYTE PTR [rax],al
   14000fcb7:	add    BYTE PTR [rax+0x76],ah
   14000fcba:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000fcbf:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14000fcc3:	je     0x14000fd37
   14000fcc5:	jne    0x14000fd2a
   14000fcc7:	je     0x14000fd38
   14000fcc9:	jb     0x14000fceb
   14000fccb:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14000fcd3:	(bad)  
   14000fcd4:	add    BYTE PTR [rax],al
   14000fcd6:	add    BYTE PTR [rax],al
   14000fcd8:	(bad)  
   14000fcd9:	jbe    0x14000fd40
   14000fcdb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fcdf:	and    BYTE PTR [rsi+0x62],dh
   14000fce2:	(bad)  
   14000fce3:	jae    0x14000fd4a
   14000fce5:	and    BYTE PTR [rbx+0x6f],ah
   14000fce8:	outs   dx,BYTE PTR ds:[rsi]
   14000fce9:	jae    0x14000fd5f
   14000fceb:	jb     0x14000fd62
   14000fced:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fcf1:	and    BYTE PTR [rcx+0x74],ch
   14000fcf4:	gs jb  0x14000fd58
   14000fcf7:	je     0x14000fd68
   14000fcf9:	jb     0x14000fd22
   14000fcfb:	add    BYTE PTR [rax],al
   14000fcfd:	add    BYTE PTR [rax],al
   14000fcff:	add    BYTE PTR [rax+0x76],ah
   14000fd02:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   14000fd09:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   14000fd11:	ins    DWORD PTR es:[rdi],dx
   14000fd12:	outs   dx,BYTE PTR gs:[rsi]
   14000fd14:	je     0x14000fd36
   14000fd16:	ins    DWORD PTR es:[rdi],dx
   14000fd17:	(bad)  
   14000fd18:	jo     0x14000fd41
   14000fd1a:	add    BYTE PTR [rax],al
   14000fd1c:	add    BYTE PTR [rax],al
   14000fd1e:	add    BYTE PTR [rax],al
   14000fd20:	(bad)  
   14000fd21:	gs push 0x63657620
   14000fd27:	je     0x14000fd98
   14000fd29:	jb     0x14000fd4b
   14000fd2b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000fd2e:	jae    0x14000fda4
   14000fd30:	jb     0x14000fda7
   14000fd32:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fd36:	and    BYTE PTR [rcx+0x74],ch
   14000fd39:	gs jb  0x14000fd9d
   14000fd3c:	je     0x14000fdad
   14000fd3e:	jb     0x14000fd67
	...
   14000fd48:	(bad)  
   14000fd49:	gs push 0x63657620
   14000fd4f:	je     0x14000fdc0
   14000fd51:	jb     0x14000fd73
   14000fd53:	fs gs jae 0x14000fdcb
   14000fd57:	jb     0x14000fdce
   14000fd59:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fd5d:	and    BYTE PTR [rcx+0x74],ch
   14000fd60:	gs jb  0x14000fdc4
   14000fd63:	je     0x14000fdd4
   14000fd65:	jb     0x14000fd8e
   14000fd67:	add    BYTE PTR [rax+0x65],ah
   14000fd6a:	push   0x63657620
   14000fd6f:	je     0x14000fde0
   14000fd71:	jb     0x14000fd93
   14000fd73:	jbe    0x14000fdd7
   14000fd75:	(bad)  
   14000fd76:	jae    0x14000fddd
   14000fd78:	and    BYTE PTR [rbx+0x6f],ah
   14000fd7b:	outs   dx,BYTE PTR ds:[rsi]
   14000fd7c:	jae    0x14000fdf2
   14000fd7e:	jb     0x14000fdf5
   14000fd80:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fd84:	and    BYTE PTR [rcx+0x74],ch
   14000fd87:	gs jb  0x14000fdeb
   14000fd8a:	je     0x14000fdfb
   14000fd8c:	jb     0x14000fdb5
   14000fd8e:	add    BYTE PTR [rax],al
   14000fd90:	(bad)  
   14000fd91:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000fd94:	jns    0x14000fdb6
   14000fd96:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000fd99:	jae    0x14000fe0f
   14000fd9b:	jb     0x14000fe12
   14000fd9d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fda1:	and    BYTE PTR [rbx+0x6c],ah
   14000fda4:	outs   dx,DWORD PTR ds:[rsi]
   14000fda5:	jae    0x14000fe1c
   14000fda7:	jb     0x14000fe0e
   14000fda9:	(bad)  
   14000fdaa:	add    BYTE PTR [rax],al
   14000fdac:	add    BYTE PTR [rax],al
   14000fdae:	add    BYTE PTR [rax],al
   14000fdb0:	(bad)  
   14000fdb1:	jne    0x14000fe17
   14000fdb3:	je     0x14000fdd5
   14000fdb5:	jb     0x14000fe1c
   14000fdb7:	je     0x14000fe2e
   14000fdb9:	jb     0x14000fe29
   14000fdbb:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   14000fdc2:	rex.W add BYTE PTR [rax+0x52],spl
   14000fdc6:	push   rsp
   14000fdc7:	push   rsp
   14000fdc8:	rex.WB add BYTE PTR [r8],al
   14000fdcb:	add    BYTE PTR [rax],al
   14000fdcd:	add    BYTE PTR [rax],al
   14000fdcf:	add    BYTE PTR [rax+0x6c],ah
   14000fdd2:	outs   dx,DWORD PTR ds:[rsi]
   14000fdd3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fdd6:	and    BYTE PTR [rsi+0x66],dh
   14000fdd9:	je     0x14000fe3c
   14000fddb:	(bad)  
   14000fddc:	ins    BYTE PTR es:[rdi],dx
   14000fddd:	gs (bad) 
   14000fddf:	add    BYTE PTR [rax+0x6c],ah
   14000fde2:	outs   dx,DWORD PTR ds:[rsi]
   14000fde3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000fde6:	and    BYTE PTR [rsi+0x66],dh
   14000fde9:	je     0x14000fe4c
   14000fdeb:	(bad)  
   14000fdec:	ins    BYTE PTR es:[rdi],dx
   14000fded:	and    BYTE PTR gs:[rbx+0x6f],ah
   14000fdf1:	outs   dx,BYTE PTR ds:[rsi]
   14000fdf2:	jae    0x14000fe68
   14000fdf4:	jb     0x14000fe6b
   14000fdf6:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fdfa:	and    BYTE PTR [rbx+0x6c],ah
   14000fdfd:	outs   dx,DWORD PTR ds:[rsi]
   14000fdfe:	jae    0x14000fe75
   14000fe00:	jb     0x14000fe67
   14000fe02:	(bad)  
   14000fe03:	add    BYTE PTR [rax],ah
   14000fe05:	outs   dx,BYTE PTR ds:[rsi]
   14000fe06:	gs ja  0x14000fe64
   14000fe09:	pop    rbp
   14000fe0a:	add    BYTE PTR [rax],al
   14000fe0c:	add    BYTE PTR [rax],al
   14000fe0e:	add    BYTE PTR [rax],al
   14000fe10:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14000fe14:	gs je  0x14000fe7c
   14000fe17:	pop    rbx
   14000fe18:	pop    rbp
   14000fe19:	add    BYTE PTR [rax],al
   14000fe1b:	add    BYTE PTR [rax],al
   14000fe1d:	add    BYTE PTR [rax],al
   14000fe1f:	add    BYTE PTR [rax+0x6f],ah
   14000fe22:	ins    DWORD PTR es:[rdi],dx
   14000fe23:	outs   dx,BYTE PTR ds:[rsi]
   14000fe24:	imul   esp,DWORD PTR [rax],0x6c6c6163
   14000fe2a:	jae    0x14000fe95
   14000fe2c:	addr32 (bad) 
   14000fe2e:	add    BYTE PTR [rax],al
   14000fe30:	(bad)  
   14000fe31:	jo     0x14000fe9f
   14000fe33:	(bad)  
   14000fe34:	movsxd esp,DWORD PTR [rbp+0x6d]
   14000fe37:	outs   dx,BYTE PTR gs:[rsi]
   14000fe39:	je     0x14000fe5b
   14000fe3b:	fs gs ins BYTE PTR es:[rdi],dx
   14000fe3e:	gs je  0x14000fea6
   14000fe41:	and    BYTE PTR [rbx+0x6c],ah
   14000fe44:	outs   dx,DWORD PTR ds:[rsi]
   14000fe45:	jae    0x14000febc
   14000fe47:	jb     0x14000feae
   14000fe49:	(bad)  
   14000fe4a:	add    BYTE PTR [rax],al
   14000fe4c:	add    BYTE PTR [rax],al
   14000fe4e:	add    BYTE PTR [rax],al
   14000fe50:	(bad)  
   14000fe51:	jo     0x14000febf
   14000fe53:	(bad)  
   14000fe54:	movsxd esp,DWORD PTR [rbp+0x6d]
   14000fe57:	outs   dx,BYTE PTR gs:[rsi]
   14000fe59:	je     0x14000fe7b
   14000fe5b:	fs gs ins BYTE PTR es:[rdi],dx
   14000fe5e:	gs je  0x14000fec6
   14000fe61:	pop    rbx
   14000fe62:	pop    rbp
   14000fe63:	and    BYTE PTR [rbx+0x6c],ah
   14000fe66:	outs   dx,DWORD PTR ds:[rsi]
   14000fe67:	jae    0x14000fede
   14000fe69:	jb     0x14000fed0
   14000fe6b:	(bad)  
   14000fe6c:	add    BYTE PTR [rax],al
   14000fe6e:	add    BYTE PTR [rax],al
   14000fe70:	(bad)  
   14000fe71:	ins    DWORD PTR es:[rdi],dx
   14000fe72:	(bad)  
   14000fe73:	outs   dx,BYTE PTR ds:[rsi]
   14000fe74:	(bad)  
   14000fe75:	gs and BYTE PTR fs:[esi+0x65],dh
   14000fe7b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fe7f:	and    BYTE PTR [rbx+0x6f],ah
   14000fe82:	outs   dx,BYTE PTR ds:[rsi]
   14000fe83:	jae    0x14000fef9
   14000fe85:	jb     0x14000fefc
   14000fe87:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fe8b:	and    BYTE PTR [rcx+0x74],ch
   14000fe8e:	gs jb  0x14000fef2
   14000fe91:	je     0x14000ff02
   14000fe93:	jb     0x14000febc
   14000fe95:	add    BYTE PTR [rax],al
   14000fe97:	add    BYTE PTR [rax+0x6d],ah
   14000fe9a:	(bad)  
   14000fe9b:	outs   dx,BYTE PTR ds:[rsi]
   14000fe9c:	(bad)  
   14000fe9d:	gs and BYTE PTR fs:[esi+0x65],dh
   14000fea3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fea7:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14000feab:	je     0x14000ff1f
   14000fead:	jne    0x14000ff12
   14000feaf:	je     0x14000ff20
   14000feb1:	jb     0x14000fed3
   14000feb3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14000febb:	(bad)  
   14000febc:	add    BYTE PTR [rax],al
   14000febe:	add    BYTE PTR [rax],al
   14000fec0:	(bad)  
   14000fec1:	gs push 0x63657620
   14000fec7:	je     0x14000ff38
   14000fec9:	jb     0x14000feeb
   14000fecb:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000fece:	jns    0x14000fef0
   14000fed0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000fed3:	jae    0x14000ff49
   14000fed5:	jb     0x14000ff4c
   14000fed7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000fedb:	and    BYTE PTR [rcx+0x74],ch
   14000fede:	gs jb  0x14000ff42
   14000fee1:	je     0x14000ff52
   14000fee3:	jb     0x14000ff0c
   14000fee5:	add    BYTE PTR [rax],al
   14000fee7:	add    BYTE PTR [rax+0x65],ah
   14000feea:	push   0x63657620
   14000feef:	je     0x14000ff60
   14000fef1:	jb     0x14000ff13
   14000fef3:	jbe    0x14000ff57
   14000fef5:	(bad)  
   14000fef6:	jae    0x14000ff5d
   14000fef8:	and    BYTE PTR [rbx+0x6f],ah
   14000fefb:	jo     0x14000ff76
   14000fefd:	and    BYTE PTR [rbx+0x6f],ah
   14000ff00:	outs   dx,BYTE PTR ds:[rsi]
   14000ff01:	jae    0x14000ff77
   14000ff03:	jb     0x14000ff7a
   14000ff05:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ff09:	and    BYTE PTR [rcx+0x74],ch
   14000ff0c:	gs jb  0x14000ff70
   14000ff0f:	je     0x14000ff80
   14000ff11:	jb     0x14000ff3a
   14000ff13:	add    BYTE PTR [rax],al
   14000ff15:	add    BYTE PTR [rax],al
   14000ff17:	add    BYTE PTR [rax+0x64],ah
   14000ff1a:	jns    0x14000ff8a
   14000ff1c:	(bad)  
   14000ff1d:	ins    DWORD PTR es:[rdi],dx
   14000ff1e:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   14000ff25:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   14000ff2c:	and    BYTE PTR [rsi+0x6f],ah
   14000ff2f:	jb     0x14000ff51
   14000ff31:	(bad)  
   14000ff32:	add    BYTE PTR [rax],al
   14000ff34:	add    BYTE PTR [rax],al
   14000ff36:	add    BYTE PTR [rax],al
   14000ff38:	(bad)  
   14000ff39:	fs jns 0x14000ffaa
   14000ff3c:	(bad)  
   14000ff3d:	ins    DWORD PTR es:[rdi],dx
   14000ff3e:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   14000ff45:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   14000ff4d:	jne    0x14000ffb2
   14000ff4f:	je     0x14000ffc0
   14000ff51:	jb     0x14000ff73
   14000ff53:	outs   dx,WORD PTR ds:[rsi]
   14000ff55:	jb     0x14000ff77
   14000ff57:	(bad)  
	...
   14000ff60:	(bad)  
   14000ff61:	jbe    0x14000ffc8
   14000ff63:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ff67:	and    BYTE PTR [rbx+0x6f],ah
   14000ff6a:	jo     0x14000ffe5
   14000ff6c:	and    BYTE PTR [rbx+0x6f],ah
   14000ff6f:	outs   dx,BYTE PTR ds:[rsi]
   14000ff70:	jae    0x14000ffe6
   14000ff72:	jb     0x14000ffe9
   14000ff74:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ff78:	and    BYTE PTR [rcx+0x74],ch
   14000ff7b:	gs jb  0x14000ffdf
   14000ff7e:	je     0x14000ffef
   14000ff80:	jb     0x14000ffa9
   14000ff82:	add    BYTE PTR [rax],al
   14000ff84:	add    BYTE PTR [rax],al
   14000ff86:	add    BYTE PTR [rax],al
   14000ff88:	(bad)  
   14000ff89:	jbe    0x14000fff0
   14000ff8b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ff8f:	and    BYTE PTR [rsi+0x62],dh
   14000ff92:	(bad)  
   14000ff93:	jae    0x14000fffa
   14000ff95:	and    BYTE PTR [rbx+0x6f],ah
   14000ff98:	jo     0x140010013
   14000ff9a:	and    BYTE PTR [rbx+0x6f],ah
   14000ff9d:	outs   dx,BYTE PTR ds:[rsi]
   14000ff9e:	jae    0x140010014
   14000ffa0:	jb     0x140010017
   14000ffa2:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ffa6:	and    BYTE PTR [rcx+0x74],ch
   14000ffa9:	gs jb  0x14001000d
   14000ffac:	je     0x14001001d
   14000ffae:	jb     0x14000ffd7
	...
   14000ffb8:	(bad)  
   14000ffb9:	ins    DWORD PTR es:[rdi],dx
   14000ffba:	(bad)  
   14000ffbb:	outs   dx,BYTE PTR ds:[rsi]
   14000ffbc:	(bad)  
   14000ffbd:	gs and BYTE PTR fs:[esi+0x65],dh
   14000ffc3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ffc7:	and    BYTE PTR [rbx+0x6f],ah
   14000ffca:	jo     0x140010045
   14000ffcc:	and    BYTE PTR [rbx+0x6f],ah
   14000ffcf:	outs   dx,BYTE PTR ds:[rsi]
   14000ffd0:	jae    0x140010046
   14000ffd2:	jb     0x140010049
   14000ffd4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000ffd8:	and    BYTE PTR [rcx+0x74],ch
   14000ffdb:	gs jb  0x14001003f
   14000ffde:	je     0x14001004f
   14000ffe0:	jb     0x140010009
   14000ffe2:	add    BYTE PTR [rax],al
   14000ffe4:	add    BYTE PTR [rax],al
   14000ffe6:	add    BYTE PTR [rax],al
   14000ffe8:	(bad)  
   14000ffe9:	ins    BYTE PTR es:[rdi],dx
   14000ffea:	outs   dx,DWORD PTR ds:[rsi]
   14000ffeb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ffee:	and    BYTE PTR [rbx+0x74],dh
   14000fff1:	(bad)  
   14000fff2:	je     0x14001005d
   14000fff4:	movsxd esp,DWORD PTR [rax]
   14000fff6:	je     0x140010060
   14000fff8:	jb     0x14001005f
   14000fffa:	(bad)  
   14000fffb:	and    BYTE PTR fs:[rdi+0x75],ah
   14000ffff:	(bad)  
   140010000:	jb     0x140010066
   140010002:	(bad)  
   140010003:	add    BYTE PTR [rax],al
   140010005:	add    BYTE PTR [rax],al
   140010007:	add    BYTE PTR [rax],ah
   140010009:	push   rsp
   14001000a:	jns    0x14001007c
   14001000c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140010011:	movsxd esi,DWORD PTR [rdx+0x69]
   140010014:	jo     0x14001008a
   140010016:	outs   dx,DWORD PTR ds:[rsi]
   140010017:	jb     0x140010040
   140010019:	add    BYTE PTR [rax],al
   14001001b:	add    BYTE PTR [rax],al
   14001001d:	add    BYTE PTR [rax],al
   14001001f:	add    BYTE PTR [rax],ah
   140010021:	rex.X (bad) 
   140010023:	jae    0x14001008a
   140010025:	and    BYTE PTR [rbx+0x6c],al
   140010028:	(bad)  
   140010029:	jae    0x14001009e
   14001002b:	and    BYTE PTR [rbp+riz*2+0x73],al
   14001002f:	movsxd esi,DWORD PTR [rdx+0x69]
   140010032:	jo     0x1400100a8
   140010034:	outs   dx,DWORD PTR ds:[rsi]
   140010035:	jb     0x140010057
   140010037:	(bad)  
   140010038:	je     0x14001005a
   14001003a:	sub    BYTE PTR [rax],al
   14001003c:	add    BYTE PTR [rax],al
   14001003e:	add    BYTE PTR [rax],al
   140010040:	and    BYTE PTR [rdx+0x61],al
   140010043:	jae    0x1400100aa
   140010045:	and    BYTE PTR [rbx+0x6c],al
   140010048:	(bad)  
   140010049:	jae    0x1400100be
   14001004b:	and    BYTE PTR [rcx+0x72],al
   14001004e:	jb     0x1400100b1
   140010050:	jns    0x140010079
   140010052:	add    BYTE PTR [rax],al
   140010054:	add    BYTE PTR [rax],al
   140010056:	add    BYTE PTR [rax],al
   140010058:	and    BYTE PTR [rbx+0x6c],al
   14001005b:	(bad)  
   14001005c:	jae    0x1400100d1
   14001005e:	and    BYTE PTR [rax+0x69],cl
   140010061:	gs jb  0x1400100c5
   140010064:	jb     0x1400100c9
   140010066:	push   0x65442079
   14001006b:	jae    0x1400100d0
   14001006d:	jb     0x1400100d8
   14001006f:	jo     0x1400100e5
   140010071:	outs   dx,DWORD PTR ds:[rsi]
   140010072:	jb     0x14001009b
   140010074:	add    BYTE PTR [rax],al
   140010076:	add    BYTE PTR [rax],al
   140010078:	and    BYTE PTR [rbx+0x6f],al
   14001007b:	ins    DWORD PTR es:[rdi],dx
   14001007c:	jo     0x1400100ea
   14001007e:	gs je  0x1400100e6
   140010081:	and    BYTE PTR [rdi+0x62],cl
   140010084:	push   0x65
   140010086:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   14001008a:	outs   dx,DWORD PTR ds:[rsi]
   14001008b:	movsxd esp,DWORD PTR [rcx+0x74]
   14001008e:	outs   dx,DWORD PTR ds:[rsi]
   14001008f:	jb     0x1400100b8
	...
   14001019d:	add    BYTE PTR [rax],al
   14001019f:	add    BYTE PTR [rax],ah
   1400101a1:	add    BYTE PTR [rax],ah
   1400101a3:	add    BYTE PTR [rax],ah
   1400101a5:	add    BYTE PTR [rax],ah
   1400101a7:	add    BYTE PTR [rax],ah
   1400101a9:	add    BYTE PTR [rax],ah
   1400101ab:	add    BYTE PTR [rax],ah
   1400101ad:	add    BYTE PTR [rax],ah
   1400101af:	add    BYTE PTR [rax],ah
   1400101b1:	add    BYTE PTR [rax],ch
   1400101b3:	add    BYTE PTR [rax],ch
   1400101b5:	add    BYTE PTR [rax],ch
   1400101b7:	add    BYTE PTR [rax],ch
   1400101b9:	add    BYTE PTR [rax],ch
   1400101bb:	add    BYTE PTR [rax],ah
   1400101bd:	add    BYTE PTR [rax],ah
   1400101bf:	add    BYTE PTR [rax],ah
   1400101c1:	add    BYTE PTR [rax],ah
   1400101c3:	add    BYTE PTR [rax],ah
   1400101c5:	add    BYTE PTR [rax],ah
   1400101c7:	add    BYTE PTR [rax],ah
   1400101c9:	add    BYTE PTR [rax],ah
   1400101cb:	add    BYTE PTR [rax],ah
   1400101cd:	add    BYTE PTR [rax],ah
   1400101cf:	add    BYTE PTR [rax],ah
   1400101d1:	add    BYTE PTR [rax],ah
   1400101d3:	add    BYTE PTR [rax],ah
   1400101d5:	add    BYTE PTR [rax],ah
   1400101d7:	add    BYTE PTR [rax],ah
   1400101d9:	add    BYTE PTR [rax],ah
   1400101db:	add    BYTE PTR [rax],ah
   1400101dd:	add    BYTE PTR [rax],ah
   1400101df:	add    BYTE PTR [rax+0x0],cl
   1400101e2:	adc    BYTE PTR [rax],al
   1400101e4:	adc    BYTE PTR [rax],al
   1400101e6:	adc    BYTE PTR [rax],al
   1400101e8:	adc    BYTE PTR [rax],al
   1400101ea:	adc    BYTE PTR [rax],al
   1400101ec:	adc    BYTE PTR [rax],al
   1400101ee:	adc    BYTE PTR [rax],al
   1400101f0:	adc    BYTE PTR [rax],al
   1400101f2:	adc    BYTE PTR [rax],al
   1400101f4:	adc    BYTE PTR [rax],al
   1400101f6:	adc    BYTE PTR [rax],al
   1400101f8:	adc    BYTE PTR [rax],al
   1400101fa:	adc    BYTE PTR [rax],al
   1400101fc:	adc    BYTE PTR [rax],al
   1400101fe:	adc    BYTE PTR [rax],al
   140010200:	test   BYTE PTR [rax],al
   140010202:	test   BYTE PTR [rax],al
   140010204:	test   BYTE PTR [rax],al
   140010206:	test   BYTE PTR [rax],al
   140010208:	test   BYTE PTR [rax],al
   14001020a:	test   BYTE PTR [rax],al
   14001020c:	test   BYTE PTR [rax],al
   14001020e:	test   BYTE PTR [rax],al
   140010210:	test   BYTE PTR [rax],al
   140010212:	test   BYTE PTR [rax],al
   140010214:	adc    BYTE PTR [rax],al
   140010216:	adc    BYTE PTR [rax],al
   140010218:	adc    BYTE PTR [rax],al
   14001021a:	adc    BYTE PTR [rax],al
   14001021c:	adc    BYTE PTR [rax],al
   14001021e:	adc    BYTE PTR [rax],al
   140010220:	adc    BYTE PTR [rax],al
   140010222:	add    DWORD PTR [rax],0x810081
   140010228:	add    DWORD PTR [rax],0x810081
   14001022e:	add    DWORD PTR [rax],eax
   140010230:	add    DWORD PTR [rax],eax
   140010232:	add    DWORD PTR [rax],eax
   140010234:	add    DWORD PTR [rax],eax
   140010236:	add    DWORD PTR [rax],eax
   140010238:	add    DWORD PTR [rax],eax
   14001023a:	add    DWORD PTR [rax],eax
   14001023c:	add    DWORD PTR [rax],eax
   14001023e:	add    DWORD PTR [rax],eax
   140010240:	add    DWORD PTR [rax],eax
   140010242:	add    DWORD PTR [rax],eax
   140010244:	add    DWORD PTR [rax],eax
   140010246:	add    DWORD PTR [rax],eax
   140010248:	add    DWORD PTR [rax],eax
   14001024a:	add    DWORD PTR [rax],eax
   14001024c:	add    DWORD PTR [rax],eax
   14001024e:	add    DWORD PTR [rax],eax
   140010250:	add    DWORD PTR [rax],eax
   140010252:	add    DWORD PTR [rax],eax
   140010254:	add    DWORD PTR [rax],eax
   140010256:	adc    BYTE PTR [rax],al
   140010258:	adc    BYTE PTR [rax],al
   14001025a:	adc    BYTE PTR [rax],al
   14001025c:	adc    BYTE PTR [rax],al
   14001025e:	adc    BYTE PTR [rax],al
   140010260:	adc    BYTE PTR [rax],al
   140010262:	(bad)  
   140010263:	add    BYTE PTR [rdx-0x7dff7e00],al
   140010269:	add    BYTE PTR [rdx+0x2008200],al
   14001026f:	add    BYTE PTR [rdx],al
   140010271:	add    BYTE PTR [rdx],al
   140010273:	add    BYTE PTR [rdx],al
   140010275:	add    BYTE PTR [rdx],al
   140010277:	add    BYTE PTR [rdx],al
   140010279:	add    BYTE PTR [rdx],al
   14001027b:	add    BYTE PTR [rdx],al
   14001027d:	add    BYTE PTR [rdx],al
   14001027f:	add    BYTE PTR [rdx],al
   140010281:	add    BYTE PTR [rdx],al
   140010283:	add    BYTE PTR [rdx],al
   140010285:	add    BYTE PTR [rdx],al
   140010287:	add    BYTE PTR [rdx],al
   140010289:	add    BYTE PTR [rdx],al
   14001028b:	add    BYTE PTR [rdx],al
   14001028d:	add    BYTE PTR [rdx],al
   14001028f:	add    BYTE PTR [rdx],al
   140010291:	add    BYTE PTR [rdx],al
   140010293:	add    BYTE PTR [rdx],al
   140010295:	add    BYTE PTR [rax],dl
   140010297:	add    BYTE PTR [rax],dl
   140010299:	add    BYTE PTR [rax],dl
   14001029b:	add    BYTE PTR [rax],dl
   14001029d:	add    BYTE PTR [rax],ah
	...
   14001039f:	add    BYTE PTR [rax],al
   1400103a1:	add    BYTE PTR [rax],ah
   1400103a3:	add    BYTE PTR [rax],ah
   1400103a5:	add    BYTE PTR [rax],ah
   1400103a7:	add    BYTE PTR [rax],ah
   1400103a9:	add    BYTE PTR [rax],ah
   1400103ab:	add    BYTE PTR [rax],ah
   1400103ad:	add    BYTE PTR [rax],ah
   1400103af:	add    BYTE PTR [rax],ah
   1400103b1:	add    BYTE PTR [rax],ah
   1400103b3:	add    BYTE PTR [rax+0x0],ch
   1400103b6:	sub    BYTE PTR [rax],al
   1400103b8:	sub    BYTE PTR [rax],al
   1400103ba:	sub    BYTE PTR [rax],al
   1400103bc:	sub    BYTE PTR [rax],al
   1400103be:	and    BYTE PTR [rax],al
   1400103c0:	and    BYTE PTR [rax],al
   1400103c2:	and    BYTE PTR [rax],al
   1400103c4:	and    BYTE PTR [rax],al
   1400103c6:	and    BYTE PTR [rax],al
   1400103c8:	and    BYTE PTR [rax],al
   1400103ca:	and    BYTE PTR [rax],al
   1400103cc:	and    BYTE PTR [rax],al
   1400103ce:	and    BYTE PTR [rax],al
   1400103d0:	and    BYTE PTR [rax],al
   1400103d2:	and    BYTE PTR [rax],al
   1400103d4:	and    BYTE PTR [rax],al
   1400103d6:	and    BYTE PTR [rax],al
   1400103d8:	and    BYTE PTR [rax],al
   1400103da:	and    BYTE PTR [rax],al
   1400103dc:	and    BYTE PTR [rax],al
   1400103de:	and    BYTE PTR [rax],al
   1400103e0:	and    BYTE PTR [rax],al
   1400103e2:	rex.W add BYTE PTR [rax],dl
   1400103e5:	add    BYTE PTR [rax],dl
   1400103e7:	add    BYTE PTR [rax],dl
   1400103e9:	add    BYTE PTR [rax],dl
   1400103eb:	add    BYTE PTR [rax],dl
   1400103ed:	add    BYTE PTR [rax],dl
   1400103ef:	add    BYTE PTR [rax],dl
   1400103f1:	add    BYTE PTR [rax],dl
   1400103f3:	add    BYTE PTR [rax],dl
   1400103f5:	add    BYTE PTR [rax],dl
   1400103f7:	add    BYTE PTR [rax],dl
   1400103f9:	add    BYTE PTR [rax],dl
   1400103fb:	add    BYTE PTR [rax],dl
   1400103fd:	add    BYTE PTR [rax],dl
   1400103ff:	add    BYTE PTR [rax],dl
   140010401:	add    BYTE PTR [rax+rax*1+0x840084],al
   140010408:	test   BYTE PTR [rax],al
   14001040a:	test   BYTE PTR [rax],al
   14001040c:	test   BYTE PTR [rax],al
   14001040e:	test   BYTE PTR [rax],al
   140010410:	test   BYTE PTR [rax],al
   140010412:	test   BYTE PTR [rax],al
   140010414:	test   BYTE PTR [rax],al
   140010416:	adc    BYTE PTR [rax],al
   140010418:	adc    BYTE PTR [rax],al
   14001041a:	adc    BYTE PTR [rax],al
   14001041c:	adc    BYTE PTR [rax],al
   14001041e:	adc    BYTE PTR [rax],al
   140010420:	adc    BYTE PTR [rax],al
   140010422:	adc    BYTE PTR [rax],al
   140010424:	add    DWORD PTR [rcx],0x1810181
   14001042a:	add    DWORD PTR [rcx],0x1810181
   140010430:	add    DWORD PTR [rcx],eax
   140010432:	add    DWORD PTR [rcx],eax
   140010434:	add    DWORD PTR [rcx],eax
   140010436:	add    DWORD PTR [rcx],eax
   140010438:	add    DWORD PTR [rcx],eax
   14001043a:	add    DWORD PTR [rcx],eax
   14001043c:	add    DWORD PTR [rcx],eax
   14001043e:	add    DWORD PTR [rcx],eax
   140010440:	add    DWORD PTR [rcx],eax
   140010442:	add    DWORD PTR [rcx],eax
   140010444:	add    DWORD PTR [rcx],eax
   140010446:	add    DWORD PTR [rcx],eax
   140010448:	add    DWORD PTR [rcx],eax
   14001044a:	add    DWORD PTR [rcx],eax
   14001044c:	add    DWORD PTR [rcx],eax
   14001044e:	add    DWORD PTR [rcx],eax
   140010450:	add    DWORD PTR [rcx],eax
   140010452:	add    DWORD PTR [rcx],eax
   140010454:	add    DWORD PTR [rcx],eax
   140010456:	add    DWORD PTR [rcx],eax
   140010458:	adc    BYTE PTR [rax],al
   14001045a:	adc    BYTE PTR [rax],al
   14001045c:	adc    BYTE PTR [rax],al
   14001045e:	adc    BYTE PTR [rax],al
   140010460:	adc    BYTE PTR [rax],al
   140010462:	adc    BYTE PTR [rax],al
   140010464:	(bad)  
   140010465:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14001046b:	add    DWORD PTR [rdx+0x2018201],eax
   140010471:	add    DWORD PTR [rdx],eax
   140010473:	add    DWORD PTR [rdx],eax
   140010475:	add    DWORD PTR [rdx],eax
   140010477:	add    DWORD PTR [rdx],eax
   140010479:	add    DWORD PTR [rdx],eax
   14001047b:	add    DWORD PTR [rdx],eax
   14001047d:	add    DWORD PTR [rdx],eax
   14001047f:	add    DWORD PTR [rdx],eax
   140010481:	add    DWORD PTR [rdx],eax
   140010483:	add    DWORD PTR [rdx],eax
   140010485:	add    DWORD PTR [rdx],eax
   140010487:	add    DWORD PTR [rdx],eax
   140010489:	add    DWORD PTR [rdx],eax
   14001048b:	add    DWORD PTR [rdx],eax
   14001048d:	add    DWORD PTR [rdx],eax
   14001048f:	add    DWORD PTR [rdx],eax
   140010491:	add    DWORD PTR [rdx],eax
   140010493:	add    DWORD PTR [rdx],eax
   140010495:	add    DWORD PTR [rdx],eax
   140010497:	add    DWORD PTR [rax],edx
   140010499:	add    BYTE PTR [rax],dl
   14001049b:	add    BYTE PTR [rax],dl
   14001049d:	add    BYTE PTR [rax],dl
   14001049f:	add    BYTE PTR [rax],ah
   1400104a1:	add    BYTE PTR [rax],ah
   1400104a3:	add    BYTE PTR [rax],ah
   1400104a5:	add    BYTE PTR [rax],ah
   1400104a7:	add    BYTE PTR [rax],ah
   1400104a9:	add    BYTE PTR [rax],ah
   1400104ab:	add    BYTE PTR [rax],ah
   1400104ad:	add    BYTE PTR [rax],ah
   1400104af:	add    BYTE PTR [rax],ah
   1400104b1:	add    BYTE PTR [rax],ah
   1400104b3:	add    BYTE PTR [rax],ah
   1400104b5:	add    BYTE PTR [rax],ah
   1400104b7:	add    BYTE PTR [rax],ah
   1400104b9:	add    BYTE PTR [rax],ah
   1400104bb:	add    BYTE PTR [rax],ah
   1400104bd:	add    BYTE PTR [rax],ah
   1400104bf:	add    BYTE PTR [rax],ah
   1400104c1:	add    BYTE PTR [rax],ah
   1400104c3:	add    BYTE PTR [rax],ah
   1400104c5:	add    BYTE PTR [rax],ah
   1400104c7:	add    BYTE PTR [rax],ah
   1400104c9:	add    BYTE PTR [rax],ah
   1400104cb:	add    BYTE PTR [rax],ah
   1400104cd:	add    BYTE PTR [rax],ah
   1400104cf:	add    BYTE PTR [rax],ah
   1400104d1:	add    BYTE PTR [rax],ah
   1400104d3:	add    BYTE PTR [rax],ah
   1400104d5:	add    BYTE PTR [rax],ah
   1400104d7:	add    BYTE PTR [rax],ah
   1400104d9:	add    BYTE PTR [rax],ah
   1400104db:	add    BYTE PTR [rax],ah
   1400104dd:	add    BYTE PTR [rax],ah
   1400104df:	add    BYTE PTR [rax],ah
   1400104e1:	add    BYTE PTR [rax+0x0],cl
   1400104e4:	adc    BYTE PTR [rax],al
   1400104e6:	adc    BYTE PTR [rax],al
   1400104e8:	adc    BYTE PTR [rax],al
   1400104ea:	adc    BYTE PTR [rax],al
   1400104ec:	adc    BYTE PTR [rax],al
   1400104ee:	adc    BYTE PTR [rax],al
   1400104f0:	adc    BYTE PTR [rax],al
   1400104f2:	adc    BYTE PTR [rax],al
   1400104f4:	adc    BYTE PTR [rax],al
   1400104f6:	adc    BYTE PTR [rax],al
   1400104f8:	adc    BYTE PTR [rax],al
   1400104fa:	adc    BYTE PTR [rax],al
   1400104fc:	adc    BYTE PTR [rax],al
   1400104fe:	adc    BYTE PTR [rax],al
   140010500:	adc    BYTE PTR [rax],al
   140010502:	adc    BYTE PTR [rax],al
   140010504:	adc    BYTE PTR [rax],al
   140010506:	adc    al,0x0
   140010508:	adc    al,0x0
   14001050a:	adc    BYTE PTR [rax],al
   14001050c:	adc    BYTE PTR [rax],al
   14001050e:	adc    BYTE PTR [rax],al
   140010510:	adc    BYTE PTR [rax],al
   140010512:	adc    BYTE PTR [rax],al
   140010514:	adc    al,0x0
   140010516:	adc    BYTE PTR [rax],al
   140010518:	adc    BYTE PTR [rax],al
   14001051a:	adc    BYTE PTR [rax],al
   14001051c:	adc    BYTE PTR [rax],al
   14001051e:	adc    BYTE PTR [rax],al
   140010520:	adc    BYTE PTR [rax],al
   140010522:	add    DWORD PTR [rcx],eax
   140010524:	add    DWORD PTR [rcx],eax
   140010526:	add    DWORD PTR [rcx],eax
   140010528:	add    DWORD PTR [rcx],eax
   14001052a:	add    DWORD PTR [rcx],eax
   14001052c:	add    DWORD PTR [rcx],eax
   14001052e:	add    DWORD PTR [rcx],eax
   140010530:	add    DWORD PTR [rcx],eax
   140010532:	add    DWORD PTR [rcx],eax
   140010534:	add    DWORD PTR [rcx],eax
   140010536:	add    DWORD PTR [rcx],eax
   140010538:	add    DWORD PTR [rcx],eax
   14001053a:	add    DWORD PTR [rcx],eax
   14001053c:	add    DWORD PTR [rcx],eax
   14001053e:	add    DWORD PTR [rcx],eax
   140010540:	add    DWORD PTR [rcx],eax
   140010542:	add    DWORD PTR [rcx],eax
   140010544:	add    DWORD PTR [rcx],eax
   140010546:	add    DWORD PTR [rcx],eax
   140010548:	add    DWORD PTR [rcx],eax
   14001054a:	add    DWORD PTR [rcx],eax
   14001054c:	add    DWORD PTR [rcx],eax
   14001054e:	add    DWORD PTR [rcx],eax
   140010550:	adc    BYTE PTR [rax],al
   140010552:	add    DWORD PTR [rcx],eax
   140010554:	add    DWORD PTR [rcx],eax
   140010556:	add    DWORD PTR [rcx],eax
   140010558:	add    DWORD PTR [rcx],eax
   14001055a:	add    DWORD PTR [rcx],eax
   14001055c:	add    DWORD PTR [rcx],eax
   14001055e:	add    DWORD PTR [rcx],eax
   140010560:	add    al,BYTE PTR [rcx]
   140010562:	add    al,BYTE PTR [rcx]
   140010564:	add    al,BYTE PTR [rcx]
   140010566:	add    al,BYTE PTR [rcx]
   140010568:	add    al,BYTE PTR [rcx]
   14001056a:	add    al,BYTE PTR [rcx]
   14001056c:	add    al,BYTE PTR [rcx]
   14001056e:	add    al,BYTE PTR [rcx]
   140010570:	add    al,BYTE PTR [rcx]
   140010572:	add    al,BYTE PTR [rcx]
   140010574:	add    al,BYTE PTR [rcx]
   140010576:	add    al,BYTE PTR [rcx]
   140010578:	add    al,BYTE PTR [rcx]
   14001057a:	add    al,BYTE PTR [rcx]
   14001057c:	add    al,BYTE PTR [rcx]
   14001057e:	add    al,BYTE PTR [rcx]
   140010580:	add    al,BYTE PTR [rcx]
   140010582:	add    al,BYTE PTR [rcx]
   140010584:	add    al,BYTE PTR [rcx]
   140010586:	add    al,BYTE PTR [rcx]
   140010588:	add    al,BYTE PTR [rcx]
   14001058a:	add    al,BYTE PTR [rcx]
   14001058c:	add    al,BYTE PTR [rcx]
   14001058e:	add    al,BYTE PTR [rcx]
   140010590:	adc    BYTE PTR [rax],al
   140010592:	add    al,BYTE PTR [rcx]
   140010594:	add    al,BYTE PTR [rcx]
   140010596:	add    al,BYTE PTR [rcx]
   140010598:	add    al,BYTE PTR [rcx]
   14001059a:	add    al,BYTE PTR [rcx]
   14001059c:	add    al,BYTE PTR [rcx]
   14001059e:	add    al,BYTE PTR [rcx]
   1400105a0:	add    al,BYTE PTR [rcx]
   1400105a2:	add    DWORD PTR [rcx],eax
	...
   1400105b0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   1400105b7:	xchg   DWORD PTR [rax-0x73747577],ecx
   1400105bd:	lea    ecx,[rsi-0x6d6e6f71]
   1400105c3:	xchg   ebx,eax
   1400105c4:	xchg   esp,eax
   1400105c5:	xchg   ebp,eax
   1400105c6:	xchg   esi,eax
   1400105c7:	xchg   edi,eax
   1400105c8:	cwde   
   1400105c9:	cdq    
   1400105ca:	(bad)  
   1400105cb:	fwait
   1400105cc:	pushf  
   1400105cd:	popf   
   1400105ce:	sahf   
   1400105cf:	lahf   
   1400105d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400105d9:	test   eax,0xadacabaa
   1400105de:	scas   al,BYTE PTR es:[rdi]
   1400105df:	scas   eax,DWORD PTR es:[rdi]
   1400105e0:	mov    al,0xb1
   1400105e2:	mov    dl,0xb3
   1400105e4:	mov    ah,0xb5
   1400105e6:	mov    dh,0xb7
   1400105e8:	mov    eax,0xbcbbbab9
   1400105ed:	mov    ebp,0xc1c0bfbe
   1400105f2:	ret    0xc4c3
   1400105f5:	(bad)
   1400105f8:	enter  0xcac9,0xcb
   1400105fc:	int3   
   1400105fd:	int    0xce
   1400105ff:	iret   
   140010600:	rcl    cl,1
   140010602:	rcl    bl,cl
   140010604:	(bad)  
   140010605:	(bad)  
   140010606:	(bad)  
   140010607:	xlat   BYTE PTR ds:[rbx]
   140010608:	fcomp  st(1)
   14001060a:	fcmovu st,st(3)
   14001060c:	(bad)  
   14001060e:	(bad)  
   140010610:	loopne 0x1400105f3
   140010612:	loop   0x1400105f7
   140010614:	in     al,0xe5
   140010616:	out    0xe7,al
   140010618:	call   0x12cecf106
   14001061d:	in     eax,dx
   14001061e:	out    dx,al
   14001061f:	out    dx,eax
   140010620:	lock icebp 
   140010622:	repnz repz hlt 
   140010625:	cmc    
   140010626:	div    bh
   140010628:	clc    
   140010629:	stc    
   14001062a:	cli    
   14001062b:	sti    
   14001062c:	cld    
   14001062d:	std    
   14001062e:	(bad)  
   14001062f:	inc    DWORD PTR [rax]
   140010631:	add    DWORD PTR [rdx],eax
   140010633:	add    eax,DWORD PTR [rax*1+0x9080706]
   14001063a:	or     cl,BYTE PTR [rbx]
   14001063c:	or     al,0xd
   14001063e:	(bad)  
   14001063f:	movups xmm2,XMMWORD PTR [rcx]
   140010642:	adc    dl,BYTE PTR [rbx]
   140010644:	adc    al,0x15
   140010646:	(bad)  
   140010647:	(bad)  
   140010648:	sbb    BYTE PTR [rcx],bl
   14001064a:	sbb    bl,BYTE PTR [rbx]
   14001064c:	sbb    al,0x1d
   14001064e:	(bad)  
   14001064f:	(bad)  
   140010650:	and    BYTE PTR [rcx],ah
   140010652:	and    ah,BYTE PTR [rbx]
   140010654:	and    al,0x25
   140010656:	es (bad) 
   140010658:	sub    BYTE PTR [rcx],ch
   14001065a:	sub    ch,BYTE PTR [rbx]
   14001065c:	sub    al,0x2d
   14001065e:	cs (bad) 
   140010660:	xor    BYTE PTR [rcx],dh
   140010662:	xor    dh,BYTE PTR [rbx]
   140010664:	xor    al,0x35
   140010666:	ss (bad) 
   140010668:	cmp    BYTE PTR [rcx],bh
   14001066a:	cmp    bh,BYTE PTR [rbx]
   14001066c:	cmp    al,0x3d
   14001066e:	ds (bad) 
   140010670:	rex (bad) 
   140010672:	(bad)
   140010677:	addr32 push 0x6c6b6a69
   14001067d:	ins    DWORD PTR es:[rdi],dx
   14001067e:	outs   dx,BYTE PTR ds:[rsi]
   14001067f:	outs   dx,DWORD PTR ds:[rsi]
   140010680:	jo     0x1400106f3
   140010682:	jb     0x1400106f7
   140010684:	je     0x1400106fb
   140010686:	jbe    0x1400106ff
   140010688:	js     0x140010703
   14001068a:	jp     0x1400106e7
   14001068c:	pop    rsp
   14001068d:	pop    rbp
   14001068e:	pop    rsi
   14001068f:	pop    rdi
   140010690:	(bad)  
   140010691:	(bad)  
   140010692:	(bad)
   140010697:	addr32 push 0x6c6b6a69
   14001069d:	ins    DWORD PTR es:[rdi],dx
   14001069e:	outs   dx,BYTE PTR ds:[rsi]
   14001069f:	outs   dx,DWORD PTR ds:[rsi]
   1400106a0:	jo     0x140010713
   1400106a2:	jb     0x140010717
   1400106a4:	je     0x14001071b
   1400106a6:	jbe    0x14001071f
   1400106a8:	js     0x140010723
   1400106aa:	jp     0x140010727
   1400106ac:	jl     0x14001072b
   1400106ae:	jle    0x14001072f
   1400106b0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   1400106b7:	xchg   DWORD PTR [rax-0x73747577],ecx
   1400106bd:	lea    ecx,[rsi-0x6d6e6f71]
   1400106c3:	xchg   ebx,eax
   1400106c4:	xchg   esp,eax
   1400106c5:	xchg   ebp,eax
   1400106c6:	xchg   esi,eax
   1400106c7:	xchg   edi,eax
   1400106c8:	cwde   
   1400106c9:	cdq    
   1400106ca:	(bad)  
   1400106cb:	fwait
   1400106cc:	pushf  
   1400106cd:	popf   
   1400106ce:	sahf   
   1400106cf:	lahf   
   1400106d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400106d9:	test   eax,0xadacabaa
   1400106de:	scas   al,BYTE PTR es:[rdi]
   1400106df:	scas   eax,DWORD PTR es:[rdi]
   1400106e0:	mov    al,0xb1
   1400106e2:	mov    dl,0xb3
   1400106e4:	mov    ah,0xb5
   1400106e6:	mov    dh,0xb7
   1400106e8:	mov    eax,0xbcbbbab9
   1400106ed:	mov    ebp,0xc1c0bfbe
   1400106f2:	ret    0xc4c3
   1400106f5:	(bad)
   1400106f8:	enter  0xcac9,0xcb
   1400106fc:	int3   
   1400106fd:	int    0xce
   1400106ff:	iret   
   140010700:	rcl    cl,1
   140010702:	rcl    bl,cl
   140010704:	(bad)  
   140010705:	(bad)  
   140010706:	(bad)  
   140010707:	xlat   BYTE PTR ds:[rbx]
   140010708:	fcomp  st(1)
   14001070a:	fcmovu st,st(3)
   14001070c:	(bad)  
   14001070e:	(bad)  
   140010710:	loopne 0x1400106f3
   140010712:	loop   0x1400106f7
   140010714:	in     al,0xe5
   140010716:	out    0xe7,al
   140010718:	call   0x12cecf206
   14001071d:	in     eax,dx
   14001071e:	out    dx,al
   14001071f:	out    dx,eax
   140010720:	lock icebp 
   140010722:	repnz repz hlt 
   140010725:	cmc    
   140010726:	div    bh
   140010728:	clc    
   140010729:	stc    
   14001072a:	cli    
   14001072b:	sti    
   14001072c:	cld    
   14001072d:	std    
   14001072e:	(bad)  
   14001072f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   140010735:	test   DWORD PTR [rsi-0x75767779],eax
   14001073b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140010742:	xchg   edx,eax
   140010743:	xchg   ebx,eax
   140010744:	xchg   esp,eax
   140010745:	xchg   ebp,eax
   140010746:	xchg   esi,eax
   140010747:	xchg   edi,eax
   140010748:	cwde   
   140010749:	cdq    
   14001074a:	(bad)  
   14001074b:	fwait
   14001074c:	pushf  
   14001074d:	popf   
   14001074e:	sahf   
   14001074f:	lahf   
   140010750:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140010759:	test   eax,0xadacabaa
   14001075e:	scas   al,BYTE PTR es:[rdi]
   14001075f:	scas   eax,DWORD PTR es:[rdi]
   140010760:	mov    al,0xb1
   140010762:	mov    dl,0xb3
   140010764:	mov    ah,0xb5
   140010766:	mov    dh,0xb7
   140010768:	mov    eax,0xbcbbbab9
   14001076d:	mov    ebp,0xc1c0bfbe
   140010772:	ret    0xc4c3
   140010775:	(bad)
   140010778:	enter  0xcac9,0xcb
   14001077c:	int3   
   14001077d:	int    0xce
   14001077f:	iret   
   140010780:	rcl    cl,1
   140010782:	rcl    bl,cl
   140010784:	(bad)  
   140010785:	(bad)  
   140010786:	(bad)  
   140010787:	xlat   BYTE PTR ds:[rbx]
   140010788:	fcomp  st(1)
   14001078a:	fcmovu st,st(3)
   14001078c:	(bad)  
   14001078e:	(bad)  
   140010790:	loopne 0x140010773
   140010792:	loop   0x140010777
   140010794:	in     al,0xe5
   140010796:	out    0xe7,al
   140010798:	call   0x12cecf286
   14001079d:	in     eax,dx
   14001079e:	out    dx,al
   14001079f:	out    dx,eax
   1400107a0:	lock icebp 
   1400107a2:	repnz repz hlt 
   1400107a5:	cmc    
   1400107a6:	div    bh
   1400107a8:	clc    
   1400107a9:	stc    
   1400107aa:	cli    
   1400107ab:	sti    
   1400107ac:	cld    
   1400107ad:	std    
   1400107ae:	(bad)  
   1400107af:	inc    DWORD PTR [rax]
   1400107b1:	add    DWORD PTR [rdx],eax
   1400107b3:	add    eax,DWORD PTR [rax*1+0x9080706]
   1400107ba:	or     cl,BYTE PTR [rbx]
   1400107bc:	or     al,0xd
   1400107be:	(bad)  
   1400107bf:	movups xmm2,XMMWORD PTR [rcx]
   1400107c2:	adc    dl,BYTE PTR [rbx]
   1400107c4:	adc    al,0x15
   1400107c6:	(bad)  
   1400107c7:	(bad)  
   1400107c8:	sbb    BYTE PTR [rcx],bl
   1400107ca:	sbb    bl,BYTE PTR [rbx]
   1400107cc:	sbb    al,0x1d
   1400107ce:	(bad)  
   1400107cf:	(bad)  
   1400107d0:	and    BYTE PTR [rcx],ah
   1400107d2:	and    ah,BYTE PTR [rbx]
   1400107d4:	and    al,0x25
   1400107d6:	es (bad) 
   1400107d8:	sub    BYTE PTR [rcx],ch
   1400107da:	sub    ch,BYTE PTR [rbx]
   1400107dc:	sub    al,0x2d
   1400107de:	cs (bad) 
   1400107e0:	xor    BYTE PTR [rcx],dh
   1400107e2:	xor    dh,BYTE PTR [rbx]
   1400107e4:	xor    al,0x35
   1400107e6:	ss (bad) 
   1400107e8:	cmp    BYTE PTR [rcx],bh
   1400107ea:	cmp    bh,BYTE PTR [rbx]
   1400107ec:	cmp    al,0x3d
   1400107ee:	ds (bad) 
   1400107f0:	rex
   1400107f1:	rex.B
   1400107f2:	rex.X
   1400107f3:	rex.XB
   1400107f4:	rex.R
   1400107f5:	rex.RB
   1400107f6:	rex.RX
   1400107f7:	rex.RXB
   1400107f8:	rex.W
   1400107f9:	rex.WB
   1400107fa:	rex.WX
   1400107fb:	rex.WXB
   1400107fc:	rex.WR
   1400107fd:	rex.WRB
   1400107fe:	rex.WRX
   1400107ff:	rex.WRXB push r8
   140010801:	push   rcx
   140010802:	push   rdx
   140010803:	push   rbx
   140010804:	push   rsp
   140010805:	push   rbp
   140010806:	push   rsi
   140010807:	push   rdi
   140010808:	pop    rax
   140010809:	pop    rcx
   14001080a:	pop    rdx
   14001080b:	pop    rbx
   14001080c:	pop    rsp
   14001080d:	pop    rbp
   14001080e:	pop    rsi
   14001080f:	pop    rdi
   140010810:	(bad)  
   140010811:	rex.B
   140010812:	rex.X
   140010813:	rex.XB
   140010814:	rex.R
   140010815:	rex.RB
   140010816:	rex.RX
   140010817:	rex.RXB
   140010818:	rex.W
   140010819:	rex.WB
   14001081a:	rex.WX
   14001081b:	rex.WXB
   14001081c:	rex.WR
   14001081d:	rex.WRB
   14001081e:	rex.WRX
   14001081f:	rex.WRXB push r8
   140010821:	push   rcx
   140010822:	push   rdx
   140010823:	push   rbx
   140010824:	push   rsp
   140010825:	push   rbp
   140010826:	push   rsi
   140010827:	push   rdi
   140010828:	pop    rax
   140010829:	pop    rcx
   14001082a:	pop    rdx
   14001082b:	jnp    0x1400108a9
   14001082d:	jge    0x1400108ad
   14001082f:	jg     0x1400107b1
   140010831:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14001083b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140010842:	xchg   edx,eax
   140010843:	xchg   ebx,eax
   140010844:	xchg   esp,eax
   140010845:	xchg   ebp,eax
   140010846:	xchg   esi,eax
   140010847:	xchg   edi,eax
   140010848:	cwde   
   140010849:	cdq    
   14001084a:	(bad)  
   14001084b:	fwait
   14001084c:	pushf  
   14001084d:	popf   
   14001084e:	sahf   
   14001084f:	lahf   
   140010850:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140010859:	test   eax,0xadacabaa
   14001085e:	scas   al,BYTE PTR es:[rdi]
   14001085f:	scas   eax,DWORD PTR es:[rdi]
   140010860:	mov    al,0xb1
   140010862:	mov    dl,0xb3
   140010864:	mov    ah,0xb5
   140010866:	mov    dh,0xb7
   140010868:	mov    eax,0xbcbbbab9
   14001086d:	mov    ebp,0xc1c0bfbe
   140010872:	ret    0xc4c3
   140010875:	(bad)
   140010878:	enter  0xcac9,0xcb
   14001087c:	int3   
   14001087d:	int    0xce
   14001087f:	iret   
   140010880:	rcl    cl,1
   140010882:	rcl    bl,cl
   140010884:	(bad)  
   140010885:	(bad)  
   140010886:	(bad)  
   140010887:	xlat   BYTE PTR ds:[rbx]
   140010888:	fcomp  st(1)
   14001088a:	fcmovu st,st(3)
   14001088c:	(bad)  
   14001088e:	(bad)  
   140010890:	loopne 0x140010873
   140010892:	loop   0x140010877
   140010894:	in     al,0xe5
   140010896:	out    0xe7,al
   140010898:	call   0x12cecf386
   14001089d:	in     eax,dx
   14001089e:	out    dx,al
   14001089f:	out    dx,eax
   1400108a0:	lock icebp 
   1400108a2:	repnz repz hlt 
   1400108a5:	cmc    
   1400108a6:	div    bh
   1400108a8:	clc    
   1400108a9:	stc    
   1400108aa:	cli    
   1400108ab:	sti    
   1400108ac:	cld    
   1400108ad:	std    
   1400108ae:	(bad)  
   1400108af:	inc    DWORD PTR [rcx]
   1400108b1:	add    al,BYTE PTR [rbx]
   1400108b3:	add    al,0x5
   1400108b5:	(bad)  
   1400108b6:	(bad)  
   1400108b7:	or     BYTE PTR [rcx],cl
   1400108b9:	or     cl,BYTE PTR [rbx]
   1400108bb:	or     al,0xd
   1400108bd:	(bad)  
   1400108be:	movups xmm2,XMMWORD PTR [rcx]
   1400108c1:	adc    dl,BYTE PTR [rbx]
   1400108c3:	adc    al,0x15
   1400108c5:	(bad)  
   1400108c6:	(bad)  
   1400108c7:	sbb    BYTE PTR [rcx],bl
   1400108c9:	sbb    bl,BYTE PTR [rbx]
   1400108cb:	sbb    al,0x1d
   1400108cd:	(bad)  
   1400108ce:	(bad)  
   1400108cf:	and    BYTE PTR [rcx],ah
   1400108d1:	and    ah,BYTE PTR [rbx]
   1400108d3:	and    al,0x25
   1400108d5:	es (bad) 
   1400108d7:	sub    BYTE PTR [rcx],ch
   1400108d9:	sub    ch,BYTE PTR [rbx]
   1400108db:	sub    al,0x2d
   1400108dd:	cs (bad) 
   1400108df:	xor    BYTE PTR [rcx],dh
   1400108e1:	xor    dh,BYTE PTR [rbx]
   1400108e3:	xor    al,0x35
   1400108e5:	ss (bad) 
   1400108e7:	cmp    BYTE PTR [rcx],bh
   1400108e9:	cmp    bh,BYTE PTR [rbx]
   1400108eb:	cmp    al,0x3d
   1400108ed:	ds (bad) 
   1400108ef:	rex
   1400108f0:	rex.B
   1400108f1:	rex.X
   1400108f2:	rex.XB
   1400108f3:	rex.R
   1400108f4:	rex.RB
   1400108f5:	rex.RX
   1400108f6:	rex.RXB
   1400108f7:	rex.W
   1400108f8:	rex.WB
   1400108f9:	rex.WX
   1400108fa:	rex.WXB
   1400108fb:	rex.WR
   1400108fc:	rex.WRB
   1400108fd:	rex.WRX
   1400108fe:	rex.WRXB push r8
   140010900:	push   rcx
   140010901:	push   rdx
   140010902:	push   rbx
   140010903:	push   rsp
   140010904:	push   rbp
   140010905:	push   rsi
   140010906:	push   rdi
   140010907:	pop    rax
   140010908:	pop    rcx
   140010909:	pop    rdx
   14001090a:	pop    rbx
   14001090b:	pop    rsp
   14001090c:	pop    rbp
   14001090d:	pop    rsi
   14001090e:	pop    rdi
   14001090f:	(bad)  
   140010910:	(bad)  
   140010911:	(bad)
   140010916:	addr32 push 0x6c6b6a69
   14001091c:	ins    DWORD PTR es:[rdi],dx
   14001091d:	outs   dx,BYTE PTR ds:[rsi]
   14001091e:	outs   dx,DWORD PTR ds:[rsi]
   14001091f:	jo     0x140010992
   140010921:	jb     0x140010996
   140010923:	je     0x14001099a
   140010925:	jbe    0x14001099e
   140010927:	js     0x1400109a2
   140010929:	jp     0x1400109a6
   14001092b:	jl     0x1400109aa
   14001092d:	jle    0x1400109ae
   14001092f:	add    BYTE PTR [rbx+0x0],al
   140010932:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140010936:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14001093a:	push   rsp
   14001093b:	add    BYTE PTR [rax+rax*1],ah
   14001093e:	add    BYTE PTR [rax],al
   140010940:	and    al,0xc9
   140010942:	add    BYTE PTR [rax+0x1],al
   140010945:	add    BYTE PTR [rax],al
   140010947:	add    BYTE PTR [rcx+rcx*8+0x0],bl
   14001094b:	rex add DWORD PTR [rax],eax
   14001094e:	add    BYTE PTR [rax],al
   140010950:	add    dl,cl
   140010952:	add    BYTE PTR [rax+0x1],al
   140010955:	add    BYTE PTR [rax],al
   140010957:	add    BYTE PTR [rax+0x14000c9],dl
   14001095d:	add    BYTE PTR [rax],al
   14001095f:	add    BYTE PTR [rax-0x38],bl
   140010962:	add    BYTE PTR [rax+0x1],al
   140010965:	add    BYTE PTR [rax],al
   140010967:	add    BYTE PTR [rax+0x14000c8],ch
   14001096d:	add    BYTE PTR [rax],al
   14001096f:	add    BYTE PTR [rax-0x37],cl
   140010972:	add    BYTE PTR [rax+0x1],al
   140010975:	add    BYTE PTR [rax],al
   140010977:	add    BYTE PTR [rax+0x14000c9],ch
   14001097d:	add    BYTE PTR [rax],al
   14001097f:	add    BYTE PTR [rax+0x14000c9],al
   140010985:	add    BYTE PTR [rax],al
   140010987:	add    BYTE PTR [rcx+rcx*8],bh
   14001098a:	add    BYTE PTR [rax+0x1],al
   14001098d:	add    BYTE PTR [rax],al
   14001098f:	add    BYTE PTR [rax+rcx*8],ch
   140010992:	add    BYTE PTR [rax+0x1],al
	...
   1400109a5:	add    BYTE PTR [rax],al
   1400109a7:	add    BYTE PTR [rbx],ah
   1400109a9:	add    eax,DWORD PTR [rax]
   1400109ab:	add    BYTE PTR [rax],al
   1400109ad:	add    BYTE PTR [rax],al
   1400109af:	add    al,al
   1400109b1:	add    BYTE PTR [rax],al
   1400109b3:	add    BYTE PTR [rax],al
   1400109b5:	add    BYTE PTR [rax],al
   1400109b7:	rex.RX pop rsp
   1400109b9:	adc    eax,0x14000
   1400109be:	add    BYTE PTR [rax],al
   1400109c0:	jl     0x1400109d7
   1400109c2:	add    BYTE PTR [rax+0x1],al
   1400109c5:	add    BYTE PTR [rax],al
   1400109c7:	add    BYTE PTR [rbp+rdx*1+0x0],ch
   1400109cb:	rex add DWORD PTR [rax],eax
   1400109ce:	add    BYTE PTR [rax],al
   1400109d0:	push   0x1400010
   1400109d5:	add    BYTE PTR [rax],al
   1400109d7:	add    BYTE PTR [rax+rdx*1+0x14000],al
   1400109de:	add    BYTE PTR [rax],al
   1400109e0:	movabs al,ds:0xbc00000001400010
   1400109e9:	adc    BYTE PTR [rax],al
   1400109eb:	rex add DWORD PTR [rax],eax
   1400109ee:	add    BYTE PTR [rax],al
   1400109f0:	(bad)  
   1400109f1:	adc    al,0x0
   1400109f3:	rex add DWORD PTR [rax],eax
   1400109f6:	add    BYTE PTR [rax],al
   1400109f8:	nop
   1400109f9:	adc    al,0x0
   1400109fb:	rex add DWORD PTR [rax],eax
   1400109fe:	add    BYTE PTR [rax],al
   140010a00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010a01:	adc    al,0x0
   140010a03:	rex add DWORD PTR [rax],eax
   140010a06:	add    BYTE PTR [rax],al
   140010a08:	adc    al,0x10
   140010a0a:	add    BYTE PTR [rax+0x1],al
   140010a0d:	add    BYTE PTR [rax],al
   140010a0f:	add    ah,ch
   140010a11:	adc    al,0x0
   140010a13:	rex add DWORD PTR [rax],eax
   140010a16:	add    BYTE PTR [rax],al
   140010a18:	add    DWORD PTR [rax],eax
   140010a1a:	add    BYTE PTR [rax],al
   140010a1c:	add    BYTE PTR [rax],al
   140010a1e:	add    BYTE PTR [rax],al
   140010a20:	rol    BYTE PTR [rax],0x0
   140010a23:	add    BYTE PTR [rax],al
   140010a25:	add    BYTE PTR [rax],al
   140010a27:	rex.RX sbb BYTE PTR [rdx],r9b
   140010a2a:	add    DWORD PTR [rax+0x1],eax
	...
   140010a35:	add    BYTE PTR [rax],al
   140010a37:	add    BYTE PTR [rcx],al
	...
   140010a55:	add    BYTE PTR [rax],al
   140010a57:	add    BYTE PTR [rax+0x12],dl
   140010a5a:	add    BYTE PTR [rax+0x1],al
   140010a5d:	add    BYTE PTR [rax],al
   140010a5f:	add    BYTE PTR [rdx+rdx*1],cl
   140010a62:	add    BYTE PTR [rax+0x1],al
   140010a65:	add    BYTE PTR [rax],al
   140010a67:	add    BYTE PTR [rax],ah
   140010a69:	adc    al,BYTE PTR [rax]
   140010a6b:	rex add DWORD PTR [rax],eax
   140010a6e:	add    BYTE PTR [rax],al
   140010a70:	mov    WORD PTR [rip+0x14000],ss        # 0x140024a76
   140010a76:	add    BYTE PTR [rax],al
   140010a78:	lock adc eax,0x14000
   140010a7e:	add    BYTE PTR [rax],al
   140010a80:	enter  0x13,0x40
   140010a84:	add    DWORD PTR [rax],eax
   140010a86:	add    BYTE PTR [rax],al
   140010a88:	lods   al,BYTE PTR ds:[rsi]
   140010a89:	cmp    DWORD PTR [rax],eax
   140010a8b:	rex add DWORD PTR [rax],eax
   140010a8e:	add    BYTE PTR [rax],al
   140010a90:	lods   al,BYTE PTR ds:[rsi]
   140010a91:	cmp    DWORD PTR [rax],eax
   140010a93:	rex add DWORD PTR [rax],eax
   140010a96:	add    BYTE PTR [rax],al
   140010a98:	lods   al,BYTE PTR ds:[rsi]
   140010a99:	cmp    DWORD PTR [rax],eax
   140010a9b:	rex add DWORD PTR [rax],eax
   140010a9e:	add    BYTE PTR [rax],al
   140010aa0:	mov    WORD PTR [rip+0x14000],ss        # 0x140024aa6
   140010aa6:	add    BYTE PTR [rax],al
   140010aa8:	lock adc eax,0x14000
   140010aae:	add    BYTE PTR [rax],al
   140010ab0:	sbb    BYTE PTR [rsi],dl
   140010ab2:	add    BYTE PTR [rax+0x1],al
   140010ab5:	add    BYTE PTR [rax],al
   140010ab7:	add    BYTE PTR [rax],ch
   140010ab9:	jle    0x140010a61
   140010abb:	(bad)  
   140010abc:	mov    ebp,0x8c487f19
   140010ac1:	fwait
   140010ac2:	enter  0xca67,0xb8
   140010ac6:	(bad)  
   140010ac7:	or     al,BYTE PTR [rax]
   140010ac9:	add    BYTE PTR [rax],al
   140010acb:	add    BYTE PTR [rax],al
   140010acd:	add    BYTE PTR [rax],al
   140010acf:	add    BYTE PTR [rax+0x140010a],bh
   140010ad5:	add    BYTE PTR [rax],al
   140010ad7:	add    BYTE PTR [rax],cl
   140010ad9:	adc    BYTE PTR [rax],al
   140010adb:	rex add DWORD PTR [rax],eax
   140010ade:	add    BYTE PTR [rax],al
   140010ae0:	fcom   DWORD PTR [rax]
   140010ae2:	add    BYTE PTR [rax+0x1],al
   140010ae5:	add    BYTE PTR [rax],al
   140010ae7:	add    ah,ah
   140010ae9:	adc    DWORD PTR [rax],eax
   140010aeb:	rex add DWORD PTR [rax],eax
   140010aee:	add    BYTE PTR [rax],al
   140010af0:	rex.W push rsi
   140010af2:	add    DWORD PTR [rax+0x1],eax
   140010af5:	add    BYTE PTR [rax],al
   140010af7:	add    BYTE PTR [rax],cl
   140010af9:	adc    BYTE PTR [rax],al
   140010afb:	rex add DWORD PTR [rax],eax
   140010afe:	add    BYTE PTR [rax],al
   140010b00:	or     BYTE PTR [rax],dl
   140010b02:	add    BYTE PTR [rax+0x1],al
   140010b05:	add    BYTE PTR [rax],al
   140010b07:	add    BYTE PTR [rax+0x16],ch
   140010b0a:	add    BYTE PTR [rax+0x1],al
   140010b0d:	add    BYTE PTR [rax],al
   140010b0f:	add    BYTE PTR [rax+0xb],ch
   140010b12:	add    DWORD PTR [rax+0x1],eax
	...
   140010b1d:	add    BYTE PTR [rax],al
   140010b1f:	add    BYTE PTR [rcx],al
   140010b21:	add    BYTE PTR [rax],al
   140010b23:	add    BYTE PTR [rax],al
   140010b25:	add    BYTE PTR [rax],al
   140010b27:	add    BYTE PTR [rax+0xb],bl
   140010b2a:	add    DWORD PTR [rax+0x1],eax
   140010b2d:	add    BYTE PTR [rax],al
   140010b2f:	add    BYTE PTR [rax],cl
   140010b31:	add    BYTE PTR [rax],al
   140010b33:	add    BYTE PTR [rax],al
   140010b35:	add    BYTE PTR [rax],al
   140010b37:	add    BYTE PTR [rcx],al
	...
   140010b55:	add    BYTE PTR [rax],al
   140010b57:	add    BYTE PTR [rax+0x24],ch
   140010b5a:	or     cl,BYTE PTR [rsi-0x79b69171]
   140010b61:	rex.RXB scas al,BYTE PTR es:[rdi]
   140010b63:	adc    al,0x47
   140010b65:	add    al,0xd1
   140010b67:	cwde   
   140010b68:	es sbb eax,0x488da492
   140010b6e:	sbb    al,0x45
   140010b70:	mov    esi,0x1ccebf2a
   140010b75:	sbb    BYTE PTR [rdi+rax*4+0x0],dh
   140010b79:	add    BYTE PTR [rax],al
   140010b7b:	add    BYTE PTR [rax],al
   140010b7d:	add    BYTE PTR [rax],al
   140010b7f:	add    al,al
   140010b81:	add    BYTE PTR [rax],al
   140010b83:	add    BYTE PTR [rax],al
   140010b85:	add    BYTE PTR [rax],al
   140010b87:	rex.RX
   140010b88:	rex.WRB add BYTE PTR [r11+0x0],r14b
   140010b8c:	movsxd eax,DWORD PTR [rax]
   140010b8e:	outs   dx,DWORD PTR ds:[rsi]
   140010b8f:	add    BYTE PTR [rdx+0x0],dh
   140010b92:	add    BYTE PTR gs:[rbp+0x0],ah
   140010b96:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140010b9b:	add    BYTE PTR [rax+rax*1+0x0],ch
   140010b9f:	add    BYTE PTR [rsi+0x1],al
   140010ba2:	add    BYTE PTR [rax],al
   140010ba4:	add    BYTE PTR [rax],al
   140010ba6:	add    BYTE PTR [rax],al
   140010ba8:	rol    BYTE PTR [rax],0x0
   140010bab:	add    BYTE PTR [rax],al
   140010bad:	add    BYTE PTR [rax],al
   140010baf:	rex.RX add BYTE PTR [rax],r8b
   140010bb2:	add    BYTE PTR [rax],al
   140010bb4:	add    BYTE PTR [rax],al
   140010bb6:	add    BYTE PTR [rax],al
   140010bb8:	add    BYTE PTR [r8+0x0],dl
   140010bbc:	push   rax
   140010bbd:	add    BYTE PTR [rcx+0x0],cl
   140010bc0:	add    BYTE PTR [rax],r8b
   140010bc3:	add    BYTE PTR [rax],al
   140010bc5:	add    BYTE PTR [rax],al
   140010bc7:	add    ah,bl
   140010bc9:	sub    al,0x0
   140010bcb:	rex add DWORD PTR [rax],eax
   140010bce:	add    BYTE PTR [rax],al
   140010bd0:	mov    al,0x30
   140010bd2:	add    BYTE PTR [rax+0x1],al
   140010bd5:	add    BYTE PTR [rax],al
   140010bd7:	add    al,al
   140010bd9:	xor    BYTE PTR [rax],al
   140010bdb:	rex add DWORD PTR [rax],eax
   140010bde:	add    BYTE PTR [rax],al
   140010be0:	call   0x141410c1a
   140010be5:	add    BYTE PTR [rax],al
   140010be7:	add    BYTE PTR [rax+0x35],dh
   140010bea:	add    BYTE PTR [rax+0x1],al
   140010bed:	add    BYTE PTR [rax],al
   140010bef:	add    al,ah
   140010bf1:	xor    DWORD PTR [rax],eax
   140010bf3:	rex add DWORD PTR [rax],eax
   140010bf6:	add    BYTE PTR [rax],al
   140010bf8:	(bad)  
   140010bf9:	and    al,0x0
   140010bfb:	rex add DWORD PTR [rax],eax
   140010bfe:	add    BYTE PTR [rax],al
   140010c00:	add    BYTE PTR [rax+rax*1],ch
   140010c03:	rex add DWORD PTR [rax],eax
   140010c06:	add    BYTE PTR [rax],al
   140010c08:	adc    al,0x1c
   140010c0a:	add    BYTE PTR [rax+0x1],al
   140010c0d:	add    BYTE PTR [rax],al
   140010c0f:	add    BYTE PTR [rbx+riz*1+0x14000],dl
   140010c16:	add    BYTE PTR [rax],al
   140010c18:	nop
   140010c19:	and    al,0x0
   140010c1b:	rex add DWORD PTR [rax],eax
   140010c1e:	add    BYTE PTR [rax],al
   140010c20:	mov    al,0x24
   140010c22:	add    BYTE PTR [rax+0x1],al
   140010c25:	add    BYTE PTR [rax],al
   140010c27:	add    BYTE PTR [rsp+rbx*1+0x0],dh
   140010c2b:	rex add DWORD PTR [rax],eax
   140010c2e:	add    BYTE PTR [rax],al
   140010c30:	sbb    BYTE PTR [rax+rax*1],0x40
   140010c34:	add    DWORD PTR [rax],eax
   140010c36:	add    BYTE PTR [rax],al
   140010c38:	sbb    BYTE PTR [rax+rax*1],0x40
   140010c3c:	add    DWORD PTR [rax],eax
   140010c3e:	add    BYTE PTR [rax],al
   140010c40:	cwde   
   140010c41:	sbb    al,0x0
   140010c43:	rex add DWORD PTR [rax],eax
   140010c46:	add    BYTE PTR [rax],al
   140010c48:	nop
   140010c49:	(bad)  
   140010c4a:	add    BYTE PTR [rax+0x1],al
   140010c4d:	add    BYTE PTR [rax],al
   140010c4f:	add    BYTE PTR [rax+0x1e],dh
   140010c52:	add    BYTE PTR [rax+0x1],al
   140010c55:	add    BYTE PTR [rax],al
   140010c57:	add    al,al
   140010c59:	(bad)  
   140010c5a:	add    BYTE PTR [rax+0x1],al
   140010c5d:	add    BYTE PTR [rax],al
   140010c5f:	add    BYTE PTR [rdi+rbx*1+0x14000],bl
   140010c66:	add    BYTE PTR [rax],al
   140010c68:	enter  0x1f,0x40
   140010c6c:	add    DWORD PTR [rax],eax
   140010c6e:	add    BYTE PTR [rax],al
   140010c70:	adc    al,0x1c
   140010c72:	add    BYTE PTR [rax+0x1],al
   140010c75:	add    BYTE PTR [rax],al
   140010c77:	add    BYTE PTR [rcx+rdi*1+0x14000],ch
   140010c7e:	add    BYTE PTR [rax],al
   140010c80:	lods   al,BYTE PTR ds:[rsi]
   140010c81:	cmp    DWORD PTR [rax],eax
   140010c83:	rex add DWORD PTR [rax],eax
   140010c86:	add    BYTE PTR [rax],al
   140010c88:	lods   al,BYTE PTR ds:[rsi]
   140010c89:	cmp    DWORD PTR [rax],eax
   140010c8b:	rex add DWORD PTR [rax],eax
   140010c8e:	add    BYTE PTR [rax],al
   140010c90:	je     0x140010cae
   140010c92:	add    BYTE PTR [rax+0x1],al
   140010c95:	add    BYTE PTR [rax],al
   140010c97:	add    BYTE PTR [rax+0x140001c],al
   140010c9d:	add    BYTE PTR [rax],al
   140010c9f:	add    BYTE PTR [rax+0x140001c],al
   140010ca5:	add    BYTE PTR [rax],al
   140010ca7:	add    BYTE PTR [rdx+rbx*1+0x0],bh
   140010cab:	rex add DWORD PTR [rax],eax
   140010cae:	add    BYTE PTR [rax],al
   140010cb0:	lods   al,BYTE PTR ds:[rsi]
   140010cb1:	cmp    DWORD PTR [rax],eax
   140010cb3:	rex add DWORD PTR [rax],eax
   140010cb6:	add    BYTE PTR [rax],al
   140010cb8:	lods   al,BYTE PTR ds:[rsi]
   140010cb9:	cmp    DWORD PTR [rax],eax
   140010cbb:	rex add DWORD PTR [rax],eax
   140010cbe:	add    BYTE PTR [rax],al
   140010cc0:	lods   al,BYTE PTR ds:[rsi]
   140010cc1:	cmp    DWORD PTR [rax],eax
   140010cc3:	rex add DWORD PTR [rax],eax
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	lods   al,BYTE PTR ds:[rsi]
   140010cc9:	cmp    DWORD PTR [rax],eax
   140010ccb:	rex add DWORD PTR [rax],eax
   140010cce:	add    BYTE PTR [rax],al
   140010cd0:	push   0x1400016
	...
   140010cdd:	add    eax,0x17940000
   140010ce2:	add    BYTE PTR [rax+0x1],al
	...
   140010ced:	add    BYTE PTR [rax],al
   140010cef:	add    BYTE PTR [rdx],ah
   140010cf1:	add    eax,0x11993
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	push   rax
   140010cf9:	sbb    al,BYTE PTR [rcx]
	...
   140010d03:	add    BYTE PTR [rbx],al
   140010d05:	add    BYTE PTR [rax],al
   140010d07:	add    BYTE PTR [rax+0x1a],bl
   140010d0a:	add    DWORD PTR [rax],eax
   140010d0c:	and    BYTE PTR [rax],al
   140010d0e:	add    BYTE PTR [rax],al
   140010d10:	add    BYTE PTR [rax],al
   140010d12:	add    BYTE PTR [rax],al
   140010d14:	add    DWORD PTR [rax],eax
	...
   140010d1e:	add    BYTE PTR [rax],al
   140010d20:	and    al,BYTE PTR [rip+0x41993]        # 0x1400526b9
   140010d26:	add    BYTE PTR [rax],al
   140010d28:	mov    WORD PTR [rdx],ds
   140010d2a:	add    DWORD PTR [rax],eax
   140010d2c:	add    DWORD PTR [rax],eax
   140010d2e:	add    BYTE PTR [rax],al
   140010d30:	lods   al,BYTE PTR ds:[rsi]
   140010d31:	sbb    al,BYTE PTR [rcx]
   140010d33:	add    BYTE PTR [rax],cl
   140010d35:	add    BYTE PTR [rax],al
   140010d37:	add    ah,dl
   140010d39:	sbb    al,BYTE PTR [rcx]
   140010d3b:	add    BYTE PTR [rax],ah
   140010d3d:	add    BYTE PTR [rax],al
   140010d3f:	add    BYTE PTR [rax],al
   140010d41:	add    BYTE PTR [rax],al
   140010d43:	add    BYTE PTR [rcx],al
	...
   140010d4d:	add    BYTE PTR [rax],al
   140010d4f:	add    BYTE PTR [rdx],ah
   140010d51:	add    eax,0x71993
   140010d56:	add    BYTE PTR [rax],al
   140010d58:	xchg   esp,eax
   140010d59:	sbb    eax,DWORD PTR [rcx]
   140010d5b:	add    BYTE PTR [rcx],al
   140010d5d:	add    BYTE PTR [rax],al
   140010d5f:	add    ah,cl
   140010d61:	sbb    eax,DWORD PTR [rcx]
   140010d63:	add    BYTE PTR [rax+rax*1],dl
   140010d66:	add    BYTE PTR [rax],al
   140010d68:	hlt    
   140010d69:	sbb    eax,DWORD PTR [rcx]
   140010d6b:	add    BYTE PTR [rax+0x0],ah
   140010d71:	add    BYTE PTR [rax],al
   140010d73:	add    BYTE PTR [rcx],al
	...
   140010d7d:	add    BYTE PTR [rax],al
   140010d7f:	add    BYTE PTR [rdx],ah
   140010d81:	add    eax,0x41993
   140010d86:	add    BYTE PTR [rax],al
   140010d88:	sbb    BYTE PTR [rip+0x1],bl        # 0x140010d8f
   140010d8e:	add    BYTE PTR [rax],al
   140010d90:	add    BYTE PTR [rax],al
   140010d92:	add    BYTE PTR [rax],al
   140010d94:	(bad)  
   140010d95:	add    BYTE PTR [rax],al
   140010d97:	add    BYTE PTR [rax],bh
   140010d99:	sbb    eax,0x200001
   140010d9e:	add    BYTE PTR [rax],al
   140010da0:	add    BYTE PTR [rax],al
   140010da2:	add    BYTE PTR [rax],al
   140010da4:	add    DWORD PTR [rax],eax
	...
   140010dae:	add    BYTE PTR [rax],al
   140010db0:	and    al,BYTE PTR [rip+0x41993]        # 0x140052749
   140010db6:	add    BYTE PTR [rax],al
   140010db8:	cwde   
   140010db9:	sbb    eax,0x10001
   140010dbe:	add    BYTE PTR [rax],al
   140010dc0:	mov    eax,0x700011d
   140010dc5:	add    BYTE PTR [rax],al
   140010dc7:	add    al,ah
   140010dc9:	sbb    eax,0x300001
   140010dce:	add    BYTE PTR [rax],al
   140010dd0:	add    BYTE PTR [rax],al
   140010dd2:	add    BYTE PTR [rax],al
   140010dd4:	add    DWORD PTR [rax],eax
	...
   140010dde:	add    BYTE PTR [rax],al
   140010de0:	and    al,BYTE PTR [rip+0x41993]        # 0x140052779
   140010de6:	add    BYTE PTR [rax],al
   140010de8:	pop    rsp
   140010de9:	(bad)  
   140010dea:	add    DWORD PTR [rax],eax
	...
   140010df4:	or     BYTE PTR [rax],al
   140010df6:	add    BYTE PTR [rax],al
   140010df8:	jl     0x140010e18
   140010dfa:	add    DWORD PTR [rax],eax
   140010dfc:	sub    BYTE PTR [rax],al
   140010dfe:	add    BYTE PTR [rax],al
   140010e00:	add    BYTE PTR [rax],al
   140010e02:	add    BYTE PTR [rax],al
   140010e04:	add    DWORD PTR [rax],eax
	...
   140010e0e:	add    BYTE PTR [rax],al
   140010e10:	jo     0x140010e12
	...
   140010e66:	add    BYTE PTR [rax],al
   140010e68:	shl    BYTE PTR [rax],1
   140010e6a:	add    DWORD PTR [rax+0x1],eax
	...
   140010e7d:	add    BYTE PTR [rax],al
   140010e7f:	add    BYTE PTR [rdx+0x53],dl
   140010e82:	rex.R push rbx
   140010e84:	lods   eax,DWORD PTR ds:[rsi]
   140010e85:	outs   dx,BYTE PTR ds:[rsi]
   140010e86:	popf   
   140010e87:	(bad)  
   140010e88:	xchg   esp,eax
   140010e89:	add    ah,BYTE PTR [rax+rax*2]
   140010e8c:	xchg   ecx,eax
   140010e8d:	ja     0x140010eac
   140010e8f:	mov    esp,0x4b5065a5
   140010e94:	add    al,0x0
   140010e96:	add    BYTE PTR [rax],al
   140010e98:	push   rdi
   140010e99:	outs   dx,DWORD PTR ds:[rsi]
   140010e9a:	jb     0x140010f07
   140010e9c:	data16 ins BYTE PTR es:[rdi],dx
   140010e9e:	outs   dx,DWORD PTR ds:[rsi]
   140010e9f:	ja     0x140010ee5
   140010ea1:	gs (bad) 
   140010ea3:	jne    0x140010f0c
   140010ea5:	rex.W outs dx,DWORD PTR ds:[rsi]
   140010ea7:	jae    0x140010f1d
   140010ea9:	cs jo  0x140010f10
   140010eac:	(bad)  
   140010ead:	add    BYTE PTR [rax],al
   140010eaf:	add    BYTE PTR [rcx],al
   140010eb1:	add    BYTE PTR [rax],al
   140010eb3:	add    BYTE PTR [rsi-0x7a000000],al
   140010eb9:	add    BYTE PTR [rax],al
   140010ebb:	add    BYTE PTR [rax],al
   140010ebd:	add    BYTE PTR [rax],al
   140010ebf:	add    BYTE PTR [rcx],al
	...
   140010ecd:	xor    BYTE PTR [rcx],al
   140010ecf:	add    al,ch
   140010ed1:	(bad)  
   140010ed2:	add    DWORD PTR [rax],eax
   140010ed4:	ror    BYTE PTR [rsi],0x1
	...
   140010eef:	add    BYTE PTR [rcx],al
   140010ef1:	add    BYTE PTR [rax],al
   140010ef3:	add    BYTE PTR [rax],al
   140010ef5:	sgdt   [rax]
	...
   140010f00:	adc    BYTE PTR [rdi],cl
   140010f02:	add    DWORD PTR [rax],eax
	...
   140010f10:	add    BYTE PTR [rax],dh
   140010f12:	add    DWORD PTR [rax],eax
	...
   140010f1c:	(bad)  
   140010f1d:	(bad)  
   140010f1e:	(bad)  
   140010f1f:	inc    DWORD PTR [rax]
   140010f21:	add    BYTE PTR [rax],al
   140010f23:	add    BYTE PTR [rax+0x0],al
   140010f26:	add    BYTE PTR [rax],al
   140010f28:	call   0x14001103b
	...
   140010f35:	add    BYTE PTR [rax],al
   140010f37:	add    BYTE PTR [rax+0x30],cl
   140010f3a:	add    DWORD PTR [rax],eax
	...
   140010f44:	(bad)  
   140010f45:	(bad)  
   140010f46:	(bad)  
   140010f47:	inc    DWORD PTR [rax]
   140010f49:	add    BYTE PTR [rax],al
   140010f4b:	add    BYTE PTR [rax+0x0],al
   140010f4e:	add    BYTE PTR [rax],al
   140010f50:	(bad)  
   140010f51:	sgdt   [rax]
	...
   140010f68:	add    DWORD PTR [rax],eax
   140010f6a:	add    BYTE PTR [rax],al
   140010f6c:	js     0x140010f7d
   140010f6e:	add    DWORD PTR [rax],eax
	...
   140010f78:	cmp    BYTE PTR [rdi],cl
   140010f7a:	add    DWORD PTR [rax],eax
	...
   140010f88:	add    DWORD PTR [rax],eax
	...
   140010f92:	add    BYTE PTR [rax],al
   140010f94:	and    BYTE PTR [rax],dh
   140010f96:	add    DWORD PTR [rax],eax
   140010f98:	mov    al,0xf
   140010f9a:	add    DWORD PTR [rax],eax
   140010f9c:	mov    BYTE PTR [rdi],cl
   140010f9e:	add    DWORD PTR [rax],eax
	...
   140010fb8:	add    al,BYTE PTR [rax]
   140010fba:	add    BYTE PTR [rax],al
   140010fbc:	enter  0x10f,0x0
	...
   140010fc8:	loopne 0x140010fd9
   140010fca:	add    DWORD PTR [rax],eax
   140010fcc:	cmp    BYTE PTR [rdi],cl
   140010fce:	add    DWORD PTR [rax],eax
	...
   140010fe0:	and    BYTE PTR [rax],dh
   140010fe2:	add    DWORD PTR [rax],eax
   140010fe4:	add    DWORD PTR [rax],eax
   140010fe6:	add    BYTE PTR [rax],al
   140010fe8:	add    BYTE PTR [rax],al
   140010fea:	add    BYTE PTR [rax],al
   140010fec:	(bad)  
   140010fed:	(bad)  
   140010fee:	(bad)  
   140010fef:	inc    DWORD PTR [rax]
   140010ff1:	add    BYTE PTR [rax],al
   140010ff3:	add    BYTE PTR [rax+0x0],al
   140010ff6:	add    BYTE PTR [rax],al
   140010ff8:	mov    al,0xf
   140010ffa:	add    DWORD PTR [rax],eax
	...
   140011008:	add    DWORD PTR [rax],eax
	...
   140011012:	add    BYTE PTR [rax],al
   140011014:	rex.W xor BYTE PTR [rcx],al
   140011017:	add    BYTE PTR [rax+0xf],ah
   14001101a:	add    DWORD PTR [rax],eax
   14001101c:	or     BYTE PTR [rax],dl
   14001101e:	add    DWORD PTR [rax],eax
	...
   140011030:	add    DWORD PTR [rax],eax
	...
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	xor    BYTE PTR [rdx+0x1],al
   14001103f:	add    BYTE PTR [rax+0x10],bl
   140011042:	add    DWORD PTR [rax],eax
   140011044:	xor    BYTE PTR [rax],dl
   140011046:	add    DWORD PTR [rax],eax
	...
   140011060:	add    al,BYTE PTR [rax]
   140011062:	add    BYTE PTR [rax],al
   140011064:	jo     0x140011076
   140011066:	add    DWORD PTR [rax],eax
	...
   140011070:	mov    BYTE PTR [rax],dl
   140011072:	add    DWORD PTR [rax],eax
   140011074:	cmp    BYTE PTR [rdi],cl
   140011076:	add    DWORD PTR [rax],eax
	...
   140011088:	xor    BYTE PTR [rdx+0x1],al
   14001108b:	add    BYTE PTR [rcx],al
   14001108d:	add    BYTE PTR [rax],al
   14001108f:	add    BYTE PTR [rax],al
   140011091:	add    BYTE PTR [rax],al
   140011093:	add    bh,bh
   140011095:	(bad)  
   140011096:	(bad)  
   140011097:	inc    DWORD PTR [rax]
   140011099:	add    BYTE PTR [rax],al
   14001109b:	add    BYTE PTR [rax+0x0],al
   14001109e:	add    BYTE PTR [rax],al
   1400110a0:	pop    rax
   1400110a1:	adc    BYTE PTR [rcx],al
	...
   1400110cf:	add    BYTE PTR [rcx],cl
   1400110d1:	clts   
   1400110d3:	add    BYTE PTR [rdi],cl
   1400110d5:	or     al,BYTE PTR fs:[rax]
   1400110d8:	sysenter 
   1400110da:	or     DWORD PTR [rax],eax
   1400110dc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400110df:	jo     0x1400110d9
   1400110e1:	push   rdi
   1400110e2:	add    BYTE PTR [rax],al
   1400110e4:	add    DWORD PTR [rax],eax
   1400110e6:	add    BYTE PTR [rax],al
   1400110e8:	pop    rdi
   1400110e9:	cmp    BYTE PTR [rax],al
   1400110eb:	add    dh,ah
   1400110ed:	cmp    BYTE PTR [rax],al
   1400110ef:	add    dh,dh
   1400110f1:	retf   0x0
   1400110f4:	out    0x38,al
   1400110f6:	add    BYTE PTR [rax],al
   1400110f8:	add    DWORD PTR [rax],eax
   1400110fa:	add    BYTE PTR [rax],al
   1400110fc:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2051103
   140011102:	add    BYTE PTR [rax],al
   140011104:	mov    BYTE PTR [rcx+0x0],ah
   140011107:	add    BYTE PTR [rax],bh
   140011109:	in     al,0x0
   14001110b:	add    bh,bh
   14001110d:	(bad)  
   14001110e:	(bad)  
   14001110f:	inc    DWORD PTR [rax]
   140011111:	add    BYTE PTR [rax],al
   140011113:	add    bh,bh
   140011115:	(bad)  
   140011116:	(bad)  
   140011117:	inc    DWORD PTR [rax]
	...
   140011121:	add    BYTE PTR [rax],al
   140011123:	add    BYTE PTR [rcx],al
   140011125:	add    BYTE PTR [rax],al
   140011127:	add    BYTE PTR [rcx],al
   140011129:	add    BYTE PTR [rax],al
   14001112b:	add    BYTE PTR [rax],dh
   14001112d:	adc    DWORD PTR [rcx],eax
   14001112f:	add    BYTE PTR [rax+0x0],al
	...
   14001113a:	add    BYTE PTR [rax],al
   14001113c:	sbb    cl,bl
   14001113e:	add    BYTE PTR [rax],al
   140011140:	cmp    BYTE PTR [rax],al
   140011142:	add    BYTE PTR [rax],al
   140011144:	js     0x14001117f
   140011146:	add    BYTE PTR [rax],al
   140011148:	(bad)  
   140011149:	(bad)  
   14001114a:	(bad)  
   14001114b:	inc    DWORD PTR [rbp+0x39]
   140011151:	add    BYTE PTR [rax],al
   140011153:	add    BYTE PTR [rbx-0xffffc7],cl
   140011159:	(bad)  
   14001115a:	(bad)  
   14001115b:	call   FWORD PTR [rdx]
   14001115d:	retf   
   14001115e:	add    BYTE PTR [rax],al
   140011160:	add    BYTE PTR [rax],al
   140011162:	add    BYTE PTR [rax],al
   140011164:	(bad)  
   140011165:	retf   
   140011166:	add    BYTE PTR [rax],al
   140011168:	add    DWORD PTR [rax],eax
   14001116a:	add    BYTE PTR [rax],al
   14001116c:	sub    al,0xcb
   14001116e:	add    BYTE PTR [rax],al
   140011170:	add    BYTE PTR [rax],al
   140011172:	add    BYTE PTR [rax],al
   140011174:	sbb    DWORD PTR [rdx],ecx
   140011176:	add    al,BYTE PTR [rax]
   140011178:	or     dh,BYTE PTR [rdx]
   14001117a:	(bad)  
   14001117b:	push   rax
   14001117c:	mov    BYTE PTR [rcx+0x0],ah
   14001117f:	add    BYTE PTR [rax],bh
   140011181:	in     al,0x0
   140011183:	add    BYTE PTR [rcx],al
   140011185:	or     al,BYTE PTR [rdx]
   140011187:	add    BYTE PTR [rdx],cl
   140011189:	xor    al,BYTE PTR [rsi]
   14001118b:	xor    BYTE PTR [rcx],al
   14001118d:	clts   
   14001118f:	add    BYTE PTR [rdi],cl
   140011191:	fs (bad) 
   140011193:	add    BYTE PTR [rdi],cl
   140011195:	xor    al,0x6
   140011197:	add    BYTE PTR [rdi],cl
   140011199:	xor    cl,BYTE PTR [rbx]
   14001119b:	jo     0x1400111ae
   14001119d:	sbb    DWORD PTR [rdx],ecx
   14001119f:	add    BYTE PTR [rcx],bl
   1400111a1:	je     0x1400111ad
   1400111a3:	add    BYTE PTR [rcx],bl
   1400111a5:	or     DWORD PTR fs:[rax],eax
   1400111a8:	sbb    DWORD PTR [rax+rcx*1],esi
   1400111ab:	add    BYTE PTR [rcx],bl
   1400111ad:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e125a3
   1400111b3:	sar    al,0x57
   1400111b6:	add    BYTE PTR [rax],al
   1400111b8:	add    DWORD PTR [rax],eax
   1400111ba:	add    BYTE PTR [rax],al
   1400111bc:	cmp    bh,BYTE PTR [rip+0x3e000000]        # 0x17e0111c2
   1400111c2:	add    BYTE PTR [rax],al
   1400111c4:	rex retf 
   1400111c6:	add    BYTE PTR [rax],al
   1400111c8:	add    BYTE PTR [rax],al
   1400111ca:	add    BYTE PTR [rax],al
   1400111cc:	adc    DWORD PTR [rbx],edx
   1400111ce:	add    al,0x0
   1400111d0:	adc    esi,DWORD PTR [rdi+rax*1]
   1400111d3:	add    BYTE PTR [rbx],dl
   1400111d5:	xor    cl,BYTE PTR [rdi]
   1400111d7:	jo     0x1400111d1
   1400111d9:	push   rdi
   1400111da:	add    BYTE PTR [rax],al
   1400111dc:	add    al,BYTE PTR [rax]
   1400111de:	add    BYTE PTR [rax],al
   1400111e0:	mov    esp,0xe9000041
   1400111e5:	add    BYTE PTR [r8],al
   1400111e8:	pop    rdx
   1400111e9:	retf   
   1400111ea:	add    BYTE PTR [rax],al
   1400111ec:	add    BYTE PTR [rax],al
   1400111ee:	add    BYTE PTR [rax],al
   1400111f0:	sti    
   1400111f1:	add    BYTE PTR [r8],al
   1400111f4:	xor    al,BYTE PTR [rdx+0x0]
   1400111f7:	add    BYTE PTR [rbx-0x35],dh
   1400111fa:	add    BYTE PTR [rax],al
   1400111fc:	add    BYTE PTR [rax],al
   1400111fe:	add    BYTE PTR [rax],al
   140011200:	adc    DWORD PTR [rdx],ecx
   140011202:	add    al,0x0
   140011204:	or     dh,BYTE PTR [rsi+rax*1]
   140011207:	add    BYTE PTR [rdx],cl
   140011209:	xor    al,BYTE PTR [rsi]
   14001120b:	jo     0x140011205
   14001120d:	push   rdi
   14001120e:	add    BYTE PTR [rax],al
   140011210:	add    al,BYTE PTR [rax]
   140011212:	add    BYTE PTR [rax],al
   140011214:	imul   eax,DWORD PTR [rbx+0x0],0x0
   140011218:	jne    0x14001125d
   14001121a:	add    BYTE PTR [rax],al
   14001121c:	pop    rdx
   14001121d:	retf   
   14001121e:	add    BYTE PTR [rax],al
   140011220:	add    BYTE PTR [rax],al
   140011222:	add    BYTE PTR [rax],al
   140011224:	mov    al,BYTE PTR [rbx+0x0]
   140011227:	add    BYTE PTR [rcx+0x73000043],dh
   14001122d:	retf   
   14001122e:	add    BYTE PTR [rax],al
   140011230:	add    BYTE PTR [rax],al
   140011232:	add    BYTE PTR [rax],al
   140011234:	add    DWORD PTR [rdi],ecx
   140011236:	add    al,0x0
   140011238:	sysenter 
   14001123a:	(bad)  
   14001123b:	add    BYTE PTR [rdi],cl
   14001123d:	xor    cl,BYTE PTR [rbx]
   14001123f:	jo     0x140011252
   140011241:	sbb    al,0xa
   140011243:	add    BYTE PTR [rsp+riz*2],bl
   140011246:	ltr    WORD PTR [rsp+rsi*1]
   14001124a:	(bad)  
   14001124b:	add    BYTE PTR [rdx+rsi*2],bl
   14001124e:	sbb    al,dh
   140011250:	(bad)  
   140011251:	loopne 0x140011267
   140011253:	rcl    BYTE PTR [rdx],1
   140011255:	rcl    BYTE PTR [rax],0x70
   140011258:	clc    
   140011259:	push   rdi
   14001125a:	add    BYTE PTR [rax],al
   14001125c:	add    DWORD PTR [rax],eax
   14001125e:	add    BYTE PTR [rax],al
   140011260:	(bad)  
   140011261:	rex.RXB add BYTE PTR [r8],r8b
   140011264:	xor    ecx,DWORD PTR [rax+0x0]
   140011267:	add    BYTE PTR [rdx+0xcb],dl
   14001126d:	add    BYTE PTR [rax],al
   14001126f:	add    BYTE PTR [rcx],bl
   140011271:	sub    eax,0x641b000b
   140011276:	push   rcx
   140011277:	add    BYTE PTR [rbx],bl
   140011279:	push   rsp
   14001127a:	push   rax
   14001127b:	add    BYTE PTR [rbx],bl
   14001127d:	xor    al,0x4f
   14001127f:	add    BYTE PTR [rbx],bl
   140011281:	add    DWORD PTR [rdx+0x0],ecx
   140011284:	adc    al,0xf0
   140011286:	adc    ah,al
   140011288:	adc    BYTE PTR [rax+0x0],dh
   14001128b:	add    al,ch
   14001128d:	mov    al,BYTE PTR [rax]
   14001128f:	add    BYTE PTR [rax+0x2],al
   140011292:	add    BYTE PTR [rax],al
   140011294:	add    DWORD PTR [rcx+rax*1],eax
   140011297:	add    BYTE PTR [rdx+rax*2],al
   14001129a:	add    BYTE PTR [rax],al
   14001129c:	adc    DWORD PTR [rax],esp
   14001129e:	or     eax,0x1fc42000
   1400112a3:	add    BYTE PTR [rax],ah
   1400112a5:	je     0x1400112c5
   1400112a7:	add    BYTE PTR [rax],ah
   1400112a9:	fs sbb eax,0x1c342000
   1400112af:	add    BYTE PTR [rax],ah
   1400112b1:	add    DWORD PTR [rax],ebx
   1400112b3:	add    BYTE PTR [rcx],bl
   1400112b5:	lock (bad) 
   1400112b7:	loopne 0x1400112ce
   1400112b9:	rol    BYTE PTR [rax],1
   1400112bb:	add    al,bh
   1400112bd:	push   rdi
   1400112be:	add    BYTE PTR [rax],al
   1400112c0:	add    eax,DWORD PTR [rax]
   1400112c2:	add    BYTE PTR [rax],al
   1400112c4:	push   rsp
   1400112c5:	rex.WR add BYTE PTR [rax],r8b
   1400112c8:	jo     0x140011316
   1400112ca:	add    BYTE PTR [rax],al
   1400112cc:	mov    esp,0xcb
   1400112d1:	add    BYTE PTR [rax],al
   1400112d3:	add    BYTE PTR [rbx+0x4c],bh
   1400112d6:	add    BYTE PTR [rax],al
   1400112d8:	lods   eax,DWORD PTR ds:[rsi]
   1400112d9:	rex.WR add BYTE PTR [rax],r8b
   1400112dc:	mov    esp,0xcb
   1400112e1:	add    BYTE PTR [rax],al
   1400112e3:	add    BYTE PTR [rbp+0x4700004c],dh
   1400112e9:	rex.WRXB add BYTE PTR [r8],r8b
   1400112ec:	mov    esp,0xcb
   1400112f1:	add    BYTE PTR [rax],al
   1400112f3:	add    BYTE PTR [rcx],al
   1400112f5:	or     al,0x6
   1400112f7:	add    BYTE PTR [rsp+rsi*1],cl
   1400112fa:	or     al,0x0
   1400112fc:	or     al,0x52
   1400112fe:	or     BYTE PTR [rax+0x7],dh
   140011301:	(bad)  
   140011302:	(bad)  
   140011303:	push   rax
   140011304:	add    DWORD PTR [rip+0xffffffffc4150009],edx        # 0x104161313
   14001130a:	add    eax,0x4741500
   14001130f:	add    BYTE PTR [rip+0x15000364],dl        # 0x155011679
   140011315:	xor    al,0x2
   140011317:	add    BYTE PTR [rip+0x10000f0],dl        # 0x14101140d
   14001131d:	sbb    DWORD PTR [rdx],ecx
   14001131f:	add    BYTE PTR [rcx],bl
   140011321:	je     0x14001132e
   140011323:	add    BYTE PTR [rcx],bl
   140011325:	or     al,BYTE PTR fs:[rax]
   140011328:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14001132c:	sbb    DWORD PTR [rax+rcx*1],esi
   14001132f:	add    BYTE PTR [rcx],bl
   140011331:	push   rdx
   140011332:	adc    eax,0x40d01e0
   140011337:	add    BYTE PTR [rip+0xd000934],cl        # 0x14d011c71
   14001133d:	xor    al,BYTE PTR [rsi]
   14001133f:	push   rax
   140011340:	add    DWORD PTR [rdi],eax
   140011342:	add    al,BYTE PTR [rax]
   140011344:	(bad)  
   140011345:	add    DWORD PTR [rbx],edx
   140011347:	add    BYTE PTR [rcx],al
   140011349:	or     BYTE PTR [rax+rax*1],al
   14001134c:	or     BYTE PTR [rdx+0x4],dh
   14001134f:	jo     0x140011354
   140011351:	(bad)  
   140011352:	add    dh,BYTE PTR [rax]
   140011354:	add    DWORD PTR [rdx],ecx
   140011356:	add    al,0x0
   140011358:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   14001135f:	jo     0x140011362
   140011361:	sbb    al,0xc
   140011363:	add    BYTE PTR [rsp+riz*2],bl
   140011366:	adc    BYTE PTR [rax],al
   140011368:	sbb    al,0x54
   14001136a:	ltr    WORD PTR [rsp+rsi*1]
   14001136e:	(bad)  
   14001136f:	add    BYTE PTR [rdx+rsi*2],bl
   140011372:	sbb    al,dh
   140011374:	(bad)  
   140011375:	loopne 0x14001138b
   140011377:	rcl    BYTE PTR [rdx],1
   140011379:	rcl    BYTE PTR [rax],0x70
   14001137c:	add    DWORD PTR [rcx],ecx
   14001137e:	add    DWORD PTR [rax],eax
   140011380:	or     DWORD PTR [rdx+0x0],esp
   140011383:	add    BYTE PTR [rcx],al
   140011385:	adc    cl,BYTE PTR [rax]
   140011387:	add    BYTE PTR [rdx],dl
   140011389:	push   rsp
   14001138a:	or     DWORD PTR [rax],eax
   14001138c:	adc    dh,BYTE PTR [rax+rcx*1]
   14001138f:	add    BYTE PTR [rdx],dl
   140011391:	xor    cl,BYTE PTR [rsi]
   140011393:	loopne 0x1400113a1
   140011395:	jo     0x1400113a2
   140011397:	(bad)  
   140011398:	sbb    DWORD PTR [rbx],esi
   14001139a:	or     eax,DWORD PTR [rax]
   14001139c:	and    dh,BYTE PTR [rbp+rdi*4+0x0]
   1400113a0:	and    ah,BYTE PTR [rsp+rdi*4+0x0]
   1400113a4:	and    dh,BYTE PTR [rbx+rdi*4]
   1400113a7:	add    BYTE PTR [rdx],ah
   1400113a9:	add    DWORD PTR [rsi+0x12f01400],esi
   1400113af:	loopne 0x1400113c1
   1400113b1:	push   rax
   1400113b2:	add    BYTE PTR [rax],al
   1400113b4:	call   0xe0011443
   1400113b9:	add    eax,0x18090000
   1400113be:	add    al,BYTE PTR [rax]
   1400113c0:	sbb    BYTE PTR [rdx+0x57f83014],dh
   1400113c6:	add    BYTE PTR [rax],al
   1400113c8:	add    DWORD PTR [rax],eax
   1400113ca:	add    BYTE PTR [rax],al
   1400113cc:	jae    0x14001142c
   1400113ce:	add    BYTE PTR [rax],al
   1400113d0:	xchg   ebx,eax
   1400113d1:	pop    rsi
   1400113d2:	add    BYTE PTR [rax],al
   1400113d4:	(bad)  
   1400113d6:	add    BYTE PTR [rax],al
   1400113d8:	xchg   ebx,eax
   1400113d9:	pop    rsi
   1400113da:	add    BYTE PTR [rax],al
   1400113dc:	add    DWORD PTR [rsi],eax
   1400113de:	add    al,BYTE PTR [rax]
   1400113e0:	(bad)  
   1400113e1:	jb     0x1400113e5
   1400113e3:	push   rax
   1400113e4:	add    DWORD PTR [rsi],edx
   1400113e6:	or     al,BYTE PTR [rax]
   1400113e8:	(bad)  
   1400113e9:	push   rsp
   1400113ea:	or     al,0x0
   1400113ec:	(bad)  
   1400113ed:	xor    al,0xb
   1400113ef:	add    BYTE PTR [rsi],dl
   1400113f1:	xor    dl,BYTE PTR [rdx]
   1400113f3:	lock adc al,ah
   1400113f6:	(bad)  
   1400113f7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400113fb:	(bad)  
   1400113fc:	add    DWORD PTR [rdi],ecx
   1400113fe:	(bad)  
   1400113ff:	add    BYTE PTR [rdi],cl
   140011401:	fs or  al,0x0
   140011404:	sysenter 
   140011406:	or     eax,DWORD PTR [rax]
   140011408:	(bad)  
   14001140a:	or     esi,DWORD PTR [rax+0x1]
   14001140d:	adc    al,0x8
   14001140f:	add    BYTE PTR [rsp+riz*2],dl
   140011412:	or     al,0x0
   140011414:	adc    al,0x54
   140011416:	or     eax,DWORD PTR [rax]
   140011418:	adc    al,0x34
   14001141a:	or     al,BYTE PTR [rax]
   14001141c:	adc    al,0x72
   14001141e:	adc    BYTE PTR [rax+0x1],dh
   140011421:	add    BYTE PTR [rax],al
   140011423:	add    BYTE PTR [rcx],dl
   140011425:	(bad)  
   140011426:	add    al,BYTE PTR [rax]
   140011428:	(bad)  
   140011429:	push   rdx
   14001142a:	add    dh,BYTE PTR [rax]
   14001142c:	clc    
   14001142d:	push   rdi
   14001142e:	add    BYTE PTR [rax],al
   140011430:	add    DWORD PTR [rax],eax
   140011432:	add    BYTE PTR [rax],al
   140011434:	test   BYTE PTR [rax+rax*1+0x0],ah
   140011438:	int3   
   140011439:	add    BYTE PTR fs:[rax],al
   14001143c:	sub    esp,ecx
   14001143e:	add    BYTE PTR [rax],al
   140011440:	add    BYTE PTR [rax],al
   140011442:	add    BYTE PTR [rax],al
   140011444:	add    DWORD PTR [rsi],eax
   140011446:	add    al,BYTE PTR [rax]
   140011448:	(bad)  
   140011449:	xor    al,BYTE PTR [rdx]
   14001144b:	push   rax
   14001144c:	add    DWORD PTR [rcx+rax*1],eax
   14001144f:	add    BYTE PTR [rdx+riz*2],al
   140011452:	add    BYTE PTR [rax],al
   140011454:	sbb    DWORD PTR [rdi],ebp
   140011456:	or     DWORD PTR [rax],eax
   140011458:	(bad)  
   140011459:	je     0x140011416
   14001145b:	add    BYTE PTR [rsi],bl
   14001145d:	fs mov edx,0xb9341e00
   140011463:	add    BYTE PTR [rsi],bl
   140011465:	add    DWORD PTR [rsi+0x501000],esi
   14001146b:	add    al,ch
   14001146d:	mov    al,BYTE PTR [rax]
   14001146f:	add    BYTE PTR [rax+0x1000005],ah
   140011475:	adc    al,0x8
   140011477:	add    BYTE PTR [rsp+riz*2],dl
   14001147a:	or     al,BYTE PTR [rax]
   14001147c:	adc    al,0x54
   14001147e:	or     DWORD PTR [rax],eax
   140011480:	adc    al,0x34
   140011482:	or     BYTE PTR [rax],al
   140011484:	adc    al,0x52
   140011486:	adc    BYTE PTR [rax+0x1],dh
   140011489:	add    BYTE PTR [rax],al
   14001148b:	add    BYTE PTR [rax],al
   14001148d:	add    BYTE PTR [rax],al
   14001148f:	add    BYTE PTR [rcx],al
   140011491:	add    BYTE PTR [rax],al
   140011493:	add    BYTE PTR [rcx],al
   140011495:	adc    al,0x6
   140011497:	add    BYTE PTR [rsp+riz*2],dl
   14001149a:	(bad)  
   14001149b:	add    BYTE PTR [rsp+rsi*1],dl
   14001149e:	(bad)  
   14001149f:	add    BYTE PTR [rdx+rsi*1],dl
   1400114a2:	adc    BYTE PTR [rax+0x1],dh
   1400114a5:	or     eax,0x340d0004
   1400114aa:	str    WORD PTR [rip+0x95006b2]        # 0x149511b63
   1400114b1:	add    al,0x1
   1400114b3:	add    BYTE PTR [rdx+rax*2],al
   1400114b6:	add    BYTE PTR [rax],al
   1400114b8:	clc    
   1400114b9:	push   rdi
   1400114ba:	add    BYTE PTR [rax],al
   1400114bc:	add    DWORD PTR [rax],eax
   1400114be:	add    BYTE PTR [rax],al
   1400114c0:	rex.WB jb 0x1400114c3
   1400114c3:	add    BYTE PTR [rbp+0x72],cl
   1400114c6:	add    BYTE PTR [rax],al
   1400114c8:	add    DWORD PTR [rax],eax
   1400114ca:	add    BYTE PTR [rax],al
   1400114cc:	rex.WRB jb 0x1400114cf
   1400114cf:	add    BYTE PTR [rcx],cl
   1400114d1:	add    al,0x1
   1400114d3:	add    BYTE PTR [rdx+rax*2],al
   1400114d6:	add    BYTE PTR [rax],al
   1400114d8:	clc    
   1400114d9:	push   rdi
   1400114da:	add    BYTE PTR [rax],al
   1400114dc:	add    DWORD PTR [rax],eax
   1400114de:	add    BYTE PTR [rax],al
   1400114e0:	and    dh,BYTE PTR [rdx+0x0]
   1400114e3:	add    BYTE PTR [rsi],ah
   1400114e5:	jb     0x1400114e7
   1400114e7:	add    BYTE PTR [rcx],al
   1400114e9:	add    BYTE PTR [rax],al
   1400114eb:	add    BYTE PTR [rsi],ah
   1400114ed:	jb     0x1400114ef
   1400114ef:	add    BYTE PTR [rcx],dl
   1400114f1:	adc    BYTE PTR [rsi],al
   1400114f3:	add    BYTE PTR [rax],dl
   1400114f5:	je     0x1400114fe
   1400114f7:	add    BYTE PTR [rax],dl
   1400114f9:	xor    al,0x6
   1400114fb:	add    BYTE PTR [rax],dl
   1400114fd:	xor    cl,BYTE PTR [rax+riz*8]
   140011500:	clc    
   140011501:	push   rdi
   140011502:	add    BYTE PTR [rax],al
   140011504:	add    DWORD PTR [rax],eax
   140011506:	add    BYTE PTR [rax],al
   140011508:	(bad)  
   140011509:	jae    0x14001150b
   14001150b:	add    bh,dh
   14001150d:	jae    0x14001150f
   14001150f:	add    BYTE PTR [rax-0x34],cl
   140011512:	add    BYTE PTR [rax],al
   140011514:	add    BYTE PTR [rax],al
   140011516:	add    BYTE PTR [rax],al
   140011518:	adc    DWORD PTR [rsi],eax
   14001151a:	add    al,BYTE PTR [rax]
   14001151c:	(bad)  
   14001151d:	xor    al,BYTE PTR [rdx]
   14001151f:	xor    al,bh
   140011521:	push   rdi
   140011522:	add    BYTE PTR [rax],al
   140011524:	add    DWORD PTR [rax],eax
   140011526:	add    BYTE PTR [rax],al
   140011528:	ret    
   140011529:	ja     0x14001152b
   14001152b:	add    cl,bl
   14001152d:	ja     0x14001152f
   14001152f:	add    BYTE PTR [rbx-0x34],ch
   140011532:	add    BYTE PTR [rax],al
   140011534:	add    BYTE PTR [rax],al
   140011536:	add    BYTE PTR [rax],al
   140011538:	adc    DWORD PTR [rdx],ecx
   14001153a:	add    al,0x0
   14001153c:	or     dh,BYTE PTR [rdi+rax*1]
   14001153f:	add    BYTE PTR [rdx],cl
   140011541:	xor    al,BYTE PTR [rsi]
   140011543:	jo     0x14001153d
   140011545:	push   rdi
   140011546:	add    BYTE PTR [rax],al
   140011548:	add    DWORD PTR [rax],eax
   14001154a:	add    BYTE PTR [rax],al
   14001154c:	xchg   BYTE PTR [rax+rax*1+0x0],bh
   140011550:	fnstsw WORD PTR [rax+rax*1+0x0]
   140011554:	mov    cl,ah
   140011556:	add    BYTE PTR [rax],al
   140011558:	add    BYTE PTR [rax],al
   14001155a:	add    BYTE PTR [rax],al
   14001155c:	adc    DWORD PTR [rcx],ebx
   14001155e:	or     al,BYTE PTR [rax]
   140011560:	sbb    esp,esp
   140011562:	or     eax,DWORD PTR [rax]
   140011564:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140011568:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14001156c:	sbb    DWORD PTR [rax+rcx*1],esi
   14001156f:	add    BYTE PTR [rcx],bl
   140011571:	push   rdx
   140011572:	adc    eax,0x57f8f0
   140011577:	add    BYTE PTR [rcx],al
   140011579:	add    BYTE PTR [rax],al
   14001157b:	add    BYTE PTR [rbx+0x7e],bl
   14001157e:	add    BYTE PTR [rax],al
   140011580:	adc    bh,BYTE PTR [rdi+0x0]
   140011583:	add    BYTE PTR [rdx+0xcc],cl
   140011589:	add    BYTE PTR [rax],al
   14001158b:	add    BYTE PTR [rcx],bl
   14001158d:	and    eax,0x5416000a
   140011592:	adc    DWORD PTR [rax],eax
   140011594:	(bad)  
   140011595:	xor    al,0x10
   140011597:	add    BYTE PTR [rsi],dl
   140011599:	jb     0x1400115ad
   14001159b:	lock adc al,ah
   14001159e:	(bad)  
   14001159f:	ror    BYTE PTR [rax+rsi*2],0xb
   1400115a3:	(bad)  
   1400115a4:	call   0x178011633
   1400115a9:	add    BYTE PTR [rax],al
   1400115ab:	add    BYTE PTR [rcx],bl
   1400115ad:	sub    eax,DWORD PTR [rdi]
   1400115af:	add    BYTE PTR [rdx],bl
   1400115b1:	je     0x140011567
   1400115b3:	add    BYTE PTR [rdx],bl
   1400115b5:	xor    al,0xb3
   1400115b7:	add    BYTE PTR [rdx],bl
   1400115b9:	add    DWORD PTR [rax+0x500b00],esi
   1400115bf:	add    al,ch
   1400115c1:	mov    al,BYTE PTR [rax]
   1400115c3:	add    BYTE PTR [rax+0x5],dh
   1400115c6:	add    BYTE PTR [rax],al
   1400115c8:	or     DWORD PTR [rdx],ecx
   1400115ca:	add    al,0x0
   1400115cc:	or     dh,BYTE PTR [rsi+rax*1]
   1400115cf:	add    BYTE PTR [rdx],cl
   1400115d1:	xor    al,BYTE PTR [rsi]
   1400115d3:	jo     0x1400115cd
   1400115d5:	push   rdi
   1400115d6:	add    BYTE PTR [rax],al
   1400115d8:	add    DWORD PTR [rax],eax
   1400115da:	add    BYTE PTR [rax],al
   1400115dc:	jge    0x140011560
   1400115de:	add    BYTE PTR [rax],al
   1400115e0:	mov    al,0x82
   1400115e2:	add    BYTE PTR [rax],al
   1400115e4:	mov    al,0xcc
   1400115e6:	add    BYTE PTR [rax],al
   1400115e8:	mov    al,0x82
   1400115ea:	add    BYTE PTR [rax],al
   1400115ec:	adc    DWORD PTR [rcx],edx
   1400115ee:	or     BYTE PTR [rax],al
   1400115f0:	adc    DWORD PTR [rsi+rcx*1],esi
   1400115f3:	add    BYTE PTR [rcx],dl
   1400115f5:	push   rdx
   1400115f6:	or     eax,0x9e00bf0
   1400115fb:	rol    BYTE PTR [rdi],0x70
   1400115fe:	(bad)  
   1400115ff:	(bad)  
   140011600:	clc    
   140011601:	push   rdi
   140011602:	add    BYTE PTR [rax],al
   140011604:	add    DWORD PTR [rax],eax
   140011606:	add    BYTE PTR [rax],al
   140011608:	ret    0x84
   14001160b:	add    BYTE PTR [rcx-0x7b],cl
   14001160e:	add    BYTE PTR [rax],al
   140011610:	(bad)  
   140011611:	int3   
   140011612:	add    BYTE PTR [rax],al
   140011614:	add    BYTE PTR [rax],al
   140011616:	add    BYTE PTR [rax],al
   140011618:	add    DWORD PTR [rax],eax
   14001161a:	add    BYTE PTR [rax],al
   14001161c:	sbb    DWORD PTR [rsi],ebx
   14001161e:	or     BYTE PTR [rax],al
   140011620:	setb   BYTE PTR [rbx]
   140011623:	lock or eax,esp
   140011626:	(bad)  
   140011627:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143611a9e
   14001162e:	add    dh,BYTE PTR [rax]
   140011630:	call   0x1880116bf
   140011635:	add    BYTE PTR [rax],al
   140011637:	add    BYTE PTR [rcx],al
   140011639:	(bad)  
   14001163a:	add    al,BYTE PTR [rax]
   14001163c:	(bad)  
   14001163d:	add    DWORD PTR [rbx+0x100],ebx
   140011643:	add    BYTE PTR [rcx],al
   140011645:	add    BYTE PTR [rax],al
   140011647:	add    BYTE PTR [rcx],al
   140011649:	add    BYTE PTR [rax],al
   14001164b:	add    BYTE PTR [rcx],al
   14001164d:	(bad)  
   14001164e:	add    al,BYTE PTR [rax]
   140011650:	(bad)  
   140011651:	xor    al,BYTE PTR [rdx]
   140011653:	xor    BYTE PTR [rcx],bl
   140011655:	adc    ecx,DWORD PTR [rcx]
   140011657:	add    BYTE PTR [rbx],dl
   140011659:	add    DWORD PTR [rdx],edx
   14001165b:	add    BYTE PTR [rax+rsi*8],cl
   14001165e:	or     ah,al
   140011660:	or     al,dl
   140011662:	(bad)  
   140011663:	rol    BYTE PTR [rax+rsi*2],0x3
   140011667:	(bad)  
   140011668:	add    dh,BYTE PTR [rax]
   14001166a:	add    BYTE PTR [rax],al
   14001166c:	clc    
   14001166d:	push   rdi
   14001166e:	add    BYTE PTR [rax],al
   140011670:	add    al,BYTE PTR [rax]
   140011672:	add    BYTE PTR [rax],al
   140011674:	jle    0x140011611
   140011676:	add    BYTE PTR [rax],al
   140011678:	movabs ds:0xa30000ccfa00009b,eax
   140011681:	fwait
   140011682:	add    BYTE PTR [rax],al
   140011684:	jle    0x140011621
   140011686:	add    BYTE PTR [rax],al
   140011688:	(bad)  
   140011689:	pushf  
   14001168a:	add    BYTE PTR [rax],al
   14001168c:	out    dx,al
   14001168d:	int    0x0
   14001168f:	add    BYTE PTR [rax],al
   140011691:	add    BYTE PTR [rax],al
   140011693:	add    BYTE PTR [rcx],al
   140011695:	(bad)  
   140011696:	add    eax,DWORD PTR [rax]
   140011698:	(bad)  
   140011699:	rex.X add edx,DWORD PTR [rax+0x2]
   14001169d:	xor    BYTE PTR [rax],al
   14001169f:	add    BYTE PTR [rcx],bl
   1400116a1:	and    cl,BYTE PTR [rax]
   1400116a3:	add    BYTE PTR [rdx],ah
   1400116a5:	push   rdx
   1400116a6:	(bad)  
   1400116a7:	lock sbb al,0xe0
   1400116aa:	sbb    dl,al
   1400116ac:	sbb    al,al
   1400116ae:	(bad)  
   1400116af:	jo     0x1400116c6
   1400116b1:	(bad)  
   1400116b2:	adc    al,0x30
   1400116b4:	clc    
   1400116b5:	push   rdi
   1400116b6:	add    BYTE PTR [rax],al
   1400116b8:	add    al,BYTE PTR [rax]
   1400116ba:	add    BYTE PTR [rax],al
   1400116bc:	(bad)  
   1400116bd:	popf   
   1400116be:	add    BYTE PTR [rax],al
   1400116c0:	es sahf 
   1400116c2:	add    BYTE PTR [rax],al
   1400116c4:	nop
   1400116c5:	(bad)  
   1400116c6:	add    BYTE PTR [rax],al
   1400116c8:	es sahf 
   1400116ca:	add    BYTE PTR [rax],al
   1400116cc:	push   rdi
   1400116cd:	popf   
   1400116ce:	add    BYTE PTR [rax],al
   1400116d0:	rex.WRB sahf 
   1400116d2:	add    BYTE PTR [rax],al
   1400116d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400116d5:	(bad)  
   1400116d6:	add    BYTE PTR [rax],al
   1400116d8:	add    BYTE PTR [rax],al
   1400116da:	add    BYTE PTR [rax],al
   1400116dc:	add    DWORD PTR [rcx],esp
   1400116de:	or     eax,DWORD PTR [rax]
   1400116e0:	and    DWORD PTR [rdi+rbx*1],esi
   1400116e3:	add    BYTE PTR [rcx],ah
   1400116e5:	add    DWORD PTR [rsi],edx
   1400116e7:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e12add
   1400116ed:	ror    BYTE PTR [rdi],1
   1400116ef:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b612366
   1400116f6:	add    BYTE PTR [rax],al
   1400116f8:	add    DWORD PTR [rdi],edx
   1400116fa:	or     al,BYTE PTR [rax]
   1400116fc:	(bad)  
   1400116fd:	push   rsp
   1400116fe:	adc    al,BYTE PTR [rax]
   140011700:	(bad)  
   140011701:	xor    al,0x10
   140011703:	add    BYTE PTR [rdi],dl
   140011705:	xchg   edx,eax
   140011706:	adc    esi,eax
   140011708:	adc    eax,esp
   14001170a:	xadd   BYTE PTR [rip+0x9600c70],cl        # 0x149612381
   140011711:	adc    eax,0x74150008
   140011716:	or     BYTE PTR [rax],al
   140011718:	adc    eax,0x15000764
   14001171d:	xor    al,0x6
   14001171f:	add    BYTE PTR [rip+0xfffffffff8e01132],dl        # 0x138e12857
   140011725:	push   rdi
   140011726:	add    BYTE PTR [rax],al
   140011728:	add    DWORD PTR [rax],eax
   14001172a:	add    BYTE PTR [rax],al
   14001172c:	or     al,0x98
   14001172e:	add    BYTE PTR [rax],al
   140011730:	jbe    0x1400116ca
   140011732:	add    BYTE PTR [rax],al
   140011734:	add    DWORD PTR [rax],eax
   140011736:	add    BYTE PTR [rax],al
   140011738:	jbe    0x1400116d2
   14001173a:	add    BYTE PTR [rax],al
   14001173c:	add    DWORD PTR [rcx],ebx
   14001173e:	or     al,BYTE PTR [rax]
   140011740:	sbb    DWORD PTR [rdi+rdx*1],esi
   140011743:	add    BYTE PTR [rcx],bl
   140011745:	rcl    BYTE PTR [rip+0x11e013f0],cl        # 0x151e12b3b
   14001174b:	ror    BYTE PTR [rdi],1
   14001174d:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6123c4
   140011754:	or     DWORD PTR [rip+0x420d0001],ecx        # 0x1820e175b
   14001175a:	add    BYTE PTR [rax],al
   14001175c:	clc    
   14001175d:	push   rdi
   14001175e:	add    BYTE PTR [rax],al
   140011760:	add    DWORD PTR [rax],eax
   140011762:	add    BYTE PTR [rax],al
   140011764:	and    eax,0x3600008e
   140011769:	mov    es,WORD PTR [rax]
   14001176b:	add    BYTE PTR [rdx-0x32],dh
   14001176e:	add    BYTE PTR [rax],al
   140011770:	cmp    BYTE PTR [rsi+0x1c010000],cl
   140011776:	or     al,0x0
   140011778:	sbb    al,0x64
   14001177a:	or     al,0x0
   14001177c:	sbb    al,0x54
   14001177e:	or     eax,DWORD PTR [rax]
   140011780:	sbb    al,0x34
   140011782:	or     al,BYTE PTR [rax]
   140011784:	sbb    al,0x32
   140011786:	sbb    al,dh
   140011788:	(bad)  
   140011789:	loopne 0x14001179f
   14001178b:	rcl    BYTE PTR [rdx],1
   14001178d:	rcl    BYTE PTR [rax],0x70
   140011790:	add    DWORD PTR [rax],ebx
   140011792:	or     al,BYTE PTR [rax]
   140011794:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   140011798:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   14001179c:	sbb    BYTE PTR [rsp+rcx*1],dh
   14001179f:	add    BYTE PTR [rax],bl
   1400117a1:	jb     0x1400117b7
   1400117a3:	loopne 0x1400117b7
   1400117a5:	rcl    BYTE PTR [rax],0x70
   1400117a8:	or     DWORD PTR [rcx],ebx
   1400117aa:	or     al,BYTE PTR [rax]
   1400117ac:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   1400117b0:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400117b4:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400117b7:	add    BYTE PTR [rcx],bl
   1400117b9:	push   rdx
   1400117ba:	adc    eax,0x11e013f0
   1400117bf:	sar    al,1
   1400117c1:	push   rdi
   1400117c2:	add    BYTE PTR [rax],al
   1400117c4:	add    DWORD PTR [rax],eax
   1400117c6:	add    BYTE PTR [rax],al
   1400117c8:	sub    BYTE PTR [rcx-0x65910000],bl
   1400117ce:	add    BYTE PTR [rax],al
   1400117d0:	add    DWORD PTR [rax],eax
   1400117d2:	add    BYTE PTR [rax],al
   1400117d4:	jae    0x140011770
   1400117d6:	add    BYTE PTR [rax],al
   1400117d8:	add    DWORD PTR [rdi],eax
   1400117da:	add    DWORD PTR [rax],eax
   1400117dc:	(bad)  
   1400117dd:	movabs ds:0x1206000206010000,al
   1400117e6:	add    dh,BYTE PTR [rax]
   1400117e8:	add    DWORD PTR [rsi],ecx
   1400117ea:	add    al,BYTE PTR [rax]
   1400117ec:	(bad)  
   1400117ed:	xor    cl,BYTE PTR [rdx]
   1400117ef:	xor    BYTE PTR [rcx],al
   1400117f1:	clts   
   1400117f3:	add    BYTE PTR [rdi],cl
   1400117f5:	adc    DWORD PTR fs:[rax],eax
   1400117f8:	sysenter 
   1400117fa:	adc    BYTE PTR [rax],al
   1400117fc:	psrld  mm1,QWORD PTR [rbx]
   1400117ff:	jo     0x14001181a
   140011801:	sub    eax,0x741f450d
   140011806:	adc    al,BYTE PTR [rax]
   140011808:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   14001180c:	(bad)  
   14001180d:	xor    al,0x10
   14001180f:	add    BYTE PTR [rbx],dl
   140011811:	rex.XB (bad) 
   140011813:	xchg   edx,eax
   140011814:	or     dh,al
   140011816:	or     al,ah
   140011818:	(bad)  
   140011819:	rol    BYTE PTR [rax+rax*8],1
   14001181c:	add    dl,BYTE PTR [rax+0x0]
   14001181f:	add    al,ch
   140011821:	mov    al,BYTE PTR [rax]
   140011823:	add    BYTE PTR [rax+0x0],cl
   140011826:	add    BYTE PTR [rax],al
   140011828:	add    DWORD PTR [rdi],ecx
   14001182a:	(bad)  
   14001182b:	add    BYTE PTR [rdi],cl
   14001182d:	str    WORD PTR fs:[rdi]
   140011831:	xor    al,0xe
   140011833:	add    BYTE PTR [rdi],cl
   140011835:	mov    dl,0xb
   140011837:	jo     0x140011852
   140011839:	sub    eax,0x741f350d
   14001183e:	adc    BYTE PTR [rax],al
   140011840:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140011844:	(bad)  
   140011845:	xor    al,0xe
   140011847:	add    BYTE PTR [rbx],dl
   140011849:	xor    ecx,DWORD PTR [rsi]
   14001184b:	jb     0x140011857
   14001184d:	lock or al,ah
   140011850:	(bad)  
   140011851:	rol    BYTE PTR [rax+rax*8],1
   140011854:	add    dl,BYTE PTR [rax+0x0]
   140011857:	add    al,ch
   140011859:	mov    al,BYTE PTR [rax]
   14001185b:	add    BYTE PTR [rax],dh
   14001185d:	add    BYTE PTR [rax],al
   14001185f:	add    BYTE PTR [rcx],dl
   140011861:	sbb    DWORD PTR [rdx],ecx
   140011863:	add    BYTE PTR [rcx],bl
   140011865:	je     0x140011873
   140011867:	add    BYTE PTR [rcx],bl
   140011869:	or     eax,DWORD PTR fs:[rax]
   14001186c:	sbb    DWORD PTR [rdx+rcx*1],esi
   14001186f:	add    BYTE PTR [rcx],bl
   140011871:	push   rdx
   140011872:	adc    eax,0x11e013f0
   140011877:	sar    al,1
   140011879:	push   rdi
   14001187a:	add    BYTE PTR [rax],al
   14001187c:	add    al,BYTE PTR [rax]
   14001187e:	add    BYTE PTR [rax],al
   140011880:	mov    al,0xb2
   140011882:	add    BYTE PTR [rax],al
   140011884:	hlt    
   140011885:	mov    dl,0x0
   140011887:	add    ch,dl
   140011889:	(bad)  
   14001188a:	add    BYTE PTR [rax],al
   14001188c:	add    BYTE PTR [rax],al
   14001188e:	add    BYTE PTR [rax],al
   140011890:	jge    0x140011844
   140011892:	add    BYTE PTR [rax],al
   140011894:	or     eax,0xfd0000b3
   140011899:	(bad)  
   14001189a:	add    BYTE PTR [rax],al
   14001189c:	add    BYTE PTR [rax],al
   14001189e:	add    BYTE PTR [rax],al
   1400118a0:	adc    DWORD PTR [rdi],ecx
   1400118a2:	(bad)  
   1400118a3:	add    BYTE PTR [rdi],cl
   1400118a5:	or     DWORD PTR fs:[rax],eax
   1400118a8:	sysenter 
   1400118aa:	or     BYTE PTR [rax],al
   1400118ac:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400118af:	jo     0x1400118a9
   1400118b1:	push   rdi
   1400118b2:	add    BYTE PTR [rax],al
   1400118b4:	add    DWORD PTR [rax],eax
   1400118b6:	add    BYTE PTR [rax],al
   1400118b8:	pop    rdx
   1400118b9:	mov    bl,0x0
   1400118bb:	add    ah,cl
   1400118bd:	mov    bl,0x0
   1400118bf:	add    BYTE PTR [rdi+rcx*8],bl
   1400118c2:	add    BYTE PTR [rax],al
   1400118c4:	add    BYTE PTR [rax],al
   1400118c6:	add    BYTE PTR [rax],al
   1400118c8:	add    DWORD PTR [rcx+rax*1],eax
   1400118cb:	add    BYTE PTR [rdx+rax*2],al
   1400118ce:	add    BYTE PTR [rax],al
   1400118d0:	add    DWORD PTR [rcx+rax*1],eax
   1400118d3:	add    BYTE PTR [rdx+rdx*1],al
   1400118d6:	add    BYTE PTR [rax],al
   1400118d8:	adc    DWORD PTR [rsi],eax
   1400118da:	add    al,BYTE PTR [rax]
   1400118dc:	(bad)  
   1400118dd:	xor    al,BYTE PTR [rdx]
   1400118df:	jo     0x1400118d9
   1400118e1:	push   rdi
   1400118e2:	add    BYTE PTR [rax],al
   1400118e4:	add    DWORD PTR [rax],eax
   1400118e6:	add    BYTE PTR [rax],al
   1400118e8:	in     eax,0xb4
   1400118ea:	add    BYTE PTR [rax],al
   1400118ec:	sti    
   1400118ed:	mov    ah,0x0
   1400118ef:	add    BYTE PTR [rbx-0x34],ch
   1400118f2:	add    BYTE PTR [rax],al
   1400118f4:	add    BYTE PTR [rax],al
   1400118f6:	add    BYTE PTR [rax],al
   1400118f8:	adc    DWORD PTR [rcx],edx
   1400118fa:	(bad)  
   1400118fb:	add    BYTE PTR [rcx],dl
   1400118fd:	xor    al,0xa
   1400118ff:	add    BYTE PTR [rcx],dl
   140011901:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a7124e7
   140011907:	(bad)  
   140011908:	clc    
   140011909:	push   rdi
   14001190a:	add    BYTE PTR [rax],al
   14001190c:	add    DWORD PTR [rax],eax
   14001190e:	add    BYTE PTR [rax],al
   140011910:	mov    ?,WORD PTR [rbp-0x4a2e0000]
   140011916:	add    BYTE PTR [rax],al
   140011918:	cmp    ecx,edi
   14001191a:	add    BYTE PTR [rax],al
   14001191c:	add    BYTE PTR [rax],al
   14001191e:	add    BYTE PTR [rax],al
   140011920:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17416192e
   140011926:	or     eax,DWORD PTR [rax]
   140011928:	adc    eax,0xff01132
   14001192d:	loopne 0x14001193c
   14001192f:	ror    BYTE PTR [rbx],0x70
   140011932:	or     ah,BYTE PTR [rax-0x8]
   140011935:	push   rdi
   140011936:	add    BYTE PTR [rax],al
   140011938:	add    DWORD PTR [rax],eax
   14001193a:	add    BYTE PTR [rax],al
   14001193c:	xchg   BYTE PTR [rsi-0x49480000],dh
   140011942:	add    BYTE PTR [rax],al
   140011944:	pop    rax
   140011945:	iret   
   140011946:	add    BYTE PTR [rax],al
   140011948:	add    BYTE PTR [rax],al
   14001194a:	add    BYTE PTR [rax],al
   14001194c:	sbb    DWORD PTR [rsi],esi
   14001194e:	or     eax,DWORD PTR [rax]
   140011950:	and    eax,0x25037134
   140011955:	add    DWORD PTR [rsi+0x3],esp
   140011958:	adc    al,dh
   14001195a:	(bad)  
   14001195b:	loopne 0x140011969
   14001195d:	ror    BYTE PTR [rdx],1
   14001195f:	ror    BYTE PTR [rax],0x70
   140011962:	(bad)  
   140011963:	(bad)  
   140011964:	(bad)  
   140011965:	push   rax
   140011966:	add    BYTE PTR [rax],al
   140011968:	call   0x1600119f7
   14001196d:	sbb    eax,DWORD PTR [rax]
   14001196f:	add    BYTE PTR [rcx],dl
   140011971:	(bad)  
   140011973:	add    BYTE PTR [rdi],cl
   140011975:	xor    al,0x7
   140011977:	add    BYTE PTR [rdi],cl
   140011979:	xor    cl,BYTE PTR [rbx]
   14001197b:	jo     0x140011975
   14001197d:	push   rdi
   14001197e:	add    BYTE PTR [rax],al
   140011980:	add    DWORD PTR [rax],eax
   140011982:	add    BYTE PTR [rax],al
   140011984:	cmp    edi,DWORD PTR [rdi-0x40bb0000]
   14001198a:	add    BYTE PTR [rax],al
   14001198c:	jne    0x14001195d
	...
   140011996:	add    BYTE PTR [rax],al
   140011998:	add    DWORD PTR [rax],eax
   14001199a:	add    BYTE PTR [rax],al
   14001199c:	add    DWORD PTR [rax],edx
   14001199e:	(bad)  
   14001199f:	add    BYTE PTR [rax],dl
   1400119a1:	je     0x1400119aa
   1400119a3:	add    BYTE PTR [rax],dl
   1400119a5:	xor    al,0x6
   1400119a7:	add    BYTE PTR [rax],dl
   1400119a9:	xor    cl,BYTE PTR [rax+riz*8]
   1400119ac:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b41619ba
   1400119b2:	or     BYTE PTR [rax],al
   1400119b4:	adc    eax,0x15000764
   1400119b9:	xor    al,0x6
   1400119bb:	add    BYTE PTR [rip+0xfffffffff8f01132],dl        # 0x138f12af3
   1400119c1:	push   rdi
   1400119c2:	add    BYTE PTR [rax],al
   1400119c4:	add    DWORD PTR [rax],eax
   1400119c6:	add    BYTE PTR [rax],al
   1400119c8:	add    eax,0x0
   1400119cb:	add    BYTE PTR [rax-0x6cffff40],ah
   1400119d1:	iret   
   1400119d2:	add    BYTE PTR [rax],al
   1400119d4:	add    BYTE PTR [rax],al
   1400119d6:	add    BYTE PTR [rax],al
   1400119d8:	add    DWORD PTR [rsi],eax
   1400119da:	add    al,BYTE PTR [rax]
   1400119dc:	(bad)  
   1400119dd:	jb     0x1400119e1
   1400119df:	xor    BYTE PTR [rcx],al
   1400119e1:	sbb    DWORD PTR [rdx],ecx
   1400119e3:	add    BYTE PTR [rcx],bl
   1400119e5:	je     0x1400119f6
   1400119e7:	add    BYTE PTR [rcx],bl
   1400119e9:	fs (bad) 
   1400119eb:	add    BYTE PTR [rcx],bl
   1400119ed:	push   rsp
   1400119ee:	or     eax,0xc341900
   1400119f3:	add    BYTE PTR [rcx],bl
   1400119f5:	xchg   edx,eax
   1400119f6:	adc    eax,0x61111e0
   1400119fb:	add    BYTE PTR [rcx],dl
   1400119fd:	xor    al,0xa
   1400119ff:	add    BYTE PTR [rcx],dl
   140011a01:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a7125e7
   140011a07:	(bad)  
   140011a08:	clc    
   140011a09:	push   rdi
   140011a0a:	add    BYTE PTR [rax],al
   140011a0c:	add    DWORD PTR [rax],eax
   140011a0e:	add    BYTE PTR [rax],al
   140011a10:	mov    esp,0xe00000c5
   140011a15:	(bad)
   140011a18:	cmp    ecx,edi
   140011a1a:	add    BYTE PTR [rax],al
   140011a1c:	add    BYTE PTR [rax],al
   140011a1e:	add    BYTE PTR [rax],al
   140011a20:	add    DWORD PTR [rcx+rax*1],eax
   140011a23:	add    BYTE PTR [rdx+rax*4],al
   140011a26:	add    BYTE PTR [rax],al
   140011a28:	add    DWORD PTR [rax],ebx
   140011a2a:	or     al,BYTE PTR [rax]
   140011a2c:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140011a30:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140011a34:	sbb    BYTE PTR [rax+rcx*1],dh
   140011a37:	add    BYTE PTR [rax],bl
   140011a39:	xor    dl,BYTE PTR [rax+rsi*8]
   140011a3c:	adc    ah,al
   140011a3e:	adc    BYTE PTR [rax+0x11],dh
   140011a41:	adc    eax,DWORD PTR [rdx]
   140011a43:	add    BYTE PTR [rdx],cl
   140011a45:	push   rdx
   140011a46:	(bad)  
   140011a47:	xor    BYTE PTR [rax-0xfffff9f],cl
   140011a4d:	or     al,0x1
   140011a4f:	add    bh,bh
   140011a51:	(bad)  
   140011a52:	(bad)  
   140011a53:	push   QWORD PTR [rdx+0x200000cf]
   140011a59:	adc    al,0x0
   140011a5b:	add    bh,bh
   140011a5d:	(bad)  
   140011a5e:	(bad)  
   140011a5f:	dec    DWORD PTR [rbx+0x14]
   140011a62:	add    BYTE PTR [rax],al
   140011a64:	add    BYTE PTR [rax],al
   140011a66:	add    BYTE PTR [rax],al
   140011a68:	(bad)  
   140011a69:	adc    al,0x0
   140011a6b:	add    bh,bh
   140011a6d:	(bad)  
   140011a6e:	(bad)  
   140011a6f:	call   FWORD PTR [rcx]
   140011a71:	and    al,0x7
   140011a73:	add    BYTE PTR [rdx+riz*2],bl
   140011a76:	sbb    al,dh
   140011a78:	(bad)  
   140011a79:	loopne 0x140011a8f
   140011a7b:	rcl    BYTE PTR [rdx],0x70
   140011a7e:	adc    DWORD PTR [rax+0x10],esp
   140011a81:	xor    BYTE PTR [rax],al
   140011a83:	add    BYTE PTR [rax+0x20000061],cl
   140011a89:	or     eax,0xffff0001
   140011a8e:	(bad)  
   140011a8f:	inc    DWORD PTR [rax]
   140011a91:	add    BYTE PTR [rax],al
   140011a93:	add    BYTE PTR [rax],al
   140011a95:	add    BYTE PTR [rax],al
   140011a97:	add    ah,al
   140011a99:	iret   
   140011a9a:	add    BYTE PTR [rax],al
   140011a9c:	add    DWORD PTR [rax],eax
   140011a9e:	add    BYTE PTR [rax],al
   140011aa0:	jrcxz  0x140011a71
   140011aa2:	add    BYTE PTR [rax],al
   140011aa4:	(bad)  
   140011aa5:	(bad)  
   140011aa6:	(bad)  
   140011aa7:	inc    DWORD PTR [rax]
   140011aa9:	add    BYTE PTR [rax],al
   140011aab:	add    BYTE PTR [rax],al
   140011aad:	add    BYTE PTR [rax],al
   140011aaf:	add    BYTE PTR [rdx],al
   140011ab1:	add    BYTE PTR [rax],al
   140011ab3:	add    BYTE PTR [rbx],al
   140011ab5:	add    BYTE PTR [rax],al
   140011ab7:	add    BYTE PTR [rcx],al
   140011ab9:	add    BYTE PTR [rax],al
   140011abb:	add    al,al
   140011abd:	sbb    al,BYTE PTR [rcx]
   140011abf:	add    BYTE PTR [rax+0x0],al
	...
   140011aca:	add    BYTE PTR [rax],al
   140011acc:	out    dx,eax
   140011acd:	iret   
   140011ace:	add    BYTE PTR [rax],al
   140011ad0:	cmp    BYTE PTR [rax],al
   140011ad2:	add    BYTE PTR [rax],al
   140011ad4:	push   0xffffffffff000012
   140011ad9:	(bad)  
   140011ada:	(bad)  
   140011adb:	(bad)  
   140011adc:	mov    ecx,0x12
   140011ae1:	add    BYTE PTR [rax],al
   140011ae3:	add    dl,dl
   140011ae5:	adc    al,BYTE PTR [rax]
   140011ae7:	add    BYTE PTR [rcx],al
   140011ae9:	add    BYTE PTR [rax],al
   140011aeb:	add    cl,dh
   140011aed:	adc    al,BYTE PTR [rax]
   140011aef:	add    BYTE PTR [rdx],al
   140011af1:	add    BYTE PTR [rax],al
   140011af3:	add    BYTE PTR [rbx+rdx*1],dl
   140011af6:	add    BYTE PTR [rax],al
   140011af8:	add    DWORD PTR [rax],eax
   140011afa:	add    BYTE PTR [rax],al
   140011afc:	sbb    DWORD PTR [rbx],edx
   140011afe:	add    BYTE PTR [rax],al
   140011b00:	add    BYTE PTR [rax],al
   140011b02:	add    BYTE PTR [rax],al
   140011b04:	and    DWORD PTR [rbx],edx
   140011b06:	add    BYTE PTR [rax],al
   140011b08:	(bad)  
   140011b09:	(bad)  
   140011b0a:	(bad)  
   140011b0b:	(bad)  
   140011b0c:	out    dx,eax
   140011b0d:	iret   
   140011b0e:	add    BYTE PTR [rax],al
   140011b10:	add    BYTE PTR [rax],al
   140011b12:	add    BYTE PTR [rax],al
   140011b14:	sbb    DWORD PTR [rdx],ecx
   140011b16:	add    al,BYTE PTR [rax]
   140011b18:	or     dh,BYTE PTR [rdx]
   140011b1a:	(bad)  
   140011b1b:	push   rax
   140011b1c:	mov    BYTE PTR [rcx+0x0],ah
   140011b1f:	add    BYTE PTR [rax],ah
   140011b21:	or     eax,0x1d010001
   140011b26:	or     al,0x0
   140011b28:	sbb    eax,0x1d000b74
   140011b2d:	or     al,BYTE PTR fs:[rax]
   140011b30:	sbb    eax,0x1d000954
   140011b35:	xor    al,0x8
   140011b37:	add    BYTE PTR [rip+0x17f01932],bl        # 0x157f1346f
   140011b3d:	loopne 0x140011b54
   140011b3f:	rol    BYTE PTR [rcx],0xf
   140011b42:	(bad)  
   140011b43:	add    BYTE PTR [rdi],cl
   140011b45:	or     DWORD PTR fs:[rax],eax
   140011b48:	sysenter 
   140011b4a:	or     BYTE PTR [rax],al
   140011b4c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140011b4f:	jo     0x140011b52
   140011b51:	(bad)  
   140011b52:	add    al,0x0
   140011b54:	(bad)  
   140011b55:	xor    al,0xe
   140011b57:	add    BYTE PTR [rsi],cl
   140011b59:	mov    dl,0xa
   140011b5b:	jo     0x140011b5e
   140011b5d:	sbb    BYTE PTR [rax],cl
   140011b5f:	add    BYTE PTR [rax],bl
   140011b61:	or     eax,DWORD PTR fs:[rax]
   140011b64:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140011b68:	sbb    BYTE PTR [rcx+rcx*1],dh
   140011b6b:	add    BYTE PTR [rax],bl
   140011b6d:	push   rdx
   140011b6e:	adc    al,0x70
   140011b70:	sbb    DWORD PTR [rip+0x74230009],esi        # 0x1b4241b7f
   140011b76:	sub    al,0x0
   140011b78:	(bad)  
   140011b79:	sub    eax,DWORD PTR fs:[rax]
   140011b7c:	sbb    esi,DWORD PTR [rdx+rbp*1]
   140011b7f:	add    BYTE PTR [rcx+rax*1],cl
   140011b82:	sub    BYTE PTR [rax],al
   140011b84:	add    eax,0x600000e0
   140011b89:	retf   0x0
   140011b8c:	push   rax
   140011b8d:	or     eax,0x1330001
   140011b92:	add    BYTE PTR [rax],al
   140011b94:	(bad)  
   140011b95:	(bad)  
   140011b96:	(bad)  
   140011b97:	call   rbp
   140011b99:	rol    BYTE PTR [rax],1
	...
   140011ba3:	add    BYTE PTR [rcx],al
   140011ba5:	add    BYTE PTR [rax],al
   140011ba7:	add    cl,ah
   140011ba9:	rol    BYTE PTR [rax],1
   140011bab:	add    BYTE PTR [rdx],al
   140011bad:	add    BYTE PTR [rax],al
   140011baf:	add    ch,ch
   140011bb1:	rol    BYTE PTR [rax],1
   140011bb3:	add    BYTE PTR [rdx],al
   140011bb5:	add    BYTE PTR [rax],al
   140011bb7:	add    cl,bh
   140011bb9:	rol    BYTE PTR [rax],1
   140011bbb:	add    BYTE PTR [rdx],al
   140011bbd:	add    BYTE PTR [rax],al
   140011bbf:	add    BYTE PTR [rip+0xd1],al        # 0x140011c96
   140011bc5:	add    BYTE PTR [rax],al
   140011bc7:	add    BYTE PTR [rax],al
   140011bc9:	add    BYTE PTR [rax],al
   140011bcb:	add    BYTE PTR [rcx],al
   140011bcd:	add    BYTE PTR [rax],al
   140011bcf:	add    BYTE PTR [rip+0x6000000],al        # 0x146011bd5
   140011bd5:	add    BYTE PTR [rax],al
   140011bd7:	add    BYTE PTR [rcx],al
   140011bd9:	add    BYTE PTR [rax],al
   140011bdb:	add    al,ah
   140011bdd:	sbb    eax,DWORD PTR [rcx]
   140011bdf:	add    BYTE PTR [rax],al
   140011be1:	add    BYTE PTR [rax],al
   140011be3:	add    BYTE PTR [rax+0x43],bh
   140011be6:	add    DWORD PTR [rax],eax
   140011be8:	add    BYTE PTR fs:[rax],al
   140011beb:	add    BYTE PTR [rcx],dl
   140011bed:	rol    DWORD PTR [rax],1
   140011bef:	add    BYTE PTR [rax+0x0],ch
   140011bf2:	add    BYTE PTR [rax],al
   140011bf4:	fs sub eax,0xffff0000
   140011bfa:	(bad)  
   140011bfb:	(bad)  
   140011bfc:	mov    ebp,0x100002d
   140011c01:	add    BYTE PTR [rax],al
   140011c03:	add    bl,bh
   140011c05:	sub    eax,0x20000
   140011c0a:	add    BYTE PTR [rax],al
   140011c0c:	or     DWORD PTR [rsi],ebp
   140011c0e:	add    BYTE PTR [rax],al
   140011c10:	add    eax,DWORD PTR [rax]
   140011c12:	add    BYTE PTR [rax],al
   140011c14:	sbb    ebp,DWORD PTR [rsi]
   140011c16:	add    BYTE PTR [rax],al
   140011c18:	add    al,BYTE PTR [rax]
   140011c1a:	add    BYTE PTR [rax],al
   140011c1c:	sub    al,0x2e
   140011c1e:	add    BYTE PTR [rax],al
   140011c20:	add    DWORD PTR [rax],eax
   140011c22:	add    BYTE PTR [rax],al
   140011c24:	(bad)  
   140011c25:	add    BYTE PTR cs:[rax],al
   140011c28:	(bad)  
   140011c29:	(bad)  
   140011c2a:	(bad)  
   140011c2b:	call   QWORD PTR [rax+0x2e]
   140011c2e:	add    BYTE PTR [rax],al
   140011c30:	add    al,BYTE PTR [rax]
   140011c32:	add    BYTE PTR [rax],al
   140011c34:	ins    DWORD PTR es:[rdi],dx
   140011c35:	add    BYTE PTR cs:[rax],al
   140011c38:	add    al,0x0
   140011c3a:	add    BYTE PTR [rax],al
   140011c3c:	jnp    0x140011c6c
   140011c3e:	add    BYTE PTR [rax],al
   140011c40:	add    al,BYTE PTR [rax]
   140011c42:	add    BYTE PTR [rax],al
   140011c44:	xchg   esi,eax
   140011c45:	add    BYTE PTR cs:[rax],al
   140011c48:	add    eax,0xa4000000
   140011c4d:	add    BYTE PTR cs:[rax],al
   140011c50:	add    al,BYTE PTR [rax]
   140011c52:	add    BYTE PTR [rax],al
   140011c54:	mov    dl,0x2e
   140011c56:	add    BYTE PTR [rax],al
   140011c58:	add    DWORD PTR [rax],eax
   140011c5a:	add    BYTE PTR [rax],al
   140011c5c:	mov    ebp,0x2e
   140011c61:	add    BYTE PTR [rax],al
   140011c63:	add    ah,dh
   140011c65:	add    BYTE PTR cs:[rax],al
   140011c68:	(bad)  
   140011c69:	(bad)  
   140011c6a:	(bad)  
   140011c6b:	dec    DWORD PTR [rdx]
   140011c6d:	(bad)  
   140011c6e:	add    BYTE PTR [rax],al
   140011c70:	add    BYTE PTR [rax],al
   140011c72:	add    BYTE PTR [rax],al
   140011c74:	push   0xffffffffff00002f
   140011c79:	(bad)  
   140011c7a:	(bad)  
   140011c7b:	call   QWORD PTR [rcx]
   140011c7d:	rol    DWORD PTR [rax],1
   140011c7f:	add    BYTE PTR [rax],al
   140011c81:	add    BYTE PTR [rax],al
   140011c83:	add    BYTE PTR [rsi],bl
   140011c85:	rol    DWORD PTR [rax],1
   140011c87:	add    BYTE PTR [rsi],al
   140011c89:	add    BYTE PTR [rax],al
   140011c8b:	add    BYTE PTR [rsi],ch
   140011c8d:	rol    DWORD PTR [rax],1
   140011c8f:	add    BYTE PTR [rax],al
   140011c91:	add    BYTE PTR [rax],al
   140011c93:	add    BYTE PTR [rcx],bl
   140011c95:	or     al,BYTE PTR [rdx]
   140011c97:	add    BYTE PTR [rdx],cl
   140011c99:	xchg   edx,eax
   140011c9a:	(bad)  
   140011c9b:	push   rax
   140011c9c:	mov    BYTE PTR [rcx+0x0],ah
   140011c9f:	add    BYTE PTR [rax+0xd],dl
   140011ca2:	add    DWORD PTR [rax],eax
   140011ca4:	add    DWORD PTR [rbx],ecx
   140011ca6:	add    al,0x0
   140011ca8:	or     esi,DWORD PTR [rdx+0x4]
   140011cab:	jo     0x140011cb0
   140011cad:	xor    BYTE PTR [rdx],al
   140011caf:	push   rax
   140011cb0:	add    DWORD PTR [rdx],edx
   140011cb2:	(bad)  
   140011cb3:	add    BYTE PTR [rdx],dl
   140011cb5:	repnz or al,dh
   140011cb8:	(bad)  
   140011cb9:	rol    BYTE PTR [rax+rsi*2],0x3
   140011cbd:	xor    BYTE PTR [rdx],al
   140011cbf:	push   rax
   140011cc0:	sbb    DWORD PTR [rcx],esp
   140011cc2:	or     BYTE PTR [rax],al
   140011cc4:	adc    dl,BYTE PTR [rcx+rdx*1+0x0]
   140011cc8:	adc    dh,BYTE PTR [rax+rdx*1]
   140011ccb:	add    BYTE PTR [rdx],dl
   140011ccd:	xchg   edx,eax
   140011cce:	(bad)  
   140011ccf:	loopne 0x140011cdd
   140011cd1:	jo     0x140011cde
   140011cd3:	(bad)  
   140011cd4:	call   0x180011d63
   140011cd9:	add    BYTE PTR [rax],al
   140011cdb:	add    BYTE PTR [rcx],al
   140011cdd:	adc    DWORD PTR [rsi],eax
   140011cdf:	add    BYTE PTR [rcx],dl
   140011ce1:	xor    al,0x9
   140011ce3:	add    BYTE PTR [rcx],dl
   140011ce5:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b61295b
   140011ceb:	push   rax
   140011cec:	add    DWORD PTR [rax+rcx*1],edx
   140011cef:	add    BYTE PTR [rsp+riz*2],dl
   140011cf2:	or     BYTE PTR [rax],al
   140011cf4:	adc    al,0x54
   140011cf6:	(bad)  
   140011cf7:	add    BYTE PTR [rsp+rsi*1],dl
   140011cfa:	(bad)  
   140011cfb:	add    BYTE PTR [rdx+rsi*1],dl
   140011cfe:	adc    BYTE PTR [rax+0x11],dh
   140011d01:	sbb    BYTE PTR [rsi],al
   140011d03:	add    BYTE PTR [rax],bl
   140011d05:	or     al,BYTE PTR fs:[rax]
   140011d08:	adc    al,0x34
   140011d0a:	or     DWORD PTR [rax],eax
   140011d0c:	or     BYTE PTR [rdx+0x4],dl
   140011d0f:	jo     0x140011c99
   140011d11:	(bad)  
   140011d12:	add    BYTE PTR [rax],al
   140011d14:	or     BYTE PTR [rip+0xffffffffffff0001],0xff        # 0x140001d1c
   140011d1b:	call   QWORD PTR [rax]
   140011d1d:	rol    BYTE PTR [rax],1
   140011d1f:	add    BYTE PTR [rax],al
   140011d21:	add    BYTE PTR [rax],al
   140011d23:	add    BYTE PTR [rax],ah
   140011d25:	rol    BYTE PTR [rax],1
   140011d27:	add    BYTE PTR [rcx],al
   140011d29:	add    BYTE PTR [rax],al
   140011d2b:	add    BYTE PTR [rax],dh
   140011d2d:	rol    BYTE PTR [rax],1
   140011d2f:	add    BYTE PTR [rdx],al
   140011d31:	add    BYTE PTR [rax],al
   140011d33:	add    BYTE PTR [rax-0x30],al
   140011d36:	add    BYTE PTR [rax],al
   140011d38:	jl     0x140011d5c
   140011d3a:	add    BYTE PTR [rax],al
   140011d3c:	(bad)  
   140011d3d:	(bad)  
   140011d3e:	(bad)  
   140011d3f:	call   rax
   140011d41:	and    al,BYTE PTR [rax]
   140011d43:	add    BYTE PTR [rax],al
   140011d45:	add    BYTE PTR [rax],al
   140011d47:	add    dh,bl
   140011d49:	and    al,BYTE PTR [rax]
   140011d4b:	add    BYTE PTR [rcx],al
   140011d4d:	add    BYTE PTR [rax],al
   140011d4f:	add    ah,ch
   140011d51:	and    al,BYTE PTR [rax]
   140011d53:	add    BYTE PTR [rdx],al
   140011d55:	add    BYTE PTR [rax],al
   140011d57:	add    BYTE PTR [rip+0x3000023],al        # 0x143011d80
   140011d5d:	add    BYTE PTR [rax],al
   140011d5f:	add    BYTE PTR [rax+0x23],dl
   140011d62:	add    BYTE PTR [rax],al
   140011d64:	(bad)  
   140011d65:	(bad)  
   140011d66:	(bad)  
   140011d67:	inc    DWORD PTR [rcx]
   140011d69:	adc    al,0xa
   140011d6b:	add    BYTE PTR [rsp+rsi*1],dl
   140011d6e:	lldt   WORD PTR [rdx+rsi*1]
   140011d72:	adc    al,dh
   140011d74:	(bad)  
   140011d75:	loopne 0x140011d83
   140011d77:	ror    BYTE PTR [rdx],1
   140011d79:	ror    BYTE PTR [rax],0x70
   140011d7c:	(bad)  
   140011d7d:	(bad)  
   140011d7e:	(bad)  
   140011d7f:	push   rax
   140011d80:	sbb    DWORD PTR [rsi+rax*1],ebx
   140011d83:	add    BYTE PTR [rsp+rsi*1],bl
   140011d86:	(bad)  
   140011d87:	add    BYTE PTR [rsi],cl
   140011d89:	jb     0x140011d95
   140011d8b:	lock or al,ah
   140011d8e:	(bad)  
   140011d8f:	(bad)  
   140011d90:	mov    BYTE PTR [rcx+0x0],ah
   140011d93:	add    BYTE PTR [rax-0xfffef3],dh
   140011d99:	(bad)  
   140011d9a:	(bad)  
   140011d9b:	call   FWORD PTR [rax+rdx*8+0x0]
   140011da2:	add    BYTE PTR [rax],al
   140011da4:	add    BYTE PTR [rax],al
   140011da6:	add    BYTE PTR [rax],al
   140011da8:	add    DWORD PTR [rax],eax
   140011daa:	add    BYTE PTR [rax],al
   140011dac:	test   al,0xd0
	...
   140011db6:	add    BYTE PTR [rax],al
   140011db8:	add    DWORD PTR [rax],eax
   140011dba:	add    BYTE PTR [rax],al
   140011dbc:	add    al,BYTE PTR [rax]
   140011dbe:	add    BYTE PTR [rax],al
   140011dc0:	add    eax,DWORD PTR [rax]
   140011dc2:	add    BYTE PTR [rax],al
   140011dc4:	add    DWORD PTR [rax],eax
   140011dc6:	add    BYTE PTR [rax],al
   140011dc8:	int3   
   140011dc9:	sbb    eax,0x400001
	...
   140011dd6:	add    BYTE PTR [rax],al
   140011dd8:	mov    ah,0xd0
   140011dda:	add    BYTE PTR [rax],al
   140011ddc:	rex.W add BYTE PTR [rax],al
   140011ddf:	add    BYTE PTR [rbp+rbx*1+0x0],dl
   140011de3:	add    bh,bh
   140011de5:	(bad)  
   140011de6:	(bad)  
   140011de7:	jmp    FWORD PTR [rbx+0x100001d]
   140011ded:	add    BYTE PTR [rax],al
   140011def:	add    BYTE PTR [rdx+0x200001d],bh
   140011df5:	add    BYTE PTR [rax],al
   140011df7:	add    cl,dl
   140011df9:	sbb    eax,0x10000
   140011dfe:	add    BYTE PTR [rax],al
   140011e00:	(bad)  
   140011e01:	sbb    eax,0x0
   140011e06:	add    BYTE PTR [rax],al
   140011e08:	(bad)  
   140011e09:	(bad)  
   140011e0a:	add    BYTE PTR [rax],al
   140011e0c:	(bad)  
   140011e0d:	(bad)  
   140011e0e:	(bad)  
   140011e0f:	push   QWORD PTR [rax+rdx*8+0x0]
   140011e16:	add    BYTE PTR [rax],al
   140011e18:	sbb    DWORD PTR [rdx],ecx
   140011e1a:	add    al,BYTE PTR [rax]
   140011e1c:	or     dl,BYTE PTR [rdx+0x6]
   140011e1f:	push   rax
   140011e20:	mov    BYTE PTR [rcx+0x0],ah
   140011e23:	add    BYTE PTR [rax+0x100010d],dh
   140011e29:	or     al,BYTE PTR [rax+rax*1]
   140011e2c:	or     dh,BYTE PTR [rsi+rax*1]
   140011e2f:	add    BYTE PTR [rdx],cl
   140011e31:	xor    al,BYTE PTR [rsi]
   140011e33:	jo     0x140011e36
   140011e35:	(bad)  
   140011e36:	add    al,BYTE PTR [rax]
   140011e38:	(bad)  
   140011e39:	push   rdx
   140011e3a:	add    dh,BYTE PTR [rax]
   140011e3c:	sbb    DWORD PTR [rdx],esi
   140011e3e:	(bad)  
   140011e3f:	add    BYTE PTR [rcx+rax*1],bl
   140011e42:	adc    al,BYTE PTR [rax]
   140011e44:	adc    al,ah
   140011e46:	(bad)  
   140011e47:	jo     0x140011e56
   140011e49:	(bad)  
   140011e4a:	or     al,0x30
   140011e4c:	or     edx,DWORD PTR [rax+0x0]
   140011e4f:	add    BYTE PTR [rax-0x36],ah
   140011e52:	add    BYTE PTR [rax],al
   140011e54:	loopne 0x140011e63
   140011e56:	add    DWORD PTR [rax],eax
   140011e58:	(bad)  
   140011e59:	add    BYTE PTR [rax],al
   140011e5b:	add    bh,bh
   140011e5d:	(bad)  
   140011e5e:	(bad)  
   140011e5f:	call   QWORD PTR [rsi-0x30]
   140011e62:	add    BYTE PTR [rax],al
   140011e64:	add    BYTE PTR [rax],al
   140011e66:	add    BYTE PTR [rax],al
   140011e68:	data16 rol BYTE PTR [rax],1
   140011e6b:	add    BYTE PTR [rcx],al
   140011e6d:	add    BYTE PTR [rax],al
   140011e6f:	add    BYTE PTR [rsi-0x30],dh
   140011e72:	add    BYTE PTR [rax],al
   140011e74:	add    al,BYTE PTR [rax]
   140011e76:	add    BYTE PTR [rax],al
   140011e78:	xchg   al,dl
   140011e7a:	add    BYTE PTR [rax],al
   140011e7c:	int3   
   140011e7d:	(bad)  
   140011e7e:	add    BYTE PTR [rax],al
   140011e80:	(bad)  
   140011e81:	(bad)  
   140011e82:	(bad)  
   140011e83:	(bad)  
   140011e84:	cmp    DWORD PTR [rax],ebx
   140011e86:	add    BYTE PTR [rax],al
   140011e88:	add    BYTE PTR [rax],al
   140011e8a:	add    BYTE PTR [rax],al
   140011e8c:	rex.WRX sbb BYTE PTR [rax],r8b
   140011e8f:	add    BYTE PTR [rcx],al
   140011e91:	add    BYTE PTR [rax],al
   140011e93:	add    BYTE PTR [rbx+0x18],ah
   140011e96:	add    BYTE PTR [rax],al
   140011e98:	add    al,BYTE PTR [rax]
   140011e9a:	add    BYTE PTR [rax],al
   140011e9c:	js     0x140011eb6
   140011e9e:	add    BYTE PTR [rax],al
   140011ea0:	add    eax,DWORD PTR [rax]
   140011ea2:	add    BYTE PTR [rax],al
   140011ea4:	(bad)  
   140011ea5:	sbb    DWORD PTR [rax],eax
   140011ea7:	add    bh,bh
   140011ea9:	(bad)  
   140011eaa:	(bad)  
   140011eab:	inc    DWORD PTR [rcx+rbx*1+0x0]
   140011eaf:	add    BYTE PTR [rbx],al
   140011eb1:	add    BYTE PTR [rax],al
   140011eb3:	add    BYTE PTR [rdi+0x19],cl
   140011eb6:	add    BYTE PTR [rax],al
   140011eb8:	(bad)  
   140011eb9:	(bad)  
   140011eba:	(bad)  
   140011ebb:	inc    DWORD PTR [rcx]
   140011ebd:	sbb    DWORD PTR [rdx],ecx
   140011ebf:	add    BYTE PTR [rcx],bl
   140011ec1:	je     0x140011ecc
   140011ec3:	add    BYTE PTR [rcx],bl
   140011ec5:	or     BYTE PTR fs:[rax],al
   140011ec8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140011ecc:	sbb    DWORD PTR [rsi+rax*1],esi
   140011ecf:	add    BYTE PTR [rcx],bl
   140011ed1:	xor    dl,BYTE PTR [rip+0xe0]        # 0x140011fb7
   140011ed7:	add    BYTE PTR [rax],al
   140011ed9:	add    BYTE PTR [rax],al
   140011edb:	add    BYTE PTR [rsp+rdi*1],al
   140011ede:	add    BYTE PTR [rax],al
   140011ee0:	add    BYTE PTR [rax],al
   140011ee2:	add    BYTE PTR [rax],al
   140011ee4:	clc    
   140011ee5:	(bad)  
   140011ee6:	add    DWORD PTR [rax],eax
	...
   140011ef8:	add    al,BYTE PTR [rax]
   140011efa:	add    BYTE PTR [rax],al
   140011efc:	adc    BYTE PTR [rdi],bl
   140011efe:	add    DWORD PTR [rax],eax
   140011f00:	cmp    BYTE PTR [rdi],bl
   140011f02:	add    DWORD PTR [rax],eax
	...
   140011f14:	and    BYTE PTR [rax],dh
   140011f16:	add    DWORD PTR [rax],eax
   140011f18:	add    BYTE PTR [rax],al
   140011f1a:	add    BYTE PTR [rax],al
   140011f1c:	(bad)  
   140011f1d:	(bad)  
   140011f1e:	(bad)  
   140011f1f:	inc    DWORD PTR [rax]
   140011f21:	add    BYTE PTR [rax],al
   140011f23:	add    BYTE PTR [rax],bl
   140011f25:	add    BYTE PTR [rax],al
   140011f27:	add    ah,bl
   140011f29:	cmp    eax,DWORD PTR [rax]
	...
   140011f3b:	add    BYTE PTR [rax+0x30],cl
   140011f3e:	add    DWORD PTR [rax],eax
   140011f40:	add    BYTE PTR [rax],al
   140011f42:	add    BYTE PTR [rax],al
   140011f44:	(bad)  
   140011f45:	(bad)  
   140011f46:	(bad)  
   140011f47:	inc    DWORD PTR [rax]
   140011f49:	add    BYTE PTR [rax],al
   140011f4b:	add    BYTE PTR [rax],bl
   140011f4d:	add    BYTE PTR [rax],al
   140011f4f:	add    BYTE PTR [rbp*2+0x0],dh
	...
   140011f62:	add    BYTE PTR [rax],al
   140011f64:	mov    BYTE PTR [rsi+0x0],cl
   140011f6a:	add    BYTE PTR [rax],al
   140011f6c:	sbb    BYTE PTR [rdi],0x1
	...
   140011f7f:	add    BYTE PTR [rdx],al
   140011f81:	add    BYTE PTR [rax],al
   140011f83:	add    BYTE PTR [rax+0x3800011f],bl
   140011f89:	(bad)  
   140011f8a:	add    DWORD PTR [rax],eax
	...
   140011f9c:	xor    BYTE PTR [rdx+0x1],al
   140011f9f:	add    BYTE PTR [rax],al
   140011fa1:	add    BYTE PTR [rax],al
   140011fa3:	add    bh,bh
   140011fa5:	(bad)  
   140011fa6:	(bad)  
   140011fa7:	inc    DWORD PTR [rax]
   140011fa9:	add    BYTE PTR [rax],al
   140011fab:	add    BYTE PTR [rax],bl
   140011fad:	add    BYTE PTR [rax],al
   140011faf:	add    BYTE PTR [rax-0x72],ah
	...
   140011fc2:	add    BYTE PTR [rax],al
   140011fc4:	js     0x140012009
   140011fc6:	add    DWORD PTR [rax],eax
   140011fc8:	add    BYTE PTR [rax],al
   140011fca:	add    BYTE PTR [rax],al
   140011fcc:	(bad)  
   140011fcd:	(bad)  
   140011fce:	(bad)  
   140011fcf:	inc    DWORD PTR [rax]
   140011fd1:	add    BYTE PTR [rax],al
   140011fd3:	add    BYTE PTR [rax+rax*1],al
	...
   140011fe6:	add    BYTE PTR [rax],al
   140011fe8:	add    DWORD PTR [rax],eax
   140011fea:	add    BYTE PTR [rax],al
   140011fec:	rcr    BYTE PTR [rdi],0x1
	...
   140012003:	add    al,ch
   140012005:	(bad)  
   140012006:	add    DWORD PTR [rax],eax
	...
   140012020:	ror    BYTE PTR [rdx],1
   140012022:	add    DWORD PTR [rax+0x1],eax
	...
   14001202d:	add    BYTE PTR [rax],al
   14001202f:	add    BYTE PTR [rax+0x120],bl
   140012035:	add    BYTE PTR [rax],al
   140012037:	add    BYTE PTR [rax],al
   140012039:	add    BYTE PTR [rax],al
   14001203b:	add    BYTE PTR [rdx+0x125],ch
   140012041:	loopne 0x140012043
   140012043:	add    BYTE PTR [rax],bh
   140012045:	and    DWORD PTR [rcx],eax
	...
   14001204f:	add    BYTE PTR [rsi-0x5ffffeda],bh
   140012055:	loopne 0x140012057
   140012057:	add    BYTE PTR [rax+0x123],ch
   14001205d:	add    BYTE PTR [rax],al
   14001205f:	add    BYTE PTR [rax],al
   140012061:	add    BYTE PTR [rax],al
   140012063:	add    BYTE PTR [rdx+0x10000127],dl
   140012069:	jrcxz  0x14001206b
   14001206b:	add    BYTE PTR [rax+0x123],al
   140012071:	add    BYTE PTR [rax],al
   140012073:	add    BYTE PTR [rax],al
   140012075:	add    BYTE PTR [rax],al
   140012077:	add    al,ch
   140012079:	(bad)  
   14001207a:	add    DWORD PTR [rax],eax
   14001207c:	call   0x140012163
	...
   140012095:	add    BYTE PTR [rax],al
   140012097:	add    al,bh
   140012099:	and    eax,DWORD PTR [rcx]
   14001209b:	add    BYTE PTR [rax],al
   14001209d:	add    BYTE PTR [rax],al
   14001209f:	add    BYTE PTR [rax],dl
   1400120a1:	and    al,0x1
   1400120a3:	add    BYTE PTR [rax],al
   1400120a5:	add    BYTE PTR [rax],al
   1400120a7:	add    BYTE PTR [rax],ah
   1400120a9:	and    al,0x1
   1400120ab:	add    BYTE PTR [rax],al
   1400120ad:	add    BYTE PTR [rax],al
   1400120af:	add    BYTE PTR [rsi],dh
   1400120b1:	and    al,0x1
   1400120b3:	add    BYTE PTR [rax],al
   1400120b5:	add    BYTE PTR [rax],al
   1400120b7:	add    BYTE PTR [rax+0x24],al
   1400120ba:	add    DWORD PTR [rax],eax
   1400120bc:	add    BYTE PTR [rax],al
   1400120be:	add    BYTE PTR [rax],al
   1400120c0:	push   rax
   1400120c1:	and    al,0x1
   1400120c3:	add    BYTE PTR [rax],al
   1400120c5:	add    BYTE PTR [rax],al
   1400120c7:	add    BYTE PTR [rsi+0x24],bl
   1400120ca:	add    DWORD PTR [rax],eax
   1400120cc:	add    BYTE PTR [rax],al
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	outs   dx,BYTE PTR ds:[rsi]
   1400120d1:	and    al,0x1
   1400120d3:	add    BYTE PTR [rax],al
   1400120d5:	add    BYTE PTR [rax],al
   1400120d7:	add    BYTE PTR [rax+0x24],bh
   1400120da:	add    DWORD PTR [rax],eax
   1400120dc:	add    BYTE PTR [rax],al
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	mov    WORD PTR [rcx+rax*1],fs
   1400120e3:	add    BYTE PTR [rax],al
   1400120e5:	add    BYTE PTR [rax],al
   1400120e7:	add    BYTE PTR [rdx+0x124],ch
   1400120ed:	add    BYTE PTR [rax],al
   1400120ef:	add    al,cl
   1400120f1:	and    al,0x1
   1400120f3:	add    BYTE PTR [rax],al
   1400120f5:	add    BYTE PTR [rax],al
   1400120f7:	add    dh,ah
   1400120f9:	and    al,0x1
   1400120fb:	add    BYTE PTR [rax],al
   1400120fd:	add    BYTE PTR [rax],al
   1400120ff:	add    BYTE PTR ds:0x1,al
   140012106:	add    BYTE PTR [rax],al
   140012108:	and    BYTE PTR [rip+0x1],ah        # 0x14001210f
   14001210e:	add    BYTE PTR [rax],al
   140012110:	cmp    al,0x25
   140012112:	add    DWORD PTR [rax],eax
   140012114:	add    BYTE PTR [rax],al
   140012116:	add    BYTE PTR [rax],al
   140012118:	pop    rax
   140012119:	and    eax,0x1
   14001211e:	add    BYTE PTR [rax],al
   140012120:	js     0x140012147
   140012122:	add    DWORD PTR [rax],eax
   140012124:	add    BYTE PTR [rax],al
   140012126:	add    BYTE PTR [rax],al
   140012128:	mov    ah,BYTE PTR [rip+0x1]        # 0x14001212f
	...
   140012136:	add    BYTE PTR [rax],al
   140012138:	mov    eax,0x125
   14001213d:	add    BYTE PTR [rax],al
   14001213f:	add    al,cl
   140012141:	and    eax,0x1
   140012146:	add    BYTE PTR [rax],al
   140012148:	lock and eax,0x1
   14001214e:	add    BYTE PTR [rax],al
   140012150:	or     BYTE PTR [rsi],ah
   140012152:	add    DWORD PTR [rax],eax
   140012154:	add    BYTE PTR [rax],al
   140012156:	add    BYTE PTR [rax],al
   140012158:	(bad)  
   140012159:	add    DWORD PTR es:[rax],eax
   14001215c:	add    BYTE PTR [rax],al
   14001215e:	add    BYTE PTR [rax],al
   140012160:	sub    al,0x26
   140012162:	add    DWORD PTR [rax],eax
   140012164:	add    BYTE PTR [rax],al
   140012166:	add    BYTE PTR [rax],al
   140012168:	ds add DWORD PTR es:[rax],eax
   14001216c:	add    BYTE PTR [rax],al
   14001216e:	add    BYTE PTR [rax],al
   140012170:	rex.WRX
   140012171:	add    DWORD PTR es:[rax],eax
   140012174:	add    BYTE PTR [rax],al
   140012176:	add    BYTE PTR [rax],al
   140012178:	pop    rdx
   140012179:	add    DWORD PTR es:[rax],eax
   14001217c:	add    BYTE PTR [rax],al
   14001217e:	add    BYTE PTR [rax],al
   140012180:	outs   dx,BYTE PTR ds:[rsi]
   140012181:	add    DWORD PTR es:[rax],eax
   140012184:	add    BYTE PTR [rax],al
   140012186:	add    BYTE PTR [rax],al
   140012188:	and    BYTE PTR [rsi],0x1
   14001218b:	add    BYTE PTR [rax],al
   14001218d:	add    BYTE PTR [rax],al
   14001218f:	add    BYTE PTR [rsi+0x126],dl
   140012195:	add    BYTE PTR [rax],al
   140012197:	add    BYTE PTR [rsi+0x126],bl
   14001219d:	add    BYTE PTR [rax],al
   14001219f:	add    BYTE PTR [rsi+0x126],ch
   1400121a5:	add    BYTE PTR [rax],al
   1400121a7:	add    dl,bh
   1400121a9:	sub    eax,DWORD PTR [rcx]
   1400121ab:	add    BYTE PTR [rax],al
   1400121ad:	add    BYTE PTR [rax],al
   1400121af:	add    ah,ch
   1400121b1:	sub    eax,DWORD PTR [rcx]
   1400121b3:	add    BYTE PTR [rax],al
   1400121b5:	add    BYTE PTR [rax],al
   1400121b7:	add    ah,bl
   1400121b9:	sub    eax,DWORD PTR [rcx]
   1400121bb:	add    BYTE PTR [rax],al
   1400121bd:	add    BYTE PTR [rax],al
   1400121bf:	add    al,cl
   1400121c1:	sub    eax,DWORD PTR [rcx]
   1400121c3:	add    BYTE PTR [rax],al
   1400121c5:	add    BYTE PTR [rax],al
   1400121c7:	add    BYTE PTR [rax+0x12b],bh
   1400121cd:	add    BYTE PTR [rax],al
   1400121cf:	add    BYTE PTR [rsi+0x12b],ah
   1400121d5:	add    BYTE PTR [rax],al
   1400121d7:	add    BYTE PTR [rsi+0x12b],dl
   1400121dd:	add    BYTE PTR [rax],al
   1400121df:	add    BYTE PTR [rdx+0x12b],al
   1400121e5:	add    BYTE PTR [rax],al
   1400121e7:	add    BYTE PTR [rax+0x2b],dh
   1400121ea:	add    DWORD PTR [rax],eax
   1400121ec:	add    BYTE PTR [rax],al
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	(bad)  
   1400121f1:	sub    eax,DWORD PTR [rcx]
   1400121f3:	add    BYTE PTR [rax],al
   1400121f5:	add    BYTE PTR [rax],al
   1400121f7:	add    BYTE PTR [rdx+0x2b],dl
   1400121fa:	add    DWORD PTR [rax],eax
   1400121fc:	add    BYTE PTR [rax],al
   1400121fe:	add    BYTE PTR [rax],al
   140012200:	hlt    
   140012201:	(bad)  
   140012202:	add    DWORD PTR [rax],eax
   140012204:	add    BYTE PTR [rax],al
   140012206:	add    BYTE PTR [rax],al
   140012208:	add    al,0x28
   14001220a:	add    DWORD PTR [rax],eax
   14001220c:	add    BYTE PTR [rax],al
   14001220e:	add    BYTE PTR [rax],al
   140012210:	adc    BYTE PTR [rax],ch
   140012212:	add    DWORD PTR [rax],eax
   140012214:	add    BYTE PTR [rax],al
   140012216:	add    BYTE PTR [rax],al
   140012218:	sbb    al,0x28
   14001221a:	add    DWORD PTR [rax],eax
   14001221c:	add    BYTE PTR [rax],al
   14001221e:	add    BYTE PTR [rax],al
   140012220:	sub    al,0x28
   140012222:	add    DWORD PTR [rax],eax
   140012224:	add    BYTE PTR [rax],al
   140012226:	add    BYTE PTR [rax],al
   140012228:	cmp    ch,BYTE PTR [rax]
   14001222a:	add    DWORD PTR [rax],eax
   14001222c:	add    BYTE PTR [rax],al
   14001222e:	add    BYTE PTR [rax],al
   140012230:	push   rax
   140012231:	sub    BYTE PTR [rcx],al
   140012233:	add    BYTE PTR [rax],al
   140012235:	add    BYTE PTR [rax],al
   140012237:	add    BYTE PTR [rdx+0x28],ah
   14001223a:	add    DWORD PTR [rax],eax
   14001223c:	add    BYTE PTR [rax],al
   14001223e:	add    BYTE PTR [rax],al
   140012240:	js     0x14001226a
   140012242:	add    DWORD PTR [rax],eax
   140012244:	add    BYTE PTR [rax],al
   140012246:	add    BYTE PTR [rax],al
   140012248:	mov    BYTE PTR [rax],ch
   14001224a:	add    DWORD PTR [rax],eax
   14001224c:	add    BYTE PTR [rax],al
   14001224e:	add    BYTE PTR [rax],al
   140012250:	xchg   esp,eax
   140012251:	sub    BYTE PTR [rcx],al
   140012253:	add    BYTE PTR [rax],al
   140012255:	add    BYTE PTR [rax],al
   140012257:	add    BYTE PTR [rdx+0x128],ch
   14001225d:	add    BYTE PTR [rax],al
   14001225f:	add    BYTE PTR [rax+rbp*1+0x1],bh
   140012266:	add    BYTE PTR [rax],al
   140012268:	retf   0x128
   14001226b:	add    BYTE PTR [rax],al
   14001226d:	add    BYTE PTR [rax],al
   14001226f:	add    al,ah
   140012271:	sub    BYTE PTR [rcx],al
   140012273:	add    BYTE PTR [rax],al
   140012275:	add    BYTE PTR [rax],al
   140012277:	add    dl,dh
   140012279:	sub    BYTE PTR [rcx],al
   14001227b:	add    BYTE PTR [rax],al
   14001227d:	add    BYTE PTR [rax],al
   14001227f:	add    BYTE PTR [rcx+rbp*1],cl
   140012282:	add    DWORD PTR [rax],eax
   140012284:	add    BYTE PTR [rax],al
   140012286:	add    BYTE PTR [rax],al
   140012288:	sub    DWORD PTR es:[rcx],eax
   14001228b:	add    BYTE PTR [rax],al
   14001228d:	add    BYTE PTR [rax],al
   14001228f:	add    BYTE PTR [rax],bh
   140012291:	sub    DWORD PTR [rcx],eax
   140012293:	add    BYTE PTR [rax],al
   140012295:	add    BYTE PTR [rax],al
   140012297:	add    BYTE PTR [rdx+0x29],dl
   14001229a:	add    DWORD PTR [rax],eax
   14001229c:	add    BYTE PTR [rax],al
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	ins    BYTE PTR es:[rdi],dx
   1400122a1:	sub    DWORD PTR [rcx],eax
   1400122a3:	add    BYTE PTR [rax],al
   1400122a5:	add    BYTE PTR [rax],al
   1400122a7:	add    BYTE PTR [rax+0x129],al
   1400122ad:	add    BYTE PTR [rax],al
   1400122af:	add    BYTE PTR [rdx+0x129],bl
   1400122b5:	add    BYTE PTR [rax],al
   1400122b7:	add    BYTE PTR [rsi+0x129],ch
   1400122bd:	add    BYTE PTR [rax],al
   1400122bf:	add    dl,cl
   1400122c1:	sub    DWORD PTR [rcx],eax
   1400122c3:	add    BYTE PTR [rax],al
   1400122c5:	add    BYTE PTR [rax],al
   1400122c7:	add    al,ch
   1400122c9:	sub    DWORD PTR [rcx],eax
   1400122cb:	add    BYTE PTR [rax],al
   1400122cd:	add    BYTE PTR [rax],al
   1400122cf:	add    ah,dh
   1400122d1:	sub    DWORD PTR [rcx],eax
   1400122d3:	add    BYTE PTR [rax],al
   1400122d5:	add    BYTE PTR [rax],al
   1400122d7:	add    BYTE PTR [rdx],al
   1400122d9:	sub    al,BYTE PTR [rcx]
   1400122db:	add    BYTE PTR [rax],al
   1400122dd:	add    BYTE PTR [rax],al
   1400122df:	add    BYTE PTR [rax],dl
   1400122e1:	sub    al,BYTE PTR [rcx]
   1400122e3:	add    BYTE PTR [rax],al
   1400122e5:	add    BYTE PTR [rax],al
   1400122e7:	add    BYTE PTR [rdx],bl
   1400122e9:	sub    al,BYTE PTR [rcx]
   1400122eb:	add    BYTE PTR [rax],al
   1400122ed:	add    BYTE PTR [rax],al
   1400122ef:	add    BYTE PTR [rsi],ch
   1400122f1:	sub    al,BYTE PTR [rcx]
   1400122f3:	add    BYTE PTR [rax],al
   1400122f5:	add    BYTE PTR [rax],al
   1400122f7:	add    BYTE PTR [rdx+0x2a],al
   1400122fa:	add    DWORD PTR [rax],eax
   1400122fc:	add    BYTE PTR [rax],al
   1400122fe:	add    BYTE PTR [rax],al
   140012300:	push   rax
   140012301:	sub    al,BYTE PTR [rcx]
   140012303:	add    BYTE PTR [rax],al
   140012305:	add    BYTE PTR [rax],al
   140012307:	add    BYTE PTR [rdx+rbp*1+0x1],ah
   14001230b:	add    BYTE PTR [rax],al
   14001230d:	add    BYTE PTR [rax],al
   14001230f:	add    BYTE PTR [rax+0x12a],al
   140012315:	add    BYTE PTR [rax],al
   140012317:	add    BYTE PTR [rdx+rbp*1+0x1],dl
   14001231e:	add    BYTE PTR [rax],al
   140012320:	movabs al,ds:0xb80000000000012a
   140012329:	sub    al,BYTE PTR [rcx]
   14001232b:	add    BYTE PTR [rax],al
   14001232d:	add    BYTE PTR [rax],al
   14001232f:	add    al,dl
   140012331:	sub    al,BYTE PTR [rcx]
   140012333:	add    BYTE PTR [rax],al
   140012335:	add    BYTE PTR [rax],al
   140012337:	add    dl,ah
   140012339:	sub    al,BYTE PTR [rcx]
   14001233b:	add    BYTE PTR [rax],al
   14001233d:	add    BYTE PTR [rax],al
   14001233f:	add    ah,ch
   140012341:	sub    al,BYTE PTR [rcx]
   140012343:	add    BYTE PTR [rax],al
   140012345:	add    BYTE PTR [rax],al
   140012347:	add    al,bh
   140012349:	sub    al,BYTE PTR [rcx]
   14001234b:	add    BYTE PTR [rax],al
   14001234d:	add    BYTE PTR [rax],al
   14001234f:	add    BYTE PTR [rbx+rbp*1],al
   140012352:	add    DWORD PTR [rax],eax
   140012354:	add    BYTE PTR [rax],al
   140012356:	add    BYTE PTR [rax],al
   140012358:	(bad)  
   140012359:	sub    eax,DWORD PTR [rcx]
   14001235b:	add    BYTE PTR [rax],al
   14001235d:	add    BYTE PTR [rax],al
   14001235f:	add    BYTE PTR [rbx+rbp*1],ch
   140012362:	add    DWORD PTR [rax],eax
   140012364:	add    BYTE PTR [rax],al
   140012366:	add    BYTE PTR [rax],al
   140012368:	cmp    al,0x2b
   14001236a:	add    DWORD PTR [rax],eax
   14001236c:	add    BYTE PTR [rax],al
   14001236e:	add    BYTE PTR [rax],al
   140012370:	sbb    BYTE PTR [rcx+rax*1],ch
	...
   14001237f:	add    BYTE PTR [rdi+riz*1+0x1],bl
   140012386:	add    BYTE PTR [rax],al
   140012388:	mov    dl,0x27
   14001238a:	add    DWORD PTR [rax],eax
   14001238c:	add    BYTE PTR [rax],al
   14001238e:	add    BYTE PTR [rax],al
   140012390:	shl    BYTE PTR [rdi],0x1
   140012393:	add    BYTE PTR [rax],al
   140012395:	add    BYTE PTR [rax],al
   140012397:	add    ah,dl
   140012399:	(bad)  
   14001239a:	add    DWORD PTR [rax],eax
	...
   1400123a8:	push   rax
   1400123a9:	(bad)  
   1400123aa:	add    DWORD PTR [rax],eax
   1400123ac:	add    BYTE PTR [rax],al
   1400123ae:	add    BYTE PTR [rax],al
   1400123b0:	push   0x127
   1400123b5:	add    BYTE PTR [rax],al
   1400123b7:	add    BYTE PTR [rsi],ah
   1400123b9:	(bad)  
   1400123ba:	add    DWORD PTR [rax],eax
   1400123bc:	add    BYTE PTR [rax],al
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	or     al,0x27
   1400123c2:	add    DWORD PTR [rax],eax
   1400123c4:	add    BYTE PTR [rax],al
   1400123c6:	add    BYTE PTR [rax],al
   1400123c8:	hlt    
   1400123c9:	add    DWORD PTR es:[rax],eax
   1400123cc:	add    BYTE PTR [rax],al
   1400123ce:	add    BYTE PTR [rax],al
   1400123d0:	fsub   QWORD PTR [rsi]
   1400123d2:	add    DWORD PTR [rax],eax
   1400123d4:	add    BYTE PTR [rax],al
   1400123d6:	add    BYTE PTR [rax],al
   1400123d8:	int3   
   1400123d9:	add    DWORD PTR es:[rax],eax
   1400123dc:	add    BYTE PTR [rax],al
   1400123de:	add    BYTE PTR [rax],al
   1400123e0:	jle    0x140012409
   1400123e2:	add    DWORD PTR [rax],eax
   1400123e4:	add    BYTE PTR [rax],al
   1400123e6:	add    BYTE PTR [rax],al
   1400123e8:	ds (bad) 
   1400123ea:	add    DWORD PTR [rax],eax
	...
   1400123f8:	push   0x1
   1400123fa:	rex.RXB
   1400123fb:	gs je  0x140012451
   1400123fe:	imul   esp,DWORD PTR [rsp+rcx*2+0x65],0x6874676e
   140012406:	push   rdx
   140012407:	gs jno 0x14001247f
   14001240a:	imul   esi,DWORD PTR [rdx+0x65],0x8e000064
   140012411:	add    DWORD PTR [rcx+0x6e],ecx
   140012414:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001241c:	push   rbx
   14001241d:	imul   esp,DWORD PTR [rax+rax*1+0x6b],0x74654701
   140012425:	push   rbx
   140012426:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   14001242e:	push   0x7469726f
   140012433:	jns    0x140012435
   140012435:	add    BYTE PTR [rbp+0x706f4300],al
   14001243b:	jns    0x140012490
   14001243d:	imul   esp,DWORD PTR [rax+rax*1+0x4a],0x74654701
   140012445:	rex.WR
   140012446:	outs   dx,BYTE PTR gs:[rsi]
   140012448:	addr32 je 0x1400124b3
   14001244b:	push   rbx
   14001244c:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7349019c
   140012454:	push   rsi
   140012455:	(bad)  
   140012456:	ins    BYTE PTR es:[rdi],dx
   140012457:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x8c000064
   14001245f:	add    DWORD PTR [rcx+0x6e],ecx
   140012462:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001246a:	movsxd ebp,DWORD PTR [r8+rax*1+0x16]
   14001246f:	add    BYTE PTR [rcx+0x64],al
   140012472:	movsxd esp,DWORD PTR fs:[r13+0x0]
   140012477:	add    BYTE PTR [rdi],dh
   140012479:	add    DWORD PTR [rdi+0x65],eax
   14001247c:	je     0x1400124bf
   14001247e:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
   140012482:	outs   dx,WORD PTR ds:[rsi]
   140012484:	jb     0x1400124f3
   140012486:	(bad)  
   140012487:	je     0x1400124f2
   140012489:	outs   dx,DWORD PTR ds:[rsi]
   14001248a:	outs   dx,BYTE PTR ds:[rsi]
   14001248b:	add    BYTE PTR [rdi+0x1],bl
   14001248e:	rex.RXB
   14001248f:	gs je  0x1400124e5
   140012492:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140012496:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14001249e:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   1400124a5:	outs   dx,BYTE PTR ds:[rsi]
   1400124a6:	gs jb  0x1400124a9
   1400124a9:	add    ch,ah
   1400124ab:	add    dl,BYTE PTR [rbx+0x65]
   1400124ae:	je     0x140012503
   1400124b0:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400124b4:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400124bc:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   1400124c3:	outs   dx,BYTE PTR ds:[rsi]
   1400124c4:	gs jb  0x1400124c7
   1400124c7:	add    BYTE PTR [rbp+0x1],bl
   1400124ca:	rex.RXB
   1400124cb:	gs je  0x140012521
   1400124ce:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400124d2:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400124da:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   1400124e1:	outs   dx,DWORD PTR ds:[rsi]
   1400124e2:	jne    0x140012554
   1400124e4:	add    BYTE PTR [rax],al
   1400124e6:	in     al,0x2
   1400124e8:	push   rbx
   1400124e9:	gs je  0x14001253f
   1400124ec:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400124f0:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400124f8:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   1400124ff:	outs   dx,DWORD PTR ds:[rsi]
   140012500:	jne    0x140012572
   140012502:	add    BYTE PTR [rax],al
   140012504:	pop    rsp
   140012505:	add    DWORD PTR [rdi+0x65],eax
   140012508:	je     0x14001255d
   14001250a:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001250e:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140012516:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14001251d:	movsxd ebp,DWORD PTR [rax+rax*1-0x1d]
   140012521:	add    dl,BYTE PTR [rbx+0x65]
   140012524:	je     0x140012579
   140012526:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001252a:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140012532:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140012539:	movsxd ebp,DWORD PTR [rax+rax*1+0x61]
   14001253d:	add    DWORD PTR [rdi+0x65],eax
   140012540:	je     0x140012595
   140012542:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140012546:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14001254e:	imul   esi,DWORD PTR [rax+0x74],0x6153726f
   140012555:	movsxd ebp,DWORD PTR [rax+rax*1+0x5b]
   140012559:	add    DWORD PTR [rdi+0x65],eax
   14001255c:	je     0x1400125b1
   14001255e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140012562:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14001256a:	imul   esi,DWORD PTR [rax+0x74],0x6f43726f
   140012571:	outs   dx,BYTE PTR ds:[rsi]
   140012572:	je     0x1400125e6
   140012574:	outs   dx,DWORD PTR ds:[rsi]
   140012575:	ins    BYTE PTR es:[rdi],dx
   140012576:	add    BYTE PTR [rax],al
   140012578:	sti    
   140012579:	add    DWORD PTR [rbp+0x61],ecx
   14001257c:	imul   esp,DWORD PTR [rbp+0x41],0x62
   140012580:	jae    0x1400125f1
   140012582:	ins    BYTE PTR es:[rdi],dx
   140012583:	jne    0x1400125f9
   140012585:	gs push rbx
   140012587:	add    BYTE PTR [rax],r8b
   14001258a:	lea    eax,[rcx]
   14001258c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001258e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140012596:	push   rbx
   140012597:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001259b:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400125a3:	imul   esi,DWORD PTR [rax+0x74],0x726f
   1400125aa:	rex.B
   1400125ab:	rex.R push rsi
   1400125ad:	push   r8
   1400125af:	xor    rsi,QWORD PTR [r10]
   1400125b2:	cs fs ins BYTE PTR es:[rdi],dx
   1400125b5:	ins    BYTE PTR es:[rdi],dx
   1400125b6:	add    BYTE PTR [rax],al
   1400125b8:	jo     0x1400125bc
   1400125ba:	rex.RXB
   1400125bb:	gs je  0x14001260a
   1400125be:	(bad)  
   1400125bf:	jae    0x140012635
   1400125c1:	rex.RB jb 0x140012636
   1400125c4:	outs   dx,DWORD PTR ds:[rsi]
   1400125c5:	jb     0x1400125c7
   1400125c7:	add    BYTE PTR [rdi+0x3],ch
   1400125ca:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400125cc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400125d4:	rex.XB jb 0x140012640
   1400125d7:	je     0x140012642
   1400125d9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400125dc:	push   rbx
   1400125dd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400125e2:	outs   dx,BYTE PTR ds:[rsi]
   1400125e3:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400125e5:	fs push rbx
   1400125e7:	jo     0x140012652
   1400125e9:	outs   dx,BYTE PTR ds:[rsi]
   1400125ea:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400125ec:	jne    0x14001265c
   1400125ee:	je     0x1400125f0
   1400125f0:	(bad)  
   1400125f1:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   1400125f5:	gs je  0x14001265d
   1400125f8:	rex.XB jb 0x140012664
   1400125fb:	je     0x140012666
   1400125fd:	movsxd esp,DWORD PTR [rcx+0x6c]
   140012600:	push   rbx
   140012601:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140012606:	outs   dx,BYTE PTR ds:[rsi]
   140012607:	add    BYTE PTR [rsi+0x6f6c4300],cl
   14001260d:	jae    0x140012674
   14001260f:	rex.W (bad) 
   140012611:	outs   dx,BYTE PTR ds:[rsi]
   140012612:	fs ins BYTE PTR es:[rdi],dx
   140012614:	add    BYTE PTR gs:[rsi],ch
   140012617:	add    al,BYTE PTR [rdi+0x65]
   14001261a:	je     0x14001265f
   14001261c:	jne    0x140012690
   14001261e:	jb     0x140012685
   140012620:	outs   dx,BYTE PTR ds:[rsi]
   140012621:	je     0x140012677
   140012623:	push   0x64616572
   140012628:	rex.WB
   140012629:	add    BYTE PTR fs:[rax],al
   14001262c:	rex.WR add al,0x52
   14001262f:	(bad)  
   140012630:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140012637:	jo     0x1400126ad
   140012639:	imul   ebp,DWORD PTR [rdi+0x6e],0x1180000
   140012640:	rex.R
   140012641:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   140012645:	gs push rax
   140012647:	outs   dx,DWORD PTR ds:[rsi]
   140012648:	imul   ebp,DWORD PTR [rsi+0x74],0xb007265
   14001264f:	add    eax,0x45746553
   140012654:	jbe    0x1400126bb
   140012656:	outs   dx,BYTE PTR ds:[rsi]
   140012657:	je     0x140012659
   140012659:	add    BYTE PTR [rdi+0x74654702],al
   14001265f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140012661:	fs jne 0x1400126d0
   140012664:	gs rex.W (bad) 
   140012667:	outs   dx,BYTE PTR ds:[rsi]
   140012668:	fs ins BYTE PTR es:[rdi],dx
   14001266a:	gs push rdi
   14001266c:	add    BYTE PTR [rax],al
   14001266e:	jmp    0x1b4666d74
   140012673:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140012675:	ins    DWORD PTR es:[rdi],dx
   140012676:	ins    DWORD PTR es:[rdi],dx
   140012677:	(bad)  
   140012678:	outs   dx,BYTE PTR ds:[rsi]
   140012679:	imul   r13,QWORD PTR fs:[rsi+0x65],0x5cb0057
   140012682:	push   rdi
   140012683:	(bad)  
   140012684:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14001268c:	ins    BYTE PTR es:[edi],dx
   14001268e:	gs rex.WRXB (bad) 
   140012691:	push   0x65
   140012693:	movsxd esi,DWORD PTR [rax+rax*1+0x6e]
   140012697:	add    eax,0x65656c53
   14001269c:	jo     0x14001269e
   14001269e:	retf   0x4300
   1400126a1:	jb     0x140012708
   1400126a3:	(bad)  
   1400126a4:	je     0x14001270b
   1400126a6:	rex.RB jbe 0x14001270e
   1400126a9:	outs   dx,BYTE PTR ds:[rsi]
   1400126aa:	je     0x140012703
   1400126ac:	add    BYTE PTR [rax],al
   1400126ae:	add    BYTE PTR [rcx],al
   1400126b0:	rex.XB jb 0x140012718
   1400126b3:	(bad)  
   1400126b4:	je     0x14001271b
   1400126b6:	push   rsp
   1400126b7:	push   0x64616572
   1400126bc:	add    BYTE PTR [rax],al
   1400126be:	rex.WXB
   1400126bf:	rex.RB push r10
   1400126c1:	rex.WRX
   1400126c2:	rex.RB
   1400126c3:	xor    r14,QWORD PTR [rdx]
   1400126c6:	cs fs ins BYTE PTR es:[rdi],dx
   1400126c9:	ins    BYTE PTR es:[rdi],dx
   1400126ca:	add    BYTE PTR [rax],al
   1400126cc:	push   rdx
   1400126cd:	add    BYTE PTR [rbx+0x6f],al
   1400126d0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400126d2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400126da:	add    BYTE PTR [rax],al
   1400126dc:	push   rsp
   1400126dd:	add    BYTE PTR [rbx+0x6f],al
   1400126e0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400126e2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400126ea:	push   rbx
   1400126eb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400126ef:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43001400
   1400126f7:	outs   dx,DWORD PTR ds:[rsi]
   1400126f8:	rex.B
   1400126f9:	fs fs push rdx
   1400126fc:	gs push bx
   1400126ff:	gs jb  0x140012778
   140012702:	gs jb  0x140012755
   140012705:	jb     0x140012776
   140012707:	movsxd esp,DWORD PTR [rbp+0x73]
   14001270a:	jae    0x14001270c
   14001270c:	outs   dx,DWORD PTR ds:[rsi]
   14001270d:	add    BYTE PTR [rbx+0x6f],al
   140012710:	push   rdx
   140012711:	gs ins BYTE PTR es:[rdi],dx
   140012713:	gs (bad) 
   140012715:	jae    0x14001277c
   140012717:	push   rbx
   140012718:	gs jb  0x140012791
   14001271b:	gs jb  0x14001276e
   14001271e:	jb     0x14001278f
   140012720:	movsxd esp,DWORD PTR [rbp+0x73]
   140012723:	jae    0x140012725
   140012725:	add    BYTE PTR [rdi+0x0],ah
   140012728:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001272a:	push   rdx
   14001272b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140012734:	(bad)  
   140012735:	jae    0x1400127aa
   140012737:	rex.WRXB (bad) 
   140012739:	push   0x65
   14001273b:	movsxd esi,DWORD PTR [rax+rax*1-0x7f]
   14001273f:	add    BYTE PTR [rbx+0x6f],al
   140012742:	push   rbp
   140012743:	outs   dx,BYTE PTR ds:[rsi]
   140012744:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14001274b:	imul   edi,DWORD PTR [rdx+0x65],0x700000
   140012752:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140012754:	push   rdx
   140012755:	gs jae 0x1400127cd
   140012758:	ins    DWORD PTR es:[rdi],dx
   140012759:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14001275c:	(bad)  
   14001275d:	jae    0x1400127d2
   14001275f:	rex.WRXB (bad) 
   140012761:	push   0x65
   140012763:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140012767:	add    BYTE PTR [rbx+0x0],dh
   14001276a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001276c:	push   rdx
   14001276d:	gs jbe 0x1400127df
   140012770:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   140012774:	(bad)  
   140012775:	jae    0x1400127ea
   140012777:	rex.WRXB (bad) 
   140012779:	push   0x65
   14001277b:	movsxd esi,DWORD PTR [rax+rax*1+0x1d]
   14001277f:	add    BYTE PTR [rbx+0x6f],al
   140012782:	rex.XB jb 0x1400127ea
   140012785:	(bad)  
   140012786:	je     0x1400127ed
   140012788:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001278a:	jae    0x140012800
   14001278c:	(bad)  
   14001278d:	outs   dx,BYTE PTR ds:[rsi]
   14001278e:	movsxd esp,DWORD PTR [rbp+0x0]
   140012791:	add    BYTE PTR [rdi+0x6c],ch
   140012794:	xor    esi,DWORD PTR gs:[rdx]
   140012797:	cs fs ins BYTE PTR es:[rdi],dx
   14001279a:	ins    BYTE PTR es:[rdi],dx
   14001279b:	add    BYTE PTR [rbx+0x2],dh
   14001279e:	push   rax
   14001279f:	outs   dx,DWORD PTR ds:[rsi]
   1400127a0:	jae    0x140012816
   1400127a2:	push   rsp
   1400127a3:	push   0x64616572
   1400127a8:	rex.WRB
   1400127a9:	gs jae 0x14001281f
   1400127ac:	(bad)  
   1400127ad:	addr32 gs push rdi
   1400127b0:	add    BYTE PTR [rax],al
   1400127b2:	je     0x1400127b5
   1400127b4:	rex.RXB
   1400127b5:	gs je  0x140012805
   1400127b8:	gs jae 0x14001282e
   1400127bb:	(bad)  
   1400127bc:	addr32 gs push rdi
   1400127bf:	add    BYTE PTR [rdx+0x3],al
   1400127c2:	push   rsp
   1400127c3:	jb     0x140012826
   1400127c5:	outs   dx,BYTE PTR ds:[rsi]
   1400127c6:	jae    0x140012834
   1400127c8:	(bad)  
   1400127c9:	je     0x140012830
   1400127cb:	rex.WRB
   1400127cc:	gs jae 0x140012842
   1400127cf:	(bad)  
   1400127d0:	add    BYTE PTR gs:[eax],al
   1400127d4:	mov    dh,0x0
   1400127d6:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   1400127de:	rex.WRB
   1400127df:	gs jae 0x140012855
   1400127e2:	(bad)  
   1400127e3:	addr32 gs push rdi
   1400127e6:	add    BYTE PTR [rax],al
   1400127e8:	push   rbp
   1400127e9:	push   rbx
   1400127ea:	rex.RB push r10
   1400127ec:	xor    esi,DWORD PTR [rdx]
   1400127ee:	cs fs ins BYTE PTR es:[rdi],dx
   1400127f1:	ins    BYTE PTR es:[rdi],dx
   1400127f2:	add    BYTE PTR [rax],al
   1400127f4:	rex add DWORD PTR [rbp+0x6e],eax
   1400127f8:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400127fb:	gs push rax
   1400127fd:	outs   dx,DWORD PTR ds:[rsi]
   1400127fe:	imul   ebp,DWORD PTR [rsi+0x74],0x56007265
   140012805:	add    ecx,DWORD PTR [rax+0x65]
   140012808:	(bad)  
   140012809:	jo     0x14001284c
   14001280b:	ins    BYTE PTR es:[rdi],dx
   14001280c:	ins    BYTE PTR es:[rdi],dx
   14001280d:	outs   dx,DWORD PTR ds:[rsi]
   14001280e:	movsxd eax,DWORD PTR [rax]
   140012810:	pop    rdx
   140012811:	add    ecx,DWORD PTR [rax+0x65]
   140012814:	(bad)  
   140012815:	jo     0x14001285d
   140012817:	jb     0x14001287e
   140012819:	add    BYTE PTR gs:[rax],al
   14001281c:	and    eax,0x74655305
   140012821:	rex.WR (bad) 
   140012823:	jae    0x140012899
   140012825:	rex.RB jb 0x14001289a
   140012828:	outs   dx,DWORD PTR ds:[rsi]
   140012829:	jb     0x14001282b
   14001282b:	add    BYTE PTR [rbx+0x1],dh
   14001282e:	rex.RB js 0x14001289a
   140012831:	je     0x140012883
   140012833:	jb     0x1400128a4
   140012835:	movsxd esp,DWORD PTR [rbp+0x73]
   140012838:	jae    0x14001283a
   14001283a:	xchg   BYTE PTR [rdx],al
   14001283c:	rex.RXB
   14001283d:	gs je  0x14001288d
   140012840:	outs   dx,DWORD PTR ds:[rsi]
   140012841:	fs jne 0x1400128b0
   140012844:	gs rex.W (bad) 
   140012847:	outs   dx,BYTE PTR ds:[rsi]
   140012848:	fs ins BYTE PTR es:[rdi],dx
   14001284a:	gs rex.RB js 0x1400128a5
   14001284e:	add    BYTE PTR [rax],al
   140012850:	mov    esp,0x74654702
   140012855:	push   rax
   140012856:	jb     0x1400128c7
   140012858:	movsxd eax,DWORD PTR [rcx+0x64]
   14001285b:	fs jb  0x1400128c3
   14001285e:	jae    0x1400128d3
   140012860:	add    BYTE PTR [rax],al
   140012862:	out    dx,eax
   140012863:	add    ecx,DWORD PTR [rbp+0x75]
   140012866:	ins    BYTE PTR es:[rdi],dx
   140012867:	je     0x1400128d2
   140012869:	rex.X jns 0x1400128e0
   14001286c:	gs push rsp
   14001286e:	outs   dx,DWORD PTR ds:[rsi]
   14001286f:	push   rdi
   140012870:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140012878:	in     al,0x2
   14001287a:	rex.RXB
   14001287b:	gs je  0x1400128d1
   14001287e:	je     0x1400128e4
   140012880:	rex.W (bad) 
   140012882:	outs   dx,BYTE PTR ds:[rsi]
   140012883:	fs ins BYTE PTR es:[rdi],dx
   140012885:	add    BYTE PTR gs:[rax],al
   140012888:	add    DWORD PTR [rsi],eax
   14001288a:	push   rdi
   14001288b:	jb     0x1400128f6
   14001288d:	je     0x1400128f4
   14001288f:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65470283
   140012898:	je     0x1400128e7
   14001289a:	outs   dx,DWORD PTR ds:[rsi]
   14001289b:	fs jne 0x14001290a
   14001289e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400128a8:	add    BYTE PTR [rax],al
   1400128aa:	rol    DWORD PTR [rdx],0x47
   1400128ad:	gs je  0x140012900
   1400128b0:	jb     0x140012921
   1400128b2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400128b5:	jae    0x1400128ff
   1400128b7:	gs (bad) 
   1400128b9:	jo     0x1400128bb
   1400128bb:	add    BYTE PTR [rsi+0x2],bl
   1400128be:	rex.RXB
   1400128bf:	gs je  0x140012908
   1400128c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400128ca:	push   0x3
   1400128cc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400128ce:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x78456563
   1400128d6:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   1400128da:	rex.WRXB outs dx,BYTE PTR gs:[rsi]
   1400128dd:	movsxd esp,DWORD PTR [rbp+0x0]
   1400128e0:	fiadd  WORD PTR [rdx]
   1400128e2:	rex.RXB
   1400128e3:	gs je  0x140012939
   1400128e6:	je     0x140012949
   1400128e8:	jb     0x14001295e
   1400128ea:	jne    0x14001295c
   1400128ec:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400128ee:	outs   dx,WORD PTR ds:[rsi]
   1400128f0:	push   rdi
   1400128f1:	add    BYTE PTR [rdi],bh
   1400128f3:	add    al,0x51
   1400128f5:	jne    0x14001295c
   1400128f7:	jb     0x140012972
   1400128f9:	push   rax
   1400128fa:	gs jb  0x140012963
   1400128fd:	outs   dx,DWORD PTR ds:[rsi]
   1400128fe:	jb     0x14001296d
   140012900:	(bad)  
   140012901:	outs   dx,BYTE PTR ds:[rsi]
   140012902:	movsxd esp,DWORD PTR [rbp+0x43]
   140012905:	outs   dx,DWORD PTR ds:[rsi]
   140012906:	jne    0x140012976
   140012908:	je     0x14001296f
   14001290a:	jb     0x14001290c
   14001290c:	sti    
   14001290d:	add    al,BYTE PTR [rdi+0x65]
   140012910:	je     0x140012965
   140012912:	jns    0x140012987
   140012914:	je     0x14001297b
   140012916:	ins    DWORD PTR es:[rdi],dx
   140012917:	push   rsp
   140012918:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14001291f:	ins    BYTE PTR es:[rdi],dx
   140012920:	gs push rsp
   140012922:	imul   ebp,DWORD PTR [rbp+0x65],0x47031800
   140012929:	gs je  0x140012980
   14001292c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140012933:	je     0x14001296b
   140012935:	xor    al,0x0
   140012937:	add    BYTE PTR [rdi+0x2],al
   14001293a:	rex.RXB
   14001293b:	gs je  0x140012983
   14001293e:	outs   dx,BYTE PTR ds:[rsi]
   14001293f:	jbe    0x1400129aa
   140012941:	jb     0x1400129b2
   140012943:	outs   dx,BYTE PTR ds:[rsi]
   140012944:	ins    DWORD PTR es:[rdi],dx
   140012945:	outs   dx,BYTE PTR gs:[rsi]
   140012947:	je     0x14001299c
   140012949:	je     0x1400129bd
   14001294b:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140012952:	mov    ebp,0x65724601
   140012957:	rex.RB outs dx,BYTE PTR gs:[rsi]
   14001295a:	jbe    0x1400129c5
   14001295c:	jb     0x1400129cd
   14001295e:	outs   dx,BYTE PTR ds:[rsi]
   14001295f:	ins    DWORD PTR es:[rdi],dx
   140012960:	outs   dx,BYTE PTR gs:[rsi]
   140012962:	je     0x1400129b7
   140012964:	je     0x1400129d8
   140012966:	imul   ebp,DWORD PTR [rsi+0x67],0xbb005773
   14001296d:	add    al,0x52
   14001296f:	je     0x1400129dd
   140012971:	rex.XB (bad) 
   140012973:	jo     0x1400129e9
   140012975:	jne    0x1400129e9
   140012977:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14001297a:	outs   dx,BYTE PTR ds:[rsi]
   14001297b:	je     0x1400129e2
   14001297d:	js     0x1400129f3
   14001297f:	add    dl,al
   140012981:	add    al,0x52
   140012983:	je     0x1400129f1
   140012985:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140012987:	outs   dx,DWORD PTR ds:[rsi]
   140012988:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14001298c:	jne    0x1400129fc
   14001298e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140012992:	outs   dx,BYTE PTR ds:[rsi]
   140012993:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140012995:	je     0x140012a09
   140012997:	jns    0x140012999
   140012999:	add    cl,cl
   14001299b:	add    al,0x52
   14001299d:	je     0x140012a0b
   14001299f:	push   rsi
   1400129a0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400129a7:	outs   dx,BYTE PTR ds:[rsi]
   1400129a8:	ja     0x140012a13
   1400129aa:	outs   dx,BYTE PTR ds:[rsi]
   1400129ab:	add    BYTE PTR fs:[rax],al
   1400129ae:	movabs al,ds:0x6c646e61686e5505
   1400129b7:	gs fs rex.RB js 0x140012a1f
   1400129bc:	gs jo  0x140012a33
   1400129bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400129c6:	gs jb  0x1400129c9
   1400129c9:	add    BYTE PTR [rdi+0x5],bl
   1400129cc:	push   rbx
   1400129cd:	gs je  0x140012a25
   1400129d0:	outs   dx,BYTE PTR ds:[rsi]
   1400129d1:	push   0x6c646e61
   1400129d6:	gs fs rex.RB js 0x140012a3e
   1400129db:	gs jo  0x140012a52
   1400129de:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400129e5:	gs jb  0x1400129e8
   1400129e8:	scas   al,BYTE PTR es:[rdi]
   1400129e9:	add    DWORD PTR [rsi+0x6c],eax
   1400129ec:	jae    0x140012a2f
   1400129ee:	ins    BYTE PTR es:[rdi],dx
   1400129ef:	ins    BYTE PTR es:[rdi],dx
   1400129f0:	outs   dx,DWORD PTR ds:[rsi]
   1400129f1:	movsxd eax,DWORD PTR [rax]
   1400129f3:	add    BYTE PTR [rax+0x736c4601],dh
   1400129f9:	rex.RXB
   1400129fa:	gs je  0x140012a53
   1400129fd:	(bad)  
   1400129fe:	ins    BYTE PTR es:[rdi],dx
   1400129ff:	jne    0x140012a66
   140012a01:	add    BYTE PTR [rcx+0x736c4601],dh
   140012a07:	push   rbx
   140012a08:	gs je  0x140012a61
   140012a0b:	(bad)  
   140012a0c:	ins    BYTE PTR es:[rdi],dx
   140012a0d:	jne    0x140012a74
   140012a0f:	add    BYTE PTR [rdi+0x736c4601],ch
   140012a15:	rex.RX jb 0x140012a7d
   140012a18:	add    BYTE PTR gs:[rcx],ch
   140012a1b:	add    al,BYTE PTR [rdi+0x65]
   140012a1e:	je     0x140012a63
   140012a20:	jne    0x140012a94
   140012a22:	jb     0x140012a89
   140012a24:	outs   dx,BYTE PTR ds:[rsi]
   140012a25:	je     0x140012a77
   140012a27:	jb     0x140012a98
   140012a29:	movsxd esp,DWORD PTR [rbp+0x73]
   140012a2c:	jae    0x140012a2e
   140012a2e:	jle    0x140012a35
   140012a30:	push   rsp
   140012a31:	gs jb  0x140012aa1
   140012a34:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140012a3b:	outs   dx,DWORD PTR ds:[rsi]
   140012a3c:	movsxd esp,DWORD PTR [rbp+0x73]
   140012a3f:	jae    0x140012a41
   140012a41:	add    al,cl
   140012a43:	add    al,0x52
   140012a45:	je     0x140012ab3
   140012a47:	push   rbp
   140012a48:	outs   dx,BYTE PTR ds:[rsi]
   140012a49:	ja     0x140012ab4
   140012a4b:	outs   dx,BYTE PTR ds:[rsi]
   140012a4c:	fs rex.RB js 0x140012a50
   140012a50:	xchg   BYTE PTR [rbx],al
   140012a52:	rex.WB jae 0x140012a99
   140012a55:	gs (bad) 
   140012a57:	jne    0x140012ac0
   140012a59:	addr32 gs jb 0x140012aad
   140012a5d:	jb     0x140012ac4
   140012a5f:	jae    0x140012ac6
   140012a61:	outs   dx,BYTE PTR ds:[rsi]
   140012a62:	je     0x140012a64
   140012a64:	mov    eax,DWORD PTR [rbx]
   140012a66:	rex.WB jae 0x140012ab9
   140012a69:	jb     0x140012ada
   140012a6b:	movsxd esp,DWORD PTR [rbp+0x73]
   140012a6e:	jae    0x140012adf
   140012a70:	jb     0x140012ab8
   140012a72:	gs (bad) 
   140012a74:	je     0x140012aeb
   140012a76:	jb     0x140012add
   140012a78:	push   rax
   140012a79:	jb     0x140012ae0
   140012a7b:	jae    0x140012ae2
   140012a7d:	outs   dx,BYTE PTR ds:[rsi]
   140012a7e:	je     0x140012a80
   140012a80:	(bad)  
   140012a81:	add    al,0x52
   140012a83:	je     0x140012af1
   140012a85:	push   rax
   140012a86:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   140012a8a:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   140012a92:	jb     0x140012a94
   140012a94:	pop    rdi
   140012a95:	add    ecx,DWORD PTR [rax+0x65]
   140012a98:	(bad)  
   140012a99:	jo     0x140012aee
   140012a9b:	imul   edi,DWORD PTR [rdx+0x65],0x1440000
   140012aa2:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140012aa4:	je     0x140012b0b
   140012aa6:	jb     0x140012aeb
   140012aa8:	jb     0x140012b13
   140012aaa:	je     0x140012b15
   140012aac:	movsxd esp,DWORD PTR [rcx+0x6c]
   140012aaf:	push   rbx
   140012ab0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140012ab5:	outs   dx,BYTE PTR ds:[rsi]
   140012ab6:	add    BYTE PTR [rax],al
   140012ab8:	rol    BYTE PTR [rbx],0x4c
   140012abb:	gs (bad) 
   140012abd:	jbe    0x140012b24
   140012abf:	rex.XB jb 0x140012b2b
   140012ac2:	je     0x140012b2d
   140012ac4:	movsxd esp,DWORD PTR [rcx+0x6c]
   140012ac7:	push   rbx
   140012ac8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140012acd:	outs   dx,BYTE PTR ds:[rsi]
   140012ace:	add    BYTE PTR [rax],al
   140012ad0:	nop
   140012ad1:	add    ecx,DWORD PTR [rcx+0x73]
   140012ad4:	push   rsi
   140012ad5:	(bad)  
   140012ad6:	ins    BYTE PTR es:[rdi],dx
   140012ad7:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140012adf:	addr32 gs add ah,al
   140012ae3:	add    DWORD PTR [rdi+0x65],eax
   140012ae6:	je     0x140012b29
   140012ae8:	rex.XB push r8
   140012aea:	add    BYTE PTR [rax],al
   140012aec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012aed:	add    al,BYTE PTR [rdi+0x65]
   140012af0:	je     0x140012b41
   140012af2:	rex.RB
   140012af3:	rex.WRB
   140012af4:	rex.XB push r8
   140012af6:	add    BYTE PTR [rax],al
   140012af8:	rol    DWORD PTR [rcx],cl
   140012afa:	rex.RXB
   140012afb:	gs je  0x140012b41
   140012afe:	push   rax
   140012aff:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140012b01:	outs   dx,WORD PTR ds:[rsi]
   140012b03:	add    ch,al
   140012b05:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140012b09:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140012b12:	js     0x140012b6b
   140012b14:	add    BYTE PTR [rax],al
   140012b16:	sbb    BYTE PTR [rdi+rcx*2],al
   140012b19:	jne    0x140012b8f
   140012b1b:	jo     0x140012b92
   140012b1d:	je     0x140012b63
   140012b1f:	gs (bad) 
   140012b21:	jne    0x140012b8a
   140012b23:	push   rbx
   140012b24:	je     0x140012b98
   140012b26:	imul   ebp,DWORD PTR [rsi+0x67],0xc6000057
   140012b2d:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140012b31:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140012b3a:	add    BYTE PTR [rax],al
   140012b3c:	in     eax,dx
   140012b3d:	add    eax,0x65646957
   140012b42:	rex.XB push 0x6f547261
   140012b48:	rex.WRB jne 0x140012bb7
   140012b4b:	je     0x140012bb6
   140012b4d:	rex.X jns 0x140012bc4
   140012b50:	add    BYTE PTR gs:[rbx+0x4d434c03],dh
   140012b57:	(bad)  
   140012b58:	jo     0x140012bad
   140012b5a:	je     0x140012bce
   140012b5c:	imul   ebp,DWORD PTR [rsi+0x67],0x5d007845
   140012b63:	add    ecx,DWORD PTR [rax+0x65]
   140012b66:	(bad)  
   140012b67:	jo     0x140012bbb
   140012b69:	gs rex.B ins BYTE PTR es:[rdi],dx
   140012b6c:	ins    BYTE PTR es:[rdi],dx
   140012b6d:	outs   dx,DWORD PTR ds:[rsi]
   140012b6e:	movsxd eax,DWORD PTR [rax]
   140012b70:	jmp    0x1b4667277
   140012b75:	push   rbx
   140012b76:	je     0x140012bea
   140012b78:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140012b7f:	push   rdi
   140012b80:	add    BYTE PTR [rax],al
   140012b82:	mov    bl,0x1
   140012b84:	rex.RX ins BYTE PTR es:[rdi],dx
   140012b86:	jne    0x140012bfb
   140012b88:	push   0x656c6946
   140012b8d:	rex.X jne 0x140012bf6
   140012b90:	data16 gs jb 0x140012c07
   140012b94:	add    BYTE PTR [rax],al
   140012b96:	cld    
   140012b97:	add    DWORD PTR [rdi+0x65],eax
   140012b9a:	je     0x140012bdf
   140012b9c:	outs   dx,DWORD PTR ds:[rsi]
   140012b9d:	outs   dx,BYTE PTR ds:[rsi]
   140012b9e:	jae    0x140012c0f
   140012ba0:	ins    BYTE PTR es:[rdi],dx
   140012ba1:	gs rex.XB push r8
   140012ba4:	add    BYTE PTR [rax],al
   140012ba6:	(bad)  
   140012ba7:	add    al,BYTE PTR [rdi+0x65]
   140012baa:	je     0x140012bef
   140012bac:	outs   dx,DWORD PTR ds:[rsi]
   140012bad:	outs   dx,BYTE PTR ds:[rsi]
   140012bae:	jae    0x140012c1f
   140012bb0:	ins    BYTE PTR es:[rdi],dx
   140012bb1:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140012bb4:	fs add BYTE PTR gs:[rax],al
   140012bb8:	cmp    eax,0x74655305
   140012bbd:	push   rbx
   140012bbe:	je     0x140012c24
   140012bc0:	rex.W (bad) 
   140012bc2:	outs   dx,BYTE PTR ds:[rsi]
   140012bc3:	fs ins BYTE PTR es:[rdi],dx
   140012bc5:	add    BYTE PTR gs:[rax],al
   140012bc8:	sbb    BYTE PTR [rip+0x46746553],al        # 0x186759121
   140012bce:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140012bd6:	gs jb  0x140012c1e
   140012bd9:	js     0x140012bdb
   140012bdb:	add    BYTE PTR [rax],al
   140012bdd:	(bad)  
   140012bde:	push   rdi
   140012bdf:	jb     0x140012c4a
   140012be1:	je     0x140012c48
   140012be3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140012be5:	outs   dx,BYTE PTR ds:[rsi]
   140012be6:	jae    0x140012c57
   140012be8:	ins    BYTE PTR es:[rdi],dx
   140012be9:	gs push rdi
   140012beb:	add    dh,dl
   140012bed:	add    BYTE PTR [rbx+0x72],al
   140012bf0:	gs (bad) 
   140012bf2:	je     0x140012c59
   140012bf4:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x49037000
   140012bfd:	outs   dx,BYTE PTR ds:[rsi]
   140012bfe:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140012c06:	rex.XB jb 0x140012c72
   140012c09:	je     0x140012c74
   140012c0b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140012c0e:	push   rbx
   140012c0f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140012c14:	outs   dx,BYTE PTR ds:[rsi]
   140012c15:	rex.RB js 0x140012c18
   140012c18:	pop    rcx
   140012c19:	add    ecx,DWORD PTR [rax+0x65]
   140012c1c:	(bad)  
   140012c1d:	jo     0x140012c63
   140012c1f:	gs jae 0x140012c96
   140012c22:	jb     0x140012c93
   140012c24:	jns    0x140012c26

Disassembly of section .data:

0000000140013000 <.data>:
   140013000:	push   0x14000e4
	...
   14001300d:	add    BYTE PTR [rax],al
   14001300f:	add    BYTE PTR [rsi],ch
   140013011:	(bad)  
   140013012:	push   r14
   140013014:	je     0x14001308f
   140013016:	jo     0x14001307d
   140013018:	pop    rdi
   140013019:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140013020:	push   0x14000e4
	...
   14001302d:	add    BYTE PTR [rax],al
   14001302f:	add    BYTE PTR [rsi],ch
   140013031:	(bad)  
   140013032:	push   r14
   140013034:	(bad)
   140013039:	ins    BYTE PTR es:[rdi],dx
   14001303a:	ins    BYTE PTR es:[rdi],dx
   14001303b:	outs   dx,DWORD PTR ds:[rsi]
   14001303c:	movsxd eax,DWORD PTR [rax+0x73]
   14001303f:	je     0x1400130a5
   140013041:	rex
   140013042:	add    BYTE PTR [rax],al
   140013045:	add    BYTE PTR [rax],al
   140013047:	add    BYTE PTR [rax-0x1c],ch
   14001304a:	add    BYTE PTR [rax+0x1],al
	...
   140013055:	add    BYTE PTR [rax],al
   140013057:	add    BYTE PTR [rsi],ch
   140013059:	(bad)  
   14001305a:	push   r14
   14001305c:	gs js  0x1400130c2
   14001305f:	gs jo  0x1400130d6
   140013062:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140013069:	rex
   14001306a:	add    dil,dil
   14001306d:	(bad)  
   14001306e:	(bad)  
   14001306f:	(bad)  
   140013070:	(bad)  
   140013071:	(bad)  
   140013072:	(bad)  
   140013073:	(bad)  
   140013074:	(bad)  
   140013075:	(bad)  
   140013076:	(bad)  
   140013077:	inc    DWORD PTR [rax+0xa]
	...
   1400130c5:	add    BYTE PTR [rax],al
   1400130c7:	add    bh,bh
   1400130c9:	(bad)  
   1400130ca:	(bad)  
   1400130cb:	inc    DWORD PTR [rax]
   1400130cd:	add    BYTE PTR [rax],al
   1400130cf:	add    BYTE PTR [rdx],dh
   1400130d1:	movabs ds:0x5dcd00002b992ddf,al
   1400130da:	and    dl,dl
   1400130dc:	data16 (bad) 
   1400130de:	(bad)  
   1400130df:	inc    DWORD PTR [rdx]
	...
   1400130ed:	add    BYTE PTR [rax],al
   1400130ef:	add    BYTE PTR [rcx],al
   1400130f1:	add    BYTE PTR [rax],al
   1400130f3:	add    BYTE PTR [rsi],dl
   1400130f5:	add    BYTE PTR [rax],al
   1400130f7:	add    BYTE PTR [rdx],al
   1400130f9:	add    BYTE PTR [rax],al
   1400130fb:	add    BYTE PTR [rdx],al
   1400130fd:	add    BYTE PTR [rax],al
   1400130ff:	add    BYTE PTR [rbx],al
   140013101:	add    BYTE PTR [rax],al
   140013103:	add    BYTE PTR [rdx],al
   140013105:	add    BYTE PTR [rax],al
   140013107:	add    BYTE PTR [rax+rax*1],al
   14001310a:	add    BYTE PTR [rax],al
   14001310c:	sbb    BYTE PTR [rax],al
   14001310e:	add    BYTE PTR [rax],al
   140013110:	add    eax,0xd000000
   140013115:	add    BYTE PTR [rax],al
   140013117:	add    BYTE PTR [rsi],al
   140013119:	add    BYTE PTR [rax],al
   14001311b:	add    BYTE PTR [rcx],cl
   14001311d:	add    BYTE PTR [rax],al
   14001311f:	add    BYTE PTR [rdi],al
   140013121:	add    BYTE PTR [rax],al
   140013123:	add    BYTE PTR [rax+rax*1],cl
   140013126:	add    BYTE PTR [rax],al
   140013128:	or     BYTE PTR [rax],al
   14001312a:	add    BYTE PTR [rax],al
   14001312c:	or     al,0x0
   14001312e:	add    BYTE PTR [rax],al
   140013130:	or     DWORD PTR [rax],eax
   140013132:	add    BYTE PTR [rax],al
   140013134:	or     al,0x0
   140013136:	add    BYTE PTR [rax],al
   140013138:	or     al,BYTE PTR [rax]
   14001313a:	add    BYTE PTR [rax],al
   14001313c:	(bad)  
   14001313d:	add    BYTE PTR [rax],al
   14001313f:	add    BYTE PTR [rbx],cl
   140013141:	add    BYTE PTR [rax],al
   140013143:	add    BYTE PTR [rax],cl
   140013145:	add    BYTE PTR [rax],al
   140013147:	add    BYTE PTR [rax+rax*1],cl
   14001314a:	add    BYTE PTR [rax],al
   14001314c:	(bad)  
   14001314d:	add    BYTE PTR [rax],al
   14001314f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156013155
   140013155:	add    BYTE PTR [rax],al
   140013157:	add    BYTE PTR [rdi],cl
   140013159:	add    BYTE PTR [rax],al
   14001315b:	add    BYTE PTR [rdx],al
   14001315d:	add    BYTE PTR [rax],al
   14001315f:	add    BYTE PTR [rax],dl
   140013161:	add    BYTE PTR [rax],al
   140013163:	add    BYTE PTR [rip+0x11000000],cl        # 0x151013169
   140013169:	add    BYTE PTR [rax],al
   14001316b:	add    BYTE PTR [rdx],dl
   14001316d:	add    BYTE PTR [rax],al
   14001316f:	add    BYTE PTR [rdx],dl
   140013171:	add    BYTE PTR [rax],al
   140013173:	add    BYTE PTR [rdx],al
   140013175:	add    BYTE PTR [rax],al
   140013177:	add    BYTE PTR [rcx],ah
   140013179:	add    BYTE PTR [rax],al
   14001317b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175013181
   140013181:	add    BYTE PTR [rax],al
   140013183:	add    BYTE PTR [rdx],al
   140013185:	add    BYTE PTR [rax],al
   140013187:	add    BYTE PTR [rcx+0x0],al
   14001318a:	add    BYTE PTR [rax],al
   14001318c:	or     eax,0x43000000
   140013191:	add    BYTE PTR [rax],al
   140013193:	add    BYTE PTR [rdx],al
   140013195:	add    BYTE PTR [rax],al
   140013197:	add    BYTE PTR [rax+0x0],dl
   14001319a:	add    BYTE PTR [rax],al
   14001319c:	adc    DWORD PTR [rax],eax
   14001319e:	add    BYTE PTR [rax],al
   1400131a0:	push   rdx
   1400131a1:	add    BYTE PTR [rax],al
   1400131a3:	add    BYTE PTR [rip+0x53000000],cl        # 0x1930131a9
   1400131a9:	add    BYTE PTR [rax],al
   1400131ab:	add    BYTE PTR [rip+0x57000000],cl        # 0x1970131b1
   1400131b1:	add    BYTE PTR [rax],al
   1400131b3:	add    BYTE PTR [rsi],dl
   1400131b5:	add    BYTE PTR [rax],al
   1400131b7:	add    BYTE PTR [rcx+0x0],bl
   1400131ba:	add    BYTE PTR [rax],al
   1400131bc:	or     eax,DWORD PTR [rax]
   1400131be:	add    BYTE PTR [rax],al
   1400131c0:	ins    BYTE PTR es:[rdi],dx
   1400131c1:	add    BYTE PTR [rax],al
   1400131c3:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad0131c9
   1400131c9:	add    BYTE PTR [rax],al
   1400131cb:	add    BYTE PTR [rax],ah
   1400131cd:	add    BYTE PTR [rax],al
   1400131cf:	add    BYTE PTR [rax+0x0],dh
   1400131d2:	add    BYTE PTR [rax],al
   1400131d4:	sbb    al,0x0
   1400131d6:	add    BYTE PTR [rax],al
   1400131d8:	jb     0x1400131da
   1400131da:	add    BYTE PTR [rax],al
   1400131dc:	or     DWORD PTR [rax],eax
   1400131de:	add    BYTE PTR [rax],al
   1400131e0:	(bad)  
   1400131e1:	add    BYTE PTR [rax],al
   1400131e3:	add    BYTE PTR [rsi],dl
   1400131e5:	add    BYTE PTR [rax],al
   1400131e7:	add    BYTE PTR [rax+0xa000000],al
   1400131ed:	add    BYTE PTR [rax],al
   1400131ef:	add    BYTE PTR [rcx+0xa000000],al
   1400131f5:	add    BYTE PTR [rax],al
   1400131f7:	add    BYTE PTR [rdx+0x9000000],al
   1400131fd:	add    BYTE PTR [rax],al
   1400131ff:	add    BYTE PTR [rbx+0x16000000],al
   140013205:	add    BYTE PTR [rax],al
   140013207:	add    BYTE PTR [rax+rax*1+0xd0000],al
   14001320e:	add    BYTE PTR [rax],al
   140013210:	xchg   ecx,eax
   140013211:	add    BYTE PTR [rax],al
   140013213:	add    BYTE PTR [rcx],ch
   140013215:	add    BYTE PTR [rax],al
   140013217:	add    BYTE PTR [rsi+0xd000000],bl
   14001321d:	add    BYTE PTR [rax],al
   14001321f:	add    BYTE PTR [rcx+0x2000000],ah
   140013225:	add    BYTE PTR [rax],al
   140013227:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14001322e:	add    BYTE PTR [rax],al
   140013230:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013231:	add    BYTE PTR [rax],al
   140013233:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7013239
   140013239:	add    BYTE PTR [rax],al
   14001323b:	add    BYTE PTR [rcx],dl
   14001323d:	add    BYTE PTR [rax],al
   14001323f:	add    dh,cl
   140013241:	add    BYTE PTR [rax],al
   140013243:	add    BYTE PTR [rdx],al
   140013245:	add    BYTE PTR [rax],al
   140013247:	add    bh,dl
   140013249:	add    BYTE PTR [rax],al
   14001324b:	add    BYTE PTR [rbx],cl
   14001324d:	add    BYTE PTR [rax],al
   14001324f:	add    BYTE PTR [rax],bl
   140013251:	(bad)  
   140013252:	add    BYTE PTR [rax],al
   140013254:	or     al,0x0
   140013256:	add    BYTE PTR [rax],al
   140013258:	or     al,0x0
   14001325a:	add    BYTE PTR [rax],al
   14001325c:	or     BYTE PTR [rax],al
	...
   140013266:	add    BYTE PTR [rax],al
   140013268:	add    DWORD PTR [rax],eax
	...
   140013276:	add    BYTE PTR [rax],al
   140013278:	add    DWORD PTR [rax],eax
	...
   140013296:	add    BYTE PTR [rax],al
   140013298:	add    DWORD PTR [rax],eax
	...
   1400132a6:	add    BYTE PTR [rax],al
   1400132a8:	add    DWORD PTR [rax],eax
	...
   1400132c6:	add    BYTE PTR [rax],al
   1400132c8:	add    DWORD PTR [rax],eax
	...
   1400132d6:	add    BYTE PTR [rax],al
   1400132d8:	add    DWORD PTR [rax],eax
	...
   1400132e6:	add    BYTE PTR [rax],al
   1400132e8:	add    DWORD PTR [rax],eax
	...
   140013306:	add    BYTE PTR [rax],al
   140013308:	add    DWORD PTR [rax],eax
	...
   140013326:	add    BYTE PTR [rax],al
   140013328:	add    DWORD PTR [rax],eax
	...
   140013336:	add    BYTE PTR [rax],al
   140013338:	add    DWORD PTR [rax],eax
	...
   140013346:	add    BYTE PTR [rax],al
   140013348:	add    DWORD PTR [rax],eax
	...
   140013366:	add    BYTE PTR [rax],al
   140013368:	add    DWORD PTR [rax],eax
	...
   140013376:	add    BYTE PTR [rax],al
   140013378:	add    DWORD PTR [rax],eax
	...
   140013386:	add    BYTE PTR [rax],al
   140013388:	add    DWORD PTR [rax],eax
	...
   14001349e:	add    BYTE PTR [rax],al
   1400134a0:	rex.XB add BYTE PTR [r8],al
	...
   1400134af:	add    BYTE PTR [rax-0xe],dh
   1400134b2:	add    BYTE PTR [rax+0x1],al
   1400134b5:	add    BYTE PTR [rax],al
   1400134b7:	add    BYTE PTR [rdx+rsi*8+0x0],dh
   1400134bb:	rex add DWORD PTR [rax],eax
   1400134be:	add    BYTE PTR [rax],al
   1400134c0:	js     0x1400134b4
   1400134c2:	add    BYTE PTR [rax+0x1],al
   1400134c5:	add    BYTE PTR [rax],al
   1400134c7:	add    BYTE PTR [rdx+rsi*8+0x0],bh
   1400134cb:	rex add DWORD PTR [rax],eax
   1400134ce:	add    BYTE PTR [rax],al
   1400134d0:	xor    dl,0x0
   1400134d3:	rex add DWORD PTR [rax],eax
   1400134d6:	add    BYTE PTR [rax],al
   1400134d8:	test   dl,dh
   1400134da:	add    BYTE PTR [rax+0x1],al
   1400134dd:	add    BYTE PTR [rax],al
   1400134df:	add    BYTE PTR [rax+0x14000f2],cl
   1400134e5:	add    BYTE PTR [rax],al
   1400134e7:	add    BYTE PTR [rdx+rsi*8+0x14000],cl
   1400134ee:	add    BYTE PTR [rax],al
   1400134f0:	xchg   esp,eax
   1400134f1:	repnz add BYTE PTR [rax+0x1],al
   1400134f5:	add    BYTE PTR [rax],al
   1400134f7:	add    BYTE PTR [rax+0x14000f2],ah
   1400134fd:	add    BYTE PTR [rax],al
   1400134ff:	add    BYTE PTR [rax+0x14000f2],ch
   140013505:	add    BYTE PTR [rax],al
   140013507:	add    BYTE PTR [rax+0x14000f2],bh
   14001350d:	add    BYTE PTR [rax],al
   14001350f:	add    ah,al
   140013511:	repnz add BYTE PTR [rax+0x1],al
   140013515:	add    BYTE PTR [rax],al
   140013517:	add    al,dl
   140013519:	repnz add BYTE PTR [rax+0x1],al
   14001351d:	add    BYTE PTR [rax],al
   14001351f:	add    ah,bl
   140013521:	repnz add BYTE PTR [rax+0x1],al
   140013525:	add    BYTE PTR [rax],al
   140013527:	add    al,ah
   140013529:	repnz add BYTE PTR [rax+0x1],al
   14001352d:	add    BYTE PTR [rax],al
   14001352f:	add    ah,ah
   140013531:	repnz add BYTE PTR [rax+0x1],al
   140013535:	add    BYTE PTR [rax],al
   140013537:	add    al,ch
   140013539:	repnz add BYTE PTR [rax+0x1],al
   14001353d:	add    BYTE PTR [rax],al
   14001353f:	add    ah,ch
   140013541:	repnz add BYTE PTR [rax+0x1],al
   140013545:	add    BYTE PTR [rax],al
   140013547:	add    al,dh
   140013549:	repnz add BYTE PTR [rax+0x1],al
   14001354d:	add    BYTE PTR [rax],al
   14001354f:	add    ah,dh
   140013551:	repnz add BYTE PTR [rax+0x1],al
   140013555:	add    BYTE PTR [rax],al
   140013557:	add    al,bh
   140013559:	repnz add BYTE PTR [rax+0x1],al
   14001355d:	add    BYTE PTR [rax],al
   14001355f:	add    ah,bh
   140013561:	repnz add BYTE PTR [rax+0x1],al
   140013565:	add    BYTE PTR [rax],al
   140013567:	add    BYTE PTR [rax],al
   140013569:	repz add BYTE PTR [rax+0x1],al
   14001356d:	add    BYTE PTR [rax],al
   14001356f:	add    BYTE PTR [rbx+rsi*8],al
   140013572:	add    BYTE PTR [rax+0x1],al
   140013575:	add    BYTE PTR [rax],al
   140013577:	add    BYTE PTR [rax],cl
   140013579:	repz add BYTE PTR [rax+0x1],al
   14001357d:	add    BYTE PTR [rax],al
   14001357f:	add    BYTE PTR [rax],dl
   140013581:	repz add BYTE PTR [rax+0x1],al
   140013585:	add    BYTE PTR [rax],al
   140013587:	add    BYTE PTR [rax],bl
   140013589:	repz add BYTE PTR [rax+0x1],al
   14001358d:	add    BYTE PTR [rax],al
   14001358f:	add    BYTE PTR [rbx+rsi*8],ah
   140013592:	add    BYTE PTR [rax+0x1],al
   140013595:	add    BYTE PTR [rax],al
   140013597:	add    BYTE PTR [rbx+rsi*8],ch
   14001359a:	add    BYTE PTR [rax+0x1],al
   14001359d:	add    BYTE PTR [rax],al
   14001359f:	add    ah,ch
   1400135a1:	repnz add BYTE PTR [rax+0x1],al
   1400135a5:	add    BYTE PTR [rax],al
   1400135a7:	add    BYTE PTR [rbx+rsi*8],dh
   1400135aa:	add    BYTE PTR [rax+0x1],al
   1400135ad:	add    BYTE PTR [rax],al
   1400135af:	add    BYTE PTR [rbx+rsi*8],bh
   1400135b2:	add    BYTE PTR [rax+0x1],al
   1400135b5:	add    BYTE PTR [rax],al
   1400135b7:	add    BYTE PTR [rbx+rsi*8+0x0],al
   1400135bb:	rex add DWORD PTR [rax],eax
   1400135be:	add    BYTE PTR [rax],al
   1400135c0:	push   rax
   1400135c1:	repz add BYTE PTR [rax+0x1],al
   1400135c5:	add    BYTE PTR [rax],al
   1400135c7:	add    BYTE PTR [rax-0xd],ah
   1400135ca:	add    BYTE PTR [rax+0x1],al
   1400135cd:	add    BYTE PTR [rax],al
   1400135cf:	add    BYTE PTR [rax-0xd],ch
   1400135d2:	add    BYTE PTR [rax+0x1],al
   1400135d5:	add    BYTE PTR [rax],al
   1400135d7:	add    BYTE PTR [rax-0xd],bh
   1400135da:	add    BYTE PTR [rax+0x1],al
   1400135dd:	add    BYTE PTR [rax],al
   1400135df:	add    BYTE PTR [rbx+rsi*8+0x14000],al
   1400135e6:	add    BYTE PTR [rax],al
   1400135e8:	mov    bl,dh
   1400135ea:	add    BYTE PTR [rax+0x1],al
   1400135ed:	add    BYTE PTR [rax],al
   1400135ef:	add    BYTE PTR [rax+0x14000f3],dl
   1400135f5:	add    BYTE PTR [rax],al
   1400135f7:	add    BYTE PTR [rax+0x14000f3],ah
   1400135fd:	add    BYTE PTR [rax],al
   1400135ff:	add    BYTE PTR [rax+0x14000f3],bh
   140013605:	add    BYTE PTR [rax],al
   140013607:	add    BYTE PTR [rcx],al
   140013609:	add    BYTE PTR [rax],al
   14001360b:	add    BYTE PTR [rax],al
   14001360d:	add    BYTE PTR [rax],al
   14001360f:	add    al,cl
   140013611:	repz add BYTE PTR [rax+0x1],al
   140013615:	add    BYTE PTR [rax],al
   140013617:	add    al,dl
   140013619:	repz add BYTE PTR [rax+0x1],al
   14001361d:	add    BYTE PTR [rax],al
   14001361f:	add    al,bl
   140013621:	repz add BYTE PTR [rax+0x1],al
   140013625:	add    BYTE PTR [rax],al
   140013627:	add    al,ah
   140013629:	repz add BYTE PTR [rax+0x1],al
   14001362d:	add    BYTE PTR [rax],al
   14001362f:	add    al,ch
   140013631:	repz add BYTE PTR [rax+0x1],al
   140013635:	add    BYTE PTR [rax],al
   140013637:	add    al,dh
   140013639:	repz add BYTE PTR [rax+0x1],al
   14001363d:	add    BYTE PTR [rax],al
   14001363f:	add    al,bh
   140013641:	repz add BYTE PTR [rax+0x1],al
   140013645:	add    BYTE PTR [rax],al
   140013647:	add    BYTE PTR [rax],al
   140013649:	hlt    
   14001364a:	add    BYTE PTR [rax+0x1],al
   14001364d:	add    BYTE PTR [rax],al
   14001364f:	add    BYTE PTR [rax],dl
   140013651:	hlt    
   140013652:	add    BYTE PTR [rax+0x1],al
   140013655:	add    BYTE PTR [rax],al
   140013657:	add    BYTE PTR [rax],ah
   140013659:	hlt    
   14001365a:	add    BYTE PTR [rax+0x1],al
   14001365d:	add    BYTE PTR [rax],al
   14001365f:	add    BYTE PTR [rax],dh
   140013661:	hlt    
   140013662:	add    BYTE PTR [rax+0x1],al
   140013665:	add    BYTE PTR [rax],al
   140013667:	add    BYTE PTR [rax-0xc],cl
   14001366a:	add    BYTE PTR [rax+0x1],al
   14001366d:	add    BYTE PTR [rax],al
   14001366f:	add    BYTE PTR [rax-0xc],ah
   140013672:	add    BYTE PTR [rax+0x1],al
   140013675:	add    BYTE PTR [rax],al
   140013677:	add    BYTE PTR [rax-0xc],dh
   14001367a:	add    BYTE PTR [rax+0x1],al
   14001367d:	add    BYTE PTR [rax],al
   14001367f:	add    BYTE PTR [rax+0x14000f4],cl
   140013685:	add    BYTE PTR [rax],al
   140013687:	add    BYTE PTR [rax+0x14000f4],dl
   14001368d:	add    BYTE PTR [rax],al
   14001368f:	add    BYTE PTR [rax+0x14000f4],bl
   140013695:	add    BYTE PTR [rax],al
   140013697:	add    BYTE PTR [rax+0x14000f4],ah
   14001369d:	add    BYTE PTR [rax],al
   14001369f:	add    BYTE PTR [rax+0x14000f4],ch
   1400136a5:	add    BYTE PTR [rax],al
   1400136a7:	add    BYTE PTR [rax+0x14000f4],dh
   1400136ad:	add    BYTE PTR [rax],al
   1400136af:	add    BYTE PTR [rax+0x14000f4],bh
   1400136b5:	add    BYTE PTR [rax],al
   1400136b7:	add    al,al
   1400136b9:	hlt    
   1400136ba:	add    BYTE PTR [rax+0x1],al
   1400136bd:	add    BYTE PTR [rax],al
   1400136bf:	add    al,cl
   1400136c1:	hlt    
   1400136c2:	add    BYTE PTR [rax+0x1],al
   1400136c5:	add    BYTE PTR [rax],al
   1400136c7:	add    al,dl
   1400136c9:	hlt    
   1400136ca:	add    BYTE PTR [rax+0x1],al
   1400136cd:	add    BYTE PTR [rax],al
   1400136cf:	add    al,bl
   1400136d1:	hlt    
   1400136d2:	add    BYTE PTR [rax+0x1],al
   1400136d5:	add    BYTE PTR [rax],al
   1400136d7:	add    al,ah
   1400136d9:	hlt    
   1400136da:	add    BYTE PTR [rax+0x1],al
   1400136dd:	add    BYTE PTR [rax],al
   1400136df:	add    al,ch
   1400136e1:	hlt    
   1400136e2:	add    BYTE PTR [rax+0x1],al
   1400136e5:	add    BYTE PTR [rax],al
   1400136e7:	add    al,bh
   1400136e9:	hlt    
   1400136ea:	add    BYTE PTR [rax+0x1],al
   1400136ed:	add    BYTE PTR [rax],al
   1400136ef:	add    BYTE PTR [rax],dl
   1400136f1:	cmc    
   1400136f2:	add    BYTE PTR [rax+0x1],al
   1400136f5:	add    BYTE PTR [rax],al
   1400136f7:	add    BYTE PTR [rax],ah
   1400136f9:	cmc    
   1400136fa:	add    BYTE PTR [rax+0x1],al
   1400136fd:	add    BYTE PTR [rax],al
   1400136ff:	add    BYTE PTR [rax+0x14000f4],ch
   140013705:	add    BYTE PTR [rax],al
   140013707:	add    BYTE PTR [rax],dh
   140013709:	cmc    
   14001370a:	add    BYTE PTR [rax+0x1],al
   14001370d:	add    BYTE PTR [rax],al
   14001370f:	add    BYTE PTR [rax-0xb],al
   140013712:	add    BYTE PTR [rax+0x1],al
   140013715:	add    BYTE PTR [rax],al
   140013717:	add    BYTE PTR [rax-0xb],dl
   14001371a:	add    BYTE PTR [rax+0x1],al
   14001371d:	add    BYTE PTR [rax],al
   14001371f:	add    BYTE PTR [rax-0xb],ah
   140013722:	add    BYTE PTR [rax+0x1],al
   140013725:	add    BYTE PTR [rax],al
   140013727:	add    BYTE PTR [rax-0xb],bh
   14001372a:	add    BYTE PTR [rax+0x1],al
   14001372d:	add    BYTE PTR [rax],al
   14001372f:	add    BYTE PTR [rax+0x14000f5],cl
   140013735:	add    BYTE PTR [rax],al
   140013737:	add    BYTE PTR [rax+0x14000f5],ah
   14001373d:	add    BYTE PTR [rax],al
   14001373f:	add    BYTE PTR [rbp+rsi*8+0x14000],dh
   140013746:	add    BYTE PTR [rax],al
   140013748:	mov    esp,0x14000f5
   14001374d:	add    BYTE PTR [rax],al
   14001374f:	add    al,cl
   140013751:	cmc    
   140013752:	add    BYTE PTR [rax+0x1],al
   140013755:	add    BYTE PTR [rax],al
   140013757:	add    al,ah
   140013759:	cmc    
   14001375a:	add    BYTE PTR [rax+0x1],al
   14001375d:	add    BYTE PTR [rax],al
   14001375f:	add    BYTE PTR [rax],cl
   140013761:	test   BYTE PTR [rax],0x40
   140013764:	add    DWORD PTR [rax],eax
   140013766:	add    BYTE PTR [rax],al
   140013768:	and    dh,dh
   14001376a:	add    BYTE PTR [rax+0x1],al
   14001376d:	add    BYTE PTR [rax],al
   14001376f:	add    BYTE PTR [rax+0x1400137],al
	...
   14001377d:	add    BYTE PTR [rax],al
   14001377f:	add    BYTE PTR [rcx],al
	...
   1400137b5:	add    BYTE PTR [rax],al
   1400137b7:	add    BYTE PTR [rax+0x1400134],ah
	...
   1400137d5:	add    BYTE PTR [rax],al
   1400137d7:	add    BYTE PTR [rax+0x1400134],ah
	...
   1400137f5:	add    BYTE PTR [rax],al
   1400137f7:	add    BYTE PTR [rax+0x1400134],ah
	...
   140013815:	add    BYTE PTR [rax],al
   140013817:	add    BYTE PTR [rax+0x1400134],ah
	...
   140013835:	add    BYTE PTR [rax],al
   140013837:	add    BYTE PTR [rax+0x1400134],ah
	...
   14001384d:	add    BYTE PTR [rax],al
   14001384f:	add    BYTE PTR [rcx],al
   140013851:	add    BYTE PTR [rax],al
   140013853:	add    BYTE PTR [rcx],al
	...
   14001386d:	add    BYTE PTR [rax],al
   14001386f:	add    BYTE PTR [rax+0x1400142],al
	...
   140013885:	add    BYTE PTR [rax],al
   140013887:	add    BYTE PTR [rax+0x1400101],ah
   14001388d:	add    BYTE PTR [rax],al
   14001388f:	add    BYTE PTR [rax],dh
   140013891:	(bad)  
   140013892:	add    DWORD PTR [rax+0x1],eax
   140013895:	add    BYTE PTR [rax],al
   140013897:	add    BYTE PTR [rax+0x1400107],dh
   14001389d:	add    BYTE PTR [rax],al
   14001389f:	add    BYTE PTR [rax+0x1400134],dh
	...
   1400138d5:	add    BYTE PTR [rax],al
   1400138d7:	add    BYTE PTR [rcx],al
   1400138d9:	add    BYTE PTR [rax],al
   1400138db:	add    BYTE PTR [rax],al
   1400138dd:	add    BYTE PTR [rax],al
   1400138df:	add    BYTE PTR [rcx],al
   1400138e1:	add    al,BYTE PTR [rax+rcx*1]
	...
   1400138f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400138f1:	add    eax,DWORD PTR [rax]
   1400138f3:	add    BYTE PTR [rax-0x7e],ah
   1400138f6:	jns    0x14001387a
   1400138f8:	and    DWORD PTR [rax],eax
   1400138fa:	add    BYTE PTR [rax],al
   1400138fc:	add    BYTE PTR [rax],al
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013901:	fild   WORD PTR [rax]
   140013903:	add    BYTE PTR [rax],al
   140013905:	add    BYTE PTR [rax],al
   140013907:	add    BYTE PTR [rcx+0xa5],ah
   14001390d:	add    BYTE PTR [rax],al
   14001390f:	add    BYTE PTR [rcx+0xfce09f],al
   140013915:	add    BYTE PTR [rax],al
   140013917:	add    BYTE PTR [rax+0x7e],al
   14001391a:	cmp    ah,0x0
   14001391d:	add    BYTE PTR [rax],al
   14001391f:	add    BYTE PTR [rax-0x3efffffd],ch
   140013925:	movabs ds:0x20a3da,eax
	...
   14001393e:	add    BYTE PTR [rax],al
   140013940:	cmp    esi,0x0
   140013946:	add    BYTE PTR [rax],al
   140013948:	rex inc BYTE PTR [rax]
   14001394b:	add    BYTE PTR [rax],al
   14001394d:	add    BYTE PTR [rax],al
   14001394f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140013955:	movabs ds:0x20a3da,eax
	...
   14001396e:	add    BYTE PTR [rax],al
   140013970:	cmp    esi,0x0
   140013976:	add    BYTE PTR [rax],al
   140013978:	inc    BYTE PTR [r8]
   14001397b:	add    BYTE PTR [rax],al
   14001397d:	add    BYTE PTR [rax],al
   14001397f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140013985:	movabs ds:0xa2e8a2e5001aa2e4,al
   14001398e:	pop    rbx
	...
   14001399f:	add    BYTE PTR [rcx+0xfe],al
   1400139a5:	add    BYTE PTR [rax],al
   1400139a7:	add    BYTE PTR [rax+0x7e],al
   1400139aa:	movabs eax,ds:0x55100000000fe
   1400139b3:	add    BYTE PTR [rcx-0x26],dl
   1400139b6:	pop    rsi
   1400139b7:	fisub  DWORD PTR [rax]
   1400139b9:	add    BYTE PTR [rdi-0x26],bl
   1400139bc:	push   0xffffffffffffffda
   1400139be:	xor    al,BYTE PTR [rax]
	...
   1400139d0:	adc    ebx,0xf9e0ded8
   1400139d6:	add    BYTE PTR [rax],al
   1400139d8:	xor    DWORD PTR [rsi-0x7f],edi
   1400139db:	inc    BYTE PTR [rax]
	...
   140013a21:	add    BYTE PTR [rax],dl
   140013a23:	adc    BYTE PTR [rax],dl
   140013a25:	adc    BYTE PTR [rax],dl
   140013a27:	adc    BYTE PTR [rax],dl
   140013a29:	adc    BYTE PTR [rax],dl
   140013a2b:	adc    BYTE PTR [rax],dl
   140013a2d:	adc    BYTE PTR [rax],dl
   140013a2f:	adc    BYTE PTR [rax],dl
   140013a31:	adc    BYTE PTR [rax],dl
   140013a33:	adc    BYTE PTR [rax],dl
   140013a35:	adc    BYTE PTR [rax],dl
   140013a37:	adc    BYTE PTR [rax],dl
   140013a39:	adc    BYTE PTR [rax],dl
   140013a3b:	adc    BYTE PTR [rax],al
   140013a3d:	add    BYTE PTR [rax],al
   140013a3f:	add    BYTE PTR [rax],al
   140013a41:	add    BYTE PTR [rax],ah
   140013a43:	and    BYTE PTR [rax],ah
   140013a45:	and    BYTE PTR [rax],ah
   140013a47:	and    BYTE PTR [rax],ah
   140013a49:	and    BYTE PTR [rax],ah
   140013a4b:	and    BYTE PTR [rax],ah
   140013a4d:	and    BYTE PTR [rax],ah
   140013a4f:	and    BYTE PTR [rax],ah
   140013a51:	and    BYTE PTR [rax],ah
   140013a53:	and    BYTE PTR [rax],ah
   140013a55:	and    BYTE PTR [rax],ah
   140013a57:	and    BYTE PTR [rax],ah
   140013a59:	and    BYTE PTR [rax],ah
   140013a5b:	and    BYTE PTR [rax],al
	...
   140013ae5:	add    BYTE PTR [rax],al
   140013ae7:	add    al,dh
   140013ae9:	cmp    eax,DWORD PTR [rcx]
   140013aeb:	rex add DWORD PTR [rax],eax
	...
   140013b2e:	add    BYTE PTR [rax],al
   140013b30:	add    BYTE PTR [rcx+0x62],ah
   140013b33:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140013b37:	addr32 push 0x6c6b6a69
   140013b3d:	ins    DWORD PTR es:[rdi],dx
   140013b3e:	outs   dx,BYTE PTR ds:[rsi]
   140013b3f:	outs   dx,DWORD PTR ds:[rsi]
   140013b40:	jo     0x140013bb3
   140013b42:	jb     0x140013bb7
   140013b44:	je     0x140013bbb
   140013b46:	jbe    0x140013bbf
   140013b48:	js     0x140013bc3
   140013b4a:	jp     0x140013b4c
   140013b4c:	add    BYTE PTR [rax],al
   140013b4e:	add    BYTE PTR [rax],al
   140013b50:	add    BYTE PTR [rcx+0x42],al
   140013b53:	rex.XB
   140013b54:	rex.R
   140013b55:	rex.RB
   140013b56:	rex.RX
   140013b57:	rex.RXB
   140013b58:	rex.W
   140013b59:	rex.WB
   140013b5a:	rex.WX
   140013b5b:	rex.WXB
   140013b5c:	rex.WR
   140013b5d:	rex.WRB
   140013b5e:	rex.WRX
   140013b5f:	rex.WRXB push r8
   140013b61:	push   rcx
   140013b62:	push   rdx
   140013b63:	push   rbx
   140013b64:	push   rsp
   140013b65:	push   rbp
   140013b66:	push   rsi
   140013b67:	push   rdi
   140013b68:	pop    rax
   140013b69:	pop    rcx
   140013b6a:	pop    rdx
	...
   140013c47:	add    BYTE PTR [rax],al
   140013c49:	add    BYTE PTR [rax],dl
   140013c4b:	adc    BYTE PTR [rax],dl
   140013c4d:	adc    BYTE PTR [rax],dl
   140013c4f:	adc    BYTE PTR [rax],dl
   140013c51:	adc    BYTE PTR [rax],dl
   140013c53:	adc    BYTE PTR [rax],dl
   140013c55:	adc    BYTE PTR [rax],dl
   140013c57:	adc    BYTE PTR [rax],dl
   140013c59:	adc    BYTE PTR [rax],dl
   140013c5b:	adc    BYTE PTR [rax],dl
   140013c5d:	adc    BYTE PTR [rax],dl
   140013c5f:	adc    BYTE PTR [rax],dl
   140013c61:	adc    BYTE PTR [rax],dl
   140013c63:	adc    BYTE PTR [rax],al
   140013c65:	add    BYTE PTR [rax],al
   140013c67:	add    BYTE PTR [rax],al
   140013c69:	add    BYTE PTR [rax],ah
   140013c6b:	and    BYTE PTR [rax],ah
   140013c6d:	and    BYTE PTR [rax],ah
   140013c6f:	and    BYTE PTR [rax],ah
   140013c71:	and    BYTE PTR [rax],ah
   140013c73:	and    BYTE PTR [rax],ah
   140013c75:	and    BYTE PTR [rax],ah
   140013c77:	and    BYTE PTR [rax],ah
   140013c79:	and    BYTE PTR [rax],ah
   140013c7b:	and    BYTE PTR [rax],ah
   140013c7d:	and    BYTE PTR [rax],ah
   140013c7f:	and    BYTE PTR [rax],ah
   140013c81:	and    BYTE PTR [rax],ah
   140013c83:	and    BYTE PTR [rax],al
	...
   140013d49:	add    BYTE PTR [rcx+0x62],ah
   140013d4c:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140013d50:	addr32 push 0x6c6b6a69
   140013d56:	ins    DWORD PTR es:[rdi],dx
   140013d57:	outs   dx,BYTE PTR ds:[rsi]
   140013d58:	outs   dx,DWORD PTR ds:[rsi]
   140013d59:	jo     0x140013dcc
   140013d5b:	jb     0x140013dd0
   140013d5d:	je     0x140013dd4
   140013d5f:	jbe    0x140013dd8
   140013d61:	js     0x140013ddc
   140013d63:	jp     0x140013d65
   140013d65:	add    BYTE PTR [rax],al
   140013d67:	add    BYTE PTR [rax],al
   140013d69:	add    BYTE PTR [rcx+0x42],al
   140013d6c:	rex.XB
   140013d6d:	rex.R
   140013d6e:	rex.RB
   140013d6f:	rex.RX
   140013d70:	rex.RXB
   140013d71:	rex.W
   140013d72:	rex.WB
   140013d73:	rex.WX
   140013d74:	rex.WXB
   140013d75:	rex.WR
   140013d76:	rex.WRB
   140013d77:	rex.WRX
   140013d78:	rex.WRXB push r8
   140013d7a:	push   rcx
   140013d7b:	push   rdx
   140013d7c:	push   rbx
   140013d7d:	push   rsp
   140013d7e:	push   rbp
   140013d7f:	push   rsi
   140013d80:	push   rdi
   140013d81:	pop    rax
   140013d82:	pop    rcx
   140013d83:	pop    rdx
	...
   140013e20:	mov    eax,0x14000b0
   140013e25:	add    BYTE PTR [rax],al
   140013e27:	add    BYTE PTR [rax+0x14000b0],bh
   140013e2d:	add    BYTE PTR [rax],al
   140013e2f:	add    BYTE PTR [rax+0x14000b0],bh
   140013e35:	add    BYTE PTR [rax],al
   140013e37:	add    BYTE PTR [rax+0x14000b0],bh
   140013e3d:	add    BYTE PTR [rax],al
   140013e3f:	add    BYTE PTR [rax+0x14000b0],bh
   140013e45:	add    BYTE PTR [rax],al
   140013e47:	add    BYTE PTR [rax+0x14000b0],bh
   140013e4d:	add    BYTE PTR [rax],al
   140013e4f:	add    BYTE PTR [rax+0x14000b0],bh
   140013e55:	add    BYTE PTR [rax],al
   140013e57:	add    BYTE PTR [rax+0x14000b0],bh
   140013e5d:	add    BYTE PTR [rax],al
   140013e5f:	add    BYTE PTR [rax+0x14000b0],bh
   140013e65:	add    BYTE PTR [rax],al
   140013e67:	add    BYTE PTR [rax+0x14000b0],bh
   140013e6d:	add    BYTE PTR [rax],al
   140013e6f:	add    al,ah
   140013e71:	push   rsi
   140013e72:	add    DWORD PTR [rax+0x1],eax
	...
   140013e7d:	add    BYTE PTR [rax],al
   140013e7f:	add    al,ah
   140013e81:	push   rsi
   140013e82:	add    DWORD PTR [rax+0x1],eax
   140013e85:	add    BYTE PTR [rax],al
   140013e87:	add    BYTE PTR [rcx],al
   140013e89:	add    DWORD PTR [rax],eax
	...
   140013e93:	add    BYTE PTR [rax],al
   140013e95:	adc    BYTE PTR [rax],al
	...
   140013eb7:	add    BYTE PTR [rdx],al
   140013eb9:	add    BYTE PTR [rax],al
   140013ebb:	add    BYTE PTR [rcx],al
	...
   140013ee5:	add    BYTE PTR [rax],al
   140013ee7:	add    BYTE PTR [rdx],al
   140013ee9:	add    BYTE PTR [rax],al
   140013eeb:	add    BYTE PTR [rdx],al
	...
   14001422d:	add    BYTE PTR [rax],al
   14001422f:	add    BYTE PTR [rax-0x1c],ch
   140014232:	add    BYTE PTR [rax+0x1],al
	...
   14001423d:	add    BYTE PTR [rax],al
   14001423f:	add    BYTE PTR [rsi],ch
   140014241:	(bad)  
   140014242:	push   r14
   140014244:	(bad)
   140014249:	js     0x1400142ae
   14001424b:	gs jo  0x1400142c2
   14001424e:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140014255:	rex
   140014256:	add    BYTE PTR [rcx],al
   140014259:	add    BYTE PTR [rax],al
   14001425b:	add    BYTE PTR [rdx],al
   14001425d:	add    BYTE PTR [rax],al
   14001425f:	add    dh,bh
   140014261:	(bad)  
   140014262:	(bad)  
   140014263:	inc    DWORD PTR [rax]
	...
   14001426d:	add    BYTE PTR [rax],al
   14001426f:	add    BYTE PTR [rsi],ch
   140014271:	add    BYTE PTR [rax],al
   140014273:	add    BYTE PTR [rsi],ch
   140014275:	add    BYTE PTR [rax],al
   140014277:	add    BYTE PTR [rax+0x1400142],al
   14001427d:	add    BYTE PTR [rax],al
   14001427f:	add    BYTE PTR [rax+0x42],dh
   140014282:	add    DWORD PTR [rax+0x1],eax
   140014285:	add    BYTE PTR [rax],al
   140014287:	add    BYTE PTR [rbp+rdx*2+0x1],ah
   14001428b:	rex add DWORD PTR [rax],eax
   14001428e:	add    BYTE PTR [rax],al
   140014290:	fs push rbp
   140014292:	add    DWORD PTR [rax+0x1],eax
   140014295:	add    BYTE PTR [rax],al
   140014297:	add    BYTE PTR [rbp+rdx*2+0x1],ah
   14001429b:	rex add DWORD PTR [rax],eax
   14001429e:	add    BYTE PTR [rax],al
   1400142a0:	fs push rbp
   1400142a2:	add    DWORD PTR [rax+0x1],eax
   1400142a5:	add    BYTE PTR [rax],al
   1400142a7:	add    BYTE PTR [rbp+rdx*2+0x1],ah
   1400142ab:	rex add DWORD PTR [rax],eax
   1400142ae:	add    BYTE PTR [rax],al
   1400142b0:	fs push rbp
   1400142b2:	add    DWORD PTR [rax+0x1],eax
   1400142b5:	add    BYTE PTR [rax],al
   1400142b7:	add    BYTE PTR [rbp+rdx*2+0x1],ah
   1400142bb:	rex add DWORD PTR [rax],eax
   1400142be:	add    BYTE PTR [rax],al
   1400142c0:	fs push rbp
   1400142c2:	add    DWORD PTR [rax+0x1],eax
   1400142c5:	add    BYTE PTR [rax],al
   1400142c7:	add    BYTE PTR [rbp+rdx*2+0x1],ah
   1400142cb:	rex add DWORD PTR [rax],eax
   1400142ce:	add    BYTE PTR [rax],al
   1400142d0:	jg     0x140014351
   1400142d2:	jg     0x140014353
   1400142d4:	jg     0x140014355
   1400142d6:	jg     0x140014357
   1400142d8:	je     0x14001431c
   1400142da:	add    DWORD PTR [rax+0x1],eax
   1400142dd:	add    BYTE PTR [rax],al
   1400142df:	add    BYTE PTR [rax+0x55],ch
   1400142e2:	add    DWORD PTR [rax+0x1],eax
   1400142e5:	add    BYTE PTR [rax],al
   1400142e7:	add    BYTE PTR [rax+0x55],ch
   1400142ea:	add    DWORD PTR [rax+0x1],eax
   1400142ed:	add    BYTE PTR [rax],al
   1400142ef:	add    BYTE PTR [rax+0x55],ch
   1400142f2:	add    DWORD PTR [rax+0x1],eax
   1400142f5:	add    BYTE PTR [rax],al
   1400142f7:	add    BYTE PTR [rax+0x55],ch
   1400142fa:	add    DWORD PTR [rax+0x1],eax
   1400142fd:	add    BYTE PTR [rax],al
   1400142ff:	add    BYTE PTR [rax+0x55],ch
   140014302:	add    DWORD PTR [rax+0x1],eax
   140014305:	add    BYTE PTR [rax],al
   140014307:	add    BYTE PTR [rax+0x55],ch
   14001430a:	add    DWORD PTR [rax+0x1],eax
   14001430d:	add    BYTE PTR [rax],al
   14001430f:	add    BYTE PTR [rax+0x55],ch
   140014312:	add    DWORD PTR [rax+0x1],eax
   140014315:	add    BYTE PTR [rax],al
   140014317:	add    BYTE PTR [rax+0x1400101],ah
   14001431d:	add    BYTE PTR [rax],al
   14001431f:	add    BYTE PTR [rdx+0x1400103],ah
	...
   14001432d:	add    BYTE PTR [rax],al
   14001432f:	add    BYTE PTR [rbx+rax*1+0x14001],ah
	...
   14001433e:	add    BYTE PTR [rax],al
   140014340:	(bad)  
   140014341:	(bad)  
   140014342:	(bad)  
   140014343:	(bad)  
   140014344:	(bad)  
   140014345:	(bad)  
   140014346:	(bad)  
   140014347:	jmp    FWORD PTR [rax+0x9]
   14001434a:	add    DWORD PTR [rax+0x1],eax
   14001434d:	add    BYTE PTR [rax],al
   14001434f:	add    BYTE PTR [rax+0x1400155],bh
   140014355:	add    BYTE PTR [rax],al
   140014357:	add    BYTE PTR [rax+0x43],cl
   14001435a:	add    DWORD PTR [rax+0x1],eax
	...
   140014365:	add    BYTE PTR [rax],al
   140014367:	add    BYTE PTR [rdx],al
	...
   140014375:	add    BYTE PTR [rax],al
   140014377:	add    BYTE PTR [rax-0x1c],ch
   14001437a:	add    BYTE PTR [rax+0x1],al
	...
   140014385:	add    BYTE PTR [rax],al
   140014387:	add    BYTE PTR [rsi],ch
   140014389:	(bad)  
   14001438a:	push   r14
   14001438c:	rex.XB
   14001438d:	rex.B je 0x1400143fc
   140014390:	rex.RB js 0x1400143f6
   140014393:	gs jo  0x14001440a
   140014396:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14001439d:	rex
   14001439e:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140017000 <.pdata>:
   140017000:	adc    al,0x10
   140017002:	add    BYTE PTR [rax],al
   140017004:	pop    rdi
   140017005:	adc    BYTE PTR [rax],al
   140017007:	add    BYTE PTR [rax],ch
   140017009:	(bad)  
   14001700a:	add    DWORD PTR [rax],eax
   14001700c:	fcom   DWORD PTR [rax]
   14001700e:	add    BYTE PTR [rax],al
   140017010:	fst    QWORD PTR [rcx]
   140017012:	add    BYTE PTR [rax],al
   140017014:	and    al,0x1b
   140017016:	add    DWORD PTR [rax],eax
   140017018:	and    BYTE PTR [rdx],dl
   14001701a:	add    BYTE PTR [rax],al
   14001701c:	rex.WB adc al,BYTE PTR [r8]
   14001701f:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   140017023:	add    BYTE PTR [rax+0x12],ch
   140017026:	add    BYTE PTR [rax],al
   140017028:	rcl    BYTE PTR [rbx],0x0
   14001702b:	add    BYTE PTR [rax+0x1a],dh
   14001702e:	add    DWORD PTR [rax],eax
   140017030:	enter  0x13,0x0
   140017034:	sbb    BYTE PTR [rax+rax*1],dl
   140017037:	add    BYTE PTR [rax],ch
   140017039:	(bad)  
   14001703a:	add    DWORD PTR [rax],eax
   14001703c:	and    BYTE PTR [rax+rax*1],dl
   14001703f:	add    BYTE PTR [rcx+0x40000014],cl
   140017045:	sbb    al,BYTE PTR [rcx]
   140017047:	add    BYTE PTR [rsp+rdx*1+0x14cd0000],ah
   14001704e:	add    BYTE PTR [rax],al
   140017050:	rex.WR (bad) 
   140017052:	add    DWORD PTR [rax],eax
   140017054:	in     al,dx
   140017055:	adc    al,0x0
   140017057:	add    BYTE PTR [rbx],bl
   140017059:	adc    eax,0x1e280000
   14001705e:	add    DWORD PTR [rax],eax
   140017060:	and    al,0x15
   140017062:	add    BYTE PTR [rax],al
   140017064:	push   rsi
   140017065:	adc    eax,0x164c0000
   14001706a:	add    DWORD PTR [rax],eax
   14001706c:	mov    WORD PTR [rip+0x15e90000],ss        # 0x155ea7072
   140017072:	add    BYTE PTR [rax],al
   140017074:	xchg   esp,eax
   140017075:	adc    al,BYTE PTR [rcx]
   140017077:	add    al,dh
   140017079:	adc    eax,0x16110000
   14001707e:	add    BYTE PTR [rax],al
   140017080:	xchg   esp,eax
   140017081:	adc    al,BYTE PTR [rcx]
   140017083:	add    BYTE PTR [rax],bl
   140017085:	(bad)  
   140017086:	add    BYTE PTR [rax],al
   140017088:	(bad)  
   140017089:	(bad)  
   14001708a:	add    BYTE PTR [rax],al
   14001708c:	sub    BYTE PTR [rsi],bl
   14001708e:	add    DWORD PTR [rax],eax
   140017090:	je     0x1400170a8
   140017092:	add    BYTE PTR [rax],al
   140017094:	lea    edx,[rdi]
   140017096:	add    BYTE PTR [rax],al
   140017098:	sub    BYTE PTR [rdx],bl
   14001709a:	add    DWORD PTR [rax],eax
   14001709c:	xchg   esp,eax
   14001709d:	(bad)  
   14001709e:	add    BYTE PTR [rax],al
   1400170a0:	ret    
   1400170a1:	(bad)  
   1400170a2:	add    BYTE PTR [rax],al
   1400170a4:	sub    BYTE PTR [rsi],bl
   1400170a6:	add    DWORD PTR [rax],eax
   1400170a8:	int3   
   1400170a9:	(bad)  
   1400170aa:	add    BYTE PTR [rax],al
   1400170ac:	imul   ebx,DWORD PTR [rcx],0x1e3c0000
   1400170b2:	add    DWORD PTR [rax],eax
   1400170b4:	jo     0x1400170cf
   1400170b6:	add    BYTE PTR [rax],al
   1400170b8:	or     eax,0x2800001a
   1400170bd:	(bad)  
   1400170be:	add    DWORD PTR [rax],eax
   1400170c0:	adc    al,0x1a
   1400170c2:	add    BYTE PTR [rax],al
   1400170c4:	sbb    al,BYTE PTR [r8]
   1400170c7:	add    BYTE PTR [rsi+rbx*1],dh
   1400170ca:	add    DWORD PTR [rax],eax
   1400170cc:	rex.W sbb al,BYTE PTR [rax]
   1400170cf:	add    BYTE PTR [rbp+0x1a],dh
   1400170d2:	add    BYTE PTR [rax],al
   1400170d4:	xor    al,0x1e
   1400170d6:	add    DWORD PTR [rax],eax
   1400170d8:	jl     0x1400170f4
   1400170da:	add    BYTE PTR [rax],al
   1400170dc:	mov    ecx,0x2800001a
   1400170e1:	(bad)  
   1400170e2:	add    DWORD PTR [rax],eax
   1400170e4:	rcr    BYTE PTR [rdx],0x0
   1400170e7:	add    BYTE PTR [rip+0x1c00001c],cl        # 0x15c017109
   1400170ed:	adc    eax,DWORD PTR [rcx]
   1400170ef:	add    BYTE PTR [rsp+rbx*1],dl
   1400170f2:	add    BYTE PTR [rax],al
   1400170f4:	imul   ebx,DWORD PTR [rax+rax*1],0x0
   1400170f8:	sub    BYTE PTR [rsi],bl
   1400170fa:	add    DWORD PTR [rax],eax
   1400170fc:	cwde   
   1400170fd:	sbb    al,0x0
   1400170ff:	add    bh,al
   140017101:	sbb    al,0x0
   140017103:	add    BYTE PTR [rax],ch
   140017105:	(bad)  
   140017106:	add    DWORD PTR [rax],eax
   140017108:	rcr    BYTE PTR [rax+rax*1],1
   14001710b:	add    BYTE PTR [rsi+0x1d],cl
   14001710e:	add    BYTE PTR [rax],al
   140017110:	rex.WR (bad) 
   140017112:	add    DWORD PTR [rax],eax
   140017114:	push   rsp
   140017115:	sbb    eax,0x1e670000
   14001711a:	add    BYTE PTR [rax],al
   14001711c:	sbb    BYTE PTR [rip+0x1e700001],0x0        # 0x15e717124
   140017123:	add    BYTE PTR [rdi+0x4c00001e],dh
   140017129:	(bad)  
   14001712a:	add    DWORD PTR [rax],eax
   14001712c:	rcr    BYTE PTR [rsi],0x0
   14001712f:	add    BYTE PTR [rdi-0x13ffffe1],al
   140017135:	sbb    al,0x1
   140017137:	add    BYTE PTR [rdi+rbx*1+0x1fc10000],bl
   14001713e:	add    BYTE PTR [rax],al
   140017140:	xchg   esp,eax
   140017141:	adc    al,BYTE PTR [rcx]
   140017143:	add    al,cl
   140017145:	(bad)  
   140017146:	add    BYTE PTR [rax],al
   140017148:	jae    0x14001716c
   14001714a:	add    BYTE PTR [rax],al
   14001714c:	push   0x7c00011d
   140017151:	and    al,BYTE PTR [rax]
   140017153:	add    BYTE PTR [rbp+0x23],cl
   140017159:	sbb    eax,0x23940001
   14001715e:	add    BYTE PTR [rax],al
   140017160:	xchg   DWORD PTR [rax+rax*1],esp
   140017163:	add    ah,ch
   140017165:	sbb    al,0x1
   140017167:	add    BYTE PTR [rax-0x58ffffdc],dl
   14001716d:	and    al,0x0
   14001716f:	add    BYTE PTR [rdx+rdx*1+0x24c40001],dl
   140017176:	add    BYTE PTR [rax],al
   140017178:	std    
   140017179:	and    al,0x0
   14001717b:	add    BYTE PTR [rax],ch
   14001717d:	(bad)  
   14001717e:	add    DWORD PTR [rax],eax
   140017180:	sbb    al,0x25
   140017182:	add    BYTE PTR [rax],al
   140017184:	gs add BYTE PTR es:[rax],al
   140017188:	fcomp  QWORD PTR [rcx+rax*1]
   14001718b:	add    BYTE PTR [rsi+riz*1+0x0],ch
   14001718f:	add    BYTE PTR [rbp-0x23ffffd9],dh
   140017195:	sbb    al,0x1
   140017197:	add    BYTE PTR [rdi+riz*1+0x29c90000],bh
   14001719e:	add    BYTE PTR [rax],al
   1400171a0:	rcr    BYTE PTR [rcx+rax*1],0x0
   1400171a4:	shr    BYTE PTR [rcx],1
   1400171a6:	add    BYTE PTR [rax],al
   1400171a8:	cli    
   1400171a9:	sub    eax,DWORD PTR [rax]
   1400171ab:	add    BYTE PTR [rax+0x11c],dh
   1400171b1:	sub    al,0x0
   1400171b3:	add    ch,dl
   1400171b5:	sub    al,0x0
   1400171b7:	add    BYTE PTR [rsp+rbx*1+0x2cdc0001],ah
   1400171be:	add    BYTE PTR [rax],al
   1400171c0:	pop    rbx
   1400171c1:	sub    eax,0x118c0000
   1400171c6:	add    DWORD PTR [rax],eax
   1400171c8:	fs sub eax,0x2fbf0000
   1400171ce:	add    BYTE PTR [rax],al
   1400171d0:	jo     0x1400171ed
   1400171d2:	add    DWORD PTR [rax],eax
   1400171d4:	enter  0x2f,0x0
   1400171d8:	push   rsi
   1400171d9:	xor    BYTE PTR [rax],al
   1400171db:	add    BYTE PTR [rcx+rdx*1+0x305c0001],cl
   1400171e2:	add    BYTE PTR [rax],al
   1400171e4:	jl     0x140017216
   1400171e6:	add    BYTE PTR [rax],al
   1400171e8:	xchg   esp,eax
   1400171e9:	adc    al,BYTE PTR [rcx]
   1400171eb:	add    BYTE PTR [rax+rsi*1+0x30a90000],al
   1400171f2:	add    BYTE PTR [rax],al
   1400171f4:	rex.WR (bad) 
   1400171f6:	add    DWORD PTR [rax],eax
   1400171f8:	shl    BYTE PTR [rax],0x0
   1400171fb:	add    BYTE PTR [rsi],cl
   1400171fd:	xor    DWORD PTR [rax],eax
   1400171ff:	add    BYTE PTR [rax],ch
   140017201:	(bad)  
   140017202:	add    DWORD PTR [rax],eax
   140017204:	adc    al,0x31
   140017206:	add    BYTE PTR [rax],al
   140017208:	fnstenv [rcx]
   14001720a:	add    BYTE PTR [rax],al
   14001720c:	pop    rsp
   14001720d:	sbb    eax,DWORD PTR [rcx]
   14001720f:	add    BYTE PTR [rax],al
   140017211:	xor    al,BYTE PTR [rax]
   140017213:	add    bl,cl
   140017215:	xor    eax,DWORD PTR [rax]
   140017217:	add    BYTE PTR [rax+0x1b],dl
   14001721a:	add    DWORD PTR [rax],eax
   14001721c:	(bad)  
   14001721d:	xor    eax,DWORD PTR [rax]
   14001721f:	add    BYTE PTR [rsp+rsi*1],dl
   140017222:	add    BYTE PTR [rax],al
   140017224:	rex.WR (bad) 
   140017226:	add    DWORD PTR [rax],eax
   140017228:	sbb    al,0x34
   14001722a:	add    BYTE PTR [rax],al
   14001722c:	adc    al,0x35
   14001722e:	add    BYTE PTR [rax],al
   140017230:	mov    WORD PTR [rcx],ss
   140017232:	add    DWORD PTR [rax],eax
   140017234:	sbb    al,0x35
   140017236:	add    BYTE PTR [rax],al
   140017238:	push   0xffffffff94000035
   14001723d:	adc    al,0x1
   14001723f:	add    BYTE PTR [rax+0x35],dh
   140017242:	add    BYTE PTR [rax],al
   140017244:	fbstp  TBYTE PTR [rip+0x1b400000]        # 0x15b41724a
   14001724a:	add    DWORD PTR [rax],eax
   14001724c:	hlt    
   14001724d:	xor    eax,0x36630000
   140017252:	add    BYTE PTR [rax],al
   140017254:	mov    WORD PTR [rcx],ss
   140017256:	add    DWORD PTR [rax],eax
   140017258:	ins    BYTE PTR es:[rdi],dx
   140017259:	add    BYTE PTR ss:[rax],al
   14001725c:	or     al,0x37
   14001725e:	add    BYTE PTR [rax],al
   140017260:	in     al,dx
   140017261:	sbb    al,0x1
   140017263:	add    BYTE PTR [rdi+rsi*1],dl
   140017266:	add    BYTE PTR [rax],al
   140017268:	and    esi,DWORD PTR [rdi]
   14001726a:	add    BYTE PTR [rax],al
   14001726c:	xchg   esp,eax
   14001726d:	adc    al,BYTE PTR [rcx]
   14001726f:	add    BYTE PTR [rdi+rsi*1],ch
   140017272:	add    BYTE PTR [rax],al
   140017274:	rex.WX (bad) 
   140017276:	add    BYTE PTR [rax],al
   140017278:	xchg   esp,eax
   140017279:	adc    al,BYTE PTR [rcx]
   14001727b:	add    BYTE PTR [rax+0x37],dl
   14001727e:	add    BYTE PTR [rax],al
   140017280:	outs   dx,BYTE PTR ds:[rsi]
   140017281:	(bad)  
   140017282:	add    BYTE PTR [rax],al
   140017284:	xchg   esp,eax
   140017285:	adc    al,BYTE PTR [rcx]
   140017287:	add    BYTE PTR [rdi+rsi*1+0x0],dh
   14001728b:	add    BYTE PTR [rsi-0x6bffffc9],cl
   140017291:	adc    al,BYTE PTR [rcx]
   140017293:	add    BYTE PTR [rdi+rsi*1+0x390f0000],dl
   14001729a:	add    BYTE PTR [rax],al
   14001729c:	rcl    BYTE PTR [rax],1
   14001729e:	add    DWORD PTR [rax],eax
   1400172a0:	sbb    BYTE PTR [rcx],bh
   1400172a2:	add    BYTE PTR [rax],al
   1400172a4:	sub    bh,BYTE PTR [rcx]
   1400172a6:	add    BYTE PTR [rax],al
   1400172a8:	xchg   esp,eax
   1400172a9:	adc    al,BYTE PTR [rcx]
   1400172ab:	add    BYTE PTR [rax+0x39],dl
   1400172ae:	add    BYTE PTR [rax],al
   1400172b0:	outs   dx,DWORD PTR ds:[rsi]
   1400172b1:	cmp    DWORD PTR [rax],eax
   1400172b3:	add    al,bh
   1400172b5:	adc    BYTE PTR [rcx],al
   1400172b7:	add    BYTE PTR [rax+0x39],bh
   1400172ba:	add    BYTE PTR [rax],al
   1400172bc:	xchg   edi,eax
   1400172bd:	cmp    DWORD PTR [rax],eax
   1400172bf:	add    ah,bh
   1400172c1:	adc    BYTE PTR [rcx],al
   1400172c3:	add    BYTE PTR [rcx+rdi*1+0x39e00000],ch
   1400172ca:	add    BYTE PTR [rax],al
   1400172cc:	xchg   esp,eax
   1400172cd:	adc    al,BYTE PTR [rcx]
   1400172cf:	add    al,ch
   1400172d1:	cmp    DWORD PTR [rax],eax
   1400172d3:	add    BYTE PTR [rsi-0x73ffffc6],bl
   1400172d9:	adc    DWORD PTR [rcx],eax
   1400172db:	add    BYTE PTR [rdx+rdi*1+0x3ae10000],ah
   1400172e2:	add    BYTE PTR [rax],al
   1400172e4:	test   BYTE PTR [rcx],dl
   1400172e6:	add    DWORD PTR [rax],eax
   1400172e8:	call   0x146017327
   1400172ed:	cmp    eax,DWORD PTR [rax]
   1400172ef:	add    BYTE PTR [rdx+rdx*1+0x3b0c0001],dl
   1400172f6:	add    BYTE PTR [rax],al
   1400172f8:	cmp    r8d,DWORD PTR [r8]
   1400172fb:	add    BYTE PTR [rax],ch
   1400172fd:	(bad)  
   1400172fe:	add    DWORD PTR [rax],eax
   140017300:	cmp    r8,QWORD PTR [rax]
   140017303:	add    bl,dl
   140017305:	cmp    eax,DWORD PTR [rax]
   140017307:	add    BYTE PTR [rcx+rdx*1+0x3bdc0001],cl
   14001730e:	add    BYTE PTR [rax],al
   140017310:	std    
   140017311:	cmp    eax,DWORD PTR [rax]
   140017313:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   140017317:	add    BYTE PTR [rsp+rdi*1],bl
   14001731a:	add    BYTE PTR [rax],al
   14001731c:	test   DWORD PTR [rax+rax*1],edi
   14001731f:	add    al,bl
   140017321:	sbb    DWORD PTR [rcx],eax
   140017323:	add    BYTE PTR [rsp+rdi*1+0x3cc50000],cl
   14001732a:	add    BYTE PTR [rax],al
   14001732c:	sub    BYTE PTR [rsi],bl
   14001732e:	add    DWORD PTR [rax],eax
   140017330:	int3   
   140017331:	cmp    al,0x0
   140017333:	add    BYTE PTR [rdi],cl
   140017335:	cmp    eax,0x164c0000
   14001733a:	add    DWORD PTR [rax],eax
   14001733c:	sbb    BYTE PTR [rip+0x3e220000],bh        # 0x17e237342
   140017342:	add    BYTE PTR [rax],al
   140017344:	pushf  
   140017345:	adc    DWORD PTR [rcx],eax
   140017347:	add    BYTE PTR [rax],ch
   140017349:	add    BYTE PTR ds:[rax],al
   14001734c:	(bad)  
   14001734d:	add    BYTE PTR ds:[rax],al
   140017350:	xchg   esp,eax
   140017351:	adc    al,BYTE PTR [rcx]
   140017353:	add    BYTE PTR [rax+0x3e],cl
   140017356:	add    BYTE PTR [rax],al
   140017358:	cdq    
   140017359:	add    BYTE PTR ds:[rax],al
   14001735c:	rex.WR (bad) 
   14001735e:	add    DWORD PTR [rax],eax
   140017360:	movabs al,ds:0x4c00003ee100003e
   140017369:	(bad)  
   14001736a:	add    DWORD PTR [rax],eax
   14001736c:	call   0x1600173af
   140017371:	(bad)  
   140017372:	add    BYTE PTR [rax],al
   140017374:	xchg   esp,eax
   140017375:	adc    al,BYTE PTR [rcx]
   140017377:	add    BYTE PTR [rax],ch
   140017379:	(bad)  
   14001737a:	add    BYTE PTR [rax],al
   14001737c:	(bad)  
   14001737d:	(bad)  
   14001737e:	add    BYTE PTR [rax],al
   140017380:	xchg   esp,eax
   140017381:	adc    al,BYTE PTR [rcx]
   140017383:	add    BYTE PTR [rax+0x3f],cl
   140017386:	add    BYTE PTR [rax],al
   140017388:	adc    al,0x41
   14001738a:	add    BYTE PTR [rax],al
   14001738c:	in     al,dx
   14001738d:	sbb    al,0x1
   14001738f:	add    BYTE PTR [rcx+rax*2],bl
   140017392:	add    BYTE PTR [rax],al
   140017394:	rex.WRXB
   140017395:	rex.X add BYTE PTR [rax],al
   140017398:	int3   
   140017399:	adc    DWORD PTR [rcx],eax
   14001739b:	add    BYTE PTR [rax+0x42],bl
   14001739e:	add    BYTE PTR [rax],al
   1400173a0:	jl     0x1400173e4
   1400173a2:	add    BYTE PTR [rax],al
   1400173a4:	rex.WR (bad) 
   1400173a6:	add    DWORD PTR [rax],eax
   1400173a8:	test   BYTE PTR [rdx+0x0],al
   1400173ab:	add    BYTE PTR [rsi],al
   1400173ad:	rex.XB add BYTE PTR [r8],al
   1400173b0:	sub    BYTE PTR [rsi],bl
   1400173b2:	add    DWORD PTR [rax],eax
   1400173b4:	or     al,0x43
   1400173b6:	add    BYTE PTR [rax],al
   1400173b8:	mov    BYTE PTR [rbx+0x0],0x0
   1400173bc:	add    BYTE PTR [rdx],dl
   1400173be:	add    DWORD PTR [rax],eax
   1400173c0:	int3   
   1400173c1:	rex.XB add BYTE PTR [r8],al
   1400173c4:	rex.WXB
   1400173c5:	add    BYTE PTR [rax],r8b
   1400173c8:	rex.WR (bad) 
   1400173ca:	add    DWORD PTR [rax],eax
   1400173cc:	push   rsp
   1400173cd:	add    BYTE PTR [rax],r8b
   1400173d0:	js     0x140017416
   1400173d2:	add    BYTE PTR [rax],al
   1400173d4:	xchg   esp,eax
   1400173d5:	adc    al,BYTE PTR [rcx]
   1400173d7:	add    BYTE PTR [rax-0x3effffbc],al
   1400173dd:	add    BYTE PTR [rax],r8b
   1400173e0:	rex.WR (bad) 
   1400173e2:	add    DWORD PTR [rax],eax
   1400173e4:	enter  0x44,0x0
   1400173e8:	fiadd  WORD PTR [rax+rax*1+0x0]
   1400173ec:	rex.WR (bad) 
   1400173ee:	add    DWORD PTR [rax],eax
   1400173f0:	in     al,0x44
   1400173f2:	add    BYTE PTR [rax],al
   1400173f4:	or     al,BYTE PTR [rbp+0x0]
   1400173f7:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   1400173fb:	add    BYTE PTR [rax*2+0x45eb0000],bh
   140017402:	add    BYTE PTR [rax],al
   140017404:	sub    BYTE PTR [rsi],bl
   140017406:	add    DWORD PTR [rax],eax
   140017408:	or     BYTE PTR [rsi+0x0],al
   14001740b:	add    BYTE PTR [rsi+0x46],cl
   14001740e:	add    BYTE PTR [rax],al
   140017410:	rex.WR (bad) 
   140017412:	add    DWORD PTR [rax],eax
   140017414:	push   rsp
   140017415:	rex.RX add BYTE PTR [rax],r8b
   140017418:	xchg   DWORD PTR [rsi+0x0],eax
   14001741b:	add    BYTE PTR [rdx+rdx*1],dh
   14001741e:	add    DWORD PTR [rax],eax
   140017420:	nop
   140017421:	rex.RX add BYTE PTR [rax],r8b
   140017424:	leave  
   140017425:	rex.RX add BYTE PTR [rax],r8b
   140017428:	sub    BYTE PTR [rsi],bl
   14001742a:	add    DWORD PTR [rax],eax
   14001742c:	lock rex.RX add BYTE PTR [rax],r8b
   140017430:	test   DWORD PTR [rax+0x0],ecx
   140017433:	add    BYTE PTR [rax+0x12],al
   140017436:	add    DWORD PTR [rax],eax
   140017438:	pushf  
   140017439:	rex.W add BYTE PTR [rax],al
   14001743c:	fisttp WORD PTR [rax+0x0]
   14001743f:	add    BYTE PTR [rdx+rdx*1+0x49200001],dl
   140017446:	add    BYTE PTR [rax],al
   140017448:	(bad)  
   140017449:	rex.WXB add BYTE PTR [r8],al
   14001744c:	jo     0x140017460
   14001744e:	add    DWORD PTR [rax],eax
   140017450:	cwde   
   140017451:	rex.WXB add BYTE PTR [r8],al
   140017454:	mov    eax,0x9400004b
   140017459:	adc    al,BYTE PTR [rcx]
   14001745b:	add    al,al
   14001745d:	rex.WXB add BYTE PTR [r8],al
   140017460:	jmp    0x1400174ad
   140017462:	add    BYTE PTR [rax],al
   140017464:	xchg   esp,eax
   140017465:	adc    al,BYTE PTR [rcx]
   140017467:	add    ah,dh
   140017469:	rex.WXB add BYTE PTR [r8],al
   14001746c:	sbb    ecx,DWORD PTR [rax+rax*1+0x0]
   140017470:	xchg   esp,eax
   140017471:	adc    al,BYTE PTR [rcx]
   140017473:	add    BYTE PTR [rsp+rcx*2],ah
   140017476:	add    BYTE PTR [rax],al
   140017478:	js     0x1400174c9
   14001747a:	add    BYTE PTR [rax],al
   14001747c:	pushf  
   14001747d:	adc    al,BYTE PTR [rcx]
   14001747f:	add    BYTE PTR [rax+0x6d00004f],al
   140017485:	push   rax
   140017486:	add    BYTE PTR [rax],al
   140017488:	hlt    
   140017489:	adc    al,BYTE PTR [rcx]
   14001748b:	add    BYTE PTR [rax+rdx*2+0x0],dh
   14001748f:	add    BYTE PTR [rdx+rdx*2],cl
   140017492:	add    BYTE PTR [rax],al
   140017494:	add    al,0x13
   140017496:	add    DWORD PTR [rax],eax
   140017498:	adc    al,0x52
   14001749a:	add    BYTE PTR [rax],al
   14001749c:	rex.WR push rbx
   14001749e:	add    BYTE PTR [rax],al
   1400174a0:	sbb    al,0x13
   1400174a2:	add    DWORD PTR [rax],eax
   1400174a4:	fs push rbx
   1400174a6:	add    BYTE PTR [rax],al
   1400174a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400174a9:	push   rbx
   1400174aa:	add    BYTE PTR [rax],al
   1400174ac:	xchg   esp,eax
   1400174ad:	adc    al,BYTE PTR [rcx]
   1400174af:	add    BYTE PTR [rbx+rdx*2+0x54640000],ch
   1400174b6:	add    BYTE PTR [rax],al
   1400174b8:	xor    al,0x13
   1400174ba:	add    DWORD PTR [rax],eax
   1400174bc:	ins    BYTE PTR es:[rdi],dx
   1400174bd:	push   rsp
   1400174be:	add    BYTE PTR [rax],al
   1400174c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400174c1:	push   rsp
   1400174c2:	add    BYTE PTR [rax],al
   1400174c4:	sub    BYTE PTR [rsi],bl
   1400174c6:	add    DWORD PTR [rax],eax
   1400174c8:	lods   al,BYTE PTR ds:[rsi]
   1400174c9:	push   rsp
   1400174ca:	add    BYTE PTR [rax],al
   1400174cc:	in     al,0x54
   1400174ce:	add    BYTE PTR [rax],al
   1400174d0:	sub    BYTE PTR [rsi],bl
   1400174d2:	add    DWORD PTR [rax],eax
   1400174d4:	in     al,dx
   1400174d5:	push   rsp
   1400174d6:	add    BYTE PTR [rax],al
   1400174d8:	outs   dx,BYTE PTR ds:[rsi]
   1400174d9:	push   rbp
   1400174da:	add    BYTE PTR [rax],al
   1400174dc:	in     al,dx
   1400174dd:	sbb    al,0x1
   1400174df:	add    BYTE PTR [rbp+rdx*2+0x0],dh
   1400174e3:	add    cl,ah
   1400174e5:	push   rbp
   1400174e6:	add    BYTE PTR [rax],al
   1400174e8:	push   rsp
   1400174e9:	adc    eax,DWORD PTR [rcx]
   1400174eb:	add    al,ch
   1400174ed:	push   rbp
   1400174ee:	add    BYTE PTR [rax],al
   1400174f0:	pop    rcx
   1400174f1:	push   rsi
   1400174f2:	add    BYTE PTR [rax],al
   1400174f4:	adc    rax,QWORD PTR [rcx]
   1400174f7:	add    BYTE PTR [rax-0x33ffffaa],ah
   1400174fd:	push   rsi
   1400174fe:	add    BYTE PTR [rax],al
   140017500:	rex adc eax,DWORD PTR [rcx]
   140017503:	add    ah,dl
   140017505:	push   rsi
   140017506:	add    BYTE PTR [rax],al
   140017508:	xor    dl,BYTE PTR [rdi+0x0]
   14001750b:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   14001750f:	add    BYTE PTR [rax+0x57],cl
   140017512:	add    BYTE PTR [rax],al
   140017514:	addr32 push rdi
   140017516:	add    BYTE PTR [rax],al
   140017518:	rex.WR (bad) 
   14001751a:	add    DWORD PTR [rax],eax
   14001751c:	jo     0x140017575
   14001751e:	add    BYTE PTR [rax],al
   140017520:	nop
   140017521:	push   rdi
   140017522:	add    BYTE PTR [rax],al
   140017524:	rex.WR (bad) 
   140017526:	add    DWORD PTR [rax],eax
   140017528:	clc    
   140017529:	push   rdi
   14001752a:	add    BYTE PTR [rax],al
   14001752c:	(bad)  
   14001752d:	pop    rcx
   14001752e:	add    BYTE PTR [rax],al
   140017530:	(bad)  
   140017531:	adc    eax,DWORD PTR [rcx]
   140017533:	add    ah,bl
   140017535:	pop    rcx
   140017536:	add    BYTE PTR [rax],al
   140017538:	and    eax,0x4c00005a
   14001753d:	(bad)  
   14001753e:	add    DWORD PTR [rax],eax
   140017540:	sub    al,0x5a
   140017542:	add    BYTE PTR [rax],al
   140017544:	std    
   140017545:	pop    rdx
   140017546:	add    BYTE PTR [rax],al
   140017548:	jl     0x14001755d
   14001754a:	add    DWORD PTR [rax],eax
   14001754c:	add    al,0x5b
   14001754e:	add    BYTE PTR [rax],al
   140017550:	int    0x5b
   140017552:	add    BYTE PTR [rax],al
   140017554:	in     al,0x13
   140017556:	add    DWORD PTR [rax],eax
   140017558:	(bad)  
   140017559:	pop    rbx
   14001755a:	add    BYTE PTR [rax],al
   14001755c:	add    BYTE PTR [rbp+0x0],bl
   14001755f:	add    BYTE PTR [rbx+rbx*1],ah
   140017562:	add    DWORD PTR [rax],eax
   140017564:	or     BYTE PTR [rbp+0x0],bl
   140017567:	add    BYTE PTR [rbp+rbx*2+0x13840000],bl
   14001756e:	add    DWORD PTR [rax],eax
   140017570:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017571:	pop    rbp
   140017572:	add    BYTE PTR [rax],al
   140017574:	rex.RB pop r14
   140017576:	add    BYTE PTR [rax],al
   140017578:	or     al,0x14
   14001757a:	add    DWORD PTR [rax],eax
   14001757c:	rex.WR pop rsi
   14001757e:	add    BYTE PTR [rax],al
   140017580:	popf   
   140017581:	pop    rsi
   140017582:	add    BYTE PTR [rax],al
   140017584:	mov    esp,0xa4000113
   140017589:	pop    rsi
   14001758a:	add    BYTE PTR [rax],al
   14001758c:	out    0x5e,eax
   14001758e:	add    BYTE PTR [rax],al
   140017590:	rex.WR (bad) 
   140017592:	add    DWORD PTR [rax],eax
   140017594:	lock pop rsi
   140017596:	add    BYTE PTR [rax],al
   140017598:	rex.WRX pop rdi
   14001759a:	add    BYTE PTR [rax],al
   14001759c:	sub    BYTE PTR [rsi],bl
   14001759e:	add    DWORD PTR [rax],eax
   1400175a0:	push   rsp
   1400175a1:	pop    rdi
   1400175a2:	add    BYTE PTR [rax],al
   1400175a4:	imul   ebx,DWORD PTR [rdi+0x0],0x1129400
   1400175ab:	add    BYTE PTR [rax+0x5f],dh
   1400175ae:	add    BYTE PTR [rax],al
   1400175b0:	test   DWORD PTR [rdi+0x0],ebx
   1400175b3:	add    BYTE PTR [rdx+rdx*1+0x5f8c0001],dl
   1400175ba:	add    BYTE PTR [rax],al
   1400175bc:	mov    esi,0x4c00005f
   1400175c1:	(bad)  
   1400175c2:	add    DWORD PTR [rax],eax
   1400175c4:	(bad)  
   1400175c5:	pop    rdi
   1400175c6:	add    BYTE PTR [rax],al
   1400175c8:	fistp  WORD PTR [rdi+0x0]
   1400175cb:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   1400175cf:	add    al,ch
   1400175d1:	pop    rdi
   1400175d2:	add    BYTE PTR [rax],al
   1400175d4:	add    esp,DWORD PTR [rax+0x0]
   1400175d7:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   1400175db:	add    BYTE PTR [rax+riz*2],cl
   1400175de:	add    BYTE PTR [rax],al
   1400175e0:	and    DWORD PTR [rcx+0x0],0x1139800
   1400175e7:	add    BYTE PTR [rax+0xf000061],cl
   1400175ed:	(bad)  
   1400175ee:	add    BYTE PTR [rax],al
   1400175f0:	cld    
   1400175f1:	adc    eax,DWORD PTR [rcx]
   1400175f3:	add    BYTE PTR [rdx+riz*2],bh
   1400175f6:	add    BYTE PTR [rax],al
   1400175f8:	xchg   ecx,eax
   1400175f9:	(bad)  
   1400175fa:	add    BYTE PTR [rax],al
   1400175fc:	xchg   esp,eax
   1400175fd:	adc    al,BYTE PTR [rcx]
   1400175ff:	add    BYTE PTR [rax-0x24ffff9e],ch
   140017605:	(bad)  
   140017606:	add    BYTE PTR [rax],al
   140017608:	rex.WR (bad) 
   14001760a:	add    DWORD PTR [rax],eax
   14001760c:	hlt    
   14001760d:	(bad)  
   14001760e:	add    BYTE PTR [rax],al
   140017610:	adc    al,0x63
   140017612:	add    BYTE PTR [rax],al
   140017614:	xchg   esp,eax
   140017615:	adc    al,BYTE PTR [rcx]
   140017617:	add    BYTE PTR [rbx+riz*2],bl
   14001761a:	add    BYTE PTR [rax],al
   14001761c:	push   0x63
   14001761e:	add    BYTE PTR [rax],al
   140017620:	sub    BYTE PTR [rsi],bl
   140017622:	add    DWORD PTR [rax],eax
   140017624:	jo     0x140017689
   140017626:	add    BYTE PTR [rax],al
   140017628:	nop
   140017629:	movsxd eax,DWORD PTR [rax]
   14001762b:	add    BYTE PTR [rdx+rdx*1+0x64000001],dl
   140017632:	add    BYTE PTR [rax],al
   140017634:	add    BYTE PTR fs:[eax],al
   140017638:	and    BYTE PTR [rcx+rax*1],dl
   14001763b:	add    BYTE PTR [rax+0x64],dh
   14001763e:	add    BYTE PTR [rax],al
   140017640:	fsub   QWORD PTR [rax+rax*1+0x0]
   140017644:	and    al,0x14
   140017646:	add    DWORD PTR [rax],eax
   140017648:	in     al,0x64
   14001764a:	add    BYTE PTR [rax],al
   14001764c:	(bad)  
   14001764d:	add    BYTE PTR gs:[rax],al
   140017650:	push   rsp
   140017651:	adc    al,0x1
   140017653:	add    ah,ch
   140017655:	add    BYTE PTR gs:[rax],al
   140017658:	push   rcx
   140017659:	data16 add BYTE PTR [rax],al
   14001765c:	je     0x140017672
   14001765e:	add    DWORD PTR [rax],eax
   140017660:	pop    rax
   140017661:	data16 add BYTE PTR [rax],al
   140017664:	jbe    0x1400176cc
   140017666:	add    BYTE PTR [rax],al
   140017668:	rex.WR adc al,0x1
   14001766b:	add    BYTE PTR [rsi+riz*2+0x0],bh
   14001766f:	add    BYTE PTR [rdi-0x6bffff9a],dh
   140017675:	adc    al,BYTE PTR [rcx]
   140017677:	add    al,dl
   140017679:	data16 add BYTE PTR [rax],al
   14001767c:	mov    ah,0x6b
   14001767e:	add    BYTE PTR [rax],al
   140017680:	mov    BYTE PTR [rcx+rax*1],dl
   140017683:	add    al,dl
   140017685:	imul   eax,DWORD PTR [rax],0x0
   140017688:	fisubr DWORD PTR [rax+rax*1+0x0]
   14001768c:	nop
   14001768d:	adc    al,0x1
   14001768f:	add    al,ah
   140017691:	ins    BYTE PTR es:[rdi],dx
   140017692:	add    BYTE PTR [rax],al
   140017694:	or     eax,0x4c00006d
   140017699:	(bad)  
   14001769a:	add    DWORD PTR [rax],eax
   14001769c:	xor    al,0x6d
   14001769e:	add    BYTE PTR [rax],al
   1400176a0:	pop    rsi
   1400176a1:	ins    DWORD PTR es:[rdi],dx
   1400176a2:	add    BYTE PTR [rax],al
   1400176a4:	rex.WR (bad) 
   1400176a6:	add    DWORD PTR [rax],eax
   1400176a8:	jl     0x140017717
   1400176aa:	add    BYTE PTR [rax],al
   1400176ac:	shr    BYTE PTR [rbp+0x0],0x0
   1400176b0:	sub    BYTE PTR [rsi],bl
   1400176b2:	add    DWORD PTR [rax],eax
   1400176b4:	enter  0x6d,0x0
   1400176b8:	add    DWORD PTR [rsi+0x0],ebp
   1400176bb:	add    BYTE PTR [rax],ch
   1400176bd:	(bad)  
   1400176be:	add    DWORD PTR [rax],eax
   1400176c0:	or     BYTE PTR [rsi+0x0],ch
   1400176c3:	add    BYTE PTR [rdx+0x6e],ah
   1400176c6:	add    BYTE PTR [rax],al
   1400176c8:	xchg   esp,eax
   1400176c9:	adc    al,0x1
   1400176cb:	add    BYTE PTR [rax+0x6e],ch
   1400176ce:	add    BYTE PTR [rax],al
   1400176d0:	(bad)  
   1400176d1:	outs   dx,BYTE PTR ds:[rsi]
   1400176d2:	add    BYTE PTR [rax],al
   1400176d4:	rex.WR (bad) 
   1400176d6:	add    DWORD PTR [rax],eax
   1400176d8:	mov    al,0x6e
   1400176da:	add    BYTE PTR [rax],al
   1400176dc:	(bad)  
   1400176dd:	outs   dx,DWORD PTR ds:[rsi]
   1400176de:	add    BYTE PTR [rax],al
   1400176e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400176e1:	adc    al,0x1
   1400176e3:	add    BYTE PTR [rax-0x2effff91],bl
   1400176e9:	outs   dx,DWORD PTR ds:[rsi]
   1400176ea:	add    BYTE PTR [rax],al
   1400176ec:	xchg   esp,eax
   1400176ed:	adc    al,BYTE PTR [rcx]
   1400176ef:	add    al,bl
   1400176f1:	outs   dx,DWORD PTR ds:[rsi]
   1400176f2:	add    BYTE PTR [rax],al
   1400176f4:	pop    rax
   1400176f5:	jo     0x1400176f7
   1400176f7:	add    BYTE PTR [rsi+rbx*1+0x70600001],bh
   1400176fe:	add    BYTE PTR [rax],al
   140017700:	(bad)  [rax+0x0]
   140017703:	add    BYTE PTR [rsi+rbx*1+0x70e40001],bh
   14001770a:	add    BYTE PTR [rax],al
   14001770c:	data16 jno 0x14001770f
   14001770f:	add    BYTE PTR [rsi+rbx*1+0x716c0001],bh
   140017716:	add    BYTE PTR [rax],al
   140017718:	(bad)  
   140017719:	jb     0x14001771b
   14001771b:	add    BYTE PTR [rax],ch
   14001771d:	(bad)  
   14001771e:	add    DWORD PTR [rax],eax
   140017720:	or     al,0x72
   140017722:	add    BYTE PTR [rax],al
   140017724:	sub    al,0x72
   140017726:	add    BYTE PTR [rax],al
   140017728:	rcl    BYTE PTR [rcx+rax*1],1
   14001772b:	add    BYTE PTR [rdx+rsi*2],dh
   14001772e:	add    BYTE PTR [rax],al
   140017730:	push   rbx
   140017731:	jb     0x140017733
   140017733:	add    BYTE PTR [rax+0x5c000114],dh
   140017739:	jb     0x14001773b
   14001773b:	add    BYTE PTR [rcx+0x72],bh
   14001773e:	add    BYTE PTR [rax],al
   140017740:	xchg   esp,eax
   140017741:	adc    al,BYTE PTR [rcx]
   140017743:	add    BYTE PTR [rax-0x3bffff8e],al
   140017749:	jb     0x14001774b
   14001774b:	add    BYTE PTR [rax],ch
   14001774d:	(bad)  
   14001774e:	add    DWORD PTR [rax],eax
   140017750:	int3   
   140017751:	jb     0x140017753
   140017753:	add    BYTE PTR [rbx+0x73],dl
   140017756:	add    BYTE PTR [rax],al
   140017758:	in     al,dx
   140017759:	sbb    al,0x1
   14001775b:	add    BYTE PTR [rbx+rsi*2+0x0],bl
   14001775f:	add    BYTE PTR [rdi],dl
   140017761:	je     0x140017763
   140017763:	add    al,dh
   140017765:	adc    al,0x1
   140017767:	add    BYTE PTR [rax],ah
   140017769:	je     0x14001776b
   14001776b:	add    BYTE PTR [rdi+0x74],bh
   14001776e:	add    BYTE PTR [rax],al
   140017770:	mov    WORD PTR [rcx],ss
   140017772:	add    DWORD PTR [rax],eax
   140017774:	cmp    al,0x75
   140017776:	add    BYTE PTR [rax],al
   140017778:	shl    BYTE PTR [rsi+0x0],cl
   14001777b:	add    ah,ch
   14001777d:	sbb    al,0x1
   14001777f:	add    BYTE PTR [rdi+rsi*2+0x77f90000],al
   140017786:	add    BYTE PTR [rax],al
   140017788:	sbb    BYTE PTR [rip+0x78000001],dl        # 0x1b801778f
   14001778e:	add    BYTE PTR [rax],al
   140017790:	(bad)  
   140017791:	js     0x140017793
   140017793:	add    BYTE PTR [rax],ch
   140017795:	(bad)  
   140017796:	add    DWORD PTR [rax],eax
   140017798:	push   0xffffffff90000078
   14001779d:	js     0x14001779f
   14001779f:	add    BYTE PTR [rdx+rdx*1+0x78980001],dl
   1400177a6:	add    BYTE PTR [rax],al
   1400177a8:	rex jns 0x1400177ab
   1400177ab:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   1400177af:	add    BYTE PTR [rax+0x79],cl
   1400177b2:	add    BYTE PTR [rax],al
   1400177b4:	(bad)  
   1400177b7:	add    al,bl
   1400177b9:	sbb    DWORD PTR [rcx],eax
   1400177bb:	add    ah,cl
   1400177bd:	jns    0x1400177bf
   1400177bf:	add    BYTE PTR [rdx+0x7a],bl
   1400177c2:	add    BYTE PTR [rax],al
   1400177c4:	in     al,dx
   1400177c5:	sbb    al,0x1
   1400177c7:	add    BYTE PTR [rax+0x7a],ah
   1400177ca:	add    BYTE PTR [rax],al
   1400177cc:	rex.B jl 0x1400177cf
   1400177cf:	add    BYTE PTR [rbp+rdx*1+0x7c480001],ch
   1400177d6:	add    BYTE PTR [rax],al
   1400177d8:	add    bh,BYTE PTR [rbp+0x0]
   1400177db:	add    BYTE PTR [rax],bh
   1400177dd:	adc    eax,0x7d080001
   1400177e2:	add    BYTE PTR [rax],al
   1400177e4:	fs jg  0x1400177e7
   1400177e7:	add    BYTE PTR [rbp+rdx*1+0x1],bl
   1400177eb:	add    BYTE PTR [rdi+rdi*2+0x0],ch
   1400177ef:	add    BYTE PTR [rdx],bl
   1400177f1:	(bad)  
   1400177f2:	add    BYTE PTR [rax],al
   1400177f4:	mov    WORD PTR [rip+0xffffffff82700001],ss        # 0xc27177fb
   1400177fa:	add    BYTE PTR [rax],al
   1400177fc:	mov    ebp,0xc8000082
   140017801:	adc    eax,0x83080001
   140017806:	add    BYTE PTR [rax],al
   140017808:	add    DWORD PTR [r8],0x0
   14001780c:	sub    BYTE PTR [rsi],bl
   14001780e:	add    DWORD PTR [rax],eax
   140017810:	nop
   140017811:	add    DWORD PTR [rax],0x0
   140017814:	mov    ah,0x85
   140017816:	add    BYTE PTR [rax],al
   140017818:	in     al,dx
   140017819:	adc    eax,0x85d00001
   14001781e:	add    BYTE PTR [rax],al
   140017820:	js     0x1400177a8
   140017822:	add    BYTE PTR [rax],al
   140017824:	sbb    BYTE PTR [rsi],dl
   140017826:	add    DWORD PTR [rax],eax
   140017828:	add    BYTE PTR [rsi-0x78fb0000],0x0
   14001782f:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   140017833:	add    BYTE PTR [rdi+rax*4],cl
   140017836:	add    BYTE PTR [rax],al
   140017838:	ja     0x1400177c1
   14001783a:	add    BYTE PTR [rax],al
   14001783c:	rex.WR (bad) 
   14001783e:	add    DWORD PTR [rax],eax
   140017840:	movabs al,ds:0x4c0000886c000087
   140017849:	(bad)  
   14001784a:	add    DWORD PTR [rax],eax
   14001784c:	je     0x1400177d6
   14001784e:	add    BYTE PTR [rax],al
   140017850:	loop   0x1400177dc
   140017852:	add    BYTE PTR [rax],al
   140017854:	sbb    al,0x16
   140017856:	add    DWORD PTR [rax],eax
   140017858:	call   0x1450178e7
   14001785d:	mov    eax,DWORD PTR [rax]
   14001785f:	add    BYTE PTR [rdx+rdx*1-0x74f3ffff],dl
   140017866:	add    BYTE PTR [rax],al
   140017868:	outs   dx,DWORD PTR ds:[rsi]
   140017869:	mov    eax,DWORD PTR [rax]
   14001786b:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   14001786f:	add    BYTE PTR [rax-0x5bffff75],al
   140017875:	mov    eax,DWORD PTR [rax]
   140017877:	add    BYTE PTR [rax],bh
   140017879:	(bad)  
   14001787a:	add    DWORD PTR [rax],eax
   14001787c:	mov    al,0x8b
   14001787e:	add    BYTE PTR [rax],al
   140017880:	enter  0x8b,0x0
   140017884:	rex (bad) 
   140017886:	add    DWORD PTR [rax],eax
   140017888:	ror    BYTE PTR [rbx-0x742f0000],1
   14001788e:	add    BYTE PTR [rax],al
   140017890:	rex.R (bad) 
   140017892:	add    DWORD PTR [rax],eax
   140017894:	loopne 0x140017821
   140017896:	add    BYTE PTR [rax],al
   140017898:	loope  0x140017825
   14001789a:	add    BYTE PTR [rax],al
   14001789c:	rex.W (bad) 
   14001789e:	add    DWORD PTR [rax],eax
   1400178a0:	call   0xc0017930
   1400178a5:	mov    WORD PTR [rax],es
   1400178a7:	add    BYTE PTR [rax],ch
   1400178a9:	(bad)  
   1400178aa:	add    DWORD PTR [rax],eax
   1400178ac:	mov    BYTE PTR [rax+rax*1+0x8cb800],cl
   1400178b3:	add    BYTE PTR [rdx+rdx*1-0x733fffff],dl
   1400178ba:	add    BYTE PTR [rax],al
   1400178bc:	and    eax,0x4c00008d
   1400178c1:	(bad)  
   1400178c2:	add    DWORD PTR [rax],eax
   1400178c4:	sub    al,0x8d
   1400178c6:	add    BYTE PTR [rax],al
   1400178c8:	pop    rbp
   1400178c9:	lea    eax,[rax]
   1400178cb:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   1400178cf:	add    ah,ch
   1400178d1:	lea    eax,[rax]
   1400178d3:	add    BYTE PTR [rdx-0x72],bl
   1400178d6:	add    BYTE PTR [rax],al
   1400178d8:	push   rsp
   1400178d9:	(bad)  
   1400178da:	add    DWORD PTR [rax],eax
   1400178dc:	(bad)  
   1400178dd:	mov    es,WORD PTR [rax]
   1400178df:	add    BYTE PTR [rcx+0x4c00008e],al
   1400178e5:	(bad)  
   1400178e6:	add    DWORD PTR [rax],eax
   1400178e8:	movabs al,ds:0x2800008ed900008e
   1400178f1:	(bad)  
   1400178f2:	add    DWORD PTR [rax],eax
   1400178f4:	loopne 0x140017884
   1400178f6:	add    BYTE PTR [rax],al
   1400178f8:	movabs eax,ds:0xa8000116f800008f
   140017901:	pop    QWORD PTR [rax]
   140017903:	add    BYTE PTR [rsp+rdx*4+0x0],bl
   140017907:	add    ah,bl
   140017909:	(bad)  
   14001790a:	add    DWORD PTR [rax],eax
   14001790c:	fs xchg esp,eax
   14001790e:	add    BYTE PTR [rax],al
   140017910:	leave  
   140017911:	xchg   esi,eax
   140017912:	add    BYTE PTR [rax],al
   140017914:	cmp    al,0x17
   140017916:	add    DWORD PTR [rax],eax
   140017918:	rcl    BYTE PTR [rsi-0x68590000],1
   14001791e:	add    BYTE PTR [rax],al
   140017920:	je     0x140017939
   140017922:	add    DWORD PTR [rax],eax
   140017924:	fcom   QWORD PTR [rdi-0x676e0000]
   14001792a:	add    BYTE PTR [rax],al
   14001792c:	adc    BYTE PTR [rdi],dl
   14001792e:	add    DWORD PTR [rax],eax
   140017930:	cwde   
   140017931:	cwde   
   140017932:	add    BYTE PTR [rax],al
   140017934:	xchg   ebp,eax
   140017935:	(bad)  
   140017936:	add    BYTE PTR [rax],al
   140017938:	test   al,0x17
   14001793a:	add    DWORD PTR [rax],eax
   14001793c:	pushf  
   14001793d:	(bad)  
   14001793e:	add    BYTE PTR [rax],al
   140017940:	lahf   
   140017941:	pushf  
   140017942:	add    BYTE PTR [rax],al
   140017944:	push   rsp
   140017945:	(bad)  
   140017946:	add    DWORD PTR [rax],eax
   140017948:	test   al,0x9c
   14001794a:	add    BYTE PTR [rax],al
   14001794c:	sti    
   14001794d:	pushf  
   14001794e:	add    BYTE PTR [rax],al
   140017950:	xchg   esp,eax
   140017951:	adc    al,BYTE PTR [rcx]
   140017953:	add    BYTE PTR [rbx*4-0x616a0000],al
   14001795a:	add    BYTE PTR [rax],al
   14001795c:	movabs al,ds:0xc000009e9c000116
   140017965:	movabs al,ds:0xa0c8000117900000
   14001796e:	add    BYTE PTR [rax],al
   140017970:	out    0xa1,al
   140017972:	add    BYTE PTR [rax],al
   140017974:	mov    esp,0xec00011e
   140017979:	movabs eax,ds:0x12940000a2130000
   140017982:	add    DWORD PTR [rax],eax
   140017984:	sbb    al,0xa2
   140017986:	add    BYTE PTR [rax],al
   140017988:	rex.RB movabs ds:0xa2600001164c0000,al
   140017992:	add    BYTE PTR [rax],al
   140017994:	fwait
   140017995:	movabs ds:0xa2b400011e280000,al
   14001799e:	add    BYTE PTR [rax],al
   1400179a0:	cmp    eax,0xec0000a3
   1400179a5:	sbb    al,0x1
   1400179a7:	add    BYTE PTR [rbx+riz*4+0x0],al
   1400179ab:	add    BYTE PTR [rbx-0x5d],bh
   1400179ae:	add    BYTE PTR [rax],al
   1400179b0:	fcom   DWORD PTR [rdi]
   1400179b2:	add    DWORD PTR [rax],eax
   1400179b4:	test   BYTE PTR [rbx-0x5c1b0000],ah
   1400179ba:	add    BYTE PTR [rax],al
   1400179bc:	rex.WR (bad) 
   1400179be:	add    DWORD PTR [rax],eax
   1400179c0:	in     al,dx
   1400179c1:	movabs ds:0x17e00000a4f20000,eax
   1400179ca:	add    DWORD PTR [rax],eax
   1400179cc:	clc    
   1400179cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400179ce:	add    BYTE PTR [rax],al
   1400179d0:	retf   
   1400179d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400179d2:	add    BYTE PTR [rax],al
   1400179d4:	mov    WORD PTR [rcx],ss
   1400179d6:	add    DWORD PTR [rax],eax
   1400179d8:	(bad)  
   1400179d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400179da:	add    BYTE PTR [rax],al
   1400179dc:	fisub  WORD PTR [rsi+0x17e80000]
   1400179e2:	add    DWORD PTR [rax],eax
   1400179e4:	in     al,0xa6
   1400179e6:	add    BYTE PTR [rax],al
   1400179e8:	push   rax
   1400179e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400179ea:	add    BYTE PTR [rax],al
   1400179ec:	test   BYTE PTR [rcx],dl
   1400179ee:	add    DWORD PTR [rax],eax
   1400179f0:	pop    rax
   1400179f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400179f2:	add    BYTE PTR [rax],al
   1400179f4:	push   rdx
   1400179f5:	stos   DWORD PTR es:[rdi],eax
   1400179f6:	add    BYTE PTR [rax],al
   1400179f8:	call   0x198017b14
   1400179fd:	stos   DWORD PTR es:[rdi],eax
   1400179fe:	add    BYTE PTR [rax],al
   140017a00:	es scas al,BYTE PTR es:[rdi]
   140017a02:	add    BYTE PTR [rax],al
   140017a04:	add    BYTE PTR [rax],bl
   140017a06:	add    DWORD PTR [rax],eax
   140017a08:	sub    al,0xae
   140017a0a:	add    BYTE PTR [rax],al
   140017a0c:	ret    0xae
   140017a0f:	add    al,dh
   140017a11:	(bad)  
   140017a12:	add    DWORD PTR [rax],eax
   140017a14:	enter  0xae,0x0
   140017a18:	sub    eax,0x380000b0
   140017a1d:	sbb    BYTE PTR [rcx],al
   140017a1f:	add    BYTE PTR [rax+rsi*4],dh
   140017a22:	add    BYTE PTR [rax],al
   140017a24:	mov    al,0xb0
   140017a26:	add    BYTE PTR [rax],al
   140017a28:	sub    BYTE PTR [rax],bl
   140017a2a:	add    DWORD PTR [rax],eax
   140017a2c:	enter  0xb0,0x0
   140017a30:	out    dx,al
   140017a31:	mov    al,0x0
   140017a33:	add    BYTE PTR [rdx+rdx*1-0x4f0bffff],dl
   140017a3a:	add    BYTE PTR [rax],al
   140017a3c:	addr32 mov cl,0x0
   140017a3f:	add    BYTE PTR [rsi+rdx*1+0x1],cl
   140017a43:	add    BYTE PTR [rax-0x4f],dh
   140017a46:	add    BYTE PTR [rax],al
   140017a48:	mov    esp,0x4c0000b1
   140017a4d:	(bad)  
   140017a4e:	add    DWORD PTR [rax],eax
   140017a50:	(bad)  
   140017a51:	mov    cl,0x0
   140017a53:	add    BYTE PTR [rip+0xffffffff8c0000b2],bh        # 0xcc017b0b
   140017a59:	adc    DWORD PTR [rcx],eax
   140017a5b:	add    BYTE PTR [rdx+rsi*4+0x0],dl
   140017a5f:	add    BYTE PTR [rdx],bh
   140017a61:	mov    bl,0x0
   140017a63:	add    BYTE PTR [rax+0x18],ah
   140017a66:	add    DWORD PTR [rax],eax
   140017a68:	mov    bl,0x0
   140017a6b:	add    al,ch
   140017a6d:	mov    bl,0x0
   140017a6f:	add    BYTE PTR [rax+0x10000118],ah
   140017a75:	mov    ah,0x0
   140017a77:	add    BYTE PTR [rax-0x4c],dl
   140017a7a:	add    BYTE PTR [rax],al
   140017a7c:	enter  0x118,0x0
   140017a80:	jo     0x140017a36
   140017a82:	add    BYTE PTR [rax],al
   140017a84:	mov    esi,0xd00000b4
   140017a89:	sbb    BYTE PTR [rcx],al
   140017a8b:	add    ah,al
   140017a8d:	mov    ah,0x0
   140017a8f:	add    BYTE PTR [rbx],cl
   140017a91:	mov    ch,0x0
   140017a93:	add    al,bl
   140017a95:	sbb    BYTE PTR [rcx],al
   140017a97:	add    BYTE PTR [rsi*4-0x4a020000],dl
   140017a9e:	add    BYTE PTR [rax],al
   140017aa0:	clc    
   140017aa1:	sbb    BYTE PTR [rcx],al
   140017aa3:	add    BYTE PTR [rsi+rsi*4],al
   140017aa6:	add    BYTE PTR [rax],al
   140017aa8:	lock mov dh,0x0
   140017aab:	add    BYTE PTR [rax],ah
   140017aad:	sbb    DWORD PTR [rcx],eax
   140017aaf:	add    al,bh
   140017ab1:	mov    dh,0x0
   140017ab3:	add    BYTE PTR [rsi+rdi*4+0x0],ch
   140017ab7:	add    BYTE PTR [rcx+rbx*1+0x1],cl
   140017abb:	add    BYTE PTR [rsi+rdi*4+0x0],dh
   140017abf:	add    dh,ch
   140017ac1:	mov    esi,0x1e280000
   140017ac6:	add    DWORD PTR [rax],eax
   140017ac8:	hlt    
   140017ac9:	mov    esi,0xbf5a0000
   140017ace:	add    BYTE PTR [rax],al
   140017ad0:	jo     0x140017aeb
   140017ad2:	add    DWORD PTR [rax],eax
   140017ad4:	jo     0x140017a95
   140017ad6:	add    BYTE PTR [rax],al
   140017ad8:	(bad)  
   140017ad9:	rol    BYTE PTR [rax],0x0
   140017adc:	cwde   
   140017add:	sbb    DWORD PTR [rcx],eax
   140017adf:	add    BYTE PTR [rax-0x40],al
   140017ae2:	add    BYTE PTR [rax],al
   140017ae4:	(bad)  
   140017ae5:	rol    BYTE PTR [rax],0x0
   140017ae8:	lods   al,BYTE PTR ds:[rsi]
   140017ae9:	sbb    DWORD PTR [rcx],eax
   140017aeb:	add    ah,bl
   140017aed:	rol    BYTE PTR [rax],0x0
   140017af0:	xchg   cl,al
   140017af2:	add    BYTE PTR [rax],al
   140017af4:	pushf  
   140017af5:	sbb    DWORD PTR [rcx],eax
   140017af7:	add    BYTE PTR [rcx+rax*8-0x3df10000],cl
   140017afe:	add    BYTE PTR [rax],al
   140017b00:	rex.WR (bad) 
   140017b02:	add    DWORD PTR [rax],eax
   140017b04:	rex.W ret 0x0
   140017b08:	mov    eax,edx
   140017b0a:	add    BYTE PTR [rax],al
   140017b0c:	fcomp  DWORD PTR [rcx]
   140017b0e:	add    DWORD PTR [rax],eax
   140017b10:	xchg   esp,eax
   140017b11:	ret    0x0
   140017b14:	fld    st(2)
   140017b16:	add    BYTE PTR [rax],al
   140017b18:	fcomp  DWORD PTR [rcx]
   140017b1a:	add    DWORD PTR [rax],eax
   140017b1c:	loopne 0x140017ae0
   140017b1e:	add    BYTE PTR [rax],al
   140017b20:	jae    0x140017ae5
   140017b22:	add    BYTE PTR [rax],al
   140017b24:	mov    WORD PTR [rcx],ss
   140017b26:	add    DWORD PTR [rax],eax
   140017b28:	jl     0x140017aed
   140017b2a:	add    BYTE PTR [rax],al
   140017b2c:	int    0xc4
   140017b2e:	add    BYTE PTR [rax],al
   140017b30:	loopne 0x140017b4b
   140017b32:	add    DWORD PTR [rax],eax
   140017b34:	in     al,0xc4
   140017b36:	add    BYTE PTR [rax],al
   140017b38:	cmp    eax,0x7c0000c5
   140017b3d:	adc    eax,DWORD PTR [rcx]
   140017b3f:	add    BYTE PTR [rbp+rax*8+0x0],al
   140017b43:	add    BYTE PTR [rsi+rax*8],dl
   140017b46:	add    BYTE PTR [rax],al
   140017b48:	clc    
   140017b49:	sbb    DWORD PTR [rcx],eax
   140017b4b:	add    BYTE PTR [rsi+rax*8],bl
   140017b4e:	add    BYTE PTR [rax],al
   140017b50:	out    0xc6,eax
   140017b52:	add    BYTE PTR [rax],al
   140017b54:	sub    BYTE PTR [rsi],bl
   140017b56:	add    DWORD PTR [rax],eax
   140017b58:	lock mov BYTE PTR [rax],0x0
   140017b5c:	(bad)  
   140017b5d:	mov    DWORD PTR [rax],0x1164c00
   140017b63:	add    BYTE PTR [rax],dh
   140017b65:	mov    DWORD PTR [rax],0xc75000
   140017b6b:	add    BYTE PTR [rdx+rdx*1-0x38a7ffff],dl
   140017b72:	add    BYTE PTR [rax],al
   140017b74:	xchg   ebx,eax
   140017b75:	mov    DWORD PTR [rax],0x11a2000
   140017b7b:	add    BYTE PTR [rdi+rax*8-0x37dc0000],bl
   140017b82:	add    BYTE PTR [rax],al
   140017b84:	sub    BYTE PTR [rsi],bl
   140017b86:	add    DWORD PTR [rax],eax
   140017b88:	sub    al,0xc8
   140017b8a:	add    BYTE PTR [rax],al
   140017b8c:	push   rdx
   140017b8d:	enter  0x0,0x4c
   140017b91:	(bad)  
   140017b92:	add    DWORD PTR [rax],eax
   140017b94:	pop    rax
   140017b95:	enter  0x0,0xa2
   140017b99:	enter  0x0,0x28
   140017b9d:	(bad)  
   140017b9e:	add    DWORD PTR [rax],eax
   140017ba0:	test   al,0xc8
   140017ba2:	add    BYTE PTR [rax],al
   140017ba4:	sbb    ecx,ecx
   140017ba6:	add    BYTE PTR [rax],al
   140017ba8:	sub    BYTE PTR [rsi],bl
   140017baa:	add    DWORD PTR [rax],eax
   140017bac:	pop    rsp
   140017bad:	leave  
   140017bae:	add    BYTE PTR [rax],al
   140017bb0:	jns    0x140017b7b
   140017bb2:	add    BYTE PTR [rax],al
   140017bb4:	xchg   esp,eax
   140017bb5:	adc    al,BYTE PTR [rcx]
   140017bb7:	add    BYTE PTR [rax-0x6ffff37],ch
   140017bbd:	leave  
   140017bbe:	add    BYTE PTR [rax],al
   140017bc0:	rex.WR (bad) 
   140017bc2:	add    DWORD PTR [rax],eax
   140017bc4:	add    dl,cl
   140017bc6:	add    BYTE PTR [rax],al
   140017bc8:	(bad)  
   140017bc9:	retf   0x0
   140017bcc:	xchg   esp,eax
   140017bcd:	adc    al,BYTE PTR [rcx]
   140017bcf:	add    BYTE PTR [rax-0x36],ah
   140017bd2:	add    BYTE PTR [rax],al
   140017bd4:	out    dx,eax
   140017bd5:	retf   0x0
   140017bd8:	mov    esp,0xf600011e
   140017bdd:	retf   0x0
   140017be0:	adc    al,0xcb
   140017be2:	add    BYTE PTR [rax],al
   140017be4:	rex.R adc al,0x1
   140017be7:	add    BYTE PTR [rdx],bl
   140017be9:	retf   
   140017bea:	add    BYTE PTR [rax],al
   140017bec:	cmp    cl,bl
   140017bee:	add    BYTE PTR [rax],al
   140017bf0:	je     0x140017c03
   140017bf2:	add    DWORD PTR [rax],eax
   140017bf4:	rex retf 
   140017bf6:	add    BYTE PTR [rax],al
   140017bf8:	push   rsp
   140017bf9:	retf   
   140017bfa:	add    BYTE PTR [rax],al
   140017bfc:	rex.R adc al,0x1
   140017bff:	add    BYTE PTR [rdx-0x35],bl
   140017c02:	add    BYTE PTR [rax],al
   140017c04:	jae    0x140017bd1
   140017c06:	add    BYTE PTR [rax],al
   140017c08:	rex.R adc al,0x1
   140017c0b:	add    BYTE PTR [rbx-0x35],dh
   140017c0e:	add    BYTE PTR [rax],al
   140017c10:	mov    ebx,cs
   140017c12:	add    BYTE PTR [rax],al
   140017c14:	rex.R adc al,0x1
   140017c17:	add    BYTE PTR [rdx-0x49ffff35],dl
   140017c1d:	retf   
   140017c1e:	add    BYTE PTR [rax],al
   140017c20:	rex.R adc al,0x1
   140017c23:	add    BYTE PTR [rbx+rcx*8-0x34290000],bh
   140017c2a:	add    BYTE PTR [rax],al
   140017c2c:	rex.R adc al,0x1
   140017c2f:	add    ch,bl
   140017c31:	retf   
   140017c32:	add    BYTE PTR [rax],al
   140017c34:	and    ecx,esp
   140017c36:	add    BYTE PTR [rax],al
   140017c38:	fcom   QWORD PTR [rbx]
   140017c3a:	add    DWORD PTR [rax],eax
   140017c3c:	sub    esp,ecx
   140017c3e:	add    BYTE PTR [rax],al
   140017c40:	rex.X int3 
   140017c42:	add    BYTE PTR [rax],al
   140017c44:	rex.R adc al,0x1
   140017c47:	add    BYTE PTR [rax-0x34],cl
   140017c4a:	add    BYTE PTR [rax],al
   140017c4c:	gs int3 
   140017c4e:	add    BYTE PTR [rax],al
   140017c50:	rex.R adc al,0x1
   140017c53:	add    BYTE PTR [rbx-0x34],ch
   140017c56:	add    BYTE PTR [rax],al
   140017c58:	test   ah,cl
   140017c5a:	add    BYTE PTR [rax],al
   140017c5c:	rex.R adc al,0x1
   140017c5f:	add    BYTE PTR [rdx-0x5cffff34],cl
   140017c65:	int3   
   140017c66:	add    BYTE PTR [rax],al
   140017c68:	rex.R adc al,0x1
   140017c6b:	add    BYTE PTR [rax-0x2fffff34],dh
   140017c71:	int3   
   140017c72:	add    BYTE PTR [rax],al
   140017c74:	rex.R adc al,0x1
   140017c77:	add    dh,dl
   140017c79:	int3   
   140017c7a:	add    BYTE PTR [rax],al
   140017c7c:	hlt    
   140017c7d:	int3   
   140017c7e:	add    BYTE PTR [rax],al
   140017c80:	rex.R adc al,0x1
   140017c83:	add    dl,bh
   140017c85:	int3   
   140017c86:	add    BYTE PTR [rax],al
   140017c88:	out    dx,al
   140017c89:	int    0x0
   140017c8b:	add    BYTE PTR [rsp+rdx*1+0x1],al
   140017c8f:	add    dh,ch
   140017c91:	int    0x0
   140017c93:	add    BYTE PTR [rsi+rcx*8+0x0],ch
   140017c97:	add    BYTE PTR [rsi+rdx*1-0x318dffff],dl
   140017c9e:	add    BYTE PTR [rax],al
   140017ca0:	mov    cl,dh
   140017ca2:	add    BYTE PTR [rax],al
   140017ca4:	rex.R adc al,0x1
   140017ca7:	add    BYTE PTR [rax-0x59ffff32],dl
   140017cad:	(bad)  
   140017cae:	add    BYTE PTR [rax],al
   140017cb0:	rex.R adc al,0x1
   140017cb3:	add    BYTE PTR [rsi-0x30ffff32],ah
   140017cb9:	(bad)  
   140017cba:	add    BYTE PTR [rax],al
   140017cbc:	rex.R adc al,0x1
   140017cbf:	add    ch,dl
   140017cc1:	(bad)  
   140017cc2:	add    BYTE PTR [rax],al
   140017cc4:	std    
   140017cc5:	(bad)  
   140017cc6:	add    BYTE PTR [rax],al
   140017cc8:	rex.R adc al,0x1
   140017ccb:	add    ch,bh
   140017ccd:	(bad)  
   140017cce:	add    BYTE PTR [rax],al
   140017cd0:	(bad)  
   140017cd1:	iret   
   140017cd2:	add    BYTE PTR [rax],al
   140017cd4:	rex.R adc al,0x1
   140017cd7:	add    BYTE PTR [rdi+rcx*8],bl
   140017cda:	add    BYTE PTR [rax],al
   140017cdc:	xor    eax,0x440000cf
   140017ce1:	adc    al,0x1
   140017ce3:	add    BYTE PTR [rbx],bh
   140017ce5:	iret   
   140017ce6:	add    BYTE PTR [rax],al
   140017ce8:	push   rdx
   140017ce9:	iret   
   140017cea:	add    BYTE PTR [rax],al
   140017cec:	rex.R adc al,0x1
   140017cef:	add    BYTE PTR [rax-0x31],bl
   140017cf2:	add    BYTE PTR [rax],al
   140017cf4:	outs   dx,DWORD PTR ds:[rsi]
   140017cf5:	iret   
   140017cf6:	add    BYTE PTR [rax],al
   140017cf8:	rex.R adc al,0x1
   140017cfb:	add    BYTE PTR [rbp-0x31],dh
   140017cfe:	add    BYTE PTR [rax],al
   140017d00:	(bad)  
   140017d01:	iret   
   140017d02:	add    BYTE PTR [rax],al
   140017d04:	rex.R adc al,0x1
   140017d07:	add    BYTE PTR [rbx-0x53ffff31],dl
   140017d0d:	iret   
   140017d0e:	add    BYTE PTR [rax],al
   140017d10:	rex.R adc al,0x1
   140017d13:	add    ah,al
   140017d15:	iret   
   140017d16:	add    BYTE PTR [rax],al
   140017d18:	jrcxz  0x140017ce9
   140017d1a:	add    BYTE PTR [rax],al
   140017d1c:	rex.R adc al,0x1
   140017d1f:	add    bh,ch
   140017d21:	iret   
   140017d22:	add    BYTE PTR [rax],al
   140017d24:	or     dl,al
   140017d26:	add    BYTE PTR [rax],al
   140017d28:	adc    al,0x1b
   140017d2a:	add    DWORD PTR [rax],eax
   140017d2c:	mov    ah,0xd0
   140017d2e:	add    BYTE PTR [rax],al
   140017d30:	iret   
   140017d31:	rol    BYTE PTR [rax],1
   140017d33:	add    BYTE PTR [rax],bl
   140017d35:	(bad)  
   140017d36:	add    DWORD PTR [rax],eax
   140017d38:	adc    ecx,edx
   140017d3a:	add    BYTE PTR [rax],al
   140017d3c:	cmp    al,0xd1
   140017d3e:	add    BYTE PTR [rax],al
   140017d40:	xchg   esp,eax
   140017d41:	sbb    al,0x1
   140017d43:	add    BYTE PTR [rcx+rdx*8+0x0],al
   140017d47:	add    BYTE PTR [rax-0x2e],cl
   140017d4a:	add    BYTE PTR [rax],al
   140017d4c:	rex.WR (bad) 
   140017d4e:	add    DWORD PTR [rax],eax
   140017d50:	push   rax
   140017d51:	rol    BYTE PTR [rax],cl
   140017d53:	add    BYTE PTR [rax-0x2e],dh
   140017d56:	add    BYTE PTR [rax],al
   140017d58:	xchg   esp,eax
   140017d59:	adc    al,BYTE PTR [rcx]
   140017d5b:	add    BYTE PTR [rax-0x2e],bh
   140017d5e:	add    BYTE PTR [rax],al
   140017d60:	scas   al,BYTE PTR es:[rdi]
   140017d61:	rol    BYTE PTR [rax],cl
   140017d63:	add    BYTE PTR [rdx+rdx*1-0x2d37ffff],dl
   140017d6a:	add    BYTE PTR [rax],al
   140017d6c:	and    al,0xd3
   140017d6e:	add    BYTE PTR [rax],al
   140017d70:	rex.WR (bad) 
   140017d72:	add    DWORD PTR [rax],eax
   140017d74:	rol    DWORD PTR [rax],cl
   140017d77:	add    BYTE PTR [rdx-0x2d],dh
   140017d7a:	add    BYTE PTR [rax],al
   140017d7c:	xchg   esp,eax
   140017d7d:	adc    al,BYTE PTR [rcx]
	...

Disassembly of section .rsrc:

0000000140018000 <.rsrc>:
	...
   140018008:	add    al,0x0
   14001800a:	add    BYTE PTR [rax],al
   14001800c:	add    BYTE PTR [rax],al
   14001800e:	add    al,BYTE PTR [rax]
   140018010:	adc    BYTE PTR [rax],al
   140018012:	add    BYTE PTR [rax],al
   140018014:	and    BYTE PTR [rax],al
   140018016:	add    BYTE PTR [rax+0x18],al
   14001801c:	cmp    BYTE PTR [rax],al
   14001801e:	add    BYTE PTR [rax+0x0],al
   140018024:	add    BYTE PTR [rax],al
   140018026:	add    BYTE PTR [rax],al
   140018028:	add    al,0x0
   14001802a:	add    BYTE PTR [rax],al
   14001802c:	add    BYTE PTR [rax],al
   14001802e:	add    DWORD PTR [rax],eax
   140018030:	add    DWORD PTR [rax],eax
   140018032:	add    BYTE PTR [rax],al
   140018034:	push   rax
   140018035:	add    BYTE PTR [rax],al
   140018037:	add    BYTE PTR [rax],0x0
   14001803a:	add    BYTE PTR [rax],al
   14001803c:	add    BYTE PTR [rax],al
   14001803e:	add    BYTE PTR [rax],al
   140018040:	add    al,0x0
   140018042:	add    BYTE PTR [rax],al
   140018044:	add    BYTE PTR [rax],al
   140018046:	add    DWORD PTR [rax],eax
   140018048:	add    DWORD PTR [rax],eax
   14001804a:	add    BYTE PTR [rax],al
   14001804c:	push   0x800000
   140018051:	add    BYTE PTR [rax],al
   140018053:	add    BYTE PTR [rax],al
   140018055:	add    BYTE PTR [rax],al
   140018057:	add    BYTE PTR [rax+rax*1],al
   14001805a:	add    BYTE PTR [rax],al
   14001805c:	add    BYTE PTR [rax],al
   14001805e:	add    DWORD PTR [rax],eax
   140018060:	or     DWORD PTR [rax+rax*1],eax
   140018063:	add    BYTE PTR [rax+0x0],al
   140018069:	add    BYTE PTR [rax],al
   14001806b:	add    BYTE PTR [rax],al
   14001806d:	add    BYTE PTR [rax],al
   14001806f:	add    BYTE PTR [rax+rax*1],al
   140018072:	add    BYTE PTR [rax],al
   140018074:	add    BYTE PTR [rax],al
   140018076:	add    DWORD PTR [rax],eax
   140018078:	or     DWORD PTR [rax+rax*1],eax
   14001807b:	add    BYTE PTR [rax-0x60000000],dl
   140018081:	add    BYTE PTR [rcx],0x0
   140018084:	rol    BYTE PTR [rbx],0x0
   140018087:	add    ah,ah
   140018089:	add    al,0x0
   14001808b:	add    BYTE PTR [rax],al
   14001808d:	add    BYTE PTR [rax],al
   14001808f:	add    BYTE PTR [rax-0x7c],ah
   140018092:	add    DWORD PTR [rax],eax
   140018094:	movabs ds:0x4e4000001,eax
   14001809d:	add    BYTE PTR [rax],al
   14001809f:	add    al,al
   1400180a1:	add    esi,DWORD PTR [rax+rax*1]
   1400180a4:	add    BYTE PTR [rax],al
   1400180a6:	push   rsi
   1400180a7:	add    BYTE PTR [rbx+0x0],dl
   1400180aa:	pop    rdi
   1400180ab:	add    BYTE PTR [rsi+0x0],dl
   1400180ae:	add    BYTE PTR [r10+0x0],r10b
   1400180b2:	push   rbx
   1400180b3:	add    BYTE PTR [rcx+0x0],cl
   1400180b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400180ba:	pop    rdi
   1400180bb:	add    BYTE PTR [rcx+0x0],cl
   1400180be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400180c2:	rex.WRXB add BYTE PTR [r8],r8b
   1400180c5:	add    BYTE PTR [rax],al
   1400180c7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400180cd:	add    BYTE PTR [rcx],al
   1400180cf:	add    BYTE PTR [rax],al
   1400180d1:	add    BYTE PTR [rbx],cl
   1400180d3:	add    BYTE PTR [rcx],al
   1400180d5:	add    BYTE PTR [rdi],ah
   1400180d7:	mov    BYTE PTR [rax],0x0
   1400180da:	or     eax,DWORD PTR [rax]
   1400180dc:	add    DWORD PTR [rax],eax
   1400180de:	(bad)  
   1400180df:	(bad)  
   1400180e0:	(bad)  
   1400180e1:	add    BYTE PTR [rax],al
   1400180e3:	add    BYTE PTR [rax],al
   1400180e5:	add    BYTE PTR [rax],al
   1400180e7:	add    BYTE PTR [rax+rax*1],al
   1400180ea:	add    BYTE PTR [rax],al
   1400180ec:	add    DWORD PTR [rax],eax
	...
   1400180fa:	add    BYTE PTR [rax],al
   1400180fc:	(bad)  
   1400180fd:	add    eax,DWORD PTR [rax]
   1400180ff:	add    BYTE PTR [rcx],al
   140018101:	add    BYTE PTR [rbx+0x0],dl
   140018104:	je     0x140018106
   140018106:	jb     0x140018108
   140018108:	imul   eax,DWORD PTR [rax],0x67006e
   14001810e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140018112:	ins    BYTE PTR es:[rdi],dx
   140018113:	add    BYTE PTR [rbp+0x0],ah
   140018116:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001811a:	data16 add BYTE PTR [rdi+0x0],ch
   14001811e:	add    BYTE PTR [rax],al
   140018120:	cli    
   140018121:	add    al,BYTE PTR [rax]
   140018123:	add    BYTE PTR [rcx],al
   140018125:	add    BYTE PTR [rax],dh
   140018127:	add    BYTE PTR [rax+rax*1],dh
   14001812a:	xor    BYTE PTR [rax],al
   14001812c:	cmp    DWORD PTR [rax],eax
   14001812e:	xor    BYTE PTR [rax],al
   140018130:	xor    al,0x0
   140018132:	rex.X add BYTE PTR [rax],sil
   140018135:	add    BYTE PTR [rax],al
   140018137:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001813b:	add    BYTE PTR [rcx],al
   14001813d:	add    BYTE PTR [rbx+0x0],al
   140018140:	outs   dx,DWORD PTR ds:[rsi]
   140018141:	add    BYTE PTR [rbp+0x0],ch
   140018144:	jo     0x140018146
   140018146:	(bad)  
   140018147:	add    BYTE PTR [rsi+0x0],ch
   14001814a:	jns    0x14001814c
   14001814c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140018150:	ins    DWORD PTR es:[rdi],dx
   140018151:	add    BYTE PTR [rbp+0x0],ah
   140018154:	add    BYTE PTR [rax],al
   140018156:	add    BYTE PTR [rax],al
   140018158:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001815c:	movsxd eax,DWORD PTR [rax]
   14001815e:	jb     0x140018160
   140018160:	outs   dx,DWORD PTR ds:[rsi]
   140018161:	add    BYTE PTR [rbx+0x0],dh
   140018164:	outs   dx,DWORD PTR ds:[rsi]
   140018165:	add    BYTE PTR [rsi+0x0],ah
   140018168:	je     0x14001816a
   14001816a:	and    BYTE PTR [rax],al
   14001816c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140018170:	jb     0x140018172
   140018172:	jo     0x140018174
   140018174:	outs   dx,DWORD PTR ds:[rsi]
   140018175:	add    BYTE PTR [rdx+0x0],dh
   140018178:	(bad)  
   140018179:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001817d:	add    BYTE PTR [rdi+0x0],ch
   140018180:	outs   dx,BYTE PTR ds:[rsi]
   140018181:	add    BYTE PTR [rax],al
   140018183:	add    BYTE PTR [rax+rax*1+0x16],dl
   140018187:	add    BYTE PTR [rcx],al
   140018189:	add    BYTE PTR [rsi+0x0],al
   14001818c:	imul   eax,DWORD PTR [rax],0x65006c
   140018192:	add    BYTE PTR [rbp+0x0],r12b
   140018196:	jae    0x140018198
   140018198:	movsxd eax,DWORD PTR [rax]
   14001819a:	jb     0x14001819c
   14001819c:	imul   eax,DWORD PTR [rax],0x740070
   1400181a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400181a8:	add    BYTE PTR [rax],al
   1400181aa:	add    BYTE PTR [rax],al
   1400181ac:	push   rdi
   1400181ad:	add    BYTE PTR [rdi+0x0],ch
   1400181b0:	jb     0x1400181b2
   1400181b2:	imul   eax,DWORD PTR [rax],0x66
   1400181b5:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400181b9:	add    BYTE PTR [rdi+0x0],dh
   1400181bc:	add    BYTE PTR [rbp+0x0],r12b
   1400181c0:	(bad)  
   1400181c1:	add    BYTE PTR [rbp+0x0],dh
   1400181c4:	add    BYTE PTR [eax+0x0],cl
   1400181c8:	outs   dx,DWORD PTR ds:[rsi]
   1400181c9:	add    BYTE PTR [rbx+0x0],dh
   1400181cc:	je     0x1400181ce
   1400181ce:	add    BYTE PTR cs:[rbp+0x0],ah
   1400181d2:	js     0x1400181d4
   1400181d4:	add    BYTE PTR gs:[rax],al
   1400181d7:	add    BYTE PTR [rax+rax*1+0x1e],bl
   1400181db:	add    BYTE PTR [rcx],al
   1400181dd:	add    BYTE PTR [rsi+0x0],al
   1400181e0:	imul   eax,DWORD PTR [rax],0x65006c
   1400181e6:	push   rsi
   1400181e7:	add    BYTE PTR [rbp+0x0],ah
   1400181ea:	jb     0x1400181ec
   1400181ec:	jae    0x1400181ee
   1400181ee:	imul   eax,DWORD PTR [rax],0x6e006f
   1400181f4:	add    BYTE PTR [rax],al
   1400181f6:	add    BYTE PTR [rax],al
   1400181f8:	xor    DWORD PTR [rax],eax
   1400181fa:	xor    DWORD PTR [rax],eax
   1400181fc:	add    BYTE PTR cs:[rax],dh
   1400181ff:	add    BYTE PTR [rsi],ch
   140018201:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701b207
   140018207:	add    BYTE PTR [rdx],dh
   140018209:	add    BYTE PTR [rdi],dh
   14001820b:	add    BYTE PTR [rsi],ch
   14001820d:	add    BYTE PTR [rcx],dh
   14001820f:	add    BYTE PTR [rax],ah
   140018211:	add    BYTE PTR [rdx+0x0],ah
   140018214:	jne    0x140018216
   140018216:	imul   eax,DWORD PTR [rax],0x74006c
   14001821c:	and    BYTE PTR [rax],al
   14001821e:	(bad)  
   14001821f:	add    BYTE PTR [rcx+0x0],bh
   140018222:	cmp    al,BYTE PTR [rax]
   140018224:	and    BYTE PTR [rax],al
   140018226:	push   rdx
   140018227:	add    BYTE PTR [rax+rax*1+0x4d],dl
   14001822b:	add    BYTE PTR [rdx+0x0],dl
   14001822e:	add    BYTE PTR [r8+rax*1+0x0],r9b
   140018233:	add    BYTE PTR [rax+rax*1+0x16],cl
   140018237:	add    BYTE PTR [rcx],al
   140018239:	add    BYTE PTR [rcx+0x0],cl
   14001823c:	outs   dx,BYTE PTR ds:[rsi]
   14001823d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140018241:	add    BYTE PTR [rdx+0x0],dh
   140018244:	outs   dx,BYTE PTR ds:[rsi]
   140018245:	add    BYTE PTR [rcx+0x0],ah
   140018248:	ins    BYTE PTR es:[rdi],dx
   140018249:	add    BYTE PTR [rsi+0x0],cl
   14001824c:	(bad)  
   14001824d:	add    BYTE PTR [rbp+0x0],ch
   140018250:	add    BYTE PTR gs:[rax],al
   140018253:	add    BYTE PTR [rdi+0x0],dl
   140018256:	outs   dx,DWORD PTR ds:[rsi]
   140018257:	add    BYTE PTR [rdx+0x0],dh
   14001825a:	imul   eax,DWORD PTR [rax],0x66
   14001825d:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140018261:	add    BYTE PTR [rdi+0x0],dh
   140018264:	add    BYTE PTR [rbp+0x0],r12b
   140018268:	(bad)  
   140018269:	add    BYTE PTR [rbp+0x0],dh
   14001826c:	add    BYTE PTR [eax+0x0],cl
   140018270:	outs   dx,DWORD PTR ds:[rsi]
   140018271:	add    BYTE PTR [rbx+0x0],dh
   140018274:	je     0x140018276
   140018276:	add    BYTE PTR cs:[rbp+0x0],ah
   14001827a:	js     0x14001827c
   14001827c:	add    BYTE PTR gs:[rax],al
   14001827f:	add    BYTE PTR [rax+0x1002e00],al
   140018285:	add    BYTE PTR [rax+rax*1+0x65],cl
   140018289:	add    BYTE PTR [rdi+0x0],ah
   14001828c:	(bad)  
   14001828d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140018291:	add    BYTE PTR [rdi+0x0],ch
   140018294:	jo     0x140018296
   140018296:	jns    0x140018298
   140018298:	jb     0x14001829a
   14001829a:	imul   eax,DWORD PTR [rax],0x680067
   1400182a0:	je     0x1400182a2
   1400182a2:	add    BYTE PTR [rax],al
   1400182a4:	test   eax,0x4d002000
   1400182a9:	add    BYTE PTR [rcx+0x0],ch
   1400182ac:	movsxd eax,DWORD PTR [rax]
   1400182ae:	jb     0x1400182b0
   1400182b0:	outs   dx,DWORD PTR ds:[rsi]
   1400182b1:	add    BYTE PTR [rbx+0x0],dh
   1400182b4:	outs   dx,DWORD PTR ds:[rsi]
   1400182b5:	add    BYTE PTR [rsi+0x0],ah
   1400182b8:	je     0x1400182ba
   1400182ba:	and    BYTE PTR [rax],al
   1400182bc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400182c0:	jb     0x1400182c2
   1400182c2:	jo     0x1400182c4
   1400182c4:	outs   dx,DWORD PTR ds:[rsi]
   1400182c5:	add    BYTE PTR [rdx+0x0],dh
   1400182c8:	(bad)  
   1400182c9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400182cd:	add    BYTE PTR [rdi+0x0],ch
   1400182d0:	outs   dx,BYTE PTR ds:[rsi]
   1400182d1:	add    BYTE PTR [rsi],ch
   1400182d3:	add    BYTE PTR [rax],ah
   1400182d5:	add    BYTE PTR [rcx+0x0],al
   1400182d8:	ins    BYTE PTR es:[rdi],dx
   1400182d9:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400182dd:	add    BYTE PTR [rdx+0x0],dh
   1400182e0:	imul   eax,DWORD PTR [rax],0x680067
   1400182e6:	je     0x1400182e8
   1400182e8:	jae    0x1400182ea
   1400182ea:	and    BYTE PTR [rax],al
   1400182ec:	jb     0x1400182ee
   1400182ee:	add    BYTE PTR gs:[rbx+0x0],dh
   1400182f2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400182f6:	jbe    0x1400182f8
   1400182f8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400182fd:	add    BYTE PTR [rax],al
   1400182ff:	add    BYTE PTR [rax],ch
   140018301:	add    BYTE PTR [rax],al
   140018303:	add    BYTE PTR [rcx],al
   140018305:	add    BYTE PTR [rax+rax*1+0x65],cl
   140018309:	add    BYTE PTR [rdi+0x0],ah
   14001830c:	(bad)  
   14001830d:	add    BYTE PTR [rax+rax*1+0x54],ch
   140018311:	add    BYTE PTR [rdx+0x0],dh
   140018314:	(bad)  
   140018315:	add    BYTE PTR [rax+rax*1+0x65],ah
   140018319:	add    BYTE PTR [rbp+0x0],ch
   14001831c:	(bad)  
   14001831d:	add    BYTE PTR [rdx+0x0],dh
   140018320:	imul   eax,DWORD PTR [rax],0x73
   140018323:	add    BYTE PTR [rax],al
   140018325:	add    BYTE PTR [rax],al
   140018327:	add    BYTE PTR [rax+rax*1+0x16],dl
   14001832b:	add    BYTE PTR [rcx],al
   14001832d:	add    BYTE PTR [rdi+0x0],cl
   140018330:	jb     0x140018332
   140018332:	imul   eax,DWORD PTR [rax],0x690067
   140018338:	outs   dx,BYTE PTR ds:[rsi]
   140018339:	add    BYTE PTR [rcx+0x0],ah
   14001833c:	ins    BYTE PTR es:[rdi],dx
   14001833d:	add    BYTE PTR [rsi+0x0],al
   140018340:	imul   eax,DWORD PTR [rax],0x65006c
   140018346:	outs   dx,BYTE PTR ds:[rsi]
   140018347:	add    BYTE PTR [rcx+0x0],ah
   14001834a:	ins    DWORD PTR es:[rdi],dx
   14001834b:	add    BYTE PTR [rbp+0x0],ah
   14001834e:	add    BYTE PTR [rax],al
   140018350:	push   rdi
   140018351:	add    BYTE PTR [rdi+0x0],ch
   140018354:	jb     0x140018356
   140018356:	imul   eax,DWORD PTR [rax],0x66
   140018359:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14001835d:	add    BYTE PTR [rdi+0x0],dh
   140018360:	add    BYTE PTR [rbp+0x0],r12b
   140018364:	(bad)  
   140018365:	add    BYTE PTR [rbp+0x0],dh
   140018368:	add    BYTE PTR [eax+0x0],cl
   14001836c:	outs   dx,DWORD PTR ds:[rsi]
   14001836d:	add    BYTE PTR [rbx+0x0],dh
   140018370:	je     0x140018372
   140018372:	add    BYTE PTR cs:[rbp+0x0],ah
   140018376:	js     0x140018378
   140018378:	add    BYTE PTR gs:[rax],al
   14001837b:	add    BYTE PTR [rsi+0x0],bl
   14001837e:	(bad)  
   14001837f:	add    BYTE PTR [rcx],al
   140018381:	add    BYTE PTR [rax+0x0],dl
   140018384:	jb     0x140018386
   140018386:	outs   dx,DWORD PTR ds:[rsi]
   140018387:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001838b:	add    BYTE PTR [rbx+0x0],ah
   14001838e:	je     0x140018390
   140018390:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140018394:	ins    DWORD PTR es:[rdi],dx
   140018395:	add    BYTE PTR [rbp+0x0],ah
   140018398:	add    BYTE PTR [rax],al
   14001839a:	add    BYTE PTR [rax],al
   14001839c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400183a0:	movsxd eax,DWORD PTR [rax]
   1400183a2:	jb     0x1400183a4
   1400183a4:	outs   dx,DWORD PTR ds:[rsi]
   1400183a5:	add    BYTE PTR [rbx+0x0],dh
   1400183a8:	outs   dx,DWORD PTR ds:[rsi]
   1400183a9:	add    BYTE PTR [rsi+0x0],ah
   1400183ac:	je     0x1400183ae
   1400183ae:	scas   al,BYTE PTR es:[rdi]
   1400183af:	add    BYTE PTR [rax],ah
   1400183b1:	add    BYTE PTR [rsi+0x0],dl
   1400183b4:	imul   eax,DWORD PTR [rax],0x750073
   1400183ba:	(bad)  
   1400183bb:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400183bf:	add    BYTE PTR [rbx+0x0],dl
   1400183c2:	je     0x1400183c4
   1400183c4:	jne    0x1400183c6
   1400183c6:	add    BYTE PTR fs:[rcx+0x0],ch
   1400183ca:	outs   dx,DWORD PTR ds:[rsi]
   1400183cb:	add    BYTE PTR [rsi+0x32002000],ch
   1400183d1:	add    BYTE PTR [rax],dh
   1400183d3:	add    BYTE PTR [rcx],dh
   1400183d5:	add    BYTE PTR [rdx],dh
   1400183d7:	add    BYTE PTR [rax],al
   1400183d9:	add    BYTE PTR [rax],al
   1400183db:	add    BYTE PTR [rsi],bh
   1400183dd:	add    BYTE PTR [rip+0x50000100],cl        # 0x1900184e3
   1400183e3:	add    BYTE PTR [rdx+0x0],dh
   1400183e6:	outs   dx,DWORD PTR ds:[rsi]
   1400183e7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400183eb:	add    BYTE PTR [rbx+0x0],ah
   1400183ee:	je     0x1400183f0
   1400183f0:	push   rsi
   1400183f1:	add    BYTE PTR [rbp+0x0],ah
   1400183f4:	jb     0x1400183f6
   1400183f6:	jae    0x1400183f8
   1400183f8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400183fe:	add    BYTE PTR [rax],al
   140018400:	xor    DWORD PTR [rax],eax
   140018402:	xor    DWORD PTR [rax],eax
   140018404:	add    BYTE PTR cs:[rax],dh
   140018407:	add    BYTE PTR [rsi],ch
   140018409:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701b40f
   14001840f:	add    BYTE PTR [rdx],dh
   140018411:	add    BYTE PTR [rdi],dh
   140018413:	add    BYTE PTR [rsi],ch
   140018415:	add    BYTE PTR [rcx],dh
   140018417:	add    BYTE PTR [rax],al
   140018419:	add    BYTE PTR [rax],al
   14001841b:	add    BYTE PTR [rax+rax*1+0x0],al
   14001841f:	add    BYTE PTR [rcx],al
   140018421:	add    BYTE PTR [rsi+0x0],dl
   140018424:	(bad)  
   140018425:	add    BYTE PTR [rdx+0x0],dh
   140018428:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001842c:	ins    BYTE PTR es:[rdi],dx
   14001842d:	add    BYTE PTR [rbp+0x0],ah
   140018430:	rex.WB add BYTE PTR [r14+0x0],bpl
   140018434:	data16 add BYTE PTR [rdi+0x0],ch
   140018438:	add    BYTE PTR [rax],al
   14001843a:	add    BYTE PTR [rax],al
   14001843c:	and    al,0x0
   14001843e:	add    al,0x0
   140018440:	add    BYTE PTR [rax],al
   140018442:	push   rsp
   140018443:	add    BYTE PTR [rdx+0x0],dh
   140018446:	(bad)  
   140018447:	add    BYTE PTR [rsi+0x0],ch
   14001844a:	jae    0x14001844c
   14001844c:	ins    BYTE PTR es:[rdi],dx
   14001844d:	add    BYTE PTR [rcx+0x0],ah
   140018450:	je     0x140018452
   140018452:	imul   eax,DWORD PTR [rax],0x6e006f
   140018458:	add    BYTE PTR [rax],al
   14001845a:	add    BYTE PTR [rax],al
   14001845c:	or     DWORD PTR [rax+rsi*4],eax
   14001845f:	add    al,0x3c
   140018461:	(bad)  
   140018462:	jae    0x1400184d7
   140018464:	gs ins DWORD PTR es:[rdi],dx
   140018466:	(bad)  
   140018467:	ins    BYTE PTR es:[rdi],dx
   140018468:	jns    0x14001848a
   14001846a:	js     0x1400184d9
   14001846c:	ins    BYTE PTR es:[rdi],dx
   14001846d:	outs   dx,BYTE PTR ds:[rsi]
   14001846e:	jae    0x1400184ad
   140018470:	and    dh,BYTE PTR [rbp+0x72]
   140018473:	outs   dx,BYTE PTR ds:[rsi]
   140018474:	cmp    dh,BYTE PTR [rbx+0x63]
   140018477:	push   0x73616d65
   14001847c:	sub    eax,0x7263696d
   140018481:	outs   dx,DWORD PTR ds:[rsi]
   140018482:	jae    0x1400184f3
   140018484:	data16 je 0x1400184b4
   140018487:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001848a:	cmp    ah,BYTE PTR [rcx+0x73]
   14001848d:	ins    DWORD PTR es:[rdi],dx
   14001848e:	cs jbe 0x1400184c2
   140018491:	and    ah,BYTE PTR [rax]
   140018493:	ins    DWORD PTR es:[rdi],dx
   140018494:	(bad)  
   140018495:	outs   dx,BYTE PTR ds:[rsi]
   140018496:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001849d:	jb     0x140018512
   14001849f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400184a6:	xor    BYTE PTR [rdx],ah
   1400184a8:	ds cmp al,0x61
   1400184ab:	jae    0x140018520
   1400184ad:	gs ins DWORD PTR es:[rdi],dx
   1400184af:	(bad)  
   1400184b0:	ins    BYTE PTR es:[rdi],dx
   1400184b1:	jns    0x1400184fc
   1400184b3:	fs outs dx,BYTE PTR gs:[rsi]
   1400184b6:	je     0x140018521
   1400184b8:	je     0x140018533
   1400184ba:	and    BYTE PTR [rsi+0x65],dh
   1400184bd:	jb     0x140018532
   1400184bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400184c6:	xor    BYTE PTR [rsi],ch
   1400184c8:	xor    BYTE PTR [rsi],ch
   1400184ca:	xor    BYTE PTR [rdx],ah
   1400184cc:	and    BYTE PTR [rax+0x72],dh
   1400184cf:	outs   dx,DWORD PTR ds:[rsi]
   1400184d0:	movsxd esp,DWORD PTR [rbp+0x73]
   1400184d3:	jae    0x140018544
   1400184d5:	jb     0x140018518
   1400184d7:	jb     0x14001853c
   1400184d9:	push   0x63657469
   1400184de:	je     0x140018555
   1400184e0:	jb     0x140018547
   1400184e2:	cmp    eax,0x36385822
   1400184e7:	and    ah,BYTE PTR [rax]
   1400184e9:	outs   dx,BYTE PTR ds:[rsi]
   1400184ea:	(bad)  
   1400184eb:	ins    DWORD PTR es:[rdi],dx
   1400184ec:	gs cmp eax,0x726f5722
   1400184f2:	imul   esp,DWORD PTR [rsi+0x6c],0x6f
   1400184f6:	ja     0x14001853c
   1400184f8:	gs (bad) 
   1400184fa:	jne    0x140018563
   1400184fc:	rex.W outs dx,DWORD PTR ds:[rsi]
   1400184fe:	jae    0x140018574
   140018500:	and    ah,BYTE PTR [rax]
   140018502:	je     0x14001857d
   140018504:	jo     0x14001856b
   140018506:	cmp    eax,0x6e697722
   14001850b:	xor    esi,DWORD PTR [rdx]
   14001850d:	and    bh,BYTE PTR [rsi]
   14001850f:	cmp    al,0x2f
   140018511:	(bad)  
   140018512:	jae    0x140018587
   140018514:	gs ins DWORD PTR es:[rdi],dx
   140018516:	(bad)  
   140018517:	ins    BYTE PTR es:[rdi],dx
   140018518:	jns    0x140018563
   14001851a:	fs outs dx,BYTE PTR gs:[rsi]
   14001851d:	je     0x140018588
   14001851f:	je     0x14001859a
   140018521:	ds cmp al,0x74
   140018524:	jb     0x14001859b
   140018526:	jae    0x14001859c
   140018528:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001852a:	outs   dx,WORD PTR ds:[rsi]
   14001852c:	and    BYTE PTR [rax+0x6d],bh
   14001852f:	ins    BYTE PTR es:[rdi],dx
   140018530:	outs   dx,BYTE PTR ds:[rsi]
   140018531:	jae    0x140018570
   140018533:	and    dh,BYTE PTR [rbp+0x72]
   140018536:	outs   dx,BYTE PTR ds:[rsi]
   140018537:	cmp    dh,BYTE PTR [rbx+0x63]
   14001853a:	push   0x73616d65
   14001853f:	sub    eax,0x7263696d
   140018544:	outs   dx,DWORD PTR ds:[rsi]
   140018545:	jae    0x1400185b6
   140018547:	data16 je 0x140018577
   14001854a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001854d:	cmp    ah,BYTE PTR [rcx+0x73]
   140018550:	ins    DWORD PTR es:[rdi],dx
   140018551:	cs jbe 0x140018587
   140018554:	and    bh,BYTE PTR [rsi]
   140018556:	cmp    al,0x73
   140018558:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001855c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   140018564:	jne    0x1400185cb
   140018566:	jae    0x1400185dc
   140018568:	gs fs push rax
   14001856b:	jb     0x1400185d6
   14001856d:	jbe    0x1400185d8
   14001856f:	ins    BYTE PTR es:[rdi],dx
   140018570:	gs addr32 gs jae 0x1400185b3
   140018575:	cmp    al,0x72
   140018577:	gs jno 0x1400185ef
   14001857a:	gs jae 0x1400185f1
   14001857d:	gs fs rex.RB js 0x1400185e7
   140018582:	movsxd esi,DWORD PTR [rbp+0x74]
   140018585:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001858c:	ins    BYTE PTR es:[rdi],dx
   14001858d:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140018591:	gs ins BYTE PTR es:[rdi],dx
   140018593:	cmp    eax,0x49736122
   140018598:	outs   dx,BYTE PTR ds:[rsi]
   140018599:	jbe    0x14001860a
   14001859b:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001859f:	and    BYTE PTR [rbp+0x69],dh
   1400185a2:	movsxd esp,DWORD PTR [r11+0x65]
   1400185a6:	jae    0x14001861b
   1400185a8:	cmp    eax,0x6c616622
   1400185ad:	jae    0x140018614
   1400185af:	and    bh,BYTE PTR [rsi]
   1400185b1:	cmp    al,0x2f
   1400185b3:	jb     0x14001861a
   1400185b5:	jno    0x14001862c
   1400185b7:	gs jae 0x14001862e
   1400185ba:	gs fs rex.RB js 0x140018624
   1400185bf:	movsxd esi,DWORD PTR [rbp+0x74]
   1400185c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400185c9:	ins    BYTE PTR es:[rdi],dx
   1400185ca:	ds cmp al,0x2f
   1400185cd:	jb     0x140018634
   1400185cf:	jno    0x140018646
   1400185d1:	gs jae 0x140018648
   1400185d4:	gs fs push rax
   1400185d7:	jb     0x140018642
   1400185d9:	jbe    0x140018644
   1400185db:	ins    BYTE PTR es:[rdi],dx
   1400185dc:	gs addr32 gs jae 0x14001861f
   1400185e1:	cmp    al,0x2f
   1400185e3:	jae    0x14001864a
   1400185e5:	movsxd esi,DWORD PTR [rbp+0x72]
   1400185e8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   1400185f0:	jne    0x140018665
   1400185f2:	je     0x14001863d
   1400185f4:	outs   dx,BYTE PTR ds:[rsi]
   1400185f5:	outs   dx,WORD PTR ds:[rsi]
   1400185f7:	ds cmp al,0x2f
   1400185fa:	(bad)  
   1400185fb:	jae    0x140018670
   1400185fd:	gs ins DWORD PTR es:[rdi],dx
   1400185ff:	(bad)  
   140018600:	ins    BYTE PTR es:[rdi],dx
   140018601:	jns    0x140018641
   140018603:	push   rax

Disassembly of section .reloc:

0000000140019000 <.reloc>:
   140019000:	add    al,ah
   140019002:	add    BYTE PTR [rax],al
   140019004:	pop    rax
   140019005:	add    BYTE PTR [rax],al
   140019007:	add    BYTE PTR [rax-0x5d],ch
   14001900a:	jo     0x140018faf
   14001900c:	js     0x140018fb1
   14001900e:	and    BYTE PTR [rbx-0x5c5f5c68],0xa8
   140019015:	movabs ds:0xa3d8a3d0a3b8a3b0,eax
   14001901e:	loopne 0x140018fc3
   140019020:	(bad)  
   140019021:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019022:	push   0x78a470a4
   140019027:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019028:	and    BYTE PTR [rax+rbp*4-0x375a475b],0xa5
   140019030:	fsub   DWORD PTR [rbp-0x5a075a18]
   140019036:	or     BYTE PTR [rsi-0x59d759e8],ah
   14001903c:	cmp    BYTE PTR [rsi-0x59a759b8],ah
   140019042:	push   0xffffffff88a678a6
   140019047:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019048:	cwde   
   140019049:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001904a:	test   al,0xa6
   14001904c:	mov    eax,0xd8a6c8a6
   140019051:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019052:	call   0x148a888fd
   140019057:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019058:	add    al,dh
   14001905a:	add    BYTE PTR [rax],al
   14001905c:	call   0x188019061
   140019061:	movabs eax,ds:0xa208a200a1f8a150
   14001906a:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   140019070:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019072:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140019078:	xor    BYTE PTR [rdi-0x58a758b0],ah
   14001907e:	(bad)  
   14001907f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019080:	push   0x78a770a7
   140019085:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019086:	and    BYTE PTR [rdi-0x586f5878],0x98
   14001908d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001908e:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140019097:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019098:	enter  0xd0a7,0xa7
   14001909c:	fsub   DWORD PTR [rdi-0x58175820]
   1400190a2:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400190a4:	clc    
   1400190a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400190a6:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400190ac:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400190b2:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400190b8:	rex.W test al,0x50
   1400190bb:	test   al,0x58
   1400190bd:	test   al,0x60
   1400190bf:	test   al,0x68
   1400190c1:	test   al,0x70
   1400190c3:	test   al,0x78
   1400190c5:	test   al,0x80
   1400190c7:	test   al,0x88
   1400190c9:	test   al,0x90
   1400190cb:	test   al,0x98
   1400190cd:	test   al,0xa0
   1400190cf:	test   al,0xa8
   1400190d1:	test   al,0xb0
   1400190d3:	test   al,0xb8
   1400190d5:	test   al,0xc0
   1400190d7:	test   al,0xc8
   1400190d9:	test   al,0xd0
   1400190db:	test   al,0xd8
   1400190dd:	test   al,0xe0
   1400190df:	test   al,0xe8
   1400190e1:	test   al,0xf0
   1400190e3:	test   al,0xf8
   1400190e5:	test   al,0x0
   1400190e7:	test   eax,0xa910a908
   1400190ec:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400190f2:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400190f8:	test   rax,0xffffffffa958a950
   1400190fe:	(bad)  
   1400190ff:	test   eax,0xa970a968
   140019104:	js     0x1400190af
   140019106:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14001910d:	test   eax,0xa9a8a9a0
   140019112:	mov    al,0xa9
   140019114:	mov    eax,0xc8a9c0a9
   140019119:	test   eax,0xa9d8a9d0
   14001911e:	loopne 0x1400190c9
   140019120:	call   0x138ab81ce
   140019125:	test   eax,0xaa08aa00
   14001912a:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140019130:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140019136:	stos   BYTE PTR es:[rdi],al
   140019138:	rex.W stos BYTE PTR es:[rdi],al
   14001913a:	push   rax
   14001913b:	stos   BYTE PTR es:[rdi],al
   14001913c:	pop    rax
   14001913d:	stos   BYTE PTR es:[rdi],al
   14001913e:	add    BYTE PTR [rax],al
   140019140:	add    BYTE PTR [rax],al
   140019142:	add    DWORD PTR [rax],eax
   140019144:	lods   al,BYTE PTR ds:[rsi]
   140019145:	add    BYTE PTR [rax],al
   140019147:	add    BYTE PTR [rax-0x57],al
   14001914a:	test   rax,0xffffffffa958a950
   140019150:	(bad)  
   140019151:	test   eax,0xa970a968
   140019156:	js     0x140019101
   140019158:	sub    BYTE PTR [rcx-0x566f5678],0xb8
   14001915f:	test   eax,0xa9c8a9c0
   140019164:	shr    BYTE PTR [rcx-0x561f5628],1
   14001916a:	call   0x138ab8218
   14001916f:	test   eax,0xaa08aa00
   140019174:	adc    BYTE PTR [rdx-0x55a755d8],ch
   14001917a:	(bad)  
   14001917b:	stos   BYTE PTR es:[rdi],al
   14001917c:	push   0x78aa70aa
   140019181:	stos   BYTE PTR es:[rdi],al
   140019182:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140019189:	stos   BYTE PTR es:[rdi],al
   14001918a:	movabs al,ds:0xd8aad0aab0aaa8aa
   140019193:	stos   BYTE PTR es:[rdi],al
   140019194:	loopne 0x140019140
   140019196:	call   0x138ac8245
   14001919b:	stos   BYTE PTR es:[rdi],al
   14001919c:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400191a2:	sub    BYTE PTR [rbx-0x542f5438],ch
   1400191a8:	fsubr  DWORD PTR [rbx-0x54175420]
   1400191ae:	lock stos DWORD PTR es:[rdi],eax
   1400191b0:	clc    
   1400191b1:	stos   DWORD PTR es:[rdi],eax
   1400191b2:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400191b9:	lods   al,BYTE PTR ds:[rsi]
   1400191ba:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400191c1:	lods   al,BYTE PTR ds:[rsi]
   1400191c2:	lods   al,BYTE PTR ds:[rsi]
   1400191c4:	rex.W lods al,BYTE PTR ds:[rsi]
   1400191c6:	push   rax
   1400191c7:	lods   al,BYTE PTR ds:[rsi]
   1400191c8:	pop    rax
   1400191c9:	lods   al,BYTE PTR ds:[rsi]
   1400191ca:	(bad)  
   1400191cb:	lods   al,BYTE PTR ds:[rsi]
   1400191cc:	push   0x78ac70ac
   1400191d1:	lods   al,BYTE PTR ds:[rsi]
   1400191d2:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400191da:	movabs al,ds:0xc0acb8acb0aca8ac
   1400191e3:	lods   al,BYTE PTR ds:[rsi]
   1400191e4:	enter  0xd0ac,0xac
   1400191e8:	loopne 0x140019196
   1400191ea:	push   0x12000ae
   1400191ef:	add    BYTE PTR [rax+rax*1],cl
   1400191f2:	add    BYTE PTR [rax],al
   1400191f4:	and    BYTE PTR [rax+0x30000000],ah
   1400191fa:	add    DWORD PTR [rax],eax
   1400191fc:	in     al,dx
   1400191fd:	add    BYTE PTR [rax],al
   1400191ff:	add    BYTE PTR [rax],al
   140019201:	movabs al,ds:0xa4b8a4b0a048a020
   14001920a:	shl    BYTE PTR [rax+rcx*8-0x275b2f5c],0xa4
   140019212:	loopne 0x1400191b8
   140019214:	call   0x138a682bd
   140019219:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001921a:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140019220:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140019226:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14001922c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001922e:	push   rax
   14001922f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019230:	pop    rax
   140019231:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019232:	(bad)  
   140019233:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019234:	push   0x78a570a5
   140019239:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001923a:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   140019241:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019242:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14001924b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001924c:	enter  0xd0a5,0xa5
   140019250:	fsub   DWORD PTR [rbp-0x5a175a20]
   140019256:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019258:	clc    
   140019259:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001925a:	add    BYTE PTR [rsi-0x59e759f0],ah
   140019260:	and    BYTE PTR [rsi-0x59cf59d8],ah
   140019266:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   14001926c:	push   rax
   14001926d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001926e:	pop    rax
   14001926f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019270:	(bad)  
   140019271:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019272:	push   0x78a670a6
   140019277:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019278:	and    BYTE PTR [rsi-0x596f5978],0x98
   14001927f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019280:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140019289:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001928a:	enter  0xd0a6,0xa6
   14001928e:	fsub   DWORD PTR [rsi-0x59175920]
   140019294:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019296:	clc    
   140019297:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019298:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14001929e:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   1400192a4:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   1400192aa:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400192ac:	push   rax
   1400192ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400192ae:	pop    rax
   1400192af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400192b0:	(bad)  
   1400192b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400192b2:	push   0xffffffffb8a770a7
   1400192b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400192b8:	fsub   DWORD PTR [rdi-0x57e75808]
   1400192be:	cmp    BYTE PTR [rax-0x57775790],ch
   1400192c4:	nop
   1400192c5:	test   al,0x98
   1400192c7:	test   al,0xa0
   1400192c9:	test   al,0xe8
   1400192cb:	stos   BYTE PTR es:[rdi],al
   1400192cc:	and    BYTE PTR [rsi-0x51cf51d8],ch
   1400192d2:	cmp    BYTE PTR [rsi-0x51b751c0],ch
   1400192d8:	push   rax
   1400192d9:	scas   al,BYTE PTR es:[rdi]
   1400192da:	pop    rax
   1400192db:	scas   al,BYTE PTR es:[rdi]
   1400192dc:	(bad)  
   1400192dd:	scas   al,BYTE PTR es:[rdi]
   1400192de:	push   0xffffffff80ae70ae
   1400192e3:	scas   al,BYTE PTR es:[rdi]
   1400192e4:	add    BYTE PTR [rax+0x1],al
   1400192e7:	add    BYTE PTR [rax+0x0],al
   1400192ea:	add    BYTE PTR [rax],al
   1400192ec:	xor    BYTE PTR [rdx-0x5d7f5d88],ah
   1400192f2:	mov    BYTE PTR [rdx-0x5d675d70],ah
   1400192f8:	movabs al,ds:0xc0a2b8a2b0a2a8a2
   140019301:	movabs ds:0xa2e8a2e0a2d8a2c8,al
   14001930a:	lock movabs ds:0xa310a308a300a2f8,al
   140019314:	sbb    BYTE PTR [rbx-0x5ccf5ce0],ah
   14001931a:	movabs ds:0xa378a358a350,rax
	...
