
8df9747354421c6cabbfabe94bef66f7ce1c5d8b002b4eb749c8534bc544b22d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x491d1]        # 0x14004a1d8
   140001007:	mov    QWORD PTR [rcx],rax
   14000100a:	rex.W jmp QWORD PTR [rip+0x48887]        # 0x140049898
   140001011:	int3   
   140001012:	int3   
   140001013:	int3   
   140001014:	mov    QWORD PTR [rsp+0x8],rbx
   140001019:	push   rdi
   14000101a:	sub    rsp,0x20
   14000101e:	lea    rax,[rip+0x491b3]        # 0x14004a1d8
   140001025:	mov    ebx,edx
   140001027:	mov    rdi,rcx
   14000102a:	mov    QWORD PTR [rcx],rax
   14000102d:	call   QWORD PTR [rip+0x48865]        # 0x140049898
   140001033:	test   bl,0x1
   140001036:	je     0x140001041
   140001038:	mov    rcx,rdi
   14000103b:	call   QWORD PTR [rip+0x48637]        # 0x140049678
   140001041:	mov    rax,rdi
   140001044:	mov    rbx,QWORD PTR [rsp+0x30]
   140001049:	add    rsp,0x20
   14000104d:	pop    rdi
   14000104e:	ret    
   14000104f:	int3   
   140001050:	rex push rbx
   140001052:	sub    rsp,0x20
   140001056:	mov    rbx,rcx
   140001059:	call   QWORD PTR [rip+0x48581]        # 0x1400495e0
   14000105f:	lea    r11,[rip+0x4cde2]        # 0x14004de48
   140001066:	mov    QWORD PTR [rbx],r11
   140001069:	mov    rax,rbx
   14000106c:	add    rsp,0x20
   140001070:	pop    rbx
   140001071:	ret    
   140001072:	int3   
   140001073:	int3   
   140001074:	sub    rsp,0x28
   140001078:	mov    rcx,QWORD PTR [rcx]
   14000107b:	test   rcx,rcx
   14000107e:	je     0x140001099
   140001080:	call   QWORD PTR [rip+0x482ba]        # 0x140049340
   140001086:	test   rax,rax
   140001089:	je     0x140001099
   14000108b:	mov    r8,QWORD PTR [rax]
   14000108e:	mov    edx,0x1
   140001093:	mov    rcx,rax
   140001096:	call   QWORD PTR [r8]
   140001099:	add    rsp,0x28
   14000109d:	ret    
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	mov    rdx,QWORD PTR [rcx]
   1400010a7:	mov    rax,QWORD PTR [rdx]
   1400010aa:	movsxd rcx,DWORD PTR [rax+0x4]
   1400010ae:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400010b3:	test   rcx,rcx
   1400010b6:	je     0x1400010be
   1400010b8:	mov    rax,QWORD PTR [rcx]
   1400010bb:	call   QWORD PTR [rax+0x10]
   1400010be:	add    rsp,0x28
   1400010c2:	ret    
   1400010c3:	int3   
   1400010c4:	lea    rax,[rip+0x4913d]        # 0x14004a208
   1400010cb:	mov    QWORD PTR [rcx],rax
   1400010ce:	ret    
   1400010cf:	int3   
   1400010d0:	rex push rbx
   1400010d2:	sub    rsp,0x20
   1400010d6:	lea    rax,[rip+0x4912b]        # 0x14004a208
   1400010dd:	mov    rbx,rcx
   1400010e0:	mov    QWORD PTR [rcx],rax
   1400010e3:	test   dl,0x1
   1400010e6:	je     0x1400010ee
   1400010e8:	call   QWORD PTR [rip+0x4858a]        # 0x140049678
   1400010ee:	mov    rax,rbx
   1400010f1:	add    rsp,0x20
   1400010f5:	pop    rbx
   1400010f6:	ret    
   1400010f7:	int3   
   1400010f8:	rex push rdi
   1400010fa:	sub    rsp,0x30
   1400010fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001107:	mov    QWORD PTR [rsp+0x50],rbx
   14000110c:	mov    QWORD PTR [rsp+0x58],rsi
   140001111:	mov    rsi,rdx
   140001114:	mov    rdi,rcx
   140001117:	xor    ebx,ebx
   140001119:	mov    QWORD PTR [rsp+0x40],rbx
   14000111e:	mov    rcx,QWORD PTR [rdx+0x8]
   140001122:	test   rcx,rcx
   140001125:	je     0x14000115a
   140001127:	mov    rax,QWORD PTR [rcx]
   14000112a:	lea    rdx,[rsp+0x48]
   14000112f:	call   QWORD PTR [rax+0x28]
   140001132:	nop
   140001133:	mov    rbx,QWORD PTR [rax]
   140001136:	mov    QWORD PTR [rsp+0x40],rbx
   14000113b:	test   rbx,rbx
   14000113e:	je     0x14000114a
   140001140:	mov    rax,QWORD PTR [rbx]
   140001143:	mov    rcx,rbx
   140001146:	call   QWORD PTR [rax+0x18]
   140001149:	nop
   14000114a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000114f:	test   rcx,rcx
   140001152:	je     0x14000115a
   140001154:	mov    rax,QWORD PTR [rcx]
   140001157:	call   QWORD PTR [rax+0x20]
   14000115a:	mov    rax,QWORD PTR [rsi+0x18]
   14000115e:	mov    QWORD PTR [rdi+0x18],rax
   140001162:	mov    eax,DWORD PTR [rsi+0x20]
   140001165:	mov    DWORD PTR [rdi+0x20],eax
   140001168:	mov    rax,QWORD PTR [rsi+0x10]
   14000116c:	mov    QWORD PTR [rdi+0x10],rax
   140001170:	mov    rcx,QWORD PTR [rdi+0x8]
   140001174:	test   rcx,rcx
   140001177:	je     0x140001188
   140001179:	mov    rax,QWORD PTR [rcx]
   14000117c:	call   QWORD PTR [rax+0x20]
   14000117f:	test   al,al
   140001181:	je     0x140001188
   140001183:	and    QWORD PTR [rdi+0x8],0x0
   140001188:	mov    QWORD PTR [rdi+0x8],rbx
   14000118c:	test   rbx,rbx
   14000118f:	je     0x14000119b
   140001191:	mov    rax,QWORD PTR [rbx]
   140001194:	mov    rcx,rbx
   140001197:	call   QWORD PTR [rax+0x18]
   14000119a:	nop
   14000119b:	test   rbx,rbx
   14000119e:	je     0x1400011a9
   1400011a0:	mov    rax,QWORD PTR [rbx]
   1400011a3:	mov    rcx,rbx
   1400011a6:	call   QWORD PTR [rax+0x20]
   1400011a9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011ae:	mov    rsi,QWORD PTR [rsp+0x58]
   1400011b3:	add    rsp,0x30
   1400011b7:	pop    rdi
   1400011b8:	ret    
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400011c1:	push   rdi
   1400011c2:	sub    rsp,0x20
   1400011c6:	mov    ebx,edx
   1400011c8:	mov    rdi,rcx
   1400011cb:	call   QWORD PTR [rip+0x486c7]        # 0x140049898
   1400011d1:	test   bl,0x1
   1400011d4:	je     0x1400011df
   1400011d6:	mov    rcx,rdi
   1400011d9:	call   QWORD PTR [rip+0x48499]        # 0x140049678
   1400011df:	mov    rax,rdi
   1400011e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011e7:	add    rsp,0x20
   1400011eb:	pop    rdi
   1400011ec:	ret    
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    rax,rsp
   1400011f3:	mov    QWORD PTR [rax+0x8],rcx
   1400011f7:	mov    QWORD PTR [rax+0x10],rdx
   1400011fb:	mov    QWORD PTR [rax+0x18],r8
   1400011ff:	mov    QWORD PTR [rax+0x20],r9
   140001203:	xor    al,al
   140001205:	ret    
   140001206:	int3   
   140001207:	int3   
   140001208:	mov    QWORD PTR [rsp+0x8],rcx
   14000120d:	push   rbp
   14000120e:	push   rsi
   14000120f:	push   rdi
   140001210:	push   r12
   140001212:	push   r14
   140001214:	sub    rsp,0x30
   140001218:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001221:	mov    QWORD PTR [rsp+0x68],rbx
   140001226:	mov    rbx,rcx
   140001229:	and    DWORD PTR [rsp+0x70],0x0
   14000122e:	mov    QWORD PTR [rcx+0x18],0xf
   140001236:	and    QWORD PTR [rcx+0x10],0x0
   14000123b:	mov    BYTE PTR [rcx],0x0
   14000123e:	or     r12,0xffffffffffffffff
   140001242:	mov    r9,r12
   140001245:	xor    r8d,r8d
   140001248:	call   0x1400048b8
   14000124d:	mov    DWORD PTR [rsp+0x70],0x1
   140001255:	lea    r14,[rip+0x4f694]        # 0x1400508f0
   14000125c:	mov    rcx,r14
   14000125f:	call   QWORD PTR [rip+0x483a3]        # 0x140049608
   140001265:	mov    rsi,rax
   140001268:	mov    rcx,QWORD PTR [rbx+0x10]
   14000126c:	test   rcx,rcx
   14000126f:	je     0x1400012d2
   140001271:	cmp    rcx,r12
   140001274:	jbe    0x14000127b
   140001276:	mov    rcx,r12
   140001279:	jmp    0x14000127e
   14000127b:	dec    rcx
   14000127e:	cmp    QWORD PTR [rbx+0x18],0x10
   140001283:	jb     0x14000128a
   140001285:	mov    rax,QWORD PTR [rbx]
   140001288:	jmp    0x14000128d
   14000128a:	mov    rax,rbx
   14000128d:	lea    rdi,[rax+rcx*1]
   140001291:	jmp    0x1400012aa
   140001293:	cmp    QWORD PTR [rbx+0x18],0x10
   140001298:	jb     0x14000129f
   14000129a:	mov    rax,QWORD PTR [rbx]
   14000129d:	jmp    0x1400012a2
   14000129f:	mov    rax,rbx
   1400012a2:	cmp    rdi,rax
   1400012a5:	je     0x1400012d2
   1400012a7:	dec    rdi
   1400012aa:	mov    r8,rsi
   1400012ad:	movsx  edx,BYTE PTR [rdi]
   1400012b0:	mov    rcx,r14
   1400012b3:	call   QWORD PTR [rip+0x4836f]        # 0x140049628
   1400012b9:	test   rax,rax
   1400012bc:	jne    0x140001293
   1400012be:	cmp    QWORD PTR [rbx+0x18],0x10
   1400012c3:	jb     0x1400012ca
   1400012c5:	mov    rax,QWORD PTR [rbx]
   1400012c8:	jmp    0x1400012cd
   1400012ca:	mov    rax,rbx
   1400012cd:	sub    rdi,rax
   1400012d0:	jmp    0x1400012d5
   1400012d2:	mov    rdi,r12
   1400012d5:	cmp    rdi,r12
   1400012d8:	je     0x1400012e9
   1400012da:	lea    rdx,[rdi+0x1]
   1400012de:	mov    r8,r12
   1400012e1:	mov    rcx,rbx
   1400012e4:	call   0x140002dfc
   1400012e9:	mov    rcx,r14
   1400012ec:	call   QWORD PTR [rip+0x48316]        # 0x140049608
   1400012f2:	mov    rbp,rax
   1400012f5:	mov    rdx,QWORD PTR [rbx+0x10]
   1400012f9:	test   rdx,rdx
   1400012fc:	je     0x140001354
   1400012fe:	cmp    QWORD PTR [rbx+0x18],0x10
   140001303:	jb     0x14000130a
   140001305:	mov    rcx,QWORD PTR [rbx]
   140001308:	jmp    0x14000130d
   14000130a:	mov    rcx,rbx
   14000130d:	lea    rsi,[rdx+rcx*1]
   140001311:	cmp    QWORD PTR [rbx+0x18],0x10
   140001316:	jb     0x14000131d
   140001318:	mov    rdi,QWORD PTR [rbx]
   14000131b:	jmp    0x140001339
   14000131d:	mov    rdi,rbx
   140001320:	jmp    0x140001339
   140001322:	movsx  edx,BYTE PTR [rdi]
   140001325:	mov    r8,rbp
   140001328:	mov    rcx,r14
   14000132b:	call   QWORD PTR [rip+0x482f7]        # 0x140049628
   140001331:	test   rax,rax
   140001334:	je     0x140001340
   140001336:	inc    rdi
   140001339:	cmp    rdi,rsi
   14000133c:	jb     0x140001322
   14000133e:	jmp    0x140001354
   140001340:	cmp    QWORD PTR [rbx+0x18],0x10
   140001345:	jb     0x14000134c
   140001347:	mov    rax,QWORD PTR [rbx]
   14000134a:	jmp    0x14000134f
   14000134c:	mov    rax,rbx
   14000134f:	sub    rdi,rax
   140001352:	jmp    0x140001357
   140001354:	mov    rdi,r12
   140001357:	xor    edx,edx
   140001359:	mov    rcx,rbx
   14000135c:	cmp    rdi,r12
   14000135f:	mov    r8,rdi
   140001362:	jne    0x140001367
   140001364:	mov    r8,r12
   140001367:	call   0x140002dfc
   14000136c:	mov    rax,rbx
   14000136f:	mov    rbx,QWORD PTR [rsp+0x68]
   140001374:	add    rsp,0x30
   140001378:	pop    r14
   14000137a:	pop    r12
   14000137c:	pop    rdi
   14000137d:	pop    rsi
   14000137e:	pop    rbp
   14000137f:	ret    
   140001380:	int3   
   140001381:	int3   
   140001382:	int3   
   140001383:	int3   
   140001384:	mov    QWORD PTR [rsp+0x8],rcx
   140001389:	push   rbx
   14000138a:	sub    rsp,0x30
   14000138e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001397:	mov    rbx,rcx
   14000139a:	mov    r8,QWORD PTR [rcx+0x8]
   14000139e:	mov    r9,r8
   1400013a1:	mov    r8,QWORD PTR [r8]
   1400013a4:	lea    rdx,[rsp+0x48]
   1400013a9:	call   0x140004a78
   1400013ae:	nop
   1400013af:	mov    rcx,QWORD PTR [rbx+0x8]
   1400013b3:	add    rsp,0x30
   1400013b7:	pop    rbx
   1400013b8:	rex.W jmp QWORD PTR [rip+0x482b9]        # 0x140049678
   1400013bf:	int3   
   1400013c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400013c5:	push   rbx
   1400013c6:	sub    rsp,0x30
   1400013ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400013d3:	mov    rbx,rcx
   1400013d6:	call   0x140003878
   1400013db:	nop
   1400013dc:	mov    r8,QWORD PTR [rbx+0x8]
   1400013e0:	mov    r9,r8
   1400013e3:	mov    r8,QWORD PTR [r8]
   1400013e6:	lea    rdx,[rsp+0x48]
   1400013eb:	mov    rcx,rbx
   1400013ee:	call   0x140004a78
   1400013f3:	nop
   1400013f4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400013f8:	add    rsp,0x30
   1400013fc:	pop    rbx
   1400013fd:	rex.W jmp QWORD PTR [rip+0x48274]        # 0x140049678
   140001404:	rex push rbp
   140001406:	push   rbx
   140001407:	push   rsi
   140001408:	push   rdi
   140001409:	push   r12
   14000140b:	push   r13
   14000140d:	lea    rbp,[rsp-0x2f]
   140001412:	sub    rsp,0xe8
   140001419:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001422:	mov    rax,QWORD PTR [rip+0x66dc7]        # 0x1400681f0
   140001429:	xor    rax,rsp
   14000142c:	mov    QWORD PTR [rbp+0x1f],rax
   140001430:	mov    rbx,r9
   140001433:	mov    rdi,rdx
   140001436:	mov    rsi,rcx
   140001439:	xor    r12d,r12d
   14000143c:	mov    DWORD PTR [rsp+0x20],r12d
   140001441:	mov    rdx,r8
   140001444:	lea    rcx,[rbp-0x9]
   140001448:	call   0x140001208
   14000144d:	nop
   14000144e:	mov    rdx,rbx
   140001451:	lea    rcx,[rbp-0x31]
   140001455:	call   0x140001208
   14000145a:	nop
   14000145b:	lea    rdx,[rbp-0x9]
   14000145f:	lea    rcx,[rsp+0x38]
   140001464:	call   0x14000fcb8
   140001469:	cmp    QWORD PTR [rbp-0x69],0x10
   14000146e:	jb     0x14000147b
   140001470:	mov    rcx,QWORD PTR [rsp+0x38]
   140001475:	call   QWORD PTR [rip+0x481fd]        # 0x140049678
   14000147b:	lea    rdx,[rbp-0x31]
   14000147f:	lea    rcx,[rsp+0x38]
   140001484:	call   0x14000fcb8
   140001489:	cmp    QWORD PTR [rbp-0x69],0x10
   14000148e:	jb     0x14000149b
   140001490:	mov    rcx,QWORD PTR [rsp+0x38]
   140001495:	call   QWORD PTR [rip+0x481dd]        # 0x140049678
   14000149b:	lea    rdx,[rbp-0x9]
   14000149f:	lea    rcx,[rbp-0x59]
   1400014a3:	call   0x140005d90
   1400014a8:	nop
   1400014a9:	lea    r8,[rbp-0x31]
   1400014ad:	mov    rdx,rax
   1400014b0:	lea    rcx,[rsp+0x38]
   1400014b5:	call   0x140005e40
   1400014ba:	nop
   1400014bb:	mov    r8,rax
   1400014be:	lea    rdx,[rsp+0x28]
   1400014c3:	mov    rcx,rsi
   1400014c6:	call   0x14000399c
   1400014cb:	nop
   1400014cc:	cmp    QWORD PTR [rbp-0x69],0x10
   1400014d1:	jb     0x1400014de
   1400014d3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400014d8:	call   QWORD PTR [rip+0x4819a]        # 0x140049678
   1400014de:	mov    r13d,0xf
   1400014e4:	mov    QWORD PTR [rbp-0x69],r13
   1400014e8:	mov    QWORD PTR [rbp-0x71],r12
   1400014ec:	mov    BYTE PTR [rsp+0x38],r12b
   1400014f1:	cmp    QWORD PTR [rbp-0x41],0x10
   1400014f6:	jb     0x140001502
   1400014f8:	mov    rcx,QWORD PTR [rbp-0x59]
   1400014fc:	call   QWORD PTR [rip+0x48176]        # 0x140049678
   140001502:	mov    rdx,QWORD PTR [rsp+0x28]
   140001507:	cmp    rdx,QWORD PTR [rsi+0x8]
   14000150b:	jne    0x140001547
   14000150d:	mov    QWORD PTR [rbp-0x69],r13
   140001511:	mov    QWORD PTR [rbp-0x71],r12
   140001515:	mov    BYTE PTR [rsp+0x38],r12b
   14000151a:	lea    rcx,[rip+0x4f3d4]        # 0x1400508f5
   140001521:	call   QWORD PTR [rip+0x480e1]        # 0x140049608
   140001527:	mov    r8,rax
   14000152a:	lea    rdx,[rip+0x4f3c4]        # 0x1400508f5
   140001531:	lea    rcx,[rsp+0x38]
   140001536:	call   0x140005154
   14000153b:	lea    rdx,[rsp+0x38]
   140001540:	mov    ebx,0x1
   140001545:	jmp    0x140001570
   140001547:	mov    QWORD PTR [rbp-0x41],r13
   14000154b:	mov    QWORD PTR [rbp-0x49],r12
   14000154f:	mov    BYTE PTR [rbp-0x59],r12b
   140001553:	add    rdx,0x40
   140001557:	or     r9,0xffffffffffffffff
   14000155b:	xor    r8d,r8d
   14000155e:	lea    rcx,[rbp-0x59]
   140001562:	call   0x1400048b8
   140001567:	lea    rdx,[rbp-0x59]
   14000156b:	mov    ebx,0x2
   140001570:	mov    DWORD PTR [rsp+0x20],ebx
   140001574:	mov    QWORD PTR [rdi+0x18],r13
   140001578:	mov    QWORD PTR [rdi+0x10],r12
   14000157c:	mov    BYTE PTR [rdi],r12b
   14000157f:	mov    rcx,rdi
   140001582:	call   0x140004730
   140001587:	or     ebx,0x4
   14000158a:	test   bl,0x2
   14000158d:	je     0x1400015af
   14000158f:	and    ebx,0xfffffffd
   140001592:	cmp    QWORD PTR [rbp-0x41],0x10
   140001597:	jb     0x1400015a3
   140001599:	mov    rcx,QWORD PTR [rbp-0x59]
   14000159d:	call   QWORD PTR [rip+0x480d5]        # 0x140049678
   1400015a3:	mov    QWORD PTR [rbp-0x41],r13
   1400015a7:	mov    QWORD PTR [rbp-0x49],r12
   1400015ab:	mov    BYTE PTR [rbp-0x59],r12b
   1400015af:	test   bl,0x1
   1400015b2:	je     0x1400015d3
   1400015b4:	cmp    QWORD PTR [rbp-0x69],0x10
   1400015b9:	jb     0x1400015c6
   1400015bb:	mov    rcx,QWORD PTR [rsp+0x38]
   1400015c0:	call   QWORD PTR [rip+0x480b2]        # 0x140049678
   1400015c6:	mov    QWORD PTR [rbp-0x69],r13
   1400015ca:	mov    QWORD PTR [rbp-0x71],r12
   1400015ce:	mov    BYTE PTR [rsp+0x38],r12b
   1400015d3:	cmp    QWORD PTR [rbp-0x19],0x10
   1400015d8:	jb     0x1400015e4
   1400015da:	mov    rcx,QWORD PTR [rbp-0x31]
   1400015de:	call   QWORD PTR [rip+0x48094]        # 0x140049678
   1400015e4:	mov    QWORD PTR [rbp-0x19],r13
   1400015e8:	mov    QWORD PTR [rbp-0x21],r12
   1400015ec:	mov    BYTE PTR [rbp-0x31],r12b
   1400015f0:	cmp    QWORD PTR [rbp+0xf],0x10
   1400015f5:	jb     0x140001601
   1400015f7:	mov    rcx,QWORD PTR [rbp-0x9]
   1400015fb:	call   QWORD PTR [rip+0x48077]        # 0x140049678
   140001601:	mov    rax,rdi
   140001604:	mov    rcx,QWORD PTR [rbp+0x1f]
   140001608:	xor    rcx,rsp
   14000160b:	call   0x14002b100
   140001610:	add    rsp,0xe8
   140001617:	pop    r13
   140001619:	pop    r12
   14000161b:	pop    rdi
   14000161c:	pop    rsi
   14000161d:	pop    rbx
   14000161e:	pop    rbp
   14000161f:	ret    
   140001620:	rex push rbp
   140001622:	push   rbx
   140001623:	push   rsi
   140001624:	push   rdi
   140001625:	push   r12
   140001627:	lea    rbp,[rsp-0x37]
   14000162c:	sub    rsp,0x90
   140001633:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   14000163b:	mov    rax,QWORD PTR [rip+0x66bae]        # 0x1400681f0
   140001642:	xor    rax,rsp
   140001645:	mov    QWORD PTR [rbp+0x27],rax
   140001649:	mov    r12,r9
   14000164c:	mov    rbx,rdx
   14000164f:	mov    rdi,rcx
   140001652:	and    DWORD PTR [rbp-0x39],0x0
   140001656:	mov    rdx,r8
   140001659:	lea    rcx,[rbp-0x29]
   14000165d:	call   0x140001208
   140001662:	nop
   140001663:	lea    rdx,[rbp-0x29]
   140001667:	lea    rcx,[rbp-0x1]
   14000166b:	call   0x14000fcb8
   140001670:	cmp    QWORD PTR [rbp+0x17],0x10
   140001675:	jb     0x140001681
   140001677:	mov    rcx,QWORD PTR [rbp-0x1]
   14000167b:	call   QWORD PTR [rip+0x47ff7]        # 0x140049678
   140001681:	cmp    QWORD PTR [rbp-0x19],0x0
   140001686:	je     0x140001787
   14000168c:	lea    rcx,[rip+0x4f265]        # 0x1400508f8
   140001693:	call   QWORD PTR [rip+0x47f6f]        # 0x140049608
   140001699:	mov    r8,rax
   14000169c:	lea    rdx,[rip+0x4f255]        # 0x1400508f8
   1400016a3:	lea    rcx,[rbp-0x29]
   1400016a7:	call   0x1400049b8
   1400016ac:	cmp    rax,0xffffffffffffffff
   1400016b0:	je     0x140001787
   1400016b6:	mov    rdx,r12
   1400016b9:	lea    rcx,[rbp-0x1]
   1400016bd:	call   0x140001208
   1400016c2:	cmp    QWORD PTR [rax+0x10],0x0
   1400016c7:	setne  sil
   1400016cb:	cmp    QWORD PTR [rbp+0x17],0x10
   1400016d0:	jb     0x1400016dc
   1400016d2:	mov    rcx,QWORD PTR [rbp-0x1]
   1400016d6:	call   QWORD PTR [rip+0x47f9c]        # 0x140049678
   1400016dc:	mov    rcx,rdi
   1400016df:	test   sil,sil
   1400016e2:	je     0x140001733
   1400016e4:	lea    rdx,[rbp-0x29]
   1400016e8:	call   0x140003148
   1400016ed:	or     r9,0xffffffffffffffff
   1400016f1:	xor    r8d,r8d
   1400016f4:	mov    rdx,r12
   1400016f7:	mov    rcx,rax
   1400016fa:	call   0x1400048b8
   1400016ff:	lea    rdx,[rbp-0x29]
   140001703:	mov    rcx,rdi
   140001706:	call   0x140003148
   14000170b:	mov    QWORD PTR [rbx+0x18],0xf
   140001713:	and    QWORD PTR [rbx+0x10],0x0
   140001718:	mov    BYTE PTR [rbx],0x0
   14000171b:	or     r9,0xffffffffffffffff
   14000171f:	xor    r8d,r8d
   140001722:	mov    rdx,rax
   140001725:	mov    rcx,rbx
   140001728:	call   0x1400048b8
   14000172d:	nop
   14000172e:	jmp    0x1400017b7
   140001733:	lea    r8,[rbp-0x29]
   140001737:	lea    rdx,[rbp-0x39]
   14000173b:	call   0x140003900
   140001740:	mov    rax,QWORD PTR [rax]
   140001743:	cmp    rax,QWORD PTR [rdi+0x8]
   140001747:	je     0x140001755
   140001749:	lea    rdx,[rbp-0x29]
   14000174d:	mov    rcx,rdi
   140001750:	call   0x140003758
   140001755:	mov    QWORD PTR [rbx+0x18],0xf
   14000175d:	and    QWORD PTR [rbx+0x10],0x0
   140001762:	mov    BYTE PTR [rbx],0x0
   140001765:	lea    rcx,[rip+0x4f189]        # 0x1400508f5
   14000176c:	call   QWORD PTR [rip+0x47e96]        # 0x140049608
   140001772:	mov    r8,rax
   140001775:	lea    rdx,[rip+0x4f179]        # 0x1400508f5
   14000177c:	mov    rcx,rbx
   14000177f:	call   0x140005154
   140001784:	nop
   140001785:	jmp    0x1400017b7
   140001787:	mov    QWORD PTR [rbx+0x18],0xf
   14000178f:	and    QWORD PTR [rbx+0x10],0x0
   140001794:	mov    BYTE PTR [rbx],0x0
   140001797:	lea    rcx,[rip+0x4f157]        # 0x1400508f5
   14000179e:	call   QWORD PTR [rip+0x47e64]        # 0x140049608
   1400017a4:	mov    r8,rax
   1400017a7:	lea    rdx,[rip+0x4f147]        # 0x1400508f5
   1400017ae:	mov    rcx,rbx
   1400017b1:	call   0x140005154
   1400017b6:	nop
   1400017b7:	cmp    QWORD PTR [rbp-0x11],0x10
   1400017bc:	jb     0x1400017c8
   1400017be:	mov    rcx,QWORD PTR [rbp-0x29]
   1400017c2:	call   QWORD PTR [rip+0x47eb0]        # 0x140049678
   1400017c8:	mov    rax,rbx
   1400017cb:	mov    rcx,QWORD PTR [rbp+0x27]
   1400017cf:	xor    rcx,rsp
   1400017d2:	call   0x14002b100
   1400017d7:	add    rsp,0x90
   1400017de:	pop    r12
   1400017e0:	pop    rdi
   1400017e1:	pop    rsi
   1400017e2:	pop    rbx
   1400017e3:	pop    rbp
   1400017e4:	ret    
   1400017e5:	int3   
   1400017e6:	int3   
   1400017e7:	int3   
   1400017e8:	rex push rbp
   1400017ea:	push   rbx
   1400017eb:	push   rsi
   1400017ec:	push   rdi
   1400017ed:	push   r12
   1400017ef:	push   r13
   1400017f1:	lea    rbp,[rsp-0x27]
   1400017f6:	sub    rsp,0xe8
   1400017fd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001806:	mov    rax,QWORD PTR [rip+0x669e3]        # 0x1400681f0
   14000180d:	xor    rax,rsp
   140001810:	mov    QWORD PTR [rbp+0xf],rax
   140001814:	mov    rbx,r9
   140001817:	mov    rsi,rdx
   14000181a:	mov    r12,rcx
   14000181d:	mov    rdi,QWORD PTR [rbp+0x7f]
   140001821:	xor    r13d,r13d
   140001824:	mov    DWORD PTR [rsp+0x20],r13d
   140001829:	mov    rdx,r8
   14000182c:	lea    rcx,[rbp-0x19]
   140001830:	call   0x140001208
   140001835:	nop
   140001836:	mov    rdx,rbx
   140001839:	lea    rcx,[rbp-0x69]
   14000183d:	call   0x140001208
   140001842:	nop
   140001843:	lea    rdx,[rbp-0x19]
   140001847:	lea    rcx,[rsp+0x30]
   14000184c:	call   0x14000fcb8
   140001851:	cmp    QWORD PTR [rbp-0x79],0x10
   140001856:	jb     0x140001863
   140001858:	mov    rcx,QWORD PTR [rsp+0x30]
   14000185d:	call   QWORD PTR [rip+0x47e15]        # 0x140049678
   140001863:	lea    rdx,[rbp-0x69]
   140001867:	lea    rcx,[rsp+0x30]
   14000186c:	call   0x14000fcb8
   140001871:	cmp    QWORD PTR [rbp-0x79],0x10
   140001876:	jb     0x140001883
   140001878:	mov    rcx,QWORD PTR [rsp+0x30]
   14000187d:	call   QWORD PTR [rip+0x47df5]        # 0x140049678
   140001883:	cmp    QWORD PTR [rbp-0x9],r13
   140001887:	je     0x140001b3d
   14000188d:	cmp    QWORD PTR [rbp-0x59],r13
   140001891:	je     0x140001b3d
   140001897:	lea    rbx,[rip+0x4f05a]        # 0x1400508f8
   14000189e:	mov    rcx,rbx
   1400018a1:	call   QWORD PTR [rip+0x47d61]        # 0x140049608
   1400018a7:	mov    r8,rax
   1400018aa:	mov    rdx,rbx
   1400018ad:	lea    rcx,[rbp-0x19]
   1400018b1:	call   0x1400049b8
   1400018b6:	cmp    rax,0xffffffffffffffff
   1400018ba:	jne    0x140001b3d
   1400018c0:	mov    rcx,rbx
   1400018c3:	call   QWORD PTR [rip+0x47d3f]        # 0x140049608
   1400018c9:	mov    r8,rax
   1400018cc:	mov    rdx,rbx
   1400018cf:	lea    rcx,[rbp-0x69]
   1400018d3:	call   0x1400049b8
   1400018d8:	cmp    rax,0xffffffffffffffff
   1400018dc:	jne    0x140001b3d
   1400018e2:	mov    rdx,rdi
   1400018e5:	lea    rcx,[rsp+0x30]
   1400018ea:	call   0x140001208
   1400018ef:	cmp    QWORD PTR [rax+0x10],r13
   1400018f3:	setne  bl
   1400018f6:	cmp    QWORD PTR [rbp-0x79],0x10
   1400018fb:	jb     0x140001908
   1400018fd:	mov    rcx,QWORD PTR [rsp+0x30]
   140001902:	call   QWORD PTR [rip+0x47d70]        # 0x140049678
   140001908:	lea    rdx,[rbp-0x19]
   14000190c:	test   bl,bl
   14000190e:	je     0x140001a2a
   140001914:	lea    rcx,[rsp+0x30]
   140001919:	call   0x140005d90
   14000191e:	nop
   14000191f:	lea    r8,[rbp-0x69]
   140001923:	mov    rdx,rax
   140001926:	lea    rcx,[rbp-0x41]
   14000192a:	call   0x140005e40
   14000192f:	nop
   140001930:	mov    rdx,rax
   140001933:	mov    rcx,r12
   140001936:	call   0x140002fec
   14000193b:	or     r9,0xffffffffffffffff
   14000193f:	xor    r8d,r8d
   140001942:	mov    rdx,rdi
   140001945:	mov    rcx,rax
   140001948:	call   0x1400048b8
   14000194d:	nop
   14000194e:	cmp    QWORD PTR [rbp-0x29],0x10
   140001953:	jb     0x14000195f
   140001955:	mov    rcx,QWORD PTR [rbp-0x41]
   140001959:	call   QWORD PTR [rip+0x47d19]        # 0x140049678
   14000195f:	mov    edi,0xf
   140001964:	mov    QWORD PTR [rbp-0x29],rdi
   140001968:	mov    QWORD PTR [rbp-0x31],r13
   14000196c:	mov    BYTE PTR [rbp-0x41],r13b
   140001970:	cmp    QWORD PTR [rbp-0x79],0x10
   140001975:	jb     0x140001982
   140001977:	mov    rcx,QWORD PTR [rsp+0x30]
   14000197c:	call   QWORD PTR [rip+0x47cf6]        # 0x140049678
   140001982:	lea    rdx,[rbp-0x19]
   140001986:	lea    rcx,[rsp+0x30]
   14000198b:	call   0x140005d90
   140001990:	nop
   140001991:	lea    r8,[rbp-0x69]
   140001995:	mov    rdx,rax
   140001998:	lea    rcx,[rbp-0x41]
   14000199c:	call   0x140005e40
   1400019a1:	nop
   1400019a2:	mov    rdx,rax
   1400019a5:	mov    rcx,r12
   1400019a8:	call   0x140002fec
   1400019ad:	mov    QWORD PTR [rsi+0x18],rdi
   1400019b1:	mov    QWORD PTR [rsi+0x10],r13
   1400019b5:	mov    BYTE PTR [rsi],r13b
   1400019b8:	or     r9,0xffffffffffffffff
   1400019bc:	xor    r8d,r8d
   1400019bf:	mov    rdx,rax
   1400019c2:	mov    rcx,rsi
   1400019c5:	call   0x1400048b8
   1400019ca:	nop
   1400019cb:	cmp    QWORD PTR [rbp-0x29],0x10
   1400019d0:	jb     0x1400019dc
   1400019d2:	mov    rcx,QWORD PTR [rbp-0x41]
   1400019d6:	call   QWORD PTR [rip+0x47c9c]        # 0x140049678
   1400019dc:	mov    QWORD PTR [rbp-0x29],rdi
   1400019e0:	mov    QWORD PTR [rbp-0x31],r13
   1400019e4:	mov    BYTE PTR [rbp-0x41],r13b
   1400019e8:	cmp    QWORD PTR [rbp-0x79],0x10
   1400019ed:	jb     0x1400019fa
   1400019ef:	mov    rcx,QWORD PTR [rsp+0x30]
   1400019f4:	call   QWORD PTR [rip+0x47c7e]        # 0x140049678
   1400019fa:	mov    QWORD PTR [rbp-0x79],rdi
   1400019fe:	mov    QWORD PTR [rsp+0x40],r13
   140001a03:	mov    BYTE PTR [rsp+0x30],r13b
   140001a08:	cmp    QWORD PTR [rbp-0x51],0x10
   140001a0d:	jb     0x140001a19
   140001a0f:	mov    rcx,QWORD PTR [rbp-0x69]
   140001a13:	call   QWORD PTR [rip+0x47c5f]        # 0x140049678
   140001a19:	mov    QWORD PTR [rbp-0x51],rdi
   140001a1d:	mov    QWORD PTR [rbp-0x59],r13
   140001a21:	mov    BYTE PTR [rbp-0x69],r13b
   140001a25:	jmp    0x140001b8a
   140001a2a:	lea    rcx,[rbp-0x41]
   140001a2e:	call   0x140005d90
   140001a33:	nop
   140001a34:	lea    r8,[rbp-0x69]
   140001a38:	mov    rdx,rax
   140001a3b:	lea    rcx,[rsp+0x30]
   140001a40:	call   0x140005e40
   140001a45:	nop
   140001a46:	mov    r8,rax
   140001a49:	lea    rdx,[rsp+0x20]
   140001a4e:	mov    rcx,r12
   140001a51:	call   0x140003900
   140001a56:	mov    rbx,QWORD PTR [rax]
   140001a59:	cmp    QWORD PTR [rbp-0x79],0x10
   140001a5e:	jb     0x140001a6b
   140001a60:	mov    rcx,QWORD PTR [rsp+0x30]
   140001a65:	call   QWORD PTR [rip+0x47c0d]        # 0x140049678
   140001a6b:	mov    edi,0xf
   140001a70:	mov    QWORD PTR [rbp-0x79],rdi
   140001a74:	mov    QWORD PTR [rsp+0x40],r13
   140001a79:	mov    BYTE PTR [rsp+0x30],r13b
   140001a7e:	cmp    QWORD PTR [rbp-0x29],0x10
   140001a83:	jb     0x140001a8f
   140001a85:	mov    rcx,QWORD PTR [rbp-0x41]
   140001a89:	call   QWORD PTR [rip+0x47be9]        # 0x140049678
   140001a8f:	cmp    rbx,QWORD PTR [r12+0x8]
   140001a94:	je     0x140001af3
   140001a96:	lea    rdx,[rbp-0x19]
   140001a9a:	lea    rcx,[rbp-0x41]
   140001a9e:	call   0x140005d90
   140001aa3:	nop
   140001aa4:	lea    r8,[rbp-0x69]
   140001aa8:	mov    rdx,rax
   140001aab:	lea    rcx,[rsp+0x30]
   140001ab0:	call   0x140005e40
   140001ab5:	nop
   140001ab6:	mov    rdx,rax
   140001ab9:	mov    rcx,r12
   140001abc:	call   0x140003758
   140001ac1:	nop
   140001ac2:	cmp    QWORD PTR [rbp-0x79],0x10
   140001ac7:	jb     0x140001ad4
   140001ac9:	mov    rcx,QWORD PTR [rsp+0x30]
   140001ace:	call   QWORD PTR [rip+0x47ba4]        # 0x140049678
   140001ad4:	mov    QWORD PTR [rbp-0x79],rdi
   140001ad8:	mov    QWORD PTR [rsp+0x40],r13
   140001add:	mov    BYTE PTR [rsp+0x30],r13b
   140001ae2:	cmp    QWORD PTR [rbp-0x29],0x10
   140001ae7:	jb     0x140001af3
   140001ae9:	mov    rcx,QWORD PTR [rbp-0x41]
   140001aed:	call   QWORD PTR [rip+0x47b85]        # 0x140049678
   140001af3:	mov    QWORD PTR [rsi+0x18],rdi
   140001af7:	mov    QWORD PTR [rsi+0x10],r13
   140001afb:	mov    BYTE PTR [rsi],r13b
   140001afe:	lea    rcx,[rip+0x4edf0]        # 0x1400508f5
   140001b05:	call   QWORD PTR [rip+0x47afd]        # 0x140049608
   140001b0b:	mov    r8,rax
   140001b0e:	lea    rdx,[rip+0x4ede0]        # 0x1400508f5
   140001b15:	mov    rcx,rsi
   140001b18:	call   0x140005154
   140001b1d:	nop
   140001b1e:	cmp    QWORD PTR [rbp-0x51],0x10
   140001b23:	jb     0x140001b2f
   140001b25:	mov    rcx,QWORD PTR [rbp-0x69]
   140001b29:	call   QWORD PTR [rip+0x47b49]        # 0x140049678
   140001b2f:	mov    QWORD PTR [rbp-0x51],rdi
   140001b33:	mov    QWORD PTR [rbp-0x59],r13
   140001b37:	mov    BYTE PTR [rbp-0x69],r13b
   140001b3b:	jmp    0x140001b8a
   140001b3d:	mov    edi,0xf
   140001b42:	mov    QWORD PTR [rsi+0x18],rdi
   140001b46:	mov    QWORD PTR [rsi+0x10],r13
   140001b4a:	mov    BYTE PTR [rsi],r13b
   140001b4d:	lea    rcx,[rip+0x4eda1]        # 0x1400508f5
   140001b54:	call   QWORD PTR [rip+0x47aae]        # 0x140049608
   140001b5a:	mov    r8,rax
   140001b5d:	lea    rdx,[rip+0x4ed91]        # 0x1400508f5
   140001b64:	mov    rcx,rsi
   140001b67:	call   0x140005154
   140001b6c:	nop
   140001b6d:	cmp    QWORD PTR [rbp-0x51],0x10
   140001b72:	jb     0x140001b7e
   140001b74:	mov    rcx,QWORD PTR [rbp-0x69]
   140001b78:	call   QWORD PTR [rip+0x47afa]        # 0x140049678
   140001b7e:	mov    QWORD PTR [rbp-0x51],rdi
   140001b82:	mov    QWORD PTR [rbp-0x59],r13
   140001b86:	mov    BYTE PTR [rbp-0x69],r13b
   140001b8a:	cmp    QWORD PTR [rbp-0x1],0x10
   140001b8f:	jb     0x140001b9b
   140001b91:	mov    rcx,QWORD PTR [rbp-0x19]
   140001b95:	call   QWORD PTR [rip+0x47add]        # 0x140049678
   140001b9b:	mov    rax,rsi
   140001b9e:	mov    rcx,QWORD PTR [rbp+0xf]
   140001ba2:	xor    rcx,rsp
   140001ba5:	call   0x14002b100
   140001baa:	add    rsp,0xe8
   140001bb1:	pop    r13
   140001bb3:	pop    r12
   140001bb5:	pop    rdi
   140001bb6:	pop    rsi
   140001bb7:	pop    rbx
   140001bb8:	pop    rbp
   140001bb9:	ret    
   140001bba:	int3   
   140001bbb:	int3   
   140001bbc:	mov    rax,rsp
   140001bbf:	push   rbp
   140001bc0:	push   rsi
   140001bc1:	push   rdi
   140001bc2:	push   r12
   140001bc4:	push   r13
   140001bc6:	lea    rbp,[rax-0x58]
   140001bca:	sub    rsp,0x130
   140001bd1:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001bda:	mov    QWORD PTR [rax+0x20],rbx
   140001bde:	mov    rax,QWORD PTR [rip+0x6660b]        # 0x1400681f0
   140001be5:	xor    rax,rsp
   140001be8:	mov    QWORD PTR [rbp+0x20],rax
   140001bec:	mov    rdi,rdx
   140001bef:	mov    r12,rcx
   140001bf2:	mov    rdx,r8
   140001bf5:	lea    rcx,[rsp+0x30]
   140001bfa:	call   0x140001208
   140001bff:	nop
   140001c00:	xor    r13d,r13d
   140001c03:	cmp    QWORD PTR [rsp+0x40],r13
   140001c08:	jne    0x140001c0f
   140001c0a:	jmp    0x140001e75
   140001c0f:	lea    rax,[rsp+0x30]
   140001c14:	mov    rcx,QWORD PTR [rsp+0x30]
   140001c19:	mov    rdx,QWORD PTR [rsp+0x48]
   140001c1e:	cmp    rdx,0x10
   140001c22:	cmovae rax,rcx
   140001c26:	cmp    BYTE PTR [rax],0x23
   140001c29:	jne    0x140001c3a
   140001c2b:	cmp    rdx,0x10
   140001c2f:	jb     0x140001e88
   140001c35:	jmp    0x140001e82
   140001c3a:	lea    rax,[rsp+0x30]
   140001c3f:	cmp    rdx,0x10
   140001c43:	cmovae rax,rcx
   140001c47:	cmp    BYTE PTR [rax],0x3b
   140001c4a:	jne    0x140001c4e
   140001c4c:	jmp    0x140001c2b
   140001c4e:	lea    rax,[rsp+0x30]
   140001c53:	cmp    rdx,0x10
   140001c57:	cmovae rax,rcx
   140001c5b:	lea    rdx,[rsp+0x20]
   140001c60:	lea    rcx,[rsp+0x30]
   140001c65:	cmp    BYTE PTR [rax],0x5b
   140001c68:	jne    0x140001d0b
   140001c6e:	mov    BYTE PTR [rsp+0x20],0x5d
   140001c73:	mov    ebx,0x1
   140001c78:	mov    r8d,ebx
   140001c7b:	call   0x1400049b8
   140001c80:	lea    r9,[rax-0x1]
   140001c84:	mov    r8d,ebx
   140001c87:	lea    rdx,[rbp-0x80]
   140001c8b:	lea    rcx,[rsp+0x30]
   140001c90:	call   0x140002e90
   140001c95:	nop
   140001c96:	mov    rdx,rax
   140001c99:	lea    rcx,[rsp+0x58]
   140001c9e:	call   0x140001208
   140001ca3:	nop
   140001ca4:	mov    rdx,rax
   140001ca7:	mov    rcx,rdi
   140001caa:	call   0x140004730
   140001caf:	nop
   140001cb0:	cmp    QWORD PTR [rsp+0x70],0x10
   140001cb6:	jb     0x140001cc3
   140001cb8:	mov    rcx,QWORD PTR [rsp+0x58]
   140001cbd:	call   QWORD PTR [rip+0x479b5]        # 0x140049678
   140001cc3:	mov    ebx,0xf
   140001cc8:	mov    QWORD PTR [rsp+0x70],rbx
   140001ccd:	mov    QWORD PTR [rsp+0x68],r13
   140001cd2:	mov    BYTE PTR [rsp+0x58],r13b
   140001cd7:	cmp    QWORD PTR [rbp-0x68],0x10
   140001cdc:	jb     0x140001ce8
   140001cde:	mov    rcx,QWORD PTR [rbp-0x80]
   140001ce2:	call   QWORD PTR [rip+0x47990]        # 0x140049678
   140001ce8:	mov    rdx,rdi
   140001ceb:	lea    rcx,[rbp-0x80]
   140001cef:	call   0x14000fcb8
   140001cf4:	cmp    QWORD PTR [rbp-0x68],0x10
   140001cf9:	jb     0x140001d06
   140001cfb:	mov    rcx,QWORD PTR [rbp-0x80]
   140001cff:	call   QWORD PTR [rip+0x47973]        # 0x140049678
   140001d05:	nop
   140001d06:	jmp    0x140001e75
   140001d0b:	mov    BYTE PTR [rsp+0x20],0x3d
   140001d10:	mov    r8d,0x1
   140001d16:	call   0x1400049b8
   140001d1b:	mov    rsi,rax
   140001d1e:	mov    r9,rax
   140001d21:	xor    r8d,r8d
   140001d24:	lea    rdx,[rsp+0x58]
   140001d29:	lea    rcx,[rsp+0x30]
   140001d2e:	call   0x140002e90
   140001d33:	nop
   140001d34:	mov    rdx,rax
   140001d37:	lea    rcx,[rbp-0x58]
   140001d3b:	call   0x140001208
   140001d40:	nop
   140001d41:	cmp    QWORD PTR [rsp+0x70],0x10
   140001d47:	jb     0x140001d54
   140001d49:	mov    rcx,QWORD PTR [rsp+0x58]
   140001d4e:	call   QWORD PTR [rip+0x47924]        # 0x140049678
   140001d54:	mov    ebx,0xf
   140001d59:	mov    QWORD PTR [rsp+0x70],rbx
   140001d5e:	mov    QWORD PTR [rsp+0x68],r13
   140001d63:	mov    BYTE PTR [rsp+0x58],r13b
   140001d68:	lea    rdx,[rbp-0x58]
   140001d6c:	lea    rcx,[rbp-0x80]
   140001d70:	call   0x14000fcb8
   140001d75:	cmp    QWORD PTR [rbp-0x68],0x10
   140001d7a:	jb     0x140001d86
   140001d7c:	mov    rcx,QWORD PTR [rbp-0x80]
   140001d80:	call   QWORD PTR [rip+0x478f2]        # 0x140049678
   140001d86:	lea    r8,[rsi+0x1]
   140001d8a:	or     rsi,0xffffffffffffffff
   140001d8e:	mov    r9,rsi
   140001d91:	lea    rdx,[rbp-0x80]
   140001d95:	lea    rcx,[rsp+0x30]
   140001d9a:	call   0x140002e90
   140001d9f:	nop
   140001da0:	mov    rdx,rax
   140001da3:	lea    rcx,[rbp-0x30]
   140001da7:	call   0x140001208
   140001dac:	nop
   140001dad:	cmp    QWORD PTR [rbp-0x68],0x10
   140001db2:	jb     0x140001dbe
   140001db4:	mov    rcx,QWORD PTR [rbp-0x80]
   140001db8:	call   QWORD PTR [rip+0x478ba]        # 0x140049678
   140001dbe:	mov    QWORD PTR [rbp-0x68],rbx
   140001dc2:	mov    QWORD PTR [rbp-0x70],r13
   140001dc6:	mov    BYTE PTR [rbp-0x80],r13b
   140001dca:	mov    rdx,rdi
   140001dcd:	lea    rcx,[rbp-0x8]
   140001dd1:	call   0x140005d90
   140001dd6:	nop
   140001dd7:	lea    r8,[rbp-0x58]
   140001ddb:	mov    rdx,rax
   140001dde:	lea    rcx,[rsp+0x58]
   140001de3:	call   0x140005e40
   140001de8:	nop
   140001de9:	mov    rdx,rax
   140001dec:	mov    rcx,r12
   140001def:	call   0x140002fec
   140001df4:	mov    r9,rsi
   140001df7:	xor    r8d,r8d
   140001dfa:	lea    rdx,[rbp-0x30]
   140001dfe:	mov    rcx,rax
   140001e01:	call   0x1400048b8
   140001e06:	nop
   140001e07:	cmp    QWORD PTR [rsp+0x70],0x10
   140001e0d:	jb     0x140001e1a
   140001e0f:	mov    rcx,QWORD PTR [rsp+0x58]
   140001e14:	call   QWORD PTR [rip+0x4785e]        # 0x140049678
   140001e1a:	mov    QWORD PTR [rsp+0x70],rbx
   140001e1f:	mov    QWORD PTR [rsp+0x68],r13
   140001e24:	mov    BYTE PTR [rsp+0x58],r13b
   140001e29:	cmp    QWORD PTR [rbp+0x10],0x10
   140001e2e:	jb     0x140001e3b
   140001e30:	mov    rcx,QWORD PTR [rbp-0x8]
   140001e34:	call   QWORD PTR [rip+0x4783e]        # 0x140049678
   140001e3a:	nop
   140001e3b:	cmp    QWORD PTR [rbp-0x18],0x10
   140001e40:	jb     0x140001e4c
   140001e42:	mov    rcx,QWORD PTR [rbp-0x30]
   140001e46:	call   QWORD PTR [rip+0x4782c]        # 0x140049678
   140001e4c:	mov    QWORD PTR [rbp-0x18],rbx
   140001e50:	mov    QWORD PTR [rbp-0x20],r13
   140001e54:	mov    BYTE PTR [rbp-0x30],r13b
   140001e58:	cmp    QWORD PTR [rbp-0x40],0x10
   140001e5d:	jb     0x140001e69
   140001e5f:	mov    rcx,QWORD PTR [rbp-0x58]
   140001e63:	call   QWORD PTR [rip+0x4780f]        # 0x140049678
   140001e69:	mov    QWORD PTR [rbp-0x40],rbx
   140001e6d:	mov    QWORD PTR [rbp-0x48],r13
   140001e71:	mov    BYTE PTR [rbp-0x58],r13b
   140001e75:	cmp    QWORD PTR [rsp+0x48],0x10
   140001e7b:	jb     0x140001e88
   140001e7d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001e82:	call   QWORD PTR [rip+0x477f0]        # 0x140049678
   140001e88:	mov    rcx,QWORD PTR [rbp+0x20]
   140001e8c:	xor    rcx,rsp
   140001e8f:	call   0x14002b100
   140001e94:	mov    rbx,QWORD PTR [rsp+0x178]
   140001e9c:	add    rsp,0x130
   140001ea3:	pop    r13
   140001ea5:	pop    r12
   140001ea7:	pop    rdi
   140001ea8:	pop    rsi
   140001ea9:	pop    rbp
   140001eaa:	ret    
   140001eab:	int3   
   140001eac:	mov    rax,rsp
   140001eaf:	push   rbp
   140001eb0:	push   rsi
   140001eb1:	push   rdi
   140001eb2:	lea    rbp,[rax-0xb8]
   140001eb9:	sub    rsp,0x1a0
   140001ec0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001ec9:	mov    QWORD PTR [rax+0x18],rbx
   140001ecd:	mov    rax,QWORD PTR [rip+0x6631c]        # 0x1400681f0
   140001ed4:	xor    rax,rsp
   140001ed7:	mov    QWORD PTR [rbp+0x90],rax
   140001ede:	mov    rbx,rdx
   140001ee1:	mov    rdi,rcx
   140001ee4:	call   0x140003878
   140001ee9:	cmp    QWORD PTR [rbx+0x18],0x8
   140001eee:	jb     0x140001ef3
   140001ef0:	mov    rbx,QWORD PTR [rbx]
   140001ef3:	mov    r8d,0x1
   140001ef9:	mov    rdx,rbx
   140001efc:	lea    rcx,[rsp+0x30]
   140001f01:	call   0x140003a0c
   140001f06:	nop
   140001f07:	mov    rdx,QWORD PTR [rsp+0x30]
   140001f0c:	movsxd rax,DWORD PTR [rdx+0x4]
   140001f10:	mov    ecx,DWORD PTR [rsp+rax*1+0x40]
   140001f14:	mov    eax,ecx
   140001f16:	shr    eax,0x2
   140001f19:	test   al,0x1
   140001f1b:	jne    0x140002015
   140001f21:	test   cl,0x6
   140001f24:	jne    0x140002015
   140001f2a:	mov    esi,0xf
   140001f2f:	mov    QWORD PTR [rbp+0x58],rsi
   140001f33:	xor    ebx,ebx
   140001f35:	mov    QWORD PTR [rbp+0x50],rbx
   140001f39:	mov    BYTE PTR [rbp+0x40],bl
   140001f3c:	mov    QWORD PTR [rbp+0x80],rsi
   140001f43:	mov    QWORD PTR [rbp+0x78],rbx
   140001f47:	mov    BYTE PTR [rbp+0x68],bl
   140001f4a:	movsxd rax,DWORD PTR [rdx+0x4]
   140001f4e:	jmp    0x140001f69
   140001f50:	lea    r8,[rbp+0x40]
   140001f54:	lea    rdx,[rbp+0x68]
   140001f58:	mov    rcx,rdi
   140001f5b:	call   0x140001bbc
   140001f60:	mov    r11,QWORD PTR [rsp+0x30]
   140001f65:	movsxd rax,DWORD PTR [r11+0x4]
   140001f69:	mov    dl,0xa
   140001f6b:	lea    rcx,[rsp+rax*1+0x30]
   140001f70:	call   QWORD PTR [rip+0x472da]        # 0x140049250
   140001f76:	mov    r8b,al
   140001f79:	lea    rdx,[rbp+0x40]
   140001f7d:	lea    rcx,[rsp+0x30]
   140001f82:	call   0x140006c48
   140001f87:	mov    rcx,QWORD PTR [rax]
   140001f8a:	movsxd rdx,DWORD PTR [rcx+0x4]
   140001f8e:	add    rdx,rax
   140001f91:	test   BYTE PTR [rdx+0x10],0x6
   140001f95:	cmovne rdx,rbx
   140001f99:	test   rdx,rdx
   140001f9c:	jne    0x140001f50
   140001f9e:	lea    rcx,[rsp+0x40]
   140001fa3:	call   0x140004d90
   140001fa8:	test   rax,rax
   140001fab:	jne    0x140001fc9
   140001fad:	mov    rax,QWORD PTR [rsp+0x30]
   140001fb2:	movsxd rcx,DWORD PTR [rax+0x4]
   140001fb6:	lea    rcx,[rsp+rcx*1+0x30]
   140001fbb:	xor    r8d,r8d
   140001fbe:	lea    edx,[r8+0x2]
   140001fc2:	call   QWORD PTR [rip+0x47330]        # 0x1400492f8
   140001fc8:	nop
   140001fc9:	cmp    QWORD PTR [rbp+0x80],0x10
   140001fd1:	jb     0x140001fdd
   140001fd3:	mov    rcx,QWORD PTR [rbp+0x68]
   140001fd7:	call   QWORD PTR [rip+0x4769b]        # 0x140049678
   140001fdd:	mov    QWORD PTR [rbp+0x80],rsi
   140001fe4:	mov    QWORD PTR [rbp+0x78],rbx
   140001fe8:	mov    BYTE PTR [rbp+0x68],bl
   140001feb:	cmp    QWORD PTR [rbp+0x58],0x10
   140001ff0:	jb     0x140001ffc
   140001ff2:	mov    rcx,QWORD PTR [rbp+0x40]
   140001ff6:	call   QWORD PTR [rip+0x4767c]        # 0x140049678
   140001ffc:	mov    QWORD PTR [rbp+0x58],rsi
   140002000:	mov    QWORD PTR [rbp+0x50],rbx
   140002004:	mov    BYTE PTR [rbp+0x40],bl
   140002007:	lea    rcx,[rsp+0x30]
   14000200c:	call   0x140002070
   140002011:	xor    eax,eax
   140002013:	jmp    0x14000204d
   140002015:	lea    rcx,[rsp+0x40]
   14000201a:	call   0x140004d90
   14000201f:	test   rax,rax
   140002022:	jne    0x140002040
   140002024:	mov    rax,QWORD PTR [rsp+0x30]
   140002029:	movsxd rcx,DWORD PTR [rax+0x4]
   14000202d:	lea    rcx,[rsp+rcx*1+0x30]
   140002032:	xor    r8d,r8d
   140002035:	lea    edx,[r8+0x2]
   140002039:	call   QWORD PTR [rip+0x472b9]        # 0x1400492f8
   14000203f:	nop
   140002040:	lea    rcx,[rsp+0x30]
   140002045:	call   0x140002070
   14000204a:	or     eax,0xffffffff
   14000204d:	mov    rcx,QWORD PTR [rbp+0x90]
   140002054:	xor    rcx,rsp
   140002057:	call   0x14002b100
   14000205c:	mov    rbx,QWORD PTR [rsp+0x1d0]
   140002064:	add    rsp,0x1a0
   14000206b:	pop    rdi
   14000206c:	pop    rsi
   14000206d:	pop    rbp
   14000206e:	ret    
   14000206f:	int3   
   140002070:	rex push rdi
   140002072:	sub    rsp,0x30
   140002076:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000207f:	mov    QWORD PTR [rsp+0x48],rbx
   140002084:	lea    rdi,[rcx+0xb0]
   14000208b:	mov    QWORD PTR [rsp+0x40],rdi
   140002090:	mov    rax,QWORD PTR [rdi-0xb0]
   140002097:	movsxd rdx,DWORD PTR [rax+0x4]
   14000209b:	lea    rax,[rip+0x4e986]        # 0x140050a28
   1400020a2:	mov    QWORD PTR [rdx+rdi*1-0xb0],rax
   1400020aa:	lea    rcx,[rdi-0xa0]
   1400020b1:	call   0x140003b0c
   1400020b6:	nop
   1400020b7:	mov    rax,QWORD PTR [rdi-0xb0]
   1400020be:	movsxd rdx,DWORD PTR [rax+0x4]
   1400020c2:	mov    rax,QWORD PTR [rip+0x4716f]        # 0x140049238
   1400020c9:	mov    QWORD PTR [rdx+rdi*1-0xb0],rax
   1400020d1:	mov    rcx,rdi
   1400020d4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400020d9:	add    rsp,0x30
   1400020dd:	pop    rdi
   1400020de:	rex.W jmp QWORD PTR [rip+0x4721b]        # 0x140049300
   1400020e5:	int3   
   1400020e6:	int3   
   1400020e7:	int3   
   1400020e8:	mov    rax,rsp
   1400020eb:	push   rbp
   1400020ec:	push   rsi
   1400020ed:	push   rdi
   1400020ee:	push   r12
   1400020f0:	push   r13
   1400020f2:	push   r14
   1400020f4:	push   r15
   1400020f6:	lea    rbp,[rax-0x1b8]
   1400020fd:	sub    rsp,0x280
   140002104:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   14000210c:	mov    QWORD PTR [rax+0x18],rbx
   140002110:	mov    rax,QWORD PTR [rip+0x660d9]        # 0x1400681f0
   140002117:	xor    rax,rsp
   14000211a:	mov    QWORD PTR [rbp+0x170],rax
   140002121:	mov    rbx,rdx
   140002124:	mov    r13,rcx
   140002127:	mov    QWORD PTR [rsp+0x70],rcx
   14000212c:	xor    esi,esi
   14000212e:	mov    DWORD PTR [rsp+0x30],esi
   140002132:	cmp    QWORD PTR [rdx+0x18],0x8
   140002137:	jb     0x14000213c
   140002139:	mov    rbx,QWORD PTR [rdx]
   14000213c:	lea    rax,[rip+0x4eb2d]        # 0x140050c70
   140002143:	mov    QWORD PTR [rbp-0x70],rax
   140002147:	lea    rcx,[rbp+0x38]
   14000214b:	call   QWORD PTR [rip+0x47157]        # 0x1400492a8
   140002151:	nop
   140002152:	mov    DWORD PTR [rsp+0x30],0x1
   14000215a:	xor    r9d,r9d
   14000215d:	xor    r8d,r8d
   140002160:	lea    rdx,[rbp-0x68]
   140002164:	lea    rcx,[rbp-0x70]
   140002168:	call   QWORD PTR [rip+0x47132]        # 0x1400492a0
   14000216e:	nop
   14000216f:	mov    rax,QWORD PTR [rbp-0x70]
   140002173:	movsxd rcx,DWORD PTR [rax+0x4]
   140002177:	lea    rax,[rip+0x4e8c2]        # 0x140050a40
   14000217e:	mov    QWORD PTR [rbp+rcx*1-0x70],rax
   140002183:	lea    rax,[rbp-0x68]
   140002187:	mov    QWORD PTR [rsp+0x58],rax
   14000218c:	lea    rcx,[rbp-0x68]
   140002190:	call   QWORD PTR [rip+0x470ea]        # 0x140049280
   140002196:	nop
   140002197:	lea    rax,[rip+0x4e80a]        # 0x1400509a8
   14000219e:	mov    QWORD PTR [rbp-0x68],rax
   1400021a2:	mov    BYTE PTR [rbp+0x28],sil
   1400021a6:	mov    BYTE PTR [rbp+0x21],sil
   1400021aa:	lea    rcx,[rbp-0x68]
   1400021ae:	call   QWORD PTR [rip+0x470b4]        # 0x140049268
   1400021b4:	mov    QWORD PTR [rbp+0x30],rsi
   1400021b8:	mov    eax,DWORD PTR [rip+0x685fa]        # 0x14006a7b8
   1400021be:	mov    DWORD PTR [rbp+0x24],eax
   1400021c1:	mov    QWORD PTR [rbp+0x18],rsi
   1400021c5:	mov    r12d,0x2
   1400021cb:	mov    r8d,r12d
   1400021ce:	mov    rdx,rbx
   1400021d1:	lea    rcx,[rbp-0x68]
   1400021d5:	call   0x140004c7c
   1400021da:	test   rax,rax
   1400021dd:	jne    0x1400021f9
   1400021df:	mov    rax,QWORD PTR [rbp-0x70]
   1400021e3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400021e7:	lea    rcx,[rbp+rcx*1-0x70]
   1400021ec:	xor    r8d,r8d
   1400021ef:	mov    edx,r12d
   1400021f2:	call   QWORD PTR [rip+0x47100]        # 0x1400492f8
   1400021f8:	nop
   1400021f9:	mov    rax,QWORD PTR [rbp-0x70]
   1400021fd:	movsxd rcx,DWORD PTR [rax+0x4]
   140002201:	mov    eax,DWORD PTR [rbp+rcx*1-0x60]
   140002205:	shr    eax,0x2
   140002208:	test   al,0x1
   14000220a:	jne    0x140002844
   140002210:	test   BYTE PTR [rbp+rcx*1-0x60],0x6
   140002215:	jne    0x140002844
   14000221b:	mov    QWORD PTR [rsp+0x48],rsi
   140002220:	mov    ecx,0x50
   140002225:	call   QWORD PTR [rip+0x4746d]        # 0x140049698
   14000222b:	test   rax,rax
   14000222e:	je     0x14000280b
   140002234:	mov    QWORD PTR [rsp+0x40],rax
   140002239:	mov    QWORD PTR [rax],rax
   14000223c:	mov    rax,QWORD PTR [rsp+0x40]
   140002241:	mov    QWORD PTR [rax+0x8],rax
   140002245:	mov    rax,QWORD PTR [rsp+0x40]
   14000224a:	mov    QWORD PTR [rax+0x10],rax
   14000224e:	mov    rax,QWORD PTR [rsp+0x40]
   140002253:	mov    BYTE PTR [rax+0x48],0x1
   140002257:	mov    rax,QWORD PTR [rsp+0x40]
   14000225c:	mov    BYTE PTR [rax+0x49],0x1
   140002260:	mov    rdi,QWORD PTR [r13+0x8]
   140002264:	mov    rdi,QWORD PTR [rdi]
   140002267:	mov    QWORD PTR [rsp+0x30],rdi
   14000226c:	mov    QWORD PTR [rbp+0xb8],0xf
   140002277:	mov    QWORD PTR [rbp+0xb0],rsi
   14000227e:	mov    BYTE PTR [rbp+0xa0],sil
   140002285:	lea    rcx,[rip+0x4e669]        # 0x1400508f5
   14000228c:	call   QWORD PTR [rip+0x47376]        # 0x140049608
   140002292:	mov    r8,rax
   140002295:	lea    rdx,[rip+0x4e659]        # 0x1400508f5
   14000229c:	lea    rcx,[rbp+0xa0]
   1400022a3:	call   0x140005154
   1400022a8:	nop
   1400022a9:	cmp    rdi,QWORD PTR [r13+0x8]
   1400022ad:	je     0x14000279b
   1400022b3:	or     r15,0xffffffffffffffff
   1400022b7:	lea    rbx,[rdi+0x18]
   1400022bb:	mov    QWORD PTR [rsp+0x58],rbx
   1400022c0:	lea    rcx,[rip+0x4e631]        # 0x1400508f8
   1400022c7:	call   QWORD PTR [rip+0x4733b]        # 0x140049608
   1400022cd:	mov    r8,rax
   1400022d0:	lea    rdx,[rip+0x4e621]        # 0x1400508f8
   1400022d7:	mov    rcx,rbx
   1400022da:	call   0x1400049b8
   1400022df:	mov    r9,rax
   1400022e2:	xor    r8d,r8d
   1400022e5:	lea    rdx,[rbp+0x120]
   1400022ec:	mov    rcx,rbx
   1400022ef:	call   0x140002e90
   1400022f4:	nop
   1400022f5:	mov    rax,QWORD PTR [rsp+0x40]
   1400022fa:	mov    rbx,QWORD PTR [rax+0x8]
   1400022fe:	mov    rsi,rax
   140002301:	xor    r12d,r12d
   140002304:	cmp    BYTE PTR [rbx+0x49],r12b
   140002308:	jne    0x14000233a
   14000230a:	lea    rdx,[rbx+0x18]
   14000230e:	lea    r8,[rbp+0x120]
   140002315:	lea    rcx,[rsp+0x38]
   14000231a:	call   0x140004c0c
   14000231f:	test   al,al
   140002321:	je     0x140002329
   140002323:	mov    rbx,QWORD PTR [rbx+0x10]
   140002327:	jmp    0x14000232f
   140002329:	mov    rsi,rbx
   14000232c:	mov    rbx,QWORD PTR [rbx]
   14000232f:	cmp    BYTE PTR [rbx+0x49],r12b
   140002333:	je     0x14000230a
   140002335:	mov    rax,QWORD PTR [rsp+0x40]
   14000233a:	mov    QWORD PTR [rsp+0x68],rsi
   14000233f:	cmp    rsi,rax
   140002342:	je     0x140002369
   140002344:	lea    r8,[rsi+0x18]
   140002348:	lea    rdx,[rbp+0x120]
   14000234f:	lea    rcx,[rsp+0x38]
   140002354:	call   0x140004c0c
   140002359:	test   al,al
   14000235b:	mov    rax,QWORD PTR [rsp+0x40]
   140002360:	jne    0x140002369
   140002362:	lea    rcx,[rsp+0x68]
   140002367:	jmp    0x140002373
   140002369:	mov    QWORD PTR [rsp+0x60],rax
   14000236e:	lea    rcx,[rsp+0x60]
   140002373:	cmp    QWORD PTR [rcx],rax
   140002376:	jne    0x14000272e
   14000237c:	mov    QWORD PTR [rbp+0x108],0xf
   140002387:	mov    QWORD PTR [rbp+0x100],r12
   14000238e:	mov    BYTE PTR [rbp+0xf0],r12b
   140002395:	mov    r9,r15
   140002398:	xor    r8d,r8d
   14000239b:	lea    rdx,[rbp+0x120]
   1400023a2:	lea    rcx,[rbp+0xf0]
   1400023a9:	call   0x1400048b8
   1400023ae:	mov    BYTE PTR [rbp+0x118],0x1
   1400023b5:	lea    rdx,[rbp+0xf0]
   1400023bc:	lea    rcx,[rsp+0x38]
   1400023c1:	call   0x140006dac
   1400023c6:	mov    r13,rax
   1400023c9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400023ce:	mov    rsi,QWORD PTR [rcx+0x8]
   1400023d2:	mov    rbx,rcx
   1400023d5:	mov    r12b,0x1
   1400023d8:	cmp    BYTE PTR [rsi+0x49],0x0
   1400023dc:	jne    0x14000240e
   1400023de:	mov    rbx,rsi
   1400023e1:	lea    r8,[rsi+0x18]
   1400023e5:	lea    rdx,[r13+0x18]
   1400023e9:	lea    rcx,[rsp+0x38]
   1400023ee:	call   0x140004c0c
   1400023f3:	mov    r12b,al
   1400023f6:	test   al,al
   1400023f8:	je     0x1400023ff
   1400023fa:	mov    rsi,QWORD PTR [rsi]
   1400023fd:	jmp    0x140002403
   1400023ff:	mov    rsi,QWORD PTR [rsi+0x10]
   140002403:	cmp    BYTE PTR [rsi+0x49],0x0
   140002407:	je     0x1400023de
   140002409:	mov    rcx,QWORD PTR [rsp+0x40]
   14000240e:	mov    rdx,rbx
   140002411:	xor    esi,esi
   140002413:	test   r12b,r12b
   140002416:	je     0x14000247c
   140002418:	cmp    rbx,QWORD PTR [rcx]
   14000241b:	jne    0x140002438
   14000241d:	mov    r8b,0x1
   140002420:	lea    rdx,[rbp-0x80]
   140002424:	mov    r9,rbx
   140002427:	mov    QWORD PTR [rsp+0x20],r13
   14000242c:	lea    rcx,[rsp+0x38]
   140002431:	call   0x1400069b4
   140002436:	jmp    0x1400024af
   140002438:	cmp    BYTE PTR [rbx+0x49],sil
   14000243c:	je     0x140002444
   14000243e:	mov    rdx,QWORD PTR [rbx+0x10]
   140002442:	jmp    0x14000247c
   140002444:	mov    rax,QWORD PTR [rbx]
   140002447:	cmp    BYTE PTR [rax+0x49],sil
   14000244b:	jne    0x14000245c
   14000244d:	mov    rdx,rax
   140002450:	mov    rax,QWORD PTR [rax+0x10]
   140002454:	cmp    BYTE PTR [rax+0x49],sil
   140002458:	je     0x14000244d
   14000245a:	jmp    0x14000247c
   14000245c:	mov    rax,QWORD PTR [rbx+0x8]
   140002460:	jmp    0x14000246e
   140002462:	cmp    rdx,QWORD PTR [rax]
   140002465:	jne    0x140002474
   140002467:	mov    rdx,rax
   14000246a:	mov    rax,QWORD PTR [rax+0x8]
   14000246e:	cmp    BYTE PTR [rax+0x49],sil
   140002472:	je     0x140002462
   140002474:	cmp    BYTE PTR [rdx+0x49],sil
   140002478:	cmove  rdx,rax
   14000247c:	add    rdx,0x18
   140002480:	lea    r8,[r13+0x18]
   140002484:	lea    rcx,[rsp+0x38]
   140002489:	call   0x140004c0c
   14000248e:	test   al,al
   140002490:	je     0x14000249c
   140002492:	mov    r8b,r12b
   140002495:	lea    rdx,[rsp+0x78]
   14000249a:	jmp    0x140002424
   14000249c:	lea    rcx,[r13+0x18]
   1400024a0:	call   0x14000638c
   1400024a5:	mov    rcx,r13
   1400024a8:	call   QWORD PTR [rip+0x471ca]        # 0x140049678
   1400024ae:	nop
   1400024af:	cmp    QWORD PTR [rbp+0x108],0x10
   1400024b7:	jb     0x1400024c6
   1400024b9:	mov    rcx,QWORD PTR [rbp+0xf0]
   1400024c0:	call   QWORD PTR [rip+0x471b2]        # 0x140049678
   1400024c6:	mov    r9,r15
   1400024c9:	xor    r8d,r8d
   1400024cc:	lea    rdx,[rbp+0x120]
   1400024d3:	lea    rcx,[rbp+0xa0]
   1400024da:	call   0x1400048b8
   1400024df:	lea    rdx,[rip+0x4e41e]        # 0x140050904
   1400024e6:	lea    rcx,[rbp-0x70]
   1400024ea:	call   0x140005e8c
   1400024ef:	mov    rcx,rax
   1400024f2:	lea    rdx,[rbp+0xa0]
   1400024f9:	call   0x140006014
   1400024fe:	mov    rcx,rax
   140002501:	lea    rdx,[rip+0x4e3f8]        # 0x140050900
   140002508:	call   0x140005e8c
   14000250d:	mov    rcx,rax
   140002510:	lea    rdx,[rip+0x4e3e5]        # 0x1400508fc
   140002517:	call   0x140005e8c
   14000251c:	mov    r13,QWORD PTR [rsp+0x70]
   140002521:	mov    r11,QWORD PTR [r13+0x8]
   140002525:	mov    rbx,QWORD PTR [r11]
   140002528:	cmp    rbx,r11
   14000252b:	je     0x140002730
   140002531:	mov    rdi,QWORD PTR [rsp+0x58]
   140002536:	lea    rcx,[rip+0x4e3bb]        # 0x1400508f8
   14000253d:	call   QWORD PTR [rip+0x470c5]        # 0x140049608
   140002543:	mov    r8,rax
   140002546:	lea    rdx,[rip+0x4e3ab]        # 0x1400508f8
   14000254d:	lea    rcx,[rbx+0x18]
   140002551:	call   0x1400049b8
   140002556:	mov    r9,rax
   140002559:	xor    r8d,r8d
   14000255c:	lea    rdx,[rbp+0x148]
   140002563:	lea    rcx,[rbx+0x18]
   140002567:	call   0x140002e90
   14000256c:	nop
   14000256d:	mov    r12,QWORD PTR [rbp+0xb0]
   140002574:	lea    rdx,[rbp+0xa0]
   14000257b:	cmp    QWORD PTR [rbp+0xb8],0x10
   140002583:	cmovae rdx,QWORD PTR [rbp+0xa0]
   14000258b:	mov    rsi,QWORD PTR [rbp+0x158]
   140002592:	lea    rcx,[rbp+0x148]
   140002599:	cmp    QWORD PTR [rbp+0x160],0x10
   1400025a1:	cmovae rcx,QWORD PTR [rbp+0x148]
   1400025a9:	mov    r8,r12
   1400025ac:	cmp    rsi,r12
   1400025af:	cmovb  r8,rsi
   1400025b3:	call   QWORD PTR [rip+0x4703f]        # 0x1400495f8
   1400025b9:	movsxd rcx,eax
   1400025bc:	xor    eax,eax
   1400025be:	cmp    rsi,r12
   1400025c1:	setne  al
   1400025c4:	cmp    rsi,r12
   1400025c7:	cmovb  eax,r15d
   1400025cb:	xor    esi,esi
   1400025cd:	test   rcx,rcx
   1400025d0:	cmovne eax,ecx
   1400025d3:	test   eax,eax
   1400025d5:	sete   al
   1400025d8:	test   al,al
   1400025da:	je     0x1400026cc
   1400025e0:	lea    rcx,[rip+0x4e311]        # 0x1400508f8
   1400025e7:	call   QWORD PTR [rip+0x4701b]        # 0x140049608
   1400025ed:	mov    r8,rax
   1400025f0:	lea    rdx,[rip+0x4e301]        # 0x1400508f8
   1400025f7:	mov    rcx,rdi
   1400025fa:	call   0x1400049b8
   1400025ff:	lea    r8,[rax+0x1]
   140002603:	mov    r9,r15
   140002606:	lea    rdx,[rbp+0xf0]
   14000260d:	lea    rcx,[rbx+0x18]
   140002611:	call   0x140002e90
   140002616:	nop
   140002617:	mov    QWORD PTR [rbp+0xe0],0xf
   140002622:	mov    QWORD PTR [rbp+0xd8],rsi
   140002629:	mov    BYTE PTR [rbp+0xc8],sil
   140002630:	lea    rdx,[rbx+0x40]
   140002634:	mov    r9,r15
   140002637:	xor    r8d,r8d
   14000263a:	lea    rcx,[rbp+0xc8]
   140002641:	call   0x1400048b8
   140002646:	nop
   140002647:	lea    rdx,[rbp+0xf0]
   14000264e:	lea    rcx,[rbp-0x70]
   140002652:	call   0x140006014
   140002657:	mov    rcx,rax
   14000265a:	lea    rdx,[rip+0x4e2a7]        # 0x140050908
   140002661:	call   0x140005e8c
   140002666:	mov    rcx,rax
   140002669:	lea    rdx,[rbp+0xc8]
   140002670:	call   0x140006014
   140002675:	mov    rcx,rax
   140002678:	lea    rdx,[rip+0x4e27d]        # 0x1400508fc
   14000267f:	call   0x140005e8c
   140002684:	nop
   140002685:	cmp    QWORD PTR [rbp+0xe0],0x10
   14000268d:	jb     0x14000269c
   14000268f:	mov    rcx,QWORD PTR [rbp+0xc8]
   140002696:	call   QWORD PTR [rip+0x46fdc]        # 0x140049678
   14000269c:	mov    QWORD PTR [rbp+0xe0],0xf
   1400026a7:	mov    QWORD PTR [rbp+0xd8],rsi
   1400026ae:	mov    BYTE PTR [rbp+0xc8],sil
   1400026b5:	cmp    QWORD PTR [rbp+0x108],0x10
   1400026bd:	jb     0x1400026cc
   1400026bf:	mov    rcx,QWORD PTR [rbp+0xf0]
   1400026c6:	call   QWORD PTR [rip+0x46fac]        # 0x140049678
   1400026cc:	cmp    BYTE PTR [rbx+0x69],sil
   1400026d0:	jne    0x140002706
   1400026d2:	mov    rax,QWORD PTR [rbx+0x10]
   1400026d6:	cmp    BYTE PTR [rax+0x69],sil
   1400026da:	jne    0x1400026ea
   1400026dc:	mov    rbx,rax
   1400026df:	mov    rax,QWORD PTR [rax]
   1400026e2:	cmp    BYTE PTR [rax+0x69],sil
   1400026e6:	je     0x1400026dc
   1400026e8:	jmp    0x140002706
   1400026ea:	mov    rax,QWORD PTR [rbx+0x8]
   1400026ee:	jmp    0x1400026fd
   1400026f0:	cmp    rbx,QWORD PTR [rax+0x10]
   1400026f4:	jne    0x140002703
   1400026f6:	mov    rbx,rax
   1400026f9:	mov    rax,QWORD PTR [rax+0x8]
   1400026fd:	cmp    BYTE PTR [rax+0x69],sil
   140002701:	je     0x1400026f0
   140002703:	mov    rbx,rax
   140002706:	cmp    QWORD PTR [rbp+0x160],0x10
   14000270e:	jb     0x14000271d
   140002710:	mov    rcx,QWORD PTR [rbp+0x148]
   140002717:	call   QWORD PTR [rip+0x46f5b]        # 0x140049678
   14000271d:	cmp    rbx,QWORD PTR [r13+0x8]
   140002721:	jne    0x140002536
   140002727:	mov    rdi,QWORD PTR [rsp+0x30]
   14000272c:	jmp    0x140002730
   14000272e:	xor    esi,esi
   140002730:	cmp    BYTE PTR [rdi+0x69],sil
   140002734:	jne    0x140002774
   140002736:	mov    rax,QWORD PTR [rdi+0x10]
   14000273a:	cmp    BYTE PTR [rax+0x69],sil
   14000273e:	jne    0x140002753
   140002740:	mov    rdi,rax
   140002743:	mov    QWORD PTR [rsp+0x30],rax
   140002748:	mov    rax,QWORD PTR [rax]
   14000274b:	cmp    BYTE PTR [rax+0x69],sil
   14000274f:	je     0x140002740
   140002751:	jmp    0x140002774
   140002753:	mov    rax,QWORD PTR [rdi+0x8]
   140002757:	jmp    0x140002766
   140002759:	cmp    rdi,QWORD PTR [rax+0x10]
   14000275d:	jne    0x14000276c
   14000275f:	mov    rdi,rax
   140002762:	mov    rax,QWORD PTR [rax+0x8]
   140002766:	cmp    BYTE PTR [rax+0x69],sil
   14000276a:	je     0x140002759
   14000276c:	mov    rdi,rax
   14000276f:	mov    QWORD PTR [rsp+0x30],rax
   140002774:	cmp    QWORD PTR [rbp+0x138],0x10
   14000277c:	jb     0x14000278b
   14000277e:	mov    rcx,QWORD PTR [rbp+0x120]
   140002785:	call   QWORD PTR [rip+0x46eed]        # 0x140049678
   14000278b:	cmp    rdi,QWORD PTR [r13+0x8]
   14000278f:	jne    0x1400022b7
   140002795:	mov    r12d,0x2
   14000279b:	lea    rcx,[rbp-0x68]
   14000279f:	call   0x140004d90
   1400027a4:	test   rax,rax
   1400027a7:	jne    0x1400027c3
   1400027a9:	mov    rax,QWORD PTR [rbp-0x70]
   1400027ad:	movsxd rcx,DWORD PTR [rax+0x4]
   1400027b1:	lea    rcx,[rbp+rcx*1-0x70]
   1400027b6:	xor    r8d,r8d
   1400027b9:	mov    edx,r12d
   1400027bc:	call   QWORD PTR [rip+0x46b36]        # 0x1400492f8
   1400027c2:	nop
   1400027c3:	cmp    QWORD PTR [rbp+0xb8],0x10
   1400027cb:	jb     0x1400027da
   1400027cd:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400027d4:	call   QWORD PTR [rip+0x46e9e]        # 0x140049678
   1400027da:	mov    QWORD PTR [rbp+0xb8],0xf
   1400027e5:	mov    QWORD PTR [rbp+0xb0],rsi
   1400027ec:	mov    BYTE PTR [rbp+0xa0],sil
   1400027f3:	lea    rcx,[rsp+0x38]
   1400027f8:	call   0x140004520
   1400027fd:	nop
   1400027fe:	lea    rcx,[rbp-0x70]
   140002802:	call   0x1400028a4
   140002807:	xor    eax,eax
   140002809:	jmp    0x140002878
   14000280b:	mov    QWORD PTR [rsp+0x58],rsi
   140002810:	lea    rdx,[rsp+0x58]
   140002815:	lea    rcx,[rbp+0xc8]
   14000281c:	call   QWORD PTR [rip+0x470ae]        # 0x1400498d0
   140002822:	lea    r11,[rip+0x479af]        # 0x14004a1d8
   140002829:	mov    QWORD PTR [rbp+0xc8],r11
   140002830:	lea    rdx,[rip+0x60f11]        # 0x140063748
   140002837:	lea    rcx,[rbp+0xc8]
   14000283e:	call   0x14002b560
   140002843:	int3   
   140002844:	lea    rcx,[rbp-0x68]
   140002848:	call   0x140004d90
   14000284d:	test   rax,rax
   140002850:	jne    0x14000286c
   140002852:	mov    rax,QWORD PTR [rbp-0x70]
   140002856:	movsxd rcx,DWORD PTR [rax+0x4]
   14000285a:	lea    rcx,[rbp+rcx*1-0x70]
   14000285f:	xor    r8d,r8d
   140002862:	mov    edx,r12d
   140002865:	call   QWORD PTR [rip+0x46a8d]        # 0x1400492f8
   14000286b:	nop
   14000286c:	lea    rcx,[rbp-0x70]
   140002870:	call   0x1400028a4
   140002875:	or     eax,0xffffffff
   140002878:	mov    rcx,QWORD PTR [rbp+0x170]
   14000287f:	xor    rcx,rsp
   140002882:	call   0x14002b100
   140002887:	mov    rbx,QWORD PTR [rsp+0x2d0]
   14000288f:	add    rsp,0x280
   140002896:	pop    r15
   140002898:	pop    r14
   14000289a:	pop    r13
   14000289c:	pop    r12
   14000289e:	pop    rdi
   14000289f:	pop    rsi
   1400028a0:	pop    rbp
   1400028a1:	ret    
   1400028a2:	int3   
   1400028a3:	int3   
   1400028a4:	rex push rdi
   1400028a6:	sub    rsp,0x30
   1400028aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400028b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400028b8:	lea    rdi,[rcx+0xa8]
   1400028bf:	mov    QWORD PTR [rsp+0x40],rdi
   1400028c4:	mov    rax,QWORD PTR [rdi-0xa8]
   1400028cb:	movsxd rdx,DWORD PTR [rax+0x4]
   1400028cf:	lea    rax,[rip+0x4e16a]        # 0x140050a40
   1400028d6:	mov    QWORD PTR [rdx+rdi*1-0xa8],rax
   1400028de:	lea    rcx,[rdi-0xa0]
   1400028e5:	call   0x140003b0c
   1400028ea:	nop
   1400028eb:	mov    rax,QWORD PTR [rdi-0xa8]
   1400028f2:	movsxd rdx,DWORD PTR [rax+0x4]
   1400028f6:	mov    rax,QWORD PTR [rip+0x46cc3]        # 0x1400495c0
   1400028fd:	mov    QWORD PTR [rdx+rdi*1-0xa8],rax
   140002905:	mov    rcx,rdi
   140002908:	mov    rbx,QWORD PTR [rsp+0x48]
   14000290d:	add    rsp,0x30
   140002911:	pop    rdi
   140002912:	rex.W jmp QWORD PTR [rip+0x469e7]        # 0x140049300
   140002919:	int3   
   14000291a:	int3   
   14000291b:	int3   
   14000291c:	jmp    0x140004520
   140002921:	int3   
   140002922:	int3   
   140002923:	int3   
   140002924:	mov    rax,rsp
   140002927:	push   rbp
   140002928:	push   rdi
   140002929:	push   r12
   14000292b:	lea    rbp,[rax-0x5f]
   14000292f:	sub    rsp,0xd0
   140002936:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14000293e:	mov    QWORD PTR [rax+0x18],rbx
   140002942:	mov    QWORD PTR [rax+0x20],rsi
   140002946:	mov    rax,QWORD PTR [rip+0x658a3]        # 0x1400681f0
   14000294d:	xor    rax,rsp
   140002950:	mov    QWORD PTR [rbp+0x3f],rax
   140002954:	mov    rdi,rdx
   140002957:	mov    r12,rcx
   14000295a:	mov    QWORD PTR [rbp+0x2f],0xf
   140002962:	and    QWORD PTR [rbp+0x27],0x0
   140002967:	mov    BYTE PTR [rbp+0x17],0x0
   14000296b:	and    QWORD PTR [rbp-0x69],0x0
   140002970:	and    QWORD PTR [rbp-0x61],0x0
   140002975:	and    QWORD PTR [rbp-0x59],0x0
   14000297a:	lea    rcx,[rbp-0x21]
   14000297e:	call   0x1400061a0
   140002983:	mov    rbx,rax
   140002986:	mov    QWORD PTR [rbp-0x31],rax
   14000298a:	mov    r8,QWORD PTR [rax+0x10]
   14000298e:	mov    QWORD PTR [rbp-0x39],r8
   140002992:	and    QWORD PTR [rbp-0x49],0x0
   140002997:	cmp    r8,0x10
   14000299b:	ja     0x1400029a6
   14000299d:	lea    rax,[rbp-0x49]
   1400029a1:	mov    rdx,rbx
   1400029a4:	jmp    0x1400029b9
   1400029a6:	mov    rcx,r8
   1400029a9:	call   0x14002b058
   1400029ae:	mov    QWORD PTR [rbp-0x49],rax
   1400029b2:	mov    rdx,QWORD PTR [rbx]
   1400029b5:	mov    r8,QWORD PTR [rbp-0x39]
   1400029b9:	mov    rcx,rax
   1400029bc:	call   QWORD PTR [rip+0x46f06]        # 0x1400498c8
   1400029c2:	lea    rdx,[rbp-0x49]
   1400029c6:	lea    rcx,[rbp-0x9]
   1400029ca:	call   0x140006e7c
   1400029cf:	mov    r8,rax
   1400029d2:	mov    rdx,rdi
   1400029d5:	lea    rcx,[rbp-0x69]
   1400029d9:	call   0x140006fd8
   1400029de:	nop
   1400029df:	cmp    QWORD PTR [rbx+0x10],0x10
   1400029e4:	jbe    0x1400029f4
   1400029e6:	mov    rcx,QWORD PTR [rbx]
   1400029e9:	test   rcx,rcx
   1400029ec:	je     0x1400029f4
   1400029ee:	call   QWORD PTR [rip+0x46c74]        # 0x140049668
   1400029f4:	mov    rsi,QWORD PTR [rbp-0x61]
   1400029f8:	mov    rcx,rsi
   1400029fb:	mov    rbx,QWORD PTR [rbp-0x69]
   1400029ff:	sub    rcx,rbx
   140002a02:	movabs rax,0x6666666666666667
   140002a0c:	imul   rcx
   140002a0f:	mov    rdi,rdx
   140002a12:	sar    rdi,0x4
   140002a16:	mov    rax,rdi
   140002a19:	shr    rax,0x3f
   140002a1d:	add    rdi,rax
   140002a20:	je     0x140002a45
   140002a22:	xor    esi,esi
   140002a24:	lea    r8,[rsi+rbx*1]
   140002a28:	lea    rdx,[rbp+0x17]
   140002a2c:	mov    rcx,r12
   140002a2f:	call   0x140001bbc
   140002a34:	add    rsi,0x28
   140002a38:	mov    rbx,QWORD PTR [rbp-0x69]
   140002a3c:	dec    rdi
   140002a3f:	jne    0x140002a24
   140002a41:	mov    rsi,QWORD PTR [rbp-0x61]
   140002a45:	test   rbx,rbx
   140002a48:	je     0x140002a6d
   140002a4a:	cmp    rbx,rsi
   140002a4d:	je     0x140002a64
   140002a4f:	mov    rcx,rbx
   140002a52:	call   0x14000638c
   140002a57:	add    rbx,0x28
   140002a5b:	cmp    rbx,rsi
   140002a5e:	jne    0x140002a4f
   140002a60:	mov    rbx,QWORD PTR [rbp-0x69]
   140002a64:	mov    rcx,rbx
   140002a67:	call   QWORD PTR [rip+0x46c0b]        # 0x140049678
   140002a6d:	and    QWORD PTR [rbp-0x69],0x0
   140002a72:	and    QWORD PTR [rbp-0x61],0x0
   140002a77:	and    QWORD PTR [rbp-0x59],0x0
   140002a7c:	cmp    QWORD PTR [rbp+0x2f],0x10
   140002a81:	jb     0x140002a8d
   140002a83:	mov    rcx,QWORD PTR [rbp+0x17]
   140002a87:	call   QWORD PTR [rip+0x46beb]        # 0x140049678
   140002a8d:	xor    eax,eax
   140002a8f:	mov    rcx,QWORD PTR [rbp+0x3f]
   140002a93:	xor    rcx,rsp
   140002a96:	call   0x14002b100
   140002a9b:	lea    r11,[rsp+0xd0]
   140002aa3:	mov    rbx,QWORD PTR [r11+0x30]
   140002aa7:	mov    rsi,QWORD PTR [r11+0x38]
   140002aab:	mov    rsp,r11
   140002aae:	pop    r12
   140002ab0:	pop    rdi
   140002ab1:	pop    rbp
   140002ab2:	ret    
   140002ab3:	int3   
   140002ab4:	mov    rax,rsp
   140002ab7:	push   rbp
   140002ab8:	push   rsi
   140002ab9:	push   rdi
   140002aba:	push   r12
   140002abc:	push   r13
   140002abe:	push   r14
   140002ac0:	push   r15
   140002ac2:	lea    rbp,[rax-0x5f]
   140002ac6:	sub    rsp,0xf0
   140002acd:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002ad6:	mov    QWORD PTR [rax+0x18],rbx
   140002ada:	mov    rax,QWORD PTR [rip+0x6570f]        # 0x1400681f0
   140002ae1:	xor    rax,rsp
   140002ae4:	mov    QWORD PTR [rbp+0x17],rax
   140002ae8:	mov    rdi,rdx
   140002aeb:	mov    r13,rcx
   140002aee:	mov    rax,QWORD PTR [rcx+0x8]
   140002af2:	mov    rbx,QWORD PTR [rax]
   140002af5:	mov    r15d,0xf
   140002afb:	mov    QWORD PTR [rbp-0x71],r15
   140002aff:	xor    r14d,r14d
   140002b02:	mov    QWORD PTR [rbp-0x79],r14
   140002b06:	mov    BYTE PTR [rsp+0x40],r14b
   140002b0b:	mov    ecx,r15d
   140002b0e:	mov    QWORD PTR [rbp-0x49],rcx
   140002b12:	mov    QWORD PTR [rbp-0x51],r14
   140002b16:	mov    BYTE PTR [rbp-0x61],r14b
   140002b1a:	cmp    rbx,rax
   140002b1d:	je     0x140002d53
   140002b23:	or     r12,0xffffffffffffffff
   140002b27:	lea    rcx,[rip+0x4ddca]        # 0x1400508f8
   140002b2e:	call   QWORD PTR [rip+0x46ad4]        # 0x140049608
   140002b34:	mov    r8,rax
   140002b37:	lea    rdx,[rip+0x4ddba]        # 0x1400508f8
   140002b3e:	lea    rcx,[rbx+0x18]
   140002b42:	call   0x1400049b8
   140002b47:	mov    r9,rax
   140002b4a:	xor    r8d,r8d
   140002b4d:	lea    rdx,[rbp-0x39]
   140002b51:	lea    rcx,[rbx+0x18]
   140002b55:	call   0x140002e90
   140002b5a:	nop
   140002b5b:	lea    rdx,[rip+0x4ee16]        # 0x140051978
   140002b62:	lea    rcx,[rbp-0x39]
   140002b66:	call   0x140002f24
   140002b6b:	test   eax,eax
   140002b6d:	jne    0x140002cfa
   140002b73:	lea    rcx,[rip+0x4dd7e]        # 0x1400508f8
   140002b7a:	call   QWORD PTR [rip+0x46a88]        # 0x140049608
   140002b80:	mov    r8,rax
   140002b83:	lea    rdx,[rip+0x4dd6e]        # 0x1400508f8
   140002b8a:	lea    rcx,[rbx+0x18]
   140002b8e:	call   0x1400049b8
   140002b93:	lea    r8,[rax+0x1]
   140002b97:	mov    r9,r12
   140002b9a:	lea    rdx,[rbp-0x11]
   140002b9e:	lea    rcx,[rbx+0x18]
   140002ba2:	call   0x140002e90
   140002ba7:	nop
   140002ba8:	mov    rdx,rax
   140002bab:	lea    rcx,[rsp+0x40]
   140002bb0:	call   0x140004730
   140002bb5:	nop
   140002bb6:	cmp    QWORD PTR [rbp+0x7],0x10
   140002bbb:	jb     0x140002bc7
   140002bbd:	mov    rcx,QWORD PTR [rbp-0x11]
   140002bc1:	call   QWORD PTR [rip+0x46ab1]        # 0x140049678
   140002bc7:	lea    rdx,[rbx+0x40]
   140002bcb:	mov    r9,r12
   140002bce:	xor    r8d,r8d
   140002bd1:	lea    rcx,[rbp-0x61]
   140002bd5:	call   0x1400048b8
   140002bda:	mov    r8,QWORD PTR [rdi+0x8]
   140002bde:	lea    rax,[rsp+0x40]
   140002be3:	cmp    rax,r8
   140002be6:	jae    0x140002c96
   140002bec:	lea    rax,[rsp+0x40]
   140002bf1:	cmp    QWORD PTR [rdi],rax
   140002bf4:	ja     0x140002c96
   140002bfa:	lea    rcx,[rsp+0x40]
   140002bff:	sub    rcx,QWORD PTR [rdi]
   140002c02:	movabs rax,0x6666666666666667
   140002c0c:	imul   rcx
   140002c0f:	mov    rsi,rdx
   140002c12:	sar    rsi,0x5
   140002c16:	mov    rax,rsi
   140002c19:	shr    rax,0x3f
   140002c1d:	add    rsi,rax
   140002c20:	cmp    r8,QWORD PTR [rdi+0x10]
   140002c24:	jne    0x140002c2e
   140002c26:	mov    rcx,rdi
   140002c29:	call   0x140004fec
   140002c2e:	lea    r12,[rsi+rsi*4]
   140002c32:	shl    r12,0x4
   140002c36:	add    r12,QWORD PTR [rdi]
   140002c39:	mov    rsi,QWORD PTR [rdi+0x8]
   140002c3d:	mov    QWORD PTR [rsp+0x28],rsi
   140002c42:	mov    QWORD PTR [rsp+0x20],rsi
   140002c47:	test   rsi,rsi
   140002c4a:	je     0x140002c90
   140002c4c:	mov    QWORD PTR [rsi+0x18],r15
   140002c50:	mov    QWORD PTR [rsi+0x10],r14
   140002c54:	mov    BYTE PTR [rsi],r14b
   140002c57:	or     r9,0xffffffffffffffff
   140002c5b:	xor    r8d,r8d
   140002c5e:	mov    rdx,r12
   140002c61:	mov    rcx,rsi
   140002c64:	call   0x1400048b8
   140002c69:	nop
   140002c6a:	lea    rcx,[rsi+0x28]
   140002c6e:	mov    QWORD PTR [rcx+0x18],r15
   140002c72:	mov    QWORD PTR [rcx+0x10],r14
   140002c76:	mov    BYTE PTR [rcx],r14b
   140002c79:	lea    rdx,[r12+0x28]
   140002c7e:	or     r12,0xffffffffffffffff
   140002c82:	mov    r9,r12
   140002c85:	xor    r8d,r8d
   140002c88:	call   0x1400048b8
   140002c8d:	nop
   140002c8e:	jmp    0x140002c94
   140002c90:	or     r12,0xffffffffffffffff
   140002c94:	jmp    0x140002cf5
   140002c96:	cmp    r8,QWORD PTR [rdi+0x10]
   140002c9a:	jne    0x140002ca4
   140002c9c:	mov    rcx,rdi
   140002c9f:	call   0x140004fec
   140002ca4:	mov    rsi,QWORD PTR [rdi+0x8]
   140002ca8:	mov    QWORD PTR [rsp+0x20],rsi
   140002cad:	mov    QWORD PTR [rsp+0x28],rsi
   140002cb2:	test   rsi,rsi
   140002cb5:	je     0x140002cf5
   140002cb7:	mov    QWORD PTR [rsi+0x18],r15
   140002cbb:	mov    QWORD PTR [rsi+0x10],r14
   140002cbf:	mov    BYTE PTR [rsi],r14b
   140002cc2:	mov    r9,r12
   140002cc5:	xor    r8d,r8d
   140002cc8:	lea    rdx,[rsp+0x40]
   140002ccd:	mov    rcx,rsi
   140002cd0:	call   0x1400048b8
   140002cd5:	nop
   140002cd6:	lea    rcx,[rsi+0x28]
   140002cda:	mov    QWORD PTR [rcx+0x18],r15
   140002cde:	mov    QWORD PTR [rcx+0x10],r14
   140002ce2:	mov    BYTE PTR [rcx],r14b
   140002ce5:	mov    r9,r12
   140002ce8:	xor    r8d,r8d
   140002ceb:	lea    rdx,[rbp-0x61]
   140002cef:	call   0x1400048b8
   140002cf4:	nop
   140002cf5:	add    QWORD PTR [rdi+0x8],0x50
   140002cfa:	cmp    BYTE PTR [rbx+0x69],r14b
   140002cfe:	jne    0x140002d34
   140002d00:	mov    rax,QWORD PTR [rbx+0x10]
   140002d04:	cmp    BYTE PTR [rax+0x69],r14b
   140002d08:	jne    0x140002d18
   140002d0a:	mov    rbx,rax
   140002d0d:	mov    rax,QWORD PTR [rax]
   140002d10:	cmp    BYTE PTR [rax+0x69],r14b
   140002d14:	je     0x140002d0a
   140002d16:	jmp    0x140002d34
   140002d18:	mov    rax,QWORD PTR [rbx+0x8]
   140002d1c:	jmp    0x140002d2b
   140002d1e:	cmp    rbx,QWORD PTR [rax+0x10]
   140002d22:	jne    0x140002d31
   140002d24:	mov    rbx,rax
   140002d27:	mov    rax,QWORD PTR [rax+0x8]
   140002d2b:	cmp    BYTE PTR [rax+0x69],r14b
   140002d2f:	je     0x140002d1e
   140002d31:	mov    rbx,rax
   140002d34:	cmp    QWORD PTR [rbp-0x21],0x10
   140002d39:	jb     0x140002d45
   140002d3b:	mov    rcx,QWORD PTR [rbp-0x39]
   140002d3f:	call   QWORD PTR [rip+0x46933]        # 0x140049678
   140002d45:	cmp    rbx,QWORD PTR [r13+0x8]
   140002d49:	jne    0x140002b27
   140002d4f:	mov    rcx,QWORD PTR [rbp-0x49]
   140002d53:	cmp    rcx,0x10
   140002d57:	jb     0x140002d63
   140002d59:	mov    rcx,QWORD PTR [rbp-0x61]
   140002d5d:	call   QWORD PTR [rip+0x46915]        # 0x140049678
   140002d63:	mov    QWORD PTR [rbp-0x49],r15
   140002d67:	mov    QWORD PTR [rbp-0x51],r14
   140002d6b:	mov    BYTE PTR [rbp-0x61],r14b
   140002d6f:	cmp    QWORD PTR [rbp-0x71],0x10
   140002d74:	jb     0x140002d81
   140002d76:	mov    rcx,QWORD PTR [rsp+0x40]
   140002d7b:	call   QWORD PTR [rip+0x468f7]        # 0x140049678
   140002d81:	mov    rcx,QWORD PTR [rbp+0x17]
   140002d85:	xor    rcx,rsp
   140002d88:	call   0x14002b100
   140002d8d:	mov    rbx,QWORD PTR [rsp+0x140]
   140002d95:	add    rsp,0xf0
   140002d9c:	pop    r15
   140002d9e:	pop    r14
   140002da0:	pop    r13
   140002da2:	pop    r12
   140002da4:	pop    rdi
   140002da5:	pop    rsi
   140002da6:	pop    rbp
   140002da7:	ret    
   140002da8:	rex push rbx
   140002daa:	sub    rsp,0x20
   140002dae:	cmp    QWORD PTR [rcx+0x40],0x10
   140002db3:	mov    rbx,rcx
   140002db6:	jb     0x140002dc2
   140002db8:	mov    rcx,QWORD PTR [rcx+0x28]
   140002dbc:	call   QWORD PTR [rip+0x468b6]        # 0x140049678
   140002dc2:	and    QWORD PTR [rbx+0x38],0x0
   140002dc7:	mov    QWORD PTR [rbx+0x40],0xf
   140002dcf:	mov    BYTE PTR [rbx+0x28],0x0
   140002dd3:	cmp    QWORD PTR [rbx+0x18],0x10
   140002dd8:	jb     0x140002de3
   140002dda:	mov    rcx,QWORD PTR [rbx]
   140002ddd:	call   QWORD PTR [rip+0x46895]        # 0x140049678
   140002de3:	and    QWORD PTR [rbx+0x10],0x0
   140002de8:	mov    QWORD PTR [rbx+0x18],0xf
   140002df0:	mov    BYTE PTR [rbx],0x0
   140002df3:	add    rsp,0x20
   140002df7:	pop    rbx
   140002df8:	ret    
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	mov    QWORD PTR [rsp+0x8],rbx
   140002e01:	push   rdi
   140002e02:	sub    rsp,0x20
   140002e06:	mov    rdi,r8
   140002e09:	mov    r8,QWORD PTR [rcx+0x10]
   140002e0d:	mov    rax,rdx
   140002e10:	mov    rbx,rcx
   140002e13:	cmp    r8,rdx
   140002e16:	jae    0x140002e26
   140002e18:	lea    rcx,[rip+0x4db11]        # 0x140050930
   140002e1f:	call   QWORD PTR [rip+0x4678b]        # 0x1400495b0
   140002e25:	int3   
   140002e26:	sub    r8,rax
   140002e29:	cmp    r8,rdi
   140002e2c:	cmovb  rdi,r8
   140002e30:	test   rdi,rdi
   140002e33:	je     0x140002e7f
   140002e35:	cmp    QWORD PTR [rcx+0x18],0x10
   140002e3a:	jb     0x140002e41
   140002e3c:	mov    rdx,QWORD PTR [rcx]
   140002e3f:	jmp    0x140002e44
   140002e41:	mov    rdx,rcx
   140002e44:	cmp    QWORD PTR [rcx+0x18],0x10
   140002e49:	jb     0x140002e4e
   140002e4b:	mov    rcx,QWORD PTR [rcx]
   140002e4e:	add    rdx,rax
   140002e51:	sub    r8,rdi
   140002e54:	add    rcx,rax
   140002e57:	add    rdx,rdi
   140002e5a:	call   QWORD PTR [rip+0x46790]        # 0x1400495f0
   140002e60:	mov    r11,QWORD PTR [rbx+0x10]
   140002e64:	sub    r11,rdi
   140002e67:	cmp    QWORD PTR [rbx+0x18],0x10
   140002e6c:	mov    QWORD PTR [rbx+0x10],r11
   140002e70:	jb     0x140002e77
   140002e72:	mov    rax,QWORD PTR [rbx]
   140002e75:	jmp    0x140002e7a
   140002e77:	mov    rax,rbx
   140002e7a:	mov    BYTE PTR [rax+r11*1],0x0
   140002e7f:	mov    rax,rbx
   140002e82:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e87:	add    rsp,0x20
   140002e8b:	pop    rdi
   140002e8c:	ret    
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	rex push rbx
   140002e92:	sub    rsp,0x20
   140002e96:	xor    eax,eax
   140002e98:	mov    rbx,rdx
   140002e9b:	mov    QWORD PTR [rdx+0x18],0xf
   140002ea3:	mov    QWORD PTR [rdx+0x10],rax
   140002ea7:	mov    BYTE PTR [rdx],al
   140002ea9:	mov    rdx,rcx
   140002eac:	mov    rcx,rbx
   140002eaf:	mov    DWORD PTR [rsp+0x38],eax
   140002eb3:	call   0x1400048b8
   140002eb8:	mov    rax,rbx
   140002ebb:	add    rsp,0x20
   140002ebf:	pop    rbx
   140002ec0:	ret    
   140002ec1:	int3   
   140002ec2:	int3   
   140002ec3:	int3   
   140002ec4:	mov    QWORD PTR [rsp+0x8],rbx
   140002ec9:	push   rdi
   140002eca:	sub    rsp,0x20
   140002ece:	cmp    QWORD PTR [rdx+0x18],0x10
   140002ed3:	mov    rdi,QWORD PTR [rdx+0x10]
   140002ed7:	jb     0x140002edc
   140002ed9:	mov    rdx,QWORD PTR [rdx]
   140002edc:	mov    rbx,QWORD PTR [rcx+0x10]
   140002ee0:	cmp    rbx,rbx
   140002ee3:	cmp    QWORD PTR [rcx+0x18],0x10
   140002ee8:	jb     0x140002eed
   140002eea:	mov    rcx,QWORD PTR [rcx]
   140002eed:	mov    r8,rdi
   140002ef0:	cmp    rbx,rdi
   140002ef3:	cmovb  r8,rbx
   140002ef7:	call   QWORD PTR [rip+0x466fb]        # 0x1400495f8
   140002efd:	movsxd rcx,eax
   140002f00:	xor    eax,eax
   140002f02:	cmp    rbx,rdi
   140002f05:	setne  al
   140002f08:	or     edx,0xffffffff
   140002f0b:	cmp    rbx,rdi
   140002f0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f13:	cmovb  eax,edx
   140002f16:	test   rcx,rcx
   140002f19:	cmovne eax,ecx
   140002f1c:	add    rsp,0x20
   140002f20:	pop    rdi
   140002f21:	ret    
   140002f22:	int3   
   140002f23:	int3   
   140002f24:	mov    QWORD PTR [rsp+0x8],rbx
   140002f29:	mov    QWORD PTR [rsp+0x10],rbp
   140002f2e:	mov    QWORD PTR [rsp+0x18],rsi
   140002f33:	push   rdi
   140002f34:	sub    rsp,0x20
   140002f38:	mov    rbx,rcx
   140002f3b:	mov    rcx,rdx
   140002f3e:	mov    rsi,rdx
   140002f41:	call   QWORD PTR [rip+0x466c1]        # 0x140049608
   140002f47:	mov    rdi,QWORD PTR [rbx+0x10]
   140002f4b:	cmp    rdi,rdi
   140002f4e:	mov    rbp,rax
   140002f51:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f56:	jb     0x140002f5b
   140002f58:	mov    rbx,QWORD PTR [rbx]
   140002f5b:	mov    r8,rax
   140002f5e:	cmp    rdi,rax
   140002f61:	mov    rdx,rsi
   140002f64:	cmovb  r8,rdi
   140002f68:	mov    rcx,rbx
   140002f6b:	call   QWORD PTR [rip+0x46687]        # 0x1400495f8
   140002f71:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f76:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f7b:	movsxd rcx,eax
   140002f7e:	xor    eax,eax
   140002f80:	cmp    rdi,rbp
   140002f83:	setne  al
   140002f86:	or     edx,0xffffffff
   140002f89:	cmp    rdi,rbp
   140002f8c:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f91:	cmovb  eax,edx
   140002f94:	test   rcx,rcx
   140002f97:	cmovne eax,ecx
   140002f9a:	add    rsp,0x20
   140002f9e:	pop    rdi
   140002f9f:	ret    
   140002fa0:	rex push rbx
   140002fa2:	sub    rsp,0x20
   140002fa6:	mov    rbx,rcx
   140002fa9:	mov    rcx,QWORD PTR [rcx]
   140002fac:	test   rcx,rcx
   140002faf:	je     0x140002fbf
   140002fb1:	mov    rax,QWORD PTR [rcx]
   140002fb4:	call   QWORD PTR [rax+0x20]
   140002fb7:	test   al,al
   140002fb9:	je     0x140002fbf
   140002fbb:	and    QWORD PTR [rbx],0x0
   140002fbf:	add    rsp,0x20
   140002fc3:	pop    rbx
   140002fc4:	ret    
   140002fc5:	int3   
   140002fc6:	int3   
   140002fc7:	int3   
   140002fc8:	rex push rbx
   140002fca:	sub    rsp,0x20
   140002fce:	lea    r8,[rsp+0x30]
   140002fd3:	lea    rdx,[rsp+0x30]
   140002fd8:	mov    rbx,rcx
   140002fdb:	call   0x140005454
   140002fe0:	mov    rax,rbx
   140002fe3:	add    rsp,0x20
   140002fe7:	pop    rbx
   140002fe8:	ret    
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	mov    rax,rsp
   140002fef:	push   rbp
   140002ff0:	push   rsi
   140002ff1:	push   rdi
   140002ff2:	push   r12
   140002ff4:	push   r13
   140002ff6:	lea    rbp,[rax-0x5f]
   140002ffa:	sub    rsp,0xb0
   140003001:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   140003009:	mov    QWORD PTR [rax+0x18],rbx
   14000300d:	mov    rax,QWORD PTR [rip+0x651dc]        # 0x1400681f0
   140003014:	xor    rax,rsp
   140003017:	mov    QWORD PTR [rbp+0x2f],rax
   14000301b:	mov    r12,rdx
   14000301e:	mov    rsi,rcx
   140003021:	mov    rbx,QWORD PTR [rcx+0x8]
   140003025:	mov    rdi,QWORD PTR [rbx+0x8]
   140003029:	xor    r13d,r13d
   14000302c:	jmp    0x14000304d
   14000302e:	lea    rdx,[rdi+0x18]
   140003032:	mov    r8,r12
   140003035:	mov    rcx,rsi
   140003038:	call   0x140004c0c
   14000303d:	test   al,al
   14000303f:	je     0x140003047
   140003041:	mov    rdi,QWORD PTR [rdi+0x10]
   140003045:	jmp    0x14000304d
   140003047:	mov    rbx,rdi
   14000304a:	mov    rdi,QWORD PTR [rdi]
   14000304d:	cmp    BYTE PTR [rdi+0x69],r13b
   140003051:	je     0x14000302e
   140003053:	cmp    rbx,QWORD PTR [rsi+0x8]
   140003057:	je     0x140003070
   140003059:	lea    r8,[rbx+0x18]
   14000305d:	mov    rdx,r12
   140003060:	mov    rcx,rsi
   140003063:	call   0x140004c0c
   140003068:	test   al,al
   14000306a:	je     0x140003121
   140003070:	mov    edi,0xf
   140003075:	mov    QWORD PTR [rbp+0x1f],rdi
   140003079:	mov    QWORD PTR [rbp+0x17],r13
   14000307d:	mov    BYTE PTR [rbp+0x7],r13b
   140003081:	mov    QWORD PTR [rbp-0x31],rdi
   140003085:	mov    QWORD PTR [rbp-0x39],r13
   140003089:	mov    BYTE PTR [rbp-0x49],r13b
   14000308d:	mov    rdx,r12
   140003090:	lea    rcx,[rbp-0x49]
   140003094:	call   0x140004730
   140003099:	nop
   14000309a:	mov    QWORD PTR [rbp-0x9],rdi
   14000309e:	mov    QWORD PTR [rbp-0x11],r13
   1400030a2:	mov    BYTE PTR [rbp-0x21],r13b
   1400030a6:	lea    rdx,[rbp+0x7]
   1400030aa:	lea    rcx,[rbp-0x21]
   1400030ae:	call   0x140004730
   1400030b3:	nop
   1400030b4:	lea    rdx,[rbp-0x49]
   1400030b8:	mov    rcx,rsi
   1400030bb:	call   0x14000751c
   1400030c0:	mov    r9,rax
   1400030c3:	mov    r8,rbx
   1400030c6:	lea    rdx,[rbp-0x59]
   1400030ca:	mov    rcx,rsi
   1400030cd:	call   0x1400063e0
   1400030d2:	mov    rbx,QWORD PTR [rbp-0x59]
   1400030d6:	cmp    QWORD PTR [rbp-0x9],0x10
   1400030db:	jb     0x1400030e7
   1400030dd:	mov    rcx,QWORD PTR [rbp-0x21]
   1400030e1:	call   QWORD PTR [rip+0x46591]        # 0x140049678
   1400030e7:	mov    QWORD PTR [rbp-0x9],rdi
   1400030eb:	mov    QWORD PTR [rbp-0x11],r13
   1400030ef:	mov    BYTE PTR [rbp-0x21],r13b
   1400030f3:	cmp    QWORD PTR [rbp-0x31],0x10
   1400030f8:	jb     0x140003104
   1400030fa:	mov    rcx,QWORD PTR [rbp-0x49]
   1400030fe:	call   QWORD PTR [rip+0x46574]        # 0x140049678
   140003104:	mov    QWORD PTR [rbp-0x31],rdi
   140003108:	mov    QWORD PTR [rbp-0x39],r13
   14000310c:	mov    BYTE PTR [rbp-0x49],r13b
   140003110:	cmp    QWORD PTR [rbp+0x1f],0x10
   140003115:	jb     0x140003121
   140003117:	mov    rcx,QWORD PTR [rbp+0x7]
   14000311b:	call   QWORD PTR [rip+0x46557]        # 0x140049678
   140003121:	lea    rax,[rbx+0x40]
   140003125:	mov    rcx,QWORD PTR [rbp+0x2f]
   140003129:	xor    rcx,rsp
   14000312c:	call   0x14002b100
   140003131:	mov    rbx,QWORD PTR [rsp+0xf0]
   140003139:	add    rsp,0xb0
   140003140:	pop    r13
   140003142:	pop    r12
   140003144:	pop    rdi
   140003145:	pop    rsi
   140003146:	pop    rbp
   140003147:	ret    
   140003148:	mov    rax,rsp
   14000314b:	push   rbp
   14000314c:	push   rsi
   14000314d:	push   rdi
   14000314e:	push   r12
   140003150:	push   r13
   140003152:	lea    rbp,[rax-0x5f]
   140003156:	sub    rsp,0xb0
   14000315d:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   140003165:	mov    QWORD PTR [rax+0x18],rbx
   140003169:	mov    rax,QWORD PTR [rip+0x65080]        # 0x1400681f0
   140003170:	xor    rax,rsp
   140003173:	mov    QWORD PTR [rbp+0x2f],rax
   140003177:	mov    r12,rdx
   14000317a:	mov    rsi,rcx
   14000317d:	mov    rbx,QWORD PTR [rcx+0x8]
   140003181:	mov    rdi,QWORD PTR [rbx+0x8]
   140003185:	xor    r13d,r13d
   140003188:	jmp    0x1400031a9
   14000318a:	lea    rdx,[rdi+0x18]
   14000318e:	mov    r8,r12
   140003191:	mov    rcx,rsi
   140003194:	call   0x140004c0c
   140003199:	test   al,al
   14000319b:	je     0x1400031a3
   14000319d:	mov    rdi,QWORD PTR [rdi+0x10]
   1400031a1:	jmp    0x1400031a9
   1400031a3:	mov    rbx,rdi
   1400031a6:	mov    rdi,QWORD PTR [rdi]
   1400031a9:	cmp    BYTE PTR [rdi+0x69],r13b
   1400031ad:	je     0x14000318a
   1400031af:	cmp    rbx,QWORD PTR [rsi+0x8]
   1400031b3:	je     0x1400031cc
   1400031b5:	lea    r8,[rbx+0x18]
   1400031b9:	mov    rdx,r12
   1400031bc:	mov    rcx,rsi
   1400031bf:	call   0x140004c0c
   1400031c4:	test   al,al
   1400031c6:	je     0x140003284
   1400031cc:	mov    edi,0xf
   1400031d1:	mov    QWORD PTR [rbp+0x1f],rdi
   1400031d5:	mov    QWORD PTR [rbp+0x17],r13
   1400031d9:	mov    BYTE PTR [rbp+0x7],r13b
   1400031dd:	mov    QWORD PTR [rbp-0x31],rdi
   1400031e1:	mov    QWORD PTR [rbp-0x39],r13
   1400031e5:	mov    BYTE PTR [rbp-0x49],r13b
   1400031e9:	or     r9,0xffffffffffffffff
   1400031ed:	xor    r8d,r8d
   1400031f0:	mov    rdx,r12
   1400031f3:	lea    rcx,[rbp-0x49]
   1400031f7:	call   0x1400048b8
   1400031fc:	nop
   1400031fd:	mov    QWORD PTR [rbp-0x9],rdi
   140003201:	mov    QWORD PTR [rbp-0x11],r13
   140003205:	mov    BYTE PTR [rbp-0x21],r13b
   140003209:	lea    rdx,[rbp+0x7]
   14000320d:	lea    rcx,[rbp-0x21]
   140003211:	call   0x140004730
   140003216:	nop
   140003217:	lea    rdx,[rbp-0x49]
   14000321b:	mov    rcx,rsi
   14000321e:	call   0x140007608
   140003223:	mov    r9,rax
   140003226:	mov    r8,rbx
   140003229:	lea    rdx,[rbp-0x59]
   14000322d:	mov    rcx,rsi
   140003230:	call   0x1400063e0
   140003235:	mov    rbx,QWORD PTR [rbp-0x59]
   140003239:	cmp    QWORD PTR [rbp-0x9],0x10
   14000323e:	jb     0x14000324a
   140003240:	mov    rcx,QWORD PTR [rbp-0x21]
   140003244:	call   QWORD PTR [rip+0x4642e]        # 0x140049678
   14000324a:	mov    QWORD PTR [rbp-0x9],rdi
   14000324e:	mov    QWORD PTR [rbp-0x11],r13
   140003252:	mov    BYTE PTR [rbp-0x21],r13b
   140003256:	cmp    QWORD PTR [rbp-0x31],0x10
   14000325b:	jb     0x140003267
   14000325d:	mov    rcx,QWORD PTR [rbp-0x49]
   140003261:	call   QWORD PTR [rip+0x46411]        # 0x140049678
   140003267:	mov    QWORD PTR [rbp-0x31],rdi
   14000326b:	mov    QWORD PTR [rbp-0x39],r13
   14000326f:	mov    BYTE PTR [rbp-0x49],r13b
   140003273:	cmp    QWORD PTR [rbp+0x1f],0x10
   140003278:	jb     0x140003284
   14000327a:	mov    rcx,QWORD PTR [rbp+0x7]
   14000327e:	call   QWORD PTR [rip+0x463f4]        # 0x140049678
   140003284:	lea    rax,[rbx+0x40]
   140003288:	mov    rcx,QWORD PTR [rbp+0x2f]
   14000328c:	xor    rcx,rsp
   14000328f:	call   0x14002b100
   140003294:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000329c:	add    rsp,0xb0
   1400032a3:	pop    r13
   1400032a5:	pop    r12
   1400032a7:	pop    rdi
   1400032a8:	pop    rsi
   1400032a9:	pop    rbp
   1400032aa:	ret    
   1400032ab:	int3   
   1400032ac:	mov    rax,rsp
   1400032af:	mov    QWORD PTR [rax+0x8],rbx
   1400032b3:	mov    QWORD PTR [rax+0x10],rbp
   1400032b7:	mov    QWORD PTR [rax+0x20],rsi
   1400032bb:	mov    QWORD PTR [rax+0x18],r8
   1400032bf:	push   rdi
   1400032c0:	sub    rsp,0x20
   1400032c4:	xor    ebp,ebp
   1400032c6:	mov    rsi,rdx
   1400032c9:	mov    rdi,rcx
   1400032cc:	cmp    BYTE PTR [r8+0x69],bpl
   1400032d0:	je     0x1400032e0
   1400032d2:	lea    rcx,[rip+0x4d637]        # 0x140050910
   1400032d9:	call   QWORD PTR [rip+0x462d1]        # 0x1400495b0
   1400032df:	int3   
   1400032e0:	lea    rcx,[r8+0x10]
   1400032e4:	mov    rbx,r8
   1400032e7:	mov    r9,QWORD PTR [rcx]
   1400032ea:	cmp    BYTE PTR [r9+0x69],bpl
   1400032ee:	jne    0x140003303
   1400032f0:	mov    rax,QWORD PTR [r9]
   1400032f3:	jmp    0x1400032fb
   1400032f5:	mov    r9,rax
   1400032f8:	mov    rax,QWORD PTR [rax]
   1400032fb:	cmp    BYTE PTR [rax+0x69],bpl
   1400032ff:	je     0x1400032f5
   140003301:	jmp    0x140003321
   140003303:	mov    r9,QWORD PTR [r8+0x8]
   140003307:	jmp    0x14000331b
   140003309:	cmp    r8,QWORD PTR [r9+0x10]
   14000330d:	jne    0x140003321
   14000330f:	mov    r8,r9
   140003312:	mov    QWORD PTR [rsp+0x40],r9
   140003317:	mov    r9,QWORD PTR [r9+0x8]
   14000331b:	cmp    BYTE PTR [r9+0x69],bpl
   14000331f:	je     0x140003309
   140003321:	mov    QWORD PTR [rsp+0x40],r9
   140003326:	mov    rdx,QWORD PTR [rbx]
   140003329:	cmp    BYTE PTR [rdx+0x69],bpl
   14000332d:	je     0x140003334
   14000332f:	mov    r8,QWORD PTR [rcx]
   140003332:	jmp    0x14000334f
   140003334:	mov    rax,QWORD PTR [rcx]
   140003337:	cmp    BYTE PTR [rax+0x69],bpl
   14000333b:	je     0x140003342
   14000333d:	mov    r8,rdx
   140003340:	jmp    0x14000334f
   140003342:	mov    r8,QWORD PTR [r9+0x10]
   140003346:	cmp    r9,rbx
   140003349:	jne    0x1400033db
   14000334f:	mov    rdx,QWORD PTR [rbx+0x8]
   140003353:	cmp    BYTE PTR [r8+0x69],bpl
   140003357:	jne    0x14000335d
   140003359:	mov    QWORD PTR [r8+0x8],rdx
   14000335d:	mov    rax,QWORD PTR [rdi+0x8]
   140003361:	cmp    QWORD PTR [rax+0x8],rbx
   140003365:	jne    0x14000336d
   140003367:	mov    QWORD PTR [rax+0x8],r8
   14000336b:	jmp    0x14000337b
   14000336d:	cmp    QWORD PTR [rdx],rbx
   140003370:	jne    0x140003377
   140003372:	mov    QWORD PTR [rdx],r8
   140003375:	jmp    0x14000337b
   140003377:	mov    QWORD PTR [rdx+0x10],r8
   14000337b:	mov    r9,QWORD PTR [rdi+0x8]
   14000337f:	cmp    QWORD PTR [r9],rbx
   140003382:	jne    0x1400033a6
   140003384:	cmp    BYTE PTR [r8+0x69],bpl
   140003388:	je     0x14000338f
   14000338a:	mov    rax,rdx
   14000338d:	jmp    0x1400033a3
   14000338f:	mov    rcx,QWORD PTR [r8]
   140003392:	mov    rax,r8
   140003395:	jmp    0x14000339d
   140003397:	mov    rax,rcx
   14000339a:	mov    rcx,QWORD PTR [rcx]
   14000339d:	cmp    BYTE PTR [rcx+0x69],bpl
   1400033a1:	je     0x140003397
   1400033a3:	mov    QWORD PTR [r9],rax
   1400033a6:	mov    r9,QWORD PTR [rdi+0x8]
   1400033aa:	cmp    QWORD PTR [r9+0x10],rbx
   1400033ae:	jne    0x140003446
   1400033b4:	cmp    BYTE PTR [r8+0x69],bpl
   1400033b8:	je     0x1400033bf
   1400033ba:	mov    rax,rdx
   1400033bd:	jmp    0x1400033d5
   1400033bf:	mov    rcx,QWORD PTR [r8+0x10]
   1400033c3:	mov    rax,r8
   1400033c6:	jmp    0x1400033cf
   1400033c8:	mov    rax,rcx
   1400033cb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033cf:	cmp    BYTE PTR [rcx+0x69],bpl
   1400033d3:	je     0x1400033c8
   1400033d5:	mov    QWORD PTR [r9+0x10],rax
   1400033d9:	jmp    0x140003446
   1400033db:	mov    QWORD PTR [rdx+0x8],r9
   1400033df:	mov    rax,QWORD PTR [rbx]
   1400033e2:	mov    QWORD PTR [r9],rax
   1400033e5:	cmp    r9,QWORD PTR [rcx]
   1400033e8:	jne    0x1400033ef
   1400033ea:	mov    rdx,r9
   1400033ed:	jmp    0x14000340e
   1400033ef:	mov    rdx,QWORD PTR [r9+0x8]
   1400033f3:	cmp    BYTE PTR [r8+0x69],bpl
   1400033f7:	jne    0x1400033fd
   1400033f9:	mov    QWORD PTR [r8+0x8],rdx
   1400033fd:	mov    QWORD PTR [rdx],r8
   140003400:	mov    rax,QWORD PTR [rcx]
   140003403:	mov    QWORD PTR [r9+0x10],rax
   140003407:	mov    rax,QWORD PTR [rcx]
   14000340a:	mov    QWORD PTR [rax+0x8],r9
   14000340e:	mov    rax,QWORD PTR [rdi+0x8]
   140003412:	cmp    QWORD PTR [rax+0x8],rbx
   140003416:	jne    0x14000341e
   140003418:	mov    QWORD PTR [rax+0x8],r9
   14000341c:	jmp    0x140003430
   14000341e:	mov    rax,QWORD PTR [rbx+0x8]
   140003422:	cmp    QWORD PTR [rax],rbx
   140003425:	jne    0x14000342c
   140003427:	mov    QWORD PTR [rax],r9
   14000342a:	jmp    0x140003430
   14000342c:	mov    QWORD PTR [rax+0x10],r9
   140003430:	mov    rax,QWORD PTR [rbx+0x8]
   140003434:	mov    QWORD PTR [r9+0x8],rax
   140003438:	mov    al,BYTE PTR [rbx+0x68]
   14000343b:	mov    cl,BYTE PTR [r9+0x68]
   14000343f:	mov    BYTE PTR [r9+0x68],al
   140003443:	mov    BYTE PTR [rbx+0x68],cl
   140003446:	mov    r10b,0x1
   140003449:	cmp    BYTE PTR [rbx+0x68],r10b
   14000344d:	jne    0x140003710
   140003453:	mov    rax,QWORD PTR [rdi+0x8]
   140003457:	cmp    r8,QWORD PTR [rax+0x8]
   14000345b:	je     0x14000370c
   140003461:	cmp    BYTE PTR [r8+0x68],r10b
   140003465:	jne    0x14000370c
   14000346b:	mov    rcx,QWORD PTR [rdx]
   14000346e:	cmp    r8,rcx
   140003471:	jne    0x140003547
   140003477:	mov    rcx,QWORD PTR [rdx+0x10]
   14000347b:	cmp    BYTE PTR [rcx+0x68],bpl
   14000347f:	jne    0x1400034d6
   140003481:	mov    BYTE PTR [rcx+0x68],r10b
   140003485:	mov    rcx,QWORD PTR [rdx+0x10]
   140003489:	mov    BYTE PTR [rdx+0x68],bpl
   14000348d:	mov    rax,QWORD PTR [rcx]
   140003490:	mov    QWORD PTR [rdx+0x10],rax
   140003494:	mov    rax,QWORD PTR [rcx]
   140003497:	cmp    BYTE PTR [rax+0x69],bpl
   14000349b:	jne    0x1400034a1
   14000349d:	mov    QWORD PTR [rax+0x8],rdx
   1400034a1:	mov    rax,QWORD PTR [rdx+0x8]
   1400034a5:	mov    QWORD PTR [rcx+0x8],rax
   1400034a9:	mov    rax,QWORD PTR [rdi+0x8]
   1400034ad:	cmp    rdx,QWORD PTR [rax+0x8]
   1400034b1:	jne    0x1400034b9
   1400034b3:	mov    QWORD PTR [rax+0x8],rcx
   1400034b7:	jmp    0x1400034cb
   1400034b9:	mov    rax,QWORD PTR [rdx+0x8]
   1400034bd:	cmp    rdx,QWORD PTR [rax]
   1400034c0:	jne    0x1400034c7
   1400034c2:	mov    QWORD PTR [rax],rcx
   1400034c5:	jmp    0x1400034cb
   1400034c7:	mov    QWORD PTR [rax+0x10],rcx
   1400034cb:	mov    QWORD PTR [rcx],rdx
   1400034ce:	mov    QWORD PTR [rdx+0x8],rcx
   1400034d2:	mov    rcx,QWORD PTR [rdx+0x10]
   1400034d6:	cmp    BYTE PTR [rcx+0x69],bpl
   1400034da:	jne    0x1400035c8
   1400034e0:	mov    rax,QWORD PTR [rcx]
   1400034e3:	cmp    BYTE PTR [rax+0x68],r10b
   1400034e7:	jne    0x1400034f7
   1400034e9:	mov    rax,QWORD PTR [rcx+0x10]
   1400034ed:	cmp    BYTE PTR [rax+0x68],r10b
   1400034f1:	je     0x1400035c4
   1400034f7:	mov    rax,QWORD PTR [rcx+0x10]
   1400034fb:	cmp    BYTE PTR [rax+0x68],r10b
   1400034ff:	jne    0x1400035f3
   140003505:	mov    rax,QWORD PTR [rcx]
   140003508:	mov    BYTE PTR [rax+0x68],r10b
   14000350c:	mov    r9,QWORD PTR [rcx]
   14000350f:	mov    BYTE PTR [rcx+0x68],bpl
   140003513:	mov    rax,QWORD PTR [r9+0x10]
   140003517:	mov    QWORD PTR [rcx],rax
   14000351a:	mov    rax,QWORD PTR [r9+0x10]
   14000351e:	cmp    BYTE PTR [rax+0x69],bpl
   140003522:	jne    0x140003528
   140003524:	mov    QWORD PTR [rax+0x8],rcx
   140003528:	mov    rax,QWORD PTR [rcx+0x8]
   14000352c:	mov    QWORD PTR [r9+0x8],rax
   140003530:	mov    rax,QWORD PTR [rdi+0x8]
   140003534:	cmp    rcx,QWORD PTR [rax+0x8]
   140003538:	jne    0x1400035d4
   14000353e:	mov    QWORD PTR [rax+0x8],r9
   140003542:	jmp    0x1400035e7
   140003547:	cmp    BYTE PTR [rcx+0x68],bpl
   14000354b:	jne    0x1400035a3
   14000354d:	mov    BYTE PTR [rcx+0x68],r10b
   140003551:	mov    rcx,QWORD PTR [rdx]
   140003554:	mov    BYTE PTR [rdx+0x68],bpl
   140003558:	mov    rax,QWORD PTR [rcx+0x10]
   14000355c:	mov    QWORD PTR [rdx],rax
   14000355f:	mov    rax,QWORD PTR [rcx+0x10]
   140003563:	cmp    BYTE PTR [rax+0x69],bpl
   140003567:	jne    0x14000356d
   140003569:	mov    QWORD PTR [rax+0x8],rdx
   14000356d:	mov    rax,QWORD PTR [rdx+0x8]
   140003571:	mov    QWORD PTR [rcx+0x8],rax
   140003575:	mov    rax,QWORD PTR [rdi+0x8]
   140003579:	cmp    rdx,QWORD PTR [rax+0x8]
   14000357d:	jne    0x140003585
   14000357f:	mov    QWORD PTR [rax+0x8],rcx
   140003583:	jmp    0x140003598
   140003585:	mov    rax,QWORD PTR [rdx+0x8]
   140003589:	cmp    rdx,QWORD PTR [rax+0x10]
   14000358d:	jne    0x140003595
   14000358f:	mov    QWORD PTR [rax+0x10],rcx
   140003593:	jmp    0x140003598
   140003595:	mov    QWORD PTR [rax],rcx
   140003598:	mov    QWORD PTR [rcx+0x10],rdx
   14000359c:	mov    QWORD PTR [rdx+0x8],rcx
   1400035a0:	mov    rcx,QWORD PTR [rdx]
   1400035a3:	cmp    BYTE PTR [rcx+0x69],bpl
   1400035a7:	jne    0x1400035c8
   1400035a9:	mov    rax,QWORD PTR [rcx+0x10]
   1400035ad:	cmp    BYTE PTR [rax+0x68],r10b
   1400035b1:	jne    0x14000364f
   1400035b7:	mov    rax,QWORD PTR [rcx]
   1400035ba:	cmp    BYTE PTR [rax+0x68],r10b
   1400035be:	jne    0x14000364f
   1400035c4:	mov    BYTE PTR [rcx+0x68],bpl
   1400035c8:	mov    r8,rdx
   1400035cb:	mov    rdx,QWORD PTR [rdx+0x8]
   1400035cf:	jmp    0x140003453
   1400035d4:	mov    rax,QWORD PTR [rcx+0x8]
   1400035d8:	cmp    rcx,QWORD PTR [rax+0x10]
   1400035dc:	jne    0x1400035e4
   1400035de:	mov    QWORD PTR [rax+0x10],r9
   1400035e2:	jmp    0x1400035e7
   1400035e4:	mov    QWORD PTR [rax],r9
   1400035e7:	mov    QWORD PTR [r9+0x10],rcx
   1400035eb:	mov    QWORD PTR [rcx+0x8],r9
   1400035ef:	mov    rcx,QWORD PTR [rdx+0x10]
   1400035f3:	mov    al,BYTE PTR [rdx+0x68]
   1400035f6:	mov    BYTE PTR [rcx+0x68],al
   1400035f9:	mov    BYTE PTR [rdx+0x68],r10b
   1400035fd:	mov    rax,QWORD PTR [rcx+0x10]
   140003601:	mov    BYTE PTR [rax+0x68],r10b
   140003605:	mov    rcx,QWORD PTR [rdx+0x10]
   140003609:	mov    rax,QWORD PTR [rcx]
   14000360c:	mov    QWORD PTR [rdx+0x10],rax
   140003610:	mov    rax,QWORD PTR [rcx]
   140003613:	cmp    BYTE PTR [rax+0x69],bpl
   140003617:	jne    0x14000361d
   140003619:	mov    QWORD PTR [rax+0x8],rdx
   14000361d:	mov    rax,QWORD PTR [rdx+0x8]
   140003621:	mov    QWORD PTR [rcx+0x8],rax
   140003625:	mov    rax,QWORD PTR [rdi+0x8]
   140003629:	cmp    rdx,QWORD PTR [rax+0x8]
   14000362d:	jne    0x140003635
   14000362f:	mov    QWORD PTR [rax+0x8],rcx
   140003633:	jmp    0x140003647
   140003635:	mov    rax,QWORD PTR [rdx+0x8]
   140003639:	cmp    rdx,QWORD PTR [rax]
   14000363c:	jne    0x140003643
   14000363e:	mov    QWORD PTR [rax],rcx
   140003641:	jmp    0x140003647
   140003643:	mov    QWORD PTR [rax+0x10],rcx
   140003647:	mov    QWORD PTR [rcx],rdx
   14000364a:	jmp    0x140003708
   14000364f:	mov    rax,QWORD PTR [rcx]
   140003652:	cmp    BYTE PTR [rax+0x68],r10b
   140003656:	jne    0x1400036b0
   140003658:	mov    rax,QWORD PTR [rcx+0x10]
   14000365c:	mov    BYTE PTR [rax+0x68],r10b
   140003660:	mov    r9,QWORD PTR [rcx+0x10]
   140003664:	mov    BYTE PTR [rcx+0x68],bpl
   140003668:	mov    rax,QWORD PTR [r9]
   14000366b:	mov    QWORD PTR [rcx+0x10],rax
   14000366f:	mov    rax,QWORD PTR [r9]
   140003672:	cmp    BYTE PTR [rax+0x69],bpl
   140003676:	jne    0x14000367c
   140003678:	mov    QWORD PTR [rax+0x8],rcx
   14000367c:	mov    rax,QWORD PTR [rcx+0x8]
   140003680:	mov    QWORD PTR [r9+0x8],rax
   140003684:	mov    rax,QWORD PTR [rdi+0x8]
   140003688:	cmp    rcx,QWORD PTR [rax+0x8]
   14000368c:	jne    0x140003694
   14000368e:	mov    QWORD PTR [rax+0x8],r9
   140003692:	jmp    0x1400036a6
   140003694:	mov    rax,QWORD PTR [rcx+0x8]
   140003698:	cmp    rcx,QWORD PTR [rax]
   14000369b:	jne    0x1400036a2
   14000369d:	mov    QWORD PTR [rax],r9
   1400036a0:	jmp    0x1400036a6
   1400036a2:	mov    QWORD PTR [rax+0x10],r9
   1400036a6:	mov    QWORD PTR [r9],rcx
   1400036a9:	mov    QWORD PTR [rcx+0x8],r9
   1400036ad:	mov    rcx,QWORD PTR [rdx]
   1400036b0:	mov    al,BYTE PTR [rdx+0x68]
   1400036b3:	mov    BYTE PTR [rcx+0x68],al
   1400036b6:	mov    BYTE PTR [rdx+0x68],r10b
   1400036ba:	mov    rax,QWORD PTR [rcx]
   1400036bd:	mov    BYTE PTR [rax+0x68],r10b
   1400036c1:	mov    rcx,QWORD PTR [rdx]
   1400036c4:	mov    rax,QWORD PTR [rcx+0x10]
   1400036c8:	mov    QWORD PTR [rdx],rax
   1400036cb:	mov    rax,QWORD PTR [rcx+0x10]
   1400036cf:	cmp    BYTE PTR [rax+0x69],bpl
   1400036d3:	jne    0x1400036d9
   1400036d5:	mov    QWORD PTR [rax+0x8],rdx
   1400036d9:	mov    rax,QWORD PTR [rdx+0x8]
   1400036dd:	mov    QWORD PTR [rcx+0x8],rax
   1400036e1:	mov    rax,QWORD PTR [rdi+0x8]
   1400036e5:	cmp    rdx,QWORD PTR [rax+0x8]
   1400036e9:	jne    0x1400036f1
   1400036eb:	mov    QWORD PTR [rax+0x8],rcx
   1400036ef:	jmp    0x140003704
   1400036f1:	mov    rax,QWORD PTR [rdx+0x8]
   1400036f5:	cmp    rdx,QWORD PTR [rax+0x10]
   1400036f9:	jne    0x140003701
   1400036fb:	mov    QWORD PTR [rax+0x10],rcx
   1400036ff:	jmp    0x140003704
   140003701:	mov    QWORD PTR [rax],rcx
   140003704:	mov    QWORD PTR [rcx+0x10],rdx
   140003708:	mov    QWORD PTR [rdx+0x8],rcx
   14000370c:	mov    BYTE PTR [r8+0x68],r10b
   140003710:	lea    rdx,[rbx+0x18]
   140003714:	lea    rcx,[rdi+0x19]
   140003718:	call   0x140006234
   14000371d:	mov    rcx,rbx
   140003720:	call   QWORD PTR [rip+0x45f52]        # 0x140049678
   140003726:	mov    rax,QWORD PTR [rdi+0x10]
   14000372a:	test   rax,rax
   14000372d:	je     0x140003736
   14000372f:	dec    rax
   140003732:	mov    QWORD PTR [rdi+0x10],rax
   140003736:	mov    rax,QWORD PTR [rsp+0x40]
   14000373b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003740:	mov    rbp,QWORD PTR [rsp+0x38]
   140003745:	mov    QWORD PTR [rsi],rax
   140003748:	mov    rax,rsi
   14000374b:	mov    rsi,QWORD PTR [rsp+0x48]
   140003750:	add    rsp,0x20
   140003754:	pop    rdi
   140003755:	ret    
   140003756:	int3   
   140003757:	int3   
   140003758:	mov    QWORD PTR [rsp+0x10],rbx
   14000375d:	mov    QWORD PTR [rsp+0x18],rbp
   140003762:	push   rsi
   140003763:	push   rdi
   140003764:	push   r12
   140003766:	push   r13
   140003768:	push   r14
   14000376a:	sub    rsp,0x20
   14000376e:	mov    rsi,QWORD PTR [rcx+0x8]
   140003772:	mov    r13,rdx
   140003775:	mov    rbp,rcx
   140003778:	mov    rbx,QWORD PTR [rsi+0x8]
   14000377c:	mov    rdi,rsi
   14000377f:	xor    r14d,r14d
   140003782:	jmp    0x1400037be
   140003784:	lea    rdx,[rbx+0x18]
   140003788:	mov    r8,r13
   14000378b:	mov    rcx,rbp
   14000378e:	call   0x140004c0c
   140003793:	test   al,al
   140003795:	je     0x14000379d
   140003797:	mov    rbx,QWORD PTR [rbx+0x10]
   14000379b:	jmp    0x1400037be
   14000379d:	cmp    BYTE PTR [rdi+0x69],r14b
   1400037a1:	je     0x1400037b8
   1400037a3:	lea    r8,[rbx+0x18]
   1400037a7:	mov    rdx,r13
   1400037aa:	mov    rcx,rbp
   1400037ad:	call   0x140004c0c
   1400037b2:	test   al,al
   1400037b4:	cmovne rdi,rbx
   1400037b8:	mov    rsi,rbx
   1400037bb:	mov    rbx,QWORD PTR [rbx]
   1400037be:	cmp    BYTE PTR [rbx+0x69],r14b
   1400037c2:	je     0x140003784
   1400037c4:	cmp    BYTE PTR [rdi+0x69],r14b
   1400037c8:	je     0x1400037d4
   1400037ca:	mov    rax,QWORD PTR [rbp+0x8]
   1400037ce:	mov    rbx,QWORD PTR [rax+0x8]
   1400037d2:	jmp    0x1400037f8
   1400037d4:	mov    rbx,QWORD PTR [rdi]
   1400037d7:	jmp    0x1400037f8
   1400037d9:	lea    r8,[rbx+0x18]
   1400037dd:	mov    rdx,r13
   1400037e0:	mov    rcx,rbp
   1400037e3:	call   0x140004c0c
   1400037e8:	test   al,al
   1400037ea:	je     0x1400037f4
   1400037ec:	mov    rdi,rbx
   1400037ef:	mov    rbx,QWORD PTR [rbx]
   1400037f2:	jmp    0x1400037f8
   1400037f4:	mov    rbx,QWORD PTR [rbx+0x10]
   1400037f8:	cmp    BYTE PTR [rbx+0x69],r14b
   1400037fc:	je     0x1400037d9
   1400037fe:	mov    rbx,r14
   140003801:	mov    rax,rsi
   140003804:	cmp    rsi,rdi
   140003807:	je     0x14000384b
   140003809:	inc    rbx
   14000380c:	cmp    BYTE PTR [rax+0x69],r14b
   140003810:	jne    0x140003846
   140003812:	mov    rcx,QWORD PTR [rax+0x10]
   140003816:	cmp    BYTE PTR [rcx+0x69],r14b
   14000381a:	jne    0x14000382a
   14000381c:	mov    rax,rcx
   14000381f:	mov    rcx,QWORD PTR [rcx]
   140003822:	cmp    BYTE PTR [rcx+0x69],r14b
   140003826:	je     0x14000381c
   140003828:	jmp    0x140003846
   14000382a:	mov    rcx,QWORD PTR [rax+0x8]
   14000382e:	jmp    0x14000383d
   140003830:	cmp    rax,QWORD PTR [rcx+0x10]
   140003834:	jne    0x140003843
   140003836:	mov    rax,rcx
   140003839:	mov    rcx,QWORD PTR [rcx+0x8]
   14000383d:	cmp    BYTE PTR [rcx+0x69],r14b
   140003841:	je     0x140003830
   140003843:	mov    rax,rcx
   140003846:	cmp    rax,rdi
   140003849:	jne    0x140003809
   14000384b:	lea    rdx,[rsp+0x50]
   140003850:	mov    r9,rdi
   140003853:	mov    r8,rsi
   140003856:	mov    rcx,rbp
   140003859:	call   0x140004a78
   14000385e:	mov    rbp,QWORD PTR [rsp+0x60]
   140003863:	mov    rax,rbx
   140003866:	mov    rbx,QWORD PTR [rsp+0x58]
   14000386b:	add    rsp,0x20
   14000386f:	pop    r14
   140003871:	pop    r13
   140003873:	pop    r12
   140003875:	pop    rdi
   140003876:	pop    rsi
   140003877:	ret    
   140003878:	mov    QWORD PTR [rsp+0x8],rbx
   14000387d:	mov    QWORD PTR [rsp+0x10],rbp
   140003882:	mov    QWORD PTR [rsp+0x18],rsi
   140003887:	push   rdi
   140003888:	sub    rsp,0x20
   14000388c:	mov    rax,QWORD PTR [rcx+0x8]
   140003890:	mov    rbx,rcx
   140003893:	mov    rdi,QWORD PTR [rax+0x8]
   140003897:	mov    rsi,rdi
   14000389a:	cmp    BYTE PTR [rdi+0x69],0x0
   14000389e:	jne    0x1400038ce
   1400038a0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400038a4:	mov    rcx,rbx
   1400038a7:	call   0x140004ba4
   1400038ac:	mov    rsi,QWORD PTR [rsi]
   1400038af:	lea    rdx,[rdi+0x18]
   1400038b3:	lea    rcx,[rbx+0x19]
   1400038b7:	call   0x140006234
   1400038bc:	mov    rcx,rdi
   1400038bf:	call   QWORD PTR [rip+0x45db3]        # 0x140049678
   1400038c5:	cmp    BYTE PTR [rsi+0x69],0x0
   1400038c9:	mov    rdi,rsi
   1400038cc:	je     0x1400038a0
   1400038ce:	mov    rax,QWORD PTR [rbx+0x8]
   1400038d2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400038d7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400038dc:	mov    QWORD PTR [rax+0x8],rax
   1400038e0:	mov    rax,QWORD PTR [rbx+0x8]
   1400038e4:	mov    QWORD PTR [rax],rax
   1400038e7:	mov    rax,QWORD PTR [rbx+0x8]
   1400038eb:	mov    QWORD PTR [rax+0x10],rax
   1400038ef:	and    QWORD PTR [rbx+0x10],0x0
   1400038f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038f9:	add    rsp,0x20
   1400038fd:	pop    rdi
   1400038fe:	ret    
   1400038ff:	int3   
   140003900:	mov    QWORD PTR [rsp+0x18],rbx
   140003905:	mov    QWORD PTR [rsp+0x20],rbp
   14000390a:	push   rsi
   14000390b:	push   rdi
   14000390c:	push   r12
   14000390e:	sub    rsp,0x20
   140003912:	mov    rdi,QWORD PTR [rcx+0x8]
   140003916:	mov    r12,r8
   140003919:	mov    rbp,rdx
   14000391c:	mov    rbx,QWORD PTR [rdi+0x8]
   140003920:	mov    rsi,rcx
   140003923:	jmp    0x140003944
   140003925:	lea    rdx,[rbx+0x18]
   140003929:	mov    r8,r12
   14000392c:	mov    rcx,rsi
   14000392f:	call   0x140004c0c
   140003934:	test   al,al
   140003936:	je     0x14000393e
   140003938:	mov    rbx,QWORD PTR [rbx+0x10]
   14000393c:	jmp    0x140003944
   14000393e:	mov    rdi,rbx
   140003941:	mov    rbx,QWORD PTR [rbx]
   140003944:	cmp    BYTE PTR [rbx+0x69],0x0
   140003948:	je     0x140003925
   14000394a:	mov    QWORD PTR [rsp+0x40],rdi
   14000394f:	cmp    rdi,QWORD PTR [rsi+0x8]
   140003953:	je     0x14000396f
   140003955:	lea    r8,[rdi+0x18]
   140003959:	mov    rdx,r12
   14000395c:	mov    rcx,rsi
   14000395f:	call   0x140004c0c
   140003964:	test   al,al
   140003966:	jne    0x14000396f
   140003968:	lea    rax,[rsp+0x40]
   14000396d:	jmp    0x14000397d
   14000396f:	mov    rax,QWORD PTR [rsi+0x8]
   140003973:	mov    QWORD PTR [rsp+0x48],rax
   140003978:	lea    rax,[rsp+0x48]
   14000397d:	mov    rax,QWORD PTR [rax]
   140003980:	mov    rbx,QWORD PTR [rsp+0x50]
   140003985:	mov    QWORD PTR [rbp+0x0],rax
   140003989:	mov    rax,rbp
   14000398c:	mov    rbp,QWORD PTR [rsp+0x58]
   140003991:	add    rsp,0x20
   140003995:	pop    r12
   140003997:	pop    rdi
   140003998:	pop    rsi
   140003999:	ret    
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	mov    QWORD PTR [rsp+0x18],rbx
   1400039a1:	mov    QWORD PTR [rsp+0x20],rsi
   1400039a6:	push   rdi
   1400039a7:	sub    rsp,0x20
   1400039ab:	mov    rbx,rdx
   1400039ae:	lea    rdx,[rsp+0x30]
   1400039b3:	mov    rsi,r8
   1400039b6:	mov    rdi,rcx
   1400039b9:	call   0x140004b30
   1400039be:	mov    r8,QWORD PTR [rsp+0x30]
   1400039c3:	cmp    r8,QWORD PTR [rdi+0x8]
   1400039c7:	je     0x1400039e3
   1400039c9:	add    r8,0x18
   1400039cd:	mov    rdx,rsi
   1400039d0:	mov    rcx,rdi
   1400039d3:	call   0x140004c0c
   1400039d8:	test   al,al
   1400039da:	jne    0x1400039e3
   1400039dc:	lea    rax,[rsp+0x30]
   1400039e1:	jmp    0x1400039f1
   1400039e3:	mov    rax,QWORD PTR [rdi+0x8]
   1400039e7:	mov    QWORD PTR [rsp+0x38],rax
   1400039ec:	lea    rax,[rsp+0x38]
   1400039f1:	mov    rax,QWORD PTR [rax]
   1400039f4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400039f9:	mov    QWORD PTR [rbx],rax
   1400039fc:	mov    rax,rbx
   1400039ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140003a04:	add    rsp,0x20
   140003a08:	pop    rdi
   140003a09:	ret    
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	mov    QWORD PTR [rsp+0x8],rcx
   140003a11:	push   rbp
   140003a12:	push   rsi
   140003a13:	push   rdi
   140003a14:	sub    rsp,0x30
   140003a18:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003a21:	mov    QWORD PTR [rsp+0x58],rbx
   140003a26:	mov    edi,r8d
   140003a29:	mov    rsi,rdx
   140003a2c:	mov    rbp,rcx
   140003a2f:	and    DWORD PTR [rsp+0x60],0x0
   140003a34:	lea    rax,[rip+0x4cff5]        # 0x140050a30
   140003a3b:	mov    QWORD PTR [rcx],rax
   140003a3e:	add    rcx,0xb0
   140003a45:	call   QWORD PTR [rip+0x4585d]        # 0x1400492a8
   140003a4b:	nop
   140003a4c:	mov    DWORD PTR [rsp+0x60],0x1
   140003a54:	lea    rbx,[rbp+0x10]
   140003a58:	xor    r9d,r9d
   140003a5b:	xor    r8d,r8d
   140003a5e:	mov    rdx,rbx
   140003a61:	mov    rcx,rbp
   140003a64:	call   QWORD PTR [rip+0x4582e]        # 0x140049298
   140003a6a:	nop
   140003a6b:	mov    rax,QWORD PTR [rbp+0x0]
   140003a6f:	movsxd rcx,DWORD PTR [rax+0x4]
   140003a73:	lea    rax,[rip+0x4cfae]        # 0x140050a28
   140003a7a:	mov    QWORD PTR [rcx+rbp*1],rax
   140003a7e:	mov    QWORD PTR [rsp+0x68],rbx
   140003a83:	mov    rcx,rbx
   140003a86:	call   QWORD PTR [rip+0x457f4]        # 0x140049280
   140003a8c:	nop
   140003a8d:	lea    rax,[rip+0x4cf14]        # 0x1400509a8
   140003a94:	mov    QWORD PTR [rbx],rax
   140003a97:	mov    BYTE PTR [rbx+0x90],0x0
   140003a9e:	mov    BYTE PTR [rbx+0x89],0x0
   140003aa5:	mov    rcx,rbx
   140003aa8:	call   QWORD PTR [rip+0x457ba]        # 0x140049268
   140003aae:	and    QWORD PTR [rbx+0x98],0x0
   140003ab6:	mov    eax,DWORD PTR [rip+0x66cfc]        # 0x14006a7b8
   140003abc:	mov    DWORD PTR [rbx+0x8c],eax
   140003ac2:	and    QWORD PTR [rbx+0x80],0x0
   140003aca:	or     edi,0x1
   140003acd:	mov    r8d,edi
   140003ad0:	mov    rdx,rsi
   140003ad3:	mov    rcx,rbx
   140003ad6:	call   0x140004c7c
   140003adb:	test   rax,rax
   140003ade:	jne    0x140003af9
   140003ae0:	mov    rax,QWORD PTR [rbp+0x0]
   140003ae4:	movsxd rcx,DWORD PTR [rax+0x4]
   140003ae8:	add    rcx,rbp
   140003aeb:	xor    r8d,r8d
   140003aee:	lea    edx,[r8+0x2]
   140003af2:	call   QWORD PTR [rip+0x45800]        # 0x1400492f8
   140003af8:	nop
   140003af9:	mov    rax,rbp
   140003afc:	mov    rbx,QWORD PTR [rsp+0x58]
   140003b01:	add    rsp,0x30
   140003b05:	pop    rdi
   140003b06:	pop    rsi
   140003b07:	pop    rbp
   140003b08:	ret    
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	mov    QWORD PTR [rsp+0x8],rcx
   140003b11:	push   rbx
   140003b12:	sub    rsp,0x30
   140003b16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003b1f:	mov    rbx,rcx
   140003b22:	lea    rax,[rip+0x4ce7f]        # 0x1400509a8
   140003b29:	mov    QWORD PTR [rcx],rax
   140003b2c:	cmp    QWORD PTR [rcx+0x98],0x0
   140003b34:	je     0x140003b60
   140003b36:	mov    rdx,QWORD PTR [rcx+0x20]
   140003b3a:	lea    rax,[rcx+0x88]
   140003b41:	cmp    QWORD PTR [rdx],rax
   140003b44:	jne    0x140003b60
   140003b46:	mov    rcx,QWORD PTR [rcx+0x78]
   140003b4a:	mov    rax,QWORD PTR [rbx+0x70]
   140003b4e:	mov    QWORD PTR [rdx],rax
   140003b51:	mov    rax,QWORD PTR [rbx+0x40]
   140003b55:	mov    QWORD PTR [rax],rcx
   140003b58:	sub    ecx,ecx
   140003b5a:	mov    rax,QWORD PTR [rbx+0x58]
   140003b5e:	mov    DWORD PTR [rax],ecx
   140003b60:	cmp    BYTE PTR [rbx+0x90],0x0
   140003b67:	je     0x140003b72
   140003b69:	mov    rcx,rbx
   140003b6c:	call   0x140004d90
   140003b71:	nop
   140003b72:	mov    rcx,rbx
   140003b75:	add    rsp,0x30
   140003b79:	pop    rbx
   140003b7a:	rex.W jmp QWORD PTR [rip+0x457af]        # 0x140049330
   140003b81:	int3   
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	sub    rsp,0x28
   140003b88:	mov    rcx,QWORD PTR [rcx+0x98]
   140003b8f:	test   rcx,rcx
   140003b92:	je     0x140003b9a
   140003b94:	call   QWORD PTR [rip+0x45a66]        # 0x140049600
   140003b9a:	add    rsp,0x28
   140003b9e:	ret    
   140003b9f:	int3   
   140003ba0:	mov    rax,rsp
   140003ba3:	push   rbp
   140003ba4:	push   rsi
   140003ba5:	push   rdi
   140003ba6:	push   r12
   140003ba8:	push   r13
   140003baa:	lea    rbp,[rax-0x5f]
   140003bae:	sub    rsp,0x90
   140003bb5:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   140003bbd:	mov    QWORD PTR [rax+0x18],rbx
   140003bc1:	mov    rax,QWORD PTR [rip+0x64628]        # 0x1400681f0
   140003bc8:	xor    rax,rsp
   140003bcb:	mov    QWORD PTR [rbp+0x2f],rax
   140003bcf:	mov    esi,edx
   140003bd1:	mov    rdi,rcx
   140003bd4:	or     ebx,0xffffffff
   140003bd7:	cmp    edx,ebx
   140003bd9:	jne    0x140003be2
   140003bdb:	xor    eax,eax
   140003bdd:	jmp    0x140003e03
   140003be2:	mov    rdx,QWORD PTR [rcx+0x48]
   140003be6:	cmp    QWORD PTR [rdx],0x0
   140003bea:	je     0x140003c15
   140003bec:	mov    rax,QWORD PTR [rcx+0x60]
   140003bf0:	movsxd rcx,DWORD PTR [rax]
   140003bf3:	add    rcx,QWORD PTR [rdx]
   140003bf6:	cmp    QWORD PTR [rdx],rcx
   140003bf9:	jae    0x140003c15
   140003bfb:	add    DWORD PTR [rax],ebx
   140003bfd:	mov    rdx,QWORD PTR [rdi+0x48]
   140003c01:	mov    r8,QWORD PTR [rdx]
   140003c04:	lea    rcx,[r8+0x1]
   140003c08:	mov    QWORD PTR [rdx],rcx
   140003c0b:	mov    BYTE PTR [r8],sil
   140003c0e:	mov    eax,esi
   140003c10:	jmp    0x140003e03
   140003c15:	cmp    QWORD PTR [rdi+0x98],0x0
   140003c1d:	je     0x140003e01
   140003c23:	mov    rax,QWORD PTR [rdi+0x20]
   140003c27:	mov    rcx,QWORD PTR [rax]
   140003c2a:	lea    rax,[rdi+0x88]
   140003c31:	cmp    rcx,rax
   140003c34:	jne    0x140003c4a
   140003c36:	mov    r8,QWORD PTR [rdi+0x78]
   140003c3a:	mov    r9,r8
   140003c3d:	mov    rdx,QWORD PTR [rdi+0x70]
   140003c41:	mov    rcx,rdi
   140003c44:	call   QWORD PTR [rip+0x45626]        # 0x140049270
   140003c4a:	cmp    QWORD PTR [rdi+0x80],0x0
   140003c52:	jne    0x140003c6f
   140003c54:	movsx  ecx,sil
   140003c58:	mov    rdx,QWORD PTR [rdi+0x98]
   140003c5f:	call   QWORD PTR [rip+0x45c5b]        # 0x1400498c0
   140003c65:	cmp    eax,ebx
   140003c67:	cmovne ebx,esi
   140003c6a:	jmp    0x140003e01
   140003c6f:	mov    BYTE PTR [rbp-0x19],sil
   140003c73:	mov    QWORD PTR [rbp+0x1f],0xf
   140003c7b:	and    QWORD PTR [rbp+0x17],0x0
   140003c80:	mov    BYTE PTR [rbp+0x7],0x0
   140003c84:	mov    r12d,0x8
   140003c8a:	cmp    r12b,0xfe
   140003c8e:	jbe    0x140003c9e
   140003c90:	lea    rcx,[rip+0x4ccb1]        # 0x140050948
   140003c97:	call   QWORD PTR [rip+0x458fb]        # 0x140049598
   140003c9d:	int3   
   140003c9e:	mov    r8,r12
   140003ca1:	xor    edx,edx
   140003ca3:	lea    rcx,[rbp+0x7]
   140003ca7:	call   QWORD PTR [rip+0x459ab]        # 0x140049658
   140003cad:	mov    QWORD PTR [rbp+0x17],r12
   140003cb1:	lea    rax,[rbp+0x7]
   140003cb5:	cmp    QWORD PTR [rbp+0x1f],0x10
   140003cba:	cmovae rax,QWORD PTR [rbp+0x7]
   140003cbf:	mov    BYTE PTR [rax+0x8],0x0
   140003cc3:	mov    r8,QWORD PTR [rbp+0x7]
   140003cc7:	mov    r9,QWORD PTR [rbp+0x1f]
   140003ccb:	lea    rcx,[rbp+0x7]
   140003ccf:	cmp    r9,0x10
   140003cd3:	cmovae rcx,r8
   140003cd7:	lea    rdx,[rbp+0x7]
   140003cdb:	cmovae rdx,r8
   140003cdf:	add    rcx,QWORD PTR [rbp+0x17]
   140003ce3:	lea    rax,[rbp-0x9]
   140003ce7:	mov    QWORD PTR [rsp+0x38],rax
   140003cec:	mov    QWORD PTR [rsp+0x30],rcx
   140003cf1:	mov    QWORD PTR [rsp+0x28],rdx
   140003cf6:	lea    rax,[rbp-0x11]
   140003cfa:	mov    QWORD PTR [rsp+0x20],rax
   140003cff:	lea    r9,[rbp-0x18]
   140003d03:	lea    r8,[rbp-0x19]
   140003d07:	lea    rdx,[rdi+0x8c]
   140003d0e:	mov    rcx,QWORD PTR [rdi+0x80]
   140003d15:	call   QWORD PTR [rip+0x455b5]        # 0x1400492d0
   140003d1b:	test   eax,eax
   140003d1d:	js     0x140003df0
   140003d23:	cmp    eax,0x1
   140003d26:	jg     0x140003dd3
   140003d2c:	lea    rax,[rbp+0x7]
   140003d30:	mov    r8,QWORD PTR [rbp+0x7]
   140003d34:	mov    r9,QWORD PTR [rbp+0x1f]
   140003d38:	cmp    r9,0x10
   140003d3c:	cmovae rax,r8
   140003d40:	mov    r12,QWORD PTR [rbp-0x9]
   140003d44:	sub    r12,rax
   140003d47:	je     0x140003d77
   140003d49:	lea    rcx,[rbp+0x7]
   140003d4d:	cmp    r9,0x10
   140003d51:	cmovae rcx,r8
   140003d55:	mov    r9,QWORD PTR [rdi+0x98]
   140003d5c:	mov    r8,r12
   140003d5f:	mov    edx,0x1
   140003d64:	call   QWORD PTR [rip+0x4591e]        # 0x140049688
   140003d6a:	cmp    r12,rax
   140003d6d:	jne    0x140003dae
   140003d6f:	mov    r9,QWORD PTR [rbp+0x1f]
   140003d73:	mov    r8,QWORD PTR [rbp+0x7]
   140003d77:	mov    BYTE PTR [rdi+0x89],0x1
   140003d7e:	lea    rax,[rbp-0x19]
   140003d82:	cmp    QWORD PTR [rbp-0x11],rax
   140003d86:	jne    0x140003dbb
   140003d88:	test   r12,r12
   140003d8b:	jne    0x140003ccb
   140003d91:	cmp    QWORD PTR [rbp+0x17],0x20
   140003d96:	jae    0x140003db0
   140003d98:	xor    r8d,r8d
   140003d9b:	lea    edx,[r12+0x8]
   140003da0:	lea    rcx,[rbp+0x7]
   140003da4:	call   0x1400047bc
   140003da9:	jmp    0x140003cc3
   140003dae:	jmp    0x140003df0
   140003db0:	cmp    r9,0x10
   140003db4:	jb     0x140003e01
   140003db6:	mov    rcx,r8
   140003db9:	jmp    0x140003dfb
   140003dbb:	cmp    r9,0x10
   140003dbf:	jb     0x140003c0e
   140003dc5:	mov    rcx,r8
   140003dc8:	call   QWORD PTR [rip+0x458aa]        # 0x140049678
   140003dce:	jmp    0x140003c0e
   140003dd3:	cmp    eax,0x3
   140003dd6:	jne    0x140003df0
   140003dd8:	movsx  ecx,BYTE PTR [rbp-0x19]
   140003ddc:	mov    rdx,QWORD PTR [rdi+0x98]
   140003de3:	call   QWORD PTR [rip+0x45ad7]        # 0x1400498c0
   140003de9:	cmp    eax,ebx
   140003deb:	cmovne ebx,esi
   140003dee:	jmp    0x140003df0
   140003df0:	cmp    QWORD PTR [rbp+0x1f],0x10
   140003df5:	jb     0x140003e01
   140003df7:	mov    rcx,QWORD PTR [rbp+0x7]
   140003dfb:	call   QWORD PTR [rip+0x45877]        # 0x140049678
   140003e01:	mov    eax,ebx
   140003e03:	mov    rcx,QWORD PTR [rbp+0x2f]
   140003e07:	xor    rcx,rsp
   140003e0a:	call   0x14002b100
   140003e0f:	mov    rbx,QWORD PTR [rsp+0xd0]
   140003e17:	add    rsp,0x90
   140003e1e:	pop    r13
   140003e20:	pop    r12
   140003e22:	pop    rdi
   140003e23:	pop    rsi
   140003e24:	pop    rbp
   140003e25:	ret    
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	mov    QWORD PTR [rsp+0x8],rbx
   140003e2d:	mov    QWORD PTR [rsp+0x10],rsi
   140003e32:	push   rdi
   140003e33:	sub    rsp,0x20
   140003e37:	mov    rax,QWORD PTR [rcx+0x40]
   140003e3b:	mov    rbx,rcx
   140003e3e:	xor    esi,esi
   140003e40:	mov    rcx,QWORD PTR [rax]
   140003e43:	mov    edi,edx
   140003e45:	test   rcx,rcx
   140003e48:	je     0x140003e73
   140003e4a:	mov    rax,QWORD PTR [rbx+0x20]
   140003e4e:	cmp    QWORD PTR [rax],rcx
   140003e51:	jae    0x140003e73
   140003e53:	cmp    edx,0xffffffff
   140003e56:	je     0x140003e60
   140003e58:	movzx  eax,BYTE PTR [rcx-0x1]
   140003e5c:	cmp    eax,edx
   140003e5e:	jne    0x140003e73
   140003e60:	mov    rcx,rbx
   140003e63:	call   QWORD PTR [rip+0x4544f]        # 0x1400492b8
   140003e69:	cmp    edi,0xffffffff
   140003e6c:	cmovne esi,edi
   140003e6f:	mov    eax,esi
   140003e71:	jmp    0x140003ef0
   140003e73:	mov    rdx,QWORD PTR [rbx+0x98]
   140003e7a:	test   rdx,rdx
   140003e7d:	je     0x140003eed
   140003e7f:	cmp    edi,0xffffffff
   140003e82:	je     0x140003eed
   140003e84:	cmp    QWORD PTR [rbx+0x80],rsi
   140003e8b:	jne    0x140003ea0
   140003e8d:	movzx  ecx,dil
   140003e91:	call   QWORD PTR [rip+0x45779]        # 0x140049610
   140003e97:	cmp    eax,0xffffffff
   140003e9a:	je     0x140003ea0
   140003e9c:	mov    eax,edi
   140003e9e:	jmp    0x140003ef0
   140003ea0:	mov    r8,QWORD PTR [rbx+0x40]
   140003ea4:	lea    rdx,[rbx+0x88]
   140003eab:	cmp    QWORD PTR [r8],rdx
   140003eae:	je     0x140003eed
   140003eb0:	mov    r9,QWORD PTR [rbx+0x20]
   140003eb4:	mov    BYTE PTR [rdx],dil
   140003eb7:	mov    rax,QWORD PTR [r9]
   140003eba:	cmp    rax,rdx
   140003ebd:	je     0x140003ed1
   140003ebf:	mov    QWORD PTR [rbx+0x70],rax
   140003ec3:	mov    rax,QWORD PTR [rbx+0x58]
   140003ec7:	movsxd rcx,DWORD PTR [rax]
   140003eca:	add    rcx,QWORD PTR [r8]
   140003ecd:	mov    QWORD PTR [rbx+0x78],rcx
   140003ed1:	mov    QWORD PTR [r9],rdx
   140003ed4:	mov    rax,QWORD PTR [rbx+0x40]
   140003ed8:	mov    ecx,ebx
   140003eda:	mov    QWORD PTR [rax],rdx
   140003edd:	mov    rax,QWORD PTR [rbx+0x58]
   140003ee1:	sub    ecx,edx
   140003ee3:	add    ecx,0x89
   140003ee9:	mov    DWORD PTR [rax],ecx
   140003eeb:	jmp    0x140003e9c
   140003eed:	or     eax,0xffffffff
   140003ef0:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ef5:	mov    rsi,QWORD PTR [rsp+0x38]
   140003efa:	add    rsp,0x20
   140003efe:	pop    rdi
   140003eff:	ret    
   140003f00:	mov    QWORD PTR [rsp+0x8],rbx
   140003f05:	push   rdi
   140003f06:	sub    rsp,0x20
   140003f0a:	mov    rax,QWORD PTR [rcx+0x40]
   140003f0e:	mov    rbx,rcx
   140003f11:	mov    rcx,QWORD PTR [rax]
   140003f14:	test   rcx,rcx
   140003f17:	je     0x140003f2d
   140003f19:	mov    rax,QWORD PTR [rbx+0x58]
   140003f1d:	movsxd rdx,DWORD PTR [rax]
   140003f20:	add    rdx,rcx
   140003f23:	cmp    rcx,rdx
   140003f26:	jae    0x140003f2d
   140003f28:	movzx  eax,BYTE PTR [rcx]
   140003f2b:	jmp    0x140003f4c
   140003f2d:	mov    rax,QWORD PTR [rbx]
   140003f30:	mov    rcx,rbx
   140003f33:	call   QWORD PTR [rax+0x38]
   140003f36:	mov    edi,eax
   140003f38:	or     eax,0xffffffff
   140003f3b:	cmp    edi,eax
   140003f3d:	je     0x140003f4c
   140003f3f:	mov    rax,QWORD PTR [rbx]
   140003f42:	mov    edx,edi
   140003f44:	mov    rcx,rbx
   140003f47:	call   QWORD PTR [rax+0x20]
   140003f4a:	mov    eax,edi
   140003f4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f51:	add    rsp,0x20
   140003f55:	pop    rdi
   140003f56:	ret    
   140003f57:	int3   
   140003f58:	mov    rax,rsp
   140003f5b:	push   rbp
   140003f5c:	push   rdi
   140003f5d:	push   r13
   140003f5f:	lea    rbp,[rax-0x5f]
   140003f63:	sub    rsp,0x90
   140003f6a:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   140003f72:	mov    QWORD PTR [rax+0x10],rbx
   140003f76:	mov    QWORD PTR [rax+0x18],rsi
   140003f7a:	mov    rax,QWORD PTR [rip+0x6426f]        # 0x1400681f0
   140003f81:	xor    rax,rsp
   140003f84:	mov    QWORD PTR [rbp+0x3f],rax
   140003f88:	mov    rbx,rcx
   140003f8b:	mov    rax,QWORD PTR [rcx+0x40]
   140003f8f:	cmp    QWORD PTR [rax],0x0
   140003f93:	je     0x140003fc2
   140003f95:	mov    rdx,QWORD PTR [rax]
   140003f98:	mov    rax,QWORD PTR [rcx+0x58]
   140003f9c:	movsxd rcx,DWORD PTR [rax]
   140003f9f:	add    rcx,rdx
   140003fa2:	cmp    rdx,rcx
   140003fa5:	jae    0x140003fc2
   140003fa7:	or     edi,0xffffffff
   140003faa:	add    DWORD PTR [rax],edi
   140003fac:	mov    rcx,QWORD PTR [rbx+0x40]
   140003fb0:	mov    rdx,QWORD PTR [rcx]
   140003fb3:	lea    rax,[rdx+0x1]
   140003fb7:	mov    QWORD PTR [rcx],rax
   140003fba:	movzx  eax,BYTE PTR [rdx]
   140003fbd:	jmp    0x1400041bc
   140003fc2:	cmp    QWORD PTR [rbx+0x98],0x0
   140003fca:	jne    0x140003fd4
   140003fcc:	or     eax,0xffffffff
   140003fcf:	jmp    0x1400041bc
   140003fd4:	mov    rax,QWORD PTR [rbx+0x20]
   140003fd8:	mov    rcx,QWORD PTR [rax]
   140003fdb:	lea    rax,[rbx+0x88]
   140003fe2:	cmp    rcx,rax
   140003fe5:	jne    0x140003ffb
   140003fe7:	mov    r8,QWORD PTR [rbx+0x78]
   140003feb:	mov    r9,r8
   140003fee:	mov    rdx,QWORD PTR [rbx+0x70]
   140003ff2:	mov    rcx,rbx
   140003ff5:	call   QWORD PTR [rip+0x45275]        # 0x140049270
   140003ffb:	cmp    QWORD PTR [rbx+0x80],0x0
   140004003:	jne    0x140004025
   140004005:	mov    rcx,QWORD PTR [rbx+0x98]
   14000400c:	call   QWORD PTR [rip+0x45626]        # 0x140049638
   140004012:	or     edi,0xffffffff
   140004015:	cmp    eax,edi
   140004017:	je     0x1400041ba
   14000401d:	movzx  edi,al
   140004020:	jmp    0x1400041ba
   140004025:	mov    QWORD PTR [rbp+0x2f],0xf
   14000402d:	and    QWORD PTR [rbp+0x27],0x0
   140004032:	mov    BYTE PTR [rbp+0x17],0x0
   140004036:	mov    rcx,QWORD PTR [rbx+0x98]
   14000403d:	call   QWORD PTR [rip+0x455f5]        # 0x140049638
   140004043:	or     edi,0xffffffff
   140004046:	cmp    eax,edi
   140004048:	je     0x1400041a9
   14000404e:	lea    r13d,[rdi+0x2]
   140004052:	mov    r8b,al
   140004055:	mov    rdx,r13
   140004058:	lea    rcx,[rbp+0x17]
   14000405c:	call   0x1400047bc
   140004061:	lea    r9,[rbp+0x17]
   140004065:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000406a:	cmovae r9,QWORD PTR [rbp+0x17]
   14000406f:	lea    r8,[rbp+0x17]
   140004073:	cmovae r8,QWORD PTR [rbp+0x17]
   140004078:	add    r9,QWORD PTR [rbp+0x27]
   14000407c:	lea    rax,[rbp+0x7]
   140004080:	mov    QWORD PTR [rsp+0x38],rax
   140004085:	lea    rax,[rbp-0x8]
   140004089:	mov    QWORD PTR [rsp+0x30],rax
   14000408e:	lea    rax,[rbp-0x9]
   140004092:	mov    QWORD PTR [rsp+0x28],rax
   140004097:	lea    rax,[rbp-0x1]
   14000409b:	mov    QWORD PTR [rsp+0x20],rax
   1400040a0:	lea    rdx,[rbx+0x8c]
   1400040a7:	mov    rcx,QWORD PTR [rbx+0x80]
   1400040ae:	call   QWORD PTR [rip+0x45224]        # 0x1400492d8
   1400040b4:	test   eax,eax
   1400040b6:	js     0x1400041a7
   1400040bc:	cmp    eax,r13d
   1400040bf:	jle    0x1400040d2
   1400040c1:	cmp    eax,0x3
   1400040c4:	jne    0x1400041a7
   1400040ca:	cmp    QWORD PTR [rbp+0x27],r13
   1400040ce:	jae    0x140004116
   1400040d0:	jmp    0x1400040fc
   1400040d2:	lea    rax,[rbp-0x9]
   1400040d6:	lea    rcx,[rbp+0x17]
   1400040da:	cmp    QWORD PTR [rbp+0x7],rax
   1400040de:	jne    0x140004145
   1400040e0:	lea    rax,[rbp+0x17]
   1400040e4:	cmp    QWORD PTR [rbp+0x2f],0x10
   1400040e9:	cmovae rax,QWORD PTR [rbp+0x17]
   1400040ee:	mov    r8,QWORD PTR [rbp-0x1]
   1400040f2:	sub    r8,rax
   1400040f5:	xor    edx,edx
   1400040f7:	call   0x140002dfc
   1400040fc:	mov    rcx,QWORD PTR [rbx+0x98]
   140004103:	call   QWORD PTR [rip+0x4552f]        # 0x140049638
   140004109:	cmp    eax,edi
   14000410b:	je     0x1400041a9
   140004111:	jmp    0x140004052
   140004116:	lea    r8,[rbp+0x17]
   14000411a:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000411f:	cmovae r8,QWORD PTR [rbp+0x17]
   140004124:	mov    r9,r13
   140004127:	mov    rdx,r13
   14000412a:	lea    rcx,[rbp-0x9]
   14000412e:	call   QWORD PTR [rip+0x4554c]        # 0x140049680
   140004134:	movzx  ebx,BYTE PTR [rbp-0x9]
   140004138:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000413d:	jb     0x1400041a3
   14000413f:	mov    rcx,QWORD PTR [rbp+0x17]
   140004143:	jmp    0x14000419d
   140004145:	mov    rdx,QWORD PTR [rbp+0x17]
   140004149:	mov    r8,QWORD PTR [rbp+0x2f]
   14000414d:	cmp    r8,0x10
   140004151:	cmovae rcx,rdx
   140004155:	mov    eax,DWORD PTR [rbp+0x27]
   140004158:	mov    r9,QWORD PTR [rbp-0x1]
   14000415c:	sub    eax,r9d
   14000415f:	add    eax,ecx
   140004161:	movsxd rdi,eax
   140004164:	test   eax,eax
   140004166:	jle    0x140004190
   140004168:	sub    rdi,r13
   14000416b:	movsx  ecx,BYTE PTR [rdi+r9*1]
   140004170:	mov    rdx,QWORD PTR [rbx+0x98]
   140004177:	call   QWORD PTR [rip+0x45493]        # 0x140049610
   14000417d:	test   rdi,rdi
   140004180:	jle    0x140004188
   140004182:	mov    r9,QWORD PTR [rbp-0x1]
   140004186:	jmp    0x140004168
   140004188:	mov    r8,QWORD PTR [rbp+0x2f]
   14000418c:	mov    rdx,QWORD PTR [rbp+0x17]
   140004190:	movzx  ebx,BYTE PTR [rbp-0x9]
   140004194:	cmp    r8,0x10
   140004198:	jb     0x1400041a3
   14000419a:	mov    rcx,rdx
   14000419d:	call   QWORD PTR [rip+0x454d5]        # 0x140049678
   1400041a3:	mov    eax,ebx
   1400041a5:	jmp    0x1400041bc
   1400041a7:	jmp    0x1400041a9
   1400041a9:	cmp    QWORD PTR [rbp+0x2f],0x10
   1400041ae:	jb     0x1400041ba
   1400041b0:	mov    rcx,QWORD PTR [rbp+0x17]
   1400041b4:	call   QWORD PTR [rip+0x454be]        # 0x140049678
   1400041ba:	mov    eax,edi
   1400041bc:	mov    rcx,QWORD PTR [rbp+0x3f]
   1400041c0:	xor    rcx,rsp
   1400041c3:	call   0x14002b100
   1400041c8:	lea    r11,[rsp+0x90]
   1400041d0:	mov    rbx,QWORD PTR [r11+0x28]
   1400041d4:	mov    rsi,QWORD PTR [r11+0x30]
   1400041d8:	mov    rsp,r11
   1400041db:	pop    r13
   1400041dd:	pop    rdi
   1400041de:	pop    rbp
   1400041df:	ret    
   1400041e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400041e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400041ea:	push   rsi
   1400041eb:	push   rdi
   1400041ec:	push   r12
   1400041ee:	sub    rsp,0x20
   1400041f2:	mov    rax,QWORD PTR [rcx+0x40]
   1400041f6:	lea    r12,[rcx+0x88]
   1400041fd:	mov    ebp,r9d
   140004200:	mov    rsi,r8
   140004203:	mov    rbx,rdx
   140004206:	mov    rdi,rcx
   140004209:	cmp    QWORD PTR [rax],r12
   14000420c:	jne    0x140004221
   14000420e:	cmp    r9d,0x1
   140004212:	jne    0x140004221
   140004214:	cmp    QWORD PTR [rcx+0x80],0x0
   14000421c:	jne    0x140004221
   14000421e:	dec    rsi
   140004221:	cmp    QWORD PTR [rcx+0x98],0x0
   140004229:	je     0x1400042a6
   14000422b:	call   0x140004e18
   140004230:	test   al,al
   140004232:	je     0x1400042a6
   140004234:	test   rsi,rsi
   140004237:	jne    0x14000423e
   140004239:	cmp    ebp,0x1
   14000423c:	je     0x140004255
   14000423e:	mov    rcx,QWORD PTR [rdi+0x98]
   140004245:	mov    r8d,ebp
   140004248:	mov    rdx,rsi
   14000424b:	call   QWORD PTR [rip+0x453cf]        # 0x140049620
   140004251:	test   eax,eax
   140004253:	jne    0x1400042a6
   140004255:	mov    rcx,QWORD PTR [rdi+0x98]
   14000425c:	lea    rdx,[rsp+0x40]
   140004261:	call   QWORD PTR [rip+0x453b1]        # 0x140049618
   140004267:	test   eax,eax
   140004269:	jne    0x1400042a6
   14000426b:	mov    rdx,QWORD PTR [rdi+0x20]
   14000426f:	cmp    QWORD PTR [rdx],r12
   140004272:	jne    0x14000428e
   140004274:	mov    rax,QWORD PTR [rdi+0x70]
   140004278:	mov    rcx,QWORD PTR [rdi+0x78]
   14000427c:	mov    QWORD PTR [rdx],rax
   14000427f:	mov    rax,QWORD PTR [rdi+0x40]
   140004283:	mov    QWORD PTR [rax],rcx
   140004286:	mov    rax,QWORD PTR [rdi+0x58]
   14000428a:	sub    ecx,ecx
   14000428c:	mov    DWORD PTR [rax],ecx
   14000428e:	mov    rax,QWORD PTR [rsp+0x40]
   140004293:	and    QWORD PTR [rbx],0x0
   140004297:	mov    QWORD PTR [rbx+0x8],rax
   14000429b:	mov    eax,DWORD PTR [rdi+0x8c]
   1400042a1:	mov    DWORD PTR [rbx+0x10],eax
   1400042a4:	jmp    0x1400042bc
   1400042a6:	mov    rax,QWORD PTR [rip+0x4530b]        # 0x1400495b8
   1400042ad:	and    QWORD PTR [rbx+0x8],0x0
   1400042b2:	and    DWORD PTR [rbx+0x10],0x0
   1400042b6:	mov    rcx,QWORD PTR [rax]
   1400042b9:	mov    QWORD PTR [rbx],rcx
   1400042bc:	mov    rbp,QWORD PTR [rsp+0x50]
   1400042c1:	mov    rax,rbx
   1400042c4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400042c9:	add    rsp,0x20
   1400042cd:	pop    r12
   1400042cf:	pop    rdi
   1400042d0:	pop    rsi
   1400042d1:	ret    
   1400042d2:	int3   
   1400042d3:	int3   
   1400042d4:	mov    r11,rsp
   1400042d7:	mov    QWORD PTR [r11+0x10],rbx
   1400042db:	mov    QWORD PTR [r11+0x18],rbp
   1400042df:	mov    QWORD PTR [r11+0x20],rsi
   1400042e3:	push   rdi
   1400042e4:	sub    rsp,0x20
   1400042e8:	mov    rax,QWORD PTR [r8+0x8]
   1400042ec:	mov    rbp,r8
   1400042ef:	mov    rbx,rdx
   1400042f2:	movsxd r9,eax
   1400042f5:	movsxd rsi,eax
   1400042f8:	mov    rdi,rcx
   1400042fb:	sub    rsi,r9
   1400042fe:	mov    QWORD PTR [r11+0x8],rax
   140004302:	add    rsi,QWORD PTR [r8]
   140004305:	cmp    QWORD PTR [rcx+0x98],0x0
   14000430d:	je     0x1400043b4
   140004313:	call   0x140004e18
   140004318:	test   al,al
   14000431a:	je     0x1400043b4
   140004320:	mov    rcx,QWORD PTR [rdi+0x98]
   140004327:	lea    rdx,[rsp+0x30]
   14000432c:	call   QWORD PTR [rip+0x45316]        # 0x140049648
   140004332:	test   eax,eax
   140004334:	jne    0x1400043b4
   140004336:	test   rsi,rsi
   140004339:	je     0x140004353
   14000433b:	mov    rcx,QWORD PTR [rdi+0x98]
   140004342:	lea    r8d,[rax+0x1]
   140004346:	mov    rdx,rsi
   140004349:	call   QWORD PTR [rip+0x452d1]        # 0x140049620
   14000434f:	test   eax,eax
   140004351:	jne    0x1400043b4
   140004353:	mov    rcx,QWORD PTR [rdi+0x98]
   14000435a:	lea    rdx,[rsp+0x30]
   14000435f:	call   QWORD PTR [rip+0x452b3]        # 0x140049618
   140004365:	test   eax,eax
   140004367:	jne    0x1400043b4
   140004369:	mov    eax,DWORD PTR [rbp+0x10]
   14000436c:	mov    rdx,QWORD PTR [rdi+0x20]
   140004370:	mov    DWORD PTR [rdi+0x8c],eax
   140004376:	lea    rax,[rdi+0x88]
   14000437d:	cmp    QWORD PTR [rdx],rax
   140004380:	jne    0x14000439c
   140004382:	mov    rax,QWORD PTR [rdi+0x70]
   140004386:	mov    rcx,QWORD PTR [rdi+0x78]
   14000438a:	mov    QWORD PTR [rdx],rax
   14000438d:	mov    rax,QWORD PTR [rdi+0x40]
   140004391:	mov    QWORD PTR [rax],rcx
   140004394:	mov    rax,QWORD PTR [rdi+0x58]
   140004398:	sub    ecx,ecx
   14000439a:	mov    DWORD PTR [rax],ecx
   14000439c:	mov    rax,QWORD PTR [rsp+0x30]
   1400043a1:	and    QWORD PTR [rbx],0x0
   1400043a5:	mov    QWORD PTR [rbx+0x8],rax
   1400043a9:	mov    eax,DWORD PTR [rdi+0x8c]
   1400043af:	mov    DWORD PTR [rbx+0x10],eax
   1400043b2:	jmp    0x1400043ca
   1400043b4:	mov    rax,QWORD PTR [rip+0x451fd]        # 0x1400495b8
   1400043bb:	and    QWORD PTR [rbx+0x8],0x0
   1400043c0:	and    DWORD PTR [rbx+0x10],0x0
   1400043c4:	mov    rcx,QWORD PTR [rax]
   1400043c7:	mov    QWORD PTR [rbx],rcx
   1400043ca:	mov    rbp,QWORD PTR [rsp+0x40]
   1400043cf:	mov    rsi,QWORD PTR [rsp+0x48]
   1400043d4:	mov    rax,rbx
   1400043d7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400043dc:	add    rsp,0x20
   1400043e0:	pop    rdi
   1400043e1:	ret    
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400043e9:	push   rdi
   1400043ea:	sub    rsp,0x20
   1400043ee:	mov    rbx,rcx
   1400043f1:	mov    rcx,QWORD PTR [rcx+0x98]
   1400043f8:	mov    r9,r8
   1400043fb:	test   rcx,rcx
   1400043fe:	je     0x14000447f
   140004400:	test   rdx,rdx
   140004403:	jne    0x140004410
   140004405:	test   r8,r8
   140004408:	jne    0x140004410
   14000440a:	lea    r8d,[r9+0x4]
   14000440e:	jmp    0x140004413
   140004410:	xor    r8d,r8d
   140004413:	call   QWORD PTR [rip+0x45237]        # 0x140049650
   140004419:	test   eax,eax
   14000441b:	jne    0x14000447f
   14000441d:	mov    rdi,QWORD PTR [rbx+0x98]
   140004424:	mov    rcx,rbx
   140004427:	mov    BYTE PTR [rbx+0x90],0x1
   14000442e:	mov    BYTE PTR [rbx+0x89],al
   140004434:	call   QWORD PTR [rip+0x44e2e]        # 0x140049268
   14000443a:	test   rdi,rdi
   14000443d:	je     0x14000445f
   14000443f:	lea    rax,[rdi+0x10]
   140004443:	mov    QWORD PTR [rbx+0x40],rdi
   140004447:	mov    QWORD PTR [rbx+0x48],rdi
   14000444b:	mov    QWORD PTR [rbx+0x20],rax
   14000444f:	mov    QWORD PTR [rbx+0x28],rax
   140004453:	lea    rax,[rdi+0x8]
   140004457:	mov    QWORD PTR [rbx+0x58],rax
   14000445b:	mov    QWORD PTR [rbx+0x60],rax
   14000445f:	mov    eax,DWORD PTR [rip+0x66353]        # 0x14006a7b8
   140004465:	and    QWORD PTR [rbx+0x80],0x0
   14000446d:	mov    QWORD PTR [rbx+0x98],rdi
   140004474:	mov    DWORD PTR [rbx+0x8c],eax
   14000447a:	mov    rax,rbx
   14000447d:	jmp    0x140004481
   14000447f:	xor    eax,eax
   140004481:	mov    rbx,QWORD PTR [rsp+0x30]
   140004486:	add    rsp,0x20
   14000448a:	pop    rdi
   14000448b:	ret    
   14000448c:	mov    QWORD PTR [rsp+0x8],rbx
   140004491:	push   rdi
   140004492:	sub    rsp,0x20
   140004496:	cmp    QWORD PTR [rcx+0x98],0x0
   14000449e:	mov    rdi,rcx
   1400044a1:	je     0x1400044c3
   1400044a3:	mov    rax,QWORD PTR [rcx]
   1400044a6:	or     ebx,0xffffffff
   1400044a9:	mov    edx,ebx
   1400044ab:	call   QWORD PTR [rax+0x18]
   1400044ae:	cmp    eax,ebx
   1400044b0:	je     0x1400044c3
   1400044b2:	mov    rcx,QWORD PTR [rdi+0x98]
   1400044b9:	call   QWORD PTR [rip+0x45171]        # 0x140049630
   1400044bf:	test   eax,eax
   1400044c1:	js     0x1400044c5
   1400044c3:	xor    ebx,ebx
   1400044c5:	mov    eax,ebx
   1400044c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044cc:	add    rsp,0x20
   1400044d0:	pop    rdi
   1400044d1:	ret    
   1400044d2:	int3   
   1400044d3:	int3   
   1400044d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400044d9:	push   rdi
   1400044da:	sub    rsp,0x20
   1400044de:	mov    rbx,rcx
   1400044e1:	mov    rcx,rdx
   1400044e4:	call   0x140006288
   1400044e9:	mov    rcx,rax
   1400044ec:	mov    rdi,rax
   1400044ef:	call   QWORD PTR [rip+0x44e43]        # 0x140049338
   1400044f5:	test   al,al
   1400044f7:	je     0x140004503
   1400044f9:	and    QWORD PTR [rbx+0x80],0x0
   140004501:	jmp    0x140004513
   140004503:	mov    rcx,rbx
   140004506:	mov    QWORD PTR [rbx+0x80],rdi
   14000450d:	call   QWORD PTR [rip+0x44d55]        # 0x140049268
   140004513:	mov    rbx,QWORD PTR [rsp+0x30]
   140004518:	add    rsp,0x20
   14000451c:	pop    rdi
   14000451d:	ret    
   14000451e:	int3   
   14000451f:	int3   
   140004520:	mov    QWORD PTR [rsp+0x8],rcx
   140004525:	push   rdi
   140004526:	sub    rsp,0x30
   14000452a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004533:	mov    QWORD PTR [rsp+0x50],rbx
   140004538:	mov    QWORD PTR [rsp+0x58],rbp
   14000453d:	mov    rbp,rcx
   140004540:	mov    rdi,QWORD PTR [rcx+0x8]
   140004544:	mov    rbx,QWORD PTR [rdi]
   140004547:	cmp    rbx,rbx
   14000454a:	jne    0x1400045f8
   140004550:	cmp    rdi,rdi
   140004553:	jne    0x1400045f8
   140004559:	mov    rbx,QWORD PTR [rdi+0x8]
   14000455d:	mov    rdi,rbx
   140004560:	cmp    BYTE PTR [rbx+0x49],0x0
   140004564:	jne    0x140004590
   140004566:	mov    rdx,QWORD PTR [rdi+0x10]
   14000456a:	mov    rcx,rbp
   14000456d:	call   0x140005d38
   140004572:	mov    rdi,QWORD PTR [rdi]
   140004575:	lea    rcx,[rbx+0x18]
   140004579:	call   0x14000638c
   14000457e:	mov    rcx,rbx
   140004581:	call   QWORD PTR [rip+0x450f1]        # 0x140049678
   140004587:	mov    rbx,rdi
   14000458a:	cmp    BYTE PTR [rdi+0x49],0x0
   14000458e:	je     0x140004566
   140004590:	mov    rax,QWORD PTR [rbp+0x8]
   140004594:	mov    QWORD PTR [rax+0x8],rax
   140004598:	mov    rax,QWORD PTR [rbp+0x8]
   14000459c:	mov    QWORD PTR [rax],rax
   14000459f:	mov    rax,QWORD PTR [rbp+0x8]
   1400045a3:	mov    QWORD PTR [rax+0x10],rax
   1400045a7:	and    QWORD PTR [rbp+0x10],0x0
   1400045ac:	jmp    0x1400045fd
   1400045ae:	mov    r8,rbx
   1400045b1:	cmp    BYTE PTR [rbx+0x49],0x0
   1400045b5:	jne    0x1400045eb
   1400045b7:	mov    rax,QWORD PTR [rbx+0x10]
   1400045bb:	cmp    BYTE PTR [rax+0x49],0x0
   1400045bf:	jne    0x1400045cf
   1400045c1:	mov    rbx,rax
   1400045c4:	mov    rax,QWORD PTR [rax]
   1400045c7:	cmp    BYTE PTR [rax+0x49],0x0
   1400045cb:	je     0x1400045c1
   1400045cd:	jmp    0x1400045eb
   1400045cf:	mov    rax,QWORD PTR [rbx+0x8]
   1400045d3:	jmp    0x1400045e2
   1400045d5:	cmp    rbx,QWORD PTR [rax+0x10]
   1400045d9:	jne    0x1400045e8
   1400045db:	mov    rbx,rax
   1400045de:	mov    rax,QWORD PTR [rax+0x8]
   1400045e2:	cmp    BYTE PTR [rax+0x49],0x0
   1400045e6:	je     0x1400045d5
   1400045e8:	mov    rbx,rax
   1400045eb:	lea    rdx,[rsp+0x48]
   1400045f0:	mov    rcx,rbp
   1400045f3:	call   0x140005890
   1400045f8:	cmp    rbx,rdi
   1400045fb:	jne    0x1400045ae
   1400045fd:	mov    rcx,QWORD PTR [rbp+0x8]
   140004601:	mov    rbx,QWORD PTR [rsp+0x50]
   140004606:	mov    rbp,QWORD PTR [rsp+0x58]
   14000460b:	add    rsp,0x30
   14000460f:	pop    rdi
   140004610:	rex.W jmp QWORD PTR [rip+0x45061]        # 0x140049678
   140004617:	int3   
   140004618:	mov    QWORD PTR [rsp+0x8],rbx
   14000461d:	mov    QWORD PTR [rsp+0x10],rsi
   140004622:	push   rdi
   140004623:	sub    rsp,0x20
   140004627:	mov    rdi,QWORD PTR [rcx]
   14000462a:	mov    rbx,rcx
   14000462d:	test   rdi,rdi
   140004630:	je     0x140004652
   140004632:	mov    rsi,QWORD PTR [rcx+0x8]
   140004636:	jmp    0x140004644
   140004638:	mov    rcx,rdi
   14000463b:	call   0x14000638c
   140004640:	add    rdi,0x28
   140004644:	cmp    rdi,rsi
   140004647:	jne    0x140004638
   140004649:	mov    rcx,QWORD PTR [rbx]
   14000464c:	call   QWORD PTR [rip+0x45026]        # 0x140049678
   140004652:	and    QWORD PTR [rbx],0x0
   140004656:	and    QWORD PTR [rbx+0x8],0x0
   14000465b:	and    QWORD PTR [rbx+0x10],0x0
   140004660:	mov    rbx,QWORD PTR [rsp+0x30]
   140004665:	mov    rsi,QWORD PTR [rsp+0x38]
   14000466a:	add    rsp,0x20
   14000466e:	pop    rdi
   14000466f:	ret    
   140004670:	sub    rsp,0x28
   140004674:	cmp    QWORD PTR [rcx+0x10],0x10
   140004679:	jbe    0x140004689
   14000467b:	mov    rcx,QWORD PTR [rcx]
   14000467e:	test   rcx,rcx
   140004681:	je     0x140004689
   140004683:	call   QWORD PTR [rip+0x44fdf]        # 0x140049668
   140004689:	add    rsp,0x28
   14000468d:	ret    
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    QWORD PTR [rsp+0x8],rbx
   140004695:	push   rdi
   140004696:	sub    rsp,0x20
   14000469a:	lea    rdi,[rcx-0xb0]
   1400046a1:	mov    ebx,edx
   1400046a3:	mov    rcx,rdi
   1400046a6:	call   0x140002070
   1400046ab:	test   bl,0x1
   1400046ae:	je     0x1400046b9
   1400046b0:	mov    rcx,rdi
   1400046b3:	call   QWORD PTR [rip+0x44fbf]        # 0x140049678
   1400046b9:	mov    rax,rdi
   1400046bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046c1:	add    rsp,0x20
   1400046c5:	pop    rdi
   1400046c6:	ret    
   1400046c7:	int3   
   1400046c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400046cd:	push   rdi
   1400046ce:	sub    rsp,0x20
   1400046d2:	mov    ebx,edx
   1400046d4:	mov    rdi,rcx
   1400046d7:	call   0x140003b0c
   1400046dc:	test   bl,0x1
   1400046df:	je     0x1400046ea
   1400046e1:	mov    rcx,rdi
   1400046e4:	call   QWORD PTR [rip+0x44f8e]        # 0x140049678
   1400046ea:	mov    rax,rdi
   1400046ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046f2:	add    rsp,0x20
   1400046f6:	pop    rdi
   1400046f7:	ret    
   1400046f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400046fd:	push   rdi
   1400046fe:	sub    rsp,0x20
   140004702:	lea    rdi,[rcx-0xa8]
   140004709:	mov    ebx,edx
   14000470b:	mov    rcx,rdi
   14000470e:	call   0x1400028a4
   140004713:	test   bl,0x1
   140004716:	je     0x140004721
   140004718:	mov    rcx,rdi
   14000471b:	call   QWORD PTR [rip+0x44f57]        # 0x140049678
   140004721:	mov    rax,rdi
   140004724:	mov    rbx,QWORD PTR [rsp+0x30]
   140004729:	add    rsp,0x20
   14000472d:	pop    rdi
   14000472e:	ret    
   14000472f:	int3   
   140004730:	mov    QWORD PTR [rsp+0x8],rbx
   140004735:	push   rdi
   140004736:	sub    rsp,0x20
   14000473a:	mov    rdi,rdx
   14000473d:	mov    rbx,rcx
   140004740:	cmp    rcx,rdx
   140004743:	je     0x1400047ab
   140004745:	cmp    QWORD PTR [rcx+0x18],0x10
   14000474a:	jb     0x140004755
   14000474c:	mov    rcx,QWORD PTR [rcx]
   14000474f:	call   QWORD PTR [rip+0x44f23]        # 0x140049678
   140004755:	and    QWORD PTR [rbx+0x10],0x0
   14000475a:	mov    QWORD PTR [rbx+0x18],0xf
   140004762:	mov    BYTE PTR [rbx],0x0
   140004765:	cmp    QWORD PTR [rdi+0x18],0x10
   14000476a:	jae    0x140004781
   14000476c:	mov    r8,QWORD PTR [rdi+0x10]
   140004770:	mov    rdx,rdi
   140004773:	mov    rcx,rbx
   140004776:	inc    r8
   140004779:	call   QWORD PTR [rip+0x44e71]        # 0x1400495f0
   14000477f:	jmp    0x14000478b
   140004781:	mov    rax,QWORD PTR [rdi]
   140004784:	mov    QWORD PTR [rbx],rax
   140004787:	and    QWORD PTR [rdi],0x0
   14000478b:	mov    rax,QWORD PTR [rdi+0x10]
   14000478f:	mov    QWORD PTR [rbx+0x10],rax
   140004793:	mov    rax,QWORD PTR [rdi+0x18]
   140004797:	mov    QWORD PTR [rbx+0x18],rax
   14000479b:	and    QWORD PTR [rdi+0x10],0x0
   1400047a0:	mov    QWORD PTR [rdi+0x18],0xf
   1400047a8:	mov    BYTE PTR [rdi],0x0
   1400047ab:	mov    rax,rbx
   1400047ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047b3:	add    rsp,0x20
   1400047b7:	pop    rdi
   1400047b8:	ret    
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400047c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400047c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400047cb:	push   rdi
   1400047cc:	sub    rsp,0x20
   1400047d0:	or     rax,0xffffffffffffffff
   1400047d4:	mov    bpl,r8b
   1400047d7:	mov    r8,QWORD PTR [rcx+0x10]
   1400047db:	sub    rax,r8
   1400047de:	mov    rsi,rdx
   1400047e1:	mov    rbx,rcx
   1400047e4:	cmp    rax,rdx
   1400047e7:	ja     0x1400047f7
   1400047e9:	lea    rcx,[rip+0x4c158]        # 0x140050948
   1400047f0:	call   QWORD PTR [rip+0x44da2]        # 0x140049598
   1400047f6:	int3   
   1400047f7:	test   rdx,rdx
   1400047fa:	je     0x14000489d
   140004800:	lea    rdi,[r8+rdx*1]
   140004804:	cmp    rdi,0xfffffffffffffffe
   140004808:	jbe    0x140004818
   14000480a:	lea    rcx,[rip+0x4c137]        # 0x140050948
   140004811:	call   QWORD PTR [rip+0x44d81]        # 0x140049598
   140004817:	int3   
   140004818:	cmp    QWORD PTR [rcx+0x18],rdi
   14000481c:	jae    0x140004828
   14000481e:	mov    rdx,rdi
   140004821:	call   0x140005750
   140004826:	jmp    0x140004843
   140004828:	test   rdi,rdi
   14000482b:	jne    0x140004848
   14000482d:	and    QWORD PTR [rcx+0x10],rdi
   140004831:	cmp    QWORD PTR [rcx+0x18],0x10
   140004836:	jb     0x14000483d
   140004838:	mov    rax,QWORD PTR [rcx]
   14000483b:	jmp    0x140004840
   14000483d:	mov    rax,rcx
   140004840:	mov    BYTE PTR [rax],0x0
   140004843:	test   rdi,rdi
   140004846:	je     0x14000489d
   140004848:	mov    rcx,QWORD PTR [rbx+0x10]
   14000484c:	cmp    rsi,0x1
   140004850:	jne    0x140004867
   140004852:	cmp    QWORD PTR [rbx+0x18],0x10
   140004857:	jb     0x14000485e
   140004859:	mov    rax,QWORD PTR [rbx]
   14000485c:	jmp    0x140004861
   14000485e:	mov    rax,rbx
   140004861:	mov    BYTE PTR [rax+rcx*1],bpl
   140004865:	jmp    0x140004886
   140004867:	cmp    QWORD PTR [rbx+0x18],0x10
   14000486c:	jb     0x140004873
   14000486e:	mov    rax,QWORD PTR [rbx]
   140004871:	jmp    0x140004876
   140004873:	mov    rax,rbx
   140004876:	movsx  edx,bpl
   14000487a:	add    rcx,rax
   14000487d:	mov    r8,rsi
   140004880:	call   QWORD PTR [rip+0x44dd2]        # 0x140049658
   140004886:	cmp    QWORD PTR [rbx+0x18],0x10
   14000488b:	mov    QWORD PTR [rbx+0x10],rdi
   14000488f:	jb     0x140004896
   140004891:	mov    rax,QWORD PTR [rbx]
   140004894:	jmp    0x140004899
   140004896:	mov    rax,rbx
   140004899:	mov    BYTE PTR [rax+rdi*1],0x0
   14000489d:	mov    rbp,QWORD PTR [rsp+0x38]
   1400048a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400048a7:	mov    rax,rbx
   1400048aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048af:	add    rsp,0x20
   1400048b3:	pop    rdi
   1400048b4:	ret    
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400048bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400048c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400048c7:	push   rdi
   1400048c8:	sub    rsp,0x20
   1400048cc:	mov    rdi,QWORD PTR [rdx+0x10]
   1400048d0:	mov    rbp,r8
   1400048d3:	mov    rsi,rdx
   1400048d6:	mov    rbx,rcx
   1400048d9:	cmp    rdi,r8
   1400048dc:	jae    0x1400048ec
   1400048de:	lea    rcx,[rip+0x4c04b]        # 0x140050930
   1400048e5:	call   QWORD PTR [rip+0x44cc5]        # 0x1400495b0
   1400048eb:	int3   
   1400048ec:	sub    rdi,r8
   1400048ef:	cmp    r9,rdi
   1400048f2:	cmovb  rdi,r9
   1400048f6:	cmp    rcx,rdx
   1400048f9:	jne    0x14000491a
   1400048fb:	lea    rdx,[rdi+r8*1]
   1400048ff:	or     r8,0xffffffffffffffff
   140004903:	call   0x140002dfc
   140004908:	mov    r8,rbp
   14000490b:	xor    edx,edx
   14000490d:	mov    rcx,rbx
   140004910:	call   0x140002dfc
   140004915:	jmp    0x14000499f
   14000491a:	cmp    rdi,0xfffffffffffffffe
   14000491e:	jbe    0x14000492e
   140004920:	lea    rcx,[rip+0x4c021]        # 0x140050948
   140004927:	call   QWORD PTR [rip+0x44c6b]        # 0x140049598
   14000492d:	int3   
   14000492e:	cmp    QWORD PTR [rcx+0x18],rdi
   140004932:	jae    0x140004942
   140004934:	mov    r8,QWORD PTR [rcx+0x10]
   140004938:	mov    rdx,rdi
   14000493b:	call   0x140005750
   140004940:	jmp    0x14000495d
   140004942:	test   rdi,rdi
   140004945:	jne    0x140004962
   140004947:	and    QWORD PTR [rcx+0x10],rdi
   14000494b:	cmp    QWORD PTR [rcx+0x18],0x10
   140004950:	jb     0x140004957
   140004952:	mov    rax,QWORD PTR [rcx]
   140004955:	jmp    0x14000495a
   140004957:	mov    rax,rcx
   14000495a:	mov    BYTE PTR [rax],0x0
   14000495d:	test   rdi,rdi
   140004960:	je     0x14000499f
   140004962:	cmp    QWORD PTR [rsi+0x18],0x10
   140004967:	jb     0x14000496c
   140004969:	mov    rsi,QWORD PTR [rsi]
   14000496c:	cmp    QWORD PTR [rbx+0x18],0x10
   140004971:	jb     0x140004978
   140004973:	mov    rcx,QWORD PTR [rbx]
   140004976:	jmp    0x14000497b
   140004978:	mov    rcx,rbx
   14000497b:	lea    rdx,[rsi+rbp*1]
   14000497f:	mov    r8,rdi
   140004982:	call   QWORD PTR [rip+0x44f40]        # 0x1400498c8
   140004988:	cmp    QWORD PTR [rbx+0x18],0x10
   14000498d:	mov    QWORD PTR [rbx+0x10],rdi
   140004991:	jb     0x140004998
   140004993:	mov    rax,QWORD PTR [rbx]
   140004996:	jmp    0x14000499b
   140004998:	mov    rax,rbx
   14000499b:	mov    BYTE PTR [rax+rdi*1],0x0
   14000499f:	mov    rbp,QWORD PTR [rsp+0x38]
   1400049a4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400049a9:	mov    rax,rbx
   1400049ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049b1:	add    rsp,0x20
   1400049b5:	pop    rdi
   1400049b6:	ret    
   1400049b7:	int3   
   1400049b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400049bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400049c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400049c7:	push   rdi
   1400049c8:	push   r12
   1400049ca:	push   r13
   1400049cc:	sub    rsp,0x20
   1400049d0:	mov    rbp,r8
   1400049d3:	mov    r13,rdx
   1400049d6:	mov    rbx,rcx
   1400049d9:	test   r8,r8
   1400049dc:	jne    0x1400049e2
   1400049de:	xor    eax,eax
   1400049e0:	jmp    0x140004a4b
   1400049e2:	mov    rdi,QWORD PTR [rcx+0x10]
   1400049e6:	test   rdi,rdi
   1400049e9:	je     0x140004a47
   1400049eb:	cmp    r8,rdi
   1400049ee:	ja     0x140004a47
   1400049f0:	mov    eax,0x1
   1400049f5:	sub    rax,r8
   1400049f8:	add    rdi,rax
   1400049fb:	cmp    QWORD PTR [rcx+0x18],0x10
   140004a00:	jb     0x140004a07
   140004a02:	mov    r12,QWORD PTR [rcx]
   140004a05:	jmp    0x140004a0a
   140004a07:	mov    r12,rcx
   140004a0a:	movsx  edx,BYTE PTR [rdx]
   140004a0d:	jmp    0x140004a33
   140004a0f:	mov    r8,rbp
   140004a12:	mov    rdx,r13
   140004a15:	mov    rcx,rsi
   140004a18:	call   QWORD PTR [rip+0x44bda]        # 0x1400495f8
   140004a1e:	test   eax,eax
   140004a20:	je     0x140004a64
   140004a22:	movsx  edx,BYTE PTR [r13+0x0]
   140004a27:	sub    r12,rsi
   140004a2a:	lea    rdi,[rdi+r12*1-0x1]
   140004a2f:	lea    r12,[rsi+0x1]
   140004a33:	mov    r8,rdi
   140004a36:	mov    rcx,r12
   140004a39:	call   QWORD PTR [rip+0x44be9]        # 0x140049628
   140004a3f:	mov    rsi,rax
   140004a42:	test   rax,rax
   140004a45:	jne    0x140004a0f
   140004a47:	or     rax,0xffffffffffffffff
   140004a4b:	mov    rbx,QWORD PTR [rsp+0x40]
   140004a50:	mov    rbp,QWORD PTR [rsp+0x48]
   140004a55:	mov    rsi,QWORD PTR [rsp+0x50]
   140004a5a:	add    rsp,0x20
   140004a5e:	pop    r13
   140004a60:	pop    r12
   140004a62:	pop    rdi
   140004a63:	ret    
   140004a64:	cmp    QWORD PTR [rbx+0x18],0x10
   140004a69:	jb     0x140004a6e
   140004a6b:	mov    rbx,QWORD PTR [rbx]
   140004a6e:	sub    rsi,rbx
   140004a71:	mov    rax,rsi
   140004a74:	jmp    0x140004a4b
   140004a76:	int3   
   140004a77:	int3   
   140004a78:	mov    QWORD PTR [rsp+0x10],rbx
   140004a7d:	mov    QWORD PTR [rsp+0x20],r9
   140004a82:	mov    QWORD PTR [rsp+0x18],r8
   140004a87:	push   rdi
   140004a88:	sub    rsp,0x20
   140004a8c:	mov    rax,QWORD PTR [rcx+0x8]
   140004a90:	mov    rbx,rdx
   140004a93:	mov    rdi,rcx
   140004a96:	cmp    r8,QWORD PTR [rax]
   140004a99:	jne    0x140004ab1
   140004a9b:	cmp    r9,rax
   140004a9e:	jne    0x140004ab1
   140004aa0:	call   0x140003878
   140004aa5:	mov    r11,QWORD PTR [rdi+0x8]
   140004aa9:	mov    rax,QWORD PTR [r11]
   140004aac:	mov    QWORD PTR [rbx],rax
   140004aaf:	jmp    0x140004b1f
   140004ab1:	cmp    r8,r9
   140004ab4:	je     0x140004b1c
   140004ab6:	cmp    BYTE PTR [r8+0x69],0x0
   140004abb:	mov    rax,r8
   140004abe:	jne    0x140004b00
   140004ac0:	mov    rcx,QWORD PTR [r8+0x10]
   140004ac4:	cmp    BYTE PTR [rcx+0x69],0x0
   140004ac8:	jne    0x140004add
   140004aca:	mov    rdx,QWORD PTR [rcx]
   140004acd:	jmp    0x140004ad5
   140004acf:	mov    rcx,rdx
   140004ad2:	mov    rdx,QWORD PTR [rdx]
   140004ad5:	cmp    BYTE PTR [rdx+0x69],0x0
   140004ad9:	je     0x140004acf
   140004adb:	jmp    0x140004afb
   140004add:	mov    rcx,QWORD PTR [r8+0x8]
   140004ae1:	jmp    0x140004af5
   140004ae3:	cmp    r8,QWORD PTR [rcx+0x10]
   140004ae7:	jne    0x140004afb
   140004ae9:	mov    r8,rcx
   140004aec:	mov    QWORD PTR [rsp+0x40],rcx
   140004af1:	mov    rcx,QWORD PTR [rcx+0x8]
   140004af5:	cmp    BYTE PTR [rcx+0x69],0x0
   140004af9:	je     0x140004ae3
   140004afb:	mov    QWORD PTR [rsp+0x40],rcx
   140004b00:	lea    rdx,[rsp+0x30]
   140004b05:	mov    r8,rax
   140004b08:	mov    rcx,rdi
   140004b0b:	call   0x1400032ac
   140004b10:	mov    r8,QWORD PTR [rsp+0x40]
   140004b15:	cmp    r8,QWORD PTR [rsp+0x48]
   140004b1a:	jne    0x140004ab6
   140004b1c:	mov    QWORD PTR [rbx],r8
   140004b1f:	mov    rax,rbx
   140004b22:	mov    rbx,QWORD PTR [rsp+0x38]
   140004b27:	add    rsp,0x20
   140004b2b:	pop    rdi
   140004b2c:	ret    
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	mov    rax,rsp
   140004b33:	mov    QWORD PTR [rax+0x8],rbx
   140004b37:	mov    QWORD PTR [rax+0x10],rbp
   140004b3b:	mov    QWORD PTR [rax+0x18],rsi
   140004b3f:	mov    QWORD PTR [rax+0x20],rdi
   140004b43:	push   r12
   140004b45:	sub    rsp,0x20
   140004b49:	mov    rsi,QWORD PTR [rcx+0x8]
   140004b4d:	mov    r12,r8
   140004b50:	mov    rdi,rdx
   140004b53:	mov    rbx,QWORD PTR [rsi+0x8]
   140004b57:	mov    rbp,rcx
   140004b5a:	jmp    0x140004b7b
   140004b5c:	lea    rdx,[rbx+0x18]
   140004b60:	mov    r8,r12
   140004b63:	mov    rcx,rbp
   140004b66:	call   0x140004c0c
   140004b6b:	test   al,al
   140004b6d:	je     0x140004b75
   140004b6f:	mov    rbx,QWORD PTR [rbx+0x10]
   140004b73:	jmp    0x140004b7b
   140004b75:	mov    rsi,rbx
   140004b78:	mov    rbx,QWORD PTR [rbx]
   140004b7b:	cmp    BYTE PTR [rbx+0x69],0x0
   140004b7f:	je     0x140004b5c
   140004b81:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b86:	mov    rbp,QWORD PTR [rsp+0x38]
   140004b8b:	mov    QWORD PTR [rdi],rsi
   140004b8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140004b93:	mov    rax,rdi
   140004b96:	mov    rdi,QWORD PTR [rsp+0x48]
   140004b9b:	add    rsp,0x20
   140004b9f:	pop    r12
   140004ba1:	ret    
   140004ba2:	int3   
   140004ba3:	int3   
   140004ba4:	mov    QWORD PTR [rsp+0x8],rbx
   140004ba9:	mov    QWORD PTR [rsp+0x10],rbp
   140004bae:	mov    QWORD PTR [rsp+0x18],rsi
   140004bb3:	push   rdi
   140004bb4:	sub    rsp,0x20
   140004bb8:	cmp    BYTE PTR [rdx+0x69],0x0
   140004bbc:	mov    rbx,rdx
   140004bbf:	mov    rdi,rcx
   140004bc2:	mov    rsi,rdx
   140004bc5:	jne    0x140004bf5
   140004bc7:	mov    rdx,QWORD PTR [rsi+0x10]
   140004bcb:	mov    rcx,rdi
   140004bce:	call   0x140004ba4
   140004bd3:	mov    rsi,QWORD PTR [rsi]
   140004bd6:	lea    rdx,[rbx+0x18]
   140004bda:	lea    rcx,[rdi+0x19]
   140004bde:	call   0x140006234
   140004be3:	mov    rcx,rbx
   140004be6:	call   QWORD PTR [rip+0x44a8c]        # 0x140049678
   140004bec:	cmp    BYTE PTR [rsi+0x69],0x0
   140004bf0:	mov    rbx,rsi
   140004bf3:	je     0x140004bc7
   140004bf5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bfa:	mov    rbp,QWORD PTR [rsp+0x38]
   140004bff:	mov    rsi,QWORD PTR [rsp+0x40]
   140004c04:	add    rsp,0x20
   140004c08:	pop    rdi
   140004c09:	ret    
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	mov    QWORD PTR [rsp+0x8],rbx
   140004c11:	push   rdi
   140004c12:	sub    rsp,0x20
   140004c16:	cmp    QWORD PTR [r8+0x18],0x10
   140004c1b:	mov    rdi,QWORD PTR [r8+0x10]
   140004c1f:	mov    r9,r8
   140004c22:	mov    rax,rdx
   140004c25:	jb     0x140004c2a
   140004c27:	mov    r9,QWORD PTR [r8]
   140004c2a:	mov    rbx,QWORD PTR [rdx+0x10]
   140004c2e:	cmp    rbx,rbx
   140004c31:	cmp    QWORD PTR [rdx+0x18],0x10
   140004c36:	jb     0x140004c3b
   140004c38:	mov    rax,QWORD PTR [rdx]
   140004c3b:	mov    r8,rdi
   140004c3e:	cmp    rbx,rdi
   140004c41:	mov    rdx,r9
   140004c44:	cmovb  r8,rbx
   140004c48:	mov    rcx,rax
   140004c4b:	call   QWORD PTR [rip+0x449a7]        # 0x1400495f8
   140004c51:	movsxd rcx,eax
   140004c54:	xor    eax,eax
   140004c56:	cmp    rbx,rdi
   140004c59:	setne  al
   140004c5c:	or     edx,0xffffffff
   140004c5f:	cmp    rbx,rdi
   140004c62:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c67:	cmovb  eax,edx
   140004c6a:	test   rcx,rcx
   140004c6d:	cmovne eax,ecx
   140004c70:	test   eax,eax
   140004c72:	sets   al
   140004c75:	add    rsp,0x20
   140004c79:	pop    rdi
   140004c7a:	ret    
   140004c7b:	int3   
   140004c7c:	rex push rdi
   140004c7e:	sub    rsp,0x30
   140004c82:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004c8b:	mov    QWORD PTR [rsp+0x48],rbx
   140004c90:	mov    eax,r8d
   140004c93:	mov    r9,rdx
   140004c96:	mov    rbx,rcx
   140004c99:	cmp    QWORD PTR [rcx+0x98],0x0
   140004ca1:	jne    0x140004d80
   140004ca7:	mov    r8d,0x40
   140004cad:	mov    edx,eax
   140004caf:	mov    rcx,r9
   140004cb2:	call   QWORD PTR [rip+0x44570]        # 0x140049228
   140004cb8:	mov    rdi,rax
   140004cbb:	test   rax,rax
   140004cbe:	je     0x140004d80
   140004cc4:	mov    BYTE PTR [rbx+0x90],0x1
   140004ccb:	mov    BYTE PTR [rbx+0x89],0x0
   140004cd2:	mov    rcx,rbx
   140004cd5:	call   QWORD PTR [rip+0x4458d]        # 0x140049268
   140004cdb:	lea    r11,[rdi+0x10]
   140004cdf:	lea    rcx,[rdi+0x8]
   140004ce3:	mov    QWORD PTR [rbx+0x20],r11
   140004ce7:	mov    QWORD PTR [rbx+0x28],r11
   140004ceb:	mov    QWORD PTR [rbx+0x40],rdi
   140004cef:	mov    QWORD PTR [rbx+0x48],rdi
   140004cf3:	mov    QWORD PTR [rbx+0x58],rcx
   140004cf7:	mov    QWORD PTR [rbx+0x60],rcx
   140004cfb:	mov    QWORD PTR [rbx+0x98],rdi
   140004d02:	mov    eax,DWORD PTR [rip+0x65ab0]        # 0x14006a7b8
   140004d08:	mov    DWORD PTR [rbx+0x8c],eax
   140004d0e:	and    QWORD PTR [rbx+0x80],0x0
   140004d16:	lea    rdx,[rsp+0x40]
   140004d1b:	mov    rcx,rbx
   140004d1e:	call   QWORD PTR [rip+0x44554]        # 0x140049278
   140004d24:	nop
   140004d25:	mov    rcx,rax
   140004d28:	call   0x140006288
   140004d2d:	mov    rdi,rax
   140004d30:	mov    rcx,rax
   140004d33:	call   QWORD PTR [rip+0x445ff]        # 0x140049338
   140004d39:	test   al,al
   140004d3b:	je     0x140004d47
   140004d3d:	and    QWORD PTR [rbx+0x80],0x0
   140004d45:	jmp    0x140004d58
   140004d47:	mov    QWORD PTR [rbx+0x80],rdi
   140004d4e:	mov    rcx,rbx
   140004d51:	call   QWORD PTR [rip+0x44511]        # 0x140049268
   140004d57:	nop
   140004d58:	mov    rcx,QWORD PTR [rsp+0x40]
   140004d5d:	test   rcx,rcx
   140004d60:	je     0x140004d7b
   140004d62:	call   QWORD PTR [rip+0x445d8]        # 0x140049340
   140004d68:	test   rax,rax
   140004d6b:	je     0x140004d7b
   140004d6d:	mov    r8,QWORD PTR [rax]
   140004d70:	mov    edx,0x1
   140004d75:	mov    rcx,rax
   140004d78:	call   QWORD PTR [r8]
   140004d7b:	mov    rax,rbx
   140004d7e:	jmp    0x140004d82
   140004d80:	xor    eax,eax
   140004d82:	mov    rbx,QWORD PTR [rsp+0x48]
   140004d87:	add    rsp,0x30
   140004d8b:	pop    rdi
   140004d8c:	ret    
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	mov    QWORD PTR [rsp+0x8],rbx
   140004d95:	mov    QWORD PTR [rsp+0x10],rsi
   140004d9a:	push   rdi
   140004d9b:	sub    rsp,0x20
   140004d9f:	xor    esi,esi
   140004da1:	mov    rbx,rcx
   140004da4:	cmp    QWORD PTR [rcx+0x98],rsi
   140004dab:	jne    0x140004db1
   140004dad:	mov    edi,esi
   140004daf:	jmp    0x140004dd1
   140004db1:	call   0x140004e18
   140004db6:	mov    rcx,QWORD PTR [rbx+0x98]
   140004dbd:	neg    al
   140004dbf:	sbb    rdi,rdi
   140004dc2:	and    rdi,rbx
   140004dc5:	call   QWORD PTR [rip+0x448c5]        # 0x140049690
   140004dcb:	test   eax,eax
   140004dcd:	cmovne rdi,rsi
   140004dd1:	mov    rcx,rbx
   140004dd4:	mov    BYTE PTR [rbx+0x90],sil
   140004ddb:	mov    BYTE PTR [rbx+0x89],sil
   140004de2:	call   QWORD PTR [rip+0x44480]        # 0x140049268
   140004de8:	mov    ecx,DWORD PTR [rip+0x659ca]        # 0x14006a7b8
   140004dee:	mov    QWORD PTR [rbx+0x98],rsi
   140004df5:	mov    QWORD PTR [rbx+0x80],rsi
   140004dfc:	mov    rsi,QWORD PTR [rsp+0x38]
   140004e01:	mov    DWORD PTR [rbx+0x8c],ecx
   140004e07:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e0c:	mov    rax,rdi
   140004e0f:	add    rsp,0x20
   140004e13:	pop    rdi
   140004e14:	ret    
   140004e15:	int3   
   140004e16:	int3   
   140004e17:	int3   
   140004e18:	mov    rax,rsp
   140004e1b:	push   rbp
   140004e1c:	push   rdi
   140004e1d:	push   r13
   140004e1f:	mov    rbp,rsp
   140004e22:	sub    rsp,0x70
   140004e26:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140004e2e:	mov    QWORD PTR [rax+0x10],rbx
   140004e32:	mov    QWORD PTR [rax+0x18],rsi
   140004e36:	mov    rax,QWORD PTR [rip+0x633b3]        # 0x1400681f0
   140004e3d:	xor    rax,rsp
   140004e40:	mov    QWORD PTR [rbp-0x8],rax
   140004e44:	mov    rbx,rcx
   140004e47:	cmp    QWORD PTR [rcx+0x80],0x0
   140004e4f:	je     0x140004fc7
   140004e55:	cmp    BYTE PTR [rcx+0x89],0x0
   140004e5c:	je     0x140004fc7
   140004e62:	mov    rax,QWORD PTR [rcx]
   140004e65:	or     edx,0xffffffff
   140004e68:	call   QWORD PTR [rax+0x18]
   140004e6b:	cmp    eax,0xffffffff
   140004e6e:	jne    0x140004e77
   140004e70:	xor    al,al
   140004e72:	jmp    0x140004fc9
   140004e77:	mov    QWORD PTR [rbp-0x18],0xf
   140004e7f:	and    QWORD PTR [rbp-0x20],0x0
   140004e84:	mov    BYTE PTR [rbp-0x30],0x0
   140004e88:	mov    r13d,0x8
   140004e8e:	cmp    r13b,0xfe
   140004e92:	jbe    0x140004ea2
   140004e94:	lea    rcx,[rip+0x4baad]        # 0x140050948
   140004e9b:	call   QWORD PTR [rip+0x446f7]        # 0x140049598
   140004ea1:	int3   
   140004ea2:	mov    r8,r13
   140004ea5:	xor    edx,edx
   140004ea7:	lea    rcx,[rbp-0x30]
   140004eab:	call   QWORD PTR [rip+0x447a7]        # 0x140049658
   140004eb1:	mov    QWORD PTR [rbp-0x20],r13
   140004eb5:	lea    rax,[rbp-0x30]
   140004eb9:	cmp    QWORD PTR [rbp-0x18],0x10
   140004ebe:	cmovae rax,QWORD PTR [rbp-0x30]
   140004ec3:	mov    BYTE PTR [rax+0x8],0x0
   140004ec7:	mov    rdx,QWORD PTR [rbp-0x30]
   140004ecb:	mov    r9,QWORD PTR [rbp-0x18]
   140004ecf:	lea    rcx,[rbp-0x30]
   140004ed3:	cmp    r9,0x10
   140004ed7:	cmovae rcx,rdx
   140004edb:	lea    r8,[rbp-0x30]
   140004edf:	cmovae r8,rdx
   140004ee3:	mov    rax,QWORD PTR [rbp-0x20]
   140004ee7:	lea    r9,[rcx+rax*1]
   140004eeb:	lea    rax,[rbp-0x40]
   140004eef:	mov    QWORD PTR [rsp+0x20],rax
   140004ef4:	lea    rdx,[rbx+0x8c]
   140004efb:	mov    rcx,QWORD PTR [rbx+0x80]
   140004f02:	call   QWORD PTR [rip+0x44380]        # 0x140049288
   140004f08:	test   eax,eax
   140004f0a:	je     0x140004f12
   140004f0c:	dec    eax
   140004f0e:	jne    0x140004f8a
   140004f10:	jmp    0x140004f19
   140004f12:	mov    BYTE PTR [rbx+0x89],0x0
   140004f19:	lea    rax,[rbp-0x30]
   140004f1d:	mov    rdx,QWORD PTR [rbp-0x30]
   140004f21:	mov    r9,QWORD PTR [rbp-0x18]
   140004f25:	cmp    r9,0x10
   140004f29:	cmovae rax,rdx
   140004f2d:	mov    rdi,QWORD PTR [rbp-0x40]
   140004f31:	sub    rdi,rax
   140004f34:	je     0x140004f64
   140004f36:	lea    rcx,[rbp-0x30]
   140004f3a:	cmp    r9,0x10
   140004f3e:	cmovae rcx,rdx
   140004f42:	mov    r9,QWORD PTR [rbx+0x98]
   140004f49:	mov    r8,rdi
   140004f4c:	mov    edx,0x1
   140004f51:	call   QWORD PTR [rip+0x44731]        # 0x140049688
   140004f57:	cmp    rdi,rax
   140004f5a:	jne    0x140004f9e
   140004f5c:	mov    r9,QWORD PTR [rbp-0x18]
   140004f60:	mov    rdx,QWORD PTR [rbp-0x30]
   140004f64:	cmp    BYTE PTR [rbx+0x89],0x0
   140004f6b:	je     0x140004fb8
   140004f6d:	test   rdi,rdi
   140004f70:	jne    0x140004ecf
   140004f76:	xor    r8d,r8d
   140004f79:	mov    rdx,r13
   140004f7c:	lea    rcx,[rbp-0x30]
   140004f80:	call   0x1400047bc
   140004f85:	jmp    0x140004ec7
   140004f8a:	sub    eax,0x2
   140004f8d:	je     0x140004f91
   140004f8f:	jmp    0x140004f9e
   140004f91:	cmp    QWORD PTR [rbp-0x18],0x10
   140004f96:	jb     0x140004fc7
   140004f98:	mov    rcx,QWORD PTR [rbp-0x30]
   140004f9c:	jmp    0x140004fc1
   140004f9e:	cmp    QWORD PTR [rbp-0x18],0x10
   140004fa3:	jb     0x140004e70
   140004fa9:	mov    rcx,QWORD PTR [rbp-0x30]
   140004fad:	call   QWORD PTR [rip+0x446c5]        # 0x140049678
   140004fb3:	jmp    0x140004e70
   140004fb8:	cmp    r9,0x10
   140004fbc:	jb     0x140004fc7
   140004fbe:	mov    rcx,rdx
   140004fc1:	call   QWORD PTR [rip+0x446b1]        # 0x140049678
   140004fc7:	mov    al,0x1
   140004fc9:	mov    rcx,QWORD PTR [rbp-0x8]
   140004fcd:	xor    rcx,rsp
   140004fd0:	call   0x14002b100
   140004fd5:	lea    r11,[rsp+0x70]
   140004fda:	mov    rbx,QWORD PTR [r11+0x28]
   140004fde:	mov    rsi,QWORD PTR [r11+0x30]
   140004fe2:	mov    rsp,r11
   140004fe5:	pop    r13
   140004fe7:	pop    rdi
   140004fe8:	pop    rbp
   140004fe9:	ret    
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	sub    rsp,0x28
   140004ff0:	mov    rdx,QWORD PTR [rcx+0x8]
   140004ff4:	movabs r10,0x6666666666666667
   140004ffe:	mov    r9,rcx
   140005001:	sub    rdx,QWORD PTR [rcx]
   140005004:	mov    rax,r10
   140005007:	imul   rdx
   14000500a:	mov    r8,rdx
   14000500d:	sar    r8,0x5
   140005011:	mov    rax,r8
   140005014:	shr    rax,0x3f
   140005018:	add    r8,rax
   14000501b:	movabs rax,0x333333333333332
   140005025:	cmp    r8,rax
   140005028:	jbe    0x140005038
   14000502a:	lea    rcx,[rip+0x4b927]        # 0x140050958
   140005031:	call   QWORD PTR [rip+0x44561]        # 0x140049598
   140005037:	int3   
   140005038:	mov    rcx,QWORD PTR [rcx+0x10]
   14000503c:	mov    rax,r10
   14000503f:	inc    r8
   140005042:	sub    rcx,QWORD PTR [r9]
   140005045:	imul   rcx
   140005048:	sar    rdx,0x5
   14000504c:	mov    rax,rdx
   14000504f:	shr    rax,0x3f
   140005053:	add    rdx,rax
   140005056:	cmp    r8,rdx
   140005059:	jbe    0x140005089
   14000505b:	mov    rcx,rdx
   14000505e:	movabs rax,0x333333333333333
   140005068:	shr    rcx,1
   14000506b:	sub    rax,rcx
   14000506e:	cmp    rax,rdx
   140005071:	jae    0x140005077
   140005073:	xor    edx,edx
   140005075:	jmp    0x14000507a
   140005077:	add    rdx,rcx
   14000507a:	cmp    rdx,r8
   14000507d:	mov    rcx,r9
   140005080:	cmovb  rdx,r8
   140005084:	call   0x1400054d8
   140005089:	add    rsp,0x28
   14000508d:	ret    
   14000508e:	int3   
   14000508f:	int3   
   140005090:	mov    QWORD PTR [rsp+0x8],rcx
   140005095:	push   rdi
   140005096:	sub    rsp,0x30
   14000509a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400050a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400050a8:	mov    rbx,rdx
   1400050ab:	mov    rdi,rcx
   1400050ae:	mov    QWORD PTR [rcx],rdx
   1400050b1:	mov    rax,QWORD PTR [rdx]
   1400050b4:	movsxd r8,DWORD PTR [rax+0x4]
   1400050b8:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   1400050bd:	test   rcx,rcx
   1400050c0:	je     0x1400050c9
   1400050c2:	mov    rax,QWORD PTR [rcx]
   1400050c5:	call   QWORD PTR [rax+0x8]
   1400050c8:	nop
   1400050c9:	mov    rax,QWORD PTR [rbx]
   1400050cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400050d0:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   1400050d5:	jne    0x1400050e7
   1400050d7:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   1400050dc:	test   rcx,rcx
   1400050df:	je     0x1400050e7
   1400050e1:	call   QWORD PTR [rip+0x44201]        # 0x1400492e8
   1400050e7:	mov    rax,QWORD PTR [rbx]
   1400050ea:	movsxd rcx,DWORD PTR [rax+0x4]
   1400050ee:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   1400050f3:	sete   al
   1400050f6:	mov    BYTE PTR [rdi+0x8],al
   1400050f9:	mov    rax,rdi
   1400050fc:	mov    rbx,QWORD PTR [rsp+0x48]
   140005101:	add    rsp,0x30
   140005105:	pop    rdi
   140005106:	ret    
   140005107:	int3   
   140005108:	mov    QWORD PTR [rsp+0x8],rcx
   14000510d:	push   rbx
   14000510e:	sub    rsp,0x30
   140005112:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000511b:	mov    rbx,rcx
   14000511e:	call   QWORD PTR [rip+0x44354]        # 0x140049478
   140005124:	test   al,al
   140005126:	jne    0x140005132
   140005128:	mov    rcx,QWORD PTR [rbx]
   14000512b:	call   QWORD PTR [rip+0x44127]        # 0x140049258
   140005131:	nop
   140005132:	mov    rdx,QWORD PTR [rbx]
   140005135:	mov    rax,QWORD PTR [rdx]
   140005138:	movsxd rcx,DWORD PTR [rax+0x4]
   14000513c:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140005141:	test   rcx,rcx
   140005144:	je     0x14000514c
   140005146:	mov    rax,QWORD PTR [rcx]
   140005149:	call   QWORD PTR [rax+0x10]
   14000514c:	add    rsp,0x30
   140005150:	pop    rbx
   140005151:	ret    
   140005152:	int3   
   140005153:	int3   
   140005154:	mov    QWORD PTR [rsp+0x8],rbx
   140005159:	mov    QWORD PTR [rsp+0x10],rsi
   14000515e:	push   rdi
   14000515f:	sub    rsp,0x20
   140005163:	mov    rdi,r8
   140005166:	mov    rsi,rdx
   140005169:	mov    rbx,rcx
   14000516c:	test   rdx,rdx
   14000516f:	je     0x1400051c0
   140005171:	cmp    QWORD PTR [rcx+0x18],0x10
   140005176:	jb     0x14000517d
   140005178:	mov    rax,QWORD PTR [rcx]
   14000517b:	jmp    0x140005180
   14000517d:	mov    rax,rcx
   140005180:	cmp    rdx,rax
   140005183:	jb     0x1400051c0
   140005185:	cmp    QWORD PTR [rcx+0x18],0x10
   14000518a:	jb     0x14000518f
   14000518c:	mov    rcx,QWORD PTR [rcx]
   14000518f:	add    rcx,QWORD PTR [rbx+0x10]
   140005193:	cmp    rcx,rdx
   140005196:	jbe    0x1400051c0
   140005198:	cmp    QWORD PTR [rbx+0x18],0x10
   14000519d:	jb     0x1400051a4
   14000519f:	mov    rax,QWORD PTR [rbx]
   1400051a2:	jmp    0x1400051a7
   1400051a4:	mov    rax,rbx
   1400051a7:	sub    rsi,rax
   1400051aa:	mov    r9,r8
   1400051ad:	mov    rdx,rbx
   1400051b0:	mov    r8,rsi
   1400051b3:	mov    rcx,rbx
   1400051b6:	call   0x1400048b8
   1400051bb:	jmp    0x140005240
   1400051c0:	cmp    r8,0xfffffffffffffffe
   1400051c4:	jbe    0x1400051d4
   1400051c6:	lea    rcx,[rip+0x4b77b]        # 0x140050948
   1400051cd:	call   QWORD PTR [rip+0x443c5]        # 0x140049598
   1400051d3:	int3   
   1400051d4:	cmp    QWORD PTR [rbx+0x18],r8
   1400051d8:	jae    0x1400051eb
   1400051da:	mov    r8,QWORD PTR [rbx+0x10]
   1400051de:	mov    rdx,rdi
   1400051e1:	mov    rcx,rbx
   1400051e4:	call   0x140005750
   1400051e9:	jmp    0x140005206
   1400051eb:	test   r8,r8
   1400051ee:	jne    0x140005206
   1400051f0:	and    QWORD PTR [rbx+0x10],r8
   1400051f4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400051f9:	jb     0x140005200
   1400051fb:	mov    rax,QWORD PTR [rbx]
   1400051fe:	jmp    0x140005203
   140005200:	mov    rax,rbx
   140005203:	mov    BYTE PTR [rax],0x0
   140005206:	test   rdi,rdi
   140005209:	je     0x14000523d
   14000520b:	cmp    QWORD PTR [rbx+0x18],0x10
   140005210:	jb     0x140005217
   140005212:	mov    rcx,QWORD PTR [rbx]
   140005215:	jmp    0x14000521a
   140005217:	mov    rcx,rbx
   14000521a:	mov    r8,rdi
   14000521d:	mov    rdx,rsi
   140005220:	call   QWORD PTR [rip+0x446a2]        # 0x1400498c8
   140005226:	cmp    QWORD PTR [rbx+0x18],0x10
   14000522b:	mov    QWORD PTR [rbx+0x10],rdi
   14000522f:	jb     0x140005236
   140005231:	mov    rax,QWORD PTR [rbx]
   140005234:	jmp    0x140005239
   140005236:	mov    rax,rbx
   140005239:	mov    BYTE PTR [rax+rdi*1],0x0
   14000523d:	mov    rax,rbx
   140005240:	mov    rbx,QWORD PTR [rsp+0x30]
   140005245:	mov    rsi,QWORD PTR [rsp+0x38]
   14000524a:	add    rsp,0x20
   14000524e:	pop    rdi
   14000524f:	ret    
   140005250:	mov    QWORD PTR [rsp+0x8],rbx
   140005255:	mov    QWORD PTR [rsp+0x10],rsi
   14000525a:	push   rdi
   14000525b:	sub    rsp,0x20
   14000525f:	mov    sil,r8b
   140005262:	mov    rdi,rdx
   140005265:	mov    rbx,rcx
   140005268:	cmp    rdx,0xffffffffffffffff
   14000526c:	jne    0x14000527c
   14000526e:	lea    rcx,[rip+0x4b6d3]        # 0x140050948
   140005275:	call   QWORD PTR [rip+0x4431d]        # 0x140049598
   14000527b:	int3   
   14000527c:	cmp    rdx,0xfffffffffffffffe
   140005280:	jbe    0x140005290
   140005282:	lea    rcx,[rip+0x4b6bf]        # 0x140050948
   140005289:	call   QWORD PTR [rip+0x44309]        # 0x140049598
   14000528f:	int3   
   140005290:	cmp    QWORD PTR [rcx+0x18],rdx
   140005294:	jae    0x1400052a1
   140005296:	mov    r8,QWORD PTR [rcx+0x10]
   14000529a:	call   0x140005750
   14000529f:	jmp    0x1400052bc
   1400052a1:	test   rdx,rdx
   1400052a4:	jne    0x1400052bc
   1400052a6:	and    QWORD PTR [rcx+0x10],rdx
   1400052aa:	cmp    QWORD PTR [rcx+0x18],0x10
   1400052af:	jb     0x1400052b6
   1400052b1:	mov    rax,QWORD PTR [rcx]
   1400052b4:	jmp    0x1400052b9
   1400052b6:	mov    rax,rcx
   1400052b9:	mov    BYTE PTR [rax],0x0
   1400052bc:	test   rdi,rdi
   1400052bf:	je     0x14000530e
   1400052c1:	cmp    rdi,0x1
   1400052c5:	jne    0x1400052db
   1400052c7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400052cc:	jb     0x1400052d3
   1400052ce:	mov    rax,QWORD PTR [rbx]
   1400052d1:	jmp    0x1400052d6
   1400052d3:	mov    rax,rbx
   1400052d6:	mov    BYTE PTR [rax],sil
   1400052d9:	jmp    0x1400052f7
   1400052db:	cmp    QWORD PTR [rbx+0x18],0x10
   1400052e0:	jb     0x1400052e7
   1400052e2:	mov    rcx,QWORD PTR [rbx]
   1400052e5:	jmp    0x1400052ea
   1400052e7:	mov    rcx,rbx
   1400052ea:	movsx  edx,sil
   1400052ee:	mov    r8,rdi
   1400052f1:	call   QWORD PTR [rip+0x44361]        # 0x140049658
   1400052f7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400052fc:	mov    QWORD PTR [rbx+0x10],rdi
   140005300:	jb     0x140005307
   140005302:	mov    rax,QWORD PTR [rbx]
   140005305:	jmp    0x14000530a
   140005307:	mov    rax,rbx
   14000530a:	mov    BYTE PTR [rax+rdi*1],0x0
   14000530e:	mov    rsi,QWORD PTR [rsp+0x38]
   140005313:	mov    rax,rbx
   140005316:	mov    rbx,QWORD PTR [rsp+0x30]
   14000531b:	add    rsp,0x20
   14000531f:	pop    rdi
   140005320:	ret    
   140005321:	int3   
   140005322:	int3   
   140005323:	int3   
   140005324:	mov    rax,rsp
   140005327:	mov    QWORD PTR [rax+0x8],rbx
   14000532b:	mov    QWORD PTR [rax+0x10],rbp
   14000532f:	mov    QWORD PTR [rax+0x18],rsi
   140005333:	mov    QWORD PTR [rax+0x20],rdi
   140005337:	push   r12
   140005339:	sub    rsp,0x20
   14000533d:	mov    rsi,rdx
   140005340:	mov    rbx,rcx
   140005343:	cmp    rdx,0xfffffffffffffffe
   140005347:	jbe    0x140005357
   140005349:	lea    rcx,[rip+0x4b5f8]        # 0x140050948
   140005350:	call   QWORD PTR [rip+0x44242]        # 0x140049598
   140005356:	int3   
   140005357:	xor    edi,edi
   140005359:	cmp    QWORD PTR [rcx+0x18],rdx
   14000535d:	jae    0x14000536a
   14000535f:	mov    r8,QWORD PTR [rcx+0x10]
   140005363:	call   0x140005750
   140005368:	jmp    0x1400053cc
   14000536a:	test   r8b,r8b
   14000536d:	je     0x1400053b6
   14000536f:	cmp    rdx,0x10
   140005373:	jae    0x1400053b6
   140005375:	mov    rbp,QWORD PTR [rcx+0x10]
   140005379:	cmp    rdx,rbp
   14000537c:	cmovb  rbp,rdx
   140005380:	cmp    QWORD PTR [rcx+0x18],0x10
   140005385:	jb     0x1400053a4
   140005387:	mov    r12,QWORD PTR [rcx]
   14000538a:	test   rbp,rbp
   14000538d:	je     0x14000539b
   14000538f:	mov    r8,rbp
   140005392:	mov    rdx,r12
   140005395:	call   QWORD PTR [rip+0x4452d]        # 0x1400498c8
   14000539b:	mov    rcx,r12
   14000539e:	call   QWORD PTR [rip+0x442d4]        # 0x140049678
   1400053a4:	mov    QWORD PTR [rbx+0x18],0xf
   1400053ac:	mov    QWORD PTR [rbx+0x10],rbp
   1400053b0:	mov    BYTE PTR [rbx+rbp*1],dil
   1400053b4:	jmp    0x1400053cc
   1400053b6:	test   rdx,rdx
   1400053b9:	jne    0x1400053cc
   1400053bb:	cmp    QWORD PTR [rcx+0x18],0x10
   1400053c0:	mov    QWORD PTR [rcx+0x10],rdi
   1400053c4:	jb     0x1400053c9
   1400053c6:	mov    rbx,QWORD PTR [rcx]
   1400053c9:	mov    BYTE PTR [rbx],dil
   1400053cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053d1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400053d6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400053db:	test   rsi,rsi
   1400053de:	mov    rsi,QWORD PTR [rsp+0x40]
   1400053e3:	setne  al
   1400053e6:	add    rsp,0x20
   1400053ea:	pop    r12
   1400053ec:	ret    
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400053fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400053ff:	push   rdi
   140005400:	sub    rsp,0x20
   140005404:	mov    rdi,QWORD PTR [rcx+0x8]
   140005408:	mov    rbp,rdx
   14000540b:	mov    rsi,rcx
   14000540e:	mov    rbx,QWORD PTR [rdi+0x8]
   140005412:	jmp    0x140005433
   140005414:	lea    rdx,[rbx+0x18]
   140005418:	mov    r8,rbp
   14000541b:	mov    rcx,rsi
   14000541e:	call   0x140004c0c
   140005423:	test   al,al
   140005425:	je     0x14000542d
   140005427:	mov    rbx,QWORD PTR [rbx+0x10]
   14000542b:	jmp    0x140005433
   14000542d:	mov    rdi,rbx
   140005430:	mov    rbx,QWORD PTR [rbx]
   140005433:	cmp    BYTE PTR [rbx+0x69],0x0
   140005437:	je     0x140005414
   140005439:	mov    rbx,QWORD PTR [rsp+0x30]
   14000543e:	mov    rbp,QWORD PTR [rsp+0x38]
   140005443:	mov    rsi,QWORD PTR [rsp+0x40]
   140005448:	mov    rax,rdi
   14000544b:	add    rsp,0x20
   14000544f:	pop    rdi
   140005450:	ret    
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	rex push rbx
   140005456:	sub    rsp,0x40
   14000545a:	and    QWORD PTR [rcx+0x10],0x0
   14000545f:	mov    rbx,rcx
   140005462:	mov    ecx,0x70
   140005467:	call   QWORD PTR [rip+0x4422b]        # 0x140049698
   14000546d:	test   rax,rax
   140005470:	je     0x1400054a2
   140005472:	mov    QWORD PTR [rbx+0x8],rax
   140005476:	mov    QWORD PTR [rax],rax
   140005479:	mov    rax,QWORD PTR [rbx+0x8]
   14000547d:	mov    QWORD PTR [rax+0x8],rax
   140005481:	mov    rax,QWORD PTR [rbx+0x8]
   140005485:	mov    QWORD PTR [rax+0x10],rax
   140005489:	mov    rax,QWORD PTR [rbx+0x8]
   14000548d:	mov    BYTE PTR [rax+0x68],0x1
   140005491:	mov    rax,QWORD PTR [rbx+0x8]
   140005495:	mov    BYTE PTR [rax+0x69],0x1
   140005499:	mov    rax,rbx
   14000549c:	add    rsp,0x40
   1400054a0:	pop    rbx
   1400054a1:	ret    
   1400054a2:	and    QWORD PTR [rsp+0x50],0x0
   1400054a8:	lea    rdx,[rsp+0x50]
   1400054ad:	lea    rcx,[rsp+0x20]
   1400054b2:	call   QWORD PTR [rip+0x44418]        # 0x1400498d0
   1400054b8:	lea    r11,[rip+0x44d19]        # 0x14004a1d8
   1400054bf:	lea    rdx,[rip+0x5e282]        # 0x140063748
   1400054c6:	lea    rcx,[rsp+0x20]
   1400054cb:	mov    QWORD PTR [rsp+0x20],r11
   1400054d0:	call   0x14002b560
   1400054d5:	int3   
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	push   r12
   1400054da:	push   r13
   1400054dc:	push   r14
   1400054de:	sub    rsp,0x40
   1400054e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400054eb:	mov    QWORD PTR [rsp+0x60],rbx
   1400054f0:	mov    QWORD PTR [rsp+0x70],rsi
   1400054f5:	mov    QWORD PTR [rsp+0x78],rdi
   1400054fa:	mov    rdi,rdx
   1400054fd:	mov    rsi,rcx
   140005500:	movabs rax,0x333333333333333
   14000550a:	cmp    rdx,rax
   14000550d:	jbe    0x14000551d
   14000550f:	lea    rcx,[rip+0x4b442]        # 0x140050958
   140005516:	call   QWORD PTR [rip+0x4407c]        # 0x140049598
   14000551c:	int3   
   14000551d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005521:	sub    rcx,QWORD PTR [rsi]
   140005524:	movabs r14,0x6666666666666667
   14000552e:	mov    rax,r14
   140005531:	imul   rcx
   140005534:	sar    rdx,0x5
   140005538:	mov    rax,rdx
   14000553b:	shr    rax,0x3f
   14000553f:	add    rdx,rax
   140005542:	cmp    rdx,rdi
   140005545:	jae    0x14000561b
   14000554b:	xor    ebx,ebx
   14000554d:	mov    QWORD PTR [rsp+0x68],rbx
   140005552:	test   rdi,rdi
   140005555:	je     0x1400055a5
   140005557:	lea    rcx,[rdi+rdi*4]
   14000555b:	shl    rcx,0x4
   14000555f:	call   QWORD PTR [rip+0x44133]        # 0x140049698
   140005565:	mov    rbx,rax
   140005568:	mov    QWORD PTR [rsp+0x68],rax
   14000556d:	test   rax,rax
   140005570:	jne    0x1400055a5
   140005572:	and    QWORD PTR [rsp+0x68],rax
   140005577:	lea    rdx,[rsp+0x68]
   14000557c:	lea    rcx,[rsp+0x28]
   140005581:	call   QWORD PTR [rip+0x44349]        # 0x1400498d0
   140005587:	lea    r11,[rip+0x44c4a]        # 0x14004a1d8
   14000558e:	mov    QWORD PTR [rsp+0x28],r11
   140005593:	lea    rdx,[rip+0x5e1ae]        # 0x140063748
   14000559a:	lea    rcx,[rsp+0x28]
   14000559f:	call   0x14002b560
   1400055a4:	nop
   1400055a5:	mov    r8,rbx
   1400055a8:	mov    rdx,QWORD PTR [rsi+0x8]
   1400055ac:	mov    rcx,QWORD PTR [rsi]
   1400055af:	call   0x140007bf0
   1400055b4:	nop
   1400055b5:	mov    r13,QWORD PTR [rsi+0x8]
   1400055b9:	mov    r12,QWORD PTR [rsi]
   1400055bc:	mov    rcx,r13
   1400055bf:	sub    rcx,r12
   1400055c2:	mov    rax,r14
   1400055c5:	imul   rcx
   1400055c8:	mov    r14,rdx
   1400055cb:	sar    r14,0x5
   1400055cf:	mov    rax,r14
   1400055d2:	shr    rax,0x3f
   1400055d6:	add    r14,rax
   1400055d9:	test   r12,r12
   1400055dc:	je     0x1400055fa
   1400055de:	jmp    0x1400055ec
   1400055e0:	mov    rcx,r12
   1400055e3:	call   0x140002da8
   1400055e8:	add    r12,0x50
   1400055ec:	cmp    r12,r13
   1400055ef:	jne    0x1400055e0
   1400055f1:	mov    rcx,QWORD PTR [rsi]
   1400055f4:	call   QWORD PTR [rip+0x4407e]        # 0x140049678
   1400055fa:	lea    rax,[rdi+rdi*4]
   1400055fe:	shl    rax,0x4
   140005602:	add    rax,rbx
   140005605:	mov    QWORD PTR [rsi+0x10],rax
   140005609:	lea    rax,[r14+r14*4]
   14000560d:	shl    rax,0x4
   140005611:	add    rax,rbx
   140005614:	mov    QWORD PTR [rsi+0x8],rax
   140005618:	mov    QWORD PTR [rsi],rbx
   14000561b:	mov    rbx,QWORD PTR [rsp+0x60]
   140005620:	mov    rsi,QWORD PTR [rsp+0x70]
   140005625:	mov    rdi,QWORD PTR [rsp+0x78]
   14000562a:	add    rsp,0x40
   14000562e:	pop    r14
   140005630:	pop    r13
   140005632:	pop    r12
   140005634:	ret    
   140005635:	int3   
   140005636:	int3   
   140005637:	int3   
   140005638:	mov    rax,rsp
   14000563b:	mov    QWORD PTR [rax+0x8],rbx
   14000563f:	mov    QWORD PTR [rax+0x10],rbp
   140005643:	mov    QWORD PTR [rax+0x18],rsi
   140005647:	mov    QWORD PTR [rax+0x20],rdi
   14000564b:	push   r12
   14000564d:	sub    rsp,0x20
   140005651:	mov    rax,QWORD PTR [rdx+0x10]
   140005655:	mov    rsi,r9
   140005658:	mov    r12,r8
   14000565b:	mov    rbp,rdx
   14000565e:	mov    rbx,rcx
   140005661:	cmp    rax,r8
   140005664:	jae    0x140005674
   140005666:	lea    rcx,[rip+0x4b2c3]        # 0x140050930
   14000566d:	call   QWORD PTR [rip+0x43f3d]        # 0x1400495b0
   140005673:	int3   
   140005674:	sub    rax,r8
   140005677:	mov    r8,QWORD PTR [rcx+0x10]
   14000567b:	cmp    rax,r9
   14000567e:	cmovb  rsi,rax
   140005682:	or     rax,0xffffffffffffffff
   140005686:	sub    rax,r8
   140005689:	cmp    rax,rsi
   14000568c:	ja     0x14000569c
   14000568e:	lea    rcx,[rip+0x4b2b3]        # 0x140050948
   140005695:	call   QWORD PTR [rip+0x43efd]        # 0x140049598
   14000569b:	int3   
   14000569c:	test   rsi,rsi
   14000569f:	je     0x14000572f
   1400056a5:	lea    rdi,[r8+rsi*1]
   1400056a9:	cmp    rdi,0xfffffffffffffffe
   1400056ad:	jbe    0x1400056bd
   1400056af:	lea    rcx,[rip+0x4b292]        # 0x140050948
   1400056b6:	call   QWORD PTR [rip+0x43edc]        # 0x140049598
   1400056bc:	int3   
   1400056bd:	cmp    QWORD PTR [rcx+0x18],rdi
   1400056c1:	jae    0x1400056cd
   1400056c3:	mov    rdx,rdi
   1400056c6:	call   0x140005750
   1400056cb:	jmp    0x1400056e8
   1400056cd:	test   rdi,rdi
   1400056d0:	jne    0x1400056ed
   1400056d2:	and    QWORD PTR [rcx+0x10],rdi
   1400056d6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400056db:	jb     0x1400056e2
   1400056dd:	mov    rax,QWORD PTR [rcx]
   1400056e0:	jmp    0x1400056e5
   1400056e2:	mov    rax,rcx
   1400056e5:	mov    BYTE PTR [rax],0x0
   1400056e8:	test   rdi,rdi
   1400056eb:	je     0x14000572f
   1400056ed:	cmp    QWORD PTR [rbp+0x18],0x10
   1400056f2:	jb     0x1400056f8
   1400056f4:	mov    rbp,QWORD PTR [rbp+0x0]
   1400056f8:	cmp    QWORD PTR [rbx+0x18],0x10
   1400056fd:	jb     0x140005704
   1400056ff:	mov    rcx,QWORD PTR [rbx]
   140005702:	jmp    0x140005707
   140005704:	mov    rcx,rbx
   140005707:	add    rcx,QWORD PTR [rbx+0x10]
   14000570b:	lea    rdx,[r12+rbp*1]
   14000570f:	mov    r8,rsi
   140005712:	call   QWORD PTR [rip+0x441b0]        # 0x1400498c8
   140005718:	cmp    QWORD PTR [rbx+0x18],0x10
   14000571d:	mov    QWORD PTR [rbx+0x10],rdi
   140005721:	jb     0x140005728
   140005723:	mov    rax,QWORD PTR [rbx]
   140005726:	jmp    0x14000572b
   140005728:	mov    rax,rbx
   14000572b:	mov    BYTE PTR [rax+rdi*1],0x0
   14000572f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005734:	mov    rsi,QWORD PTR [rsp+0x40]
   140005739:	mov    rdi,QWORD PTR [rsp+0x48]
   14000573e:	mov    rax,rbx
   140005741:	mov    rbx,QWORD PTR [rsp+0x30]
   140005746:	add    rsp,0x20
   14000574a:	pop    r12
   14000574c:	ret    
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	mov    QWORD PTR [rsp+0x18],r8
   140005755:	mov    QWORD PTR [rsp+0x10],rdx
   14000575a:	mov    QWORD PTR [rsp+0x8],rcx
   14000575f:	push   rbx
   140005760:	push   rsi
   140005761:	push   rdi
   140005762:	push   r12
   140005764:	sub    rsp,0x68
   140005768:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005771:	mov    r12,r8
   140005774:	mov    rdi,rcx
   140005777:	mov    rbx,rdx
   14000577a:	or     rbx,0xf
   14000577e:	mov    r9,0xfffffffffffffffe
   140005785:	cmp    rbx,r9
   140005788:	jbe    0x14000578f
   14000578a:	mov    rbx,rdx
   14000578d:	jmp    0x1400057c0
   14000578f:	mov    r8,QWORD PTR [rcx+0x18]
   140005793:	mov    rcx,r8
   140005796:	shr    rcx,1
   140005799:	movabs rax,0xaaaaaaaaaaaaaaab
   1400057a3:	mul    rbx
   1400057a6:	shr    rdx,1
   1400057a9:	cmp    rcx,rdx
   1400057ac:	jbe    0x1400057c0
   1400057ae:	mov    rax,r9
   1400057b1:	sub    rax,rcx
   1400057b4:	cmp    r8,rax
   1400057b7:	lea    rbx,[rcx+r8*1]
   1400057bb:	jbe    0x1400057c0
   1400057bd:	mov    rbx,r9
   1400057c0:	lea    rcx,[rbx+0x1]
   1400057c4:	xor    esi,esi
   1400057c6:	test   rcx,rcx
   1400057c9:	je     0x140005819
   1400057cb:	cmp    rcx,0xffffffffffffffff
   1400057cf:	ja     0x1400057df
   1400057d1:	call   QWORD PTR [rip+0x43ec1]        # 0x140049698
   1400057d7:	mov    rsi,rax
   1400057da:	test   rax,rax
   1400057dd:	jne    0x140005819
   1400057df:	and    QWORD PTR [rsp+0xa8],0x0
   1400057e8:	lea    rdx,[rsp+0xa8]
   1400057f0:	lea    rcx,[rsp+0x28]
   1400057f5:	call   QWORD PTR [rip+0x440d5]        # 0x1400498d0
   1400057fb:	lea    rax,[rip+0x449d6]        # 0x14004a1d8
   140005802:	mov    QWORD PTR [rsp+0x28],rax
   140005807:	lea    rdx,[rip+0x5df3a]        # 0x140063748
   14000580e:	lea    rcx,[rsp+0x28]
   140005813:	call   0x14002b560
   140005818:	nop
   140005819:	jmp    0x14000583b
   14000581b:	mov    rdi,QWORD PTR [rsp+0x90]
   140005823:	mov    r12,QWORD PTR [rsp+0xa0]
   14000582b:	mov    rbx,QWORD PTR [rsp+0x98]
   140005833:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000583b:	test   r12,r12
   14000583e:	je     0x14000585b
   140005840:	cmp    QWORD PTR [rdi+0x18],0x10
   140005845:	jb     0x14000584c
   140005847:	mov    rdx,QWORD PTR [rdi]
   14000584a:	jmp    0x14000584f
   14000584c:	mov    rdx,rdi
   14000584f:	mov    r8,r12
   140005852:	mov    rcx,rsi
   140005855:	call   QWORD PTR [rip+0x4406d]        # 0x1400498c8
   14000585b:	cmp    QWORD PTR [rdi+0x18],0x10
   140005860:	jb     0x14000586b
   140005862:	mov    rcx,QWORD PTR [rdi]
   140005865:	call   QWORD PTR [rip+0x43e0d]        # 0x140049678
   14000586b:	mov    BYTE PTR [rdi],0x0
   14000586e:	mov    QWORD PTR [rdi],rsi
   140005871:	mov    QWORD PTR [rdi+0x18],rbx
   140005875:	mov    QWORD PTR [rdi+0x10],r12
   140005879:	cmp    rbx,0x10
   14000587d:	cmovae rdi,rsi
   140005881:	mov    BYTE PTR [rdi+r12*1],0x0
   140005886:	add    rsp,0x68
   14000588a:	pop    r12
   14000588c:	pop    rdi
   14000588d:	pop    rsi
   14000588e:	pop    rbx
   14000588f:	ret    
   140005890:	mov    rax,rsp
   140005893:	mov    QWORD PTR [rax+0x8],rbx
   140005897:	mov    QWORD PTR [rax+0x10],rbp
   14000589b:	mov    QWORD PTR [rax+0x20],rsi
   14000589f:	mov    QWORD PTR [rax+0x18],r8
   1400058a3:	push   rdi
   1400058a4:	sub    rsp,0x20
   1400058a8:	xor    ebp,ebp
   1400058aa:	mov    rsi,rdx
   1400058ad:	mov    rdi,rcx
   1400058b0:	cmp    BYTE PTR [r8+0x49],bpl
   1400058b4:	je     0x1400058c4
   1400058b6:	lea    rcx,[rip+0x4b053]        # 0x140050910
   1400058bd:	call   QWORD PTR [rip+0x43ced]        # 0x1400495b0
   1400058c3:	int3   
   1400058c4:	lea    rcx,[r8+0x10]
   1400058c8:	mov    rbx,r8
   1400058cb:	mov    r9,QWORD PTR [rcx]
   1400058ce:	cmp    BYTE PTR [r9+0x49],bpl
   1400058d2:	jne    0x1400058e7
   1400058d4:	mov    rax,QWORD PTR [r9]
   1400058d7:	jmp    0x1400058df
   1400058d9:	mov    r9,rax
   1400058dc:	mov    rax,QWORD PTR [rax]
   1400058df:	cmp    BYTE PTR [rax+0x49],bpl
   1400058e3:	je     0x1400058d9
   1400058e5:	jmp    0x140005905
   1400058e7:	mov    r9,QWORD PTR [r8+0x8]
   1400058eb:	jmp    0x1400058ff
   1400058ed:	cmp    r8,QWORD PTR [r9+0x10]
   1400058f1:	jne    0x140005905
   1400058f3:	mov    r8,r9
   1400058f6:	mov    QWORD PTR [rsp+0x40],r9
   1400058fb:	mov    r9,QWORD PTR [r9+0x8]
   1400058ff:	cmp    BYTE PTR [r9+0x49],bpl
   140005903:	je     0x1400058ed
   140005905:	mov    QWORD PTR [rsp+0x40],r9
   14000590a:	mov    rdx,QWORD PTR [rbx]
   14000590d:	cmp    BYTE PTR [rdx+0x49],bpl
   140005911:	je     0x140005918
   140005913:	mov    r8,QWORD PTR [rcx]
   140005916:	jmp    0x140005933
   140005918:	mov    rax,QWORD PTR [rcx]
   14000591b:	cmp    BYTE PTR [rax+0x49],bpl
   14000591f:	je     0x140005926
   140005921:	mov    r8,rdx
   140005924:	jmp    0x140005933
   140005926:	mov    r8,QWORD PTR [r9+0x10]
   14000592a:	cmp    r9,rbx
   14000592d:	jne    0x1400059bf
   140005933:	mov    rdx,QWORD PTR [rbx+0x8]
   140005937:	cmp    BYTE PTR [r8+0x49],bpl
   14000593b:	jne    0x140005941
   14000593d:	mov    QWORD PTR [r8+0x8],rdx
   140005941:	mov    rax,QWORD PTR [rdi+0x8]
   140005945:	cmp    QWORD PTR [rax+0x8],rbx
   140005949:	jne    0x140005951
   14000594b:	mov    QWORD PTR [rax+0x8],r8
   14000594f:	jmp    0x14000595f
   140005951:	cmp    QWORD PTR [rdx],rbx
   140005954:	jne    0x14000595b
   140005956:	mov    QWORD PTR [rdx],r8
   140005959:	jmp    0x14000595f
   14000595b:	mov    QWORD PTR [rdx+0x10],r8
   14000595f:	mov    r9,QWORD PTR [rdi+0x8]
   140005963:	cmp    QWORD PTR [r9],rbx
   140005966:	jne    0x14000598a
   140005968:	cmp    BYTE PTR [r8+0x49],bpl
   14000596c:	je     0x140005973
   14000596e:	mov    rax,rdx
   140005971:	jmp    0x140005987
   140005973:	mov    rcx,QWORD PTR [r8]
   140005976:	mov    rax,r8
   140005979:	jmp    0x140005981
   14000597b:	mov    rax,rcx
   14000597e:	mov    rcx,QWORD PTR [rcx]
   140005981:	cmp    BYTE PTR [rcx+0x49],bpl
   140005985:	je     0x14000597b
   140005987:	mov    QWORD PTR [r9],rax
   14000598a:	mov    r9,QWORD PTR [rdi+0x8]
   14000598e:	cmp    QWORD PTR [r9+0x10],rbx
   140005992:	jne    0x140005a2a
   140005998:	cmp    BYTE PTR [r8+0x49],bpl
   14000599c:	je     0x1400059a3
   14000599e:	mov    rax,rdx
   1400059a1:	jmp    0x1400059b9
   1400059a3:	mov    rcx,QWORD PTR [r8+0x10]
   1400059a7:	mov    rax,r8
   1400059aa:	jmp    0x1400059b3
   1400059ac:	mov    rax,rcx
   1400059af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400059b3:	cmp    BYTE PTR [rcx+0x49],bpl
   1400059b7:	je     0x1400059ac
   1400059b9:	mov    QWORD PTR [r9+0x10],rax
   1400059bd:	jmp    0x140005a2a
   1400059bf:	mov    QWORD PTR [rdx+0x8],r9
   1400059c3:	mov    rax,QWORD PTR [rbx]
   1400059c6:	mov    QWORD PTR [r9],rax
   1400059c9:	cmp    r9,QWORD PTR [rcx]
   1400059cc:	jne    0x1400059d3
   1400059ce:	mov    rdx,r9
   1400059d1:	jmp    0x1400059f2
   1400059d3:	mov    rdx,QWORD PTR [r9+0x8]
   1400059d7:	cmp    BYTE PTR [r8+0x49],bpl
   1400059db:	jne    0x1400059e1
   1400059dd:	mov    QWORD PTR [r8+0x8],rdx
   1400059e1:	mov    QWORD PTR [rdx],r8
   1400059e4:	mov    rax,QWORD PTR [rcx]
   1400059e7:	mov    QWORD PTR [r9+0x10],rax
   1400059eb:	mov    rax,QWORD PTR [rcx]
   1400059ee:	mov    QWORD PTR [rax+0x8],r9
   1400059f2:	mov    rax,QWORD PTR [rdi+0x8]
   1400059f6:	cmp    QWORD PTR [rax+0x8],rbx
   1400059fa:	jne    0x140005a02
   1400059fc:	mov    QWORD PTR [rax+0x8],r9
   140005a00:	jmp    0x140005a14
   140005a02:	mov    rax,QWORD PTR [rbx+0x8]
   140005a06:	cmp    QWORD PTR [rax],rbx
   140005a09:	jne    0x140005a10
   140005a0b:	mov    QWORD PTR [rax],r9
   140005a0e:	jmp    0x140005a14
   140005a10:	mov    QWORD PTR [rax+0x10],r9
   140005a14:	mov    rax,QWORD PTR [rbx+0x8]
   140005a18:	mov    QWORD PTR [r9+0x8],rax
   140005a1c:	mov    al,BYTE PTR [rbx+0x48]
   140005a1f:	mov    cl,BYTE PTR [r9+0x48]
   140005a23:	mov    BYTE PTR [r9+0x48],al
   140005a27:	mov    BYTE PTR [rbx+0x48],cl
   140005a2a:	mov    r10b,0x1
   140005a2d:	cmp    BYTE PTR [rbx+0x48],r10b
   140005a31:	jne    0x140005cf4
   140005a37:	mov    rax,QWORD PTR [rdi+0x8]
   140005a3b:	cmp    r8,QWORD PTR [rax+0x8]
   140005a3f:	je     0x140005cf0
   140005a45:	cmp    BYTE PTR [r8+0x48],r10b
   140005a49:	jne    0x140005cf0
   140005a4f:	mov    rcx,QWORD PTR [rdx]
   140005a52:	cmp    r8,rcx
   140005a55:	jne    0x140005b2b
   140005a5b:	mov    rcx,QWORD PTR [rdx+0x10]
   140005a5f:	cmp    BYTE PTR [rcx+0x48],bpl
   140005a63:	jne    0x140005aba
   140005a65:	mov    BYTE PTR [rcx+0x48],r10b
   140005a69:	mov    rcx,QWORD PTR [rdx+0x10]
   140005a6d:	mov    BYTE PTR [rdx+0x48],bpl
   140005a71:	mov    rax,QWORD PTR [rcx]
   140005a74:	mov    QWORD PTR [rdx+0x10],rax
   140005a78:	mov    rax,QWORD PTR [rcx]
   140005a7b:	cmp    BYTE PTR [rax+0x49],bpl
   140005a7f:	jne    0x140005a85
   140005a81:	mov    QWORD PTR [rax+0x8],rdx
   140005a85:	mov    rax,QWORD PTR [rdx+0x8]
   140005a89:	mov    QWORD PTR [rcx+0x8],rax
   140005a8d:	mov    rax,QWORD PTR [rdi+0x8]
   140005a91:	cmp    rdx,QWORD PTR [rax+0x8]
   140005a95:	jne    0x140005a9d
   140005a97:	mov    QWORD PTR [rax+0x8],rcx
   140005a9b:	jmp    0x140005aaf
   140005a9d:	mov    rax,QWORD PTR [rdx+0x8]
   140005aa1:	cmp    rdx,QWORD PTR [rax]
   140005aa4:	jne    0x140005aab
   140005aa6:	mov    QWORD PTR [rax],rcx
   140005aa9:	jmp    0x140005aaf
   140005aab:	mov    QWORD PTR [rax+0x10],rcx
   140005aaf:	mov    QWORD PTR [rcx],rdx
   140005ab2:	mov    QWORD PTR [rdx+0x8],rcx
   140005ab6:	mov    rcx,QWORD PTR [rdx+0x10]
   140005aba:	cmp    BYTE PTR [rcx+0x49],bpl
   140005abe:	jne    0x140005bac
   140005ac4:	mov    rax,QWORD PTR [rcx]
   140005ac7:	cmp    BYTE PTR [rax+0x48],r10b
   140005acb:	jne    0x140005adb
   140005acd:	mov    rax,QWORD PTR [rcx+0x10]
   140005ad1:	cmp    BYTE PTR [rax+0x48],r10b
   140005ad5:	je     0x140005ba8
   140005adb:	mov    rax,QWORD PTR [rcx+0x10]
   140005adf:	cmp    BYTE PTR [rax+0x48],r10b
   140005ae3:	jne    0x140005bd7
   140005ae9:	mov    rax,QWORD PTR [rcx]
   140005aec:	mov    BYTE PTR [rax+0x48],r10b
   140005af0:	mov    r9,QWORD PTR [rcx]
   140005af3:	mov    BYTE PTR [rcx+0x48],bpl
   140005af7:	mov    rax,QWORD PTR [r9+0x10]
   140005afb:	mov    QWORD PTR [rcx],rax
   140005afe:	mov    rax,QWORD PTR [r9+0x10]
   140005b02:	cmp    BYTE PTR [rax+0x49],bpl
   140005b06:	jne    0x140005b0c
   140005b08:	mov    QWORD PTR [rax+0x8],rcx
   140005b0c:	mov    rax,QWORD PTR [rcx+0x8]
   140005b10:	mov    QWORD PTR [r9+0x8],rax
   140005b14:	mov    rax,QWORD PTR [rdi+0x8]
   140005b18:	cmp    rcx,QWORD PTR [rax+0x8]
   140005b1c:	jne    0x140005bb8
   140005b22:	mov    QWORD PTR [rax+0x8],r9
   140005b26:	jmp    0x140005bcb
   140005b2b:	cmp    BYTE PTR [rcx+0x48],bpl
   140005b2f:	jne    0x140005b87
   140005b31:	mov    BYTE PTR [rcx+0x48],r10b
   140005b35:	mov    rcx,QWORD PTR [rdx]
   140005b38:	mov    BYTE PTR [rdx+0x48],bpl
   140005b3c:	mov    rax,QWORD PTR [rcx+0x10]
   140005b40:	mov    QWORD PTR [rdx],rax
   140005b43:	mov    rax,QWORD PTR [rcx+0x10]
   140005b47:	cmp    BYTE PTR [rax+0x49],bpl
   140005b4b:	jne    0x140005b51
   140005b4d:	mov    QWORD PTR [rax+0x8],rdx
   140005b51:	mov    rax,QWORD PTR [rdx+0x8]
   140005b55:	mov    QWORD PTR [rcx+0x8],rax
   140005b59:	mov    rax,QWORD PTR [rdi+0x8]
   140005b5d:	cmp    rdx,QWORD PTR [rax+0x8]
   140005b61:	jne    0x140005b69
   140005b63:	mov    QWORD PTR [rax+0x8],rcx
   140005b67:	jmp    0x140005b7c
   140005b69:	mov    rax,QWORD PTR [rdx+0x8]
   140005b6d:	cmp    rdx,QWORD PTR [rax+0x10]
   140005b71:	jne    0x140005b79
   140005b73:	mov    QWORD PTR [rax+0x10],rcx
   140005b77:	jmp    0x140005b7c
   140005b79:	mov    QWORD PTR [rax],rcx
   140005b7c:	mov    QWORD PTR [rcx+0x10],rdx
   140005b80:	mov    QWORD PTR [rdx+0x8],rcx
   140005b84:	mov    rcx,QWORD PTR [rdx]
   140005b87:	cmp    BYTE PTR [rcx+0x49],bpl
   140005b8b:	jne    0x140005bac
   140005b8d:	mov    rax,QWORD PTR [rcx+0x10]
   140005b91:	cmp    BYTE PTR [rax+0x48],r10b
   140005b95:	jne    0x140005c33
   140005b9b:	mov    rax,QWORD PTR [rcx]
   140005b9e:	cmp    BYTE PTR [rax+0x48],r10b
   140005ba2:	jne    0x140005c33
   140005ba8:	mov    BYTE PTR [rcx+0x48],bpl
   140005bac:	mov    r8,rdx
   140005baf:	mov    rdx,QWORD PTR [rdx+0x8]
   140005bb3:	jmp    0x140005a37
   140005bb8:	mov    rax,QWORD PTR [rcx+0x8]
   140005bbc:	cmp    rcx,QWORD PTR [rax+0x10]
   140005bc0:	jne    0x140005bc8
   140005bc2:	mov    QWORD PTR [rax+0x10],r9
   140005bc6:	jmp    0x140005bcb
   140005bc8:	mov    QWORD PTR [rax],r9
   140005bcb:	mov    QWORD PTR [r9+0x10],rcx
   140005bcf:	mov    QWORD PTR [rcx+0x8],r9
   140005bd3:	mov    rcx,QWORD PTR [rdx+0x10]
   140005bd7:	mov    al,BYTE PTR [rdx+0x48]
   140005bda:	mov    BYTE PTR [rcx+0x48],al
   140005bdd:	mov    BYTE PTR [rdx+0x48],r10b
   140005be1:	mov    rax,QWORD PTR [rcx+0x10]
   140005be5:	mov    BYTE PTR [rax+0x48],r10b
   140005be9:	mov    rcx,QWORD PTR [rdx+0x10]
   140005bed:	mov    rax,QWORD PTR [rcx]
   140005bf0:	mov    QWORD PTR [rdx+0x10],rax
   140005bf4:	mov    rax,QWORD PTR [rcx]
   140005bf7:	cmp    BYTE PTR [rax+0x49],bpl
   140005bfb:	jne    0x140005c01
   140005bfd:	mov    QWORD PTR [rax+0x8],rdx
   140005c01:	mov    rax,QWORD PTR [rdx+0x8]
   140005c05:	mov    QWORD PTR [rcx+0x8],rax
   140005c09:	mov    rax,QWORD PTR [rdi+0x8]
   140005c0d:	cmp    rdx,QWORD PTR [rax+0x8]
   140005c11:	jne    0x140005c19
   140005c13:	mov    QWORD PTR [rax+0x8],rcx
   140005c17:	jmp    0x140005c2b
   140005c19:	mov    rax,QWORD PTR [rdx+0x8]
   140005c1d:	cmp    rdx,QWORD PTR [rax]
   140005c20:	jne    0x140005c27
   140005c22:	mov    QWORD PTR [rax],rcx
   140005c25:	jmp    0x140005c2b
   140005c27:	mov    QWORD PTR [rax+0x10],rcx
   140005c2b:	mov    QWORD PTR [rcx],rdx
   140005c2e:	jmp    0x140005cec
   140005c33:	mov    rax,QWORD PTR [rcx]
   140005c36:	cmp    BYTE PTR [rax+0x48],r10b
   140005c3a:	jne    0x140005c94
   140005c3c:	mov    rax,QWORD PTR [rcx+0x10]
   140005c40:	mov    BYTE PTR [rax+0x48],r10b
   140005c44:	mov    r9,QWORD PTR [rcx+0x10]
   140005c48:	mov    BYTE PTR [rcx+0x48],bpl
   140005c4c:	mov    rax,QWORD PTR [r9]
   140005c4f:	mov    QWORD PTR [rcx+0x10],rax
   140005c53:	mov    rax,QWORD PTR [r9]
   140005c56:	cmp    BYTE PTR [rax+0x49],bpl
   140005c5a:	jne    0x140005c60
   140005c5c:	mov    QWORD PTR [rax+0x8],rcx
   140005c60:	mov    rax,QWORD PTR [rcx+0x8]
   140005c64:	mov    QWORD PTR [r9+0x8],rax
   140005c68:	mov    rax,QWORD PTR [rdi+0x8]
   140005c6c:	cmp    rcx,QWORD PTR [rax+0x8]
   140005c70:	jne    0x140005c78
   140005c72:	mov    QWORD PTR [rax+0x8],r9
   140005c76:	jmp    0x140005c8a
   140005c78:	mov    rax,QWORD PTR [rcx+0x8]
   140005c7c:	cmp    rcx,QWORD PTR [rax]
   140005c7f:	jne    0x140005c86
   140005c81:	mov    QWORD PTR [rax],r9
   140005c84:	jmp    0x140005c8a
   140005c86:	mov    QWORD PTR [rax+0x10],r9
   140005c8a:	mov    QWORD PTR [r9],rcx
   140005c8d:	mov    QWORD PTR [rcx+0x8],r9
   140005c91:	mov    rcx,QWORD PTR [rdx]
   140005c94:	mov    al,BYTE PTR [rdx+0x48]
   140005c97:	mov    BYTE PTR [rcx+0x48],al
   140005c9a:	mov    BYTE PTR [rdx+0x48],r10b
   140005c9e:	mov    rax,QWORD PTR [rcx]
   140005ca1:	mov    BYTE PTR [rax+0x48],r10b
   140005ca5:	mov    rcx,QWORD PTR [rdx]
   140005ca8:	mov    rax,QWORD PTR [rcx+0x10]
   140005cac:	mov    QWORD PTR [rdx],rax
   140005caf:	mov    rax,QWORD PTR [rcx+0x10]
   140005cb3:	cmp    BYTE PTR [rax+0x49],bpl
   140005cb7:	jne    0x140005cbd
   140005cb9:	mov    QWORD PTR [rax+0x8],rdx
   140005cbd:	mov    rax,QWORD PTR [rdx+0x8]
   140005cc1:	mov    QWORD PTR [rcx+0x8],rax
   140005cc5:	mov    rax,QWORD PTR [rdi+0x8]
   140005cc9:	cmp    rdx,QWORD PTR [rax+0x8]
   140005ccd:	jne    0x140005cd5
   140005ccf:	mov    QWORD PTR [rax+0x8],rcx
   140005cd3:	jmp    0x140005ce8
   140005cd5:	mov    rax,QWORD PTR [rdx+0x8]
   140005cd9:	cmp    rdx,QWORD PTR [rax+0x10]
   140005cdd:	jne    0x140005ce5
   140005cdf:	mov    QWORD PTR [rax+0x10],rcx
   140005ce3:	jmp    0x140005ce8
   140005ce5:	mov    QWORD PTR [rax],rcx
   140005ce8:	mov    QWORD PTR [rcx+0x10],rdx
   140005cec:	mov    QWORD PTR [rdx+0x8],rcx
   140005cf0:	mov    BYTE PTR [r8+0x48],r10b
   140005cf4:	lea    rcx,[rbx+0x18]
   140005cf8:	call   0x14000638c
   140005cfd:	mov    rcx,rbx
   140005d00:	call   QWORD PTR [rip+0x43972]        # 0x140049678
   140005d06:	mov    rax,QWORD PTR [rdi+0x10]
   140005d0a:	test   rax,rax
   140005d0d:	je     0x140005d16
   140005d0f:	dec    rax
   140005d12:	mov    QWORD PTR [rdi+0x10],rax
   140005d16:	mov    rax,QWORD PTR [rsp+0x40]
   140005d1b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d20:	mov    rbp,QWORD PTR [rsp+0x38]
   140005d25:	mov    QWORD PTR [rsi],rax
   140005d28:	mov    rax,rsi
   140005d2b:	mov    rsi,QWORD PTR [rsp+0x48]
   140005d30:	add    rsp,0x20
   140005d34:	pop    rdi
   140005d35:	ret    
   140005d36:	int3   
   140005d37:	int3   
   140005d38:	mov    QWORD PTR [rsp+0x8],rbx
   140005d3d:	mov    QWORD PTR [rsp+0x10],rsi
   140005d42:	push   rdi
   140005d43:	sub    rsp,0x20
   140005d47:	cmp    BYTE PTR [rdx+0x49],0x0
   140005d4b:	mov    rbx,rdx
   140005d4e:	mov    rsi,rcx
   140005d51:	mov    rdi,rdx
   140005d54:	jne    0x140005d80
   140005d56:	mov    rdx,QWORD PTR [rdi+0x10]
   140005d5a:	mov    rcx,rsi
   140005d5d:	call   0x140005d38
   140005d62:	mov    rdi,QWORD PTR [rdi]
   140005d65:	lea    rcx,[rbx+0x18]
   140005d69:	call   0x14000638c
   140005d6e:	mov    rcx,rbx
   140005d71:	call   QWORD PTR [rip+0x43901]        # 0x140049678
   140005d77:	cmp    BYTE PTR [rdi+0x49],0x0
   140005d7b:	mov    rbx,rdi
   140005d7e:	je     0x140005d56
   140005d80:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d85:	mov    rsi,QWORD PTR [rsp+0x38]
   140005d8a:	add    rsp,0x20
   140005d8e:	pop    rdi
   140005d8f:	ret    
   140005d90:	mov    rax,rsp
   140005d93:	mov    QWORD PTR [rax+0x8],rcx
   140005d97:	push   rdi
   140005d98:	sub    rsp,0x30
   140005d9c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005da5:	mov    QWORD PTR [rax+0x18],rbx
   140005da9:	mov    QWORD PTR [rax+0x20],rsi
   140005dad:	mov    rsi,rdx
   140005db0:	mov    rbx,rcx
   140005db3:	and    DWORD PTR [rax+0x10],0x0
   140005db7:	mov    QWORD PTR [rcx+0x18],0xf
   140005dbf:	and    QWORD PTR [rcx+0x10],0x0
   140005dc4:	mov    BYTE PTR [rcx],0x0
   140005dc7:	mov    DWORD PTR [rax+0x10],0x1
   140005dce:	mov    rdx,QWORD PTR [rdx+0x10]
   140005dd2:	inc    rdx
   140005dd5:	mov    rdi,QWORD PTR [rcx+0x10]
   140005dd9:	cmp    rdi,rdx
   140005ddc:	ja     0x140005e07
   140005dde:	cmp    QWORD PTR [rcx+0x18],rdx
   140005de2:	je     0x140005e07
   140005de4:	mov    r8b,0x1
   140005de7:	call   0x140005324
   140005dec:	test   al,al
   140005dee:	je     0x140005e07
   140005df0:	mov    QWORD PTR [rbx+0x10],rdi
   140005df4:	cmp    QWORD PTR [rbx+0x18],0x10
   140005df9:	jb     0x140005e00
   140005dfb:	mov    rax,QWORD PTR [rbx]
   140005dfe:	jmp    0x140005e03
   140005e00:	mov    rax,rbx
   140005e03:	mov    BYTE PTR [rax+rdi*1],0x0
   140005e07:	or     r9,0xffffffffffffffff
   140005e0b:	xor    r8d,r8d
   140005e0e:	mov    rdx,rsi
   140005e11:	mov    rcx,rbx
   140005e14:	call   0x140005638
   140005e19:	mov    r8b,0x2f
   140005e1c:	mov    edx,0x1
   140005e21:	mov    rcx,rbx
   140005e24:	call   0x1400047bc
   140005e29:	mov    rax,rbx
   140005e2c:	mov    rbx,QWORD PTR [rsp+0x50]
   140005e31:	mov    rsi,QWORD PTR [rsp+0x58]
   140005e36:	add    rsp,0x30
   140005e3a:	pop    rdi
   140005e3b:	ret    
   140005e3c:	int3   
   140005e3d:	int3   
   140005e3e:	int3   
   140005e3f:	int3   
   140005e40:	rex push rbx
   140005e42:	sub    rsp,0x20
   140005e46:	and    DWORD PTR [rsp+0x30],0x0
   140005e4b:	mov    rax,r8
   140005e4e:	mov    r10,rdx
   140005e51:	mov    rbx,rcx
   140005e54:	or     r9,0xffffffffffffffff
   140005e58:	xor    r8d,r8d
   140005e5b:	mov    rdx,rax
   140005e5e:	mov    rcx,r10
   140005e61:	call   0x140005638
   140005e66:	and    QWORD PTR [rbx+0x10],0x0
   140005e6b:	mov    QWORD PTR [rbx+0x18],0xf
   140005e73:	mov    rdx,rax
   140005e76:	mov    rcx,rbx
   140005e79:	mov    BYTE PTR [rbx],0x0
   140005e7c:	call   0x140004730
   140005e81:	mov    rax,rbx
   140005e84:	add    rsp,0x20
   140005e88:	pop    rbx
   140005e89:	ret    
   140005e8a:	int3   
   140005e8b:	int3   
   140005e8c:	mov    QWORD PTR [rsp+0x8],rcx
   140005e91:	push   rdi
   140005e92:	push   r12
   140005e94:	push   r13
   140005e96:	sub    rsp,0x40
   140005e9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005ea3:	mov    QWORD PTR [rsp+0x68],rbx
   140005ea8:	mov    QWORD PTR [rsp+0x78],rsi
   140005ead:	mov    r13,rdx
   140005eb0:	mov    rdi,rcx
   140005eb3:	xor    ebx,ebx
   140005eb5:	mov    DWORD PTR [rsp+0x70],ebx
   140005eb9:	mov    rcx,rdx
   140005ebc:	call   QWORD PTR [rip+0x43746]        # 0x140049608
   140005ec2:	mov    r12,rax
   140005ec5:	mov    r8,QWORD PTR [rdi]
   140005ec8:	movsxd r9,DWORD PTR [r8+0x4]
   140005ecc:	mov    rsi,QWORD PTR [r9+rdi*1+0x28]
   140005ed1:	test   rsi,rsi
   140005ed4:	jle    0x140005ee0
   140005ed6:	cmp    rsi,rax
   140005ed9:	jle    0x140005ee0
   140005edb:	sub    rsi,rax
   140005ede:	jmp    0x140005ee2
   140005ee0:	xor    esi,esi
   140005ee2:	mov    rdx,rdi
   140005ee5:	lea    rcx,[rsp+0x28]
   140005eea:	call   0x140005090
   140005eef:	nop
   140005ef0:	cmp    BYTE PTR [rsp+0x30],0x0
   140005ef5:	jne    0x140005f01
   140005ef7:	mov    ebx,0x4
   140005efc:	jmp    0x140005fb2
   140005f01:	mov    rax,QWORD PTR [rdi]
   140005f04:	movsxd rcx,DWORD PTR [rax+0x4]
   140005f08:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140005f0c:	and    eax,0x1c0
   140005f11:	cmp    eax,0x40
   140005f14:	je     0x140005f48
   140005f16:	test   rsi,rsi
   140005f19:	jle    0x140005f44
   140005f1b:	mov    rax,QWORD PTR [rdi]
   140005f1e:	movsxd rcx,DWORD PTR [rax+0x4]
   140005f22:	mov    dl,BYTE PTR [rcx+rdi*1+0x58]
   140005f26:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140005f2b:	call   QWORD PTR [rip+0x4338f]        # 0x1400492c0
   140005f31:	cmp    eax,0xffffffff
   140005f34:	jne    0x140005f3f
   140005f36:	or     ebx,0x4
   140005f39:	mov    DWORD PTR [rsp+0x70],ebx
   140005f3d:	jmp    0x140005f44
   140005f3f:	dec    rsi
   140005f42:	jmp    0x140005f16
   140005f44:	test   ebx,ebx
   140005f46:	jne    0x140005f9a
   140005f48:	mov    rax,QWORD PTR [rdi]
   140005f4b:	movsxd rcx,DWORD PTR [rax+0x4]
   140005f4f:	mov    r8,r12
   140005f52:	mov    rdx,r13
   140005f55:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140005f5a:	call   QWORD PTR [rip+0x432e0]        # 0x140049240
   140005f60:	cmp    rax,r12
   140005f63:	je     0x140005f6c
   140005f65:	mov    ebx,0x4
   140005f6a:	jmp    0x140005f8f
   140005f6c:	test   rsi,rsi
   140005f6f:	jle    0x140005f9a
   140005f71:	mov    rax,QWORD PTR [rdi]
   140005f74:	movsxd rcx,DWORD PTR [rax+0x4]
   140005f78:	mov    dl,BYTE PTR [rcx+rdi*1+0x58]
   140005f7c:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140005f81:	call   QWORD PTR [rip+0x43339]        # 0x1400492c0
   140005f87:	cmp    eax,0xffffffff
   140005f8a:	jne    0x140005f95
   140005f8c:	or     ebx,0x4
   140005f8f:	mov    DWORD PTR [rsp+0x70],ebx
   140005f93:	jmp    0x140005f9a
   140005f95:	dec    rsi
   140005f98:	jmp    0x140005f6c
   140005f9a:	mov    rax,QWORD PTR [rdi]
   140005f9d:	movsxd rcx,DWORD PTR [rax+0x4]
   140005fa1:	and    QWORD PTR [rcx+rdi*1+0x28],0x0
   140005fa7:	jmp    0x140005fb2
   140005fa9:	mov    rdi,QWORD PTR [rsp+0x60]
   140005fae:	mov    ebx,DWORD PTR [rsp+0x70]
   140005fb2:	mov    rax,QWORD PTR [rdi]
   140005fb5:	movsxd rcx,DWORD PTR [rax+0x4]
   140005fb9:	add    rcx,rdi
   140005fbc:	xor    r8d,r8d
   140005fbf:	mov    edx,ebx
   140005fc1:	call   QWORD PTR [rip+0x43331]        # 0x1400492f8
   140005fc7:	nop
   140005fc8:	call   QWORD PTR [rip+0x434aa]        # 0x140049478
   140005fce:	test   al,al
   140005fd0:	jne    0x140005fde
   140005fd2:	mov    rcx,QWORD PTR [rsp+0x28]
   140005fd7:	call   QWORD PTR [rip+0x4327b]        # 0x140049258
   140005fdd:	nop
   140005fde:	mov    rdx,QWORD PTR [rsp+0x28]
   140005fe3:	mov    rax,QWORD PTR [rdx]
   140005fe6:	movsxd rcx,DWORD PTR [rax+0x4]
   140005fea:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140005fef:	test   rcx,rcx
   140005ff2:	je     0x140005ffa
   140005ff4:	mov    rax,QWORD PTR [rcx]
   140005ff7:	call   QWORD PTR [rax+0x10]
   140005ffa:	mov    rax,rdi
   140005ffd:	mov    rbx,QWORD PTR [rsp+0x68]
   140006002:	mov    rsi,QWORD PTR [rsp+0x78]
   140006007:	add    rsp,0x40
   14000600b:	pop    r13
   14000600d:	pop    r12
   14000600f:	pop    rdi
   140006010:	ret    
   140006011:	int3   
   140006012:	int3   
   140006013:	int3   
   140006014:	mov    QWORD PTR [rsp+0x8],rcx
   140006019:	push   rdi
   14000601a:	push   r12
   14000601c:	push   r13
   14000601e:	sub    rsp,0x40
   140006022:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000602b:	mov    QWORD PTR [rsp+0x70],rbx
   140006030:	mov    QWORD PTR [rsp+0x78],rsi
   140006035:	mov    r12,rdx
   140006038:	mov    rdi,rcx
   14000603b:	xor    ebx,ebx
   14000603d:	mov    DWORD PTR [rsp+0x68],ebx
   140006041:	mov    r13,QWORD PTR [rdx+0x10]
   140006045:	mov    rax,QWORD PTR [rcx]
   140006048:	movsxd r8,DWORD PTR [rax+0x4]
   14000604c:	mov    rsi,QWORD PTR [r8+rcx*1+0x28]
   140006051:	test   rsi,rsi
   140006054:	jle    0x140006060
   140006056:	cmp    rsi,r13
   140006059:	jbe    0x140006060
   14000605b:	sub    rsi,r13
   14000605e:	jmp    0x140006062
   140006060:	xor    esi,esi
   140006062:	mov    rdx,rcx
   140006065:	lea    rcx,[rsp+0x28]
   14000606a:	call   0x140005090
   14000606f:	nop
   140006070:	cmp    BYTE PTR [rsp+0x30],0x0
   140006075:	jne    0x140006081
   140006077:	mov    ebx,0x4
   14000607c:	jmp    0x14000613e
   140006081:	mov    rax,QWORD PTR [rdi]
   140006084:	movsxd rcx,DWORD PTR [rax+0x4]
   140006088:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   14000608c:	and    eax,0x1c0
   140006091:	cmp    eax,0x40
   140006094:	je     0x1400060c8
   140006096:	test   rsi,rsi
   140006099:	je     0x1400060c4
   14000609b:	mov    rax,QWORD PTR [rdi]
   14000609e:	movsxd rcx,DWORD PTR [rax+0x4]
   1400060a2:	mov    dl,BYTE PTR [rcx+rdi*1+0x58]
   1400060a6:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400060ab:	call   QWORD PTR [rip+0x4320f]        # 0x1400492c0
   1400060b1:	cmp    eax,0xffffffff
   1400060b4:	jne    0x1400060bf
   1400060b6:	or     ebx,0x4
   1400060b9:	mov    DWORD PTR [rsp+0x68],ebx
   1400060bd:	jmp    0x1400060c4
   1400060bf:	dec    rsi
   1400060c2:	jmp    0x140006096
   1400060c4:	test   ebx,ebx
   1400060c6:	jne    0x1400060f8
   1400060c8:	cmp    QWORD PTR [r12+0x18],0x10
   1400060ce:	jb     0x1400060d4
   1400060d0:	mov    r12,QWORD PTR [r12]
   1400060d4:	mov    rax,QWORD PTR [rdi]
   1400060d7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400060db:	mov    r8,r13
   1400060de:	mov    rdx,r12
   1400060e1:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400060e6:	call   QWORD PTR [rip+0x43154]        # 0x140049240
   1400060ec:	cmp    rax,r13
   1400060ef:	je     0x1400060f8
   1400060f1:	mov    ebx,0x4
   1400060f6:	jmp    0x14000611b
   1400060f8:	test   rsi,rsi
   1400060fb:	je     0x140006126
   1400060fd:	mov    rax,QWORD PTR [rdi]
   140006100:	movsxd rcx,DWORD PTR [rax+0x4]
   140006104:	mov    dl,BYTE PTR [rcx+rdi*1+0x58]
   140006108:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   14000610d:	call   QWORD PTR [rip+0x431ad]        # 0x1400492c0
   140006113:	cmp    eax,0xffffffff
   140006116:	jne    0x140006121
   140006118:	or     ebx,0x4
   14000611b:	mov    DWORD PTR [rsp+0x68],ebx
   14000611f:	jmp    0x140006126
   140006121:	dec    rsi
   140006124:	jmp    0x1400060f8
   140006126:	mov    rax,QWORD PTR [rdi]
   140006129:	movsxd rcx,DWORD PTR [rax+0x4]
   14000612d:	and    QWORD PTR [rcx+rdi*1+0x28],0x0
   140006133:	jmp    0x14000613e
   140006135:	mov    rdi,QWORD PTR [rsp+0x60]
   14000613a:	mov    ebx,DWORD PTR [rsp+0x68]
   14000613e:	mov    rax,QWORD PTR [rdi]
   140006141:	movsxd rcx,DWORD PTR [rax+0x4]
   140006145:	add    rcx,rdi
   140006148:	xor    r8d,r8d
   14000614b:	mov    edx,ebx
   14000614d:	call   QWORD PTR [rip+0x431a5]        # 0x1400492f8
   140006153:	nop
   140006154:	call   QWORD PTR [rip+0x4331e]        # 0x140049478
   14000615a:	test   al,al
   14000615c:	jne    0x14000616a
   14000615e:	mov    rcx,QWORD PTR [rsp+0x28]
   140006163:	call   QWORD PTR [rip+0x430ef]        # 0x140049258
   140006169:	nop
   14000616a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000616f:	mov    rax,QWORD PTR [rdx]
   140006172:	movsxd rcx,DWORD PTR [rax+0x4]
   140006176:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000617b:	test   rcx,rcx
   14000617e:	je     0x140006186
   140006180:	mov    rax,QWORD PTR [rcx]
   140006183:	call   QWORD PTR [rax+0x10]
   140006186:	mov    rax,rdi
   140006189:	mov    rbx,QWORD PTR [rsp+0x70]
   14000618e:	mov    rsi,QWORD PTR [rsp+0x78]
   140006193:	add    rsp,0x40
   140006197:	pop    r13
   140006199:	pop    r12
   14000619b:	pop    rdi
   14000619c:	ret    
   14000619d:	int3   
   14000619e:	int3   
   14000619f:	int3   
   1400061a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400061a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400061aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400061af:	push   rdi
   1400061b0:	sub    rsp,0x20
   1400061b4:	and    DWORD PTR [rsp+0x30],0x0
   1400061b9:	mov    rdi,rcx
   1400061bc:	lea    rbp,[rip+0x4a739]        # 0x1400508fc
   1400061c3:	mov    rcx,rbp
   1400061c6:	call   QWORD PTR [rip+0x4343c]        # 0x140049608
   1400061cc:	and    QWORD PTR [rdi],0x0
   1400061d0:	lea    rsi,[rbp+rax*1+0x0]
   1400061d5:	sub    rsi,rbp
   1400061d8:	mov    QWORD PTR [rdi+0x10],rsi
   1400061dc:	cmp    rsi,0x10
   1400061e0:	ja     0x1400061e7
   1400061e2:	mov    rbx,rdi
   1400061e5:	jmp    0x1400061f5
   1400061e7:	mov    rcx,rsi
   1400061ea:	call   0x14002b058
   1400061ef:	mov    rbx,rax
   1400061f2:	mov    QWORD PTR [rdi],rax
   1400061f5:	mov    r8,rsi
   1400061f8:	mov    rdx,rbp
   1400061fb:	mov    rcx,rbx
   1400061fe:	call   QWORD PTR [rip+0x433ec]        # 0x1400495f0
   140006204:	mov    r11,QWORD PTR [rdi+0x10]
   140006208:	mov    rcx,rbx
   14000620b:	lea    rdx,[rbx+r11*1]
   14000620f:	mov    r8,rdx
   140006212:	sub    r8,rbx
   140006215:	call   0x140007dc0
   14000621a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000621f:	mov    rbp,QWORD PTR [rsp+0x40]
   140006224:	mov    rsi,QWORD PTR [rsp+0x48]
   140006229:	mov    rax,rdi
   14000622c:	add    rsp,0x20
   140006230:	pop    rdi
   140006231:	ret    
   140006232:	int3   
   140006233:	int3   
   140006234:	rex push rbx
   140006236:	sub    rsp,0x20
   14000623a:	cmp    QWORD PTR [rdx+0x40],0x10
   14000623f:	mov    rbx,rdx
   140006242:	jb     0x14000624e
   140006244:	mov    rcx,QWORD PTR [rdx+0x28]
   140006248:	call   QWORD PTR [rip+0x4342a]        # 0x140049678
   14000624e:	and    QWORD PTR [rbx+0x38],0x0
   140006253:	mov    QWORD PTR [rbx+0x40],0xf
   14000625b:	mov    BYTE PTR [rbx+0x28],0x0
   14000625f:	cmp    QWORD PTR [rbx+0x18],0x10
   140006264:	jb     0x14000626f
   140006266:	mov    rcx,QWORD PTR [rbx]
   140006269:	call   QWORD PTR [rip+0x43409]        # 0x140049678
   14000626f:	and    QWORD PTR [rbx+0x10],0x0
   140006274:	mov    QWORD PTR [rbx+0x18],0xf
   14000627c:	mov    BYTE PTR [rbx],0x0
   14000627f:	add    rsp,0x20
   140006283:	pop    rbx
   140006284:	ret    
   140006285:	int3   
   140006286:	int3   
   140006287:	int3   
   140006288:	rex push rdi
   14000628a:	sub    rsp,0x40
   14000628e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006297:	mov    QWORD PTR [rsp+0x60],rbx
   14000629c:	mov    QWORD PTR [rsp+0x68],rsi
   1400062a1:	mov    rsi,rcx
   1400062a4:	xor    edx,edx
   1400062a6:	lea    rcx,[rsp+0x50]
   1400062ab:	call   QWORD PTR [rip+0x432ef]        # 0x1400495a0
   1400062b1:	nop
   1400062b2:	mov    rax,QWORD PTR [rip+0x64507]        # 0x14006a7c0
   1400062b9:	mov    QWORD PTR [rsp+0x58],rax
   1400062be:	mov    rcx,QWORD PTR [rip+0x42f6b]        # 0x140049230
   1400062c5:	call   QWORD PTR [rip+0x43085]        # 0x140049350
   1400062cb:	mov    rdi,rax
   1400062ce:	mov    rax,QWORD PTR [rsi]
   1400062d1:	cmp    rdi,QWORD PTR [rax+0x18]
   1400062d5:	jae    0x1400062e1
   1400062d7:	mov    rcx,QWORD PTR [rax+0x10]
   1400062db:	mov    rbx,QWORD PTR [rcx+rdi*8]
   1400062df:	jmp    0x1400062e3
   1400062e1:	xor    ebx,ebx
   1400062e3:	test   rbx,rbx
   1400062e6:	jne    0x14000636e
   1400062ec:	cmp    BYTE PTR [rax+0x24],bl
   1400062ef:	je     0x140006309
   1400062f1:	call   QWORD PTR [rip+0x43031]        # 0x140049328
   1400062f7:	cmp    rdi,QWORD PTR [rax+0x18]
   1400062fb:	jae    0x140006307
   1400062fd:	mov    rax,QWORD PTR [rax+0x10]
   140006301:	mov    rbx,QWORD PTR [rax+rdi*8]
   140006305:	jmp    0x140006309
   140006307:	xor    ebx,ebx
   140006309:	test   rbx,rbx
   14000630c:	jne    0x14000636e
   14000630e:	mov    rbx,QWORD PTR [rsp+0x58]
   140006313:	test   rbx,rbx
   140006316:	jne    0x14000636e
   140006318:	mov    rdx,rsi
   14000631b:	lea    rcx,[rsp+0x58]
   140006320:	call   QWORD PTR [rip+0x42f22]        # 0x140049248
   140006326:	cmp    rax,0xffffffffffffffff
   14000632a:	jne    0x140006350
   14000632c:	lea    rdx,[rip+0x4a63d]        # 0x140050970
   140006333:	lea    rcx,[rsp+0x28]
   140006338:	call   QWORD PTR [rip+0x43572]        # 0x1400498b0
   14000633e:	lea    rdx,[rip+0x5d3a3]        # 0x1400636e8
   140006345:	lea    rcx,[rsp+0x28]
   14000634a:	call   0x14002b560
   14000634f:	int3   
   140006350:	mov    rbx,QWORD PTR [rsp+0x58]
   140006355:	mov    QWORD PTR [rip+0x64464],rbx        # 0x14006a7c0
   14000635c:	mov    rcx,rbx
   14000635f:	call   QWORD PTR [rip+0x42fe3]        # 0x140049348
   140006365:	mov    rcx,rbx
   140006368:	call   0x14002afb8
   14000636d:	nop
   14000636e:	lea    rcx,[rsp+0x50]
   140006373:	call   QWORD PTR [rip+0x4322f]        # 0x1400495a8
   140006379:	mov    rax,rbx
   14000637c:	mov    rbx,QWORD PTR [rsp+0x60]
   140006381:	mov    rsi,QWORD PTR [rsp+0x68]
   140006386:	add    rsp,0x40
   14000638a:	pop    rdi
   14000638b:	ret    
   14000638c:	rex push rbx
   14000638e:	sub    rsp,0x20
   140006392:	cmp    QWORD PTR [rcx+0x18],0x10
   140006397:	mov    rbx,rcx
   14000639a:	jb     0x1400063a5
   14000639c:	mov    rcx,QWORD PTR [rcx]
   14000639f:	call   QWORD PTR [rip+0x432d3]        # 0x140049678
   1400063a5:	and    QWORD PTR [rbx+0x10],0x0
   1400063aa:	mov    QWORD PTR [rbx+0x18],0xf
   1400063b2:	mov    BYTE PTR [rbx],0x0
   1400063b5:	add    rsp,0x20
   1400063b9:	pop    rbx
   1400063ba:	ret    
   1400063bb:	int3   
   1400063bc:	rex push rbx
   1400063be:	sub    rsp,0x20
   1400063c2:	mov    rbx,rcx
   1400063c5:	call   QWORD PTR [rip+0x43215]        # 0x1400495e0
   1400063cb:	lea    r11,[rip+0x43e06]        # 0x14004a1d8
   1400063d2:	mov    QWORD PTR [rbx],r11
   1400063d5:	mov    rax,rbx
   1400063d8:	add    rsp,0x20
   1400063dc:	pop    rbx
   1400063dd:	ret    
   1400063de:	int3   
   1400063df:	int3   
   1400063e0:	mov    rax,rsp
   1400063e3:	mov    QWORD PTR [rax+0x8],rbx
   1400063e7:	mov    QWORD PTR [rax+0x10],rbp
   1400063eb:	mov    QWORD PTR [rax+0x20],rsi
   1400063ef:	mov    QWORD PTR [rax+0x18],r8
   1400063f3:	push   rdi
   1400063f4:	push   r12
   1400063f6:	push   r13
   1400063f8:	sub    rsp,0x40
   1400063fc:	xor    r13d,r13d
   1400063ff:	mov    rbp,r9
   140006402:	mov    rsi,rdx
   140006405:	mov    rdi,rcx
   140006408:	cmp    QWORD PTR [rcx+0x10],r13
   14000640c:	jne    0x140006423
   14000640e:	mov    QWORD PTR [rax-0x38],r9
   140006412:	mov    r9,QWORD PTR [rcx+0x8]
   140006416:	mov    r8b,0x1
   140006419:	call   0x14000671c
   14000641e:	jmp    0x1400065db
   140006423:	mov    rdx,QWORD PTR [rcx+0x8]
   140006427:	cmp    r8,QWORD PTR [rdx]
   14000642a:	jne    0x140006456
   14000642c:	lea    rdx,[r9+0x18]
   140006430:	add    r8,0x18
   140006434:	call   0x140004c0c
   140006439:	test   al,al
   14000643b:	je     0x1400065c5
   140006441:	mov    r9,QWORD PTR [rsp+0x70]
   140006446:	mov    r8b,0x1
   140006449:	mov    QWORD PTR [rsp+0x20],rbp
   14000644e:	mov    rdx,rsi
   140006451:	mov    rcx,rdi
   140006454:	jmp    0x140006419
   140006456:	cmp    r8,rdx
   140006459:	jne    0x140006481
   14000645b:	mov    rdx,QWORD PTR [rdx+0x10]
   14000645f:	lea    r8,[r9+0x18]
   140006463:	add    rdx,0x18
   140006467:	call   0x140004c0c
   14000646c:	test   al,al
   14000646e:	je     0x1400065c5
   140006474:	mov    r9,QWORD PTR [rdi+0x8]
   140006478:	xor    r8d,r8d
   14000647b:	mov    r9,QWORD PTR [r9+0x10]
   14000647f:	jmp    0x140006449
   140006481:	lea    rdx,[r9+0x18]
   140006485:	add    r8,0x18
   140006489:	call   0x140004c0c
   14000648e:	test   al,al
   140006490:	je     0x140006526
   140006496:	mov    rax,QWORD PTR [rsp+0x70]
   14000649b:	cmp    BYTE PTR [rax+0x69],r13b
   14000649f:	je     0x1400064a7
   1400064a1:	mov    rbx,QWORD PTR [rax+0x10]
   1400064a5:	jmp    0x1400064e8
   1400064a7:	mov    rbx,QWORD PTR [rax]
   1400064aa:	cmp    BYTE PTR [rbx+0x69],r13b
   1400064ae:	jne    0x1400064c5
   1400064b0:	mov    rax,QWORD PTR [rbx+0x10]
   1400064b4:	jmp    0x1400064bd
   1400064b6:	mov    rbx,rax
   1400064b9:	mov    rax,QWORD PTR [rax+0x10]
   1400064bd:	cmp    BYTE PTR [rax+0x69],r13b
   1400064c1:	je     0x1400064b6
   1400064c3:	jmp    0x1400064e8
   1400064c5:	mov    rcx,QWORD PTR [rax+0x8]
   1400064c9:	jmp    0x1400064d7
   1400064cb:	cmp    rax,QWORD PTR [rcx]
   1400064ce:	jne    0x1400064dd
   1400064d0:	mov    rax,rcx
   1400064d3:	mov    rcx,QWORD PTR [rcx+0x8]
   1400064d7:	cmp    BYTE PTR [rcx+0x69],r13b
   1400064db:	je     0x1400064cb
   1400064dd:	cmp    BYTE PTR [rax+0x69],r13b
   1400064e1:	mov    rbx,rax
   1400064e4:	cmove  rbx,rcx
   1400064e8:	lea    rdx,[rbx+0x18]
   1400064ec:	lea    r8,[rbp+0x18]
   1400064f0:	mov    rcx,rdi
   1400064f3:	call   0x140004c0c
   1400064f8:	test   al,al
   1400064fa:	je     0x140006526
   1400064fc:	mov    rax,QWORD PTR [rbx+0x10]
   140006500:	mov    QWORD PTR [rsp+0x20],rbp
   140006505:	mov    rdx,rsi
   140006508:	mov    rcx,rdi
   14000650b:	cmp    BYTE PTR [rax+0x69],r13b
   14000650f:	je     0x14000651c
   140006511:	mov    r9,rbx
   140006514:	xor    r8d,r8d
   140006517:	jmp    0x140006419
   14000651c:	mov    r9,QWORD PTR [rsp+0x70]
   140006521:	jmp    0x140006416
   140006526:	mov    rdx,QWORD PTR [rsp+0x70]
   14000652b:	lea    r8,[rbp+0x18]
   14000652f:	mov    rcx,rdi
   140006532:	add    rdx,0x18
   140006536:	call   0x140004c0c
   14000653b:	test   al,al
   14000653d:	je     0x1400065c5
   140006543:	mov    r9,QWORD PTR [rsp+0x70]
   140006548:	mov    rbx,r9
   14000654b:	cmp    BYTE PTR [r9+0x69],r13b
   14000654f:	jne    0x140006585
   140006551:	mov    rax,QWORD PTR [r9+0x10]
   140006555:	cmp    BYTE PTR [rax+0x69],r13b
   140006559:	jne    0x140006569
   14000655b:	mov    rbx,rax
   14000655e:	mov    rax,QWORD PTR [rax]
   140006561:	cmp    BYTE PTR [rax+0x69],r13b
   140006565:	je     0x14000655b
   140006567:	jmp    0x140006585
   140006569:	mov    rax,QWORD PTR [r9+0x8]
   14000656d:	jmp    0x14000657c
   14000656f:	cmp    rbx,QWORD PTR [rax+0x10]
   140006573:	jne    0x140006582
   140006575:	mov    rbx,rax
   140006578:	mov    rax,QWORD PTR [rax+0x8]
   14000657c:	cmp    BYTE PTR [rax+0x69],r13b
   140006580:	je     0x14000656f
   140006582:	mov    rbx,rax
   140006585:	cmp    rbx,QWORD PTR [rdi+0x8]
   140006589:	je     0x1400065a4
   14000658b:	lea    r8,[rbx+0x18]
   14000658f:	lea    rdx,[rbp+0x18]
   140006593:	mov    rcx,rdi
   140006596:	call   0x140004c0c
   14000659b:	test   al,al
   14000659d:	je     0x1400065c5
   14000659f:	mov    r9,QWORD PTR [rsp+0x70]
   1400065a4:	mov    rax,QWORD PTR [r9+0x10]
   1400065a8:	mov    QWORD PTR [rsp+0x20],rbp
   1400065ad:	mov    rdx,rsi
   1400065b0:	mov    rcx,rdi
   1400065b3:	cmp    BYTE PTR [rax+0x69],r13b
   1400065b7:	jne    0x140006514
   1400065bd:	mov    r9,rbx
   1400065c0:	jmp    0x140006416
   1400065c5:	lea    rdx,[rsp+0x30]
   1400065ca:	mov    r8,rbp
   1400065cd:	mov    rcx,rdi
   1400065d0:	call   0x1400065f8
   1400065d5:	mov    rcx,QWORD PTR [rax]
   1400065d8:	mov    QWORD PTR [rsi],rcx
   1400065db:	mov    rbx,QWORD PTR [rsp+0x60]
   1400065e0:	mov    rbp,QWORD PTR [rsp+0x68]
   1400065e5:	mov    rax,rsi
   1400065e8:	mov    rsi,QWORD PTR [rsp+0x78]
   1400065ed:	add    rsp,0x40
   1400065f1:	pop    r13
   1400065f3:	pop    r12
   1400065f5:	pop    rdi
   1400065f6:	ret    
   1400065f7:	int3   
   1400065f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400065fd:	mov    QWORD PTR [rsp+0x18],rbp
   140006602:	push   rsi
   140006603:	push   rdi
   140006604:	push   r12
   140006606:	push   r13
   140006608:	push   r14
   14000660a:	sub    rsp,0x30
   14000660e:	mov    rdi,QWORD PTR [rcx+0x8]
   140006612:	mov    r12,r8
   140006615:	mov    rsi,rdx
   140006618:	mov    rbx,QWORD PTR [rdi+0x8]
   14000661c:	mov    rbp,rcx
   14000661f:	mov    r13b,0x1
   140006622:	jmp    0x140006648
   140006624:	lea    r8,[rbx+0x18]
   140006628:	lea    rdx,[r12+0x18]
   14000662d:	mov    rcx,rbp
   140006630:	mov    rdi,rbx
   140006633:	call   0x140004c0c
   140006638:	mov    r13b,al
   14000663b:	test   al,al
   14000663d:	je     0x140006644
   14000663f:	mov    rbx,QWORD PTR [rbx]
   140006642:	jmp    0x140006648
   140006644:	mov    rbx,QWORD PTR [rbx+0x10]
   140006648:	cmp    BYTE PTR [rbx+0x69],0x0
   14000664c:	je     0x140006624
   14000664e:	mov    rbx,rdi
   140006651:	test   r13b,r13b
   140006654:	je     0x1400066c7
   140006656:	mov    rax,QWORD PTR [rbp+0x8]
   14000665a:	cmp    rdi,QWORD PTR [rax]
   14000665d:	jne    0x140006683
   14000665f:	mov    r8b,0x1
   140006662:	lea    rdx,[rsp+0x60]
   140006667:	mov    r9,rdi
   14000666a:	mov    rcx,rbp
   14000666d:	mov    QWORD PTR [rsp+0x20],r12
   140006672:	call   0x14000671c
   140006677:	mov    BYTE PTR [rsi+0x8],0x1
   14000667b:	mov    rcx,QWORD PTR [rax]
   14000667e:	mov    QWORD PTR [rsi],rcx
   140006681:	jmp    0x1400066ff
   140006683:	cmp    BYTE PTR [rdi+0x69],0x0
   140006687:	je     0x14000668f
   140006689:	mov    rbx,QWORD PTR [rdi+0x10]
   14000668d:	jmp    0x1400066c7
   14000668f:	mov    rax,QWORD PTR [rdi]
   140006692:	cmp    BYTE PTR [rax+0x69],0x0
   140006696:	jne    0x1400066a7
   140006698:	mov    rbx,rax
   14000669b:	mov    rax,QWORD PTR [rax+0x10]
   14000669f:	cmp    BYTE PTR [rax+0x69],0x0
   1400066a3:	je     0x140006698
   1400066a5:	jmp    0x1400066c7
   1400066a7:	mov    rax,QWORD PTR [rdi+0x8]
   1400066ab:	jmp    0x1400066b9
   1400066ad:	cmp    rbx,QWORD PTR [rax]
   1400066b0:	jne    0x1400066bf
   1400066b2:	mov    rbx,rax
   1400066b5:	mov    rax,QWORD PTR [rax+0x8]
   1400066b9:	cmp    BYTE PTR [rax+0x69],0x0
   1400066bd:	je     0x1400066ad
   1400066bf:	cmp    BYTE PTR [rbx+0x69],0x0
   1400066c3:	cmove  rbx,rax
   1400066c7:	lea    rdx,[rbx+0x18]
   1400066cb:	lea    r8,[r12+0x18]
   1400066d0:	mov    rcx,rbp
   1400066d3:	call   0x140004c0c
   1400066d8:	test   al,al
   1400066da:	je     0x1400066e1
   1400066dc:	mov    r8b,r13b
   1400066df:	jmp    0x140006662
   1400066e1:	lea    rcx,[rbp+0x19]
   1400066e5:	lea    rdx,[r12+0x18]
   1400066ea:	call   0x140006234
   1400066ef:	mov    rcx,r12
   1400066f2:	call   QWORD PTR [rip+0x42f80]        # 0x140049678
   1400066f8:	mov    QWORD PTR [rsi],rbx
   1400066fb:	mov    BYTE PTR [rsi+0x8],0x0
   1400066ff:	mov    rbx,QWORD PTR [rsp+0x68]
   140006704:	mov    rbp,QWORD PTR [rsp+0x70]
   140006709:	mov    rax,rsi
   14000670c:	add    rsp,0x30
   140006710:	pop    r14
   140006712:	pop    r13
   140006714:	pop    r12
   140006716:	pop    rdi
   140006717:	pop    rsi
   140006718:	ret    
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	mov    QWORD PTR [rsp+0x8],rbx
   140006721:	push   rdi
   140006722:	sub    rsp,0x20
   140006726:	mov    rax,QWORD PTR [rcx+0x10]
   14000672a:	mov    r10,rcx
   14000672d:	movabs rcx,0x333333333333332
   140006737:	mov    r11b,r8b
   14000673a:	mov    rbx,rdx
   14000673d:	cmp    rax,rcx
   140006740:	jb     0x14000676b
   140006742:	mov    rbx,QWORD PTR [rsp+0x50]
   140006747:	lea    rcx,[r10+0x19]
   14000674b:	lea    rdx,[rbx+0x18]
   14000674f:	call   0x140006234
   140006754:	mov    rcx,rbx
   140006757:	call   QWORD PTR [rip+0x42f1b]        # 0x140049678
   14000675d:	lea    rcx,[rip+0x4a21c]        # 0x140050980
   140006764:	call   QWORD PTR [rip+0x42e2e]        # 0x140049598
   14000676a:	int3   
   14000676b:	mov    r8,QWORD PTR [rsp+0x50]
   140006770:	inc    rax
   140006773:	xor    edi,edi
   140006775:	mov    QWORD PTR [r10+0x10],rax
   140006779:	mov    QWORD PTR [r8+0x8],r9
   14000677d:	mov    rax,QWORD PTR [r10+0x8]
   140006781:	cmp    r9,rax
   140006784:	jne    0x140006797
   140006786:	mov    QWORD PTR [rax+0x8],r8
   14000678a:	mov    rax,QWORD PTR [r10+0x8]
   14000678e:	mov    QWORD PTR [rax],r8
   140006791:	mov    rax,QWORD PTR [r10+0x8]
   140006795:	jmp    0x1400067bb
   140006797:	test   r11b,r11b
   14000679a:	je     0x1400067ad
   14000679c:	mov    QWORD PTR [r9],r8
   14000679f:	mov    rax,QWORD PTR [r10+0x8]
   1400067a3:	cmp    r9,QWORD PTR [rax]
   1400067a6:	jne    0x1400067bf
   1400067a8:	mov    QWORD PTR [rax],r8
   1400067ab:	jmp    0x1400067bf
   1400067ad:	mov    QWORD PTR [r9+0x10],r8
   1400067b1:	mov    rax,QWORD PTR [r10+0x8]
   1400067b5:	cmp    r9,QWORD PTR [rax+0x10]
   1400067b9:	jne    0x1400067bf
   1400067bb:	mov    QWORD PTR [rax+0x10],r8
   1400067bf:	mov    rax,QWORD PTR [r8+0x8]
   1400067c3:	mov    rdx,r8
   1400067c6:	jmp    0x14000698b
   1400067cb:	mov    rax,QWORD PTR [rdx+0x8]
   1400067cf:	mov    rcx,QWORD PTR [rax+0x8]
   1400067d3:	cmp    rax,QWORD PTR [rcx]
   1400067d6:	jne    0x1400068a4
   1400067dc:	mov    r9,QWORD PTR [rcx+0x10]
   1400067e0:	cmp    BYTE PTR [r9+0x68],dil
   1400067e4:	je     0x1400068ad
   1400067ea:	cmp    rdx,QWORD PTR [rax+0x10]
   1400067ee:	jne    0x14000683c
   1400067f0:	mov    rcx,QWORD PTR [rax+0x10]
   1400067f4:	mov    rdx,rax
   1400067f7:	mov    rax,QWORD PTR [rcx]
   1400067fa:	mov    QWORD PTR [rdx+0x10],rax
   1400067fe:	mov    rax,QWORD PTR [rcx]
   140006801:	cmp    BYTE PTR [rax+0x69],dil
   140006805:	jne    0x14000680b
   140006807:	mov    QWORD PTR [rax+0x8],rdx
   14000680b:	mov    rax,QWORD PTR [rdx+0x8]
   14000680f:	mov    QWORD PTR [rcx+0x8],rax
   140006813:	mov    rax,QWORD PTR [r10+0x8]
   140006817:	cmp    rdx,QWORD PTR [rax+0x8]
   14000681b:	jne    0x140006823
   14000681d:	mov    QWORD PTR [rax+0x8],rcx
   140006821:	jmp    0x140006835
   140006823:	mov    rax,QWORD PTR [rdx+0x8]
   140006827:	cmp    rdx,QWORD PTR [rax]
   14000682a:	jne    0x140006831
   14000682c:	mov    QWORD PTR [rax],rcx
   14000682f:	jmp    0x140006835
   140006831:	mov    QWORD PTR [rax+0x10],rcx
   140006835:	mov    QWORD PTR [rcx],rdx
   140006838:	mov    QWORD PTR [rdx+0x8],rcx
   14000683c:	mov    rax,QWORD PTR [rdx+0x8]
   140006840:	mov    BYTE PTR [rax+0x68],0x1
   140006844:	mov    rax,QWORD PTR [rdx+0x8]
   140006848:	mov    rcx,QWORD PTR [rax+0x8]
   14000684c:	mov    BYTE PTR [rcx+0x68],dil
   140006850:	mov    rax,QWORD PTR [rdx+0x8]
   140006854:	mov    rcx,QWORD PTR [rax+0x8]
   140006858:	mov    r9,QWORD PTR [rcx]
   14000685b:	mov    rax,QWORD PTR [r9+0x10]
   14000685f:	mov    QWORD PTR [rcx],rax
   140006862:	mov    rax,QWORD PTR [r9+0x10]
   140006866:	cmp    BYTE PTR [rax+0x69],dil
   14000686a:	jne    0x140006870
   14000686c:	mov    QWORD PTR [rax+0x8],rcx
   140006870:	mov    rax,QWORD PTR [rcx+0x8]
   140006874:	mov    QWORD PTR [r9+0x8],rax
   140006878:	mov    rax,QWORD PTR [r10+0x8]
   14000687c:	cmp    rcx,QWORD PTR [rax+0x8]
   140006880:	jne    0x140006888
   140006882:	mov    QWORD PTR [rax+0x8],r9
   140006886:	jmp    0x14000689b
   140006888:	mov    rax,QWORD PTR [rcx+0x8]
   14000688c:	cmp    rcx,QWORD PTR [rax+0x10]
   140006890:	jne    0x140006898
   140006892:	mov    QWORD PTR [rax+0x10],r9
   140006896:	jmp    0x14000689b
   140006898:	mov    QWORD PTR [rax],r9
   14000689b:	mov    QWORD PTR [r9+0x10],rcx
   14000689f:	jmp    0x140006983
   1400068a4:	mov    r9,QWORD PTR [rcx]
   1400068a7:	cmp    BYTE PTR [r9+0x68],dil
   1400068ab:	jne    0x1400068cf
   1400068ad:	mov    BYTE PTR [rax+0x68],0x1
   1400068b1:	mov    BYTE PTR [r9+0x68],0x1
   1400068b6:	mov    rax,QWORD PTR [rdx+0x8]
   1400068ba:	mov    rcx,QWORD PTR [rax+0x8]
   1400068be:	mov    BYTE PTR [rcx+0x68],dil
   1400068c2:	mov    rax,QWORD PTR [rdx+0x8]
   1400068c6:	mov    rdx,QWORD PTR [rax+0x8]
   1400068ca:	jmp    0x140006987
   1400068cf:	cmp    rdx,QWORD PTR [rax]
   1400068d2:	jne    0x140006922
   1400068d4:	mov    rcx,QWORD PTR [rax]
   1400068d7:	mov    rdx,rax
   1400068da:	mov    rax,QWORD PTR [rcx+0x10]
   1400068de:	mov    QWORD PTR [rdx],rax
   1400068e1:	mov    rax,QWORD PTR [rcx+0x10]
   1400068e5:	cmp    BYTE PTR [rax+0x69],dil
   1400068e9:	jne    0x1400068ef
   1400068eb:	mov    QWORD PTR [rax+0x8],rdx
   1400068ef:	mov    rax,QWORD PTR [rdx+0x8]
   1400068f3:	mov    QWORD PTR [rcx+0x8],rax
   1400068f7:	mov    rax,QWORD PTR [r10+0x8]
   1400068fb:	cmp    rdx,QWORD PTR [rax+0x8]
   1400068ff:	jne    0x140006907
   140006901:	mov    QWORD PTR [rax+0x8],rcx
   140006905:	jmp    0x14000691a
   140006907:	mov    rax,QWORD PTR [rdx+0x8]
   14000690b:	cmp    rdx,QWORD PTR [rax+0x10]
   14000690f:	jne    0x140006917
   140006911:	mov    QWORD PTR [rax+0x10],rcx
   140006915:	jmp    0x14000691a
   140006917:	mov    QWORD PTR [rax],rcx
   14000691a:	mov    QWORD PTR [rcx+0x10],rdx
   14000691e:	mov    QWORD PTR [rdx+0x8],rcx
   140006922:	mov    rax,QWORD PTR [rdx+0x8]
   140006926:	mov    BYTE PTR [rax+0x68],0x1
   14000692a:	mov    rax,QWORD PTR [rdx+0x8]
   14000692e:	mov    rcx,QWORD PTR [rax+0x8]
   140006932:	mov    BYTE PTR [rcx+0x68],dil
   140006936:	mov    rax,QWORD PTR [rdx+0x8]
   14000693a:	mov    rcx,QWORD PTR [rax+0x8]
   14000693e:	mov    r9,QWORD PTR [rcx+0x10]
   140006942:	mov    rax,QWORD PTR [r9]
   140006945:	mov    QWORD PTR [rcx+0x10],rax
   140006949:	mov    rax,QWORD PTR [r9]
   14000694c:	cmp    BYTE PTR [rax+0x69],dil
   140006950:	jne    0x140006956
   140006952:	mov    QWORD PTR [rax+0x8],rcx
   140006956:	mov    rax,QWORD PTR [rcx+0x8]
   14000695a:	mov    QWORD PTR [r9+0x8],rax
   14000695e:	mov    rax,QWORD PTR [r10+0x8]
   140006962:	cmp    rcx,QWORD PTR [rax+0x8]
   140006966:	jne    0x14000696e
   140006968:	mov    QWORD PTR [rax+0x8],r9
   14000696c:	jmp    0x140006980
   14000696e:	mov    rax,QWORD PTR [rcx+0x8]
   140006972:	cmp    rcx,QWORD PTR [rax]
   140006975:	jne    0x14000697c
   140006977:	mov    QWORD PTR [rax],r9
   14000697a:	jmp    0x140006980
   14000697c:	mov    QWORD PTR [rax+0x10],r9
   140006980:	mov    QWORD PTR [r9],rcx
   140006983:	mov    QWORD PTR [rcx+0x8],r9
   140006987:	mov    rax,QWORD PTR [rdx+0x8]
   14000698b:	cmp    BYTE PTR [rax+0x68],dil
   14000698f:	je     0x1400067cb
   140006995:	mov    rax,QWORD PTR [r10+0x8]
   140006999:	mov    QWORD PTR [rbx],r8
   14000699c:	mov    rcx,QWORD PTR [rax+0x8]
   1400069a0:	mov    rax,rbx
   1400069a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069a8:	mov    BYTE PTR [rcx+0x68],0x1
   1400069ac:	add    rsp,0x20
   1400069b0:	pop    rdi
   1400069b1:	ret    
   1400069b2:	int3   
   1400069b3:	int3   
   1400069b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400069b9:	push   rdi
   1400069ba:	sub    rsp,0x20
   1400069be:	mov    rax,QWORD PTR [rcx+0x10]
   1400069c2:	mov    r10,rcx
   1400069c5:	movabs rcx,0x555555555555554
   1400069cf:	mov    r11b,r8b
   1400069d2:	mov    rbx,rdx
   1400069d5:	cmp    rax,rcx
   1400069d8:	jb     0x1400069ff
   1400069da:	mov    rbx,QWORD PTR [rsp+0x50]
   1400069df:	lea    rcx,[rbx+0x18]
   1400069e3:	call   0x14000638c
   1400069e8:	mov    rcx,rbx
   1400069eb:	call   QWORD PTR [rip+0x42c87]        # 0x140049678
   1400069f1:	lea    rcx,[rip+0x49f88]        # 0x140050980
   1400069f8:	call   QWORD PTR [rip+0x42b9a]        # 0x140049598
   1400069fe:	int3   
   1400069ff:	mov    r8,QWORD PTR [rsp+0x50]
   140006a04:	inc    rax
   140006a07:	xor    edi,edi
   140006a09:	mov    QWORD PTR [r10+0x10],rax
   140006a0d:	mov    QWORD PTR [r8+0x8],r9
   140006a11:	mov    rax,QWORD PTR [r10+0x8]
   140006a15:	cmp    r9,rax
   140006a18:	jne    0x140006a2b
   140006a1a:	mov    QWORD PTR [rax+0x8],r8
   140006a1e:	mov    rax,QWORD PTR [r10+0x8]
   140006a22:	mov    QWORD PTR [rax],r8
   140006a25:	mov    rax,QWORD PTR [r10+0x8]
   140006a29:	jmp    0x140006a4f
   140006a2b:	test   r11b,r11b
   140006a2e:	je     0x140006a41
   140006a30:	mov    QWORD PTR [r9],r8
   140006a33:	mov    rax,QWORD PTR [r10+0x8]
   140006a37:	cmp    r9,QWORD PTR [rax]
   140006a3a:	jne    0x140006a53
   140006a3c:	mov    QWORD PTR [rax],r8
   140006a3f:	jmp    0x140006a53
   140006a41:	mov    QWORD PTR [r9+0x10],r8
   140006a45:	mov    rax,QWORD PTR [r10+0x8]
   140006a49:	cmp    r9,QWORD PTR [rax+0x10]
   140006a4d:	jne    0x140006a53
   140006a4f:	mov    QWORD PTR [rax+0x10],r8
   140006a53:	mov    rax,QWORD PTR [r8+0x8]
   140006a57:	mov    rdx,r8
   140006a5a:	jmp    0x140006c1f
   140006a5f:	mov    rax,QWORD PTR [rdx+0x8]
   140006a63:	mov    rcx,QWORD PTR [rax+0x8]
   140006a67:	cmp    rax,QWORD PTR [rcx]
   140006a6a:	jne    0x140006b38
   140006a70:	mov    r9,QWORD PTR [rcx+0x10]
   140006a74:	cmp    BYTE PTR [r9+0x48],dil
   140006a78:	je     0x140006b41
   140006a7e:	cmp    rdx,QWORD PTR [rax+0x10]
   140006a82:	jne    0x140006ad0
   140006a84:	mov    rcx,QWORD PTR [rax+0x10]
   140006a88:	mov    rdx,rax
   140006a8b:	mov    rax,QWORD PTR [rcx]
   140006a8e:	mov    QWORD PTR [rdx+0x10],rax
   140006a92:	mov    rax,QWORD PTR [rcx]
   140006a95:	cmp    BYTE PTR [rax+0x49],dil
   140006a99:	jne    0x140006a9f
   140006a9b:	mov    QWORD PTR [rax+0x8],rdx
   140006a9f:	mov    rax,QWORD PTR [rdx+0x8]
   140006aa3:	mov    QWORD PTR [rcx+0x8],rax
   140006aa7:	mov    rax,QWORD PTR [r10+0x8]
   140006aab:	cmp    rdx,QWORD PTR [rax+0x8]
   140006aaf:	jne    0x140006ab7
   140006ab1:	mov    QWORD PTR [rax+0x8],rcx
   140006ab5:	jmp    0x140006ac9
   140006ab7:	mov    rax,QWORD PTR [rdx+0x8]
   140006abb:	cmp    rdx,QWORD PTR [rax]
   140006abe:	jne    0x140006ac5
   140006ac0:	mov    QWORD PTR [rax],rcx
   140006ac3:	jmp    0x140006ac9
   140006ac5:	mov    QWORD PTR [rax+0x10],rcx
   140006ac9:	mov    QWORD PTR [rcx],rdx
   140006acc:	mov    QWORD PTR [rdx+0x8],rcx
   140006ad0:	mov    rax,QWORD PTR [rdx+0x8]
   140006ad4:	mov    BYTE PTR [rax+0x48],0x1
   140006ad8:	mov    rax,QWORD PTR [rdx+0x8]
   140006adc:	mov    rcx,QWORD PTR [rax+0x8]
   140006ae0:	mov    BYTE PTR [rcx+0x48],dil
   140006ae4:	mov    rax,QWORD PTR [rdx+0x8]
   140006ae8:	mov    rcx,QWORD PTR [rax+0x8]
   140006aec:	mov    r9,QWORD PTR [rcx]
   140006aef:	mov    rax,QWORD PTR [r9+0x10]
   140006af3:	mov    QWORD PTR [rcx],rax
   140006af6:	mov    rax,QWORD PTR [r9+0x10]
   140006afa:	cmp    BYTE PTR [rax+0x49],dil
   140006afe:	jne    0x140006b04
   140006b00:	mov    QWORD PTR [rax+0x8],rcx
   140006b04:	mov    rax,QWORD PTR [rcx+0x8]
   140006b08:	mov    QWORD PTR [r9+0x8],rax
   140006b0c:	mov    rax,QWORD PTR [r10+0x8]
   140006b10:	cmp    rcx,QWORD PTR [rax+0x8]
   140006b14:	jne    0x140006b1c
   140006b16:	mov    QWORD PTR [rax+0x8],r9
   140006b1a:	jmp    0x140006b2f
   140006b1c:	mov    rax,QWORD PTR [rcx+0x8]
   140006b20:	cmp    rcx,QWORD PTR [rax+0x10]
   140006b24:	jne    0x140006b2c
   140006b26:	mov    QWORD PTR [rax+0x10],r9
   140006b2a:	jmp    0x140006b2f
   140006b2c:	mov    QWORD PTR [rax],r9
   140006b2f:	mov    QWORD PTR [r9+0x10],rcx
   140006b33:	jmp    0x140006c17
   140006b38:	mov    r9,QWORD PTR [rcx]
   140006b3b:	cmp    BYTE PTR [r9+0x48],dil
   140006b3f:	jne    0x140006b63
   140006b41:	mov    BYTE PTR [rax+0x48],0x1
   140006b45:	mov    BYTE PTR [r9+0x48],0x1
   140006b4a:	mov    rax,QWORD PTR [rdx+0x8]
   140006b4e:	mov    rcx,QWORD PTR [rax+0x8]
   140006b52:	mov    BYTE PTR [rcx+0x48],dil
   140006b56:	mov    rax,QWORD PTR [rdx+0x8]
   140006b5a:	mov    rdx,QWORD PTR [rax+0x8]
   140006b5e:	jmp    0x140006c1b
   140006b63:	cmp    rdx,QWORD PTR [rax]
   140006b66:	jne    0x140006bb6
   140006b68:	mov    rcx,QWORD PTR [rax]
   140006b6b:	mov    rdx,rax
   140006b6e:	mov    rax,QWORD PTR [rcx+0x10]
   140006b72:	mov    QWORD PTR [rdx],rax
   140006b75:	mov    rax,QWORD PTR [rcx+0x10]
   140006b79:	cmp    BYTE PTR [rax+0x49],dil
   140006b7d:	jne    0x140006b83
   140006b7f:	mov    QWORD PTR [rax+0x8],rdx
   140006b83:	mov    rax,QWORD PTR [rdx+0x8]
   140006b87:	mov    QWORD PTR [rcx+0x8],rax
   140006b8b:	mov    rax,QWORD PTR [r10+0x8]
   140006b8f:	cmp    rdx,QWORD PTR [rax+0x8]
   140006b93:	jne    0x140006b9b
   140006b95:	mov    QWORD PTR [rax+0x8],rcx
   140006b99:	jmp    0x140006bae
   140006b9b:	mov    rax,QWORD PTR [rdx+0x8]
   140006b9f:	cmp    rdx,QWORD PTR [rax+0x10]
   140006ba3:	jne    0x140006bab
   140006ba5:	mov    QWORD PTR [rax+0x10],rcx
   140006ba9:	jmp    0x140006bae
   140006bab:	mov    QWORD PTR [rax],rcx
   140006bae:	mov    QWORD PTR [rcx+0x10],rdx
   140006bb2:	mov    QWORD PTR [rdx+0x8],rcx
   140006bb6:	mov    rax,QWORD PTR [rdx+0x8]
   140006bba:	mov    BYTE PTR [rax+0x48],0x1
   140006bbe:	mov    rax,QWORD PTR [rdx+0x8]
   140006bc2:	mov    rcx,QWORD PTR [rax+0x8]
   140006bc6:	mov    BYTE PTR [rcx+0x48],dil
   140006bca:	mov    rax,QWORD PTR [rdx+0x8]
   140006bce:	mov    rcx,QWORD PTR [rax+0x8]
   140006bd2:	mov    r9,QWORD PTR [rcx+0x10]
   140006bd6:	mov    rax,QWORD PTR [r9]
   140006bd9:	mov    QWORD PTR [rcx+0x10],rax
   140006bdd:	mov    rax,QWORD PTR [r9]
   140006be0:	cmp    BYTE PTR [rax+0x49],dil
   140006be4:	jne    0x140006bea
   140006be6:	mov    QWORD PTR [rax+0x8],rcx
   140006bea:	mov    rax,QWORD PTR [rcx+0x8]
   140006bee:	mov    QWORD PTR [r9+0x8],rax
   140006bf2:	mov    rax,QWORD PTR [r10+0x8]
   140006bf6:	cmp    rcx,QWORD PTR [rax+0x8]
   140006bfa:	jne    0x140006c02
   140006bfc:	mov    QWORD PTR [rax+0x8],r9
   140006c00:	jmp    0x140006c14
   140006c02:	mov    rax,QWORD PTR [rcx+0x8]
   140006c06:	cmp    rcx,QWORD PTR [rax]
   140006c09:	jne    0x140006c10
   140006c0b:	mov    QWORD PTR [rax],r9
   140006c0e:	jmp    0x140006c14
   140006c10:	mov    QWORD PTR [rax+0x10],r9
   140006c14:	mov    QWORD PTR [r9],rcx
   140006c17:	mov    QWORD PTR [rcx+0x8],r9
   140006c1b:	mov    rax,QWORD PTR [rdx+0x8]
   140006c1f:	cmp    BYTE PTR [rax+0x48],dil
   140006c23:	je     0x140006a5f
   140006c29:	mov    rax,QWORD PTR [r10+0x8]
   140006c2d:	mov    QWORD PTR [rbx],r8
   140006c30:	mov    rcx,QWORD PTR [rax+0x8]
   140006c34:	mov    rax,rbx
   140006c37:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c3c:	mov    BYTE PTR [rcx+0x48],0x1
   140006c40:	add    rsp,0x20
   140006c44:	pop    rdi
   140006c45:	ret    
   140006c46:	int3   
   140006c47:	int3   
   140006c48:	mov    QWORD PTR [rsp+0x8],rcx
   140006c4d:	push   rsi
   140006c4e:	push   rdi
   140006c4f:	push   r12
   140006c51:	push   r13
   140006c53:	push   r14
   140006c55:	sub    rsp,0x40
   140006c59:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140006c62:	mov    QWORD PTR [rsp+0x78],rbx
   140006c67:	mov    r14b,r8b
   140006c6a:	mov    r12,rdx
   140006c6d:	mov    rdi,rcx
   140006c70:	xor    ebx,ebx
   140006c72:	mov    DWORD PTR [rsp+0x20],ebx
   140006c76:	xor    sil,sil
   140006c79:	mov    BYTE PTR [rsp+0x88],sil
   140006c81:	mov    r13,rcx
   140006c84:	mov    QWORD PTR [rsp+0x30],rcx
   140006c89:	mov    rax,QWORD PTR [rcx]
   140006c8c:	movsxd r9,DWORD PTR [rax+0x4]
   140006c90:	mov    rcx,QWORD PTR [r9+rcx*1+0x48]
   140006c95:	test   rcx,rcx
   140006c98:	je     0x140006ca1
   140006c9a:	mov    rax,QWORD PTR [rcx]
   140006c9d:	call   QWORD PTR [rax+0x8]
   140006ca0:	nop
   140006ca1:	mov    dl,0x1
   140006ca3:	mov    rcx,rdi
   140006ca6:	call   QWORD PTR [rip+0x425e4]        # 0x140049290
   140006cac:	mov    BYTE PTR [rsp+0x38],al
   140006cb0:	test   al,al
   140006cb2:	je     0x140006d65
   140006cb8:	or     r8,0xffffffffffffffff
   140006cbc:	xor    edx,edx
   140006cbe:	mov    rcx,r12
   140006cc1:	call   0x140002dfc
   140006cc6:	movzx  r14d,r14b
   140006cca:	mov    rax,QWORD PTR [rdi]
   140006ccd:	movsxd rcx,DWORD PTR [rax+0x4]
   140006cd1:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140006cd6:	call   QWORD PTR [rip+0x428ec]        # 0x1400495c8
   140006cdc:	cmp    eax,0xffffffff
   140006cdf:	jne    0x140006ce6
   140006ce1:	or     ebx,0x1
   140006ce4:	jmp    0x140006d15
   140006ce6:	cmp    eax,r14d
   140006ce9:	jne    0x140006d0a
   140006ceb:	mov    sil,0x1
   140006cee:	mov    BYTE PTR [rsp+0x88],sil
   140006cf6:	mov    rax,QWORD PTR [rdi]
   140006cf9:	movsxd rcx,DWORD PTR [rax+0x4]
   140006cfd:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140006d02:	call   QWORD PTR [rip+0x425c0]        # 0x1400492c8
   140006d08:	jmp    0x140006d19
   140006d0a:	cmp    QWORD PTR [r12+0x10],0xfffffffffffffffe
   140006d10:	jb     0x140006d1b
   140006d12:	or     ebx,0x2
   140006d15:	mov    DWORD PTR [rsp+0x20],ebx
   140006d19:	jmp    0x140006d60
   140006d1b:	mov    r8b,al
   140006d1e:	mov    edx,0x1
   140006d23:	mov    rcx,r12
   140006d26:	call   0x1400047bc
   140006d2b:	mov    sil,0x1
   140006d2e:	mov    BYTE PTR [rsp+0x88],sil
   140006d36:	mov    rax,QWORD PTR [rdi]
   140006d39:	movsxd rcx,DWORD PTR [rax+0x4]
   140006d3d:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140006d42:	call   QWORD PTR [rip+0x425d8]        # 0x140049320
   140006d48:	jmp    0x140006cdc
   140006d4a:	mov    rdi,QWORD PTR [rsp+0x70]
   140006d4f:	mov    ebx,DWORD PTR [rsp+0x20]
   140006d53:	mov    sil,BYTE PTR [rsp+0x88]
   140006d5b:	mov    r13,QWORD PTR [rsp+0x30]
   140006d60:	test   sil,sil
   140006d63:	jne    0x140006d68
   140006d65:	or     ebx,0x2
   140006d68:	mov    rax,QWORD PTR [rdi]
   140006d6b:	movsxd rcx,DWORD PTR [rax+0x4]
   140006d6f:	add    rcx,rdi
   140006d72:	xor    r8d,r8d
   140006d75:	mov    edx,ebx
   140006d77:	call   QWORD PTR [rip+0x4257b]        # 0x1400492f8
   140006d7d:	nop
   140006d7e:	mov    rax,QWORD PTR [r13+0x0]
   140006d82:	movsxd rcx,DWORD PTR [rax+0x4]
   140006d86:	mov    rcx,QWORD PTR [rcx+r13*1+0x48]
   140006d8b:	test   rcx,rcx
   140006d8e:	je     0x140006d96
   140006d90:	mov    rax,QWORD PTR [rcx]
   140006d93:	call   QWORD PTR [rax+0x10]
   140006d96:	mov    rax,rdi
   140006d99:	mov    rbx,QWORD PTR [rsp+0x78]
   140006d9e:	add    rsp,0x40
   140006da2:	pop    r14
   140006da4:	pop    r13
   140006da6:	pop    r12
   140006da8:	pop    rdi
   140006da9:	pop    rsi
   140006daa:	ret    
   140006dab:	int3   
   140006dac:	rex push rdi
   140006dae:	sub    rsp,0x50
   140006db2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006dbb:	mov    QWORD PTR [rsp+0x60],rbx
   140006dc0:	mov    QWORD PTR [rsp+0x68],rsi
   140006dc5:	mov    rsi,rdx
   140006dc8:	mov    rbx,rcx
   140006dcb:	mov    ecx,0x50
   140006dd0:	call   QWORD PTR [rip+0x428c2]        # 0x140049698
   140006dd6:	mov    rdi,rax
   140006dd9:	mov    QWORD PTR [rsp+0x70],rax
   140006dde:	xor    eax,eax
   140006de0:	test   rdi,rdi
   140006de3:	je     0x140006e37
   140006de5:	mov    r8,QWORD PTR [rbx+0x8]
   140006de9:	mov    QWORD PTR [rdi],r8
   140006dec:	mov    r8,QWORD PTR [rbx+0x8]
   140006df0:	mov    QWORD PTR [rdi+0x8],r8
   140006df4:	mov    rcx,QWORD PTR [rbx+0x8]
   140006df8:	mov    QWORD PTR [rdi+0x10],rcx
   140006dfc:	mov    WORD PTR [rdi+0x48],ax
   140006e00:	lea    rbx,[rdi+0x18]
   140006e04:	mov    QWORD PTR [rsp+0x78],rbx
   140006e09:	mov    QWORD PTR [rsp+0x28],rbx
   140006e0e:	test   rbx,rbx
   140006e11:	je     0x140006e32
   140006e13:	mov    QWORD PTR [rbx+0x18],0xf
   140006e1b:	mov    QWORD PTR [rbx+0x10],rax
   140006e1f:	mov    BYTE PTR [rbx],al
   140006e21:	mov    rdx,rsi
   140006e24:	mov    rcx,rbx
   140006e27:	call   0x140004730
   140006e2c:	mov    al,BYTE PTR [rsi+0x28]
   140006e2f:	mov    BYTE PTR [rbx+0x28],al
   140006e32:	mov    rax,rdi
   140006e35:	jmp    0x140006e6a
   140006e37:	mov    QWORD PTR [rsp+0x70],rax
   140006e3c:	lea    rdx,[rsp+0x70]
   140006e41:	lea    rcx,[rsp+0x30]
   140006e46:	call   QWORD PTR [rip+0x42a84]        # 0x1400498d0
   140006e4c:	lea    r11,[rip+0x43385]        # 0x14004a1d8
   140006e53:	mov    QWORD PTR [rsp+0x30],r11
   140006e58:	lea    rdx,[rip+0x5c8e9]        # 0x140063748
   140006e5f:	lea    rcx,[rsp+0x30]
   140006e64:	call   0x14002b560
   140006e69:	int3   
   140006e6a:	mov    rbx,QWORD PTR [rsp+0x60]
   140006e6f:	mov    rsi,QWORD PTR [rsp+0x68]
   140006e74:	add    rsp,0x50
   140006e78:	pop    rdi
   140006e79:	ret    
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	mov    rax,rsp
   140006e7f:	push   rbp
   140006e80:	mov    rbp,rsp
   140006e83:	sub    rsp,0x80
   140006e8a:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140006e92:	mov    QWORD PTR [rax+0x18],rbx
   140006e96:	mov    QWORD PTR [rax+0x20],rdi
   140006e9a:	mov    rax,QWORD PTR [rip+0x6134f]        # 0x1400681f0
   140006ea1:	xor    rax,rsp
   140006ea4:	mov    QWORD PTR [rbp-0x10],rax
   140006ea8:	mov    rdi,rdx
   140006eab:	mov    rbx,rcx
   140006eae:	mov    QWORD PTR [rbp-0x38],rdx
   140006eb2:	and    DWORD PTR [rbp-0x48],0x0
   140006eb6:	mov    r8,QWORD PTR [rdx+0x10]
   140006eba:	mov    QWORD PTR [rbp-0x50],r8
   140006ebe:	and    QWORD PTR [rbp-0x60],0x0
   140006ec3:	cmp    r8,0x10
   140006ec7:	ja     0x140006ecf
   140006ec9:	lea    rax,[rbp-0x60]
   140006ecd:	jmp    0x140006ee2
   140006ecf:	mov    rcx,r8
   140006ed2:	call   0x14002b058
   140006ed7:	mov    QWORD PTR [rbp-0x60],rax
   140006edb:	mov    rdx,QWORD PTR [rdi]
   140006ede:	mov    r8,QWORD PTR [rbp-0x50]
   140006ee2:	mov    rcx,rax
   140006ee5:	call   QWORD PTR [rip+0x429dd]        # 0x1400498c8
   140006eeb:	lea    r11,[rbp-0x60]
   140006eef:	mov    QWORD PTR [rbp-0x48],r11
   140006ef3:	mov    r8,QWORD PTR [rbp-0x50]
   140006ef7:	mov    QWORD PTR [rbp-0x20],r8
   140006efb:	and    QWORD PTR [rbp-0x30],0x0
   140006f00:	cmp    r8,0x10
   140006f04:	ja     0x140006f10
   140006f06:	lea    rax,[rbp-0x30]
   140006f0a:	lea    rdx,[rbp-0x60]
   140006f0e:	jmp    0x140006f24
   140006f10:	mov    rcx,r8
   140006f13:	call   0x14002b058
   140006f18:	mov    QWORD PTR [rbp-0x30],rax
   140006f1c:	mov    rdx,QWORD PTR [rbp-0x60]
   140006f20:	mov    r8,QWORD PTR [rbp-0x20]
   140006f24:	mov    rcx,rax
   140006f27:	call   QWORD PTR [rip+0x4299b]        # 0x1400498c8
   140006f2d:	mov    DWORD PTR [rbp-0x18],0x1
   140006f34:	cmp    QWORD PTR [rbp-0x50],0x10
   140006f39:	jbe    0x140006f4b
   140006f3b:	mov    rcx,QWORD PTR [rbp-0x60]
   140006f3f:	test   rcx,rcx
   140006f42:	je     0x140006f4b
   140006f44:	call   QWORD PTR [rip+0x4271e]        # 0x140049668
   140006f4a:	nop
   140006f4b:	mov    rcx,QWORD PTR [rbp-0x20]
   140006f4f:	mov    QWORD PTR [rbx+0x10],rcx
   140006f53:	and    QWORD PTR [rbx],0x0
   140006f57:	cmp    rcx,0x10
   140006f5b:	ja     0x140006f66
   140006f5d:	mov    rax,rbx
   140006f60:	lea    rdx,[rbp-0x30]
   140006f64:	jmp    0x140006f72
   140006f66:	call   0x14002b058
   140006f6b:	mov    QWORD PTR [rbx],rax
   140006f6e:	mov    rdx,QWORD PTR [rbp-0x30]
   140006f72:	mov    r8,QWORD PTR [rbx+0x10]
   140006f76:	mov    rcx,rax
   140006f79:	call   QWORD PTR [rip+0x42949]        # 0x1400498c8
   140006f7f:	mov    r11d,DWORD PTR [rbp-0x18]
   140006f83:	mov    DWORD PTR [rbx+0x18],r11d
   140006f87:	cmp    QWORD PTR [rbp-0x20],0x10
   140006f8c:	jbe    0x140006f9e
   140006f8e:	mov    rcx,QWORD PTR [rbp-0x30]
   140006f92:	test   rcx,rcx
   140006f95:	je     0x140006f9e
   140006f97:	call   QWORD PTR [rip+0x426cb]        # 0x140049668
   140006f9d:	nop
   140006f9e:	cmp    QWORD PTR [rdi+0x10],0x10
   140006fa3:	jbe    0x140006fb3
   140006fa5:	mov    rcx,QWORD PTR [rdi]
   140006fa8:	test   rcx,rcx
   140006fab:	je     0x140006fb3
   140006fad:	call   QWORD PTR [rip+0x426b5]        # 0x140049668
   140006fb3:	mov    rax,rbx
   140006fb6:	mov    rcx,QWORD PTR [rbp-0x10]
   140006fba:	xor    rcx,rsp
   140006fbd:	call   0x14002b100
   140006fc2:	lea    r11,[rsp+0x80]
   140006fca:	mov    rbx,QWORD PTR [r11+0x20]
   140006fce:	mov    rdi,QWORD PTR [r11+0x28]
   140006fd2:	mov    rsp,r11
   140006fd5:	pop    rbp
   140006fd6:	ret    
   140006fd7:	int3   
   140006fd8:	mov    rax,rsp
   140006fdb:	push   rbp
   140006fdc:	push   rsi
   140006fdd:	push   rdi
   140006fde:	push   r12
   140006fe0:	push   r13
   140006fe2:	push   r14
   140006fe4:	push   r15
   140006fe6:	lea    rbp,[rax-0x338]
   140006fed:	sub    rsp,0x400
   140006ff4:	mov    QWORD PTR [rbp+0x20],0xfffffffffffffffe
   140006ffc:	mov    QWORD PTR [rax+0x20],rbx
   140007000:	mov    rax,QWORD PTR [rip+0x611e9]        # 0x1400681f0
   140007007:	xor    rax,rsp
   14000700a:	mov    QWORD PTR [rbp+0x2f8],rax
   140007011:	mov    rsi,r8
   140007014:	mov    r13,rcx
   140007017:	mov    QWORD PTR [rbp+0x2f0],r8
   14000701e:	lea    rcx,[rbp-0x20]
   140007022:	call   0x140007aac
   140007027:	mov    r8,QWORD PTR [rsi+0x10]
   14000702b:	mov    QWORD PTR [rbp-0x58],r8
   14000702f:	xor    r14d,r14d
   140007032:	mov    QWORD PTR [rbp-0x68],r14
   140007036:	cmp    r8,0x10
   14000703a:	ja     0x140007045
   14000703c:	lea    rax,[rbp-0x68]
   140007040:	mov    rdx,rsi
   140007043:	jmp    0x140007058
   140007045:	mov    rcx,r8
   140007048:	call   0x14002b058
   14000704d:	mov    QWORD PTR [rbp-0x68],rax
   140007051:	mov    rdx,QWORD PTR [rsi]
   140007054:	mov    r8,QWORD PTR [rbp-0x58]
   140007058:	mov    rcx,rax
   14000705b:	call   QWORD PTR [rip+0x42867]        # 0x1400498c8
   140007061:	mov    r11d,DWORD PTR [rsi+0x18]
   140007065:	mov    DWORD PTR [rbp-0x50],r11d
   140007069:	lea    rax,[rbp-0x68]
   14000706d:	mov    QWORD PTR [rbp-0x10],rax
   140007071:	mov    r8,QWORD PTR [rbp-0x58]
   140007075:	mov    QWORD PTR [rsp+0x38],r8
   14000707a:	mov    QWORD PTR [rsp+0x28],r14
   14000707f:	cmp    r8,0x10
   140007083:	ja     0x140007090
   140007085:	lea    rax,[rsp+0x28]
   14000708a:	lea    rdx,[rbp-0x68]
   14000708e:	jmp    0x1400070a6
   140007090:	mov    rcx,r8
   140007093:	call   0x14002b058
   140007098:	mov    QWORD PTR [rsp+0x28],rax
   14000709d:	mov    rdx,QWORD PTR [rbp-0x68]
   1400070a1:	mov    r8,QWORD PTR [rsp+0x38]
   1400070a6:	mov    rcx,rax
   1400070a9:	call   QWORD PTR [rip+0x42819]        # 0x1400498c8
   1400070af:	mov    r11d,DWORD PTR [rbp-0x50]
   1400070b3:	mov    DWORD PTR [rsp+0x40],r11d
   1400070b8:	lea    rax,[rsp+0x28]
   1400070bd:	mov    QWORD PTR [rbp-0x8],rax
   1400070c1:	mov    r8,QWORD PTR [rsp+0x38]
   1400070c6:	mov    QWORD PTR [rbp-0x38],r8
   1400070ca:	mov    QWORD PTR [rbp-0x48],r14
   1400070ce:	cmp    r8,0x10
   1400070d2:	ja     0x1400070df
   1400070d4:	lea    rax,[rbp-0x48]
   1400070d8:	lea    rdx,[rsp+0x28]
   1400070dd:	jmp    0x1400070f4
   1400070df:	mov    rcx,r8
   1400070e2:	call   0x14002b058
   1400070e7:	mov    QWORD PTR [rbp-0x48],rax
   1400070eb:	mov    rdx,QWORD PTR [rsp+0x28]
   1400070f0:	mov    r8,QWORD PTR [rbp-0x38]
   1400070f4:	mov    rcx,rax
   1400070f7:	call   QWORD PTR [rip+0x427cb]        # 0x1400498c8
   1400070fd:	mov    r11d,DWORD PTR [rsp+0x40]
   140007102:	mov    DWORD PTR [rbp-0x30],r11d
   140007106:	lea    rax,[rbp-0x48]
   14000710a:	mov    QWORD PTR [rbp-0x28],rax
   14000710e:	mov    QWORD PTR [rsp+0x48],r14
   140007113:	mov    r8,QWORD PTR [rbp-0x38]
   140007117:	mov    QWORD PTR [rbp+0x10],r8
   14000711b:	mov    QWORD PTR [rbp+0x0],r14
   14000711f:	cmp    r8,0x10
   140007123:	ja     0x14000712f
   140007125:	lea    rax,[rbp+0x0]
   140007129:	lea    rdx,[rbp-0x48]
   14000712d:	jmp    0x140007143
   14000712f:	mov    rcx,r8
   140007132:	call   0x14002b058
   140007137:	mov    QWORD PTR [rbp+0x0],rax
   14000713b:	mov    rdx,QWORD PTR [rbp-0x48]
   14000713f:	mov    r8,QWORD PTR [rbp+0x10]
   140007143:	mov    rcx,rax
   140007146:	call   QWORD PTR [rip+0x4277c]        # 0x1400498c8
   14000714c:	mov    r11d,DWORD PTR [rbp-0x30]
   140007150:	mov    DWORD PTR [rbp+0x18],r11d
   140007154:	lea    rdx,[rbp+0x0]
   140007158:	lea    rcx,[rsp+0x48]
   14000715d:	call   0x1400089bc
   140007162:	nop
   140007163:	cmp    QWORD PTR [rbp-0x38],0x10
   140007168:	jbe    0x14000717a
   14000716a:	mov    rcx,QWORD PTR [rbp-0x48]
   14000716e:	test   rcx,rcx
   140007171:	je     0x14000717a
   140007173:	call   QWORD PTR [rip+0x424ef]        # 0x140049668
   140007179:	nop
   14000717a:	cmp    QWORD PTR [rsp+0x38],0x10
   140007180:	jbe    0x140007193
   140007182:	mov    rcx,QWORD PTR [rsp+0x28]
   140007187:	test   rcx,rcx
   14000718a:	je     0x140007193
   14000718c:	call   QWORD PTR [rip+0x424d6]        # 0x140049668
   140007192:	nop
   140007193:	mov    r8,QWORD PTR [rbp-0x20]
   140007197:	mov    QWORD PTR [rsp+0x70],r8
   14000719c:	mov    QWORD PTR [rsp+0x78],r8
   1400071a1:	mov    QWORD PTR [rbp-0x80],r8
   1400071a5:	mov    rbx,QWORD PTR [rbp-0x18]
   1400071a9:	mov    QWORD PTR [rbp-0x78],rbx
   1400071ad:	mov    BYTE PTR [rbp-0x70],r14b
   1400071b1:	mov    r15d,0x1
   1400071b7:	mov    r9,QWORD PTR [rsp+0x48]
   1400071bc:	cmp    r8,rbx
   1400071bf:	je     0x14000721f
   1400071c1:	test   r9,r9
   1400071c4:	je     0x1400071ef
   1400071c6:	mov    r9,rbx
   1400071c9:	lea    rdx,[rbp-0x20]
   1400071cd:	lea    rcx,[rsp+0x48]
   1400071d2:	call   0x1400082bc
   1400071d7:	mov    rbx,QWORD PTR [rbp-0x78]
   1400071db:	mov    r8,QWORD PTR [rsp+0x78]
   1400071e0:	mov    r9,QWORD PTR [rsp+0x48]
   1400071e5:	mov    rax,QWORD PTR [rbp-0x18]
   1400071e9:	mov    rcx,QWORD PTR [rbp-0x20]
   1400071ed:	jmp    0x1400071f5
   1400071ef:	mov    rcx,rbx
   1400071f2:	mov    rax,rbx
   1400071f5:	cmp    rcx,rbx
   1400071f8:	jne    0x14000720d
   1400071fa:	cmp    rax,rbx
   1400071fd:	jne    0x14000720d
   1400071ff:	movzx  edx,BYTE PTR [rbp-0x70]
   140007203:	cmp    r8,rbx
   140007206:	cmove  edx,r15d
   14000720a:	mov    BYTE PTR [rbp-0x70],dl
   14000720d:	mov    rdx,QWORD PTR [rbp-0x80]
   140007211:	mov    QWORD PTR [rsp+0x70],rdx
   140007216:	mov    QWORD PTR [rsp+0x78],rcx
   14000721b:	mov    QWORD PTR [rbp-0x80],rax
   14000721f:	cmp    QWORD PTR [rbp-0x58],0x10
   140007224:	jbe    0x14000723e
   140007226:	mov    rcx,QWORD PTR [rbp-0x68]
   14000722a:	test   rcx,rcx
   14000722d:	je     0x14000723e
   14000722f:	call   QWORD PTR [rip+0x42433]        # 0x140049668
   140007235:	mov    rbx,QWORD PTR [rbp-0x78]
   140007239:	mov    r9,QWORD PTR [rsp+0x48]
   14000723e:	mov    QWORD PTR [rbp+0x28],r14
   140007242:	test   r9,r9
   140007245:	je     0x14000727f
   140007247:	mov    QWORD PTR [rbp+0x28],r9
   14000724b:	test   BYTE PTR [rsp+0x48],r15b
   140007250:	je     0x140007268
   140007252:	lea    rcx,[rbp+0x30]
   140007256:	lea    rdx,[rsp+0x50]
   14000725b:	mov    r8d,0x20
   140007261:	call   0x14002b120
   140007266:	jmp    0x14000727f
   140007268:	and    r9,0xfffffffffffffffe
   14000726c:	xor    r8d,r8d
   14000726f:	lea    rdx,[rbp+0x30]
   140007273:	lea    rcx,[rsp+0x50]
   140007278:	call   QWORD PTR [r9]
   14000727b:	mov    rbx,QWORD PTR [rbp-0x78]
   14000727f:	movups xmm0,XMMWORD PTR [rsp+0x70]
   140007284:	movdqu XMMWORD PTR [rbp+0x50],xmm0
   140007289:	mov    rax,QWORD PTR [rbp-0x80]
   14000728d:	mov    QWORD PTR [rbp+0x60],rax
   140007291:	mov    QWORD PTR [rbp+0x68],rbx
   140007295:	mov    al,BYTE PTR [rbp-0x70]
   140007298:	mov    BYTE PTR [rbp+0x70],al
   14000729b:	mov    r8b,BYTE PTR [rsp+0x20]
   1400072a0:	lea    rdx,[rbp+0x28]
   1400072a4:	lea    rcx,[rbp+0xd0]
   1400072ab:	call   0x140007b2c
   1400072b0:	nop
   1400072b1:	mov    rax,QWORD PTR [rsp+0x48]
   1400072b6:	test   rax,rax
   1400072b9:	je     0x1400072e4
   1400072bb:	test   r15b,al
   1400072be:	jne    0x1400072df
   1400072c0:	and    rax,0xfffffffffffffffe
   1400072c4:	mov    r9,QWORD PTR [rax]
   1400072c7:	test   r9,r9
   1400072ca:	je     0x1400072df
   1400072cc:	mov    r8d,0x2
   1400072d2:	lea    rdx,[rsp+0x50]
   1400072d7:	lea    rcx,[rsp+0x50]
   1400072dc:	call   r9
   1400072df:	mov    QWORD PTR [rsp+0x48],r14
   1400072e4:	mov    QWORD PTR [rbp+0x78],r14
   1400072e8:	mov    QWORD PTR [rbp+0xa0],r14
   1400072ef:	mov    QWORD PTR [rbp+0xa8],r14
   1400072f6:	mov    QWORD PTR [rbp+0xb0],r14
   1400072fd:	mov    QWORD PTR [rbp+0xb8],r14
   140007304:	mov    r8b,BYTE PTR [rsp+0x20]
   140007309:	lea    rdx,[rbp+0x78]
   14000730d:	lea    rcx,[rbp+0x130]
   140007314:	call   0x140007b2c
   140007319:	nop
   14000731a:	lea    rax,[rbp+0x190]
   140007321:	mov    QWORD PTR [rbp-0x28],rax
   140007325:	lea    rdx,[rbp+0x130]
   14000732c:	lea    rcx,[rbp+0x190]
   140007333:	call   0x1400076fc
   140007338:	mov    rdi,rax
   14000733b:	mov    QWORD PTR [rbp-0x8],rax
   14000733f:	lea    rdx,[rbp+0xd0]
   140007346:	lea    rcx,[rbp+0x240]
   14000734d:	call   0x1400076fc
   140007352:	mov    r12,rax
   140007355:	mov    QWORD PTR [rbp-0x28],rax
   140007359:	mov    QWORD PTR [rsp+0x28],r14
   14000735e:	mov    QWORD PTR [rsp+0x30],r14
   140007363:	mov    QWORD PTR [rsp+0x38],r14
   140007368:	lea    rax,[rbp+0x1e8]
   14000736f:	mov    QWORD PTR [rbp-0x10],rax
   140007373:	mov    rdx,rdi
   140007376:	lea    rcx,[rbp+0x1e8]
   14000737d:	call   0x1400076fc
   140007382:	mov    rbx,rax
   140007385:	mov    rdx,r12
   140007388:	lea    rcx,[rbp+0x298]
   14000738f:	call   0x1400076fc
   140007394:	nop
   140007395:	mov    r8,rbx
   140007398:	mov    rdx,rax
   14000739b:	lea    rcx,[rsp+0x28]
   1400073a0:	call   0x140008024
   1400073a5:	nop
   1400073a6:	mov    rax,QWORD PTR [r12]
   1400073aa:	test   rax,rax
   1400073ad:	je     0x1400073d5
   1400073af:	test   r15b,al
   1400073b2:	jne    0x1400073d1
   1400073b4:	lea    rcx,[r12+0x8]
   1400073b9:	and    rax,0xfffffffffffffffe
   1400073bd:	mov    r9,QWORD PTR [rax]
   1400073c0:	test   r9,r9
   1400073c3:	je     0x1400073d1
   1400073c5:	mov    r8d,0x2
   1400073cb:	mov    rdx,rcx
   1400073ce:	call   r9
   1400073d1:	mov    QWORD PTR [r12],r14
   1400073d5:	mov    rax,QWORD PTR [rdi]
   1400073d8:	test   rax,rax
   1400073db:	je     0x140007401
   1400073dd:	test   r15b,al
   1400073e0:	jne    0x1400073fe
   1400073e2:	lea    rcx,[rdi+0x8]
   1400073e6:	and    rax,0xfffffffffffffffe
   1400073ea:	mov    r9,QWORD PTR [rax]
   1400073ed:	test   r9,r9
   1400073f0:	je     0x1400073fe
   1400073f2:	mov    r8d,0x2
   1400073f8:	mov    rdx,rcx
   1400073fb:	call   r9
   1400073fe:	mov    QWORD PTR [rdi],r14
   140007401:	lea    rax,[rsp+0x28]
   140007406:	cmp    r13,rax
   140007409:	je     0x140007430
   14000740b:	mov    rbx,QWORD PTR [r13+0x0]
   14000740f:	mov    rax,QWORD PTR [rsp+0x28]
   140007414:	mov    QWORD PTR [r13+0x0],rax
   140007418:	mov    r12,QWORD PTR [r13+0x8]
   14000741c:	mov    rax,QWORD PTR [rsp+0x30]
   140007421:	mov    QWORD PTR [r13+0x8],rax
   140007425:	mov    rax,QWORD PTR [rsp+0x38]
   14000742a:	mov    QWORD PTR [r13+0x10],rax
   14000742e:	jmp    0x14000743a
   140007430:	mov    r12,QWORD PTR [rsp+0x30]
   140007435:	mov    rbx,QWORD PTR [rsp+0x28]
   14000743a:	test   rbx,rbx
   14000743d:	je     0x140007462
   14000743f:	mov    rdi,rbx
   140007442:	cmp    rbx,r12
   140007445:	je     0x140007458
   140007447:	mov    rcx,rdi
   14000744a:	call   0x14000638c
   14000744f:	add    rdi,0x28
   140007453:	cmp    rdi,r12
   140007456:	jne    0x140007447
   140007458:	mov    rcx,rbx
   14000745b:	call   QWORD PTR [rip+0x42217]        # 0x140049678
   140007461:	nop
   140007462:	mov    rax,QWORD PTR [rbp+0x130]
   140007469:	test   rax,rax
   14000746c:	je     0x14000749d
   14000746e:	test   r15b,al
   140007471:	jne    0x140007496
   140007473:	and    rax,0xfffffffffffffffe
   140007477:	mov    r9,QWORD PTR [rax]
   14000747a:	test   r9,r9
   14000747d:	je     0x140007496
   14000747f:	mov    r8d,0x2
   140007485:	lea    rdx,[rbp+0x138]
   14000748c:	lea    rcx,[rbp+0x138]
   140007493:	call   r9
   140007496:	mov    QWORD PTR [rbp+0x130],r14
   14000749d:	mov    rax,QWORD PTR [rbp+0xd0]
   1400074a4:	test   rax,rax
   1400074a7:	je     0x1400074d8
   1400074a9:	test   r15b,al
   1400074ac:	jne    0x1400074d1
   1400074ae:	and    rax,0xfffffffffffffffe
   1400074b2:	mov    r9,QWORD PTR [rax]
   1400074b5:	test   r9,r9
   1400074b8:	je     0x1400074d1
   1400074ba:	mov    r8d,0x2
   1400074c0:	lea    rdx,[rbp+0xd8]
   1400074c7:	lea    rcx,[rbp+0xd8]
   1400074ce:	call   r9
   1400074d1:	mov    QWORD PTR [rbp+0xd0],r14
   1400074d8:	cmp    QWORD PTR [rsi+0x10],0x10
   1400074dd:	jbe    0x1400074ed
   1400074df:	mov    rcx,QWORD PTR [rsi]
   1400074e2:	test   rcx,rcx
   1400074e5:	je     0x1400074ed
   1400074e7:	call   QWORD PTR [rip+0x4217b]        # 0x140049668
   1400074ed:	mov    rax,r13
   1400074f0:	mov    rcx,QWORD PTR [rbp+0x2f8]
   1400074f7:	xor    rcx,rsp
   1400074fa:	call   0x14002b100
   1400074ff:	mov    rbx,QWORD PTR [rsp+0x458]
   140007507:	add    rsp,0x400
   14000750e:	pop    r15
   140007510:	pop    r14
   140007512:	pop    r13
   140007514:	pop    r12
   140007516:	pop    rdi
   140007517:	pop    rsi
   140007518:	pop    rbp
   140007519:	ret    
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	rex push rdi
   14000751e:	sub    rsp,0x50
   140007522:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000752b:	mov    QWORD PTR [rsp+0x60],rbx
   140007530:	mov    QWORD PTR [rsp+0x68],rsi
   140007535:	mov    rsi,rdx
   140007538:	mov    rbx,rcx
   14000753b:	mov    ecx,0x70
   140007540:	call   QWORD PTR [rip+0x42152]        # 0x140049698
   140007546:	mov    rdi,rax
   140007549:	mov    QWORD PTR [rsp+0x70],rax
   14000754e:	test   rax,rax
   140007551:	je     0x1400075c2
   140007553:	mov    r8,QWORD PTR [rbx+0x8]
   140007557:	mov    QWORD PTR [rax],r8
   14000755a:	mov    r8,QWORD PTR [rbx+0x8]
   14000755e:	mov    QWORD PTR [rax+0x8],r8
   140007562:	mov    rcx,QWORD PTR [rbx+0x8]
   140007566:	mov    QWORD PTR [rax+0x10],rcx
   14000756a:	mov    WORD PTR [rax+0x68],0x0
   140007570:	lea    rbx,[rax+0x18]
   140007574:	mov    QWORD PTR [rsp+0x78],rbx
   140007579:	mov    QWORD PTR [rsp+0x28],rbx
   14000757e:	test   rbx,rbx
   140007581:	je     0x1400075bd
   140007583:	mov    QWORD PTR [rbx+0x18],0xf
   14000758b:	and    QWORD PTR [rbx+0x10],0x0
   140007590:	mov    BYTE PTR [rbx],0x0
   140007593:	mov    rdx,rsi
   140007596:	mov    rcx,rbx
   140007599:	call   0x140004730
   14000759e:	nop
   14000759f:	lea    rcx,[rbx+0x28]
   1400075a3:	mov    QWORD PTR [rcx+0x18],0xf
   1400075ab:	and    QWORD PTR [rcx+0x10],0x0
   1400075b0:	mov    BYTE PTR [rcx],0x0
   1400075b3:	lea    rdx,[rsi+0x28]
   1400075b7:	call   0x140004730
   1400075bc:	nop
   1400075bd:	mov    rax,rdi
   1400075c0:	jmp    0x1400075f6
   1400075c2:	and    QWORD PTR [rsp+0x70],0x0
   1400075c8:	lea    rdx,[rsp+0x70]
   1400075cd:	lea    rcx,[rsp+0x30]
   1400075d2:	call   QWORD PTR [rip+0x422f8]        # 0x1400498d0
   1400075d8:	lea    r11,[rip+0x42bf9]        # 0x14004a1d8
   1400075df:	mov    QWORD PTR [rsp+0x30],r11
   1400075e4:	lea    rdx,[rip+0x5c15d]        # 0x140063748
   1400075eb:	lea    rcx,[rsp+0x30]
   1400075f0:	call   0x14002b560
   1400075f5:	int3   
   1400075f6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400075fb:	mov    rsi,QWORD PTR [rsp+0x68]
   140007600:	add    rsp,0x50
   140007604:	pop    rdi
   140007605:	ret    
   140007606:	int3   
   140007607:	int3   
   140007608:	rex push rdi
   14000760a:	sub    rsp,0x50
   14000760e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007617:	mov    QWORD PTR [rsp+0x60],rbx
   14000761c:	mov    QWORD PTR [rsp+0x68],rsi
   140007621:	mov    rsi,rdx
   140007624:	mov    rbx,rcx
   140007627:	mov    ecx,0x70
   14000762c:	call   QWORD PTR [rip+0x42066]        # 0x140049698
   140007632:	mov    rdi,rax
   140007635:	mov    QWORD PTR [rsp+0x70],rax
   14000763a:	test   rax,rax
   14000763d:	je     0x1400076b5
   14000763f:	mov    r8,QWORD PTR [rbx+0x8]
   140007643:	mov    QWORD PTR [rax],r8
   140007646:	mov    r8,QWORD PTR [rbx+0x8]
   14000764a:	mov    QWORD PTR [rax+0x8],r8
   14000764e:	mov    rcx,QWORD PTR [rbx+0x8]
   140007652:	mov    QWORD PTR [rax+0x10],rcx
   140007656:	mov    WORD PTR [rax+0x68],0x0
   14000765c:	lea    rbx,[rax+0x18]
   140007660:	mov    QWORD PTR [rsp+0x78],rbx
   140007665:	mov    QWORD PTR [rsp+0x28],rbx
   14000766a:	test   rbx,rbx
   14000766d:	je     0x1400076b0
   14000766f:	mov    QWORD PTR [rbx+0x18],0xf
   140007677:	and    QWORD PTR [rbx+0x10],0x0
   14000767c:	mov    BYTE PTR [rbx],0x0
   14000767f:	or     r9,0xffffffffffffffff
   140007683:	xor    r8d,r8d
   140007686:	mov    rdx,rsi
   140007689:	mov    rcx,rbx
   14000768c:	call   0x1400048b8
   140007691:	nop
   140007692:	lea    rcx,[rbx+0x28]
   140007696:	mov    QWORD PTR [rcx+0x18],0xf
   14000769e:	and    QWORD PTR [rcx+0x10],0x0
   1400076a3:	mov    BYTE PTR [rcx],0x0
   1400076a6:	lea    rdx,[rsi+0x28]
   1400076aa:	call   0x140004730
   1400076af:	nop
   1400076b0:	mov    rax,rdi
   1400076b3:	jmp    0x1400076e9
   1400076b5:	and    QWORD PTR [rsp+0x70],0x0
   1400076bb:	lea    rdx,[rsp+0x70]
   1400076c0:	lea    rcx,[rsp+0x30]
   1400076c5:	call   QWORD PTR [rip+0x42205]        # 0x1400498d0
   1400076cb:	lea    r11,[rip+0x42b06]        # 0x14004a1d8
   1400076d2:	mov    QWORD PTR [rsp+0x30],r11
   1400076d7:	lea    rdx,[rip+0x5c06a]        # 0x140063748
   1400076de:	lea    rcx,[rsp+0x30]
   1400076e3:	call   0x14002b560
   1400076e8:	int3   
   1400076e9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400076ee:	mov    rsi,QWORD PTR [rsp+0x68]
   1400076f3:	add    rsp,0x50
   1400076f7:	pop    rdi
   1400076f8:	ret    
   1400076f9:	int3   
   1400076fa:	int3   
   1400076fb:	int3   
   1400076fc:	mov    QWORD PTR [rsp+0x8],rbx
   140007701:	push   rdi
   140007702:	sub    rsp,0x20
   140007706:	and    QWORD PTR [rcx],0x0
   14000770a:	mov    rax,QWORD PTR [rdx]
   14000770d:	mov    rdi,rdx
   140007710:	mov    rbx,rcx
   140007713:	test   rax,rax
   140007716:	je     0x140007745
   140007718:	mov    QWORD PTR [rcx],rax
   14000771b:	test   al,0x1
   14000771d:	je     0x140007734
   14000771f:	add    rcx,0x8
   140007723:	add    rdx,0x8
   140007727:	mov    r8d,0x20
   14000772d:	call   0x14002b120
   140007732:	jmp    0x140007745
   140007734:	lea    rdx,[rcx+0x8]
   140007738:	lea    rcx,[rdi+0x8]
   14000773c:	and    rax,0xfffffffffffffffe
   140007740:	xor    r8d,r8d
   140007743:	call   QWORD PTR [rax]
   140007745:	movups xmm0,XMMWORD PTR [rdi+0x28]
   140007749:	movdqu XMMWORD PTR [rbx+0x28],xmm0
   14000774e:	mov    rax,QWORD PTR [rdi+0x38]
   140007752:	mov    QWORD PTR [rbx+0x38],rax
   140007756:	mov    rax,QWORD PTR [rdi+0x40]
   14000775a:	mov    QWORD PTR [rbx+0x40],rax
   14000775e:	mov    al,BYTE PTR [rdi+0x48]
   140007761:	mov    BYTE PTR [rbx+0x48],al
   140007764:	mov    rax,rbx
   140007767:	mov    rbx,QWORD PTR [rsp+0x30]
   14000776c:	add    rsp,0x20
   140007770:	pop    rdi
   140007771:	ret    
   140007772:	int3   
   140007773:	int3   
   140007774:	rex push rbx
   140007776:	sub    rsp,0x20
   14000777a:	mov    rax,QWORD PTR [rcx]
   14000777d:	mov    rbx,rcx
   140007780:	test   rax,rax
   140007783:	je     0x1400077a9
   140007785:	test   al,0x1
   140007787:	jne    0x1400077a5
   140007789:	and    rax,0xfffffffffffffffe
   14000778d:	add    rcx,0x8
   140007791:	mov    r9,QWORD PTR [rax]
   140007794:	test   r9,r9
   140007797:	je     0x1400077a5
   140007799:	mov    r8d,0x2
   14000779f:	mov    rdx,rcx
   1400077a2:	call   r9
   1400077a5:	and    QWORD PTR [rbx],0x0
   1400077a9:	add    rsp,0x20
   1400077ad:	pop    rbx
   1400077ae:	ret    
   1400077af:	int3   
   1400077b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400077b5:	push   rdi
   1400077b6:	sub    rsp,0x20
   1400077ba:	mov    rbx,rcx
   1400077bd:	mov    rcx,QWORD PTR [rcx+0x8]
   1400077c1:	mov    rdi,rdx
   1400077c4:	cmp    rdx,rcx
   1400077c7:	jae    0x14000780a
   1400077c9:	cmp    QWORD PTR [rbx],rdx
   1400077cc:	ja     0x14000780a
   1400077ce:	sub    rdi,QWORD PTR [rbx]
   1400077d1:	movabs rax,0x6666666666666667
   1400077db:	imul   rdi
   1400077de:	mov    rdi,rdx
   1400077e1:	sar    rdi,0x4
   1400077e5:	mov    rax,rdi
   1400077e8:	shr    rax,0x3f
   1400077ec:	add    rdi,rax
   1400077ef:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400077f3:	jne    0x1400077fd
   1400077f5:	mov    rcx,rbx
   1400077f8:	call   0x1400078b0
   1400077fd:	mov    rax,QWORD PTR [rbx]
   140007800:	lea    rcx,[rdi+rdi*4]
   140007804:	lea    rdx,[rax+rcx*8]
   140007808:	jmp    0x14000781b
   14000780a:	cmp    rcx,QWORD PTR [rbx+0x10]
   14000780e:	jne    0x140007818
   140007810:	mov    rcx,rbx
   140007813:	call   0x1400078b0
   140007818:	mov    rdx,rdi
   14000781b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000781f:	call   0x140007d88
   140007824:	add    QWORD PTR [rbx+0x8],0x28
   140007829:	mov    rbx,QWORD PTR [rsp+0x30]
   14000782e:	add    rsp,0x20
   140007832:	pop    rdi
   140007833:	ret    
   140007834:	mov    QWORD PTR [rsp+0x8],rbx
   140007839:	mov    QWORD PTR [rsp+0x10],rbp
   14000783e:	mov    QWORD PTR [rsp+0x18],rsi
   140007843:	push   rdi
   140007844:	sub    rsp,0x20
   140007848:	mov    rsi,QWORD PTR [rcx+0x8]
   14000784c:	mov    rbx,QWORD PTR [rcx]
   14000784f:	mov    rdi,rcx
   140007852:	cmp    rbx,rsi
   140007855:	je     0x140007898
   140007857:	mov    rbp,rsi
   14000785a:	cmp    rsi,rsi
   14000785d:	je     0x140007877
   14000785f:	mov    rdx,rbp
   140007862:	mov    rcx,rbx
   140007865:	call   0x140004730
   14000786a:	add    rbp,0x28
   14000786e:	add    rbx,0x28
   140007872:	cmp    rbp,rsi
   140007875:	jne    0x14000785f
   140007877:	mov    rbp,QWORD PTR [rdi+0x8]
   14000787b:	mov    rsi,rbx
   14000787e:	cmp    rbx,rbp
   140007881:	je     0x140007894
   140007883:	mov    rcx,rsi
   140007886:	call   0x14000638c
   14000788b:	add    rsi,0x28
   14000788f:	cmp    rsi,rbp
   140007892:	jne    0x140007883
   140007894:	mov    QWORD PTR [rdi+0x8],rbx
   140007898:	mov    rbx,QWORD PTR [rsp+0x30]
   14000789d:	mov    rbp,QWORD PTR [rsp+0x38]
   1400078a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400078a7:	add    rsp,0x20
   1400078ab:	pop    rdi
   1400078ac:	ret    
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	sub    rsp,0x28
   1400078b4:	mov    rdx,QWORD PTR [rcx+0x8]
   1400078b8:	movabs r10,0x6666666666666667
   1400078c2:	mov    r9,rcx
   1400078c5:	sub    rdx,QWORD PTR [rcx]
   1400078c8:	mov    rax,r10
   1400078cb:	imul   rdx
   1400078ce:	mov    r8,rdx
   1400078d1:	sar    r8,0x4
   1400078d5:	mov    rax,r8
   1400078d8:	shr    rax,0x3f
   1400078dc:	add    r8,rax
   1400078df:	movabs rax,0x666666666666665
   1400078e9:	cmp    r8,rax
   1400078ec:	jbe    0x1400078fc
   1400078ee:	lea    rcx,[rip+0x49063]        # 0x140050958
   1400078f5:	call   QWORD PTR [rip+0x41c9d]        # 0x140049598
   1400078fb:	int3   
   1400078fc:	mov    rcx,QWORD PTR [rcx+0x10]
   140007900:	mov    rax,r10
   140007903:	inc    r8
   140007906:	sub    rcx,QWORD PTR [r9]
   140007909:	imul   rcx
   14000790c:	sar    rdx,0x4
   140007910:	mov    rax,rdx
   140007913:	shr    rax,0x3f
   140007917:	add    rdx,rax
   14000791a:	cmp    r8,rdx
   14000791d:	jbe    0x14000794d
   14000791f:	mov    rcx,rdx
   140007922:	movabs rax,0x666666666666666
   14000792c:	shr    rcx,1
   14000792f:	sub    rax,rcx
   140007932:	cmp    rax,rdx
   140007935:	jae    0x14000793b
   140007937:	xor    edx,edx
   140007939:	jmp    0x14000793e
   14000793b:	add    rdx,rcx
   14000793e:	cmp    rdx,r8
   140007941:	mov    rcx,r9
   140007944:	cmovb  rdx,r8
   140007948:	call   0x140007954
   14000794d:	add    rsp,0x28
   140007951:	ret    
   140007952:	int3   
   140007953:	int3   
   140007954:	push   r12
   140007956:	push   r13
   140007958:	push   r14
   14000795a:	sub    rsp,0x40
   14000795e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007967:	mov    QWORD PTR [rsp+0x60],rbx
   14000796c:	mov    QWORD PTR [rsp+0x70],rsi
   140007971:	mov    QWORD PTR [rsp+0x78],rdi
   140007976:	mov    rdi,rdx
   140007979:	mov    rsi,rcx
   14000797c:	movabs rax,0x666666666666666
   140007986:	cmp    rdx,rax
   140007989:	jbe    0x140007999
   14000798b:	lea    rcx,[rip+0x48fc6]        # 0x140050958
   140007992:	call   QWORD PTR [rip+0x41c00]        # 0x140049598
   140007998:	int3   
   140007999:	mov    rcx,QWORD PTR [rcx+0x10]
   14000799d:	sub    rcx,QWORD PTR [rsi]
   1400079a0:	movabs r14,0x6666666666666667
   1400079aa:	mov    rax,r14
   1400079ad:	imul   rcx
   1400079b0:	sar    rdx,0x4
   1400079b4:	mov    rax,rdx
   1400079b7:	shr    rax,0x3f
   1400079bb:	add    rdx,rax
   1400079be:	cmp    rdx,rdi
   1400079c1:	jae    0x140007a91
   1400079c7:	xor    ebx,ebx
   1400079c9:	mov    QWORD PTR [rsp+0x68],rbx
   1400079ce:	test   rdi,rdi
   1400079d1:	je     0x140007a21
   1400079d3:	lea    rcx,[rdi+rdi*4]
   1400079d7:	shl    rcx,0x3
   1400079db:	call   QWORD PTR [rip+0x41cb7]        # 0x140049698
   1400079e1:	mov    rbx,rax
   1400079e4:	mov    QWORD PTR [rsp+0x68],rax
   1400079e9:	test   rax,rax
   1400079ec:	jne    0x140007a21
   1400079ee:	and    QWORD PTR [rsp+0x68],rax
   1400079f3:	lea    rdx,[rsp+0x68]
   1400079f8:	lea    rcx,[rsp+0x28]
   1400079fd:	call   QWORD PTR [rip+0x41ecd]        # 0x1400498d0
   140007a03:	lea    r11,[rip+0x427ce]        # 0x14004a1d8
   140007a0a:	mov    QWORD PTR [rsp+0x28],r11
   140007a0f:	lea    rdx,[rip+0x5bd32]        # 0x140063748
   140007a16:	lea    rcx,[rsp+0x28]
   140007a1b:	call   0x14002b560
   140007a20:	nop
   140007a21:	mov    r8,rbx
   140007a24:	mov    rdx,QWORD PTR [rsi+0x8]
   140007a28:	mov    rcx,QWORD PTR [rsi]
   140007a2b:	call   0x1400085d4
   140007a30:	nop
   140007a31:	mov    r13,QWORD PTR [rsi+0x8]
   140007a35:	mov    r12,QWORD PTR [rsi]
   140007a38:	mov    rcx,r13
   140007a3b:	sub    rcx,r12
   140007a3e:	mov    rax,r14
   140007a41:	imul   rcx
   140007a44:	mov    r14,rdx
   140007a47:	sar    r14,0x4
   140007a4b:	mov    rax,r14
   140007a4e:	shr    rax,0x3f
   140007a52:	add    r14,rax
   140007a55:	test   r12,r12
   140007a58:	je     0x140007a76
   140007a5a:	jmp    0x140007a68
   140007a5c:	mov    rcx,r12
   140007a5f:	call   0x14000638c
   140007a64:	add    r12,0x28
   140007a68:	cmp    r12,r13
   140007a6b:	jne    0x140007a5c
   140007a6d:	mov    rcx,QWORD PTR [rsi]
   140007a70:	call   QWORD PTR [rip+0x41c02]        # 0x140049678
   140007a76:	lea    rax,[rdi+rdi*4]
   140007a7a:	lea    rcx,[rbx+rax*8]
   140007a7e:	mov    QWORD PTR [rsi+0x10],rcx
   140007a82:	lea    rax,[r14+r14*4]
   140007a86:	lea    rcx,[rbx+rax*8]
   140007a8a:	mov    QWORD PTR [rsi+0x8],rcx
   140007a8e:	mov    QWORD PTR [rsi],rbx
   140007a91:	mov    rbx,QWORD PTR [rsp+0x60]
   140007a96:	mov    rsi,QWORD PTR [rsp+0x70]
   140007a9b:	mov    rdi,QWORD PTR [rsp+0x78]
   140007aa0:	add    rsp,0x40
   140007aa4:	pop    r14
   140007aa6:	pop    r13
   140007aa8:	pop    r12
   140007aaa:	ret    
   140007aab:	int3   
   140007aac:	mov    rax,rsp
   140007aaf:	mov    QWORD PTR [rax+0x8],rbx
   140007ab3:	push   rdi
   140007ab4:	sub    rsp,0x50
   140007ab8:	and    QWORD PTR [rax-0x28],0x0
   140007abd:	mov    rdi,rcx
   140007ac0:	lea    rcx,[rax-0x38]
   140007ac4:	or     r9,0xffffffffffffffff
   140007ac8:	xor    r8d,r8d
   140007acb:	mov    rbx,rdx
   140007ace:	mov    QWORD PTR [rax-0x20],0xf
   140007ad6:	mov    BYTE PTR [rax-0x38],0x0
   140007ada:	call   0x1400048b8
   140007adf:	cmp    QWORD PTR [rsp+0x38],0x10
   140007ae5:	jb     0x140007af2
   140007ae7:	mov    rcx,QWORD PTR [rsp+0x20]
   140007aec:	call   QWORD PTR [rip+0x41b86]        # 0x140049678
   140007af2:	cmp    QWORD PTR [rbx+0x18],0x10
   140007af7:	jb     0x140007afe
   140007af9:	mov    rax,QWORD PTR [rbx]
   140007afc:	jmp    0x140007b01
   140007afe:	mov    rax,rbx
   140007b01:	mov    QWORD PTR [rdi],rax
   140007b04:	cmp    QWORD PTR [rbx+0x18],0x10
   140007b09:	jb     0x140007b10
   140007b0b:	mov    rcx,QWORD PTR [rbx]
   140007b0e:	jmp    0x140007b13
   140007b10:	mov    rcx,rbx
   140007b13:	add    rcx,QWORD PTR [rbx+0x10]
   140007b17:	mov    rbx,QWORD PTR [rsp+0x60]
   140007b1c:	mov    rax,rdi
   140007b1f:	mov    QWORD PTR [rdi+0x8],rcx
   140007b23:	add    rsp,0x50
   140007b27:	pop    rdi
   140007b28:	ret    
   140007b29:	int3   
   140007b2a:	int3   
   140007b2b:	int3   
   140007b2c:	mov    rax,rsp
   140007b2f:	mov    QWORD PTR [rax+0x10],rdx
   140007b33:	mov    QWORD PTR [rax+0x8],rcx
   140007b37:	push   rdi
   140007b38:	sub    rsp,0x30
   140007b3c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007b45:	mov    QWORD PTR [rax+0x18],rbx
   140007b49:	mov    rdi,rdx
   140007b4c:	mov    rbx,rcx
   140007b4f:	and    DWORD PTR [rax+0x20],0x0
   140007b53:	and    QWORD PTR [rcx],0x0
   140007b57:	mov    rax,QWORD PTR [rdx]
   140007b5a:	test   rax,rax
   140007b5d:	je     0x140007b8c
   140007b5f:	mov    QWORD PTR [rcx],rax
   140007b62:	test   al,0x1
   140007b64:	je     0x140007b7b
   140007b66:	add    rcx,0x8
   140007b6a:	add    rdx,0x8
   140007b6e:	mov    r8d,0x20
   140007b74:	call   0x14002b120
   140007b79:	jmp    0x140007b8c
   140007b7b:	and    rax,0xfffffffffffffffe
   140007b7f:	lea    rdx,[rcx+0x8]
   140007b83:	lea    rcx,[rdi+0x8]
   140007b87:	xor    r8d,r8d
   140007b8a:	call   QWORD PTR [rax]
   140007b8c:	movups xmm0,XMMWORD PTR [rdi+0x28]
   140007b90:	movdqu XMMWORD PTR [rbx+0x28],xmm0
   140007b95:	mov    rax,QWORD PTR [rdi+0x38]
   140007b99:	mov    QWORD PTR [rbx+0x38],rax
   140007b9d:	mov    rax,QWORD PTR [rdi+0x40]
   140007ba1:	mov    QWORD PTR [rbx+0x40],rax
   140007ba5:	mov    al,BYTE PTR [rdi+0x48]
   140007ba8:	mov    BYTE PTR [rbx+0x48],al
   140007bab:	mov    DWORD PTR [rsp+0x58],0x1
   140007bb3:	mov    rax,QWORD PTR [rdi]
   140007bb6:	test   rax,rax
   140007bb9:	je     0x140007bdf
   140007bbb:	test   al,0x1
   140007bbd:	jne    0x140007bdb
   140007bbf:	lea    rcx,[rdi+0x8]
   140007bc3:	and    rax,0xfffffffffffffffe
   140007bc7:	mov    r9,QWORD PTR [rax]
   140007bca:	test   r9,r9
   140007bcd:	je     0x140007bdb
   140007bcf:	mov    r8d,0x2
   140007bd5:	mov    rdx,rcx
   140007bd8:	call   r9
   140007bdb:	and    QWORD PTR [rdi],0x0
   140007bdf:	mov    rax,rbx
   140007be2:	mov    rbx,QWORD PTR [rsp+0x50]
   140007be7:	add    rsp,0x30
   140007beb:	pop    rdi
   140007bec:	ret    
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	mov    QWORD PTR [rsp+0x18],r8
   140007bf5:	push   rbx
   140007bf6:	push   rsi
   140007bf7:	push   rdi
   140007bf8:	sub    rsp,0x30
   140007bfc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007c05:	mov    rbx,r8
   140007c08:	mov    rsi,rdx
   140007c0b:	mov    rdi,rcx
   140007c0e:	mov    QWORD PTR [rsp+0x50],rbx
   140007c13:	cmp    rdi,rsi
   140007c16:	je     0x140007c6b
   140007c18:	mov    QWORD PTR [rsp+0x58],rbx
   140007c1d:	test   rbx,rbx
   140007c20:	je     0x140007c5c
   140007c22:	mov    QWORD PTR [rbx+0x18],0xf
   140007c2a:	and    QWORD PTR [rbx+0x10],0x0
   140007c2f:	mov    BYTE PTR [rbx],0x0
   140007c32:	mov    rdx,rdi
   140007c35:	mov    rcx,rbx
   140007c38:	call   0x140004730
   140007c3d:	nop
   140007c3e:	lea    rcx,[rbx+0x28]
   140007c42:	mov    QWORD PTR [rcx+0x18],0xf
   140007c4a:	and    QWORD PTR [rcx+0x10],0x0
   140007c4f:	mov    BYTE PTR [rcx],0x0
   140007c52:	lea    rdx,[rdi+0x28]
   140007c56:	call   0x140004730
   140007c5b:	nop
   140007c5c:	add    rbx,0x50
   140007c60:	mov    QWORD PTR [rsp+0x60],rbx
   140007c65:	add    rdi,0x50
   140007c69:	jmp    0x140007c13
   140007c6b:	mov    rax,rbx
   140007c6e:	add    rsp,0x30
   140007c72:	pop    rdi
   140007c73:	pop    rsi
   140007c74:	pop    rbx
   140007c75:	ret    
   140007c76:	int3   
   140007c77:	int3   
   140007c78:	mov    QWORD PTR [rsp+0x10],rbx
   140007c7d:	mov    QWORD PTR [rsp+0x20],r9
   140007c82:	mov    QWORD PTR [rsp+0x18],r8
   140007c87:	push   rbp
   140007c88:	push   rsi
   140007c89:	push   rdi
   140007c8a:	push   r12
   140007c8c:	push   r13
   140007c8e:	mov    rbp,rsp
   140007c91:	sub    rsp,0x40
   140007c95:	mov    r8,QWORD PTR [rcx+0x10]
   140007c99:	and    QWORD PTR [rbp-0x20],0x0
   140007c9e:	mov    rbx,rdx
   140007ca1:	mov    rdi,rcx
   140007ca4:	mov    QWORD PTR [rbp-0x10],r8
   140007ca8:	cmp    r8,0x10
   140007cac:	ja     0x140007cb7
   140007cae:	lea    rax,[rbp-0x20]
   140007cb2:	mov    rdx,rcx
   140007cb5:	jmp    0x140007cca
   140007cb7:	mov    rcx,r8
   140007cba:	call   0x14002b058
   140007cbf:	mov    rdx,QWORD PTR [rdi]
   140007cc2:	mov    r8,QWORD PTR [rbp-0x10]
   140007cc6:	mov    QWORD PTR [rbp-0x20],rax
   140007cca:	mov    rcx,rax
   140007ccd:	call   QWORD PTR [rip+0x41bf5]        # 0x1400498c8
   140007cd3:	mov    r8,QWORD PTR [rbp+0x48]
   140007cd7:	mov    rdx,QWORD PTR [rbp+0x40]
   140007cdb:	lea    r9,[rbp-0x20]
   140007cdf:	lea    rcx,[rbp+0x30]
   140007ce3:	call   0x140008198
   140007ce8:	mov    r11,QWORD PTR [rbp+0x30]
   140007cec:	mov    r8,QWORD PTR [rbp+0x48]
   140007cf0:	cmp    r11,r8
   140007cf3:	jne    0x140007cfe
   140007cf5:	mov    QWORD PTR [rbx],r8
   140007cf8:	mov    QWORD PTR [rbx+0x8],r8
   140007cfc:	jmp    0x140007d71
   140007cfe:	cmp    DWORD PTR [rdi+0x18],0x0
   140007d02:	mov    rcx,r11
   140007d05:	jne    0x140007d66
   140007d07:	mov    r12,QWORD PTR [rdi+0x10]
   140007d0b:	mov    r13b,BYTE PTR [rcx]
   140007d0e:	mov    r9,rdi
   140007d11:	cmp    r12,0x10
   140007d15:	jbe    0x140007d1a
   140007d17:	mov    r9,QWORD PTR [rdi]
   140007d1a:	lea    rsi,[r12+r9*1]
   140007d1e:	mov    r10,rsi
   140007d21:	sub    r10,r9
   140007d24:	jmp    0x140007d4d
   140007d26:	mov    rax,r10
   140007d29:	cqo    
   140007d2b:	sub    rax,rdx
   140007d2e:	sar    rax,1
   140007d31:	lea    rdx,[rax+r9*1]
   140007d35:	cmp    BYTE PTR [rdx],r13b
   140007d38:	jge    0x140007d4a
   140007d3a:	lea    r9,[rdx+0x1]
   140007d3e:	or     rdx,0xffffffffffffffff
   140007d42:	sub    rdx,rax
   140007d45:	add    r10,rdx
   140007d48:	jmp    0x140007d4d
   140007d4a:	mov    r10,rax
   140007d4d:	test   r10,r10
   140007d50:	jg     0x140007d26
   140007d52:	cmp    r9,rsi
   140007d55:	je     0x140007d6a
   140007d57:	cmp    r13b,BYTE PTR [r9]
   140007d5a:	jl     0x140007d6a
   140007d5c:	inc    rcx
   140007d5f:	cmp    rcx,r8
   140007d62:	jne    0x140007d0b
   140007d64:	jmp    0x140007d6a
   140007d66:	lea    rcx,[r11+0x1]
   140007d6a:	mov    QWORD PTR [rbx],r11
   140007d6d:	mov    QWORD PTR [rbx+0x8],rcx
   140007d71:	mov    rax,rbx
   140007d74:	mov    rbx,QWORD PTR [rsp+0x78]
   140007d79:	add    rsp,0x40
   140007d7d:	pop    r13
   140007d7f:	pop    r12
   140007d81:	pop    rdi
   140007d82:	pop    rsi
   140007d83:	pop    rbp
   140007d84:	ret    
   140007d85:	int3   
   140007d86:	int3   
   140007d87:	int3   
   140007d88:	mov    QWORD PTR [rsp+0x8],rcx
   140007d8d:	sub    rsp,0x38
   140007d91:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007d9a:	mov    QWORD PTR [rsp+0x50],rcx
   140007d9f:	test   rcx,rcx
   140007da2:	je     0x140007dba
   140007da4:	mov    QWORD PTR [rcx+0x18],0xf
   140007dac:	and    QWORD PTR [rcx+0x10],0x0
   140007db1:	mov    BYTE PTR [rcx],0x0
   140007db4:	call   0x140004730
   140007db9:	nop
   140007dba:	add    rsp,0x38
   140007dbe:	ret    
   140007dbf:	int3   
   140007dc0:	mov    QWORD PTR [rsp+0x18],rbx
   140007dc5:	mov    QWORD PTR [rsp+0x20],rbp
   140007dca:	push   rdi
   140007dcb:	sub    rsp,0x30
   140007dcf:	mov    rax,rdx
   140007dd2:	mov    rdi,r8
   140007dd5:	mov    rbp,rdx
   140007dd8:	sub    rax,rcx
   140007ddb:	mov    rbx,rcx
   140007dde:	cmp    rax,0x20
   140007de2:	jle    0x140007f9f
   140007de8:	test   rdi,rdi
   140007deb:	jle    0x140007e60
   140007ded:	lea    rcx,[rsp+0x20]
   140007df2:	mov    r8,rbp
   140007df5:	mov    rdx,rbx
   140007df8:	call   0x140008358
   140007dfd:	mov    rax,rdi
   140007e00:	mov    rcx,rbp
   140007e03:	sub    rcx,QWORD PTR [rsp+0x28]
   140007e08:	cqo    
   140007e0a:	sub    rax,rdx
   140007e0d:	sar    rax,1
   140007e10:	mov    rdi,rax
   140007e13:	cqo    
   140007e15:	sub    rax,rdx
   140007e18:	sar    rax,1
   140007e1b:	add    rdi,rax
   140007e1e:	mov    rax,QWORD PTR [rsp+0x20]
   140007e23:	sub    rax,rbx
   140007e26:	mov    r8,rdi
   140007e29:	cmp    rax,rcx
   140007e2c:	jge    0x140007e42
   140007e2e:	mov    rdx,QWORD PTR [rsp+0x20]
   140007e33:	mov    rcx,rbx
   140007e36:	call   0x140007dc0
   140007e3b:	mov    rbx,QWORD PTR [rsp+0x28]
   140007e40:	jmp    0x140007e54
   140007e42:	mov    rcx,QWORD PTR [rsp+0x28]
   140007e47:	mov    rdx,rbp
   140007e4a:	call   0x140007dc0
   140007e4f:	mov    rbp,QWORD PTR [rsp+0x20]
   140007e54:	mov    rax,rbp
   140007e57:	sub    rax,rbx
   140007e5a:	cmp    rax,0x20
   140007e5e:	jg     0x140007de8
   140007e60:	cmp    rax,0x20
   140007e64:	jle    0x140007f9f
   140007e6a:	mov    rcx,rbp
   140007e6d:	sub    rcx,rbx
   140007e70:	cmp    rcx,0x1
   140007e74:	jle    0x140008013
   140007e7a:	mov    rax,rcx
   140007e7d:	cqo    
   140007e7f:	sub    rax,rdx
   140007e82:	sar    rax,1
   140007e85:	mov    r8,rax
   140007e88:	test   rax,rax
   140007e8b:	jle    0x140007f07
   140007e8d:	lea    r10,[rax+rax*1+0x2]
   140007e92:	dec    r8
   140007e95:	sub    r10,0x2
   140007e99:	mov    r11b,BYTE PTR [r8+rbx*1]
   140007e9d:	mov    r9,r8
   140007ea0:	mov    rdx,r10
   140007ea3:	cmp    r10,rcx
   140007ea6:	jge    0x140007ec8
   140007ea8:	mov    al,BYTE PTR [rbx+rdx*1-0x1]
   140007eac:	cmp    BYTE PTR [rdx+rbx*1],al
   140007eaf:	jge    0x140007eb4
   140007eb1:	dec    rdx
   140007eb4:	mov    al,BYTE PTR [rdx+rbx*1]
   140007eb7:	mov    BYTE PTR [r9+rbx*1],al
   140007ebb:	mov    r9,rdx
   140007ebe:	lea    rdx,[rdx+rdx*1+0x2]
   140007ec3:	cmp    rdx,rcx
   140007ec6:	jl     0x140007ea8
   140007ec8:	cmp    rdx,rcx
   140007ecb:	jne    0x140007ed9
   140007ecd:	mov    al,BYTE PTR [rcx+rbx*1-0x1]
   140007ed1:	mov    BYTE PTR [r9+rbx*1],al
   140007ed5:	lea    r9,[rcx-0x1]
   140007ed9:	lea    rax,[r9-0x1]
   140007edd:	jmp    0x140007ef1
   140007edf:	mov    dl,BYTE PTR [rax+rbx*1]
   140007ee2:	cmp    dl,r11b
   140007ee5:	jge    0x140007efe
   140007ee7:	mov    BYTE PTR [r9+rbx*1],dl
   140007eeb:	mov    r9,rax
   140007eee:	dec    rax
   140007ef1:	cqo    
   140007ef3:	sub    rax,rdx
   140007ef6:	sar    rax,1
   140007ef9:	cmp    r8,r9
   140007efc:	jl     0x140007edf
   140007efe:	mov    BYTE PTR [r9+rbx*1],r11b
   140007f02:	test   r8,r8
   140007f05:	jg     0x140007e92
   140007f07:	cmp    rcx,0x1
   140007f0b:	jle    0x140008013
   140007f11:	mov    r10,rbx
   140007f14:	mov    r9d,0x1
   140007f1a:	dec    rbp
   140007f1d:	neg    r10
   140007f20:	sub    r9,rbx
   140007f23:	mov    al,BYTE PTR [rbx]
   140007f25:	mov    r11b,BYTE PTR [rbp+0x0]
   140007f29:	xor    r8d,r8d
   140007f2c:	lea    rdx,[r10+rbp*1]
   140007f30:	lea    ecx,[r8+0x2]
   140007f34:	mov    BYTE PTR [rbp+0x0],al
   140007f37:	jmp    0x140007f54
   140007f39:	mov    al,BYTE PTR [rbx+rcx*1-0x1]
   140007f3d:	cmp    BYTE PTR [rcx+rbx*1],al
   140007f40:	jge    0x140007f45
   140007f42:	dec    rcx
   140007f45:	mov    al,BYTE PTR [rcx+rbx*1]
   140007f48:	mov    BYTE PTR [r8+rbx*1],al
   140007f4c:	mov    r8,rcx
   140007f4f:	lea    rcx,[rcx+rcx*1+0x2]
   140007f54:	cmp    rcx,rdx
   140007f57:	jl     0x140007f39
   140007f59:	jne    0x140007f67
   140007f5b:	mov    al,BYTE PTR [rdx+rbx*1-0x1]
   140007f5f:	mov    BYTE PTR [r8+rbx*1],al
   140007f63:	lea    r8,[rdx-0x1]
   140007f67:	lea    rax,[r8-0x1]
   140007f6b:	jmp    0x140007f7f
   140007f6d:	mov    cl,BYTE PTR [rax+rbx*1]
   140007f70:	cmp    cl,r11b
   140007f73:	jge    0x140007f8c
   140007f75:	mov    BYTE PTR [r8+rbx*1],cl
   140007f79:	mov    r8,rax
   140007f7c:	dec    rax
   140007f7f:	cqo    
   140007f81:	sub    rax,rdx
   140007f84:	sar    rax,1
   140007f87:	test   r8,r8
   140007f8a:	jg     0x140007f6d
   140007f8c:	dec    rbp
   140007f8f:	mov    BYTE PTR [r8+rbx*1],r11b
   140007f93:	lea    rax,[r9+rbp*1]
   140007f97:	cmp    rax,0x1
   140007f9b:	jg     0x140007f23
   140007f9d:	jmp    0x140008013
   140007f9f:	cmp    rax,0x1
   140007fa3:	jle    0x140008013
   140007fa5:	cmp    rbx,rbp
   140007fa8:	je     0x140008013
   140007faa:	lea    rdi,[rbx+0x1]
   140007fae:	cmp    rdi,rbp
   140007fb1:	je     0x140008013
   140007fb3:	mov    ecx,0x1
   140007fb8:	sub    rcx,rbx
   140007fbb:	mov    QWORD PTR [rsp+0x48],rcx
   140007fc0:	mov    al,BYTE PTR [rdi]
   140007fc2:	mov    r8,rdi
   140007fc5:	mov    BYTE PTR [rsp+0x40],al
   140007fc9:	cmp    al,BYTE PTR [rbx]
   140007fcb:	jge    0x140007fee
   140007fcd:	lea    r8,[rcx+rdi*1-0x1]
   140007fd2:	mov    rcx,rdi
   140007fd5:	mov    rdx,rbx
   140007fd8:	sub    rcx,r8
   140007fdb:	inc    rcx
   140007fde:	call   QWORD PTR [rip+0x4160c]        # 0x1400495f0
   140007fe4:	mov    r11b,BYTE PTR [rsp+0x40]
   140007fe9:	mov    BYTE PTR [rbx],r11b
   140007fec:	jmp    0x140008006
   140007fee:	lea    rcx,[rdi-0x1]
   140007ff2:	jmp    0x140007ffd
   140007ff4:	mov    BYTE PTR [r8],dl
   140007ff7:	mov    r8,rcx
   140007ffa:	dec    rcx
   140007ffd:	mov    dl,BYTE PTR [rcx]
   140007fff:	cmp    al,dl
   140008001:	jl     0x140007ff4
   140008003:	mov    BYTE PTR [r8],al
   140008006:	mov    rcx,QWORD PTR [rsp+0x48]
   14000800b:	inc    rdi
   14000800e:	cmp    rdi,rbp
   140008011:	jne    0x140007fc0
   140008013:	mov    rbx,QWORD PTR [rsp+0x50]
   140008018:	mov    rbp,QWORD PTR [rsp+0x58]
   14000801d:	add    rsp,0x30
   140008021:	pop    rdi
   140008022:	ret    
   140008023:	int3   
   140008024:	mov    r11,rsp
   140008027:	mov    QWORD PTR [r11+0x18],r8
   14000802b:	mov    QWORD PTR [r11+0x10],rdx
   14000802f:	mov    QWORD PTR [r11+0x8],rcx
   140008033:	push   rbx
   140008034:	push   rsi
   140008035:	push   rdi
   140008036:	push   r12
   140008038:	push   r13
   14000803a:	push   r14
   14000803c:	push   r15
   14000803e:	sub    rsp,0x1a0
   140008045:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000804e:	mov    rsi,r8
   140008051:	mov    r12,rdx
   140008054:	mov    r13,rcx
   140008057:	lea    rax,[rsp+0x38]
   14000805c:	mov    QWORD PTR [r11+0x20],rax
   140008060:	mov    rbx,QWORD PTR [rcx]
   140008063:	mov    rdx,r8
   140008066:	lea    rcx,[rsp+0x38]
   14000806b:	call   0x1400076fc
   140008070:	mov    r14,rax
   140008073:	mov    QWORD PTR [rsp+0x20],rax
   140008078:	mov    rdx,r12
   14000807b:	lea    rcx,[rsp+0xe8]
   140008083:	call   0x1400076fc
   140008088:	mov    rdi,rax
   14000808b:	mov    QWORD PTR [rsp+0x1f8],rax
   140008093:	lea    rax,[rsp+0x90]
   14000809b:	mov    QWORD PTR [rsp+0x30],rax
   1400080a0:	mov    rdx,r14
   1400080a3:	lea    rcx,[rsp+0x90]
   1400080ab:	call   0x1400076fc
   1400080b0:	mov    r15,rax
   1400080b3:	mov    rdx,rdi
   1400080b6:	lea    rcx,[rsp+0x140]
   1400080be:	call   0x1400076fc
   1400080c3:	nop
   1400080c4:	mov    r9,r15
   1400080c7:	mov    r8,rax
   1400080ca:	mov    rdx,rbx
   1400080cd:	mov    rcx,r13
   1400080d0:	call   0x140008bd0
   1400080d5:	nop
   1400080d6:	mov    rax,QWORD PTR [rdi]
   1400080d9:	xor    ebx,ebx
   1400080db:	test   rax,rax
   1400080de:	je     0x140008101
   1400080e0:	test   al,0x1
   1400080e2:	jne    0x1400080fe
   1400080e4:	lea    rcx,[rdi+0x8]
   1400080e8:	and    rax,0xfffffffffffffffe
   1400080ec:	mov    r9,QWORD PTR [rax]
   1400080ef:	test   r9,r9
   1400080f2:	je     0x1400080fe
   1400080f4:	lea    r8d,[rbx+0x2]
   1400080f8:	mov    rdx,rcx
   1400080fb:	call   r9
   1400080fe:	mov    QWORD PTR [rdi],rbx
   140008101:	mov    rax,QWORD PTR [r14]
   140008104:	test   rax,rax
   140008107:	je     0x14000812c
   140008109:	test   al,0x1
   14000810b:	jne    0x140008129
   14000810d:	lea    rcx,[r14+0x8]
   140008111:	and    rax,0xfffffffffffffffe
   140008115:	mov    r9,QWORD PTR [rax]
   140008118:	test   r9,r9
   14000811b:	je     0x140008129
   14000811d:	mov    r8d,0x2
   140008123:	mov    rdx,rcx
   140008126:	call   r9
   140008129:	mov    QWORD PTR [r14],rbx
   14000812c:	mov    rax,QWORD PTR [r12]
   140008130:	test   rax,rax
   140008133:	je     0x14000815a
   140008135:	test   al,0x1
   140008137:	jne    0x140008156
   140008139:	lea    rcx,[r12+0x8]
   14000813e:	and    rax,0xfffffffffffffffe
   140008142:	mov    r9,QWORD PTR [rax]
   140008145:	test   r9,r9
   140008148:	je     0x140008156
   14000814a:	mov    r8d,0x2
   140008150:	mov    rdx,rcx
   140008153:	call   r9
   140008156:	mov    QWORD PTR [r12],rbx
   14000815a:	mov    rax,QWORD PTR [rsi]
   14000815d:	test   rax,rax
   140008160:	je     0x140008185
   140008162:	test   al,0x1
   140008164:	jne    0x140008182
   140008166:	lea    rcx,[rsi+0x8]
   14000816a:	and    rax,0xfffffffffffffffe
   14000816e:	mov    r9,QWORD PTR [rax]
   140008171:	test   r9,r9
   140008174:	je     0x140008182
   140008176:	mov    r8d,0x2
   14000817c:	mov    rdx,rcx
   14000817f:	call   r9
   140008182:	mov    QWORD PTR [rsi],rbx
   140008185:	add    rsp,0x1a0
   14000818c:	pop    r15
   14000818e:	pop    r14
   140008190:	pop    r13
   140008192:	pop    r12
   140008194:	pop    rdi
   140008195:	pop    rsi
   140008196:	pop    rbx
   140008197:	ret    
   140008198:	mov    QWORD PTR [rsp+0x18],r8
   14000819d:	mov    QWORD PTR [rsp+0x10],rdx
   1400081a2:	push   rbp
   1400081a3:	push   rbx
   1400081a4:	push   rsi
   1400081a5:	push   rdi
   1400081a6:	push   r12
   1400081a8:	mov    rbp,rsp
   1400081ab:	sub    rsp,0x50
   1400081af:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   1400081b7:	mov    rax,QWORD PTR [rip+0x60032]        # 0x1400681f0
   1400081be:	xor    rax,rsp
   1400081c1:	mov    QWORD PTR [rbp-0x8],rax
   1400081c5:	mov    rdi,r9
   1400081c8:	mov    rsi,rcx
   1400081cb:	mov    QWORD PTR [rbp-0x10],r9
   1400081cf:	mov    r8,QWORD PTR [r9+0x10]
   1400081d3:	mov    QWORD PTR [rbp-0x20],r8
   1400081d7:	and    QWORD PTR [rbp-0x30],0x0
   1400081dc:	cmp    r8,0x10
   1400081e0:	ja     0x1400081eb
   1400081e2:	lea    rax,[rbp-0x30]
   1400081e6:	mov    rdx,r9
   1400081e9:	jmp    0x1400081fe
   1400081eb:	mov    rcx,r8
   1400081ee:	call   0x14002b058
   1400081f3:	mov    QWORD PTR [rbp-0x30],rax
   1400081f7:	mov    rdx,QWORD PTR [rdi]
   1400081fa:	mov    r8,QWORD PTR [rbp-0x20]
   1400081fe:	mov    rcx,rax
   140008201:	call   QWORD PTR [rip+0x416c1]        # 0x1400498c8
   140008207:	mov    rbx,QWORD PTR [rbp+0x38]
   14000820b:	mov    r10,QWORD PTR [rbp-0x20]
   14000820f:	mov    r9,QWORD PTR [rbp-0x30]
   140008213:	jmp    0x14000826a
   140008215:	mov    r11b,BYTE PTR [rbx]
   140008218:	lea    r8,[rbp-0x30]
   14000821c:	cmp    r10,0x10
   140008220:	cmova  r8,r9
   140008224:	lea    r12,[r10+r8*1]
   140008228:	mov    rcx,r12
   14000822b:	sub    rcx,r8
   14000822e:	jmp    0x140008258
   140008230:	mov    rax,rcx
   140008233:	cqo    
   140008235:	sub    rax,rdx
   140008238:	sar    rax,1
   14000823b:	mov    rdx,rax
   14000823e:	cmp    BYTE PTR [rax+r8*1],r11b
   140008242:	jge    0x140008255
   140008244:	lea    r8,[rax+r8*1+0x1]
   140008249:	or     rax,0xffffffffffffffff
   14000824d:	sub    rax,rdx
   140008250:	add    rcx,rax
   140008253:	jmp    0x140008258
   140008255:	mov    rcx,rax
   140008258:	test   rcx,rcx
   14000825b:	jg     0x140008230
   14000825d:	cmp    r8,r12
   140008260:	je     0x140008267
   140008262:	cmp    r11b,BYTE PTR [r8]
   140008265:	jge    0x140008270
   140008267:	inc    rbx
   14000826a:	cmp    rbx,QWORD PTR [rbp+0x40]
   14000826e:	jne    0x140008215
   140008270:	cmp    r10,0x10
   140008274:	jbe    0x140008284
   140008276:	test   r9,r9
   140008279:	je     0x140008284
   14000827b:	mov    rcx,r9
   14000827e:	call   QWORD PTR [rip+0x413e4]        # 0x140049668
   140008284:	mov    QWORD PTR [rbp+0x38],rbx
   140008288:	mov    QWORD PTR [rsi],rbx
   14000828b:	cmp    QWORD PTR [rdi+0x10],0x10
   140008290:	jbe    0x1400082a0
   140008292:	mov    rcx,QWORD PTR [rdi]
   140008295:	test   rcx,rcx
   140008298:	je     0x1400082a0
   14000829a:	call   QWORD PTR [rip+0x413c8]        # 0x140049668
   1400082a0:	mov    rax,rsi
   1400082a3:	mov    rcx,QWORD PTR [rbp-0x8]
   1400082a7:	xor    rcx,rsp
   1400082aa:	call   0x14002b100
   1400082af:	add    rsp,0x50
   1400082b3:	pop    r12
   1400082b5:	pop    rdi
   1400082b6:	pop    rsi
   1400082b7:	pop    rbx
   1400082b8:	pop    rbp
   1400082b9:	ret    
   1400082ba:	int3   
   1400082bb:	int3   
   1400082bc:	mov    r11,rsp
   1400082bf:	push   rbx
   1400082c0:	sub    rsp,0xd0
   1400082c7:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400082d0:	mov    rbx,rdx
   1400082d3:	mov    rax,QWORD PTR [rcx]
   1400082d6:	test   rax,rax
   1400082d9:	jne    0x140008333
   1400082db:	lea    rax,[rip+0x485ee]        # 0x1400508d0
   1400082e2:	mov    QWORD PTR [r11+0x8],rax
   1400082e6:	lea    rdx,[r11+0x8]
   1400082ea:	lea    rcx,[rsp+0x20]
   1400082ef:	call   QWORD PTR [rip+0x415db]        # 0x1400498d0
   1400082f5:	lea    r11,[rip+0x48754]        # 0x140050a50
   1400082fc:	mov    QWORD PTR [rsp+0x20],r11
   140008301:	lea    rdx,[rsp+0x20]
   140008306:	lea    rcx,[rsp+0x88]
   14000830e:	call   0x140008db4
   140008313:	nop
   140008314:	mov    rdx,rax
   140008317:	lea    rcx,[rsp+0x40]
   14000831c:	call   0x140008e04
   140008321:	lea    rdx,[rip+0x5b548]        # 0x140063870
   140008328:	lea    rcx,[rsp+0x40]
   14000832d:	call   0x14002b560
   140008332:	nop
   140008333:	and    rax,0xfffffffffffffffe
   140008337:	lea    rdx,[rcx+0x8]
   14000833b:	lea    rcx,[rsp+0x20]
   140008340:	call   QWORD PTR [rax+0x8]
   140008343:	movups xmm0,XMMWORD PTR [rax]
   140008346:	movdqu XMMWORD PTR [rbx],xmm0
   14000834a:	mov    rax,rbx
   14000834d:	add    rsp,0xd0
   140008354:	pop    rbx
   140008355:	ret    
   140008356:	int3   
   140008357:	int3   
   140008358:	mov    rax,rsp
   14000835b:	mov    QWORD PTR [rax+0x8],rbx
   14000835f:	mov    QWORD PTR [rax+0x10],rbp
   140008363:	mov    QWORD PTR [rax+0x18],rsi
   140008367:	mov    QWORD PTR [rax+0x20],rdi
   14000836b:	mov    r11,rdx
   14000836e:	mov    rax,r8
   140008371:	mov    rsi,r8
   140008374:	sub    rax,rdx
   140008377:	mov    rbp,rcx
   14000837a:	cqo    
   14000837c:	sub    rax,rdx
   14000837f:	sar    rax,1
   140008382:	lea    r9,[r11+rax*1]
   140008386:	lea    rax,[r8-0x1]
   14000838a:	sub    rax,r11
   14000838d:	cmp    rax,0x28
   140008391:	jle    0x140008495
   140008397:	mov    cl,BYTE PTR [r11]
   14000839a:	inc    rax
   14000839d:	cqo    
   14000839f:	and    edx,0x7
   1400083a2:	add    rax,rdx
   1400083a5:	sar    rax,0x3
   1400083a9:	mov    dl,BYTE PTR [rax+r11*1]
   1400083ad:	lea    r10,[rax+rax*1]
   1400083b1:	cmp    dl,cl
   1400083b3:	jge    0x1400083bc
   1400083b5:	mov    BYTE PTR [rax+r11*1],cl
   1400083b9:	mov    BYTE PTR [r11],dl
   1400083bc:	mov    dl,BYTE PTR [r10+r11*1]
   1400083c0:	mov    cl,BYTE PTR [rax+r11*1]
   1400083c4:	cmp    dl,cl
   1400083c6:	jge    0x1400083d0
   1400083c8:	mov    BYTE PTR [r10+r11*1],cl
   1400083cc:	mov    BYTE PTR [rax+r11*1],dl
   1400083d0:	mov    dl,BYTE PTR [rax+r11*1]
   1400083d4:	mov    cl,BYTE PTR [r11]
   1400083d7:	cmp    dl,cl
   1400083d9:	jge    0x1400083e2
   1400083db:	mov    BYTE PTR [rax+r11*1],cl
   1400083df:	mov    BYTE PTR [r11],dl
   1400083e2:	mov    r8b,BYTE PTR [r9]
   1400083e5:	mov    rcx,r9
   1400083e8:	sub    rcx,rax
   1400083eb:	mov    dl,BYTE PTR [rcx]
   1400083ed:	cmp    r8b,dl
   1400083f0:	jge    0x1400083f8
   1400083f2:	mov    BYTE PTR [r9],dl
   1400083f5:	mov    BYTE PTR [rcx],r8b
   1400083f8:	mov    r8b,BYTE PTR [rax+r9*1]
   1400083fc:	mov    dl,BYTE PTR [r9]
   1400083ff:	cmp    r8b,dl
   140008402:	jge    0x14000840b
   140008404:	mov    BYTE PTR [rax+r9*1],dl
   140008408:	mov    BYTE PTR [r9],r8b
   14000840b:	mov    r8b,BYTE PTR [r9]
   14000840e:	mov    dl,BYTE PTR [rcx]
   140008410:	cmp    r8b,dl
   140008413:	jge    0x14000841b
   140008415:	mov    BYTE PTR [r9],dl
   140008418:	mov    BYTE PTR [rcx],r8b
   14000841b:	lea    rcx,[rsi-0x1]
   14000841f:	lea    rdx,[rsi-0x1]
   140008423:	sub    rdx,r10
   140008426:	sub    rcx,rax
   140008429:	mov    r10b,BYTE PTR [rcx]
   14000842c:	mov    r8b,BYTE PTR [rdx]
   14000842f:	cmp    r10b,r8b
   140008432:	jge    0x14000843a
   140008434:	mov    BYTE PTR [rcx],r8b
   140008437:	mov    BYTE PTR [rdx],r10b
   14000843a:	mov    r10b,BYTE PTR [rsi-0x1]
   14000843e:	mov    r8b,BYTE PTR [rcx]
   140008441:	cmp    r10b,r8b
   140008444:	jge    0x14000844d
   140008446:	mov    BYTE PTR [rsi-0x1],r8b
   14000844a:	mov    BYTE PTR [rcx],r10b
   14000844d:	mov    r10b,BYTE PTR [rcx]
   140008450:	mov    r8b,BYTE PTR [rdx]
   140008453:	cmp    r10b,r8b
   140008456:	jge    0x14000845e
   140008458:	mov    BYTE PTR [rcx],r8b
   14000845b:	mov    BYTE PTR [rdx],r10b
   14000845e:	mov    r8b,BYTE PTR [r9]
   140008461:	mov    dl,BYTE PTR [rax+r11*1]
   140008465:	cmp    r8b,dl
   140008468:	jge    0x140008471
   14000846a:	mov    BYTE PTR [r9],dl
   14000846d:	mov    BYTE PTR [rax+r11*1],r8b
   140008471:	mov    r8b,BYTE PTR [rcx]
   140008474:	mov    dl,BYTE PTR [r9]
   140008477:	cmp    r8b,dl
   14000847a:	jge    0x140008481
   14000847c:	mov    BYTE PTR [rcx],dl
   14000847e:	mov    BYTE PTR [r9],r8b
   140008481:	mov    dl,BYTE PTR [r9]
   140008484:	mov    cl,BYTE PTR [rax+r11*1]
   140008488:	cmp    dl,cl
   14000848a:	jge    0x1400084c7
   14000848c:	mov    BYTE PTR [r9],cl
   14000848f:	mov    BYTE PTR [rax+r11*1],dl
   140008493:	jmp    0x1400084c7
   140008495:	mov    cl,BYTE PTR [r9]
   140008498:	mov    al,BYTE PTR [r11]
   14000849b:	cmp    cl,al
   14000849d:	jge    0x1400084a5
   14000849f:	mov    BYTE PTR [r9],al
   1400084a2:	mov    BYTE PTR [r11],cl
   1400084a5:	mov    cl,BYTE PTR [r8-0x1]
   1400084a9:	mov    al,BYTE PTR [r9]
   1400084ac:	cmp    cl,al
   1400084ae:	jge    0x1400084b7
   1400084b0:	mov    BYTE PTR [r8-0x1],al
   1400084b4:	mov    BYTE PTR [r9],cl
   1400084b7:	mov    cl,BYTE PTR [r9]
   1400084ba:	mov    al,BYTE PTR [r11]
   1400084bd:	cmp    cl,al
   1400084bf:	jge    0x1400084c7
   1400084c1:	mov    BYTE PTR [r9],al
   1400084c4:	mov    BYTE PTR [r11],cl
   1400084c7:	lea    r10,[r9+0x1]
   1400084cb:	cmp    r11,r9
   1400084ce:	jae    0x1400084e5
   1400084d0:	mov    cl,BYTE PTR [r9]
   1400084d3:	lea    rax,[r9-0x1]
   1400084d7:	cmp    cl,BYTE PTR [rax]
   1400084d9:	jg     0x1400084e5
   1400084db:	jl     0x1400084e5
   1400084dd:	mov    r9,rax
   1400084e0:	cmp    r11,rax
   1400084e3:	jb     0x1400084d0
   1400084e5:	cmp    r10,rsi
   1400084e8:	jae    0x1400084fc
   1400084ea:	mov    al,BYTE PTR [r9]
   1400084ed:	cmp    al,BYTE PTR [r10]
   1400084f0:	jg     0x1400084fc
   1400084f2:	jl     0x1400084fc
   1400084f4:	inc    r10
   1400084f7:	cmp    r10,rsi
   1400084fa:	jb     0x1400084ed
   1400084fc:	mov    rbx,r10
   1400084ff:	mov    rdi,r9
   140008502:	jmp    0x14000851c
   140008504:	mov    dl,BYTE PTR [rbx]
   140008506:	cmp    dl,BYTE PTR [r9]
   140008509:	jg     0x140008519
   14000850b:	jl     0x140008521
   14000850d:	mov    rcx,r10
   140008510:	mov    al,BYTE PTR [rcx]
   140008512:	mov    BYTE PTR [rcx],dl
   140008514:	mov    BYTE PTR [rbx],al
   140008516:	inc    r10
   140008519:	inc    rbx
   14000851c:	cmp    rbx,rsi
   14000851f:	jb     0x140008504
   140008521:	cmp    rdi,r11
   140008524:	jbe    0x14000854b
   140008526:	mov    al,BYTE PTR [r9]
   140008529:	lea    rdx,[rdi-0x1]
   14000852d:	cmp    al,BYTE PTR [rdx]
   14000852f:	jg     0x140008540
   140008531:	jl     0x140008548
   140008533:	mov    al,BYTE PTR [rdx]
   140008535:	dec    r9
   140008538:	mov    cl,BYTE PTR [r9]
   14000853b:	mov    BYTE PTR [r9],al
   14000853e:	mov    BYTE PTR [rdx],cl
   140008540:	mov    rdi,rdx
   140008543:	cmp    r11,rdx
   140008546:	jb     0x140008526
   140008548:	cmp    rdi,r11
   14000854b:	jne    0x140008576
   14000854d:	cmp    rbx,rsi
   140008550:	je     0x1400085b1
   140008552:	cmp    r10,rbx
   140008555:	je     0x140008563
   140008557:	mov    al,BYTE PTR [r10]
   14000855a:	mov    cl,BYTE PTR [r9]
   14000855d:	mov    BYTE PTR [r9],al
   140008560:	mov    BYTE PTR [r10],cl
   140008563:	mov    al,BYTE PTR [rbx]
   140008565:	mov    rdx,r9
   140008568:	mov    r8,rbx
   14000856b:	mov    cl,BYTE PTR [rdx]
   14000856d:	mov    BYTE PTR [rdx],al
   14000856f:	inc    r9
   140008572:	mov    BYTE PTR [rbx],cl
   140008574:	jmp    0x140008516
   140008576:	dec    rdi
   140008579:	cmp    rbx,rsi
   14000857c:	jne    0x1400085a4
   14000857e:	dec    r9
   140008581:	cmp    rdi,r9
   140008584:	je     0x140008590
   140008586:	mov    al,BYTE PTR [r9]
   140008589:	mov    cl,BYTE PTR [rdi]
   14000858b:	mov    BYTE PTR [rdi],al
   14000858d:	mov    BYTE PTR [r9],cl
   140008590:	mov    cl,BYTE PTR [r9]
   140008593:	dec    r10
   140008596:	mov    al,BYTE PTR [r10]
   140008599:	mov    BYTE PTR [r9],al
   14000859c:	mov    BYTE PTR [r10],cl
   14000859f:	jmp    0x14000851c
   1400085a4:	mov    al,BYTE PTR [rdi]
   1400085a6:	mov    cl,BYTE PTR [rbx]
   1400085a8:	mov    BYTE PTR [rbx],al
   1400085aa:	mov    BYTE PTR [rdi],cl
   1400085ac:	jmp    0x140008519
   1400085b1:	mov    rbx,QWORD PTR [rsp+0x8]
   1400085b6:	mov    rsi,QWORD PTR [rsp+0x18]
   1400085bb:	mov    rdi,QWORD PTR [rsp+0x20]
   1400085c0:	mov    QWORD PTR [rbp+0x0],r9
   1400085c4:	mov    QWORD PTR [rbp+0x8],r10
   1400085c8:	mov    rax,rbp
   1400085cb:	mov    rbp,QWORD PTR [rsp+0x10]
   1400085d0:	ret    
   1400085d1:	int3   
   1400085d2:	int3   
   1400085d3:	int3   
   1400085d4:	mov    QWORD PTR [rsp+0x18],r8
   1400085d9:	push   rdi
   1400085da:	sub    rsp,0x30
   1400085de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400085e7:	mov    QWORD PTR [rsp+0x48],rbx
   1400085ec:	mov    QWORD PTR [rsp+0x58],rsi
   1400085f1:	mov    rbx,r8
   1400085f4:	mov    rsi,rdx
   1400085f7:	mov    rdi,rcx
   1400085fa:	mov    QWORD PTR [rsp+0x40],rbx
   1400085ff:	cmp    rdi,rsi
   140008602:	je     0x14000861e
   140008604:	mov    rdx,rdi
   140008607:	mov    rcx,rbx
   14000860a:	call   0x140007d88
   14000860f:	add    rbx,0x28
   140008613:	mov    QWORD PTR [rsp+0x50],rbx
   140008618:	add    rdi,0x28
   14000861c:	jmp    0x1400085ff
   14000861e:	mov    rax,rbx
   140008621:	mov    rbx,QWORD PTR [rsp+0x48]
   140008626:	mov    rsi,QWORD PTR [rsp+0x58]
   14000862b:	add    rsp,0x30
   14000862f:	pop    rdi
   140008630:	ret    
   140008631:	int3   
   140008632:	int3   
   140008633:	int3   
   140008634:	rex push rbx
   140008636:	sub    rsp,0x20
   14000863a:	mov    rbx,rcx
   14000863d:	call   0x14000866c
   140008642:	lea    rax,[rip+0x48447]        # 0x140050a90
   140008649:	mov    QWORD PTR [rbx],rax
   14000864c:	lea    rax,[rip+0x48455]        # 0x140050aa8
   140008653:	mov    QWORD PTR [rbx+0x18],rax
   140008657:	lea    rax,[rip+0x4845a]        # 0x140050ab8
   14000865e:	mov    QWORD PTR [rbx+0x40],rax
   140008662:	mov    rax,rbx
   140008665:	add    rsp,0x20
   140008669:	pop    rbx
   14000866a:	ret    
   14000866b:	int3   
   14000866c:	mov    QWORD PTR [rsp+0x8],rcx
   140008671:	push   rdi
   140008672:	sub    rsp,0x30
   140008676:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000867f:	mov    QWORD PTR [rsp+0x48],rbx
   140008684:	mov    rbx,rdx
   140008687:	mov    rdi,rcx
   14000868a:	call   QWORD PTR [rip+0x40f50]        # 0x1400495e0
   140008690:	lea    r11,[rip+0x483b9]        # 0x140050a50
   140008697:	mov    QWORD PTR [rdi],r11
   14000869a:	test   rbx,rbx
   14000869d:	je     0x1400086a3
   14000869f:	add    rbx,0x18
   1400086a3:	lea    rax,[rip+0x41be6]        # 0x14004a290
   1400086aa:	mov    QWORD PTR [rdi+0x18],rax
   1400086ae:	mov    rcx,QWORD PTR [rbx+0x8]
   1400086b2:	mov    QWORD PTR [rdi+0x20],rcx
   1400086b6:	test   rcx,rcx
   1400086b9:	je     0x1400086c1
   1400086bb:	mov    rax,QWORD PTR [rcx]
   1400086be:	call   QWORD PTR [rax+0x18]
   1400086c1:	mov    rax,QWORD PTR [rbx+0x10]
   1400086c5:	mov    QWORD PTR [rdi+0x28],rax
   1400086c9:	mov    rax,QWORD PTR [rbx+0x18]
   1400086cd:	mov    QWORD PTR [rdi+0x30],rax
   1400086d1:	mov    eax,DWORD PTR [rbx+0x20]
   1400086d4:	mov    DWORD PTR [rdi+0x38],eax
   1400086d7:	lea    rax,[rip+0x4838a]        # 0x140050a68
   1400086de:	mov    QWORD PTR [rdi],rax
   1400086e1:	lea    rax,[rip+0x48398]        # 0x140050a80
   1400086e8:	mov    QWORD PTR [rdi+0x18],rax
   1400086ec:	mov    rax,rdi
   1400086ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400086f4:	add    rsp,0x30
   1400086f8:	pop    rdi
   1400086f9:	ret    
   1400086fa:	int3   
   1400086fb:	int3   
   1400086fc:	rex push rbx
   1400086fe:	sub    rsp,0x20
   140008702:	mov    rbx,rcx
   140008705:	call   QWORD PTR [rip+0x40ed5]        # 0x1400495e0
   14000870b:	lea    r11,[rip+0x4833e]        # 0x140050a50
   140008712:	mov    QWORD PTR [rbx],r11
   140008715:	mov    rax,rbx
   140008718:	add    rsp,0x20
   14000871c:	pop    rbx
   14000871d:	ret    
   14000871e:	int3   
   14000871f:	int3   
   140008720:	mov    QWORD PTR [rsp+0x8],rbx
   140008725:	push   rdi
   140008726:	sub    rsp,0x20
   14000872a:	mov    rbx,rcx
   14000872d:	lea    rax,[rip+0x41b5c]        # 0x14004a290
   140008734:	mov    rdi,rdx
   140008737:	mov    QWORD PTR [rcx],rax
   14000873a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000873e:	mov    QWORD PTR [rbx+0x8],rcx
   140008742:	test   rcx,rcx
   140008745:	je     0x14000874d
   140008747:	mov    rax,QWORD PTR [rcx]
   14000874a:	call   QWORD PTR [rax+0x18]
   14000874d:	mov    rax,QWORD PTR [rdi+0x10]
   140008751:	mov    QWORD PTR [rbx+0x10],rax
   140008755:	mov    rax,QWORD PTR [rdi+0x18]
   140008759:	mov    QWORD PTR [rbx+0x18],rax
   14000875d:	mov    eax,DWORD PTR [rdi+0x20]
   140008760:	mov    DWORD PTR [rbx+0x20],eax
   140008763:	mov    rax,rbx
   140008766:	mov    rbx,QWORD PTR [rsp+0x30]
   14000876b:	add    rsp,0x20
   14000876f:	pop    rdi
   140008770:	ret    
   140008771:	int3   
   140008772:	int3   
   140008773:	int3   
   140008774:	lea    rax,[rip+0x41a8d]        # 0x14004a208
   14000877b:	mov    QWORD PTR [rcx],rax
   14000877e:	mov    rax,rcx
   140008781:	ret    
   140008782:	int3   
   140008783:	int3   
   140008784:	mov    QWORD PTR [rsp+0x8],rbx
   140008789:	push   rdi
   14000878a:	sub    rsp,0x20
   14000878e:	lea    rax,[rip+0x41a73]        # 0x14004a208
   140008795:	mov    rbx,rcx
   140008798:	mov    edi,edx
   14000879a:	mov    QWORD PTR [rcx+0x40],rax
   14000879e:	lea    rax,[rip+0x482c3]        # 0x140050a68
   1400087a5:	mov    QWORD PTR [rcx],rax
   1400087a8:	lea    rax,[rip+0x41ae1]        # 0x14004a290
   1400087af:	mov    QWORD PTR [rcx+0x18],rax
   1400087b3:	mov    rcx,QWORD PTR [rcx+0x20]
   1400087b7:	test   rcx,rcx
   1400087ba:	je     0x1400087cb
   1400087bc:	mov    rax,QWORD PTR [rcx]
   1400087bf:	call   QWORD PTR [rax+0x20]
   1400087c2:	test   al,al
   1400087c4:	je     0x1400087cb
   1400087c6:	and    QWORD PTR [rbx+0x20],0x0
   1400087cb:	mov    rcx,rbx
   1400087ce:	call   QWORD PTR [rip+0x410c4]        # 0x140049898
   1400087d4:	test   dil,0x1
   1400087d8:	je     0x1400087e3
   1400087da:	mov    rcx,rbx
   1400087dd:	call   QWORD PTR [rip+0x40e95]        # 0x140049678
   1400087e3:	mov    rax,rbx
   1400087e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400087eb:	add    rsp,0x20
   1400087ef:	pop    rdi
   1400087f0:	ret    
   1400087f1:	int3   
   1400087f2:	int3   
   1400087f3:	int3   
   1400087f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400087f9:	push   rdi
   1400087fa:	sub    rsp,0x20
   1400087fe:	lea    rax,[rip+0x48263]        # 0x140050a68
   140008805:	mov    rbx,rcx
   140008808:	mov    edi,edx
   14000880a:	mov    QWORD PTR [rcx],rax
   14000880d:	lea    rax,[rip+0x41a7c]        # 0x14004a290
   140008814:	mov    QWORD PTR [rcx+0x18],rax
   140008818:	mov    rcx,QWORD PTR [rcx+0x20]
   14000881c:	test   rcx,rcx
   14000881f:	je     0x140008830
   140008821:	mov    rax,QWORD PTR [rcx]
   140008824:	call   QWORD PTR [rax+0x20]
   140008827:	test   al,al
   140008829:	je     0x140008830
   14000882b:	and    QWORD PTR [rbx+0x20],0x0
   140008830:	mov    rcx,rbx
   140008833:	call   QWORD PTR [rip+0x4105f]        # 0x140049898
   140008839:	test   dil,0x1
   14000883d:	je     0x140008848
   14000883f:	mov    rcx,rbx
   140008842:	call   QWORD PTR [rip+0x40e30]        # 0x140049678
   140008848:	mov    rax,rbx
   14000884b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008850:	add    rsp,0x20
   140008854:	pop    rdi
   140008855:	ret    
   140008856:	int3   
   140008857:	int3   
   140008858:	rex push rbx
   14000885a:	sub    rsp,0x20
   14000885e:	lea    rax,[rip+0x48203]        # 0x140050a68
   140008865:	mov    rbx,rcx
   140008868:	mov    QWORD PTR [rcx],rax
   14000886b:	lea    rax,[rip+0x41a1e]        # 0x14004a290
   140008872:	mov    QWORD PTR [rcx+0x18],rax
   140008876:	mov    rcx,QWORD PTR [rcx+0x20]
   14000887a:	test   rcx,rcx
   14000887d:	je     0x14000888e
   14000887f:	mov    rax,QWORD PTR [rcx]
   140008882:	call   QWORD PTR [rax+0x20]
   140008885:	test   al,al
   140008887:	je     0x14000888e
   140008889:	and    QWORD PTR [rbx+0x20],0x0
   14000888e:	mov    rcx,rbx
   140008891:	add    rsp,0x20
   140008895:	pop    rbx
   140008896:	rex.W jmp QWORD PTR [rip+0x40ffb]        # 0x140049898
   14000889d:	int3   
   14000889e:	int3   
   14000889f:	int3   
   1400088a0:	rex push rbx
   1400088a2:	sub    rsp,0x20
   1400088a6:	lea    rax,[rip+0x4195b]        # 0x14004a208
   1400088ad:	mov    rbx,rcx
   1400088b0:	mov    QWORD PTR [rcx+0x40],rax
   1400088b4:	lea    rax,[rip+0x481ad]        # 0x140050a68
   1400088bb:	mov    QWORD PTR [rcx],rax
   1400088be:	lea    rax,[rip+0x419cb]        # 0x14004a290
   1400088c5:	mov    QWORD PTR [rcx+0x18],rax
   1400088c9:	mov    rcx,QWORD PTR [rcx+0x20]
   1400088cd:	test   rcx,rcx
   1400088d0:	je     0x1400088e1
   1400088d2:	mov    rax,QWORD PTR [rcx]
   1400088d5:	call   QWORD PTR [rax+0x20]
   1400088d8:	test   al,al
   1400088da:	je     0x1400088e1
   1400088dc:	and    QWORD PTR [rbx+0x20],0x0
   1400088e1:	mov    rcx,rbx
   1400088e4:	add    rsp,0x20
   1400088e8:	pop    rbx
   1400088e9:	rex.W jmp QWORD PTR [rip+0x40fa8]        # 0x140049898
   1400088f0:	rex push rdi
   1400088f2:	sub    rsp,0x30
   1400088f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400088ff:	mov    QWORD PTR [rsp+0x40],rbx
   140008904:	mov    QWORD PTR [rsp+0x50],rsi
   140008909:	mov    rsi,rcx
   14000890c:	mov    ecx,0x48
   140008911:	call   QWORD PTR [rip+0x40d81]        # 0x140049698
   140008917:	mov    rbx,rax
   14000891a:	mov    QWORD PTR [rsp+0x48],rax
   14000891f:	xor    edi,edi
   140008921:	test   rax,rax
   140008924:	je     0x140008954
   140008926:	lea    rdx,[rsi-0x40]
   14000892a:	mov    rcx,rax
   14000892d:	call   0x14000866c
   140008932:	lea    rax,[rip+0x48157]        # 0x140050a90
   140008939:	mov    QWORD PTR [rbx],rax
   14000893c:	lea    rax,[rip+0x48165]        # 0x140050aa8
   140008943:	mov    QWORD PTR [rbx+0x18],rax
   140008947:	lea    rax,[rip+0x4816a]        # 0x140050ab8
   14000894e:	mov    QWORD PTR [rbx+0x40],rax
   140008952:	jmp    0x140008957
   140008954:	mov    rbx,rdi
   140008957:	test   rbx,rbx
   14000895a:	je     0x140008960
   14000895c:	lea    rdi,[rbx+0x40]
   140008960:	mov    rax,rdi
   140008963:	mov    rbx,QWORD PTR [rsp+0x40]
   140008968:	mov    rsi,QWORD PTR [rsp+0x50]
   14000896d:	add    rsp,0x30
   140008971:	pop    rdi
   140008972:	ret    
   140008973:	int3   
   140008974:	sub    rsp,0x78
   140008978:	lea    rdx,[rcx-0x40]
   14000897c:	lea    rcx,[rsp+0x20]
   140008981:	call   0x14000866c
   140008986:	lea    rax,[rip+0x4811b]        # 0x140050aa8
   14000898d:	lea    r11,[rip+0x480fc]        # 0x140050a90
   140008994:	mov    QWORD PTR [rsp+0x38],rax
   140008999:	lea    rax,[rip+0x48118]        # 0x140050ab8
   1400089a0:	lea    rdx,[rip+0x5aec9]        # 0x140063870
   1400089a7:	lea    rcx,[rsp+0x20]
   1400089ac:	mov    QWORD PTR [rsp+0x20],r11
   1400089b1:	mov    QWORD PTR [rsp+0x60],rax
   1400089b6:	call   0x14002b560
   1400089bb:	int3   
   1400089bc:	mov    rax,rsp
   1400089bf:	push   rbp
   1400089c0:	push   rsi
   1400089c1:	push   rdi
   1400089c2:	lea    rbp,[rax-0x5f]
   1400089c6:	sub    rsp,0xc0
   1400089cd:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   1400089d5:	mov    QWORD PTR [rax+0x18],rbx
   1400089d9:	mov    rax,QWORD PTR [rip+0x5f810]        # 0x1400681f0
   1400089e0:	xor    rax,rsp
   1400089e3:	mov    QWORD PTR [rbp+0x3f],rax
   1400089e7:	mov    rdi,rdx
   1400089ea:	mov    rsi,rcx
   1400089ed:	mov    QWORD PTR [rbp+0x37],rdx
   1400089f1:	mov    r8,QWORD PTR [rdx+0x10]
   1400089f5:	mov    QWORD PTR [rbp-0x29],r8
   1400089f9:	and    QWORD PTR [rbp-0x39],0x0
   1400089fe:	cmp    r8,0x10
   140008a02:	ja     0x140008a0a
   140008a04:	lea    rax,[rbp-0x39]
   140008a08:	jmp    0x140008a1d
   140008a0a:	mov    rcx,r8
   140008a0d:	call   0x14002b058
   140008a12:	mov    QWORD PTR [rbp-0x39],rax
   140008a16:	mov    rdx,QWORD PTR [rdi]
   140008a19:	mov    r8,QWORD PTR [rbp-0x29]
   140008a1d:	mov    rcx,rax
   140008a20:	call   QWORD PTR [rip+0x40ea2]        # 0x1400498c8
   140008a26:	mov    r11d,DWORD PTR [rdi+0x18]
   140008a2a:	mov    DWORD PTR [rbp-0x21],r11d
   140008a2e:	lea    rax,[rbp-0x39]
   140008a32:	mov    QWORD PTR [rbp+0x2f],rax
   140008a36:	lea    rbx,[rsi+0x8]
   140008a3a:	mov    QWORD PTR [rbp+0x27],rbx
   140008a3e:	mov    r8,QWORD PTR [rbp-0x29]
   140008a42:	mov    QWORD PTR [rbp-0x49],r8
   140008a46:	and    QWORD PTR [rbp-0x59],0x0
   140008a4b:	cmp    r8,0x10
   140008a4f:	ja     0x140008a5b
   140008a51:	lea    rax,[rbp-0x59]
   140008a55:	lea    rdx,[rbp-0x39]
   140008a59:	jmp    0x140008a6f
   140008a5b:	mov    rcx,r8
   140008a5e:	call   0x14002b058
   140008a63:	mov    QWORD PTR [rbp-0x59],rax
   140008a67:	mov    rdx,QWORD PTR [rbp-0x39]
   140008a6b:	mov    r8,QWORD PTR [rbp-0x49]
   140008a6f:	mov    rcx,rax
   140008a72:	call   QWORD PTR [rip+0x40e50]        # 0x1400498c8
   140008a78:	mov    r11d,DWORD PTR [rbp-0x21]
   140008a7c:	mov    DWORD PTR [rbp-0x41],r11d
   140008a80:	lea    rax,[rbp-0x59]
   140008a84:	mov    QWORD PTR [rbp+0x7],rax
   140008a88:	lea    rcx,[rbp-0x59]
   140008a8c:	call   0x1400011f0
   140008a91:	test   al,al
   140008a93:	jne    0x140008b59
   140008a99:	mov    r8,QWORD PTR [rbp-0x49]
   140008a9d:	mov    QWORD PTR [rbp-0x9],r8
   140008aa1:	and    QWORD PTR [rbp-0x19],0x0
   140008aa6:	cmp    r8,0x10
   140008aaa:	ja     0x140008ab6
   140008aac:	lea    rax,[rbp-0x19]
   140008ab0:	lea    rdx,[rbp-0x59]
   140008ab4:	jmp    0x140008aca
   140008ab6:	mov    rcx,r8
   140008ab9:	call   0x14002b058
   140008abe:	mov    QWORD PTR [rbp-0x19],rax
   140008ac2:	mov    rdx,QWORD PTR [rbp-0x59]
   140008ac6:	mov    r8,QWORD PTR [rbp-0x9]
   140008aca:	mov    rcx,rax
   140008acd:	call   QWORD PTR [rip+0x40df5]        # 0x1400498c8
   140008ad3:	mov    r11d,DWORD PTR [rbp-0x41]
   140008ad7:	mov    DWORD PTR [rbp-0x1],r11d
   140008adb:	lea    rax,[rbp-0x19]
   140008adf:	mov    QWORD PTR [rbp+0x1f],rax
   140008ae3:	mov    QWORD PTR [rbp+0xf],rbx
   140008ae7:	test   rbx,rbx
   140008aea:	je     0x140008b28
   140008aec:	mov    rcx,QWORD PTR [rbp-0x9]
   140008af0:	mov    QWORD PTR [rbx+0x10],rcx
   140008af4:	and    QWORD PTR [rbx],0x0
   140008af8:	cmp    rcx,0x10
   140008afc:	ja     0x140008b07
   140008afe:	mov    rax,rbx
   140008b01:	lea    rdx,[rbp-0x19]
   140008b05:	jmp    0x140008b13
   140008b07:	call   0x14002b058
   140008b0c:	mov    QWORD PTR [rbx],rax
   140008b0f:	mov    rdx,QWORD PTR [rbp-0x19]
   140008b13:	mov    r8,QWORD PTR [rbx+0x10]
   140008b17:	mov    rcx,rax
   140008b1a:	call   QWORD PTR [rip+0x40da8]        # 0x1400498c8
   140008b20:	mov    r11d,DWORD PTR [rbp-0x1]
   140008b24:	mov    DWORD PTR [rbx+0x18],r11d
   140008b28:	cmp    QWORD PTR [rbp-0x9],0x10
   140008b2d:	jbe    0x140008b3f
   140008b2f:	mov    rcx,QWORD PTR [rbp-0x19]
   140008b33:	test   rcx,rcx
   140008b36:	je     0x140008b3f
   140008b38:	call   QWORD PTR [rip+0x40b2a]        # 0x140049668
   140008b3e:	nop
   140008b3f:	cmp    QWORD PTR [rbp-0x49],0x10
   140008b44:	jbe    0x140008b55
   140008b46:	mov    rcx,QWORD PTR [rbp-0x59]
   140008b4a:	test   rcx,rcx
   140008b4d:	je     0x140008b55
   140008b4f:	call   QWORD PTR [rip+0x40b13]        # 0x140049668
   140008b55:	mov    bl,0x1
   140008b57:	jmp    0x140008b71
   140008b59:	cmp    QWORD PTR [rbp-0x49],0x10
   140008b5e:	jbe    0x140008b6f
   140008b60:	mov    rcx,QWORD PTR [rbp-0x59]
   140008b64:	test   rcx,rcx
   140008b67:	je     0x140008b6f
   140008b69:	call   QWORD PTR [rip+0x40af9]        # 0x140049668
   140008b6f:	xor    bl,bl
   140008b71:	cmp    QWORD PTR [rbp-0x29],0x10
   140008b76:	jbe    0x140008b87
   140008b78:	mov    rcx,QWORD PTR [rbp-0x39]
   140008b7c:	test   rcx,rcx
   140008b7f:	je     0x140008b87
   140008b81:	call   QWORD PTR [rip+0x40ae1]        # 0x140049668
   140008b87:	neg    bl
   140008b89:	sbb    rax,rax
   140008b8c:	lea    rcx,[rip+0x6060d]        # 0x1400691a0
   140008b93:	and    rax,rcx
   140008b96:	mov    QWORD PTR [rsi],rax
   140008b99:	cmp    QWORD PTR [rdi+0x10],0x10
   140008b9e:	jbe    0x140008bae
   140008ba0:	mov    rcx,QWORD PTR [rdi]
   140008ba3:	test   rcx,rcx
   140008ba6:	je     0x140008bae
   140008ba8:	call   QWORD PTR [rip+0x40aba]        # 0x140049668
   140008bae:	mov    rcx,QWORD PTR [rbp+0x3f]
   140008bb2:	xor    rcx,rsp
   140008bb5:	call   0x14002b100
   140008bba:	mov    rbx,QWORD PTR [rsp+0xf0]
   140008bc2:	add    rsp,0xc0
   140008bc9:	pop    rdi
   140008bca:	pop    rsi
   140008bcb:	pop    rbp
   140008bcc:	ret    
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	rex push rbx
   140008bd2:	push   rsi
   140008bd3:	push   rdi
   140008bd4:	push   r12
   140008bd6:	push   r13
   140008bd8:	sub    rsp,0x90
   140008bdf:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140008be8:	mov    rax,QWORD PTR [rip+0x5f601]        # 0x1400681f0
   140008bef:	xor    rax,rsp
   140008bf2:	mov    QWORD PTR [rsp+0x80],rax
   140008bfa:	mov    rsi,r9
   140008bfd:	mov    rbx,r8
   140008c00:	mov    r12,rcx
   140008c03:	mov    QWORD PTR [rsp+0x38],rcx
   140008c08:	mov    QWORD PTR [rsp+0x40],rbx
   140008c0d:	mov    QWORD PTR [rsp+0x50],r9
   140008c12:	sub    rdx,QWORD PTR [rcx]
   140008c15:	movabs rdi,0x6666666666666667
   140008c1f:	mov    rax,rdi
   140008c22:	imul   rdx
   140008c25:	mov    r13,rdx
   140008c28:	sar    r13,0x4
   140008c2c:	mov    rcx,r13
   140008c2f:	shr    rcx,0x3f
   140008c33:	add    r13,rcx
   140008c36:	mov    rdx,r9
   140008c39:	mov    rcx,r8
   140008c3c:	call   0x140008fcc
   140008c41:	test   al,al
   140008c43:	je     0x140008d3c
   140008c49:	mov    rcx,QWORD PTR [r12+0x8]
   140008c4e:	sub    rcx,QWORD PTR [r12]
   140008c52:	mov    rax,rdi
   140008c55:	imul   rcx
   140008c58:	mov    rdi,rdx
   140008c5b:	sar    rdi,0x4
   140008c5f:	mov    rax,rdi
   140008c62:	shr    rax,0x3f
   140008c66:	add    rdi,rax
   140008c69:	mov    QWORD PTR [rsp+0x30],rdi
   140008c6e:	mov    rdx,rsi
   140008c71:	mov    rcx,rbx
   140008c74:	call   0x140008fcc
   140008c79:	test   al,al
   140008c7b:	je     0x140008d12
   140008c81:	lea    rdx,[rsp+0x58]
   140008c86:	mov    rcx,rbx
   140008c89:	call   0x140008e7c
   140008c8e:	nop
   140008c8f:	mov    rdx,rax
   140008c92:	mov    rcx,r12
   140008c95:	call   0x1400077b0
   140008c9a:	nop
   140008c9b:	cmp    QWORD PTR [rsp+0x70],0x10
   140008ca1:	jb     0x140008cae
   140008ca3:	mov    rcx,QWORD PTR [rsp+0x58]
   140008ca8:	call   QWORD PTR [rip+0x409ca]        # 0x140049678
   140008cae:	mov    rcx,QWORD PTR [rbx+0x40]
   140008cb2:	cmp    QWORD PTR [rbx],0x0
   140008cb6:	je     0x140008cd8
   140008cb8:	mov    r9,rcx
   140008cbb:	mov    r8,QWORD PTR [rbx+0x38]
   140008cbf:	lea    rdx,[rsp+0x20]
   140008cc4:	mov    rcx,rbx
   140008cc7:	call   0x1400082bc
   140008ccc:	mov    rcx,QWORD PTR [rsp+0x28]
   140008cd1:	mov    rdx,QWORD PTR [rsp+0x20]
   140008cd6:	jmp    0x140008ce5
   140008cd8:	mov    rdx,rcx
   140008cdb:	mov    QWORD PTR [rsp+0x20],rcx
   140008ce0:	mov    QWORD PTR [rsp+0x28],rcx
   140008ce5:	mov    rax,QWORD PTR [rbx+0x40]
   140008ce9:	cmp    rdx,rax
   140008cec:	jne    0x140008cfd
   140008cee:	cmp    rcx,rax
   140008cf1:	jne    0x140008cfd
   140008cf3:	cmp    QWORD PTR [rbx+0x30],rax
   140008cf7:	jne    0x140008cfd
   140008cf9:	mov    BYTE PTR [rbx+0x48],0x1
   140008cfd:	mov    rax,QWORD PTR [rbx+0x38]
   140008d01:	mov    QWORD PTR [rbx+0x28],rax
   140008d05:	mov    QWORD PTR [rbx+0x30],rdx
   140008d09:	mov    QWORD PTR [rbx+0x38],rcx
   140008d0d:	jmp    0x140008c6e
   140008d12:	mov    r8,QWORD PTR [r12+0x8]
   140008d17:	mov    rax,QWORD PTR [r12]
   140008d1b:	lea    rcx,[rdi+rdi*4]
   140008d1f:	lea    rdx,[rax+rcx*8]
   140008d23:	lea    rcx,[r13+r13*4+0x0]
   140008d28:	lea    rcx,[rax+rcx*8]
   140008d2c:	cmp    rcx,rdx
   140008d2f:	je     0x140008d3c
   140008d31:	cmp    rdx,r8
   140008d34:	je     0x140008d3c
   140008d36:	call   0x1400090dc
   140008d3b:	nop
   140008d3c:	mov    rax,QWORD PTR [rbx]
   140008d3f:	test   rax,rax
   140008d42:	je     0x140008d68
   140008d44:	test   al,0x1
   140008d46:	jne    0x140008d64
   140008d48:	lea    rcx,[rbx+0x8]
   140008d4c:	and    rax,0xfffffffffffffffe
   140008d50:	mov    r9,QWORD PTR [rax]
   140008d53:	test   r9,r9
   140008d56:	je     0x140008d64
   140008d58:	mov    r8d,0x2
   140008d5e:	mov    rdx,rcx
   140008d61:	call   r9
   140008d64:	and    QWORD PTR [rbx],0x0
   140008d68:	mov    rax,QWORD PTR [rsi]
   140008d6b:	test   rax,rax
   140008d6e:	je     0x140008d94
   140008d70:	test   al,0x1
   140008d72:	jne    0x140008d90
   140008d74:	lea    rcx,[rsi+0x8]
   140008d78:	and    rax,0xfffffffffffffffe
   140008d7c:	mov    r9,QWORD PTR [rax]
   140008d7f:	test   r9,r9
   140008d82:	je     0x140008d90
   140008d84:	mov    r8d,0x2
   140008d8a:	mov    rdx,rcx
   140008d8d:	call   r9
   140008d90:	and    QWORD PTR [rsi],0x0
   140008d94:	mov    rcx,QWORD PTR [rsp+0x80]
   140008d9c:	xor    rcx,rsp
   140008d9f:	call   0x14002b100
   140008da4:	add    rsp,0x90
   140008dab:	pop    r13
   140008dad:	pop    r12
   140008daf:	pop    rdi
   140008db0:	pop    rsi
   140008db1:	pop    rbx
   140008db2:	ret    
   140008db3:	int3   
   140008db4:	rex push rbx
   140008db6:	sub    rsp,0x20
   140008dba:	and    DWORD PTR [rsp+0x30],0x0
   140008dbf:	mov    rbx,rcx
   140008dc2:	call   QWORD PTR [rip+0x40818]        # 0x1400495e0
   140008dc8:	lea    rax,[rip+0x414c1]        # 0x14004a290
   140008dcf:	mov    QWORD PTR [rbx+0x18],rax
   140008dd3:	and    QWORD PTR [rbx+0x20],0x0
   140008dd8:	and    QWORD PTR [rbx+0x28],0x0
   140008ddd:	and    QWORD PTR [rbx+0x30],0x0
   140008de2:	or     DWORD PTR [rbx+0x38],0xffffffff
   140008de6:	lea    rax,[rip+0x47c7b]        # 0x140050a68
   140008ded:	mov    QWORD PTR [rbx],rax
   140008df0:	lea    rax,[rip+0x47c89]        # 0x140050a80
   140008df7:	mov    QWORD PTR [rbx+0x18],rax
   140008dfb:	mov    rax,rbx
   140008dfe:	add    rsp,0x20
   140008e02:	pop    rbx
   140008e03:	ret    
   140008e04:	mov    QWORD PTR [rsp+0x8],rcx
   140008e09:	push   rdi
   140008e0a:	sub    rsp,0x30
   140008e0e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008e17:	mov    QWORD PTR [rsp+0x50],rbx
   140008e1c:	mov    QWORD PTR [rsp+0x58],rsi
   140008e21:	mov    rsi,rdx
   140008e24:	mov    rdi,rcx
   140008e27:	xor    ebx,ebx
   140008e29:	mov    DWORD PTR [rsp+0x48],ebx
   140008e2d:	call   0x14000866c
   140008e32:	nop
   140008e33:	lea    rax,[rip+0x47c56]        # 0x140050a90
   140008e3a:	mov    QWORD PTR [rdi],rax
   140008e3d:	lea    rcx,[rdi+0x18]
   140008e41:	lea    rax,[rip+0x47c60]        # 0x140050aa8
   140008e48:	mov    QWORD PTR [rcx],rax
   140008e4b:	lea    rax,[rip+0x47c66]        # 0x140050ab8
   140008e52:	mov    QWORD PTR [rdi+0x40],rax
   140008e56:	test   rsi,rsi
   140008e59:	je     0x140008e5f
   140008e5b:	lea    rbx,[rsi+0x18]
   140008e5f:	mov    rdx,rbx
   140008e62:	call   0x1400010f8
   140008e67:	nop
   140008e68:	mov    rax,rdi
   140008e6b:	mov    rbx,QWORD PTR [rsp+0x50]
   140008e70:	mov    rsi,QWORD PTR [rsp+0x58]
   140008e75:	add    rsp,0x30
   140008e79:	pop    rdi
   140008e7a:	ret    
   140008e7b:	int3   
   140008e7c:	rex push rbx
   140008e7e:	sub    rsp,0x20
   140008e82:	and    DWORD PTR [rsp+0x38],0x0
   140008e87:	mov    rbx,rdx
   140008e8a:	mov    rdx,rcx
   140008e8d:	mov    rcx,rbx
   140008e90:	call   0x140009074
   140008e95:	mov    rax,rbx
   140008e98:	add    rsp,0x20
   140008e9c:	pop    rbx
   140008e9d:	ret    
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	cmp    r8d,0x4
   140008ea4:	je     0x140008eab
   140008ea6:	jmp    0x140008edc
   140008eab:	lea    rax,[rip+0x602fe]        # 0x1400691b0
   140008eb2:	mov    WORD PTR [rdx+0x8],0x0
   140008eb8:	mov    QWORD PTR [rdx],rax
   140008ebb:	ret    
   140008ebc:	rex push rbx
   140008ebe:	sub    rsp,0x20
   140008ec2:	mov    rax,rdx
   140008ec5:	mov    rbx,rcx
   140008ec8:	mov    rdx,rcx
   140008ecb:	mov    rcx,rax
   140008ece:	call   0x140007c78
   140008ed3:	mov    rax,rbx
   140008ed6:	add    rsp,0x20
   140008eda:	pop    rbx
   140008edb:	ret    
   140008edc:	mov    QWORD PTR [rsp+0x10],rdx
   140008ee1:	push   rdi
   140008ee2:	sub    rsp,0x30
   140008ee6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008eef:	mov    QWORD PTR [rsp+0x40],rbx
   140008ef4:	mov    QWORD PTR [rsp+0x50],rsi
   140008ef9:	mov    edi,r8d
   140008efc:	mov    rbx,rdx
   140008eff:	mov    rsi,rcx
   140008f02:	test   r8d,r8d
   140008f05:	je     0x140008f5b
   140008f07:	cmp    r8d,0x1
   140008f0b:	je     0x140008f5b
   140008f0d:	cmp    r8d,0x2
   140008f11:	jne    0x140008f26
   140008f13:	cmp    QWORD PTR [rdx+0x10],0x10
   140008f18:	jbe    0x140008fb9
   140008f1e:	mov    rcx,QWORD PTR [rdx]
   140008f21:	jmp    0x140008fae
   140008f26:	cmp    r8d,0x3
   140008f2a:	jne    0x140008f49
   140008f2c:	lea    rdx,[rip+0x6027d]        # 0x1400691b0
   140008f33:	mov    rcx,QWORD PTR [rbx]
   140008f36:	call   QWORD PTR [rip+0x406ac]        # 0x1400495e8
   140008f3c:	neg    al
   140008f3e:	sbb    rcx,rcx
   140008f41:	and    rcx,rsi
   140008f44:	mov    QWORD PTR [rbx],rcx
   140008f47:	jmp    0x140008fb9
   140008f49:	lea    rax,[rip+0x60260]        # 0x1400691b0
   140008f50:	mov    QWORD PTR [rdx],rax
   140008f53:	mov    WORD PTR [rdx+0x8],0x0
   140008f59:	jmp    0x140008fb9
   140008f5b:	mov    QWORD PTR [rsp+0x58],rdx
   140008f60:	test   rdx,rdx
   140008f63:	je     0x140008f9f
   140008f65:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f69:	mov    QWORD PTR [rdx+0x10],rcx
   140008f6d:	and    QWORD PTR [rdx],0x0
   140008f71:	cmp    rcx,0x10
   140008f75:	ja     0x140008f7f
   140008f77:	mov    rax,rdx
   140008f7a:	mov    rdx,rsi
   140008f7d:	jmp    0x140008f8a
   140008f7f:	call   0x14002b058
   140008f84:	mov    QWORD PTR [rbx],rax
   140008f87:	mov    rdx,QWORD PTR [rsi]
   140008f8a:	mov    r8,QWORD PTR [rbx+0x10]
   140008f8e:	mov    rcx,rax
   140008f91:	call   QWORD PTR [rip+0x40931]        # 0x1400498c8
   140008f97:	mov    r11d,DWORD PTR [rsi+0x18]
   140008f9b:	mov    DWORD PTR [rbx+0x18],r11d
   140008f9f:	cmp    edi,0x1
   140008fa2:	jne    0x140008fb9
   140008fa4:	cmp    QWORD PTR [rsi+0x10],0x10
   140008fa9:	jbe    0x140008fb9
   140008fab:	mov    rcx,QWORD PTR [rsi]
   140008fae:	test   rcx,rcx
   140008fb1:	je     0x140008fb9
   140008fb3:	call   QWORD PTR [rip+0x406af]        # 0x140049668
   140008fb9:	mov    rbx,QWORD PTR [rsp+0x40]
   140008fbe:	mov    rsi,QWORD PTR [rsp+0x50]
   140008fc3:	add    rsp,0x30
   140008fc7:	pop    rdi
   140008fc8:	ret    
   140008fc9:	int3   
   140008fca:	int3   
   140008fcb:	int3   
   140008fcc:	mov    QWORD PTR [rsp+0x8],rbx
   140008fd1:	mov    QWORD PTR [rsp+0x10],rbp
   140008fd6:	mov    QWORD PTR [rsp+0x18],rsi
   140008fdb:	push   rdi
   140008fdc:	sub    rsp,0x20
   140008fe0:	xor    ebx,ebx
   140008fe2:	mov    rsi,rdx
   140008fe5:	mov    rbp,rcx
   140008fe8:	mov    edi,0x1
   140008fed:	cmp    QWORD PTR [rcx],rbx
   140008ff0:	je     0x140008ff9
   140008ff2:	cmp    BYTE PTR [rcx+0x48],bl
   140008ff5:	mov    cl,bl
   140008ff7:	je     0x140008ffc
   140008ff9:	mov    cl,dil
   140008ffc:	cmp    QWORD PTR [rdx],rbx
   140008fff:	je     0x140009008
   140009001:	mov    al,bl
   140009003:	cmp    BYTE PTR [rdx+0x48],bl
   140009006:	je     0x14000900b
   140009008:	mov    al,dil
   14000900b:	test   cl,cl
   14000900d:	jne    0x140009050
   14000900f:	test   al,al
   140009011:	jne    0x140009050
   140009013:	mov    rax,QWORD PTR [rdx+0x30]
   140009017:	mov    r8,QWORD PTR [rbp+0x30]
   14000901b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000901f:	mov    rdx,QWORD PTR [rdx+0x28]
   140009023:	sub    r8,rcx
   140009026:	sub    rax,rdx
   140009029:	cmp    r8,rax
   14000902c:	jne    0x14000904c
   14000902e:	call   QWORD PTR [rip+0x405c4]        # 0x1400495f8
   140009034:	test   eax,eax
   140009036:	jne    0x14000904c
   140009038:	mov    rax,QWORD PTR [rsi+0x38]
   14000903c:	cmp    QWORD PTR [rbp+0x38],rax
   140009040:	jne    0x14000904c
   140009042:	mov    rax,QWORD PTR [rsi+0x40]
   140009046:	cmp    QWORD PTR [rbp+0x40],rax
   14000904a:	je     0x140009058
   14000904c:	mov    edi,ebx
   14000904e:	jmp    0x140009058
   140009050:	cmp    cl,al
   140009052:	mov    edi,ebx
   140009054:	sete   dil
   140009058:	mov    rbx,QWORD PTR [rsp+0x30]
   14000905d:	mov    rbp,QWORD PTR [rsp+0x38]
   140009062:	mov    rsi,QWORD PTR [rsp+0x40]
   140009067:	test   dil,dil
   14000906a:	sete   al
   14000906d:	add    rsp,0x20
   140009071:	pop    rdi
   140009072:	ret    
   140009073:	int3   
   140009074:	rex push rbx
   140009076:	sub    rsp,0x20
   14000907a:	and    DWORD PTR [rsp+0x30],0x0
   14000907f:	mov    rax,rdx
   140009082:	mov    rbx,rcx
   140009085:	mov    rdx,rcx
   140009088:	mov    rcx,rax
   14000908b:	call   0x14000909c
   140009090:	mov    rax,rbx
   140009093:	add    rsp,0x20
   140009097:	pop    rbx
   140009098:	ret    
   140009099:	int3   
   14000909a:	int3   
   14000909b:	int3   
   14000909c:	rex push rbx
   14000909e:	sub    rsp,0x20
   1400090a2:	and    DWORD PTR [rsp+0x30],0x0
   1400090a7:	mov    rbx,rdx
   1400090aa:	lea    rdx,[rcx+0x28]
   1400090ae:	mov    rcx,rbx
   1400090b1:	call   0x1400090c0
   1400090b6:	mov    rax,rbx
   1400090b9:	add    rsp,0x20
   1400090bd:	pop    rbx
   1400090be:	ret    
   1400090bf:	int3   
   1400090c0:	rex push rbx
   1400090c2:	sub    rsp,0x20
   1400090c6:	and    DWORD PTR [rsp+0x30],0x0
   1400090cb:	mov    rbx,rcx
   1400090ce:	call   0x140009230
   1400090d3:	mov    rax,rbx
   1400090d6:	add    rsp,0x20
   1400090da:	pop    rbx
   1400090db:	ret    
   1400090dc:	rex push rbx
   1400090de:	push   rbp
   1400090df:	push   rsi
   1400090e0:	push   rdi
   1400090e1:	push   r12
   1400090e3:	sub    rsp,0x10
   1400090e7:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1400090ef:	mov    rax,QWORD PTR [rip+0x5f0fa]        # 0x1400681f0
   1400090f6:	xor    rax,rsp
   1400090f9:	mov    QWORD PTR [rsp+0x8],rax
   1400090fe:	mov    rbp,r8
   140009101:	mov    rsi,rcx
   140009104:	sub    rdx,rcx
   140009107:	movabs r12,0x6666666666666667
   140009111:	mov    rax,r12
   140009114:	imul   rdx
   140009117:	mov    rbx,rdx
   14000911a:	sar    rbx,0x4
   14000911e:	mov    rax,rbx
   140009121:	shr    rax,0x3f
   140009125:	add    rbx,rax
   140009128:	mov    rcx,r8
   14000912b:	sub    rcx,rsi
   14000912e:	mov    rax,r12
   140009131:	imul   rcx
   140009134:	mov    r8,rdx
   140009137:	sar    r8,0x4
   14000913b:	mov    rax,r8
   14000913e:	shr    rax,0x3f
   140009142:	add    r8,rax
   140009145:	mov    r9,r8
   140009148:	mov    rcx,rbx
   14000914b:	test   rbx,rbx
   14000914e:	je     0x140009163
   140009150:	mov    rax,r9
   140009153:	cqo    
   140009155:	idiv   rcx
   140009158:	mov    r9,rcx
   14000915b:	mov    rcx,rdx
   14000915e:	test   rdx,rdx
   140009161:	jne    0x140009150
   140009163:	cmp    r9,r8
   140009166:	jge    0x140009217
   14000916c:	test   r9,r9
   14000916f:	jle    0x140009217
   140009175:	lea    rdi,[rbx+rbx*4]
   140009179:	shl    rdi,0x3
   14000917d:	lea    rax,[r9+r9*4]
   140009181:	lea    r10,[rsi+rax*8]
   140009185:	mov    r11,r10
   140009188:	lea    r8,[r10+rdi*1]
   14000918c:	cmp    r8,rbp
   14000918f:	cmove  r8,rsi
   140009193:	cmp    r11,r8
   140009196:	je     0x1400091cd
   140009198:	movups xmm1,XMMWORD PTR [r11]
   14000919c:	movups xmm0,XMMWORD PTR [r8]
   1400091a0:	movdqu XMMWORD PTR [r11],xmm0
   1400091a5:	movups xmm1,xmm1
   1400091a8:	movdqu XMMWORD PTR [r8],xmm1
   1400091ad:	mov    rcx,QWORD PTR [r11+0x10]
   1400091b1:	mov    rax,QWORD PTR [r8+0x10]
   1400091b5:	mov    QWORD PTR [r11+0x10],rax
   1400091b9:	mov    QWORD PTR [r8+0x10],rcx
   1400091bd:	mov    rcx,QWORD PTR [r11+0x18]
   1400091c1:	mov    rax,QWORD PTR [r8+0x18]
   1400091c5:	mov    QWORD PTR [r11+0x18],rax
   1400091c9:	mov    QWORD PTR [r8+0x18],rcx
   1400091cd:	mov    r11,r8
   1400091d0:	mov    rcx,rbp
   1400091d3:	sub    rcx,r8
   1400091d6:	mov    rax,r12
   1400091d9:	imul   rcx
   1400091dc:	sar    rdx,0x4
   1400091e0:	mov    rax,rdx
   1400091e3:	shr    rax,0x3f
   1400091e7:	add    rdx,rax
   1400091ea:	cmp    rbx,rdx
   1400091ed:	jge    0x1400091f4
   1400091ef:	add    r8,rdi
   1400091f2:	jmp    0x140009202
   1400091f4:	mov    rax,rbx
   1400091f7:	sub    rax,rdx
   1400091fa:	lea    rax,[rax+rax*4]
   1400091fe:	lea    r8,[rsi+rax*8]
   140009202:	cmp    r8,r10
   140009205:	jne    0x140009193
   140009207:	dec    r9
   14000920a:	sub    r10,0x28
   14000920e:	test   r9,r9
   140009211:	jg     0x140009185
   140009217:	mov    rcx,QWORD PTR [rsp+0x8]
   14000921c:	xor    rcx,rsp
   14000921f:	call   0x14002b100
   140009224:	add    rsp,0x10
   140009228:	pop    r12
   14000922a:	pop    rdi
   14000922b:	pop    rsi
   14000922c:	pop    rbp
   14000922d:	pop    rbx
   14000922e:	ret    
   14000922f:	int3   
   140009230:	rex push rbx
   140009232:	sub    rsp,0x20
   140009236:	mov    r8,QWORD PTR [rdx+0x8]
   14000923a:	mov    rdx,QWORD PTR [rdx]
   14000923d:	xor    eax,eax
   14000923f:	mov    QWORD PTR [rcx+0x18],0xf
   140009247:	mov    QWORD PTR [rcx+0x10],rax
   14000924b:	mov    rbx,rcx
   14000924e:	mov    DWORD PTR [rsp+0x30],eax
   140009252:	mov    BYTE PTR [rcx],al
   140009254:	cmp    rdx,r8
   140009257:	je     0x140009261
   140009259:	sub    r8,rdx
   14000925c:	call   0x140005154
   140009261:	mov    rax,rbx
   140009264:	add    rsp,0x20
   140009268:	pop    rbx
   140009269:	ret    
   14000926a:	int3   
   14000926b:	int3   
   14000926c:	sub    rcx,0x18
   140009270:	jmp    0x140008784
   140009275:	int3   
   140009276:	int3   
   140009277:	int3   
   140009278:	sub    rcx,0x40
   14000927c:	jmp    0x140008784
   140009281:	int3   
   140009282:	int3   
   140009283:	int3   
   140009284:	sub    rcx,0x18
   140009288:	jmp    0x1400087f4
   14000928d:	int3   
   14000928e:	int3   
   14000928f:	int3   
   140009290:	mov    QWORD PTR [rsp+0x8],rbx
   140009295:	mov    QWORD PTR [rsp+0x10],rbp
   14000929a:	mov    QWORD PTR [rsp+0x18],rsi
   14000929f:	push   rdi
   1400092a0:	sub    rsp,0x20
   1400092a4:	mov    rbp,r8
   1400092a7:	mov    rsi,rdx
   1400092aa:	mov    rbx,rcx
   1400092ad:	test   rdx,rdx
   1400092b0:	je     0x140009301
   1400092b2:	cmp    QWORD PTR [rcx+0x18],0x10
   1400092b7:	jb     0x1400092be
   1400092b9:	mov    rax,QWORD PTR [rcx]
   1400092bc:	jmp    0x1400092c1
   1400092be:	mov    rax,rcx
   1400092c1:	cmp    rdx,rax
   1400092c4:	jb     0x140009301
   1400092c6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400092cb:	jb     0x1400092d0
   1400092cd:	mov    rcx,QWORD PTR [rcx]
   1400092d0:	add    rcx,QWORD PTR [rbx+0x10]
   1400092d4:	cmp    rcx,rdx
   1400092d7:	jbe    0x140009301
   1400092d9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400092de:	jb     0x1400092e5
   1400092e0:	mov    rax,QWORD PTR [rbx]
   1400092e3:	jmp    0x1400092e8
   1400092e5:	mov    rax,rbx
   1400092e8:	sub    rsi,rax
   1400092eb:	mov    r9,r8
   1400092ee:	mov    rdx,rbx
   1400092f1:	mov    r8,rsi
   1400092f4:	mov    rcx,rbx
   1400092f7:	call   0x140005638
   1400092fc:	jmp    0x1400093ac
   140009301:	mov    r8,QWORD PTR [rbx+0x10]
   140009305:	or     rax,0xffffffffffffffff
   140009309:	sub    rax,r8
   14000930c:	cmp    rax,rbp
   14000930f:	ja     0x14000931f
   140009311:	lea    rcx,[rip+0x47630]        # 0x140050948
   140009318:	call   QWORD PTR [rip+0x4027a]        # 0x140049598
   14000931e:	int3   
   14000931f:	test   rbp,rbp
   140009322:	je     0x1400093a9
   140009328:	lea    rdi,[r8+rbp*1]
   14000932c:	cmp    rdi,0xfffffffffffffffe
   140009330:	jbe    0x140009340
   140009332:	lea    rcx,[rip+0x4760f]        # 0x140050948
   140009339:	call   QWORD PTR [rip+0x40259]        # 0x140049598
   14000933f:	int3   
   140009340:	cmp    QWORD PTR [rbx+0x18],rdi
   140009344:	jae    0x140009353
   140009346:	mov    rdx,rdi
   140009349:	mov    rcx,rbx
   14000934c:	call   0x140005750
   140009351:	jmp    0x14000936e
   140009353:	test   rdi,rdi
   140009356:	jne    0x140009373
   140009358:	and    QWORD PTR [rbx+0x10],rdi
   14000935c:	cmp    QWORD PTR [rbx+0x18],0x10
   140009361:	jb     0x140009368
   140009363:	mov    rax,QWORD PTR [rbx]
   140009366:	jmp    0x14000936b
   140009368:	mov    rax,rbx
   14000936b:	mov    BYTE PTR [rax],0x0
   14000936e:	test   rdi,rdi
   140009371:	je     0x1400093a9
   140009373:	cmp    QWORD PTR [rbx+0x18],0x10
   140009378:	jb     0x14000937f
   14000937a:	mov    rcx,QWORD PTR [rbx]
   14000937d:	jmp    0x140009382
   14000937f:	mov    rcx,rbx
   140009382:	add    rcx,QWORD PTR [rbx+0x10]
   140009386:	mov    r8,rbp
   140009389:	mov    rdx,rsi
   14000938c:	call   QWORD PTR [rip+0x40536]        # 0x1400498c8
   140009392:	cmp    QWORD PTR [rbx+0x18],0x10
   140009397:	mov    QWORD PTR [rbx+0x10],rdi
   14000939b:	jb     0x1400093a2
   14000939d:	mov    rax,QWORD PTR [rbx]
   1400093a0:	jmp    0x1400093a5
   1400093a2:	mov    rax,rbx
   1400093a5:	mov    BYTE PTR [rax+rdi*1],0x0
   1400093a9:	mov    rax,rbx
   1400093ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093b1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400093b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400093bb:	add    rsp,0x20
   1400093bf:	pop    rdi
   1400093c0:	ret    
   1400093c1:	int3   
   1400093c2:	int3   
   1400093c3:	int3   
   1400093c4:	mov    rax,rsp
   1400093c7:	mov    QWORD PTR [rax+0x8],rcx
   1400093cb:	push   rbp
   1400093cc:	push   rsi
   1400093cd:	push   rdi
   1400093ce:	sub    rsp,0x30
   1400093d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400093db:	mov    QWORD PTR [rax+0x18],rbx
   1400093df:	mov    rsi,r8
   1400093e2:	mov    rbp,rdx
   1400093e5:	mov    rbx,rcx
   1400093e8:	and    DWORD PTR [rax+0x10],0x0
   1400093ec:	mov    QWORD PTR [rcx+0x18],0xf
   1400093f4:	and    QWORD PTR [rcx+0x10],0x0
   1400093f9:	mov    BYTE PTR [rcx],0x0
   1400093fc:	mov    DWORD PTR [rax+0x10],0x1
   140009403:	mov    rdx,QWORD PTR [r8+0x10]
   140009407:	add    rdx,QWORD PTR [rbp+0x10]
   14000940b:	mov    rdi,QWORD PTR [rcx+0x10]
   14000940f:	cmp    rdi,rdx
   140009412:	ja     0x14000943d
   140009414:	cmp    QWORD PTR [rcx+0x18],rdx
   140009418:	je     0x14000943d
   14000941a:	mov    r8b,0x1
   14000941d:	call   0x140005324
   140009422:	test   al,al
   140009424:	je     0x14000943d
   140009426:	mov    QWORD PTR [rbx+0x10],rdi
   14000942a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000942f:	jb     0x140009436
   140009431:	mov    rax,QWORD PTR [rbx]
   140009434:	jmp    0x140009439
   140009436:	mov    rax,rbx
   140009439:	mov    BYTE PTR [rax+rdi*1],0x0
   14000943d:	or     rdi,0xffffffffffffffff
   140009441:	mov    r9,rdi
   140009444:	xor    r8d,r8d
   140009447:	mov    rdx,rbp
   14000944a:	mov    rcx,rbx
   14000944d:	call   0x140005638
   140009452:	mov    r9,rdi
   140009455:	xor    r8d,r8d
   140009458:	mov    rdx,rsi
   14000945b:	mov    rcx,rbx
   14000945e:	call   0x140005638
   140009463:	mov    rax,rbx
   140009466:	mov    rbx,QWORD PTR [rsp+0x60]
   14000946b:	add    rsp,0x30
   14000946f:	pop    rdi
   140009470:	pop    rsi
   140009471:	pop    rbp
   140009472:	ret    
   140009473:	int3   
   140009474:	mov    rax,rsp
   140009477:	mov    QWORD PTR [rax+0x8],rcx
   14000947b:	push   rsi
   14000947c:	push   rdi
   14000947d:	push   r12
   14000947f:	sub    rsp,0x70
   140009483:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000948c:	mov    QWORD PTR [rax+0x18],rbx
   140009490:	mov    QWORD PTR [rax+0x20],rbp
   140009494:	mov    rsi,rdx
   140009497:	mov    rdi,rcx
   14000949a:	and    DWORD PTR [rax+0x10],0x0
   14000949e:	mov    QWORD PTR [rcx+0x18],0xf
   1400094a6:	and    QWORD PTR [rcx+0x10],0x0
   1400094ab:	mov    BYTE PTR [rcx],0x0
   1400094ae:	mov    DWORD PTR [rax+0x10],0x1
   1400094b5:	cmp    QWORD PTR [rdx+0x18],0x8
   1400094ba:	jb     0x1400094c1
   1400094bc:	mov    r8,QWORD PTR [rdx]
   1400094bf:	jmp    0x1400094c4
   1400094c1:	mov    r8,rdx
   1400094c4:	and    QWORD PTR [rsp+0x38],0x0
   1400094ca:	and    QWORD PTR [rsp+0x30],0x0
   1400094d0:	and    DWORD PTR [rsp+0x28],0x0
   1400094d5:	and    QWORD PTR [rsp+0x20],0x0
   1400094db:	or     r9d,0xffffffff
   1400094df:	xor    edx,edx
   1400094e1:	mov    ecx,0xfde9
   1400094e6:	call   QWORD PTR [rip+0x3fbac]        # 0x140049098
   1400094ec:	test   eax,eax
   1400094ee:	je     0x1400095a9
   1400094f4:	mov    r12d,eax
   1400094f7:	xor    ebx,ebx
   1400094f9:	mov    QWORD PTR [rsp+0x48],rbx
   1400094fe:	xor    ebp,ebp
   140009500:	mov    QWORD PTR [rsp+0x50],rbp
   140009505:	and    QWORD PTR [rsp+0x58],rbx
   14000950a:	test   eax,eax
   14000950c:	je     0x140009543
   14000950e:	mov    edx,r12d
   140009511:	lea    rcx,[rsp+0x48]
   140009516:	call   0x140009d00
   14000951b:	mov    rbp,QWORD PTR [rsp+0x50]
   140009520:	mov    rbx,QWORD PTR [rsp+0x48]
   140009525:	mov    r8d,r12d
   140009528:	sub    r8,rbp
   14000952b:	add    r8,rbx
   14000952e:	je     0x14000953a
   140009530:	xor    edx,edx
   140009532:	mov    rcx,rbp
   140009535:	call   0x14002b144
   14000953a:	lea    rbp,[r12+rbx*1]
   14000953e:	mov    QWORD PTR [rsp+0x50],rbp
   140009543:	mov    r8,r12
   140009546:	xor    edx,edx
   140009548:	mov    rcx,rbx
   14000954b:	call   QWORD PTR [rip+0x40107]        # 0x140049658
   140009551:	sub    rbp,rbx
   140009554:	cmp    QWORD PTR [rsi+0x18],0x8
   140009559:	jb     0x14000955e
   14000955b:	mov    rsi,QWORD PTR [rsi]
   14000955e:	and    QWORD PTR [rsp+0x38],0x0
   140009564:	and    QWORD PTR [rsp+0x30],0x0
   14000956a:	mov    DWORD PTR [rsp+0x28],ebp
   14000956e:	mov    QWORD PTR [rsp+0x20],rbx
   140009573:	or     r9d,0xffffffff
   140009577:	mov    r8,rsi
   14000957a:	xor    edx,edx
   14000957c:	mov    ecx,0xfde9
   140009581:	call   QWORD PTR [rip+0x3fb11]        # 0x140049098
   140009587:	test   eax,eax
   140009589:	jle    0x14000959b
   14000958b:	lea    r8,[rbp-0x1]
   14000958f:	mov    rdx,rbx
   140009592:	mov    rcx,rdi
   140009595:	call   0x140005154
   14000959a:	nop
   14000959b:	test   rbx,rbx
   14000959e:	je     0x1400095a9
   1400095a0:	mov    rcx,rbx
   1400095a3:	call   QWORD PTR [rip+0x400cf]        # 0x140049678
   1400095a9:	mov    rax,rdi
   1400095ac:	lea    r11,[rsp+0x70]
   1400095b1:	mov    rbx,QWORD PTR [r11+0x30]
   1400095b5:	mov    rbp,QWORD PTR [r11+0x38]
   1400095b9:	mov    rsp,r11
   1400095bc:	pop    r12
   1400095be:	pop    rdi
   1400095bf:	pop    rsi
   1400095c0:	ret    
   1400095c1:	int3   
   1400095c2:	int3   
   1400095c3:	int3   
   1400095c4:	mov    rax,rsp
   1400095c7:	mov    QWORD PTR [rax+0x8],rcx
   1400095cb:	push   rsi
   1400095cc:	push   rdi
   1400095cd:	push   r12
   1400095cf:	sub    rsp,0x60
   1400095d3:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400095dc:	mov    QWORD PTR [rax+0x18],rbx
   1400095e0:	mov    QWORD PTR [rax+0x20],rbp
   1400095e4:	mov    rdi,rdx
   1400095e7:	mov    rsi,rcx
   1400095ea:	xor    r12d,r12d
   1400095ed:	mov    DWORD PTR [rax+0x10],r12d
   1400095f1:	mov    QWORD PTR [rcx+0x18],0x7
   1400095f9:	mov    QWORD PTR [rcx+0x10],r12
   1400095fd:	mov    WORD PTR [rcx],r12w
   140009601:	mov    DWORD PTR [rax+0x10],0x1
   140009608:	cmp    QWORD PTR [rdx+0x18],0x10
   14000960d:	jb     0x140009614
   14000960f:	mov    r8,QWORD PTR [rdx]
   140009612:	jmp    0x140009617
   140009614:	mov    r8,rdx
   140009617:	mov    DWORD PTR [rsp+0x28],r12d
   14000961c:	mov    QWORD PTR [rsp+0x20],r12
   140009621:	mov    r9d,DWORD PTR [rdx+0x10]
   140009625:	xor    edx,edx
   140009627:	mov    ecx,0xfde9
   14000962c:	call   QWORD PTR [rip+0x3f9fe]        # 0x140049030
   140009632:	test   eax,eax
   140009634:	je     0x1400096b1
   140009636:	inc    eax
   140009638:	mov    ebx,eax
   14000963a:	mov    edx,eax
   14000963c:	lea    rcx,[rsp+0x38]
   140009641:	call   0x1400097f8
   140009646:	nop
   140009647:	mov    r8d,ebx
   14000964a:	xor    edx,edx
   14000964c:	mov    rbx,QWORD PTR [rsp+0x38]
   140009651:	mov    rcx,rbx
   140009654:	call   QWORD PTR [rip+0x3fffe]        # 0x140049658
   14000965a:	mov    rbp,QWORD PTR [rsp+0x40]
   14000965f:	sub    rbp,rbx
   140009662:	sar    rbp,1
   140009665:	mov    rax,QWORD PTR [rdi+0x10]
   140009669:	cmp    QWORD PTR [rdi+0x18],0x10
   14000966e:	jb     0x140009673
   140009670:	mov    rdi,QWORD PTR [rdi]
   140009673:	mov    DWORD PTR [rsp+0x28],ebp
   140009677:	mov    QWORD PTR [rsp+0x20],rbx
   14000967c:	mov    r9d,eax
   14000967f:	mov    r8,rdi
   140009682:	xor    edx,edx
   140009684:	mov    ecx,0xfde9
   140009689:	call   QWORD PTR [rip+0x3f9a1]        # 0x140049030
   14000968f:	test   eax,eax
   140009691:	jle    0x1400096a3
   140009693:	lea    r8,[rbp-0x1]
   140009697:	mov    rdx,rbx
   14000969a:	mov    rcx,rsi
   14000969d:	call   0x1400096cc
   1400096a2:	nop
   1400096a3:	test   rbx,rbx
   1400096a6:	je     0x1400096b1
   1400096a8:	mov    rcx,rbx
   1400096ab:	call   QWORD PTR [rip+0x3ffc7]        # 0x140049678
   1400096b1:	mov    rax,rsi
   1400096b4:	lea    r11,[rsp+0x60]
   1400096b9:	mov    rbx,QWORD PTR [r11+0x30]
   1400096bd:	mov    rbp,QWORD PTR [r11+0x38]
   1400096c1:	mov    rsp,r11
   1400096c4:	pop    r12
   1400096c6:	pop    rdi
   1400096c7:	pop    rsi
   1400096c8:	ret    
   1400096c9:	int3   
   1400096ca:	int3   
   1400096cb:	int3   
   1400096cc:	mov    rax,rsp
   1400096cf:	mov    QWORD PTR [rax+0x8],rbx
   1400096d3:	mov    QWORD PTR [rax+0x10],rbp
   1400096d7:	mov    QWORD PTR [rax+0x18],rsi
   1400096db:	mov    QWORD PTR [rax+0x20],rdi
   1400096df:	push   r12
   1400096e1:	sub    rsp,0x20
   1400096e5:	xor    r12d,r12d
   1400096e8:	mov    rdi,r8
   1400096eb:	mov    rbp,rdx
   1400096ee:	mov    rbx,rcx
   1400096f1:	test   rdx,rdx
   1400096f4:	je     0x14000974c
   1400096f6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400096fb:	jb     0x140009702
   1400096fd:	mov    rax,QWORD PTR [rcx]
   140009700:	jmp    0x140009705
   140009702:	mov    rax,rcx
   140009705:	cmp    rdx,rax
   140009708:	jb     0x14000974c
   14000970a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000970f:	jb     0x140009714
   140009711:	mov    rcx,QWORD PTR [rcx]
   140009714:	mov    rax,QWORD PTR [rbx+0x10]
   140009718:	lea    rcx,[rcx+rax*2]
   14000971c:	cmp    rcx,rdx
   14000971f:	jbe    0x14000974c
   140009721:	cmp    QWORD PTR [rbx+0x18],0x8
   140009726:	jb     0x14000972d
   140009728:	mov    rax,QWORD PTR [rbx]
   14000972b:	jmp    0x140009730
   14000972d:	mov    rax,rbx
   140009730:	sub    rbp,rax
   140009733:	mov    r9,r8
   140009736:	mov    rdx,rbx
   140009739:	sar    rbp,1
   14000973c:	mov    rcx,rbx
   14000973f:	mov    r8,rbp
   140009742:	call   0x140009914
   140009747:	jmp    0x1400097db
   14000974c:	movabs rax,0x7ffffffffffffffe
   140009756:	cmp    r8,rax
   140009759:	jbe    0x140009769
   14000975b:	lea    rcx,[rip+0x471e6]        # 0x140050948
   140009762:	call   QWORD PTR [rip+0x3fe30]        # 0x140049598
   140009768:	int3   
   140009769:	cmp    QWORD PTR [rbx+0x18],r8
   14000976d:	jae    0x140009780
   14000976f:	mov    r8,QWORD PTR [rbx+0x10]
   140009773:	mov    rdx,rdi
   140009776:	mov    rcx,rbx
   140009779:	call   0x140009ba8
   14000977e:	jmp    0x14000979c
   140009780:	test   r8,r8
   140009783:	jne    0x14000979c
   140009785:	cmp    QWORD PTR [rbx+0x18],0x8
   14000978a:	mov    QWORD PTR [rbx+0x10],r12
   14000978e:	jb     0x140009795
   140009790:	mov    rax,QWORD PTR [rbx]
   140009793:	jmp    0x140009798
   140009795:	mov    rax,rbx
   140009798:	mov    WORD PTR [rax],r12w
   14000979c:	test   rdi,rdi
   14000979f:	je     0x1400097d8
   1400097a1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400097a6:	jb     0x1400097ad
   1400097a8:	mov    rcx,QWORD PTR [rbx]
   1400097ab:	jmp    0x1400097b0
   1400097ad:	mov    rcx,rbx
   1400097b0:	lea    rsi,[rdi+rdi*1]
   1400097b4:	mov    rdx,rbp
   1400097b7:	mov    r8,rsi
   1400097ba:	call   QWORD PTR [rip+0x40108]        # 0x1400498c8
   1400097c0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400097c5:	mov    QWORD PTR [rbx+0x10],rdi
   1400097c9:	jb     0x1400097d0
   1400097cb:	mov    rax,QWORD PTR [rbx]
   1400097ce:	jmp    0x1400097d3
   1400097d0:	mov    rax,rbx
   1400097d3:	mov    WORD PTR [rsi+rax*1],r12w
   1400097d8:	mov    rax,rbx
   1400097db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097e0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400097e5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400097ea:	mov    rdi,QWORD PTR [rsp+0x48]
   1400097ef:	add    rsp,0x20
   1400097f3:	pop    r12
   1400097f5:	ret    
   1400097f6:	int3   
   1400097f7:	int3   
   1400097f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400097fd:	mov    QWORD PTR [rsp+0x10],rbp
   140009802:	mov    QWORD PTR [rsp+0x18],rsi
   140009807:	push   rdi
   140009808:	sub    rsp,0x20
   14000980c:	xor    ebp,ebp
   14000980e:	mov    rsi,rdx
   140009811:	mov    rbx,rcx
   140009814:	mov    QWORD PTR [rcx],rbp
   140009817:	mov    QWORD PTR [rcx+0x8],rbp
   14000981b:	mov    QWORD PTR [rcx+0x10],rbp
   14000981f:	test   rdx,rdx
   140009822:	je     0x140009865
   140009824:	mov    edx,ebp
   140009826:	test   rsi,rsi
   140009829:	cmovne rdx,rsi
   14000982d:	call   0x140009df0
   140009832:	mov    rdi,QWORD PTR [rbx+0x8]
   140009836:	mov    rcx,rsi
   140009839:	mov    rax,rdi
   14000983c:	sub    rax,QWORD PTR [rbx]
   14000983f:	sar    rax,1
   140009842:	sub    rcx,rax
   140009845:	je     0x14000984d
   140009847:	movzx  eax,bp
   14000984a:	rep stos WORD PTR es:[rdi],ax
   14000984d:	mov    rcx,QWORD PTR [rbx+0x8]
   140009851:	mov    rax,rcx
   140009854:	sub    rax,QWORD PTR [rbx]
   140009857:	sar    rax,1
   14000985a:	sub    rsi,rax
   14000985d:	lea    rax,[rcx+rsi*2]
   140009861:	mov    QWORD PTR [rbx+0x8],rax
   140009865:	mov    rbp,QWORD PTR [rsp+0x38]
   14000986a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000986f:	mov    rax,rbx
   140009872:	mov    rbx,QWORD PTR [rsp+0x30]
   140009877:	add    rsp,0x20
   14000987b:	pop    rdi
   14000987c:	ret    
   14000987d:	int3   
   14000987e:	int3   
   14000987f:	int3   
   140009880:	mov    QWORD PTR [rsp+0x8],rbx
   140009885:	mov    QWORD PTR [rsp+0x10],rsi
   14000988a:	push   rdi
   14000988b:	sub    rsp,0x20
   14000988f:	mov    rdi,rdx
   140009892:	mov    rbx,rcx
   140009895:	cmp    rcx,rdx
   140009898:	je     0x140009901
   14000989a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000989f:	jb     0x1400098aa
   1400098a1:	mov    rcx,QWORD PTR [rcx]
   1400098a4:	call   QWORD PTR [rip+0x3fdce]        # 0x140049678
   1400098aa:	xor    esi,esi
   1400098ac:	mov    QWORD PTR [rbx+0x18],0x7
   1400098b4:	mov    QWORD PTR [rbx+0x10],rsi
   1400098b8:	mov    WORD PTR [rbx],si
   1400098bb:	cmp    QWORD PTR [rdi+0x18],0x8
   1400098c0:	jae    0x1400098d9
   1400098c2:	mov    r8,QWORD PTR [rdi+0x10]
   1400098c6:	mov    rdx,rdi
   1400098c9:	mov    rcx,rbx
   1400098cc:	lea    r8,[r8+r8*1+0x2]
   1400098d1:	call   QWORD PTR [rip+0x3fd19]        # 0x1400495f0
   1400098d7:	jmp    0x1400098e2
   1400098d9:	mov    rax,QWORD PTR [rdi]
   1400098dc:	mov    QWORD PTR [rbx],rax
   1400098df:	mov    QWORD PTR [rdi],rsi
   1400098e2:	mov    rax,QWORD PTR [rdi+0x10]
   1400098e6:	mov    QWORD PTR [rbx+0x10],rax
   1400098ea:	mov    rax,QWORD PTR [rdi+0x18]
   1400098ee:	mov    QWORD PTR [rbx+0x18],rax
   1400098f2:	mov    QWORD PTR [rdi+0x18],0x7
   1400098fa:	mov    QWORD PTR [rdi+0x10],rsi
   1400098fe:	mov    WORD PTR [rdi],si
   140009901:	mov    rsi,QWORD PTR [rsp+0x38]
   140009906:	mov    rax,rbx
   140009909:	mov    rbx,QWORD PTR [rsp+0x30]
   14000990e:	add    rsp,0x20
   140009912:	pop    rdi
   140009913:	ret    
   140009914:	mov    QWORD PTR [rsp+0x8],rbx
   140009919:	mov    QWORD PTR [rsp+0x10],rbp
   14000991e:	mov    QWORD PTR [rsp+0x18],rsi
   140009923:	push   rdi
   140009924:	push   r12
   140009926:	push   r13
   140009928:	sub    rsp,0x20
   14000992c:	mov    rdi,QWORD PTR [rdx+0x10]
   140009930:	mov    r12,r8
   140009933:	mov    rsi,rdx
   140009936:	mov    rbx,rcx
   140009939:	cmp    rdi,r8
   14000993c:	jae    0x14000994c
   14000993e:	lea    rcx,[rip+0x46feb]        # 0x140050930
   140009945:	call   QWORD PTR [rip+0x3fc65]        # 0x1400495b0
   14000994b:	int3   
   14000994c:	sub    rdi,r8
   14000994f:	cmp    r9,rdi
   140009952:	cmovb  rdi,r9
   140009956:	cmp    rcx,rdx
   140009959:	jne    0x14000997a
   14000995b:	lea    rdx,[rdi+r8*1]
   14000995f:	or     r8,0xffffffffffffffff
   140009963:	call   0x140009b04
   140009968:	mov    r8,r12
   14000996b:	xor    edx,edx
   14000996d:	mov    rcx,rbx
   140009970:	call   0x140009b04
   140009975:	jmp    0x140009a11
   14000997a:	movabs rax,0x7ffffffffffffffe
   140009984:	cmp    rdi,rax
   140009987:	jbe    0x140009997
   140009989:	lea    rcx,[rip+0x46fb8]        # 0x140050948
   140009990:	call   QWORD PTR [rip+0x3fc02]        # 0x140049598
   140009996:	int3   
   140009997:	xor    r13d,r13d
   14000999a:	cmp    QWORD PTR [rcx+0x18],rdi
   14000999e:	jae    0x1400099ae
   1400099a0:	mov    r8,QWORD PTR [rcx+0x10]
   1400099a4:	mov    rdx,rdi
   1400099a7:	call   0x140009ba8
   1400099ac:	jmp    0x1400099ca
   1400099ae:	test   rdi,rdi
   1400099b1:	jne    0x1400099cf
   1400099b3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400099b8:	mov    QWORD PTR [rcx+0x10],r13
   1400099bc:	jb     0x1400099c3
   1400099be:	mov    rax,QWORD PTR [rcx]
   1400099c1:	jmp    0x1400099c6
   1400099c3:	mov    rax,rcx
   1400099c6:	mov    WORD PTR [rax],r13w
   1400099ca:	test   rdi,rdi
   1400099cd:	je     0x140009a11
   1400099cf:	cmp    QWORD PTR [rsi+0x18],0x8
   1400099d4:	jb     0x1400099d9
   1400099d6:	mov    rsi,QWORD PTR [rsi]
   1400099d9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400099de:	jb     0x1400099e5
   1400099e0:	mov    rcx,QWORD PTR [rbx]
   1400099e3:	jmp    0x1400099e8
   1400099e5:	mov    rcx,rbx
   1400099e8:	lea    rbp,[rdi+rdi*1]
   1400099ec:	lea    rdx,[rsi+r12*2]
   1400099f0:	mov    r8,rbp
   1400099f3:	call   QWORD PTR [rip+0x3fecf]        # 0x1400498c8
   1400099f9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400099fe:	mov    QWORD PTR [rbx+0x10],rdi
   140009a02:	jb     0x140009a09
   140009a04:	mov    rax,QWORD PTR [rbx]
   140009a07:	jmp    0x140009a0c
   140009a09:	mov    rax,rbx
   140009a0c:	mov    WORD PTR [rax+rbp*1],r13w
   140009a11:	mov    rbp,QWORD PTR [rsp+0x48]
   140009a16:	mov    rsi,QWORD PTR [rsp+0x50]
   140009a1b:	mov    rax,rbx
   140009a1e:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a23:	add    rsp,0x20
   140009a27:	pop    r13
   140009a29:	pop    r12
   140009a2b:	pop    rdi
   140009a2c:	ret    
   140009a2d:	int3   
   140009a2e:	int3   
   140009a2f:	int3   
   140009a30:	mov    rax,rsp
   140009a33:	mov    QWORD PTR [rax+0x8],rbx
   140009a37:	mov    QWORD PTR [rax+0x10],rbp
   140009a3b:	mov    QWORD PTR [rax+0x18],rsi
   140009a3f:	mov    QWORD PTR [rax+0x20],rdi
   140009a43:	push   r12
   140009a45:	sub    rsp,0x20
   140009a49:	movabs rax,0x7ffffffffffffffe
   140009a53:	mov    rsi,rdx
   140009a56:	mov    rbx,rcx
   140009a59:	cmp    rdx,rax
   140009a5c:	jbe    0x140009a6c
   140009a5e:	lea    rcx,[rip+0x46ee3]        # 0x140050948
   140009a65:	call   QWORD PTR [rip+0x3fb2d]        # 0x140049598
   140009a6b:	int3   
   140009a6c:	xor    edi,edi
   140009a6e:	cmp    QWORD PTR [rcx+0x18],rdx
   140009a72:	jae    0x140009a7f
   140009a74:	mov    r8,QWORD PTR [rcx+0x10]
   140009a78:	call   0x140009ba8
   140009a7d:	jmp    0x140009ae3
   140009a7f:	test   r8b,r8b
   140009a82:	je     0x140009acd
   140009a84:	cmp    rdx,0x8
   140009a88:	jae    0x140009acd
   140009a8a:	mov    rbp,QWORD PTR [rcx+0x10]
   140009a8e:	cmp    rdx,rbp
   140009a91:	cmovb  rbp,rdx
   140009a95:	cmp    QWORD PTR [rcx+0x18],0x8
   140009a9a:	jb     0x140009abb
   140009a9c:	mov    r12,QWORD PTR [rcx]
   140009a9f:	test   rbp,rbp
   140009aa2:	je     0x140009ab2
   140009aa4:	lea    r8,[rbp+rbp*1+0x0]
   140009aa9:	mov    rdx,r12
   140009aac:	call   QWORD PTR [rip+0x3fe16]        # 0x1400498c8
   140009ab2:	mov    rcx,r12
   140009ab5:	call   QWORD PTR [rip+0x3fbbd]        # 0x140049678
   140009abb:	mov    QWORD PTR [rbx+0x18],0x7
   140009ac3:	mov    QWORD PTR [rbx+0x10],rbp
   140009ac7:	mov    WORD PTR [rbx+rbp*2],di
   140009acb:	jmp    0x140009ae3
   140009acd:	test   rdx,rdx
   140009ad0:	jne    0x140009ae3
   140009ad2:	cmp    QWORD PTR [rcx+0x18],0x8
   140009ad7:	mov    QWORD PTR [rcx+0x10],rdi
   140009adb:	jb     0x140009ae0
   140009add:	mov    rbx,QWORD PTR [rcx]
   140009ae0:	mov    WORD PTR [rbx],di
   140009ae3:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ae8:	mov    rbp,QWORD PTR [rsp+0x38]
   140009aed:	mov    rdi,QWORD PTR [rsp+0x48]
   140009af2:	test   rsi,rsi
   140009af5:	mov    rsi,QWORD PTR [rsp+0x40]
   140009afa:	setne  al
   140009afd:	add    rsp,0x20
   140009b01:	pop    r12
   140009b03:	ret    
   140009b04:	mov    QWORD PTR [rsp+0x8],rbx
   140009b09:	mov    QWORD PTR [rsp+0x10],rsi
   140009b0e:	push   rdi
   140009b0f:	sub    rsp,0x20
   140009b13:	mov    rdi,r8
   140009b16:	mov    r8,QWORD PTR [rcx+0x10]
   140009b1a:	mov    r9,rdx
   140009b1d:	mov    rbx,rcx
   140009b20:	cmp    r8,rdx
   140009b23:	jae    0x140009b33
   140009b25:	lea    rcx,[rip+0x46e04]        # 0x140050930
   140009b2c:	call   QWORD PTR [rip+0x3fa7e]        # 0x1400495b0
   140009b32:	int3   
   140009b33:	sub    r8,rdx
   140009b36:	cmp    r8,rdi
   140009b39:	cmovb  rdi,r8
   140009b3d:	xor    esi,esi
   140009b3f:	test   rdi,rdi
   140009b42:	je     0x140009b94
   140009b44:	cmp    QWORD PTR [rcx+0x18],0x8
   140009b49:	jb     0x140009b50
   140009b4b:	mov    rdx,QWORD PTR [rcx]
   140009b4e:	jmp    0x140009b53
   140009b50:	mov    rdx,rcx
   140009b53:	cmp    QWORD PTR [rcx+0x18],0x8
   140009b58:	jb     0x140009b5d
   140009b5a:	mov    rcx,QWORD PTR [rcx]
   140009b5d:	lea    rax,[r9+rdi*1]
   140009b61:	sub    r8,rdi
   140009b64:	lea    rcx,[rcx+r9*2]
   140009b68:	lea    rdx,[rdx+rax*2]
   140009b6c:	add    r8,r8
   140009b6f:	call   QWORD PTR [rip+0x3fa7b]        # 0x1400495f0
   140009b75:	mov    r11,QWORD PTR [rbx+0x10]
   140009b79:	sub    r11,rdi
   140009b7c:	cmp    QWORD PTR [rbx+0x18],0x8
   140009b81:	mov    QWORD PTR [rbx+0x10],r11
   140009b85:	jb     0x140009b8c
   140009b87:	mov    rax,QWORD PTR [rbx]
   140009b8a:	jmp    0x140009b8f
   140009b8c:	mov    rax,rbx
   140009b8f:	mov    WORD PTR [rax+r11*2],si
   140009b94:	mov    rsi,QWORD PTR [rsp+0x38]
   140009b99:	mov    rax,rbx
   140009b9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ba1:	add    rsp,0x20
   140009ba5:	pop    rdi
   140009ba6:	ret    
   140009ba7:	int3   
   140009ba8:	mov    QWORD PTR [rsp+0x18],r8
   140009bad:	mov    QWORD PTR [rsp+0x10],rdx
   140009bb2:	mov    QWORD PTR [rsp+0x8],rcx
   140009bb7:	push   rbx
   140009bb8:	push   rsi
   140009bb9:	push   rdi
   140009bba:	push   r12
   140009bbc:	push   r13
   140009bbe:	sub    rsp,0x60
   140009bc2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009bcb:	mov    r13,r8
   140009bce:	mov    rsi,rcx
   140009bd1:	mov    rbx,rdx
   140009bd4:	or     rbx,0x7
   140009bd8:	movabs r9,0x7ffffffffffffffe
   140009be2:	cmp    rbx,r9
   140009be5:	jbe    0x140009bec
   140009be7:	mov    rbx,rdx
   140009bea:	jmp    0x140009c1d
   140009bec:	mov    r8,QWORD PTR [rcx+0x18]
   140009bf0:	mov    rcx,r8
   140009bf3:	shr    rcx,1
   140009bf6:	movabs rax,0xaaaaaaaaaaaaaaab
   140009c00:	mul    rbx
   140009c03:	shr    rdx,1
   140009c06:	cmp    rcx,rdx
   140009c09:	jbe    0x140009c1d
   140009c0b:	mov    rax,r9
   140009c0e:	sub    rax,rcx
   140009c11:	cmp    r8,rax
   140009c14:	lea    rbx,[rcx+r8*1]
   140009c18:	jbe    0x140009c1d
   140009c1a:	mov    rbx,r9
   140009c1d:	lea    rcx,[rbx+0x1]
   140009c21:	xor    edi,edi
   140009c23:	mov    r12d,edi
   140009c26:	test   rcx,rcx
   140009c29:	je     0x140009c84
   140009c2b:	movabs rax,0x7fffffffffffffff
   140009c35:	cmp    rcx,rax
   140009c38:	ja     0x140009c4b
   140009c3a:	add    rcx,rcx
   140009c3d:	call   QWORD PTR [rip+0x3fa55]        # 0x140049698
   140009c43:	mov    r12,rax
   140009c46:	test   rax,rax
   140009c49:	jne    0x140009c84
   140009c4b:	mov    QWORD PTR [rsp+0xa8],rdi
   140009c53:	lea    rdx,[rsp+0xa8]
   140009c5b:	lea    rcx,[rsp+0x28]
   140009c60:	call   QWORD PTR [rip+0x3fc6a]        # 0x1400498d0
   140009c66:	lea    rax,[rip+0x4056b]        # 0x14004a1d8
   140009c6d:	mov    QWORD PTR [rsp+0x28],rax
   140009c72:	lea    rdx,[rip+0x59acf]        # 0x140063748
   140009c79:	lea    rcx,[rsp+0x28]
   140009c7e:	call   0x14002b560
   140009c83:	nop
   140009c84:	jmp    0x140009ca8
   140009c86:	xor    edi,edi
   140009c88:	mov    rsi,QWORD PTR [rsp+0x90]
   140009c90:	mov    r13,QWORD PTR [rsp+0xa0]
   140009c98:	mov    rbx,QWORD PTR [rsp+0x98]
   140009ca0:	mov    r12,QWORD PTR [rsp+0xa8]
   140009ca8:	test   r13,r13
   140009cab:	je     0x140009cca
   140009cad:	cmp    QWORD PTR [rsi+0x18],0x8
   140009cb2:	jb     0x140009cb9
   140009cb4:	mov    rdx,QWORD PTR [rsi]
   140009cb7:	jmp    0x140009cbc
   140009cb9:	mov    rdx,rsi
   140009cbc:	lea    r8,[r13+r13*1+0x0]
   140009cc1:	mov    rcx,r12
   140009cc4:	call   QWORD PTR [rip+0x3fbfe]        # 0x1400498c8
   140009cca:	cmp    QWORD PTR [rsi+0x18],0x8
   140009ccf:	jb     0x140009cda
   140009cd1:	mov    rcx,QWORD PTR [rsi]
   140009cd4:	call   QWORD PTR [rip+0x3f99e]        # 0x140049678
   140009cda:	mov    QWORD PTR [rsi],r12
   140009cdd:	mov    QWORD PTR [rsi+0x18],rbx
   140009ce1:	mov    QWORD PTR [rsi+0x10],r13
   140009ce5:	cmp    rbx,0x8
   140009ce9:	cmovae rsi,r12
   140009ced:	mov    WORD PTR [rsi+r13*2],di
   140009cf2:	add    rsp,0x60
   140009cf6:	pop    r13
   140009cf8:	pop    r12
   140009cfa:	pop    rdi
   140009cfb:	pop    rsi
   140009cfc:	pop    rbx
   140009cfd:	ret    
   140009cfe:	int3   
   140009cff:	int3   
   140009d00:	push   r12
   140009d02:	sub    rsp,0x40
   140009d06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009d0f:	mov    QWORD PTR [rsp+0x50],rbx
   140009d14:	mov    QWORD PTR [rsp+0x60],rsi
   140009d19:	mov    QWORD PTR [rsp+0x68],rdi
   140009d1e:	mov    rsi,rdx
   140009d21:	mov    rdi,rcx
   140009d24:	cmp    rdx,0xffffffffffffffff
   140009d28:	jbe    0x140009d38
   140009d2a:	lea    rcx,[rip+0x46c27]        # 0x140050958
   140009d31:	call   QWORD PTR [rip+0x3f861]        # 0x140049598
   140009d37:	int3   
   140009d38:	mov    rax,QWORD PTR [rcx+0x10]
   140009d3c:	sub    rax,QWORD PTR [rcx]
   140009d3f:	cmp    rax,rdx
   140009d42:	jae    0x140009dd9
   140009d48:	xor    ebx,ebx
   140009d4a:	mov    QWORD PTR [rsp+0x58],rbx
   140009d4f:	test   rdx,rdx
   140009d52:	je     0x140009d9d
   140009d54:	mov    rcx,rdx
   140009d57:	call   QWORD PTR [rip+0x3f93b]        # 0x140049698
   140009d5d:	mov    rbx,rax
   140009d60:	mov    QWORD PTR [rsp+0x58],rax
   140009d65:	test   rax,rax
   140009d68:	jne    0x140009d9d
   140009d6a:	and    QWORD PTR [rsp+0x58],rax
   140009d6f:	lea    rdx,[rsp+0x58]
   140009d74:	lea    rcx,[rsp+0x28]
   140009d79:	call   QWORD PTR [rip+0x3fb51]        # 0x1400498d0
   140009d7f:	lea    r11,[rip+0x40452]        # 0x14004a1d8
   140009d86:	mov    QWORD PTR [rsp+0x28],r11
   140009d8b:	lea    rdx,[rip+0x599b6]        # 0x140063748
   140009d92:	lea    rcx,[rsp+0x28]
   140009d97:	call   0x14002b560
   140009d9c:	nop
   140009d9d:	mov    r8,QWORD PTR [rdi+0x8]
   140009da1:	sub    r8,QWORD PTR [rdi]
   140009da4:	mov    rdx,QWORD PTR [rdi]
   140009da7:	mov    rcx,rbx
   140009daa:	call   QWORD PTR [rip+0x3f840]        # 0x1400495f0
   140009db0:	nop
   140009db1:	mov    rcx,QWORD PTR [rdi]
   140009db4:	mov    r12,QWORD PTR [rdi+0x8]
   140009db8:	sub    r12,rcx
   140009dbb:	test   rcx,rcx
   140009dbe:	je     0x140009dc6
   140009dc0:	call   QWORD PTR [rip+0x3f8b2]        # 0x140049678
   140009dc6:	lea    rax,[rbx+rsi*1]
   140009dca:	mov    QWORD PTR [rdi+0x10],rax
   140009dce:	lea    rax,[rbx+r12*1]
   140009dd2:	mov    QWORD PTR [rdi+0x8],rax
   140009dd6:	mov    QWORD PTR [rdi],rbx
   140009dd9:	mov    rbx,QWORD PTR [rsp+0x50]
   140009dde:	mov    rsi,QWORD PTR [rsp+0x60]
   140009de3:	mov    rdi,QWORD PTR [rsp+0x68]
   140009de8:	add    rsp,0x40
   140009dec:	pop    r12
   140009dee:	ret    
   140009def:	int3   
   140009df0:	push   r12
   140009df2:	sub    rsp,0x40
   140009df6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009dff:	mov    QWORD PTR [rsp+0x50],rbx
   140009e04:	mov    QWORD PTR [rsp+0x60],rsi
   140009e09:	mov    QWORD PTR [rsp+0x68],rdi
   140009e0e:	mov    rsi,rdx
   140009e11:	mov    rdi,rcx
   140009e14:	movabs rax,0x7fffffffffffffff
   140009e1e:	cmp    rdx,rax
   140009e21:	jbe    0x140009e31
   140009e23:	lea    rcx,[rip+0x46b2e]        # 0x140050958
   140009e2a:	call   QWORD PTR [rip+0x3f768]        # 0x140049598
   140009e30:	int3   
   140009e31:	mov    rax,QWORD PTR [rcx+0x10]
   140009e35:	sub    rax,QWORD PTR [rcx]
   140009e38:	sar    rax,1
   140009e3b:	cmp    rax,rdx
   140009e3e:	jae    0x140009edf
   140009e44:	xor    ebx,ebx
   140009e46:	mov    QWORD PTR [rsp+0x58],rbx
   140009e4b:	test   rdx,rdx
   140009e4e:	je     0x140009e9a
   140009e50:	lea    rcx,[rdx+rdx*1]
   140009e54:	call   QWORD PTR [rip+0x3f83e]        # 0x140049698
   140009e5a:	mov    rbx,rax
   140009e5d:	mov    QWORD PTR [rsp+0x58],rax
   140009e62:	test   rax,rax
   140009e65:	jne    0x140009e9a
   140009e67:	and    QWORD PTR [rsp+0x58],rax
   140009e6c:	lea    rdx,[rsp+0x58]
   140009e71:	lea    rcx,[rsp+0x28]
   140009e76:	call   QWORD PTR [rip+0x3fa54]        # 0x1400498d0
   140009e7c:	lea    r11,[rip+0x40355]        # 0x14004a1d8
   140009e83:	mov    QWORD PTR [rsp+0x28],r11
   140009e88:	lea    rdx,[rip+0x598b9]        # 0x140063748
   140009e8f:	lea    rcx,[rsp+0x28]
   140009e94:	call   0x14002b560
   140009e99:	nop
   140009e9a:	mov    r8,QWORD PTR [rdi+0x8]
   140009e9e:	sub    r8,QWORD PTR [rdi]
   140009ea1:	sar    r8,1
   140009ea4:	add    r8,r8
   140009ea7:	mov    rdx,QWORD PTR [rdi]
   140009eaa:	mov    rcx,rbx
   140009ead:	call   QWORD PTR [rip+0x3f73d]        # 0x1400495f0
   140009eb3:	nop
   140009eb4:	mov    rcx,QWORD PTR [rdi]
   140009eb7:	mov    r12,QWORD PTR [rdi+0x8]
   140009ebb:	sub    r12,rcx
   140009ebe:	sar    r12,1
   140009ec1:	test   rcx,rcx
   140009ec4:	je     0x140009ecc
   140009ec6:	call   QWORD PTR [rip+0x3f7ac]        # 0x140049678
   140009ecc:	lea    rax,[rbx+rsi*2]
   140009ed0:	mov    QWORD PTR [rdi+0x10],rax
   140009ed4:	lea    rax,[rbx+r12*2]
   140009ed8:	mov    QWORD PTR [rdi+0x8],rax
   140009edc:	mov    QWORD PTR [rdi],rbx
   140009edf:	mov    rbx,QWORD PTR [rsp+0x50]
   140009ee4:	mov    rsi,QWORD PTR [rsp+0x60]
   140009ee9:	mov    rdi,QWORD PTR [rsp+0x68]
   140009eee:	add    rsp,0x40
   140009ef2:	pop    r12
   140009ef4:	ret    
   140009ef5:	int3   
   140009ef6:	int3   
   140009ef7:	int3   
   140009ef8:	mov    rax,rsp
   140009efb:	push   rbp
   140009efc:	push   rdi
   140009efd:	push   r13
   140009eff:	lea    rbp,[rax-0x5f]
   140009f03:	sub    rsp,0x90
   140009f0a:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   140009f12:	mov    QWORD PTR [rax+0x18],rbx
   140009f16:	mov    QWORD PTR [rax+0x20],rsi
   140009f1a:	mov    rax,QWORD PTR [rip+0x5e2cf]        # 0x1400681f0
   140009f21:	xor    rax,rsp
   140009f24:	mov    QWORD PTR [rbp+0x37],rax
   140009f28:	mov    rsi,rdx
   140009f2b:	mov    rbx,rcx
   140009f2e:	xor    r13d,r13d
   140009f31:	mov    DWORD PTR [rbp-0x29],r13d
   140009f35:	cmp    QWORD PTR [rdx+0x10],r13
   140009f39:	jne    0x140009f6f
   140009f3b:	mov    QWORD PTR [rcx+0x18],0x7
   140009f43:	mov    QWORD PTR [rcx+0x10],r13
   140009f47:	mov    WORD PTR [rcx],r13w
   140009f4b:	lea    rcx,[rip+0x46b9e]        # 0x140050af0
   140009f52:	call   QWORD PTR [rip+0x3f758]        # 0x1400496b0
   140009f58:	mov    r8,rax
   140009f5b:	lea    rdx,[rip+0x46b8e]        # 0x140050af0
   140009f62:	mov    rcx,rbx
   140009f65:	call   0x1400096cc
   140009f6a:	jmp    0x14000a096
   140009f6f:	mov    QWORD PTR [rbp-0x1],0x7
   140009f77:	mov    QWORD PTR [rbp-0x9],r13
   140009f7b:	mov    WORD PTR [rbp-0x19],r13w
   140009f80:	lea    rcx,[rbp+0xf]
   140009f84:	call   0x14000a4d8
   140009f89:	mov    r11,rax
   140009f8c:	mov    r8,QWORD PTR [rax+0x10]
   140009f90:	cmp    QWORD PTR [rax+0x18],0x8
   140009f95:	jb     0x140009f9a
   140009f97:	mov    r11,QWORD PTR [rax]
   140009f9a:	mov    rax,QWORD PTR [rsi+0x10]
   140009f9e:	test   rax,rax
   140009fa1:	je     0x14000a01b
   140009fa3:	cmp    rax,0xffffffffffffffff
   140009fa7:	jbe    0x140009faf
   140009fa9:	or     rcx,0xffffffffffffffff
   140009fad:	jmp    0x140009fb3
   140009faf:	lea    rcx,[rax-0x1]
   140009fb3:	cmp    QWORD PTR [rsi+0x18],0x8
   140009fb8:	jb     0x140009fbf
   140009fba:	mov    rax,QWORD PTR [rsi]
   140009fbd:	jmp    0x140009fc2
   140009fbf:	mov    rax,rsi
   140009fc2:	lea    rdi,[rax+rcx*2]
   140009fc6:	mov    rcx,r8
   140009fc9:	mov    rax,r11
   140009fcc:	test   r8,r8
   140009fcf:	je     0x140009fe2
   140009fd1:	movzx  edx,WORD PTR [rdi]
   140009fd4:	cmp    WORD PTR [rax],dx
   140009fd7:	je     0x140009fe5
   140009fd9:	add    rax,0x2
   140009fdd:	dec    rcx
   140009fe0:	jne    0x140009fd4
   140009fe2:	mov    rax,r13
   140009fe5:	test   rax,rax
   140009fe8:	je     0x14000a004
   140009fea:	cmp    QWORD PTR [rsi+0x18],0x8
   140009fef:	jb     0x140009ff6
   140009ff1:	mov    rax,QWORD PTR [rsi]
   140009ff4:	jmp    0x140009ff9
   140009ff6:	mov    rax,rsi
   140009ff9:	cmp    rdi,rax
   140009ffc:	je     0x14000a01b
   140009ffe:	sub    rdi,0x2
   14000a002:	jmp    0x140009fc6
   14000a004:	cmp    QWORD PTR [rsi+0x18],0x8
   14000a009:	jb     0x14000a010
   14000a00b:	mov    rax,QWORD PTR [rsi]
   14000a00e:	jmp    0x14000a013
   14000a010:	mov    rax,rsi
   14000a013:	sub    rdi,rax
   14000a016:	sar    rdi,1
   14000a019:	jmp    0x14000a01f
   14000a01b:	or     rdi,0xffffffffffffffff
   14000a01f:	cmp    QWORD PTR [rbp+0x27],0x8
   14000a024:	jb     0x14000a030
   14000a026:	mov    rcx,QWORD PTR [rbp+0xf]
   14000a02a:	call   QWORD PTR [rip+0x3f648]        # 0x140049678
   14000a030:	cmp    rdi,0xffffffffffffffff
   14000a034:	je     0x14000a068
   14000a036:	lea    r9,[rdi+0x1]
   14000a03a:	xor    r8d,r8d
   14000a03d:	lea    rdx,[rbp+0xf]
   14000a041:	mov    rcx,rsi
   14000a044:	call   0x14000b3d0
   14000a049:	nop
   14000a04a:	mov    rdx,rax
   14000a04d:	lea    rcx,[rbp-0x19]
   14000a051:	call   0x140009880
   14000a056:	nop
   14000a057:	cmp    QWORD PTR [rbp+0x27],0x8
   14000a05c:	jb     0x14000a068
   14000a05e:	mov    rcx,QWORD PTR [rbp+0xf]
   14000a062:	call   QWORD PTR [rip+0x3f610]        # 0x140049678
   14000a068:	mov    QWORD PTR [rbx+0x18],0x7
   14000a070:	mov    QWORD PTR [rbx+0x10],r13
   14000a074:	mov    WORD PTR [rbx],r13w
   14000a078:	lea    rdx,[rbp-0x19]
   14000a07c:	mov    rcx,rbx
   14000a07f:	call   0x140009880
   14000a084:	nop
   14000a085:	cmp    QWORD PTR [rbp-0x1],0x8
   14000a08a:	jb     0x14000a096
   14000a08c:	mov    rcx,QWORD PTR [rbp-0x19]
   14000a090:	call   QWORD PTR [rip+0x3f5e2]        # 0x140049678
   14000a096:	mov    rax,rbx
   14000a099:	mov    rcx,QWORD PTR [rbp+0x37]
   14000a09d:	xor    rcx,rsp
   14000a0a0:	call   0x14002b100
   14000a0a5:	lea    r11,[rsp+0x90]
   14000a0ad:	mov    rbx,QWORD PTR [r11+0x30]
   14000a0b1:	mov    rsi,QWORD PTR [r11+0x38]
   14000a0b5:	mov    rsp,r11
   14000a0b8:	pop    r13
   14000a0ba:	pop    rdi
   14000a0bb:	pop    rbp
   14000a0bc:	ret    
   14000a0bd:	int3   
   14000a0be:	int3   
   14000a0bf:	int3   
   14000a0c0:	mov    rax,rsp
   14000a0c3:	push   rbp
   14000a0c4:	push   rdi
   14000a0c5:	push   r13
   14000a0c7:	lea    rbp,[rax-0x5f]
   14000a0cb:	sub    rsp,0x90
   14000a0d2:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   14000a0da:	mov    QWORD PTR [rax+0x18],rbx
   14000a0de:	mov    QWORD PTR [rax+0x20],rsi
   14000a0e2:	mov    rax,QWORD PTR [rip+0x5e107]        # 0x1400681f0
   14000a0e9:	xor    rax,rsp
   14000a0ec:	mov    QWORD PTR [rbp+0x37],rax
   14000a0f0:	mov    rsi,rdx
   14000a0f3:	mov    rdi,rcx
   14000a0f6:	xor    r13d,r13d
   14000a0f9:	mov    DWORD PTR [rbp-0x29],r13d
   14000a0fd:	cmp    QWORD PTR [rdx+0x10],r13
   14000a101:	jne    0x14000a137
   14000a103:	mov    QWORD PTR [rcx+0x18],0x7
   14000a10b:	mov    QWORD PTR [rcx+0x10],r13
   14000a10f:	mov    WORD PTR [rcx],r13w
   14000a113:	lea    rcx,[rip+0x469d6]        # 0x140050af0
   14000a11a:	call   QWORD PTR [rip+0x3f590]        # 0x1400496b0
   14000a120:	mov    r8,rax
   14000a123:	lea    rdx,[rip+0x469c6]        # 0x140050af0
   14000a12a:	mov    rcx,rdi
   14000a12d:	call   0x1400096cc
   14000a132:	jmp    0x14000a250
   14000a137:	mov    QWORD PTR [rbp-0x1],0x7
   14000a13f:	mov    QWORD PTR [rbp-0x9],r13
   14000a143:	mov    WORD PTR [rbp-0x19],r13w
   14000a148:	lea    rcx,[rbp+0xf]
   14000a14c:	call   0x14000a4d8
   14000a151:	mov    r11,rax
   14000a154:	mov    r9,QWORD PTR [rax+0x10]
   14000a158:	cmp    QWORD PTR [rax+0x18],0x8
   14000a15d:	jb     0x14000a162
   14000a15f:	mov    r11,QWORD PTR [rax]
   14000a162:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a166:	test   rcx,rcx
   14000a169:	je     0x14000a1d5
   14000a16b:	cmp    QWORD PTR [rsi+0x18],0x8
   14000a170:	jb     0x14000a177
   14000a172:	mov    rax,QWORD PTR [rsi]
   14000a175:	jmp    0x14000a17a
   14000a177:	mov    rax,rsi
   14000a17a:	lea    r8,[rax+rcx*2]
   14000a17e:	cmp    QWORD PTR [rsi+0x18],0x8
   14000a183:	jb     0x14000a18a
   14000a185:	mov    rbx,QWORD PTR [rsi]
   14000a188:	jmp    0x14000a1b7
   14000a18a:	mov    rbx,rsi
   14000a18d:	jmp    0x14000a1b7
   14000a18f:	mov    rcx,r9
   14000a192:	mov    rax,r11
   14000a195:	test   r9,r9
   14000a198:	je     0x14000a1ab
   14000a19a:	movzx  edx,WORD PTR [rbx]
   14000a19d:	cmp    WORD PTR [rax],dx
   14000a1a0:	je     0x14000a1ae
   14000a1a2:	add    rax,0x2
   14000a1a6:	dec    rcx
   14000a1a9:	jne    0x14000a19d
   14000a1ab:	mov    rax,r13
   14000a1ae:	test   rax,rax
   14000a1b1:	je     0x14000a1be
   14000a1b3:	add    rbx,0x2
   14000a1b7:	cmp    rbx,r8
   14000a1ba:	jb     0x14000a18f
   14000a1bc:	jmp    0x14000a1d5
   14000a1be:	cmp    QWORD PTR [rsi+0x18],0x8
   14000a1c3:	jb     0x14000a1ca
   14000a1c5:	mov    rax,QWORD PTR [rsi]
   14000a1c8:	jmp    0x14000a1cd
   14000a1ca:	mov    rax,rsi
   14000a1cd:	sub    rbx,rax
   14000a1d0:	sar    rbx,1
   14000a1d3:	jmp    0x14000a1d9
   14000a1d5:	or     rbx,0xffffffffffffffff
   14000a1d9:	cmp    QWORD PTR [rbp+0x27],0x8
   14000a1de:	jb     0x14000a1ea
   14000a1e0:	mov    rcx,QWORD PTR [rbp+0xf]
   14000a1e4:	call   QWORD PTR [rip+0x3f48e]        # 0x140049678
   14000a1ea:	cmp    rbx,0xffffffffffffffff
   14000a1ee:	je     0x14000a222
   14000a1f0:	or     r9,0xffffffffffffffff
   14000a1f4:	mov    r8,rbx
   14000a1f7:	lea    rdx,[rbp+0xf]
   14000a1fb:	mov    rcx,rsi
   14000a1fe:	call   0x14000b3d0
   14000a203:	nop
   14000a204:	mov    rdx,rax
   14000a207:	lea    rcx,[rbp-0x19]
   14000a20b:	call   0x140009880
   14000a210:	nop
   14000a211:	cmp    QWORD PTR [rbp+0x27],0x8
   14000a216:	jb     0x14000a222
   14000a218:	mov    rcx,QWORD PTR [rbp+0xf]
   14000a21c:	call   QWORD PTR [rip+0x3f456]        # 0x140049678
   14000a222:	mov    QWORD PTR [rdi+0x18],0x7
   14000a22a:	mov    QWORD PTR [rdi+0x10],r13
   14000a22e:	mov    WORD PTR [rdi],r13w
   14000a232:	lea    rdx,[rbp-0x19]
   14000a236:	mov    rcx,rdi
   14000a239:	call   0x140009880
   14000a23e:	nop
   14000a23f:	cmp    QWORD PTR [rbp-0x1],0x8
   14000a244:	jb     0x14000a250
   14000a246:	mov    rcx,QWORD PTR [rbp-0x19]
   14000a24a:	call   QWORD PTR [rip+0x3f428]        # 0x140049678
   14000a250:	mov    rax,rdi
   14000a253:	mov    rcx,QWORD PTR [rbp+0x37]
   14000a257:	xor    rcx,rsp
   14000a25a:	call   0x14002b100
   14000a25f:	lea    r11,[rsp+0x90]
   14000a267:	mov    rbx,QWORD PTR [r11+0x30]
   14000a26b:	mov    rsi,QWORD PTR [r11+0x38]
   14000a26f:	mov    rsp,r11
   14000a272:	pop    r13
   14000a274:	pop    rdi
   14000a275:	pop    rbp
   14000a276:	ret    
   14000a277:	int3   
   14000a278:	mov    rax,rsp
   14000a27b:	push   rbp
   14000a27c:	mov    rbp,rsp
   14000a27f:	sub    rsp,0x80
   14000a286:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14000a28e:	mov    QWORD PTR [rax+0x10],rbx
   14000a292:	mov    QWORD PTR [rax+0x18],rsi
   14000a296:	mov    QWORD PTR [rax+0x20],rdi
   14000a29a:	mov    rdi,rcx
   14000a29d:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a2a2:	jb     0x14000a2a7
   14000a2a4:	mov    rcx,QWORD PTR [rcx]
   14000a2a7:	call   QWORD PTR [rip+0x3f653]        # 0x140049900
   14000a2ad:	cmp    eax,0x1
   14000a2b0:	je     0x14000a2b9
   14000a2b2:	mov    al,0x1
   14000a2b4:	jmp    0x14000a36d
   14000a2b9:	xor    ebx,ebx
   14000a2bb:	mov    QWORD PTR [rbp-0x38],rbx
   14000a2bf:	xor    edx,edx
   14000a2c1:	lea    r8d,[rbx+0x30]
   14000a2c5:	lea    rcx,[rbp-0x30]
   14000a2c9:	call   0x14002b144
   14000a2ce:	mov    DWORD PTR [rbp-0x30],0x3
   14000a2d5:	mov    QWORD PTR [rbp-0x58],rbx
   14000a2d9:	mov    QWORD PTR [rbp-0x50],rbx
   14000a2dd:	mov    QWORD PTR [rbp-0x48],rbx
   14000a2e1:	cmp    QWORD PTR [rdi+0x18],0x8
   14000a2e6:	jb     0x14000a2ed
   14000a2e8:	mov    rcx,QWORD PTR [rdi]
   14000a2eb:	jmp    0x14000a2f0
   14000a2ed:	mov    rcx,rdi
   14000a2f0:	mov    rax,QWORD PTR [rdi+0x10]
   14000a2f4:	lea    r9,[rcx+rax*2]
   14000a2f8:	cmp    QWORD PTR [rdi+0x18],0x8
   14000a2fd:	jb     0x14000a302
   14000a2ff:	mov    rdi,QWORD PTR [rdi]
   14000a302:	mov    r8,rdi
   14000a305:	mov    rdx,rbx
   14000a308:	lea    rcx,[rbp-0x58]
   14000a30c:	call   0x14000d800
   14000a311:	mov    WORD PTR [rbp+0x10],bx
   14000a315:	lea    r8,[rbp+0x10]
   14000a319:	mov    rdx,QWORD PTR [rbp-0x50]
   14000a31d:	lea    rcx,[rbp-0x58]
   14000a321:	call   0x14000c7b4
   14000a326:	mov    WORD PTR [rbp+0x10],bx
   14000a32a:	lea    r8,[rbp+0x10]
   14000a32e:	mov    rdx,QWORD PTR [rbp-0x50]
   14000a332:	lea    rcx,[rbp-0x58]
   14000a336:	call   0x14000c7b4
   14000a33b:	mov    rdi,QWORD PTR [rbp-0x58]
   14000a33f:	mov    QWORD PTR [rbp-0x28],rdi
   14000a343:	mov    eax,0x494
   14000a348:	mov    WORD PTR [rbp-0x18],ax
   14000a34c:	lea    rcx,[rbp-0x38]
   14000a350:	call   QWORD PTR [rip+0x3f58a]        # 0x1400498e0
   14000a356:	test   eax,eax
   14000a358:	sete   sil
   14000a35c:	test   rdi,rdi
   14000a35f:	je     0x14000a36a
   14000a361:	mov    rcx,rdi
   14000a364:	call   QWORD PTR [rip+0x3f30e]        # 0x140049678
   14000a36a:	mov    al,sil
   14000a36d:	lea    r11,[rsp+0x80]
   14000a375:	mov    rbx,QWORD PTR [r11+0x18]
   14000a379:	mov    rsi,QWORD PTR [r11+0x20]
   14000a37d:	mov    rdi,QWORD PTR [r11+0x28]
   14000a381:	mov    rsp,r11
   14000a384:	pop    rbp
   14000a385:	ret    
   14000a386:	int3   
   14000a387:	int3   
   14000a388:	mov    rax,rsp
   14000a38b:	push   rbp
   14000a38c:	push   rsi
   14000a38d:	push   rdi
   14000a38e:	push   r12
   14000a390:	push   r13
   14000a392:	lea    rbp,[rax-0x5f]
   14000a396:	sub    rsp,0xe0
   14000a39d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000a3a6:	mov    QWORD PTR [rax+0x20],rbx
   14000a3aa:	mov    rax,QWORD PTR [rip+0x5de3f]        # 0x1400681f0
   14000a3b1:	xor    rax,rsp
   14000a3b4:	mov    QWORD PTR [rbp+0x27],rax
   14000a3b8:	mov    rax,r8
   14000a3bb:	mov    r12,rdx
   14000a3be:	mov    rsi,rcx
   14000a3c1:	xor    r13d,r13d
   14000a3c4:	mov    DWORD PTR [rsp+0x20],r13d
   14000a3c9:	cmp    QWORD PTR [rdx+0x10],r13
   14000a3cd:	jne    0x14000a3f4
   14000a3cf:	mov    rdx,rax
   14000a3d2:	mov    ebx,0x7
   14000a3d7:	or     r9,0xffffffffffffffff
   14000a3db:	mov    QWORD PTR [rcx+0x18],rbx
   14000a3df:	mov    QWORD PTR [rcx+0x10],r13
   14000a3e3:	xor    r8d,r8d
   14000a3e6:	mov    WORD PTR [rcx],r13w
   14000a3ea:	call   0x140009914
   14000a3ef:	jmp    0x14000a4b1
   14000a3f4:	cmp    QWORD PTR [r8+0x10],r13
   14000a3f8:	je     0x14000a3d2
   14000a3fa:	mov    rdx,rax
   14000a3fd:	lea    rcx,[rbp-0x1]
   14000a401:	call   0x14000a0c0
   14000a406:	mov    rdi,rax
   14000a409:	lea    rcx,[rbp-0x51]
   14000a40d:	call   0x14000a4d8
   14000a412:	mov    rbx,rax
   14000a415:	mov    rdx,r12
   14000a418:	lea    rcx,[rbp-0x29]
   14000a41c:	call   0x140009ef8
   14000a421:	nop
   14000a422:	mov    r8,rbx
   14000a425:	mov    rdx,rax
   14000a428:	lea    rcx,[rbp-0x79]
   14000a42c:	call   0x14000d210
   14000a431:	nop
   14000a432:	mov    r8,rdi
   14000a435:	mov    rdx,rax
   14000a438:	mov    rcx,rsi
   14000a43b:	call   0x14000d210
   14000a440:	nop
   14000a441:	cmp    QWORD PTR [rbp-0x61],0x8
   14000a446:	jb     0x14000a452
   14000a448:	mov    rcx,QWORD PTR [rbp-0x79]
   14000a44c:	call   QWORD PTR [rip+0x3f226]        # 0x140049678
   14000a452:	mov    ebx,0x7
   14000a457:	mov    QWORD PTR [rbp-0x61],rbx
   14000a45b:	mov    QWORD PTR [rbp-0x69],r13
   14000a45f:	mov    WORD PTR [rbp-0x79],r13w
   14000a464:	cmp    QWORD PTR [rbp-0x11],0x8
   14000a469:	jb     0x14000a475
   14000a46b:	mov    rcx,QWORD PTR [rbp-0x29]
   14000a46f:	call   QWORD PTR [rip+0x3f203]        # 0x140049678
   14000a475:	mov    QWORD PTR [rbp-0x11],rbx
   14000a479:	mov    QWORD PTR [rbp-0x19],r13
   14000a47d:	mov    WORD PTR [rbp-0x29],r13w
   14000a482:	cmp    QWORD PTR [rbp-0x39],0x8
   14000a487:	jb     0x14000a493
   14000a489:	mov    rcx,QWORD PTR [rbp-0x51]
   14000a48d:	call   QWORD PTR [rip+0x3f1e5]        # 0x140049678
   14000a493:	mov    QWORD PTR [rbp-0x39],rbx
   14000a497:	mov    QWORD PTR [rbp-0x41],r13
   14000a49b:	mov    WORD PTR [rbp-0x51],r13w
   14000a4a0:	cmp    QWORD PTR [rbp+0x17],0x8
   14000a4a5:	jb     0x14000a4b1
   14000a4a7:	mov    rcx,QWORD PTR [rbp-0x1]
   14000a4ab:	call   QWORD PTR [rip+0x3f1c7]        # 0x140049678
   14000a4b1:	mov    rax,rsi
   14000a4b4:	mov    rcx,QWORD PTR [rbp+0x27]
   14000a4b8:	xor    rcx,rsp
   14000a4bb:	call   0x14002b100
   14000a4c0:	mov    rbx,QWORD PTR [rsp+0x128]
   14000a4c8:	add    rsp,0xe0
   14000a4cf:	pop    r13
   14000a4d1:	pop    r12
   14000a4d3:	pop    rdi
   14000a4d4:	pop    rsi
   14000a4d5:	pop    rbp
   14000a4d6:	ret    
   14000a4d7:	int3   
   14000a4d8:	rex push rbx
   14000a4da:	sub    rsp,0x20
   14000a4de:	xor    eax,eax
   14000a4e0:	mov    QWORD PTR [rcx+0x18],0x7
   14000a4e8:	mov    rbx,rcx
   14000a4eb:	mov    QWORD PTR [rcx+0x10],rax
   14000a4ef:	mov    WORD PTR [rcx],ax
   14000a4f2:	lea    rcx,[rip+0x46613]        # 0x140050b0c
   14000a4f9:	mov    DWORD PTR [rsp+0x30],eax
   14000a4fd:	call   QWORD PTR [rip+0x3f1ad]        # 0x1400496b0
   14000a503:	lea    rdx,[rip+0x46602]        # 0x140050b0c
   14000a50a:	mov    r8,rax
   14000a50d:	mov    rcx,rbx
   14000a510:	call   0x1400096cc
   14000a515:	mov    rax,rbx
   14000a518:	add    rsp,0x20
   14000a51c:	pop    rbx
   14000a51d:	ret    
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	rex push rbx
   14000a522:	push   rsi
   14000a523:	push   rdi
   14000a524:	sub    rsp,0x40
   14000a528:	xor    ebx,ebx
   14000a52a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a52f:	mov    rsi,rdx
   14000a532:	jb     0x14000a537
   14000a534:	mov    rcx,QWORD PTR [rcx]
   14000a537:	xor    r9d,r9d
   14000a53a:	mov    QWORD PTR [rsp+0x30],rbx
   14000a53f:	mov    edx,0x80000000
   14000a544:	lea    r8d,[r9+0x1]
   14000a548:	mov    DWORD PTR [rsp+0x28],0x80
   14000a550:	mov    DWORD PTR [rsp+0x20],0x3
   14000a558:	call   QWORD PTR [rip+0x3eb0a]        # 0x140049068
   14000a55e:	mov    rdi,rax
   14000a561:	cmp    rax,0xffffffffffffffff
   14000a565:	je     0x14000a5c1
   14000a567:	lea    r9,[rsp+0x78]
   14000a56c:	xor    r8d,r8d
   14000a56f:	xor    edx,edx
   14000a571:	mov    rcx,rax
   14000a574:	call   QWORD PTR [rip+0x3eb0e]        # 0x140049088
   14000a57a:	test   eax,eax
   14000a57c:	je     0x14000a5b8
   14000a57e:	lea    rdx,[rsp+0x60]
   14000a583:	lea    rcx,[rsp+0x78]
   14000a588:	call   QWORD PTR [rip+0x3eb12]        # 0x1400490a0
   14000a58e:	test   eax,eax
   14000a590:	je     0x14000a5b8
   14000a592:	mov    eax,DWORD PTR [rsp+0x60]
   14000a596:	lea    rdx,[rsp+0x70]
   14000a59b:	mov    r8d,0x8
   14000a5a1:	mov    DWORD PTR [rsp+0x70],eax
   14000a5a5:	mov    eax,DWORD PTR [rsp+0x64]
   14000a5a9:	mov    rcx,rsi
   14000a5ac:	mov    DWORD PTR [rsp+0x74],eax
   14000a5b0:	call   QWORD PTR [rip+0x3f312]        # 0x1400498c8
   14000a5b6:	mov    bl,0x1
   14000a5b8:	mov    rcx,rdi
   14000a5bb:	call   QWORD PTR [rip+0x3ebd7]        # 0x140049198
   14000a5c1:	mov    al,bl
   14000a5c3:	add    rsp,0x40
   14000a5c7:	pop    rdi
   14000a5c8:	pop    rsi
   14000a5c9:	pop    rbx
   14000a5ca:	ret    
   14000a5cb:	int3   
   14000a5cc:	rex push rdi
   14000a5ce:	sub    rsp,0x30
   14000a5d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a5db:	mov    QWORD PTR [rsp+0x48],rbx
   14000a5e0:	mov    rbx,rcx
   14000a5e3:	xor    edi,edi
   14000a5e5:	mov    BYTE PTR [rsp+0x40],dil
   14000a5ea:	cmp    QWORD PTR [rcx+0x10],rdi
   14000a5ee:	jne    0x14000a5f4
   14000a5f0:	xor    al,al
   14000a5f2:	jmp    0x14000a66b
   14000a5f4:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a5f9:	jb     0x14000a5fe
   14000a5fb:	mov    rcx,QWORD PTR [rcx]
   14000a5fe:	call   QWORD PTR [rip+0x3f2fc]        # 0x140049900
   14000a604:	cmp    eax,0x1
   14000a607:	jne    0x14000a62e
   14000a609:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a60e:	jb     0x14000a615
   14000a610:	mov    rcx,QWORD PTR [rbx]
   14000a613:	jmp    0x14000a618
   14000a615:	mov    rcx,rbx
   14000a618:	call   QWORD PTR [rip+0x3f2ea]        # 0x140049908
   14000a61e:	test   eax,eax
   14000a620:	jne    0x14000a62e
   14000a622:	mov    rcx,rbx
   14000a625:	call   0x14000a678
   14000a62a:	test   al,al
   14000a62c:	je     0x14000a5f0
   14000a62e:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a633:	jb     0x14000a638
   14000a635:	mov    rbx,QWORD PTR [rbx]
   14000a638:	xor    r8d,r8d
   14000a63b:	mov    rdx,rbx
   14000a63e:	xor    ecx,ecx
   14000a640:	call   QWORD PTR [rip+0x3f2aa]        # 0x1400498f0
   14000a646:	mov    r11d,eax
   14000a649:	test   eax,eax
   14000a64b:	je     0x14000a659
   14000a64d:	sub    r11d,0x50
   14000a651:	je     0x14000a659
   14000a653:	cmp    r11d,0x67
   14000a657:	jne    0x14000a661
   14000a659:	mov    dil,0x1
   14000a65c:	mov    BYTE PTR [rsp+0x40],dil
   14000a661:	jmp    0x14000a668
   14000a663:	mov    dil,BYTE PTR [rsp+0x40]
   14000a668:	mov    al,dil
   14000a66b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a670:	add    rsp,0x30
   14000a674:	pop    rdi
   14000a675:	ret    
   14000a676:	int3   
   14000a677:	int3   
   14000a678:	rex push rbx
   14000a67a:	sub    rsp,0x20
   14000a67e:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a683:	mov    rbx,rcx
   14000a686:	jb     0x14000a68b
   14000a688:	mov    rcx,QWORD PTR [rcx]
   14000a68b:	call   QWORD PTR [rip+0x3f26f]        # 0x140049900
   14000a691:	cmp    eax,0x1
   14000a694:	je     0x14000a69a
   14000a696:	mov    al,0x1
   14000a698:	jmp    0x14000a6b3
   14000a69a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a69f:	jb     0x14000a6a4
   14000a6a1:	mov    rbx,QWORD PTR [rbx]
   14000a6a4:	mov    rcx,rbx
   14000a6a7:	call   QWORD PTR [rip+0x3e9fb]        # 0x1400490a8
   14000a6ad:	cmp    eax,0x1
   14000a6b0:	sete   al
   14000a6b3:	add    rsp,0x20
   14000a6b7:	pop    rbx
   14000a6b8:	ret    
   14000a6b9:	int3   
   14000a6ba:	int3   
   14000a6bb:	int3   
   14000a6bc:	rex push rbx
   14000a6be:	push   rbp
   14000a6bf:	push   rsi
   14000a6c0:	push   rdi
   14000a6c1:	push   r12
   14000a6c3:	sub    rsp,0x180
   14000a6ca:	mov    rax,QWORD PTR [rip+0x5db1f]        # 0x1400681f0
   14000a6d1:	xor    rax,rsp
   14000a6d4:	mov    QWORD PTR [rsp+0x170],rax
   14000a6dc:	xor    ebx,ebx
   14000a6de:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a6e3:	mov    r12,r8
   14000a6e6:	mov    rbp,rdx
   14000a6e9:	jb     0x14000a6ee
   14000a6eb:	mov    rcx,QWORD PTR [rcx]
   14000a6ee:	xor    r9d,r9d
   14000a6f1:	mov    QWORD PTR [rsp+0x30],rbx
   14000a6f6:	xor    edx,edx
   14000a6f8:	lea    r8d,[r9+0x1]
   14000a6fc:	mov    DWORD PTR [rsp+0x28],0x80
   14000a704:	mov    DWORD PTR [rsp+0x20],0x3
   14000a70c:	call   QWORD PTR [rip+0x3e956]        # 0x140049068
   14000a712:	mov    rsi,rax
   14000a715:	cmp    rax,0xffffffffffffffff
   14000a719:	je     0x14000a7cb
   14000a71f:	lea    rcx,[rip+0x463ea]        # 0x140050b10
   14000a726:	mov    QWORD PTR [rsp+0x48],rbx
   14000a72b:	call   QWORD PTR [rip+0x3e91f]        # 0x140049050
   14000a731:	lea    rcx,[rsp+0x50]
   14000a736:	mov    DWORD PTR [rsp+0x50],0x114
   14000a73e:	mov    rdi,rax
   14000a741:	call   QWORD PTR [rip+0x3e919]        # 0x140049060
   14000a747:	cmp    DWORD PTR [rsp+0x54],0x5
   14000a74c:	mov    rcx,rdi
   14000a74f:	jae    0x14000a77f
   14000a751:	lea    rdx,[rip+0x463d8]        # 0x140050b30
   14000a758:	mov    DWORD PTR [rsp+0x40],ebx
   14000a75c:	call   QWORD PTR [rip+0x3e90e]        # 0x140049070
   14000a762:	test   rax,rax
   14000a765:	je     0x14000a79b
   14000a767:	lea    rdx,[rsp+0x40]
   14000a76c:	mov    rcx,rsi
   14000a76f:	call   rax
   14000a771:	mov    DWORD PTR [rsp+0x48],eax
   14000a775:	mov    eax,DWORD PTR [rsp+0x40]
   14000a779:	mov    DWORD PTR [rsp+0x4c],eax
   14000a77d:	jmp    0x14000a79b
   14000a77f:	lea    rdx,[rip+0x463ba]        # 0x140050b40
   14000a786:	call   QWORD PTR [rip+0x3e8e4]        # 0x140049070
   14000a78c:	test   rax,rax
   14000a78f:	je     0x14000a79b
   14000a791:	lea    rdx,[rsp+0x48]
   14000a796:	mov    rcx,rsi
   14000a799:	call   rax
   14000a79b:	mov    rcx,rdi
   14000a79e:	call   QWORD PTR [rip+0x3e89c]        # 0x140049040
   14000a7a4:	lea    rdx,[rsp+0x48]
   14000a7a9:	mov    r8d,0x8
   14000a7af:	mov    rcx,rbp
   14000a7b2:	call   QWORD PTR [rip+0x3f110]        # 0x1400498c8
   14000a7b8:	mov    r11,QWORD PTR [rbp+0x0]
   14000a7bc:	mov    rcx,rsi
   14000a7bf:	mov    QWORD PTR [r12],r11
   14000a7c3:	mov    bl,0x1
   14000a7c5:	call   QWORD PTR [rip+0x3e9cd]        # 0x140049198
   14000a7cb:	mov    al,bl
   14000a7cd:	mov    rcx,QWORD PTR [rsp+0x170]
   14000a7d5:	xor    rcx,rsp
   14000a7d8:	call   0x14002b100
   14000a7dd:	add    rsp,0x180
   14000a7e4:	pop    r12
   14000a7e6:	pop    rdi
   14000a7e7:	pop    rsi
   14000a7e8:	pop    rbp
   14000a7e9:	pop    rbx
   14000a7ea:	ret    
   14000a7eb:	int3   
   14000a7ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000a7f1:	mov    QWORD PTR [rsp+0x10],rsi
   14000a7f6:	push   rdi
   14000a7f7:	sub    rsp,0x20
   14000a7fb:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a800:	mov    rdi,rdx
   14000a803:	mov    rbx,rcx
   14000a806:	jb     0x14000a80b
   14000a808:	mov    rcx,QWORD PTR [rcx]
   14000a80b:	call   QWORD PTR [rip+0x3f0f7]        # 0x140049908
   14000a811:	test   eax,eax
   14000a813:	je     0x14000a819
   14000a815:	xor    al,al
   14000a817:	jmp    0x14000a867
   14000a819:	cmp    QWORD PTR [rdi+0x18],0x8
   14000a81e:	jb     0x14000a825
   14000a820:	mov    rcx,QWORD PTR [rdi]
   14000a823:	jmp    0x14000a828
   14000a825:	mov    rcx,rdi
   14000a828:	call   QWORD PTR [rip+0x3f0da]        # 0x140049908
   14000a82e:	test   eax,eax
   14000a830:	je     0x14000a83e
   14000a832:	mov    rcx,rdi
   14000a835:	call   0x14000a278
   14000a83a:	test   al,al
   14000a83c:	je     0x14000a815
   14000a83e:	cmp    QWORD PTR [rdi+0x18],0x8
   14000a843:	jb     0x14000a848
   14000a845:	mov    rdi,QWORD PTR [rdi]
   14000a848:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a84d:	jb     0x14000a852
   14000a84f:	mov    rbx,QWORD PTR [rbx]
   14000a852:	xor    r8d,r8d
   14000a855:	mov    rdx,rdi
   14000a858:	mov    rcx,rbx
   14000a85b:	call   QWORD PTR [rip+0x3e7f7]        # 0x140049058
   14000a861:	cmp    eax,0x1
   14000a864:	sete   al
   14000a867:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a86c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a871:	add    rsp,0x20
   14000a875:	pop    rdi
   14000a876:	ret    
   14000a877:	int3   
   14000a878:	mov    rax,rsp
   14000a87b:	push   rbp
   14000a87c:	lea    rbp,[rax-0x5f]
   14000a880:	sub    rsp,0x100
   14000a887:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a890:	mov    QWORD PTR [rax+0x18],rbx
   14000a894:	mov    QWORD PTR [rax+0x20],rdi
   14000a898:	mov    rax,QWORD PTR [rip+0x5d951]        # 0x1400681f0
   14000a89f:	xor    rax,rsp
   14000a8a2:	mov    QWORD PTR [rbp+0x47],rax
   14000a8a6:	mov    rdi,rdx
   14000a8a9:	mov    rbx,rcx
   14000a8ac:	lea    rcx,[rbp-0x31]
   14000a8b0:	call   0x14000a4d8
   14000a8b5:	nop
   14000a8b6:	mov    rdx,rax
   14000a8b9:	mov    rcx,rbx
   14000a8bc:	call   0x14000b340
   14000a8c1:	mov    r9,rax
   14000a8c4:	xor    r8d,r8d
   14000a8c7:	lea    rdx,[rsp+0x28]
   14000a8cc:	mov    rcx,rbx
   14000a8cf:	call   0x14000b3d0
   14000a8d4:	nop
   14000a8d5:	cmp    QWORD PTR [rbp-0x19],0x8
   14000a8da:	jb     0x14000a8e6
   14000a8dc:	mov    rcx,QWORD PTR [rbp-0x31]
   14000a8e0:	call   QWORD PTR [rip+0x3ed92]        # 0x140049678
   14000a8e6:	lea    rcx,[rsp+0x28]
   14000a8eb:	cmp    QWORD PTR [rbp-0x69],0x8
   14000a8f0:	cmovae rcx,QWORD PTR [rsp+0x28]
   14000a8f6:	lea    r8,[rbp-0x9]
   14000a8fa:	xor    edx,edx
   14000a8fc:	call   QWORD PTR [rip+0x3e78e]        # 0x140049090
   14000a902:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a907:	jb     0x14000a90c
   14000a909:	mov    rbx,QWORD PTR [rbx]
   14000a90c:	lea    r8,[rbp+0x1f]
   14000a910:	xor    edx,edx
   14000a912:	mov    rcx,rbx
   14000a915:	call   QWORD PTR [rip+0x3e775]        # 0x140049090
   14000a91b:	cmp    QWORD PTR [rdi+0x18],0x8
   14000a920:	jb     0x14000a925
   14000a922:	mov    rdi,QWORD PTR [rdi]
   14000a925:	lea    r8,[rbp-0x59]
   14000a929:	xor    edx,edx
   14000a92b:	mov    rcx,rdi
   14000a92e:	call   QWORD PTR [rip+0x3e75c]        # 0x140049090
   14000a934:	lea    rdx,[rbp-0x45]
   14000a938:	lea    rcx,[rbp-0x5]
   14000a93c:	call   QWORD PTR [rip+0x3e706]        # 0x140049048
   14000a942:	mov    ebx,0x1
   14000a947:	cmp    eax,ebx
   14000a949:	je     0x14000a95f
   14000a94b:	lea    rdx,[rbp-0x45]
   14000a94f:	lea    rcx,[rbp+0x33]
   14000a953:	call   QWORD PTR [rip+0x3e6ef]        # 0x140049048
   14000a959:	cmp    eax,ebx
   14000a95b:	je     0x14000a95f
   14000a95d:	xor    bl,bl
   14000a95f:	cmp    QWORD PTR [rbp-0x69],0x8
   14000a964:	jb     0x14000a971
   14000a966:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a96b:	call   QWORD PTR [rip+0x3ed07]        # 0x140049678
   14000a971:	mov    al,bl
   14000a973:	mov    rcx,QWORD PTR [rbp+0x47]
   14000a977:	xor    rcx,rsp
   14000a97a:	call   0x14002b100
   14000a97f:	lea    r11,[rsp+0x100]
   14000a987:	mov    rbx,QWORD PTR [r11+0x20]
   14000a98b:	mov    rdi,QWORD PTR [r11+0x28]
   14000a98f:	mov    rsp,r11
   14000a992:	pop    rbp
   14000a993:	ret    
   14000a994:	mov    rax,rsp
   14000a997:	push   rbp
   14000a998:	push   rsi
   14000a999:	push   rdi
   14000a99a:	sub    rsp,0x60
   14000a99e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000a9a7:	mov    QWORD PTR [rax+0x18],rbx
   14000a9ab:	mov    rax,QWORD PTR [rip+0x5d83e]        # 0x1400681f0
   14000a9b2:	xor    rax,rsp
   14000a9b5:	mov    QWORD PTR [rsp+0x58],rax
   14000a9ba:	mov    rdi,rdx
   14000a9bd:	mov    rbx,rcx
   14000a9c0:	xor    ebp,ebp
   14000a9c2:	mov    DWORD PTR [rsp+0x20],ebp
   14000a9c6:	cmp    QWORD PTR [rdx+0x10],rbp
   14000a9ca:	jne    0x14000a9d6
   14000a9cc:	call   0x14000a4d8
   14000a9d1:	jmp    0x14000aa5d
   14000a9d6:	lea    rcx,[rsp+0x30]
   14000a9db:	call   0x14000a4d8
   14000a9e0:	mov    rdx,rax
   14000a9e3:	mov    rcx,rdi
   14000a9e6:	call   0x14000b340
   14000a9eb:	mov    rsi,rax
   14000a9ee:	cmp    QWORD PTR [rsp+0x48],0x8
   14000a9f4:	jb     0x14000aa01
   14000a9f6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a9fb:	call   QWORD PTR [rip+0x3ec77]        # 0x140049678
   14000aa01:	mov    rcx,QWORD PTR [rdi+0x10]
   14000aa05:	dec    rcx
   14000aa08:	cmp    rsi,rcx
   14000aa0b:	je     0x14000aa3c
   14000aa0d:	lea    rcx,[rsp+0x30]
   14000aa12:	call   0x14000a4d8
   14000aa17:	nop
   14000aa18:	mov    r8,rax
   14000aa1b:	mov    rdx,rdi
   14000aa1e:	mov    rcx,rbx
   14000aa21:	call   0x14000d3a0
   14000aa26:	nop
   14000aa27:	cmp    QWORD PTR [rsp+0x48],0x8
   14000aa2d:	jb     0x14000aa5d
   14000aa2f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000aa34:	call   QWORD PTR [rip+0x3ec3e]        # 0x140049678
   14000aa3a:	jmp    0x14000aa5d
   14000aa3c:	mov    QWORD PTR [rbx+0x18],0x7
   14000aa44:	mov    QWORD PTR [rbx+0x10],rbp
   14000aa48:	mov    WORD PTR [rbx],bp
   14000aa4b:	or     r9,0xffffffffffffffff
   14000aa4f:	xor    r8d,r8d
   14000aa52:	mov    rdx,rdi
   14000aa55:	mov    rcx,rbx
   14000aa58:	call   0x140009914
   14000aa5d:	mov    rax,rbx
   14000aa60:	mov    rcx,QWORD PTR [rsp+0x58]
   14000aa65:	xor    rcx,rsp
   14000aa68:	call   0x14002b100
   14000aa6d:	mov    rbx,QWORD PTR [rsp+0x90]
   14000aa75:	add    rsp,0x60
   14000aa79:	pop    rdi
   14000aa7a:	pop    rsi
   14000aa7b:	pop    rbp
   14000aa7c:	ret    
   14000aa7d:	int3   
   14000aa7e:	int3   
   14000aa7f:	int3   
   14000aa80:	mov    rax,rsp
   14000aa83:	push   rbp
   14000aa84:	push   rdi
   14000aa85:	push   r13
   14000aa87:	lea    rbp,[rax-0x78]
   14000aa8b:	sub    rsp,0x160
   14000aa92:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000aa9b:	mov    QWORD PTR [rax+0x18],rbx
   14000aa9f:	mov    QWORD PTR [rax+0x20],rsi
   14000aaa3:	mov    rbx,rcx
   14000aaa6:	xor    esi,esi
   14000aaa8:	mov    DWORD PTR [rbp+0x80],esi
   14000aaae:	mov    edi,esi
   14000aab0:	cmp    QWORD PTR [rcx+0x18],0x8
   14000aab5:	jb     0x14000aaba
   14000aab7:	mov    rbx,QWORD PTR [rcx]
   14000aaba:	lea    rax,[rip+0x45f6f]        # 0x140050a30
   14000aac1:	mov    QWORD PTR [rsp+0x30],rax
   14000aac6:	lea    rcx,[rbp-0x20]
   14000aaca:	call   QWORD PTR [rip+0x3e8d0]        # 0x1400493a0
   14000aad0:	nop
   14000aad1:	mov    DWORD PTR [rbp+0x80],0x1
   14000aadb:	xor    r9d,r9d
   14000aade:	xor    r8d,r8d
   14000aae1:	lea    rdx,[rsp+0x40]
   14000aae6:	lea    rcx,[rsp+0x30]
   14000aaeb:	call   QWORD PTR [rip+0x3e89f]        # 0x140049390
   14000aaf1:	nop
   14000aaf2:	mov    rax,QWORD PTR [rsp+0x30]
   14000aaf7:	movsxd rcx,DWORD PTR [rax+0x4]
   14000aafb:	lea    r13,[rip+0x46156]        # 0x140050c58
   14000ab02:	mov    QWORD PTR [rsp+rcx*1+0x30],r13
   14000ab07:	lea    rax,[rsp+0x40]
   14000ab0c:	mov    QWORD PTR [rbp+0x88],rax
   14000ab13:	lea    rcx,[rsp+0x40]
   14000ab18:	call   QWORD PTR [rip+0x3e86a]        # 0x140049388
   14000ab1e:	nop
   14000ab1f:	lea    rax,[rip+0x460b2]        # 0x140050bd8
   14000ab26:	mov    QWORD PTR [rsp+0x40],rax
   14000ab2b:	mov    BYTE PTR [rbp-0x30],sil
   14000ab2f:	mov    BYTE PTR [rbp-0x36],sil
   14000ab33:	lea    rcx,[rsp+0x40]
   14000ab38:	call   QWORD PTR [rip+0x3e83a]        # 0x140049378
   14000ab3e:	mov    QWORD PTR [rbp-0x28],rsi
   14000ab42:	mov    eax,DWORD PTR [rip+0x5fd38]        # 0x14006a880
   14000ab48:	mov    DWORD PTR [rbp-0x34],eax
   14000ab4b:	mov    QWORD PTR [rbp-0x40],rsi
   14000ab4f:	mov    r8d,0x1
   14000ab55:	mov    rdx,rbx
   14000ab58:	lea    rcx,[rsp+0x40]
   14000ab5d:	call   0x14000cb7c
   14000ab62:	mov    ebx,0x2
   14000ab67:	test   rax,rax
   14000ab6a:	jne    0x14000ab86
   14000ab6c:	mov    rax,QWORD PTR [rsp+0x30]
   14000ab71:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ab75:	lea    rcx,[rsp+rcx*1+0x30]
   14000ab7a:	xor    r8d,r8d
   14000ab7d:	mov    edx,ebx
   14000ab7f:	call   QWORD PTR [rip+0x3e873]        # 0x1400493f8
   14000ab85:	nop
   14000ab86:	mov    rax,QWORD PTR [rsp+0x30]
   14000ab8b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ab8f:	lea    rax,[rsp+rcx*1+0x30]
   14000ab94:	test   BYTE PTR [rax+0x10],0x6
   14000ab98:	cmovne rax,rsi
   14000ab9c:	test   rax,rax
   14000ab9f:	je     0x14000abd2
   14000aba1:	mov    eax,DWORD PTR [rsp+rcx*1+0x40]
   14000aba5:	shr    eax,0x2
   14000aba8:	test   al,0x1
   14000abaa:	jne    0x14000abd2
   14000abac:	mov    r8d,ebx
   14000abaf:	xor    edx,edx
   14000abb1:	lea    rcx,[rsp+0x30]
   14000abb6:	call   QWORD PTR [rip+0x3e824]        # 0x1400493e0
   14000abbc:	lea    rdx,[rbp+0x40]
   14000abc0:	lea    rcx,[rsp+0x30]
   14000abc5:	call   QWORD PTR [rip+0x3e80d]        # 0x1400493d8
   14000abcb:	movsxd rdi,DWORD PTR [rax+0x8]
   14000abcf:	add    rdi,QWORD PTR [rax]
   14000abd2:	lea    rcx,[rsp+0x40]
   14000abd7:	call   0x14000cc70
   14000abdc:	test   rax,rax
   14000abdf:	jne    0x14000abfa
   14000abe1:	mov    rax,QWORD PTR [rsp+0x30]
   14000abe6:	movsxd rcx,DWORD PTR [rax+0x4]
   14000abea:	lea    rcx,[rsp+rcx*1+0x30]
   14000abef:	xor    r8d,r8d
   14000abf2:	mov    edx,ebx
   14000abf4:	call   QWORD PTR [rip+0x3e7fe]        # 0x1400493f8
   14000abfa:	cmp    rdi,0x7d000
   14000ac01:	setle  bl
   14000ac04:	lea    rax,[rbp-0x20]
   14000ac08:	mov    QWORD PTR [rbp+0x80],rax
   14000ac0f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ac14:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000ac18:	mov    QWORD PTR [rsp+rdx*1+0x30],r13
   14000ac1d:	lea    rcx,[rsp+0x40]
   14000ac22:	call   0x14000bac8
   14000ac27:	nop
   14000ac28:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ac2d:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000ac31:	mov    rcx,QWORD PTR [rip+0x3e738]        # 0x140049370
   14000ac38:	mov    QWORD PTR [rsp+rdx*1+0x30],rcx
   14000ac3d:	lea    rcx,[rbp-0x20]
   14000ac41:	call   QWORD PTR [rip+0x3e7b9]        # 0x140049400
   14000ac47:	mov    al,bl
   14000ac49:	lea    r11,[rsp+0x160]
   14000ac51:	mov    rbx,QWORD PTR [r11+0x30]
   14000ac55:	mov    rsi,QWORD PTR [r11+0x38]
   14000ac59:	mov    rsp,r11
   14000ac5c:	pop    r13
   14000ac5e:	pop    rdi
   14000ac5f:	pop    rbp
   14000ac60:	ret    
   14000ac61:	int3   
   14000ac62:	int3   
   14000ac63:	int3   
   14000ac64:	rex push rdi
   14000ac66:	sub    rsp,0x30
   14000ac6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ac73:	mov    QWORD PTR [rsp+0x48],rbx
   14000ac78:	lea    rdi,[rcx+0xb0]
   14000ac7f:	mov    QWORD PTR [rsp+0x40],rdi
   14000ac84:	mov    rax,QWORD PTR [rdi-0xb0]
   14000ac8b:	movsxd rdx,DWORD PTR [rax+0x4]
   14000ac8f:	lea    rax,[rip+0x45fc2]        # 0x140050c58
   14000ac96:	mov    QWORD PTR [rdx+rdi*1-0xb0],rax
   14000ac9e:	lea    rcx,[rdi-0xa0]
   14000aca5:	call   0x14000bac8
   14000acaa:	nop
   14000acab:	mov    rax,QWORD PTR [rdi-0xb0]
   14000acb2:	movsxd rdx,DWORD PTR [rax+0x4]
   14000acb6:	mov    rax,QWORD PTR [rip+0x3e6b3]        # 0x140049370
   14000acbd:	mov    QWORD PTR [rdx+rdi*1-0xb0],rax
   14000acc5:	mov    rcx,rdi
   14000acc8:	mov    rbx,QWORD PTR [rsp+0x48]
   14000accd:	add    rsp,0x30
   14000acd1:	pop    rdi
   14000acd2:	rex.W jmp QWORD PTR [rip+0x3e727]        # 0x140049400
   14000acd9:	int3   
   14000acda:	int3   
   14000acdb:	int3   
   14000acdc:	mov    rax,rsp
   14000acdf:	push   rbp
   14000ace0:	push   rdi
   14000ace1:	push   r12
   14000ace3:	lea    rbp,[rax-0x58]
   14000ace7:	sub    rsp,0x140
   14000acee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000acf7:	mov    QWORD PTR [rax+0x18],rbx
   14000acfb:	mov    rbx,rcx
   14000acfe:	and    DWORD PTR [rbp+0x60],0x0
   14000ad02:	lea    rax,[rip+0x45f67]        # 0x140050c70
   14000ad09:	mov    QWORD PTR [rsp+0x30],rax
   14000ad0e:	lea    rcx,[rbp-0x28]
   14000ad12:	call   QWORD PTR [rip+0x3e688]        # 0x1400493a0
   14000ad18:	nop
   14000ad19:	mov    edi,0x1
   14000ad1e:	mov    DWORD PTR [rbp+0x60],edi
   14000ad21:	xor    r9d,r9d
   14000ad24:	xor    r8d,r8d
   14000ad27:	lea    rdx,[rsp+0x38]
   14000ad2c:	lea    rcx,[rsp+0x30]
   14000ad31:	call   QWORD PTR [rip+0x3e661]        # 0x140049398
   14000ad37:	nop
   14000ad38:	mov    rax,QWORD PTR [rsp+0x30]
   14000ad3d:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ad41:	lea    r12,[rip+0x45f20]        # 0x140050c68
   14000ad48:	mov    QWORD PTR [rsp+rcx*1+0x30],r12
   14000ad4d:	lea    rax,[rsp+0x38]
   14000ad52:	mov    QWORD PTR [rbp+0x68],rax
   14000ad56:	lea    rcx,[rsp+0x38]
   14000ad5b:	call   QWORD PTR [rip+0x3e627]        # 0x140049388
   14000ad61:	nop
   14000ad62:	lea    rax,[rip+0x45e6f]        # 0x140050bd8
   14000ad69:	mov    QWORD PTR [rsp+0x38],rax
   14000ad6e:	mov    BYTE PTR [rbp-0x38],0x0
   14000ad72:	mov    BYTE PTR [rbp-0x3e],0x0
   14000ad76:	lea    rcx,[rsp+0x38]
   14000ad7b:	call   QWORD PTR [rip+0x3e5f7]        # 0x140049378
   14000ad81:	and    QWORD PTR [rbp-0x30],0x0
   14000ad86:	mov    eax,DWORD PTR [rip+0x5faf4]        # 0x14006a880
   14000ad8c:	mov    DWORD PTR [rbp-0x3c],eax
   14000ad8f:	and    QWORD PTR [rbp-0x48],0x0
   14000ad94:	cmp    QWORD PTR [rbx+0x18],0x8
   14000ad99:	jb     0x14000ad9e
   14000ad9b:	mov    rbx,QWORD PTR [rbx]
   14000ad9e:	mov    r8d,0xa
   14000ada4:	mov    rdx,rbx
   14000ada7:	lea    rcx,[rsp+0x38]
   14000adac:	call   0x14000cb7c
   14000adb1:	mov    ebx,0x2
   14000adb6:	xor    r8d,r8d
   14000adb9:	test   rax,rax
   14000adbc:	mov    rax,QWORD PTR [rsp+0x30]
   14000adc1:	movsxd rcx,DWORD PTR [rax+0x4]
   14000adc5:	lea    rcx,[rsp+rcx*1+0x30]
   14000adca:	jne    0x14000add6
   14000adcc:	mov    edx,ebx
   14000adce:	call   QWORD PTR [rip+0x3e624]        # 0x1400493f8
   14000add4:	jmp    0x14000adde
   14000add6:	xor    edx,edx
   14000add8:	call   QWORD PTR [rip+0x3e5ca]        # 0x1400493a8
   14000adde:	mov    rax,QWORD PTR [rsp+0x30]
   14000ade3:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ade7:	mov    eax,DWORD PTR [rsp+rcx*1+0x40]
   14000adeb:	shr    eax,0x2
   14000adee:	test   dil,al
   14000adf1:	jne    0x14000adfd
   14000adf3:	test   BYTE PTR [rsp+rcx*1+0x40],0x6
   14000adf8:	jne    0x14000adfd
   14000adfa:	xor    dil,dil
   14000adfd:	lea    rcx,[rsp+0x38]
   14000ae02:	call   0x14000cc70
   14000ae07:	test   rax,rax
   14000ae0a:	jne    0x14000ae26
   14000ae0c:	mov    rax,QWORD PTR [rsp+0x30]
   14000ae11:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ae15:	lea    rcx,[rsp+rcx*1+0x30]
   14000ae1a:	xor    r8d,r8d
   14000ae1d:	mov    edx,ebx
   14000ae1f:	call   QWORD PTR [rip+0x3e5d3]        # 0x1400493f8
   14000ae25:	nop
   14000ae26:	lea    rax,[rbp-0x28]
   14000ae2a:	mov    QWORD PTR [rbp+0x60],rax
   14000ae2e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ae33:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000ae37:	mov    QWORD PTR [rsp+rdx*1+0x30],r12
   14000ae3c:	lea    rcx,[rsp+0x38]
   14000ae41:	call   0x14000bac8
   14000ae46:	nop
   14000ae47:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ae4c:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000ae50:	mov    rcx,QWORD PTR [rip+0x3e511]        # 0x140049368
   14000ae57:	mov    QWORD PTR [rsp+rdx*1+0x30],rcx
   14000ae5c:	lea    rcx,[rbp-0x28]
   14000ae60:	call   QWORD PTR [rip+0x3e59a]        # 0x140049400
   14000ae66:	mov    al,dil
   14000ae69:	mov    rbx,QWORD PTR [rsp+0x170]
   14000ae71:	add    rsp,0x140
   14000ae78:	pop    r12
   14000ae7a:	pop    rdi
   14000ae7b:	pop    rbp
   14000ae7c:	ret    
   14000ae7d:	int3   
   14000ae7e:	int3   
   14000ae7f:	int3   
   14000ae80:	rex push rdi
   14000ae82:	sub    rsp,0x30
   14000ae86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ae8f:	mov    QWORD PTR [rsp+0x48],rbx
   14000ae94:	lea    rdi,[rcx+0xa8]
   14000ae9b:	mov    QWORD PTR [rsp+0x40],rdi
   14000aea0:	mov    rax,QWORD PTR [rdi-0xa8]
   14000aea7:	movsxd rdx,DWORD PTR [rax+0x4]
   14000aeab:	lea    rax,[rip+0x45db6]        # 0x140050c68
   14000aeb2:	mov    QWORD PTR [rdx+rdi*1-0xa8],rax
   14000aeba:	lea    rcx,[rdi-0xa0]
   14000aec1:	call   0x14000bac8
   14000aec6:	nop
   14000aec7:	mov    rax,QWORD PTR [rdi-0xa8]
   14000aece:	movsxd rdx,DWORD PTR [rax+0x4]
   14000aed2:	mov    rax,QWORD PTR [rip+0x3e48f]        # 0x140049368
   14000aed9:	mov    QWORD PTR [rdx+rdi*1-0xa8],rax
   14000aee1:	mov    rcx,rdi
   14000aee4:	mov    rbx,QWORD PTR [rsp+0x48]
   14000aee9:	add    rsp,0x30
   14000aeed:	pop    rdi
   14000aeee:	rex.W jmp QWORD PTR [rip+0x3e50b]        # 0x140049400
   14000aef5:	int3   
   14000aef6:	int3   
   14000aef7:	int3   
   14000aef8:	mov    rax,rsp
   14000aefb:	push   rbp
   14000aefc:	push   rsi
   14000aefd:	push   rdi
   14000aefe:	lea    rbp,[rax-0x248]
   14000af05:	sub    rsp,0x330
   14000af0c:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000af15:	mov    QWORD PTR [rax+0x20],rbx
   14000af19:	mov    rax,QWORD PTR [rip+0x5d2d0]        # 0x1400681f0
   14000af20:	xor    rax,rsp
   14000af23:	mov    QWORD PTR [rbp+0x220],rax
   14000af2a:	mov    sil,r8b
   14000af2d:	mov    QWORD PTR [rsp+0x20],rdx
   14000af32:	mov    rbx,rcx
   14000af35:	cmp    QWORD PTR [rcx+0x18],0x8
   14000af3a:	jb     0x14000af3f
   14000af3c:	mov    rcx,QWORD PTR [rcx]
   14000af3f:	call   QWORD PTR [rip+0x3e9c3]        # 0x140049908
   14000af45:	xor    ecx,ecx
   14000af47:	test   eax,eax
   14000af49:	je     0x14000b12b
   14000af4f:	mov    QWORD PTR [rsp+0x48],0x7
   14000af58:	mov    QWORD PTR [rsp+0x40],rcx
   14000af5d:	mov    WORD PTR [rsp+0x30],cx
   14000af62:	lea    rcx,[rip+0x45b8f]        # 0x140050af8
   14000af69:	call   QWORD PTR [rip+0x3e741]        # 0x1400496b0
   14000af6f:	mov    r8,rax
   14000af72:	lea    rdx,[rip+0x45b7f]        # 0x140050af8
   14000af79:	lea    rcx,[rsp+0x30]
   14000af7e:	call   0x1400096cc
   14000af83:	nop
   14000af84:	lea    r8,[rsp+0x30]
   14000af89:	mov    rdx,rbx
   14000af8c:	lea    rcx,[rbp-0x58]
   14000af90:	call   0x14000a388
   14000af95:	nop
   14000af96:	cmp    QWORD PTR [rsp+0x48],0x8
   14000af9c:	jb     0x14000afa9
   14000af9e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000afa3:	call   QWORD PTR [rip+0x3e6cf]        # 0x140049678
   14000afa9:	lea    rcx,[rbp-0x58]
   14000afad:	cmp    QWORD PTR [rbp-0x40],0x8
   14000afb2:	cmovae rcx,QWORD PTR [rbp-0x58]
   14000afb7:	lea    rdx,[rbp-0x30]
   14000afbb:	call   QWORD PTR [rip+0x3e077]        # 0x140049038
   14000afc1:	mov    rdi,rax
   14000afc4:	xor    eax,eax
   14000afc6:	mov    ecx,eax
   14000afc8:	cmp    rdi,0xffffffffffffffff
   14000afcc:	setne  cl
   14000afcf:	mov    QWORD PTR [rsp+0x70],0x7
   14000afd8:	mov    QWORD PTR [rsp+0x68],rax
   14000afdd:	mov    WORD PTR [rsp+0x58],ax
   14000afe2:	test   ecx,ecx
   14000afe4:	je     0x14000b0e0
   14000afea:	jmp    0x14000afee
   14000afec:	xor    eax,eax
   14000afee:	mov    QWORD PTR [rsp+0x48],0x7
   14000aff7:	mov    QWORD PTR [rsp+0x40],rax
   14000affc:	mov    WORD PTR [rsp+0x30],ax
   14000b001:	lea    rcx,[rbp-0x4]
   14000b005:	call   QWORD PTR [rip+0x3e6a5]        # 0x1400496b0
   14000b00b:	mov    r8,rax
   14000b00e:	lea    rdx,[rbp-0x4]
   14000b012:	lea    rcx,[rsp+0x30]
   14000b017:	call   0x1400096cc
   14000b01c:	nop
   14000b01d:	lea    r8,[rsp+0x30]
   14000b022:	mov    rdx,rbx
   14000b025:	lea    rcx,[rbp-0x80]
   14000b029:	call   0x14000a388
   14000b02e:	nop
   14000b02f:	mov    rdx,rax
   14000b032:	lea    rcx,[rsp+0x58]
   14000b037:	call   0x140009880
   14000b03c:	nop
   14000b03d:	cmp    QWORD PTR [rbp-0x68],0x8
   14000b042:	jb     0x14000b04e
   14000b044:	mov    rcx,QWORD PTR [rbp-0x80]
   14000b048:	call   QWORD PTR [rip+0x3e62a]        # 0x140049678
   14000b04e:	mov    QWORD PTR [rbp-0x68],0x7
   14000b056:	xor    eax,eax
   14000b058:	mov    QWORD PTR [rbp-0x70],rax
   14000b05c:	mov    WORD PTR [rbp-0x80],ax
   14000b060:	cmp    QWORD PTR [rsp+0x48],0x8
   14000b066:	jb     0x14000b073
   14000b068:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b06d:	call   QWORD PTR [rip+0x3e605]        # 0x140049678
   14000b073:	test   BYTE PTR [rbp-0x30],0x10
   14000b077:	jne    0x14000b08a
   14000b079:	lea    rdx,[rsp+0x58]
   14000b07e:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b083:	call   0x14000c524
   14000b088:	jmp    0x14000b0cb
   14000b08a:	test   sil,sil
   14000b08d:	je     0x14000b0cb
   14000b08f:	lea    rdx,[rip+0x45a6a]        # 0x140050b00
   14000b096:	lea    rcx,[rbp-0x4]
   14000b09a:	call   QWORD PTR [rip+0x3e620]        # 0x1400496c0
   14000b0a0:	test   eax,eax
   14000b0a2:	je     0x14000b0cb
   14000b0a4:	lea    rdx,[rip+0x45a59]        # 0x140050b04
   14000b0ab:	lea    rcx,[rbp-0x4]
   14000b0af:	call   QWORD PTR [rip+0x3e60b]        # 0x1400496c0
   14000b0b5:	test   eax,eax
   14000b0b7:	je     0x14000b0cb
   14000b0b9:	mov    r8b,sil
   14000b0bc:	mov    rdx,QWORD PTR [rsp+0x20]
   14000b0c1:	lea    rcx,[rsp+0x58]
   14000b0c6:	call   0x14000aef8
   14000b0cb:	lea    rdx,[rbp-0x30]
   14000b0cf:	mov    rcx,rdi
   14000b0d2:	call   QWORD PTR [rip+0x3dfa8]        # 0x140049080
   14000b0d8:	test   eax,eax
   14000b0da:	jne    0x14000afec
   14000b0e0:	cmp    rdi,0xffffffffffffffff
   14000b0e4:	je     0x14000b0f0
   14000b0e6:	mov    rcx,rdi
   14000b0e9:	call   QWORD PTR [rip+0x3df89]        # 0x140049078
   14000b0ef:	nop
   14000b0f0:	cmp    QWORD PTR [rsp+0x70],0x8
   14000b0f6:	jb     0x14000b103
   14000b0f8:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b0fd:	call   QWORD PTR [rip+0x3e575]        # 0x140049678
   14000b103:	mov    QWORD PTR [rsp+0x70],0x7
   14000b10c:	xor    eax,eax
   14000b10e:	mov    QWORD PTR [rsp+0x68],rax
   14000b113:	mov    WORD PTR [rsp+0x58],ax
   14000b118:	cmp    QWORD PTR [rbp-0x40],0x8
   14000b11d:	jb     0x14000b129
   14000b11f:	mov    rcx,QWORD PTR [rbp-0x58]
   14000b123:	call   QWORD PTR [rip+0x3e54f]        # 0x140049678
   14000b129:	mov    al,0x1
   14000b12b:	mov    rcx,QWORD PTR [rbp+0x220]
   14000b132:	xor    rcx,rsp
   14000b135:	call   0x14002b100
   14000b13a:	mov    rbx,QWORD PTR [rsp+0x368]
   14000b142:	add    rsp,0x330
   14000b149:	pop    rdi
   14000b14a:	pop    rsi
   14000b14b:	pop    rbp
   14000b14c:	ret    
   14000b14d:	int3   
   14000b14e:	int3   
   14000b14f:	int3   
   14000b150:	mov    r11,rsp
   14000b153:	push   rdi
   14000b154:	sub    rsp,0x70
   14000b158:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000b161:	mov    QWORD PTR [r11+0x18],rbx
   14000b165:	mov    QWORD PTR [r11+0x20],rsi
   14000b169:	mov    rax,QWORD PTR [rip+0x5d080]        # 0x1400681f0
   14000b170:	xor    rax,rsp
   14000b173:	mov    QWORD PTR [rsp+0x60],rax
   14000b178:	mov    rdi,rdx
   14000b17b:	mov    rbx,rcx
   14000b17e:	mov    QWORD PTR [r11-0x48],rcx
   14000b182:	xor    eax,eax
   14000b184:	mov    DWORD PTR [rsp+0x20],eax
   14000b188:	mov    QWORD PTR [rcx+0x18],0x7
   14000b190:	mov    QWORD PTR [rcx+0x10],rax
   14000b194:	mov    WORD PTR [rcx],ax
   14000b197:	mov    DWORD PTR [rsp+0x20],0x1
   14000b19f:	cmp    QWORD PTR [rdx+0x10],rax
   14000b1a3:	je     0x14000b229
   14000b1a9:	lea    rcx,[r11-0x40]
   14000b1ad:	call   0x14000a4d8
   14000b1b2:	mov    rdx,rax
   14000b1b5:	mov    rcx,rdi
   14000b1b8:	call   0x14000b340
   14000b1bd:	mov    rsi,rax
   14000b1c0:	cmp    QWORD PTR [rsp+0x50],0x8
   14000b1c6:	jb     0x14000b1d3
   14000b1c8:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b1cd:	call   QWORD PTR [rip+0x3e4a5]        # 0x140049678
   14000b1d3:	or     r9,0xffffffffffffffff
   14000b1d7:	cmp    rsi,r9
   14000b1da:	je     0x14000b21b
   14000b1dc:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b1e0:	dec    rdx
   14000b1e3:	cmp    rsi,rdx
   14000b1e6:	je     0x14000b229
   14000b1e8:	lea    r8,[rsi+0x1]
   14000b1ec:	lea    rdx,[rsp+0x38]
   14000b1f1:	mov    rcx,rdi
   14000b1f4:	call   0x14000b3d0
   14000b1f9:	nop
   14000b1fa:	mov    rdx,rax
   14000b1fd:	mov    rcx,rbx
   14000b200:	call   0x140009880
   14000b205:	nop
   14000b206:	cmp    QWORD PTR [rsp+0x50],0x8
   14000b20c:	jb     0x14000b229
   14000b20e:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b213:	call   QWORD PTR [rip+0x3e45f]        # 0x140049678
   14000b219:	jmp    0x14000b229
   14000b21b:	xor    r8d,r8d
   14000b21e:	mov    rdx,rdi
   14000b221:	mov    rcx,rbx
   14000b224:	call   0x140009914
   14000b229:	mov    rax,rbx
   14000b22c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b231:	xor    rcx,rsp
   14000b234:	call   0x14002b100
   14000b239:	lea    r11,[rsp+0x70]
   14000b23e:	mov    rbx,QWORD PTR [r11+0x20]
   14000b242:	mov    rsi,QWORD PTR [r11+0x28]
   14000b246:	mov    rsp,r11
   14000b249:	pop    rdi
   14000b24a:	ret    
   14000b24b:	int3   
   14000b24c:	mov    rax,rsp
   14000b24f:	push   rbp
   14000b250:	push   rsi
   14000b251:	push   rdi
   14000b252:	lea    rbp,[rax-0x5f]
   14000b256:	sub    rsp,0x90
   14000b25d:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   14000b265:	mov    QWORD PTR [rax+0x18],rbx
   14000b269:	mov    rax,QWORD PTR [rip+0x5cf80]        # 0x1400681f0
   14000b270:	xor    rax,rsp
   14000b273:	mov    QWORD PTR [rbp+0x37],rax
   14000b277:	mov    rbx,rcx
   14000b27a:	xor    esi,esi
   14000b27c:	mov    DWORD PTR [rbp-0x29],esi
   14000b27f:	cmp    QWORD PTR [rdx+0x10],rsi
   14000b283:	jne    0x14000b299
   14000b285:	mov    QWORD PTR [rcx+0x18],0x7
   14000b28d:	mov    QWORD PTR [rcx+0x10],rsi
   14000b291:	mov    WORD PTR [rcx],si
   14000b294:	jmp    0x14000b31d
   14000b299:	lea    rcx,[rbp-0x19]
   14000b29d:	call   0x140009ef8
   14000b2a2:	nop
   14000b2a3:	lea    rcx,[rbp+0xf]
   14000b2a7:	call   0x14000a4d8
   14000b2ac:	mov    rdx,rax
   14000b2af:	lea    rcx,[rbp-0x19]
   14000b2b3:	call   0x14000b340
   14000b2b8:	mov    rdi,rax
   14000b2bb:	cmp    QWORD PTR [rbp+0x27],0x8
   14000b2c0:	jb     0x14000b2cc
   14000b2c2:	mov    rcx,QWORD PTR [rbp+0xf]
   14000b2c6:	call   QWORD PTR [rip+0x3e3ac]        # 0x140049678
   14000b2cc:	cmp    rdi,0xffffffffffffffff
   14000b2d0:	jne    0x14000b2e3
   14000b2d2:	mov    QWORD PTR [rbx+0x18],0x7
   14000b2da:	mov    QWORD PTR [rbx+0x10],rsi
   14000b2de:	mov    WORD PTR [rbx],si
   14000b2e1:	jmp    0x14000b30c
   14000b2e3:	test   rdi,rdi
   14000b2e6:	je     0x14000b2fd
   14000b2e8:	mov    r9,rdi
   14000b2eb:	xor    r8d,r8d
   14000b2ee:	mov    rdx,rbx
   14000b2f1:	lea    rcx,[rbp-0x19]
   14000b2f5:	call   0x14000b3d0
   14000b2fa:	nop
   14000b2fb:	jmp    0x14000b30c
   14000b2fd:	mov    QWORD PTR [rbx+0x18],0x7
   14000b305:	mov    QWORD PTR [rbx+0x10],rsi
   14000b309:	mov    WORD PTR [rbx],si
   14000b30c:	cmp    QWORD PTR [rbp-0x1],0x8
   14000b311:	jb     0x14000b31d
   14000b313:	mov    rcx,QWORD PTR [rbp-0x19]
   14000b317:	call   QWORD PTR [rip+0x3e35b]        # 0x140049678
   14000b31d:	mov    rax,rbx
   14000b320:	mov    rcx,QWORD PTR [rbp+0x37]
   14000b324:	xor    rcx,rsp
   14000b327:	call   0x14002b100
   14000b32c:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000b334:	add    rsp,0x90
   14000b33b:	pop    rdi
   14000b33c:	pop    rsi
   14000b33d:	pop    rbp
   14000b33e:	ret    
   14000b33f:	int3   
   14000b340:	cmp    QWORD PTR [rdx+0x18],0x8
   14000b345:	mov    r11,QWORD PTR [rdx+0x10]
   14000b349:	jb     0x14000b34e
   14000b34b:	mov    rdx,QWORD PTR [rdx]
   14000b34e:	test   r11,r11
   14000b351:	je     0x14000b3cb
   14000b353:	mov    rax,QWORD PTR [rcx+0x10]
   14000b357:	test   rax,rax
   14000b35a:	je     0x14000b3cb
   14000b35c:	cmp    rax,0xffffffffffffffff
   14000b360:	jbe    0x14000b368
   14000b362:	or     r8,0xffffffffffffffff
   14000b366:	jmp    0x14000b36c
   14000b368:	lea    r8,[rax-0x1]
   14000b36c:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b371:	jb     0x14000b378
   14000b373:	mov    rax,QWORD PTR [rcx]
   14000b376:	jmp    0x14000b37b
   14000b378:	mov    rax,rcx
   14000b37b:	lea    rax,[rax+r8*2]
   14000b37f:	movzx  r10d,WORD PTR [rax]
   14000b383:	mov    r9,r11
   14000b386:	mov    r8,rdx
   14000b389:	cmp    WORD PTR [r8],r10w
   14000b38d:	je     0x14000b39b
   14000b38f:	add    r8,0x2
   14000b393:	dec    r9
   14000b396:	jne    0x14000b389
   14000b398:	xor    r8d,r8d
   14000b39b:	test   r8,r8
   14000b39e:	jne    0x14000b3ba
   14000b3a0:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b3a5:	jb     0x14000b3ac
   14000b3a7:	mov    r8,QWORD PTR [rcx]
   14000b3aa:	jmp    0x14000b3af
   14000b3ac:	mov    r8,rcx
   14000b3af:	cmp    rax,r8
   14000b3b2:	je     0x14000b3cb
   14000b3b4:	sub    rax,0x2
   14000b3b8:	jmp    0x14000b37f
   14000b3ba:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b3bf:	jb     0x14000b3c4
   14000b3c1:	mov    rcx,QWORD PTR [rcx]
   14000b3c4:	sub    rax,rcx
   14000b3c7:	sar    rax,1
   14000b3ca:	ret    
   14000b3cb:	or     rax,0xffffffffffffffff
   14000b3cf:	ret    
   14000b3d0:	rex push rbx
   14000b3d2:	sub    rsp,0x20
   14000b3d6:	xor    eax,eax
   14000b3d8:	mov    rbx,rdx
   14000b3db:	mov    QWORD PTR [rdx+0x18],0x7
   14000b3e3:	mov    QWORD PTR [rdx+0x10],rax
   14000b3e7:	mov    WORD PTR [rdx],ax
   14000b3ea:	mov    rdx,rcx
   14000b3ed:	mov    rcx,rbx
   14000b3f0:	mov    DWORD PTR [rsp+0x38],eax
   14000b3f4:	call   0x140009914
   14000b3f9:	mov    rax,rbx
   14000b3fc:	add    rsp,0x20
   14000b400:	pop    rbx
   14000b401:	ret    
   14000b402:	int3   
   14000b403:	int3   
   14000b404:	rex push rbx
   14000b406:	sub    rsp,0x20
   14000b40a:	test   BYTE PTR [rcx+0x78],0x1
   14000b40e:	lea    rax,[rip+0x45743]        # 0x140050b58
   14000b415:	mov    rbx,rcx
   14000b418:	mov    QWORD PTR [rcx],rax
   14000b41b:	je     0x14000b42a
   14000b41d:	mov    rcx,QWORD PTR [rcx+0x20]
   14000b421:	mov    rcx,QWORD PTR [rcx]
   14000b424:	call   QWORD PTR [rip+0x3e24e]        # 0x140049678
   14000b42a:	mov    rax,QWORD PTR [rbx+0x20]
   14000b42e:	xor    ecx,ecx
   14000b430:	mov    QWORD PTR [rax],rcx
   14000b433:	mov    rax,QWORD PTR [rbx+0x40]
   14000b437:	mov    QWORD PTR [rax],rcx
   14000b43a:	mov    rax,QWORD PTR [rbx+0x58]
   14000b43e:	mov    DWORD PTR [rax],ecx
   14000b440:	mov    rax,QWORD PTR [rbx+0x28]
   14000b444:	mov    QWORD PTR [rax],rcx
   14000b447:	mov    rax,QWORD PTR [rbx+0x48]
   14000b44b:	mov    QWORD PTR [rax],rcx
   14000b44e:	mov    rax,QWORD PTR [rbx+0x60]
   14000b452:	mov    DWORD PTR [rax],ecx
   14000b454:	and    DWORD PTR [rbx+0x78],0xfffffffe
   14000b458:	mov    QWORD PTR [rbx+0x70],rcx
   14000b45c:	mov    rcx,rbx
   14000b45f:	add    rsp,0x20
   14000b463:	pop    rbx
   14000b464:	rex.W jmp QWORD PTR [rip+0x3dfe5]        # 0x140049450
   14000b46b:	int3   
   14000b46c:	mov    QWORD PTR [rsp+0x10],rbx
   14000b471:	mov    QWORD PTR [rsp+0x18],rbp
   14000b476:	push   rsi
   14000b477:	push   rdi
   14000b478:	push   r12
   14000b47a:	push   r13
   14000b47c:	push   r14
   14000b47e:	sub    rsp,0x40
   14000b482:	xor    r14d,r14d
   14000b485:	test   BYTE PTR [rcx+0x78],0x8
   14000b489:	movzx  ebp,dx
   14000b48c:	mov    rbx,rcx
   14000b48f:	je     0x14000b4c0
   14000b491:	mov    r9,QWORD PTR [rcx+0x48]
   14000b495:	mov    rdx,QWORD PTR [r9]
   14000b498:	test   rdx,rdx
   14000b49b:	je     0x14000b4c0
   14000b49d:	mov    r8,QWORD PTR [rcx+0x70]
   14000b4a1:	cmp    rdx,r8
   14000b4a4:	jae    0x14000b4c0
   14000b4a6:	mov    rax,QWORD PTR [rcx+0x60]
   14000b4aa:	movsxd rcx,DWORD PTR [rax]
   14000b4ad:	mov    QWORD PTR [r9],r8
   14000b4b0:	lea    rdx,[rdx+rcx*2]
   14000b4b4:	mov    rcx,QWORD PTR [rbx+0x60]
   14000b4b8:	sub    rdx,r8
   14000b4bb:	sar    rdx,1
   14000b4be:	mov    DWORD PTR [rcx],edx
   14000b4c0:	mov    r9d,0xffff
   14000b4c6:	cmp    r9w,bp
   14000b4ca:	jne    0x14000b4d5
   14000b4cc:	movzx  eax,r14w
   14000b4d0:	jmp    0x14000b6e0
   14000b4d5:	mov    r8,QWORD PTR [rbx+0x48]
   14000b4d9:	cmp    QWORD PTR [r8],r14
   14000b4dc:	je     0x14000b4f5
   14000b4de:	mov    rax,QWORD PTR [rbx+0x60]
   14000b4e2:	mov    rdx,QWORD PTR [r8]
   14000b4e5:	movsxd rcx,DWORD PTR [rax]
   14000b4e8:	lea    rax,[rdx+rcx*2]
   14000b4ec:	cmp    rdx,rax
   14000b4ef:	jb     0x14000b6d1
   14000b4f5:	test   BYTE PTR [rbx+0x78],0x2
   14000b4f9:	je     0x14000b504
   14000b4fb:	movzx  eax,r9w
   14000b4ff:	jmp    0x14000b6e0
   14000b504:	cmp    QWORD PTR [r8],r14
   14000b507:	jne    0x14000b50e
   14000b509:	mov    rsi,r14
   14000b50c:	jmp    0x14000b525
   14000b50e:	mov    rax,QWORD PTR [rbx+0x60]
   14000b512:	movsxd rsi,DWORD PTR [rax]
   14000b515:	mov    rax,QWORD PTR [rbx+0x20]
   14000b519:	add    rsi,rsi
   14000b51c:	sub    rsi,QWORD PTR [rax]
   14000b51f:	add    rsi,QWORD PTR [r8]
   14000b522:	sar    rsi,1
   14000b525:	mov    rcx,rsi
   14000b528:	mov    eax,0x20
   14000b52d:	shr    rcx,1
   14000b530:	cmp    rcx,rax
   14000b533:	jb     0x14000b53d
   14000b535:	mov    rax,rcx
   14000b538:	test   rcx,rcx
   14000b53b:	je     0x14000b54f
   14000b53d:	mov    ecx,0x7fffffff
   14000b542:	sub    rcx,rax
   14000b545:	cmp    rcx,rsi
   14000b548:	jae    0x14000b54f
   14000b54a:	shr    rax,1
   14000b54d:	jne    0x14000b53d
   14000b54f:	test   rax,rax
   14000b552:	je     0x14000b4fb
   14000b554:	lea    r12,[rax+rsi*1]
   14000b558:	mov    rdi,r14
   14000b55b:	test   r12,r12
   14000b55e:	je     0x14000b5b4
   14000b560:	movabs rax,0x7fffffffffffffff
   14000b56a:	cmp    r12,rax
   14000b56d:	ja     0x14000b581
   14000b56f:	lea    rcx,[r12+r12*1]
   14000b573:	call   QWORD PTR [rip+0x3e11f]        # 0x140049698
   14000b579:	mov    rdi,rax
   14000b57c:	test   rax,rax
   14000b57f:	jne    0x14000b5b4
   14000b581:	lea    rdx,[rsp+0x70]
   14000b586:	lea    rcx,[rsp+0x20]
   14000b58b:	mov    QWORD PTR [rsp+0x70],r14
   14000b590:	call   QWORD PTR [rip+0x3e33a]        # 0x1400498d0
   14000b596:	lea    r11,[rip+0x3ec3b]        # 0x14004a1d8
   14000b59d:	lea    rdx,[rip+0x581a4]        # 0x140063748
   14000b5a4:	lea    rcx,[rsp+0x20]
   14000b5a9:	mov    QWORD PTR [rsp+0x20],r11
   14000b5ae:	call   0x14002b560
   14000b5b3:	int3   
   14000b5b4:	mov    rax,QWORD PTR [rbx+0x20]
   14000b5b8:	mov    r13,QWORD PTR [rax]
   14000b5bb:	test   rsi,rsi
   14000b5be:	je     0x14000b5d5
   14000b5c0:	lea    r8,[rsi+rsi*1]
   14000b5c4:	mov    rdx,r13
   14000b5c7:	mov    rcx,rdi
   14000b5ca:	call   QWORD PTR [rip+0x3e2f8]        # 0x1400498c8
   14000b5d0:	test   rsi,rsi
   14000b5d3:	jne    0x14000b617
   14000b5d5:	mov    rax,QWORD PTR [rbx+0x28]
   14000b5d9:	mov    QWORD PTR [rbx+0x70],rdi
   14000b5dd:	lea    rcx,[r12+r12*1]
   14000b5e1:	mov    QWORD PTR [rax],rdi
   14000b5e4:	mov    rax,QWORD PTR [rbx+0x48]
   14000b5e8:	sar    rcx,1
   14000b5eb:	mov    QWORD PTR [rax],rdi
   14000b5ee:	mov    rax,QWORD PTR [rbx+0x60]
   14000b5f2:	mov    DWORD PTR [rax],ecx
   14000b5f4:	mov    rax,QWORD PTR [rbx+0x20]
   14000b5f8:	test   BYTE PTR [rbx+0x78],0x4
   14000b5fc:	mov    QWORD PTR [rax],rdi
   14000b5ff:	mov    rax,QWORD PTR [rbx+0x40]
   14000b603:	jne    0x14000b679
   14000b605:	mov    QWORD PTR [rax],rdi
   14000b608:	mov    rax,QWORD PTR [rbx+0x58]
   14000b60c:	mov    DWORD PTR [rax],0x1
   14000b612:	jmp    0x14000b6be
   14000b617:	mov    rax,QWORD PTR [rbx+0x70]
   14000b61b:	sub    rax,r13
   14000b61e:	sar    rax,1
   14000b621:	lea    rax,[rdi+rax*2]
   14000b625:	mov    QWORD PTR [rbx+0x70],rax
   14000b629:	mov    rax,QWORD PTR [rbx+0x48]
   14000b62d:	mov    rcx,QWORD PTR [rax]
   14000b630:	sub    rcx,r13
   14000b633:	sar    rcx,1
   14000b636:	lea    rdx,[rdi+rcx*2]
   14000b63a:	mov    rcx,QWORD PTR [rbx+0x28]
   14000b63e:	mov    rax,QWORD PTR [rcx]
   14000b641:	sub    rax,r13
   14000b644:	sar    rax,1
   14000b647:	lea    rax,[rdi+rax*2]
   14000b64b:	mov    QWORD PTR [rcx],rax
   14000b64e:	mov    rax,QWORD PTR [rbx+0x48]
   14000b652:	lea    rcx,[r12+r12*1]
   14000b656:	sub    rcx,rdx
   14000b659:	mov    QWORD PTR [rax],rdx
   14000b65c:	mov    rax,QWORD PTR [rbx+0x60]
   14000b660:	add    rcx,rdi
   14000b663:	sar    rcx,1
   14000b666:	mov    DWORD PTR [rax],ecx
   14000b668:	test   BYTE PTR [rbx+0x78],0x4
   14000b66c:	je     0x14000b687
   14000b66e:	mov    rax,QWORD PTR [rbx+0x20]
   14000b672:	mov    QWORD PTR [rax],rdi
   14000b675:	mov    rax,QWORD PTR [rbx+0x40]
   14000b679:	mov    QWORD PTR [rax],r14
   14000b67c:	mov    rax,QWORD PTR [rbx+0x58]
   14000b680:	sar    rdi,1
   14000b683:	mov    DWORD PTR [rax],edi
   14000b685:	jmp    0x14000b6be
   14000b687:	mov    rax,QWORD PTR [rbx+0x48]
   14000b68b:	mov    r8,QWORD PTR [rax]
   14000b68e:	mov    rax,QWORD PTR [rbx+0x40]
   14000b692:	mov    rcx,QWORD PTR [rax]
   14000b695:	mov    rax,QWORD PTR [rbx+0x20]
   14000b699:	mov    QWORD PTR [rax],rdi
   14000b69c:	mov    rax,QWORD PTR [rbx+0x40]
   14000b6a0:	sub    rcx,r13
   14000b6a3:	sar    rcx,1
   14000b6a6:	lea    rdx,[rdi+rcx*2]
   14000b6aa:	sub    r8,rdx
   14000b6ad:	mov    QWORD PTR [rax],rdx
   14000b6b0:	mov    rax,QWORD PTR [rbx+0x58]
   14000b6b4:	add    r8,0x2
   14000b6b8:	sar    r8,1
   14000b6bb:	mov    DWORD PTR [rax],r8d
   14000b6be:	test   BYTE PTR [rbx+0x78],0x1
   14000b6c2:	je     0x14000b6cd
   14000b6c4:	mov    rcx,r13
   14000b6c7:	call   QWORD PTR [rip+0x3dfab]        # 0x140049678
   14000b6cd:	or     DWORD PTR [rbx+0x78],0x1
   14000b6d1:	mov    rcx,rbx
   14000b6d4:	call   QWORD PTR [rip+0x3dcd6]        # 0x1400493b0
   14000b6da:	mov    WORD PTR [rax],bp
   14000b6dd:	movzx  eax,bp
   14000b6e0:	lea    r11,[rsp+0x40]
   14000b6e5:	mov    rbx,QWORD PTR [r11+0x38]
   14000b6e9:	mov    rbp,QWORD PTR [r11+0x40]
   14000b6ed:	mov    rsp,r11
   14000b6f0:	pop    r14
   14000b6f2:	pop    r13
   14000b6f4:	pop    r12
   14000b6f6:	pop    rdi
   14000b6f7:	pop    rsi
   14000b6f8:	ret    
   14000b6f9:	int3   
   14000b6fa:	int3   
   14000b6fb:	int3   
   14000b6fc:	mov    QWORD PTR [rsp+0x8],rbx
   14000b701:	mov    QWORD PTR [rsp+0x10],rbp
   14000b706:	mov    QWORD PTR [rsp+0x18],rsi
   14000b70b:	push   rdi
   14000b70c:	sub    rsp,0x20
   14000b710:	mov    rax,QWORD PTR [rcx+0x40]
   14000b714:	mov    rdi,rcx
   14000b717:	xor    esi,esi
   14000b719:	mov    rcx,QWORD PTR [rax]
   14000b71c:	movzx  ebx,dx
   14000b71f:	mov    ebp,0xffff
   14000b724:	test   rcx,rcx
   14000b727:	je     0x14000b766
   14000b729:	mov    rax,QWORD PTR [rdi+0x20]
   14000b72d:	cmp    rcx,QWORD PTR [rax]
   14000b730:	jbe    0x14000b766
   14000b732:	cmp    bp,dx
   14000b735:	je     0x14000b743
   14000b737:	cmp    dx,WORD PTR [rcx-0x2]
   14000b73b:	je     0x14000b743
   14000b73d:	test   BYTE PTR [rdi+0x78],0x2
   14000b741:	jne    0x14000b766
   14000b743:	or     edx,0xffffffff
   14000b746:	mov    rcx,rdi
   14000b749:	call   QWORD PTR [rip+0x3dc81]        # 0x1400493d0
   14000b74f:	cmp    bp,bx
   14000b752:	je     0x14000b761
   14000b754:	mov    rax,QWORD PTR [rdi+0x40]
   14000b758:	movzx  esi,bx
   14000b75b:	mov    rcx,QWORD PTR [rax]
   14000b75e:	mov    WORD PTR [rcx],bx
   14000b761:	movzx  eax,si
   14000b764:	jmp    0x14000b769
   14000b766:	movzx  eax,bp
   14000b769:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b76e:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b773:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b778:	add    rsp,0x20
   14000b77c:	pop    rdi
   14000b77d:	ret    
   14000b77e:	int3   
   14000b77f:	int3   
   14000b780:	mov    QWORD PTR [rsp+0x8],rbx
   14000b785:	mov    r11,QWORD PTR [rcx+0x40]
   14000b789:	mov    r9,rcx
   14000b78c:	mov    r10,QWORD PTR [r11]
   14000b78f:	test   r10,r10
   14000b792:	je     0x14000b7ea
   14000b794:	mov    rbx,QWORD PTR [rcx+0x58]
   14000b798:	movsxd rcx,DWORD PTR [rbx]
   14000b79b:	lea    rdx,[r10+rcx*2]
   14000b79f:	cmp    r10,rdx
   14000b7a2:	jae    0x14000b7aa
   14000b7a4:	movzx  eax,WORD PTR [r10]
   14000b7a8:	jmp    0x14000b7ef
   14000b7aa:	test   BYTE PTR [r9+0x78],0x4
   14000b7af:	jne    0x14000b7ea
   14000b7b1:	mov    rax,QWORD PTR [r9+0x48]
   14000b7b5:	mov    rcx,QWORD PTR [rax]
   14000b7b8:	test   rcx,rcx
   14000b7bb:	je     0x14000b7ea
   14000b7bd:	cmp    rcx,r10
   14000b7c0:	ja     0x14000b7c8
   14000b7c2:	cmp    QWORD PTR [r9+0x70],r10
   14000b7c6:	jbe    0x14000b7ea
   14000b7c8:	cmp    QWORD PTR [r9+0x70],rcx
   14000b7cc:	jae    0x14000b7d2
   14000b7ce:	mov    QWORD PTR [r9+0x70],rcx
   14000b7d2:	mov    rax,QWORD PTR [r9+0x70]
   14000b7d6:	sub    rax,QWORD PTR [r11]
   14000b7d9:	sar    rax,1
   14000b7dc:	mov    DWORD PTR [rbx],eax
   14000b7de:	mov    rax,QWORD PTR [r9+0x40]
   14000b7e2:	mov    rcx,QWORD PTR [rax]
   14000b7e5:	movzx  eax,WORD PTR [rcx]
   14000b7e8:	jmp    0x14000b7ef
   14000b7ea:	mov    eax,0xffff
   14000b7ef:	mov    rbx,QWORD PTR [rsp+0x8]
   14000b7f4:	ret    
   14000b7f5:	int3   
   14000b7f6:	int3   
   14000b7f7:	int3   
   14000b7f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000b7fd:	mov    QWORD PTR [rsp+0x10],rsi
   14000b802:	push   rdi
   14000b803:	sub    rsp,0x20
   14000b807:	mov    rbx,r8
   14000b80a:	mov    r8,QWORD PTR [rcx+0x48]
   14000b80e:	mov    rsi,rdx
   14000b811:	mov    rax,QWORD PTR [r8]
   14000b814:	mov    rdi,rcx
   14000b817:	test   rax,rax
   14000b81a:	je     0x14000b826
   14000b81c:	cmp    QWORD PTR [rcx+0x70],rax
   14000b820:	jae    0x14000b826
   14000b822:	mov    QWORD PTR [rcx+0x70],rax
   14000b826:	test   BYTE PTR [rsp+0x50],0x1
   14000b82b:	je     0x14000b8f5
   14000b831:	mov    rax,QWORD PTR [rcx+0x40]
   14000b835:	mov    r10,QWORD PTR [rax]
   14000b838:	test   r10,r10
   14000b83b:	je     0x14000b8f5
   14000b841:	mov    rdx,QWORD PTR [rip+0x3dd70]        # 0x1400495b8
   14000b848:	cmp    r9d,0x2
   14000b84c:	jne    0x14000b858
   14000b84e:	mov    rax,QWORD PTR [rcx+0x20]
   14000b852:	mov    rcx,QWORD PTR [rcx+0x70]
   14000b856:	jmp    0x14000b86c
   14000b858:	cmp    r9d,0x1
   14000b85c:	jne    0x14000b877
   14000b85e:	test   BYTE PTR [rsp+0x50],0x2
   14000b863:	jne    0x14000b87c
   14000b865:	mov    rax,QWORD PTR [rcx+0x20]
   14000b869:	mov    rcx,r10
   14000b86c:	sub    rcx,QWORD PTR [rax]
   14000b86f:	sar    rcx,1
   14000b872:	add    rbx,rcx
   14000b875:	jmp    0x14000b87f
   14000b877:	test   r9d,r9d
   14000b87a:	je     0x14000b87f
   14000b87c:	mov    rbx,QWORD PTR [rdx]
   14000b87f:	test   rbx,rbx
   14000b882:	js     0x14000b968
   14000b888:	mov    rax,QWORD PTR [rdi+0x20]
   14000b88c:	mov    rcx,QWORD PTR [rax]
   14000b88f:	mov    rax,QWORD PTR [rdi+0x70]
   14000b893:	sub    rax,rcx
   14000b896:	sar    rax,1
   14000b899:	cmp    rbx,rax
   14000b89c:	jg     0x14000b968
   14000b8a2:	sub    rcx,r10
   14000b8a5:	sar    rcx,1
   14000b8a8:	lea    edx,[rbx+rcx*1]
   14000b8ab:	mov    rcx,rdi
   14000b8ae:	call   QWORD PTR [rip+0x3db1c]        # 0x1400493d0
   14000b8b4:	test   BYTE PTR [rsp+0x50],0x2
   14000b8b9:	je     0x14000b97c
   14000b8bf:	mov    r8,QWORD PTR [rdi+0x48]
   14000b8c3:	mov    rdx,QWORD PTR [r8]
   14000b8c6:	test   rdx,rdx
   14000b8c9:	je     0x14000b97c
   14000b8cf:	mov    rax,QWORD PTR [rdi+0x60]
   14000b8d3:	movsxd rcx,DWORD PTR [rax]
   14000b8d6:	mov    rax,QWORD PTR [rdi+0x40]
   14000b8da:	lea    rdx,[rdx+rcx*2]
   14000b8de:	mov    rcx,QWORD PTR [rax]
   14000b8e1:	mov    QWORD PTR [r8],rcx
   14000b8e4:	mov    rax,QWORD PTR [rdi+0x60]
   14000b8e8:	sub    rdx,rcx
   14000b8eb:	sar    rdx,1
   14000b8ee:	mov    DWORD PTR [rax],edx
   14000b8f0:	jmp    0x14000b97c
   14000b8f5:	test   BYTE PTR [rsp+0x50],0x2
   14000b8fa:	je     0x14000b96d
   14000b8fc:	cmp    QWORD PTR [r8],0x0
   14000b900:	je     0x14000b96d
   14000b902:	mov    rdx,QWORD PTR [rip+0x3dcaf]        # 0x1400495b8
   14000b909:	cmp    r9d,0x2
   14000b90d:	jne    0x14000b919
   14000b90f:	mov    rax,QWORD PTR [rcx+0x20]
   14000b913:	mov    rcx,QWORD PTR [rcx+0x70]
   14000b917:	jmp    0x14000b926
   14000b919:	cmp    r9d,0x1
   14000b91d:	jne    0x14000b931
   14000b91f:	mov    rax,QWORD PTR [rcx+0x20]
   14000b923:	mov    rcx,QWORD PTR [r8]
   14000b926:	sub    rcx,QWORD PTR [rax]
   14000b929:	sar    rcx,1
   14000b92c:	add    rbx,rcx
   14000b92f:	jmp    0x14000b939
   14000b931:	test   r9d,r9d
   14000b934:	je     0x14000b939
   14000b936:	mov    rbx,QWORD PTR [rdx]
   14000b939:	test   rbx,rbx
   14000b93c:	js     0x14000b968
   14000b93e:	mov    rax,QWORD PTR [rdi+0x20]
   14000b942:	mov    rcx,QWORD PTR [rax]
   14000b945:	mov    rax,QWORD PTR [rdi+0x70]
   14000b949:	sub    rax,rcx
   14000b94c:	sar    rax,1
   14000b94f:	cmp    rbx,rax
   14000b952:	jg     0x14000b968
   14000b954:	sub    rcx,QWORD PTR [r8]
   14000b957:	sar    rcx,1
   14000b95a:	lea    edx,[rbx+rcx*1]
   14000b95d:	mov    rcx,rdi
   14000b960:	call   QWORD PTR [rip+0x3da52]        # 0x1400493b8
   14000b966:	jmp    0x14000b97c
   14000b968:	mov    rbx,QWORD PTR [rdx]
   14000b96b:	jmp    0x14000b97c
   14000b96d:	test   rbx,rbx
   14000b970:	je     0x14000b97c
   14000b972:	mov    rax,QWORD PTR [rip+0x3dc3f]        # 0x1400495b8
   14000b979:	mov    rbx,QWORD PTR [rax]
   14000b97c:	and    QWORD PTR [rsi+0x8],0x0
   14000b981:	and    DWORD PTR [rsi+0x10],0x0
   14000b985:	mov    QWORD PTR [rsi],rbx
   14000b988:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b98d:	mov    rax,rsi
   14000b990:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b995:	add    rsp,0x20
   14000b999:	pop    rdi
   14000b99a:	ret    
   14000b99b:	int3   
   14000b99c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9a1:	mov    QWORD PTR [rsp+0x10],rbp
   14000b9a6:	mov    QWORD PTR [rsp+0x18],rsi
   14000b9ab:	push   rdi
   14000b9ac:	sub    rsp,0x20
   14000b9b0:	movsxd rbx,DWORD PTR [r8+0x8]
   14000b9b4:	mov    ebp,r9d
   14000b9b7:	mov    r9,QWORD PTR [rcx+0x48]
   14000b9bb:	mov    rax,QWORD PTR [r9]
   14000b9be:	add    rbx,QWORD PTR [r8]
   14000b9c1:	mov    rsi,rdx
   14000b9c4:	mov    rdi,rcx
   14000b9c7:	test   rax,rax
   14000b9ca:	je     0x14000b9d6
   14000b9cc:	cmp    QWORD PTR [rcx+0x70],rax
   14000b9d0:	jae    0x14000b9d6
   14000b9d2:	mov    QWORD PTR [rcx+0x70],rax
   14000b9d6:	mov    rax,QWORD PTR [rip+0x3dbdb]        # 0x1400495b8
   14000b9dd:	mov    r8,QWORD PTR [rax]
   14000b9e0:	cmp    rbx,r8
   14000b9e3:	je     0x14000baa3
   14000b9e9:	test   bpl,0x1
   14000b9ed:	je     0x14000ba65
   14000b9ef:	mov    rax,QWORD PTR [rcx+0x40]
   14000b9f3:	mov    rdx,QWORD PTR [rax]
   14000b9f6:	test   rdx,rdx
   14000b9f9:	je     0x14000ba65
   14000b9fb:	test   rbx,rbx
   14000b9fe:	js     0x14000baa0
   14000ba04:	mov    rax,QWORD PTR [rcx+0x20]
   14000ba08:	mov    rcx,QWORD PTR [rax]
   14000ba0b:	mov    rax,QWORD PTR [rdi+0x70]
   14000ba0f:	sub    rax,rcx
   14000ba12:	sar    rax,1
   14000ba15:	cmp    rbx,rax
   14000ba18:	jg     0x14000baa0
   14000ba1e:	sub    rcx,rdx
   14000ba21:	sar    rcx,1
   14000ba24:	lea    edx,[rbx+rcx*1]
   14000ba27:	mov    rcx,rdi
   14000ba2a:	call   QWORD PTR [rip+0x3d9a0]        # 0x1400493d0
   14000ba30:	test   bpl,0x2
   14000ba34:	je     0x14000baa3
   14000ba36:	mov    r8,QWORD PTR [rdi+0x48]
   14000ba3a:	mov    rdx,QWORD PTR [r8]
   14000ba3d:	test   rdx,rdx
   14000ba40:	je     0x14000baa3
   14000ba42:	mov    rax,QWORD PTR [rdi+0x60]
   14000ba46:	movsxd rcx,DWORD PTR [rax]
   14000ba49:	mov    rax,QWORD PTR [rdi+0x40]
   14000ba4d:	lea    rdx,[rdx+rcx*2]
   14000ba51:	mov    rcx,QWORD PTR [rax]
   14000ba54:	mov    QWORD PTR [r8],rcx
   14000ba57:	mov    rax,QWORD PTR [rdi+0x60]
   14000ba5b:	sub    rdx,rcx
   14000ba5e:	sar    rdx,1
   14000ba61:	mov    DWORD PTR [rax],edx
   14000ba63:	jmp    0x14000baa3
   14000ba65:	test   bpl,0x2
   14000ba69:	je     0x14000baa0
   14000ba6b:	cmp    QWORD PTR [r9],0x0
   14000ba6f:	je     0x14000baa0
   14000ba71:	test   rbx,rbx
   14000ba74:	js     0x14000baa0
   14000ba76:	mov    rax,QWORD PTR [rcx+0x20]
   14000ba7a:	mov    rcx,QWORD PTR [rax]
   14000ba7d:	mov    rax,QWORD PTR [rdi+0x70]
   14000ba81:	sub    rax,rcx
   14000ba84:	sar    rax,1
   14000ba87:	cmp    rbx,rax
   14000ba8a:	jg     0x14000baa0
   14000ba8c:	sub    rcx,QWORD PTR [r9]
   14000ba8f:	sar    rcx,1
   14000ba92:	lea    edx,[rbx+rcx*1]
   14000ba95:	mov    rcx,rdi
   14000ba98:	call   QWORD PTR [rip+0x3d91a]        # 0x1400493b8
   14000ba9e:	jmp    0x14000baa3
   14000baa0:	mov    rbx,r8
   14000baa3:	and    QWORD PTR [rsi+0x8],0x0
   14000baa8:	and    DWORD PTR [rsi+0x10],0x0
   14000baac:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bab1:	mov    QWORD PTR [rsi],rbx
   14000bab4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bab9:	mov    rax,rsi
   14000babc:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bac1:	add    rsp,0x20
   14000bac5:	pop    rdi
   14000bac6:	ret    
   14000bac7:	int3   
   14000bac8:	mov    QWORD PTR [rsp+0x8],rcx
   14000bacd:	push   rbx
   14000bace:	sub    rsp,0x30
   14000bad2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000badb:	mov    rbx,rcx
   14000bade:	lea    rax,[rip+0x450f3]        # 0x140050bd8
   14000bae5:	mov    QWORD PTR [rcx],rax
   14000bae8:	cmp    QWORD PTR [rcx+0x98],0x0
   14000baf0:	je     0x14000bb20
   14000baf2:	mov    rdx,QWORD PTR [rcx+0x20]
   14000baf6:	lea    rax,[rcx+0x88]
   14000bafd:	cmp    QWORD PTR [rdx],rax
   14000bb00:	jne    0x14000bb20
   14000bb02:	mov    rcx,QWORD PTR [rcx+0x78]
   14000bb06:	mov    rax,QWORD PTR [rbx+0x70]
   14000bb0a:	mov    QWORD PTR [rdx],rax
   14000bb0d:	mov    rax,QWORD PTR [rbx+0x40]
   14000bb11:	mov    QWORD PTR [rax],rcx
   14000bb14:	sub    rcx,rcx
   14000bb17:	sar    rcx,1
   14000bb1a:	mov    rax,QWORD PTR [rbx+0x58]
   14000bb1e:	mov    DWORD PTR [rax],ecx
   14000bb20:	cmp    BYTE PTR [rbx+0x90],0x0
   14000bb27:	je     0x14000bb32
   14000bb29:	mov    rcx,rbx
   14000bb2c:	call   0x14000cc70
   14000bb31:	nop
   14000bb32:	mov    rcx,rbx
   14000bb35:	add    rsp,0x30
   14000bb39:	pop    rbx
   14000bb3a:	rex.W jmp QWORD PTR [rip+0x3d90f]        # 0x140049450
   14000bb41:	int3   
   14000bb42:	int3   
   14000bb43:	int3   
   14000bb44:	sub    rsp,0x28
   14000bb48:	mov    rcx,QWORD PTR [rcx+0x98]
   14000bb4f:	test   rcx,rcx
   14000bb52:	je     0x14000bb5a
   14000bb54:	call   QWORD PTR [rip+0x3db06]        # 0x140049660
   14000bb5a:	add    rsp,0x28
   14000bb5e:	ret    
   14000bb5f:	int3   
   14000bb60:	mov    rax,rsp
   14000bb63:	push   rbp
   14000bb64:	push   rdi
   14000bb65:	push   r12
   14000bb67:	push   r13
   14000bb69:	push   r14
   14000bb6b:	lea    rbp,[rax-0x5f]
   14000bb6f:	sub    rsp,0x90
   14000bb76:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000bb7e:	mov    QWORD PTR [rax+0x18],rbx
   14000bb82:	mov    QWORD PTR [rax+0x20],rsi
   14000bb86:	mov    rax,QWORD PTR [rip+0x5c663]        # 0x1400681f0
   14000bb8d:	xor    rax,rsp
   14000bb90:	mov    QWORD PTR [rbp+0x2f],rax
   14000bb94:	movzx  esi,dx
   14000bb97:	mov    rbx,rcx
   14000bb9a:	mov    edi,0xffff
   14000bb9f:	xor    r12d,r12d
   14000bba2:	cmp    di,dx
   14000bba5:	jne    0x14000bbb0
   14000bba7:	movzx  eax,r12w
   14000bbab:	jmp    0x14000bdea
   14000bbb0:	mov    rdx,QWORD PTR [rcx+0x48]
   14000bbb4:	cmp    QWORD PTR [rdx],r12
   14000bbb7:	je     0x14000bbe8
   14000bbb9:	mov    rdx,QWORD PTR [rdx]
   14000bbbc:	mov    r8,QWORD PTR [rcx+0x60]
   14000bbc0:	movsxd rax,DWORD PTR [r8]
   14000bbc3:	lea    rcx,[rdx+rax*2]
   14000bbc7:	cmp    rdx,rcx
   14000bbca:	jae    0x14000bbe8
   14000bbcc:	dec    DWORD PTR [r8]
   14000bbcf:	mov    rcx,QWORD PTR [rbx+0x48]
   14000bbd3:	mov    rdx,QWORD PTR [rcx]
   14000bbd6:	lea    rax,[rdx+0x2]
   14000bbda:	mov    QWORD PTR [rcx],rax
   14000bbdd:	mov    WORD PTR [rdx],si
   14000bbe0:	movzx  eax,si
   14000bbe3:	jmp    0x14000bdea
   14000bbe8:	cmp    QWORD PTR [rbx+0x98],r12
   14000bbef:	je     0x14000bde7
   14000bbf5:	mov    rax,QWORD PTR [rbx+0x20]
   14000bbf9:	mov    rcx,QWORD PTR [rax]
   14000bbfc:	lea    rax,[rbx+0x88]
   14000bc03:	cmp    rcx,rax
   14000bc06:	jne    0x14000bc1c
   14000bc08:	mov    r8,QWORD PTR [rbx+0x78]
   14000bc0c:	mov    r9,r8
   14000bc0f:	mov    rdx,QWORD PTR [rbx+0x70]
   14000bc13:	mov    rcx,rbx
   14000bc16:	call   QWORD PTR [rip+0x3d7ac]        # 0x1400493c8
   14000bc1c:	cmp    QWORD PTR [rbx+0x80],r12
   14000bc23:	jne    0x14000bc46
   14000bc25:	mov    rdx,QWORD PTR [rbx+0x98]
   14000bc2c:	movzx  ecx,si
   14000bc2f:	call   QWORD PTR [rip+0x3da6b]        # 0x1400496a0
   14000bc35:	cmp    ax,di
   14000bc38:	je     0x14000bde7
   14000bc3e:	movzx  edi,si
   14000bc41:	jmp    0x14000bde7
   14000bc46:	mov    WORD PTR [rbp-0x19],si
   14000bc4a:	mov    QWORD PTR [rbp+0x1f],0xf
   14000bc52:	mov    QWORD PTR [rbp+0x17],r12
   14000bc56:	mov    BYTE PTR [rbp+0x7],r12b
   14000bc5a:	mov    r13d,0x8
   14000bc60:	cmp    r13b,0xfe
   14000bc64:	jbe    0x14000bc74
   14000bc66:	lea    rcx,[rip+0x44cdb]        # 0x140050948
   14000bc6d:	call   QWORD PTR [rip+0x3d925]        # 0x140049598
   14000bc73:	int3   
   14000bc74:	mov    r8,r13
   14000bc77:	xor    edx,edx
   14000bc79:	lea    rcx,[rbp+0x7]
   14000bc7d:	call   QWORD PTR [rip+0x3d9d5]        # 0x140049658
   14000bc83:	mov    QWORD PTR [rbp+0x17],r13
   14000bc87:	lea    rax,[rbp+0x7]
   14000bc8b:	cmp    QWORD PTR [rbp+0x1f],0x10
   14000bc90:	cmovae rax,QWORD PTR [rbp+0x7]
   14000bc95:	mov    BYTE PTR [rax+0x8],r12b
   14000bc99:	mov    r8,QWORD PTR [rbp+0x7]
   14000bc9d:	mov    r9,QWORD PTR [rbp+0x1f]
   14000bca1:	lea    rcx,[rbp+0x7]
   14000bca5:	cmp    r9,0x10
   14000bca9:	cmovae rcx,r8
   14000bcad:	lea    rdx,[rbp+0x7]
   14000bcb1:	cmovae rdx,r8
   14000bcb5:	add    rcx,QWORD PTR [rbp+0x17]
   14000bcb9:	lea    rax,[rbp-0x9]
   14000bcbd:	mov    QWORD PTR [rsp+0x38],rax
   14000bcc2:	mov    QWORD PTR [rsp+0x30],rcx
   14000bcc7:	mov    QWORD PTR [rsp+0x28],rdx
   14000bccc:	lea    rax,[rbp-0x11]
   14000bcd0:	mov    QWORD PTR [rsp+0x20],rax
   14000bcd5:	lea    r9,[rbp-0x17]
   14000bcd9:	lea    r8,[rbp-0x19]
   14000bcdd:	lea    rdx,[rbx+0x8c]
   14000bce4:	mov    rcx,QWORD PTR [rbx+0x80]
   14000bceb:	call   QWORD PTR [rip+0x3d777]        # 0x140049468
   14000bcf1:	test   eax,eax
   14000bcf3:	js     0x14000bdd6
   14000bcf9:	cmp    eax,0x1
   14000bcfc:	jg     0x14000bda8
   14000bd02:	lea    rax,[rbp+0x7]
   14000bd06:	mov    r8,QWORD PTR [rbp+0x7]
   14000bd0a:	mov    r9,QWORD PTR [rbp+0x1f]
   14000bd0e:	cmp    r9,0x10
   14000bd12:	cmovae rax,r8
   14000bd16:	mov    r13,QWORD PTR [rbp-0x9]
   14000bd1a:	sub    r13,rax
   14000bd1d:	je     0x14000bd4d
   14000bd1f:	lea    rcx,[rbp+0x7]
   14000bd23:	cmp    r9,0x10
   14000bd27:	cmovae rcx,r8
   14000bd2b:	mov    r9,QWORD PTR [rbx+0x98]
   14000bd32:	mov    r8,r13
   14000bd35:	mov    edx,0x1
   14000bd3a:	call   QWORD PTR [rip+0x3d948]        # 0x140049688
   14000bd40:	cmp    r13,rax
   14000bd43:	jne    0x14000bd83
   14000bd45:	mov    r9,QWORD PTR [rbp+0x1f]
   14000bd49:	mov    r8,QWORD PTR [rbp+0x7]
   14000bd4d:	mov    BYTE PTR [rbx+0x8a],0x1
   14000bd54:	lea    rax,[rbp-0x19]
   14000bd58:	cmp    QWORD PTR [rbp-0x11],rax
   14000bd5c:	jne    0x14000bd90
   14000bd5e:	test   r13,r13
   14000bd61:	jne    0x14000bca1
   14000bd67:	cmp    QWORD PTR [rbp+0x17],0x20
   14000bd6c:	jae    0x14000bd85
   14000bd6e:	xor    r8d,r8d
   14000bd71:	lea    edx,[r13+0x8]
   14000bd75:	lea    rcx,[rbp+0x7]
   14000bd79:	call   0x1400047bc
   14000bd7e:	jmp    0x14000bc99
   14000bd83:	jmp    0x14000bdd6
   14000bd85:	cmp    r9,0x10
   14000bd89:	jb     0x14000bde7
   14000bd8b:	mov    rcx,r8
   14000bd8e:	jmp    0x14000bde1
   14000bd90:	cmp    r9,0x10
   14000bd94:	jb     0x14000bbe0
   14000bd9a:	mov    rcx,r8
   14000bd9d:	call   QWORD PTR [rip+0x3d8d5]        # 0x140049678
   14000bda3:	jmp    0x14000bbe0
   14000bda8:	cmp    eax,0x3
   14000bdab:	jne    0x14000bdd6
   14000bdad:	mov    rdx,QWORD PTR [rbx+0x98]
   14000bdb4:	movzx  ecx,WORD PTR [rbp-0x19]
   14000bdb8:	call   QWORD PTR [rip+0x3d8e2]        # 0x1400496a0
   14000bdbe:	cmp    ax,di
   14000bdc1:	jne    0x14000bdc5
   14000bdc3:	mov    esi,edi
   14000bdc5:	cmp    QWORD PTR [rbp+0x1f],0x10
   14000bdca:	jb     0x14000bbe0
   14000bdd0:	mov    rcx,QWORD PTR [rbp+0x7]
   14000bdd4:	jmp    0x14000bd9d
   14000bdd6:	cmp    QWORD PTR [rbp+0x1f],0x10
   14000bddb:	jb     0x14000bde7
   14000bddd:	mov    rcx,QWORD PTR [rbp+0x7]
   14000bde1:	call   QWORD PTR [rip+0x3d891]        # 0x140049678
   14000bde7:	movzx  eax,di
   14000bdea:	mov    rcx,QWORD PTR [rbp+0x2f]
   14000bdee:	xor    rcx,rsp
   14000bdf1:	call   0x14002b100
   14000bdf6:	lea    r11,[rsp+0x90]
   14000bdfe:	mov    rbx,QWORD PTR [r11+0x40]
   14000be02:	mov    rsi,QWORD PTR [r11+0x48]
   14000be06:	mov    rsp,r11
   14000be09:	pop    r14
   14000be0b:	pop    r13
   14000be0d:	pop    r12
   14000be0f:	pop    rdi
   14000be10:	pop    rbp
   14000be11:	ret    
   14000be12:	int3   
   14000be13:	int3   
   14000be14:	mov    QWORD PTR [rsp+0x8],rbx
   14000be19:	mov    QWORD PTR [rsp+0x10],rbp
   14000be1e:	mov    QWORD PTR [rsp+0x18],rsi
   14000be23:	push   rdi
   14000be24:	sub    rsp,0x20
   14000be28:	mov    rax,QWORD PTR [rcx+0x40]
   14000be2c:	mov    rbx,rcx
   14000be2f:	xor    esi,esi
   14000be31:	mov    rcx,QWORD PTR [rax]
   14000be34:	movzx  edi,dx
   14000be37:	mov    ebp,0xffff
   14000be3c:	test   rcx,rcx
   14000be3f:	je     0x14000be6e
   14000be41:	mov    rax,QWORD PTR [rbx+0x20]
   14000be45:	cmp    QWORD PTR [rax],rcx
   14000be48:	jae    0x14000be6e
   14000be4a:	cmp    bp,dx
   14000be4d:	je     0x14000be55
   14000be4f:	cmp    WORD PTR [rcx-0x2],dx
   14000be53:	jne    0x14000be6e
   14000be55:	mov    rcx,rbx
   14000be58:	call   QWORD PTR [rip+0x3d562]        # 0x1400493c0
   14000be5e:	cmp    di,bp
   14000be61:	je     0x14000be66
   14000be63:	movzx  esi,di
   14000be66:	movzx  eax,si
   14000be69:	jmp    0x14000bef5
   14000be6e:	mov    rdx,QWORD PTR [rbx+0x98]
   14000be75:	test   rdx,rdx
   14000be78:	je     0x14000bef2
   14000be7a:	cmp    bp,di
   14000be7d:	je     0x14000bef2
   14000be7f:	cmp    QWORD PTR [rbx+0x80],rsi
   14000be86:	jne    0x14000be9b
   14000be88:	movzx  ecx,di
   14000be8b:	call   QWORD PTR [rip+0x3d817]        # 0x1400496a8
   14000be91:	cmp    ax,bp
   14000be94:	je     0x14000be9b
   14000be96:	movzx  eax,di
   14000be99:	jmp    0x14000bef5
   14000be9b:	mov    r8,QWORD PTR [rbx+0x40]
   14000be9f:	lea    rdx,[rbx+0x88]
   14000bea6:	cmp    QWORD PTR [r8],rdx
   14000bea9:	je     0x14000bef2
   14000beab:	mov    r9,QWORD PTR [rbx+0x20]
   14000beaf:	mov    WORD PTR [rdx],di
   14000beb2:	mov    rax,QWORD PTR [r9]
   14000beb5:	cmp    rax,rdx
   14000beb8:	je     0x14000bed0
   14000beba:	mov    QWORD PTR [rbx+0x70],rax
   14000bebe:	mov    rax,QWORD PTR [rbx+0x58]
   14000bec2:	movsxd rcx,DWORD PTR [rax]
   14000bec5:	mov    rax,QWORD PTR [r8]
   14000bec8:	lea    rcx,[rax+rcx*2]
   14000becc:	mov    QWORD PTR [rbx+0x78],rcx
   14000bed0:	mov    QWORD PTR [r9],rdx
   14000bed3:	mov    rax,QWORD PTR [rbx+0x40]
   14000bed7:	mov    rcx,rbx
   14000beda:	sub    rcx,rdx
   14000bedd:	mov    QWORD PTR [rax],rdx
   14000bee0:	mov    rax,QWORD PTR [rbx+0x58]
   14000bee4:	add    rcx,0x8a
   14000beeb:	sar    rcx,1
   14000beee:	mov    DWORD PTR [rax],ecx
   14000bef0:	jmp    0x14000be96
   14000bef2:	movzx  eax,bp
   14000bef5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000befa:	mov    rbp,QWORD PTR [rsp+0x38]
   14000beff:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bf04:	add    rsp,0x20
   14000bf08:	pop    rdi
   14000bf09:	ret    
   14000bf0a:	int3   
   14000bf0b:	int3   
   14000bf0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf11:	push   rdi
   14000bf12:	sub    rsp,0x20
   14000bf16:	mov    rax,QWORD PTR [rcx+0x40]
   14000bf1a:	mov    rbx,rcx
   14000bf1d:	mov    rcx,QWORD PTR [rax]
   14000bf20:	test   rcx,rcx
   14000bf23:	je     0x14000bf3a
   14000bf25:	mov    rdx,QWORD PTR [rbx+0x58]
   14000bf29:	movsxd r8,DWORD PTR [rdx]
   14000bf2c:	lea    rdx,[rcx+r8*2]
   14000bf30:	cmp    rcx,rdx
   14000bf33:	jae    0x14000bf3a
   14000bf35:	movzx  eax,WORD PTR [rcx]
   14000bf38:	jmp    0x14000bf5f
   14000bf3a:	mov    rax,QWORD PTR [rbx]
   14000bf3d:	mov    rcx,rbx
   14000bf40:	call   QWORD PTR [rax+0x38]
   14000bf43:	movzx  edi,ax
   14000bf46:	mov    eax,0xffff
   14000bf4b:	cmp    ax,di
   14000bf4e:	je     0x14000bf5f
   14000bf50:	mov    rax,QWORD PTR [rbx]
   14000bf53:	movzx  edx,di
   14000bf56:	mov    rcx,rbx
   14000bf59:	call   QWORD PTR [rax+0x20]
   14000bf5c:	movzx  eax,di
   14000bf5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf64:	add    rsp,0x20
   14000bf68:	pop    rdi
   14000bf69:	ret    
   14000bf6a:	int3   
   14000bf6b:	int3   
   14000bf6c:	mov    rax,rsp
   14000bf6f:	push   rbp
   14000bf70:	lea    rbp,[rax-0x5f]
   14000bf74:	sub    rsp,0x90
   14000bf7b:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   14000bf83:	mov    QWORD PTR [rax+0x10],rbx
   14000bf87:	mov    QWORD PTR [rax+0x18],rdi
   14000bf8b:	mov    rax,QWORD PTR [rip+0x5c25e]        # 0x1400681f0
   14000bf92:	xor    rax,rsp
   14000bf95:	mov    QWORD PTR [rbp+0x4f],rax
   14000bf99:	mov    rbx,rcx
   14000bf9c:	mov    rax,QWORD PTR [rcx+0x40]
   14000bfa0:	cmp    QWORD PTR [rax],0x0
   14000bfa4:	je     0x14000bfd5
   14000bfa6:	mov    rdx,QWORD PTR [rax]
   14000bfa9:	mov    rax,QWORD PTR [rcx+0x58]
   14000bfad:	movsxd rcx,DWORD PTR [rax]
   14000bfb0:	lea    rax,[rdx+rcx*2]
   14000bfb4:	cmp    rdx,rax
   14000bfb7:	jae    0x14000bfd5
   14000bfb9:	mov    rax,QWORD PTR [rbx+0x58]
   14000bfbd:	dec    DWORD PTR [rax]
   14000bfbf:	mov    rdx,QWORD PTR [rbx+0x40]
   14000bfc3:	mov    rax,QWORD PTR [rdx]
   14000bfc6:	lea    rcx,[rax+0x2]
   14000bfca:	mov    QWORD PTR [rdx],rcx
   14000bfcd:	movzx  eax,WORD PTR [rax]
   14000bfd0:	jmp    0x14000c1c5
   14000bfd5:	cmp    QWORD PTR [rbx+0x98],0x0
   14000bfdd:	je     0x14000c1c0
   14000bfe3:	mov    rax,QWORD PTR [rbx+0x20]
   14000bfe7:	mov    rcx,QWORD PTR [rax]
   14000bfea:	lea    rax,[rbx+0x88]
   14000bff1:	cmp    rcx,rax
   14000bff4:	jne    0x14000c00a
   14000bff6:	mov    r8,QWORD PTR [rbx+0x78]
   14000bffa:	mov    r9,r8
   14000bffd:	mov    rdx,QWORD PTR [rbx+0x70]
   14000c001:	mov    rcx,rbx
   14000c004:	call   QWORD PTR [rip+0x3d3be]        # 0x1400493c8
   14000c00a:	cmp    QWORD PTR [rbx+0x80],0x0
   14000c012:	jne    0x14000c03d
   14000c014:	mov    rcx,QWORD PTR [rbx+0x98]
   14000c01b:	call   QWORD PTR [rip+0x3d697]        # 0x1400496b8
   14000c021:	movzx  r11d,ax
   14000c025:	mov    eax,0xffff
   14000c02a:	cmp    r11w,ax
   14000c02e:	je     0x14000c1c5
   14000c034:	movzx  eax,r11w
   14000c038:	jmp    0x14000c1c5
   14000c03d:	mov    QWORD PTR [rbp+0x3f],0xf
   14000c045:	and    QWORD PTR [rbp+0x37],0x0
   14000c04a:	mov    BYTE PTR [rbp+0x27],0x0
   14000c04e:	mov    rcx,QWORD PTR [rbx+0x98]
   14000c055:	call   QWORD PTR [rip+0x3d5dd]        # 0x140049638
   14000c05b:	cmp    eax,0xffffffff
   14000c05e:	je     0x14000c1af
   14000c064:	mov    r8b,al
   14000c067:	mov    edx,0x1
   14000c06c:	lea    rcx,[rbp+0x27]
   14000c070:	call   0x1400047bc
   14000c075:	lea    r9,[rbp+0x27]
   14000c079:	cmp    QWORD PTR [rbp+0x3f],0x10
   14000c07e:	cmovae r9,QWORD PTR [rbp+0x27]
   14000c083:	lea    r8,[rbp+0x27]
   14000c087:	cmovae r8,QWORD PTR [rbp+0x27]
   14000c08c:	add    r9,QWORD PTR [rbp+0x37]
   14000c090:	lea    rax,[rbp+0x17]
   14000c094:	mov    QWORD PTR [rsp+0x38],rax
   14000c099:	lea    rax,[rbp+0x9]
   14000c09d:	mov    QWORD PTR [rsp+0x30],rax
   14000c0a2:	lea    rax,[rbp+0x7]
   14000c0a6:	mov    QWORD PTR [rsp+0x28],rax
   14000c0ab:	lea    rax,[rbp+0xf]
   14000c0af:	mov    QWORD PTR [rsp+0x20],rax
   14000c0b4:	lea    rdx,[rbx+0x8c]
   14000c0bb:	mov    rcx,QWORD PTR [rbx+0x80]
   14000c0c2:	call   QWORD PTR [rip+0x3d3a8]        # 0x140049470
   14000c0c8:	test   eax,eax
   14000c0ca:	js     0x14000c1ad
   14000c0d0:	cmp    eax,0x1
   14000c0d3:	jle    0x14000c0ea
   14000c0d5:	cmp    eax,0x3
   14000c0d8:	jne    0x14000c1ad
   14000c0de:	cmp    QWORD PTR [rbp+0x37],0x2
   14000c0e3:	jae    0x14000c119
   14000c0e5:	jmp    0x14000c04e
   14000c0ea:	lea    rax,[rbp+0x7]
   14000c0ee:	lea    rcx,[rbp+0x27]
   14000c0f2:	cmp    QWORD PTR [rbp+0x17],rax
   14000c0f6:	jne    0x14000c14a
   14000c0f8:	lea    rax,[rbp+0x27]
   14000c0fc:	cmp    QWORD PTR [rbp+0x3f],0x10
   14000c101:	cmovae rax,QWORD PTR [rbp+0x27]
   14000c106:	mov    r8,QWORD PTR [rbp+0xf]
   14000c10a:	sub    r8,rax
   14000c10d:	xor    edx,edx
   14000c10f:	call   0x140002dfc
   14000c114:	jmp    0x14000c04e
   14000c119:	lea    r8,[rbp+0x27]
   14000c11d:	cmp    QWORD PTR [rbp+0x3f],0x10
   14000c122:	cmovae r8,QWORD PTR [rbp+0x27]
   14000c127:	mov    edx,0x2
   14000c12c:	mov    r9d,edx
   14000c12f:	lea    rcx,[rbp+0x7]
   14000c133:	call   QWORD PTR [rip+0x3d547]        # 0x140049680
   14000c139:	movzx  ebx,WORD PTR [rbp+0x7]
   14000c13d:	cmp    QWORD PTR [rbp+0x3f],0x10
   14000c142:	jb     0x14000c1a8
   14000c144:	mov    rcx,QWORD PTR [rbp+0x27]
   14000c148:	jmp    0x14000c1a2
   14000c14a:	mov    rdx,QWORD PTR [rbp+0x27]
   14000c14e:	mov    r8,QWORD PTR [rbp+0x3f]
   14000c152:	cmp    r8,0x10
   14000c156:	cmovae rcx,rdx
   14000c15a:	mov    eax,DWORD PTR [rbp+0x37]
   14000c15d:	mov    r9,QWORD PTR [rbp+0xf]
   14000c161:	sub    eax,r9d
   14000c164:	add    eax,ecx
   14000c166:	movsxd rdi,eax
   14000c169:	test   eax,eax
   14000c16b:	jle    0x14000c195
   14000c16d:	dec    rdi
   14000c170:	movsx  ecx,BYTE PTR [rdi+r9*1]
   14000c175:	mov    rdx,QWORD PTR [rbx+0x98]
   14000c17c:	call   QWORD PTR [rip+0x3d48e]        # 0x140049610
   14000c182:	test   rdi,rdi
   14000c185:	jle    0x14000c18d
   14000c187:	mov    r9,QWORD PTR [rbp+0xf]
   14000c18b:	jmp    0x14000c16d
   14000c18d:	mov    r8,QWORD PTR [rbp+0x3f]
   14000c191:	mov    rdx,QWORD PTR [rbp+0x27]
   14000c195:	movzx  ebx,WORD PTR [rbp+0x7]
   14000c199:	cmp    r8,0x10
   14000c19d:	jb     0x14000c1a8
   14000c19f:	mov    rcx,rdx
   14000c1a2:	call   QWORD PTR [rip+0x3d4d0]        # 0x140049678
   14000c1a8:	movzx  eax,bx
   14000c1ab:	jmp    0x14000c1c5
   14000c1ad:	jmp    0x14000c1af
   14000c1af:	cmp    QWORD PTR [rbp+0x3f],0x10
   14000c1b4:	jb     0x14000c1c0
   14000c1b6:	mov    rcx,QWORD PTR [rbp+0x27]
   14000c1ba:	call   QWORD PTR [rip+0x3d4b8]        # 0x140049678
   14000c1c0:	mov    eax,0xffff
   14000c1c5:	mov    rcx,QWORD PTR [rbp+0x4f]
   14000c1c9:	xor    rcx,rsp
   14000c1cc:	call   0x14002b100
   14000c1d1:	lea    r11,[rsp+0x90]
   14000c1d9:	mov    rbx,QWORD PTR [r11+0x18]
   14000c1dd:	mov    rdi,QWORD PTR [r11+0x20]
   14000c1e1:	mov    rsp,r11
   14000c1e4:	pop    rbp
   14000c1e5:	ret    
   14000c1e6:	int3   
   14000c1e7:	int3   
   14000c1e8:	mov    QWORD PTR [rsp+0x10],rbx
   14000c1ed:	mov    QWORD PTR [rsp+0x18],rbp
   14000c1f2:	push   rsi
   14000c1f3:	push   rdi
   14000c1f4:	push   r12
   14000c1f6:	sub    rsp,0x20
   14000c1fa:	mov    rax,QWORD PTR [rcx+0x40]
   14000c1fe:	lea    r12,[rcx+0x88]
   14000c205:	mov    ebp,r9d
   14000c208:	mov    rsi,r8
   14000c20b:	mov    rbx,rdx
   14000c20e:	mov    rdi,rcx
   14000c211:	cmp    QWORD PTR [rax],r12
   14000c214:	jne    0x14000c22a
   14000c216:	cmp    r9d,0x1
   14000c21a:	jne    0x14000c22a
   14000c21c:	cmp    QWORD PTR [rcx+0x80],0x0
   14000c224:	jne    0x14000c22a
   14000c226:	sub    rsi,0x2
   14000c22a:	cmp    QWORD PTR [rcx+0x98],0x0
   14000c232:	je     0x14000c2b3
   14000c234:	call   0x14000ccf8
   14000c239:	test   al,al
   14000c23b:	je     0x14000c2b3
   14000c23d:	test   rsi,rsi
   14000c240:	jne    0x14000c247
   14000c242:	cmp    ebp,0x1
   14000c245:	je     0x14000c25e
   14000c247:	mov    rcx,QWORD PTR [rdi+0x98]
   14000c24e:	mov    r8d,ebp
   14000c251:	mov    rdx,rsi
   14000c254:	call   QWORD PTR [rip+0x3d3c6]        # 0x140049620
   14000c25a:	test   eax,eax
   14000c25c:	jne    0x14000c2b3
   14000c25e:	mov    rcx,QWORD PTR [rdi+0x98]
   14000c265:	lea    rdx,[rsp+0x40]
   14000c26a:	call   QWORD PTR [rip+0x3d3a8]        # 0x140049618
   14000c270:	test   eax,eax
   14000c272:	jne    0x14000c2b3
   14000c274:	mov    rdx,QWORD PTR [rdi+0x20]
   14000c278:	cmp    QWORD PTR [rdx],r12
   14000c27b:	jne    0x14000c29b
   14000c27d:	mov    rax,QWORD PTR [rdi+0x70]
   14000c281:	mov    rcx,QWORD PTR [rdi+0x78]
   14000c285:	mov    QWORD PTR [rdx],rax
   14000c288:	mov    rax,QWORD PTR [rdi+0x40]
   14000c28c:	mov    QWORD PTR [rax],rcx
   14000c28f:	mov    rax,QWORD PTR [rdi+0x58]
   14000c293:	sub    rcx,rcx
   14000c296:	sar    rcx,1
   14000c299:	mov    DWORD PTR [rax],ecx
   14000c29b:	mov    rax,QWORD PTR [rsp+0x40]
   14000c2a0:	and    QWORD PTR [rbx],0x0
   14000c2a4:	mov    QWORD PTR [rbx+0x8],rax
   14000c2a8:	mov    eax,DWORD PTR [rdi+0x8c]
   14000c2ae:	mov    DWORD PTR [rbx+0x10],eax
   14000c2b1:	jmp    0x14000c2c9
   14000c2b3:	mov    rax,QWORD PTR [rip+0x3d2fe]        # 0x1400495b8
   14000c2ba:	and    QWORD PTR [rbx+0x8],0x0
   14000c2bf:	and    DWORD PTR [rbx+0x10],0x0
   14000c2c3:	mov    rcx,QWORD PTR [rax]
   14000c2c6:	mov    QWORD PTR [rbx],rcx
   14000c2c9:	mov    rbp,QWORD PTR [rsp+0x50]
   14000c2ce:	mov    rax,rbx
   14000c2d1:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c2d6:	add    rsp,0x20
   14000c2da:	pop    r12
   14000c2dc:	pop    rdi
   14000c2dd:	pop    rsi
   14000c2de:	ret    
   14000c2df:	int3   
   14000c2e0:	mov    r11,rsp
   14000c2e3:	mov    QWORD PTR [r11+0x10],rbx
   14000c2e7:	mov    QWORD PTR [r11+0x18],rbp
   14000c2eb:	mov    QWORD PTR [r11+0x20],rsi
   14000c2ef:	push   rdi
   14000c2f0:	sub    rsp,0x20
   14000c2f4:	mov    rax,QWORD PTR [r8+0x8]
   14000c2f8:	mov    rbp,r8
   14000c2fb:	mov    rbx,rdx
   14000c2fe:	movsxd r9,eax
   14000c301:	movsxd rsi,eax
   14000c304:	mov    rdi,rcx
   14000c307:	sub    rsi,r9
   14000c30a:	mov    QWORD PTR [r11+0x8],rax
   14000c30e:	add    rsi,QWORD PTR [r8]
   14000c311:	cmp    QWORD PTR [rcx+0x98],0x0
   14000c319:	je     0x14000c3c8
   14000c31f:	call   0x14000ccf8
   14000c324:	test   al,al
   14000c326:	je     0x14000c3c8
   14000c32c:	mov    rcx,QWORD PTR [rdi+0x98]
   14000c333:	lea    rdx,[rsp+0x30]
   14000c338:	call   QWORD PTR [rip+0x3d30a]        # 0x140049648
   14000c33e:	test   eax,eax
   14000c340:	jne    0x14000c3c8
   14000c346:	test   rsi,rsi
   14000c349:	je     0x14000c363
   14000c34b:	mov    rcx,QWORD PTR [rdi+0x98]
   14000c352:	lea    r8d,[rax+0x1]
   14000c356:	mov    rdx,rsi
   14000c359:	call   QWORD PTR [rip+0x3d2c1]        # 0x140049620
   14000c35f:	test   eax,eax
   14000c361:	jne    0x14000c3c8
   14000c363:	mov    rcx,QWORD PTR [rdi+0x98]
   14000c36a:	lea    rdx,[rsp+0x30]
   14000c36f:	call   QWORD PTR [rip+0x3d2a3]        # 0x140049618
   14000c375:	test   eax,eax
   14000c377:	jne    0x14000c3c8
   14000c379:	mov    eax,DWORD PTR [rbp+0x10]
   14000c37c:	mov    rdx,QWORD PTR [rdi+0x20]
   14000c380:	mov    DWORD PTR [rdi+0x8c],eax
   14000c386:	lea    rax,[rdi+0x88]
   14000c38d:	cmp    QWORD PTR [rdx],rax
   14000c390:	jne    0x14000c3b0
   14000c392:	mov    rax,QWORD PTR [rdi+0x70]
   14000c396:	mov    rcx,QWORD PTR [rdi+0x78]
   14000c39a:	mov    QWORD PTR [rdx],rax
   14000c39d:	mov    rax,QWORD PTR [rdi+0x40]
   14000c3a1:	mov    QWORD PTR [rax],rcx
   14000c3a4:	mov    rax,QWORD PTR [rdi+0x58]
   14000c3a8:	sub    rcx,rcx
   14000c3ab:	sar    rcx,1
   14000c3ae:	mov    DWORD PTR [rax],ecx
   14000c3b0:	mov    rax,QWORD PTR [rsp+0x30]
   14000c3b5:	and    QWORD PTR [rbx],0x0
   14000c3b9:	mov    QWORD PTR [rbx+0x8],rax
   14000c3bd:	mov    eax,DWORD PTR [rdi+0x8c]
   14000c3c3:	mov    DWORD PTR [rbx+0x10],eax
   14000c3c6:	jmp    0x14000c3de
   14000c3c8:	mov    rax,QWORD PTR [rip+0x3d1e9]        # 0x1400495b8
   14000c3cf:	and    QWORD PTR [rbx+0x8],0x0
   14000c3d4:	and    DWORD PTR [rbx+0x10],0x0
   14000c3d8:	mov    rcx,QWORD PTR [rax]
   14000c3db:	mov    QWORD PTR [rbx],rcx
   14000c3de:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c3e3:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c3e8:	mov    rax,rbx
   14000c3eb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c3f0:	add    rsp,0x20
   14000c3f4:	pop    rdi
   14000c3f5:	ret    
   14000c3f6:	int3   
   14000c3f7:	int3   
   14000c3f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c3fd:	push   rdi
   14000c3fe:	sub    rsp,0x20
   14000c402:	mov    rdi,rcx
   14000c405:	mov    rcx,QWORD PTR [rcx+0x98]
   14000c40c:	mov    r9,r8
   14000c40f:	test   rcx,rcx
   14000c412:	je     0x14000c471
   14000c414:	test   rdx,rdx
   14000c417:	jne    0x14000c424
   14000c419:	test   r8,r8
   14000c41c:	jne    0x14000c424
   14000c41e:	lea    r8d,[r9+0x4]
   14000c422:	jmp    0x14000c427
   14000c424:	xor    r8d,r8d
   14000c427:	add    r9,r9
   14000c42a:	call   QWORD PTR [rip+0x3d220]        # 0x140049650
   14000c430:	test   eax,eax
   14000c432:	jne    0x14000c471
   14000c434:	mov    rbx,QWORD PTR [rdi+0x98]
   14000c43b:	mov    rcx,rdi
   14000c43e:	mov    BYTE PTR [rdi+0x90],0x1
   14000c445:	mov    BYTE PTR [rdi+0x8a],al
   14000c44b:	call   QWORD PTR [rip+0x3cf27]        # 0x140049378
   14000c451:	mov    eax,DWORD PTR [rip+0x5e429]        # 0x14006a880
   14000c457:	and    QWORD PTR [rdi+0x80],0x0
   14000c45f:	mov    DWORD PTR [rdi+0x8c],eax
   14000c465:	mov    QWORD PTR [rdi+0x98],rbx
   14000c46c:	mov    rax,rdi
   14000c46f:	jmp    0x14000c473
   14000c471:	xor    eax,eax
   14000c473:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c478:	add    rsp,0x20
   14000c47c:	pop    rdi
   14000c47d:	ret    
   14000c47e:	int3   
   14000c47f:	int3   
   14000c480:	mov    QWORD PTR [rsp+0x8],rbx
   14000c485:	mov    QWORD PTR [rsp+0x10],rsi
   14000c48a:	push   rdi
   14000c48b:	sub    rsp,0x20
   14000c48f:	xor    ebx,ebx
   14000c491:	mov    rdi,rcx
   14000c494:	cmp    QWORD PTR [rcx+0x98],rbx
   14000c49b:	je     0x14000c4c3
   14000c49d:	mov    rax,QWORD PTR [rcx]
   14000c4a0:	mov    esi,0xffff
   14000c4a5:	mov    edx,esi
   14000c4a7:	call   QWORD PTR [rax+0x18]
   14000c4aa:	cmp    si,ax
   14000c4ad:	je     0x14000c4c3
   14000c4af:	mov    rcx,QWORD PTR [rdi+0x98]
   14000c4b6:	call   QWORD PTR [rip+0x3d174]        # 0x140049630
   14000c4bc:	test   eax,eax
   14000c4be:	jns    0x14000c4c3
   14000c4c0:	or     ebx,0xffffffff
   14000c4c3:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c4c8:	mov    eax,ebx
   14000c4ca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c4cf:	add    rsp,0x20
   14000c4d3:	pop    rdi
   14000c4d4:	ret    
   14000c4d5:	int3   
   14000c4d6:	int3   
   14000c4d7:	int3   
   14000c4d8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4dd:	push   rdi
   14000c4de:	sub    rsp,0x20
   14000c4e2:	mov    rbx,rcx
   14000c4e5:	mov    rcx,rdx
   14000c4e8:	call   0x14000d3f0
   14000c4ed:	mov    rcx,rax
   14000c4f0:	mov    rdi,rax
   14000c4f3:	call   QWORD PTR [rip+0x3ce3f]        # 0x140049338
   14000c4f9:	test   al,al
   14000c4fb:	je     0x14000c507
   14000c4fd:	and    QWORD PTR [rbx+0x80],0x0
   14000c505:	jmp    0x14000c517
   14000c507:	mov    rcx,rbx
   14000c50a:	mov    QWORD PTR [rbx+0x80],rdi
   14000c511:	call   QWORD PTR [rip+0x3ce61]        # 0x140049378
   14000c517:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c51c:	add    rsp,0x20
   14000c520:	pop    rdi
   14000c521:	ret    
   14000c522:	int3   
   14000c523:	int3   
   14000c524:	rex push rdi
   14000c526:	sub    rsp,0x30
   14000c52a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c533:	mov    QWORD PTR [rsp+0x50],rbx
   14000c538:	mov    rdi,rdx
   14000c53b:	mov    rbx,rcx
   14000c53e:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c542:	cmp    rdx,rcx
   14000c545:	jae    0x14000c5b9
   14000c547:	cmp    QWORD PTR [rbx],rdx
   14000c54a:	ja     0x14000c5b9
   14000c54c:	sub    rdi,QWORD PTR [rbx]
   14000c54f:	movabs rax,0x6666666666666667
   14000c559:	imul   rdi
   14000c55c:	mov    rdi,rdx
   14000c55f:	sar    rdi,0x4
   14000c563:	mov    rax,rdi
   14000c566:	shr    rax,0x3f
   14000c56a:	add    rdi,rax
   14000c56d:	cmp    rcx,QWORD PTR [rbx+0x10]
   14000c571:	jne    0x14000c57b
   14000c573:	mov    rcx,rbx
   14000c576:	call   0x14000ced0
   14000c57b:	lea    rcx,[rdi+rdi*4]
   14000c57f:	mov    rax,QWORD PTR [rbx]
   14000c582:	lea    rdx,[rax+rcx*8]
   14000c586:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c58a:	mov    QWORD PTR [rsp+0x40],rcx
   14000c58f:	mov    QWORD PTR [rsp+0x48],rcx
   14000c594:	xor    eax,eax
   14000c596:	test   rcx,rcx
   14000c599:	je     0x14000c5b7
   14000c59b:	mov    QWORD PTR [rcx+0x18],0x7
   14000c5a3:	mov    QWORD PTR [rcx+0x10],rax
   14000c5a7:	mov    WORD PTR [rcx],ax
   14000c5aa:	or     r9,0xffffffffffffffff
   14000c5ae:	xor    r8d,r8d
   14000c5b1:	call   0x140009914
   14000c5b6:	nop
   14000c5b7:	jmp    0x14000c5fb
   14000c5b9:	cmp    rcx,QWORD PTR [rbx+0x10]
   14000c5bd:	jne    0x14000c5c7
   14000c5bf:	mov    rcx,rbx
   14000c5c2:	call   0x14000ced0
   14000c5c7:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c5cb:	mov    QWORD PTR [rsp+0x40],rcx
   14000c5d0:	mov    QWORD PTR [rsp+0x48],rcx
   14000c5d5:	xor    eax,eax
   14000c5d7:	test   rcx,rcx
   14000c5da:	je     0x14000c5fb
   14000c5dc:	mov    QWORD PTR [rcx+0x18],0x7
   14000c5e4:	mov    QWORD PTR [rcx+0x10],rax
   14000c5e8:	mov    WORD PTR [rcx],ax
   14000c5eb:	or     r9,0xffffffffffffffff
   14000c5ef:	xor    r8d,r8d
   14000c5f2:	mov    rdx,rdi
   14000c5f5:	call   0x140009914
   14000c5fa:	nop
   14000c5fb:	add    QWORD PTR [rbx+0x8],0x28
   14000c600:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c605:	add    rsp,0x30
   14000c609:	pop    rdi
   14000c60a:	ret    
   14000c60b:	int3   
   14000c60c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c611:	push   rdi
   14000c612:	sub    rsp,0x20
   14000c616:	mov    ebx,edx
   14000c618:	mov    rdi,rcx
   14000c61b:	call   0x14000b404
   14000c620:	test   bl,0x1
   14000c623:	je     0x14000c62e
   14000c625:	mov    rcx,rdi
   14000c628:	call   QWORD PTR [rip+0x3d04a]        # 0x140049678
   14000c62e:	mov    rax,rdi
   14000c631:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c636:	add    rsp,0x20
   14000c63a:	pop    rdi
   14000c63b:	ret    
   14000c63c:	mov    rax,rsp
   14000c63f:	push   rdi
   14000c640:	sub    rsp,0x30
   14000c644:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c64d:	mov    QWORD PTR [rax+0x10],rbx
   14000c651:	mov    QWORD PTR [rax+0x18],rbp
   14000c655:	mov    QWORD PTR [rax+0x20],rsi
   14000c659:	mov    esi,edx
   14000c65b:	lea    rbp,[rcx-0xb0]
   14000c662:	lea    rdi,[rbp+0xb0]
   14000c669:	mov    QWORD PTR [rax+0x8],rdi
   14000c66d:	mov    rax,QWORD PTR [rdi-0xb0]
   14000c674:	movsxd r8,DWORD PTR [rax+0x4]
   14000c678:	lea    rax,[rip+0x445d9]        # 0x140050c58
   14000c67f:	mov    QWORD PTR [r8+rdi*1-0xb0],rax
   14000c687:	lea    rcx,[rdi-0xa0]
   14000c68e:	call   0x14000bac8
   14000c693:	nop
   14000c694:	mov    rdx,QWORD PTR [rdi-0xb0]
   14000c69b:	movsxd r8,DWORD PTR [rdx+0x4]
   14000c69f:	mov    rdx,QWORD PTR [rip+0x3ccca]        # 0x140049370
   14000c6a6:	mov    QWORD PTR [r8+rdi*1-0xb0],rdx
   14000c6ae:	mov    rcx,rdi
   14000c6b1:	call   QWORD PTR [rip+0x3cd49]        # 0x140049400
   14000c6b7:	test   sil,0x1
   14000c6bb:	je     0x14000c6c6
   14000c6bd:	mov    rcx,rbp
   14000c6c0:	call   QWORD PTR [rip+0x3cfb2]        # 0x140049678
   14000c6c6:	mov    rax,rbp
   14000c6c9:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c6ce:	mov    rbp,QWORD PTR [rsp+0x50]
   14000c6d3:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c6d8:	add    rsp,0x30
   14000c6dc:	pop    rdi
   14000c6dd:	ret    
   14000c6de:	int3   
   14000c6df:	int3   
   14000c6e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6e5:	push   rdi
   14000c6e6:	sub    rsp,0x20
   14000c6ea:	mov    ebx,edx
   14000c6ec:	mov    rdi,rcx
   14000c6ef:	call   0x14000bac8
   14000c6f4:	test   bl,0x1
   14000c6f7:	je     0x14000c702
   14000c6f9:	mov    rcx,rdi
   14000c6fc:	call   QWORD PTR [rip+0x3cf76]        # 0x140049678
   14000c702:	mov    rax,rdi
   14000c705:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c70a:	add    rsp,0x20
   14000c70e:	pop    rdi
   14000c70f:	ret    
   14000c710:	mov    rax,rsp
   14000c713:	push   rdi
   14000c714:	sub    rsp,0x30
   14000c718:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c721:	mov    QWORD PTR [rax+0x10],rbx
   14000c725:	mov    QWORD PTR [rax+0x18],rbp
   14000c729:	mov    QWORD PTR [rax+0x20],rsi
   14000c72d:	mov    esi,edx
   14000c72f:	lea    rbp,[rcx-0xa8]
   14000c736:	lea    rdi,[rbp+0xa8]
   14000c73d:	mov    QWORD PTR [rax+0x8],rdi
   14000c741:	mov    rax,QWORD PTR [rdi-0xa8]
   14000c748:	movsxd r8,DWORD PTR [rax+0x4]
   14000c74c:	lea    rax,[rip+0x44515]        # 0x140050c68
   14000c753:	mov    QWORD PTR [r8+rdi*1-0xa8],rax
   14000c75b:	lea    rcx,[rdi-0xa0]
   14000c762:	call   0x14000bac8
   14000c767:	nop
   14000c768:	mov    rdx,QWORD PTR [rdi-0xa8]
   14000c76f:	movsxd r8,DWORD PTR [rdx+0x4]
   14000c773:	mov    rdx,QWORD PTR [rip+0x3cbee]        # 0x140049368
   14000c77a:	mov    QWORD PTR [r8+rdi*1-0xa8],rdx
   14000c782:	mov    rcx,rdi
   14000c785:	call   QWORD PTR [rip+0x3cc75]        # 0x140049400
   14000c78b:	test   sil,0x1
   14000c78f:	je     0x14000c79a
   14000c791:	mov    rcx,rbp
   14000c794:	call   QWORD PTR [rip+0x3cede]        # 0x140049678
   14000c79a:	mov    rax,rbp
   14000c79d:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c7a2:	mov    rbp,QWORD PTR [rsp+0x50]
   14000c7a7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c7ac:	add    rsp,0x30
   14000c7b0:	pop    rdi
   14000c7b1:	ret    
   14000c7b2:	int3   
   14000c7b3:	int3   
   14000c7b4:	mov    QWORD PTR [rsp+0x10],rdx
   14000c7b9:	push   rsi
   14000c7ba:	push   rdi
   14000c7bb:	push   r12
   14000c7bd:	push   r13
   14000c7bf:	push   r14
   14000c7c1:	sub    rsp,0x40
   14000c7c5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c7ce:	mov    QWORD PTR [rsp+0x70],rbx
   14000c7d3:	mov    r14,r8
   14000c7d6:	mov    rsi,rcx
   14000c7d9:	mov    edi,0x1
   14000c7de:	mov    r12,QWORD PTR [rcx+0x8]
   14000c7e2:	mov    rcx,r12
   14000c7e5:	sub    rcx,QWORD PTR [rsi]
   14000c7e8:	sar    rcx,1
   14000c7eb:	movabs r9,0x7fffffffffffffff
   14000c7f5:	mov    rax,r9
   14000c7f8:	sub    rax,rcx
   14000c7fb:	cmp    rax,rdi
   14000c7fe:	jae    0x14000c80e
   14000c800:	lea    rcx,[rip+0x44151]        # 0x140050958
   14000c807:	call   QWORD PTR [rip+0x3cd8b]        # 0x140049598
   14000c80d:	int3   
   14000c80e:	lea    r8,[rcx+0x1]
   14000c812:	mov    rbx,QWORD PTR [rsi+0x10]
   14000c816:	sub    rbx,QWORD PTR [rsi]
   14000c819:	sar    rbx,1
   14000c81c:	cmp    rbx,r8
   14000c81f:	jae    0x14000c942
   14000c825:	mov    rcx,rbx
   14000c828:	shr    rcx,1
   14000c82b:	mov    rax,r9
   14000c82e:	sub    rax,rcx
   14000c831:	cmp    rax,rbx
   14000c834:	jae    0x14000c83a
   14000c836:	xor    ebx,ebx
   14000c838:	jmp    0x14000c83d
   14000c83a:	add    rbx,rcx
   14000c83d:	cmp    rbx,r8
   14000c840:	cmovb  rbx,r8
   14000c844:	xor    r12d,r12d
   14000c847:	test   rbx,rbx
   14000c84a:	je     0x14000c8a4
   14000c84c:	cmp    rbx,r9
   14000c84f:	ja     0x14000c86a
   14000c851:	lea    rcx,[rbx+rbx*1]
   14000c855:	call   QWORD PTR [rip+0x3ce3d]        # 0x140049698
   14000c85b:	mov    r12,rax
   14000c85e:	test   rax,rax
   14000c861:	je     0x14000c86a
   14000c863:	mov    rdx,QWORD PTR [rsp+0x78]
   14000c868:	jmp    0x14000c8a4
   14000c86a:	and    QWORD PTR [rsp+0x88],0x0
   14000c873:	lea    rdx,[rsp+0x88]
   14000c87b:	lea    rcx,[rsp+0x28]
   14000c880:	call   QWORD PTR [rip+0x3d04a]        # 0x1400498d0
   14000c886:	lea    r11,[rip+0x3d94b]        # 0x14004a1d8
   14000c88d:	mov    QWORD PTR [rsp+0x28],r11
   14000c892:	lea    rdx,[rip+0x56eaf]        # 0x140063748
   14000c899:	lea    rcx,[rsp+0x28]
   14000c89e:	call   0x14002b560
   14000c8a3:	int3   
   14000c8a4:	mov    QWORD PTR [rsp+0x88],r12
   14000c8ac:	mov    r13,rdx
   14000c8af:	sub    r13,QWORD PTR [rsi]
   14000c8b2:	sar    r13,1
   14000c8b5:	lea    r8,[r12+r13*2]
   14000c8b9:	mov    rcx,rdi
   14000c8bc:	test   rcx,rcx
   14000c8bf:	je     0x14000c8d7
   14000c8c1:	movzx  eax,WORD PTR [r14]
   14000c8c5:	mov    WORD PTR [r8],ax
   14000c8c9:	sub    rcx,rdi
   14000c8cc:	add    r8,0x2
   14000c8d0:	mov    rdx,QWORD PTR [rsp+0x78]
   14000c8d5:	jmp    0x14000c8bc
   14000c8d7:	sub    rdx,QWORD PTR [rsi]
   14000c8da:	sar    rdx,1
   14000c8dd:	lea    r8,[rdx+rdx*1]
   14000c8e1:	mov    rdx,QWORD PTR [rsi]
   14000c8e4:	mov    rcx,r12
   14000c8e7:	call   QWORD PTR [rip+0x3cd03]        # 0x1400495f0
   14000c8ed:	mov    r8,QWORD PTR [rsi+0x8]
   14000c8f1:	mov    rdx,QWORD PTR [rsp+0x78]
   14000c8f6:	sub    r8,rdx
   14000c8f9:	sar    r8,1
   14000c8fc:	add    r8,r8
   14000c8ff:	lea    rax,[r13+rdi*1+0x0]
   14000c904:	lea    rcx,[r12+rax*2]
   14000c908:	call   QWORD PTR [rip+0x3cce2]        # 0x1400495f0
   14000c90e:	nop
   14000c90f:	mov    rcx,QWORD PTR [rsi]
   14000c912:	mov    rax,QWORD PTR [rsi+0x8]
   14000c916:	sub    rax,rcx
   14000c919:	sar    rax,1
   14000c91c:	add    rdi,rax
   14000c91f:	test   rcx,rcx
   14000c922:	je     0x14000c92a
   14000c924:	call   QWORD PTR [rip+0x3cd4e]        # 0x140049678
   14000c92a:	lea    rax,[r12+rbx*2]
   14000c92e:	mov    QWORD PTR [rsi+0x10],rax
   14000c932:	lea    rax,[r12+rdi*2]
   14000c936:	mov    QWORD PTR [rsi+0x8],rax
   14000c93a:	mov    QWORD PTR [rsi],r12
   14000c93d:	jmp    0x14000ca1f
   14000c942:	mov    rax,r12
   14000c945:	sub    rax,rdx
   14000c948:	sar    rax,1
   14000c94b:	cmp    rax,rdi
   14000c94e:	jae    0x14000c9b7
   14000c950:	movzx  ebx,WORD PTR [r14]
   14000c954:	sub    r12,rdx
   14000c957:	sar    r12,1
   14000c95a:	lea    r8,[r12+r12*1]
   14000c95e:	lea    rcx,[rdx+0x2]
   14000c962:	call   QWORD PTR [rip+0x3cc88]        # 0x1400495f0
   14000c968:	nop
   14000c969:	mov    r8,QWORD PTR [rsi+0x8]
   14000c96d:	mov    rax,r8
   14000c970:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c975:	sub    rax,rcx
   14000c978:	sar    rax,1
   14000c97b:	mov    rdx,rdi
   14000c97e:	sub    rdx,rax
   14000c981:	test   rdx,rdx
   14000c984:	je     0x14000c998
   14000c986:	mov    WORD PTR [r8],bx
   14000c98a:	sub    rdx,rdi
   14000c98d:	add    r8,0x2
   14000c991:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c996:	jmp    0x14000c981
   14000c998:	lea    rax,[rdi+rdi*1]
   14000c99c:	add    QWORD PTR [rsi+0x8],rax
   14000c9a0:	mov    rdx,QWORD PTR [rsi+0x8]
   14000c9a4:	sub    rdx,rax
   14000c9a7:	jmp    0x14000c9b0
   14000c9a9:	mov    WORD PTR [rcx],bx
   14000c9ac:	add    rcx,0x2
   14000c9b0:	cmp    rcx,rdx
   14000c9b3:	jne    0x14000c9a9
   14000c9b5:	jmp    0x14000ca1f
   14000c9b7:	movzx  r13d,WORD PTR [r14]
   14000c9bb:	lea    rdi,[r12-0x2]
   14000c9c0:	mov    rax,r12
   14000c9c3:	sub    rax,rdi
   14000c9c6:	sar    rax,1
   14000c9c9:	lea    rbx,[rax+rax*1]
   14000c9cd:	mov    r8,rbx
   14000c9d0:	mov    rdx,rdi
   14000c9d3:	mov    rcx,r12
   14000c9d6:	call   QWORD PTR [rip+0x3cc14]        # 0x1400495f0
   14000c9dc:	add    rax,rbx
   14000c9df:	mov    QWORD PTR [rsi+0x8],rax
   14000c9e3:	mov    rdx,QWORD PTR [rsp+0x78]
   14000c9e8:	sub    rdi,rdx
   14000c9eb:	sar    rdi,1
   14000c9ee:	lea    r8,[rdi+rdi*1]
   14000c9f2:	sub    r12,r8
   14000c9f5:	mov    rcx,r12
   14000c9f8:	call   QWORD PTR [rip+0x3cbf2]        # 0x1400495f0
   14000c9fe:	mov    r11,QWORD PTR [rsp+0x78]
   14000ca03:	lea    rax,[r11+0x2]
   14000ca07:	jmp    0x14000ca1a
   14000ca09:	mov    WORD PTR [r11],r13w
   14000ca0d:	add    r11,0x2
   14000ca11:	mov    rax,QWORD PTR [rsp+0x78]
   14000ca16:	add    rax,0x2
   14000ca1a:	cmp    r11,rax
   14000ca1d:	jne    0x14000ca09
   14000ca1f:	mov    rbx,QWORD PTR [rsp+0x70]
   14000ca24:	add    rsp,0x40
   14000ca28:	pop    r14
   14000ca2a:	pop    r13
   14000ca2c:	pop    r12
   14000ca2e:	pop    rdi
   14000ca2f:	pop    rsi
   14000ca30:	ret    
   14000ca31:	int3   
   14000ca32:	int3   
   14000ca33:	int3   
   14000ca34:	mov    rax,rsp
   14000ca37:	push   rbp
   14000ca38:	push   rsi
   14000ca39:	push   rdi
   14000ca3a:	mov    rbp,rsp
   14000ca3d:	sub    rsp,0x60
   14000ca41:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000ca49:	mov    QWORD PTR [rax+0x18],rbx
   14000ca4d:	mov    rax,QWORD PTR [rip+0x5b79c]        # 0x1400681f0
   14000ca54:	xor    rax,rsp
   14000ca57:	mov    QWORD PTR [rbp-0x8],rax
   14000ca5b:	mov    rbx,rdx
   14000ca5e:	mov    rdx,rcx
   14000ca61:	xor    esi,esi
   14000ca63:	mov    DWORD PTR [rbp-0x40],esi
   14000ca66:	test   BYTE PTR [rcx+0x78],0x2
   14000ca6a:	jne    0x14000cac3
   14000ca6c:	mov    rax,QWORD PTR [rcx+0x48]
   14000ca70:	cmp    QWORD PTR [rax],rsi
   14000ca73:	je     0x14000cac3
   14000ca75:	mov    r8,QWORD PTR [rcx+0x70]
   14000ca79:	cmp    r8,QWORD PTR [rax]
   14000ca7c:	cmovb  r8,QWORD PTR [rax]
   14000ca80:	mov    rax,QWORD PTR [rcx+0x28]
   14000ca84:	mov    rdx,QWORD PTR [rax]
   14000ca87:	lea    edi,[rsi+0x7]
   14000ca8a:	mov    QWORD PTR [rbp-0x18],rdi
   14000ca8e:	mov    QWORD PTR [rbp-0x20],rsi
   14000ca92:	mov    WORD PTR [rbp-0x30],si
   14000ca96:	sub    r8,rdx
   14000ca99:	sar    r8,1
   14000ca9c:	lea    rcx,[rbp-0x30]
   14000caa0:	call   0x1400096cc
   14000caa5:	nop
   14000caa6:	mov    QWORD PTR [rbx+0x18],rdi
   14000caaa:	mov    QWORD PTR [rbx+0x10],rsi
   14000caae:	mov    WORD PTR [rbx],si
   14000cab1:	lea    rdx,[rbp-0x30]
   14000cab5:	mov    rcx,rbx
   14000cab8:	call   0x140009880
   14000cabd:	nop
   14000cabe:	jmp    0x14000cb4b
   14000cac3:	test   BYTE PTR [rcx+0x78],0x4
   14000cac7:	jne    0x14000cb22
   14000cac9:	mov    r8,QWORD PTR [rcx+0x40]
   14000cacd:	cmp    QWORD PTR [r8],rsi
   14000cad0:	je     0x14000cb22
   14000cad2:	mov    rax,QWORD PTR [rcx+0x58]
   14000cad6:	movsxd rcx,DWORD PTR [rax]
   14000cad9:	mov    rax,QWORD PTR [r8]
   14000cadc:	lea    r8,[rax+rcx*2]
   14000cae0:	mov    rax,QWORD PTR [rdx+0x20]
   14000cae4:	mov    rdx,QWORD PTR [rax]
   14000cae7:	mov    edi,0x7
   14000caec:	mov    QWORD PTR [rbp-0x18],rdi
   14000caf0:	mov    QWORD PTR [rbp-0x20],rsi
   14000caf4:	mov    WORD PTR [rbp-0x30],si
   14000caf8:	sub    r8,rdx
   14000cafb:	sar    r8,1
   14000cafe:	lea    rcx,[rbp-0x30]
   14000cb02:	call   0x1400096cc
   14000cb07:	nop
   14000cb08:	mov    QWORD PTR [rbx+0x18],rdi
   14000cb0c:	mov    QWORD PTR [rbx+0x10],rsi
   14000cb10:	mov    WORD PTR [rbx],si
   14000cb13:	lea    rdx,[rbp-0x30]
   14000cb17:	mov    rcx,rbx
   14000cb1a:	call   0x140009880
   14000cb1f:	nop
   14000cb20:	jmp    0x14000cb4b
   14000cb22:	mov    edi,0x7
   14000cb27:	mov    QWORD PTR [rbp-0x18],rdi
   14000cb2b:	mov    QWORD PTR [rbp-0x20],rsi
   14000cb2f:	mov    WORD PTR [rbp-0x30],si
   14000cb33:	mov    QWORD PTR [rbx+0x18],rdi
   14000cb37:	mov    QWORD PTR [rbx+0x10],rsi
   14000cb3b:	mov    WORD PTR [rbx],si
   14000cb3e:	lea    rdx,[rbp-0x30]
   14000cb42:	mov    rcx,rbx
   14000cb45:	call   0x140009880
   14000cb4a:	nop
   14000cb4b:	cmp    QWORD PTR [rbp-0x18],0x8
   14000cb50:	jb     0x14000cb5c
   14000cb52:	mov    rcx,QWORD PTR [rbp-0x30]
   14000cb56:	call   QWORD PTR [rip+0x3cb1c]        # 0x140049678
   14000cb5c:	mov    rax,rbx
   14000cb5f:	mov    rcx,QWORD PTR [rbp-0x8]
   14000cb63:	xor    rcx,rsp
   14000cb66:	call   0x14002b100
   14000cb6b:	mov    rbx,QWORD PTR [rsp+0x90]
   14000cb73:	add    rsp,0x60
   14000cb77:	pop    rdi
   14000cb78:	pop    rsi
   14000cb79:	pop    rbp
   14000cb7a:	ret    
   14000cb7b:	int3   
   14000cb7c:	rex push rdi
   14000cb7e:	sub    rsp,0x30
   14000cb82:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cb8b:	mov    QWORD PTR [rsp+0x48],rbx
   14000cb90:	mov    eax,r8d
   14000cb93:	mov    r9,rdx
   14000cb96:	mov    rbx,rcx
   14000cb99:	cmp    QWORD PTR [rcx+0x98],0x0
   14000cba1:	jne    0x14000cc60
   14000cba7:	mov    r8d,0x40
   14000cbad:	mov    edx,eax
   14000cbaf:	mov    rcx,r9
   14000cbb2:	call   QWORD PTR [rip+0x3c670]        # 0x140049228
   14000cbb8:	mov    rdi,rax
   14000cbbb:	test   rax,rax
   14000cbbe:	je     0x14000cc60
   14000cbc4:	mov    BYTE PTR [rbx+0x90],0x1
   14000cbcb:	mov    BYTE PTR [rbx+0x8a],0x0
   14000cbd2:	mov    rcx,rbx
   14000cbd5:	call   QWORD PTR [rip+0x3c79d]        # 0x140049378
   14000cbdb:	mov    QWORD PTR [rbx+0x98],rdi
   14000cbe2:	mov    eax,DWORD PTR [rip+0x5dc98]        # 0x14006a880
   14000cbe8:	mov    DWORD PTR [rbx+0x8c],eax
   14000cbee:	and    QWORD PTR [rbx+0x80],0x0
   14000cbf6:	lea    rdx,[rsp+0x40]
   14000cbfb:	mov    rcx,rbx
   14000cbfe:	call   QWORD PTR [rip+0x3c77c]        # 0x140049380
   14000cc04:	nop
   14000cc05:	mov    rcx,rax
   14000cc08:	call   0x14000d3f0
   14000cc0d:	mov    rdi,rax
   14000cc10:	mov    rcx,rax
   14000cc13:	call   QWORD PTR [rip+0x3c71f]        # 0x140049338
   14000cc19:	test   al,al
   14000cc1b:	je     0x14000cc27
   14000cc1d:	and    QWORD PTR [rbx+0x80],0x0
   14000cc25:	jmp    0x14000cc38
   14000cc27:	mov    QWORD PTR [rbx+0x80],rdi
   14000cc2e:	mov    rcx,rbx
   14000cc31:	call   QWORD PTR [rip+0x3c741]        # 0x140049378
   14000cc37:	nop
   14000cc38:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cc3d:	test   rcx,rcx
   14000cc40:	je     0x14000cc5b
   14000cc42:	call   QWORD PTR [rip+0x3c6f8]        # 0x140049340
   14000cc48:	test   rax,rax
   14000cc4b:	je     0x14000cc5b
   14000cc4d:	mov    r8,QWORD PTR [rax]
   14000cc50:	mov    edx,0x1
   14000cc55:	mov    rcx,rax
   14000cc58:	call   QWORD PTR [r8]
   14000cc5b:	mov    rax,rbx
   14000cc5e:	jmp    0x14000cc62
   14000cc60:	xor    eax,eax
   14000cc62:	mov    rbx,QWORD PTR [rsp+0x48]
   14000cc67:	add    rsp,0x30
   14000cc6b:	pop    rdi
   14000cc6c:	ret    
   14000cc6d:	int3   
   14000cc6e:	int3   
   14000cc6f:	int3   
   14000cc70:	mov    QWORD PTR [rsp+0x8],rbx
   14000cc75:	mov    QWORD PTR [rsp+0x10],rsi
   14000cc7a:	push   rdi
   14000cc7b:	sub    rsp,0x20
   14000cc7f:	xor    esi,esi
   14000cc81:	mov    rbx,rcx
   14000cc84:	cmp    QWORD PTR [rcx+0x98],rsi
   14000cc8b:	jne    0x14000cc91
   14000cc8d:	mov    edi,esi
   14000cc8f:	jmp    0x14000ccb1
   14000cc91:	call   0x14000ccf8
   14000cc96:	mov    rcx,QWORD PTR [rbx+0x98]
   14000cc9d:	neg    al
   14000cc9f:	sbb    rdi,rdi
   14000cca2:	and    rdi,rbx
   14000cca5:	call   QWORD PTR [rip+0x3c9e5]        # 0x140049690
   14000ccab:	test   eax,eax
   14000ccad:	cmovne rdi,rsi
   14000ccb1:	mov    rcx,rbx
   14000ccb4:	mov    BYTE PTR [rbx+0x90],sil
   14000ccbb:	mov    BYTE PTR [rbx+0x8a],sil
   14000ccc2:	call   QWORD PTR [rip+0x3c6b0]        # 0x140049378
   14000ccc8:	mov    ecx,DWORD PTR [rip+0x5dbb2]        # 0x14006a880
   14000ccce:	mov    QWORD PTR [rbx+0x98],rsi
   14000ccd5:	mov    QWORD PTR [rbx+0x80],rsi
   14000ccdc:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cce1:	mov    DWORD PTR [rbx+0x8c],ecx
   14000cce7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ccec:	mov    rax,rdi
   14000ccef:	add    rsp,0x20
   14000ccf3:	pop    rdi
   14000ccf4:	ret    
   14000ccf5:	int3   
   14000ccf6:	int3   
   14000ccf7:	int3   
   14000ccf8:	mov    rax,rsp
   14000ccfb:	push   rbp
   14000ccfc:	push   rdi
   14000ccfd:	push   r13
   14000ccff:	mov    rbp,rsp
   14000cd02:	sub    rsp,0x70
   14000cd06:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000cd0e:	mov    QWORD PTR [rax+0x10],rbx
   14000cd12:	mov    QWORD PTR [rax+0x18],rsi
   14000cd16:	mov    rax,QWORD PTR [rip+0x5b4d3]        # 0x1400681f0
   14000cd1d:	xor    rax,rsp
   14000cd20:	mov    QWORD PTR [rbp-0x8],rax
   14000cd24:	mov    rbx,rcx
   14000cd27:	cmp    QWORD PTR [rcx+0x80],0x0
   14000cd2f:	je     0x14000ceab
   14000cd35:	cmp    BYTE PTR [rcx+0x8a],0x0
   14000cd3c:	je     0x14000ceab
   14000cd42:	mov    rax,QWORD PTR [rcx]
   14000cd45:	mov    edi,0xffff
   14000cd4a:	mov    edx,edi
   14000cd4c:	call   QWORD PTR [rax+0x18]
   14000cd4f:	cmp    di,ax
   14000cd52:	jne    0x14000cd5b
   14000cd54:	xor    al,al
   14000cd56:	jmp    0x14000cead
   14000cd5b:	mov    QWORD PTR [rbp-0x18],0xf
   14000cd63:	and    QWORD PTR [rbp-0x20],0x0
   14000cd68:	mov    BYTE PTR [rbp-0x30],0x0
   14000cd6c:	mov    r13d,0x8
   14000cd72:	cmp    r13b,0xfe
   14000cd76:	jbe    0x14000cd86
   14000cd78:	lea    rcx,[rip+0x43bc9]        # 0x140050948
   14000cd7f:	call   QWORD PTR [rip+0x3c813]        # 0x140049598
   14000cd85:	int3   
   14000cd86:	mov    r8,r13
   14000cd89:	xor    edx,edx
   14000cd8b:	lea    rcx,[rbp-0x30]
   14000cd8f:	call   QWORD PTR [rip+0x3c8c3]        # 0x140049658
   14000cd95:	mov    QWORD PTR [rbp-0x20],r13
   14000cd99:	lea    rax,[rbp-0x30]
   14000cd9d:	cmp    QWORD PTR [rbp-0x18],0x10
   14000cda2:	cmovae rax,QWORD PTR [rbp-0x30]
   14000cda7:	mov    BYTE PTR [rax+0x8],0x0
   14000cdab:	mov    rdx,QWORD PTR [rbp-0x30]
   14000cdaf:	mov    r9,QWORD PTR [rbp-0x18]
   14000cdb3:	lea    rcx,[rbp-0x30]
   14000cdb7:	cmp    r9,0x10
   14000cdbb:	cmovae rcx,rdx
   14000cdbf:	lea    r8,[rbp-0x30]
   14000cdc3:	cmovae r8,rdx
   14000cdc7:	mov    rax,QWORD PTR [rbp-0x20]
   14000cdcb:	lea    r9,[rcx+rax*1]
   14000cdcf:	lea    rax,[rbp-0x40]
   14000cdd3:	mov    QWORD PTR [rsp+0x20],rax
   14000cdd8:	lea    rdx,[rbx+0x8c]
   14000cddf:	mov    rcx,QWORD PTR [rbx+0x80]
   14000cde6:	call   QWORD PTR [rip+0x3c674]        # 0x140049460
   14000cdec:	test   eax,eax
   14000cdee:	je     0x14000cdf6
   14000cdf0:	dec    eax
   14000cdf2:	jne    0x14000ce6e
   14000cdf4:	jmp    0x14000cdfd
   14000cdf6:	mov    BYTE PTR [rbx+0x8a],0x0
   14000cdfd:	lea    rax,[rbp-0x30]
   14000ce01:	mov    rdx,QWORD PTR [rbp-0x30]
   14000ce05:	mov    r9,QWORD PTR [rbp-0x18]
   14000ce09:	cmp    r9,0x10
   14000ce0d:	cmovae rax,rdx
   14000ce11:	mov    rdi,QWORD PTR [rbp-0x40]
   14000ce15:	sub    rdi,rax
   14000ce18:	je     0x14000ce48
   14000ce1a:	lea    rcx,[rbp-0x30]
   14000ce1e:	cmp    r9,0x10
   14000ce22:	cmovae rcx,rdx
   14000ce26:	mov    r9,QWORD PTR [rbx+0x98]
   14000ce2d:	mov    r8,rdi
   14000ce30:	mov    edx,0x1
   14000ce35:	call   QWORD PTR [rip+0x3c84d]        # 0x140049688
   14000ce3b:	cmp    rdi,rax
   14000ce3e:	jne    0x14000ce82
   14000ce40:	mov    r9,QWORD PTR [rbp-0x18]
   14000ce44:	mov    rdx,QWORD PTR [rbp-0x30]
   14000ce48:	cmp    BYTE PTR [rbx+0x8a],0x0
   14000ce4f:	je     0x14000ce9c
   14000ce51:	test   rdi,rdi
   14000ce54:	jne    0x14000cdb3
   14000ce5a:	xor    r8d,r8d
   14000ce5d:	mov    rdx,r13
   14000ce60:	lea    rcx,[rbp-0x30]
   14000ce64:	call   0x1400047bc
   14000ce69:	jmp    0x14000cdab
   14000ce6e:	sub    eax,0x2
   14000ce71:	je     0x14000ce75
   14000ce73:	jmp    0x14000ce82
   14000ce75:	cmp    QWORD PTR [rbp-0x18],0x10
   14000ce7a:	jb     0x14000ceab
   14000ce7c:	mov    rcx,QWORD PTR [rbp-0x30]
   14000ce80:	jmp    0x14000cea5
   14000ce82:	cmp    QWORD PTR [rbp-0x18],0x10
   14000ce87:	jb     0x14000cd54
   14000ce8d:	mov    rcx,QWORD PTR [rbp-0x30]
   14000ce91:	call   QWORD PTR [rip+0x3c7e1]        # 0x140049678
   14000ce97:	jmp    0x14000cd54
   14000ce9c:	cmp    r9,0x10
   14000cea0:	jb     0x14000ceab
   14000cea2:	mov    rcx,rdx
   14000cea5:	call   QWORD PTR [rip+0x3c7cd]        # 0x140049678
   14000ceab:	mov    al,0x1
   14000cead:	mov    rcx,QWORD PTR [rbp-0x8]
   14000ceb1:	xor    rcx,rsp
   14000ceb4:	call   0x14002b100
   14000ceb9:	lea    r11,[rsp+0x70]
   14000cebe:	mov    rbx,QWORD PTR [r11+0x28]
   14000cec2:	mov    rsi,QWORD PTR [r11+0x30]
   14000cec6:	mov    rsp,r11
   14000cec9:	pop    r13
   14000cecb:	pop    rdi
   14000cecc:	pop    rbp
   14000cecd:	ret    
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	sub    rsp,0x28
   14000ced4:	mov    rdx,QWORD PTR [rcx+0x8]
   14000ced8:	movabs r10,0x6666666666666667
   14000cee2:	mov    r9,rcx
   14000cee5:	sub    rdx,QWORD PTR [rcx]
   14000cee8:	mov    rax,r10
   14000ceeb:	imul   rdx
   14000ceee:	mov    r8,rdx
   14000cef1:	sar    r8,0x4
   14000cef5:	mov    rax,r8
   14000cef8:	shr    rax,0x3f
   14000cefc:	add    r8,rax
   14000ceff:	movabs rax,0x666666666666665
   14000cf09:	cmp    r8,rax
   14000cf0c:	jbe    0x14000cf1c
   14000cf0e:	lea    rcx,[rip+0x43a43]        # 0x140050958
   14000cf15:	call   QWORD PTR [rip+0x3c67d]        # 0x140049598
   14000cf1b:	int3   
   14000cf1c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cf20:	mov    rax,r10
   14000cf23:	inc    r8
   14000cf26:	sub    rcx,QWORD PTR [r9]
   14000cf29:	imul   rcx
   14000cf2c:	sar    rdx,0x4
   14000cf30:	mov    rax,rdx
   14000cf33:	shr    rax,0x3f
   14000cf37:	add    rdx,rax
   14000cf3a:	cmp    r8,rdx
   14000cf3d:	jbe    0x14000cf6d
   14000cf3f:	mov    rcx,rdx
   14000cf42:	movabs rax,0x666666666666666
   14000cf4c:	shr    rcx,1
   14000cf4f:	sub    rax,rcx
   14000cf52:	cmp    rax,rdx
   14000cf55:	jae    0x14000cf5b
   14000cf57:	xor    edx,edx
   14000cf59:	jmp    0x14000cf5e
   14000cf5b:	add    rdx,rcx
   14000cf5e:	cmp    rdx,r8
   14000cf61:	mov    rcx,r9
   14000cf64:	cmovb  rdx,r8
   14000cf68:	call   0x14000cf74
   14000cf6d:	add    rsp,0x28
   14000cf71:	ret    
   14000cf72:	int3   
   14000cf73:	int3   
   14000cf74:	mov    rax,rsp
   14000cf77:	push   rdi
   14000cf78:	push   r12
   14000cf7a:	push   r13
   14000cf7c:	push   r14
   14000cf7e:	push   r15
   14000cf80:	sub    rsp,0x40
   14000cf84:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cf8d:	mov    QWORD PTR [rax+0x8],rbx
   14000cf91:	mov    QWORD PTR [rax+0x18],rsi
   14000cf95:	mov    r12,rdx
   14000cf98:	mov    rsi,rcx
   14000cf9b:	movabs rax,0x666666666666666
   14000cfa5:	cmp    rdx,rax
   14000cfa8:	jbe    0x14000cfb8
   14000cfaa:	lea    rcx,[rip+0x439a7]        # 0x140050958
   14000cfb1:	call   QWORD PTR [rip+0x3c5e1]        # 0x140049598
   14000cfb7:	int3   
   14000cfb8:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cfbc:	sub    rcx,QWORD PTR [rsi]
   14000cfbf:	movabs r14,0x6666666666666667
   14000cfc9:	mov    rax,r14
   14000cfcc:	imul   rcx
   14000cfcf:	sar    rdx,0x4
   14000cfd3:	mov    rax,rdx
   14000cfd6:	shr    rax,0x3f
   14000cfda:	add    rdx,rax
   14000cfdd:	cmp    rdx,r12
   14000cfe0:	jae    0x14000d0cc
   14000cfe6:	xor    r15d,r15d
   14000cfe9:	mov    edi,r15d
   14000cfec:	mov    QWORD PTR [rsp+0x78],r15
   14000cff1:	test   r12,r12
   14000cff4:	je     0x14000d044
   14000cff6:	lea    rcx,[r12+r12*4]
   14000cffa:	shl    rcx,0x3
   14000cffe:	call   QWORD PTR [rip+0x3c694]        # 0x140049698
   14000d004:	mov    rdi,rax
   14000d007:	mov    QWORD PTR [rsp+0x78],rax
   14000d00c:	test   rax,rax
   14000d00f:	jne    0x14000d044
   14000d011:	mov    QWORD PTR [rsp+0x78],r15
   14000d016:	lea    rdx,[rsp+0x78]
   14000d01b:	lea    rcx,[rsp+0x28]
   14000d020:	call   QWORD PTR [rip+0x3c8aa]        # 0x1400498d0
   14000d026:	lea    r11,[rip+0x3d1ab]        # 0x14004a1d8
   14000d02d:	mov    QWORD PTR [rsp+0x28],r11
   14000d032:	lea    rdx,[rip+0x5670f]        # 0x140063748
   14000d039:	lea    rcx,[rsp+0x28]
   14000d03e:	call   0x14002b560
   14000d043:	nop
   14000d044:	mov    r8,rdi
   14000d047:	mov    rdx,QWORD PTR [rsi+0x8]
   14000d04b:	mov    rcx,QWORD PTR [rsi]
   14000d04e:	call   0x14000da5c
   14000d053:	nop
   14000d054:	mov    r13,QWORD PTR [rsi+0x8]
   14000d058:	mov    rbx,QWORD PTR [rsi]
   14000d05b:	mov    rcx,r13
   14000d05e:	sub    rcx,rbx
   14000d061:	mov    rax,r14
   14000d064:	imul   rcx
   14000d067:	mov    r14,rdx
   14000d06a:	sar    r14,0x4
   14000d06e:	mov    rax,r14
   14000d071:	shr    rax,0x3f
   14000d075:	add    r14,rax
   14000d078:	test   rbx,rbx
   14000d07b:	je     0x14000d0b1
   14000d07d:	jmp    0x14000d0a3
   14000d07f:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d084:	jb     0x14000d08f
   14000d086:	mov    rcx,QWORD PTR [rbx]
   14000d089:	call   QWORD PTR [rip+0x3c5e9]        # 0x140049678
   14000d08f:	mov    QWORD PTR [rbx+0x18],0x7
   14000d097:	mov    QWORD PTR [rbx+0x10],r15
   14000d09b:	mov    WORD PTR [rbx],r15w
   14000d09f:	add    rbx,0x28
   14000d0a3:	cmp    rbx,r13
   14000d0a6:	jne    0x14000d07f
   14000d0a8:	mov    rcx,QWORD PTR [rsi]
   14000d0ab:	call   QWORD PTR [rip+0x3c5c7]        # 0x140049678
   14000d0b1:	lea    rax,[r12+r12*4]
   14000d0b5:	lea    rcx,[rdi+rax*8]
   14000d0b9:	mov    QWORD PTR [rsi+0x10],rcx
   14000d0bd:	lea    rax,[r14+r14*4]
   14000d0c1:	lea    rcx,[rdi+rax*8]
   14000d0c5:	mov    QWORD PTR [rsi+0x8],rcx
   14000d0c9:	mov    QWORD PTR [rsi],rdi
   14000d0cc:	lea    r11,[rsp+0x40]
   14000d0d1:	mov    rbx,QWORD PTR [r11+0x30]
   14000d0d5:	mov    rsi,QWORD PTR [r11+0x40]
   14000d0d9:	mov    rsp,r11
   14000d0dc:	pop    r15
   14000d0de:	pop    r14
   14000d0e0:	pop    r13
   14000d0e2:	pop    r12
   14000d0e4:	pop    rdi
   14000d0e5:	ret    
   14000d0e6:	int3   
   14000d0e7:	int3   
   14000d0e8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d0ed:	mov    QWORD PTR [rsp+0x10],rbp
   14000d0f2:	mov    QWORD PTR [rsp+0x18],rsi
   14000d0f7:	push   rdi
   14000d0f8:	push   r12
   14000d0fa:	push   r13
   14000d0fc:	sub    rsp,0x20
   14000d100:	mov    rax,QWORD PTR [rdx+0x10]
   14000d104:	mov    rsi,r9
   14000d107:	mov    r12,r8
   14000d10a:	mov    rbp,rdx
   14000d10d:	mov    rbx,rcx
   14000d110:	cmp    rax,r8
   14000d113:	jae    0x14000d123
   14000d115:	lea    rcx,[rip+0x43814]        # 0x140050930
   14000d11c:	call   QWORD PTR [rip+0x3c48e]        # 0x1400495b0
   14000d122:	int3   
   14000d123:	sub    rax,r8
   14000d126:	mov    r8,QWORD PTR [rcx+0x10]
   14000d12a:	cmp    rax,r9
   14000d12d:	cmovb  rsi,rax
   14000d131:	or     rax,0xffffffffffffffff
   14000d135:	sub    rax,r8
   14000d138:	cmp    rax,rsi
   14000d13b:	ja     0x14000d14b
   14000d13d:	lea    rcx,[rip+0x43804]        # 0x140050948
   14000d144:	call   QWORD PTR [rip+0x3c44e]        # 0x140049598
   14000d14a:	int3   
   14000d14b:	xor    r13d,r13d
   14000d14e:	test   rsi,rsi
   14000d151:	je     0x14000d1f2
   14000d157:	lea    rdi,[r8+rsi*1]
   14000d15b:	movabs rax,0x7ffffffffffffffe
   14000d165:	cmp    rdi,rax
   14000d168:	jbe    0x14000d178
   14000d16a:	lea    rcx,[rip+0x437d7]        # 0x140050948
   14000d171:	call   QWORD PTR [rip+0x3c421]        # 0x140049598
   14000d177:	int3   
   14000d178:	cmp    QWORD PTR [rcx+0x18],rdi
   14000d17c:	jae    0x14000d188
   14000d17e:	mov    rdx,rdi
   14000d181:	call   0x140009ba8
   14000d186:	jmp    0x14000d1a4
   14000d188:	test   rdi,rdi
   14000d18b:	jne    0x14000d1a9
   14000d18d:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d192:	mov    QWORD PTR [rcx+0x10],r13
   14000d196:	jb     0x14000d19d
   14000d198:	mov    rax,QWORD PTR [rcx]
   14000d19b:	jmp    0x14000d1a0
   14000d19d:	mov    rax,rcx
   14000d1a0:	mov    WORD PTR [rax],r13w
   14000d1a4:	test   rdi,rdi
   14000d1a7:	je     0x14000d1f2
   14000d1a9:	cmp    QWORD PTR [rbp+0x18],0x8
   14000d1ae:	jb     0x14000d1b4
   14000d1b0:	mov    rbp,QWORD PTR [rbp+0x0]
   14000d1b4:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d1b9:	jb     0x14000d1c0
   14000d1bb:	mov    rcx,QWORD PTR [rbx]
   14000d1be:	jmp    0x14000d1c3
   14000d1c0:	mov    rcx,rbx
   14000d1c3:	mov    rax,QWORD PTR [rbx+0x10]
   14000d1c7:	lea    r8,[rsi+rsi*1]
   14000d1cb:	lea    rdx,[rbp+r12*2+0x0]
   14000d1d0:	lea    rcx,[rcx+rax*2]
   14000d1d4:	call   QWORD PTR [rip+0x3c6ee]        # 0x1400498c8
   14000d1da:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d1df:	mov    QWORD PTR [rbx+0x10],rdi
   14000d1e3:	jb     0x14000d1ea
   14000d1e5:	mov    rax,QWORD PTR [rbx]
   14000d1e8:	jmp    0x14000d1ed
   14000d1ea:	mov    rax,rbx
   14000d1ed:	mov    WORD PTR [rax+rdi*2],r13w
   14000d1f2:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d1f7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d1fc:	mov    rax,rbx
   14000d1ff:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d204:	add    rsp,0x20
   14000d208:	pop    r13
   14000d20a:	pop    r12
   14000d20c:	pop    rdi
   14000d20d:	ret    
   14000d20e:	int3   
   14000d20f:	int3   
   14000d210:	mov    QWORD PTR [rsp+0x8],rbx
   14000d215:	push   rdi
   14000d216:	sub    rsp,0x20
   14000d21a:	mov    rax,QWORD PTR [rdx+0x18]
   14000d21e:	xor    edi,edi
   14000d220:	mov    r10,r8
   14000d223:	sub    rax,QWORD PTR [rdx+0x10]
   14000d227:	mov    r11,rdx
   14000d22a:	mov    rbx,rcx
   14000d22d:	mov    DWORD PTR [rsp+0x38],edi
   14000d231:	cmp    QWORD PTR [r8+0x10],rax
   14000d235:	jbe    0x14000d256
   14000d237:	mov    rax,QWORD PTR [r8+0x18]
   14000d23b:	sub    rax,QWORD PTR [r8+0x10]
   14000d23f:	cmp    rax,QWORD PTR [rdx+0x10]
   14000d243:	jb     0x14000d256
   14000d245:	or     r9,0xffffffffffffffff
   14000d249:	xor    r8d,r8d
   14000d24c:	mov    rcx,r10
   14000d24f:	call   0x14000d65c
   14000d254:	jmp    0x14000d268
   14000d256:	or     r9,0xffffffffffffffff
   14000d25a:	xor    r8d,r8d
   14000d25d:	mov    rdx,r10
   14000d260:	mov    rcx,r11
   14000d263:	call   0x14000d0e8
   14000d268:	mov    QWORD PTR [rbx+0x18],0x7
   14000d270:	mov    QWORD PTR [rbx+0x10],rdi
   14000d274:	mov    rdx,rax
   14000d277:	mov    rcx,rbx
   14000d27a:	mov    WORD PTR [rbx],di
   14000d27d:	call   0x140009880
   14000d282:	mov    rax,rbx
   14000d285:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d28a:	add    rsp,0x20
   14000d28e:	pop    rdi
   14000d28f:	ret    
   14000d290:	mov    rax,rsp
   14000d293:	mov    QWORD PTR [rax+0x8],rcx
   14000d297:	push   rbp
   14000d298:	push   rsi
   14000d299:	push   rdi
   14000d29a:	sub    rsp,0x30
   14000d29e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d2a7:	mov    QWORD PTR [rax+0x18],rbx
   14000d2ab:	mov    rsi,rdx
   14000d2ae:	mov    rdi,rcx
   14000d2b1:	xor    ebp,ebp
   14000d2b3:	mov    DWORD PTR [rax+0x10],ebp
   14000d2b6:	mov    QWORD PTR [rcx+0x18],0x7
   14000d2be:	mov    QWORD PTR [rcx+0x10],rbp
   14000d2c2:	mov    WORD PTR [rcx],bp
   14000d2c5:	mov    DWORD PTR [rax+0x10],0x1
   14000d2cc:	mov    rbx,QWORD PTR [rdx+0x10]
   14000d2d0:	lea    rcx,[rip+0x43a9d]        # 0x140050d74
   14000d2d7:	call   QWORD PTR [rip+0x3c3d3]        # 0x1400496b0
   14000d2dd:	add    rax,rbx
   14000d2e0:	mov    rbx,QWORD PTR [rdi+0x10]
   14000d2e4:	cmp    rbx,rax
   14000d2e7:	ja     0x14000d318
   14000d2e9:	cmp    QWORD PTR [rdi+0x18],rax
   14000d2ed:	je     0x14000d318
   14000d2ef:	mov    r8b,0x1
   14000d2f2:	mov    rdx,rax
   14000d2f5:	mov    rcx,rdi
   14000d2f8:	call   0x140009a30
   14000d2fd:	test   al,al
   14000d2ff:	je     0x14000d318
   14000d301:	mov    QWORD PTR [rdi+0x10],rbx
   14000d305:	cmp    QWORD PTR [rdi+0x18],0x8
   14000d30a:	jb     0x14000d311
   14000d30c:	mov    rax,QWORD PTR [rdi]
   14000d30f:	jmp    0x14000d314
   14000d311:	mov    rax,rdi
   14000d314:	mov    WORD PTR [rax+rbx*2],bp
   14000d318:	or     r9,0xffffffffffffffff
   14000d31c:	xor    r8d,r8d
   14000d31f:	mov    rdx,rsi
   14000d322:	mov    rcx,rdi
   14000d325:	call   0x14000d0e8
   14000d32a:	lea    rdx,[rip+0x43a43]        # 0x140050d74
   14000d331:	mov    rcx,rdi
   14000d334:	call   0x14000d4f4
   14000d339:	mov    rax,rdi
   14000d33c:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d341:	add    rsp,0x30
   14000d345:	pop    rdi
   14000d346:	pop    rsi
   14000d347:	pop    rbp
   14000d348:	ret    
   14000d349:	int3   
   14000d34a:	int3   
   14000d34b:	int3   
   14000d34c:	mov    QWORD PTR [rsp+0x10],rbx
   14000d351:	push   rdi
   14000d352:	sub    rsp,0x20
   14000d356:	mov    rax,r8
   14000d359:	mov    r10,rdx
   14000d35c:	mov    rbx,rcx
   14000d35f:	xor    edi,edi
   14000d361:	or     r9,0xffffffffffffffff
   14000d365:	xor    r8d,r8d
   14000d368:	mov    rdx,rax
   14000d36b:	mov    rcx,r10
   14000d36e:	mov    DWORD PTR [rsp+0x30],edi
   14000d372:	call   0x14000d0e8
   14000d377:	mov    QWORD PTR [rbx+0x18],0x7
   14000d37f:	mov    QWORD PTR [rbx+0x10],rdi
   14000d383:	mov    rcx,rbx
   14000d386:	mov    rdx,rax
   14000d389:	mov    WORD PTR [rbx],di
   14000d38c:	call   0x140009880
   14000d391:	mov    rax,rbx
   14000d394:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d399:	add    rsp,0x20
   14000d39d:	pop    rdi
   14000d39e:	ret    
   14000d39f:	int3   
   14000d3a0:	mov    QWORD PTR [rsp+0x10],rbx
   14000d3a5:	push   rdi
   14000d3a6:	sub    rsp,0x20
   14000d3aa:	mov    rax,r8
   14000d3ad:	mov    rbx,rcx
   14000d3b0:	xor    edi,edi
   14000d3b2:	or     r9,0xffffffffffffffff
   14000d3b6:	xor    r8d,r8d
   14000d3b9:	mov    rcx,rax
   14000d3bc:	mov    DWORD PTR [rsp+0x30],edi
   14000d3c0:	call   0x14000d65c
   14000d3c5:	mov    QWORD PTR [rbx+0x18],0x7
   14000d3cd:	mov    QWORD PTR [rbx+0x10],rdi
   14000d3d1:	mov    rcx,rbx
   14000d3d4:	mov    rdx,rax
   14000d3d7:	mov    WORD PTR [rbx],di
   14000d3da:	call   0x140009880
   14000d3df:	mov    rax,rbx
   14000d3e2:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d3e7:	add    rsp,0x20
   14000d3eb:	pop    rdi
   14000d3ec:	ret    
   14000d3ed:	int3   
   14000d3ee:	int3   
   14000d3ef:	int3   
   14000d3f0:	rex push rdi
   14000d3f2:	sub    rsp,0x40
   14000d3f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d3ff:	mov    QWORD PTR [rsp+0x60],rbx
   14000d404:	mov    QWORD PTR [rsp+0x68],rsi
   14000d409:	mov    rsi,rcx
   14000d40c:	xor    edx,edx
   14000d40e:	lea    rcx,[rsp+0x50]
   14000d413:	call   QWORD PTR [rip+0x3c187]        # 0x1400495a0
   14000d419:	nop
   14000d41a:	mov    rax,QWORD PTR [rip+0x5d3a7]        # 0x14006a7c8
   14000d421:	mov    QWORD PTR [rsp+0x58],rax
   14000d426:	mov    rcx,QWORD PTR [rip+0x3bf33]        # 0x140049360
   14000d42d:	call   QWORD PTR [rip+0x3bf1d]        # 0x140049350
   14000d433:	mov    rdi,rax
   14000d436:	mov    rax,QWORD PTR [rsi]
   14000d439:	cmp    rdi,QWORD PTR [rax+0x18]
   14000d43d:	jae    0x14000d449
   14000d43f:	mov    rcx,QWORD PTR [rax+0x10]
   14000d443:	mov    rbx,QWORD PTR [rcx+rdi*8]
   14000d447:	jmp    0x14000d44b
   14000d449:	xor    ebx,ebx
   14000d44b:	test   rbx,rbx
   14000d44e:	jne    0x14000d4d6
   14000d454:	cmp    BYTE PTR [rax+0x24],bl
   14000d457:	je     0x14000d471
   14000d459:	call   QWORD PTR [rip+0x3bec9]        # 0x140049328
   14000d45f:	cmp    rdi,QWORD PTR [rax+0x18]
   14000d463:	jae    0x14000d46f
   14000d465:	mov    rax,QWORD PTR [rax+0x10]
   14000d469:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000d46d:	jmp    0x14000d471
   14000d46f:	xor    ebx,ebx
   14000d471:	test   rbx,rbx
   14000d474:	jne    0x14000d4d6
   14000d476:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d47b:	test   rbx,rbx
   14000d47e:	jne    0x14000d4d6
   14000d480:	mov    rdx,rsi
   14000d483:	lea    rcx,[rsp+0x58]
   14000d488:	call   QWORD PTR [rip+0x3bfca]        # 0x140049458
   14000d48e:	cmp    rax,0xffffffffffffffff
   14000d492:	jne    0x14000d4b8
   14000d494:	lea    rdx,[rip+0x434d5]        # 0x140050970
   14000d49b:	lea    rcx,[rsp+0x28]
   14000d4a0:	call   QWORD PTR [rip+0x3c40a]        # 0x1400498b0
   14000d4a6:	lea    rdx,[rip+0x5623b]        # 0x1400636e8
   14000d4ad:	lea    rcx,[rsp+0x28]
   14000d4b2:	call   0x14002b560
   14000d4b7:	int3   
   14000d4b8:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d4bd:	mov    QWORD PTR [rip+0x5d304],rbx        # 0x14006a7c8
   14000d4c4:	mov    rcx,rbx
   14000d4c7:	call   QWORD PTR [rip+0x3be7b]        # 0x140049348
   14000d4cd:	mov    rcx,rbx
   14000d4d0:	call   0x14002afb8
   14000d4d5:	nop
   14000d4d6:	lea    rcx,[rsp+0x50]
   14000d4db:	call   QWORD PTR [rip+0x3c0c7]        # 0x1400495a8
   14000d4e1:	mov    rax,rbx
   14000d4e4:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d4e9:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d4ee:	add    rsp,0x40
   14000d4f2:	pop    rdi
   14000d4f3:	ret    
   14000d4f4:	mov    rax,rsp
   14000d4f7:	mov    QWORD PTR [rax+0x8],rbx
   14000d4fb:	mov    QWORD PTR [rax+0x10],rbp
   14000d4ff:	mov    QWORD PTR [rax+0x18],rsi
   14000d503:	mov    QWORD PTR [rax+0x20],rdi
   14000d507:	push   r12
   14000d509:	sub    rsp,0x20
   14000d50d:	mov    rbx,rcx
   14000d510:	mov    rcx,rdx
   14000d513:	mov    rsi,rdx
   14000d516:	call   QWORD PTR [rip+0x3c194]        # 0x1400496b0
   14000d51c:	xor    r12d,r12d
   14000d51f:	mov    rbp,rax
   14000d522:	test   rsi,rsi
   14000d525:	je     0x14000d585
   14000d527:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d52c:	jb     0x14000d533
   14000d52e:	mov    rcx,QWORD PTR [rbx]
   14000d531:	jmp    0x14000d536
   14000d533:	mov    rcx,rbx
   14000d536:	cmp    rsi,rcx
   14000d539:	jb     0x14000d585
   14000d53b:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d540:	jb     0x14000d547
   14000d542:	mov    rcx,QWORD PTR [rbx]
   14000d545:	jmp    0x14000d54a
   14000d547:	mov    rcx,rbx
   14000d54a:	mov    rax,QWORD PTR [rbx+0x10]
   14000d54e:	lea    rcx,[rcx+rax*2]
   14000d552:	cmp    rcx,rsi
   14000d555:	jbe    0x14000d585
   14000d557:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d55c:	jb     0x14000d563
   14000d55e:	mov    rax,QWORD PTR [rbx]
   14000d561:	jmp    0x14000d566
   14000d563:	mov    rax,rbx
   14000d566:	sub    rsi,rax
   14000d569:	mov    r9,rbp
   14000d56c:	mov    rdx,rbx
   14000d56f:	sar    rsi,1
   14000d572:	mov    rcx,rbx
   14000d575:	mov    r8,rsi
   14000d578:	call   0x14000d0e8
   14000d57d:	mov    rbx,rax
   14000d580:	jmp    0x14000d63e
   14000d585:	mov    r8,QWORD PTR [rbx+0x10]
   14000d589:	or     rax,0xffffffffffffffff
   14000d58d:	sub    rax,r8
   14000d590:	cmp    rax,rbp
   14000d593:	ja     0x14000d5a3
   14000d595:	lea    rcx,[rip+0x433ac]        # 0x140050948
   14000d59c:	call   QWORD PTR [rip+0x3bff6]        # 0x140049598
   14000d5a2:	int3   
   14000d5a3:	test   rbp,rbp
   14000d5a6:	je     0x14000d63e
   14000d5ac:	lea    rdi,[r8+rbp*1]
   14000d5b0:	movabs rax,0x7ffffffffffffffe
   14000d5ba:	cmp    rdi,rax
   14000d5bd:	jbe    0x14000d5cd
   14000d5bf:	lea    rcx,[rip+0x43382]        # 0x140050948
   14000d5c6:	call   QWORD PTR [rip+0x3bfcc]        # 0x140049598
   14000d5cc:	int3   
   14000d5cd:	cmp    QWORD PTR [rbx+0x18],rdi
   14000d5d1:	jae    0x14000d5e0
   14000d5d3:	mov    rdx,rdi
   14000d5d6:	mov    rcx,rbx
   14000d5d9:	call   0x140009ba8
   14000d5de:	jmp    0x14000d5fc
   14000d5e0:	test   rdi,rdi
   14000d5e3:	jne    0x14000d601
   14000d5e5:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d5ea:	mov    QWORD PTR [rbx+0x10],r12
   14000d5ee:	jb     0x14000d5f5
   14000d5f0:	mov    rax,QWORD PTR [rbx]
   14000d5f3:	jmp    0x14000d5f8
   14000d5f5:	mov    rax,rbx
   14000d5f8:	mov    WORD PTR [rax],r12w
   14000d5fc:	test   rdi,rdi
   14000d5ff:	je     0x14000d63e
   14000d601:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d606:	jb     0x14000d60d
   14000d608:	mov    rcx,QWORD PTR [rbx]
   14000d60b:	jmp    0x14000d610
   14000d60d:	mov    rcx,rbx
   14000d610:	mov    rax,QWORD PTR [rbx+0x10]
   14000d614:	lea    r8,[rbp+rbp*1+0x0]
   14000d619:	mov    rdx,rsi
   14000d61c:	lea    rcx,[rcx+rax*2]
   14000d620:	call   QWORD PTR [rip+0x3c2a2]        # 0x1400498c8
   14000d626:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d62b:	mov    QWORD PTR [rbx+0x10],rdi
   14000d62f:	jb     0x14000d636
   14000d631:	mov    rax,QWORD PTR [rbx]
   14000d634:	jmp    0x14000d639
   14000d636:	mov    rax,rbx
   14000d639:	mov    WORD PTR [rax+rdi*2],r12w
   14000d63e:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d643:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d648:	mov    rdi,QWORD PTR [rsp+0x48]
   14000d64d:	mov    rax,rbx
   14000d650:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d655:	add    rsp,0x20
   14000d659:	pop    r12
   14000d65b:	ret    
   14000d65c:	mov    rax,rsp
   14000d65f:	mov    QWORD PTR [rax+0x8],rbx
   14000d663:	mov    QWORD PTR [rax+0x10],rbp
   14000d667:	mov    QWORD PTR [rax+0x18],rsi
   14000d66b:	mov    QWORD PTR [rax+0x20],rdi
   14000d66f:	push   r12
   14000d671:	push   r13
   14000d673:	push   r14
   14000d675:	sub    rsp,0x20
   14000d679:	mov    rax,QWORD PTR [rdx+0x10]
   14000d67d:	mov    rsi,r9
   14000d680:	mov    r12,r8
   14000d683:	mov    rbp,rdx
   14000d686:	mov    rbx,rcx
   14000d689:	cmp    rax,r8
   14000d68c:	jb     0x14000d7ef
   14000d692:	sub    rax,r8
   14000d695:	mov    r8,QWORD PTR [rcx+0x10]
   14000d699:	cmp    rax,r9
   14000d69c:	cmovb  rsi,rax
   14000d6a0:	or     rax,0xffffffffffffffff
   14000d6a4:	sub    rax,r8
   14000d6a7:	cmp    rax,rsi
   14000d6aa:	ja     0x14000d6ba
   14000d6ac:	lea    rcx,[rip+0x43295]        # 0x140050948
   14000d6b3:	call   QWORD PTR [rip+0x3bedf]        # 0x140049598
   14000d6b9:	int3   
   14000d6ba:	xor    r14d,r14d
   14000d6bd:	test   rsi,rsi
   14000d6c0:	je     0x14000d7cd
   14000d6c6:	lea    rdi,[r8+rsi*1]
   14000d6ca:	movabs rax,0x7ffffffffffffffe
   14000d6d4:	cmp    rdi,rax
   14000d6d7:	jbe    0x14000d6e7
   14000d6d9:	lea    rcx,[rip+0x43268]        # 0x140050948
   14000d6e0:	call   QWORD PTR [rip+0x3beb2]        # 0x140049598
   14000d6e6:	int3   
   14000d6e7:	cmp    QWORD PTR [rcx+0x18],rdi
   14000d6eb:	jae    0x14000d6f7
   14000d6ed:	mov    rdx,rdi
   14000d6f0:	call   0x140009ba8
   14000d6f5:	jmp    0x14000d713
   14000d6f7:	test   rdi,rdi
   14000d6fa:	jne    0x14000d71c
   14000d6fc:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d701:	mov    QWORD PTR [rcx+0x10],r14
   14000d705:	jb     0x14000d70c
   14000d707:	mov    rax,QWORD PTR [rcx]
   14000d70a:	jmp    0x14000d70f
   14000d70c:	mov    rax,rcx
   14000d70f:	mov    WORD PTR [rax],r14w
   14000d713:	test   rdi,rdi
   14000d716:	je     0x14000d7cd
   14000d71c:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d721:	jb     0x14000d728
   14000d723:	mov    rdx,QWORD PTR [rbx]
   14000d726:	jmp    0x14000d72b
   14000d728:	mov    rdx,rbx
   14000d72b:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d730:	jb     0x14000d737
   14000d732:	mov    rax,QWORD PTR [rbx]
   14000d735:	jmp    0x14000d73a
   14000d737:	mov    rax,rbx
   14000d73a:	mov    r8,QWORD PTR [rbx+0x10]
   14000d73e:	lea    r13,[rsi+rsi*1]
   14000d742:	lea    rcx,[r13+rax*1+0x0]
   14000d747:	add    r8,r8
   14000d74a:	call   QWORD PTR [rip+0x3bea0]        # 0x1400495f0
   14000d750:	cmp    rbx,rbp
   14000d753:	jne    0x14000d78d
   14000d755:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d75a:	jb     0x14000d761
   14000d75c:	mov    rdx,QWORD PTR [rbx]
   14000d75f:	jmp    0x14000d764
   14000d761:	mov    rdx,rbx
   14000d764:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d769:	jb     0x14000d770
   14000d76b:	mov    rcx,QWORD PTR [rbx]
   14000d76e:	jmp    0x14000d773
   14000d770:	mov    rcx,rbx
   14000d773:	lea    rax,[r12+rsi*1]
   14000d777:	test   r12,r12
   14000d77a:	mov    r8,r13
   14000d77d:	cmovne r12,rax
   14000d781:	lea    rdx,[rdx+r12*2]
   14000d785:	call   QWORD PTR [rip+0x3be65]        # 0x1400495f0
   14000d78b:	jmp    0x14000d7b5
   14000d78d:	cmp    QWORD PTR [rbp+0x18],0x8
   14000d792:	jb     0x14000d798
   14000d794:	mov    rbp,QWORD PTR [rbp+0x0]
   14000d798:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d79d:	jb     0x14000d7a4
   14000d79f:	mov    rcx,QWORD PTR [rbx]
   14000d7a2:	jmp    0x14000d7a7
   14000d7a4:	mov    rcx,rbx
   14000d7a7:	lea    rdx,[rbp+r12*2+0x0]
   14000d7ac:	mov    r8,r13
   14000d7af:	call   QWORD PTR [rip+0x3c113]        # 0x1400498c8
   14000d7b5:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d7ba:	mov    QWORD PTR [rbx+0x10],rdi
   14000d7be:	jb     0x14000d7c5
   14000d7c0:	mov    rax,QWORD PTR [rbx]
   14000d7c3:	jmp    0x14000d7c8
   14000d7c5:	mov    rax,rbx
   14000d7c8:	mov    WORD PTR [rax+rdi*2],r14w
   14000d7cd:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d7d2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d7d7:	mov    rdi,QWORD PTR [rsp+0x58]
   14000d7dc:	mov    rax,rbx
   14000d7df:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d7e4:	add    rsp,0x20
   14000d7e8:	pop    r14
   14000d7ea:	pop    r13
   14000d7ec:	pop    r12
   14000d7ee:	ret    
   14000d7ef:	lea    rcx,[rip+0x4313a]        # 0x140050930
   14000d7f6:	call   QWORD PTR [rip+0x3bdb4]        # 0x1400495b0
   14000d7fc:	int3   
   14000d7fd:	int3   
   14000d7fe:	int3   
   14000d7ff:	int3   
   14000d800:	mov    QWORD PTR [rsp+0x20],r9
   14000d805:	mov    QWORD PTR [rsp+0x18],r8
   14000d80a:	mov    QWORD PTR [rsp+0x10],rdx
   14000d80f:	push   rbx
   14000d810:	push   rsi
   14000d811:	push   rdi
   14000d812:	push   r12
   14000d814:	push   r13
   14000d816:	sub    rsp,0x50
   14000d81a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000d823:	mov    rax,r8
   14000d826:	mov    rbx,rdx
   14000d829:	mov    rsi,rcx
   14000d82c:	mov    r12,r9
   14000d82f:	sub    r12,r8
   14000d832:	sar    r12,1
   14000d835:	je     0x14000da4d
   14000d83b:	mov    rdx,QWORD PTR [rcx+0x8]
   14000d83f:	sub    rdx,QWORD PTR [rcx]
   14000d842:	sar    rdx,1
   14000d845:	movabs r10,0x7fffffffffffffff
   14000d84f:	mov    rcx,r10
   14000d852:	sub    rcx,rdx
   14000d855:	cmp    rcx,r12
   14000d858:	jae    0x14000d868
   14000d85a:	lea    rcx,[rip+0x430f7]        # 0x140050958
   14000d861:	call   QWORD PTR [rip+0x3bd31]        # 0x140049598
   14000d867:	int3   
   14000d868:	lea    r8,[rdx+r12*1]
   14000d86c:	mov    rdi,QWORD PTR [rsi+0x10]
   14000d870:	sub    rdi,QWORD PTR [rsi]
   14000d873:	sar    rdi,1
   14000d876:	cmp    rdi,r8
   14000d879:	jae    0x14000d98a
   14000d87f:	mov    rcx,rdi
   14000d882:	shr    rcx,1
   14000d885:	mov    rax,r10
   14000d888:	sub    rax,rcx
   14000d88b:	cmp    rax,rdi
   14000d88e:	jae    0x14000d894
   14000d890:	xor    edi,edi
   14000d892:	jmp    0x14000d897
   14000d894:	add    rdi,rcx
   14000d897:	cmp    rdi,r8
   14000d89a:	cmovb  rdi,r8
   14000d89e:	xor    r13d,r13d
   14000d8a1:	mov    QWORD PTR [rsp+0x20],r13
   14000d8a6:	test   rdi,rdi
   14000d8a9:	je     0x14000d905
   14000d8ab:	cmp    rdi,r10
   14000d8ae:	ja     0x14000d8d1
   14000d8b0:	lea    rcx,[rdi+rdi*1]
   14000d8b4:	call   QWORD PTR [rip+0x3bdde]        # 0x140049698
   14000d8ba:	mov    r13,rax
   14000d8bd:	mov    QWORD PTR [rsp+0x20],rax
   14000d8c2:	test   rax,rax
   14000d8c5:	je     0x14000d8d1
   14000d8c7:	mov    rbx,QWORD PTR [rsp+0x88]
   14000d8cf:	jmp    0x14000d905
   14000d8d1:	and    QWORD PTR [rsp+0x20],0x0
   14000d8d7:	lea    rdx,[rsp+0x20]
   14000d8dc:	lea    rcx,[rsp+0x30]
   14000d8e1:	call   QWORD PTR [rip+0x3bfe9]        # 0x1400498d0
   14000d8e7:	lea    r11,[rip+0x3c8ea]        # 0x14004a1d8
   14000d8ee:	mov    QWORD PTR [rsp+0x30],r11
   14000d8f3:	lea    rdx,[rip+0x55e4e]        # 0x140063748
   14000d8fa:	lea    rcx,[rsp+0x30]
   14000d8ff:	call   0x14002b560
   14000d904:	nop
   14000d905:	sub    rbx,QWORD PTR [rsi]
   14000d908:	sar    rbx,1
   14000d90b:	add    rbx,rbx
   14000d90e:	mov    r8,rbx
   14000d911:	mov    rdx,QWORD PTR [rsi]
   14000d914:	mov    rcx,r13
   14000d917:	call   QWORD PTR [rip+0x3bcd3]        # 0x1400495f0
   14000d91d:	lea    r8,[rbx+rax*1]
   14000d921:	mov    rdx,QWORD PTR [rsp+0x98]
   14000d929:	mov    rcx,QWORD PTR [rsp+0x90]
   14000d931:	call   0x14000dad4
   14000d936:	mov    r8,QWORD PTR [rsi+0x8]
   14000d93a:	mov    rdx,QWORD PTR [rsp+0x88]
   14000d942:	sub    r8,rdx
   14000d945:	sar    r8,1
   14000d948:	add    r8,r8
   14000d94b:	mov    rcx,rax
   14000d94e:	call   QWORD PTR [rip+0x3bc9c]        # 0x1400495f0
   14000d954:	nop
   14000d955:	mov    rcx,QWORD PTR [rsi]
   14000d958:	mov    rax,QWORD PTR [rsi+0x8]
   14000d95c:	sub    rax,rcx
   14000d95f:	sar    rax,1
   14000d962:	add    r12,rax
   14000d965:	test   rcx,rcx
   14000d968:	je     0x14000d970
   14000d96a:	call   QWORD PTR [rip+0x3bd08]        # 0x140049678
   14000d970:	lea    rax,[r13+rdi*2+0x0]
   14000d975:	mov    QWORD PTR [rsi+0x10],rax
   14000d979:	lea    rax,[r13+r12*2+0x0]
   14000d97e:	mov    QWORD PTR [rsi+0x8],rax
   14000d982:	mov    QWORD PTR [rsi],r13
   14000d985:	jmp    0x14000da4d
   14000d98a:	mov    r8,QWORD PTR [rsi+0x8]
   14000d98e:	mov    rdx,r9
   14000d991:	mov    rcx,rax
   14000d994:	call   0x14000dad4
   14000d999:	add    r12,r12
   14000d99c:	mov    r8,QWORD PTR [rsi+0x8]
   14000d9a0:	lea    rdi,[r12+r8*1]
   14000d9a4:	mov    r11,QWORD PTR [rsp+0x88]
   14000d9ac:	cmp    r11,r8
   14000d9af:	je     0x14000da49
   14000d9b5:	cmp    r8,rdi
   14000d9b8:	je     0x14000da49
   14000d9be:	sub    r8,r11
   14000d9c1:	sar    r8,1
   14000d9c4:	mov    rcx,rdi
   14000d9c7:	sub    rcx,r11
   14000d9ca:	sar    rcx,1
   14000d9cd:	mov    r9,rcx
   14000d9d0:	mov    r10,r8
   14000d9d3:	test   r8,r8
   14000d9d6:	je     0x14000d9eb
   14000d9d8:	mov    rax,r9
   14000d9db:	cqo    
   14000d9dd:	idiv   r10
   14000d9e0:	mov    r9,r10
   14000d9e3:	mov    r10,rdx
   14000d9e6:	test   rdx,rdx
   14000d9e9:	jne    0x14000d9d8
   14000d9eb:	cmp    r9,rcx
   14000d9ee:	jge    0x14000da49
   14000d9f0:	test   r9,r9
   14000d9f3:	jle    0x14000da49
   14000d9f5:	lea    r10,[r11+r9*2]
   14000d9f9:	mov    r13,r10
   14000d9fc:	lea    rbx,[r10+r8*2]
   14000da00:	cmp    rbx,rdi
   14000da03:	cmove  rbx,r11
   14000da07:	movzx  ecx,WORD PTR [r13+0x0]
   14000da0c:	movzx  eax,WORD PTR [rbx]
   14000da0f:	mov    WORD PTR [r13+0x0],ax
   14000da14:	mov    WORD PTR [rbx],cx
   14000da17:	mov    r13,rbx
   14000da1a:	mov    rdx,rdi
   14000da1d:	sub    rdx,rbx
   14000da20:	sar    rdx,1
   14000da23:	lea    rcx,[rbx+r8*2]
   14000da27:	mov    rax,r8
   14000da2a:	sub    rax,rdx
   14000da2d:	lea    rbx,[r11+rax*2]
   14000da31:	cmp    r8,rdx
   14000da34:	cmovl  rbx,rcx
   14000da38:	cmp    rbx,r10
   14000da3b:	jne    0x14000da07
   14000da3d:	dec    r9
   14000da40:	sub    r10,0x2
   14000da44:	test   r9,r9
   14000da47:	jg     0x14000d9f9
   14000da49:	add    QWORD PTR [rsi+0x8],r12
   14000da4d:	add    rsp,0x50
   14000da51:	pop    r13
   14000da53:	pop    r12
   14000da55:	pop    rdi
   14000da56:	pop    rsi
   14000da57:	pop    rbx
   14000da58:	ret    
   14000da59:	int3   
   14000da5a:	int3   
   14000da5b:	int3   
   14000da5c:	mov    QWORD PTR [rsp+0x18],r8
   14000da61:	push   rsi
   14000da62:	push   rdi
   14000da63:	push   r12
   14000da65:	sub    rsp,0x30
   14000da69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000da72:	mov    QWORD PTR [rsp+0x68],rbx
   14000da77:	mov    rbx,r8
   14000da7a:	mov    rsi,rdx
   14000da7d:	mov    rdi,rcx
   14000da80:	mov    QWORD PTR [rsp+0x50],rbx
   14000da85:	xor    r12d,r12d
   14000da88:	cmp    rdi,rsi
   14000da8b:	je     0x14000dac2
   14000da8d:	mov    QWORD PTR [rsp+0x58],rbx
   14000da92:	test   rbx,rbx
   14000da95:	je     0x14000dab3
   14000da97:	mov    QWORD PTR [rbx+0x18],0x7
   14000da9f:	mov    QWORD PTR [rbx+0x10],r12
   14000daa3:	mov    WORD PTR [rbx],r12w
   14000daa7:	mov    rdx,rdi
   14000daaa:	mov    rcx,rbx
   14000daad:	call   0x140009880
   14000dab2:	nop
   14000dab3:	add    rbx,0x28
   14000dab7:	mov    QWORD PTR [rsp+0x60],rbx
   14000dabc:	add    rdi,0x28
   14000dac0:	jmp    0x14000da88
   14000dac2:	mov    rax,rbx
   14000dac5:	mov    rbx,QWORD PTR [rsp+0x68]
   14000daca:	add    rsp,0x30
   14000dace:	pop    r12
   14000dad0:	pop    rdi
   14000dad1:	pop    rsi
   14000dad2:	ret    
   14000dad3:	int3   
   14000dad4:	mov    QWORD PTR [rsp+0x8],rcx
   14000dad9:	sub    rsp,0x38
   14000dadd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dae6:	cmp    rcx,rdx
   14000dae9:	je     0x14000db06
   14000daeb:	test   r8,r8
   14000daee:	je     0x14000daf7
   14000daf0:	movzx  eax,WORD PTR [rcx]
   14000daf3:	mov    WORD PTR [r8],ax
   14000daf7:	add    r8,0x2
   14000dafb:	add    rcx,0x2
   14000daff:	mov    QWORD PTR [rsp+0x40],rcx
   14000db04:	jmp    0x14000dae6
   14000db06:	mov    rax,r8
   14000db09:	add    rsp,0x38
   14000db0d:	ret    
   14000db0e:	int3   
   14000db0f:	int3   
   14000db10:	sub    rsp,0x28
   14000db14:	mov    DWORD PTR [rsp+0x30],ecx
   14000db18:	lea    rdx,[rip+0x55da9]        # 0x1400638c8
   14000db1f:	lea    rcx,[rsp+0x30]
   14000db24:	call   0x14002b560
   14000db29:	int3   
   14000db2a:	int3   
   14000db2b:	int3   
   14000db2c:	mov    rax,rsp
   14000db2f:	mov    QWORD PTR [rax+0x8],rbx
   14000db33:	mov    QWORD PTR [rax+0x10],rbp
   14000db37:	mov    QWORD PTR [rax+0x18],rsi
   14000db3b:	mov    QWORD PTR [rax+0x20],rdi
   14000db3f:	push   r12
   14000db41:	sub    rsp,0x20
   14000db45:	mov    eax,edx
   14000db47:	mov    esi,edx
   14000db49:	mov    r8d,0x6
   14000db4f:	shr    eax,0x4
   14000db52:	mov    rbp,rcx
   14000db55:	inc    ax
   14000db58:	movzx  edx,ax
   14000db5b:	call   QWORD PTR [rip+0x3b557]        # 0x1400490b8
   14000db61:	xor    ebx,ebx
   14000db63:	mov    r12,rax
   14000db66:	test   rax,rax
   14000db69:	je     0x14000dbc9
   14000db6b:	mov    rdx,rax
   14000db6e:	mov    rcx,rbp
   14000db71:	call   QWORD PTR [rip+0x3b549]        # 0x1400490c0
   14000db77:	test   rax,rax
   14000db7a:	je     0x14000dbc6
   14000db7c:	mov    rcx,rax
   14000db7f:	call   QWORD PTR [rip+0x3b54b]        # 0x1400490d0
   14000db85:	mov    rdi,rax
   14000db88:	test   rax,rax
   14000db8b:	je     0x14000dbc6
   14000db8d:	mov    rdx,r12
   14000db90:	mov    rcx,rbp
   14000db93:	call   QWORD PTR [rip+0x3b52f]        # 0x1400490c8
   14000db99:	mov    r11d,eax
   14000db9c:	add    r11,rdi
   14000db9f:	and    esi,0xf
   14000dba2:	jbe    0x14000dbb5
   14000dba4:	cmp    rdi,r11
   14000dba7:	jae    0x14000dbc6
   14000dba9:	dec    esi
   14000dbab:	movzx  eax,WORD PTR [rdi]
   14000dbae:	lea    rdi,[rdi+rax*2+0x2]
   14000dbb3:	jne    0x14000dba4
   14000dbb5:	cmp    rdi,r11
   14000dbb8:	jae    0x14000dbc6
   14000dbba:	movzx  eax,WORD PTR [rdi]
   14000dbbd:	neg    ax
   14000dbc0:	sbb    rbx,rbx
   14000dbc3:	and    rbx,rdi
   14000dbc6:	mov    rax,rbx
   14000dbc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dbce:	mov    rbp,QWORD PTR [rsp+0x38]
   14000dbd3:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dbd8:	mov    rdi,QWORD PTR [rsp+0x48]
   14000dbdd:	add    rsp,0x20
   14000dbe1:	pop    r12
   14000dbe3:	ret    
   14000dbe4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbe9:	mov    QWORD PTR [rsp+0x10],rbp
   14000dbee:	mov    QWORD PTR [rsp+0x18],rsi
   14000dbf3:	push   rdi
   14000dbf4:	push   r12
   14000dbf6:	push   r13
   14000dbf8:	sub    rsp,0x20
   14000dbfc:	mov    r12d,ecx
   14000dbff:	lea    rcx,[rip+0x5ca0a]        # 0x14006a610
   14000dc06:	xor    edx,edx
   14000dc08:	xor    ebx,ebx
   14000dc0a:	call   0x14002bba0
   14000dc0f:	lea    r13d,[rbx+0x1]
   14000dc13:	mov    ebp,r13d
   14000dc16:	jmp    0x14000dcc1
   14000dc1b:	test   rbx,rbx
   14000dc1e:	jne    0x14000dccd
   14000dc24:	mov    ecx,r12d
   14000dc27:	lea    edx,[rbx+0x6]
   14000dc2a:	xor    r9d,r9d
   14000dc2d:	shr    ecx,0x4
   14000dc30:	add    cx,r13w
   14000dc34:	movzx  r8d,cx
   14000dc38:	mov    rcx,rsi
   14000dc3b:	call   QWORD PTR [rip+0x3b46f]        # 0x1400490b0
   14000dc41:	mov    rbx,rax
   14000dc44:	test   rax,rax
   14000dc47:	je     0x14000dcb0
   14000dc49:	mov    rdx,rax
   14000dc4c:	mov    rcx,rsi
   14000dc4f:	call   QWORD PTR [rip+0x3b46b]        # 0x1400490c0
   14000dc55:	test   rax,rax
   14000dc58:	jne    0x14000dc5e
   14000dc5a:	xor    ebx,ebx
   14000dc5c:	jmp    0x14000dcab
   14000dc5e:	mov    rcx,rax
   14000dc61:	call   QWORD PTR [rip+0x3b469]        # 0x1400490d0
   14000dc67:	mov    rdi,rax
   14000dc6a:	test   rax,rax
   14000dc6d:	je     0x14000dc5a
   14000dc6f:	mov    rdx,rbx
   14000dc72:	mov    rcx,rsi
   14000dc75:	call   QWORD PTR [rip+0x3b44d]        # 0x1400490c8
   14000dc7b:	mov    ecx,r12d
   14000dc7e:	mov    r11d,eax
   14000dc81:	add    r11,rdi
   14000dc84:	and    ecx,0xf
   14000dc87:	jbe    0x14000dc9a
   14000dc89:	cmp    rdi,r11
   14000dc8c:	jae    0x14000dc5a
   14000dc8e:	dec    ecx
   14000dc90:	movzx  eax,WORD PTR [rdi]
   14000dc93:	lea    rdi,[rdi+rax*2+0x2]
   14000dc98:	jne    0x14000dc89
   14000dc9a:	cmp    rdi,r11
   14000dc9d:	jae    0x14000dc5a
   14000dc9f:	movzx  eax,WORD PTR [rdi]
   14000dca2:	neg    ax
   14000dca5:	sbb    rbx,rbx
   14000dca8:	and    rbx,rdi
   14000dcab:	test   rbx,rbx
   14000dcae:	jne    0x14000dce8
   14000dcb0:	lea    rcx,[rip+0x5c959]        # 0x14006a610
   14000dcb7:	mov    edx,ebp
   14000dcb9:	call   0x14002bba0
   14000dcbe:	add    ebp,r13d
   14000dcc1:	mov    rsi,rax
   14000dcc4:	test   rax,rax
   14000dcc7:	jne    0x14000dc1b
   14000dccd:	xor    eax,eax
   14000dccf:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dcd4:	mov    rbp,QWORD PTR [rsp+0x48]
   14000dcd9:	mov    rsi,QWORD PTR [rsp+0x50]
   14000dcde:	add    rsp,0x20
   14000dce2:	pop    r13
   14000dce4:	pop    r12
   14000dce6:	pop    rdi
   14000dce7:	ret    
   14000dce8:	mov    rax,rsi
   14000dceb:	jmp    0x14000dccf
   14000dced:	int3   
   14000dcee:	int3   
   14000dcef:	int3   
   14000dcf0:	mov    rax,rsp
   14000dcf3:	push   rbp
   14000dcf4:	push   r12
   14000dcf6:	push   r13
   14000dcf8:	lea    rbp,[rax-0x5f]
   14000dcfc:	sub    rsp,0xc0
   14000dd03:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000dd0b:	mov    QWORD PTR [rax+0x10],rbx
   14000dd0f:	mov    QWORD PTR [rax+0x18],rsi
   14000dd13:	mov    QWORD PTR [rax+0x20],rdi
   14000dd17:	mov    rax,QWORD PTR [rip+0x5a4d2]        # 0x1400681f0
   14000dd1e:	xor    rax,rsp
   14000dd21:	mov    QWORD PTR [rbp+0x3f],rax
   14000dd25:	mov    r12,rcx
   14000dd28:	xor    r13d,r13d
   14000dd2b:	mov    DWORD PTR [rbp-0x9],r13d
   14000dd2f:	lea    rcx,[rip+0x5a4da]        # 0x140068210
   14000dd36:	mov    rax,QWORD PTR [rip+0x5a4d3]        # 0x140068210
   14000dd3d:	call   QWORD PTR [rax+0x18]
   14000dd40:	lea    rbx,[rax+0x18]
   14000dd44:	mov    QWORD PTR [rbp-0x9],rbx
   14000dd48:	lea    rax,[rip+0x42ba6]        # 0x1400508f5
   14000dd4f:	test   rax,0xffffffffffff0000
   14000dd55:	jne    0x14000dd77
   14000dd57:	movzx  edi,ax
   14000dd5a:	mov    ecx,edi
   14000dd5c:	call   0x14000dbe4
   14000dd61:	test   rax,rax
   14000dd64:	je     0x14000dd84
   14000dd66:	mov    r8d,edi
   14000dd69:	mov    rdx,rax
   14000dd6c:	lea    rcx,[rbp-0x9]
   14000dd70:	call   0x14000e588
   14000dd75:	jmp    0x14000dd80
   14000dd77:	lea    rcx,[rbp-0x9]
   14000dd7b:	call   0x14000e3c0
   14000dd80:	mov    rbx,QWORD PTR [rbp-0x9]
   14000dd84:	lea    rcx,[rbp+0x7]
   14000dd88:	call   QWORD PTR [rip+0x3bc0a]        # 0x140049998
   14000dd8e:	test   eax,eax
   14000dd90:	jne    0x14000ddfd
   14000dd92:	movzx  eax,BYTE PTR [rbp+0x16]
   14000dd96:	movzx  ecx,BYTE PTR [rbp+0x15]
   14000dd9a:	movzx  edx,BYTE PTR [rbp+0x14]
   14000dd9e:	movzx  r8d,BYTE PTR [rbp+0x13]
   14000dda3:	movzx  r10d,BYTE PTR [rbp+0x12]
   14000dda8:	movzx  r11d,BYTE PTR [rbp+0x11]
   14000ddad:	movzx  ebx,BYTE PTR [rbp+0x10]
   14000ddb1:	movzx  edi,BYTE PTR [rbp+0xf]
   14000ddb5:	movzx  esi,WORD PTR [rbp+0xd]
   14000ddb9:	movzx  r9d,WORD PTR [rbp+0xb]
   14000ddbe:	mov    DWORD PTR [rsp+0x60],eax
   14000ddc2:	mov    DWORD PTR [rsp+0x58],ecx
   14000ddc6:	mov    DWORD PTR [rsp+0x50],edx
   14000ddca:	mov    DWORD PTR [rsp+0x48],r8d
   14000ddcf:	mov    DWORD PTR [rsp+0x40],r10d
   14000ddd4:	mov    DWORD PTR [rsp+0x38],r11d
   14000ddd9:	mov    DWORD PTR [rsp+0x30],ebx
   14000dddd:	mov    DWORD PTR [rsp+0x28],edi
   14000dde1:	mov    DWORD PTR [rsp+0x20],esi
   14000dde5:	mov    r8d,DWORD PTR [rbp+0x7]
   14000dde9:	lea    rdx,[rip+0x42e90]        # 0x140050c80
   14000ddf0:	lea    rcx,[rbp-0x9]
   14000ddf4:	call   0x14000e73c
   14000ddf9:	mov    rbx,QWORD PTR [rbp-0x9]
   14000ddfd:	mov    rsi,rbx
   14000de00:	mov    rdi,r13
   14000de03:	cmp    WORD PTR [rbx],r13w
   14000de07:	je     0x14000de84
   14000de09:	movzx  ecx,WORD PTR [rsi]
   14000de0c:	call   QWORD PTR [rip+0x3b8de]        # 0x1400496f0
   14000de12:	test   eax,eax
   14000de14:	je     0x14000de20
   14000de16:	test   rdi,rdi
   14000de19:	jne    0x14000de23
   14000de1b:	mov    rdi,rsi
   14000de1e:	jmp    0x14000de23
   14000de20:	mov    rdi,r13
   14000de23:	add    rsi,0x2
   14000de27:	cmp    WORD PTR [rsi],r13w
   14000de2b:	jne    0x14000de09
   14000de2d:	test   rdi,rdi
   14000de30:	je     0x14000de84
   14000de32:	sub    rdi,rbx
   14000de35:	sar    rdi,1
   14000de38:	test   edi,edi
   14000de3a:	jns    0x14000de47
   14000de3c:	mov    ecx,0x80070057
   14000de41:	call   0x14000db10
   14000de46:	int3   
   14000de47:	mov    ecx,0x1
   14000de4c:	sub    ecx,DWORD PTR [rbx-0x8]
   14000de4f:	mov    eax,DWORD PTR [rbx-0xc]
   14000de52:	sub    eax,edi
   14000de54:	or     eax,ecx
   14000de56:	jge    0x14000de67
   14000de58:	mov    edx,edi
   14000de5a:	lea    rcx,[rbp-0x9]
   14000de5e:	call   0x14000e690
   14000de63:	mov    rbx,QWORD PTR [rbp-0x9]
   14000de67:	cmp    edi,DWORD PTR [rbx-0xc]
   14000de6a:	jg     0x14000de79
   14000de6c:	mov    DWORD PTR [rbx-0x10],edi
   14000de6f:	movsxd rax,edi
   14000de72:	mov    WORD PTR [rbx+rax*2],r13w
   14000de77:	jmp    0x14000de84
   14000de79:	mov    ecx,0x80070057
   14000de7e:	call   0x14000db10
   14000de83:	int3   
   14000de84:	mov    rdi,rbx
   14000de87:	movzx  ecx,WORD PTR [rbx]
   14000de8a:	call   QWORD PTR [rip+0x3b860]        # 0x1400496f0
   14000de90:	test   eax,eax
   14000de92:	je     0x14000df6b
   14000de98:	add    rdi,0x2
   14000de9c:	movzx  ecx,WORD PTR [rdi]
   14000de9f:	call   QWORD PTR [rip+0x3b84b]        # 0x1400496f0
   14000dea5:	test   eax,eax
   14000dea7:	jne    0x14000de98
   14000dea9:	cmp    rdi,rbx
   14000deac:	je     0x14000df6b
   14000deb2:	sub    rdi,rbx
   14000deb5:	sar    rdi,1
   14000deb8:	mov    edx,DWORD PTR [rbx-0x10]
   14000debb:	test   edx,edx
   14000debd:	jns    0x14000deca
   14000debf:	mov    ecx,0x80070057
   14000dec4:	call   0x14000db10
   14000dec9:	int3   
   14000deca:	mov    ecx,0x1
   14000decf:	sub    ecx,DWORD PTR [rbx-0x8]
   14000ded2:	mov    eax,DWORD PTR [rbx-0xc]
   14000ded5:	sub    eax,edx
   14000ded7:	or     eax,ecx
   14000ded9:	jge    0x14000dee8
   14000dedb:	lea    rcx,[rbp-0x9]
   14000dedf:	call   0x14000e690
   14000dee4:	mov    rbx,QWORD PTR [rbp-0x9]
   14000dee8:	movsxd rax,edi
   14000deeb:	lea    r8,[rbx+rax*2]
   14000deef:	mov    ecx,DWORD PTR [rbx-0x10]
   14000def2:	mov    esi,ecx
   14000def4:	sub    esi,edi
   14000def6:	lea    eax,[rsi+0x1]
   14000def9:	movsxd r9,eax
   14000defc:	add    r9,r9
   14000deff:	lea    eax,[rcx+0x1]
   14000df02:	movsxd rdx,eax
   14000df05:	add    rdx,rdx
   14000df08:	mov    rcx,rbx
   14000df0b:	call   QWORD PTR [rip+0x3b7b7]        # 0x1400496c8
   14000df11:	test   eax,eax
   14000df13:	je     0x14000df4a
   14000df15:	cmp    eax,0xc
   14000df18:	je     0x14000df3f
   14000df1a:	cmp    eax,0x16
   14000df1d:	je     0x14000df34
   14000df1f:	cmp    eax,0x22
   14000df22:	je     0x14000df34
   14000df24:	cmp    eax,0x50
   14000df27:	je     0x14000df4a
   14000df29:	mov    ecx,0x80004005
   14000df2e:	call   0x14000db10
   14000df33:	int3   
   14000df34:	mov    ecx,0x80070057
   14000df39:	call   0x14000db10
   14000df3e:	int3   
   14000df3f:	mov    ecx,0x8007000e
   14000df44:	call   0x14000db10
   14000df49:	int3   
   14000df4a:	test   esi,esi
   14000df4c:	js     0x14000df60
   14000df4e:	cmp    esi,DWORD PTR [rbx-0xc]
   14000df51:	jg     0x14000df60
   14000df53:	mov    DWORD PTR [rbx-0x10],esi
   14000df56:	movsxd rax,esi
   14000df59:	mov    WORD PTR [rbx+rax*2],r13w
   14000df5e:	jmp    0x14000df6b
   14000df60:	mov    ecx,0x80070057
   14000df65:	call   0x14000db10
   14000df6a:	int3   
   14000df6b:	cmp    DWORD PTR [rbx-0x8],0x1
   14000df6f:	jle    0x14000df81
   14000df71:	mov    edx,DWORD PTR [rbx-0x10]
   14000df74:	lea    rcx,[rbp-0x9]
   14000df78:	call   0x14000e4c8
   14000df7d:	mov    rbx,QWORD PTR [rbp-0x9]
   14000df81:	mov    QWORD PTR [rbp+0x2f],0x7
   14000df89:	mov    QWORD PTR [rbp+0x27],r13
   14000df8d:	mov    WORD PTR [rbp+0x17],r13w
   14000df92:	mov    rcx,rbx
   14000df95:	call   QWORD PTR [rip+0x3b715]        # 0x1400496b0
   14000df9b:	mov    r8,rax
   14000df9e:	mov    rdx,rbx
   14000dfa1:	lea    rcx,[rbp+0x17]
   14000dfa5:	call   0x1400096cc
   14000dfaa:	nop
   14000dfab:	movsxd rdx,DWORD PTR [rbx-0xc]
   14000dfaf:	mov    rcx,rbx
   14000dfb2:	call   QWORD PTR [rip+0x3b728]        # 0x1400496e0
   14000dfb8:	test   eax,eax
   14000dfba:	js     0x14000e07a
   14000dfc0:	cmp    eax,DWORD PTR [rbx-0xc]
   14000dfc3:	jg     0x14000e07a
   14000dfc9:	mov    DWORD PTR [rbx-0x10],eax
   14000dfcc:	cdqe   
   14000dfce:	mov    WORD PTR [rbx+rax*2],r13w
   14000dfd3:	lea    rdx,[rbx-0x18]
   14000dfd7:	mov    rdi,QWORD PTR [rdx]
   14000dfda:	or     esi,0xffffffff
   14000dfdd:	cmp    DWORD PTR [rdx+0x8],r13d
   14000dfe1:	je     0x14000e02b
   14000dfe3:	cmp    DWORD PTR [rdx+0x10],r13d
   14000dfe7:	jge    0x14000e004
   14000dfe9:	cmp    DWORD PTR [rbx-0xc],r13d
   14000dfed:	jge    0x14000dffa
   14000dfef:	mov    ecx,0x80070057
   14000dff4:	call   0x14000db10
   14000dff9:	int3   
   14000dffa:	mov    DWORD PTR [rbx-0x10],r13d
   14000dffe:	mov    WORD PTR [rbx],r13w
   14000e002:	jmp    0x14000e02b
   14000e004:	mov    eax,esi
   14000e006:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e00b:	add    eax,esi
   14000e00d:	test   eax,eax
   14000e00f:	jg     0x14000e01a
   14000e011:	mov    rcx,QWORD PTR [rdx]
   14000e014:	mov    rax,QWORD PTR [rcx]
   14000e017:	call   QWORD PTR [rax+0x8]
   14000e01a:	mov    rax,QWORD PTR [rdi]
   14000e01d:	mov    rcx,rdi
   14000e020:	call   QWORD PTR [rax+0x18]
   14000e023:	lea    rbx,[rax+0x18]
   14000e027:	mov    QWORD PTR [rbp-0x9],rbx
   14000e02b:	lea    rdx,[rbp+0x17]
   14000e02f:	mov    rcx,r12
   14000e032:	call   0x140009474
   14000e037:	nop
   14000e038:	cmp    QWORD PTR [rbp+0x2f],0x8
   14000e03d:	jb     0x14000e049
   14000e03f:	mov    rcx,QWORD PTR [rbp+0x17]
   14000e043:	call   QWORD PTR [rip+0x3b62f]        # 0x140049678
   14000e049:	mov    QWORD PTR [rbp+0x2f],0x7
   14000e051:	mov    QWORD PTR [rbp+0x27],r13
   14000e055:	mov    WORD PTR [rbp+0x17],r13w
   14000e05a:	lea    rdx,[rbx-0x18]
   14000e05e:	mov    ecx,esi
   14000e060:	lock xadd DWORD PTR [rdx+0x10],ecx
   14000e065:	add    ecx,esi
   14000e067:	test   ecx,ecx
   14000e069:	jg     0x14000e075
   14000e06b:	mov    rcx,QWORD PTR [rdx]
   14000e06e:	mov    r8,QWORD PTR [rcx]
   14000e071:	call   QWORD PTR [r8+0x8]
   14000e075:	mov    rax,r12
   14000e078:	jmp    0x14000e085
   14000e07a:	mov    ecx,0x80070057
   14000e07f:	call   0x14000db10
   14000e084:	nop
   14000e085:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000e089:	xor    rcx,rsp
   14000e08c:	call   0x14002b100
   14000e091:	lea    r11,[rsp+0xc0]
   14000e099:	mov    rbx,QWORD PTR [r11+0x28]
   14000e09d:	mov    rsi,QWORD PTR [r11+0x30]
   14000e0a1:	mov    rdi,QWORD PTR [r11+0x38]
   14000e0a5:	mov    rsp,r11
   14000e0a8:	pop    r13
   14000e0aa:	pop    r12
   14000e0ac:	pop    rbp
   14000e0ad:	ret    
   14000e0ae:	int3   
   14000e0af:	int3   
   14000e0b0:	mov    rax,rsp
   14000e0b3:	push   rbp
   14000e0b4:	push   r12
   14000e0b6:	push   r13
   14000e0b8:	lea    rbp,[rax-0x5f]
   14000e0bc:	sub    rsp,0xe0
   14000e0c3:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14000e0cb:	mov    QWORD PTR [rax+0x10],rbx
   14000e0cf:	mov    QWORD PTR [rax+0x18],rsi
   14000e0d3:	mov    QWORD PTR [rax+0x20],rdi
   14000e0d7:	mov    rax,QWORD PTR [rip+0x5a112]        # 0x1400681f0
   14000e0de:	xor    rax,rsp
   14000e0e1:	mov    QWORD PTR [rbp+0x3f],rax
   14000e0e5:	mov    rdi,rcx
   14000e0e8:	xor    r12d,r12d
   14000e0eb:	mov    DWORD PTR [rbp-0x71],r12d
   14000e0ef:	mov    QWORD PTR [rbp-0x79],0xffffffff80000001
   14000e0f7:	lea    r13d,[r12+0x7]
   14000e0fc:	mov    QWORD PTR [rbp-0x49],r13
   14000e100:	mov    QWORD PTR [rbp-0x51],r12
   14000e104:	mov    WORD PTR [rbp-0x61],r12w
   14000e109:	lea    rcx,[rip+0x429e0]        # 0x140050af0
   14000e110:	call   QWORD PTR [rip+0x3b59a]        # 0x1400496b0
   14000e116:	mov    r8,rax
   14000e119:	lea    rdx,[rip+0x429d0]        # 0x140050af0
   14000e120:	lea    rcx,[rbp-0x61]
   14000e124:	call   0x1400096cc
   14000e129:	nop
   14000e12a:	mov    DWORD PTR [rbp-0x71],0xf003f
   14000e131:	mov    QWORD PTR [rbp-0x21],r13
   14000e135:	mov    QWORD PTR [rbp-0x29],r12
   14000e139:	mov    WORD PTR [rbp-0x39],r12w
   14000e13e:	lea    rcx,[rip+0x42bab]        # 0x140050cf0
   14000e145:	call   QWORD PTR [rip+0x3b565]        # 0x1400496b0
   14000e14b:	mov    r8,rax
   14000e14e:	lea    rdx,[rip+0x42b9b]        # 0x140050cf0
   14000e155:	lea    rcx,[rbp-0x39]
   14000e159:	call   0x1400096cc
   14000e15e:	nop
   14000e15f:	lea    r8,[rbp-0x71]
   14000e163:	lea    rdx,[rbp-0x39]
   14000e167:	lea    rcx,[rbp-0x79]
   14000e16b:	call   0x14001c880
   14000e170:	mov    bl,al
   14000e172:	cmp    QWORD PTR [rbp-0x21],0x8
   14000e177:	jb     0x14000e183
   14000e179:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e17d:	call   QWORD PTR [rip+0x3b4f5]        # 0x140049678
   14000e183:	test   bl,bl
   14000e185:	je     0x14000e30c
   14000e18b:	mov    QWORD PTR [rbp-0x21],r13
   14000e18f:	mov    QWORD PTR [rbp-0x29],r12
   14000e193:	mov    WORD PTR [rbp-0x39],r12w
   14000e198:	lea    rsi,[rip+0x42b99]        # 0x140050d38
   14000e19f:	mov    rcx,rsi
   14000e1a2:	call   QWORD PTR [rip+0x3b508]        # 0x1400496b0
   14000e1a8:	mov    r8,rax
   14000e1ab:	mov    rdx,rsi
   14000e1ae:	lea    rcx,[rbp-0x39]
   14000e1b2:	call   0x1400096cc
   14000e1b7:	nop
   14000e1b8:	mov    rbx,QWORD PTR [rbp-0x79]
   14000e1bc:	test   rbx,rbx
   14000e1bf:	je     0x14000e1d6
   14000e1c1:	lea    r8,[rbp-0x61]
   14000e1c5:	lea    rdx,[rbp-0x39]
   14000e1c9:	lea    rcx,[rbp-0x79]
   14000e1cd:	call   0x14001c930
   14000e1d2:	mov    rbx,QWORD PTR [rbp-0x79]
   14000e1d6:	cmp    QWORD PTR [rbp-0x21],0x8
   14000e1db:	jb     0x14000e1e7
   14000e1dd:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e1e1:	call   QWORD PTR [rip+0x3b491]        # 0x140049678
   14000e1e7:	cmp    QWORD PTR [rbp-0x51],r12
   14000e1eb:	je     0x14000e229
   14000e1ed:	lea    rdx,[rbp-0x61]
   14000e1f1:	mov    rcx,rdi
   14000e1f4:	call   0x140009474
   14000e1f9:	nop
   14000e1fa:	cmp    QWORD PTR [rbp-0x49],0x8
   14000e1ff:	jb     0x14000e20b
   14000e201:	mov    rcx,QWORD PTR [rbp-0x61]
   14000e205:	call   QWORD PTR [rip+0x3b46d]        # 0x140049678
   14000e20b:	mov    QWORD PTR [rbp-0x49],r13
   14000e20f:	mov    QWORD PTR [rbp-0x51],r12
   14000e213:	mov    WORD PTR [rbp-0x61],r12w
   14000e218:	test   rbx,rbx
   14000e21b:	je     0x14000e369
   14000e221:	mov    rcx,rbx
   14000e224:	jmp    0x14000e363
   14000e229:	lea    rcx,[rbp-0x39]
   14000e22d:	call   0x14000dcf0
   14000e232:	nop
   14000e233:	mov    QWORD PTR [rbp+0x7],r13
   14000e237:	mov    QWORD PTR [rbp-0x1],r12
   14000e23b:	mov    WORD PTR [rbp-0x11],r12w
   14000e240:	mov    rcx,rsi
   14000e243:	call   QWORD PTR [rip+0x3b467]        # 0x1400496b0
   14000e249:	mov    r8,rax
   14000e24c:	mov    rdx,rsi
   14000e24f:	lea    rcx,[rbp-0x11]
   14000e253:	call   0x1400096cc
   14000e258:	nop
   14000e259:	lea    rdx,[rbp-0x39]
   14000e25d:	lea    rcx,[rbp+0x17]
   14000e261:	call   0x1400095c4
   14000e266:	nop
   14000e267:	test   rbx,rbx
   14000e26a:	je     0x14000e280
   14000e26c:	mov    r8,rax
   14000e26f:	lea    rdx,[rbp-0x11]
   14000e273:	lea    rcx,[rbp-0x79]
   14000e277:	call   0x14001cba4
   14000e27c:	mov    rbx,QWORD PTR [rbp-0x79]
   14000e280:	cmp    QWORD PTR [rbp+0x2f],0x8
   14000e285:	jb     0x14000e291
   14000e287:	mov    rcx,QWORD PTR [rbp+0x17]
   14000e28b:	call   QWORD PTR [rip+0x3b3e7]        # 0x140049678
   14000e291:	mov    QWORD PTR [rbp+0x2f],r13
   14000e295:	mov    QWORD PTR [rbp+0x27],r12
   14000e299:	mov    WORD PTR [rbp+0x17],r12w
   14000e29e:	cmp    QWORD PTR [rbp+0x7],0x8
   14000e2a3:	jb     0x14000e2af
   14000e2a5:	mov    rcx,QWORD PTR [rbp-0x11]
   14000e2a9:	call   QWORD PTR [rip+0x3b3c9]        # 0x140049678
   14000e2af:	mov    esi,0xf
   14000e2b4:	mov    QWORD PTR [rdi+0x18],rsi
   14000e2b8:	mov    QWORD PTR [rdi+0x10],r12
   14000e2bc:	mov    BYTE PTR [rdi],r12b
   14000e2bf:	lea    rdx,[rbp-0x39]
   14000e2c3:	mov    rcx,rdi
   14000e2c6:	call   0x140004730
   14000e2cb:	nop
   14000e2cc:	cmp    QWORD PTR [rbp-0x21],0x10
   14000e2d1:	jb     0x14000e2dd
   14000e2d3:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e2d7:	call   QWORD PTR [rip+0x3b39b]        # 0x140049678
   14000e2dd:	mov    QWORD PTR [rbp-0x21],rsi
   14000e2e1:	mov    QWORD PTR [rbp-0x29],r12
   14000e2e5:	mov    BYTE PTR [rbp-0x39],r12b
   14000e2e9:	cmp    QWORD PTR [rbp-0x49],0x8
   14000e2ee:	jb     0x14000e2fa
   14000e2f0:	mov    rcx,QWORD PTR [rbp-0x61]
   14000e2f4:	call   QWORD PTR [rip+0x3b37e]        # 0x140049678
   14000e2fa:	mov    QWORD PTR [rbp-0x49],r13
   14000e2fe:	mov    QWORD PTR [rbp-0x51],r12
   14000e302:	mov    WORD PTR [rbp-0x61],r12w
   14000e307:	jmp    0x14000e218
   14000e30c:	mov    esi,0xf
   14000e311:	mov    QWORD PTR [rdi+0x18],rsi
   14000e315:	mov    QWORD PTR [rdi+0x10],r12
   14000e319:	mov    BYTE PTR [rdi],r12b
   14000e31c:	lea    rcx,[rip+0x425d2]        # 0x1400508f5
   14000e323:	call   QWORD PTR [rip+0x3b2df]        # 0x140049608
   14000e329:	mov    r8,rax
   14000e32c:	lea    rdx,[rip+0x425c2]        # 0x1400508f5
   14000e333:	mov    rcx,rdi
   14000e336:	call   0x140005154
   14000e33b:	nop
   14000e33c:	cmp    QWORD PTR [rbp-0x49],0x8
   14000e341:	jb     0x14000e34d
   14000e343:	mov    rcx,QWORD PTR [rbp-0x61]
   14000e347:	call   QWORD PTR [rip+0x3b32b]        # 0x140049678
   14000e34d:	mov    QWORD PTR [rbp-0x49],r13
   14000e351:	mov    QWORD PTR [rbp-0x51],r12
   14000e355:	mov    WORD PTR [rbp-0x61],r12w
   14000e35a:	mov    rcx,QWORD PTR [rbp-0x79]
   14000e35e:	test   rcx,rcx
   14000e361:	je     0x14000e369
   14000e363:	call   QWORD PTR [rip+0x3ac9f]        # 0x140049008
   14000e369:	mov    rax,rdi
   14000e36c:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000e370:	xor    rcx,rsp
   14000e373:	call   0x14002b100
   14000e378:	lea    r11,[rsp+0xe0]
   14000e380:	mov    rbx,QWORD PTR [r11+0x28]
   14000e384:	mov    rsi,QWORD PTR [r11+0x30]
   14000e388:	mov    rdi,QWORD PTR [r11+0x38]
   14000e38c:	mov    rsp,r11
   14000e38f:	pop    r13
   14000e391:	pop    r12
   14000e393:	pop    rbp
   14000e394:	ret    
   14000e395:	int3   
   14000e396:	int3   
   14000e397:	int3   
   14000e398:	sub    rsp,0x28
   14000e39c:	mov    rdx,QWORD PTR [rcx]
   14000e39f:	sub    rdx,0x18
   14000e3a3:	or     eax,0xffffffff
   14000e3a6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e3ab:	dec    eax
   14000e3ad:	test   eax,eax
   14000e3af:	jg     0x14000e3ba
   14000e3b1:	mov    rcx,QWORD PTR [rdx]
   14000e3b4:	mov    rax,QWORD PTR [rcx]
   14000e3b7:	call   QWORD PTR [rax+0x8]
   14000e3ba:	add    rsp,0x28
   14000e3be:	ret    
   14000e3bf:	int3   
   14000e3c0:	mov    rax,rsp
   14000e3c3:	mov    QWORD PTR [rax+0x8],rbx
   14000e3c7:	mov    QWORD PTR [rax+0x10],rsi
   14000e3cb:	push   rdi
   14000e3cc:	sub    rsp,0x30
   14000e3d0:	xor    esi,esi
   14000e3d2:	mov    rbx,rcx
   14000e3d5:	lea    r8,[rip+0x42519]        # 0x1400508f5
   14000e3dc:	mov    DWORD PTR [rax-0x10],esi
   14000e3df:	lea    ecx,[rsi+0x3]
   14000e3e2:	or     r9d,0xffffffff
   14000e3e6:	xor    edx,edx
   14000e3e8:	mov    QWORD PTR [rax-0x18],rsi
   14000e3ec:	call   QWORD PTR [rip+0x3ac3e]        # 0x140049030
   14000e3f2:	mov    edi,eax
   14000e3f4:	lea    eax,[rsi+0x1]
   14000e3f7:	sub    edi,eax
   14000e3f9:	test   edi,edi
   14000e3fb:	jle    0x14000e45c
   14000e3fd:	mov    rcx,QWORD PTR [rbx]
   14000e400:	mov    edx,DWORD PTR [rcx-0xc]
   14000e403:	sub    eax,DWORD PTR [rcx-0x8]
   14000e406:	sub    edx,edi
   14000e408:	or     eax,edx
   14000e40a:	jge    0x14000e416
   14000e40c:	mov    edx,edi
   14000e40e:	mov    rcx,rbx
   14000e411:	call   0x14000e690
   14000e416:	mov    rax,QWORD PTR [rbx]
   14000e419:	xor    edx,edx
   14000e41b:	lea    r8,[rip+0x424d3]        # 0x1400508f5
   14000e422:	lea    ecx,[rdx+0x3]
   14000e425:	or     r9d,0xffffffff
   14000e429:	mov    DWORD PTR [rsp+0x28],edi
   14000e42d:	mov    QWORD PTR [rsp+0x20],rax
   14000e432:	call   QWORD PTR [rip+0x3abf8]        # 0x140049030
   14000e438:	mov    r11,QWORD PTR [rbx]
   14000e43b:	cmp    edi,DWORD PTR [r11-0xc]
   14000e43f:	jg     0x14000e451
   14000e441:	mov    DWORD PTR [r11-0x10],edi
   14000e445:	mov    rax,QWORD PTR [rbx]
   14000e448:	movsxd rcx,edi
   14000e44b:	mov    WORD PTR [rax+rcx*2],si
   14000e44f:	jmp    0x14000e4b2
   14000e451:	mov    ecx,0x80070057
   14000e456:	call   0x14000db10
   14000e45b:	int3   
   14000e45c:	mov    rax,QWORD PTR [rbx]
   14000e45f:	lea    rdx,[rax-0x18]
   14000e463:	mov    rdi,QWORD PTR [rdx]
   14000e466:	cmp    DWORD PTR [rdx+0x8],esi
   14000e469:	je     0x14000e4b2
   14000e46b:	cmp    DWORD PTR [rdx+0x10],esi
   14000e46e:	jge    0x14000e48b
   14000e470:	cmp    DWORD PTR [rax-0xc],esi
   14000e473:	jge    0x14000e480
   14000e475:	mov    ecx,0x80070057
   14000e47a:	call   0x14000db10
   14000e47f:	int3   
   14000e480:	mov    DWORD PTR [rax-0x10],esi
   14000e483:	mov    rax,QWORD PTR [rbx]
   14000e486:	mov    WORD PTR [rax],si
   14000e489:	jmp    0x14000e4b2
   14000e48b:	or     eax,0xffffffff
   14000e48e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e493:	dec    eax
   14000e495:	test   eax,eax
   14000e497:	jg     0x14000e4a2
   14000e499:	mov    rcx,QWORD PTR [rdx]
   14000e49c:	mov    rax,QWORD PTR [rcx]
   14000e49f:	call   QWORD PTR [rax+0x8]
   14000e4a2:	mov    rax,QWORD PTR [rdi]
   14000e4a5:	mov    rcx,rdi
   14000e4a8:	call   QWORD PTR [rax+0x18]
   14000e4ab:	add    rax,0x18
   14000e4af:	mov    QWORD PTR [rbx],rax
   14000e4b2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e4b7:	mov    rax,rbx
   14000e4ba:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e4bf:	add    rsp,0x30
   14000e4c3:	pop    rdi
   14000e4c4:	ret    
   14000e4c5:	int3   
   14000e4c6:	int3   
   14000e4c7:	int3   
   14000e4c8:	mov    rax,rsp
   14000e4cb:	mov    QWORD PTR [rax+0x8],rbx
   14000e4cf:	mov    QWORD PTR [rax+0x10],rbp
   14000e4d3:	mov    QWORD PTR [rax+0x18],rsi
   14000e4d7:	mov    QWORD PTR [rax+0x20],rdi
   14000e4db:	push   r12
   14000e4dd:	sub    rsp,0x20
   14000e4e1:	mov    rbx,QWORD PTR [rcx]
   14000e4e4:	mov    rsi,rcx
   14000e4e7:	mov    edi,edx
   14000e4e9:	mov    rcx,QWORD PTR [rbx-0x18]
   14000e4ed:	mov    r12d,DWORD PTR [rbx-0x10]
   14000e4f1:	mov    rax,QWORD PTR [rcx]
   14000e4f4:	call   QWORD PTR [rax+0x20]
   14000e4f7:	mov    r8d,0x2
   14000e4fd:	mov    edx,edi
   14000e4ff:	mov    r9,QWORD PTR [rax]
   14000e502:	mov    rcx,rax
   14000e505:	call   QWORD PTR [r9]
   14000e508:	mov    rbp,rax
   14000e50b:	test   rax,rax
   14000e50e:	jne    0x14000e516
   14000e510:	call   0x14000e578
   14000e515:	int3   
   14000e516:	cmp    r12d,edi
   14000e519:	mov    r8,rbx
   14000e51c:	cmovl  edi,r12d
   14000e520:	inc    edi
   14000e522:	movsxd rdx,edi
   14000e525:	lea    rdi,[rax+0x18]
   14000e529:	add    rdx,rdx
   14000e52c:	mov    rcx,rdi
   14000e52f:	mov    r9,rdx
   14000e532:	call   QWORD PTR [rip+0x3b148]        # 0x140049680
   14000e538:	mov    DWORD PTR [rbp+0x8],r12d
   14000e53c:	or     eax,0xffffffff
   14000e53f:	lock xadd DWORD PTR [rbx-0x8],eax
   14000e544:	dec    eax
   14000e546:	test   eax,eax
   14000e548:	jg     0x14000e558
   14000e54a:	mov    rcx,QWORD PTR [rbx-0x18]
   14000e54e:	lea    rdx,[rbx-0x18]
   14000e552:	mov    rax,QWORD PTR [rcx]
   14000e555:	call   QWORD PTR [rax+0x8]
   14000e558:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e55d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e562:	mov    QWORD PTR [rsi],rdi
   14000e565:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e56a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e56f:	add    rsp,0x20
   14000e573:	pop    r12
   14000e575:	ret    
   14000e576:	int3   
   14000e577:	int3   
   14000e578:	sub    rsp,0x28
   14000e57c:	mov    ecx,0x8007000e
   14000e581:	call   0x14000db10
   14000e586:	int3   
   14000e587:	int3   
   14000e588:	mov    QWORD PTR [rsp+0x8],rbx
   14000e58d:	mov    QWORD PTR [rsp+0x10],rbp
   14000e592:	mov    QWORD PTR [rsp+0x18],rsi
   14000e597:	push   rdi
   14000e598:	push   r12
   14000e59a:	push   r13
   14000e59c:	sub    rsp,0x20
   14000e5a0:	mov    rax,rdx
   14000e5a3:	mov    rdi,rcx
   14000e5a6:	mov    edx,r8d
   14000e5a9:	mov    rcx,rax
   14000e5ac:	call   0x14000db2c
   14000e5b1:	xor    r13d,r13d
   14000e5b4:	mov    rsi,rax
   14000e5b7:	test   rax,rax
   14000e5ba:	jne    0x14000e5d5
   14000e5bc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e5c1:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e5c6:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e5cb:	add    rsp,0x20
   14000e5cf:	pop    r13
   14000e5d1:	pop    r12
   14000e5d3:	pop    rdi
   14000e5d4:	ret    
   14000e5d5:	movzx  ebx,WORD PTR [rax]
   14000e5d8:	test   ebx,ebx
   14000e5da:	jns    0x14000e5e7
   14000e5dc:	mov    ecx,0x80070057
   14000e5e1:	call   0x14000db10
   14000e5e6:	int3   
   14000e5e7:	mov    rax,QWORD PTR [rdi]
   14000e5ea:	mov    ecx,0x1
   14000e5ef:	sub    ecx,DWORD PTR [rax-0x8]
   14000e5f2:	mov    eax,DWORD PTR [rax-0xc]
   14000e5f5:	sub    eax,ebx
   14000e5f7:	or     ecx,eax
   14000e5f9:	jge    0x14000e605
   14000e5fb:	mov    edx,ebx
   14000e5fd:	mov    rcx,rdi
   14000e600:	call   0x14000e690
   14000e605:	movzx  eax,WORD PTR [rsi]
   14000e608:	mov    rbp,QWORD PTR [rdi]
   14000e60b:	cmp    eax,0xffffffff
   14000e60e:	jne    0x14000e61c
   14000e610:	lea    rcx,[rsi+0x2]
   14000e614:	call   QWORD PTR [rip+0x3b096]        # 0x1400496b0
   14000e61a:	inc    eax
   14000e61c:	lea    r8,[rsi+0x2]
   14000e620:	movsxd r9,eax
   14000e623:	mov    rdx,rbx
   14000e626:	mov    rcx,rbp
   14000e629:	call   QWORD PTR [rip+0x3b0a9]        # 0x1400496d8
   14000e62f:	test   eax,eax
   14000e631:	je     0x14000e668
   14000e633:	cmp    eax,0xc
   14000e636:	je     0x14000e65d
   14000e638:	cmp    eax,0x16
   14000e63b:	je     0x14000e652
   14000e63d:	cmp    eax,0x22
   14000e640:	je     0x14000e652
   14000e642:	cmp    eax,0x50
   14000e645:	je     0x14000e668
   14000e647:	mov    ecx,0x80004005
   14000e64c:	call   0x14000db10
   14000e651:	int3   
   14000e652:	mov    ecx,0x80070057
   14000e657:	call   0x14000db10
   14000e65c:	int3   
   14000e65d:	mov    ecx,0x8007000e
   14000e662:	call   0x14000db10
   14000e667:	int3   
   14000e668:	mov    rcx,QWORD PTR [rdi]
   14000e66b:	cmp    ebx,DWORD PTR [rcx-0xc]
   14000e66e:	jg     0x14000e685
   14000e670:	mov    DWORD PTR [rcx-0x10],ebx
   14000e673:	mov    rcx,QWORD PTR [rdi]
   14000e676:	mov    eax,0x1
   14000e67b:	mov    WORD PTR [rcx+rbx*2],r13w
   14000e680:	jmp    0x14000e5bc
   14000e685:	mov    ecx,0x80070057
   14000e68a:	call   0x14000db10
   14000e68f:	int3   
   14000e690:	sub    rsp,0x28
   14000e694:	mov    rax,QWORD PTR [rcx]
   14000e697:	mov    r8d,edx
   14000e69a:	mov    r9,rcx
   14000e69d:	cmp    DWORD PTR [rax-0x10],edx
   14000e6a0:	cmovg  r8d,DWORD PTR [rax-0x10]
   14000e6a5:	cmp    DWORD PTR [rax-0x8],0x1
   14000e6a9:	jle    0x14000e6b7
   14000e6ab:	mov    edx,r8d
   14000e6ae:	add    rsp,0x28
   14000e6b2:	jmp    0x14000e4c8
   14000e6b7:	mov    ecx,DWORD PTR [rax-0xc]
   14000e6ba:	cmp    ecx,r8d
   14000e6bd:	jge    0x14000e6e9
   14000e6bf:	cmp    ecx,0x40000000
   14000e6c5:	jle    0x14000e6cf
   14000e6c7:	add    ecx,0x100000
   14000e6cd:	jmp    0x14000e6d8
   14000e6cf:	mov    eax,ecx
   14000e6d1:	cdq    
   14000e6d2:	sub    eax,edx
   14000e6d4:	sar    eax,1
   14000e6d6:	add    ecx,eax
   14000e6d8:	cmp    ecx,r8d
   14000e6db:	cmovl  ecx,r8d
   14000e6df:	mov    edx,ecx
   14000e6e1:	mov    rcx,r9
   14000e6e4:	call   0x14000e6f0
   14000e6e9:	add    rsp,0x28
   14000e6ed:	ret    
   14000e6ee:	int3   
   14000e6ef:	int3   
   14000e6f0:	rex push rbx
   14000e6f2:	sub    rsp,0x20
   14000e6f6:	mov    r8d,edx
   14000e6f9:	mov    rdx,QWORD PTR [rcx]
   14000e6fc:	mov    rbx,rcx
   14000e6ff:	sub    rdx,0x18
   14000e703:	mov    rcx,QWORD PTR [rdx]
   14000e706:	cmp    DWORD PTR [rdx+0xc],r8d
   14000e70a:	jge    0x14000e735
   14000e70c:	test   r8d,r8d
   14000e70f:	jle    0x14000e735
   14000e711:	mov    rax,QWORD PTR [rcx]
   14000e714:	mov    r9d,0x2
   14000e71a:	call   QWORD PTR [rax+0x10]
   14000e71d:	test   rax,rax
   14000e720:	jne    0x14000e728
   14000e722:	call   0x14000e578
   14000e727:	int3   
   14000e728:	add    rax,0x18
   14000e72c:	mov    QWORD PTR [rbx],rax
   14000e72f:	add    rsp,0x20
   14000e733:	pop    rbx
   14000e734:	ret    
   14000e735:	call   0x14000e578
   14000e73a:	int3   
   14000e73b:	int3   
   14000e73c:	mov    rax,rsp
   14000e73f:	mov    QWORD PTR [rax+0x10],rdx
   14000e743:	mov    QWORD PTR [rax+0x18],r8
   14000e747:	mov    QWORD PTR [rax+0x20],r9
   14000e74b:	push   rbx
   14000e74c:	push   rbp
   14000e74d:	push   rsi
   14000e74e:	push   rdi
   14000e74f:	push   r12
   14000e751:	sub    rsp,0x20
   14000e755:	xor    ebp,ebp
   14000e757:	mov    rsi,rdx
   14000e75a:	mov    rdi,rcx
   14000e75d:	lea    r12,[rax+0x18]
   14000e761:	test   rdx,rdx
   14000e764:	jne    0x14000e771
   14000e766:	mov    ecx,0x80070057
   14000e76b:	call   0x14000db10
   14000e770:	int3   
   14000e771:	mov    rdx,r12
   14000e774:	mov    rcx,rsi
   14000e777:	call   QWORD PTR [rip+0x3af53]        # 0x1400496d0
   14000e77d:	movsxd rbx,eax
   14000e780:	test   eax,eax
   14000e782:	jns    0x14000e78f
   14000e784:	mov    ecx,0x80004005
   14000e789:	call   0x14000db10
   14000e78e:	int3   
   14000e78f:	mov    rax,QWORD PTR [rdi]
   14000e792:	mov    ecx,0x1
   14000e797:	sub    ecx,DWORD PTR [rax-0x8]
   14000e79a:	mov    eax,DWORD PTR [rax-0xc]
   14000e79d:	sub    eax,ebx
   14000e79f:	or     ecx,eax
   14000e7a1:	jge    0x14000e7ad
   14000e7a3:	mov    edx,ebx
   14000e7a5:	mov    rcx,rdi
   14000e7a8:	call   0x14000e690
   14000e7ad:	mov    rcx,QWORD PTR [rdi]
   14000e7b0:	lea    eax,[rbx+0x1]
   14000e7b3:	mov    r9,r12
   14000e7b6:	movsxd rdx,eax
   14000e7b9:	mov    r8,rsi
   14000e7bc:	call   QWORD PTR [rip+0x3af26]        # 0x1400496e8
   14000e7c2:	mov    r11,QWORD PTR [rdi]
   14000e7c5:	cmp    ebx,DWORD PTR [r11-0xc]
   14000e7c9:	jg     0x14000e7e1
   14000e7cb:	mov    DWORD PTR [r11-0x10],ebx
   14000e7cf:	mov    rax,QWORD PTR [rdi]
   14000e7d2:	mov    WORD PTR [rax+rbx*2],bp
   14000e7d6:	add    rsp,0x20
   14000e7da:	pop    r12
   14000e7dc:	pop    rdi
   14000e7dd:	pop    rsi
   14000e7de:	pop    rbp
   14000e7df:	pop    rbx
   14000e7e0:	ret    
   14000e7e1:	mov    ecx,0x80070057
   14000e7e6:	call   0x14000db10
   14000e7eb:	int3   
   14000e7ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000e7f1:	push   rdi
   14000e7f2:	sub    rsp,0x20
   14000e7f6:	mov    rbx,rcx
   14000e7f9:	call   0x14000f090
   14000e7fe:	cmp    QWORD PTR [rbx+0xc0],0x8
   14000e806:	jb     0x14000e815
   14000e808:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000e80f:	call   QWORD PTR [rip+0x3ae63]        # 0x140049678
   14000e815:	xor    edi,edi
   14000e817:	mov    QWORD PTR [rbx+0xc0],0x7
   14000e822:	mov    QWORD PTR [rbx+0xb8],rdi
   14000e829:	mov    WORD PTR [rbx+0xa8],di
   14000e830:	cmp    QWORD PTR [rbx+0x98],0x8
   14000e838:	jb     0x14000e847
   14000e83a:	mov    rcx,QWORD PTR [rbx+0x80]
   14000e841:	call   QWORD PTR [rip+0x3ae31]        # 0x140049678
   14000e847:	mov    QWORD PTR [rbx+0x98],0x7
   14000e852:	mov    QWORD PTR [rbx+0x90],rdi
   14000e859:	mov    WORD PTR [rbx+0x80],di
   14000e860:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e865:	add    rsp,0x20
   14000e869:	pop    rdi
   14000e86a:	ret    
   14000e86b:	int3   
   14000e86c:	mov    rax,rsp
   14000e86f:	push   rbp
   14000e870:	push   rsi
   14000e871:	push   rdi
   14000e872:	push   r12
   14000e874:	push   r14
   14000e876:	lea    rbp,[rax-0x5f]
   14000e87a:	sub    rsp,0x90
   14000e881:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14000e889:	mov    QWORD PTR [rax+0x20],rbx
   14000e88d:	mov    rax,QWORD PTR [rip+0x5995c]        # 0x1400681f0
   14000e894:	xor    rax,rsp
   14000e897:	mov    QWORD PTR [rbp+0x2f],rax
   14000e89b:	mov    rdi,r8
   14000e89e:	mov    rbx,rdx
   14000e8a1:	mov    rsi,rcx
   14000e8a4:	xor    r14d,r14d
   14000e8a7:	mov    QWORD PTR [rcx],r14
   14000e8aa:	mov    QWORD PTR [rcx+0x8],r14
   14000e8ae:	mov    QWORD PTR [rcx+0x10],r14
   14000e8b2:	xor    edx,edx
   14000e8b4:	lea    r8d,[r14+0x68]
   14000e8b8:	add    rcx,0x18
   14000e8bc:	call   QWORD PTR [rip+0x3ad96]        # 0x140049658
   14000e8c2:	mov    DWORD PTR [rsi+0x18],0x68
   14000e8c9:	or     eax,0xffffffff
   14000e8cc:	mov    DWORD PTR [rsi+0x28],eax
   14000e8cf:	mov    DWORD PTR [rsi+0x38],eax
   14000e8d2:	mov    DWORD PTR [rsi+0x68],eax
   14000e8d5:	mov    DWORD PTR [rsi+0x78],eax
   14000e8d8:	mov    eax,0xffff
   14000e8dd:	mov    WORD PTR [rsi+0x3c],ax
   14000e8e1:	mov    rax,QWORD PTR [rbx+0x10]
   14000e8e5:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e8ea:	jb     0x14000e8ef
   14000e8ec:	mov    rbx,QWORD PTR [rbx]
   14000e8ef:	lea    r9,[rsi+0x18]
   14000e8f3:	xor    r8d,r8d
   14000e8f6:	mov    edx,eax
   14000e8f8:	mov    rcx,rbx
   14000e8fb:	call   QWORD PTR [rip+0x3b057]        # 0x140049958
   14000e901:	test   eax,eax
   14000e903:	jne    0x14000e90c
   14000e905:	xor    al,al
   14000e907:	jmp    0x14000ea51
   14000e90c:	mov    rbx,QWORD PTR [rsi+0x30]
   14000e910:	mov    r12d,0x7
   14000e916:	mov    QWORD PTR [rbp-0x9],r12
   14000e91a:	mov    QWORD PTR [rbp-0x11],r14
   14000e91e:	mov    WORD PTR [rbp-0x21],r14w
   14000e923:	mov    rcx,rbx
   14000e926:	call   QWORD PTR [rip+0x3ad84]        # 0x1400496b0
   14000e92c:	mov    r8,rax
   14000e92f:	mov    rdx,rbx
   14000e932:	lea    rcx,[rbp-0x21]
   14000e936:	call   0x1400096cc
   14000e93b:	nop
   14000e93c:	mov    r9d,DWORD PTR [rsi+0x38]
   14000e940:	xor    r8d,r8d
   14000e943:	lea    rdx,[rbp+0x7]
   14000e947:	lea    rcx,[rbp-0x21]
   14000e94b:	call   0x14000b3d0
   14000e950:	nop
   14000e951:	lea    rcx,[rsi+0x80]
   14000e958:	mov    rdx,rax
   14000e95b:	call   0x140009880
   14000e960:	nop
   14000e961:	cmp    QWORD PTR [rbp+0x1f],0x8
   14000e966:	jb     0x14000e972
   14000e968:	mov    rcx,QWORD PTR [rbp+0x7]
   14000e96c:	call   QWORD PTR [rip+0x3ad06]        # 0x140049678
   14000e972:	mov    QWORD PTR [rbp+0x1f],r12
   14000e976:	mov    QWORD PTR [rbp+0x17],r14
   14000e97a:	mov    WORD PTR [rbp+0x7],r14w
   14000e97f:	cmp    QWORD PTR [rbp-0x9],0x8
   14000e984:	jb     0x14000e990
   14000e986:	mov    rcx,QWORD PTR [rbp-0x21]
   14000e98a:	call   QWORD PTR [rip+0x3ace8]        # 0x140049678
   14000e990:	mov    rbx,QWORD PTR [rsi+0x60]
   14000e994:	mov    QWORD PTR [rbp-0x9],r12
   14000e998:	mov    QWORD PTR [rbp-0x11],r14
   14000e99c:	mov    WORD PTR [rbp-0x21],r14w
   14000e9a1:	mov    rcx,rbx
   14000e9a4:	call   QWORD PTR [rip+0x3ad06]        # 0x1400496b0
   14000e9aa:	mov    r8,rax
   14000e9ad:	mov    rdx,rbx
   14000e9b0:	lea    rcx,[rbp-0x21]
   14000e9b4:	call   0x1400096cc
   14000e9b9:	nop
   14000e9ba:	mov    r9d,DWORD PTR [rsi+0x68]
   14000e9be:	xor    r8d,r8d
   14000e9c1:	lea    rdx,[rbp+0x7]
   14000e9c5:	lea    rcx,[rbp-0x21]
   14000e9c9:	call   0x14000b3d0
   14000e9ce:	nop
   14000e9cf:	lea    rcx,[rsi+0xa8]
   14000e9d6:	mov    rdx,rax
   14000e9d9:	call   0x140009880
   14000e9de:	nop
   14000e9df:	cmp    QWORD PTR [rbp+0x1f],0x8
   14000e9e4:	jb     0x14000e9f0
   14000e9e6:	mov    rcx,QWORD PTR [rbp+0x7]
   14000e9ea:	call   QWORD PTR [rip+0x3ac88]        # 0x140049678
   14000e9f0:	mov    QWORD PTR [rbp+0x1f],r12
   14000e9f4:	mov    QWORD PTR [rbp+0x17],r14
   14000e9f8:	mov    WORD PTR [rbp+0x7],r14w
   14000e9fd:	cmp    QWORD PTR [rbp-0x9],0x8
   14000ea02:	jb     0x14000ea0e
   14000ea04:	mov    rcx,QWORD PTR [rbp-0x21]
   14000ea08:	call   QWORD PTR [rip+0x3ac6a]        # 0x140049678
   14000ea0e:	cmp    QWORD PTR [rdi+0x18],0x8
   14000ea13:	jb     0x14000ea18
   14000ea15:	mov    rdi,QWORD PTR [rdi]
   14000ea18:	mov    DWORD PTR [rsp+0x20],r14d
   14000ea1d:	xor    r9d,r9d
   14000ea20:	xor    r8d,r8d
   14000ea23:	xor    edx,edx
   14000ea25:	mov    rcx,rdi
   14000ea28:	call   QWORD PTR [rip+0x3af52]        # 0x140049980
   14000ea2e:	mov    QWORD PTR [rsi],rax
   14000ea31:	test   rax,rax
   14000ea34:	je     0x14000e905
   14000ea3a:	lea    rdx,[rip+0x2f1b]        # 0x14001195c
   14000ea41:	test   rdx,rdx
   14000ea44:	je     0x14000ea4f
   14000ea46:	mov    rcx,rax
   14000ea49:	call   QWORD PTR [rip+0x3af29]        # 0x140049978
   14000ea4f:	mov    al,0x1
   14000ea51:	mov    rcx,QWORD PTR [rbp+0x2f]
   14000ea55:	xor    rcx,rsp
   14000ea58:	call   0x14002b100
   14000ea5d:	mov    rbx,QWORD PTR [rsp+0xd8]
   14000ea65:	add    rsp,0x90
   14000ea6c:	pop    r14
   14000ea6e:	pop    r12
   14000ea70:	pop    rdi
   14000ea71:	pop    rsi
   14000ea72:	pop    rbp
   14000ea73:	ret    
   14000ea74:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea79:	push   rdi
   14000ea7a:	sub    rsp,0x40
   14000ea7e:	lea    rdx,[rcx+0x80]
   14000ea85:	mov    rbx,rcx
   14000ea88:	cmp    QWORD PTR [rdx+0x18],0x8
   14000ea8d:	jb     0x14000ea92
   14000ea8f:	mov    rdx,QWORD PTR [rdx]
   14000ea92:	movzx  r8d,WORD PTR [rcx+0x3c]
   14000ea97:	mov    rcx,QWORD PTR [rcx]
   14000ea9a:	xor    edi,edi
   14000ea9c:	mov    QWORD PTR [rsp+0x38],rdi
   14000eaa1:	mov    DWORD PTR [rsp+0x30],edi
   14000eaa5:	xor    r9d,r9d
   14000eaa8:	mov    DWORD PTR [rsp+0x28],0x3
   14000eab0:	mov    QWORD PTR [rsp+0x20],rdi
   14000eab5:	call   QWORD PTR [rip+0x3ae8d]        # 0x140049948
   14000eabb:	mov    QWORD PTR [rbx+0x8],rax
   14000eabf:	test   rax,rax
   14000eac2:	je     0x14000eb13
   14000eac4:	lea    r8,[rbx+0xa8]
   14000eacb:	cmp    QWORD PTR [r8+0x18],0x8
   14000ead0:	jb     0x14000ead5
   14000ead2:	mov    r8,QWORD PTR [r8]
   14000ead5:	cmp    DWORD PTR [rbx+0x2c],0x4
   14000ead9:	mov    QWORD PTR [rsp+0x38],rdi
   14000eade:	mov    ecx,edi
   14000eae0:	mov    edx,0x800000
   14000eae5:	cmove  ecx,edx
   14000eae8:	lea    rdx,[rip+0x42259]        # 0x140050d48
   14000eaef:	xor    r9d,r9d
   14000eaf2:	mov    DWORD PTR [rsp+0x30],ecx
   14000eaf6:	mov    rcx,rax
   14000eaf9:	mov    QWORD PTR [rsp+0x28],rdi
   14000eafe:	mov    QWORD PTR [rsp+0x20],rdi
   14000eb03:	call   QWORD PTR [rip+0x3ae27]        # 0x140049930
   14000eb09:	test   rax,rax
   14000eb0c:	mov    QWORD PTR [rbx+0x10],rax
   14000eb10:	setne  al
   14000eb13:	mov    rbx,QWORD PTR [rsp+0x50]
   14000eb18:	add    rsp,0x40
   14000eb1c:	pop    rdi
   14000eb1d:	ret    
   14000eb1e:	int3   
   14000eb1f:	int3   
   14000eb20:	mov    QWORD PTR [rsp+0x18],rbx
   14000eb25:	mov    QWORD PTR [rsp+0x20],rbp
   14000eb2a:	push   rsi
   14000eb2b:	push   rdi
   14000eb2c:	push   r12
   14000eb2e:	sub    rsp,0x30
   14000eb32:	cmp    QWORD PTR [rdx+0x18],0x8
   14000eb37:	mov    rbp,r9
   14000eb3a:	mov    r12,r8
   14000eb3d:	mov    rbx,rdx
   14000eb40:	mov    rsi,rcx
   14000eb43:	jb     0x14000eb48
   14000eb45:	mov    rdx,QWORD PTR [rdx]
   14000eb48:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb4c:	mov    DWORD PTR [rsp+0x20],r9d
   14000eb51:	mov    r9,r8
   14000eb54:	mov    r8d,DWORD PTR [rbx+0x10]
   14000eb58:	call   QWORD PTR [rip+0x3ade2]        # 0x140049940
   14000eb5e:	mov    edi,eax
   14000eb60:	test   eax,eax
   14000eb62:	jne    0x14000ebd6
   14000eb64:	call   QWORD PTR [rip+0x3a56e]        # 0x1400490d8
   14000eb6a:	cmp    eax,0x2f0d
   14000eb6f:	jne    0x14000ebd6
   14000eb71:	mov    rcx,QWORD PTR [rsi+0x10]
   14000eb75:	mov    edi,0x1f
   14000eb7a:	lea    r9,[rsp+0x58]
   14000eb7f:	lea    r8,[rsp+0x50]
   14000eb84:	mov    edx,edi
   14000eb86:	mov    DWORD PTR [rsp+0x58],0x4
   14000eb8e:	call   QWORD PTR [rip+0x3add4]        # 0x140049968
   14000eb94:	mov    rcx,QWORD PTR [rsi+0x10]
   14000eb98:	bts    DWORD PTR [rsp+0x50],0x8
   14000eb9e:	lea    r9d,[rdi-0x1b]
   14000eba2:	lea    r8,[rsp+0x50]
   14000eba7:	mov    edx,edi
   14000eba9:	call   QWORD PTR [rip+0x3ad89]        # 0x140049938
   14000ebaf:	cmp    QWORD PTR [rbx+0x18],0x8
   14000ebb4:	mov    r11,QWORD PTR [rbx+0x10]
   14000ebb8:	jb     0x14000ebbd
   14000ebba:	mov    rbx,QWORD PTR [rbx]
   14000ebbd:	mov    rcx,QWORD PTR [rsi+0x10]
   14000ebc1:	mov    r9,r12
   14000ebc4:	mov    r8d,r11d
   14000ebc7:	mov    rdx,rbx
   14000ebca:	mov    DWORD PTR [rsp+0x20],ebp
   14000ebce:	call   QWORD PTR [rip+0x3ad6c]        # 0x140049940
   14000ebd4:	mov    edi,eax
   14000ebd6:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ebdb:	mov    rbp,QWORD PTR [rsp+0x68]
   14000ebe0:	test   edi,edi
   14000ebe2:	setne  al
   14000ebe5:	add    rsp,0x30
   14000ebe9:	pop    r12
   14000ebeb:	pop    rdi
   14000ebec:	pop    rsi
   14000ebed:	ret    
   14000ebee:	int3   
   14000ebef:	int3   
   14000ebf0:	mov    QWORD PTR [rsp+0x10],rdx
   14000ebf5:	mov    QWORD PTR [rsp+0x8],rcx
   14000ebfa:	push   rbx
   14000ebfb:	push   rsi
   14000ebfc:	push   rdi
   14000ebfd:	sub    rsp,0x50
   14000ec01:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000ec0a:	and    DWORD PTR [rsp+0x20],0x0
   14000ec0f:	and    QWORD PTR [rsp+0x28],0x0
   14000ec15:	and    DWORD PTR [rsp+0x80],0x0
   14000ec1d:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ec22:	xor    r9d,r9d
   14000ec25:	xor    r8d,r8d
   14000ec28:	lea    rdx,[rsp+0x80]
   14000ec30:	mov    rcx,QWORD PTR [rsi+0x10]
   14000ec34:	call   QWORD PTR [rip+0x3ad26]        # 0x140049960
   14000ec3a:	mov    ebx,eax
   14000ec3c:	mov    DWORD PTR [rsp+0x88],eax
   14000ec43:	test   eax,eax
   14000ec45:	je     0x14000ecee
   14000ec4b:	mov    ecx,DWORD PTR [rsp+0x80]
   14000ec52:	inc    ecx
   14000ec54:	call   0x14002b058
   14000ec59:	mov    rdi,rax
   14000ec5c:	mov    QWORD PTR [rsp+0x28],rax
   14000ec61:	mov    r8d,DWORD PTR [rsp+0x80]
   14000ec69:	inc    r8d
   14000ec6c:	xor    edx,edx
   14000ec6e:	mov    rcx,rax
   14000ec71:	call   QWORD PTR [rip+0x3a9e1]        # 0x140049658
   14000ec77:	lea    r9,[rsp+0x20]
   14000ec7c:	mov    r8d,DWORD PTR [rsp+0x80]
   14000ec84:	mov    rdx,rdi
   14000ec87:	mov    rcx,QWORD PTR [rsi+0x10]
   14000ec8b:	call   QWORD PTR [rip+0x3acbf]        # 0x140049950
   14000ec91:	mov    ebx,eax
   14000ec93:	mov    DWORD PTR [rsp+0x88],eax
   14000ec9a:	test   eax,eax
   14000ec9c:	jne    0x14000eca7
   14000ec9e:	and    DWORD PTR [rsp+0x80],eax
   14000eca5:	jmp    0x14000ecc3
   14000eca7:	mov    eax,DWORD PTR [rsp+0x80]
   14000ecae:	test   eax,eax
   14000ecb0:	je     0x14000ecc3
   14000ecb2:	mov    r8d,eax
   14000ecb5:	mov    rdx,rdi
   14000ecb8:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ecbd:	call   0x140009290
   14000ecc2:	nop
   14000ecc3:	jmp    0x14000ecd1
   14000ecc5:	mov    rdi,QWORD PTR [rsp+0x28]
   14000ecca:	mov    ebx,DWORD PTR [rsp+0x88]
   14000ecd1:	mov    rcx,rdi
   14000ecd4:	call   QWORD PTR [rip+0x3a98e]        # 0x140049668
   14000ecda:	and    QWORD PTR [rsp+0x28],0x0
   14000ece0:	cmp    DWORD PTR [rsp+0x80],0x0
   14000ece8:	ja     0x14000ec15
   14000ecee:	test   ebx,ebx
   14000ecf0:	setne  al
   14000ecf3:	add    rsp,0x50
   14000ecf7:	pop    rdi
   14000ecf8:	pop    rsi
   14000ecf9:	pop    rbx
   14000ecfa:	ret    
   14000ecfb:	int3   
   14000ecfc:	mov    rax,rsp
   14000ecff:	push   rbp
   14000ed00:	push   rdi
   14000ed01:	push   r12
   14000ed03:	push   r13
   14000ed05:	push   r14
   14000ed07:	lea    rbp,[rax-0x68]
   14000ed0b:	sub    rsp,0x140
   14000ed12:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000ed1b:	mov    QWORD PTR [rax+0x18],rbx
   14000ed1f:	mov    QWORD PTR [rax+0x20],rsi
   14000ed23:	mov    rax,QWORD PTR [rip+0x594c6]        # 0x1400681f0
   14000ed2a:	xor    rax,rsp
   14000ed2d:	mov    QWORD PTR [rbp+0x38],rax
   14000ed31:	mov    rsi,rdx
   14000ed34:	mov    rdi,rcx
   14000ed37:	xor    r12d,r12d
   14000ed3a:	mov    DWORD PTR [rsp+0x30],r12d
   14000ed3f:	mov    DWORD PTR [rsp+0x34],r12d
   14000ed44:	mov    DWORD PTR [rsp+0x38],0x4
   14000ed4c:	mov    QWORD PTR [rsp+0x20],r12
   14000ed51:	lea    r9,[rsp+0x38]
   14000ed56:	lea    r8,[rsp+0x34]
   14000ed5b:	mov    edx,0x20000013
   14000ed60:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ed64:	call   QWORD PTR [rip+0x3abbe]        # 0x140049928
   14000ed6a:	test   eax,eax
   14000ed6c:	je     0x14000f065
   14000ed72:	cmp    DWORD PTR [rsp+0x34],0xc8
   14000ed7a:	jne    0x14000f065
   14000ed80:	mov    QWORD PTR [rsp+0x20],r12
   14000ed85:	lea    r9,[rsp+0x30]
   14000ed8a:	xor    r8d,r8d
   14000ed8d:	lea    r14d,[r12+0x16]
   14000ed92:	mov    edx,r14d
   14000ed95:	mov    rcx,QWORD PTR [rdi+0x10]
   14000ed99:	call   QWORD PTR [rip+0x3ab89]        # 0x140049928
   14000ed9f:	mov    eax,DWORD PTR [rsp+0x30]
   14000eda3:	test   eax,eax
   14000eda5:	je     0x14000f065
   14000edab:	lea    ecx,[rax+0x1]
   14000edae:	lea    eax,[r12+0x2]
   14000edb3:	mul    rcx
   14000edb6:	lea    r13,[r12-0x1]
   14000edbb:	cmovo  rax,r13
   14000edbf:	mov    rcx,rax
   14000edc2:	call   0x14002b058
   14000edc7:	mov    rbx,rax
   14000edca:	mov    r8d,DWORD PTR [rsp+0x30]
   14000edcf:	inc    r8d
   14000edd2:	add    r8,r8
   14000edd5:	xor    edx,edx
   14000edd7:	mov    rcx,rax
   14000edda:	call   QWORD PTR [rip+0x3a878]        # 0x140049658
   14000ede0:	mov    QWORD PTR [rsp+0x20],r12
   14000ede5:	lea    r9,[rsp+0x30]
   14000edea:	mov    r8,rbx
   14000eded:	mov    edx,r14d
   14000edf0:	mov    rcx,QWORD PTR [rdi+0x10]
   14000edf4:	call   QWORD PTR [rip+0x3ab2e]        # 0x140049928
   14000edfa:	test   eax,eax
   14000edfc:	je     0x14000f065
   14000ee02:	mov    QWORD PTR [rsp+0x60],0x7
   14000ee0b:	mov    QWORD PTR [rsp+0x58],r12
   14000ee10:	mov    WORD PTR [rsp+0x48],r12w
   14000ee16:	mov    rcx,rbx
   14000ee19:	call   QWORD PTR [rip+0x3a891]        # 0x1400496b0
   14000ee1f:	mov    r8,rax
   14000ee22:	mov    rdx,rbx
   14000ee25:	lea    rcx,[rsp+0x48]
   14000ee2a:	call   0x1400096cc
   14000ee2f:	nop
   14000ee30:	mov    rcx,rbx
   14000ee33:	call   QWORD PTR [rip+0x3a82f]        # 0x140049668
   14000ee39:	lea    rdi,[rip+0x41f34]        # 0x140050d74
   14000ee40:	mov    rcx,rdi
   14000ee43:	call   QWORD PTR [rip+0x3a867]        # 0x1400496b0
   14000ee49:	mov    r8,rax
   14000ee4c:	mov    rdx,rdi
   14000ee4f:	lea    rcx,[rsp+0x48]
   14000ee54:	call   0x14000f0dc
   14000ee59:	cmp    rax,r13
   14000ee5c:	je     0x14000f04e
   14000ee62:	lea    r14,[rip+0x41f13]        # 0x140050d7c
   14000ee69:	mov    rcx,rdi
   14000ee6c:	call   QWORD PTR [rip+0x3a83e]        # 0x1400496b0
   14000ee72:	mov    r8,rax
   14000ee75:	mov    rdx,rdi
   14000ee78:	lea    rcx,[rsp+0x48]
   14000ee7d:	call   0x14000f0dc
   14000ee82:	mov    r9,rax
   14000ee85:	xor    r8d,r8d
   14000ee88:	lea    rdx,[rbp-0x68]
   14000ee8c:	lea    rcx,[rsp+0x48]
   14000ee91:	call   0x14000b3d0
   14000ee96:	nop
   14000ee97:	mov    rcx,r14
   14000ee9a:	call   QWORD PTR [rip+0x3a810]        # 0x1400496b0
   14000eea0:	mov    r8,rax
   14000eea3:	mov    rdx,r14
   14000eea6:	lea    rcx,[rbp-0x68]
   14000eeaa:	call   0x14000f0dc
   14000eeaf:	cmp    rax,r13
   14000eeb2:	je     0x14000efc3
   14000eeb8:	mov    rcx,r14
   14000eebb:	call   QWORD PTR [rip+0x3a7ef]        # 0x1400496b0
   14000eec1:	mov    r8,rax
   14000eec4:	mov    rdx,r14
   14000eec7:	lea    rcx,[rbp-0x68]
   14000eecb:	call   0x14000f0dc
   14000eed0:	mov    r9,rax
   14000eed3:	xor    r8d,r8d
   14000eed6:	lea    rdx,[rbp+0x10]
   14000eeda:	lea    rcx,[rbp-0x68]
   14000eede:	call   0x14000b3d0
   14000eee3:	nop
   14000eee4:	lea    rcx,[rbp+0x10]
   14000eee8:	call   0x14001d0e8
   14000eeed:	mov    rcx,r14
   14000eef0:	call   QWORD PTR [rip+0x3a7ba]        # 0x1400496b0
   14000eef6:	mov    r8,rax
   14000eef9:	mov    rdx,r14
   14000eefc:	lea    rcx,[rbp-0x68]
   14000ef00:	call   0x14000f0dc
   14000ef05:	lea    r8,[rax+0x1]
   14000ef09:	mov    r9,r13
   14000ef0c:	lea    rdx,[rsp+0x70]
   14000ef11:	lea    rcx,[rbp-0x68]
   14000ef15:	call   0x14000b3d0
   14000ef1a:	nop
   14000ef1b:	lea    rcx,[rsp+0x70]
   14000ef20:	call   0x14001d0e8
   14000ef25:	lea    rdx,[rsp+0x70]
   14000ef2a:	lea    rcx,[rbp-0x18]
   14000ef2e:	call   0x140009474
   14000ef33:	mov    rbx,rax
   14000ef36:	lea    rdx,[rbp+0x10]
   14000ef3a:	lea    rcx,[rbp-0x40]
   14000ef3e:	call   0x140009474
   14000ef43:	nop
   14000ef44:	mov    rdx,rax
   14000ef47:	mov    rcx,rsi
   14000ef4a:	call   0x140002fec
   14000ef4f:	mov    rdx,rbx
   14000ef52:	mov    rcx,rax
   14000ef55:	call   0x140004730
   14000ef5a:	nop
   14000ef5b:	cmp    QWORD PTR [rbp-0x28],0x10
   14000ef60:	jb     0x14000ef6c
   14000ef62:	mov    rcx,QWORD PTR [rbp-0x40]
   14000ef66:	call   QWORD PTR [rip+0x3a70c]        # 0x140049678
   14000ef6c:	mov    QWORD PTR [rbp-0x28],0xf
   14000ef74:	mov    QWORD PTR [rbp-0x30],r12
   14000ef78:	mov    BYTE PTR [rbp-0x40],r12b
   14000ef7c:	cmp    QWORD PTR [rbp+0x0],0x10
   14000ef81:	jb     0x14000ef8e
   14000ef83:	mov    rcx,QWORD PTR [rbp-0x18]
   14000ef87:	call   QWORD PTR [rip+0x3a6eb]        # 0x140049678
   14000ef8d:	nop
   14000ef8e:	cmp    QWORD PTR [rbp-0x78],0x8
   14000ef93:	jb     0x14000efa0
   14000ef95:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ef9a:	call   QWORD PTR [rip+0x3a6d8]        # 0x140049678
   14000efa0:	mov    QWORD PTR [rbp-0x78],0x7
   14000efa8:	mov    QWORD PTR [rbp-0x80],r12
   14000efac:	mov    WORD PTR [rsp+0x70],r12w
   14000efb2:	cmp    QWORD PTR [rbp+0x28],0x8
   14000efb7:	jb     0x14000efc3
   14000efb9:	mov    rcx,QWORD PTR [rbp+0x10]
   14000efbd:	call   QWORD PTR [rip+0x3a6b5]        # 0x140049678
   14000efc3:	mov    rcx,rdi
   14000efc6:	call   QWORD PTR [rip+0x3a6e4]        # 0x1400496b0
   14000efcc:	mov    r8,rax
   14000efcf:	mov    rdx,rdi
   14000efd2:	lea    rcx,[rsp+0x48]
   14000efd7:	call   0x14000f0dc
   14000efdc:	lea    r8,[rax+0x2]
   14000efe0:	mov    r9,r13
   14000efe3:	lea    rdx,[rbp-0x18]
   14000efe7:	lea    rcx,[rsp+0x48]
   14000efec:	call   0x14000b3d0
   14000eff1:	nop
   14000eff2:	mov    rdx,rax
   14000eff5:	lea    rcx,[rsp+0x48]
   14000effa:	call   0x140009880
   14000efff:	nop
   14000f000:	cmp    QWORD PTR [rbp+0x0],0x8
   14000f005:	jb     0x14000f011
   14000f007:	mov    rcx,QWORD PTR [rbp-0x18]
   14000f00b:	call   QWORD PTR [rip+0x3a667]        # 0x140049678
   14000f011:	mov    rcx,rdi
   14000f014:	call   QWORD PTR [rip+0x3a696]        # 0x1400496b0
   14000f01a:	nop
   14000f01b:	cmp    QWORD PTR [rbp-0x50],0x8
   14000f020:	jb     0x14000f02c
   14000f022:	mov    rcx,QWORD PTR [rbp-0x68]
   14000f026:	call   QWORD PTR [rip+0x3a64c]        # 0x140049678
   14000f02c:	mov    rcx,rdi
   14000f02f:	call   QWORD PTR [rip+0x3a67b]        # 0x1400496b0
   14000f035:	mov    r8,rax
   14000f038:	mov    rdx,rdi
   14000f03b:	lea    rcx,[rsp+0x48]
   14000f040:	call   0x14000f0dc
   14000f045:	cmp    rax,r13
   14000f048:	jne    0x14000ee69
   14000f04e:	cmp    QWORD PTR [rsp+0x60],0x8
   14000f054:	jb     0x14000f061
   14000f056:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f05b:	call   QWORD PTR [rip+0x3a617]        # 0x140049678
   14000f061:	mov    al,0x1
   14000f063:	jmp    0x14000f067
   14000f065:	xor    al,al
   14000f067:	mov    rcx,QWORD PTR [rbp+0x38]
   14000f06b:	xor    rcx,rsp
   14000f06e:	call   0x14002b100
   14000f073:	lea    r11,[rsp+0x140]
   14000f07b:	mov    rbx,QWORD PTR [r11+0x40]
   14000f07f:	mov    rsi,QWORD PTR [r11+0x48]
   14000f083:	mov    rsp,r11
   14000f086:	pop    r14
   14000f088:	pop    r13
   14000f08a:	pop    r12
   14000f08c:	pop    rdi
   14000f08d:	pop    rbp
   14000f08e:	ret    
   14000f08f:	int3   
   14000f090:	rex push rbx
   14000f092:	sub    rsp,0x20
   14000f096:	mov    rbx,rcx
   14000f099:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f09d:	test   rcx,rcx
   14000f0a0:	je     0x14000f0ad
   14000f0a2:	call   QWORD PTR [rip+0x3a8c8]        # 0x140049970
   14000f0a8:	and    QWORD PTR [rbx+0x10],0x0
   14000f0ad:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f0b1:	test   rcx,rcx
   14000f0b4:	je     0x14000f0c1
   14000f0b6:	call   QWORD PTR [rip+0x3a8b4]        # 0x140049970
   14000f0bc:	and    QWORD PTR [rbx+0x8],0x0
   14000f0c1:	mov    rcx,QWORD PTR [rbx]
   14000f0c4:	test   rcx,rcx
   14000f0c7:	je     0x14000f0d3
   14000f0c9:	call   QWORD PTR [rip+0x3a8a1]        # 0x140049970
   14000f0cf:	and    QWORD PTR [rbx],0x0
   14000f0d3:	add    rsp,0x20
   14000f0d7:	pop    rbx
   14000f0d8:	ret    
   14000f0d9:	int3   
   14000f0da:	int3   
   14000f0db:	int3   
   14000f0dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000f0e1:	mov    QWORD PTR [rsp+0x10],rsi
   14000f0e6:	mov    QWORD PTR [rsp+0x18],rdi
   14000f0eb:	mov    r10,r8
   14000f0ee:	mov    rsi,rdx
   14000f0f1:	mov    r9,rcx
   14000f0f4:	test   r8,r8
   14000f0f7:	jne    0x14000f100
   14000f0f9:	xor    eax,eax
   14000f0fb:	jmp    0x14000f1b8
   14000f100:	mov    r8,QWORD PTR [rcx+0x10]
   14000f104:	test   r8,r8
   14000f107:	je     0x14000f1b4
   14000f10d:	cmp    r10,r8
   14000f110:	ja     0x14000f1b4
   14000f116:	mov    eax,0x1
   14000f11b:	sub    rax,r10
   14000f11e:	add    r8,rax
   14000f121:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f126:	jb     0x14000f12d
   14000f128:	mov    rdi,QWORD PTR [rcx]
   14000f12b:	jmp    0x14000f130
   14000f12d:	mov    rdi,rcx
   14000f130:	mov    rax,r8
   14000f133:	mov    rdx,rdi
   14000f136:	test   r8,r8
   14000f139:	je     0x14000f14c
   14000f13b:	movzx  ecx,WORD PTR [rsi]
   14000f13e:	cmp    WORD PTR [rdx],cx
   14000f141:	je     0x14000f14e
   14000f143:	add    rdx,0x2
   14000f147:	dec    rax
   14000f14a:	jne    0x14000f13e
   14000f14c:	xor    edx,edx
   14000f14e:	test   rdx,rdx
   14000f151:	je     0x14000f1b4
   14000f153:	mov    rbx,r10
   14000f156:	mov    rcx,rsi
   14000f159:	mov    r11,rdx
   14000f15c:	test   r10,r10
   14000f15f:	je     0x14000f177
   14000f161:	movzx  eax,WORD PTR [rcx]
   14000f164:	cmp    WORD PTR [r11],ax
   14000f168:	jne    0x14000f196
   14000f16a:	add    r11,0x2
   14000f16e:	add    rcx,0x2
   14000f172:	dec    rbx
   14000f175:	jne    0x14000f161
   14000f177:	xor    eax,eax
   14000f179:	test   eax,eax
   14000f17b:	je     0x14000f19f
   14000f17d:	or     rax,0xffffffffffffffff
   14000f181:	mov    rcx,rdx
   14000f184:	sub    rcx,rdi
   14000f187:	lea    rdi,[rdx+0x2]
   14000f18b:	sar    rcx,1
   14000f18e:	sub    rax,rcx
   14000f191:	add    r8,rax
   14000f194:	jmp    0x14000f130
   14000f196:	sbb    eax,eax
   14000f198:	and    eax,0xfffffffe
   14000f19b:	inc    eax
   14000f19d:	jmp    0x14000f179
   14000f19f:	cmp    QWORD PTR [r9+0x18],0x8
   14000f1a4:	jb     0x14000f1a9
   14000f1a6:	mov    r9,QWORD PTR [r9]
   14000f1a9:	sub    rdx,r9
   14000f1ac:	sar    rdx,1
   14000f1af:	mov    rax,rdx
   14000f1b2:	jmp    0x14000f1b8
   14000f1b4:	or     rax,0xffffffffffffffff
   14000f1b8:	mov    rbx,QWORD PTR [rsp+0x8]
   14000f1bd:	mov    rsi,QWORD PTR [rsp+0x10]
   14000f1c2:	mov    rdi,QWORD PTR [rsp+0x18]
   14000f1c7:	ret    
   14000f1c8:	mov    QWORD PTR [rsp+0x18],rbx
   14000f1cd:	push   rbp
   14000f1ce:	push   rsi
   14000f1cf:	push   rdi
   14000f1d0:	lea    rbp,[rsp-0x360]
   14000f1d8:	sub    rsp,0x460
   14000f1df:	mov    rax,QWORD PTR [rip+0x5900a]        # 0x1400681f0
   14000f1e6:	xor    rax,rsp
   14000f1e9:	mov    QWORD PTR [rbp+0x350],rax
   14000f1f0:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f1f5:	mov    rdi,rdx
   14000f1f8:	jb     0x14000f1fd
   14000f1fa:	mov    rcx,QWORD PTR [rcx]
   14000f1fd:	xor    ebx,ebx
   14000f1ff:	xor    r9d,r9d
   14000f202:	xor    r8d,r8d
   14000f205:	mov    QWORD PTR [rsp+0x30],rbx
   14000f20a:	mov    edx,0x80000000
   14000f20f:	mov    DWORD PTR [rsp+0x28],0x80
   14000f217:	mov    DWORD PTR [rsp+0x20],0x4
   14000f21f:	call   QWORD PTR [rip+0x39e43]        # 0x140049068
   14000f225:	mov    rsi,rax
   14000f228:	cmp    rax,0xffffffffffffffff
   14000f22c:	jne    0x14000f235
   14000f22e:	xor    al,al
   14000f230:	jmp    0x14000f2ef
   14000f235:	or     DWORD PTR [rsp+0x44],0xffffffff
   14000f23a:	cmp    QWORD PTR [rdi+0x18],0x8
   14000f23f:	jb     0x14000f244
   14000f241:	mov    rdi,QWORD PTR [rdi]
   14000f244:	lea    rcx,[rsp+0x44]
   14000f249:	mov    r9d,0x40
   14000f24f:	mov    r8d,0x8101
   14000f255:	mov    rdx,rdi
   14000f258:	mov    DWORD PTR [rsp+0x20],0x80
   14000f260:	call   QWORD PTR [rip+0x3a492]        # 0x1400496f8
   14000f266:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f26a:	test   eax,eax
   14000f26c:	je     0x14000f27f
   14000f26e:	call   QWORD PTR [rip+0x3a48c]        # 0x140049700
   14000f274:	mov    rcx,rsi
   14000f277:	call   QWORD PTR [rip+0x39f1b]        # 0x140049198
   14000f27d:	jmp    0x14000f22e
   14000f27f:	lea    rdx,[rip+0x41afa]        # 0x140050d80
   14000f286:	call   0x140026600
   14000f28b:	mov    rdi,rax
   14000f28e:	test   rax,rax
   14000f291:	jne    0x14000f29f
   14000f293:	mov    ecx,DWORD PTR [rsp+0x44]
   14000f297:	call   QWORD PTR [rip+0x3a463]        # 0x140049700
   14000f29d:	jmp    0x14000f2e4
   14000f29f:	mov    DWORD PTR [rsp+0x40],ebx
   14000f2a3:	jmp    0x14000f2b2
   14000f2a5:	lea    rdx,[rsp+0x50]
   14000f2aa:	mov    r8d,r11d
   14000f2ad:	call   0x140025fe0
   14000f2b2:	lea    r9,[rsp+0x40]
   14000f2b7:	lea    rdx,[rsp+0x50]
   14000f2bc:	mov    r8d,0x400
   14000f2c2:	mov    rcx,rsi
   14000f2c5:	mov    QWORD PTR [rsp+0x20],rbx
   14000f2ca:	call   QWORD PTR [rip+0x39e10]        # 0x1400490e0
   14000f2d0:	mov    r11d,DWORD PTR [rsp+0x40]
   14000f2d5:	mov    rcx,rdi
   14000f2d8:	test   r11d,r11d
   14000f2db:	jne    0x14000f2a5
   14000f2dd:	call   0x140026240
   14000f2e2:	mov    bl,0x1
   14000f2e4:	mov    rcx,rsi
   14000f2e7:	call   QWORD PTR [rip+0x39eab]        # 0x140049198
   14000f2ed:	mov    al,bl
   14000f2ef:	mov    rcx,QWORD PTR [rbp+0x350]
   14000f2f6:	xor    rcx,rsp
   14000f2f9:	call   0x14002b100
   14000f2fe:	mov    rbx,QWORD PTR [rsp+0x490]
   14000f306:	add    rsp,0x460
   14000f30d:	pop    rdi
   14000f30e:	pop    rsi
   14000f30f:	pop    rbp
   14000f310:	ret    
   14000f311:	int3   
   14000f312:	int3   
   14000f313:	int3   
   14000f314:	mov    rax,rsp
   14000f317:	push   rdi
   14000f318:	push   r12
   14000f31a:	push   r13
   14000f31c:	push   r14
   14000f31e:	push   r15
   14000f320:	sub    rsp,0xf0
   14000f327:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000f330:	mov    QWORD PTR [rax+0x18],rbx
   14000f334:	mov    QWORD PTR [rax+0x20],rsi
   14000f338:	mov    rax,QWORD PTR [rip+0x58eb1]        # 0x1400681f0
   14000f33f:	xor    rax,rsp
   14000f342:	mov    QWORD PTR [rsp+0xe8],rax
   14000f34a:	mov    r14,rdx
   14000f34d:	mov    rbx,rcx
   14000f350:	mov    QWORD PTR [rsp+0x30],rdx
   14000f355:	xor    edi,edi
   14000f357:	mov    esi,edi
   14000f359:	mov    DWORD PTR [rsp+0x24],edi
   14000f35d:	mov    r13b,0x1
   14000f360:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f365:	jb     0x14000f36a
   14000f367:	mov    rcx,QWORD PTR [rcx]
   14000f36a:	call   QWORD PTR [rip+0x3a590]        # 0x140049900
   14000f370:	cmp    eax,0x1
   14000f373:	jne    0x14000f619
   14000f379:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f37e:	jb     0x14000f385
   14000f380:	mov    rcx,QWORD PTR [rbx]
   14000f383:	jmp    0x14000f388
   14000f385:	mov    rcx,rbx
   14000f388:	call   QWORD PTR [rip+0x3a57a]        # 0x140049908
   14000f38e:	test   eax,eax
   14000f390:	je     0x14000f619
   14000f396:	mov    QWORD PTR [rsp+0x38],rdi
   14000f39b:	mov    QWORD PTR [rsp+0x40],rdi
   14000f3a0:	mov    QWORD PTR [rsp+0x48],rdi
   14000f3a5:	xor    r8d,r8d
   14000f3a8:	lea    rdx,[rsp+0x38]
   14000f3ad:	mov    rcx,rbx
   14000f3b0:	call   0x14000aef8
   14000f3b5:	mov    r12,rdi
   14000f3b8:	mov    QWORD PTR [rsp+0x28],rdi
   14000f3bd:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f3c2:	sub    rcx,QWORD PTR [rsp+0x38]
   14000f3c7:	movabs rax,0x6666666666666667
   14000f3d1:	imul   rcx
   14000f3d4:	mov    r15,rdx
   14000f3d7:	sar    r15,0x4
   14000f3db:	mov    rax,r15
   14000f3de:	shr    rax,0x3f
   14000f3e2:	add    r15,rax
   14000f3e5:	mov    QWORD PTR [rsp+0x58],r15
   14000f3ea:	cmp    r13b,0x1
   14000f3ee:	jne    0x14000f60d
   14000f3f4:	cmp    r12,r15
   14000f3f7:	jae    0x14000f60d
   14000f3fd:	lea    rcx,[r12+r12*4]
   14000f401:	mov    rax,QWORD PTR [rsp+0x38]
   14000f406:	lea    rdx,[rax+rcx*8]
   14000f40a:	mov    QWORD PTR [rsp+0x88],0x7
   14000f416:	mov    QWORD PTR [rsp+0x80],rdi
   14000f41e:	mov    WORD PTR [rsp+0x70],di
   14000f423:	or     r9,0xffffffffffffffff
   14000f427:	xor    r8d,r8d
   14000f42a:	lea    rcx,[rsp+0x70]
   14000f42f:	call   0x140009914
   14000f434:	nop
   14000f435:	lea    rcx,[rsp+0x70]
   14000f43a:	call   0x14000acdc
   14000f43f:	test   al,al
   14000f441:	jne    0x14000f47d
   14000f443:	mov    rdx,r14
   14000f446:	lea    rcx,[rsp+0x98]
   14000f44e:	call   0x1400095c4
   14000f453:	or     esi,0x1
   14000f456:	mov    DWORD PTR [rsp+0x24],esi
   14000f45a:	mov    r8,QWORD PTR [rax+0x10]
   14000f45e:	cmp    QWORD PTR [rax+0x18],0x8
   14000f463:	jb     0x14000f468
   14000f465:	mov    rax,QWORD PTR [rax]
   14000f468:	mov    rdx,rax
   14000f46b:	lea    rcx,[rsp+0x70]
   14000f470:	call   0x14000f0dc
   14000f475:	cmp    rax,0xffffffffffffffff
   14000f479:	mov    bl,0x1
   14000f47b:	jne    0x14000f480
   14000f47d:	mov    bl,dil
   14000f480:	test   sil,0x1
   14000f484:	je     0x14000f4a6
   14000f486:	and    esi,0xfffffffe
   14000f489:	mov    DWORD PTR [rsp+0x24],esi
   14000f48d:	cmp    QWORD PTR [rsp+0xb0],0x8
   14000f496:	jb     0x14000f4a6
   14000f498:	mov    rcx,QWORD PTR [rsp+0x98]
   14000f4a0:	call   QWORD PTR [rip+0x3a1d2]        # 0x140049678
   14000f4a6:	test   bl,bl
   14000f4a8:	je     0x14000f5cc
   14000f4ae:	lea    rcx,[rsp+0x70]
   14000f4b3:	call   0x14000aa80
   14000f4b8:	test   al,al
   14000f4ba:	jne    0x14000f4cb
   14000f4bc:	lea    rcx,[rsp+0x70]
   14000f4c1:	call   0x14000a678
   14000f4c6:	jmp    0x14000f5cc
   14000f4cb:	mov    QWORD PTR [rsp+0xb0],0x7
   14000f4d7:	mov    QWORD PTR [rsp+0xa8],rdi
   14000f4df:	mov    WORD PTR [rsp+0x98],di
   14000f4e7:	or     r9,0xffffffffffffffff
   14000f4eb:	xor    r8d,r8d
   14000f4ee:	lea    rdx,[rsp+0x70]
   14000f4f3:	lea    rcx,[rsp+0x98]
   14000f4fb:	call   0x140009914
   14000f500:	nop
   14000f501:	mov    rdx,r14
   14000f504:	lea    rcx,[rsp+0xc0]
   14000f50c:	call   0x1400095c4
   14000f511:	nop
   14000f512:	mov    rcx,QWORD PTR [r14+0x10]
   14000f516:	mov    QWORD PTR [rsp+0x60],rcx
   14000f51b:	mov    r8,QWORD PTR [rax+0x10]
   14000f51f:	cmp    QWORD PTR [rax+0x18],0x8
   14000f524:	jb     0x14000f529
   14000f526:	mov    rax,QWORD PTR [rax]
   14000f529:	mov    rdx,rax
   14000f52c:	lea    rcx,[rsp+0x98]
   14000f534:	call   0x14000f0dc
   14000f539:	mov    rbx,rax
   14000f53c:	lea    rcx,[rip+0x41845]        # 0x140050d88
   14000f543:	call   QWORD PTR [rip+0x3a167]        # 0x1400496b0
   14000f549:	mov    r9,rax
   14000f54c:	mov    r8,QWORD PTR [rsp+0x60]
   14000f551:	mov    rdx,rbx
   14000f554:	lea    rcx,[rsp+0x98]
   14000f55c:	call   0x14000f6c4
   14000f561:	or     r9,0xffffffffffffffff
   14000f565:	xor    r8d,r8d
   14000f568:	mov    rdx,rax
   14000f56b:	lea    rcx,[rsp+0x98]
   14000f573:	call   0x140009914
   14000f578:	nop
   14000f579:	cmp    QWORD PTR [rsp+0xd8],0x8
   14000f582:	jb     0x14000f592
   14000f584:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000f58c:	call   QWORD PTR [rip+0x3a0e6]        # 0x140049678
   14000f592:	lea    rdx,[rsp+0x98]
   14000f59a:	lea    rcx,[rsp+0x70]
   14000f59f:	call   0x14000f1c8
   14000f5a4:	test   al,al
   14000f5a6:	je     0x14000f5b3
   14000f5a8:	lea    rcx,[rsp+0x70]
   14000f5ad:	call   0x14000a678
   14000f5b2:	nop
   14000f5b3:	cmp    QWORD PTR [rsp+0xb0],0x8
   14000f5bc:	jb     0x14000f5cc
   14000f5be:	mov    rcx,QWORD PTR [rsp+0x98]
   14000f5c6:	call   QWORD PTR [rip+0x3a0ac]        # 0x140049678
   14000f5cc:	inc    r12
   14000f5cf:	mov    QWORD PTR [rsp+0x28],r12
   14000f5d4:	cmp    QWORD PTR [rsp+0x88],0x8
   14000f5dd:	jb     0x14000f5eb
   14000f5df:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f5e4:	call   QWORD PTR [rip+0x3a08e]        # 0x140049678
   14000f5ea:	nop
   14000f5eb:	jmp    0x14000f3ea
   14000f5f0:	xor    edi,edi
   14000f5f2:	mov    r13b,dil
   14000f5f5:	mov    r12,QWORD PTR [rsp+0x28]
   14000f5fa:	mov    r15,QWORD PTR [rsp+0x58]
   14000f5ff:	mov    esi,DWORD PTR [rsp+0x24]
   14000f603:	mov    r14,QWORD PTR [rsp+0x30]
   14000f608:	jmp    0x14000f3ea
   14000f60d:	lea    rcx,[rsp+0x38]
   14000f612:	call   0x14000f64c
   14000f617:	jmp    0x14000f61c
   14000f619:	mov    r13b,dil
   14000f61c:	mov    al,r13b
   14000f61f:	mov    rcx,QWORD PTR [rsp+0xe8]
   14000f627:	xor    rcx,rsp
   14000f62a:	call   0x14002b100
   14000f62f:	lea    r11,[rsp+0xf0]
   14000f637:	mov    rbx,QWORD PTR [r11+0x40]
   14000f63b:	mov    rsi,QWORD PTR [r11+0x48]
   14000f63f:	mov    rsp,r11
   14000f642:	pop    r15
   14000f644:	pop    r14
   14000f646:	pop    r13
   14000f648:	pop    r12
   14000f64a:	pop    rdi
   14000f64b:	ret    
   14000f64c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f651:	mov    QWORD PTR [rsp+0x10],rbp
   14000f656:	mov    QWORD PTR [rsp+0x18],rsi
   14000f65b:	push   rdi
   14000f65c:	sub    rsp,0x20
   14000f660:	mov    rdi,QWORD PTR [rcx]
   14000f663:	xor    ebp,ebp
   14000f665:	mov    rbx,rcx
   14000f668:	test   rdi,rdi
   14000f66b:	je     0x14000f6a4
   14000f66d:	mov    rsi,QWORD PTR [rcx+0x8]
   14000f671:	jmp    0x14000f696
   14000f673:	cmp    QWORD PTR [rdi+0x18],0x8
   14000f678:	jb     0x14000f683
   14000f67a:	mov    rcx,QWORD PTR [rdi]
   14000f67d:	call   QWORD PTR [rip+0x39ff5]        # 0x140049678
   14000f683:	mov    QWORD PTR [rdi+0x18],0x7
   14000f68b:	mov    QWORD PTR [rdi+0x10],rbp
   14000f68f:	mov    WORD PTR [rdi],bp
   14000f692:	add    rdi,0x28
   14000f696:	cmp    rdi,rsi
   14000f699:	jne    0x14000f673
   14000f69b:	mov    rcx,QWORD PTR [rbx]
   14000f69e:	call   QWORD PTR [rip+0x39fd4]        # 0x140049678
   14000f6a4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f6a9:	mov    QWORD PTR [rbx],rbp
   14000f6ac:	mov    QWORD PTR [rbx+0x8],rbp
   14000f6b0:	mov    QWORD PTR [rbx+0x10],rbp
   14000f6b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f6b9:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f6be:	add    rsp,0x20
   14000f6c2:	pop    rdi
   14000f6c3:	ret    
   14000f6c4:	mov    rax,rsp
   14000f6c7:	mov    QWORD PTR [rax+0x8],rbx
   14000f6cb:	mov    QWORD PTR [rax+0x10],rbp
   14000f6cf:	mov    QWORD PTR [rax+0x18],rsi
   14000f6d3:	mov    QWORD PTR [rax+0x20],rdi
   14000f6d7:	push   r12
   14000f6d9:	push   r13
   14000f6db:	push   r14
   14000f6dd:	sub    rsp,0x30
   14000f6e1:	mov    r10,QWORD PTR [rcx+0x18]
   14000f6e5:	mov    rbp,r9
   14000f6e8:	mov    rsi,r8
   14000f6eb:	mov    r14,rdx
   14000f6ee:	mov    rbx,rcx
   14000f6f1:	cmp    r10,0x8
   14000f6f5:	jb     0x14000f6fc
   14000f6f7:	mov    rax,QWORD PTR [rcx]
   14000f6fa:	jmp    0x14000f6ff
   14000f6fc:	mov    rax,rcx
   14000f6ff:	lea    r12,[rip+0x41682]        # 0x140050d88
   14000f706:	cmp    r12,rax
   14000f709:	jb     0x14000f74f
   14000f70b:	cmp    r10,0x8
   14000f70f:	jb     0x14000f714
   14000f711:	mov    rcx,QWORD PTR [rcx]
   14000f714:	mov    rax,QWORD PTR [rbx+0x10]
   14000f718:	lea    rcx,[rcx+rax*2]
   14000f71c:	cmp    rcx,r12
   14000f71f:	jbe    0x14000f74f
   14000f721:	cmp    r10,0x8
   14000f725:	jb     0x14000f72c
   14000f727:	mov    rax,QWORD PTR [rbx]
   14000f72a:	jmp    0x14000f72f
   14000f72c:	mov    rax,rbx
   14000f72f:	mov    QWORD PTR [rsp+0x28],r9
   14000f734:	sub    r12,rax
   14000f737:	mov    rcx,rbx
   14000f73a:	sar    r12,1
   14000f73d:	mov    r9,rbx
   14000f740:	mov    QWORD PTR [rsp+0x20],r12
   14000f745:	call   0x14000f8d8
   14000f74a:	jmp    0x14000f8b7
   14000f74f:	mov    rcx,QWORD PTR [rbx+0x10]
   14000f753:	cmp    rcx,rdx
   14000f756:	jae    0x14000f766
   14000f758:	lea    rcx,[rip+0x411d1]        # 0x140050930
   14000f75f:	call   QWORD PTR [rip+0x39e4b]        # 0x1400495b0
   14000f765:	int3   
   14000f766:	mov    r13,rcx
   14000f769:	sub    r13,rdx
   14000f76c:	cmp    r13,r8
   14000f76f:	cmovb  rsi,r13
   14000f773:	or     rax,0xffffffffffffffff
   14000f777:	sub    rax,r9
   14000f77a:	sub    rcx,rsi
   14000f77d:	cmp    rax,rcx
   14000f780:	ja     0x14000f790
   14000f782:	lea    rcx,[rip+0x411bf]        # 0x140050948
   14000f789:	call   QWORD PTR [rip+0x39e09]        # 0x140049598
   14000f78f:	int3   
   14000f790:	sub    r13,rsi
   14000f793:	cmp    r9,rsi
   14000f796:	jae    0x14000f7cf
   14000f798:	cmp    r10,0x8
   14000f79c:	jb     0x14000f7a3
   14000f79e:	mov    rdx,QWORD PTR [rbx]
   14000f7a1:	jmp    0x14000f7a6
   14000f7a3:	mov    rdx,rbx
   14000f7a6:	cmp    r10,0x8
   14000f7aa:	jb     0x14000f7b1
   14000f7ac:	mov    rcx,QWORD PTR [rbx]
   14000f7af:	jmp    0x14000f7b4
   14000f7b1:	mov    rcx,rbx
   14000f7b4:	lea    rax,[r14+rsi*1]
   14000f7b8:	lea    r8,[r13+r13*1+0x0]
   14000f7bd:	lea    rdx,[rdx+rax*2]
   14000f7c1:	lea    rax,[r14+r9*1]
   14000f7c5:	lea    rcx,[rcx+rax*2]
   14000f7c9:	call   QWORD PTR [rip+0x39e21]        # 0x1400495f0
   14000f7cf:	xor    ecx,ecx
   14000f7d1:	test   rbp,rbp
   14000f7d4:	jne    0x14000f7df
   14000f7d6:	test   rsi,rsi
   14000f7d9:	je     0x14000f8b4
   14000f7df:	mov    r8,QWORD PTR [rbx+0x10]
   14000f7e3:	movabs rax,0x7ffffffffffffffe
   14000f7ed:	mov    rdi,r8
   14000f7f0:	sub    rdi,rsi
   14000f7f3:	add    rdi,rbp
   14000f7f6:	cmp    rdi,rax
   14000f7f9:	jbe    0x14000f809
   14000f7fb:	lea    rcx,[rip+0x41146]        # 0x140050948
   14000f802:	call   QWORD PTR [rip+0x39d90]        # 0x140049598
   14000f808:	int3   
   14000f809:	cmp    QWORD PTR [rbx+0x18],rdi
   14000f80d:	jae    0x14000f81c
   14000f80f:	mov    rdx,rdi
   14000f812:	mov    rcx,rbx
   14000f815:	call   0x140009ba8
   14000f81a:	jmp    0x14000f837
   14000f81c:	test   rdi,rdi
   14000f81f:	jne    0x14000f83c
   14000f821:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f826:	mov    QWORD PTR [rbx+0x10],rcx
   14000f82a:	jb     0x14000f831
   14000f82c:	mov    rax,QWORD PTR [rbx]
   14000f82f:	jmp    0x14000f834
   14000f831:	mov    rax,rbx
   14000f834:	mov    WORD PTR [rax],cx
   14000f837:	test   rdi,rdi
   14000f83a:	je     0x14000f8b4
   14000f83c:	cmp    rsi,rbp
   14000f83f:	jae    0x14000f87a
   14000f841:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f846:	jb     0x14000f84d
   14000f848:	mov    rdx,QWORD PTR [rbx]
   14000f84b:	jmp    0x14000f850
   14000f84d:	mov    rdx,rbx
   14000f850:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f855:	jb     0x14000f85c
   14000f857:	mov    rcx,QWORD PTR [rbx]
   14000f85a:	jmp    0x14000f85f
   14000f85c:	mov    rcx,rbx
   14000f85f:	lea    rax,[r14+rsi*1]
   14000f863:	lea    r8,[r13+r13*1+0x0]
   14000f868:	lea    rdx,[rdx+rax*2]
   14000f86c:	lea    rax,[r14+rbp*1]
   14000f870:	lea    rcx,[rcx+rax*2]
   14000f874:	call   QWORD PTR [rip+0x39d76]        # 0x1400495f0
   14000f87a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f87f:	jb     0x14000f886
   14000f881:	mov    rax,QWORD PTR [rbx]
   14000f884:	jmp    0x14000f889
   14000f886:	mov    rax,rbx
   14000f889:	lea    r8,[rbp+rbp*1+0x0]
   14000f88e:	lea    rcx,[rax+r14*2]
   14000f892:	mov    rdx,r12
   14000f895:	call   QWORD PTR [rip+0x3a02d]        # 0x1400498c8
   14000f89b:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f8a0:	mov    QWORD PTR [rbx+0x10],rdi
   14000f8a4:	jb     0x14000f8ab
   14000f8a6:	mov    rax,QWORD PTR [rbx]
   14000f8a9:	jmp    0x14000f8ae
   14000f8ab:	mov    rax,rbx
   14000f8ae:	xor    ecx,ecx
   14000f8b0:	mov    WORD PTR [rax+rdi*2],cx
   14000f8b4:	mov    rax,rbx
   14000f8b7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f8bc:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f8c1:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f8c6:	mov    rdi,QWORD PTR [rsp+0x68]
   14000f8cb:	add    rsp,0x30
   14000f8cf:	pop    r14
   14000f8d1:	pop    r13
   14000f8d3:	pop    r12
   14000f8d5:	ret    
   14000f8d6:	int3   
   14000f8d7:	int3   
   14000f8d8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f8dd:	mov    QWORD PTR [rsp+0x10],rbp
   14000f8e2:	mov    QWORD PTR [rsp+0x18],rsi
   14000f8e7:	push   rdi
   14000f8e8:	push   r12
   14000f8ea:	push   r13
   14000f8ec:	push   r14
   14000f8ee:	push   r15
   14000f8f0:	sub    rsp,0x20
   14000f8f4:	mov    r13,r8
   14000f8f7:	mov    r8,QWORD PTR [rcx+0x10]
   14000f8fb:	mov    rdi,r9
   14000f8fe:	mov    rsi,rdx
   14000f901:	mov    rbx,rcx
   14000f904:	cmp    r8,rdx
   14000f907:	jb     0x14000fc34
   14000f90d:	mov    rax,QWORD PTR [r9+0x10]
   14000f911:	mov    rbp,QWORD PTR [rsp+0x70]
   14000f916:	cmp    rax,rbp
   14000f919:	jb     0x14000fc34
   14000f91f:	mov    r12,QWORD PTR [rsp+0x78]
   14000f924:	mov    r15,r8
   14000f927:	mov    rcx,r8
   14000f92a:	sub    r15,rdx
   14000f92d:	cmp    r15,r13
   14000f930:	cmovb  r13,r15
   14000f934:	sub    rax,rbp
   14000f937:	cmp    rax,r12
   14000f93a:	cmovb  r12,rax
   14000f93e:	or     rax,0xffffffffffffffff
   14000f942:	sub    rcx,r13
   14000f945:	sub    rax,r12
   14000f948:	cmp    rax,rcx
   14000f94b:	ja     0x14000f95b
   14000f94d:	lea    rcx,[rip+0x40ff4]        # 0x140050948
   14000f954:	call   QWORD PTR [rip+0x39c3e]        # 0x140049598
   14000f95a:	int3   
   14000f95b:	lea    r14,[rcx+r12*1]
   14000f95f:	sub    r15,r13
   14000f962:	xor    ecx,ecx
   14000f964:	cmp    r8,r14
   14000f967:	jae    0x14000f9b4
   14000f969:	movabs rax,0x7ffffffffffffffe
   14000f973:	cmp    r14,rax
   14000f976:	jbe    0x14000f986
   14000f978:	lea    rcx,[rip+0x40fc9]        # 0x140050948
   14000f97f:	call   QWORD PTR [rip+0x39c13]        # 0x140049598
   14000f985:	int3   
   14000f986:	cmp    QWORD PTR [rbx+0x18],r14
   14000f98a:	jae    0x14000f999
   14000f98c:	mov    rdx,r14
   14000f98f:	mov    rcx,rbx
   14000f992:	call   0x140009ba8
   14000f997:	jmp    0x14000f9b4
   14000f999:	test   r14,r14
   14000f99c:	jne    0x14000f9b4
   14000f99e:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f9a3:	mov    QWORD PTR [rbx+0x10],rcx
   14000f9a7:	jb     0x14000f9ae
   14000f9a9:	mov    rax,QWORD PTR [rbx]
   14000f9ac:	jmp    0x14000f9b1
   14000f9ae:	mov    rax,rbx
   14000f9b1:	mov    WORD PTR [rax],cx
   14000f9b4:	cmp    rbx,rdi
   14000f9b7:	je     0x14000fa21
   14000f9b9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f9be:	jb     0x14000f9c5
   14000f9c0:	mov    rdx,QWORD PTR [rbx]
   14000f9c3:	jmp    0x14000f9c8
   14000f9c5:	mov    rdx,rbx
   14000f9c8:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f9cd:	jb     0x14000f9d4
   14000f9cf:	mov    rcx,QWORD PTR [rbx]
   14000f9d2:	jmp    0x14000f9d7
   14000f9d4:	mov    rcx,rbx
   14000f9d7:	lea    rax,[rsi+r13*1]
   14000f9db:	lea    r8,[r15+r15*1]
   14000f9df:	lea    rdx,[rdx+rax*2]
   14000f9e3:	lea    rax,[rsi+r12*1]
   14000f9e7:	lea    rcx,[rcx+rax*2]
   14000f9eb:	call   QWORD PTR [rip+0x39bff]        # 0x1400495f0
   14000f9f1:	cmp    QWORD PTR [rdi+0x18],0x8
   14000f9f6:	jb     0x14000f9fb
   14000f9f8:	mov    rdi,QWORD PTR [rdi]
   14000f9fb:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fa00:	jb     0x14000fa07
   14000fa02:	mov    rax,QWORD PTR [rbx]
   14000fa05:	jmp    0x14000fa0a
   14000fa07:	mov    rax,rbx
   14000fa0a:	lea    r8,[r12+r12*1]
   14000fa0e:	lea    rdx,[rdi+rbp*2]
   14000fa12:	lea    rcx,[rax+rsi*2]
   14000fa16:	call   QWORD PTR [rip+0x39eac]        # 0x1400498c8
   14000fa1c:	jmp    0x14000fbfa
   14000fa21:	cmp    r12,r13
   14000fa24:	ja     0x14000fa8d
   14000fa26:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fa2b:	jb     0x14000fa32
   14000fa2d:	mov    rcx,QWORD PTR [rbx]
   14000fa30:	jmp    0x14000fa35
   14000fa32:	mov    rcx,rbx
   14000fa35:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fa3a:	jb     0x14000fa41
   14000fa3c:	mov    rax,QWORD PTR [rbx]
   14000fa3f:	jmp    0x14000fa44
   14000fa41:	mov    rax,rbx
   14000fa44:	lea    rdx,[rcx+rbp*2]
   14000fa48:	lea    r8,[r12+r12*1]
   14000fa4c:	lea    rcx,[rax+rsi*2]
   14000fa50:	call   QWORD PTR [rip+0x39b9a]        # 0x1400495f0
   14000fa56:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fa5b:	jb     0x14000fa62
   14000fa5d:	mov    rdx,QWORD PTR [rbx]
   14000fa60:	jmp    0x14000fa65
   14000fa62:	mov    rdx,rbx
   14000fa65:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fa6a:	jb     0x14000fa71
   14000fa6c:	mov    rcx,QWORD PTR [rbx]
   14000fa6f:	jmp    0x14000fa74
   14000fa71:	mov    rcx,rbx
   14000fa74:	lea    rax,[rsi+r13*1]
   14000fa78:	lea    r8,[r15+r15*1]
   14000fa7c:	lea    rdx,[rdx+rax*2]
   14000fa80:	lea    rax,[rsi+r12*1]
   14000fa84:	lea    rcx,[rcx+rax*2]
   14000fa88:	jmp    0x14000fbf4
   14000fa8d:	cmp    rbp,rsi
   14000fa90:	ja     0x14000faf9
   14000fa92:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fa97:	jb     0x14000fa9e
   14000fa99:	mov    rdx,QWORD PTR [rbx]
   14000fa9c:	jmp    0x14000faa1
   14000fa9e:	mov    rdx,rbx
   14000faa1:	cmp    QWORD PTR [rbx+0x18],0x8
   14000faa6:	jb     0x14000faad
   14000faa8:	mov    rcx,QWORD PTR [rbx]
   14000faab:	jmp    0x14000fab0
   14000faad:	mov    rcx,rbx
   14000fab0:	lea    rax,[rsi+r13*1]
   14000fab4:	lea    r8,[r15+r15*1]
   14000fab8:	lea    rdx,[rdx+rax*2]
   14000fabc:	lea    rax,[rsi+r12*1]
   14000fac0:	lea    rcx,[rcx+rax*2]
   14000fac4:	call   QWORD PTR [rip+0x39b26]        # 0x1400495f0
   14000faca:	cmp    QWORD PTR [rbx+0x18],0x8
   14000facf:	jb     0x14000fad6
   14000fad1:	mov    rcx,QWORD PTR [rbx]
   14000fad4:	jmp    0x14000fad9
   14000fad6:	mov    rcx,rbx
   14000fad9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fade:	jb     0x14000fae5
   14000fae0:	mov    rax,QWORD PTR [rbx]
   14000fae3:	jmp    0x14000fae8
   14000fae5:	mov    rax,rbx
   14000fae8:	lea    rdx,[rcx+rbp*2]
   14000faec:	lea    r8,[r12+r12*1]
   14000faf0:	lea    rcx,[rax+rsi*2]
   14000faf4:	jmp    0x14000fbf4
   14000faf9:	lea    rdi,[rsi+r13*1]
   14000fafd:	cmp    rdi,rbp
   14000fb00:	ja     0x14000fb5c
   14000fb02:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb07:	jb     0x14000fb0e
   14000fb09:	mov    rax,QWORD PTR [rbx]
   14000fb0c:	jmp    0x14000fb11
   14000fb0e:	mov    rax,rbx
   14000fb11:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb16:	jb     0x14000fb1d
   14000fb18:	mov    rcx,QWORD PTR [rbx]
   14000fb1b:	jmp    0x14000fb20
   14000fb1d:	mov    rcx,rbx
   14000fb20:	lea    rdx,[rax+rdi*2]
   14000fb24:	lea    rax,[rsi+r12*1]
   14000fb28:	lea    r8,[r15+r15*1]
   14000fb2c:	lea    rcx,[rcx+rax*2]
   14000fb30:	call   QWORD PTR [rip+0x39aba]        # 0x1400495f0
   14000fb36:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb3b:	jb     0x14000fb42
   14000fb3d:	mov    rcx,QWORD PTR [rbx]
   14000fb40:	jmp    0x14000fb45
   14000fb42:	mov    rcx,rbx
   14000fb45:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb4a:	jb     0x14000fb51
   14000fb4c:	mov    rax,QWORD PTR [rbx]
   14000fb4f:	jmp    0x14000fb54
   14000fb51:	mov    rax,rbx
   14000fb54:	sub    rbp,r13
   14000fb57:	add    rbp,r12
   14000fb5a:	jmp    0x14000fae8
   14000fb5c:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb61:	jb     0x14000fb68
   14000fb63:	mov    rcx,QWORD PTR [rbx]
   14000fb66:	jmp    0x14000fb6b
   14000fb68:	mov    rcx,rbx
   14000fb6b:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb70:	jb     0x14000fb77
   14000fb72:	mov    rax,QWORD PTR [rbx]
   14000fb75:	jmp    0x14000fb7a
   14000fb77:	mov    rax,rbx
   14000fb7a:	lea    rdx,[rcx+rbp*2]
   14000fb7e:	lea    r8,[r13+r13*1+0x0]
   14000fb83:	lea    rcx,[rax+rsi*2]
   14000fb87:	call   QWORD PTR [rip+0x39a63]        # 0x1400495f0
   14000fb8d:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fb92:	jb     0x14000fb99
   14000fb94:	mov    rax,QWORD PTR [rbx]
   14000fb97:	jmp    0x14000fb9c
   14000fb99:	mov    rax,rbx
   14000fb9c:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fba1:	jb     0x14000fba8
   14000fba3:	mov    rcx,QWORD PTR [rbx]
   14000fba6:	jmp    0x14000fbab
   14000fba8:	mov    rcx,rbx
   14000fbab:	lea    rdx,[rax+rdi*2]
   14000fbaf:	lea    rax,[rsi+r12*1]
   14000fbb3:	lea    r8,[r15+r15*1]
   14000fbb7:	lea    rcx,[rcx+rax*2]
   14000fbbb:	call   QWORD PTR [rip+0x39a2f]        # 0x1400495f0
   14000fbc1:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fbc6:	jb     0x14000fbcd
   14000fbc8:	mov    rdx,QWORD PTR [rbx]
   14000fbcb:	jmp    0x14000fbd0
   14000fbcd:	mov    rdx,rbx
   14000fbd0:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fbd5:	jb     0x14000fbdc
   14000fbd7:	mov    rcx,QWORD PTR [rbx]
   14000fbda:	jmp    0x14000fbdf
   14000fbdc:	mov    rcx,rbx
   14000fbdf:	mov    r8,r12
   14000fbe2:	lea    rax,[r12+rbp*1]
   14000fbe6:	lea    rcx,[rcx+rdi*2]
   14000fbea:	sub    r8,r13
   14000fbed:	lea    rdx,[rdx+rax*2]
   14000fbf1:	add    r8,r8
   14000fbf4:	call   QWORD PTR [rip+0x399f6]        # 0x1400495f0
   14000fbfa:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fbff:	mov    QWORD PTR [rbx+0x10],r14
   14000fc03:	jb     0x14000fc0a
   14000fc05:	mov    rax,QWORD PTR [rbx]
   14000fc08:	jmp    0x14000fc0d
   14000fc0a:	mov    rax,rbx
   14000fc0d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000fc12:	mov    rsi,QWORD PTR [rsp+0x60]
   14000fc17:	xor    ecx,ecx
   14000fc19:	mov    WORD PTR [rax+r14*2],cx
   14000fc1e:	mov    rax,rbx
   14000fc21:	mov    rbx,QWORD PTR [rsp+0x50]
   14000fc26:	add    rsp,0x20
   14000fc2a:	pop    r15
   14000fc2c:	pop    r14
   14000fc2e:	pop    r13
   14000fc30:	pop    r12
   14000fc32:	pop    rdi
   14000fc33:	ret    
   14000fc34:	lea    rcx,[rip+0x40cf5]        # 0x140050930
   14000fc3b:	call   QWORD PTR [rip+0x3996f]        # 0x1400495b0
   14000fc41:	int3   
   14000fc42:	int3   
   14000fc43:	int3   
   14000fc44:	rex push rbx
   14000fc46:	sub    rsp,0x20
   14000fc4a:	xor    eax,eax
   14000fc4c:	mov    rbx,rdx
   14000fc4f:	mov    QWORD PTR [rdx+0x18],0xf
   14000fc57:	mov    QWORD PTR [rdx+0x10],rax
   14000fc5b:	mov    BYTE PTR [rdx],al
   14000fc5d:	mov    rdx,rcx
   14000fc60:	mov    rcx,rbx
   14000fc63:	or     r9,0xffffffffffffffff
   14000fc67:	xor    r8d,r8d
   14000fc6a:	mov    DWORD PTR [rsp+0x38],eax
   14000fc6e:	call   0x1400048b8
   14000fc73:	mov    rax,rbx
   14000fc76:	add    rsp,0x20
   14000fc7a:	pop    rbx
   14000fc7b:	ret    
   14000fc7c:	rex push rbx
   14000fc7e:	sub    rsp,0x20
   14000fc82:	xor    eax,eax
   14000fc84:	mov    QWORD PTR [rdx+0x18],0xf
   14000fc8c:	mov    rbx,rdx
   14000fc8f:	mov    QWORD PTR [rdx+0x10],rax
   14000fc93:	mov    BYTE PTR [rdx],al
   14000fc95:	lea    rdx,[rcx+0x28]
   14000fc99:	or     r9,0xffffffffffffffff
   14000fc9d:	xor    r8d,r8d
   14000fca0:	mov    rcx,rbx
   14000fca3:	mov    DWORD PTR [rsp+0x30],eax
   14000fca7:	call   0x1400048b8
   14000fcac:	mov    rax,rbx
   14000fcaf:	add    rsp,0x20
   14000fcb3:	pop    rbx
   14000fcb4:	ret    
   14000fcb5:	int3   
   14000fcb6:	int3   
   14000fcb7:	int3   
   14000fcb8:	mov    QWORD PTR [rsp+0x10],rbx
   14000fcbd:	mov    QWORD PTR [rsp+0x18],rbp
   14000fcc2:	push   rsi
   14000fcc3:	push   rdi
   14000fcc4:	push   r12
   14000fcc6:	sub    rsp,0x20
   14000fcca:	and    DWORD PTR [rsp+0x40],0x0
   14000fccf:	cmp    QWORD PTR [rdx+0x18],0x10
   14000fcd4:	mov    rdi,rdx
   14000fcd7:	mov    rbp,rcx
   14000fcda:	jb     0x14000fce1
   14000fcdc:	mov    r12,QWORD PTR [rdx]
   14000fcdf:	jmp    0x14000fce4
   14000fce1:	mov    r12,rdx
   14000fce4:	cmp    QWORD PTR [rdx+0x18],0x10
   14000fce9:	jb     0x14000fcf0
   14000fceb:	mov    rcx,QWORD PTR [rdx]
   14000fcee:	jmp    0x14000fcf3
   14000fcf0:	mov    rcx,rdx
   14000fcf3:	cmp    QWORD PTR [rdx+0x18],0x10
   14000fcf8:	mov    rax,QWORD PTR [rdx+0x10]
   14000fcfc:	lea    rbx,[rcx+rax*1]
   14000fd00:	jb     0x14000fd07
   14000fd02:	mov    rsi,QWORD PTR [rdx]
   14000fd05:	jmp    0x14000fd0a
   14000fd07:	mov    rsi,rdx
   14000fd0a:	cmp    rsi,rbx
   14000fd0d:	je     0x14000fd27
   14000fd0f:	sub    r12,rsi
   14000fd12:	movsx  ecx,BYTE PTR [rsi]
   14000fd15:	call   QWORD PTR [rip+0x39925]        # 0x140049640
   14000fd1b:	mov    BYTE PTR [r12+rsi*1],al
   14000fd1f:	inc    rsi
   14000fd22:	cmp    rsi,rbx
   14000fd25:	jne    0x14000fd12
   14000fd27:	and    QWORD PTR [rbp+0x10],0x0
   14000fd2c:	mov    QWORD PTR [rbp+0x18],0xf
   14000fd34:	or     r9,0xffffffffffffffff
   14000fd38:	xor    r8d,r8d
   14000fd3b:	mov    rdx,rdi
   14000fd3e:	mov    rcx,rbp
   14000fd41:	mov    BYTE PTR [rbp+0x0],0x0
   14000fd45:	call   0x1400048b8
   14000fd4a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd4f:	mov    rax,rbp
   14000fd52:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fd57:	add    rsp,0x20
   14000fd5b:	pop    r12
   14000fd5d:	pop    rdi
   14000fd5e:	pop    rsi
   14000fd5f:	ret    
   14000fd60:	mov    rax,rsp
   14000fd63:	push   rbp
   14000fd64:	push   rdi
   14000fd65:	push   r12
   14000fd67:	push   r14
   14000fd69:	push   r15
   14000fd6b:	lea    rbp,[rax-0x5f]
   14000fd6f:	sub    rsp,0xc0
   14000fd76:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   14000fd7e:	mov    QWORD PTR [rax+0x18],rbx
   14000fd82:	mov    rax,QWORD PTR [rip+0x58467]        # 0x1400681f0
   14000fd89:	xor    rax,rsp
   14000fd8c:	mov    QWORD PTR [rbp+0x27],rax
   14000fd90:	mov    r8,rdx
   14000fd93:	mov    rbx,rcx
   14000fd96:	mov    rax,QWORD PTR [rdx+0x8]
   14000fd9a:	cmp    QWORD PTR [rdx],rax
   14000fd9d:	je     0x14000ff40
   14000fda3:	mov    rax,QWORD PTR [rcx+0x10]
   14000fda7:	cmp    QWORD PTR [rcx+0x8],rax
   14000fdab:	je     0x14000ff40
   14000fdb1:	xor    r15d,r15d
   14000fdb4:	mov    QWORD PTR [rbp-0x69],r15
   14000fdb8:	mov    QWORD PTR [rbp-0x61],r15
   14000fdbc:	mov    QWORD PTR [rbp-0x59],r15
   14000fdc0:	lea    rdx,[rbp-0x69]
   14000fdc4:	mov    rcx,r8
   14000fdc7:	call   0x1400105cc
   14000fdcc:	test   al,al
   14000fdce:	jne    0x14000fde2
   14000fdd0:	mov    rcx,QWORD PTR [rbp-0x69]
   14000fdd4:	test   rcx,rcx
   14000fdd7:	je     0x14000ff40
   14000fddd:	jmp    0x14000ff3a
   14000fde2:	mov    QWORD PTR [rbp-0x29],r15
   14000fde6:	mov    QWORD PTR [rbp-0x21],r15
   14000fdea:	mov    QWORD PTR [rbp-0x19],r15
   14000fdee:	lea    rdx,[rbp-0x69]
   14000fdf2:	lea    rcx,[rbp-0x29]
   14000fdf6:	call   0x140010a9c
   14000fdfb:	mov    QWORD PTR [rbp-0x49],r15
   14000fdff:	mov    QWORD PTR [rbp-0x41],r15
   14000fe03:	mov    QWORD PTR [rbp-0x39],r15
   14000fe07:	lea    r8,[rbp-0x49]
   14000fe0b:	lea    rdx,[rbp-0x29]
   14000fe0f:	mov    rcx,rbx
   14000fe12:	call   0x1400104b4
   14000fe17:	mov    rdi,QWORD PTR [rbp-0x49]
   14000fe1b:	cmp    rdi,QWORD PTR [rbp-0x41]
   14000fe1f:	je     0x14000fe53
   14000fe21:	mov    rbx,rdi
   14000fe24:	mov    rdx,rbx
   14000fe27:	lea    rcx,[rbp-0x1]
   14000fe2b:	call   0x1400095c4
   14000fe30:	mov    rcx,rax
   14000fe33:	call   0x14000a678
   14000fe38:	cmp    QWORD PTR [rbp+0x17],0x8
   14000fe3d:	jb     0x14000fe49
   14000fe3f:	mov    rcx,QWORD PTR [rbp-0x1]
   14000fe43:	call   QWORD PTR [rip+0x3982f]        # 0x140049678
   14000fe49:	add    rbx,0x28
   14000fe4d:	cmp    rbx,QWORD PTR [rbp-0x41]
   14000fe51:	jne    0x14000fe24
   14000fe53:	mov    rbx,QWORD PTR [rbp-0x69]
   14000fe57:	mov    r14,QWORD PTR [rbp-0x61]
   14000fe5b:	cmp    rbx,r14
   14000fe5e:	je     0x14000fed8
   14000fe60:	mov    r12,QWORD PTR [rbx]
   14000fe63:	test   r12,r12
   14000fe66:	je     0x14000febe
   14000fe68:	cmp    QWORD PTR [r12+0x40],0x10
   14000fe6e:	jb     0x14000fe7b
   14000fe70:	mov    rcx,QWORD PTR [r12+0x28]
   14000fe75:	call   QWORD PTR [rip+0x397fd]        # 0x140049678
   14000fe7b:	mov    QWORD PTR [r12+0x40],0xf
   14000fe84:	mov    QWORD PTR [r12+0x38],r15
   14000fe89:	mov    BYTE PTR [r12+0x28],r15b
   14000fe8e:	cmp    QWORD PTR [r12+0x18],0x10
   14000fe94:	jb     0x14000fea0
   14000fe96:	mov    rcx,QWORD PTR [r12]
   14000fe9a:	call   QWORD PTR [rip+0x397d8]        # 0x140049678
   14000fea0:	mov    QWORD PTR [r12+0x18],0xf
   14000fea9:	mov    QWORD PTR [r12+0x10],r15
   14000feae:	mov    BYTE PTR [r12],r15b
   14000feb2:	mov    rcx,r12
   14000feb5:	call   QWORD PTR [rip+0x397bd]        # 0x140049678
   14000febb:	mov    QWORD PTR [rbx],r15
   14000febe:	add    rbx,0x8
   14000fec2:	cmp    rbx,r14
   14000fec5:	jne    0x14000fe60
   14000fec7:	xor    r8d,r8d
   14000feca:	mov    rdx,r14
   14000fecd:	mov    rcx,QWORD PTR [rbp-0x69]
   14000fed1:	call   QWORD PTR [rip+0x39719]        # 0x1400495f0
   14000fed7:	nop
   14000fed8:	test   rdi,rdi
   14000fedb:	je     0x14000ff02
   14000fedd:	mov    rbx,rdi
   14000fee0:	cmp    rdi,QWORD PTR [rbp-0x41]
   14000fee4:	je     0x14000fef8
   14000fee6:	mov    rcx,rbx
   14000fee9:	call   0x14000638c
   14000feee:	add    rbx,0x28
   14000fef2:	cmp    rbx,QWORD PTR [rbp-0x41]
   14000fef6:	jne    0x14000fee6
   14000fef8:	mov    rcx,rdi
   14000fefb:	call   QWORD PTR [rip+0x39777]        # 0x140049678
   14000ff01:	nop
   14000ff02:	mov    rbx,QWORD PTR [rbp-0x29]
   14000ff06:	test   rbx,rbx
   14000ff09:	je     0x14000ff30
   14000ff0b:	mov    rdi,rbx
   14000ff0e:	cmp    rbx,QWORD PTR [rbp-0x21]
   14000ff12:	je     0x14000ff26
   14000ff14:	mov    rcx,rdi
   14000ff17:	call   0x14000638c
   14000ff1c:	add    rdi,0x28
   14000ff20:	cmp    rdi,QWORD PTR [rbp-0x21]
   14000ff24:	jne    0x14000ff14
   14000ff26:	mov    rcx,rbx
   14000ff29:	call   QWORD PTR [rip+0x39749]        # 0x140049678
   14000ff2f:	nop
   14000ff30:	cmp    QWORD PTR [rbp-0x69],r15
   14000ff34:	je     0x14000ff40
   14000ff36:	mov    rcx,QWORD PTR [rbp-0x69]
   14000ff3a:	call   QWORD PTR [rip+0x39738]        # 0x140049678
   14000ff40:	mov    rcx,QWORD PTR [rbp+0x27]
   14000ff44:	xor    rcx,rsp
   14000ff47:	call   0x14002b100
   14000ff4c:	mov    rbx,QWORD PTR [rsp+0x100]
   14000ff54:	add    rsp,0xc0
   14000ff5b:	pop    r15
   14000ff5d:	pop    r14
   14000ff5f:	pop    r12
   14000ff61:	pop    rdi
   14000ff62:	pop    rbp
   14000ff63:	ret    
   14000ff64:	mov    rax,rsp
   14000ff67:	push   rbp
   14000ff68:	push   rsi
   14000ff69:	push   rdi
   14000ff6a:	push   r12
   14000ff6c:	push   r13
   14000ff6e:	push   r14
   14000ff70:	push   r15
   14000ff72:	lea    rbp,[rsp-0x60]
   14000ff77:	sub    rsp,0x160
   14000ff7e:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14000ff86:	mov    QWORD PTR [rax+0x20],rbx
   14000ff8a:	mov    rax,QWORD PTR [rip+0x5825f]        # 0x1400681f0
   14000ff91:	xor    rax,rsp
   14000ff94:	mov    QWORD PTR [rbp+0x58],rax
   14000ff98:	mov    r12,r8
   14000ff9b:	mov    QWORD PTR [rbp-0x78],r8
   14000ff9f:	mov    rdi,rdx
   14000ffa2:	mov    QWORD PTR [rbp-0x70],rdx
   14000ffa6:	mov    r14,rcx
   14000ffa9:	mov    QWORD PTR [rbp-0x60],rdx
   14000ffad:	xor    ebx,ebx
   14000ffaf:	mov    DWORD PTR [rsp+0x40],ebx
   14000ffb3:	mov    rax,QWORD PTR [rcx+0x10]
   14000ffb7:	lea    r15d,[rbx+0xf]
   14000ffbb:	cmp    QWORD PTR [rcx+0x8],rax
   14000ffbf:	jne    0x14000fff3
   14000ffc1:	mov    QWORD PTR [rdx+0x18],r15
   14000ffc5:	mov    QWORD PTR [rdx+0x10],rbx
   14000ffc9:	mov    BYTE PTR [rdx],bl
   14000ffcb:	lea    rcx,[rip+0x40923]        # 0x1400508f5
   14000ffd2:	call   QWORD PTR [rip+0x39630]        # 0x140049608
   14000ffd8:	mov    r8,rax
   14000ffdb:	lea    rdx,[rip+0x40913]        # 0x1400508f5
   14000ffe2:	mov    rcx,rdi
   14000ffe5:	call   0x140005154
   14000ffea:	nop
   14000ffeb:	mov    rax,rdi
   14000ffee:	jmp    0x1400103c9
   14000fff3:	mov    QWORD PTR [rbp-0x30],r15
   14000fff7:	mov    QWORD PTR [rbp-0x38],rbx
   14000fffb:	mov    BYTE PTR [rbp-0x48],bl
   14000fffe:	mov    QWORD PTR [rsp+0x58],rbx
   140010003:	mov    ecx,0x48
   140010008:	call   QWORD PTR [rip+0x3968a]        # 0x140049698
   14001000e:	test   rax,rax
   140010011:	je     0x140010396
   140010017:	mov    QWORD PTR [rsp+0x50],rax
   14001001c:	mov    QWORD PTR [rax],rax
   14001001f:	mov    rax,QWORD PTR [rsp+0x50]
   140010024:	mov    QWORD PTR [rax+0x8],rax
   140010028:	mov    rax,QWORD PTR [rsp+0x50]
   14001002d:	mov    QWORD PTR [rax+0x10],rax
   140010031:	mov    rax,QWORD PTR [rsp+0x50]
   140010036:	mov    BYTE PTR [rax+0x40],0x1
   14001003a:	mov    rax,QWORD PTR [rsp+0x50]
   14001003f:	mov    BYTE PTR [rax+0x41],0x1
   140010043:	mov    r13,rbx
   140010046:	mov    QWORD PTR [rsp+0x68],rbx
   14001004b:	mov    rsi,rbx
   14001004e:	mov    QWORD PTR [rsp+0x70],rbx
   140010053:	mov    QWORD PTR [rsp+0x78],rbx
   140010058:	mov    rbx,QWORD PTR [r14+0x8]
   14001005c:	cmp    rbx,QWORD PTR [r14+0x10]
   140010060:	je     0x140010264
   140010066:	lea    rcx,[rsp+0x68]
   14001006b:	call   0x140007834
   140010070:	mov    rdx,rbx
   140010073:	lea    rcx,[rbp+0x30]
   140010077:	call   0x1400103fc
   14001007c:	nop
   14001007d:	mov    r8,r12
   140010080:	lea    rdx,[rsp+0x68]
   140010085:	lea    rcx,[rbp+0x30]
   140010089:	call   0x14001d30c
   14001008e:	mov    rsi,QWORD PTR [rsp+0x70]
   140010093:	mov    rcx,rsi
   140010096:	mov    r13,QWORD PTR [rsp+0x68]
   14001009b:	sub    rcx,r13
   14001009e:	movabs rax,0x6666666666666667
   1400100a8:	imul   rcx
   1400100ab:	sar    rdx,0x4
   1400100af:	mov    rax,rdx
   1400100b2:	shr    rax,0x3f
   1400100b6:	add    rdx,rax
   1400100b9:	cmp    rdx,0x5
   1400100bd:	jbe    0x140010241
   1400100c3:	lea    rdx,[r13+0x28]
   1400100c7:	lea    r8,[rip+0x40cce]        # 0x140050d9c
   1400100ce:	lea    rcx,[rbp-0x20]
   1400100d2:	call   0x1400112ec
   1400100d7:	nop
   1400100d8:	lea    r8,[r13+0x50]
   1400100dc:	mov    rdx,rax
   1400100df:	lea    rcx,[rbp+0x8]
   1400100e3:	call   0x140005e40
   1400100e8:	nop
   1400100e9:	mov    rdx,rax
   1400100ec:	lea    rcx,[rsp+0x48]
   1400100f1:	call   0x1400118a4
   1400100f6:	mov    QWORD PTR [rsp+0x30],rax
   1400100fb:	lea    r8,[rax+0x18]
   1400100ff:	mov    QWORD PTR [rsp+0x38],r8
   140010104:	mov    rcx,QWORD PTR [rsp+0x50]
   140010109:	mov    rsi,QWORD PTR [rcx+0x8]
   14001010d:	mov    r12,rcx
   140010110:	mov    dil,0x1
   140010113:	cmp    BYTE PTR [rsi+0x41],0x0
   140010117:	jne    0x14001015a
   140010119:	mov    r13,r8
   14001011c:	mov    r12,rsi
   14001011f:	lea    r8,[rsi+0x18]
   140010123:	mov    rdx,r13
   140010126:	lea    rcx,[rsp+0x48]
   14001012b:	call   0x140004c0c
   140010130:	mov    dil,al
   140010133:	test   al,al
   140010135:	je     0x14001013c
   140010137:	mov    rsi,QWORD PTR [rsi]
   14001013a:	jmp    0x140010140
   14001013c:	mov    rsi,QWORD PTR [rsi+0x10]
   140010140:	cmp    BYTE PTR [rsi+0x41],0x0
   140010144:	je     0x14001011c
   140010146:	mov    rcx,QWORD PTR [rsp+0x50]
   14001014b:	mov    r13,QWORD PTR [rsp+0x68]
   140010150:	mov    rax,QWORD PTR [rsp+0x30]
   140010155:	mov    r8,QWORD PTR [rsp+0x38]
   14001015a:	mov    rdx,r12
   14001015d:	xor    esi,esi
   14001015f:	test   dil,dil
   140010162:	je     0x1400101cf
   140010164:	cmp    r12,QWORD PTR [rcx]
   140010167:	jne    0x140010187
   140010169:	mov    QWORD PTR [rsp+0x20],rax
   14001016e:	mov    r8b,0x1
   140010171:	lea    rdx,[rbp-0x68]
   140010175:	mov    r9,r12
   140010178:	lea    rcx,[rsp+0x48]
   14001017d:	call   0x140011610
   140010182:	jmp    0x14001020a
   140010187:	cmp    BYTE PTR [r12+0x41],sil
   14001018c:	je     0x140010195
   14001018e:	mov    rdx,QWORD PTR [r12+0x10]
   140010193:	jmp    0x1400101cf
   140010195:	mov    rax,QWORD PTR [r12]
   140010199:	cmp    BYTE PTR [rax+0x41],sil
   14001019d:	jne    0x1400101ae
   14001019f:	mov    rdx,rax
   1400101a2:	mov    rax,QWORD PTR [rax+0x10]
   1400101a6:	cmp    BYTE PTR [rax+0x41],sil
   1400101aa:	je     0x14001019f
   1400101ac:	jmp    0x1400101cf
   1400101ae:	mov    rax,QWORD PTR [r12+0x8]
   1400101b3:	jmp    0x1400101c1
   1400101b5:	cmp    rdx,QWORD PTR [rax]
   1400101b8:	jne    0x1400101c7
   1400101ba:	mov    rdx,rax
   1400101bd:	mov    rax,QWORD PTR [rax+0x8]
   1400101c1:	cmp    BYTE PTR [rax+0x41],sil
   1400101c5:	je     0x1400101b5
   1400101c7:	cmp    BYTE PTR [rdx+0x41],sil
   1400101cb:	cmove  rdx,rax
   1400101cf:	add    rdx,0x18
   1400101d3:	lea    rcx,[rsp+0x48]
   1400101d8:	call   0x140004c0c
   1400101dd:	test   al,al
   1400101df:	je     0x1400101f4
   1400101e1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400101e6:	mov    QWORD PTR [rsp+0x20],rcx
   1400101eb:	mov    r8b,dil
   1400101ee:	lea    rdx,[rbp-0x58]
   1400101f2:	jmp    0x140010175
   1400101f4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400101f9:	call   0x14000638c
   1400101fe:	mov    rcx,QWORD PTR [rsp+0x30]
   140010203:	call   QWORD PTR [rip+0x3946f]        # 0x140049678
   140010209:	nop
   14001020a:	cmp    QWORD PTR [rbp+0x20],0x10
   14001020f:	jb     0x14001021b
   140010211:	mov    rcx,QWORD PTR [rbp+0x8]
   140010215:	call   QWORD PTR [rip+0x3945d]        # 0x140049678
   14001021b:	mov    QWORD PTR [rbp+0x20],r15
   14001021f:	mov    QWORD PTR [rbp+0x18],rsi
   140010223:	mov    BYTE PTR [rbp+0x8],sil
   140010227:	cmp    QWORD PTR [rbp-0x8],0x10
   14001022c:	jb     0x140010238
   14001022e:	mov    rcx,QWORD PTR [rbp-0x20]
   140010232:	call   QWORD PTR [rip+0x39440]        # 0x140049678
   140010238:	mov    r12,QWORD PTR [rbp-0x78]
   14001023c:	mov    rsi,QWORD PTR [rsp+0x70]
   140010241:	cmp    QWORD PTR [rbp+0x48],0x10
   140010246:	jb     0x140010252
   140010248:	mov    rcx,QWORD PTR [rbp+0x30]
   14001024c:	call   QWORD PTR [rip+0x39426]        # 0x140049678
   140010252:	add    rbx,0x28
   140010256:	cmp    rbx,QWORD PTR [r14+0x10]
   14001025a:	jne    0x140010066
   140010260:	mov    rdi,QWORD PTR [rbp-0x70]
   140010264:	mov    rax,QWORD PTR [rsp+0x50]
   140010269:	mov    rbx,QWORD PTR [rax]
   14001026c:	xor    r12d,r12d
   14001026f:	cmp    rbx,rax
   140010272:	je     0x1400102ef
   140010274:	lea    rdx,[rbx+0x18]
   140010278:	lea    r8,[rip+0x40b21]        # 0x140050da0
   14001027f:	lea    rcx,[rbp-0x20]
   140010283:	call   0x1400112ec
   140010288:	nop
   140010289:	or     r9,0xffffffffffffffff
   14001028d:	xor    r8d,r8d
   140010290:	mov    rdx,rax
   140010293:	lea    rcx,[rbp-0x48]
   140010297:	call   0x140005638
   14001029c:	nop
   14001029d:	cmp    QWORD PTR [rbp-0x8],0x10
   1400102a2:	jb     0x1400102ae
   1400102a4:	mov    rcx,QWORD PTR [rbp-0x20]
   1400102a8:	call   QWORD PTR [rip+0x393ca]        # 0x140049678
   1400102ae:	cmp    BYTE PTR [rbx+0x41],r12b
   1400102b2:	jne    0x1400102e8
   1400102b4:	mov    rax,QWORD PTR [rbx+0x10]
   1400102b8:	cmp    BYTE PTR [rax+0x41],r12b
   1400102bc:	jne    0x1400102cc
   1400102be:	mov    rbx,rax
   1400102c1:	mov    rax,QWORD PTR [rax]
   1400102c4:	cmp    BYTE PTR [rax+0x41],r12b
   1400102c8:	je     0x1400102be
   1400102ca:	jmp    0x1400102e8
   1400102cc:	mov    rax,QWORD PTR [rbx+0x8]
   1400102d0:	jmp    0x1400102df
   1400102d2:	cmp    rbx,QWORD PTR [rax+0x10]
   1400102d6:	jne    0x1400102e5
   1400102d8:	mov    rbx,rax
   1400102db:	mov    rax,QWORD PTR [rax+0x8]
   1400102df:	cmp    BYTE PTR [rax+0x41],r12b
   1400102e3:	je     0x1400102d2
   1400102e5:	mov    rbx,rax
   1400102e8:	cmp    rbx,QWORD PTR [rsp+0x50]
   1400102ed:	jne    0x140010274
   1400102ef:	mov    r9,QWORD PTR [rbp-0x38]
   1400102f3:	test   r9,r9
   1400102f6:	je     0x14001032a
   1400102f8:	dec    r9
   1400102fb:	xor    r8d,r8d
   1400102fe:	lea    rdx,[rbp-0x20]
   140010302:	lea    rcx,[rbp-0x48]
   140010306:	call   0x140002e90
   14001030b:	nop
   14001030c:	mov    rdx,rax
   14001030f:	lea    rcx,[rbp-0x48]
   140010313:	call   0x140004730
   140010318:	nop
   140010319:	cmp    QWORD PTR [rbp-0x8],0x10
   14001031e:	jb     0x14001032a
   140010320:	mov    rcx,QWORD PTR [rbp-0x20]
   140010324:	call   QWORD PTR [rip+0x3934e]        # 0x140049678
   14001032a:	mov    QWORD PTR [rdi+0x18],r15
   14001032e:	mov    QWORD PTR [rdi+0x10],r12
   140010332:	mov    BYTE PTR [rdi],r12b
   140010335:	lea    rdx,[rbp-0x48]
   140010339:	mov    rcx,rdi
   14001033c:	call   0x140004730
   140010341:	mov    DWORD PTR [rsp+0x40],0x1
   140010349:	test   r13,r13
   14001034c:	je     0x140010371
   14001034e:	mov    rbx,r13
   140010351:	cmp    r13,rsi
   140010354:	je     0x140010367
   140010356:	mov    rcx,rbx
   140010359:	call   0x14000638c
   14001035e:	add    rbx,0x28
   140010362:	cmp    rbx,rsi
   140010365:	jne    0x140010356
   140010367:	mov    rcx,r13
   14001036a:	call   QWORD PTR [rip+0x39308]        # 0x140049678
   140010370:	nop
   140010371:	lea    rcx,[rsp+0x48]
   140010376:	call   0x140010ce8
   14001037b:	nop
   14001037c:	cmp    QWORD PTR [rbp-0x30],0x10
   140010381:	jb     0x14000ffeb
   140010387:	mov    rcx,QWORD PTR [rbp-0x48]
   14001038b:	call   QWORD PTR [rip+0x392e7]        # 0x140049678
   140010391:	jmp    0x14000ffeb
   140010396:	mov    QWORD PTR [rsp+0x30],rbx
   14001039b:	lea    rdx,[rsp+0x30]
   1400103a0:	lea    rcx,[rsp+0x68]
   1400103a5:	call   QWORD PTR [rip+0x39525]        # 0x1400498d0
   1400103ab:	lea    r11,[rip+0x39e26]        # 0x14004a1d8
   1400103b2:	mov    QWORD PTR [rsp+0x68],r11
   1400103b7:	lea    rdx,[rip+0x5338a]        # 0x140063748
   1400103be:	lea    rcx,[rsp+0x68]
   1400103c3:	call   0x14002b560
   1400103c8:	nop
   1400103c9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400103cd:	xor    rcx,rsp
   1400103d0:	call   0x14002b100
   1400103d5:	mov    rbx,QWORD PTR [rsp+0x1b8]
   1400103dd:	add    rsp,0x160
   1400103e4:	pop    r15
   1400103e6:	pop    r14
   1400103e8:	pop    r13
   1400103ea:	pop    r12
   1400103ec:	pop    rdi
   1400103ed:	pop    rsi
   1400103ee:	pop    rbp
   1400103ef:	ret    
   1400103f0:	int3   
   1400103f1:	int3   
   1400103f2:	int3   
   1400103f3:	int3   
   1400103f4:	jmp    0x140010ce8
   1400103f9:	int3   
   1400103fa:	int3   
   1400103fb:	int3   
   1400103fc:	mov    r11,rsp
   1400103ff:	push   rdi
   140010400:	sub    rsp,0x90
   140010407:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140010410:	mov    QWORD PTR [r11+0x18],rbx
   140010414:	mov    rax,QWORD PTR [rip+0x57dd5]        # 0x1400681f0
   14001041b:	xor    rax,rsp
   14001041e:	mov    QWORD PTR [rsp+0x80],rax
   140010426:	mov    rbx,rcx
   140010429:	xor    edi,edi
   14001042b:	mov    DWORD PTR [rsp+0x20],edi
   14001042f:	lea    rcx,[r11-0x68]
   140010433:	call   0x1400095c4
   140010438:	nop
   140010439:	mov    rdx,rax
   14001043c:	lea    rcx,[rsp+0x58]
   140010441:	call   0x14000b150
   140010446:	nop
   140010447:	cmp    QWORD PTR [rsp+0x48],0x8
   14001044d:	jb     0x14001045a
   14001044f:	mov    rcx,QWORD PTR [rsp+0x30]
   140010454:	call   QWORD PTR [rip+0x3921e]        # 0x140049678
   14001045a:	mov    QWORD PTR [rsp+0x48],0x7
   140010463:	mov    QWORD PTR [rsp+0x40],rdi
   140010468:	mov    WORD PTR [rsp+0x30],di
   14001046d:	lea    rdx,[rsp+0x58]
   140010472:	mov    rcx,rbx
   140010475:	call   0x140009474
   14001047a:	nop
   14001047b:	cmp    QWORD PTR [rsp+0x70],0x8
   140010481:	jb     0x14001048e
   140010483:	mov    rcx,QWORD PTR [rsp+0x58]
   140010488:	call   QWORD PTR [rip+0x391ea]        # 0x140049678
   14001048e:	mov    rax,rbx
   140010491:	mov    rcx,QWORD PTR [rsp+0x80]
   140010499:	xor    rcx,rsp
   14001049c:	call   0x14002b100
   1400104a1:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400104a9:	add    rsp,0x90
   1400104b0:	pop    rdi
   1400104b1:	ret    
   1400104b2:	int3   
   1400104b3:	int3   
   1400104b4:	rex push rbx
   1400104b6:	push   rbp
   1400104b7:	push   rsi
   1400104b8:	push   rdi
   1400104b9:	push   r12
   1400104bb:	sub    rsp,0x80
   1400104c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400104cb:	mov    rax,QWORD PTR [rip+0x57d1e]        # 0x1400681f0
   1400104d2:	xor    rax,rsp
   1400104d5:	mov    QWORD PTR [rsp+0x78],rax
   1400104da:	mov    r12,r8
   1400104dd:	mov    rsi,rdx
   1400104e0:	mov    rbp,rcx
   1400104e3:	mov    rax,QWORD PTR [rcx+0x10]
   1400104e7:	cmp    QWORD PTR [rcx+0x8],rax
   1400104eb:	je     0x1400105af
   1400104f1:	mov    rax,QWORD PTR [rdx+0x8]
   1400104f5:	cmp    QWORD PTR [rdx],rax
   1400104f8:	je     0x1400105af
   1400104fe:	mov    rcx,r8
   140010501:	call   0x140007834
   140010506:	mov    rdi,QWORD PTR [rbp+0x8]
   14001050a:	jmp    0x1400105a5
   14001050f:	mov    rdx,rdi
   140010512:	lea    rcx,[rsp+0x28]
   140010517:	call   0x1400103fc
   14001051c:	nop
   14001051d:	lea    rdx,[rsp+0x28]
   140010522:	lea    rcx,[rsp+0x50]
   140010527:	call   0x14000fcb8
   14001052c:	nop
   14001052d:	mov    rdx,rax
   140010530:	lea    rcx,[rsp+0x28]
   140010535:	call   0x140004730
   14001053a:	nop
   14001053b:	cmp    QWORD PTR [rsp+0x68],0x10
   140010541:	jb     0x14001054e
   140010543:	mov    rcx,QWORD PTR [rsp+0x50]
   140010548:	call   QWORD PTR [rip+0x3912a]        # 0x140049678
   14001054e:	mov    rbx,QWORD PTR [rsi]
   140010551:	jmp    0x14001057a
   140010553:	cmp    QWORD PTR [rbx+0x18],0x10
   140010558:	jb     0x14001055f
   14001055a:	mov    rdx,QWORD PTR [rbx]
   14001055d:	jmp    0x140010562
   14001055f:	mov    rdx,rbx
   140010562:	mov    r8,QWORD PTR [rbx+0x10]
   140010566:	lea    rcx,[rsp+0x28]
   14001056b:	call   0x1400049b8
   140010570:	cmp    rax,0xffffffffffffffff
   140010574:	jne    0x140010582
   140010576:	add    rbx,0x28
   14001057a:	cmp    rbx,QWORD PTR [rsi+0x8]
   14001057e:	jne    0x140010553
   140010580:	jmp    0x14001058e
   140010582:	mov    rdx,rdi
   140010585:	mov    rcx,r12
   140010588:	call   0x140010bd4
   14001058d:	nop
   14001058e:	cmp    QWORD PTR [rsp+0x40],0x10
   140010594:	jb     0x1400105a1
   140010596:	mov    rcx,QWORD PTR [rsp+0x28]
   14001059b:	call   QWORD PTR [rip+0x390d7]        # 0x140049678
   1400105a1:	add    rdi,0x28
   1400105a5:	cmp    rdi,QWORD PTR [rbp+0x10]
   1400105a9:	jne    0x14001050f
   1400105af:	mov    rcx,QWORD PTR [rsp+0x78]
   1400105b4:	xor    rcx,rsp
   1400105b7:	call   0x14002b100
   1400105bc:	add    rsp,0x80
   1400105c3:	pop    r12
   1400105c5:	pop    rdi
   1400105c6:	pop    rsi
   1400105c7:	pop    rbp
   1400105c8:	pop    rbx
   1400105c9:	ret    
   1400105ca:	int3   
   1400105cb:	int3   
   1400105cc:	mov    rax,rsp
   1400105cf:	push   rbp
   1400105d0:	push   rsi
   1400105d1:	push   rdi
   1400105d2:	push   r12
   1400105d4:	push   r13
   1400105d6:	push   r14
   1400105d8:	push   r15
   1400105da:	lea    rbp,[rax-0x48]
   1400105de:	sub    rsp,0x110
   1400105e5:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400105ee:	mov    QWORD PTR [rax+0x18],rbx
   1400105f2:	mov    rax,QWORD PTR [rip+0x57bf7]        # 0x1400681f0
   1400105f9:	xor    rax,rsp
   1400105fc:	mov    QWORD PTR [rbp+0x8],rax
   140010600:	mov    rsi,rdx
   140010603:	mov    r15,rcx
   140010606:	mov    rdx,QWORD PTR [rdx+0x8]
   14001060a:	mov    rbx,QWORD PTR [rsi]
   14001060d:	cmp    rbx,rdx
   140010610:	je     0x140010634
   140010612:	mov    rdi,rdx
   140010615:	sub    rdi,rdx
   140010618:	sar    rdi,0x3
   14001061c:	shl    rdi,0x3
   140010620:	mov    r8,rdi
   140010623:	mov    rcx,rbx
   140010626:	call   QWORD PTR [rip+0x38fc4]        # 0x1400495f0
   14001062c:	lea    r11,[rdi+rbx*1]
   140010630:	mov    QWORD PTR [rsi+0x8],r11
   140010634:	xor    r13d,r13d
   140010637:	mov    r12d,r13d
   14001063a:	mov    QWORD PTR [rsp+0x40],r13
   14001063f:	mov    r14d,r13d
   140010642:	mov    QWORD PTR [rsp+0x48],r13
   140010647:	mov    QWORD PTR [rsp+0x50],r13
   14001064c:	mov    rbx,QWORD PTR [r15]
   14001064f:	cmp    rbx,QWORD PTR [r15+0x8]
   140010653:	je     0x140010a40
   140010659:	lea    rcx,[rsp+0x40]
   14001065e:	call   0x140007834
   140010663:	mov    QWORD PTR [rbp-0x80],0xf
   14001066b:	mov    QWORD PTR [rsp+0x78],r13
   140010670:	mov    BYTE PTR [rsp+0x68],r13b
   140010675:	lea    rcx,[rip+0x40720]        # 0x140050d9c
   14001067c:	call   QWORD PTR [rip+0x38f86]        # 0x140049608
   140010682:	mov    r8,rax
   140010685:	lea    rdx,[rip+0x40710]        # 0x140050d9c
   14001068c:	lea    rcx,[rsp+0x68]
   140010691:	call   0x140005154
   140010696:	nop
   140010697:	lea    r8,[rsp+0x68]
   14001069c:	lea    rdx,[rsp+0x40]
   1400106a1:	mov    rcx,rbx
   1400106a4:	call   0x14001d30c
   1400106a9:	nop
   1400106aa:	cmp    QWORD PTR [rbp-0x80],0x10
   1400106af:	jb     0x1400106bc
   1400106b1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400106b6:	call   QWORD PTR [rip+0x38fbc]        # 0x140049678
   1400106bc:	mov    r14,QWORD PTR [rsp+0x48]
   1400106c1:	mov    rcx,r14
   1400106c4:	mov    r12,QWORD PTR [rsp+0x40]
   1400106c9:	sub    rcx,r12
   1400106cc:	movabs rax,0x6666666666666667
   1400106d6:	imul   rcx
   1400106d9:	sar    rdx,0x4
   1400106dd:	mov    rax,rdx
   1400106e0:	shr    rax,0x3f
   1400106e4:	add    rdx,rax
   1400106e7:	cmp    rdx,0x2
   1400106eb:	jne    0x140010a1b
   1400106f1:	lea    ecx,[rdx+0x4e]
   1400106f4:	call   QWORD PTR [rip+0x38f9e]        # 0x140049698
   1400106fa:	mov    rdi,rax
   1400106fd:	mov    QWORD PTR [rsp+0x38],rax
   140010702:	test   rax,rax
   140010705:	je     0x140010750
   140010707:	lea    rdx,[r12+0x28]
   14001070c:	mov    QWORD PTR [rax+0x18],0xf
   140010714:	mov    QWORD PTR [rax+0x10],r13
   140010718:	mov    BYTE PTR [rax],r13b
   14001071b:	or     r9,0xffffffffffffffff
   14001071f:	xor    r8d,r8d
   140010722:	mov    rcx,rax
   140010725:	call   0x1400048b8
   14001072a:	nop
   14001072b:	lea    rcx,[rdi+0x28]
   14001072f:	mov    QWORD PTR [rcx+0x18],0xf
   140010737:	mov    QWORD PTR [rcx+0x10],r13
   14001073b:	mov    BYTE PTR [rcx],r13b
   14001073e:	or     r9,0xffffffffffffffff
   140010742:	xor    r8d,r8d
   140010745:	mov    rdx,r12
   140010748:	call   0x1400048b8
   14001074d:	nop
   14001074e:	jmp    0x140010753
   140010750:	mov    rdi,r13
   140010753:	mov    QWORD PTR [rsp+0x38],rdi
   140010758:	mov    QWORD PTR [rbp-0x30],0xf
   140010760:	mov    QWORD PTR [rbp-0x38],r13
   140010764:	mov    BYTE PTR [rbp-0x48],r13b
   140010768:	lea    rcx,[rip+0x40625]        # 0x140050d94
   14001076f:	call   QWORD PTR [rip+0x38e93]        # 0x140049608
   140010775:	mov    r8,rax
   140010778:	lea    rdx,[rip+0x40615]        # 0x140050d94
   14001077f:	lea    rcx,[rbp-0x48]
   140010783:	call   0x140005154
   140010788:	nop
   140010789:	lea    rcx,[rbp-0x20]
   14001078d:	call   0x14001b358
   140010792:	mov    r13,rax
   140010795:	lea    rax,[rsp+0x34]
   14001079a:	test   rax,rax
   14001079d:	je     0x140010876
   1400107a3:	cmp    QWORD PTR [r13+0x10],0x0
   1400107a8:	je     0x140010876
   1400107ae:	lea    r8,[rsp+0x30]
   1400107b3:	lea    rdx,[rsp+0x30]
   1400107b8:	lea    rcx,[rsp+0x68]
   1400107bd:	call   0x140005454
   1400107c2:	nop
   1400107c3:	mov    rdx,r13
   1400107c6:	lea    rcx,[rsp+0x68]
   1400107cb:	call   0x140001eac
   1400107d0:	lea    r8,[rsp+0x34]
   1400107d5:	lea    rdx,[rbp-0x48]
   1400107d9:	lea    rcx,[rsp+0x68]
   1400107de:	call   0x14001e394
   1400107e3:	xor    eax,eax
   1400107e5:	cmp    DWORD PTR [rsp+0x34],eax
   1400107e9:	jne    0x14001085d
   1400107eb:	mov    QWORD PTR [rbp-0x58],0xf
   1400107f3:	mov    QWORD PTR [rbp-0x60],rax
   1400107f7:	mov    BYTE PTR [rbp-0x70],al
   1400107fa:	lea    rcx,[rip+0x41177]        # 0x140051978
   140010801:	call   QWORD PTR [rip+0x38e01]        # 0x140049608
   140010807:	mov    r8,rax
   14001080a:	lea    rdx,[rip+0x41167]        # 0x140051978
   140010811:	lea    rcx,[rbp-0x70]
   140010815:	call   0x140005154
   14001081a:	nop
   14001081b:	lea    rcx,[rdi+0x28]
   14001081f:	lea    rax,[rsp+0x34]
   140010824:	mov    QWORD PTR [rsp+0x20],rax
   140010829:	lea    r9,[rbp-0x70]
   14001082d:	lea    r8,[rsp+0x68]
   140010832:	mov    rdx,rdi
   140010835:	call   0x14001e1a0
   14001083a:	nop
   14001083b:	cmp    QWORD PTR [rbp-0x58],0x10
   140010840:	jb     0x14001084c
   140010842:	mov    rcx,QWORD PTR [rbp-0x70]
   140010846:	call   QWORD PTR [rip+0x38e2c]        # 0x140049678
   14001084c:	mov    QWORD PTR [rbp-0x58],0xf
   140010854:	and    QWORD PTR [rbp-0x60],0x0
   140010859:	mov    BYTE PTR [rbp-0x70],0x0
   14001085d:	mov    rdx,r13
   140010860:	lea    rcx,[rsp+0x68]
   140010865:	call   0x1400020e8
   14001086a:	nop
   14001086b:	lea    rcx,[rsp+0x68]
   140010870:	call   0x1400013c0
   140010875:	nop
   140010876:	cmp    QWORD PTR [rbp-0x8],0x8
   14001087b:	jb     0x140010887
   14001087d:	mov    rcx,QWORD PTR [rbp-0x20]
   140010881:	call   QWORD PTR [rip+0x38df1]        # 0x140049678
   140010887:	mov    QWORD PTR [rbp-0x8],0x7
   14001088f:	xor    r13d,r13d
   140010892:	mov    QWORD PTR [rbp-0x10],r13
   140010896:	mov    WORD PTR [rbp-0x20],r13w
   14001089b:	cmp    QWORD PTR [rbp-0x30],0x10
   1400108a0:	jb     0x1400108ac
   1400108a2:	mov    rcx,QWORD PTR [rbp-0x48]
   1400108a6:	call   QWORD PTR [rip+0x38dcc]        # 0x140049678
   1400108ac:	cmp    DWORD PTR [rsp+0x34],0x2
   1400108b1:	jne    0x1400109cd
   1400108b7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400108bb:	lea    rax,[rsp+0x38]
   1400108c0:	cmp    rax,rcx
   1400108c3:	jae    0x140010959
   1400108c9:	lea    rax,[rsp+0x38]
   1400108ce:	cmp    QWORD PTR [rsi],rax
   1400108d1:	ja     0x140010959
   1400108d7:	lea    rdi,[rsp+0x38]
   1400108dc:	sub    rdi,QWORD PTR [rsi]
   1400108df:	sar    rdi,0x3
   1400108e3:	mov    rdx,QWORD PTR [rsi+0x10]
   1400108e7:	cmp    rcx,rdx
   1400108ea:	jne    0x140010944
   1400108ec:	sub    rcx,QWORD PTR [rsi]
   1400108ef:	sar    rcx,0x3
   1400108f3:	movabs rax,0x1ffffffffffffffe
   1400108fd:	cmp    rcx,rax
   140010900:	ja     0x140010a24
   140010906:	inc    rcx
   140010909:	sub    rdx,QWORD PTR [rsi]
   14001090c:	sar    rdx,0x3
   140010910:	cmp    rcx,rdx
   140010913:	jbe    0x140010944
   140010915:	mov    r8,rdx
   140010918:	shr    r8,1
   14001091b:	movabs rax,0x1fffffffffffffff
   140010925:	sub    rax,r8
   140010928:	cmp    rax,rdx
   14001092b:	jae    0x140010932
   14001092d:	mov    rdx,r13
   140010930:	jmp    0x140010935
   140010932:	add    rdx,r8
   140010935:	cmp    rdx,rcx
   140010938:	cmovb  rdx,rcx
   14001093c:	mov    rcx,rsi
   14001093f:	call   0x140015170
   140010944:	mov    rax,QWORD PTR [rsi]
   140010947:	mov    rcx,QWORD PTR [rsi+0x8]
   14001094b:	test   rcx,rcx
   14001094e:	je     0x1400109c6
   140010950:	mov    rax,QWORD PTR [rax+rdi*8]
   140010954:	mov    QWORD PTR [rcx],rax
   140010957:	jmp    0x1400109c6
   140010959:	mov    rdx,QWORD PTR [rsi+0x10]
   14001095d:	cmp    rcx,rdx
   140010960:	jne    0x1400109ba
   140010962:	sub    rcx,QWORD PTR [rsi]
   140010965:	sar    rcx,0x3
   140010969:	movabs rax,0x1ffffffffffffffe
   140010973:	cmp    rcx,rax
   140010976:	ja     0x140010a32
   14001097c:	inc    rcx
   14001097f:	sub    rdx,QWORD PTR [rsi]
   140010982:	sar    rdx,0x3
   140010986:	cmp    rcx,rdx
   140010989:	jbe    0x1400109ba
   14001098b:	mov    r8,rdx
   14001098e:	shr    r8,1
   140010991:	movabs rax,0x1fffffffffffffff
   14001099b:	sub    rax,r8
   14001099e:	cmp    rax,rdx
   1400109a1:	jae    0x1400109a8
   1400109a3:	mov    rdx,r13
   1400109a6:	jmp    0x1400109ab
   1400109a8:	add    rdx,r8
   1400109ab:	cmp    rdx,rcx
   1400109ae:	cmovb  rdx,rcx
   1400109b2:	mov    rcx,rsi
   1400109b5:	call   0x140015170
   1400109ba:	mov    rax,QWORD PTR [rsi+0x8]
   1400109be:	test   rax,rax
   1400109c1:	je     0x1400109c6
   1400109c3:	mov    QWORD PTR [rax],rdi
   1400109c6:	add    QWORD PTR [rsi+0x8],0x8
   1400109cb:	jmp    0x140010a1b
   1400109cd:	test   rdi,rdi
   1400109d0:	je     0x140010a1b
   1400109d2:	cmp    QWORD PTR [rdi+0x40],0x10
   1400109d7:	jb     0x1400109e3
   1400109d9:	mov    rcx,QWORD PTR [rdi+0x28]
   1400109dd:	call   QWORD PTR [rip+0x38c95]        # 0x140049678
   1400109e3:	mov    QWORD PTR [rdi+0x40],0xf
   1400109eb:	mov    QWORD PTR [rdi+0x38],r13
   1400109ef:	mov    BYTE PTR [rdi+0x28],r13b
   1400109f3:	cmp    QWORD PTR [rdi+0x18],0x10
   1400109f8:	jb     0x140010a03
   1400109fa:	mov    rcx,QWORD PTR [rdi]
   1400109fd:	call   QWORD PTR [rip+0x38c75]        # 0x140049678
   140010a03:	mov    QWORD PTR [rdi+0x18],0xf
   140010a0b:	mov    QWORD PTR [rdi+0x10],r13
   140010a0f:	mov    BYTE PTR [rdi],r13b
   140010a12:	mov    rcx,rdi
   140010a15:	call   QWORD PTR [rip+0x38c5d]        # 0x140049678
   140010a1b:	add    rbx,0x28
   140010a1f:	jmp    0x14001064f
   140010a24:	lea    rcx,[rip+0x3ff2d]        # 0x140050958
   140010a2b:	call   QWORD PTR [rip+0x38b67]        # 0x140049598
   140010a31:	int3   
   140010a32:	lea    rcx,[rip+0x3ff1f]        # 0x140050958
   140010a39:	call   QWORD PTR [rip+0x38b59]        # 0x140049598
   140010a3f:	int3   
   140010a40:	mov    rax,QWORD PTR [rsi+0x8]
   140010a44:	cmp    QWORD PTR [rsi],rax
   140010a47:	setne  dil
   140010a4b:	test   r12,r12
   140010a4e:	je     0x140010a72
   140010a50:	mov    rbx,r12
   140010a53:	cmp    r12,r14
   140010a56:	je     0x140010a69
   140010a58:	mov    rcx,rbx
   140010a5b:	call   0x14000638c
   140010a60:	add    rbx,0x28
   140010a64:	cmp    rbx,r14
   140010a67:	jne    0x140010a58
   140010a69:	mov    rcx,r12
   140010a6c:	call   QWORD PTR [rip+0x38c06]        # 0x140049678
   140010a72:	mov    al,dil
   140010a75:	mov    rcx,QWORD PTR [rbp+0x8]
   140010a79:	xor    rcx,rsp
   140010a7c:	call   0x14002b100
   140010a81:	mov    rbx,QWORD PTR [rsp+0x160]
   140010a89:	add    rsp,0x110
   140010a90:	pop    r15
   140010a92:	pop    r14
   140010a94:	pop    r13
   140010a96:	pop    r12
   140010a98:	pop    rdi
   140010a99:	pop    rsi
   140010a9a:	pop    rbp
   140010a9b:	ret    
   140010a9c:	mov    rax,rsp
   140010a9f:	push   rbp
   140010aa0:	push   rsi
   140010aa1:	push   rdi
   140010aa2:	push   r12
   140010aa4:	push   r14
   140010aa6:	lea    rbp,[rax-0x5f]
   140010aaa:	sub    rsp,0xd0
   140010ab1:	mov    QWORD PTR [rbp-0x79],0xfffffffffffffffe
   140010ab9:	mov    QWORD PTR [rax+0x18],rbx
   140010abd:	mov    rax,QWORD PTR [rip+0x5772c]        # 0x1400681f0
   140010ac4:	xor    rax,rsp
   140010ac7:	mov    QWORD PTR [rbp+0x2f],rax
   140010acb:	mov    rsi,rdx
   140010ace:	mov    r12,rcx
   140010ad1:	call   0x140007834
   140010ad6:	mov    rbx,QWORD PTR [rsi]
   140010ad9:	cmp    rbx,QWORD PTR [rsi+0x8]
   140010add:	je     0x140010bae
   140010ae3:	mov    r14d,0xf
   140010ae9:	lea    rdx,[rbp+0x7]
   140010aed:	mov    rcx,QWORD PTR [rbx]
   140010af0:	call   0x14000fc44
   140010af5:	mov    rdi,rax
   140010af8:	lea    rdx,[rbp-0x49]
   140010afc:	mov    rcx,QWORD PTR [rbx]
   140010aff:	call   0x14000fc7c
   140010b04:	nop
   140010b05:	lea    r8,[rip+0x40290]        # 0x140050d9c
   140010b0c:	mov    rdx,rax
   140010b0f:	lea    rcx,[rbp-0x71]
   140010b13:	call   0x1400113b0
   140010b18:	nop
   140010b19:	mov    r8,rdi
   140010b1c:	mov    rdx,rax
   140010b1f:	lea    rcx,[rbp-0x21]
   140010b23:	call   0x140011414
   140010b28:	nop
   140010b29:	mov    rdx,rax
   140010b2c:	mov    rcx,r12
   140010b2f:	call   0x1400077b0
   140010b34:	nop
   140010b35:	cmp    QWORD PTR [rbp-0x9],0x10
   140010b3a:	jb     0x140010b46
   140010b3c:	mov    rcx,QWORD PTR [rbp-0x21]
   140010b40:	call   QWORD PTR [rip+0x38b32]        # 0x140049678
   140010b46:	mov    QWORD PTR [rbp-0x9],r14
   140010b4a:	and    QWORD PTR [rbp-0x11],0x0
   140010b4f:	mov    BYTE PTR [rbp-0x21],0x0
   140010b53:	cmp    QWORD PTR [rbp-0x59],0x10
   140010b58:	jb     0x140010b64
   140010b5a:	mov    rcx,QWORD PTR [rbp-0x71]
   140010b5e:	call   QWORD PTR [rip+0x38b14]        # 0x140049678
   140010b64:	mov    QWORD PTR [rbp-0x59],r14
   140010b68:	and    QWORD PTR [rbp-0x61],0x0
   140010b6d:	mov    BYTE PTR [rbp-0x71],0x0
   140010b71:	cmp    QWORD PTR [rbp-0x31],0x10
   140010b76:	jb     0x140010b82
   140010b78:	mov    rcx,QWORD PTR [rbp-0x49]
   140010b7c:	call   QWORD PTR [rip+0x38af6]        # 0x140049678
   140010b82:	mov    QWORD PTR [rbp-0x31],r14
   140010b86:	and    QWORD PTR [rbp-0x39],0x0
   140010b8b:	mov    BYTE PTR [rbp-0x49],0x0
   140010b8f:	cmp    QWORD PTR [rbp+0x1f],0x10
   140010b94:	jb     0x140010ba0
   140010b96:	mov    rcx,QWORD PTR [rbp+0x7]
   140010b9a:	call   QWORD PTR [rip+0x38ad8]        # 0x140049678
   140010ba0:	add    rbx,0x8
   140010ba4:	cmp    rbx,QWORD PTR [rsi+0x8]
   140010ba8:	jne    0x140010ae9
   140010bae:	mov    rcx,QWORD PTR [rbp+0x2f]
   140010bb2:	xor    rcx,rsp
   140010bb5:	call   0x14002b100
   140010bba:	mov    rbx,QWORD PTR [rsp+0x110]
   140010bc2:	add    rsp,0xd0
   140010bc9:	pop    r14
   140010bcb:	pop    r12
   140010bcd:	pop    rdi
   140010bce:	pop    rsi
   140010bcf:	pop    rbp
   140010bd0:	ret    
   140010bd1:	int3   
   140010bd2:	int3   
   140010bd3:	int3   
   140010bd4:	rex push rdi
   140010bd6:	sub    rsp,0x30
   140010bda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010be3:	mov    QWORD PTR [rsp+0x50],rbx
   140010be8:	mov    rdi,rdx
   140010beb:	mov    rbx,rcx
   140010bee:	mov    rcx,QWORD PTR [rcx+0x8]
   140010bf2:	cmp    rdx,rcx
   140010bf5:	jae    0x140010c68
   140010bf7:	cmp    QWORD PTR [rbx],rdx
   140010bfa:	ja     0x140010c68
   140010bfc:	sub    rdi,QWORD PTR [rbx]
   140010bff:	movabs rax,0x6666666666666667
   140010c09:	imul   rdi
   140010c0c:	mov    rdi,rdx
   140010c0f:	sar    rdi,0x4
   140010c13:	mov    rax,rdi
   140010c16:	shr    rax,0x3f
   140010c1a:	add    rdi,rax
   140010c1d:	cmp    rcx,QWORD PTR [rbx+0x10]
   140010c21:	jne    0x140010c2b
   140010c23:	mov    rcx,rbx
   140010c26:	call   0x1400078b0
   140010c2b:	lea    rcx,[rdi+rdi*4]
   140010c2f:	mov    rax,QWORD PTR [rbx]
   140010c32:	lea    rdx,[rax+rcx*8]
   140010c36:	mov    rcx,QWORD PTR [rbx+0x8]
   140010c3a:	mov    QWORD PTR [rsp+0x40],rcx
   140010c3f:	mov    QWORD PTR [rsp+0x48],rcx
   140010c44:	test   rcx,rcx
   140010c47:	je     0x140010c66
   140010c49:	mov    QWORD PTR [rcx+0x18],0xf
   140010c51:	and    QWORD PTR [rcx+0x10],0x0
   140010c56:	mov    BYTE PTR [rcx],0x0
   140010c59:	or     r9,0xffffffffffffffff
   140010c5d:	xor    r8d,r8d
   140010c60:	call   0x1400048b8
   140010c65:	nop
   140010c66:	jmp    0x140010ca9
   140010c68:	cmp    rcx,QWORD PTR [rbx+0x10]
   140010c6c:	jne    0x140010c76
   140010c6e:	mov    rcx,rbx
   140010c71:	call   0x1400078b0
   140010c76:	mov    rcx,QWORD PTR [rbx+0x8]
   140010c7a:	mov    QWORD PTR [rsp+0x40],rcx
   140010c7f:	mov    QWORD PTR [rsp+0x48],rcx
   140010c84:	test   rcx,rcx
   140010c87:	je     0x140010ca9
   140010c89:	mov    QWORD PTR [rcx+0x18],0xf
   140010c91:	and    QWORD PTR [rcx+0x10],0x0
   140010c96:	mov    BYTE PTR [rcx],0x0
   140010c99:	or     r9,0xffffffffffffffff
   140010c9d:	xor    r8d,r8d
   140010ca0:	mov    rdx,rdi
   140010ca3:	call   0x1400048b8
   140010ca8:	nop
   140010ca9:	add    QWORD PTR [rbx+0x8],0x28
   140010cae:	mov    rbx,QWORD PTR [rsp+0x50]
   140010cb3:	add    rsp,0x30
   140010cb7:	pop    rdi
   140010cb8:	ret    
   140010cb9:	int3   
   140010cba:	int3   
   140010cbb:	int3   
   140010cbc:	rex push rbx
   140010cbe:	sub    rsp,0x20
   140010cc2:	mov    rbx,rcx
   140010cc5:	mov    rcx,QWORD PTR [rcx]
   140010cc8:	test   rcx,rcx
   140010ccb:	je     0x140010cd3
   140010ccd:	call   QWORD PTR [rip+0x389a5]        # 0x140049678
   140010cd3:	and    QWORD PTR [rbx],0x0
   140010cd7:	and    QWORD PTR [rbx+0x8],0x0
   140010cdc:	and    QWORD PTR [rbx+0x10],0x0
   140010ce1:	add    rsp,0x20
   140010ce5:	pop    rbx
   140010ce6:	ret    
   140010ce7:	int3   
   140010ce8:	mov    QWORD PTR [rsp+0x8],rcx
   140010ced:	push   rdi
   140010cee:	sub    rsp,0x30
   140010cf2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010cfb:	mov    QWORD PTR [rsp+0x50],rbx
   140010d00:	mov    QWORD PTR [rsp+0x58],rbp
   140010d05:	mov    rbp,rcx
   140010d08:	mov    rdi,QWORD PTR [rcx+0x8]
   140010d0c:	mov    rbx,QWORD PTR [rdi]
   140010d0f:	cmp    rbx,rbx
   140010d12:	jne    0x140010dc0
   140010d18:	cmp    rdi,rdi
   140010d1b:	jne    0x140010dc0
   140010d21:	mov    rbx,QWORD PTR [rdi+0x8]
   140010d25:	mov    rdi,rbx
   140010d28:	cmp    BYTE PTR [rbx+0x41],0x0
   140010d2c:	jne    0x140010d58
   140010d2e:	mov    rdx,QWORD PTR [rdi+0x10]
   140010d32:	mov    rcx,rbp
   140010d35:	call   0x140011294
   140010d3a:	mov    rdi,QWORD PTR [rdi]
   140010d3d:	lea    rcx,[rbx+0x18]
   140010d41:	call   0x14000638c
   140010d46:	mov    rcx,rbx
   140010d49:	call   QWORD PTR [rip+0x38929]        # 0x140049678
   140010d4f:	mov    rbx,rdi
   140010d52:	cmp    BYTE PTR [rdi+0x41],0x0
   140010d56:	je     0x140010d2e
   140010d58:	mov    rax,QWORD PTR [rbp+0x8]
   140010d5c:	mov    QWORD PTR [rax+0x8],rax
   140010d60:	mov    rax,QWORD PTR [rbp+0x8]
   140010d64:	mov    QWORD PTR [rax],rax
   140010d67:	mov    rax,QWORD PTR [rbp+0x8]
   140010d6b:	mov    QWORD PTR [rax+0x10],rax
   140010d6f:	and    QWORD PTR [rbp+0x10],0x0
   140010d74:	jmp    0x140010dc5
   140010d76:	mov    r8,rbx
   140010d79:	cmp    BYTE PTR [rbx+0x41],0x0
   140010d7d:	jne    0x140010db3
   140010d7f:	mov    rax,QWORD PTR [rbx+0x10]
   140010d83:	cmp    BYTE PTR [rax+0x41],0x0
   140010d87:	jne    0x140010d97
   140010d89:	mov    rbx,rax
   140010d8c:	mov    rax,QWORD PTR [rax]
   140010d8f:	cmp    BYTE PTR [rax+0x41],0x0
   140010d93:	je     0x140010d89
   140010d95:	jmp    0x140010db3
   140010d97:	mov    rax,QWORD PTR [rbx+0x8]
   140010d9b:	jmp    0x140010daa
   140010d9d:	cmp    rbx,QWORD PTR [rax+0x10]
   140010da1:	jne    0x140010db0
   140010da3:	mov    rbx,rax
   140010da6:	mov    rax,QWORD PTR [rax+0x8]
   140010daa:	cmp    BYTE PTR [rax+0x41],0x0
   140010dae:	je     0x140010d9d
   140010db0:	mov    rbx,rax
   140010db3:	lea    rdx,[rsp+0x48]
   140010db8:	mov    rcx,rbp
   140010dbb:	call   0x140010dec
   140010dc0:	cmp    rbx,rdi
   140010dc3:	jne    0x140010d76
   140010dc5:	mov    rcx,QWORD PTR [rbp+0x8]
   140010dc9:	mov    rbx,QWORD PTR [rsp+0x50]
   140010dce:	mov    rbp,QWORD PTR [rsp+0x58]
   140010dd3:	add    rsp,0x30
   140010dd7:	pop    rdi
   140010dd8:	rex.W jmp QWORD PTR [rip+0x38899]        # 0x140049678
   140010ddf:	int3   
   140010de0:	mov    rcx,QWORD PTR [rcx+0x8]
   140010de4:	rex.W jmp QWORD PTR [rip+0x3888d]        # 0x140049678
   140010deb:	int3   
   140010dec:	mov    rax,rsp
   140010def:	mov    QWORD PTR [rax+0x8],rbx
   140010df3:	mov    QWORD PTR [rax+0x10],rbp
   140010df7:	mov    QWORD PTR [rax+0x20],rsi
   140010dfb:	mov    QWORD PTR [rax+0x18],r8
   140010dff:	push   rdi
   140010e00:	sub    rsp,0x20
   140010e04:	xor    ebp,ebp
   140010e06:	mov    rsi,rdx
   140010e09:	mov    rdi,rcx
   140010e0c:	cmp    BYTE PTR [r8+0x41],bpl
   140010e10:	je     0x140010e20
   140010e12:	lea    rcx,[rip+0x3faf7]        # 0x140050910
   140010e19:	call   QWORD PTR [rip+0x38791]        # 0x1400495b0
   140010e1f:	int3   
   140010e20:	lea    rcx,[r8+0x10]
   140010e24:	mov    rbx,r8
   140010e27:	mov    r9,QWORD PTR [rcx]
   140010e2a:	cmp    BYTE PTR [r9+0x41],bpl
   140010e2e:	jne    0x140010e43
   140010e30:	mov    rax,QWORD PTR [r9]
   140010e33:	jmp    0x140010e3b
   140010e35:	mov    r9,rax
   140010e38:	mov    rax,QWORD PTR [rax]
   140010e3b:	cmp    BYTE PTR [rax+0x41],bpl
   140010e3f:	je     0x140010e35
   140010e41:	jmp    0x140010e61
   140010e43:	mov    r9,QWORD PTR [r8+0x8]
   140010e47:	jmp    0x140010e5b
   140010e49:	cmp    r8,QWORD PTR [r9+0x10]
   140010e4d:	jne    0x140010e61
   140010e4f:	mov    r8,r9
   140010e52:	mov    QWORD PTR [rsp+0x40],r9
   140010e57:	mov    r9,QWORD PTR [r9+0x8]
   140010e5b:	cmp    BYTE PTR [r9+0x41],bpl
   140010e5f:	je     0x140010e49
   140010e61:	mov    QWORD PTR [rsp+0x40],r9
   140010e66:	mov    rdx,QWORD PTR [rbx]
   140010e69:	cmp    BYTE PTR [rdx+0x41],bpl
   140010e6d:	je     0x140010e74
   140010e6f:	mov    r8,QWORD PTR [rcx]
   140010e72:	jmp    0x140010e8f
   140010e74:	mov    rax,QWORD PTR [rcx]
   140010e77:	cmp    BYTE PTR [rax+0x41],bpl
   140010e7b:	je     0x140010e82
   140010e7d:	mov    r8,rdx
   140010e80:	jmp    0x140010e8f
   140010e82:	mov    r8,QWORD PTR [r9+0x10]
   140010e86:	cmp    r9,rbx
   140010e89:	jne    0x140010f1b
   140010e8f:	mov    rdx,QWORD PTR [rbx+0x8]
   140010e93:	cmp    BYTE PTR [r8+0x41],bpl
   140010e97:	jne    0x140010e9d
   140010e99:	mov    QWORD PTR [r8+0x8],rdx
   140010e9d:	mov    rax,QWORD PTR [rdi+0x8]
   140010ea1:	cmp    QWORD PTR [rax+0x8],rbx
   140010ea5:	jne    0x140010ead
   140010ea7:	mov    QWORD PTR [rax+0x8],r8
   140010eab:	jmp    0x140010ebb
   140010ead:	cmp    QWORD PTR [rdx],rbx
   140010eb0:	jne    0x140010eb7
   140010eb2:	mov    QWORD PTR [rdx],r8
   140010eb5:	jmp    0x140010ebb
   140010eb7:	mov    QWORD PTR [rdx+0x10],r8
   140010ebb:	mov    r9,QWORD PTR [rdi+0x8]
   140010ebf:	cmp    QWORD PTR [r9],rbx
   140010ec2:	jne    0x140010ee6
   140010ec4:	cmp    BYTE PTR [r8+0x41],bpl
   140010ec8:	je     0x140010ecf
   140010eca:	mov    rax,rdx
   140010ecd:	jmp    0x140010ee3
   140010ecf:	mov    rcx,QWORD PTR [r8]
   140010ed2:	mov    rax,r8
   140010ed5:	jmp    0x140010edd
   140010ed7:	mov    rax,rcx
   140010eda:	mov    rcx,QWORD PTR [rcx]
   140010edd:	cmp    BYTE PTR [rcx+0x41],bpl
   140010ee1:	je     0x140010ed7
   140010ee3:	mov    QWORD PTR [r9],rax
   140010ee6:	mov    r9,QWORD PTR [rdi+0x8]
   140010eea:	cmp    QWORD PTR [r9+0x10],rbx
   140010eee:	jne    0x140010f86
   140010ef4:	cmp    BYTE PTR [r8+0x41],bpl
   140010ef8:	je     0x140010eff
   140010efa:	mov    rax,rdx
   140010efd:	jmp    0x140010f15
   140010eff:	mov    rcx,QWORD PTR [r8+0x10]
   140010f03:	mov    rax,r8
   140010f06:	jmp    0x140010f0f
   140010f08:	mov    rax,rcx
   140010f0b:	mov    rcx,QWORD PTR [rcx+0x10]
   140010f0f:	cmp    BYTE PTR [rcx+0x41],bpl
   140010f13:	je     0x140010f08
   140010f15:	mov    QWORD PTR [r9+0x10],rax
   140010f19:	jmp    0x140010f86
   140010f1b:	mov    QWORD PTR [rdx+0x8],r9
   140010f1f:	mov    rax,QWORD PTR [rbx]
   140010f22:	mov    QWORD PTR [r9],rax
   140010f25:	cmp    r9,QWORD PTR [rcx]
   140010f28:	jne    0x140010f2f
   140010f2a:	mov    rdx,r9
   140010f2d:	jmp    0x140010f4e
   140010f2f:	mov    rdx,QWORD PTR [r9+0x8]
   140010f33:	cmp    BYTE PTR [r8+0x41],bpl
   140010f37:	jne    0x140010f3d
   140010f39:	mov    QWORD PTR [r8+0x8],rdx
   140010f3d:	mov    QWORD PTR [rdx],r8
   140010f40:	mov    rax,QWORD PTR [rcx]
   140010f43:	mov    QWORD PTR [r9+0x10],rax
   140010f47:	mov    rax,QWORD PTR [rcx]
   140010f4a:	mov    QWORD PTR [rax+0x8],r9
   140010f4e:	mov    rax,QWORD PTR [rdi+0x8]
   140010f52:	cmp    QWORD PTR [rax+0x8],rbx
   140010f56:	jne    0x140010f5e
   140010f58:	mov    QWORD PTR [rax+0x8],r9
   140010f5c:	jmp    0x140010f70
   140010f5e:	mov    rax,QWORD PTR [rbx+0x8]
   140010f62:	cmp    QWORD PTR [rax],rbx
   140010f65:	jne    0x140010f6c
   140010f67:	mov    QWORD PTR [rax],r9
   140010f6a:	jmp    0x140010f70
   140010f6c:	mov    QWORD PTR [rax+0x10],r9
   140010f70:	mov    rax,QWORD PTR [rbx+0x8]
   140010f74:	mov    QWORD PTR [r9+0x8],rax
   140010f78:	mov    al,BYTE PTR [rbx+0x40]
   140010f7b:	mov    cl,BYTE PTR [r9+0x40]
   140010f7f:	mov    BYTE PTR [r9+0x40],al
   140010f83:	mov    BYTE PTR [rbx+0x40],cl
   140010f86:	mov    r10b,0x1
   140010f89:	cmp    BYTE PTR [rbx+0x40],r10b
   140010f8d:	jne    0x140011250
   140010f93:	mov    rax,QWORD PTR [rdi+0x8]
   140010f97:	cmp    r8,QWORD PTR [rax+0x8]
   140010f9b:	je     0x14001124c
   140010fa1:	cmp    BYTE PTR [r8+0x40],r10b
   140010fa5:	jne    0x14001124c
   140010fab:	mov    rcx,QWORD PTR [rdx]
   140010fae:	cmp    r8,rcx
   140010fb1:	jne    0x140011087
   140010fb7:	mov    rcx,QWORD PTR [rdx+0x10]
   140010fbb:	cmp    BYTE PTR [rcx+0x40],bpl
   140010fbf:	jne    0x140011016
   140010fc1:	mov    BYTE PTR [rcx+0x40],r10b
   140010fc5:	mov    rcx,QWORD PTR [rdx+0x10]
   140010fc9:	mov    BYTE PTR [rdx+0x40],bpl
   140010fcd:	mov    rax,QWORD PTR [rcx]
   140010fd0:	mov    QWORD PTR [rdx+0x10],rax
   140010fd4:	mov    rax,QWORD PTR [rcx]
   140010fd7:	cmp    BYTE PTR [rax+0x41],bpl
   140010fdb:	jne    0x140010fe1
   140010fdd:	mov    QWORD PTR [rax+0x8],rdx
   140010fe1:	mov    rax,QWORD PTR [rdx+0x8]
   140010fe5:	mov    QWORD PTR [rcx+0x8],rax
   140010fe9:	mov    rax,QWORD PTR [rdi+0x8]
   140010fed:	cmp    rdx,QWORD PTR [rax+0x8]
   140010ff1:	jne    0x140010ff9
   140010ff3:	mov    QWORD PTR [rax+0x8],rcx
   140010ff7:	jmp    0x14001100b
   140010ff9:	mov    rax,QWORD PTR [rdx+0x8]
   140010ffd:	cmp    rdx,QWORD PTR [rax]
   140011000:	jne    0x140011007
   140011002:	mov    QWORD PTR [rax],rcx
   140011005:	jmp    0x14001100b
   140011007:	mov    QWORD PTR [rax+0x10],rcx
   14001100b:	mov    QWORD PTR [rcx],rdx
   14001100e:	mov    QWORD PTR [rdx+0x8],rcx
   140011012:	mov    rcx,QWORD PTR [rdx+0x10]
   140011016:	cmp    BYTE PTR [rcx+0x41],bpl
   14001101a:	jne    0x140011108
   140011020:	mov    rax,QWORD PTR [rcx]
   140011023:	cmp    BYTE PTR [rax+0x40],r10b
   140011027:	jne    0x140011037
   140011029:	mov    rax,QWORD PTR [rcx+0x10]
   14001102d:	cmp    BYTE PTR [rax+0x40],r10b
   140011031:	je     0x140011104
   140011037:	mov    rax,QWORD PTR [rcx+0x10]
   14001103b:	cmp    BYTE PTR [rax+0x40],r10b
   14001103f:	jne    0x140011133
   140011045:	mov    rax,QWORD PTR [rcx]
   140011048:	mov    BYTE PTR [rax+0x40],r10b
   14001104c:	mov    r9,QWORD PTR [rcx]
   14001104f:	mov    BYTE PTR [rcx+0x40],bpl
   140011053:	mov    rax,QWORD PTR [r9+0x10]
   140011057:	mov    QWORD PTR [rcx],rax
   14001105a:	mov    rax,QWORD PTR [r9+0x10]
   14001105e:	cmp    BYTE PTR [rax+0x41],bpl
   140011062:	jne    0x140011068
   140011064:	mov    QWORD PTR [rax+0x8],rcx
   140011068:	mov    rax,QWORD PTR [rcx+0x8]
   14001106c:	mov    QWORD PTR [r9+0x8],rax
   140011070:	mov    rax,QWORD PTR [rdi+0x8]
   140011074:	cmp    rcx,QWORD PTR [rax+0x8]
   140011078:	jne    0x140011114
   14001107e:	mov    QWORD PTR [rax+0x8],r9
   140011082:	jmp    0x140011127
   140011087:	cmp    BYTE PTR [rcx+0x40],bpl
   14001108b:	jne    0x1400110e3
   14001108d:	mov    BYTE PTR [rcx+0x40],r10b
   140011091:	mov    rcx,QWORD PTR [rdx]
   140011094:	mov    BYTE PTR [rdx+0x40],bpl
   140011098:	mov    rax,QWORD PTR [rcx+0x10]
   14001109c:	mov    QWORD PTR [rdx],rax
   14001109f:	mov    rax,QWORD PTR [rcx+0x10]
   1400110a3:	cmp    BYTE PTR [rax+0x41],bpl
   1400110a7:	jne    0x1400110ad
   1400110a9:	mov    QWORD PTR [rax+0x8],rdx
   1400110ad:	mov    rax,QWORD PTR [rdx+0x8]
   1400110b1:	mov    QWORD PTR [rcx+0x8],rax
   1400110b5:	mov    rax,QWORD PTR [rdi+0x8]
   1400110b9:	cmp    rdx,QWORD PTR [rax+0x8]
   1400110bd:	jne    0x1400110c5
   1400110bf:	mov    QWORD PTR [rax+0x8],rcx
   1400110c3:	jmp    0x1400110d8
   1400110c5:	mov    rax,QWORD PTR [rdx+0x8]
   1400110c9:	cmp    rdx,QWORD PTR [rax+0x10]
   1400110cd:	jne    0x1400110d5
   1400110cf:	mov    QWORD PTR [rax+0x10],rcx
   1400110d3:	jmp    0x1400110d8
   1400110d5:	mov    QWORD PTR [rax],rcx
   1400110d8:	mov    QWORD PTR [rcx+0x10],rdx
   1400110dc:	mov    QWORD PTR [rdx+0x8],rcx
   1400110e0:	mov    rcx,QWORD PTR [rdx]
   1400110e3:	cmp    BYTE PTR [rcx+0x41],bpl
   1400110e7:	jne    0x140011108
   1400110e9:	mov    rax,QWORD PTR [rcx+0x10]
   1400110ed:	cmp    BYTE PTR [rax+0x40],r10b
   1400110f1:	jne    0x14001118f
   1400110f7:	mov    rax,QWORD PTR [rcx]
   1400110fa:	cmp    BYTE PTR [rax+0x40],r10b
   1400110fe:	jne    0x14001118f
   140011104:	mov    BYTE PTR [rcx+0x40],bpl
   140011108:	mov    r8,rdx
   14001110b:	mov    rdx,QWORD PTR [rdx+0x8]
   14001110f:	jmp    0x140010f93
   140011114:	mov    rax,QWORD PTR [rcx+0x8]
   140011118:	cmp    rcx,QWORD PTR [rax+0x10]
   14001111c:	jne    0x140011124
   14001111e:	mov    QWORD PTR [rax+0x10],r9
   140011122:	jmp    0x140011127
   140011124:	mov    QWORD PTR [rax],r9
   140011127:	mov    QWORD PTR [r9+0x10],rcx
   14001112b:	mov    QWORD PTR [rcx+0x8],r9
   14001112f:	mov    rcx,QWORD PTR [rdx+0x10]
   140011133:	mov    al,BYTE PTR [rdx+0x40]
   140011136:	mov    BYTE PTR [rcx+0x40],al
   140011139:	mov    BYTE PTR [rdx+0x40],r10b
   14001113d:	mov    rax,QWORD PTR [rcx+0x10]
   140011141:	mov    BYTE PTR [rax+0x40],r10b
   140011145:	mov    rcx,QWORD PTR [rdx+0x10]
   140011149:	mov    rax,QWORD PTR [rcx]
   14001114c:	mov    QWORD PTR [rdx+0x10],rax
   140011150:	mov    rax,QWORD PTR [rcx]
   140011153:	cmp    BYTE PTR [rax+0x41],bpl
   140011157:	jne    0x14001115d
   140011159:	mov    QWORD PTR [rax+0x8],rdx
   14001115d:	mov    rax,QWORD PTR [rdx+0x8]
   140011161:	mov    QWORD PTR [rcx+0x8],rax
   140011165:	mov    rax,QWORD PTR [rdi+0x8]
   140011169:	cmp    rdx,QWORD PTR [rax+0x8]
   14001116d:	jne    0x140011175
   14001116f:	mov    QWORD PTR [rax+0x8],rcx
   140011173:	jmp    0x140011187
   140011175:	mov    rax,QWORD PTR [rdx+0x8]
   140011179:	cmp    rdx,QWORD PTR [rax]
   14001117c:	jne    0x140011183
   14001117e:	mov    QWORD PTR [rax],rcx
   140011181:	jmp    0x140011187
   140011183:	mov    QWORD PTR [rax+0x10],rcx
   140011187:	mov    QWORD PTR [rcx],rdx
   14001118a:	jmp    0x140011248
   14001118f:	mov    rax,QWORD PTR [rcx]
   140011192:	cmp    BYTE PTR [rax+0x40],r10b
   140011196:	jne    0x1400111f0
   140011198:	mov    rax,QWORD PTR [rcx+0x10]
   14001119c:	mov    BYTE PTR [rax+0x40],r10b
   1400111a0:	mov    r9,QWORD PTR [rcx+0x10]
   1400111a4:	mov    BYTE PTR [rcx+0x40],bpl
   1400111a8:	mov    rax,QWORD PTR [r9]
   1400111ab:	mov    QWORD PTR [rcx+0x10],rax
   1400111af:	mov    rax,QWORD PTR [r9]
   1400111b2:	cmp    BYTE PTR [rax+0x41],bpl
   1400111b6:	jne    0x1400111bc
   1400111b8:	mov    QWORD PTR [rax+0x8],rcx
   1400111bc:	mov    rax,QWORD PTR [rcx+0x8]
   1400111c0:	mov    QWORD PTR [r9+0x8],rax
   1400111c4:	mov    rax,QWORD PTR [rdi+0x8]
   1400111c8:	cmp    rcx,QWORD PTR [rax+0x8]
   1400111cc:	jne    0x1400111d4
   1400111ce:	mov    QWORD PTR [rax+0x8],r9
   1400111d2:	jmp    0x1400111e6
   1400111d4:	mov    rax,QWORD PTR [rcx+0x8]
   1400111d8:	cmp    rcx,QWORD PTR [rax]
   1400111db:	jne    0x1400111e2
   1400111dd:	mov    QWORD PTR [rax],r9
   1400111e0:	jmp    0x1400111e6
   1400111e2:	mov    QWORD PTR [rax+0x10],r9
   1400111e6:	mov    QWORD PTR [r9],rcx
   1400111e9:	mov    QWORD PTR [rcx+0x8],r9
   1400111ed:	mov    rcx,QWORD PTR [rdx]
   1400111f0:	mov    al,BYTE PTR [rdx+0x40]
   1400111f3:	mov    BYTE PTR [rcx+0x40],al
   1400111f6:	mov    BYTE PTR [rdx+0x40],r10b
   1400111fa:	mov    rax,QWORD PTR [rcx]
   1400111fd:	mov    BYTE PTR [rax+0x40],r10b
   140011201:	mov    rcx,QWORD PTR [rdx]
   140011204:	mov    rax,QWORD PTR [rcx+0x10]
   140011208:	mov    QWORD PTR [rdx],rax
   14001120b:	mov    rax,QWORD PTR [rcx+0x10]
   14001120f:	cmp    BYTE PTR [rax+0x41],bpl
   140011213:	jne    0x140011219
   140011215:	mov    QWORD PTR [rax+0x8],rdx
   140011219:	mov    rax,QWORD PTR [rdx+0x8]
   14001121d:	mov    QWORD PTR [rcx+0x8],rax
   140011221:	mov    rax,QWORD PTR [rdi+0x8]
   140011225:	cmp    rdx,QWORD PTR [rax+0x8]
   140011229:	jne    0x140011231
   14001122b:	mov    QWORD PTR [rax+0x8],rcx
   14001122f:	jmp    0x140011244
   140011231:	mov    rax,QWORD PTR [rdx+0x8]
   140011235:	cmp    rdx,QWORD PTR [rax+0x10]
   140011239:	jne    0x140011241
   14001123b:	mov    QWORD PTR [rax+0x10],rcx
   14001123f:	jmp    0x140011244
   140011241:	mov    QWORD PTR [rax],rcx
   140011244:	mov    QWORD PTR [rcx+0x10],rdx
   140011248:	mov    QWORD PTR [rdx+0x8],rcx
   14001124c:	mov    BYTE PTR [r8+0x40],r10b
   140011250:	lea    rcx,[rbx+0x18]
   140011254:	call   0x14000638c
   140011259:	mov    rcx,rbx
   14001125c:	call   QWORD PTR [rip+0x38416]        # 0x140049678
   140011262:	mov    rax,QWORD PTR [rdi+0x10]
   140011266:	test   rax,rax
   140011269:	je     0x140011272
   14001126b:	dec    rax
   14001126e:	mov    QWORD PTR [rdi+0x10],rax
   140011272:	mov    rax,QWORD PTR [rsp+0x40]
   140011277:	mov    rbx,QWORD PTR [rsp+0x30]
   14001127c:	mov    rbp,QWORD PTR [rsp+0x38]
   140011281:	mov    QWORD PTR [rsi],rax
   140011284:	mov    rax,rsi
   140011287:	mov    rsi,QWORD PTR [rsp+0x48]
   14001128c:	add    rsp,0x20
   140011290:	pop    rdi
   140011291:	ret    
   140011292:	int3   
   140011293:	int3   
   140011294:	mov    QWORD PTR [rsp+0x8],rbx
   140011299:	mov    QWORD PTR [rsp+0x10],rsi
   14001129e:	push   rdi
   14001129f:	sub    rsp,0x20
   1400112a3:	cmp    BYTE PTR [rdx+0x41],0x0
   1400112a7:	mov    rbx,rdx
   1400112aa:	mov    rsi,rcx
   1400112ad:	mov    rdi,rdx
   1400112b0:	jne    0x1400112dc
   1400112b2:	mov    rdx,QWORD PTR [rdi+0x10]
   1400112b6:	mov    rcx,rsi
   1400112b9:	call   0x140011294
   1400112be:	mov    rdi,QWORD PTR [rdi]
   1400112c1:	lea    rcx,[rbx+0x18]
   1400112c5:	call   0x14000638c
   1400112ca:	mov    rcx,rbx
   1400112cd:	call   QWORD PTR [rip+0x383a5]        # 0x140049678
   1400112d3:	cmp    BYTE PTR [rdi+0x41],0x0
   1400112d7:	mov    rbx,rdi
   1400112da:	je     0x1400112b2
   1400112dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400112e1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400112e6:	add    rsp,0x20
   1400112ea:	pop    rdi
   1400112eb:	ret    
   1400112ec:	mov    rax,rsp
   1400112ef:	mov    QWORD PTR [rax+0x8],rcx
   1400112f3:	push   rbp
   1400112f4:	push   rsi
   1400112f5:	push   rdi
   1400112f6:	sub    rsp,0x30
   1400112fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011303:	mov    QWORD PTR [rax+0x18],rbx
   140011307:	mov    rsi,r8
   14001130a:	mov    rbp,rdx
   14001130d:	mov    rdi,rcx
   140011310:	and    DWORD PTR [rax+0x10],0x0
   140011314:	mov    QWORD PTR [rcx+0x18],0xf
   14001131c:	and    QWORD PTR [rcx+0x10],0x0
   140011321:	mov    BYTE PTR [rcx],0x0
   140011324:	mov    DWORD PTR [rax+0x10],0x1
   14001132b:	mov    rbx,QWORD PTR [rdx+0x10]
   14001132f:	mov    rcx,r8
   140011332:	call   QWORD PTR [rip+0x382d0]        # 0x140049608
   140011338:	add    rax,rbx
   14001133b:	mov    rbx,QWORD PTR [rdi+0x10]
   14001133f:	cmp    rbx,rax
   140011342:	ja     0x140011373
   140011344:	cmp    QWORD PTR [rdi+0x18],rax
   140011348:	je     0x140011373
   14001134a:	mov    r8b,0x1
   14001134d:	mov    rdx,rax
   140011350:	mov    rcx,rdi
   140011353:	call   0x140005324
   140011358:	test   al,al
   14001135a:	je     0x140011373
   14001135c:	mov    QWORD PTR [rdi+0x10],rbx
   140011360:	cmp    QWORD PTR [rdi+0x18],0x10
   140011365:	jb     0x14001136c
   140011367:	mov    rax,QWORD PTR [rdi]
   14001136a:	jmp    0x14001136f
   14001136c:	mov    rax,rdi
   14001136f:	mov    BYTE PTR [rax+rbx*1],0x0
   140011373:	or     r9,0xffffffffffffffff
   140011377:	xor    r8d,r8d
   14001137a:	mov    rdx,rbp
   14001137d:	mov    rcx,rdi
   140011380:	call   0x140005638
   140011385:	mov    rcx,rsi
   140011388:	call   QWORD PTR [rip+0x3827a]        # 0x140049608
   14001138e:	mov    r8,rax
   140011391:	mov    rdx,rsi
   140011394:	mov    rcx,rdi
   140011397:	call   0x140009290
   14001139c:	mov    rax,rdi
   14001139f:	mov    rbx,QWORD PTR [rsp+0x60]
   1400113a4:	add    rsp,0x30
   1400113a8:	pop    rdi
   1400113a9:	pop    rsi
   1400113aa:	pop    rbp
   1400113ab:	ret    
   1400113ac:	int3   
   1400113ad:	int3   
   1400113ae:	int3   
   1400113af:	int3   
   1400113b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400113b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400113ba:	push   rdi
   1400113bb:	sub    rsp,0x20
   1400113bf:	and    DWORD PTR [rsp+0x30],0x0
   1400113c4:	mov    rsi,rcx
   1400113c7:	mov    rcx,r8
   1400113ca:	mov    rbx,r8
   1400113cd:	mov    rdi,rdx
   1400113d0:	call   QWORD PTR [rip+0x38232]        # 0x140049608
   1400113d6:	mov    rdx,rbx
   1400113d9:	mov    rcx,rdi
   1400113dc:	mov    r8,rax
   1400113df:	call   0x140009290
   1400113e4:	and    QWORD PTR [rsi+0x10],0x0
   1400113e9:	mov    QWORD PTR [rsi+0x18],0xf
   1400113f1:	mov    rdx,rax
   1400113f4:	mov    rcx,rsi
   1400113f7:	mov    BYTE PTR [rsi],0x0
   1400113fa:	call   0x140004730
   1400113ff:	mov    rbx,QWORD PTR [rsp+0x38]
   140011404:	mov    rax,rsi
   140011407:	mov    rsi,QWORD PTR [rsp+0x40]
   14001140c:	add    rsp,0x20
   140011410:	pop    rdi
   140011411:	ret    
   140011412:	int3   
   140011413:	int3   
   140011414:	rex push rbx
   140011416:	sub    rsp,0x20
   14001141a:	mov    rax,QWORD PTR [rdx+0x18]
   14001141e:	and    DWORD PTR [rsp+0x38],0x0
   140011423:	mov    r10,r8
   140011426:	sub    rax,QWORD PTR [rdx+0x10]
   14001142a:	mov    r11,rdx
   14001142d:	mov    rbx,rcx
   140011430:	cmp    QWORD PTR [r8+0x10],rax
   140011434:	jbe    0x140011455
   140011436:	mov    rax,QWORD PTR [r8+0x18]
   14001143a:	sub    rax,QWORD PTR [r8+0x10]
   14001143e:	cmp    rax,QWORD PTR [rdx+0x10]
   140011442:	jb     0x140011455
   140011444:	or     r9,0xffffffffffffffff
   140011448:	xor    r8d,r8d
   14001144b:	mov    rcx,r10
   14001144e:	call   0x14001148c
   140011453:	jmp    0x140011467
   140011455:	or     r9,0xffffffffffffffff
   140011459:	xor    r8d,r8d
   14001145c:	mov    rdx,r10
   14001145f:	mov    rcx,r11
   140011462:	call   0x140005638
   140011467:	and    QWORD PTR [rbx+0x10],0x0
   14001146c:	mov    QWORD PTR [rbx+0x18],0xf
   140011474:	mov    rdx,rax
   140011477:	mov    rcx,rbx
   14001147a:	mov    BYTE PTR [rbx],0x0
   14001147d:	call   0x140004730
   140011482:	mov    rax,rbx
   140011485:	add    rsp,0x20
   140011489:	pop    rbx
   14001148a:	ret    
   14001148b:	int3   
   14001148c:	mov    rax,rsp
   14001148f:	mov    QWORD PTR [rax+0x8],rbx
   140011493:	mov    QWORD PTR [rax+0x10],rbp
   140011497:	mov    QWORD PTR [rax+0x18],rsi
   14001149b:	mov    QWORD PTR [rax+0x20],rdi
   14001149f:	push   r12
   1400114a1:	sub    rsp,0x20
   1400114a5:	mov    rax,QWORD PTR [rdx+0x10]
   1400114a9:	mov    rsi,r9
   1400114ac:	mov    r12,r8
   1400114af:	mov    rbp,rdx
   1400114b2:	mov    rbx,rcx
   1400114b5:	cmp    rax,r8
   1400114b8:	jb     0x1400115ff
   1400114be:	sub    rax,r8
   1400114c1:	mov    r8,QWORD PTR [rcx+0x10]
   1400114c5:	cmp    rax,r9
   1400114c8:	cmovb  rsi,rax
   1400114cc:	or     rax,0xffffffffffffffff
   1400114d0:	sub    rax,r8
   1400114d3:	cmp    rax,rsi
   1400114d6:	ja     0x1400114e6
   1400114d8:	lea    rcx,[rip+0x3f469]        # 0x140050948
   1400114df:	call   QWORD PTR [rip+0x380b3]        # 0x140049598
   1400114e5:	int3   
   1400114e6:	test   rsi,rsi
   1400114e9:	je     0x1400115e1
   1400114ef:	lea    rdi,[r8+rsi*1]
   1400114f3:	cmp    rdi,0xfffffffffffffffe
   1400114f7:	jbe    0x140011507
   1400114f9:	lea    rcx,[rip+0x3f448]        # 0x140050948
   140011500:	call   QWORD PTR [rip+0x38092]        # 0x140049598
   140011506:	int3   
   140011507:	cmp    QWORD PTR [rcx+0x18],rdi
   14001150b:	jae    0x140011517
   14001150d:	mov    rdx,rdi
   140011510:	call   0x140005750
   140011515:	jmp    0x140011532
   140011517:	test   rdi,rdi
   14001151a:	jne    0x14001153b
   14001151c:	and    QWORD PTR [rcx+0x10],rdi
   140011520:	cmp    QWORD PTR [rcx+0x18],0x10
   140011525:	jb     0x14001152c
   140011527:	mov    rax,QWORD PTR [rcx]
   14001152a:	jmp    0x14001152f
   14001152c:	mov    rax,rcx
   14001152f:	mov    BYTE PTR [rax],0x0
   140011532:	test   rdi,rdi
   140011535:	je     0x1400115e1
   14001153b:	cmp    QWORD PTR [rbx+0x18],0x10
   140011540:	jb     0x140011547
   140011542:	mov    rdx,QWORD PTR [rbx]
   140011545:	jmp    0x14001154a
   140011547:	mov    rdx,rbx
   14001154a:	cmp    QWORD PTR [rbx+0x18],0x10
   14001154f:	jb     0x140011556
   140011551:	mov    rax,QWORD PTR [rbx]
   140011554:	jmp    0x140011559
   140011556:	mov    rax,rbx
   140011559:	mov    r8,QWORD PTR [rbx+0x10]
   14001155d:	lea    rcx,[rax+rsi*1]
   140011561:	call   QWORD PTR [rip+0x38089]        # 0x1400495f0
   140011567:	cmp    rbx,rbp
   14001156a:	jne    0x1400115a3
   14001156c:	cmp    QWORD PTR [rbx+0x18],0x10
   140011571:	jb     0x140011578
   140011573:	mov    rdx,QWORD PTR [rbx]
   140011576:	jmp    0x14001157b
   140011578:	mov    rdx,rbx
   14001157b:	cmp    QWORD PTR [rbx+0x18],0x10
   140011580:	jb     0x140011587
   140011582:	mov    rcx,QWORD PTR [rbx]
   140011585:	jmp    0x14001158a
   140011587:	mov    rcx,rbx
   14001158a:	lea    rax,[r12+rsi*1]
   14001158e:	test   r12,r12
   140011591:	mov    r8,rsi
   140011594:	cmovne r12,rax
   140011598:	add    rdx,r12
   14001159b:	call   QWORD PTR [rip+0x3804f]        # 0x1400495f0
   1400115a1:	jmp    0x1400115ca
   1400115a3:	cmp    QWORD PTR [rbp+0x18],0x10
   1400115a8:	jb     0x1400115ae
   1400115aa:	mov    rbp,QWORD PTR [rbp+0x0]
   1400115ae:	cmp    QWORD PTR [rbx+0x18],0x10
   1400115b3:	jb     0x1400115ba
   1400115b5:	mov    rcx,QWORD PTR [rbx]
   1400115b8:	jmp    0x1400115bd
   1400115ba:	mov    rcx,rbx
   1400115bd:	lea    rdx,[r12+rbp*1]
   1400115c1:	mov    r8,rsi
   1400115c4:	call   QWORD PTR [rip+0x382fe]        # 0x1400498c8
   1400115ca:	cmp    QWORD PTR [rbx+0x18],0x10
   1400115cf:	mov    QWORD PTR [rbx+0x10],rdi
   1400115d3:	jb     0x1400115da
   1400115d5:	mov    rax,QWORD PTR [rbx]
   1400115d8:	jmp    0x1400115dd
   1400115da:	mov    rax,rbx
   1400115dd:	mov    BYTE PTR [rax+rdi*1],0x0
   1400115e1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115e6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115eb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400115f0:	mov    rax,rbx
   1400115f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115f8:	add    rsp,0x20
   1400115fc:	pop    r12
   1400115fe:	ret    
   1400115ff:	lea    rcx,[rip+0x3f32a]        # 0x140050930
   140011606:	call   QWORD PTR [rip+0x37fa4]        # 0x1400495b0
   14001160c:	int3   
   14001160d:	int3   
   14001160e:	int3   
   14001160f:	int3   
   140011610:	mov    QWORD PTR [rsp+0x8],rbx
   140011615:	push   rdi
   140011616:	sub    rsp,0x20
   14001161a:	mov    rax,QWORD PTR [rcx+0x10]
   14001161e:	mov    r10,rcx
   140011621:	movabs rcx,0x666666666666665
   14001162b:	mov    r11b,r8b
   14001162e:	mov    rbx,rdx
   140011631:	cmp    rax,rcx
   140011634:	jb     0x14001165b
   140011636:	mov    rbx,QWORD PTR [rsp+0x50]
   14001163b:	lea    rcx,[rbx+0x18]
   14001163f:	call   0x14000638c
   140011644:	mov    rcx,rbx
   140011647:	call   QWORD PTR [rip+0x3802b]        # 0x140049678
   14001164d:	lea    rcx,[rip+0x3f32c]        # 0x140050980
   140011654:	call   QWORD PTR [rip+0x37f3e]        # 0x140049598
   14001165a:	int3   
   14001165b:	mov    r8,QWORD PTR [rsp+0x50]
   140011660:	inc    rax
   140011663:	xor    edi,edi
   140011665:	mov    QWORD PTR [r10+0x10],rax
   140011669:	mov    QWORD PTR [r8+0x8],r9
   14001166d:	mov    rax,QWORD PTR [r10+0x8]
   140011671:	cmp    r9,rax
   140011674:	jne    0x140011687
   140011676:	mov    QWORD PTR [rax+0x8],r8
   14001167a:	mov    rax,QWORD PTR [r10+0x8]
   14001167e:	mov    QWORD PTR [rax],r8
   140011681:	mov    rax,QWORD PTR [r10+0x8]
   140011685:	jmp    0x1400116ab
   140011687:	test   r11b,r11b
   14001168a:	je     0x14001169d
   14001168c:	mov    QWORD PTR [r9],r8
   14001168f:	mov    rax,QWORD PTR [r10+0x8]
   140011693:	cmp    r9,QWORD PTR [rax]
   140011696:	jne    0x1400116af
   140011698:	mov    QWORD PTR [rax],r8
   14001169b:	jmp    0x1400116af
   14001169d:	mov    QWORD PTR [r9+0x10],r8
   1400116a1:	mov    rax,QWORD PTR [r10+0x8]
   1400116a5:	cmp    r9,QWORD PTR [rax+0x10]
   1400116a9:	jne    0x1400116af
   1400116ab:	mov    QWORD PTR [rax+0x10],r8
   1400116af:	mov    rax,QWORD PTR [r8+0x8]
   1400116b3:	mov    rdx,r8
   1400116b6:	jmp    0x14001187b
   1400116bb:	mov    rax,QWORD PTR [rdx+0x8]
   1400116bf:	mov    rcx,QWORD PTR [rax+0x8]
   1400116c3:	cmp    rax,QWORD PTR [rcx]
   1400116c6:	jne    0x140011794
   1400116cc:	mov    r9,QWORD PTR [rcx+0x10]
   1400116d0:	cmp    BYTE PTR [r9+0x40],dil
   1400116d4:	je     0x14001179d
   1400116da:	cmp    rdx,QWORD PTR [rax+0x10]
   1400116de:	jne    0x14001172c
   1400116e0:	mov    rcx,QWORD PTR [rax+0x10]
   1400116e4:	mov    rdx,rax
   1400116e7:	mov    rax,QWORD PTR [rcx]
   1400116ea:	mov    QWORD PTR [rdx+0x10],rax
   1400116ee:	mov    rax,QWORD PTR [rcx]
   1400116f1:	cmp    BYTE PTR [rax+0x41],dil
   1400116f5:	jne    0x1400116fb
   1400116f7:	mov    QWORD PTR [rax+0x8],rdx
   1400116fb:	mov    rax,QWORD PTR [rdx+0x8]
   1400116ff:	mov    QWORD PTR [rcx+0x8],rax
   140011703:	mov    rax,QWORD PTR [r10+0x8]
   140011707:	cmp    rdx,QWORD PTR [rax+0x8]
   14001170b:	jne    0x140011713
   14001170d:	mov    QWORD PTR [rax+0x8],rcx
   140011711:	jmp    0x140011725
   140011713:	mov    rax,QWORD PTR [rdx+0x8]
   140011717:	cmp    rdx,QWORD PTR [rax]
   14001171a:	jne    0x140011721
   14001171c:	mov    QWORD PTR [rax],rcx
   14001171f:	jmp    0x140011725
   140011721:	mov    QWORD PTR [rax+0x10],rcx
   140011725:	mov    QWORD PTR [rcx],rdx
   140011728:	mov    QWORD PTR [rdx+0x8],rcx
   14001172c:	mov    rax,QWORD PTR [rdx+0x8]
   140011730:	mov    BYTE PTR [rax+0x40],0x1
   140011734:	mov    rax,QWORD PTR [rdx+0x8]
   140011738:	mov    rcx,QWORD PTR [rax+0x8]
   14001173c:	mov    BYTE PTR [rcx+0x40],dil
   140011740:	mov    rax,QWORD PTR [rdx+0x8]
   140011744:	mov    rcx,QWORD PTR [rax+0x8]
   140011748:	mov    r9,QWORD PTR [rcx]
   14001174b:	mov    rax,QWORD PTR [r9+0x10]
   14001174f:	mov    QWORD PTR [rcx],rax
   140011752:	mov    rax,QWORD PTR [r9+0x10]
   140011756:	cmp    BYTE PTR [rax+0x41],dil
   14001175a:	jne    0x140011760
   14001175c:	mov    QWORD PTR [rax+0x8],rcx
   140011760:	mov    rax,QWORD PTR [rcx+0x8]
   140011764:	mov    QWORD PTR [r9+0x8],rax
   140011768:	mov    rax,QWORD PTR [r10+0x8]
   14001176c:	cmp    rcx,QWORD PTR [rax+0x8]
   140011770:	jne    0x140011778
   140011772:	mov    QWORD PTR [rax+0x8],r9
   140011776:	jmp    0x14001178b
   140011778:	mov    rax,QWORD PTR [rcx+0x8]
   14001177c:	cmp    rcx,QWORD PTR [rax+0x10]
   140011780:	jne    0x140011788
   140011782:	mov    QWORD PTR [rax+0x10],r9
   140011786:	jmp    0x14001178b
   140011788:	mov    QWORD PTR [rax],r9
   14001178b:	mov    QWORD PTR [r9+0x10],rcx
   14001178f:	jmp    0x140011873
   140011794:	mov    r9,QWORD PTR [rcx]
   140011797:	cmp    BYTE PTR [r9+0x40],dil
   14001179b:	jne    0x1400117bf
   14001179d:	mov    BYTE PTR [rax+0x40],0x1
   1400117a1:	mov    BYTE PTR [r9+0x40],0x1
   1400117a6:	mov    rax,QWORD PTR [rdx+0x8]
   1400117aa:	mov    rcx,QWORD PTR [rax+0x8]
   1400117ae:	mov    BYTE PTR [rcx+0x40],dil
   1400117b2:	mov    rax,QWORD PTR [rdx+0x8]
   1400117b6:	mov    rdx,QWORD PTR [rax+0x8]
   1400117ba:	jmp    0x140011877
   1400117bf:	cmp    rdx,QWORD PTR [rax]
   1400117c2:	jne    0x140011812
   1400117c4:	mov    rcx,QWORD PTR [rax]
   1400117c7:	mov    rdx,rax
   1400117ca:	mov    rax,QWORD PTR [rcx+0x10]
   1400117ce:	mov    QWORD PTR [rdx],rax
   1400117d1:	mov    rax,QWORD PTR [rcx+0x10]
   1400117d5:	cmp    BYTE PTR [rax+0x41],dil
   1400117d9:	jne    0x1400117df
   1400117db:	mov    QWORD PTR [rax+0x8],rdx
   1400117df:	mov    rax,QWORD PTR [rdx+0x8]
   1400117e3:	mov    QWORD PTR [rcx+0x8],rax
   1400117e7:	mov    rax,QWORD PTR [r10+0x8]
   1400117eb:	cmp    rdx,QWORD PTR [rax+0x8]
   1400117ef:	jne    0x1400117f7
   1400117f1:	mov    QWORD PTR [rax+0x8],rcx
   1400117f5:	jmp    0x14001180a
   1400117f7:	mov    rax,QWORD PTR [rdx+0x8]
   1400117fb:	cmp    rdx,QWORD PTR [rax+0x10]
   1400117ff:	jne    0x140011807
   140011801:	mov    QWORD PTR [rax+0x10],rcx
   140011805:	jmp    0x14001180a
   140011807:	mov    QWORD PTR [rax],rcx
   14001180a:	mov    QWORD PTR [rcx+0x10],rdx
   14001180e:	mov    QWORD PTR [rdx+0x8],rcx
   140011812:	mov    rax,QWORD PTR [rdx+0x8]
   140011816:	mov    BYTE PTR [rax+0x40],0x1
   14001181a:	mov    rax,QWORD PTR [rdx+0x8]
   14001181e:	mov    rcx,QWORD PTR [rax+0x8]
   140011822:	mov    BYTE PTR [rcx+0x40],dil
   140011826:	mov    rax,QWORD PTR [rdx+0x8]
   14001182a:	mov    rcx,QWORD PTR [rax+0x8]
   14001182e:	mov    r9,QWORD PTR [rcx+0x10]
   140011832:	mov    rax,QWORD PTR [r9]
   140011835:	mov    QWORD PTR [rcx+0x10],rax
   140011839:	mov    rax,QWORD PTR [r9]
   14001183c:	cmp    BYTE PTR [rax+0x41],dil
   140011840:	jne    0x140011846
   140011842:	mov    QWORD PTR [rax+0x8],rcx
   140011846:	mov    rax,QWORD PTR [rcx+0x8]
   14001184a:	mov    QWORD PTR [r9+0x8],rax
   14001184e:	mov    rax,QWORD PTR [r10+0x8]
   140011852:	cmp    rcx,QWORD PTR [rax+0x8]
   140011856:	jne    0x14001185e
   140011858:	mov    QWORD PTR [rax+0x8],r9
   14001185c:	jmp    0x140011870
   14001185e:	mov    rax,QWORD PTR [rcx+0x8]
   140011862:	cmp    rcx,QWORD PTR [rax]
   140011865:	jne    0x14001186c
   140011867:	mov    QWORD PTR [rax],r9
   14001186a:	jmp    0x140011870
   14001186c:	mov    QWORD PTR [rax+0x10],r9
   140011870:	mov    QWORD PTR [r9],rcx
   140011873:	mov    QWORD PTR [rcx+0x8],r9
   140011877:	mov    rax,QWORD PTR [rdx+0x8]
   14001187b:	cmp    BYTE PTR [rax+0x40],dil
   14001187f:	je     0x1400116bb
   140011885:	mov    rax,QWORD PTR [r10+0x8]
   140011889:	mov    QWORD PTR [rbx],r8
   14001188c:	mov    rcx,QWORD PTR [rax+0x8]
   140011890:	mov    rax,rbx
   140011893:	mov    rbx,QWORD PTR [rsp+0x30]
   140011898:	mov    BYTE PTR [rcx+0x40],0x1
   14001189c:	add    rsp,0x20
   1400118a0:	pop    rdi
   1400118a1:	ret    
   1400118a2:	int3   
   1400118a3:	int3   
   1400118a4:	rex push rdi
   1400118a6:	sub    rsp,0x40
   1400118aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400118b3:	mov    QWORD PTR [rsp+0x50],rbx
   1400118b8:	mov    QWORD PTR [rsp+0x58],rsi
   1400118bd:	mov    rdi,rdx
   1400118c0:	mov    rsi,rcx
   1400118c3:	mov    ecx,0x48
   1400118c8:	call   QWORD PTR [rip+0x37dca]        # 0x140049698
   1400118ce:	mov    rbx,rax
   1400118d1:	mov    QWORD PTR [rsp+0x60],rax
   1400118d6:	xor    eax,eax
   1400118d8:	test   rbx,rbx
   1400118db:	je     0x14001190a
   1400118dd:	mov    r8,QWORD PTR [rsi+0x8]
   1400118e1:	mov    QWORD PTR [rbx],r8
   1400118e4:	mov    r8,QWORD PTR [rsi+0x8]
   1400118e8:	mov    QWORD PTR [rbx+0x8],r8
   1400118ec:	mov    rcx,QWORD PTR [rsi+0x8]
   1400118f0:	mov    QWORD PTR [rbx+0x10],rcx
   1400118f4:	mov    WORD PTR [rbx+0x40],ax
   1400118f8:	lea    rcx,[rbx+0x18]
   1400118fc:	mov    rdx,rdi
   1400118ff:	call   0x140007d88
   140011904:	nop
   140011905:	mov    rax,rbx
   140011908:	jmp    0x14001193d
   14001190a:	mov    QWORD PTR [rsp+0x60],rax
   14001190f:	lea    rdx,[rsp+0x60]
   140011914:	lea    rcx,[rsp+0x28]
   140011919:	call   QWORD PTR [rip+0x37fb1]        # 0x1400498d0
   14001191f:	lea    r11,[rip+0x388b2]        # 0x14004a1d8
   140011926:	mov    QWORD PTR [rsp+0x28],r11
   14001192b:	lea    rdx,[rip+0x51e16]        # 0x140063748
   140011932:	lea    rcx,[rsp+0x28]
   140011937:	call   0x14002b560
   14001193c:	int3   
   14001193d:	mov    rbx,QWORD PTR [rsp+0x50]
   140011942:	mov    rsi,QWORD PTR [rsp+0x58]
   140011947:	add    rsp,0x40
   14001194b:	pop    rdi
   14001194c:	ret    
   14001194d:	int3   
   14001194e:	int3   
   14001194f:	int3   
   140011950:	lea    rax,[rip+0x3f601]        # 0x140050f58
   140011957:	mov    QWORD PTR [rcx],rax
   14001195a:	ret    
   14001195b:	int3   
   14001195c:	ret    0x0
   14001195f:	int3   
   140011960:	rex push rbx
   140011962:	sub    rsp,0x20
   140011966:	lea    rax,[rip+0x3f5eb]        # 0x140050f58
   14001196d:	mov    rbx,rcx
   140011970:	mov    QWORD PTR [rcx],rax
   140011973:	test   dl,0x1
   140011976:	je     0x14001197e
   140011978:	call   QWORD PTR [rip+0x37cfa]        # 0x140049678
   14001197e:	mov    rax,rbx
   140011981:	add    rsp,0x20
   140011985:	pop    rbx
   140011986:	ret    
   140011987:	int3   
   140011988:	rex push rdi
   14001198a:	sub    rsp,0x30
   14001198e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011997:	mov    QWORD PTR [rsp+0x40],rbx
   14001199c:	mov    QWORD PTR [rsp+0x48],rbp
   1400119a1:	mov    QWORD PTR [rsp+0x58],rsi
   1400119a6:	mov    sil,dl
   1400119a9:	mov    rbp,rcx
   1400119ac:	mov    rdi,QWORD PTR [rip+0x58ead]        # 0x14006a860
   1400119b3:	test   rdi,rdi
   1400119b6:	jne    0x140011a6e
   1400119bc:	mov    rbx,QWORD PTR [rip+0x58e0d]        # 0x14006a7d0
   1400119c3:	test   rbx,rbx
   1400119c6:	jne    0x140011a0b
   1400119c8:	lea    ecx,[rdi+0x68]
   1400119cb:	call   QWORD PTR [rip+0x37cc7]        # 0x140049698
   1400119d1:	mov    rbx,rax
   1400119d4:	test   rax,rax
   1400119d7:	je     0x140011a02
   1400119d9:	and    QWORD PTR [rax],rdi
   1400119dc:	and    QWORD PTR [rax+0x8],rdi
   1400119e0:	and    QWORD PTR [rax+0x10],rdi
   1400119e4:	and    QWORD PTR [rax+0x18],rdi
   1400119e8:	and    QWORD PTR [rax+0x28],rdi
   1400119ec:	and    QWORD PTR [rax+0x30],rdi
   1400119f0:	and    QWORD PTR [rax+0x38],rdi
   1400119f4:	and    QWORD PTR [rax+0x48],rdi
   1400119f8:	and    QWORD PTR [rax+0x50],rdi
   1400119fc:	and    QWORD PTR [rax+0x58],rdi
   140011a00:	jmp    0x140011a04
   140011a02:	xor    ebx,ebx
   140011a04:	mov    QWORD PTR [rip+0x58dc5],rbx        # 0x14006a7d0
   140011a0b:	mov    ecx,0x110
   140011a10:	call   QWORD PTR [rip+0x37c82]        # 0x140049698
   140011a16:	mov    QWORD PTR [rsp+0x50],rax
   140011a1b:	test   rax,rax
   140011a1e:	je     0x140011a33
   140011a20:	mov    r8b,sil
   140011a23:	mov    rdx,rbp
   140011a26:	mov    rcx,rax
   140011a29:	call   0x140011c80
   140011a2e:	mov    rdi,rax
   140011a31:	jmp    0x140011a35
   140011a33:	xor    edi,edi
   140011a35:	lea    rcx,[rbx+0x8]
   140011a39:	mov    QWORD PTR [rsp+0x50],rdi
   140011a3e:	test   rdi,rdi
   140011a41:	je     0x140011a67
   140011a43:	mov    rax,QWORD PTR [rcx]
   140011a46:	jmp    0x140011a51
   140011a48:	cmp    QWORD PTR [rax],rdi
   140011a4b:	je     0x140011a57
   140011a4d:	add    rax,0x8
   140011a51:	cmp    rax,QWORD PTR [rcx+0x8]
   140011a55:	jne    0x140011a48
   140011a57:	cmp    QWORD PTR [rcx+0x8],rax
   140011a5b:	jne    0x140011a67
   140011a5d:	lea    rdx,[rsp+0x50]
   140011a62:	call   0x140015034
   140011a67:	mov    QWORD PTR [rip+0x58df2],rdi        # 0x14006a860
   140011a6e:	lea    rax,[rdi+0x8]
   140011a72:	mov    rbx,QWORD PTR [rsp+0x40]
   140011a77:	mov    rbp,QWORD PTR [rsp+0x48]
   140011a7c:	mov    rsi,QWORD PTR [rsp+0x58]
   140011a81:	add    rsp,0x30
   140011a85:	pop    rdi
   140011a86:	ret    
   140011a87:	int3   
   140011a88:	mov    rax,rsp
   140011a8b:	push   rbp
   140011a8c:	push   rdi
   140011a8d:	push   r12
   140011a8f:	lea    rbp,[rax-0x818]
   140011a96:	sub    rsp,0x900
   140011a9d:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140011aa6:	mov    QWORD PTR [rax+0x18],rbx
   140011aaa:	mov    QWORD PTR [rax+0x20],rsi
   140011aae:	mov    rax,QWORD PTR [rip+0x5673b]        # 0x1400681f0
   140011ab5:	xor    rax,rsp
   140011ab8:	mov    QWORD PTR [rbp+0x7f0],rax
   140011abf:	mov    rdi,rdx
   140011ac2:	mov    rbx,rcx
   140011ac5:	xor    esi,esi
   140011ac7:	mov    DWORD PTR [rsp+0x30],esi
   140011acb:	xor    edx,edx
   140011acd:	mov    r8d,0x802
   140011ad3:	lea    rcx,[rbp-0x20]
   140011ad7:	call   QWORD PTR [rip+0x37b7b]        # 0x140049658
   140011add:	lea    r11,[rbp-0x20]
   140011ae1:	mov    QWORD PTR [rsp+0x20],r11
   140011ae6:	xor    r9d,r9d
   140011ae9:	xor    r8d,r8d
   140011aec:	mov    edx,0x801a
   140011af1:	xor    ecx,ecx
   140011af3:	call   QWORD PTR [rip+0x37def]        # 0x1400498e8
   140011af9:	test   eax,eax
   140011afb:	jne    0x140011c27
   140011b01:	lea    r12d,[rsi+0x7]
   140011b05:	mov    QWORD PTR [rsp+0x58],r12
   140011b0a:	mov    QWORD PTR [rsp+0x50],rsi
   140011b0f:	mov    WORD PTR [rsp+0x40],si
   140011b14:	lea    rcx,[rbp-0x20]
   140011b18:	call   QWORD PTR [rip+0x37b92]        # 0x1400496b0
   140011b1e:	mov    r8,rax
   140011b21:	lea    rdx,[rbp-0x20]
   140011b25:	lea    rcx,[rsp+0x40]
   140011b2a:	call   0x1400096cc
   140011b2f:	nop
   140011b30:	mov    rdx,rdi
   140011b33:	lea    rcx,[rbp-0x70]
   140011b37:	call   0x1400095c4
   140011b3c:	nop
   140011b3d:	mov    rdx,rax
   140011b40:	lea    rcx,[rbp-0x48]
   140011b44:	call   0x1400143b0
   140011b49:	nop
   140011b4a:	lea    r8,[rip+0x3f257]        # 0x140050da8
   140011b51:	mov    rdx,rax
   140011b54:	lea    rcx,[rsp+0x68]
   140011b59:	call   0x140014560
   140011b5e:	nop
   140011b5f:	or     r9,0xffffffffffffffff
   140011b63:	xor    r8d,r8d
   140011b66:	mov    rdx,rax
   140011b69:	lea    rcx,[rsp+0x40]
   140011b6e:	call   0x14000d0e8
   140011b73:	nop
   140011b74:	cmp    QWORD PTR [rbp-0x80],0x8
   140011b79:	jb     0x140011b86
   140011b7b:	mov    rcx,QWORD PTR [rsp+0x68]
   140011b80:	call   QWORD PTR [rip+0x37af2]        # 0x140049678
   140011b86:	mov    QWORD PTR [rbp-0x80],r12
   140011b8a:	mov    QWORD PTR [rsp+0x78],rsi
   140011b8f:	mov    WORD PTR [rsp+0x68],si
   140011b94:	cmp    QWORD PTR [rbp-0x30],0x8
   140011b99:	jb     0x140011ba5
   140011b9b:	mov    rcx,QWORD PTR [rbp-0x48]
   140011b9f:	call   QWORD PTR [rip+0x37ad3]        # 0x140049678
   140011ba5:	mov    QWORD PTR [rbp-0x30],r12
   140011ba9:	mov    QWORD PTR [rbp-0x38],rsi
   140011bad:	mov    WORD PTR [rbp-0x48],si
   140011bb1:	cmp    QWORD PTR [rbp-0x58],0x8
   140011bb6:	jb     0x140011bc2
   140011bb8:	mov    rcx,QWORD PTR [rbp-0x70]
   140011bbc:	call   QWORD PTR [rip+0x37ab6]        # 0x140049678
   140011bc2:	lea    rdx,[rsp+0x40]
   140011bc7:	lea    rcx,[rbp-0x70]
   140011bcb:	call   0x14000b24c
   140011bd0:	mov    rcx,rax
   140011bd3:	call   0x14000a5cc
   140011bd8:	mov    dil,al
   140011bdb:	cmp    QWORD PTR [rbp-0x58],0x8
   140011be0:	jb     0x140011bec
   140011be2:	mov    rcx,QWORD PTR [rbp-0x70]
   140011be6:	call   QWORD PTR [rip+0x37a8c]        # 0x140049678
   140011bec:	test   dil,dil
   140011bef:	je     0x140011c14
   140011bf1:	lea    rdx,[rsp+0x40]
   140011bf6:	mov    rcx,rbx
   140011bf9:	call   0x140009474
   140011bfe:	nop
   140011bff:	cmp    QWORD PTR [rsp+0x58],0x8
   140011c05:	jb     0x140011c55
   140011c07:	mov    rcx,QWORD PTR [rsp+0x40]
   140011c0c:	call   QWORD PTR [rip+0x37a66]        # 0x140049678
   140011c12:	jmp    0x140011c55
   140011c14:	cmp    QWORD PTR [rsp+0x58],0x8
   140011c1a:	jb     0x140011c27
   140011c1c:	mov    rcx,QWORD PTR [rsp+0x40]
   140011c21:	call   QWORD PTR [rip+0x37a51]        # 0x140049678
   140011c27:	mov    QWORD PTR [rbx+0x18],0xf
   140011c2f:	mov    QWORD PTR [rbx+0x10],rsi
   140011c33:	mov    BYTE PTR [rbx],sil
   140011c36:	lea    rcx,[rip+0x3ecb8]        # 0x1400508f5
   140011c3d:	call   QWORD PTR [rip+0x379c5]        # 0x140049608
   140011c43:	mov    r8,rax
   140011c46:	lea    rdx,[rip+0x3eca8]        # 0x1400508f5
   140011c4d:	mov    rcx,rbx
   140011c50:	call   0x140005154
   140011c55:	mov    rax,rbx
   140011c58:	mov    rcx,QWORD PTR [rbp+0x7f0]
   140011c5f:	xor    rcx,rsp
   140011c62:	call   0x14002b100
   140011c67:	lea    r11,[rsp+0x900]
   140011c6f:	mov    rbx,QWORD PTR [r11+0x30]
   140011c73:	mov    rsi,QWORD PTR [r11+0x38]
   140011c77:	mov    rsp,r11
   140011c7a:	pop    r12
   140011c7c:	pop    rdi
   140011c7d:	pop    rbp
   140011c7e:	ret    
   140011c7f:	int3   
   140011c80:	rex push rbx
   140011c82:	push   rbp
   140011c83:	push   rsi
   140011c84:	push   rdi
   140011c85:	push   r12
   140011c87:	sub    rsp,0x80
   140011c8e:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140011c97:	mov    rax,QWORD PTR [rip+0x56552]        # 0x1400681f0
   140011c9e:	xor    rax,rsp
   140011ca1:	mov    QWORD PTR [rsp+0x70],rax
   140011ca6:	mov    bpl,r8b
   140011ca9:	mov    r12,rdx
   140011cac:	mov    rsi,rcx
   140011caf:	mov    QWORD PTR [rsp+0x28],rcx
   140011cb4:	and    DWORD PTR [rsp+0x20],0x0
   140011cb9:	lea    rax,[rip+0x3f360]        # 0x140051020
   140011cc0:	mov    QWORD PTR [rcx],rax
   140011cc3:	lea    rdi,[rcx+0x8]
   140011cc7:	mov    QWORD PTR [rsp+0x30],rdi
   140011ccc:	lea    rax,[rip+0x3ef9d]        # 0x140050c70
   140011cd3:	mov    QWORD PTR [rdi],rax
   140011cd6:	lea    rcx,[rdi+0xa8]
   140011cdd:	call   QWORD PTR [rip+0x375c5]        # 0x1400492a8
   140011ce3:	nop
   140011ce4:	mov    DWORD PTR [rsp+0x20],0x1
   140011cec:	lea    rbx,[rdi+0x8]
   140011cf0:	xor    r9d,r9d
   140011cf3:	xor    r8d,r8d
   140011cf6:	mov    rdx,rbx
   140011cf9:	mov    rcx,rdi
   140011cfc:	call   QWORD PTR [rip+0x3759e]        # 0x1400492a0
   140011d02:	nop
   140011d03:	mov    rax,QWORD PTR [rdi]
   140011d06:	movsxd rcx,DWORD PTR [rax+0x4]
   140011d0a:	lea    rax,[rip+0x3ed2f]        # 0x140050a40
   140011d11:	mov    QWORD PTR [rcx+rdi*1],rax
   140011d15:	mov    QWORD PTR [rsp+0x38],rbx
   140011d1a:	mov    rcx,rbx
   140011d1d:	call   QWORD PTR [rip+0x3755d]        # 0x140049280
   140011d23:	nop
   140011d24:	lea    rax,[rip+0x3ec7d]        # 0x1400509a8
   140011d2b:	mov    QWORD PTR [rbx],rax
   140011d2e:	mov    BYTE PTR [rbx+0x90],0x0
   140011d35:	mov    BYTE PTR [rbx+0x89],0x0
   140011d3c:	mov    rcx,rbx
   140011d3f:	call   QWORD PTR [rip+0x37523]        # 0x140049268
   140011d45:	and    QWORD PTR [rbx+0x98],0x0
   140011d4d:	mov    eax,DWORD PTR [rip+0x58a65]        # 0x14006a7b8
   140011d53:	mov    DWORD PTR [rbx+0x8c],eax
   140011d59:	and    QWORD PTR [rbx+0x80],0x0
   140011d61:	cmp    QWORD PTR [r12+0x10],0x0
   140011d67:	je     0x140011e23
   140011d6d:	mov    rdx,r12
   140011d70:	lea    rcx,[rsp+0x48]
   140011d75:	call   0x1400095c4
   140011d7a:	nop
   140011d7b:	cmp    QWORD PTR [rax+0x18],0x8
   140011d80:	jb     0x140011d85
   140011d82:	mov    rax,QWORD PTR [rax]
   140011d85:	neg    bpl
   140011d88:	sbb    r8d,r8d
   140011d8b:	and    r8d,0x8
   140011d8f:	mov    ebx,0x2
   140011d94:	add    r8d,ebx
   140011d97:	or     r8d,ebx
   140011d9a:	lea    rcx,[rdi+0x8]
   140011d9e:	mov    rdx,rax
   140011da1:	call   0x140004c7c
   140011da6:	xor    r8d,r8d
   140011da9:	test   rax,rax
   140011dac:	mov    rax,QWORD PTR [rdi]
   140011daf:	movsxd rcx,DWORD PTR [rax+0x4]
   140011db3:	jne    0x140011dc2
   140011db5:	add    rcx,rdi
   140011db8:	mov    edx,ebx
   140011dba:	call   QWORD PTR [rip+0x37538]        # 0x1400492f8
   140011dc0:	jmp    0x140011dce
   140011dc2:	add    rcx,rdi
   140011dc5:	xor    edx,edx
   140011dc7:	call   QWORD PTR [rip+0x376db]        # 0x1400494a8
   140011dcd:	nop
   140011dce:	cmp    QWORD PTR [rsp+0x60],0x8
   140011dd4:	jb     0x140011de1
   140011dd6:	mov    rcx,QWORD PTR [rsp+0x48]
   140011ddb:	call   QWORD PTR [rip+0x37897]        # 0x140049678
   140011de1:	mov    rax,QWORD PTR [rdi]
   140011de4:	movsxd rcx,DWORD PTR [rax+0x4]
   140011de8:	mov    edx,DWORD PTR [rcx+rsi*1+0x18]
   140011dec:	test   dl,0x6
   140011def:	jne    0x140011dff
   140011df1:	mov    eax,edx
   140011df3:	shr    eax,0x2
   140011df6:	test   al,0x1
   140011df8:	jne    0x140011dff
   140011dfa:	test   dl,0x6
   140011dfd:	je     0x140011e23
   140011dff:	lea    rcx,[rdi+0x8]
   140011e03:	call   0x140004d90
   140011e08:	test   rax,rax
   140011e0b:	jne    0x140011e23
   140011e0d:	mov    rcx,QWORD PTR [rdi]
   140011e10:	movsxd rcx,DWORD PTR [rcx+0x4]
   140011e14:	add    rcx,rdi
   140011e17:	xor    r8d,r8d
   140011e1a:	mov    edx,ebx
   140011e1c:	call   QWORD PTR [rip+0x374d6]        # 0x1400492f8
   140011e22:	nop
   140011e23:	mov    rax,rsi
   140011e26:	mov    rcx,QWORD PTR [rsp+0x70]
   140011e2b:	xor    rcx,rsp
   140011e2e:	call   0x14002b100
   140011e33:	add    rsp,0x80
   140011e3a:	pop    r12
   140011e3c:	pop    rdi
   140011e3d:	pop    rsi
   140011e3e:	pop    rbp
   140011e3f:	pop    rbx
   140011e40:	ret    
   140011e41:	int3   
   140011e42:	int3   
   140011e43:	int3   
   140011e44:	mov    QWORD PTR [rsp+0x8],rcx
   140011e49:	push   rdi
   140011e4a:	sub    rsp,0x30
   140011e4e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011e57:	mov    QWORD PTR [rsp+0x48],rbx
   140011e5c:	mov    QWORD PTR [rsp+0x50],rsi
   140011e61:	mov    esi,edx
   140011e63:	mov    rbx,rcx
   140011e66:	lea    rax,[rip+0x3f1b3]        # 0x140051020
   140011e6d:	mov    QWORD PTR [rcx],rax
   140011e70:	lea    rdi,[rcx+0x8]
   140011e74:	lea    rcx,[rdi+0x8]
   140011e78:	call   0x140004d90
   140011e7d:	test   rax,rax
   140011e80:	jne    0x140011e9a
   140011e82:	mov    rax,QWORD PTR [rdi]
   140011e85:	movsxd rcx,DWORD PTR [rax+0x4]
   140011e89:	add    rcx,rdi
   140011e8c:	xor    r8d,r8d
   140011e8f:	lea    edx,[r8+0x2]
   140011e93:	call   QWORD PTR [rip+0x3745f]        # 0x1400492f8
   140011e99:	nop
   140011e9a:	mov    rcx,rdi
   140011e9d:	call   0x1400028a4
   140011ea2:	nop
   140011ea3:	lea    rax,[rip+0x3f0ae]        # 0x140050f58
   140011eaa:	mov    QWORD PTR [rbx],rax
   140011ead:	test   sil,0x1
   140011eb1:	je     0x140011ebc
   140011eb3:	mov    rcx,rbx
   140011eb6:	call   QWORD PTR [rip+0x377bc]        # 0x140049678
   140011ebc:	mov    rax,rbx
   140011ebf:	mov    rbx,QWORD PTR [rsp+0x48]
   140011ec4:	mov    rsi,QWORD PTR [rsp+0x50]
   140011ec9:	add    rsp,0x30
   140011ecd:	pop    rdi
   140011ece:	ret    
   140011ecf:	int3   
   140011ed0:	mov    rax,rsp
   140011ed3:	push   rbp
   140011ed4:	push   r12
   140011ed6:	push   r13
   140011ed8:	push   r14
   140011eda:	push   r15
   140011edc:	lea    rbp,[rax-0x5f]
   140011ee0:	sub    rsp,0xb0
   140011ee7:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   140011eef:	mov    QWORD PTR [rax+0x10],rbx
   140011ef3:	mov    QWORD PTR [rax+0x18],rsi
   140011ef7:	mov    QWORD PTR [rax+0x20],rdi
   140011efb:	mov    rax,QWORD PTR [rip+0x562ee]        # 0x1400681f0
   140011f02:	xor    rax,rsp
   140011f05:	mov    QWORD PTR [rbp+0x2f],rax
   140011f09:	mov    r12,rcx
   140011f0c:	mov    r14d,0x68
   140011f12:	lea    r15d,[r14-0x58]
   140011f16:	mov    rdi,QWORD PTR [rip+0x58953]        # 0x14006a870
   140011f1d:	xor    r13d,r13d
   140011f20:	test   rdi,rdi
   140011f23:	jne    0x140012020
   140011f29:	lea    rcx,[rbp+0x7]
   140011f2d:	call   0x140013aa0
   140011f32:	mov    rsi,rax
   140011f35:	mov    rbx,QWORD PTR [rip+0x58894]        # 0x14006a7d0
   140011f3c:	test   rbx,rbx
   140011f3f:	jne    0x140011f85
   140011f41:	mov    ecx,r14d
   140011f44:	call   QWORD PTR [rip+0x3774e]        # 0x140049698
   140011f4a:	mov    rbx,rax
   140011f4d:	test   rax,rax
   140011f50:	je     0x140011f7b
   140011f52:	mov    QWORD PTR [rax],r13
   140011f55:	mov    QWORD PTR [rax+0x8],r13
   140011f59:	mov    QWORD PTR [rax+0x10],r13
   140011f5d:	mov    QWORD PTR [rax+0x18],r13
   140011f61:	mov    QWORD PTR [rax+0x28],r13
   140011f65:	mov    QWORD PTR [rax+0x30],r13
   140011f69:	mov    QWORD PTR [rax+0x38],r13
   140011f6d:	mov    QWORD PTR [rax+0x48],r13
   140011f71:	mov    QWORD PTR [rax+0x50],r13
   140011f75:	mov    QWORD PTR [rax+0x58],r13
   140011f79:	jmp    0x140011f7e
   140011f7b:	mov    rbx,r13
   140011f7e:	mov    QWORD PTR [rip+0x5884b],rbx        # 0x14006a7d0
   140011f85:	mov    ecx,0x28
   140011f8a:	call   QWORD PTR [rip+0x37708]        # 0x140049698
   140011f90:	mov    rdi,rax
   140011f93:	mov    QWORD PTR [rbp-0x59],rax
   140011f97:	test   rax,rax
   140011f9a:	je     0x140011fbf
   140011f9c:	mov    QWORD PTR [rax+0x18],0xf
   140011fa4:	mov    QWORD PTR [rax+0x10],r13
   140011fa8:	mov    BYTE PTR [rax],r13b
   140011fab:	or     r9,0xffffffffffffffff
   140011faf:	xor    r8d,r8d
   140011fb2:	mov    rdx,rsi
   140011fb5:	mov    rcx,rax
   140011fb8:	call   0x1400048b8
   140011fbd:	jmp    0x140011fc2
   140011fbf:	mov    rdi,r13
   140011fc2:	lea    rcx,[rbx+0x28]
   140011fc6:	mov    QWORD PTR [rbp-0x59],rdi
   140011fca:	test   rdi,rdi
   140011fcd:	je     0x140011ff2
   140011fcf:	mov    rax,QWORD PTR [rcx]
   140011fd2:	jmp    0x140011fdd
   140011fd4:	cmp    QWORD PTR [rax],rdi
   140011fd7:	je     0x140011fe3
   140011fd9:	add    rax,0x8
   140011fdd:	cmp    rax,QWORD PTR [rcx+0x8]
   140011fe1:	jne    0x140011fd4
   140011fe3:	cmp    QWORD PTR [rcx+0x8],rax
   140011fe7:	jne    0x140011ff2
   140011fe9:	lea    rdx,[rbp-0x59]
   140011fed:	call   0x140015034
   140011ff2:	mov    QWORD PTR [rip+0x58877],rdi        # 0x14006a870
   140011ff9:	cmp    QWORD PTR [rbp+0x1f],r15
   140011ffd:	jb     0x140012010
   140011fff:	mov    rcx,QWORD PTR [rbp+0x7]
   140012003:	call   QWORD PTR [rip+0x3766f]        # 0x140049678
   140012009:	mov    rdi,QWORD PTR [rip+0x58860]        # 0x14006a870
   140012010:	mov    QWORD PTR [rbp+0x1f],0xf
   140012018:	mov    QWORD PTR [rbp+0x17],r13
   14001201c:	mov    BYTE PTR [rbp+0x7],r13b
   140012020:	mov    rdx,rdi
   140012023:	lea    rcx,[rbp-0x49]
   140012027:	call   0x1400095c4
   14001202c:	lea    rcx,[rbp-0x49]
   140012030:	cmp    QWORD PTR [rbp-0x31],0x8
   140012035:	cmovae rcx,QWORD PTR [rbp-0x49]
   14001203a:	call   QWORD PTR [rip+0x378c0]        # 0x140049900
   140012040:	cmp    eax,0x1
   140012043:	sete   bl
   140012046:	cmp    QWORD PTR [rbp-0x31],0x8
   14001204b:	jb     0x140012057
   14001204d:	mov    rcx,QWORD PTR [rbp-0x49]
   140012051:	call   QWORD PTR [rip+0x37621]        # 0x140049678
   140012057:	mov    QWORD PTR [rbp-0x31],0x7
   14001205f:	mov    QWORD PTR [rbp-0x39],r13
   140012063:	mov    WORD PTR [rbp-0x49],r13w
   140012068:	test   bl,bl
   14001206a:	jne    0x140012137
   140012070:	mov    rdi,QWORD PTR [rip+0x587f1]        # 0x14006a868
   140012077:	test   rdi,rdi
   14001207a:	jne    0x1400122ec
   140012080:	mov    rbx,QWORD PTR [rip+0x58749]        # 0x14006a7d0
   140012087:	test   rbx,rbx
   14001208a:	jne    0x1400120d0
   14001208c:	mov    rcx,r14
   14001208f:	call   QWORD PTR [rip+0x37603]        # 0x140049698
   140012095:	mov    rbx,rax
   140012098:	test   rax,rax
   14001209b:	je     0x1400120c6
   14001209d:	mov    QWORD PTR [rax],r13
   1400120a0:	mov    QWORD PTR [rax+0x8],r13
   1400120a4:	mov    QWORD PTR [rax+0x10],r13
   1400120a8:	mov    QWORD PTR [rax+0x18],r13
   1400120ac:	mov    QWORD PTR [rax+0x28],r13
   1400120b0:	mov    QWORD PTR [rax+0x30],r13
   1400120b4:	mov    QWORD PTR [rax+0x38],r13
   1400120b8:	mov    QWORD PTR [rax+0x48],r13
   1400120bc:	mov    QWORD PTR [rax+0x50],r13
   1400120c0:	mov    QWORD PTR [rax+0x58],r13
   1400120c4:	jmp    0x1400120c9
   1400120c6:	mov    rbx,r13
   1400120c9:	mov    QWORD PTR [rip+0x58700],rbx        # 0x14006a7d0
   1400120d0:	mov    rsi,QWORD PTR [rip+0x374f9]        # 0x1400495d0
   1400120d7:	mov    rcx,r15
   1400120da:	call   QWORD PTR [rip+0x375b8]        # 0x140049698
   1400120e0:	mov    rdi,rax
   1400120e3:	test   rax,rax
   1400120e6:	je     0x1400120f8
   1400120e8:	mov    QWORD PTR [rax+0x8],rsi
   1400120ec:	lea    rax,[rip+0x3ef45]        # 0x140051038
   1400120f3:	mov    QWORD PTR [rdi],rax
   1400120f6:	jmp    0x1400120fb
   1400120f8:	mov    rdi,r13
   1400120fb:	lea    rcx,[rbx+0x8]
   1400120ff:	mov    QWORD PTR [rbp-0x59],rdi
   140012103:	test   rdi,rdi
   140012106:	je     0x14001212b
   140012108:	mov    rax,QWORD PTR [rcx]
   14001210b:	jmp    0x140012116
   14001210d:	cmp    QWORD PTR [rax],rdi
   140012110:	je     0x14001211c
   140012112:	add    rax,0x8
   140012116:	cmp    rax,QWORD PTR [rcx+0x8]
   14001211a:	jne    0x14001210d
   14001211c:	cmp    QWORD PTR [rcx+0x8],rax
   140012120:	jne    0x14001212b
   140012122:	lea    rdx,[rbp-0x59]
   140012126:	call   0x140015034
   14001212b:	mov    QWORD PTR [rip+0x58736],rdi        # 0x14006a868
   140012132:	jmp    0x1400122ec
   140012137:	mov    rdx,r12
   14001213a:	lea    rcx,[rbp-0x21]
   14001213e:	call   0x140011a88
   140012143:	nop
   140012144:	mov    rdi,QWORD PTR [rip+0x5871d]        # 0x14006a868
   14001214b:	cmp    QWORD PTR [rbp-0x11],r13
   14001214f:	je     0x140012221
   140012155:	test   rdi,rdi
   140012158:	jne    0x14001221c
   14001215e:	mov    rbx,QWORD PTR [rip+0x5866b]        # 0x14006a7d0
   140012165:	test   rbx,rbx
   140012168:	jne    0x1400121ae
   14001216a:	mov    rcx,r14
   14001216d:	call   QWORD PTR [rip+0x37525]        # 0x140049698
   140012173:	mov    rbx,rax
   140012176:	test   rax,rax
   140012179:	je     0x1400121a4
   14001217b:	mov    QWORD PTR [rax],r13
   14001217e:	mov    QWORD PTR [rax+0x8],r13
   140012182:	mov    QWORD PTR [rax+0x10],r13
   140012186:	mov    QWORD PTR [rax+0x18],r13
   14001218a:	mov    QWORD PTR [rax+0x28],r13
   14001218e:	mov    QWORD PTR [rax+0x30],r13
   140012192:	mov    QWORD PTR [rax+0x38],r13
   140012196:	mov    QWORD PTR [rax+0x48],r13
   14001219a:	mov    QWORD PTR [rax+0x50],r13
   14001219e:	mov    QWORD PTR [rax+0x58],r13
   1400121a2:	jmp    0x1400121a7
   1400121a4:	mov    rbx,r13
   1400121a7:	mov    QWORD PTR [rip+0x58622],rbx        # 0x14006a7d0
   1400121ae:	call   0x140013b4c
   1400121b3:	mov    dl,al
   1400121b5:	lea    rcx,[rbp-0x21]
   1400121b9:	call   0x140011988
   1400121be:	mov    rsi,rax
   1400121c1:	mov    rcx,r15
   1400121c4:	call   QWORD PTR [rip+0x374ce]        # 0x140049698
   1400121ca:	mov    rdi,rax
   1400121cd:	test   rax,rax
   1400121d0:	je     0x1400121e2
   1400121d2:	lea    rax,[rip+0x3ed8f]        # 0x140050f68
   1400121d9:	mov    QWORD PTR [rdi],rax
   1400121dc:	mov    QWORD PTR [rdi+0x8],rsi
   1400121e0:	jmp    0x1400121e5
   1400121e2:	mov    rdi,r13
   1400121e5:	lea    rcx,[rbx+0x8]
   1400121e9:	mov    QWORD PTR [rbp-0x59],rdi
   1400121ed:	test   rdi,rdi
   1400121f0:	je     0x140012215
   1400121f2:	mov    rax,QWORD PTR [rcx]
   1400121f5:	jmp    0x140012200
   1400121f7:	cmp    QWORD PTR [rax],rdi
   1400121fa:	je     0x140012206
   1400121fc:	add    rax,0x8
   140012200:	cmp    rax,QWORD PTR [rcx+0x8]
   140012204:	jne    0x1400121f7
   140012206:	cmp    QWORD PTR [rcx+0x8],rax
   14001220a:	jne    0x140012215
   14001220c:	lea    rdx,[rbp-0x59]
   140012210:	call   0x140015034
   140012215:	mov    QWORD PTR [rip+0x5864c],rdi        # 0x14006a868
   14001221c:	jmp    0x1400122dc
   140012221:	test   rdi,rdi
   140012224:	jne    0x1400122dc
   14001222a:	mov    rbx,QWORD PTR [rip+0x5859f]        # 0x14006a7d0
   140012231:	test   rbx,rbx
   140012234:	jne    0x14001227a
   140012236:	mov    rcx,r14
   140012239:	call   QWORD PTR [rip+0x37459]        # 0x140049698
   14001223f:	mov    rbx,rax
   140012242:	test   rax,rax
   140012245:	je     0x140012270
   140012247:	mov    QWORD PTR [rax],r13
   14001224a:	mov    QWORD PTR [rax+0x8],r13
   14001224e:	mov    QWORD PTR [rax+0x10],r13
   140012252:	mov    QWORD PTR [rax+0x18],r13
   140012256:	mov    QWORD PTR [rax+0x28],r13
   14001225a:	mov    QWORD PTR [rax+0x30],r13
   14001225e:	mov    QWORD PTR [rax+0x38],r13
   140012262:	mov    QWORD PTR [rax+0x48],r13
   140012266:	mov    QWORD PTR [rax+0x50],r13
   14001226a:	mov    QWORD PTR [rax+0x58],r13
   14001226e:	jmp    0x140012273
   140012270:	mov    rbx,r13
   140012273:	mov    QWORD PTR [rip+0x58556],rbx        # 0x14006a7d0
   14001227a:	mov    rsi,QWORD PTR [rip+0x3734f]        # 0x1400495d0
   140012281:	mov    rcx,r15
   140012284:	call   QWORD PTR [rip+0x3740e]        # 0x140049698
   14001228a:	mov    rdi,rax
   14001228d:	test   rax,rax
   140012290:	je     0x1400122a2
   140012292:	mov    QWORD PTR [rax+0x8],rsi
   140012296:	lea    rax,[rip+0x3ed9b]        # 0x140051038
   14001229d:	mov    QWORD PTR [rdi],rax
   1400122a0:	jmp    0x1400122a5
   1400122a2:	mov    rdi,r13
   1400122a5:	lea    rcx,[rbx+0x8]
   1400122a9:	mov    QWORD PTR [rbp-0x59],rdi
   1400122ad:	test   rdi,rdi
   1400122b0:	je     0x1400122d5
   1400122b2:	mov    rax,QWORD PTR [rcx]
   1400122b5:	jmp    0x1400122c0
   1400122b7:	cmp    QWORD PTR [rax],rdi
   1400122ba:	je     0x1400122c6
   1400122bc:	add    rax,0x8
   1400122c0:	cmp    rax,QWORD PTR [rcx+0x8]
   1400122c4:	jne    0x1400122b7
   1400122c6:	cmp    QWORD PTR [rcx+0x8],rax
   1400122ca:	jne    0x1400122d5
   1400122cc:	lea    rdx,[rbp-0x59]
   1400122d0:	call   0x140015034
   1400122d5:	mov    QWORD PTR [rip+0x5858c],rdi        # 0x14006a868
   1400122dc:	cmp    QWORD PTR [rbp-0x9],r15
   1400122e0:	jb     0x1400122ec
   1400122e2:	mov    rcx,QWORD PTR [rbp-0x21]
   1400122e6:	call   QWORD PTR [rip+0x3738c]        # 0x140049678
   1400122ec:	mov    rax,rdi
   1400122ef:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400122f3:	xor    rcx,rsp
   1400122f6:	call   0x14002b100
   1400122fb:	lea    r11,[rsp+0xb0]
   140012303:	mov    rbx,QWORD PTR [r11+0x38]
   140012307:	mov    rsi,QWORD PTR [r11+0x40]
   14001230b:	mov    rdi,QWORD PTR [r11+0x48]
   14001230f:	mov    rsp,r11
   140012312:	pop    r15
   140012314:	pop    r14
   140012316:	pop    r13
   140012318:	pop    r12
   14001231a:	pop    rbp
   14001231b:	ret    
   14001231c:	rex push rbp
   14001231e:	push   rbx
   14001231f:	push   rsi
   140012320:	push   rdi
   140012321:	push   r13
   140012323:	lea    rbp,[rsp-0x37]
   140012328:	sub    rsp,0xc0
   14001232f:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   140012337:	mov    rax,QWORD PTR [rip+0x55eb2]        # 0x1400681f0
   14001233e:	xor    rax,rsp
   140012341:	mov    QWORD PTR [rbp+0x27],rax
   140012345:	mov    rdi,rdx
   140012348:	mov    rsi,rcx
   14001234b:	mov    QWORD PTR [rbp-0x61],rcx
   14001234f:	mov    DWORD PTR [rbp-0x65],r8d
   140012353:	and    DWORD PTR [rbp-0x69],0x0
   140012357:	mov    r13d,0xf
   14001235d:	mov    QWORD PTR [rcx+0x18],r13
   140012361:	and    QWORD PTR [rcx+0x10],0x0
   140012366:	mov    BYTE PTR [rcx],0x0
   140012369:	lea    rcx,[rip+0x3ea7c]        # 0x140050dec
   140012370:	call   QWORD PTR [rip+0x37292]        # 0x140049608
   140012376:	mov    r8,rax
   140012379:	lea    rdx,[rip+0x3ea6c]        # 0x140050dec
   140012380:	mov    rcx,rsi
   140012383:	call   0x140005154
   140012388:	mov    DWORD PTR [rbp-0x69],0x1
   14001238f:	lea    rdx,[rbp-0x65]
   140012393:	lea    rcx,[rbp-0x1]
   140012397:	call   0x1400145ac
   14001239c:	mov    rbx,rax
   14001239f:	lea    r8,[rip+0x3ea4e]        # 0x140050df4
   1400123a6:	mov    rdx,rdi
   1400123a9:	lea    rcx,[rbp-0x29]
   1400123ad:	call   0x1400112ec
   1400123b2:	nop
   1400123b3:	mov    r8,rbx
   1400123b6:	mov    rdx,rax
   1400123b9:	lea    rcx,[rbp-0x51]
   1400123bd:	call   0x140011414
   1400123c2:	nop
   1400123c3:	or     r9,0xffffffffffffffff
   1400123c7:	xor    r8d,r8d
   1400123ca:	mov    rdx,rax
   1400123cd:	mov    rcx,rsi
   1400123d0:	call   0x140005638
   1400123d5:	nop
   1400123d6:	cmp    QWORD PTR [rbp-0x39],0x10
   1400123db:	jb     0x1400123e7
   1400123dd:	mov    rcx,QWORD PTR [rbp-0x51]
   1400123e1:	call   QWORD PTR [rip+0x37291]        # 0x140049678
   1400123e7:	mov    QWORD PTR [rbp-0x39],r13
   1400123eb:	and    QWORD PTR [rbp-0x41],0x0
   1400123f0:	mov    BYTE PTR [rbp-0x51],0x0
   1400123f4:	cmp    QWORD PTR [rbp-0x11],0x10
   1400123f9:	jb     0x140012405
   1400123fb:	mov    rcx,QWORD PTR [rbp-0x29]
   1400123ff:	call   QWORD PTR [rip+0x37273]        # 0x140049678
   140012405:	mov    QWORD PTR [rbp-0x11],r13
   140012409:	and    QWORD PTR [rbp-0x19],0x0
   14001240e:	mov    BYTE PTR [rbp-0x29],0x0
   140012412:	cmp    QWORD PTR [rbp+0x17],0x10
   140012417:	jb     0x140012423
   140012419:	mov    rcx,QWORD PTR [rbp-0x1]
   14001241d:	call   QWORD PTR [rip+0x37255]        # 0x140049678
   140012423:	mov    rax,rsi
   140012426:	mov    rcx,QWORD PTR [rbp+0x27]
   14001242a:	xor    rcx,rsp
   14001242d:	call   0x14002b100
   140012432:	add    rsp,0xc0
   140012439:	pop    r13
   14001243b:	pop    rdi
   14001243c:	pop    rsi
   14001243d:	pop    rbx
   14001243e:	pop    rbp
   14001243f:	ret    
   140012440:	int3   
   140012441:	int3   
   140012442:	int3   
   140012443:	int3   
   140012444:	rex push rbp
   140012446:	push   rbx
   140012447:	push   rsi
   140012448:	push   rdi
   140012449:	push   r12
   14001244b:	push   r13
   14001244d:	push   r14
   14001244f:	lea    rbp,[rsp-0x120]
   140012457:	sub    rsp,0x220
   14001245e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140012467:	mov    rax,QWORD PTR [rip+0x55d82]        # 0x1400681f0
   14001246e:	xor    rax,rsp
   140012471:	mov    QWORD PTR [rbp+0x110],rax
   140012478:	mov    r14,r9
   14001247b:	mov    r13,r8
   14001247e:	mov    r12,rdx
   140012481:	mov    rsi,rcx
   140012484:	mov    r8,QWORD PTR [rcx+0x8]
   140012488:	mov    rax,QWORD PTR [r8]
   14001248b:	movsxd rdx,DWORD PTR [rax+0x4]
   14001248f:	mov    r9d,DWORD PTR [rdx+r8*1+0x10]
   140012494:	test   r9b,0x6
   140012498:	jne    0x140012746
   14001249e:	mov    eax,r9d
   1400124a1:	shr    eax,0x2
   1400124a4:	test   al,0x1
   1400124a6:	jne    0x140012746
   1400124ac:	test   r9b,0x6
   1400124b0:	jne    0x140012746
   1400124b6:	call   QWORD PTR [rip+0x3725c]        # 0x140049718
   1400124bc:	mov    DWORD PTR [rsp+0x20],eax
   1400124c0:	lea    rcx,[rbp+0x98]
   1400124c7:	call   0x140013864
   1400124cc:	mov    rdi,rax
   1400124cf:	lea    rdx,[rsp+0x20]
   1400124d4:	lea    rcx,[rbp+0x48]
   1400124d8:	call   0x1400145ac
   1400124dd:	mov    rbx,rax
   1400124e0:	mov    r8,r12
   1400124e3:	lea    rdx,[rip+0x3e41a]        # 0x140050904
   1400124ea:	lea    rcx,[rbp-0x8]
   1400124ee:	call   0x14001464c
   1400124f3:	nop
   1400124f4:	lea    r8,[rip+0x3e405]        # 0x140050900
   1400124fb:	mov    rdx,rax
   1400124fe:	lea    rcx,[rbp-0x58]
   140012502:	call   0x1400113b0
   140012507:	nop
   140012508:	lea    r8,[rip+0x3e921]        # 0x140050e30
   14001250f:	mov    rdx,rax
   140012512:	lea    rcx,[rsp+0x58]
   140012517:	call   0x1400113b0
   14001251c:	nop
   14001251d:	mov    r8,rbx
   140012520:	mov    rdx,rax
   140012523:	lea    rcx,[rbp+0x20]
   140012527:	call   0x140011414
   14001252c:	nop
   14001252d:	lea    r8,[rip+0x3e8ec]        # 0x140050e20
   140012534:	mov    rdx,rax
   140012537:	lea    rcx,[rsp+0x30]
   14001253c:	call   0x1400113b0
   140012541:	nop
   140012542:	mov    r8,rdi
   140012545:	mov    rdx,rax
   140012548:	lea    rcx,[rbp-0x30]
   14001254c:	call   0x140011414
   140012551:	nop
   140012552:	lea    r8,[rip+0x3e8b7]        # 0x140050e10
   140012559:	mov    rdx,rax
   14001255c:	lea    rcx,[rbp+0xc0]
   140012563:	call   0x1400113b0
   140012568:	nop
   140012569:	mov    r8,r13
   14001256c:	mov    rdx,rax
   14001256f:	lea    rcx,[rbp-0x80]
   140012573:	call   0x140005e40
   140012578:	nop
   140012579:	lea    r8,[rip+0x3e880]        # 0x140050e00
   140012580:	mov    rdx,rax
   140012583:	lea    rcx,[rbp+0x70]
   140012587:	call   0x1400113b0
   14001258c:	nop
   14001258d:	mov    r8,r14
   140012590:	mov    rdx,rax
   140012593:	lea    rcx,[rbp+0xe8]
   14001259a:	call   0x140005e40
   14001259f:	nop
   1400125a0:	mov    r12d,0x10
   1400125a6:	cmp    QWORD PTR [rbp+0x88],r12
   1400125ad:	jb     0x1400125b9
   1400125af:	mov    rcx,QWORD PTR [rbp+0x70]
   1400125b3:	call   QWORD PTR [rip+0x370bf]        # 0x140049678
   1400125b9:	mov    edi,0xf
   1400125be:	mov    QWORD PTR [rbp+0x88],rdi
   1400125c5:	xor    ebx,ebx
   1400125c7:	mov    QWORD PTR [rbp+0x80],rbx
   1400125ce:	mov    BYTE PTR [rbp+0x70],bl
   1400125d1:	cmp    QWORD PTR [rbp-0x68],r12
   1400125d5:	jb     0x1400125e1
   1400125d7:	mov    rcx,QWORD PTR [rbp-0x80]
   1400125db:	call   QWORD PTR [rip+0x37097]        # 0x140049678
   1400125e1:	mov    QWORD PTR [rbp-0x68],rdi
   1400125e5:	mov    QWORD PTR [rbp-0x70],rbx
   1400125e9:	mov    BYTE PTR [rbp-0x80],bl
   1400125ec:	cmp    QWORD PTR [rbp+0xd8],r12
   1400125f3:	jb     0x140012602
   1400125f5:	mov    rcx,QWORD PTR [rbp+0xc0]
   1400125fc:	call   QWORD PTR [rip+0x37076]        # 0x140049678
   140012602:	mov    QWORD PTR [rbp+0xd8],rdi
   140012609:	mov    QWORD PTR [rbp+0xd0],rbx
   140012610:	mov    BYTE PTR [rbp+0xc0],bl
   140012616:	cmp    QWORD PTR [rbp-0x18],r12
   14001261a:	jb     0x140012626
   14001261c:	mov    rcx,QWORD PTR [rbp-0x30]
   140012620:	call   QWORD PTR [rip+0x37052]        # 0x140049678
   140012626:	mov    QWORD PTR [rbp-0x18],rdi
   14001262a:	mov    QWORD PTR [rbp-0x20],rbx
   14001262e:	mov    BYTE PTR [rbp-0x30],bl
   140012631:	cmp    QWORD PTR [rsp+0x48],r12
   140012636:	jb     0x140012643
   140012638:	mov    rcx,QWORD PTR [rsp+0x30]
   14001263d:	call   QWORD PTR [rip+0x37035]        # 0x140049678
   140012643:	mov    QWORD PTR [rsp+0x48],rdi
   140012648:	mov    QWORD PTR [rsp+0x40],rbx
   14001264d:	mov    BYTE PTR [rsp+0x30],bl
   140012651:	cmp    QWORD PTR [rbp+0x38],r12
   140012655:	jb     0x140012661
   140012657:	mov    rcx,QWORD PTR [rbp+0x20]
   14001265b:	call   QWORD PTR [rip+0x37017]        # 0x140049678
   140012661:	mov    QWORD PTR [rbp+0x38],rdi
   140012665:	mov    QWORD PTR [rbp+0x30],rbx
   140012669:	mov    BYTE PTR [rbp+0x20],bl
   14001266c:	cmp    QWORD PTR [rsp+0x70],r12
   140012671:	jb     0x14001267e
   140012673:	mov    rcx,QWORD PTR [rsp+0x58]
   140012678:	call   QWORD PTR [rip+0x36ffa]        # 0x140049678
   14001267e:	mov    QWORD PTR [rsp+0x70],rdi
   140012683:	mov    QWORD PTR [rsp+0x68],rbx
   140012688:	mov    BYTE PTR [rsp+0x58],bl
   14001268c:	cmp    QWORD PTR [rbp-0x40],r12
   140012690:	jb     0x14001269c
   140012692:	mov    rcx,QWORD PTR [rbp-0x58]
   140012696:	call   QWORD PTR [rip+0x36fdc]        # 0x140049678
   14001269c:	mov    QWORD PTR [rbp-0x40],rdi
   1400126a0:	mov    QWORD PTR [rbp-0x48],rbx
   1400126a4:	mov    BYTE PTR [rbp-0x58],bl
   1400126a7:	cmp    QWORD PTR [rbp+0x10],r12
   1400126ab:	jb     0x1400126b7
   1400126ad:	mov    rcx,QWORD PTR [rbp-0x8]
   1400126b1:	call   QWORD PTR [rip+0x36fc1]        # 0x140049678
   1400126b7:	mov    QWORD PTR [rbp+0x10],rdi
   1400126bb:	mov    QWORD PTR [rbp+0x8],rbx
   1400126bf:	mov    BYTE PTR [rbp-0x8],bl
   1400126c2:	cmp    QWORD PTR [rbp+0x60],r12
   1400126c6:	jb     0x1400126d2
   1400126c8:	mov    rcx,QWORD PTR [rbp+0x48]
   1400126cc:	call   QWORD PTR [rip+0x36fa6]        # 0x140049678
   1400126d2:	mov    QWORD PTR [rbp+0x60],rdi
   1400126d6:	mov    QWORD PTR [rbp+0x58],rbx
   1400126da:	mov    BYTE PTR [rbp+0x48],bl
   1400126dd:	cmp    QWORD PTR [rbp+0xb0],r12
   1400126e4:	jb     0x1400126f3
   1400126e6:	mov    rcx,QWORD PTR [rbp+0x98]
   1400126ed:	call   QWORD PTR [rip+0x36f85]        # 0x140049678
   1400126f3:	mov    QWORD PTR [rbp+0xb0],rdi
   1400126fa:	mov    QWORD PTR [rbp+0xa8],rbx
   140012701:	mov    BYTE PTR [rbp+0x98],bl
   140012707:	lea    rdx,[rbp+0xe8]
   14001270e:	mov    rcx,QWORD PTR [rsi+0x8]
   140012712:	call   0x140006014
   140012717:	mov    rcx,rax
   14001271a:	mov    rdx,QWORD PTR [rip+0x36d67]        # 0x140049488
   140012721:	call   QWORD PTR [rip+0x36d59]        # 0x140049480
   140012727:	mov    rbx,QWORD PTR [rsi+0x8]
   14001272b:	cmp    QWORD PTR [rbp+0x100],r12
   140012732:	jb     0x140012741
   140012734:	mov    rcx,QWORD PTR [rbp+0xe8]
   14001273b:	call   QWORD PTR [rip+0x36f37]        # 0x140049678
   140012741:	mov    rax,rbx
   140012744:	jmp    0x14001274d
   140012746:	mov    rax,QWORD PTR [rip+0x36e83]        # 0x1400495d0
   14001274d:	mov    rcx,QWORD PTR [rbp+0x110]
   140012754:	xor    rcx,rsp
   140012757:	call   0x14002b100
   14001275c:	add    rsp,0x220
   140012763:	pop    r14
   140012765:	pop    r13
   140012767:	pop    r12
   140012769:	pop    rdi
   14001276a:	pop    rsi
   14001276b:	pop    rbx
   14001276c:	pop    rbp
   14001276d:	ret    
   14001276e:	int3   
   14001276f:	int3   
   140012770:	rex push rbx
   140012772:	push   rsi
   140012773:	push   rdi
   140012774:	sub    rsp,0x60
   140012778:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012781:	mov    rax,QWORD PTR [rip+0x55a68]        # 0x1400681f0
   140012788:	xor    rax,rsp
   14001278b:	mov    QWORD PTR [rsp+0x50],rax
   140012790:	mov    rdi,r8
   140012793:	mov    rbx,rdx
   140012796:	mov    rsi,rcx
   140012799:	mov    QWORD PTR [rsp+0x40],0xf
   1400127a2:	and    QWORD PTR [rsp+0x38],0x0
   1400127a8:	mov    BYTE PTR [rsp+0x28],0x0
   1400127ad:	lea    rcx,[rip+0x3e684]        # 0x140050e38
   1400127b4:	call   QWORD PTR [rip+0x36e4e]        # 0x140049608
   1400127ba:	mov    r8,rax
   1400127bd:	lea    rdx,[rip+0x3e674]        # 0x140050e38
   1400127c4:	lea    rcx,[rsp+0x28]
   1400127c9:	call   0x140005154
   1400127ce:	nop
   1400127cf:	mov    rax,QWORD PTR [rsi]
   1400127d2:	mov    r9,rdi
   1400127d5:	mov    r8,rbx
   1400127d8:	lea    rdx,[rsp+0x28]
   1400127dd:	mov    rcx,rsi
   1400127e0:	call   QWORD PTR [rax+0xa8]
   1400127e6:	nop
   1400127e7:	cmp    QWORD PTR [rsp+0x40],0x10
   1400127ed:	jb     0x1400127fa
   1400127ef:	mov    rcx,QWORD PTR [rsp+0x28]
   1400127f4:	call   QWORD PTR [rip+0x36e7e]        # 0x140049678
   1400127fa:	mov    rcx,QWORD PTR [rsp+0x50]
   1400127ff:	xor    rcx,rsp
   140012802:	call   0x14002b100
   140012807:	add    rsp,0x60
   14001280b:	pop    rdi
   14001280c:	pop    rsi
   14001280d:	pop    rbx
   14001280e:	ret    
   14001280f:	int3   
   140012810:	rex push rbx
   140012812:	push   rsi
   140012813:	push   rdi
   140012814:	sub    rsp,0x60
   140012818:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012821:	mov    rax,QWORD PTR [rip+0x559c8]        # 0x1400681f0
   140012828:	xor    rax,rsp
   14001282b:	mov    QWORD PTR [rsp+0x50],rax
   140012830:	mov    rdi,r8
   140012833:	mov    rbx,rdx
   140012836:	mov    rsi,rcx
   140012839:	mov    QWORD PTR [rsp+0x40],0xf
   140012842:	and    QWORD PTR [rsp+0x38],0x0
   140012848:	mov    BYTE PTR [rsp+0x28],0x0
   14001284d:	lea    rcx,[rip+0x3e5ec]        # 0x140050e40
   140012854:	call   QWORD PTR [rip+0x36dae]        # 0x140049608
   14001285a:	mov    r8,rax
   14001285d:	lea    rdx,[rip+0x3e5dc]        # 0x140050e40
   140012864:	lea    rcx,[rsp+0x28]
   140012869:	call   0x140005154
   14001286e:	nop
   14001286f:	mov    rax,QWORD PTR [rsi]
   140012872:	mov    r9,rdi
   140012875:	mov    r8,rbx
   140012878:	lea    rdx,[rsp+0x28]
   14001287d:	mov    rcx,rsi
   140012880:	call   QWORD PTR [rax+0xa8]
   140012886:	nop
   140012887:	cmp    QWORD PTR [rsp+0x40],0x10
   14001288d:	jb     0x14001289a
   14001288f:	mov    rcx,QWORD PTR [rsp+0x28]
   140012894:	call   QWORD PTR [rip+0x36dde]        # 0x140049678
   14001289a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001289f:	xor    rcx,rsp
   1400128a2:	call   0x14002b100
   1400128a7:	add    rsp,0x60
   1400128ab:	pop    rdi
   1400128ac:	pop    rsi
   1400128ad:	pop    rbx
   1400128ae:	ret    
   1400128af:	int3   
   1400128b0:	rex push rbx
   1400128b2:	push   rsi
   1400128b3:	push   rdi
   1400128b4:	sub    rsp,0x60
   1400128b8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400128c1:	mov    rax,QWORD PTR [rip+0x55928]        # 0x1400681f0
   1400128c8:	xor    rax,rsp
   1400128cb:	mov    QWORD PTR [rsp+0x50],rax
   1400128d0:	mov    rdi,r8
   1400128d3:	mov    rbx,rdx
   1400128d6:	mov    rsi,rcx
   1400128d9:	mov    QWORD PTR [rsp+0x40],0xf
   1400128e2:	and    QWORD PTR [rsp+0x38],0x0
   1400128e8:	mov    BYTE PTR [rsp+0x28],0x0
   1400128ed:	lea    rcx,[rip+0x3e554]        # 0x140050e48
   1400128f4:	call   QWORD PTR [rip+0x36d0e]        # 0x140049608
   1400128fa:	mov    r8,rax
   1400128fd:	lea    rdx,[rip+0x3e544]        # 0x140050e48
   140012904:	lea    rcx,[rsp+0x28]
   140012909:	call   0x140005154
   14001290e:	nop
   14001290f:	mov    rax,QWORD PTR [rsi]
   140012912:	mov    r9,rdi
   140012915:	mov    r8,rbx
   140012918:	lea    rdx,[rsp+0x28]
   14001291d:	mov    rcx,rsi
   140012920:	call   QWORD PTR [rax+0xa8]
   140012926:	nop
   140012927:	cmp    QWORD PTR [rsp+0x40],0x10
   14001292d:	jb     0x14001293a
   14001292f:	mov    rcx,QWORD PTR [rsp+0x28]
   140012934:	call   QWORD PTR [rip+0x36d3e]        # 0x140049678
   14001293a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001293f:	xor    rcx,rsp
   140012942:	call   0x14002b100
   140012947:	add    rsp,0x60
   14001294b:	pop    rdi
   14001294c:	pop    rsi
   14001294d:	pop    rbx
   14001294e:	ret    
   14001294f:	int3   
   140012950:	rex push rbx
   140012952:	push   rsi
   140012953:	push   rdi
   140012954:	sub    rsp,0x60
   140012958:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012961:	mov    rax,QWORD PTR [rip+0x55888]        # 0x1400681f0
   140012968:	xor    rax,rsp
   14001296b:	mov    QWORD PTR [rsp+0x50],rax
   140012970:	mov    rdi,r8
   140012973:	mov    rbx,rdx
   140012976:	mov    rsi,rcx
   140012979:	mov    QWORD PTR [rsp+0x40],0xf
   140012982:	and    QWORD PTR [rsp+0x38],0x0
   140012988:	mov    BYTE PTR [rsp+0x28],0x0
   14001298d:	lea    rcx,[rip+0x3e4bc]        # 0x140050e50
   140012994:	call   QWORD PTR [rip+0x36c6e]        # 0x140049608
   14001299a:	mov    r8,rax
   14001299d:	lea    rdx,[rip+0x3e4ac]        # 0x140050e50
   1400129a4:	lea    rcx,[rsp+0x28]
   1400129a9:	call   0x140005154
   1400129ae:	nop
   1400129af:	mov    rax,QWORD PTR [rsi]
   1400129b2:	mov    r9,rdi
   1400129b5:	mov    r8,rbx
   1400129b8:	lea    rdx,[rsp+0x28]
   1400129bd:	mov    rcx,rsi
   1400129c0:	call   QWORD PTR [rax+0xa8]
   1400129c6:	nop
   1400129c7:	cmp    QWORD PTR [rsp+0x40],0x10
   1400129cd:	jb     0x1400129da
   1400129cf:	mov    rcx,QWORD PTR [rsp+0x28]
   1400129d4:	call   QWORD PTR [rip+0x36c9e]        # 0x140049678
   1400129da:	mov    rcx,QWORD PTR [rsp+0x50]
   1400129df:	xor    rcx,rsp
   1400129e2:	call   0x14002b100
   1400129e7:	add    rsp,0x60
   1400129eb:	pop    rdi
   1400129ec:	pop    rsi
   1400129ed:	pop    rbx
   1400129ee:	ret    
   1400129ef:	int3   
   1400129f0:	rex push rbx
   1400129f2:	push   rsi
   1400129f3:	push   rdi
   1400129f4:	sub    rsp,0x60
   1400129f8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012a01:	mov    rax,QWORD PTR [rip+0x557e8]        # 0x1400681f0
   140012a08:	xor    rax,rsp
   140012a0b:	mov    QWORD PTR [rsp+0x50],rax
   140012a10:	mov    rdi,r8
   140012a13:	mov    rbx,rdx
   140012a16:	mov    rsi,rcx
   140012a19:	mov    QWORD PTR [rsp+0x40],0xf
   140012a22:	and    QWORD PTR [rsp+0x38],0x0
   140012a28:	mov    BYTE PTR [rsp+0x28],0x0
   140012a2d:	lea    rcx,[rip+0x3e424]        # 0x140050e58
   140012a34:	call   QWORD PTR [rip+0x36bce]        # 0x140049608
   140012a3a:	mov    r8,rax
   140012a3d:	lea    rdx,[rip+0x3e414]        # 0x140050e58
   140012a44:	lea    rcx,[rsp+0x28]
   140012a49:	call   0x140005154
   140012a4e:	nop
   140012a4f:	mov    rax,QWORD PTR [rsi]
   140012a52:	mov    r9,rdi
   140012a55:	mov    r8,rbx
   140012a58:	lea    rdx,[rsp+0x28]
   140012a5d:	mov    rcx,rsi
   140012a60:	call   QWORD PTR [rax+0xa8]
   140012a66:	nop
   140012a67:	cmp    QWORD PTR [rsp+0x40],0x10
   140012a6d:	jb     0x140012a7a
   140012a6f:	mov    rcx,QWORD PTR [rsp+0x28]
   140012a74:	call   QWORD PTR [rip+0x36bfe]        # 0x140049678
   140012a7a:	mov    rcx,QWORD PTR [rsp+0x50]
   140012a7f:	xor    rcx,rsp
   140012a82:	call   0x14002b100
   140012a87:	add    rsp,0x60
   140012a8b:	pop    rdi
   140012a8c:	pop    rsi
   140012a8d:	pop    rbx
   140012a8e:	ret    
   140012a8f:	int3   
   140012a90:	rex push rbp
   140012a92:	push   rbx
   140012a93:	push   rsi
   140012a94:	push   rdi
   140012a95:	push   r12
   140012a97:	mov    rbp,rsp
   140012a9a:	sub    rsp,0x80
   140012aa1:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012aa9:	mov    rax,QWORD PTR [rip+0x55740]        # 0x1400681f0
   140012ab0:	xor    rax,rsp
   140012ab3:	mov    QWORD PTR [rbp-0x8],rax
   140012ab7:	mov    edi,r9d
   140012aba:	mov    rbx,r8
   140012abd:	mov    rsi,rdx
   140012ac0:	mov    r12,rcx
   140012ac3:	mov    QWORD PTR [rbp-0x40],0xf
   140012acb:	and    QWORD PTR [rbp-0x48],0x0
   140012ad0:	mov    BYTE PTR [rbp-0x58],0x0
   140012ad4:	lea    rcx,[rip+0x3e35d]        # 0x140050e38
   140012adb:	call   QWORD PTR [rip+0x36b27]        # 0x140049608
   140012ae1:	mov    r8,rax
   140012ae4:	lea    rdx,[rip+0x3e34d]        # 0x140050e38
   140012aeb:	lea    rcx,[rbp-0x58]
   140012aef:	call   0x140005154
   140012af4:	nop
   140012af5:	mov    r8d,edi
   140012af8:	mov    rdx,rbx
   140012afb:	lea    rcx,[rbp-0x30]
   140012aff:	call   0x14001231c
   140012b04:	nop
   140012b05:	mov    r10,QWORD PTR [r12]
   140012b09:	mov    r9,rax
   140012b0c:	mov    r8,rsi
   140012b0f:	lea    rdx,[rbp-0x58]
   140012b13:	mov    rcx,r12
   140012b16:	call   QWORD PTR [r10+0xa8]
   140012b1d:	nop
   140012b1e:	cmp    QWORD PTR [rbp-0x18],0x10
   140012b23:	jb     0x140012b2f
   140012b25:	mov    rcx,QWORD PTR [rbp-0x30]
   140012b29:	call   QWORD PTR [rip+0x36b49]        # 0x140049678
   140012b2f:	mov    QWORD PTR [rbp-0x18],0xf
   140012b37:	and    QWORD PTR [rbp-0x20],0x0
   140012b3c:	mov    BYTE PTR [rbp-0x30],0x0
   140012b40:	cmp    QWORD PTR [rbp-0x40],0x10
   140012b45:	jb     0x140012b51
   140012b47:	mov    rcx,QWORD PTR [rbp-0x58]
   140012b4b:	call   QWORD PTR [rip+0x36b27]        # 0x140049678
   140012b51:	mov    rcx,QWORD PTR [rbp-0x8]
   140012b55:	xor    rcx,rsp
   140012b58:	call   0x14002b100
   140012b5d:	add    rsp,0x80
   140012b64:	pop    r12
   140012b66:	pop    rdi
   140012b67:	pop    rsi
   140012b68:	pop    rbx
   140012b69:	pop    rbp
   140012b6a:	ret    
   140012b6b:	int3   
   140012b6c:	rex push rbp
   140012b6e:	push   rbx
   140012b6f:	push   rsi
   140012b70:	push   rdi
   140012b71:	push   r12
   140012b73:	mov    rbp,rsp
   140012b76:	sub    rsp,0x80
   140012b7d:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012b85:	mov    rax,QWORD PTR [rip+0x55664]        # 0x1400681f0
   140012b8c:	xor    rax,rsp
   140012b8f:	mov    QWORD PTR [rbp-0x8],rax
   140012b93:	mov    edi,r9d
   140012b96:	mov    rbx,r8
   140012b99:	mov    rsi,rdx
   140012b9c:	mov    r12,rcx
   140012b9f:	mov    QWORD PTR [rbp-0x40],0xf
   140012ba7:	and    QWORD PTR [rbp-0x48],0x0
   140012bac:	mov    BYTE PTR [rbp-0x58],0x0
   140012bb0:	lea    rcx,[rip+0x3e289]        # 0x140050e40
   140012bb7:	call   QWORD PTR [rip+0x36a4b]        # 0x140049608
   140012bbd:	mov    r8,rax
   140012bc0:	lea    rdx,[rip+0x3e279]        # 0x140050e40
   140012bc7:	lea    rcx,[rbp-0x58]
   140012bcb:	call   0x140005154
   140012bd0:	nop
   140012bd1:	mov    r8d,edi
   140012bd4:	mov    rdx,rbx
   140012bd7:	lea    rcx,[rbp-0x30]
   140012bdb:	call   0x14001231c
   140012be0:	nop
   140012be1:	mov    r10,QWORD PTR [r12]
   140012be5:	mov    r9,rax
   140012be8:	mov    r8,rsi
   140012beb:	lea    rdx,[rbp-0x58]
   140012bef:	mov    rcx,r12
   140012bf2:	call   QWORD PTR [r10+0xa8]
   140012bf9:	nop
   140012bfa:	cmp    QWORD PTR [rbp-0x18],0x10
   140012bff:	jb     0x140012c0b
   140012c01:	mov    rcx,QWORD PTR [rbp-0x30]
   140012c05:	call   QWORD PTR [rip+0x36a6d]        # 0x140049678
   140012c0b:	mov    QWORD PTR [rbp-0x18],0xf
   140012c13:	and    QWORD PTR [rbp-0x20],0x0
   140012c18:	mov    BYTE PTR [rbp-0x30],0x0
   140012c1c:	cmp    QWORD PTR [rbp-0x40],0x10
   140012c21:	jb     0x140012c2d
   140012c23:	mov    rcx,QWORD PTR [rbp-0x58]
   140012c27:	call   QWORD PTR [rip+0x36a4b]        # 0x140049678
   140012c2d:	mov    rcx,QWORD PTR [rbp-0x8]
   140012c31:	xor    rcx,rsp
   140012c34:	call   0x14002b100
   140012c39:	add    rsp,0x80
   140012c40:	pop    r12
   140012c42:	pop    rdi
   140012c43:	pop    rsi
   140012c44:	pop    rbx
   140012c45:	pop    rbp
   140012c46:	ret    
   140012c47:	int3   
   140012c48:	rex push rbp
   140012c4a:	push   rbx
   140012c4b:	push   rsi
   140012c4c:	push   rdi
   140012c4d:	push   r12
   140012c4f:	mov    rbp,rsp
   140012c52:	sub    rsp,0x80
   140012c59:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012c61:	mov    rax,QWORD PTR [rip+0x55588]        # 0x1400681f0
   140012c68:	xor    rax,rsp
   140012c6b:	mov    QWORD PTR [rbp-0x8],rax
   140012c6f:	mov    edi,r9d
   140012c72:	mov    rbx,r8
   140012c75:	mov    rsi,rdx
   140012c78:	mov    r12,rcx
   140012c7b:	mov    QWORD PTR [rbp-0x40],0xf
   140012c83:	and    QWORD PTR [rbp-0x48],0x0
   140012c88:	mov    BYTE PTR [rbp-0x58],0x0
   140012c8c:	lea    rcx,[rip+0x3e1b5]        # 0x140050e48
   140012c93:	call   QWORD PTR [rip+0x3696f]        # 0x140049608
   140012c99:	mov    r8,rax
   140012c9c:	lea    rdx,[rip+0x3e1a5]        # 0x140050e48
   140012ca3:	lea    rcx,[rbp-0x58]
   140012ca7:	call   0x140005154
   140012cac:	nop
   140012cad:	mov    r8d,edi
   140012cb0:	mov    rdx,rbx
   140012cb3:	lea    rcx,[rbp-0x30]
   140012cb7:	call   0x14001231c
   140012cbc:	nop
   140012cbd:	mov    r10,QWORD PTR [r12]
   140012cc1:	mov    r9,rax
   140012cc4:	mov    r8,rsi
   140012cc7:	lea    rdx,[rbp-0x58]
   140012ccb:	mov    rcx,r12
   140012cce:	call   QWORD PTR [r10+0xa8]
   140012cd5:	nop
   140012cd6:	cmp    QWORD PTR [rbp-0x18],0x10
   140012cdb:	jb     0x140012ce7
   140012cdd:	mov    rcx,QWORD PTR [rbp-0x30]
   140012ce1:	call   QWORD PTR [rip+0x36991]        # 0x140049678
   140012ce7:	mov    QWORD PTR [rbp-0x18],0xf
   140012cef:	and    QWORD PTR [rbp-0x20],0x0
   140012cf4:	mov    BYTE PTR [rbp-0x30],0x0
   140012cf8:	cmp    QWORD PTR [rbp-0x40],0x10
   140012cfd:	jb     0x140012d09
   140012cff:	mov    rcx,QWORD PTR [rbp-0x58]
   140012d03:	call   QWORD PTR [rip+0x3696f]        # 0x140049678
   140012d09:	mov    rcx,QWORD PTR [rbp-0x8]
   140012d0d:	xor    rcx,rsp
   140012d10:	call   0x14002b100
   140012d15:	add    rsp,0x80
   140012d1c:	pop    r12
   140012d1e:	pop    rdi
   140012d1f:	pop    rsi
   140012d20:	pop    rbx
   140012d21:	pop    rbp
   140012d22:	ret    
   140012d23:	int3   
   140012d24:	rex push rbp
   140012d26:	push   rbx
   140012d27:	push   rsi
   140012d28:	push   rdi
   140012d29:	push   r12
   140012d2b:	mov    rbp,rsp
   140012d2e:	sub    rsp,0x80
   140012d35:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012d3d:	mov    rax,QWORD PTR [rip+0x554ac]        # 0x1400681f0
   140012d44:	xor    rax,rsp
   140012d47:	mov    QWORD PTR [rbp-0x8],rax
   140012d4b:	mov    edi,r9d
   140012d4e:	mov    rbx,r8
   140012d51:	mov    rsi,rdx
   140012d54:	mov    r12,rcx
   140012d57:	mov    QWORD PTR [rbp-0x40],0xf
   140012d5f:	and    QWORD PTR [rbp-0x48],0x0
   140012d64:	mov    BYTE PTR [rbp-0x58],0x0
   140012d68:	lea    rcx,[rip+0x3e0e1]        # 0x140050e50
   140012d6f:	call   QWORD PTR [rip+0x36893]        # 0x140049608
   140012d75:	mov    r8,rax
   140012d78:	lea    rdx,[rip+0x3e0d1]        # 0x140050e50
   140012d7f:	lea    rcx,[rbp-0x58]
   140012d83:	call   0x140005154
   140012d88:	nop
   140012d89:	mov    r8d,edi
   140012d8c:	mov    rdx,rbx
   140012d8f:	lea    rcx,[rbp-0x30]
   140012d93:	call   0x14001231c
   140012d98:	nop
   140012d99:	mov    r10,QWORD PTR [r12]
   140012d9d:	mov    r9,rax
   140012da0:	mov    r8,rsi
   140012da3:	lea    rdx,[rbp-0x58]
   140012da7:	mov    rcx,r12
   140012daa:	call   QWORD PTR [r10+0xa8]
   140012db1:	nop
   140012db2:	cmp    QWORD PTR [rbp-0x18],0x10
   140012db7:	jb     0x140012dc3
   140012db9:	mov    rcx,QWORD PTR [rbp-0x30]
   140012dbd:	call   QWORD PTR [rip+0x368b5]        # 0x140049678
   140012dc3:	mov    QWORD PTR [rbp-0x18],0xf
   140012dcb:	and    QWORD PTR [rbp-0x20],0x0
   140012dd0:	mov    BYTE PTR [rbp-0x30],0x0
   140012dd4:	cmp    QWORD PTR [rbp-0x40],0x10
   140012dd9:	jb     0x140012de5
   140012ddb:	mov    rcx,QWORD PTR [rbp-0x58]
   140012ddf:	call   QWORD PTR [rip+0x36893]        # 0x140049678
   140012de5:	mov    rcx,QWORD PTR [rbp-0x8]
   140012de9:	xor    rcx,rsp
   140012dec:	call   0x14002b100
   140012df1:	add    rsp,0x80
   140012df8:	pop    r12
   140012dfa:	pop    rdi
   140012dfb:	pop    rsi
   140012dfc:	pop    rbx
   140012dfd:	pop    rbp
   140012dfe:	ret    
   140012dff:	int3   
   140012e00:	rex push rbp
   140012e02:	push   rbx
   140012e03:	push   rsi
   140012e04:	push   rdi
   140012e05:	push   r12
   140012e07:	mov    rbp,rsp
   140012e0a:	sub    rsp,0x80
   140012e11:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012e19:	mov    rax,QWORD PTR [rip+0x553d0]        # 0x1400681f0
   140012e20:	xor    rax,rsp
   140012e23:	mov    QWORD PTR [rbp-0x8],rax
   140012e27:	mov    edi,r9d
   140012e2a:	mov    rbx,r8
   140012e2d:	mov    rsi,rdx
   140012e30:	mov    r12,rcx
   140012e33:	mov    QWORD PTR [rbp-0x40],0xf
   140012e3b:	and    QWORD PTR [rbp-0x48],0x0
   140012e40:	mov    BYTE PTR [rbp-0x58],0x0
   140012e44:	lea    rcx,[rip+0x3e00d]        # 0x140050e58
   140012e4b:	call   QWORD PTR [rip+0x367b7]        # 0x140049608
   140012e51:	mov    r8,rax
   140012e54:	lea    rdx,[rip+0x3dffd]        # 0x140050e58
   140012e5b:	lea    rcx,[rbp-0x58]
   140012e5f:	call   0x140005154
   140012e64:	nop
   140012e65:	mov    r8d,edi
   140012e68:	mov    rdx,rbx
   140012e6b:	lea    rcx,[rbp-0x30]
   140012e6f:	call   0x14001231c
   140012e74:	nop
   140012e75:	mov    r10,QWORD PTR [r12]
   140012e79:	mov    r9,rax
   140012e7c:	mov    r8,rsi
   140012e7f:	lea    rdx,[rbp-0x58]
   140012e83:	mov    rcx,r12
   140012e86:	call   QWORD PTR [r10+0xa8]
   140012e8d:	nop
   140012e8e:	cmp    QWORD PTR [rbp-0x18],0x10
   140012e93:	jb     0x140012e9f
   140012e95:	mov    rcx,QWORD PTR [rbp-0x30]
   140012e99:	call   QWORD PTR [rip+0x367d9]        # 0x140049678
   140012e9f:	mov    QWORD PTR [rbp-0x18],0xf
   140012ea7:	and    QWORD PTR [rbp-0x20],0x0
   140012eac:	mov    BYTE PTR [rbp-0x30],0x0
   140012eb0:	cmp    QWORD PTR [rbp-0x40],0x10
   140012eb5:	jb     0x140012ec1
   140012eb7:	mov    rcx,QWORD PTR [rbp-0x58]
   140012ebb:	call   QWORD PTR [rip+0x367b7]        # 0x140049678
   140012ec1:	mov    rcx,QWORD PTR [rbp-0x8]
   140012ec5:	xor    rcx,rsp
   140012ec8:	call   0x14002b100
   140012ecd:	add    rsp,0x80
   140012ed4:	pop    r12
   140012ed6:	pop    rdi
   140012ed7:	pop    rsi
   140012ed8:	pop    rbx
   140012ed9:	pop    rbp
   140012eda:	ret    
   140012edb:	int3   
   140012edc:	mov    rax,rsp
   140012edf:	push   rbp
   140012ee0:	push   rsi
   140012ee1:	push   rdi
   140012ee2:	mov    rbp,rsp
   140012ee5:	sub    rsp,0x80
   140012eec:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012ef4:	mov    QWORD PTR [rax+0x20],rbx
   140012ef8:	mov    rax,QWORD PTR [rip+0x552f1]        # 0x1400681f0
   140012eff:	xor    rax,rsp
   140012f02:	mov    QWORD PTR [rbp-0x8],rax
   140012f06:	mov    rdi,r8
   140012f09:	mov    rbx,rdx
   140012f0c:	mov    rsi,rcx
   140012f0f:	mov    QWORD PTR [rbp-0x40],0xf
   140012f17:	and    QWORD PTR [rbp-0x48],0x0
   140012f1c:	mov    BYTE PTR [rbp-0x58],0x0
   140012f20:	lea    rcx,[rip+0x3df11]        # 0x140050e38
   140012f27:	call   QWORD PTR [rip+0x366db]        # 0x140049608
   140012f2d:	mov    r8,rax
   140012f30:	lea    rdx,[rip+0x3df01]        # 0x140050e38
   140012f37:	lea    rcx,[rbp-0x58]
   140012f3b:	call   0x140005154
   140012f40:	nop
   140012f41:	mov    rdx,rbx
   140012f44:	lea    rcx,[rbp-0x30]
   140012f48:	call   0x140009474
   140012f4d:	nop
   140012f4e:	mov    r10,QWORD PTR [rsi]
   140012f51:	mov    r9,rdi
   140012f54:	mov    r8,rax
   140012f57:	lea    rdx,[rbp-0x58]
   140012f5b:	mov    rcx,rsi
   140012f5e:	call   QWORD PTR [r10+0xa8]
   140012f65:	nop
   140012f66:	cmp    QWORD PTR [rbp-0x18],0x10
   140012f6b:	jb     0x140012f77
   140012f6d:	mov    rcx,QWORD PTR [rbp-0x30]
   140012f71:	call   QWORD PTR [rip+0x36701]        # 0x140049678
   140012f77:	mov    QWORD PTR [rbp-0x18],0xf
   140012f7f:	and    QWORD PTR [rbp-0x20],0x0
   140012f84:	mov    BYTE PTR [rbp-0x30],0x0
   140012f88:	cmp    QWORD PTR [rbp-0x40],0x10
   140012f8d:	jb     0x140012f99
   140012f8f:	mov    rcx,QWORD PTR [rbp-0x58]
   140012f93:	call   QWORD PTR [rip+0x366df]        # 0x140049678
   140012f99:	mov    rcx,QWORD PTR [rbp-0x8]
   140012f9d:	xor    rcx,rsp
   140012fa0:	call   0x14002b100
   140012fa5:	mov    rbx,QWORD PTR [rsp+0xb8]
   140012fad:	add    rsp,0x80
   140012fb4:	pop    rdi
   140012fb5:	pop    rsi
   140012fb6:	pop    rbp
   140012fb7:	ret    
   140012fb8:	mov    rax,rsp
   140012fbb:	push   rbp
   140012fbc:	push   rsi
   140012fbd:	push   rdi
   140012fbe:	mov    rbp,rsp
   140012fc1:	sub    rsp,0x80
   140012fc8:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140012fd0:	mov    QWORD PTR [rax+0x20],rbx
   140012fd4:	mov    rax,QWORD PTR [rip+0x55215]        # 0x1400681f0
   140012fdb:	xor    rax,rsp
   140012fde:	mov    QWORD PTR [rbp-0x8],rax
   140012fe2:	mov    rdi,r8
   140012fe5:	mov    rbx,rdx
   140012fe8:	mov    rsi,rcx
   140012feb:	mov    QWORD PTR [rbp-0x40],0xf
   140012ff3:	and    QWORD PTR [rbp-0x48],0x0
   140012ff8:	mov    BYTE PTR [rbp-0x58],0x0
   140012ffc:	lea    rcx,[rip+0x3de3d]        # 0x140050e40
   140013003:	call   QWORD PTR [rip+0x365ff]        # 0x140049608
   140013009:	mov    r8,rax
   14001300c:	lea    rdx,[rip+0x3de2d]        # 0x140050e40
   140013013:	lea    rcx,[rbp-0x58]
   140013017:	call   0x140005154
   14001301c:	nop
   14001301d:	mov    rdx,rbx
   140013020:	lea    rcx,[rbp-0x30]
   140013024:	call   0x140009474
   140013029:	nop
   14001302a:	mov    r10,QWORD PTR [rsi]
   14001302d:	mov    r9,rdi
   140013030:	mov    r8,rax
   140013033:	lea    rdx,[rbp-0x58]
   140013037:	mov    rcx,rsi
   14001303a:	call   QWORD PTR [r10+0xa8]
   140013041:	nop
   140013042:	cmp    QWORD PTR [rbp-0x18],0x10
   140013047:	jb     0x140013053
   140013049:	mov    rcx,QWORD PTR [rbp-0x30]
   14001304d:	call   QWORD PTR [rip+0x36625]        # 0x140049678
   140013053:	mov    QWORD PTR [rbp-0x18],0xf
   14001305b:	and    QWORD PTR [rbp-0x20],0x0
   140013060:	mov    BYTE PTR [rbp-0x30],0x0
   140013064:	cmp    QWORD PTR [rbp-0x40],0x10
   140013069:	jb     0x140013075
   14001306b:	mov    rcx,QWORD PTR [rbp-0x58]
   14001306f:	call   QWORD PTR [rip+0x36603]        # 0x140049678
   140013075:	mov    rcx,QWORD PTR [rbp-0x8]
   140013079:	xor    rcx,rsp
   14001307c:	call   0x14002b100
   140013081:	mov    rbx,QWORD PTR [rsp+0xb8]
   140013089:	add    rsp,0x80
   140013090:	pop    rdi
   140013091:	pop    rsi
   140013092:	pop    rbp
   140013093:	ret    
   140013094:	mov    rax,rsp
   140013097:	push   rbp
   140013098:	push   rsi
   140013099:	push   rdi
   14001309a:	mov    rbp,rsp
   14001309d:	sub    rsp,0x80
   1400130a4:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   1400130ac:	mov    QWORD PTR [rax+0x20],rbx
   1400130b0:	mov    rax,QWORD PTR [rip+0x55139]        # 0x1400681f0
   1400130b7:	xor    rax,rsp
   1400130ba:	mov    QWORD PTR [rbp-0x8],rax
   1400130be:	mov    rdi,r8
   1400130c1:	mov    rbx,rdx
   1400130c4:	mov    rsi,rcx
   1400130c7:	mov    QWORD PTR [rbp-0x40],0xf
   1400130cf:	and    QWORD PTR [rbp-0x48],0x0
   1400130d4:	mov    BYTE PTR [rbp-0x58],0x0
   1400130d8:	lea    rcx,[rip+0x3dd69]        # 0x140050e48
   1400130df:	call   QWORD PTR [rip+0x36523]        # 0x140049608
   1400130e5:	mov    r8,rax
   1400130e8:	lea    rdx,[rip+0x3dd59]        # 0x140050e48
   1400130ef:	lea    rcx,[rbp-0x58]
   1400130f3:	call   0x140005154
   1400130f8:	nop
   1400130f9:	mov    rdx,rbx
   1400130fc:	lea    rcx,[rbp-0x30]
   140013100:	call   0x140009474
   140013105:	nop
   140013106:	mov    r10,QWORD PTR [rsi]
   140013109:	mov    r9,rdi
   14001310c:	mov    r8,rax
   14001310f:	lea    rdx,[rbp-0x58]
   140013113:	mov    rcx,rsi
   140013116:	call   QWORD PTR [r10+0xa8]
   14001311d:	nop
   14001311e:	cmp    QWORD PTR [rbp-0x18],0x10
   140013123:	jb     0x14001312f
   140013125:	mov    rcx,QWORD PTR [rbp-0x30]
   140013129:	call   QWORD PTR [rip+0x36549]        # 0x140049678
   14001312f:	mov    QWORD PTR [rbp-0x18],0xf
   140013137:	and    QWORD PTR [rbp-0x20],0x0
   14001313c:	mov    BYTE PTR [rbp-0x30],0x0
   140013140:	cmp    QWORD PTR [rbp-0x40],0x10
   140013145:	jb     0x140013151
   140013147:	mov    rcx,QWORD PTR [rbp-0x58]
   14001314b:	call   QWORD PTR [rip+0x36527]        # 0x140049678
   140013151:	mov    rcx,QWORD PTR [rbp-0x8]
   140013155:	xor    rcx,rsp
   140013158:	call   0x14002b100
   14001315d:	mov    rbx,QWORD PTR [rsp+0xb8]
   140013165:	add    rsp,0x80
   14001316c:	pop    rdi
   14001316d:	pop    rsi
   14001316e:	pop    rbp
   14001316f:	ret    
   140013170:	mov    rax,rsp
   140013173:	push   rbp
   140013174:	push   rsi
   140013175:	push   rdi
   140013176:	mov    rbp,rsp
   140013179:	sub    rsp,0x80
   140013180:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140013188:	mov    QWORD PTR [rax+0x20],rbx
   14001318c:	mov    rax,QWORD PTR [rip+0x5505d]        # 0x1400681f0
   140013193:	xor    rax,rsp
   140013196:	mov    QWORD PTR [rbp-0x8],rax
   14001319a:	mov    rdi,r8
   14001319d:	mov    rbx,rdx
   1400131a0:	mov    rsi,rcx
   1400131a3:	mov    QWORD PTR [rbp-0x40],0xf
   1400131ab:	and    QWORD PTR [rbp-0x48],0x0
   1400131b0:	mov    BYTE PTR [rbp-0x58],0x0
   1400131b4:	lea    rcx,[rip+0x3dc95]        # 0x140050e50
   1400131bb:	call   QWORD PTR [rip+0x36447]        # 0x140049608
   1400131c1:	mov    r8,rax
   1400131c4:	lea    rdx,[rip+0x3dc85]        # 0x140050e50
   1400131cb:	lea    rcx,[rbp-0x58]
   1400131cf:	call   0x140005154
   1400131d4:	nop
   1400131d5:	mov    rdx,rbx
   1400131d8:	lea    rcx,[rbp-0x30]
   1400131dc:	call   0x140009474
   1400131e1:	nop
   1400131e2:	mov    r10,QWORD PTR [rsi]
   1400131e5:	mov    r9,rdi
   1400131e8:	mov    r8,rax
   1400131eb:	lea    rdx,[rbp-0x58]
   1400131ef:	mov    rcx,rsi
   1400131f2:	call   QWORD PTR [r10+0xa8]
   1400131f9:	nop
   1400131fa:	cmp    QWORD PTR [rbp-0x18],0x10
   1400131ff:	jb     0x14001320b
   140013201:	mov    rcx,QWORD PTR [rbp-0x30]
   140013205:	call   QWORD PTR [rip+0x3646d]        # 0x140049678
   14001320b:	mov    QWORD PTR [rbp-0x18],0xf
   140013213:	and    QWORD PTR [rbp-0x20],0x0
   140013218:	mov    BYTE PTR [rbp-0x30],0x0
   14001321c:	cmp    QWORD PTR [rbp-0x40],0x10
   140013221:	jb     0x14001322d
   140013223:	mov    rcx,QWORD PTR [rbp-0x58]
   140013227:	call   QWORD PTR [rip+0x3644b]        # 0x140049678
   14001322d:	mov    rcx,QWORD PTR [rbp-0x8]
   140013231:	xor    rcx,rsp
   140013234:	call   0x14002b100
   140013239:	mov    rbx,QWORD PTR [rsp+0xb8]
   140013241:	add    rsp,0x80
   140013248:	pop    rdi
   140013249:	pop    rsi
   14001324a:	pop    rbp
   14001324b:	ret    
   14001324c:	mov    rax,rsp
   14001324f:	push   rbp
   140013250:	push   rsi
   140013251:	push   rdi
   140013252:	mov    rbp,rsp
   140013255:	sub    rsp,0x80
   14001325c:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140013264:	mov    QWORD PTR [rax+0x20],rbx
   140013268:	mov    rax,QWORD PTR [rip+0x54f81]        # 0x1400681f0
   14001326f:	xor    rax,rsp
   140013272:	mov    QWORD PTR [rbp-0x8],rax
   140013276:	mov    rdi,r8
   140013279:	mov    rbx,rdx
   14001327c:	mov    rsi,rcx
   14001327f:	mov    QWORD PTR [rbp-0x40],0xf
   140013287:	and    QWORD PTR [rbp-0x48],0x0
   14001328c:	mov    BYTE PTR [rbp-0x58],0x0
   140013290:	lea    rcx,[rip+0x3dbc1]        # 0x140050e58
   140013297:	call   QWORD PTR [rip+0x3636b]        # 0x140049608
   14001329d:	mov    r8,rax
   1400132a0:	lea    rdx,[rip+0x3dbb1]        # 0x140050e58
   1400132a7:	lea    rcx,[rbp-0x58]
   1400132ab:	call   0x140005154
   1400132b0:	nop
   1400132b1:	mov    rdx,rbx
   1400132b4:	lea    rcx,[rbp-0x30]
   1400132b8:	call   0x140009474
   1400132bd:	nop
   1400132be:	mov    r10,QWORD PTR [rsi]
   1400132c1:	mov    r9,rdi
   1400132c4:	mov    r8,rax
   1400132c7:	lea    rdx,[rbp-0x58]
   1400132cb:	mov    rcx,rsi
   1400132ce:	call   QWORD PTR [r10+0xa8]
   1400132d5:	nop
   1400132d6:	cmp    QWORD PTR [rbp-0x18],0x10
   1400132db:	jb     0x1400132e7
   1400132dd:	mov    rcx,QWORD PTR [rbp-0x30]
   1400132e1:	call   QWORD PTR [rip+0x36391]        # 0x140049678
   1400132e7:	mov    QWORD PTR [rbp-0x18],0xf
   1400132ef:	and    QWORD PTR [rbp-0x20],0x0
   1400132f4:	mov    BYTE PTR [rbp-0x30],0x0
   1400132f8:	cmp    QWORD PTR [rbp-0x40],0x10
   1400132fd:	jb     0x140013309
   1400132ff:	mov    rcx,QWORD PTR [rbp-0x58]
   140013303:	call   QWORD PTR [rip+0x3636f]        # 0x140049678
   140013309:	mov    rcx,QWORD PTR [rbp-0x8]
   14001330d:	xor    rcx,rsp
   140013310:	call   0x14002b100
   140013315:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001331d:	add    rsp,0x80
   140013324:	pop    rdi
   140013325:	pop    rsi
   140013326:	pop    rbp
   140013327:	ret    
   140013328:	rex push rbp
   14001332a:	push   rbx
   14001332b:	push   rsi
   14001332c:	push   rdi
   14001332d:	push   r12
   14001332f:	push   r14
   140013331:	lea    rbp,[rsp-0x2f]
   140013336:	sub    rsp,0xb8
   14001333d:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   140013345:	mov    rax,QWORD PTR [rip+0x54ea4]        # 0x1400681f0
   14001334c:	xor    rax,rsp
   14001334f:	mov    QWORD PTR [rbp+0x17],rax
   140013353:	mov    edi,r9d
   140013356:	mov    rbx,r8
   140013359:	mov    rsi,rdx
   14001335c:	mov    r12,rcx
   14001335f:	mov    r14d,0xf
   140013365:	mov    QWORD PTR [rbp-0x49],r14
   140013369:	and    QWORD PTR [rbp-0x51],0x0
   14001336e:	mov    BYTE PTR [rbp-0x61],0x0
   140013372:	lea    rcx,[rip+0x3dabf]        # 0x140050e38
   140013379:	call   QWORD PTR [rip+0x36289]        # 0x140049608
   14001337f:	mov    r8,rax
   140013382:	lea    rdx,[rip+0x3daaf]        # 0x140050e38
   140013389:	lea    rcx,[rbp-0x61]
   14001338d:	call   0x140005154
   140013392:	nop
   140013393:	mov    r8d,edi
   140013396:	mov    rdx,rbx
   140013399:	lea    rcx,[rbp-0x11]
   14001339d:	call   0x14001231c
   1400133a2:	mov    rbx,rax
   1400133a5:	mov    rdx,rsi
   1400133a8:	lea    rcx,[rbp-0x39]
   1400133ac:	call   0x140009474
   1400133b1:	nop
   1400133b2:	mov    r10,QWORD PTR [r12]
   1400133b6:	mov    r9,rbx
   1400133b9:	mov    r8,rax
   1400133bc:	lea    rdx,[rbp-0x61]
   1400133c0:	mov    rcx,r12
   1400133c3:	call   QWORD PTR [r10+0xa8]
   1400133ca:	nop
   1400133cb:	cmp    QWORD PTR [rbp-0x21],0x10
   1400133d0:	jb     0x1400133dc
   1400133d2:	mov    rcx,QWORD PTR [rbp-0x39]
   1400133d6:	call   QWORD PTR [rip+0x3629c]        # 0x140049678
   1400133dc:	mov    QWORD PTR [rbp-0x21],r14
   1400133e0:	and    QWORD PTR [rbp-0x29],0x0
   1400133e5:	mov    BYTE PTR [rbp-0x39],0x0
   1400133e9:	cmp    QWORD PTR [rbp+0x7],0x10
   1400133ee:	jb     0x1400133fa
   1400133f0:	mov    rcx,QWORD PTR [rbp-0x11]
   1400133f4:	call   QWORD PTR [rip+0x3627e]        # 0x140049678
   1400133fa:	mov    QWORD PTR [rbp+0x7],r14
   1400133fe:	and    QWORD PTR [rbp-0x1],0x0
   140013403:	mov    BYTE PTR [rbp-0x11],0x0
   140013407:	cmp    QWORD PTR [rbp-0x49],0x10
   14001340c:	jb     0x140013418
   14001340e:	mov    rcx,QWORD PTR [rbp-0x61]
   140013412:	call   QWORD PTR [rip+0x36260]        # 0x140049678
   140013418:	mov    rcx,QWORD PTR [rbp+0x17]
   14001341c:	xor    rcx,rsp
   14001341f:	call   0x14002b100
   140013424:	add    rsp,0xb8
   14001342b:	pop    r14
   14001342d:	pop    r12
   14001342f:	pop    rdi
   140013430:	pop    rsi
   140013431:	pop    rbx
   140013432:	pop    rbp
   140013433:	ret    
   140013434:	rex push rbp
   140013436:	push   rbx
   140013437:	push   rsi
   140013438:	push   rdi
   140013439:	push   r12
   14001343b:	push   r14
   14001343d:	lea    rbp,[rsp-0x2f]
   140013442:	sub    rsp,0xb8
   140013449:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   140013451:	mov    rax,QWORD PTR [rip+0x54d98]        # 0x1400681f0
   140013458:	xor    rax,rsp
   14001345b:	mov    QWORD PTR [rbp+0x17],rax
   14001345f:	mov    edi,r9d
   140013462:	mov    rbx,r8
   140013465:	mov    rsi,rdx
   140013468:	mov    r12,rcx
   14001346b:	mov    r14d,0xf
   140013471:	mov    QWORD PTR [rbp-0x49],r14
   140013475:	and    QWORD PTR [rbp-0x51],0x0
   14001347a:	mov    BYTE PTR [rbp-0x61],0x0
   14001347e:	lea    rcx,[rip+0x3d9bb]        # 0x140050e40
   140013485:	call   QWORD PTR [rip+0x3617d]        # 0x140049608
   14001348b:	mov    r8,rax
   14001348e:	lea    rdx,[rip+0x3d9ab]        # 0x140050e40
   140013495:	lea    rcx,[rbp-0x61]
   140013499:	call   0x140005154
   14001349e:	nop
   14001349f:	mov    r8d,edi
   1400134a2:	mov    rdx,rbx
   1400134a5:	lea    rcx,[rbp-0x11]
   1400134a9:	call   0x14001231c
   1400134ae:	mov    rbx,rax
   1400134b1:	mov    rdx,rsi
   1400134b4:	lea    rcx,[rbp-0x39]
   1400134b8:	call   0x140009474
   1400134bd:	nop
   1400134be:	mov    r10,QWORD PTR [r12]
   1400134c2:	mov    r9,rbx
   1400134c5:	mov    r8,rax
   1400134c8:	lea    rdx,[rbp-0x61]
   1400134cc:	mov    rcx,r12
   1400134cf:	call   QWORD PTR [r10+0xa8]
   1400134d6:	nop
   1400134d7:	cmp    QWORD PTR [rbp-0x21],0x10
   1400134dc:	jb     0x1400134e8
   1400134de:	mov    rcx,QWORD PTR [rbp-0x39]
   1400134e2:	call   QWORD PTR [rip+0x36190]        # 0x140049678
   1400134e8:	mov    QWORD PTR [rbp-0x21],r14
   1400134ec:	and    QWORD PTR [rbp-0x29],0x0
   1400134f1:	mov    BYTE PTR [rbp-0x39],0x0
   1400134f5:	cmp    QWORD PTR [rbp+0x7],0x10
   1400134fa:	jb     0x140013506
   1400134fc:	mov    rcx,QWORD PTR [rbp-0x11]
   140013500:	call   QWORD PTR [rip+0x36172]        # 0x140049678
   140013506:	mov    QWORD PTR [rbp+0x7],r14
   14001350a:	and    QWORD PTR [rbp-0x1],0x0
   14001350f:	mov    BYTE PTR [rbp-0x11],0x0
   140013513:	cmp    QWORD PTR [rbp-0x49],0x10
   140013518:	jb     0x140013524
   14001351a:	mov    rcx,QWORD PTR [rbp-0x61]
   14001351e:	call   QWORD PTR [rip+0x36154]        # 0x140049678
   140013524:	mov    rcx,QWORD PTR [rbp+0x17]
   140013528:	xor    rcx,rsp
   14001352b:	call   0x14002b100
   140013530:	add    rsp,0xb8
   140013537:	pop    r14
   140013539:	pop    r12
   14001353b:	pop    rdi
   14001353c:	pop    rsi
   14001353d:	pop    rbx
   14001353e:	pop    rbp
   14001353f:	ret    
   140013540:	rex push rbp
   140013542:	push   rbx
   140013543:	push   rsi
   140013544:	push   rdi
   140013545:	push   r12
   140013547:	push   r14
   140013549:	lea    rbp,[rsp-0x2f]
   14001354e:	sub    rsp,0xb8
   140013555:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001355d:	mov    rax,QWORD PTR [rip+0x54c8c]        # 0x1400681f0
   140013564:	xor    rax,rsp
   140013567:	mov    QWORD PTR [rbp+0x17],rax
   14001356b:	mov    edi,r9d
   14001356e:	mov    rbx,r8
   140013571:	mov    rsi,rdx
   140013574:	mov    r12,rcx
   140013577:	mov    r14d,0xf
   14001357d:	mov    QWORD PTR [rbp-0x49],r14
   140013581:	and    QWORD PTR [rbp-0x51],0x0
   140013586:	mov    BYTE PTR [rbp-0x61],0x0
   14001358a:	lea    rcx,[rip+0x3d8b7]        # 0x140050e48
   140013591:	call   QWORD PTR [rip+0x36071]        # 0x140049608
   140013597:	mov    r8,rax
   14001359a:	lea    rdx,[rip+0x3d8a7]        # 0x140050e48
   1400135a1:	lea    rcx,[rbp-0x61]
   1400135a5:	call   0x140005154
   1400135aa:	nop
   1400135ab:	mov    r8d,edi
   1400135ae:	mov    rdx,rbx
   1400135b1:	lea    rcx,[rbp-0x11]
   1400135b5:	call   0x14001231c
   1400135ba:	mov    rbx,rax
   1400135bd:	mov    rdx,rsi
   1400135c0:	lea    rcx,[rbp-0x39]
   1400135c4:	call   0x140009474
   1400135c9:	nop
   1400135ca:	mov    r10,QWORD PTR [r12]
   1400135ce:	mov    r9,rbx
   1400135d1:	mov    r8,rax
   1400135d4:	lea    rdx,[rbp-0x61]
   1400135d8:	mov    rcx,r12
   1400135db:	call   QWORD PTR [r10+0xa8]
   1400135e2:	nop
   1400135e3:	cmp    QWORD PTR [rbp-0x21],0x10
   1400135e8:	jb     0x1400135f4
   1400135ea:	mov    rcx,QWORD PTR [rbp-0x39]
   1400135ee:	call   QWORD PTR [rip+0x36084]        # 0x140049678
   1400135f4:	mov    QWORD PTR [rbp-0x21],r14
   1400135f8:	and    QWORD PTR [rbp-0x29],0x0
   1400135fd:	mov    BYTE PTR [rbp-0x39],0x0
   140013601:	cmp    QWORD PTR [rbp+0x7],0x10
   140013606:	jb     0x140013612
   140013608:	mov    rcx,QWORD PTR [rbp-0x11]
   14001360c:	call   QWORD PTR [rip+0x36066]        # 0x140049678
   140013612:	mov    QWORD PTR [rbp+0x7],r14
   140013616:	and    QWORD PTR [rbp-0x1],0x0
   14001361b:	mov    BYTE PTR [rbp-0x11],0x0
   14001361f:	cmp    QWORD PTR [rbp-0x49],0x10
   140013624:	jb     0x140013630
   140013626:	mov    rcx,QWORD PTR [rbp-0x61]
   14001362a:	call   QWORD PTR [rip+0x36048]        # 0x140049678
   140013630:	mov    rcx,QWORD PTR [rbp+0x17]
   140013634:	xor    rcx,rsp
   140013637:	call   0x14002b100
   14001363c:	add    rsp,0xb8
   140013643:	pop    r14
   140013645:	pop    r12
   140013647:	pop    rdi
   140013648:	pop    rsi
   140013649:	pop    rbx
   14001364a:	pop    rbp
   14001364b:	ret    
   14001364c:	rex push rbp
   14001364e:	push   rbx
   14001364f:	push   rsi
   140013650:	push   rdi
   140013651:	push   r12
   140013653:	push   r14
   140013655:	lea    rbp,[rsp-0x2f]
   14001365a:	sub    rsp,0xb8
   140013661:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   140013669:	mov    rax,QWORD PTR [rip+0x54b80]        # 0x1400681f0
   140013670:	xor    rax,rsp
   140013673:	mov    QWORD PTR [rbp+0x17],rax
   140013677:	mov    edi,r9d
   14001367a:	mov    rbx,r8
   14001367d:	mov    rsi,rdx
   140013680:	mov    r12,rcx
   140013683:	mov    r14d,0xf
   140013689:	mov    QWORD PTR [rbp-0x49],r14
   14001368d:	and    QWORD PTR [rbp-0x51],0x0
   140013692:	mov    BYTE PTR [rbp-0x61],0x0
   140013696:	lea    rcx,[rip+0x3d7b3]        # 0x140050e50
   14001369d:	call   QWORD PTR [rip+0x35f65]        # 0x140049608
   1400136a3:	mov    r8,rax
   1400136a6:	lea    rdx,[rip+0x3d7a3]        # 0x140050e50
   1400136ad:	lea    rcx,[rbp-0x61]
   1400136b1:	call   0x140005154
   1400136b6:	nop
   1400136b7:	mov    r8d,edi
   1400136ba:	mov    rdx,rbx
   1400136bd:	lea    rcx,[rbp-0x11]
   1400136c1:	call   0x14001231c
   1400136c6:	mov    rbx,rax
   1400136c9:	mov    rdx,rsi
   1400136cc:	lea    rcx,[rbp-0x39]
   1400136d0:	call   0x140009474
   1400136d5:	nop
   1400136d6:	mov    r10,QWORD PTR [r12]
   1400136da:	mov    r9,rbx
   1400136dd:	mov    r8,rax
   1400136e0:	lea    rdx,[rbp-0x61]
   1400136e4:	mov    rcx,r12
   1400136e7:	call   QWORD PTR [r10+0xa8]
   1400136ee:	nop
   1400136ef:	cmp    QWORD PTR [rbp-0x21],0x10
   1400136f4:	jb     0x140013700
   1400136f6:	mov    rcx,QWORD PTR [rbp-0x39]
   1400136fa:	call   QWORD PTR [rip+0x35f78]        # 0x140049678
   140013700:	mov    QWORD PTR [rbp-0x21],r14
   140013704:	and    QWORD PTR [rbp-0x29],0x0
   140013709:	mov    BYTE PTR [rbp-0x39],0x0
   14001370d:	cmp    QWORD PTR [rbp+0x7],0x10
   140013712:	jb     0x14001371e
   140013714:	mov    rcx,QWORD PTR [rbp-0x11]
   140013718:	call   QWORD PTR [rip+0x35f5a]        # 0x140049678
   14001371e:	mov    QWORD PTR [rbp+0x7],r14
   140013722:	and    QWORD PTR [rbp-0x1],0x0
   140013727:	mov    BYTE PTR [rbp-0x11],0x0
   14001372b:	cmp    QWORD PTR [rbp-0x49],0x10
   140013730:	jb     0x14001373c
   140013732:	mov    rcx,QWORD PTR [rbp-0x61]
   140013736:	call   QWORD PTR [rip+0x35f3c]        # 0x140049678
   14001373c:	mov    rcx,QWORD PTR [rbp+0x17]
   140013740:	xor    rcx,rsp
   140013743:	call   0x14002b100
   140013748:	add    rsp,0xb8
   14001374f:	pop    r14
   140013751:	pop    r12
   140013753:	pop    rdi
   140013754:	pop    rsi
   140013755:	pop    rbx
   140013756:	pop    rbp
   140013757:	ret    
   140013758:	rex push rbp
   14001375a:	push   rbx
   14001375b:	push   rsi
   14001375c:	push   rdi
   14001375d:	push   r12
   14001375f:	push   r14
   140013761:	lea    rbp,[rsp-0x2f]
   140013766:	sub    rsp,0xb8
   14001376d:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   140013775:	mov    rax,QWORD PTR [rip+0x54a74]        # 0x1400681f0
   14001377c:	xor    rax,rsp
   14001377f:	mov    QWORD PTR [rbp+0x17],rax
   140013783:	mov    edi,r9d
   140013786:	mov    rbx,r8
   140013789:	mov    rsi,rdx
   14001378c:	mov    r12,rcx
   14001378f:	mov    r14d,0xf
   140013795:	mov    QWORD PTR [rbp-0x49],r14
   140013799:	and    QWORD PTR [rbp-0x51],0x0
   14001379e:	mov    BYTE PTR [rbp-0x61],0x0
   1400137a2:	lea    rcx,[rip+0x3d6af]        # 0x140050e58
   1400137a9:	call   QWORD PTR [rip+0x35e59]        # 0x140049608
   1400137af:	mov    r8,rax
   1400137b2:	lea    rdx,[rip+0x3d69f]        # 0x140050e58
   1400137b9:	lea    rcx,[rbp-0x61]
   1400137bd:	call   0x140005154
   1400137c2:	nop
   1400137c3:	mov    r8d,edi
   1400137c6:	mov    rdx,rbx
   1400137c9:	lea    rcx,[rbp-0x11]
   1400137cd:	call   0x14001231c
   1400137d2:	mov    rbx,rax
   1400137d5:	mov    rdx,rsi
   1400137d8:	lea    rcx,[rbp-0x39]
   1400137dc:	call   0x140009474
   1400137e1:	nop
   1400137e2:	mov    r10,QWORD PTR [r12]
   1400137e6:	mov    r9,rbx
   1400137e9:	mov    r8,rax
   1400137ec:	lea    rdx,[rbp-0x61]
   1400137f0:	mov    rcx,r12
   1400137f3:	call   QWORD PTR [r10+0xa8]
   1400137fa:	nop
   1400137fb:	cmp    QWORD PTR [rbp-0x21],0x10
   140013800:	jb     0x14001380c
   140013802:	mov    rcx,QWORD PTR [rbp-0x39]
   140013806:	call   QWORD PTR [rip+0x35e6c]        # 0x140049678
   14001380c:	mov    QWORD PTR [rbp-0x21],r14
   140013810:	and    QWORD PTR [rbp-0x29],0x0
   140013815:	mov    BYTE PTR [rbp-0x39],0x0
   140013819:	cmp    QWORD PTR [rbp+0x7],0x10
   14001381e:	jb     0x14001382a
   140013820:	mov    rcx,QWORD PTR [rbp-0x11]
   140013824:	call   QWORD PTR [rip+0x35e4e]        # 0x140049678
   14001382a:	mov    QWORD PTR [rbp+0x7],r14
   14001382e:	and    QWORD PTR [rbp-0x1],0x0
   140013833:	mov    BYTE PTR [rbp-0x11],0x0
   140013837:	cmp    QWORD PTR [rbp-0x49],0x10
   14001383c:	jb     0x140013848
   14001383e:	mov    rcx,QWORD PTR [rbp-0x61]
   140013842:	call   QWORD PTR [rip+0x35e30]        # 0x140049678
   140013848:	mov    rcx,QWORD PTR [rbp+0x17]
   14001384c:	xor    rcx,rsp
   14001384f:	call   0x14002b100
   140013854:	add    rsp,0xb8
   14001385b:	pop    r14
   14001385d:	pop    r12
   14001385f:	pop    rdi
   140013860:	pop    rsi
   140013861:	pop    rbx
   140013862:	pop    rbp
   140013863:	ret    
   140013864:	rex push rbx
   140013866:	sub    rsp,0x170
   14001386d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013876:	mov    rax,QWORD PTR [rip+0x54973]        # 0x1400681f0
   14001387d:	xor    rax,rsp
   140013880:	mov    QWORD PTR [rsp+0x160],rax
   140013888:	mov    rbx,rcx
   14001388b:	mov    QWORD PTR [rsp+0x30],rcx
   140013890:	and    DWORD PTR [rsp+0x20],0x0
   140013895:	mov    QWORD PTR [rcx+0x18],0xf
   14001389d:	and    QWORD PTR [rcx+0x10],0x0
   1400138a2:	mov    BYTE PTR [rcx],0x0
   1400138a5:	lea    rcx,[rip+0x3d049]        # 0x1400508f5
   1400138ac:	call   QWORD PTR [rip+0x35d56]        # 0x140049608
   1400138b2:	mov    r8,rax
   1400138b5:	lea    rdx,[rip+0x3d039]        # 0x1400508f5
   1400138bc:	mov    rcx,rbx
   1400138bf:	call   0x140005154
   1400138c4:	mov    DWORD PTR [rsp+0x20],0x1
   1400138cc:	xor    ecx,ecx
   1400138ce:	call   QWORD PTR [rip+0x35e34]        # 0x140049708
   1400138d4:	mov    DWORD PTR [rsp+0x24],eax
   1400138d8:	lea    rdx,[rsp+0x24]
   1400138dd:	lea    rcx,[rsp+0x38]
   1400138e2:	call   QWORD PTR [rip+0x35e40]        # 0x140049728
   1400138e8:	test   eax,eax
   1400138ea:	jne    0x140013923
   1400138ec:	lea    r9,[rsp+0x38]
   1400138f1:	lea    r8,[rip+0x3d568]        # 0x140050e60
   1400138f8:	mov    edx,0x100
   1400138fd:	lea    rcx,[rsp+0x60]
   140013902:	call   QWORD PTR [rip+0x35e18]        # 0x140049720
   140013908:	lea    rcx,[rsp+0x60]
   14001390d:	call   QWORD PTR [rip+0x35cf5]        # 0x140049608
   140013913:	mov    r8,rax
   140013916:	lea    rdx,[rsp+0x60]
   14001391b:	mov    rcx,rbx
   14001391e:	call   0x140005154
   140013923:	mov    rax,rbx
   140013926:	mov    rcx,QWORD PTR [rsp+0x160]
   14001392e:	xor    rcx,rsp
   140013931:	call   0x14002b100
   140013936:	add    rsp,0x170
   14001393d:	pop    rbx
   14001393e:	ret    
   14001393f:	int3   
   140013940:	mov    rax,rsp
   140013943:	push   rbp
   140013944:	lea    rbp,[rax-0x1a8]
   14001394b:	sub    rsp,0x2a0
   140013952:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001395b:	mov    QWORD PTR [rax+0x10],rbx
   14001395f:	mov    QWORD PTR [rax+0x18],rdi
   140013963:	mov    rax,QWORD PTR [rip+0x54886]        # 0x1400681f0
   14001396a:	xor    rax,rsp
   14001396d:	mov    QWORD PTR [rbp+0x190],rax
   140013974:	mov    rbx,rcx
   140013977:	xor    edi,edi
   140013979:	mov    DWORD PTR [rsp+0x20],edi
   14001397d:	mov    QWORD PTR [rsp+0x48],0x7
   140013986:	mov    QWORD PTR [rsp+0x40],rdi
   14001398b:	mov    WORD PTR [rsp+0x30],di
   140013990:	lea    rcx,[rip+0x3d159]        # 0x140050af0
   140013997:	call   QWORD PTR [rip+0x35d13]        # 0x1400496b0
   14001399d:	mov    r8,rax
   1400139a0:	lea    rdx,[rip+0x3d149]        # 0x140050af0
   1400139a7:	lea    rcx,[rsp+0x30]
   1400139ac:	call   0x1400096cc
   1400139b1:	nop
   1400139b2:	mov    r8d,0x104
   1400139b8:	lea    rdx,[rbp-0x80]
   1400139bc:	xor    ecx,ecx
   1400139be:	call   QWORD PTR [rip+0x35724]        # 0x1400490e8
   1400139c4:	test   eax,eax
   1400139c6:	je     0x140013a24
   1400139c8:	lea    rcx,[rbp-0x80]
   1400139cc:	call   QWORD PTR [rip+0x35cde]        # 0x1400496b0
   1400139d2:	mov    r8,rax
   1400139d5:	lea    rdx,[rbp-0x80]
   1400139d9:	lea    rcx,[rsp+0x30]
   1400139de:	call   0x1400096cc
   1400139e3:	lea    rcx,[rsp+0x30]
   1400139e8:	call   0x140014274
   1400139ed:	mov    r9,rax
   1400139f0:	xor    r8d,r8d
   1400139f3:	lea    rdx,[rsp+0x58]
   1400139f8:	lea    rcx,[rsp+0x30]
   1400139fd:	call   0x14000b3d0
   140013a02:	nop
   140013a03:	mov    rdx,rax
   140013a06:	lea    rcx,[rsp+0x30]
   140013a0b:	call   0x140009880
   140013a10:	nop
   140013a11:	cmp    QWORD PTR [rsp+0x70],0x8
   140013a17:	jb     0x140013a24
   140013a19:	mov    rcx,QWORD PTR [rsp+0x58]
   140013a1e:	call   QWORD PTR [rip+0x35c54]        # 0x140049678
   140013a24:	lea    rdx,[rsp+0x30]
   140013a29:	lea    rcx,[rsp+0x58]
   140013a2e:	call   0x14000a994
   140013a33:	nop
   140013a34:	mov    rdx,rax
   140013a37:	lea    rcx,[rsp+0x30]
   140013a3c:	call   0x140009880
   140013a41:	nop
   140013a42:	cmp    QWORD PTR [rsp+0x70],0x8
   140013a48:	jb     0x140013a55
   140013a4a:	mov    rcx,QWORD PTR [rsp+0x58]
   140013a4f:	call   QWORD PTR [rip+0x35c23]        # 0x140049678
   140013a55:	lea    rdx,[rsp+0x30]
   140013a5a:	mov    rcx,rbx
   140013a5d:	call   0x140009474
   140013a62:	nop
   140013a63:	cmp    QWORD PTR [rsp+0x48],0x8
   140013a69:	jb     0x140013a76
   140013a6b:	mov    rcx,QWORD PTR [rsp+0x30]
   140013a70:	call   QWORD PTR [rip+0x35c02]        # 0x140049678
   140013a76:	mov    rax,rbx
   140013a79:	mov    rcx,QWORD PTR [rbp+0x190]
   140013a80:	xor    rcx,rsp
   140013a83:	call   0x14002b100
   140013a88:	lea    r11,[rsp+0x2a0]
   140013a90:	mov    rbx,QWORD PTR [r11+0x18]
   140013a94:	mov    rdi,QWORD PTR [r11+0x20]
   140013a98:	mov    rsp,r11
   140013a9b:	pop    rbp
   140013a9c:	ret    
   140013a9d:	int3   
   140013a9e:	int3   
   140013a9f:	int3   
   140013aa0:	rex push rbx
   140013aa2:	sub    rsp,0x70
   140013aa6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013aaf:	mov    rax,QWORD PTR [rip+0x5473a]        # 0x1400681f0
   140013ab6:	xor    rax,rsp
   140013ab9:	mov    QWORD PTR [rsp+0x60],rax
   140013abe:	mov    rbx,rcx
   140013ac1:	mov    QWORD PTR [rsp+0x30],rcx
   140013ac6:	and    DWORD PTR [rsp+0x20],0x0
   140013acb:	lea    rcx,[rsp+0x38]
   140013ad0:	call   0x140013940
   140013ad5:	nop
   140013ad6:	mov    QWORD PTR [rbx+0x18],0xf
   140013ade:	and    QWORD PTR [rbx+0x10],0x0
   140013ae3:	mov    BYTE PTR [rbx],0x0
   140013ae6:	or     r9,0xffffffffffffffff
   140013aea:	xor    r8d,r8d
   140013aed:	lea    rdx,[rsp+0x38]
   140013af2:	mov    rcx,rbx
   140013af5:	call   0x1400048b8
   140013afa:	mov    DWORD PTR [rsp+0x20],0x1
   140013b02:	lea    rcx,[rip+0x3d36f]        # 0x140050e78
   140013b09:	call   QWORD PTR [rip+0x35af9]        # 0x140049608
   140013b0f:	mov    r8,rax
   140013b12:	lea    rdx,[rip+0x3d35f]        # 0x140050e78
   140013b19:	mov    rcx,rbx
   140013b1c:	call   0x140009290
   140013b21:	nop
   140013b22:	cmp    QWORD PTR [rsp+0x50],0x10
   140013b28:	jb     0x140013b35
   140013b2a:	mov    rcx,QWORD PTR [rsp+0x38]
   140013b2f:	call   QWORD PTR [rip+0x35b43]        # 0x140049678
   140013b35:	mov    rax,rbx
   140013b38:	mov    rcx,QWORD PTR [rsp+0x60]
   140013b3d:	xor    rcx,rsp
   140013b40:	call   0x14002b100
   140013b45:	add    rsp,0x70
   140013b49:	pop    rbx
   140013b4a:	ret    
   140013b4b:	int3   
   140013b4c:	mov    rax,rsp
   140013b4f:	push   rbp
   140013b50:	mov    rbp,rsp
   140013b53:	sub    rsp,0x80
   140013b5a:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140013b62:	mov    QWORD PTR [rax+0x8],rbx
   140013b66:	mov    rax,QWORD PTR [rip+0x54683]        # 0x1400681f0
   140013b6d:	xor    rax,rsp
   140013b70:	mov    QWORD PTR [rbp-0x8],rax
   140013b74:	mov    rbx,QWORD PTR [rip+0x56cf5]        # 0x14006a870
   140013b7b:	mov    QWORD PTR [rbp-0x40],0xf
   140013b83:	and    QWORD PTR [rbp-0x48],0x0
   140013b88:	mov    BYTE PTR [rbp-0x58],0x0
   140013b8c:	lea    rcx,[rip+0x3d2f5]        # 0x140050e88
   140013b93:	call   QWORD PTR [rip+0x35a6f]        # 0x140049608
   140013b99:	mov    r8,rax
   140013b9c:	lea    rdx,[rip+0x3d2e5]        # 0x140050e88
   140013ba3:	lea    rcx,[rbp-0x58]
   140013ba7:	call   0x140005154
   140013bac:	nop
   140013bad:	lea    r8,[rbp-0x58]
   140013bb1:	mov    rdx,rbx
   140013bb4:	lea    rcx,[rbp-0x30]
   140013bb8:	call   0x140013c24
   140013bbd:	nop
   140013bbe:	lea    rdx,[rip+0x3cf0f]        # 0x140050ad4
   140013bc5:	mov    rcx,rax
   140013bc8:	call   0x140002f24
   140013bcd:	test   eax,eax
   140013bcf:	sete   bl
   140013bd2:	cmp    QWORD PTR [rbp-0x18],0x10
   140013bd7:	jb     0x140013be3
   140013bd9:	mov    rcx,QWORD PTR [rbp-0x30]
   140013bdd:	call   QWORD PTR [rip+0x35a95]        # 0x140049678
   140013be3:	mov    QWORD PTR [rbp-0x18],0xf
   140013beb:	and    QWORD PTR [rbp-0x20],0x0
   140013bf0:	mov    BYTE PTR [rbp-0x30],0x0
   140013bf4:	cmp    QWORD PTR [rbp-0x40],0x10
   140013bf9:	jb     0x140013c05
   140013bfb:	mov    rcx,QWORD PTR [rbp-0x58]
   140013bff:	call   QWORD PTR [rip+0x35a73]        # 0x140049678
   140013c05:	mov    al,bl
   140013c07:	mov    rcx,QWORD PTR [rbp-0x8]
   140013c0b:	xor    rcx,rsp
   140013c0e:	call   0x14002b100
   140013c13:	mov    rbx,QWORD PTR [rsp+0x90]
   140013c1b:	add    rsp,0x80
   140013c22:	pop    rbp
   140013c23:	ret    
   140013c24:	mov    rax,rsp
   140013c27:	push   rbp
   140013c28:	push   rsi
   140013c29:	push   rdi
   140013c2a:	push   r12
   140013c2c:	push   r13
   140013c2e:	push   r14
   140013c30:	push   r15
   140013c32:	lea    rbp,[rax-0x398]
   140013c39:	sub    rsp,0x460
   140013c40:	mov    QWORD PTR [rbp+0xc0],0xfffffffffffffffe
   140013c4b:	mov    QWORD PTR [rax+0x20],rbx
   140013c4f:	mov    rax,QWORD PTR [rip+0x5459a]        # 0x1400681f0
   140013c56:	xor    rax,rsp
   140013c59:	mov    QWORD PTR [rbp+0x350],rax
   140013c60:	mov    r14,r8
   140013c63:	mov    rbx,rdx
   140013c66:	mov    r12,rcx
   140013c69:	mov    QWORD PTR [rbp+0xc8],rcx
   140013c70:	xor    r15d,r15d
   140013c73:	mov    DWORD PTR [rsp+0x44],r15d
   140013c78:	lea    r8,[rsp+0x40]
   140013c7d:	lea    rdx,[rsp+0x40]
   140013c82:	lea    rcx,[rsp+0x78]
   140013c87:	call   0x140005454
   140013c8c:	nop
   140013c8d:	cmp    QWORD PTR [rbx+0x18],0x10
   140013c92:	jb     0x140013c97
   140013c94:	mov    rbx,QWORD PTR [rbx]
   140013c97:	lea    rax,[rip+0x3d2aa]        # 0x140050f48
   140013c9e:	mov    QWORD PTR [rbp-0x60],rax
   140013ca2:	lea    rax,[rip+0x3cfc7]        # 0x140050c70
   140013ca9:	mov    QWORD PTR [rbp-0x50],rax
   140013cad:	lea    rcx,[rbp+0x58]
   140013cb1:	call   QWORD PTR [rip+0x355f1]        # 0x1400492a8
   140013cb7:	nop
   140013cb8:	mov    DWORD PTR [rsp+0x44],0x2
   140013cc0:	xor    r8d,r8d
   140013cc3:	lea    rdx,[rbp-0x48]
   140013cc7:	lea    rcx,[rbp-0x60]
   140013ccb:	call   QWORD PTR [rip+0x357cf]        # 0x1400494a0
   140013cd1:	nop
   140013cd2:	mov    rax,QWORD PTR [rbp-0x60]
   140013cd6:	movsxd rcx,DWORD PTR [rax+0x4]
   140013cda:	lea    rax,[rip+0x3d25f]        # 0x140050f40
   140013ce1:	mov    QWORD PTR [rbp+rcx*1-0x60],rax
   140013ce6:	lea    rax,[rbp-0x48]
   140013cea:	mov    QWORD PTR [rsp+0x48],rax
   140013cef:	lea    rcx,[rbp-0x48]
   140013cf3:	call   QWORD PTR [rip+0x35587]        # 0x140049280
   140013cf9:	nop
   140013cfa:	lea    rax,[rip+0x3cca7]        # 0x1400509a8
   140013d01:	mov    QWORD PTR [rbp-0x48],rax
   140013d05:	mov    BYTE PTR [rbp+0x48],r15b
   140013d09:	mov    BYTE PTR [rbp+0x41],r15b
   140013d0d:	lea    rcx,[rbp-0x48]
   140013d11:	call   QWORD PTR [rip+0x35551]        # 0x140049268
   140013d17:	mov    QWORD PTR [rbp+0x50],r15
   140013d1b:	mov    eax,DWORD PTR [rip+0x56a97]        # 0x14006a7b8
   140013d21:	mov    DWORD PTR [rbp+0x44],eax
   140013d24:	mov    QWORD PTR [rbp+0x38],r15
   140013d28:	mov    edx,0x3
   140013d2d:	lea    r8d,[rdx+0x3d]
   140013d31:	mov    rcx,rbx
   140013d34:	call   QWORD PTR [rip+0x35756]        # 0x140049490
   140013d3a:	mov    rbx,rax
   140013d3d:	test   rax,rax
   140013d40:	je     0x140013dee
   140013d46:	mov    BYTE PTR [rbp+0x48],0x1
   140013d4a:	mov    BYTE PTR [rbp+0x41],r15b
   140013d4e:	lea    rcx,[rbp-0x48]
   140013d52:	call   QWORD PTR [rip+0x35510]        # 0x140049268
   140013d58:	lea    rdx,[rbx+0x10]
   140013d5c:	lea    r9,[rbx+0x8]
   140013d60:	mov    QWORD PTR [rsp+0x30],r9
   140013d65:	mov    QWORD PTR [rsp+0x28],rbx
   140013d6a:	mov    QWORD PTR [rsp+0x20],rdx
   140013d6f:	mov    r8,rbx
   140013d72:	lea    rcx,[rbp-0x48]
   140013d76:	call   QWORD PTR [rip+0x354e4]        # 0x140049260
   140013d7c:	mov    QWORD PTR [rbp+0x50],rbx
   140013d80:	mov    eax,DWORD PTR [rip+0x56a32]        # 0x14006a7b8
   140013d86:	mov    DWORD PTR [rbp+0x44],eax
   140013d89:	mov    QWORD PTR [rbp+0x38],r15
   140013d8d:	lea    rdx,[rsp+0x48]
   140013d92:	lea    rcx,[rbp-0x48]
   140013d96:	call   QWORD PTR [rip+0x354dc]        # 0x140049278
   140013d9c:	nop
   140013d9d:	mov    rcx,rax
   140013da0:	call   0x140006288
   140013da5:	mov    rbx,rax
   140013da8:	mov    rcx,rax
   140013dab:	call   QWORD PTR [rip+0x35587]        # 0x140049338
   140013db1:	test   al,al
   140013db3:	je     0x140013dbb
   140013db5:	mov    QWORD PTR [rbp+0x38],r15
   140013db9:	jmp    0x140013dca
   140013dbb:	mov    QWORD PTR [rbp+0x38],rbx
   140013dbf:	lea    rcx,[rbp-0x48]
   140013dc3:	call   QWORD PTR [rip+0x3549f]        # 0x140049268
   140013dc9:	nop
   140013dca:	mov    rcx,QWORD PTR [rsp+0x48]
   140013dcf:	test   rcx,rcx
   140013dd2:	je     0x140013e09
   140013dd4:	call   QWORD PTR [rip+0x35566]        # 0x140049340
   140013dda:	mov    rcx,rax
   140013ddd:	test   rax,rax
   140013de0:	je     0x140013e09
   140013de2:	mov    rax,QWORD PTR [rax]
   140013de5:	mov    edx,0x1
   140013dea:	call   QWORD PTR [rax]
   140013dec:	jmp    0x140013e09
   140013dee:	mov    rax,QWORD PTR [rbp-0x60]
   140013df2:	movsxd rcx,DWORD PTR [rax+0x4]
   140013df6:	lea    rcx,[rbp+rcx*1-0x60]
   140013dfb:	xor    r8d,r8d
   140013dfe:	lea    edx,[r8+0x2]
   140013e02:	call   QWORD PTR [rip+0x354f0]        # 0x1400492f8
   140013e08:	nop
   140013e09:	mov    rax,QWORD PTR [rbp-0x60]
   140013e0d:	movsxd rcx,DWORD PTR [rax+0x4]
   140013e11:	lea    rax,[rbp+rcx*1-0x60]
   140013e16:	mov    bl,0x6
   140013e18:	test   BYTE PTR [rax+0x10],bl
   140013e1b:	cmovne rax,r15
   140013e1f:	mov    r13d,0xf
   140013e25:	test   rax,rax
   140013e28:	je     0x140014148
   140013e2e:	mov    eax,DWORD PTR [rbp+rcx*1-0x50]
   140013e32:	shr    eax,0x2
   140013e35:	test   al,0x1
   140013e37:	jne    0x140014148
   140013e3d:	test   BYTE PTR [rbp+rcx*1-0x50],bl
   140013e41:	jne    0x140014148
   140013e47:	xor    edx,edx
   140013e49:	mov    r8d,0x200
   140013e4f:	lea    rcx,[rbp+0x150]
   140013e56:	call   QWORD PTR [rip+0x357fc]        # 0x140049658
   140013e5c:	mov    rdi,r15
   140013e5f:	mov    QWORD PTR [rsp+0x58],r15
   140013e64:	mov    rsi,r15
   140013e67:	mov    QWORD PTR [rsp+0x60],r15
   140013e6c:	mov    QWORD PTR [rsp+0x68],r15
   140013e71:	mov    r8d,0x200
   140013e77:	lea    rdx,[rbp+0x150]
   140013e7e:	lea    rcx,[rbp-0x60]
   140013e82:	call   QWORD PTR [rip+0x35640]        # 0x1400494c8
   140013e88:	mov    r11,rax
   140013e8b:	mov    rax,QWORD PTR [rax]
   140013e8e:	movsxd rcx,DWORD PTR [rax+0x4]
   140013e92:	add    rcx,r11
   140013e95:	test   BYTE PTR [rcx+0x10],bl
   140013e98:	cmovne rcx,r15
   140013e9c:	test   rcx,rcx
   140013e9f:	je     0x1400140f8
   140013ea5:	mov    QWORD PTR [rbp+0x110],r13
   140013eac:	mov    QWORD PTR [rbp+0x108],r15
   140013eb3:	mov    BYTE PTR [rbp+0xf8],r15b
   140013eba:	lea    rcx,[rip+0x3cfcf]        # 0x140050e90
   140013ec1:	call   QWORD PTR [rip+0x35741]        # 0x140049608
   140013ec7:	mov    r8,rax
   140013eca:	lea    rdx,[rip+0x3cfbf]        # 0x140050e90
   140013ed1:	lea    rcx,[rbp+0xf8]
   140013ed8:	call   0x140005154
   140013edd:	nop
   140013ede:	mov    QWORD PTR [rbp+0xe8],r13
   140013ee5:	mov    QWORD PTR [rbp+0xe0],r15
   140013eec:	mov    BYTE PTR [rbp+0xd0],r15b
   140013ef3:	lea    rcx,[rbp+0x150]
   140013efa:	call   QWORD PTR [rip+0x35708]        # 0x140049608
   140013f00:	mov    r8,rax
   140013f03:	lea    rdx,[rbp+0x150]
   140013f0a:	lea    rcx,[rbp+0xd0]
   140013f11:	call   0x140005154
   140013f16:	nop
   140013f17:	mov    QWORD PTR [rsp+0x50],r15
   140013f1c:	mov    rbx,QWORD PTR [rbp+0xe0]
   140013f23:	lea    rcx,[rbx+0x1]
   140013f27:	call   0x14002b058
   140013f2c:	mov    r13,rax
   140013f2f:	lea    rdx,[rbp+0xd0]
   140013f36:	cmp    QWORD PTR [rbp+0xe8],0x10
   140013f3e:	cmovae rdx,QWORD PTR [rbp+0xd0]
   140013f46:	mov    r8,rbx
   140013f49:	mov    rcx,rax
   140013f4c:	call   QWORD PTR [rip+0x35976]        # 0x1400498c8
   140013f52:	mov    BYTE PTR [r13+rbx*1+0x0],r15b
   140013f57:	lea    rdx,[rbp+0xf8]
   140013f5e:	cmp    QWORD PTR [rbp+0x110],0x10
   140013f66:	cmovae rdx,QWORD PTR [rbp+0xf8]
   140013f6e:	lea    r8,[rsp+0x50]
   140013f73:	mov    rcx,r13
   140013f76:	call   QWORD PTR [rip+0x35794]        # 0x140049710
   140013f7c:	mov    rbx,rax
   140013f7f:	test   rax,rax
   140013f82:	je     0x140014020
   140013f88:	mov    QWORD PTR [rbp+0x138],0xf
   140013f93:	mov    QWORD PTR [rbp+0x130],r15
   140013f9a:	mov    BYTE PTR [rbp+0x120],r15b
   140013fa1:	mov    rcx,rbx
   140013fa4:	call   QWORD PTR [rip+0x3565e]        # 0x140049608
   140013faa:	mov    r8,rax
   140013fad:	mov    rdx,rbx
   140013fb0:	lea    rcx,[rbp+0x120]
   140013fb7:	call   0x140005154
   140013fbc:	nop
   140013fbd:	lea    rdx,[rbp+0x120]
   140013fc4:	lea    rcx,[rsp+0x58]
   140013fc9:	call   0x140010bd4
   140013fce:	nop
   140013fcf:	cmp    QWORD PTR [rbp+0x138],0x10
   140013fd7:	jb     0x140013fe6
   140013fd9:	mov    rcx,QWORD PTR [rbp+0x120]
   140013fe0:	call   QWORD PTR [rip+0x35692]        # 0x140049678
   140013fe6:	lea    rdx,[rbp+0xf8]
   140013fed:	cmp    QWORD PTR [rbp+0x110],0x10
   140013ff5:	cmovae rdx,QWORD PTR [rbp+0xf8]
   140013ffd:	lea    r8,[rsp+0x50]
   140014002:	xor    ecx,ecx
   140014004:	call   QWORD PTR [rip+0x35706]        # 0x140049710
   14001400a:	mov    rbx,rax
   14001400d:	test   rax,rax
   140014010:	jne    0x140013f88
   140014016:	mov    rsi,QWORD PTR [rsp+0x60]
   14001401b:	mov    rdi,QWORD PTR [rsp+0x58]
   140014020:	mov    rcx,r13
   140014023:	call   QWORD PTR [rip+0x3563f]        # 0x140049668
   140014029:	nop
   14001402a:	cmp    QWORD PTR [rbp+0xe8],0x10
   140014032:	jb     0x140014041
   140014034:	mov    rcx,QWORD PTR [rbp+0xd0]
   14001403b:	call   QWORD PTR [rip+0x35637]        # 0x140049678
   140014041:	mov    r13d,0xf
   140014047:	mov    QWORD PTR [rbp+0xe8],r13
   14001404e:	mov    QWORD PTR [rbp+0xe0],r15
   140014055:	mov    BYTE PTR [rbp+0xd0],r15b
   14001405c:	cmp    QWORD PTR [rbp+0x110],0x10
   140014064:	jb     0x140014073
   140014066:	mov    rcx,QWORD PTR [rbp+0xf8]
   14001406d:	call   QWORD PTR [rip+0x35605]        # 0x140049678
   140014073:	sub    rsi,rdi
   140014076:	movabs rax,0x6666666666666667
   140014080:	imul   rsi
   140014083:	sar    rdx,0x4
   140014087:	mov    rax,rdx
   14001408a:	shr    rax,0x3f
   14001408e:	add    rdx,rax
   140014091:	cmp    rdx,0x2
   140014095:	jb     0x1400140b7
   140014097:	mov    rdx,rdi
   14001409a:	lea    rcx,[rsp+0x78]
   14001409f:	call   0x140003148
   1400140a4:	or     r9,0xffffffffffffffff
   1400140a8:	xor    r8d,r8d
   1400140ab:	lea    rdx,[rdi+0x28]
   1400140af:	mov    rcx,rax
   1400140b2:	call   0x1400048b8
   1400140b7:	lea    rcx,[rsp+0x58]
   1400140bc:	call   0x140007834
   1400140c1:	mov    r8d,0x200
   1400140c7:	lea    rdx,[rbp+0x150]
   1400140ce:	lea    rcx,[rbp-0x60]
   1400140d2:	call   QWORD PTR [rip+0x353f0]        # 0x1400494c8
   1400140d8:	mov    r11,rax
   1400140db:	mov    rax,QWORD PTR [rax]
   1400140de:	movsxd rcx,DWORD PTR [rax+0x4]
   1400140e2:	add    rcx,r11
   1400140e5:	test   BYTE PTR [rcx+0x10],0x6
   1400140e9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400140ee:	mov    rdi,QWORD PTR [rsp+0x58]
   1400140f3:	jmp    0x140013e98
   1400140f8:	lea    rcx,[rbp-0x48]
   1400140fc:	call   0x140004d90
   140014101:	test   rax,rax
   140014104:	jne    0x140014121
   140014106:	mov    rax,QWORD PTR [rbp-0x60]
   14001410a:	movsxd rcx,DWORD PTR [rax+0x4]
   14001410e:	lea    rcx,[rbp+rcx*1-0x60]
   140014113:	xor    r8d,r8d
   140014116:	lea    edx,[r8+0x2]
   14001411a:	call   QWORD PTR [rip+0x351d8]        # 0x1400492f8
   140014120:	nop
   140014121:	test   rdi,rdi
   140014124:	je     0x140014148
   140014126:	mov    rbx,rdi
   140014129:	cmp    rdi,rsi
   14001412c:	je     0x14001413f
   14001412e:	mov    rcx,rbx
   140014131:	call   0x14000638c
   140014136:	add    rbx,0x28
   14001413a:	cmp    rbx,rsi
   14001413d:	jne    0x14001412e
   14001413f:	mov    rcx,rdi
   140014142:	call   QWORD PTR [rip+0x35530]        # 0x140049678
   140014148:	mov    rdx,r14
   14001414b:	lea    rcx,[rsp+0x78]
   140014150:	call   0x140003148
   140014155:	mov    QWORD PTR [r12+0x18],r13
   14001415a:	mov    QWORD PTR [r12+0x10],r15
   14001415f:	mov    BYTE PTR [r12],r15b
   140014163:	or     r9,0xffffffffffffffff
   140014167:	xor    r8d,r8d
   14001416a:	mov    rdx,rax
   14001416d:	mov    rcx,r12
   140014170:	call   0x1400048b8
   140014175:	mov    DWORD PTR [rsp+0x44],0x3
   14001417d:	lea    rax,[rbp+0x58]
   140014181:	mov    QWORD PTR [rsp+0x48],rax
   140014186:	mov    rax,QWORD PTR [rbp-0x60]
   14001418a:	movsxd rcx,DWORD PTR [rax+0x4]
   14001418e:	lea    rax,[rip+0x3cdab]        # 0x140050f40
   140014195:	mov    QWORD PTR [rbp+rcx*1-0x60],rax
   14001419a:	lea    rcx,[rbp-0x48]
   14001419e:	call   0x140003b0c
   1400141a3:	nop
   1400141a4:	lea    rcx,[rbp-0x48]
   1400141a8:	call   QWORD PTR [rip+0x35312]        # 0x1400494c0
   1400141ae:	lea    rcx,[rbp+0x58]
   1400141b2:	call   QWORD PTR [rip+0x35148]        # 0x140049300
   1400141b8:	nop
   1400141b9:	mov    r8,QWORD PTR [rbp-0x80]
   1400141bd:	mov    r9,r8
   1400141c0:	mov    r8,QWORD PTR [r8]
   1400141c3:	lea    rdx,[rsp+0x48]
   1400141c8:	lea    rcx,[rsp+0x78]
   1400141cd:	call   0x140004a78
   1400141d2:	nop
   1400141d3:	mov    rcx,QWORD PTR [rbp-0x80]
   1400141d7:	call   QWORD PTR [rip+0x3549b]        # 0x140049678
   1400141dd:	mov    rax,r12
   1400141e0:	mov    rcx,QWORD PTR [rbp+0x350]
   1400141e7:	xor    rcx,rsp
   1400141ea:	call   0x14002b100
   1400141ef:	mov    rbx,QWORD PTR [rsp+0x4b8]
   1400141f7:	add    rsp,0x460
   1400141fe:	pop    r15
   140014200:	pop    r14
   140014202:	pop    r13
   140014204:	pop    r12
   140014206:	pop    rdi
   140014207:	pop    rsi
   140014208:	pop    rbp
   140014209:	ret    
   14001420a:	int3   
   14001420b:	int3   
   14001420c:	rex push rdi
   14001420e:	sub    rsp,0x30
   140014212:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001421b:	mov    QWORD PTR [rsp+0x48],rbx
   140014220:	lea    rdi,[rcx+0xb8]
   140014227:	mov    QWORD PTR [rsp+0x40],rdi
   14001422c:	mov    rax,QWORD PTR [rdi-0xb8]
   140014233:	movsxd rdx,DWORD PTR [rax+0x4]
   140014237:	lea    rax,[rip+0x3cd02]        # 0x140050f40
   14001423e:	mov    QWORD PTR [rdx+rdi*1-0xb8],rax
   140014246:	lea    rcx,[rdi-0xa0]
   14001424d:	call   0x140003b0c
   140014252:	nop
   140014253:	lea    rcx,[rdi-0xa0]
   14001425a:	call   QWORD PTR [rip+0x35260]        # 0x1400494c0
   140014260:	mov    rcx,rdi
   140014263:	mov    rbx,QWORD PTR [rsp+0x48]
   140014268:	add    rsp,0x30
   14001426c:	pop    rdi
   14001426d:	rex.W jmp QWORD PTR [rip+0x3508c]        # 0x140049300
   140014274:	rex push rbx
   140014276:	sub    rsp,0x20
   14001427a:	mov    rbx,rcx
   14001427d:	lea    rcx,[rip+0x3c888]        # 0x140050b0c
   140014284:	call   QWORD PTR [rip+0x35426]        # 0x1400496b0
   14001428a:	or     r9,0xffffffffffffffff
   14001428e:	mov    r11,rax
   140014291:	test   rax,rax
   140014294:	je     0x14001430f
   140014296:	mov    rcx,QWORD PTR [rbx+0x10]
   14001429a:	test   rcx,rcx
   14001429d:	je     0x14001430f
   14001429f:	cmp    rcx,r9
   1400142a2:	jbe    0x1400142a9
   1400142a4:	mov    rcx,r9
   1400142a7:	jmp    0x1400142ac
   1400142a9:	dec    rcx
   1400142ac:	cmp    QWORD PTR [rbx+0x18],0x8
   1400142b1:	jb     0x1400142b8
   1400142b3:	mov    rax,QWORD PTR [rbx]
   1400142b6:	jmp    0x1400142bb
   1400142b8:	mov    rax,rbx
   1400142bb:	lea    rax,[rax+rcx*2]
   1400142bf:	movzx  r8d,WORD PTR [rax]
   1400142c3:	mov    rdx,r11
   1400142c6:	lea    rcx,[rip+0x3c83f]        # 0x140050b0c
   1400142cd:	cmp    WORD PTR [rcx],r8w
   1400142d1:	je     0x1400142de
   1400142d3:	add    rcx,0x2
   1400142d7:	dec    rdx
   1400142da:	jne    0x1400142cd
   1400142dc:	xor    ecx,ecx
   1400142de:	test   rcx,rcx
   1400142e1:	jne    0x1400142fd
   1400142e3:	cmp    QWORD PTR [rbx+0x18],0x8
   1400142e8:	jb     0x1400142ef
   1400142ea:	mov    rcx,QWORD PTR [rbx]
   1400142ed:	jmp    0x1400142f2
   1400142ef:	mov    rcx,rbx
   1400142f2:	cmp    rax,rcx
   1400142f5:	je     0x14001430f
   1400142f7:	sub    rax,0x2
   1400142fb:	jmp    0x1400142bf
   1400142fd:	cmp    QWORD PTR [rbx+0x18],0x8
   140014302:	jb     0x140014307
   140014304:	mov    rbx,QWORD PTR [rbx]
   140014307:	sub    rax,rbx
   14001430a:	sar    rax,1
   14001430d:	jmp    0x140014312
   14001430f:	mov    rax,r9
   140014312:	add    rsp,0x20
   140014316:	pop    rbx
   140014317:	ret    
   140014318:	mov    rax,rsp
   14001431b:	push   rdi
   14001431c:	sub    rsp,0x30
   140014320:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014329:	mov    QWORD PTR [rax+0x10],rbx
   14001432d:	mov    QWORD PTR [rax+0x18],rbp
   140014331:	mov    QWORD PTR [rax+0x20],rsi
   140014335:	mov    esi,edx
   140014337:	lea    rbp,[rcx-0xb8]
   14001433e:	lea    rdi,[rbp+0xb8]
   140014345:	mov    QWORD PTR [rax+0x8],rdi
   140014349:	mov    rax,QWORD PTR [rdi-0xb8]
   140014350:	movsxd r8,DWORD PTR [rax+0x4]
   140014354:	lea    rax,[rip+0x3cbe5]        # 0x140050f40
   14001435b:	mov    QWORD PTR [r8+rdi*1-0xb8],rax
   140014363:	lea    rcx,[rdi-0xa0]
   14001436a:	call   0x140003b0c
   14001436f:	nop
   140014370:	lea    rcx,[rdi-0xa0]
   140014377:	call   QWORD PTR [rip+0x35143]        # 0x1400494c0
   14001437d:	mov    rcx,rdi
   140014380:	call   QWORD PTR [rip+0x34f7a]        # 0x140049300
   140014386:	test   sil,0x1
   14001438a:	je     0x140014395
   14001438c:	mov    rcx,rbp
   14001438f:	call   QWORD PTR [rip+0x352e3]        # 0x140049678
   140014395:	mov    rax,rbp
   140014398:	mov    rbx,QWORD PTR [rsp+0x48]
   14001439d:	mov    rbp,QWORD PTR [rsp+0x50]
   1400143a2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400143a7:	add    rsp,0x30
   1400143ab:	pop    rdi
   1400143ac:	ret    
   1400143ad:	int3   
   1400143ae:	int3   
   1400143af:	int3   
   1400143b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400143b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400143ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400143bf:	push   rdi
   1400143c0:	push   r12
   1400143c2:	push   r13
   1400143c4:	sub    rsp,0x20
   1400143c8:	mov    rsi,rcx
   1400143cb:	lea    rbp,[rip+0x3c9e6]        # 0x140050db8
   1400143d2:	xor    r13d,r13d
   1400143d5:	mov    rcx,rbp
   1400143d8:	mov    rbx,rdx
   1400143db:	mov    DWORD PTR [rsp+0x50],r13d
   1400143e0:	call   QWORD PTR [rip+0x352ca]        # 0x1400496b0
   1400143e6:	mov    rdx,QWORD PTR [rbx+0x18]
   1400143ea:	mov    r12,rax
   1400143ed:	cmp    rdx,0x8
   1400143f1:	jb     0x1400143f8
   1400143f3:	mov    r8,QWORD PTR [rbx]
   1400143f6:	jmp    0x1400143fb
   1400143f8:	mov    r8,rbx
   1400143fb:	cmp    rbp,r8
   1400143fe:	jb     0x140014448
   140014400:	cmp    rdx,0x8
   140014404:	jb     0x14001440b
   140014406:	mov    rcx,QWORD PTR [rbx]
   140014409:	jmp    0x14001440e
   14001440b:	mov    rcx,rbx
   14001440e:	mov    rax,QWORD PTR [rbx+0x10]
   140014412:	lea    rcx,[rcx+rax*2]
   140014416:	cmp    rcx,rbp
   140014419:	jbe    0x140014448
   14001441b:	cmp    rdx,0x8
   14001441f:	jb     0x140014426
   140014421:	mov    rax,QWORD PTR [rbx]
   140014424:	jmp    0x140014429
   140014426:	mov    rax,rbx
   140014429:	sub    rbp,rax
   14001442c:	mov    r9,r12
   14001442f:	mov    rdx,rbx
   140014432:	sar    rbp,1
   140014435:	mov    rcx,rbx
   140014438:	mov    r8,rbp
   14001443b:	call   0x14000d65c
   140014440:	mov    rbx,rax
   140014443:	jmp    0x140014527
   140014448:	mov    r8,QWORD PTR [rbx+0x10]
   14001444c:	or     rax,0xffffffffffffffff
   140014450:	sub    rax,r8
   140014453:	cmp    rax,r12
   140014456:	ja     0x140014466
   140014458:	lea    rcx,[rip+0x3c4e9]        # 0x140050948
   14001445f:	call   QWORD PTR [rip+0x35133]        # 0x140049598
   140014465:	int3   
   140014466:	test   r12,r12
   140014469:	je     0x140014527
   14001446f:	lea    rdi,[r8+r12*1]
   140014473:	movabs rax,0x7ffffffffffffffe
   14001447d:	cmp    rdi,rax
   140014480:	jbe    0x140014490
   140014482:	lea    rcx,[rip+0x3c4bf]        # 0x140050948
   140014489:	call   QWORD PTR [rip+0x35109]        # 0x140049598
   14001448f:	int3   
   140014490:	cmp    rdx,rdi
   140014493:	jae    0x1400144a2
   140014495:	mov    rdx,rdi
   140014498:	mov    rcx,rbx
   14001449b:	call   0x140009ba8
   1400144a0:	jmp    0x1400144bd
   1400144a2:	test   rdi,rdi
   1400144a5:	jne    0x1400144c2
   1400144a7:	mov    QWORD PTR [rbx+0x10],r13
   1400144ab:	cmp    rdx,0x8
   1400144af:	jb     0x1400144b6
   1400144b1:	mov    rax,QWORD PTR [rbx]
   1400144b4:	jmp    0x1400144b9
   1400144b6:	mov    rax,rbx
   1400144b9:	mov    WORD PTR [rax],r13w
   1400144bd:	test   rdi,rdi
   1400144c0:	je     0x140014527
   1400144c2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400144c7:	jb     0x1400144ce
   1400144c9:	mov    rdx,QWORD PTR [rbx]
   1400144cc:	jmp    0x1400144d1
   1400144ce:	mov    rdx,rbx
   1400144d1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400144d6:	jb     0x1400144dd
   1400144d8:	mov    rax,QWORD PTR [rbx]
   1400144db:	jmp    0x1400144e0
   1400144dd:	mov    rax,rbx
   1400144e0:	mov    r8,QWORD PTR [rbx+0x10]
   1400144e4:	add    r12,r12
   1400144e7:	lea    rcx,[r12+rax*1]
   1400144eb:	add    r8,r8
   1400144ee:	call   QWORD PTR [rip+0x350fc]        # 0x1400495f0
   1400144f4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400144f9:	jb     0x140014500
   1400144fb:	mov    rcx,QWORD PTR [rbx]
   1400144fe:	jmp    0x140014503
   140014500:	mov    rcx,rbx
   140014503:	mov    r8,r12
   140014506:	mov    rdx,rbp
   140014509:	call   QWORD PTR [rip+0x353b9]        # 0x1400498c8
   14001450f:	cmp    QWORD PTR [rbx+0x18],0x8
   140014514:	mov    QWORD PTR [rbx+0x10],rdi
   140014518:	jb     0x14001451f
   14001451a:	mov    rax,QWORD PTR [rbx]
   14001451d:	jmp    0x140014522
   14001451f:	mov    rax,rbx
   140014522:	mov    WORD PTR [rax+rdi*2],r13w
   140014527:	mov    QWORD PTR [rsi+0x18],0x7
   14001452f:	mov    QWORD PTR [rsi+0x10],r13
   140014533:	mov    rdx,rbx
   140014536:	mov    rcx,rsi
   140014539:	mov    WORD PTR [rsi],r13w
   14001453d:	call   0x140009880
   140014542:	mov    rbx,QWORD PTR [rsp+0x40]
   140014547:	mov    rbp,QWORD PTR [rsp+0x48]
   14001454c:	mov    rax,rsi
   14001454f:	mov    rsi,QWORD PTR [rsp+0x58]
   140014554:	add    rsp,0x20
   140014558:	pop    r13
   14001455a:	pop    r12
   14001455c:	pop    rdi
   14001455d:	ret    
   14001455e:	int3   
   14001455f:	int3   
   140014560:	mov    QWORD PTR [rsp+0x10],rbx
   140014565:	push   rdi
   140014566:	sub    rsp,0x20
   14001456a:	mov    rax,rdx
   14001456d:	mov    rbx,rcx
   140014570:	xor    edi,edi
   140014572:	mov    rcx,rax
   140014575:	mov    rdx,r8
   140014578:	mov    DWORD PTR [rsp+0x30],edi
   14001457c:	call   0x14000d4f4
   140014581:	mov    QWORD PTR [rbx+0x18],0x7
   140014589:	mov    QWORD PTR [rbx+0x10],rdi
   14001458d:	mov    rcx,rbx
   140014590:	mov    rdx,rax
   140014593:	mov    WORD PTR [rbx],di
   140014596:	call   0x140009880
   14001459b:	mov    rax,rbx
   14001459e:	mov    rbx,QWORD PTR [rsp+0x38]
   1400145a3:	add    rsp,0x20
   1400145a7:	pop    rdi
   1400145a8:	ret    
   1400145a9:	int3   
   1400145aa:	int3   
   1400145ab:	int3   
   1400145ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400145b1:	push   rbp
   1400145b2:	push   rbx
   1400145b3:	push   rdi
   1400145b4:	lea    rbp,[rsp-0x30]
   1400145b9:	sub    rsp,0x130
   1400145c0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400145c9:	mov    rbx,rdx
   1400145cc:	mov    rdi,rcx
   1400145cf:	and    DWORD PTR [rbp+0x60],0x0
   1400145d3:	lea    rcx,[rsp+0x30]
   1400145d8:	call   0x140014770
   1400145dd:	nop
   1400145de:	mov    edx,DWORD PTR [rbx]
   1400145e0:	lea    rcx,[rsp+0x40]
   1400145e5:	call   QWORD PTR [rip+0x34ead]        # 0x140049498
   1400145eb:	mov    rdx,rdi
   1400145ee:	lea    rcx,[rsp+0x30]
   1400145f3:	call   0x140014814
   1400145f8:	mov    DWORD PTR [rbp+0x60],0x1
   1400145ff:	lea    rax,[rbp-0x38]
   140014603:	mov    QWORD PTR [rbp+0x68],rax
   140014607:	mov    rax,QWORD PTR [rsp+0x30]
   14001460c:	movsxd rcx,DWORD PTR [rax+0x4]
   140014610:	lea    rax,[rip+0x3c911]        # 0x140050f28
   140014617:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
   14001461c:	lea    rcx,[rsp+0x48]
   140014621:	call   0x140014834
   140014626:	nop
   140014627:	lea    rcx,[rsp+0x48]
   14001462c:	call   QWORD PTR [rip+0x34e8e]        # 0x1400494c0
   140014632:	lea    rcx,[rbp-0x38]
   140014636:	call   QWORD PTR [rip+0x34cc4]        # 0x140049300
   14001463c:	mov    rax,rdi
   14001463f:	add    rsp,0x130
   140014646:	pop    rdi
   140014647:	pop    rbx
   140014648:	pop    rbp
   140014649:	ret    
   14001464a:	int3   
   14001464b:	int3   
   14001464c:	mov    rax,rsp
   14001464f:	mov    QWORD PTR [rax+0x8],rcx
   140014653:	push   rbp
   140014654:	push   rsi
   140014655:	push   rdi
   140014656:	sub    rsp,0x30
   14001465a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014663:	mov    QWORD PTR [rax+0x10],rbx
   140014667:	mov    rbp,r8
   14001466a:	mov    rsi,rdx
   14001466d:	mov    rbx,rcx
   140014670:	and    DWORD PTR [rax+0x18],0x0
   140014674:	mov    QWORD PTR [rcx+0x18],0xf
   14001467c:	and    QWORD PTR [rcx+0x10],0x0
   140014681:	mov    BYTE PTR [rcx],0x0
   140014684:	mov    DWORD PTR [rax+0x18],0x1
   14001468b:	mov    rcx,rdx
   14001468e:	call   QWORD PTR [rip+0x34f74]        # 0x140049608
   140014694:	mov    rdx,QWORD PTR [rbp+0x10]
   140014698:	add    rdx,rax
   14001469b:	mov    rdi,QWORD PTR [rbx+0x10]
   14001469f:	cmp    rdi,rdx
   1400146a2:	ja     0x1400146d0
   1400146a4:	cmp    QWORD PTR [rbx+0x18],rdx
   1400146a8:	je     0x1400146d0
   1400146aa:	mov    r8b,0x1
   1400146ad:	mov    rcx,rbx
   1400146b0:	call   0x140005324
   1400146b5:	test   al,al
   1400146b7:	je     0x1400146d0
   1400146b9:	mov    QWORD PTR [rbx+0x10],rdi
   1400146bd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400146c2:	jb     0x1400146c9
   1400146c4:	mov    rax,QWORD PTR [rbx]
   1400146c7:	jmp    0x1400146cc
   1400146c9:	mov    rax,rbx
   1400146cc:	mov    BYTE PTR [rax+rdi*1],0x0
   1400146d0:	mov    rcx,rsi
   1400146d3:	call   QWORD PTR [rip+0x34f2f]        # 0x140049608
   1400146d9:	mov    r8,rax
   1400146dc:	mov    rdx,rsi
   1400146df:	mov    rcx,rbx
   1400146e2:	call   0x140009290
   1400146e7:	or     r9,0xffffffffffffffff
   1400146eb:	xor    r8d,r8d
   1400146ee:	mov    rdx,rbp
   1400146f1:	mov    rcx,rbx
   1400146f4:	call   0x140005638
   1400146f9:	mov    rax,rbx
   1400146fc:	mov    rbx,QWORD PTR [rsp+0x58]
   140014701:	add    rsp,0x30
   140014705:	pop    rdi
   140014706:	pop    rsi
   140014707:	pop    rbp
   140014708:	ret    
   140014709:	int3   
   14001470a:	int3   
   14001470b:	int3   
   14001470c:	rex push rdi
   14001470e:	sub    rsp,0x30
   140014712:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001471b:	mov    QWORD PTR [rsp+0x48],rbx
   140014720:	lea    rdi,[rcx+0x98]
   140014727:	mov    QWORD PTR [rsp+0x40],rdi
   14001472c:	mov    rax,QWORD PTR [rdi-0x98]
   140014733:	movsxd rdx,DWORD PTR [rax+0x4]
   140014737:	lea    rax,[rip+0x3c7ea]        # 0x140050f28
   14001473e:	mov    QWORD PTR [rdx+rdi*1-0x98],rax
   140014746:	lea    rcx,[rdi-0x80]
   14001474a:	call   0x140014834
   14001474f:	nop
   140014750:	lea    rcx,[rdi-0x80]
   140014754:	call   QWORD PTR [rip+0x34d66]        # 0x1400494c0
   14001475a:	mov    rcx,rdi
   14001475d:	mov    rbx,QWORD PTR [rsp+0x48]
   140014762:	add    rsp,0x30
   140014766:	pop    rdi
   140014767:	rex.W jmp QWORD PTR [rip+0x34b92]        # 0x140049300
   14001476e:	int3   
   14001476f:	int3   
   140014770:	mov    QWORD PTR [rsp+0x8],rcx
   140014775:	push   rdi
   140014776:	sub    rsp,0x30
   14001477a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014783:	mov    QWORD PTR [rsp+0x50],rbx
   140014788:	mov    rdi,rcx
   14001478b:	and    DWORD PTR [rsp+0x48],0x0
   140014790:	lea    rax,[rip+0x3cfe9]        # 0x140051780
   140014797:	mov    QWORD PTR [rcx],rax
   14001479a:	lea    rax,[rip+0x3c78f]        # 0x140050f30
   1400147a1:	mov    QWORD PTR [rcx+0x10],rax
   1400147a5:	add    rcx,0x98
   1400147ac:	call   QWORD PTR [rip+0x34af6]        # 0x1400492a8
   1400147b2:	nop
   1400147b3:	mov    DWORD PTR [rsp+0x48],0x1
   1400147bb:	xor    r8d,r8d
   1400147be:	lea    rdx,[rdi+0x18]
   1400147c2:	mov    rcx,rdi
   1400147c5:	call   QWORD PTR [rip+0x34cd5]        # 0x1400494a0
   1400147cb:	nop
   1400147cc:	mov    rax,QWORD PTR [rdi]
   1400147cf:	movsxd rcx,DWORD PTR [rax+0x4]
   1400147d3:	lea    rax,[rip+0x3c74e]        # 0x140050f28
   1400147da:	mov    QWORD PTR [rcx+rdi*1],rax
   1400147de:	lea    rcx,[rdi+0x18]
   1400147e2:	call   QWORD PTR [rip+0x34a98]        # 0x140049280
   1400147e8:	nop
   1400147e9:	lea    rax,[rip+0x3c6b8]        # 0x140050ea8
   1400147f0:	mov    QWORD PTR [rdi+0x18],rax
   1400147f4:	and    QWORD PTR [rdi+0x88],0x0
   1400147fc:	and    DWORD PTR [rdi+0x90],0x0
   140014803:	mov    rax,rdi
   140014806:	mov    rbx,QWORD PTR [rsp+0x50]
   14001480b:	add    rsp,0x30
   14001480f:	pop    rdi
   140014810:	ret    
   140014811:	int3   
   140014812:	int3   
   140014813:	int3   
   140014814:	rex push rbx
   140014816:	sub    rsp,0x20
   14001481a:	and    DWORD PTR [rsp+0x30],0x0
   14001481f:	add    rcx,0x18
   140014823:	mov    rbx,rdx
   140014826:	call   0x140014ef8
   14001482b:	mov    rax,rbx
   14001482e:	add    rsp,0x20
   140014832:	pop    rbx
   140014833:	ret    
   140014834:	rex push rbx
   140014836:	sub    rsp,0x20
   14001483a:	test   BYTE PTR [rcx+0x78],0x1
   14001483e:	lea    rax,[rip+0x3c663]        # 0x140050ea8
   140014845:	mov    rbx,rcx
   140014848:	mov    QWORD PTR [rcx],rax
   14001484b:	je     0x14001485a
   14001484d:	mov    rcx,QWORD PTR [rcx+0x20]
   140014851:	mov    rcx,QWORD PTR [rcx]
   140014854:	call   QWORD PTR [rip+0x34e1e]        # 0x140049678
   14001485a:	mov    rax,QWORD PTR [rbx+0x20]
   14001485e:	xor    ecx,ecx
   140014860:	mov    QWORD PTR [rax],rcx
   140014863:	mov    rax,QWORD PTR [rbx+0x40]
   140014867:	mov    QWORD PTR [rax],rcx
   14001486a:	mov    rax,QWORD PTR [rbx+0x58]
   14001486e:	mov    DWORD PTR [rax],ecx
   140014870:	mov    rax,QWORD PTR [rbx+0x28]
   140014874:	mov    QWORD PTR [rax],rcx
   140014877:	mov    rax,QWORD PTR [rbx+0x48]
   14001487b:	mov    QWORD PTR [rax],rcx
   14001487e:	mov    rax,QWORD PTR [rbx+0x60]
   140014882:	mov    DWORD PTR [rax],ecx
   140014884:	and    DWORD PTR [rbx+0x78],0xfffffffe
   140014888:	mov    QWORD PTR [rbx+0x70],rcx
   14001488c:	mov    rcx,rbx
   14001488f:	add    rsp,0x20
   140014893:	pop    rbx
   140014894:	rex.W jmp QWORD PTR [rip+0x34a95]        # 0x140049330
   14001489b:	int3   
   14001489c:	mov    QWORD PTR [rsp+0x10],rbx
   1400148a1:	mov    QWORD PTR [rsp+0x18],rbp
   1400148a6:	mov    QWORD PTR [rsp+0x20],rsi
   1400148ab:	push   rdi
   1400148ac:	push   r12
   1400148ae:	push   r13
   1400148b0:	sub    rsp,0x40
   1400148b4:	test   BYTE PTR [rcx+0x78],0x8
   1400148b8:	mov    ebp,edx
   1400148ba:	mov    rbx,rcx
   1400148bd:	je     0x1400148e7
   1400148bf:	mov    r8,QWORD PTR [rcx+0x48]
   1400148c3:	cmp    QWORD PTR [r8],0x0
   1400148c7:	je     0x1400148e7
   1400148c9:	mov    rdx,QWORD PTR [rcx+0x70]
   1400148cd:	cmp    QWORD PTR [r8],rdx
   1400148d0:	jae    0x1400148e7
   1400148d2:	mov    rax,QWORD PTR [rcx+0x60]
   1400148d6:	movsxd rcx,DWORD PTR [rax]
   1400148d9:	add    rcx,QWORD PTR [r8]
   1400148dc:	mov    QWORD PTR [r8],rdx
   1400148df:	mov    rax,QWORD PTR [rbx+0x60]
   1400148e3:	sub    ecx,edx
   1400148e5:	mov    DWORD PTR [rax],ecx
   1400148e7:	cmp    ebp,0xffffffff
   1400148ea:	jne    0x1400148f3
   1400148ec:	xor    eax,eax
   1400148ee:	jmp    0x140014abf
   1400148f3:	mov    rdx,QWORD PTR [rbx+0x48]
   1400148f7:	cmp    QWORD PTR [rdx],0x0
   1400148fb:	je     0x140014910
   1400148fd:	mov    rax,QWORD PTR [rbx+0x60]
   140014901:	movsxd rcx,DWORD PTR [rax]
   140014904:	add    rcx,QWORD PTR [rdx]
   140014907:	cmp    QWORD PTR [rdx],rcx
   14001490a:	jb     0x140014ab1
   140014910:	test   BYTE PTR [rbx+0x78],0x2
   140014914:	je     0x14001491e
   140014916:	or     eax,0xffffffff
   140014919:	jmp    0x140014abf
   14001491e:	cmp    QWORD PTR [rdx],0x0
   140014922:	jne    0x140014928
   140014924:	xor    esi,esi
   140014926:	jmp    0x140014939
   140014928:	mov    rax,QWORD PTR [rbx+0x60]
   14001492c:	movsxd rsi,DWORD PTR [rax]
   14001492f:	mov    rax,QWORD PTR [rbx+0x20]
   140014933:	sub    rsi,QWORD PTR [rax]
   140014936:	add    rsi,QWORD PTR [rdx]
   140014939:	mov    rax,rsi
   14001493c:	mov    ecx,0x20
   140014941:	shr    rax,1
   140014944:	cmp    rax,rcx
   140014947:	jb     0x140014951
   140014949:	mov    rcx,rax
   14001494c:	test   rax,rax
   14001494f:	je     0x140014963
   140014951:	mov    eax,0x7fffffff
   140014956:	sub    rax,rcx
   140014959:	cmp    rax,rsi
   14001495c:	jae    0x140014963
   14001495e:	shr    rcx,1
   140014961:	jne    0x140014951
   140014963:	test   rcx,rcx
   140014966:	je     0x140014916
   140014968:	lea    r12,[rcx+rsi*1]
   14001496c:	xor    edi,edi
   14001496e:	test   r12,r12
   140014971:	je     0x1400149be
   140014973:	cmp    r12,0xffffffffffffffff
   140014977:	ja     0x14001498a
   140014979:	mov    rcx,r12
   14001497c:	call   QWORD PTR [rip+0x34d16]        # 0x140049698
   140014982:	mov    rdi,rax
   140014985:	test   rax,rax
   140014988:	jne    0x1400149be
   14001498a:	and    QWORD PTR [rsp+0x60],0x0
   140014990:	lea    rdx,[rsp+0x60]
   140014995:	lea    rcx,[rsp+0x20]
   14001499a:	call   QWORD PTR [rip+0x34f30]        # 0x1400498d0
   1400149a0:	lea    r11,[rip+0x35831]        # 0x14004a1d8
   1400149a7:	lea    rdx,[rip+0x4ed9a]        # 0x140063748
   1400149ae:	lea    rcx,[rsp+0x20]
   1400149b3:	mov    QWORD PTR [rsp+0x20],r11
   1400149b8:	call   0x14002b560
   1400149bd:	int3   
   1400149be:	mov    rax,QWORD PTR [rbx+0x20]
   1400149c2:	mov    r13,QWORD PTR [rax]
   1400149c5:	test   rsi,rsi
   1400149c8:	je     0x1400149de
   1400149ca:	mov    r8,rsi
   1400149cd:	mov    rdx,r13
   1400149d0:	mov    rcx,rdi
   1400149d3:	call   QWORD PTR [rip+0x34eef]        # 0x1400498c8
   1400149d9:	test   rsi,rsi
   1400149dc:	jne    0x140014a1a
   1400149de:	mov    rax,QWORD PTR [rbx+0x28]
   1400149e2:	mov    QWORD PTR [rbx+0x70],rdi
   1400149e6:	mov    QWORD PTR [rax],rdi
   1400149e9:	mov    rax,QWORD PTR [rbx+0x48]
   1400149ed:	mov    QWORD PTR [rax],rdi
   1400149f0:	mov    rax,QWORD PTR [rbx+0x60]
   1400149f4:	mov    DWORD PTR [rax],r12d
   1400149f7:	mov    rax,QWORD PTR [rbx+0x20]
   1400149fb:	test   BYTE PTR [rbx+0x78],0x4
   1400149ff:	mov    QWORD PTR [rax],rdi
   140014a02:	mov    rax,QWORD PTR [rbx+0x40]
   140014a06:	jne    0x140014a63
   140014a08:	mov    QWORD PTR [rax],rdi
   140014a0b:	mov    rax,QWORD PTR [rbx+0x58]
   140014a0f:	mov    DWORD PTR [rax],0x1
   140014a15:	jmp    0x140014a9e
   140014a1a:	mov    rcx,QWORD PTR [rbx+0x28]
   140014a1e:	mov    rax,rdi
   140014a21:	sub    rax,r13
   140014a24:	add    QWORD PTR [rbx+0x70],rax
   140014a28:	mov    rax,QWORD PTR [rbx+0x48]
   140014a2c:	mov    rdx,QWORD PTR [rax]
   140014a2f:	mov    rax,rdi
   140014a32:	sub    rax,r13
   140014a35:	sub    rdx,r13
   140014a38:	add    QWORD PTR [rcx],rax
   140014a3b:	mov    rax,QWORD PTR [rbx+0x48]
   140014a3f:	add    rdx,rdi
   140014a42:	mov    QWORD PTR [rax],rdx
   140014a45:	mov    rax,QWORD PTR [rbx+0x60]
   140014a49:	mov    ecx,edi
   140014a4b:	sub    ecx,edx
   140014a4d:	add    ecx,r12d
   140014a50:	mov    DWORD PTR [rax],ecx
   140014a52:	test   BYTE PTR [rbx+0x78],0x4
   140014a56:	je     0x140014a6f
   140014a58:	mov    rax,QWORD PTR [rbx+0x20]
   140014a5c:	mov    QWORD PTR [rax],rdi
   140014a5f:	mov    rax,QWORD PTR [rbx+0x40]
   140014a63:	and    QWORD PTR [rax],0x0
   140014a67:	mov    rax,QWORD PTR [rbx+0x58]
   140014a6b:	mov    DWORD PTR [rax],edi
   140014a6d:	jmp    0x140014a9e
   140014a6f:	mov    rax,QWORD PTR [rbx+0x48]
   140014a73:	mov    r8,QWORD PTR [rax]
   140014a76:	mov    rax,QWORD PTR [rbx+0x40]
   140014a7a:	mov    rdx,QWORD PTR [rax]
   140014a7d:	mov    rax,QWORD PTR [rbx+0x20]
   140014a81:	mov    QWORD PTR [rax],rdi
   140014a84:	mov    rax,QWORD PTR [rbx+0x40]
   140014a88:	sub    rdx,r13
   140014a8b:	add    rdx,rdi
   140014a8e:	mov    QWORD PTR [rax],rdx
   140014a91:	mov    rax,QWORD PTR [rbx+0x58]
   140014a95:	sub    r8d,edx
   140014a98:	inc    r8d
   140014a9b:	mov    DWORD PTR [rax],r8d
   140014a9e:	test   BYTE PTR [rbx+0x78],0x1
   140014aa2:	je     0x140014aad
   140014aa4:	mov    rcx,r13
   140014aa7:	call   QWORD PTR [rip+0x34bcb]        # 0x140049678
   140014aad:	or     DWORD PTR [rbx+0x78],0x1
   140014ab1:	mov    rcx,rbx
   140014ab4:	call   QWORD PTR [rip+0x347f6]        # 0x1400492b0
   140014aba:	mov    BYTE PTR [rax],bpl
   140014abd:	mov    eax,ebp
   140014abf:	mov    rbx,QWORD PTR [rsp+0x68]
   140014ac4:	mov    rbp,QWORD PTR [rsp+0x70]
   140014ac9:	mov    rsi,QWORD PTR [rsp+0x78]
   140014ace:	add    rsp,0x40
   140014ad2:	pop    r13
   140014ad4:	pop    r12
   140014ad6:	pop    rdi
   140014ad7:	ret    
   140014ad8:	mov    QWORD PTR [rsp+0x8],rbx
   140014add:	push   rdi
   140014ade:	sub    rsp,0x20
   140014ae2:	mov    rax,QWORD PTR [rcx+0x40]
   140014ae6:	mov    rdi,rcx
   140014ae9:	mov    ebx,edx
   140014aeb:	mov    rcx,QWORD PTR [rax]
   140014aee:	test   rcx,rcx
   140014af1:	je     0x140014b2e
   140014af3:	mov    rax,QWORD PTR [rdi+0x20]
   140014af7:	cmp    rcx,QWORD PTR [rax]
   140014afa:	jbe    0x140014b2e
   140014afc:	cmp    edx,0xffffffff
   140014aff:	je     0x140014b0c
   140014b01:	cmp    dl,BYTE PTR [rcx-0x1]
   140014b04:	je     0x140014b0c
   140014b06:	test   BYTE PTR [rdi+0x78],0x2
   140014b0a:	jne    0x140014b2e
   140014b0c:	or     edx,0xffffffff
   140014b0f:	mov    rcx,rdi
   140014b12:	call   QWORD PTR [rip+0x349a0]        # 0x1400494b8
   140014b18:	cmp    ebx,0xffffffff
   140014b1b:	je     0x140014b28
   140014b1d:	mov    rax,QWORD PTR [rdi+0x40]
   140014b21:	mov    rcx,QWORD PTR [rax]
   140014b24:	mov    BYTE PTR [rcx],bl
   140014b26:	jmp    0x140014b2a
   140014b28:	xor    ebx,ebx
   140014b2a:	mov    eax,ebx
   140014b2c:	jmp    0x140014b31
   140014b2e:	or     eax,0xffffffff
   140014b31:	mov    rbx,QWORD PTR [rsp+0x30]
   140014b36:	add    rsp,0x20
   140014b3a:	pop    rdi
   140014b3b:	ret    
   140014b3c:	mov    r9,QWORD PTR [rcx+0x40]
   140014b40:	mov    rdx,QWORD PTR [r9]
   140014b43:	test   rdx,rdx
   140014b46:	je     0x140014b97
   140014b48:	mov    r10,QWORD PTR [rcx+0x58]
   140014b4c:	movsxd rax,DWORD PTR [r10]
   140014b4f:	add    rax,rdx
   140014b52:	cmp    rdx,rax
   140014b55:	jae    0x140014b5b
   140014b57:	movzx  eax,BYTE PTR [rdx]
   140014b5a:	ret    
   140014b5b:	test   BYTE PTR [rcx+0x78],0x4
   140014b5f:	jne    0x140014b97
   140014b61:	mov    rax,QWORD PTR [rcx+0x48]
   140014b65:	mov    r8,QWORD PTR [rax]
   140014b68:	test   r8,r8
   140014b6b:	je     0x140014b97
   140014b6d:	cmp    r8,rdx
   140014b70:	ja     0x140014b78
   140014b72:	cmp    QWORD PTR [rcx+0x70],rdx
   140014b76:	jbe    0x140014b97
   140014b78:	cmp    QWORD PTR [rcx+0x70],r8
   140014b7c:	jae    0x140014b82
   140014b7e:	mov    QWORD PTR [rcx+0x70],r8
   140014b82:	mov    rax,QWORD PTR [rcx+0x70]
   140014b86:	sub    eax,DWORD PTR [r9]
   140014b89:	mov    DWORD PTR [r10],eax
   140014b8c:	mov    rax,QWORD PTR [rcx+0x40]
   140014b90:	mov    rcx,QWORD PTR [rax]
   140014b93:	movzx  eax,BYTE PTR [rcx]
   140014b96:	ret    
   140014b97:	or     eax,0xffffffff
   140014b9a:	ret    
   140014b9b:	int3   
   140014b9c:	mov    QWORD PTR [rsp+0x8],rbx
   140014ba1:	mov    QWORD PTR [rsp+0x10],rsi
   140014ba6:	push   rdi
   140014ba7:	sub    rsp,0x20
   140014bab:	mov    rbx,r8
   140014bae:	mov    r8,QWORD PTR [rcx+0x48]
   140014bb2:	mov    rsi,rdx
   140014bb5:	mov    rax,QWORD PTR [r8]
   140014bb8:	mov    rdi,rcx
   140014bbb:	test   rax,rax
   140014bbe:	je     0x140014bca
   140014bc0:	cmp    QWORD PTR [rcx+0x70],rax
   140014bc4:	jae    0x140014bca
   140014bc6:	mov    QWORD PTR [rcx+0x70],rax
   140014bca:	test   BYTE PTR [rsp+0x50],0x1
   140014bcf:	je     0x140014c86
   140014bd5:	mov    rax,QWORD PTR [rcx+0x40]
   140014bd9:	mov    r10,QWORD PTR [rax]
   140014bdc:	test   r10,r10
   140014bdf:	je     0x140014c86
   140014be5:	mov    rdx,QWORD PTR [rip+0x349cc]        # 0x1400495b8
   140014bec:	cmp    r9d,0x2
   140014bf0:	jne    0x140014bfc
   140014bf2:	mov    rax,QWORD PTR [rcx+0x20]
   140014bf6:	mov    rcx,QWORD PTR [rcx+0x70]
   140014bfa:	jmp    0x140014c10
   140014bfc:	cmp    r9d,0x1
   140014c00:	jne    0x140014c18
   140014c02:	test   BYTE PTR [rsp+0x50],0x2
   140014c07:	jne    0x140014c1d
   140014c09:	mov    rax,QWORD PTR [rcx+0x20]
   140014c0d:	mov    rcx,r10
   140014c10:	sub    rcx,QWORD PTR [rax]
   140014c13:	add    rbx,rcx
   140014c16:	jmp    0x140014c20
   140014c18:	test   r9d,r9d
   140014c1b:	je     0x140014c20
   140014c1d:	mov    rbx,QWORD PTR [rdx]
   140014c20:	test   rbx,rbx
   140014c23:	js     0x140014cf0
   140014c29:	mov    rax,QWORD PTR [rdi+0x20]
   140014c2d:	mov    rcx,QWORD PTR [rax]
   140014c30:	mov    rax,QWORD PTR [rdi+0x70]
   140014c34:	sub    rax,rcx
   140014c37:	cmp    rbx,rax
   140014c3a:	jg     0x140014cf0
   140014c40:	sub    ecx,r10d
   140014c43:	lea    edx,[rbx+rcx*1]
   140014c46:	mov    rcx,rdi
   140014c49:	call   QWORD PTR [rip+0x34869]        # 0x1400494b8
   140014c4f:	test   BYTE PTR [rsp+0x50],0x2
   140014c54:	je     0x140014d04
   140014c5a:	mov    r8,QWORD PTR [rdi+0x48]
   140014c5e:	cmp    QWORD PTR [r8],0x0
   140014c62:	je     0x140014d04
   140014c68:	mov    rax,QWORD PTR [rdi+0x60]
   140014c6c:	movsxd rdx,DWORD PTR [rax]
   140014c6f:	mov    rax,QWORD PTR [rdi+0x40]
   140014c73:	mov    rcx,QWORD PTR [rax]
   140014c76:	add    rdx,QWORD PTR [r8]
   140014c79:	mov    QWORD PTR [r8],rcx
   140014c7c:	mov    rax,QWORD PTR [rdi+0x60]
   140014c80:	sub    edx,ecx
   140014c82:	mov    DWORD PTR [rax],edx
   140014c84:	jmp    0x140014d04
   140014c86:	test   BYTE PTR [rsp+0x50],0x2
   140014c8b:	je     0x140014cf5
   140014c8d:	cmp    QWORD PTR [r8],0x0
   140014c91:	je     0x140014cf5
   140014c93:	mov    rdx,QWORD PTR [rip+0x3491e]        # 0x1400495b8
   140014c9a:	cmp    r9d,0x2
   140014c9e:	jne    0x140014caa
   140014ca0:	mov    rax,QWORD PTR [rcx+0x20]
   140014ca4:	mov    rcx,QWORD PTR [rcx+0x70]
   140014ca8:	jmp    0x140014cb7
   140014caa:	cmp    r9d,0x1
   140014cae:	jne    0x140014cbf
   140014cb0:	mov    rax,QWORD PTR [rcx+0x20]
   140014cb4:	mov    rcx,QWORD PTR [r8]
   140014cb7:	sub    rcx,QWORD PTR [rax]
   140014cba:	add    rbx,rcx
   140014cbd:	jmp    0x140014cc7
   140014cbf:	test   r9d,r9d
   140014cc2:	je     0x140014cc7
   140014cc4:	mov    rbx,QWORD PTR [rdx]
   140014cc7:	test   rbx,rbx
   140014cca:	js     0x140014cf0
   140014ccc:	mov    rax,QWORD PTR [rdi+0x20]
   140014cd0:	mov    rcx,QWORD PTR [rax]
   140014cd3:	mov    rax,QWORD PTR [rdi+0x70]
   140014cd7:	sub    rax,rcx
   140014cda:	cmp    rbx,rax
   140014cdd:	jg     0x140014cf0
   140014cdf:	sub    ecx,DWORD PTR [r8]
   140014ce2:	lea    edx,[rbx+rcx*1]
   140014ce5:	mov    rcx,rdi
   140014ce8:	call   QWORD PTR [rip+0x347c2]        # 0x1400494b0
   140014cee:	jmp    0x140014d04
   140014cf0:	mov    rbx,QWORD PTR [rdx]
   140014cf3:	jmp    0x140014d04
   140014cf5:	test   rbx,rbx
   140014cf8:	je     0x140014d04
   140014cfa:	mov    rax,QWORD PTR [rip+0x348b7]        # 0x1400495b8
   140014d01:	mov    rbx,QWORD PTR [rax]
   140014d04:	and    QWORD PTR [rsi+0x8],0x0
   140014d09:	and    DWORD PTR [rsi+0x10],0x0
   140014d0d:	mov    QWORD PTR [rsi],rbx
   140014d10:	mov    rbx,QWORD PTR [rsp+0x30]
   140014d15:	mov    rax,rsi
   140014d18:	mov    rsi,QWORD PTR [rsp+0x38]
   140014d1d:	add    rsp,0x20
   140014d21:	pop    rdi
   140014d22:	ret    
   140014d23:	int3   
   140014d24:	mov    QWORD PTR [rsp+0x8],rbx
   140014d29:	mov    QWORD PTR [rsp+0x10],rbp
   140014d2e:	mov    QWORD PTR [rsp+0x18],rsi
   140014d33:	push   rdi
   140014d34:	sub    rsp,0x20
   140014d38:	movsxd rbx,DWORD PTR [r8+0x8]
   140014d3c:	mov    ebp,r9d
   140014d3f:	mov    r9,QWORD PTR [rcx+0x48]
   140014d43:	mov    rax,QWORD PTR [r9]
   140014d46:	add    rbx,QWORD PTR [r8]
   140014d49:	mov    rsi,rdx
   140014d4c:	mov    rdi,rcx
   140014d4f:	test   rax,rax
   140014d52:	je     0x140014d5e
   140014d54:	cmp    QWORD PTR [rcx+0x70],rax
   140014d58:	jae    0x140014d5e
   140014d5a:	mov    QWORD PTR [rcx+0x70],rax
   140014d5e:	mov    rax,QWORD PTR [rip+0x34853]        # 0x1400495b8
   140014d65:	mov    r8,QWORD PTR [rax]
   140014d68:	cmp    rbx,r8
   140014d6b:	je     0x140014e13
   140014d71:	test   bpl,0x1
   140014d75:	je     0x140014ddb
   140014d77:	mov    rax,QWORD PTR [rcx+0x40]
   140014d7b:	mov    rdx,QWORD PTR [rax]
   140014d7e:	test   rdx,rdx
   140014d81:	je     0x140014ddb
   140014d83:	test   rbx,rbx
   140014d86:	js     0x140014e10
   140014d8c:	mov    rax,QWORD PTR [rcx+0x20]
   140014d90:	mov    rcx,QWORD PTR [rax]
   140014d93:	mov    rax,QWORD PTR [rdi+0x70]
   140014d97:	sub    rax,rcx
   140014d9a:	cmp    rbx,rax
   140014d9d:	jg     0x140014e10
   140014d9f:	sub    ecx,edx
   140014da1:	lea    edx,[rbx+rcx*1]
   140014da4:	mov    rcx,rdi
   140014da7:	call   QWORD PTR [rip+0x3470b]        # 0x1400494b8
   140014dad:	test   bpl,0x2
   140014db1:	je     0x140014e13
   140014db3:	mov    r8,QWORD PTR [rdi+0x48]
   140014db7:	cmp    QWORD PTR [r8],0x0
   140014dbb:	je     0x140014e13
   140014dbd:	mov    rax,QWORD PTR [rdi+0x60]
   140014dc1:	movsxd rdx,DWORD PTR [rax]
   140014dc4:	mov    rax,QWORD PTR [rdi+0x40]
   140014dc8:	mov    rcx,QWORD PTR [rax]
   140014dcb:	add    rdx,QWORD PTR [r8]
   140014dce:	mov    QWORD PTR [r8],rcx
   140014dd1:	mov    rax,QWORD PTR [rdi+0x60]
   140014dd5:	sub    edx,ecx
   140014dd7:	mov    DWORD PTR [rax],edx
   140014dd9:	jmp    0x140014e13
   140014ddb:	test   bpl,0x2
   140014ddf:	je     0x140014e10
   140014de1:	cmp    QWORD PTR [r9],0x0
   140014de5:	je     0x140014e10
   140014de7:	test   rbx,rbx
   140014dea:	js     0x140014e10
   140014dec:	mov    rax,QWORD PTR [rcx+0x20]
   140014df0:	mov    rcx,QWORD PTR [rax]
   140014df3:	mov    rax,QWORD PTR [rdi+0x70]
   140014df7:	sub    rax,rcx
   140014dfa:	cmp    rbx,rax
   140014dfd:	jg     0x140014e10
   140014dff:	sub    ecx,DWORD PTR [r9]
   140014e02:	lea    edx,[rbx+rcx*1]
   140014e05:	mov    rcx,rdi
   140014e08:	call   QWORD PTR [rip+0x346a2]        # 0x1400494b0
   140014e0e:	jmp    0x140014e13
   140014e10:	mov    rbx,r8
   140014e13:	and    QWORD PTR [rsi+0x8],0x0
   140014e18:	and    DWORD PTR [rsi+0x10],0x0
   140014e1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140014e21:	mov    QWORD PTR [rsi],rbx
   140014e24:	mov    rbx,QWORD PTR [rsp+0x30]
   140014e29:	mov    rax,rsi
   140014e2c:	mov    rsi,QWORD PTR [rsp+0x40]
   140014e31:	add    rsp,0x20
   140014e35:	pop    rdi
   140014e36:	ret    
   140014e37:	int3   
   140014e38:	mov    rax,rsp
   140014e3b:	push   rdi
   140014e3c:	sub    rsp,0x30
   140014e40:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014e49:	mov    QWORD PTR [rax+0x10],rbx
   140014e4d:	mov    QWORD PTR [rax+0x18],rbp
   140014e51:	mov    QWORD PTR [rax+0x20],rsi
   140014e55:	mov    esi,edx
   140014e57:	lea    rbp,[rcx-0x98]
   140014e5e:	lea    rdi,[rbp+0x98]
   140014e65:	mov    QWORD PTR [rax+0x8],rdi
   140014e69:	mov    rax,QWORD PTR [rdi-0x98]
   140014e70:	movsxd r8,DWORD PTR [rax+0x4]
   140014e74:	lea    rax,[rip+0x3c0ad]        # 0x140050f28
   140014e7b:	mov    QWORD PTR [r8+rdi*1-0x98],rax
   140014e83:	lea    rcx,[rdi-0x80]
   140014e87:	call   0x140014834
   140014e8c:	nop
   140014e8d:	lea    rcx,[rdi-0x80]
   140014e91:	call   QWORD PTR [rip+0x34629]        # 0x1400494c0
   140014e97:	mov    rcx,rdi
   140014e9a:	call   QWORD PTR [rip+0x34460]        # 0x140049300
   140014ea0:	test   sil,0x1
   140014ea4:	je     0x140014eaf
   140014ea6:	mov    rcx,rbp
   140014ea9:	call   QWORD PTR [rip+0x347c9]        # 0x140049678
   140014eaf:	mov    rax,rbp
   140014eb2:	mov    rbx,QWORD PTR [rsp+0x48]
   140014eb7:	mov    rbp,QWORD PTR [rsp+0x50]
   140014ebc:	mov    rsi,QWORD PTR [rsp+0x58]
   140014ec1:	add    rsp,0x30
   140014ec5:	pop    rdi
   140014ec6:	ret    
   140014ec7:	int3   
   140014ec8:	mov    QWORD PTR [rsp+0x8],rbx
   140014ecd:	push   rdi
   140014ece:	sub    rsp,0x20
   140014ed2:	mov    ebx,edx
   140014ed4:	mov    rdi,rcx
   140014ed7:	call   0x140014834
   140014edc:	test   bl,0x1
   140014edf:	je     0x140014eea
   140014ee1:	mov    rcx,rdi
   140014ee4:	call   QWORD PTR [rip+0x3478e]        # 0x140049678
   140014eea:	mov    rax,rdi
   140014eed:	mov    rbx,QWORD PTR [rsp+0x30]
   140014ef2:	add    rsp,0x20
   140014ef6:	pop    rdi
   140014ef7:	ret    
   140014ef8:	mov    rax,rsp
   140014efb:	push   rbp
   140014efc:	push   rsi
   140014efd:	push   rdi
   140014efe:	mov    rbp,rsp
   140014f01:	sub    rsp,0x60
   140014f05:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140014f0d:	mov    QWORD PTR [rax+0x18],rbx
   140014f11:	mov    rax,QWORD PTR [rip+0x532d8]        # 0x1400681f0
   140014f18:	xor    rax,rsp
   140014f1b:	mov    QWORD PTR [rbp-0x8],rax
   140014f1f:	mov    rbx,rdx
   140014f22:	xor    esi,esi
   140014f24:	mov    DWORD PTR [rbp-0x40],esi
   140014f27:	test   BYTE PTR [rcx+0x78],0x2
   140014f2b:	jne    0x140014f81
   140014f2d:	mov    rax,QWORD PTR [rcx+0x48]
   140014f31:	cmp    QWORD PTR [rax],rsi
   140014f34:	je     0x140014f81
   140014f36:	mov    r8,QWORD PTR [rcx+0x70]
   140014f3a:	cmp    r8,QWORD PTR [rax]
   140014f3d:	cmovb  r8,QWORD PTR [rax]
   140014f41:	mov    rax,QWORD PTR [rcx+0x28]
   140014f45:	mov    rdx,QWORD PTR [rax]
   140014f48:	lea    edi,[rsi+0xf]
   140014f4b:	mov    QWORD PTR [rbp-0x18],rdi
   140014f4f:	mov    QWORD PTR [rbp-0x20],rsi
   140014f53:	mov    BYTE PTR [rbp-0x30],sil
   140014f57:	sub    r8,rdx
   140014f5a:	lea    rcx,[rbp-0x30]
   140014f5e:	call   0x140005154
   140014f63:	nop
   140014f64:	mov    QWORD PTR [rbx+0x18],rdi
   140014f68:	mov    QWORD PTR [rbx+0x10],rsi
   140014f6c:	mov    BYTE PTR [rbx],sil
   140014f6f:	lea    rdx,[rbp-0x30]
   140014f73:	mov    rcx,rbx
   140014f76:	call   0x140004730
   140014f7b:	nop
   140014f7c:	jmp    0x140015002
   140014f81:	test   BYTE PTR [rcx+0x78],0x4
   140014f85:	jne    0x140014fd9
   140014f87:	mov    rdx,QWORD PTR [rcx+0x40]
   140014f8b:	cmp    QWORD PTR [rdx],rsi
   140014f8e:	je     0x140014fd9
   140014f90:	mov    rax,QWORD PTR [rcx+0x58]
   140014f94:	movsxd r8,DWORD PTR [rax]
   140014f97:	add    r8,QWORD PTR [rdx]
   140014f9a:	mov    rax,QWORD PTR [rcx+0x20]
   140014f9e:	mov    rdx,QWORD PTR [rax]
   140014fa1:	mov    edi,0xf
   140014fa6:	mov    QWORD PTR [rbp-0x18],rdi
   140014faa:	mov    QWORD PTR [rbp-0x20],rsi
   140014fae:	mov    BYTE PTR [rbp-0x30],sil
   140014fb2:	sub    r8,rdx
   140014fb5:	lea    rcx,[rbp-0x30]
   140014fb9:	call   0x140005154
   140014fbe:	nop
   140014fbf:	mov    QWORD PTR [rbx+0x18],rdi
   140014fc3:	mov    QWORD PTR [rbx+0x10],rsi
   140014fc7:	mov    BYTE PTR [rbx],sil
   140014fca:	lea    rdx,[rbp-0x30]
   140014fce:	mov    rcx,rbx
   140014fd1:	call   0x140004730
   140014fd6:	nop
   140014fd7:	jmp    0x140015002
   140014fd9:	mov    edi,0xf
   140014fde:	mov    QWORD PTR [rbp-0x18],rdi
   140014fe2:	mov    QWORD PTR [rbp-0x20],rsi
   140014fe6:	mov    BYTE PTR [rbp-0x30],sil
   140014fea:	mov    QWORD PTR [rbx+0x18],rdi
   140014fee:	mov    QWORD PTR [rbx+0x10],rsi
   140014ff2:	mov    BYTE PTR [rbx],sil
   140014ff5:	lea    rdx,[rbp-0x30]
   140014ff9:	mov    rcx,rbx
   140014ffc:	call   0x140004730
   140015001:	nop
   140015002:	cmp    QWORD PTR [rbp-0x18],0x10
   140015007:	jb     0x140015013
   140015009:	mov    rcx,QWORD PTR [rbp-0x30]
   14001500d:	call   QWORD PTR [rip+0x34665]        # 0x140049678
   140015013:	mov    rax,rbx
   140015016:	mov    rcx,QWORD PTR [rbp-0x8]
   14001501a:	xor    rcx,rsp
   14001501d:	call   0x14002b100
   140015022:	mov    rbx,QWORD PTR [rsp+0x90]
   14001502a:	add    rsp,0x60
   14001502e:	pop    rdi
   14001502f:	pop    rsi
   140015030:	pop    rbp
   140015031:	ret    
   140015032:	int3   
   140015033:	int3   
   140015034:	mov    QWORD PTR [rsp+0x8],rbx
   140015039:	push   rdi
   14001503a:	sub    rsp,0x20
   14001503e:	mov    rax,QWORD PTR [rcx+0x8]
   140015042:	mov    rdi,rdx
   140015045:	mov    rbx,rcx
   140015048:	cmp    rdx,rax
   14001504b:	jae    0x1400150e4
   140015051:	cmp    QWORD PTR [rcx],rdx
   140015054:	ja     0x1400150e4
   14001505a:	sub    rdi,QWORD PTR [rcx]
   14001505d:	mov    rdx,QWORD PTR [rcx+0x10]
   140015061:	sar    rdi,0x3
   140015065:	cmp    rax,rdx
   140015068:	jne    0x1400150cb
   14001506a:	sub    rax,QWORD PTR [rcx]
   14001506d:	movabs rcx,0x1ffffffffffffffe
   140015077:	sar    rax,0x3
   14001507b:	cmp    rax,rcx
   14001507e:	jbe    0x14001508e
   140015080:	lea    rcx,[rip+0x3b8d1]        # 0x140050958
   140015087:	call   QWORD PTR [rip+0x3450b]        # 0x140049598
   14001508d:	int3   
   14001508e:	sub    rdx,QWORD PTR [rbx]
   140015091:	inc    rax
   140015094:	sar    rdx,0x3
   140015098:	cmp    rax,rdx
   14001509b:	jbe    0x1400150cb
   14001509d:	mov    r8,rdx
   1400150a0:	movabs rcx,0x1fffffffffffffff
   1400150aa:	shr    r8,1
   1400150ad:	sub    rcx,r8
   1400150b0:	cmp    rcx,rdx
   1400150b3:	jae    0x1400150b9
   1400150b5:	xor    edx,edx
   1400150b7:	jmp    0x1400150bc
   1400150b9:	add    rdx,r8
   1400150bc:	cmp    rdx,rax
   1400150bf:	mov    rcx,rbx
   1400150c2:	cmovb  rdx,rax
   1400150c6:	call   0x140015170
   1400150cb:	mov    rdx,QWORD PTR [rbx+0x8]
   1400150cf:	test   rdx,rdx
   1400150d2:	je     0x14001515d
   1400150d8:	mov    rax,QWORD PTR [rbx]
   1400150db:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400150df:	mov    QWORD PTR [rdx],rcx
   1400150e2:	jmp    0x14001515d
   1400150e4:	mov    rdx,QWORD PTR [rcx+0x10]
   1400150e8:	cmp    rax,rdx
   1400150eb:	jne    0x14001514e
   1400150ed:	sub    rax,QWORD PTR [rcx]
   1400150f0:	movabs rcx,0x1ffffffffffffffe
   1400150fa:	sar    rax,0x3
   1400150fe:	cmp    rax,rcx
   140015101:	jbe    0x140015111
   140015103:	lea    rcx,[rip+0x3b84e]        # 0x140050958
   14001510a:	call   QWORD PTR [rip+0x34488]        # 0x140049598
   140015110:	int3   
   140015111:	sub    rdx,QWORD PTR [rbx]
   140015114:	inc    rax
   140015117:	sar    rdx,0x3
   14001511b:	cmp    rax,rdx
   14001511e:	jbe    0x14001514e
   140015120:	mov    r8,rdx
   140015123:	movabs rcx,0x1fffffffffffffff
   14001512d:	shr    r8,1
   140015130:	sub    rcx,r8
   140015133:	cmp    rcx,rdx
   140015136:	jae    0x14001513c
   140015138:	xor    edx,edx
   14001513a:	jmp    0x14001513f
   14001513c:	add    rdx,r8
   14001513f:	cmp    rdx,rax
   140015142:	mov    rcx,rbx
   140015145:	cmovb  rdx,rax
   140015149:	call   0x140015170
   14001514e:	mov    rcx,QWORD PTR [rbx+0x8]
   140015152:	test   rcx,rcx
   140015155:	je     0x14001515d
   140015157:	mov    rax,QWORD PTR [rdi]
   14001515a:	mov    QWORD PTR [rcx],rax
   14001515d:	add    QWORD PTR [rbx+0x8],0x8
   140015162:	mov    rbx,QWORD PTR [rsp+0x30]
   140015167:	add    rsp,0x20
   14001516b:	pop    rdi
   14001516c:	ret    
   14001516d:	int3   
   14001516e:	int3   
   14001516f:	int3   
   140015170:	push   r12
   140015172:	sub    rsp,0x40
   140015176:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001517f:	mov    QWORD PTR [rsp+0x50],rbx
   140015184:	mov    QWORD PTR [rsp+0x60],rsi
   140015189:	mov    QWORD PTR [rsp+0x68],rdi
   14001518e:	mov    rsi,rdx
   140015191:	mov    rdi,rcx
   140015194:	movabs rax,0x1fffffffffffffff
   14001519e:	cmp    rdx,rax
   1400151a1:	jbe    0x1400151b1
   1400151a3:	lea    rcx,[rip+0x3b7ae]        # 0x140050958
   1400151aa:	call   QWORD PTR [rip+0x343e8]        # 0x140049598
   1400151b0:	int3   
   1400151b1:	mov    rax,QWORD PTR [rcx+0x10]
   1400151b5:	sub    rax,QWORD PTR [rcx]
   1400151b8:	sar    rax,0x3
   1400151bc:	cmp    rax,rdx
   1400151bf:	jae    0x140015262
   1400151c5:	xor    ebx,ebx
   1400151c7:	mov    QWORD PTR [rsp+0x58],rbx
   1400151cc:	test   rdx,rdx
   1400151cf:	je     0x14001521e
   1400151d1:	mov    rcx,rdx
   1400151d4:	shl    rcx,0x3
   1400151d8:	call   QWORD PTR [rip+0x344ba]        # 0x140049698
   1400151de:	mov    rbx,rax
   1400151e1:	mov    QWORD PTR [rsp+0x58],rax
   1400151e6:	test   rax,rax
   1400151e9:	jne    0x14001521e
   1400151eb:	and    QWORD PTR [rsp+0x58],rax
   1400151f0:	lea    rdx,[rsp+0x58]
   1400151f5:	lea    rcx,[rsp+0x28]
   1400151fa:	call   QWORD PTR [rip+0x346d0]        # 0x1400498d0
   140015200:	lea    r11,[rip+0x34fd1]        # 0x14004a1d8
   140015207:	mov    QWORD PTR [rsp+0x28],r11
   14001520c:	lea    rdx,[rip+0x4e535]        # 0x140063748
   140015213:	lea    rcx,[rsp+0x28]
   140015218:	call   0x14002b560
   14001521d:	nop
   14001521e:	mov    r8,QWORD PTR [rdi+0x8]
   140015222:	sub    r8,QWORD PTR [rdi]
   140015225:	and    r8,0xfffffffffffffff8
   140015229:	mov    rdx,QWORD PTR [rdi]
   14001522c:	mov    rcx,rbx
   14001522f:	call   QWORD PTR [rip+0x343bb]        # 0x1400495f0
   140015235:	nop
   140015236:	mov    rcx,QWORD PTR [rdi]
   140015239:	mov    r12,QWORD PTR [rdi+0x8]
   14001523d:	sub    r12,rcx
   140015240:	sar    r12,0x3
   140015244:	test   rcx,rcx
   140015247:	je     0x14001524f
   140015249:	call   QWORD PTR [rip+0x34429]        # 0x140049678
   14001524f:	lea    rax,[rbx+rsi*8]
   140015253:	mov    QWORD PTR [rdi+0x10],rax
   140015257:	lea    rax,[rbx+r12*8]
   14001525b:	mov    QWORD PTR [rdi+0x8],rax
   14001525f:	mov    QWORD PTR [rdi],rbx
   140015262:	mov    rbx,QWORD PTR [rsp+0x50]
   140015267:	mov    rsi,QWORD PTR [rsp+0x60]
   14001526c:	mov    rdi,QWORD PTR [rsp+0x68]
   140015271:	add    rsp,0x40
   140015275:	pop    r12
   140015277:	ret    
   140015278:	mov    rax,rsp
   14001527b:	push   rsi
   14001527c:	push   rdi
   14001527d:	push   r12
   14001527f:	sub    rsp,0x80
   140015286:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001528f:	mov    QWORD PTR [rax+0x8],rbx
   140015293:	mov    QWORD PTR [rax+0x20],rbp
   140015297:	mov    rax,QWORD PTR [rip+0x52f52]        # 0x1400681f0
   14001529e:	xor    rax,rsp
   1400152a1:	mov    QWORD PTR [rsp+0x78],rax
   1400152a6:	mov    r12,r8
   1400152a9:	mov    rdi,rdx
   1400152ac:	mov    rsi,rcx
   1400152af:	mov    ebp,0x1
   1400152b4:	cmp    QWORD PTR [rdx+0x10],0x0
   1400152b9:	je     0x1400153b7
   1400152bf:	call   0x140022b18
   1400152c4:	mov    rbx,rax
   1400152c7:	mov    r9,QWORD PTR [rax]
   1400152ca:	mov    r8,rdi
   1400152cd:	mov    rdx,r12
   1400152d0:	mov    rcx,rax
   1400152d3:	call   QWORD PTR [r9+0x10]
   1400152d7:	jmp    0x1400152e9
   1400152d9:	mov    ecx,0x3e8
   1400152de:	call   QWORD PTR [rip+0x33e0c]        # 0x1400490f0
   1400152e4:	cmp    BYTE PTR [rsi],0x0
   1400152e7:	jne    0x1400152ef
   1400152e9:	cmp    BYTE PTR [rbx+0x50],0x0
   1400152ed:	je     0x1400152d9
   1400152ef:	mov    cl,BYTE PTR [rbx+0x50]
   1400152f2:	test   cl,cl
   1400152f4:	je     0x140015306
   1400152f6:	lea    rax,[rbx+0x28]
   1400152fa:	cmp    QWORD PTR [rax+0x18],0x10
   1400152ff:	jb     0x140015308
   140015301:	mov    rax,QWORD PTR [rax]
   140015304:	jmp    0x140015308
   140015306:	xor    eax,eax
   140015308:	test   rax,rax
   14001530b:	je     0x1400153a8
   140015311:	test   cl,cl
   140015313:	je     0x140015325
   140015315:	lea    rdi,[rbx+0x28]
   140015319:	cmp    QWORD PTR [rdi+0x18],0x10
   14001531e:	jb     0x140015327
   140015320:	mov    rdi,QWORD PTR [rdi]
   140015323:	jmp    0x140015327
   140015325:	xor    edi,edi
   140015327:	mov    QWORD PTR [rsp+0x40],0xf
   140015330:	and    QWORD PTR [rsp+0x38],0x0
   140015336:	mov    BYTE PTR [rsp+0x28],0x0
   14001533b:	mov    rcx,rdi
   14001533e:	call   QWORD PTR [rip+0x342c4]        # 0x140049608
   140015344:	mov    r8,rax
   140015347:	mov    rdx,rdi
   14001534a:	lea    rcx,[rsp+0x28]
   14001534f:	call   0x140005154
   140015354:	nop
   140015355:	lea    rdx,[rip+0x3bd8c]        # 0x1400510e8
   14001535c:	lea    rcx,[rsp+0x28]
   140015361:	call   0x140002f24
   140015366:	test   eax,eax
   140015368:	jne    0x140015395
   14001536a:	xor    ebp,ebp
   14001536c:	mov    rdx,r12
   14001536f:	lea    rcx,[rsp+0x50]
   140015374:	call   0x1400095c4
   140015379:	mov    rcx,rax
   14001537c:	call   0x14000a678
   140015381:	cmp    QWORD PTR [rsp+0x68],0x8
   140015387:	jb     0x140015395
   140015389:	mov    rcx,QWORD PTR [rsp+0x50]
   14001538e:	call   QWORD PTR [rip+0x342e4]        # 0x140049678
   140015394:	nop
   140015395:	cmp    QWORD PTR [rsp+0x40],0x10
   14001539b:	jb     0x1400153a8
   14001539d:	mov    rcx,QWORD PTR [rsp+0x28]
   1400153a2:	call   QWORD PTR [rip+0x342d0]        # 0x140049678
   1400153a8:	mov    r8,QWORD PTR [rbx]
   1400153ab:	mov    edx,0x1
   1400153b0:	mov    rcx,rbx
   1400153b3:	call   QWORD PTR [r8+0x8]
   1400153b7:	mov    eax,ebp
   1400153b9:	mov    rcx,QWORD PTR [rsp+0x78]
   1400153be:	xor    rcx,rsp
   1400153c1:	call   0x14002b100
   1400153c6:	lea    r11,[rsp+0x80]
   1400153ce:	mov    rbx,QWORD PTR [r11+0x20]
   1400153d2:	mov    rbp,QWORD PTR [r11+0x38]
   1400153d6:	mov    rsp,r11
   1400153d9:	pop    r12
   1400153db:	pop    rdi
   1400153dc:	pop    rsi
   1400153dd:	ret    
   1400153de:	int3   
   1400153df:	int3   
   1400153e0:	rex push rsi
   1400153e2:	push   rdi
   1400153e3:	push   r12
   1400153e5:	sub    rsp,0x40
   1400153e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400153f2:	mov    QWORD PTR [rsp+0x70],rbx
   1400153f7:	mov    QWORD PTR [rsp+0x78],rbp
   1400153fc:	mov    rax,QWORD PTR [rip+0x52ded]        # 0x1400681f0
   140015403:	xor    rax,rsp
   140015406:	mov    QWORD PTR [rsp+0x30],rax
   14001540b:	mov    rdi,r9
   14001540e:	mov    rbx,r8
   140015411:	mov    rsi,rdx
   140015414:	mov    rbp,rcx
   140015417:	mov    QWORD PTR [rsp+0x28],rdx
   14001541c:	mov    QWORD PTR [rcx+0x18],0x7
   140015424:	xor    r12d,r12d
   140015427:	mov    QWORD PTR [rcx+0x10],r12
   14001542b:	mov    WORD PTR [rcx],r12w
   14001542f:	or     r9,0xffffffffffffffff
   140015433:	xor    r8d,r8d
   140015436:	call   0x140009914
   14001543b:	mov    QWORD PTR [rbp+0x28],rbx
   14001543f:	mov    QWORD PTR [rbp+0x30],rdi
   140015443:	cmp    QWORD PTR [rsi+0x18],0x8
   140015448:	jb     0x140015453
   14001544a:	mov    rcx,QWORD PTR [rsi]
   14001544d:	call   QWORD PTR [rip+0x34225]        # 0x140049678
   140015453:	mov    QWORD PTR [rsi+0x18],0x7
   14001545b:	mov    QWORD PTR [rsi+0x10],r12
   14001545f:	mov    WORD PTR [rsi],r12w
   140015463:	mov    rax,rbp
   140015466:	mov    rcx,QWORD PTR [rsp+0x30]
   14001546b:	xor    rcx,rsp
   14001546e:	call   0x14002b100
   140015473:	mov    rbx,QWORD PTR [rsp+0x70]
   140015478:	mov    rbp,QWORD PTR [rsp+0x78]
   14001547d:	add    rsp,0x40
   140015481:	pop    r12
   140015483:	pop    rdi
   140015484:	pop    rsi
   140015485:	ret    
   140015486:	int3   
   140015487:	int3   
   140015488:	rex push rbx
   14001548a:	sub    rsp,0x20
   14001548e:	xor    eax,eax
   140015490:	mov    rbx,rdx
   140015493:	mov    QWORD PTR [rdx+0x18],0x7
   14001549b:	mov    QWORD PTR [rdx+0x10],rax
   14001549f:	mov    WORD PTR [rdx],ax
   1400154a2:	mov    rdx,rcx
   1400154a5:	mov    rcx,rbx
   1400154a8:	or     r9,0xffffffffffffffff
   1400154ac:	xor    r8d,r8d
   1400154af:	mov    DWORD PTR [rsp+0x38],eax
   1400154b3:	call   0x140009914
   1400154b8:	mov    rax,rbx
   1400154bb:	add    rsp,0x20
   1400154bf:	pop    rbx
   1400154c0:	ret    
   1400154c1:	int3   
   1400154c2:	int3   
   1400154c3:	int3   
   1400154c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400154c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400154ce:	push   rdi
   1400154cf:	sub    rsp,0x20
   1400154d3:	lea    rax,[rip+0x3bff6]        # 0x1400514d0
   1400154da:	mov    rbx,rcx
   1400154dd:	mov    QWORD PTR [rcx],rax
   1400154e0:	mov    rdi,QWORD PTR [rcx+0x8]
   1400154e4:	test   rdi,rdi
   1400154e7:	je     0x14001550a
   1400154e9:	mov    rsi,QWORD PTR [rcx+0x10]
   1400154ed:	jmp    0x1400154fb
   1400154ef:	mov    rcx,rdi
   1400154f2:	call   0x14000638c
   1400154f7:	add    rdi,0x28
   1400154fb:	cmp    rdi,rsi
   1400154fe:	jne    0x1400154ef
   140015500:	mov    rcx,QWORD PTR [rbx+0x8]
   140015504:	call   QWORD PTR [rip+0x3416e]        # 0x140049678
   14001550a:	and    QWORD PTR [rbx+0x8],0x0
   14001550f:	and    QWORD PTR [rbx+0x10],0x0
   140015514:	and    QWORD PTR [rbx+0x18],0x0
   140015519:	mov    rbx,QWORD PTR [rsp+0x30]
   14001551e:	mov    rsi,QWORD PTR [rsp+0x38]
   140015523:	add    rsp,0x20
   140015527:	pop    rdi
   140015528:	ret    
   140015529:	int3   
   14001552a:	int3   
   14001552b:	int3   
   14001552c:	mov    QWORD PTR [rsp+0x8],rbx
   140015531:	push   rdi
   140015532:	sub    rsp,0x20
   140015536:	mov    ebx,edx
   140015538:	mov    rdi,rcx
   14001553b:	call   0x1400154c4
   140015540:	test   bl,0x1
   140015543:	je     0x14001554e
   140015545:	mov    rcx,rdi
   140015548:	call   QWORD PTR [rip+0x3412a]        # 0x140049678
   14001554e:	mov    rax,rdi
   140015551:	mov    rbx,QWORD PTR [rsp+0x30]
   140015556:	add    rsp,0x20
   14001555a:	pop    rdi
   14001555b:	ret    
   14001555c:	mov    rax,rsp
   14001555f:	push   rbp
   140015560:	lea    rbp,[rax-0x5f]
   140015564:	sub    rsp,0xb0
   14001556b:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140015573:	mov    QWORD PTR [rax+0x8],rbx
   140015577:	mov    QWORD PTR [rax+0x10],rdi
   14001557b:	mov    rax,QWORD PTR [rip+0x52c6e]        # 0x1400681f0
   140015582:	xor    rax,rsp
   140015585:	mov    QWORD PTR [rbp+0x47],rax
   140015589:	xor    edi,edi
   14001558b:	cmp    QWORD PTR [rcx+0x10],rdi
   14001558f:	jne    0x140015671
   140015595:	lea    ebx,[rdi+0xf]
   140015598:	mov    QWORD PTR [rbp+0xf],rbx
   14001559c:	mov    QWORD PTR [rbp+0x7],rdi
   1400155a0:	mov    BYTE PTR [rbp-0x9],dil
   1400155a4:	lea    rcx,[rip+0x3bb6d]        # 0x140051118
   1400155ab:	call   QWORD PTR [rip+0x34057]        # 0x140049608
   1400155b1:	mov    r8,rax
   1400155b4:	lea    rdx,[rip+0x3bb5d]        # 0x140051118
   1400155bb:	lea    rcx,[rbp-0x9]
   1400155bf:	call   0x140005154
   1400155c4:	nop
   1400155c5:	mov    QWORD PTR [rbp-0x19],rbx
   1400155c9:	mov    QWORD PTR [rbp-0x21],rdi
   1400155cd:	mov    BYTE PTR [rbp-0x31],dil
   1400155d1:	lea    rcx,[rip+0x3bb70]        # 0x140051148
   1400155d8:	call   QWORD PTR [rip+0x3402a]        # 0x140049608
   1400155de:	mov    r8,rax
   1400155e1:	lea    rdx,[rip+0x3bb60]        # 0x140051148
   1400155e8:	lea    rcx,[rbp-0x31]
   1400155ec:	call   0x140005154
   1400155f1:	nop
   1400155f2:	mov    r8d,0xac
   1400155f8:	lea    rdx,[rbp-0x9]
   1400155fc:	lea    rcx,[rbp+0x1f]
   140015600:	call   0x14001231c
   140015605:	nop
   140015606:	mov    rcx,QWORD PTR [rip+0x55223]        # 0x14006a830
   14001560d:	mov    r9,QWORD PTR [rcx]
   140015610:	mov    r8,rax
   140015613:	lea    rdx,[rbp-0x31]
   140015617:	call   QWORD PTR [r9+0x80]
   14001561e:	nop
   14001561f:	cmp    QWORD PTR [rbp+0x37],0x10
   140015624:	jb     0x140015630
   140015626:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001562a:	call   QWORD PTR [rip+0x34048]        # 0x140049678
   140015630:	mov    QWORD PTR [rbp+0x37],rbx
   140015634:	mov    QWORD PTR [rbp+0x2f],rdi
   140015638:	mov    BYTE PTR [rbp+0x1f],dil
   14001563c:	cmp    QWORD PTR [rbp-0x19],0x10
   140015641:	jb     0x14001564d
   140015643:	mov    rcx,QWORD PTR [rbp-0x31]
   140015647:	call   QWORD PTR [rip+0x3402b]        # 0x140049678
   14001564d:	mov    QWORD PTR [rbp-0x19],rbx
   140015651:	mov    QWORD PTR [rbp-0x21],rdi
   140015655:	mov    BYTE PTR [rbp-0x31],dil
   140015659:	cmp    QWORD PTR [rbp+0xf],0x10
   14001565e:	jb     0x14001566a
   140015660:	mov    rcx,QWORD PTR [rbp-0x9]
   140015664:	call   QWORD PTR [rip+0x3400e]        # 0x140049678
   14001566a:	xor    al,al
   14001566c:	jmp    0x14001581d
   140015671:	cmp    QWORD PTR [rcx+0x38],rdi
   140015675:	jne    0x140015746
   14001567b:	mov    ebx,0xf
   140015680:	mov    QWORD PTR [rbp+0xf],rbx
   140015684:	mov    QWORD PTR [rbp+0x7],rdi
   140015688:	mov    BYTE PTR [rbp-0x9],dil
   14001568c:	lea    rcx,[rip+0x3ba85]        # 0x140051118
   140015693:	call   QWORD PTR [rip+0x33f6f]        # 0x140049608
   140015699:	mov    r8,rax
   14001569c:	lea    rdx,[rip+0x3ba75]        # 0x140051118
   1400156a3:	lea    rcx,[rbp-0x9]
   1400156a7:	call   0x140005154
   1400156ac:	nop
   1400156ad:	mov    QWORD PTR [rbp-0x19],rbx
   1400156b1:	mov    QWORD PTR [rbp-0x21],rdi
   1400156b5:	mov    BYTE PTR [rbp-0x31],dil
   1400156b9:	lea    rcx,[rip+0x3bab0]        # 0x140051170
   1400156c0:	call   QWORD PTR [rip+0x33f42]        # 0x140049608
   1400156c6:	mov    r8,rax
   1400156c9:	lea    rdx,[rip+0x3baa0]        # 0x140051170
   1400156d0:	lea    rcx,[rbp-0x31]
   1400156d4:	call   0x140005154
   1400156d9:	nop
   1400156da:	mov    r8d,0xb3
   1400156e0:	lea    rdx,[rbp-0x9]
   1400156e4:	lea    rcx,[rbp+0x1f]
   1400156e8:	call   0x14001231c
   1400156ed:	nop
   1400156ee:	mov    rcx,QWORD PTR [rip+0x5513b]        # 0x14006a830
   1400156f5:	mov    r9,QWORD PTR [rcx]
   1400156f8:	mov    r8,rax
   1400156fb:	lea    rdx,[rbp-0x31]
   1400156ff:	call   QWORD PTR [r9+0x80]
   140015706:	nop
   140015707:	cmp    QWORD PTR [rbp+0x37],0x10
   14001570c:	jb     0x140015718
   14001570e:	mov    rcx,QWORD PTR [rbp+0x1f]
   140015712:	call   QWORD PTR [rip+0x33f60]        # 0x140049678
   140015718:	mov    QWORD PTR [rbp+0x37],rbx
   14001571c:	mov    QWORD PTR [rbp+0x2f],rdi
   140015720:	mov    BYTE PTR [rbp+0x1f],dil
   140015724:	cmp    QWORD PTR [rbp-0x19],0x10
   140015729:	jb     0x140015735
   14001572b:	mov    rcx,QWORD PTR [rbp-0x31]
   14001572f:	call   QWORD PTR [rip+0x33f43]        # 0x140049678
   140015735:	mov    QWORD PTR [rbp-0x19],rbx
   140015739:	mov    QWORD PTR [rbp-0x21],rdi
   14001573d:	mov    BYTE PTR [rbp-0x31],dil
   140015741:	jmp    0x140015659
   140015746:	cmp    QWORD PTR [rcx+0x60],rdi
   14001574a:	jne    0x14001581b
   140015750:	mov    ebx,0xf
   140015755:	mov    QWORD PTR [rbp+0xf],rbx
   140015759:	mov    QWORD PTR [rbp+0x7],rdi
   14001575d:	mov    BYTE PTR [rbp-0x9],dil
   140015761:	lea    rcx,[rip+0x3b9b0]        # 0x140051118
   140015768:	call   QWORD PTR [rip+0x33e9a]        # 0x140049608
   14001576e:	mov    r8,rax
   140015771:	lea    rdx,[rip+0x3b9a0]        # 0x140051118
   140015778:	lea    rcx,[rbp-0x9]
   14001577c:	call   0x140005154
   140015781:	nop
   140015782:	mov    QWORD PTR [rbp-0x19],rbx
   140015786:	mov    QWORD PTR [rbp-0x21],rdi
   14001578a:	mov    BYTE PTR [rbp-0x31],dil
   14001578e:	lea    rcx,[rip+0x3b9eb]        # 0x140051180
   140015795:	call   QWORD PTR [rip+0x33e6d]        # 0x140049608
   14001579b:	mov    r8,rax
   14001579e:	lea    rdx,[rip+0x3b9db]        # 0x140051180
   1400157a5:	lea    rcx,[rbp-0x31]
   1400157a9:	call   0x140005154
   1400157ae:	nop
   1400157af:	mov    r8d,0xba
   1400157b5:	lea    rdx,[rbp-0x9]
   1400157b9:	lea    rcx,[rbp+0x1f]
   1400157bd:	call   0x14001231c
   1400157c2:	nop
   1400157c3:	mov    rcx,QWORD PTR [rip+0x55066]        # 0x14006a830
   1400157ca:	mov    r9,QWORD PTR [rcx]
   1400157cd:	mov    r8,rax
   1400157d0:	lea    rdx,[rbp-0x31]
   1400157d4:	call   QWORD PTR [r9+0x80]
   1400157db:	nop
   1400157dc:	cmp    QWORD PTR [rbp+0x37],0x10
   1400157e1:	jb     0x1400157ed
   1400157e3:	mov    rcx,QWORD PTR [rbp+0x1f]
   1400157e7:	call   QWORD PTR [rip+0x33e8b]        # 0x140049678
   1400157ed:	mov    QWORD PTR [rbp+0x37],rbx
   1400157f1:	mov    QWORD PTR [rbp+0x2f],rdi
   1400157f5:	mov    BYTE PTR [rbp+0x1f],dil
   1400157f9:	cmp    QWORD PTR [rbp-0x19],0x10
   1400157fe:	jb     0x14001580a
   140015800:	mov    rcx,QWORD PTR [rbp-0x31]
   140015804:	call   QWORD PTR [rip+0x33e6e]        # 0x140049678
   14001580a:	mov    QWORD PTR [rbp-0x19],rbx
   14001580e:	mov    QWORD PTR [rbp-0x21],rdi
   140015812:	mov    BYTE PTR [rbp-0x31],dil
   140015816:	jmp    0x140015659
   14001581b:	mov    al,0x1
   14001581d:	mov    rcx,QWORD PTR [rbp+0x47]
   140015821:	xor    rcx,rsp
   140015824:	call   0x14002b100
   140015829:	lea    r11,[rsp+0xb0]
   140015831:	mov    rbx,QWORD PTR [r11+0x10]
   140015835:	mov    rdi,QWORD PTR [r11+0x18]
   140015839:	mov    rsp,r11
   14001583c:	pop    rbp
   14001583d:	ret    
   14001583e:	int3   
   14001583f:	int3   
   140015840:	rex push rbx
   140015842:	sub    rsp,0x60
   140015846:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001584f:	mov    rax,QWORD PTR [rip+0x5299a]        # 0x1400681f0
   140015856:	xor    rax,rsp
   140015859:	mov    QWORD PTR [rsp+0x50],rax
   14001585e:	mov    rbx,rcx
   140015861:	lea    rcx,[rsp+0x28]
   140015866:	call   0x14001ad98
   14001586b:	nop
   14001586c:	mov    rdx,rax
   14001586f:	mov    rcx,rbx
   140015872:	call   0x140009880
   140015877:	nop
   140015878:	cmp    QWORD PTR [rsp+0x40],0x8
   14001587e:	jb     0x14001588b
   140015880:	mov    rcx,QWORD PTR [rsp+0x28]
   140015885:	call   QWORD PTR [rip+0x33ded]        # 0x140049678
   14001588b:	lea    rcx,[rsp+0x28]
   140015890:	call   0x14001b358
   140015895:	nop
   140015896:	lea    rcx,[rbx+0x28]
   14001589a:	mov    rdx,rax
   14001589d:	call   0x140009880
   1400158a2:	nop
   1400158a3:	cmp    QWORD PTR [rsp+0x40],0x8
   1400158a9:	jb     0x1400158b6
   1400158ab:	mov    rcx,QWORD PTR [rsp+0x28]
   1400158b0:	call   QWORD PTR [rip+0x33dc2]        # 0x140049678
   1400158b6:	lea    rcx,[rsp+0x28]
   1400158bb:	call   0x14000e0b0
   1400158c0:	nop
   1400158c1:	lea    rcx,[rbx+0x50]
   1400158c5:	mov    rdx,rax
   1400158c8:	call   0x140004730
   1400158cd:	nop
   1400158ce:	cmp    QWORD PTR [rsp+0x40],0x10
   1400158d4:	jb     0x1400158e1
   1400158d6:	mov    rcx,QWORD PTR [rsp+0x28]
   1400158db:	call   QWORD PTR [rip+0x33d97]        # 0x140049678
   1400158e1:	mov    rcx,rbx
   1400158e4:	call   0x14001555c
   1400158e9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400158ee:	xor    rcx,rsp
   1400158f1:	call   0x14002b100
   1400158f6:	add    rsp,0x60
   1400158fa:	pop    rbx
   1400158fb:	ret    
   1400158fc:	mov    rax,rsp
   1400158ff:	push   rbp
   140015900:	push   rdi
   140015901:	push   r12
   140015903:	mov    rbp,rsp
   140015906:	sub    rsp,0x80
   14001590d:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140015915:	mov    QWORD PTR [rax+0x18],rbx
   140015919:	mov    QWORD PTR [rax+0x20],rsi
   14001591d:	mov    rax,QWORD PTR [rip+0x528cc]        # 0x1400681f0
   140015924:	xor    rax,rsp
   140015927:	mov    QWORD PTR [rbp-0x8],rax
   14001592b:	mov    rax,rdx
   14001592e:	mov    r12,rcx
   140015931:	and    DWORD PTR [rbp-0x40],0x0
   140015935:	and    QWORD PTR [rbp-0x60],0x0
   14001593a:	and    QWORD PTR [rbp-0x58],0x0
   14001593f:	and    QWORD PTR [rbp-0x50],0x0
   140015944:	xor    r8d,r8d
   140015947:	lea    rdx,[rbp-0x60]
   14001594b:	mov    rcx,rax
   14001594e:	call   0x14000aef8
   140015953:	mov    rdi,QWORD PTR [rip+0x54e7e]        # 0x14006a7d8
   14001595a:	test   rdi,rdi
   14001595d:	jne    0x1400159dc
   14001595f:	lea    ecx,[rdi+0x28]
   140015962:	call   QWORD PTR [rip+0x33d30]        # 0x140049698
   140015968:	mov    rdi,rax
   14001596b:	mov    QWORD PTR [rbp-0x40],rax
   14001596f:	test   rax,rax
   140015972:	je     0x1400159d3
   140015974:	lea    rax,[rip+0x3bb55]        # 0x1400514d0
   14001597b:	mov    QWORD PTR [rdi],rax
   14001597e:	and    QWORD PTR [rdi+0x8],0x0
   140015983:	and    QWORD PTR [rdi+0x10],0x0
   140015988:	and    QWORD PTR [rdi+0x18],0x0
   14001598d:	lea    rcx,[rdi+0x8]
   140015991:	call   0x140007834
   140015996:	mov    rbx,QWORD PTR [rbp-0x60]
   14001599a:	jmp    0x1400159cb
   14001599c:	mov    rdx,rbx
   14001599f:	lea    rcx,[rbp-0x30]
   1400159a3:	call   0x140009474
   1400159a8:	nop
   1400159a9:	mov    rdx,rax
   1400159ac:	lea    rcx,[rdi+0x8]
   1400159b0:	call   0x1400077b0
   1400159b5:	nop
   1400159b6:	cmp    QWORD PTR [rbp-0x18],0x10
   1400159bb:	jb     0x1400159c7
   1400159bd:	mov    rcx,QWORD PTR [rbp-0x30]
   1400159c1:	call   QWORD PTR [rip+0x33cb1]        # 0x140049678
   1400159c7:	add    rbx,0x28
   1400159cb:	cmp    rbx,QWORD PTR [rbp-0x58]
   1400159cf:	jne    0x14001599c
   1400159d1:	jmp    0x1400159d5
   1400159d3:	xor    edi,edi
   1400159d5:	mov    QWORD PTR [rip+0x54dfc],rdi        # 0x14006a7d8
   1400159dc:	mov    ebx,0xf
   1400159e1:	mov    QWORD PTR [rbp-0x18],rbx
   1400159e5:	and    QWORD PTR [rbp-0x20],0x0
   1400159ea:	mov    BYTE PTR [rbp-0x30],0x0
   1400159ee:	lea    rcx,[rip+0x3b3a7]        # 0x140050d9c
   1400159f5:	call   QWORD PTR [rip+0x33c0d]        # 0x140049608
   1400159fb:	mov    r8,rax
   1400159fe:	lea    rdx,[rip+0x3b397]        # 0x140050d9c
   140015a05:	lea    rcx,[rbp-0x30]
   140015a09:	call   0x140005154
   140015a0e:	nop
   140015a0f:	lea    r8,[rbp-0x30]
   140015a13:	mov    rdx,r12
   140015a16:	mov    rcx,rdi
   140015a19:	call   0x14000ff64
   140015a1e:	nop
   140015a1f:	cmp    QWORD PTR [rbp-0x18],0x10
   140015a24:	jb     0x140015a30
   140015a26:	mov    rcx,QWORD PTR [rbp-0x30]
   140015a2a:	call   QWORD PTR [rip+0x33c48]        # 0x140049678
   140015a30:	mov    QWORD PTR [rbp-0x18],rbx
   140015a34:	and    QWORD PTR [rbp-0x20],0x0
   140015a39:	mov    BYTE PTR [rbp-0x30],0x0
   140015a3d:	lea    rcx,[rbp-0x60]
   140015a41:	call   0x14000f64c
   140015a46:	mov    rax,r12
   140015a49:	mov    rcx,QWORD PTR [rbp-0x8]
   140015a4d:	xor    rcx,rsp
   140015a50:	call   0x14002b100
   140015a55:	lea    r11,[rsp+0x80]
   140015a5d:	mov    rbx,QWORD PTR [r11+0x30]
   140015a61:	mov    rsi,QWORD PTR [r11+0x38]
   140015a65:	mov    rsp,r11
   140015a68:	pop    r12
   140015a6a:	pop    rdi
   140015a6b:	pop    rbp
   140015a6c:	ret    
   140015a6d:	int3   
   140015a6e:	int3   
   140015a6f:	int3   
   140015a70:	rex push rbp
   140015a72:	push   rbx
   140015a73:	push   rsi
   140015a74:	push   rdi
   140015a75:	push   r12
   140015a77:	push   r13
   140015a79:	push   r14
   140015a7b:	push   r15
   140015a7d:	lea    rbp,[rsp-0x1f]
   140015a82:	sub    rsp,0xe8
   140015a89:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   140015a91:	mov    rax,QWORD PTR [rip+0x52758]        # 0x1400681f0
   140015a98:	xor    rax,rsp
   140015a9b:	mov    QWORD PTR [rbp+0xf],rax
   140015a9f:	mov    rdi,r9
   140015aa2:	mov    r14,r8
   140015aa5:	mov    r13,rdx
   140015aa8:	mov    r12,rcx
   140015aab:	mov    QWORD PTR [rbp-0x49],r9
   140015aaf:	xor    r15d,r15d
   140015ab2:	mov    bl,r15b
   140015ab5:	lea    rcx,[rdx+0x88]
   140015abc:	lea    rdx,[rip+0x3b6cd]        # 0x140051190
   140015ac3:	call   0x140002f24
   140015ac8:	test   eax,eax
   140015aca:	jne    0x140015d57
   140015ad0:	call   0x140022b18
   140015ad5:	mov    rsi,rax
   140015ad8:	test   rax,rax
   140015adb:	je     0x140015d57
   140015ae1:	mov    r10,QWORD PTR [rax]
   140015ae4:	lea    r9,[r13+0x60]
   140015ae8:	lea    rdx,[r14+0x50]
   140015aec:	mov    r8,rdi
   140015aef:	mov    rcx,rax
   140015af2:	call   QWORD PTR [r10+0x18]
   140015af6:	test   al,al
   140015af8:	je     0x140015d48
   140015afe:	cmp    BYTE PTR [rsi+0x50],r15b
   140015b02:	je     0x140015b14
   140015b04:	lea    rbx,[rsi+0x28]
   140015b08:	cmp    QWORD PTR [rbx+0x18],0x10
   140015b0d:	jb     0x140015b17
   140015b0f:	mov    rbx,QWORD PTR [rbx]
   140015b12:	jmp    0x140015b17
   140015b14:	mov    rbx,r15
   140015b17:	mov    QWORD PTR [rbp-0x29],0xf
   140015b1f:	mov    QWORD PTR [rbp-0x31],r15
   140015b23:	mov    BYTE PTR [rbp-0x41],r15b
   140015b27:	mov    rcx,rbx
   140015b2a:	call   QWORD PTR [rip+0x33ad8]        # 0x140049608
   140015b30:	mov    r8,rax
   140015b33:	mov    rdx,rbx
   140015b36:	lea    rcx,[rbp-0x41]
   140015b3a:	call   0x140005154
   140015b3f:	nop
   140015b40:	mov    ebx,0xf
   140015b45:	mov    QWORD PTR [rbp-0x61],rbx
   140015b49:	mov    QWORD PTR [rbp-0x69],r15
   140015b4d:	mov    BYTE PTR [rbp-0x79],r15b
   140015b51:	lea    rcx,[rip+0x3ad9d]        # 0x1400508f5
   140015b58:	call   QWORD PTR [rip+0x33aaa]        # 0x140049608
   140015b5e:	mov    r8,rax
   140015b61:	lea    rdx,[rip+0x3ad8d]        # 0x1400508f5
   140015b68:	lea    rcx,[rbp-0x79]
   140015b6c:	call   0x140005154
   140015b71:	nop
   140015b72:	lea    r8,[rbp-0x41]
   140015b76:	lea    rdx,[rip+0x3b61b]        # 0x140051198
   140015b7d:	lea    rcx,[rbp-0x19]
   140015b81:	call   0x14001464c
   140015b86:	nop
   140015b87:	mov    rcx,QWORD PTR [rip+0x54ca2]        # 0x14006a830
   140015b8e:	mov    r9,QWORD PTR [rcx]
   140015b91:	lea    r8,[rbp-0x79]
   140015b95:	mov    rdx,rax
   140015b98:	call   QWORD PTR [r9+0x80]
   140015b9f:	nop
   140015ba0:	cmp    QWORD PTR [rbp-0x1],0x10
   140015ba5:	jb     0x140015bb1
   140015ba7:	mov    rcx,QWORD PTR [rbp-0x19]
   140015bab:	call   QWORD PTR [rip+0x33ac7]        # 0x140049678
   140015bb1:	mov    QWORD PTR [rbp-0x1],rbx
   140015bb5:	mov    QWORD PTR [rbp-0x9],r15
   140015bb9:	mov    BYTE PTR [rbp-0x19],r15b
   140015bbd:	cmp    QWORD PTR [rbp-0x61],0x10
   140015bc2:	jb     0x140015bce
   140015bc4:	mov    rcx,QWORD PTR [rbp-0x79]
   140015bc8:	call   QWORD PTR [rip+0x33aaa]        # 0x140049678
   140015bce:	call   QWORD PTR [rip+0x33934]        # 0x140049508
   140015bd4:	mov    rbx,rax
   140015bd7:	mov    QWORD PTR [rsp+0x30],rax
   140015bdc:	call   QWORD PTR [rip+0x33746]        # 0x140049328
   140015be2:	mov    rcx,rax
   140015be5:	call   QWORD PTR [rip+0x3375d]        # 0x140049348
   140015beb:	nop
   140015bec:	lea    r15,[rip+0x3ad09]        # 0x1400508fc
   140015bf3:	mov    rcx,r15
   140015bf6:	call   QWORD PTR [rip+0x33a0c]        # 0x140049608
   140015bfc:	add    rax,r15
   140015bff:	mov    QWORD PTR [rsp+0x20],r15
   140015c04:	mov    QWORD PTR [rsp+0x28],rax
   140015c09:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140015c0e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140015c14:	mov    QWORD PTR [rsp+0x20],rbx
   140015c19:	mov    rcx,rbx
   140015c1c:	call   QWORD PTR [rip+0x33726]        # 0x140049348
   140015c22:	lea    r8,[rsp+0x20]
   140015c27:	lea    rdx,[rip+0x3b58e]        # 0x1400511bc
   140015c2e:	lea    rcx,[rbp-0x79]
   140015c32:	call   0x140018a78
   140015c37:	lea    r8,[rsp+0x40]
   140015c3c:	mov    rdx,rax
   140015c3f:	lea    rcx,[rbp-0x41]
   140015c43:	call   0x140018b50
   140015c48:	nop
   140015c49:	xor    r15d,r15d
   140015c4c:	test   rbx,rbx
   140015c4f:	je     0x140015c6c
   140015c51:	mov    rcx,rbx
   140015c54:	call   QWORD PTR [rip+0x336e6]        # 0x140049340
   140015c5a:	test   rax,rax
   140015c5d:	je     0x140015c6c
   140015c5f:	mov    r8,QWORD PTR [rax]
   140015c62:	lea    edx,[r15+0x1]
   140015c66:	mov    rcx,rax
   140015c69:	call   QWORD PTR [r8]
   140015c6c:	call   QWORD PTR [rip+0x33896]        # 0x140049508
   140015c72:	mov    rbx,rax
   140015c75:	mov    QWORD PTR [rsp+0x30],rax
   140015c7a:	call   QWORD PTR [rip+0x336a8]        # 0x140049328
   140015c80:	mov    rcx,rax
   140015c83:	call   QWORD PTR [rip+0x336bf]        # 0x140049348
   140015c89:	nop
   140015c8a:	lea    rcx,[rip+0x3ac64]        # 0x1400508f5
   140015c91:	call   QWORD PTR [rip+0x33971]        # 0x140049608
   140015c97:	lea    rcx,[rip+0x3ac57]        # 0x1400508f5
   140015c9e:	add    rax,rcx
   140015ca1:	mov    QWORD PTR [rsp+0x20],rcx
   140015ca6:	mov    QWORD PTR [rsp+0x28],rax
   140015cab:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140015cb0:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140015cb6:	mov    QWORD PTR [rsp+0x20],rbx
   140015cbb:	mov    rcx,rbx
   140015cbe:	call   QWORD PTR [rip+0x33684]        # 0x140049348
   140015cc4:	lea    r8,[rsp+0x20]
   140015cc9:	lea    rdx,[rip+0x3b4f0]        # 0x1400511c0
   140015cd0:	lea    rcx,[rbp-0x79]
   140015cd4:	call   0x140018a78
   140015cd9:	lea    r8,[rsp+0x40]
   140015cde:	mov    rdx,rax
   140015ce1:	lea    rcx,[rbp-0x41]
   140015ce5:	call   0x140018b50
   140015cea:	nop
   140015ceb:	test   rbx,rbx
   140015cee:	je     0x140015d0c
   140015cf0:	mov    rcx,rbx
   140015cf3:	call   QWORD PTR [rip+0x33647]        # 0x140049340
   140015cf9:	test   rax,rax
   140015cfc:	je     0x140015d0c
   140015cfe:	mov    r8,QWORD PTR [rax]
   140015d01:	mov    edx,0x1
   140015d06:	mov    rcx,rax
   140015d09:	call   QWORD PTR [r8]
   140015d0c:	cmp    QWORD PTR [rbp-0x31],r15
   140015d10:	je     0x140015d35
   140015d12:	lea    rdx,[rbp-0x41]
   140015d16:	mov    rcx,r12
   140015d19:	call   0x14001f3d8
   140015d1e:	mov    rdx,r12
   140015d21:	mov    rcx,r13
   140015d24:	call   0x14001f998
   140015d29:	lea    rdx,[r14+0x28]
   140015d2d:	mov    rcx,r12
   140015d30:	call   0x1400020e8
   140015d35:	mov    bl,0x1
   140015d37:	cmp    QWORD PTR [rbp-0x29],0x10
   140015d3c:	jb     0x140015d48
   140015d3e:	mov    rcx,QWORD PTR [rbp-0x41]
   140015d42:	call   QWORD PTR [rip+0x33930]        # 0x140049678
   140015d48:	mov    rax,QWORD PTR [rsi]
   140015d4b:	mov    edx,0x1
   140015d50:	mov    rcx,rsi
   140015d53:	call   QWORD PTR [rax+0x8]
   140015d56:	nop
   140015d57:	cmp    QWORD PTR [rdi+0x18],0x10
   140015d5c:	jb     0x140015d67
   140015d5e:	mov    rcx,QWORD PTR [rdi]
   140015d61:	call   QWORD PTR [rip+0x33911]        # 0x140049678
   140015d67:	mov    QWORD PTR [rdi+0x18],0xf
   140015d6f:	mov    QWORD PTR [rdi+0x10],r15
   140015d73:	mov    BYTE PTR [rdi],r15b
   140015d76:	mov    al,bl
   140015d78:	mov    rcx,QWORD PTR [rbp+0xf]
   140015d7c:	xor    rcx,rsp
   140015d7f:	call   0x14002b100
   140015d84:	add    rsp,0xe8
   140015d8b:	pop    r15
   140015d8d:	pop    r14
   140015d8f:	pop    r13
   140015d91:	pop    r12
   140015d93:	pop    rdi
   140015d94:	pop    rsi
   140015d95:	pop    rbx
   140015d96:	pop    rbp
   140015d97:	ret    
   140015d98:	mov    rax,rsp
   140015d9b:	push   rbp
   140015d9c:	mov    rbp,rsp
   140015d9f:	sub    rsp,0x60
   140015da3:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140015dab:	mov    QWORD PTR [rax+0x10],rbx
   140015daf:	mov    QWORD PTR [rax+0x18],rsi
   140015db3:	mov    rax,QWORD PTR [rip+0x52436]        # 0x1400681f0
   140015dba:	xor    rax,rsp
   140015dbd:	mov    QWORD PTR [rbp-0x10],rax
   140015dc1:	mov    rbx,rcx
   140015dc4:	mov    esi,0xf
   140015dc9:	mov    QWORD PTR [rbp-0x20],rsi
   140015dcd:	and    QWORD PTR [rbp-0x28],0x0
   140015dd2:	mov    BYTE PTR [rbp-0x38],0x0
   140015dd6:	lea    rcx,[rip+0x3b3e7]        # 0x1400511c4
   140015ddd:	call   QWORD PTR [rip+0x33825]        # 0x140049608
   140015de3:	mov    r8,rax
   140015de6:	lea    rdx,[rip+0x3b3d7]        # 0x1400511c4
   140015ded:	lea    rcx,[rbp-0x38]
   140015df1:	call   0x140005154
   140015df6:	nop
   140015df7:	lea    rdx,[rbp-0x38]
   140015dfb:	mov    rcx,rbx
   140015dfe:	call   0x14000f314
   140015e03:	nop
   140015e04:	cmp    QWORD PTR [rbp-0x20],0x10
   140015e09:	jb     0x140015e15
   140015e0b:	mov    rcx,QWORD PTR [rbp-0x38]
   140015e0f:	call   QWORD PTR [rip+0x33863]        # 0x140049678
   140015e15:	mov    QWORD PTR [rbp-0x20],rsi
   140015e19:	and    QWORD PTR [rbp-0x28],0x0
   140015e1e:	mov    BYTE PTR [rbp-0x38],0x0
   140015e22:	lea    rcx,[rip+0x3b3a3]        # 0x1400511cc
   140015e29:	call   QWORD PTR [rip+0x337d9]        # 0x140049608
   140015e2f:	mov    r8,rax
   140015e32:	lea    rdx,[rip+0x3b393]        # 0x1400511cc
   140015e39:	lea    rcx,[rbp-0x38]
   140015e3d:	call   0x140005154
   140015e42:	nop
   140015e43:	lea    rdx,[rbp-0x38]
   140015e47:	mov    rcx,rbx
   140015e4a:	call   0x14000f314
   140015e4f:	nop
   140015e50:	cmp    QWORD PTR [rbp-0x20],0x10
   140015e55:	jb     0x140015e61
   140015e57:	mov    rcx,QWORD PTR [rbp-0x38]
   140015e5b:	call   QWORD PTR [rip+0x33817]        # 0x140049678
   140015e61:	mov    QWORD PTR [rbp-0x20],rsi
   140015e65:	and    QWORD PTR [rbp-0x28],0x0
   140015e6a:	mov    BYTE PTR [rbp-0x38],0x0
   140015e6e:	lea    rcx,[rip+0x3b35f]        # 0x1400511d4
   140015e75:	call   QWORD PTR [rip+0x3378d]        # 0x140049608
   140015e7b:	mov    r8,rax
   140015e7e:	lea    rdx,[rip+0x3b34f]        # 0x1400511d4
   140015e85:	lea    rcx,[rbp-0x38]
   140015e89:	call   0x140005154
   140015e8e:	nop
   140015e8f:	lea    rdx,[rbp-0x38]
   140015e93:	mov    rcx,rbx
   140015e96:	call   0x14000f314
   140015e9b:	nop
   140015e9c:	cmp    QWORD PTR [rbp-0x20],0x10
   140015ea1:	jb     0x140015ead
   140015ea3:	mov    rcx,QWORD PTR [rbp-0x38]
   140015ea7:	call   QWORD PTR [rip+0x337cb]        # 0x140049678
   140015ead:	mov    al,0x1
   140015eaf:	mov    rcx,QWORD PTR [rbp-0x10]
   140015eb3:	xor    rcx,rsp
   140015eb6:	call   0x14002b100
   140015ebb:	lea    r11,[rsp+0x60]
   140015ec0:	mov    rbx,QWORD PTR [r11+0x18]
   140015ec4:	mov    rsi,QWORD PTR [r11+0x20]
   140015ec8:	mov    rsp,r11
   140015ecb:	pop    rbp
   140015ecc:	ret    
   140015ecd:	int3   
   140015ece:	int3   
   140015ecf:	int3   
   140015ed0:	mov    rax,rsp
   140015ed3:	push   rbp
   140015ed4:	mov    rbp,rsp
   140015ed7:	sub    rsp,0x80
   140015ede:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140015ee6:	mov    QWORD PTR [rax+0x10],rbx
   140015eea:	mov    QWORD PTR [rax+0x18],rdi
   140015eee:	mov    rax,QWORD PTR [rip+0x522fb]        # 0x1400681f0
   140015ef5:	xor    rax,rsp
   140015ef8:	mov    QWORD PTR [rbp-0x8],rax
   140015efc:	mov    rdi,rcx
   140015eff:	and    QWORD PTR [rbp-0x60],0x0
   140015f04:	and    QWORD PTR [rbp-0x58],0x0
   140015f09:	and    QWORD PTR [rbp-0x50],0x0
   140015f0e:	lea    rcx,[rbp-0x60]
   140015f12:	call   0x140007834
   140015f17:	mov    rbx,QWORD PTR [rdi+0xb0]
   140015f1e:	jmp    0x140015f9b
   140015f20:	lea    rcx,[rip+0x3a9d1]        # 0x1400508f8
   140015f27:	call   QWORD PTR [rip+0x336db]        # 0x140049608
   140015f2d:	mov    r8,rax
   140015f30:	lea    rdx,[rip+0x3a9c1]        # 0x1400508f8
   140015f37:	mov    rcx,rbx
   140015f3a:	call   0x1400049b8
   140015f3f:	lea    r8,[rax+0x1]
   140015f43:	or     r9,0xffffffffffffffff
   140015f47:	lea    rdx,[rbp-0x30]
   140015f4b:	mov    rcx,rbx
   140015f4e:	call   0x140002e90
   140015f53:	nop
   140015f54:	lea    rdx,[rip+0x3baad]        # 0x140051a08
   140015f5b:	lea    rcx,[rbp-0x30]
   140015f5f:	call   0x140002f24
   140015f64:	test   eax,eax
   140015f66:	je     0x140015f75
   140015f68:	lea    rdx,[rbp-0x30]
   140015f6c:	lea    rcx,[rbp-0x60]
   140015f70:	call   0x140010bd4
   140015f75:	add    rbx,0x50
   140015f79:	cmp    QWORD PTR [rbp-0x18],0x10
   140015f7e:	jb     0x140015f8a
   140015f80:	mov    rcx,QWORD PTR [rbp-0x30]
   140015f84:	call   QWORD PTR [rip+0x336ee]        # 0x140049678
   140015f8a:	mov    QWORD PTR [rbp-0x18],0xf
   140015f92:	and    QWORD PTR [rbp-0x20],0x0
   140015f97:	mov    BYTE PTR [rbp-0x30],0x0
   140015f9b:	cmp    rbx,QWORD PTR [rdi+0xb8]
   140015fa2:	jne    0x140015f20
   140015fa8:	mov    rbx,QWORD PTR [rip+0x54829]        # 0x14006a7d8
   140015faf:	test   rbx,rbx
   140015fb2:	jne    0x140015ff6
   140015fb4:	lea    ecx,[rbx+0x28]
   140015fb7:	call   QWORD PTR [rip+0x336db]        # 0x140049698
   140015fbd:	mov    rbx,rax
   140015fc0:	mov    QWORD PTR [rbp-0x40],rax
   140015fc4:	test   rax,rax
   140015fc7:	je     0x140015fed
   140015fc9:	lea    rax,[rip+0x3b500]        # 0x1400514d0
   140015fd0:	mov    QWORD PTR [rbx],rax
   140015fd3:	lea    rcx,[rbx+0x8]
   140015fd7:	and    QWORD PTR [rcx],0x0
   140015fdb:	and    QWORD PTR [rcx+0x8],0x0
   140015fe0:	and    QWORD PTR [rcx+0x10],0x0
   140015fe5:	call   0x140007834
   140015fea:	nop
   140015feb:	jmp    0x140015fef
   140015fed:	xor    ebx,ebx
   140015fef:	mov    QWORD PTR [rip+0x547e2],rbx        # 0x14006a7d8
   140015ff6:	lea    rdx,[rbp-0x60]
   140015ffa:	mov    rcx,rbx
   140015ffd:	call   0x14000fd60
   140016002:	nop
   140016003:	mov    rbx,QWORD PTR [rbp-0x60]
   140016007:	test   rbx,rbx
   14001600a:	je     0x140016030
   14001600c:	mov    rdi,rbx
   14001600f:	cmp    rbx,QWORD PTR [rbp-0x58]
   140016013:	je     0x140016027
   140016015:	mov    rcx,rdi
   140016018:	call   0x14000638c
   14001601d:	add    rdi,0x28
   140016021:	cmp    rdi,QWORD PTR [rbp-0x58]
   140016025:	jne    0x140016015
   140016027:	mov    rcx,rbx
   14001602a:	call   QWORD PTR [rip+0x33648]        # 0x140049678
   140016030:	mov    al,0x1
   140016032:	mov    rcx,QWORD PTR [rbp-0x8]
   140016036:	xor    rcx,rsp
   140016039:	call   0x14002b100
   14001603e:	lea    r11,[rsp+0x80]
   140016046:	mov    rbx,QWORD PTR [r11+0x18]
   14001604a:	mov    rdi,QWORD PTR [r11+0x20]
   14001604e:	mov    rsp,r11
   140016051:	pop    rbp
   140016052:	ret    
   140016053:	int3   
   140016054:	mov    rax,rsp
   140016057:	push   rbp
   140016058:	push   rdi
   140016059:	push   r13
   14001605b:	lea    rbp,[rax-0x5f]
   14001605f:	sub    rsp,0xb0
   140016066:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   14001606e:	mov    QWORD PTR [rax+0x18],rbx
   140016072:	mov    QWORD PTR [rax+0x20],rsi
   140016076:	mov    rax,QWORD PTR [rip+0x52173]        # 0x1400681f0
   14001607d:	xor    rax,rsp
   140016080:	mov    QWORD PTR [rbp+0x37],rax
   140016084:	mov    rsi,rdx
   140016087:	mov    rdi,rcx
   14001608a:	mov    bl,0x1
   14001608c:	add    rcx,0x88
   140016093:	lea    rdx,[rip+0x3b0f6]        # 0x140051190
   14001609a:	call   0x140002f24
   14001609f:	test   eax,eax
   1400160a1:	jne    0x1400161ef
   1400160a7:	mov    rcx,rdi
   1400160aa:	call   0x140015ed0
   1400160af:	neg    al
   1400160b1:	sbb    cl,cl
   1400160b3:	and    bl,cl
   1400160b5:	mov    r13d,0xf
   1400160bb:	mov    QWORD PTR [rbp-0x29],r13
   1400160bf:	and    QWORD PTR [rbp-0x31],0x0
   1400160c4:	mov    BYTE PTR [rbp-0x41],0x0
   1400160c8:	lea    rcx,[rip+0x3acc5]        # 0x140050d94
   1400160cf:	call   QWORD PTR [rip+0x33533]        # 0x140049608
   1400160d5:	mov    r8,rax
   1400160d8:	lea    rdx,[rip+0x3acb5]        # 0x140050d94
   1400160df:	lea    rcx,[rbp-0x41]
   1400160e3:	call   0x140005154
   1400160e8:	nop
   1400160e9:	lea    rcx,[rdi+0x38]
   1400160ed:	lea    r8,[rbp-0x41]
   1400160f1:	mov    rdx,rsi
   1400160f4:	call   0x140017a00
   1400160f9:	test   eax,eax
   1400160fb:	setne  dil
   1400160ff:	cmp    QWORD PTR [rbp-0x29],0x10
   140016104:	jb     0x140016110
   140016106:	mov    rcx,QWORD PTR [rbp-0x41]
   14001610a:	call   QWORD PTR [rip+0x33568]        # 0x140049678
   140016110:	test   dil,dil
   140016113:	je     0x1400161ef
   140016119:	xor    bl,bl
   14001611b:	mov    QWORD PTR [rbp-0x1],r13
   14001611f:	and    QWORD PTR [rbp-0x9],0x0
   140016124:	mov    BYTE PTR [rbp-0x19],bl
   140016127:	lea    rcx,[rip+0x3afea]        # 0x140051118
   14001612e:	call   QWORD PTR [rip+0x334d4]        # 0x140049608
   140016134:	mov    r8,rax
   140016137:	lea    rdx,[rip+0x3afda]        # 0x140051118
   14001613e:	lea    rcx,[rbp-0x19]
   140016142:	call   0x140005154
   140016147:	nop
   140016148:	mov    QWORD PTR [rbp-0x29],r13
   14001614c:	and    QWORD PTR [rbp-0x31],0x0
   140016151:	mov    BYTE PTR [rbp-0x41],bl
   140016154:	lea    rcx,[rip+0x3b085]        # 0x1400511e0
   14001615b:	call   QWORD PTR [rip+0x334a7]        # 0x140049608
   140016161:	mov    r8,rax
   140016164:	lea    rdx,[rip+0x3b075]        # 0x1400511e0
   14001616b:	lea    rcx,[rbp-0x41]
   14001616f:	call   0x140005154
   140016174:	nop
   140016175:	mov    r8d,0x13f
   14001617b:	lea    rdx,[rbp-0x19]
   14001617f:	lea    rcx,[rbp+0xf]
   140016183:	call   0x14001231c
   140016188:	nop
   140016189:	mov    rcx,QWORD PTR [rip+0x546a0]        # 0x14006a830
   140016190:	mov    r9,QWORD PTR [rcx]
   140016193:	mov    r8,rax
   140016196:	lea    rdx,[rbp-0x41]
   14001619a:	call   QWORD PTR [r9+0x80]
   1400161a1:	nop
   1400161a2:	cmp    QWORD PTR [rbp+0x27],0x10
   1400161a7:	jb     0x1400161b3
   1400161a9:	mov    rcx,QWORD PTR [rbp+0xf]
   1400161ad:	call   QWORD PTR [rip+0x334c5]        # 0x140049678
   1400161b3:	mov    QWORD PTR [rbp+0x27],r13
   1400161b7:	and    QWORD PTR [rbp+0x1f],0x0
   1400161bc:	mov    BYTE PTR [rbp+0xf],0x0
   1400161c0:	cmp    QWORD PTR [rbp-0x29],0x10
   1400161c5:	jb     0x1400161d1
   1400161c7:	mov    rcx,QWORD PTR [rbp-0x41]
   1400161cb:	call   QWORD PTR [rip+0x334a7]        # 0x140049678
   1400161d1:	mov    QWORD PTR [rbp-0x29],r13
   1400161d5:	and    QWORD PTR [rbp-0x31],0x0
   1400161da:	mov    BYTE PTR [rbp-0x41],0x0
   1400161de:	cmp    QWORD PTR [rbp-0x1],0x10
   1400161e3:	jb     0x1400161ef
   1400161e5:	mov    rcx,QWORD PTR [rbp-0x19]
   1400161e9:	call   QWORD PTR [rip+0x33489]        # 0x140049678
   1400161ef:	mov    al,bl
   1400161f1:	mov    rcx,QWORD PTR [rbp+0x37]
   1400161f5:	xor    rcx,rsp
   1400161f8:	call   0x14002b100
   1400161fd:	lea    r11,[rsp+0xb0]
   140016205:	mov    rbx,QWORD PTR [r11+0x30]
   140016209:	mov    rsi,QWORD PTR [r11+0x38]
   14001620d:	mov    rsp,r11
   140016210:	pop    r13
   140016212:	pop    rdi
   140016213:	pop    rbp
   140016214:	ret    
   140016215:	int3   
   140016216:	int3   
   140016217:	int3   
   140016218:	mov    rax,rsp
   14001621b:	push   rbp
   14001621c:	push   rsi
   14001621d:	push   rdi
   14001621e:	push   r12
   140016220:	push   r13
   140016222:	push   r14
   140016224:	push   r15
   140016226:	lea    rbp,[rax-0x5f]
   14001622a:	sub    rsp,0xb0
   140016231:	mov    QWORD PTR [rbp-0x61],0xfffffffffffffffe
   140016239:	mov    QWORD PTR [rax+0x20],rbx
   14001623d:	mov    rax,QWORD PTR [rip+0x51fac]        # 0x1400681f0
   140016244:	xor    rax,rsp
   140016247:	mov    QWORD PTR [rbp+0x1f],rax
   14001624b:	mov    r15,r8
   14001624e:	mov    rsi,rdx
   140016251:	mov    rdi,rcx
   140016254:	mov    QWORD PTR [rbp-0x69],rcx
   140016258:	xor    r12d,r12d
   14001625b:	mov    r14b,0x1
   14001625e:	xor    bl,bl
   140016260:	xor    r13d,r13d
   140016263:	cmp    DWORD PTR [rdx+0x8],r12d
   140016267:	jle    0x1400165df
   14001626d:	cmp    BYTE PTR [rip+0x54574],0x0        # 0x14006a7e8
   140016274:	jne    0x1400165df
   14001627a:	test   bl,bl
   14001627c:	je     0x1400162e9
   14001627e:	mov    edi,DWORD PTR [rsi+0x4]
   140016281:	cmp    r12d,0x1
   140016285:	jl     0x1400165d1
   14001628b:	test   edi,edi
   14001628d:	js     0x1400165d1
   140016293:	mov    ecx,0x3e8
   140016298:	call   QWORD PTR [rip+0x32e52]        # 0x1400490f0
   14001629e:	movd   xmm1,r12d
   1400162a3:	cvtdq2pd xmm1,xmm1
   1400162a7:	subsd  xmm1,QWORD PTR [rip+0x3bcf9]        # 0x140051fa8
   1400162af:	movsd  xmm0,QWORD PTR [rip+0x3bcf9]        # 0x140051fb0
   1400162b7:	call   QWORD PTR [rip+0x33473]        # 0x140049730
   1400162bd:	cvttsd2si eax,xmm0
   1400162c1:	imul   eax,edi
   1400162c4:	imul   eax,eax,0xea60
   1400162ca:	mov    rdi,QWORD PTR [rbp-0x69]
   1400162ce:	cmp    r13d,eax
   1400162d1:	jl     0x1400162dd
   1400162d3:	xor    r13d,r13d
   1400162d6:	xor    bl,bl
   1400162d8:	jmp    0x1400165d5
   1400162dd:	add    r13d,0x3e8
   1400162e4:	jmp    0x1400165d5
   1400162e9:	inc    r12d
   1400162ec:	call   0x14001c5fc
   1400162f1:	xor    ebx,ebx
   1400162f3:	test   al,al
   1400162f5:	jne    0x1400163cd
   1400162fb:	mov    QWORD PTR [rbp-0x19],0xf
   140016303:	mov    QWORD PTR [rbp-0x21],rbx
   140016307:	mov    BYTE PTR [rbp-0x31],bl
   14001630a:	lea    rcx,[rip+0x3ae07]        # 0x140051118
   140016311:	call   QWORD PTR [rip+0x332f1]        # 0x140049608
   140016317:	mov    r8,rax
   14001631a:	lea    rdx,[rip+0x3adf7]        # 0x140051118
   140016321:	lea    rcx,[rbp-0x31]
   140016325:	call   0x140005154
   14001632a:	nop
   14001632b:	mov    QWORD PTR [rbp-0x41],0xf
   140016333:	mov    QWORD PTR [rbp-0x49],rbx
   140016337:	mov    BYTE PTR [rbp-0x59],bl
   14001633a:	lea    rcx,[rip+0x3aeb7]        # 0x1400511f8
   140016341:	call   QWORD PTR [rip+0x332c1]        # 0x140049608
   140016347:	mov    r8,rax
   14001634a:	lea    rdx,[rip+0x3aea7]        # 0x1400511f8
   140016351:	lea    rcx,[rbp-0x59]
   140016355:	call   0x140005154
   14001635a:	nop
   14001635b:	mov    r8d,0x15d
   140016361:	lea    rdx,[rbp-0x31]
   140016365:	lea    rcx,[rbp-0x9]
   140016369:	call   0x14001231c
   14001636e:	nop
   14001636f:	mov    rcx,QWORD PTR [rip+0x544ba]        # 0x14006a830
   140016376:	mov    r9,QWORD PTR [rcx]
   140016379:	mov    r8,rax
   14001637c:	lea    rdx,[rbp-0x59]
   140016380:	call   QWORD PTR [r9+0x80]
   140016387:	nop
   140016388:	cmp    QWORD PTR [rbp+0xf],0x10
   14001638d:	jb     0x140016399
   14001638f:	mov    rcx,QWORD PTR [rbp-0x9]
   140016393:	call   QWORD PTR [rip+0x332df]        # 0x140049678
   140016399:	mov    QWORD PTR [rbp+0xf],0xf
   1400163a1:	mov    QWORD PTR [rbp+0x7],rbx
   1400163a5:	mov    BYTE PTR [rbp-0x9],bl
   1400163a8:	cmp    QWORD PTR [rbp-0x41],0x10
   1400163ad:	jb     0x1400163b9
   1400163af:	mov    rcx,QWORD PTR [rbp-0x59]
   1400163b3:	call   QWORD PTR [rip+0x332bf]        # 0x140049678
   1400163b9:	mov    QWORD PTR [rbp-0x41],0xf
   1400163c1:	mov    QWORD PTR [rbp-0x49],rbx
   1400163c5:	mov    BYTE PTR [rbp-0x59],bl
   1400163c8:	jmp    0x1400164cf
   1400163cd:	test   r14b,r14b
   1400163d0:	je     0x1400164e7
   1400163d6:	mov    rdx,r15
   1400163d9:	lea    rcx,[rbp-0x9]
   1400163dd:	call   0x1400158fc
   1400163e2:	mov    r9,rax
   1400163e5:	mov    r8,r15
   1400163e8:	mov    rdx,rsi
   1400163eb:	mov    rcx,rdi
   1400163ee:	call   0x140015a70
   1400163f3:	test   al,al
   1400163f5:	sete   r14b
   1400163f9:	test   r14b,r14b
   1400163fc:	je     0x1400164e7
   140016402:	mov    QWORD PTR [rbp-0x19],0xf
   14001640a:	mov    QWORD PTR [rbp-0x21],rbx
   14001640e:	mov    BYTE PTR [rbp-0x31],bl
   140016411:	lea    rcx,[rip+0x3ad00]        # 0x140051118
   140016418:	call   QWORD PTR [rip+0x331ea]        # 0x140049608
   14001641e:	mov    r8,rax
   140016421:	lea    rdx,[rip+0x3acf0]        # 0x140051118
   140016428:	lea    rcx,[rbp-0x31]
   14001642c:	call   0x140005154
   140016431:	nop
   140016432:	mov    QWORD PTR [rbp-0x41],0xf
   14001643a:	mov    QWORD PTR [rbp-0x49],rbx
   14001643e:	mov    BYTE PTR [rbp-0x59],bl
   140016441:	lea    rcx,[rip+0x3add8]        # 0x140051220
   140016448:	call   QWORD PTR [rip+0x331ba]        # 0x140049608
   14001644e:	mov    r8,rax
   140016451:	lea    rdx,[rip+0x3adc8]        # 0x140051220
   140016458:	lea    rcx,[rbp-0x59]
   14001645c:	call   0x140005154
   140016461:	nop
   140016462:	mov    r8d,0x169
   140016468:	lea    rdx,[rbp-0x31]
   14001646c:	lea    rcx,[rbp-0x9]
   140016470:	call   0x14001231c
   140016475:	nop
   140016476:	mov    rcx,QWORD PTR [rip+0x543b3]        # 0x14006a830
   14001647d:	mov    r9,QWORD PTR [rcx]
   140016480:	mov    r8,rax
   140016483:	lea    rdx,[rbp-0x59]
   140016487:	call   QWORD PTR [r9+0x80]
   14001648e:	nop
   14001648f:	cmp    QWORD PTR [rbp+0xf],0x10
   140016494:	jb     0x1400164a0
   140016496:	mov    rcx,QWORD PTR [rbp-0x9]
   14001649a:	call   QWORD PTR [rip+0x331d8]        # 0x140049678
   1400164a0:	mov    QWORD PTR [rbp+0xf],0xf
   1400164a8:	mov    QWORD PTR [rbp+0x7],rbx
   1400164ac:	mov    BYTE PTR [rbp-0x9],bl
   1400164af:	cmp    QWORD PTR [rbp-0x41],0x10
   1400164b4:	jb     0x1400164c0
   1400164b6:	mov    rcx,QWORD PTR [rbp-0x59]
   1400164ba:	call   QWORD PTR [rip+0x331b8]        # 0x140049678
   1400164c0:	mov    QWORD PTR [rbp-0x41],0xf
   1400164c8:	mov    QWORD PTR [rbp-0x49],rbx
   1400164cc:	mov    BYTE PTR [rbp-0x59],bl
   1400164cf:	cmp    QWORD PTR [rbp-0x19],0x10
   1400164d4:	jb     0x1400164e0
   1400164d6:	mov    rcx,QWORD PTR [rbp-0x31]
   1400164da:	call   QWORD PTR [rip+0x33198]        # 0x140049678
   1400164e0:	mov    bl,0x1
   1400164e2:	jmp    0x1400165d5
   1400164e7:	mov    rdx,r15
   1400164ea:	mov    rcx,rsi
   1400164ed:	call   0x140016054
   1400164f2:	test   al,al
   1400164f4:	sete   al
   1400164f7:	test   al,al
   1400164f9:	je     0x1400165df
   1400164ff:	mov    QWORD PTR [rbp-0x19],0xf
   140016507:	mov    QWORD PTR [rbp-0x21],rbx
   14001650b:	mov    BYTE PTR [rbp-0x31],bl
   14001650e:	lea    rcx,[rip+0x3ac03]        # 0x140051118
   140016515:	call   QWORD PTR [rip+0x330ed]        # 0x140049608
   14001651b:	mov    r8,rax
   14001651e:	lea    rdx,[rip+0x3abf3]        # 0x140051118
   140016525:	lea    rcx,[rbp-0x31]
   140016529:	call   0x140005154
   14001652e:	nop
   14001652f:	mov    QWORD PTR [rbp-0x41],0xf
   140016537:	mov    QWORD PTR [rbp-0x49],rbx
   14001653b:	mov    BYTE PTR [rbp-0x59],bl
   14001653e:	lea    rcx,[rip+0x3acf3]        # 0x140051238
   140016545:	call   QWORD PTR [rip+0x330bd]        # 0x140049608
   14001654b:	mov    r8,rax
   14001654e:	lea    rdx,[rip+0x3ace3]        # 0x140051238
   140016555:	lea    rcx,[rbp-0x59]
   140016559:	call   0x140005154
   14001655e:	nop
   14001655f:	mov    r8d,0x175
   140016565:	lea    rdx,[rbp-0x31]
   140016569:	lea    rcx,[rbp-0x9]
   14001656d:	call   0x14001231c
   140016572:	nop
   140016573:	mov    rcx,QWORD PTR [rip+0x542b6]        # 0x14006a830
   14001657a:	mov    r9,QWORD PTR [rcx]
   14001657d:	mov    r8,rax
   140016580:	lea    rdx,[rbp-0x59]
   140016584:	call   QWORD PTR [r9+0x80]
   14001658b:	nop
   14001658c:	cmp    QWORD PTR [rbp+0xf],0x10
   140016591:	jb     0x14001659d
   140016593:	mov    rcx,QWORD PTR [rbp-0x9]
   140016597:	call   QWORD PTR [rip+0x330db]        # 0x140049678
   14001659d:	mov    QWORD PTR [rbp+0xf],0xf
   1400165a5:	mov    QWORD PTR [rbp+0x7],rbx
   1400165a9:	mov    BYTE PTR [rbp-0x9],bl
   1400165ac:	cmp    QWORD PTR [rbp-0x41],0x10
   1400165b1:	jb     0x1400165bd
   1400165b3:	mov    rcx,QWORD PTR [rbp-0x59]
   1400165b7:	call   QWORD PTR [rip+0x330bb]        # 0x140049678
   1400165bd:	mov    QWORD PTR [rbp-0x41],0xf
   1400165c5:	mov    QWORD PTR [rbp-0x49],rbx
   1400165c9:	mov    BYTE PTR [rbp-0x59],bl
   1400165cc:	jmp    0x1400164cf
   1400165d1:	mov    rdi,QWORD PTR [rbp-0x69]
   1400165d5:	cmp    r12d,DWORD PTR [rsi+0x8]
   1400165d9:	jl     0x14001626d
   1400165df:	mov    rcx,QWORD PTR [rbp+0x1f]
   1400165e3:	xor    rcx,rsp
   1400165e6:	call   0x14002b100
   1400165eb:	mov    rbx,QWORD PTR [rsp+0x108]
   1400165f3:	add    rsp,0xb0
   1400165fa:	pop    r15
   1400165fc:	pop    r14
   1400165fe:	pop    r13
   140016600:	pop    r12
   140016602:	pop    rdi
   140016603:	pop    rsi
   140016604:	pop    rbp
   140016605:	ret    
   140016606:	int3   
   140016607:	int3   
   140016608:	mov    rax,rsp
   14001660b:	push   rbp
   14001660c:	push   r13
   14001660e:	push   r14
   140016610:	lea    rbp,[rax-0xb8]
   140016617:	sub    rsp,0x1a0
   14001661e:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140016627:	mov    QWORD PTR [rax+0x10],rbx
   14001662b:	mov    QWORD PTR [rax+0x18],rsi
   14001662f:	mov    QWORD PTR [rax+0x20],rdi
   140016633:	mov    rax,QWORD PTR [rip+0x51bb6]        # 0x1400681f0
   14001663a:	xor    rax,rsp
   14001663d:	mov    QWORD PTR [rbp+0x90],rax
   140016644:	mov    rdi,rcx
   140016647:	mov    r14d,0xf
   14001664d:	mov    QWORD PTR [rsp+0x68],r14
   140016652:	xor    esi,esi
   140016654:	mov    QWORD PTR [rsp+0x60],rsi
   140016659:	mov    BYTE PTR [rsp+0x50],sil
   14001665e:	lea    rcx,[rip+0x3ac13]        # 0x140051278
   140016665:	call   QWORD PTR [rip+0x32f9d]        # 0x140049608
   14001666b:	mov    r8,rax
   14001666e:	lea    rdx,[rip+0x3ac03]        # 0x140051278
   140016675:	lea    rcx,[rsp+0x50]
   14001667a:	call   0x140005154
   14001667f:	nop
   140016680:	mov    QWORD PTR [rsp+0x38],r14
   140016685:	mov    QWORD PTR [rsp+0x30],rsi
   14001668a:	mov    BYTE PTR [rsp+0x20],sil
   14001668f:	lea    rcx,[rip+0x3a25f]        # 0x1400508f5
   140016696:	call   QWORD PTR [rip+0x32f6c]        # 0x140049608
   14001669c:	mov    r8,rax
   14001669f:	lea    rdx,[rip+0x3a24f]        # 0x1400508f5
   1400166a6:	lea    rcx,[rsp+0x20]
   1400166ab:	call   0x140005154
   1400166b0:	nop
   1400166b1:	mov    rcx,QWORD PTR [rip+0x54178]        # 0x14006a830
   1400166b8:	mov    rax,QWORD PTR [rcx]
   1400166bb:	lea    r8,[rsp+0x20]
   1400166c0:	lea    rdx,[rsp+0x50]
   1400166c5:	call   QWORD PTR [rax+0x80]
   1400166cb:	nop
   1400166cc:	cmp    QWORD PTR [rsp+0x38],0x10
   1400166d2:	jb     0x1400166df
   1400166d4:	mov    rcx,QWORD PTR [rsp+0x20]
   1400166d9:	call   QWORD PTR [rip+0x32f99]        # 0x140049678
   1400166df:	mov    QWORD PTR [rsp+0x38],r14
   1400166e4:	mov    QWORD PTR [rsp+0x30],rsi
   1400166e9:	mov    BYTE PTR [rsp+0x20],sil
   1400166ee:	cmp    QWORD PTR [rsp+0x68],0x10
   1400166f4:	jb     0x140016701
   1400166f6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400166fb:	call   QWORD PTR [rip+0x32f77]        # 0x140049678
   140016701:	lea    rcx,[rbp-0x60]
   140016705:	call   0x14001b5c4
   14001670a:	nop
   14001670b:	lea    r8,[rip+0x3ab7e]        # 0x140051290
   140016712:	mov    rdx,rax
   140016715:	lea    rcx,[rsp+0x78]
   14001671a:	call   0x140014560
   14001671f:	nop
   140016720:	cmp    QWORD PTR [rbp-0x48],0x8
   140016725:	jb     0x140016731
   140016727:	mov    rcx,QWORD PTR [rbp-0x60]
   14001672b:	call   QWORD PTR [rip+0x32f47]        # 0x140049678
   140016731:	lea    rcx,[rsp+0x78]
   140016736:	cmp    QWORD PTR [rbp-0x70],0x8
   14001673b:	cmovae rcx,QWORD PTR [rsp+0x78]
   140016741:	call   QWORD PTR [rip+0x331b9]        # 0x140049900
   140016747:	cmp    eax,0x1
   14001674a:	jne    0x14001696a
   140016750:	lea    rcx,[rsp+0x78]
   140016755:	cmp    QWORD PTR [rbp-0x70],0x8
   14001675a:	cmovae rcx,QWORD PTR [rsp+0x78]
   140016760:	call   QWORD PTR [rip+0x331a2]        # 0x140049908
   140016766:	test   eax,eax
   140016768:	je     0x14001696a
   14001676e:	mov    QWORD PTR [rsp+0x20],rsi
   140016773:	mov    QWORD PTR [rsp+0x28],rsi
   140016778:	mov    QWORD PTR [rsp+0x30],rsi
   14001677d:	xor    r8d,r8d
   140016780:	lea    rdx,[rsp+0x20]
   140016785:	lea    rcx,[rsp+0x78]
   14001678a:	call   0x14000aef8
   14001678f:	mov    rbx,QWORD PTR [rsp+0x20]
   140016794:	cmp    rbx,QWORD PTR [rsp+0x28]
   140016799:	je     0x14001695f
   14001679f:	mov    r13d,0x7
   1400167a5:	mov    rdx,rbx
   1400167a8:	lea    rcx,[rbp-0x38]
   1400167ac:	call   0x14000b150
   1400167b1:	nop
   1400167b2:	mov    r8,rax
   1400167b5:	mov    rdx,rdi
   1400167b8:	lea    rcx,[rbp-0x60]
   1400167bc:	call   0x14000a388
   1400167c1:	nop
   1400167c2:	cmp    QWORD PTR [rbp-0x20],0x8
   1400167c7:	jb     0x1400167d3
   1400167c9:	mov    rcx,QWORD PTR [rbp-0x38]
   1400167cd:	call   QWORD PTR [rip+0x32ea5]        # 0x140049678
   1400167d3:	mov    QWORD PTR [rbp-0x20],r13
   1400167d7:	mov    QWORD PTR [rbp-0x28],rsi
   1400167db:	mov    WORD PTR [rbp-0x38],si
   1400167df:	lea    rcx,[rbp-0x60]
   1400167e3:	call   0x14000aa80
   1400167e8:	test   al,al
   1400167ea:	je     0x14001693f
   1400167f0:	mov    rcx,rbx
   1400167f3:	call   0x14000acdc
   1400167f8:	test   al,al
   1400167fa:	jne    0x14001693f
   140016800:	lea    rdx,[rbp-0x60]
   140016804:	mov    rcx,rbx
   140016807:	call   0x14000a7ec
   14001680c:	test   al,al
   14001680e:	je     0x14001693f
   140016814:	mov    QWORD PTR [rsp+0x68],r14
   140016819:	mov    QWORD PTR [rsp+0x60],rsi
   14001681e:	mov    BYTE PTR [rsp+0x50],sil
   140016823:	lea    rcx,[rip+0x3a0cb]        # 0x1400508f5
   14001682a:	call   QWORD PTR [rip+0x32dd8]        # 0x140049608
   140016830:	mov    r8,rax
   140016833:	lea    rdx,[rip+0x3a0bb]        # 0x1400508f5
   14001683a:	lea    rcx,[rsp+0x50]
   14001683f:	call   0x140005154
   140016844:	nop
   140016845:	mov    r8,rbx
   140016848:	lea    rdx,[rip+0x3aa91]        # 0x1400512e0
   14001684f:	lea    rcx,[rbp+0x18]
   140016853:	call   0x1400188a4
   140016858:	nop
   140016859:	lea    r8,[rip+0x3aa70]        # 0x1400512d0
   140016860:	mov    rdx,rax
   140016863:	lea    rcx,[rbp-0x10]
   140016867:	call   0x140014560
   14001686c:	nop
   14001686d:	lea    r8,[rbp-0x60]
   140016871:	mov    rdx,rax
   140016874:	lea    rcx,[rbp+0x40]
   140016878:	call   0x14000d34c
   14001687d:	nop
   14001687e:	lea    r8,[rip+0x3aa43]        # 0x1400512c8
   140016885:	mov    rdx,rax
   140016888:	lea    rcx,[rbp+0x68]
   14001688c:	call   0x140014560
   140016891:	nop
   140016892:	mov    rcx,QWORD PTR [rip+0x53f97]        # 0x14006a830
   140016899:	mov    r9,QWORD PTR [rcx]
   14001689c:	lea    r8,[rsp+0x50]
   1400168a1:	mov    rdx,rax
   1400168a4:	call   QWORD PTR [r9+0x70]
   1400168a8:	nop
   1400168a9:	cmp    QWORD PTR [rbp+0x80],0x8
   1400168b1:	jb     0x1400168bd
   1400168b3:	mov    rcx,QWORD PTR [rbp+0x68]
   1400168b7:	call   QWORD PTR [rip+0x32dbb]        # 0x140049678
   1400168bd:	mov    QWORD PTR [rbp+0x80],r13
   1400168c4:	mov    QWORD PTR [rbp+0x78],rsi
   1400168c8:	mov    WORD PTR [rbp+0x68],si
   1400168cc:	cmp    QWORD PTR [rbp+0x58],0x8
   1400168d1:	jb     0x1400168dd
   1400168d3:	mov    rcx,QWORD PTR [rbp+0x40]
   1400168d7:	call   QWORD PTR [rip+0x32d9b]        # 0x140049678
   1400168dd:	mov    QWORD PTR [rbp+0x58],r13
   1400168e1:	mov    QWORD PTR [rbp+0x50],rsi
   1400168e5:	mov    WORD PTR [rbp+0x40],si
   1400168e9:	cmp    QWORD PTR [rbp+0x8],0x8
   1400168ee:	jb     0x1400168fa
   1400168f0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400168f4:	call   QWORD PTR [rip+0x32d7e]        # 0x140049678
   1400168fa:	mov    QWORD PTR [rbp+0x8],r13
   1400168fe:	mov    QWORD PTR [rbp+0x0],rsi
   140016902:	mov    WORD PTR [rbp-0x10],si
   140016906:	cmp    QWORD PTR [rbp+0x30],0x8
   14001690b:	jb     0x140016917
   14001690d:	mov    rcx,QWORD PTR [rbp+0x18]
   140016911:	call   QWORD PTR [rip+0x32d61]        # 0x140049678
   140016917:	mov    QWORD PTR [rbp+0x30],r13
   14001691b:	mov    QWORD PTR [rbp+0x28],rsi
   14001691f:	mov    WORD PTR [rbp+0x18],si
   140016923:	cmp    QWORD PTR [rsp+0x68],0x10
   140016929:	jb     0x140016936
   14001692b:	mov    rcx,QWORD PTR [rsp+0x50]
   140016930:	call   QWORD PTR [rip+0x32d42]        # 0x140049678
   140016936:	mov    rcx,rbx
   140016939:	call   0x14000a678
   14001693e:	nop
   14001693f:	cmp    QWORD PTR [rbp-0x48],0x8
   140016944:	jb     0x140016950
   140016946:	mov    rcx,QWORD PTR [rbp-0x60]
   14001694a:	call   QWORD PTR [rip+0x32d28]        # 0x140049678
   140016950:	add    rbx,0x28
   140016954:	cmp    rbx,QWORD PTR [rsp+0x28]
   140016959:	jne    0x1400167a5
   14001695f:	lea    rcx,[rsp+0x20]
   140016964:	call   0x14000f64c
   140016969:	nop
   14001696a:	cmp    QWORD PTR [rbp-0x70],0x8
   14001696f:	jb     0x14001697c
   140016971:	mov    rcx,QWORD PTR [rsp+0x78]
   140016976:	call   QWORD PTR [rip+0x32cfc]        # 0x140049678
   14001697c:	mov    rcx,QWORD PTR [rbp+0x90]
   140016983:	xor    rcx,rsp
   140016986:	call   0x14002b100
   14001698b:	lea    r11,[rsp+0x1a0]
   140016993:	mov    rbx,QWORD PTR [r11+0x28]
   140016997:	mov    rsi,QWORD PTR [r11+0x30]
   14001699b:	mov    rdi,QWORD PTR [r11+0x38]
   14001699f:	mov    rsp,r11
   1400169a2:	pop    r14
   1400169a4:	pop    r13
   1400169a6:	pop    rbp
   1400169a7:	ret    
   1400169a8:	mov    r11,rsp
   1400169ab:	push   r12
   1400169ad:	push   r13
   1400169af:	push   r14
   1400169b1:	sub    rsp,0x3e0
   1400169b8:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400169c1:	mov    QWORD PTR [r11+0x8],rbx
   1400169c5:	mov    QWORD PTR [r11+0x10],rsi
   1400169c9:	mov    QWORD PTR [r11+0x18],rdi
   1400169cd:	mov    rax,QWORD PTR [rip+0x5181c]        # 0x1400681f0
   1400169d4:	xor    rax,rsp
   1400169d7:	mov    QWORD PTR [rsp+0x3d8],rax
   1400169df:	xor    ebx,ebx
   1400169e1:	mov    DWORD PTR [rsp+0x38],ebx
   1400169e5:	lea    rcx,[r11-0x78]
   1400169e9:	call   0x14001bb84
   1400169ee:	nop
   1400169ef:	lea    rax,[rip+0x3ad9a]        # 0x140051790
   1400169f6:	mov    QWORD PTR [rsp+0x28],rax
   1400169fb:	lea    ecx,[rbx+0x70]
   1400169fe:	call   QWORD PTR [rip+0x32c94]        # 0x140049698
   140016a04:	mov    QWORD PTR [rsp+0x38],rax
   140016a09:	test   rax,rax
   140016a0c:	je     0x140016a20
   140016a0e:	lea    rdx,[rsp+0x380]
   140016a16:	mov    rcx,rax
   140016a19:	call   0x14001cda0
   140016a1e:	jmp    0x140016a23
   140016a20:	mov    rax,rbx
   140016a23:	mov    QWORD PTR [rsp+0x30],rax
   140016a28:	lea    rcx,[rsp+0x28]
   140016a2d:	call   0x14001cfe8
   140016a32:	mov    edi,0xf
   140016a37:	test   al,al
   140016a39:	jne    0x140016ba1
   140016a3f:	mov    QWORD PTR [rsp+0x248],rdi
   140016a47:	mov    QWORD PTR [rsp+0x240],rbx
   140016a4f:	mov    BYTE PTR [rsp+0x230],bl
   140016a56:	lea    rsi,[rip+0x3a6bb]        # 0x140051118
   140016a5d:	mov    rcx,rsi
   140016a60:	call   QWORD PTR [rip+0x32ba2]        # 0x140049608
   140016a66:	mov    r8,rax
   140016a69:	mov    rdx,rsi
   140016a6c:	lea    rcx,[rsp+0x230]
   140016a74:	call   0x140005154
   140016a79:	nop
   140016a7a:	mov    QWORD PTR [rsp+0x298],rdi
   140016a82:	mov    QWORD PTR [rsp+0x290],rbx
   140016a8a:	mov    BYTE PTR [rsp+0x280],bl
   140016a91:	lea    rcx,[rip+0x3a868]        # 0x140051300
   140016a98:	call   QWORD PTR [rip+0x32b6a]        # 0x140049608
   140016a9e:	mov    r8,rax
   140016aa1:	lea    rdx,[rip+0x3a858]        # 0x140051300
   140016aa8:	lea    rcx,[rsp+0x280]
   140016ab0:	call   0x140005154
   140016ab5:	nop
   140016ab6:	mov    r8d,0x1d0
   140016abc:	lea    rdx,[rsp+0x230]
   140016ac4:	lea    rcx,[rsp+0x258]
   140016acc:	call   0x14001231c
   140016ad1:	nop
   140016ad2:	mov    rcx,QWORD PTR [rip+0x53d57]        # 0x14006a830
   140016ad9:	mov    r9,QWORD PTR [rcx]
   140016adc:	mov    r8,rax
   140016adf:	lea    rdx,[rsp+0x280]
   140016ae7:	call   QWORD PTR [r9+0x80]
   140016aee:	nop
   140016aef:	cmp    QWORD PTR [rsp+0x270],0x10
   140016af8:	jb     0x140016b08
   140016afa:	mov    rcx,QWORD PTR [rsp+0x258]
   140016b02:	call   QWORD PTR [rip+0x32b70]        # 0x140049678
   140016b08:	mov    QWORD PTR [rsp+0x270],rdi
   140016b10:	mov    QWORD PTR [rsp+0x268],rbx
   140016b18:	mov    BYTE PTR [rsp+0x258],bl
   140016b1f:	cmp    QWORD PTR [rsp+0x298],0x10
   140016b28:	jb     0x140016b38
   140016b2a:	mov    rcx,QWORD PTR [rsp+0x280]
   140016b32:	call   QWORD PTR [rip+0x32b40]        # 0x140049678
   140016b38:	mov    QWORD PTR [rsp+0x298],rdi
   140016b40:	mov    QWORD PTR [rsp+0x290],rbx
   140016b48:	mov    BYTE PTR [rsp+0x280],bl
   140016b4f:	cmp    QWORD PTR [rsp+0x248],0x10
   140016b58:	jb     0x140016b68
   140016b5a:	mov    rcx,QWORD PTR [rsp+0x230]
   140016b62:	call   QWORD PTR [rip+0x32b10]        # 0x140049678
   140016b68:	mov    dl,0x1
   140016b6a:	lea    rcx,[rsp+0x28]
   140016b6f:	call   0x14001d024
   140016b74:	nop
   140016b75:	lea    rcx,[rsp+0x28]
   140016b7a:	call   0x14001cfa8
   140016b7f:	nop
   140016b80:	cmp    QWORD PTR [rsp+0x398],0x10
   140016b89:	jb     0x140016b99
   140016b8b:	mov    rcx,QWORD PTR [rsp+0x380]
   140016b93:	call   QWORD PTR [rip+0x32adf]        # 0x140049678
   140016b99:	or     eax,0xffffffff
   140016b9c:	jmp    0x14001773d
   140016ba1:	mov    r12d,0x7
   140016ba7:	mov    QWORD PTR [rsp+0x318],r12
   140016baf:	mov    QWORD PTR [rsp+0x310],rbx
   140016bb7:	mov    WORD PTR [rsp+0x300],bx
   140016bbf:	mov    QWORD PTR [rsp+0x340],r12
   140016bc7:	mov    QWORD PTR [rsp+0x338],rbx
   140016bcf:	mov    WORD PTR [rsp+0x328],bx
   140016bd7:	mov    QWORD PTR [rsp+0x368],rdi
   140016bdf:	mov    QWORD PTR [rsp+0x360],rbx
   140016be7:	mov    BYTE PTR [rsp+0x350],bl
   140016bee:	lea    r8,[rsp+0x20]
   140016bf3:	lea    rdx,[rsp+0x20]
   140016bf8:	lea    rcx,[rsp+0x40]
   140016bfd:	call   0x140005454
   140016c02:	nop
   140016c03:	lea    rcx,[rsp+0x160]
   140016c0b:	call   0x14001f894
   140016c10:	nop
   140016c11:	mov    BYTE PTR [rsp+0x20],bl
   140016c15:	lea    rdx,[rip+0xc40]        # 0x14001785c
   140016c1c:	mov    ecx,edi
   140016c1e:	call   QWORD PTR [rip+0x32b14]        # 0x140049738
   140016c24:	lea    rdx,[rip+0xc31]        # 0x14001785c
   140016c2b:	lea    ecx,[r12-0x5]
   140016c30:	call   QWORD PTR [rip+0x32b02]        # 0x140049738
   140016c36:	call   0x14001b920
   140016c3b:	lea    rcx,[rsp+0x300]
   140016c43:	call   0x140015840
   140016c48:	test   al,al
   140016c4a:	jne    0x140016e74
   140016c50:	mov    QWORD PTR [rsp+0x248],rdi
   140016c58:	mov    QWORD PTR [rsp+0x240],rbx
   140016c60:	mov    BYTE PTR [rsp+0x230],bl
   140016c67:	lea    rsi,[rip+0x3a4aa]        # 0x140051118
   140016c6e:	mov    rcx,rsi
   140016c71:	call   QWORD PTR [rip+0x32991]        # 0x140049608
   140016c77:	mov    r8,rax
   140016c7a:	mov    rdx,rsi
   140016c7d:	lea    rcx,[rsp+0x230]
   140016c85:	call   0x140005154
   140016c8a:	nop
   140016c8b:	mov    QWORD PTR [rsp+0x298],rdi
   140016c93:	mov    QWORD PTR [rsp+0x290],rbx
   140016c9b:	mov    BYTE PTR [rsp+0x280],bl
   140016ca2:	lea    rcx,[rip+0x3a677]        # 0x140051320
   140016ca9:	call   QWORD PTR [rip+0x32959]        # 0x140049608
   140016caf:	mov    r8,rax
   140016cb2:	lea    rdx,[rip+0x3a667]        # 0x140051320
   140016cb9:	lea    rcx,[rsp+0x280]
   140016cc1:	call   0x140005154
   140016cc6:	nop
   140016cc7:	mov    r8d,0x1ec
   140016ccd:	lea    rdx,[rsp+0x230]
   140016cd5:	lea    rcx,[rsp+0x258]
   140016cdd:	call   0x14001231c
   140016ce2:	nop
   140016ce3:	mov    rcx,QWORD PTR [rip+0x53b46]        # 0x14006a830
   140016cea:	mov    r9,QWORD PTR [rcx]
   140016ced:	mov    r8,rax
   140016cf0:	lea    rdx,[rsp+0x280]
   140016cf8:	call   QWORD PTR [r9+0x80]
   140016cff:	nop
   140016d00:	cmp    QWORD PTR [rsp+0x270],0x10
   140016d09:	jb     0x140016d19
   140016d0b:	mov    rcx,QWORD PTR [rsp+0x258]
   140016d13:	call   QWORD PTR [rip+0x3295f]        # 0x140049678
   140016d19:	mov    QWORD PTR [rsp+0x270],rdi
   140016d21:	mov    QWORD PTR [rsp+0x268],rbx
   140016d29:	mov    BYTE PTR [rsp+0x258],bl
   140016d30:	cmp    QWORD PTR [rsp+0x298],0x10
   140016d39:	jb     0x140016d49
   140016d3b:	mov    rcx,QWORD PTR [rsp+0x280]
   140016d43:	call   QWORD PTR [rip+0x3292f]        # 0x140049678
   140016d49:	mov    QWORD PTR [rsp+0x298],rdi
   140016d51:	mov    QWORD PTR [rsp+0x290],rbx
   140016d59:	mov    BYTE PTR [rsp+0x280],bl
   140016d60:	cmp    QWORD PTR [rsp+0x248],0x10
   140016d69:	jb     0x140016d79
   140016d6b:	mov    rcx,QWORD PTR [rsp+0x230]
   140016d73:	call   QWORD PTR [rip+0x328ff]        # 0x140049678
   140016d79:	mov    dl,0x1
   140016d7b:	lea    rcx,[rsp+0x28]
   140016d80:	call   0x14001d024
   140016d85:	nop
   140016d86:	lea    rcx,[rsp+0x160]
   140016d8e:	call   0x14001f798
   140016d93:	nop
   140016d94:	lea    rcx,[rsp+0x40]
   140016d99:	call   0x1400013c0
   140016d9e:	nop
   140016d9f:	cmp    QWORD PTR [rsp+0x368],0x10
   140016da8:	jb     0x140016db8
   140016daa:	mov    rcx,QWORD PTR [rsp+0x350]
   140016db2:	call   QWORD PTR [rip+0x328c0]        # 0x140049678
   140016db8:	mov    QWORD PTR [rsp+0x368],rdi
   140016dc0:	mov    QWORD PTR [rsp+0x360],rbx
   140016dc8:	mov    BYTE PTR [rsp+0x350],bl
   140016dcf:	cmp    QWORD PTR [rsp+0x340],0x8
   140016dd8:	jb     0x140016de8
   140016dda:	mov    rcx,QWORD PTR [rsp+0x328]
   140016de2:	call   QWORD PTR [rip+0x32890]        # 0x140049678
   140016de8:	mov    QWORD PTR [rsp+0x340],r12
   140016df0:	mov    QWORD PTR [rsp+0x338],rbx
   140016df8:	mov    WORD PTR [rsp+0x328],bx
   140016e00:	cmp    QWORD PTR [rsp+0x318],0x8
   140016e09:	jb     0x140016e19
   140016e0b:	mov    rcx,QWORD PTR [rsp+0x300]
   140016e13:	call   QWORD PTR [rip+0x3285f]        # 0x140049678
   140016e19:	mov    QWORD PTR [rsp+0x318],r12
   140016e21:	mov    QWORD PTR [rsp+0x310],rbx
   140016e29:	mov    WORD PTR [rsp+0x300],bx
   140016e31:	lea    rcx,[rsp+0x28]
   140016e36:	call   0x14001cfa8
   140016e3b:	nop
   140016e3c:	cmp    QWORD PTR [rsp+0x398],0x10
   140016e45:	jb     0x140016e55
   140016e47:	mov    rcx,QWORD PTR [rsp+0x380]
   140016e4f:	call   QWORD PTR [rip+0x32823]        # 0x140049678
   140016e55:	mov    QWORD PTR [rsp+0x398],rdi
   140016e5d:	mov    QWORD PTR [rsp+0x390],rbx
   140016e65:	mov    BYTE PTR [rsp+0x380],bl
   140016e6c:	or     eax,0xffffffff
   140016e6f:	jmp    0x14001773d
   140016e74:	lea    rcx,[rsp+0x300]
   140016e7c:	call   0x140016608
   140016e81:	lea    rcx,[rsp+0x300]
   140016e89:	call   0x140015d98
   140016e8e:	lea    rdx,[rsp+0x328]
   140016e96:	lea    rcx,[rsp+0x40]
   140016e9b:	call   0x140001eac
   140016ea0:	lea    rdx,[rsp+0x40]
   140016ea5:	lea    rcx,[rsp+0x160]
   140016ead:	call   0x14001f998
   140016eb2:	lea    rax,[rip+0x3a077]        # 0x140050f30
   140016eb9:	mov    QWORD PTR [rsp+0x70],rax
   140016ebe:	lea    rcx,[rsp+0xf8]
   140016ec6:	call   QWORD PTR [rip+0x323dc]        # 0x1400492a8
   140016ecc:	nop
   140016ecd:	mov    DWORD PTR [rsp+0x38],0x1
   140016ed5:	xor    r9d,r9d
   140016ed8:	xor    r8d,r8d
   140016edb:	lea    rdx,[rsp+0x78]
   140016ee0:	lea    rcx,[rsp+0x70]
   140016ee5:	call   QWORD PTR [rip+0x323b5]        # 0x1400492a0
   140016eeb:	nop
   140016eec:	mov    rax,QWORD PTR [rsp+0x70]
   140016ef1:	movsxd rcx,DWORD PTR [rax+0x4]
   140016ef5:	lea    r14,[rip+0x3a5c4]        # 0x1400514c0
   140016efc:	mov    QWORD PTR [rsp+rcx*1+0x70],r14
   140016f01:	lea    rcx,[rsp+0x78]
   140016f06:	call   QWORD PTR [rip+0x32374]        # 0x140049280
   140016f0c:	nop
   140016f0d:	lea    rax,[rip+0x39f94]        # 0x140050ea8
   140016f14:	mov    QWORD PTR [rsp+0x78],rax
   140016f19:	mov    QWORD PTR [rsp+0xe8],rbx
   140016f21:	mov    DWORD PTR [rsp+0xf0],0x4
   140016f2c:	lea    rdx,[rip+0x3a455]        # 0x140051388
   140016f33:	lea    rcx,[rsp+0x70]
   140016f38:	call   0x140005e8c
   140016f3d:	lea    rdx,[rip+0x3a434]        # 0x140051378
   140016f44:	mov    rcx,rax
   140016f47:	call   0x140005e8c
   140016f4c:	mov    edx,DWORD PTR [rsp+0x160]
   140016f53:	mov    rcx,rax
   140016f56:	call   QWORD PTR [rip+0x3253c]        # 0x140049498
   140016f5c:	lea    rdx,[rip+0x3a405]        # 0x140051368
   140016f63:	mov    rcx,rax
   140016f66:	call   0x140005e8c
   140016f6b:	mov    edx,DWORD PTR [rsp+0x168]
   140016f72:	mov    rcx,rax
   140016f75:	call   QWORD PTR [rip+0x3251d]        # 0x140049498
   140016f7b:	lea    rdx,[rip+0x3a3ce]        # 0x140051350
   140016f82:	mov    rcx,rax
   140016f85:	call   0x140005e8c
   140016f8a:	mov    edx,DWORD PTR [rsp+0x164]
   140016f91:	mov    rcx,rax
   140016f94:	call   QWORD PTR [rip+0x324fe]        # 0x140049498
   140016f9a:	lea    rdx,[rip+0x3a3a7]        # 0x140051348
   140016fa1:	mov    rcx,rax
   140016fa4:	call   0x140005e8c
   140016fa9:	lea    rdx,[rsp+0x170]
   140016fb1:	mov    rcx,rax
   140016fb4:	call   0x140006014
   140016fb9:	lea    rdx,[rip+0x3a378]        # 0x140051338
   140016fc0:	mov    rcx,rax
   140016fc3:	call   0x140005e8c
   140016fc8:	lea    rdx,[rsp+0x1e8]
   140016fd0:	mov    rcx,rax
   140016fd3:	call   0x140006014
   140016fd8:	mov    QWORD PTR [rsp+0x248],rdi
   140016fe0:	mov    QWORD PTR [rsp+0x240],rbx
   140016fe8:	mov    BYTE PTR [rsp+0x230],bl
   140016fef:	lea    rsi,[rip+0x3a122]        # 0x140051118
   140016ff6:	mov    rcx,rsi
   140016ff9:	call   QWORD PTR [rip+0x32609]        # 0x140049608
   140016fff:	mov    r8,rax
   140017002:	mov    rdx,rsi
   140017005:	lea    rcx,[rsp+0x230]
   14001700d:	call   0x140005154
   140017012:	nop
   140017013:	mov    r8d,0x206
   140017019:	lea    rdx,[rsp+0x230]
   140017021:	lea    rcx,[rsp+0x2d0]
   140017029:	call   0x14001231c
   14001702e:	mov    r13,rax
   140017031:	lea    rdx,[rsp+0x258]
   140017039:	lea    rcx,[rsp+0x70]
   14001703e:	call   0x140018254
   140017043:	nop
   140017044:	mov    rcx,QWORD PTR [rip+0x537e5]        # 0x14006a830
   14001704b:	mov    r9,QWORD PTR [rcx]
   14001704e:	mov    r8,r13
   140017051:	mov    rdx,rax
   140017054:	call   QWORD PTR [r9+0x80]
   14001705b:	nop
   14001705c:	cmp    QWORD PTR [rsp+0x270],0x10
   140017065:	jb     0x140017075
   140017067:	mov    rcx,QWORD PTR [rsp+0x258]
   14001706f:	call   QWORD PTR [rip+0x32603]        # 0x140049678
   140017075:	mov    QWORD PTR [rsp+0x270],rdi
   14001707d:	mov    QWORD PTR [rsp+0x268],rbx
   140017085:	mov    BYTE PTR [rsp+0x258],bl
   14001708c:	cmp    QWORD PTR [rsp+0x2e8],0x10
   140017095:	jb     0x1400170a5
   140017097:	mov    rcx,QWORD PTR [rsp+0x2d0]
   14001709f:	call   QWORD PTR [rip+0x325d3]        # 0x140049678
   1400170a5:	mov    QWORD PTR [rsp+0x2e8],rdi
   1400170ad:	mov    QWORD PTR [rsp+0x2e0],rbx
   1400170b5:	mov    BYTE PTR [rsp+0x2d0],bl
   1400170bc:	cmp    QWORD PTR [rsp+0x248],0x10
   1400170c5:	jb     0x1400170d5
   1400170c7:	mov    rcx,QWORD PTR [rsp+0x230]
   1400170cf:	call   QWORD PTR [rip+0x325a3]        # 0x140049678
   1400170d5:	lea    rdx,[rsp+0x328]
   1400170dd:	lea    rcx,[rsp+0x40]
   1400170e2:	call   0x1400020e8
   1400170e7:	mov    r13b,0x1
   1400170ea:	mov    BYTE PTR [rsp+0x20],r13b
   1400170ef:	lea    rdx,[rip+0x3a09a]        # 0x140051190
   1400170f6:	lea    rcx,[rsp+0x1e8]
   1400170fe:	call   0x140002f24
   140017103:	mov    QWORD PTR [rsp+0x248],rdi
   14001710b:	mov    QWORD PTR [rsp+0x240],rbx
   140017113:	mov    BYTE PTR [rsp+0x230],bl
   14001711a:	mov    rcx,rsi
   14001711d:	test   eax,eax
   14001711f:	jne    0x14001724c
   140017125:	call   QWORD PTR [rip+0x324dd]        # 0x140049608
   14001712b:	mov    r8,rax
   14001712e:	mov    rdx,rsi
   140017131:	lea    rcx,[rsp+0x230]
   140017139:	call   0x140005154
   14001713e:	nop
   14001713f:	mov    QWORD PTR [rsp+0x298],rdi
   140017147:	mov    QWORD PTR [rsp+0x290],rbx
   14001714f:	mov    BYTE PTR [rsp+0x280],bl
   140017156:	lea    rcx,[rip+0x3a23b]        # 0x140051398
   14001715d:	call   QWORD PTR [rip+0x324a5]        # 0x140049608
   140017163:	mov    r8,rax
   140017166:	lea    rdx,[rip+0x3a22b]        # 0x140051398
   14001716d:	lea    rcx,[rsp+0x280]
   140017175:	call   0x140005154
   14001717a:	nop
   14001717b:	mov    r8d,0x20f
   140017181:	lea    rdx,[rsp+0x230]
   140017189:	lea    rcx,[rsp+0x258]
   140017191:	call   0x14001231c
   140017196:	nop
   140017197:	mov    rcx,QWORD PTR [rip+0x53692]        # 0x14006a830
   14001719e:	mov    r9,QWORD PTR [rcx]
   1400171a1:	mov    r8,rax
   1400171a4:	lea    rdx,[rsp+0x280]
   1400171ac:	call   QWORD PTR [r9+0x80]
   1400171b3:	nop
   1400171b4:	cmp    QWORD PTR [rsp+0x270],0x10
   1400171bd:	jb     0x1400171cd
   1400171bf:	mov    rcx,QWORD PTR [rsp+0x258]
   1400171c7:	call   QWORD PTR [rip+0x324ab]        # 0x140049678
   1400171cd:	mov    QWORD PTR [rsp+0x270],rdi
   1400171d5:	mov    QWORD PTR [rsp+0x268],rbx
   1400171dd:	mov    BYTE PTR [rsp+0x258],bl
   1400171e4:	cmp    QWORD PTR [rsp+0x298],0x10
   1400171ed:	jb     0x1400171fd
   1400171ef:	mov    rcx,QWORD PTR [rsp+0x280]
   1400171f7:	call   QWORD PTR [rip+0x3247b]        # 0x140049678
   1400171fd:	mov    QWORD PTR [rsp+0x298],rdi
   140017205:	mov    QWORD PTR [rsp+0x290],rbx
   14001720d:	mov    BYTE PTR [rsp+0x280],bl
   140017214:	cmp    QWORD PTR [rsp+0x248],0x10
   14001721d:	jb     0x14001722d
   14001721f:	mov    rcx,QWORD PTR [rsp+0x230]
   140017227:	call   QWORD PTR [rip+0x3244b]        # 0x140049678
   14001722d:	lea    r8,[rsp+0x300]
   140017235:	lea    rdx,[rsp+0x160]
   14001723d:	lea    rcx,[rsp+0x40]
   140017242:	call   0x140016218
   140017247:	jmp    0x140017355
   14001724c:	call   QWORD PTR [rip+0x323b6]        # 0x140049608
   140017252:	mov    r8,rax
   140017255:	mov    rdx,rsi
   140017258:	lea    rcx,[rsp+0x230]
   140017260:	call   0x140005154
   140017265:	nop
   140017266:	mov    QWORD PTR [rsp+0x298],rdi
   14001726e:	mov    QWORD PTR [rsp+0x290],rbx
   140017276:	mov    BYTE PTR [rsp+0x280],bl
   14001727d:	lea    rcx,[rip+0x3a12c]        # 0x1400513b0
   140017284:	call   QWORD PTR [rip+0x3237e]        # 0x140049608
   14001728a:	mov    r8,rax
   14001728d:	lea    rdx,[rip+0x3a11c]        # 0x1400513b0
   140017294:	lea    rcx,[rsp+0x280]
   14001729c:	call   0x140005154
   1400172a1:	nop
   1400172a2:	mov    r8d,0x217
   1400172a8:	lea    rdx,[rsp+0x230]
   1400172b0:	lea    rcx,[rsp+0x258]
   1400172b8:	call   0x14001231c
   1400172bd:	nop
   1400172be:	mov    rcx,QWORD PTR [rip+0x5356b]        # 0x14006a830
   1400172c5:	mov    r9,QWORD PTR [rcx]
   1400172c8:	mov    r8,rax
   1400172cb:	lea    rdx,[rsp+0x280]
   1400172d3:	call   QWORD PTR [r9+0x80]
   1400172da:	nop
   1400172db:	cmp    QWORD PTR [rsp+0x270],0x10
   1400172e4:	jb     0x1400172f4
   1400172e6:	mov    rcx,QWORD PTR [rsp+0x258]
   1400172ee:	call   QWORD PTR [rip+0x32384]        # 0x140049678
   1400172f4:	mov    QWORD PTR [rsp+0x270],rdi
   1400172fc:	mov    QWORD PTR [rsp+0x268],rbx
   140017304:	mov    BYTE PTR [rsp+0x258],bl
   14001730b:	cmp    QWORD PTR [rsp+0x298],0x10
   140017314:	jb     0x140017324
   140017316:	mov    rcx,QWORD PTR [rsp+0x280]
   14001731e:	call   QWORD PTR [rip+0x32354]        # 0x140049678
   140017324:	mov    QWORD PTR [rsp+0x298],rdi
   14001732c:	mov    QWORD PTR [rsp+0x290],rbx
   140017334:	mov    BYTE PTR [rsp+0x280],bl
   14001733b:	cmp    QWORD PTR [rsp+0x248],0x10
   140017344:	jb     0x140017355
   140017346:	mov    rcx,QWORD PTR [rsp+0x230]
   14001734e:	call   QWORD PTR [rip+0x32324]        # 0x140049678
   140017354:	nop
   140017355:	lea    rax,[rsp+0xf8]
   14001735d:	mov    QWORD PTR [rsp+0x38],rax
   140017362:	mov    rax,QWORD PTR [rsp+0x70]
   140017367:	movsxd rcx,DWORD PTR [rax+0x4]
   14001736b:	mov    QWORD PTR [rsp+rcx*1+0x70],r14
   140017370:	lea    rcx,[rsp+0x78]
   140017375:	call   0x140014834
   14001737a:	nop
   14001737b:	mov    rax,QWORD PTR [rsp+0x70]
   140017380:	movsxd rcx,DWORD PTR [rax+0x4]
   140017384:	mov    rax,QWORD PTR [rip+0x32235]        # 0x1400495c0
   14001738b:	mov    QWORD PTR [rsp+rcx*1+0x70],rax
   140017390:	lea    rcx,[rsp+0xf8]
   140017398:	call   QWORD PTR [rip+0x31f62]        # 0x140049300
   14001739e:	nop
   14001739f:	jmp    0x1400173b6
   1400173a1:	xor    ebx,ebx
   1400173a3:	lea    edi,[rbx+0xf]
   1400173a6:	lea    rsi,[rip+0x39d6b]        # 0x140051118
   1400173ad:	lea    r12d,[rbx+0x7]
   1400173b1:	mov    r13b,BYTE PTR [rsp+0x20]
   1400173b6:	test   r13b,r13b
   1400173b9:	je     0x1400174f6
   1400173bf:	mov    QWORD PTR [rsp+0x248],rdi
   1400173c7:	mov    QWORD PTR [rsp+0x240],rbx
   1400173cf:	mov    BYTE PTR [rsp+0x230],bl
   1400173d6:	mov    rcx,rsi
   1400173d9:	call   QWORD PTR [rip+0x32229]        # 0x140049608
   1400173df:	mov    r8,rax
   1400173e2:	mov    rdx,rsi
   1400173e5:	lea    rcx,[rsp+0x230]
   1400173ed:	call   0x140005154
   1400173f2:	nop
   1400173f3:	mov    QWORD PTR [rsp+0x270],rdi
   1400173fb:	mov    QWORD PTR [rsp+0x268],rbx
   140017403:	mov    BYTE PTR [rsp+0x258],bl
   14001740a:	lea    rcx,[rip+0x39fe7]        # 0x1400513f8
   140017411:	call   QWORD PTR [rip+0x321f1]        # 0x140049608
   140017417:	mov    r8,rax
   14001741a:	lea    rdx,[rip+0x39fd7]        # 0x1400513f8
   140017421:	lea    rcx,[rsp+0x258]
   140017429:	call   0x140005154
   14001742e:	nop
   14001742f:	mov    r8d,0x229
   140017435:	lea    rdx,[rsp+0x230]
   14001743d:	lea    rcx,[rsp+0x2a8]
   140017445:	call   0x14001231c
   14001744a:	nop
   14001744b:	mov    rcx,QWORD PTR [rip+0x533de]        # 0x14006a830
   140017452:	mov    r9,QWORD PTR [rcx]
   140017455:	mov    r8,rax
   140017458:	lea    rdx,[rsp+0x258]
   140017460:	call   QWORD PTR [r9+0x80]
   140017467:	nop
   140017468:	cmp    QWORD PTR [rsp+0x2c0],0x10
   140017471:	jb     0x140017481
   140017473:	mov    rcx,QWORD PTR [rsp+0x2a8]
   14001747b:	call   QWORD PTR [rip+0x321f7]        # 0x140049678
   140017481:	mov    QWORD PTR [rsp+0x2c0],rdi
   140017489:	mov    QWORD PTR [rsp+0x2b8],rbx
   140017491:	mov    BYTE PTR [rsp+0x2a8],bl
   140017498:	cmp    QWORD PTR [rsp+0x270],0x10
   1400174a1:	jb     0x1400174b1
   1400174a3:	mov    rcx,QWORD PTR [rsp+0x258]
   1400174ab:	call   QWORD PTR [rip+0x321c7]        # 0x140049678
   1400174b1:	mov    QWORD PTR [rsp+0x270],rdi
   1400174b9:	mov    QWORD PTR [rsp+0x268],rbx
   1400174c1:	mov    BYTE PTR [rsp+0x258],bl
   1400174c8:	cmp    QWORD PTR [rsp+0x248],0x10
   1400174d1:	jb     0x1400174e1
   1400174d3:	mov    rcx,QWORD PTR [rsp+0x230]
   1400174db:	call   QWORD PTR [rip+0x32197]        # 0x140049678
   1400174e1:	mov    edx,DWORD PTR [rsp+0x160]
   1400174e8:	lea    rcx,[rsp+0x300]
   1400174f0:	call   0x140017de8
   1400174f5:	nop
   1400174f6:	jmp    0x140017508
   1400174f8:	xor    ebx,ebx
   1400174fa:	lea    edi,[rbx+0xf]
   1400174fd:	lea    rsi,[rip+0x39c14]        # 0x140051118
   140017504:	lea    r12d,[rbx+0x7]
   140017508:	mov    rcx,QWORD PTR [rip+0x53301]        # 0x14006a810
   14001750f:	test   rcx,rcx
   140017512:	je     0x14001751a
   140017514:	call   QWORD PTR [rip+0x31b26]        # 0x140049040
   14001751a:	mov    QWORD PTR [rip+0x532ef],rbx        # 0x14006a810
   140017521:	mov    QWORD PTR [rip+0x532c8],rbx        # 0x14006a7f0
   140017528:	mov    QWORD PTR [rip+0x532c9],rbx        # 0x14006a7f8
   14001752f:	mov    QWORD PTR [rip+0x532ca],rbx        # 0x14006a800
   140017536:	mov    QWORD PTR [rip+0x532cb],rbx        # 0x14006a808
   14001753d:	mov    dl,0x1
   14001753f:	lea    rcx,[rsp+0x28]
   140017544:	call   0x14001d024
   140017549:	mov    QWORD PTR [rsp+0x270],rdi
   140017551:	mov    QWORD PTR [rsp+0x268],rbx
   140017559:	mov    BYTE PTR [rsp+0x258],bl
   140017560:	mov    rcx,rsi
   140017563:	call   QWORD PTR [rip+0x3209f]        # 0x140049608
   140017569:	mov    r8,rax
   14001756c:	mov    rdx,rsi
   14001756f:	lea    rcx,[rsp+0x258]
   140017577:	call   0x140005154
   14001757c:	nop
   14001757d:	mov    QWORD PTR [rsp+0x248],rdi
   140017585:	mov    QWORD PTR [rsp+0x240],rbx
   14001758d:	mov    BYTE PTR [rsp+0x230],bl
   140017594:	lea    rcx,[rip+0x39e95]        # 0x140051430
   14001759b:	call   QWORD PTR [rip+0x32067]        # 0x140049608
   1400175a1:	mov    r8,rax
   1400175a4:	lea    rdx,[rip+0x39e85]        # 0x140051430
   1400175ab:	lea    rcx,[rsp+0x230]
   1400175b3:	call   0x140005154
   1400175b8:	nop
   1400175b9:	mov    r8d,0x23a
   1400175bf:	lea    rdx,[rsp+0x258]
   1400175c7:	lea    rcx,[rsp+0x2a8]
   1400175cf:	call   0x14001231c
   1400175d4:	nop
   1400175d5:	mov    rcx,QWORD PTR [rip+0x53254]        # 0x14006a830
   1400175dc:	mov    r9,QWORD PTR [rcx]
   1400175df:	mov    r8,rax
   1400175e2:	lea    rdx,[rsp+0x230]
   1400175ea:	call   QWORD PTR [r9+0x80]
   1400175f1:	nop
   1400175f2:	cmp    QWORD PTR [rsp+0x2c0],0x10
   1400175fb:	jb     0x14001760b
   1400175fd:	mov    rcx,QWORD PTR [rsp+0x2a8]
   140017605:	call   QWORD PTR [rip+0x3206d]        # 0x140049678
   14001760b:	mov    QWORD PTR [rsp+0x2c0],rdi
   140017613:	mov    QWORD PTR [rsp+0x2b8],rbx
   14001761b:	mov    BYTE PTR [rsp+0x2a8],bl
   140017622:	cmp    QWORD PTR [rsp+0x248],0x10
   14001762b:	jb     0x14001763b
   14001762d:	mov    rcx,QWORD PTR [rsp+0x230]
   140017635:	call   QWORD PTR [rip+0x3203d]        # 0x140049678
   14001763b:	mov    QWORD PTR [rsp+0x248],rdi
   140017643:	mov    QWORD PTR [rsp+0x240],rbx
   14001764b:	mov    BYTE PTR [rsp+0x230],bl
   140017652:	cmp    QWORD PTR [rsp+0x270],0x10
   14001765b:	jb     0x14001766c
   14001765d:	mov    rcx,QWORD PTR [rsp+0x258]
   140017665:	call   QWORD PTR [rip+0x3200d]        # 0x140049678
   14001766b:	nop
   14001766c:	lea    rcx,[rsp+0x160]
   140017674:	call   0x14001f798
   140017679:	nop
   14001767a:	lea    rcx,[rsp+0x40]
   14001767f:	call   0x1400013c0
   140017684:	nop
   140017685:	cmp    QWORD PTR [rsp+0x368],0x10
   14001768e:	jb     0x14001769e
   140017690:	mov    rcx,QWORD PTR [rsp+0x350]
   140017698:	call   QWORD PTR [rip+0x31fda]        # 0x140049678
   14001769e:	mov    QWORD PTR [rsp+0x368],rdi
   1400176a6:	mov    QWORD PTR [rsp+0x360],rbx
   1400176ae:	mov    BYTE PTR [rsp+0x350],bl
   1400176b5:	cmp    QWORD PTR [rsp+0x340],0x8
   1400176be:	jb     0x1400176ce
   1400176c0:	mov    rcx,QWORD PTR [rsp+0x328]
   1400176c8:	call   QWORD PTR [rip+0x31faa]        # 0x140049678
   1400176ce:	mov    QWORD PTR [rsp+0x340],r12
   1400176d6:	mov    QWORD PTR [rsp+0x338],rbx
   1400176de:	mov    WORD PTR [rsp+0x328],bx
   1400176e6:	cmp    QWORD PTR [rsp+0x318],0x8
   1400176ef:	jb     0x1400176ff
   1400176f1:	mov    rcx,QWORD PTR [rsp+0x300]
   1400176f9:	call   QWORD PTR [rip+0x31f79]        # 0x140049678
   1400176ff:	mov    QWORD PTR [rsp+0x318],r12
   140017707:	mov    QWORD PTR [rsp+0x310],rbx
   14001770f:	mov    WORD PTR [rsp+0x300],bx
   140017717:	lea    rcx,[rsp+0x28]
   14001771c:	call   0x14001cfa8
   140017721:	nop
   140017722:	cmp    QWORD PTR [rsp+0x398],0x10
   14001772b:	jb     0x14001773b
   14001772d:	mov    rcx,QWORD PTR [rsp+0x380]
   140017735:	call   QWORD PTR [rip+0x31f3d]        # 0x140049678
   14001773b:	xor    eax,eax
   14001773d:	mov    rcx,QWORD PTR [rsp+0x3d8]
   140017745:	xor    rcx,rsp
   140017748:	call   0x14002b100
   14001774d:	lea    r11,[rsp+0x3e0]
   140017755:	mov    rbx,QWORD PTR [r11+0x20]
   140017759:	mov    rsi,QWORD PTR [r11+0x28]
   14001775d:	mov    rdi,QWORD PTR [r11+0x30]
   140017761:	mov    rsp,r11
   140017764:	pop    r14
   140017766:	pop    r13
   140017768:	pop    r12
   14001776a:	ret    
   14001776b:	int3   
   14001776c:	mov    QWORD PTR [rsp+0x8],rbx
   140017771:	push   rdi
   140017772:	sub    rsp,0x20
   140017776:	cmp    QWORD PTR [rcx+0x68],0x10
   14001777b:	mov    rbx,rcx
   14001777e:	jb     0x14001778a
   140017780:	mov    rcx,QWORD PTR [rcx+0x50]
   140017784:	call   QWORD PTR [rip+0x31eee]        # 0x140049678
   14001778a:	xor    edi,edi
   14001778c:	mov    QWORD PTR [rbx+0x68],0xf
   140017794:	mov    QWORD PTR [rbx+0x60],rdi
   140017798:	mov    BYTE PTR [rbx+0x50],dil
   14001779c:	cmp    QWORD PTR [rbx+0x40],0x8
   1400177a1:	jb     0x1400177ad
   1400177a3:	mov    rcx,QWORD PTR [rbx+0x28]
   1400177a7:	call   QWORD PTR [rip+0x31ecb]        # 0x140049678
   1400177ad:	mov    QWORD PTR [rbx+0x40],0x7
   1400177b5:	mov    QWORD PTR [rbx+0x38],rdi
   1400177b9:	mov    WORD PTR [rbx+0x28],di
   1400177bd:	cmp    QWORD PTR [rbx+0x18],0x8
   1400177c2:	jb     0x1400177cd
   1400177c4:	mov    rcx,QWORD PTR [rbx]
   1400177c7:	call   QWORD PTR [rip+0x31eab]        # 0x140049678
   1400177cd:	mov    QWORD PTR [rbx+0x18],0x7
   1400177d5:	mov    QWORD PTR [rbx+0x10],rdi
   1400177d9:	mov    WORD PTR [rbx],di
   1400177dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400177e1:	add    rsp,0x20
   1400177e5:	pop    rdi
   1400177e6:	ret    
   1400177e7:	int3   
   1400177e8:	rex push rdi
   1400177ea:	sub    rsp,0x30
   1400177ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400177f7:	mov    QWORD PTR [rsp+0x48],rbx
   1400177fc:	lea    rdi,[rcx+0x88]
   140017803:	mov    QWORD PTR [rsp+0x40],rdi
   140017808:	mov    rax,QWORD PTR [rdi-0x88]
   14001780f:	movsxd rdx,DWORD PTR [rax+0x4]
   140017813:	lea    rax,[rip+0x39ca6]        # 0x1400514c0
   14001781a:	mov    QWORD PTR [rdx+rdi*1-0x88],rax
   140017822:	lea    rcx,[rdi-0x80]
   140017826:	call   0x140014834
   14001782b:	nop
   14001782c:	mov    rax,QWORD PTR [rdi-0x88]
   140017833:	movsxd rdx,DWORD PTR [rax+0x4]
   140017837:	mov    rax,QWORD PTR [rip+0x31d82]        # 0x1400495c0
   14001783e:	mov    QWORD PTR [rdx+rdi*1-0x88],rax
   140017846:	mov    rcx,rdi
   140017849:	mov    rbx,QWORD PTR [rsp+0x48]
   14001784e:	add    rsp,0x30
   140017852:	pop    rdi
   140017853:	rex.W jmp QWORD PTR [rip+0x31aa6]        # 0x140049300
   14001785a:	int3   
   14001785b:	int3   
   14001785c:	mov    QWORD PTR [rsp+0x8],rbx
   140017861:	mov    QWORD PTR [rsp+0x10],rsi
   140017866:	push   rbp
   140017867:	lea    rbp,[rsp-0x57]
   14001786c:	sub    rsp,0xa0
   140017873:	mov    rax,QWORD PTR [rip+0x50976]        # 0x1400681f0
   14001787a:	xor    rax,rsp
   14001787d:	mov    QWORD PTR [rbp+0x4f],rax
   140017881:	mov    rax,QWORD PTR [rip+0x52f58]        # 0x14006a7e0
   140017888:	test   rax,rax
   14001788b:	je     0x140017890
   14001788d:	mov    BYTE PTR [rax],0x1
   140017890:	and    QWORD PTR [rbp+0xf],0x0
   140017895:	lea    rcx,[rip+0x3987c]        # 0x140051118
   14001789c:	mov    esi,0xf
   1400178a1:	mov    BYTE PTR [rip+0x52f40],0x1        # 0x14006a7e8
   1400178a8:	mov    QWORD PTR [rbp+0x17],rsi
   1400178ac:	mov    BYTE PTR [rbp-0x1],0x0
   1400178b0:	call   QWORD PTR [rip+0x31d52]        # 0x140049608
   1400178b6:	lea    rdx,[rip+0x3985b]        # 0x140051118
   1400178bd:	lea    rcx,[rbp-0x1]
   1400178c1:	mov    r8,rax
   1400178c4:	call   0x140005154
   1400178c9:	and    QWORD PTR [rbp-0x19],0x0
   1400178ce:	lea    rcx,[rip+0x39b7b]        # 0x140051450
   1400178d5:	mov    QWORD PTR [rbp-0x11],rsi
   1400178d9:	mov    BYTE PTR [rbp-0x29],0x0
   1400178dd:	call   QWORD PTR [rip+0x31d25]        # 0x140049608
   1400178e3:	lea    rdx,[rip+0x39b66]        # 0x140051450
   1400178ea:	lea    rcx,[rbp-0x29]
   1400178ee:	mov    r8,rax
   1400178f1:	call   0x140005154
   1400178f6:	mov    r11,QWORD PTR [rip+0x52f33]        # 0x14006a830
   1400178fd:	lea    rdx,[rbp-0x1]
   140017901:	mov    rbx,QWORD PTR [r11]
   140017904:	lea    rcx,[rbp+0x27]
   140017908:	mov    r8d,0x24e
   14001790e:	call   0x14001231c
   140017913:	mov    rcx,QWORD PTR [rip+0x52f16]        # 0x14006a830
   14001791a:	lea    rdx,[rbp-0x29]
   14001791e:	mov    r8,rax
   140017921:	call   QWORD PTR [rbx+0x80]
   140017927:	cmp    QWORD PTR [rbp+0x3f],0x10
   14001792c:	jb     0x140017938
   14001792e:	mov    rcx,QWORD PTR [rbp+0x27]
   140017932:	call   QWORD PTR [rip+0x31d40]        # 0x140049678
   140017938:	and    QWORD PTR [rbp+0x37],0x0
   14001793d:	cmp    QWORD PTR [rbp-0x11],0x10
   140017942:	mov    QWORD PTR [rbp+0x3f],rsi
   140017946:	mov    BYTE PTR [rbp+0x27],0x0
   14001794a:	jb     0x140017956
   14001794c:	mov    rcx,QWORD PTR [rbp-0x29]
   140017950:	call   QWORD PTR [rip+0x31d22]        # 0x140049678
   140017956:	and    QWORD PTR [rbp-0x19],0x0
   14001795b:	cmp    QWORD PTR [rbp+0x17],0x10
   140017960:	mov    QWORD PTR [rbp-0x11],rsi
   140017964:	mov    BYTE PTR [rbp-0x29],0x0
   140017968:	jb     0x140017974
   14001796a:	mov    rcx,QWORD PTR [rbp-0x1]
   14001796e:	call   QWORD PTR [rip+0x31d04]        # 0x140049678
   140017974:	mov    rcx,QWORD PTR [rbp+0x4f]
   140017978:	xor    rcx,rsp
   14001797b:	call   0x14002b100
   140017980:	lea    r11,[rsp+0xa0]
   140017988:	mov    rbx,QWORD PTR [r11+0x10]
   14001798c:	mov    rsi,QWORD PTR [r11+0x18]
   140017990:	mov    rsp,r11
   140017993:	pop    rbp
   140017994:	ret    
   140017995:	int3   
   140017996:	int3   
   140017997:	int3   
   140017998:	sub    rsp,0xe8
   14001799f:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400179a8:	mov    rax,QWORD PTR [rip+0x50841]        # 0x1400681f0
   1400179af:	xor    rax,rsp
   1400179b2:	mov    QWORD PTR [rsp+0xd8],rax
   1400179ba:	cmp    QWORD PTR [rip+0x52e1e],0x0        # 0x14006a7e0
   1400179c2:	jne    0x1400179de
   1400179c4:	mov    ecx,0x1
   1400179c9:	call   QWORD PTR [rip+0x31cc9]        # 0x140049698
   1400179cf:	test   rax,rax
   1400179d2:	je     0x1400179d7
   1400179d4:	mov    BYTE PTR [rax],0x0
   1400179d7:	mov    QWORD PTR [rip+0x52e02],rax        # 0x14006a7e0
   1400179de:	mov    rax,QWORD PTR [rip+0x52dfb]        # 0x14006a7e0
   1400179e5:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400179ed:	xor    rcx,rsp
   1400179f0:	call   0x14002b100
   1400179f5:	add    rsp,0xe8
   1400179fc:	ret    
   1400179fd:	int3   
   1400179fe:	int3   
   1400179ff:	int3   
   140017a00:	rex push rbx
   140017a02:	push   rsi
   140017a03:	push   rdi
   140017a04:	push   r12
   140017a06:	push   r13
   140017a08:	push   r14
   140017a0a:	push   r15
   140017a0c:	sub    rsp,0xf0
   140017a13:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140017a1f:	mov    rax,QWORD PTR [rip+0x507ca]        # 0x1400681f0
   140017a26:	xor    rax,rsp
   140017a29:	mov    QWORD PTR [rsp+0xe0],rax
   140017a31:	mov    rax,r8
   140017a34:	mov    QWORD PTR [rsp+0x40],rax
   140017a39:	mov    rdi,rdx
   140017a3c:	mov    QWORD PTR [rsp+0x38],rcx
   140017a41:	mov    QWORD PTR [rsp+0x78],rcx
   140017a46:	mov    QWORD PTR [rsp+0x80],rdx
   140017a4e:	mov    QWORD PTR [rsp+0x70],rax
   140017a53:	xor    ebx,ebx
   140017a55:	mov    r15d,ebx
   140017a58:	mov    DWORD PTR [rsp+0x24],ebx
   140017a5c:	mov    r12d,ebx
   140017a5f:	cmp    QWORD PTR [rdx+0x18],0x8
   140017a64:	jb     0x140017a6b
   140017a66:	mov    rcx,QWORD PTR [rdx]
   140017a69:	jmp    0x140017a6e
   140017a6b:	mov    rcx,rdx
   140017a6e:	call   QWORD PTR [rip+0x31e8c]        # 0x140049900
   140017a74:	mov    esi,0x1
   140017a79:	cmp    eax,esi
   140017a7b:	jne    0x140017dbc
   140017a81:	cmp    QWORD PTR [rdi+0x18],0x8
   140017a86:	jb     0x140017a8d
   140017a88:	mov    rcx,QWORD PTR [rdi]
   140017a8b:	jmp    0x140017a90
   140017a8d:	mov    rcx,rdi
   140017a90:	call   QWORD PTR [rip+0x31e72]        # 0x140049908
   140017a96:	test   eax,eax
   140017a98:	je     0x140017dbc
   140017a9e:	mov    QWORD PTR [rsp+0x48],rbx
   140017aa3:	mov    QWORD PTR [rsp+0x50],rbx
   140017aa8:	mov    QWORD PTR [rsp+0x58],rbx
   140017aad:	xor    r8d,r8d
   140017ab0:	lea    rdx,[rsp+0x48]
   140017ab5:	mov    rcx,rdi
   140017ab8:	call   0x14000aef8
   140017abd:	mov    r13b,bl
   140017ac0:	test   r12d,r12d
   140017ac3:	jne    0x140017db0
   140017ac9:	test   r13b,r13b
   140017acc:	jne    0x140017db0
   140017ad2:	mov    rcx,QWORD PTR [rsp+0x50]
   140017ad7:	sub    rcx,QWORD PTR [rsp+0x48]
   140017adc:	movabs rax,0x6666666666666667
   140017ae6:	imul   rcx
   140017ae9:	mov    rcx,rdx
   140017aec:	sar    rcx,0x4
   140017af0:	mov    rax,rcx
   140017af3:	shr    rax,0x3f
   140017af7:	add    rcx,rax
   140017afa:	mov    QWORD PTR [rsp+0x30],rcx
   140017aff:	je     0x140017db0
   140017b05:	cmp    BYTE PTR [rip+0x52cdd],bl        # 0x14006a7e8
   140017b0b:	jne    0x140017db0
   140017b11:	mov    r13b,sil
   140017b14:	mov    BYTE PTR [rsp+0x20],sil
   140017b19:	mov    r14,rbx
   140017b1c:	mov    QWORD PTR [rsp+0x28],rbx
   140017b21:	mov    QWORD PTR [rsp+0x68],rcx
   140017b26:	test   r12d,r12d
   140017b29:	jne    0x140017d91
   140017b2f:	cmp    r14,rcx
   140017b32:	jae    0x140017d91
   140017b38:	cmp    BYTE PTR [rip+0x52caa],bl        # 0x14006a7e8
   140017b3e:	jne    0x140017d91
   140017b44:	lea    rcx,[r14+r14*4]
   140017b48:	mov    rax,QWORD PTR [rsp+0x48]
   140017b4d:	lea    rdx,[rax+rcx*8]
   140017b51:	mov    QWORD PTR [rsp+0xa8],0x7
   140017b5d:	mov    QWORD PTR [rsp+0xa0],rbx
   140017b65:	mov    WORD PTR [rsp+0x90],bx
   140017b6d:	or     r9,0xffffffffffffffff
   140017b71:	xor    r8d,r8d
   140017b74:	lea    rcx,[rsp+0x90]
   140017b7c:	call   0x140009914
   140017b81:	nop
   140017b82:	mov    rdx,QWORD PTR [rsp+0x40]
   140017b87:	lea    rcx,[rsp+0xb8]
   140017b8f:	call   0x1400095c4
   140017b94:	or     r15d,esi
   140017b97:	mov    DWORD PTR [rsp+0x24],r15d
   140017b9c:	mov    r8,QWORD PTR [rax+0x10]
   140017ba0:	cmp    QWORD PTR [rax+0x18],0x8
   140017ba5:	jb     0x140017baa
   140017ba7:	mov    rax,QWORD PTR [rax]
   140017baa:	mov    rdx,rax
   140017bad:	lea    rcx,[rsp+0x90]
   140017bb5:	call   0x14000f0dc
   140017bba:	cmp    rax,0xffffffffffffffff
   140017bbe:	je     0x140017bed
   140017bc0:	lea    rcx,[rip+0x391c1]        # 0x140050d88
   140017bc7:	call   QWORD PTR [rip+0x31ae3]        # 0x1400496b0
   140017bcd:	mov    r8,rax
   140017bd0:	lea    rdx,[rip+0x391b1]        # 0x140050d88
   140017bd7:	lea    rcx,[rsp+0x90]
   140017bdf:	call   0x14000f0dc
   140017be4:	cmp    rax,0xffffffffffffffff
   140017be8:	mov    r13b,sil
   140017beb:	jne    0x140017bf0
   140017bed:	mov    r13b,bl
   140017bf0:	test   sil,r15b
   140017bf3:	je     0x140017c17
   140017bf5:	and    r15d,0xfffffffe
   140017bf9:	mov    DWORD PTR [rsp+0x24],r15d
   140017bfe:	cmp    QWORD PTR [rsp+0xd0],0x8
   140017c07:	jb     0x140017c17
   140017c09:	mov    rcx,QWORD PTR [rsp+0xb8]
   140017c11:	call   QWORD PTR [rip+0x31a61]        # 0x140049678
   140017c17:	test   r13b,r13b
   140017c1a:	je     0x140017d1e
   140017c20:	mov    r13b,bl
   140017c23:	mov    BYTE PTR [rsp+0x20],bl
   140017c27:	lea    rcx,[rsp+0x90]
   140017c2f:	call   0x14000aa80
   140017c34:	test   al,al
   140017c36:	jne    0x140017c4a
   140017c38:	lea    rcx,[rsp+0x90]
   140017c40:	call   0x14000a678
   140017c45:	jmp    0x140017d23
   140017c4a:	call   0x140017998
   140017c4f:	test   rax,rax
   140017c52:	jne    0x140017c9a
   140017c54:	cmp    QWORD PTR [rsp+0xa8],0x8
   140017c5d:	jb     0x140017c6d
   140017c5f:	mov    rcx,QWORD PTR [rsp+0x90]
   140017c67:	call   QWORD PTR [rip+0x31a0b]        # 0x140049678
   140017c6d:	mov    QWORD PTR [rsp+0xa8],0x7
   140017c79:	mov    QWORD PTR [rsp+0xa0],rbx
   140017c81:	mov    WORD PTR [rsp+0x90],bx
   140017c89:	lea    rcx,[rsp+0x48]
   140017c8e:	call   0x14000f64c
   140017c93:	mov    eax,esi
   140017c95:	jmp    0x140017dc2
   140017c9a:	lea    rdx,[rsp+0x90]
   140017ca2:	lea    rcx,[rsp+0xb8]
   140017caa:	call   0x140009474
   140017caf:	mov    r13,rax
   140017cb2:	call   0x140017998
   140017cb7:	mov    r8,r13
   140017cba:	mov    rdx,QWORD PTR [rsp+0x38]
   140017cbf:	mov    rcx,rax
   140017cc2:	call   0x140015278
   140017cc7:	mov    r13d,eax
   140017cca:	cmp    QWORD PTR [rsp+0xd0],0x10
   140017cd3:	jb     0x140017ce3
   140017cd5:	mov    rcx,QWORD PTR [rsp+0xb8]
   140017cdd:	call   QWORD PTR [rip+0x31995]        # 0x140049678
   140017ce3:	mov    QWORD PTR [rsp+0xd0],0xf
   140017cef:	mov    QWORD PTR [rsp+0xc8],rbx
   140017cf7:	mov    BYTE PTR [rsp+0xb8],bl
   140017cfe:	test   r13d,r13d
   140017d01:	cmovne r12d,esi
   140017d05:	mov    rcx,QWORD PTR [rip+0x52ad4]        # 0x14006a7e0
   140017d0c:	test   rcx,rcx
   140017d0f:	je     0x140017d1e
   140017d11:	call   QWORD PTR [rip+0x31961]        # 0x140049678
   140017d17:	mov    QWORD PTR [rip+0x52ac2],rbx        # 0x14006a7e0
   140017d1e:	mov    r13b,BYTE PTR [rsp+0x20]
   140017d23:	add    r14,rsi
   140017d26:	mov    QWORD PTR [rsp+0x28],r14
   140017d2b:	cmp    QWORD PTR [rsp+0xa8],0x8
   140017d34:	jb     0x140017d45
   140017d36:	mov    rcx,QWORD PTR [rsp+0x90]
   140017d3e:	call   QWORD PTR [rip+0x31934]        # 0x140049678
   140017d44:	nop
   140017d45:	mov    rcx,QWORD PTR [rsp+0x30]
   140017d4a:	jmp    0x140017b26
   140017d4f:	xor    ebx,ebx
   140017d51:	lea    esi,[rbx+0x1]
   140017d54:	mov    r12d,esi
   140017d57:	mov    r13b,BYTE PTR [rsp+0x20]
   140017d5c:	mov    r14,QWORD PTR [rsp+0x28]
   140017d61:	mov    rcx,QWORD PTR [rsp+0x68]
   140017d66:	mov    QWORD PTR [rsp+0x30],rcx
   140017d6b:	mov    r15d,DWORD PTR [rsp+0x24]
   140017d70:	mov    rax,QWORD PTR [rsp+0x78]
   140017d75:	mov    QWORD PTR [rsp+0x38],rax
   140017d7a:	mov    rdi,QWORD PTR [rsp+0x80]
   140017d82:	mov    rax,QWORD PTR [rsp+0x70]
   140017d87:	mov    QWORD PTR [rsp+0x40],rax
   140017d8c:	jmp    0x140017b26
   140017d91:	lea    rcx,[rsp+0x48]
   140017d96:	call   0x1400181b4
   140017d9b:	xor    r8d,r8d
   140017d9e:	lea    rdx,[rsp+0x48]
   140017da3:	mov    rcx,rdi
   140017da6:	call   0x14000aef8
   140017dab:	jmp    0x140017ac0
   140017db0:	lea    rcx,[rsp+0x48]
   140017db5:	call   0x14000f64c
   140017dba:	jmp    0x140017dbf
   140017dbc:	mov    r12d,esi
   140017dbf:	mov    eax,r12d
   140017dc2:	mov    rcx,QWORD PTR [rsp+0xe0]
   140017dca:	xor    rcx,rsp
   140017dcd:	call   0x14002b100
   140017dd2:	add    rsp,0xf0
   140017dd9:	pop    r15
   140017ddb:	pop    r14
   140017ddd:	pop    r13
   140017ddf:	pop    r12
   140017de1:	pop    rdi
   140017de2:	pop    rsi
   140017de3:	pop    rbx
   140017de4:	ret    
   140017de5:	int3   
   140017de6:	int3   
   140017de7:	int3   
   140017de8:	mov    rax,rsp
   140017deb:	mov    DWORD PTR [rax+0x10],edx
   140017dee:	push   rdi
   140017def:	push   r12
   140017df1:	push   r13
   140017df3:	push   r14
   140017df5:	push   r15
   140017df7:	sub    rsp,0x130
   140017dfe:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   140017e0a:	mov    QWORD PTR [rax+0x18],rbx
   140017e0e:	mov    QWORD PTR [rax+0x20],rsi
   140017e12:	mov    rax,QWORD PTR [rip+0x503d7]        # 0x1400681f0
   140017e19:	xor    rax,rsp
   140017e1c:	mov    QWORD PTR [rsp+0x128],rax
   140017e24:	mov    r14d,edx
   140017e27:	mov    rdi,rcx
   140017e2a:	xor    esi,esi
   140017e2c:	mov    ebx,esi
   140017e2e:	mov    QWORD PTR [rsp+0x28],rbx
   140017e33:	mov    r12d,esi
   140017e36:	mov    QWORD PTR [rsp+0x30],rsi
   140017e3b:	mov    QWORD PTR [rsp+0x38],rsi
   140017e40:	mov    r13d,esi
   140017e43:	mov    QWORD PTR [rsp+0x50],rsi
   140017e48:	cmp    QWORD PTR [rcx+0x18],0x8
   140017e4d:	jb     0x140017e52
   140017e4f:	mov    rcx,QWORD PTR [rcx]
   140017e52:	call   QWORD PTR [rip+0x31aa8]        # 0x140049900
   140017e58:	cmp    eax,0x1
   140017e5b:	jne    0x14001806d
   140017e61:	cmp    QWORD PTR [rdi+0x18],0x8
   140017e66:	jb     0x140017e6d
   140017e68:	mov    rcx,QWORD PTR [rdi]
   140017e6b:	jmp    0x140017e70
   140017e6d:	mov    rcx,rdi
   140017e70:	call   QWORD PTR [rip+0x31a92]        # 0x140049908
   140017e76:	test   eax,eax
   140017e78:	je     0x14001806d
   140017e7e:	mov    QWORD PTR [rsp+0x68],rsi
   140017e83:	mov    QWORD PTR [rsp+0x70],rsi
   140017e88:	mov    QWORD PTR [rsp+0x78],rsi
   140017e8d:	xor    r8d,r8d
   140017e90:	lea    rdx,[rsp+0x68]
   140017e95:	mov    rcx,rdi
   140017e98:	call   0x14000aef8
   140017e9d:	mov    rdi,rsi
   140017ea0:	mov    QWORD PTR [rsp+0x20],rsi
   140017ea5:	mov    rcx,QWORD PTR [rsp+0x70]
   140017eaa:	sub    rcx,QWORD PTR [rsp+0x68]
   140017eaf:	movabs rax,0x6666666666666667
   140017eb9:	imul   rcx
   140017ebc:	mov    r15,rdx
   140017ebf:	sar    r15,0x4
   140017ec3:	mov    rax,r15
   140017ec6:	shr    rax,0x3f
   140017eca:	add    r15,rax
   140017ecd:	mov    QWORD PTR [rsp+0x88],r15
   140017ed5:	cmp    rdi,r15
   140017ed8:	jae    0x140018063
   140017ede:	lea    rcx,[rdi+rdi*4]
   140017ee2:	mov    rax,QWORD PTR [rsp+0x68]
   140017ee7:	lea    rdx,[rax+rcx*8]
   140017eeb:	mov    QWORD PTR [rsp+0xb8],0x7
   140017ef7:	mov    QWORD PTR [rsp+0xb0],rsi
   140017eff:	mov    WORD PTR [rsp+0xa0],si
   140017f07:	or     r9,0xffffffffffffffff
   140017f0b:	xor    r8d,r8d
   140017f0e:	lea    rcx,[rsp+0xa0]
   140017f16:	call   0x140009914
   140017f1b:	nop
   140017f1c:	lea    rcx,[rip+0x38e65]        # 0x140050d88
   140017f23:	call   QWORD PTR [rip+0x31787]        # 0x1400496b0
   140017f29:	mov    r8,rax
   140017f2c:	lea    rdx,[rip+0x38e55]        # 0x140050d88
   140017f33:	lea    rcx,[rsp+0xa0]
   140017f3b:	call   0x14000f0dc
   140017f40:	cmp    rax,0xffffffffffffffff
   140017f44:	je     0x140018011
   140017f4a:	lea    rdx,[rsp+0x58]
   140017f4f:	lea    rcx,[rsp+0xa0]
   140017f57:	call   0x14000a520
   140017f5c:	lea    r8,[rsp+0x90]
   140017f64:	lea    rdx,[rsp+0x48]
   140017f69:	lea    rcx,[rsp+0xa0]
   140017f71:	call   0x14000a6bc
   140017f76:	add    r13,QWORD PTR [rsp+0x48]
   140017f7b:	mov    QWORD PTR [rsp+0x50],r13
   140017f80:	mov    QWORD PTR [rsp+0xe0],0x7
   140017f8c:	mov    QWORD PTR [rsp+0xd8],rsi
   140017f94:	mov    WORD PTR [rsp+0xc8],si
   140017f9c:	or     r9,0xffffffffffffffff
   140017fa0:	xor    r8d,r8d
   140017fa3:	lea    rdx,[rsp+0xa0]
   140017fab:	lea    rcx,[rsp+0xc8]
   140017fb3:	call   0x140009914
   140017fb8:	mov    r9,QWORD PTR [rsp+0x48]
   140017fbd:	mov    r8,QWORD PTR [rsp+0x58]
   140017fc2:	lea    rdx,[rsp+0xc8]
   140017fca:	lea    rcx,[rsp+0xf0]
   140017fd2:	call   0x1400153e0
   140017fd7:	nop
   140017fd8:	mov    r9,rax
   140017fdb:	mov    r8,rbx
   140017fde:	lea    rdx,[rsp+0x60]
   140017fe3:	lea    rcx,[rsp+0x28]
   140017fe8:	call   0x140018968
   140017fed:	nop
   140017fee:	cmp    QWORD PTR [rsp+0x108],0x8
   140017ff7:	jb     0x140018007
   140017ff9:	mov    rcx,QWORD PTR [rsp+0xf0]
   140018001:	call   QWORD PTR [rip+0x31671]        # 0x140049678
   140018007:	mov    rbx,QWORD PTR [rsp+0x28]
   14001800c:	mov    r12,QWORD PTR [rsp+0x30]
   140018011:	inc    rdi
   140018014:	mov    QWORD PTR [rsp+0x20],rdi
   140018019:	cmp    QWORD PTR [rsp+0xb8],0x8
   140018022:	jb     0x140018033
   140018024:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001802c:	call   QWORD PTR [rip+0x31646]        # 0x140049678
   140018032:	nop
   140018033:	jmp    0x140017ed5
   140018038:	xor    esi,esi
   14001803a:	mov    r14d,DWORD PTR [rsp+0x168]
   140018042:	mov    r12,QWORD PTR [rsp+0x30]
   140018047:	mov    rbx,QWORD PTR [rsp+0x28]
   14001804c:	mov    r13,QWORD PTR [rsp+0x50]
   140018051:	mov    rdi,QWORD PTR [rsp+0x20]
   140018056:	mov    r15,QWORD PTR [rsp+0x88]
   14001805e:	jmp    0x140017ed5
   140018063:	lea    rcx,[rsp+0x68]
   140018068:	call   0x14000f64c
   14001806d:	mov    rcx,r12
   140018070:	sub    rcx,rbx
   140018073:	movabs r15,0x4924924924924925
   14001807d:	mov    rax,r15
   140018080:	imul   rcx
   140018083:	sar    rdx,0x4
   140018087:	mov    r8,rdx
   14001808a:	shr    r8,0x3f
   14001808e:	add    r8,rdx
   140018091:	mov    rdx,r12
   140018094:	mov    rcx,rbx
   140018097:	call   0x140018c90
   14001809c:	shl    r14d,0x14
   1400180a0:	mov    edi,r14d
   1400180a3:	cmp    r13,rdi
   1400180a6:	jbe    0x140018117
   1400180a8:	mov    rcx,r12
   1400180ab:	sub    rcx,rbx
   1400180ae:	mov    rax,r15
   1400180b1:	imul   rcx
   1400180b4:	sar    rdx,0x4
   1400180b8:	mov    rax,rdx
   1400180bb:	shr    rax,0x3f
   1400180bf:	add    rdx,rax
   1400180c2:	je     0x140018117
   1400180c4:	lea    rdx,[rsp+0xc8]
   1400180cc:	mov    rcx,rbx
   1400180cf:	call   0x140015488
   1400180d4:	mov    rcx,rax
   1400180d7:	call   0x14000a678
   1400180dc:	cmp    QWORD PTR [rsp+0xe0],0x8
   1400180e5:	jb     0x1400180f5
   1400180e7:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400180ef:	call   QWORD PTR [rip+0x31583]        # 0x140049678
   1400180f5:	sub    r13,QWORD PTR [rbx+0x30]
   1400180f9:	mov    r8,rbx
   1400180fc:	lea    rdx,[rsp+0x60]
   140018101:	lea    rcx,[rsp+0x28]
   140018106:	call   0x1400182ec
   14001810b:	mov    r12,QWORD PTR [rsp+0x30]
   140018110:	mov    rbx,QWORD PTR [rsp+0x28]
   140018115:	jmp    0x1400180a3
   140018117:	test   rbx,rbx
   14001811a:	je     0x140018155
   14001811c:	mov    rdi,rbx
   14001811f:	cmp    rbx,r12
   140018122:	je     0x14001814c
   140018124:	cmp    QWORD PTR [rdi+0x18],0x8
   140018129:	jb     0x140018134
   14001812b:	mov    rcx,QWORD PTR [rdi]
   14001812e:	call   QWORD PTR [rip+0x31544]        # 0x140049678
   140018134:	mov    QWORD PTR [rdi+0x18],0x7
   14001813c:	mov    QWORD PTR [rdi+0x10],rsi
   140018140:	mov    WORD PTR [rdi],si
   140018143:	add    rdi,0x38
   140018147:	cmp    rdi,r12
   14001814a:	jne    0x140018124
   14001814c:	mov    rcx,rbx
   14001814f:	call   QWORD PTR [rip+0x31523]        # 0x140049678
   140018155:	mov    rcx,QWORD PTR [rsp+0x128]
   14001815d:	xor    rcx,rsp
   140018160:	call   0x14002b100
   140018165:	lea    r11,[rsp+0x130]
   14001816d:	mov    rbx,QWORD PTR [r11+0x40]
   140018171:	mov    rsi,QWORD PTR [r11+0x48]
   140018175:	mov    rsp,r11
   140018178:	pop    r15
   14001817a:	pop    r14
   14001817c:	pop    r13
   14001817e:	pop    r12
   140018180:	pop    rdi
   140018181:	ret    
   140018182:	int3   
   140018183:	int3   
   140018184:	rex push rbx
   140018186:	sub    rsp,0x20
   14001818a:	cmp    QWORD PTR [rcx+0x18],0x8
   14001818f:	mov    rbx,rcx
   140018192:	jb     0x14001819d
   140018194:	mov    rcx,QWORD PTR [rcx]
   140018197:	call   QWORD PTR [rip+0x314db]        # 0x140049678
   14001819d:	xor    eax,eax
   14001819f:	mov    QWORD PTR [rbx+0x18],0x7
   1400181a7:	mov    QWORD PTR [rbx+0x10],rax
   1400181ab:	mov    WORD PTR [rbx],ax
   1400181ae:	add    rsp,0x20
   1400181b2:	pop    rbx
   1400181b3:	ret    
   1400181b4:	mov    rax,rsp
   1400181b7:	mov    QWORD PTR [rax+0x8],rbx
   1400181bb:	mov    QWORD PTR [rax+0x10],rbp
   1400181bf:	mov    QWORD PTR [rax+0x18],rsi
   1400181c3:	mov    QWORD PTR [rax+0x20],rdi
   1400181c7:	push   r12
   1400181c9:	sub    rsp,0x20
   1400181cd:	mov    rsi,QWORD PTR [rcx+0x8]
   1400181d1:	mov    rbx,QWORD PTR [rcx]
   1400181d4:	mov    rdi,rcx
   1400181d7:	cmp    rbx,rsi
   1400181da:	je     0x140018238
   1400181dc:	mov    rbp,rsi
   1400181df:	cmp    rsi,rsi
   1400181e2:	je     0x1400181fc
   1400181e4:	mov    rdx,rbp
   1400181e7:	mov    rcx,rbx
   1400181ea:	call   0x140009880
   1400181ef:	add    rbp,0x28
   1400181f3:	add    rbx,0x28
   1400181f7:	cmp    rbp,rsi
   1400181fa:	jne    0x1400181e4
   1400181fc:	mov    rbp,QWORD PTR [rdi+0x8]
   140018200:	mov    rsi,rbx
   140018203:	cmp    rbx,rbp
   140018206:	je     0x140018234
   140018208:	xor    r12d,r12d
   14001820b:	cmp    QWORD PTR [rsi+0x18],0x8
   140018210:	jb     0x14001821b
   140018212:	mov    rcx,QWORD PTR [rsi]
   140018215:	call   QWORD PTR [rip+0x3145d]        # 0x140049678
   14001821b:	mov    QWORD PTR [rsi+0x18],0x7
   140018223:	mov    QWORD PTR [rsi+0x10],r12
   140018227:	mov    WORD PTR [rsi],r12w
   14001822b:	add    rsi,0x28
   14001822f:	cmp    rsi,rbp
   140018232:	jne    0x14001820b
   140018234:	mov    QWORD PTR [rdi+0x8],rbx
   140018238:	mov    rbx,QWORD PTR [rsp+0x30]
   14001823d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018242:	mov    rsi,QWORD PTR [rsp+0x40]
   140018247:	mov    rdi,QWORD PTR [rsp+0x48]
   14001824c:	add    rsp,0x20
   140018250:	pop    r12
   140018252:	ret    
   140018253:	int3   
   140018254:	rex push rbx
   140018256:	sub    rsp,0x20
   14001825a:	and    DWORD PTR [rsp+0x30],0x0
   14001825f:	add    rcx,0x8
   140018263:	mov    rbx,rdx
   140018266:	call   0x140014ef8
   14001826b:	mov    rax,rbx
   14001826e:	add    rsp,0x20
   140018272:	pop    rbx
   140018273:	ret    
   140018274:	mov    QWORD PTR [rsp+0x8],rbx
   140018279:	mov    QWORD PTR [rsp+0x10],rbp
   14001827e:	mov    QWORD PTR [rsp+0x18],rsi
   140018283:	push   rdi
   140018284:	sub    rsp,0x20
   140018288:	mov    rdi,QWORD PTR [rcx]
   14001828b:	xor    ebp,ebp
   14001828d:	mov    rbx,rcx
   140018290:	test   rdi,rdi
   140018293:	je     0x1400182cc
   140018295:	mov    rsi,QWORD PTR [rcx+0x8]
   140018299:	jmp    0x1400182be
   14001829b:	cmp    QWORD PTR [rdi+0x18],0x8
   1400182a0:	jb     0x1400182ab
   1400182a2:	mov    rcx,QWORD PTR [rdi]
   1400182a5:	call   QWORD PTR [rip+0x313cd]        # 0x140049678
   1400182ab:	mov    QWORD PTR [rdi+0x18],0x7
   1400182b3:	mov    QWORD PTR [rdi+0x10],rbp
   1400182b7:	mov    WORD PTR [rdi],bp
   1400182ba:	add    rdi,0x38
   1400182be:	cmp    rdi,rsi
   1400182c1:	jne    0x14001829b
   1400182c3:	mov    rcx,QWORD PTR [rbx]
   1400182c6:	call   QWORD PTR [rip+0x313ac]        # 0x140049678
   1400182cc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400182d1:	mov    QWORD PTR [rbx],rbp
   1400182d4:	mov    QWORD PTR [rbx+0x8],rbp
   1400182d8:	mov    QWORD PTR [rbx+0x10],rbp
   1400182dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400182e1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400182e6:	add    rsp,0x20
   1400182ea:	pop    rdi
   1400182eb:	ret    
   1400182ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400182f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400182f6:	mov    QWORD PTR [rsp+0x18],r8
   1400182fb:	push   rsi
   1400182fc:	push   rdi
   1400182fd:	push   r12
   1400182ff:	sub    rsp,0x20
   140018303:	mov    r12,QWORD PTR [rcx+0x8]
   140018307:	lea    rbx,[r8+0x38]
   14001830b:	mov    rbp,rdx
   14001830e:	mov    rdi,rcx
   140018311:	cmp    rbx,r12
   140018314:	je     0x14001834e
   140018316:	lea    rsi,[r8+0x30]
   14001831a:	lea    rcx,[rsi-0x30]
   14001831e:	or     r9,0xffffffffffffffff
   140018322:	xor    r8d,r8d
   140018325:	mov    rdx,rbx
   140018328:	call   0x140009914
   14001832d:	mov    r11,QWORD PTR [rbx+0x28]
   140018331:	add    rbx,0x38
   140018335:	mov    QWORD PTR [rsi-0x8],r11
   140018339:	mov    rax,QWORD PTR [rbx-0x8]
   14001833d:	mov    QWORD PTR [rsi],rax
   140018340:	add    rsi,0x38
   140018344:	cmp    rbx,r12
   140018347:	jne    0x14001831a
   140018349:	mov    r8,QWORD PTR [rsp+0x50]
   14001834e:	mov    rsi,QWORD PTR [rdi+0x8]
   140018352:	lea    rbx,[rsi-0x38]
   140018356:	cmp    rbx,rsi
   140018359:	je     0x14001838c
   14001835b:	xor    r12d,r12d
   14001835e:	cmp    QWORD PTR [rbx+0x18],0x8
   140018363:	jb     0x14001836e
   140018365:	mov    rcx,QWORD PTR [rbx]
   140018368:	call   QWORD PTR [rip+0x3130a]        # 0x140049678
   14001836e:	mov    QWORD PTR [rbx+0x18],0x7
   140018376:	mov    QWORD PTR [rbx+0x10],r12
   14001837a:	mov    WORD PTR [rbx],r12w
   14001837e:	add    rbx,0x38
   140018382:	cmp    rbx,rsi
   140018385:	jne    0x14001835e
   140018387:	mov    r8,QWORD PTR [rsp+0x50]
   14001838c:	add    QWORD PTR [rdi+0x8],0xffffffffffffffc8
   140018391:	mov    rbx,QWORD PTR [rsp+0x40]
   140018396:	mov    QWORD PTR [rbp+0x0],r8
   14001839a:	mov    rax,rbp
   14001839d:	mov    rbp,QWORD PTR [rsp+0x48]
   1400183a2:	add    rsp,0x20
   1400183a6:	pop    r12
   1400183a8:	pop    rdi
   1400183a9:	pop    rsi
   1400183aa:	ret    
   1400183ab:	int3   
   1400183ac:	mov    rax,rsp
   1400183af:	push   rdi
   1400183b0:	sub    rsp,0x30
   1400183b4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400183bd:	mov    QWORD PTR [rax+0x10],rbx
   1400183c1:	mov    QWORD PTR [rax+0x18],rbp
   1400183c5:	mov    QWORD PTR [rax+0x20],rsi
   1400183c9:	mov    esi,edx
   1400183cb:	lea    rbp,[rcx-0x88]
   1400183d2:	lea    rdi,[rbp+0x88]
   1400183d9:	mov    QWORD PTR [rax+0x8],rdi
   1400183dd:	mov    rax,QWORD PTR [rdi-0x88]
   1400183e4:	movsxd r8,DWORD PTR [rax+0x4]
   1400183e8:	lea    rax,[rip+0x390d1]        # 0x1400514c0
   1400183ef:	mov    QWORD PTR [r8+rdi*1-0x88],rax
   1400183f7:	lea    rcx,[rdi-0x80]
   1400183fb:	call   0x140014834
   140018400:	nop
   140018401:	mov    rdx,QWORD PTR [rdi-0x88]
   140018408:	movsxd r8,DWORD PTR [rdx+0x4]
   14001840c:	mov    rdx,QWORD PTR [rip+0x311ad]        # 0x1400495c0
   140018413:	mov    QWORD PTR [r8+rdi*1-0x88],rdx
   14001841b:	mov    rcx,rdi
   14001841e:	call   QWORD PTR [rip+0x30edc]        # 0x140049300
   140018424:	test   sil,0x1
   140018428:	je     0x140018433
   14001842a:	mov    rcx,rbp
   14001842d:	call   QWORD PTR [rip+0x31245]        # 0x140049678
   140018433:	mov    rax,rbp
   140018436:	mov    rbx,QWORD PTR [rsp+0x48]
   14001843b:	mov    rbp,QWORD PTR [rsp+0x50]
   140018440:	mov    rsi,QWORD PTR [rsp+0x58]
   140018445:	add    rsp,0x30
   140018449:	pop    rdi
   14001844a:	ret    
   14001844b:	int3   
   14001844c:	mov    QWORD PTR [rsp+0x8],rbx
   140018451:	mov    QWORD PTR [rsp+0x10],rbp
   140018456:	mov    QWORD PTR [rsp+0x18],rsi
   14001845b:	push   rdi
   14001845c:	push   r12
   14001845e:	push   r13
   140018460:	push   r14
   140018462:	push   r15
   140018464:	sub    rsp,0x20
   140018468:	mov    rbp,r8
   14001846b:	mov    r8,QWORD PTR [rcx+0x10]
   14001846f:	mov    rdi,r9
   140018472:	mov    rsi,rdx
   140018475:	mov    rbx,rcx
   140018478:	cmp    r8,rdx
   14001847b:	jb     0x140018791
   140018481:	mov    rax,QWORD PTR [r9+0x10]
   140018485:	mov    r12,QWORD PTR [rsp+0x70]
   14001848a:	cmp    rax,r12
   14001848d:	jb     0x140018791
   140018493:	mov    r13,QWORD PTR [rsp+0x78]
   140018498:	mov    r15,r8
   14001849b:	mov    rcx,r8
   14001849e:	sub    r15,rdx
   1400184a1:	cmp    r15,rbp
   1400184a4:	cmovb  rbp,r15
   1400184a8:	sub    rax,r12
   1400184ab:	cmp    rax,r13
   1400184ae:	cmovb  r13,rax
   1400184b2:	or     rax,0xffffffffffffffff
   1400184b6:	sub    rcx,rbp
   1400184b9:	sub    rax,r13
   1400184bc:	cmp    rax,rcx
   1400184bf:	ja     0x1400184cf
   1400184c1:	lea    rcx,[rip+0x38480]        # 0x140050948
   1400184c8:	call   QWORD PTR [rip+0x310ca]        # 0x140049598
   1400184ce:	int3   
   1400184cf:	lea    r14,[rcx+r13*1]
   1400184d3:	sub    r15,rbp
   1400184d6:	cmp    r8,r14
   1400184d9:	jae    0x14001851d
   1400184db:	cmp    r14,0xfffffffffffffffe
   1400184df:	jbe    0x1400184ef
   1400184e1:	lea    rcx,[rip+0x38460]        # 0x140050948
   1400184e8:	call   QWORD PTR [rip+0x310aa]        # 0x140049598
   1400184ee:	int3   
   1400184ef:	cmp    QWORD PTR [rbx+0x18],r14
   1400184f3:	jae    0x140018502
   1400184f5:	mov    rdx,r14
   1400184f8:	mov    rcx,rbx
   1400184fb:	call   0x140005750
   140018500:	jmp    0x14001851d
   140018502:	test   r14,r14
   140018505:	jne    0x14001851d
   140018507:	and    QWORD PTR [rbx+0x10],r14
   14001850b:	cmp    QWORD PTR [rbx+0x18],0x10
   140018510:	jb     0x140018517
   140018512:	mov    rax,QWORD PTR [rbx]
   140018515:	jmp    0x14001851a
   140018517:	mov    rax,rbx
   14001851a:	mov    BYTE PTR [rax],0x0
   14001851d:	cmp    rbx,rdi
   140018520:	je     0x140018586
   140018522:	cmp    QWORD PTR [rbx+0x18],0x10
   140018527:	jb     0x14001852e
   140018529:	mov    rcx,QWORD PTR [rbx]
   14001852c:	jmp    0x140018531
   14001852e:	mov    rcx,rbx
   140018531:	cmp    QWORD PTR [rbx+0x18],0x10
   140018536:	jb     0x14001853d
   140018538:	mov    rax,QWORD PTR [rbx]
   14001853b:	jmp    0x140018540
   14001853d:	mov    rax,rbx
   140018540:	lea    rdx,[rcx+rsi*1]
   140018544:	lea    rcx,[rax+rsi*1]
   140018548:	mov    r8,r15
   14001854b:	add    rcx,r13
   14001854e:	add    rdx,rbp
   140018551:	call   QWORD PTR [rip+0x31099]        # 0x1400495f0
   140018557:	cmp    QWORD PTR [rdi+0x18],0x10
   14001855c:	jb     0x140018561
   14001855e:	mov    rdi,QWORD PTR [rdi]
   140018561:	cmp    QWORD PTR [rbx+0x18],0x10
   140018566:	jb     0x14001856d
   140018568:	mov    rax,QWORD PTR [rbx]
   14001856b:	jmp    0x140018570
   14001856d:	mov    rax,rbx
   140018570:	lea    rdx,[rdi+r12*1]
   140018574:	lea    rcx,[rax+rsi*1]
   140018578:	mov    r8,r13
   14001857b:	call   QWORD PTR [rip+0x31347]        # 0x1400498c8
   140018581:	jmp    0x140018759
   140018586:	cmp    r13,rbp
   140018589:	ja     0x1400185ee
   14001858b:	cmp    QWORD PTR [rbx+0x18],0x10
   140018590:	jb     0x140018597
   140018592:	mov    rcx,QWORD PTR [rbx]
   140018595:	jmp    0x14001859a
   140018597:	mov    rcx,rbx
   14001859a:	cmp    QWORD PTR [rbx+0x18],0x10
   14001859f:	jb     0x1400185a6
   1400185a1:	mov    rax,QWORD PTR [rbx]
   1400185a4:	jmp    0x1400185a9
   1400185a6:	mov    rax,rbx
   1400185a9:	lea    rdx,[rcx+r12*1]
   1400185ad:	lea    rcx,[rax+rsi*1]
   1400185b1:	mov    r8,r13
   1400185b4:	call   QWORD PTR [rip+0x31036]        # 0x1400495f0
   1400185ba:	cmp    QWORD PTR [rbx+0x18],0x10
   1400185bf:	jb     0x1400185c6
   1400185c1:	mov    rcx,QWORD PTR [rbx]
   1400185c4:	jmp    0x1400185c9
   1400185c6:	mov    rcx,rbx
   1400185c9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400185ce:	jb     0x1400185d5
   1400185d0:	mov    rax,QWORD PTR [rbx]
   1400185d3:	jmp    0x1400185d8
   1400185d5:	mov    rax,rbx
   1400185d8:	lea    rdx,[rcx+rsi*1]
   1400185dc:	lea    rcx,[rax+rsi*1]
   1400185e0:	mov    r8,r15
   1400185e3:	add    rdx,rbp
   1400185e6:	add    rcx,r13
   1400185e9:	jmp    0x140018753
   1400185ee:	cmp    r12,rsi
   1400185f1:	ja     0x140018656
   1400185f3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400185f8:	jb     0x1400185ff
   1400185fa:	mov    rcx,QWORD PTR [rbx]
   1400185fd:	jmp    0x140018602
   1400185ff:	mov    rcx,rbx
   140018602:	cmp    QWORD PTR [rbx+0x18],0x10
   140018607:	jb     0x14001860e
   140018609:	mov    rax,QWORD PTR [rbx]
   14001860c:	jmp    0x140018611
   14001860e:	mov    rax,rbx
   140018611:	lea    rdx,[rcx+rsi*1]
   140018615:	lea    rcx,[rax+rsi*1]
   140018619:	mov    r8,r15
   14001861c:	add    rcx,r13
   14001861f:	add    rdx,rbp
   140018622:	call   QWORD PTR [rip+0x30fc8]        # 0x1400495f0
   140018628:	cmp    QWORD PTR [rbx+0x18],0x10
   14001862d:	jb     0x140018634
   14001862f:	mov    rcx,QWORD PTR [rbx]
   140018632:	jmp    0x140018637
   140018634:	mov    rcx,rbx
   140018637:	cmp    QWORD PTR [rbx+0x18],0x10
   14001863c:	jb     0x140018643
   14001863e:	mov    rax,QWORD PTR [rbx]
   140018641:	jmp    0x140018646
   140018643:	mov    rax,rbx
   140018646:	lea    rdx,[rcx+r12*1]
   14001864a:	lea    rcx,[rax+rsi*1]
   14001864e:	mov    r8,r13
   140018651:	jmp    0x140018753
   140018656:	lea    rax,[rsi+rbp*1]
   14001865a:	cmp    rax,r12
   14001865d:	ja     0x1400186bd
   14001865f:	cmp    QWORD PTR [rbx+0x18],0x10
   140018664:	jb     0x14001866b
   140018666:	mov    rcx,QWORD PTR [rbx]
   140018669:	jmp    0x14001866e
   14001866b:	mov    rcx,rbx
   14001866e:	cmp    QWORD PTR [rbx+0x18],0x10
   140018673:	jb     0x14001867a
   140018675:	mov    rax,QWORD PTR [rbx]
   140018678:	jmp    0x14001867d
   14001867a:	mov    rax,rbx
   14001867d:	lea    rdx,[rcx+rsi*1]
   140018681:	lea    rcx,[rax+rsi*1]
   140018685:	mov    r8,r15
   140018688:	add    rcx,r13
   14001868b:	add    rdx,rbp
   14001868e:	call   QWORD PTR [rip+0x30f5c]        # 0x1400495f0
   140018694:	cmp    QWORD PTR [rbx+0x18],0x10
   140018699:	jb     0x1400186a0
   14001869b:	mov    rdx,QWORD PTR [rbx]
   14001869e:	jmp    0x1400186a3
   1400186a0:	mov    rdx,rbx
   1400186a3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400186a8:	jb     0x1400186af
   1400186aa:	mov    rax,QWORD PTR [rbx]
   1400186ad:	jmp    0x1400186b2
   1400186af:	mov    rax,rbx
   1400186b2:	sub    rdx,rbp
   1400186b5:	add    rdx,r12
   1400186b8:	add    rdx,r13
   1400186bb:	jmp    0x14001864a
   1400186bd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400186c2:	jb     0x1400186c9
   1400186c4:	mov    rcx,QWORD PTR [rbx]
   1400186c7:	jmp    0x1400186cc
   1400186c9:	mov    rcx,rbx
   1400186cc:	cmp    QWORD PTR [rbx+0x18],0x10
   1400186d1:	jb     0x1400186d8
   1400186d3:	mov    rax,QWORD PTR [rbx]
   1400186d6:	jmp    0x1400186db
   1400186d8:	mov    rax,rbx
   1400186db:	lea    rdx,[rcx+r12*1]
   1400186df:	lea    rcx,[rax+rsi*1]
   1400186e3:	mov    r8,rbp
   1400186e6:	call   QWORD PTR [rip+0x30f04]        # 0x1400495f0
   1400186ec:	cmp    QWORD PTR [rbx+0x18],0x10
   1400186f1:	jb     0x1400186f8
   1400186f3:	mov    rcx,QWORD PTR [rbx]
   1400186f6:	jmp    0x1400186fb
   1400186f8:	mov    rcx,rbx
   1400186fb:	cmp    QWORD PTR [rbx+0x18],0x10
   140018700:	jb     0x140018707
   140018702:	mov    rax,QWORD PTR [rbx]
   140018705:	jmp    0x14001870a
   140018707:	mov    rax,rbx
   14001870a:	lea    rdx,[rcx+rsi*1]
   14001870e:	lea    rcx,[rax+rsi*1]
   140018712:	mov    r8,r15
   140018715:	add    rcx,r13
   140018718:	add    rdx,rbp
   14001871b:	call   QWORD PTR [rip+0x30ecf]        # 0x1400495f0
   140018721:	cmp    QWORD PTR [rbx+0x18],0x10
   140018726:	jb     0x14001872d
   140018728:	mov    rcx,QWORD PTR [rbx]
   14001872b:	jmp    0x140018730
   14001872d:	mov    rcx,rbx
   140018730:	cmp    QWORD PTR [rbx+0x18],0x10
   140018735:	jb     0x14001873c
   140018737:	mov    rax,QWORD PTR [rbx]
   14001873a:	jmp    0x14001873f
   14001873c:	mov    rax,rbx
   14001873f:	lea    rdx,[rcx+r12*1]
   140018743:	lea    rcx,[rax+rsi*1]
   140018747:	mov    r8,r13
   14001874a:	add    rdx,r13
   14001874d:	sub    r8,rbp
   140018750:	add    rcx,rbp
   140018753:	call   QWORD PTR [rip+0x30e97]        # 0x1400495f0
   140018759:	cmp    QWORD PTR [rbx+0x18],0x10
   14001875e:	mov    QWORD PTR [rbx+0x10],r14
   140018762:	jb     0x140018769
   140018764:	mov    rax,QWORD PTR [rbx]
   140018767:	jmp    0x14001876c
   140018769:	mov    rax,rbx
   14001876c:	mov    rbp,QWORD PTR [rsp+0x58]
   140018771:	mov    rsi,QWORD PTR [rsp+0x60]
   140018776:	mov    BYTE PTR [rax+r14*1],0x0
   14001877b:	mov    rax,rbx
   14001877e:	mov    rbx,QWORD PTR [rsp+0x50]
   140018783:	add    rsp,0x20
   140018787:	pop    r15
   140018789:	pop    r14
   14001878b:	pop    r13
   14001878d:	pop    r12
   14001878f:	pop    rdi
   140018790:	ret    
   140018791:	lea    rcx,[rip+0x38198]        # 0x140050930
   140018798:	call   QWORD PTR [rip+0x30e12]        # 0x1400495b0
   14001879e:	int3   
   14001879f:	int3   
   1400187a0:	rex push rdi
   1400187a2:	sub    rsp,0x40
   1400187a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400187af:	mov    QWORD PTR [rsp+0x60],rbx
   1400187b4:	mov    QWORD PTR [rsp+0x68],rsi
   1400187b9:	mov    rsi,rcx
   1400187bc:	xor    edx,edx
   1400187be:	lea    rcx,[rsp+0x50]
   1400187c3:	call   QWORD PTR [rip+0x30dd7]        # 0x1400495a0
   1400187c9:	nop
   1400187ca:	mov    rax,QWORD PTR [rip+0x520a7]        # 0x14006a878
   1400187d1:	mov    QWORD PTR [rsp+0x58],rax
   1400187d6:	mov    rcx,QWORD PTR [rip+0x30d23]        # 0x140049500
   1400187dd:	call   QWORD PTR [rip+0x30b6d]        # 0x140049350
   1400187e3:	mov    rdi,rax
   1400187e6:	mov    rax,QWORD PTR [rsi]
   1400187e9:	cmp    rdi,QWORD PTR [rax+0x18]
   1400187ed:	jae    0x1400187f9
   1400187ef:	mov    rcx,QWORD PTR [rax+0x10]
   1400187f3:	mov    rbx,QWORD PTR [rcx+rdi*8]
   1400187f7:	jmp    0x1400187fb
   1400187f9:	xor    ebx,ebx
   1400187fb:	test   rbx,rbx
   1400187fe:	jne    0x140018886
   140018804:	cmp    BYTE PTR [rax+0x24],bl
   140018807:	je     0x140018821
   140018809:	call   QWORD PTR [rip+0x30b19]        # 0x140049328
   14001880f:	cmp    rdi,QWORD PTR [rax+0x18]
   140018813:	jae    0x14001881f
   140018815:	mov    rax,QWORD PTR [rax+0x10]
   140018819:	mov    rbx,QWORD PTR [rax+rdi*8]
   14001881d:	jmp    0x140018821
   14001881f:	xor    ebx,ebx
   140018821:	test   rbx,rbx
   140018824:	jne    0x140018886
   140018826:	mov    rbx,QWORD PTR [rsp+0x58]
   14001882b:	test   rbx,rbx
   14001882e:	jne    0x140018886
   140018830:	mov    rdx,rsi
   140018833:	lea    rcx,[rsp+0x58]
   140018838:	call   QWORD PTR [rip+0x30cd2]        # 0x140049510
   14001883e:	cmp    rax,0xffffffffffffffff
   140018842:	jne    0x140018868
   140018844:	lea    rdx,[rip+0x38125]        # 0x140050970
   14001884b:	lea    rcx,[rsp+0x28]
   140018850:	call   QWORD PTR [rip+0x3105a]        # 0x1400498b0
   140018856:	lea    rdx,[rip+0x4ae8b]        # 0x1400636e8
   14001885d:	lea    rcx,[rsp+0x28]
   140018862:	call   0x14002b560
   140018867:	int3   
   140018868:	mov    rbx,QWORD PTR [rsp+0x58]
   14001886d:	mov    QWORD PTR [rip+0x52004],rbx        # 0x14006a878
   140018874:	mov    rcx,rbx
   140018877:	call   QWORD PTR [rip+0x30acb]        # 0x140049348
   14001887d:	mov    rcx,rbx
   140018880:	call   0x14002afb8
   140018885:	nop
   140018886:	lea    rcx,[rsp+0x50]
   14001888b:	call   QWORD PTR [rip+0x30d17]        # 0x1400495a8
   140018891:	mov    rax,rbx
   140018894:	mov    rbx,QWORD PTR [rsp+0x60]
   140018899:	mov    rsi,QWORD PTR [rsp+0x68]
   14001889e:	add    rsp,0x40
   1400188a2:	pop    rdi
   1400188a3:	ret    
   1400188a4:	mov    rax,rsp
   1400188a7:	mov    QWORD PTR [rax+0x8],rcx
   1400188ab:	push   rsi
   1400188ac:	push   rdi
   1400188ad:	push   r12
   1400188af:	sub    rsp,0x30
   1400188b3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400188bc:	mov    QWORD PTR [rax+0x10],rbx
   1400188c0:	mov    QWORD PTR [rax+0x20],rbp
   1400188c4:	mov    rsi,r8
   1400188c7:	mov    rbp,rdx
   1400188ca:	mov    rbx,rcx
   1400188cd:	xor    r12d,r12d
   1400188d0:	mov    DWORD PTR [rax+0x18],r12d
   1400188d4:	mov    QWORD PTR [rcx+0x18],0x7
   1400188dc:	mov    QWORD PTR [rcx+0x10],r12
   1400188e0:	mov    WORD PTR [rcx],r12w
   1400188e4:	mov    DWORD PTR [rax+0x18],0x1
   1400188eb:	mov    rcx,rdx
   1400188ee:	call   QWORD PTR [rip+0x30dbc]        # 0x1400496b0
   1400188f4:	mov    rdx,QWORD PTR [rsi+0x10]
   1400188f8:	add    rdx,rax
   1400188fb:	mov    rdi,QWORD PTR [rbx+0x10]
   1400188ff:	cmp    rdi,rdx
   140018902:	ja     0x140018931
   140018904:	cmp    QWORD PTR [rbx+0x18],rdx
   140018908:	je     0x140018931
   14001890a:	mov    r8b,0x1
   14001890d:	mov    rcx,rbx
   140018910:	call   0x140009a30
   140018915:	test   al,al
   140018917:	je     0x140018931
   140018919:	mov    QWORD PTR [rbx+0x10],rdi
   14001891d:	cmp    QWORD PTR [rbx+0x18],0x8
   140018922:	jb     0x140018929
   140018924:	mov    rax,QWORD PTR [rbx]
   140018927:	jmp    0x14001892c
   140018929:	mov    rax,rbx
   14001892c:	mov    WORD PTR [rax+rdi*2],r12w
   140018931:	mov    rdx,rbp
   140018934:	mov    rcx,rbx
   140018937:	call   0x14000d4f4
   14001893c:	or     r9,0xffffffffffffffff
   140018940:	xor    r8d,r8d
   140018943:	mov    rdx,rsi
   140018946:	mov    rcx,rbx
   140018949:	call   0x14000d0e8
   14001894e:	mov    rax,rbx
   140018951:	mov    rbx,QWORD PTR [rsp+0x58]
   140018956:	mov    rbp,QWORD PTR [rsp+0x68]
   14001895b:	add    rsp,0x30
   14001895f:	pop    r12
   140018961:	pop    rdi
   140018962:	pop    rsi
   140018963:	ret    
   140018964:	int3   
   140018965:	int3   
   140018966:	int3   
   140018967:	int3   
   140018968:	mov    QWORD PTR [rsp+0x8],rbx
   14001896d:	mov    QWORD PTR [rsp+0x10],rbp
   140018972:	mov    QWORD PTR [rsp+0x18],rsi
   140018977:	push   rdi
   140018978:	sub    rsp,0x20
   14001897c:	sub    r8,QWORD PTR [rcx]
   14001897f:	mov    rdi,r9
   140018982:	movabs r9,0x4924924924924925
   14001898c:	mov    rax,r9
   14001898f:	mov    rbp,rdx
   140018992:	mov    rbx,rcx
   140018995:	mov    rcx,QWORD PTR [rcx+0x8]
   140018999:	imul   r8
   14001899c:	mov    rsi,rdx
   14001899f:	sar    rsi,0x4
   1400189a3:	mov    r8,rsi
   1400189a6:	shr    r8,0x3f
   1400189aa:	add    rsi,r8
   1400189ad:	cmp    rdi,rcx
   1400189b0:	jae    0x1400189e8
   1400189b2:	cmp    QWORD PTR [rbx],rdi
   1400189b5:	ja     0x1400189e8
   1400189b7:	sub    rdi,QWORD PTR [rbx]
   1400189ba:	mov    rax,r9
   1400189bd:	imul   rdi
   1400189c0:	mov    rdi,rdx
   1400189c3:	sar    rdi,0x4
   1400189c7:	mov    rax,rdi
   1400189ca:	shr    rax,0x3f
   1400189ce:	add    rdi,rax
   1400189d1:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400189d5:	jne    0x1400189df
   1400189d7:	mov    rcx,rbx
   1400189da:	call   0x140018e08
   1400189df:	imul   rdi,rdi,0x38
   1400189e3:	add    rdi,QWORD PTR [rbx]
   1400189e6:	jmp    0x1400189f6
   1400189e8:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400189ec:	jne    0x1400189f6
   1400189ee:	mov    rcx,rbx
   1400189f1:	call   0x140018e08
   1400189f6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400189fa:	mov    rdx,rdi
   1400189fd:	call   0x140019704
   140018a02:	add    QWORD PTR [rbx+0x8],0x38
   140018a07:	mov    r8,QWORD PTR [rbx+0x8]
   140018a0b:	imul   rsi,rsi,0x38
   140018a0f:	mov    rax,QWORD PTR [rbx]
   140018a12:	lea    rdx,[r8-0x38]
   140018a16:	lea    rcx,[rsi+rax*1]
   140018a1a:	cmp    rcx,rdx
   140018a1d:	je     0x140018a29
   140018a1f:	cmp    rdx,r8
   140018a22:	je     0x140018a29
   140018a24:	call   0x140019aa8
   140018a29:	mov    rax,QWORD PTR [rbx]
   140018a2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140018a31:	lea    rcx,[rsi+rax*1]
   140018a35:	mov    rsi,QWORD PTR [rsp+0x40]
   140018a3a:	mov    rax,rbp
   140018a3d:	mov    QWORD PTR [rbp+0x0],rcx
   140018a41:	mov    rbp,QWORD PTR [rsp+0x38]
   140018a46:	add    rsp,0x20
   140018a4a:	pop    rdi
   140018a4b:	ret    
   140018a4c:	sub    rsp,0x28
   140018a50:	mov    rcx,QWORD PTR [rcx+0x10]
   140018a54:	test   rcx,rcx
   140018a57:	je     0x140018a72
   140018a59:	call   QWORD PTR [rip+0x308e1]        # 0x140049340
   140018a5f:	test   rax,rax
   140018a62:	je     0x140018a72
   140018a64:	mov    r8,QWORD PTR [rax]
   140018a67:	mov    edx,0x1
   140018a6c:	mov    rcx,rax
   140018a6f:	call   QWORD PTR [r8]
   140018a72:	add    rsp,0x28
   140018a76:	ret    
   140018a77:	int3   
   140018a78:	mov    QWORD PTR [rsp+0x8],rbx
   140018a7d:	mov    QWORD PTR [rsp+0x10],rbp
   140018a82:	mov    QWORD PTR [rsp+0x18],rsi
   140018a87:	push   rdi
   140018a88:	sub    rsp,0x40
   140018a8c:	mov    rbx,QWORD PTR [r8]
   140018a8f:	mov    rsi,rcx
   140018a92:	mov    rbp,r8
   140018a95:	mov    rcx,rbx
   140018a98:	mov    rdi,rdx
   140018a9b:	call   QWORD PTR [rip+0x308a7]        # 0x140049348
   140018aa1:	mov    rcx,rdi
   140018aa4:	mov    QWORD PTR [rsp+0x20],rdi
   140018aa9:	call   QWORD PTR [rip+0x30b59]        # 0x140049608
   140018aaf:	mov    rcx,rbx
   140018ab2:	add    rax,rdi
   140018ab5:	mov    QWORD PTR [rsp+0x28],rax
   140018aba:	call   QWORD PTR [rip+0x30888]        # 0x140049348
   140018ac0:	mov    edi,0x1
   140018ac5:	test   rbx,rbx
   140018ac8:	je     0x140018ae3
   140018aca:	mov    rcx,rbx
   140018acd:	call   QWORD PTR [rip+0x3086d]        # 0x140049340
   140018ad3:	test   rax,rax
   140018ad6:	je     0x140018ae3
   140018ad8:	mov    r8,QWORD PTR [rax]
   140018adb:	mov    edx,edi
   140018add:	mov    rcx,rax
   140018ae0:	call   QWORD PTR [r8]
   140018ae3:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140018ae8:	mov    rcx,rbx
   140018aeb:	movdqu XMMWORD PTR [rsi],xmm0
   140018aef:	mov    QWORD PTR [rsi+0x10],rbx
   140018af3:	call   QWORD PTR [rip+0x3084f]        # 0x140049348
   140018af9:	test   rbx,rbx
   140018afc:	je     0x140018b17
   140018afe:	mov    rcx,rbx
   140018b01:	call   QWORD PTR [rip+0x30839]        # 0x140049340
   140018b07:	test   rax,rax
   140018b0a:	je     0x140018b17
   140018b0c:	mov    r8,QWORD PTR [rax]
   140018b0f:	mov    edx,edi
   140018b11:	mov    rcx,rax
   140018b14:	call   QWORD PTR [r8]
   140018b17:	mov    rcx,QWORD PTR [rbp+0x0]
   140018b1b:	test   rcx,rcx
   140018b1e:	je     0x140018b36
   140018b20:	call   QWORD PTR [rip+0x3081a]        # 0x140049340
   140018b26:	test   rax,rax
   140018b29:	je     0x140018b36
   140018b2b:	mov    r8,QWORD PTR [rax]
   140018b2e:	mov    edx,edi
   140018b30:	mov    rcx,rax
   140018b33:	call   QWORD PTR [r8]
   140018b36:	mov    rbx,QWORD PTR [rsp+0x50]
   140018b3b:	mov    rbp,QWORD PTR [rsp+0x58]
   140018b40:	mov    rax,rsi
   140018b43:	mov    rsi,QWORD PTR [rsp+0x60]
   140018b48:	add    rsp,0x40
   140018b4c:	pop    rdi
   140018b4d:	ret    
   140018b4e:	int3   
   140018b4f:	int3   
   140018b50:	mov    rax,rsp
   140018b53:	mov    QWORD PTR [rax+0x10],rdx
   140018b57:	push   rbp
   140018b58:	push   rsi
   140018b59:	push   rdi
   140018b5a:	lea    rbp,[rax-0x5f]
   140018b5e:	sub    rsp,0xc0
   140018b65:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   140018b6d:	mov    QWORD PTR [rax+0x18],rbx
   140018b71:	movaps XMMWORD PTR [rax-0x28],xmm6
   140018b75:	mov    rsi,r8
   140018b78:	mov    rdi,rdx
   140018b7b:	mov    rbx,rcx
   140018b7e:	cmp    QWORD PTR [rcx+0x18],0x10
   140018b83:	jb     0x140018b88
   140018b85:	mov    rcx,QWORD PTR [rcx]
   140018b88:	mov    rax,QWORD PTR [rbx+0x10]
   140018b8c:	lea    r9,[rcx+rax*1]
   140018b90:	cmp    QWORD PTR [rbx+0x18],0x10
   140018b95:	jb     0x140018b9c
   140018b97:	mov    r8,QWORD PTR [rbx]
   140018b9a:	jmp    0x140018b9f
   140018b9c:	mov    r8,rbx
   140018b9f:	lea    rdx,[rbp+0x27]
   140018ba3:	mov    rcx,rdi
   140018ba6:	call   0x140019024
   140018bab:	movups xmm0,XMMWORD PTR [rax]
   140018bae:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   140018bb3:	movups xmm6,XMMWORD PTR [rsi]
   140018bb6:	movups xmm0,XMMWORD PTR [rdi]
   140018bb9:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140018bbe:	mov    rcx,QWORD PTR [rdi+0x10]
   140018bc2:	mov    QWORD PTR [rbp-0x29],rcx
   140018bc6:	call   QWORD PTR [rip+0x3077c]        # 0x140049348
   140018bcc:	lea    r11,[rbp-0x39]
   140018bd0:	mov    QWORD PTR [rbp+0x67],r11
   140018bd4:	mov    rax,QWORD PTR [rbp-0x49]
   140018bd8:	mov    rcx,QWORD PTR [rbp-0x41]
   140018bdc:	cmp    rax,rcx
   140018bdf:	je     0x140018c31
   140018be1:	movdqa XMMWORD PTR [rbp+0x17],xmm6
   140018be6:	mov    QWORD PTR [rbp-0x49],rax
   140018bea:	mov    QWORD PTR [rbp-0x41],rcx
   140018bee:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140018bf2:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   140018bf7:	movdqa XMMWORD PTR [rbp-0x19],xmm6
   140018bfc:	movups xmm0,XMMWORD PTR [rbp-0x39]
   140018c00:	movdqu XMMWORD PTR [rbp-0x1],xmm0
   140018c05:	mov    rcx,QWORD PTR [rbp-0x29]
   140018c09:	mov    QWORD PTR [rbp+0xf],rcx
   140018c0d:	call   QWORD PTR [rip+0x30735]        # 0x140049348
   140018c13:	lea    r11,[rbp+0x17]
   140018c17:	mov    QWORD PTR [rsp+0x20],r11
   140018c1c:	lea    r9,[rbp-0x49]
   140018c20:	lea    r8,[rbp-0x19]
   140018c24:	lea    rdx,[rbp-0x1]
   140018c28:	mov    rcx,rbx
   140018c2b:	call   0x140019764
   140018c30:	nop
   140018c31:	mov    ebx,0x1
   140018c36:	mov    rcx,QWORD PTR [rbp-0x29]
   140018c3a:	test   rcx,rcx
   140018c3d:	je     0x140018c56
   140018c3f:	call   QWORD PTR [rip+0x306fb]        # 0x140049340
   140018c45:	test   rax,rax
   140018c48:	je     0x140018c56
   140018c4a:	mov    r8,QWORD PTR [rax]
   140018c4d:	mov    edx,ebx
   140018c4f:	mov    rcx,rax
   140018c52:	call   QWORD PTR [r8]
   140018c55:	nop
   140018c56:	mov    rcx,QWORD PTR [rdi+0x10]
   140018c5a:	test   rcx,rcx
   140018c5d:	je     0x140018c75
   140018c5f:	call   QWORD PTR [rip+0x306db]        # 0x140049340
   140018c65:	test   rax,rax
   140018c68:	je     0x140018c75
   140018c6a:	mov    r8,QWORD PTR [rax]
   140018c6d:	mov    edx,ebx
   140018c6f:	mov    rcx,rax
   140018c72:	call   QWORD PTR [r8]
   140018c75:	lea    r11,[rsp+0xc0]
   140018c7d:	mov    rbx,QWORD PTR [r11+0x30]
   140018c81:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140018c86:	mov    rsp,r11
   140018c89:	pop    rdi
   140018c8a:	pop    rsi
   140018c8b:	pop    rbp
   140018c8c:	ret    
   140018c8d:	int3   
   140018c8e:	int3   
   140018c8f:	int3   
   140018c90:	mov    QWORD PTR [rsp+0x8],rbx
   140018c95:	mov    QWORD PTR [rsp+0x10],rsi
   140018c9a:	push   rdi
   140018c9b:	sub    rsp,0x30
   140018c9f:	mov    r9,rdx
   140018ca2:	mov    rbx,rdx
   140018ca5:	mov    rsi,r8
   140018ca8:	sub    r9,rcx
   140018cab:	movabs r8,0x4924924924924925
   140018cb5:	mov    rdi,rcx
   140018cb8:	mov    rax,r8
   140018cbb:	imul   r9
   140018cbe:	sar    rdx,0x4
   140018cc2:	mov    rax,rdx
   140018cc5:	shr    rax,0x3f
   140018cc9:	add    rdx,rax
   140018ccc:	cmp    rdx,0x20
   140018cd0:	jle    0x140018de7
   140018cd6:	test   rsi,rsi
   140018cd9:	jle    0x140018da9
   140018cdf:	lea    rcx,[rsp+0x20]
   140018ce4:	mov    r8,rbx
   140018ce7:	mov    rdx,rdi
   140018cea:	call   0x1400190f4
   140018cef:	mov    rax,rsi
   140018cf2:	movabs r9,0x4924924924924925
   140018cfc:	cqo    
   140018cfe:	mov    rcx,rbx
   140018d01:	sub    rcx,QWORD PTR [rsp+0x28]
   140018d06:	sub    rax,rdx
   140018d09:	sar    rax,1
   140018d0c:	mov    rsi,rax
   140018d0f:	cqo    
   140018d11:	sub    rax,rdx
   140018d14:	sar    rax,1
   140018d17:	add    rsi,rax
   140018d1a:	mov    rax,r9
   140018d1d:	imul   rcx
   140018d20:	mov    rcx,QWORD PTR [rsp+0x20]
   140018d25:	mov    r8,rdx
   140018d28:	sub    rcx,rdi
   140018d2b:	sar    r8,0x4
   140018d2f:	mov    rax,r8
   140018d32:	shr    rax,0x3f
   140018d36:	add    r8,rax
   140018d39:	mov    rax,r9
   140018d3c:	imul   rcx
   140018d3f:	sar    rdx,0x4
   140018d43:	mov    rax,rdx
   140018d46:	shr    rax,0x3f
   140018d4a:	add    rdx,rax
   140018d4d:	cmp    rdx,r8
   140018d50:	mov    r8,rsi
   140018d53:	jge    0x140018d69
   140018d55:	mov    rdx,QWORD PTR [rsp+0x20]
   140018d5a:	mov    rcx,rdi
   140018d5d:	call   0x140018c90
   140018d62:	mov    rdi,QWORD PTR [rsp+0x28]
   140018d67:	jmp    0x140018d7b
   140018d69:	mov    rcx,QWORD PTR [rsp+0x28]
   140018d6e:	mov    rdx,rbx
   140018d71:	call   0x140018c90
   140018d76:	mov    rbx,QWORD PTR [rsp+0x20]
   140018d7b:	mov    rcx,rbx
   140018d7e:	movabs r8,0x4924924924924925
   140018d88:	sub    rcx,rdi
   140018d8b:	mov    rax,r8
   140018d8e:	imul   rcx
   140018d91:	sar    rdx,0x4
   140018d95:	mov    rcx,rdx
   140018d98:	shr    rcx,0x3f
   140018d9c:	add    rdx,rcx
   140018d9f:	cmp    rdx,0x20
   140018da3:	jg     0x140018cd6
   140018da9:	cmp    rdx,0x20
   140018dad:	jle    0x140018de7
   140018daf:	mov    rcx,rbx
   140018db2:	mov    rax,r8
   140018db5:	sub    rcx,rdi
   140018db8:	imul   rcx
   140018dbb:	sar    rdx,0x4
   140018dbf:	mov    rax,rdx
   140018dc2:	shr    rax,0x3f
   140018dc6:	add    rdx,rax
   140018dc9:	cmp    rdx,0x1
   140018dcd:	jle    0x140018dda
   140018dcf:	mov    rdx,rbx
   140018dd2:	mov    rcx,rdi
   140018dd5:	call   0x140019ca4
   140018dda:	mov    rdx,rbx
   140018ddd:	mov    rcx,rdi
   140018de0:	call   0x140019404
   140018de5:	jmp    0x140018df8
   140018de7:	cmp    rdx,0x1
   140018deb:	jle    0x140018df8
   140018ded:	mov    rdx,rbx
   140018df0:	mov    rcx,rdi
   140018df3:	call   0x140019564
   140018df8:	mov    rbx,QWORD PTR [rsp+0x40]
   140018dfd:	mov    rsi,QWORD PTR [rsp+0x48]
   140018e02:	add    rsp,0x30
   140018e06:	pop    rdi
   140018e07:	ret    
   140018e08:	sub    rsp,0x28
   140018e0c:	mov    rdx,QWORD PTR [rcx+0x8]
   140018e10:	movabs r10,0x4924924924924925
   140018e1a:	mov    r9,rcx
   140018e1d:	sub    rdx,QWORD PTR [rcx]
   140018e20:	mov    rax,r10
   140018e23:	imul   rdx
   140018e26:	mov    r8,rdx
   140018e29:	sar    r8,0x4
   140018e2d:	mov    rax,r8
   140018e30:	shr    rax,0x3f
   140018e34:	add    r8,rax
   140018e37:	movabs rax,0x492492492492491
   140018e41:	cmp    r8,rax
   140018e44:	jbe    0x140018e54
   140018e46:	lea    rcx,[rip+0x37b0b]        # 0x140050958
   140018e4d:	call   QWORD PTR [rip+0x30745]        # 0x140049598
   140018e53:	int3   
   140018e54:	mov    rcx,QWORD PTR [rcx+0x10]
   140018e58:	mov    rax,r10
   140018e5b:	inc    r8
   140018e5e:	sub    rcx,QWORD PTR [r9]
   140018e61:	imul   rcx
   140018e64:	sar    rdx,0x4
   140018e68:	mov    rax,rdx
   140018e6b:	shr    rax,0x3f
   140018e6f:	add    rdx,rax
   140018e72:	cmp    r8,rdx
   140018e75:	jbe    0x140018ea5
   140018e77:	mov    rcx,rdx
   140018e7a:	movabs rax,0x492492492492492
   140018e84:	shr    rcx,1
   140018e87:	sub    rax,rcx
   140018e8a:	cmp    rax,rdx
   140018e8d:	jae    0x140018e93
   140018e8f:	xor    edx,edx
   140018e91:	jmp    0x140018e96
   140018e93:	add    rdx,rcx
   140018e96:	cmp    rdx,r8
   140018e99:	mov    rcx,r9
   140018e9c:	cmovb  rdx,r8
   140018ea0:	call   0x140018eac
   140018ea5:	add    rsp,0x28
   140018ea9:	ret    
   140018eaa:	int3   
   140018eab:	int3   
   140018eac:	mov    rax,rsp
   140018eaf:	push   rdi
   140018eb0:	push   r12
   140018eb2:	push   r13
   140018eb4:	push   r14
   140018eb6:	push   r15
   140018eb8:	sub    rsp,0x40
   140018ebc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018ec5:	mov    QWORD PTR [rax+0x8],rbx
   140018ec9:	mov    QWORD PTR [rax+0x18],rsi
   140018ecd:	mov    rbx,rdx
   140018ed0:	mov    r12,rcx
   140018ed3:	movabs rax,0x492492492492492
   140018edd:	cmp    rdx,rax
   140018ee0:	jbe    0x140018ef0
   140018ee2:	lea    rcx,[rip+0x37a6f]        # 0x140050958
   140018ee9:	call   QWORD PTR [rip+0x306a9]        # 0x140049598
   140018eef:	int3   
   140018ef0:	mov    rcx,QWORD PTR [rcx+0x10]
   140018ef4:	sub    rcx,QWORD PTR [r12]
   140018ef8:	movabs r13,0x4924924924924925
   140018f02:	mov    rax,r13
   140018f05:	imul   rcx
   140018f08:	sar    rdx,0x4
   140018f0c:	mov    rax,rdx
   140018f0f:	shr    rax,0x3f
   140018f13:	add    rdx,rax
   140018f16:	cmp    rdx,rbx
   140018f19:	jae    0x14001900a
   140018f1f:	xor    r15d,r15d
   140018f22:	mov    esi,r15d
   140018f25:	mov    QWORD PTR [rsp+0x78],r15
   140018f2a:	test   rbx,rbx
   140018f2d:	je     0x140018f7c
   140018f2f:	mov    rcx,rbx
   140018f32:	imul   rcx,rcx,0x38
   140018f36:	call   QWORD PTR [rip+0x3075c]        # 0x140049698
   140018f3c:	mov    rsi,rax
   140018f3f:	mov    QWORD PTR [rsp+0x78],rax
   140018f44:	test   rax,rax
   140018f47:	jne    0x140018f7c
   140018f49:	mov    QWORD PTR [rsp+0x78],r15
   140018f4e:	lea    rdx,[rsp+0x78]
   140018f53:	lea    rcx,[rsp+0x28]
   140018f58:	call   QWORD PTR [rip+0x30972]        # 0x1400498d0
   140018f5e:	lea    r11,[rip+0x31273]        # 0x14004a1d8
   140018f65:	mov    QWORD PTR [rsp+0x28],r11
   140018f6a:	lea    rdx,[rip+0x4a7d7]        # 0x140063748
   140018f71:	lea    rcx,[rsp+0x28]
   140018f76:	call   0x14002b560
   140018f7b:	nop
   140018f7c:	mov    r8,rsi
   140018f7f:	mov    rdx,QWORD PTR [r12+0x8]
   140018f84:	mov    rcx,QWORD PTR [r12]
   140018f88:	call   0x14001a340
   140018f8d:	nop
   140018f8e:	mov    r14,QWORD PTR [r12+0x8]
   140018f93:	mov    rdi,QWORD PTR [r12]
   140018f97:	mov    rcx,r14
   140018f9a:	sub    rcx,rdi
   140018f9d:	mov    rax,r13
   140018fa0:	imul   rcx
   140018fa3:	mov    r13,rdx
   140018fa6:	sar    r13,0x4
   140018faa:	mov    rax,r13
   140018fad:	shr    rax,0x3f
   140018fb1:	add    r13,rax
   140018fb4:	test   rdi,rdi
   140018fb7:	je     0x140018fee
   140018fb9:	jmp    0x140018fdf
   140018fbb:	cmp    QWORD PTR [rdi+0x18],0x8
   140018fc0:	jb     0x140018fcb
   140018fc2:	mov    rcx,QWORD PTR [rdi]
   140018fc5:	call   QWORD PTR [rip+0x306ad]        # 0x140049678
   140018fcb:	mov    QWORD PTR [rdi+0x18],0x7
   140018fd3:	mov    QWORD PTR [rdi+0x10],r15
   140018fd7:	mov    WORD PTR [rdi],r15w
   140018fdb:	add    rdi,0x38
   140018fdf:	cmp    rdi,r14
   140018fe2:	jne    0x140018fbb
   140018fe4:	mov    rcx,QWORD PTR [r12]
   140018fe8:	call   QWORD PTR [rip+0x3068a]        # 0x140049678
   140018fee:	imul   rbx,rbx,0x38
   140018ff2:	add    rbx,rsi
   140018ff5:	mov    QWORD PTR [r12+0x10],rbx
   140018ffa:	imul   r13,r13,0x38
   140018ffe:	add    r13,rsi
   140019001:	mov    QWORD PTR [r12+0x8],r13
   140019006:	mov    QWORD PTR [r12],rsi
   14001900a:	lea    r11,[rsp+0x40]
   14001900f:	mov    rbx,QWORD PTR [r11+0x30]
   140019013:	mov    rsi,QWORD PTR [r11+0x40]
   140019017:	mov    rsp,r11
   14001901a:	pop    r15
   14001901c:	pop    r14
   14001901e:	pop    r13
   140019020:	pop    r12
   140019022:	pop    rdi
   140019023:	ret    
   140019024:	mov    rax,rsp
   140019027:	mov    QWORD PTR [rax+0x8],rbx
   14001902b:	mov    QWORD PTR [rax+0x10],rbp
   14001902f:	mov    QWORD PTR [rax+0x18],rsi
   140019033:	mov    QWORD PTR [rax+0x20],r9
   140019037:	push   rdi
   140019038:	push   r12
   14001903a:	push   r13
   14001903c:	push   r14
   14001903e:	push   r15
   140019040:	sub    rsp,0x20
   140019044:	mov    rbx,r8
   140019047:	mov    r13,rdx
   14001904a:	mov    r15,rcx
   14001904d:	cmp    r8,r9
   140019050:	je     0x1400190bf
   140019052:	mov    r14,QWORD PTR [r15]
   140019055:	cmp    r14,QWORD PTR [r15+0x8]
   140019059:	je     0x1400190bf
   14001905b:	mov    rdi,rbx
   14001905e:	cmp    rbx,r9
   140019061:	je     0x1400190b1
   140019063:	cmp    r14,QWORD PTR [r15+0x8]
   140019067:	je     0x1400190e7
   140019069:	mov    sil,BYTE PTR [rdi]
   14001906c:	lea    rcx,[r15+0x10]
   140019070:	call   0x1400187a0
   140019075:	mov    dl,sil
   140019078:	mov    rcx,rax
   14001907b:	call   QWORD PTR [rip+0x30497]        # 0x140049518
   140019081:	mov    sil,BYTE PTR [r14]
   140019084:	lea    rcx,[r15+0x10]
   140019088:	mov    bpl,al
   14001908b:	call   0x1400187a0
   140019090:	mov    dl,sil
   140019093:	mov    rcx,rax
   140019096:	call   QWORD PTR [rip+0x3047c]        # 0x140049518
   14001909c:	mov    r9,QWORD PTR [rsp+0x68]
   1400190a1:	cmp    bpl,al
   1400190a4:	jne    0x1400190b1
   1400190a6:	inc    rdi
   1400190a9:	inc    r14
   1400190ac:	cmp    rdi,r9
   1400190af:	jne    0x140019063
   1400190b1:	cmp    r14,QWORD PTR [r15+0x8]
   1400190b5:	je     0x1400190e7
   1400190b7:	inc    rbx
   1400190ba:	cmp    rbx,r9
   1400190bd:	jne    0x140019052
   1400190bf:	mov    QWORD PTR [r13+0x8],r9
   1400190c3:	mov    QWORD PTR [r13+0x0],r9
   1400190c7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400190cc:	mov    rbp,QWORD PTR [rsp+0x58]
   1400190d1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400190d6:	mov    rax,r13
   1400190d9:	add    rsp,0x20
   1400190dd:	pop    r15
   1400190df:	pop    r14
   1400190e1:	pop    r13
   1400190e3:	pop    r12
   1400190e5:	pop    rdi
   1400190e6:	ret    
   1400190e7:	mov    QWORD PTR [r13+0x0],rbx
   1400190eb:	mov    QWORD PTR [r13+0x8],rdi
   1400190ef:	jmp    0x1400190c7
   1400190f1:	int3   
   1400190f2:	int3   
   1400190f3:	int3   
   1400190f4:	mov    QWORD PTR [rsp+0x18],rbx
   1400190f9:	mov    QWORD PTR [rsp+0x8],rcx
   1400190fe:	push   rbp
   1400190ff:	push   rsi
   140019100:	push   rdi
   140019101:	push   r12
   140019103:	push   r13
   140019105:	push   r14
   140019107:	push   r15
   140019109:	sub    rsp,0x20
   14001910d:	mov    r12,rdx
   140019110:	mov    r15,rcx
   140019113:	mov    r14,r8
   140019116:	mov    r9,r8
   140019119:	movabs r8,0x4924924924924925
   140019123:	lea    rcx,[r14-0x38]
   140019127:	sub    r9,rdx
   14001912a:	sub    rcx,r12
   14001912d:	mov    rax,r8
   140019130:	imul   r9
   140019133:	sar    rdx,0x4
   140019137:	mov    rax,rdx
   14001913a:	shr    rax,0x3f
   14001913e:	add    rax,rdx
   140019141:	cqo    
   140019143:	sub    rax,rdx
   140019146:	sar    rax,1
   140019149:	mov    rbx,rax
   14001914c:	mov    rax,r8
   14001914f:	imul   rcx
   140019152:	imul   rbx,rbx,0x38
   140019156:	sar    rdx,0x4
   14001915a:	add    rbx,r12
   14001915d:	mov    rcx,rdx
   140019160:	shr    rcx,0x3f
   140019164:	add    rdx,rcx
   140019167:	cmp    rdx,0x28
   14001916b:	jle    0x1400192c3
   140019171:	lea    rax,[rdx+0x1]
   140019175:	cqo    
   140019177:	and    edx,0x7
   14001917a:	add    rax,rdx
   14001917d:	mov    rdx,QWORD PTR [r12+0x28]
   140019182:	sar    rax,0x3
   140019186:	mov    rbp,rax
   140019189:	imul   rax,rax,0x70
   14001918d:	imul   rbp,rbp,0x38
   140019191:	mov    QWORD PTR [rsp+0x68],rax
   140019196:	lea    rdi,[rax+r12*1]
   14001919a:	lea    rsi,[r12+rbp*1]
   14001919e:	cmp    QWORD PTR [rsi+0x28],rdx
   1400191a2:	jae    0x1400191af
   1400191a4:	mov    rdx,r12
   1400191a7:	mov    rcx,rsi
   1400191aa:	call   0x140019bc0
   1400191af:	mov    rax,QWORD PTR [rsi+0x28]
   1400191b3:	cmp    QWORD PTR [rdi+0x28],rax
   1400191b7:	jae    0x1400191c4
   1400191b9:	mov    rdx,rsi
   1400191bc:	mov    rcx,rdi
   1400191bf:	call   0x140019bc0
   1400191c4:	mov    rax,QWORD PTR [r12+0x28]
   1400191c9:	cmp    QWORD PTR [rsi+0x28],rax
   1400191cd:	jae    0x1400191da
   1400191cf:	mov    rdx,r12
   1400191d2:	mov    rcx,rsi
   1400191d5:	call   0x140019bc0
   1400191da:	mov    rdi,rbx
   1400191dd:	lea    r15,[rbx+rbp*1]
   1400191e1:	sub    rdi,rbp
   1400191e4:	mov    rax,QWORD PTR [rdi+0x28]
   1400191e8:	cmp    QWORD PTR [rbx+0x28],rax
   1400191ec:	jae    0x1400191f9
   1400191ee:	mov    rdx,rdi
   1400191f1:	mov    rcx,rbx
   1400191f4:	call   0x140019bc0
   1400191f9:	mov    rax,QWORD PTR [rbx+0x28]
   1400191fd:	cmp    QWORD PTR [r15+0x28],rax
   140019201:	jae    0x14001920e
   140019203:	mov    rdx,rbx
   140019206:	mov    rcx,r15
   140019209:	call   0x140019bc0
   14001920e:	mov    rax,QWORD PTR [rdi+0x28]
   140019212:	cmp    QWORD PTR [rbx+0x28],rax
   140019216:	jae    0x140019223
   140019218:	mov    rdx,rdi
   14001921b:	mov    rcx,rbx
   14001921e:	call   0x140019bc0
   140019223:	lea    rdi,[r14-0x38]
   140019227:	sub    rdi,rbp
   14001922a:	lea    rbp,[r14-0x38]
   14001922e:	sub    rbp,QWORD PTR [rsp+0x68]
   140019233:	mov    rax,QWORD PTR [rbp+0x28]
   140019237:	cmp    QWORD PTR [rdi+0x28],rax
   14001923b:	jae    0x140019248
   14001923d:	mov    rdx,rbp
   140019240:	mov    rcx,rdi
   140019243:	call   0x140019bc0
   140019248:	mov    rax,QWORD PTR [rdi+0x28]
   14001924c:	cmp    QWORD PTR [r14-0x10],rax
   140019250:	jae    0x14001925e
   140019252:	lea    rcx,[r14-0x38]
   140019256:	mov    rdx,rdi
   140019259:	call   0x140019bc0
   14001925e:	mov    rax,QWORD PTR [rbp+0x28]
   140019262:	cmp    QWORD PTR [rdi+0x28],rax
   140019266:	jae    0x140019273
   140019268:	mov    rdx,rbp
   14001926b:	mov    rcx,rdi
   14001926e:	call   0x140019bc0
   140019273:	mov    rax,QWORD PTR [rsi+0x28]
   140019277:	cmp    QWORD PTR [rbx+0x28],rax
   14001927b:	jae    0x140019288
   14001927d:	mov    rdx,rsi
   140019280:	mov    rcx,rbx
   140019283:	call   0x140019bc0
   140019288:	mov    rax,QWORD PTR [rbx+0x28]
   14001928c:	cmp    QWORD PTR [rdi+0x28],rax
   140019290:	jae    0x14001929d
   140019292:	mov    rdx,rbx
   140019295:	mov    rcx,rdi
   140019298:	call   0x140019bc0
   14001929d:	mov    rax,QWORD PTR [rsi+0x28]
   1400192a1:	cmp    QWORD PTR [rbx+0x28],rax
   1400192a5:	jae    0x1400192b2
   1400192a7:	mov    rdx,rsi
   1400192aa:	mov    rcx,rbx
   1400192ad:	call   0x140019bc0
   1400192b2:	mov    r15,QWORD PTR [rsp+0x60]
   1400192b7:	lea    rdi,[rbx+0x38]
   1400192bb:	mov    r13d,0x38
   1400192c1:	jmp    0x140019316
   1400192c3:	mov    rax,QWORD PTR [r12+0x28]
   1400192c8:	cmp    QWORD PTR [rbx+0x28],rax
   1400192cc:	jae    0x1400192d9
   1400192ce:	mov    rdx,r12
   1400192d1:	mov    rcx,rbx
   1400192d4:	call   0x140019bc0
   1400192d9:	mov    rax,QWORD PTR [rbx+0x28]
   1400192dd:	cmp    QWORD PTR [r14-0x10],rax
   1400192e1:	jae    0x1400192ef
   1400192e3:	lea    rcx,[r14-0x38]
   1400192e7:	mov    rdx,rbx
   1400192ea:	call   0x140019bc0
   1400192ef:	mov    rax,QWORD PTR [r12+0x28]
   1400192f4:	cmp    QWORD PTR [rbx+0x28],rax
   1400192f8:	jae    0x1400192b7
   1400192fa:	mov    rdx,r12
   1400192fd:	mov    rcx,rbx
   140019300:	call   0x140019bc0
   140019305:	jmp    0x1400192b7
   140019307:	mov    rax,QWORD PTR [rbx-0x10]
   14001930b:	cmp    QWORD PTR [rbx+0x28],rax
   14001930f:	ja     0x14001931b
   140019311:	jb     0x14001931b
   140019313:	sub    rbx,r13
   140019316:	cmp    r12,rbx
   140019319:	jb     0x140019307
   14001931b:	cmp    rdi,r14
   14001931e:	jae    0x140019334
   140019320:	mov    rax,QWORD PTR [rbx+0x28]
   140019324:	cmp    rax,QWORD PTR [rdi+0x28]
   140019328:	ja     0x140019334
   14001932a:	jb     0x140019334
   14001932c:	add    rdi,r13
   14001932f:	cmp    rdi,r14
   140019332:	jb     0x140019324
   140019334:	mov    rsi,rdi
   140019337:	mov    rbp,rbx
   14001933a:	jmp    0x140019359
   14001933c:	mov    rax,QWORD PTR [rbx+0x28]
   140019340:	cmp    QWORD PTR [rsi+0x28],rax
   140019344:	ja     0x140019356
   140019346:	jb     0x14001937e
   140019348:	mov    rcx,rdi
   14001934b:	mov    rdx,rsi
   14001934e:	add    rdi,r13
   140019351:	call   0x140019bc0
   140019356:	add    rsi,r13
   140019359:	cmp    rsi,r14
   14001935c:	jb     0x14001933c
   14001935e:	jmp    0x14001937e
   140019360:	mov    rax,QWORD PTR [rbx+0x28]
   140019364:	cmp    rax,QWORD PTR [rbp-0x10]
   140019368:	ja     0x14001937b
   14001936a:	jb     0x140019383
   14001936c:	sub    rbx,r13
   14001936f:	lea    rdx,[rbp-0x38]
   140019373:	mov    rcx,rbx
   140019376:	call   0x140019bc0
   14001937b:	sub    rbp,r13
   14001937e:	cmp    r12,rbp
   140019381:	jb     0x140019360
   140019383:	cmp    rbp,r12
   140019386:	jne    0x1400193ae
   140019388:	cmp    rsi,r14
   14001938b:	je     0x1400193e4
   14001938d:	cmp    rdi,rsi
   140019390:	je     0x14001939d
   140019392:	mov    rdx,rdi
   140019395:	mov    rcx,rbx
   140019398:	call   0x140019bc0
   14001939d:	mov    rcx,rbx
   1400193a0:	add    rdi,r13
   1400193a3:	mov    rdx,rsi
   1400193a6:	add    rbx,r13
   1400193a9:	add    rsi,r13
   1400193ac:	jmp    0x1400193d2
   1400193ae:	sub    rbp,r13
   1400193b1:	cmp    rsi,r14
   1400193b4:	jne    0x1400193d9
   1400193b6:	sub    rbx,r13
   1400193b9:	cmp    rbp,rbx
   1400193bc:	je     0x1400193c9
   1400193be:	mov    rdx,rbx
   1400193c1:	mov    rcx,rbp
   1400193c4:	call   0x140019bc0
   1400193c9:	sub    rdi,r13
   1400193cc:	mov    rcx,rbx
   1400193cf:	mov    rdx,rdi
   1400193d2:	call   0x140019bc0
   1400193d7:	jmp    0x140019359
   1400193d9:	mov    rdx,rbp
   1400193dc:	mov    rcx,rsi
   1400193df:	jmp    0x140019351
   1400193e4:	mov    QWORD PTR [r15],rbx
   1400193e7:	mov    rbx,QWORD PTR [rsp+0x70]
   1400193ec:	mov    QWORD PTR [r15+0x8],rdi
   1400193f0:	mov    rax,r15
   1400193f3:	add    rsp,0x20
   1400193f7:	pop    r15
   1400193f9:	pop    r14
   1400193fb:	pop    r13
   1400193fd:	pop    r12
   1400193ff:	pop    rdi
   140019400:	pop    rsi
   140019401:	pop    rbp
   140019402:	ret    
   140019403:	int3   
   140019404:	mov    rax,rsp
   140019407:	push   rsi
   140019408:	push   rdi
   140019409:	push   r12
   14001940b:	push   r13
   14001940d:	push   r14
   14001940f:	sub    rsp,0x70
   140019413:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001941c:	mov    QWORD PTR [rax+0x18],rbx
   140019420:	mov    QWORD PTR [rax+0x20],rbp
   140019424:	mov    rax,QWORD PTR [rip+0x4edc5]        # 0x1400681f0
   14001942b:	xor    rax,rsp
   14001942e:	mov    QWORD PTR [rsp+0x60],rax
   140019433:	mov    rsi,rdx
   140019436:	mov    rdi,rcx
   140019439:	mov    r8,rdx
   14001943c:	sub    r8,rcx
   14001943f:	movabs r13,0x4924924924924925
   140019449:	mov    rax,r13
   14001944c:	imul   r8
   14001944f:	sar    rdx,0x4
   140019453:	mov    rax,rdx
   140019456:	shr    rax,0x3f
   14001945a:	add    rdx,rax
   14001945d:	cmp    rdx,0x1
   140019461:	jle    0x14001953d
   140019467:	add    rsi,0xfffffffffffffff8
   14001946b:	mov    r12,0xffffffffffffffd0
   140019472:	sub    r12,rcx
   140019475:	mov    ebp,0x8
   14001947a:	sub    rbp,rcx
   14001947d:	xor    r14d,r14d
   140019480:	mov    QWORD PTR [rsp+0x40],0x7
   140019489:	mov    QWORD PTR [rsp+0x38],r14
   14001948e:	mov    WORD PTR [rsp+0x28],r14w
   140019494:	or     r9,0xffffffffffffffff
   140019498:	xor    r8d,r8d
   14001949b:	lea    rdx,[rsi-0x30]
   14001949f:	lea    rcx,[rsp+0x28]
   1400194a4:	call   0x140009914
   1400194a9:	mov    rax,QWORD PTR [rsi-0x8]
   1400194ad:	mov    QWORD PTR [rsp+0x50],rax
   1400194b2:	mov    rax,QWORD PTR [rsi]
   1400194b5:	mov    QWORD PTR [rsp+0x58],rax
   1400194ba:	or     r9,0xffffffffffffffff
   1400194be:	xor    r8d,r8d
   1400194c1:	mov    rdx,rdi
   1400194c4:	lea    rcx,[rsi-0x30]
   1400194c8:	call   0x140009914
   1400194cd:	mov    r11,QWORD PTR [rdi+0x28]
   1400194d1:	mov    QWORD PTR [rsi-0x8],r11
   1400194d5:	mov    rax,QWORD PTR [rdi+0x30]
   1400194d9:	mov    QWORD PTR [rsi],rax
   1400194dc:	lea    rcx,[r12+rsi*1]
   1400194e0:	mov    rax,r13
   1400194e3:	imul   rcx
   1400194e6:	sar    rdx,0x4
   1400194ea:	mov    r8,rdx
   1400194ed:	shr    r8,0x3f
   1400194f1:	add    r8,rdx
   1400194f4:	lea    r9,[rsp+0x28]
   1400194f9:	xor    edx,edx
   1400194fb:	mov    rcx,rdi
   1400194fe:	call   0x14001a1d0
   140019503:	nop
   140019504:	cmp    QWORD PTR [rsp+0x40],0x8
   14001950a:	jb     0x140019517
   14001950c:	mov    rcx,QWORD PTR [rsp+0x28]
   140019511:	call   QWORD PTR [rip+0x30161]        # 0x140049678
   140019517:	sub    rsi,0x38
   14001951b:	lea    rcx,[rsi+rbp*1]
   14001951f:	mov    rax,r13
   140019522:	imul   rcx
   140019525:	sar    rdx,0x4
   140019529:	mov    rax,rdx
   14001952c:	shr    rax,0x3f
   140019530:	add    rdx,rax
   140019533:	cmp    rdx,0x1
   140019537:	jg     0x140019480
   14001953d:	mov    rcx,QWORD PTR [rsp+0x60]
   140019542:	xor    rcx,rsp
   140019545:	call   0x14002b100
   14001954a:	lea    r11,[rsp+0x70]
   14001954f:	mov    rbx,QWORD PTR [r11+0x40]
   140019553:	mov    rbp,QWORD PTR [r11+0x48]
   140019557:	mov    rsp,r11
   14001955a:	pop    r14
   14001955c:	pop    r13
   14001955e:	pop    r12
   140019560:	pop    rdi
   140019561:	pop    rsi
   140019562:	ret    
   140019563:	int3   
   140019564:	cmp    rcx,rdx
   140019567:	je     0x140019702
   14001956d:	mov    rax,rsp
   140019570:	push   rbp
   140019571:	push   r12
   140019573:	push   r13
   140019575:	push   r14
   140019577:	push   r15
   140019579:	mov    rbp,rsp
   14001957c:	sub    rsp,0x70
   140019580:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   140019588:	mov    QWORD PTR [rax+0x10],rbx
   14001958c:	mov    QWORD PTR [rax+0x18],rsi
   140019590:	mov    QWORD PTR [rax+0x20],rdi
   140019594:	mov    rax,QWORD PTR [rip+0x4ec55]        # 0x1400681f0
   14001959b:	xor    rax,rsp
   14001959e:	mov    QWORD PTR [rbp-0x10],rax
   1400195a2:	mov    r13,rdx
   1400195a5:	mov    rsi,rcx
   1400195a8:	lea    rdi,[rcx+0x38]
   1400195ac:	cmp    rdi,rdx
   1400195af:	je     0x1400196d9
   1400195b5:	xor    r15d,r15d
   1400195b8:	or     r14,0xffffffffffffffff
   1400195bc:	mov    r12,rdi
   1400195bf:	mov    QWORD PTR [rbp-0x30],0x7
   1400195c7:	mov    QWORD PTR [rbp-0x38],r15
   1400195cb:	mov    WORD PTR [rbp-0x48],r15w
   1400195d0:	mov    r9,r14
   1400195d3:	xor    r8d,r8d
   1400195d6:	mov    rdx,rdi
   1400195d9:	lea    rcx,[rbp-0x48]
   1400195dd:	call   0x140009914
   1400195e2:	mov    r11,QWORD PTR [rdi+0x28]
   1400195e6:	mov    QWORD PTR [rbp-0x20],r11
   1400195ea:	mov    rax,QWORD PTR [rdi+0x30]
   1400195ee:	mov    QWORD PTR [rbp-0x18],rax
   1400195f2:	cmp    r11,QWORD PTR [rsi+0x28]
   1400195f6:	jae    0x140019659
   1400195f8:	cmp    rsi,rdi
   1400195fb:	je     0x140019635
   1400195fd:	lea    r12,[rdi+0x68]
   140019601:	sub    r12,0x38
   140019605:	lea    rbx,[r12-0x68]
   14001960a:	lea    rcx,[r12-0x30]
   14001960f:	mov    r9,r14
   140019612:	xor    r8d,r8d
   140019615:	mov    rdx,rbx
   140019618:	call   0x140009914
   14001961d:	mov    r11,QWORD PTR [r12-0x40]
   140019622:	mov    QWORD PTR [r12-0x8],r11
   140019627:	mov    rax,QWORD PTR [r12-0x38]
   14001962c:	mov    QWORD PTR [r12],rax
   140019630:	cmp    rbx,rsi
   140019633:	jne    0x140019601
   140019635:	mov    r9,r14
   140019638:	xor    r8d,r8d
   14001963b:	lea    rdx,[rbp-0x48]
   14001963f:	mov    rcx,rsi
   140019642:	call   0x140009914
   140019647:	mov    r11,QWORD PTR [rbp-0x20]
   14001964b:	mov    QWORD PTR [rsi+0x28],r11
   14001964f:	mov    rax,QWORD PTR [rbp-0x18]
   140019653:	mov    QWORD PTR [rsi+0x30],rax
   140019657:	jmp    0x1400196bb
   140019659:	lea    rbx,[rdi-0x38]
   14001965d:	cmp    r11,QWORD PTR [rdi-0x10]
   140019661:	jae    0x140019697
   140019663:	mov    r9,r14
   140019666:	xor    r8d,r8d
   140019669:	mov    rdx,rbx
   14001966c:	mov    rcx,r12
   14001966f:	call   0x140009914
   140019674:	mov    r11,QWORD PTR [rbx+0x28]
   140019678:	mov    QWORD PTR [r12+0x28],r11
   14001967d:	mov    rax,QWORD PTR [rbx+0x30]
   140019681:	mov    QWORD PTR [r12+0x30],rax
   140019686:	mov    r12,rbx
   140019689:	sub    rbx,0x38
   14001968d:	mov    rax,QWORD PTR [rbx+0x28]
   140019691:	cmp    QWORD PTR [rbp-0x20],rax
   140019695:	jb     0x140019663
   140019697:	mov    r9,r14
   14001969a:	xor    r8d,r8d
   14001969d:	lea    rdx,[rbp-0x48]
   1400196a1:	mov    rcx,r12
   1400196a4:	call   0x140009914
   1400196a9:	mov    r11,QWORD PTR [rbp-0x20]
   1400196ad:	mov    QWORD PTR [r12+0x28],r11
   1400196b2:	mov    rax,QWORD PTR [rbp-0x18]
   1400196b6:	mov    QWORD PTR [r12+0x30],rax
   1400196bb:	cmp    QWORD PTR [rbp-0x30],0x8
   1400196c0:	jb     0x1400196cc
   1400196c2:	mov    rcx,QWORD PTR [rbp-0x48]
   1400196c6:	call   QWORD PTR [rip+0x2ffac]        # 0x140049678
   1400196cc:	add    rdi,0x38
   1400196d0:	cmp    rdi,r13
   1400196d3:	jne    0x1400195bc
   1400196d9:	mov    rcx,QWORD PTR [rbp-0x10]
   1400196dd:	xor    rcx,rsp
   1400196e0:	call   0x14002b100
   1400196e5:	lea    r11,[rsp+0x70]
   1400196ea:	mov    rbx,QWORD PTR [r11+0x38]
   1400196ee:	mov    rsi,QWORD PTR [r11+0x40]
   1400196f2:	mov    rdi,QWORD PTR [r11+0x48]
   1400196f6:	mov    rsp,r11
   1400196f9:	pop    r15
   1400196fb:	pop    r14
   1400196fd:	pop    r13
   1400196ff:	pop    r12
   140019701:	pop    rbp
   140019702:	ret    
   140019703:	int3   
   140019704:	mov    QWORD PTR [rsp+0x8],rcx
   140019709:	push   rdi
   14001970a:	sub    rsp,0x30
   14001970e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019717:	mov    QWORD PTR [rsp+0x48],rbx
   14001971c:	mov    rdi,rdx
   14001971f:	mov    rbx,rcx
   140019722:	mov    QWORD PTR [rsp+0x50],rcx
   140019727:	xor    eax,eax
   140019729:	test   rcx,rcx
   14001972c:	je     0x140019759
   14001972e:	mov    QWORD PTR [rcx+0x18],0x7
   140019736:	mov    QWORD PTR [rcx+0x10],rax
   14001973a:	mov    WORD PTR [rcx],ax
   14001973d:	or     r9,0xffffffffffffffff
   140019741:	xor    r8d,r8d
   140019744:	call   0x140009914
   140019749:	mov    r11,QWORD PTR [rdi+0x28]
   14001974d:	mov    QWORD PTR [rbx+0x28],r11
   140019751:	mov    rax,QWORD PTR [rdi+0x30]
   140019755:	mov    QWORD PTR [rbx+0x30],rax
   140019759:	mov    rbx,QWORD PTR [rsp+0x48]
   14001975e:	add    rsp,0x30
   140019762:	pop    rdi
   140019763:	ret    
   140019764:	mov    rax,rsp
   140019767:	mov    QWORD PTR [rax+0x10],rdx
   14001976b:	push   rbp
   14001976c:	push   rsi
   14001976d:	push   rdi
   14001976e:	push   r12
   140019770:	push   r13
   140019772:	push   r14
   140019774:	push   r15
   140019776:	lea    rbp,[rax-0x57]
   14001977a:	sub    rsp,0xe0
   140019781:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   140019789:	mov    QWORD PTR [rax+0x8],rbx
   14001978d:	mov    r15,r8
   140019790:	mov    r12,rdx
   140019793:	mov    rsi,rcx
   140019796:	movups xmm0,XMMWORD PTR [r9]
   14001979a:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14001979f:	mov    rax,QWORD PTR [rbp+0x7f]
   1400197a3:	movups xmm1,XMMWORD PTR [rax]
   1400197a6:	movdqu XMMWORD PTR [rbp-0x29],xmm1
   1400197ab:	xor    r13d,r13d
   1400197ae:	mov    QWORD PTR [rsp+0x30],r13
   1400197b3:	lea    ecx,[r13+0x10]
   1400197b7:	call   QWORD PTR [rip+0x2fedb]        # 0x140049698
   1400197bd:	test   rax,rax
   1400197c0:	je     0x140019a5e
   1400197c6:	mov    QWORD PTR [rsp+0x30],rax
   1400197cb:	mov    QWORD PTR [rbp-0x61],r13
   1400197cf:	mov    QWORD PTR [rbp-0x59],r13
   1400197d3:	movups xmm0,XMMWORD PTR [rbp-0x61]
   1400197d7:	movdqu XMMWORD PTR [rax],xmm0
   1400197db:	lea    rcx,[rsp+0x30]
   1400197e0:	mov    rax,QWORD PTR [rsp+0x30]
   1400197e5:	mov    QWORD PTR [rax],rcx
   1400197e8:	mov    QWORD PTR [rsp+0x38],r13
   1400197ed:	mov    QWORD PTR [rsp+0x40],r13
   1400197f2:	mov    QWORD PTR [rbp-0x79],r13
   1400197f6:	mov    QWORD PTR [rbp-0x71],r13
   1400197fa:	cmp    QWORD PTR [rsi+0x18],0x10
   1400197ff:	jb     0x140019806
   140019801:	mov    rdi,QWORD PTR [rsi]
   140019804:	jmp    0x140019809
   140019806:	mov    rdi,rsi
   140019809:	cmp    QWORD PTR [rsi+0x18],0x10
   14001980e:	jb     0x140019815
   140019810:	mov    rbx,QWORD PTR [rsi]
   140019813:	jmp    0x140019818
   140019815:	mov    rbx,rsi
   140019818:	mov    rax,QWORD PTR [rbp-0x39]
   14001981c:	mov    r14,QWORD PTR [rbp-0x31]
   140019820:	cmp    rax,r14
   140019823:	je     0x1400198fe
   140019829:	mov    r12,QWORD PTR [rbp-0x21]
   14001982d:	mov    r13,QWORD PTR [rbp-0x29]
   140019831:	mov    QWORD PTR [rsp+0x20],rax
   140019836:	mov    r9,rbx
   140019839:	mov    r8,rdi
   14001983c:	lea    rdx,[rsp+0x30]
   140019841:	lea    rcx,[rbp+0x6f]
   140019845:	call   0x140019e58
   14001984a:	mov    rdi,QWORD PTR [rax]
   14001984d:	mov    rbx,r14
   140019850:	lea    rdx,[rbp-0x39]
   140019854:	lea    rcx,[rsp+0x30]
   140019859:	call   0x140019e3c
   14001985e:	mov    r11,rax
   140019861:	xor    eax,eax
   140019863:	mov    rcx,QWORD PTR [r11]
   140019866:	test   rcx,rcx
   140019869:	je     0x140019876
   14001986b:	mov    rcx,QWORD PTR [rcx]
   14001986e:	test   rcx,rcx
   140019871:	je     0x140019876
   140019873:	mov    rax,QWORD PTR [rcx]
   140019876:	mov    rcx,QWORD PTR [r11+0x10]
   14001987a:	and    QWORD PTR [rbp-0x51],0x0
   14001987f:	and    QWORD PTR [rbp-0x49],0x0
   140019884:	test   rax,rax
   140019887:	je     0x140019898
   140019889:	mov    rax,QWORD PTR [rax]
   14001988c:	test   rax,rax
   14001988f:	je     0x140019898
   140019891:	mov    rax,QWORD PTR [rax]
   140019894:	mov    QWORD PTR [rbp-0x51],rax
   140019898:	mov    QWORD PTR [rbp-0x41],rcx
   14001989c:	mov    r9,r12
   14001989f:	mov    r8,r13
   1400198a2:	lea    rdx,[rbp-0x51]
   1400198a6:	lea    rcx,[rsp+0x30]
   1400198ab:	call   0x14001a644
   1400198b0:	cmp    QWORD PTR [rsi+0x18],0x10
   1400198b5:	jb     0x1400198bc
   1400198b7:	mov    rcx,QWORD PTR [rsi]
   1400198ba:	jmp    0x1400198bf
   1400198bc:	mov    rcx,rsi
   1400198bf:	mov    rax,QWORD PTR [rsi+0x10]
   1400198c3:	lea    r9,[rcx+rax*1]
   1400198c7:	mov    r8,r14
   1400198ca:	lea    rdx,[rbp+0xf]
   1400198ce:	mov    r12,QWORD PTR [rbp+0x67]
   1400198d2:	mov    rcx,r12
   1400198d5:	call   0x140019024
   1400198da:	movups xmm0,XMMWORD PTR [rax]
   1400198dd:	movdqu XMMWORD PTR [rbp-0x61],xmm0
   1400198e2:	mov    rax,QWORD PTR [rbp-0x61]
   1400198e6:	mov    r14,QWORD PTR [rbp-0x59]
   1400198ea:	cmp    rax,r14
   1400198ed:	je     0x1400198fb
   1400198ef:	mov    r13,QWORD PTR [r15]
   1400198f2:	mov    r12,QWORD PTR [r15+0x8]
   1400198f6:	jmp    0x140019831
   1400198fb:	xor    r13d,r13d
   1400198fe:	cmp    QWORD PTR [rsi+0x18],0x10
   140019903:	jb     0x14001990a
   140019905:	mov    rcx,QWORD PTR [rsi]
   140019908:	jmp    0x14001990d
   14001990a:	mov    rcx,rsi
   14001990d:	mov    rax,QWORD PTR [rsi+0x10]
   140019911:	add    rax,rcx
   140019914:	mov    QWORD PTR [rsp+0x20],rax
   140019919:	mov    r9,rbx
   14001991c:	mov    r8,rdi
   14001991f:	lea    rdx,[rsp+0x30]
   140019924:	lea    rcx,[rbp+0x6f]
   140019928:	call   0x140019e58
   14001992d:	cmp    QWORD PTR [rbp-0x71],r13
   140019931:	jne    0x140019980
   140019933:	cmp    QWORD PTR [rsi+0x18],0x10
   140019938:	jb     0x14001993f
   14001993a:	mov    rdx,QWORD PTR [rsi]
   14001993d:	jmp    0x140019942
   14001993f:	mov    rdx,rsi
   140019942:	mov    rcx,QWORD PTR [rsi+0x10]
   140019946:	lea    r8,[rdx+rcx*1]
   14001994a:	cmp    QWORD PTR [rsi+0x18],0x10
   14001994f:	jb     0x140019956
   140019951:	mov    rcx,QWORD PTR [rsi]
   140019954:	jmp    0x140019959
   140019956:	mov    rcx,rsi
   140019959:	cmp    QWORD PTR [rax],r13
   14001995c:	jne    0x140019963
   14001995e:	mov    rdx,r13
   140019961:	jmp    0x140019969
   140019963:	mov    rdx,QWORD PTR [rax]
   140019966:	sub    rdx,rcx
   140019969:	test   r8,r8
   14001996c:	jne    0x140019973
   14001996e:	mov    r8,r13
   140019971:	jmp    0x140019976
   140019973:	sub    r8,QWORD PTR [rax]
   140019976:	mov    rcx,rsi
   140019979:	call   0x140002dfc
   14001997e:	jmp    0x1400199c5
   140019980:	lea    rdx,[rbp-0x39]
   140019984:	lea    rcx,[rsp+0x30]
   140019989:	call   0x140019e3c
   14001998e:	mov    rbx,rax
   140019991:	lea    rdx,[rbp-0x51]
   140019995:	lea    rcx,[rsp+0x30]
   14001999a:	call   0x140019e24
   14001999f:	mov    r8,rax
   1400199a2:	cmp    QWORD PTR [rsi+0x18],0x10
   1400199a7:	jb     0x1400199ae
   1400199a9:	mov    rcx,QWORD PTR [rsi]
   1400199ac:	jmp    0x1400199b1
   1400199ae:	mov    rcx,rsi
   1400199b1:	mov    rax,QWORD PTR [rsi+0x10]
   1400199b5:	lea    rdx,[rcx+rax*1]
   1400199b9:	mov    r9,rbx
   1400199bc:	mov    rcx,rsi
   1400199bf:	call   0x14001a000
   1400199c4:	nop
   1400199c5:	mov    rdx,QWORD PTR [rbp-0x71]
   1400199c9:	test   rdx,rdx
   1400199cc:	je     0x1400199f0
   1400199ce:	mov    r8,QWORD PTR [rbp-0x79]
   1400199d2:	test   rdx,rdx
   1400199d5:	je     0x1400199e8
   1400199d7:	dec    rdx
   1400199da:	mov    rax,rdx
   1400199dd:	neg    rax
   1400199e0:	sbb    rcx,rcx
   1400199e3:	and    r8,rcx
   1400199e6:	jmp    0x1400199d2
   1400199e8:	mov    QWORD PTR [rbp-0x71],rdx
   1400199ec:	mov    QWORD PTR [rbp-0x79],r8
   1400199f0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400199f5:	mov    rcx,QWORD PTR [rsp+0x38]
   1400199fa:	test   rbx,rbx
   1400199fd:	je     0x140019a14
   1400199ff:	dec    rbx
   140019a02:	cmp    QWORD PTR [rcx+rbx*8],r13
   140019a06:	je     0x1400199fa
   140019a08:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140019a0c:	call   QWORD PTR [rip+0x2fc66]        # 0x140049678
   140019a12:	jmp    0x1400199f5
   140019a14:	test   rcx,rcx
   140019a17:	je     0x140019a1f
   140019a19:	call   QWORD PTR [rip+0x2fc59]        # 0x140049678
   140019a1f:	mov    QWORD PTR [rsp+0x40],r13
   140019a24:	mov    QWORD PTR [rsp+0x38],r13
   140019a29:	mov    rcx,QWORD PTR [rsp+0x30]
   140019a2e:	call   QWORD PTR [rip+0x2fc44]        # 0x140049678
   140019a34:	mov    QWORD PTR [rsp+0x30],r13
   140019a39:	mov    rcx,QWORD PTR [r12+0x10]
   140019a3e:	test   rcx,rcx
   140019a41:	je     0x140019a8c
   140019a43:	call   QWORD PTR [rip+0x2f8f7]        # 0x140049340
   140019a49:	test   rax,rax
   140019a4c:	je     0x140019a8c
   140019a4e:	mov    r8,QWORD PTR [rax]
   140019a51:	mov    edx,0x1
   140019a56:	mov    rcx,rax
   140019a59:	call   QWORD PTR [r8]
   140019a5c:	jmp    0x140019a8c
   140019a5e:	mov    QWORD PTR [rbp+0x7f],r13
   140019a62:	lea    rdx,[rbp+0x7f]
   140019a66:	lea    rcx,[rbp-0x11]
   140019a6a:	call   QWORD PTR [rip+0x2fe60]        # 0x1400498d0
   140019a70:	lea    r11,[rip+0x30761]        # 0x14004a1d8
   140019a77:	mov    QWORD PTR [rbp-0x11],r11
   140019a7b:	lea    rdx,[rip+0x49cc6]        # 0x140063748
   140019a82:	lea    rcx,[rbp-0x11]
   140019a86:	call   0x14002b560
   140019a8b:	nop
   140019a8c:	mov    rbx,QWORD PTR [rsp+0x120]
   140019a94:	add    rsp,0xe0
   140019a9b:	pop    r15
   140019a9d:	pop    r14
   140019a9f:	pop    r13
   140019aa1:	pop    r12
   140019aa3:	pop    rdi
   140019aa4:	pop    rsi
   140019aa5:	pop    rbp
   140019aa6:	ret    
   140019aa7:	int3   
   140019aa8:	mov    QWORD PTR [rsp+0x8],rbx
   140019aad:	mov    QWORD PTR [rsp+0x10],rbp
   140019ab2:	mov    QWORD PTR [rsp+0x18],rsi
   140019ab7:	push   rdi
   140019ab8:	push   r12
   140019aba:	push   r13
   140019abc:	push   r14
   140019abe:	push   r15
   140019ac0:	sub    rsp,0x20
   140019ac4:	sub    rdx,rcx
   140019ac7:	mov    r12,rcx
   140019aca:	mov    rcx,r8
   140019acd:	sub    rcx,r12
   140019ad0:	movabs r15,0x4924924924924925
   140019ada:	mov    r14,r8
   140019add:	mov    rax,r15
   140019ae0:	imul   rdx
   140019ae3:	mov    r13,rdx
   140019ae6:	sar    r13,0x4
   140019aea:	mov    rax,r13
   140019aed:	shr    rax,0x3f
   140019af1:	add    r13,rax
   140019af4:	mov    rax,r15
   140019af7:	imul   rcx
   140019afa:	mov    rcx,r13
   140019afd:	mov    r8,rdx
   140019b00:	sar    r8,0x4
   140019b04:	mov    rax,r8
   140019b07:	shr    rax,0x3f
   140019b0b:	add    r8,rax
   140019b0e:	mov    rsi,r8
   140019b11:	test   r13,r13
   140019b14:	je     0x140019b29
   140019b16:	mov    rax,rsi
   140019b19:	mov    rsi,rcx
   140019b1c:	cqo    
   140019b1e:	idiv   rcx
   140019b21:	mov    rcx,rdx
   140019b24:	test   rdx,rdx
   140019b27:	jne    0x140019b16
   140019b29:	cmp    rsi,r8
   140019b2c:	jge    0x140019ba2
   140019b2e:	test   rsi,rsi
   140019b31:	jle    0x140019ba2
   140019b33:	mov    rdi,rsi
   140019b36:	mov    rbp,r13
   140019b39:	imul   rdi,rdi,0x38
   140019b3d:	imul   rbp,rbp,0x38
   140019b41:	add    rdi,r12
   140019b44:	lea    rbx,[rdi+rbp*1]
   140019b48:	mov    r8,rdi
   140019b4b:	cmp    rbx,r14
   140019b4e:	cmove  rbx,r12
   140019b52:	mov    rdx,rbx
   140019b55:	mov    rcx,r8
   140019b58:	call   0x140019bc0
   140019b5d:	mov    rcx,r14
   140019b60:	mov    rax,r15
   140019b63:	sub    rcx,rbx
   140019b66:	mov    r8,rbx
   140019b69:	imul   rcx
   140019b6c:	sar    rdx,0x4
   140019b70:	mov    rax,rdx
   140019b73:	shr    rax,0x3f
   140019b77:	add    rdx,rax
   140019b7a:	cmp    r13,rdx
   140019b7d:	jge    0x140019b84
   140019b7f:	add    rbx,rbp
   140019b82:	jmp    0x140019b91
   140019b84:	mov    rbx,r13
   140019b87:	sub    rbx,rdx
   140019b8a:	imul   rbx,rbx,0x38
   140019b8e:	add    rbx,r12
   140019b91:	cmp    rbx,rdi
   140019b94:	jne    0x140019b52
   140019b96:	dec    rsi
   140019b99:	sub    rdi,0x38
   140019b9d:	test   rsi,rsi
   140019ba0:	jg     0x140019b44
   140019ba2:	mov    rbx,QWORD PTR [rsp+0x50]
   140019ba7:	mov    rbp,QWORD PTR [rsp+0x58]
   140019bac:	mov    rsi,QWORD PTR [rsp+0x60]
   140019bb1:	add    rsp,0x20
   140019bb5:	pop    r15
   140019bb7:	pop    r14
   140019bb9:	pop    r13
   140019bbb:	pop    r12
   140019bbd:	pop    rdi
   140019bbe:	ret    
   140019bbf:	int3   
   140019bc0:	mov    r11,rsp
   140019bc3:	push   rdi
   140019bc4:	sub    rsp,0x70
   140019bc8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019bd1:	mov    QWORD PTR [r11+0x18],rbx
   140019bd5:	mov    QWORD PTR [r11+0x20],rsi
   140019bd9:	mov    rax,QWORD PTR [rip+0x4e610]        # 0x1400681f0
   140019be0:	xor    rax,rsp
   140019be3:	mov    QWORD PTR [rsp+0x60],rax
   140019be8:	mov    rdi,rdx
   140019beb:	mov    rbx,rcx
   140019bee:	mov    QWORD PTR [r11-0x38],0x7
   140019bf6:	xor    eax,eax
   140019bf8:	mov    QWORD PTR [r11-0x40],rax
   140019bfc:	mov    WORD PTR [rsp+0x28],ax
   140019c01:	or     rsi,0xffffffffffffffff
   140019c05:	mov    r9,rsi
   140019c08:	xor    r8d,r8d
   140019c0b:	mov    rdx,rcx
   140019c0e:	lea    rcx,[r11-0x50]
   140019c12:	call   0x140009914
   140019c17:	mov    rax,QWORD PTR [rbx+0x28]
   140019c1b:	mov    QWORD PTR [rsp+0x50],rax
   140019c20:	mov    rax,QWORD PTR [rbx+0x30]
   140019c24:	mov    QWORD PTR [rsp+0x58],rax
   140019c29:	mov    r9,rsi
   140019c2c:	xor    r8d,r8d
   140019c2f:	mov    rdx,rdi
   140019c32:	mov    rcx,rbx
   140019c35:	call   0x140009914
   140019c3a:	mov    rax,QWORD PTR [rdi+0x28]
   140019c3e:	mov    QWORD PTR [rbx+0x28],rax
   140019c42:	mov    rax,QWORD PTR [rdi+0x30]
   140019c46:	mov    QWORD PTR [rbx+0x30],rax
   140019c4a:	mov    r9,rsi
   140019c4d:	xor    r8d,r8d
   140019c50:	lea    rdx,[rsp+0x28]
   140019c55:	mov    rcx,rdi
   140019c58:	call   0x140009914
   140019c5d:	mov    r11,QWORD PTR [rsp+0x50]
   140019c62:	mov    QWORD PTR [rdi+0x28],r11
   140019c66:	mov    rax,QWORD PTR [rsp+0x58]
   140019c6b:	mov    QWORD PTR [rdi+0x30],rax
   140019c6f:	cmp    QWORD PTR [rsp+0x40],0x8
   140019c75:	jb     0x140019c82
   140019c77:	mov    rcx,QWORD PTR [rsp+0x28]
   140019c7c:	call   QWORD PTR [rip+0x2f9f6]        # 0x140049678
   140019c82:	mov    rcx,QWORD PTR [rsp+0x60]
   140019c87:	xor    rcx,rsp
   140019c8a:	call   0x14002b100
   140019c8f:	lea    r11,[rsp+0x70]
   140019c94:	mov    rbx,QWORD PTR [r11+0x20]
   140019c98:	mov    rsi,QWORD PTR [r11+0x28]
   140019c9c:	mov    rsp,r11
   140019c9f:	pop    rdi
   140019ca0:	ret    
   140019ca1:	int3   
   140019ca2:	int3   
   140019ca3:	int3   
   140019ca4:	mov    rax,rsp
   140019ca7:	push   rsi
   140019ca8:	push   rdi
   140019ca9:	push   r12
   140019cab:	sub    rsp,0x70
   140019caf:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019cb8:	mov    QWORD PTR [rax+0x18],rbx
   140019cbc:	mov    QWORD PTR [rax+0x20],rbp
   140019cc0:	mov    rax,QWORD PTR [rip+0x4e529]        # 0x1400681f0
   140019cc7:	xor    rax,rsp
   140019cca:	mov    QWORD PTR [rsp+0x60],rax
   140019ccf:	mov    rsi,rcx
   140019cd2:	sub    rdx,rcx
   140019cd5:	movabs rax,0x4924924924924925
   140019cdf:	imul   rdx
   140019ce2:	mov    rbp,rdx
   140019ce5:	sar    rbp,0x4
   140019ce9:	mov    rax,rbp
   140019cec:	shr    rax,0x3f
   140019cf0:	add    rbp,rax
   140019cf3:	mov    rax,rbp
   140019cf6:	cqo    
   140019cf8:	sub    rax,rdx
   140019cfb:	sar    rax,1
   140019cfe:	mov    rbx,rax
   140019d01:	xor    r12d,r12d
   140019d04:	test   rax,rax
   140019d07:	jle    0x140019d82
   140019d09:	mov    rcx,rax
   140019d0c:	imul   rcx,rcx,0x38
   140019d10:	lea    rdi,[rcx+rsi*1+0x30]
   140019d15:	dec    rbx
   140019d18:	sub    rdi,0x38
   140019d1c:	mov    QWORD PTR [rsp+0x40],0x7
   140019d25:	mov    QWORD PTR [rsp+0x38],r12
   140019d2a:	mov    WORD PTR [rsp+0x28],r12w
   140019d30:	lea    rdx,[rdi-0x30]
   140019d34:	or     r9,0xffffffffffffffff
   140019d38:	xor    r8d,r8d
   140019d3b:	lea    rcx,[rsp+0x28]
   140019d40:	call   0x140009914
   140019d45:	mov    r11,QWORD PTR [rdi-0x8]
   140019d49:	mov    QWORD PTR [rsp+0x50],r11
   140019d4e:	mov    rax,QWORD PTR [rdi]
   140019d51:	mov    QWORD PTR [rsp+0x58],rax
   140019d56:	lea    r9,[rsp+0x28]
   140019d5b:	mov    r8,rbp
   140019d5e:	mov    rdx,rbx
   140019d61:	mov    rcx,rsi
   140019d64:	call   0x14001a1d0
   140019d69:	nop
   140019d6a:	cmp    QWORD PTR [rsp+0x40],0x8
   140019d70:	jb     0x140019d7d
   140019d72:	mov    rcx,QWORD PTR [rsp+0x28]
   140019d77:	call   QWORD PTR [rip+0x2f8fb]        # 0x140049678
   140019d7d:	test   rbx,rbx
   140019d80:	jg     0x140019d15
   140019d82:	mov    rcx,QWORD PTR [rsp+0x60]
   140019d87:	xor    rcx,rsp
   140019d8a:	call   0x14002b100
   140019d8f:	lea    r11,[rsp+0x70]
   140019d94:	mov    rbx,QWORD PTR [r11+0x30]
   140019d98:	mov    rbp,QWORD PTR [r11+0x38]
   140019d9c:	mov    rsp,r11
   140019d9f:	pop    r12
   140019da1:	pop    rdi
   140019da2:	pop    rsi
   140019da3:	ret    
   140019da4:	mov    QWORD PTR [rsp+0x8],rbx
   140019da9:	push   rdi
   140019daa:	sub    rsp,0x20
   140019dae:	mov    rax,QWORD PTR [rcx+0x20]
   140019db2:	mov    rbx,rcx
   140019db5:	test   rax,rax
   140019db8:	je     0x140019dd4
   140019dba:	test   rax,rax
   140019dbd:	je     0x140019dcd
   140019dbf:	dec    rax
   140019dc2:	mov    QWORD PTR [rcx+0x20],rax
   140019dc6:	jne    0x140019dcd
   140019dc8:	and    QWORD PTR [rcx+0x18],0x0
   140019dcd:	cmp    QWORD PTR [rcx+0x20],0x0
   140019dd2:	jne    0x140019dba
   140019dd4:	mov    rdi,QWORD PTR [rcx+0x10]
   140019dd8:	jmp    0x140019dee
   140019dda:	dec    rdi
   140019ddd:	cmp    QWORD PTR [rcx+rdi*8],0x0
   140019de2:	je     0x140019dee
   140019de4:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140019de8:	call   QWORD PTR [rip+0x2f88a]        # 0x140049678
   140019dee:	mov    rcx,QWORD PTR [rbx+0x8]
   140019df2:	test   rdi,rdi
   140019df5:	jne    0x140019dda
   140019df7:	test   rcx,rcx
   140019dfa:	je     0x140019e02
   140019dfc:	call   QWORD PTR [rip+0x2f876]        # 0x140049678
   140019e02:	mov    rcx,QWORD PTR [rbx]
   140019e05:	and    QWORD PTR [rbx+0x10],0x0
   140019e0a:	and    QWORD PTR [rbx+0x8],0x0
   140019e0f:	call   QWORD PTR [rip+0x2f863]        # 0x140049678
   140019e15:	and    QWORD PTR [rbx],0x0
   140019e19:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e1e:	add    rsp,0x20
   140019e22:	pop    rdi
   140019e23:	ret    
   140019e24:	mov    rax,QWORD PTR [rcx]
   140019e27:	mov    r8,QWORD PTR [rcx+0x18]
   140019e2b:	and    QWORD PTR [rdx+0x8],0x0
   140019e30:	mov    QWORD PTR [rdx],rax
   140019e33:	mov    QWORD PTR [rdx+0x10],r8
   140019e37:	mov    rax,rdx
   140019e3a:	ret    
   140019e3b:	int3   
   140019e3c:	mov    rax,QWORD PTR [rcx]
   140019e3f:	mov    r8,QWORD PTR [rcx+0x20]
   140019e43:	and    QWORD PTR [rdx+0x8],0x0
   140019e48:	add    r8,QWORD PTR [rcx+0x18]
   140019e4c:	mov    QWORD PTR [rdx],rax
   140019e4f:	mov    rax,rdx
   140019e52:	mov    QWORD PTR [rdx+0x10],r8
   140019e56:	ret    
   140019e57:	int3   
   140019e58:	mov    rax,rsp
   140019e5b:	mov    QWORD PTR [rax+0x8],rbx
   140019e5f:	mov    QWORD PTR [rax+0x10],rbp
   140019e63:	mov    QWORD PTR [rax+0x18],rsi
   140019e67:	mov    QWORD PTR [rax+0x20],rdi
   140019e6b:	push   r12
   140019e6d:	sub    rsp,0x40
   140019e71:	cmp    QWORD PTR [rdx+0x20],0x0
   140019e76:	mov    rbp,QWORD PTR [rax+0x28]
   140019e7a:	mov    rdi,r9
   140019e7d:	mov    rbx,r8
   140019e80:	mov    rsi,rdx
   140019e83:	mov    r12,rcx
   140019e86:	je     0x140019f18
   140019e8c:	cmp    rbx,rdi
   140019e8f:	je     0x140019f18
   140019e95:	lea    rdx,[rsp+0x20]
   140019e9a:	mov    rcx,rsi
   140019e9d:	call   0x140019e24
   140019ea2:	mov    r11,rax
   140019ea5:	mov    rax,QWORD PTR [rax]
   140019ea8:	test   rax,rax
   140019eab:	je     0x140019eb0
   140019ead:	mov    rax,QWORD PTR [rax]
   140019eb0:	mov    rdx,QWORD PTR [r11+0x10]
   140019eb4:	mov    rcx,rdx
   140019eb7:	and    edx,0xf
   140019eba:	shr    rcx,0x4
   140019ebe:	cmp    QWORD PTR [rax+0x10],rcx
   140019ec2:	ja     0x140019ec8
   140019ec4:	sub    rcx,QWORD PTR [rax+0x10]
   140019ec8:	mov    rax,QWORD PTR [rax+0x8]
   140019ecc:	mov    rcx,QWORD PTR [rax+rcx*8]
   140019ed0:	mov    al,BYTE PTR [rdx+rcx*1]
   140019ed3:	mov    BYTE PTR [rbx],al
   140019ed5:	mov    rcx,QWORD PTR [rsi+0x20]
   140019ed9:	test   rcx,rcx
   140019edc:	je     0x140019f0a
   140019ede:	inc    QWORD PTR [rsi+0x18]
   140019ee2:	mov    rax,QWORD PTR [rsi+0x10]
   140019ee6:	shl    rax,0x4
   140019eea:	cmp    QWORD PTR [rsi+0x18],rax
   140019eee:	sbb    rax,rax
   140019ef1:	and    rax,QWORD PTR [rsi+0x18]
   140019ef5:	mov    QWORD PTR [rsi+0x18],rax
   140019ef9:	lea    rax,[rcx-0x1]
   140019efd:	mov    QWORD PTR [rsi+0x20],rax
   140019f01:	test   rax,rax
   140019f04:	jne    0x140019f0a
   140019f06:	and    QWORD PTR [rsi+0x18],rax
   140019f0a:	inc    rbx
   140019f0d:	cmp    QWORD PTR [rsi+0x20],0x0
   140019f12:	jne    0x140019e8c
   140019f18:	cmp    QWORD PTR [rsi+0x20],0x0
   140019f1d:	jne    0x140019fd3
   140019f23:	cmp    rbx,rdi
   140019f26:	jne    0x140019f31
   140019f28:	mov    QWORD PTR [r12],rbp
   140019f2c:	jmp    0x140019fe0
   140019f31:	sub    rbp,rdi
   140019f34:	mov    rdx,rdi
   140019f37:	mov    rcx,rbx
   140019f3a:	mov    r8,rbp
   140019f3d:	call   QWORD PTR [rip+0x2f6ad]        # 0x1400495f0
   140019f43:	lea    r11,[rbx+rbp*1]
   140019f47:	mov    QWORD PTR [r12],r11
   140019f4b:	jmp    0x140019fe0
   140019f50:	mov    rdx,rbx
   140019f53:	mov    rcx,rsi
   140019f56:	call   0x14001a3a0
   140019f5b:	lea    rdx,[rsp+0x20]
   140019f60:	mov    rcx,rsi
   140019f63:	call   0x140019e24
   140019f68:	mov    rdx,rax
   140019f6b:	mov    rax,QWORD PTR [rax]
   140019f6e:	test   rax,rax
   140019f71:	je     0x140019f76
   140019f73:	mov    rax,QWORD PTR [rax]
   140019f76:	mov    rdx,QWORD PTR [rdx+0x10]
   140019f7a:	mov    rcx,rdx
   140019f7d:	and    edx,0xf
   140019f80:	shr    rcx,0x4
   140019f84:	cmp    QWORD PTR [rax+0x10],rcx
   140019f88:	ja     0x140019f8e
   140019f8a:	sub    rcx,QWORD PTR [rax+0x10]
   140019f8e:	mov    rax,QWORD PTR [rax+0x8]
   140019f92:	mov    rcx,QWORD PTR [rax+rcx*8]
   140019f96:	mov    al,BYTE PTR [rdx+rcx*1]
   140019f99:	mov    BYTE PTR [rbx],al
   140019f9b:	mov    rcx,QWORD PTR [rsi+0x20]
   140019f9f:	test   rcx,rcx
   140019fa2:	je     0x140019fd0
   140019fa4:	inc    QWORD PTR [rsi+0x18]
   140019fa8:	mov    rax,QWORD PTR [rsi+0x10]
   140019fac:	shl    rax,0x4
   140019fb0:	cmp    QWORD PTR [rsi+0x18],rax
   140019fb4:	sbb    rax,rax
   140019fb7:	and    rax,QWORD PTR [rsi+0x18]
   140019fbb:	mov    QWORD PTR [rsi+0x18],rax
   140019fbf:	lea    rax,[rcx-0x1]
   140019fc3:	mov    QWORD PTR [rsi+0x20],rax
   140019fc7:	test   rax,rax
   140019fca:	jne    0x140019fd0
   140019fcc:	and    QWORD PTR [rsi+0x18],rax
   140019fd0:	inc    rbx
   140019fd3:	cmp    rbx,rbp
   140019fd6:	jne    0x140019f50
   140019fdc:	mov    QWORD PTR [r12],rbx
   140019fe0:	mov    rbx,QWORD PTR [rsp+0x50]
   140019fe5:	mov    rbp,QWORD PTR [rsp+0x58]
   140019fea:	mov    rsi,QWORD PTR [rsp+0x60]
   140019fef:	mov    rdi,QWORD PTR [rsp+0x68]
   140019ff4:	mov    rax,r12
   140019ff7:	add    rsp,0x40
   140019ffb:	pop    r12
   140019ffd:	ret    
   140019ffe:	int3   
   140019fff:	int3   
   14001a000:	mov    rax,rsp
   14001a003:	push   rbp
   14001a004:	lea    rbp,[rax-0x5f]
   14001a008:	sub    rsp,0xa0
   14001a00f:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   14001a017:	mov    QWORD PTR [rax+0x10],rbx
   14001a01b:	mov    QWORD PTR [rax+0x18],rsi
   14001a01f:	mov    QWORD PTR [rax+0x20],rdi
   14001a023:	mov    rax,QWORD PTR [rip+0x4e1c6]        # 0x1400681f0
   14001a02a:	xor    rax,rsp
   14001a02d:	mov    QWORD PTR [rbp+0x47],rax
   14001a031:	mov    rbx,rdx
   14001a034:	mov    rdi,rcx
   14001a037:	xor    r10d,r10d
   14001a03a:	mov    rax,QWORD PTR [r9]
   14001a03d:	test   rax,rax
   14001a040:	je     0x14001a04d
   14001a042:	mov    rax,QWORD PTR [rax]
   14001a045:	test   rax,rax
   14001a048:	je     0x14001a04d
   14001a04a:	mov    r10,QWORD PTR [rax]
   14001a04d:	mov    r11,QWORD PTR [r9+0x10]
   14001a051:	xor    ecx,ecx
   14001a053:	mov    rax,QWORD PTR [r8]
   14001a056:	test   rax,rax
   14001a059:	je     0x14001a066
   14001a05b:	mov    rax,QWORD PTR [rax]
   14001a05e:	test   rax,rax
   14001a061:	je     0x14001a066
   14001a063:	mov    rcx,QWORD PTR [rax]
   14001a066:	mov    rsi,QWORD PTR [r8+0x10]
   14001a06a:	xor    edx,edx
   14001a06c:	test   r10,r10
   14001a06f:	je     0x14001a07c
   14001a071:	mov    rax,QWORD PTR [r10]
   14001a074:	test   rax,rax
   14001a077:	je     0x14001a07c
   14001a079:	mov    rdx,QWORD PTR [rax]
   14001a07c:	xor    eax,eax
   14001a07e:	test   rcx,rcx
   14001a081:	je     0x14001a08e
   14001a083:	mov    r8,QWORD PTR [rcx]
   14001a086:	test   r8,r8
   14001a089:	je     0x14001a08e
   14001a08b:	mov    rax,QWORD PTR [r8]
   14001a08e:	xor    ecx,ecx
   14001a090:	test   rdx,rdx
   14001a093:	je     0x14001a0a0
   14001a095:	mov    r8,QWORD PTR [rdx]
   14001a098:	test   r8,r8
   14001a09b:	je     0x14001a0a0
   14001a09d:	mov    rcx,QWORD PTR [r8]
   14001a0a0:	xor    edx,edx
   14001a0a2:	test   rax,rax
   14001a0a5:	je     0x14001a0b2
   14001a0a7:	mov    r8,QWORD PTR [rax]
   14001a0aa:	test   r8,r8
   14001a0ad:	je     0x14001a0b2
   14001a0af:	mov    rdx,QWORD PTR [r8]
   14001a0b2:	xor    r8d,r8d
   14001a0b5:	test   rcx,rcx
   14001a0b8:	je     0x14001a0c5
   14001a0ba:	mov    rax,QWORD PTR [rcx]
   14001a0bd:	test   rax,rax
   14001a0c0:	je     0x14001a0c5
   14001a0c2:	mov    r8,QWORD PTR [rax]
   14001a0c5:	xor    r9d,r9d
   14001a0c8:	test   rdx,rdx
   14001a0cb:	je     0x14001a0d8
   14001a0cd:	mov    rax,QWORD PTR [rdx]
   14001a0d0:	test   rax,rax
   14001a0d3:	je     0x14001a0d8
   14001a0d5:	mov    r9,QWORD PTR [rax]
   14001a0d8:	xor    eax,eax
   14001a0da:	test   r8,r8
   14001a0dd:	je     0x14001a0ea
   14001a0df:	mov    rcx,QWORD PTR [r8]
   14001a0e2:	test   rcx,rcx
   14001a0e5:	je     0x14001a0ea
   14001a0e7:	mov    rax,QWORD PTR [rcx]
   14001a0ea:	xor    ecx,ecx
   14001a0ec:	test   r9,r9
   14001a0ef:	je     0x14001a0fc
   14001a0f1:	mov    rdx,QWORD PTR [r9]
   14001a0f4:	test   rdx,rdx
   14001a0f7:	je     0x14001a0fc
   14001a0f9:	mov    rcx,QWORD PTR [rdx]
   14001a0fc:	mov    QWORD PTR [rbp+0x37],0xf
   14001a104:	and    QWORD PTR [rbp+0x2f],0x0
   14001a109:	mov    BYTE PTR [rbp+0x1f],0x0
   14001a10d:	and    QWORD PTR [rbp-0x19],0x0
   14001a112:	and    QWORD PTR [rbp-0x11],0x0
   14001a117:	test   rax,rax
   14001a11a:	je     0x14001a12b
   14001a11c:	mov    rax,QWORD PTR [rax]
   14001a11f:	test   rax,rax
   14001a122:	je     0x14001a12b
   14001a124:	mov    rax,QWORD PTR [rax]
   14001a127:	mov    QWORD PTR [rbp-0x19],rax
   14001a12b:	mov    QWORD PTR [rbp-0x9],r11
   14001a12f:	and    QWORD PTR [rbp-0x1],0x0
   14001a134:	and    QWORD PTR [rbp+0x7],0x0
   14001a139:	test   rcx,rcx
   14001a13c:	je     0x14001a14d
   14001a13e:	mov    rax,QWORD PTR [rcx]
   14001a141:	test   rax,rax
   14001a144:	je     0x14001a14d
   14001a146:	mov    rax,QWORD PTR [rax]
   14001a149:	mov    QWORD PTR [rbp-0x1],rax
   14001a14d:	mov    QWORD PTR [rbp+0xf],rsi
   14001a151:	lea    r8,[rbp-0x19]
   14001a155:	lea    rdx,[rbp-0x1]
   14001a159:	lea    rcx,[rbp+0x1f]
   14001a15d:	call   0x14001acd4
   14001a162:	nop
   14001a163:	cmp    QWORD PTR [rdi+0x18],0x10
   14001a168:	jb     0x14001a16f
   14001a16a:	mov    rax,QWORD PTR [rdi]
   14001a16d:	jmp    0x14001a172
   14001a16f:	mov    rax,rdi
   14001a172:	test   rbx,rbx
   14001a175:	je     0x14001a17a
   14001a177:	sub    rbx,rax
   14001a17a:	or     QWORD PTR [rsp+0x28],0xffffffffffffffff
   14001a180:	and    QWORD PTR [rsp+0x20],0x0
   14001a186:	lea    r9,[rbp+0x1f]
   14001a18a:	xor    r8d,r8d
   14001a18d:	mov    rdx,rbx
   14001a190:	mov    rcx,rdi
   14001a193:	call   0x14001844c
   14001a198:	nop
   14001a199:	cmp    QWORD PTR [rbp+0x37],0x10
   14001a19e:	jb     0x14001a1aa
   14001a1a0:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001a1a4:	call   QWORD PTR [rip+0x2f4ce]        # 0x140049678
   14001a1aa:	mov    rcx,QWORD PTR [rbp+0x47]
   14001a1ae:	xor    rcx,rsp
   14001a1b1:	call   0x14002b100
   14001a1b6:	lea    r11,[rsp+0xa0]
   14001a1be:	mov    rbx,QWORD PTR [r11+0x18]
   14001a1c2:	mov    rsi,QWORD PTR [r11+0x20]
   14001a1c6:	mov    rdi,QWORD PTR [r11+0x28]
   14001a1ca:	mov    rsp,r11
   14001a1cd:	pop    rbp
   14001a1ce:	ret    
   14001a1cf:	int3   
   14001a1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a1d5:	mov    QWORD PTR [rsp+0x10],rbp
   14001a1da:	mov    QWORD PTR [rsp+0x18],rsi
   14001a1df:	push   rdi
   14001a1e0:	push   r12
   14001a1e2:	push   r13
   14001a1e4:	push   r14
   14001a1e6:	push   r15
   14001a1e8:	sub    rsp,0x20
   14001a1ec:	lea    rsi,[rdx+rdx*1+0x2]
   14001a1f1:	or     r15,0xffffffffffffffff
   14001a1f5:	mov    r13,r9
   14001a1f8:	mov    r12,r8
   14001a1fb:	mov    r11,rdx
   14001a1fe:	mov    rbp,rcx
   14001a201:	mov    r14,rdx
   14001a204:	cmp    rsi,r8
   14001a207:	jge    0x14001a25f
   14001a209:	mov    r10,rsi
   14001a20c:	imul   r10,r10,0x38
   14001a210:	mov    rax,QWORD PTR [r10+rbp*1-0x10]
   14001a215:	cmp    QWORD PTR [r10+rbp*1+0x28],rax
   14001a21a:	jae    0x14001a21f
   14001a21c:	dec    rsi
   14001a21f:	imul   r11,r11,0x38
   14001a223:	mov    rdi,rsi
   14001a226:	mov    r9,r15
   14001a229:	xor    r8d,r8d
   14001a22c:	imul   rdi,rdi,0x38
   14001a230:	lea    rbx,[r11+rbp*1]
   14001a234:	mov    rcx,rbx
   14001a237:	add    rdi,rbp
   14001a23a:	mov    rdx,rdi
   14001a23d:	call   0x140009914
   14001a242:	mov    r11,QWORD PTR [rdi+0x28]
   14001a246:	mov    QWORD PTR [rbx+0x28],r11
   14001a24a:	mov    rax,QWORD PTR [rdi+0x30]
   14001a24e:	mov    r11,rsi
   14001a251:	lea    rsi,[rsi+rsi*1+0x2]
   14001a256:	mov    QWORD PTR [rbx+0x30],rax
   14001a25a:	cmp    rsi,r12
   14001a25d:	jl     0x14001a209
   14001a25f:	cmp    rsi,r12
   14001a262:	jne    0x14001a29e
   14001a264:	imul   r11,r11,0x38
   14001a268:	mov    rax,r12
   14001a26b:	mov    r9,r15
   14001a26e:	xor    r8d,r8d
   14001a271:	imul   rax,rax,0x38
   14001a275:	lea    rbx,[r11+rbp*1]
   14001a279:	mov    rcx,rbx
   14001a27c:	lea    rdi,[rax+rbp*1-0x38]
   14001a281:	mov    rdx,rdi
   14001a284:	call   0x140009914
   14001a289:	mov    r11,QWORD PTR [rdi+0x28]
   14001a28d:	mov    QWORD PTR [rbx+0x28],r11
   14001a291:	mov    rax,QWORD PTR [rdi+0x30]
   14001a295:	lea    r11,[r12-0x1]
   14001a29a:	mov    QWORD PTR [rbx+0x30],rax
   14001a29e:	lea    rax,[r11-0x1]
   14001a2a2:	jmp    0x14001a2e8
   14001a2a4:	mov    rcx,QWORD PTR [r13+0x28]
   14001a2a8:	mov    rdi,rsi
   14001a2ab:	imul   rdi,rdi,0x38
   14001a2af:	add    rdi,rbp
   14001a2b2:	cmp    QWORD PTR [rdi+0x28],rcx
   14001a2b6:	jae    0x14001a2f8
   14001a2b8:	imul   r11,r11,0x38
   14001a2bc:	mov    r9,r15
   14001a2bf:	xor    r8d,r8d
   14001a2c2:	mov    rdx,rdi
   14001a2c5:	lea    rbx,[r11+rbp*1]
   14001a2c9:	mov    rcx,rbx
   14001a2cc:	call   0x140009914
   14001a2d1:	mov    r11,QWORD PTR [rdi+0x28]
   14001a2d5:	mov    QWORD PTR [rbx+0x28],r11
   14001a2d9:	mov    rax,QWORD PTR [rdi+0x30]
   14001a2dd:	mov    r11,rsi
   14001a2e0:	mov    QWORD PTR [rbx+0x30],rax
   14001a2e4:	lea    rax,[rsi-0x1]
   14001a2e8:	cqo    
   14001a2ea:	sub    rax,rdx
   14001a2ed:	sar    rax,1
   14001a2f0:	mov    rsi,rax
   14001a2f3:	cmp    r14,r11
   14001a2f6:	jl     0x14001a2a4
   14001a2f8:	imul   r11,r11,0x38
   14001a2fc:	mov    r9,r15
   14001a2ff:	xor    r8d,r8d
   14001a302:	mov    rdx,r13
   14001a305:	lea    rbx,[r11+rbp*1]
   14001a309:	mov    rcx,rbx
   14001a30c:	call   0x140009914
   14001a311:	mov    r11,QWORD PTR [r13+0x28]
   14001a315:	mov    rbp,QWORD PTR [rsp+0x58]
   14001a31a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001a31f:	mov    QWORD PTR [rbx+0x28],r11
   14001a323:	mov    rax,QWORD PTR [r13+0x30]
   14001a327:	mov    QWORD PTR [rbx+0x30],rax
   14001a32b:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a330:	add    rsp,0x20
   14001a334:	pop    r15
   14001a336:	pop    r14
   14001a338:	pop    r13
   14001a33a:	pop    r12
   14001a33c:	pop    rdi
   14001a33d:	ret    
   14001a33e:	int3   
   14001a33f:	int3   
   14001a340:	mov    QWORD PTR [rsp+0x18],r8
   14001a345:	push   rdi
   14001a346:	sub    rsp,0x30
   14001a34a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a353:	mov    QWORD PTR [rsp+0x48],rbx
   14001a358:	mov    QWORD PTR [rsp+0x58],rsi
   14001a35d:	mov    rbx,r8
   14001a360:	mov    rsi,rdx
   14001a363:	mov    rdi,rcx
   14001a366:	mov    QWORD PTR [rsp+0x40],rbx
   14001a36b:	cmp    rdi,rsi
   14001a36e:	je     0x14001a38a
   14001a370:	mov    rdx,rdi
   14001a373:	mov    rcx,rbx
   14001a376:	call   0x140019704
   14001a37b:	add    rbx,0x38
   14001a37f:	mov    QWORD PTR [rsp+0x50],rbx
   14001a384:	add    rdi,0x38
   14001a388:	jmp    0x14001a36b
   14001a38a:	mov    rax,rbx
   14001a38d:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a392:	mov    rsi,QWORD PTR [rsp+0x58]
   14001a397:	add    rsp,0x30
   14001a39b:	pop    rdi
   14001a39c:	ret    
   14001a39d:	int3   
   14001a39e:	int3   
   14001a39f:	int3   
   14001a3a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a3a5:	mov    QWORD PTR [rsp+0x18],rbp
   14001a3aa:	mov    QWORD PTR [rsp+0x20],rsi
   14001a3af:	push   rdi
   14001a3b0:	sub    rsp,0x40
   14001a3b4:	mov    rbx,rcx
   14001a3b7:	mov    rcx,QWORD PTR [rcx+0x20]
   14001a3bb:	mov    rbp,rdx
   14001a3be:	mov    al,cl
   14001a3c0:	add    al,BYTE PTR [rbx+0x18]
   14001a3c3:	test   al,0xf
   14001a3c5:	jne    0x14001a3dd
   14001a3c7:	lea    rax,[rcx+0x10]
   14001a3cb:	shr    rax,0x4
   14001a3cf:	cmp    QWORD PTR [rbx+0x10],rax
   14001a3d3:	ja     0x14001a3dd
   14001a3d5:	mov    rcx,rbx
   14001a3d8:	call   0x14001a478
   14001a3dd:	mov    rsi,QWORD PTR [rbx+0x18]
   14001a3e1:	add    rsi,QWORD PTR [rbx+0x20]
   14001a3e5:	mov    rdi,rsi
   14001a3e8:	shr    rdi,0x4
   14001a3ec:	cmp    QWORD PTR [rbx+0x10],rdi
   14001a3f0:	ja     0x14001a3f6
   14001a3f2:	sub    rdi,QWORD PTR [rbx+0x10]
   14001a3f6:	mov    rax,QWORD PTR [rbx+0x8]
   14001a3fa:	cmp    QWORD PTR [rax+rdi*8],0x0
   14001a3ff:	jne    0x14001a419
   14001a401:	mov    ecx,0x10
   14001a406:	call   QWORD PTR [rip+0x2f28c]        # 0x140049698
   14001a40c:	test   rax,rax
   14001a40f:	je     0x14001a444
   14001a411:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a415:	mov    QWORD PTR [rcx+rdi*8],rax
   14001a419:	mov    rax,QWORD PTR [rbx+0x8]
   14001a41d:	and    esi,0xf
   14001a420:	add    rsi,QWORD PTR [rax+rdi*8]
   14001a424:	je     0x14001a42b
   14001a426:	mov    al,BYTE PTR [rbp+0x0]
   14001a429:	mov    BYTE PTR [rsi],al
   14001a42b:	inc    QWORD PTR [rbx+0x20]
   14001a42f:	mov    rbp,QWORD PTR [rsp+0x60]
   14001a434:	mov    rsi,QWORD PTR [rsp+0x68]
   14001a439:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a43e:	add    rsp,0x40
   14001a442:	pop    rdi
   14001a443:	ret    
   14001a444:	and    QWORD PTR [rsp+0x50],0x0
   14001a44a:	lea    rdx,[rsp+0x50]
   14001a44f:	lea    rcx,[rsp+0x20]
   14001a454:	call   QWORD PTR [rip+0x2f476]        # 0x1400498d0
   14001a45a:	lea    r11,[rip+0x2fd77]        # 0x14004a1d8
   14001a461:	lea    rdx,[rip+0x492e0]        # 0x140063748
   14001a468:	lea    rcx,[rsp+0x20]
   14001a46d:	mov    QWORD PTR [rsp+0x20],r11
   14001a472:	call   0x14002b560
   14001a477:	int3   
   14001a478:	mov    QWORD PTR [rsp+0x10],rbx
   14001a47d:	mov    QWORD PTR [rsp+0x18],rbp
   14001a482:	mov    QWORD PTR [rsp+0x20],rsi
   14001a487:	push   rdi
   14001a488:	push   r12
   14001a48a:	push   r13
   14001a48c:	sub    rsp,0x40
   14001a490:	mov    rbp,rcx
   14001a493:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a497:	movabs rdx,0xfffffffffffffff
   14001a4a1:	mov    rax,rdx
   14001a4a4:	mov    esi,0x1
   14001a4a9:	sub    rax,rcx
   14001a4ac:	cmp    rax,rsi
   14001a4af:	jae    0x14001a4bf
   14001a4b1:	lea    rcx,[rip+0x36fe8]        # 0x1400514a0
   14001a4b8:	call   QWORD PTR [rip+0x2f0da]        # 0x140049598
   14001a4be:	int3   
   14001a4bf:	mov    r8d,0x8
   14001a4c5:	mov    rax,rcx
   14001a4c8:	shr    rax,1
   14001a4cb:	cmp    rax,r8
   14001a4ce:	cmovb  rax,r8
   14001a4d2:	cmp    rax,rsi
   14001a4d5:	jbe    0x14001a4e1
   14001a4d7:	sub    rdx,rax
   14001a4da:	cmp    rcx,rdx
   14001a4dd:	cmovbe rsi,rax
   14001a4e1:	mov    rdi,QWORD PTR [rbp+0x18]
   14001a4e5:	xor    r12d,r12d
   14001a4e8:	shr    rdi,0x4
   14001a4ec:	add    rcx,rsi
   14001a4ef:	je     0x14001a546
   14001a4f1:	movabs rax,0x1fffffffffffffff
   14001a4fb:	cmp    rcx,rax
   14001a4fe:	ja     0x14001a512
   14001a500:	shl    rcx,0x3
   14001a504:	call   QWORD PTR [rip+0x2f18e]        # 0x140049698
   14001a50a:	mov    r12,rax
   14001a50d:	test   rax,rax
   14001a510:	jne    0x14001a546
   14001a512:	and    QWORD PTR [rsp+0x60],0x0
   14001a518:	lea    rdx,[rsp+0x60]
   14001a51d:	lea    rcx,[rsp+0x20]
   14001a522:	call   QWORD PTR [rip+0x2f3a8]        # 0x1400498d0
   14001a528:	lea    r11,[rip+0x2fca9]        # 0x14004a1d8
   14001a52f:	lea    rdx,[rip+0x49212]        # 0x140063748
   14001a536:	lea    rcx,[rsp+0x20]
   14001a53b:	mov    QWORD PTR [rsp+0x20],r11
   14001a540:	call   0x14002b560
   14001a545:	int3   
   14001a546:	mov    rax,QWORD PTR [rbp+0x8]
   14001a54a:	mov    rbx,QWORD PTR [rbp+0x10]
   14001a54e:	mov    r13,rdi
   14001a551:	shl    rbx,0x3
   14001a555:	shl    r13,0x3
   14001a559:	lea    rdx,[rax+r13*1]
   14001a55d:	lea    rcx,[r13+r12*1+0x0]
   14001a562:	sub    rbx,rdx
   14001a565:	add    rbx,rax
   14001a568:	and    rbx,0xfffffffffffffff8
   14001a56c:	mov    r8,rbx
   14001a56f:	call   QWORD PTR [rip+0x2f07b]        # 0x1400495f0
   14001a575:	mov    rdx,QWORD PTR [rbp+0x8]
   14001a579:	add    rax,rbx
   14001a57c:	mov    rcx,rax
   14001a57f:	cmp    rdi,rsi
   14001a582:	ja     0x14001a5c7
   14001a584:	mov    rbx,rdx
   14001a587:	sub    rbx,rdx
   14001a58a:	add    rbx,r13
   14001a58d:	mov    r13,rsi
   14001a590:	and    rbx,0xfffffffffffffff8
   14001a594:	mov    r8,rbx
   14001a597:	call   QWORD PTR [rip+0x2f053]        # 0x1400495f0
   14001a59d:	add    rax,rbx
   14001a5a0:	sub    r13,rdi
   14001a5a3:	je     0x14001a5b6
   14001a5a5:	shl    r13,0x3
   14001a5a9:	xor    edx,edx
   14001a5ab:	mov    rcx,rax
   14001a5ae:	mov    r8,r13
   14001a5b1:	call   0x14002b144
   14001a5b6:	test   rdi,rdi
   14001a5b9:	je     0x14001a612
   14001a5bb:	shl    rdi,0x3
   14001a5bf:	mov    rcx,r12
   14001a5c2:	mov    r8,rdi
   14001a5c5:	jmp    0x14001a60b
   14001a5c7:	mov    rdi,rsi
   14001a5ca:	shl    rdi,0x3
   14001a5ce:	mov    r8,rdi
   14001a5d1:	and    r8,0xfffffffffffffff8
   14001a5d5:	call   QWORD PTR [rip+0x2f015]        # 0x1400495f0
   14001a5db:	mov    rbx,QWORD PTR [rbp+0x8]
   14001a5df:	mov    rcx,r12
   14001a5e2:	lea    rdx,[rdi+rbx*1]
   14001a5e6:	sub    rbx,rdx
   14001a5e9:	add    rbx,r13
   14001a5ec:	and    rbx,0xfffffffffffffff8
   14001a5f0:	mov    r8,rbx
   14001a5f3:	call   QWORD PTR [rip+0x2eff7]        # 0x1400495f0
   14001a5f9:	add    rax,rbx
   14001a5fc:	test   rsi,rsi
   14001a5ff:	je     0x14001a612
   14001a601:	mov    r8,rsi
   14001a604:	mov    rcx,rax
   14001a607:	shl    r8,0x3
   14001a60b:	xor    edx,edx
   14001a60d:	call   0x14002b144
   14001a612:	mov    rcx,QWORD PTR [rbp+0x8]
   14001a616:	test   rcx,rcx
   14001a619:	je     0x14001a621
   14001a61b:	call   QWORD PTR [rip+0x2f057]        # 0x140049678
   14001a621:	add    QWORD PTR [rbp+0x10],rsi
   14001a625:	mov    rbx,QWORD PTR [rsp+0x68]
   14001a62a:	mov    rsi,QWORD PTR [rsp+0x78]
   14001a62f:	mov    QWORD PTR [rbp+0x8],r12
   14001a633:	mov    rbp,QWORD PTR [rsp+0x70]
   14001a638:	add    rsp,0x40
   14001a63c:	pop    r13
   14001a63e:	pop    r12
   14001a640:	pop    rdi
   14001a641:	ret    
   14001a642:	int3   
   14001a643:	int3   
   14001a644:	mov    QWORD PTR [rsp+0x8],rcx
   14001a649:	push   rbx
   14001a64a:	push   rsi
   14001a64b:	push   rdi
   14001a64c:	push   r12
   14001a64e:	push   r13
   14001a650:	push   r14
   14001a652:	push   r15
   14001a654:	sub    rsp,0x100
   14001a65b:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   14001a667:	mov    r15,r9
   14001a66a:	mov    rdi,r8
   14001a66d:	mov    r13,QWORD PTR [rdx+0x10]
   14001a671:	mov    rsi,rcx
   14001a674:	lea    rdx,[rsp+0x40]
   14001a679:	call   0x140019e24
   14001a67e:	sub    r13,QWORD PTR [rax+0x10]
   14001a682:	mov    r12,QWORD PTR [rsi+0x20]
   14001a686:	mov    QWORD PTR [rsp+0x148],r12
   14001a68e:	cmp    rdi,r15
   14001a691:	je     0x14001a98e
   14001a697:	mov    rax,r12
   14001a69a:	shr    rax,1
   14001a69d:	cmp    r13,rax
   14001a6a0:	ja     0x14001a919
   14001a6a6:	xor    ebx,ebx
   14001a6a8:	cmp    rdi,r15
   14001a6ab:	je     0x14001a775
   14001a6b1:	test   BYTE PTR [rsi+0x18],0xf
   14001a6b5:	jne    0x14001a6d1
   14001a6b7:	mov    rax,QWORD PTR [rsi+0x20]
   14001a6bb:	add    rax,0x10
   14001a6bf:	shr    rax,0x4
   14001a6c3:	cmp    QWORD PTR [rsi+0x10],rax
   14001a6c7:	ja     0x14001a6d1
   14001a6c9:	mov    rcx,rsi
   14001a6cc:	call   0x14001a478
   14001a6d1:	mov    r12,QWORD PTR [rsi+0x18]
   14001a6d5:	test   r12,r12
   14001a6d8:	jne    0x14001a6e2
   14001a6da:	mov    r12,QWORD PTR [rsi+0x10]
   14001a6de:	shl    r12,0x4
   14001a6e2:	dec    r12
   14001a6e5:	mov    r14,r12
   14001a6e8:	shr    r14,0x4
   14001a6ec:	mov    rax,QWORD PTR [rsi+0x8]
   14001a6f0:	cmp    QWORD PTR [rax+r14*8],rbx
   14001a6f4:	jne    0x14001a751
   14001a6f6:	mov    ecx,0x10
   14001a6fb:	call   QWORD PTR [rip+0x2ef97]        # 0x140049698
   14001a701:	test   rax,rax
   14001a704:	je     0x14001a710
   14001a706:	mov    rcx,QWORD PTR [rsi+0x8]
   14001a70a:	mov    QWORD PTR [rcx+r14*8],rax
   14001a70e:	jmp    0x14001a751
   14001a710:	mov    QWORD PTR [rsp+0x150],rbx
   14001a718:	lea    rdx,[rsp+0x150]
   14001a720:	lea    rcx,[rsp+0xb0]
   14001a728:	call   QWORD PTR [rip+0x2f1a2]        # 0x1400498d0
   14001a72e:	lea    rax,[rip+0x2faa3]        # 0x14004a1d8
   14001a735:	mov    QWORD PTR [rsp+0xb0],rax
   14001a73d:	lea    rdx,[rip+0x49004]        # 0x140063748
   14001a744:	lea    rcx,[rsp+0xb0]
   14001a74c:	call   0x14002b560
   14001a751:	mov    rax,QWORD PTR [rsi+0x8]
   14001a755:	mov    rcx,r12
   14001a758:	and    ecx,0xf
   14001a75b:	add    rcx,QWORD PTR [rax+r14*8]
   14001a75f:	je     0x14001a765
   14001a761:	mov    al,BYTE PTR [rdi]
   14001a763:	mov    BYTE PTR [rcx],al
   14001a765:	mov    QWORD PTR [rsi+0x18],r12
   14001a769:	inc    QWORD PTR [rsi+0x20]
   14001a76d:	inc    rdi
   14001a770:	jmp    0x14001a6a8
   14001a775:	mov    r14,QWORD PTR [rsi+0x20]
   14001a779:	sub    r14,QWORD PTR [rsp+0x148]
   14001a781:	lea    rdx,[rsp+0x60]
   14001a786:	mov    rcx,rsi
   14001a789:	call   0x140019e24
   14001a78e:	mov    rcx,rax
   14001a791:	mov    r8,r14
   14001a794:	lea    rdx,[rsp+0x78]
   14001a799:	call   0x14001a9a4
   14001a79e:	mov    rdi,rax
   14001a7a1:	lea    rdx,[rsp+0x90]
   14001a7a9:	mov    rcx,rsi
   14001a7ac:	call   0x140019e24
   14001a7b1:	mov    r11,rax
   14001a7b4:	mov    rcx,rbx
   14001a7b7:	mov    rdx,QWORD PTR [rdi]
   14001a7ba:	test   rdx,rdx
   14001a7bd:	je     0x14001a7ca
   14001a7bf:	mov    rdx,QWORD PTR [rdx]
   14001a7c2:	test   rdx,rdx
   14001a7c5:	je     0x14001a7ca
   14001a7c7:	mov    rcx,QWORD PTR [rdx]
   14001a7ca:	mov    rdx,QWORD PTR [rdi+0x10]
   14001a7ce:	test   rcx,rcx
   14001a7d1:	mov    rax,rbx
   14001a7d4:	je     0x14001a7d9
   14001a7d6:	mov    rax,QWORD PTR [rcx]
   14001a7d9:	mov    QWORD PTR [rsp+0x20],rax
   14001a7de:	mov    QWORD PTR [rsp+0x28],rdx
   14001a7e3:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001a7e8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001a7ee:	mov    rax,rbx
   14001a7f1:	mov    rcx,QWORD PTR [r11]
   14001a7f4:	test   rcx,rcx
   14001a7f7:	je     0x14001a804
   14001a7f9:	mov    rcx,QWORD PTR [rcx]
   14001a7fc:	test   rcx,rcx
   14001a7ff:	je     0x14001a804
   14001a801:	mov    rax,QWORD PTR [rcx]
   14001a804:	mov    rcx,QWORD PTR [r11+0x10]
   14001a808:	test   rax,rax
   14001a80b:	je     0x14001a810
   14001a80d:	mov    rbx,QWORD PTR [rax]
   14001a810:	mov    QWORD PTR [rsp+0x20],rbx
   14001a815:	mov    QWORD PTR [rsp+0x28],rcx
   14001a81a:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001a81f:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001a825:	cmp    rcx,rdx
   14001a828:	je     0x14001a89e
   14001a82a:	mov    r10,QWORD PTR [rsp+0x28]
   14001a82f:	mov    r12,QWORD PTR [rsp+0x20]
   14001a834:	mov    r8,QWORD PTR [rsp+0x48]
   14001a839:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a83e:	dec    r8
   14001a841:	cmp    r10,r8
   14001a844:	je     0x14001a89e
   14001a846:	mov    r9,r8
   14001a849:	shr    r9,0x4
   14001a84d:	mov    r11,r8
   14001a850:	and    r11d,0xf
   14001a854:	cmp    QWORD PTR [rdi+0x10],r9
   14001a858:	ja     0x14001a85e
   14001a85a:	sub    r9,QWORD PTR [rdi+0x10]
   14001a85e:	mov    rdx,r10
   14001a861:	shr    rdx,0x4
   14001a865:	mov    rbx,r10
   14001a868:	and    ebx,0xf
   14001a86b:	cmp    QWORD PTR [r12+0x10],rdx
   14001a870:	ja     0x14001a877
   14001a872:	sub    rdx,QWORD PTR [r12+0x10]
   14001a877:	mov    rax,QWORD PTR [rdi+0x8]
   14001a87b:	mov    r9,QWORD PTR [rax+r9*8]
   14001a87f:	mov    rax,QWORD PTR [r12+0x8]
   14001a884:	mov    rdx,QWORD PTR [rax+rdx*8]
   14001a888:	mov    cl,BYTE PTR [rbx+rdx*1]
   14001a88b:	mov    al,BYTE PTR [r11+r9*1]
   14001a88f:	mov    BYTE PTR [rbx+rdx*1],al
   14001a892:	mov    BYTE PTR [r11+r9*1],cl
   14001a896:	inc    r10
   14001a899:	cmp    r10,r8
   14001a89c:	jne    0x14001a83e
   14001a89e:	lea    rdx,[rsp+0x90]
   14001a8a6:	mov    rcx,rsi
   14001a8a9:	call   0x140019e24
   14001a8ae:	mov    rcx,rax
   14001a8b1:	mov    r8,r14
   14001a8b4:	lea    rdx,[rsp+0x78]
   14001a8b9:	call   0x14001a9a4
   14001a8be:	mov    rcx,rax
   14001a8c1:	mov    r8,r13
   14001a8c4:	lea    rdx,[rsp+0x60]
   14001a8c9:	call   0x14001a9a4
   14001a8ce:	mov    rdi,rax
   14001a8d1:	lea    rdx,[rsp+0x40]
   14001a8d6:	mov    rcx,rsi
   14001a8d9:	call   0x140019e24
   14001a8de:	mov    rcx,rax
   14001a8e1:	mov    r8,r14
   14001a8e4:	lea    rdx,[rsp+0x20]
   14001a8e9:	call   0x14001a9a4
   14001a8ee:	mov    rbx,rax
   14001a8f1:	lea    rdx,[rsp+0xc8]
   14001a8f9:	mov    rcx,rsi
   14001a8fc:	call   0x140019e24
   14001a901:	lea    rcx,[rsp+0xe0]
   14001a909:	mov    rdx,rax
   14001a90c:	mov    r8,rbx
   14001a90f:	mov    r9,rdi
   14001a912:	call   0x14001a9e8
   14001a917:	jmp    0x14001a98e
   14001a919:	cmp    rdi,r15
   14001a91c:	je     0x14001a92e
   14001a91e:	mov    rdx,rdi
   14001a921:	mov    rcx,rsi
   14001a924:	call   0x14001a3a0
   14001a929:	inc    rdi
   14001a92c:	jmp    0x14001a919
   14001a92e:	lea    rdx,[rsp+0xe0]
   14001a936:	mov    rcx,rsi
   14001a939:	call   0x140019e3c
   14001a93e:	mov    rdi,rax
   14001a941:	lea    rdx,[rsp+0xc8]
   14001a949:	mov    rcx,rsi
   14001a94c:	call   0x140019e24
   14001a951:	mov    rcx,rax
   14001a954:	mov    r8,r12
   14001a957:	lea    rdx,[rsp+0x90]
   14001a95f:	call   0x14001a9a4
   14001a964:	mov    rbx,rax
   14001a967:	lea    rdx,[rsp+0x78]
   14001a96c:	mov    rcx,rsi
   14001a96f:	call   0x140019e24
   14001a974:	mov    rcx,rax
   14001a977:	mov    r8,r13
   14001a97a:	lea    rdx,[rsp+0x60]
   14001a97f:	call   0x14001a9a4
   14001a984:	lea    rcx,[rsp+0x40]
   14001a989:	jmp    0x14001a909
   14001a98e:	add    rsp,0x100
   14001a995:	pop    r15
   14001a997:	pop    r14
   14001a999:	pop    r13
   14001a99b:	pop    r12
   14001a99d:	pop    rdi
   14001a99e:	pop    rsi
   14001a99f:	pop    rbx
   14001a9a0:	ret    
   14001a9a1:	int3   
   14001a9a2:	int3   
   14001a9a3:	int3   
   14001a9a4:	mov    rax,QWORD PTR [rcx]
   14001a9a7:	xor    r9d,r9d
   14001a9aa:	test   rax,rax
   14001a9ad:	je     0x14001a9ba
   14001a9af:	mov    rax,QWORD PTR [rax]
   14001a9b2:	test   rax,rax
   14001a9b5:	je     0x14001a9ba
   14001a9b7:	mov    r9,QWORD PTR [rax]
   14001a9ba:	mov    rax,QWORD PTR [rcx+0x10]
   14001a9be:	and    QWORD PTR [rdx],0x0
   14001a9c2:	and    QWORD PTR [rdx+0x8],0x0
   14001a9c7:	lea    rcx,[r8+rax*1]
   14001a9cb:	test   r9,r9
   14001a9ce:	je     0x14001a9de
   14001a9d0:	mov    rax,QWORD PTR [r9]
   14001a9d3:	test   rax,rax
   14001a9d6:	je     0x14001a9de
   14001a9d8:	mov    rax,QWORD PTR [rax]
   14001a9db:	mov    QWORD PTR [rdx],rax
   14001a9de:	mov    QWORD PTR [rdx+0x10],rcx
   14001a9e2:	mov    rax,rdx
   14001a9e5:	ret    
   14001a9e6:	int3   
   14001a9e7:	int3   
   14001a9e8:	mov    rax,rsp
   14001a9eb:	mov    QWORD PTR [rax+0x8],rbx
   14001a9ef:	mov    QWORD PTR [rax+0x10],rsi
   14001a9f3:	mov    QWORD PTR [rax+0x18],rdi
   14001a9f7:	mov    QWORD PTR [rax+0x20],r12
   14001a9fb:	push   rbp
   14001a9fc:	mov    rbp,rsp
   14001a9ff:	sub    rsp,0x50
   14001aa03:	mov    r12,r8
   14001aa06:	mov    r8,QWORD PTR [rdx+0x10]
   14001aa0a:	mov    rsi,r9
   14001aa0d:	mov    r10,QWORD PTR [r12+0x10]
   14001aa12:	mov    rdi,rdx
   14001aa15:	mov    rbx,rcx
   14001aa18:	cmp    r8,r10
   14001aa1b:	je     0x14001aad7
   14001aa21:	mov    rdx,QWORD PTR [r9+0x10]
   14001aa25:	cmp    r10,rdx
   14001aa28:	je     0x14001aad7
   14001aa2e:	mov    rcx,QWORD PTR [r9]
   14001aa31:	xor    eax,eax
   14001aa33:	test   rcx,rcx
   14001aa36:	je     0x14001aa43
   14001aa38:	mov    rcx,QWORD PTR [rcx]
   14001aa3b:	test   rcx,rcx
   14001aa3e:	je     0x14001aa43
   14001aa40:	mov    rax,QWORD PTR [rcx]
   14001aa43:	test   rax,rax
   14001aa46:	je     0x14001aa4b
   14001aa48:	mov    rax,QWORD PTR [rax]
   14001aa4b:	mov    rcx,QWORD PTR [r12]
   14001aa4f:	mov    QWORD PTR [rbp-0x30],rax
   14001aa53:	mov    QWORD PTR [rbp-0x28],rdx
   14001aa57:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001aa5b:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   14001aa60:	xor    eax,eax
   14001aa62:	test   rcx,rcx
   14001aa65:	je     0x14001aa72
   14001aa67:	mov    rcx,QWORD PTR [rcx]
   14001aa6a:	test   rcx,rcx
   14001aa6d:	je     0x14001aa72
   14001aa6f:	mov    rax,QWORD PTR [rcx]
   14001aa72:	test   rax,rax
   14001aa75:	je     0x14001aa7a
   14001aa77:	mov    rax,QWORD PTR [rax]
   14001aa7a:	mov    rcx,QWORD PTR [rdi]
   14001aa7d:	mov    QWORD PTR [rbp-0x30],rax
   14001aa81:	mov    QWORD PTR [rbp-0x28],r10
   14001aa85:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001aa89:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001aa8e:	xor    eax,eax
   14001aa90:	test   rcx,rcx
   14001aa93:	je     0x14001aaa0
   14001aa95:	mov    rcx,QWORD PTR [rcx]
   14001aa98:	test   rcx,rcx
   14001aa9b:	je     0x14001aaa0
   14001aa9d:	mov    rax,QWORD PTR [rcx]
   14001aaa0:	test   rax,rax
   14001aaa3:	je     0x14001aaa8
   14001aaa5:	mov    rax,QWORD PTR [rax]
   14001aaa8:	mov    QWORD PTR [rbp-0x28],r8
   14001aaac:	mov    QWORD PTR [rbp-0x30],rax
   14001aab0:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001aab4:	lea    r8,[rbp-0x20]
   14001aab8:	lea    rdx,[rbp-0x10]
   14001aabc:	lea    rcx,[rbp-0x30]
   14001aac0:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001aac5:	call   0x14001ab1c
   14001aaca:	mov    r11,QWORD PTR [rsi+0x10]
   14001aace:	sub    r11,QWORD PTR [r12+0x10]
   14001aad3:	add    QWORD PTR [rdi+0x10],r11
   14001aad7:	mov    rax,QWORD PTR [rdi]
   14001aada:	and    QWORD PTR [rbx],0x0
   14001aade:	and    QWORD PTR [rbx+0x8],0x0
   14001aae3:	test   rax,rax
   14001aae6:	je     0x14001aaf6
   14001aae8:	mov    rax,QWORD PTR [rax]
   14001aaeb:	test   rax,rax
   14001aaee:	je     0x14001aaf6
   14001aaf0:	mov    rax,QWORD PTR [rax]
   14001aaf3:	mov    QWORD PTR [rbx],rax
   14001aaf6:	mov    rax,QWORD PTR [rdi+0x10]
   14001aafa:	mov    rsi,QWORD PTR [rsp+0x68]
   14001aaff:	mov    r12,QWORD PTR [rsp+0x78]
   14001ab04:	mov    rdi,QWORD PTR [rsp+0x70]
   14001ab09:	mov    QWORD PTR [rbx+0x10],rax
   14001ab0d:	mov    rax,rbx
   14001ab10:	mov    rbx,QWORD PTR [rsp+0x60]
   14001ab15:	add    rsp,0x50
   14001ab19:	pop    rbp
   14001ab1a:	ret    
   14001ab1b:	int3   
   14001ab1c:	mov    rax,rsp
   14001ab1f:	mov    QWORD PTR [rax+0x8],rbx
   14001ab23:	mov    QWORD PTR [rax+0x10],rsi
   14001ab27:	mov    QWORD PTR [rax+0x18],rdi
   14001ab2b:	mov    QWORD PTR [rax+0x20],r12
   14001ab2f:	push   rbp
   14001ab30:	push   r13
   14001ab32:	push   r14
   14001ab34:	lea    rbp,[rax-0x5f]
   14001ab38:	sub    rsp,0xa0
   14001ab3f:	movups xmm0,XMMWORD PTR [r8]
   14001ab43:	movups xmm1,XMMWORD PTR [rdx]
   14001ab46:	mov    r14,rcx
   14001ab49:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   14001ab4e:	mov    rdi,QWORD PTR [rbp-0x41]
   14001ab52:	movdqu XMMWORD PTR [rbp-0x59],xmm1
   14001ab57:	mov    r9,QWORD PTR [rbp-0x51]
   14001ab5b:	movups xmm0,XMMWORD PTR [rcx]
   14001ab5e:	mov    rcx,rdi
   14001ab61:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   14001ab66:	mov    r11,QWORD PTR [rbp-0x1]
   14001ab6a:	sub    r9,r11
   14001ab6d:	sub    rcx,r11
   14001ab70:	mov    r10,rcx
   14001ab73:	mov    r8,r9
   14001ab76:	test   r9,r9
   14001ab79:	je     0x14001ab8e
   14001ab7b:	mov    rax,r10
   14001ab7e:	mov    r10,r8
   14001ab81:	cqo    
   14001ab83:	idiv   r8
   14001ab86:	mov    r8,rdx
   14001ab89:	test   rdx,rdx
   14001ab8c:	jne    0x14001ab7b
   14001ab8e:	cmp    r10,rcx
   14001ab91:	jge    0x14001acb3
   14001ab97:	jmp    0x14001acaa
   14001ab9c:	movups xmm0,XMMWORD PTR [r14]
   14001aba0:	lea    rsi,[r10+r11*1]
   14001aba4:	lea    rax,[r9+rsi*1]
   14001aba8:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   14001abad:	mov    QWORD PTR [rbp+0xf],rsi
   14001abb1:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   14001abb5:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   14001abba:	cmp    rax,rdi
   14001abbd:	jne    0x14001abc5
   14001abbf:	lea    rax,[rbp-0x9]
   14001abc3:	jmp    0x14001abdb
   14001abc5:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   14001abca:	mov    QWORD PTR [rbp-0x11],rax
   14001abce:	movaps xmm0,XMMWORD PTR [rbp-0x19]
   14001abd2:	lea    rax,[rbp+0x17]
   14001abd6:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   14001abdb:	movups xmm0,XMMWORD PTR [rax]
   14001abde:	movaps XMMWORD PTR [rbp-0x39],xmm0
   14001abe2:	mov    rbx,QWORD PTR [rbp-0x31]
   14001abe6:	mov    rax,QWORD PTR [rbp-0x39]
   14001abea:	mov    r8,rbx
   14001abed:	mov    r12,rbx
   14001abf0:	shr    r8,0x4
   14001abf4:	and    r12d,0xf
   14001abf8:	cmp    QWORD PTR [rax+0x10],r8
   14001abfc:	ja     0x14001ac02
   14001abfe:	sub    r8,QWORD PTR [rax+0x10]
   14001ac02:	mov    r13,QWORD PTR [rbp-0x21]
   14001ac06:	mov    rcx,QWORD PTR [rbp-0x29]
   14001ac0a:	mov    rdx,r13
   14001ac0d:	and    r13d,0xf
   14001ac11:	shr    rdx,0x4
   14001ac15:	cmp    QWORD PTR [rcx+0x10],rdx
   14001ac19:	ja     0x14001ac1f
   14001ac1b:	sub    rdx,QWORD PTR [rcx+0x10]
   14001ac1f:	mov    rax,QWORD PTR [rax+0x8]
   14001ac23:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   14001ac28:	mov    r8,QWORD PTR [rax+r8*8]
   14001ac2c:	mov    rax,QWORD PTR [rcx+0x8]
   14001ac30:	mov    rdx,QWORD PTR [rax+rdx*8]
   14001ac34:	mov    al,BYTE PTR [r12+r8*1]
   14001ac38:	mov    cl,BYTE PTR [r13+rdx*1+0x0]
   14001ac3d:	mov    BYTE PTR [r13+rdx*1+0x0],al
   14001ac42:	mov    BYTE PTR [r12+r8*1],cl
   14001ac46:	mov    rcx,rdi
   14001ac49:	sub    rcx,rbx
   14001ac4c:	mov    rax,rcx
   14001ac4f:	cmp    r9,rax
   14001ac52:	jge    0x14001ac70
   14001ac54:	lea    rax,[rbx+r9*1]
   14001ac58:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   14001ac5d:	mov    QWORD PTR [rbp-0x41],rax
   14001ac61:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   14001ac65:	lea    rax,[rbp+0x27]
   14001ac69:	movdqa XMMWORD PTR [rbp+0x27],xmm0
   14001ac6e:	jmp    0x14001ac93
   14001ac70:	movups xmm0,XMMWORD PTR [r14]
   14001ac74:	mov    rax,r9
   14001ac77:	sub    rax,rcx
   14001ac7a:	add    rax,r11
   14001ac7d:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   14001ac82:	mov    QWORD PTR [rbp-0x51],rax
   14001ac86:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14001ac8a:	lea    rax,[rbp+0x37]
   14001ac8e:	movdqa XMMWORD PTR [rbp+0x37],xmm0
   14001ac93:	movups xmm0,XMMWORD PTR [rax]
   14001ac96:	movaps XMMWORD PTR [rbp-0x39],xmm0
   14001ac9a:	mov    rbx,QWORD PTR [rbp-0x31]
   14001ac9e:	cmp    rbx,rsi
   14001aca1:	jne    0x14001abe6
   14001aca7:	dec    r10
   14001acaa:	test   r10,r10
   14001acad:	jg     0x14001ab9c
   14001acb3:	lea    r11,[rsp+0xa0]
   14001acbb:	mov    rbx,QWORD PTR [r11+0x20]
   14001acbf:	mov    rsi,QWORD PTR [r11+0x28]
   14001acc3:	mov    rdi,QWORD PTR [r11+0x30]
   14001acc7:	mov    r12,QWORD PTR [r11+0x38]
   14001accb:	mov    rsp,r11
   14001acce:	pop    r14
   14001acd0:	pop    r13
   14001acd2:	pop    rbp
   14001acd3:	ret    
   14001acd4:	mov    rax,rsp
   14001acd7:	mov    QWORD PTR [rax+0x8],rcx
   14001acdb:	push   r12
   14001acdd:	sub    rsp,0x30
   14001ace1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001acea:	mov    QWORD PTR [rax+0x10],rbx
   14001acee:	mov    QWORD PTR [rax+0x18],rsi
   14001acf2:	mov    QWORD PTR [rax+0x20],rdi
   14001acf6:	mov    r12,r8
   14001acf9:	mov    rdi,rdx
   14001acfc:	mov    rbx,rcx
   14001acff:	mov    rdx,QWORD PTR [r8+0x10]
   14001ad03:	sub    rdx,QWORD PTR [rdi+0x10]
   14001ad07:	mov    rsi,QWORD PTR [rcx+0x10]
   14001ad0b:	cmp    rsi,rdx
   14001ad0e:	ja     0x14001ad39
   14001ad10:	cmp    QWORD PTR [rcx+0x18],rdx
   14001ad14:	je     0x14001ad39
   14001ad16:	mov    r8b,0x1
   14001ad19:	call   0x140005324
   14001ad1e:	test   al,al
   14001ad20:	je     0x14001ad39
   14001ad22:	mov    QWORD PTR [rbx+0x10],rsi
   14001ad26:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ad2b:	jb     0x14001ad32
   14001ad2d:	mov    rax,QWORD PTR [rbx]
   14001ad30:	jmp    0x14001ad35
   14001ad32:	mov    rax,rbx
   14001ad35:	mov    BYTE PTR [rax+rsi*1],0x0
   14001ad39:	mov    rdx,QWORD PTR [rdi+0x10]
   14001ad3d:	cmp    rdx,QWORD PTR [r12+0x10]
   14001ad42:	je     0x14001ad82
   14001ad44:	mov    rax,QWORD PTR [rdi]
   14001ad47:	test   rax,rax
   14001ad4a:	je     0x14001ad4f
   14001ad4c:	mov    rax,QWORD PTR [rax]
   14001ad4f:	mov    rcx,rdx
   14001ad52:	shr    rcx,0x4
   14001ad56:	and    edx,0xf
   14001ad59:	cmp    QWORD PTR [rax+0x10],rcx
   14001ad5d:	ja     0x14001ad63
   14001ad5f:	sub    rcx,QWORD PTR [rax+0x10]
   14001ad63:	mov    rax,QWORD PTR [rax+0x8]
   14001ad67:	mov    rcx,QWORD PTR [rax+rcx*8]
   14001ad6b:	mov    r8b,BYTE PTR [rcx+rdx*1]
   14001ad6f:	mov    edx,0x1
   14001ad74:	mov    rcx,rbx
   14001ad77:	call   0x1400047bc
   14001ad7c:	inc    QWORD PTR [rdi+0x10]
   14001ad80:	jmp    0x14001ad39
   14001ad82:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ad87:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ad8c:	mov    rdi,QWORD PTR [rsp+0x58]
   14001ad91:	add    rsp,0x30
   14001ad95:	pop    r12
   14001ad97:	ret    
   14001ad98:	mov    rax,rsp
   14001ad9b:	push   rbp
   14001ad9c:	push   rdi
   14001ad9d:	push   r12
   14001ad9f:	lea    rbp,[rax-0x5f]
   14001ada3:	sub    rsp,0xb0
   14001adaa:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14001adb2:	mov    QWORD PTR [rax+0x10],rbx
   14001adb6:	mov    QWORD PTR [rax+0x18],rsi
   14001adba:	mov    rax,QWORD PTR [rip+0x4d42f]        # 0x1400681f0
   14001adc1:	xor    rax,rsp
   14001adc4:	mov    QWORD PTR [rbp+0x3f],rax
   14001adc8:	mov    rbx,rcx
   14001adcb:	xor    r12d,r12d
   14001adce:	mov    DWORD PTR [rbp-0x49],r12d
   14001add2:	lea    rcx,[rbp+0x17]
   14001add6:	call   0x14001af88
   14001addb:	nop
   14001addc:	cmp    QWORD PTR [rbp+0x27],r12
   14001ade0:	jne    0x14001ae18
   14001ade2:	lea    edi,[r12+0x7]
   14001ade7:	mov    QWORD PTR [rbx+0x18],rdi
   14001adeb:	mov    QWORD PTR [rbx+0x10],r12
   14001adef:	mov    WORD PTR [rbx],r12w
   14001adf3:	lea    rcx,[rip+0x35cf6]        # 0x140050af0
   14001adfa:	call   QWORD PTR [rip+0x2e8b0]        # 0x1400496b0
   14001ae00:	mov    r8,rax
   14001ae03:	lea    rdx,[rip+0x35ce6]        # 0x140050af0
   14001ae0a:	mov    rcx,rbx
   14001ae0d:	call   0x1400096cc
   14001ae12:	nop
   14001ae13:	jmp    0x14001af4f
   14001ae18:	lea    rdx,[rbp+0x17]
   14001ae1c:	lea    rcx,[rbp-0x11]
   14001ae20:	call   0x14000a994
   14001ae25:	nop
   14001ae26:	lea    r8,[rip+0x366ab]        # 0x1400514d8
   14001ae2d:	mov    rdx,rax
   14001ae30:	lea    rcx,[rbp-0x39]
   14001ae34:	call   0x140014560
   14001ae39:	nop
   14001ae3a:	mov    rdx,rax
   14001ae3d:	lea    rcx,[rbp+0x17]
   14001ae41:	call   0x140009880
   14001ae46:	nop
   14001ae47:	cmp    QWORD PTR [rbp-0x21],0x8
   14001ae4c:	jb     0x14001ae58
   14001ae4e:	mov    rcx,QWORD PTR [rbp-0x39]
   14001ae52:	call   QWORD PTR [rip+0x2e820]        # 0x140049678
   14001ae58:	mov    edi,0x7
   14001ae5d:	mov    QWORD PTR [rbp-0x21],rdi
   14001ae61:	mov    QWORD PTR [rbp-0x29],r12
   14001ae65:	mov    WORD PTR [rbp-0x39],r12w
   14001ae6a:	cmp    QWORD PTR [rbp+0x7],0x8
   14001ae6f:	jb     0x14001ae7b
   14001ae71:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ae75:	call   QWORD PTR [rip+0x2e7fd]        # 0x140049678
   14001ae7b:	lea    rcx,[rbp+0x17]
   14001ae7f:	call   0x14000a5cc
   14001ae84:	test   al,al
   14001ae86:	je     0x14001aeb4
   14001ae88:	mov    QWORD PTR [rbp-0x21],rdi
   14001ae8c:	mov    QWORD PTR [rbp-0x29],r12
   14001ae90:	mov    WORD PTR [rbp-0x39],r12w
   14001ae95:	or     r9,0xffffffffffffffff
   14001ae99:	xor    r8d,r8d
   14001ae9c:	lea    rdx,[rbp+0x17]
   14001aea0:	lea    rcx,[rbp-0x39]
   14001aea4:	call   0x140009914
   14001aea9:	lea    rdx,[rbp-0x39]
   14001aead:	mov    esi,0x2
   14001aeb2:	jmp    0x14001aeea
   14001aeb4:	mov    QWORD PTR [rbp+0x7],rdi
   14001aeb8:	mov    QWORD PTR [rbp-0x1],r12
   14001aebc:	mov    WORD PTR [rbp-0x11],r12w
   14001aec1:	lea    rcx,[rip+0x35c28]        # 0x140050af0
   14001aec8:	call   QWORD PTR [rip+0x2e7e2]        # 0x1400496b0
   14001aece:	mov    r8,rax
   14001aed1:	lea    rdx,[rip+0x35c18]        # 0x140050af0
   14001aed8:	lea    rcx,[rbp-0x11]
   14001aedc:	call   0x1400096cc
   14001aee1:	lea    rdx,[rbp-0x11]
   14001aee5:	mov    esi,0x4
   14001aeea:	mov    DWORD PTR [rbp-0x49],esi
   14001aeed:	mov    QWORD PTR [rbx+0x18],rdi
   14001aef1:	mov    QWORD PTR [rbx+0x10],r12
   14001aef5:	mov    WORD PTR [rbx],r12w
   14001aef9:	mov    rcx,rbx
   14001aefc:	call   0x140009880
   14001af01:	or     esi,0x1
   14001af04:	test   sil,0x4
   14001af08:	je     0x14001af2b
   14001af0a:	and    esi,0xfffffffb
   14001af0d:	cmp    QWORD PTR [rbp+0x7],0x8
   14001af12:	jb     0x14001af1e
   14001af14:	mov    rcx,QWORD PTR [rbp-0x11]
   14001af18:	call   QWORD PTR [rip+0x2e75a]        # 0x140049678
   14001af1e:	mov    QWORD PTR [rbp+0x7],rdi
   14001af22:	mov    QWORD PTR [rbp-0x1],r12
   14001af26:	mov    WORD PTR [rbp-0x11],r12w
   14001af2b:	test   sil,0x2
   14001af2f:	je     0x14001af4f
   14001af31:	cmp    QWORD PTR [rbp-0x21],0x8
   14001af36:	jb     0x14001af42
   14001af38:	mov    rcx,QWORD PTR [rbp-0x39]
   14001af3c:	call   QWORD PTR [rip+0x2e736]        # 0x140049678
   14001af42:	mov    QWORD PTR [rbp-0x21],rdi
   14001af46:	mov    QWORD PTR [rbp-0x29],r12
   14001af4a:	mov    WORD PTR [rbp-0x39],r12w
   14001af4f:	cmp    QWORD PTR [rbp+0x2f],0x8
   14001af54:	jb     0x14001af60
   14001af56:	mov    rcx,QWORD PTR [rbp+0x17]
   14001af5a:	call   QWORD PTR [rip+0x2e718]        # 0x140049678
   14001af60:	mov    rax,rbx
   14001af63:	mov    rcx,QWORD PTR [rbp+0x3f]
   14001af67:	xor    rcx,rsp
   14001af6a:	call   0x14002b100
   14001af6f:	lea    r11,[rsp+0xb0]
   14001af77:	mov    rbx,QWORD PTR [r11+0x28]
   14001af7b:	mov    rsi,QWORD PTR [r11+0x30]
   14001af7f:	mov    rsp,r11
   14001af82:	pop    r12
   14001af84:	pop    rdi
   14001af85:	pop    rbp
   14001af86:	ret    
   14001af87:	int3   
   14001af88:	mov    rax,rsp
   14001af8b:	push   rbp
   14001af8c:	push   rdi
   14001af8d:	push   r12
   14001af8f:	lea    rbp,[rax-0x5f]
   14001af93:	sub    rsp,0xb0
   14001af9a:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14001afa2:	mov    QWORD PTR [rax+0x10],rbx
   14001afa6:	mov    QWORD PTR [rax+0x18],rsi
   14001afaa:	mov    rax,QWORD PTR [rip+0x4d23f]        # 0x1400681f0
   14001afb1:	xor    rax,rsp
   14001afb4:	mov    QWORD PTR [rbp+0x3f],rax
   14001afb8:	mov    rbx,rcx
   14001afbb:	xor    r12d,r12d
   14001afbe:	mov    DWORD PTR [rbp-0x49],r12d
   14001afc2:	lea    rcx,[rbp+0x17]
   14001afc6:	call   0x14001b730
   14001afcb:	nop
   14001afcc:	cmp    QWORD PTR [rbp+0x27],r12
   14001afd0:	jne    0x14001b008
   14001afd2:	lea    edi,[r12+0x7]
   14001afd7:	mov    QWORD PTR [rbx+0x18],rdi
   14001afdb:	mov    QWORD PTR [rbx+0x10],r12
   14001afdf:	mov    WORD PTR [rbx],r12w
   14001afe3:	lea    rcx,[rip+0x35b06]        # 0x140050af0
   14001afea:	call   QWORD PTR [rip+0x2e6c0]        # 0x1400496b0
   14001aff0:	mov    r8,rax
   14001aff3:	lea    rdx,[rip+0x35af6]        # 0x140050af0
   14001affa:	mov    rcx,rbx
   14001affd:	call   0x1400096cc
   14001b002:	nop
   14001b003:	jmp    0x14001b13f
   14001b008:	lea    rdx,[rbp+0x17]
   14001b00c:	lea    rcx,[rbp-0x11]
   14001b010:	call   0x14000a994
   14001b015:	nop
   14001b016:	lea    r8,[rip+0x364cb]        # 0x1400514e8
   14001b01d:	mov    rdx,rax
   14001b020:	lea    rcx,[rbp-0x39]
   14001b024:	call   0x140014560
   14001b029:	nop
   14001b02a:	mov    rdx,rax
   14001b02d:	lea    rcx,[rbp+0x17]
   14001b031:	call   0x140009880
   14001b036:	nop
   14001b037:	cmp    QWORD PTR [rbp-0x21],0x8
   14001b03c:	jb     0x14001b048
   14001b03e:	mov    rcx,QWORD PTR [rbp-0x39]
   14001b042:	call   QWORD PTR [rip+0x2e630]        # 0x140049678
   14001b048:	mov    edi,0x7
   14001b04d:	mov    QWORD PTR [rbp-0x21],rdi
   14001b051:	mov    QWORD PTR [rbp-0x29],r12
   14001b055:	mov    WORD PTR [rbp-0x39],r12w
   14001b05a:	cmp    QWORD PTR [rbp+0x7],0x8
   14001b05f:	jb     0x14001b06b
   14001b061:	mov    rcx,QWORD PTR [rbp-0x11]
   14001b065:	call   QWORD PTR [rip+0x2e60d]        # 0x140049678
   14001b06b:	lea    rcx,[rbp+0x17]
   14001b06f:	call   0x14000a5cc
   14001b074:	test   al,al
   14001b076:	je     0x14001b0a4
   14001b078:	mov    QWORD PTR [rbp-0x21],rdi
   14001b07c:	mov    QWORD PTR [rbp-0x29],r12
   14001b080:	mov    WORD PTR [rbp-0x39],r12w
   14001b085:	or     r9,0xffffffffffffffff
   14001b089:	xor    r8d,r8d
   14001b08c:	lea    rdx,[rbp+0x17]
   14001b090:	lea    rcx,[rbp-0x39]
   14001b094:	call   0x140009914
   14001b099:	lea    rdx,[rbp-0x39]
   14001b09d:	mov    esi,0x2
   14001b0a2:	jmp    0x14001b0da
   14001b0a4:	mov    QWORD PTR [rbp+0x7],rdi
   14001b0a8:	mov    QWORD PTR [rbp-0x1],r12
   14001b0ac:	mov    WORD PTR [rbp-0x11],r12w
   14001b0b1:	lea    rcx,[rip+0x35a38]        # 0x140050af0
   14001b0b8:	call   QWORD PTR [rip+0x2e5f2]        # 0x1400496b0
   14001b0be:	mov    r8,rax
   14001b0c1:	lea    rdx,[rip+0x35a28]        # 0x140050af0
   14001b0c8:	lea    rcx,[rbp-0x11]
   14001b0cc:	call   0x1400096cc
   14001b0d1:	lea    rdx,[rbp-0x11]
   14001b0d5:	mov    esi,0x4
   14001b0da:	mov    DWORD PTR [rbp-0x49],esi
   14001b0dd:	mov    QWORD PTR [rbx+0x18],rdi
   14001b0e1:	mov    QWORD PTR [rbx+0x10],r12
   14001b0e5:	mov    WORD PTR [rbx],r12w
   14001b0e9:	mov    rcx,rbx
   14001b0ec:	call   0x140009880
   14001b0f1:	or     esi,0x1
   14001b0f4:	test   sil,0x4
   14001b0f8:	je     0x14001b11b
   14001b0fa:	and    esi,0xfffffffb
   14001b0fd:	cmp    QWORD PTR [rbp+0x7],0x8
   14001b102:	jb     0x14001b10e
   14001b104:	mov    rcx,QWORD PTR [rbp-0x11]
   14001b108:	call   QWORD PTR [rip+0x2e56a]        # 0x140049678
   14001b10e:	mov    QWORD PTR [rbp+0x7],rdi
   14001b112:	mov    QWORD PTR [rbp-0x1],r12
   14001b116:	mov    WORD PTR [rbp-0x11],r12w
   14001b11b:	test   sil,0x2
   14001b11f:	je     0x14001b13f
   14001b121:	cmp    QWORD PTR [rbp-0x21],0x8
   14001b126:	jb     0x14001b132
   14001b128:	mov    rcx,QWORD PTR [rbp-0x39]
   14001b12c:	call   QWORD PTR [rip+0x2e546]        # 0x140049678
   14001b132:	mov    QWORD PTR [rbp-0x21],rdi
   14001b136:	mov    QWORD PTR [rbp-0x29],r12
   14001b13a:	mov    WORD PTR [rbp-0x39],r12w
   14001b13f:	cmp    QWORD PTR [rbp+0x2f],0x8
   14001b144:	jb     0x14001b150
   14001b146:	mov    rcx,QWORD PTR [rbp+0x17]
   14001b14a:	call   QWORD PTR [rip+0x2e528]        # 0x140049678
   14001b150:	mov    rax,rbx
   14001b153:	mov    rcx,QWORD PTR [rbp+0x3f]
   14001b157:	xor    rcx,rsp
   14001b15a:	call   0x14002b100
   14001b15f:	lea    r11,[rsp+0xb0]
   14001b167:	mov    rbx,QWORD PTR [r11+0x28]
   14001b16b:	mov    rsi,QWORD PTR [r11+0x30]
   14001b16f:	mov    rsp,r11
   14001b172:	pop    r12
   14001b174:	pop    rdi
   14001b175:	pop    rbp
   14001b176:	ret    
   14001b177:	int3   
   14001b178:	mov    rax,rsp
   14001b17b:	push   rbp
   14001b17c:	lea    rbp,[rax-0x5f]
   14001b180:	sub    rsp,0x90
   14001b187:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   14001b18f:	mov    QWORD PTR [rax+0x10],rbx
   14001b193:	mov    QWORD PTR [rax+0x18],rdi
   14001b197:	mov    rax,QWORD PTR [rip+0x4d052]        # 0x1400681f0
   14001b19e:	xor    rax,rsp
   14001b1a1:	mov    QWORD PTR [rbp+0x47],rax
   14001b1a5:	mov    rbx,rcx
   14001b1a8:	xor    edi,edi
   14001b1aa:	mov    DWORD PTR [rbp-0x19],edi
   14001b1ad:	lea    rcx,[rbp-0x9]
   14001b1b1:	call   0x14001b44c
   14001b1b6:	nop
   14001b1b7:	cmp    QWORD PTR [rbp+0x7],rdi
   14001b1bb:	jne    0x14001b1ee
   14001b1bd:	mov    QWORD PTR [rbx+0x18],0x7
   14001b1c5:	mov    QWORD PTR [rbx+0x10],rdi
   14001b1c9:	mov    WORD PTR [rbx],di
   14001b1cc:	lea    rcx,[rip+0x3591d]        # 0x140050af0
   14001b1d3:	call   QWORD PTR [rip+0x2e4d7]        # 0x1400496b0
   14001b1d9:	mov    r8,rax
   14001b1dc:	lea    rdx,[rip+0x3590d]        # 0x140050af0
   14001b1e3:	mov    rcx,rbx
   14001b1e6:	call   0x1400096cc
   14001b1eb:	nop
   14001b1ec:	jmp    0x14001b230
   14001b1ee:	lea    rdx,[rbp-0x9]
   14001b1f2:	lea    rcx,[rbp+0x1f]
   14001b1f6:	call   0x14000a994
   14001b1fb:	nop
   14001b1fc:	lea    r8,[rip+0x3630d]        # 0x140051510
   14001b203:	mov    rdx,rax
   14001b206:	mov    rcx,rbx
   14001b209:	call   0x140014560
   14001b20e:	nop
   14001b20f:	cmp    QWORD PTR [rbp+0x37],0x8
   14001b214:	jb     0x14001b220
   14001b216:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001b21a:	call   QWORD PTR [rip+0x2e458]        # 0x140049678
   14001b220:	mov    QWORD PTR [rbp+0x37],0x7
   14001b228:	mov    QWORD PTR [rbp+0x2f],rdi
   14001b22c:	mov    WORD PTR [rbp+0x1f],di
   14001b230:	cmp    QWORD PTR [rbp+0xf],0x8
   14001b235:	jb     0x14001b241
   14001b237:	mov    rcx,QWORD PTR [rbp-0x9]
   14001b23b:	call   QWORD PTR [rip+0x2e437]        # 0x140049678
   14001b241:	mov    rax,rbx
   14001b244:	mov    rcx,QWORD PTR [rbp+0x47]
   14001b248:	xor    rcx,rsp
   14001b24b:	call   0x14002b100
   14001b250:	lea    r11,[rsp+0x90]
   14001b258:	mov    rbx,QWORD PTR [r11+0x18]
   14001b25c:	mov    rdi,QWORD PTR [r11+0x20]
   14001b260:	mov    rsp,r11
   14001b263:	pop    rbp
   14001b264:	ret    
   14001b265:	int3   
   14001b266:	int3   
   14001b267:	int3   
   14001b268:	mov    rax,rsp
   14001b26b:	push   rbp
   14001b26c:	lea    rbp,[rax-0x5f]
   14001b270:	sub    rsp,0x90
   14001b277:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   14001b27f:	mov    QWORD PTR [rax+0x10],rbx
   14001b283:	mov    QWORD PTR [rax+0x18],rdi
   14001b287:	mov    rax,QWORD PTR [rip+0x4cf62]        # 0x1400681f0
   14001b28e:	xor    rax,rsp
   14001b291:	mov    QWORD PTR [rbp+0x47],rax
   14001b295:	mov    rbx,rcx
   14001b298:	xor    edi,edi
   14001b29a:	mov    DWORD PTR [rbp-0x19],edi
   14001b29d:	lea    rcx,[rbp-0x9]
   14001b2a1:	call   0x14001af88
   14001b2a6:	nop
   14001b2a7:	cmp    QWORD PTR [rbp+0x7],rdi
   14001b2ab:	jne    0x14001b2de
   14001b2ad:	mov    QWORD PTR [rbx+0x18],0x7
   14001b2b5:	mov    QWORD PTR [rbx+0x10],rdi
   14001b2b9:	mov    WORD PTR [rbx],di
   14001b2bc:	lea    rcx,[rip+0x3582d]        # 0x140050af0
   14001b2c3:	call   QWORD PTR [rip+0x2e3e7]        # 0x1400496b0
   14001b2c9:	mov    r8,rax
   14001b2cc:	lea    rdx,[rip+0x3581d]        # 0x140050af0
   14001b2d3:	mov    rcx,rbx
   14001b2d6:	call   0x1400096cc
   14001b2db:	nop
   14001b2dc:	jmp    0x14001b320
   14001b2de:	lea    rdx,[rbp-0x9]
   14001b2e2:	lea    rcx,[rbp+0x1f]
   14001b2e6:	call   0x14000a994
   14001b2eb:	nop
   14001b2ec:	lea    r8,[rip+0x3621d]        # 0x140051510
   14001b2f3:	mov    rdx,rax
   14001b2f6:	mov    rcx,rbx
   14001b2f9:	call   0x140014560
   14001b2fe:	nop
   14001b2ff:	cmp    QWORD PTR [rbp+0x37],0x8
   14001b304:	jb     0x14001b310
   14001b306:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001b30a:	call   QWORD PTR [rip+0x2e368]        # 0x140049678
   14001b310:	mov    QWORD PTR [rbp+0x37],0x7
   14001b318:	mov    QWORD PTR [rbp+0x2f],rdi
   14001b31c:	mov    WORD PTR [rbp+0x1f],di
   14001b320:	cmp    QWORD PTR [rbp+0xf],0x8
   14001b325:	jb     0x14001b331
   14001b327:	mov    rcx,QWORD PTR [rbp-0x9]
   14001b32b:	call   QWORD PTR [rip+0x2e347]        # 0x140049678
   14001b331:	mov    rax,rbx
   14001b334:	mov    rcx,QWORD PTR [rbp+0x47]
   14001b338:	xor    rcx,rsp
   14001b33b:	call   0x14002b100
   14001b340:	lea    r11,[rsp+0x90]
   14001b348:	mov    rbx,QWORD PTR [r11+0x18]
   14001b34c:	mov    rdi,QWORD PTR [r11+0x20]
   14001b350:	mov    rsp,r11
   14001b353:	pop    rbp
   14001b354:	ret    
   14001b355:	int3   
   14001b356:	int3   
   14001b357:	int3   
   14001b358:	mov    rax,rsp
   14001b35b:	push   rbp
   14001b35c:	mov    rbp,rsp
   14001b35f:	sub    rsp,0x70
   14001b363:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14001b36b:	mov    QWORD PTR [rax+0x10],rbx
   14001b36f:	mov    QWORD PTR [rax+0x18],rdi
   14001b373:	mov    rax,QWORD PTR [rip+0x4ce76]        # 0x1400681f0
   14001b37a:	xor    rax,rsp
   14001b37d:	mov    QWORD PTR [rbp-0x10],rax
   14001b381:	mov    rbx,rcx
   14001b384:	mov    QWORD PTR [rbp-0x40],rcx
   14001b388:	and    DWORD PTR [rbp-0x50],0x0
   14001b38c:	lea    rcx,[rbp-0x38]
   14001b390:	call   0x14001b178
   14001b395:	nop
   14001b396:	mov    rcx,rbx
   14001b399:	call   0x14001b268
   14001b39e:	mov    DWORD PTR [rbp-0x50],0x1
   14001b3a5:	lea    rcx,[rbp-0x38]
   14001b3a9:	cmp    QWORD PTR [rbp-0x20],0x8
   14001b3ae:	cmovae rcx,QWORD PTR [rbp-0x38]
   14001b3b3:	call   QWORD PTR [rip+0x2e547]        # 0x140049900
   14001b3b9:	cmp    eax,0x1
   14001b3bc:	sete   dil
   14001b3c0:	cmp    QWORD PTR [rbx+0x18],0x8
   14001b3c5:	jb     0x14001b3cc
   14001b3c7:	mov    rcx,QWORD PTR [rbx]
   14001b3ca:	jmp    0x14001b3cf
   14001b3cc:	mov    rcx,rbx
   14001b3cf:	call   QWORD PTR [rip+0x2e52b]        # 0x140049900
   14001b3d5:	cmp    eax,0x1
   14001b3d8:	sete   al
   14001b3db:	test   dil,dil
   14001b3de:	je     0x14001b409
   14001b3e0:	mov    rdx,rbx
   14001b3e3:	lea    rcx,[rbp-0x38]
   14001b3e7:	test   al,al
   14001b3e9:	je     0x14001b402
   14001b3eb:	call   0x14000a878
   14001b3f0:	test   al,al
   14001b3f2:	je     0x14001b416
   14001b3f4:	mov    rdx,rbx
   14001b3f7:	lea    rcx,[rbp-0x38]
   14001b3fb:	call   0x14001d8dc
   14001b400:	jmp    0x14001b416
   14001b402:	call   0x14000a7ec
   14001b407:	jmp    0x14001b416
   14001b409:	test   al,al
   14001b40b:	jne    0x14001b416
   14001b40d:	mov    rcx,rbx
   14001b410:	call   0x14001dbb0
   14001b415:	nop
   14001b416:	cmp    QWORD PTR [rbp-0x20],0x8
   14001b41b:	jb     0x14001b427
   14001b41d:	mov    rcx,QWORD PTR [rbp-0x38]
   14001b421:	call   QWORD PTR [rip+0x2e251]        # 0x140049678
   14001b427:	mov    rax,rbx
   14001b42a:	mov    rcx,QWORD PTR [rbp-0x10]
   14001b42e:	xor    rcx,rsp
   14001b431:	call   0x14002b100
   14001b436:	lea    r11,[rsp+0x70]
   14001b43b:	mov    rbx,QWORD PTR [r11+0x18]
   14001b43f:	mov    rdi,QWORD PTR [r11+0x20]
   14001b443:	mov    rsp,r11
   14001b446:	pop    rbp
   14001b447:	ret    
   14001b448:	int3   
   14001b449:	int3   
   14001b44a:	int3   
   14001b44b:	int3   
   14001b44c:	mov    rax,rsp
   14001b44f:	push   rdi
   14001b450:	sub    rsp,0x280
   14001b457:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001b460:	mov    QWORD PTR [rax+0x10],rbx
   14001b464:	mov    rax,QWORD PTR [rip+0x4cd85]        # 0x1400681f0
   14001b46b:	xor    rax,rsp
   14001b46e:	mov    QWORD PTR [rsp+0x270],rax
   14001b476:	mov    rbx,rcx
   14001b479:	mov    QWORD PTR [rsp+0x28],rcx
   14001b47e:	xor    edi,edi
   14001b480:	mov    DWORD PTR [rsp+0x20],edi
   14001b484:	mov    QWORD PTR [rcx+0x18],0x7
   14001b48c:	mov    QWORD PTR [rcx+0x10],rdi
   14001b490:	mov    WORD PTR [rcx],di
   14001b493:	lea    rcx,[rip+0x35656]        # 0x140050af0
   14001b49a:	call   QWORD PTR [rip+0x2e210]        # 0x1400496b0
   14001b4a0:	mov    r8,rax
   14001b4a3:	lea    rdx,[rip+0x35646]        # 0x140050af0
   14001b4aa:	mov    rcx,rbx
   14001b4ad:	call   0x1400096cc
   14001b4b2:	mov    DWORD PTR [rsp+0x20],0x1
   14001b4ba:	mov    r8d,0x104
   14001b4c0:	lea    rdx,[rsp+0x60]
   14001b4c5:	xor    ecx,ecx
   14001b4c7:	call   QWORD PTR [rip+0x2dc1b]        # 0x1400490e8
   14001b4cd:	test   eax,eax
   14001b4cf:	je     0x14001b527
   14001b4d1:	lea    rcx,[rsp+0x60]
   14001b4d6:	call   QWORD PTR [rip+0x2e1d4]        # 0x1400496b0
   14001b4dc:	mov    r8,rax
   14001b4df:	lea    rdx,[rsp+0x60]
   14001b4e4:	mov    rcx,rbx
   14001b4e7:	call   0x1400096cc
   14001b4ec:	mov    rcx,rbx
   14001b4ef:	call   0x140014274
   14001b4f4:	mov    r9,rax
   14001b4f7:	xor    r8d,r8d
   14001b4fa:	lea    rdx,[rsp+0x38]
   14001b4ff:	mov    rcx,rbx
   14001b502:	call   0x14000b3d0
   14001b507:	nop
   14001b508:	mov    rdx,rax
   14001b50b:	mov    rcx,rbx
   14001b50e:	call   0x140009880
   14001b513:	nop
   14001b514:	cmp    QWORD PTR [rsp+0x50],0x8
   14001b51a:	jb     0x14001b527
   14001b51c:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b521:	call   QWORD PTR [rip+0x2e151]        # 0x140049678
   14001b527:	mov    rax,rbx
   14001b52a:	mov    rcx,QWORD PTR [rsp+0x270]
   14001b532:	xor    rcx,rsp
   14001b535:	call   0x14002b100
   14001b53a:	mov    rbx,QWORD PTR [rsp+0x298]
   14001b542:	add    rsp,0x280
   14001b549:	pop    rdi
   14001b54a:	ret    
   14001b54b:	int3   
   14001b54c:	mov    QWORD PTR [rsp+0x10],rbx
   14001b551:	mov    QWORD PTR [rsp+0x18],rsi
   14001b556:	push   rdi
   14001b557:	sub    rsp,0x20
   14001b55b:	lea    rcx,[rip+0x35fe6]        # 0x140051548
   14001b562:	xor    edi,edi
   14001b564:	mov    DWORD PTR [rsp+0x30],edi
   14001b568:	call   QWORD PTR [rip+0x2dae2]        # 0x140049050
   14001b56e:	mov    rsi,rax
   14001b571:	test   rax,rax
   14001b574:	jne    0x14001b57a
   14001b576:	xor    al,al
   14001b578:	jmp    0x14001b5b3
   14001b57a:	lea    rdx,[rip+0x35fdf]        # 0x140051560
   14001b581:	mov    rcx,rax
   14001b584:	call   QWORD PTR [rip+0x2dae6]        # 0x140049070
   14001b58a:	test   rax,rax
   14001b58d:	je     0x14001b576
   14001b58f:	lea    rcx,[rsp+0x30]
   14001b594:	call   rax
   14001b596:	mov    rcx,rsi
   14001b599:	mov    ebx,eax
   14001b59b:	call   QWORD PTR [rip+0x2da9f]        # 0x140049040
   14001b5a1:	test   ebx,ebx
   14001b5a3:	js     0x14001b5b0
   14001b5a5:	cmp    DWORD PTR [rsp+0x30],edi
   14001b5a9:	je     0x14001b5b0
   14001b5ab:	mov    edi,0x1
   14001b5b0:	mov    al,dil
   14001b5b3:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b5b8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b5bd:	add    rsp,0x20
   14001b5c1:	pop    rdi
   14001b5c2:	ret    
   14001b5c3:	int3   
   14001b5c4:	mov    rax,rsp
   14001b5c7:	push   rbp
   14001b5c8:	push   r12
   14001b5ca:	push   r13
   14001b5cc:	mov    rbp,rsp
   14001b5cf:	sub    rsp,0x60
   14001b5d3:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14001b5db:	mov    QWORD PTR [rax+0x10],rbx
   14001b5df:	mov    QWORD PTR [rax+0x18],rsi
   14001b5e3:	mov    QWORD PTR [rax+0x20],rdi
   14001b5e7:	mov    rax,QWORD PTR [rip+0x4cc02]        # 0x1400681f0
   14001b5ee:	xor    rax,rsp
   14001b5f1:	mov    QWORD PTR [rbp-0x8],rax
   14001b5f5:	mov    rdi,rcx
   14001b5f8:	xor    r12d,r12d
   14001b5fb:	mov    DWORD PTR [rbp-0x40],r12d
   14001b5ff:	lea    r13d,[r12+0x7]
   14001b604:	mov    QWORD PTR [rbp-0x18],r13
   14001b608:	mov    QWORD PTR [rbp-0x20],r12
   14001b60c:	mov    WORD PTR [rbp-0x30],r12w
   14001b611:	lea    rcx,[rip+0x354d8]        # 0x140050af0
   14001b618:	call   QWORD PTR [rip+0x2e092]        # 0x1400496b0
   14001b61e:	mov    r8,rax
   14001b621:	lea    rdx,[rip+0x354c8]        # 0x140050af0
   14001b628:	lea    rcx,[rbp-0x30]
   14001b62c:	call   0x1400096cc
   14001b631:	nop
   14001b632:	lea    rcx,[rip+0x35f47]        # 0x140051580
   14001b639:	call   QWORD PTR [rip+0x2da11]        # 0x140049050
   14001b63f:	mov    rsi,rax
   14001b642:	test   rax,rax
   14001b645:	jne    0x14001b665
   14001b647:	mov    QWORD PTR [rdi+0x18],r13
   14001b64b:	mov    QWORD PTR [rdi+0x10],r12
   14001b64f:	mov    WORD PTR [rdi],r12w
   14001b653:	lea    rdx,[rbp-0x30]
   14001b657:	mov    rcx,rdi
   14001b65a:	call   0x140009880
   14001b65f:	nop
   14001b660:	jmp    0x14001b6f3
   14001b665:	lea    rdx,[rip+0x35f2c]        # 0x140051598
   14001b66c:	mov    rcx,rax
   14001b66f:	call   QWORD PTR [rip+0x2d9fb]        # 0x140049070
   14001b675:	test   rax,rax
   14001b678:	jne    0x14001b695
   14001b67a:	mov    QWORD PTR [rdi+0x18],r13
   14001b67e:	mov    QWORD PTR [rdi+0x10],r12
   14001b682:	mov    WORD PTR [rdi],r12w
   14001b686:	lea    rdx,[rbp-0x30]
   14001b68a:	mov    rcx,rdi
   14001b68d:	call   0x140009880
   14001b692:	nop
   14001b693:	jmp    0x14001b6f3
   14001b695:	lea    r9,[rbp-0x40]
   14001b699:	xor    r8d,r8d
   14001b69c:	xor    edx,edx
   14001b69e:	lea    rcx,[rip+0x3244b]        # 0x14004daf0
   14001b6a5:	call   rax
   14001b6a7:	test   eax,eax
   14001b6a9:	js     0x14001b6d1
   14001b6ab:	mov    rbx,QWORD PTR [rbp-0x40]
   14001b6af:	mov    rcx,rbx
   14001b6b2:	call   QWORD PTR [rip+0x2dff8]        # 0x1400496b0
   14001b6b8:	mov    r8,rax
   14001b6bb:	mov    rdx,rbx
   14001b6be:	lea    rcx,[rbp-0x30]
   14001b6c2:	call   0x1400096cc
   14001b6c7:	mov    rcx,QWORD PTR [rbp-0x40]
   14001b6cb:	call   QWORD PTR [rip+0x2e2bf]        # 0x140049990
   14001b6d1:	mov    rcx,rsi
   14001b6d4:	call   QWORD PTR [rip+0x2d966]        # 0x140049040
   14001b6da:	mov    QWORD PTR [rdi+0x18],r13
   14001b6de:	mov    QWORD PTR [rdi+0x10],r12
   14001b6e2:	mov    WORD PTR [rdi],r12w
   14001b6e6:	lea    rdx,[rbp-0x30]
   14001b6ea:	mov    rcx,rdi
   14001b6ed:	call   0x140009880
   14001b6f2:	nop
   14001b6f3:	cmp    QWORD PTR [rbp-0x18],0x8
   14001b6f8:	jb     0x14001b704
   14001b6fa:	mov    rcx,QWORD PTR [rbp-0x30]
   14001b6fe:	call   QWORD PTR [rip+0x2df74]        # 0x140049678
   14001b704:	mov    rax,rdi
   14001b707:	mov    rcx,QWORD PTR [rbp-0x8]
   14001b70b:	xor    rcx,rsp
   14001b70e:	call   0x14002b100
   14001b713:	lea    r11,[rsp+0x60]
   14001b718:	mov    rbx,QWORD PTR [r11+0x28]
   14001b71c:	mov    rsi,QWORD PTR [r11+0x30]
   14001b720:	mov    rdi,QWORD PTR [r11+0x38]
   14001b724:	mov    rsp,r11
   14001b727:	pop    r13
   14001b729:	pop    r12
   14001b72b:	pop    rbp
   14001b72c:	ret    
   14001b72d:	int3   
   14001b72e:	int3   
   14001b72f:	int3   
   14001b730:	mov    rax,rsp
   14001b733:	push   rbp
   14001b734:	push   rdi
   14001b735:	push   r12
   14001b737:	lea    rbp,[rax-0x1f8]
   14001b73e:	sub    rsp,0x2e0
   14001b745:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001b74e:	mov    QWORD PTR [rax+0x10],rbx
   14001b752:	mov    QWORD PTR [rax+0x18],rsi
   14001b756:	mov    rax,QWORD PTR [rip+0x4ca93]        # 0x1400681f0
   14001b75d:	xor    rax,rsp
   14001b760:	mov    QWORD PTR [rbp+0x1d0],rax
   14001b767:	mov    rdi,rcx
   14001b76a:	xor    esi,esi
   14001b76c:	mov    DWORD PTR [rsp+0x58],esi
   14001b770:	xor    edx,edx
   14001b772:	mov    r8d,0x20a
   14001b778:	lea    rcx,[rbp-0x40]
   14001b77c:	call   QWORD PTR [rip+0x2ded6]        # 0x140049658
   14001b782:	call   0x14001b54c
   14001b787:	test   al,al
   14001b789:	je     0x14001b8a2
   14001b78f:	lea    r12d,[rsi+0xf]
   14001b793:	mov    QWORD PTR [rbp-0x58],r12
   14001b797:	mov    QWORD PTR [rbp-0x60],rsi
   14001b79b:	mov    BYTE PTR [rbp-0x70],sil
   14001b79f:	lea    rcx,[rip+0x35e1a]        # 0x1400515c0
   14001b7a6:	call   QWORD PTR [rip+0x2de5c]        # 0x140049608
   14001b7ac:	mov    r8,rax
   14001b7af:	lea    rdx,[rip+0x35e0a]        # 0x1400515c0
   14001b7b6:	lea    rcx,[rbp-0x70]
   14001b7ba:	call   0x140005154
   14001b7bf:	nop
   14001b7c0:	mov    QWORD PTR [rbp-0x80],r12
   14001b7c4:	mov    QWORD PTR [rsp+0x78],rsi
   14001b7c9:	mov    BYTE PTR [rsp+0x68],sil
   14001b7ce:	lea    rcx,[rip+0x35ddb]        # 0x1400515b0
   14001b7d5:	call   QWORD PTR [rip+0x2de2d]        # 0x140049608
   14001b7db:	mov    r8,rax
   14001b7de:	lea    rdx,[rip+0x35dcb]        # 0x1400515b0
   14001b7e5:	lea    rcx,[rsp+0x68]
   14001b7ea:	call   0x140005154
   14001b7ef:	nop
   14001b7f0:	lea    rcx,[rsp+0x68]
   14001b7f5:	call   0x140011ed0
   14001b7fa:	mov    rbx,rax
   14001b7fd:	mov    QWORD PTR [rsp+0x48],r12
   14001b802:	mov    QWORD PTR [rsp+0x40],rsi
   14001b807:	mov    BYTE PTR [rsp+0x30],sil
   14001b80c:	lea    rcx,[rip+0x350e2]        # 0x1400508f5
   14001b813:	call   QWORD PTR [rip+0x2ddef]        # 0x140049608
   14001b819:	mov    r8,rax
   14001b81c:	lea    rdx,[rip+0x350d2]        # 0x1400508f5
   14001b823:	lea    rcx,[rsp+0x30]
   14001b828:	call   0x140005154
   14001b82d:	nop
   14001b82e:	mov    r9,QWORD PTR [rbx]
   14001b831:	lea    r8,[rsp+0x30]
   14001b836:	lea    rdx,[rbp-0x70]
   14001b83a:	mov    rcx,rbx
   14001b83d:	call   QWORD PTR [r9+0x80]
   14001b844:	nop
   14001b845:	cmp    QWORD PTR [rsp+0x48],0x10
   14001b84b:	jb     0x14001b858
   14001b84d:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b852:	call   QWORD PTR [rip+0x2de20]        # 0x140049678
   14001b858:	mov    QWORD PTR [rsp+0x48],r12
   14001b85d:	mov    QWORD PTR [rsp+0x40],rsi
   14001b862:	mov    BYTE PTR [rsp+0x30],sil
   14001b867:	cmp    QWORD PTR [rbp-0x80],0x10
   14001b86c:	jb     0x14001b879
   14001b86e:	mov    rcx,QWORD PTR [rsp+0x68]
   14001b873:	call   QWORD PTR [rip+0x2ddff]        # 0x140049678
   14001b879:	mov    QWORD PTR [rbp-0x80],r12
   14001b87d:	mov    QWORD PTR [rsp+0x78],rsi
   14001b882:	mov    BYTE PTR [rsp+0x68],sil
   14001b887:	cmp    QWORD PTR [rbp-0x58],0x10
   14001b88c:	jb     0x14001b898
   14001b88e:	mov    rcx,QWORD PTR [rbp-0x70]
   14001b892:	call   QWORD PTR [rip+0x2dde0]        # 0x140049678
   14001b898:	mov    rcx,rdi
   14001b89b:	call   0x14001b5c4
   14001b8a0:	jmp    0x14001b8f5
   14001b8a2:	lea    rax,[rbp-0x40]
   14001b8a6:	mov    QWORD PTR [rsp+0x20],rax
   14001b8ab:	xor    r9d,r9d
   14001b8ae:	xor    r8d,r8d
   14001b8b1:	mov    edx,0x801a
   14001b8b6:	xor    ecx,ecx
   14001b8b8:	call   QWORD PTR [rip+0x2e02a]        # 0x1400498e8
   14001b8be:	lea    rcx,[rip+0x3522b]        # 0x140050af0
   14001b8c5:	lea    rbx,[rbp-0x40]
   14001b8c9:	test   eax,eax
   14001b8cb:	cmovne rbx,rcx
   14001b8cf:	mov    QWORD PTR [rdi+0x18],0x7
   14001b8d7:	mov    QWORD PTR [rdi+0x10],rsi
   14001b8db:	mov    WORD PTR [rdi],si
   14001b8de:	mov    rcx,rbx
   14001b8e1:	call   QWORD PTR [rip+0x2ddc9]        # 0x1400496b0
   14001b8e7:	mov    r8,rax
   14001b8ea:	mov    rdx,rbx
   14001b8ed:	mov    rcx,rdi
   14001b8f0:	call   0x1400096cc
   14001b8f5:	mov    rax,rdi
   14001b8f8:	mov    rcx,QWORD PTR [rbp+0x1d0]
   14001b8ff:	xor    rcx,rsp
   14001b902:	call   0x14002b100
   14001b907:	lea    r11,[rsp+0x2e0]
   14001b90f:	mov    rbx,QWORD PTR [r11+0x28]
   14001b913:	mov    rsi,QWORD PTR [r11+0x30]
   14001b917:	mov    rsp,r11
   14001b91a:	pop    r12
   14001b91c:	pop    rdi
   14001b91d:	pop    rbp
   14001b91e:	ret    
   14001b91f:	int3   
   14001b920:	mov    rax,rsp
   14001b923:	push   rbp
   14001b924:	lea    rbp,[rax-0x7a8]
   14001b92b:	sub    rsp,0x8a0
   14001b932:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b93b:	mov    QWORD PTR [rax+0x8],rbx
   14001b93f:	mov    rax,QWORD PTR [rip+0x4c8aa]        # 0x1400681f0
   14001b946:	xor    rax,rsp
   14001b949:	mov    QWORD PTR [rbp+0x790],rax
   14001b950:	xor    ebx,ebx
   14001b952:	mov    WORD PTR [rbp+0x780],bx
   14001b959:	mov    r8d,0x400
   14001b95f:	lea    rdx,[rbp-0x80]
   14001b963:	xor    ecx,ecx
   14001b965:	call   QWORD PTR [rip+0x2d77d]        # 0x1400490e8
   14001b96b:	test   eax,eax
   14001b96d:	je     0x14001ba06
   14001b973:	mov    QWORD PTR [rsp+0x40],0x7
   14001b97c:	mov    QWORD PTR [rsp+0x38],rbx
   14001b981:	mov    WORD PTR [rsp+0x28],bx
   14001b986:	lea    rcx,[rbp-0x80]
   14001b98a:	call   QWORD PTR [rip+0x2dd20]        # 0x1400496b0
   14001b990:	mov    r8,rax
   14001b993:	lea    rdx,[rbp-0x80]
   14001b997:	lea    rcx,[rsp+0x28]
   14001b99c:	call   0x1400096cc
   14001b9a1:	nop
   14001b9a2:	lea    rcx,[rsp+0x28]
   14001b9a7:	call   0x140014274
   14001b9ac:	lea    r9,[rax+0x1]
   14001b9b0:	xor    r8d,r8d
   14001b9b3:	lea    rdx,[rsp+0x50]
   14001b9b8:	lea    rcx,[rsp+0x28]
   14001b9bd:	call   0x14000b3d0
   14001b9c2:	nop
   14001b9c3:	mov    rdx,rax
   14001b9c6:	lea    rcx,[rsp+0x28]
   14001b9cb:	call   0x140009880
   14001b9d0:	nop
   14001b9d1:	cmp    QWORD PTR [rsp+0x68],0x8
   14001b9d7:	jb     0x14001b9e4
   14001b9d9:	mov    rcx,QWORD PTR [rsp+0x50]
   14001b9de:	call   QWORD PTR [rip+0x2dc94]        # 0x140049678
   14001b9e4:	lea    rcx,[rsp+0x28]
   14001b9e9:	call   0x14001ba28
   14001b9ee:	nop
   14001b9ef:	cmp    QWORD PTR [rsp+0x40],0x8
   14001b9f5:	jb     0x14001ba02
   14001b9f7:	mov    rcx,QWORD PTR [rsp+0x28]
   14001b9fc:	call   QWORD PTR [rip+0x2dc76]        # 0x140049678
   14001ba02:	mov    al,0x1
   14001ba04:	jmp    0x14001ba08
   14001ba06:	xor    al,al
   14001ba08:	mov    rcx,QWORD PTR [rbp+0x790]
   14001ba0f:	xor    rcx,rsp
   14001ba12:	call   0x14002b100
   14001ba17:	mov    rbx,QWORD PTR [rsp+0x8b0]
   14001ba1f:	add    rsp,0x8a0
   14001ba26:	pop    rbp
   14001ba27:	ret    
   14001ba28:	mov    rax,rsp
   14001ba2b:	push   rbp
   14001ba2c:	mov    rbp,rsp
   14001ba2f:	sub    rsp,0x70
   14001ba33:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   14001ba3b:	mov    QWORD PTR [rax+0x10],rbx
   14001ba3f:	mov    QWORD PTR [rax+0x18],rsi
   14001ba43:	mov    QWORD PTR [rax+0x20],rdi
   14001ba47:	mov    rax,QWORD PTR [rip+0x4c7a2]        # 0x1400681f0
   14001ba4e:	xor    rax,rsp
   14001ba51:	mov    QWORD PTR [rbp-0x10],rax
   14001ba55:	mov    rdi,rcx
   14001ba58:	xor    esi,esi
   14001ba5a:	cmp    QWORD PTR [rcx+0x10],rsi
   14001ba5e:	je     0x14001bb5c
   14001ba64:	mov    QWORD PTR [rbp-0x50],0xffffffff80000001
   14001ba6c:	mov    DWORD PTR [rbp-0x48],0xf003f
   14001ba73:	mov    QWORD PTR [rbp-0x20],0x7
   14001ba7b:	mov    QWORD PTR [rbp-0x28],rsi
   14001ba7f:	mov    WORD PTR [rbp-0x38],si
   14001ba83:	lea    rcx,[rip+0x35266]        # 0x140050cf0
   14001ba8a:	call   QWORD PTR [rip+0x2dc20]        # 0x1400496b0
   14001ba90:	mov    r8,rax
   14001ba93:	lea    rdx,[rip+0x35256]        # 0x140050cf0
   14001ba9a:	lea    rcx,[rbp-0x38]
   14001ba9e:	call   0x1400096cc
   14001baa3:	nop
   14001baa4:	lea    r8,[rbp-0x48]
   14001baa8:	lea    rdx,[rbp-0x38]
   14001baac:	lea    rcx,[rbp-0x50]
   14001bab0:	call   0x14001c880
   14001bab5:	mov    bl,al
   14001bab7:	cmp    QWORD PTR [rbp-0x20],0x8
   14001babc:	jb     0x14001bac8
   14001babe:	mov    rcx,QWORD PTR [rbp-0x38]
   14001bac2:	call   QWORD PTR [rip+0x2dbb0]        # 0x140049678
   14001bac8:	test   bl,bl
   14001baca:	je     0x14001bb4a
   14001bacc:	mov    QWORD PTR [rbp-0x20],0x7
   14001bad4:	mov    QWORD PTR [rbp-0x28],rsi
   14001bad8:	mov    WORD PTR [rbp-0x38],si
   14001badc:	lea    rcx,[rip+0x35a55]        # 0x140051538
   14001bae3:	call   QWORD PTR [rip+0x2dbc7]        # 0x1400496b0
   14001bae9:	mov    r8,rax
   14001baec:	lea    rdx,[rip+0x35a45]        # 0x140051538
   14001baf3:	lea    rcx,[rbp-0x38]
   14001baf7:	call   0x1400096cc
   14001bafc:	nop
   14001bafd:	mov    rbx,QWORD PTR [rbp-0x50]
   14001bb01:	test   rbx,rbx
   14001bb04:	je     0x14001bb1f
   14001bb06:	mov    r8,rdi
   14001bb09:	lea    rdx,[rbp-0x38]
   14001bb0d:	lea    rcx,[rbp-0x50]
   14001bb11:	call   0x14001cba4
   14001bb16:	mov    dil,al
   14001bb19:	mov    rbx,QWORD PTR [rbp-0x50]
   14001bb1d:	jmp    0x14001bb22
   14001bb1f:	mov    dil,sil
   14001bb22:	cmp    QWORD PTR [rbp-0x20],0x8
   14001bb27:	jb     0x14001bb33
   14001bb29:	mov    rcx,QWORD PTR [rbp-0x38]
   14001bb2d:	call   QWORD PTR [rip+0x2db45]        # 0x140049678
   14001bb33:	test   dil,dil
   14001bb36:	je     0x14001bb4e
   14001bb38:	test   rbx,rbx
   14001bb3b:	je     0x14001bb46
   14001bb3d:	mov    rcx,rbx
   14001bb40:	call   QWORD PTR [rip+0x2d4c2]        # 0x140049008
   14001bb46:	xor    eax,eax
   14001bb48:	jmp    0x14001bb5f
   14001bb4a:	mov    rbx,QWORD PTR [rbp-0x50]
   14001bb4e:	test   rbx,rbx
   14001bb51:	je     0x14001bb5c
   14001bb53:	mov    rcx,rbx
   14001bb56:	call   QWORD PTR [rip+0x2d4ac]        # 0x140049008
   14001bb5c:	or     eax,0xffffffff
   14001bb5f:	mov    rcx,QWORD PTR [rbp-0x10]
   14001bb63:	xor    rcx,rsp
   14001bb66:	call   0x14002b100
   14001bb6b:	lea    r11,[rsp+0x70]
   14001bb70:	mov    rbx,QWORD PTR [r11+0x18]
   14001bb74:	mov    rsi,QWORD PTR [r11+0x20]
   14001bb78:	mov    rdi,QWORD PTR [r11+0x28]
   14001bb7c:	mov    rsp,r11
   14001bb7f:	pop    rbp
   14001bb80:	ret    
   14001bb81:	int3   
   14001bb82:	int3   
   14001bb83:	int3   
   14001bb84:	mov    rax,rsp
   14001bb87:	push   rbp
   14001bb88:	lea    rbp,[rax-0x1d8]
   14001bb8f:	sub    rsp,0x2d0
   14001bb96:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001bb9f:	mov    QWORD PTR [rax+0x10],rbx
   14001bba3:	mov    QWORD PTR [rax+0x18],rsi
   14001bba7:	mov    QWORD PTR [rax+0x20],r12
   14001bbab:	mov    rax,QWORD PTR [rip+0x4c63e]        # 0x1400681f0
   14001bbb2:	xor    rax,rsp
   14001bbb5:	mov    QWORD PTR [rbp+0x1c0],rax
   14001bbbc:	mov    rbx,rcx
   14001bbbf:	xor    esi,esi
   14001bbc1:	mov    DWORD PTR [rsp+0x20],esi
   14001bbc5:	mov    DWORD PTR [rsp+0x20],0x100
   14001bbcd:	mov    WORD PTR [rbp+0x1b0],si
   14001bbd4:	lea    rdx,[rsp+0x20]
   14001bbd9:	lea    rcx,[rbp-0x50]
   14001bbdd:	call   QWORD PTR [rip+0x2d43d]        # 0x140049020
   14001bbe3:	mov    QWORD PTR [rsp+0x70],0x7
   14001bbec:	mov    QWORD PTR [rsp+0x68],rsi
   14001bbf1:	mov    WORD PTR [rsp+0x58],si
   14001bbf6:	lea    rcx,[rbp-0x50]
   14001bbfa:	call   QWORD PTR [rip+0x2dab0]        # 0x1400496b0
   14001bc00:	mov    r8,rax
   14001bc03:	lea    rdx,[rbp-0x50]
   14001bc07:	lea    rcx,[rsp+0x58]
   14001bc0c:	call   0x1400096cc
   14001bc11:	nop
   14001bc12:	lea    rdx,[rsp+0x58]
   14001bc17:	lea    rcx,[rbp-0x80]
   14001bc1b:	call   0x140009474
   14001bc20:	nop
   14001bc21:	lea    r12d,[rsi+0xf]
   14001bc25:	mov    QWORD PTR [rsp+0x48],r12
   14001bc2a:	mov    QWORD PTR [rsp+0x40],rsi
   14001bc2f:	mov    BYTE PTR [rsp+0x30],sil
   14001bc34:	lea    rcx,[rip+0x3599d]        # 0x1400515d8
   14001bc3b:	call   QWORD PTR [rip+0x2d9c7]        # 0x140049608
   14001bc41:	mov    r8,rax
   14001bc44:	lea    rdx,[rip+0x3598d]        # 0x1400515d8
   14001bc4b:	lea    rcx,[rsp+0x30]
   14001bc50:	call   0x140005154
   14001bc55:	nop
   14001bc56:	or     r9,0xffffffffffffffff
   14001bc5a:	xor    r8d,r8d
   14001bc5d:	lea    rdx,[rbp-0x80]
   14001bc61:	lea    rcx,[rsp+0x30]
   14001bc66:	call   0x140005638
   14001bc6b:	mov    QWORD PTR [rbx+0x18],r12
   14001bc6f:	mov    QWORD PTR [rbx+0x10],rsi
   14001bc73:	mov    BYTE PTR [rbx],sil
   14001bc76:	or     r9,0xffffffffffffffff
   14001bc7a:	xor    r8d,r8d
   14001bc7d:	mov    rdx,rax
   14001bc80:	mov    rcx,rbx
   14001bc83:	call   0x1400048b8
   14001bc88:	nop
   14001bc89:	cmp    QWORD PTR [rsp+0x48],0x10
   14001bc8f:	jb     0x14001bc9c
   14001bc91:	mov    rcx,QWORD PTR [rsp+0x30]
   14001bc96:	call   QWORD PTR [rip+0x2d9dc]        # 0x140049678
   14001bc9c:	mov    QWORD PTR [rsp+0x48],r12
   14001bca1:	mov    QWORD PTR [rsp+0x40],rsi
   14001bca6:	mov    BYTE PTR [rsp+0x30],sil
   14001bcab:	cmp    QWORD PTR [rbp-0x68],0x10
   14001bcb0:	jb     0x14001bcbc
   14001bcb2:	mov    rcx,QWORD PTR [rbp-0x80]
   14001bcb6:	call   QWORD PTR [rip+0x2d9bc]        # 0x140049678
   14001bcbc:	mov    QWORD PTR [rbp-0x68],r12
   14001bcc0:	mov    QWORD PTR [rbp-0x70],rsi
   14001bcc4:	mov    BYTE PTR [rbp-0x80],sil
   14001bcc8:	cmp    QWORD PTR [rsp+0x70],0x8
   14001bcce:	jb     0x14001bcdb
   14001bcd0:	mov    rcx,QWORD PTR [rsp+0x58]
   14001bcd5:	call   QWORD PTR [rip+0x2d99d]        # 0x140049678
   14001bcdb:	mov    rax,rbx
   14001bcde:	mov    rcx,QWORD PTR [rbp+0x1c0]
   14001bce5:	xor    rcx,rsp
   14001bce8:	call   0x14002b100
   14001bced:	lea    r11,[rsp+0x2d0]
   14001bcf5:	mov    rbx,QWORD PTR [r11+0x18]
   14001bcf9:	mov    rsi,QWORD PTR [r11+0x20]
   14001bcfd:	mov    r12,QWORD PTR [r11+0x28]
   14001bd01:	mov    rsp,r11
   14001bd04:	pop    rbp
   14001bd05:	ret    
   14001bd06:	int3   
   14001bd07:	int3   
   14001bd08:	mov    rax,rsp
   14001bd0b:	push   rbp
   14001bd0c:	push   rsi
   14001bd0d:	push   rdi
   14001bd0e:	push   r12
   14001bd10:	push   r13
   14001bd12:	push   r14
   14001bd14:	push   r15
   14001bd16:	lea    rbp,[rax-0x68]
   14001bd1a:	sub    rsp,0x130
   14001bd21:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14001bd2a:	mov    QWORD PTR [rax+0x18],rbx
   14001bd2e:	mov    rax,QWORD PTR [rip+0x4c4bb]        # 0x1400681f0
   14001bd35:	xor    rax,rsp
   14001bd38:	mov    QWORD PTR [rbp+0x20],rax
   14001bd3c:	mov    r12,rdx
   14001bd3f:	mov    r14,rcx
   14001bd42:	mov    QWORD PTR [rsp+0x70],rcx
   14001bd47:	mov    QWORD PTR [rbp-0x80],rdx
   14001bd4b:	xor    r15d,r15d
   14001bd4e:	mov    DWORD PTR [rsp+0x28],r15d
   14001bd53:	mov    QWORD PTR [rsp+0x30],r15
   14001bd58:	mov    QWORD PTR [rsp+0x38],r15
   14001bd5d:	mov    QWORD PTR [rsp+0x40],r15
   14001bd62:	mov    QWORD PTR [rbp-0x60],0xf
   14001bd6a:	mov    QWORD PTR [rbp-0x68],r15
   14001bd6e:	mov    BYTE PTR [rbp-0x78],r15b
   14001bd72:	lea    rax,[rsp+0x30]
   14001bd77:	mov    QWORD PTR [rsp+0x28],rax
   14001bd7c:	xor    edx,edx
   14001bd7e:	lea    r8d,[r15+0x68]
   14001bd82:	lea    rcx,[rbp-0x50]
   14001bd86:	call   QWORD PTR [rip+0x2d8cc]        # 0x140049658
   14001bd8c:	mov    QWORD PTR [rbp-0x50],r15
   14001bd90:	mov    DWORD PTR [rbp-0x48],0x67452301
   14001bd97:	mov    DWORD PTR [rbp-0x44],0xefcdab89
   14001bd9e:	mov    DWORD PTR [rbp-0x40],0x98badcfe
   14001bda5:	mov    DWORD PTR [rbp-0x3c],0x10325476
   14001bdac:	cmp    QWORD PTR [r12+0x18],0x10
   14001bdb2:	jb     0x14001bdba
   14001bdb4:	mov    rcx,QWORD PTR [r12]
   14001bdb8:	jmp    0x14001bdbd
   14001bdba:	mov    rcx,r12
   14001bdbd:	mov    rax,QWORD PTR [r12+0x10]
   14001bdc2:	lea    rdi,[rcx+rax*1]
   14001bdc6:	cmp    QWORD PTR [r12+0x18],0x10
   14001bdcc:	jb     0x14001bdd4
   14001bdce:	mov    rbx,QWORD PTR [r12]
   14001bdd2:	jmp    0x14001bdf2
   14001bdd4:	mov    rbx,r12
   14001bdd7:	jmp    0x14001bdf2
   14001bdd9:	mov    al,BYTE PTR [rbx]
   14001bddb:	mov    BYTE PTR [rsp+0x20],al
   14001bddf:	mov    r8d,0x1
   14001bde5:	lea    rdx,[rsp+0x20]
   14001bdea:	call   0x140024868
   14001bdef:	inc    rbx
   14001bdf2:	lea    rcx,[rbp-0x50]
   14001bdf6:	cmp    rbx,rdi
   14001bdf9:	jne    0x14001bdd9
   14001bdfb:	lea    r8,[rbp-0x78]
   14001bdff:	lea    rdx,[rsp+0x28]
   14001be04:	call   0x14001bfc8
   14001be09:	mov    QWORD PTR [rsp+0x50],r15
   14001be0e:	mov    QWORD PTR [rsp+0x58],r15
   14001be13:	mov    QWORD PTR [rsp+0x60],r15
   14001be18:	lea    rax,[rsp+0x50]
   14001be1d:	mov    QWORD PTR [rsp+0x28],rax
   14001be22:	mov    rdi,QWORD PTR [rsp+0x38]
   14001be27:	mov    rbx,QWORD PTR [rsp+0x30]
   14001be2c:	mov    r8b,r15b
   14001be2f:	mov    r13d,r15d
   14001be32:	cmp    rbx,rdi
   14001be35:	je     0x14001bf00
   14001be3b:	lea    r14,[rip+0x357ae]        # 0x1400515f0
   14001be42:	movzx  esi,BYTE PTR [rbx]
   14001be45:	lea    ecx,[r13+0x2]
   14001be49:	mov    edx,esi
   14001be4b:	shr    rdx,cl
   14001be4e:	movzx  eax,r8b
   14001be52:	or     rdx,rax
   14001be55:	add    rdx,r14
   14001be58:	lea    rcx,[rsp+0x28]
   14001be5d:	call   0x14001c260
   14001be62:	add    r13d,0x2
   14001be66:	mov    ecx,r13d
   14001be69:	mov    r8d,0x1
   14001be6f:	shl    r8b,cl
   14001be72:	dec    r8b
   14001be75:	and    r8b,sil
   14001be78:	mov    ecx,0x6
   14001be7d:	sub    ecx,r13d
   14001be80:	shl    r8b,cl
   14001be83:	cmp    r13d,0x6
   14001be87:	jne    0x14001bea0
   14001be89:	movzx  edx,r8b
   14001be8d:	add    rdx,r14
   14001be90:	lea    rcx,[rsp+0x28]
   14001be95:	call   0x14001c260
   14001be9a:	mov    r8b,r15b
   14001be9d:	mov    r13d,r15d
   14001bea0:	inc    rbx
   14001bea3:	cmp    rbx,rdi
   14001bea6:	jne    0x14001be42
   14001bea8:	test   r13d,r13d
   14001beab:	mov    r14,QWORD PTR [rsp+0x70]
   14001beb0:	je     0x14001bf00
   14001beb2:	movzx  edx,r8b
   14001beb6:	lea    rax,[rip+0x35733]        # 0x1400515f0
   14001bebd:	add    rdx,rax
   14001bec0:	lea    rcx,[rsp+0x28]
   14001bec5:	call   0x14001c260
   14001beca:	cmp    r13d,0x2
   14001bece:	je     0x14001bed8
   14001bed0:	cmp    r13d,0x4
   14001bed4:	je     0x14001beec
   14001bed6:	jmp    0x14001bf00
   14001bed8:	mov    BYTE PTR [rsp+0x20],0x3d
   14001bedd:	lea    rdx,[rsp+0x20]
   14001bee2:	lea    rcx,[rsp+0x28]
   14001bee7:	call   0x14001c260
   14001beec:	mov    BYTE PTR [rsp+0x20],0x3d
   14001bef1:	lea    rdx,[rsp+0x20]
   14001bef6:	lea    rcx,[rsp+0x28]
   14001befb:	call   0x14001c260
   14001bf00:	mov    r8,QWORD PTR [rsp+0x58]
   14001bf05:	mov    rdx,QWORD PTR [rsp+0x50]
   14001bf0a:	mov    ebx,0xf
   14001bf0f:	mov    QWORD PTR [r14+0x18],rbx
   14001bf13:	mov    QWORD PTR [r14+0x10],r15
   14001bf17:	mov    BYTE PTR [r14],r15b
   14001bf1a:	mov    rcx,r14
   14001bf1d:	call   0x14001c368
   14001bf22:	nop
   14001bf23:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bf28:	test   rcx,rcx
   14001bf2b:	je     0x14001bf33
   14001bf2d:	call   QWORD PTR [rip+0x2d745]        # 0x140049678
   14001bf33:	mov    QWORD PTR [rsp+0x50],r15
   14001bf38:	mov    QWORD PTR [rsp+0x58],r15
   14001bf3d:	mov    QWORD PTR [rsp+0x60],r15
   14001bf42:	cmp    QWORD PTR [rbp-0x60],0x10
   14001bf47:	jb     0x14001bf53
   14001bf49:	mov    rcx,QWORD PTR [rbp-0x78]
   14001bf4d:	call   QWORD PTR [rip+0x2d725]        # 0x140049678
   14001bf53:	mov    QWORD PTR [rbp-0x60],rbx
   14001bf57:	mov    QWORD PTR [rbp-0x68],r15
   14001bf5b:	mov    BYTE PTR [rbp-0x78],r15b
   14001bf5f:	mov    rcx,QWORD PTR [rsp+0x30]
   14001bf64:	test   rcx,rcx
   14001bf67:	je     0x14001bf6f
   14001bf69:	call   QWORD PTR [rip+0x2d709]        # 0x140049678
   14001bf6f:	mov    QWORD PTR [rsp+0x30],r15
   14001bf74:	mov    QWORD PTR [rsp+0x38],r15
   14001bf79:	mov    QWORD PTR [rsp+0x40],r15
   14001bf7e:	cmp    QWORD PTR [r12+0x18],0x10
   14001bf84:	jb     0x14001bf90
   14001bf86:	mov    rcx,QWORD PTR [r12]
   14001bf8a:	call   QWORD PTR [rip+0x2d6e8]        # 0x140049678
   14001bf90:	mov    QWORD PTR [r12+0x18],rbx
   14001bf95:	mov    QWORD PTR [r12+0x10],r15
   14001bf9a:	mov    BYTE PTR [r12],r15b
   14001bf9e:	mov    rax,r14
   14001bfa1:	mov    rcx,QWORD PTR [rbp+0x20]
   14001bfa5:	xor    rcx,rsp
   14001bfa8:	call   0x14002b100
   14001bfad:	mov    rbx,QWORD PTR [rsp+0x180]
   14001bfb5:	add    rsp,0x130
   14001bfbc:	pop    r15
   14001bfbe:	pop    r14
   14001bfc0:	pop    r13
   14001bfc2:	pop    r12
   14001bfc4:	pop    rdi
   14001bfc5:	pop    rsi
   14001bfc6:	pop    rbp
   14001bfc7:	ret    
   14001bfc8:	mov    rax,rsp
   14001bfcb:	push   rbp
   14001bfcc:	push   rsi
   14001bfcd:	push   rdi
   14001bfce:	push   r12
   14001bfd0:	push   r13
   14001bfd2:	push   r14
   14001bfd4:	push   r15
   14001bfd6:	mov    rbp,rsp
   14001bfd9:	sub    rsp,0x80
   14001bfe0:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14001bfe8:	mov    QWORD PTR [rax+0x20],rbx
   14001bfec:	mov    rax,QWORD PTR [rip+0x4c1fd]        # 0x1400681f0
   14001bff3:	xor    rax,rsp
   14001bff6:	mov    QWORD PTR [rbp-0x8],rax
   14001bffa:	mov    r14,r8
   14001bffd:	mov    r13,rdx
   14001c000:	mov    rbx,rcx
   14001c003:	mov    r9d,DWORD PTR [rcx]
   14001c006:	mov    DWORD PTR [rbp-0x18],r9d
   14001c00a:	mov    eax,DWORD PTR [rcx+0x4]
   14001c00d:	mov    DWORD PTR [rbp-0x14],eax
   14001c010:	shr    r9d,0x3
   14001c014:	and    r9w,0x3f
   14001c019:	mov    edx,0x38
   14001c01e:	mov    eax,edx
   14001c020:	sub    ax,r9w
   14001c024:	lea    r8d,[rdx+0x40]
   14001c028:	sub    r8w,r9w
   14001c02c:	cmp    r9w,dx
   14001c030:	cmovl  r8w,ax
   14001c035:	lea    rdx,[rip+0x4d704]        # 0x140069740
   14001c03c:	call   0x140024868
   14001c041:	xor    r15d,r15d
   14001c044:	movzx  r8d,r15w
   14001c048:	lea    r9,[rbp-0x50]
   14001c04c:	lea    edi,[r15+0x4]
   14001c050:	lea    r10d,[r15+0xe]
   14001c054:	movzx  ecx,r8w
   14001c058:	movzx  edx,BYTE PTR [rcx+rbx*1+0x1b]
   14001c05d:	shl    edx,0x8
   14001c060:	movzx  eax,BYTE PTR [rcx+rbx*1+0x1a]
   14001c065:	or     edx,eax
   14001c067:	shl    edx,0x8
   14001c06a:	movzx  eax,BYTE PTR [rcx+rbx*1+0x19]
   14001c06f:	or     edx,eax
   14001c071:	shl    edx,0x8
   14001c074:	movzx  eax,BYTE PTR [rcx+rbx*1+0x18]
   14001c079:	or     edx,eax
   14001c07b:	mov    DWORD PTR [r9],edx
   14001c07e:	add    r9,rdi
   14001c081:	add    r8w,di
   14001c085:	dec    r10
   14001c088:	jne    0x14001c054
   14001c08a:	lea    rcx,[rbx+0x8]
   14001c08e:	lea    rdx,[rbp-0x50]
   14001c092:	call   0x140024970
   14001c097:	movzx  r8d,r15w
   14001c09b:	lea    rdx,[rbx+0xa]
   14001c09f:	mov    r9,rdi
   14001c0a2:	movzx  ecx,r8w
   14001c0a6:	mov    al,BYTE PTR [rdx-0x2]
   14001c0a9:	mov    BYTE PTR [rcx+rbx*1+0x58],al
   14001c0ad:	mov    al,BYTE PTR [rdx-0x1]
   14001c0b0:	mov    BYTE PTR [rcx+rbx*1+0x59],al
   14001c0b4:	mov    al,BYTE PTR [rdx]
   14001c0b6:	mov    BYTE PTR [rcx+rbx*1+0x5a],al
   14001c0ba:	mov    al,BYTE PTR [rdx+0x1]
   14001c0bd:	mov    BYTE PTR [rcx+rbx*1+0x5b],al
   14001c0c1:	add    rdx,rdi
   14001c0c4:	add    r8w,di
   14001c0c8:	dec    r9
   14001c0cb:	jne    0x14001c0a2
   14001c0cd:	mov    r12d,r15d
   14001c0d0:	lea    rdi,[rbx+0x58]
   14001c0d4:	movzx  r9d,BYTE PTR [rdi]
   14001c0d8:	lea    r8,[rip+0x35509]        # 0x1400515e8
   14001c0df:	mov    edx,0x8
   14001c0e4:	lea    rcx,[rbp-0x10]
   14001c0e8:	call   QWORD PTR [rip+0x2d65a]        # 0x140049748
   14001c0ee:	mov    QWORD PTR [rbp-0x38],0xf
   14001c0f6:	mov    QWORD PTR [rbp-0x40],r15
   14001c0fa:	mov    BYTE PTR [rbp-0x50],r15b
   14001c0fe:	lea    rcx,[rbp-0x10]
   14001c102:	call   QWORD PTR [rip+0x2d500]        # 0x140049608
   14001c108:	mov    r8,rax
   14001c10b:	lea    rdx,[rbp-0x10]
   14001c10f:	lea    rcx,[rbp-0x50]
   14001c113:	call   0x140005154
   14001c118:	nop
   14001c119:	or     r9,0xffffffffffffffff
   14001c11d:	xor    r8d,r8d
   14001c120:	lea    rdx,[rbp-0x50]
   14001c124:	mov    rcx,r14
   14001c127:	call   0x140005638
   14001c12c:	nop
   14001c12d:	cmp    QWORD PTR [rbp-0x38],0x10
   14001c132:	jb     0x14001c13e
   14001c134:	mov    rcx,QWORD PTR [rbp-0x50]
   14001c138:	call   QWORD PTR [rip+0x2d53a]        # 0x140049678
   14001c13e:	mov    rbx,QWORD PTR [r13+0x0]
   14001c142:	mov    rcx,QWORD PTR [rbx+0x8]
   14001c146:	cmp    rdi,rcx
   14001c149:	jae    0x14001c1b3
   14001c14b:	cmp    QWORD PTR [rbx],rdi
   14001c14e:	ja     0x14001c1b3
   14001c150:	mov    rsi,rdi
   14001c153:	sub    rsi,QWORD PTR [rbx]
   14001c156:	mov    rdx,QWORD PTR [rbx+0x10]
   14001c15a:	cmp    rcx,rdx
   14001c15d:	jne    0x14001c1a0
   14001c15f:	sub    rcx,QWORD PTR [rbx]
   14001c162:	cmp    rcx,0xfffffffffffffffe
   14001c166:	ja     0x14001c21b
   14001c16c:	inc    rcx
   14001c16f:	sub    rdx,QWORD PTR [rbx]
   14001c172:	cmp    rcx,rdx
   14001c175:	jbe    0x14001c1a0
   14001c177:	mov    r8,rdx
   14001c17a:	shr    r8,1
   14001c17d:	or     rax,0xffffffffffffffff
   14001c181:	sub    rax,r8
   14001c184:	cmp    rax,rdx
   14001c187:	jae    0x14001c18e
   14001c189:	mov    rdx,r15
   14001c18c:	jmp    0x14001c191
   14001c18e:	add    rdx,r8
   14001c191:	cmp    rdx,rcx
   14001c194:	cmovb  rdx,rcx
   14001c198:	mov    rcx,rbx
   14001c19b:	call   0x140009d00
   14001c1a0:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c1a4:	test   rdx,rdx
   14001c1a7:	je     0x14001c206
   14001c1a9:	mov    rax,QWORD PTR [rbx]
   14001c1ac:	mov    cl,BYTE PTR [rsi+rax*1]
   14001c1af:	mov    BYTE PTR [rdx],cl
   14001c1b1:	jmp    0x14001c206
   14001c1b3:	mov    rdx,QWORD PTR [rbx+0x10]
   14001c1b7:	cmp    rcx,rdx
   14001c1ba:	jne    0x14001c1f9
   14001c1bc:	sub    rcx,QWORD PTR [rbx]
   14001c1bf:	cmp    rcx,0xfffffffffffffffe
   14001c1c3:	ja     0x14001c229
   14001c1c5:	inc    rcx
   14001c1c8:	sub    rdx,QWORD PTR [rbx]
   14001c1cb:	cmp    rcx,rdx
   14001c1ce:	jbe    0x14001c1f9
   14001c1d0:	mov    r8,rdx
   14001c1d3:	shr    r8,1
   14001c1d6:	or     rax,0xffffffffffffffff
   14001c1da:	sub    rax,r8
   14001c1dd:	cmp    rax,rdx
   14001c1e0:	jae    0x14001c1e7
   14001c1e2:	mov    rdx,r15
   14001c1e5:	jmp    0x14001c1ea
   14001c1e7:	add    rdx,r8
   14001c1ea:	cmp    rdx,rcx
   14001c1ed:	cmovb  rdx,rcx
   14001c1f1:	mov    rcx,rbx
   14001c1f4:	call   0x140009d00
   14001c1f9:	mov    rcx,QWORD PTR [rbx+0x8]
   14001c1fd:	test   rcx,rcx
   14001c200:	je     0x14001c206
   14001c202:	mov    al,BYTE PTR [rdi]
   14001c204:	mov    BYTE PTR [rcx],al
   14001c206:	inc    QWORD PTR [rbx+0x8]
   14001c20a:	inc    r12d
   14001c20d:	inc    rdi
   14001c210:	cmp    r12d,0x10
   14001c214:	jae    0x14001c237
   14001c216:	jmp    0x14001c0d4
   14001c21b:	lea    rcx,[rip+0x34736]        # 0x140050958
   14001c222:	call   QWORD PTR [rip+0x2d370]        # 0x140049598
   14001c228:	int3   
   14001c229:	lea    rcx,[rip+0x34728]        # 0x140050958
   14001c230:	call   QWORD PTR [rip+0x2d362]        # 0x140049598
   14001c236:	int3   
   14001c237:	mov    rcx,QWORD PTR [rbp-0x8]
   14001c23b:	xor    rcx,rsp
   14001c23e:	call   0x14002b100
   14001c243:	mov    rbx,QWORD PTR [rsp+0xd8]
   14001c24b:	add    rsp,0x80
   14001c252:	pop    r15
   14001c254:	pop    r14
   14001c256:	pop    r13
   14001c258:	pop    r12
   14001c25a:	pop    rdi
   14001c25b:	pop    rsi
   14001c25c:	pop    rbp
   14001c25d:	ret    
   14001c25e:	int3   
   14001c25f:	int3   
   14001c260:	mov    QWORD PTR [rsp+0x8],rbx
   14001c265:	mov    QWORD PTR [rsp+0x10],rsi
   14001c26a:	push   rdi
   14001c26b:	sub    rsp,0x20
   14001c26f:	mov    rbx,QWORD PTR [rcx]
   14001c272:	mov    rdi,rdx
   14001c275:	mov    rsi,rcx
   14001c278:	mov    rax,QWORD PTR [rbx+0x8]
   14001c27c:	cmp    rdx,rax
   14001c27f:	jae    0x14001c2ef
   14001c281:	cmp    QWORD PTR [rbx],rdx
   14001c284:	ja     0x14001c2ef
   14001c286:	mov    rdx,QWORD PTR [rbx+0x10]
   14001c28a:	sub    rdi,QWORD PTR [rbx]
   14001c28d:	cmp    rax,rdx
   14001c290:	jne    0x14001c2dc
   14001c292:	sub    rax,QWORD PTR [rbx]
   14001c295:	cmp    rax,0xfffffffffffffffe
   14001c299:	jbe    0x14001c2a9
   14001c29b:	lea    rcx,[rip+0x346b6]        # 0x140050958
   14001c2a2:	call   QWORD PTR [rip+0x2d2f0]        # 0x140049598
   14001c2a8:	int3   
   14001c2a9:	sub    rdx,QWORD PTR [rbx]
   14001c2ac:	inc    rax
   14001c2af:	cmp    rax,rdx
   14001c2b2:	jbe    0x14001c2dc
   14001c2b4:	or     r8,0xffffffffffffffff
   14001c2b8:	mov    rcx,rdx
   14001c2bb:	shr    rcx,1
   14001c2be:	sub    r8,rcx
   14001c2c1:	cmp    r8,rdx
   14001c2c4:	jae    0x14001c2ca
   14001c2c6:	xor    edx,edx
   14001c2c8:	jmp    0x14001c2cd
   14001c2ca:	add    rdx,rcx
   14001c2cd:	cmp    rdx,rax
   14001c2d0:	mov    rcx,rbx
   14001c2d3:	cmovb  rdx,rax
   14001c2d7:	call   0x140009d00
   14001c2dc:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c2e0:	test   rdx,rdx
   14001c2e3:	je     0x14001c34f
   14001c2e5:	mov    rax,QWORD PTR [rbx]
   14001c2e8:	mov    cl,BYTE PTR [rdi+rax*1]
   14001c2eb:	mov    BYTE PTR [rdx],cl
   14001c2ed:	jmp    0x14001c34f
   14001c2ef:	mov    rdx,QWORD PTR [rbx+0x10]
   14001c2f3:	cmp    rax,rdx
   14001c2f6:	jne    0x14001c342
   14001c2f8:	sub    rax,QWORD PTR [rbx]
   14001c2fb:	cmp    rax,0xfffffffffffffffe
   14001c2ff:	jbe    0x14001c30f
   14001c301:	lea    rcx,[rip+0x34650]        # 0x140050958
   14001c308:	call   QWORD PTR [rip+0x2d28a]        # 0x140049598
   14001c30e:	int3   
   14001c30f:	sub    rdx,QWORD PTR [rbx]
   14001c312:	inc    rax
   14001c315:	cmp    rax,rdx
   14001c318:	jbe    0x14001c342
   14001c31a:	or     r8,0xffffffffffffffff
   14001c31e:	mov    rcx,rdx
   14001c321:	shr    rcx,1
   14001c324:	sub    r8,rcx
   14001c327:	cmp    r8,rdx
   14001c32a:	jae    0x14001c330
   14001c32c:	xor    edx,edx
   14001c32e:	jmp    0x14001c333
   14001c330:	add    rdx,rcx
   14001c333:	cmp    rdx,rax
   14001c336:	mov    rcx,rbx
   14001c339:	cmovb  rdx,rax
   14001c33d:	call   0x140009d00
   14001c342:	mov    rcx,QWORD PTR [rbx+0x8]
   14001c346:	test   rcx,rcx
   14001c349:	je     0x14001c34f
   14001c34b:	mov    al,BYTE PTR [rdi]
   14001c34d:	mov    BYTE PTR [rcx],al
   14001c34f:	inc    QWORD PTR [rbx+0x8]
   14001c353:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c358:	mov    rax,rsi
   14001c35b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c360:	add    rsp,0x20
   14001c364:	pop    rdi
   14001c365:	ret    
   14001c366:	int3   
   14001c367:	int3   
   14001c368:	mov    rax,rsp
   14001c36b:	mov    QWORD PTR [rax+0x18],r8
   14001c36f:	mov    QWORD PTR [rax+0x10],rdx
   14001c373:	mov    QWORD PTR [rax+0x8],rcx
   14001c377:	push   rdi
   14001c378:	sub    rsp,0x30
   14001c37c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c385:	mov    QWORD PTR [rax+0x20],rbx
   14001c389:	mov    rax,r8
   14001c38c:	mov    rbx,rcx
   14001c38f:	sub    rax,rdx
   14001c392:	mov    rdi,QWORD PTR [rcx+0x10]
   14001c396:	cmp    rdi,rax
   14001c399:	ja     0x14001c3cc
   14001c39b:	cmp    QWORD PTR [rcx+0x18],rax
   14001c39f:	je     0x14001c3cc
   14001c3a1:	mov    r8b,0x1
   14001c3a4:	mov    rdx,rax
   14001c3a7:	call   0x140005324
   14001c3ac:	test   al,al
   14001c3ae:	je     0x14001c3c7
   14001c3b0:	mov    QWORD PTR [rbx+0x10],rdi
   14001c3b4:	cmp    QWORD PTR [rbx+0x18],0x10
   14001c3b9:	jb     0x14001c3c0
   14001c3bb:	mov    rax,QWORD PTR [rbx]
   14001c3be:	jmp    0x14001c3c3
   14001c3c0:	mov    rax,rbx
   14001c3c3:	mov    BYTE PTR [rax+rdi*1],0x0
   14001c3c7:	mov    rdx,QWORD PTR [rsp+0x48]
   14001c3cc:	cmp    rdx,QWORD PTR [rsp+0x50]
   14001c3d1:	je     0x14001c3f2
   14001c3d3:	mov    r8b,BYTE PTR [rdx]
   14001c3d6:	mov    edx,0x1
   14001c3db:	mov    rcx,rbx
   14001c3de:	call   0x1400047bc
   14001c3e3:	mov    rdx,QWORD PTR [rsp+0x48]
   14001c3e8:	inc    rdx
   14001c3eb:	mov    QWORD PTR [rsp+0x48],rdx
   14001c3f0:	jmp    0x14001c3cc
   14001c3f2:	mov    rbx,QWORD PTR [rsp+0x58]
   14001c3f7:	add    rsp,0x30
   14001c3fb:	pop    rdi
   14001c3fc:	ret    
   14001c3fd:	int3   
   14001c3fe:	int3   
   14001c3ff:	int3   
   14001c400:	rex push rbx
   14001c402:	sub    rsp,0x20
   14001c406:	cmp    QWORD PTR [rip+0x4e402],0x0        # 0x14006a810
   14001c40e:	je     0x14001c4cf
   14001c414:	cmp    QWORD PTR [rip+0x4e3e4],0x0        # 0x14006a800
   14001c41c:	je     0x14001c4cf
   14001c422:	and    DWORD PTR [rsp+0x30],0x0
   14001c427:	call   QWORD PTR [rip+0x2ccdb]        # 0x140049108
   14001c42d:	xor    edx,edx
   14001c42f:	mov    rcx,rax
   14001c432:	mov    r8d,0x360
   14001c438:	call   QWORD PTR [rip+0x2ccba]        # 0x1400490f8
   14001c43e:	mov    rbx,rax
   14001c441:	test   rax,rax
   14001c444:	je     0x14001c4cf
   14001c44a:	lea    rdx,[rsp+0x30]
   14001c44f:	xor    r8d,r8d
   14001c452:	mov    rcx,rax
   14001c455:	mov    DWORD PTR [rsp+0x30],0x360
   14001c45d:	call   QWORD PTR [rip+0x4e39d]        # 0x14006a800
   14001c463:	cmp    eax,0x7a
   14001c466:	jne    0x14001c49c
   14001c468:	call   QWORD PTR [rip+0x2cc9a]        # 0x140049108
   14001c46e:	mov    r8,rbx
   14001c471:	xor    edx,edx
   14001c473:	mov    rcx,rax
   14001c476:	call   QWORD PTR [rip+0x2cc84]        # 0x140049100
   14001c47c:	mov    ebx,DWORD PTR [rsp+0x30]
   14001c480:	call   QWORD PTR [rip+0x2cc82]        # 0x140049108
   14001c486:	mov    rcx,rax
   14001c489:	mov    r8d,ebx
   14001c48c:	xor    edx,edx
   14001c48e:	call   QWORD PTR [rip+0x2cc64]        # 0x1400490f8
   14001c494:	mov    rbx,rax
   14001c497:	test   rax,rax
   14001c49a:	je     0x14001c4cf
   14001c49c:	lea    rdx,[rsp+0x30]
   14001c4a1:	xor    r8d,r8d
   14001c4a4:	mov    rcx,rbx
   14001c4a7:	call   QWORD PTR [rip+0x4e353]        # 0x14006a800
   14001c4ad:	test   eax,eax
   14001c4af:	jne    0x14001c4b6
   14001c4b1:	mov    rax,rbx
   14001c4b4:	jmp    0x14001c4d1
   14001c4b6:	test   rbx,rbx
   14001c4b9:	je     0x14001c4cf
   14001c4bb:	call   QWORD PTR [rip+0x2cc47]        # 0x140049108
   14001c4c1:	mov    r8,rbx
   14001c4c4:	xor    edx,edx
   14001c4c6:	mov    rcx,rax
   14001c4c9:	call   QWORD PTR [rip+0x2cc31]        # 0x140049100
   14001c4cf:	xor    eax,eax
   14001c4d1:	add    rsp,0x20
   14001c4d5:	pop    rbx
   14001c4d6:	ret    
   14001c4d7:	int3   
   14001c4d8:	mov    QWORD PTR [rsp+0x10],rbx
   14001c4dd:	mov    QWORD PTR [rsp+0x18],rsi
   14001c4e2:	push   rdi
   14001c4e3:	sub    rsp,0x30
   14001c4e7:	xor    edi,edi
   14001c4e9:	cmp    QWORD PTR [rip+0x4e320],rdi        # 0x14006a810
   14001c4f0:	je     0x14001c5e7
   14001c4f6:	cmp    QWORD PTR [rip+0x4e30b],rdi        # 0x14006a808
   14001c4fd:	je     0x14001c5e7
   14001c503:	call   QWORD PTR [rip+0x2cbff]        # 0x140049108
   14001c509:	xor    edx,edx
   14001c50b:	mov    r8d,0x1c0
   14001c511:	mov    rcx,rax
   14001c514:	call   QWORD PTR [rip+0x2cbde]        # 0x1400490f8
   14001c51a:	mov    rbx,rax
   14001c51d:	test   rax,rax
   14001c520:	je     0x14001c5e7
   14001c526:	lea    rax,[rsp+0x40]
   14001c52b:	lea    ecx,[rdi+0x17]
   14001c52e:	mov    r9,rbx
   14001c531:	xor    r8d,r8d
   14001c534:	xor    edx,edx
   14001c536:	mov    DWORD PTR [rsp+0x40],edi
   14001c53a:	mov    QWORD PTR [rsp+0x20],rax
   14001c53f:	call   QWORD PTR [rip+0x4e2c3]        # 0x14006a808
   14001c545:	cmp    eax,0x6f
   14001c548:	jne    0x14001c57e
   14001c54a:	call   QWORD PTR [rip+0x2cbb8]        # 0x140049108
   14001c550:	mov    r8,rbx
   14001c553:	xor    edx,edx
   14001c555:	mov    rcx,rax
   14001c558:	call   QWORD PTR [rip+0x2cba2]        # 0x140049100
   14001c55e:	mov    ebx,DWORD PTR [rsp+0x40]
   14001c562:	call   QWORD PTR [rip+0x2cba0]        # 0x140049108
   14001c568:	mov    rcx,rax
   14001c56b:	mov    r8d,ebx
   14001c56e:	xor    edx,edx
   14001c570:	call   QWORD PTR [rip+0x2cb82]        # 0x1400490f8
   14001c576:	mov    rbx,rax
   14001c579:	test   rax,rax
   14001c57c:	je     0x14001c5e7
   14001c57e:	xor    edx,edx
   14001c580:	lea    rax,[rsp+0x40]
   14001c585:	mov    r9,rbx
   14001c588:	lea    ecx,[rdx+0x17]
   14001c58b:	xor    r8d,r8d
   14001c58e:	mov    QWORD PTR [rsp+0x20],rax
   14001c593:	call   QWORD PTR [rip+0x4e26f]        # 0x14006a808
   14001c599:	test   eax,eax
   14001c59b:	jne    0x14001c5e2
   14001c59d:	mov    rsi,rbx
   14001c5a0:	test   rbx,rbx
   14001c5a3:	je     0x14001c5e2
   14001c5a5:	cmp    DWORD PTR [rbx+0x68],0x1
   14001c5a9:	jne    0x14001c5c0
   14001c5ab:	cmp    DWORD PTR [rbx+0x64],0x17
   14001c5af:	je     0x14001c5c0
   14001c5b1:	cmp    DWORD PTR [rbx+0x64],0x83
   14001c5b8:	je     0x14001c5c0
   14001c5ba:	cmp    DWORD PTR [rbx+0x64],0x18
   14001c5be:	jne    0x14001c5cb
   14001c5c0:	mov    rbx,QWORD PTR [rbx+0x8]
   14001c5c4:	test   rbx,rbx
   14001c5c7:	je     0x14001c5ce
   14001c5c9:	jmp    0x14001c5a5
   14001c5cb:	mov    dil,0x1
   14001c5ce:	call   QWORD PTR [rip+0x2cb34]        # 0x140049108
   14001c5d4:	mov    r8,rsi
   14001c5d7:	xor    edx,edx
   14001c5d9:	mov    rcx,rax
   14001c5dc:	call   QWORD PTR [rip+0x2cb1e]        # 0x140049100
   14001c5e2:	mov    al,dil
   14001c5e5:	jmp    0x14001c5e9
   14001c5e7:	xor    al,al
   14001c5e9:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c5ee:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c5f3:	add    rsp,0x30
   14001c5f7:	pop    rdi
   14001c5f8:	ret    
   14001c5f9:	int3   
   14001c5fa:	int3   
   14001c5fb:	int3   
   14001c5fc:	mov    rax,rsp
   14001c5ff:	mov    QWORD PTR [rax+0x8],rbx
   14001c603:	mov    QWORD PTR [rax+0x10],rsi
   14001c607:	mov    QWORD PTR [rax+0x18],rdi
   14001c60b:	push   rbp
   14001c60c:	lea    rbp,[rax-0x98]
   14001c613:	sub    rsp,0x190
   14001c61a:	mov    rax,QWORD PTR [rip+0x4bbcf]        # 0x1400681f0
   14001c621:	xor    rax,rsp
   14001c624:	mov    QWORD PTR [rbp+0x80],rax
   14001c62b:	mov    rax,QWORD PTR [rip+0x4e1de]        # 0x14006a810
   14001c632:	xor    ebx,ebx
   14001c634:	test   rax,rax
   14001c637:	jne    0x14001c6c5
   14001c63d:	lea    rcx,[rip+0x34ff4]        # 0x140051638
   14001c644:	call   QWORD PTR [rip+0x2ca06]        # 0x140049050
   14001c64a:	mov    QWORD PTR [rip+0x4e1bf],rax        # 0x14006a810
   14001c651:	test   rax,rax
   14001c654:	je     0x14001c6c5
   14001c656:	lea    rdx,[rip+0x34ffb]        # 0x140051658
   14001c65d:	mov    rcx,rax
   14001c660:	call   QWORD PTR [rip+0x2ca0a]        # 0x140049070
   14001c666:	mov    rcx,QWORD PTR [rip+0x4e1a3]        # 0x14006a810
   14001c66d:	lea    rdx,[rip+0x34ffc]        # 0x140051670
   14001c674:	mov    QWORD PTR [rip+0x4e175],rax        # 0x14006a7f0
   14001c67b:	call   QWORD PTR [rip+0x2c9ef]        # 0x140049070
   14001c681:	mov    rcx,QWORD PTR [rip+0x4e188]        # 0x14006a810
   14001c688:	lea    rdx,[rip+0x34ff9]        # 0x140051688
   14001c68f:	mov    QWORD PTR [rip+0x4e162],rax        # 0x14006a7f8
   14001c696:	call   QWORD PTR [rip+0x2c9d4]        # 0x140049070
   14001c69c:	mov    rcx,QWORD PTR [rip+0x4e16d]        # 0x14006a810
   14001c6a3:	lea    rdx,[rip+0x34fee]        # 0x140051698
   14001c6aa:	mov    QWORD PTR [rip+0x4e14f],rax        # 0x14006a800
   14001c6b1:	call   QWORD PTR [rip+0x2c9b9]        # 0x140049070
   14001c6b7:	mov    QWORD PTR [rip+0x4e14a],rax        # 0x14006a808
   14001c6be:	mov    rax,QWORD PTR [rip+0x4e14b]        # 0x14006a810
   14001c6c5:	mov    DWORD PTR [rsp+0x20],ebx
   14001c6c9:	test   rax,rax
   14001c6cc:	je     0x14001c82b
   14001c6d2:	mov    edi,0x11c
   14001c6d7:	lea    rcx,[rsp+0x64]
   14001c6dc:	xor    edx,edx
   14001c6de:	lea    r8d,[rdi-0x4]
   14001c6e2:	mov    DWORD PTR [rsp+0x60],edi
   14001c6e6:	call   0x14002b144
   14001c6eb:	lea    rcx,[rsp+0x60]
   14001c6f0:	call   QWORD PTR [rip+0x2c96a]        # 0x140049060
   14001c6f6:	test   eax,eax
   14001c6f8:	jne    0x14001c71d
   14001c6fa:	lea    rcx,[rsp+0x60]
   14001c6ff:	mov    r8d,edi
   14001c702:	xor    edx,edx
   14001c704:	call   QWORD PTR [rip+0x2cf4e]        # 0x140049658
   14001c70a:	lea    rcx,[rsp+0x60]
   14001c70f:	mov    DWORD PTR [rsp+0x60],0x114
   14001c717:	call   QWORD PTR [rip+0x2c943]        # 0x140049060
   14001c71d:	cmp    DWORD PTR [rsp+0x64],0x5
   14001c722:	mov    esi,0x17
   14001c727:	jb     0x14001c797
   14001c729:	jne    0x14001c731
   14001c72b:	cmp    DWORD PTR [rsp+0x68],ebx
   14001c72f:	je     0x14001c797
   14001c731:	cmp    QWORD PTR [rip+0x4e0b8],rbx        # 0x14006a7f0
   14001c738:	je     0x14001c82b
   14001c73e:	xor    edx,edx
   14001c740:	lea    rcx,[rsp+0x28]
   14001c745:	lea    r8d,[rdx+0x10]
   14001c749:	call   QWORD PTR [rip+0x2cf09]        # 0x140049658
   14001c74f:	mov    r11d,0x2
   14001c755:	lea    rdx,[rsp+0x20]
   14001c75a:	lea    rcx,[rsp+0x28]
   14001c75f:	mov    WORD PTR [rsp+0x28],r11w
   14001c765:	call   QWORD PTR [rip+0x4e085]        # 0x14006a7f0
   14001c76b:	test   eax,eax
   14001c76d:	je     0x14001c7b2
   14001c76f:	xor    edx,edx
   14001c771:	lea    rcx,[rsp+0x38]
   14001c776:	lea    r8d,[rdx+0x1c]
   14001c77a:	call   QWORD PTR [rip+0x2ced8]        # 0x140049658
   14001c780:	lea    rdx,[rsp+0x20]
   14001c785:	lea    rcx,[rsp+0x38]
   14001c78a:	mov    WORD PTR [rsp+0x38],si
   14001c78f:	call   QWORD PTR [rip+0x4e05b]        # 0x14006a7f0
   14001c795:	jmp    0x14001c7b0
   14001c797:	mov    rax,QWORD PTR [rip+0x4e05a]        # 0x14006a7f8
   14001c79e:	test   rax,rax
   14001c7a1:	je     0x14001c82b
   14001c7a7:	lea    rdx,[rsp+0x20]
   14001c7ac:	xor    ecx,ecx
   14001c7ae:	call   rax
   14001c7b0:	test   eax,eax
   14001c7b2:	sete   al
   14001c7b5:	test   al,al
   14001c7b7:	je     0x14001c82b
   14001c7b9:	call   0x14001c400
   14001c7be:	mov    rdi,rax
   14001c7c1:	test   rax,rax
   14001c7c4:	je     0x14001c832
   14001c7c6:	mov    eax,ebx
   14001c7c8:	mov    r8d,0x1
   14001c7ce:	cmp    DWORD PTR [rdi],ebx
   14001c7d0:	jle    0x14001c7f0
   14001c7d2:	mov    edx,DWORD PTR [rsp+0x20]
   14001c7d6:	lea    rcx,[rdi+0x4]
   14001c7da:	cmp    DWORD PTR [rcx+0x200],edx
   14001c7e0:	je     0x14001c7f3
   14001c7e2:	add    eax,r8d
   14001c7e5:	add    rcx,0x35c
   14001c7ec:	cmp    eax,DWORD PTR [rdi]
   14001c7ee:	jl     0x14001c7da
   14001c7f0:	mov    rcx,rbx
   14001c7f3:	test   rcx,rcx
   14001c7f6:	je     0x14001c815
   14001c7f8:	mov    eax,DWORD PTR [rcx+0x220]
   14001c7fe:	cmp    eax,0x5
   14001c801:	je     0x14001c808
   14001c803:	cmp    eax,0x4
   14001c806:	jne    0x14001c815
   14001c808:	cmp    DWORD PTR [rcx+0x204],esi
   14001c80e:	movzx  ebx,bl
   14001c811:	cmovne ebx,r8d
   14001c815:	call   QWORD PTR [rip+0x2c8ed]        # 0x140049108
   14001c81b:	mov    r8,rdi
   14001c81e:	xor    edx,edx
   14001c820:	mov    rcx,rax
   14001c823:	call   QWORD PTR [rip+0x2c8d7]        # 0x140049100
   14001c829:	jmp    0x14001c832
   14001c82b:	call   0x14001c4d8
   14001c830:	mov    bl,al
   14001c832:	mov    al,bl
   14001c834:	mov    rcx,QWORD PTR [rbp+0x80]
   14001c83b:	xor    rcx,rsp
   14001c83e:	call   0x14002b100
   14001c843:	lea    r11,[rsp+0x190]
   14001c84b:	mov    rbx,QWORD PTR [r11+0x10]
   14001c84f:	mov    rsi,QWORD PTR [r11+0x18]
   14001c853:	mov    rdi,QWORD PTR [r11+0x20]
   14001c857:	mov    rsp,r11
   14001c85a:	pop    rbp
   14001c85b:	ret    
   14001c85c:	rex push rbx
   14001c85e:	sub    rsp,0x20
   14001c862:	mov    rbx,rcx
   14001c865:	mov    rcx,QWORD PTR [rcx]
   14001c868:	test   rcx,rcx
   14001c86b:	je     0x14001c877
   14001c86d:	call   QWORD PTR [rip+0x2c795]        # 0x140049008
   14001c873:	and    QWORD PTR [rbx],0x0
   14001c877:	add    rsp,0x20
   14001c87b:	pop    rbx
   14001c87c:	ret    
   14001c87d:	int3   
   14001c87e:	int3   
   14001c87f:	int3   
   14001c880:	mov    QWORD PTR [rsp+0x20],rbx
   14001c885:	push   rdi
   14001c886:	sub    rsp,0x70
   14001c88a:	mov    rax,QWORD PTR [rip+0x4b95f]        # 0x1400681f0
   14001c891:	xor    rax,rsp
   14001c894:	mov    QWORD PTR [rsp+0x60],rax
   14001c899:	cmp    QWORD PTR [rdx+0x10],0x0
   14001c89e:	mov    rbx,rdx
   14001c8a1:	mov    rdi,rcx
   14001c8a4:	jne    0x14001c8aa
   14001c8a6:	xor    al,al
   14001c8a8:	jmp    0x14001c913
   14001c8aa:	and    QWORD PTR [rsp+0x30],0x0
   14001c8b0:	cmp    QWORD PTR [rdx+0x18],0x8
   14001c8b5:	jb     0x14001c8ba
   14001c8b7:	mov    rdx,QWORD PTR [rdx]
   14001c8ba:	mov    r9d,DWORD PTR [r8]
   14001c8bd:	mov    rcx,QWORD PTR [rcx]
   14001c8c0:	lea    rax,[rsp+0x30]
   14001c8c5:	xor    r8d,r8d
   14001c8c8:	mov    QWORD PTR [rsp+0x20],rax
   14001c8cd:	call   QWORD PTR [rip+0x2c73d]        # 0x140049010
   14001c8d3:	test   eax,eax
   14001c8d5:	je     0x14001c900
   14001c8d7:	lea    rdx,[rip+0x34dd2]        # 0x1400516b0
   14001c8de:	lea    rcx,[rsp+0x38]
   14001c8e3:	mov    r8,rbx
   14001c8e6:	call   0x1400188a4
   14001c8eb:	cmp    QWORD PTR [rsp+0x50],0x8
   14001c8f1:	jb     0x14001c8a6
   14001c8f3:	mov    rcx,QWORD PTR [rsp+0x38]
   14001c8f8:	call   QWORD PTR [rip+0x2cd7a]        # 0x140049678
   14001c8fe:	jmp    0x14001c8a6
   14001c900:	mov    rcx,QWORD PTR [rdi]
   14001c903:	call   QWORD PTR [rip+0x2c6ff]        # 0x140049008
   14001c909:	mov    r11,QWORD PTR [rsp+0x30]
   14001c90e:	mov    al,0x1
   14001c910:	mov    QWORD PTR [rdi],r11
   14001c913:	mov    rcx,QWORD PTR [rsp+0x60]
   14001c918:	xor    rcx,rsp
   14001c91b:	call   0x14002b100
   14001c920:	mov    rbx,QWORD PTR [rsp+0x98]
   14001c928:	add    rsp,0x70
   14001c92c:	pop    rdi
   14001c92d:	ret    
   14001c92e:	int3   
   14001c92f:	int3   
   14001c930:	mov    rax,rsp
   14001c933:	push   rbp
   14001c934:	push   rsi
   14001c935:	push   rdi
   14001c936:	push   r12
   14001c938:	push   r13
   14001c93a:	lea    rbp,[rax-0xb8]
   14001c941:	sub    rsp,0x190
   14001c948:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001c951:	mov    QWORD PTR [rax+0x20],rbx
   14001c955:	mov    rax,QWORD PTR [rip+0x4b894]        # 0x1400681f0
   14001c95c:	xor    rax,rsp
   14001c95f:	mov    QWORD PTR [rbp+0x80],rax
   14001c966:	mov    r12,r8
   14001c969:	mov    rbx,rdx
   14001c96c:	mov    r13,rcx
   14001c96f:	xor    edi,edi
   14001c971:	mov    DWORD PTR [rsp+0x38],edi
   14001c975:	mov    DWORD PTR [rsp+0x30],edi
   14001c979:	mov    DWORD PTR [rsp+0x34],0x400
   14001c981:	mov    ecx,0x802
   14001c986:	call   0x14002b058
   14001c98b:	mov    rsi,rax
   14001c98e:	xor    edx,edx
   14001c990:	mov    r8d,0x802
   14001c996:	mov    rcx,rax
   14001c999:	call   QWORD PTR [rip+0x2ccb9]        # 0x140049658
   14001c99f:	cmp    QWORD PTR [rbx+0x18],0x8
   14001c9a4:	jb     0x14001c9ab
   14001c9a6:	mov    rdx,QWORD PTR [rbx]
   14001c9a9:	jmp    0x14001c9ae
   14001c9ab:	mov    rdx,rbx
   14001c9ae:	lea    rax,[rsp+0x34]
   14001c9b3:	mov    QWORD PTR [rsp+0x28],rax
   14001c9b8:	mov    QWORD PTR [rsp+0x20],rsi
   14001c9bd:	lea    r9,[rsp+0x30]
   14001c9c2:	xor    r8d,r8d
   14001c9c5:	mov    rcx,QWORD PTR [r13+0x0]
   14001c9c9:	call   QWORD PTR [rip+0x2c649]        # 0x140049018
   14001c9cf:	test   eax,eax
   14001c9d1:	je     0x14001ca00
   14001c9d3:	mov    r8,rbx
   14001c9d6:	lea    rdx,[rip+0x34d13]        # 0x1400516f0
   14001c9dd:	lea    rcx,[rbp+0x50]
   14001c9e1:	call   0x1400188a4
   14001c9e6:	cmp    QWORD PTR [rbp+0x68],0x8
   14001c9eb:	jb     0x14001cb0d
   14001c9f1:	mov    rcx,QWORD PTR [rbp+0x50]
   14001c9f5:	call   QWORD PTR [rip+0x2cc7d]        # 0x140049678
   14001c9fb:	jmp    0x14001cb0d
   14001ca00:	cmp    DWORD PTR [rsp+0x30],0x4
   14001ca05:	jne    0x14001caf3
   14001ca0b:	mov    ebx,DWORD PTR [rsi]
   14001ca0d:	lea    rax,[rip+0x34d6c]        # 0x140051780
   14001ca14:	mov    QWORD PTR [rsp+0x50],rax
   14001ca19:	lea    rax,[rip+0x34510]        # 0x140050f30
   14001ca20:	mov    QWORD PTR [rsp+0x60],rax
   14001ca25:	lea    rcx,[rbp-0x18]
   14001ca29:	call   QWORD PTR [rip+0x2c971]        # 0x1400493a0
   14001ca2f:	nop
   14001ca30:	mov    DWORD PTR [rsp+0x38],0x1
   14001ca38:	xor    r8d,r8d
   14001ca3b:	lea    rdx,[rsp+0x68]
   14001ca40:	lea    rcx,[rsp+0x50]
   14001ca45:	call   QWORD PTR [rip+0x2cadd]        # 0x140049528
   14001ca4b:	nop
   14001ca4c:	mov    rax,QWORD PTR [rsp+0x50]
   14001ca51:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ca55:	lea    r13,[rip+0x34d1c]        # 0x140051778
   14001ca5c:	mov    QWORD PTR [rsp+rcx*1+0x50],r13
   14001ca61:	lea    rcx,[rsp+0x68]
   14001ca66:	call   QWORD PTR [rip+0x2c91c]        # 0x140049388
   14001ca6c:	nop
   14001ca6d:	lea    rax,[rip+0x340e4]        # 0x140050b58
   14001ca74:	mov    QWORD PTR [rsp+0x68],rax
   14001ca79:	mov    QWORD PTR [rbp-0x28],rdi
   14001ca7d:	mov    DWORD PTR [rbp-0x20],edi
   14001ca80:	mov    edx,ebx
   14001ca82:	lea    rcx,[rsp+0x60]
   14001ca87:	call   QWORD PTR [rip+0x2caab]        # 0x140049538
   14001ca8d:	lea    rdx,[rbp+0x50]
   14001ca91:	lea    rcx,[rsp+0x50]
   14001ca96:	call   0x14001ccf0
   14001ca9b:	nop
   14001ca9c:	mov    rdx,rax
   14001ca9f:	mov    rcx,r12
   14001caa2:	call   0x140009880
   14001caa7:	nop
   14001caa8:	cmp    QWORD PTR [rbp+0x68],0x8
   14001caad:	jb     0x14001caba
   14001caaf:	mov    rcx,QWORD PTR [rbp+0x50]
   14001cab3:	call   QWORD PTR [rip+0x2cbbf]        # 0x140049678
   14001cab9:	nop
   14001caba:	lea    rax,[rbp-0x18]
   14001cabe:	mov    QWORD PTR [rsp+0x38],rax
   14001cac3:	mov    rax,QWORD PTR [rsp+0x50]
   14001cac8:	movsxd rcx,DWORD PTR [rax+0x4]
   14001cacc:	mov    QWORD PTR [rsp+rcx*1+0x50],r13
   14001cad1:	lea    rcx,[rsp+0x68]
   14001cad6:	call   0x14000b404
   14001cadb:	nop
   14001cadc:	lea    rcx,[rsp+0x68]
   14001cae1:	call   QWORD PTR [rip+0x2ca49]        # 0x140049530
   14001cae7:	lea    rcx,[rbp-0x18]
   14001caeb:	call   QWORD PTR [rip+0x2c90f]        # 0x140049400
   14001caf1:	jmp    0x14001cb0a
   14001caf3:	mov    rcx,rsi
   14001caf6:	call   QWORD PTR [rip+0x2cbb4]        # 0x1400496b0
   14001cafc:	mov    r8,rax
   14001caff:	mov    rdx,rsi
   14001cb02:	mov    rcx,r12
   14001cb05:	call   0x1400096cc
   14001cb0a:	mov    dil,0x1
   14001cb0d:	mov    rcx,rsi
   14001cb10:	call   QWORD PTR [rip+0x2cb52]        # 0x140049668
   14001cb16:	mov    al,dil
   14001cb19:	mov    rcx,QWORD PTR [rbp+0x80]
   14001cb20:	xor    rcx,rsp
   14001cb23:	call   0x14002b100
   14001cb28:	mov    rbx,QWORD PTR [rsp+0x1d8]
   14001cb30:	add    rsp,0x190
   14001cb37:	pop    r13
   14001cb39:	pop    r12
   14001cb3b:	pop    rdi
   14001cb3c:	pop    rsi
   14001cb3d:	pop    rbp
   14001cb3e:	ret    
   14001cb3f:	int3   
   14001cb40:	rex push rdi
   14001cb42:	sub    rsp,0x30
   14001cb46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cb4f:	mov    QWORD PTR [rsp+0x48],rbx
   14001cb54:	lea    rdi,[rcx+0x98]
   14001cb5b:	mov    QWORD PTR [rsp+0x40],rdi
   14001cb60:	mov    rax,QWORD PTR [rdi-0x98]
   14001cb67:	movsxd rdx,DWORD PTR [rax+0x4]
   14001cb6b:	lea    rax,[rip+0x34c06]        # 0x140051778
   14001cb72:	mov    QWORD PTR [rdx+rdi*1-0x98],rax
   14001cb7a:	lea    rcx,[rdi-0x80]
   14001cb7e:	call   0x14000b404
   14001cb83:	nop
   14001cb84:	lea    rcx,[rdi-0x80]
   14001cb88:	call   QWORD PTR [rip+0x2c9a2]        # 0x140049530
   14001cb8e:	mov    rcx,rdi
   14001cb91:	mov    rbx,QWORD PTR [rsp+0x48]
   14001cb96:	add    rsp,0x30
   14001cb9a:	pop    rdi
   14001cb9b:	rex.W jmp QWORD PTR [rip+0x2c85e]        # 0x140049400
   14001cba2:	int3   
   14001cba3:	int3   
   14001cba4:	rex push rbp
   14001cba6:	push   rbx
   14001cba7:	push   rsi
   14001cba8:	push   rdi
   14001cba9:	push   r12
   14001cbab:	lea    rbp,[rsp-0x37]
   14001cbb0:	sub    rsp,0xc0
   14001cbb7:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   14001cbbf:	mov    rax,QWORD PTR [rip+0x4b62a]        # 0x1400681f0
   14001cbc6:	xor    rax,rsp
   14001cbc9:	mov    QWORD PTR [rbp+0x27],rax
   14001cbcd:	mov    rbx,r8
   14001cbd0:	mov    rdi,rdx
   14001cbd3:	mov    rsi,rcx
   14001cbd6:	xor    r12d,r12d
   14001cbd9:	cmp    QWORD PTR [rdx+0x10],r12
   14001cbdd:	jne    0x14001cbe6
   14001cbdf:	xor    al,al
   14001cbe1:	jmp    0x14001ccd4
   14001cbe6:	cmp    QWORD PTR [r8+0x18],0x8
   14001cbeb:	jb     0x14001cbf2
   14001cbed:	mov    rcx,QWORD PTR [r8]
   14001cbf0:	jmp    0x14001cbf5
   14001cbf2:	mov    rcx,rbx
   14001cbf5:	call   QWORD PTR [rip+0x2c515]        # 0x140049110
   14001cbfb:	lea    ecx,[rax+rax*1+0x2]
   14001cbff:	cmp    QWORD PTR [rbx+0x18],0x8
   14001cc04:	jb     0x14001cc0b
   14001cc06:	mov    rax,QWORD PTR [rbx]
   14001cc09:	jmp    0x14001cc0e
   14001cc0b:	mov    rax,rbx
   14001cc0e:	cmp    QWORD PTR [rdi+0x18],0x8
   14001cc13:	jb     0x14001cc1a
   14001cc15:	mov    rdx,QWORD PTR [rdi]
   14001cc18:	jmp    0x14001cc1d
   14001cc1a:	mov    rdx,rdi
   14001cc1d:	mov    DWORD PTR [rsp+0x28],ecx
   14001cc21:	mov    QWORD PTR [rsp+0x20],rax
   14001cc26:	mov    r9d,0x1
   14001cc2c:	xor    r8d,r8d
   14001cc2f:	mov    rcx,QWORD PTR [rsi]
   14001cc32:	call   QWORD PTR [rip+0x2c3c8]        # 0x140049000
   14001cc38:	test   eax,eax
   14001cc3a:	je     0x14001ccd2
   14001cc40:	mov    r8,rbx
   14001cc43:	lea    rdx,[rip+0x34afe]        # 0x140051748
   14001cc4a:	lea    rcx,[rbp-0x1]
   14001cc4e:	call   0x1400188a4
   14001cc53:	nop
   14001cc54:	lea    r8,[rip+0x34ad5]        # 0x140051730
   14001cc5b:	mov    rdx,rax
   14001cc5e:	lea    rcx,[rbp-0x29]
   14001cc62:	call   0x140014560
   14001cc67:	nop
   14001cc68:	mov    r8,rdi
   14001cc6b:	mov    rdx,rax
   14001cc6e:	lea    rcx,[rbp-0x51]
   14001cc72:	call   0x14000d34c
   14001cc77:	cmp    QWORD PTR [rbp-0x39],0x8
   14001cc7c:	jb     0x14001cc88
   14001cc7e:	mov    rcx,QWORD PTR [rbp-0x51]
   14001cc82:	call   QWORD PTR [rip+0x2c9f0]        # 0x140049678
   14001cc88:	mov    ebx,0x7
   14001cc8d:	mov    QWORD PTR [rbp-0x39],rbx
   14001cc91:	mov    QWORD PTR [rbp-0x41],r12
   14001cc95:	mov    WORD PTR [rbp-0x51],r12w
   14001cc9a:	cmp    QWORD PTR [rbp-0x11],0x8
   14001cc9f:	jb     0x14001ccab
   14001cca1:	mov    rcx,QWORD PTR [rbp-0x29]
   14001cca5:	call   QWORD PTR [rip+0x2c9cd]        # 0x140049678
   14001ccab:	mov    QWORD PTR [rbp-0x11],rbx
   14001ccaf:	mov    QWORD PTR [rbp-0x19],r12
   14001ccb3:	mov    WORD PTR [rbp-0x29],r12w
   14001ccb8:	cmp    QWORD PTR [rbp+0x17],0x8
   14001ccbd:	jb     0x14001cbdf
   14001ccc3:	mov    rcx,QWORD PTR [rbp-0x1]
   14001ccc7:	call   QWORD PTR [rip+0x2c9ab]        # 0x140049678
   14001cccd:	jmp    0x14001cbdf
   14001ccd2:	mov    al,0x1
   14001ccd4:	mov    rcx,QWORD PTR [rbp+0x27]
   14001ccd8:	xor    rcx,rsp
   14001ccdb:	call   0x14002b100
   14001cce0:	add    rsp,0xc0
   14001cce7:	pop    r12
   14001cce9:	pop    rdi
   14001ccea:	pop    rsi
   14001cceb:	pop    rbx
   14001ccec:	pop    rbp
   14001cced:	ret    
   14001ccee:	int3   
   14001ccef:	int3   
   14001ccf0:	rex push rbx
   14001ccf2:	sub    rsp,0x20
   14001ccf6:	and    DWORD PTR [rsp+0x30],0x0
   14001ccfb:	add    rcx,0x18
   14001ccff:	mov    rbx,rdx
   14001cd02:	call   0x14000ca34
   14001cd07:	mov    rax,rbx
   14001cd0a:	add    rsp,0x20
   14001cd0e:	pop    rbx
   14001cd0f:	ret    
   14001cd10:	mov    rax,rsp
   14001cd13:	push   rdi
   14001cd14:	sub    rsp,0x30
   14001cd18:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cd21:	mov    QWORD PTR [rax+0x10],rbx
   14001cd25:	mov    QWORD PTR [rax+0x18],rbp
   14001cd29:	mov    QWORD PTR [rax+0x20],rsi
   14001cd2d:	mov    esi,edx
   14001cd2f:	lea    rbp,[rcx-0x98]
   14001cd36:	lea    rdi,[rbp+0x98]
   14001cd3d:	mov    QWORD PTR [rax+0x8],rdi
   14001cd41:	mov    rax,QWORD PTR [rdi-0x98]
   14001cd48:	movsxd r8,DWORD PTR [rax+0x4]
   14001cd4c:	lea    rax,[rip+0x34a25]        # 0x140051778
   14001cd53:	mov    QWORD PTR [r8+rdi*1-0x98],rax
   14001cd5b:	lea    rcx,[rdi-0x80]
   14001cd5f:	call   0x14000b404
   14001cd64:	nop
   14001cd65:	lea    rcx,[rdi-0x80]
   14001cd69:	call   QWORD PTR [rip+0x2c7c1]        # 0x140049530
   14001cd6f:	mov    rcx,rdi
   14001cd72:	call   QWORD PTR [rip+0x2c688]        # 0x140049400
   14001cd78:	test   sil,0x1
   14001cd7c:	je     0x14001cd87
   14001cd7e:	mov    rcx,rbp
   14001cd81:	call   QWORD PTR [rip+0x2c8f1]        # 0x140049678
   14001cd87:	mov    rax,rbp
   14001cd8a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001cd8f:	mov    rbp,QWORD PTR [rsp+0x50]
   14001cd94:	mov    rsi,QWORD PTR [rsp+0x58]
   14001cd99:	add    rsp,0x30
   14001cd9d:	pop    rdi
   14001cd9e:	ret    
   14001cd9f:	int3   
   14001cda0:	mov    rax,rsp
   14001cda3:	push   rsi
   14001cda4:	push   rdi
   14001cda5:	push   r12
   14001cda7:	sub    rsp,0x90
   14001cdae:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14001cdb7:	mov    QWORD PTR [rax+0x18],rbx
   14001cdbb:	mov    rax,QWORD PTR [rip+0x4b42e]        # 0x1400681f0
   14001cdc2:	xor    rax,rsp
   14001cdc5:	mov    QWORD PTR [rsp+0x80],rax
   14001cdcd:	mov    rsi,rcx
   14001cdd0:	mov    QWORD PTR [rsp+0x20],rcx
   14001cdd5:	lea    rax,[rip+0x349dc]        # 0x1400517b8
   14001cddc:	mov    QWORD PTR [rcx],rax
   14001cddf:	lea    rdi,[rcx+0x8]
   14001cde3:	mov    r12d,0xf
   14001cde9:	mov    QWORD PTR [rdi+0x18],r12
   14001cded:	and    QWORD PTR [rdi+0x10],0x0
   14001cdf2:	mov    BYTE PTR [rdi],0x0
   14001cdf5:	mov    QWORD PTR [rcx+0x48],r12
   14001cdf9:	and    QWORD PTR [rcx+0x40],0x0
   14001cdfe:	mov    BYTE PTR [rcx+0x30],0x0
   14001ce02:	or     r9,0xffffffffffffffff
   14001ce06:	xor    r8d,r8d
   14001ce09:	add    rcx,0x30
   14001ce0d:	call   0x1400048b8
   14001ce12:	nop
   14001ce13:	mov    DWORD PTR [rsi+0x58],0x3e8
   14001ce1a:	mov    DWORD PTR [rsi+0x5c],0x0
   14001ce21:	and    QWORD PTR [rsi+0x60],0x0
   14001ce26:	and    QWORD PTR [rsi+0x68],0x0
   14001ce2b:	mov    QWORD PTR [rsp+0x40],r12
   14001ce30:	and    QWORD PTR [rsp+0x38],0x0
   14001ce36:	mov    BYTE PTR [rsp+0x28],0x0
   14001ce3b:	or     r9,0xffffffffffffffff
   14001ce3f:	xor    r8d,r8d
   14001ce42:	lea    rdx,[rsi+0x30]
   14001ce46:	lea    rcx,[rsp+0x28]
   14001ce4b:	call   0x1400048b8
   14001ce50:	lea    rdx,[rsp+0x28]
   14001ce55:	lea    rcx,[rsp+0x58]
   14001ce5a:	call   0x14001bd08
   14001ce5f:	nop
   14001ce60:	mov    rdx,rax
   14001ce63:	mov    rcx,rdi
   14001ce66:	call   0x140004730
   14001ce6b:	nop
   14001ce6c:	cmp    QWORD PTR [rsp+0x70],0x10
   14001ce72:	jb     0x14001ce7f
   14001ce74:	mov    rcx,QWORD PTR [rsp+0x58]
   14001ce79:	call   QWORD PTR [rip+0x2c7f9]        # 0x140049678
   14001ce7f:	cmp    QWORD PTR [rdi+0x18],0x10
   14001ce84:	jb     0x14001ce89
   14001ce86:	mov    rdi,QWORD PTR [rdi]
   14001ce89:	mov    r8,rdi
   14001ce8c:	xor    edx,edx
   14001ce8e:	xor    ecx,ecx
   14001ce90:	call   QWORD PTR [rip+0x2c28a]        # 0x140049120
   14001ce96:	mov    QWORD PTR [rsi+0x60],rax
   14001ce9a:	xor    r8d,r8d
   14001ce9d:	xor    edx,edx
   14001ce9f:	xor    ecx,ecx
   14001cea1:	call   QWORD PTR [rip+0x2c279]        # 0x140049120
   14001cea7:	mov    QWORD PTR [rsi+0x68],rax
   14001ceab:	mov    rax,rsi
   14001ceae:	mov    rcx,QWORD PTR [rsp+0x80]
   14001ceb6:	xor    rcx,rsp
   14001ceb9:	call   0x14002b100
   14001cebe:	mov    rbx,QWORD PTR [rsp+0xc0]
   14001cec6:	add    rsp,0x90
   14001cecd:	pop    r12
   14001cecf:	pop    rdi
   14001ced0:	pop    rsi
   14001ced1:	ret    
   14001ced2:	int3   
   14001ced3:	int3   
   14001ced4:	rex push rbx
   14001ced6:	sub    rsp,0x20
   14001ceda:	lea    rax,[rip+0x348d7]        # 0x1400517b8
   14001cee1:	mov    rbx,rcx
   14001cee4:	mov    QWORD PTR [rcx],rax
   14001cee7:	mov    rcx,QWORD PTR [rcx+0x60]
   14001ceeb:	call   QWORD PTR [rip+0x2c2a7]        # 0x140049198
   14001cef1:	mov    rcx,QWORD PTR [rbx+0x68]
   14001cef5:	call   QWORD PTR [rip+0x2c29d]        # 0x140049198
   14001cefb:	cmp    QWORD PTR [rbx+0x48],0x10
   14001cf00:	jb     0x14001cf0c
   14001cf02:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cf06:	call   QWORD PTR [rip+0x2c76c]        # 0x140049678
   14001cf0c:	and    QWORD PTR [rbx+0x40],0x0
   14001cf11:	mov    QWORD PTR [rbx+0x48],0xf
   14001cf19:	mov    BYTE PTR [rbx+0x30],0x0
   14001cf1d:	cmp    QWORD PTR [rbx+0x20],0x10
   14001cf22:	jb     0x14001cf2e
   14001cf24:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cf28:	call   QWORD PTR [rip+0x2c74a]        # 0x140049678
   14001cf2e:	and    QWORD PTR [rbx+0x18],0x0
   14001cf33:	mov    QWORD PTR [rbx+0x20],0xf
   14001cf3b:	mov    BYTE PTR [rbx+0x8],0x0
   14001cf3f:	add    rsp,0x20
   14001cf43:	pop    rbx
   14001cf44:	ret    
   14001cf45:	int3   
   14001cf46:	int3   
   14001cf47:	int3   
   14001cf48:	mov    QWORD PTR [rsp+0x8],rbx
   14001cf4d:	push   rdi
   14001cf4e:	sub    rsp,0x20
   14001cf52:	mov    ebx,edx
   14001cf54:	mov    rdi,rcx
   14001cf57:	call   0x14001ced4
   14001cf5c:	test   bl,0x1
   14001cf5f:	je     0x14001cf6a
   14001cf61:	mov    rcx,rdi
   14001cf64:	call   QWORD PTR [rip+0x2c70e]        # 0x140049678
   14001cf6a:	mov    rax,rdi
   14001cf6d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cf72:	add    rsp,0x20
   14001cf76:	pop    rdi
   14001cf77:	ret    
   14001cf78:	mov    QWORD PTR [rsp+0x8],rbx
   14001cf7d:	push   rdi
   14001cf7e:	sub    rsp,0x20
   14001cf82:	mov    ebx,edx
   14001cf84:	mov    rdi,rcx
   14001cf87:	call   0x14001cfa8
   14001cf8c:	test   bl,0x1
   14001cf8f:	je     0x14001cf9a
   14001cf91:	mov    rcx,rdi
   14001cf94:	call   QWORD PTR [rip+0x2c6de]        # 0x140049678
   14001cf9a:	mov    rax,rdi
   14001cf9d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cfa2:	add    rsp,0x20
   14001cfa6:	pop    rdi
   14001cfa7:	ret    
   14001cfa8:	rex push rbx
   14001cfaa:	sub    rsp,0x20
   14001cfae:	lea    rax,[rip+0x347db]        # 0x140051790
   14001cfb5:	mov    rbx,rcx
   14001cfb8:	mov    QWORD PTR [rcx],rax
   14001cfbb:	call   0x14001d080
   14001cfc0:	test   al,al
   14001cfc2:	je     0x14001cfce
   14001cfc4:	xor    edx,edx
   14001cfc6:	mov    rcx,rbx
   14001cfc9:	call   0x14001d024
   14001cfce:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cfd2:	test   rcx,rcx
   14001cfd5:	je     0x14001cfe1
   14001cfd7:	mov    rax,QWORD PTR [rcx]
   14001cfda:	mov    edx,0x1
   14001cfdf:	call   QWORD PTR [rax]
   14001cfe1:	add    rsp,0x20
   14001cfe5:	pop    rbx
   14001cfe6:	ret    
   14001cfe7:	int3   
   14001cfe8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cfed:	push   rdi
   14001cfee:	sub    rsp,0x20
   14001cff2:	mov    rdi,QWORD PTR [rcx+0x8]
   14001cff6:	xor    ebx,ebx
   14001cff8:	mov    rcx,QWORD PTR [rdi+0x60]
   14001cffc:	test   rcx,rcx
   14001cfff:	je     0x14001d014
   14001d001:	mov    edx,DWORD PTR [rdi+0x58]
   14001d004:	call   QWORD PTR [rip+0x2c10e]        # 0x140049118
   14001d00a:	test   eax,eax
   14001d00c:	jne    0x14001d014
   14001d00e:	lock inc DWORD PTR [rdi+0x5c]
   14001d012:	mov    bl,0x1
   14001d014:	mov    al,bl
   14001d016:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d01b:	add    rsp,0x20
   14001d01f:	pop    rdi
   14001d020:	ret    
   14001d021:	int3   
   14001d022:	int3   
   14001d023:	int3   
   14001d024:	mov    QWORD PTR [rsp+0x8],rbx
   14001d029:	push   rdi
   14001d02a:	sub    rsp,0x20
   14001d02e:	mov    rbx,QWORD PTR [rcx+0x8]
   14001d032:	xor    edi,edi
   14001d034:	cmp    QWORD PTR [rbx+0x60],rdi
   14001d038:	je     0x14001d06f
   14001d03a:	mov    rcx,QWORD PTR [rbx+0x68]
   14001d03e:	test   rcx,rcx
   14001d041:	je     0x14001d06f
   14001d043:	mov    edx,DWORD PTR [rbx+0x58]
   14001d046:	call   QWORD PTR [rip+0x2c0cc]        # 0x140049118
   14001d04c:	test   eax,eax
   14001d04e:	jne    0x14001d06f
   14001d050:	mov    rcx,QWORD PTR [rbx+0x60]
   14001d054:	call   QWORD PTR [rip+0x2c0ce]        # 0x140049128
   14001d05a:	test   eax,eax
   14001d05c:	je     0x14001d065
   14001d05e:	lock dec DWORD PTR [rbx+0x5c]
   14001d062:	mov    dil,0x1
   14001d065:	mov    rcx,QWORD PTR [rbx+0x68]
   14001d069:	call   QWORD PTR [rip+0x2c0b9]        # 0x140049128
   14001d06f:	mov    al,dil
   14001d072:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d077:	add    rsp,0x20
   14001d07b:	pop    rdi
   14001d07c:	ret    
   14001d07d:	int3   
   14001d07e:	int3   
   14001d07f:	int3   
   14001d080:	mov    QWORD PTR [rsp+0x8],rbx
   14001d085:	push   rdi
   14001d086:	sub    rsp,0x20
   14001d08a:	mov    rdi,QWORD PTR [rcx+0x8]
   14001d08e:	xor    ebx,ebx
   14001d090:	cmp    QWORD PTR [rdi+0x60],rbx
   14001d094:	je     0x14001d0d9
   14001d096:	mov    rcx,QWORD PTR [rdi+0x68]
   14001d09a:	test   rcx,rcx
   14001d09d:	je     0x14001d0d9
   14001d09f:	mov    edx,DWORD PTR [rdi+0x58]
   14001d0a2:	call   QWORD PTR [rip+0x2c070]        # 0x140049118
   14001d0a8:	test   eax,eax
   14001d0aa:	jne    0x14001d0d9
   14001d0ac:	mov    eax,DWORD PTR [rdi+0x5c]
   14001d0af:	test   eax,eax
   14001d0b1:	jle    0x14001d0cf
   14001d0b3:	mov    rcx,QWORD PTR [rdi+0x60]
   14001d0b7:	xor    edx,edx
   14001d0b9:	call   QWORD PTR [rip+0x2c059]        # 0x140049118
   14001d0bf:	test   eax,eax
   14001d0c1:	jne    0x14001d0cf
   14001d0c3:	mov    rcx,QWORD PTR [rdi+0x60]
   14001d0c7:	mov    bl,0x1
   14001d0c9:	call   QWORD PTR [rip+0x2c059]        # 0x140049128
   14001d0cf:	mov    rcx,QWORD PTR [rdi+0x68]
   14001d0d3:	call   QWORD PTR [rip+0x2c04f]        # 0x140049128
   14001d0d9:	mov    al,bl
   14001d0db:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d0e0:	add    rsp,0x20
   14001d0e4:	pop    rdi
   14001d0e5:	ret    
   14001d0e6:	int3   
   14001d0e7:	int3   
   14001d0e8:	rex push rdi
   14001d0ea:	sub    rsp,0x60
   14001d0ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d0f7:	mov    QWORD PTR [rsp+0x78],rbx
   14001d0fc:	mov    rax,QWORD PTR [rip+0x4b0ed]        # 0x1400681f0
   14001d103:	xor    rax,rsp
   14001d106:	mov    QWORD PTR [rsp+0x50],rax
   14001d10b:	mov    rbx,rcx
   14001d10e:	cmp    QWORD PTR [rcx+0x10],0x0
   14001d113:	je     0x14001d2f3
   14001d119:	or     rdi,0xffffffffffffffff
   14001d11d:	lea    rcx,[rip+0x346a8]        # 0x1400517cc
   14001d124:	call   QWORD PTR [rip+0x2c586]        # 0x1400496b0
   14001d12a:	mov    r11,rax
   14001d12d:	test   rax,rax
   14001d130:	je     0x14001d1a5
   14001d132:	mov    rdx,QWORD PTR [rbx+0x10]
   14001d136:	test   rdx,rdx
   14001d139:	je     0x14001d1a5
   14001d13b:	cmp    QWORD PTR [rbx+0x18],0x8
   14001d140:	jb     0x14001d147
   14001d142:	mov    rcx,QWORD PTR [rbx]
   14001d145:	jmp    0x14001d14a
   14001d147:	mov    rcx,rbx
   14001d14a:	lea    r9,[rcx+rdx*2]
   14001d14e:	cmp    QWORD PTR [rbx+0x18],0x8
   14001d153:	jb     0x14001d15a
   14001d155:	mov    rax,QWORD PTR [rbx]
   14001d158:	jmp    0x14001d187
   14001d15a:	mov    rax,rbx
   14001d15d:	jmp    0x14001d187
   14001d15f:	mov    rdx,r11
   14001d162:	lea    rcx,[rip+0x34663]        # 0x1400517cc
   14001d169:	movzx  r8d,WORD PTR [rax]
   14001d16d:	cmp    WORD PTR [rcx],r8w
   14001d171:	je     0x14001d17e
   14001d173:	add    rcx,0x2
   14001d177:	dec    rdx
   14001d17a:	jne    0x14001d16d
   14001d17c:	xor    ecx,ecx
   14001d17e:	test   rcx,rcx
   14001d181:	jne    0x14001d18e
   14001d183:	add    rax,0x2
   14001d187:	cmp    rax,r9
   14001d18a:	jb     0x14001d15f
   14001d18c:	jmp    0x14001d1a5
   14001d18e:	cmp    QWORD PTR [rbx+0x18],0x8
   14001d193:	jb     0x14001d19a
   14001d195:	mov    rcx,QWORD PTR [rbx]
   14001d198:	jmp    0x14001d19d
   14001d19a:	mov    rcx,rbx
   14001d19d:	sub    rax,rcx
   14001d1a0:	sar    rax,1
   14001d1a3:	jmp    0x14001d1a8
   14001d1a5:	mov    rax,rdi
   14001d1a8:	test   rax,rax
   14001d1ab:	jne    0x14001d1ea
   14001d1ad:	mov    r9,rdi
   14001d1b0:	lea    r8d,[rax+0x1]
   14001d1b4:	lea    rdx,[rsp+0x28]
   14001d1b9:	mov    rcx,rbx
   14001d1bc:	call   0x14000b3d0
   14001d1c1:	nop
   14001d1c2:	mov    rdx,rax
   14001d1c5:	mov    rcx,rbx
   14001d1c8:	call   0x140009880
   14001d1cd:	nop
   14001d1ce:	cmp    QWORD PTR [rsp+0x40],0x8
   14001d1d4:	jb     0x14001d11d
   14001d1da:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d1df:	call   QWORD PTR [rip+0x2c493]        # 0x140049678
   14001d1e5:	jmp    0x14001d11d
   14001d1ea:	lea    rcx,[rip+0x345db]        # 0x1400517cc
   14001d1f1:	call   QWORD PTR [rip+0x2c4b9]        # 0x1400496b0
   14001d1f7:	mov    r11,rax
   14001d1fa:	mov    r9,QWORD PTR [rbx+0x10]
   14001d1fe:	test   rax,rax
   14001d201:	jne    0x14001d212
   14001d203:	mov    rcx,r9
   14001d206:	cmp    r9,rdi
   14001d209:	cmova  rcx,rdi
   14001d20d:	jmp    0x14001d2ae
   14001d212:	cmp    rax,r9
   14001d215:	ja     0x14001d2ab
   14001d21b:	mov    rax,r9
   14001d21e:	sub    rax,r11
   14001d221:	cmp    rax,rdi
   14001d224:	cmova  rax,rdi
   14001d228:	cmp    QWORD PTR [rbx+0x18],0x8
   14001d22d:	jb     0x14001d234
   14001d22f:	mov    rcx,QWORD PTR [rbx]
   14001d232:	jmp    0x14001d237
   14001d234:	mov    rcx,rbx
   14001d237:	lea    rcx,[rcx+rax*2]
   14001d23b:	cmp    WORD PTR [rcx],0x20
   14001d23f:	jne    0x14001d27a
   14001d241:	mov    r10,r11
   14001d244:	lea    rdx,[rip+0x34581]        # 0x1400517cc
   14001d24b:	mov    r8,rcx
   14001d24e:	test   r11,r11
   14001d251:	je     0x14001d274
   14001d253:	movzx  eax,WORD PTR [rdx]
   14001d256:	cmp    WORD PTR [r8],ax
   14001d25a:	jne    0x14001d26b
   14001d25c:	add    r8,0x2
   14001d260:	add    rdx,0x2
   14001d264:	dec    r10
   14001d267:	jne    0x14001d253
   14001d269:	jmp    0x14001d274
   14001d26b:	sbb    eax,eax
   14001d26d:	and    eax,0xfffffffe
   14001d270:	inc    eax
   14001d272:	jmp    0x14001d276
   14001d274:	xor    eax,eax
   14001d276:	test   eax,eax
   14001d278:	je     0x14001d294
   14001d27a:	cmp    QWORD PTR [rbx+0x18],0x8
   14001d27f:	jb     0x14001d286
   14001d281:	mov    rax,QWORD PTR [rbx]
   14001d284:	jmp    0x14001d289
   14001d286:	mov    rax,rbx
   14001d289:	cmp    rcx,rax
   14001d28c:	je     0x14001d2ab
   14001d28e:	sub    rcx,0x2
   14001d292:	jmp    0x14001d23b
   14001d294:	cmp    QWORD PTR [rbx+0x18],0x8
   14001d299:	jb     0x14001d2a0
   14001d29b:	mov    rax,QWORD PTR [rbx]
   14001d29e:	jmp    0x14001d2a3
   14001d2a0:	mov    rax,rbx
   14001d2a3:	sub    rcx,rax
   14001d2a6:	sar    rcx,1
   14001d2a9:	jmp    0x14001d2ae
   14001d2ab:	mov    rcx,rdi
   14001d2ae:	lea    rax,[r9-0x1]
   14001d2b2:	cmp    rcx,rax
   14001d2b5:	jne    0x14001d2f3
   14001d2b7:	dec    r9
   14001d2ba:	xor    r8d,r8d
   14001d2bd:	lea    rdx,[rsp+0x28]
   14001d2c2:	mov    rcx,rbx
   14001d2c5:	call   0x14000b3d0
   14001d2ca:	nop
   14001d2cb:	mov    rdx,rax
   14001d2ce:	mov    rcx,rbx
   14001d2d1:	call   0x140009880
   14001d2d6:	nop
   14001d2d7:	cmp    QWORD PTR [rsp+0x40],0x8
   14001d2dd:	jb     0x14001d1ea
   14001d2e3:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d2e8:	call   QWORD PTR [rip+0x2c38a]        # 0x140049678
   14001d2ee:	jmp    0x14001d1ea
   14001d2f3:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d2f8:	xor    rcx,rsp
   14001d2fb:	call   0x14002b100
   14001d300:	mov    rbx,QWORD PTR [rsp+0x78]
   14001d305:	add    rsp,0x60
   14001d309:	pop    rdi
   14001d30a:	ret    
   14001d30b:	int3   
   14001d30c:	rex push rbx
   14001d30e:	push   rbp
   14001d30f:	push   rsi
   14001d310:	push   rdi
   14001d311:	push   r12
   14001d313:	sub    rsp,0x60
   14001d317:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001d320:	mov    rax,QWORD PTR [rip+0x4aec9]        # 0x1400681f0
   14001d327:	xor    rax,rsp
   14001d32a:	mov    QWORD PTR [rsp+0x58],rax
   14001d32f:	mov    rbx,r8
   14001d332:	mov    r12,rdx
   14001d335:	mov    rdi,rcx
   14001d338:	and    QWORD PTR [rsp+0x20],0x0
   14001d33e:	mov    rcx,rdx
   14001d341:	call   0x140007834
   14001d346:	mov    rbp,QWORD PTR [rdi+0x10]
   14001d34a:	lea    rcx,[rbp+0x1]
   14001d34e:	call   0x14002b058
   14001d353:	mov    rsi,rax
   14001d356:	cmp    QWORD PTR [rdi+0x18],0x10
   14001d35b:	jb     0x14001d360
   14001d35d:	mov    rdi,QWORD PTR [rdi]
   14001d360:	mov    r8,rbp
   14001d363:	mov    rdx,rdi
   14001d366:	mov    rcx,rax
   14001d369:	call   QWORD PTR [rip+0x2c559]        # 0x1400498c8
   14001d36f:	mov    BYTE PTR [rsi+rbp*1],0x0
   14001d373:	cmp    QWORD PTR [rbx+0x18],0x10
   14001d378:	jb     0x14001d37f
   14001d37a:	mov    rdx,QWORD PTR [rbx]
   14001d37d:	jmp    0x14001d382
   14001d37f:	mov    rdx,rbx
   14001d382:	mov    rcx,rsi
   14001d385:	jmp    0x14001d3e7
   14001d387:	mov    QWORD PTR [rsp+0x48],0xf
   14001d390:	and    QWORD PTR [rsp+0x40],0x0
   14001d396:	mov    BYTE PTR [rsp+0x30],0x0
   14001d39b:	mov    rcx,rdi
   14001d39e:	call   QWORD PTR [rip+0x2c264]        # 0x140049608
   14001d3a4:	mov    r8,rax
   14001d3a7:	mov    rdx,rdi
   14001d3aa:	lea    rcx,[rsp+0x30]
   14001d3af:	call   0x140005154
   14001d3b4:	nop
   14001d3b5:	lea    rdx,[rsp+0x30]
   14001d3ba:	mov    rcx,r12
   14001d3bd:	call   0x140010bd4
   14001d3c2:	nop
   14001d3c3:	cmp    QWORD PTR [rsp+0x48],0x10
   14001d3c9:	jb     0x14001d3d6
   14001d3cb:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d3d0:	call   QWORD PTR [rip+0x2c2a2]        # 0x140049678
   14001d3d6:	cmp    QWORD PTR [rbx+0x18],0x10
   14001d3db:	jb     0x14001d3e2
   14001d3dd:	mov    rdx,QWORD PTR [rbx]
   14001d3e0:	jmp    0x14001d3e5
   14001d3e2:	mov    rdx,rbx
   14001d3e5:	xor    ecx,ecx
   14001d3e7:	lea    r8,[rsp+0x20]
   14001d3ec:	call   QWORD PTR [rip+0x2c31e]        # 0x140049710
   14001d3f2:	test   rax,rax
   14001d3f5:	mov    rdi,rax
   14001d3f8:	jne    0x14001d387
   14001d3fa:	mov    rcx,rsi
   14001d3fd:	call   QWORD PTR [rip+0x2c265]        # 0x140049668
   14001d403:	mov    rcx,QWORD PTR [rsp+0x58]
   14001d408:	xor    rcx,rsp
   14001d40b:	call   0x14002b100
   14001d410:	add    rsp,0x60
   14001d414:	pop    r12
   14001d416:	pop    rdi
   14001d417:	pop    rsi
   14001d418:	pop    rbp
   14001d419:	pop    rbx
   14001d41a:	ret    
   14001d41b:	int3   
   14001d41c:	rex.W jmp QWORD PTR [rip+0x2c475]        # 0x140049898
   14001d423:	int3   
   14001d424:	rex push rbx
   14001d426:	sub    rsp,0x60
   14001d42a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001d433:	mov    rax,QWORD PTR [rip+0x4adb6]        # 0x1400681f0
   14001d43a:	xor    rax,rsp
   14001d43d:	mov    QWORD PTR [rsp+0x58],rax
   14001d442:	mov    rbx,rcx
   14001d445:	mov    QWORD PTR [rsp+0x48],0xf
   14001d44e:	and    QWORD PTR [rsp+0x40],0x0
   14001d454:	mov    BYTE PTR [rsp+0x30],0x0
   14001d459:	lea    rcx,[rip+0x343c8]        # 0x140051828
   14001d460:	call   QWORD PTR [rip+0x2c1a2]        # 0x140049608
   14001d466:	mov    r8,rax
   14001d469:	lea    rdx,[rip+0x343b8]        # 0x140051828
   14001d470:	lea    rcx,[rsp+0x30]
   14001d475:	call   0x140005154
   14001d47a:	nop
   14001d47b:	lea    rax,[rsp+0x30]
   14001d480:	cmp    QWORD PTR [rsp+0x48],0x10
   14001d486:	cmovae rax,QWORD PTR [rsp+0x30]
   14001d48c:	mov    QWORD PTR [rsp+0x20],rax
   14001d491:	lea    rdx,[rsp+0x20]
   14001d496:	mov    rcx,rbx
   14001d499:	call   QWORD PTR [rip+0x2c431]        # 0x1400498d0
   14001d49f:	lea    r11,[rip+0x2cdfa]        # 0x14004a2a0
   14001d4a6:	mov    QWORD PTR [rbx],r11
   14001d4a9:	cmp    QWORD PTR [rsp+0x48],0x10
   14001d4af:	jb     0x14001d4bc
   14001d4b1:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d4b6:	call   QWORD PTR [rip+0x2c1bc]        # 0x140049678
   14001d4bc:	lea    rax,[rip+0x2cdf5]        # 0x14004a2b8
   14001d4c3:	mov    QWORD PTR [rbx],rax
   14001d4c6:	mov    rax,rbx
   14001d4c9:	mov    rcx,QWORD PTR [rsp+0x58]
   14001d4ce:	xor    rcx,rsp
   14001d4d1:	call   0x14002b100
   14001d4d6:	add    rsp,0x60
   14001d4da:	pop    rbx
   14001d4db:	ret    
   14001d4dc:	mov    rax,rsp
   14001d4df:	push   rbp
   14001d4e0:	lea    rbp,[rax-0x5f]
   14001d4e4:	sub    rsp,0x100
   14001d4eb:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001d4f3:	mov    QWORD PTR [rax+0x10],rbx
   14001d4f7:	mov    QWORD PTR [rax+0x18],rdi
   14001d4fb:	mov    rax,QWORD PTR [rip+0x4acee]        # 0x1400681f0
   14001d502:	xor    rax,rsp
   14001d505:	mov    QWORD PTR [rbp+0x4f],rax
   14001d509:	movzx  r10d,dx
   14001d50d:	mov    rdi,rcx
   14001d510:	movzx  ebx,r8w
   14001d514:	mov    ecx,0xe
   14001d519:	sub    ecx,ebx
   14001d51b:	mov    eax,0x2aaaaaab
   14001d520:	imul   ecx
   14001d522:	sar    edx,1
   14001d524:	mov    eax,edx
   14001d526:	shr    eax,0x1f
   14001d529:	add    edx,eax
   14001d52b:	movzx  ecx,r10w
   14001d52f:	sub    cx,dx
   14001d532:	mov    eax,0x12c0
   14001d537:	add    cx,ax
   14001d53a:	movzx  eax,dx
   14001d53d:	add    ax,ax
   14001d540:	add    dx,ax
   14001d543:	shl    dx,0x2
   14001d547:	add    dx,r8w
   14001d54b:	sub    dx,0x3
   14001d54f:	movzx  r11d,cx
   14001d553:	movzx  ecx,dx
   14001d556:	imul   ecx,ecx,0x99
   14001d55c:	add    ecx,0x2
   14001d55f:	mov    eax,0x66666667
   14001d564:	imul   ecx
   14001d566:	mov    ecx,edx
   14001d568:	sar    ecx,1
   14001d56a:	mov    eax,ecx
   14001d56c:	shr    eax,0x1f
   14001d56f:	add    ecx,eax
   14001d571:	mov    eax,0x51eb851f
   14001d576:	imul   r11d
   14001d579:	sar    edx,0x7
   14001d57c:	mov    r8d,edx
   14001d57f:	shr    r8d,0x1f
   14001d583:	add    edx,ecx
   14001d585:	add    r8d,edx
   14001d588:	mov    eax,0x51eb851f
   14001d58d:	imul   r11d
   14001d590:	sar    edx,0x5
   14001d593:	mov    eax,edx
   14001d595:	shr    eax,0x1f
   14001d598:	add    edx,eax
   14001d59a:	sub    r8d,edx
   14001d59d:	mov    eax,r11d
   14001d5a0:	imul   eax,eax,0x16d
   14001d5a6:	add    r8d,eax
   14001d5a9:	shr    r11d,0x2
   14001d5ad:	add    r8d,r11d
   14001d5b0:	movzx  eax,r9w
   14001d5b4:	lea    ecx,[r8+rax*1-0x7d2d]
   14001d5bc:	mov    DWORD PTR [rdi],ecx
   14001d5be:	cmp    ebx,0x2
   14001d5c1:	je     0x14001d5e5
   14001d5c3:	cmp    ebx,0x4
   14001d5c6:	je     0x14001d5de
   14001d5c8:	cmp    ebx,0x6
   14001d5cb:	je     0x14001d5de
   14001d5cd:	cmp    ebx,0x9
   14001d5d0:	je     0x14001d5de
   14001d5d2:	cmp    ebx,0xb
   14001d5d5:	je     0x14001d5de
   14001d5d7:	mov    eax,0x1f
   14001d5dc:	jmp    0x14001d63c
   14001d5de:	mov    eax,0x1e
   14001d5e3:	jmp    0x14001d63c
   14001d5e5:	movzx  ecx,r10w
   14001d5e9:	mov    eax,ecx
   14001d5eb:	and    eax,0x80000003
   14001d5f0:	jge    0x14001d5f9
   14001d5f2:	dec    eax
   14001d5f4:	or     eax,0xfffffffc
   14001d5f7:	inc    eax
   14001d5f9:	test   eax,eax
   14001d5fb:	jne    0x14001d637
   14001d5fd:	mov    eax,0x51eb851f
   14001d602:	imul   ecx
   14001d604:	sar    edx,0x5
   14001d607:	mov    eax,edx
   14001d609:	shr    eax,0x1f
   14001d60c:	add    edx,eax
   14001d60e:	imul   edx,edx,0x64
   14001d611:	cmp    ecx,edx
   14001d613:	jne    0x14001d630
   14001d615:	mov    eax,0x51eb851f
   14001d61a:	imul   ecx
   14001d61c:	sar    edx,0x7
   14001d61f:	mov    eax,edx
   14001d621:	shr    eax,0x1f
   14001d624:	add    edx,eax
   14001d626:	imul   edx,edx,0x190
   14001d62c:	cmp    ecx,edx
   14001d62e:	jne    0x14001d637
   14001d630:	mov    eax,0x1d
   14001d635:	jmp    0x14001d63c
   14001d637:	mov    eax,0x1c
   14001d63c:	cmp    ax,r9w
   14001d640:	jae    0x14001d6d3
   14001d646:	mov    QWORD PTR [rbp+0x3f],0xf
   14001d64e:	and    QWORD PTR [rbp+0x37],0x0
   14001d653:	mov    BYTE PTR [rbp+0x27],0x0
   14001d657:	lea    rcx,[rip+0x341f2]        # 0x140051850
   14001d65e:	call   QWORD PTR [rip+0x2bfa4]        # 0x140049608
   14001d664:	mov    r8,rax
   14001d667:	lea    rdx,[rip+0x341e2]        # 0x140051850
   14001d66e:	lea    rcx,[rbp+0x27]
   14001d672:	call   0x140005154
   14001d677:	nop
   14001d678:	lea    rax,[rbp+0x27]
   14001d67c:	cmp    QWORD PTR [rbp+0x3f],0x10
   14001d681:	cmovae rax,QWORD PTR [rbp+0x27]
   14001d686:	mov    QWORD PTR [rsp+0x20],rax
   14001d68b:	lea    rdx,[rsp+0x20]
   14001d690:	lea    rcx,[rsp+0x28]
   14001d695:	call   QWORD PTR [rip+0x2c235]        # 0x1400498d0
   14001d69b:	lea    r11,[rip+0x343a6]        # 0x140051a48
   14001d6a2:	mov    QWORD PTR [rsp+0x28],r11
   14001d6a7:	lea    rdx,[rsp+0x28]
   14001d6ac:	lea    rcx,[rbp-0x19]
   14001d6b0:	call   0x140021730
   14001d6b5:	nop
   14001d6b6:	mov    rdx,rax
   14001d6b9:	lea    rcx,[rbp-0x61]
   14001d6bd:	call   0x140021780
   14001d6c2:	lea    rdx,[rip+0x4632f]        # 0x1400639f8
   14001d6c9:	lea    rcx,[rbp-0x61]
   14001d6cd:	call   0x14002b560
   14001d6d2:	nop
   14001d6d3:	mov    rax,rdi
   14001d6d6:	mov    rcx,QWORD PTR [rbp+0x4f]
   14001d6da:	xor    rcx,rsp
   14001d6dd:	call   0x14002b100
   14001d6e2:	lea    r11,[rsp+0x100]
   14001d6ea:	mov    rbx,QWORD PTR [r11+0x18]
   14001d6ee:	mov    rdi,QWORD PTR [r11+0x20]
   14001d6f2:	mov    rsp,r11
   14001d6f5:	pop    rbp
   14001d6f6:	ret    
   14001d6f7:	int3   
   14001d6f8:	lea    rax,[rip+0x341b1]        # 0x1400518b0
   14001d6ff:	ret    
   14001d700:	lea    rax,[rip+0x2cb49]        # 0x14004a250
   14001d707:	mov    QWORD PTR [rcx],rax
   14001d70a:	rex.W jmp QWORD PTR [rip+0x2c1a7]        # 0x1400498b8
   14001d711:	int3   
   14001d712:	int3   
   14001d713:	int3   
   14001d714:	mov    QWORD PTR [rsp+0x8],rbx
   14001d719:	push   rdi
   14001d71a:	sub    rsp,0x20
   14001d71e:	lea    rax,[rip+0x2cb2b]        # 0x14004a250
   14001d725:	mov    ebx,edx
   14001d727:	mov    rdi,rcx
   14001d72a:	mov    QWORD PTR [rcx],rax
   14001d72d:	call   QWORD PTR [rip+0x2c185]        # 0x1400498b8
   14001d733:	test   bl,0x1
   14001d736:	je     0x14001d741
   14001d738:	mov    rcx,rdi
   14001d73b:	call   QWORD PTR [rip+0x2bf37]        # 0x140049678
   14001d741:	mov    rax,rdi
   14001d744:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d749:	add    rsp,0x20
   14001d74d:	pop    rdi
   14001d74e:	ret    
   14001d74f:	int3   
   14001d750:	rex push rsi
   14001d752:	push   rdi
   14001d753:	push   r12
   14001d755:	sub    rsp,0x40
   14001d759:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001d762:	mov    QWORD PTR [rsp+0x70],rbx
   14001d767:	mov    QWORD PTR [rsp+0x78],rbp
   14001d76c:	mov    rax,QWORD PTR [rip+0x4aa7d]        # 0x1400681f0
   14001d773:	xor    rax,rsp
   14001d776:	mov    QWORD PTR [rsp+0x38],rax
   14001d77b:	mov    rdi,rdx
   14001d77e:	mov    rsi,rcx
   14001d781:	mov    QWORD PTR [rsp+0x30],rdx
   14001d786:	and    DWORD PTR [rsp+0x20],0x0
   14001d78b:	call   QWORD PTR [rip+0x2bdaf]        # 0x140049540
   14001d791:	mov    rcx,QWORD PTR [rax]
   14001d794:	mov    QWORD PTR [rsp+0x20],rcx
   14001d799:	call   QWORD PTR [rip+0x2bba9]        # 0x140049348
   14001d79f:	nop
   14001d7a0:	xor    ebp,ebp
   14001d7a2:	mov    r12,QWORD PTR [rdi+0x10]
   14001d7a6:	test   r12,r12
   14001d7a9:	je     0x14001d7ec
   14001d7ab:	cmp    QWORD PTR [rdi+0x18],0x10
   14001d7b0:	jb     0x14001d7b7
   14001d7b2:	mov    rax,QWORD PTR [rdi]
   14001d7b5:	jmp    0x14001d7ba
   14001d7b7:	mov    rax,rdi
   14001d7ba:	mov    bl,BYTE PTR [rax+rbp*1]
   14001d7bd:	lea    rcx,[rsp+0x20]
   14001d7c2:	call   0x1400187a0
   14001d7c7:	mov    rcx,rax
   14001d7ca:	mov    dl,bl
   14001d7cc:	call   QWORD PTR [rip+0x2bdb6]        # 0x140049588
   14001d7d2:	cmp    QWORD PTR [rdi+0x18],0x10
   14001d7d7:	jb     0x14001d7de
   14001d7d9:	mov    rcx,QWORD PTR [rdi]
   14001d7dc:	jmp    0x14001d7e1
   14001d7de:	mov    rcx,rdi
   14001d7e1:	mov    BYTE PTR [rcx+rbp*1],al
   14001d7e4:	inc    rbp
   14001d7e7:	cmp    rbp,r12
   14001d7ea:	jb     0x14001d7ab
   14001d7ec:	mov    ebx,0xf
   14001d7f1:	mov    QWORD PTR [rsi+0x18],rbx
   14001d7f5:	and    QWORD PTR [rsi+0x10],0x0
   14001d7fa:	mov    BYTE PTR [rsi],0x0
   14001d7fd:	mov    rdx,rdi
   14001d800:	mov    rcx,rsi
   14001d803:	call   0x140004730
   14001d808:	nop
   14001d809:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d80e:	test   rcx,rcx
   14001d811:	je     0x14001d82b
   14001d813:	call   QWORD PTR [rip+0x2bb27]        # 0x140049340
   14001d819:	test   rax,rax
   14001d81c:	je     0x14001d82b
   14001d81e:	mov    r8,QWORD PTR [rax]
   14001d821:	lea    edx,[rbx-0xe]
   14001d824:	mov    rcx,rax
   14001d827:	call   QWORD PTR [r8]
   14001d82a:	nop
   14001d82b:	cmp    QWORD PTR [rdi+0x18],0x10
   14001d830:	jb     0x14001d83b
   14001d832:	mov    rcx,QWORD PTR [rdi]
   14001d835:	call   QWORD PTR [rip+0x2be3d]        # 0x140049678
   14001d83b:	mov    QWORD PTR [rdi+0x18],rbx
   14001d83f:	and    QWORD PTR [rdi+0x10],0x0
   14001d844:	mov    BYTE PTR [rdi],0x0
   14001d847:	mov    rax,rsi
   14001d84a:	mov    rcx,QWORD PTR [rsp+0x38]
   14001d84f:	xor    rcx,rsp
   14001d852:	call   0x14002b100
   14001d857:	mov    rbx,QWORD PTR [rsp+0x70]
   14001d85c:	mov    rbp,QWORD PTR [rsp+0x78]
   14001d861:	add    rsp,0x40
   14001d865:	pop    r12
   14001d867:	pop    rdi
   14001d868:	pop    rsi
   14001d869:	ret    
   14001d86a:	int3   
   14001d86b:	int3   
   14001d86c:	rex push rdi
   14001d86e:	sub    rsp,0x40
   14001d872:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d87b:	mov    QWORD PTR [rsp+0x60],rbx
   14001d880:	mov    rax,QWORD PTR [rip+0x4a969]        # 0x1400681f0
   14001d887:	xor    rax,rsp
   14001d88a:	mov    QWORD PTR [rsp+0x30],rax
   14001d88f:	mov    rbx,rdx
   14001d892:	mov    rdi,rcx
   14001d895:	mov    QWORD PTR [rsp+0x28],rdx
   14001d89a:	call   0x1400200d4
   14001d89f:	nop
   14001d8a0:	cmp    QWORD PTR [rbx+0x18],0x10
   14001d8a5:	jb     0x14001d8b0
   14001d8a7:	mov    rcx,QWORD PTR [rbx]
   14001d8aa:	call   QWORD PTR [rip+0x2bdc8]        # 0x140049678
   14001d8b0:	mov    QWORD PTR [rbx+0x18],0xf
   14001d8b8:	and    QWORD PTR [rbx+0x10],0x0
   14001d8bd:	mov    BYTE PTR [rbx],0x0
   14001d8c0:	mov    rax,rdi
   14001d8c3:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d8c8:	xor    rcx,rsp
   14001d8cb:	call   0x14002b100
   14001d8d0:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d8d5:	add    rsp,0x40
   14001d8d9:	pop    rdi
   14001d8da:	ret    
   14001d8db:	int3   
   14001d8dc:	mov    rax,rsp
   14001d8df:	push   rbp
   14001d8e0:	push   rsi
   14001d8e1:	push   rdi
   14001d8e2:	lea    rbp,[rax-0x28]
   14001d8e6:	sub    rsp,0x110
   14001d8ed:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001d8f6:	mov    QWORD PTR [rax+0x18],rbx
   14001d8fa:	mov    rax,QWORD PTR [rip+0x4a8ef]        # 0x1400681f0
   14001d901:	xor    rax,rsp
   14001d904:	mov    QWORD PTR [rbp+0x0],rax
   14001d908:	mov    rbx,rdx
   14001d90b:	mov    rdi,rcx
   14001d90e:	xor    esi,esi
   14001d910:	cmp    QWORD PTR [rcx+0x10],rsi
   14001d914:	je     0x14001db91
   14001d91a:	cmp    QWORD PTR [rdx+0x10],rsi
   14001d91e:	je     0x14001db91
   14001d924:	lea    r8,[rsp+0x30]
   14001d929:	lea    rdx,[rsp+0x30]
   14001d92e:	lea    rcx,[rsp+0x38]
   14001d933:	call   0x140005454
   14001d938:	nop
   14001d939:	mov    rdx,rdi
   14001d93c:	lea    rcx,[rsp+0x38]
   14001d941:	call   0x140001eac
   14001d946:	lea    edi,[rsi+0xf]
   14001d949:	mov    QWORD PTR [rbp-0x38],rdi
   14001d94d:	mov    QWORD PTR [rbp-0x40],rsi
   14001d951:	mov    BYTE PTR [rbp-0x50],sil
   14001d955:	lea    rcx,[rip+0x33834]        # 0x140051190
   14001d95c:	call   QWORD PTR [rip+0x2bca6]        # 0x140049608
   14001d962:	mov    r8,rax
   14001d965:	lea    rdx,[rip+0x33824]        # 0x140051190
   14001d96c:	lea    rcx,[rbp-0x50]
   14001d970:	call   0x140005154
   14001d975:	nop
   14001d976:	mov    QWORD PTR [rbp-0x60],rdi
   14001d97a:	mov    QWORD PTR [rbp-0x68],rsi
   14001d97e:	mov    BYTE PTR [rbp-0x78],sil
   14001d982:	lea    rcx,[rip+0x33f6f]        # 0x1400518f8
   14001d989:	call   QWORD PTR [rip+0x2bc79]        # 0x140049608
   14001d98f:	mov    r8,rax
   14001d992:	lea    rdx,[rip+0x33f5f]        # 0x1400518f8
   14001d999:	lea    rcx,[rbp-0x78]
   14001d99d:	call   0x140005154
   14001d9a2:	nop
   14001d9a3:	mov    QWORD PTR [rsp+0x78],rdi
   14001d9a8:	mov    QWORD PTR [rsp+0x70],rsi
   14001d9ad:	mov    BYTE PTR [rsp+0x60],sil
   14001d9b2:	lea    rcx,[rip+0x333db]        # 0x140050d94
   14001d9b9:	call   QWORD PTR [rip+0x2bc49]        # 0x140049608
   14001d9bf:	mov    r8,rax
   14001d9c2:	lea    rdx,[rip+0x333cb]        # 0x140050d94
   14001d9c9:	lea    rcx,[rsp+0x60]
   14001d9ce:	call   0x140005154
   14001d9d3:	nop
   14001d9d4:	lea    rax,[rbp-0x50]
   14001d9d8:	mov    QWORD PTR [rsp+0x20],rax
   14001d9dd:	lea    r9,[rbp-0x78]
   14001d9e1:	lea    r8,[rsp+0x60]
   14001d9e6:	lea    rdx,[rbp-0x28]
   14001d9ea:	lea    rcx,[rsp+0x38]
   14001d9ef:	call   0x1400017e8
   14001d9f4:	cmp    QWORD PTR [rbp-0x10],0x10
   14001d9f9:	jb     0x14001da05
   14001d9fb:	mov    rcx,QWORD PTR [rbp-0x28]
   14001d9ff:	call   QWORD PTR [rip+0x2bc73]        # 0x140049678
   14001da05:	mov    QWORD PTR [rbp-0x10],rdi
   14001da09:	mov    QWORD PTR [rbp-0x18],rsi
   14001da0d:	mov    BYTE PTR [rbp-0x28],sil
   14001da11:	cmp    QWORD PTR [rsp+0x78],0x10
   14001da17:	jb     0x14001da24
   14001da19:	mov    rcx,QWORD PTR [rsp+0x60]
   14001da1e:	call   QWORD PTR [rip+0x2bc54]        # 0x140049678
   14001da24:	mov    QWORD PTR [rsp+0x78],rdi
   14001da29:	mov    QWORD PTR [rsp+0x70],rsi
   14001da2e:	mov    BYTE PTR [rsp+0x60],sil
   14001da33:	cmp    QWORD PTR [rbp-0x60],0x10
   14001da38:	jb     0x14001da44
   14001da3a:	mov    rcx,QWORD PTR [rbp-0x78]
   14001da3e:	call   QWORD PTR [rip+0x2bc34]        # 0x140049678
   14001da44:	mov    QWORD PTR [rbp-0x60],rdi
   14001da48:	mov    QWORD PTR [rbp-0x68],rsi
   14001da4c:	mov    BYTE PTR [rbp-0x78],sil
   14001da50:	cmp    QWORD PTR [rbp-0x38],0x10
   14001da55:	jb     0x14001da61
   14001da57:	mov    rcx,QWORD PTR [rbp-0x50]
   14001da5b:	call   QWORD PTR [rip+0x2bc17]        # 0x140049678
   14001da61:	mov    QWORD PTR [rbp-0x38],rdi
   14001da65:	mov    QWORD PTR [rbp-0x40],rsi
   14001da69:	mov    BYTE PTR [rbp-0x50],sil
   14001da6d:	lea    rcx,[rip+0x32e81]        # 0x1400508f5
   14001da74:	call   QWORD PTR [rip+0x2bb8e]        # 0x140049608
   14001da7a:	mov    r8,rax
   14001da7d:	lea    rdx,[rip+0x32e71]        # 0x1400508f5
   14001da84:	lea    rcx,[rbp-0x50]
   14001da88:	call   0x140005154
   14001da8d:	nop
   14001da8e:	mov    QWORD PTR [rsp+0x78],rdi
   14001da93:	mov    QWORD PTR [rsp+0x70],rsi
   14001da98:	mov    BYTE PTR [rsp+0x60],sil
   14001da9d:	lea    rcx,[rip+0x33e5c]        # 0x140051900
   14001daa4:	call   QWORD PTR [rip+0x2bb5e]        # 0x140049608
   14001daaa:	mov    r8,rax
   14001daad:	lea    rdx,[rip+0x33e4c]        # 0x140051900
   14001dab4:	lea    rcx,[rsp+0x60]
   14001dab9:	call   0x140005154
   14001dabe:	nop
   14001dabf:	mov    QWORD PTR [rbp-0x60],rdi
   14001dac3:	mov    QWORD PTR [rbp-0x68],rsi
   14001dac7:	mov    BYTE PTR [rbp-0x78],sil
   14001dacb:	lea    rcx,[rip+0x332c2]        # 0x140050d94
   14001dad2:	call   QWORD PTR [rip+0x2bb30]        # 0x140049608
   14001dad8:	mov    r8,rax
   14001dadb:	lea    rdx,[rip+0x332b2]        # 0x140050d94
   14001dae2:	lea    rcx,[rbp-0x78]
   14001dae6:	call   0x140005154
   14001daeb:	nop
   14001daec:	lea    rax,[rbp-0x50]
   14001daf0:	mov    QWORD PTR [rsp+0x20],rax
   14001daf5:	lea    r9,[rsp+0x60]
   14001dafa:	lea    r8,[rbp-0x78]
   14001dafe:	lea    rdx,[rbp-0x28]
   14001db02:	lea    rcx,[rsp+0x38]
   14001db07:	call   0x1400017e8
   14001db0c:	cmp    QWORD PTR [rbp-0x10],0x10
   14001db11:	jb     0x14001db1d
   14001db13:	mov    rcx,QWORD PTR [rbp-0x28]
   14001db17:	call   QWORD PTR [rip+0x2bb5b]        # 0x140049678
   14001db1d:	mov    QWORD PTR [rbp-0x10],rdi
   14001db21:	mov    QWORD PTR [rbp-0x18],rsi
   14001db25:	mov    BYTE PTR [rbp-0x28],sil
   14001db29:	cmp    QWORD PTR [rbp-0x60],0x10
   14001db2e:	jb     0x14001db3a
   14001db30:	mov    rcx,QWORD PTR [rbp-0x78]
   14001db34:	call   QWORD PTR [rip+0x2bb3e]        # 0x140049678
   14001db3a:	mov    QWORD PTR [rbp-0x60],rdi
   14001db3e:	mov    QWORD PTR [rbp-0x68],rsi
   14001db42:	mov    BYTE PTR [rbp-0x78],sil
   14001db46:	cmp    QWORD PTR [rsp+0x78],0x10
   14001db4c:	jb     0x14001db59
   14001db4e:	mov    rcx,QWORD PTR [rsp+0x60]
   14001db53:	call   QWORD PTR [rip+0x2bb1f]        # 0x140049678
   14001db59:	mov    QWORD PTR [rsp+0x78],rdi
   14001db5e:	mov    QWORD PTR [rsp+0x70],rsi
   14001db63:	mov    BYTE PTR [rsp+0x60],sil
   14001db68:	cmp    QWORD PTR [rbp-0x38],0x10
   14001db6d:	jb     0x14001db79
   14001db6f:	mov    rcx,QWORD PTR [rbp-0x50]
   14001db73:	call   QWORD PTR [rip+0x2baff]        # 0x140049678
   14001db79:	mov    rdx,rbx
   14001db7c:	lea    rcx,[rsp+0x38]
   14001db81:	call   0x1400020e8
   14001db86:	nop
   14001db87:	lea    rcx,[rsp+0x38]
   14001db8c:	call   0x1400013c0
   14001db91:	mov    rcx,QWORD PTR [rbp+0x0]
   14001db95:	xor    rcx,rsp
   14001db98:	call   0x14002b100
   14001db9d:	mov    rbx,QWORD PTR [rsp+0x140]
   14001dba5:	add    rsp,0x110
   14001dbac:	pop    rdi
   14001dbad:	pop    rsi
   14001dbae:	pop    rbp
   14001dbaf:	ret    
   14001dbb0:	mov    rax,rsp
   14001dbb3:	push   rbp
   14001dbb4:	push   r12
   14001dbb6:	push   r13
   14001dbb8:	lea    rbp,[rax-0x28]
   14001dbbc:	sub    rsp,0x110
   14001dbc3:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001dbcc:	mov    QWORD PTR [rax+0x10],rbx
   14001dbd0:	mov    QWORD PTR [rax+0x18],rsi
   14001dbd4:	mov    QWORD PTR [rax+0x20],rdi
   14001dbd8:	mov    rax,QWORD PTR [rip+0x4a611]        # 0x1400681f0
   14001dbdf:	xor    rax,rsp
   14001dbe2:	mov    QWORD PTR [rbp+0x0],rax
   14001dbe6:	mov    rbx,rcx
   14001dbe9:	xor    edi,edi
   14001dbeb:	cmp    QWORD PTR [rcx+0x10],rdi
   14001dbef:	je     0x14001e174
   14001dbf5:	lea    r8,[rsp+0x30]
   14001dbfa:	lea    rdx,[rsp+0x30]
   14001dbff:	lea    rcx,[rsp+0x38]
   14001dc04:	call   0x140005454
   14001dc09:	nop
   14001dc0a:	lea    esi,[rdi+0xf]
   14001dc0d:	mov    QWORD PTR [rbp-0x38],rsi
   14001dc11:	mov    QWORD PTR [rbp-0x40],rdi
   14001dc15:	mov    BYTE PTR [rbp-0x50],dil
   14001dc19:	lea    rcx,[rip+0x33cec]        # 0x14005190c
   14001dc20:	call   QWORD PTR [rip+0x2b9e2]        # 0x140049608
   14001dc26:	mov    r8,rax
   14001dc29:	lea    rdx,[rip+0x33cdc]        # 0x14005190c
   14001dc30:	lea    rcx,[rbp-0x50]
   14001dc34:	call   0x140005154
   14001dc39:	nop
   14001dc3a:	mov    QWORD PTR [rbp-0x60],rsi
   14001dc3e:	mov    QWORD PTR [rbp-0x68],rdi
   14001dc42:	mov    BYTE PTR [rbp-0x78],dil
   14001dc46:	lea    rcx,[rip+0x33cc3]        # 0x140051910
   14001dc4d:	call   QWORD PTR [rip+0x2b9b5]        # 0x140049608
   14001dc53:	mov    r8,rax
   14001dc56:	lea    rdx,[rip+0x33cb3]        # 0x140051910
   14001dc5d:	lea    rcx,[rbp-0x78]
   14001dc61:	call   0x140005154
   14001dc66:	nop
   14001dc67:	mov    QWORD PTR [rsp+0x78],rsi
   14001dc6c:	mov    QWORD PTR [rsp+0x70],rdi
   14001dc71:	mov    BYTE PTR [rsp+0x60],dil
   14001dc76:	lea    r13,[rip+0x33ca3]        # 0x140051920
   14001dc7d:	mov    rcx,r13
   14001dc80:	call   QWORD PTR [rip+0x2b982]        # 0x140049608
   14001dc86:	mov    r8,rax
   14001dc89:	mov    rdx,r13
   14001dc8c:	lea    rcx,[rsp+0x60]
   14001dc91:	call   0x140005154
   14001dc96:	nop
   14001dc97:	lea    rax,[rbp-0x50]
   14001dc9b:	mov    QWORD PTR [rsp+0x20],rax
   14001dca0:	lea    r9,[rbp-0x78]
   14001dca4:	lea    r8,[rsp+0x60]
   14001dca9:	lea    rdx,[rbp-0x28]
   14001dcad:	lea    rcx,[rsp+0x38]
   14001dcb2:	call   0x1400017e8
   14001dcb7:	lea    r12d,[rdi+0x10]
   14001dcbb:	cmp    QWORD PTR [rbp-0x10],r12
   14001dcbf:	jb     0x14001dccb
   14001dcc1:	mov    rcx,QWORD PTR [rbp-0x28]
   14001dcc5:	call   QWORD PTR [rip+0x2b9ad]        # 0x140049678
   14001dccb:	mov    QWORD PTR [rbp-0x10],rsi
   14001dccf:	mov    QWORD PTR [rbp-0x18],rdi
   14001dcd3:	mov    BYTE PTR [rbp-0x28],dil
   14001dcd7:	cmp    QWORD PTR [rsp+0x78],r12
   14001dcdc:	jb     0x14001dce9
   14001dcde:	mov    rcx,QWORD PTR [rsp+0x60]
   14001dce3:	call   QWORD PTR [rip+0x2b98f]        # 0x140049678
   14001dce9:	mov    QWORD PTR [rsp+0x78],rsi
   14001dcee:	mov    QWORD PTR [rsp+0x70],rdi
   14001dcf3:	mov    BYTE PTR [rsp+0x60],dil
   14001dcf8:	cmp    QWORD PTR [rbp-0x60],r12
   14001dcfc:	jb     0x14001dd08
   14001dcfe:	mov    rcx,QWORD PTR [rbp-0x78]
   14001dd02:	call   QWORD PTR [rip+0x2b970]        # 0x140049678
   14001dd08:	mov    QWORD PTR [rbp-0x60],rsi
   14001dd0c:	mov    QWORD PTR [rbp-0x68],rdi
   14001dd10:	mov    BYTE PTR [rbp-0x78],dil
   14001dd14:	cmp    QWORD PTR [rbp-0x38],r12
   14001dd18:	jb     0x14001dd24
   14001dd1a:	mov    rcx,QWORD PTR [rbp-0x50]
   14001dd1e:	call   QWORD PTR [rip+0x2b954]        # 0x140049678
   14001dd24:	mov    QWORD PTR [rbp-0x38],rsi
   14001dd28:	mov    QWORD PTR [rbp-0x40],rdi
   14001dd2c:	mov    BYTE PTR [rbp-0x50],dil
   14001dd30:	lea    rcx,[rip+0x33bd5]        # 0x14005190c
   14001dd37:	call   QWORD PTR [rip+0x2b8cb]        # 0x140049608
   14001dd3d:	mov    r8,rax
   14001dd40:	lea    rdx,[rip+0x33bc5]        # 0x14005190c
   14001dd47:	lea    rcx,[rbp-0x50]
   14001dd4b:	call   0x140005154
   14001dd50:	nop
   14001dd51:	mov    QWORD PTR [rsp+0x78],rsi
   14001dd56:	mov    QWORD PTR [rsp+0x70],rdi
   14001dd5b:	mov    BYTE PTR [rsp+0x60],dil
   14001dd60:	lea    rcx,[rip+0x33bc9]        # 0x140051930
   14001dd67:	call   QWORD PTR [rip+0x2b89b]        # 0x140049608
   14001dd6d:	mov    r8,rax
   14001dd70:	lea    rdx,[rip+0x33bb9]        # 0x140051930
   14001dd77:	lea    rcx,[rsp+0x60]
   14001dd7c:	call   0x140005154
   14001dd81:	nop
   14001dd82:	mov    QWORD PTR [rbp-0x60],rsi
   14001dd86:	mov    QWORD PTR [rbp-0x68],rdi
   14001dd8a:	mov    BYTE PTR [rbp-0x78],dil
   14001dd8e:	mov    rcx,r13
   14001dd91:	call   QWORD PTR [rip+0x2b871]        # 0x140049608
   14001dd97:	mov    r8,rax
   14001dd9a:	mov    rdx,r13
   14001dd9d:	lea    rcx,[rbp-0x78]
   14001dda1:	call   0x140005154
   14001dda6:	nop
   14001dda7:	lea    rax,[rbp-0x50]
   14001ddab:	mov    QWORD PTR [rsp+0x20],rax
   14001ddb0:	lea    r9,[rsp+0x60]
   14001ddb5:	lea    r8,[rbp-0x78]
   14001ddb9:	lea    rdx,[rbp-0x28]
   14001ddbd:	lea    rcx,[rsp+0x38]
   14001ddc2:	call   0x1400017e8
   14001ddc7:	cmp    QWORD PTR [rbp-0x10],r12
   14001ddcb:	jb     0x14001ddd7
   14001ddcd:	mov    rcx,QWORD PTR [rbp-0x28]
   14001ddd1:	call   QWORD PTR [rip+0x2b8a1]        # 0x140049678
   14001ddd7:	mov    QWORD PTR [rbp-0x10],rsi
   14001dddb:	mov    QWORD PTR [rbp-0x18],rdi
   14001dddf:	mov    BYTE PTR [rbp-0x28],dil
   14001dde3:	cmp    QWORD PTR [rbp-0x60],r12
   14001dde7:	jb     0x14001ddf3
   14001dde9:	mov    rcx,QWORD PTR [rbp-0x78]
   14001dded:	call   QWORD PTR [rip+0x2b885]        # 0x140049678
   14001ddf3:	mov    QWORD PTR [rbp-0x60],rsi
   14001ddf7:	mov    QWORD PTR [rbp-0x68],rdi
   14001ddfb:	mov    BYTE PTR [rbp-0x78],dil
   14001ddff:	cmp    QWORD PTR [rsp+0x78],r12
   14001de04:	jb     0x14001de11
   14001de06:	mov    rcx,QWORD PTR [rsp+0x60]
   14001de0b:	call   QWORD PTR [rip+0x2b867]        # 0x140049678
   14001de11:	mov    QWORD PTR [rsp+0x78],rsi
   14001de16:	mov    QWORD PTR [rsp+0x70],rdi
   14001de1b:	mov    BYTE PTR [rsp+0x60],dil
   14001de20:	cmp    QWORD PTR [rbp-0x38],r12
   14001de24:	jb     0x14001de30
   14001de26:	mov    rcx,QWORD PTR [rbp-0x50]
   14001de2a:	call   QWORD PTR [rip+0x2b848]        # 0x140049678
   14001de30:	mov    QWORD PTR [rbp-0x38],rsi
   14001de34:	mov    QWORD PTR [rbp-0x40],rdi
   14001de38:	mov    BYTE PTR [rbp-0x50],dil
   14001de3c:	lea    rcx,[rip+0x32c95]        # 0x140050ad8
   14001de43:	call   QWORD PTR [rip+0x2b7bf]        # 0x140049608
   14001de49:	mov    r8,rax
   14001de4c:	lea    rdx,[rip+0x32c85]        # 0x140050ad8
   14001de53:	lea    rcx,[rbp-0x50]
   14001de57:	call   0x140005154
   14001de5c:	nop
   14001de5d:	mov    QWORD PTR [rsp+0x78],rsi
   14001de62:	mov    QWORD PTR [rsp+0x70],rdi
   14001de67:	mov    BYTE PTR [rsp+0x60],dil
   14001de6c:	lea    rcx,[rip+0x33acd]        # 0x140051940
   14001de73:	call   QWORD PTR [rip+0x2b78f]        # 0x140049608
   14001de79:	mov    r8,rax
   14001de7c:	lea    rdx,[rip+0x33abd]        # 0x140051940
   14001de83:	lea    rcx,[rsp+0x60]
   14001de88:	call   0x140005154
   14001de8d:	nop
   14001de8e:	mov    QWORD PTR [rbp-0x60],rsi
   14001de92:	mov    QWORD PTR [rbp-0x68],rdi
   14001de96:	mov    BYTE PTR [rbp-0x78],dil
   14001de9a:	mov    rcx,r13
   14001de9d:	call   QWORD PTR [rip+0x2b765]        # 0x140049608
   14001dea3:	mov    r8,rax
   14001dea6:	mov    rdx,r13
   14001dea9:	lea    rcx,[rbp-0x78]
   14001dead:	call   0x140005154
   14001deb2:	nop
   14001deb3:	lea    rax,[rbp-0x50]
   14001deb7:	mov    QWORD PTR [rsp+0x20],rax
   14001debc:	lea    r9,[rsp+0x60]
   14001dec1:	lea    r8,[rbp-0x78]
   14001dec5:	lea    rdx,[rbp-0x28]
   14001dec9:	lea    rcx,[rsp+0x38]
   14001dece:	call   0x1400017e8
   14001ded3:	cmp    QWORD PTR [rbp-0x10],r12
   14001ded7:	jb     0x14001dee3
   14001ded9:	mov    rcx,QWORD PTR [rbp-0x28]
   14001dedd:	call   QWORD PTR [rip+0x2b795]        # 0x140049678
   14001dee3:	mov    QWORD PTR [rbp-0x10],rsi
   14001dee7:	mov    QWORD PTR [rbp-0x18],rdi
   14001deeb:	mov    BYTE PTR [rbp-0x28],dil
   14001deef:	cmp    QWORD PTR [rbp-0x60],r12
   14001def3:	jb     0x14001deff
   14001def5:	mov    rcx,QWORD PTR [rbp-0x78]
   14001def9:	call   QWORD PTR [rip+0x2b779]        # 0x140049678
   14001deff:	mov    QWORD PTR [rbp-0x60],rsi
   14001df03:	mov    QWORD PTR [rbp-0x68],rdi
   14001df07:	mov    BYTE PTR [rbp-0x78],dil
   14001df0b:	cmp    QWORD PTR [rsp+0x78],r12
   14001df10:	jb     0x14001df1d
   14001df12:	mov    rcx,QWORD PTR [rsp+0x60]
   14001df17:	call   QWORD PTR [rip+0x2b75b]        # 0x140049678
   14001df1d:	mov    QWORD PTR [rsp+0x78],rsi
   14001df22:	mov    QWORD PTR [rsp+0x70],rdi
   14001df27:	mov    BYTE PTR [rsp+0x60],dil
   14001df2c:	cmp    QWORD PTR [rbp-0x38],r12
   14001df30:	jb     0x14001df3c
   14001df32:	mov    rcx,QWORD PTR [rbp-0x50]
   14001df36:	call   QWORD PTR [rip+0x2b73c]        # 0x140049678
   14001df3c:	mov    QWORD PTR [rbp-0x38],rsi
   14001df40:	mov    QWORD PTR [rbp-0x40],rdi
   14001df44:	mov    BYTE PTR [rbp-0x50],dil
   14001df48:	lea    rcx,[rip+0x33a01]        # 0x140051950
   14001df4f:	call   QWORD PTR [rip+0x2b6b3]        # 0x140049608
   14001df55:	mov    r8,rax
   14001df58:	lea    rdx,[rip+0x339f1]        # 0x140051950
   14001df5f:	lea    rcx,[rbp-0x50]
   14001df63:	call   0x140005154
   14001df68:	nop
   14001df69:	mov    QWORD PTR [rsp+0x78],rsi
   14001df6e:	mov    QWORD PTR [rsp+0x70],rdi
   14001df73:	mov    BYTE PTR [rsp+0x60],dil
   14001df78:	lea    rcx,[rip+0x339f5]        # 0x140051974
   14001df7f:	call   QWORD PTR [rip+0x2b683]        # 0x140049608
   14001df85:	mov    r8,rax
   14001df88:	lea    rdx,[rip+0x339e5]        # 0x140051974
   14001df8f:	lea    rcx,[rsp+0x60]
   14001df94:	call   0x140005154
   14001df99:	nop
   14001df9a:	mov    QWORD PTR [rbp-0x60],rsi
   14001df9e:	mov    QWORD PTR [rbp-0x68],rdi
   14001dfa2:	mov    BYTE PTR [rbp-0x78],dil
   14001dfa6:	mov    rcx,r13
   14001dfa9:	call   QWORD PTR [rip+0x2b659]        # 0x140049608
   14001dfaf:	mov    r8,rax
   14001dfb2:	mov    rdx,r13
   14001dfb5:	lea    rcx,[rbp-0x78]
   14001dfb9:	call   0x140005154
   14001dfbe:	nop
   14001dfbf:	lea    rax,[rbp-0x50]
   14001dfc3:	mov    QWORD PTR [rsp+0x20],rax
   14001dfc8:	lea    r9,[rsp+0x60]
   14001dfcd:	lea    r8,[rbp-0x78]
   14001dfd1:	lea    rdx,[rbp-0x28]
   14001dfd5:	lea    rcx,[rsp+0x38]
   14001dfda:	call   0x1400017e8
   14001dfdf:	cmp    QWORD PTR [rbp-0x10],r12
   14001dfe3:	jb     0x14001dfef
   14001dfe5:	mov    rcx,QWORD PTR [rbp-0x28]
   14001dfe9:	call   QWORD PTR [rip+0x2b689]        # 0x140049678
   14001dfef:	mov    QWORD PTR [rbp-0x10],rsi
   14001dff3:	mov    QWORD PTR [rbp-0x18],rdi
   14001dff7:	mov    BYTE PTR [rbp-0x28],dil
   14001dffb:	cmp    QWORD PTR [rbp-0x60],r12
   14001dfff:	jb     0x14001e00b
   14001e001:	mov    rcx,QWORD PTR [rbp-0x78]
   14001e005:	call   QWORD PTR [rip+0x2b66d]        # 0x140049678
   14001e00b:	mov    QWORD PTR [rbp-0x60],rsi
   14001e00f:	mov    QWORD PTR [rbp-0x68],rdi
   14001e013:	mov    BYTE PTR [rbp-0x78],dil
   14001e017:	cmp    QWORD PTR [rsp+0x78],r12
   14001e01c:	jb     0x14001e029
   14001e01e:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e023:	call   QWORD PTR [rip+0x2b64f]        # 0x140049678
   14001e029:	mov    QWORD PTR [rsp+0x78],rsi
   14001e02e:	mov    QWORD PTR [rsp+0x70],rdi
   14001e033:	mov    BYTE PTR [rsp+0x60],dil
   14001e038:	cmp    QWORD PTR [rbp-0x38],r12
   14001e03c:	jb     0x14001e048
   14001e03e:	mov    rcx,QWORD PTR [rbp-0x50]
   14001e042:	call   QWORD PTR [rip+0x2b630]        # 0x140049678
   14001e048:	mov    QWORD PTR [rbp-0x38],rsi
   14001e04c:	mov    QWORD PTR [rbp-0x40],rdi
   14001e050:	mov    BYTE PTR [rbp-0x50],dil
   14001e054:	lea    rcx,[rip+0x33135]        # 0x140051190
   14001e05b:	call   QWORD PTR [rip+0x2b5a7]        # 0x140049608
   14001e061:	mov    r8,rax
   14001e064:	lea    rdx,[rip+0x33125]        # 0x140051190
   14001e06b:	lea    rcx,[rbp-0x50]
   14001e06f:	call   0x140005154
   14001e074:	nop
   14001e075:	mov    QWORD PTR [rsp+0x78],rsi
   14001e07a:	mov    QWORD PTR [rsp+0x70],rdi
   14001e07f:	mov    BYTE PTR [rsp+0x60],dil
   14001e084:	lea    rcx,[rip+0x3386d]        # 0x1400518f8
   14001e08b:	call   QWORD PTR [rip+0x2b577]        # 0x140049608
   14001e091:	mov    r8,rax
   14001e094:	lea    rdx,[rip+0x3385d]        # 0x1400518f8
   14001e09b:	lea    rcx,[rsp+0x60]
   14001e0a0:	call   0x140005154
   14001e0a5:	nop
   14001e0a6:	mov    QWORD PTR [rbp-0x60],rsi
   14001e0aa:	mov    QWORD PTR [rbp-0x68],rdi
   14001e0ae:	mov    BYTE PTR [rbp-0x78],dil
   14001e0b2:	lea    rcx,[rip+0x32cdb]        # 0x140050d94
   14001e0b9:	call   QWORD PTR [rip+0x2b549]        # 0x140049608
   14001e0bf:	mov    r8,rax
   14001e0c2:	lea    rdx,[rip+0x32ccb]        # 0x140050d94
   14001e0c9:	lea    rcx,[rbp-0x78]
   14001e0cd:	call   0x140005154
   14001e0d2:	nop
   14001e0d3:	lea    rax,[rbp-0x50]
   14001e0d7:	mov    QWORD PTR [rsp+0x20],rax
   14001e0dc:	lea    r9,[rsp+0x60]
   14001e0e1:	lea    r8,[rbp-0x78]
   14001e0e5:	lea    rdx,[rbp-0x28]
   14001e0e9:	lea    rcx,[rsp+0x38]
   14001e0ee:	call   0x1400017e8
   14001e0f3:	cmp    QWORD PTR [rbp-0x10],r12
   14001e0f7:	jb     0x14001e103
   14001e0f9:	mov    rcx,QWORD PTR [rbp-0x28]
   14001e0fd:	call   QWORD PTR [rip+0x2b575]        # 0x140049678
   14001e103:	mov    QWORD PTR [rbp-0x10],rsi
   14001e107:	mov    QWORD PTR [rbp-0x18],rdi
   14001e10b:	mov    BYTE PTR [rbp-0x28],dil
   14001e10f:	cmp    QWORD PTR [rbp-0x60],r12
   14001e113:	jb     0x14001e11f
   14001e115:	mov    rcx,QWORD PTR [rbp-0x78]
   14001e119:	call   QWORD PTR [rip+0x2b559]        # 0x140049678
   14001e11f:	mov    QWORD PTR [rbp-0x60],rsi
   14001e123:	mov    QWORD PTR [rbp-0x68],rdi
   14001e127:	mov    BYTE PTR [rbp-0x78],dil
   14001e12b:	cmp    QWORD PTR [rsp+0x78],r12
   14001e130:	jb     0x14001e13d
   14001e132:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e137:	call   QWORD PTR [rip+0x2b53b]        # 0x140049678
   14001e13d:	mov    QWORD PTR [rsp+0x78],rsi
   14001e142:	mov    QWORD PTR [rsp+0x70],rdi
   14001e147:	mov    BYTE PTR [rsp+0x60],dil
   14001e14c:	cmp    QWORD PTR [rbp-0x38],r12
   14001e150:	jb     0x14001e15c
   14001e152:	mov    rcx,QWORD PTR [rbp-0x50]
   14001e156:	call   QWORD PTR [rip+0x2b51c]        # 0x140049678
   14001e15c:	mov    rdx,rbx
   14001e15f:	lea    rcx,[rsp+0x38]
   14001e164:	call   0x1400020e8
   14001e169:	nop
   14001e16a:	lea    rcx,[rsp+0x38]
   14001e16f:	call   0x1400013c0
   14001e174:	mov    rcx,QWORD PTR [rbp+0x0]
   14001e178:	xor    rcx,rsp
   14001e17b:	call   0x14002b100
   14001e180:	lea    r11,[rsp+0x110]
   14001e188:	mov    rbx,QWORD PTR [r11+0x28]
   14001e18c:	mov    rsi,QWORD PTR [r11+0x30]
   14001e190:	mov    rdi,QWORD PTR [r11+0x38]
   14001e194:	mov    rsp,r11
   14001e197:	pop    r13
   14001e199:	pop    r12
   14001e19b:	pop    rbp
   14001e19c:	ret    
   14001e19d:	int3   
   14001e19e:	int3   
   14001e19f:	int3   
   14001e1a0:	rex push rbp
   14001e1a2:	push   rbx
   14001e1a3:	push   rsi
   14001e1a4:	push   rdi
   14001e1a5:	push   r12
   14001e1a7:	push   r14
   14001e1a9:	lea    rbp,[rsp-0x27]
   14001e1ae:	sub    rsp,0xe8
   14001e1b5:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001e1be:	mov    rax,QWORD PTR [rip+0x4a02b]        # 0x1400681f0
   14001e1c5:	xor    rax,rsp
   14001e1c8:	mov    QWORD PTR [rbp+0x17],rax
   14001e1cc:	mov    rsi,r9
   14001e1cf:	mov    rdi,r8
   14001e1d2:	mov    rbx,rdx
   14001e1d5:	mov    r12,QWORD PTR [rbp+0x7f]
   14001e1d9:	lea    r8,[rip+0x32bbc]        # 0x140050d9c
   14001e1e0:	mov    rdx,rcx
   14001e1e3:	lea    rcx,[rbp-0x61]
   14001e1e7:	call   0x1400112ec
   14001e1ec:	nop
   14001e1ed:	mov    r8,rbx
   14001e1f0:	mov    rdx,rax
   14001e1f3:	lea    rcx,[rbp-0x11]
   14001e1f7:	call   0x140005e40
   14001e1fc:	nop
   14001e1fd:	cmp    QWORD PTR [rbp-0x49],0x10
   14001e202:	jb     0x14001e20e
   14001e204:	mov    rcx,QWORD PTR [rbp-0x61]
   14001e208:	call   QWORD PTR [rip+0x2b46a]        # 0x140049678
   14001e20e:	mov    r14d,0xf
   14001e214:	mov    QWORD PTR [rbp-0x49],r14
   14001e218:	and    QWORD PTR [rbp-0x51],0x0
   14001e21d:	mov    BYTE PTR [rbp-0x61],0x0
   14001e221:	lea    r9,[rbp-0x11]
   14001e225:	mov    r8,rsi
   14001e228:	lea    rdx,[rsp+0x38]
   14001e22d:	mov    rcx,rdi
   14001e230:	call   0x140001404
   14001e235:	nop
   14001e236:	cmp    QWORD PTR [rbp-0x79],0x0
   14001e23b:	jne    0x14001e262
   14001e23d:	cmp    QWORD PTR [rbp-0x71],0x10
   14001e242:	jb     0x14001e24f
   14001e244:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e249:	call   QWORD PTR [rip+0x2b429]        # 0x140049678
   14001e24f:	mov    QWORD PTR [rbp-0x71],r14
   14001e253:	and    QWORD PTR [rbp-0x79],0x0
   14001e258:	mov    BYTE PTR [rsp+0x38],0x0
   14001e25d:	jmp    0x14001e363
   14001e262:	lea    rcx,[rip+0x32b37]        # 0x140050da0
   14001e269:	call   QWORD PTR [rip+0x2b399]        # 0x140049608
   14001e26f:	mov    r8,rax
   14001e272:	lea    rdx,[rip+0x32b27]        # 0x140050da0
   14001e279:	lea    rcx,[rsp+0x38]
   14001e27e:	call   0x1400049b8
   14001e283:	cmp    rax,0xffffffffffffffff
   14001e287:	je     0x14001e2c1
   14001e289:	mov    r9,QWORD PTR [rbp-0x79]
   14001e28d:	sub    r9,rax
   14001e290:	lea    r8,[rax+0x1]
   14001e294:	lea    rdx,[rbp-0x39]
   14001e298:	lea    rcx,[rsp+0x38]
   14001e29d:	call   0x140002e90
   14001e2a2:	nop
   14001e2a3:	lea    rcx,[rbp-0x39]
   14001e2a7:	call   0x14001e6f8
   14001e2ac:	mov    ebx,eax
   14001e2ae:	cmp    QWORD PTR [rbp-0x21],0x10
   14001e2b3:	jb     0x14001e2c3
   14001e2b5:	mov    rcx,QWORD PTR [rbp-0x39]
   14001e2b9:	call   QWORD PTR [rip+0x2b3b9]        # 0x140049678
   14001e2bf:	jmp    0x14001e2c3
   14001e2c1:	xor    ebx,ebx
   14001e2c3:	test   ebx,ebx
   14001e2c5:	jne    0x14001e33f
   14001e2c7:	mov    QWORD PTR [rbp-0x49],r14
   14001e2cb:	and    QWORD PTR [rbp-0x51],0x0
   14001e2d0:	mov    BYTE PTR [rbp-0x61],bl
   14001e2d3:	lea    rcx,[rip+0x3261b]        # 0x1400508f5
   14001e2da:	call   QWORD PTR [rip+0x2b328]        # 0x140049608
   14001e2e0:	mov    r8,rax
   14001e2e3:	lea    rdx,[rip+0x3260b]        # 0x1400508f5
   14001e2ea:	lea    rcx,[rbp-0x61]
   14001e2ee:	call   0x140005154
   14001e2f3:	nop
   14001e2f4:	lea    rax,[rbp-0x61]
   14001e2f8:	mov    QWORD PTR [rsp+0x20],rax
   14001e2fd:	lea    r9,[rbp-0x11]
   14001e301:	mov    r8,rsi
   14001e304:	lea    rdx,[rbp-0x39]
   14001e308:	mov    rcx,rdi
   14001e30b:	call   0x1400017e8
   14001e310:	cmp    QWORD PTR [rbp-0x21],0x10
   14001e315:	jb     0x14001e321
   14001e317:	mov    rcx,QWORD PTR [rbp-0x39]
   14001e31b:	call   QWORD PTR [rip+0x2b357]        # 0x140049678
   14001e321:	mov    QWORD PTR [rbp-0x21],r14
   14001e325:	and    QWORD PTR [rbp-0x29],0x0
   14001e32a:	mov    BYTE PTR [rbp-0x39],0x0
   14001e32e:	cmp    QWORD PTR [rbp-0x49],0x10
   14001e333:	jb     0x14001e33f
   14001e335:	mov    rcx,QWORD PTR [rbp-0x61]
   14001e339:	call   QWORD PTR [rip+0x2b339]        # 0x140049678
   14001e33f:	mov    DWORD PTR [r12],ebx
   14001e343:	cmp    QWORD PTR [rbp-0x71],0x10
   14001e348:	jb     0x14001e355
   14001e34a:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e34f:	call   QWORD PTR [rip+0x2b323]        # 0x140049678
   14001e355:	mov    QWORD PTR [rbp-0x71],r14
   14001e359:	and    QWORD PTR [rbp-0x79],0x0
   14001e35e:	mov    BYTE PTR [rsp+0x38],0x0
   14001e363:	cmp    QWORD PTR [rbp+0x7],0x10
   14001e368:	jb     0x14001e374
   14001e36a:	mov    rcx,QWORD PTR [rbp-0x11]
   14001e36e:	call   QWORD PTR [rip+0x2b304]        # 0x140049678
   14001e374:	xor    eax,eax
   14001e376:	mov    rcx,QWORD PTR [rbp+0x17]
   14001e37a:	xor    rcx,rsp
   14001e37d:	call   0x14002b100
   14001e382:	add    rsp,0xe8
   14001e389:	pop    r14
   14001e38b:	pop    r12
   14001e38d:	pop    rdi
   14001e38e:	pop    rsi
   14001e38f:	pop    rbx
   14001e390:	pop    rbp
   14001e391:	ret    
   14001e392:	int3   
   14001e393:	int3   
   14001e394:	rex push rbp
   14001e396:	push   rbx
   14001e397:	push   rsi
   14001e398:	push   rdi
   14001e399:	push   r12
   14001e39b:	push   r13
   14001e39d:	push   r15
   14001e39f:	lea    rbp,[rsp-0x60]
   14001e3a4:	sub    rsp,0x160
   14001e3ab:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001e3b4:	mov    rax,QWORD PTR [rip+0x49e35]        # 0x1400681f0
   14001e3bb:	xor    rax,rsp
   14001e3be:	mov    QWORD PTR [rbp+0x50],rax
   14001e3c2:	mov    r12,r8
   14001e3c5:	mov    rsi,rdx
   14001e3c8:	mov    rdi,rcx
   14001e3cb:	mov    r15d,0xf
   14001e3d1:	mov    QWORD PTR [rbp-0x10],r15
   14001e3d5:	xor    r13d,r13d
   14001e3d8:	mov    QWORD PTR [rbp-0x18],r13
   14001e3dc:	mov    BYTE PTR [rbp-0x28],r13b
   14001e3e0:	lea    rcx,[rip+0x33511]        # 0x1400518f8
   14001e3e7:	call   QWORD PTR [rip+0x2b21b]        # 0x140049608
   14001e3ed:	mov    r8,rax
   14001e3f0:	lea    rdx,[rip+0x33501]        # 0x1400518f8
   14001e3f7:	lea    rcx,[rbp-0x28]
   14001e3fb:	call   0x140005154
   14001e400:	nop
   14001e401:	lea    r9,[rbp-0x28]
   14001e405:	mov    r8,rsi
   14001e408:	lea    rdx,[rbp+0x0]
   14001e40c:	mov    rcx,rdi
   14001e40f:	call   0x140001404
   14001e414:	nop
   14001e415:	cmp    QWORD PTR [rbp-0x10],0x10
   14001e41a:	jb     0x14001e426
   14001e41c:	mov    rcx,QWORD PTR [rbp-0x28]
   14001e420:	call   QWORD PTR [rip+0x2b252]        # 0x140049678
   14001e426:	mov    QWORD PTR [rbp-0x10],r15
   14001e42a:	mov    QWORD PTR [rbp-0x18],r13
   14001e42e:	mov    BYTE PTR [rbp-0x28],r13b
   14001e432:	mov    ebx,r13d
   14001e435:	mov    eax,0x2
   14001e43a:	cmp    QWORD PTR [rbp+0x10],r13
   14001e43e:	je     0x14001e48c
   14001e440:	lea    rdx,[rip+0x32d49]        # 0x140051190
   14001e447:	lea    rcx,[rbp+0x0]
   14001e44b:	call   0x140002f24
   14001e450:	test   eax,eax
   14001e452:	je     0x14001e46b
   14001e454:	lea    rdx,[rip+0x3352d]        # 0x140051988
   14001e45b:	lea    rcx,[rbp+0x0]
   14001e45f:	call   0x140002f24
   14001e464:	test   eax,eax
   14001e466:	jne    0x14001e472
   14001e468:	lea    ebx,[rax+0x1]
   14001e46b:	mov    eax,0x2
   14001e470:	jmp    0x14001e48c
   14001e472:	lea    rdx,[rip+0x3351f]        # 0x140051998
   14001e479:	lea    rcx,[rbp+0x0]
   14001e47d:	call   0x140002f24
   14001e482:	test   eax,eax
   14001e484:	mov    eax,0x2
   14001e489:	cmove  ebx,eax
   14001e48c:	cmp    ebx,eax
   14001e48e:	jne    0x14001e5e9
   14001e494:	mov    QWORD PTR [rbp-0x38],r15
   14001e498:	mov    QWORD PTR [rbp-0x40],r13
   14001e49c:	mov    BYTE PTR [rbp-0x50],r13b
   14001e4a0:	lea    rcx,[rip+0x33459]        # 0x140051900
   14001e4a7:	call   QWORD PTR [rip+0x2b15b]        # 0x140049608
   14001e4ad:	mov    r8,rax
   14001e4b0:	lea    rdx,[rip+0x33449]        # 0x140051900
   14001e4b7:	lea    rcx,[rbp-0x50]
   14001e4bb:	call   0x140005154
   14001e4c0:	nop
   14001e4c1:	lea    r9,[rbp-0x50]
   14001e4c5:	mov    r8,rsi
   14001e4c8:	lea    rdx,[rbp+0x28]
   14001e4cc:	mov    rcx,rdi
   14001e4cf:	call   0x140001404
   14001e4d4:	nop
   14001e4d5:	cmp    QWORD PTR [rbp-0x38],0x10
   14001e4da:	jb     0x14001e4e6
   14001e4dc:	mov    rcx,QWORD PTR [rbp-0x50]
   14001e4e0:	call   QWORD PTR [rip+0x2b192]        # 0x140049678
   14001e4e6:	mov    QWORD PTR [rbp-0x38],r15
   14001e4ea:	mov    QWORD PTR [rbp-0x40],r13
   14001e4ee:	mov    BYTE PTR [rbp-0x50],r13b
   14001e4f2:	lea    rcx,[rbp+0x28]
   14001e4f6:	call   0x14001e6f8
   14001e4fb:	mov    ebx,eax
   14001e4fd:	test   eax,eax
   14001e4ff:	jne    0x14001e5d8
   14001e505:	mov    QWORD PTR [rsp+0x78],r15
   14001e50a:	mov    QWORD PTR [rsp+0x70],r13
   14001e50f:	mov    BYTE PTR [rsp+0x60],r13b
   14001e514:	lea    rcx,[rip+0x323da]        # 0x1400508f5
   14001e51b:	call   QWORD PTR [rip+0x2b0e7]        # 0x140049608
   14001e521:	mov    r8,rax
   14001e524:	lea    rdx,[rip+0x323ca]        # 0x1400508f5
   14001e52b:	lea    rcx,[rsp+0x60]
   14001e530:	call   0x140005154
   14001e535:	nop
   14001e536:	mov    QWORD PTR [rsp+0x50],r15
   14001e53b:	mov    QWORD PTR [rsp+0x48],r13
   14001e540:	mov    BYTE PTR [rsp+0x38],r13b
   14001e545:	lea    rcx,[rip+0x333b4]        # 0x140051900
   14001e54c:	call   QWORD PTR [rip+0x2b0b6]        # 0x140049608
   14001e552:	mov    r8,rax
   14001e555:	lea    rdx,[rip+0x333a4]        # 0x140051900
   14001e55c:	lea    rcx,[rsp+0x38]
   14001e561:	call   0x140005154
   14001e566:	nop
   14001e567:	lea    rax,[rsp+0x60]
   14001e56c:	mov    QWORD PTR [rsp+0x20],rax
   14001e571:	lea    r9,[rsp+0x38]
   14001e576:	mov    r8,rsi
   14001e579:	lea    rdx,[rbp-0x78]
   14001e57d:	mov    rcx,rdi
   14001e580:	call   0x1400017e8
   14001e585:	cmp    QWORD PTR [rbp-0x60],0x10
   14001e58a:	jb     0x14001e596
   14001e58c:	mov    rcx,QWORD PTR [rbp-0x78]
   14001e590:	call   QWORD PTR [rip+0x2b0e2]        # 0x140049678
   14001e596:	mov    QWORD PTR [rbp-0x60],r15
   14001e59a:	mov    QWORD PTR [rbp-0x68],r13
   14001e59e:	mov    BYTE PTR [rbp-0x78],r13b
   14001e5a2:	cmp    QWORD PTR [rsp+0x50],0x10
   14001e5a8:	jb     0x14001e5b5
   14001e5aa:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e5af:	call   QWORD PTR [rip+0x2b0c3]        # 0x140049678
   14001e5b5:	mov    QWORD PTR [rsp+0x50],r15
   14001e5ba:	mov    QWORD PTR [rsp+0x48],r13
   14001e5bf:	mov    BYTE PTR [rsp+0x38],r13b
   14001e5c4:	cmp    QWORD PTR [rsp+0x78],0x10
   14001e5ca:	jb     0x14001e5d8
   14001e5cc:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e5d1:	call   QWORD PTR [rip+0x2b0a1]        # 0x140049678
   14001e5d7:	nop
   14001e5d8:	cmp    QWORD PTR [rbp+0x40],0x10
   14001e5dd:	jb     0x14001e5e9
   14001e5df:	mov    rcx,QWORD PTR [rbp+0x28]
   14001e5e3:	call   QWORD PTR [rip+0x2b08f]        # 0x140049678
   14001e5e9:	test   ebx,ebx
   14001e5eb:	jne    0x14001e6c3
   14001e5f1:	mov    QWORD PTR [rsp+0x78],r15
   14001e5f6:	mov    QWORD PTR [rsp+0x70],r13
   14001e5fb:	mov    BYTE PTR [rsp+0x60],r13b
   14001e600:	lea    rcx,[rip+0x32b89]        # 0x140051190
   14001e607:	call   QWORD PTR [rip+0x2affb]        # 0x140049608
   14001e60d:	mov    r8,rax
   14001e610:	lea    rdx,[rip+0x32b79]        # 0x140051190
   14001e617:	lea    rcx,[rsp+0x60]
   14001e61c:	call   0x140005154
   14001e621:	nop
   14001e622:	mov    QWORD PTR [rsp+0x50],r15
   14001e627:	mov    QWORD PTR [rsp+0x48],r13
   14001e62c:	mov    BYTE PTR [rsp+0x38],r13b
   14001e631:	lea    rcx,[rip+0x332c0]        # 0x1400518f8
   14001e638:	call   QWORD PTR [rip+0x2afca]        # 0x140049608
   14001e63e:	mov    r8,rax
   14001e641:	lea    rdx,[rip+0x332b0]        # 0x1400518f8
   14001e648:	lea    rcx,[rsp+0x38]
   14001e64d:	call   0x140005154
   14001e652:	nop
   14001e653:	lea    rax,[rsp+0x60]
   14001e658:	mov    QWORD PTR [rsp+0x20],rax
   14001e65d:	lea    r9,[rsp+0x38]
   14001e662:	mov    r8,rsi
   14001e665:	lea    rdx,[rbp-0x78]
   14001e669:	mov    rcx,rdi
   14001e66c:	call   0x1400017e8
   14001e671:	cmp    QWORD PTR [rbp-0x60],0x10
   14001e676:	jb     0x14001e682
   14001e678:	mov    rcx,QWORD PTR [rbp-0x78]
   14001e67c:	call   QWORD PTR [rip+0x2aff6]        # 0x140049678
   14001e682:	mov    QWORD PTR [rbp-0x60],r15
   14001e686:	mov    QWORD PTR [rbp-0x68],r13
   14001e68a:	mov    BYTE PTR [rbp-0x78],r13b
   14001e68e:	cmp    QWORD PTR [rsp+0x50],0x10
   14001e694:	jb     0x14001e6a1
   14001e696:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e69b:	call   QWORD PTR [rip+0x2afd7]        # 0x140049678
   14001e6a1:	mov    QWORD PTR [rsp+0x50],r15
   14001e6a6:	mov    QWORD PTR [rsp+0x48],r13
   14001e6ab:	mov    BYTE PTR [rsp+0x38],r13b
   14001e6b0:	cmp    QWORD PTR [rsp+0x78],0x10
   14001e6b6:	jb     0x14001e6c3
   14001e6b8:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e6bd:	call   QWORD PTR [rip+0x2afb5]        # 0x140049678
   14001e6c3:	mov    DWORD PTR [r12],ebx
   14001e6c7:	cmp    QWORD PTR [rbp+0x18],0x10
   14001e6cc:	jb     0x14001e6d8
   14001e6ce:	mov    rcx,QWORD PTR [rbp+0x0]
   14001e6d2:	call   QWORD PTR [rip+0x2afa0]        # 0x140049678
   14001e6d8:	xor    eax,eax
   14001e6da:	mov    rcx,QWORD PTR [rbp+0x50]
   14001e6de:	xor    rcx,rsp
   14001e6e1:	call   0x14002b100
   14001e6e6:	add    rsp,0x160
   14001e6ed:	pop    r15
   14001e6ef:	pop    r13
   14001e6f1:	pop    r12
   14001e6f3:	pop    rdi
   14001e6f4:	pop    rsi
   14001e6f5:	pop    rbx
   14001e6f6:	pop    rbp
   14001e6f7:	ret    
   14001e6f8:	mov    rax,rsp
   14001e6fb:	push   rbx
   14001e6fc:	sub    rsp,0x50
   14001e700:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e709:	xor    ebx,ebx
   14001e70b:	mov    DWORD PTR [rsp+0x68],ebx
   14001e70f:	cmp    QWORD PTR [rcx+0x10],rbx
   14001e713:	je     0x14001e806
   14001e719:	mov    QWORD PTR [rax-0x18],0xf
   14001e721:	mov    QWORD PTR [rax-0x20],rbx
   14001e725:	mov    BYTE PTR [rax-0x30],bl
   14001e728:	or     r9,0xffffffffffffffff
   14001e72c:	xor    r8d,r8d
   14001e72f:	mov    rdx,rcx
   14001e732:	lea    rcx,[rax-0x30]
   14001e736:	call   0x1400048b8
   14001e73b:	lea    rdx,[rsp+0x28]
   14001e740:	lea    rcx,[rsp+0x60]
   14001e745:	call   0x14001d86c
   14001e74a:	cmp    DWORD PTR [rsp+0x60],0xfffffffe
   14001e74f:	je     0x14001e800
   14001e755:	lea    rcx,[rsp+0x70]
   14001e75a:	call   0x14001fc4c
   14001e75f:	lea    r8,[rsp+0x70]
   14001e764:	lea    rdx,[rsp+0x78]
   14001e769:	lea    rcx,[rsp+0x60]
   14001e76e:	call   0x14001fb60
   14001e773:	mov    r11d,DWORD PTR [rsp+0x78]
   14001e778:	mov    r8d,0x80000000
   14001e77e:	mov    ecx,0x7fffffff
   14001e783:	cmp    r11d,r8d
   14001e786:	je     0x14001e797
   14001e788:	cmp    r11d,ecx
   14001e78b:	je     0x14001e797
   14001e78d:	lea    edx,[rcx-0x1]
   14001e790:	cmp    r11d,edx
   14001e793:	je     0x14001e7c3
   14001e795:	jmp    0x14001e7b7
   14001e797:	mov    edx,0x7ffffffe
   14001e79c:	cmp    r11d,edx
   14001e79f:	je     0x14001e7c3
   14001e7a1:	cmp    r11d,r8d
   14001e7a4:	jne    0x14001e7ab
   14001e7a6:	or     eax,0xffffffff
   14001e7a9:	jmp    0x14001e7c8
   14001e7ab:	cmp    r11d,ecx
   14001e7ae:	jne    0x14001e7b7
   14001e7b0:	mov    eax,0x1
   14001e7b5:	jmp    0x14001e7c8
   14001e7b7:	test   r11d,r11d
   14001e7ba:	js     0x14001e7a6
   14001e7bc:	mov    eax,ebx
   14001e7be:	setg   al
   14001e7c1:	jmp    0x14001e7c8
   14001e7c3:	mov    eax,0x2
   14001e7c8:	cmp    eax,0xffffffff
   14001e7cb:	sete   al
   14001e7ce:	test   al,al
   14001e7d0:	jne    0x14001e800
   14001e7d2:	cmp    r11d,r8d
   14001e7d5:	je     0x14001e7e1
   14001e7d7:	cmp    r11d,ecx
   14001e7da:	je     0x14001e7e1
   14001e7dc:	cmp    r11d,edx
   14001e7df:	jmp    0x14001e7ee
   14001e7e1:	cmp    r11d,edx
   14001e7e4:	je     0x14001e7f7
   14001e7e6:	cmp    r11d,r8d
   14001e7e9:	je     0x14001e7f7
   14001e7eb:	cmp    r11d,ecx
   14001e7ee:	je     0x14001e7f7
   14001e7f0:	test   r11d,r11d
   14001e7f3:	js     0x14001e7f7
   14001e7f5:	jle    0x14001e800
   14001e7f7:	mov    ebx,0x2
   14001e7fc:	mov    DWORD PTR [rsp+0x68],ebx
   14001e800:	jmp    0x14001e806
   14001e802:	mov    ebx,DWORD PTR [rsp+0x68]
   14001e806:	mov    eax,ebx
   14001e808:	add    rsp,0x50
   14001e80c:	pop    rbx
   14001e80d:	ret    
   14001e80e:	int3   
   14001e80f:	int3   
   14001e810:	rex push rbx
   14001e812:	sub    rsp,0x20
   14001e816:	mov    rbx,rcx
   14001e819:	xor    ecx,ecx
   14001e81b:	mov    QWORD PTR [rbx+0x18],0xf
   14001e823:	mov    QWORD PTR [rbx+0x10],rcx
   14001e827:	mov    BYTE PTR [rbx],cl
   14001e829:	mov    DWORD PTR [rsp+0x38],ecx
   14001e82d:	test   edx,edx
   14001e82f:	je     0x14001e865
   14001e831:	dec    edx
   14001e833:	je     0x14001e84f
   14001e835:	dec    edx
   14001e837:	jne    0x14001e865
   14001e839:	lea    rcx,[rip+0x33158]        # 0x140051998
   14001e840:	call   QWORD PTR [rip+0x2adc2]        # 0x140049608
   14001e846:	lea    rdx,[rip+0x3314b]        # 0x140051998
   14001e84d:	jmp    0x14001e879
   14001e84f:	lea    rcx,[rip+0x33132]        # 0x140051988
   14001e856:	call   QWORD PTR [rip+0x2adac]        # 0x140049608
   14001e85c:	lea    rdx,[rip+0x33125]        # 0x140051988
   14001e863:	jmp    0x14001e879
   14001e865:	lea    rcx,[rip+0x32924]        # 0x140051190
   14001e86c:	call   QWORD PTR [rip+0x2ad96]        # 0x140049608
   14001e872:	lea    rdx,[rip+0x32917]        # 0x140051190
   14001e879:	mov    r8,rax
   14001e87c:	mov    rcx,rbx
   14001e87f:	call   0x140005154
   14001e884:	mov    rax,rbx
   14001e887:	add    rsp,0x20
   14001e88b:	pop    rbx
   14001e88c:	ret    
   14001e88d:	int3   
   14001e88e:	int3   
   14001e88f:	int3   
   14001e890:	mov    rax,rsp
   14001e893:	push   rbp
   14001e894:	push   rdi
   14001e895:	push   r12
   14001e897:	lea    rbp,[rax-0x5f]
   14001e89b:	sub    rsp,0xe0
   14001e8a2:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001e8aa:	mov    QWORD PTR [rax+0x10],rbx
   14001e8ae:	mov    QWORD PTR [rax+0x18],rsi
   14001e8b2:	mov    rax,QWORD PTR [rip+0x49937]        # 0x1400681f0
   14001e8b9:	xor    rax,rsp
   14001e8bc:	mov    QWORD PTR [rbp+0x3f],rax
   14001e8c0:	mov    rdi,rcx
   14001e8c3:	mov    r12d,0xf
   14001e8c9:	mov    QWORD PTR [rbp-0x21],r12
   14001e8cd:	xor    esi,esi
   14001e8cf:	mov    QWORD PTR [rbp-0x29],rsi
   14001e8d3:	mov    BYTE PTR [rbp-0x39],sil
   14001e8d7:	lea    rcx,[rip+0x33032]        # 0x140051910
   14001e8de:	call   QWORD PTR [rip+0x2ad24]        # 0x140049608
   14001e8e4:	mov    r8,rax
   14001e8e7:	lea    rdx,[rip+0x33022]        # 0x140051910
   14001e8ee:	lea    rcx,[rbp-0x39]
   14001e8f2:	call   0x140005154
   14001e8f7:	nop
   14001e8f8:	mov    QWORD PTR [rbp-0x49],r12
   14001e8fc:	mov    QWORD PTR [rbp-0x51],rsi
   14001e900:	mov    BYTE PTR [rbp-0x61],sil
   14001e904:	lea    rcx,[rip+0x33015]        # 0x140051920
   14001e90b:	call   QWORD PTR [rip+0x2acf7]        # 0x140049608
   14001e911:	mov    r8,rax
   14001e914:	lea    rdx,[rip+0x33005]        # 0x140051920
   14001e91b:	lea    rcx,[rbp-0x61]
   14001e91f:	call   0x140005154
   14001e924:	nop
   14001e925:	lea    r9,[rbp-0x39]
   14001e929:	lea    r8,[rbp-0x61]
   14001e92d:	lea    rdx,[rbp-0x11]
   14001e931:	mov    rcx,rdi
   14001e934:	call   0x140001404
   14001e939:	cmp    QWORD PTR [rax+0x18],0x10
   14001e93e:	jb     0x14001e943
   14001e940:	mov    rax,QWORD PTR [rax]
   14001e943:	mov    rcx,rax
   14001e946:	call   QWORD PTR [rip+0x2ae0c]        # 0x140049758
   14001e94c:	mov    ebx,eax
   14001e94e:	cmp    QWORD PTR [rbp+0x7],0x10
   14001e953:	jb     0x14001e95f
   14001e955:	mov    rcx,QWORD PTR [rbp-0x11]
   14001e959:	call   QWORD PTR [rip+0x2ad19]        # 0x140049678
   14001e95f:	mov    QWORD PTR [rbp+0x7],r12
   14001e963:	mov    QWORD PTR [rbp-0x1],rsi
   14001e967:	mov    BYTE PTR [rbp-0x11],sil
   14001e96b:	cmp    QWORD PTR [rbp-0x49],0x10
   14001e970:	jb     0x14001e97c
   14001e972:	mov    rcx,QWORD PTR [rbp-0x61]
   14001e976:	call   QWORD PTR [rip+0x2acfc]        # 0x140049678
   14001e97c:	mov    QWORD PTR [rbp-0x49],r12
   14001e980:	mov    QWORD PTR [rbp-0x51],rsi
   14001e984:	mov    BYTE PTR [rbp-0x61],sil
   14001e988:	cmp    QWORD PTR [rbp-0x21],0x10
   14001e98d:	jb     0x14001e999
   14001e98f:	mov    rcx,QWORD PTR [rbp-0x39]
   14001e993:	call   QWORD PTR [rip+0x2acdf]        # 0x140049678
   14001e999:	cmp    ebx,0x5
   14001e99c:	jl     0x14001e9a7
   14001e99e:	cmp    ebx,0x64
   14001e9a1:	jle    0x14001eabd
   14001e9a7:	mov    QWORD PTR [rbp+0x7],r12
   14001e9ab:	mov    QWORD PTR [rbp-0x1],rsi
   14001e9af:	mov    BYTE PTR [rbp-0x11],sil
   14001e9b3:	lea    rbx,[rip+0x32f52]        # 0x14005190c
   14001e9ba:	mov    rcx,rbx
   14001e9bd:	call   QWORD PTR [rip+0x2ac45]        # 0x140049608
   14001e9c3:	mov    r8,rax
   14001e9c6:	mov    rdx,rbx
   14001e9c9:	lea    rcx,[rbp-0x11]
   14001e9cd:	call   0x140005154
   14001e9d2:	nop
   14001e9d3:	mov    QWORD PTR [rbp-0x21],r12
   14001e9d7:	mov    QWORD PTR [rbp-0x29],rsi
   14001e9db:	mov    BYTE PTR [rbp-0x39],sil
   14001e9df:	lea    rcx,[rip+0x32f2a]        # 0x140051910
   14001e9e6:	call   QWORD PTR [rip+0x2ac1c]        # 0x140049608
   14001e9ec:	mov    r8,rax
   14001e9ef:	lea    rdx,[rip+0x32f1a]        # 0x140051910
   14001e9f6:	lea    rcx,[rbp-0x39]
   14001e9fa:	call   0x140005154
   14001e9ff:	nop
   14001ea00:	mov    QWORD PTR [rbp-0x49],r12
   14001ea04:	mov    QWORD PTR [rbp-0x51],rsi
   14001ea08:	mov    BYTE PTR [rbp-0x61],sil
   14001ea0c:	lea    rcx,[rip+0x32f0d]        # 0x140051920
   14001ea13:	call   QWORD PTR [rip+0x2abef]        # 0x140049608
   14001ea19:	mov    r8,rax
   14001ea1c:	lea    rdx,[rip+0x32efd]        # 0x140051920
   14001ea23:	lea    rcx,[rbp-0x61]
   14001ea27:	call   0x140005154
   14001ea2c:	nop
   14001ea2d:	lea    rax,[rbp-0x11]
   14001ea31:	mov    QWORD PTR [rsp+0x20],rax
   14001ea36:	lea    r9,[rbp-0x39]
   14001ea3a:	lea    r8,[rbp-0x61]
   14001ea3e:	lea    rdx,[rbp+0x17]
   14001ea42:	mov    rcx,rdi
   14001ea45:	call   0x1400017e8
   14001ea4a:	cmp    QWORD PTR [rbp+0x2f],0x10
   14001ea4f:	jb     0x14001ea5b
   14001ea51:	mov    rcx,QWORD PTR [rbp+0x17]
   14001ea55:	call   QWORD PTR [rip+0x2ac1d]        # 0x140049678
   14001ea5b:	mov    QWORD PTR [rbp+0x2f],r12
   14001ea5f:	mov    QWORD PTR [rbp+0x27],rsi
   14001ea63:	mov    BYTE PTR [rbp+0x17],sil
   14001ea67:	cmp    QWORD PTR [rbp-0x49],0x10
   14001ea6c:	jb     0x14001ea78
   14001ea6e:	mov    rcx,QWORD PTR [rbp-0x61]
   14001ea72:	call   QWORD PTR [rip+0x2ac00]        # 0x140049678
   14001ea78:	mov    QWORD PTR [rbp-0x49],r12
   14001ea7c:	mov    QWORD PTR [rbp-0x51],rsi
   14001ea80:	mov    BYTE PTR [rbp-0x61],sil
   14001ea84:	cmp    QWORD PTR [rbp-0x21],0x10
   14001ea89:	jb     0x14001ea95
   14001ea8b:	mov    rcx,QWORD PTR [rbp-0x39]
   14001ea8f:	call   QWORD PTR [rip+0x2abe3]        # 0x140049678
   14001ea95:	mov    QWORD PTR [rbp-0x21],r12
   14001ea99:	mov    QWORD PTR [rbp-0x29],rsi
   14001ea9d:	mov    BYTE PTR [rbp-0x39],sil
   14001eaa1:	cmp    QWORD PTR [rbp+0x7],0x10
   14001eaa6:	jb     0x14001eab2
   14001eaa8:	mov    rcx,QWORD PTR [rbp-0x11]
   14001eaac:	call   QWORD PTR [rip+0x2abc6]        # 0x140049678
   14001eab2:	mov    rcx,rbx
   14001eab5:	call   QWORD PTR [rip+0x2ac9d]        # 0x140049758
   14001eabb:	mov    ebx,eax
   14001eabd:	mov    eax,ebx
   14001eabf:	mov    rcx,QWORD PTR [rbp+0x3f]
   14001eac3:	xor    rcx,rsp
   14001eac6:	call   0x14002b100
   14001eacb:	lea    r11,[rsp+0xe0]
   14001ead3:	mov    rbx,QWORD PTR [r11+0x28]
   14001ead7:	mov    rsi,QWORD PTR [r11+0x30]
   14001eadb:	mov    rsp,r11
   14001eade:	pop    r12
   14001eae0:	pop    rdi
   14001eae1:	pop    rbp
   14001eae2:	ret    
   14001eae3:	int3   
   14001eae4:	mov    rax,rsp
   14001eae7:	push   rbp
   14001eae8:	push   rdi
   14001eae9:	push   r12
   14001eaeb:	lea    rbp,[rax-0x5f]
   14001eaef:	sub    rsp,0xe0
   14001eaf6:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001eafe:	mov    QWORD PTR [rax+0x10],rbx
   14001eb02:	mov    QWORD PTR [rax+0x18],rsi
   14001eb06:	mov    rax,QWORD PTR [rip+0x496e3]        # 0x1400681f0
   14001eb0d:	xor    rax,rsp
   14001eb10:	mov    QWORD PTR [rbp+0x3f],rax
   14001eb14:	mov    rdi,rcx
   14001eb17:	mov    r12d,0xf
   14001eb1d:	mov    QWORD PTR [rbp-0x21],r12
   14001eb21:	xor    esi,esi
   14001eb23:	mov    QWORD PTR [rbp-0x29],rsi
   14001eb27:	mov    BYTE PTR [rbp-0x39],sil
   14001eb2b:	lea    rcx,[rip+0x32dfe]        # 0x140051930
   14001eb32:	call   QWORD PTR [rip+0x2aad0]        # 0x140049608
   14001eb38:	mov    r8,rax
   14001eb3b:	lea    rdx,[rip+0x32dee]        # 0x140051930
   14001eb42:	lea    rcx,[rbp-0x39]
   14001eb46:	call   0x140005154
   14001eb4b:	nop
   14001eb4c:	mov    QWORD PTR [rbp-0x49],r12
   14001eb50:	mov    QWORD PTR [rbp-0x51],rsi
   14001eb54:	mov    BYTE PTR [rbp-0x61],sil
   14001eb58:	lea    rcx,[rip+0x32dc1]        # 0x140051920
   14001eb5f:	call   QWORD PTR [rip+0x2aaa3]        # 0x140049608
   14001eb65:	mov    r8,rax
   14001eb68:	lea    rdx,[rip+0x32db1]        # 0x140051920
   14001eb6f:	lea    rcx,[rbp-0x61]
   14001eb73:	call   0x140005154
   14001eb78:	nop
   14001eb79:	lea    r9,[rbp-0x39]
   14001eb7d:	lea    r8,[rbp-0x61]
   14001eb81:	lea    rdx,[rbp-0x11]
   14001eb85:	mov    rcx,rdi
   14001eb88:	call   0x140001404
   14001eb8d:	cmp    QWORD PTR [rax+0x18],0x10
   14001eb92:	jb     0x14001eb97
   14001eb94:	mov    rax,QWORD PTR [rax]
   14001eb97:	mov    rcx,rax
   14001eb9a:	call   QWORD PTR [rip+0x2abb8]        # 0x140049758
   14001eba0:	mov    ebx,eax
   14001eba2:	cmp    QWORD PTR [rbp+0x7],0x10
   14001eba7:	jb     0x14001ebb3
   14001eba9:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ebad:	call   QWORD PTR [rip+0x2aac5]        # 0x140049678
   14001ebb3:	mov    QWORD PTR [rbp+0x7],r12
   14001ebb7:	mov    QWORD PTR [rbp-0x1],rsi
   14001ebbb:	mov    BYTE PTR [rbp-0x11],sil
   14001ebbf:	cmp    QWORD PTR [rbp-0x49],0x10
   14001ebc4:	jb     0x14001ebd0
   14001ebc6:	mov    rcx,QWORD PTR [rbp-0x61]
   14001ebca:	call   QWORD PTR [rip+0x2aaa8]        # 0x140049678
   14001ebd0:	mov    QWORD PTR [rbp-0x49],r12
   14001ebd4:	mov    QWORD PTR [rbp-0x51],rsi
   14001ebd8:	mov    BYTE PTR [rbp-0x61],sil
   14001ebdc:	cmp    QWORD PTR [rbp-0x21],0x10
   14001ebe1:	jb     0x14001ebed
   14001ebe3:	mov    rcx,QWORD PTR [rbp-0x39]
   14001ebe7:	call   QWORD PTR [rip+0x2aa8b]        # 0x140049678
   14001ebed:	cmp    ebx,0x1
   14001ebf0:	jl     0x14001ebfb
   14001ebf2:	cmp    ebx,0x3c
   14001ebf5:	jle    0x14001ed11
   14001ebfb:	mov    QWORD PTR [rbp+0x7],r12
   14001ebff:	mov    QWORD PTR [rbp-0x1],rsi
   14001ec03:	mov    BYTE PTR [rbp-0x11],sil
   14001ec07:	lea    rbx,[rip+0x32cfe]        # 0x14005190c
   14001ec0e:	mov    rcx,rbx
   14001ec11:	call   QWORD PTR [rip+0x2a9f1]        # 0x140049608
   14001ec17:	mov    r8,rax
   14001ec1a:	mov    rdx,rbx
   14001ec1d:	lea    rcx,[rbp-0x11]
   14001ec21:	call   0x140005154
   14001ec26:	nop
   14001ec27:	mov    QWORD PTR [rbp-0x21],r12
   14001ec2b:	mov    QWORD PTR [rbp-0x29],rsi
   14001ec2f:	mov    BYTE PTR [rbp-0x39],sil
   14001ec33:	lea    rcx,[rip+0x32cf6]        # 0x140051930
   14001ec3a:	call   QWORD PTR [rip+0x2a9c8]        # 0x140049608
   14001ec40:	mov    r8,rax
   14001ec43:	lea    rdx,[rip+0x32ce6]        # 0x140051930
   14001ec4a:	lea    rcx,[rbp-0x39]
   14001ec4e:	call   0x140005154
   14001ec53:	nop
   14001ec54:	mov    QWORD PTR [rbp-0x49],r12
   14001ec58:	mov    QWORD PTR [rbp-0x51],rsi
   14001ec5c:	mov    BYTE PTR [rbp-0x61],sil
   14001ec60:	lea    rcx,[rip+0x32cb9]        # 0x140051920
   14001ec67:	call   QWORD PTR [rip+0x2a99b]        # 0x140049608
   14001ec6d:	mov    r8,rax
   14001ec70:	lea    rdx,[rip+0x32ca9]        # 0x140051920
   14001ec77:	lea    rcx,[rbp-0x61]
   14001ec7b:	call   0x140005154
   14001ec80:	nop
   14001ec81:	lea    rax,[rbp-0x11]
   14001ec85:	mov    QWORD PTR [rsp+0x20],rax
   14001ec8a:	lea    r9,[rbp-0x39]
   14001ec8e:	lea    r8,[rbp-0x61]
   14001ec92:	lea    rdx,[rbp+0x17]
   14001ec96:	mov    rcx,rdi
   14001ec99:	call   0x1400017e8
   14001ec9e:	cmp    QWORD PTR [rbp+0x2f],0x10
   14001eca3:	jb     0x14001ecaf
   14001eca5:	mov    rcx,QWORD PTR [rbp+0x17]
   14001eca9:	call   QWORD PTR [rip+0x2a9c9]        # 0x140049678
   14001ecaf:	mov    QWORD PTR [rbp+0x2f],r12
   14001ecb3:	mov    QWORD PTR [rbp+0x27],rsi
   14001ecb7:	mov    BYTE PTR [rbp+0x17],sil
   14001ecbb:	cmp    QWORD PTR [rbp-0x49],0x10
   14001ecc0:	jb     0x14001eccc
   14001ecc2:	mov    rcx,QWORD PTR [rbp-0x61]
   14001ecc6:	call   QWORD PTR [rip+0x2a9ac]        # 0x140049678
   14001eccc:	mov    QWORD PTR [rbp-0x49],r12
   14001ecd0:	mov    QWORD PTR [rbp-0x51],rsi
   14001ecd4:	mov    BYTE PTR [rbp-0x61],sil
   14001ecd8:	cmp    QWORD PTR [rbp-0x21],0x10
   14001ecdd:	jb     0x14001ece9
   14001ecdf:	mov    rcx,QWORD PTR [rbp-0x39]
   14001ece3:	call   QWORD PTR [rip+0x2a98f]        # 0x140049678
   14001ece9:	mov    QWORD PTR [rbp-0x21],r12
   14001eced:	mov    QWORD PTR [rbp-0x29],rsi
   14001ecf1:	mov    BYTE PTR [rbp-0x39],sil
   14001ecf5:	cmp    QWORD PTR [rbp+0x7],0x10
   14001ecfa:	jb     0x14001ed06
   14001ecfc:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ed00:	call   QWORD PTR [rip+0x2a972]        # 0x140049678
   14001ed06:	mov    rcx,rbx
   14001ed09:	call   QWORD PTR [rip+0x2aa49]        # 0x140049758
   14001ed0f:	mov    ebx,eax
   14001ed11:	mov    eax,ebx
   14001ed13:	mov    rcx,QWORD PTR [rbp+0x3f]
   14001ed17:	xor    rcx,rsp
   14001ed1a:	call   0x14002b100
   14001ed1f:	lea    r11,[rsp+0xe0]
   14001ed27:	mov    rbx,QWORD PTR [r11+0x28]
   14001ed2b:	mov    rsi,QWORD PTR [r11+0x30]
   14001ed2f:	mov    rsp,r11
   14001ed32:	pop    r12
   14001ed34:	pop    rdi
   14001ed35:	pop    rbp
   14001ed36:	ret    
   14001ed37:	int3   
   14001ed38:	mov    rax,rsp
   14001ed3b:	push   rbp
   14001ed3c:	push   rdi
   14001ed3d:	push   r12
   14001ed3f:	lea    rbp,[rax-0x5f]
   14001ed43:	sub    rsp,0xe0
   14001ed4a:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001ed52:	mov    QWORD PTR [rax+0x10],rbx
   14001ed56:	mov    QWORD PTR [rax+0x18],rsi
   14001ed5a:	mov    rax,QWORD PTR [rip+0x4948f]        # 0x1400681f0
   14001ed61:	xor    rax,rsp
   14001ed64:	mov    QWORD PTR [rbp+0x3f],rax
   14001ed68:	mov    rdi,rcx
   14001ed6b:	mov    r12d,0xf
   14001ed71:	mov    QWORD PTR [rbp-0x21],r12
   14001ed75:	xor    esi,esi
   14001ed77:	mov    QWORD PTR [rbp-0x29],rsi
   14001ed7b:	mov    BYTE PTR [rbp-0x39],sil
   14001ed7f:	lea    rcx,[rip+0x32bba]        # 0x140051940
   14001ed86:	call   QWORD PTR [rip+0x2a87c]        # 0x140049608
   14001ed8c:	mov    r8,rax
   14001ed8f:	lea    rdx,[rip+0x32baa]        # 0x140051940
   14001ed96:	lea    rcx,[rbp-0x39]
   14001ed9a:	call   0x140005154
   14001ed9f:	nop
   14001eda0:	mov    QWORD PTR [rbp-0x49],r12
   14001eda4:	mov    QWORD PTR [rbp-0x51],rsi
   14001eda8:	mov    BYTE PTR [rbp-0x61],sil
   14001edac:	lea    rcx,[rip+0x32b6d]        # 0x140051920
   14001edb3:	call   QWORD PTR [rip+0x2a84f]        # 0x140049608
   14001edb9:	mov    r8,rax
   14001edbc:	lea    rdx,[rip+0x32b5d]        # 0x140051920
   14001edc3:	lea    rcx,[rbp-0x61]
   14001edc7:	call   0x140005154
   14001edcc:	nop
   14001edcd:	lea    r9,[rbp-0x39]
   14001edd1:	lea    r8,[rbp-0x61]
   14001edd5:	lea    rdx,[rbp-0x11]
   14001edd9:	mov    rcx,rdi
   14001eddc:	call   0x140001404
   14001ede1:	cmp    QWORD PTR [rax+0x18],0x10
   14001ede6:	jb     0x14001edeb
   14001ede8:	mov    rax,QWORD PTR [rax]
   14001edeb:	mov    rcx,rax
   14001edee:	call   QWORD PTR [rip+0x2a964]        # 0x140049758
   14001edf4:	mov    ebx,eax
   14001edf6:	cmp    QWORD PTR [rbp+0x7],0x10
   14001edfb:	jb     0x14001ee07
   14001edfd:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ee01:	call   QWORD PTR [rip+0x2a871]        # 0x140049678
   14001ee07:	mov    QWORD PTR [rbp+0x7],r12
   14001ee0b:	mov    QWORD PTR [rbp-0x1],rsi
   14001ee0f:	mov    BYTE PTR [rbp-0x11],sil
   14001ee13:	cmp    QWORD PTR [rbp-0x49],0x10
   14001ee18:	jb     0x14001ee24
   14001ee1a:	mov    rcx,QWORD PTR [rbp-0x61]
   14001ee1e:	call   QWORD PTR [rip+0x2a854]        # 0x140049678
   14001ee24:	mov    QWORD PTR [rbp-0x49],r12
   14001ee28:	mov    QWORD PTR [rbp-0x51],rsi
   14001ee2c:	mov    BYTE PTR [rbp-0x61],sil
   14001ee30:	cmp    QWORD PTR [rbp-0x21],0x10
   14001ee35:	jb     0x14001ee41
   14001ee37:	mov    rcx,QWORD PTR [rbp-0x39]
   14001ee3b:	call   QWORD PTR [rip+0x2a837]        # 0x140049678
   14001ee41:	cmp    ebx,0x1
   14001ee44:	jl     0x14001ee4f
   14001ee46:	cmp    ebx,0x5
   14001ee49:	jle    0x14001ef65
   14001ee4f:	mov    QWORD PTR [rbp+0x7],r12
   14001ee53:	mov    QWORD PTR [rbp-0x1],rsi
   14001ee57:	mov    BYTE PTR [rbp-0x11],sil
   14001ee5b:	lea    rbx,[rip+0x31c76]        # 0x140050ad8
   14001ee62:	mov    rcx,rbx
   14001ee65:	call   QWORD PTR [rip+0x2a79d]        # 0x140049608
   14001ee6b:	mov    r8,rax
   14001ee6e:	mov    rdx,rbx
   14001ee71:	lea    rcx,[rbp-0x11]
   14001ee75:	call   0x140005154
   14001ee7a:	nop
   14001ee7b:	mov    QWORD PTR [rbp-0x21],r12
   14001ee7f:	mov    QWORD PTR [rbp-0x29],rsi
   14001ee83:	mov    BYTE PTR [rbp-0x39],sil
   14001ee87:	lea    rcx,[rip+0x32ab2]        # 0x140051940
   14001ee8e:	call   QWORD PTR [rip+0x2a774]        # 0x140049608
   14001ee94:	mov    r8,rax
   14001ee97:	lea    rdx,[rip+0x32aa2]        # 0x140051940
   14001ee9e:	lea    rcx,[rbp-0x39]
   14001eea2:	call   0x140005154
   14001eea7:	nop
   14001eea8:	mov    QWORD PTR [rbp-0x49],r12
   14001eeac:	mov    QWORD PTR [rbp-0x51],rsi
   14001eeb0:	mov    BYTE PTR [rbp-0x61],sil
   14001eeb4:	lea    rcx,[rip+0x32a65]        # 0x140051920
   14001eebb:	call   QWORD PTR [rip+0x2a747]        # 0x140049608
   14001eec1:	mov    r8,rax
   14001eec4:	lea    rdx,[rip+0x32a55]        # 0x140051920
   14001eecb:	lea    rcx,[rbp-0x61]
   14001eecf:	call   0x140005154
   14001eed4:	nop
   14001eed5:	lea    rax,[rbp-0x11]
   14001eed9:	mov    QWORD PTR [rsp+0x20],rax
   14001eede:	lea    r9,[rbp-0x39]
   14001eee2:	lea    r8,[rbp-0x61]
   14001eee6:	lea    rdx,[rbp+0x17]
   14001eeea:	mov    rcx,rdi
   14001eeed:	call   0x1400017e8
   14001eef2:	cmp    QWORD PTR [rbp+0x2f],0x10
   14001eef7:	jb     0x14001ef03
   14001eef9:	mov    rcx,QWORD PTR [rbp+0x17]
   14001eefd:	call   QWORD PTR [rip+0x2a775]        # 0x140049678
   14001ef03:	mov    QWORD PTR [rbp+0x2f],r12
   14001ef07:	mov    QWORD PTR [rbp+0x27],rsi
   14001ef0b:	mov    BYTE PTR [rbp+0x17],sil
   14001ef0f:	cmp    QWORD PTR [rbp-0x49],0x10
   14001ef14:	jb     0x14001ef20
   14001ef16:	mov    rcx,QWORD PTR [rbp-0x61]
   14001ef1a:	call   QWORD PTR [rip+0x2a758]        # 0x140049678
   14001ef20:	mov    QWORD PTR [rbp-0x49],r12
   14001ef24:	mov    QWORD PTR [rbp-0x51],rsi
   14001ef28:	mov    BYTE PTR [rbp-0x61],sil
   14001ef2c:	cmp    QWORD PTR [rbp-0x21],0x10
   14001ef31:	jb     0x14001ef3d
   14001ef33:	mov    rcx,QWORD PTR [rbp-0x39]
   14001ef37:	call   QWORD PTR [rip+0x2a73b]        # 0x140049678
   14001ef3d:	mov    QWORD PTR [rbp-0x21],r12
   14001ef41:	mov    QWORD PTR [rbp-0x29],rsi
   14001ef45:	mov    BYTE PTR [rbp-0x39],sil
   14001ef49:	cmp    QWORD PTR [rbp+0x7],0x10
   14001ef4e:	jb     0x14001ef5a
   14001ef50:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ef54:	call   QWORD PTR [rip+0x2a71e]        # 0x140049678
   14001ef5a:	mov    rcx,rbx
   14001ef5d:	call   QWORD PTR [rip+0x2a7f5]        # 0x140049758
   14001ef63:	mov    ebx,eax
   14001ef65:	mov    eax,ebx
   14001ef67:	mov    rcx,QWORD PTR [rbp+0x3f]
   14001ef6b:	xor    rcx,rsp
   14001ef6e:	call   0x14002b100
   14001ef73:	lea    r11,[rsp+0xe0]
   14001ef7b:	mov    rbx,QWORD PTR [r11+0x28]
   14001ef7f:	mov    rsi,QWORD PTR [r11+0x30]
   14001ef83:	mov    rsp,r11
   14001ef86:	pop    r12
   14001ef88:	pop    rdi
   14001ef89:	pop    rbp
   14001ef8a:	ret    
   14001ef8b:	int3   
   14001ef8c:	mov    rax,rsp
   14001ef8f:	push   rbp
   14001ef90:	push   rsi
   14001ef91:	push   rdi
   14001ef92:	push   r12
   14001ef94:	push   r13
   14001ef96:	push   r14
   14001ef98:	push   r15
   14001ef9a:	lea    rbp,[rsp-0x50]
   14001ef9f:	sub    rsp,0x150
   14001efa6:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001efaf:	mov    QWORD PTR [rax+0x18],rbx
   14001efb3:	mov    rax,QWORD PTR [rip+0x49236]        # 0x1400681f0
   14001efba:	xor    rax,rsp
   14001efbd:	mov    QWORD PTR [rbp+0x48],rax
   14001efc1:	mov    r13,rdx
   14001efc4:	mov    rsi,rcx
   14001efc7:	mov    QWORD PTR [rsp+0x50],rcx
   14001efcc:	xor    r14d,r14d
   14001efcf:	mov    DWORD PTR [rsp+0x40],r14d
   14001efd4:	lea    r15d,[r14+0xf]
   14001efd8:	mov    QWORD PTR [rbp-0x40],r15
   14001efdc:	mov    QWORD PTR [rbp-0x48],r14
   14001efe0:	mov    BYTE PTR [rbp-0x58],r14b
   14001efe4:	lea    rcx,[rip+0x32989]        # 0x140051974
   14001efeb:	call   QWORD PTR [rip+0x2a617]        # 0x140049608
   14001eff1:	mov    r8,rax
   14001eff4:	lea    rdx,[rip+0x32979]        # 0x140051974
   14001effb:	lea    rcx,[rbp-0x58]
   14001efff:	call   0x140005154
   14001f004:	nop
   14001f005:	mov    QWORD PTR [rsp+0x70],r15
   14001f00a:	mov    QWORD PTR [rsp+0x68],r14
   14001f00f:	mov    BYTE PTR [rsp+0x58],r14b
   14001f014:	lea    rcx,[rip+0x32905]        # 0x140051920
   14001f01b:	call   QWORD PTR [rip+0x2a5e7]        # 0x140049608
   14001f021:	mov    r8,rax
   14001f024:	lea    rdx,[rip+0x328f5]        # 0x140051920
   14001f02b:	lea    rcx,[rsp+0x58]
   14001f030:	call   0x140005154
   14001f035:	nop
   14001f036:	lea    r9,[rbp-0x58]
   14001f03a:	lea    r8,[rsp+0x58]
   14001f03f:	mov    rdx,rsi
   14001f042:	mov    rcx,r13
   14001f045:	call   0x140001404
   14001f04a:	mov    DWORD PTR [rsp+0x40],0x1
   14001f052:	cmp    QWORD PTR [rsp+0x70],0x10
   14001f058:	jb     0x14001f065
   14001f05a:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f05f:	call   QWORD PTR [rip+0x2a613]        # 0x140049678
   14001f065:	mov    QWORD PTR [rsp+0x70],r15
   14001f06a:	mov    QWORD PTR [rsp+0x68],r14
   14001f06f:	mov    BYTE PTR [rsp+0x58],r14b
   14001f074:	cmp    QWORD PTR [rbp-0x40],0x10
   14001f079:	jb     0x14001f085
   14001f07b:	mov    rcx,QWORD PTR [rbp-0x58]
   14001f07f:	call   QWORD PTR [rip+0x2a5f3]        # 0x140049678
   14001f085:	mov    QWORD PTR [rbp-0x40],r15
   14001f089:	mov    QWORD PTR [rbp-0x48],r14
   14001f08d:	mov    BYTE PTR [rbp-0x58],r14b
   14001f091:	mov    QWORD PTR [rsp+0x30],r14
   14001f096:	mov    QWORD PTR [rsp+0x38],r14
   14001f09b:	lea    rbx,[rip+0x32906]        # 0x1400519a8
   14001f0a2:	mov    rcx,rbx
   14001f0a5:	call   QWORD PTR [rip+0x2a55d]        # 0x140049608
   14001f0ab:	lea    r8,[rax+rbx*1]
   14001f0af:	xor    r9d,r9d
   14001f0b2:	mov    rdx,rbx
   14001f0b5:	lea    rcx,[rsp+0x30]
   14001f0ba:	call   0x140041aa0
   14001f0bf:	lea    rdx,[rsp+0x30]
   14001f0c4:	mov    rcx,rsi
   14001f0c7:	call   0x140020460
   14001f0cc:	test   al,al
   14001f0ce:	je     0x14001f116
   14001f0d0:	mov    rdi,QWORD PTR [rsp+0x38]
   14001f0d5:	test   rdi,rdi
   14001f0d8:	je     0x14001f2e1
   14001f0de:	or     ebx,0xffffffff
   14001f0e1:	mov    eax,ebx
   14001f0e3:	lock xadd DWORD PTR [rdi+0x8],eax
   14001f0e8:	add    eax,ebx
   14001f0ea:	jne    0x14001f2e1
   14001f0f0:	mov    rax,QWORD PTR [rdi]
   14001f0f3:	mov    rcx,rdi
   14001f0f6:	call   QWORD PTR [rax+0x8]
   14001f0f9:	mov    eax,ebx
   14001f0fb:	lock xadd DWORD PTR [rdi+0xc],eax
   14001f100:	add    eax,ebx
   14001f102:	jne    0x14001f2e1
   14001f108:	mov    rax,QWORD PTR [rdi]
   14001f10b:	mov    rcx,rdi
   14001f10e:	call   QWORD PTR [rax+0x10]
   14001f111:	jmp    0x14001f2e1
   14001f116:	lea    rbx,[rip+0x328ab]        # 0x1400519c8
   14001f11d:	mov    rcx,rbx
   14001f120:	call   QWORD PTR [rip+0x2a4e2]        # 0x140049608
   14001f126:	lea    r8,[rax+rbx*1]
   14001f12a:	xor    r9d,r9d
   14001f12d:	mov    rdx,rbx
   14001f130:	lea    rcx,[rsp+0x30]
   14001f135:	call   0x140041aa0
   14001f13a:	lea    rdx,[rsp+0x30]
   14001f13f:	mov    rcx,rsi
   14001f142:	call   0x140020460
   14001f147:	test   al,al
   14001f149:	je     0x14001f14d
   14001f14b:	jmp    0x14001f0d0
   14001f14d:	lea    rbx,[rip+0x32894]        # 0x1400519e8
   14001f154:	mov    rcx,rbx
   14001f157:	call   QWORD PTR [rip+0x2a4ab]        # 0x140049608
   14001f15d:	lea    r8,[rax+rbx*1]
   14001f161:	xor    r9d,r9d
   14001f164:	mov    rdx,rbx
   14001f167:	lea    rcx,[rsp+0x30]
   14001f16c:	call   0x140041aa0
   14001f171:	lea    rdx,[rsp+0x30]
   14001f176:	mov    rcx,rsi
   14001f179:	call   0x140020460
   14001f17e:	mov    r12b,al
   14001f181:	mov    rdi,QWORD PTR [rsp+0x38]
   14001f186:	test   rdi,rdi
   14001f189:	je     0x14001f1b6
   14001f18b:	or     ebx,0xffffffff
   14001f18e:	mov    ecx,ebx
   14001f190:	lock xadd DWORD PTR [rdi+0x8],ecx
   14001f195:	add    ecx,ebx
   14001f197:	jne    0x14001f1b6
   14001f199:	mov    rdx,QWORD PTR [rdi]
   14001f19c:	mov    rcx,rdi
   14001f19f:	call   QWORD PTR [rdx+0x8]
   14001f1a2:	mov    eax,ebx
   14001f1a4:	lock xadd DWORD PTR [rdi+0xc],eax
   14001f1a9:	add    eax,ebx
   14001f1ab:	jne    0x14001f1b6
   14001f1ad:	mov    rax,QWORD PTR [rdi]
   14001f1b0:	mov    rcx,rdi
   14001f1b3:	call   QWORD PTR [rax+0x10]
   14001f1b6:	test   r12b,r12b
   14001f1b9:	jne    0x14001f2e1
   14001f1bf:	mov    QWORD PTR [rbp+0x10],r15
   14001f1c3:	mov    QWORD PTR [rbp+0x8],r14
   14001f1c7:	mov    BYTE PTR [rbp-0x8],r14b
   14001f1cb:	lea    rbx,[rip+0x3277e]        # 0x140051950
   14001f1d2:	mov    rcx,rbx
   14001f1d5:	call   QWORD PTR [rip+0x2a42d]        # 0x140049608
   14001f1db:	mov    r8,rax
   14001f1de:	mov    rdx,rbx
   14001f1e1:	lea    rcx,[rbp-0x8]
   14001f1e5:	call   0x140005154
   14001f1ea:	nop
   14001f1eb:	mov    QWORD PTR [rbp-0x68],r15
   14001f1ef:	mov    QWORD PTR [rbp-0x70],r14
   14001f1f3:	mov    BYTE PTR [rbp-0x80],r14b
   14001f1f7:	lea    rcx,[rip+0x32776]        # 0x140051974
   14001f1fe:	call   QWORD PTR [rip+0x2a404]        # 0x140049608
   14001f204:	mov    r8,rax
   14001f207:	lea    rdx,[rip+0x32766]        # 0x140051974
   14001f20e:	lea    rcx,[rbp-0x80]
   14001f212:	call   0x140005154
   14001f217:	nop
   14001f218:	mov    QWORD PTR [rbp-0x18],r15
   14001f21c:	mov    QWORD PTR [rbp-0x20],r14
   14001f220:	mov    BYTE PTR [rbp-0x30],r14b
   14001f224:	lea    rcx,[rip+0x326f5]        # 0x140051920
   14001f22b:	call   QWORD PTR [rip+0x2a3d7]        # 0x140049608
   14001f231:	mov    r8,rax
   14001f234:	lea    rdx,[rip+0x326e5]        # 0x140051920
   14001f23b:	lea    rcx,[rbp-0x30]
   14001f23f:	call   0x140005154
   14001f244:	nop
   14001f245:	lea    rax,[rbp-0x8]
   14001f249:	mov    QWORD PTR [rsp+0x20],rax
   14001f24e:	lea    r9,[rbp-0x80]
   14001f252:	lea    r8,[rbp-0x30]
   14001f256:	lea    rdx,[rbp+0x20]
   14001f25a:	mov    rcx,r13
   14001f25d:	call   0x1400017e8
   14001f262:	cmp    QWORD PTR [rbp+0x38],0x10
   14001f267:	jb     0x14001f273
   14001f269:	mov    rcx,QWORD PTR [rbp+0x20]
   14001f26d:	call   QWORD PTR [rip+0x2a405]        # 0x140049678
   14001f273:	mov    QWORD PTR [rbp+0x38],r15
   14001f277:	mov    QWORD PTR [rbp+0x30],r14
   14001f27b:	mov    BYTE PTR [rbp+0x20],r14b
   14001f27f:	cmp    QWORD PTR [rbp-0x18],0x10
   14001f284:	jb     0x14001f290
   14001f286:	mov    rcx,QWORD PTR [rbp-0x30]
   14001f28a:	call   QWORD PTR [rip+0x2a3e8]        # 0x140049678
   14001f290:	mov    QWORD PTR [rbp-0x18],r15
   14001f294:	mov    QWORD PTR [rbp-0x20],r14
   14001f298:	mov    BYTE PTR [rbp-0x30],r14b
   14001f29c:	cmp    QWORD PTR [rbp-0x68],0x10
   14001f2a1:	jb     0x14001f2ad
   14001f2a3:	mov    rcx,QWORD PTR [rbp-0x80]
   14001f2a7:	call   QWORD PTR [rip+0x2a3cb]        # 0x140049678
   14001f2ad:	mov    QWORD PTR [rbp-0x68],r15
   14001f2b1:	mov    QWORD PTR [rbp-0x70],r14
   14001f2b5:	mov    BYTE PTR [rbp-0x80],r14b
   14001f2b9:	cmp    QWORD PTR [rbp+0x10],0x10
   14001f2be:	jb     0x14001f2ca
   14001f2c0:	mov    rcx,QWORD PTR [rbp-0x8]
   14001f2c4:	call   QWORD PTR [rip+0x2a3ae]        # 0x140049678
   14001f2ca:	mov    rcx,rbx
   14001f2cd:	call   QWORD PTR [rip+0x2a335]        # 0x140049608
   14001f2d3:	mov    r8,rax
   14001f2d6:	mov    rdx,rbx
   14001f2d9:	mov    rcx,rsi
   14001f2dc:	call   0x140005154
   14001f2e1:	mov    rax,rsi
   14001f2e4:	mov    rcx,QWORD PTR [rbp+0x48]
   14001f2e8:	xor    rcx,rsp
   14001f2eb:	call   0x14002b100
   14001f2f0:	mov    rbx,QWORD PTR [rsp+0x1a0]
   14001f2f8:	add    rsp,0x150
   14001f2ff:	pop    r15
   14001f301:	pop    r14
   14001f303:	pop    r13
   14001f305:	pop    r12
   14001f307:	pop    rdi
   14001f308:	pop    rsi
   14001f309:	pop    rbp
   14001f30a:	ret    
   14001f30b:	int3   
   14001f30c:	mov    r11,rsp
   14001f30f:	push   rdi
   14001f310:	sub    rsp,0x60
   14001f314:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001f31d:	mov    QWORD PTR [r11+0x18],rbx
   14001f321:	mov    QWORD PTR [r11+0x20],rsi
   14001f325:	mov    rax,QWORD PTR [rip+0x48ec4]        # 0x1400681f0
   14001f32c:	xor    rax,rsp
   14001f32f:	mov    QWORD PTR [rsp+0x58],rax
   14001f334:	mov    rsi,rdx
   14001f337:	mov    rdi,rcx
   14001f33a:	xor    ebx,ebx
   14001f33c:	mov    DWORD PTR [rsp+0x20],ebx
   14001f340:	mov    DWORD PTR [rsp+0x20],ebx
   14001f344:	mov    QWORD PTR [r11-0x20],0xf
   14001f34c:	mov    QWORD PTR [r11-0x28],rbx
   14001f350:	mov    BYTE PTR [rsp+0x30],bl
   14001f354:	lea    rcx,[rip+0x31a39]        # 0x140050d94
   14001f35b:	call   QWORD PTR [rip+0x2a2a7]        # 0x140049608
   14001f361:	mov    r8,rax
   14001f364:	lea    rdx,[rip+0x31a29]        # 0x140050d94
   14001f36b:	lea    rcx,[rsp+0x30]
   14001f370:	call   0x140005154
   14001f375:	nop
   14001f376:	lea    rax,[rsp+0x20]
   14001f37b:	test   rax,rax
   14001f37e:	je     0x14001f396
   14001f380:	lea    r8,[rsp+0x20]
   14001f385:	lea    rdx,[rsp+0x30]
   14001f38a:	mov    rcx,rsi
   14001f38d:	call   0x14001e394
   14001f392:	mov    ebx,DWORD PTR [rsp+0x20]
   14001f396:	cmp    QWORD PTR [rsp+0x48],0x10
   14001f39c:	jb     0x14001f3a9
   14001f39e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f3a3:	call   QWORD PTR [rip+0x2a2cf]        # 0x140049678
   14001f3a9:	mov    edx,ebx
   14001f3ab:	mov    rcx,rdi
   14001f3ae:	call   0x14001e810
   14001f3b3:	mov    rax,rdi
   14001f3b6:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f3bb:	xor    rcx,rsp
   14001f3be:	call   0x14002b100
   14001f3c3:	lea    r11,[rsp+0x60]
   14001f3c8:	mov    rbx,QWORD PTR [r11+0x20]
   14001f3cc:	mov    rsi,QWORD PTR [r11+0x28]
   14001f3d0:	mov    rsp,r11
   14001f3d3:	pop    rdi
   14001f3d4:	ret    
   14001f3d5:	int3   
   14001f3d6:	int3   
   14001f3d7:	int3   
   14001f3d8:	mov    rax,rsp
   14001f3db:	push   rbp
   14001f3dc:	push   rsi
   14001f3dd:	push   rdi
   14001f3de:	push   r12
   14001f3e0:	push   r13
   14001f3e2:	push   r14
   14001f3e4:	push   r15
   14001f3e6:	lea    rbp,[rax-0x58]
   14001f3ea:	sub    rsp,0x120
   14001f3f1:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14001f3fa:	mov    QWORD PTR [rax+0x18],rbx
   14001f3fe:	mov    rax,QWORD PTR [rip+0x48deb]        # 0x1400681f0
   14001f405:	xor    rax,rsp
   14001f408:	mov    QWORD PTR [rbp+0x18],rax
   14001f40c:	mov    rbx,rdx
   14001f40f:	mov    r13,rcx
   14001f412:	lea    r8,[rsp+0x20]
   14001f417:	lea    rdx,[rsp+0x20]
   14001f41c:	lea    rcx,[rsp+0x28]
   14001f421:	call   0x140005454
   14001f426:	nop
   14001f427:	mov    rdx,rbx
   14001f42a:	lea    rcx,[rsp+0x28]
   14001f42f:	call   0x140002924
   14001f434:	lea    r8,[rsp+0x20]
   14001f439:	lea    rdx,[rsp+0x20]
   14001f43e:	lea    rcx,[rsp+0x48]
   14001f443:	call   0x140005454
   14001f448:	nop
   14001f449:	mov    rax,QWORD PTR [rsp+0x30]
   14001f44e:	mov    rdi,QWORD PTR [rax]
   14001f451:	xor    r15d,r15d
   14001f454:	or     rsi,0xffffffffffffffff
   14001f458:	cmp    rdi,rax
   14001f45b:	je     0x14001f6ed
   14001f461:	lea    r14,[rdi+0x18]
   14001f465:	lea    rcx,[rip+0x3148c]        # 0x1400508f8
   14001f46c:	call   QWORD PTR [rip+0x2a196]        # 0x140049608
   14001f472:	mov    r8,rax
   14001f475:	lea    rdx,[rip+0x3147c]        # 0x1400508f8
   14001f47c:	mov    rcx,r14
   14001f47f:	call   0x1400049b8
   14001f484:	mov    r9,rax
   14001f487:	xor    r8d,r8d
   14001f48a:	lea    rdx,[rbp-0x38]
   14001f48e:	mov    rcx,r14
   14001f491:	call   0x140002e90
   14001f496:	nop
   14001f497:	mov    QWORD PTR [rbp-0x48],0xf
   14001f49f:	mov    QWORD PTR [rbp-0x50],r15
   14001f4a3:	mov    BYTE PTR [rbp-0x60],r15b
   14001f4a7:	lea    rcx,[rip+0x3255a]        # 0x140051a08
   14001f4ae:	call   QWORD PTR [rip+0x2a154]        # 0x140049608
   14001f4b4:	mov    r8,rax
   14001f4b7:	lea    rdx,[rip+0x3254a]        # 0x140051a08
   14001f4be:	lea    rcx,[rbp-0x60]
   14001f4c2:	call   0x140005154
   14001f4c7:	nop
   14001f4c8:	lea    r9,[rbp-0x60]
   14001f4cc:	lea    r8,[rbp-0x38]
   14001f4d0:	lea    rdx,[rbp-0x10]
   14001f4d4:	lea    rcx,[rsp+0x28]
   14001f4d9:	call   0x140001404
   14001f4de:	nop
   14001f4df:	cmp    QWORD PTR [rbp-0x48],0x10
   14001f4e4:	jb     0x14001f4f0
   14001f4e6:	mov    rcx,QWORD PTR [rbp-0x60]
   14001f4ea:	call   QWORD PTR [rip+0x2a188]        # 0x140049678
   14001f4f0:	mov    QWORD PTR [rbp-0x48],0xf
   14001f4f8:	mov    QWORD PTR [rbp-0x50],r15
   14001f4fc:	mov    BYTE PTR [rbp-0x60],r15b
   14001f500:	lea    rdx,[rip+0x3250d]        # 0x140051a14
   14001f507:	lea    rcx,[rbp-0x10]
   14001f50b:	call   0x140002f24
   14001f510:	test   eax,eax
   14001f512:	jne    0x14001f51c
   14001f514:	mov    rcx,r13
   14001f517:	jmp    0x14001f64f
   14001f51c:	mov    rax,QWORD PTR [r13+0x8]
   14001f520:	mov    rbx,QWORD PTR [rax]
   14001f523:	cmp    rbx,rax
   14001f526:	je     0x14001f64a
   14001f52c:	or     r14,0xffffffffffffffff
   14001f530:	lea    rcx,[rip+0x313c1]        # 0x1400508f8
   14001f537:	call   QWORD PTR [rip+0x2a0cb]        # 0x140049608
   14001f53d:	mov    r8,rax
   14001f540:	lea    rdx,[rip+0x313b1]        # 0x1400508f8
   14001f547:	lea    rcx,[rbx+0x18]
   14001f54b:	call   0x1400049b8
   14001f550:	mov    r9,rax
   14001f553:	xor    r8d,r8d
   14001f556:	lea    rdx,[rsp+0x78]
   14001f55b:	lea    rcx,[rbx+0x18]
   14001f55f:	call   0x140002e90
   14001f564:	nop
   14001f565:	mov    r12,QWORD PTR [rbp-0x78]
   14001f569:	lea    rdx,[rsp+0x78]
   14001f56e:	cmp    QWORD PTR [rbp-0x70],0x10
   14001f573:	cmovae rdx,QWORD PTR [rsp+0x78]
   14001f579:	mov    rsi,QWORD PTR [rbp-0x28]
   14001f57d:	lea    rcx,[rbp-0x38]
   14001f581:	cmp    QWORD PTR [rbp-0x20],0x10
   14001f586:	cmovae rcx,QWORD PTR [rbp-0x38]
   14001f58b:	mov    r8,r12
   14001f58e:	cmp    rsi,r12
   14001f591:	cmovb  r8,rsi
   14001f595:	call   QWORD PTR [rip+0x2a05d]        # 0x1400495f8
   14001f59b:	movsxd rcx,eax
   14001f59e:	mov    eax,r15d
   14001f5a1:	cmp    rsi,r12
   14001f5a4:	setne  al
   14001f5a7:	cmp    rsi,r12
   14001f5aa:	cmovb  eax,r14d
   14001f5ae:	test   rcx,rcx
   14001f5b1:	cmovne eax,ecx
   14001f5b4:	test   eax,eax
   14001f5b6:	sete   al
   14001f5b9:	test   al,al
   14001f5bb:	jne    0x14001f613
   14001f5bd:	cmp    QWORD PTR [rbp-0x28],r15
   14001f5c1:	je     0x14001f613
   14001f5c3:	lea    rdx,[rip+0x312fe]        # 0x1400508c8
   14001f5ca:	lea    rcx,[rbp-0x38]
   14001f5ce:	call   0x140002f24
   14001f5d3:	test   eax,eax
   14001f5d5:	je     0x14001f613
   14001f5d7:	cmp    BYTE PTR [rbx+0x69],r15b
   14001f5db:	jne    0x14001f62a
   14001f5dd:	mov    rax,QWORD PTR [rbx+0x10]
   14001f5e1:	cmp    BYTE PTR [rax+0x69],r15b
   14001f5e5:	jne    0x14001f5f5
   14001f5e7:	mov    rbx,rax
   14001f5ea:	mov    rax,QWORD PTR [rax]
   14001f5ed:	cmp    BYTE PTR [rax+0x69],r15b
   14001f5f1:	je     0x14001f5e7
   14001f5f3:	jmp    0x14001f62a
   14001f5f5:	mov    rax,QWORD PTR [rbx+0x8]
   14001f5f9:	jmp    0x14001f608
   14001f5fb:	cmp    rbx,QWORD PTR [rax+0x10]
   14001f5ff:	jne    0x14001f60e
   14001f601:	mov    rbx,rax
   14001f604:	mov    rax,QWORD PTR [rax+0x8]
   14001f608:	cmp    BYTE PTR [rax+0x69],r15b
   14001f60c:	je     0x14001f5fb
   14001f60e:	mov    rbx,rax
   14001f611:	jmp    0x14001f62a
   14001f613:	mov    r8,rbx
   14001f616:	lea    rdx,[rsp+0x68]
   14001f61b:	mov    rcx,r13
   14001f61e:	call   0x1400032ac
   14001f623:	mov    rbx,QWORD PTR [r13+0x8]
   14001f627:	mov    rbx,QWORD PTR [rbx]
   14001f62a:	cmp    QWORD PTR [rbp-0x70],0x10
   14001f62f:	jb     0x14001f63c
   14001f631:	mov    rcx,QWORD PTR [rsp+0x78]
   14001f636:	call   QWORD PTR [rip+0x2a03c]        # 0x140049678
   14001f63c:	cmp    rbx,QWORD PTR [r13+0x8]
   14001f640:	jne    0x14001f530
   14001f646:	lea    r14,[rdi+0x18]
   14001f64a:	lea    rcx,[rsp+0x48]
   14001f64f:	lea    r9,[r14+0x28]
   14001f653:	mov    r8,r14
   14001f656:	lea    rdx,[rsp+0x78]
   14001f65b:	call   0x140001620
   14001f660:	cmp    QWORD PTR [rbp-0x70],0x10
   14001f665:	jb     0x14001f672
   14001f667:	mov    rcx,QWORD PTR [rsp+0x78]
   14001f66c:	call   QWORD PTR [rip+0x2a006]        # 0x140049678
   14001f672:	cmp    BYTE PTR [rdi+0x69],r15b
   14001f676:	jne    0x14001f6ac
   14001f678:	mov    rax,QWORD PTR [rdi+0x10]
   14001f67c:	cmp    BYTE PTR [rax+0x69],r15b
   14001f680:	jne    0x14001f690
   14001f682:	mov    rdi,rax
   14001f685:	mov    rax,QWORD PTR [rax]
   14001f688:	cmp    BYTE PTR [rax+0x69],r15b
   14001f68c:	je     0x14001f682
   14001f68e:	jmp    0x14001f6ac
   14001f690:	mov    rax,QWORD PTR [rdi+0x8]
   14001f694:	jmp    0x14001f6a3
   14001f696:	cmp    rdi,QWORD PTR [rax+0x10]
   14001f69a:	jne    0x14001f6a9
   14001f69c:	mov    rdi,rax
   14001f69f:	mov    rax,QWORD PTR [rax+0x8]
   14001f6a3:	cmp    BYTE PTR [rax+0x69],r15b
   14001f6a7:	je     0x14001f696
   14001f6a9:	mov    rdi,rax
   14001f6ac:	cmp    QWORD PTR [rbp+0x8],0x10
   14001f6b1:	jb     0x14001f6bd
   14001f6b3:	mov    rcx,QWORD PTR [rbp-0x10]
   14001f6b7:	call   QWORD PTR [rip+0x29fbb]        # 0x140049678
   14001f6bd:	mov    QWORD PTR [rbp+0x8],0xf
   14001f6c5:	mov    QWORD PTR [rbp+0x0],r15
   14001f6c9:	mov    BYTE PTR [rbp-0x10],r15b
   14001f6cd:	cmp    QWORD PTR [rbp-0x20],0x10
   14001f6d2:	jb     0x14001f6de
   14001f6d4:	mov    rcx,QWORD PTR [rbp-0x38]
   14001f6d8:	call   QWORD PTR [rip+0x29f9a]        # 0x140049678
   14001f6de:	cmp    rdi,QWORD PTR [rsp+0x30]
   14001f6e3:	jne    0x14001f461
   14001f6e9:	or     rsi,0xffffffffffffffff
   14001f6ed:	mov    rax,QWORD PTR [rsp+0x50]
   14001f6f2:	mov    rbx,QWORD PTR [rax]
   14001f6f5:	cmp    rbx,rax
   14001f6f8:	je     0x14001f759
   14001f6fa:	lea    rdx,[rbx+0x18]
   14001f6fe:	mov    rcx,r13
   14001f701:	call   0x140003148
   14001f706:	lea    rdx,[rbx+0x40]
   14001f70a:	mov    r9,rsi
   14001f70d:	xor    r8d,r8d
   14001f710:	mov    rcx,rax
   14001f713:	call   0x1400048b8
   14001f718:	cmp    BYTE PTR [rbx+0x69],r15b
   14001f71c:	jne    0x14001f752
   14001f71e:	mov    rax,QWORD PTR [rbx+0x10]
   14001f722:	cmp    BYTE PTR [rax+0x69],r15b
   14001f726:	jne    0x14001f736
   14001f728:	mov    rbx,rax
   14001f72b:	mov    rax,QWORD PTR [rax]
   14001f72e:	cmp    BYTE PTR [rax+0x69],r15b
   14001f732:	je     0x14001f728
   14001f734:	jmp    0x14001f752
   14001f736:	mov    rax,QWORD PTR [rbx+0x8]
   14001f73a:	jmp    0x14001f749
   14001f73c:	cmp    rbx,QWORD PTR [rax+0x10]
   14001f740:	jne    0x14001f74f
   14001f742:	mov    rbx,rax
   14001f745:	mov    rax,QWORD PTR [rax+0x8]
   14001f749:	cmp    BYTE PTR [rax+0x69],r15b
   14001f74d:	je     0x14001f73c
   14001f74f:	mov    rbx,rax
   14001f752:	cmp    rbx,QWORD PTR [rsp+0x50]
   14001f757:	jne    0x14001f6fa
   14001f759:	lea    rcx,[rsp+0x48]
   14001f75e:	call   0x1400013c0
   14001f763:	nop
   14001f764:	lea    rcx,[rsp+0x28]
   14001f769:	call   0x1400013c0
   14001f76e:	xor    eax,eax
   14001f770:	mov    rcx,QWORD PTR [rbp+0x18]
   14001f774:	xor    rcx,rsp
   14001f777:	call   0x14002b100
   14001f77c:	mov    rbx,QWORD PTR [rsp+0x170]
   14001f784:	add    rsp,0x120
   14001f78b:	pop    r15
   14001f78d:	pop    r14
   14001f78f:	pop    r13
   14001f791:	pop    r12
   14001f793:	pop    rdi
   14001f794:	pop    rsi
   14001f795:	pop    rbp
   14001f796:	ret    
   14001f797:	int3   
   14001f798:	mov    QWORD PTR [rsp+0x8],rbx
   14001f79d:	mov    QWORD PTR [rsp+0x10],rsi
   14001f7a2:	push   rdi
   14001f7a3:	sub    rsp,0x20
   14001f7a7:	mov    rdi,QWORD PTR [rcx+0xb0]
   14001f7ae:	mov    rbx,rcx
   14001f7b1:	test   rdi,rdi
   14001f7b4:	je     0x14001f7dd
   14001f7b6:	mov    rsi,QWORD PTR [rcx+0xb8]
   14001f7bd:	jmp    0x14001f7cb
   14001f7bf:	mov    rcx,rdi
   14001f7c2:	call   0x140002da8
   14001f7c7:	add    rdi,0x50
   14001f7cb:	cmp    rdi,rsi
   14001f7ce:	jne    0x14001f7bf
   14001f7d0:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001f7d7:	call   QWORD PTR [rip+0x29e9b]        # 0x140049678
   14001f7dd:	and    QWORD PTR [rbx+0xb0],0x0
   14001f7e5:	and    QWORD PTR [rbx+0xb8],0x0
   14001f7ed:	and    QWORD PTR [rbx+0xc0],0x0
   14001f7f5:	cmp    QWORD PTR [rbx+0xa0],0x10
   14001f7fd:	jb     0x14001f80c
   14001f7ff:	mov    rcx,QWORD PTR [rbx+0x88]
   14001f806:	call   QWORD PTR [rip+0x29e6c]        # 0x140049678
   14001f80c:	and    QWORD PTR [rbx+0x98],0x0
   14001f814:	mov    edi,0xf
   14001f819:	mov    QWORD PTR [rbx+0xa0],rdi
   14001f820:	mov    BYTE PTR [rbx+0x88],0x0
   14001f827:	cmp    QWORD PTR [rbx+0x78],0x10
   14001f82c:	jb     0x14001f838
   14001f82e:	mov    rcx,QWORD PTR [rbx+0x60]
   14001f832:	call   QWORD PTR [rip+0x29e40]        # 0x140049678
   14001f838:	and    QWORD PTR [rbx+0x70],0x0
   14001f83d:	mov    QWORD PTR [rbx+0x78],rdi
   14001f841:	mov    BYTE PTR [rbx+0x60],0x0
   14001f845:	cmp    QWORD PTR [rbx+0x50],0x10
   14001f84a:	jb     0x14001f856
   14001f84c:	mov    rcx,QWORD PTR [rbx+0x38]
   14001f850:	call   QWORD PTR [rip+0x29e22]        # 0x140049678
   14001f856:	and    QWORD PTR [rbx+0x48],0x0
   14001f85b:	mov    QWORD PTR [rbx+0x50],rdi
   14001f85f:	mov    BYTE PTR [rbx+0x38],0x0
   14001f863:	cmp    QWORD PTR [rbx+0x28],0x10
   14001f868:	jb     0x14001f874
   14001f86a:	mov    rcx,QWORD PTR [rbx+0x10]
   14001f86e:	call   QWORD PTR [rip+0x29e04]        # 0x140049678
   14001f874:	and    QWORD PTR [rbx+0x20],0x0
   14001f879:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f87e:	mov    QWORD PTR [rbx+0x28],rdi
   14001f882:	mov    BYTE PTR [rbx+0x10],0x0
   14001f886:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f88b:	add    rsp,0x20
   14001f88f:	pop    rdi
   14001f890:	ret    
   14001f891:	int3   
   14001f892:	int3   
   14001f893:	int3   
   14001f894:	mov    QWORD PTR [rsp+0x8],rcx
   14001f899:	push   rsi
   14001f89a:	push   rdi
   14001f89b:	push   r12
   14001f89d:	sub    rsp,0x30
   14001f8a1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f8aa:	mov    QWORD PTR [rsp+0x58],rbx
   14001f8af:	mov    QWORD PTR [rsp+0x60],rbp
   14001f8b4:	mov    rdi,rcx
   14001f8b7:	xor    r12d,r12d
   14001f8ba:	mov    QWORD PTR [rcx],r12
   14001f8bd:	mov    DWORD PTR [rcx+0x8],r12d
   14001f8c1:	lea    esi,[r12+0xf]
   14001f8c6:	mov    QWORD PTR [rcx+0x28],rsi
   14001f8ca:	mov    QWORD PTR [rcx+0x20],r12
   14001f8ce:	mov    BYTE PTR [rcx+0x10],r12b
   14001f8d2:	lea    rbp,[rip+0x3101c]        # 0x1400508f5
   14001f8d9:	mov    rcx,rbp
   14001f8dc:	call   QWORD PTR [rip+0x29d26]        # 0x140049608
   14001f8e2:	mov    r8,rax
   14001f8e5:	mov    rdx,rbp
   14001f8e8:	lea    rcx,[rdi+0x10]
   14001f8ec:	call   0x140005154
   14001f8f1:	nop
   14001f8f2:	mov    QWORD PTR [rdi+0x50],rsi
   14001f8f6:	mov    QWORD PTR [rdi+0x48],r12
   14001f8fa:	mov    BYTE PTR [rdi+0x38],r12b
   14001f8fe:	mov    rcx,rbp
   14001f901:	call   QWORD PTR [rip+0x29d01]        # 0x140049608
   14001f907:	mov    r8,rax
   14001f90a:	mov    rdx,rbp
   14001f90d:	lea    rcx,[rdi+0x38]
   14001f911:	call   0x140005154
   14001f916:	nop
   14001f917:	mov    QWORD PTR [rdi+0x78],rsi
   14001f91b:	mov    QWORD PTR [rdi+0x70],r12
   14001f91f:	mov    BYTE PTR [rdi+0x60],r12b
   14001f923:	mov    rcx,rbp
   14001f926:	call   QWORD PTR [rip+0x29cdc]        # 0x140049608
   14001f92c:	mov    r8,rax
   14001f92f:	mov    rdx,rbp
   14001f932:	lea    rcx,[rdi+0x60]
   14001f936:	call   0x140005154
   14001f93b:	nop
   14001f93c:	mov    QWORD PTR [rdi+0xa0],rsi
   14001f943:	mov    QWORD PTR [rdi+0x98],r12
   14001f94a:	mov    BYTE PTR [rdi+0x88],r12b
   14001f951:	mov    rcx,rbp
   14001f954:	call   QWORD PTR [rip+0x29cae]        # 0x140049608
   14001f95a:	mov    r8,rax
   14001f95d:	mov    rdx,rbp
   14001f960:	lea    rcx,[rdi+0x88]
   14001f967:	call   0x140005154
   14001f96c:	mov    QWORD PTR [rdi+0xb0],r12
   14001f973:	mov    QWORD PTR [rdi+0xb8],r12
   14001f97a:	mov    QWORD PTR [rdi+0xc0],r12
   14001f981:	mov    rax,rdi
   14001f984:	mov    rbx,QWORD PTR [rsp+0x58]
   14001f989:	mov    rbp,QWORD PTR [rsp+0x60]
   14001f98e:	add    rsp,0x30
   14001f992:	pop    r12
   14001f994:	pop    rdi
   14001f995:	pop    rsi
   14001f996:	ret    
   14001f997:	int3   
   14001f998:	mov    rax,rsp
   14001f99b:	push   rsi
   14001f99c:	push   rdi
   14001f99d:	push   r12
   14001f99f:	push   r13
   14001f9a1:	push   r14
   14001f9a3:	sub    rsp,0x60
   14001f9a7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f9b0:	mov    QWORD PTR [rax+0x18],rbx
   14001f9b4:	mov    QWORD PTR [rax+0x20],rbp
   14001f9b8:	mov    rax,QWORD PTR [rip+0x48831]        # 0x1400681f0
   14001f9bf:	xor    rax,rsp
   14001f9c2:	mov    QWORD PTR [rsp+0x50],rax
   14001f9c7:	mov    r14,rdx
   14001f9ca:	mov    rsi,rcx
   14001f9cd:	mov    rcx,rdx
   14001f9d0:	call   0x14001e890
   14001f9d5:	mov    DWORD PTR [rsi],eax
   14001f9d7:	mov    rcx,r14
   14001f9da:	call   0x14001eae4
   14001f9df:	mov    DWORD PTR [rsi+0x4],eax
   14001f9e2:	mov    rcx,r14
   14001f9e5:	call   0x14001ed38
   14001f9ea:	mov    DWORD PTR [rsi+0x8],eax
   14001f9ed:	mov    rdx,r14
   14001f9f0:	lea    rcx,[rsp+0x28]
   14001f9f5:	call   0x14001ef8c
   14001f9fa:	nop
   14001f9fb:	mov    rdx,rax
   14001f9fe:	lea    rcx,[rsi+0x10]
   14001fa02:	call   0x140004730
   14001fa07:	nop
   14001fa08:	cmp    QWORD PTR [rsp+0x40],0x10
   14001fa0e:	jb     0x14001fa1b
   14001fa10:	mov    rcx,QWORD PTR [rsp+0x28]
   14001fa15:	call   QWORD PTR [rip+0x29c5d]        # 0x140049678
   14001fa1b:	or     rbp,0xffffffffffffffff
   14001fa1f:	mov    r9,rbp
   14001fa22:	xor    r8d,r8d
   14001fa25:	lea    rdx,[rsi+0x10]
   14001fa29:	lea    rcx,[rsi+0x38]
   14001fa2d:	call   0x1400048b8
   14001fa32:	lea    rcx,[rip+0x31fe7]        # 0x140051a20
   14001fa39:	call   QWORD PTR [rip+0x29bc9]        # 0x140049608
   14001fa3f:	mov    r8,rax
   14001fa42:	lea    rdx,[rip+0x31fd7]        # 0x140051a20
   14001fa49:	lea    rcx,[rsi+0x38]
   14001fa4d:	call   0x140009290
   14001fa52:	mov    r9,rbp
   14001fa55:	xor    r8d,r8d
   14001fa58:	lea    rdx,[rsi+0x10]
   14001fa5c:	lea    rcx,[rsi+0x60]
   14001fa60:	call   0x1400048b8
   14001fa65:	lea    rcx,[rip+0x31fc4]        # 0x140051a30
   14001fa6c:	call   QWORD PTR [rip+0x29b96]        # 0x140049608
   14001fa72:	mov    r8,rax
   14001fa75:	lea    rdx,[rip+0x31fb4]        # 0x140051a30
   14001fa7c:	lea    rcx,[rsi+0x60]
   14001fa80:	call   0x140009290
   14001fa85:	mov    rdx,r14
   14001fa88:	lea    rcx,[rsp+0x28]
   14001fa8d:	call   0x14001f30c
   14001fa92:	nop
   14001fa93:	lea    rcx,[rsi+0x88]
   14001fa9a:	mov    rdx,rax
   14001fa9d:	call   0x140004730
   14001faa2:	nop
   14001faa3:	cmp    QWORD PTR [rsp+0x40],0x10
   14001faa9:	jb     0x14001fab6
   14001faab:	mov    rcx,QWORD PTR [rsp+0x28]
   14001fab0:	call   QWORD PTR [rip+0x29bc2]        # 0x140049678
   14001fab6:	mov    rdi,QWORD PTR [rsi+0xb8]
   14001fabd:	mov    rbx,QWORD PTR [rsi+0xb0]
   14001fac4:	cmp    rbx,rdi
   14001fac7:	je     0x14001fb2a
   14001fac9:	mov    rbp,rdi
   14001facc:	cmp    rdi,rdi
   14001facf:	je     0x14001fb03
   14001fad1:	mov    r12,rdi
   14001fad4:	sub    r12,rbx
   14001fad7:	mov    r13,rbx
   14001fada:	sub    r13,rdi
   14001fadd:	mov    rdx,rbp
   14001fae0:	mov    rcx,rbx
   14001fae3:	call   0x140004730
   14001fae8:	lea    rcx,[r13+rbp*1+0x28]
   14001faed:	lea    rdx,[rcx+r12*1]
   14001faf1:	call   0x140004730
   14001faf6:	add    rbx,0x50
   14001fafa:	add    rbp,0x50
   14001fafe:	cmp    rbp,rdi
   14001fb01:	jne    0x14001fadd
   14001fb03:	mov    rbp,QWORD PTR [rsi+0xb8]
   14001fb0a:	mov    rdi,rbx
   14001fb0d:	cmp    rbx,rbp
   14001fb10:	je     0x14001fb23
   14001fb12:	mov    rcx,rdi
   14001fb15:	call   0x140002da8
   14001fb1a:	add    rdi,0x50
   14001fb1e:	cmp    rdi,rbp
   14001fb21:	jne    0x14001fb12
   14001fb23:	mov    QWORD PTR [rsi+0xb8],rbx
   14001fb2a:	lea    rdx,[rsi+0xb0]
   14001fb31:	mov    rcx,r14
   14001fb34:	call   0x140002ab4
   14001fb39:	mov    rcx,QWORD PTR [rsp+0x50]
   14001fb3e:	xor    rcx,rsp
   14001fb41:	call   0x14002b100
   14001fb46:	lea    r11,[rsp+0x60]
   14001fb4b:	mov    rbx,QWORD PTR [r11+0x40]
   14001fb4f:	mov    rbp,QWORD PTR [r11+0x48]
   14001fb53:	mov    rsp,r11
   14001fb56:	pop    r14
   14001fb58:	pop    r13
   14001fb5a:	pop    r12
   14001fb5c:	pop    rdi
   14001fb5d:	pop    rsi
   14001fb5e:	ret    
   14001fb5f:	int3   
   14001fb60:	mov    eax,DWORD PTR [rcx]
   14001fb62:	mov    r10d,0xfffffffe
   14001fb68:	or     r9d,0xffffffff
   14001fb6c:	cmp    eax,r10d
   14001fb6f:	je     0x14001fb94
   14001fb71:	test   eax,eax
   14001fb73:	je     0x14001fb94
   14001fb75:	cmp    eax,r9d
   14001fb78:	je     0x14001fb94
   14001fb7a:	cmp    DWORD PTR [r8],r10d
   14001fb7d:	je     0x14001fb94
   14001fb7f:	cmp    DWORD PTR [r8],0x0
   14001fb83:	je     0x14001fb94
   14001fb85:	cmp    DWORD PTR [r8],r9d
   14001fb88:	je     0x14001fb94
   14001fb8a:	sub    eax,DWORD PTR [r8]
   14001fb8d:	mov    DWORD PTR [rdx],eax
   14001fb8f:	jmp    0x14001fc45
   14001fb94:	mov    ecx,DWORD PTR [r8]
   14001fb97:	test   eax,eax
   14001fb99:	je     0x14001fbb3
   14001fb9b:	cmp    eax,r9d
   14001fb9e:	je     0x14001fbb3
   14001fba0:	cmp    eax,r10d
   14001fba3:	je     0x14001fbe3
   14001fba5:	test   ecx,ecx
   14001fba7:	je     0x14001fbb3
   14001fba9:	cmp    ecx,r9d
   14001fbac:	je     0x14001fbb3
   14001fbae:	cmp    ecx,r10d
   14001fbb1:	jne    0x14001fbdf
   14001fbb3:	cmp    eax,r10d
   14001fbb6:	je     0x14001fbe3
   14001fbb8:	cmp    ecx,r10d
   14001fbbb:	je     0x14001fbe3
   14001fbbd:	cmp    eax,r9d
   14001fbc0:	jne    0x14001fbc7
   14001fbc2:	cmp    ecx,r9d
   14001fbc5:	je     0x14001fbeb
   14001fbc7:	test   eax,eax
   14001fbc9:	jne    0x14001fbd1
   14001fbcb:	test   ecx,ecx
   14001fbcd:	jne    0x14001fbe6
   14001fbcf:	jmp    0x14001fbeb
   14001fbd1:	cmp    eax,r9d
   14001fbd4:	je     0x14001fbe6
   14001fbd6:	cmp    ecx,r9d
   14001fbd9:	je     0x14001fbf3
   14001fbdb:	test   ecx,ecx
   14001fbdd:	je     0x14001fbff
   14001fbdf:	sub    eax,ecx
   14001fbe1:	jmp    0x14001fbe6
   14001fbe3:	mov    eax,r10d
   14001fbe6:	cmp    eax,r10d
   14001fbe9:	jne    0x14001fbef
   14001fbeb:	xor    ecx,ecx
   14001fbed:	jmp    0x14001fc0b
   14001fbef:	test   eax,eax
   14001fbf1:	jne    0x14001fbfa
   14001fbf3:	mov    ecx,0x1
   14001fbf8:	jmp    0x14001fc0b
   14001fbfa:	cmp    eax,r9d
   14001fbfd:	jne    0x14001fc06
   14001fbff:	mov    ecx,0x2
   14001fc04:	jmp    0x14001fc0b
   14001fc06:	mov    ecx,0x5
   14001fc0b:	test   ecx,ecx
   14001fc0d:	je     0x14001fc3f
   14001fc0f:	dec    ecx
   14001fc11:	je     0x14001fc37
   14001fc13:	dec    ecx
   14001fc15:	je     0x14001fc2f
   14001fc17:	dec    ecx
   14001fc19:	je     0x14001fc27
   14001fc1b:	dec    ecx
   14001fc1d:	jne    0x14001fc3f
   14001fc1f:	mov    DWORD PTR [rdx],0x7ffffffd
   14001fc25:	jmp    0x14001fc45
   14001fc27:	mov    DWORD PTR [rdx],0x80000001
   14001fc2d:	jmp    0x14001fc45
   14001fc2f:	mov    DWORD PTR [rdx],0x7fffffff
   14001fc35:	jmp    0x14001fc45
   14001fc37:	mov    DWORD PTR [rdx],0x80000000
   14001fc3d:	jmp    0x14001fc45
   14001fc3f:	mov    DWORD PTR [rdx],0x7ffffffe
   14001fc45:	mov    rax,rdx
   14001fc48:	ret    
   14001fc49:	int3   
   14001fc4a:	int3   
   14001fc4b:	int3   
   14001fc4c:	mov    rax,rsp
   14001fc4f:	push   rbp
   14001fc50:	push   rdi
   14001fc51:	push   r12
   14001fc53:	lea    rbp,[rax-0x5f]
   14001fc57:	sub    rsp,0xf0
   14001fc5e:	mov    QWORD PTR [rbp-0x71],0xfffffffffffffffe
   14001fc66:	mov    QWORD PTR [rax+0x10],rbx
   14001fc6a:	mov    QWORD PTR [rax+0x18],rsi
   14001fc6e:	mov    rax,QWORD PTR [rip+0x4857b]        # 0x1400681f0
   14001fc75:	xor    rax,rsp
   14001fc78:	mov    QWORD PTR [rbp+0x37],rax
   14001fc7c:	mov    rsi,rcx
   14001fc7f:	lea    rcx,[rsp+0x28]
   14001fc84:	call   QWORD PTR [rip+0x29ae6]        # 0x140049770
   14001fc8a:	lea    rcx,[rsp+0x28]
   14001fc8f:	call   QWORD PTR [rip+0x29ad3]        # 0x140049768
   14001fc95:	mov    rbx,rax
   14001fc98:	test   rax,rax
   14001fc9b:	jne    0x14001fcec
   14001fc9d:	lea    rax,[rip+0x31bd4]        # 0x140051878
   14001fca4:	mov    QWORD PTR [rbp-0x79],rax
   14001fca8:	lea    rdx,[rbp-0x79]
   14001fcac:	lea    rcx,[rbp-0x69]
   14001fcb0:	call   QWORD PTR [rip+0x29c1a]        # 0x1400498d0
   14001fcb6:	lea    r11,[rip+0x2e18b]        # 0x14004de48
   14001fcbd:	mov    QWORD PTR [rbp-0x69],r11
   14001fcc1:	lea    rdx,[rbp-0x69]
   14001fcc5:	lea    rcx,[rbp-0x9]
   14001fcc9:	call   0x1400217f8
   14001fcce:	nop
   14001fccf:	mov    rdx,rax
   14001fcd2:	lea    rcx,[rbp-0x51]
   14001fcd6:	call   0x140021848
   14001fcdb:	lea    rdx,[rip+0x43dbe]        # 0x140063aa0
   14001fce2:	lea    rcx,[rbp-0x51]
   14001fce6:	call   0x14002b560
   14001fceb:	nop
   14001fcec:	movzx  edi,WORD PTR [rax+0xc]
   14001fcf0:	lea    eax,[rdi+0x1]
   14001fcf3:	cmp    eax,0x2
   14001fcf6:	jge    0x14001fcfe
   14001fcf8:	call   0x14001fed4
   14001fcfd:	int3   
   14001fcfe:	cmp    WORD PTR [rbx+0xc],0x1f
   14001fd03:	jbe    0x14001fd0b
   14001fd05:	call   0x14001fed4
   14001fd0a:	int3   
   14001fd0b:	mov    r12d,0x1
   14001fd11:	mov    WORD PTR [rsp+0x20],r12w
   14001fd17:	movzx  edx,WORD PTR [rbx+0x10]
   14001fd1b:	add    dx,r12w
   14001fd1f:	lea    rcx,[rsp+0x20]
   14001fd24:	call   0x14001fe30
   14001fd29:	mov    r11d,0x76c
   14001fd2f:	movzx  r8d,WORD PTR [rbx+0x14]
   14001fd34:	add    r8w,r11w
   14001fd38:	movzx  eax,r8w
   14001fd3c:	add    eax,r12d
   14001fd3f:	cmp    eax,0x579
   14001fd44:	jge    0x14001fd4c
   14001fd46:	call   0x14001ffb4
   14001fd4b:	int3   
   14001fd4c:	mov    eax,0x2710
   14001fd51:	cmp    r8w,ax
   14001fd55:	jbe    0x14001fd5d
   14001fd57:	call   0x14001ffb4
   14001fd5c:	int3   
   14001fd5d:	movzx  eax,WORD PTR [rsp+0x20]
   14001fd62:	mov    ecx,0xe
   14001fd67:	sub    ecx,eax
   14001fd69:	mov    eax,0x2aaaaaab
   14001fd6e:	imul   ecx
   14001fd70:	sar    edx,1
   14001fd72:	mov    eax,edx
   14001fd74:	shr    eax,0x1f
   14001fd77:	add    edx,eax
   14001fd79:	sub    r8w,dx
   14001fd7d:	mov    eax,0x12c0
   14001fd82:	add    r8w,ax
   14001fd86:	movzx  r9d,r8w
   14001fd8a:	movzx  eax,dx
   14001fd8d:	add    ax,ax
   14001fd90:	add    dx,ax
   14001fd93:	shl    dx,0x2
   14001fd97:	add    dx,WORD PTR [rsp+0x20]
   14001fd9c:	sub    dx,0x3
   14001fda0:	movzx  ecx,dx
   14001fda3:	imul   ecx,ecx,0x99
   14001fda9:	add    ecx,0x2
   14001fdac:	mov    eax,0x66666667
   14001fdb1:	imul   ecx
   14001fdb3:	mov    ecx,edx
   14001fdb5:	sar    ecx,1
   14001fdb7:	mov    eax,ecx
   14001fdb9:	shr    eax,0x1f
   14001fdbc:	add    ecx,eax
   14001fdbe:	mov    r10d,0x51eb851f
   14001fdc4:	mov    eax,r10d
   14001fdc7:	imul   r9d
   14001fdca:	sar    edx,0x7
   14001fdcd:	mov    r8d,edx
   14001fdd0:	shr    r8d,0x1f
   14001fdd4:	add    edx,ecx
   14001fdd6:	add    r8d,edx
   14001fdd9:	mov    eax,r10d
   14001fddc:	imul   r9d
   14001fddf:	sar    edx,0x5
   14001fde2:	mov    ecx,edx
   14001fde4:	shr    ecx,0x1f
   14001fde7:	add    edx,ecx
   14001fde9:	sub    r8d,edx
   14001fdec:	mov    ecx,r9d
   14001fdef:	imul   ecx,ecx,0x16d
   14001fdf5:	add    ecx,edi
   14001fdf7:	shr    r9d,0x2
   14001fdfb:	add    ecx,r8d
   14001fdfe:	lea    ecx,[r9+rcx*1-0x7d2d]
   14001fe06:	mov    DWORD PTR [rsi],ecx
   14001fe08:	mov    rax,rsi
   14001fe0b:	mov    rcx,QWORD PTR [rbp+0x37]
   14001fe0f:	xor    rcx,rsp
   14001fe12:	call   0x14002b100
   14001fe17:	lea    r11,[rsp+0xf0]
   14001fe1f:	mov    rbx,QWORD PTR [r11+0x28]
   14001fe23:	mov    rsi,QWORD PTR [r11+0x30]
   14001fe27:	mov    rsp,r11
   14001fe2a:	pop    r12
   14001fe2c:	pop    rdi
   14001fe2d:	pop    rbp
   14001fe2e:	ret    
   14001fe2f:	int3   
   14001fe30:	sub    rsp,0xd8
   14001fe37:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fe40:	movzx  eax,dx
   14001fe43:	inc    eax
   14001fe45:	cmp    eax,0x2
   14001fe48:	jge    0x14001fe85
   14001fe4a:	lea    rcx,[rsp+0x28]
   14001fe4f:	call   0x14001d424
   14001fe54:	nop
   14001fe55:	mov    rdx,rax
   14001fe58:	lea    rcx,[rsp+0x88]
   14001fe60:	call   0x140021cfc
   14001fe65:	nop
   14001fe66:	mov    rdx,rax
   14001fe69:	lea    rcx,[rsp+0x40]
   14001fe6e:	call   0x140021d4c
   14001fe73:	lea    rdx,[rip+0x43dee]        # 0x140063c68
   14001fe7a:	lea    rcx,[rsp+0x40]
   14001fe7f:	call   0x14002b560
   14001fe84:	nop
   14001fe85:	cmp    dx,0xc
   14001fe89:	jbe    0x14001fec6
   14001fe8b:	lea    rcx,[rsp+0x28]
   14001fe90:	call   0x14001d424
   14001fe95:	nop
   14001fe96:	mov    rdx,rax
   14001fe99:	lea    rcx,[rsp+0x88]
   14001fea1:	call   0x140021cfc
   14001fea6:	nop
   14001fea7:	mov    rdx,rax
   14001feaa:	lea    rcx,[rsp+0x40]
   14001feaf:	call   0x140021d4c
   14001feb4:	lea    rdx,[rip+0x43dad]        # 0x140063c68
   14001febb:	lea    rcx,[rsp+0x40]
   14001fec0:	call   0x14002b560
   14001fec5:	nop
   14001fec6:	mov    WORD PTR [rcx],dx
   14001fec9:	add    rsp,0xd8
   14001fed0:	ret    
   14001fed1:	int3   
   14001fed2:	int3   
   14001fed3:	int3   
   14001fed4:	rex push rbp
   14001fed6:	lea    rbp,[rsp-0x57]
   14001fedb:	sub    rsp,0x100
   14001fee2:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001feea:	mov    rax,QWORD PTR [rip+0x482ff]        # 0x1400681f0
   14001fef1:	xor    rax,rsp
   14001fef4:	mov    QWORD PTR [rbp+0x4f],rax
   14001fef8:	mov    QWORD PTR [rbp+0x3f],0xf
   14001ff00:	and    QWORD PTR [rbp+0x37],0x0
   14001ff05:	mov    BYTE PTR [rbp+0x27],0x0
   14001ff09:	lea    rcx,[rip+0x318c0]        # 0x1400517d0
   14001ff10:	call   QWORD PTR [rip+0x296f2]        # 0x140049608
   14001ff16:	mov    r8,rax
   14001ff19:	lea    rdx,[rip+0x318b0]        # 0x1400517d0
   14001ff20:	lea    rcx,[rbp+0x27]
   14001ff24:	call   0x140005154
   14001ff29:	nop
   14001ff2a:	lea    rax,[rbp+0x27]
   14001ff2e:	cmp    QWORD PTR [rbp+0x3f],0x10
   14001ff33:	cmovae rax,QWORD PTR [rbp+0x27]
   14001ff38:	mov    QWORD PTR [rsp+0x20],rax
   14001ff3d:	lea    rdx,[rsp+0x20]
   14001ff42:	lea    rcx,[rsp+0x28]
   14001ff47:	call   QWORD PTR [rip+0x29983]        # 0x1400498d0
   14001ff4d:	lea    r11,[rip+0x2a34c]        # 0x14004a2a0
   14001ff54:	mov    QWORD PTR [rsp+0x28],r11
   14001ff59:	cmp    QWORD PTR [rbp+0x3f],0x10
   14001ff5e:	jb     0x14001ff6a
   14001ff60:	mov    rcx,QWORD PTR [rbp+0x27]
   14001ff64:	call   QWORD PTR [rip+0x2970e]        # 0x140049678
   14001ff6a:	mov    QWORD PTR [rbp+0x3f],0xf
   14001ff72:	and    QWORD PTR [rbp+0x37],0x0
   14001ff77:	mov    BYTE PTR [rbp+0x27],0x0
   14001ff7b:	lea    rax,[rip+0x31ac6]        # 0x140051a48
   14001ff82:	mov    QWORD PTR [rsp+0x28],rax
   14001ff87:	lea    rdx,[rsp+0x28]
   14001ff8c:	lea    rcx,[rbp-0x19]
   14001ff90:	call   0x140021730
   14001ff95:	nop
   14001ff96:	mov    rdx,rax
   14001ff99:	lea    rcx,[rbp-0x61]
   14001ff9d:	call   0x140021780
   14001ffa2:	lea    rdx,[rip+0x43a4f]        # 0x1400639f8
   14001ffa9:	lea    rcx,[rbp-0x61]
   14001ffad:	call   0x14002b560
   14001ffb2:	int3   
   14001ffb3:	int3   
   14001ffb4:	rex push rbp
   14001ffb6:	lea    rbp,[rsp-0x57]
   14001ffbb:	sub    rsp,0x100
   14001ffc2:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   14001ffca:	mov    rax,QWORD PTR [rip+0x4821f]        # 0x1400681f0
   14001ffd1:	xor    rax,rsp
   14001ffd4:	mov    QWORD PTR [rbp+0x4f],rax
   14001ffd8:	mov    QWORD PTR [rbp+0x3f],0xf
   14001ffe0:	and    QWORD PTR [rbp+0x37],0x0
   14001ffe5:	mov    BYTE PTR [rbp+0x27],0x0
   14001ffe9:	lea    rcx,[rip+0x31810]        # 0x140051800
   14001fff0:	call   QWORD PTR [rip+0x29612]        # 0x140049608
   14001fff6:	mov    r8,rax
   14001fff9:	lea    rdx,[rip+0x31800]        # 0x140051800
   140020000:	lea    rcx,[rbp+0x27]
   140020004:	call   0x140005154
   140020009:	nop
   14002000a:	lea    rax,[rbp+0x27]
   14002000e:	cmp    QWORD PTR [rbp+0x3f],0x10
   140020013:	cmovae rax,QWORD PTR [rbp+0x27]
   140020018:	mov    QWORD PTR [rsp+0x20],rax
   14002001d:	lea    rdx,[rsp+0x20]
   140020022:	lea    rcx,[rsp+0x28]
   140020027:	call   QWORD PTR [rip+0x298a3]        # 0x1400498d0
   14002002d:	lea    r11,[rip+0x2a26c]        # 0x14004a2a0
   140020034:	mov    QWORD PTR [rsp+0x28],r11
   140020039:	cmp    QWORD PTR [rbp+0x3f],0x10
   14002003e:	jb     0x14002004a
   140020040:	mov    rcx,QWORD PTR [rbp+0x27]
   140020044:	call   QWORD PTR [rip+0x2962e]        # 0x140049678
   14002004a:	mov    QWORD PTR [rbp+0x3f],0xf
   140020052:	and    QWORD PTR [rbp+0x37],0x0
   140020057:	mov    BYTE PTR [rbp+0x27],0x0
   14002005b:	lea    rax,[rip+0x319fe]        # 0x140051a60
   140020062:	mov    QWORD PTR [rsp+0x28],rax
   140020067:	lea    rdx,[rsp+0x28]
   14002006c:	lea    rcx,[rbp-0x19]
   140020070:	call   0x140021c34
   140020075:	nop
   140020076:	mov    rdx,rax
   140020079:	lea    rcx,[rbp-0x61]
   14002007d:	call   0x140021c84
   140020082:	lea    rdx,[rip+0x43aff]        # 0x140063b88
   140020089:	lea    rcx,[rbp-0x61]
   14002008d:	call   0x14002b560
   140020092:	int3   
   140020093:	int3   
   140020094:	sub    rsp,0xb8
   14002009b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400200a4:	mov    rdx,rcx
   1400200a7:	lea    rcx,[rsp+0x70]
   1400200ac:	call   0x1400217f8
   1400200b1:	nop
   1400200b2:	mov    rdx,rax
   1400200b5:	lea    rcx,[rsp+0x28]
   1400200ba:	call   0x140021848
   1400200bf:	lea    rdx,[rip+0x439da]        # 0x140063aa0
   1400200c6:	lea    rcx,[rsp+0x28]
   1400200cb:	call   0x14002b560
   1400200d0:	int3   
   1400200d1:	int3   
   1400200d2:	int3   
   1400200d3:	int3   
   1400200d4:	mov    rax,rsp
   1400200d7:	push   rbp
   1400200d8:	push   rsi
   1400200d9:	push   rdi
   1400200da:	push   r12
   1400200dc:	push   r13
   1400200de:	push   r14
   1400200e0:	push   r15
   1400200e2:	lea    rbp,[rax-0x1b8]
   1400200e9:	sub    rsp,0x280
   1400200f0:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400200f9:	mov    QWORD PTR [rax+0x18],rbx
   1400200fd:	mov    rax,QWORD PTR [rip+0x480ec]        # 0x1400681f0
   140020104:	xor    rax,rsp
   140020107:	mov    QWORD PTR [rbp+0x178],rax
   14002010e:	mov    rbx,rdx
   140020111:	mov    r15,rcx
   140020114:	xor    edi,edi
   140020116:	mov    esi,edi
   140020118:	mov    DWORD PTR [rsp+0x24],edi
   14002011c:	mov    QWORD PTR [rsp+0x48],0xf
   140020125:	mov    QWORD PTR [rsp+0x40],rdi
   14002012a:	mov    BYTE PTR [rsp+0x30],dil
   14002012f:	lea    rcx,[rip+0x31906]        # 0x140051a3c
   140020136:	call   QWORD PTR [rip+0x294cc]        # 0x140049608
   14002013c:	mov    r8,rax
   14002013f:	lea    rdx,[rip+0x318f6]        # 0x140051a3c
   140020146:	lea    rcx,[rsp+0x30]
   14002014b:	call   0x140005154
   140020150:	mov    r14d,edi
   140020153:	movzx  r13d,di
   140020157:	mov    WORD PTR [rsp+0x20],di
   14002015c:	movzx  r12d,di
   140020160:	mov    DWORD PTR [rbp+0x170],0x202e2d2c
   14002016a:	mov    WORD PTR [rbp+0x174],0x2f
   140020173:	lea    eax,[rdi+0xf]
   140020176:	mov    QWORD PTR [rsp+0x78],rax
   14002017b:	mov    QWORD PTR [rsp+0x70],rdi
   140020180:	mov    BYTE PTR [rsp+0x60],dil
   140020185:	mov    QWORD PTR [rbp-0x60],rax
   140020189:	mov    QWORD PTR [rbp-0x68],rdi
   14002018d:	mov    BYTE PTR [rbp-0x78],dil
   140020191:	lea    rcx,[rbp+0x170]
   140020198:	call   QWORD PTR [rip+0x2946a]        # 0x140049608
   14002019e:	mov    r8,rax
   1400201a1:	lea    rdx,[rbp+0x170]
   1400201a8:	lea    rcx,[rbp-0x78]
   1400201ac:	call   0x140005154
   1400201b1:	nop
   1400201b2:	mov    WORD PTR [rbp-0x50],di
   1400201b6:	mov    DWORD PTR [rbp-0x4c],edi
   1400201b9:	mov    BYTE PTR [rbp-0x48],dil
   1400201bd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400201c2:	jb     0x1400201c9
   1400201c4:	mov    rax,QWORD PTR [rbx]
   1400201c7:	jmp    0x1400201cc
   1400201c9:	mov    rax,rbx
   1400201cc:	mov    QWORD PTR [rbp-0x40],rax
   1400201d0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400201d5:	jb     0x1400201dc
   1400201d7:	mov    rcx,QWORD PTR [rbx]
   1400201da:	jmp    0x1400201df
   1400201dc:	mov    rcx,rbx
   1400201df:	add    rcx,QWORD PTR [rbx+0x10]
   1400201e3:	mov    QWORD PTR [rbp-0x38],rcx
   1400201e7:	lea    rdx,[rsp+0x60]
   1400201ec:	lea    rcx,[rbp-0x30]
   1400201f0:	call   0x140020c38
   1400201f5:	nop
   1400201f6:	lea    rdx,[rbp+0x30]
   1400201fa:	lea    rcx,[rbp-0x40]
   1400201fe:	call   0x14002119c
   140020203:	nop
   140020204:	mov    ebx,0x1
   140020209:	lea    rdx,[rbp+0xd0]
   140020210:	lea    rcx,[rbp-0x40]
   140020214:	call   0x140021278
   140020219:	mov    r11,rax
   14002021c:	or     esi,ebx
   14002021e:	mov    rcx,QWORD PTR [rsp+0x40]
   140020223:	mov    dl,BYTE PTR [rbp+0xa0]
   140020229:	cmp    BYTE PTR [rax+0x70],0x0
   14002022d:	je     0x14002024f
   14002022f:	test   dl,dl
   140020231:	je     0x14002024f
   140020233:	mov    rax,QWORD PTR [rbp+0x90]
   14002023a:	cmp    QWORD PTR [r11+0x60],rax
   14002023e:	jne    0x140020255
   140020240:	mov    rax,QWORD PTR [rbp+0x98]
   140020247:	cmp    QWORD PTR [r11+0x68],rax
   14002024b:	je     0x14002025d
   14002024d:	jmp    0x140020255
   14002024f:	cmp    BYTE PTR [r11+0x70],dl
   140020253:	je     0x14002025d
   140020255:	mov    eax,r14d
   140020258:	cmp    rax,rcx
   14002025b:	jb     0x14002025f
   14002025d:	xor    bl,bl
   14002025f:	test   sil,0x1
   140020263:	je     0x140020279
   140020265:	and    esi,0xfffffffe
   140020268:	lea    rcx,[rbp+0xd0]
   14002026f:	call   0x140020838
   140020274:	mov    rcx,QWORD PTR [rsp+0x40]
   140020279:	test   bl,bl
   14002027b:	je     0x140020324
   140020281:	cmp    rcx,rdi
   140020284:	jbe    0x140020316
   14002028a:	lea    rax,[rsp+0x30]
   14002028f:	cmp    QWORD PTR [rsp+0x48],0x10
   140020295:	cmovae rax,QWORD PTR [rsp+0x30]
   14002029b:	cmp    BYTE PTR [rax+rdi*1],0x64
   14002029f:	je     0x1400202d2
   1400202a1:	cmp    BYTE PTR [rax+rdi*1],0x6d
   1400202a5:	je     0x1400202bf
   1400202a7:	cmp    BYTE PTR [rax+rdi*1],0x79
   1400202ab:	jne    0x1400202e2
   1400202ad:	lea    rcx,[rbp+0xa8]
   1400202b4:	call   0x1400218c0
   1400202b9:	movzx  r13d,ax
   1400202bd:	jmp    0x1400202e2
   1400202bf:	lea    rcx,[rbp+0xa8]
   1400202c6:	call   0x140021a4c
   1400202cb:	mov    WORD PTR [rsp+0x20],ax
   1400202d0:	jmp    0x1400202e2
   1400202d2:	lea    rcx,[rbp+0xa8]
   1400202d9:	call   0x1400218c0
   1400202de:	movzx  r12d,ax
   1400202e2:	lea    r9,[rbp+0xa8]
   1400202e9:	mov    r8,QWORD PTR [rbp+0x98]
   1400202f0:	lea    rdx,[rbp+0x90]
   1400202f7:	lea    rcx,[rbp+0x30]
   1400202fb:	call   0x140021dc4
   140020300:	mov    BYTE PTR [rbp+0xa0],al
   140020306:	mov    ebx,0x1
   14002030b:	add    r14d,ebx
   14002030e:	add    rdi,rbx
   140020311:	jmp    0x140020209
   140020316:	lea    rcx,[rip+0x30613]        # 0x140050930
   14002031d:	call   QWORD PTR [rip+0x2928d]        # 0x1400495b0
   140020323:	nop
   140020324:	lea    rcx,[rbp+0x30]
   140020328:	call   0x140020838
   14002032d:	movzx  r11d,r12w
   140020331:	mov    ebx,0x1
   140020336:	add    r11d,ebx
   140020339:	cmp    r11d,0x2
   14002033d:	jge    0x140020345
   14002033f:	call   0x14001fed4
   140020344:	int3   
   140020345:	cmp    r12w,0x1f
   14002034a:	jbe    0x140020352
   14002034c:	call   0x14001fed4
   140020351:	int3   
   140020352:	mov    WORD PTR [rsp+0x24],bx
   140020357:	movzx  edx,WORD PTR [rsp+0x20]
   14002035c:	lea    rcx,[rsp+0x24]
   140020361:	call   0x14001fe30
   140020366:	movzx  r11d,r13w
   14002036a:	add    r11d,ebx
   14002036d:	cmp    r11d,0x579
   140020374:	jge    0x14002037c
   140020376:	call   0x14001ffb4
   14002037b:	int3   
   14002037c:	mov    eax,0x2710
   140020381:	cmp    r13w,ax
   140020385:	jbe    0x14002038d
   140020387:	call   0x14001ffb4
   14002038c:	int3   
   14002038d:	movzx  r9d,r12w
   140020391:	movzx  r8d,WORD PTR [rsp+0x24]
   140020397:	movzx  edx,r13w
   14002039b:	mov    rcx,r15
   14002039e:	call   0x14001d4dc
   1400203a3:	nop
   1400203a4:	cmp    QWORD PTR [rbp+0x10],0x10
   1400203a9:	jb     0x1400203b5
   1400203ab:	mov    rcx,QWORD PTR [rbp-0x8]
   1400203af:	call   QWORD PTR [rip+0x292c3]        # 0x140049678
   1400203b5:	mov    edi,0xf
   1400203ba:	mov    QWORD PTR [rbp+0x10],rdi
   1400203be:	xor    ebx,ebx
   1400203c0:	mov    QWORD PTR [rbp+0x8],rbx
   1400203c4:	mov    BYTE PTR [rbp-0x8],bl
   1400203c7:	cmp    QWORD PTR [rbp-0x18],0x10
   1400203cc:	jb     0x1400203d8
   1400203ce:	mov    rcx,QWORD PTR [rbp-0x30]
   1400203d2:	call   QWORD PTR [rip+0x292a0]        # 0x140049678
   1400203d8:	mov    QWORD PTR [rbp-0x18],rdi
   1400203dc:	mov    QWORD PTR [rbp-0x20],rbx
   1400203e0:	mov    BYTE PTR [rbp-0x30],bl
   1400203e3:	cmp    QWORD PTR [rbp-0x60],0x10
   1400203e8:	jb     0x1400203f4
   1400203ea:	mov    rcx,QWORD PTR [rbp-0x78]
   1400203ee:	call   QWORD PTR [rip+0x29284]        # 0x140049678
   1400203f4:	mov    QWORD PTR [rbp-0x60],rdi
   1400203f8:	mov    QWORD PTR [rbp-0x68],rbx
   1400203fc:	mov    BYTE PTR [rbp-0x78],bl
   1400203ff:	cmp    QWORD PTR [rsp+0x78],0x10
   140020405:	jb     0x140020412
   140020407:	mov    rcx,QWORD PTR [rsp+0x60]
   14002040c:	call   QWORD PTR [rip+0x29266]        # 0x140049678
   140020412:	mov    QWORD PTR [rsp+0x78],rdi
   140020417:	mov    QWORD PTR [rsp+0x70],rbx
   14002041c:	mov    BYTE PTR [rsp+0x60],bl
   140020420:	cmp    QWORD PTR [rsp+0x48],0x10
   140020426:	jb     0x140020433
   140020428:	mov    rcx,QWORD PTR [rsp+0x30]
   14002042d:	call   QWORD PTR [rip+0x29245]        # 0x140049678
   140020433:	mov    rax,r15
   140020436:	mov    rcx,QWORD PTR [rbp+0x178]
   14002043d:	xor    rcx,rsp
   140020440:	call   0x14002b100
   140020445:	mov    rbx,QWORD PTR [rsp+0x2d0]
   14002044d:	add    rsp,0x280
   140020454:	pop    r15
   140020456:	pop    r14
   140020458:	pop    r13
   14002045a:	pop    r12
   14002045c:	pop    rdi
   14002045d:	pop    rsi
   14002045e:	pop    rbp
   14002045f:	ret    
   140020460:	mov    rax,rsp
   140020463:	push   rbp
   140020464:	lea    rbp,[rax-0xa8]
   14002046b:	sub    rsp,0x1a0
   140020472:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14002047a:	mov    QWORD PTR [rax+0x8],rbx
   14002047e:	mov    QWORD PTR [rax+0x10],rsi
   140020482:	mov    QWORD PTR [rax+0x18],rdi
   140020486:	mov    QWORD PTR [rax+0x20],r12
   14002048a:	mov    r9,rdx
   14002048d:	xor    r12d,r12d
   140020490:	mov    QWORD PTR [rsp+0x40],r12
   140020495:	mov    QWORD PTR [rsp+0x48],r12
   14002049a:	mov    QWORD PTR [rsp+0x50],r12
   14002049f:	mov    QWORD PTR [rsp+0x60],r12
   1400204a4:	mov    QWORD PTR [rsp+0x68],r12
   1400204a9:	mov    QWORD PTR [rsp+0x70],r12
   1400204ae:	mov    BYTE PTR [rsp+0x78],r12b
   1400204b3:	mov    QWORD PTR [rbp-0x80],r12
   1400204b7:	mov    QWORD PTR [rbp-0x78],r12
   1400204bb:	mov    DWORD PTR [rbp-0x70],r12d
   1400204bf:	mov    BYTE PTR [rbp-0x6c],0x1
   1400204c3:	cmp    QWORD PTR [rcx+0x18],0x10
   1400204c8:	jb     0x1400204cf
   1400204ca:	mov    rdx,QWORD PTR [rcx]
   1400204cd:	jmp    0x1400204d2
   1400204cf:	mov    rdx,rcx
   1400204d2:	mov    rax,QWORD PTR [rcx+0x10]
   1400204d6:	lea    r8,[rdx+rax*1]
   1400204da:	cmp    QWORD PTR [rcx+0x18],0x10
   1400204df:	jb     0x1400204e4
   1400204e1:	mov    rcx,QWORD PTR [rcx]
   1400204e4:	mov    QWORD PTR [rsp+0x30],rcx
   1400204e9:	mov    DWORD PTR [rsp+0x28],0x400
   1400204f1:	mov    QWORD PTR [rsp+0x20],r9
   1400204f6:	lea    r9,[rsp+0x40]
   1400204fb:	mov    rdx,rcx
   1400204fe:	lea    rcx,[rbp-0x50]
   140020502:	call   0x1400221ac
   140020507:	nop
   140020508:	lea    rcx,[rbp-0x50]
   14002050c:	call   0x1400419a0
   140020511:	mov    sil,al
   140020514:	mov    rbx,QWORD PTR [rbp+0x68]
   140020518:	test   rbx,rbx
   14002051b:	je     0x140020545
   14002051d:	mov    rdi,QWORD PTR [rbp+0x70]
   140020521:	cmp    rbx,rdi
   140020524:	je     0x14002053c
   140020526:	lea    rcx,[rbx+0x10]
   14002052a:	call   0x140020e68
   14002052f:	add    rbx,0x70
   140020533:	cmp    rbx,rdi
   140020536:	jne    0x140020526
   140020538:	mov    rbx,QWORD PTR [rbp+0x68]
   14002053c:	mov    rcx,rbx
   14002053f:	call   QWORD PTR [rip+0x29133]        # 0x140049678
   140020545:	mov    QWORD PTR [rbp+0x68],r12
   140020549:	mov    QWORD PTR [rbp+0x70],r12
   14002054d:	mov    QWORD PTR [rbp+0x78],r12
   140020551:	mov    rcx,QWORD PTR [rbp+0x40]
   140020555:	test   rcx,rcx
   140020558:	je     0x140020561
   14002055a:	mov    rax,QWORD PTR [rbp+0x38]
   14002055e:	mov    QWORD PTR [rax],rcx
   140020561:	mov    rbx,QWORD PTR [rbp-0x48]
   140020565:	test   rbx,rbx
   140020568:	je     0x14002057c
   14002056a:	mov    rcx,rbx
   14002056d:	call   0x140020e68
   140020572:	mov    rcx,rbx
   140020575:	call   QWORD PTR [rip+0x290fd]        # 0x140049678
   14002057b:	nop
   14002057c:	lea    rcx,[rsp+0x40]
   140020581:	call   0x140020e68
   140020586:	mov    al,sil
   140020589:	lea    r11,[rsp+0x1a0]
   140020591:	mov    rbx,QWORD PTR [r11+0x10]
   140020595:	mov    rsi,QWORD PTR [r11+0x18]
   140020599:	mov    rdi,QWORD PTR [r11+0x20]
   14002059d:	mov    r12,QWORD PTR [r11+0x28]
   1400205a1:	mov    rsp,r11
   1400205a4:	pop    rbp
   1400205a5:	ret    
   1400205a6:	int3   
   1400205a7:	int3   
   1400205a8:	sub    rsp,0xb8
   1400205af:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400205b8:	mov    rdx,rcx
   1400205bb:	lea    rcx,[rsp+0x70]
   1400205c0:	call   0x140021cfc
   1400205c5:	nop
   1400205c6:	mov    rdx,rax
   1400205c9:	lea    rcx,[rsp+0x28]
   1400205ce:	call   0x140021d4c
   1400205d3:	lea    rdx,[rip+0x4368e]        # 0x140063c68
   1400205da:	lea    rcx,[rsp+0x28]
   1400205df:	call   0x14002b560
   1400205e4:	int3   
   1400205e5:	int3   
   1400205e6:	int3   
   1400205e7:	int3   
   1400205e8:	rex push rbx
   1400205ea:	sub    rsp,0x20
   1400205ee:	mov    rbx,rcx
   1400205f1:	call   0x140020620
   1400205f6:	lea    rax,[rip+0x314a3]        # 0x140051aa0
   1400205fd:	mov    QWORD PTR [rbx],rax
   140020600:	lea    rax,[rip+0x314b1]        # 0x140051ab8
   140020607:	mov    QWORD PTR [rbx+0x18],rax
   14002060b:	lea    rax,[rip+0x314b6]        # 0x140051ac8
   140020612:	mov    QWORD PTR [rbx+0x40],rax
   140020616:	mov    rax,rbx
   140020619:	add    rsp,0x20
   14002061d:	pop    rbx
   14002061e:	ret    
   14002061f:	int3   
   140020620:	mov    QWORD PTR [rsp+0x8],rcx
   140020625:	push   rdi
   140020626:	sub    rsp,0x30
   14002062a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020633:	mov    QWORD PTR [rsp+0x48],rbx
   140020638:	mov    rbx,rdx
   14002063b:	mov    rdi,rcx
   14002063e:	call   QWORD PTR [rip+0x28f9c]        # 0x1400495e0
   140020644:	lea    r11,[rip+0x313fd]        # 0x140051a48
   14002064b:	mov    QWORD PTR [rdi],r11
   14002064e:	test   rbx,rbx
   140020651:	je     0x140020657
   140020653:	add    rbx,0x18
   140020657:	lea    rax,[rip+0x29c32]        # 0x14004a290
   14002065e:	mov    QWORD PTR [rdi+0x18],rax
   140020662:	mov    rcx,QWORD PTR [rbx+0x8]
   140020666:	mov    QWORD PTR [rdi+0x20],rcx
   14002066a:	test   rcx,rcx
   14002066d:	je     0x140020675
   14002066f:	mov    rax,QWORD PTR [rcx]
   140020672:	call   QWORD PTR [rax+0x18]
   140020675:	mov    rax,QWORD PTR [rbx+0x10]
   140020679:	mov    QWORD PTR [rdi+0x28],rax
   14002067d:	mov    rax,QWORD PTR [rbx+0x18]
   140020681:	mov    QWORD PTR [rdi+0x30],rax
   140020685:	mov    eax,DWORD PTR [rbx+0x20]
   140020688:	mov    DWORD PTR [rdi+0x38],eax
   14002068b:	lea    rax,[rip+0x313e6]        # 0x140051a78
   140020692:	mov    QWORD PTR [rdi],rax
   140020695:	lea    rax,[rip+0x313f4]        # 0x140051a90
   14002069c:	mov    QWORD PTR [rdi+0x18],rax
   1400206a0:	mov    rax,rdi
   1400206a3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400206a8:	add    rsp,0x30
   1400206ac:	pop    rdi
   1400206ad:	ret    
   1400206ae:	int3   
   1400206af:	int3   
   1400206b0:	rex push rbx
   1400206b2:	sub    rsp,0x20
   1400206b6:	mov    rbx,rcx
   1400206b9:	call   QWORD PTR [rip+0x28f21]        # 0x1400495e0
   1400206bf:	lea    r11,[rip+0x31382]        # 0x140051a48
   1400206c6:	mov    QWORD PTR [rbx],r11
   1400206c9:	mov    rax,rbx
   1400206cc:	add    rsp,0x20
   1400206d0:	pop    rbx
   1400206d1:	ret    
   1400206d2:	int3   
   1400206d3:	int3   
   1400206d4:	rex push rbx
   1400206d6:	sub    rsp,0x20
   1400206da:	mov    rbx,rcx
   1400206dd:	call   QWORD PTR [rip+0x28efd]        # 0x1400495e0
   1400206e3:	lea    r11,[rip+0x29bb6]        # 0x14004a2a0
   1400206ea:	mov    QWORD PTR [rbx],r11
   1400206ed:	mov    rax,rbx
   1400206f0:	add    rsp,0x20
   1400206f4:	pop    rbx
   1400206f5:	ret    
   1400206f6:	int3   
   1400206f7:	int3   
   1400206f8:	rex push rbx
   1400206fa:	sub    rsp,0x20
   1400206fe:	mov    rbx,rcx
   140020701:	call   QWORD PTR [rip+0x28ed9]        # 0x1400495e0
   140020707:	lea    r11,[rip+0x29ae2]        # 0x14004a1f0
   14002070e:	mov    QWORD PTR [rbx],r11
   140020711:	mov    rax,rbx
   140020714:	add    rsp,0x20
   140020718:	pop    rbx
   140020719:	ret    
   14002071a:	int3   
   14002071b:	int3   
   14002071c:	rex push rbx
   14002071e:	sub    rsp,0x20
   140020722:	mov    rbx,rcx
   140020725:	call   0x140020754
   14002072a:	lea    rax,[rip+0x2da8f]        # 0x14004e1c0
   140020731:	mov    QWORD PTR [rbx],rax
   140020734:	lea    rax,[rip+0x2da75]        # 0x14004e1b0
   14002073b:	mov    QWORD PTR [rbx+0x18],rax
   14002073f:	lea    rax,[rip+0x2da4a]        # 0x14004e190
   140020746:	mov    QWORD PTR [rbx+0x40],rax
   14002074a:	mov    rax,rbx
   14002074d:	add    rsp,0x20
   140020751:	pop    rbx
   140020752:	ret    
   140020753:	int3   
   140020754:	mov    QWORD PTR [rsp+0x8],rcx
   140020759:	push   rdi
   14002075a:	sub    rsp,0x30
   14002075e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020767:	mov    QWORD PTR [rsp+0x48],rbx
   14002076c:	mov    rbx,rdx
   14002076f:	mov    rdi,rcx
   140020772:	call   QWORD PTR [rip+0x28e68]        # 0x1400495e0
   140020778:	lea    r11,[rip+0x2d6c9]        # 0x14004de48
   14002077f:	mov    QWORD PTR [rdi],r11
   140020782:	test   rbx,rbx
   140020785:	je     0x14002078b
   140020787:	add    rbx,0x18
   14002078b:	lea    rax,[rip+0x29afe]        # 0x14004a290
   140020792:	mov    QWORD PTR [rdi+0x18],rax
   140020796:	mov    rcx,QWORD PTR [rbx+0x8]
   14002079a:	mov    QWORD PTR [rdi+0x20],rcx
   14002079e:	test   rcx,rcx
   1400207a1:	je     0x1400207a9
   1400207a3:	mov    rax,QWORD PTR [rcx]
   1400207a6:	call   QWORD PTR [rax+0x18]
   1400207a9:	mov    rax,QWORD PTR [rbx+0x10]
   1400207ad:	mov    QWORD PTR [rdi+0x28],rax
   1400207b1:	mov    rax,QWORD PTR [rbx+0x18]
   1400207b5:	mov    QWORD PTR [rdi+0x30],rax
   1400207b9:	mov    eax,DWORD PTR [rbx+0x20]
   1400207bc:	mov    DWORD PTR [rdi+0x38],eax
   1400207bf:	lea    rax,[rip+0x2d7f2]        # 0x14004dfb8
   1400207c6:	mov    QWORD PTR [rdi],rax
   1400207c9:	lea    rax,[rip+0x2d7d8]        # 0x14004dfa8
   1400207d0:	mov    QWORD PTR [rdi+0x18],rax
   1400207d4:	mov    rax,rdi
   1400207d7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400207dc:	add    rsp,0x30
   1400207e0:	pop    rdi
   1400207e1:	ret    
   1400207e2:	int3   
   1400207e3:	int3   
   1400207e4:	rex push rbx
   1400207e6:	sub    rsp,0x20
   1400207ea:	cmp    QWORD PTR [rcx+0x50],0x10
   1400207ef:	mov    rbx,rcx
   1400207f2:	jb     0x1400207fe
   1400207f4:	mov    rcx,QWORD PTR [rcx+0x38]
   1400207f8:	call   QWORD PTR [rip+0x28e7a]        # 0x140049678
   1400207fe:	and    QWORD PTR [rbx+0x48],0x0
   140020803:	mov    QWORD PTR [rbx+0x50],0xf
   14002080b:	mov    BYTE PTR [rbx+0x38],0x0
   14002080f:	cmp    QWORD PTR [rbx+0x28],0x10
   140020814:	jb     0x140020820
   140020816:	mov    rcx,QWORD PTR [rbx+0x10]
   14002081a:	call   QWORD PTR [rip+0x28e58]        # 0x140049678
   140020820:	and    QWORD PTR [rbx+0x20],0x0
   140020825:	mov    QWORD PTR [rbx+0x28],0xf
   14002082d:	mov    BYTE PTR [rbx+0x10],0x0
   140020831:	add    rsp,0x20
   140020835:	pop    rbx
   140020836:	ret    
   140020837:	int3   
   140020838:	mov    QWORD PTR [rsp+0x8],rbx
   14002083d:	push   rsi
   14002083e:	sub    rsp,0x20
   140020842:	cmp    QWORD PTR [rcx+0x90],0x10
   14002084a:	mov    rbx,rcx
   14002084d:	jb     0x140020859
   14002084f:	mov    rcx,QWORD PTR [rcx+0x78]
   140020853:	call   QWORD PTR [rip+0x28e1f]        # 0x140049678
   140020859:	and    QWORD PTR [rbx+0x88],0x0
   140020861:	mov    esi,0xf
   140020866:	mov    QWORD PTR [rbx+0x90],rsi
   14002086d:	mov    BYTE PTR [rbx+0x78],0x0
   140020871:	cmp    QWORD PTR [rbx+0x40],0x10
   140020876:	jb     0x140020882
   140020878:	mov    rcx,QWORD PTR [rbx+0x28]
   14002087c:	call   QWORD PTR [rip+0x28df6]        # 0x140049678
   140020882:	and    QWORD PTR [rbx+0x38],0x0
   140020887:	mov    QWORD PTR [rbx+0x40],rsi
   14002088b:	mov    BYTE PTR [rbx+0x28],0x0
   14002088f:	cmp    QWORD PTR [rbx+0x18],0x10
   140020894:	jb     0x14002089f
   140020896:	mov    rcx,QWORD PTR [rbx]
   140020899:	call   QWORD PTR [rip+0x28dd9]        # 0x140049678
   14002089f:	and    QWORD PTR [rbx+0x10],0x0
   1400208a4:	mov    QWORD PTR [rbx+0x18],rsi
   1400208a8:	mov    BYTE PTR [rbx],0x0
   1400208ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400208b0:	add    rsp,0x20
   1400208b4:	pop    rsi
   1400208b5:	ret    
   1400208b6:	int3   
   1400208b7:	int3   
   1400208b8:	rex push rbx
   1400208ba:	sub    rsp,0x20
   1400208be:	mov    rbx,rcx
   1400208c1:	call   0x1400208f0
   1400208c6:	lea    rax,[rip+0x31243]        # 0x140051b10
   1400208cd:	mov    QWORD PTR [rbx],rax
   1400208d0:	lea    rax,[rip+0x31251]        # 0x140051b28
   1400208d7:	mov    QWORD PTR [rbx+0x18],rax
   1400208db:	lea    rax,[rip+0x31256]        # 0x140051b38
   1400208e2:	mov    QWORD PTR [rbx+0x40],rax
   1400208e6:	mov    rax,rbx
   1400208e9:	add    rsp,0x20
   1400208ed:	pop    rbx
   1400208ee:	ret    
   1400208ef:	int3   
   1400208f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400208f5:	push   rdi
   1400208f6:	sub    rsp,0x30
   1400208fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020903:	mov    QWORD PTR [rsp+0x48],rbx
   140020908:	mov    rbx,rdx
   14002090b:	mov    rdi,rcx
   14002090e:	call   QWORD PTR [rip+0x28ccc]        # 0x1400495e0
   140020914:	lea    r11,[rip+0x31145]        # 0x140051a60
   14002091b:	mov    QWORD PTR [rdi],r11
   14002091e:	test   rbx,rbx
   140020921:	je     0x140020927
   140020923:	add    rbx,0x18
   140020927:	lea    rax,[rip+0x29962]        # 0x14004a290
   14002092e:	mov    QWORD PTR [rdi+0x18],rax
   140020932:	mov    rcx,QWORD PTR [rbx+0x8]
   140020936:	mov    QWORD PTR [rdi+0x20],rcx
   14002093a:	test   rcx,rcx
   14002093d:	je     0x140020945
   14002093f:	mov    rax,QWORD PTR [rcx]
   140020942:	call   QWORD PTR [rax+0x18]
   140020945:	mov    rax,QWORD PTR [rbx+0x10]
   140020949:	mov    QWORD PTR [rdi+0x28],rax
   14002094d:	mov    rax,QWORD PTR [rbx+0x18]
   140020951:	mov    QWORD PTR [rdi+0x30],rax
   140020955:	mov    eax,DWORD PTR [rbx+0x20]
   140020958:	mov    DWORD PTR [rdi+0x38],eax
   14002095b:	lea    rax,[rip+0x31186]        # 0x140051ae8
   140020962:	mov    QWORD PTR [rdi],rax
   140020965:	lea    rax,[rip+0x31194]        # 0x140051b00
   14002096c:	mov    QWORD PTR [rdi+0x18],rax
   140020970:	mov    rax,rdi
   140020973:	mov    rbx,QWORD PTR [rsp+0x48]
   140020978:	add    rsp,0x30
   14002097c:	pop    rdi
   14002097d:	ret    
   14002097e:	int3   
   14002097f:	int3   
   140020980:	rex push rbx
   140020982:	sub    rsp,0x20
   140020986:	mov    rbx,rcx
   140020989:	call   QWORD PTR [rip+0x28c51]        # 0x1400495e0
   14002098f:	lea    r11,[rip+0x310ca]        # 0x140051a60
   140020996:	mov    QWORD PTR [rbx],r11
   140020999:	mov    rax,rbx
   14002099c:	add    rsp,0x20
   1400209a0:	pop    rbx
   1400209a1:	ret    
   1400209a2:	int3   
   1400209a3:	int3   
   1400209a4:	rex push rbx
   1400209a6:	sub    rsp,0x20
   1400209aa:	mov    rbx,rcx
   1400209ad:	call   0x1400209dc
   1400209b2:	lea    rax,[rip+0x29997]        # 0x14004a350
   1400209b9:	mov    QWORD PTR [rbx],rax
   1400209bc:	lea    rax,[rip+0x2997d]        # 0x14004a340
   1400209c3:	mov    QWORD PTR [rbx+0x18],rax
   1400209c7:	lea    rax,[rip+0x29952]        # 0x14004a320
   1400209ce:	mov    QWORD PTR [rbx+0x40],rax
   1400209d2:	mov    rax,rbx
   1400209d5:	add    rsp,0x20
   1400209d9:	pop    rbx
   1400209da:	ret    
   1400209db:	int3   
   1400209dc:	mov    QWORD PTR [rsp+0x8],rcx
   1400209e1:	push   rdi
   1400209e2:	sub    rsp,0x30
   1400209e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400209ef:	mov    QWORD PTR [rsp+0x48],rbx
   1400209f4:	mov    rbx,rdx
   1400209f7:	mov    rdi,rcx
   1400209fa:	call   QWORD PTR [rip+0x28be0]        # 0x1400495e0
   140020a00:	lea    r11,[rip+0x298b1]        # 0x14004a2b8
   140020a07:	mov    QWORD PTR [rdi],r11
   140020a0a:	test   rbx,rbx
   140020a0d:	je     0x140020a13
   140020a0f:	add    rbx,0x18
   140020a13:	lea    rax,[rip+0x29876]        # 0x14004a290
   140020a1a:	mov    QWORD PTR [rdi+0x18],rax
   140020a1e:	mov    rcx,QWORD PTR [rbx+0x8]
   140020a22:	mov    QWORD PTR [rdi+0x20],rcx
   140020a26:	test   rcx,rcx
   140020a29:	je     0x140020a31
   140020a2b:	mov    rax,QWORD PTR [rcx]
   140020a2e:	call   QWORD PTR [rax+0x18]
   140020a31:	mov    rax,QWORD PTR [rbx+0x10]
   140020a35:	mov    QWORD PTR [rdi+0x28],rax
   140020a39:	mov    rax,QWORD PTR [rbx+0x18]
   140020a3d:	mov    QWORD PTR [rdi+0x30],rax
   140020a41:	mov    eax,DWORD PTR [rbx+0x20]
   140020a44:	mov    DWORD PTR [rdi+0x38],eax
   140020a47:	lea    rax,[rip+0x29892]        # 0x14004a2e0
   140020a4e:	mov    QWORD PTR [rdi],rax
   140020a51:	lea    rax,[rip+0x29878]        # 0x14004a2d0
   140020a58:	mov    QWORD PTR [rdi+0x18],rax
   140020a5c:	mov    rax,rdi
   140020a5f:	mov    rbx,QWORD PTR [rsp+0x48]
   140020a64:	add    rsp,0x30
   140020a68:	pop    rdi
   140020a69:	ret    
   140020a6a:	int3   
   140020a6b:	int3   
   140020a6c:	rex push rbx
   140020a6e:	sub    rsp,0x20
   140020a72:	mov    rbx,rcx
   140020a75:	call   QWORD PTR [rip+0x28b65]        # 0x1400495e0
   140020a7b:	lea    r11,[rip+0x29836]        # 0x14004a2b8
   140020a82:	mov    QWORD PTR [rbx],r11
   140020a85:	mov    rax,rbx
   140020a88:	add    rsp,0x20
   140020a8c:	pop    rbx
   140020a8d:	ret    
   140020a8e:	int3   
   140020a8f:	int3   
   140020a90:	mov    QWORD PTR [rsp+0x8],rbx
   140020a95:	push   rdi
   140020a96:	sub    rsp,0x20
   140020a9a:	lea    rax,[rip+0x29767]        # 0x14004a208
   140020aa1:	mov    rbx,rcx
   140020aa4:	mov    edi,edx
   140020aa6:	mov    QWORD PTR [rcx+0x40],rax
   140020aaa:	lea    rax,[rip+0x30fc7]        # 0x140051a78
   140020ab1:	mov    QWORD PTR [rcx],rax
   140020ab4:	lea    rax,[rip+0x297d5]        # 0x14004a290
   140020abb:	mov    QWORD PTR [rcx+0x18],rax
   140020abf:	mov    rcx,QWORD PTR [rcx+0x20]
   140020ac3:	test   rcx,rcx
   140020ac6:	je     0x140020ad7
   140020ac8:	mov    rax,QWORD PTR [rcx]
   140020acb:	call   QWORD PTR [rax+0x20]
   140020ace:	test   al,al
   140020ad0:	je     0x140020ad7
   140020ad2:	and    QWORD PTR [rbx+0x20],0x0
   140020ad7:	mov    rcx,rbx
   140020ada:	call   QWORD PTR [rip+0x28db8]        # 0x140049898
   140020ae0:	test   dil,0x1
   140020ae4:	je     0x140020aef
   140020ae6:	mov    rcx,rbx
   140020ae9:	call   QWORD PTR [rip+0x28b89]        # 0x140049678
   140020aef:	mov    rax,rbx
   140020af2:	mov    rbx,QWORD PTR [rsp+0x30]
   140020af7:	add    rsp,0x20
   140020afb:	pop    rdi
   140020afc:	ret    
   140020afd:	int3   
   140020afe:	int3   
   140020aff:	int3   
   140020b00:	mov    QWORD PTR [rsp+0x8],rbx
   140020b05:	push   rdi
   140020b06:	sub    rsp,0x20
   140020b0a:	lea    rax,[rip+0x30f67]        # 0x140051a78
   140020b11:	mov    rbx,rcx
   140020b14:	mov    edi,edx
   140020b16:	mov    QWORD PTR [rcx],rax
   140020b19:	lea    rax,[rip+0x29770]        # 0x14004a290
   140020b20:	mov    QWORD PTR [rcx+0x18],rax
   140020b24:	mov    rcx,QWORD PTR [rcx+0x20]
   140020b28:	test   rcx,rcx
   140020b2b:	je     0x140020b3c
   140020b2d:	mov    rax,QWORD PTR [rcx]
   140020b30:	call   QWORD PTR [rax+0x20]
   140020b33:	test   al,al
   140020b35:	je     0x140020b3c
   140020b37:	and    QWORD PTR [rbx+0x20],0x0
   140020b3c:	mov    rcx,rbx
   140020b3f:	call   QWORD PTR [rip+0x28d53]        # 0x140049898
   140020b45:	test   dil,0x1
   140020b49:	je     0x140020b54
   140020b4b:	mov    rcx,rbx
   140020b4e:	call   QWORD PTR [rip+0x28b24]        # 0x140049678
   140020b54:	mov    rax,rbx
   140020b57:	mov    rbx,QWORD PTR [rsp+0x30]
   140020b5c:	add    rsp,0x20
   140020b60:	pop    rdi
   140020b61:	ret    
   140020b62:	int3   
   140020b63:	int3   
   140020b64:	mov    QWORD PTR [rsp+0x8],rbx
   140020b69:	push   rdi
   140020b6a:	sub    rsp,0x20
   140020b6e:	lea    rax,[rip+0x29693]        # 0x14004a208
   140020b75:	mov    rbx,rcx
   140020b78:	mov    edi,edx
   140020b7a:	mov    QWORD PTR [rcx+0x40],rax
   140020b7e:	lea    rax,[rip+0x2d433]        # 0x14004dfb8
   140020b85:	mov    QWORD PTR [rcx],rax
   140020b88:	lea    rax,[rip+0x29701]        # 0x14004a290
   140020b8f:	mov    QWORD PTR [rcx+0x18],rax
   140020b93:	mov    rcx,QWORD PTR [rcx+0x20]
   140020b97:	test   rcx,rcx
   140020b9a:	je     0x140020bab
   140020b9c:	mov    rax,QWORD PTR [rcx]
   140020b9f:	call   QWORD PTR [rax+0x20]
   140020ba2:	test   al,al
   140020ba4:	je     0x140020bab
   140020ba6:	and    QWORD PTR [rbx+0x20],0x0
   140020bab:	mov    rcx,rbx
   140020bae:	call   QWORD PTR [rip+0x28ce4]        # 0x140049898
   140020bb4:	test   dil,0x1
   140020bb8:	je     0x140020bc3
   140020bba:	mov    rcx,rbx
   140020bbd:	call   QWORD PTR [rip+0x28ab5]        # 0x140049678
   140020bc3:	mov    rax,rbx
   140020bc6:	mov    rbx,QWORD PTR [rsp+0x30]
   140020bcb:	add    rsp,0x20
   140020bcf:	pop    rdi
   140020bd0:	ret    
   140020bd1:	int3   
   140020bd2:	int3   
   140020bd3:	int3   
   140020bd4:	mov    QWORD PTR [rsp+0x8],rbx
   140020bd9:	push   rdi
   140020bda:	sub    rsp,0x20
   140020bde:	lea    rax,[rip+0x2d3d3]        # 0x14004dfb8
   140020be5:	mov    rbx,rcx
   140020be8:	mov    edi,edx
   140020bea:	mov    QWORD PTR [rcx],rax
   140020bed:	lea    rax,[rip+0x2969c]        # 0x14004a290
   140020bf4:	mov    QWORD PTR [rcx+0x18],rax
   140020bf8:	mov    rcx,QWORD PTR [rcx+0x20]
   140020bfc:	test   rcx,rcx
   140020bff:	je     0x140020c10
   140020c01:	mov    rax,QWORD PTR [rcx]
   140020c04:	call   QWORD PTR [rax+0x20]
   140020c07:	test   al,al
   140020c09:	je     0x140020c10
   140020c0b:	and    QWORD PTR [rbx+0x20],0x0
   140020c10:	mov    rcx,rbx
   140020c13:	call   QWORD PTR [rip+0x28c7f]        # 0x140049898
   140020c19:	test   dil,0x1
   140020c1d:	je     0x140020c28
   140020c1f:	mov    rcx,rbx
   140020c22:	call   QWORD PTR [rip+0x28a50]        # 0x140049678
   140020c28:	mov    rax,rbx
   140020c2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140020c30:	add    rsp,0x20
   140020c34:	pop    rdi
   140020c35:	ret    
   140020c36:	int3   
   140020c37:	int3   
   140020c38:	mov    QWORD PTR [rsp+0x8],rcx
   140020c3d:	push   rdi
   140020c3e:	sub    rsp,0x30
   140020c42:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020c4b:	mov    QWORD PTR [rsp+0x48],rbx
   140020c50:	mov    rbx,rdx
   140020c53:	mov    rdi,rcx
   140020c56:	mov    QWORD PTR [rcx+0x18],0xf
   140020c5e:	and    QWORD PTR [rcx+0x10],0x0
   140020c63:	mov    BYTE PTR [rcx],0x0
   140020c66:	or     r9,0xffffffffffffffff
   140020c6a:	xor    r8d,r8d
   140020c6d:	call   0x1400048b8
   140020c72:	nop
   140020c73:	lea    rcx,[rdi+0x28]
   140020c77:	mov    QWORD PTR [rcx+0x18],0xf
   140020c7f:	and    QWORD PTR [rcx+0x10],0x0
   140020c84:	mov    BYTE PTR [rcx],0x0
   140020c87:	lea    rdx,[rbx+0x28]
   140020c8b:	or     r9,0xffffffffffffffff
   140020c8f:	xor    r8d,r8d
   140020c92:	call   0x1400048b8
   140020c97:	mov    r11b,BYTE PTR [rbx+0x50]
   140020c9b:	mov    BYTE PTR [rdi+0x50],r11b
   140020c9f:	mov    al,BYTE PTR [rbx+0x51]
   140020ca2:	mov    BYTE PTR [rdi+0x51],al
   140020ca5:	mov    eax,DWORD PTR [rbx+0x54]
   140020ca8:	mov    DWORD PTR [rdi+0x54],eax
   140020cab:	mov    al,BYTE PTR [rbx+0x58]
   140020cae:	mov    BYTE PTR [rdi+0x58],al
   140020cb1:	mov    rax,rdi
   140020cb4:	mov    rbx,QWORD PTR [rsp+0x48]
   140020cb9:	add    rsp,0x30
   140020cbd:	pop    rdi
   140020cbe:	ret    
   140020cbf:	int3   
   140020cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140020cc5:	push   rdi
   140020cc6:	sub    rsp,0x20
   140020cca:	lea    rax,[rip+0x29537]        # 0x14004a208
   140020cd1:	mov    rbx,rcx
   140020cd4:	mov    edi,edx
   140020cd6:	mov    QWORD PTR [rcx+0x40],rax
   140020cda:	lea    rax,[rip+0x30e07]        # 0x140051ae8
   140020ce1:	mov    QWORD PTR [rcx],rax
   140020ce4:	lea    rax,[rip+0x295a5]        # 0x14004a290
   140020ceb:	mov    QWORD PTR [rcx+0x18],rax
   140020cef:	mov    rcx,QWORD PTR [rcx+0x20]
   140020cf3:	test   rcx,rcx
   140020cf6:	je     0x140020d07
   140020cf8:	mov    rax,QWORD PTR [rcx]
   140020cfb:	call   QWORD PTR [rax+0x20]
   140020cfe:	test   al,al
   140020d00:	je     0x140020d07
   140020d02:	and    QWORD PTR [rbx+0x20],0x0
   140020d07:	mov    rcx,rbx
   140020d0a:	call   QWORD PTR [rip+0x28b88]        # 0x140049898
   140020d10:	test   dil,0x1
   140020d14:	je     0x140020d1f
   140020d16:	mov    rcx,rbx
   140020d19:	call   QWORD PTR [rip+0x28959]        # 0x140049678
   140020d1f:	mov    rax,rbx
   140020d22:	mov    rbx,QWORD PTR [rsp+0x30]
   140020d27:	add    rsp,0x20
   140020d2b:	pop    rdi
   140020d2c:	ret    
   140020d2d:	int3   
   140020d2e:	int3   
   140020d2f:	int3   
   140020d30:	mov    QWORD PTR [rsp+0x8],rbx
   140020d35:	push   rdi
   140020d36:	sub    rsp,0x20
   140020d3a:	lea    rax,[rip+0x30da7]        # 0x140051ae8
   140020d41:	mov    rbx,rcx
   140020d44:	mov    edi,edx
   140020d46:	mov    QWORD PTR [rcx],rax
   140020d49:	lea    rax,[rip+0x29540]        # 0x14004a290
   140020d50:	mov    QWORD PTR [rcx+0x18],rax
   140020d54:	mov    rcx,QWORD PTR [rcx+0x20]
   140020d58:	test   rcx,rcx
   140020d5b:	je     0x140020d6c
   140020d5d:	mov    rax,QWORD PTR [rcx]
   140020d60:	call   QWORD PTR [rax+0x20]
   140020d63:	test   al,al
   140020d65:	je     0x140020d6c
   140020d67:	and    QWORD PTR [rbx+0x20],0x0
   140020d6c:	mov    rcx,rbx
   140020d6f:	call   QWORD PTR [rip+0x28b23]        # 0x140049898
   140020d75:	test   dil,0x1
   140020d79:	je     0x140020d84
   140020d7b:	mov    rcx,rbx
   140020d7e:	call   QWORD PTR [rip+0x288f4]        # 0x140049678
   140020d84:	mov    rax,rbx
   140020d87:	mov    rbx,QWORD PTR [rsp+0x30]
   140020d8c:	add    rsp,0x20
   140020d90:	pop    rdi
   140020d91:	ret    
   140020d92:	int3   
   140020d93:	int3   
   140020d94:	mov    QWORD PTR [rsp+0x8],rbx
   140020d99:	push   rdi
   140020d9a:	sub    rsp,0x20
   140020d9e:	lea    rax,[rip+0x29463]        # 0x14004a208
   140020da5:	mov    rbx,rcx
   140020da8:	mov    edi,edx
   140020daa:	mov    QWORD PTR [rcx+0x40],rax
   140020dae:	lea    rax,[rip+0x2952b]        # 0x14004a2e0
   140020db5:	mov    QWORD PTR [rcx],rax
   140020db8:	lea    rax,[rip+0x294d1]        # 0x14004a290
   140020dbf:	mov    QWORD PTR [rcx+0x18],rax
   140020dc3:	mov    rcx,QWORD PTR [rcx+0x20]
   140020dc7:	test   rcx,rcx
   140020dca:	je     0x140020ddb
   140020dcc:	mov    rax,QWORD PTR [rcx]
   140020dcf:	call   QWORD PTR [rax+0x20]
   140020dd2:	test   al,al
   140020dd4:	je     0x140020ddb
   140020dd6:	and    QWORD PTR [rbx+0x20],0x0
   140020ddb:	mov    rcx,rbx
   140020dde:	call   QWORD PTR [rip+0x28ab4]        # 0x140049898
   140020de4:	test   dil,0x1
   140020de8:	je     0x140020df3
   140020dea:	mov    rcx,rbx
   140020ded:	call   QWORD PTR [rip+0x28885]        # 0x140049678
   140020df3:	mov    rax,rbx
   140020df6:	mov    rbx,QWORD PTR [rsp+0x30]
   140020dfb:	add    rsp,0x20
   140020dff:	pop    rdi
   140020e00:	ret    
   140020e01:	int3   
   140020e02:	int3   
   140020e03:	int3   
   140020e04:	mov    QWORD PTR [rsp+0x8],rbx
   140020e09:	push   rdi
   140020e0a:	sub    rsp,0x20
   140020e0e:	lea    rax,[rip+0x294cb]        # 0x14004a2e0
   140020e15:	mov    rbx,rcx
   140020e18:	mov    edi,edx
   140020e1a:	mov    QWORD PTR [rcx],rax
   140020e1d:	lea    rax,[rip+0x2946c]        # 0x14004a290
   140020e24:	mov    QWORD PTR [rcx+0x18],rax
   140020e28:	mov    rcx,QWORD PTR [rcx+0x20]
   140020e2c:	test   rcx,rcx
   140020e2f:	je     0x140020e40
   140020e31:	mov    rax,QWORD PTR [rcx]
   140020e34:	call   QWORD PTR [rax+0x20]
   140020e37:	test   al,al
   140020e39:	je     0x140020e40
   140020e3b:	and    QWORD PTR [rbx+0x20],0x0
   140020e40:	mov    rcx,rbx
   140020e43:	call   QWORD PTR [rip+0x28a4f]        # 0x140049898
   140020e49:	test   dil,0x1
   140020e4d:	je     0x140020e58
   140020e4f:	mov    rcx,rbx
   140020e52:	call   QWORD PTR [rip+0x28820]        # 0x140049678
   140020e58:	mov    rax,rbx
   140020e5b:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e60:	add    rsp,0x20
   140020e64:	pop    rdi
   140020e65:	ret    
   140020e66:	int3   
   140020e67:	int3   
   140020e68:	mov    QWORD PTR [rsp+0x8],rcx
   140020e6d:	push   rdi
   140020e6e:	sub    rsp,0x30
   140020e72:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020e7b:	mov    QWORD PTR [rsp+0x48],rbx
   140020e80:	mov    rbx,rcx
   140020e83:	mov    rdi,QWORD PTR [rcx+0x48]
   140020e87:	test   rdi,rdi
   140020e8a:	je     0x140020eab
   140020e8c:	lock dec DWORD PTR [rdi+0x8]
   140020e90:	jne    0x140020eab
   140020e92:	mov    rax,QWORD PTR [rdi]
   140020e95:	mov    rcx,rdi
   140020e98:	call   QWORD PTR [rax+0x8]
   140020e9b:	lock dec DWORD PTR [rdi+0xc]
   140020e9f:	jne    0x140020eab
   140020ea1:	mov    rax,QWORD PTR [rdi]
   140020ea4:	mov    rcx,rdi
   140020ea7:	call   QWORD PTR [rax+0x10]
   140020eaa:	nop
   140020eab:	mov    rcx,QWORD PTR [rbx]
   140020eae:	test   rcx,rcx
   140020eb1:	je     0x140020eb9
   140020eb3:	call   QWORD PTR [rip+0x287bf]        # 0x140049678
   140020eb9:	and    QWORD PTR [rbx],0x0
   140020ebd:	and    QWORD PTR [rbx+0x8],0x0
   140020ec2:	and    QWORD PTR [rbx+0x10],0x0
   140020ec7:	mov    rbx,QWORD PTR [rsp+0x48]
   140020ecc:	add    rsp,0x30
   140020ed0:	pop    rdi
   140020ed1:	ret    
   140020ed2:	int3   
   140020ed3:	int3   
   140020ed4:	rex push rbx
   140020ed6:	sub    rsp,0x20
   140020eda:	lea    rax,[rip+0x30b97]        # 0x140051a78
   140020ee1:	mov    rbx,rcx
   140020ee4:	mov    QWORD PTR [rcx],rax
   140020ee7:	lea    rax,[rip+0x293a2]        # 0x14004a290
   140020eee:	mov    QWORD PTR [rcx+0x18],rax
   140020ef2:	mov    rcx,QWORD PTR [rcx+0x20]
   140020ef6:	test   rcx,rcx
   140020ef9:	je     0x140020f0a
   140020efb:	mov    rax,QWORD PTR [rcx]
   140020efe:	call   QWORD PTR [rax+0x20]
   140020f01:	test   al,al
   140020f03:	je     0x140020f0a
   140020f05:	and    QWORD PTR [rbx+0x20],0x0
   140020f0a:	mov    rcx,rbx
   140020f0d:	add    rsp,0x20
   140020f11:	pop    rbx
   140020f12:	rex.W jmp QWORD PTR [rip+0x2897f]        # 0x140049898
   140020f19:	int3   
   140020f1a:	int3   
   140020f1b:	int3   
   140020f1c:	rex push rbx
   140020f1e:	sub    rsp,0x20
   140020f22:	lea    rax,[rip+0x292df]        # 0x14004a208
   140020f29:	mov    rbx,rcx
   140020f2c:	mov    QWORD PTR [rcx+0x40],rax
   140020f30:	lea    rax,[rip+0x30b41]        # 0x140051a78
   140020f37:	mov    QWORD PTR [rcx],rax
   140020f3a:	lea    rax,[rip+0x2934f]        # 0x14004a290
   140020f41:	mov    QWORD PTR [rcx+0x18],rax
   140020f45:	mov    rcx,QWORD PTR [rcx+0x20]
   140020f49:	test   rcx,rcx
   140020f4c:	je     0x140020f5d
   140020f4e:	mov    rax,QWORD PTR [rcx]
   140020f51:	call   QWORD PTR [rax+0x20]
   140020f54:	test   al,al
   140020f56:	je     0x140020f5d
   140020f58:	and    QWORD PTR [rbx+0x20],0x0
   140020f5d:	mov    rcx,rbx
   140020f60:	add    rsp,0x20
   140020f64:	pop    rbx
   140020f65:	rex.W jmp QWORD PTR [rip+0x2892c]        # 0x140049898
   140020f6c:	rex push rdi
   140020f6e:	sub    rsp,0x30
   140020f72:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020f7b:	mov    QWORD PTR [rsp+0x40],rbx
   140020f80:	mov    QWORD PTR [rsp+0x50],rsi
   140020f85:	mov    rsi,rcx
   140020f88:	mov    ecx,0x48
   140020f8d:	call   QWORD PTR [rip+0x28705]        # 0x140049698
   140020f93:	mov    rbx,rax
   140020f96:	mov    QWORD PTR [rsp+0x48],rax
   140020f9b:	xor    edi,edi
   140020f9d:	test   rax,rax
   140020fa0:	je     0x140020fd0
   140020fa2:	lea    rdx,[rsi-0x40]
   140020fa6:	mov    rcx,rax
   140020fa9:	call   0x140020620
   140020fae:	lea    rax,[rip+0x30aeb]        # 0x140051aa0
   140020fb5:	mov    QWORD PTR [rbx],rax
   140020fb8:	lea    rax,[rip+0x30af9]        # 0x140051ab8
   140020fbf:	mov    QWORD PTR [rbx+0x18],rax
   140020fc3:	lea    rax,[rip+0x30afe]        # 0x140051ac8
   140020fca:	mov    QWORD PTR [rbx+0x40],rax
   140020fce:	jmp    0x140020fd3
   140020fd0:	mov    rbx,rdi
   140020fd3:	test   rbx,rbx
   140020fd6:	je     0x140020fdc
   140020fd8:	lea    rdi,[rbx+0x40]
   140020fdc:	mov    rax,rdi
   140020fdf:	mov    rbx,QWORD PTR [rsp+0x40]
   140020fe4:	mov    rsi,QWORD PTR [rsp+0x50]
   140020fe9:	add    rsp,0x30
   140020fed:	pop    rdi
   140020fee:	ret    
   140020fef:	int3   
   140020ff0:	sub    rsp,0x78
   140020ff4:	lea    rdx,[rcx-0x40]
   140020ff8:	lea    rcx,[rsp+0x20]
   140020ffd:	call   0x140020620
   140021002:	lea    rax,[rip+0x30aaf]        # 0x140051ab8
   140021009:	lea    r11,[rip+0x30a90]        # 0x140051aa0
   140021010:	mov    QWORD PTR [rsp+0x38],rax
   140021015:	lea    rax,[rip+0x30aac]        # 0x140051ac8
   14002101c:	lea    rdx,[rip+0x429d5]        # 0x1400639f8
   140021023:	lea    rcx,[rsp+0x20]
   140021028:	mov    QWORD PTR [rsp+0x20],r11
   14002102d:	mov    QWORD PTR [rsp+0x60],rax
   140021032:	call   0x14002b560
   140021037:	int3   
   140021038:	rex push rbx
   14002103a:	sub    rsp,0x20
   14002103e:	lea    rax,[rip+0x2cf73]        # 0x14004dfb8
   140021045:	mov    rbx,rcx
   140021048:	mov    QWORD PTR [rcx],rax
   14002104b:	lea    rax,[rip+0x2923e]        # 0x14004a290
   140021052:	mov    QWORD PTR [rcx+0x18],rax
   140021056:	mov    rcx,QWORD PTR [rcx+0x20]
   14002105a:	test   rcx,rcx
   14002105d:	je     0x14002106e
   14002105f:	mov    rax,QWORD PTR [rcx]
   140021062:	call   QWORD PTR [rax+0x20]
   140021065:	test   al,al
   140021067:	je     0x14002106e
   140021069:	and    QWORD PTR [rbx+0x20],0x0
   14002106e:	mov    rcx,rbx
   140021071:	add    rsp,0x20
   140021075:	pop    rbx
   140021076:	rex.W jmp QWORD PTR [rip+0x2881b]        # 0x140049898
   14002107d:	int3   
   14002107e:	int3   
   14002107f:	int3   
   140021080:	rex push rbx
   140021082:	sub    rsp,0x20
   140021086:	lea    rax,[rip+0x2917b]        # 0x14004a208
   14002108d:	mov    rbx,rcx
   140021090:	mov    QWORD PTR [rcx+0x40],rax
   140021094:	lea    rax,[rip+0x2cf1d]        # 0x14004dfb8
   14002109b:	mov    QWORD PTR [rcx],rax
   14002109e:	lea    rax,[rip+0x291eb]        # 0x14004a290
   1400210a5:	mov    QWORD PTR [rcx+0x18],rax
   1400210a9:	mov    rcx,QWORD PTR [rcx+0x20]
   1400210ad:	test   rcx,rcx
   1400210b0:	je     0x1400210c1
   1400210b2:	mov    rax,QWORD PTR [rcx]
   1400210b5:	call   QWORD PTR [rax+0x20]
   1400210b8:	test   al,al
   1400210ba:	je     0x1400210c1
   1400210bc:	and    QWORD PTR [rbx+0x20],0x0
   1400210c1:	mov    rcx,rbx
   1400210c4:	add    rsp,0x20
   1400210c8:	pop    rbx
   1400210c9:	rex.W jmp QWORD PTR [rip+0x287c8]        # 0x140049898
   1400210d0:	rex push rdi
   1400210d2:	sub    rsp,0x30
   1400210d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400210df:	mov    QWORD PTR [rsp+0x40],rbx
   1400210e4:	mov    QWORD PTR [rsp+0x50],rsi
   1400210e9:	mov    rsi,rcx
   1400210ec:	mov    ecx,0x48
   1400210f1:	call   QWORD PTR [rip+0x285a1]        # 0x140049698
   1400210f7:	mov    rbx,rax
   1400210fa:	mov    QWORD PTR [rsp+0x48],rax
   1400210ff:	xor    edi,edi
   140021101:	test   rax,rax
   140021104:	je     0x140021134
   140021106:	lea    rdx,[rsi-0x40]
   14002110a:	mov    rcx,rax
   14002110d:	call   0x140020754
   140021112:	lea    rax,[rip+0x2d0a7]        # 0x14004e1c0
   140021119:	mov    QWORD PTR [rbx],rax
   14002111c:	lea    rax,[rip+0x2d08d]        # 0x14004e1b0
   140021123:	mov    QWORD PTR [rbx+0x18],rax
   140021127:	lea    rax,[rip+0x2d062]        # 0x14004e190
   14002112e:	mov    QWORD PTR [rbx+0x40],rax
   140021132:	jmp    0x140021137
   140021134:	mov    rbx,rdi
   140021137:	test   rbx,rbx
   14002113a:	je     0x140021140
   14002113c:	lea    rdi,[rbx+0x40]
   140021140:	mov    rax,rdi
   140021143:	mov    rbx,QWORD PTR [rsp+0x40]
   140021148:	mov    rsi,QWORD PTR [rsp+0x50]
   14002114d:	add    rsp,0x30
   140021151:	pop    rdi
   140021152:	ret    
   140021153:	int3   
   140021154:	sub    rsp,0x78
   140021158:	lea    rdx,[rcx-0x40]
   14002115c:	lea    rcx,[rsp+0x20]
   140021161:	call   0x140020754
   140021166:	lea    rax,[rip+0x2d043]        # 0x14004e1b0
   14002116d:	lea    r11,[rip+0x2d04c]        # 0x14004e1c0
   140021174:	mov    QWORD PTR [rsp+0x38],rax
   140021179:	lea    rax,[rip+0x2d010]        # 0x14004e190
   140021180:	lea    rdx,[rip+0x42919]        # 0x140063aa0
   140021187:	lea    rcx,[rsp+0x20]
   14002118c:	mov    QWORD PTR [rsp+0x20],r11
   140021191:	mov    QWORD PTR [rsp+0x60],rax
   140021196:	call   0x14002b560
   14002119b:	int3   
   14002119c:	mov    rax,rsp
   14002119f:	push   rdi
   1400211a0:	sub    rsp,0x150
   1400211a7:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400211b0:	mov    QWORD PTR [rax+0x18],rbx
   1400211b4:	mov    rax,QWORD PTR [rip+0x47035]        # 0x1400681f0
   1400211bb:	xor    rax,rsp
   1400211be:	mov    QWORD PTR [rsp+0x140],rax
   1400211c6:	mov    rdi,rdx
   1400211c9:	mov    rbx,rcx
   1400211cc:	mov    QWORD PTR [rsp+0x28],rdx
   1400211d1:	and    DWORD PTR [rsp+0x20],0x0
   1400211d6:	lea    rdx,[rcx+0x10]
   1400211da:	lea    rcx,[rsp+0x38]
   1400211df:	call   0x140020c38
   1400211e4:	mov    r9,QWORD PTR [rbx+0x8]
   1400211e8:	mov    r8,QWORD PTR [rbx]
   1400211eb:	mov    rdx,rax
   1400211ee:	lea    rcx,[rsp+0xa0]
   1400211f6:	call   0x140021650
   1400211fb:	mov    rbx,rax
   1400211fe:	mov    rdx,rax
   140021201:	mov    rcx,rdi
   140021204:	call   0x140020c38
   140021209:	nop
   14002120a:	mov    rax,QWORD PTR [rbx+0x60]
   14002120e:	mov    QWORD PTR [rdi+0x60],rax
   140021212:	mov    rax,QWORD PTR [rbx+0x68]
   140021216:	mov    QWORD PTR [rdi+0x68],rax
   14002121a:	mov    cl,BYTE PTR [rbx+0x70]
   14002121d:	mov    BYTE PTR [rdi+0x70],cl
   140021220:	lea    rcx,[rdi+0x78]
   140021224:	mov    QWORD PTR [rcx+0x18],0xf
   14002122c:	and    QWORD PTR [rcx+0x10],0x0
   140021231:	mov    BYTE PTR [rcx],0x0
   140021234:	lea    rdx,[rbx+0x78]
   140021238:	or     r9,0xffffffffffffffff
   14002123c:	xor    r8d,r8d
   14002123f:	call   0x1400048b8
   140021244:	nop
   140021245:	lea    rcx,[rsp+0xa0]
   14002124d:	call   0x140020838
   140021252:	mov    rax,rdi
   140021255:	mov    rcx,QWORD PTR [rsp+0x140]
   14002125d:	xor    rcx,rsp
   140021260:	call   0x14002b100
   140021265:	mov    rbx,QWORD PTR [rsp+0x170]
   14002126d:	add    rsp,0x150
   140021274:	pop    rdi
   140021275:	ret    
   140021276:	int3   
   140021277:	int3   
   140021278:	mov    rax,rsp
   14002127b:	push   rdi
   14002127c:	sub    rsp,0x150
   140021283:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002128c:	mov    QWORD PTR [rax+0x18],rbx
   140021290:	mov    rax,QWORD PTR [rip+0x46f59]        # 0x1400681f0
   140021297:	xor    rax,rsp
   14002129a:	mov    QWORD PTR [rsp+0x140],rax
   1400212a2:	mov    rdi,rdx
   1400212a5:	mov    rbx,rcx
   1400212a8:	mov    QWORD PTR [rsp+0x28],rdx
   1400212ad:	and    DWORD PTR [rsp+0x20],0x0
   1400212b2:	lea    rdx,[rcx+0x10]
   1400212b6:	lea    rcx,[rsp+0x38]
   1400212bb:	call   0x140020c38
   1400212c0:	mov    r9,QWORD PTR [rbx+0x8]
   1400212c4:	mov    r8,r9
   1400212c7:	mov    rdx,rax
   1400212ca:	lea    rcx,[rsp+0xa0]
   1400212d2:	call   0x140021650
   1400212d7:	mov    rbx,rax
   1400212da:	mov    rdx,rax
   1400212dd:	mov    rcx,rdi
   1400212e0:	call   0x140020c38
   1400212e5:	nop
   1400212e6:	mov    rax,QWORD PTR [rbx+0x60]
   1400212ea:	mov    QWORD PTR [rdi+0x60],rax
   1400212ee:	mov    rax,QWORD PTR [rbx+0x68]
   1400212f2:	mov    QWORD PTR [rdi+0x68],rax
   1400212f6:	mov    cl,BYTE PTR [rbx+0x70]
   1400212f9:	mov    BYTE PTR [rdi+0x70],cl
   1400212fc:	lea    rcx,[rdi+0x78]
   140021300:	mov    QWORD PTR [rcx+0x18],0xf
   140021308:	and    QWORD PTR [rcx+0x10],0x0
   14002130d:	mov    BYTE PTR [rcx],0x0
   140021310:	lea    rdx,[rbx+0x78]
   140021314:	or     r9,0xffffffffffffffff
   140021318:	xor    r8d,r8d
   14002131b:	call   0x1400048b8
   140021320:	nop
   140021321:	lea    rcx,[rsp+0xa0]
   140021329:	call   0x140020838
   14002132e:	mov    rax,rdi
   140021331:	mov    rcx,QWORD PTR [rsp+0x140]
   140021339:	xor    rcx,rsp
   14002133c:	call   0x14002b100
   140021341:	mov    rbx,QWORD PTR [rsp+0x170]
   140021349:	add    rsp,0x150
   140021350:	pop    rdi
   140021351:	ret    
   140021352:	int3   
   140021353:	int3   
   140021354:	rex push rbx
   140021356:	sub    rsp,0x20
   14002135a:	lea    rax,[rip+0x30787]        # 0x140051ae8
   140021361:	mov    rbx,rcx
   140021364:	mov    QWORD PTR [rcx],rax
   140021367:	lea    rax,[rip+0x28f22]        # 0x14004a290
   14002136e:	mov    QWORD PTR [rcx+0x18],rax
   140021372:	mov    rcx,QWORD PTR [rcx+0x20]
   140021376:	test   rcx,rcx
   140021379:	je     0x14002138a
   14002137b:	mov    rax,QWORD PTR [rcx]
   14002137e:	call   QWORD PTR [rax+0x20]
   140021381:	test   al,al
   140021383:	je     0x14002138a
   140021385:	and    QWORD PTR [rbx+0x20],0x0
   14002138a:	mov    rcx,rbx
   14002138d:	add    rsp,0x20
   140021391:	pop    rbx
   140021392:	rex.W jmp QWORD PTR [rip+0x284ff]        # 0x140049898
   140021399:	int3   
   14002139a:	int3   
   14002139b:	int3   
   14002139c:	rex push rbx
   14002139e:	sub    rsp,0x20
   1400213a2:	lea    rax,[rip+0x28e5f]        # 0x14004a208
   1400213a9:	mov    rbx,rcx
   1400213ac:	mov    QWORD PTR [rcx+0x40],rax
   1400213b0:	lea    rax,[rip+0x30731]        # 0x140051ae8
   1400213b7:	mov    QWORD PTR [rcx],rax
   1400213ba:	lea    rax,[rip+0x28ecf]        # 0x14004a290
   1400213c1:	mov    QWORD PTR [rcx+0x18],rax
   1400213c5:	mov    rcx,QWORD PTR [rcx+0x20]
   1400213c9:	test   rcx,rcx
   1400213cc:	je     0x1400213dd
   1400213ce:	mov    rax,QWORD PTR [rcx]
   1400213d1:	call   QWORD PTR [rax+0x20]
   1400213d4:	test   al,al
   1400213d6:	je     0x1400213dd
   1400213d8:	and    QWORD PTR [rbx+0x20],0x0
   1400213dd:	mov    rcx,rbx
   1400213e0:	add    rsp,0x20
   1400213e4:	pop    rbx
   1400213e5:	rex.W jmp QWORD PTR [rip+0x284ac]        # 0x140049898
   1400213ec:	rex push rdi
   1400213ee:	sub    rsp,0x30
   1400213f2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400213fb:	mov    QWORD PTR [rsp+0x40],rbx
   140021400:	mov    QWORD PTR [rsp+0x50],rsi
   140021405:	mov    rsi,rcx
   140021408:	mov    ecx,0x48
   14002140d:	call   QWORD PTR [rip+0x28285]        # 0x140049698
   140021413:	mov    rbx,rax
   140021416:	mov    QWORD PTR [rsp+0x48],rax
   14002141b:	xor    edi,edi
   14002141d:	test   rax,rax
   140021420:	je     0x140021450
   140021422:	lea    rdx,[rsi-0x40]
   140021426:	mov    rcx,rax
   140021429:	call   0x1400208f0
   14002142e:	lea    rax,[rip+0x306db]        # 0x140051b10
   140021435:	mov    QWORD PTR [rbx],rax
   140021438:	lea    rax,[rip+0x306e9]        # 0x140051b28
   14002143f:	mov    QWORD PTR [rbx+0x18],rax
   140021443:	lea    rax,[rip+0x306ee]        # 0x140051b38
   14002144a:	mov    QWORD PTR [rbx+0x40],rax
   14002144e:	jmp    0x140021453
   140021450:	mov    rbx,rdi
   140021453:	test   rbx,rbx
   140021456:	je     0x14002145c
   140021458:	lea    rdi,[rbx+0x40]
   14002145c:	mov    rax,rdi
   14002145f:	mov    rbx,QWORD PTR [rsp+0x40]
   140021464:	mov    rsi,QWORD PTR [rsp+0x50]
   140021469:	add    rsp,0x30
   14002146d:	pop    rdi
   14002146e:	ret    
   14002146f:	int3   
   140021470:	sub    rsp,0x78
   140021474:	lea    rdx,[rcx-0x40]
   140021478:	lea    rcx,[rsp+0x20]
   14002147d:	call   0x1400208f0
   140021482:	lea    rax,[rip+0x3069f]        # 0x140051b28
   140021489:	lea    r11,[rip+0x30680]        # 0x140051b10
   140021490:	mov    QWORD PTR [rsp+0x38],rax
   140021495:	lea    rax,[rip+0x3069c]        # 0x140051b38
   14002149c:	lea    rdx,[rip+0x426e5]        # 0x140063b88
   1400214a3:	lea    rcx,[rsp+0x20]
   1400214a8:	mov    QWORD PTR [rsp+0x20],r11
   1400214ad:	mov    QWORD PTR [rsp+0x60],rax
   1400214b2:	call   0x14002b560
   1400214b7:	int3   
   1400214b8:	rex push rbx
   1400214ba:	sub    rsp,0x20
   1400214be:	lea    rax,[rip+0x28e1b]        # 0x14004a2e0
   1400214c5:	mov    rbx,rcx
   1400214c8:	mov    QWORD PTR [rcx],rax
   1400214cb:	lea    rax,[rip+0x28dbe]        # 0x14004a290
   1400214d2:	mov    QWORD PTR [rcx+0x18],rax
   1400214d6:	mov    rcx,QWORD PTR [rcx+0x20]
   1400214da:	test   rcx,rcx
   1400214dd:	je     0x1400214ee
   1400214df:	mov    rax,QWORD PTR [rcx]
   1400214e2:	call   QWORD PTR [rax+0x20]
   1400214e5:	test   al,al
   1400214e7:	je     0x1400214ee
   1400214e9:	and    QWORD PTR [rbx+0x20],0x0
   1400214ee:	mov    rcx,rbx
   1400214f1:	add    rsp,0x20
   1400214f5:	pop    rbx
   1400214f6:	rex.W jmp QWORD PTR [rip+0x2839b]        # 0x140049898
   1400214fd:	int3   
   1400214fe:	int3   
   1400214ff:	int3   
   140021500:	rex push rbx
   140021502:	sub    rsp,0x20
   140021506:	lea    rax,[rip+0x28cfb]        # 0x14004a208
   14002150d:	mov    rbx,rcx
   140021510:	mov    QWORD PTR [rcx+0x40],rax
   140021514:	lea    rax,[rip+0x28dc5]        # 0x14004a2e0
   14002151b:	mov    QWORD PTR [rcx],rax
   14002151e:	lea    rax,[rip+0x28d6b]        # 0x14004a290
   140021525:	mov    QWORD PTR [rcx+0x18],rax
   140021529:	mov    rcx,QWORD PTR [rcx+0x20]
   14002152d:	test   rcx,rcx
   140021530:	je     0x140021541
   140021532:	mov    rax,QWORD PTR [rcx]
   140021535:	call   QWORD PTR [rax+0x20]
   140021538:	test   al,al
   14002153a:	je     0x140021541
   14002153c:	and    QWORD PTR [rbx+0x20],0x0
   140021541:	mov    rcx,rbx
   140021544:	add    rsp,0x20
   140021548:	pop    rbx
   140021549:	rex.W jmp QWORD PTR [rip+0x28348]        # 0x140049898
   140021550:	rex push rdi
   140021552:	sub    rsp,0x30
   140021556:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002155f:	mov    QWORD PTR [rsp+0x40],rbx
   140021564:	mov    QWORD PTR [rsp+0x50],rsi
   140021569:	mov    rsi,rcx
   14002156c:	mov    ecx,0x48
   140021571:	call   QWORD PTR [rip+0x28121]        # 0x140049698
   140021577:	mov    rbx,rax
   14002157a:	mov    QWORD PTR [rsp+0x48],rax
   14002157f:	xor    edi,edi
   140021581:	test   rax,rax
   140021584:	je     0x1400215b4
   140021586:	lea    rdx,[rsi-0x40]
   14002158a:	mov    rcx,rax
   14002158d:	call   0x1400209dc
   140021592:	lea    rax,[rip+0x28db7]        # 0x14004a350
   140021599:	mov    QWORD PTR [rbx],rax
   14002159c:	lea    rax,[rip+0x28d9d]        # 0x14004a340
   1400215a3:	mov    QWORD PTR [rbx+0x18],rax
   1400215a7:	lea    rax,[rip+0x28d72]        # 0x14004a320
   1400215ae:	mov    QWORD PTR [rbx+0x40],rax
   1400215b2:	jmp    0x1400215b7
   1400215b4:	mov    rbx,rdi
   1400215b7:	test   rbx,rbx
   1400215ba:	je     0x1400215c0
   1400215bc:	lea    rdi,[rbx+0x40]
   1400215c0:	mov    rax,rdi
   1400215c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400215c8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400215cd:	add    rsp,0x30
   1400215d1:	pop    rdi
   1400215d2:	ret    
   1400215d3:	int3   
   1400215d4:	sub    rsp,0x78
   1400215d8:	lea    rdx,[rcx-0x40]
   1400215dc:	lea    rcx,[rsp+0x20]
   1400215e1:	call   0x1400209dc
   1400215e6:	lea    rax,[rip+0x28d53]        # 0x14004a340
   1400215ed:	lea    r11,[rip+0x28d5c]        # 0x14004a350
   1400215f4:	mov    QWORD PTR [rsp+0x38],rax
   1400215f9:	lea    rax,[rip+0x28d20]        # 0x14004a320
   140021600:	lea    rdx,[rip+0x42661]        # 0x140063c68
   140021607:	lea    rcx,[rsp+0x20]
   14002160c:	mov    QWORD PTR [rsp+0x20],r11
   140021611:	mov    QWORD PTR [rsp+0x60],rax
   140021616:	call   0x14002b560
   14002161b:	int3   
   14002161c:	rex push rbx
   14002161e:	sub    rsp,0x20
   140021622:	mov    rbx,QWORD PTR [rcx+0x8]
   140021626:	test   rbx,rbx
   140021629:	je     0x140021649
   14002162b:	lock dec DWORD PTR [rbx+0x8]
   14002162f:	jne    0x140021649
   140021631:	mov    rax,QWORD PTR [rbx]
   140021634:	mov    rcx,rbx
   140021637:	call   QWORD PTR [rax+0x8]
   14002163a:	lock dec DWORD PTR [rbx+0xc]
   14002163e:	jne    0x140021649
   140021640:	mov    rax,QWORD PTR [rbx]
   140021643:	mov    rcx,rbx
   140021646:	call   QWORD PTR [rax+0x10]
   140021649:	add    rsp,0x20
   14002164d:	pop    rbx
   14002164e:	ret    
   14002164f:	int3   
   140021650:	mov    r11,rsp
   140021653:	mov    QWORD PTR [r11+0x20],r9
   140021657:	mov    QWORD PTR [r11+0x18],r8
   14002165b:	push   rbx
   14002165c:	push   rbp
   14002165d:	push   rdi
   14002165e:	sub    rsp,0x40
   140021662:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002166b:	mov    rax,QWORD PTR [rip+0x46b7e]        # 0x1400681f0
   140021672:	xor    rax,rsp
   140021675:	mov    QWORD PTR [rsp+0x38],rax
   14002167a:	mov    rbx,rdx
   14002167d:	mov    rdi,rcx
   140021680:	mov    QWORD PTR [r11-0x38],rcx
   140021684:	mov    QWORD PTR [r11-0x28],rdx
   140021688:	call   0x140020c38
   14002168d:	nop
   14002168e:	lea    rdx,[rdi+0x60]
   140021692:	mov    rax,QWORD PTR [rsp+0x70]
   140021697:	mov    QWORD PTR [rdx],rax
   14002169a:	mov    rax,QWORD PTR [rsp+0x78]
   14002169f:	mov    QWORD PTR [rdi+0x68],rax
   1400216a3:	mov    BYTE PTR [rdi+0x70],0x0
   1400216a7:	lea    r9,[rdi+0x78]
   1400216ab:	mov    ebp,0xf
   1400216b0:	mov    QWORD PTR [r9+0x18],rbp
   1400216b4:	and    QWORD PTR [r9+0x10],0x0
   1400216b9:	mov    BYTE PTR [r9],0x0
   1400216bd:	cmp    BYTE PTR [rdi+0x70],0x0
   1400216c1:	jne    0x1400216de
   1400216c3:	mov    rax,QWORD PTR [rdi+0x68]
   1400216c7:	cmp    QWORD PTR [rdx],rax
   1400216ca:	je     0x1400216d9
   1400216cc:	mov    r8,rax
   1400216cf:	mov    rcx,rdi
   1400216d2:	call   0x140021dc4
   1400216d7:	jmp    0x1400216db
   1400216d9:	xor    eax,eax
   1400216db:	mov    BYTE PTR [rdi+0x70],al
   1400216de:	cmp    QWORD PTR [rbx+0x40],0x10
   1400216e3:	jb     0x1400216ef
   1400216e5:	mov    rcx,QWORD PTR [rbx+0x28]
   1400216e9:	call   QWORD PTR [rip+0x27f89]        # 0x140049678
   1400216ef:	mov    QWORD PTR [rbx+0x40],rbp
   1400216f3:	and    QWORD PTR [rbx+0x38],0x0
   1400216f8:	mov    BYTE PTR [rbx+0x28],0x0
   1400216fc:	cmp    QWORD PTR [rbx+0x18],0x10
   140021701:	jb     0x14002170c
   140021703:	mov    rcx,QWORD PTR [rbx]
   140021706:	call   QWORD PTR [rip+0x27f6c]        # 0x140049678
   14002170c:	mov    QWORD PTR [rbx+0x18],rbp
   140021710:	and    QWORD PTR [rbx+0x10],0x0
   140021715:	mov    BYTE PTR [rbx],0x0
   140021718:	mov    rax,rdi
   14002171b:	mov    rcx,QWORD PTR [rsp+0x38]
   140021720:	xor    rcx,rsp
   140021723:	call   0x14002b100
   140021728:	add    rsp,0x40
   14002172c:	pop    rdi
   14002172d:	pop    rbp
   14002172e:	pop    rbx
   14002172f:	ret    
   140021730:	rex push rbx
   140021732:	sub    rsp,0x20
   140021736:	and    DWORD PTR [rsp+0x30],0x0
   14002173b:	mov    rbx,rcx
   14002173e:	call   QWORD PTR [rip+0x27e9c]        # 0x1400495e0
   140021744:	lea    rax,[rip+0x28b45]        # 0x14004a290
   14002174b:	mov    QWORD PTR [rbx+0x18],rax
   14002174f:	and    QWORD PTR [rbx+0x20],0x0
   140021754:	and    QWORD PTR [rbx+0x28],0x0
   140021759:	and    QWORD PTR [rbx+0x30],0x0
   14002175e:	or     DWORD PTR [rbx+0x38],0xffffffff
   140021762:	lea    rax,[rip+0x3030f]        # 0x140051a78
   140021769:	mov    QWORD PTR [rbx],rax
   14002176c:	lea    rax,[rip+0x3031d]        # 0x140051a90
   140021773:	mov    QWORD PTR [rbx+0x18],rax
   140021777:	mov    rax,rbx
   14002177a:	add    rsp,0x20
   14002177e:	pop    rbx
   14002177f:	ret    
   140021780:	mov    QWORD PTR [rsp+0x8],rcx
   140021785:	push   rdi
   140021786:	sub    rsp,0x30
   14002178a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021793:	mov    QWORD PTR [rsp+0x50],rbx
   140021798:	mov    QWORD PTR [rsp+0x58],rsi
   14002179d:	mov    rsi,rdx
   1400217a0:	mov    rdi,rcx
   1400217a3:	xor    ebx,ebx
   1400217a5:	mov    DWORD PTR [rsp+0x48],ebx
   1400217a9:	call   0x140020620
   1400217ae:	nop
   1400217af:	lea    rax,[rip+0x302ea]        # 0x140051aa0
   1400217b6:	mov    QWORD PTR [rdi],rax
   1400217b9:	lea    rcx,[rdi+0x18]
   1400217bd:	lea    rax,[rip+0x302f4]        # 0x140051ab8
   1400217c4:	mov    QWORD PTR [rcx],rax
   1400217c7:	lea    rax,[rip+0x302fa]        # 0x140051ac8
   1400217ce:	mov    QWORD PTR [rdi+0x40],rax
   1400217d2:	test   rsi,rsi
   1400217d5:	je     0x1400217db
   1400217d7:	lea    rbx,[rsi+0x18]
   1400217db:	mov    rdx,rbx
   1400217de:	call   0x1400010f8
   1400217e3:	nop
   1400217e4:	mov    rax,rdi
   1400217e7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400217ec:	mov    rsi,QWORD PTR [rsp+0x58]
   1400217f1:	add    rsp,0x30
   1400217f5:	pop    rdi
   1400217f6:	ret    
   1400217f7:	int3   
   1400217f8:	rex push rbx
   1400217fa:	sub    rsp,0x20
   1400217fe:	and    DWORD PTR [rsp+0x30],0x0
   140021803:	mov    rbx,rcx
   140021806:	call   QWORD PTR [rip+0x27dd4]        # 0x1400495e0
   14002180c:	lea    rax,[rip+0x28a7d]        # 0x14004a290
   140021813:	mov    QWORD PTR [rbx+0x18],rax
   140021817:	and    QWORD PTR [rbx+0x20],0x0
   14002181c:	and    QWORD PTR [rbx+0x28],0x0
   140021821:	and    QWORD PTR [rbx+0x30],0x0
   140021826:	or     DWORD PTR [rbx+0x38],0xffffffff
   14002182a:	lea    rax,[rip+0x2c787]        # 0x14004dfb8
   140021831:	mov    QWORD PTR [rbx],rax
   140021834:	lea    rax,[rip+0x2c76d]        # 0x14004dfa8
   14002183b:	mov    QWORD PTR [rbx+0x18],rax
   14002183f:	mov    rax,rbx
   140021842:	add    rsp,0x20
   140021846:	pop    rbx
   140021847:	ret    
   140021848:	mov    QWORD PTR [rsp+0x8],rcx
   14002184d:	push   rdi
   14002184e:	sub    rsp,0x30
   140021852:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002185b:	mov    QWORD PTR [rsp+0x50],rbx
   140021860:	mov    QWORD PTR [rsp+0x58],rsi
   140021865:	mov    rsi,rdx
   140021868:	mov    rdi,rcx
   14002186b:	xor    ebx,ebx
   14002186d:	mov    DWORD PTR [rsp+0x48],ebx
   140021871:	call   0x140020754
   140021876:	nop
   140021877:	lea    rax,[rip+0x2c942]        # 0x14004e1c0
   14002187e:	mov    QWORD PTR [rdi],rax
   140021881:	lea    rcx,[rdi+0x18]
   140021885:	lea    rax,[rip+0x2c924]        # 0x14004e1b0
   14002188c:	mov    QWORD PTR [rcx],rax
   14002188f:	lea    rax,[rip+0x2c8fa]        # 0x14004e190
   140021896:	mov    QWORD PTR [rdi+0x40],rax
   14002189a:	test   rsi,rsi
   14002189d:	je     0x1400218a3
   14002189f:	lea    rbx,[rsi+0x18]
   1400218a3:	mov    rdx,rbx
   1400218a6:	call   0x1400010f8
   1400218ab:	nop
   1400218ac:	mov    rax,rdi
   1400218af:	mov    rbx,QWORD PTR [rsp+0x50]
   1400218b4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400218b9:	add    rsp,0x30
   1400218bd:	pop    rdi
   1400218be:	ret    
   1400218bf:	int3   
   1400218c0:	mov    rax,rsp
   1400218c3:	push   rbp
   1400218c4:	lea    rbp,[rax-0xf8]
   1400218cb:	sub    rsp,0x1f0
   1400218d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400218db:	mov    QWORD PTR [rax+0x10],rbx
   1400218df:	mov    QWORD PTR [rax+0x18],rdi
   1400218e3:	mov    rbx,rcx
   1400218e6:	lea    rcx,[rbp-0x40]
   1400218ea:	call   QWORD PTR [rip+0x27990]        # 0x140049280
   1400218f0:	lea    r11,[rip+0x30261]        # 0x140051b58
   1400218f7:	mov    QWORD PTR [rbp-0x40],r11
   1400218fb:	cmp    QWORD PTR [rbx+0x18],0x10
   140021900:	jb     0x14002190b
   140021902:	mov    rdx,QWORD PTR [rbx]
   140021905:	mov    QWORD PTR [rbp+0x30],rdx
   140021909:	jmp    0x140021912
   14002190b:	mov    rdx,rbx
   14002190e:	mov    QWORD PTR [rbp+0x30],rbx
   140021912:	mov    rcx,QWORD PTR [rbx+0x10]
   140021916:	add    rcx,rdx
   140021919:	mov    QWORD PTR [rbp+0x38],rcx
   14002191d:	mov    rax,QWORD PTR [rbp-0x20]
   140021921:	mov    QWORD PTR [rax],rdx
   140021924:	mov    rax,QWORD PTR [rbp+0x0]
   140021928:	mov    QWORD PTR [rax],rdx
   14002192b:	sub    ecx,edx
   14002192d:	mov    rax,QWORD PTR [rbp+0x18]
   140021931:	mov    DWORD PTR [rax],ecx
   140021933:	mov    ebx,0x1
   140021938:	mov    r9d,ebx
   14002193b:	xor    r8d,r8d
   14002193e:	lea    rdx,[rbp-0x40]
   140021942:	lea    rcx,[rsp+0x50]
   140021947:	call   QWORD PTR [rip+0x2794b]        # 0x140049298
   14002194d:	nop
   14002194e:	mov    rax,QWORD PTR [rsp+0x50]
   140021953:	movsxd rcx,DWORD PTR [rax+0x4]
   140021957:	and    DWORD PTR [rsp+rcx*1+0x68],0xfffffffe
   14002195c:	mov    rax,QWORD PTR [rsp+0x50]
   140021961:	movsxd rcx,DWORD PTR [rax+0x4]
   140021965:	mov    QWORD PTR [rsp+rcx*1+0x70],0x6
   14002196e:	lea    rdx,[rbp+0x100]
   140021975:	lea    rcx,[rsp+0x50]
   14002197a:	call   QWORD PTR [rip+0x27bd0]        # 0x140049550
   140021980:	mov    rcx,QWORD PTR [rax]
   140021983:	movsxd rdx,DWORD PTR [rcx+0x4]
   140021987:	add    rdx,rax
   14002198a:	test   BYTE PTR [rdx+0x10],0x6
   14002198e:	lea    edi,[rbx-0x1]
   140021991:	cmovne rdx,rdi
   140021995:	test   rdx,rdx
   140021998:	je     0x1400219aa
   14002199a:	lea    rcx,[rsp+0x50]
   14002199f:	call   QWORD PTR [rip+0x27ba3]        # 0x140049548
   1400219a5:	cmp    eax,0xffffffff
   1400219a8:	je     0x1400219ad
   1400219aa:	mov    bl,dil
   1400219ad:	lea    rcx,[rsp+0x50]
   1400219b2:	call   QWORD PTR [rip+0x27ba0]        # 0x140049558
   1400219b8:	test   bl,bl
   1400219ba:	je     0x1400219d2
   1400219bc:	movzx  ebx,WORD PTR [rbp+0x100]
   1400219c3:	lea    rcx,[rbp-0x40]
   1400219c7:	call   QWORD PTR [rip+0x27963]        # 0x140049330
   1400219cd:	movzx  eax,bx
   1400219d0:	jmp    0x140021a37
   1400219d2:	lea    rdx,[rip+0x2ef97]        # 0x140050970
   1400219d9:	lea    rcx,[rsp+0x28]
   1400219de:	call   QWORD PTR [rip+0x27ecc]        # 0x1400498b0
   1400219e4:	lea    r11,[rip+0x28865]        # 0x14004a250
   1400219eb:	mov    QWORD PTR [rsp+0x28],r11
   1400219f0:	lea    rax,[rip+0x48459]        # 0x140069e50
   1400219f7:	mov    QWORD PTR [rsp+0x40],rax
   1400219fc:	lea    rax,[rip+0x484a5]        # 0x140069ea8
   140021a03:	mov    QWORD PTR [rsp+0x48],rax
   140021a08:	lea    rdx,[rsp+0x28]
   140021a0d:	lea    rcx,[rbp+0x98]
   140021a14:	call   0x140022968
   140021a19:	nop
   140021a1a:	mov    rdx,rax
   140021a1d:	lea    rcx,[rbp+0x40]
   140021a21:	call   0x1400229e0
   140021a26:	lea    rdx,[rip+0x42363]        # 0x140063d90
   140021a2d:	lea    rcx,[rbp+0x40]
   140021a31:	call   0x14002b560
   140021a36:	nop
   140021a37:	lea    r11,[rsp+0x1f0]
   140021a3f:	mov    rbx,QWORD PTR [r11+0x18]
   140021a43:	mov    rdi,QWORD PTR [r11+0x20]
   140021a47:	mov    rsp,r11
   140021a4a:	pop    rbp
   140021a4b:	ret    
   140021a4c:	mov    rax,rsp
   140021a4f:	push   rbp
   140021a50:	push   rdi
   140021a51:	push   r12
   140021a53:	lea    rbp,[rax-0x5f]
   140021a57:	sub    rsp,0xa0
   140021a5e:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   140021a66:	mov    QWORD PTR [rax+0x10],rbx
   140021a6a:	mov    QWORD PTR [rax+0x18],rsi
   140021a6e:	mov    rax,QWORD PTR [rip+0x4677b]        # 0x1400681f0
   140021a75:	xor    rax,rsp
   140021a78:	mov    QWORD PTR [rbp+0x3f],rax
   140021a7c:	cmp    QWORD PTR [rcx+0x10],0x0
   140021a81:	ja     0x140021a91
   140021a83:	lea    rcx,[rip+0x2eea6]        # 0x140050930
   140021a8a:	call   QWORD PTR [rip+0x27b20]        # 0x1400495b0
   140021a90:	int3   
   140021a91:	cmp    QWORD PTR [rcx+0x18],0x10
   140021a96:	jb     0x140021a9d
   140021a98:	mov    rax,QWORD PTR [rcx]
   140021a9b:	jmp    0x140021aa0
   140021a9d:	mov    rax,rcx
   140021aa0:	cmp    BYTE PTR [rax],0x30
   140021aa3:	jl     0x140021ac3
   140021aa5:	cmp    QWORD PTR [rcx+0x18],0x10
   140021aaa:	jb     0x140021ab1
   140021aac:	mov    rax,QWORD PTR [rcx]
   140021aaf:	jmp    0x140021ab4
   140021ab1:	mov    rax,rcx
   140021ab4:	cmp    BYTE PTR [rax],0x39
   140021ab7:	jg     0x140021ac3
   140021ab9:	call   0x1400218c0
   140021abe:	jmp    0x140021c0f
   140021ac3:	mov    QWORD PTR [rbp+0x7],0xf
   140021acb:	and    QWORD PTR [rbp-0x1],0x0
   140021ad0:	mov    BYTE PTR [rbp-0x11],0x0
   140021ad4:	or     r12,0xffffffffffffffff
   140021ad8:	mov    r9,r12
   140021adb:	xor    r8d,r8d
   140021ade:	mov    rdx,rcx
   140021ae1:	lea    rcx,[rbp-0x11]
   140021ae5:	call   0x1400048b8
   140021aea:	lea    rdx,[rbp-0x11]
   140021aee:	lea    rcx,[rbp+0x17]
   140021af2:	call   0x14001d750
   140021af7:	nop
   140021af8:	lea    rcx,[rbp-0x39]
   140021afc:	call   0x140025880
   140021b01:	nop
   140021b02:	mov    rsi,QWORD PTR [rbp-0x39]
   140021b06:	mov    rdi,QWORD PTR [rsi+0x8]
   140021b0a:	mov    rbx,QWORD PTR [rdi+0x8]
   140021b0e:	jmp    0x140021b30
   140021b10:	lea    rdx,[rbx+0x18]
   140021b14:	lea    r8,[rbp+0x17]
   140021b18:	mov    rcx,rsi
   140021b1b:	call   0x140004c0c
   140021b20:	test   al,al
   140021b22:	je     0x140021b2a
   140021b24:	mov    rbx,QWORD PTR [rbx+0x10]
   140021b28:	jmp    0x140021b30
   140021b2a:	mov    rdi,rbx
   140021b2d:	mov    rbx,QWORD PTR [rbx]
   140021b30:	cmp    BYTE PTR [rbx+0x49],0x0
   140021b34:	je     0x140021b10
   140021b36:	mov    QWORD PTR [rbp-0x21],rdi
   140021b3a:	cmp    rdi,QWORD PTR [rsi+0x8]
   140021b3e:	je     0x140021b5a
   140021b40:	lea    r8,[rdi+0x18]
   140021b44:	lea    rdx,[rbp+0x17]
   140021b48:	mov    rcx,rsi
   140021b4b:	call   0x140004c0c
   140021b50:	test   al,al
   140021b52:	jne    0x140021b5a
   140021b54:	lea    rax,[rbp-0x21]
   140021b58:	jmp    0x140021b66
   140021b5a:	mov    rax,QWORD PTR [rsi+0x8]
   140021b5e:	mov    QWORD PTR [rbp-0x29],rax
   140021b62:	lea    rax,[rbp-0x29]
   140021b66:	mov    rax,QWORD PTR [rax]
   140021b69:	mov    rcx,QWORD PTR [rbp-0x39]
   140021b6d:	cmp    rax,QWORD PTR [rcx+0x8]
   140021b71:	je     0x140021bc3
   140021b73:	movzx  edi,WORD PTR [rax+0x40]
   140021b77:	mov    rbx,QWORD PTR [rbp-0x31]
   140021b7b:	test   rbx,rbx
   140021b7e:	je     0x140021bad
   140021b80:	mov    eax,r12d
   140021b83:	lock xadd DWORD PTR [rbx+0x8],eax
   140021b88:	add    eax,r12d
   140021b8b:	jne    0x140021bad
   140021b8d:	mov    rax,QWORD PTR [rbx]
   140021b90:	mov    rcx,rbx
   140021b93:	call   QWORD PTR [rax+0x8]
   140021b96:	mov    eax,r12d
   140021b99:	lock xadd DWORD PTR [rbx+0xc],eax
   140021b9e:	add    eax,r12d
   140021ba1:	jne    0x140021bad
   140021ba3:	mov    rdx,QWORD PTR [rbx]
   140021ba6:	mov    rcx,rbx
   140021ba9:	call   QWORD PTR [rdx+0x10]
   140021bac:	nop
   140021bad:	cmp    QWORD PTR [rbp+0x2f],0x10
   140021bb2:	jb     0x140021bbe
   140021bb4:	mov    rcx,QWORD PTR [rbp+0x17]
   140021bb8:	call   QWORD PTR [rip+0x27aba]        # 0x140049678
   140021bbe:	movzx  eax,di
   140021bc1:	jmp    0x140021c0f
   140021bc3:	mov    rbx,QWORD PTR [rbp-0x31]
   140021bc7:	test   rbx,rbx
   140021bca:	je     0x140021bf9
   140021bcc:	mov    eax,r12d
   140021bcf:	lock xadd DWORD PTR [rbx+0x8],eax
   140021bd4:	add    eax,r12d
   140021bd7:	jne    0x140021bf9
   140021bd9:	mov    rax,QWORD PTR [rbx]
   140021bdc:	mov    rcx,rbx
   140021bdf:	call   QWORD PTR [rax+0x8]
   140021be2:	mov    eax,r12d
   140021be5:	lock xadd DWORD PTR [rbx+0xc],eax
   140021bea:	add    eax,r12d
   140021bed:	jne    0x140021bf9
   140021bef:	mov    rax,QWORD PTR [rbx]
   140021bf2:	mov    rcx,rbx
   140021bf5:	call   QWORD PTR [rax+0x10]
   140021bf8:	nop
   140021bf9:	cmp    QWORD PTR [rbp+0x2f],0x10
   140021bfe:	jb     0x140021c0a
   140021c00:	mov    rcx,QWORD PTR [rbp+0x17]
   140021c04:	call   QWORD PTR [rip+0x27a6e]        # 0x140049678
   140021c0a:	mov    eax,0xd
   140021c0f:	mov    rcx,QWORD PTR [rbp+0x3f]
   140021c13:	xor    rcx,rsp
   140021c16:	call   0x14002b100
   140021c1b:	lea    r11,[rsp+0xa0]
   140021c23:	mov    rbx,QWORD PTR [r11+0x28]
   140021c27:	mov    rsi,QWORD PTR [r11+0x30]
   140021c2b:	mov    rsp,r11
   140021c2e:	pop    r12
   140021c30:	pop    rdi
   140021c31:	pop    rbp
   140021c32:	ret    
   140021c33:	int3   
   140021c34:	rex push rbx
   140021c36:	sub    rsp,0x20
   140021c3a:	and    DWORD PTR [rsp+0x30],0x0
   140021c3f:	mov    rbx,rcx
   140021c42:	call   QWORD PTR [rip+0x27998]        # 0x1400495e0
   140021c48:	lea    rax,[rip+0x28641]        # 0x14004a290
   140021c4f:	mov    QWORD PTR [rbx+0x18],rax
   140021c53:	and    QWORD PTR [rbx+0x20],0x0
   140021c58:	and    QWORD PTR [rbx+0x28],0x0
   140021c5d:	and    QWORD PTR [rbx+0x30],0x0
   140021c62:	or     DWORD PTR [rbx+0x38],0xffffffff
   140021c66:	lea    rax,[rip+0x2fe7b]        # 0x140051ae8
   140021c6d:	mov    QWORD PTR [rbx],rax
   140021c70:	lea    rax,[rip+0x2fe89]        # 0x140051b00
   140021c77:	mov    QWORD PTR [rbx+0x18],rax
   140021c7b:	mov    rax,rbx
   140021c7e:	add    rsp,0x20
   140021c82:	pop    rbx
   140021c83:	ret    
   140021c84:	mov    QWORD PTR [rsp+0x8],rcx
   140021c89:	push   rdi
   140021c8a:	sub    rsp,0x30
   140021c8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021c97:	mov    QWORD PTR [rsp+0x50],rbx
   140021c9c:	mov    QWORD PTR [rsp+0x58],rsi
   140021ca1:	mov    rsi,rdx
   140021ca4:	mov    rdi,rcx
   140021ca7:	xor    ebx,ebx
   140021ca9:	mov    DWORD PTR [rsp+0x48],ebx
   140021cad:	call   0x1400208f0
   140021cb2:	nop
   140021cb3:	lea    rax,[rip+0x2fe56]        # 0x140051b10
   140021cba:	mov    QWORD PTR [rdi],rax
   140021cbd:	lea    rcx,[rdi+0x18]
   140021cc1:	lea    rax,[rip+0x2fe60]        # 0x140051b28
   140021cc8:	mov    QWORD PTR [rcx],rax
   140021ccb:	lea    rax,[rip+0x2fe66]        # 0x140051b38
   140021cd2:	mov    QWORD PTR [rdi+0x40],rax
   140021cd6:	test   rsi,rsi
   140021cd9:	je     0x140021cdf
   140021cdb:	lea    rbx,[rsi+0x18]
   140021cdf:	mov    rdx,rbx
   140021ce2:	call   0x1400010f8
   140021ce7:	nop
   140021ce8:	mov    rax,rdi
   140021ceb:	mov    rbx,QWORD PTR [rsp+0x50]
   140021cf0:	mov    rsi,QWORD PTR [rsp+0x58]
   140021cf5:	add    rsp,0x30
   140021cf9:	pop    rdi
   140021cfa:	ret    
   140021cfb:	int3   
   140021cfc:	rex push rbx
   140021cfe:	sub    rsp,0x20
   140021d02:	and    DWORD PTR [rsp+0x30],0x0
   140021d07:	mov    rbx,rcx
   140021d0a:	call   QWORD PTR [rip+0x278d0]        # 0x1400495e0
   140021d10:	lea    rax,[rip+0x28579]        # 0x14004a290
   140021d17:	mov    QWORD PTR [rbx+0x18],rax
   140021d1b:	and    QWORD PTR [rbx+0x20],0x0
   140021d20:	and    QWORD PTR [rbx+0x28],0x0
   140021d25:	and    QWORD PTR [rbx+0x30],0x0
   140021d2a:	or     DWORD PTR [rbx+0x38],0xffffffff
   140021d2e:	lea    rax,[rip+0x285ab]        # 0x14004a2e0
   140021d35:	mov    QWORD PTR [rbx],rax
   140021d38:	lea    rax,[rip+0x28591]        # 0x14004a2d0
   140021d3f:	mov    QWORD PTR [rbx+0x18],rax
   140021d43:	mov    rax,rbx
   140021d46:	add    rsp,0x20
   140021d4a:	pop    rbx
   140021d4b:	ret    
   140021d4c:	mov    QWORD PTR [rsp+0x8],rcx
   140021d51:	push   rdi
   140021d52:	sub    rsp,0x30
   140021d56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021d5f:	mov    QWORD PTR [rsp+0x50],rbx
   140021d64:	mov    QWORD PTR [rsp+0x58],rsi
   140021d69:	mov    rsi,rdx
   140021d6c:	mov    rdi,rcx
   140021d6f:	xor    ebx,ebx
   140021d71:	mov    DWORD PTR [rsp+0x48],ebx
   140021d75:	call   0x1400209dc
   140021d7a:	nop
   140021d7b:	lea    rax,[rip+0x285ce]        # 0x14004a350
   140021d82:	mov    QWORD PTR [rdi],rax
   140021d85:	lea    rcx,[rdi+0x18]
   140021d89:	lea    rax,[rip+0x285b0]        # 0x14004a340
   140021d90:	mov    QWORD PTR [rcx],rax
   140021d93:	lea    rax,[rip+0x28586]        # 0x14004a320
   140021d9a:	mov    QWORD PTR [rdi+0x40],rax
   140021d9e:	test   rsi,rsi
   140021da1:	je     0x140021da7
   140021da3:	lea    rbx,[rsi+0x18]
   140021da7:	mov    rdx,rbx
   140021daa:	call   0x1400010f8
   140021daf:	nop
   140021db0:	mov    rax,rdi
   140021db3:	mov    rbx,QWORD PTR [rsp+0x50]
   140021db8:	mov    rsi,QWORD PTR [rsp+0x58]
   140021dbd:	add    rsp,0x30
   140021dc1:	pop    rdi
   140021dc2:	ret    
   140021dc3:	int3   
   140021dc4:	mov    QWORD PTR [rsp+0x18],r8
   140021dc9:	push   rbp
   140021dca:	push   rbx
   140021dcb:	push   rsi
   140021dcc:	push   rdi
   140021dcd:	push   r12
   140021dcf:	push   r13
   140021dd1:	push   r14
   140021dd3:	mov    rbp,rsp
   140021dd6:	sub    rsp,0x20
   140021dda:	xor    r13d,r13d
   140021ddd:	mov    r12,r9
   140021de0:	mov    rsi,rdx
   140021de3:	mov    rdi,rcx
   140021de6:	mov    r14d,0x1
   140021dec:	cmp    DWORD PTR [rcx+0x54],r13d
   140021df0:	jne    0x140021e44
   140021df2:	cmp    QWORD PTR [rdx],r8
   140021df5:	je     0x140021e44
   140021df7:	mov    rax,QWORD PTR [rsi]
   140021dfa:	mov    cl,BYTE PTR [rax]
   140021dfc:	cmp    QWORD PTR [rdi+0x38],r13
   140021e00:	je     0x140021e1e
   140021e02:	mov    BYTE PTR [rbp+0x40],cl
   140021e05:	lea    rdx,[rbp+0x40]
   140021e09:	lea    rcx,[rdi+0x28]
   140021e0d:	mov    r8,r14
   140021e10:	call   0x1400049b8
   140021e15:	cmp    rax,0xffffffffffffffff
   140021e19:	setne  al
   140021e1c:	jmp    0x140021e34
   140021e1e:	cmp    BYTE PTR [rdi+0x51],r13b
   140021e22:	je     0x140021e31
   140021e24:	movsx  ecx,cl
   140021e27:	call   QWORD PTR [rip+0x27923]        # 0x140049750
   140021e2d:	test   eax,eax
   140021e2f:	jmp    0x140021e19
   140021e31:	mov    al,r13b
   140021e34:	test   al,al
   140021e36:	je     0x140021e44
   140021e38:	mov    rax,QWORD PTR [rbp+0x50]
   140021e3c:	add    QWORD PTR [rsi],r14
   140021e3f:	cmp    QWORD PTR [rsi],rax
   140021e42:	jne    0x140021df7
   140021e44:	mov    rbx,QWORD PTR [rsi]
   140021e47:	cmp    DWORD PTR [rdi+0x54],r13d
   140021e4b:	jne    0x140021f45
   140021e51:	cmp    rbx,QWORD PTR [rbp+0x50]
   140021e55:	jne    0x140021e5e
   140021e57:	xor    al,al
   140021e59:	jmp    0x1400220ee
   140021e5e:	mov    al,BYTE PTR [rbx]
   140021e60:	cmp    QWORD PTR [rdi+0x10],r13
   140021e64:	je     0x140021e81
   140021e66:	lea    rdx,[rbp+0x40]
   140021e6a:	mov    r8,r14
   140021e6d:	mov    rcx,rdi
   140021e70:	mov    BYTE PTR [rbp+0x40],al
   140021e73:	call   0x1400049b8
   140021e78:	cmp    rax,0xffffffffffffffff
   140021e7c:	setne  al
   140021e7f:	jmp    0x140021e97
   140021e81:	cmp    BYTE PTR [rdi+0x50],r13b
   140021e85:	je     0x140021e94
   140021e87:	movsx  ecx,al
   140021e8a:	call   QWORD PTR [rip+0x278d0]        # 0x140049760
   140021e90:	test   eax,eax
   140021e92:	jmp    0x140021e7c
   140021e94:	mov    al,r13b
   140021e97:	test   al,al
   140021e99:	je     0x140021f33
   140021e9f:	add    QWORD PTR [rsi],r14
   140021ea2:	jmp    0x1400220dd
   140021ea7:	mov    rax,QWORD PTR [rsi]
   140021eaa:	mov    cl,BYTE PTR [rax]
   140021eac:	cmp    QWORD PTR [rdi+0x38],r13
   140021eb0:	je     0x140021ece
   140021eb2:	mov    BYTE PTR [rbp+0x40],cl
   140021eb5:	lea    rdx,[rbp+0x40]
   140021eb9:	lea    rcx,[rdi+0x28]
   140021ebd:	mov    r8,r14
   140021ec0:	call   0x1400049b8
   140021ec5:	cmp    rax,0xffffffffffffffff
   140021ec9:	setne  al
   140021ecc:	jmp    0x140021ee4
   140021ece:	cmp    BYTE PTR [rdi+0x51],r13b
   140021ed2:	je     0x140021ee1
   140021ed4:	movsx  ecx,cl
   140021ed7:	call   QWORD PTR [rip+0x27873]        # 0x140049750
   140021edd:	test   eax,eax
   140021edf:	jmp    0x140021ec9
   140021ee1:	mov    al,r13b
   140021ee4:	test   al,al
   140021ee6:	jne    0x1400220dd
   140021eec:	mov    rax,QWORD PTR [rsi]
   140021eef:	mov    cl,BYTE PTR [rax]
   140021ef1:	cmp    QWORD PTR [rdi+0x10],r13
   140021ef5:	je     0x140021f12
   140021ef7:	mov    BYTE PTR [rbp+0x48],cl
   140021efa:	lea    rdx,[rbp+0x48]
   140021efe:	mov    r8,r14
   140021f01:	mov    rcx,rdi
   140021f04:	call   0x1400049b8
   140021f09:	cmp    rax,0xffffffffffffffff
   140021f0d:	setne  al
   140021f10:	jmp    0x140021f28
   140021f12:	cmp    BYTE PTR [rdi+0x50],r13b
   140021f16:	je     0x140021f25
   140021f18:	movsx  ecx,cl
   140021f1b:	call   QWORD PTR [rip+0x2783f]        # 0x140049760
   140021f21:	test   eax,eax
   140021f23:	jmp    0x140021f0d
   140021f25:	mov    al,r13b
   140021f28:	test   al,al
   140021f2a:	jne    0x1400220dd
   140021f30:	add    QWORD PTR [rsi],r14
   140021f33:	mov    rax,QWORD PTR [rbp+0x50]
   140021f37:	cmp    QWORD PTR [rsi],rax
   140021f3a:	jne    0x140021ea7
   140021f40:	jmp    0x1400220dd
   140021f45:	cmp    rbx,QWORD PTR [rbp+0x50]
   140021f49:	jne    0x140021f5a
   140021f4b:	cmp    BYTE PTR [rdi+0x58],r13b
   140021f4f:	je     0x1400220d9
   140021f55:	jmp    0x140021e57
   140021f5a:	mov    al,BYTE PTR [rbx]
   140021f5c:	cmp    QWORD PTR [rdi+0x10],r13
   140021f60:	je     0x140021f7d
   140021f62:	lea    rdx,[rbp+0x40]
   140021f66:	mov    r8,r14
   140021f69:	mov    rcx,rdi
   140021f6c:	mov    BYTE PTR [rbp+0x40],al
   140021f6f:	call   0x1400049b8
   140021f74:	cmp    rax,0xffffffffffffffff
   140021f78:	setne  al
   140021f7b:	jmp    0x140021f93
   140021f7d:	cmp    BYTE PTR [rdi+0x50],r13b
   140021f81:	je     0x140021f90
   140021f83:	movsx  ecx,al
   140021f86:	call   QWORD PTR [rip+0x277d4]        # 0x140049760
   140021f8c:	test   eax,eax
   140021f8e:	jmp    0x140021f78
   140021f90:	mov    al,r13b
   140021f93:	test   al,al
   140021f95:	je     0x140021fad
   140021f97:	cmp    BYTE PTR [rdi+0x58],r13b
   140021f9b:	je     0x1400220d9
   140021fa1:	add    QWORD PTR [rsi],r14
   140021fa4:	mov    BYTE PTR [rdi+0x58],r13b
   140021fa8:	jmp    0x1400220dd
   140021fad:	cmp    BYTE PTR [rdi+0x58],r13b
   140021fb1:	jne    0x140021ff8
   140021fb3:	mov    rax,QWORD PTR [rsi]
   140021fb6:	mov    cl,BYTE PTR [rax]
   140021fb8:	cmp    QWORD PTR [rdi+0x38],r13
   140021fbc:	je     0x140021fda
   140021fbe:	mov    BYTE PTR [rbp+0x40],cl
   140021fc1:	lea    rdx,[rbp+0x40]
   140021fc5:	lea    rcx,[rdi+0x28]
   140021fc9:	mov    r8,r14
   140021fcc:	call   0x1400049b8
   140021fd1:	cmp    rax,0xffffffffffffffff
   140021fd5:	setne  al
   140021fd8:	jmp    0x140021ff0
   140021fda:	cmp    BYTE PTR [rdi+0x51],r13b
   140021fde:	je     0x140021fed
   140021fe0:	movsx  ecx,cl
   140021fe3:	call   QWORD PTR [rip+0x27767]        # 0x140049750
   140021fe9:	test   eax,eax
   140021feb:	jmp    0x140021fd5
   140021fed:	mov    al,r13b
   140021ff0:	test   al,al
   140021ff2:	jne    0x1400220d9
   140021ff8:	mov    rax,QWORD PTR [rsi]
   140021ffb:	mov    cl,BYTE PTR [rax]
   140021ffd:	cmp    QWORD PTR [rdi+0x38],r13
   140022001:	je     0x14002201f
   140022003:	mov    BYTE PTR [rbp+0x40],cl
   140022006:	lea    rdx,[rbp+0x40]
   14002200a:	lea    rcx,[rdi+0x28]
   14002200e:	mov    r8,r14
   140022011:	call   0x1400049b8
   140022016:	cmp    rax,0xffffffffffffffff
   14002201a:	setne  al
   14002201d:	jmp    0x140022035
   14002201f:	cmp    BYTE PTR [rdi+0x51],r13b
   140022023:	je     0x140022032
   140022025:	movsx  ecx,cl
   140022028:	call   QWORD PTR [rip+0x27722]        # 0x140049750
   14002202e:	test   eax,eax
   140022030:	jmp    0x14002201a
   140022032:	mov    al,r13b
   140022035:	test   al,al
   140022037:	je     0x1400220cc
   14002203d:	add    QWORD PTR [rsi],r14
   140022040:	mov    rbx,QWORD PTR [rsi]
   140022043:	jmp    0x1400220cc
   140022048:	mov    rax,QWORD PTR [rsi]
   14002204b:	mov    cl,BYTE PTR [rax]
   14002204d:	cmp    QWORD PTR [rdi+0x38],r13
   140022051:	je     0x14002206f
   140022053:	mov    BYTE PTR [rbp+0x40],cl
   140022056:	lea    rdx,[rbp+0x40]
   14002205a:	lea    rcx,[rdi+0x28]
   14002205e:	mov    r8,r14
   140022061:	call   0x1400049b8
   140022066:	cmp    rax,0xffffffffffffffff
   14002206a:	setne  al
   14002206d:	jmp    0x140022085
   14002206f:	cmp    BYTE PTR [rdi+0x51],r13b
   140022073:	je     0x140022082
   140022075:	movsx  ecx,cl
   140022078:	call   QWORD PTR [rip+0x276d2]        # 0x140049750
   14002207e:	test   eax,eax
   140022080:	jmp    0x14002206a
   140022082:	mov    al,r13b
   140022085:	test   al,al
   140022087:	jne    0x1400220d9
   140022089:	mov    rax,QWORD PTR [rsi]
   14002208c:	mov    cl,BYTE PTR [rax]
   14002208e:	cmp    QWORD PTR [rdi+0x10],r13
   140022092:	je     0x1400220af
   140022094:	mov    BYTE PTR [rbp+0x48],cl
   140022097:	lea    rdx,[rbp+0x48]
   14002209b:	mov    r8,r14
   14002209e:	mov    rcx,rdi
   1400220a1:	call   0x1400049b8
   1400220a6:	cmp    rax,0xffffffffffffffff
   1400220aa:	setne  al
   1400220ad:	jmp    0x1400220c5
   1400220af:	cmp    BYTE PTR [rdi+0x50],r13b
   1400220b3:	je     0x1400220c2
   1400220b5:	movsx  ecx,cl
   1400220b8:	call   QWORD PTR [rip+0x276a2]        # 0x140049760
   1400220be:	test   eax,eax
   1400220c0:	jmp    0x1400220aa
   1400220c2:	mov    al,r13b
   1400220c5:	test   al,al
   1400220c7:	jne    0x1400220d9
   1400220c9:	add    QWORD PTR [rsi],r14
   1400220cc:	mov    rax,QWORD PTR [rbp+0x50]
   1400220d0:	cmp    QWORD PTR [rsi],rax
   1400220d3:	jne    0x140022048
   1400220d9:	mov    BYTE PTR [rdi+0x58],r14b
   1400220dd:	mov    rdx,QWORD PTR [rsi]
   1400220e0:	mov    r8,r12
   1400220e3:	mov    rcx,rbx
   1400220e6:	call   0x1400222e8
   1400220eb:	mov    al,r14b
   1400220ee:	add    rsp,0x20
   1400220f2:	pop    r14
   1400220f4:	pop    r13
   1400220f6:	pop    r12
   1400220f8:	pop    rdi
   1400220f9:	pop    rsi
   1400220fa:	pop    rbx
   1400220fb:	pop    rbp
   1400220fc:	ret    
   1400220fd:	int3   
   1400220fe:	int3   
   1400220ff:	int3   
   140022100:	mov    QWORD PTR [rsp+0x8],rcx
   140022105:	push   rdi
   140022106:	sub    rsp,0x30
   14002210a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022113:	mov    QWORD PTR [rsp+0x48],rbx
   140022118:	mov    QWORD PTR [rsp+0x50],rsi
   14002211d:	mov    rbx,rcx
   140022120:	mov    rdi,QWORD PTR [rcx+0xb8]
   140022127:	test   rdi,rdi
   14002212a:	je     0x140022154
   14002212c:	mov    rsi,QWORD PTR [rcx+0xc0]
   140022133:	jmp    0x140022142
   140022135:	lea    rcx,[rdi+0x10]
   140022139:	call   0x140020e68
   14002213e:	add    rdi,0x70
   140022142:	cmp    rdi,rsi
   140022145:	jne    0x140022135
   140022147:	mov    rcx,QWORD PTR [rbx+0xb8]
   14002214e:	call   QWORD PTR [rip+0x27524]        # 0x140049678
   140022154:	and    QWORD PTR [rbx+0xb8],0x0
   14002215c:	and    QWORD PTR [rbx+0xc0],0x0
   140022164:	and    QWORD PTR [rbx+0xc8],0x0
   14002216c:	mov    rcx,QWORD PTR [rbx+0x90]
   140022173:	test   rcx,rcx
   140022176:	je     0x140022182
   140022178:	mov    rax,QWORD PTR [rbx+0x88]
   14002217f:	mov    QWORD PTR [rax],rcx
   140022182:	mov    rbx,QWORD PTR [rbx+0x8]
   140022186:	test   rbx,rbx
   140022189:	je     0x14002219c
   14002218b:	mov    rcx,rbx
   14002218e:	call   0x140020e68
   140022193:	mov    rcx,rbx
   140022196:	call   QWORD PTR [rip+0x274dc]        # 0x140049678
   14002219c:	mov    rbx,QWORD PTR [rsp+0x48]
   1400221a1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400221a6:	add    rsp,0x30
   1400221aa:	pop    rdi
   1400221ab:	ret    
   1400221ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400221b1:	push   rbx
   1400221b2:	sub    rsp,0x30
   1400221b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400221bf:	mov    rbx,rcx
   1400221c2:	mov    QWORD PTR [rcx],r9
   1400221c5:	xor    r9d,r9d
   1400221c8:	mov    QWORD PTR [rcx+0x8],r9
   1400221cc:	mov    QWORD PTR [rcx+0x18],rdx
   1400221d0:	mov    QWORD PTR [rcx+0x20],r8
   1400221d4:	mov    QWORD PTR [rcx+0x28],rdx
   1400221d8:	mov    QWORD PTR [rcx+0x30],r9
   1400221dc:	mov    QWORD PTR [rcx+0x38],r9
   1400221e0:	mov    rax,QWORD PTR [rsp+0x70]
   1400221e5:	mov    QWORD PTR [rcx+0x40],rax
   1400221e9:	mov    rdx,QWORD PTR [rsp+0x60]
   1400221ee:	mov    QWORD PTR [rcx+0x48],rdx
   1400221f2:	mov    rax,QWORD PTR [rdx]
   1400221f5:	mov    rcx,QWORD PTR [rax+0x20]
   1400221f9:	mov    QWORD PTR [rbx+0x50],rcx
   1400221fd:	mov    BYTE PTR [rbx+0x7b],r9b
   140022201:	lea    rcx,[rbx+0x88]
   140022208:	lea    rax,[rbx+0x80]
   14002220f:	mov    QWORD PTR [rax],rcx
   140022212:	mov    QWORD PTR [rcx+0x20],r9
   140022216:	mov    QWORD PTR [rcx],rax
   140022219:	mov    QWORD PTR [rcx+0x8],r9
   14002221d:	or     DWORD PTR [rcx+0x10],0xffffffff
   140022221:	mov    QWORD PTR [rcx+0x18],r9
   140022225:	mov    QWORD PTR [rbx+0xb8],r9
   14002222c:	mov    QWORD PTR [rbx+0xc0],r9
   140022233:	mov    QWORD PTR [rbx+0xc8],r9
   14002223a:	mov    r8d,DWORD PTR [rsp+0x68]
   14002223f:	mov    rcx,rbx
   140022242:	call   0x140039940
   140022247:	nop
   140022248:	mov    rax,rbx
   14002224b:	add    rsp,0x30
   14002224f:	pop    rbx
   140022250:	ret    
   140022251:	int3   
   140022252:	int3   
   140022253:	int3   
   140022254:	rex push rbx
   140022256:	sub    rsp,0x20
   14002225a:	mov    rbx,QWORD PTR [rcx]
   14002225d:	test   rbx,rbx
   140022260:	je     0x140022273
   140022262:	mov    rcx,rbx
   140022265:	call   0x140020e68
   14002226a:	mov    rcx,rbx
   14002226d:	call   QWORD PTR [rip+0x27405]        # 0x140049678
   140022273:	add    rsp,0x20
   140022277:	pop    rbx
   140022278:	ret    
   140022279:	int3   
   14002227a:	int3   
   14002227b:	int3   
   14002227c:	mov    rdx,QWORD PTR [rcx+0x8]
   140022280:	test   rdx,rdx
   140022283:	je     0x14002228b
   140022285:	mov    rax,QWORD PTR [rcx]
   140022288:	mov    QWORD PTR [rax],rdx
   14002228b:	ret    
   14002228c:	mov    QWORD PTR [rsp+0x8],rbx
   140022291:	mov    QWORD PTR [rsp+0x10],rsi
   140022296:	push   rdi
   140022297:	sub    rsp,0x20
   14002229b:	mov    rdi,QWORD PTR [rcx]
   14002229e:	mov    rbx,rcx
   1400222a1:	test   rdi,rdi
   1400222a4:	je     0x1400222c7
   1400222a6:	mov    rsi,QWORD PTR [rcx+0x8]
   1400222aa:	jmp    0x1400222b9
   1400222ac:	lea    rcx,[rdi+0x10]
   1400222b0:	call   0x140020e68
   1400222b5:	add    rdi,0x70
   1400222b9:	cmp    rdi,rsi
   1400222bc:	jne    0x1400222ac
   1400222be:	mov    rcx,QWORD PTR [rbx]
   1400222c1:	call   QWORD PTR [rip+0x273b1]        # 0x140049678
   1400222c7:	and    QWORD PTR [rbx],0x0
   1400222cb:	and    QWORD PTR [rbx+0x8],0x0
   1400222d0:	and    QWORD PTR [rbx+0x10],0x0
   1400222d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400222da:	mov    rsi,QWORD PTR [rsp+0x38]
   1400222df:	add    rsp,0x20
   1400222e3:	pop    rdi
   1400222e4:	ret    
   1400222e5:	int3   
   1400222e6:	int3   
   1400222e7:	int3   
   1400222e8:	sub    rsp,0x38
   1400222ec:	mov    r11,QWORD PTR [r8+0x18]
   1400222f0:	mov    r10,r8
   1400222f3:	cmp    r11,0x10
   1400222f7:	jb     0x1400222fc
   1400222f9:	mov    r8,QWORD PTR [r8]
   1400222fc:	add    r8,QWORD PTR [r10+0x10]
   140022300:	cmp    r11,0x10
   140022304:	jb     0x14002230b
   140022306:	mov    r9,QWORD PTR [r10]
   140022309:	jmp    0x14002230e
   14002230b:	mov    r9,r10
   14002230e:	cmp    rcx,rdx
   140022311:	jne    0x140022348
   140022313:	cmp    r11,0x10
   140022317:	jb     0x14002231e
   140022319:	mov    rcx,QWORD PTR [r10]
   14002231c:	jmp    0x140022321
   14002231e:	mov    rcx,r10
   140022321:	xor    eax,eax
   140022323:	test   r8,r8
   140022326:	jne    0x14002232d
   140022328:	mov    r8d,eax
   14002232b:	jmp    0x140022330
   14002232d:	sub    r8,r9
   140022330:	test   r9,r9
   140022333:	je     0x14002233b
   140022335:	mov    rax,r9
   140022338:	sub    rax,rcx
   14002233b:	mov    rdx,rax
   14002233e:	mov    rcx,r10
   140022341:	call   0x140002dfc
   140022346:	jmp    0x140022386
   140022348:	cmp    r11,0x10
   14002234c:	jb     0x140022353
   14002234e:	mov    r11,QWORD PTR [r10]
   140022351:	jmp    0x140022356
   140022353:	mov    r11,r10
   140022356:	xor    eax,eax
   140022358:	test   r8,r8
   14002235b:	jne    0x140022362
   14002235d:	mov    r8d,eax
   140022360:	jmp    0x140022365
   140022362:	sub    r8,r9
   140022365:	test   r9,r9
   140022368:	je     0x140022370
   14002236a:	mov    rax,r9
   14002236d:	sub    rax,r11
   140022370:	sub    rdx,rcx
   140022373:	mov    r9,rcx
   140022376:	mov    rcx,r10
   140022379:	mov    QWORD PTR [rsp+0x20],rdx
   14002237e:	mov    rdx,rax
   140022381:	call   0x1400223c8
   140022386:	add    rsp,0x38
   14002238a:	ret    
   14002238b:	int3   
   14002238c:	rex.W jmp QWORD PTR [rip+0x26f9d]        # 0x140049330
   140022393:	int3   
   140022394:	mov    QWORD PTR [rsp+0x8],rbx
   140022399:	push   rdi
   14002239a:	sub    rsp,0x20
   14002239e:	mov    ebx,edx
   1400223a0:	mov    rdi,rcx
   1400223a3:	call   QWORD PTR [rip+0x26f87]        # 0x140049330
   1400223a9:	test   bl,0x1
   1400223ac:	je     0x1400223b7
   1400223ae:	mov    rcx,rdi
   1400223b1:	call   QWORD PTR [rip+0x272c1]        # 0x140049678
   1400223b7:	mov    rax,rdi
   1400223ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400223bf:	add    rsp,0x20
   1400223c3:	pop    rdi
   1400223c4:	ret    
   1400223c5:	int3   
   1400223c6:	int3   
   1400223c7:	int3   
   1400223c8:	mov    rax,rsp
   1400223cb:	mov    QWORD PTR [rax+0x8],rbx
   1400223cf:	mov    QWORD PTR [rax+0x10],rbp
   1400223d3:	mov    QWORD PTR [rax+0x18],rsi
   1400223d7:	mov    QWORD PTR [rax+0x20],rdi
   1400223db:	push   r12
   1400223dd:	push   r13
   1400223df:	push   r14
   1400223e1:	sub    rsp,0x30
   1400223e5:	mov    r12,r9
   1400223e8:	mov    rsi,r8
   1400223eb:	mov    r14,rdx
   1400223ee:	mov    rbx,rcx
   1400223f1:	test   r9,r9
   1400223f4:	je     0x14002244e
   1400223f6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400223fb:	jb     0x140022402
   1400223fd:	mov    rax,QWORD PTR [rcx]
   140022400:	jmp    0x140022405
   140022402:	mov    rax,rcx
   140022405:	cmp    r9,rax
   140022408:	jb     0x14002244e
   14002240a:	cmp    QWORD PTR [rcx+0x18],0x10
   14002240f:	jb     0x140022414
   140022411:	mov    rcx,QWORD PTR [rcx]
   140022414:	add    rcx,QWORD PTR [rbx+0x10]
   140022418:	cmp    rcx,r9
   14002241b:	jbe    0x14002244e
   14002241d:	cmp    QWORD PTR [rbx+0x18],0x10
   140022422:	jb     0x140022429
   140022424:	mov    rax,QWORD PTR [rbx]
   140022427:	jmp    0x14002242c
   140022429:	mov    rax,rbx
   14002242c:	sub    r12,rax
   14002242f:	mov    rax,QWORD PTR [rsp+0x70]
   140022434:	mov    r9,rbx
   140022437:	mov    QWORD PTR [rsp+0x28],rax
   14002243c:	mov    rcx,rbx
   14002243f:	mov    QWORD PTR [rsp+0x20],r12
   140022444:	call   0x14001844c
   140022449:	jmp    0x1400225a5
   14002244e:	mov    rcx,QWORD PTR [rbx+0x10]
   140022452:	cmp    rcx,rdx
   140022455:	jae    0x140022465
   140022457:	lea    rcx,[rip+0x2e4d2]        # 0x140050930
   14002245e:	call   QWORD PTR [rip+0x2714c]        # 0x1400495b0
   140022464:	int3   
   140022465:	mov    rbp,QWORD PTR [rsp+0x70]
   14002246a:	mov    r13,rcx
   14002246d:	sub    r13,rdx
   140022470:	cmp    r13,r8
   140022473:	cmovb  rsi,r13
   140022477:	or     rax,0xffffffffffffffff
   14002247b:	sub    rax,rbp
   14002247e:	sub    rcx,rsi
   140022481:	cmp    rax,rcx
   140022484:	ja     0x140022494
   140022486:	lea    rcx,[rip+0x2e4bb]        # 0x140050948
   14002248d:	call   QWORD PTR [rip+0x27105]        # 0x140049598
   140022493:	int3   
   140022494:	sub    r13,rsi
   140022497:	cmp    rbp,rsi
   14002249a:	jae    0x1400224d0
   14002249c:	cmp    QWORD PTR [rbx+0x18],0x10
   1400224a1:	jb     0x1400224a8
   1400224a3:	mov    rcx,QWORD PTR [rbx]
   1400224a6:	jmp    0x1400224ab
   1400224a8:	mov    rcx,rbx
   1400224ab:	cmp    QWORD PTR [rbx+0x18],0x10
   1400224b0:	jb     0x1400224b7
   1400224b2:	mov    rax,QWORD PTR [rbx]
   1400224b5:	jmp    0x1400224ba
   1400224b7:	mov    rax,rbx
   1400224ba:	add    rdx,rcx
   1400224bd:	lea    rcx,[rax+r14*1]
   1400224c1:	mov    r8,r13
   1400224c4:	add    rcx,rbp
   1400224c7:	add    rdx,rsi
   1400224ca:	call   QWORD PTR [rip+0x27120]        # 0x1400495f0
   1400224d0:	test   rbp,rbp
   1400224d3:	jne    0x1400224de
   1400224d5:	test   rsi,rsi
   1400224d8:	je     0x1400225a2
   1400224de:	mov    r8,QWORD PTR [rbx+0x10]
   1400224e2:	mov    rdi,r8
   1400224e5:	sub    rdi,rsi
   1400224e8:	add    rdi,rbp
   1400224eb:	cmp    rdi,0xfffffffffffffffe
   1400224ef:	jbe    0x1400224ff
   1400224f1:	lea    rcx,[rip+0x2e450]        # 0x140050948
   1400224f8:	call   QWORD PTR [rip+0x2709a]        # 0x140049598
   1400224fe:	int3   
   1400224ff:	cmp    QWORD PTR [rbx+0x18],rdi
   140022503:	jae    0x140022512
   140022505:	mov    rdx,rdi
   140022508:	mov    rcx,rbx
   14002250b:	call   0x140005750
   140022510:	jmp    0x14002252d
   140022512:	test   rdi,rdi
   140022515:	jne    0x140022532
   140022517:	and    QWORD PTR [rbx+0x10],rdi
   14002251b:	cmp    QWORD PTR [rbx+0x18],0x10
   140022520:	jb     0x140022527
   140022522:	mov    rax,QWORD PTR [rbx]
   140022525:	jmp    0x14002252a
   140022527:	mov    rax,rbx
   14002252a:	mov    BYTE PTR [rax],0x0
   14002252d:	test   rdi,rdi
   140022530:	je     0x1400225a2
   140022532:	cmp    rsi,rbp
   140022535:	jae    0x14002256c
   140022537:	cmp    QWORD PTR [rbx+0x18],0x10
   14002253c:	jb     0x140022543
   14002253e:	mov    rcx,QWORD PTR [rbx]
   140022541:	jmp    0x140022546
   140022543:	mov    rcx,rbx
   140022546:	cmp    QWORD PTR [rbx+0x18],0x10
   14002254b:	jb     0x140022552
   14002254d:	mov    rax,QWORD PTR [rbx]
   140022550:	jmp    0x140022555
   140022552:	mov    rax,rbx
   140022555:	lea    rdx,[rcx+r14*1]
   140022559:	lea    rcx,[rax+r14*1]
   14002255d:	mov    r8,r13
   140022560:	add    rcx,rbp
   140022563:	add    rdx,rsi
   140022566:	call   QWORD PTR [rip+0x27084]        # 0x1400495f0
   14002256c:	cmp    QWORD PTR [rbx+0x18],0x10
   140022571:	jb     0x140022578
   140022573:	mov    rax,QWORD PTR [rbx]
   140022576:	jmp    0x14002257b
   140022578:	mov    rax,rbx
   14002257b:	lea    rcx,[rax+r14*1]
   14002257f:	mov    r8,rbp
   140022582:	mov    rdx,r12
   140022585:	call   QWORD PTR [rip+0x2733d]        # 0x1400498c8
   14002258b:	cmp    QWORD PTR [rbx+0x18],0x10
   140022590:	mov    QWORD PTR [rbx+0x10],rdi
   140022594:	jb     0x14002259b
   140022596:	mov    rax,QWORD PTR [rbx]
   140022599:	jmp    0x14002259e
   14002259b:	mov    rax,rbx
   14002259e:	mov    BYTE PTR [rax+rdi*1],0x0
   1400225a2:	mov    rax,rbx
   1400225a5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400225aa:	mov    rbp,QWORD PTR [rsp+0x58]
   1400225af:	mov    rsi,QWORD PTR [rsp+0x60]
   1400225b4:	mov    rdi,QWORD PTR [rsp+0x68]
   1400225b9:	add    rsp,0x30
   1400225bd:	pop    r14
   1400225bf:	pop    r13
   1400225c1:	pop    r12
   1400225c3:	ret    
   1400225c4:	cmp    rcx,rdx
   1400225c7:	je     0x1400225f5
   1400225c9:	mov    QWORD PTR [rsp+0x8],rbx
   1400225ce:	push   rdi
   1400225cf:	sub    rsp,0x20
   1400225d3:	mov    rdi,rdx
   1400225d6:	mov    rbx,rcx
   1400225d9:	lea    rcx,[rbx+0x10]
   1400225dd:	call   0x140020e68
   1400225e2:	add    rbx,0x70
   1400225e6:	cmp    rbx,rdi
   1400225e9:	jne    0x1400225d9
   1400225eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400225f0:	add    rsp,0x20
   1400225f4:	pop    rdi
   1400225f5:	ret    
   1400225f6:	int3   
   1400225f7:	int3   
   1400225f8:	rex push rbx
   1400225fa:	sub    rsp,0x20
   1400225fe:	mov    rbx,rcx
   140022601:	call   0x140022630
   140022606:	lea    rax,[rip+0x27d8b]        # 0x14004a398
   14002260d:	mov    QWORD PTR [rbx],rax
   140022610:	lea    rax,[rip+0x27d71]        # 0x14004a388
   140022617:	mov    QWORD PTR [rbx+0x28],rax
   14002261b:	lea    rax,[rip+0x27d46]        # 0x14004a368
   140022622:	mov    QWORD PTR [rbx+0x50],rax
   140022626:	mov    rax,rbx
   140022629:	add    rsp,0x20
   14002262d:	pop    rbx
   14002262e:	ret    
   14002262f:	int3   
   140022630:	mov    QWORD PTR [rsp+0x8],rcx
   140022635:	push   rdi
   140022636:	sub    rsp,0x30
   14002263a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022643:	mov    QWORD PTR [rsp+0x48],rbx
   140022648:	mov    rdi,rdx
   14002264b:	mov    rbx,rcx
   14002264e:	call   QWORD PTR [rip+0x27254]        # 0x1400498a8
   140022654:	lea    r11,[rip+0x27bf5]        # 0x14004a250
   14002265b:	mov    QWORD PTR [rbx],r11
   14002265e:	mov    rax,QWORD PTR [rdi+0x18]
   140022662:	mov    QWORD PTR [rbx+0x18],rax
   140022666:	mov    rax,QWORD PTR [rdi+0x20]
   14002266a:	mov    QWORD PTR [rbx+0x20],rax
   14002266e:	lea    rax,[rip+0x27c1b]        # 0x14004a290
   140022675:	mov    QWORD PTR [rbx+0x28],rax
   140022679:	mov    rcx,QWORD PTR [rdi+0x30]
   14002267d:	mov    QWORD PTR [rbx+0x30],rcx
   140022681:	test   rcx,rcx
   140022684:	je     0x14002268c
   140022686:	mov    rax,QWORD PTR [rcx]
   140022689:	call   QWORD PTR [rax+0x18]
   14002268c:	mov    rax,QWORD PTR [rdi+0x38]
   140022690:	mov    QWORD PTR [rbx+0x38],rax
   140022694:	mov    rax,QWORD PTR [rdi+0x40]
   140022698:	mov    QWORD PTR [rbx+0x40],rax
   14002269c:	mov    eax,DWORD PTR [rdi+0x48]
   14002269f:	mov    DWORD PTR [rbx+0x48],eax
   1400226a2:	lea    rax,[rip+0x27c5f]        # 0x14004a308
   1400226a9:	mov    QWORD PTR [rbx],rax
   1400226ac:	lea    rax,[rip+0x27c45]        # 0x14004a2f8
   1400226b3:	mov    QWORD PTR [rbx+0x28],rax
   1400226b7:	mov    rax,rbx
   1400226ba:	mov    rbx,QWORD PTR [rsp+0x48]
   1400226bf:	add    rsp,0x30
   1400226c3:	pop    rdi
   1400226c4:	ret    
   1400226c5:	int3   
   1400226c6:	int3   
   1400226c7:	int3   
   1400226c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400226cd:	push   rdi
   1400226ce:	sub    rsp,0x20
   1400226d2:	mov    rbx,rdx
   1400226d5:	mov    rdi,rcx
   1400226d8:	call   QWORD PTR [rip+0x271ca]        # 0x1400498a8
   1400226de:	lea    r11,[rip+0x27b6b]        # 0x14004a250
   1400226e5:	mov    QWORD PTR [rdi],r11
   1400226e8:	mov    rax,QWORD PTR [rbx+0x18]
   1400226ec:	mov    QWORD PTR [rdi+0x18],rax
   1400226f0:	mov    rax,QWORD PTR [rbx+0x20]
   1400226f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400226f9:	mov    QWORD PTR [rdi+0x20],rax
   1400226fd:	mov    rax,rdi
   140022700:	add    rsp,0x20
   140022704:	pop    rdi
   140022705:	ret    
   140022706:	int3   
   140022707:	int3   
   140022708:	mov    QWORD PTR [rsp+0x8],rbx
   14002270d:	push   rdi
   14002270e:	sub    rsp,0x20
   140022712:	lea    rax,[rip+0x27aef]        # 0x14004a208
   140022719:	mov    rbx,rcx
   14002271c:	mov    edi,edx
   14002271e:	mov    QWORD PTR [rcx+0x50],rax
   140022722:	lea    rax,[rip+0x27bdf]        # 0x14004a308
   140022729:	mov    QWORD PTR [rcx],rax
   14002272c:	lea    rax,[rip+0x27b5d]        # 0x14004a290
   140022733:	mov    QWORD PTR [rcx+0x28],rax
   140022737:	mov    rcx,QWORD PTR [rcx+0x30]
   14002273b:	test   rcx,rcx
   14002273e:	je     0x14002274f
   140022740:	mov    rax,QWORD PTR [rcx]
   140022743:	call   QWORD PTR [rax+0x20]
   140022746:	test   al,al
   140022748:	je     0x14002274f
   14002274a:	and    QWORD PTR [rbx+0x30],0x0
   14002274f:	lea    rax,[rip+0x27afa]        # 0x14004a250
   140022756:	mov    rcx,rbx
   140022759:	mov    QWORD PTR [rbx],rax
   14002275c:	call   QWORD PTR [rip+0x27156]        # 0x1400498b8
   140022762:	test   dil,0x1
   140022766:	je     0x140022771
   140022768:	mov    rcx,rbx
   14002276b:	call   QWORD PTR [rip+0x26f07]        # 0x140049678
   140022771:	mov    rax,rbx
   140022774:	mov    rbx,QWORD PTR [rsp+0x30]
   140022779:	add    rsp,0x20
   14002277d:	pop    rdi
   14002277e:	ret    
   14002277f:	int3   
   140022780:	mov    QWORD PTR [rsp+0x8],rbx
   140022785:	push   rdi
   140022786:	sub    rsp,0x20
   14002278a:	lea    rax,[rip+0x27b77]        # 0x14004a308
   140022791:	mov    rbx,rcx
   140022794:	mov    edi,edx
   140022796:	mov    QWORD PTR [rcx],rax
   140022799:	lea    rax,[rip+0x27af0]        # 0x14004a290
   1400227a0:	mov    QWORD PTR [rcx+0x28],rax
   1400227a4:	mov    rcx,QWORD PTR [rcx+0x30]
   1400227a8:	test   rcx,rcx
   1400227ab:	je     0x1400227bc
   1400227ad:	mov    rax,QWORD PTR [rcx]
   1400227b0:	call   QWORD PTR [rax+0x20]
   1400227b3:	test   al,al
   1400227b5:	je     0x1400227bc
   1400227b7:	and    QWORD PTR [rbx+0x30],0x0
   1400227bc:	lea    rax,[rip+0x27a8d]        # 0x14004a250
   1400227c3:	mov    rcx,rbx
   1400227c6:	mov    QWORD PTR [rbx],rax
   1400227c9:	call   QWORD PTR [rip+0x270e9]        # 0x1400498b8
   1400227cf:	test   dil,0x1
   1400227d3:	je     0x1400227de
   1400227d5:	mov    rcx,rbx
   1400227d8:	call   QWORD PTR [rip+0x26e9a]        # 0x140049678
   1400227de:	mov    rax,rbx
   1400227e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400227e6:	add    rsp,0x20
   1400227ea:	pop    rdi
   1400227eb:	ret    
   1400227ec:	rex push rbx
   1400227ee:	sub    rsp,0x20
   1400227f2:	lea    rax,[rip+0x27b0f]        # 0x14004a308
   1400227f9:	mov    rbx,rcx
   1400227fc:	mov    QWORD PTR [rcx],rax
   1400227ff:	lea    rax,[rip+0x27a8a]        # 0x14004a290
   140022806:	mov    QWORD PTR [rcx+0x28],rax
   14002280a:	mov    rcx,QWORD PTR [rcx+0x30]
   14002280e:	test   rcx,rcx
   140022811:	je     0x140022822
   140022813:	mov    rax,QWORD PTR [rcx]
   140022816:	call   QWORD PTR [rax+0x20]
   140022819:	test   al,al
   14002281b:	je     0x140022822
   14002281d:	and    QWORD PTR [rbx+0x30],0x0
   140022822:	lea    rax,[rip+0x27a27]        # 0x14004a250
   140022829:	mov    rcx,rbx
   14002282c:	mov    QWORD PTR [rbx],rax
   14002282f:	add    rsp,0x20
   140022833:	pop    rbx
   140022834:	rex.W jmp QWORD PTR [rip+0x2707d]        # 0x1400498b8
   14002283b:	int3   
   14002283c:	rex push rbx
   14002283e:	sub    rsp,0x20
   140022842:	lea    rax,[rip+0x279bf]        # 0x14004a208
   140022849:	mov    rbx,rcx
   14002284c:	mov    QWORD PTR [rcx+0x50],rax
   140022850:	lea    rax,[rip+0x27ab1]        # 0x14004a308
   140022857:	mov    QWORD PTR [rcx],rax
   14002285a:	lea    rax,[rip+0x27a2f]        # 0x14004a290
   140022861:	mov    QWORD PTR [rcx+0x28],rax
   140022865:	mov    rcx,QWORD PTR [rcx+0x30]
   140022869:	test   rcx,rcx
   14002286c:	je     0x14002287d
   14002286e:	mov    rax,QWORD PTR [rcx]
   140022871:	call   QWORD PTR [rax+0x20]
   140022874:	test   al,al
   140022876:	je     0x14002287d
   140022878:	and    QWORD PTR [rbx+0x30],0x0
   14002287d:	lea    rax,[rip+0x279cc]        # 0x14004a250
   140022884:	mov    rcx,rbx
   140022887:	mov    QWORD PTR [rbx],rax
   14002288a:	add    rsp,0x20
   14002288e:	pop    rbx
   14002288f:	rex.W jmp QWORD PTR [rip+0x27022]        # 0x1400498b8
   140022896:	int3   
   140022897:	int3   
   140022898:	rex push rdi
   14002289a:	sub    rsp,0x30
   14002289e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400228a7:	mov    QWORD PTR [rsp+0x40],rbx
   1400228ac:	mov    QWORD PTR [rsp+0x50],rsi
   1400228b1:	mov    rsi,rcx
   1400228b4:	mov    ecx,0x58
   1400228b9:	call   QWORD PTR [rip+0x26dd9]        # 0x140049698
   1400228bf:	mov    rbx,rax
   1400228c2:	mov    QWORD PTR [rsp+0x48],rax
   1400228c7:	xor    edi,edi
   1400228c9:	test   rax,rax
   1400228cc:	je     0x1400228fc
   1400228ce:	lea    rdx,[rsi-0x50]
   1400228d2:	mov    rcx,rax
   1400228d5:	call   0x140022630
   1400228da:	lea    rax,[rip+0x27ab7]        # 0x14004a398
   1400228e1:	mov    QWORD PTR [rbx],rax
   1400228e4:	lea    rax,[rip+0x27a9d]        # 0x14004a388
   1400228eb:	mov    QWORD PTR [rbx+0x28],rax
   1400228ef:	lea    rax,[rip+0x27a72]        # 0x14004a368
   1400228f6:	mov    QWORD PTR [rbx+0x50],rax
   1400228fa:	jmp    0x1400228ff
   1400228fc:	mov    rbx,rdi
   1400228ff:	test   rbx,rbx
   140022902:	je     0x140022908
   140022904:	lea    rdi,[rbx+0x50]
   140022908:	mov    rax,rdi
   14002290b:	mov    rbx,QWORD PTR [rsp+0x40]
   140022910:	mov    rsi,QWORD PTR [rsp+0x50]
   140022915:	add    rsp,0x30
   140022919:	pop    rdi
   14002291a:	ret    
   14002291b:	int3   
   14002291c:	sub    rsp,0x88
   140022923:	lea    rdx,[rcx-0x50]
   140022927:	lea    rcx,[rsp+0x20]
   14002292c:	call   0x140022630
   140022931:	lea    rax,[rip+0x27a50]        # 0x14004a388
   140022938:	lea    r11,[rip+0x27a59]        # 0x14004a398
   14002293f:	mov    QWORD PTR [rsp+0x48],rax
   140022944:	lea    rax,[rip+0x27a1d]        # 0x14004a368
   14002294b:	lea    rdx,[rip+0x4143e]        # 0x140063d90
   140022952:	lea    rcx,[rsp+0x20]
   140022957:	mov    QWORD PTR [rsp+0x20],r11
   14002295c:	mov    QWORD PTR [rsp+0x70],rax
   140022961:	call   0x14002b560
   140022966:	int3   
   140022967:	int3   
   140022968:	mov    QWORD PTR [rsp+0x10],rbx
   14002296d:	push   rdi
   14002296e:	sub    rsp,0x20
   140022972:	and    DWORD PTR [rsp+0x30],0x0
   140022977:	mov    rbx,rdx
   14002297a:	mov    rdi,rcx
   14002297d:	call   QWORD PTR [rip+0x26f25]        # 0x1400498a8
   140022983:	lea    r11,[rip+0x278c6]        # 0x14004a250
   14002298a:	mov    QWORD PTR [rdi],r11
   14002298d:	mov    rax,QWORD PTR [rbx+0x18]
   140022991:	mov    QWORD PTR [rdi+0x18],rax
   140022995:	mov    rax,QWORD PTR [rbx+0x20]
   140022999:	mov    rbx,QWORD PTR [rsp+0x38]
   14002299e:	mov    QWORD PTR [rdi+0x20],rax
   1400229a2:	lea    rax,[rip+0x278e7]        # 0x14004a290
   1400229a9:	mov    QWORD PTR [rdi+0x28],rax
   1400229ad:	and    QWORD PTR [rdi+0x30],0x0
   1400229b2:	and    QWORD PTR [rdi+0x38],0x0
   1400229b7:	and    QWORD PTR [rdi+0x40],0x0
   1400229bc:	or     DWORD PTR [rdi+0x48],0xffffffff
   1400229c0:	lea    rax,[rip+0x27941]        # 0x14004a308
   1400229c7:	mov    QWORD PTR [rdi],rax
   1400229ca:	lea    rax,[rip+0x27927]        # 0x14004a2f8
   1400229d1:	mov    QWORD PTR [rdi+0x28],rax
   1400229d5:	mov    rax,rdi
   1400229d8:	add    rsp,0x20
   1400229dc:	pop    rdi
   1400229dd:	ret    
   1400229de:	int3   
   1400229df:	int3   
   1400229e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400229e5:	push   rdi
   1400229e6:	sub    rsp,0x30
   1400229ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400229f3:	mov    QWORD PTR [rsp+0x50],rbx
   1400229f8:	mov    QWORD PTR [rsp+0x58],rsi
   1400229fd:	mov    rsi,rdx
   140022a00:	mov    rdi,rcx
   140022a03:	xor    ebx,ebx
   140022a05:	mov    DWORD PTR [rsp+0x48],ebx
   140022a09:	call   0x140022630
   140022a0e:	nop
   140022a0f:	lea    rax,[rip+0x27982]        # 0x14004a398
   140022a16:	mov    QWORD PTR [rdi],rax
   140022a19:	lea    rcx,[rdi+0x28]
   140022a1d:	lea    rax,[rip+0x27964]        # 0x14004a388
   140022a24:	mov    QWORD PTR [rcx],rax
   140022a27:	lea    rax,[rip+0x2793a]        # 0x14004a368
   140022a2e:	mov    QWORD PTR [rdi+0x50],rax
   140022a32:	test   rsi,rsi
   140022a35:	je     0x140022a3b
   140022a37:	lea    rbx,[rsi+0x28]
   140022a3b:	mov    rdx,rbx
   140022a3e:	call   0x1400010f8
   140022a43:	nop
   140022a44:	mov    rax,rdi
   140022a47:	mov    rbx,QWORD PTR [rsp+0x50]
   140022a4c:	mov    rsi,QWORD PTR [rsp+0x58]
   140022a51:	add    rsp,0x30
   140022a55:	pop    rdi
   140022a56:	ret    
   140022a57:	int3   
   140022a58:	add    rcx,0x10
   140022a5c:	jmp    0x140020e68
   140022a61:	int3   
   140022a62:	int3   
   140022a63:	int3   
   140022a64:	sub    rcx,0x28
   140022a68:	jmp    0x140022708
   140022a6d:	int3   
   140022a6e:	int3   
   140022a6f:	int3   
   140022a70:	sub    rcx,0x18
   140022a74:	jmp    0x140020b00
   140022a79:	int3   
   140022a7a:	int3   
   140022a7b:	int3   
   140022a7c:	sub    rcx,0x18
   140022a80:	jmp    0x140020d94
   140022a85:	int3   
   140022a86:	int3   
   140022a87:	int3   
   140022a88:	sub    rcx,0x18
   140022a8c:	jmp    0x140020cc0
   140022a91:	int3   
   140022a92:	int3   
   140022a93:	int3   
   140022a94:	sub    rcx,0x18
   140022a98:	jmp    0x140020e04
   140022a9d:	int3   
   140022a9e:	int3   
   140022a9f:	int3   
   140022aa0:	sub    rcx,0x18
   140022aa4:	jmp    0x140020d30
   140022aa9:	int3   
   140022aaa:	int3   
   140022aab:	int3   
   140022aac:	sub    rcx,0x18
   140022ab0:	jmp    0x140020b64
   140022ab5:	int3   
   140022ab6:	int3   
   140022ab7:	int3   
   140022ab8:	sub    rcx,0x50
   140022abc:	jmp    0x140022708
   140022ac1:	int3   
   140022ac2:	int3   
   140022ac3:	int3   
   140022ac4:	sub    rcx,0x18
   140022ac8:	jmp    0x140020a90
   140022acd:	int3   
   140022ace:	int3   
   140022acf:	int3   
   140022ad0:	sub    rcx,0x40
   140022ad4:	jmp    0x140020d94
   140022ad9:	int3   
   140022ada:	int3   
   140022adb:	int3   
   140022adc:	sub    rcx,0x40
   140022ae0:	jmp    0x140020cc0
   140022ae5:	int3   
   140022ae6:	int3   
   140022ae7:	int3   
   140022ae8:	sub    rcx,0x28
   140022aec:	jmp    0x140022780
   140022af1:	int3   
   140022af2:	int3   
   140022af3:	int3   
   140022af4:	sub    rcx,0x40
   140022af8:	jmp    0x140020b64
   140022afd:	int3   
   140022afe:	int3   
   140022aff:	int3   
   140022b00:	sub    rcx,0x40
   140022b04:	jmp    0x140020a90
   140022b09:	int3   
   140022b0a:	int3   
   140022b0b:	int3   
   140022b0c:	sub    rcx,0x18
   140022b10:	jmp    0x140020bd4
   140022b15:	int3   
   140022b16:	int3   
   140022b17:	int3   
   140022b18:	rex push rbx
   140022b1a:	sub    rsp,0x40
   140022b1e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022b27:	xor    ebx,ebx
   140022b29:	mov    QWORD PTR [rsp+0x50],rbx
   140022b2e:	mov    ecx,0x138
   140022b33:	call   QWORD PTR [rip+0x26b5f]        # 0x140049698
   140022b39:	mov    QWORD PTR [rsp+0x58],rax
   140022b3e:	test   rax,rax
   140022b41:	je     0x140022b4e
   140022b43:	mov    rcx,rax
   140022b46:	call   0x140022c84
   140022b4b:	mov    rbx,rax
   140022b4e:	mov    QWORD PTR [rsp+0x50],rbx
   140022b53:	mov    rax,QWORD PTR [rsp+0x50]
   140022b58:	add    rsp,0x40
   140022b5c:	pop    rbx
   140022b5d:	ret    
   140022b5e:	int3   
   140022b5f:	int3   
   140022b60:	mov    QWORD PTR [rsp+0x8],rbx
   140022b65:	push   rdi
   140022b66:	sub    rsp,0x20
   140022b6a:	mov    ebx,edx
   140022b6c:	mov    rdi,rcx
   140022b6f:	call   0x140022b90
   140022b74:	test   bl,0x1
   140022b77:	je     0x140022b82
   140022b79:	mov    rcx,rdi
   140022b7c:	call   QWORD PTR [rip+0x26af6]        # 0x140049678
   140022b82:	mov    rax,rdi
   140022b85:	mov    rbx,QWORD PTR [rsp+0x30]
   140022b8a:	add    rsp,0x20
   140022b8e:	pop    rdi
   140022b8f:	ret    
   140022b90:	mov    QWORD PTR [rsp+0x8],rcx
   140022b95:	push   rdi
   140022b96:	sub    rsp,0x30
   140022b9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022ba3:	mov    QWORD PTR [rsp+0x50],rbx
   140022ba8:	mov    rbx,rcx
   140022bab:	lea    rax,[rip+0x2f39e]        # 0x140051f50
   140022bb2:	mov    QWORD PTR [rcx],rax
   140022bb5:	lea    rdi,[rcx+0x8]
   140022bb9:	mov    rcx,rdi
   140022bbc:	call   0x140003878
   140022bc1:	lea    rcx,[rip+0x2dd2d]        # 0x1400508f5
   140022bc8:	call   QWORD PTR [rip+0x26a3a]        # 0x140049608
   140022bce:	mov    r8,rax
   140022bd1:	lea    rdx,[rip+0x2dd1d]        # 0x1400508f5
   140022bd8:	lea    rcx,[rbx+0x28]
   140022bdc:	call   0x140005154
   140022be1:	nop
   140022be2:	cmp    QWORD PTR [rbx+0x40],0x10
   140022be7:	jb     0x140022bf3
   140022be9:	mov    rcx,QWORD PTR [rbx+0x28]
   140022bed:	call   QWORD PTR [rip+0x26a85]        # 0x140049678
   140022bf3:	mov    QWORD PTR [rbx+0x40],0xf
   140022bfb:	and    QWORD PTR [rbx+0x38],0x0
   140022c00:	mov    BYTE PTR [rbx+0x28],0x0
   140022c04:	mov    QWORD PTR [rsp+0x40],rdi
   140022c09:	mov    r8,QWORD PTR [rdi+0x8]
   140022c0d:	mov    r9,r8
   140022c10:	mov    r8,QWORD PTR [r8]
   140022c13:	lea    rdx,[rsp+0x48]
   140022c18:	mov    rcx,rdi
   140022c1b:	call   0x140004a78
   140022c20:	nop
   140022c21:	mov    rcx,QWORD PTR [rdi+0x8]
   140022c25:	mov    rbx,QWORD PTR [rsp+0x50]
   140022c2a:	add    rsp,0x30
   140022c2e:	pop    rdi
   140022c2f:	rex.W jmp QWORD PTR [rip+0x26a42]        # 0x140049678
   140022c36:	int3   
   140022c37:	int3   
   140022c38:	rex push rbx
   140022c3a:	sub    rsp,0x20
   140022c3e:	cmp    BYTE PTR [rcx+0x51],0x0
   140022c42:	mov    rbx,rcx
   140022c45:	je     0x140022c4c
   140022c47:	mov    rax,QWORD PTR [rcx]
   140022c4a:	call   QWORD PTR [rax]
   140022c4c:	lea    rcx,[rbx+0x8]
   140022c50:	call   0x140003878
   140022c55:	lea    rcx,[rip+0x2dc99]        # 0x1400508f5
   140022c5c:	call   QWORD PTR [rip+0x269a6]        # 0x140049608
   140022c62:	lea    rcx,[rbx+0x28]
   140022c66:	lea    rdx,[rip+0x2dc88]        # 0x1400508f5
   140022c6d:	mov    r8,rax
   140022c70:	call   0x140005154
   140022c75:	mov    WORD PTR [rbx+0x50],0x0
   140022c7b:	mov    al,0x1
   140022c7d:	add    rsp,0x20
   140022c81:	pop    rbx
   140022c82:	ret    
   140022c83:	int3   
   140022c84:	mov    r11,rsp
   140022c87:	mov    QWORD PTR [r11+0x8],rcx
   140022c8b:	push   rdi
   140022c8c:	sub    rsp,0x30
   140022c90:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022c99:	mov    QWORD PTR [r11+0x18],rbx
   140022c9d:	mov    QWORD PTR [r11+0x20],rsi
   140022ca1:	mov    rdi,rcx
   140022ca4:	lea    rax,[rip+0x2f2a5]        # 0x140051f50
   140022cab:	mov    QWORD PTR [rcx],rax
   140022cae:	add    rcx,0x8
   140022cb2:	lea    r8,[r11+0x10]
   140022cb6:	lea    rdx,[r11+0x10]
   140022cba:	call   0x140005454
   140022cbf:	nop
   140022cc0:	mov    QWORD PTR [rdi+0x40],0xf
   140022cc8:	xor    esi,esi
   140022cca:	mov    QWORD PTR [rdi+0x38],rsi
   140022cce:	mov    BYTE PTR [rdi+0x28],sil
   140022cd2:	lea    rcx,[rip+0x2dc1c]        # 0x1400508f5
   140022cd9:	call   QWORD PTR [rip+0x26929]        # 0x140049608
   140022cdf:	mov    r8,rax
   140022ce2:	lea    rdx,[rip+0x2dc0c]        # 0x1400508f5
   140022ce9:	lea    rcx,[rdi+0x28]
   140022ced:	call   0x140005154
   140022cf2:	mov    WORD PTR [rdi+0x50],si
   140022cf6:	lea    rax,[rip+0x2f283]        # 0x140051f80
   140022cfd:	mov    QWORD PTR [rdi],rax
   140022d00:	lea    eax,[rsi+0x7]
   140022d03:	mov    QWORD PTR [rdi+0x100],rax
   140022d0a:	mov    QWORD PTR [rdi+0xf8],rsi
   140022d11:	mov    WORD PTR [rdi+0xe8],si
   140022d18:	mov    QWORD PTR [rdi+0x128],rax
   140022d1f:	mov    QWORD PTR [rdi+0x120],rsi
   140022d26:	mov    WORD PTR [rdi+0x110],si
   140022d2d:	mov    QWORD PTR [rdi+0x58],rsi
   140022d31:	mov    rax,rdi
   140022d34:	mov    rbx,QWORD PTR [rsp+0x50]
   140022d39:	mov    rsi,QWORD PTR [rsp+0x58]
   140022d3e:	add    rsp,0x30
   140022d42:	pop    rdi
   140022d43:	ret    
   140022d44:	mov    QWORD PTR [rsp+0x8],rbx
   140022d49:	push   rdi
   140022d4a:	sub    rsp,0x20
   140022d4e:	mov    ebx,edx
   140022d50:	mov    rdi,rcx
   140022d53:	call   0x140022d74
   140022d58:	test   bl,0x1
   140022d5b:	je     0x140022d66
   140022d5d:	mov    rcx,rdi
   140022d60:	call   QWORD PTR [rip+0x26912]        # 0x140049678
   140022d66:	mov    rax,rdi
   140022d69:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d6e:	add    rsp,0x20
   140022d72:	pop    rdi
   140022d73:	ret    
   140022d74:	mov    QWORD PTR [rsp+0x8],rcx
   140022d79:	push   rbx
   140022d7a:	sub    rsp,0x30
   140022d7e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022d87:	mov    rbx,rcx
   140022d8a:	lea    rax,[rip+0x2f1ef]        # 0x140051f80
   140022d91:	mov    QWORD PTR [rcx],rax
   140022d94:	mov    rcx,QWORD PTR [rcx+0x58]
   140022d98:	test   rcx,rcx
   140022d9b:	je     0x140022da8
   140022d9d:	call   QWORD PTR [rip+0x268c5]        # 0x140049668
   140022da3:	and    QWORD PTR [rbx+0x58],0x0
   140022da8:	mov    rcx,rbx
   140022dab:	call   0x140022dc8
   140022db0:	nop
   140022db1:	lea    rcx,[rbx+0x68]
   140022db5:	call   0x14000e7ec
   140022dba:	nop
   140022dbb:	mov    rcx,rbx
   140022dbe:	add    rsp,0x30
   140022dc2:	pop    rbx
   140022dc3:	jmp    0x140022b90
   140022dc8:	mov    rax,rsp
   140022dcb:	push   rbp
   140022dcc:	lea    rbp,[rax-0x5f]
   140022dd0:	sub    rsp,0xb0
   140022dd7:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   140022ddf:	mov    QWORD PTR [rax+0x10],rbx
   140022de3:	mov    QWORD PTR [rax+0x18],rdi
   140022de7:	mov    QWORD PTR [rax+0x20],r12
   140022deb:	mov    rax,QWORD PTR [rip+0x453fe]        # 0x1400681f0
   140022df2:	xor    rax,rsp
   140022df5:	mov    QWORD PTR [rbp+0x47],rax
   140022df9:	mov    rdi,rcx
   140022dfc:	mov    r12d,0xf
   140022e02:	mov    QWORD PTR [rbp+0x37],r12
   140022e06:	and    QWORD PTR [rbp+0x2f],0x0
   140022e0b:	mov    BYTE PTR [rbp+0x1f],0x0
   140022e0f:	lea    rcx,[rip+0x2edca]        # 0x140051be0
   140022e16:	call   QWORD PTR [rip+0x267ec]        # 0x140049608
   140022e1c:	mov    r8,rax
   140022e1f:	lea    rdx,[rip+0x2edba]        # 0x140051be0
   140022e26:	lea    rcx,[rbp+0x1f]
   140022e2a:	call   0x140005154
   140022e2f:	nop
   140022e30:	mov    QWORD PTR [rbp+0xf],r12
   140022e34:	and    QWORD PTR [rbp+0x7],0x0
   140022e39:	mov    BYTE PTR [rbp-0x9],0x0
   140022e3d:	lea    rcx,[rip+0x2ed8c]        # 0x140051bd0
   140022e44:	call   QWORD PTR [rip+0x267be]        # 0x140049608
   140022e4a:	mov    r8,rax
   140022e4d:	lea    rdx,[rip+0x2ed7c]        # 0x140051bd0
   140022e54:	lea    rcx,[rbp-0x9]
   140022e58:	call   0x140005154
   140022e5d:	nop
   140022e5e:	lea    rcx,[rbp-0x9]
   140022e62:	call   0x140011ed0
   140022e67:	mov    rbx,rax
   140022e6a:	mov    QWORD PTR [rbp-0x21],r12
   140022e6e:	and    QWORD PTR [rbp-0x29],0x0
   140022e73:	mov    BYTE PTR [rbp-0x39],0x0
   140022e77:	lea    rcx,[rip+0x2da77]        # 0x1400508f5
   140022e7e:	call   QWORD PTR [rip+0x26784]        # 0x140049608
   140022e84:	mov    r8,rax
   140022e87:	lea    rdx,[rip+0x2da67]        # 0x1400508f5
   140022e8e:	lea    rcx,[rbp-0x39]
   140022e92:	call   0x140005154
   140022e97:	nop
   140022e98:	mov    r9,QWORD PTR [rbx]
   140022e9b:	lea    r8,[rbp-0x39]
   140022e9f:	lea    rdx,[rbp+0x1f]
   140022ea3:	mov    rcx,rbx
   140022ea6:	call   QWORD PTR [r9+0x80]
   140022ead:	nop
   140022eae:	cmp    QWORD PTR [rbp-0x21],0x10
   140022eb3:	jb     0x140022ebf
   140022eb5:	mov    rcx,QWORD PTR [rbp-0x39]
   140022eb9:	call   QWORD PTR [rip+0x267b9]        # 0x140049678
   140022ebf:	mov    QWORD PTR [rbp-0x21],r12
   140022ec3:	and    QWORD PTR [rbp-0x29],0x0
   140022ec8:	mov    BYTE PTR [rbp-0x39],0x0
   140022ecc:	cmp    QWORD PTR [rbp+0xf],0x10
   140022ed1:	jb     0x140022edd
   140022ed3:	mov    rcx,QWORD PTR [rbp-0x9]
   140022ed7:	call   QWORD PTR [rip+0x2679b]        # 0x140049678
   140022edd:	mov    QWORD PTR [rbp+0xf],r12
   140022ee1:	and    QWORD PTR [rbp+0x7],0x0
   140022ee6:	mov    BYTE PTR [rbp-0x9],0x0
   140022eea:	cmp    QWORD PTR [rbp+0x37],0x10
   140022eef:	jb     0x140022efb
   140022ef1:	mov    rcx,QWORD PTR [rbp+0x1f]
   140022ef5:	call   QWORD PTR [rip+0x2677d]        # 0x140049678
   140022efb:	lea    rcx,[rdi+0x68]
   140022eff:	call   0x14000f090
   140022f04:	mov    rcx,QWORD PTR [rbp+0x47]
   140022f08:	xor    rcx,rsp
   140022f0b:	call   0x14002b100
   140022f10:	lea    r11,[rsp+0xb0]
   140022f18:	mov    rbx,QWORD PTR [r11+0x18]
   140022f1c:	mov    rdi,QWORD PTR [r11+0x20]
   140022f20:	mov    r12,QWORD PTR [r11+0x28]
   140022f24:	mov    rsp,r11
   140022f27:	pop    rbp
   140022f28:	ret    
   140022f29:	int3   
   140022f2a:	int3   
   140022f2b:	int3   
   140022f2c:	rex push rbp
   140022f2e:	push   rbx
   140022f2f:	push   rsi
   140022f30:	push   rdi
   140022f31:	push   r12
   140022f33:	push   r14
   140022f35:	push   r15
   140022f37:	lea    rbp,[rsp-0x410]
   140022f3f:	sub    rsp,0x510
   140022f46:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140022f4f:	mov    rax,QWORD PTR [rip+0x4529a]        # 0x1400681f0
   140022f56:	xor    rax,rsp
   140022f59:	mov    QWORD PTR [rbp+0x408],rax
   140022f60:	mov    r12,r8
   140022f63:	mov    rsi,rdx
   140022f66:	mov    rbx,rcx
   140022f69:	mov    r15d,0xf
   140022f6f:	mov    QWORD PTR [rbp+0x268],r15
   140022f76:	xor    r14d,r14d
   140022f79:	mov    QWORD PTR [rbp+0x260],r14
   140022f80:	mov    BYTE PTR [rbp+0x250],r14b
   140022f87:	mov    rdx,rcx
   140022f8a:	lea    rcx,[rbp+0x160]
   140022f91:	call   0x1400095c4
   140022f96:	nop
   140022f97:	mov    rdx,rax
   140022f9a:	lea    rcx,[rbp+0x200]
   140022fa1:	call   0x14000b150
   140022fa6:	nop
   140022fa7:	cmp    QWORD PTR [rbp+0x178],0x8
   140022faf:	jb     0x140022fbe
   140022fb1:	mov    rcx,QWORD PTR [rbp+0x160]
   140022fb8:	call   QWORD PTR [rip+0x266ba]        # 0x140049678
   140022fbe:	mov    edi,0x7
   140022fc3:	mov    QWORD PTR [rbp+0x178],rdi
   140022fca:	mov    QWORD PTR [rbp+0x170],r14
   140022fd1:	mov    WORD PTR [rbp+0x160],r14w
   140022fd9:	mov    rdx,rbx
   140022fdc:	lea    rcx,[rbp+0x188]
   140022fe3:	call   0x1400095c4
   140022fe8:	nop
   140022fe9:	lea    rdx,[rbp+0x188]
   140022ff0:	cmp    QWORD PTR [rbp+0x1a0],0x8
   140022ff8:	cmovae rdx,QWORD PTR [rbp+0x188]
   140023000:	lea    r8d,[rdi+0x19]
   140023004:	lea    rcx,[rbp+0x50]
   140023008:	call   0x140003a0c
   14002300d:	nop
   14002300e:	mov    rdx,QWORD PTR [rbp+0x50]
   140023012:	movsxd rax,DWORD PTR [rdx+0x4]
   140023016:	mov    ecx,DWORD PTR [rbp+rax*1+0x60]
   14002301a:	test   cl,0x6
   14002301d:	jne    0x14002361b
   140023023:	shr    ecx,0x2
   140023026:	test   cl,0x1
   140023029:	jne    0x14002361b
   14002302f:	mov    QWORD PTR [rsp+0x20],r14
   140023034:	mov    BYTE PTR [rsp+0x28],0x1
   140023039:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14002303e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140023044:	movsxd rax,DWORD PTR [rdx+0x4]
   140023048:	mov    rcx,QWORD PTR [rbp+rax*1+0x98]
   140023050:	mov    QWORD PTR [rsp+0x20],rcx
   140023055:	test   rcx,rcx
   140023058:	sete   BYTE PTR [rsp+0x28]
   14002305d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140023062:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140023068:	lea    r8,[rsp+0x30]
   14002306d:	lea    rdx,[rsp+0x20]
   140023072:	lea    rcx,[rbp+0x250]
   140023079:	call   0x140024454
   14002307e:	lea    rcx,[rbp+0x60]
   140023082:	call   0x140004d90
   140023087:	test   rax,rax
   14002308a:	jne    0x1400230a5
   14002308c:	mov    rax,QWORD PTR [rbp+0x50]
   140023090:	movsxd rcx,DWORD PTR [rax+0x4]
   140023094:	lea    rcx,[rbp+rcx*1+0x50]
   140023099:	xor    r8d,r8d
   14002309c:	lea    edx,[rdi-0x5]
   14002309f:	call   QWORD PTR [rip+0x26253]        # 0x1400492f8
   1400230a5:	mov    QWORD PTR [rbp+0x1c8],r15
   1400230ac:	mov    QWORD PTR [rbp+0x1c0],r14
   1400230b3:	mov    BYTE PTR [rbp+0x1b0],r14b
   1400230ba:	lea    rcx,[rip+0x2d834]        # 0x1400508f5
   1400230c1:	call   QWORD PTR [rip+0x26541]        # 0x140049608
   1400230c7:	mov    r8,rax
   1400230ca:	lea    rdx,[rip+0x2d824]        # 0x1400508f5
   1400230d1:	lea    rcx,[rbp+0x1b0]
   1400230d8:	call   0x140005154
   1400230dd:	nop
   1400230de:	xor    ecx,ecx
   1400230e0:	call   QWORD PTR [rip+0x26622]        # 0x140049708
   1400230e6:	mov    ecx,eax
   1400230e8:	call   QWORD PTR [rip+0x26692]        # 0x140049780
   1400230ee:	or     rbx,0xffffffffffffffff
   1400230f2:	lea    edi,[rbx+0x11]
   1400230f5:	cmp    QWORD PTR [rbp+0x1c0],rdi
   1400230fc:	jae    0x1400231aa
   140023102:	lea    rax,[rbp-0x18]
   140023106:	mov    QWORD PTR [rsp+0x20],rax
   14002310b:	lea    rcx,[rsp+0x50]
   140023110:	call   0x140014770
   140023115:	nop
   140023116:	call   QWORD PTR [rip+0x2665c]        # 0x140049778
   14002311c:	mov    edx,eax
   14002311e:	lea    rcx,[rsp+0x60]
   140023123:	call   QWORD PTR [rip+0x2636f]        # 0x140049498
   140023129:	lea    rdx,[rbp+0x228]
   140023130:	lea    rcx,[rsp+0x50]
   140023135:	call   0x140014814
   14002313a:	nop
   14002313b:	mov    r9,rbx
   14002313e:	xor    r8d,r8d
   140023141:	mov    rdx,rax
   140023144:	lea    rcx,[rbp+0x1b0]
   14002314b:	call   0x140005638
   140023150:	nop
   140023151:	cmp    QWORD PTR [rbp+0x240],rdi
   140023158:	jb     0x140023168
   14002315a:	mov    rcx,QWORD PTR [rbp+0x228]
   140023161:	call   QWORD PTR [rip+0x26511]        # 0x140049678
   140023167:	nop
   140023168:	mov    rax,QWORD PTR [rsp+0x50]
   14002316d:	movsxd rcx,DWORD PTR [rax+0x4]
   140023171:	lea    rax,[rip+0x2ddb0]        # 0x140050f28
   140023178:	mov    QWORD PTR [rsp+rcx*1+0x50],rax
   14002317d:	lea    rcx,[rsp+0x68]
   140023182:	call   0x140014834
   140023187:	nop
   140023188:	lea    rcx,[rsp+0x68]
   14002318d:	call   QWORD PTR [rip+0x2632d]        # 0x1400494c0
   140023193:	lea    rcx,[rbp-0x18]
   140023197:	call   QWORD PTR [rip+0x26163]        # 0x140049300
   14002319d:	cmp    QWORD PTR [rbp+0x1c0],rdi
   1400231a4:	jb     0x14002310b
   1400231aa:	mov    r9,rbx
   1400231ad:	xor    r8d,r8d
   1400231b0:	lea    rdx,[rbp+0x1b0]
   1400231b7:	mov    rcx,r12
   1400231ba:	call   0x1400048b8
   1400231bf:	mov    QWORD PTR [rbp+0x1f0],r15
   1400231c6:	mov    QWORD PTR [rbp+0x1e8],r14
   1400231cd:	mov    BYTE PTR [rbp+0x1d8],r14b
   1400231d4:	lea    rdx,[rbp+0x200]
   1400231db:	lea    rcx,[rbp+0x3e0]
   1400231e2:	call   0x140009474
   1400231e7:	mov    rbx,rax
   1400231ea:	mov    QWORD PTR [rbp+0x178],r15
   1400231f1:	mov    QWORD PTR [rbp+0x170],r14
   1400231f8:	mov    BYTE PTR [rbp+0x160],r14b
   1400231ff:	lea    rcx,[rip+0x2e9f2]        # 0x140051bf8
   140023206:	call   QWORD PTR [rip+0x263fc]        # 0x140049608
   14002320c:	mov    r8,rax
   14002320f:	lea    rdx,[rip+0x2e9e2]        # 0x140051bf8
   140023216:	lea    rcx,[rbp+0x160]
   14002321d:	call   0x140005154
   140023222:	nop
   140023223:	mov    r8,r12
   140023226:	lea    rdx,[rbp+0x160]
   14002322d:	lea    rcx,[rbp+0x228]
   140023234:	call   0x140005e40
   140023239:	nop
   14002323a:	lea    r8,[rip+0x2ea33]        # 0x140051c74
   140023241:	mov    rdx,rax
   140023244:	lea    rcx,[rbp+0x2a0]
   14002324b:	call   0x1400113b0
   140023250:	nop
   140023251:	lea    r8,[rip+0x2e9e0]        # 0x140051c38
   140023258:	mov    rdx,rax
   14002325b:	lea    rcx,[rbp+0x340]
   140023262:	call   0x1400113b0
   140023267:	nop
   140023268:	mov    r8,rbx
   14002326b:	mov    rdx,rax
   14002326e:	lea    rcx,[rbp+0x318]
   140023275:	call   0x140011414
   14002327a:	nop
   14002327b:	lea    r8,[rip+0x2e9b2]        # 0x140051c34
   140023282:	mov    rdx,rax
   140023285:	lea    rcx,[rbp+0x368]
   14002328c:	call   0x1400113b0
   140023291:	nop
   140023292:	lea    r8,[rip+0x2e96f]        # 0x140051c08
   140023299:	mov    rdx,rax
   14002329c:	lea    rcx,[rbp+0x2c8]
   1400232a3:	call   0x1400113b0
   1400232a8:	nop
   1400232a9:	lea    r8,[rbp+0x250]
   1400232b0:	mov    rdx,rax
   1400232b3:	lea    rcx,[rbp+0x390]
   1400232ba:	call   0x140005e40
   1400232bf:	nop
   1400232c0:	lea    r8,[rip+0x2e935]        # 0x140051bfc
   1400232c7:	mov    rdx,rax
   1400232ca:	lea    rcx,[rbp+0x3b8]
   1400232d1:	call   0x1400113b0
   1400232d6:	nop
   1400232d7:	mov    r8,r12
   1400232da:	mov    rdx,rax
   1400232dd:	lea    rcx,[rbp+0x278]
   1400232e4:	call   0x140005e40
   1400232e9:	nop
   1400232ea:	lea    r8,[rip+0x2e907]        # 0x140051bf8
   1400232f1:	mov    rdx,rax
   1400232f4:	lea    rcx,[rbp+0x2f0]
   1400232fb:	call   0x1400113b0
   140023300:	nop
   140023301:	mov    rdx,rax
   140023304:	lea    rcx,[rbp+0x1d8]
   14002330b:	call   0x140004730
   140023310:	nop
   140023311:	cmp    QWORD PTR [rbp+0x308],rdi
   140023318:	jb     0x140023327
   14002331a:	mov    rcx,QWORD PTR [rbp+0x2f0]
   140023321:	call   QWORD PTR [rip+0x26351]        # 0x140049678
   140023327:	mov    QWORD PTR [rbp+0x308],r15
   14002332e:	mov    QWORD PTR [rbp+0x300],r14
   140023335:	mov    BYTE PTR [rbp+0x2f0],r14b
   14002333c:	cmp    QWORD PTR [rbp+0x290],rdi
   140023343:	jb     0x140023352
   140023345:	mov    rcx,QWORD PTR [rbp+0x278]
   14002334c:	call   QWORD PTR [rip+0x26326]        # 0x140049678
   140023352:	mov    QWORD PTR [rbp+0x290],r15
   140023359:	mov    QWORD PTR [rbp+0x288],r14
   140023360:	mov    BYTE PTR [rbp+0x278],r14b
   140023367:	cmp    QWORD PTR [rbp+0x3d0],rdi
   14002336e:	jb     0x14002337d
   140023370:	mov    rcx,QWORD PTR [rbp+0x3b8]
   140023377:	call   QWORD PTR [rip+0x262fb]        # 0x140049678
   14002337d:	mov    QWORD PTR [rbp+0x3d0],r15
   140023384:	mov    QWORD PTR [rbp+0x3c8],r14
   14002338b:	mov    BYTE PTR [rbp+0x3b8],r14b
   140023392:	cmp    QWORD PTR [rbp+0x3a8],rdi
   140023399:	jb     0x1400233a8
   14002339b:	mov    rcx,QWORD PTR [rbp+0x390]
   1400233a2:	call   QWORD PTR [rip+0x262d0]        # 0x140049678
   1400233a8:	mov    QWORD PTR [rbp+0x3a8],r15
   1400233af:	mov    QWORD PTR [rbp+0x3a0],r14
   1400233b6:	mov    BYTE PTR [rbp+0x390],r14b
   1400233bd:	cmp    QWORD PTR [rbp+0x2e0],rdi
   1400233c4:	jb     0x1400233d3
   1400233c6:	mov    rcx,QWORD PTR [rbp+0x2c8]
   1400233cd:	call   QWORD PTR [rip+0x262a5]        # 0x140049678
   1400233d3:	mov    QWORD PTR [rbp+0x2e0],r15
   1400233da:	mov    QWORD PTR [rbp+0x2d8],r14
   1400233e1:	mov    BYTE PTR [rbp+0x2c8],r14b
   1400233e8:	cmp    QWORD PTR [rbp+0x380],rdi
   1400233ef:	jb     0x1400233fe
   1400233f1:	mov    rcx,QWORD PTR [rbp+0x368]
   1400233f8:	call   QWORD PTR [rip+0x2627a]        # 0x140049678
   1400233fe:	mov    QWORD PTR [rbp+0x380],r15
   140023405:	mov    QWORD PTR [rbp+0x378],r14
   14002340c:	mov    BYTE PTR [rbp+0x368],r14b
   140023413:	cmp    QWORD PTR [rbp+0x330],rdi
   14002341a:	jb     0x140023429
   14002341c:	mov    rcx,QWORD PTR [rbp+0x318]
   140023423:	call   QWORD PTR [rip+0x2624f]        # 0x140049678
   140023429:	mov    QWORD PTR [rbp+0x330],r15
   140023430:	mov    QWORD PTR [rbp+0x328],r14
   140023437:	mov    BYTE PTR [rbp+0x318],r14b
   14002343e:	cmp    QWORD PTR [rbp+0x358],rdi
   140023445:	jb     0x140023454
   140023447:	mov    rcx,QWORD PTR [rbp+0x340]
   14002344e:	call   QWORD PTR [rip+0x26224]        # 0x140049678
   140023454:	mov    QWORD PTR [rbp+0x358],r15
   14002345b:	mov    QWORD PTR [rbp+0x350],r14
   140023462:	mov    BYTE PTR [rbp+0x340],r14b
   140023469:	cmp    QWORD PTR [rbp+0x2b8],rdi
   140023470:	jb     0x14002347f
   140023472:	mov    rcx,QWORD PTR [rbp+0x2a0]
   140023479:	call   QWORD PTR [rip+0x261f9]        # 0x140049678
   14002347f:	mov    QWORD PTR [rbp+0x2b8],r15
   140023486:	mov    QWORD PTR [rbp+0x2b0],r14
   14002348d:	mov    BYTE PTR [rbp+0x2a0],r14b
   140023494:	cmp    QWORD PTR [rbp+0x240],rdi
   14002349b:	jb     0x1400234aa
   14002349d:	mov    rcx,QWORD PTR [rbp+0x228]
   1400234a4:	call   QWORD PTR [rip+0x261ce]        # 0x140049678
   1400234aa:	mov    QWORD PTR [rbp+0x240],r15
   1400234b1:	mov    QWORD PTR [rbp+0x238],r14
   1400234b8:	mov    BYTE PTR [rbp+0x228],r14b
   1400234bf:	cmp    QWORD PTR [rbp+0x178],rdi
   1400234c6:	jb     0x1400234d5
   1400234c8:	mov    rcx,QWORD PTR [rbp+0x160]
   1400234cf:	call   QWORD PTR [rip+0x261a3]        # 0x140049678
   1400234d5:	mov    QWORD PTR [rbp+0x178],r15
   1400234dc:	mov    QWORD PTR [rbp+0x170],r14
   1400234e3:	mov    BYTE PTR [rbp+0x160],r14b
   1400234ea:	cmp    QWORD PTR [rbp+0x3f8],rdi
   1400234f1:	jb     0x140023500
   1400234f3:	mov    rcx,QWORD PTR [rbp+0x3e0]
   1400234fa:	call   QWORD PTR [rip+0x26178]        # 0x140049678
   140023500:	mov    rcx,QWORD PTR [rbp+0x1e8]
   140023507:	mov    QWORD PTR [rsi],rcx
   14002350a:	inc    rcx
   14002350d:	call   0x14002b058
   140023512:	mov    rbx,rax
   140023515:	lea    rdx,[rbp+0x1d8]
   14002351c:	cmp    QWORD PTR [rbp+0x1f0],rdi
   140023523:	cmovae rdx,QWORD PTR [rbp+0x1d8]
   14002352b:	mov    r8,QWORD PTR [rsi]
   14002352e:	mov    rcx,rax
   140023531:	call   QWORD PTR [rip+0x26391]        # 0x1400498c8
   140023537:	mov    r11,QWORD PTR [rsi]
   14002353a:	mov    BYTE PTR [rbx+r11*1],r14b
   14002353e:	cmp    QWORD PTR [rbp+0x1f0],rdi
   140023545:	jb     0x140023554
   140023547:	mov    rcx,QWORD PTR [rbp+0x1d8]
   14002354e:	call   QWORD PTR [rip+0x26124]        # 0x140049678
   140023554:	mov    QWORD PTR [rbp+0x1f0],r15
   14002355b:	mov    QWORD PTR [rbp+0x1e8],r14
   140023562:	mov    BYTE PTR [rbp+0x1d8],r14b
   140023569:	cmp    QWORD PTR [rbp+0x1c8],rdi
   140023570:	jb     0x14002357f
   140023572:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140023579:	call   QWORD PTR [rip+0x260f9]        # 0x140049678
   14002357f:	mov    QWORD PTR [rbp+0x1c8],r15
   140023586:	mov    QWORD PTR [rbp+0x1c0],r14
   14002358d:	mov    BYTE PTR [rbp+0x1b0],r14b
   140023594:	lea    rcx,[rbp+0x50]
   140023598:	call   0x140002070
   14002359d:	nop
   14002359e:	cmp    QWORD PTR [rbp+0x1a0],0x8
   1400235a6:	jb     0x1400235b5
   1400235a8:	mov    rcx,QWORD PTR [rbp+0x188]
   1400235af:	call   QWORD PTR [rip+0x260c3]        # 0x140049678
   1400235b5:	mov    esi,0x7
   1400235ba:	mov    QWORD PTR [rbp+0x1a0],rsi
   1400235c1:	mov    QWORD PTR [rbp+0x198],r14
   1400235c8:	mov    WORD PTR [rbp+0x188],r14w
   1400235d0:	cmp    QWORD PTR [rbp+0x218],0x8
   1400235d8:	jb     0x1400235e7
   1400235da:	mov    rcx,QWORD PTR [rbp+0x200]
   1400235e1:	call   QWORD PTR [rip+0x26091]        # 0x140049678
   1400235e7:	mov    QWORD PTR [rbp+0x218],rsi
   1400235ee:	mov    QWORD PTR [rbp+0x210],r14
   1400235f5:	mov    WORD PTR [rbp+0x200],r14w
   1400235fd:	cmp    QWORD PTR [rbp+0x268],rdi
   140023604:	jb     0x140023613
   140023606:	mov    rcx,QWORD PTR [rbp+0x250]
   14002360d:	call   QWORD PTR [rip+0x26065]        # 0x140049678
   140023613:	mov    rax,rbx
   140023616:	jmp    0x14002369c
   14002361b:	lea    rcx,[rbp+0x50]
   14002361f:	call   0x140002070
   140023624:	nop
   140023625:	cmp    QWORD PTR [rbp+0x1a0],0x8
   14002362d:	jb     0x14002363c
   14002362f:	mov    rcx,QWORD PTR [rbp+0x188]
   140023636:	call   QWORD PTR [rip+0x2603c]        # 0x140049678
   14002363c:	mov    QWORD PTR [rbp+0x1a0],rdi
   140023643:	mov    QWORD PTR [rbp+0x198],r14
   14002364a:	mov    WORD PTR [rbp+0x188],r14w
   140023652:	cmp    QWORD PTR [rbp+0x218],0x8
   14002365a:	jb     0x140023669
   14002365c:	mov    rcx,QWORD PTR [rbp+0x200]
   140023663:	call   QWORD PTR [rip+0x2600f]        # 0x140049678
   140023669:	mov    QWORD PTR [rbp+0x218],rdi
   140023670:	mov    QWORD PTR [rbp+0x210],r14
   140023677:	mov    WORD PTR [rbp+0x200],r14w
   14002367f:	mov    edi,0x10
   140023684:	cmp    QWORD PTR [rbp+0x268],rdi
   14002368b:	jb     0x14002369a
   14002368d:	mov    rcx,QWORD PTR [rbp+0x250]
   140023694:	call   QWORD PTR [rip+0x25fde]        # 0x140049678
   14002369a:	xor    eax,eax
   14002369c:	mov    rcx,QWORD PTR [rbp+0x408]
   1400236a3:	xor    rcx,rsp
   1400236a6:	call   0x14002b100
   1400236ab:	add    rsp,0x510
   1400236b2:	pop    r15
   1400236b4:	pop    r14
   1400236b6:	pop    r12
   1400236b8:	pop    rdi
   1400236b9:	pop    rsi
   1400236ba:	pop    rbx
   1400236bb:	pop    rbp
   1400236bc:	ret    
   1400236bd:	int3   
   1400236be:	int3   
   1400236bf:	int3   
   1400236c0:	mov    rax,rsp
   1400236c3:	push   rbp
   1400236c4:	push   rsi
   1400236c5:	push   rdi
   1400236c6:	lea    rbp,[rax-0xd8]
   1400236cd:	sub    rsp,0x1c0
   1400236d4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400236dd:	mov    QWORD PTR [rax+0x20],rbx
   1400236e1:	mov    rax,QWORD PTR [rip+0x44b08]        # 0x1400681f0
   1400236e8:	xor    rax,rsp
   1400236eb:	mov    QWORD PTR [rbp+0xb8],rax
   1400236f2:	mov    rdi,r8
   1400236f5:	mov    rbx,rdx
   1400236f8:	mov    rdx,rcx
   1400236fb:	lea    rcx,[rbp+0x68]
   1400236ff:	call   0x14002454c
   140023704:	nop
   140023705:	lea    rdx,[rbp+0x68]
   140023709:	lea    rcx,[rsp+0x50]
   14002370e:	call   0x1400095c4
   140023713:	nop
   140023714:	mov    rdx,rbx
   140023717:	lea    rcx,[rsp+0x78]
   14002371c:	call   0x1400095c4
   140023721:	nop
   140023722:	mov    esi,0x7
   140023727:	mov    QWORD PTR [rsp+0x40],rsi
   14002372c:	xor    ebx,ebx
   14002372e:	mov    QWORD PTR [rsp+0x38],rbx
   140023733:	mov    WORD PTR [rsp+0x28],bx
   140023738:	lea    rcx,[rip+0x2e541]        # 0x140051c80
   14002373f:	call   QWORD PTR [rip+0x25f6b]        # 0x1400496b0
   140023745:	mov    r8,rax
   140023748:	lea    rdx,[rip+0x2e531]        # 0x140051c80
   14002374f:	lea    rcx,[rsp+0x28]
   140023754:	call   0x1400096cc
   140023759:	nop
   14002375a:	lea    r8,[rsp+0x50]
   14002375f:	lea    rdx,[rip+0x2e55a]        # 0x140051cc0
   140023766:	lea    rcx,[rbp-0x60]
   14002376a:	call   0x1400188a4
   14002376f:	nop
   140023770:	lea    r8,[rsp+0x78]
   140023775:	lea    rdx,[rip+0x2e574]        # 0x140051cf0
   14002377c:	lea    rcx,[rbp-0x38]
   140023780:	call   0x1400188a4
   140023785:	nop
   140023786:	lea    rdx,[rsp+0x28]
   14002378b:	lea    rcx,[rbp+0x90]
   140023792:	call   0x14000d290
   140023797:	nop
   140023798:	lea    r8,[rbp-0x38]
   14002379c:	mov    rdx,rax
   14002379f:	lea    rcx,[rbp+0x18]
   1400237a3:	call   0x14000d34c
   1400237a8:	nop
   1400237a9:	lea    r8,[rip+0x2d5c4]        # 0x140050d74
   1400237b0:	mov    rdx,rax
   1400237b3:	lea    rcx,[rbp+0x40]
   1400237b7:	call   0x140014560
   1400237bc:	nop
   1400237bd:	lea    r8,[rbp-0x60]
   1400237c1:	mov    rdx,rax
   1400237c4:	lea    rcx,[rbp-0x10]
   1400237c8:	call   0x14000d34c
   1400237cd:	nop
   1400237ce:	mov    rdx,rax
   1400237d1:	mov    rcx,rdi
   1400237d4:	call   0x140009880
   1400237d9:	nop
   1400237da:	cmp    QWORD PTR [rbp+0x8],0x8
   1400237df:	jb     0x1400237eb
   1400237e1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400237e5:	call   QWORD PTR [rip+0x25e8d]        # 0x140049678
   1400237eb:	mov    QWORD PTR [rbp+0x8],rsi
   1400237ef:	mov    QWORD PTR [rbp+0x0],rbx
   1400237f3:	mov    WORD PTR [rbp-0x10],bx
   1400237f7:	cmp    QWORD PTR [rbp+0x58],0x8
   1400237fc:	jb     0x140023808
   1400237fe:	mov    rcx,QWORD PTR [rbp+0x40]
   140023802:	call   QWORD PTR [rip+0x25e70]        # 0x140049678
   140023808:	mov    QWORD PTR [rbp+0x58],rsi
   14002380c:	mov    QWORD PTR [rbp+0x50],rbx
   140023810:	mov    WORD PTR [rbp+0x40],bx
   140023814:	cmp    QWORD PTR [rbp+0x30],0x8
   140023819:	jb     0x140023825
   14002381b:	mov    rcx,QWORD PTR [rbp+0x18]
   14002381f:	call   QWORD PTR [rip+0x25e53]        # 0x140049678
   140023825:	mov    QWORD PTR [rbp+0x30],rsi
   140023829:	mov    QWORD PTR [rbp+0x28],rbx
   14002382d:	mov    WORD PTR [rbp+0x18],bx
   140023831:	cmp    QWORD PTR [rbp+0xa8],0x8
   140023839:	jb     0x140023849
   14002383b:	mov    rcx,QWORD PTR [rbp+0x90]
   140023842:	call   QWORD PTR [rip+0x25e30]        # 0x140049678
   140023848:	nop
   140023849:	cmp    QWORD PTR [rbp-0x20],0x8
   14002384e:	jb     0x14002385a
   140023850:	mov    rcx,QWORD PTR [rbp-0x38]
   140023854:	call   QWORD PTR [rip+0x25e1e]        # 0x140049678
   14002385a:	mov    QWORD PTR [rbp-0x20],rsi
   14002385e:	mov    QWORD PTR [rbp-0x28],rbx
   140023862:	mov    WORD PTR [rbp-0x38],bx
   140023866:	cmp    QWORD PTR [rbp-0x48],0x8
   14002386b:	jb     0x140023877
   14002386d:	mov    rcx,QWORD PTR [rbp-0x60]
   140023871:	call   QWORD PTR [rip+0x25e01]        # 0x140049678
   140023877:	mov    QWORD PTR [rbp-0x48],rsi
   14002387b:	mov    QWORD PTR [rbp-0x50],rbx
   14002387f:	mov    WORD PTR [rbp-0x60],bx
   140023883:	cmp    QWORD PTR [rsp+0x40],0x8
   140023889:	jb     0x140023896
   14002388b:	mov    rcx,QWORD PTR [rsp+0x28]
   140023890:	call   QWORD PTR [rip+0x25de2]        # 0x140049678
   140023896:	mov    QWORD PTR [rsp+0x40],rsi
   14002389b:	mov    QWORD PTR [rsp+0x38],rbx
   1400238a0:	mov    WORD PTR [rsp+0x28],bx
   1400238a5:	cmp    QWORD PTR [rbp-0x70],0x8
   1400238aa:	jb     0x1400238b7
   1400238ac:	mov    rcx,QWORD PTR [rsp+0x78]
   1400238b1:	call   QWORD PTR [rip+0x25dc1]        # 0x140049678
   1400238b7:	mov    QWORD PTR [rbp-0x70],rsi
   1400238bb:	mov    QWORD PTR [rbp-0x78],rbx
   1400238bf:	mov    WORD PTR [rsp+0x78],bx
   1400238c4:	cmp    QWORD PTR [rsp+0x68],0x8
   1400238ca:	jb     0x1400238d7
   1400238cc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400238d1:	call   QWORD PTR [rip+0x25da1]        # 0x140049678
   1400238d7:	mov    QWORD PTR [rsp+0x68],rsi
   1400238dc:	mov    QWORD PTR [rsp+0x60],rbx
   1400238e1:	mov    WORD PTR [rsp+0x50],bx
   1400238e6:	cmp    QWORD PTR [rbp+0x80],0x10
   1400238ee:	jb     0x1400238fa
   1400238f0:	mov    rcx,QWORD PTR [rbp+0x68]
   1400238f4:	call   QWORD PTR [rip+0x25d7e]        # 0x140049678
   1400238fa:	mov    al,0x1
   1400238fc:	mov    rcx,QWORD PTR [rbp+0xb8]
   140023903:	xor    rcx,rsp
   140023906:	call   0x14002b100
   14002390b:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140023913:	add    rsp,0x1c0
   14002391a:	pop    rdi
   14002391b:	pop    rsi
   14002391c:	pop    rbp
   14002391d:	ret    
   14002391e:	int3   
   14002391f:	int3   
   140023920:	mov    rax,rsp
   140023923:	push   rbp
   140023924:	push   rsi
   140023925:	push   rdi
   140023926:	push   r12
   140023928:	push   r13
   14002392a:	lea    rbp,[rax-0x5f]
   14002392e:	sub    rsp,0x100
   140023935:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   14002393d:	mov    QWORD PTR [rax+0x20],rbx
   140023941:	mov    rax,QWORD PTR [rip+0x448a8]        # 0x1400681f0
   140023948:	xor    rax,rsp
   14002394b:	mov    QWORD PTR [rbp+0x27],rax
   14002394f:	mov    r12,r8
   140023952:	mov    rsi,rdx
   140023955:	mov    rbx,rcx
   140023958:	xor    r13d,r13d
   14002395b:	cmp    BYTE PTR [rcx+0x51],r13b
   14002395f:	je     0x140023967
   140023961:	mov    rax,QWORD PTR [rcx]
   140023964:	call   QWORD PTR [rax+0x20]
   140023967:	mov    BYTE PTR [rbx+0x51],0x1
   14002396b:	mov    rcx,QWORD PTR [rbx+0x58]
   14002396f:	test   rcx,rcx
   140023972:	je     0x14002397e
   140023974:	call   QWORD PTR [rip+0x25cee]        # 0x140049668
   14002397a:	mov    QWORD PTR [rbx+0x58],r13
   14002397e:	mov    QWORD PTR [rbp-0x11],0xf
   140023986:	mov    QWORD PTR [rbp-0x19],r13
   14002398a:	mov    BYTE PTR [rbp-0x29],r13b
   14002398e:	lea    rdi,[rbx+0x60]
   140023992:	lea    r8,[rbp-0x29]
   140023996:	mov    rdx,rdi
   140023999:	mov    rcx,rsi
   14002399c:	call   0x140022f2c
   1400239a1:	mov    QWORD PTR [rbx+0x58],rax
   1400239a5:	test   rax,rax
   1400239a8:	jne    0x1400239c8
   1400239aa:	mov    WORD PTR [rbx+0x50],0x1
   1400239b0:	cmp    QWORD PTR [rbp-0x11],0x10
   1400239b5:	jb     0x1400239c1
   1400239b7:	mov    rcx,QWORD PTR [rbp-0x29]
   1400239bb:	call   QWORD PTR [rip+0x25cb7]        # 0x140049678
   1400239c1:	xor    al,al
   1400239c3:	jmp    0x140023acb
   1400239c8:	mov    esi,0x7
   1400239cd:	mov    QWORD PTR [rbp-0x39],rsi
   1400239d1:	mov    QWORD PTR [rbp-0x41],r13
   1400239d5:	mov    WORD PTR [rbp-0x51],r13w
   1400239da:	lea    rcx,[rip+0x2d10f]        # 0x140050af0
   1400239e1:	call   QWORD PTR [rip+0x25cc9]        # 0x1400496b0
   1400239e7:	mov    r8,rax
   1400239ea:	lea    rdx,[rip+0x2d0ff]        # 0x140050af0
   1400239f1:	lea    rcx,[rbp-0x51]
   1400239f5:	call   0x1400096cc
   1400239fa:	nop
   1400239fb:	lea    r8,[rbp-0x51]
   1400239ff:	lea    rdx,[rbp-0x29]
   140023a03:	mov    rcx,QWORD PTR [rdi]
   140023a06:	call   0x1400236c0
   140023a0b:	lea    r8,[rsp+0x40]
   140023a10:	lea    rdx,[rsp+0x40]
   140023a15:	lea    rcx,[rsp+0x48]
   140023a1a:	call   0x140005454
   140023a1f:	nop
   140023a20:	mov    rdx,r12
   140023a23:	lea    rcx,[rbp-0x1]
   140023a27:	call   0x1400095c4
   140023a2c:	nop
   140023a2d:	lea    rcx,[rbx+0x28]
   140023a31:	mov    QWORD PTR [rsp+0x30],rcx
   140023a36:	lea    rcx,[rsp+0x48]
   140023a3b:	mov    QWORD PTR [rsp+0x28],rcx
   140023a40:	mov    rcx,QWORD PTR [rdi]
   140023a43:	mov    QWORD PTR [rsp+0x20],rcx
   140023a48:	mov    r9,QWORD PTR [rbx+0x58]
   140023a4c:	lea    r8,[rbp-0x51]
   140023a50:	mov    rdx,rax
   140023a53:	mov    rcx,rbx
   140023a56:	call   0x140023ca0
   140023a5b:	mov    dil,al
   140023a5e:	cmp    QWORD PTR [rbp+0x17],0x8
   140023a63:	jb     0x140023a6f
   140023a65:	mov    rcx,QWORD PTR [rbp-0x1]
   140023a69:	call   QWORD PTR [rip+0x25c09]        # 0x140049678
   140023a6f:	mov    WORD PTR [rbx+0x50],0x1
   140023a75:	mov    r8,QWORD PTR [rbp-0x79]
   140023a79:	mov    r9,r8
   140023a7c:	mov    r8,QWORD PTR [r8]
   140023a7f:	lea    rdx,[rbp-0x61]
   140023a83:	lea    rcx,[rsp+0x48]
   140023a88:	call   0x140004a78
   140023a8d:	nop
   140023a8e:	mov    rcx,QWORD PTR [rbp-0x79]
   140023a92:	call   QWORD PTR [rip+0x25be0]        # 0x140049678
   140023a98:	nop
   140023a99:	cmp    QWORD PTR [rbp-0x39],0x8
   140023a9e:	jb     0x140023aaa
   140023aa0:	mov    rcx,QWORD PTR [rbp-0x51]
   140023aa4:	call   QWORD PTR [rip+0x25bce]        # 0x140049678
   140023aaa:	mov    QWORD PTR [rbp-0x39],rsi
   140023aae:	mov    QWORD PTR [rbp-0x41],r13
   140023ab2:	mov    WORD PTR [rbp-0x51],r13w
   140023ab7:	cmp    QWORD PTR [rbp-0x11],0x10
   140023abc:	jb     0x140023ac8
   140023abe:	mov    rcx,QWORD PTR [rbp-0x29]
   140023ac2:	call   QWORD PTR [rip+0x25bb0]        # 0x140049678
   140023ac8:	mov    al,dil
   140023acb:	mov    rcx,QWORD PTR [rbp+0x27]
   140023acf:	xor    rcx,rsp
   140023ad2:	call   0x14002b100
   140023ad7:	mov    rbx,QWORD PTR [rsp+0x148]
   140023adf:	add    rsp,0x100
   140023ae6:	pop    r13
   140023ae8:	pop    r12
   140023aea:	pop    rdi
   140023aeb:	pop    rsi
   140023aec:	pop    rbp
   140023aed:	ret    
   140023aee:	int3   
   140023aef:	int3   
   140023af0:	rex push rbp
   140023af2:	push   rbx
   140023af3:	push   rsi
   140023af4:	push   rdi
   140023af5:	push   r12
   140023af7:	lea    rbp,[rsp-0x37]
   140023afc:	sub    rsp,0xb0
   140023b03:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   140023b0b:	mov    rax,QWORD PTR [rip+0x446de]        # 0x1400681f0
   140023b12:	xor    rax,rsp
   140023b15:	mov    QWORD PTR [rbp+0x27],rax
   140023b19:	mov    rdi,r8
   140023b1c:	mov    rsi,rdx
   140023b1f:	mov    rbx,rcx
   140023b22:	mov    rdx,rcx
   140023b25:	lea    rcx,[rbp-0x1]
   140023b29:	call   0x1400095c4
   140023b2e:	nop
   140023b2f:	lea    rcx,[rip+0x2e21a]        # 0x140051d50
   140023b36:	call   QWORD PTR [rip+0x25b74]        # 0x1400496b0
   140023b3c:	mov    r8,rax
   140023b3f:	lea    rdx,[rip+0x2e20a]        # 0x140051d50
   140023b46:	mov    rcx,rdi
   140023b49:	call   0x1400096cc
   140023b4e:	xor    r12d,r12d
   140023b51:	cmp    QWORD PTR [rbx+0x10],r12
   140023b55:	je     0x140023bc6
   140023b57:	lea    r8,[rbp-0x1]
   140023b5b:	lea    rdx,[rip+0x2e236]        # 0x140051d98
   140023b62:	lea    rcx,[rbp-0x29]
   140023b66:	call   0x1400188a4
   140023b6b:	nop
   140023b6c:	lea    r8,[rip+0x2d201]        # 0x140050d74
   140023b73:	mov    rdx,rax
   140023b76:	lea    rcx,[rbp-0x51]
   140023b7a:	call   0x140014560
   140023b7f:	nop
   140023b80:	or     r9,0xffffffffffffffff
   140023b84:	xor    r8d,r8d
   140023b87:	mov    rdx,rax
   140023b8a:	mov    rcx,rdi
   140023b8d:	call   0x14000d0e8
   140023b92:	nop
   140023b93:	cmp    QWORD PTR [rbp-0x39],0x8
   140023b98:	jb     0x140023ba4
   140023b9a:	mov    rcx,QWORD PTR [rbp-0x51]
   140023b9e:	call   QWORD PTR [rip+0x25ad4]        # 0x140049678
   140023ba4:	mov    QWORD PTR [rbp-0x39],0x7
   140023bac:	mov    QWORD PTR [rbp-0x41],r12
   140023bb0:	mov    WORD PTR [rbp-0x51],r12w
   140023bb5:	cmp    QWORD PTR [rbp-0x11],0x8
   140023bba:	jb     0x140023bc6
   140023bbc:	mov    rcx,QWORD PTR [rbp-0x29]
   140023bc0:	call   QWORD PTR [rip+0x25ab2]        # 0x140049678
   140023bc6:	lea    rdx,[rip+0x2e1db]        # 0x140051da8
   140023bcd:	mov    rcx,rdi
   140023bd0:	call   0x14000d4f4
   140023bd5:	cmp    QWORD PTR [rsi+0x10],r12
   140023bd9:	je     0x140023c44
   140023bdb:	mov    rdx,rsi
   140023bde:	lea    rcx,[rbp-0x29]
   140023be2:	call   0x1400095c4
   140023be7:	nop
   140023be8:	lea    r8,[rip+0x2d185]        # 0x140050d74
   140023bef:	mov    rdx,rax
   140023bf2:	lea    rcx,[rbp-0x51]
   140023bf6:	call   0x140014560
   140023bfb:	nop
   140023bfc:	or     r9,0xffffffffffffffff
   140023c00:	xor    r8d,r8d
   140023c03:	mov    rdx,rax
   140023c06:	mov    rcx,rdi
   140023c09:	call   0x14000d0e8
   140023c0e:	nop
   140023c0f:	cmp    QWORD PTR [rbp-0x39],0x8
   140023c14:	jb     0x140023c20
   140023c16:	mov    rcx,QWORD PTR [rbp-0x51]
   140023c1a:	call   QWORD PTR [rip+0x25a58]        # 0x140049678
   140023c20:	mov    QWORD PTR [rbp-0x39],0x7
   140023c28:	mov    QWORD PTR [rbp-0x41],r12
   140023c2c:	mov    WORD PTR [rbp-0x51],r12w
   140023c31:	cmp    QWORD PTR [rbp-0x11],0x8
   140023c36:	jb     0x140023c53
   140023c38:	mov    rcx,QWORD PTR [rbp-0x29]
   140023c3c:	call   QWORD PTR [rip+0x25a36]        # 0x140049678
   140023c42:	jmp    0x140023c53
   140023c44:	lea    rdx,[rip+0x2e17d]        # 0x140051dc8
   140023c4b:	mov    rcx,rdi
   140023c4e:	call   0x14000d4f4
   140023c53:	lea    rdx,[rip+0x2e186]        # 0x140051de0
   140023c5a:	mov    rcx,rdi
   140023c5d:	call   0x14000d4f4
   140023c62:	lea    rdx,[rip+0x2e1df]        # 0x140051e48
   140023c69:	mov    rcx,rdi
   140023c6c:	call   0x14000d4f4
   140023c71:	nop
   140023c72:	cmp    QWORD PTR [rbp+0x17],0x8
   140023c77:	jb     0x140023c83
   140023c79:	mov    rcx,QWORD PTR [rbp-0x1]
   140023c7d:	call   QWORD PTR [rip+0x259f5]        # 0x140049678
   140023c83:	mov    al,0x1
   140023c85:	mov    rcx,QWORD PTR [rbp+0x27]
   140023c89:	xor    rcx,rsp
   140023c8c:	call   0x14002b100
   140023c91:	add    rsp,0xb0
   140023c98:	pop    r12
   140023c9a:	pop    rdi
   140023c9b:	pop    rsi
   140023c9c:	pop    rbx
   140023c9d:	pop    rbp
   140023c9e:	ret    
   140023c9f:	int3   
   140023ca0:	rex push rbp
   140023ca2:	push   rbx
   140023ca3:	push   rsi
   140023ca4:	push   rdi
   140023ca5:	push   r12
   140023ca7:	push   r13
   140023ca9:	push   r14
   140023cab:	push   r15
   140023cad:	lea    rbp,[rsp-0x78]
   140023cb2:	sub    rsp,0x178
   140023cb9:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140023cc2:	mov    rax,QWORD PTR [rip+0x44527]        # 0x1400681f0
   140023cc9:	xor    rax,rsp
   140023ccc:	mov    QWORD PTR [rbp+0x68],rax
   140023cd0:	mov    QWORD PTR [rsp+0x38],r9
   140023cd5:	mov    QWORD PTR [rsp+0x20],r8
   140023cda:	mov    rdi,rdx
   140023cdd:	mov    QWORD PTR [rsp+0x40],rdx
   140023ce2:	mov    rbx,rcx
   140023ce5:	mov    rax,QWORD PTR [rbp+0xe8]
   140023cec:	mov    QWORD PTR [rsp+0x28],rax
   140023cf1:	mov    rax,QWORD PTR [rbp+0xf0]
   140023cf8:	mov    QWORD PTR [rsp+0x30],rax
   140023cfd:	mov    QWORD PTR [rsp+0x68],0x7
   140023d06:	xor    esi,esi
   140023d08:	mov    QWORD PTR [rsp+0x60],rsi
   140023d0d:	mov    WORD PTR [rsp+0x50],si
   140023d12:	lea    rcx,[rip+0x2e157]        # 0x140051e70
   140023d19:	call   QWORD PTR [rip+0x25991]        # 0x1400496b0
   140023d1f:	mov    r8,rax
   140023d22:	lea    rdx,[rip+0x2e147]        # 0x140051e70
   140023d29:	lea    rcx,[rsp+0x50]
   140023d2e:	call   0x1400096cc
   140023d33:	nop
   140023d34:	lea    r15,[rbx+0x68]
   140023d38:	lea    r8,[rsp+0x50]
   140023d3d:	mov    rdx,rdi
   140023d40:	mov    rcx,r15
   140023d43:	call   0x14000e86c
   140023d48:	test   al,al
   140023d4a:	sete   bl
   140023d4d:	cmp    QWORD PTR [rsp+0x68],0x8
   140023d53:	jb     0x140023d60
   140023d55:	mov    rcx,QWORD PTR [rsp+0x50]
   140023d5a:	call   QWORD PTR [rip+0x25918]        # 0x140049678
   140023d60:	test   bl,bl
   140023d62:	je     0x140023e76
   140023d68:	mov    r12d,0xf
   140023d6e:	mov    QWORD PTR [rbp-0x48],r12
   140023d72:	mov    QWORD PTR [rbp-0x50],rsi
   140023d76:	mov    BYTE PTR [rbp-0x60],sil
   140023d7a:	lea    rcx,[rip+0x2e117]        # 0x140051e98
   140023d81:	call   QWORD PTR [rip+0x25881]        # 0x140049608
   140023d87:	mov    r8,rax
   140023d8a:	lea    rdx,[rip+0x2e107]        # 0x140051e98
   140023d91:	lea    rcx,[rbp-0x60]
   140023d95:	call   0x140005154
   140023d9a:	nop
   140023d9b:	mov    QWORD PTR [rsp+0x68],r12
   140023da0:	mov    QWORD PTR [rsp+0x60],rsi
   140023da5:	mov    BYTE PTR [rsp+0x50],sil
   140023daa:	lea    r13,[rip+0x2de1f]        # 0x140051bd0
   140023db1:	mov    rcx,r13
   140023db4:	call   QWORD PTR [rip+0x2584e]        # 0x140049608
   140023dba:	mov    r8,rax
   140023dbd:	mov    rdx,r13
   140023dc0:	lea    rcx,[rsp+0x50]
   140023dc5:	call   0x140005154
   140023dca:	nop
   140023dcb:	lea    rcx,[rsp+0x50]
   140023dd0:	call   0x140011ed0
   140023dd5:	mov    rbx,rax
   140023dd8:	mov    QWORD PTR [rbp-0x70],r12
   140023ddc:	mov    QWORD PTR [rbp-0x78],rsi
   140023de0:	mov    BYTE PTR [rsp+0x78],sil
   140023de5:	lea    r14,[rip+0x2cb09]        # 0x1400508f5
   140023dec:	mov    rcx,r14
   140023def:	call   QWORD PTR [rip+0x25813]        # 0x140049608
   140023df5:	mov    r8,rax
   140023df8:	mov    rdx,r14
   140023dfb:	lea    rcx,[rsp+0x78]
   140023e00:	call   0x140005154
   140023e05:	nop
   140023e06:	mov    r9,QWORD PTR [rbx]
   140023e09:	lea    r8,[rsp+0x78]
   140023e0e:	lea    rdx,[rbp-0x60]
   140023e12:	mov    rcx,rbx
   140023e15:	call   QWORD PTR [r9+0x80]
   140023e1c:	nop
   140023e1d:	cmp    QWORD PTR [rbp-0x70],0x10
   140023e22:	jb     0x140023e2f
   140023e24:	mov    rcx,QWORD PTR [rsp+0x78]
   140023e29:	call   QWORD PTR [rip+0x25849]        # 0x140049678
   140023e2f:	mov    QWORD PTR [rbp-0x70],r12
   140023e33:	mov    QWORD PTR [rbp-0x78],rsi
   140023e37:	mov    BYTE PTR [rsp+0x78],sil
   140023e3c:	cmp    QWORD PTR [rsp+0x68],0x10
   140023e42:	jb     0x140023e4f
   140023e44:	mov    rcx,QWORD PTR [rsp+0x50]
   140023e49:	call   QWORD PTR [rip+0x25829]        # 0x140049678
   140023e4f:	mov    QWORD PTR [rsp+0x68],r12
   140023e54:	mov    QWORD PTR [rsp+0x60],rsi
   140023e59:	mov    BYTE PTR [rsp+0x50],sil
   140023e5e:	cmp    QWORD PTR [rbp-0x48],0x10
   140023e63:	jb     0x140023e6f
   140023e65:	mov    rcx,QWORD PTR [rbp-0x60]
   140023e69:	call   QWORD PTR [rip+0x25809]        # 0x140049678
   140023e6f:	xor    al,al
   140023e71:	jmp    0x140024337
   140023e76:	mov    rcx,r15
   140023e79:	call   0x14000ea74
   140023e7e:	mov    r12d,0xf
   140023e84:	mov    QWORD PTR [rbp-0x50],rsi
   140023e88:	mov    BYTE PTR [rbp-0x60],sil
   140023e8c:	mov    QWORD PTR [rbp-0x48],r12
   140023e90:	test   al,al
   140023e92:	jne    0x140023f81
   140023e98:	lea    rcx,[rip+0x2e019]        # 0x140051eb8
   140023e9f:	call   QWORD PTR [rip+0x25763]        # 0x140049608
   140023ea5:	mov    r8,rax
   140023ea8:	lea    rdx,[rip+0x2e009]        # 0x140051eb8
   140023eaf:	lea    rcx,[rbp-0x60]
   140023eb3:	call   0x140005154
   140023eb8:	nop
   140023eb9:	mov    QWORD PTR [rbp-0x70],r12
   140023ebd:	mov    QWORD PTR [rbp-0x78],rsi
   140023ec1:	mov    BYTE PTR [rsp+0x78],sil
   140023ec6:	lea    r13,[rip+0x2dd03]        # 0x140051bd0
   140023ecd:	mov    rcx,r13
   140023ed0:	call   QWORD PTR [rip+0x25732]        # 0x140049608
   140023ed6:	mov    r8,rax
   140023ed9:	mov    rdx,r13
   140023edc:	lea    rcx,[rsp+0x78]
   140023ee1:	call   0x140005154
   140023ee6:	nop
   140023ee7:	lea    rcx,[rsp+0x78]
   140023eec:	call   0x140011ed0
   140023ef1:	mov    rbx,rax
   140023ef4:	mov    QWORD PTR [rsp+0x68],r12
   140023ef9:	mov    QWORD PTR [rsp+0x60],rsi
   140023efe:	mov    BYTE PTR [rsp+0x50],sil
   140023f03:	lea    r14,[rip+0x2c9eb]        # 0x1400508f5
   140023f0a:	mov    rcx,r14
   140023f0d:	call   QWORD PTR [rip+0x256f5]        # 0x140049608
   140023f13:	mov    r8,rax
   140023f16:	mov    rdx,r14
   140023f19:	lea    rcx,[rsp+0x50]
   140023f1e:	call   0x140005154
   140023f23:	nop
   140023f24:	mov    r9,QWORD PTR [rbx]
   140023f27:	lea    r8,[rsp+0x50]
   140023f2c:	lea    rdx,[rbp-0x60]
   140023f30:	mov    rcx,rbx
   140023f33:	call   QWORD PTR [r9+0x80]
   140023f3a:	nop
   140023f3b:	cmp    QWORD PTR [rsp+0x68],0x10
   140023f41:	jb     0x140023f4e
   140023f43:	mov    rcx,QWORD PTR [rsp+0x50]
   140023f48:	call   QWORD PTR [rip+0x2572a]        # 0x140049678
   140023f4e:	mov    QWORD PTR [rsp+0x68],r12
   140023f53:	mov    QWORD PTR [rsp+0x60],rsi
   140023f58:	mov    BYTE PTR [rsp+0x50],sil
   140023f5d:	cmp    QWORD PTR [rbp-0x70],0x10
   140023f62:	jb     0x140023f6f
   140023f64:	mov    rcx,QWORD PTR [rsp+0x78]
   140023f69:	call   QWORD PTR [rip+0x25709]        # 0x140049678
   140023f6f:	mov    QWORD PTR [rbp-0x70],r12
   140023f73:	mov    QWORD PTR [rbp-0x78],rsi
   140023f77:	mov    BYTE PTR [rsp+0x78],sil
   140023f7c:	jmp    0x140023e5e
   140023f81:	lea    r13,[rip+0x2dc48]        # 0x140051bd0
   140023f88:	mov    rcx,r13
   140023f8b:	call   QWORD PTR [rip+0x25677]        # 0x140049608
   140023f91:	mov    r8,rax
   140023f94:	mov    rdx,r13
   140023f97:	lea    rcx,[rbp-0x60]
   140023f9b:	call   0x140005154
   140023fa0:	nop
   140023fa1:	lea    rcx,[rbp-0x60]
   140023fa5:	call   0x140011ed0
   140023faa:	mov    rdi,rax
   140023fad:	mov    QWORD PTR [rsp+0x68],r12
   140023fb2:	mov    QWORD PTR [rsp+0x60],rsi
   140023fb7:	mov    BYTE PTR [rsp+0x50],sil
   140023fbc:	lea    r14,[rip+0x2c932]        # 0x1400508f5
   140023fc3:	mov    rcx,r14
   140023fc6:	call   QWORD PTR [rip+0x2563c]        # 0x140049608
   140023fcc:	mov    r8,rax
   140023fcf:	mov    rdx,r14
   140023fd2:	lea    rcx,[rsp+0x50]
   140023fd7:	call   0x140005154
   140023fdc:	nop
   140023fdd:	mov    rdx,QWORD PTR [rsp+0x20]
   140023fe2:	lea    rcx,[rbp+0x40]
   140023fe6:	call   0x140009474
   140023feb:	mov    rbx,rax
   140023fee:	mov    rdx,QWORD PTR [rsp+0x40]
   140023ff3:	lea    rcx,[rbp-0x10]
   140023ff7:	call   0x140009474
   140023ffc:	nop
   140023ffd:	mov    rdx,rax
   140024000:	lea    rcx,[rbp-0x38]
   140024004:	call   0x1400245ec
   140024009:	nop
   14002400a:	lea    r8,[rip+0x2dec7]        # 0x140051ed8
   140024011:	mov    rdx,rax
   140024014:	lea    rcx,[rbp+0x18]
   140024018:	call   0x1400113b0
   14002401d:	nop
   14002401e:	mov    r8,rbx
   140024021:	mov    rdx,rax
   140024024:	lea    rcx,[rsp+0x78]
   140024029:	call   0x140011414
   14002402e:	nop
   14002402f:	mov    r9,QWORD PTR [rdi]
   140024032:	lea    r8,[rsp+0x50]
   140024037:	mov    rdx,rax
   14002403a:	mov    rcx,rdi
   14002403d:	call   QWORD PTR [r9+0x80]
   140024044:	nop
   140024045:	cmp    QWORD PTR [rbp-0x70],0x10
   14002404a:	jb     0x140024057
   14002404c:	mov    rcx,QWORD PTR [rsp+0x78]
   140024051:	call   QWORD PTR [rip+0x25621]        # 0x140049678
   140024057:	mov    QWORD PTR [rbp-0x70],r12
   14002405b:	mov    QWORD PTR [rbp-0x78],rsi
   14002405f:	mov    BYTE PTR [rsp+0x78],sil
   140024064:	cmp    QWORD PTR [rbp+0x30],0x10
   140024069:	jb     0x140024075
   14002406b:	mov    rcx,QWORD PTR [rbp+0x18]
   14002406f:	call   QWORD PTR [rip+0x25603]        # 0x140049678
   140024075:	mov    QWORD PTR [rbp+0x30],r12
   140024079:	mov    QWORD PTR [rbp+0x28],rsi
   14002407d:	mov    BYTE PTR [rbp+0x18],sil
   140024081:	cmp    QWORD PTR [rbp-0x20],0x10
   140024086:	jb     0x140024092
   140024088:	mov    rcx,QWORD PTR [rbp-0x38]
   14002408c:	call   QWORD PTR [rip+0x255e6]        # 0x140049678
   140024092:	mov    QWORD PTR [rbp-0x20],r12
   140024096:	mov    QWORD PTR [rbp-0x28],rsi
   14002409a:	mov    BYTE PTR [rbp-0x38],sil
   14002409e:	cmp    QWORD PTR [rbp+0x8],0x10
   1400240a3:	jb     0x1400240af
   1400240a5:	mov    rcx,QWORD PTR [rbp-0x10]
   1400240a9:	call   QWORD PTR [rip+0x255c9]        # 0x140049678
   1400240af:	mov    QWORD PTR [rbp+0x8],r12
   1400240b3:	mov    QWORD PTR [rbp+0x0],rsi
   1400240b7:	mov    BYTE PTR [rbp-0x10],sil
   1400240bb:	cmp    QWORD PTR [rbp+0x58],0x10
   1400240c0:	jb     0x1400240cc
   1400240c2:	mov    rcx,QWORD PTR [rbp+0x40]
   1400240c6:	call   QWORD PTR [rip+0x255ac]        # 0x140049678
   1400240cc:	mov    QWORD PTR [rbp+0x58],r12
   1400240d0:	mov    QWORD PTR [rbp+0x50],rsi
   1400240d4:	mov    BYTE PTR [rbp+0x40],sil
   1400240d8:	cmp    QWORD PTR [rsp+0x68],0x10
   1400240de:	jb     0x1400240eb
   1400240e0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400240e5:	call   QWORD PTR [rip+0x2558d]        # 0x140049678
   1400240eb:	mov    QWORD PTR [rsp+0x68],r12
   1400240f0:	mov    QWORD PTR [rsp+0x60],rsi
   1400240f5:	mov    BYTE PTR [rsp+0x50],sil
   1400240fa:	cmp    QWORD PTR [rbp-0x48],0x10
   1400240ff:	jb     0x14002410b
   140024101:	mov    rcx,QWORD PTR [rbp-0x60]
   140024105:	call   QWORD PTR [rip+0x2556d]        # 0x140049678
   14002410b:	mov    r9,QWORD PTR [rbp+0xe0]
   140024112:	mov    r8,QWORD PTR [rsp+0x38]
   140024117:	mov    rdx,QWORD PTR [rsp+0x20]
   14002411c:	mov    rcx,r15
   14002411f:	call   0x14000eb20
   140024124:	test   al,al
   140024126:	je     0x140024241
   14002412c:	mov    rdx,QWORD PTR [rsp+0x28]
   140024131:	mov    rcx,r15
   140024134:	call   0x14000ecfc
   140024139:	test   al,al
   14002413b:	je     0x14002415a
   14002413d:	mov    rdx,QWORD PTR [rsp+0x30]
   140024142:	mov    rcx,r15
   140024145:	call   0x14000ebf0
   14002414a:	test   al,al
   14002414c:	je     0x140024334
   140024152:	mov    sil,0x1
   140024155:	jmp    0x140024334
   14002415a:	mov    QWORD PTR [rbp-0x48],r12
   14002415e:	mov    QWORD PTR [rbp-0x50],rsi
   140024162:	mov    BYTE PTR [rbp-0x60],sil
   140024166:	lea    rcx,[rip+0x2dd9b]        # 0x140051f08
   14002416d:	call   QWORD PTR [rip+0x25495]        # 0x140049608
   140024173:	mov    r8,rax
   140024176:	lea    rdx,[rip+0x2dd8b]        # 0x140051f08
   14002417d:	lea    rcx,[rbp-0x60]
   140024181:	call   0x140005154
   140024186:	nop
   140024187:	mov    QWORD PTR [rbp-0x70],r12
   14002418b:	mov    QWORD PTR [rbp-0x78],rsi
   14002418f:	mov    BYTE PTR [rsp+0x78],sil
   140024194:	mov    rcx,r13
   140024197:	call   QWORD PTR [rip+0x2546b]        # 0x140049608
   14002419d:	mov    r8,rax
   1400241a0:	mov    rdx,r13
   1400241a3:	lea    rcx,[rsp+0x78]
   1400241a8:	call   0x140005154
   1400241ad:	nop
   1400241ae:	lea    rcx,[rsp+0x78]
   1400241b3:	call   0x140011ed0
   1400241b8:	mov    rbx,rax
   1400241bb:	mov    QWORD PTR [rsp+0x68],r12
   1400241c0:	mov    QWORD PTR [rsp+0x60],rsi
   1400241c5:	mov    BYTE PTR [rsp+0x50],sil
   1400241ca:	mov    rcx,r14
   1400241cd:	call   QWORD PTR [rip+0x25435]        # 0x140049608
   1400241d3:	mov    r8,rax
   1400241d6:	mov    rdx,r14
   1400241d9:	lea    rcx,[rsp+0x50]
   1400241de:	call   0x140005154
   1400241e3:	nop
   1400241e4:	mov    r9,QWORD PTR [rbx]
   1400241e7:	lea    r8,[rsp+0x50]
   1400241ec:	lea    rdx,[rbp-0x60]
   1400241f0:	mov    rcx,rbx
   1400241f3:	call   QWORD PTR [r9+0x80]
   1400241fa:	nop
   1400241fb:	cmp    QWORD PTR [rsp+0x68],0x10
   140024201:	jb     0x14002420e
   140024203:	mov    rcx,QWORD PTR [rsp+0x50]
   140024208:	call   QWORD PTR [rip+0x2546a]        # 0x140049678
   14002420e:	mov    QWORD PTR [rsp+0x68],r12
   140024213:	mov    QWORD PTR [rsp+0x60],rsi
   140024218:	mov    BYTE PTR [rsp+0x50],sil
   14002421d:	cmp    QWORD PTR [rbp-0x70],0x10
   140024222:	jb     0x14002422f
   140024224:	mov    rcx,QWORD PTR [rsp+0x78]
   140024229:	call   QWORD PTR [rip+0x25449]        # 0x140049678
   14002422f:	mov    QWORD PTR [rbp-0x70],r12
   140024233:	mov    QWORD PTR [rbp-0x78],rsi
   140024237:	mov    BYTE PTR [rsp+0x78],sil
   14002423c:	jmp    0x140024323
   140024241:	mov    QWORD PTR [rbp-0x48],r12
   140024245:	mov    QWORD PTR [rbp-0x50],rsi
   140024249:	mov    BYTE PTR [rbp-0x60],sil
   14002424d:	lea    rcx,[rip+0x2dcd4]        # 0x140051f28
   140024254:	call   QWORD PTR [rip+0x253ae]        # 0x140049608
   14002425a:	mov    r8,rax
   14002425d:	lea    rdx,[rip+0x2dcc4]        # 0x140051f28
   140024264:	lea    rcx,[rbp-0x60]
   140024268:	call   0x140005154
   14002426d:	nop
   14002426e:	mov    QWORD PTR [rbp-0x70],r12
   140024272:	mov    QWORD PTR [rbp-0x78],rsi
   140024276:	mov    BYTE PTR [rsp+0x78],sil
   14002427b:	mov    rcx,r13
   14002427e:	call   QWORD PTR [rip+0x25384]        # 0x140049608
   140024284:	mov    r8,rax
   140024287:	mov    rdx,r13
   14002428a:	lea    rcx,[rsp+0x78]
   14002428f:	call   0x140005154
   140024294:	nop
   140024295:	lea    rcx,[rsp+0x78]
   14002429a:	call   0x140011ed0
   14002429f:	mov    rbx,rax
   1400242a2:	mov    QWORD PTR [rsp+0x68],r12
   1400242a7:	mov    QWORD PTR [rsp+0x60],rsi
   1400242ac:	mov    BYTE PTR [rsp+0x50],sil
   1400242b1:	mov    rcx,r14
   1400242b4:	call   QWORD PTR [rip+0x2534e]        # 0x140049608
   1400242ba:	mov    r8,rax
   1400242bd:	mov    rdx,r14
   1400242c0:	lea    rcx,[rsp+0x50]
   1400242c5:	call   0x140005154
   1400242ca:	nop
   1400242cb:	mov    r9,QWORD PTR [rbx]
   1400242ce:	lea    r8,[rsp+0x50]
   1400242d3:	lea    rdx,[rbp-0x60]
   1400242d7:	mov    rcx,rbx
   1400242da:	call   QWORD PTR [r9+0x80]
   1400242e1:	nop
   1400242e2:	cmp    QWORD PTR [rsp+0x68],0x10
   1400242e8:	jb     0x1400242f5
   1400242ea:	mov    rcx,QWORD PTR [rsp+0x50]
   1400242ef:	call   QWORD PTR [rip+0x25383]        # 0x140049678
   1400242f5:	mov    QWORD PTR [rsp+0x68],r12
   1400242fa:	mov    QWORD PTR [rsp+0x60],rsi
   1400242ff:	mov    BYTE PTR [rsp+0x50],sil
   140024304:	cmp    QWORD PTR [rbp-0x70],0x10
   140024309:	jb     0x140024316
   14002430b:	mov    rcx,QWORD PTR [rsp+0x78]
   140024310:	call   QWORD PTR [rip+0x25362]        # 0x140049678
   140024316:	mov    QWORD PTR [rbp-0x70],r12
   14002431a:	mov    QWORD PTR [rbp-0x78],rsi
   14002431e:	mov    BYTE PTR [rsp+0x78],sil
   140024323:	cmp    QWORD PTR [rbp-0x48],0x10
   140024328:	jb     0x140024334
   14002432a:	mov    rcx,QWORD PTR [rbp-0x60]
   14002432e:	call   QWORD PTR [rip+0x25344]        # 0x140049678
   140024334:	mov    al,sil
   140024337:	mov    rcx,QWORD PTR [rbp+0x68]
   14002433b:	xor    rcx,rsp
   14002433e:	call   0x14002b100
   140024343:	add    rsp,0x178
   14002434a:	pop    r15
   14002434c:	pop    r14
   14002434e:	pop    r13
   140024350:	pop    r12
   140024352:	pop    rdi
   140024353:	pop    rsi
   140024354:	pop    rbx
   140024355:	pop    rbp
   140024356:	ret    
   140024357:	int3   
   140024358:	rex push rbp
   14002435a:	push   rbx
   14002435b:	push   rsi
   14002435c:	push   rdi
   14002435d:	push   r12
   14002435f:	push   r13
   140024361:	lea    rbp,[rsp-0x2f]
   140024366:	sub    rsp,0xa8
   14002436d:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140024375:	mov    rax,QWORD PTR [rip+0x43e74]        # 0x1400681f0
   14002437c:	xor    rax,rsp
   14002437f:	mov    QWORD PTR [rbp+0x1f],rax
   140024383:	mov    r12,r9
   140024386:	mov    rsi,r8
   140024389:	mov    rdi,rdx
   14002438c:	mov    rbx,rcx
   14002438f:	xor    r13d,r13d
   140024392:	cmp    BYTE PTR [rcx+0x51],r13b
   140024396:	je     0x14002439e
   140024398:	mov    rax,QWORD PTR [rcx]
   14002439b:	call   QWORD PTR [rax+0x20]
   14002439e:	mov    BYTE PTR [rbx+0x51],0x1
   1400243a2:	mov    rdx,r12
   1400243a5:	lea    rcx,[rbp-0x9]
   1400243a9:	call   0x1400095c4
   1400243ae:	nop
   1400243af:	mov    r12d,0x7
   1400243b5:	mov    QWORD PTR [rbp-0x19],r12
   1400243b9:	mov    QWORD PTR [rbp-0x21],r13
   1400243bd:	mov    WORD PTR [rbp-0x31],r13w
   1400243c2:	lea    r8,[rbp-0x31]
   1400243c6:	mov    rdx,rsi
   1400243c9:	mov    rcx,rdi
   1400243cc:	call   0x140023af0
   1400243d1:	lea    r11,[rbx+0x28]
   1400243d5:	lea    rax,[rbx+0x8]
   1400243d9:	mov    QWORD PTR [rsp+0x30],r11
   1400243de:	mov    QWORD PTR [rsp+0x28],rax
   1400243e3:	mov    QWORD PTR [rsp+0x20],r13
   1400243e8:	xor    r9d,r9d
   1400243eb:	lea    r8,[rbp-0x31]
   1400243ef:	lea    rdx,[rbp-0x9]
   1400243f3:	mov    rcx,rbx
   1400243f6:	call   0x140023ca0
   1400243fb:	mov    dil,al
   1400243fe:	mov    WORD PTR [rbx+0x50],0x1
   140024404:	cmp    QWORD PTR [rbp-0x19],0x8
   140024409:	jb     0x140024415
   14002440b:	mov    rcx,QWORD PTR [rbp-0x31]
   14002440f:	call   QWORD PTR [rip+0x25263]        # 0x140049678
   140024415:	mov    QWORD PTR [rbp-0x19],r12
   140024419:	mov    QWORD PTR [rbp-0x21],r13
   14002441d:	mov    WORD PTR [rbp-0x31],r13w
   140024422:	cmp    QWORD PTR [rbp+0xf],0x8
   140024427:	jb     0x140024433
   140024429:	mov    rcx,QWORD PTR [rbp-0x9]
   14002442d:	call   QWORD PTR [rip+0x25245]        # 0x140049678
   140024433:	mov    al,dil
   140024436:	mov    rcx,QWORD PTR [rbp+0x1f]
   14002443a:	xor    rcx,rsp
   14002443d:	call   0x14002b100
   140024442:	add    rsp,0xa8
   140024449:	pop    r13
   14002444b:	pop    r12
   14002444d:	pop    rdi
   14002444e:	pop    rsi
   14002444f:	pop    rbx
   140024450:	pop    rbp
   140024451:	ret    
   140024452:	int3   
   140024453:	int3   
   140024454:	rex push rbx
   140024456:	push   rsi
   140024457:	push   rdi
   140024458:	sub    rsp,0x90
   14002445f:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140024468:	mov    rax,QWORD PTR [rip+0x43d81]        # 0x1400681f0
   14002446f:	xor    rax,rsp
   140024472:	mov    QWORD PTR [rsp+0x80],rax
   14002447a:	mov    rbx,rcx
   14002447d:	cmp    QWORD PTR [rcx+0x18],0x10
   140024482:	jb     0x140024487
   140024484:	mov    rcx,QWORD PTR [rcx]
   140024487:	mov    rax,QWORD PTR [rbx+0x10]
   14002448b:	lea    rsi,[rcx+rax*1]
   14002448f:	cmp    QWORD PTR [rbx+0x18],0x10
   140024494:	jb     0x14002449b
   140024496:	mov    rdi,QWORD PTR [rbx]
   140024499:	jmp    0x14002449e
   14002449b:	mov    rdi,rbx
   14002449e:	mov    QWORD PTR [rsp+0x70],0xf
   1400244a7:	and    QWORD PTR [rsp+0x68],0x0
   1400244ad:	mov    BYTE PTR [rsp+0x58],0x0
   1400244b2:	movups xmm0,XMMWORD PTR [r8]
   1400244b6:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400244bc:	movups xmm1,XMMWORD PTR [rdx]
   1400244bf:	movdqu XMMWORD PTR [rsp+0x40],xmm1
   1400244c5:	lea    r8,[rsp+0x30]
   1400244ca:	lea    rdx,[rsp+0x40]
   1400244cf:	lea    rcx,[rsp+0x58]
   1400244d4:	call   0x140024774
   1400244d9:	nop
   1400244da:	cmp    QWORD PTR [rbx+0x18],0x10
   1400244df:	jb     0x1400244e6
   1400244e1:	mov    rax,QWORD PTR [rbx]
   1400244e4:	jmp    0x1400244e9
   1400244e6:	mov    rax,rbx
   1400244e9:	test   rsi,rsi
   1400244ec:	je     0x1400244f1
   1400244ee:	sub    rsi,rdi
   1400244f1:	test   rdi,rdi
   1400244f4:	je     0x1400244f9
   1400244f6:	sub    rdi,rax
   1400244f9:	or     QWORD PTR [rsp+0x28],0xffffffffffffffff
   1400244ff:	and    QWORD PTR [rsp+0x20],0x0
   140024505:	lea    r9,[rsp+0x58]
   14002450a:	mov    r8,rsi
   14002450d:	mov    rdx,rdi
   140024510:	mov    rcx,rbx
   140024513:	call   0x14001844c
   140024518:	nop
   140024519:	cmp    QWORD PTR [rsp+0x70],0x10
   14002451f:	jb     0x14002452c
   140024521:	mov    rcx,QWORD PTR [rsp+0x58]
   140024526:	call   QWORD PTR [rip+0x2514c]        # 0x140049678
   14002452c:	mov    rax,rbx
   14002452f:	mov    rcx,QWORD PTR [rsp+0x80]
   140024537:	xor    rcx,rsp
   14002453a:	call   0x14002b100
   14002453f:	add    rsp,0x90
   140024546:	pop    rdi
   140024547:	pop    rsi
   140024548:	pop    rbx
   140024549:	ret    
   14002454a:	int3   
   14002454b:	int3   
   14002454c:	mov    QWORD PTR [rsp+0x8],rcx
   140024551:	push   rbp
   140024552:	push   rbx
   140024553:	push   rdi
   140024554:	lea    rbp,[rsp-0x30]
   140024559:	sub    rsp,0x130
   140024560:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024569:	mov    rbx,rdx
   14002456c:	mov    rdi,rcx
   14002456f:	and    DWORD PTR [rbp+0x60],0x0
   140024573:	lea    rcx,[rsp+0x30]
   140024578:	call   0x140014770
   14002457d:	nop
   14002457e:	mov    rdx,rbx
   140024581:	lea    rcx,[rsp+0x40]
   140024586:	call   QWORD PTR [rip+0x25004]        # 0x140049590
   14002458c:	mov    rdx,rdi
   14002458f:	lea    rcx,[rsp+0x30]
   140024594:	call   0x140014814
   140024599:	mov    DWORD PTR [rbp+0x60],0x1
   1400245a0:	lea    rax,[rbp-0x38]
   1400245a4:	mov    QWORD PTR [rbp+0x68],rax
   1400245a8:	mov    rax,QWORD PTR [rsp+0x30]
   1400245ad:	movsxd rcx,DWORD PTR [rax+0x4]
   1400245b1:	lea    rax,[rip+0x2c970]        # 0x140050f28
   1400245b8:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
   1400245bd:	lea    rcx,[rsp+0x48]
   1400245c2:	call   0x140014834
   1400245c7:	nop
   1400245c8:	lea    rcx,[rsp+0x48]
   1400245cd:	call   QWORD PTR [rip+0x24eed]        # 0x1400494c0
   1400245d3:	lea    rcx,[rbp-0x38]
   1400245d7:	call   QWORD PTR [rip+0x24d23]        # 0x140049300
   1400245dd:	mov    rax,rdi
   1400245e0:	add    rsp,0x130
   1400245e7:	pop    rdi
   1400245e8:	pop    rbx
   1400245e9:	pop    rbp
   1400245ea:	ret    
   1400245eb:	int3   
   1400245ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400245f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400245f6:	push   rsi
   1400245f7:	push   rdi
   1400245f8:	push   r12
   1400245fa:	sub    rsp,0x20
   1400245fe:	and    DWORD PTR [rsp+0x50],0x0
   140024603:	mov    rsi,rcx
   140024606:	lea    r12,[rip+0x2d8db]        # 0x140051ee8
   14002460d:	mov    rcx,r12
   140024610:	mov    rbx,rdx
   140024613:	call   QWORD PTR [rip+0x24fef]        # 0x140049608
   140024619:	mov    rdx,QWORD PTR [rbx+0x18]
   14002461d:	mov    rbp,rax
   140024620:	cmp    rdx,0x10
   140024624:	jb     0x14002462b
   140024626:	mov    r8,QWORD PTR [rbx]
   140024629:	jmp    0x14002462e
   14002462b:	mov    r8,rbx
   14002462e:	cmp    r12,r8
   140024631:	jb     0x140024674
   140024633:	cmp    rdx,0x10
   140024637:	jb     0x14002463e
   140024639:	mov    rcx,QWORD PTR [rbx]
   14002463c:	jmp    0x140024641
   14002463e:	mov    rcx,rbx
   140024641:	add    rcx,QWORD PTR [rbx+0x10]
   140024645:	cmp    rcx,r12
   140024648:	jbe    0x140024674
   14002464a:	cmp    rdx,0x10
   14002464e:	jb     0x140024655
   140024650:	mov    rax,QWORD PTR [rbx]
   140024653:	jmp    0x140024658
   140024655:	mov    rax,rbx
   140024658:	sub    r12,rax
   14002465b:	mov    r9,rbp
   14002465e:	mov    rdx,rbx
   140024661:	mov    r8,r12
   140024664:	mov    rcx,rbx
   140024667:	call   0x14001148c
   14002466c:	mov    rbx,rax
   14002466f:	jmp    0x140024742
   140024674:	mov    r8,QWORD PTR [rbx+0x10]
   140024678:	or     rax,0xffffffffffffffff
   14002467c:	sub    rax,r8
   14002467f:	cmp    rax,rbp
   140024682:	ja     0x140024692
   140024684:	lea    rcx,[rip+0x2c2bd]        # 0x140050948
   14002468b:	call   QWORD PTR [rip+0x24f07]        # 0x140049598
   140024691:	int3   
   140024692:	test   rbp,rbp
   140024695:	je     0x140024742
   14002469b:	lea    rdi,[r8+rbp*1]
   14002469f:	cmp    rdi,0xfffffffffffffffe
   1400246a3:	jbe    0x1400246b3
   1400246a5:	lea    rcx,[rip+0x2c29c]        # 0x140050948
   1400246ac:	call   QWORD PTR [rip+0x24ee6]        # 0x140049598
   1400246b2:	int3   
   1400246b3:	cmp    rdx,rdi
   1400246b6:	jae    0x1400246c5
   1400246b8:	mov    rdx,rdi
   1400246bb:	mov    rcx,rbx
   1400246be:	call   0x140005750
   1400246c3:	jmp    0x1400246df
   1400246c5:	test   rdi,rdi
   1400246c8:	jne    0x1400246e4
   1400246ca:	and    QWORD PTR [rbx+0x10],rdi
   1400246ce:	cmp    rdx,0x10
   1400246d2:	jb     0x1400246d9
   1400246d4:	mov    rax,QWORD PTR [rbx]
   1400246d7:	jmp    0x1400246dc
   1400246d9:	mov    rax,rbx
   1400246dc:	mov    BYTE PTR [rax],0x0
   1400246df:	test   rdi,rdi
   1400246e2:	je     0x140024742
   1400246e4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400246e9:	jb     0x1400246f0
   1400246eb:	mov    rdx,QWORD PTR [rbx]
   1400246ee:	jmp    0x1400246f3
   1400246f0:	mov    rdx,rbx
   1400246f3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400246f8:	jb     0x1400246ff
   1400246fa:	mov    rax,QWORD PTR [rbx]
   1400246fd:	jmp    0x140024702
   1400246ff:	mov    rax,rbx
   140024702:	mov    r8,QWORD PTR [rbx+0x10]
   140024706:	lea    rcx,[rax+rbp*1]
   14002470a:	call   QWORD PTR [rip+0x24ee0]        # 0x1400495f0
   140024710:	cmp    QWORD PTR [rbx+0x18],0x10
   140024715:	jb     0x14002471c
   140024717:	mov    rcx,QWORD PTR [rbx]
   14002471a:	jmp    0x14002471f
   14002471c:	mov    rcx,rbx
   14002471f:	mov    r8,rbp
   140024722:	mov    rdx,r12
   140024725:	call   QWORD PTR [rip+0x2519d]        # 0x1400498c8
   14002472b:	cmp    QWORD PTR [rbx+0x18],0x10
   140024730:	mov    QWORD PTR [rbx+0x10],rdi
   140024734:	jb     0x14002473b
   140024736:	mov    rax,QWORD PTR [rbx]
   140024739:	jmp    0x14002473e
   14002473b:	mov    rax,rbx
   14002473e:	mov    BYTE PTR [rax+rdi*1],0x0
   140024742:	and    QWORD PTR [rsi+0x10],0x0
   140024747:	mov    QWORD PTR [rsi+0x18],0xf
   14002474f:	mov    rdx,rbx
   140024752:	mov    rcx,rsi
   140024755:	mov    BYTE PTR [rsi],0x0
   140024758:	call   0x140004730
   14002475d:	mov    rbx,QWORD PTR [rsp+0x40]
   140024762:	mov    rbp,QWORD PTR [rsp+0x48]
   140024767:	mov    rax,rsi
   14002476a:	add    rsp,0x20
   14002476e:	pop    r12
   140024770:	pop    rdi
   140024771:	pop    rsi
   140024772:	ret    
   140024773:	int3   
   140024774:	mov    QWORD PTR [rsp+0x8],rcx
   140024779:	push   rdi
   14002477a:	sub    rsp,0x30
   14002477e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024787:	mov    QWORD PTR [rsp+0x48],rbx
   14002478c:	mov    QWORD PTR [rsp+0x50],rsi
   140024791:	mov    rdi,r8
   140024794:	mov    rbx,rdx
   140024797:	mov    rsi,rcx
   14002479a:	cmp    BYTE PTR [rbx+0x8],0x0
   14002479e:	jne    0x1400247c0
   1400247a0:	mov    rcx,QWORD PTR [rbx]
   1400247a3:	test   rcx,rcx
   1400247a6:	je     0x1400247b8
   1400247a8:	call   QWORD PTR [rip+0x24e1a]        # 0x1400495c8
   1400247ae:	cmp    eax,0xffffffff
   1400247b1:	je     0x1400247b8
   1400247b3:	mov    BYTE PTR [rbx+0x9],al
   1400247b6:	jmp    0x1400247bc
   1400247b8:	and    QWORD PTR [rbx],0x0
   1400247bc:	mov    BYTE PTR [rbx+0x8],0x1
   1400247c0:	cmp    BYTE PTR [rdi+0x8],0x0
   1400247c4:	jne    0x1400247e6
   1400247c6:	mov    rcx,QWORD PTR [rdi]
   1400247c9:	test   rcx,rcx
   1400247cc:	je     0x1400247de
   1400247ce:	call   QWORD PTR [rip+0x24df4]        # 0x1400495c8
   1400247d4:	cmp    eax,0xffffffff
   1400247d7:	je     0x1400247de
   1400247d9:	mov    BYTE PTR [rdi+0x9],al
   1400247dc:	jmp    0x1400247e2
   1400247de:	and    QWORD PTR [rdi],0x0
   1400247e2:	mov    BYTE PTR [rdi+0x8],0x1
   1400247e6:	mov    rcx,QWORD PTR [rbx]
   1400247e9:	test   rcx,rcx
   1400247ec:	jne    0x1400247f5
   1400247ee:	cmp    QWORD PTR [rdi],rcx
   1400247f1:	je     0x140024858
   1400247f3:	jmp    0x1400247fb
   1400247f5:	cmp    QWORD PTR [rdi],0x0
   1400247f9:	jne    0x140024858
   1400247fb:	cmp    BYTE PTR [rbx+0x8],0x0
   1400247ff:	jne    0x14002481e
   140024801:	test   rcx,rcx
   140024804:	je     0x140024816
   140024806:	call   QWORD PTR [rip+0x24dbc]        # 0x1400495c8
   14002480c:	cmp    eax,0xffffffff
   14002480f:	je     0x140024816
   140024811:	mov    BYTE PTR [rbx+0x9],al
   140024814:	jmp    0x14002481a
   140024816:	and    QWORD PTR [rbx],0x0
   14002481a:	mov    BYTE PTR [rbx+0x8],0x1
   14002481e:	mov    r8b,BYTE PTR [rbx+0x9]
   140024822:	mov    edx,0x1
   140024827:	mov    rcx,rsi
   14002482a:	call   0x1400047bc
   14002482f:	mov    rcx,QWORD PTR [rbx]
   140024832:	test   rcx,rcx
   140024835:	je     0x14002484b
   140024837:	call   QWORD PTR [rip+0x24a8b]        # 0x1400492c8
   14002483d:	cmp    eax,0xffffffff
   140024840:	je     0x14002484b
   140024842:	mov    BYTE PTR [rbx+0x8],0x0
   140024846:	jmp    0x14002479a
   14002484b:	and    QWORD PTR [rbx],0x0
   14002484f:	mov    BYTE PTR [rbx+0x8],0x1
   140024853:	jmp    0x14002479a
   140024858:	mov    rbx,QWORD PTR [rsp+0x48]
   14002485d:	mov    rsi,QWORD PTR [rsp+0x50]
   140024862:	add    rsp,0x30
   140024866:	pop    rdi
   140024867:	ret    
   140024868:	mov    QWORD PTR [rsp+0x10],rbx
   14002486d:	mov    QWORD PTR [rsp+0x18],rbp
   140024872:	mov    QWORD PTR [rsp+0x20],rsi
   140024877:	push   rdi
   140024878:	push   r12
   14002487a:	push   r13
   14002487c:	sub    rsp,0x70
   140024880:	mov    rax,QWORD PTR [rip+0x43969]        # 0x1400681f0
   140024887:	xor    rax,rsp
   14002488a:	mov    QWORD PTR [rsp+0x60],rax
   14002488f:	mov    r9d,DWORD PTR [rcx]
   140024892:	movzx  edi,r8w
   140024896:	mov    rbx,rcx
   140024899:	mov    r10d,r9d
   14002489c:	lea    ecx,[r9+rdi*8]
   1400248a0:	mov    rsi,rdx
   1400248a3:	shr    r10d,0x3
   1400248a7:	mov    r12d,0x1
   1400248ad:	and    r10w,0x3f
   1400248b2:	cmp    ecx,r9d
   1400248b5:	jae    0x1400248bb
   1400248b7:	add    DWORD PTR [rbx+0x4],r12d
   1400248bb:	xor    ebp,ebp
   1400248bd:	mov    DWORD PTR [rbx],ecx
   1400248bf:	test   di,di
   1400248c2:	je     0x140024948
   1400248c8:	lea    r13d,[rbp+0x4]
   1400248cc:	mov    eax,0xffff
   1400248d1:	movsx  rcx,r10w
   1400248d5:	add    r10w,r12w
   1400248d9:	add    di,ax
   1400248dc:	mov    al,BYTE PTR [rsi]
   1400248de:	add    rsi,r12
   1400248e1:	mov    BYTE PTR [rcx+rbx*1+0x18],al
   1400248e5:	cmp    r10w,0x40
   1400248ea:	jne    0x140024943
   1400248ec:	movzx  r8d,bp
   1400248f0:	lea    r9,[rsp+0x20]
   1400248f5:	mov    r10d,0x10
   1400248fb:	movzx  ecx,r8w
   1400248ff:	add    r8w,r13w
   140024903:	movzx  eax,BYTE PTR [rcx+rbx*1+0x1a]
   140024908:	movzx  edx,BYTE PTR [rcx+rbx*1+0x1b]
   14002490d:	shl    edx,0x8
   140024910:	or     edx,eax
   140024912:	movzx  eax,BYTE PTR [rcx+rbx*1+0x19]
   140024917:	shl    edx,0x8
   14002491a:	or     edx,eax
   14002491c:	movzx  eax,BYTE PTR [rcx+rbx*1+0x18]
   140024921:	shl    edx,0x8
   140024924:	or     edx,eax
   140024926:	mov    DWORD PTR [r9],edx
   140024929:	add    r9,r13
   14002492c:	sub    r10,r12
   14002492f:	jne    0x1400248fb
   140024931:	lea    rcx,[rbx+0x8]
   140024935:	lea    rdx,[rsp+0x20]
   14002493a:	call   0x140024970
   14002493f:	movzx  r10d,bp
   140024943:	test   di,di
   140024946:	jne    0x1400248cc
   140024948:	mov    rcx,QWORD PTR [rsp+0x60]
   14002494d:	xor    rcx,rsp
   140024950:	call   0x14002b100
   140024955:	lea    r11,[rsp+0x70]
   14002495a:	mov    rbx,QWORD PTR [r11+0x28]
   14002495e:	mov    rbp,QWORD PTR [r11+0x30]
   140024962:	mov    rsi,QWORD PTR [r11+0x38]
   140024966:	mov    rsp,r11
   140024969:	pop    r13
   14002496b:	pop    r12
   14002496d:	pop    rdi
   14002496e:	ret    
   14002496f:	int3   
   140024970:	mov    rax,rsp
   140024973:	mov    QWORD PTR [rax+0x10],rbx
   140024977:	mov    QWORD PTR [rax+0x18],rbp
   14002497b:	mov    QWORD PTR [rax+0x20],rsi
   14002497f:	mov    QWORD PTR [rax+0x8],rcx
   140024983:	push   rdi
   140024984:	push   r12
   140024986:	push   r13
   140024988:	push   r14
   14002498a:	push   r15
   14002498c:	mov    r10d,DWORD PTR [rcx+0x4]
   140024990:	mov    r11d,DWORD PTR [rcx+0x8]
   140024994:	mov    r9d,DWORD PTR [rcx+0xc]
   140024998:	mov    ecx,DWORD PTR [rcx]
   14002499a:	mov    rsi,rdx
   14002499d:	mov    r8d,r10d
   1400249a0:	mov    r13d,DWORD PTR [rsi+0x1c]
   1400249a4:	not    r8d
   1400249a7:	mov    eax,r11d
   1400249aa:	and    eax,r10d
   1400249ad:	and    r8d,r9d
   1400249b0:	or     r8d,eax
   1400249b3:	mov    eax,r10d
   1400249b6:	add    r8d,DWORD PTR [rdx]
   1400249b9:	lea    edx,[r8+rcx*1-0x28955b88]
   1400249c1:	rol    edx,0x7
   1400249c4:	add    edx,r10d
   1400249c7:	and    eax,edx
   1400249c9:	mov    ecx,edx
   1400249cb:	not    ecx
   1400249cd:	and    ecx,r11d
   1400249d0:	or     ecx,eax
   1400249d2:	add    ecx,DWORD PTR [rsi+0x4]
   1400249d5:	lea    r8d,[rcx+r9*1-0x173848aa]
   1400249dd:	rol    r8d,0xc
   1400249e1:	add    r8d,edx
   1400249e4:	mov    ecx,r8d
   1400249e7:	mov    eax,r8d
   1400249ea:	not    ecx
   1400249ec:	and    eax,edx
   1400249ee:	and    ecx,r10d
   1400249f1:	or     ecx,eax
   1400249f3:	mov    eax,r8d
   1400249f6:	add    ecx,DWORD PTR [rsi+0x8]
   1400249f9:	lea    r9d,[rcx+r11*1+0x242070db]
   140024a01:	ror    r9d,0xf
   140024a05:	add    r9d,r8d
   140024a08:	and    eax,r9d
   140024a0b:	mov    ecx,r9d
   140024a0e:	not    ecx
   140024a10:	and    ecx,edx
   140024a12:	or     ecx,eax
   140024a14:	mov    eax,r9d
   140024a17:	add    ecx,DWORD PTR [rsi+0xc]
   140024a1a:	lea    r10d,[rcx+r10*1-0x3e423112]
   140024a22:	ror    r10d,0xa
   140024a26:	add    r10d,r9d
   140024a29:	and    eax,r10d
   140024a2c:	mov    ecx,r10d
   140024a2f:	not    ecx
   140024a31:	and    ecx,r8d
   140024a34:	or     ecx,eax
   140024a36:	mov    eax,r10d
   140024a39:	add    ecx,DWORD PTR [rsi+0x10]
   140024a3c:	lea    r11d,[rcx+rdx*1-0xa83f051]
   140024a44:	rol    r11d,0x7
   140024a48:	add    r11d,r10d
   140024a4b:	and    eax,r11d
   140024a4e:	mov    ecx,r11d
   140024a51:	not    ecx
   140024a53:	and    ecx,r9d
   140024a56:	or     ecx,eax
   140024a58:	add    ecx,DWORD PTR [rsi+0x14]
   140024a5b:	lea    edx,[rcx+r8*1+0x4787c62a]
   140024a63:	rol    edx,0xc
   140024a66:	add    edx,r11d
   140024a69:	mov    ecx,edx
   140024a6b:	mov    eax,edx
   140024a6d:	not    ecx
   140024a6f:	and    eax,r11d
   140024a72:	and    ecx,r10d
   140024a75:	or     ecx,eax
   140024a77:	mov    eax,edx
   140024a79:	add    ecx,DWORD PTR [rsi+0x18]
   140024a7c:	lea    r8d,[rcx+r9*1-0x57cfb9ed]
   140024a84:	ror    r8d,0xf
   140024a88:	add    r8d,edx
   140024a8b:	mov    ecx,r8d
   140024a8e:	not    ecx
   140024a90:	and    ecx,r11d
   140024a93:	and    eax,r8d
   140024a96:	or     ecx,eax
   140024a98:	mov    r14d,DWORD PTR [rsi+0x28]
   140024a9c:	mov    r12d,DWORD PTR [rsi+0x30]
   140024aa0:	add    ecx,r13d
   140024aa3:	mov    r15d,DWORD PTR [rsi+0x34]
   140024aa7:	mov    ebp,DWORD PTR [rsi+0x38]
   140024aaa:	lea    r9d,[rcx+r10*1-0x2b96aff]
   140024ab2:	mov    eax,r8d
   140024ab5:	ror    r9d,0xa
   140024ab9:	add    r9d,r8d
   140024abc:	and    eax,r9d
   140024abf:	mov    ecx,r9d
   140024ac2:	not    ecx
   140024ac4:	and    ecx,edx
   140024ac6:	or     ecx,eax
   140024ac8:	mov    eax,r9d
   140024acb:	add    ecx,DWORD PTR [rsi+0x20]
   140024ace:	lea    r10d,[rcx+r11*1+0x698098d8]
   140024ad6:	rol    r10d,0x7
   140024ada:	add    r10d,r9d
   140024add:	and    eax,r10d
   140024ae0:	mov    ecx,r10d
   140024ae3:	not    ecx
   140024ae5:	and    ecx,r8d
   140024ae8:	or     ecx,eax
   140024aea:	add    ecx,DWORD PTR [rsi+0x24]
   140024aed:	lea    edx,[rcx+rdx*1-0x74bb0851]
   140024af4:	rol    edx,0xc
   140024af7:	add    edx,r10d
   140024afa:	mov    ecx,edx
   140024afc:	mov    eax,edx
   140024afe:	not    ecx
   140024b00:	and    eax,r10d
   140024b03:	and    ecx,r9d
   140024b06:	or     ecx,eax
   140024b08:	mov    eax,edx
   140024b0a:	add    ecx,r14d
   140024b0d:	lea    edi,[rcx+r8*1-0xa44f]
   140024b15:	ror    edi,0xf
   140024b18:	add    edi,edx
   140024b1a:	and    eax,edi
   140024b1c:	mov    ecx,edi
   140024b1e:	not    ecx
   140024b20:	and    ecx,r10d
   140024b23:	or     ecx,eax
   140024b25:	mov    eax,edi
   140024b27:	add    ecx,DWORD PTR [rsi+0x2c]
   140024b2a:	lea    r9d,[rcx+r9*1-0x76a32842]
   140024b32:	ror    r9d,0xa
   140024b36:	add    r9d,edi
   140024b39:	and    eax,r9d
   140024b3c:	mov    ecx,r9d
   140024b3f:	not    ecx
   140024b41:	and    ecx,edx
   140024b43:	or     ecx,eax
   140024b45:	mov    eax,r9d
   140024b48:	add    ecx,r12d
   140024b4b:	lea    r11d,[rcx+r10*1+0x6b901122]
   140024b53:	rol    r11d,0x7
   140024b57:	add    r11d,r9d
   140024b5a:	and    eax,r11d
   140024b5d:	mov    ecx,r11d
   140024b60:	not    ecx
   140024b62:	and    ecx,edi
   140024b64:	or     ecx,eax
   140024b66:	add    ecx,r15d
   140024b69:	lea    ebx,[rcx+rdx*1-0x2678e6d]
   140024b70:	rol    ebx,0xc
   140024b73:	add    ebx,r11d
   140024b76:	mov    r8d,ebx
   140024b79:	mov    eax,ebx
   140024b7b:	and    eax,r11d
   140024b7e:	not    r8d
   140024b81:	mov    ecx,r8d
   140024b84:	and    ecx,r9d
   140024b87:	or     ecx,eax
   140024b89:	add    ecx,ebp
   140024b8b:	lea    r10d,[rcx+rdi*1-0x5986bc72]
   140024b93:	ror    r10d,0xf
   140024b97:	add    r10d,ebx
   140024b9a:	mov    edx,r10d
   140024b9d:	mov    edi,DWORD PTR [rsi+0x3c]
   140024ba0:	and    r8d,r10d
   140024ba3:	not    edx
   140024ba5:	mov    ecx,edx
   140024ba7:	mov    eax,ebx
   140024ba9:	and    ecx,r11d
   140024bac:	and    eax,r10d
   140024baf:	or     ecx,eax
   140024bb1:	mov    eax,ebx
   140024bb3:	add    ecx,edi
   140024bb5:	lea    r9d,[rcx+r9*1+0x49b40821]
   140024bbd:	ror    r9d,0xa
   140024bc1:	add    r9d,r10d
   140024bc4:	and    eax,r9d
   140024bc7:	and    edx,r9d
   140024bca:	mov    ecx,r9d
   140024bcd:	or     r8d,eax
   140024bd0:	not    ecx
   140024bd2:	mov    eax,r10d
   140024bd5:	add    r8d,DWORD PTR [rsi+0x4]
   140024bd9:	lea    r11d,[r8+r11*1-0x9e1da9e]
   140024be1:	rol    r11d,0x5
   140024be5:	add    r11d,r9d
   140024be8:	and    ecx,r11d
   140024beb:	and    eax,r11d
   140024bee:	or     edx,eax
   140024bf0:	add    edx,DWORD PTR [rsi+0x18]
   140024bf3:	lea    r8d,[rdx+rbx*1-0x3fbf4cc0]
   140024bfb:	rol    r8d,0x9
   140024bff:	add    r8d,r11d
   140024c02:	mov    eax,r8d
   140024c05:	and    eax,r9d
   140024c08:	or     ecx,eax
   140024c0a:	add    ecx,DWORD PTR [rsi+0x2c]
   140024c0d:	lea    edx,[rcx+r10*1+0x265e5a51]
   140024c15:	mov    ecx,r11d
   140024c18:	not    ecx
   140024c1a:	rol    edx,0xe
   140024c1d:	and    ecx,r8d
   140024c20:	add    edx,r8d
   140024c23:	mov    eax,edx
   140024c25:	and    eax,r11d
   140024c28:	or     ecx,eax
   140024c2a:	mov    eax,r8d
   140024c2d:	add    ecx,DWORD PTR [rsi]
   140024c2f:	lea    r10d,[rcx+r9*1-0x16493856]
   140024c37:	mov    ecx,r8d
   140024c3a:	not    ecx
   140024c3c:	ror    r10d,0xc
   140024c40:	and    ecx,edx
   140024c42:	add    r10d,edx
   140024c45:	and    eax,r10d
   140024c48:	or     ecx,eax
   140024c4a:	mov    eax,edx
   140024c4c:	add    ecx,DWORD PTR [rsi+0x14]
   140024c4f:	lea    r9d,[rcx+r11*1-0x29d0efa3]
   140024c57:	mov    ecx,edx
   140024c59:	not    ecx
   140024c5b:	rol    r9d,0x5
   140024c5f:	and    ecx,r10d
   140024c62:	add    r9d,r10d
   140024c65:	and    eax,r9d
   140024c68:	or     ecx,eax
   140024c6a:	add    ecx,r14d
   140024c6d:	lea    r11d,[rcx+r8*1+0x2441453]
   140024c75:	mov    ecx,r10d
   140024c78:	not    ecx
   140024c7a:	rol    r11d,0x9
   140024c7e:	and    ecx,r9d
   140024c81:	add    r11d,r9d
   140024c84:	mov    eax,r11d
   140024c87:	and    eax,r10d
   140024c8a:	or     ecx,eax
   140024c8c:	add    ecx,edi
   140024c8e:	lea    r8d,[rcx+rdx*1-0x275e197f]
   140024c96:	mov    ecx,r9d
   140024c99:	rol    r8d,0xe
   140024c9d:	not    ecx
   140024c9f:	add    r8d,r11d
   140024ca2:	and    ecx,r11d
   140024ca5:	mov    eax,r8d
   140024ca8:	and    eax,r9d
   140024cab:	or     ecx,eax
   140024cad:	mov    eax,r11d
   140024cb0:	add    ecx,DWORD PTR [rsi+0x10]
   140024cb3:	lea    edx,[rcx+r10*1-0x182c0438]
   140024cbb:	mov    ecx,r11d
   140024cbe:	not    ecx
   140024cc0:	ror    edx,0xc
   140024cc3:	and    ecx,r8d
   140024cc6:	add    edx,r8d
   140024cc9:	and    eax,edx
   140024ccb:	or     ecx,eax
   140024ccd:	mov    eax,r8d
   140024cd0:	add    ecx,DWORD PTR [rsi+0x24]
   140024cd3:	lea    r10d,[rcx+r9*1+0x21e1cde6]
   140024cdb:	mov    ecx,r8d
   140024cde:	not    ecx
   140024ce0:	rol    r10d,0x5
   140024ce4:	and    ecx,edx
   140024ce6:	add    r10d,edx
   140024ce9:	and    eax,r10d
   140024cec:	or     ecx,eax
   140024cee:	add    ecx,ebp
   140024cf0:	lea    r9d,[rcx+r11*1-0x3cc8f82a]
   140024cf8:	mov    ecx,edx
   140024cfa:	not    ecx
   140024cfc:	rol    r9d,0x9
   140024d00:	and    ecx,r10d
   140024d03:	add    r9d,r10d
   140024d06:	mov    eax,r9d
   140024d09:	and    eax,edx
   140024d0b:	or     ecx,eax
   140024d0d:	add    ecx,DWORD PTR [rsi+0xc]
   140024d10:	lea    r11d,[rcx+r8*1-0xb2af279]
   140024d18:	mov    ecx,r10d
   140024d1b:	not    ecx
   140024d1d:	rol    r11d,0xe
   140024d21:	and    ecx,r9d
   140024d24:	add    r11d,r9d
   140024d27:	mov    eax,r11d
   140024d2a:	and    eax,r10d
   140024d2d:	or     ecx,eax
   140024d2f:	mov    eax,r9d
   140024d32:	add    ecx,DWORD PTR [rsi+0x20]
   140024d35:	lea    ebx,[rcx+rdx*1+0x455a14ed]
   140024d3c:	mov    ecx,r9d
   140024d3f:	not    ecx
   140024d41:	ror    ebx,0xc
   140024d44:	and    ecx,r11d
   140024d47:	add    ebx,r11d
   140024d4a:	and    eax,ebx
   140024d4c:	or     ecx,eax
   140024d4e:	mov    eax,r11d
   140024d51:	add    ecx,r15d
   140024d54:	lea    edx,[rcx+r10*1-0x561c16fb]
   140024d5c:	mov    ecx,r11d
   140024d5f:	not    ecx
   140024d61:	rol    edx,0x5
   140024d64:	and    ecx,ebx
   140024d66:	add    edx,ebx
   140024d68:	and    eax,edx
   140024d6a:	or     ecx,eax
   140024d6c:	add    ecx,DWORD PTR [rsi+0x8]
   140024d6f:	lea    r8d,[rcx+r9*1-0x3105c08]
   140024d77:	mov    ecx,ebx
   140024d79:	not    ecx
   140024d7b:	rol    r8d,0x9
   140024d7f:	and    ecx,edx
   140024d81:	add    r8d,edx
   140024d84:	mov    eax,r8d
   140024d87:	and    eax,ebx
   140024d89:	or     ecx,eax
   140024d8b:	add    ecx,r13d
   140024d8e:	lea    r9d,[rcx+r11*1+0x676f02d9]
   140024d96:	mov    ecx,edx
   140024d98:	rol    r9d,0xe
   140024d9c:	not    ecx
   140024d9e:	add    r9d,r8d
   140024da1:	and    ecx,r8d
   140024da4:	mov    eax,r9d
   140024da7:	and    eax,edx
   140024da9:	or     ecx,eax
   140024dab:	mov    eax,r8d
   140024dae:	xor    eax,r9d
   140024db1:	add    ecx,r12d
   140024db4:	lea    r10d,[rcx+rbx*1-0x72d5b376]
   140024dbc:	ror    r10d,0xc
   140024dc0:	add    r10d,r9d
   140024dc3:	xor    eax,r10d
   140024dc6:	add    eax,DWORD PTR [rsi+0x14]
   140024dc9:	lea    edx,[rax+rdx*1-0x5c6be]
   140024dd0:	mov    eax,r9d
   140024dd3:	xor    eax,r10d
   140024dd6:	rol    edx,0x4
   140024dd9:	add    edx,r10d
   140024ddc:	xor    eax,edx
   140024dde:	add    eax,DWORD PTR [rsi+0x20]
   140024de1:	lea    r8d,[rax+r8*1-0x788e097f]
   140024de9:	rol    r8d,0xb
   140024ded:	add    r8d,edx
   140024df0:	mov    eax,r8d
   140024df3:	mov    ecx,r8d
   140024df6:	xor    eax,r10d
   140024df9:	xor    eax,edx
   140024dfb:	add    eax,DWORD PTR [rsi+0x2c]
   140024dfe:	lea    r9d,[rax+r9*1+0x6d9d6122]
   140024e06:	rol    r9d,0x10
   140024e0a:	add    r9d,r8d
   140024e0d:	xor    ecx,r9d
   140024e10:	mov    eax,ecx
   140024e12:	xor    eax,edx
   140024e14:	add    eax,ebp
   140024e16:	lea    r10d,[rax+r10*1-0x21ac7f4]
   140024e1e:	mov    eax,r9d
   140024e21:	ror    r10d,0x9
   140024e25:	add    r10d,r9d
   140024e28:	xor    eax,r10d
   140024e2b:	xor    ecx,r10d
   140024e2e:	add    ecx,DWORD PTR [rsi+0x4]
   140024e31:	lea    r11d,[rcx+rdx*1-0x5b4115bc]
   140024e39:	rol    r11d,0x4
   140024e3d:	add    r11d,r10d
   140024e40:	xor    eax,r11d
   140024e43:	add    eax,DWORD PTR [rsi+0x10]
   140024e46:	lea    edx,[rax+r8*1+0x4bdecfa9]
   140024e4e:	rol    edx,0xb
   140024e51:	add    edx,r11d
   140024e54:	mov    eax,edx
   140024e56:	mov    ecx,edx
   140024e58:	xor    eax,r10d
   140024e5b:	xor    eax,r11d
   140024e5e:	add    eax,r13d
   140024e61:	lea    r8d,[rax+r9*1-0x944b4a0]
   140024e69:	rol    r8d,0x10
   140024e6d:	add    r8d,edx
   140024e70:	xor    ecx,r8d
   140024e73:	mov    eax,ecx
   140024e75:	xor    eax,r11d
   140024e78:	add    eax,r14d
   140024e7b:	lea    r9d,[rax+r10*1-0x41404390]
   140024e83:	mov    eax,r8d
   140024e86:	ror    r9d,0x9
   140024e8a:	add    r9d,r8d
   140024e8d:	xor    eax,r9d
   140024e90:	xor    ecx,r9d
   140024e93:	add    ecx,r15d
   140024e96:	lea    r10d,[rcx+r11*1+0x289b7ec6]
   140024e9e:	rol    r10d,0x4
   140024ea2:	add    r10d,r9d
   140024ea5:	xor    eax,r10d
   140024ea8:	add    eax,DWORD PTR [rsi]
   140024eaa:	lea    r11d,[rax+rdx*1-0x155ed806]
   140024eb2:	rol    r11d,0xb
   140024eb6:	add    r11d,r10d
   140024eb9:	mov    eax,r11d
   140024ebc:	mov    ecx,r11d
   140024ebf:	xor    eax,r9d
   140024ec2:	xor    eax,r10d
   140024ec5:	add    eax,DWORD PTR [rsi+0xc]
   140024ec8:	lea    r8d,[rax+r8*1-0x2b10cf7b]
   140024ed0:	rol    r8d,0x10
   140024ed4:	add    r8d,r11d
   140024ed7:	xor    ecx,r8d
   140024eda:	mov    eax,ecx
   140024edc:	xor    eax,r10d
   140024edf:	add    eax,DWORD PTR [rsi+0x18]
   140024ee2:	lea    edx,[rax+r9*1+0x4881d05]
   140024eea:	mov    eax,r8d
   140024eed:	ror    edx,0x9
   140024ef0:	add    edx,r8d
   140024ef3:	xor    eax,edx
   140024ef5:	xor    ecx,edx
   140024ef7:	add    ecx,DWORD PTR [rsi+0x24]
   140024efa:	lea    r9d,[rcx+r10*1-0x262b2fc7]
   140024f02:	rol    r9d,0x4
   140024f06:	add    r9d,edx
   140024f09:	xor    eax,r9d
   140024f0c:	add    eax,r12d
   140024f0f:	lea    ecx,[rax+r11*1-0x1924661b]
   140024f17:	rol    ecx,0xb
   140024f1a:	add    ecx,r9d
   140024f1d:	mov    eax,ecx
   140024f1f:	xor    eax,edx
   140024f21:	xor    eax,r9d
   140024f24:	add    eax,edi
   140024f26:	lea    r10d,[rax+r8*1+0x1fa27cf8]
   140024f2e:	mov    eax,ecx
   140024f30:	rol    r10d,0x10
   140024f34:	add    r10d,ecx
   140024f37:	xor    eax,r10d
   140024f3a:	xor    eax,r9d
   140024f3d:	add    eax,DWORD PTR [rsi+0x8]
   140024f40:	lea    r8d,[rax+rdx*1-0x3b53a99b]
   140024f48:	mov    eax,ecx
   140024f4a:	not    eax
   140024f4c:	ror    r8d,0x9
   140024f50:	add    r8d,r10d
   140024f53:	or     eax,r8d
   140024f56:	xor    eax,r10d
   140024f59:	add    eax,DWORD PTR [rsi]
   140024f5b:	lea    edx,[rax+r9*1-0xbd6ddbc]
   140024f63:	mov    eax,r10d
   140024f66:	not    eax
   140024f68:	rol    edx,0x6
   140024f6b:	add    edx,r8d
   140024f6e:	or     eax,edx
   140024f70:	xor    eax,r8d
   140024f73:	add    eax,r13d
   140024f76:	lea    r9d,[rax+rcx*1+0x432aff97]
   140024f7e:	mov    eax,r8d
   140024f81:	not    eax
   140024f83:	rol    r9d,0xa
   140024f87:	add    r9d,edx
   140024f8a:	or     eax,r9d
   140024f8d:	xor    eax,edx
   140024f8f:	add    eax,ebp
   140024f91:	lea    ecx,[rax+r10*1-0x546bdc59]
   140024f99:	mov    eax,edx
   140024f9b:	not    eax
   140024f9d:	rol    ecx,0xf
   140024fa0:	add    ecx,r9d
   140024fa3:	or     eax,ecx
   140024fa5:	xor    eax,r9d
   140024fa8:	add    eax,DWORD PTR [rsi+0x14]
   140024fab:	lea    r10d,[rax+r8*1-0x36c5fc7]
   140024fb3:	mov    eax,r9d
   140024fb6:	not    eax
   140024fb8:	ror    r10d,0xb
   140024fbc:	add    r10d,ecx
   140024fbf:	or     eax,r10d
   140024fc2:	xor    eax,ecx
   140024fc4:	add    eax,r12d
   140024fc7:	lea    r8d,[rax+rdx*1+0x655b59c3]
   140024fcf:	mov    eax,ecx
   140024fd1:	rol    r8d,0x6
   140024fd5:	not    eax
   140024fd7:	add    r8d,r10d
   140024fda:	or     eax,r8d
   140024fdd:	xor    eax,r10d
   140024fe0:	add    eax,DWORD PTR [rsi+0xc]
   140024fe3:	lea    edx,[rax+r9*1-0x70f3336e]
   140024feb:	rol    edx,0xa
   140024fee:	add    edx,r8d
   140024ff1:	mov    eax,r10d
   140024ff4:	not    eax
   140024ff6:	or     eax,edx
   140024ff8:	xor    eax,r8d
   140024ffb:	add    eax,r14d
   140024ffe:	lea    r9d,[rax+rcx*1-0x100b83]
   140025006:	mov    eax,r8d
   140025009:	not    eax
   14002500b:	rol    r9d,0xf
   14002500f:	add    r9d,edx
   140025012:	or     eax,r9d
   140025015:	xor    eax,edx
   140025017:	add    eax,DWORD PTR [rsi+0x4]
   14002501a:	lea    ecx,[rax+r10*1-0x7a7ba22f]
   140025022:	mov    eax,edx
   140025024:	not    eax
   140025026:	ror    ecx,0xb
   140025029:	add    ecx,r9d
   14002502c:	or     eax,ecx
   14002502e:	xor    eax,r9d
   140025031:	add    eax,DWORD PTR [rsi+0x20]
   140025034:	lea    r10d,[rax+r8*1+0x6fa87e4f]
   14002503c:	mov    eax,r9d
   14002503f:	not    eax
   140025041:	rol    r10d,0x6
   140025045:	add    r10d,ecx
   140025048:	or     eax,r10d
   14002504b:	xor    eax,ecx
   14002504d:	add    eax,edi
   14002504f:	lea    r11d,[rax+rdx*1-0x1d31920]
   140025057:	mov    eax,ecx
   140025059:	not    eax
   14002505b:	rol    r11d,0xa
   14002505f:	add    r11d,r10d
   140025062:	or     eax,r11d
   140025065:	xor    eax,r10d
   140025068:	add    eax,DWORD PTR [rsi+0x18]
   14002506b:	lea    r9d,[rax+r9*1-0x5cfebcec]
   140025073:	mov    eax,r10d
   140025076:	not    eax
   140025078:	rol    r9d,0xf
   14002507c:	add    r9d,r11d
   14002507f:	or     eax,r9d
   140025082:	xor    eax,r11d
   140025085:	add    eax,r15d
   140025088:	lea    ebx,[rax+rcx*1+0x4e0811a1]
   14002508f:	mov    eax,r11d
   140025092:	not    eax
   140025094:	ror    ebx,0xb
   140025097:	add    ebx,r9d
   14002509a:	or     eax,ebx
   14002509c:	xor    eax,r9d
   14002509f:	add    eax,DWORD PTR [rsi+0x10]
   1400250a2:	lea    r8d,[rax+r10*1-0x8ac817e]
   1400250aa:	mov    eax,r9d
   1400250ad:	not    eax
   1400250af:	rol    r8d,0x6
   1400250b3:	add    r8d,ebx
   1400250b6:	or     eax,r8d
   1400250b9:	xor    eax,ebx
   1400250bb:	add    eax,DWORD PTR [rsi+0x2c]
   1400250be:	lea    edx,[rax+r11*1-0x42c50dcb]
   1400250c6:	mov    eax,ebx
   1400250c8:	not    eax
   1400250ca:	rol    edx,0xa
   1400250cd:	add    edx,r8d
   1400250d0:	or     eax,edx
   1400250d2:	xor    eax,r8d
   1400250d5:	add    eax,DWORD PTR [rsi+0x8]
   1400250d8:	lea    ecx,[rax+r9*1+0x2ad7d2bb]
   1400250e0:	mov    r9,QWORD PTR [rsp+0x30]
   1400250e5:	mov    eax,DWORD PTR [r9]
   1400250e8:	rol    ecx,0xf
   1400250eb:	add    eax,r8d
   1400250ee:	not    r8d
   1400250f1:	add    ecx,edx
   1400250f3:	or     r8d,ecx
   1400250f6:	mov    DWORD PTR [r9],eax
   1400250f9:	xor    r8d,edx
   1400250fc:	add    r8d,DWORD PTR [rsi+0x24]
   140025100:	lea    eax,[r8+rbx*1-0x14792c6f]
   140025108:	mov    rbx,QWORD PTR [rsp+0x38]
   14002510d:	mov    rbp,QWORD PTR [rsp+0x40]
   140025112:	mov    rsi,QWORD PTR [rsp+0x48]
   140025117:	ror    eax,0xb
   14002511a:	add    eax,DWORD PTR [r9+0x4]
   14002511e:	add    eax,ecx
   140025120:	mov    DWORD PTR [r9+0x4],eax
   140025124:	mov    eax,DWORD PTR [r9+0x8]
   140025128:	add    eax,ecx
   14002512a:	mov    DWORD PTR [r9+0x8],eax
   14002512e:	mov    eax,DWORD PTR [r9+0xc]
   140025132:	add    eax,edx
   140025134:	mov    DWORD PTR [r9+0xc],eax
   140025138:	pop    r15
   14002513a:	pop    r14
   14002513c:	pop    r13
   14002513e:	pop    r12
   140025140:	pop    rdi
   140025141:	ret    
   140025142:	int3   
   140025143:	int3   
   140025144:	int3   
   140025145:	int3   
   140025146:	int3   
   140025147:	int3   
   140025148:	int3   
   140025149:	int3   
   14002514a:	int3   
   14002514b:	int3   
   14002514c:	int3   
   14002514d:	int3   
   14002514e:	int3   
   14002514f:	int3   
   140025150:	sub    rsp,0x28
   140025154:	test   rcx,rcx
   140025157:	je     0x140025163
   140025159:	mov    rax,QWORD PTR [rcx]
   14002515c:	mov    edx,0x1
   140025161:	call   QWORD PTR [rax]
   140025163:	add    rsp,0x28
   140025167:	ret    
   140025168:	int3   
   140025169:	int3   
   14002516a:	int3   
   14002516b:	int3   
   14002516c:	int3   
   14002516d:	int3   
   14002516e:	int3   
   14002516f:	int3   
   140025170:	mov    QWORD PTR [rsp+0x8],rcx
   140025175:	mov    QWORD PTR [rsp+0x10],rdx
   14002517a:	mov    QWORD PTR [rsp+0x18],r8
   14002517f:	mov    QWORD PTR [rsp+0x20],r9
   140025184:	ret    
   140025185:	int3   
   140025186:	int3   
   140025187:	int3   
   140025188:	int3   
   140025189:	int3   
   14002518a:	int3   
   14002518b:	int3   
   14002518c:	int3   
   14002518d:	int3   
   14002518e:	int3   
   14002518f:	int3   
   140025190:	rex push rbx
   140025192:	sub    rsp,0x20
   140025196:	lea    rax,[rip+0x2508b]        # 0x14004a228
   14002519d:	mov    rbx,rcx
   1400251a0:	mov    QWORD PTR [rcx],rax
   1400251a3:	test   dl,0x1
   1400251a6:	je     0x1400251ad
   1400251a8:	call   0x14002b150
   1400251ad:	mov    rax,rbx
   1400251b0:	add    rsp,0x20
   1400251b4:	pop    rbx
   1400251b5:	ret    
   1400251b6:	int3   
   1400251b7:	int3   
   1400251b8:	int3   
   1400251b9:	int3   
   1400251ba:	int3   
   1400251bb:	int3   
   1400251bc:	int3   
   1400251bd:	int3   
   1400251be:	int3   
   1400251bf:	int3   
   1400251c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400251c5:	push   rdi
   1400251c6:	sub    rsp,0x20
   1400251ca:	xor    eax,eax
   1400251cc:	mov    rbx,r8
   1400251cf:	mov    QWORD PTR [rcx+0x18],0xf
   1400251d7:	mov    QWORD PTR [rcx+0x10],rax
   1400251db:	or     r9,0xffffffffffffffff
   1400251df:	xor    r8d,r8d
   1400251e2:	mov    rdi,rcx
   1400251e5:	mov    DWORD PTR [rsp+0x30],eax
   1400251e9:	mov    BYTE PTR [rcx],al
   1400251eb:	call   0x1400048b8
   1400251f0:	movzx  r11d,WORD PTR [rbx]
   1400251f4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400251f9:	mov    WORD PTR [rdi+0x28],r11w
   1400251fe:	mov    rax,rdi
   140025201:	add    rsp,0x20
   140025205:	pop    rdi
   140025206:	ret    
   140025207:	int3   
   140025208:	int3   
   140025209:	int3   
   14002520a:	int3   
   14002520b:	int3   
   14002520c:	int3   
   14002520d:	int3   
   14002520e:	int3   
   14002520f:	int3   
   140025210:	rex push rbx
   140025212:	sub    rsp,0x20
   140025216:	mov    rax,QWORD PTR [rcx+0x10]
   14002521a:	mov    r10,rcx
   14002521d:	movabs rcx,0x555555555555554
   140025227:	mov    rbx,rdx
   14002522a:	cmp    rax,rcx
   14002522d:	jb     0x14002526e
   14002522f:	mov    rbx,QWORD PTR [rsp+0x50]
   140025234:	cmp    QWORD PTR [rbx+0x30],0x10
   140025239:	jb     0x140025244
   14002523b:	mov    rcx,QWORD PTR [rbx+0x18]
   14002523f:	call   0x14002b150
   140025244:	mov    QWORD PTR [rbx+0x30],0xf
   14002524c:	mov    QWORD PTR [rbx+0x28],0x0
   140025254:	mov    rcx,rbx
   140025257:	mov    BYTE PTR [rbx+0x18],0x0
   14002525b:	call   0x14002b150
   140025260:	lea    rcx,[rip+0x2b719]        # 0x140050980
   140025267:	call   QWORD PTR [rip+0x2432b]        # 0x140049598
   14002526d:	int3   
   14002526e:	mov    r11,QWORD PTR [rsp+0x50]
   140025273:	inc    rax
   140025276:	mov    QWORD PTR [r10+0x10],rax
   14002527a:	mov    QWORD PTR [r11+0x8],r9
   14002527e:	mov    rax,QWORD PTR [r10+0x8]
   140025282:	cmp    r9,rax
   140025285:	jne    0x140025298
   140025287:	mov    QWORD PTR [rax+0x8],r11
   14002528b:	mov    rax,QWORD PTR [r10+0x8]
   14002528f:	mov    QWORD PTR [rax],r11
   140025292:	mov    rax,QWORD PTR [r10+0x8]
   140025296:	jmp    0x1400252bc
   140025298:	test   r8b,r8b
   14002529b:	je     0x1400252ae
   14002529d:	mov    QWORD PTR [r9],r11
   1400252a0:	mov    rax,QWORD PTR [r10+0x8]
   1400252a4:	cmp    r9,QWORD PTR [rax]
   1400252a7:	jne    0x1400252c0
   1400252a9:	mov    QWORD PTR [rax],r11
   1400252ac:	jmp    0x1400252c0
   1400252ae:	mov    QWORD PTR [r9+0x10],r11
   1400252b2:	mov    rax,QWORD PTR [r10+0x8]
   1400252b6:	cmp    r9,QWORD PTR [rax+0x10]
   1400252ba:	jne    0x1400252c0
   1400252bc:	mov    QWORD PTR [rax+0x10],r11
   1400252c0:	mov    rax,QWORD PTR [r11+0x8]
   1400252c4:	mov    rdx,r11
   1400252c7:	cmp    BYTE PTR [rax+0x48],0x0
   1400252cb:	jne    0x1400254ab
   1400252d1:	mov    rax,QWORD PTR [rdx+0x8]
   1400252d5:	mov    rcx,QWORD PTR [rax+0x8]
   1400252d9:	cmp    rax,QWORD PTR [rcx]
   1400252dc:	jne    0x1400253b9
   1400252e2:	mov    r8,QWORD PTR [rcx+0x10]
   1400252e6:	cmp    BYTE PTR [r8+0x48],0x0
   1400252eb:	je     0x1400253c3
   1400252f1:	cmp    rdx,QWORD PTR [rax+0x10]
   1400252f5:	jne    0x140025343
   1400252f7:	mov    rcx,QWORD PTR [rax+0x10]
   1400252fb:	mov    rdx,rax
   1400252fe:	mov    rax,QWORD PTR [rcx]
   140025301:	mov    QWORD PTR [rdx+0x10],rax
   140025305:	mov    rax,QWORD PTR [rcx]
   140025308:	cmp    BYTE PTR [rax+0x49],0x0
   14002530c:	jne    0x140025312
   14002530e:	mov    QWORD PTR [rax+0x8],rdx
   140025312:	mov    rax,QWORD PTR [rdx+0x8]
   140025316:	mov    QWORD PTR [rcx+0x8],rax
   14002531a:	mov    rax,QWORD PTR [r10+0x8]
   14002531e:	cmp    rdx,QWORD PTR [rax+0x8]
   140025322:	jne    0x14002532a
   140025324:	mov    QWORD PTR [rax+0x8],rcx
   140025328:	jmp    0x14002533c
   14002532a:	mov    rax,QWORD PTR [rdx+0x8]
   14002532e:	cmp    rdx,QWORD PTR [rax]
   140025331:	jne    0x140025338
   140025333:	mov    QWORD PTR [rax],rcx
   140025336:	jmp    0x14002533c
   140025338:	mov    QWORD PTR [rax+0x10],rcx
   14002533c:	mov    QWORD PTR [rcx],rdx
   14002533f:	mov    QWORD PTR [rdx+0x8],rcx
   140025343:	mov    rax,QWORD PTR [rdx+0x8]
   140025347:	mov    BYTE PTR [rax+0x48],0x1
   14002534b:	mov    rax,QWORD PTR [rdx+0x8]
   14002534f:	mov    rcx,QWORD PTR [rax+0x8]
   140025353:	mov    BYTE PTR [rcx+0x48],0x0
   140025357:	mov    rax,QWORD PTR [rdx+0x8]
   14002535b:	mov    rcx,QWORD PTR [rax+0x8]
   14002535f:	mov    r8,QWORD PTR [rcx]
   140025362:	mov    rax,QWORD PTR [r8+0x10]
   140025366:	mov    QWORD PTR [rcx],rax
   140025369:	mov    rax,QWORD PTR [r8+0x10]
   14002536d:	cmp    BYTE PTR [rax+0x49],0x0
   140025371:	jne    0x140025377
   140025373:	mov    QWORD PTR [rax+0x8],rcx
   140025377:	mov    rax,QWORD PTR [rcx+0x8]
   14002537b:	mov    QWORD PTR [r8+0x8],rax
   14002537f:	mov    rax,QWORD PTR [r10+0x8]
   140025383:	cmp    rcx,QWORD PTR [rax+0x8]
   140025387:	jne    0x140025396
   140025389:	mov    QWORD PTR [rax+0x8],r8
   14002538d:	mov    QWORD PTR [r8+0x10],rcx
   140025391:	jmp    0x140025499
   140025396:	mov    rax,QWORD PTR [rcx+0x8]
   14002539a:	cmp    rcx,QWORD PTR [rax+0x10]
   14002539e:	jne    0x1400253ad
   1400253a0:	mov    QWORD PTR [rax+0x10],r8
   1400253a4:	mov    QWORD PTR [r8+0x10],rcx
   1400253a8:	jmp    0x140025499
   1400253ad:	mov    QWORD PTR [rax],r8
   1400253b0:	mov    QWORD PTR [r8+0x10],rcx
   1400253b4:	jmp    0x140025499
   1400253b9:	mov    r8,QWORD PTR [rcx]
   1400253bc:	cmp    BYTE PTR [r8+0x48],0x0
   1400253c1:	jne    0x1400253e5
   1400253c3:	mov    BYTE PTR [rax+0x48],0x1
   1400253c7:	mov    BYTE PTR [r8+0x48],0x1
   1400253cc:	mov    rax,QWORD PTR [rdx+0x8]
   1400253d0:	mov    rcx,QWORD PTR [rax+0x8]
   1400253d4:	mov    BYTE PTR [rcx+0x48],0x0
   1400253d8:	mov    rax,QWORD PTR [rdx+0x8]
   1400253dc:	mov    rdx,QWORD PTR [rax+0x8]
   1400253e0:	jmp    0x14002549d
   1400253e5:	cmp    rdx,QWORD PTR [rax]
   1400253e8:	jne    0x140025438
   1400253ea:	mov    rcx,QWORD PTR [rax]
   1400253ed:	mov    rdx,rax
   1400253f0:	mov    rax,QWORD PTR [rcx+0x10]
   1400253f4:	mov    QWORD PTR [rdx],rax
   1400253f7:	mov    rax,QWORD PTR [rcx+0x10]
   1400253fb:	cmp    BYTE PTR [rax+0x49],0x0
   1400253ff:	jne    0x140025405
   140025401:	mov    QWORD PTR [rax+0x8],rdx
   140025405:	mov    rax,QWORD PTR [rdx+0x8]
   140025409:	mov    QWORD PTR [rcx+0x8],rax
   14002540d:	mov    rax,QWORD PTR [r10+0x8]
   140025411:	cmp    rdx,QWORD PTR [rax+0x8]
   140025415:	jne    0x14002541d
   140025417:	mov    QWORD PTR [rax+0x8],rcx
   14002541b:	jmp    0x140025430
   14002541d:	mov    rax,QWORD PTR [rdx+0x8]
   140025421:	cmp    rdx,QWORD PTR [rax+0x10]
   140025425:	jne    0x14002542d
   140025427:	mov    QWORD PTR [rax+0x10],rcx
   14002542b:	jmp    0x140025430
   14002542d:	mov    QWORD PTR [rax],rcx
   140025430:	mov    QWORD PTR [rcx+0x10],rdx
   140025434:	mov    QWORD PTR [rdx+0x8],rcx
   140025438:	mov    rax,QWORD PTR [rdx+0x8]
   14002543c:	mov    BYTE PTR [rax+0x48],0x1
   140025440:	mov    rax,QWORD PTR [rdx+0x8]
   140025444:	mov    rcx,QWORD PTR [rax+0x8]
   140025448:	mov    BYTE PTR [rcx+0x48],0x0
   14002544c:	mov    rax,QWORD PTR [rdx+0x8]
   140025450:	mov    rcx,QWORD PTR [rax+0x8]
   140025454:	mov    r8,QWORD PTR [rcx+0x10]
   140025458:	mov    rax,QWORD PTR [r8]
   14002545b:	mov    QWORD PTR [rcx+0x10],rax
   14002545f:	mov    rax,QWORD PTR [r8]
   140025462:	cmp    BYTE PTR [rax+0x49],0x0
   140025466:	jne    0x14002546c
   140025468:	mov    QWORD PTR [rax+0x8],rcx
   14002546c:	mov    rax,QWORD PTR [rcx+0x8]
   140025470:	mov    QWORD PTR [r8+0x8],rax
   140025474:	mov    rax,QWORD PTR [r10+0x8]
   140025478:	cmp    rcx,QWORD PTR [rax+0x8]
   14002547c:	jne    0x140025484
   14002547e:	mov    QWORD PTR [rax+0x8],r8
   140025482:	jmp    0x140025496
   140025484:	mov    rax,QWORD PTR [rcx+0x8]
   140025488:	cmp    rcx,QWORD PTR [rax]
   14002548b:	jne    0x140025492
   14002548d:	mov    QWORD PTR [rax],r8
   140025490:	jmp    0x140025496
   140025492:	mov    QWORD PTR [rax+0x10],r8
   140025496:	mov    QWORD PTR [r8],rcx
   140025499:	mov    QWORD PTR [rcx+0x8],r8
   14002549d:	mov    rax,QWORD PTR [rdx+0x8]
   1400254a1:	cmp    BYTE PTR [rax+0x48],0x0
   1400254a5:	je     0x1400252d1
   1400254ab:	mov    rax,QWORD PTR [r10+0x8]
   1400254af:	mov    QWORD PTR [rbx],r11
   1400254b2:	mov    rcx,QWORD PTR [rax+0x8]
   1400254b6:	mov    rax,rbx
   1400254b9:	mov    BYTE PTR [rcx+0x48],0x1
   1400254bd:	add    rsp,0x20
   1400254c1:	pop    rbx
   1400254c2:	ret    
   1400254c3:	int3   
   1400254c4:	int3   
   1400254c5:	int3   
   1400254c6:	int3   
   1400254c7:	int3   
   1400254c8:	int3   
   1400254c9:	int3   
   1400254ca:	int3   
   1400254cb:	int3   
   1400254cc:	int3   
   1400254cd:	int3   
   1400254ce:	int3   
   1400254cf:	int3   
   1400254d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400254d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400254da:	push   rdi
   1400254db:	sub    rsp,0x20
   1400254df:	cmp    BYTE PTR [rdx+0x49],0x0
   1400254e3:	mov    rbx,rdx
   1400254e6:	mov    rsi,rcx
   1400254e9:	mov    rdi,rdx
   1400254ec:	jne    0x140025545
   1400254ee:	mov    QWORD PTR [rsp+0x30],rbp
   1400254f3:	xor    ebp,ebp
   1400254f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140025500:	mov    rdx,QWORD PTR [rdi+0x10]
   140025504:	mov    rcx,rsi
   140025507:	call   0x1400254d0
   14002550c:	cmp    QWORD PTR [rbx+0x30],0x10
   140025511:	mov    rdi,QWORD PTR [rdi]
   140025514:	jb     0x14002551f
   140025516:	mov    rcx,QWORD PTR [rbx+0x18]
   14002551a:	call   0x14002b150
   14002551f:	mov    QWORD PTR [rbx+0x30],0xf
   140025527:	mov    QWORD PTR [rbx+0x28],rbp
   14002552b:	mov    rcx,rbx
   14002552e:	mov    BYTE PTR [rbx+0x18],bpl
   140025532:	call   0x14002b150
   140025537:	mov    rbx,rdi
   14002553a:	cmp    BYTE PTR [rdi+0x49],bpl
   14002553e:	je     0x140025500
   140025540:	mov    rbp,QWORD PTR [rsp+0x30]
   140025545:	mov    rbx,QWORD PTR [rsp+0x38]
   14002554a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002554f:	add    rsp,0x20
   140025553:	pop    rdi
   140025554:	ret    
   140025555:	int3   
   140025556:	int3   
   140025557:	int3   
   140025558:	int3   
   140025559:	int3   
   14002555a:	int3   
   14002555b:	int3   
   14002555c:	int3   
   14002555d:	int3   
   14002555e:	int3   
   14002555f:	int3   
   140025560:	mov    QWORD PTR [rsp+0x10],rbx
   140025565:	mov    QWORD PTR [rsp+0x20],r9
   14002556a:	mov    QWORD PTR [rsp+0x18],r8
   14002556f:	push   rdi
   140025570:	sub    rsp,0x20
   140025574:	mov    rdi,rdx
   140025577:	mov    rdx,QWORD PTR [rcx+0x8]
   14002557b:	mov    rbx,rcx
   14002557e:	cmp    r8,QWORD PTR [rdx]
   140025581:	jne    0x1400255c8
   140025583:	cmp    r9,rdx
   140025586:	jne    0x1400255c8
   140025588:	mov    rdx,QWORD PTR [rdx+0x8]
   14002558c:	call   0x1400254d0
   140025591:	mov    r11,QWORD PTR [rbx+0x8]
   140025595:	mov    QWORD PTR [r11+0x8],r11
   140025599:	mov    rax,QWORD PTR [rbx+0x8]
   14002559d:	mov    QWORD PTR [rax],rax
   1400255a0:	mov    rax,QWORD PTR [rbx+0x8]
   1400255a4:	mov    QWORD PTR [rax+0x10],rax
   1400255a8:	mov    rax,QWORD PTR [rbx+0x8]
   1400255ac:	mov    QWORD PTR [rbx+0x10],0x0
   1400255b4:	mov    rcx,QWORD PTR [rax]
   1400255b7:	mov    rax,rdi
   1400255ba:	mov    QWORD PTR [rdi],rcx
   1400255bd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400255c2:	add    rsp,0x20
   1400255c6:	pop    rdi
   1400255c7:	ret    
   1400255c8:	cmp    r8,r9
   1400255cb:	je     0x140025649
   1400255cd:	nop    DWORD PTR [rax]
   1400255d0:	cmp    BYTE PTR [r8+0x49],0x0
   1400255d5:	mov    rax,r8
   1400255d8:	jne    0x14002562d
   1400255da:	mov    rdx,QWORD PTR [r8+0x10]
   1400255de:	cmp    BYTE PTR [rdx+0x49],0x0
   1400255e2:	jne    0x140025603
   1400255e4:	mov    rcx,QWORD PTR [rdx]
   1400255e7:	cmp    BYTE PTR [rcx+0x49],0x0
   1400255eb:	jne    0x1400255fc
   1400255ed:	nop    DWORD PTR [rax]
   1400255f0:	mov    rdx,rcx
   1400255f3:	mov    rcx,QWORD PTR [rcx]
   1400255f6:	cmp    BYTE PTR [rcx+0x49],0x0
   1400255fa:	je     0x1400255f0
   1400255fc:	mov    QWORD PTR [rsp+0x40],rdx
   140025601:	jmp    0x14002562d
   140025603:	mov    rcx,QWORD PTR [r8+0x8]
   140025607:	cmp    BYTE PTR [rcx+0x49],0x0
   14002560b:	jne    0x140025628
   14002560d:	nop    DWORD PTR [rax]
   140025610:	cmp    r8,QWORD PTR [rcx+0x10]
   140025614:	jne    0x140025628
   140025616:	mov    QWORD PTR [rsp+0x40],rcx
   14002561b:	mov    r8,rcx
   14002561e:	mov    rcx,QWORD PTR [rcx+0x8]
   140025622:	cmp    BYTE PTR [rcx+0x49],0x0
   140025626:	je     0x140025610
   140025628:	mov    QWORD PTR [rsp+0x40],rcx
   14002562d:	lea    rdx,[rsp+0x30]
   140025632:	mov    r8,rax
   140025635:	mov    rcx,rbx
   140025638:	call   0x140034ed0
   14002563d:	mov    r8,QWORD PTR [rsp+0x40]
   140025642:	cmp    r8,QWORD PTR [rsp+0x48]
   140025647:	jne    0x1400255d0
   140025649:	mov    rbx,QWORD PTR [rsp+0x38]
   14002564e:	mov    QWORD PTR [rdi],r8
   140025651:	mov    rax,rdi
   140025654:	add    rsp,0x20
   140025658:	pop    rdi
   140025659:	ret    
   14002565a:	int3   
   14002565b:	int3   
   14002565c:	int3   
   14002565d:	int3   
   14002565e:	int3   
   14002565f:	int3   
   140025660:	rex push rdi
   140025662:	sub    rsp,0x30
   140025666:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002566f:	mov    QWORD PTR [rsp+0x40],rbx
   140025674:	mov    QWORD PTR [rsp+0x48],rsi
   140025679:	mov    rsi,rdx
   14002567c:	call   0x14002df20
   140025681:	mov    rdi,rax
   140025684:	mov    QWORD PTR [rsp+0x50],rax
   140025689:	lea    rbx,[rax+0x18]
   14002568d:	mov    QWORD PTR [rsp+0x58],rbx
   140025692:	mov    QWORD PTR [rsp+0x28],rbx
   140025697:	test   rbx,rbx
   14002569a:	je     0x1400256c2
   14002569c:	mov    QWORD PTR [rbx+0x18],0xf
   1400256a4:	mov    QWORD PTR [rbx+0x10],0x0
   1400256ac:	mov    BYTE PTR [rbx],0x0
   1400256af:	mov    rdx,rsi
   1400256b2:	mov    rcx,rbx
   1400256b5:	call   0x140004730
   1400256ba:	movzx  eax,WORD PTR [rsi+0x28]
   1400256be:	mov    WORD PTR [rbx+0x28],ax
   1400256c2:	mov    rax,rdi
   1400256c5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400256ca:	mov    rsi,QWORD PTR [rsp+0x48]
   1400256cf:	add    rsp,0x30
   1400256d3:	pop    rdi
   1400256d4:	ret    
   1400256d5:	int3   
   1400256d6:	int3   
   1400256d7:	int3   
   1400256d8:	int3   
   1400256d9:	int3   
   1400256da:	int3   
   1400256db:	int3   
   1400256dc:	int3   
   1400256dd:	int3   
   1400256de:	int3   
   1400256df:	int3   
   1400256e0:	rex push rbx
   1400256e2:	sub    rsp,0x40
   1400256e6:	mov    rbx,rcx
   1400256e9:	mov    QWORD PTR [rcx+0x10],0x0
   1400256f1:	mov    ecx,0x50
   1400256f6:	call   0x14002b1c2
   1400256fb:	test   rax,rax
   1400256fe:	je     0x140025730
   140025700:	mov    QWORD PTR [rbx+0x8],rax
   140025704:	mov    QWORD PTR [rax],rax
   140025707:	mov    rax,QWORD PTR [rbx+0x8]
   14002570b:	mov    QWORD PTR [rax+0x8],rax
   14002570f:	mov    rax,QWORD PTR [rbx+0x8]
   140025713:	mov    QWORD PTR [rax+0x10],rax
   140025717:	mov    rax,QWORD PTR [rbx+0x8]
   14002571b:	mov    BYTE PTR [rax+0x48],0x1
   14002571f:	mov    rax,QWORD PTR [rbx+0x8]
   140025723:	mov    BYTE PTR [rax+0x49],0x1
   140025727:	mov    rax,rbx
   14002572a:	add    rsp,0x40
   14002572e:	pop    rbx
   14002572f:	ret    
   140025730:	lea    rdx,[rsp+0x50]
   140025735:	lea    rcx,[rsp+0x20]
   14002573a:	mov    QWORD PTR [rsp+0x50],0x0
   140025743:	call   QWORD PTR [rip+0x24187]        # 0x1400498d0
   140025749:	lea    r11,[rip+0x24a88]        # 0x14004a1d8
   140025750:	lea    rdx,[rip+0x3dff1]        # 0x140063748
   140025757:	lea    rcx,[rsp+0x20]
   14002575c:	mov    QWORD PTR [rsp+0x20],r11
   140025761:	call   0x14002b560
   140025766:	int3   
   140025767:	int3   
   140025768:	int3   
   140025769:	int3   
   14002576a:	int3   
   14002576b:	int3   
   14002576c:	int3   
   14002576d:	int3   
   14002576e:	int3   
   14002576f:	int3   
   140025770:	test   rcx,rcx
   140025773:	je     0x1400257b6
   140025775:	push   rbx
   140025776:	sub    rsp,0x30
   14002577a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025783:	mov    rbx,rcx
   140025786:	mov    QWORD PTR [rsp+0x40],rcx
   14002578b:	mov    r8,QWORD PTR [rcx+0x8]
   14002578f:	mov    r9,r8
   140025792:	mov    r8,QWORD PTR [r8]
   140025795:	lea    rdx,[rsp+0x48]
   14002579a:	call   0x140025560
   14002579f:	nop
   1400257a0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400257a4:	call   0x14002b150
   1400257a9:	mov    rcx,rbx
   1400257ac:	call   0x14002b150
   1400257b1:	add    rsp,0x30
   1400257b5:	pop    rbx
   1400257b6:	repz ret 
   1400257b8:	int3   
   1400257b9:	int3   
   1400257ba:	int3   
   1400257bb:	int3   
   1400257bc:	int3   
   1400257bd:	int3   
   1400257be:	int3   
   1400257bf:	int3   
   1400257c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400257c5:	push   rdi
   1400257c6:	sub    rsp,0x30
   1400257ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400257d3:	mov    QWORD PTR [rsp+0x40],rbx
   1400257d8:	mov    rdi,rdx
   1400257db:	mov    rbx,rcx
   1400257de:	mov    QWORD PTR [rcx],0x0
   1400257e5:	mov    ecx,0x18
   1400257ea:	call   0x14002b1c2
   1400257ef:	test   rax,rax
   1400257f2:	je     0x140025810
   1400257f4:	mov    DWORD PTR [rax+0x8],0x1
   1400257fb:	mov    DWORD PTR [rax+0xc],0x1
   140025802:	lea    rcx,[rip+0x24a5f]        # 0x14004a268
   140025809:	mov    QWORD PTR [rax],rcx
   14002580c:	mov    QWORD PTR [rax+0x10],rdi
   140025810:	mov    QWORD PTR [rbx],rax
   140025813:	mov    rax,rbx
   140025816:	mov    rbx,QWORD PTR [rsp+0x40]
   14002581b:	add    rsp,0x30
   14002581f:	pop    rdi
   140025820:	ret    
   140025821:	int3   
   140025822:	int3   
   140025823:	int3   
   140025824:	int3   
   140025825:	int3   
   140025826:	int3   
   140025827:	int3   
   140025828:	int3   
   140025829:	int3   
   14002582a:	int3   
   14002582b:	int3   
   14002582c:	int3   
   14002582d:	int3   
   14002582e:	int3   
   14002582f:	int3   
   140025830:	rex push rbx
   140025832:	sub    rsp,0x30
   140025836:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002583f:	mov    rbx,QWORD PTR [rcx+0x10]
   140025843:	mov    QWORD PTR [rsp+0x40],rbx
   140025848:	test   rbx,rbx
   14002584b:	je     0x140025876
   14002584d:	mov    r8,QWORD PTR [rbx+0x8]
   140025851:	mov    r9,r8
   140025854:	mov    r8,QWORD PTR [r8]
   140025857:	lea    rdx,[rsp+0x48]
   14002585c:	mov    rcx,rbx
   14002585f:	call   0x140025560
   140025864:	nop
   140025865:	mov    rcx,QWORD PTR [rbx+0x8]
   140025869:	call   0x14002b150
   14002586e:	mov    rcx,rbx
   140025871:	call   0x14002b150
   140025876:	add    rsp,0x30
   14002587a:	pop    rbx
   14002587b:	ret    
   14002587c:	int3   
   14002587d:	int3   
   14002587e:	int3   
   14002587f:	int3   
   140025880:	mov    rax,rsp
   140025883:	push   rbp
   140025884:	push   rdi
   140025885:	push   r12
   140025887:	push   r13
   140025889:	push   r14
   14002588b:	lea    rbp,[rax-0xd8]
   140025892:	sub    rsp,0x1b0
   140025899:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400258a2:	mov    QWORD PTR [rax+0x10],rbx
   1400258a6:	mov    QWORD PTR [rax+0x18],rsi
   1400258aa:	mov    rax,QWORD PTR [rip+0x4293f]        # 0x1400681f0
   1400258b1:	xor    rax,rsp
   1400258b4:	mov    QWORD PTR [rbp+0xa8],rax
   1400258bb:	mov    r12,rcx
   1400258be:	xor    r13d,r13d
   1400258c1:	mov    DWORD PTR [rsp+0x20],r13d
   1400258c6:	mov    eax,DWORD PTR [rip+0x44774]        # 0x14006a040
   1400258cc:	test   al,0x1
   1400258ce:	jne    0x140025931
   1400258d0:	or     eax,0x1
   1400258d3:	mov    DWORD PTR [rip+0x44767],eax        # 0x14006a040
   1400258d9:	lea    ecx,[r13+0x20]
   1400258dd:	call   0x14002b1c2
   1400258e2:	mov    QWORD PTR [rsp+0x20],rax
   1400258e7:	test   rax,rax
   1400258ea:	je     0x1400258f9
   1400258ec:	mov    rcx,rax
   1400258ef:	call   0x1400256e0
   1400258f4:	mov    rdi,rax
   1400258f7:	jmp    0x1400258fc
   1400258f9:	mov    rdi,r13
   1400258fc:	mov    QWORD PTR [rip+0x4472d],rdi        # 0x14006a030
   140025903:	mov    rdx,rdi
   140025906:	lea    rcx,[rip+0x4472b]        # 0x14006a038
   14002590d:	call   0x1400257c0
   140025912:	mov    r8,rdi
   140025915:	mov    rdx,rdi
   140025918:	lea    rcx,[rip+0x44711]        # 0x14006a030
   14002591f:	call   0x140025170
   140025924:	lea    rcx,[rip+0x22d25]        # 0x140048650
   14002592b:	call   0x14002b278
   140025930:	nop
   140025931:	mov    rax,QWORD PTR [rip+0x446f8]        # 0x14006a030
   140025938:	cmp    QWORD PTR [rax+0x10],0x0
   14002593d:	jne    0x140025c2d
   140025943:	mov    QWORD PTR [rbp-0x18],0xf
   14002594b:	mov    QWORD PTR [rbp-0x20],r13
   14002594f:	mov    BYTE PTR [rbp-0x30],0x0
   140025953:	xor    r8d,r8d
   140025956:	lea    rdx,[rip+0x2af98]        # 0x1400508f5
   14002595d:	lea    rcx,[rbp-0x30]
   140025961:	call   0x140005154
   140025966:	nop
   140025967:	mov    ebx,0x1
   14002596c:	mov    WORD PTR [rsp+0x20],bx
   140025971:	lea    r14,[rip+0xfffffffffffda688]        # 0x140000000
   140025978:	nop    DWORD PTR [rax+rax*1+0x0]
   140025980:	movzx  ecx,bx
   140025983:	lea    eax,[rcx+0x1]
   140025986:	cmp    eax,0x2
   140025989:	jl     0x140025c1a
   14002598f:	cmp    ecx,0xc
   140025992:	ja     0x140025c07
   140025998:	mov    esi,ecx
   14002599a:	mov    rdx,QWORD PTR [r14+rcx*8+0x49f38]
   1400259a2:	xor    eax,eax
   1400259a4:	or     rcx,0xffffffffffffffff
   1400259a8:	mov    rdi,rdx
   1400259ab:	repnz scas al,BYTE PTR es:[rdi]
   1400259ad:	not    rcx
   1400259b0:	lea    r8,[rcx-0x1]
   1400259b4:	lea    rcx,[rbp-0x30]
   1400259b8:	call   0x140005154
   1400259bd:	mov    QWORD PTR [rsp+0x70],0xf
   1400259c6:	mov    QWORD PTR [rsp+0x68],r13
   1400259cb:	mov    BYTE PTR [rsp+0x58],0x0
   1400259d0:	or     r9,0xffffffffffffffff
   1400259d4:	xor    r8d,r8d
   1400259d7:	lea    rdx,[rbp-0x30]
   1400259db:	lea    rcx,[rsp+0x58]
   1400259e0:	call   0x1400048b8
   1400259e5:	lea    rdx,[rsp+0x58]
   1400259ea:	lea    rcx,[rbp+0x20]
   1400259ee:	call   0x14001d750
   1400259f3:	mov    rdi,rax
   1400259f6:	lea    rax,[rbp-0x30]
   1400259fa:	cmp    rax,rdi
   1400259fd:	je     0x140025a65
   1400259ff:	cmp    QWORD PTR [rbp-0x18],0x10
   140025a04:	jb     0x140025a0f
   140025a06:	mov    rcx,QWORD PTR [rbp-0x30]
   140025a0a:	call   0x14002b150
   140025a0f:	mov    QWORD PTR [rbp-0x18],0xf
   140025a17:	mov    QWORD PTR [rbp-0x20],r13
   140025a1b:	mov    BYTE PTR [rbp-0x30],0x0
   140025a1f:	cmp    QWORD PTR [rdi+0x18],0x10
   140025a24:	jae    0x140025a3c
   140025a26:	mov    r8,QWORD PTR [rdi+0x10]
   140025a2a:	inc    r8
   140025a2d:	mov    rdx,rdi
   140025a30:	lea    rcx,[rbp-0x30]
   140025a34:	call   QWORD PTR [rip+0x23bb6]        # 0x1400495f0
   140025a3a:	jmp    0x140025a46
   140025a3c:	mov    rax,QWORD PTR [rdi]
   140025a3f:	mov    QWORD PTR [rbp-0x30],rax
   140025a43:	mov    QWORD PTR [rdi],r13
   140025a46:	mov    rax,QWORD PTR [rdi+0x10]
   140025a4a:	mov    QWORD PTR [rbp-0x20],rax
   140025a4e:	mov    rax,QWORD PTR [rdi+0x18]
   140025a52:	mov    QWORD PTR [rbp-0x18],rax
   140025a56:	mov    QWORD PTR [rdi+0x18],0xf
   140025a5e:	mov    QWORD PTR [rdi+0x10],r13
   140025a62:	mov    BYTE PTR [rdi],0x0
   140025a65:	cmp    QWORD PTR [rbp+0x38],0x10
   140025a6a:	jb     0x140025a75
   140025a6c:	mov    rcx,QWORD PTR [rbp+0x20]
   140025a70:	call   0x14002b150
   140025a75:	lea    r8,[rsp+0x20]
   140025a7a:	lea    rdx,[rbp-0x30]
   140025a7e:	lea    rcx,[rbp+0x48]
   140025a82:	call   0x1400251c0
   140025a87:	nop
   140025a88:	mov    rdi,QWORD PTR [rip+0x445a1]        # 0x14006a030
   140025a8f:	mov    rdx,rax
   140025a92:	mov    rcx,rdi
   140025a95:	call   0x140025660
   140025a9a:	mov    r8,rax
   140025a9d:	xor    r9d,r9d
   140025aa0:	lea    rdx,[rbp-0x70]
   140025aa4:	mov    rcx,rdi
   140025aa7:	call   0x140035900
   140025aac:	nop
   140025aad:	cmp    QWORD PTR [rbp+0x60],0x10
   140025ab2:	jb     0x140025abd
   140025ab4:	mov    rcx,QWORD PTR [rbp+0x48]
   140025ab8:	call   0x14002b150
   140025abd:	mov    rdx,QWORD PTR [r14+rsi*8+0x49ec8]
   140025ac5:	xor    eax,eax
   140025ac7:	or     rcx,0xffffffffffffffff
   140025acb:	mov    rdi,rdx
   140025ace:	repnz scas al,BYTE PTR es:[rdi]
   140025ad0:	not    rcx
   140025ad3:	lea    r8,[rcx-0x1]
   140025ad7:	lea    rcx,[rbp-0x30]
   140025adb:	call   0x140005154
   140025ae0:	mov    QWORD PTR [rsp+0x48],0xf
   140025ae9:	mov    QWORD PTR [rsp+0x40],r13
   140025aee:	mov    BYTE PTR [rsp+0x30],0x0
   140025af3:	or     r9,0xffffffffffffffff
   140025af7:	xor    r8d,r8d
   140025afa:	lea    rdx,[rbp-0x30]
   140025afe:	lea    rcx,[rsp+0x30]
   140025b03:	call   0x1400048b8
   140025b08:	lea    rdx,[rsp+0x30]
   140025b0d:	lea    rcx,[rbp-0x8]
   140025b11:	call   0x14001d750
   140025b16:	mov    rdi,rax
   140025b19:	lea    rax,[rbp-0x30]
   140025b1d:	cmp    rax,rdi
   140025b20:	je     0x140025b88
   140025b22:	cmp    QWORD PTR [rbp-0x18],0x10
   140025b27:	jb     0x140025b32
   140025b29:	mov    rcx,QWORD PTR [rbp-0x30]
   140025b2d:	call   0x14002b150
   140025b32:	mov    QWORD PTR [rbp-0x18],0xf
   140025b3a:	mov    QWORD PTR [rbp-0x20],r13
   140025b3e:	mov    BYTE PTR [rbp-0x30],0x0
   140025b42:	cmp    QWORD PTR [rdi+0x18],0x10
   140025b47:	jae    0x140025b5f
   140025b49:	mov    r8,QWORD PTR [rdi+0x10]
   140025b4d:	inc    r8
   140025b50:	mov    rdx,rdi
   140025b53:	lea    rcx,[rbp-0x30]
   140025b57:	call   QWORD PTR [rip+0x23a93]        # 0x1400495f0
   140025b5d:	jmp    0x140025b69
   140025b5f:	mov    rax,QWORD PTR [rdi]
   140025b62:	mov    QWORD PTR [rbp-0x30],rax
   140025b66:	mov    QWORD PTR [rdi],r13
   140025b69:	mov    rax,QWORD PTR [rdi+0x10]
   140025b6d:	mov    QWORD PTR [rbp-0x20],rax
   140025b71:	mov    rax,QWORD PTR [rdi+0x18]
   140025b75:	mov    QWORD PTR [rbp-0x18],rax
   140025b79:	mov    QWORD PTR [rdi+0x18],0xf
   140025b81:	mov    QWORD PTR [rdi+0x10],r13
   140025b85:	mov    BYTE PTR [rdi],0x0
   140025b88:	cmp    QWORD PTR [rbp+0x10],0x10
   140025b8d:	jb     0x140025b98
   140025b8f:	mov    rcx,QWORD PTR [rbp-0x8]
   140025b93:	call   0x14002b150
   140025b98:	lea    r8,[rsp+0x20]
   140025b9d:	lea    rdx,[rbp-0x30]
   140025ba1:	lea    rcx,[rbp+0x78]
   140025ba5:	call   0x1400251c0
   140025baa:	nop
   140025bab:	mov    rdi,QWORD PTR [rip+0x4447e]        # 0x14006a030
   140025bb2:	mov    rdx,rax
   140025bb5:	mov    rcx,rdi
   140025bb8:	call   0x140025660
   140025bbd:	mov    r8,rax
   140025bc0:	xor    r9d,r9d
   140025bc3:	lea    rdx,[rbp-0x80]
   140025bc7:	mov    rcx,rdi
   140025bca:	call   0x140035900
   140025bcf:	nop
   140025bd0:	cmp    QWORD PTR [rbp+0x90],0x10
   140025bd8:	jb     0x140025be3
   140025bda:	mov    rcx,QWORD PTR [rbp+0x78]
   140025bde:	call   0x14002b150
   140025be3:	inc    bx
   140025be6:	mov    WORD PTR [rsp+0x20],bx
   140025beb:	cmp    bx,0xc
   140025bef:	jbe    0x140025980
   140025bf5:	cmp    QWORD PTR [rbp-0x18],0x10
   140025bfa:	jb     0x140025c2d
   140025bfc:	mov    rcx,QWORD PTR [rbp-0x30]
   140025c00:	call   0x14002b150
   140025c05:	jmp    0x140025c2d
   140025c07:	lea    rcx,[rbp-0x48]
   140025c0b:	call   0x14001d424
   140025c10:	nop
   140025c11:	mov    rcx,rax
   140025c14:	call   0x1400205a8
   140025c19:	nop
   140025c1a:	lea    rcx,[rbp-0x60]
   140025c1e:	call   0x14001d424
   140025c23:	nop
   140025c24:	mov    rcx,rax
   140025c27:	call   0x1400205a8
   140025c2c:	nop
   140025c2d:	mov    rcx,QWORD PTR [rip+0x443fc]        # 0x14006a030
   140025c34:	mov    QWORD PTR [r12],rcx
   140025c38:	mov    rcx,QWORD PTR [rip+0x443f9]        # 0x14006a038
   140025c3f:	mov    QWORD PTR [r12+0x8],rcx
   140025c44:	mov    rcx,QWORD PTR [rip+0x443ed]        # 0x14006a038
   140025c4b:	test   rcx,rcx
   140025c4e:	je     0x140025c54
   140025c50:	lock inc DWORD PTR [rcx+0x8]
   140025c54:	mov    rax,r12
   140025c57:	mov    rcx,QWORD PTR [rbp+0xa8]
   140025c5e:	xor    rcx,rsp
   140025c61:	call   0x14002b100
   140025c66:	lea    r11,[rsp+0x1b0]
   140025c6e:	mov    rbx,QWORD PTR [r11+0x38]
   140025c72:	mov    rsi,QWORD PTR [r11+0x40]
   140025c76:	mov    rsp,r11
   140025c79:	pop    r14
   140025c7b:	pop    r13
   140025c7d:	pop    r12
   140025c7f:	pop    rdi
   140025c80:	pop    rbp
   140025c81:	ret    
   140025c82:	int3   
   140025c83:	int3   
   140025c84:	int3   
   140025c85:	int3   
   140025c86:	int3   
   140025c87:	int3   
   140025c88:	int3   
   140025c89:	int3   
   140025c8a:	int3   
   140025c8b:	int3   
   140025c8c:	int3   
   140025c8d:	int3   
   140025c8e:	int3   
   140025c8f:	int3   
   140025c90:	rex push rbx
   140025c92:	sub    rsp,0x20
   140025c96:	cmp    DWORD PTR [rcx+0x5c],0x0
   140025c9a:	mov    rbx,rcx
   140025c9d:	jne    0x140025ced
   140025c9f:	cmp    DWORD PTR [rcx+0x8],0x0
   140025ca3:	jne    0x140025cff
   140025ca5:	call   QWORD PTR [rip+0x23afd]        # 0x1400497a8
   140025cab:	mov    edx,0x1
   140025cb0:	mov    r8d,0x4000
   140025cb6:	mov    DWORD PTR [rax],0x0
   140025cbc:	mov    r9,QWORD PTR [rbx+0x60]
   140025cc0:	mov    rcx,QWORD PTR [rbx+0x68]
   140025cc4:	call   QWORD PTR [rip+0x23ad6]        # 0x1400497a0
   140025cca:	test   eax,eax
   140025ccc:	mov    DWORD PTR [rbx+0x8],eax
   140025ccf:	jne    0x140025cf8
   140025cd1:	mov    rcx,QWORD PTR [rbx+0x60]
   140025cd5:	mov    DWORD PTR [rbx+0x5c],0x1
   140025cdc:	call   QWORD PTR [rip+0x23ab6]        # 0x140049798
   140025ce2:	test   eax,eax
   140025ce4:	je     0x140025ced
   140025ce6:	mov    DWORD PTR [rbx+0x58],0xffffffff
   140025ced:	mov    eax,0xffffffff
   140025cf2:	add    rsp,0x20
   140025cf6:	pop    rbx
   140025cf7:	ret    
   140025cf8:	mov    rax,QWORD PTR [rbx+0x68]
   140025cfc:	mov    QWORD PTR [rbx],rax
   140025cff:	mov    rax,QWORD PTR [rbx]
   140025d02:	add    DWORD PTR [rbx+0x8],0xffffffff
   140025d06:	movzx  ecx,BYTE PTR [rax]
   140025d09:	add    rax,0x1
   140025d0d:	mov    QWORD PTR [rbx],rax
   140025d10:	mov    eax,ecx
   140025d12:	add    rsp,0x20
   140025d16:	pop    rbx
   140025d17:	ret    
   140025d18:	int3   
   140025d19:	int3   
   140025d1a:	int3   
   140025d1b:	int3   
   140025d1c:	int3   
   140025d1d:	int3   
   140025d1e:	int3   
   140025d1f:	int3   
   140025d20:	sub    rsp,0x28
   140025d24:	mov    QWORD PTR [rsp+0x38],rbx
   140025d29:	mov    ebx,DWORD PTR [rcx+0x8]
   140025d2c:	mov    QWORD PTR [rsp+0x48],rdi
   140025d31:	cmp    ebx,0x2
   140025d34:	mov    rdi,rcx
   140025d37:	jae    0x140025dbe
   140025d3d:	test   ebx,ebx
   140025d3f:	je     0x140025d4d
   140025d41:	mov    rax,QWORD PTR [rcx]
   140025d44:	mov    rdx,QWORD PTR [rcx+0x68]
   140025d48:	movzx  eax,BYTE PTR [rax]
   140025d4b:	mov    BYTE PTR [rdx],al
   140025d4d:	call   QWORD PTR [rip+0x23a55]        # 0x1400497a8
   140025d53:	mov    ecx,ebx
   140025d55:	mov    edx,0x1
   140025d5a:	mov    DWORD PTR [rax],0x0
   140025d60:	mov    r9,QWORD PTR [rdi+0x60]
   140025d64:	mov    eax,0x4000
   140025d69:	sar    eax,cl
   140025d6b:	mov    rcx,rbx
   140025d6e:	add    rcx,QWORD PTR [rdi+0x68]
   140025d72:	movsxd r8,eax
   140025d75:	call   QWORD PTR [rip+0x23a25]        # 0x1400497a0
   140025d7b:	test   eax,eax
   140025d7d:	mov    rbx,rax
   140025d80:	jne    0x140025d97
   140025d82:	mov    rcx,QWORD PTR [rdi+0x60]
   140025d86:	call   QWORD PTR [rip+0x23a0c]        # 0x140049798
   140025d8c:	test   eax,eax
   140025d8e:	je     0x140025d97
   140025d90:	mov    DWORD PTR [rdi+0x58],0xffffffff
   140025d97:	add    DWORD PTR [rdi+0x8],ebx
   140025d9a:	mov    ecx,DWORD PTR [rdi+0x8]
   140025d9d:	mov    rax,QWORD PTR [rdi+0x68]
   140025da1:	cmp    ecx,0x2
   140025da4:	mov    QWORD PTR [rdi],rax
   140025da7:	jae    0x140025dbe
   140025da9:	mov    DWORD PTR [rdi+0x90],ecx
   140025daf:	mov    rdi,QWORD PTR [rsp+0x48]
   140025db4:	mov    rbx,QWORD PTR [rsp+0x38]
   140025db9:	add    rsp,0x28
   140025dbd:	ret    
   140025dbe:	mov    rax,QWORD PTR [rdi]
   140025dc1:	cmp    BYTE PTR [rax],0x1f
   140025dc4:	jne    0x140025edd
   140025dca:	cmp    BYTE PTR [rax+0x1],0x8b
   140025dce:	jne    0x140025edd
   140025dd4:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140025dd8:	add    rax,0x2
   140025ddc:	mov    rcx,rdi
   140025ddf:	mov    QWORD PTR [rdi],rax
   140025de2:	mov    QWORD PTR [rsp+0x40],rsi
   140025de7:	call   0x140025c90
   140025dec:	mov    rcx,rdi
   140025def:	mov    ebx,eax
   140025df1:	call   0x140025c90
   140025df6:	cmp    ebx,0x8
   140025df9:	mov    esi,eax
   140025dfb:	jne    0x140025ec2
   140025e01:	test   al,0xe0
   140025e03:	jne    0x140025ec2
   140025e09:	mov    ebx,0x6
   140025e0e:	xchg   ax,ax
   140025e10:	mov    rcx,rdi
   140025e13:	call   0x140025c90
   140025e18:	sub    rbx,0x1
   140025e1c:	jne    0x140025e10
   140025e1e:	test   sil,0x4
   140025e22:	je     0x140025e56
   140025e24:	mov    rcx,rdi
   140025e27:	call   0x140025c90
   140025e2c:	mov    rcx,rdi
   140025e2f:	mov    ebx,eax
   140025e31:	call   0x140025c90
   140025e36:	shl    eax,0x8
   140025e39:	add    ebx,eax
   140025e3b:	xchg   ax,ax
   140025e3d:	data16 xchg ax,ax
   140025e40:	mov    ecx,ebx
   140025e42:	add    ebx,0xffffffff
   140025e45:	test   ecx,ecx
   140025e47:	je     0x140025e56
   140025e49:	mov    rcx,rdi
   140025e4c:	call   0x140025c90
   140025e51:	cmp    eax,0xffffffff
   140025e54:	jne    0x140025e40
   140025e56:	test   sil,0x8
   140025e5a:	je     0x140025e71
   140025e5c:	data16 data16 xchg ax,ax
   140025e60:	mov    rcx,rdi
   140025e63:	call   0x140025c90
   140025e68:	test   eax,eax
   140025e6a:	je     0x140025e71
   140025e6c:	cmp    eax,0xffffffff
   140025e6f:	jne    0x140025e60
   140025e71:	test   sil,0x10
   140025e75:	je     0x140025e88
   140025e77:	mov    rcx,rdi
   140025e7a:	call   0x140025c90
   140025e7f:	test   eax,eax
   140025e81:	je     0x140025e88
   140025e83:	cmp    eax,0xffffffff
   140025e86:	jne    0x140025e77
   140025e88:	test   sil,0x2
   140025e8c:	je     0x140025ea1
   140025e8e:	mov    ebx,0x2
   140025e93:	mov    rcx,rdi
   140025e96:	call   0x140025c90
   140025e9b:	sub    rbx,0x1
   140025e9f:	jne    0x140025e93
   140025ea1:	mov    eax,DWORD PTR [rdi+0x5c]
   140025ea4:	mov    rsi,QWORD PTR [rsp+0x40]
   140025ea9:	neg    eax
   140025eab:	sbb    ecx,ecx
   140025ead:	and    ecx,0xfffffffd
   140025eb0:	mov    DWORD PTR [rdi+0x58],ecx
   140025eb3:	mov    rdi,QWORD PTR [rsp+0x48]
   140025eb8:	mov    rbx,QWORD PTR [rsp+0x38]
   140025ebd:	add    rsp,0x28
   140025ec1:	ret    
   140025ec2:	mov    DWORD PTR [rdi+0x58],0xfffffffd
   140025ec9:	mov    rsi,QWORD PTR [rsp+0x40]
   140025ece:	mov    rdi,QWORD PTR [rsp+0x48]
   140025ed3:	mov    rbx,QWORD PTR [rsp+0x38]
   140025ed8:	add    rsp,0x28
   140025edc:	ret    
   140025edd:	mov    rbx,QWORD PTR [rsp+0x38]
   140025ee2:	mov    DWORD PTR [rdi+0x90],0x1
   140025eec:	mov    rdi,QWORD PTR [rsp+0x48]
   140025ef1:	add    rsp,0x28
   140025ef5:	ret    
   140025ef6:	int3   
   140025ef7:	int3   
   140025ef8:	int3   
   140025ef9:	int3   
   140025efa:	int3   
   140025efb:	int3   
   140025efc:	int3   
   140025efd:	int3   
   140025efe:	int3   
   140025eff:	int3   
   140025f00:	sub    rsp,0x28
   140025f04:	mov    QWORD PTR [rsp+0x40],rbx
   140025f09:	mov    QWORD PTR [rsp+0x48],rdi
   140025f0e:	xor    edi,edi
   140025f10:	test   rcx,rcx
   140025f13:	mov    rbx,rcx
   140025f16:	jne    0x140025f2a
   140025f18:	lea    eax,[rcx-0x2]
   140025f1b:	mov    rdi,QWORD PTR [rsp+0x48]
   140025f20:	mov    rbx,QWORD PTR [rsp+0x40]
   140025f25:	add    rsp,0x28
   140025f29:	ret    
   140025f2a:	mov    rcx,QWORD PTR [rcx+0x80]
   140025f31:	test   rcx,rcx
   140025f34:	je     0x140025f3c
   140025f36:	call   QWORD PTR [rip+0x23874]        # 0x1400497b0
   140025f3c:	cmp    QWORD PTR [rbx+0x28],rdi
   140025f40:	je     0x140025f67
   140025f42:	movzx  eax,BYTE PTR [rbx+0x94]
   140025f49:	cmp    al,0x77
   140025f4b:	jne    0x140025f59
   140025f4d:	mov    rcx,rbx
   140025f50:	call   0x140026ff0
   140025f55:	mov    edi,eax
   140025f57:	jmp    0x140025f67
   140025f59:	cmp    al,0x72
   140025f5b:	jne    0x140025f67
   140025f5d:	mov    rcx,rbx
   140025f60:	call   0x1400284d0
   140025f65:	mov    edi,eax
   140025f67:	mov    rcx,QWORD PTR [rbx+0x60]
   140025f6b:	test   rcx,rcx
   140025f6e:	je     0x140025f8b
   140025f70:	call   QWORD PTR [rip+0x2371a]        # 0x140049690
   140025f76:	test   eax,eax
   140025f78:	je     0x140025f8b
   140025f7a:	call   QWORD PTR [rip+0x23828]        # 0x1400497a8
   140025f80:	mov    ecx,0xffffffff
   140025f85:	cmp    DWORD PTR [rax],0x1d
   140025f88:	cmovne edi,ecx
   140025f8b:	mov    eax,DWORD PTR [rbx+0x58]
   140025f8e:	mov    rcx,QWORD PTR [rbx+0x68]
   140025f92:	test   eax,eax
   140025f94:	cmovs  edi,eax
   140025f97:	test   rcx,rcx
   140025f9a:	je     0x140025fa2
   140025f9c:	call   QWORD PTR [rip+0x2380e]        # 0x1400497b0
   140025fa2:	mov    rcx,QWORD PTR [rbx+0x70]
   140025fa6:	test   rcx,rcx
   140025fa9:	je     0x140025fb1
   140025fab:	call   QWORD PTR [rip+0x237ff]        # 0x1400497b0
   140025fb1:	mov    rcx,QWORD PTR [rbx+0x88]
   140025fb8:	test   rcx,rcx
   140025fbb:	je     0x140025fc3
   140025fbd:	call   QWORD PTR [rip+0x237ed]        # 0x1400497b0
   140025fc3:	mov    rcx,rbx
   140025fc6:	call   QWORD PTR [rip+0x237e4]        # 0x1400497b0
   140025fcc:	mov    rbx,QWORD PTR [rsp+0x40]
   140025fd1:	mov    eax,edi
   140025fd3:	mov    rdi,QWORD PTR [rsp+0x48]
   140025fd8:	add    rsp,0x28
   140025fdc:	ret    
   140025fdd:	int3   
   140025fde:	int3   
   140025fdf:	int3   
   140025fe0:	sub    rsp,0x28
   140025fe4:	test   rcx,rcx
   140025fe7:	mov    QWORD PTR [rsp+0x38],rbx
   140025fec:	mov    QWORD PTR [rsp+0x40],rsi
   140025ff1:	mov    QWORD PTR [rsp+0x48],rdi
   140025ff6:	mov    rsi,rdx
   140025ff9:	mov    rbx,rcx
   140025ffc:	mov    edi,r8d
   140025fff:	je     0x1400260bb
   140026005:	cmp    BYTE PTR [rcx+0x94],0x77
   14002600c:	jne    0x1400260bb
   140026012:	test   r8d,r8d
   140026015:	mov    QWORD PTR [rcx],rdx
   140026018:	mov    DWORD PTR [rcx+0x8],r8d
   14002601c:	je     0x140026091
   14002601e:	xchg   ax,ax
   140026020:	cmp    DWORD PTR [rbx+0x18],0x0
   140026024:	jne    0x14002604e
   140026026:	mov    rcx,QWORD PTR [rbx+0x70]
   14002602a:	mov    r9,QWORD PTR [rbx+0x60]
   14002602e:	mov    edx,0x1
   140026033:	mov    r8d,0x4000
   140026039:	mov    QWORD PTR [rbx+0x10],rcx
   14002603d:	call   QWORD PTR [rip+0x23645]        # 0x140049688
   140026043:	cmp    rax,0x4000
   140026049:	jne    0x14002608a
   14002604b:	mov    DWORD PTR [rbx+0x18],eax
   14002604e:	mov    eax,DWORD PTR [rbx+0x8]
   140026051:	xor    edx,edx
   140026053:	mov    rcx,rbx
   140026056:	add    DWORD PTR [rbx+0x9c],eax
   14002605c:	mov    eax,DWORD PTR [rbx+0x18]
   14002605f:	add    DWORD PTR [rbx+0xa0],eax
   140026065:	call   0x140026710
   14002606a:	mov    ecx,DWORD PTR [rbx+0x8]
   14002606d:	sub    DWORD PTR [rbx+0x9c],ecx
   140026073:	mov    ecx,DWORD PTR [rbx+0x18]
   140026076:	mov    DWORD PTR [rbx+0x58],eax
   140026079:	sub    DWORD PTR [rbx+0xa0],ecx
   14002607f:	test   eax,eax
   140026081:	jne    0x140026091
   140026083:	cmp    DWORD PTR [rbx+0x8],eax
   140026086:	jne    0x140026020
   140026088:	jmp    0x140026091
   14002608a:	mov    DWORD PTR [rbx+0x58],0xffffffff
   140026091:	mov    ecx,DWORD PTR [rbx+0x78]
   140026094:	mov    r8d,edi
   140026097:	mov    rdx,rsi
   14002609a:	call   0x140028850
   14002609f:	sub    edi,DWORD PTR [rbx+0x8]
   1400260a2:	mov    DWORD PTR [rbx+0x78],eax
   1400260a5:	mov    eax,edi
   1400260a7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400260ac:	mov    rsi,QWORD PTR [rsp+0x40]
   1400260b1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400260b6:	add    rsp,0x28
   1400260ba:	ret    
   1400260bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400260c0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400260c5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400260ca:	mov    eax,0xfffffffe
   1400260cf:	add    rsp,0x28
   1400260d3:	ret    
   1400260d4:	int3   
   1400260d5:	int3   
   1400260d6:	int3   
   1400260d7:	int3   
   1400260d8:	int3   
   1400260d9:	int3   
   1400260da:	int3   
   1400260db:	int3   
   1400260dc:	int3   
   1400260dd:	int3   
   1400260de:	int3   
   1400260df:	int3   
   1400260e0:	sub    rsp,0x28
   1400260e4:	mov    QWORD PTR [rsp+0x30],rbx
   1400260e9:	mov    QWORD PTR [rsp+0x38],rbp
   1400260ee:	mov    QWORD PTR [rsp+0x40],rsi
   1400260f3:	mov    QWORD PTR [rsp+0x20],r12
   1400260f8:	xor    r12d,r12d
   1400260fb:	test   rcx,rcx
   1400260fe:	mov    ebp,edx
   140026100:	mov    rbx,rcx
   140026103:	mov    esi,r12d
   140026106:	je     0x1400261e7
   14002610c:	cmp    BYTE PTR [rcx+0x94],0x77
   140026113:	jne    0x1400261e7
   140026119:	mov    DWORD PTR [rcx+0x8],r12d
   14002611d:	mov    QWORD PTR [rsp+0x48],rdi
   140026122:	mov    edi,0x4000
   140026127:	sub    edi,DWORD PTR [rbx+0x18]
   14002612a:	je     0x140026159
   14002612c:	mov    r9,QWORD PTR [rbx+0x60]
   140026130:	mov    rcx,QWORD PTR [rbx+0x70]
   140026134:	mov    r8d,edi
   140026137:	mov    edx,0x1
   14002613c:	call   QWORD PTR [rip+0x23546]        # 0x140049688
   140026142:	cmp    eax,edi
   140026144:	jne    0x1400261d9
   14002614a:	mov    rax,QWORD PTR [rbx+0x70]
   14002614e:	mov    DWORD PTR [rbx+0x18],0x4000
   140026155:	mov    QWORD PTR [rbx+0x10],rax
   140026159:	test   esi,esi
   14002615b:	jne    0x1400261b1
   14002615d:	mov    eax,DWORD PTR [rbx+0x18]
   140026160:	mov    edx,ebp
   140026162:	mov    rcx,rbx
   140026165:	add    DWORD PTR [rbx+0xa0],eax
   14002616b:	call   0x140026710
   140026170:	mov    ecx,DWORD PTR [rbx+0x18]
   140026173:	sub    DWORD PTR [rbx+0xa0],ecx
   140026179:	test   edi,edi
   14002617b:	mov    DWORD PTR [rbx+0x58],eax
   14002617e:	jne    0x140026189
   140026180:	cmp    eax,0xfffffffb
   140026183:	jne    0x140026189
   140026185:	mov    DWORD PTR [rbx+0x58],r12d
   140026189:	test   ecx,ecx
   14002618b:	jne    0x140026198
   14002618d:	cmp    DWORD PTR [rbx+0x58],0x1
   140026191:	je     0x140026198
   140026193:	mov    esi,r12d
   140026196:	jmp    0x14002619d
   140026198:	mov    esi,0x1
   14002619d:	mov    eax,DWORD PTR [rbx+0x58]
   1400261a0:	test   eax,eax
   1400261a2:	je     0x140026122
   1400261a8:	cmp    eax,0x1
   1400261ab:	je     0x140026122
   1400261b1:	mov    eax,DWORD PTR [rbx+0x58]
   1400261b4:	cmp    eax,0x1
   1400261b7:	cmove  eax,r12d
   1400261bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400261c0:	mov    r12,QWORD PTR [rsp+0x20]
   1400261c5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400261ca:	mov    rbp,QWORD PTR [rsp+0x38]
   1400261cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400261d4:	add    rsp,0x28
   1400261d8:	ret    
   1400261d9:	mov    DWORD PTR [rbx+0x58],0xffffffff
   1400261e0:	mov    eax,0xffffffff
   1400261e5:	jmp    0x1400261bb
   1400261e7:	mov    eax,0xfffffffe
   1400261ec:	jmp    0x1400261c0
   1400261ee:	int3   
   1400261ef:	int3   
   1400261f0:	sub    rsp,0x28
   1400261f4:	mov    QWORD PTR [rsp+0x38],rbx
   1400261f9:	mov    QWORD PTR [rsp+0x40],rsi
   1400261fe:	mov    QWORD PTR [rsp+0x48],rdi
   140026203:	mov    edi,0x4
   140026208:	mov    ebx,edx
   14002620a:	mov    rsi,rcx
   14002620d:	data16 xchg ax,ax
   140026210:	movzx  ecx,bl
   140026213:	mov    rdx,rsi
   140026216:	call   QWORD PTR [rip+0x236a4]        # 0x1400498c0
   14002621c:	shr    ebx,0x8
   14002621f:	sub    rdi,0x1
   140026223:	jne    0x140026210
   140026225:	mov    rdi,QWORD PTR [rsp+0x48]
   14002622a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002622f:	mov    rbx,QWORD PTR [rsp+0x38]
   140026234:	add    rsp,0x28
   140026238:	ret    
   140026239:	int3   
   14002623a:	int3   
   14002623b:	int3   
   14002623c:	int3   
   14002623d:	int3   
   14002623e:	int3   
   14002623f:	int3   
   140026240:	rex push rbx
   140026242:	sub    rsp,0x20
   140026246:	test   rcx,rcx
   140026249:	mov    rbx,rcx
   14002624c:	jne    0x140026257
   14002624e:	lea    eax,[rcx-0x2]
   140026251:	add    rsp,0x20
   140026255:	pop    rbx
   140026256:	ret    
   140026257:	cmp    BYTE PTR [rcx+0x94],0x77
   14002625e:	jne    0x140026289
   140026260:	mov    edx,0x4
   140026265:	call   0x1400260e0
   14002626a:	test   eax,eax
   14002626c:	jne    0x140026289
   14002626e:	mov    edx,DWORD PTR [rbx+0x78]
   140026271:	mov    rcx,QWORD PTR [rbx+0x60]
   140026275:	call   0x1400261f0
   14002627a:	mov    edx,DWORD PTR [rbx+0x9c]
   140026280:	mov    rcx,QWORD PTR [rbx+0x60]
   140026284:	call   0x1400261f0
   140026289:	mov    rcx,rbx
   14002628c:	add    rsp,0x20
   140026290:	pop    rbx
   140026291:	jmp    0x140025f00
   140026296:	int3   
   140026297:	int3   
   140026298:	int3   
   140026299:	int3   
   14002629a:	int3   
   14002629b:	int3   
   14002629c:	int3   
   14002629d:	int3   
   14002629e:	int3   
   14002629f:	int3   
   1400262a0:	mov    rax,rsp
   1400262a3:	sub    rsp,0xd8
   1400262aa:	mov    QWORD PTR [rax+0x10],rbp
   1400262ae:	mov    QWORD PTR [rax+0x18],rsi
   1400262b2:	mov    QWORD PTR [rax+0x20],rdi
   1400262b6:	mov    QWORD PTR [rax-0x8],r12
   1400262ba:	xor    edi,edi
   1400262bc:	test   rcx,rcx
   1400262bf:	mov    QWORD PTR [rax-0x10],r13
   1400262c3:	mov    QWORD PTR [rax-0x18],r14
   1400262c7:	mov    QWORD PTR [rax-0x20],r15
   1400262cb:	mov    r15d,r8d
   1400262ce:	lea    r13,[rdi-0x1]
   1400262d2:	mov    rsi,rdx
   1400262d5:	mov    r14,rcx
   1400262d8:	mov    r12d,edi
   1400262db:	lea    rbp,[rax-0x78]
   1400262df:	je     0x1400265eb
   1400262e5:	test   rdx,rdx
   1400262e8:	je     0x1400265eb
   1400262ee:	mov    ecx,0xb0
   1400262f3:	mov    QWORD PTR [rax+0x8],rbx
   1400262f7:	call   QWORD PTR [rip+0x234bb]        # 0x1400497b8
   1400262fd:	test   rax,rax
   140026300:	mov    rbx,rax
   140026303:	je     0x14002649c
   140026309:	xor    r8d,r8d
   14002630c:	xor    edx,edx
   14002630e:	xor    ecx,ecx
   140026310:	mov    QWORD PTR [rax+0x30],rdi
   140026314:	mov    QWORD PTR [rax+0x38],rdi
   140026318:	mov    QWORD PTR [rax+0x40],rdi
   14002631c:	mov    QWORD PTR [rax+0x68],rdi
   140026320:	mov    QWORD PTR [rax],rdi
   140026323:	mov    QWORD PTR [rax+0x70],rdi
   140026327:	mov    QWORD PTR [rax+0x10],rdi
   14002632b:	mov    DWORD PTR [rax+0x18],edi
   14002632e:	mov    DWORD PTR [rax+0x8],edi
   140026331:	mov    QWORD PTR [rax+0x60],rdi
   140026335:	mov    DWORD PTR [rax+0x58],edi
   140026338:	mov    DWORD PTR [rax+0x5c],edi
   14002633b:	mov    DWORD PTR [rax+0x9c],edi
   140026341:	mov    DWORD PTR [rax+0xa0],edi
   140026347:	mov    DWORD PTR [rax+0xa4],r13d
   14002634e:	call   0x140028850
   140026353:	mov    QWORD PTR [rbx+0x80],rdi
   14002635a:	mov    DWORD PTR [rbx+0x90],edi
   140026360:	mov    DWORD PTR [rbx+0x78],eax
   140026363:	xor    eax,eax
   140026365:	mov    rcx,r13
   140026368:	mov    rdi,r14
   14002636b:	repnz scas al,BYTE PTR es:[rdi]
   14002636d:	not    rcx
   140026370:	call   QWORD PTR [rip+0x23442]        # 0x1400497b8
   140026376:	test   rax,rax
   140026379:	mov    rdx,rax
   14002637c:	mov    QWORD PTR [rbx+0x88],rax
   140026383:	je     0x140026494
   140026389:	mov    rcx,r14
   14002638c:	data16 data16 xchg ax,ax
   140026390:	movzx  eax,BYTE PTR [rcx]
   140026393:	add    rdx,0x1
   140026397:	add    rcx,0x1
   14002639b:	test   al,al
   14002639d:	mov    BYTE PTR [rdx-0x1],al
   1400263a0:	jne    0x140026390
   1400263a2:	mov    BYTE PTR [rbx+0x94],r12b
   1400263a9:	data16 xchg ax,ax
   1400263ac:	data16 data16 xchg ax,ax
   1400263b0:	cmp    BYTE PTR [rsi],0x72
   1400263b3:	jne    0x1400263bc
   1400263b5:	mov    BYTE PTR [rbx+0x94],0x72
   1400263bc:	movzx  eax,BYTE PTR [rsi]
   1400263bf:	cmp    al,0x77
   1400263c1:	je     0x1400263c7
   1400263c3:	cmp    al,0x61
   1400263c5:	jne    0x1400263ce
   1400263c7:	mov    BYTE PTR [rbx+0x94],0x77
   1400263ce:	movzx  ecx,BYTE PTR [rsi]
   1400263d1:	cmp    cl,0x30
   1400263d4:	jl     0x1400263e6
   1400263d6:	cmp    cl,0x39
   1400263d9:	jg     0x1400263e6
   1400263db:	movsx  eax,cl
   1400263de:	sub    eax,0x30
   1400263e1:	mov    r13d,eax
   1400263e4:	jmp    0x140026414
   1400263e6:	cmp    cl,0x66
   1400263e9:	jne    0x1400263f3
   1400263eb:	mov    r12d,0x1
   1400263f1:	jmp    0x140026414
   1400263f3:	cmp    cl,0x68
   1400263f6:	jne    0x140026400
   1400263f8:	mov    r12d,0x2
   1400263fe:	jmp    0x140026414
   140026400:	cmp    cl,0x52
   140026403:	jne    0x14002640d
   140026405:	mov    r12d,0x3
   14002640b:	jmp    0x140026414
   14002640d:	mov    BYTE PTR [rbp+0x0],cl
   140026410:	add    rbp,0x1
   140026414:	add    rsi,0x1
   140026418:	test   cl,cl
   14002641a:	je     0x140026429
   14002641c:	lea    rax,[rsp+0xb0]
   140026424:	cmp    rbp,rax
   140026427:	jne    0x1400263b0
   140026429:	movzx  eax,BYTE PTR [rbx+0x94]
   140026430:	test   al,al
   140026432:	je     0x140026494
   140026434:	cmp    al,0x77
   140026436:	jne    0x1400264e6
   14002643c:	lea    r8,[rip+0x24075]        # 0x14004a4b8
   140026443:	mov    DWORD PTR [rsp+0x38],0x58
   14002644b:	mov    r9d,0xfffffff1
   140026451:	mov    QWORD PTR [rsp+0x30],r8
   140026456:	lea    r8d,[r9+0x17]
   14002645a:	mov    edx,r13d
   14002645d:	mov    rcx,rbx
   140026460:	mov    DWORD PTR [rsp+0x28],r12d
   140026465:	mov    DWORD PTR [rsp+0x20],0x8
   14002646d:	call   0x140028090
   140026472:	mov    ecx,0x4000
   140026477:	mov    edi,eax
   140026479:	call   QWORD PTR [rip+0x23339]        # 0x1400497b8
   14002647f:	test   edi,edi
   140026481:	mov    QWORD PTR [rbx+0x70],rax
   140026485:	mov    QWORD PTR [rbx+0x10],rax
   140026489:	jne    0x140026494
   14002648b:	test   rax,rax
   14002648e:	jne    0x140026524
   140026494:	mov    rcx,rbx
   140026497:	call   0x140025f00
   14002649c:	xor    eax,eax
   14002649e:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400264a6:	mov    r15,QWORD PTR [rsp+0xb8]
   1400264ae:	mov    r14,QWORD PTR [rsp+0xc0]
   1400264b6:	mov    r13,QWORD PTR [rsp+0xc8]
   1400264be:	mov    r12,QWORD PTR [rsp+0xd0]
   1400264c6:	mov    rdi,QWORD PTR [rsp+0xf8]
   1400264ce:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400264d6:	mov    rbp,QWORD PTR [rsp+0xe8]
   1400264de:	add    rsp,0xd8
   1400264e5:	ret    
   1400264e6:	mov    ecx,0x4000
   1400264eb:	call   QWORD PTR [rip+0x232c7]        # 0x1400497b8
   1400264f1:	mov    r9d,0x58
   1400264f7:	lea    r8,[rip+0x23fba]        # 0x14004a4b8
   1400264fe:	lea    edx,[r9-0x67]
   140026502:	mov    rcx,rbx
   140026505:	mov    QWORD PTR [rbx+0x68],rax
   140026509:	mov    QWORD PTR [rbx],rax
   14002650c:	call   0x1400283a0
   140026511:	test   eax,eax
   140026513:	jne    0x140026494
   140026519:	cmp    QWORD PTR [rbx+0x68],0x0
   14002651e:	je     0x140026494
   140026524:	mov    DWORD PTR [rbx+0x18],0x4000
   14002652b:	call   QWORD PTR [rip+0x23277]        # 0x1400497a8
   140026531:	xor    edi,edi
   140026533:	test   r15d,r15d
   140026536:	mov    DWORD PTR [rax],edi
   140026538:	jns    0x14002654a
   14002653a:	lea    rdx,[rsp+0x60]
   14002653f:	mov    rcx,r14
   140026542:	call   QWORD PTR [rip+0x23298]        # 0x1400497e0
   140026548:	jmp    0x140026558
   14002654a:	lea    rdx,[rsp+0x60]
   14002654f:	mov    ecx,r15d
   140026552:	call   QWORD PTR [rip+0x23280]        # 0x1400497d8
   140026558:	test   rax,rax
   14002655b:	mov    QWORD PTR [rbx+0x60],rax
   14002655f:	je     0x140026494
   140026565:	cmp    BYTE PTR [rbx+0x94],0x77
   14002656c:	jne    0x1400265c8
   14002656e:	mov    DWORD PTR [rsp+0x58],0xb
   140026576:	mov    QWORD PTR [rsp+0x50],rdi
   14002657b:	mov    QWORD PTR [rsp+0x48],rdi
   140026580:	mov    QWORD PTR [rsp+0x40],rdi
   140026585:	mov    QWORD PTR [rsp+0x38],rdi
   14002658a:	mov    r9d,0x8b
   140026590:	mov    QWORD PTR [rsp+0x30],rdi
   140026595:	lea    rdx,[rip+0x23f04]        # 0x14004a4a0
   14002659c:	lea    r8d,[r9-0x6c]
   1400265a0:	mov    rcx,rax
   1400265a3:	mov    QWORD PTR [rsp+0x28],rdi
   1400265a8:	mov    DWORD PTR [rsp+0x20],0x8
   1400265b0:	call   QWORD PTR [rip+0x2321a]        # 0x1400497d0
   1400265b6:	mov    DWORD PTR [rbx+0x98],0xa
   1400265c0:	mov    rax,rbx
   1400265c3:	jmp    0x14002649e
   1400265c8:	mov    rcx,rbx
   1400265cb:	call   0x140025d20
   1400265d0:	mov    rcx,QWORD PTR [rbx+0x60]
   1400265d4:	call   QWORD PTR [rip+0x231ee]        # 0x1400497c8
   1400265da:	sub    eax,DWORD PTR [rbx+0x8]
   1400265dd:	mov    DWORD PTR [rbx+0x98],eax
   1400265e3:	mov    rax,rbx
   1400265e6:	jmp    0x14002649e
   1400265eb:	xor    eax,eax
   1400265ed:	jmp    0x1400264a6
   1400265f2:	int3   
   1400265f3:	int3   
   1400265f4:	int3   
   1400265f5:	int3   
   1400265f6:	int3   
   1400265f7:	int3   
   1400265f8:	int3   
   1400265f9:	int3   
   1400265fa:	int3   
   1400265fb:	int3   
   1400265fc:	int3   
   1400265fd:	int3   
   1400265fe:	int3   
   1400265ff:	int3   
   140026600:	sub    rsp,0x58
   140026604:	test   ecx,ecx
   140026606:	mov    QWORD PTR [rsp+0x70],rbx
   14002660b:	mov    QWORD PTR [rsp+0x78],rdi
   140026610:	mov    rdi,rdx
   140026613:	mov    ebx,ecx
   140026615:	jns    0x140026628
   140026617:	xor    eax,eax
   140026619:	mov    rdi,QWORD PTR [rsp+0x78]
   14002661e:	mov    rbx,QWORD PTR [rsp+0x70]
   140026623:	add    rsp,0x58
   140026627:	ret    
   140026628:	mov    r8d,ecx
   14002662b:	lea    rdx,[rip+0x23e8e]        # 0x14004a4c0
   140026632:	lea    rcx,[rsp+0x20]
   140026637:	call   QWORD PTR [rip+0x231ab]        # 0x1400497e8
   14002663d:	lea    rcx,[rsp+0x20]
   140026642:	mov    r8d,ebx
   140026645:	mov    rdx,rdi
   140026648:	call   0x1400262a0
   14002664d:	mov    rdi,QWORD PTR [rsp+0x78]
   140026652:	mov    rbx,QWORD PTR [rsp+0x70]
   140026657:	add    rsp,0x58
   14002665b:	ret    
   14002665c:	int3   
   14002665d:	int3   
   14002665e:	int3   
   14002665f:	int3   
   140026660:	mov    r8d,DWORD PTR [rcx+0x28]
   140026664:	mov    rax,QWORD PTR [rcx+0x10]
   140026668:	mov    r9d,edx
   14002666b:	shr    r9d,0x8
   14002666f:	mov    BYTE PTR [r8+rax*1],r9b
   140026673:	add    DWORD PTR [rcx+0x28],0x1
   140026677:	mov    r8d,DWORD PTR [rcx+0x28]
   14002667b:	mov    rax,QWORD PTR [rcx+0x10]
   14002667f:	mov    BYTE PTR [r8+rax*1],dl
   140026683:	add    DWORD PTR [rcx+0x28],0x1
   140026687:	ret    
   140026688:	int3   
   140026689:	int3   
   14002668a:	int3   
   14002668b:	int3   
   14002668c:	int3   
   14002668d:	int3   
   14002668e:	int3   
   14002668f:	int3   
   140026690:	sub    rsp,0x28
   140026694:	mov    eax,DWORD PTR [rcx+0x18]
   140026697:	mov    rdx,QWORD PTR [rcx+0x28]
   14002669b:	mov    QWORD PTR [rsp+0x40],rsi
   1400266a0:	mov    QWORD PTR [rsp+0x48],rdi
   1400266a5:	mov    edi,DWORD PTR [rdx+0x28]
   1400266a8:	mov    rsi,rcx
   1400266ab:	cmp    edi,eax
   1400266ad:	cmova  edi,eax
   1400266b0:	test   edi,edi
   1400266b2:	je     0x1400266fb
   1400266b4:	mov    rdx,QWORD PTR [rdx+0x20]
   1400266b8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400266bc:	mov    r8d,edi
   1400266bf:	mov    QWORD PTR [rsp+0x38],rbx
   1400266c4:	mov    ebx,edi
   1400266c6:	call   0x14002b120
   1400266cb:	add    QWORD PTR [rsi+0x10],rbx
   1400266cf:	mov    rax,QWORD PTR [rsi+0x28]
   1400266d3:	add    QWORD PTR [rax+0x20],rbx
   1400266d7:	add    DWORD PTR [rsi+0x1c],edi
   1400266da:	sub    DWORD PTR [rsi+0x18],edi
   1400266dd:	mov    rax,QWORD PTR [rsi+0x28]
   1400266e1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400266e6:	sub    DWORD PTR [rax+0x28],edi
   1400266e9:	mov    rcx,QWORD PTR [rsi+0x28]
   1400266ed:	cmp    DWORD PTR [rcx+0x28],0x0
   1400266f1:	jne    0x1400266fb
   1400266f3:	mov    rax,QWORD PTR [rcx+0x10]
   1400266f7:	mov    QWORD PTR [rcx+0x20],rax
   1400266fb:	mov    rdi,QWORD PTR [rsp+0x48]
   140026700:	mov    rsi,QWORD PTR [rsp+0x40]
   140026705:	add    rsp,0x28
   140026709:	ret    
   14002670a:	int3   
   14002670b:	int3   
   14002670c:	int3   
   14002670d:	int3   
   14002670e:	int3   
   14002670f:	int3   
   140026710:	sub    rsp,0x38
   140026714:	test   rcx,rcx
   140026717:	mov    QWORD PTR [rsp+0x40],rbx
   14002671c:	mov    QWORD PTR [rsp+0x48],rbp
   140026721:	mov    QWORD PTR [rsp+0x58],rdi
   140026726:	mov    ebp,edx
   140026728:	mov    rdi,rcx
   14002672b:	je     0x140026fc9
   140026731:	mov    rbx,QWORD PTR [rcx+0x28]
   140026735:	test   rbx,rbx
   140026738:	je     0x140026fc9
   14002673e:	cmp    edx,0x4
   140026741:	ja     0x140026fc9
   140026747:	cmp    QWORD PTR [rcx+0x10],0x0
   14002674c:	je     0x140026fbe
   140026752:	cmp    QWORD PTR [rcx],0x0
   140026756:	jne    0x140026762
   140026758:	cmp    DWORD PTR [rcx+0x8],0x0
   14002675c:	jne    0x140026fbe
   140026762:	mov    eax,DWORD PTR [rbx+0x8]
   140026765:	cmp    eax,0x29a
   14002676a:	jne    0x140026775
   14002676c:	cmp    edx,0x4
   14002676f:	jne    0x140026fbe
   140026775:	cmp    DWORD PTR [rcx+0x18],0x0
   140026779:	jne    0x14002679f
   14002677b:	mov    rax,QWORD PTR [rip+0x267b6]        # 0x14004cf38
   140026782:	mov    QWORD PTR [rcx+0x20],rax
   140026786:	mov    eax,0xfffffffb
   14002678b:	mov    rdi,QWORD PTR [rsp+0x58]
   140026790:	mov    rbp,QWORD PTR [rsp+0x48]
   140026795:	mov    rbx,QWORD PTR [rsp+0x40]
   14002679a:	add    rsp,0x38
   14002679e:	ret    
   14002679f:	mov    QWORD PTR [rsp+0x30],r12
   1400267a4:	mov    QWORD PTR [rsp+0x28],r13
   1400267a9:	mov    r13d,DWORD PTR [rbx+0x40]
   1400267ad:	xor    r12d,r12d
   1400267b0:	cmp    eax,0x2a
   1400267b3:	mov    DWORD PTR [rbx+0x40],edx
   1400267b6:	mov    QWORD PTR [rbx],rcx
   1400267b9:	jne    0x140026a9d
   1400267bf:	cmp    DWORD PTR [rbx+0x2c],0x2
   1400267c3:	jne    0x1400269fd
   1400267c9:	xor    r8d,r8d
   1400267cc:	xor    edx,edx
   1400267ce:	xor    ecx,ecx
   1400267d0:	call   0x140028850
   1400267d5:	mov    DWORD PTR [rdi+0x4c],eax
   1400267d8:	mov    ecx,DWORD PTR [rbx+0x28]
   1400267db:	mov    rax,QWORD PTR [rbx+0x10]
   1400267df:	mov    BYTE PTR [rcx+rax*1],0x1f
   1400267e3:	add    DWORD PTR [rbx+0x28],0x1
   1400267e7:	mov    ecx,DWORD PTR [rbx+0x28]
   1400267ea:	mov    rax,QWORD PTR [rbx+0x10]
   1400267ee:	mov    BYTE PTR [rcx+rax*1],0x8b
   1400267f2:	add    DWORD PTR [rbx+0x28],0x1
   1400267f6:	mov    ecx,DWORD PTR [rbx+0x28]
   1400267f9:	mov    rax,QWORD PTR [rbx+0x10]
   1400267fd:	mov    BYTE PTR [rcx+rax*1],0x8
   140026801:	add    DWORD PTR [rbx+0x28],0x1
   140026805:	mov    r8,QWORD PTR [rbx+0x30]
   140026809:	test   r8,r8
   14002680c:	mov    r9d,DWORD PTR [rbx+0x28]
   140026810:	jne    0x1400268af
   140026816:	mov    rax,QWORD PTR [rbx+0x10]
   14002681a:	mov    BYTE PTR [r9+rax*1],r12b
   14002681e:	add    DWORD PTR [rbx+0x28],0x1
   140026822:	mov    ecx,DWORD PTR [rbx+0x28]
   140026825:	mov    rax,QWORD PTR [rbx+0x10]
   140026829:	mov    BYTE PTR [rcx+rax*1],r12b
   14002682d:	add    DWORD PTR [rbx+0x28],0x1
   140026831:	mov    ecx,DWORD PTR [rbx+0x28]
   140026834:	mov    rax,QWORD PTR [rbx+0x10]
   140026838:	mov    BYTE PTR [rcx+rax*1],r12b
   14002683c:	add    DWORD PTR [rbx+0x28],0x1
   140026840:	mov    ecx,DWORD PTR [rbx+0x28]
   140026843:	mov    rax,QWORD PTR [rbx+0x10]
   140026847:	mov    BYTE PTR [rcx+rax*1],r12b
   14002684b:	add    DWORD PTR [rbx+0x28],0x1
   14002684f:	mov    ecx,DWORD PTR [rbx+0x28]
   140026852:	mov    rax,QWORD PTR [rbx+0x10]
   140026856:	mov    BYTE PTR [rcx+rax*1],r12b
   14002685a:	mov    eax,DWORD PTR [rbx+0xac]
   140026860:	add    DWORD PTR [rbx+0x28],0x1
   140026864:	cmp    eax,0x9
   140026867:	jne    0x14002686e
   140026869:	lea    edx,[rax-0x7]
   14002686c:	jmp    0x140026886
   14002686e:	cmp    DWORD PTR [rbx+0xb0],0x2
   140026875:	jge    0x140026881
   140026877:	cmp    eax,0x2
   14002687a:	jl     0x140026881
   14002687c:	mov    edx,r12d
   14002687f:	jmp    0x140026886
   140026881:	mov    edx,0x4
   140026886:	mov    ecx,DWORD PTR [rbx+0x28]
   140026889:	mov    rax,QWORD PTR [rbx+0x10]
   14002688d:	mov    BYTE PTR [rcx+rax*1],dl
   140026890:	add    DWORD PTR [rbx+0x28],0x1
   140026894:	mov    ecx,DWORD PTR [rbx+0x28]
   140026897:	mov    rax,QWORD PTR [rbx+0x10]
   14002689b:	mov    BYTE PTR [rcx+rax*1],0xb
   14002689f:	add    DWORD PTR [rbx+0x28],0x1
   1400268a3:	mov    DWORD PTR [rbx+0x8],0x71
   1400268aa:	jmp    0x140026a9d
   1400268af:	mov    rax,QWORD PTR [r8+0x30]
   1400268b3:	neg    rax
   1400268b6:	mov    eax,DWORD PTR [r8+0x3c]
   1400268ba:	sbb    dl,dl
   1400268bc:	and    dl,0x10
   1400268bf:	neg    eax
   1400268c1:	mov    rax,QWORD PTR [r8+0x20]
   1400268c5:	sbb    cl,cl
   1400268c7:	and    cl,0x2
   1400268ca:	add    dl,cl
   1400268cc:	neg    rax
   1400268cf:	mov    rax,QWORD PTR [r8+0x10]
   1400268d3:	sbb    cl,cl
   1400268d5:	and    cl,0x8
   1400268d8:	add    dl,cl
   1400268da:	neg    rax
   1400268dd:	sbb    cl,cl
   1400268df:	and    cl,0x4
   1400268e2:	add    dl,cl
   1400268e4:	cmp    DWORD PTR [r8],r12d
   1400268e7:	setne  al
   1400268ea:	add    dl,al
   1400268ec:	mov    rax,QWORD PTR [rbx+0x10]
   1400268f0:	mov    BYTE PTR [r9+rax*1],dl
   1400268f4:	add    DWORD PTR [rbx+0x28],0x1
   1400268f8:	mov    edx,DWORD PTR [rbx+0x28]
   1400268fb:	mov    rax,QWORD PTR [rbx+0x30]
   1400268ff:	mov    rcx,QWORD PTR [rbx+0x10]
   140026903:	movzx  eax,BYTE PTR [rax+0x4]
   140026907:	mov    BYTE PTR [rdx+rcx*1],al
   14002690a:	add    DWORD PTR [rbx+0x28],0x1
   14002690e:	mov    edx,DWORD PTR [rbx+0x28]
   140026911:	mov    rax,QWORD PTR [rbx+0x30]
   140026915:	mov    rcx,QWORD PTR [rbx+0x10]
   140026919:	movzx  eax,BYTE PTR [rax+0x5]
   14002691d:	mov    BYTE PTR [rdx+rcx*1],al
   140026920:	add    DWORD PTR [rbx+0x28],0x1
   140026924:	mov    edx,DWORD PTR [rbx+0x28]
   140026927:	mov    rax,QWORD PTR [rbx+0x30]
   14002692b:	mov    rcx,QWORD PTR [rbx+0x10]
   14002692f:	movzx  eax,BYTE PTR [rax+0x6]
   140026933:	mov    BYTE PTR [rdx+rcx*1],al
   140026936:	add    DWORD PTR [rbx+0x28],0x1
   14002693a:	mov    rax,QWORD PTR [rbx+0x30]
   14002693e:	movzx  eax,BYTE PTR [rax+0x7]
   140026942:	mov    edx,DWORD PTR [rbx+0x28]
   140026945:	mov    rcx,QWORD PTR [rbx+0x10]
   140026949:	mov    BYTE PTR [rdx+rcx*1],al
   14002694c:	mov    eax,DWORD PTR [rbx+0xac]
   140026952:	add    DWORD PTR [rbx+0x28],0x1
   140026956:	cmp    eax,0x9
   140026959:	jne    0x140026960
   14002695b:	lea    edx,[rax-0x7]
   14002695e:	jmp    0x140026978
   140026960:	cmp    DWORD PTR [rbx+0xb0],0x2
   140026967:	jge    0x140026973
   140026969:	cmp    eax,0x2
   14002696c:	jl     0x140026973
   14002696e:	mov    edx,r12d
   140026971:	jmp    0x140026978
   140026973:	mov    edx,0x4
   140026978:	mov    ecx,DWORD PTR [rbx+0x28]
   14002697b:	mov    rax,QWORD PTR [rbx+0x10]
   14002697f:	mov    BYTE PTR [rcx+rax*1],dl
   140026982:	add    DWORD PTR [rbx+0x28],0x1
   140026986:	mov    rax,QWORD PTR [rbx+0x30]
   14002698a:	movzx  eax,BYTE PTR [rax+0xc]
   14002698e:	mov    edx,DWORD PTR [rbx+0x28]
   140026991:	mov    rcx,QWORD PTR [rbx+0x10]
   140026995:	mov    BYTE PTR [rdx+rcx*1],al
   140026998:	add    DWORD PTR [rbx+0x28],0x1
   14002699c:	mov    rax,QWORD PTR [rbx+0x30]
   1400269a0:	cmp    QWORD PTR [rax+0x10],r12
   1400269a4:	mov    r8d,DWORD PTR [rbx+0x28]
   1400269a8:	je     0x1400269d4
   1400269aa:	movzx  eax,BYTE PTR [rax+0x18]
   1400269ae:	mov    rcx,QWORD PTR [rbx+0x10]
   1400269b2:	mov    BYTE PTR [r8+rcx*1],al
   1400269b6:	add    DWORD PTR [rbx+0x28],0x1
   1400269ba:	mov    rax,QWORD PTR [rbx+0x30]
   1400269be:	mov    edx,DWORD PTR [rbx+0x28]
   1400269c1:	movzx  eax,BYTE PTR [rax+0x19]
   1400269c5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400269c9:	mov    BYTE PTR [rdx+rcx*1],al
   1400269cc:	add    DWORD PTR [rbx+0x28],0x1
   1400269d0:	mov    r8d,DWORD PTR [rbx+0x28]
   1400269d4:	mov    rax,QWORD PTR [rbx+0x30]
   1400269d8:	cmp    DWORD PTR [rax+0x3c],r12d
   1400269dc:	je     0x1400269ed
   1400269de:	mov    rdx,QWORD PTR [rbx+0x10]
   1400269e2:	mov    ecx,DWORD PTR [rdi+0x4c]
   1400269e5:	call   0x140028850
   1400269ea:	mov    DWORD PTR [rdi+0x4c],eax
   1400269ed:	mov    DWORD PTR [rbx+0x38],r12d
   1400269f1:	mov    DWORD PTR [rbx+0x8],0x45
   1400269f8:	jmp    0x140026a9d
   1400269fd:	mov    ecx,DWORD PTR [rbx+0x48]
   140026a00:	sub    ecx,0x8
   140026a03:	shl    ecx,0xc
   140026a06:	add    ecx,0x800
   140026a0c:	cmp    DWORD PTR [rbx+0xb0],0x2
   140026a13:	jge    0x140026a3a
   140026a15:	mov    edx,DWORD PTR [rbx+0xac]
   140026a1b:	cmp    edx,0x2
   140026a1e:	jl     0x140026a3a
   140026a20:	cmp    edx,0x6
   140026a23:	jge    0x140026a2c
   140026a25:	mov    eax,0x1
   140026a2a:	jmp    0x140026a3d
   140026a2c:	cmp    edx,0x6
   140026a2f:	mov    eax,r12d
   140026a32:	setne  al
   140026a35:	add    eax,0x2
   140026a38:	jmp    0x140026a3d
   140026a3a:	mov    eax,r12d
   140026a3d:	shl    eax,0x6
   140026a40:	or     ecx,eax
   140026a42:	cmp    DWORD PTR [rbx+0x94],r12d
   140026a49:	je     0x140026a4e
   140026a4b:	or     ecx,0x20
   140026a4e:	mov    eax,0x8421085
   140026a53:	mov    DWORD PTR [rbx+0x8],0x71
   140026a5a:	mul    ecx
   140026a5c:	sub    ecx,edx
   140026a5e:	shr    ecx,1
   140026a60:	add    edx,ecx
   140026a62:	mov    rcx,rbx
   140026a65:	shr    edx,0x4
   140026a68:	add    edx,0x1
   140026a6b:	imul   edx,edx,0x1f
   140026a6e:	call   0x140026660
   140026a73:	cmp    DWORD PTR [rbx+0x94],r12d
   140026a7a:	je     0x140026a8e
   140026a7c:	movzx  edx,WORD PTR [rdi+0x4e]
   140026a80:	call   0x140026660
   140026a85:	movzx  edx,WORD PTR [rdi+0x4c]
   140026a89:	call   0x140026660
   140026a8e:	xor    r8d,r8d
   140026a91:	xor    edx,edx
   140026a93:	xor    ecx,ecx
   140026a95:	call   0x140028880
   140026a9a:	mov    DWORD PTR [rdi+0x4c],eax
   140026a9d:	cmp    DWORD PTR [rbx+0x8],0x45
   140026aa1:	jne    0x140026b7d
   140026aa7:	mov    rax,QWORD PTR [rbx+0x30]
   140026aab:	cmp    QWORD PTR [rax+0x10],r12
   140026aaf:	je     0x140026b76
   140026ab5:	movzx  eax,WORD PTR [rax+0x18]
   140026ab9:	mov    r10d,DWORD PTR [rbx+0x28]
   140026abd:	cmp    DWORD PTR [rbx+0x38],eax
   140026ac0:	jae    0x140026b35
   140026ac2:	mov    ecx,DWORD PTR [rbx+0x28]
   140026ac5:	cmp    ecx,DWORD PTR [rbx+0x18]
   140026ac8:	jne    0x140026b04
   140026aca:	mov    rax,QWORD PTR [rbx+0x30]
   140026ace:	cmp    DWORD PTR [rax+0x3c],r12d
   140026ad2:	je     0x140026af1
   140026ad4:	cmp    ecx,r10d
   140026ad7:	jbe    0x140026af1
   140026ad9:	sub    ecx,r10d
   140026adc:	mov    edx,r10d
   140026adf:	add    rdx,QWORD PTR [rbx+0x10]
   140026ae3:	mov    r8d,ecx
   140026ae6:	mov    ecx,DWORD PTR [rdi+0x4c]
   140026ae9:	call   0x140028850
   140026aee:	mov    DWORD PTR [rdi+0x4c],eax
   140026af1:	mov    rcx,rdi
   140026af4:	call   0x140026690
   140026af9:	mov    ecx,DWORD PTR [rbx+0x28]
   140026afc:	cmp    ecx,DWORD PTR [rbx+0x18]
   140026aff:	mov    r10d,ecx
   140026b02:	je     0x140026b35
   140026b04:	mov    rax,QWORD PTR [rbx+0x30]
   140026b08:	mov    r9d,DWORD PTR [rbx+0x38]
   140026b0c:	mov    r8d,ecx
   140026b0f:	mov    rdx,QWORD PTR [rax+0x10]
   140026b13:	mov    rcx,QWORD PTR [rbx+0x10]
   140026b17:	movzx  eax,BYTE PTR [r9+rdx*1]
   140026b1c:	mov    BYTE PTR [r8+rcx*1],al
   140026b20:	add    DWORD PTR [rbx+0x28],0x1
   140026b24:	add    DWORD PTR [rbx+0x38],0x1
   140026b28:	mov    rax,QWORD PTR [rbx+0x30]
   140026b2c:	movzx  ecx,WORD PTR [rax+0x18]
   140026b30:	cmp    DWORD PTR [rbx+0x38],ecx
   140026b33:	jb     0x140026ac2
   140026b35:	mov    rax,QWORD PTR [rbx+0x30]
   140026b39:	cmp    DWORD PTR [rax+0x3c],r12d
   140026b3d:	je     0x140026b5d
   140026b3f:	mov    r8d,DWORD PTR [rbx+0x28]
   140026b43:	cmp    r8d,r10d
   140026b46:	jbe    0x140026b5d
   140026b48:	mov    ecx,DWORD PTR [rdi+0x4c]
   140026b4b:	mov    edx,r10d
   140026b4e:	sub    r8d,r10d
   140026b51:	add    rdx,QWORD PTR [rbx+0x10]
   140026b55:	call   0x140028850
   140026b5a:	mov    DWORD PTR [rdi+0x4c],eax
   140026b5d:	mov    rax,QWORD PTR [rbx+0x30]
   140026b61:	mov    ecx,DWORD PTR [rax+0x18]
   140026b64:	cmp    DWORD PTR [rbx+0x38],ecx
   140026b67:	jne    0x140026b7d
   140026b69:	mov    DWORD PTR [rbx+0x38],r12d
   140026b6d:	mov    DWORD PTR [rbx+0x8],0x49
   140026b74:	jmp    0x140026b7d
   140026b76:	mov    DWORD PTR [rbx+0x8],0x49
   140026b7d:	cmp    DWORD PTR [rbx+0x8],0x49
   140026b81:	mov    QWORD PTR [rsp+0x50],rsi
   140026b86:	jne    0x140026c4e
   140026b8c:	mov    rax,QWORD PTR [rbx+0x30]
   140026b90:	cmp    QWORD PTR [rax+0x20],r12
   140026b94:	je     0x140026c47
   140026b9a:	mov    edx,DWORD PTR [rbx+0x28]
   140026b9d:	data16 xchg ax,ax
   140026ba0:	mov    r8d,DWORD PTR [rbx+0x28]
   140026ba4:	cmp    r8d,DWORD PTR [rbx+0x18]
   140026ba8:	jne    0x140026be2
   140026baa:	mov    rax,QWORD PTR [rbx+0x30]
   140026bae:	cmp    DWORD PTR [rax+0x3c],r12d
   140026bb2:	je     0x140026bcd
   140026bb4:	cmp    r8d,edx
   140026bb7:	jbe    0x140026bcd
   140026bb9:	mov    ecx,DWORD PTR [rdi+0x4c]
   140026bbc:	sub    r8d,edx
   140026bbf:	mov    edx,edx
   140026bc1:	add    rdx,QWORD PTR [rbx+0x10]
   140026bc5:	call   0x140028850
   140026bca:	mov    DWORD PTR [rdi+0x4c],eax
   140026bcd:	mov    rcx,rdi
   140026bd0:	call   0x140026690
   140026bd5:	mov    r8d,DWORD PTR [rbx+0x28]
   140026bd9:	cmp    r8d,DWORD PTR [rbx+0x18]
   140026bdd:	mov    rdx,r8
   140026be0:	je     0x140026c0c
   140026be2:	mov    ecx,DWORD PTR [rbx+0x38]
   140026be5:	mov    rax,QWORD PTR [rbx+0x30]
   140026be9:	mov    rax,QWORD PTR [rax+0x20]
   140026bed:	movzx  esi,BYTE PTR [rax+rcx*1]
   140026bf1:	lea    eax,[rcx+0x1]
   140026bf4:	mov    ecx,r8d
   140026bf7:	mov    DWORD PTR [rbx+0x38],eax
   140026bfa:	mov    rax,QWORD PTR [rbx+0x10]
   140026bfe:	mov    BYTE PTR [rcx+rax*1],sil
   140026c02:	add    DWORD PTR [rbx+0x28],0x1
   140026c06:	test   esi,esi
   140026c08:	jne    0x140026ba0
   140026c0a:	jmp    0x140026c11
   140026c0c:	mov    esi,0x1
   140026c11:	mov    rax,QWORD PTR [rbx+0x30]
   140026c15:	cmp    DWORD PTR [rax+0x3c],r12d
   140026c19:	je     0x140026c36
   140026c1b:	mov    r8d,DWORD PTR [rbx+0x28]
   140026c1f:	cmp    r8d,edx
   140026c22:	jbe    0x140026c36
   140026c24:	mov    ecx,DWORD PTR [rdi+0x4c]
   140026c27:	sub    r8d,edx
   140026c2a:	add    rdx,QWORD PTR [rbx+0x10]
   140026c2e:	call   0x140028850
   140026c33:	mov    DWORD PTR [rdi+0x4c],eax
   140026c36:	test   esi,esi
   140026c38:	jne    0x140026c4e
   140026c3a:	mov    DWORD PTR [rbx+0x38],r12d
   140026c3e:	mov    DWORD PTR [rbx+0x8],0x5b
   140026c45:	jmp    0x140026c4e
   140026c47:	mov    DWORD PTR [rbx+0x8],0x5b
   140026c4e:	cmp    DWORD PTR [rbx+0x8],0x5b
   140026c52:	jne    0x140026d1a
   140026c58:	mov    rax,QWORD PTR [rbx+0x30]
   140026c5c:	cmp    QWORD PTR [rax+0x30],r12
   140026c60:	je     0x140026d13
   140026c66:	mov    edx,DWORD PTR [rbx+0x28]
   140026c69:	data16 xchg ax,ax
   140026c6c:	data16 data16 xchg ax,ax
   140026c70:	mov    r8d,DWORD PTR [rbx+0x28]
   140026c74:	cmp    r8d,DWORD PTR [rbx+0x18]
   140026c78:	jne    0x140026cb2
   140026c7a:	mov    rax,QWORD PTR [rbx+0x30]
   140026c7e:	cmp    DWORD PTR [rax+0x3c],r12d
   140026c82:	je     0x140026c9d
   140026c84:	cmp    r8d,edx
   140026c87:	jbe    0x140026c9d
   140026c89:	mov    ecx,DWORD PTR [rdi+0x4c]
   140026c8c:	sub    r8d,edx
   140026c8f:	mov    edx,edx
   140026c91:	add    rdx,QWORD PTR [rbx+0x10]
   140026c95:	call   0x140028850
   140026c9a:	mov    DWORD PTR [rdi+0x4c],eax
   140026c9d:	mov    rcx,rdi
   140026ca0:	call   0x140026690
   140026ca5:	mov    r8d,DWORD PTR [rbx+0x28]
   140026ca9:	cmp    r8d,DWORD PTR [rbx+0x18]
   140026cad:	mov    rdx,r8
   140026cb0:	je     0x140026cdc
   140026cb2:	mov    ecx,DWORD PTR [rbx+0x38]
   140026cb5:	mov    rax,QWORD PTR [rbx+0x30]
   140026cb9:	mov    rax,QWORD PTR [rax+0x30]
   140026cbd:	movzx  esi,BYTE PTR [rax+rcx*1]
   140026cc1:	lea    eax,[rcx+0x1]
   140026cc4:	mov    ecx,r8d
   140026cc7:	mov    DWORD PTR [rbx+0x38],eax
   140026cca:	mov    rax,QWORD PTR [rbx+0x10]
   140026cce:	mov    BYTE PTR [rcx+rax*1],sil
   140026cd2:	add    DWORD PTR [rbx+0x28],0x1
   140026cd6:	test   esi,esi
   140026cd8:	jne    0x140026c70
   140026cda:	jmp    0x140026ce1
   140026cdc:	mov    esi,0x1
   140026ce1:	mov    rax,QWORD PTR [rbx+0x30]
   140026ce5:	cmp    DWORD PTR [rax+0x3c],r12d
   140026ce9:	je     0x140026d06
   140026ceb:	mov    r8d,DWORD PTR [rbx+0x28]
   140026cef:	cmp    r8d,edx
   140026cf2:	jbe    0x140026d06
   140026cf4:	mov    ecx,DWORD PTR [rdi+0x4c]
   140026cf7:	sub    r8d,edx
   140026cfa:	add    rdx,QWORD PTR [rbx+0x10]
   140026cfe:	call   0x140028850
   140026d03:	mov    DWORD PTR [rdi+0x4c],eax
   140026d06:	test   esi,esi
   140026d08:	jne    0x140026d1a
   140026d0a:	mov    DWORD PTR [rbx+0x8],0x67
   140026d11:	jmp    0x140026d1a
   140026d13:	mov    DWORD PTR [rbx+0x8],0x67
   140026d1a:	cmp    DWORD PTR [rbx+0x8],0x67
   140026d1e:	mov    rsi,QWORD PTR [rsp+0x50]
   140026d23:	jne    0x140026d90
   140026d25:	mov    rax,QWORD PTR [rbx+0x30]
   140026d29:	cmp    DWORD PTR [rax+0x3c],r12d
   140026d2d:	je     0x140026d89
   140026d2f:	mov    eax,DWORD PTR [rbx+0x28]
   140026d32:	add    eax,0x2
   140026d35:	cmp    eax,DWORD PTR [rbx+0x18]
   140026d38:	jbe    0x140026d42
   140026d3a:	mov    rcx,rdi
   140026d3d:	call   0x140026690
   140026d42:	mov    ecx,DWORD PTR [rbx+0x28]
   140026d45:	lea    eax,[rcx+0x2]
   140026d48:	cmp    eax,DWORD PTR [rbx+0x18]
   140026d4b:	ja     0x140026d90
   140026d4d:	movzx  eax,BYTE PTR [rdi+0x4c]
   140026d51:	mov    rdx,rcx
   140026d54:	mov    rcx,QWORD PTR [rbx+0x10]
   140026d58:	mov    BYTE PTR [rdx+rcx*1],al
   140026d5b:	add    DWORD PTR [rbx+0x28],0x1
   140026d5f:	mov    edx,DWORD PTR [rbx+0x28]
   140026d62:	mov    rcx,QWORD PTR [rbx+0x10]
   140026d66:	movzx  eax,BYTE PTR [rdi+0x4d]
   140026d6a:	xor    r8d,r8d
   140026d6d:	mov    BYTE PTR [rdx+rcx*1],al
   140026d70:	add    DWORD PTR [rbx+0x28],0x1
   140026d74:	xor    edx,edx
   140026d76:	xor    ecx,ecx
   140026d78:	call   0x140028850
   140026d7d:	mov    DWORD PTR [rdi+0x4c],eax
   140026d80:	mov    DWORD PTR [rbx+0x8],0x71
   140026d87:	jmp    0x140026d90
   140026d89:	mov    DWORD PTR [rbx+0x8],0x71
   140026d90:	cmp    DWORD PTR [rbx+0x28],r12d
   140026d94:	je     0x140026dcb
   140026d96:	mov    rcx,rdi
   140026d99:	call   0x140026690
   140026d9e:	cmp    DWORD PTR [rdi+0x18],r12d
   140026da2:	jne    0x140026ddb
   140026da4:	mov    DWORD PTR [rbx+0x40],0xffffffff
   140026dab:	xor    eax,eax
   140026dad:	mov    r12,QWORD PTR [rsp+0x30]
   140026db2:	mov    r13,QWORD PTR [rsp+0x28]
   140026db7:	mov    rdi,QWORD PTR [rsp+0x58]
   140026dbc:	mov    rbp,QWORD PTR [rsp+0x48]
   140026dc1:	mov    rbx,QWORD PTR [rsp+0x40]
   140026dc6:	add    rsp,0x38
   140026dca:	ret    
   140026dcb:	cmp    DWORD PTR [rdi+0x8],r12d
   140026dcf:	jne    0x140026ddb
   140026dd1:	cmp    ebp,r13d
   140026dd4:	jg     0x140026ddb
   140026dd6:	cmp    ebp,0x4
   140026dd9:	jne    0x140026deb
   140026ddb:	mov    eax,DWORD PTR [rbx+0x8]
   140026dde:	cmp    eax,0x29a
   140026de3:	jne    0x140026dfd
   140026de5:	cmp    DWORD PTR [rdi+0x8],r12d
   140026de9:	je     0x140026dfd
   140026deb:	mov    rax,QWORD PTR [rip+0x26146]        # 0x14004cf38
   140026df2:	mov    QWORD PTR [rdi+0x20],rax
   140026df6:	mov    eax,0xfffffffb
   140026dfb:	jmp    0x140026dad
   140026dfd:	cmp    DWORD PTR [rdi+0x8],r12d
   140026e01:	jne    0x140026e1f
   140026e03:	cmp    DWORD PTR [rbx+0x9c],r12d
   140026e0a:	jne    0x140026e1f
   140026e0c:	test   ebp,ebp
   140026e0e:	je     0x140026eba
   140026e14:	cmp    eax,0x29a
   140026e19:	je     0x140026eba
   140026e1f:	movsxd rax,DWORD PTR [rbx+0xac]
   140026e26:	lea    r8,[rip+0x236eb]        # 0x14004a518
   140026e2d:	mov    edx,ebp
   140026e2f:	add    rax,rax
   140026e32:	mov    rcx,rbx
   140026e35:	call   QWORD PTR [r8+rax*8]
   140026e39:	cmp    eax,0x2
   140026e3c:	je     0x140026e43
   140026e3e:	cmp    eax,0x3
   140026e41:	jne    0x140026e4a
   140026e43:	mov    DWORD PTR [rbx+0x8],0x29a
   140026e4a:	test   eax,eax
   140026e4c:	je     0x140026faa
   140026e52:	cmp    eax,0x2
   140026e55:	je     0x140026faa
   140026e5b:	cmp    eax,0x1
   140026e5e:	jne    0x140026eba
   140026e60:	cmp    ebp,eax
   140026e62:	jne    0x140026e6e
   140026e64:	mov    rcx,rbx
   140026e67:	call   0x14002a4f0
   140026e6c:	jmp    0x140026ea8
   140026e6e:	xor    r9d,r9d
   140026e71:	xor    r8d,r8d
   140026e74:	xor    edx,edx
   140026e76:	mov    rcx,rbx
   140026e79:	call   0x14002a450
   140026e7e:	cmp    ebp,0x3
   140026e81:	jne    0x140026ea8
   140026e83:	mov    ecx,DWORD PTR [rbx+0x74]
   140026e86:	mov    rax,QWORD PTR [rbx+0x68]
   140026e8a:	xor    edx,edx
   140026e8c:	add    ecx,0xffffffff
   140026e8f:	mov    WORD PTR [rax+rcx*2],r12w
   140026e94:	mov    r8d,DWORD PTR [rbx+0x74]
   140026e98:	mov    rcx,QWORD PTR [rbx+0x68]
   140026e9c:	add    r8d,0xffffffff
   140026ea0:	add    r8,r8
   140026ea3:	call   0x14002b144
   140026ea8:	mov    rcx,rdi
   140026eab:	call   0x140026690
   140026eb0:	cmp    DWORD PTR [rdi+0x18],r12d
   140026eb4:	je     0x140026fb0
   140026eba:	cmp    ebp,0x4
   140026ebd:	jne    0x140026fb7
   140026ec3:	mov    ecx,DWORD PTR [rbx+0x2c]
   140026ec6:	test   ecx,ecx
   140026ec8:	jg     0x140026ed2
   140026eca:	lea    eax,[rbp-0x3]
   140026ecd:	jmp    0x140026dad
   140026ed2:	cmp    ecx,0x2
   140026ed5:	jne    0x140026f6d
   140026edb:	mov    edx,DWORD PTR [rbx+0x28]
   140026ede:	movzx  eax,BYTE PTR [rdi+0x4c]
   140026ee2:	mov    rcx,QWORD PTR [rbx+0x10]
   140026ee6:	mov    BYTE PTR [rdx+rcx*1],al
   140026ee9:	add    DWORD PTR [rbx+0x28],0x1
   140026eed:	mov    edx,DWORD PTR [rbx+0x28]
   140026ef0:	movzx  eax,BYTE PTR [rdi+0x4d]
   140026ef4:	mov    rcx,QWORD PTR [rbx+0x10]
   140026ef8:	mov    BYTE PTR [rdx+rcx*1],al
   140026efb:	add    DWORD PTR [rbx+0x28],0x1
   140026eff:	mov    edx,DWORD PTR [rbx+0x28]
   140026f02:	movzx  eax,BYTE PTR [rdi+0x4e]
   140026f06:	mov    rcx,QWORD PTR [rbx+0x10]
   140026f0a:	mov    BYTE PTR [rdx+rcx*1],al
   140026f0d:	add    DWORD PTR [rbx+0x28],0x1
   140026f11:	mov    edx,DWORD PTR [rbx+0x28]
   140026f14:	movzx  eax,BYTE PTR [rdi+0x4f]
   140026f18:	mov    rcx,QWORD PTR [rbx+0x10]
   140026f1c:	mov    BYTE PTR [rdx+rcx*1],al
   140026f1f:	add    DWORD PTR [rbx+0x28],0x1
   140026f23:	mov    edx,DWORD PTR [rbx+0x28]
   140026f26:	movzx  eax,BYTE PTR [rdi+0xc]
   140026f2a:	mov    rcx,QWORD PTR [rbx+0x10]
   140026f2e:	mov    BYTE PTR [rdx+rcx*1],al
   140026f31:	add    DWORD PTR [rbx+0x28],0x1
   140026f35:	mov    edx,DWORD PTR [rbx+0x28]
   140026f38:	movzx  eax,BYTE PTR [rdi+0xd]
   140026f3c:	mov    rcx,QWORD PTR [rbx+0x10]
   140026f40:	mov    BYTE PTR [rdx+rcx*1],al
   140026f43:	add    DWORD PTR [rbx+0x28],0x1
   140026f47:	mov    edx,DWORD PTR [rbx+0x28]
   140026f4a:	movzx  eax,BYTE PTR [rdi+0xe]
   140026f4e:	mov    rcx,QWORD PTR [rbx+0x10]
   140026f52:	mov    BYTE PTR [rdx+rcx*1],al
   140026f55:	add    DWORD PTR [rbx+0x28],0x1
   140026f59:	mov    edx,DWORD PTR [rbx+0x28]
   140026f5c:	movzx  eax,BYTE PTR [rdi+0xf]
   140026f60:	mov    rcx,QWORD PTR [rbx+0x10]
   140026f64:	mov    BYTE PTR [rdx+rcx*1],al
   140026f67:	add    DWORD PTR [rbx+0x28],0x1
   140026f6b:	jmp    0x140026f82
   140026f6d:	movzx  edx,WORD PTR [rdi+0x4e]
   140026f71:	mov    rcx,rbx
   140026f74:	call   0x140026660
   140026f79:	movzx  edx,WORD PTR [rdi+0x4c]
   140026f7d:	call   0x140026660
   140026f82:	mov    rcx,rdi
   140026f85:	call   0x140026690
   140026f8a:	mov    r11d,DWORD PTR [rbx+0x2c]
   140026f8e:	test   r11d,r11d
   140026f91:	jle    0x140026f9a
   140026f93:	neg    r11d
   140026f96:	mov    DWORD PTR [rbx+0x2c],r11d
   140026f9a:	cmp    DWORD PTR [rbx+0x28],r12d
   140026f9e:	sete   r12b
   140026fa2:	mov    eax,r12d
   140026fa5:	jmp    0x140026dad
   140026faa:	cmp    DWORD PTR [rdi+0x18],r12d
   140026fae:	jne    0x140026fb7
   140026fb0:	mov    DWORD PTR [rbx+0x40],0xffffffff
   140026fb7:	xor    eax,eax
   140026fb9:	jmp    0x140026dad
   140026fbe:	mov    rax,QWORD PTR [rip+0x25f5b]        # 0x14004cf20
   140026fc5:	mov    QWORD PTR [rcx+0x20],rax
   140026fc9:	mov    rdi,QWORD PTR [rsp+0x58]
   140026fce:	mov    rbp,QWORD PTR [rsp+0x48]
   140026fd3:	mov    rbx,QWORD PTR [rsp+0x40]
   140026fd8:	mov    eax,0xfffffffe
   140026fdd:	add    rsp,0x38
   140026fe1:	ret    
   140026fe2:	int3   
   140026fe3:	int3   
   140026fe4:	int3   
   140026fe5:	int3   
   140026fe6:	int3   
   140026fe7:	int3   
   140026fe8:	int3   
   140026fe9:	int3   
   140026fea:	int3   
   140026feb:	int3   
   140026fec:	int3   
   140026fed:	int3   
   140026fee:	int3   
   140026fef:	int3   
   140026ff0:	sub    rsp,0x28
   140026ff4:	test   rcx,rcx
   140026ff7:	mov    QWORD PTR [rsp+0x40],rbx
   140026ffc:	mov    rbx,rcx
   140026fff:	je     0x1400270d0
   140027005:	mov    rax,QWORD PTR [rcx+0x28]
   140027009:	test   rax,rax
   14002700c:	je     0x1400270d0
   140027012:	mov    QWORD PTR [rsp+0x48],rdi
   140027017:	mov    edi,DWORD PTR [rax+0x8]
   14002701a:	cmp    edi,0x2a
   14002701d:	je     0x140027054
   14002701f:	cmp    edi,0x45
   140027022:	je     0x140027054
   140027024:	cmp    edi,0x49
   140027027:	je     0x140027054
   140027029:	cmp    edi,0x5b
   14002702c:	je     0x140027054
   14002702e:	cmp    edi,0x67
   140027031:	je     0x140027054
   140027033:	cmp    edi,0x71
   140027036:	je     0x140027054
   140027038:	cmp    edi,0x29a
   14002703e:	je     0x140027054
   140027040:	mov    eax,0xfffffffe
   140027045:	mov    rdi,QWORD PTR [rsp+0x48]
   14002704a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002704f:	add    rsp,0x28
   140027053:	ret    
   140027054:	mov    rdx,QWORD PTR [rax+0x10]
   140027058:	test   rdx,rdx
   14002705b:	je     0x140027064
   14002705d:	mov    rcx,QWORD PTR [rcx+0x40]
   140027061:	call   QWORD PTR [rbx+0x38]
   140027064:	mov    rax,QWORD PTR [rbx+0x28]
   140027068:	mov    rdx,QWORD PTR [rax+0x68]
   14002706c:	test   rdx,rdx
   14002706f:	je     0x140027078
   140027071:	mov    rcx,QWORD PTR [rbx+0x40]
   140027075:	call   QWORD PTR [rbx+0x38]
   140027078:	mov    rax,QWORD PTR [rbx+0x28]
   14002707c:	mov    rdx,QWORD PTR [rax+0x60]
   140027080:	test   rdx,rdx
   140027083:	je     0x14002708c
   140027085:	mov    rcx,QWORD PTR [rbx+0x40]
   140027089:	call   QWORD PTR [rbx+0x38]
   14002708c:	mov    rax,QWORD PTR [rbx+0x28]
   140027090:	mov    rdx,QWORD PTR [rax+0x50]
   140027094:	test   rdx,rdx
   140027097:	je     0x1400270a0
   140027099:	mov    rcx,QWORD PTR [rbx+0x40]
   14002709d:	call   QWORD PTR [rbx+0x38]
   1400270a0:	mov    rdx,QWORD PTR [rbx+0x28]
   1400270a4:	mov    rcx,QWORD PTR [rbx+0x40]
   1400270a8:	call   QWORD PTR [rbx+0x38]
   1400270ab:	xor    r11d,r11d
   1400270ae:	cmp    edi,0x71
   1400270b1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400270b6:	mov    eax,0xfffffffd
   1400270bb:	mov    QWORD PTR [rbx+0x28],r11
   1400270bf:	cmove  r11d,eax
   1400270c3:	mov    eax,r11d
   1400270c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400270cb:	add    rsp,0x28
   1400270cf:	ret    
   1400270d0:	mov    eax,0xfffffffe
   1400270d5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400270da:	add    rsp,0x28
   1400270de:	ret    
   1400270df:	int3   
   1400270e0:	sub    rsp,0x28
   1400270e4:	mov    eax,DWORD PTR [rcx+0x8]
   1400270e7:	mov    QWORD PTR [rsp+0x38],rbp
   1400270ec:	mov    QWORD PTR [rsp+0x40],rsi
   1400270f1:	cmp    eax,r8d
   1400270f4:	mov    esi,eax
   1400270f6:	mov    QWORD PTR [rsp+0x48],rdi
   1400270fb:	cmova  esi,r8d
   1400270ff:	mov    rbp,rdx
   140027102:	mov    rdi,rcx
   140027105:	test   esi,esi
   140027107:	jne    0x14002711f
   140027109:	xor    eax,eax
   14002710b:	mov    rdi,QWORD PTR [rsp+0x48]
   140027110:	mov    rsi,QWORD PTR [rsp+0x40]
   140027115:	mov    rbp,QWORD PTR [rsp+0x38]
   14002711a:	add    rsp,0x28
   14002711e:	ret    
   14002711f:	sub    eax,esi
   140027121:	mov    DWORD PTR [rcx+0x8],eax
   140027124:	mov    rax,QWORD PTR [rcx+0x28]
   140027128:	mov    ecx,DWORD PTR [rax+0x2c]
   14002712b:	cmp    ecx,0x1
   14002712e:	jne    0x140027140
   140027130:	mov    rdx,QWORD PTR [rdi]
   140027133:	mov    ecx,DWORD PTR [rdi+0x4c]
   140027136:	mov    r8d,esi
   140027139:	call   0x140028880
   14002713e:	jmp    0x140027153
   140027140:	cmp    ecx,0x2
   140027143:	jne    0x140027156
   140027145:	mov    rdx,QWORD PTR [rdi]
   140027148:	mov    ecx,DWORD PTR [rdi+0x4c]
   14002714b:	mov    r8d,esi
   14002714e:	call   0x140028850
   140027153:	mov    DWORD PTR [rdi+0x4c],eax
   140027156:	mov    rdx,QWORD PTR [rdi]
   140027159:	mov    r8d,esi
   14002715c:	mov    rcx,rbp
   14002715f:	mov    QWORD PTR [rsp+0x30],rbx
   140027164:	mov    ebx,esi
   140027166:	call   0x14002b120
   14002716b:	add    QWORD PTR [rdi],rbx
   14002716e:	add    DWORD PTR [rdi+0xc],esi
   140027171:	mov    rbp,QWORD PTR [rsp+0x38]
   140027176:	mov    rdi,QWORD PTR [rsp+0x48]
   14002717b:	mov    rbx,QWORD PTR [rsp+0x30]
   140027180:	mov    eax,esi
   140027182:	mov    rsi,QWORD PTR [rsp+0x40]
   140027187:	add    rsp,0x28
   14002718b:	ret    
   14002718c:	int3   
   14002718d:	int3   
   14002718e:	int3   
   14002718f:	int3   
   140027190:	rex push rbx
   140027192:	sub    rsp,0x20
   140027196:	mov    eax,DWORD PTR [rcx+0x44]
   140027199:	mov    edx,DWORD PTR [rcx+0x74]
   14002719c:	mov    rbx,rcx
   14002719f:	add    eax,eax
   1400271a1:	add    edx,0xffffffff
   1400271a4:	mov    DWORD PTR [rcx+0x58],eax
   1400271a7:	mov    rax,QWORD PTR [rcx+0x68]
   1400271ab:	mov    WORD PTR [rax+rdx*2],0x0
   1400271b1:	mov    r8d,DWORD PTR [rcx+0x74]
   1400271b5:	mov    rcx,QWORD PTR [rcx+0x68]
   1400271b9:	add    r8d,0xffffffff
   1400271bd:	xor    edx,edx
   1400271bf:	add    r8,r8
   1400271c2:	call   0x14002b144
   1400271c7:	movsxd r11,DWORD PTR [rbx+0xac]
   1400271ce:	lea    rcx,[rip+0x2333b]        # 0x14004a510
   1400271d5:	add    r11,r11
   1400271d8:	movzx  eax,WORD PTR [rcx+r11*8+0x2]
   1400271de:	mov    DWORD PTR [rbx+0xa8],eax
   1400271e4:	movzx  eax,WORD PTR [rcx+r11*8]
   1400271e9:	mov    DWORD PTR [rbx+0xb4],eax
   1400271ef:	movzx  eax,WORD PTR [rcx+r11*8+0x4]
   1400271f5:	mov    DWORD PTR [rbx+0xb8],eax
   1400271fb:	movzx  eax,WORD PTR [rcx+r11*8+0x6]
   140027201:	mov    DWORD PTR [rbx+0xa0],0x2
   14002720b:	mov    DWORD PTR [rbx+0xa4],eax
   140027211:	xor    eax,eax
   140027213:	mov    DWORD PTR [rbx+0x88],0x2
   14002721d:	mov    DWORD PTR [rbx+0x94],eax
   140027223:	mov    DWORD PTR [rbx+0x84],eax
   140027229:	mov    DWORD PTR [rbx+0x9c],eax
   14002722f:	mov    DWORD PTR [rbx+0x90],eax
   140027235:	mov    DWORD PTR [rbx+0x70],eax
   140027238:	add    rsp,0x20
   14002723c:	pop    rbx
   14002723d:	jmp    0x14002ac97
   140027242:	int3   
   140027243:	int3   
   140027244:	int3   
   140027245:	int3   
   140027246:	int3   
   140027247:	int3   
   140027248:	int3   
   140027249:	int3   
   14002724a:	int3   
   14002724b:	int3   
   14002724c:	int3   
   14002724d:	int3   
   14002724e:	int3   
   14002724f:	int3   
   140027250:	mov    r8,QWORD PTR [rcx+0x50]
   140027254:	mov    r9d,DWORD PTR [rcx+0x94]
   14002725b:	mov    r10d,edx
   14002725e:	add    r9,r8
   140027261:	add    r10,r8
   140027264:	movzx  eax,BYTE PTR [r9]
   140027268:	lea    r11,[r9+0x102]
   14002726f:	cmp    BYTE PTR [r10],al
   140027272:	jne    0x14002732d
   140027278:	movzx  eax,BYTE PTR [r9+0x1]
   14002727d:	cmp    BYTE PTR [r10+0x1],al
   140027281:	jne    0x14002732d
   140027287:	add    r9,0x2
   14002728b:	add    r10,0x2
   14002728f:	nop
   140027290:	movzx  eax,BYTE PTR [r10+0x1]
   140027295:	add    r9,0x1
   140027299:	cmp    BYTE PTR [r9],al
   14002729c:	jne    0x140027309
   14002729e:	movzx  eax,BYTE PTR [r10+0x2]
   1400272a3:	add    r9,0x1
   1400272a7:	cmp    BYTE PTR [r9],al
   1400272aa:	jne    0x140027309
   1400272ac:	movzx  eax,BYTE PTR [r10+0x3]
   1400272b1:	add    r9,0x1
   1400272b5:	cmp    BYTE PTR [r9],al
   1400272b8:	jne    0x140027309
   1400272ba:	movzx  eax,BYTE PTR [r10+0x4]
   1400272bf:	add    r9,0x1
   1400272c3:	cmp    BYTE PTR [r9],al
   1400272c6:	jne    0x140027309
   1400272c8:	movzx  eax,BYTE PTR [r10+0x5]
   1400272cd:	add    r9,0x1
   1400272d1:	cmp    BYTE PTR [r9],al
   1400272d4:	jne    0x140027309
   1400272d6:	movzx  eax,BYTE PTR [r10+0x6]
   1400272db:	add    r9,0x1
   1400272df:	cmp    BYTE PTR [r9],al
   1400272e2:	jne    0x140027309
   1400272e4:	movzx  eax,BYTE PTR [r10+0x7]
   1400272e9:	add    r9,0x1
   1400272ed:	cmp    BYTE PTR [r9],al
   1400272f0:	jne    0x140027309
   1400272f2:	movzx  eax,BYTE PTR [r10+0x8]
   1400272f7:	add    r10,0x8
   1400272fb:	add    r9,0x1
   1400272ff:	cmp    BYTE PTR [r9],al
   140027302:	jne    0x140027309
   140027304:	cmp    r9,r11
   140027307:	jb     0x140027290
   140027309:	sub    r9d,r11d
   14002730c:	add    r9d,0x102
   140027313:	cmp    r9d,0x3
   140027317:	jl     0x14002732d
   140027319:	mov    eax,DWORD PTR [rcx+0x9c]
   14002731f:	mov    DWORD PTR [rcx+0x98],edx
   140027325:	cmp    r9d,eax
   140027328:	cmovbe eax,r9d
   14002732c:	ret    
   14002732d:	mov    eax,0x2
   140027332:	ret    
   140027333:	int3   
   140027334:	int3   
   140027335:	int3   
   140027336:	int3   
   140027337:	int3   
   140027338:	int3   
   140027339:	int3   
   14002733a:	int3   
   14002733b:	int3   
   14002733c:	int3   
   14002733d:	int3   
   14002733e:	int3   
   14002733f:	int3   
   140027340:	sub    rsp,0x28
   140027344:	mov    QWORD PTR [rsp+0x30],rbx
   140027349:	mov    ebx,DWORD PTR [rcx+0x44]
   14002734c:	mov    QWORD PTR [rsp+0x48],rdi
   140027351:	mov    QWORD PTR [rsp+0x38],rbp
   140027356:	mov    rdi,rcx
   140027359:	mov    QWORD PTR [rsp+0x40],rsi
   14002735e:	xchg   ax,ax
   140027360:	mov    edx,DWORD PTR [rdi+0x94]
   140027366:	mov    esi,DWORD PTR [rdi+0x58]
   140027369:	mov    eax,DWORD PTR [rdi+0x44]
   14002736c:	sub    esi,DWORD PTR [rdi+0x9c]
   140027372:	lea    ecx,[rbx+rax*1-0x106]
   140027379:	sub    esi,edx
   14002737b:	cmp    edx,ecx
   14002737d:	jb     0x1400273fc
   14002737f:	mov    rcx,QWORD PTR [rdi+0x50]
   140027383:	mov    r8,rbx
   140027386:	lea    rdx,[rcx+rbx*1]
   14002738a:	call   0x14002b120
   14002738f:	mov    r8d,DWORD PTR [rdi+0x74]
   140027393:	mov    rax,QWORD PTR [rdi+0x68]
   140027397:	sub    DWORD PTR [rdi+0x98],ebx
   14002739d:	sub    DWORD PTR [rdi+0x94],ebx
   1400273a3:	sub    DWORD PTR [rdi+0x84],ebx
   1400273a9:	lea    rdx,[rax+r8*2]
   1400273ad:	data16 xchg ax,ax
   1400273b0:	movzx  eax,WORD PTR [rdx-0x2]
   1400273b4:	sub    rdx,0x2
   1400273b8:	cmp    eax,ebx
   1400273ba:	jb     0x1400273c0
   1400273bc:	sub    eax,ebx
   1400273be:	jmp    0x1400273c2
   1400273c0:	xor    eax,eax
   1400273c2:	add    r8d,0xffffffff
   1400273c6:	mov    WORD PTR [rdx],ax
   1400273c9:	jne    0x1400273b0
   1400273cb:	mov    rax,QWORD PTR [rdi+0x60]
   1400273cf:	mov    edx,ebx
   1400273d1:	lea    rcx,[rax+rbx*2]
   1400273d5:	data16 data16 xchg ax,ax
   1400273d9:	data16 xchg ax,ax
   1400273dc:	data16 data16 xchg ax,ax
   1400273e0:	movzx  eax,WORD PTR [rcx-0x2]
   1400273e4:	sub    rcx,0x2
   1400273e8:	cmp    eax,ebx
   1400273ea:	jb     0x1400273f0
   1400273ec:	sub    eax,ebx
   1400273ee:	jmp    0x1400273f2
   1400273f0:	xor    eax,eax
   1400273f2:	add    edx,0xffffffff
   1400273f5:	mov    WORD PTR [rcx],ax
   1400273f8:	jne    0x1400273e0
   1400273fa:	add    esi,ebx
   1400273fc:	mov    rcx,QWORD PTR [rdi]
   1400273ff:	cmp    DWORD PTR [rcx+0x8],0x0
   140027403:	je     0x140027477
   140027405:	mov    edx,DWORD PTR [rdi+0x9c]
   14002740b:	mov    eax,DWORD PTR [rdi+0x94]
   140027411:	mov    r8d,esi
   140027414:	add    rdx,rax
   140027417:	add    rdx,QWORD PTR [rdi+0x50]
   14002741b:	call   0x1400270e0
   140027420:	add    DWORD PTR [rdi+0x9c],eax
   140027426:	mov    r9d,DWORD PTR [rdi+0x9c]
   14002742d:	cmp    r9d,0x3
   140027431:	jb     0x140027461
   140027433:	mov    eax,DWORD PTR [rdi+0x94]
   140027439:	mov    rdx,QWORD PTR [rdi+0x50]
   14002743d:	mov    ecx,DWORD PTR [rdi+0x80]
   140027443:	movzx  r8d,BYTE PTR [rax+rdx*1]
   140027448:	add    eax,0x1
   14002744b:	mov    DWORD PTR [rdi+0x70],r8d
   14002744f:	movzx  eax,BYTE PTR [rax+rdx*1]
   140027453:	shl    r8d,cl
   140027456:	xor    r8d,eax
   140027459:	and    r8d,DWORD PTR [rdi+0x7c]
   14002745d:	mov    DWORD PTR [rdi+0x70],r8d
   140027461:	cmp    r9d,0x106
   140027468:	jae    0x140027477
   14002746a:	mov    rax,QWORD PTR [rdi]
   14002746d:	cmp    DWORD PTR [rax+0x8],0x0
   140027471:	jne    0x140027360
   140027477:	mov    rdi,QWORD PTR [rsp+0x48]
   14002747c:	mov    rsi,QWORD PTR [rsp+0x40]
   140027481:	mov    rbp,QWORD PTR [rsp+0x38]
   140027486:	mov    rbx,QWORD PTR [rsp+0x30]
   14002748b:	add    rsp,0x28
   14002748f:	ret    
   140027490:	sub    rsp,0x28
   140027494:	mov    eax,DWORD PTR [rcx+0x18]
   140027497:	mov    QWORD PTR [rsp+0x30],rbx
   14002749c:	mov    QWORD PTR [rsp+0x38],rbp
   1400274a1:	mov    QWORD PTR [rsp+0x40],rsi
   1400274a6:	add    eax,0xfffffffb
   1400274a9:	mov    esi,0xffff
   1400274ae:	cmp    eax,esi
   1400274b0:	mov    QWORD PTR [rsp+0x48],rdi
   1400274b5:	mov    ebp,edx
   1400274b7:	cmovb  esi,eax
   1400274ba:	xor    edi,edi
   1400274bc:	mov    rbx,rcx
   1400274bf:	nop
   1400274c0:	mov    eax,DWORD PTR [rbx+0x9c]
   1400274c6:	cmp    eax,0x1
   1400274c9:	ja     0x1400274e1
   1400274cb:	mov    rcx,rbx
   1400274ce:	call   0x140027340
   1400274d3:	mov    eax,DWORD PTR [rbx+0x9c]
   1400274d9:	test   eax,eax
   1400274db:	je     0x1400275cb
   1400274e1:	mov    ecx,DWORD PTR [rbx+0x84]
   1400274e7:	add    DWORD PTR [rbx+0x94],eax
   1400274ed:	mov    eax,DWORD PTR [rbx+0x94]
   1400274f3:	lea    r8d,[rcx+rsi*1]
   1400274f7:	mov    DWORD PTR [rbx+0x9c],edi
   1400274fd:	je     0x140027504
   1400274ff:	cmp    eax,r8d
   140027502:	jb     0x140027551
   140027504:	sub    eax,r8d
   140027507:	test   ecx,ecx
   140027509:	mov    DWORD PTR [rbx+0x94],r8d
   140027510:	mov    DWORD PTR [rbx+0x9c],eax
   140027516:	js     0x140027521
   140027518:	mov    rdx,rcx
   14002751b:	add    rdx,QWORD PTR [rbx+0x50]
   14002751f:	jmp    0x140027524
   140027521:	mov    rdx,rdi
   140027524:	sub    r8d,ecx
   140027527:	xor    r9d,r9d
   14002752a:	mov    rcx,rbx
   14002752d:	call   0x14002a770
   140027532:	mov    r11d,DWORD PTR [rbx+0x94]
   140027539:	mov    rcx,QWORD PTR [rbx]
   14002753c:	mov    DWORD PTR [rbx+0x84],r11d
   140027543:	call   0x140026690
   140027548:	mov    r11,QWORD PTR [rbx]
   14002754b:	cmp    DWORD PTR [r11+0x18],edi
   14002754f:	je     0x1400275b0
   140027551:	mov    ecx,DWORD PTR [rbx+0x84]
   140027557:	mov    r8d,DWORD PTR [rbx+0x94]
   14002755e:	mov    eax,DWORD PTR [rbx+0x44]
   140027561:	sub    r8d,ecx
   140027564:	sub    eax,0x106
   140027569:	cmp    r8d,eax
   14002756c:	jb     0x1400274c0
   140027572:	test   ecx,ecx
   140027574:	js     0x14002757f
   140027576:	mov    rdx,rcx
   140027579:	add    rdx,QWORD PTR [rbx+0x50]
   14002757d:	jmp    0x140027582
   14002757f:	mov    rdx,rdi
   140027582:	xor    r9d,r9d
   140027585:	mov    rcx,rbx
   140027588:	call   0x14002a770
   14002758d:	mov    r11d,DWORD PTR [rbx+0x94]
   140027594:	mov    rcx,QWORD PTR [rbx]
   140027597:	mov    DWORD PTR [rbx+0x84],r11d
   14002759e:	call   0x140026690
   1400275a3:	mov    r11,QWORD PTR [rbx]
   1400275a6:	cmp    DWORD PTR [r11+0x18],edi
   1400275aa:	jne    0x1400274c0
   1400275b0:	xor    eax,eax
   1400275b2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400275b7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400275bc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400275c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400275c6:	add    rsp,0x28
   1400275ca:	ret    
   1400275cb:	test   ebp,ebp
   1400275cd:	je     0x1400275b0
   1400275cf:	mov    eax,DWORD PTR [rbx+0x84]
   1400275d5:	test   eax,eax
   1400275d7:	js     0x1400275e2
   1400275d9:	mov    rdx,rax
   1400275dc:	add    rdx,QWORD PTR [rbx+0x50]
   1400275e0:	jmp    0x1400275e5
   1400275e2:	mov    rdx,rdi
   1400275e5:	mov    r8d,DWORD PTR [rbx+0x94]
   1400275ec:	mov    r9d,edi
   1400275ef:	cmp    ebp,0x4
   1400275f2:	sete   r9b
   1400275f6:	sub    r8d,eax
   1400275f9:	mov    rcx,rbx
   1400275fc:	call   0x14002a770
   140027601:	mov    r11d,DWORD PTR [rbx+0x94]
   140027608:	mov    rcx,QWORD PTR [rbx]
   14002760b:	mov    DWORD PTR [rbx+0x84],r11d
   140027612:	call   0x140026690
   140027617:	mov    r11,QWORD PTR [rbx]
   14002761a:	cmp    DWORD PTR [r11+0x18],edi
   14002761e:	jne    0x14002762f
   140027620:	mov    eax,0x2
   140027625:	cmp    ebp,0x4
   140027628:	cmove  edi,eax
   14002762b:	mov    eax,edi
   14002762d:	jmp    0x1400275b2
   14002762f:	mov    eax,0x1
   140027634:	mov    ecx,0x3
   140027639:	cmp    ebp,0x4
   14002763c:	cmove  eax,ecx
   14002763f:	jmp    0x1400275b2
   140027644:	int3   
   140027645:	int3   
   140027646:	int3   
   140027647:	int3   
   140027648:	int3   
   140027649:	int3   
   14002764a:	int3   
   14002764b:	int3   
   14002764c:	int3   
   14002764d:	int3   
   14002764e:	int3   
   14002764f:	int3   
   140027650:	sub    rsp,0x28
   140027654:	mov    QWORD PTR [rsp+0x30],rbx
   140027659:	mov    QWORD PTR [rsp+0x38],rbp
   14002765e:	mov    QWORD PTR [rsp+0x40],rsi
   140027663:	mov    QWORD PTR [rsp+0x48],rdi
   140027668:	xor    esi,esi
   14002766a:	mov    QWORD PTR [rsp+0x20],r12
   14002766f:	mov    ebp,edx
   140027671:	mov    rbx,rcx
   140027674:	lea    r12,[rip+0xfffffffffffd8985]        # 0x140000000
   14002767b:	mov    edi,esi
   14002767d:	data16 xchg ax,ax
   140027680:	mov    eax,DWORD PTR [rbx+0x9c]
   140027686:	cmp    eax,0x106
   14002768b:	jae    0x1400276b2
   14002768d:	mov    rcx,rbx
   140027690:	call   0x140027340
   140027695:	mov    eax,DWORD PTR [rbx+0x9c]
   14002769b:	cmp    eax,0x106
   1400276a0:	jae    0x1400276aa
   1400276a2:	test   ebp,ebp
   1400276a4:	je     0x1400279da
   1400276aa:	test   eax,eax
   1400276ac:	je     0x1400279fa
   1400276b2:	cmp    eax,0x3
   1400276b5:	jb     0x14002771f
   1400276b7:	mov    rax,QWORD PTR [rbx+0x50]
   1400276bb:	mov    r9d,DWORD PTR [rbx+0x94]
   1400276c2:	mov    rdx,QWORD PTR [rbx+0x68]
   1400276c6:	lea    ecx,[r9+0x2]
   1400276ca:	movzx  r8d,BYTE PTR [rcx+rax*1]
   1400276cf:	mov    eax,DWORD PTR [rbx+0x70]
   1400276d2:	mov    ecx,DWORD PTR [rbx+0x80]
   1400276d8:	shl    eax,cl
   1400276da:	mov    rcx,QWORD PTR [rbx+0x60]
   1400276de:	xor    r8d,eax
   1400276e1:	mov    eax,DWORD PTR [rbx+0x4c]
   1400276e4:	and    r8d,DWORD PTR [rbx+0x7c]
   1400276e8:	and    r9,rax
   1400276eb:	mov    DWORD PTR [rbx+0x70],r8d
   1400276ef:	movzx  eax,WORD PTR [rdx+r8*2]
   1400276f4:	mov    WORD PTR [rcx+r9*2],ax
   1400276f9:	mov    eax,DWORD PTR [rbx+0x4c]
   1400276fc:	mov    ecx,DWORD PTR [rbx+0x94]
   140027702:	mov    edx,DWORD PTR [rbx+0x70]
   140027705:	and    rcx,rax
   140027708:	mov    rax,QWORD PTR [rbx+0x60]
   14002770c:	movzx  edi,WORD PTR [rax+rcx*2]
   140027710:	mov    rcx,QWORD PTR [rbx+0x68]
   140027714:	movzx  eax,WORD PTR [rbx+0x94]
   14002771b:	mov    WORD PTR [rcx+rdx*2],ax
   14002771f:	test   edi,edi
   140027721:	je     0x140027773
   140027723:	mov    ecx,DWORD PTR [rbx+0x94]
   140027729:	mov    eax,DWORD PTR [rbx+0x44]
   14002772c:	sub    ecx,edi
   14002772e:	sub    eax,0x106
   140027733:	cmp    ecx,eax
   140027735:	ja     0x140027773
   140027737:	mov    eax,DWORD PTR [rbx+0xb0]
   14002773d:	cmp    eax,0x2
   140027740:	je     0x140027759
   140027742:	cmp    eax,0x3
   140027745:	je     0x140027759
   140027747:	mov    edx,edi
   140027749:	mov    rcx,rbx
   14002774c:	call   0x14002a9c0
   140027751:	mov    DWORD PTR [rbx+0x88],eax
   140027757:	jmp    0x140027773
   140027759:	cmp    eax,0x3
   14002775c:	jne    0x140027773
   14002775e:	cmp    ecx,0x1
   140027761:	jne    0x140027773
   140027763:	mov    edx,edi
   140027765:	mov    rcx,rbx
   140027768:	call   0x140027250
   14002776d:	mov    DWORD PTR [rbx+0x88],eax
   140027773:	cmp    DWORD PTR [rbx+0x88],0x3
   14002777a:	jb     0x140027920
   140027780:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027786:	movzx  r8d,WORD PTR [rbx+0x94]
   14002778e:	mov    rax,QWORD PTR [rbx+0x16f8]
   140027795:	sub    r8w,WORD PTR [rbx+0x98]
   14002779d:	movzx  edx,BYTE PTR [rbx+0x88]
   1400277a4:	mov    WORD PTR [rax+rcx*2],r8w
   1400277a9:	mov    ecx,DWORD PTR [rbx+0x16f4]
   1400277af:	mov    rax,QWORD PTR [rbx+0x16e8]
   1400277b6:	sub    dl,0x3
   1400277b9:	add    r8w,0xffff
   1400277bf:	mov    BYTE PTR [rcx+rax*1],dl
   1400277c2:	add    DWORD PTR [rbx+0x16f4],0x1
   1400277c9:	movzx  eax,dl
   1400277cc:	movzx  eax,BYTE PTR [rax+r12*1+0x4d7c0]
   1400277d5:	add    WORD PTR [rbx+rax*4+0x4c0],0x1
   1400277de:	cmp    r8w,0x100
   1400277e4:	jae    0x1400277f5
   1400277e6:	movzx  eax,r8w
   1400277ea:	movzx  ecx,BYTE PTR [rax+r12*1+0x4d5c0]
   1400277f3:	jmp    0x140027806
   1400277f5:	movzx  eax,r8w
   1400277f9:	shr    rax,0x7
   1400277fd:	movzx  ecx,BYTE PTR [rax+r12*1+0x4d6c0]
   140027806:	movsxd rax,ecx
   140027809:	mov    r10d,esi
   14002780c:	add    WORD PTR [rbx+rax*4+0x9b0],0x1
   140027815:	mov    eax,DWORD PTR [rbx+0x16f0]
   14002781b:	sub    eax,0x1
   14002781e:	cmp    DWORD PTR [rbx+0x16f4],eax
   140027824:	mov    eax,DWORD PTR [rbx+0x88]
   14002782a:	sete   r10b
   14002782e:	sub    DWORD PTR [rbx+0x9c],eax
   140027834:	cmp    eax,DWORD PTR [rbx+0xa8]
   14002783a:	ja     0x1400278e4
   140027840:	cmp    DWORD PTR [rbx+0x9c],0x3
   140027847:	jb     0x1400278e4
   14002784d:	add    eax,0xffffffff
   140027850:	mov    DWORD PTR [rbx+0x88],eax
   140027856:	data16 data16 xchg ax,ax
   14002785a:	data16 xchg ax,ax
   14002785d:	data16 xchg ax,ax
   140027860:	add    DWORD PTR [rbx+0x94],0x1
   140027867:	mov    rax,QWORD PTR [rbx+0x50]
   14002786b:	mov    r9d,DWORD PTR [rbx+0x94]
   140027872:	mov    rdx,QWORD PTR [rbx+0x68]
   140027876:	lea    ecx,[r9+0x2]
   14002787a:	movzx  r8d,BYTE PTR [rcx+rax*1]
   14002787f:	mov    eax,DWORD PTR [rbx+0x70]
   140027882:	mov    ecx,DWORD PTR [rbx+0x80]
   140027888:	shl    eax,cl
   14002788a:	mov    rcx,QWORD PTR [rbx+0x60]
   14002788e:	xor    r8d,eax
   140027891:	mov    eax,DWORD PTR [rbx+0x4c]
   140027894:	and    r8d,DWORD PTR [rbx+0x7c]
   140027898:	and    r9,rax
   14002789b:	mov    DWORD PTR [rbx+0x70],r8d
   14002789f:	movzx  eax,WORD PTR [rdx+r8*2]
   1400278a4:	mov    WORD PTR [rcx+r9*2],ax
   1400278a9:	mov    eax,DWORD PTR [rbx+0x4c]
   1400278ac:	mov    ecx,DWORD PTR [rbx+0x94]
   1400278b2:	mov    edx,DWORD PTR [rbx+0x70]
   1400278b5:	and    rcx,rax
   1400278b8:	mov    rax,QWORD PTR [rbx+0x60]
   1400278bc:	movzx  edi,WORD PTR [rax+rcx*2]
   1400278c0:	mov    rcx,QWORD PTR [rbx+0x68]
   1400278c4:	movzx  eax,WORD PTR [rbx+0x94]
   1400278cb:	mov    WORD PTR [rcx+rdx*2],ax
   1400278cf:	add    DWORD PTR [rbx+0x88],0xffffffff
   1400278d6:	jne    0x140027860
   1400278d8:	add    DWORD PTR [rbx+0x94],0x1
   1400278df:	jmp    0x140027983
   1400278e4:	add    DWORD PTR [rbx+0x94],eax
   1400278ea:	mov    eax,DWORD PTR [rbx+0x94]
   1400278f0:	mov    rdx,QWORD PTR [rbx+0x50]
   1400278f4:	mov    ecx,DWORD PTR [rbx+0x80]
   1400278fa:	mov    DWORD PTR [rbx+0x88],esi
   140027900:	movzx  r8d,BYTE PTR [rax+rdx*1]
   140027905:	mov    DWORD PTR [rbx+0x70],r8d
   140027909:	add    eax,0x1
   14002790c:	shl    r8d,cl
   14002790f:	movzx  eax,BYTE PTR [rax+rdx*1]
   140027913:	xor    r8d,eax
   140027916:	and    r8d,DWORD PTR [rbx+0x7c]
   14002791a:	mov    DWORD PTR [rbx+0x70],r8d
   14002791e:	jmp    0x140027983
   140027920:	mov    ecx,DWORD PTR [rbx+0x94]
   140027926:	mov    rax,QWORD PTR [rbx+0x50]
   14002792a:	mov    r10d,esi
   14002792d:	movzx  edx,BYTE PTR [rcx+rax*1]
   140027931:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027937:	mov    rax,QWORD PTR [rbx+0x16f8]
   14002793e:	mov    WORD PTR [rax+rcx*2],si
   140027942:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027948:	mov    rax,QWORD PTR [rbx+0x16e8]
   14002794f:	mov    BYTE PTR [rcx+rax*1],dl
   140027952:	add    DWORD PTR [rbx+0x16f4],0x1
   140027959:	add    WORD PTR [rbx+rdx*4+0xbc],0x1
   140027962:	mov    eax,DWORD PTR [rbx+0x16f0]
   140027968:	sub    eax,0x1
   14002796b:	cmp    DWORD PTR [rbx+0x16f4],eax
   140027971:	sete   r10b
   140027975:	add    DWORD PTR [rbx+0x9c],0xffffffff
   14002797c:	add    DWORD PTR [rbx+0x94],0x1
   140027983:	test   r10d,r10d
   140027986:	je     0x140027680
   14002798c:	mov    eax,DWORD PTR [rbx+0x84]
   140027992:	test   eax,eax
   140027994:	js     0x14002799f
   140027996:	mov    rdx,rax
   140027999:	add    rdx,QWORD PTR [rbx+0x50]
   14002799d:	jmp    0x1400279a2
   14002799f:	mov    rdx,rsi
   1400279a2:	mov    r8d,DWORD PTR [rbx+0x94]
   1400279a9:	xor    r9d,r9d
   1400279ac:	mov    rcx,rbx
   1400279af:	sub    r8d,eax
   1400279b2:	call   0x14002a770
   1400279b7:	mov    r11d,DWORD PTR [rbx+0x94]
   1400279be:	mov    rcx,QWORD PTR [rbx]
   1400279c1:	mov    DWORD PTR [rbx+0x84],r11d
   1400279c8:	call   0x140026690
   1400279cd:	mov    r11,QWORD PTR [rbx]
   1400279d0:	cmp    DWORD PTR [r11+0x18],esi
   1400279d4:	jne    0x140027680
   1400279da:	xor    eax,eax
   1400279dc:	mov    r12,QWORD PTR [rsp+0x20]
   1400279e1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400279e6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400279eb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400279f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400279f5:	add    rsp,0x28
   1400279f9:	ret    
   1400279fa:	mov    eax,DWORD PTR [rbx+0x84]
   140027a00:	test   eax,eax
   140027a02:	js     0x140027a0d
   140027a04:	mov    rdx,rax
   140027a07:	add    rdx,QWORD PTR [rbx+0x50]
   140027a0b:	jmp    0x140027a10
   140027a0d:	mov    rdx,rsi
   140027a10:	mov    r8d,DWORD PTR [rbx+0x94]
   140027a17:	mov    r9d,esi
   140027a1a:	cmp    ebp,0x4
   140027a1d:	sete   r9b
   140027a21:	sub    r8d,eax
   140027a24:	mov    rcx,rbx
   140027a27:	call   0x14002a770
   140027a2c:	mov    r11d,DWORD PTR [rbx+0x94]
   140027a33:	mov    rcx,QWORD PTR [rbx]
   140027a36:	mov    DWORD PTR [rbx+0x84],r11d
   140027a3d:	call   0x140026690
   140027a42:	mov    r11,QWORD PTR [rbx]
   140027a45:	cmp    DWORD PTR [r11+0x18],esi
   140027a49:	jne    0x140027a5a
   140027a4b:	mov    eax,0x2
   140027a50:	cmp    ebp,0x4
   140027a53:	cmove  esi,eax
   140027a56:	mov    eax,esi
   140027a58:	jmp    0x1400279dc
   140027a5a:	mov    eax,0x1
   140027a5f:	mov    ecx,0x3
   140027a64:	cmp    ebp,0x4
   140027a67:	cmove  eax,ecx
   140027a6a:	jmp    0x1400279dc
   140027a6f:	int3   
   140027a70:	mov    rax,rsp
   140027a73:	sub    rsp,0x38
   140027a77:	mov    QWORD PTR [rax+0x8],rbx
   140027a7b:	mov    QWORD PTR [rax+0x10],rbp
   140027a7f:	mov    QWORD PTR [rax+0x18],rsi
   140027a83:	mov    QWORD PTR [rax+0x20],rdi
   140027a87:	xor    edi,edi
   140027a89:	mov    QWORD PTR [rax-0x8],r12
   140027a8d:	mov    QWORD PTR [rax-0x10],r13
   140027a91:	mov    QWORD PTR [rax-0x18],r14
   140027a95:	mov    r12d,edx
   140027a98:	lea    r13d,[rdi+0x2]
   140027a9c:	lea    ebp,[rdi+0x1]
   140027a9f:	mov    rbx,rcx
   140027aa2:	mov    esi,edi
   140027aa4:	lea    r14,[rip+0xfffffffffffd8555]        # 0x140000000
   140027aab:	xchg   ax,ax
   140027aad:	data16 xchg ax,ax
   140027ab0:	mov    eax,DWORD PTR [rbx+0x9c]
   140027ab6:	cmp    eax,0x106
   140027abb:	jae    0x140027ae3
   140027abd:	mov    rcx,rbx
   140027ac0:	call   0x140027340
   140027ac5:	mov    eax,DWORD PTR [rbx+0x9c]
   140027acb:	cmp    eax,0x106
   140027ad0:	jae    0x140027adb
   140027ad2:	test   r12d,r12d
   140027ad5:	je     0x140027de6
   140027adb:	test   eax,eax
   140027add:	je     0x140027ee3
   140027ae3:	cmp    eax,0x3
   140027ae6:	jb     0x140027b50
   140027ae8:	mov    rax,QWORD PTR [rbx+0x50]
   140027aec:	mov    r9d,DWORD PTR [rbx+0x94]
   140027af3:	mov    rdx,QWORD PTR [rbx+0x68]
   140027af7:	lea    ecx,[r9+0x2]
   140027afb:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140027b00:	mov    eax,DWORD PTR [rbx+0x70]
   140027b03:	mov    ecx,DWORD PTR [rbx+0x80]
   140027b09:	shl    eax,cl
   140027b0b:	mov    rcx,QWORD PTR [rbx+0x60]
   140027b0f:	xor    r8d,eax
   140027b12:	mov    eax,DWORD PTR [rbx+0x4c]
   140027b15:	and    r8d,DWORD PTR [rbx+0x7c]
   140027b19:	and    r9,rax
   140027b1c:	mov    DWORD PTR [rbx+0x70],r8d
   140027b20:	movzx  eax,WORD PTR [rdx+r8*2]
   140027b25:	mov    WORD PTR [rcx+r9*2],ax
   140027b2a:	mov    eax,DWORD PTR [rbx+0x4c]
   140027b2d:	mov    ecx,DWORD PTR [rbx+0x94]
   140027b33:	mov    edx,DWORD PTR [rbx+0x70]
   140027b36:	and    rcx,rax
   140027b39:	mov    rax,QWORD PTR [rbx+0x60]
   140027b3d:	movzx  esi,WORD PTR [rax+rcx*2]
   140027b41:	mov    rcx,QWORD PTR [rbx+0x68]
   140027b45:	movzx  eax,WORD PTR [rbx+0x94]
   140027b4c:	mov    WORD PTR [rcx+rdx*2],ax
   140027b50:	test   esi,esi
   140027b52:	mov    eax,DWORD PTR [rbx+0x88]
   140027b58:	mov    DWORD PTR [rbx+0x88],r13d
   140027b5f:	mov    DWORD PTR [rbx+0xa0],eax
   140027b65:	mov    eax,DWORD PTR [rbx+0x98]
   140027b6b:	mov    DWORD PTR [rbx+0x8c],eax
   140027b71:	je     0x140027c0a
   140027b77:	mov    eax,DWORD PTR [rbx+0xa8]
   140027b7d:	cmp    DWORD PTR [rbx+0xa0],eax
   140027b83:	jae    0x140027c0a
   140027b89:	mov    ecx,DWORD PTR [rbx+0x94]
   140027b8f:	mov    eax,DWORD PTR [rbx+0x44]
   140027b92:	sub    ecx,esi
   140027b94:	sub    eax,0x106
   140027b99:	cmp    ecx,eax
   140027b9b:	ja     0x140027c0a
   140027b9d:	mov    eax,DWORD PTR [rbx+0xb0]
   140027ba3:	cmp    eax,r13d
   140027ba6:	je     0x140027bbf
   140027ba8:	cmp    eax,0x3
   140027bab:	je     0x140027bbf
   140027bad:	mov    edx,esi
   140027baf:	mov    rcx,rbx
   140027bb2:	call   0x14002a9c0
   140027bb7:	mov    DWORD PTR [rbx+0x88],eax
   140027bbd:	jmp    0x140027bd8
   140027bbf:	cmp    eax,0x3
   140027bc2:	jne    0x140027bd8
   140027bc4:	cmp    ecx,ebp
   140027bc6:	jne    0x140027bd8
   140027bc8:	mov    edx,esi
   140027bca:	mov    rcx,rbx
   140027bcd:	call   0x140027250
   140027bd2:	mov    DWORD PTR [rbx+0x88],eax
   140027bd8:	mov    eax,DWORD PTR [rbx+0x88]
   140027bde:	cmp    eax,0x5
   140027be1:	ja     0x140027c0a
   140027be3:	cmp    DWORD PTR [rbx+0xb0],ebp
   140027be9:	je     0x140027c03
   140027beb:	cmp    eax,0x3
   140027bee:	jne    0x140027c0a
   140027bf0:	mov    eax,DWORD PTR [rbx+0x94]
   140027bf6:	sub    eax,DWORD PTR [rbx+0x98]
   140027bfc:	cmp    eax,0x1000
   140027c01:	jbe    0x140027c0a
   140027c03:	mov    DWORD PTR [rbx+0x88],r13d
   140027c0a:	mov    eax,DWORD PTR [rbx+0xa0]
   140027c10:	cmp    eax,0x3
   140027c13:	jb     0x140027e10
   140027c19:	cmp    DWORD PTR [rbx+0x88],eax
   140027c1f:	ja     0x140027e10
   140027c25:	mov    ecx,DWORD PTR [rbx+0x94]
   140027c2b:	mov    eax,DWORD PTR [rbx+0x9c]
   140027c31:	movzx  edx,BYTE PTR [rbx+0xa0]
   140027c38:	lea    r10d,[rcx+rax*1-0x3]
   140027c3d:	mov    rax,QWORD PTR [rbx+0x16f8]
   140027c44:	movzx  r8d,cx
   140027c48:	sub    r8w,WORD PTR [rbx+0x8c]
   140027c50:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027c56:	sub    dl,0x3
   140027c59:	sub    r8w,bp
   140027c5d:	mov    WORD PTR [rax+rcx*2],r8w
   140027c62:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027c68:	mov    rax,QWORD PTR [rbx+0x16e8]
   140027c6f:	mov    BYTE PTR [rcx+rax*1],dl
   140027c72:	add    DWORD PTR [rbx+0x16f4],ebp
   140027c78:	movzx  eax,dl
   140027c7b:	movzx  eax,BYTE PTR [rax+r14*1+0x4d7c0]
   140027c84:	add    r8w,0xffff
   140027c8a:	add    WORD PTR [rbx+rax*4+0x4c0],bp
   140027c92:	cmp    r8w,0x100
   140027c98:	jae    0x140027ca9
   140027c9a:	movzx  eax,r8w
   140027c9e:	movzx  ecx,BYTE PTR [rax+r14*1+0x4d5c0]
   140027ca7:	jmp    0x140027cba
   140027ca9:	movzx  eax,r8w
   140027cad:	shr    rax,0x7
   140027cb1:	movzx  ecx,BYTE PTR [rax+r14*1+0x4d6c0]
   140027cba:	movsxd rax,ecx
   140027cbd:	mov    r11d,edi
   140027cc0:	add    WORD PTR [rbx+rax*4+0x9b0],bp
   140027cc8:	mov    ecx,DWORD PTR [rbx+0xa0]
   140027cce:	mov    eax,DWORD PTR [rbx+0x16f0]
   140027cd4:	sub    eax,ebp
   140027cd6:	cmp    DWORD PTR [rbx+0x16f4],eax
   140027cdc:	mov    eax,ebp
   140027cde:	sete   r11b
   140027ce2:	sub    eax,ecx
   140027ce4:	add    DWORD PTR [rbx+0x9c],eax
   140027cea:	lea    eax,[rcx-0x2]
   140027ced:	mov    DWORD PTR [rbx+0xa0],eax
   140027cf3:	nop
   140027cf4:	data16 data16 xchg ax,ax
   140027cf8:	data16 data16 xchg ax,ax
   140027cfc:	data16 data16 xchg ax,ax
   140027d00:	add    DWORD PTR [rbx+0x94],ebp
   140027d06:	mov    r8d,DWORD PTR [rbx+0x94]
   140027d0d:	cmp    r8d,r10d
   140027d10:	ja     0x140027d73
   140027d12:	mov    rax,QWORD PTR [rbx+0x50]
   140027d16:	mov    rdx,QWORD PTR [rbx+0x68]
   140027d1a:	lea    ecx,[r8+0x2]
   140027d1e:	movzx  r9d,BYTE PTR [rcx+rax*1]
   140027d23:	mov    eax,DWORD PTR [rbx+0x70]
   140027d26:	mov    ecx,DWORD PTR [rbx+0x80]
   140027d2c:	shl    eax,cl
   140027d2e:	mov    rcx,QWORD PTR [rbx+0x60]
   140027d32:	xor    r9d,eax
   140027d35:	mov    eax,DWORD PTR [rbx+0x4c]
   140027d38:	and    r9d,DWORD PTR [rbx+0x7c]
   140027d3c:	and    r8,rax
   140027d3f:	mov    DWORD PTR [rbx+0x70],r9d
   140027d43:	movzx  eax,WORD PTR [rdx+r9*2]
   140027d48:	mov    WORD PTR [rcx+r8*2],ax
   140027d4d:	mov    eax,DWORD PTR [rbx+0x4c]
   140027d50:	mov    ecx,DWORD PTR [rbx+0x94]
   140027d56:	mov    edx,DWORD PTR [rbx+0x70]
   140027d59:	and    rcx,rax
   140027d5c:	mov    rax,QWORD PTR [rbx+0x60]
   140027d60:	movzx  esi,WORD PTR [rax+rcx*2]
   140027d64:	mov    rcx,QWORD PTR [rbx+0x68]
   140027d68:	movzx  eax,WORD PTR [rbx+0x94]
   140027d6f:	mov    WORD PTR [rcx+rdx*2],ax
   140027d73:	add    DWORD PTR [rbx+0xa0],0xffffffff
   140027d7a:	jne    0x140027d00
   140027d7c:	add    DWORD PTR [rbx+0x94],ebp
   140027d82:	test   r11d,r11d
   140027d85:	mov    r8d,DWORD PTR [rbx+0x94]
   140027d8c:	mov    DWORD PTR [rbx+0x90],edi
   140027d92:	mov    DWORD PTR [rbx+0x88],r13d
   140027d99:	je     0x140027ab0
   140027d9f:	mov    eax,DWORD PTR [rbx+0x84]
   140027da5:	test   eax,eax
   140027da7:	js     0x140027db2
   140027da9:	mov    rdx,rax
   140027dac:	add    rdx,QWORD PTR [rbx+0x50]
   140027db0:	jmp    0x140027db5
   140027db2:	mov    rdx,rdi
   140027db5:	sub    r8d,eax
   140027db8:	xor    r9d,r9d
   140027dbb:	mov    rcx,rbx
   140027dbe:	call   0x14002a770
   140027dc3:	mov    r11d,DWORD PTR [rbx+0x94]
   140027dca:	mov    rcx,QWORD PTR [rbx]
   140027dcd:	mov    DWORD PTR [rbx+0x84],r11d
   140027dd4:	call   0x140026690
   140027dd9:	mov    r11,QWORD PTR [rbx]
   140027ddc:	cmp    DWORD PTR [r11+0x18],edi
   140027de0:	jne    0x140027ab0
   140027de6:	xor    eax,eax
   140027de8:	mov    r14,QWORD PTR [rsp+0x20]
   140027ded:	mov    r13,QWORD PTR [rsp+0x28]
   140027df2:	mov    r12,QWORD PTR [rsp+0x30]
   140027df7:	mov    rdi,QWORD PTR [rsp+0x58]
   140027dfc:	mov    rsi,QWORD PTR [rsp+0x50]
   140027e01:	mov    rbp,QWORD PTR [rsp+0x48]
   140027e06:	mov    rbx,QWORD PTR [rsp+0x40]
   140027e0b:	add    rsp,0x38
   140027e0f:	ret    
   140027e10:	cmp    DWORD PTR [rbx+0x90],edi
   140027e16:	je     0x140027ecb
   140027e1c:	mov    ecx,DWORD PTR [rbx+0x94]
   140027e22:	mov    rax,QWORD PTR [rbx+0x50]
   140027e26:	add    ecx,0xffffffff
   140027e29:	movzx  edx,BYTE PTR [rcx+rax*1]
   140027e2d:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027e33:	mov    rax,QWORD PTR [rbx+0x16f8]
   140027e3a:	mov    WORD PTR [rax+rcx*2],di
   140027e3e:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027e44:	mov    rax,QWORD PTR [rbx+0x16e8]
   140027e4b:	mov    BYTE PTR [rcx+rax*1],dl
   140027e4e:	add    DWORD PTR [rbx+0x16f4],ebp
   140027e54:	add    WORD PTR [rbx+rdx*4+0xbc],bp
   140027e5c:	mov    eax,DWORD PTR [rbx+0x16f0]
   140027e62:	sub    eax,ebp
   140027e64:	cmp    DWORD PTR [rbx+0x16f4],eax
   140027e6a:	jne    0x140027ead
   140027e6c:	mov    eax,DWORD PTR [rbx+0x84]
   140027e72:	test   eax,eax
   140027e74:	js     0x140027e7f
   140027e76:	mov    rdx,rax
   140027e79:	add    rdx,QWORD PTR [rbx+0x50]
   140027e7d:	jmp    0x140027e82
   140027e7f:	mov    rdx,rdi
   140027e82:	mov    r8d,DWORD PTR [rbx+0x94]
   140027e89:	xor    r9d,r9d
   140027e8c:	mov    rcx,rbx
   140027e8f:	sub    r8d,eax
   140027e92:	call   0x14002a770
   140027e97:	mov    r11d,DWORD PTR [rbx+0x94]
   140027e9e:	mov    rcx,QWORD PTR [rbx]
   140027ea1:	mov    DWORD PTR [rbx+0x84],r11d
   140027ea8:	call   0x140026690
   140027ead:	mov    rax,QWORD PTR [rbx]
   140027eb0:	add    DWORD PTR [rbx+0x94],ebp
   140027eb6:	add    DWORD PTR [rbx+0x9c],0xffffffff
   140027ebd:	cmp    DWORD PTR [rax+0x18],edi
   140027ec0:	jne    0x140027ab0
   140027ec6:	jmp    0x140027de6
   140027ecb:	add    DWORD PTR [rbx+0x94],ebp
   140027ed1:	add    DWORD PTR [rbx+0x9c],0xffffffff
   140027ed8:	mov    DWORD PTR [rbx+0x90],ebp
   140027ede:	jmp    0x140027ab0
   140027ee3:	cmp    DWORD PTR [rbx+0x90],edi
   140027ee9:	je     0x140027f31
   140027eeb:	mov    ecx,DWORD PTR [rbx+0x94]
   140027ef1:	mov    rax,QWORD PTR [rbx+0x50]
   140027ef5:	add    ecx,0xffffffff
   140027ef8:	movzx  edx,BYTE PTR [rcx+rax*1]
   140027efc:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027f02:	mov    rax,QWORD PTR [rbx+0x16f8]
   140027f09:	mov    WORD PTR [rax+rcx*2],di
   140027f0d:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140027f13:	mov    rax,QWORD PTR [rbx+0x16e8]
   140027f1a:	mov    BYTE PTR [rcx+rax*1],dl
   140027f1d:	add    DWORD PTR [rbx+0x16f4],ebp
   140027f23:	add    WORD PTR [rbx+rdx*4+0xbc],bp
   140027f2b:	mov    DWORD PTR [rbx+0x90],edi
   140027f31:	mov    eax,DWORD PTR [rbx+0x84]
   140027f37:	test   eax,eax
   140027f39:	js     0x140027f44
   140027f3b:	mov    rdx,rax
   140027f3e:	add    rdx,QWORD PTR [rbx+0x50]
   140027f42:	jmp    0x140027f47
   140027f44:	mov    rdx,rdi
   140027f47:	mov    r8d,DWORD PTR [rbx+0x94]
   140027f4e:	mov    r9d,edi
   140027f51:	cmp    r12d,0x4
   140027f55:	sete   r9b
   140027f59:	sub    r8d,eax
   140027f5c:	mov    rcx,rbx
   140027f5f:	call   0x14002a770
   140027f64:	mov    r11d,DWORD PTR [rbx+0x94]
   140027f6b:	mov    rcx,QWORD PTR [rbx]
   140027f6e:	mov    DWORD PTR [rbx+0x84],r11d
   140027f75:	call   0x140026690
   140027f7a:	mov    r11,QWORD PTR [rbx]
   140027f7d:	cmp    DWORD PTR [r11+0x18],edi
   140027f81:	jne    0x140027f92
   140027f83:	cmp    r12d,0x4
   140027f87:	cmove  edi,r13d
   140027f8b:	mov    eax,edi
   140027f8d:	jmp    0x140027de8
   140027f92:	mov    eax,0x3
   140027f97:	cmp    r12d,0x4
   140027f9b:	cmove  ebp,eax
   140027f9e:	mov    eax,ebp
   140027fa0:	jmp    0x140027de8
   140027fa5:	int3   
   140027fa6:	int3   
   140027fa7:	int3   
   140027fa8:	int3   
   140027fa9:	int3   
   140027faa:	int3   
   140027fab:	int3   
   140027fac:	int3   
   140027fad:	int3   
   140027fae:	int3   
   140027faf:	int3   
   140027fb0:	sub    rsp,0x28
   140027fb4:	test   rcx,rcx
   140027fb7:	mov    QWORD PTR [rsp+0x38],rbx
   140027fbc:	mov    QWORD PTR [rsp+0x48],rdi
   140027fc1:	mov    rbx,rcx
   140027fc4:	je     0x14002807c
   140027fca:	mov    rdi,QWORD PTR [rcx+0x28]
   140027fce:	test   rdi,rdi
   140027fd1:	je     0x14002807c
   140027fd7:	cmp    QWORD PTR [rcx+0x30],0x0
   140027fdc:	je     0x14002807c
   140027fe2:	cmp    QWORD PTR [rcx+0x38],0x0
   140027fe7:	je     0x14002807c
   140027fed:	mov    DWORD PTR [rcx+0x48],0x2
   140027ff4:	mov    QWORD PTR [rsp+0x40],rsi
   140027ff9:	xor    esi,esi
   140027ffb:	mov    DWORD PTR [rcx+0x1c],esi
   140027ffe:	mov    DWORD PTR [rcx+0xc],esi
   140028001:	mov    QWORD PTR [rcx+0x20],rsi
   140028005:	mov    rax,QWORD PTR [rdi+0x10]
   140028009:	mov    DWORD PTR [rdi+0x28],esi
   14002800c:	mov    QWORD PTR [rdi+0x20],rax
   140028010:	mov    eax,DWORD PTR [rdi+0x2c]
   140028013:	test   eax,eax
   140028015:	jns    0x14002801c
   140028017:	neg    eax
   140028019:	mov    DWORD PTR [rdi+0x2c],eax
   14002801c:	mov    ecx,DWORD PTR [rdi+0x2c]
   14002801f:	mov    eax,0x71
   140028024:	mov    edx,0x2a
   140028029:	test   ecx,ecx
   14002802b:	cmovne eax,edx
   14002802e:	cmp    ecx,0x2
   140028031:	mov    DWORD PTR [rdi+0x8],eax
   140028034:	jne    0x140028044
   140028036:	xor    r8d,r8d
   140028039:	xor    edx,edx
   14002803b:	xor    ecx,ecx
   14002803d:	call   0x140028850
   140028042:	jmp    0x140028050
   140028044:	xor    r8d,r8d
   140028047:	xor    edx,edx
   140028049:	xor    ecx,ecx
   14002804b:	call   0x140028880
   140028050:	mov    DWORD PTR [rbx+0x4c],eax
   140028053:	mov    rcx,rdi
   140028056:	mov    DWORD PTR [rdi+0x40],esi
   140028059:	call   0x14002a060
   14002805e:	mov    rcx,rdi
   140028061:	call   0x140027190
   140028066:	mov    rsi,QWORD PTR [rsp+0x40]
   14002806b:	xor    eax,eax
   14002806d:	mov    rdi,QWORD PTR [rsp+0x48]
   140028072:	mov    rbx,QWORD PTR [rsp+0x38]
   140028077:	add    rsp,0x28
   14002807b:	ret    
   14002807c:	mov    rdi,QWORD PTR [rsp+0x48]
   140028081:	mov    rbx,QWORD PTR [rsp+0x38]
   140028086:	mov    eax,0xfffffffe
   14002808b:	add    rsp,0x28
   14002808f:	ret    
   140028090:	sub    rsp,0x68
   140028094:	mov    rax,QWORD PTR [rsp+0xa0]
   14002809c:	mov    QWORD PTR [rsp+0x60],rbx
   1400280a1:	mov    QWORD PTR [rsp+0x58],rbp
   1400280a6:	test   rax,rax
   1400280a9:	mov    QWORD PTR [rsp+0x48],rdi
   1400280ae:	mov    QWORD PTR [rsp+0x38],r13
   1400280b3:	mov    QWORD PTR [rsp+0x30],r14
   1400280b8:	mov    r14d,0x1
   1400280be:	mov    edi,r9d
   1400280c1:	mov    ebp,edx
   1400280c3:	mov    rbx,rcx
   1400280c6:	mov    r13d,r14d
   1400280c9:	je     0x140028329
   1400280cf:	cmp    BYTE PTR [rax],0x31
   1400280d2:	jne    0x140028329
   1400280d8:	cmp    DWORD PTR [rsp+0xa8],0x58
   1400280e0:	jne    0x140028329
   1400280e6:	test   rcx,rcx
   1400280e9:	jne    0x1400280f3
   1400280eb:	lea    eax,[rcx-0x2]
   1400280ee:	jmp    0x1400282e3
   1400280f3:	xor    ecx,ecx
   1400280f5:	cmp    QWORD PTR [rbx+0x30],rcx
   1400280f9:	mov    QWORD PTR [rbx+0x20],rcx
   1400280fd:	jne    0x14002810e
   1400280ff:	lea    rax,[rip+0x75a]        # 0x140028860
   140028106:	mov    QWORD PTR [rbx+0x40],rcx
   14002810a:	mov    QWORD PTR [rbx+0x30],rax
   14002810e:	cmp    QWORD PTR [rbx+0x38],rcx
   140028112:	jne    0x14002811f
   140028114:	lea    rax,[rip+0x755]        # 0x140028870
   14002811b:	mov    QWORD PTR [rbx+0x38],rax
   14002811f:	cmp    edx,0xffffffff
   140028122:	mov    eax,0x6
   140028127:	cmove  ebp,eax
   14002812a:	test   r9d,r9d
   14002812d:	jns    0x140028136
   14002812f:	mov    r13d,ecx
   140028132:	neg    edi
   140028134:	jmp    0x140028145
   140028136:	cmp    r9d,0xf
   14002813a:	jle    0x140028145
   14002813c:	mov    r13d,0x2
   140028142:	sub    edi,0x10
   140028145:	mov    QWORD PTR [rsp+0x40],r12
   14002814a:	mov    QWORD PTR [rsp+0x28],r15
   14002814f:	mov    r15d,DWORD PTR [rsp+0x90]
   140028157:	lea    eax,[r15-0x1]
   14002815b:	cmp    eax,0x8
   14002815e:	ja     0x140028322
   140028164:	cmp    r8d,0x8
   140028168:	jne    0x140028322
   14002816e:	lea    eax,[rdi-0x8]
   140028171:	cmp    eax,0x7
   140028174:	ja     0x140028322
   14002817a:	cmp    ebp,0x9
   14002817d:	ja     0x140028322
   140028183:	mov    r12d,DWORD PTR [rsp+0x98]
   14002818b:	cmp    r12d,0x4
   14002818f:	ja     0x140028322
   140028195:	mov    rcx,QWORD PTR [rbx+0x40]
   140028199:	cmp    edi,r8d
   14002819c:	mov    eax,0x9
   1400281a1:	mov    r8d,0x1718
   1400281a7:	mov    edx,r14d
   1400281aa:	mov    QWORD PTR [rsp+0x50],rsi
   1400281af:	cmove  edi,eax
   1400281b2:	call   QWORD PTR [rbx+0x30]
   1400281b5:	test   rax,rax
   1400281b8:	mov    rsi,rax
   1400281bb:	je     0x14002831b
   1400281c1:	mov    QWORD PTR [rbx+0x28],rax
   1400281c5:	mov    QWORD PTR [rax],rbx
   1400281c8:	mov    DWORD PTR [rax+0x2c],r13d
   1400281cc:	mov    QWORD PTR [rax+0x30],0x0
   1400281d4:	mov    DWORD PTR [rax+0x48],edi
   1400281d7:	mov    ecx,edi
   1400281d9:	mov    r9d,r14d
   1400281dc:	mov    r8d,0x2
   1400281e2:	shl    r9d,cl
   1400281e5:	lea    ecx,[r15+0x7]
   1400281e9:	mov    DWORD PTR [rax+0x44],r9d
   1400281ed:	lea    eax,[r9-0x1]
   1400281f1:	mov    DWORD PTR [rsi+0x78],ecx
   1400281f4:	mov    DWORD PTR [rsi+0x4c],eax
   1400281f7:	mov    eax,r14d
   1400281fa:	shl    eax,cl
   1400281fc:	add    ecx,0x2
   1400281ff:	mov    DWORD PTR [rsi+0x74],eax
   140028202:	add    eax,0xffffffff
   140028205:	mov    DWORD PTR [rsi+0x7c],eax
   140028208:	mov    eax,0xaaaaaaab
   14002820d:	mul    ecx
   14002820f:	shr    edx,1
   140028211:	mov    DWORD PTR [rsi+0x80],edx
   140028217:	mov    rcx,QWORD PTR [rbx+0x40]
   14002821b:	mov    edx,r9d
   14002821e:	call   QWORD PTR [rbx+0x30]
   140028221:	mov    edx,DWORD PTR [rsi+0x44]
   140028224:	mov    r8d,0x2
   14002822a:	mov    QWORD PTR [rsi+0x50],rax
   14002822e:	mov    rcx,QWORD PTR [rbx+0x40]
   140028232:	call   QWORD PTR [rbx+0x30]
   140028235:	mov    edx,DWORD PTR [rsi+0x74]
   140028238:	mov    r8d,0x2
   14002823e:	mov    QWORD PTR [rsi+0x60],rax
   140028242:	mov    rcx,QWORD PTR [rbx+0x40]
   140028246:	call   QWORD PTR [rbx+0x30]
   140028249:	lea    ecx,[r15+0x6]
   14002824d:	mov    r8d,0x4
   140028253:	shl    r14d,cl
   140028256:	mov    QWORD PTR [rsi+0x68],rax
   14002825a:	mov    DWORD PTR [rsi+0x16f0],r14d
   140028261:	mov    rcx,QWORD PTR [rbx+0x40]
   140028265:	mov    edx,r14d
   140028268:	call   QWORD PTR [rbx+0x30]
   14002826b:	cmp    QWORD PTR [rsi+0x50],0x0
   140028270:	mov    r11,rax
   140028273:	mov    QWORD PTR [rsi+0x10],rax
   140028277:	mov    eax,DWORD PTR [rsi+0x16f0]
   14002827d:	lea    ecx,[rax*4+0x0]
   140028284:	mov    DWORD PTR [rsi+0x18],ecx
   140028287:	je     0x140028301
   140028289:	cmp    QWORD PTR [rsi+0x60],0x0
   14002828e:	je     0x140028301
   140028290:	cmp    QWORD PTR [rsi+0x68],0x0
   140028295:	je     0x140028301
   140028297:	test   r11,r11
   14002829a:	je     0x140028301
   14002829c:	mov    rcx,rax
   14002829f:	shr    rax,1
   1400282a2:	mov    DWORD PTR [rsi+0xac],ebp
   1400282a8:	lea    rax,[r11+rax*2]
   1400282ac:	mov    DWORD PTR [rsi+0xb0],r12d
   1400282b3:	mov    BYTE PTR [rsi+0x3c],0x8
   1400282b7:	mov    QWORD PTR [rsi+0x16f8],rax
   1400282be:	lea    rax,[r11+rcx*2]
   1400282c2:	add    rcx,rax
   1400282c5:	mov    QWORD PTR [rsi+0x16e8],rcx
   1400282cc:	mov    rcx,rbx
   1400282cf:	call   0x140027fb0
   1400282d4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400282d9:	mov    r12,QWORD PTR [rsp+0x40]
   1400282de:	mov    r15,QWORD PTR [rsp+0x28]
   1400282e3:	mov    r14,QWORD PTR [rsp+0x30]
   1400282e8:	mov    r13,QWORD PTR [rsp+0x38]
   1400282ed:	mov    rdi,QWORD PTR [rsp+0x48]
   1400282f2:	mov    rbp,QWORD PTR [rsp+0x58]
   1400282f7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400282fc:	add    rsp,0x68
   140028300:	ret    
   140028301:	mov    DWORD PTR [rsi+0x8],0x29a
   140028308:	mov    rax,QWORD PTR [rip+0x24c21]        # 0x14004cf30
   14002830f:	mov    rcx,rbx
   140028312:	mov    QWORD PTR [rbx+0x20],rax
   140028316:	call   0x140026ff0
   14002831b:	mov    eax,0xfffffffc
   140028320:	jmp    0x1400282d4
   140028322:	mov    eax,0xfffffffe
   140028327:	jmp    0x1400282d9
   140028329:	mov    eax,0xfffffffa
   14002832e:	jmp    0x1400282e3
   140028330:	test   rcx,rcx
   140028333:	je     0x14002838f
   140028335:	mov    rdx,QWORD PTR [rcx+0x28]
   140028339:	test   rdx,rdx
   14002833c:	je     0x14002838f
   14002833e:	xor    eax,eax
   140028340:	mov    DWORD PTR [rdx+0x1c],eax
   140028343:	mov    DWORD PTR [rcx+0x1c],eax
   140028346:	mov    DWORD PTR [rcx+0xc],eax
   140028349:	mov    QWORD PTR [rcx+0x20],rax
   14002834d:	mov    DWORD PTR [rcx+0x4c],0x1
   140028354:	mov    DWORD PTR [rdx],eax
   140028356:	mov    DWORD PTR [rdx+0x4],eax
   140028359:	mov    DWORD PTR [rdx+0xc],eax
   14002835c:	mov    QWORD PTR [rdx+0x20],rax
   140028360:	mov    DWORD PTR [rdx+0x2c],eax
   140028363:	mov    DWORD PTR [rdx+0x30],eax
   140028366:	mov    DWORD PTR [rdx+0x34],eax
   140028369:	mov    DWORD PTR [rdx+0x40],eax
   14002836c:	mov    DWORD PTR [rdx+0x44],eax
   14002836f:	lea    rax,[rdx+0x548]
   140028376:	mov    QWORD PTR [rdx+0x80],rax
   14002837d:	mov    QWORD PTR [rdx+0x60],rax
   140028381:	mov    QWORD PTR [rdx+0x58],rax
   140028385:	xor    eax,eax
   140028387:	mov    DWORD PTR [rdx+0x14],0x8000
   14002838e:	ret    
   14002838f:	mov    eax,0xfffffffe
   140028394:	ret    
   140028395:	int3   
   140028396:	int3   
   140028397:	int3   
   140028398:	int3   
   140028399:	int3   
   14002839a:	int3   
   14002839b:	int3   
   14002839c:	int3   
   14002839d:	int3   
   14002839e:	int3   
   14002839f:	int3   
   1400283a0:	sub    rsp,0x28
   1400283a4:	test   r8,r8
   1400283a7:	mov    QWORD PTR [rsp+0x38],rbx
   1400283ac:	mov    QWORD PTR [rsp+0x48],rdi
   1400283b1:	mov    edi,edx
   1400283b3:	mov    rbx,rcx
   1400283b6:	je     0x1400284ba
   1400283bc:	cmp    BYTE PTR [r8],0x31
   1400283c0:	jne    0x1400284ba
   1400283c6:	cmp    r9d,0x58
   1400283ca:	jne    0x1400284ba
   1400283d0:	test   rcx,rcx
   1400283d3:	jne    0x1400283e7
   1400283d5:	lea    eax,[rcx-0x2]
   1400283d8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400283dd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400283e2:	add    rsp,0x28
   1400283e6:	ret    
   1400283e7:	mov    QWORD PTR [rsp+0x40],rsi
   1400283ec:	xor    esi,esi
   1400283ee:	cmp    QWORD PTR [rcx+0x30],rsi
   1400283f2:	mov    QWORD PTR [rcx+0x20],rsi
   1400283f6:	jne    0x140028407
   1400283f8:	lea    rax,[rip+0x461]        # 0x140028860
   1400283ff:	mov    QWORD PTR [rcx+0x40],rsi
   140028403:	mov    QWORD PTR [rcx+0x30],rax
   140028407:	cmp    QWORD PTR [rcx+0x38],rsi
   14002840b:	jne    0x140028418
   14002840d:	lea    rax,[rip+0x45c]        # 0x140028870
   140028414:	mov    QWORD PTR [rcx+0x38],rax
   140028418:	mov    rcx,QWORD PTR [rcx+0x40]
   14002841c:	mov    edx,0x1
   140028421:	mov    r8d,0x2548
   140028427:	call   QWORD PTR [rbx+0x30]
   14002842a:	test   rax,rax
   14002842d:	mov    rdx,rax
   140028430:	jne    0x140028449
   140028432:	lea    eax,[rdx-0x4]
   140028435:	mov    rsi,QWORD PTR [rsp+0x40]
   14002843a:	mov    rdi,QWORD PTR [rsp+0x48]
   14002843f:	mov    rbx,QWORD PTR [rsp+0x38]
   140028444:	add    rsp,0x28
   140028448:	ret    
   140028449:	test   edi,edi
   14002844b:	mov    QWORD PTR [rbx+0x28],rax
   14002844f:	jns    0x140028458
   140028451:	mov    DWORD PTR [rax+0x8],esi
   140028454:	neg    edi
   140028456:	jmp    0x14002846b
   140028458:	mov    eax,edi
   14002845a:	sar    eax,0x4
   14002845d:	add    eax,0x1
   140028460:	cmp    edi,0x30
   140028463:	mov    DWORD PTR [rdx+0x8],eax
   140028466:	jge    0x14002846b
   140028468:	and    edi,0xf
   14002846b:	lea    eax,[rdi-0x8]
   14002846e:	cmp    eax,0x7
   140028471:	ja     0x140028496
   140028473:	mov    rcx,rbx
   140028476:	mov    DWORD PTR [rdx+0x28],edi
   140028479:	mov    QWORD PTR [rdx+0x38],rsi
   14002847d:	call   0x140028330
   140028482:	mov    rsi,QWORD PTR [rsp+0x40]
   140028487:	mov    rdi,QWORD PTR [rsp+0x48]
   14002848c:	mov    rbx,QWORD PTR [rsp+0x38]
   140028491:	add    rsp,0x28
   140028495:	ret    
   140028496:	mov    rcx,QWORD PTR [rbx+0x40]
   14002849a:	call   QWORD PTR [rbx+0x38]
   14002849d:	mov    QWORD PTR [rbx+0x28],rsi
   1400284a1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400284a6:	mov    eax,0xfffffffe
   1400284ab:	mov    rdi,QWORD PTR [rsp+0x48]
   1400284b0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400284b5:	add    rsp,0x28
   1400284b9:	ret    
   1400284ba:	mov    rdi,QWORD PTR [rsp+0x48]
   1400284bf:	mov    rbx,QWORD PTR [rsp+0x38]
   1400284c4:	mov    eax,0xfffffffa
   1400284c9:	add    rsp,0x28
   1400284cd:	ret    
   1400284ce:	int3   
   1400284cf:	int3   
   1400284d0:	rex push rbx
   1400284d2:	sub    rsp,0x20
   1400284d6:	test   rcx,rcx
   1400284d9:	mov    rbx,rcx
   1400284dc:	je     0x14002851b
   1400284de:	mov    rax,QWORD PTR [rcx+0x28]
   1400284e2:	test   rax,rax
   1400284e5:	je     0x14002851b
   1400284e7:	mov    r8,QWORD PTR [rcx+0x38]
   1400284eb:	test   r8,r8
   1400284ee:	je     0x14002851b
   1400284f0:	mov    rdx,QWORD PTR [rax+0x38]
   1400284f4:	test   rdx,rdx
   1400284f7:	je     0x140028500
   1400284f9:	mov    rcx,QWORD PTR [rcx+0x40]
   1400284fd:	call   r8
   140028500:	mov    rdx,QWORD PTR [rbx+0x28]
   140028504:	mov    rcx,QWORD PTR [rbx+0x40]
   140028508:	call   QWORD PTR [rbx+0x38]
   14002850b:	mov    QWORD PTR [rbx+0x28],0x0
   140028513:	xor    eax,eax
   140028515:	add    rsp,0x20
   140028519:	pop    rbx
   14002851a:	ret    
   14002851b:	mov    eax,0xfffffffe
   140028520:	add    rsp,0x20
   140028524:	pop    rbx
   140028525:	ret    
   140028526:	int3   
   140028527:	int3   
   140028528:	int3   
   140028529:	int3   
   14002852a:	int3   
   14002852b:	int3   
   14002852c:	int3   
   14002852d:	int3   
   14002852e:	int3   
   14002852f:	int3   
   140028530:	test   r8d,r8d
   140028533:	mov    QWORD PTR [rsp+0x10],rbx
   140028538:	mov    r10d,ecx
   14002853b:	mov    QWORD PTR [rsp+0x18],rsi
   140028540:	mov    ebx,r8d
   140028543:	mov    r11,rdx
   140028546:	not    r10d
   140028549:	lea    rsi,[rip+0x22920]        # 0x14004ae70
   140028550:	je     0x140028578
   140028552:	test   r11b,0x3
   140028556:	je     0x140028578
   140028558:	movzx  ecx,BYTE PTR [r11]
   14002855c:	mov    eax,r10d
   14002855f:	add    r11,0x1
   140028563:	xor    cl,r10b
   140028566:	shr    eax,0x8
   140028569:	movzx  edx,cl
   14002856c:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140028570:	xor    r10d,eax
   140028573:	add    ebx,0xffffffff
   140028576:	jne    0x140028552
   140028578:	cmp    ebx,0x20
   14002857b:	jb     0x1400287af
   140028581:	mov    QWORD PTR [rsp+0x20],rdi
   140028586:	mov    edi,ebx
   140028588:	shr    rdi,0x5
   14002858c:	data16 data16 xchg ax,ax
   140028590:	xor    r10d,DWORD PTR [r11]
   140028593:	mov    eax,r10d
   140028596:	shr    rax,0x10
   14002859a:	movzx  edx,al
   14002859d:	mov    eax,r10d
   1400285a0:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400285a8:	shr    rax,0x8
   1400285ac:	movzx  ecx,al
   1400285af:	mov    eax,r10d
   1400285b2:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400285ba:	shr    rax,0x18
   1400285be:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400285c2:	movzx  eax,r10b
   1400285c6:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400285ce:	xor    r8d,DWORD PTR [r11+0x4]
   1400285d2:	mov    r9d,r8d
   1400285d5:	mov    eax,r8d
   1400285d8:	shr    rax,0x10
   1400285dc:	movzx  edx,al
   1400285df:	mov    eax,r8d
   1400285e2:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400285ea:	shr    rax,0x8
   1400285ee:	movzx  ecx,al
   1400285f1:	mov    rax,r9
   1400285f4:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400285fc:	shr    rax,0x18
   140028600:	xor    r8d,DWORD PTR [rsi+rax*4]
   140028604:	movzx  eax,r9b
   140028608:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140028610:	xor    r8d,DWORD PTR [r11+0x8]
   140028614:	mov    r9d,r8d
   140028617:	mov    eax,r8d
   14002861a:	shr    rax,0x10
   14002861e:	movzx  edx,al
   140028621:	mov    eax,r8d
   140028624:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   14002862c:	shr    rax,0x8
   140028630:	movzx  ecx,al
   140028633:	mov    rax,r9
   140028636:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14002863e:	shr    rax,0x18
   140028642:	xor    r8d,DWORD PTR [rsi+rax*4]
   140028646:	movzx  eax,r9b
   14002864a:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140028652:	xor    r8d,DWORD PTR [r11+0xc]
   140028656:	mov    r9d,r8d
   140028659:	mov    eax,r8d
   14002865c:	shr    rax,0x10
   140028660:	movzx  edx,al
   140028663:	mov    eax,r8d
   140028666:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   14002866e:	shr    rax,0x8
   140028672:	movzx  ecx,al
   140028675:	mov    rax,r9
   140028678:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140028680:	shr    rax,0x18
   140028684:	xor    r8d,DWORD PTR [rsi+rax*4]
   140028688:	movzx  eax,r9b
   14002868c:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140028694:	xor    r8d,DWORD PTR [r11+0x10]
   140028698:	mov    r9d,r8d
   14002869b:	mov    eax,r8d
   14002869e:	shr    rax,0x10
   1400286a2:	movzx  edx,al
   1400286a5:	mov    eax,r8d
   1400286a8:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400286b0:	shr    rax,0x8
   1400286b4:	movzx  ecx,al
   1400286b7:	mov    rax,r9
   1400286ba:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400286c2:	shr    rax,0x18
   1400286c6:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400286ca:	movzx  eax,r9b
   1400286ce:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400286d6:	xor    r8d,DWORD PTR [r11+0x14]
   1400286da:	mov    eax,r8d
   1400286dd:	mov    r9d,r8d
   1400286e0:	shr    rax,0x10
   1400286e4:	movzx  edx,al
   1400286e7:	mov    eax,r8d
   1400286ea:	shr    rax,0x8
   1400286ee:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400286f6:	movzx  ecx,al
   1400286f9:	mov    rax,r9
   1400286fc:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140028704:	shr    rax,0x18
   140028708:	add    r11,0x20
   14002870c:	xor    r8d,DWORD PTR [rsi+rax*4]
   140028710:	movzx  eax,r9b
   140028714:	add    ebx,0xffffffe0
   140028717:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14002871f:	xor    r8d,DWORD PTR [r11-0x8]
   140028723:	mov    r9d,r8d
   140028726:	mov    eax,r8d
   140028729:	shr    rax,0x10
   14002872d:	movzx  edx,al
   140028730:	mov    eax,r8d
   140028733:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   14002873b:	shr    rax,0x8
   14002873f:	movzx  ecx,al
   140028742:	mov    rax,r9
   140028745:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14002874d:	shr    rax,0x18
   140028751:	xor    r8d,DWORD PTR [rsi+rax*4]
   140028755:	movzx  eax,r9b
   140028759:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140028761:	xor    r8d,DWORD PTR [r11-0x4]
   140028765:	mov    eax,r8d
   140028768:	shr    rax,0x10
   14002876c:	movzx  edx,al
   14002876f:	mov    eax,r8d
   140028772:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   14002877a:	shr    rax,0x8
   14002877e:	movzx  ecx,al
   140028781:	mov    eax,r8d
   140028784:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   14002878c:	shr    rax,0x18
   140028790:	xor    r10d,DWORD PTR [rsi+rax*4]
   140028794:	movzx  eax,r8b
   140028798:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   1400287a0:	sub    rdi,0x1
   1400287a4:	jne    0x140028590
   1400287aa:	mov    rdi,QWORD PTR [rsp+0x20]
   1400287af:	cmp    ebx,0x4
   1400287b2:	jb     0x14002880e
   1400287b4:	mov    r9d,ebx
   1400287b7:	shr    r9,0x2
   1400287bb:	xchg   ax,ax
   1400287bd:	data16 xchg ax,ax
   1400287c0:	xor    r10d,DWORD PTR [r11]
   1400287c3:	add    r11,0x4
   1400287c7:	add    ebx,0xfffffffc
   1400287ca:	mov    r8d,r10d
   1400287cd:	mov    eax,r10d
   1400287d0:	shr    rax,0x10
   1400287d4:	movzx  edx,al
   1400287d7:	mov    eax,r10d
   1400287da:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   1400287e2:	shr    rax,0x8
   1400287e6:	movzx  ecx,al
   1400287e9:	mov    rax,r8
   1400287ec:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   1400287f4:	shr    rax,0x18
   1400287f8:	xor    r10d,DWORD PTR [rsi+rax*4]
   1400287fc:	movzx  eax,r8b
   140028800:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   140028808:	sub    r9,0x1
   14002880c:	jne    0x1400287c0
   14002880e:	test   ebx,ebx
   140028810:	je     0x140028832
   140028812:	movzx  ecx,BYTE PTR [r11]
   140028816:	mov    eax,r10d
   140028819:	add    r11,0x1
   14002881d:	xor    cl,r10b
   140028820:	shr    eax,0x8
   140028823:	movzx  edx,cl
   140028826:	mov    r10d,DWORD PTR [rsi+rdx*4]
   14002882a:	xor    r10d,eax
   14002882d:	add    ebx,0xffffffff
   140028830:	jne    0x140028812
   140028832:	mov    rsi,QWORD PTR [rsp+0x18]
   140028837:	mov    rbx,QWORD PTR [rsp+0x10]
   14002883c:	not    r10d
   14002883f:	mov    eax,r10d
   140028842:	ret    
   140028843:	int3   
   140028844:	int3   
   140028845:	int3   
   140028846:	int3   
   140028847:	int3   
   140028848:	int3   
   140028849:	int3   
   14002884a:	int3   
   14002884b:	int3   
   14002884c:	int3   
   14002884d:	int3   
   14002884e:	int3   
   14002884f:	int3   
   140028850:	test   rdx,rdx
   140028853:	jne    0x140028858
   140028855:	xor    eax,eax
   140028857:	ret    
   140028858:	jmp    0x140028530
   14002885d:	int3   
   14002885e:	int3   
   14002885f:	int3   
   140028860:	imul   edx,r8d
   140028864:	mov    ecx,edx
   140028866:	rex.W jmp QWORD PTR [rip+0x20f4b]        # 0x1400497b8
   14002886d:	int3   
   14002886e:	int3   
   14002886f:	int3   
   140028870:	mov    rcx,rdx
   140028873:	rex.W jmp QWORD PTR [rip+0x20f36]        # 0x1400497b0
   14002887a:	int3   
   14002887b:	int3   
   14002887c:	int3   
   14002887d:	int3   
   14002887e:	int3   
   14002887f:	int3   
   140028880:	rex push rbx
   140028882:	mov    r10d,ecx
   140028885:	mov    r11,rdx
   140028888:	movzx  r9d,cx
   14002888c:	shr    r10d,0x10
   140028890:	cmp    r8d,0x1
   140028894:	jne    0x1400288cf
   140028896:	movzx  eax,BYTE PTR [rdx]
   140028899:	add    r9d,eax
   14002889c:	cmp    r9d,0xfff1
   1400288a3:	jb     0x1400288ac
   1400288a5:	add    r9d,0xffff000f
   1400288ac:	add    r10d,r9d
   1400288af:	cmp    r10d,0xfff1
   1400288b6:	jb     0x140028b7c
   1400288bc:	add    r10d,0xffff000f
   1400288c3:	shl    r10d,0x10
   1400288c7:	or     r10d,r9d
   1400288ca:	mov    eax,r10d
   1400288cd:	pop    rbx
   1400288ce:	ret    
   1400288cf:	test   rdx,rdx
   1400288d2:	jne    0x1400288d9
   1400288d4:	lea    eax,[rdx+0x1]
   1400288d7:	pop    rbx
   1400288d8:	ret    
   1400288d9:	cmp    r8d,0x10
   1400288dd:	jae    0x14002892e
   1400288df:	test   r8d,r8d
   1400288e2:	je     0x140028904
   1400288e4:	data16 data16 xchg ax,ax
   1400288e8:	data16 data16 xchg ax,ax
   1400288ec:	data16 data16 xchg ax,ax
   1400288f0:	movzx  eax,BYTE PTR [r11]
   1400288f4:	add    r11,0x1
   1400288f8:	add    r9d,eax
   1400288fb:	add    r10d,r9d
   1400288fe:	add    r8d,0xffffffff
   140028902:	jne    0x1400288f0
   140028904:	cmp    r9d,0xfff1
   14002890b:	jb     0x140028914
   14002890d:	add    r9d,0xffff000f
   140028914:	mov    eax,0x80078071
   140028919:	mul    r10d
   14002891c:	shr    edx,0xf
   14002891f:	imul   edx,edx,0xf
   140028922:	lea    eax,[r10+rdx*1]
   140028926:	shl    eax,0x10
   140028929:	or     eax,r9d
   14002892c:	pop    rbx
   14002892d:	ret    
   14002892e:	cmp    r8d,0x15b0
   140028935:	jb     0x140028a4e
   14002893b:	mov    eax,0x5e6ea9af
   140028940:	mul    r8d
   140028943:	shr    edx,0xb
   140028946:	mov    ebx,edx
   140028948:	data16 data16 xchg ax,ax
   14002894c:	data16 data16 xchg ax,ax
   140028950:	add    r8d,0xffffea50
   140028957:	mov    ecx,0x15b
   14002895c:	data16 data16 xchg ax,ax
   140028960:	movzx  eax,BYTE PTR [r11]
   140028964:	add    r11,0x10
   140028968:	add    r9d,eax
   14002896b:	movzx  eax,BYTE PTR [r11-0xf]
   140028970:	add    r10d,r9d
   140028973:	add    r9d,eax
   140028976:	movzx  eax,BYTE PTR [r11-0xe]
   14002897b:	add    r10d,r9d
   14002897e:	add    r9d,eax
   140028981:	movzx  eax,BYTE PTR [r11-0xd]
   140028986:	add    r10d,r9d
   140028989:	add    r9d,eax
   14002898c:	movzx  eax,BYTE PTR [r11-0xc]
   140028991:	add    r10d,r9d
   140028994:	add    r9d,eax
   140028997:	movzx  eax,BYTE PTR [r11-0xb]
   14002899c:	add    r10d,r9d
   14002899f:	add    r9d,eax
   1400289a2:	movzx  eax,BYTE PTR [r11-0xa]
   1400289a7:	add    r10d,r9d
   1400289aa:	add    r9d,eax
   1400289ad:	movzx  eax,BYTE PTR [r11-0x9]
   1400289b2:	add    r10d,r9d
   1400289b5:	add    r9d,eax
   1400289b8:	movzx  eax,BYTE PTR [r11-0x8]
   1400289bd:	add    r10d,r9d
   1400289c0:	add    r9d,eax
   1400289c3:	movzx  eax,BYTE PTR [r11-0x7]
   1400289c8:	add    r10d,r9d
   1400289cb:	add    r9d,eax
   1400289ce:	movzx  eax,BYTE PTR [r11-0x6]
   1400289d3:	add    r10d,r9d
   1400289d6:	add    r9d,eax
   1400289d9:	movzx  eax,BYTE PTR [r11-0x5]
   1400289de:	add    r10d,r9d
   1400289e1:	add    r9d,eax
   1400289e4:	movzx  eax,BYTE PTR [r11-0x4]
   1400289e9:	add    r10d,r9d
   1400289ec:	add    r9d,eax
   1400289ef:	movzx  eax,BYTE PTR [r11-0x3]
   1400289f4:	add    r10d,r9d
   1400289f7:	add    r9d,eax
   1400289fa:	movzx  eax,BYTE PTR [r11-0x2]
   1400289ff:	add    r10d,r9d
   140028a02:	add    r9d,eax
   140028a05:	movzx  eax,BYTE PTR [r11-0x1]
   140028a0a:	add    r10d,r9d
   140028a0d:	add    r9d,eax
   140028a10:	add    r10d,r9d
   140028a13:	add    ecx,0xffffffff
   140028a16:	jne    0x140028960
   140028a1c:	mov    eax,0x80078071
   140028a21:	mul    r9d
   140028a24:	mov    eax,0x80078071
   140028a29:	shr    edx,0xf
   140028a2c:	imul   edx,edx,0xffff000f
   140028a32:	add    r9d,edx
   140028a35:	mul    r10d
   140028a38:	shr    edx,0xf
   140028a3b:	imul   edx,edx,0xffff000f
   140028a41:	add    r10d,edx
   140028a44:	sub    rbx,0x1
   140028a48:	jne    0x140028950
   140028a4e:	test   r8d,r8d
   140028a51:	je     0x140028b7c
   140028a57:	cmp    r8d,0x10
   140028a5b:	jb     0x140028b31
   140028a61:	mov    ecx,r8d
   140028a64:	shr    rcx,0x4
   140028a68:	data16 data16 xchg ax,ax
   140028a6c:	data16 data16 xchg ax,ax
   140028a70:	movzx  eax,BYTE PTR [r11]
   140028a74:	add    r8d,0xfffffff0
   140028a78:	add    r11,0x10
   140028a7c:	add    r9d,eax
   140028a7f:	movzx  eax,BYTE PTR [r11-0xf]
   140028a84:	add    r10d,r9d
   140028a87:	add    r9d,eax
   140028a8a:	movzx  eax,BYTE PTR [r11-0xe]
   140028a8f:	add    r10d,r9d
   140028a92:	add    r9d,eax
   140028a95:	movzx  eax,BYTE PTR [r11-0xd]
   140028a9a:	add    r10d,r9d
   140028a9d:	add    r9d,eax
   140028aa0:	movzx  eax,BYTE PTR [r11-0xc]
   140028aa5:	add    r10d,r9d
   140028aa8:	add    r9d,eax
   140028aab:	movzx  eax,BYTE PTR [r11-0xb]
   140028ab0:	add    r10d,r9d
   140028ab3:	add    r9d,eax
   140028ab6:	movzx  eax,BYTE PTR [r11-0xa]
   140028abb:	add    r10d,r9d
   140028abe:	add    r9d,eax
   140028ac1:	movzx  eax,BYTE PTR [r11-0x9]
   140028ac6:	add    r10d,r9d
   140028ac9:	add    r9d,eax
   140028acc:	movzx  eax,BYTE PTR [r11-0x8]
   140028ad1:	add    r10d,r9d
   140028ad4:	add    r9d,eax
   140028ad7:	movzx  eax,BYTE PTR [r11-0x7]
   140028adc:	add    r10d,r9d
   140028adf:	add    r9d,eax
   140028ae2:	movzx  eax,BYTE PTR [r11-0x6]
   140028ae7:	add    r10d,r9d
   140028aea:	add    r9d,eax
   140028aed:	movzx  eax,BYTE PTR [r11-0x5]
   140028af2:	add    r10d,r9d
   140028af5:	add    r9d,eax
   140028af8:	movzx  eax,BYTE PTR [r11-0x4]
   140028afd:	add    r10d,r9d
   140028b00:	add    r9d,eax
   140028b03:	movzx  eax,BYTE PTR [r11-0x3]
   140028b08:	add    r10d,r9d
   140028b0b:	add    r9d,eax
   140028b0e:	movzx  eax,BYTE PTR [r11-0x2]
   140028b13:	add    r10d,r9d
   140028b16:	add    r9d,eax
   140028b19:	movzx  eax,BYTE PTR [r11-0x1]
   140028b1e:	add    r10d,r9d
   140028b21:	add    r9d,eax
   140028b24:	add    r10d,r9d
   140028b27:	sub    rcx,0x1
   140028b2b:	jne    0x140028a70
   140028b31:	test   r8d,r8d
   140028b34:	je     0x140028b54
   140028b36:	data16 data16 xchg ax,ax
   140028b3a:	data16 xchg ax,ax
   140028b3d:	data16 xchg ax,ax
   140028b40:	movzx  eax,BYTE PTR [r11]
   140028b44:	add    r11,0x1
   140028b48:	add    r9d,eax
   140028b4b:	add    r10d,r9d
   140028b4e:	add    r8d,0xffffffff
   140028b52:	jne    0x140028b40
   140028b54:	mov    eax,0x80078071
   140028b59:	mul    r9d
   140028b5c:	mov    eax,0x80078071
   140028b61:	shr    edx,0xf
   140028b64:	imul   edx,edx,0xffff000f
   140028b6a:	add    r9d,edx
   140028b6d:	mul    r10d
   140028b70:	shr    edx,0xf
   140028b73:	imul   edx,edx,0xffff000f
   140028b79:	add    r10d,edx
   140028b7c:	shl    r10d,0x10
   140028b80:	or     r10d,r9d
   140028b83:	mov    eax,r10d
   140028b86:	pop    rbx
   140028b87:	ret    
   140028b88:	int3   
   140028b89:	int3   
   140028b8a:	int3   
   140028b8b:	int3   
   140028b8c:	int3   
   140028b8d:	int3   
   140028b8e:	int3   
   140028b8f:	int3   
   140028b90:	mov    r8,rcx
   140028b93:	lea    rax,[rcx+0xbc]
   140028b9a:	mov    edx,0x11e
   140028b9f:	nop
   140028ba0:	mov    WORD PTR [rax],0x0
   140028ba5:	add    rax,0x4
   140028ba9:	sub    rdx,0x1
   140028bad:	jne    0x140028ba0
   140028baf:	lea    rax,[rcx+0x9b0]
   140028bb6:	mov    edx,0x1e
   140028bbb:	xchg   ax,ax
   140028bbd:	data16 xchg ax,ax
   140028bc0:	mov    WORD PTR [rax],0x0
   140028bc5:	add    rax,0x4
   140028bc9:	sub    rdx,0x1
   140028bcd:	jne    0x140028bc0
   140028bcf:	lea    rax,[rcx+0xaa4]
   140028bd6:	mov    ecx,0x13
   140028bdb:	xchg   ax,ax
   140028bdd:	data16 xchg ax,ax
   140028be0:	mov    WORD PTR [rax],0x0
   140028be5:	add    rax,0x4
   140028be9:	sub    rcx,0x1
   140028bed:	jne    0x140028be0
   140028bef:	xor    eax,eax
   140028bf1:	mov    WORD PTR [r8+0x4bc],0x1
   140028bfb:	mov    DWORD PTR [r8+0x1704],eax
   140028c02:	mov    DWORD PTR [r8+0x1700],eax
   140028c09:	mov    DWORD PTR [r8+0x1708],eax
   140028c10:	mov    DWORD PTR [r8+0x16f4],eax
   140028c17:	ret    
   140028c18:	int3   
   140028c19:	int3   
   140028c1a:	int3   
   140028c1b:	int3   
   140028c1c:	int3   
   140028c1d:	int3   
   140028c1e:	int3   
   140028c1f:	int3   
   140028c20:	mov    eax,DWORD PTR [rcx+0x149c]
   140028c26:	mov    QWORD PTR [rsp+0x10],rbx
   140028c2b:	movsxd r11,r8d
   140028c2e:	movsxd rbx,DWORD PTR [rcx+r11*4+0xba8]
   140028c36:	lea    r9d,[r11+r11*1]
   140028c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140028c3f:	cmp    r9d,eax
   140028c42:	mov    QWORD PTR [rsp+0x20],rdi
   140028c47:	mov    rdi,rdx
   140028c4a:	jg     0x140028ce3
   140028c50:	cmp    r9d,eax
   140028c53:	jge    0x140028c93
   140028c55:	movsxd rax,r9d
   140028c58:	movsxd r10,DWORD PTR [rcx+rax*4+0xba8]
   140028c60:	movsxd r8,DWORD PTR [rcx+rax*4+0xbac]
   140028c68:	movzx  eax,WORD PTR [rdi+r8*4]
   140028c6d:	movzx  edx,WORD PTR [rdi+r10*4]
   140028c72:	cmp    ax,dx
   140028c75:	jb     0x140028c8f
   140028c77:	cmp    ax,dx
   140028c7a:	jne    0x140028c93
   140028c7c:	movzx  eax,BYTE PTR [r10+rcx*1+0x14a4]
   140028c85:	cmp    BYTE PTR [r8+rcx*1+0x14a4],al
   140028c8d:	ja     0x140028c93
   140028c8f:	add    r9d,0x1
   140028c93:	movsxd rax,r9d
   140028c96:	movsxd r10,DWORD PTR [rcx+rax*4+0xba8]
   140028c9e:	movzx  eax,WORD PTR [rdi+rbx*4]
   140028ca2:	movzx  edx,WORD PTR [rdi+r10*4]
   140028ca7:	cmp    ax,dx
   140028caa:	jb     0x140028cfb
   140028cac:	cmp    ax,dx
   140028caf:	jne    0x140028cc3
   140028cb1:	movzx  eax,BYTE PTR [r10+rcx*1+0x14a4]
   140028cba:	cmp    BYTE PTR [rbx+rcx*1+0x14a4],al
   140028cc1:	jbe    0x140028cfb
   140028cc3:	movsxd rax,r11d
   140028cc6:	movsxd r11,r9d
   140028cc9:	add    r9d,r9d
   140028ccc:	mov    DWORD PTR [rcx+rax*4+0xba8],r10d
   140028cd4:	mov    eax,DWORD PTR [rcx+0x149c]
   140028cda:	cmp    r9d,eax
   140028cdd:	jle    0x140028c50
   140028ce3:	mov    DWORD PTR [rcx+r11*4+0xba8],ebx
   140028ceb:	mov    rdi,QWORD PTR [rsp+0x20]
   140028cf0:	mov    rsi,QWORD PTR [rsp+0x18]
   140028cf5:	mov    rbx,QWORD PTR [rsp+0x10]
   140028cfa:	ret    
   140028cfb:	mov    rdi,QWORD PTR [rsp+0x20]
   140028d00:	mov    rsi,QWORD PTR [rsp+0x18]
   140028d05:	movsxd rax,r11d
   140028d08:	mov    DWORD PTR [rcx+rax*4+0xba8],ebx
   140028d0f:	mov    rbx,QWORD PTR [rsp+0x10]
   140028d14:	ret    
   140028d15:	int3   
   140028d16:	int3   
   140028d17:	int3   
   140028d18:	int3   
   140028d19:	int3   
   140028d1a:	int3   
   140028d1b:	int3   
   140028d1c:	int3   
   140028d1d:	int3   
   140028d1e:	int3   
   140028d1f:	int3   
   140028d20:	sub    rsp,0x38
   140028d24:	mov    rax,QWORD PTR [rdx+0x10]
   140028d28:	mov    QWORD PTR [rsp+0x40],rbx
   140028d2d:	mov    QWORD PTR [rsp+0x50],rsi
   140028d32:	mov    r9d,DWORD PTR [rax+0x10]
   140028d36:	movsxd r11,DWORD PTR [rax+0x18]
   140028d3a:	mov    esi,DWORD PTR [rdx+0x8]
   140028d3d:	mov    QWORD PTR [rsp+0x58],rdi
   140028d42:	mov    rdi,QWORD PTR [rdx]
   140028d45:	mov    QWORD PTR [rsp+0x28],r13
   140028d4a:	mov    QWORD PTR [rsp+0x20],r14
   140028d4f:	mov    r14,QWORD PTR [rax]
   140028d52:	mov    r8,rcx
   140028d55:	mov    QWORD PTR [rsp+0x18],r15
   140028d5a:	mov    r15,QWORD PTR [rax+0x8]
   140028d5e:	xor    eax,eax
   140028d60:	mov    QWORD PTR [rcx+0xb88],rax
   140028d67:	mov    QWORD PTR [rcx+0xb90],rax
   140028d6e:	mov    QWORD PTR [rcx+0xb98],rax
   140028d75:	mov    QWORD PTR [rcx+0xba0],rax
   140028d7c:	mov    edx,eax
   140028d7e:	movsxd rax,DWORD PTR [rcx+0x14a0]
   140028d85:	movsxd rcx,DWORD PTR [rcx+rax*4+0xba8]
   140028d8d:	mov    r13d,0x23d
   140028d93:	mov    DWORD PTR [rsp],r9d
   140028d97:	mov    WORD PTR [rdi+rcx*4+0x2],dx
   140028d9c:	mov    ebx,DWORD PTR [r8+0x14a0]
   140028da3:	add    ebx,0x1
   140028da6:	movsxd rax,ebx
   140028da9:	cmp    rax,r13
   140028dac:	jge    0x140028e69
   140028db2:	mov    QWORD PTR [rsp+0x30],r12
   140028db7:	sub    r13,rax
   140028dba:	lea    r12,[r8+rax*4+0xba8]
   140028dc2:	add    ebx,r13d
   140028dc5:	mov    QWORD PTR [rsp+0x48],rbp
   140028dca:	mov    DWORD PTR [rsp+0x4],ebx
   140028dce:	xchg   ax,ax
   140028dd0:	movsxd rbp,DWORD PTR [r12]
   140028dd4:	mov    r10,rbp
   140028dd7:	lea    rbx,[rbp*4+0x0]
   140028ddf:	movzx  eax,WORD PTR [rbx+rdi*1+0x2]
   140028de4:	movzx  ecx,WORD PTR [rdi+rax*4+0x2]
   140028de9:	add    ecx,0x1
   140028dec:	cmp    ecx,r11d
   140028def:	jle    0x140028df7
   140028df1:	mov    ecx,r11d
   140028df4:	add    edx,0x1
   140028df7:	cmp    ebp,esi
   140028df9:	mov    WORD PTR [rbx+rdi*1+0x2],cx
   140028dfe:	jg     0x140028e4d
   140028e00:	movsxd rax,ecx
   140028e03:	xor    r9d,r9d
   140028e06:	add    WORD PTR [r8+rax*2+0xb88],0x1
   140028e10:	cmp    ebp,DWORD PTR [rsp]
   140028e13:	jl     0x140028e20
   140028e15:	movsxd r9,DWORD PTR [rsp]
   140028e19:	sub    r10,r9
   140028e1c:	mov    r9d,DWORD PTR [r15+r10*4]
   140028e20:	movzx  r10d,WORD PTR [rbx+rdi*1]
   140028e25:	lea    eax,[r9+rcx*1]
   140028e29:	imul   eax,r10d
   140028e2d:	add    DWORD PTR [r8+0x1700],eax
   140028e34:	test   r14,r14
   140028e37:	je     0x140028e4d
   140028e39:	movzx  eax,WORD PTR [rbx+r14*1+0x2]
   140028e3f:	add    eax,r9d
   140028e42:	imul   eax,r10d
   140028e46:	add    DWORD PTR [r8+0x1704],eax
   140028e4d:	add    r12,0x4
   140028e51:	sub    r13,0x1
   140028e55:	jne    0x140028dd0
   140028e5b:	mov    ebx,DWORD PTR [rsp+0x4]
   140028e5f:	mov    r12,QWORD PTR [rsp+0x30]
   140028e64:	mov    rbp,QWORD PTR [rsp+0x48]
   140028e69:	test   edx,edx
   140028e6b:	mov    r15,QWORD PTR [rsp+0x18]
   140028e70:	mov    r14,QWORD PTR [rsp+0x20]
   140028e75:	mov    r13,QWORD PTR [rsp+0x28]
   140028e7a:	je     0x140028f54
   140028e80:	lea    r10d,[r11-0x1]
   140028e84:	data16 data16 xchg ax,ax
   140028e88:	data16 data16 xchg ax,ax
   140028e8c:	data16 data16 xchg ax,ax
   140028e90:	movsxd rcx,r10d
   140028e93:	cmp    WORD PTR [r8+rcx*2+0xb88],0x0
   140028e9d:	jne    0x140028eb2
   140028e9f:	nop
   140028ea0:	sub    ecx,0x1
   140028ea3:	movsxd rax,ecx
   140028ea6:	cmp    WORD PTR [r8+rax*2+0xb88],0x0
   140028eb0:	je     0x140028ea0
   140028eb2:	movsxd rax,ecx
   140028eb5:	sub    edx,0x2
   140028eb8:	add    WORD PTR [r8+rax*2+0xb88],0xffff
   140028ec3:	add    WORD PTR [r8+rax*2+0xb8a],0x2
   140028ecd:	add    WORD PTR [r8+r11*2+0xb88],0xffff
   140028ed8:	test   edx,edx
   140028eda:	jg     0x140028e90
   140028edc:	test   r11d,r11d
   140028edf:	movsxd rbx,ebx
   140028ee2:	je     0x140028f54
   140028ee4:	data16 data16 xchg ax,ax
   140028ee8:	data16 data16 xchg ax,ax
   140028eec:	data16 data16 xchg ax,ax
   140028ef0:	movsxd rax,r11d
   140028ef3:	movzx  edx,WORD PTR [r8+rax*2+0xb88]
   140028efc:	test   edx,edx
   140028efe:	je     0x140028f4e
   140028f00:	lea    r9,[r8+rbx*4+0xba8]
   140028f08:	data16 data16 xchg ax,ax
   140028f0c:	data16 data16 xchg ax,ax
   140028f10:	movsxd rax,DWORD PTR [r9-0x4]
   140028f14:	sub    r9,0x4
   140028f18:	sub    rbx,0x1
   140028f1c:	cmp    eax,esi
   140028f1e:	jg     0x140028f4a
   140028f20:	mov    r10,rax
   140028f23:	movzx  eax,WORD PTR [rdi+rax*4+0x2]
   140028f28:	cmp    eax,r11d
   140028f2b:	je     0x140028f47
   140028f2d:	mov    ecx,r11d
   140028f30:	sub    ecx,eax
   140028f32:	movzx  eax,WORD PTR [rdi+r10*4]
   140028f37:	imul   ecx,eax
   140028f3a:	add    DWORD PTR [r8+0x1700],ecx
   140028f41:	mov    WORD PTR [rdi+r10*4+0x2],r11w
   140028f47:	sub    edx,0x1
   140028f4a:	test   edx,edx
   140028f4c:	jne    0x140028f10
   140028f4e:	sub    r11d,0x1
   140028f52:	jne    0x140028ef0
   140028f54:	mov    rdi,QWORD PTR [rsp+0x58]
   140028f59:	mov    rsi,QWORD PTR [rsp+0x50]
   140028f5e:	mov    rbx,QWORD PTR [rsp+0x40]
   140028f63:	add    rsp,0x38
   140028f67:	ret    
   140028f68:	int3   
   140028f69:	int3   
   140028f6a:	int3   
   140028f6b:	int3   
   140028f6c:	int3   
   140028f6d:	int3   
   140028f6e:	int3   
   140028f6f:	int3   
   140028f70:	mov    QWORD PTR [rsp+0x18],rbx
   140028f75:	mov    ebx,0xffffffff
   140028f7a:	mov    QWORD PTR [rsp+0x20],rdi
   140028f7f:	movzx  edi,WORD PTR [rdx+0x2]
   140028f83:	xor    r10d,r10d
   140028f86:	mov    r11,rdx
   140028f89:	test   edi,edi
   140028f8b:	lea    eax,[rbx+0x8]
   140028f8e:	lea    r9d,[rbx+0x5]
   140028f92:	jne    0x140028f9d
   140028f94:	mov    eax,0x8a
   140028f99:	lea    r9d,[rbx+0x4]
   140028f9d:	test   r8d,r8d
   140028fa0:	movsxd rdx,r8d
   140028fa3:	mov    WORD PTR [r11+rdx*4+0x6],0xffff
   140028fab:	js     0x140029051
   140028fb1:	add    r11,0x6
   140028fb5:	lea    r8,[rdx+0x1]
   140028fb9:	data16 xchg ax,ax
   140028fbc:	data16 data16 xchg ax,ax
   140028fc0:	add    r10d,0x1
   140028fc4:	movsxd rdx,edi
   140028fc7:	movzx  edi,WORD PTR [r11]
   140028fcb:	cmp    r10d,eax
   140028fce:	jge    0x140028fd4
   140028fd0:	cmp    edx,edi
   140028fd2:	je     0x140029043
   140028fd4:	cmp    r10d,r9d
   140028fd7:	jge    0x140028fe4
   140028fd9:	add    WORD PTR [rcx+rdx*4+0xaa4],r10w
   140028fe2:	jmp    0x140029017
   140028fe4:	test   edx,edx
   140028fe6:	je     0x140028fff
   140028fe8:	cmp    edx,ebx
   140028fea:	je     0x140028ff5
   140028fec:	add    WORD PTR [rcx+rdx*4+0xaa4],0x1
   140028ff5:	add    WORD PTR [rcx+0xae4],0x1
   140028ffd:	jmp    0x140029017
   140028fff:	cmp    r10d,0xa
   140029003:	jg     0x14002900f
   140029005:	add    WORD PTR [rcx+0xae8],0x1
   14002900d:	jmp    0x140029017
   14002900f:	add    WORD PTR [rcx+0xaec],0x1
   140029017:	xor    r10d,r10d
   14002901a:	test   edi,edi
   14002901c:	mov    ebx,edx
   14002901e:	jne    0x14002902b
   140029020:	mov    eax,0x8a
   140029025:	lea    r9d,[r10+0x3]
   140029029:	jmp    0x140029043
   14002902b:	cmp    edx,edi
   14002902d:	jne    0x14002903a
   14002902f:	mov    eax,0x6
   140029034:	lea    r9d,[rax-0x3]
   140029038:	jmp    0x140029043
   14002903a:	mov    eax,0x7
   14002903f:	lea    r9d,[rax-0x3]
   140029043:	add    r11,0x4
   140029047:	sub    r8,0x1
   14002904b:	jne    0x140028fc0
   140029051:	mov    rdi,QWORD PTR [rsp+0x20]
   140029056:	mov    rbx,QWORD PTR [rsp+0x18]
   14002905b:	ret    
   14002905c:	int3   
   14002905d:	int3   
   14002905e:	int3   
   14002905f:	int3   
   140029060:	sub    rsp,0x8
   140029064:	mov    QWORD PTR [rsp+0x10],rbx
   140029069:	mov    r11d,0xffffffff
   14002906f:	mov    QWORD PTR [rsp+0x20],rsi
   140029074:	movzx  esi,WORD PTR [rdx+0x2]
   140029078:	lea    eax,[r11+0x8]
   14002907c:	xor    r10d,r10d
   14002907f:	test   esi,esi
   140029081:	mov    r9,rcx
   140029084:	movsxd rbx,r8d
   140029087:	lea    ecx,[rax-0x3]
   14002908a:	jne    0x140029094
   14002908c:	mov    eax,0x8a
   140029091:	lea    ecx,[rsi+0x3]
   140029094:	test   r8d,r8d
   140029097:	js     0x140029672
   14002909d:	mov    QWORD PTR [rsp+0x18],rbp
   1400290a2:	mov    QWORD PTR [rsp],r12
   1400290a6:	lea    r12,[rbx+0x1]
   1400290aa:	mov    QWORD PTR [rsp+0x28],rdi
   1400290af:	lea    rbp,[rdx+0x6]
   1400290b3:	nop
   1400290b4:	data16 data16 xchg ax,ax
   1400290b8:	data16 data16 xchg ax,ax
   1400290bc:	data16 data16 xchg ax,ax
   1400290c0:	add    r10d,0x1
   1400290c4:	movsxd rdi,esi
   1400290c7:	movzx  esi,WORD PTR [rbp+0x0]
   1400290cb:	cmp    r10d,eax
   1400290ce:	jge    0x1400290d8
   1400290d0:	cmp    edi,esi
   1400290d2:	je     0x140029656
   1400290d8:	cmp    r10d,ecx
   1400290db:	jge    0x1400291aa
   1400290e1:	data16 xchg ax,ax
   1400290e4:	data16 data16 xchg ax,ax
   1400290e8:	data16 data16 xchg ax,ax
   1400290ec:	data16 data16 xchg ax,ax
   1400290f0:	movzx  r11d,WORD PTR [r9+rdi*4+0xaa6]
   1400290f9:	mov    ecx,DWORD PTR [r9+0x1714]
   140029100:	mov    eax,0x10
   140029105:	sub    eax,r11d
   140029108:	cmp    ecx,eax
   14002910a:	jle    0x14002917c
   14002910c:	movzx  r8d,WORD PTR [r9+rdi*4+0xaa4]
   140029115:	mov    edx,DWORD PTR [r9+0x28]
   140029119:	movzx  eax,r8w
   14002911d:	shl    ax,cl
   140029120:	mov    rcx,QWORD PTR [r9+0x10]
   140029124:	or     WORD PTR [r9+0x1710],ax
   14002912c:	movzx  eax,BYTE PTR [r9+0x1710]
   140029134:	mov    BYTE PTR [rdx+rcx*1],al
   140029137:	add    DWORD PTR [r9+0x28],0x1
   14002913c:	mov    edx,DWORD PTR [r9+0x28]
   140029140:	movzx  eax,BYTE PTR [r9+0x1711]
   140029148:	mov    rcx,QWORD PTR [r9+0x10]
   14002914c:	mov    BYTE PTR [rdx+rcx*1],al
   14002914f:	mov    edx,DWORD PTR [r9+0x1714]
   140029156:	add    DWORD PTR [r9+0x28],0x1
   14002915b:	mov    ecx,0x10
   140029160:	lea    eax,[rdx+r11*1-0x10]
   140029165:	sub    cl,dl
   140029167:	mov    DWORD PTR [r9+0x1714],eax
   14002916e:	shr    r8w,cl
   140029172:	mov    WORD PTR [r9+0x1710],r8w
   14002917a:	jmp    0x14002919b
   14002917c:	movzx  eax,WORD PTR [r9+rdi*4+0xaa4]
   140029185:	shl    ax,cl
   140029188:	or     WORD PTR [r9+0x1710],ax
   140029190:	lea    eax,[rcx+r11*1]
   140029194:	mov    DWORD PTR [r9+0x1714],eax
   14002919b:	sub    r10d,0x1
   14002919f:	jne    0x1400290f0
   1400291a5:	jmp    0x14002962c
   1400291aa:	test   edi,edi
   1400291ac:	je     0x1400293aa
   1400291b2:	cmp    edi,r11d
   1400291b5:	je     0x14002926a
   1400291bb:	movzx  r11d,WORD PTR [r9+rdi*4+0xaa6]
   1400291c4:	mov    ecx,DWORD PTR [r9+0x1714]
   1400291cb:	mov    eax,0x10
   1400291d0:	sub    eax,r11d
   1400291d3:	cmp    ecx,eax
   1400291d5:	jle    0x140029247
   1400291d7:	movzx  r8d,WORD PTR [r9+rdi*4+0xaa4]
   1400291e0:	mov    edx,DWORD PTR [r9+0x28]
   1400291e4:	movzx  eax,r8w
   1400291e8:	shl    ax,cl
   1400291eb:	mov    rcx,QWORD PTR [r9+0x10]
   1400291ef:	or     WORD PTR [r9+0x1710],ax
   1400291f7:	movzx  eax,BYTE PTR [r9+0x1710]
   1400291ff:	mov    BYTE PTR [rdx+rcx*1],al
   140029202:	add    DWORD PTR [r9+0x28],0x1
   140029207:	mov    edx,DWORD PTR [r9+0x28]
   14002920b:	movzx  eax,BYTE PTR [r9+0x1711]
   140029213:	mov    rcx,QWORD PTR [r9+0x10]
   140029217:	mov    BYTE PTR [rdx+rcx*1],al
   14002921a:	mov    edx,DWORD PTR [r9+0x1714]
   140029221:	add    DWORD PTR [r9+0x28],0x1
   140029226:	mov    ecx,0x10
   14002922b:	lea    eax,[rdx+r11*1-0x10]
   140029230:	sub    cl,dl
   140029232:	mov    DWORD PTR [r9+0x1714],eax
   140029239:	shr    r8w,cl
   14002923d:	mov    WORD PTR [r9+0x1710],r8w
   140029245:	jmp    0x140029266
   140029247:	movzx  eax,WORD PTR [r9+rdi*4+0xaa4]
   140029250:	shl    ax,cl
   140029253:	or     WORD PTR [r9+0x1710],ax
   14002925b:	lea    eax,[rcx+r11*1]
   14002925f:	mov    DWORD PTR [r9+0x1714],eax
   140029266:	sub    r10d,0x1
   14002926a:	movzx  r11d,WORD PTR [r9+0xae6]
   140029272:	mov    ecx,DWORD PTR [r9+0x1714]
   140029279:	mov    eax,0x10
   14002927e:	sub    eax,r11d
   140029281:	cmp    ecx,eax
   140029283:	jle    0x1400292f4
   140029285:	mov    edx,DWORD PTR [r9+0x28]
   140029289:	movzx  r8d,WORD PTR [r9+0xae4]
   140029291:	movzx  eax,r8w
   140029295:	shl    ax,cl
   140029298:	mov    rcx,QWORD PTR [r9+0x10]
   14002929c:	or     WORD PTR [r9+0x1710],ax
   1400292a4:	movzx  eax,BYTE PTR [r9+0x1710]
   1400292ac:	mov    BYTE PTR [rdx+rcx*1],al
   1400292af:	add    DWORD PTR [r9+0x28],0x1
   1400292b4:	mov    edx,DWORD PTR [r9+0x28]
   1400292b8:	movzx  eax,BYTE PTR [r9+0x1711]
   1400292c0:	mov    rcx,QWORD PTR [r9+0x10]
   1400292c4:	mov    BYTE PTR [rdx+rcx*1],al
   1400292c7:	mov    edx,DWORD PTR [r9+0x1714]
   1400292ce:	add    DWORD PTR [r9+0x28],0x1
   1400292d3:	mov    ecx,0x10
   1400292d8:	lea    eax,[rdx+r11*1-0x10]
   1400292dd:	sub    cl,dl
   1400292df:	mov    DWORD PTR [r9+0x1714],eax
   1400292e6:	shr    r8w,cl
   1400292ea:	mov    WORD PTR [r9+0x1710],r8w
   1400292f2:	jmp    0x140029312
   1400292f4:	movzx  eax,WORD PTR [r9+0xae4]
   1400292fc:	shl    ax,cl
   1400292ff:	or     WORD PTR [r9+0x1710],ax
   140029307:	lea    eax,[rcx+r11*1]
   14002930b:	mov    DWORD PTR [r9+0x1714],eax
   140029312:	mov    ecx,DWORD PTR [r9+0x1714]
   140029319:	cmp    ecx,0xe
   14002931c:	jle    0x14002938a
   14002931e:	mov    edx,DWORD PTR [r9+0x28]
   140029322:	lea    r8d,[r10-0x3]
   140029326:	movzx  eax,r8w
   14002932a:	shl    ax,cl
   14002932d:	mov    rcx,QWORD PTR [r9+0x10]
   140029331:	or     WORD PTR [r9+0x1710],ax
   140029339:	movzx  eax,BYTE PTR [r9+0x1710]
   140029341:	mov    BYTE PTR [rdx+rcx*1],al
   140029344:	add    DWORD PTR [r9+0x28],0x1
   140029349:	mov    edx,DWORD PTR [r9+0x28]
   14002934d:	movzx  eax,BYTE PTR [r9+0x1711]
   140029355:	mov    rcx,QWORD PTR [r9+0x10]
   140029359:	mov    BYTE PTR [rdx+rcx*1],al
   14002935c:	mov    edx,DWORD PTR [r9+0x1714]
   140029363:	add    DWORD PTR [r9+0x28],0x1
   140029368:	mov    ecx,0x10
   14002936d:	lea    eax,[rdx-0xe]
   140029370:	sub    cl,dl
   140029372:	mov    DWORD PTR [r9+0x1714],eax
   140029379:	shr    r8w,cl
   14002937d:	mov    WORD PTR [r9+0x1710],r8w
   140029385:	jmp    0x14002962c
   14002938a:	sub    r10w,0x3
   14002938f:	lea    eax,[rcx+0x2]
   140029392:	shl    r10w,cl
   140029396:	mov    DWORD PTR [r9+0x1714],eax
   14002939d:	or     WORD PTR [r9+0x1710],r10w
   1400293a5:	jmp    0x14002962c
   1400293aa:	cmp    r10d,0xa
   1400293ae:	jg     0x1400294f4
   1400293b4:	movzx  r11d,WORD PTR [r9+0xaea]
   1400293bc:	mov    ecx,DWORD PTR [r9+0x1714]
   1400293c3:	mov    eax,0x10
   1400293c8:	sub    eax,r11d
   1400293cb:	cmp    ecx,eax
   1400293cd:	jle    0x14002943e
   1400293cf:	mov    edx,DWORD PTR [r9+0x28]
   1400293d3:	movzx  r8d,WORD PTR [r9+0xae8]
   1400293db:	movzx  eax,r8w
   1400293df:	shl    ax,cl
   1400293e2:	mov    rcx,QWORD PTR [r9+0x10]
   1400293e6:	or     WORD PTR [r9+0x1710],ax
   1400293ee:	movzx  eax,BYTE PTR [r9+0x1710]
   1400293f6:	mov    BYTE PTR [rdx+rcx*1],al
   1400293f9:	add    DWORD PTR [r9+0x28],0x1
   1400293fe:	mov    edx,DWORD PTR [r9+0x28]
   140029402:	movzx  eax,BYTE PTR [r9+0x1711]
   14002940a:	mov    rcx,QWORD PTR [r9+0x10]
   14002940e:	mov    BYTE PTR [rdx+rcx*1],al
   140029411:	mov    edx,DWORD PTR [r9+0x1714]
   140029418:	add    DWORD PTR [r9+0x28],0x1
   14002941d:	mov    ecx,0x10
   140029422:	lea    eax,[rdx+r11*1-0x10]
   140029427:	sub    cl,dl
   140029429:	mov    DWORD PTR [r9+0x1714],eax
   140029430:	shr    r8w,cl
   140029434:	mov    WORD PTR [r9+0x1710],r8w
   14002943c:	jmp    0x14002945c
   14002943e:	movzx  eax,WORD PTR [r9+0xae8]
   140029446:	shl    ax,cl
   140029449:	or     WORD PTR [r9+0x1710],ax
   140029451:	lea    eax,[rcx+r11*1]
   140029455:	mov    DWORD PTR [r9+0x1714],eax
   14002945c:	mov    ecx,DWORD PTR [r9+0x1714]
   140029463:	cmp    ecx,0xd
   140029466:	jle    0x1400294d4
   140029468:	mov    edx,DWORD PTR [r9+0x28]
   14002946c:	lea    r8d,[r10-0x3]
   140029470:	movzx  eax,r8w
   140029474:	shl    ax,cl
   140029477:	mov    rcx,QWORD PTR [r9+0x10]
   14002947b:	or     WORD PTR [r9+0x1710],ax
   140029483:	movzx  eax,BYTE PTR [r9+0x1710]
   14002948b:	mov    BYTE PTR [rdx+rcx*1],al
   14002948e:	add    DWORD PTR [r9+0x28],0x1
   140029493:	mov    edx,DWORD PTR [r9+0x28]
   140029497:	movzx  eax,BYTE PTR [r9+0x1711]
   14002949f:	mov    rcx,QWORD PTR [r9+0x10]
   1400294a3:	mov    BYTE PTR [rdx+rcx*1],al
   1400294a6:	mov    edx,DWORD PTR [r9+0x1714]
   1400294ad:	add    DWORD PTR [r9+0x28],0x1
   1400294b2:	mov    ecx,0x10
   1400294b7:	lea    eax,[rdx-0xd]
   1400294ba:	sub    cl,dl
   1400294bc:	mov    DWORD PTR [r9+0x1714],eax
   1400294c3:	shr    r8w,cl
   1400294c7:	mov    WORD PTR [r9+0x1710],r8w
   1400294cf:	jmp    0x14002962c
   1400294d4:	sub    r10w,0x3
   1400294d9:	lea    eax,[rcx+0x3]
   1400294dc:	shl    r10w,cl
   1400294e0:	mov    DWORD PTR [r9+0x1714],eax
   1400294e7:	or     WORD PTR [r9+0x1710],r10w
   1400294ef:	jmp    0x14002962c
   1400294f4:	movzx  r11d,WORD PTR [r9+0xaee]
   1400294fc:	mov    ecx,DWORD PTR [r9+0x1714]
   140029503:	mov    eax,0x10
   140029508:	sub    eax,r11d
   14002950b:	cmp    ecx,eax
   14002950d:	jle    0x14002957e
   14002950f:	mov    edx,DWORD PTR [r9+0x28]
   140029513:	movzx  r8d,WORD PTR [r9+0xaec]
   14002951b:	movzx  eax,r8w
   14002951f:	shl    ax,cl
   140029522:	mov    rcx,QWORD PTR [r9+0x10]
   140029526:	or     WORD PTR [r9+0x1710],ax
   14002952e:	movzx  eax,BYTE PTR [r9+0x1710]
   140029536:	mov    BYTE PTR [rdx+rcx*1],al
   140029539:	add    DWORD PTR [r9+0x28],0x1
   14002953e:	mov    edx,DWORD PTR [r9+0x28]
   140029542:	movzx  eax,BYTE PTR [r9+0x1711]
   14002954a:	mov    rcx,QWORD PTR [r9+0x10]
   14002954e:	mov    BYTE PTR [rdx+rcx*1],al
   140029551:	mov    edx,DWORD PTR [r9+0x1714]
   140029558:	add    DWORD PTR [r9+0x28],0x1
   14002955d:	mov    ecx,0x10
   140029562:	lea    eax,[rdx+r11*1-0x10]
   140029567:	sub    cl,dl
   140029569:	mov    DWORD PTR [r9+0x1714],eax
   140029570:	shr    r8w,cl
   140029574:	mov    WORD PTR [r9+0x1710],r8w
   14002957c:	jmp    0x14002959c
   14002957e:	movzx  eax,WORD PTR [r9+0xaec]
   140029586:	shl    ax,cl
   140029589:	or     WORD PTR [r9+0x1710],ax
   140029591:	lea    eax,[rcx+r11*1]
   140029595:	mov    DWORD PTR [r9+0x1714],eax
   14002959c:	mov    ecx,DWORD PTR [r9+0x1714]
   1400295a3:	cmp    ecx,0x9
   1400295a6:	jle    0x140029611
   1400295a8:	mov    edx,DWORD PTR [r9+0x28]
   1400295ac:	lea    r8d,[r10-0xb]
   1400295b0:	movzx  eax,r8w
   1400295b4:	shl    ax,cl
   1400295b7:	mov    rcx,QWORD PTR [r9+0x10]
   1400295bb:	or     WORD PTR [r9+0x1710],ax
   1400295c3:	movzx  eax,BYTE PTR [r9+0x1710]
   1400295cb:	mov    BYTE PTR [rdx+rcx*1],al
   1400295ce:	add    DWORD PTR [r9+0x28],0x1
   1400295d3:	mov    edx,DWORD PTR [r9+0x28]
   1400295d7:	movzx  eax,BYTE PTR [r9+0x1711]
   1400295df:	mov    rcx,QWORD PTR [r9+0x10]
   1400295e3:	mov    BYTE PTR [rdx+rcx*1],al
   1400295e6:	mov    edx,DWORD PTR [r9+0x1714]
   1400295ed:	add    DWORD PTR [r9+0x28],0x1
   1400295f2:	mov    ecx,0x10
   1400295f7:	lea    eax,[rdx-0x9]
   1400295fa:	sub    cl,dl
   1400295fc:	mov    DWORD PTR [r9+0x1714],eax
   140029603:	shr    r8w,cl
   140029607:	mov    WORD PTR [r9+0x1710],r8w
   14002960f:	jmp    0x14002962c
   140029611:	sub    r10w,0xb
   140029616:	lea    eax,[rcx+0x7]
   140029619:	shl    r10w,cl
   14002961d:	mov    DWORD PTR [r9+0x1714],eax
   140029624:	or     WORD PTR [r9+0x1710],r10w
   14002962c:	xor    r10d,r10d
   14002962f:	test   esi,esi
   140029631:	mov    r11d,edi
   140029634:	jne    0x140029640
   140029636:	mov    eax,0x8a
   14002963b:	lea    ecx,[rsi+0x3]
   14002963e:	jmp    0x140029656
   140029640:	cmp    edi,esi
   140029642:	jne    0x14002964e
   140029644:	mov    eax,0x6
   140029649:	lea    ecx,[rax-0x3]
   14002964c:	jmp    0x140029656
   14002964e:	mov    eax,0x7
   140029653:	lea    ecx,[rax-0x3]
   140029656:	add    rbp,0x4
   14002965a:	sub    r12,0x1
   14002965e:	jne    0x1400290c0
   140029664:	mov    r12,QWORD PTR [rsp]
   140029668:	mov    rdi,QWORD PTR [rsp+0x28]
   14002966d:	mov    rbp,QWORD PTR [rsp+0x18]
   140029672:	mov    rsi,QWORD PTR [rsp+0x20]
   140029677:	mov    rbx,QWORD PTR [rsp+0x10]
   14002967c:	add    rsp,0x8
   140029680:	ret    
   140029681:	int3   
   140029682:	int3   
   140029683:	int3   
   140029684:	int3   
   140029685:	int3   
   140029686:	int3   
   140029687:	int3   
   140029688:	int3   
   140029689:	int3   
   14002968a:	int3   
   14002968b:	int3   
   14002968c:	int3   
   14002968d:	int3   
   14002968e:	int3   
   14002968f:	int3   
   140029690:	sub    rsp,0x28
   140029694:	mov    QWORD PTR [rsp+0x38],rbx
   140029699:	mov    QWORD PTR [rsp+0x40],rsi
   14002969e:	mov    rbx,rcx
   1400296a1:	mov    ecx,DWORD PTR [rcx+0x1714]
   1400296a7:	mov    QWORD PTR [rsp+0x48],rdi
   1400296ac:	mov    r11d,r9d
   1400296af:	cmp    ecx,0xb
   1400296b2:	mov    edi,r8d
   1400296b5:	mov    esi,edx
   1400296b7:	jle    0x14002971c
   1400296b9:	lea    r10d,[rdx-0x101]
   1400296c0:	mov    edx,DWORD PTR [rbx+0x28]
   1400296c3:	movzx  eax,r10w
   1400296c7:	shl    ax,cl
   1400296ca:	mov    rcx,QWORD PTR [rbx+0x10]
   1400296ce:	or     WORD PTR [rbx+0x1710],ax
   1400296d5:	movzx  eax,BYTE PTR [rbx+0x1710]
   1400296dc:	mov    BYTE PTR [rdx+rcx*1],al
   1400296df:	add    DWORD PTR [rbx+0x28],0x1
   1400296e3:	mov    edx,DWORD PTR [rbx+0x28]
   1400296e6:	movzx  eax,BYTE PTR [rbx+0x1711]
   1400296ed:	mov    rcx,QWORD PTR [rbx+0x10]
   1400296f1:	mov    BYTE PTR [rdx+rcx*1],al
   1400296f4:	mov    edx,DWORD PTR [rbx+0x1714]
   1400296fa:	add    DWORD PTR [rbx+0x28],0x1
   1400296fe:	mov    ecx,0x10
   140029703:	lea    eax,[rdx-0xb]
   140029706:	sub    cl,dl
   140029708:	mov    DWORD PTR [rbx+0x1714],eax
   14002970e:	shr    r10w,cl
   140029712:	mov    WORD PTR [rbx+0x1710],r10w
   14002971a:	jmp    0x140029735
   14002971c:	lea    eax,[rdx-0x101]
   140029722:	shl    ax,cl
   140029725:	or     WORD PTR [rbx+0x1710],ax
   14002972c:	lea    eax,[rcx+0x5]
   14002972f:	mov    DWORD PTR [rbx+0x1714],eax
   140029735:	mov    ecx,DWORD PTR [rbx+0x1714]
   14002973b:	cmp    ecx,0xb
   14002973e:	jle    0x1400297a0
   140029740:	mov    edx,DWORD PTR [rbx+0x28]
   140029743:	add    r8d,0xffffffff
   140029747:	movzx  eax,r8w
   14002974b:	shl    ax,cl
   14002974e:	mov    rcx,QWORD PTR [rbx+0x10]
   140029752:	or     WORD PTR [rbx+0x1710],ax
   140029759:	movzx  eax,BYTE PTR [rbx+0x1710]
   140029760:	mov    BYTE PTR [rdx+rcx*1],al
   140029763:	add    DWORD PTR [rbx+0x28],0x1
   140029767:	mov    edx,DWORD PTR [rbx+0x28]
   14002976a:	movzx  eax,BYTE PTR [rbx+0x1711]
   140029771:	mov    rcx,QWORD PTR [rbx+0x10]
   140029775:	mov    BYTE PTR [rdx+rcx*1],al
   140029778:	mov    edx,DWORD PTR [rbx+0x1714]
   14002977e:	add    DWORD PTR [rbx+0x28],0x1
   140029782:	mov    ecx,0x10
   140029787:	lea    eax,[rdx-0xb]
   14002978a:	sub    cl,dl
   14002978c:	mov    DWORD PTR [rbx+0x1714],eax
   140029792:	shr    r8w,cl
   140029796:	mov    WORD PTR [rbx+0x1710],r8w
   14002979e:	jmp    0x1400297b7
   1400297a0:	lea    eax,[r8-0x1]
   1400297a4:	shl    ax,cl
   1400297a7:	or     WORD PTR [rbx+0x1710],ax
   1400297ae:	lea    eax,[rcx+0x5]
   1400297b1:	mov    DWORD PTR [rbx+0x1714],eax
   1400297b7:	mov    ecx,DWORD PTR [rbx+0x1714]
   1400297bd:	cmp    ecx,0xc
   1400297c0:	jle    0x140029822
   1400297c2:	mov    edx,DWORD PTR [rbx+0x28]
   1400297c5:	lea    r8d,[r11-0x4]
   1400297c9:	movzx  eax,r8w
   1400297cd:	shl    ax,cl
   1400297d0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400297d4:	or     WORD PTR [rbx+0x1710],ax
   1400297db:	movzx  eax,BYTE PTR [rbx+0x1710]
   1400297e2:	mov    BYTE PTR [rdx+rcx*1],al
   1400297e5:	add    DWORD PTR [rbx+0x28],0x1
   1400297e9:	mov    edx,DWORD PTR [rbx+0x28]
   1400297ec:	movzx  eax,BYTE PTR [rbx+0x1711]
   1400297f3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400297f7:	mov    BYTE PTR [rdx+rcx*1],al
   1400297fa:	mov    edx,DWORD PTR [rbx+0x1714]
   140029800:	add    DWORD PTR [rbx+0x28],0x1
   140029804:	mov    ecx,0x10
   140029809:	lea    eax,[rdx-0xc]
   14002980c:	sub    cl,dl
   14002980e:	mov    DWORD PTR [rbx+0x1714],eax
   140029814:	shr    r8w,cl
   140029818:	mov    WORD PTR [rbx+0x1710],r8w
   140029820:	jmp    0x140029839
   140029822:	lea    eax,[r11-0x4]
   140029826:	shl    ax,cl
   140029829:	or     WORD PTR [rbx+0x1710],ax
   140029830:	lea    eax,[rcx+0x4]
   140029833:	mov    DWORD PTR [rbx+0x1714],eax
   140029839:	test   r11d,r11d
   14002983c:	jle    0x1400298f1
   140029842:	lea    r9,[rip+0x23857]        # 0x14004d0a0
   140029849:	mov    r10,r11
   14002984c:	data16 data16 xchg ax,ax
   140029850:	mov    ecx,DWORD PTR [rbx+0x1714]
   140029856:	cmp    ecx,0xd
   140029859:	jle    0x1400298c4
   14002985b:	movzx  eax,BYTE PTR [r9]
   14002985f:	mov    edx,DWORD PTR [rbx+0x28]
   140029862:	movzx  r8d,WORD PTR [rbx+rax*4+0xaa6]
   14002986b:	movzx  eax,r8w
   14002986f:	shl    ax,cl
   140029872:	mov    rcx,QWORD PTR [rbx+0x10]
   140029876:	or     WORD PTR [rbx+0x1710],ax
   14002987d:	movzx  eax,BYTE PTR [rbx+0x1710]
   140029884:	mov    BYTE PTR [rdx+rcx*1],al
   140029887:	add    DWORD PTR [rbx+0x28],0x1
   14002988b:	mov    edx,DWORD PTR [rbx+0x28]
   14002988e:	movzx  eax,BYTE PTR [rbx+0x1711]
   140029895:	mov    rcx,QWORD PTR [rbx+0x10]
   140029899:	mov    BYTE PTR [rdx+rcx*1],al
   14002989c:	mov    edx,DWORD PTR [rbx+0x1714]
   1400298a2:	add    DWORD PTR [rbx+0x28],0x1
   1400298a6:	mov    ecx,0x10
   1400298ab:	lea    eax,[rdx-0xd]
   1400298ae:	sub    cl,dl
   1400298b0:	mov    DWORD PTR [rbx+0x1714],eax
   1400298b6:	shr    r8w,cl
   1400298ba:	mov    WORD PTR [rbx+0x1710],r8w
   1400298c2:	jmp    0x1400298e3
   1400298c4:	movzx  eax,BYTE PTR [r9]
   1400298c8:	movzx  edx,WORD PTR [rbx+rax*4+0xaa6]
   1400298d0:	lea    eax,[rcx+0x3]
   1400298d3:	shl    dx,cl
   1400298d6:	mov    DWORD PTR [rbx+0x1714],eax
   1400298dc:	or     WORD PTR [rbx+0x1710],dx
   1400298e3:	add    r9,0x1
   1400298e7:	sub    r10,0x1
   1400298eb:	jne    0x140029850
   1400298f1:	lea    r8d,[rsi-0x1]
   1400298f5:	lea    rdx,[rbx+0xbc]
   1400298fc:	mov    rcx,rbx
   1400298ff:	call   0x140029060
   140029904:	lea    r8d,[rdi-0x1]
   140029908:	lea    rdx,[rbx+0x9b0]
   14002990f:	mov    rcx,rbx
   140029912:	mov    rdi,QWORD PTR [rsp+0x48]
   140029917:	mov    rsi,QWORD PTR [rsp+0x40]
   14002991c:	mov    rbx,QWORD PTR [rsp+0x38]
   140029921:	add    rsp,0x28
   140029925:	jmp    0x140029060
   14002992a:	int3   
   14002992b:	int3   
   14002992c:	int3   
   14002992d:	int3   
   14002992e:	int3   
   14002992f:	int3   
   140029930:	mov    rax,rsp
   140029933:	sub    rsp,0x28
   140029937:	mov    QWORD PTR [rax+0x8],rbx
   14002993b:	mov    QWORD PTR [rax+0x20],rdi
   14002993f:	mov    QWORD PTR [rax-0x8],r12
   140029943:	xor    r12d,r12d
   140029946:	mov    QWORD PTR [rax-0x18],r14
   14002994a:	mov    rdi,rdx
   14002994d:	cmp    DWORD PTR [rcx+0x16f4],r12d
   140029954:	lea    ebx,[r12+0x10]
   140029959:	mov    r14,r8
   14002995c:	mov    r10,rcx
   14002995f:	je     0x140029d26
   140029965:	mov    QWORD PTR [rax-0x10],r13
   140029969:	mov    QWORD PTR [rax-0x20],r15
   14002996d:	mov    QWORD PTR [rax+0x10],rbp
   140029971:	mov    QWORD PTR [rax+0x18],rsi
   140029975:	mov    r13,r12
   140029978:	lea    r15,[rip+0xfffffffffffd6681]        # 0x140000000
   14002997f:	nop
   140029980:	mov    rax,QWORD PTR [r10+0x16f8]
   140029987:	mov    ecx,r12d
   14002998a:	add    r13,0x2
   14002998e:	movzx  r9d,WORD PTR [rax+r13*1-0x2]
   140029994:	mov    rax,QWORD PTR [r10+0x16e8]
   14002999b:	add    r12d,0x1
   14002999f:	test   r9d,r9d
   1400299a2:	movzx  r11d,BYTE PTR [rcx+rax*1]
   1400299a7:	jne    0x140029a51
   1400299ad:	mov    ecx,DWORD PTR [r10+0x1714]
   1400299b4:	movsxd rdx,r11d
   1400299b7:	mov    eax,ebx
   1400299b9:	movzx  r9d,WORD PTR [rdi+rdx*4+0x2]
   1400299bf:	sub    eax,r9d
   1400299c2:	cmp    ecx,eax
   1400299c4:	jle    0x140029a32
   1400299c6:	movzx  r8d,WORD PTR [rdi+rdx*4]
   1400299cb:	mov    edx,DWORD PTR [r10+0x28]
   1400299cf:	movzx  eax,r8w
   1400299d3:	shl    ax,cl
   1400299d6:	mov    rcx,QWORD PTR [r10+0x10]
   1400299da:	or     WORD PTR [r10+0x1710],ax
   1400299e2:	movzx  eax,BYTE PTR [r10+0x1710]
   1400299ea:	mov    BYTE PTR [rdx+rcx*1],al
   1400299ed:	add    DWORD PTR [r10+0x28],0x1
   1400299f2:	mov    edx,DWORD PTR [r10+0x28]
   1400299f6:	movzx  eax,BYTE PTR [r10+0x1711]
   1400299fe:	mov    rcx,QWORD PTR [r10+0x10]
   140029a02:	mov    BYTE PTR [rdx+rcx*1],al
   140029a05:	mov    edx,DWORD PTR [r10+0x1714]
   140029a0c:	add    DWORD PTR [r10+0x28],0x1
   140029a11:	mov    ecx,ebx
   140029a13:	lea    eax,[rdx+r9*1-0x10]
   140029a18:	sub    cl,dl
   140029a1a:	mov    DWORD PTR [r10+0x1714],eax
   140029a21:	shr    r8w,cl
   140029a25:	mov    WORD PTR [r10+0x1710],r8w
   140029a2d:	jmp    0x140029d05
   140029a32:	movzx  eax,WORD PTR [rdi+rdx*4]
   140029a36:	shl    ax,cl
   140029a39:	or     WORD PTR [r10+0x1710],ax
   140029a41:	lea    eax,[rcx+r9*1]
   140029a45:	mov    DWORD PTR [r10+0x1714],eax
   140029a4c:	jmp    0x140029d05
   140029a51:	movzx  ebp,BYTE PTR [r11+r15*1+0x4d7c0]
   140029a5a:	mov    ecx,DWORD PTR [r10+0x1714]
   140029a61:	lea    eax,[rbp+0x101]
   140029a67:	mov    edx,eax
   140029a69:	movzx  esi,WORD PTR [rdi+rax*4+0x2]
   140029a6e:	mov    eax,ebx
   140029a70:	sub    eax,esi
   140029a72:	cmp    ecx,eax
   140029a74:	jle    0x140029ade
   140029a76:	movzx  r8d,WORD PTR [rdi+rdx*4]
   140029a7b:	mov    edx,DWORD PTR [r10+0x28]
   140029a7f:	movzx  eax,r8w
   140029a83:	shl    ax,cl
   140029a86:	mov    rcx,QWORD PTR [r10+0x10]
   140029a8a:	or     WORD PTR [r10+0x1710],ax
   140029a92:	movzx  eax,BYTE PTR [r10+0x1710]
   140029a9a:	mov    BYTE PTR [rdx+rcx*1],al
   140029a9d:	add    DWORD PTR [r10+0x28],0x1
   140029aa2:	mov    edx,DWORD PTR [r10+0x28]
   140029aa6:	movzx  eax,BYTE PTR [r10+0x1711]
   140029aae:	mov    rcx,QWORD PTR [r10+0x10]
   140029ab2:	mov    BYTE PTR [rdx+rcx*1],al
   140029ab5:	mov    edx,DWORD PTR [r10+0x1714]
   140029abc:	add    DWORD PTR [r10+0x28],0x1
   140029ac1:	mov    ecx,ebx
   140029ac3:	lea    eax,[rdx+rsi*1-0x10]
   140029ac7:	sub    cl,dl
   140029ac9:	mov    DWORD PTR [r10+0x1714],eax
   140029ad0:	shr    r8w,cl
   140029ad4:	mov    WORD PTR [r10+0x1710],r8w
   140029adc:	jmp    0x140029af7
   140029ade:	movzx  eax,WORD PTR [rdi+rdx*4]
   140029ae2:	shl    ax,cl
   140029ae5:	or     WORD PTR [r10+0x1710],ax
   140029aed:	lea    eax,[rcx+rsi*1]
   140029af0:	mov    DWORD PTR [r10+0x1714],eax
   140029af7:	mov    r8d,DWORD PTR [r15+rbp*4+0x4cf50]
   140029aff:	test   r8d,r8d
   140029b02:	je     0x140029b9b
   140029b08:	mov    ecx,DWORD PTR [r10+0x1714]
   140029b0f:	sub    r11d,DWORD PTR [r15+rbp*4+0x4d8c0]
   140029b17:	mov    eax,ebx
   140029b19:	sub    eax,r8d
   140029b1c:	cmp    ecx,eax
   140029b1e:	jle    0x140029b84
   140029b20:	mov    edx,DWORD PTR [r10+0x28]
   140029b24:	movzx  eax,r11w
   140029b28:	shl    ax,cl
   140029b2b:	mov    rcx,QWORD PTR [r10+0x10]
   140029b2f:	or     WORD PTR [r10+0x1710],ax
   140029b37:	movzx  eax,BYTE PTR [r10+0x1710]
   140029b3f:	mov    BYTE PTR [rdx+rcx*1],al
   140029b42:	add    DWORD PTR [r10+0x28],0x1
   140029b47:	mov    edx,DWORD PTR [r10+0x28]
   140029b4b:	movzx  eax,BYTE PTR [r10+0x1711]
   140029b53:	mov    rcx,QWORD PTR [r10+0x10]
   140029b57:	mov    BYTE PTR [rdx+rcx*1],al
   140029b5a:	mov    edx,DWORD PTR [r10+0x1714]
   140029b61:	add    DWORD PTR [r10+0x28],0x1
   140029b66:	mov    ecx,ebx
   140029b68:	lea    eax,[rdx+r8*1-0x10]
   140029b6d:	sub    cl,dl
   140029b6f:	mov    DWORD PTR [r10+0x1714],eax
   140029b76:	shr    r11w,cl
   140029b7a:	mov    WORD PTR [r10+0x1710],r11w
   140029b82:	jmp    0x140029b9b
   140029b84:	lea    eax,[rcx+r8*1]
   140029b88:	shl    r11w,cl
   140029b8c:	or     WORD PTR [r10+0x1710],r11w
   140029b94:	mov    DWORD PTR [r10+0x1714],eax
   140029b9b:	add    r9d,0xffffffff
   140029b9f:	cmp    r9d,0x100
   140029ba6:	jae    0x140029bb3
   140029ba8:	movzx  ecx,BYTE PTR [r9+r15*1+0x4d5c0]
   140029bb1:	jmp    0x140029bc7
   140029bb3:	mov    eax,r9d
   140029bb6:	shr    eax,0x7
   140029bb9:	add    eax,0x100
   140029bbe:	movzx  ecx,BYTE PTR [rax+r15*1+0x4d5c0]
   140029bc7:	movzx  esi,WORD PTR [r14+rcx*4+0x2]
   140029bcd:	mov    r11d,ecx
   140029bd0:	mov    ecx,DWORD PTR [r10+0x1714]
   140029bd7:	mov    eax,ebx
   140029bd9:	sub    eax,esi
   140029bdb:	cmp    ecx,eax
   140029bdd:	jle    0x140029c47
   140029bdf:	movzx  r8d,WORD PTR [r14+r11*4]
   140029be4:	mov    edx,DWORD PTR [r10+0x28]
   140029be8:	movzx  eax,r8w
   140029bec:	shl    ax,cl
   140029bef:	mov    rcx,QWORD PTR [r10+0x10]
   140029bf3:	or     WORD PTR [r10+0x1710],ax
   140029bfb:	movzx  eax,BYTE PTR [r10+0x1710]
   140029c03:	mov    BYTE PTR [rdx+rcx*1],al
   140029c06:	add    DWORD PTR [r10+0x28],0x1
   140029c0b:	mov    edx,DWORD PTR [r10+0x28]
   140029c0f:	movzx  eax,BYTE PTR [r10+0x1711]
   140029c17:	mov    rcx,QWORD PTR [r10+0x10]
   140029c1b:	mov    BYTE PTR [rdx+rcx*1],al
   140029c1e:	mov    edx,DWORD PTR [r10+0x1714]
   140029c25:	add    DWORD PTR [r10+0x28],0x1
   140029c2a:	mov    ecx,ebx
   140029c2c:	lea    eax,[rdx+rsi*1-0x10]
   140029c30:	sub    cl,dl
   140029c32:	mov    DWORD PTR [r10+0x1714],eax
   140029c39:	shr    r8w,cl
   140029c3d:	mov    WORD PTR [r10+0x1710],r8w
   140029c45:	jmp    0x140029c61
   140029c47:	movzx  eax,WORD PTR [r14+r11*4]
   140029c4c:	shl    ax,cl
   140029c4f:	or     WORD PTR [r10+0x1710],ax
   140029c57:	lea    eax,[rcx+rsi*1]
   140029c5a:	mov    DWORD PTR [r10+0x1714],eax
   140029c61:	mov    r8d,DWORD PTR [r15+r11*4+0x4cfd0]
   140029c69:	test   r8d,r8d
   140029c6c:	je     0x140029d05
   140029c72:	mov    ecx,DWORD PTR [r10+0x1714]
   140029c79:	sub    r9d,DWORD PTR [r15+r11*4+0x4d940]
   140029c81:	mov    eax,ebx
   140029c83:	sub    eax,r8d
   140029c86:	cmp    ecx,eax
   140029c88:	jle    0x140029cee
   140029c8a:	mov    edx,DWORD PTR [r10+0x28]
   140029c8e:	movzx  eax,r9w
   140029c92:	shl    ax,cl
   140029c95:	mov    rcx,QWORD PTR [r10+0x10]
   140029c99:	or     WORD PTR [r10+0x1710],ax
   140029ca1:	movzx  eax,BYTE PTR [r10+0x1710]
   140029ca9:	mov    BYTE PTR [rdx+rcx*1],al
   140029cac:	add    DWORD PTR [r10+0x28],0x1
   140029cb1:	mov    edx,DWORD PTR [r10+0x28]
   140029cb5:	movzx  eax,BYTE PTR [r10+0x1711]
   140029cbd:	mov    rcx,QWORD PTR [r10+0x10]
   140029cc1:	mov    BYTE PTR [rdx+rcx*1],al
   140029cc4:	mov    edx,DWORD PTR [r10+0x1714]
   140029ccb:	add    DWORD PTR [r10+0x28],0x1
   140029cd0:	mov    ecx,ebx
   140029cd2:	lea    eax,[rdx+r8*1-0x10]
   140029cd7:	sub    cl,dl
   140029cd9:	mov    DWORD PTR [r10+0x1714],eax
   140029ce0:	shr    r9w,cl
   140029ce4:	mov    WORD PTR [r10+0x1710],r9w
   140029cec:	jmp    0x140029d05
   140029cee:	lea    eax,[rcx+r8*1]
   140029cf2:	shl    r9w,cl
   140029cf6:	or     WORD PTR [r10+0x1710],r9w
   140029cfe:	mov    DWORD PTR [r10+0x1714],eax
   140029d05:	cmp    r12d,DWORD PTR [r10+0x16f4]
   140029d0c:	jb     0x140029980
   140029d12:	mov    r15,QWORD PTR [rsp+0x8]
   140029d17:	mov    r13,QWORD PTR [rsp+0x18]
   140029d1c:	mov    rsi,QWORD PTR [rsp+0x40]
   140029d21:	mov    rbp,QWORD PTR [rsp+0x38]
   140029d26:	movzx  r11d,WORD PTR [rdi+0x402]
   140029d2e:	mov    ecx,DWORD PTR [r10+0x1714]
   140029d35:	mov    r14,QWORD PTR [rsp+0x10]
   140029d3a:	mov    r12,QWORD PTR [rsp+0x20]
   140029d3f:	mov    eax,ebx
   140029d41:	sub    eax,r11d
   140029d44:	cmp    ecx,eax
   140029d46:	jle    0x140029db0
   140029d48:	movzx  r9d,WORD PTR [rdi+0x400]
   140029d50:	mov    r8d,DWORD PTR [r10+0x28]
   140029d54:	mov    rdx,QWORD PTR [r10+0x10]
   140029d58:	movzx  eax,r9w
   140029d5c:	shl    ax,cl
   140029d5f:	or     WORD PTR [r10+0x1710],ax
   140029d67:	movzx  eax,BYTE PTR [r10+0x1710]
   140029d6f:	mov    BYTE PTR [r8+rdx*1],al
   140029d73:	add    DWORD PTR [r10+0x28],0x1
   140029d78:	movzx  eax,BYTE PTR [r10+0x1711]
   140029d80:	mov    r8d,DWORD PTR [r10+0x28]
   140029d84:	mov    rdx,QWORD PTR [r10+0x10]
   140029d88:	mov    BYTE PTR [r8+rdx*1],al
   140029d8c:	mov    eax,DWORD PTR [r10+0x1714]
   140029d93:	add    DWORD PTR [r10+0x28],0x1
   140029d98:	sub    bl,al
   140029d9a:	lea    eax,[rax+r11*1-0x10]
   140029d9f:	movzx  ecx,bl
   140029da2:	shr    r9w,cl
   140029da6:	mov    WORD PTR [r10+0x1710],r9w
   140029dae:	jmp    0x140029dc6
   140029db0:	movzx  eax,WORD PTR [rdi+0x400]
   140029db7:	shl    ax,cl
   140029dba:	or     WORD PTR [r10+0x1710],ax
   140029dc2:	lea    eax,[rcx+r11*1]
   140029dc6:	mov    rbx,QWORD PTR [rsp+0x30]
   140029dcb:	mov    DWORD PTR [r10+0x1714],eax
   140029dd2:	movzx  eax,WORD PTR [rdi+0x402]
   140029dd9:	mov    rdi,QWORD PTR [rsp+0x48]
   140029dde:	mov    DWORD PTR [r10+0x170c],eax
   140029de5:	add    rsp,0x28
   140029de9:	ret    
   140029dea:	int3   
   140029deb:	int3   
   140029dec:	int3   
   140029ded:	int3   
   140029dee:	int3   
   140029def:	int3   
   140029df0:	xor    r9d,r9d
   140029df3:	mov    r10,rcx
   140029df6:	lea    rdx,[rcx+0xbc]
   140029dfd:	mov    eax,r9d
   140029e00:	mov    r8,r9
   140029e03:	cmp    WORD PTR [rdx],r9w
   140029e07:	jne    0x140029e1a
   140029e09:	add    r8,0x1
   140029e0d:	add    eax,0x1
   140029e10:	add    rdx,0x4
   140029e14:	cmp    r8,0x9
   140029e18:	jl     0x140029e03
   140029e1a:	cmp    eax,0x9
   140029e1d:	jne    0x140029e47
   140029e1f:	mov    eax,0xe
   140029e24:	add    rcx,0xf4
   140029e2b:	mov    rdx,rax
   140029e2e:	xchg   ax,ax
   140029e30:	cmp    WORD PTR [rcx],r9w
   140029e34:	jne    0x140029e47
   140029e36:	add    rdx,0x1
   140029e3a:	add    eax,0x1
   140029e3d:	add    rcx,0x4
   140029e41:	cmp    rdx,0x20
   140029e45:	jl     0x140029e30
   140029e47:	cmp    eax,0x20
   140029e4a:	mov    rax,QWORD PTR [r10]
   140029e4d:	sete   r9b
   140029e51:	mov    DWORD PTR [rax+0x48],r9d
   140029e55:	ret    
   140029e56:	int3   
   140029e57:	int3   
   140029e58:	int3   
   140029e59:	int3   
   140029e5a:	int3   
   140029e5b:	int3   
   140029e5c:	int3   
   140029e5d:	int3   
   140029e5e:	int3   
   140029e5f:	int3   
   140029e60:	xor    eax,eax
   140029e62:	xchg   ax,ax
   140029e64:	data16 data16 xchg ax,ax
   140029e68:	data16 data16 xchg ax,ax
   140029e6c:	data16 data16 xchg ax,ax
   140029e70:	mov    r8d,ecx
   140029e73:	sub    edx,0x1
   140029e76:	shr    ecx,1
   140029e78:	and    r8d,0x1
   140029e7c:	or     eax,r8d
   140029e7f:	add    eax,eax
   140029e81:	test   edx,edx
   140029e83:	jg     0x140029e70
   140029e85:	shr    eax,1
   140029e87:	ret    
   140029e88:	int3   
   140029e89:	int3   
   140029e8a:	int3   
   140029e8b:	int3   
   140029e8c:	int3   
   140029e8d:	int3   
   140029e8e:	int3   
   140029e8f:	int3   
   140029e90:	mov    eax,DWORD PTR [rcx+0x1714]
   140029e96:	mov    r9,rcx
   140029e99:	cmp    eax,0x10
   140029e9c:	jne    0x140029ee2
   140029e9e:	mov    r8d,DWORD PTR [rcx+0x28]
   140029ea2:	movzx  eax,BYTE PTR [rcx+0x1710]
   140029ea9:	mov    rdx,QWORD PTR [rcx+0x10]
   140029ead:	mov    BYTE PTR [r8+rdx*1],al
   140029eb1:	add    DWORD PTR [rcx+0x28],0x1
   140029eb5:	mov    edx,DWORD PTR [rcx+0x28]
   140029eb8:	movzx  eax,BYTE PTR [r9+0x1711]
   140029ec0:	mov    rcx,QWORD PTR [rcx+0x10]
   140029ec4:	mov    BYTE PTR [rdx+rcx*1],al
   140029ec7:	add    DWORD PTR [r9+0x28],0x1
   140029ecc:	mov    WORD PTR [r9+0x1710],0x0
   140029ed6:	mov    DWORD PTR [r9+0x1714],0x0
   140029ee1:	ret    
   140029ee2:	cmp    eax,0x8
   140029ee5:	jl     0x140029f16
   140029ee7:	mov    edx,DWORD PTR [rcx+0x28]
   140029eea:	movzx  eax,BYTE PTR [r9+0x1710]
   140029ef2:	mov    rcx,QWORD PTR [rcx+0x10]
   140029ef6:	mov    BYTE PTR [rdx+rcx*1],al
   140029ef9:	movzx  eax,BYTE PTR [r9+0x1711]
   140029f01:	add    DWORD PTR [r9+0x28],0x1
   140029f06:	add    DWORD PTR [r9+0x1714],0xfffffff8
   140029f0e:	mov    WORD PTR [r9+0x1710],ax
   140029f16:	ret    0x0
   140029f19:	int3   
   140029f1a:	int3   
   140029f1b:	int3   
   140029f1c:	int3   
   140029f1d:	int3   
   140029f1e:	int3   
   140029f1f:	int3   
   140029f20:	mov    eax,DWORD PTR [rcx+0x1714]
   140029f26:	mov    r9,rcx
   140029f29:	cmp    eax,0x8
   140029f2c:	jle    0x140029f71
   140029f2e:	mov    r8d,DWORD PTR [rcx+0x28]
   140029f32:	movzx  eax,BYTE PTR [rcx+0x1710]
   140029f39:	mov    rdx,QWORD PTR [rcx+0x10]
   140029f3d:	mov    BYTE PTR [r8+rdx*1],al
   140029f41:	add    DWORD PTR [rcx+0x28],0x1
   140029f45:	movzx  eax,BYTE PTR [rcx+0x1711]
   140029f4c:	mov    edx,DWORD PTR [rcx+0x28]
   140029f4f:	mov    rcx,QWORD PTR [rcx+0x10]
   140029f53:	mov    BYTE PTR [rdx+rcx*1],al
   140029f56:	add    DWORD PTR [r9+0x28],0x1
   140029f5b:	mov    WORD PTR [r9+0x1710],0x0
   140029f65:	mov    DWORD PTR [r9+0x1714],0x0
   140029f70:	ret    
   140029f71:	test   eax,eax
   140029f73:	jle    0x140029f7f
   140029f75:	movzx  eax,BYTE PTR [r9+0x1710]
   140029f7d:	jmp    0x140029f4c
   140029f7f:	mov    WORD PTR [rcx+0x1710],0x0
   140029f88:	mov    DWORD PTR [rcx+0x1714],0x0
   140029f92:	ret    
   140029f93:	int3   
   140029f94:	int3   
   140029f95:	int3   
   140029f96:	int3   
   140029f97:	int3   
   140029f98:	int3   
   140029f99:	int3   
   140029f9a:	int3   
   140029f9b:	int3   
   140029f9c:	int3   
   140029f9d:	int3   
   140029f9e:	int3   
   140029f9f:	int3   
   140029fa0:	sub    rsp,0x28
   140029fa4:	mov    QWORD PTR [rsp+0x40],rbx
   140029fa9:	mov    QWORD PTR [rsp+0x48],rdi
   140029fae:	mov    r10d,r9d
   140029fb1:	mov    rdi,rdx
   140029fb4:	mov    ebx,r8d
   140029fb7:	mov    r11,rcx
   140029fba:	call   0x140029f20
   140029fbf:	test   r10d,r10d
   140029fc2:	mov    DWORD PTR [r11+0x170c],0x8
   140029fcd:	je     0x14002a026
   140029fcf:	mov    r9d,DWORD PTR [r11+0x28]
   140029fd3:	mov    rax,QWORD PTR [r11+0x10]
   140029fd7:	movzx  ecx,bx
   140029fda:	mov    BYTE PTR [r9+rax*1],bl
   140029fde:	add    DWORD PTR [r11+0x28],0x1
   140029fe3:	mov    edx,DWORD PTR [r11+0x28]
   140029fe7:	mov    rax,QWORD PTR [r11+0x10]
   140029feb:	shr    cx,0x8
   140029fef:	mov    BYTE PTR [rdx+rax*1],cl
   140029ff2:	add    DWORD PTR [r11+0x28],0x1
   140029ff7:	mov    edx,DWORD PTR [r11+0x28]
   140029ffb:	mov    rax,QWORD PTR [r11+0x10]
   140029fff:	movzx  ecx,bl
   14002a002:	not    cl
   14002a004:	mov    BYTE PTR [rdx+rax*1],cl
   14002a007:	add    DWORD PTR [r11+0x28],0x1
   14002a00c:	mov    edx,DWORD PTR [r11+0x28]
   14002a010:	mov    rax,QWORD PTR [r11+0x10]
   14002a014:	movzx  ecx,bx
   14002a017:	not    cx
   14002a01a:	shr    cx,0x8
   14002a01e:	mov    BYTE PTR [rdx+rax*1],cl
   14002a021:	add    DWORD PTR [r11+0x28],0x1
   14002a026:	test   ebx,ebx
   14002a028:	je     0x14002a04c
   14002a02a:	data16 xchg ax,ax
   14002a02d:	data16 xchg ax,ax
   14002a030:	movzx  eax,BYTE PTR [rdi]
   14002a033:	mov    edx,DWORD PTR [r11+0x28]
   14002a037:	mov    rcx,QWORD PTR [r11+0x10]
   14002a03b:	mov    BYTE PTR [rdx+rcx*1],al
   14002a03e:	add    DWORD PTR [r11+0x28],0x1
   14002a043:	add    rdi,0x1
   14002a047:	add    ebx,0xffffffff
   14002a04a:	jne    0x14002a030
   14002a04c:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a051:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a056:	add    rsp,0x28
   14002a05a:	ret    
   14002a05b:	int3   
   14002a05c:	int3   
   14002a05d:	int3   
   14002a05e:	int3   
   14002a05f:	int3   
   14002a060:	lea    rax,[rcx+0xbc]
   14002a067:	mov    WORD PTR [rcx+0x1710],0x0
   14002a070:	mov    DWORD PTR [rcx+0x1714],0x0
   14002a07a:	mov    QWORD PTR [rcx+0xb40],rax
   14002a081:	lea    rax,[rip+0x3e0e8]        # 0x140068170
   14002a088:	mov    DWORD PTR [rcx+0x170c],0x8
   14002a092:	mov    QWORD PTR [rcx+0xb50],rax
   14002a099:	lea    rax,[rcx+0x9b0]
   14002a0a0:	mov    QWORD PTR [rcx+0xb58],rax
   14002a0a7:	lea    rax,[rip+0x3e0e2]        # 0x140068190
   14002a0ae:	mov    QWORD PTR [rcx+0xb68],rax
   14002a0b5:	lea    rax,[rcx+0xaa4]
   14002a0bc:	mov    QWORD PTR [rcx+0xb70],rax
   14002a0c3:	lea    rax,[rip+0x3e0e6]        # 0x1400681b0
   14002a0ca:	mov    QWORD PTR [rcx+0xb80],rax
   14002a0d1:	jmp    0x140028b90
   14002a0d6:	int3   
   14002a0d7:	int3   
   14002a0d8:	int3   
   14002a0d9:	int3   
   14002a0da:	int3   
   14002a0db:	int3   
   14002a0dc:	int3   
   14002a0dd:	int3   
   14002a0de:	int3   
   14002a0df:	int3   
   14002a0e0:	rex push rbx
   14002a0e2:	sub    rsp,0x40
   14002a0e6:	lea    rax,[rsp+0x22]
   14002a0eb:	mov    rbx,r8
   14002a0ee:	xor    r10w,r10w
   14002a0f2:	mov    r11,rcx
   14002a0f5:	mov    r9d,0x1
   14002a0fb:	sub    rbx,rax
   14002a0fe:	xchg   ax,ax
   14002a100:	lea    rax,[rbx+r9*2]
   14002a104:	add    r9,0x1
   14002a108:	add    r10w,WORD PTR [rsp+rax*1+0x20]
   14002a10e:	add    r10w,r10w
   14002a112:	cmp    r9,0xf
   14002a116:	mov    WORD PTR [rsp+r9*2+0x1e],r10w
   14002a11c:	jle    0x14002a100
   14002a11e:	xor    r9d,r9d
   14002a121:	test   edx,edx
   14002a123:	movsxd r10,edx
   14002a126:	js     0x14002a15a
   14002a128:	data16 data16 xchg ax,ax
   14002a12c:	data16 data16 xchg ax,ax
   14002a130:	movzx  edx,WORD PTR [r11+r9*4+0x2]
   14002a136:	test   edx,edx
   14002a138:	je     0x14002a151
   14002a13a:	movzx  ecx,WORD PTR [rsp+rdx*2+0x20]
   14002a13f:	lea    eax,[rcx+0x1]
   14002a142:	mov    WORD PTR [rsp+rdx*2+0x20],ax
   14002a147:	call   0x140029e60
   14002a14c:	mov    WORD PTR [r11+r9*4],ax
   14002a151:	add    r9,0x1
   14002a155:	cmp    r9,r10
   14002a158:	jle    0x14002a130
   14002a15a:	add    rsp,0x40
   14002a15e:	pop    rbx
   14002a15f:	ret    
   14002a160:	sub    rsp,0x38
   14002a164:	mov    rax,QWORD PTR [rdx+0x10]
   14002a168:	mov    QWORD PTR [rsp+0x48],rbp
   14002a16d:	mov    QWORD PTR [rsp+0x50],rsi
   14002a172:	mov    rsi,QWORD PTR [rdx]
   14002a175:	mov    r9,QWORD PTR [rax]
   14002a178:	mov    QWORD PTR [rsp+0x58],rdi
   14002a17d:	mov    QWORD PTR [rsp+0x30],r12
   14002a182:	movsxd r12,DWORD PTR [rax+0x14]
   14002a186:	mov    rdi,rcx
   14002a189:	mov    DWORD PTR [rcx+0x149c],0x0
   14002a193:	mov    DWORD PTR [rcx+0x14a0],0x23d
   14002a19d:	xor    r8d,r8d
   14002a1a0:	xor    ecx,ecx
   14002a1a2:	test   r12d,r12d
   14002a1a5:	mov    QWORD PTR [rsp+0x28],r13
   14002a1aa:	mov    r13,rdx
   14002a1ad:	mov    ebp,0xffffffff
   14002a1b2:	jle    0x14002a1f2
   14002a1b4:	cmp    WORD PTR [rsi+rcx*4],0x0
   14002a1b9:	je     0x14002a1de
   14002a1bb:	add    DWORD PTR [rdi+0x149c],0x1
   14002a1c2:	movsxd rax,DWORD PTR [rdi+0x149c]
   14002a1c9:	mov    ebp,r8d
   14002a1cc:	mov    DWORD PTR [rdi+rax*4+0xba8],r8d
   14002a1d4:	mov    BYTE PTR [rcx+rdi*1+0x14a4],0x0
   14002a1dc:	jmp    0x14002a1e5
   14002a1de:	mov    WORD PTR [rsi+rcx*4+0x2],0x0
   14002a1e5:	add    rcx,0x1
   14002a1e9:	add    r8d,0x1
   14002a1ed:	cmp    rcx,r12
   14002a1f0:	jl     0x14002a1b4
   14002a1f2:	cmp    DWORD PTR [rdi+0x149c],0x2
   14002a1f9:	jge    0x14002a255
   14002a1fb:	xchg   ax,ax
   14002a1fd:	data16 xchg ax,ax
   14002a200:	cmp    ebp,0x2
   14002a203:	jge    0x14002a20c
   14002a205:	add    ebp,0x1
   14002a208:	mov    ecx,ebp
   14002a20a:	jmp    0x14002a20e
   14002a20c:	xor    ecx,ecx
   14002a20e:	add    DWORD PTR [rdi+0x149c],0x1
   14002a215:	movsxd rax,DWORD PTR [rdi+0x149c]
   14002a21c:	mov    DWORD PTR [rdi+rax*4+0xba8],ecx
   14002a223:	movsxd rax,ecx
   14002a226:	mov    WORD PTR [rsi+rax*4],0x1
   14002a22c:	mov    BYTE PTR [rax+rdi*1+0x14a4],0x0
   14002a234:	add    DWORD PTR [rdi+0x1700],0xffffffff
   14002a23b:	test   r9,r9
   14002a23e:	je     0x14002a24c
   14002a240:	movzx  eax,WORD PTR [r9+rax*4+0x2]
   14002a246:	sub    DWORD PTR [rdi+0x1704],eax
   14002a24c:	cmp    DWORD PTR [rdi+0x149c],0x2
   14002a253:	jl     0x14002a200
   14002a255:	mov    DWORD PTR [rdx+0x8],ebp
   14002a258:	mov    eax,DWORD PTR [rdi+0x149c]
   14002a25e:	mov    QWORD PTR [rsp+0x40],rbx
   14002a263:	cdq    
   14002a264:	sub    eax,edx
   14002a266:	sar    eax,1
   14002a268:	cmp    eax,0x1
   14002a26b:	mov    ebx,eax
   14002a26d:	jl     0x14002a290
   14002a26f:	nop
   14002a270:	mov    r8d,ebx
   14002a273:	mov    rdx,rsi
   14002a276:	mov    rcx,rdi
   14002a279:	call   0x140028c20
   14002a27e:	sub    ebx,0x1
   14002a281:	cmp    ebx,0x1
   14002a284:	jge    0x14002a270
   14002a286:	data16 data16 xchg ax,ax
   14002a28a:	data16 xchg ax,ax
   14002a28d:	data16 xchg ax,ax
   14002a290:	movsxd rdx,DWORD PTR [rdi+0x149c]
   14002a297:	movsxd rbx,DWORD PTR [rdi+0xbac]
   14002a29e:	mov    r8d,0x1
   14002a2a4:	mov    ecx,DWORD PTR [rdi+rdx*4+0xba8]
   14002a2ab:	lea    eax,[rdx-0x1]
   14002a2ae:	mov    rdx,rsi
   14002a2b1:	mov    DWORD PTR [rdi+0xbac],ecx
   14002a2b7:	mov    rcx,rdi
   14002a2ba:	mov    DWORD PTR [rdi+0x149c],eax
   14002a2c0:	call   0x140028c20
   14002a2c5:	add    DWORD PTR [rdi+0x14a0],0xffffffff
   14002a2cc:	movsxd rcx,DWORD PTR [rdi+0xbac]
   14002a2d3:	movsxd rax,DWORD PTR [rdi+0x14a0]
   14002a2da:	movsxd r9,r12d
   14002a2dd:	mov    rdx,rcx
   14002a2e0:	mov    DWORD PTR [rdi+rax*4+0xba8],ebx
   14002a2e7:	add    DWORD PTR [rdi+0x14a0],0xffffffff
   14002a2ee:	movsxd rax,DWORD PTR [rdi+0x14a0]
   14002a2f5:	mov    DWORD PTR [rdi+rax*4+0xba8],ecx
   14002a2fc:	movzx  eax,WORD PTR [rsi+rbx*4]
   14002a300:	add    ax,WORD PTR [rsi+rcx*4]
   14002a304:	mov    WORD PTR [rsi+r9*4],ax
   14002a309:	movzx  eax,BYTE PTR [rbx+rdi*1+0x14a4]
   14002a311:	movzx  ecx,BYTE PTR [rcx+rdi*1+0x14a4]
   14002a319:	cmp    al,cl
   14002a31b:	jb     0x14002a322
   14002a31d:	movzx  eax,al
   14002a320:	jmp    0x14002a325
   14002a322:	movzx  eax,cl
   14002a325:	add    al,0x1
   14002a327:	mov    r8d,0x1
   14002a32d:	mov    rcx,rdi
   14002a330:	mov    BYTE PTR [r9+rdi*1+0x14a4],al
   14002a338:	mov    WORD PTR [rsi+rdx*4+0x2],r12w
   14002a33e:	mov    WORD PTR [rsi+rbx*4+0x2],r12w
   14002a344:	mov    DWORD PTR [rdi+0xbac],r12d
   14002a34b:	mov    rdx,rsi
   14002a34e:	add    r12d,0x1
   14002a352:	call   0x140028c20
   14002a357:	cmp    DWORD PTR [rdi+0x149c],0x2
   14002a35e:	jge    0x14002a290
   14002a364:	add    DWORD PTR [rdi+0x14a0],0xffffffff
   14002a36b:	movsxd r8,DWORD PTR [rdi+0x14a0]
   14002a372:	mov    eax,DWORD PTR [rdi+0xbac]
   14002a378:	mov    rdx,r13
   14002a37b:	mov    DWORD PTR [rdi+r8*4+0xba8],eax
   14002a383:	call   0x140028d20
   14002a388:	lea    r8,[rdi+0xb88]
   14002a38f:	mov    edx,ebp
   14002a391:	mov    rcx,rsi
   14002a394:	mov    r13,QWORD PTR [rsp+0x28]
   14002a399:	mov    r12,QWORD PTR [rsp+0x30]
   14002a39e:	mov    rdi,QWORD PTR [rsp+0x58]
   14002a3a3:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a3a8:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a3ad:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a3b2:	add    rsp,0x38
   14002a3b6:	jmp    0x14002a0e0
   14002a3bb:	int3   
   14002a3bc:	int3   
   14002a3bd:	int3   
   14002a3be:	int3   
   14002a3bf:	int3   
   14002a3c0:	rex push rbx
   14002a3c2:	sub    rsp,0x20
   14002a3c6:	mov    r8d,DWORD PTR [rcx+0xb48]
   14002a3cd:	lea    rdx,[rcx+0xbc]
   14002a3d4:	mov    rbx,rcx
   14002a3d7:	call   0x140028f70
   14002a3dc:	mov    r8d,DWORD PTR [rcx+0xb60]
   14002a3e3:	lea    rdx,[rcx+0x9b0]
   14002a3ea:	call   0x140028f70
   14002a3ef:	lea    rdx,[rcx+0xb70]
   14002a3f6:	call   0x14002a160
   14002a3fb:	mov    r11d,0x12
   14002a401:	lea    rax,[rip+0x22c98]        # 0x14004d0a0
   14002a408:	mov    rdx,r11
   14002a40b:	xchg   ax,ax
   14002a40d:	data16 xchg ax,ax
   14002a410:	movzx  ecx,BYTE PTR [rdx+rax*1]
   14002a414:	cmp    WORD PTR [rbx+rcx*4+0xaa6],0x0
   14002a41d:	jne    0x14002a42d
   14002a41f:	sub    rdx,0x1
   14002a423:	sub    r11d,0x1
   14002a427:	cmp    rdx,0x3
   14002a42b:	jge    0x14002a410
   14002a42d:	lea    ecx,[r11+r11*2+0x11]
   14002a432:	mov    eax,r11d
   14002a435:	add    DWORD PTR [rbx+0x1700],ecx
   14002a43b:	add    rsp,0x20
   14002a43f:	pop    rbx
   14002a440:	ret    
   14002a441:	int3   
   14002a442:	int3   
   14002a443:	int3   
   14002a444:	int3   
   14002a445:	int3   
   14002a446:	int3   
   14002a447:	int3   
   14002a448:	int3   
   14002a449:	int3   
   14002a44a:	int3   
   14002a44b:	int3   
   14002a44c:	int3   
   14002a44d:	int3   
   14002a44e:	int3   
   14002a44f:	int3   
   14002a450:	mov    r10,rcx
   14002a453:	mov    ecx,DWORD PTR [rcx+0x1714]
   14002a459:	mov    r11,rdx
   14002a45c:	cmp    ecx,0xd
   14002a45f:	jle    0x14002a4bf
   14002a461:	mov    edx,DWORD PTR [r10+0x28]
   14002a465:	movzx  eax,r9w
   14002a469:	shl    ax,cl
   14002a46c:	mov    rcx,QWORD PTR [r10+0x10]
   14002a470:	or     WORD PTR [r10+0x1710],ax
   14002a478:	movzx  eax,BYTE PTR [r10+0x1710]
   14002a480:	mov    BYTE PTR [rdx+rcx*1],al
   14002a483:	add    DWORD PTR [r10+0x28],0x1
   14002a488:	mov    edx,DWORD PTR [r10+0x28]
   14002a48c:	movzx  eax,BYTE PTR [r10+0x1711]
   14002a494:	mov    rcx,QWORD PTR [r10+0x10]
   14002a498:	mov    BYTE PTR [rdx+rcx*1],al
   14002a49b:	mov    edx,DWORD PTR [r10+0x1714]
   14002a4a2:	add    DWORD PTR [r10+0x28],0x1
   14002a4a7:	mov    ecx,0x10
   14002a4ac:	lea    eax,[rdx-0xd]
   14002a4af:	sub    cl,dl
   14002a4b1:	shr    r9w,cl
   14002a4b5:	mov    WORD PTR [r10+0x1710],r9w
   14002a4bd:	jmp    0x14002a4ce
   14002a4bf:	shl    r9w,cl
   14002a4c3:	lea    eax,[rcx+0x3]
   14002a4c6:	or     WORD PTR [r10+0x1710],r9w
   14002a4ce:	mov    r9d,0x1
   14002a4d4:	mov    rdx,r11
   14002a4d7:	mov    rcx,r10
   14002a4da:	mov    DWORD PTR [r10+0x1714],eax
   14002a4e1:	jmp    0x140029fa0
   14002a4e6:	int3   
   14002a4e7:	int3   
   14002a4e8:	int3   
   14002a4e9:	int3   
   14002a4ea:	int3   
   14002a4eb:	int3   
   14002a4ec:	int3   
   14002a4ed:	int3   
   14002a4ee:	int3   
   14002a4ef:	int3   
   14002a4f0:	sub    rsp,0x28
   14002a4f4:	mov    r10,rcx
   14002a4f7:	mov    ecx,DWORD PTR [rcx+0x1714]
   14002a4fd:	mov    QWORD PTR [rsp+0x40],rbx
   14002a502:	cmp    ecx,0xd
   14002a505:	mov    QWORD PTR [rsp+0x48],rdi
   14002a50a:	mov    edi,0x10
   14002a50f:	jle    0x14002a579
   14002a511:	mov    edx,DWORD PTR [r10+0x28]
   14002a515:	mov    ebx,0x2
   14002a51a:	mov    eax,ebx
   14002a51c:	shl    ax,cl
   14002a51f:	mov    rcx,QWORD PTR [r10+0x10]
   14002a523:	or     WORD PTR [r10+0x1710],ax
   14002a52b:	movzx  eax,BYTE PTR [r10+0x1710]
   14002a533:	mov    BYTE PTR [rdx+rcx*1],al
   14002a536:	add    DWORD PTR [r10+0x28],0x1
   14002a53b:	mov    edx,DWORD PTR [r10+0x28]
   14002a53f:	movzx  eax,BYTE PTR [r10+0x1711]
   14002a547:	mov    rcx,QWORD PTR [r10+0x10]
   14002a54b:	mov    BYTE PTR [rdx+rcx*1],al
   14002a54e:	mov    r8d,DWORD PTR [r10+0x1714]
   14002a555:	add    DWORD PTR [r10+0x28],0x1
   14002a55a:	mov    ecx,edi
   14002a55c:	mov    edx,ebx
   14002a55e:	lea    eax,[r8-0xd]
   14002a562:	sub    cl,r8b
   14002a565:	mov    DWORD PTR [r10+0x1714],eax
   14002a56c:	shr    dx,cl
   14002a56f:	mov    WORD PTR [r10+0x1710],dx
   14002a577:	jmp    0x14002a595
   14002a579:	mov    ebx,0x2
   14002a57e:	mov    eax,ebx
   14002a580:	shl    ax,cl
   14002a583:	or     WORD PTR [r10+0x1710],ax
   14002a58b:	lea    eax,[rcx+0x3]
   14002a58e:	mov    DWORD PTR [r10+0x1714],eax
   14002a595:	mov    ecx,DWORD PTR [r10+0x1714]
   14002a59c:	cmp    ecx,0x9
   14002a59f:	jle    0x14002a609
   14002a5a1:	mov    edx,DWORD PTR [r10+0x28]
   14002a5a5:	xor    r11d,r11d
   14002a5a8:	mov    eax,r11d
   14002a5ab:	shl    ax,cl
   14002a5ae:	mov    rcx,QWORD PTR [r10+0x10]
   14002a5b2:	or     WORD PTR [r10+0x1710],ax
   14002a5ba:	movzx  eax,BYTE PTR [r10+0x1710]
   14002a5c2:	mov    BYTE PTR [rdx+rcx*1],al
   14002a5c5:	add    DWORD PTR [r10+0x28],0x1
   14002a5ca:	mov    edx,DWORD PTR [r10+0x28]
   14002a5ce:	movzx  eax,BYTE PTR [r10+0x1711]
   14002a5d6:	mov    rcx,QWORD PTR [r10+0x10]
   14002a5da:	mov    BYTE PTR [rdx+rcx*1],al
   14002a5dd:	mov    r8d,DWORD PTR [r10+0x1714]
   14002a5e4:	add    DWORD PTR [r10+0x28],0x1
   14002a5e9:	mov    ecx,edi
   14002a5eb:	mov    edx,r11d
   14002a5ee:	lea    eax,[r8-0x9]
   14002a5f2:	sub    cl,r8b
   14002a5f5:	mov    DWORD PTR [r10+0x1714],eax
   14002a5fc:	shr    dx,cl
   14002a5ff:	mov    WORD PTR [r10+0x1710],dx
   14002a607:	jmp    0x14002a624
   14002a609:	xor    r11d,r11d
   14002a60c:	mov    eax,r11d
   14002a60f:	shl    ax,cl
   14002a612:	or     WORD PTR [r10+0x1710],ax
   14002a61a:	lea    eax,[rcx+0x7]
   14002a61d:	mov    DWORD PTR [r10+0x1714],eax
   14002a624:	mov    rcx,r10
   14002a627:	call   0x140029e90
   14002a62c:	mov    ecx,DWORD PTR [r10+0x1714]
   14002a633:	mov    eax,DWORD PTR [r10+0x170c]
   14002a63a:	sub    eax,ecx
   14002a63c:	add    eax,0xb
   14002a63f:	cmp    eax,0x9
   14002a642:	jge    0x14002a74a
   14002a648:	cmp    ecx,0xd
   14002a64b:	jle    0x14002a6ac
   14002a64d:	mov    edx,DWORD PTR [r10+0x28]
   14002a651:	mov    eax,ebx
   14002a653:	shl    ax,cl
   14002a656:	mov    rcx,QWORD PTR [r10+0x10]
   14002a65a:	or     WORD PTR [r10+0x1710],ax
   14002a662:	movzx  eax,BYTE PTR [r10+0x1710]
   14002a66a:	mov    BYTE PTR [rdx+rcx*1],al
   14002a66d:	add    DWORD PTR [r10+0x28],0x1
   14002a672:	mov    edx,DWORD PTR [r10+0x28]
   14002a676:	movzx  eax,BYTE PTR [r10+0x1711]
   14002a67e:	mov    rcx,QWORD PTR [r10+0x10]
   14002a682:	mov    BYTE PTR [rdx+rcx*1],al
   14002a685:	mov    edx,DWORD PTR [r10+0x1714]
   14002a68c:	add    DWORD PTR [r10+0x28],0x1
   14002a691:	mov    ecx,edi
   14002a693:	lea    eax,[rdx-0xd]
   14002a696:	sub    cl,dl
   14002a698:	mov    DWORD PTR [r10+0x1714],eax
   14002a69f:	shr    bx,cl
   14002a6a2:	mov    WORD PTR [r10+0x1710],bx
   14002a6aa:	jmp    0x14002a6c1
   14002a6ac:	lea    eax,[rcx+0x3]
   14002a6af:	shl    bx,cl
   14002a6b2:	or     WORD PTR [r10+0x1710],bx
   14002a6ba:	mov    DWORD PTR [r10+0x1714],eax
   14002a6c1:	mov    ecx,DWORD PTR [r10+0x1714]
   14002a6c8:	cmp    ecx,0x9
   14002a6cb:	jle    0x14002a72c
   14002a6cd:	mov    r8d,DWORD PTR [r10+0x28]
   14002a6d1:	mov    rdx,QWORD PTR [r10+0x10]
   14002a6d5:	mov    eax,r11d
   14002a6d8:	shl    ax,cl
   14002a6db:	or     WORD PTR [r10+0x1710],ax
   14002a6e3:	movzx  eax,BYTE PTR [r10+0x1710]
   14002a6eb:	mov    BYTE PTR [r8+rdx*1],al
   14002a6ef:	add    DWORD PTR [r10+0x28],0x1
   14002a6f4:	movzx  eax,BYTE PTR [r10+0x1711]
   14002a6fc:	mov    r8d,DWORD PTR [r10+0x28]
   14002a700:	mov    rdx,QWORD PTR [r10+0x10]
   14002a704:	mov    BYTE PTR [r8+rdx*1],al
   14002a708:	mov    eax,DWORD PTR [r10+0x1714]
   14002a70f:	add    DWORD PTR [r10+0x28],0x1
   14002a714:	sub    dil,al
   14002a717:	movzx  ecx,dil
   14002a71b:	shr    r11w,cl
   14002a71f:	add    eax,0xfffffff7
   14002a722:	mov    WORD PTR [r10+0x1710],r11w
   14002a72a:	jmp    0x14002a73b
   14002a72c:	shl    r11w,cl
   14002a730:	lea    eax,[rcx+0x7]
   14002a733:	or     WORD PTR [r10+0x1710],r11w
   14002a73b:	mov    rcx,r10
   14002a73e:	mov    DWORD PTR [r10+0x1714],eax
   14002a745:	call   0x140029e90
   14002a74a:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a74f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a754:	mov    DWORD PTR [r10+0x170c],0x7
   14002a75f:	add    rsp,0x28
   14002a763:	ret    
   14002a764:	int3   
   14002a765:	int3   
   14002a766:	int3   
   14002a767:	int3   
   14002a768:	int3   
   14002a769:	int3   
   14002a76a:	int3   
   14002a76b:	int3   
   14002a76c:	int3   
   14002a76d:	int3   
   14002a76e:	int3   
   14002a76f:	int3   
   14002a770:	sub    rsp,0x28
   14002a774:	mov    QWORD PTR [rsp+0x30],rbx
   14002a779:	mov    QWORD PTR [rsp+0x38],rbp
   14002a77e:	mov    QWORD PTR [rsp+0x40],rsi
   14002a783:	mov    esi,r9d
   14002a786:	xor    r9d,r9d
   14002a789:	mov    QWORD PTR [rsp+0x48],rdi
   14002a78e:	cmp    DWORD PTR [rcx+0xac],r9d
   14002a795:	mov    rbp,rdx
   14002a798:	mov    rbx,rcx
   14002a79b:	mov    edi,r8d
   14002a79e:	jle    0x14002a7fc
   14002a7a0:	test   r8d,r8d
   14002a7a3:	je     0x14002a7b3
   14002a7a5:	mov    rax,QWORD PTR [rcx]
   14002a7a8:	cmp    DWORD PTR [rax+0x48],0x2
   14002a7ac:	jne    0x14002a7b3
   14002a7ae:	call   0x140029df0
   14002a7b3:	lea    rdx,[rbx+0xb40]
   14002a7ba:	mov    rcx,rbx
   14002a7bd:	call   0x14002a160
   14002a7c2:	lea    rdx,[rbx+0xb58]
   14002a7c9:	mov    rcx,rbx
   14002a7cc:	call   0x14002a160
   14002a7d1:	mov    rcx,rbx
   14002a7d4:	call   0x14002a3c0
   14002a7d9:	mov    ecx,DWORD PTR [rbx+0x1700]
   14002a7df:	mov    edx,DWORD PTR [rbx+0x1704]
   14002a7e5:	add    ecx,0xa
   14002a7e8:	add    edx,0xa
   14002a7eb:	mov    r9d,eax
   14002a7ee:	shr    ecx,0x3
   14002a7f1:	shr    edx,0x3
   14002a7f4:	cmp    edx,ecx
   14002a7f6:	ja     0x14002a802
   14002a7f8:	mov    ecx,edx
   14002a7fa:	jmp    0x14002a802
   14002a7fc:	lea    edx,[r8+0x5]
   14002a800:	mov    ecx,edx
   14002a802:	lea    eax,[rdi+0x4]
   14002a805:	cmp    eax,ecx
   14002a807:	ja     0x14002a824
   14002a809:	test   rbp,rbp
   14002a80c:	je     0x14002a824
   14002a80e:	mov    r9d,esi
   14002a811:	mov    r8d,edi
   14002a814:	mov    rdx,rbp
   14002a817:	mov    rcx,rbx
   14002a81a:	call   0x14002a450
   14002a81f:	jmp    0x14002a98c
   14002a824:	cmp    DWORD PTR [rbx+0xb0],0x4
   14002a82b:	je     0x14002a8f5
   14002a831:	cmp    edx,ecx
   14002a833:	je     0x14002a8f5
   14002a839:	mov    ecx,DWORD PTR [rbx+0x1714]
   14002a83f:	cmp    ecx,0xd
   14002a842:	jle    0x14002a8a4
   14002a844:	mov    edx,DWORD PTR [rbx+0x28]
   14002a847:	lea    r8d,[rsi+0x4]
   14002a84b:	movzx  eax,r8w
   14002a84f:	shl    ax,cl
   14002a852:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a856:	or     WORD PTR [rbx+0x1710],ax
   14002a85d:	movzx  eax,BYTE PTR [rbx+0x1710]
   14002a864:	mov    BYTE PTR [rdx+rcx*1],al
   14002a867:	add    DWORD PTR [rbx+0x28],0x1
   14002a86b:	movzx  eax,BYTE PTR [rbx+0x1711]
   14002a872:	mov    edx,DWORD PTR [rbx+0x28]
   14002a875:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a879:	mov    BYTE PTR [rdx+rcx*1],al
   14002a87c:	mov    eax,DWORD PTR [rbx+0x1714]
   14002a882:	add    DWORD PTR [rbx+0x28],0x1
   14002a886:	mov    ecx,0x10
   14002a88b:	sub    cl,al
   14002a88d:	shr    r8w,cl
   14002a891:	add    eax,0xfffffff3
   14002a894:	mov    DWORD PTR [rbx+0x1714],eax
   14002a89a:	mov    WORD PTR [rbx+0x1710],r8w
   14002a8a2:	jmp    0x14002a8ba
   14002a8a4:	lea    eax,[rsi+0x4]
   14002a8a7:	shl    ax,cl
   14002a8aa:	or     WORD PTR [rbx+0x1710],ax
   14002a8b1:	lea    eax,[rcx+0x3]
   14002a8b4:	mov    DWORD PTR [rbx+0x1714],eax
   14002a8ba:	mov    r8d,DWORD PTR [rbx+0xb60]
   14002a8c1:	mov    edx,DWORD PTR [rbx+0xb48]
   14002a8c7:	add    r9d,0x1
   14002a8cb:	add    r8d,0x1
   14002a8cf:	add    edx,0x1
   14002a8d2:	mov    rcx,rbx
   14002a8d5:	call   0x140029690
   14002a8da:	lea    r8,[rbx+0x9b0]
   14002a8e1:	lea    rdx,[rbx+0xbc]
   14002a8e8:	mov    rcx,rbx
   14002a8eb:	call   0x140029930
   14002a8f0:	jmp    0x14002a98c
   14002a8f5:	mov    ecx,DWORD PTR [rbx+0x1714]
   14002a8fb:	cmp    ecx,0xd
   14002a8fe:	jle    0x14002a960
   14002a900:	mov    edx,DWORD PTR [rbx+0x28]
   14002a903:	lea    r8d,[rsi+0x2]
   14002a907:	movzx  eax,r8w
   14002a90b:	shl    ax,cl
   14002a90e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a912:	or     WORD PTR [rbx+0x1710],ax
   14002a919:	movzx  eax,BYTE PTR [rbx+0x1710]
   14002a920:	mov    BYTE PTR [rdx+rcx*1],al
   14002a923:	add    DWORD PTR [rbx+0x28],0x1
   14002a927:	movzx  eax,BYTE PTR [rbx+0x1711]
   14002a92e:	mov    edx,DWORD PTR [rbx+0x28]
   14002a931:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a935:	mov    BYTE PTR [rdx+rcx*1],al
   14002a938:	mov    eax,DWORD PTR [rbx+0x1714]
   14002a93e:	add    DWORD PTR [rbx+0x28],0x1
   14002a942:	mov    ecx,0x10
   14002a947:	sub    cl,al
   14002a949:	shr    r8w,cl
   14002a94d:	add    eax,0xfffffff3
   14002a950:	mov    DWORD PTR [rbx+0x1714],eax
   14002a956:	mov    WORD PTR [rbx+0x1710],r8w
   14002a95e:	jmp    0x14002a976
   14002a960:	lea    eax,[rsi+0x2]
   14002a963:	shl    ax,cl
   14002a966:	or     WORD PTR [rbx+0x1710],ax
   14002a96d:	lea    eax,[rcx+0x3]
   14002a970:	mov    DWORD PTR [rbx+0x1714],eax
   14002a976:	lea    r8,[rip+0x22bc3]        # 0x14004d540
   14002a97d:	lea    rdx,[rip+0x2273c]        # 0x14004d0c0
   14002a984:	mov    rcx,rbx
   14002a987:	call   0x140029930
   14002a98c:	mov    rcx,rbx
   14002a98f:	call   0x140028b90
   14002a994:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a999:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a99e:	test   esi,esi
   14002a9a0:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a9a5:	je     0x14002a9af
   14002a9a7:	mov    rcx,rbx
   14002a9aa:	call   0x140029f20
   14002a9af:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a9b4:	add    rsp,0x28
   14002a9b8:	ret    
   14002a9b9:	int3   
   14002a9ba:	int3   
   14002a9bb:	int3   
   14002a9bc:	int3   
   14002a9bd:	int3   
   14002a9be:	int3   
   14002a9bf:	int3   
   14002a9c0:	mov    QWORD PTR [rsp-0x30],rdi
   14002a9c5:	mov    QWORD PTR [rsp-0x28],rsi
   14002a9ca:	mov    QWORD PTR [rsp-0x20],rbx
   14002a9cf:	mov    QWORD PTR [rsp-0x18],rbp
   14002a9d4:	mov    r8d,edx
   14002a9d7:	mov    QWORD PTR [rsp-0x10],r12
   14002a9dc:	mov    QWORD PTR [rsp-0x8],r13
   14002a9e1:	mov    edi,DWORD PTR [rcx+0xa0]
   14002a9e7:	mov    esi,DWORD PTR [rcx+0xb4]
   14002a9ed:	mov    eax,DWORD PTR [rcx+0x4c]
   14002a9f0:	mov    ebx,DWORD PTR [rcx+0xa4]
   14002a9f6:	cmp    edi,esi
   14002a9f8:	jl     0x14002a9fd
   14002a9fa:	shr    ebx,0x2
   14002a9fd:	dec    ebx
   14002a9ff:	shl    ebx,0x10
   14002aa02:	or     ebx,eax
   14002aa04:	mov    eax,DWORD PTR [rcx+0xb8]
   14002aa0a:	mov    DWORD PTR [rsp-0x40],ebx
   14002aa0e:	mov    r10d,DWORD PTR [rcx+0x9c]
   14002aa15:	cmp    r10d,eax
   14002aa18:	cmovge r10d,eax
   14002aa1c:	mov    DWORD PTR [rsp-0x38],r10d
   14002aa21:	mov    r10,QWORD PTR [rcx+0x50]
   14002aa25:	mov    ebp,DWORD PTR [rcx+0x94]
   14002aa2b:	lea    r13,[rbp+r10*1+0x0]
   14002aa30:	mov    r9,r13
   14002aa33:	neg    r13
   14002aa36:	and    r13,0x3
   14002aa3a:	mov    eax,DWORD PTR [rcx+0x44]
   14002aa3d:	sub    eax,0x106
   14002aa42:	xor    edi,edi
   14002aa44:	sub    ebp,eax
   14002aa46:	mov    r11d,DWORD PTR [rcx+0xa0]
   14002aa4d:	cmovle ebp,edi
   14002aa50:	lea    rsi,[r11+r10*1]
   14002aa54:	movzx  r12d,WORD PTR [r9]
   14002aa58:	movzx  ebx,WORD PTR [r11+r9*1-0x1]
   14002aa5e:	mov    rdi,QWORD PTR [rcx+0x60]
   14002aa62:	mov    edx,DWORD PTR [rsp-0x40]
   14002aa66:	cmp    bx,WORD PTR [r8+rsi*1-0x1]
   14002aa6c:	je     0x14002ab0c
   14002aa72:	and    r8d,edx
   14002aa75:	movzx  r8d,WORD PTR [rdi+r8*2]
   14002aa7a:	cmp    r8d,ebp
   14002aa7d:	jbe    0x14002abf1
   14002aa83:	sub    edx,0x10000
   14002aa89:	js     0x14002abf1
   14002aa8f:	cmp    bx,WORD PTR [r8+rsi*1-0x1]
   14002aa95:	je     0x14002ab0c
   14002aa97:	and    r8d,edx
   14002aa9a:	movzx  r8d,WORD PTR [rdi+r8*2]
   14002aa9f:	cmp    r8d,ebp
   14002aaa2:	jbe    0x14002abf1
   14002aaa8:	sub    edx,0x10000
   14002aaae:	js     0x14002abf1
   14002aab4:	cmp    bx,WORD PTR [r8+rsi*1-0x1]
   14002aaba:	je     0x14002ab0c
   14002aabc:	and    r8d,edx
   14002aabf:	movzx  r8d,WORD PTR [rdi+r8*2]
   14002aac4:	cmp    r8d,ebp
   14002aac7:	jbe    0x14002abf1
   14002aacd:	sub    edx,0x10000
   14002aad3:	js     0x14002abf1
   14002aad9:	cmp    bx,WORD PTR [r8+rsi*1-0x1]
   14002aadf:	jne    0x14002aa72
   14002aae1:	jmp    0x14002ab0c
   14002aae3:	and    r8d,edx
   14002aae6:	movzx  r8d,WORD PTR [rdi+r8*2]
   14002aaeb:	cmp    r8d,ebp
   14002aaee:	jbe    0x14002abf1
   14002aaf4:	sub    edx,0x10000
   14002aafa:	js     0x14002abf1
   14002ab00:	cmp    bx,WORD PTR [r8+rsi*1-0x1]
   14002ab06:	jne    0x14002aa72
   14002ab0c:	cmp    r12w,WORD PTR [r8+r10*1]
   14002ab11:	jne    0x14002aa72
   14002ab17:	mov    DWORD PTR [rsp-0x40],edx
   14002ab1b:	lea    rsi,[r10+r8*1]
   14002ab1f:	movabs rdx,0xfffffffffffffef8
   14002ab29:	lea    rsi,[r13+rsi*1+0x108]
   14002ab31:	lea    rdi,[r13+r9*1+0x108]
   14002ab39:	prefetcht1 BYTE PTR [rdx+rsi*1]
   14002ab3d:	prefetcht1 BYTE PTR [rdx+rdi*1]
   14002ab41:	mov    rax,QWORD PTR [rdx+rsi*1]
   14002ab45:	xor    rax,QWORD PTR [rdx+rdi*1]
   14002ab49:	jne    0x14002ab71
   14002ab4b:	mov    rax,QWORD PTR [rdx+rsi*1+0x8]
   14002ab50:	xor    rax,QWORD PTR [rdx+rdi*1+0x8]
   14002ab55:	jne    0x14002ab6d
   14002ab57:	mov    rax,QWORD PTR [rdx+rsi*1+0x10]
   14002ab5c:	xor    rax,QWORD PTR [rdx+rdi*1+0x10]
   14002ab61:	jne    0x14002ab69
   14002ab63:	add    rdx,0x18
   14002ab67:	jmp    0x14002ab41
   14002ab69:	add    rdx,0x8
   14002ab6d:	add    rdx,0x8
   14002ab71:	test   eax,0xffff
   14002ab76:	jne    0x14002ab93
   14002ab78:	test   eax,0xffffffff
   14002ab7d:	jne    0x14002ab8c
   14002ab7f:	add    rdx,0x4
   14002ab83:	shr    rax,0x20
   14002ab87:	or     ax,ax
   14002ab8a:	jne    0x14002ab93
   14002ab8c:	shr    eax,0x10
   14002ab8f:	add    rdx,0x2
   14002ab93:	sub    al,0x1
   14002ab95:	adc    rdx,0x0
   14002ab99:	lea    rax,[rdx+rdi*1]
   14002ab9d:	sub    rax,r9
   14002aba0:	cmp    eax,0x102
   14002aba5:	jge    0x14002abe4
   14002aba7:	cmp    eax,r11d
   14002abaa:	jg     0x14002abbd
   14002abac:	lea    rsi,[r11+r10*1]
   14002abb0:	mov    rdi,QWORD PTR [rcx+0x60]
   14002abb4:	mov    edx,DWORD PTR [rsp-0x40]
   14002abb8:	jmp    0x14002aae3
   14002abbd:	mov    r11d,eax
   14002abc0:	mov    DWORD PTR [rcx+0x98],r8d
   14002abc7:	cmp    eax,DWORD PTR [rsp-0x38]
   14002abcb:	jge    0x14002abf1
   14002abcd:	lea    rsi,[rax+r10*1]
   14002abd1:	movzx  ebx,WORD PTR [rax+r9*1-0x1]
   14002abd7:	mov    rdi,QWORD PTR [rcx+0x60]
   14002abdb:	mov    edx,DWORD PTR [rsp-0x40]
   14002abdf:	jmp    0x14002aae3
   14002abe4:	mov    r11d,0x102
   14002abea:	mov    DWORD PTR [rcx+0x98],r8d
   14002abf1:	mov    eax,DWORD PTR [rcx+0x9c]
   14002abf7:	cmp    r11d,eax
   14002abfa:	cmovle eax,r11d
   14002abfe:	mov    rsi,QWORD PTR [rsp-0x28]
   14002ac03:	mov    rdi,QWORD PTR [rsp-0x30]
   14002ac08:	mov    rbx,QWORD PTR [rsp-0x20]
   14002ac0d:	mov    rbp,QWORD PTR [rsp-0x18]
   14002ac12:	mov    r12,QWORD PTR [rsp-0x10]
   14002ac17:	mov    r13,QWORD PTR [rsp-0x8]
   14002ac1c:	ret    
   14002ac1d:	or     eax,0x6d73610a
   14002ac22:	cmp    BYTE PTR ss:[rsi],dh
   14002ac25:	and    BYTE PTR [rdi+0x69],dh
   14002ac28:	je     0x14002ac92
   14002ac2a:	and    BYTE PTR [rbp+0x61],ch
   14002ac2d:	jae    0x14002ac9c
   14002ac2f:	sub    al,0x20
   14002ac31:	outs   dx,DWORD PTR ds:[rsi]
   14002ac32:	jo     0x14002aca8
   14002ac34:	imul   ebp,DWORD PTR [rbp+0x69],0x20646573
   14002ac3b:	(bad)  
   14002ac3c:	jae    0x14002acb1
   14002ac3e:	gs ins DWORD PTR es:[rdi],dx
   14002ac40:	(bad)  
   14002ac41:	ins    BYTE PTR es:[rdi],dx
   14002ac42:	jns    0x14002ac64
   14002ac44:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002ac47:	and    BYTE PTR gs:[rsi+0x72],ah
   14002ac4b:	outs   dx,DWORD PTR ds:[rsi]
   14002ac4c:	ins    DWORD PTR es:[rdi],dx
   14002ac4d:	and    BYTE PTR [rdx+0x72],al
   14002ac50:	imul   esp,DWORD PTR [rcx+0x6e],0x69615220
   14002ac57:	je     0x14002acbe
   14002ac59:	jb     0x14002ac87
   14002ac5b:	and    BYTE PTR [rdi+0x72],dh
   14002ac5e:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x3931206e
   14002ac66:	cmp    DWORD PTR [rax],edi
   14002ac68:	sub    al,0x20
   14002ac6a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ac6d:	jbe    0x14002acd4
   14002ac6f:	jb     0x14002ace5
   14002ac71:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14002ac77:	(bad)  
   14002ac78:	ins    DWORD PTR es:[rdi],dx
   14002ac79:	and    BYTE PTR fs:[rsi],dh
   14002ac7c:	xor    al,0x20
   14002ac7e:	(bad)  
   14002ac7f:	jns    0x14002aca1
   14002ac81:	imul   r13d,DWORD PTR [r12+r13*2+0x65],0x6f562073
   14002ac8a:	ins    BYTE PTR es:[rdi],dx
   14002ac8b:	ins    BYTE PTR es:[rdi],dx
   14002ac8c:	(bad)  
   14002ac8d:	outs   dx,BYTE PTR ds:[rsi]
   14002ac8e:	je     0x14002acb0
   14002ac90:	xor    dh,BYTE PTR [rax]
   14002ac92:	xor    BYTE PTR [rip+0xffffffffc3000a0d],dh        # 0x10302b6a5
   14002ac98:	int3   
   14002ac99:	int3   
   14002ac9a:	int3   
   14002ac9b:	int3   
   14002ac9c:	int3   
   14002ac9d:	int3   
   14002ac9e:	int3   
   14002ac9f:	int3   
   14002aca0:	mov    QWORD PTR [rsp-0x8],rsi
   14002aca5:	mov    QWORD PTR [rsp-0x10],rdi
   14002acaa:	mov    QWORD PTR [rsp-0x18],r12
   14002acaf:	mov    QWORD PTR [rsp-0x20],r13
   14002acb4:	mov    QWORD PTR [rsp-0x28],r14
   14002acb9:	mov    QWORD PTR [rsp-0x30],r15
   14002acbe:	mov    QWORD PTR [rsp-0x38],rbx
   14002acc3:	mov    rax,rcx
   14002acc6:	mov    QWORD PTR [rax+0x8],rbp
   14002acca:	mov    QWORD PTR [rax],rsp
   14002accd:	mov    rsp,rax
   14002acd0:	mov    rsi,QWORD PTR [rsp+0x10]
   14002acd5:	mov    rdi,QWORD PTR [rsp+0x20]
   14002acda:	mov    r9,QWORD PTR [rsp+0x18]
   14002acdf:	mov    r10,QWORD PTR [rsp+0x30]
   14002ace4:	mov    rbp,QWORD PTR [rsp+0x40]
   14002ace9:	mov    r11,QWORD PTR [rsp+0x48]
   14002acee:	mov    rdx,QWORD PTR [rsp+0x50]
   14002acf3:	mov    ebx,DWORD PTR [rsp+0x58]
   14002acf7:	mov    r12d,DWORD PTR [rsp+0x64]
   14002acfc:	mov    r13d,DWORD PTR [rsp+0x68]
   14002ad01:	cld    
   14002ad02:	cmp    r10,rdi
   14002ad05:	je     0x14002ad0c
   14002ad07:	cmp    r9,rsi
   14002ad0a:	jne    0x14002ad36
   14002ad0c:	mov    r8,r12
   14002ad0f:	cmp    bl,0x20
   14002ad12:	ja     0x14002ad64
   14002ad14:	lods   eax,DWORD PTR ds:[rsi]
   14002ad15:	mov    cl,bl
   14002ad17:	add    bl,0x20
   14002ad1a:	shl    rax,cl
   14002ad1d:	or     rdx,rax
   14002ad20:	jmp    0x14002ad64
   14002ad22:	xchg   ax,ax
   14002ad24:	cmp    r10,rdi
   14002ad27:	jbe    0x14002af6c
   14002ad2d:	cmp    r9,rsi
   14002ad30:	jbe    0x14002af6c
   14002ad36:	mov    r8,r12
   14002ad39:	cmp    bl,0x20
   14002ad3c:	ja     0x14002ad4a
   14002ad3e:	lods   eax,DWORD PTR ds:[rsi]
   14002ad3f:	mov    cl,bl
   14002ad41:	add    bl,0x20
   14002ad44:	shl    rax,cl
   14002ad47:	or     rdx,rax
   14002ad4a:	and    r8,rdx
   14002ad4d:	mov    eax,DWORD PTR [rbp+r8*4+0x0]
   14002ad52:	mov    cl,ah
   14002ad54:	sub    bl,ah
   14002ad56:	shr    rdx,cl
   14002ad59:	test   al,al
   14002ad5b:	jne    0x14002ad80
   14002ad5d:	mov    r8,r12
   14002ad60:	shr    eax,0x10
   14002ad63:	stos   BYTE PTR es:[rdi],al
   14002ad64:	and    r8,rdx
   14002ad67:	mov    eax,DWORD PTR [rbp+r8*4+0x0]
   14002ad6c:	mov    cl,ah
   14002ad6e:	sub    bl,ah
   14002ad70:	shr    rdx,cl
   14002ad73:	test   al,al
   14002ad75:	jne    0x14002ad80
   14002ad77:	shr    eax,0x10
   14002ad7a:	stos   BYTE PTR es:[rdi],al
   14002ad7b:	jmp    0x14002ad24
   14002ad7d:	data16 xchg ax,ax
   14002ad80:	mov    r14d,eax
   14002ad83:	shr    r14d,0x10
   14002ad87:	mov    cl,al
   14002ad89:	test   al,0x10
   14002ad8b:	je     0x14002ae58
   14002ad91:	and    cl,0xf
   14002ad94:	je     0x14002ada8
   14002ad96:	sub    bl,cl
   14002ad98:	xor    eax,eax
   14002ad9a:	inc    eax
   14002ad9c:	shl    eax,cl
   14002ad9e:	dec    eax
   14002ada0:	and    eax,edx
   14002ada2:	shr    rdx,cl
   14002ada5:	add    r14d,eax
   14002ada8:	mov    r8,r13
   14002adab:	cmp    bl,0x20
   14002adae:	ja     0x14002adbc
   14002adb0:	lods   eax,DWORD PTR ds:[rsi]
   14002adb1:	mov    cl,bl
   14002adb3:	add    bl,0x20
   14002adb6:	shl    rax,cl
   14002adb9:	or     rdx,rax
   14002adbc:	and    r8,rdx
   14002adbf:	mov    eax,DWORD PTR [r11+r8*4]
   14002adc3:	mov    r15d,eax
   14002adc6:	shr    r15d,0x10
   14002adca:	mov    cl,ah
   14002adcc:	sub    bl,ah
   14002adce:	shr    rdx,cl
   14002add1:	mov    cl,al
   14002add3:	test   al,0x10
   14002add5:	je     0x14002ae78
   14002addb:	and    cl,0xf
   14002adde:	je     0x14002ae30
   14002ade0:	sub    bl,cl
   14002ade2:	xor    eax,eax
   14002ade4:	inc    eax
   14002ade6:	shl    eax,cl
   14002ade8:	dec    eax
   14002adea:	and    eax,edx
   14002adec:	shr    rdx,cl
   14002adef:	add    r15d,eax
   14002adf2:	mov    r8,rsi
   14002adf5:	mov    rax,rdi
   14002adf8:	sub    rax,QWORD PTR [rsp+0x28]
   14002adfd:	cmp    eax,r15d
   14002ae00:	jb     0x14002ae98
   14002ae06:	mov    ecx,r14d
   14002ae09:	mov    rsi,rdi
   14002ae0c:	sub    rsi,r15
   14002ae0f:	sar    ecx,1
   14002ae11:	jae    0x14002ae25
   14002ae13:	rep movs WORD PTR es:[rdi],WORD PTR ds:[rsi]
   14002ae16:	mov    al,BYTE PTR [rsi]
   14002ae18:	mov    BYTE PTR [rdi],al
   14002ae1a:	inc    rdi
   14002ae1d:	mov    rsi,r8
   14002ae20:	jmp    0x14002ad24
   14002ae25:	rep movs WORD PTR es:[rdi],WORD PTR ds:[rsi]
   14002ae28:	mov    rsi,r8
   14002ae2b:	jmp    0x14002ad24
   14002ae30:	cmp    r15d,0x1
   14002ae34:	jne    0x14002adf2
   14002ae36:	cmp    QWORD PTR [rsp+0x28],rdi
   14002ae3b:	je     0x14002adf2
   14002ae3d:	mov    ecx,r14d
   14002ae40:	mov    al,BYTE PTR [rdi-0x1]
   14002ae43:	mov    ah,al
   14002ae45:	sar    ecx,1
   14002ae47:	jae    0x14002ae4e
   14002ae49:	mov    BYTE PTR [rdi],al
   14002ae4b:	inc    rdi
   14002ae4e:	rep stos WORD PTR es:[rdi],ax
   14002ae51:	jmp    0x14002ad24
   14002ae56:	xchg   ax,ax
   14002ae58:	test   al,0x40
   14002ae5a:	jne    0x14002af40
   14002ae60:	xor    eax,eax
   14002ae62:	inc    eax
   14002ae64:	shl    eax,cl
   14002ae66:	dec    eax
   14002ae68:	and    eax,edx
   14002ae6a:	add    eax,r14d
   14002ae6d:	mov    eax,DWORD PTR [rbp+rax*4+0x0]
   14002ae71:	jmp    0x14002ad6c
   14002ae76:	xchg   ax,ax
   14002ae78:	test   al,0x40
   14002ae7a:	jne    0x14002af58
   14002ae80:	xor    eax,eax
   14002ae82:	inc    eax
   14002ae84:	shl    eax,cl
   14002ae86:	dec    eax
   14002ae88:	and    eax,edx
   14002ae8a:	add    eax,r15d
   14002ae8d:	mov    eax,DWORD PTR [r11+rax*4]
   14002ae91:	jmp    0x14002adc3
   14002ae96:	xchg   ax,ax
   14002ae98:	mov    ecx,eax
   14002ae9a:	mov    eax,DWORD PTR [rsp+0x5c]
   14002ae9e:	neg    ecx
   14002aea0:	cmp    eax,r15d
   14002aea3:	jb     0x14002af62
   14002aea9:	add    ecx,r15d
   14002aeac:	cmp    DWORD PTR [rsp+0x60],0x0
   14002aeb1:	jne    0x14002aed4
   14002aeb3:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aeb8:	sub    eax,ecx
   14002aeba:	add    rsi,rax
   14002aebd:	mov    eax,r14d
   14002aec0:	cmp    r14d,ecx
   14002aec3:	jbe    0x14002af34
   14002aec5:	sub    eax,ecx
   14002aec7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002aec9:	mov    rsi,rdi
   14002aecc:	sub    rsi,r15
   14002aecf:	jmp    0x14002af34
   14002aed1:	data16 xchg ax,ax
   14002aed4:	mov    eax,DWORD PTR [rsp+0x60]
   14002aed8:	cmp    ecx,eax
   14002aeda:	jbe    0x14002af14
   14002aedc:	mov    esi,DWORD PTR [rsp+0x5c]
   14002aee0:	add    rsi,QWORD PTR [rsp+0x38]
   14002aee5:	add    rsi,rax
   14002aee8:	sub    rsi,rcx
   14002aeeb:	sub    ecx,eax
   14002aeed:	mov    eax,r14d
   14002aef0:	cmp    eax,ecx
   14002aef2:	jbe    0x14002af34
   14002aef4:	sub    eax,ecx
   14002aef6:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002aef8:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aefd:	mov    ecx,DWORD PTR [rsp+0x60]
   14002af01:	cmp    eax,ecx
   14002af03:	jbe    0x14002af34
   14002af05:	sub    eax,ecx
   14002af07:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002af09:	mov    rsi,rdi
   14002af0c:	sub    rsi,r15
   14002af0f:	jmp    0x14002af34
   14002af11:	data16 xchg ax,ax
   14002af14:	mov    rsi,QWORD PTR [rsp+0x38]
   14002af19:	add    rsi,rax
   14002af1c:	sub    rsi,rcx
   14002af1f:	mov    eax,r14d
   14002af22:	cmp    eax,ecx
   14002af24:	jbe    0x14002af34
   14002af26:	sub    eax,ecx
   14002af28:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002af2a:	mov    rsi,rdi
   14002af2d:	sub    rsi,r15
   14002af30:	jmp    0x14002af34
   14002af32:	xchg   ax,ax
   14002af34:	mov    ecx,eax
   14002af36:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002af38:	mov    rsi,r8
   14002af3b:	jmp    0x14002ad24
   14002af40:	test   al,0x20
   14002af42:	je     0x14002af4e
   14002af44:	mov    DWORD PTR [rsp+0x74],0x1
   14002af4c:	jmp    0x14002af74
   14002af4e:	mov    DWORD PTR [rsp+0x74],0x2
   14002af56:	jmp    0x14002af74
   14002af58:	mov    DWORD PTR [rsp+0x74],0x3
   14002af60:	jmp    0x14002af74
   14002af62:	mov    DWORD PTR [rsp+0x74],0x4
   14002af6a:	jmp    0x14002af74
   14002af6c:	mov    DWORD PTR [rsp+0x74],0x0
   14002af74:	mov    QWORD PTR [rsp+0x10],rsi
   14002af79:	mov    QWORD PTR [rsp+0x20],rdi
   14002af7e:	mov    DWORD PTR [rsp+0x58],ebx
   14002af82:	mov    QWORD PTR [rsp+0x50],rdx
   14002af87:	mov    rax,QWORD PTR [rsp]
   14002af8b:	mov    rbp,QWORD PTR [rsp+0x8]
   14002af90:	mov    rsp,rax
   14002af93:	mov    rsi,QWORD PTR [rsp-0x8]
   14002af98:	mov    rdi,QWORD PTR [rsp-0x10]
   14002af9d:	mov    r12,QWORD PTR [rsp-0x18]
   14002afa2:	mov    r13,QWORD PTR [rsp-0x20]
   14002afa7:	mov    r14,QWORD PTR [rsp-0x28]
   14002afac:	mov    r15,QWORD PTR [rsp-0x30]
   14002afb1:	mov    rbx,QWORD PTR [rsp-0x38]
   14002afb6:	ret    
   14002afb7:	int3   
   14002afb8:	rex push rbx
   14002afba:	sub    rsp,0x20
   14002afbe:	mov    rbx,rcx
   14002afc1:	mov    ecx,0x10
   14002afc6:	call   0x14002b1c2
   14002afcb:	test   rax,rax
   14002afce:	je     0x14002afde
   14002afd0:	mov    rdx,QWORD PTR [rip+0x3f081]        # 0x14006a058
   14002afd7:	mov    QWORD PTR [rax+0x8],rbx
   14002afdb:	mov    QWORD PTR [rax],rdx
   14002afde:	mov    QWORD PTR [rip+0x3f073],rax        # 0x14006a058
   14002afe5:	add    rsp,0x20
   14002afe9:	pop    rbx
   14002afea:	ret    
   14002afeb:	int3   
   14002afec:	rex push rbx
   14002afee:	sub    rsp,0x30
   14002aff2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002affb:	xor    edx,edx
   14002affd:	lea    rcx,[rsp+0x48]
   14002b002:	call   QWORD PTR [rip+0x1e598]        # 0x1400495a0
   14002b008:	nop
   14002b009:	jmp    0x14002b03a
   14002b00b:	mov    rax,QWORD PTR [rbx]
   14002b00e:	mov    QWORD PTR [rip+0x3f043],rax        # 0x14006a058
   14002b015:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b019:	call   QWORD PTR [rip+0x1e321]        # 0x140049340
   14002b01f:	test   rax,rax
   14002b022:	je     0x14002b032
   14002b024:	mov    r8,QWORD PTR [rax]
   14002b027:	mov    edx,0x1
   14002b02c:	mov    rcx,rax
   14002b02f:	call   QWORD PTR [r8]
   14002b032:	mov    rcx,rbx
   14002b035:	call   0x14002b150
   14002b03a:	mov    rbx,QWORD PTR [rip+0x3f017]        # 0x14006a058
   14002b041:	test   rbx,rbx
   14002b044:	jne    0x14002b00b
   14002b046:	lea    rcx,[rsp+0x48]
   14002b04b:	call   QWORD PTR [rip+0x1e557]        # 0x1400495a8
   14002b051:	add    rsp,0x30
   14002b055:	pop    rbx
   14002b056:	ret    
   14002b057:	int3   
   14002b058:	jmp    0x14002b1c2
   14002b05d:	int3   
   14002b05e:	jmp    QWORD PTR [rip+0x1e2a4]        # 0x140049308
   14002b064:	jmp    QWORD PTR [rip+0x1e2a6]        # 0x140049310
   14002b06a:	jmp    QWORD PTR [rip+0x1e2a8]        # 0x140049318
   14002b070:	jmp    QWORD PTR [rip+0x1e392]        # 0x140049408
   14002b076:	jmp    QWORD PTR [rip+0x1e394]        # 0x140049410
   14002b07c:	jmp    QWORD PTR [rip+0x1e396]        # 0x140049418
   14002b082:	jmp    QWORD PTR [rip+0x1e398]        # 0x140049420
   14002b088:	jmp    QWORD PTR [rip+0x1e39a]        # 0x140049428
   14002b08e:	jmp    QWORD PTR [rip+0x1e39c]        # 0x140049430
   14002b094:	jmp    QWORD PTR [rip+0x1e39e]        # 0x140049438
   14002b09a:	jmp    QWORD PTR [rip+0x1e3a0]        # 0x140049440
   14002b0a0:	jmp    QWORD PTR [rip+0x1e3a2]        # 0x140049448
   14002b0a6:	jmp    QWORD PTR [rip+0x1e424]        # 0x1400494d0
   14002b0ac:	jmp    QWORD PTR [rip+0x1e426]        # 0x1400494d8
   14002b0b2:	jmp    QWORD PTR [rip+0x1e428]        # 0x1400494e0
   14002b0b8:	jmp    QWORD PTR [rip+0x1e42a]        # 0x1400494e8
   14002b0be:	jmp    QWORD PTR [rip+0x1e42c]        # 0x1400494f0
   14002b0c4:	jmp    QWORD PTR [rip+0x1e42e]        # 0x1400494f8
   14002b0ca:	jmp    QWORD PTR [rip+0x1e490]        # 0x140049560
   14002b0d0:	jmp    QWORD PTR [rip+0x1e492]        # 0x140049568
   14002b0d6:	jmp    QWORD PTR [rip+0x1e494]        # 0x140049570
   14002b0dc:	jmp    QWORD PTR [rip+0x1e496]        # 0x140049578
   14002b0e2:	jmp    QWORD PTR [rip+0x1e498]        # 0x140049580
   14002b0e8:	int3   
   14002b0e9:	int3   
   14002b0ea:	int3   
   14002b0eb:	int3   
   14002b0ec:	int3   
   14002b0ed:	int3   
   14002b0ee:	int3   
   14002b0ef:	int3   
   14002b0f0:	int3   
   14002b0f1:	int3   
   14002b0f2:	int3   
   14002b0f3:	int3   
   14002b0f4:	int3   
   14002b0f5:	int3   
   14002b0f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b100:	cmp    rcx,QWORD PTR [rip+0x3d0e9]        # 0x1400681f0
   14002b107:	jne    0x14002b11a
   14002b109:	rol    rcx,0x10
   14002b10d:	test   cx,0xffff
   14002b112:	jne    0x14002b116
   14002b114:	repz ret 
   14002b116:	ror    rcx,0x10
   14002b11a:	jmp    0x14002b660
   14002b11f:	int3   
   14002b120:	jmp    QWORD PTR [rip+0x1e7a2]        # 0x1400498c8
   14002b126:	jmp    QWORD PTR [rip+0x1e78c]        # 0x1400498b8
   14002b12c:	jmp    QWORD PTR [rip+0x1e776]        # 0x1400498a8
   14002b132:	jmp    QWORD PTR [rip+0x1e768]        # 0x1400498a0
   14002b138:	jmp    QWORD PTR [rip+0x1e4a2]        # 0x1400495e0
   14002b13e:	jmp    QWORD PTR [rip+0x1e4b4]        # 0x1400495f8
   14002b144:	jmp    QWORD PTR [rip+0x1e50e]        # 0x140049658
   14002b14a:	jmp    QWORD PTR [rip+0x1e520]        # 0x140049670
   14002b150:	jmp    QWORD PTR [rip+0x1e522]        # 0x140049678
   14002b156:	int3   
   14002b157:	int3   
   14002b158:	mov    QWORD PTR [rsp+0x8],rbx
   14002b15d:	mov    QWORD PTR [rsp+0x10],rsi
   14002b162:	push   rdi
   14002b163:	sub    rsp,0x20
   14002b167:	mov    esi,edx
   14002b169:	mov    rbx,rcx
   14002b16c:	test   dl,0x2
   14002b16f:	je     0x14002b19b
   14002b171:	mov    r8d,DWORD PTR [rcx-0x8]
   14002b175:	lea    r9,[rip+0x9ea]        # 0x14002bb66
   14002b17c:	mov    edx,0x18
   14002b181:	call   0x14002b7f8
   14002b186:	test   sil,0x1
   14002b18a:	je     0x14002b195
   14002b18c:	lea    rcx,[rbx-0x8]
   14002b190:	call   0x14002b150
   14002b195:	lea    rax,[rbx-0x8]
   14002b199:	jmp    0x14002b1b1
   14002b19b:	call   0x14002bb66
   14002b1a0:	test   sil,0x1
   14002b1a4:	je     0x14002b1ae
   14002b1a6:	mov    rcx,rbx
   14002b1a9:	call   0x14002b150
   14002b1ae:	mov    rax,rbx
   14002b1b1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b1b6:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b1bb:	add    rsp,0x20
   14002b1bf:	pop    rdi
   14002b1c0:	ret    
   14002b1c1:	int3   
   14002b1c2:	jmp    QWORD PTR [rip+0x1e4d0]        # 0x140049698
   14002b1c8:	rex push rbx
   14002b1ca:	sub    rsp,0x20
   14002b1ce:	mov    rbx,rcx
   14002b1d1:	mov    rcx,QWORD PTR [rip+0x3f6c8]        # 0x14006a8a0
   14002b1d8:	call   QWORD PTR [rip+0x1e002]        # 0x1400491e0
   14002b1de:	mov    QWORD PTR [rsp+0x38],rax
   14002b1e3:	cmp    rax,0xffffffffffffffff
   14002b1e7:	jne    0x14002b1f4
   14002b1e9:	mov    rcx,rbx
   14002b1ec:	call   QWORD PTR [rip+0x1e61e]        # 0x140049810
   14002b1f2:	jmp    0x14002b272
   14002b1f4:	mov    ecx,0x8
   14002b1f9:	call   0x14002b868
   14002b1fe:	nop
   14002b1ff:	mov    rcx,QWORD PTR [rip+0x3f69a]        # 0x14006a8a0
   14002b206:	call   QWORD PTR [rip+0x1dfd4]        # 0x1400491e0
   14002b20c:	mov    QWORD PTR [rsp+0x38],rax
   14002b211:	mov    rcx,QWORD PTR [rip+0x3f680]        # 0x14006a898
   14002b218:	call   QWORD PTR [rip+0x1dfc2]        # 0x1400491e0
   14002b21e:	mov    QWORD PTR [rsp+0x40],rax
   14002b223:	mov    rcx,rbx
   14002b226:	call   QWORD PTR [rip+0x1dfec]        # 0x140049218
   14002b22c:	mov    rcx,rax
   14002b22f:	lea    r8,[rsp+0x40]
   14002b234:	lea    rdx,[rsp+0x38]
   14002b239:	call   0x14002b862
   14002b23e:	mov    rbx,rax
   14002b241:	mov    rcx,QWORD PTR [rsp+0x38]
   14002b246:	call   QWORD PTR [rip+0x1dfcc]        # 0x140049218
   14002b24c:	mov    QWORD PTR [rip+0x3f64d],rax        # 0x14006a8a0
   14002b253:	mov    rcx,QWORD PTR [rsp+0x40]
   14002b258:	call   QWORD PTR [rip+0x1dfba]        # 0x140049218
   14002b25e:	mov    QWORD PTR [rip+0x3f633],rax        # 0x14006a898
   14002b265:	mov    ecx,0x8
   14002b26a:	call   0x14002b85c
   14002b26f:	mov    rax,rbx
   14002b272:	add    rsp,0x20
   14002b276:	pop    rbx
   14002b277:	ret    
   14002b278:	sub    rsp,0x28
   14002b27c:	call   0x14002b1c8
   14002b281:	neg    rax
   14002b284:	sbb    eax,eax
   14002b286:	neg    eax
   14002b288:	dec    eax
   14002b28a:	add    rsp,0x28
   14002b28e:	ret    
   14002b28f:	int3   
   14002b290:	sub    rsp,0x38
   14002b294:	lea    rcx,[rip+0x671]        # 0x14002b90c
   14002b29b:	call   0x14002b278
   14002b2a0:	mov    r11d,DWORD PTR [rip+0x3f35d]        # 0x14006a604
   14002b2a7:	mov    r9d,DWORD PTR [rip+0x3f352]        # 0x14006a600
   14002b2ae:	lea    rax,[rip+0x3edcf]        # 0x14006a084
   14002b2b5:	lea    r8,[rip+0x3edb4]        # 0x14006a070
   14002b2bc:	lea    rdx,[rip+0x3edb5]        # 0x14006a078
   14002b2c3:	lea    rcx,[rip+0x3ed9e]        # 0x14006a068
   14002b2ca:	mov    DWORD PTR [rip+0x3edb3],r11d        # 0x14006a084
   14002b2d1:	mov    QWORD PTR [rsp+0x20],rax
   14002b2d6:	call   QWORD PTR [rip+0x1e544]        # 0x140049820
   14002b2dc:	mov    DWORD PTR [rip+0x3ed9e],eax        # 0x14006a080
   14002b2e2:	test   eax,eax
   14002b2e4:	jns    0x14002b2f0
   14002b2e6:	mov    ecx,0x8
   14002b2eb:	call   0x14002b8cc
   14002b2f0:	add    rsp,0x38
   14002b2f4:	ret    
   14002b2f5:	int3   
   14002b2f6:	int3   
   14002b2f7:	int3   
   14002b2f8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b2fd:	push   rdi
   14002b2fe:	sub    rsp,0x20
   14002b302:	mov    rax,QWORD PTR gs:0x30
   14002b30b:	mov    rbx,QWORD PTR [rax+0x8]
   14002b30f:	xor    edi,edi
   14002b311:	xor    eax,eax
   14002b313:	lock cmpxchg QWORD PTR [rip+0x3f56c],rbx        # 0x14006a888
   14002b31c:	je     0x14002b339
   14002b31e:	cmp    rax,rbx
   14002b321:	jne    0x14002b32c
   14002b323:	mov    ebx,0x1
   14002b328:	mov    edi,ebx
   14002b32a:	jmp    0x14002b33e
   14002b32c:	mov    ecx,0x3e8
   14002b331:	call   QWORD PTR [rip+0x1ddb9]        # 0x1400490f0
   14002b337:	jmp    0x14002b311
   14002b339:	mov    ebx,0x1
   14002b33e:	mov    eax,DWORD PTR [rip+0x3f540]        # 0x14006a884
   14002b344:	cmp    eax,ebx
   14002b346:	jne    0x14002b354
   14002b348:	mov    ecx,0x1f
   14002b34d:	call   0x14002b8cc
   14002b352:	jmp    0x14002b38b
   14002b354:	mov    eax,DWORD PTR [rip+0x3f52a]        # 0x14006a884
   14002b35a:	test   eax,eax
   14002b35c:	jne    0x14002b385
   14002b35e:	mov    DWORD PTR [rip+0x3f520],ebx        # 0x14006a884
   14002b364:	lea    rdx,[rip+0x1e705]        # 0x140049a70
   14002b36b:	lea    rcx,[rip+0x1e6e6]        # 0x140049a58
   14002b372:	call   0x14002ba18
   14002b377:	test   eax,eax
   14002b379:	je     0x14002b38b
   14002b37b:	mov    eax,0xff
   14002b380:	jmp    0x14002b46d
   14002b385:	mov    DWORD PTR [rip+0x3ed01],ebx        # 0x14006a08c
   14002b38b:	mov    eax,DWORD PTR [rip+0x3f4f3]        # 0x14006a884
   14002b391:	cmp    eax,ebx
   14002b393:	jne    0x14002b3b2
   14002b395:	lea    rdx,[rip+0x1e6b4]        # 0x140049a50
   14002b39c:	lea    rcx,[rip+0x1e605]        # 0x1400499a8
   14002b3a3:	call   0x14002ba12
   14002b3a8:	mov    DWORD PTR [rip+0x3f4d2],0x2        # 0x14006a884
   14002b3b2:	test   edi,edi
   14002b3b4:	jne    0x14002b3bf
   14002b3b6:	xor    eax,eax
   14002b3b8:	xchg   QWORD PTR [rip+0x3f4c9],rax        # 0x14006a888
   14002b3bf:	cmp    QWORD PTR [rip+0x3f4c9],0x0        # 0x14006a890
   14002b3c7:	je     0x14002b3e8
   14002b3c9:	lea    rcx,[rip+0x3f4c0]        # 0x14006a890
   14002b3d0:	call   0x14002b9d0
   14002b3d5:	test   eax,eax
   14002b3d7:	je     0x14002b3e8
   14002b3d9:	xor    r8d,r8d
   14002b3dc:	lea    edx,[r8+0x2]
   14002b3e0:	xor    ecx,ecx
   14002b3e2:	call   QWORD PTR [rip+0x3f4a8]        # 0x14006a890
   14002b3e8:	mov    rcx,QWORD PTR [rip+0x1e451]        # 0x140049840
   14002b3ef:	mov    rax,QWORD PTR [rip+0x3ec7a]        # 0x14006a070
   14002b3f6:	mov    QWORD PTR [rcx],rax
   14002b3f9:	mov    r8,QWORD PTR [rip+0x3ec70]        # 0x14006a070
   14002b400:	mov    rdx,QWORD PTR [rip+0x3ec71]        # 0x14006a078
   14002b407:	mov    ecx,DWORD PTR [rip+0x3ec5b]        # 0x14006a068
   14002b40d:	call   0x1400169a8
   14002b412:	mov    DWORD PTR [rip+0x3ec70],eax        # 0x14006a088
   14002b418:	cmp    DWORD PTR [rip+0x3ec4d],0x0        # 0x14006a06c
   14002b41f:	jne    0x14002b429
   14002b421:	mov    ecx,eax
   14002b423:	call   QWORD PTR [rip+0x1e317]        # 0x140049740
   14002b429:	cmp    DWORD PTR [rip+0x3ec5c],0x0        # 0x14006a08c
   14002b430:	jne    0x14002b43e
   14002b432:	call   QWORD PTR [rip+0x1e400]        # 0x140049838
   14002b438:	mov    eax,DWORD PTR [rip+0x3ec4a]        # 0x14006a088
   14002b43e:	jmp    0x14002b46d
   14002b440:	mov    DWORD PTR [rip+0x3ec42],eax        # 0x14006a088
   14002b446:	cmp    DWORD PTR [rip+0x3ec1f],0x0        # 0x14006a06c
   14002b44d:	jne    0x14002b458
   14002b44f:	mov    ecx,eax
   14002b451:	call   QWORD PTR [rip+0x1e3d9]        # 0x140049830
   14002b457:	int3   
   14002b458:	cmp    DWORD PTR [rip+0x3ec2d],0x0        # 0x14006a08c
   14002b45f:	jne    0x14002b46d
   14002b461:	call   QWORD PTR [rip+0x1e3d1]        # 0x140049838
   14002b467:	mov    eax,DWORD PTR [rip+0x3ec1b]        # 0x14006a088
   14002b46d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b472:	add    rsp,0x20
   14002b476:	pop    rdi
   14002b477:	ret    
   14002b478:	sub    rsp,0x28
   14002b47c:	mov    eax,0x5a4d
   14002b481:	cmp    WORD PTR [rip+0xfffffffffffd4b78],ax        # 0x140000000
   14002b488:	je     0x14002b48e
   14002b48a:	xor    ecx,ecx
   14002b48c:	jmp    0x14002b4c6
   14002b48e:	movsxd rax,DWORD PTR [rip+0xfffffffffffd4ba7]        # 0x14000003c
   14002b495:	lea    rcx,[rip+0xfffffffffffd4b64]        # 0x140000000
   14002b49c:	add    rax,rcx
   14002b49f:	cmp    DWORD PTR [rax],0x4550
   14002b4a5:	jne    0x14002b48a
   14002b4a7:	mov    ecx,0x20b
   14002b4ac:	cmp    WORD PTR [rax+0x18],cx
   14002b4b0:	jne    0x14002b48a
   14002b4b2:	xor    ecx,ecx
   14002b4b4:	cmp    DWORD PTR [rax+0x84],0xe
   14002b4bb:	jbe    0x14002b4c6
   14002b4bd:	cmp    DWORD PTR [rax+0xf8],ecx
   14002b4c3:	setne  cl
   14002b4c6:	mov    DWORD PTR [rip+0x3eba0],ecx        # 0x14006a06c
   14002b4cc:	mov    ecx,0x1
   14002b4d1:	call   QWORD PTR [rip+0x1e3a1]        # 0x140049878
   14002b4d7:	or     rcx,0xffffffffffffffff
   14002b4db:	call   QWORD PTR [rip+0x1dd37]        # 0x140049218
   14002b4e1:	mov    rcx,QWORD PTR [rip+0x1e388]        # 0x140049870
   14002b4e8:	mov    QWORD PTR [rip+0x3f3a9],rax        # 0x14006a898
   14002b4ef:	mov    QWORD PTR [rip+0x3f3aa],rax        # 0x14006a8a0
   14002b4f6:	mov    eax,DWORD PTR [rip+0x3f110]        # 0x14006a60c
   14002b4fc:	mov    DWORD PTR [rcx],eax
   14002b4fe:	mov    rdx,QWORD PTR [rip+0x1e363]        # 0x140049868
   14002b505:	mov    eax,DWORD PTR [rip+0x3f0fd]        # 0x14006a608
   14002b50b:	mov    DWORD PTR [rdx],eax
   14002b50d:	call   0x14002b8d4
   14002b512:	call   0x14002ba20
   14002b517:	cmp    DWORD PTR [rip+0x3ccee],0x0        # 0x14006820c
   14002b51e:	jne    0x14002b52d
   14002b520:	lea    rcx,[rip+0x4f9]        # 0x14002ba20
   14002b527:	call   QWORD PTR [rip+0x1e333]        # 0x140049860
   14002b52d:	cmp    DWORD PTR [rip+0x3ccd4],0xffffffff        # 0x140068208
   14002b534:	jne    0x14002b53f
   14002b536:	or     ecx,0xffffffff
   14002b539:	call   QWORD PTR [rip+0x1e319]        # 0x140049858
   14002b53f:	xor    eax,eax
   14002b541:	add    rsp,0x28
   14002b545:	ret    
   14002b546:	int3   
   14002b547:	int3   
   14002b548:	sub    rsp,0x28
   14002b54c:	call   0x14002ba24
   14002b551:	add    rsp,0x28
   14002b555:	jmp    0x14002b2f8
   14002b55a:	jmp    QWORD PTR [rip+0x1e228]        # 0x140049788
   14002b560:	jmp    QWORD PTR [rip+0x1e22a]        # 0x140049790
   14002b566:	int3   
   14002b567:	int3   
   14002b568:	mov    rax,rsp
   14002b56b:	mov    QWORD PTR [rax+0x8],rbx
   14002b56f:	mov    QWORD PTR [rax+0x10],rbp
   14002b573:	mov    QWORD PTR [rax+0x18],rsi
   14002b577:	mov    QWORD PTR [rax+0x20],rdi
   14002b57b:	push   r12
   14002b57d:	sub    rsp,0x20
   14002b581:	mov    rbx,QWORD PTR [r9+0x38]
   14002b585:	mov    rsi,rdx
   14002b588:	mov    r12,r8
   14002b58b:	mov    rbp,rcx
   14002b58e:	lea    r8,[rbx+0x4]
   14002b592:	mov    rdx,r9
   14002b595:	mov    rcx,rsi
   14002b598:	mov    rdi,r9
   14002b59b:	call   0x14002bad8
   14002b5a0:	mov    r11d,DWORD PTR [rbx+0x4]
   14002b5a4:	mov    r10d,DWORD PTR [rbp+0x4]
   14002b5a8:	mov    eax,r11d
   14002b5ab:	and    r11d,0x2
   14002b5af:	mov    r8d,0x1
   14002b5b5:	and    eax,r8d
   14002b5b8:	and    r10b,0x66
   14002b5bc:	cmove  r11d,eax
   14002b5c0:	test   r11d,r11d
   14002b5c3:	je     0x14002b5d9
   14002b5c5:	mov    r9,rdi
   14002b5c8:	mov    r8,r12
   14002b5cb:	mov    rdx,rsi
   14002b5ce:	mov    rcx,rbp
   14002b5d1:	call   0x14002b55a
   14002b5d6:	mov    r8d,eax
   14002b5d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b5de:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b5e3:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b5e8:	mov    rdi,QWORD PTR [rsp+0x48]
   14002b5ed:	mov    eax,r8d
   14002b5f0:	add    rsp,0x20
   14002b5f4:	pop    r12
   14002b5f6:	ret    
   14002b5f7:	int3   
   14002b5f8:	jmp    QWORD PTR [rip+0x1e1b2]        # 0x1400497b0
   14002b5fe:	int3   
   14002b5ff:	int3   
   14002b600:	int3   
   14002b601:	int3   
   14002b602:	int3   
   14002b603:	int3   
   14002b604:	int3   
   14002b605:	int3   
   14002b606:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b610:	sub    rsp,0x10
   14002b614:	mov    QWORD PTR [rsp],r10
   14002b618:	mov    QWORD PTR [rsp+0x8],r11
   14002b61d:	xor    r11,r11
   14002b620:	lea    r10,[rsp+0x18]
   14002b625:	sub    r10,rax
   14002b628:	cmovb  r10,r11
   14002b62c:	mov    r11,QWORD PTR gs:0x10
   14002b635:	cmp    r10,r11
   14002b638:	jae    0x14002b650
   14002b63a:	and    r10w,0xf000
   14002b640:	lea    r11,[r11-0x1000]
   14002b647:	mov    BYTE PTR [r11],0x0
   14002b64b:	cmp    r10,r11
   14002b64e:	jne    0x14002b640
   14002b650:	mov    r10,QWORD PTR [rsp]
   14002b654:	mov    r11,QWORD PTR [rsp+0x8]
   14002b659:	add    rsp,0x10
   14002b65d:	ret    
   14002b65e:	int3   
   14002b65f:	int3   
   14002b660:	mov    QWORD PTR [rsp+0x8],rcx
   14002b665:	sub    rsp,0x88
   14002b66c:	lea    rcx,[rip+0x3eabd]        # 0x14006a130
   14002b673:	call   QWORD PTR [rip+0x1db0f]        # 0x140049188
   14002b679:	mov    rax,QWORD PTR [rip+0x3eba8]        # 0x14006a228
   14002b680:	mov    QWORD PTR [rsp+0x58],rax
   14002b685:	xor    r8d,r8d
   14002b688:	lea    rdx,[rsp+0x60]
   14002b68d:	mov    rcx,QWORD PTR [rsp+0x58]
   14002b692:	call   0x1400432aa
   14002b697:	mov    QWORD PTR [rsp+0x50],rax
   14002b69c:	cmp    QWORD PTR [rsp+0x50],0x0
   14002b6a2:	je     0x14002b6e5
   14002b6a4:	mov    QWORD PTR [rsp+0x38],0x0
   14002b6ad:	lea    rax,[rsp+0x48]
   14002b6b2:	mov    QWORD PTR [rsp+0x30],rax
   14002b6b7:	lea    rax,[rsp+0x40]
   14002b6bc:	mov    QWORD PTR [rsp+0x28],rax
   14002b6c1:	lea    rax,[rip+0x3ea68]        # 0x14006a130
   14002b6c8:	mov    QWORD PTR [rsp+0x20],rax
   14002b6cd:	mov    r9,QWORD PTR [rsp+0x50]
   14002b6d2:	mov    r8,QWORD PTR [rsp+0x58]
   14002b6d7:	mov    rdx,QWORD PTR [rsp+0x60]
   14002b6dc:	xor    ecx,ecx
   14002b6de:	call   0x1400432a4
   14002b6e3:	jmp    0x14002b707
   14002b6e5:	mov    rax,QWORD PTR [rsp+0x88]
   14002b6ed:	mov    QWORD PTR [rip+0x3eb34],rax        # 0x14006a228
   14002b6f4:	lea    rax,[rsp+0x88]
   14002b6fc:	add    rax,0x8
   14002b700:	mov    QWORD PTR [rip+0x3eac1],rax        # 0x14006a1c8
   14002b707:	mov    rax,QWORD PTR [rip+0x3eb1a]        # 0x14006a228
   14002b70e:	mov    QWORD PTR [rip+0x3e98b],rax        # 0x14006a0a0
   14002b715:	mov    rax,QWORD PTR [rsp+0x90]
   14002b71d:	mov    QWORD PTR [rip+0x3ea8c],rax        # 0x14006a1b0
   14002b724:	mov    DWORD PTR [rip+0x3e962],0xc0000409        # 0x14006a090
   14002b72e:	mov    DWORD PTR [rip+0x3e95c],0x1        # 0x14006a094
   14002b738:	mov    rax,QWORD PTR [rip+0x3cab1]        # 0x1400681f0
   14002b73f:	mov    QWORD PTR [rsp+0x68],rax
   14002b744:	mov    rax,QWORD PTR [rip+0x3caad]        # 0x1400681f8
   14002b74b:	mov    QWORD PTR [rsp+0x70],rax
   14002b750:	call   QWORD PTR [rip+0x1dab2]        # 0x140049208
   14002b756:	mov    DWORD PTR [rip+0x3e9cc],eax        # 0x14006a128
   14002b75c:	mov    ecx,0x1
   14002b761:	call   0x14002bb5a
   14002b766:	xor    ecx,ecx
   14002b768:	call   QWORD PTR [rip+0x1da92]        # 0x140049200
   14002b76e:	lea    rcx,[rip+0x223c3]        # 0x14004db38
   14002b775:	call   QWORD PTR [rip+0x1da7d]        # 0x1400491f8
   14002b77b:	cmp    DWORD PTR [rip+0x3e9a6],0x0        # 0x14006a128
   14002b782:	jne    0x14002b78e
   14002b784:	mov    ecx,0x1
   14002b789:	call   0x14002bb5a
   14002b78e:	call   QWORD PTR [rip+0x1da5c]        # 0x1400491f0
   14002b794:	mov    edx,0xc0000409
   14002b799:	mov    rcx,rax
   14002b79c:	call   QWORD PTR [rip+0x1da46]        # 0x1400491e8
   14002b7a2:	add    rsp,0x88
   14002b7a9:	ret    
   14002b7aa:	int3   
   14002b7ab:	int3   
   14002b7ac:	mov    QWORD PTR [rsp+0x10],rbx
   14002b7b1:	mov    DWORD PTR [rsp+0x18],r8d
   14002b7b6:	mov    QWORD PTR [rsp+0x8],rcx
   14002b7bb:	push   rsi
   14002b7bc:	push   rdi
   14002b7bd:	push   r12
   14002b7bf:	sub    rsp,0x40
   14002b7c3:	mov    rsi,r9
   14002b7c6:	mov    edi,r8d
   14002b7c9:	mov    r12,rdx
   14002b7cc:	mov    rbx,rcx
   14002b7cf:	dec    edi
   14002b7d1:	mov    DWORD PTR [rsp+0x70],edi
   14002b7d5:	js     0x14002b7e6
   14002b7d7:	sub    rbx,r12
   14002b7da:	mov    QWORD PTR [rsp+0x60],rbx
   14002b7df:	mov    rcx,rbx
   14002b7e2:	call   rsi
   14002b7e4:	jmp    0x14002b7cf
   14002b7e6:	jmp    0x14002b7e8
   14002b7e8:	mov    rbx,QWORD PTR [rsp+0x68]
   14002b7ed:	add    rsp,0x40
   14002b7f1:	pop    r12
   14002b7f3:	pop    rdi
   14002b7f4:	pop    rsi
   14002b7f5:	ret    
   14002b7f6:	int3   
   14002b7f7:	int3   
   14002b7f8:	mov    rax,rsp
   14002b7fb:	mov    QWORD PTR [rax+0x20],r9
   14002b7ff:	mov    DWORD PTR [rax+0x18],r8d
   14002b803:	mov    QWORD PTR [rax+0x10],rdx
   14002b807:	push   rbx
   14002b808:	push   rsi
   14002b809:	push   rdi
   14002b80a:	push   r12
   14002b80c:	sub    rsp,0x38
   14002b810:	mov    r12,r9
   14002b813:	movsxd rdi,r8d
   14002b816:	mov    rsi,rdx
   14002b819:	and    DWORD PTR [rax-0x38],0x0
   14002b81d:	mov    rbx,rdi
   14002b820:	imul   rbx,rdx
   14002b824:	add    rbx,rcx
   14002b827:	mov    QWORD PTR [rax+0x8],rbx
   14002b82b:	dec    edi
   14002b82d:	mov    DWORD PTR [rsp+0x70],edi
   14002b831:	js     0x14002b843
   14002b833:	sub    rbx,rsi
   14002b836:	mov    QWORD PTR [rsp+0x60],rbx
   14002b83b:	mov    rcx,rbx
   14002b83e:	call   r12
   14002b841:	jmp    0x14002b82b
   14002b843:	mov    DWORD PTR [rsp+0x20],0x1
   14002b84b:	add    rsp,0x38
   14002b84f:	pop    r12
   14002b851:	pop    rdi
   14002b852:	pop    rsi
   14002b853:	pop    rbx
   14002b854:	ret    
   14002b855:	int3   
   14002b856:	jmp    QWORD PTR [rip+0x1df94]        # 0x1400497f0
   14002b85c:	jmp    QWORD PTR [rip+0x1df96]        # 0x1400497f8
   14002b862:	jmp    QWORD PTR [rip+0x1df98]        # 0x140049800
   14002b868:	jmp    QWORD PTR [rip+0x1df9a]        # 0x140049808
   14002b86e:	int3   
   14002b86f:	int3   
   14002b870:	sub    rsp,0x28
   14002b874:	mov    rax,QWORD PTR [rcx]
   14002b877:	cmp    DWORD PTR [rax],0xe06d7363
   14002b87d:	jne    0x14002b8aa
   14002b87f:	cmp    DWORD PTR [rax+0x18],0x4
   14002b883:	jne    0x14002b8aa
   14002b885:	mov    eax,DWORD PTR [rax+0x20]
   14002b888:	cmp    eax,0x19930520
   14002b88d:	je     0x14002b8a4
   14002b88f:	cmp    eax,0x19930521
   14002b894:	je     0x14002b8a4
   14002b896:	cmp    eax,0x19930522
   14002b89b:	je     0x14002b8a4
   14002b89d:	cmp    eax,0x1994000
   14002b8a2:	jne    0x14002b8aa
   14002b8a4:	call   0x14002bb60
   14002b8a9:	int3   
   14002b8aa:	xor    eax,eax
   14002b8ac:	add    rsp,0x28
   14002b8b0:	ret    
   14002b8b1:	int3   
   14002b8b2:	int3   
   14002b8b3:	int3   
   14002b8b4:	sub    rsp,0x28
   14002b8b8:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14002b870
   14002b8bf:	call   QWORD PTR [rip+0x1d93b]        # 0x140049200
   14002b8c5:	xor    eax,eax
   14002b8c7:	add    rsp,0x28
   14002b8cb:	ret    
   14002b8cc:	jmp    QWORD PTR [rip+0x1df46]        # 0x140049818
   14002b8d2:	int3   
   14002b8d3:	int3   
   14002b8d4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b8d9:	push   rdi
   14002b8da:	sub    rsp,0x20
   14002b8de:	lea    rbx,[rip+0x2bf7b]        # 0x140057860
   14002b8e5:	lea    rdi,[rip+0x2bf74]        # 0x140057860
   14002b8ec:	jmp    0x14002b8fc
   14002b8ee:	mov    rax,QWORD PTR [rbx]
   14002b8f1:	test   rax,rax
   14002b8f4:	je     0x14002b8f8
   14002b8f6:	call   rax
   14002b8f8:	add    rbx,0x8
   14002b8fc:	cmp    rbx,rdi
   14002b8ff:	jb     0x14002b8ee
   14002b901:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b906:	add    rsp,0x20
   14002b90a:	pop    rdi
   14002b90b:	ret    
   14002b90c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b911:	push   rdi
   14002b912:	sub    rsp,0x20
   14002b916:	lea    rbx,[rip+0x2bf53]        # 0x140057870
   14002b91d:	lea    rdi,[rip+0x2bf4c]        # 0x140057870
   14002b924:	jmp    0x14002b934
   14002b926:	mov    rax,QWORD PTR [rbx]
   14002b929:	test   rax,rax
   14002b92c:	je     0x14002b930
   14002b92e:	call   rax
   14002b930:	add    rbx,0x8
   14002b934:	cmp    rbx,rdi
   14002b937:	jb     0x14002b926
   14002b939:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b93e:	add    rsp,0x20
   14002b942:	pop    rdi
   14002b943:	ret    
   14002b944:	jmp    QWORD PTR [rip+0x1dede]        # 0x140049828
   14002b94a:	int3   
   14002b94b:	int3   
   14002b94c:	int3   
   14002b94d:	int3   
   14002b94e:	int3   
   14002b94f:	int3   
   14002b950:	mov    rax,rcx
   14002b953:	mov    ecx,0x5a4d
   14002b958:	cmp    WORD PTR [rax],cx
   14002b95b:	je     0x14002b960
   14002b95d:	xor    eax,eax
   14002b95f:	ret    
   14002b960:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002b964:	add    rcx,rax
   14002b967:	xor    eax,eax
   14002b969:	cmp    DWORD PTR [rcx],0x4550
   14002b96f:	jne    0x14002b97d
   14002b971:	mov    edx,0x20b
   14002b976:	cmp    WORD PTR [rcx+0x18],dx
   14002b97a:	sete   al
   14002b97d:	repz ret 
   14002b97f:	int3   
   14002b980:	movsxd r8,DWORD PTR [rcx+0x3c]
   14002b984:	xor    r9d,r9d
   14002b987:	mov    r10,rdx
   14002b98a:	add    r8,rcx
   14002b98d:	movzx  eax,WORD PTR [r8+0x14]
   14002b992:	movzx  r11d,WORD PTR [r8+0x6]
   14002b997:	lea    rcx,[rax+r8*1+0x18]
   14002b99c:	test   r11d,r11d
   14002b99f:	je     0x14002b9bf
   14002b9a1:	mov    edx,DWORD PTR [rcx+0xc]
   14002b9a4:	cmp    r10,rdx
   14002b9a7:	jb     0x14002b9b3
   14002b9a9:	mov    eax,DWORD PTR [rcx+0x8]
   14002b9ac:	add    eax,edx
   14002b9ae:	cmp    r10,rax
   14002b9b1:	jb     0x14002b9c2
   14002b9b3:	inc    r9d
   14002b9b6:	add    rcx,0x28
   14002b9ba:	cmp    r9d,r11d
   14002b9bd:	jb     0x14002b9a1
   14002b9bf:	xor    eax,eax
   14002b9c1:	ret    
   14002b9c2:	mov    rax,rcx
   14002b9c5:	ret    
   14002b9c6:	int3   
   14002b9c7:	int3   
   14002b9c8:	int3   
   14002b9c9:	int3   
   14002b9ca:	int3   
   14002b9cb:	int3   
   14002b9cc:	int3   
   14002b9cd:	int3   
   14002b9ce:	int3   
   14002b9cf:	int3   
   14002b9d0:	sub    rsp,0x28
   14002b9d4:	mov    r8,rcx
   14002b9d7:	lea    r9,[rip+0xfffffffffffd4622]        # 0x140000000
   14002b9de:	mov    rcx,r9
   14002b9e1:	call   0x14002b950
   14002b9e6:	test   eax,eax
   14002b9e8:	je     0x14002ba0c
   14002b9ea:	sub    r8,r9
   14002b9ed:	mov    rdx,r8
   14002b9f0:	mov    rcx,r9
   14002b9f3:	call   0x14002b980
   14002b9f8:	test   rax,rax
   14002b9fb:	je     0x14002ba0c
   14002b9fd:	mov    eax,DWORD PTR [rax+0x24]
   14002ba00:	shr    eax,0x1f
   14002ba03:	not    eax
   14002ba05:	and    eax,0x1
   14002ba08:	jmp    0x14002ba0c
   14002ba0a:	xor    eax,eax
   14002ba0c:	add    rsp,0x28
   14002ba10:	ret    
   14002ba11:	int3   
   14002ba12:	jmp    QWORD PTR [rip+0x1de30]        # 0x140049848
   14002ba18:	jmp    QWORD PTR [rip+0x1de32]        # 0x140049850
   14002ba1e:	int3   
   14002ba1f:	int3   
   14002ba20:	xor    eax,eax
   14002ba22:	ret    
   14002ba23:	int3   
   14002ba24:	mov    QWORD PTR [rsp+0x18],rbx
   14002ba29:	push   rdi
   14002ba2a:	sub    rsp,0x20
   14002ba2e:	mov    rax,QWORD PTR [rip+0x3c7bb]        # 0x1400681f0
   14002ba35:	and    QWORD PTR [rsp+0x30],0x0
   14002ba3b:	movabs rdi,0x2b992ddfa232
   14002ba45:	cmp    rax,rdi
   14002ba48:	je     0x14002ba56
   14002ba4a:	not    rax
   14002ba4d:	mov    QWORD PTR [rip+0x3c7a4],rax        # 0x1400681f8
   14002ba54:	jmp    0x14002bacc
   14002ba56:	lea    rcx,[rsp+0x30]
   14002ba5b:	call   QWORD PTR [rip+0x1d767]        # 0x1400491c8
   14002ba61:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ba66:	call   QWORD PTR [rip+0x1d764]        # 0x1400491d0
   14002ba6c:	mov    r11d,eax
   14002ba6f:	xor    rbx,r11
   14002ba72:	call   QWORD PTR [rip+0x1d760]        # 0x1400491d8
   14002ba78:	mov    r11d,eax
   14002ba7b:	xor    rbx,r11
   14002ba7e:	call   QWORD PTR [rip+0x1d71c]        # 0x1400491a0
   14002ba84:	lea    rcx,[rsp+0x38]
   14002ba89:	mov    r11d,eax
   14002ba8c:	xor    rbx,r11
   14002ba8f:	call   QWORD PTR [rip+0x1d6fb]        # 0x140049190
   14002ba95:	mov    r11,QWORD PTR [rsp+0x38]
   14002ba9a:	xor    r11,rbx
   14002ba9d:	movabs rax,0xffffffffffff
   14002baa7:	and    r11,rax
   14002baaa:	movabs rax,0x2b992ddfa233
   14002bab4:	cmp    r11,rdi
   14002bab7:	cmove  r11,rax
   14002babb:	mov    QWORD PTR [rip+0x3c72e],r11        # 0x1400681f0
   14002bac2:	not    r11
   14002bac5:	mov    QWORD PTR [rip+0x3c72c],r11        # 0x1400681f8
   14002bacc:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bad1:	add    rsp,0x20
   14002bad5:	pop    rdi
   14002bad6:	ret    
   14002bad7:	int3   
   14002bad8:	rex push rbx
   14002bada:	sub    rsp,0x20
   14002bade:	mov    r11d,DWORD PTR [r8]
   14002bae1:	mov    rbx,rdx
   14002bae4:	mov    r9,rcx
   14002bae7:	and    r11d,0xfffffff8
   14002baeb:	test   BYTE PTR [r8],0x4
   14002baef:	mov    r10,rcx
   14002baf2:	je     0x14002bb07
   14002baf4:	mov    eax,DWORD PTR [r8+0x8]
   14002baf8:	movsxd r10,DWORD PTR [r8+0x4]
   14002bafc:	neg    eax
   14002bafe:	add    r10,rcx
   14002bb01:	movsxd rcx,eax
   14002bb04:	and    r10,rcx
   14002bb07:	movsxd rax,r11d
   14002bb0a:	mov    rdx,QWORD PTR [rax+r10*1]
   14002bb0e:	mov    rax,QWORD PTR [rbx+0x10]
   14002bb12:	mov    ecx,DWORD PTR [rax+0x8]
   14002bb15:	add    rcx,QWORD PTR [rbx+0x8]
   14002bb19:	test   BYTE PTR [rcx+0x3],0xf
   14002bb1d:	je     0x14002bb2b
   14002bb1f:	movzx  eax,BYTE PTR [rcx+0x3]
   14002bb23:	and    eax,0xfffffff0
   14002bb26:	cdqe   
   14002bb28:	add    r9,rax
   14002bb2b:	xor    r9,rdx
   14002bb2e:	mov    rcx,r9
   14002bb31:	add    rsp,0x20
   14002bb35:	pop    rbx
   14002bb36:	jmp    0x14002b100
   14002bb3b:	int3   
   14002bb3c:	sub    rsp,0x28
   14002bb40:	mov    r8,QWORD PTR [r9+0x38]
   14002bb44:	mov    rcx,rdx
   14002bb47:	mov    rdx,r9
   14002bb4a:	call   0x14002bad8
   14002bb4f:	mov    eax,0x1
   14002bb54:	add    rsp,0x28
   14002bb58:	ret    
   14002bb59:	int3   
   14002bb5a:	jmp    QWORD PTR [rip+0x1dd20]        # 0x140049880
   14002bb60:	jmp    QWORD PTR [rip+0x1dd22]        # 0x140049888
   14002bb66:	jmp    QWORD PTR [rip+0x1dd24]        # 0x140049890
   14002bb6c:	rex push rbx
   14002bb6e:	sub    rsp,0x20
   14002bb72:	mov    rbx,rcx
   14002bb75:	add    rcx,0x28
   14002bb79:	call   QWORD PTR [rip+0x1d5b1]        # 0x140049130
   14002bb7f:	mov    rcx,QWORD PTR [rbx+0x50]
   14002bb83:	test   rcx,rcx
   14002bb86:	je     0x14002bb92
   14002bb88:	call   0x14002b5f8
   14002bb8d:	and    QWORD PTR [rbx+0x50],0x0
   14002bb92:	and    DWORD PTR [rbx+0x58],0x0
   14002bb96:	and    DWORD PTR [rbx+0x5c],0x0
   14002bb9a:	add    rsp,0x20
   14002bb9e:	pop    rbx
   14002bb9f:	ret    
   14002bba0:	mov    QWORD PTR [rsp+0x8],rbx
   14002bba5:	mov    QWORD PTR [rsp+0x10],rsi
   14002bbaa:	push   rdi
   14002bbab:	sub    rsp,0x20
   14002bbaf:	mov    rsi,rcx
   14002bbb2:	add    rcx,0x28
   14002bbb6:	movsxd rbx,edx
   14002bbb9:	call   QWORD PTR [rip+0x1d5f9]        # 0x1400491b8
   14002bbbf:	cmp    ebx,DWORD PTR [rsi+0x58]
   14002bbc2:	jg     0x14002bc02
   14002bbc4:	test   ebx,ebx
   14002bbc6:	js     0x14002bc02
   14002bbc8:	cmp    ebx,DWORD PTR [rsi+0x58]
   14002bbcb:	jne    0x14002bbe0
   14002bbcd:	mov    rbx,QWORD PTR [rsi+0x10]
   14002bbd1:	lea    rcx,[rsi+0x28]
   14002bbd5:	call   QWORD PTR [rip+0x1d5d5]        # 0x1400491b0
   14002bbdb:	mov    rax,rbx
   14002bbde:	jmp    0x14002bc0e
   14002bbe0:	jge    0x14002bbec
   14002bbe2:	mov    rax,QWORD PTR [rsi+0x50]
   14002bbe6:	mov    rbx,QWORD PTR [rax+rbx*8]
   14002bbea:	jmp    0x14002bbd1
   14002bbec:	xor    r9d,r9d
   14002bbef:	xor    r8d,r8d
   14002bbf2:	mov    ecx,0xc000008c
   14002bbf7:	lea    edx,[r9+0x1]
   14002bbfb:	call   QWORD PTR [rip+0x1d5bf]        # 0x1400491c0
   14002bc01:	int3   
   14002bc02:	lea    rcx,[rsi+0x28]
   14002bc06:	call   QWORD PTR [rip+0x1d5a4]        # 0x1400491b0
   14002bc0c:	xor    eax,eax
   14002bc0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bc13:	mov    rsi,QWORD PTR [rsp+0x38]
   14002bc18:	add    rsp,0x20
   14002bc1c:	pop    rdi
   14002bc1d:	ret    
   14002bc1e:	int3   
   14002bc1f:	int3   
   14002bc20:	mov    QWORD PTR [rsp+0x8],rbx
   14002bc25:	push   rdi
   14002bc26:	sub    rsp,0x20
   14002bc2a:	xor    edx,edx
   14002bc2c:	mov    rdi,rcx
   14002bc2f:	lea    r8d,[rdx+0x28]
   14002bc33:	add    rcx,r8
   14002bc36:	call   0x14002b144
   14002bc3b:	and    QWORD PTR [rdi+0x50],0x0
   14002bc40:	and    DWORD PTR [rdi+0x58],0x0
   14002bc44:	and    DWORD PTR [rdi+0x5c],0x0
   14002bc48:	lea    rax,[rip+0xfffffffffffd43b1]        # 0x140000000
   14002bc4f:	lea    rcx,[rdi+0x28]
   14002bc53:	mov    QWORD PTR [rdi+0x10],rax
   14002bc57:	mov    QWORD PTR [rdi+0x8],rax
   14002bc5b:	lea    rax,[rip+0x21f06]        # 0x14004db68
   14002bc62:	xor    edx,edx
   14002bc64:	mov    DWORD PTR [rdi],0x60
   14002bc6a:	mov    DWORD PTR [rdi+0x18],0xa00
   14002bc71:	mov    QWORD PTR [rdi+0x20],rax
   14002bc75:	call   QWORD PTR [rip+0x1d52d]        # 0x1400491a8
   14002bc7b:	test   eax,eax
   14002bc7d:	jne    0x14002bcaa
   14002bc7f:	call   QWORD PTR [rip+0x1d453]        # 0x1400490d8
   14002bc85:	mov    edx,0x1
   14002bc8a:	movzx  ecx,ax
   14002bc8d:	or     ecx,0x80070000
   14002bc93:	test   eax,eax
   14002bc95:	cmovle ecx,eax
   14002bc98:	movzx  eax,BYTE PTR [rip+0x3ebb9]        # 0x14006a858
   14002bc9f:	test   ecx,ecx
   14002bca1:	cmovs  eax,edx
   14002bca4:	mov    BYTE PTR [rip+0x3ebae],al        # 0x14006a858
   14002bcaa:	mov    rax,rdi
   14002bcad:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bcb2:	add    rsp,0x20
   14002bcb6:	pop    rdi
   14002bcb7:	ret    
   14002bcb8:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bcbc:	mov    r8,rdx
   14002bcbf:	xor    edx,edx
   14002bcc1:	rex.W jmp QWORD PTR [rip+0x1d430]        # 0x1400490f8
   14002bcc8:	sub    rsp,0x28
   14002bccc:	test   rdx,rdx
   14002bccf:	je     0x14002bce0
   14002bcd1:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bcd5:	mov    r8,rdx
   14002bcd8:	xor    edx,edx
   14002bcda:	call   QWORD PTR [rip+0x1d420]        # 0x140049100
   14002bce0:	add    rsp,0x28
   14002bce4:	ret    
   14002bce5:	int3   
   14002bce6:	int3   
   14002bce7:	int3   
   14002bce8:	sub    rsp,0x28
   14002bcec:	test   rdx,rdx
   14002bcef:	jne    0x14002bcfe
   14002bcf1:	mov    rax,QWORD PTR [rcx]
   14002bcf4:	mov    rdx,r8
   14002bcf7:	add    rsp,0x28
   14002bcfb:	rex.W jmp QWORD PTR [rax]
   14002bcfe:	test   r8,r8
   14002bd01:	jne    0x14002bd10
   14002bd03:	mov    rax,QWORD PTR [rcx]
   14002bd06:	call   QWORD PTR [rax+0x8]
   14002bd09:	xor    eax,eax
   14002bd0b:	add    rsp,0x28
   14002bd0f:	ret    
   14002bd10:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bd14:	mov    r9,r8
   14002bd17:	mov    r8,rdx
   14002bd1a:	xor    edx,edx
   14002bd1c:	add    rsp,0x28
   14002bd20:	rex.W jmp QWORD PTR [rip+0x1d419]        # 0x140049140
   14002bd27:	int3   
   14002bd28:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bd2c:	mov    r8,rdx
   14002bd2f:	xor    edx,edx
   14002bd31:	rex.W jmp QWORD PTR [rip+0x1d410]        # 0x140049148
   14002bd38:	mov    QWORD PTR [rsp+0x8],rbx
   14002bd3d:	push   rdi
   14002bd3e:	sub    rsp,0x20
   14002bd42:	cmp    BYTE PTR [rcx+0x10],0x0
   14002bd46:	lea    rax,[rip+0x21e2b]        # 0x14004db78
   14002bd4d:	mov    edi,edx
   14002bd4f:	mov    QWORD PTR [rcx],rax
   14002bd52:	mov    rbx,rcx
   14002bd55:	je     0x14002bd66
   14002bd57:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bd5b:	test   rcx,rcx
   14002bd5e:	je     0x14002bd66
   14002bd60:	call   QWORD PTR [rip+0x1d3d2]        # 0x140049138
   14002bd66:	test   dil,0x1
   14002bd6a:	je     0x14002bd74
   14002bd6c:	mov    rcx,rbx
   14002bd6f:	call   0x14002b150
   14002bd74:	mov    rax,rbx
   14002bd77:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bd7c:	add    rsp,0x20
   14002bd80:	pop    rdi
   14002bd81:	ret    
   14002bd82:	int3   
   14002bd83:	int3   
   14002bd84:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bd88:	mov    rax,QWORD PTR [rcx]
   14002bd8b:	rex.W jmp QWORD PTR [rax+0x8]
   14002bd8f:	int3   
   14002bd90:	lock inc DWORD PTR [rcx+0x20]
   14002bd94:	lea    rax,[rcx+0x10]
   14002bd98:	ret    
   14002bd99:	int3   
   14002bd9a:	int3   
   14002bd9b:	int3   
   14002bd9c:	mov    rax,rcx
   14002bd9f:	ret    
   14002bda0:	rex push rbx
   14002bda2:	sub    rsp,0x20
   14002bda6:	lea    rax,[rip+0x21df3]        # 0x14004dba0
   14002bdad:	mov    rbx,rcx
   14002bdb0:	mov    QWORD PTR [rcx],rax
   14002bdb3:	test   dl,0x1
   14002bdb6:	je     0x14002bdbd
   14002bdb8:	call   0x14002b150
   14002bdbd:	mov    rax,rbx
   14002bdc0:	add    rsp,0x20
   14002bdc4:	pop    rbx
   14002bdc5:	ret    
   14002bdc6:	int3   
   14002bdc7:	int3   
   14002bdc8:	mov    QWORD PTR [rsp+0x8],rbx
   14002bdcd:	push   rdi
   14002bdce:	sub    rsp,0x20
   14002bdd2:	lea    ebx,[rdx+0x8]
   14002bdd5:	movsxd r9,r8d
   14002bdd8:	mov    rdi,rcx
   14002bddb:	and    ebx,0xfffffff8
   14002bdde:	movsxd r8,ebx
   14002bde1:	jne    0x14002bde8
   14002bde3:	xor    r8d,r8d
   14002bde6:	jmp    0x14002be00
   14002bde8:	xor    edx,edx
   14002bdea:	or     rax,0xffffffffffffffff
   14002bdee:	div    r8
   14002bdf1:	cmp    rax,r9
   14002bdf4:	jb     0x14002be30
   14002bdf6:	imul   r8,r9
   14002bdfa:	cmp    r8,0xffffffffffffffe7
   14002bdfe:	ja     0x14002be30
   14002be00:	mov    rcx,QWORD PTR [rcx+0x8]
   14002be04:	lea    rdx,[r8+0x18]
   14002be08:	mov    rax,QWORD PTR [rcx]
   14002be0b:	call   QWORD PTR [rax]
   14002be0d:	mov    r11,rax
   14002be10:	test   rax,rax
   14002be13:	je     0x14002be30
   14002be15:	and    DWORD PTR [r11+0x8],0x0
   14002be1a:	mov    QWORD PTR [rax],rdi
   14002be1d:	mov    DWORD PTR [rax+0x10],0x1
   14002be24:	lea    eax,[rbx-0x1]
   14002be27:	mov    DWORD PTR [r11+0xc],eax
   14002be2b:	mov    rax,r11
   14002be2e:	jmp    0x14002be32
   14002be30:	xor    eax,eax
   14002be32:	mov    rbx,QWORD PTR [rsp+0x30]
   14002be37:	add    rsp,0x20
   14002be3b:	pop    rdi
   14002be3c:	ret    
   14002be3d:	int3   
   14002be3e:	int3   
   14002be3f:	int3   
   14002be40:	rex push rbx
   14002be42:	sub    rsp,0x20
   14002be46:	lea    ebx,[r8+0x8]
   14002be4a:	mov    eax,r9d
   14002be4d:	and    ebx,0xfffffff8
   14002be50:	mov    r8d,ebx
   14002be53:	imul   r8,rax
   14002be57:	mov    eax,0xffffffff
   14002be5c:	cmp    r8,rax
   14002be5f:	ja     0x14002be8a
   14002be61:	cmp    r8d,0xffffffe7
   14002be65:	ja     0x14002be8a
   14002be67:	mov    rcx,QWORD PTR [rcx+0x8]
   14002be6b:	add    r8d,0x18
   14002be6f:	mov    r9,QWORD PTR [rcx]
   14002be72:	call   QWORD PTR [r9+0x10]
   14002be76:	mov    r11,rax
   14002be79:	test   rax,rax
   14002be7c:	je     0x14002be8a
   14002be7e:	lea    eax,[rbx-0x1]
   14002be81:	mov    DWORD PTR [r11+0xc],eax
   14002be85:	mov    rax,r11
   14002be88:	jmp    0x14002be8c
   14002be8a:	xor    eax,eax
   14002be8c:	add    rsp,0x20
   14002be90:	pop    rbx
   14002be91:	ret    
   14002be92:	int3   
   14002be93:	int3   
   14002be94:	int3   
   14002be95:	int3   
   14002be96:	int3   
   14002be97:	int3   
   14002be98:	int3   
   14002be99:	int3   
   14002be9a:	int3   
   14002be9b:	int3   
   14002be9c:	int3   
   14002be9d:	int3   
   14002be9e:	int3   
   14002be9f:	int3   
   14002bea0:	mov    DWORD PTR [rdx],r8d
   14002bea3:	mov    QWORD PTR [rdx+0x8],rcx
   14002bea7:	mov    rax,rdx
   14002beaa:	ret    
   14002beab:	int3   
   14002beac:	int3   
   14002bead:	int3   
   14002beae:	int3   
   14002beaf:	int3   
   14002beb0:	rex push rbx
   14002beb2:	sub    rsp,0x30
   14002beb6:	mov    rax,QWORD PTR [rcx]
   14002beb9:	mov    rbx,r8
   14002bebc:	mov    r8d,edx
   14002bebf:	lea    rdx,[rsp+0x20]
   14002bec4:	call   QWORD PTR [rax+0x18]
   14002bec7:	mov    rcx,QWORD PTR [rbx+0x8]
   14002becb:	cmp    QWORD PTR [rax+0x8],rcx
   14002becf:	jne    0x14002bedf
   14002bed1:	mov    ecx,DWORD PTR [rbx]
   14002bed3:	cmp    DWORD PTR [rax],ecx
   14002bed5:	jne    0x14002bedf
   14002bed7:	mov    al,0x1
   14002bed9:	add    rsp,0x30
   14002bedd:	pop    rbx
   14002bede:	ret    
   14002bedf:	xor    al,al
   14002bee1:	add    rsp,0x30
   14002bee5:	pop    rbx
   14002bee6:	ret    
   14002bee7:	int3   
   14002bee8:	int3   
   14002bee9:	int3   
   14002beea:	int3   
   14002beeb:	int3   
   14002beec:	int3   
   14002beed:	int3   
   14002beee:	int3   
   14002beef:	int3   
   14002bef0:	cmp    rcx,QWORD PTR [rdx+0x8]
   14002bef4:	jne    0x14002befe
   14002bef6:	cmp    DWORD PTR [rdx],r8d
   14002bef9:	jne    0x14002befe
   14002befb:	mov    al,0x1
   14002befd:	ret    
   14002befe:	xor    al,al
   14002bf00:	ret    
   14002bf01:	int3   
   14002bf02:	int3   
   14002bf03:	int3   
   14002bf04:	int3   
   14002bf05:	int3   
   14002bf06:	int3   
   14002bf07:	int3   
   14002bf08:	int3   
   14002bf09:	int3   
   14002bf0a:	int3   
   14002bf0b:	int3   
   14002bf0c:	int3   
   14002bf0d:	int3   
   14002bf0e:	int3   
   14002bf0f:	int3   
   14002bf10:	mov    rcx,QWORD PTR [rcx]
   14002bf13:	rex.W jmp QWORD PTR [rip+0x1d236]        # 0x140049150
   14002bf1a:	int3   
   14002bf1b:	int3   
   14002bf1c:	int3   
   14002bf1d:	int3   
   14002bf1e:	int3   
   14002bf1f:	int3   
   14002bf20:	lea    rax,[rip+0x21d19]        # 0x14004dc40
   14002bf27:	ret    
   14002bf28:	int3   
   14002bf29:	int3   
   14002bf2a:	int3   
   14002bf2b:	int3   
   14002bf2c:	int3   
   14002bf2d:	int3   
   14002bf2e:	int3   
   14002bf2f:	int3   
   14002bf30:	lea    rax,[rip+0x21d11]        # 0x14004dc48
   14002bf37:	ret    
   14002bf38:	int3   
   14002bf39:	int3   
   14002bf3a:	int3   
   14002bf3b:	int3   
   14002bf3c:	int3   
   14002bf3d:	int3   
   14002bf3e:	int3   
   14002bf3f:	int3   
   14002bf40:	rex push rbx
   14002bf42:	sub    rsp,0x20
   14002bf46:	lea    rax,[rip+0x21c8b]        # 0x14004dbd8
   14002bf4d:	mov    rbx,rcx
   14002bf50:	mov    QWORD PTR [rcx],rax
   14002bf53:	test   dl,0x1
   14002bf56:	je     0x14002bf5d
   14002bf58:	call   0x14002b150
   14002bf5d:	mov    rax,rbx
   14002bf60:	add    rsp,0x20
   14002bf64:	pop    rbx
   14002bf65:	ret    
   14002bf66:	int3   
   14002bf67:	int3   
   14002bf68:	int3   
   14002bf69:	int3   
   14002bf6a:	int3   
   14002bf6b:	int3   
   14002bf6c:	int3   
   14002bf6d:	int3   
   14002bf6e:	int3   
   14002bf6f:	int3   
   14002bf70:	sub    rsp,0x38
   14002bf74:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bf7d:	mov    eax,DWORD PTR [rip+0x3e70d]        # 0x14006a690
   14002bf83:	test   al,0x1
   14002bf85:	jne    0x14002bfab
   14002bf87:	or     eax,0x1
   14002bf8a:	mov    DWORD PTR [rip+0x3e700],eax        # 0x14006a690
   14002bf90:	lea    rax,[rip+0x21c79]        # 0x14004dc10
   14002bf97:	mov    QWORD PTR [rip+0x3e6ea],rax        # 0x14006a688
   14002bf9e:	lea    rcx,[rip+0x1c74b]        # 0x1400486f0
   14002bfa5:	call   0x14002b278
   14002bfaa:	nop
   14002bfab:	lea    rax,[rip+0x3e6d6]        # 0x14006a688
   14002bfb2:	add    rsp,0x38
   14002bfb6:	ret    
   14002bfb7:	int3   
   14002bfb8:	int3   
   14002bfb9:	int3   
   14002bfba:	int3   
   14002bfbb:	int3   
   14002bfbc:	int3   
   14002bfbd:	int3   
   14002bfbe:	int3   
   14002bfbf:	int3   
   14002bfc0:	sub    rsp,0x38
   14002bfc4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bfcd:	mov    eax,DWORD PTR [rip+0x3e6cd]        # 0x14006a6a0
   14002bfd3:	test   al,0x1
   14002bfd5:	jne    0x14002bffb
   14002bfd7:	or     eax,0x1
   14002bfda:	mov    DWORD PTR [rip+0x3e6c0],eax        # 0x14006a6a0
   14002bfe0:	lea    rax,[rip+0x21c71]        # 0x14004dc58
   14002bfe7:	mov    QWORD PTR [rip+0x3e6aa],rax        # 0x14006a698
   14002bfee:	lea    rcx,[rip+0x1c70b]        # 0x140048700
   14002bff5:	call   0x14002b278
   14002bffa:	nop
   14002bffb:	lea    rax,[rip+0x3e696]        # 0x14006a698
   14002c002:	add    rsp,0x38
   14002c006:	ret    
   14002c007:	int3   
   14002c008:	int3   
   14002c009:	int3   
   14002c00a:	int3   
   14002c00b:	int3   
   14002c00c:	int3   
   14002c00d:	int3   
   14002c00e:	int3   
   14002c00f:	int3   
   14002c010:	rex push rdi
   14002c012:	sub    rsp,0x30
   14002c016:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c01f:	mov    QWORD PTR [rsp+0x40],rbx
   14002c024:	mov    edi,edx
   14002c026:	mov    rbx,rcx
   14002c029:	mov    eax,DWORD PTR [rip+0x3e671]        # 0x14006a6a0
   14002c02f:	test   al,0x1
   14002c031:	jne    0x14002c057
   14002c033:	or     eax,0x1
   14002c036:	mov    DWORD PTR [rip+0x3e664],eax        # 0x14006a6a0
   14002c03c:	lea    rax,[rip+0x21c15]        # 0x14004dc58
   14002c043:	mov    QWORD PTR [rip+0x3e64e],rax        # 0x14006a698
   14002c04a:	lea    rcx,[rip+0x1c6af]        # 0x140048700
   14002c051:	call   0x14002b278
   14002c056:	nop
   14002c057:	mov    DWORD PTR [rbx],edi
   14002c059:	lea    rax,[rip+0x3e638]        # 0x14006a698
   14002c060:	mov    QWORD PTR [rbx+0x8],rax
   14002c064:	mov    rax,rbx
   14002c067:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c06c:	add    rsp,0x30
   14002c070:	pop    rdi
   14002c071:	ret    
   14002c072:	int3   
   14002c073:	int3   
   14002c074:	int3   
   14002c075:	int3   
   14002c076:	int3   
   14002c077:	int3   
   14002c078:	int3   
   14002c079:	int3   
   14002c07a:	int3   
   14002c07b:	int3   
   14002c07c:	int3   
   14002c07d:	int3   
   14002c07e:	int3   
   14002c07f:	int3   
   14002c080:	rex push rdi
   14002c082:	sub    rsp,0x30
   14002c086:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c08f:	mov    QWORD PTR [rsp+0x40],rbx
   14002c094:	movsxd rdi,r8d
   14002c097:	mov    rbx,rdx
   14002c09a:	cmp    edi,0x10b
   14002c0a0:	jg     0x14002c1cc
   14002c0a6:	je     0x14002c160
   14002c0ac:	cmp    edi,0xd4
   14002c0b2:	ja     0x14002c46e
   14002c0b8:	lea    rdx,[rip+0xfffffffffffd3f41]        # 0x140000000
   14002c0bf:	movzx  eax,BYTE PTR [rdx+rdi*1+0x2c500]
   14002c0c7:	mov    ecx,DWORD PTR [rdx+rax*4+0x2c4b8]
   14002c0ce:	add    rcx,rdx
   14002c0d1:	jmp    rcx
   14002c0d3:	xor    edx,edx
   14002c0d5:	mov    rcx,rbx
   14002c0d8:	call   0x14002c010
   14002c0dd:	jmp    0x14002c4a9
   14002c0e2:	mov    edx,0x11
   14002c0e7:	mov    rcx,rbx
   14002c0ea:	call   0x14002c010
   14002c0ef:	jmp    0x14002c4a9
   14002c0f4:	mov    edx,0x13
   14002c0f9:	mov    rcx,rbx
   14002c0fc:	call   0x14002c010
   14002c101:	jmp    0x14002c4a9
   14002c106:	mov    edx,0x26
   14002c10b:	mov    rcx,rbx
   14002c10e:	call   0x14002c010
   14002c113:	jmp    0x14002c4a9
   14002c118:	mov    edx,0x29
   14002c11d:	mov    rcx,rbx
   14002c120:	call   0x14002c010
   14002c125:	jmp    0x14002c4a9
   14002c12a:	mov    edx,0x1c
   14002c12f:	mov    rcx,rbx
   14002c132:	call   0x14002c010
   14002c137:	jmp    0x14002c4a9
   14002c13c:	mov    edx,0x2
   14002c141:	mov    rcx,rbx
   14002c144:	call   0x14002c010
   14002c149:	jmp    0x14002c4a9
   14002c14e:	mov    edx,0x28
   14002c153:	mov    rcx,rbx
   14002c156:	call   0x14002c010
   14002c15b:	jmp    0x14002c4a9
   14002c160:	mov    edx,0x16
   14002c165:	mov    rcx,rbx
   14002c168:	call   0x14002c010
   14002c16d:	jmp    0x14002c4a9
   14002c172:	mov    edx,0x27
   14002c177:	mov    rcx,rbx
   14002c17a:	call   0x14002c010
   14002c17f:	jmp    0x14002c4a9
   14002c184:	mov    edx,0xc
   14002c189:	mov    rcx,rbx
   14002c18c:	call   0x14002c010
   14002c191:	jmp    0x14002c4a9
   14002c196:	mov    edx,0xb
   14002c19b:	mov    rcx,rbx
   14002c19e:	call   0x14002c010
   14002c1a3:	jmp    0x14002c4a9
   14002c1a8:	mov    edx,0x12
   14002c1ad:	mov    rcx,rbx
   14002c1b0:	call   0x14002c010
   14002c1b5:	jmp    0x14002c4a9
   14002c1ba:	mov    edx,0x18
   14002c1bf:	mov    rcx,rbx
   14002c1c2:	call   0x14002c010
   14002c1c7:	jmp    0x14002c4a9
   14002c1cc:	cmp    edi,0x2714
   14002c1d2:	jg     0x14002c26b
   14002c1d8:	je     0x14002c259
   14002c1da:	cmp    edi,0x3f5
   14002c1e0:	jg     0x14002c228
   14002c1e2:	je     0x14002c204
   14002c1e4:	mov    ecx,edi
   14002c1e6:	sub    ecx,0x3e3
   14002c1ec:	je     0x14002c216
   14002c1ee:	sub    ecx,0x3
   14002c1f1:	je     0x14002c297
   14002c1f7:	sub    ecx,0xd
   14002c1fa:	je     0x14002c204
   14002c1fc:	dec    ecx
   14002c1fe:	jne    0x14002c46e
   14002c204:	mov    edx,0x5
   14002c209:	mov    rcx,rbx
   14002c20c:	call   0x14002c010
   14002c211:	jmp    0x14002c4a9
   14002c216:	mov    edx,0x69
   14002c21b:	mov    rcx,rbx
   14002c21e:	call   0x14002c010
   14002c223:	jmp    0x14002c4a9
   14002c228:	mov    ecx,edi
   14002c22a:	sub    ecx,0x4d5
   14002c230:	je     0x14002c196
   14002c236:	sub    ecx,0x48c
   14002c23c:	je     0x14002c247
   14002c23e:	cmp    ecx,0x3
   14002c241:	jne    0x14002c46e
   14002c247:	mov    edx,0x10
   14002c24c:	mov    rcx,rbx
   14002c24f:	call   0x14002c010
   14002c254:	jmp    0x14002c4a9
   14002c259:	mov    edx,0x4
   14002c25e:	mov    rcx,rbx
   14002c261:	call   0x14002c010
   14002c266:	jmp    0x14002c4a9
   14002c26b:	lea    eax,[rdi-0x2719]
   14002c271:	cmp    eax,0x38
   14002c274:	ja     0x14002c46e
   14002c27a:	cdqe   
   14002c27c:	lea    rdx,[rip+0xfffffffffffd3d7d]        # 0x140000000
   14002c283:	movzx  eax,BYTE PTR [rdx+rax*1+0x2c654]
   14002c28b:	mov    ecx,DWORD PTR [rdx+rax*4+0x2c5d8]
   14002c292:	add    rcx,rdx
   14002c295:	jmp    rcx
   14002c297:	mov    edx,0xd
   14002c29c:	mov    rcx,rbx
   14002c29f:	call   0x14002c010
   14002c2a4:	jmp    0x14002c4a9
   14002c2a9:	mov    edx,0x64
   14002c2ae:	mov    rcx,rbx
   14002c2b1:	call   0x14002c010
   14002c2b6:	jmp    0x14002c4a9
   14002c2bb:	mov    edx,0x65
   14002c2c0:	mov    rcx,rbx
   14002c2c3:	call   0x14002c010
   14002c2c8:	jmp    0x14002c4a9
   14002c2cd:	mov    edx,0x66
   14002c2d2:	mov    rcx,rbx
   14002c2d5:	call   0x14002c010
   14002c2da:	jmp    0x14002c4a9
   14002c2df:	mov    edx,0x67
   14002c2e4:	mov    rcx,rbx
   14002c2e7:	call   0x14002c010
   14002c2ec:	jmp    0x14002c4a9
   14002c2f1:	mov    edx,0x9
   14002c2f6:	mov    rcx,rbx
   14002c2f9:	call   0x14002c010
   14002c2fe:	jmp    0x14002c4a9
   14002c303:	mov    edx,0x6a
   14002c308:	mov    rcx,rbx
   14002c30b:	call   0x14002c010
   14002c310:	jmp    0x14002c4a9
   14002c315:	mov    edx,0x6b
   14002c31a:	mov    rcx,rbx
   14002c31d:	call   0x14002c010
   14002c322:	jmp    0x14002c4a9
   14002c327:	mov    edx,0x6c
   14002c32c:	mov    rcx,rbx
   14002c32f:	call   0x14002c010
   14002c334:	jmp    0x14002c4a9
   14002c339:	mov    edx,0x6d
   14002c33e:	mov    rcx,rbx
   14002c341:	call   0x14002c010
   14002c346:	jmp    0x14002c4a9
   14002c34b:	mov    edx,0xe
   14002c350:	mov    rcx,rbx
   14002c353:	call   0x14002c010
   14002c358:	jmp    0x14002c4a9
   14002c35d:	mov    edx,0x6e
   14002c362:	mov    rcx,rbx
   14002c365:	call   0x14002c010
   14002c36a:	jmp    0x14002c4a9
   14002c36f:	mov    edx,0x70
   14002c374:	mov    rcx,rbx
   14002c377:	call   0x14002c010
   14002c37c:	jmp    0x14002c4a9
   14002c381:	mov    edx,0x71
   14002c386:	mov    rcx,rbx
   14002c389:	call   0x14002c010
   14002c38e:	jmp    0x14002c4a9
   14002c393:	mov    edx,0x73
   14002c398:	mov    rcx,rbx
   14002c39b:	call   0x14002c010
   14002c3a0:	jmp    0x14002c4a9
   14002c3a5:	mov    edx,0x74
   14002c3aa:	mov    rcx,rbx
   14002c3ad:	call   0x14002c010
   14002c3b2:	jmp    0x14002c4a9
   14002c3b7:	mov    edx,0x75
   14002c3bc:	mov    rcx,rbx
   14002c3bf:	call   0x14002c010
   14002c3c4:	jmp    0x14002c4a9
   14002c3c9:	mov    edx,0x76
   14002c3ce:	mov    rcx,rbx
   14002c3d1:	call   0x14002c010
   14002c3d6:	jmp    0x14002c4a9
   14002c3db:	mov    edx,0x77
   14002c3e0:	mov    rcx,rbx
   14002c3e3:	call   0x14002c010
   14002c3e8:	jmp    0x14002c4a9
   14002c3ed:	mov    edx,0x7b
   14002c3f2:	mov    rcx,rbx
   14002c3f5:	call   0x14002c010
   14002c3fa:	jmp    0x14002c4a9
   14002c3ff:	mov    edx,0x7e
   14002c404:	mov    rcx,rbx
   14002c407:	call   0x14002c010
   14002c40c:	jmp    0x14002c4a9
   14002c411:	mov    edx,0x80
   14002c416:	mov    rcx,rbx
   14002c419:	call   0x14002c010
   14002c41e:	jmp    0x14002c4a9
   14002c423:	mov    edx,0x82
   14002c428:	mov    rcx,rbx
   14002c42b:	call   0x14002c010
   14002c430:	jmp    0x14002c4a9
   14002c432:	mov    edx,0x87
   14002c437:	mov    rcx,rbx
   14002c43a:	call   0x14002c010
   14002c43f:	jmp    0x14002c4a9
   14002c441:	mov    edx,0x88
   14002c446:	mov    rcx,rbx
   14002c449:	call   0x14002c010
   14002c44e:	jmp    0x14002c4a9
   14002c450:	mov    edx,0x8a
   14002c455:	mov    rcx,rbx
   14002c458:	call   0x14002c010
   14002c45d:	jmp    0x14002c4a9
   14002c45f:	mov    edx,0x8c
   14002c464:	mov    rcx,rbx
   14002c467:	call   0x14002c010
   14002c46c:	jmp    0x14002c4a9
   14002c46e:	mov    eax,DWORD PTR [rip+0x3e21c]        # 0x14006a690
   14002c474:	test   al,0x1
   14002c476:	jne    0x14002c49c
   14002c478:	or     eax,0x1
   14002c47b:	mov    DWORD PTR [rip+0x3e20f],eax        # 0x14006a690
   14002c481:	lea    rax,[rip+0x21788]        # 0x14004dc10
   14002c488:	mov    QWORD PTR [rip+0x3e1f9],rax        # 0x14006a688
   14002c48f:	lea    rcx,[rip+0x1c25a]        # 0x1400486f0
   14002c496:	call   0x14002b278
   14002c49b:	nop
   14002c49c:	mov    DWORD PTR [rbx],edi
   14002c49e:	lea    rax,[rip+0x3e1e3]        # 0x14006a688
   14002c4a5:	mov    QWORD PTR [rbx+0x8],rax
   14002c4a9:	mov    rax,rbx
   14002c4ac:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c4b1:	add    rsp,0x30
   14002c4b5:	pop    rdi
   14002c4b6:	ret    
   14002c4b7:	nop
   14002c4b8:	rol    eax,cl
   14002c4ba:	add    al,BYTE PTR [rax]
   14002c4bc:	rex.WRX rol QWORD PTR [rdx],0x0
   14002c4c0:	cmp    al,0xc1
   14002c4c2:	add    al,BYTE PTR [rax]
   14002c4c4:	mov    edx,0x970002c1
   14002c4c9:	ret    0x2
   14002c4cc:	(bad)  
   14002c4cd:	rol    DWORD PTR [rdx],0x0
   14002c4d0:	test   cl,al
   14002c4d2:	add    al,BYTE PTR [rax]
   14002c4d4:	hlt    
   14002c4d5:	rol    BYTE PTR [rdx],0x0
   14002c4d8:	test   al,0xc1
   14002c4da:	add    al,BYTE PTR [rax]
   14002c4dc:	xchg   esi,eax
   14002c4dd:	rol    DWORD PTR [rdx],0x0
   14002c4e0:	add    al,0xc2
   14002c4e2:	add    al,BYTE PTR [rax]
   14002c4e4:	jb     0x14002c4a7
   14002c4e6:	add    al,BYTE PTR [rax]
   14002c4e8:	sub    al,cl
   14002c4ea:	add    al,BYTE PTR [rax]
   14002c4ec:	loop   0x14002c4ae
   14002c4ee:	add    al,BYTE PTR [rax]
   14002c4f0:	(bad)  
   14002c4f1:	rol    DWORD PTR [rdx],0x0
   14002c4f4:	rex.RXB ret 0x2
   14002c4f8:	sbb    cl,al
   14002c4fa:	add    al,BYTE PTR [rax]
   14002c4fc:	outs   dx,BYTE PTR ds:[rsi]
   14002c4fd:	(bad)
   14002c501:	add    DWORD PTR [rdx],eax
   14002c503:	add    al,BYTE PTR [rbx]
   14002c505:	add    al,0x5
   14002c507:	adc    DWORD PTR [rsi],eax
   14002c509:	adc    DWORD PTR [rcx],edx
   14002c50b:	adc    DWORD PTR [rcx+rdx*1],eax
   14002c50e:	(bad)  
   14002c50f:	(bad)  
   14002c510:	add    al,0x8
   14002c512:	adc    DWORD PTR [rdi+rax*1],eax
   14002c515:	or     DWORD PTR [rcx],edx
   14002c517:	adc    DWORD PTR [rcx],edx
   14002c519:	or     dl,BYTE PTR [rcx]
   14002c51b:	adc    DWORD PTR [rcx],edx
   14002c51d:	or     cl,BYTE PTR [rdx]
   14002c51f:	adc    DWORD PTR [rbx+rcx*1],eax
   14002c522:	adc    DWORD PTR [rcx],edx
   14002c524:	adc    DWORD PTR [rcx],edx
   14002c526:	adc    DWORD PTR [rcx+rdx*1],ecx
   14002c529:	adc    DWORD PTR [rcx],edx
   14002c52b:	adc    DWORD PTR [rcx],edx
   14002c52d:	adc    DWORD PTR [rcx],edx
   14002c52f:	adc    DWORD PTR [rcx],edx
   14002c531:	adc    DWORD PTR [rcx],edx
   14002c533:	adc    DWORD PTR [rcx],edx
   14002c535:	adc    DWORD PTR [rcx],edx
   14002c537:	(bad)  
   14002c538:	adc    DWORD PTR [rcx],edx
   14002c53a:	adc    DWORD PTR [rcx],edx
   14002c53c:	adc    DWORD PTR [rcx],edx
   14002c53e:	adc    DWORD PTR [rcx],edx
   14002c540:	adc    DWORD PTR [rcx],edx
   14002c542:	adc    DWORD PTR [rcx],edx
   14002c544:	adc    DWORD PTR [rcx],edx
   14002c546:	adc    DWORD PTR [rcx],edx
   14002c548:	adc    DWORD PTR [rcx],edx
   14002c54a:	adc    DWORD PTR [rcx],edx
   14002c54c:	adc    DWORD PTR [rcx],edx
   14002c54e:	adc    DWORD PTR [rcx],edx
   14002c550:	or     eax,0x11110411
   14002c555:	adc    DWORD PTR [rcx],edx
   14002c557:	adc    DWORD PTR [rcx],edx
   14002c559:	adc    DWORD PTR [rcx],edx
   14002c55b:	adc    DWORD PTR [rcx],edx
   14002c55d:	adc    DWORD PTR [rcx],edx
   14002c55f:	adc    DWORD PTR [rcx],edx
   14002c561:	adc    DWORD PTR [rcx],edx
   14002c563:	adc    DWORD PTR [rcx],edx
   14002c565:	adc    DWORD PTR [rcx],edx
   14002c567:	adc    DWORD PTR [rcx],edx
   14002c569:	adc    DWORD PTR [rcx],edx
   14002c56b:	adc    DWORD PTR [rcx],edx
   14002c56d:	adc    DWORD PTR [rdx],ecx
   14002c56f:	(bad)  
   14002c570:	or     al,0x11
   14002c572:	adc    DWORD PTR [rcx],edx
   14002c574:	adc    DWORD PTR [rcx],edx
   14002c576:	adc    DWORD PTR [rcx],edx
   14002c578:	adc    DWORD PTR [rcx],edx
   14002c57a:	adc    DWORD PTR [rip+0x11111111],eax        # 0x15113d691
   14002c580:	adc    DWORD PTR [rcx],edx
   14002c582:	adc    DWORD PTR [rip+0x11111111],eax        # 0x15113d699
   14002c588:	adc    DWORD PTR [rcx],edx
   14002c58a:	adc    DWORD PTR [rcx],edx
   14002c58c:	adc    DWORD PTR [rcx],edx
   14002c58e:	movups XMMWORD PTR [rcx],xmm2
   14002c591:	adc    BYTE PTR [rcx],dl
   14002c593:	adc    DWORD PTR [rcx],edx
   14002c595:	adc    DWORD PTR [rcx],edx
   14002c597:	adc    DWORD PTR [rcx],edx
   14002c599:	adc    DWORD PTR [rcx],edx
   14002c59b:	adc    DWORD PTR [rcx],edx
   14002c59d:	adc    DWORD PTR [rcx],edx
   14002c59f:	adc    DWORD PTR [rcx],edx
   14002c5a1:	adc    DWORD PTR [rcx],edx
   14002c5a3:	adc    DWORD PTR [rcx],edx
   14002c5a5:	adc    DWORD PTR [rcx],edx
   14002c5a7:	adc    DWORD PTR [rcx],edx
   14002c5a9:	adc    DWORD PTR [rdi],ecx
   14002c5ab:	adc    DWORD PTR [rcx],edx
   14002c5ad:	adc    DWORD PTR [rcx],edx
   14002c5af:	adc    DWORD PTR [rcx],edx
   14002c5b1:	adc    DWORD PTR [rcx],edx
   14002c5b3:	adc    DWORD PTR [rcx],edx
   14002c5b5:	adc    DWORD PTR [rcx],edx
   14002c5b7:	or     eax,0x11111111
   14002c5bc:	adc    DWORD PTR [rcx],edx
   14002c5be:	adc    DWORD PTR [rcx],edx
   14002c5c0:	adc    DWORD PTR [rcx],edx
   14002c5c2:	adc    DWORD PTR [rcx],edx
   14002c5c4:	adc    DWORD PTR [rcx],edx
   14002c5c6:	adc    DWORD PTR [rcx],edx
   14002c5c8:	adc    DWORD PTR [rcx],edx
   14002c5ca:	adc    DWORD PTR [rcx],edx
   14002c5cc:	adc    DWORD PTR [rcx],edx
   14002c5ce:	adc    DWORD PTR [rcx],edx
   14002c5d0:	adc    DWORD PTR [rcx],edx
   14002c5d2:	adc    DWORD PTR [rcx],edx
   14002c5d4:	or     ecx,DWORD PTR [rdi]
   14002c5d6:	(bad)  
   14002c5d7:	add    cl,dh
   14002c5d9:	ret    0x2
   14002c5dc:	xchg   edi,eax
   14002c5dd:	ret    0x2
   14002c5e0:	rex.WXB ret 
   14002c5e2:	add    al,BYTE PTR [rax]
   14002c5e4:	(bad)  
   14002c5e5:	rol    DWORD PTR [rdx],0x0
   14002c5e8:	mov    edx,0x5f0002c1
   14002c5ed:	(bad)
   14002c5f1:	ret    
   14002c5f2:	add    al,BYTE PTR [rax]
   14002c5f4:	ffreep st(2)
   14002c5f6:	add    al,BYTE PTR [rax]
   14002c5f8:	adc    esp,eax
   14002c5fa:	add    al,BYTE PTR [rax]
   14002c5fc:	cmp    ebx,eax
   14002c5fe:	add    al,BYTE PTR [rax]
   14002c600:	xchg   ebx,eax
   14002c601:	ret    
   14002c602:	add    al,BYTE PTR [rax]
   14002c604:	(bad)
   14002c609:	ret    
   14002c60a:	add    al,BYTE PTR [rax]
   14002c60c:	xor    al,ah
   14002c60e:	add    al,BYTE PTR [rax]
   14002c610:	and    eax,esp
   14002c612:	add    al,BYTE PTR [rax]
   14002c614:	int    0xc2
   14002c616:	add    al,BYTE PTR [rax]
   14002c618:	test   eax,0xbb0002c2
   14002c61d:	ret    0x2
   14002c620:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c621:	ret    
   14002c622:	add    al,BYTE PTR [rax]
   14002c624:	leave  
   14002c625:	ret    
   14002c626:	add    al,BYTE PTR [rax]
   14002c628:	mov    bh,0xc3
   14002c62a:	add    al,BYTE PTR [rax]
   14002c62c:	add    eax,ebx
   14002c62e:	add    al,BYTE PTR [rax]
   14002c630:	(bad)  
   14002c631:	ret    
   14002c632:	add    al,BYTE PTR [rax]
   14002c634:	fcmovnb st,st(3)
   14002c636:	add    al,BYTE PTR [rax]
   14002c638:	add    ebx,0xc3ff0002
   14002c63e:	add    al,BYTE PTR [rax]
   14002c640:	push   rax
   14002c641:	(bad)
   14002c645:	ret    
   14002c646:	add    al,BYTE PTR [rax]
   14002c648:	(bad)  
   14002c649:	rol    DWORD PTR [rdx],0x0
   14002c64c:	pop    rbp
   14002c64d:	ret    
   14002c64e:	add    al,BYTE PTR [rax]
   14002c650:	outs   dx,BYTE PTR ds:[rsi]
   14002c651:	(bad)
   14002c655:	(bad)  
   14002c656:	(bad)  
   14002c657:	(bad)  
   14002c658:	add    DWORD PTR [rdx],eax
   14002c65a:	(bad)  
   14002c65b:	(bad)  
   14002c65c:	(bad)  
   14002c65d:	(bad)  
   14002c65e:	(bad)  
   14002c65f:	(bad)  
   14002c660:	(bad)  
   14002c661:	add    ebx,DWORD PTR [rsi]
   14002c663:	add    al,0x1e
   14002c665:	(bad)  
   14002c666:	(bad)  
   14002c667:	(bad)  
   14002c668:	(bad)  
   14002c669:	(bad)  
   14002c66a:	(bad)  
   14002c66b:	(bad)  
   14002c66c:	(bad)  
   14002c66d:	(bad)  
   14002c66e:	add    eax,0x9080706
   14002c673:	or     cl,BYTE PTR [rbx]
   14002c675:	or     al,0xd
   14002c677:	(bad)  
   14002c678:	(bad)  
   14002c679:	(bad)  
   14002c67a:	movups xmm2,XMMWORD PTR [rcx]
   14002c67d:	adc    dl,BYTE PTR [rbx]
   14002c67f:	adc    al,0x15
   14002c681:	(bad)  
   14002c682:	(bad)  
   14002c683:	sbb    BYTE PTR [rcx],bl
   14002c685:	(bad)  
   14002c686:	(bad)  
   14002c687:	sbb    bl,BYTE PTR [rbx]
   14002c689:	(bad)  
   14002c68a:	sbb    al,0x1e
   14002c68c:	sbb    eax,0x48cccccc
   14002c691:	mov    eax,esp
   14002c693:	push   rbp
   14002c694:	push   rdi
   14002c695:	push   r12
   14002c697:	lea    rbp,[rax-0x5f]
   14002c69b:	sub    rsp,0x90
   14002c6a2:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   14002c6aa:	mov    QWORD PTR [rax+0x8],rbx
   14002c6ae:	mov    QWORD PTR [rax+0x20],rsi
   14002c6b2:	mov    rax,QWORD PTR [rip+0x3bb37]        # 0x1400681f0
   14002c6b9:	xor    rax,rsp
   14002c6bc:	mov    QWORD PTR [rbp+0x37],rax
   14002c6c0:	mov    edi,r8d
   14002c6c3:	mov    rbx,rdx
   14002c6c6:	xor    r12d,r12d
   14002c6c9:	mov    DWORD PTR [rbp-0x29],r12d
   14002c6cd:	mov    eax,DWORD PTR [rip+0x3dffd]        # 0x14006a6d0
   14002c6d3:	lea    rsi,[rip+0x3dfce]        # 0x14006a6a8
   14002c6da:	test   al,0x1
   14002c6dc:	jne    0x14002c721
   14002c6de:	or     eax,0x1
   14002c6e1:	mov    DWORD PTR [rip+0x3dfe9],eax        # 0x14006a6d0
   14002c6e7:	mov    QWORD PTR [rip+0x3dfce],0xf        # 0x14006a6c0
   14002c6f2:	mov    QWORD PTR [rip+0x3dfbf],r12        # 0x14006a6b8
   14002c6f9:	mov    BYTE PTR [rip+0x3dfa8],r12b        # 0x14006a6a8
   14002c700:	lea    r8d,[r12+0xd]
   14002c705:	lea    rdx,[rip+0x21644]        # 0x14004dd50
   14002c70c:	mov    rcx,rsi
   14002c70f:	call   0x140005154
   14002c714:	lea    rcx,[rip+0x1bff5]        # 0x140048710
   14002c71b:	call   0x14002b278
   14002c720:	nop
   14002c721:	mov    ecx,edi
   14002c723:	call   QWORD PTR [rip+0x1d097]        # 0x1400497c0
   14002c729:	mov    rdx,rax
   14002c72c:	or     rcx,0xffffffffffffffff
   14002c730:	test   rax,rax
   14002c733:	je     0x14002c76a
   14002c735:	mov    QWORD PTR [rbp+0x27],0xf
   14002c73d:	mov    QWORD PTR [rbp+0x1f],r12
   14002c741:	mov    BYTE PTR [rbp+0xf],0x0
   14002c745:	xor    eax,eax
   14002c747:	mov    rdi,rdx
   14002c74a:	repnz scas al,BYTE PTR es:[rdi]
   14002c74c:	not    rcx
   14002c74f:	lea    r8,[rcx-0x1]
   14002c753:	lea    rcx,[rbp+0xf]
   14002c757:	call   0x140005154
   14002c75c:	lea    rdx,[rbp+0xf]
   14002c760:	mov    edi,0x1
   14002c765:	jmp    0x14002c816
   14002c76a:	mov    edx,0xf
   14002c76f:	mov    QWORD PTR [rbp-0x1],rdx
   14002c773:	mov    QWORD PTR [rbp-0x9],r12
   14002c777:	mov    BYTE PTR [rbp-0x19],0x0
   14002c77b:	mov    rdi,QWORD PTR [rip+0x3df36]        # 0x14006a6b8
   14002c782:	cmp    rdi,0xffffffffffffffff
   14002c786:	cmova  rdi,rcx
   14002c78a:	cmp    rdi,0xfffffffffffffffe
   14002c78e:	jbe    0x14002c79e
   14002c790:	lea    rcx,[rip+0x241b1]        # 0x140050948
   14002c797:	call   QWORD PTR [rip+0x1cdfb]        # 0x140049598
   14002c79d:	int3   
   14002c79e:	cmp    rdi,rdx
   14002c7a1:	jbe    0x14002c7b8
   14002c7a3:	xor    r8d,r8d
   14002c7a6:	mov    rdx,rdi
   14002c7a9:	lea    rcx,[rbp-0x19]
   14002c7ad:	call   0x140005750
   14002c7b2:	mov    rdx,QWORD PTR [rbp-0x1]
   14002c7b6:	jmp    0x14002c7c5
   14002c7b8:	test   rdi,rdi
   14002c7bb:	jne    0x14002c7c8
   14002c7bd:	mov    QWORD PTR [rbp-0x9],r12
   14002c7c1:	mov    BYTE PTR [rbp-0x19],dil
   14002c7c5:	test   rdi,rdi
   14002c7c8:	setne  al
   14002c7cb:	test   al,al
   14002c7cd:	je     0x14002c80d
   14002c7cf:	cmp    QWORD PTR [rip+0x3dee9],0x10        # 0x14006a6c0
   14002c7d7:	cmovae rsi,QWORD PTR [rip+0x3dec9]        # 0x14006a6a8
   14002c7df:	lea    rcx,[rbp-0x19]
   14002c7e3:	cmp    rdx,0x10
   14002c7e7:	cmovae rcx,QWORD PTR [rbp-0x19]
   14002c7ec:	mov    r8,rdi
   14002c7ef:	mov    rdx,rsi
   14002c7f2:	call   0x14002b120
   14002c7f7:	mov    QWORD PTR [rbp-0x9],rdi
   14002c7fb:	lea    rax,[rbp-0x19]
   14002c7ff:	cmp    QWORD PTR [rbp-0x1],0x10
   14002c804:	cmovae rax,QWORD PTR [rbp-0x19]
   14002c809:	mov    BYTE PTR [rax+rdi*1],0x0
   14002c80d:	lea    rdx,[rbp-0x19]
   14002c811:	mov    edi,0x2
   14002c816:	mov    DWORD PTR [rbp-0x29],edi
   14002c819:	mov    QWORD PTR [rbx+0x18],0xf
   14002c821:	mov    QWORD PTR [rbx+0x10],r12
   14002c825:	mov    BYTE PTR [rbx],0x0
   14002c828:	mov    rcx,rbx
   14002c82b:	call   0x140004730
   14002c830:	or     edi,0x4
   14002c833:	test   dil,0x2
   14002c837:	je     0x14002c85c
   14002c839:	and    edi,0xfffffffd
   14002c83c:	cmp    QWORD PTR [rbp-0x1],0x10
   14002c841:	jb     0x14002c84c
   14002c843:	mov    rcx,QWORD PTR [rbp-0x19]
   14002c847:	call   0x14002b150
   14002c84c:	mov    QWORD PTR [rbp-0x1],0xf
   14002c854:	mov    QWORD PTR [rbp-0x9],r12
   14002c858:	mov    BYTE PTR [rbp-0x19],0x0
   14002c85c:	test   dil,0x1
   14002c860:	je     0x14002c872
   14002c862:	cmp    QWORD PTR [rbp+0x27],0x10
   14002c867:	jb     0x14002c872
   14002c869:	mov    rcx,QWORD PTR [rbp+0xf]
   14002c86d:	call   0x14002b150
   14002c872:	mov    rax,rbx
   14002c875:	mov    rcx,QWORD PTR [rbp+0x37]
   14002c879:	xor    rcx,rsp
   14002c87c:	call   0x14002b100
   14002c881:	lea    r11,[rsp+0x90]
   14002c889:	mov    rbx,QWORD PTR [r11+0x20]
   14002c88d:	mov    rsi,QWORD PTR [r11+0x38]
   14002c891:	mov    rsp,r11
   14002c894:	pop    r12
   14002c896:	pop    rdi
   14002c897:	pop    rbp
   14002c898:	ret    
   14002c899:	int3   
   14002c89a:	int3   
   14002c89b:	int3   
   14002c89c:	int3   
   14002c89d:	int3   
   14002c89e:	int3   
   14002c89f:	int3   
   14002c8a0:	mov    rax,rsp
   14002c8a3:	push   rbp
   14002c8a4:	push   rdi
   14002c8a5:	push   r12
   14002c8a7:	lea    rbp,[rax-0x5f]
   14002c8ab:	sub    rsp,0xa0
   14002c8b2:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   14002c8ba:	mov    QWORD PTR [rax+0x8],rbx
   14002c8be:	mov    QWORD PTR [rax+0x20],rsi
   14002c8c2:	mov    rax,QWORD PTR [rip+0x3b927]        # 0x1400681f0
   14002c8c9:	xor    rax,rsp
   14002c8cc:	mov    QWORD PTR [rbp+0x37],rax
   14002c8d0:	mov    rsi,rdx
   14002c8d3:	mov    QWORD PTR [rbp+0x7],rdx
   14002c8d7:	xor    r12d,r12d
   14002c8da:	mov    DWORD PTR [rbp-0x19],r12d
   14002c8de:	mov    QWORD PTR [rbp-0x11],r12
   14002c8e2:	mov    QWORD PTR [rsp+0x30],r12
   14002c8e7:	mov    DWORD PTR [rsp+0x28],r12d
   14002c8ec:	lea    rax,[rbp-0x11]
   14002c8f0:	mov    QWORD PTR [rsp+0x20],rax
   14002c8f5:	xor    edx,edx
   14002c8f7:	mov    ecx,0x1300
   14002c8fc:	mov    r9d,0x400
   14002c902:	call   QWORD PTR [rip+0x1c850]        # 0x140049158
   14002c908:	mov    rbx,QWORD PTR [rbp-0x11]
   14002c90c:	mov    QWORD PTR [rbp-0x1],rbx
   14002c910:	test   eax,eax
   14002c912:	jne    0x14002c942
   14002c914:	mov    QWORD PTR [rsi+0x18],0xf
   14002c91c:	mov    QWORD PTR [rsi+0x10],r12
   14002c920:	mov    BYTE PTR [rsi],al
   14002c922:	lea    r8d,[r12+0xd]
   14002c927:	lea    rdx,[rip+0x21422]        # 0x14004dd50
   14002c92e:	mov    rcx,rsi
   14002c931:	call   0x140005154
   14002c936:	mov    DWORD PTR [rbp-0x19],0x1
   14002c93d:	jmp    0x14002cb19
   14002c942:	mov    QWORD PTR [rbp+0x27],0xf
   14002c94a:	mov    QWORD PTR [rbp+0x1f],r12
   14002c94e:	mov    BYTE PTR [rbp+0xf],0x0
   14002c952:	xor    eax,eax
   14002c954:	or     rcx,0xffffffffffffffff
   14002c958:	mov    rdi,rbx
   14002c95b:	repnz scas al,BYTE PTR es:[rdi]
   14002c95d:	not    rcx
   14002c960:	lea    r8,[rcx-0x1]
   14002c964:	mov    rdx,rbx
   14002c967:	lea    rcx,[rbp+0xf]
   14002c96b:	call   0x140005154
   14002c970:	nop
   14002c971:	mov    rdx,QWORD PTR [rbp+0x1f]
   14002c975:	test   rdx,rdx
   14002c978:	je     0x14002ca6b
   14002c97e:	mov    r10,QWORD PTR [rbp+0x27]
   14002c982:	mov    r11,QWORD PTR [rbp+0xf]
   14002c986:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002c990:	lea    rax,[rbp+0xf]
   14002c994:	cmp    r10,0x10
   14002c998:	cmovae rax,r11
   14002c99c:	cmp    BYTE PTR [rax+rdx*1-0x1],0xa
   14002c9a1:	je     0x14002c9b6
   14002c9a3:	lea    rax,[rbp+0xf]
   14002c9a7:	cmp    r10,0x10
   14002c9ab:	cmovae rax,r11
   14002c9af:	cmp    BYTE PTR [rax+rdx*1-0x1],0xd
   14002c9b4:	jne    0x14002ca33
   14002c9b6:	or     rdi,0xffffffffffffffff
   14002c9ba:	lea    r9,[rdx-0x1]
   14002c9be:	cmp    rdx,r9
   14002c9c1:	jb     0x14002ca5d
   14002c9c7:	mov    r8,rdx
   14002c9ca:	sub    r8,r9
   14002c9cd:	cmp    r8,rdi
   14002c9d0:	jae    0x14002c9da
   14002c9d2:	mov    rdi,r8
   14002c9d5:	test   r8,r8
   14002c9d8:	je     0x14002ca29
   14002c9da:	lea    rdx,[rbp+0xf]
   14002c9de:	cmp    r10,0x10
   14002c9e2:	cmovae rdx,r11
   14002c9e6:	lea    rcx,[rbp+0xf]
   14002c9ea:	cmovae rcx,r11
   14002c9ee:	sub    r8,rdi
   14002c9f1:	add    rdx,r9
   14002c9f4:	add    rdx,rdi
   14002c9f7:	add    rcx,r9
   14002c9fa:	call   QWORD PTR [rip+0x1cbf0]        # 0x1400495f0
   14002ca00:	mov    rdx,QWORD PTR [rbp+0x1f]
   14002ca04:	sub    rdx,rdi
   14002ca07:	mov    QWORD PTR [rbp+0x1f],rdx
   14002ca0b:	lea    rax,[rbp+0xf]
   14002ca0f:	cmp    QWORD PTR [rbp+0x27],0x10
   14002ca14:	cmovae rax,QWORD PTR [rbp+0xf]
   14002ca19:	mov    BYTE PTR [rax+rdx*1],0x0
   14002ca1d:	mov    r10,QWORD PTR [rbp+0x27]
   14002ca21:	mov    rdx,QWORD PTR [rbp+0x1f]
   14002ca25:	mov    r11,QWORD PTR [rbp+0xf]
   14002ca29:	test   rdx,rdx
   14002ca2c:	je     0x14002ca6b
   14002ca2e:	jmp    0x14002c990
   14002ca33:	test   rdx,rdx
   14002ca36:	je     0x14002ca6b
   14002ca38:	lea    rax,[rbp+0xf]
   14002ca3c:	cmp    r10,0x10
   14002ca40:	cmovae rax,r11
   14002ca44:	cmp    BYTE PTR [rax+rdx*1-0x1],0x2e
   14002ca49:	jne    0x14002ca6b
   14002ca4b:	dec    rdx
   14002ca4e:	or     r8,0xffffffffffffffff
   14002ca52:	lea    rcx,[rbp+0xf]
   14002ca56:	call   0x140002dfc
   14002ca5b:	jmp    0x14002ca6b
   14002ca5d:	lea    rcx,[rip+0x23ecc]        # 0x140050930
   14002ca64:	call   QWORD PTR [rip+0x1cb46]        # 0x1400495b0
   14002ca6a:	int3   
   14002ca6b:	mov    QWORD PTR [rsi+0x18],0xf
   14002ca73:	mov    QWORD PTR [rsi+0x10],r12
   14002ca77:	mov    BYTE PTR [rsi],0x0
   14002ca7a:	lea    rax,[rbp+0xf]
   14002ca7e:	cmp    rsi,rax
   14002ca81:	je     0x14002caef
   14002ca83:	cmp    QWORD PTR [rsi+0x18],0x10
   14002ca88:	jb     0x14002ca92
   14002ca8a:	mov    rcx,QWORD PTR [rsi]
   14002ca8d:	call   0x14002b150
   14002ca92:	mov    QWORD PTR [rsi+0x18],0xf
   14002ca9a:	mov    QWORD PTR [rsi+0x10],r12
   14002ca9e:	mov    BYTE PTR [rsi],0x0
   14002caa1:	mov    rcx,QWORD PTR [rbp+0x27]
   14002caa5:	cmp    rcx,0x10
   14002caa9:	jae    0x14002cac5
   14002caab:	mov    r8,QWORD PTR [rbp+0x1f]
   14002caaf:	inc    r8
   14002cab2:	lea    rdx,[rbp+0xf]
   14002cab6:	mov    rcx,rsi
   14002cab9:	call   QWORD PTR [rip+0x1cb31]        # 0x1400495f0
   14002cabf:	mov    rcx,QWORD PTR [rbp+0x27]
   14002cac3:	jmp    0x14002cad0
   14002cac5:	mov    rax,QWORD PTR [rbp+0xf]
   14002cac9:	mov    QWORD PTR [rsi],rax
   14002cacc:	mov    QWORD PTR [rbp+0xf],r12
   14002cad0:	mov    rax,QWORD PTR [rbp+0x1f]
   14002cad4:	mov    QWORD PTR [rsi+0x10],rax
   14002cad8:	mov    QWORD PTR [rsi+0x18],rcx
   14002cadc:	mov    eax,0xf
   14002cae1:	mov    QWORD PTR [rbp+0x27],rax
   14002cae5:	mov    QWORD PTR [rbp+0x1f],r12
   14002cae9:	mov    BYTE PTR [rbp+0xf],0x0
   14002caed:	jmp    0x14002caf3
   14002caef:	mov    rax,QWORD PTR [rbp+0x27]
   14002caf3:	mov    DWORD PTR [rbp-0x19],0x1
   14002cafa:	cmp    rax,0x10
   14002cafe:	jb     0x14002cb09
   14002cb00:	mov    rcx,QWORD PTR [rbp+0xf]
   14002cb04:	call   0x14002b150
   14002cb09:	mov    QWORD PTR [rbp+0x27],0xf
   14002cb11:	mov    QWORD PTR [rbp+0x1f],r12
   14002cb15:	mov    BYTE PTR [rbp+0xf],0x0
   14002cb19:	mov    rcx,rbx
   14002cb1c:	call   QWORD PTR [rip+0x1c62e]        # 0x140049150
   14002cb22:	mov    rax,rsi
   14002cb25:	mov    rcx,QWORD PTR [rbp+0x37]
   14002cb29:	xor    rcx,rsp
   14002cb2c:	call   0x14002b100
   14002cb31:	lea    r11,[rsp+0xa0]
   14002cb39:	mov    rbx,QWORD PTR [r11+0x20]
   14002cb3d:	mov    rsi,QWORD PTR [r11+0x38]
   14002cb41:	mov    rsp,r11
   14002cb44:	pop    r12
   14002cb46:	pop    rdi
   14002cb47:	pop    rbp
   14002cb48:	ret    
   14002cb49:	int3   
   14002cb4a:	int3   
   14002cb4b:	int3   
   14002cb4c:	int3   
   14002cb4d:	int3   
   14002cb4e:	int3   
   14002cb4f:	int3   
   14002cb50:	rex.W jmp QWORD PTR [rip+0x1cd41]        # 0x140049898
   14002cb57:	int3   
   14002cb58:	int3   
   14002cb59:	int3   
   14002cb5a:	int3   
   14002cb5b:	int3   
   14002cb5c:	int3   
   14002cb5d:	int3   
   14002cb5e:	int3   
   14002cb5f:	int3   
   14002cb60:	rex push rbx
   14002cb62:	sub    rsp,0x20
   14002cb66:	mov    rbx,rcx
   14002cb69:	mov    rcx,QWORD PTR [rcx]
   14002cb6c:	mov    rcx,QWORD PTR [rcx]
   14002cb6f:	call   0x140041da0
   14002cb74:	mov    r11,QWORD PTR [rbx]
   14002cb77:	mov    QWORD PTR [r11],0x0
   14002cb7e:	add    rsp,0x20
   14002cb82:	pop    rbx
   14002cb83:	ret    
   14002cb84:	int3   
   14002cb85:	int3   
   14002cb86:	int3   
   14002cb87:	int3   
   14002cb88:	int3   
   14002cb89:	int3   
   14002cb8a:	int3   
   14002cb8b:	int3   
   14002cb8c:	int3   
   14002cb8d:	int3   
   14002cb8e:	int3   
   14002cb8f:	int3   
   14002cb90:	mov    rax,QWORD PTR [rcx+0x58]
   14002cb94:	mov    rdx,QWORD PTR [rax+0x10]
   14002cb98:	mov    al,0x1
   14002cb9a:	mov    QWORD PTR [rcx+0x58],rdx
   14002cb9e:	ret    
   14002cb9f:	int3   
   14002cba0:	mov    rdx,QWORD PTR [rcx+0x58]
   14002cba4:	movzx  eax,BYTE PTR [rdx+0x10]
   14002cba8:	mov    BYTE PTR [rcx+0x78],al
   14002cbab:	mov    rax,QWORD PTR [rdx+0x8]
   14002cbaf:	mov    QWORD PTR [rcx+0x58],rax
   14002cbb3:	mov    al,0x1
   14002cbb5:	ret    
   14002cbb6:	int3   
   14002cbb7:	int3   
   14002cbb8:	int3   
   14002cbb9:	int3   
   14002cbba:	int3   
   14002cbbb:	int3   
   14002cbbc:	int3   
   14002cbbd:	int3   
   14002cbbe:	int3   
   14002cbbf:	int3   
   14002cbc0:	mov    QWORD PTR [rcx+0x58],0x0
   14002cbc8:	xor    al,al
   14002cbca:	ret    
   14002cbcb:	int3   
   14002cbcc:	int3   
   14002cbcd:	int3   
   14002cbce:	int3   
   14002cbcf:	int3   
   14002cbd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cbd5:	push   rdi
   14002cbd6:	sub    rsp,0x20
   14002cbda:	movzx  ebx,dl
   14002cbdd:	mov    rdi,rcx
   14002cbe0:	test   r8d,0x3ff
   14002cbe7:	je     0x14002cc12
   14002cbe9:	mov    rax,QWORD PTR [rcx]
   14002cbec:	movzx  r9d,dl
   14002cbf0:	movzx  r10d,WORD PTR [rax+r9*2+0x204]
   14002cbf9:	and    r10d,r8d
   14002cbfc:	test   r10d,0x3ff
   14002cc03:	je     0x14002cc12
   14002cc05:	mov    al,0x1
   14002cc07:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cc0c:	add    rsp,0x20
   14002cc10:	pop    rdi
   14002cc11:	ret    
   14002cc12:	bt     r8d,0xa
   14002cc17:	jae    0x14002cc1e
   14002cc19:	cmp    bl,0x5f
   14002cc1c:	je     0x14002cc05
   14002cc1e:	bt     r8d,0xd
   14002cc23:	jae    0x14002cc39
   14002cc25:	cmp    bl,0xa
   14002cc28:	je     0x14002cc05
   14002cc2a:	cmp    bl,0xd
   14002cc2d:	je     0x14002cc05
   14002cc2f:	cmp    bl,0xc
   14002cc32:	je     0x14002cc05
   14002cc34:	cmp    bl,0xb
   14002cc37:	je     0x14002cc05
   14002cc39:	bt     r8d,0xc
   14002cc3e:	jae    0x14002cc67
   14002cc40:	mov    r8d,0x8
   14002cc46:	movzx  edx,bl
   14002cc49:	call   0x14002cbd0
   14002cc4e:	test   al,al
   14002cc50:	je     0x14002cc67
   14002cc52:	mov    r8d,0x2000
   14002cc58:	movzx  edx,bl
   14002cc5b:	mov    rcx,rdi
   14002cc5e:	call   0x14002cbd0
   14002cc63:	test   al,al
   14002cc65:	je     0x14002cc05
   14002cc67:	xor    al,al
   14002cc69:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cc6e:	add    rsp,0x20
   14002cc72:	pop    rdi
   14002cc73:	ret    
   14002cc74:	int3   
   14002cc75:	int3   
   14002cc76:	int3   
   14002cc77:	int3   
   14002cc78:	int3   
   14002cc79:	int3   
   14002cc7a:	int3   
   14002cc7b:	int3   
   14002cc7c:	int3   
   14002cc7d:	int3   
   14002cc7e:	int3   
   14002cc7f:	int3   
   14002cc80:	rex push rbx
   14002cc82:	sub    rsp,0x20
   14002cc86:	mov    rbx,rcx
   14002cc89:	call   QWORD PTR [rip+0x1c951]        # 0x1400495e0
   14002cc8f:	lea    r11,[rip+0x2119a]        # 0x14004de30
   14002cc96:	mov    QWORD PTR [rbx],r11
   14002cc99:	mov    rax,rbx
   14002cc9c:	add    rsp,0x20
   14002cca0:	pop    rbx
   14002cca1:	ret    
   14002cca2:	int3   
   14002cca3:	int3   
   14002cca4:	int3   
   14002cca5:	int3   
   14002cca6:	int3   
   14002cca7:	int3   
   14002cca8:	int3   
   14002cca9:	int3   
   14002ccaa:	int3   
   14002ccab:	int3   
   14002ccac:	int3   
   14002ccad:	int3   
   14002ccae:	int3   
   14002ccaf:	int3   
   14002ccb0:	rex push rbx
   14002ccb2:	sub    rsp,0x20
   14002ccb6:	mov    rbx,rcx
   14002ccb9:	mov    cl,0x1
   14002ccbb:	nop    DWORD PTR [rax+rax*1+0x0]
   14002ccc0:	mov    rax,QWORD PTR [rbx+0x58]
   14002ccc4:	cmp    QWORD PTR [rbx+0x60],rax
   14002ccc8:	je     0x14002ccd7
   14002ccca:	mov    rcx,rbx
   14002cccd:	call   QWORD PTR [rbx+0x48]
   14002ccd0:	movzx  ecx,al
   14002ccd3:	test   al,al
   14002ccd5:	jne    0x14002ccc0
   14002ccd7:	movzx  eax,cl
   14002ccda:	add    rsp,0x20
   14002ccde:	pop    rbx
   14002ccdf:	ret    
   14002cce0:	test   rdx,rdx
   14002cce3:	je     0x14002cd89
   14002cce9:	mov    QWORD PTR [rsp+0x18],rbx
   14002ccee:	push   rdi
   14002ccef:	sub    rsp,0x20
   14002ccf3:	mov    QWORD PTR [rsp+0x30],rbp
   14002ccf8:	mov    QWORD PTR [rsp+0x38],rsi
   14002ccfd:	mov    rbx,rdx
   14002cd00:	xor    esi,esi
   14002cd02:	mov    rdi,rcx
   14002cd05:	lea    rbp,[rip+0xfffffffffffd32f4]        # 0x140000000
   14002cd0c:	nop    DWORD PTR [rax+0x0]
   14002cd10:	mov    eax,DWORD PTR [rbx]
   14002cd12:	add    eax,0xfffffff0
   14002cd15:	cmp    eax,0xd
   14002cd18:	ja     0x14002cd55
   14002cd1a:	cdqe   
   14002cd1c:	mov    ecx,DWORD PTR [rbp+rax*4+0x2cd8c]
   14002cd23:	add    rcx,rbp
   14002cd26:	jmp    rcx
   14002cd28:	mov    BYTE PTR [rdi+0x30],0x1
   14002cd2c:	jmp    0x14002cd55
   14002cd2e:	mov    eax,DWORD PTR [rdi+0x1c]
   14002cd31:	mov    DWORD PTR [rbx+0x130],eax
   14002cd37:	inc    DWORD PTR [rdi+0x1c]
   14002cd3a:	lea    rcx,[rbx+0x18]
   14002cd3e:	xor    edx,edx
   14002cd40:	mov    r8d,0x100
   14002cd46:	call   0x14002b144
   14002cd4b:	mov    DWORD PTR [rbx+0x118],esi
   14002cd51:	add    QWORD PTR [rbx+0x10],rbx
   14002cd55:	mov    rax,QWORD PTR [rbx+0x8]
   14002cd59:	lea    rcx,[rbx+0x8]
   14002cd5d:	test   rax,rax
   14002cd60:	je     0x14002cd6a
   14002cd62:	add    rax,rbx
   14002cd65:	mov    QWORD PTR [rcx],rax
   14002cd68:	jmp    0x14002cd6d
   14002cd6a:	mov    QWORD PTR [rcx],rsi
   14002cd6d:	mov    rbx,QWORD PTR [rcx]
   14002cd70:	test   rbx,rbx
   14002cd73:	jne    0x14002cd10
   14002cd75:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cd7a:	mov    rbp,QWORD PTR [rsp+0x30]
   14002cd7f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002cd84:	add    rsp,0x20
   14002cd88:	pop    rdi
   14002cd89:	repz ret 
   14002cd8b:	nop
   14002cd8c:	push   rcx
   14002cd8d:	int    0x2
   14002cd8f:	add    BYTE PTR [rdx],bh
   14002cd91:	int    0x2
   14002cd93:	add    BYTE PTR [rsi],ch
   14002cd95:	int    0x2
   14002cd97:	add    BYTE PTR [rbp-0x33],dl
   14002cd9a:	add    al,BYTE PTR [rax]
   14002cd9c:	push   rbp
   14002cd9d:	int    0x2
   14002cd9f:	add    BYTE PTR [rbp-0x33],dl
   14002cda2:	add    al,BYTE PTR [rax]
   14002cda4:	cs int 0x2
   14002cda7:	add    BYTE PTR [rsi],ch
   14002cda9:	int    0x2
   14002cdab:	add    BYTE PTR [rsi],ch
   14002cdad:	int    0x2
   14002cdaf:	add    BYTE PTR [rsi],ch
   14002cdb1:	int    0x2
   14002cdb3:	add    BYTE PTR [rbp-0x33],dl
   14002cdb6:	add    al,BYTE PTR [rax]
   14002cdb8:	push   rbp
   14002cdb9:	int    0x2
   14002cdbb:	add    BYTE PTR [rbp-0x33],dl
   14002cdbe:	add    al,BYTE PTR [rax]
   14002cdc0:	sub    ch,cl
   14002cdc2:	add    al,BYTE PTR [rax]
   14002cdc4:	int3   
   14002cdc5:	int3   
   14002cdc6:	int3   
   14002cdc7:	int3   
   14002cdc8:	int3   
   14002cdc9:	int3   
   14002cdca:	int3   
   14002cdcb:	int3   
   14002cdcc:	int3   
   14002cdcd:	int3   
   14002cdce:	int3   
   14002cdcf:	int3   
   14002cdd0:	test   rdx,rdx
   14002cdd3:	je     0x14002ce07
   14002cdd5:	lea    r8,[rip+0xfffffffffffd3224]        # 0x140000000
   14002cddc:	nop    DWORD PTR [rax+0x0]
   14002cde0:	movsxd rax,DWORD PTR [rdx]
   14002cde3:	cmp    eax,0x15
   14002cde6:	ja     0x14002ce07
   14002cde8:	movzx  eax,BYTE PTR [r8+rax*1+0x2ce3c]
   14002cdf1:	mov    ecx,DWORD PTR [r8+rax*4+0x2ce24]
   14002cdf9:	add    rcx,r8
   14002cdfc:	jmp    rcx
   14002cdfe:	mov    rdx,QWORD PTR [rdx+0x8]
   14002ce02:	test   rdx,rdx
   14002ce05:	jne    0x14002cde0
   14002ce07:	xor    eax,eax
   14002ce09:	ret    
   14002ce0a:	mov    eax,0x2
   14002ce0f:	ret    
   14002ce10:	mov    eax,0x1
   14002ce15:	ret    
   14002ce16:	mov    eax,0x3
   14002ce1b:	ret    
   14002ce1c:	mov    eax,0x4
   14002ce21:	ret    
   14002ce22:	xchg   ax,ax
   14002ce24:	dec    ch
   14002ce26:	add    al,BYTE PTR [rax]
   14002ce28:	or     cl,dh
   14002ce2a:	add    al,BYTE PTR [rax]
   14002ce2c:	adc    dh,cl
   14002ce2e:	add    al,BYTE PTR [rax]
   14002ce30:	(bad)  
   14002ce31:	(bad)  
   14002ce32:	add    al,BYTE PTR [rax]
   14002ce34:	sbb    al,0xce
   14002ce36:	add    al,BYTE PTR [rax]
   14002ce38:	(bad)  
   14002ce39:	(bad)  
   14002ce3a:	add    al,BYTE PTR [rax]
   14002ce3c:	add    BYTE PTR [rax],al
   14002ce3e:	add    eax,0x5050501
   14002ce43:	add    eax,0x3050205
   14002ce48:	add    eax,0x5050505
   14002ce4d:	add    eax,0x4050505
   14002ce52:	int3   
   14002ce53:	int3   
   14002ce54:	int3   
   14002ce55:	int3   
   14002ce56:	int3   
   14002ce57:	int3   
   14002ce58:	int3   
   14002ce59:	int3   
   14002ce5a:	int3   
   14002ce5b:	int3   
   14002ce5c:	int3   
   14002ce5d:	int3   
   14002ce5e:	int3   
   14002ce5f:	int3   
   14002ce60:	mov    r9,rcx
   14002ce63:	lea    r10,[rip+0xfffffffffffd3196]        # 0x140000000
   14002ce6a:	nop    WORD PTR [rax+rax*1+0x0]
   14002ce70:	movsxd rax,DWORD PTR [rdx]
   14002ce73:	cmp    eax,0x19
   14002ce76:	ja     0x14002ced6
   14002ce78:	movzx  eax,BYTE PTR [r10+rax*1+0x2cee8]
   14002ce81:	mov    r8d,DWORD PTR [r10+rax*4+0x2ced8]
   14002ce89:	add    r8,r10
   14002ce8c:	jmp    r8
   14002ce8f:	mov    eax,DWORD PTR [rdx+0x10]
   14002ce92:	test   eax,eax
   14002ce94:	jns    0x14002cebd
   14002ce96:	cmp    eax,0xffffffff
   14002ce99:	je     0x14002ceaf
   14002ce9b:	cmp    eax,0xfffffffe
   14002ce9e:	je     0x14002ceaf
   14002cea0:	cmp    eax,0xfffffffd
   14002cea3:	jne    0x14002ced6
   14002cea5:	mov    rax,QWORD PTR [rdx+0x8]
   14002cea9:	mov    rdx,QWORD PTR [rax+0x8]
   14002cead:	jmp    0x14002cec1
   14002ceaf:	mov    rax,QWORD PTR [rdx+0x8]
   14002ceb3:	mov    rcx,QWORD PTR [rax+0x10]
   14002ceb7:	mov    rdx,QWORD PTR [rcx+0x8]
   14002cebb:	jmp    0x14002cec1
   14002cebd:	mov    rdx,QWORD PTR [rdx+0x8]
   14002cec1:	test   rdx,rdx
   14002cec4:	je     0x14002ced6
   14002cec6:	jmp    0x14002ce70
   14002cec8:	cmp    BYTE PTR [r9+0x20],0x0
   14002cecd:	jne    0x14002ced6
   14002cecf:	mov    BYTE PTR [rdx+0x134],0x1
   14002ced6:	repz ret 
   14002ced8:	(bad)  
   14002ced9:	(bad)  
   14002ceda:	add    al,BYTE PTR [rax]
   14002cedc:	mov    ebp,0xc80002ce
   14002cee1:	(bad)  
   14002cee2:	add    al,BYTE PTR [rax]
   14002cee4:	(bad)  
   14002cee5:	(bad)  
   14002cee6:	add    al,BYTE PTR [rax]
   14002cee8:	add    BYTE PTR [rcx],al
   14002ceea:	add    eax,DWORD PTR [rcx]
   14002ceec:	add    DWORD PTR [rbx],eax
   14002ceee:	add    eax,DWORD PTR [rcx]
   14002cef0:	add    DWORD PTR [rcx],eax
   14002cef2:	add    DWORD PTR [rcx],eax
   14002cef4:	add    DWORD PTR [rbx],eax
   14002cef6:	add    eax,DWORD PTR [rbx]
   14002cef8:	add    eax,DWORD PTR [rbx]
   14002cefa:	add    eax,DWORD PTR [rbx]
   14002cefc:	add    eax,DWORD PTR [rcx]
   14002cefe:	add    al,BYTE PTR [rdx]
   14002cf00:	add    al,BYTE PTR [rdx]
   14002cf02:	int3   
   14002cf03:	int3   
   14002cf04:	int3   
   14002cf05:	int3   
   14002cf06:	int3   
   14002cf07:	int3   
   14002cf08:	int3   
   14002cf09:	int3   
   14002cf0a:	int3   
   14002cf0b:	int3   
   14002cf0c:	int3   
   14002cf0d:	int3   
   14002cf0e:	int3   
   14002cf0f:	int3   
   14002cf10:	sub    rsp,0x28
   14002cf14:	mov    r8,QWORD PTR [rcx]
   14002cf17:	mov    rax,QWORD PTR [rcx+0x8]
   14002cf1b:	sub    rax,r8
   14002cf1e:	sar    rax,0x4
   14002cf22:	cmp    rax,rdx
   14002cf25:	ja     0x14002cf35
   14002cf27:	lea    rcx,[rip+0x20f3a]        # 0x14004de68
   14002cf2e:	call   QWORD PTR [rip+0x1c67c]        # 0x1400495b0
   14002cf34:	int3   
   14002cf35:	add    rdx,rdx
   14002cf38:	lea    rax,[r8+rdx*8]
   14002cf3c:	add    rsp,0x28
   14002cf40:	ret    
   14002cf41:	int3   
   14002cf42:	int3   
   14002cf43:	int3   
   14002cf44:	int3   
   14002cf45:	int3   
   14002cf46:	int3   
   14002cf47:	int3   
   14002cf48:	int3   
   14002cf49:	int3   
   14002cf4a:	int3   
   14002cf4b:	int3   
   14002cf4c:	int3   
   14002cf4d:	int3   
   14002cf4e:	int3   
   14002cf4f:	int3   
   14002cf50:	test   rdx,rdx
   14002cf53:	je     0x14002cfa8
   14002cf55:	push   rbx
   14002cf56:	sub    rsp,0x20
   14002cf5a:	cmp    BYTE PTR [rdx],0x0
   14002cf5d:	mov    rbx,rdx
   14002cf60:	jne    0x14002cf7d
   14002cf62:	movzx  edx,r8b
   14002cf66:	mov    rcx,rbx
   14002cf69:	mov    r8d,0x100
   14002cf6f:	call   0x14002b144
   14002cf74:	or     BYTE PTR [rbx],0x4
   14002cf77:	add    rsp,0x20
   14002cf7b:	pop    rbx
   14002cf7c:	ret    
   14002cf7d:	lea    rax,[rdx+0x1]
   14002cf81:	mov    ecx,0x80
   14002cf86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002cf90:	or     BYTE PTR [rax-0x1],r8b
   14002cf94:	or     BYTE PTR [rax],r8b
   14002cf97:	add    rax,0x2
   14002cf9b:	dec    rcx
   14002cf9e:	jne    0x14002cf90
   14002cfa0:	or     BYTE PTR [rbx],0x4
   14002cfa3:	add    rsp,0x20
   14002cfa7:	pop    rbx
   14002cfa8:	repz ret 
   14002cfaa:	int3   
   14002cfab:	int3   
   14002cfac:	int3   
   14002cfad:	int3   
   14002cfae:	int3   
   14002cfaf:	int3   
   14002cfb0:	mov    eax,DWORD PTR [rdx]
   14002cfb2:	mov    r8,rcx
   14002cfb5:	cmp    eax,0x12
   14002cfb8:	je     0x14002cfc7
   14002cfba:	cmp    eax,0x15
   14002cfbd:	jle    0x14002cfc4
   14002cfbf:	cmp    eax,0x19
   14002cfc2:	jle    0x14002cfc7
   14002cfc4:	xor    al,al
   14002cfc6:	ret    
   14002cfc7:	mov    eax,DWORD PTR [rdx+0x130]
   14002cfcd:	cmp    eax,0x40
   14002cfd0:	jbe    0x14002cfd5
   14002cfd2:	mov    al,0x1
   14002cfd4:	ret    
   14002cfd5:	mov    rcx,rax
   14002cfd8:	mov    rax,QWORD PTR [r8+0x28]
   14002cfdc:	bt     rax,rcx
   14002cfe0:	setb   al
   14002cfe3:	ret    
   14002cfe4:	int3   
   14002cfe5:	int3   
   14002cfe6:	int3   
   14002cfe7:	int3   
   14002cfe8:	int3   
   14002cfe9:	int3   
   14002cfea:	int3   
   14002cfeb:	int3   
   14002cfec:	int3   
   14002cfed:	int3   
   14002cfee:	int3   
   14002cfef:	int3   
   14002cff0:	xor    eax,eax
   14002cff2:	ret    
   14002cff3:	int3   
   14002cff4:	int3   
   14002cff5:	int3   
   14002cff6:	int3   
   14002cff7:	int3   
   14002cff8:	int3   
   14002cff9:	int3   
   14002cffa:	int3   
   14002cffb:	int3   
   14002cffc:	int3   
   14002cffd:	int3   
   14002cffe:	int3   
   14002cfff:	int3   
   14002d000:	mov    QWORD PTR [rsp+0x8],rbx
   14002d005:	push   rdi
   14002d006:	sub    rsp,0x20
   14002d00a:	mov    ebx,edx
   14002d00c:	mov    rdi,rcx
   14002d00f:	call   QWORD PTR [rip+0x1c883]        # 0x140049898
   14002d015:	test   bl,0x1
   14002d018:	je     0x14002d022
   14002d01a:	mov    rcx,rdi
   14002d01d:	call   0x14002b150
   14002d022:	mov    rax,rdi
   14002d025:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d02a:	add    rsp,0x20
   14002d02e:	pop    rdi
   14002d02f:	ret    
   14002d030:	mov    r8,QWORD PTR [rcx+0x10]
   14002d034:	mov    r9,rdx
   14002d037:	movabs rax,0x2aaaaaaaaaaaaaab
   14002d041:	sub    r8,QWORD PTR [rcx]
   14002d044:	imul   r8
   14002d047:	sar    rdx,0x2
   14002d04b:	mov    rax,rdx
   14002d04e:	shr    rax,0x3f
   14002d052:	add    rdx,rax
   14002d055:	movabs rax,0xaaaaaaaaaaaaaaa
   14002d05f:	mov    rcx,rdx
   14002d062:	shr    rcx,1
   14002d065:	sub    rax,rcx
   14002d068:	cmp    rax,rdx
   14002d06b:	jae    0x14002d07a
   14002d06d:	xor    edx,edx
   14002d06f:	cmp    rdx,r9
   14002d072:	cmovb  rdx,r9
   14002d076:	mov    rax,rdx
   14002d079:	ret    
   14002d07a:	add    rdx,rcx
   14002d07d:	cmp    rdx,r9
   14002d080:	cmovb  rdx,r9
   14002d084:	mov    rax,rdx
   14002d087:	ret    
   14002d088:	int3   
   14002d089:	int3   
   14002d08a:	int3   
   14002d08b:	int3   
   14002d08c:	int3   
   14002d08d:	int3   
   14002d08e:	int3   
   14002d08f:	int3   
   14002d090:	sub    rsp,0x48
   14002d094:	xor    eax,eax
   14002d096:	test   rdx,rdx
   14002d099:	je     0x14002d0f3
   14002d09b:	movabs rax,0xaaaaaaaaaaaaaaa
   14002d0a5:	cmp    rdx,rax
   14002d0a8:	ja     0x14002d0bc
   14002d0aa:	lea    rcx,[rdx+rdx*2]
   14002d0ae:	shl    rcx,0x3
   14002d0b2:	call   0x14002b1c2
   14002d0b7:	test   rax,rax
   14002d0ba:	jne    0x14002d0f3
   14002d0bc:	lea    rdx,[rsp+0x58]
   14002d0c1:	lea    rcx,[rsp+0x20]
   14002d0c6:	mov    QWORD PTR [rsp+0x58],0x0
   14002d0cf:	call   QWORD PTR [rip+0x1c7fb]        # 0x1400498d0
   14002d0d5:	lea    r11,[rip+0x1d0fc]        # 0x14004a1d8
   14002d0dc:	lea    rdx,[rip+0x36665]        # 0x140063748
   14002d0e3:	lea    rcx,[rsp+0x20]
   14002d0e8:	mov    QWORD PTR [rsp+0x20],r11
   14002d0ed:	call   0x14002b560
   14002d0f2:	int3   
   14002d0f3:	add    rsp,0x48
   14002d0f7:	ret    
   14002d0f8:	int3   
   14002d0f9:	int3   
   14002d0fa:	int3   
   14002d0fb:	int3   
   14002d0fc:	int3   
   14002d0fd:	int3   
   14002d0fe:	int3   
   14002d0ff:	int3   
   14002d100:	mov    rax,QWORD PTR [rcx+0x58]
   14002d104:	xor    r9d,r9d
   14002d107:	mov    rdx,rcx
   14002d10a:	mov    r10d,DWORD PTR [rax+0x10]
   14002d10e:	lea    r8,[rax+0x18]
   14002d112:	test   r10d,r10d
   14002d115:	je     0x14002d159
   14002d117:	nop    WORD PTR [rax+rax*1+0x0]
   14002d120:	mov    rax,QWORD PTR [rdx+0x28]
   14002d124:	cmp    rax,QWORD PTR [rdx+0x20]
   14002d128:	je     0x14002d168
   14002d12a:	cmp    BYTE PTR [rdx+0x78],0x0
   14002d12e:	movzx  ecx,BYTE PTR [rax]
   14002d131:	je     0x14002d145
   14002d133:	mov    rax,QWORD PTR [rdx+0x50]
   14002d137:	movzx  ecx,cl
   14002d13a:	mov    rax,QWORD PTR [rax]
   14002d13d:	movzx  ecx,BYTE PTR [rax+rcx*1+0x104]
   14002d145:	cmp    cl,BYTE PTR [r8]
   14002d148:	jne    0x14002d168
   14002d14a:	inc    QWORD PTR [rdx+0x28]
   14002d14e:	inc    r9d
   14002d151:	inc    r8
   14002d154:	cmp    r9d,r10d
   14002d157:	jb     0x14002d120
   14002d159:	mov    rax,QWORD PTR [rdx+0x58]
   14002d15d:	mov    rcx,QWORD PTR [rax+0x8]
   14002d161:	mov    al,0x1
   14002d163:	mov    QWORD PTR [rdx+0x58],rcx
   14002d167:	ret    
   14002d168:	xor    al,al
   14002d16a:	ret    
   14002d16b:	int3   
   14002d16c:	int3   
   14002d16d:	int3   
   14002d16e:	int3   
   14002d16f:	int3   
   14002d170:	mov    rax,QWORD PTR [rcx+0x28]
   14002d174:	mov    rdx,rcx
   14002d177:	cmp    rax,QWORD PTR [rcx+0x40]
   14002d17b:	jne    0x14002d18e
   14002d17d:	mov    ecx,DWORD PTR [rcx+0x60]
   14002d180:	bt     ecx,0x8
   14002d184:	jb     0x14002d197
   14002d186:	test   cl,0x1
   14002d189:	je     0x14002d1ba
   14002d18b:	xor    al,al
   14002d18d:	ret    
   14002d18e:	test   DWORD PTR [rcx+0x60],0x100000
   14002d195:	jne    0x14002d18b
   14002d197:	movzx  ecx,BYTE PTR [rax-0x1]
   14002d19b:	cmp    rax,QWORD PTR [rdx+0x20]
   14002d19f:	je     0x14002d1c9
   14002d1a1:	cmp    cl,0xa
   14002d1a4:	je     0x14002d1b0
   14002d1a6:	cmp    cl,0xd
   14002d1a9:	je     0x14002d1b5
   14002d1ab:	cmp    cl,0xc
   14002d1ae:	jne    0x14002d1d8
   14002d1b0:	cmp    cl,0xd
   14002d1b3:	jne    0x14002d1ba
   14002d1b5:	cmp    BYTE PTR [rax],0xa
   14002d1b8:	je     0x14002d1d8
   14002d1ba:	mov    rax,QWORD PTR [rdx+0x58]
   14002d1be:	mov    rcx,QWORD PTR [rax+0x8]
   14002d1c2:	mov    al,0x1
   14002d1c4:	mov    QWORD PTR [rdx+0x58],rcx
   14002d1c8:	ret    
   14002d1c9:	cmp    cl,0xa
   14002d1cc:	je     0x14002d1ba
   14002d1ce:	cmp    cl,0xd
   14002d1d1:	je     0x14002d1ba
   14002d1d3:	cmp    cl,0xc
   14002d1d6:	je     0x14002d1ba
   14002d1d8:	xor    al,al
   14002d1da:	ret    
   14002d1db:	int3   
   14002d1dc:	int3   
   14002d1dd:	int3   
   14002d1de:	int3   
   14002d1df:	int3   
   14002d1e0:	mov    rax,QWORD PTR [rcx+0x28]
   14002d1e4:	mov    rdx,rcx
   14002d1e7:	cmp    rax,QWORD PTR [rcx+0x20]
   14002d1eb:	je     0x14002d231
   14002d1ed:	mov    r8d,DWORD PTR [rcx+0x60]
   14002d1f1:	bt     r8d,0x14
   14002d1f6:	jb     0x14002d246
   14002d1f8:	movzx  ecx,BYTE PTR [rax]
   14002d1fb:	cmp    cl,0xa
   14002d1fe:	je     0x14002d20a
   14002d200:	cmp    cl,0xd
   14002d203:	je     0x14002d20a
   14002d205:	cmp    cl,0xc
   14002d208:	jne    0x14002d246
   14002d20a:	cmp    rax,QWORD PTR [rdx+0x40]
   14002d20e:	jne    0x14002d217
   14002d210:	bt     r8d,0x8
   14002d215:	jae    0x14002d222
   14002d217:	cmp    BYTE PTR [rax-0x1],0xd
   14002d21b:	jne    0x14002d222
   14002d21d:	cmp    cl,0xa
   14002d220:	je     0x14002d246
   14002d222:	mov    rax,QWORD PTR [rdx+0x58]
   14002d226:	mov    rcx,QWORD PTR [rax+0x8]
   14002d22a:	mov    al,0x1
   14002d22c:	mov    QWORD PTR [rdx+0x58],rcx
   14002d230:	ret    
   14002d231:	test   BYTE PTR [rcx+0x60],0x2
   14002d235:	jne    0x14002d246
   14002d237:	mov    rax,QWORD PTR [rcx+0x58]
   14002d23b:	mov    rcx,QWORD PTR [rax+0x8]
   14002d23f:	mov    al,0x1
   14002d241:	mov    QWORD PTR [rdx+0x58],rcx
   14002d245:	ret    
   14002d246:	xor    al,al
   14002d248:	ret    
   14002d249:	int3   
   14002d24a:	int3   
   14002d24b:	int3   
   14002d24c:	int3   
   14002d24d:	int3   
   14002d24e:	int3   
   14002d24f:	int3   
   14002d250:	mov    rax,QWORD PTR [rcx+0x28]
   14002d254:	mov    rdx,rcx
   14002d257:	cmp    rax,QWORD PTR [rcx+0x20]
   14002d25b:	jne    0x14002d260
   14002d25d:	xor    al,al
   14002d25f:	ret    
   14002d260:	movzx  r8d,BYTE PTR [rax]
   14002d264:	cmp    r8b,0xa
   14002d268:	je     0x14002d276
   14002d26a:	cmp    r8b,0xd
   14002d26e:	je     0x14002d276
   14002d270:	cmp    r8b,0xc
   14002d274:	jne    0x14002d286
   14002d276:	mov    rax,QWORD PTR [rcx+0x58]
   14002d27a:	movzx  ecx,BYTE PTR [rax+0x10]
   14002d27e:	test   BYTE PTR [rdx+0xb4],cl
   14002d284:	je     0x14002d25d
   14002d286:	test   r8b,r8b
   14002d289:	jne    0x14002d291
   14002d28b:	test   BYTE PTR [rdx+0x60],0x80
   14002d28f:	jne    0x14002d25d
   14002d291:	mov    rax,QWORD PTR [rdx+0x58]
   14002d295:	mov    rcx,QWORD PTR [rax+0x8]
   14002d299:	mov    al,0x1
   14002d29b:	mov    QWORD PTR [rdx+0x58],rcx
   14002d29f:	inc    QWORD PTR [rdx+0x28]
   14002d2a3:	ret    
   14002d2a4:	int3   
   14002d2a5:	int3   
   14002d2a6:	int3   
   14002d2a7:	int3   
   14002d2a8:	int3   
   14002d2a9:	int3   
   14002d2aa:	int3   
   14002d2ab:	int3   
   14002d2ac:	int3   
   14002d2ad:	int3   
   14002d2ae:	int3   
   14002d2af:	int3   
   14002d2b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d2b5:	mov    QWORD PTR [rsp+0x10],rsi
   14002d2ba:	push   rdi
   14002d2bb:	sub    rsp,0x20
   14002d2bf:	mov    rsi,QWORD PTR [rcx+0x28]
   14002d2c3:	mov    rbx,rcx
   14002d2c6:	cmp    rsi,QWORD PTR [rcx+0x20]
   14002d2ca:	je     0x14002d2e4
   14002d2cc:	mov    r8d,DWORD PTR [rcx+0xb0]
   14002d2d3:	movzx  edx,BYTE PTR [rsi]
   14002d2d6:	mov    rcx,QWORD PTR [rcx+0x50]
   14002d2da:	call   0x14002cbd0
   14002d2df:	movzx  edi,al
   14002d2e2:	jmp    0x14002d2ee
   14002d2e4:	mov    edi,DWORD PTR [rcx+0x60]
   14002d2e7:	shr    edi,0x5
   14002d2ea:	and    dil,0x1
   14002d2ee:	cmp    rsi,QWORD PTR [rbx+0x40]
   14002d2f2:	jne    0x14002d307
   14002d2f4:	mov    eax,DWORD PTR [rbx+0x60]
   14002d2f7:	bt     eax,0x8
   14002d2fb:	jb     0x14002d307
   14002d2fd:	test   al,0x10
   14002d2ff:	je     0x14002d329
   14002d301:	xor    dil,0x1
   14002d305:	jmp    0x14002d329
   14002d307:	dec    QWORD PTR [rbx+0x28]
   14002d30b:	mov    rax,QWORD PTR [rbx+0x28]
   14002d30f:	mov    r8d,DWORD PTR [rbx+0xb0]
   14002d316:	movzx  edx,BYTE PTR [rax]
   14002d319:	mov    rcx,QWORD PTR [rbx+0x50]
   14002d31d:	call   0x14002cbd0
   14002d322:	xor    dil,al
   14002d325:	inc    QWORD PTR [rbx+0x28]
   14002d329:	test   dil,dil
   14002d32c:	je     0x14002d34c
   14002d32e:	mov    rax,QWORD PTR [rbx+0x58]
   14002d332:	mov    rcx,QWORD PTR [rax+0x8]
   14002d336:	mov    al,0x1
   14002d338:	mov    QWORD PTR [rbx+0x58],rcx
   14002d33c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d341:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d346:	add    rsp,0x20
   14002d34a:	pop    rdi
   14002d34b:	ret    
   14002d34c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d351:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d356:	xor    al,al
   14002d358:	add    rsp,0x20
   14002d35c:	pop    rdi
   14002d35d:	ret    
   14002d35e:	int3   
   14002d35f:	int3   
   14002d360:	mov    QWORD PTR [rsp+0x10],rbx
   14002d365:	push   rdi
   14002d366:	sub    rsp,0x20
   14002d36a:	mov    rdi,QWORD PTR [rcx+0x28]
   14002d36e:	mov    rbx,rcx
   14002d371:	cmp    rdi,QWORD PTR [rcx+0x20]
   14002d375:	jne    0x14002d384
   14002d377:	xor    al,al
   14002d379:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d37e:	add    rsp,0x20
   14002d382:	pop    rdi
   14002d383:	ret    
   14002d384:	mov    r8d,DWORD PTR [rcx+0xb0]
   14002d38b:	movzx  edx,BYTE PTR [rdi]
   14002d38e:	mov    rcx,QWORD PTR [rcx+0x50]
   14002d392:	mov    QWORD PTR [rsp+0x30],rsi
   14002d397:	call   0x14002cbd0
   14002d39c:	movzx  esi,al
   14002d39f:	cmp    rdi,QWORD PTR [rbx+0x40]
   14002d3a3:	jne    0x14002d3ae
   14002d3a5:	test   DWORD PTR [rbx+0x60],0x100
   14002d3ac:	je     0x14002d3f0
   14002d3ae:	dec    QWORD PTR [rbx+0x28]
   14002d3b2:	mov    rax,QWORD PTR [rbx+0x28]
   14002d3b6:	mov    r8d,DWORD PTR [rbx+0xb0]
   14002d3bd:	movzx  edx,BYTE PTR [rax]
   14002d3c0:	mov    rcx,QWORD PTR [rbx+0x50]
   14002d3c4:	call   0x14002cbd0
   14002d3c9:	inc    QWORD PTR [rbx+0x28]
   14002d3cd:	cmp    al,sil
   14002d3d0:	jne    0x14002d3f0
   14002d3d2:	mov    rax,QWORD PTR [rbx+0x58]
   14002d3d6:	mov    rsi,QWORD PTR [rsp+0x30]
   14002d3db:	mov    rcx,QWORD PTR [rax+0x8]
   14002d3df:	mov    al,0x1
   14002d3e1:	mov    QWORD PTR [rbx+0x58],rcx
   14002d3e5:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d3ea:	add    rsp,0x20
   14002d3ee:	pop    rdi
   14002d3ef:	ret    
   14002d3f0:	mov    rsi,QWORD PTR [rsp+0x30]
   14002d3f5:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d3fa:	xor    al,al
   14002d3fc:	add    rsp,0x20
   14002d400:	pop    rdi
   14002d401:	ret    
   14002d402:	int3   
   14002d403:	int3   
   14002d404:	int3   
   14002d405:	int3   
   14002d406:	int3   
   14002d407:	int3   
   14002d408:	int3   
   14002d409:	int3   
   14002d40a:	int3   
   14002d40b:	int3   
   14002d40c:	int3   
   14002d40d:	int3   
   14002d40e:	int3   
   14002d40f:	int3   
   14002d410:	mov    QWORD PTR [rsp+0x8],rbx
   14002d415:	push   rdi
   14002d416:	sub    rsp,0x20
   14002d41a:	mov    rdi,QWORD PTR [rcx+0x28]
   14002d41e:	mov    rbx,rcx
   14002d421:	cmp    rdi,QWORD PTR [rcx+0x20]
   14002d425:	je     0x14002d451
   14002d427:	mov    r8d,DWORD PTR [rcx+0xb0]
   14002d42e:	movzx  edx,BYTE PTR [rdi]
   14002d431:	mov    rcx,QWORD PTR [rcx+0x50]
   14002d435:	call   0x14002cbd0
   14002d43a:	test   al,al
   14002d43c:	je     0x14002d451
   14002d43e:	cmp    rdi,QWORD PTR [rbx+0x40]
   14002d442:	jne    0x14002d45e
   14002d444:	mov    eax,DWORD PTR [rbx+0x60]
   14002d447:	bt     eax,0x8
   14002d44b:	jb     0x14002d45e
   14002d44d:	test   al,0x10
   14002d44f:	je     0x14002d483
   14002d451:	xor    al,al
   14002d453:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d458:	add    rsp,0x20
   14002d45c:	pop    rdi
   14002d45d:	ret    
   14002d45e:	mov    r8d,DWORD PTR [rbx+0xb0]
   14002d465:	movzx  edx,BYTE PTR [rdi-0x1]
   14002d469:	mov    rcx,QWORD PTR [rbx+0x50]
   14002d46d:	call   0x14002cbd0
   14002d472:	test   al,al
   14002d474:	je     0x14002d483
   14002d476:	xor    al,al
   14002d478:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d47d:	add    rsp,0x20
   14002d481:	pop    rdi
   14002d482:	ret    
   14002d483:	mov    rax,QWORD PTR [rbx+0x58]
   14002d487:	mov    rcx,QWORD PTR [rax+0x8]
   14002d48b:	mov    al,0x1
   14002d48d:	mov    QWORD PTR [rbx+0x58],rcx
   14002d491:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d496:	add    rsp,0x20
   14002d49a:	pop    rdi
   14002d49b:	ret    
   14002d49c:	int3   
   14002d49d:	int3   
   14002d49e:	int3   
   14002d49f:	int3   
   14002d4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d4a5:	push   rdi
   14002d4a6:	sub    rsp,0x20
   14002d4aa:	mov    rdi,QWORD PTR [rcx+0x28]
   14002d4ae:	mov    rbx,rcx
   14002d4b1:	cmp    rdi,QWORD PTR [rcx+0x40]
   14002d4b5:	jne    0x14002d4c0
   14002d4b7:	test   DWORD PTR [rcx+0x60],0x100
   14002d4be:	je     0x14002d4e4
   14002d4c0:	mov    r8d,DWORD PTR [rcx+0xb0]
   14002d4c7:	movzx  edx,BYTE PTR [rdi-0x1]
   14002d4cb:	mov    rcx,QWORD PTR [rcx+0x50]
   14002d4cf:	call   0x14002cbd0
   14002d4d4:	test   al,al
   14002d4d6:	je     0x14002d4e4
   14002d4d8:	cmp    rdi,QWORD PTR [rbx+0x20]
   14002d4dc:	jne    0x14002d4f1
   14002d4de:	test   BYTE PTR [rbx+0x60],0x20
   14002d4e2:	je     0x14002d515
   14002d4e4:	xor    al,al
   14002d4e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d4eb:	add    rsp,0x20
   14002d4ef:	pop    rdi
   14002d4f0:	ret    
   14002d4f1:	mov    r8d,DWORD PTR [rbx+0xb0]
   14002d4f8:	movzx  edx,BYTE PTR [rdi]
   14002d4fb:	mov    rcx,QWORD PTR [rbx+0x50]
   14002d4ff:	call   0x14002cbd0
   14002d504:	test   al,al
   14002d506:	je     0x14002d515
   14002d508:	xor    al,al
   14002d50a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d50f:	add    rsp,0x20
   14002d513:	pop    rdi
   14002d514:	ret    
   14002d515:	mov    rax,QWORD PTR [rbx+0x58]
   14002d519:	mov    rcx,QWORD PTR [rax+0x8]
   14002d51d:	mov    al,0x1
   14002d51f:	mov    QWORD PTR [rbx+0x58],rcx
   14002d523:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d528:	add    rsp,0x20
   14002d52c:	pop    rdi
   14002d52d:	ret    
   14002d52e:	int3   
   14002d52f:	int3   
   14002d530:	mov    rax,QWORD PTR [rcx+0x40]
   14002d534:	cmp    QWORD PTR [rcx+0x28],rax
   14002d538:	jne    0x14002d54f
   14002d53a:	test   BYTE PTR [rcx+0x60],0x4
   14002d53e:	jne    0x14002d54f
   14002d540:	mov    rax,QWORD PTR [rcx+0x58]
   14002d544:	mov    rdx,QWORD PTR [rax+0x8]
   14002d548:	mov    al,0x1
   14002d54a:	mov    QWORD PTR [rcx+0x58],rdx
   14002d54e:	ret    
   14002d54f:	xor    al,al
   14002d551:	ret    
   14002d552:	int3   
   14002d553:	int3   
   14002d554:	int3   
   14002d555:	int3   
   14002d556:	int3   
   14002d557:	int3   
   14002d558:	int3   
   14002d559:	int3   
   14002d55a:	int3   
   14002d55b:	int3   
   14002d55c:	int3   
   14002d55d:	int3   
   14002d55e:	int3   
   14002d55f:	int3   
   14002d560:	mov    rax,QWORD PTR [rcx+0x20]
   14002d564:	cmp    QWORD PTR [rcx+0x28],rax
   14002d568:	jne    0x14002d57f
   14002d56a:	test   BYTE PTR [rcx+0x60],0x8
   14002d56e:	jne    0x14002d57f
   14002d570:	mov    rax,QWORD PTR [rcx+0x58]
   14002d574:	mov    rdx,QWORD PTR [rax+0x8]
   14002d578:	mov    al,0x1
   14002d57a:	mov    QWORD PTR [rcx+0x58],rdx
   14002d57e:	ret    
   14002d57f:	xor    al,al
   14002d581:	ret    
   14002d582:	int3   
   14002d583:	int3   
   14002d584:	int3   
   14002d585:	int3   
   14002d586:	int3   
   14002d587:	int3   
   14002d588:	int3   
   14002d589:	int3   
   14002d58a:	int3   
   14002d58b:	int3   
   14002d58c:	int3   
   14002d58d:	int3   
   14002d58e:	int3   
   14002d58f:	int3   
   14002d590:	mov    rax,QWORD PTR [rcx+0x28]
   14002d594:	mov    rdx,rcx
   14002d597:	cmp    rax,QWORD PTR [rcx+0x20]
   14002d59b:	je     0x14002d5d9
   14002d59d:	cmp    BYTE PTR [rcx+0x78],0x0
   14002d5a1:	movzx  r8d,BYTE PTR [rax]
   14002d5a5:	je     0x14002d5bb
   14002d5a7:	mov    rax,QWORD PTR [rcx+0x50]
   14002d5ab:	movzx  ecx,r8b
   14002d5af:	mov    rax,QWORD PTR [rax]
   14002d5b2:	movzx  r8d,BYTE PTR [rax+rcx*1+0x104]
   14002d5bb:	mov    rcx,QWORD PTR [rdx+0x58]
   14002d5bf:	movzx  eax,r8b
   14002d5c3:	cmp    BYTE PTR [rax+rcx*1+0x10],0x0
   14002d5c8:	je     0x14002d5d9
   14002d5ca:	mov    rax,QWORD PTR [rcx+0x8]
   14002d5ce:	mov    QWORD PTR [rdx+0x58],rax
   14002d5d2:	inc    QWORD PTR [rdx+0x28]
   14002d5d6:	mov    al,0x1
   14002d5d8:	ret    
   14002d5d9:	xor    al,al
   14002d5db:	ret    
   14002d5dc:	int3   
   14002d5dd:	int3   
   14002d5de:	int3   
   14002d5df:	int3   
   14002d5e0:	mov    rax,QWORD PTR [rcx+0x20]
   14002d5e4:	mov    rdx,rcx
   14002d5e7:	cmp    QWORD PTR [rcx+0x28],rax
   14002d5eb:	jne    0x14002d5f0
   14002d5ed:	xor    al,al
   14002d5ef:	ret    
   14002d5f0:	inc    QWORD PTR [rcx+0x28]
   14002d5f4:	mov    rax,QWORD PTR [rcx+0x58]
   14002d5f8:	mov    rcx,QWORD PTR [rax+0x8]
   14002d5fc:	mov    al,0x1
   14002d5fe:	mov    QWORD PTR [rdx+0x58],rcx
   14002d602:	ret    
   14002d603:	int3   
   14002d604:	int3   
   14002d605:	int3   
   14002d606:	int3   
   14002d607:	int3   
   14002d608:	int3   
   14002d609:	int3   
   14002d60a:	int3   
   14002d60b:	int3   
   14002d60c:	int3   
   14002d60d:	int3   
   14002d60e:	int3   
   14002d60f:	int3   
   14002d610:	test   BYTE PTR [rcx+0x60],0x8
   14002d614:	mov    r8,rcx
   14002d617:	je     0x14002d61c
   14002d619:	xor    al,al
   14002d61b:	ret    
   14002d61c:	mov    rax,QWORD PTR [rcx+0x28]
   14002d620:	mov    r10,QWORD PTR [rcx+0x20]
   14002d624:	cmp    rax,r10
   14002d627:	je     0x14002d666
   14002d629:	movzx  r9d,BYTE PTR [rcx+0x78]
   14002d62e:	xchg   ax,ax
   14002d630:	movzx  edx,BYTE PTR [rax]
   14002d633:	test   r9b,r9b
   14002d636:	je     0x14002d64a
   14002d638:	mov    rcx,QWORD PTR [r8+0x50]
   14002d63c:	movzx  edx,dl
   14002d63f:	mov    rcx,QWORD PTR [rcx]
   14002d642:	movzx  edx,BYTE PTR [rcx+rdx*1+0x104]
   14002d64a:	cmp    dl,0xa
   14002d64d:	je     0x14002d659
   14002d64f:	cmp    dl,0xd
   14002d652:	je     0x14002d659
   14002d654:	cmp    dl,0xc
   14002d657:	jne    0x14002d661
   14002d659:	inc    rax
   14002d65c:	cmp    rax,r10
   14002d65f:	jne    0x14002d630
   14002d661:	cmp    rax,r10
   14002d664:	jne    0x14002d619
   14002d666:	mov    rax,QWORD PTR [r8+0x58]
   14002d66a:	mov    rcx,QWORD PTR [rax+0x8]
   14002d66e:	mov    al,0x1
   14002d670:	mov    QWORD PTR [r8+0x58],rcx
   14002d674:	ret    
   14002d675:	int3   
   14002d676:	int3   
   14002d677:	int3   
   14002d678:	int3   
   14002d679:	int3   
   14002d67a:	int3   
   14002d67b:	int3   
   14002d67c:	int3   
   14002d67d:	int3   
   14002d67e:	int3   
   14002d67f:	int3   
   14002d680:	mov    rax,QWORD PTR [rcx+0x38]
   14002d684:	cmp    QWORD PTR [rcx+0x28],rax
   14002d688:	jne    0x14002d699
   14002d68a:	mov    rax,QWORD PTR [rcx+0x58]
   14002d68e:	mov    rdx,QWORD PTR [rax+0x8]
   14002d692:	mov    al,0x1
   14002d694:	mov    QWORD PTR [rcx+0x58],rdx
   14002d698:	ret    
   14002d699:	xor    al,al
   14002d69b:	ret    
   14002d69c:	int3   
   14002d69d:	int3   
   14002d69e:	int3   
   14002d69f:	int3   
   14002d6a0:	add    QWORD PTR [rcx+0xe0],0x8
   14002d6a8:	mov    QWORD PTR [rcx+0x58],0x0
   14002d6b0:	xor    al,al
   14002d6b2:	ret    
   14002d6b3:	int3   
   14002d6b4:	int3   
   14002d6b5:	int3   
   14002d6b6:	int3   
   14002d6b7:	int3   
   14002d6b8:	int3   
   14002d6b9:	int3   
   14002d6ba:	int3   
   14002d6bb:	int3   
   14002d6bc:	int3   
   14002d6bd:	int3   
   14002d6be:	int3   
   14002d6bf:	int3   
   14002d6c0:	mov    r9,rcx
   14002d6c3:	mov    rcx,QWORD PTR [rcx+0xe0]
   14002d6ca:	mov    rax,QWORD PTR [rcx+0x8]
   14002d6ce:	mov    QWORD PTR [r9+0x58],rax
   14002d6d2:	mov    rax,QWORD PTR [rcx+0x10]
   14002d6d6:	mov    QWORD PTR [r9+0x28],rax
   14002d6da:	movzx  eax,BYTE PTR [rcx+0x18]
   14002d6de:	cmp    dl,al
   14002d6e0:	sete   r10b
   14002d6e4:	xor    r8d,r8d
   14002d6e7:	test   al,al
   14002d6e9:	je     0x14002d6f0
   14002d6eb:	movzx  eax,dl
   14002d6ee:	jmp    0x14002d6f8
   14002d6f0:	test   dl,dl
   14002d6f2:	mov    eax,r8d
   14002d6f5:	sete   al
   14002d6f8:	add    rcx,0x20
   14002d6fc:	test   r10b,r10b
   14002d6ff:	mov    BYTE PTR [r9+0xe8],al
   14002d706:	sete   al
   14002d709:	mov    QWORD PTR [r9+0xe0],rcx
   14002d710:	ret    
   14002d711:	int3   
   14002d712:	int3   
   14002d713:	int3   
   14002d714:	int3   
   14002d715:	int3   
   14002d716:	int3   
   14002d717:	int3   
   14002d718:	int3   
   14002d719:	int3   
   14002d71a:	int3   
   14002d71b:	int3   
   14002d71c:	int3   
   14002d71d:	int3   
   14002d71e:	int3   
   14002d71f:	int3   
   14002d720:	mov    r8,QWORD PTR [rcx+0xe0]
   14002d727:	test   dl,dl
   14002d729:	jne    0x14002d73b
   14002d72b:	mov    rax,QWORD PTR [r8+0x8]
   14002d72f:	mov    QWORD PTR [rcx+0x58],rax
   14002d733:	mov    rax,QWORD PTR [r8+0x10]
   14002d737:	mov    QWORD PTR [rcx+0x28],rax
   14002d73b:	lea    rax,[r8+0x18]
   14002d73f:	mov    QWORD PTR [rcx+0xe0],rax
   14002d746:	movzx  eax,dl
   14002d749:	ret    
   14002d74a:	int3   
   14002d74b:	int3   
   14002d74c:	int3   
   14002d74d:	int3   
   14002d74e:	int3   
   14002d74f:	int3   
   14002d750:	sub    rsp,0x28
   14002d754:	mov    rdx,QWORD PTR [rcx+0xe0]
   14002d75b:	mov    r8,rcx
   14002d75e:	mov    rcx,QWORD PTR [rcx+0xd8]
   14002d765:	mov    rax,QWORD PTR [rdx+0x8]
   14002d769:	mov    QWORD PTR [r8+0xd8],rax
   14002d770:	mov    rax,QWORD PTR [rdx+0x10]
   14002d774:	mov    QWORD PTR [r8+0xe0],rax
   14002d77b:	call   0x140041da0
   14002d780:	mov    al,0x1
   14002d782:	add    rsp,0x28
   14002d786:	ret    
   14002d787:	int3   
   14002d788:	int3   
   14002d789:	int3   
   14002d78a:	int3   
   14002d78b:	int3   
   14002d78c:	int3   
   14002d78d:	int3   
   14002d78e:	int3   
   14002d78f:	int3   
   14002d790:	mov    r8,QWORD PTR [rcx+0xe0]
   14002d797:	test   dl,dl
   14002d799:	jne    0x14002d7b6
   14002d79b:	mov    rax,QWORD PTR [r8+0x10]
   14002d79f:	mov    QWORD PTR [rcx+0x28],rax
   14002d7a3:	mov    rax,QWORD PTR [r8+0x8]
   14002d7a7:	mov    QWORD PTR [rcx+0x58],rax
   14002d7ab:	mov    rax,QWORD PTR [rcx+0x80]
   14002d7b2:	inc    QWORD PTR [rax+0x18]
   14002d7b6:	lea    rax,[r8+0x18]
   14002d7ba:	mov    QWORD PTR [rcx+0xe0],rax
   14002d7c1:	movzx  eax,dl
   14002d7c4:	ret    
   14002d7c5:	int3   
   14002d7c6:	int3   
   14002d7c7:	int3   
   14002d7c8:	int3   
   14002d7c9:	int3   
   14002d7ca:	int3   
   14002d7cb:	int3   
   14002d7cc:	int3   
   14002d7cd:	int3   
   14002d7ce:	int3   
   14002d7cf:	int3   
   14002d7d0:	mov    r9,rdx
   14002d7d3:	mov    rax,rcx
   14002d7d6:	cmp    rcx,rdx
   14002d7d9:	je     0x14002d808
   14002d7db:	sub    rax,r8
   14002d7de:	xchg   ax,ax
   14002d7e0:	mov    rdx,QWORD PTR [rax+r8*1]
   14002d7e4:	add    r8,0x18
   14002d7e8:	mov    QWORD PTR [r8-0x18],rdx
   14002d7ec:	mov    rcx,QWORD PTR [rax+r8*1-0x10]
   14002d7f1:	mov    QWORD PTR [r8-0x10],rcx
   14002d7f5:	movzx  ecx,BYTE PTR [rax+r8*1-0x8]
   14002d7fb:	mov    BYTE PTR [r8-0x8],cl
   14002d7ff:	lea    rcx,[rax+r8*1]
   14002d803:	cmp    rcx,r9
   14002d806:	jne    0x14002d7e0
   14002d808:	mov    rax,r8
   14002d80b:	ret    
   14002d80c:	int3   
   14002d80d:	int3   
   14002d80e:	int3   
   14002d80f:	int3   
   14002d810:	mov    rax,rdx
   14002d813:	mov    r9,rcx
   14002d816:	cmp    rcx,rdx
   14002d819:	je     0x14002d846
   14002d81b:	sub    rax,r8
   14002d81e:	xchg   ax,ax
   14002d820:	sub    r8,0x18
   14002d824:	lea    rdx,[rax+r8*1]
   14002d828:	mov    rcx,QWORD PTR [rdx]
   14002d82b:	mov    QWORD PTR [r8],rcx
   14002d82e:	mov    rcx,QWORD PTR [rax+r8*1+0x8]
   14002d833:	mov    QWORD PTR [r8+0x8],rcx
   14002d837:	movzx  ecx,BYTE PTR [rax+r8*1+0x10]
   14002d83d:	mov    BYTE PTR [r8+0x10],cl
   14002d841:	cmp    rdx,r9
   14002d844:	jne    0x14002d820
   14002d846:	mov    rax,r8
   14002d849:	ret    
   14002d84a:	int3   
   14002d84b:	int3   
   14002d84c:	int3   
   14002d84d:	int3   
   14002d84e:	int3   
   14002d84f:	int3   
   14002d850:	sub    rsp,0x48
   14002d854:	xor    eax,eax
   14002d856:	test   rdx,rdx
   14002d859:	je     0x14002d8b2
   14002d85b:	movabs rax,0x249249249249249
   14002d865:	cmp    rdx,rax
   14002d868:	ja     0x14002d87b
   14002d86a:	imul   rdx,rdx,0x70
   14002d86e:	mov    rcx,rdx
   14002d871:	call   0x14002b1c2
   14002d876:	test   rax,rax
   14002d879:	jne    0x14002d8b2
   14002d87b:	lea    rdx,[rsp+0x58]
   14002d880:	lea    rcx,[rsp+0x20]
   14002d885:	mov    QWORD PTR [rsp+0x58],0x0
   14002d88e:	call   QWORD PTR [rip+0x1c03c]        # 0x1400498d0
   14002d894:	lea    r11,[rip+0x1c93d]        # 0x14004a1d8
   14002d89b:	lea    rdx,[rip+0x35ea6]        # 0x140063748
   14002d8a2:	lea    rcx,[rsp+0x20]
   14002d8a7:	mov    QWORD PTR [rsp+0x20],r11
   14002d8ac:	call   0x14002b560
   14002d8b1:	int3   
   14002d8b2:	add    rsp,0x48
   14002d8b6:	ret    
   14002d8b7:	int3   
   14002d8b8:	int3   
   14002d8b9:	int3   
   14002d8ba:	int3   
   14002d8bb:	int3   
   14002d8bc:	int3   
   14002d8bd:	int3   
   14002d8be:	int3   
   14002d8bf:	int3   
   14002d8c0:	xor    r9d,r9d
   14002d8c3:	mov    r10,rcx
   14002d8c6:	cmp    rcx,rdx
   14002d8c9:	je     0x14002d8f7
   14002d8cb:	mov    r11d,0x9e3779b9
   14002d8d1:	movsx  rcx,BYTE PTR [r10]
   14002d8d5:	mov    r8,r9
   14002d8d8:	mov    rax,r9
   14002d8db:	shr    rax,0x2
   14002d8df:	shl    r8,0x6
   14002d8e3:	inc    r10
   14002d8e6:	add    rax,r8
   14002d8e9:	add    rax,r11
   14002d8ec:	add    rcx,rax
   14002d8ef:	xor    r9,rcx
   14002d8f2:	cmp    r10,rdx
   14002d8f5:	jne    0x14002d8d1
   14002d8f7:	movabs rax,0x200009c482fb3f8b
   14002d901:	mul    r9
   14002d904:	shr    rdx,0x1c
   14002d908:	imul   edx,edx,0x7fffd8ee
   14002d90e:	sub    r9d,edx
   14002d911:	lea    eax,[r9+0x2710]
   14002d918:	ret    
   14002d919:	int3   
   14002d91a:	int3   
   14002d91b:	int3   
   14002d91c:	int3   
   14002d91d:	int3   
   14002d91e:	int3   
   14002d91f:	int3   
   14002d920:	mov    rcx,QWORD PTR [rcx]
   14002d923:	jmp    0x14002b150
   14002d928:	int3   
   14002d929:	int3   
   14002d92a:	int3   
   14002d92b:	int3   
   14002d92c:	int3   
   14002d92d:	int3   
   14002d92e:	int3   
   14002d92f:	int3   
   14002d930:	sub    rsp,0x48
   14002d934:	xor    eax,eax
   14002d936:	test   rdx,rdx
   14002d939:	je     0x14002d992
   14002d93b:	movabs rax,0xfffffffffffffff
   14002d945:	cmp    rdx,rax
   14002d948:	ja     0x14002d95b
   14002d94a:	shl    rdx,0x4
   14002d94e:	mov    rcx,rdx
   14002d951:	call   0x14002b1c2
   14002d956:	test   rax,rax
   14002d959:	jne    0x14002d992
   14002d95b:	lea    rdx,[rsp+0x58]
   14002d960:	lea    rcx,[rsp+0x20]
   14002d965:	mov    QWORD PTR [rsp+0x58],0x0
   14002d96e:	call   QWORD PTR [rip+0x1bf5c]        # 0x1400498d0
   14002d974:	lea    r11,[rip+0x1c85d]        # 0x14004a1d8
   14002d97b:	lea    rdx,[rip+0x35dc6]        # 0x140063748
   14002d982:	lea    rcx,[rsp+0x20]
   14002d987:	mov    QWORD PTR [rsp+0x20],r11
   14002d98c:	call   0x14002b560
   14002d991:	int3   
   14002d992:	add    rsp,0x48
   14002d996:	ret    
   14002d997:	int3   
   14002d998:	int3   
   14002d999:	int3   
   14002d99a:	int3   
   14002d99b:	int3   
   14002d99c:	int3   
   14002d99d:	int3   
   14002d99e:	int3   
   14002d99f:	int3   
   14002d9a0:	sub    rsp,0x48
   14002d9a4:	xor    eax,eax
   14002d9a6:	test   rdx,rdx
   14002d9a9:	je     0x14002da03
   14002d9ab:	movabs rax,0x1fffffffffffffff
   14002d9b5:	cmp    rdx,rax
   14002d9b8:	ja     0x14002d9cc
   14002d9ba:	lea    rcx,[rdx*8+0x0]
   14002d9c2:	call   0x14002b1c2
   14002d9c7:	test   rax,rax
   14002d9ca:	jne    0x14002da03
   14002d9cc:	lea    rdx,[rsp+0x58]
   14002d9d1:	lea    rcx,[rsp+0x20]
   14002d9d6:	mov    QWORD PTR [rsp+0x58],0x0
   14002d9df:	call   QWORD PTR [rip+0x1beeb]        # 0x1400498d0
   14002d9e5:	lea    r11,[rip+0x1c7ec]        # 0x14004a1d8
   14002d9ec:	lea    rdx,[rip+0x35d55]        # 0x140063748
   14002d9f3:	lea    rcx,[rsp+0x20]
   14002d9f8:	mov    QWORD PTR [rsp+0x20],r11
   14002d9fd:	call   0x14002b560
   14002da02:	int3   
   14002da03:	add    rsp,0x48
   14002da07:	ret    
   14002da08:	int3   
   14002da09:	int3   
   14002da0a:	int3   
   14002da0b:	int3   
   14002da0c:	int3   
   14002da0d:	int3   
   14002da0e:	int3   
   14002da0f:	int3   
   14002da10:	mov    r8,QWORD PTR [rdx]
   14002da13:	mov    rax,QWORD PTR [r8+0x10]
   14002da17:	mov    QWORD PTR [rdx],rax
   14002da1a:	mov    rax,QWORD PTR [r8+0x10]
   14002da1e:	cmp    BYTE PTR [rax+0x29],0x0
   14002da22:	jne    0x14002da28
   14002da24:	mov    QWORD PTR [rax+0x8],rdx
   14002da28:	mov    rax,QWORD PTR [rdx+0x8]
   14002da2c:	mov    QWORD PTR [r8+0x8],rax
   14002da30:	mov    rax,QWORD PTR [rcx+0x8]
   14002da34:	cmp    rdx,QWORD PTR [rax+0x8]
   14002da38:	jne    0x14002da47
   14002da3a:	mov    QWORD PTR [rax+0x8],r8
   14002da3e:	mov    QWORD PTR [r8+0x10],rdx
   14002da42:	mov    QWORD PTR [rdx+0x8],r8
   14002da46:	ret    
   14002da47:	mov    rax,QWORD PTR [rdx+0x8]
   14002da4b:	cmp    rdx,QWORD PTR [rax+0x10]
   14002da4f:	jne    0x14002da5e
   14002da51:	mov    QWORD PTR [rax+0x10],r8
   14002da55:	mov    QWORD PTR [r8+0x10],rdx
   14002da59:	mov    QWORD PTR [rdx+0x8],r8
   14002da5d:	ret    
   14002da5e:	mov    QWORD PTR [rax],r8
   14002da61:	mov    QWORD PTR [r8+0x10],rdx
   14002da65:	mov    QWORD PTR [rdx+0x8],r8
   14002da69:	ret    
   14002da6a:	int3   
   14002da6b:	int3   
   14002da6c:	int3   
   14002da6d:	int3   
   14002da6e:	int3   
   14002da6f:	int3   
   14002da70:	mov    QWORD PTR [rsp+0x8],rbx
   14002da75:	mov    QWORD PTR [rsp+0x10],rbp
   14002da7a:	mov    QWORD PTR [rsp+0x18],rsi
   14002da7f:	push   rdi
   14002da80:	sub    rsp,0x20
   14002da84:	mov    r11,QWORD PTR [rcx]
   14002da87:	mov    rsi,r9
   14002da8a:	mov    r9,rdx
   14002da8d:	mov    rax,QWORD PTR [r11+0x168]
   14002da94:	mov    r10,QWORD PTR [r11+0x170]
   14002da9b:	mov    ebp,r8d
   14002da9e:	sub    r10,rax
   14002daa1:	mov    rdi,rcx
   14002daa4:	add    r10,0x7
   14002daa8:	and    r10,0xfffffffffffffff8
   14002daac:	add    r10,rax
   14002daaf:	mov    QWORD PTR [r11+0x170],r10
   14002dab6:	mov    rdx,QWORD PTR [rcx+0x10]
   14002daba:	test   rdx,rdx
   14002dabd:	je     0x14002dada
   14002dabf:	mov    rax,QWORD PTR [rcx]
   14002dac2:	mov    rcx,QWORD PTR [rax+0x168]
   14002dac9:	sub    rcx,rcx
   14002dacc:	add    rcx,QWORD PTR [rax+0x170]
   14002dad3:	sub    rcx,rdx
   14002dad6:	mov    QWORD PTR [rdx+0x8],rcx
   14002dada:	mov    rcx,QWORD PTR [rdi]
   14002dadd:	mov    rbx,QWORD PTR [rdi+0x10]
   14002dae1:	mov    r8,rsi
   14002dae4:	sub    rbx,QWORD PTR [rcx+0x168]
   14002daeb:	add    rcx,0x160
   14002daf2:	mov    rdx,r9
   14002daf5:	add    rbx,rsi
   14002daf8:	call   0x140041c90
   14002dafd:	mov    QWORD PTR [rax+0x8],rsi
   14002db01:	mov    rsi,QWORD PTR [rsp+0x40]
   14002db06:	mov    DWORD PTR [rax],ebp
   14002db08:	mov    rcx,QWORD PTR [rdi]
   14002db0b:	mov    rbp,QWORD PTR [rsp+0x38]
   14002db10:	mov    rdx,QWORD PTR [rcx+0x168]
   14002db17:	lea    rcx,[rbx+rdx*1]
   14002db1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002db20:	mov    QWORD PTR [rdi+0x10],rcx
   14002db24:	add    rsp,0x20
   14002db28:	pop    rdi
   14002db29:	ret    
   14002db2a:	int3   
   14002db2b:	int3   
   14002db2c:	int3   
   14002db2d:	int3   
   14002db2e:	int3   
   14002db2f:	int3   
   14002db30:	mov    QWORD PTR [rsp+0x10],rbx
   14002db35:	mov    QWORD PTR [rsp+0x18],rbp
   14002db3a:	push   rdi
   14002db3b:	sub    rsp,0x20
   14002db3f:	xor    edi,edi
   14002db41:	mov    rbx,rdx
   14002db44:	mov    rbp,rcx
   14002db47:	test   rdx,rdx
   14002db4a:	je     0x14002dc7a
   14002db50:	lea    r9,[rip+0xfffffffffffd24a9]        # 0x140000000
   14002db57:	nop    WORD PTR [rax+rax*1+0x0]
   14002db60:	movsxd rdx,DWORD PTR [rbx]
   14002db63:	cmp    edx,0x1a
   14002db66:	ja     0x14002dc6d
   14002db6c:	movzx  eax,BYTE PTR [r9+rdx*1+0x2dcf8]
   14002db75:	mov    ecx,DWORD PTR [r9+rax*4+0x2dcd4]
   14002db7d:	add    rcx,r9
   14002db80:	jmp    rcx
   14002db82:	mov    eax,DWORD PTR [rbx+0x10]
   14002db85:	cmp    eax,0xffffffff
   14002db88:	je     0x14002dba5
   14002db8a:	cmp    eax,0xfffffffe
   14002db8d:	je     0x14002dba5
   14002db8f:	cmp    eax,0xfffffffd
   14002db92:	jne    0x14002dc6d
   14002db98:	mov    rax,QWORD PTR [rbx+0x8]
   14002db9c:	mov    rbx,QWORD PTR [rax+0x8]
   14002dba0:	jmp    0x14002dc71
   14002dba5:	mov    rax,QWORD PTR [rbx+0x8]
   14002dba9:	mov    rcx,QWORD PTR [rax+0x10]
   14002dbad:	mov    rbx,QWORD PTR [rcx+0x8]
   14002dbb1:	jmp    0x14002dc71
   14002dbb6:	mov    eax,DWORD PTR [rbx+0x10]
   14002dbb9:	cmp    eax,0xffffffff
   14002dbbc:	je     0x14002dbc7
   14002dbbe:	cmp    eax,0xfffffffe
   14002dbc1:	jne    0x14002dc6d
   14002dbc7:	mov    eax,edi
   14002dbc9:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dbce:	mov    rbp,QWORD PTR [rsp+0x40]
   14002dbd3:	add    rsp,0x20
   14002dbd7:	pop    rdi
   14002dbd8:	ret    
   14002dbd9:	add    edi,DWORD PTR [rbx+0x10]
   14002dbdc:	jmp    0x14002dc6d
   14002dbe1:	cmp    edx,0x12
   14002dbe4:	jne    0x14002dc2d
   14002dbe6:	mov    r8,QWORD PTR [rbx+0x8]
   14002dbea:	mov    rax,QWORD PTR [rbx+0x10]
   14002dbee:	mov    rcx,QWORD PTR [r8+0x8]
   14002dbf2:	cmp    QWORD PTR [rcx+0x8],rax
   14002dbf6:	jne    0x14002dc2d
   14002dbf8:	mov    ecx,DWORD PTR [r8]
   14002dbfb:	sub    ecx,0x2
   14002dbfe:	je     0x14002dc28
   14002dc00:	sub    ecx,0x3
   14002dc03:	je     0x14002dc21
   14002dc05:	sub    ecx,0x9
   14002dc08:	je     0x14002dc13
   14002dc0a:	dec    ecx
   14002dc0c:	jne    0x14002dc2d
   14002dc0e:	lea    edx,[rcx+0x18]
   14002dc11:	jmp    0x14002dc2d
   14002dc13:	cmp    BYTE PTR [r8+0x25],0x0
   14002dc18:	je     0x14002dc2d
   14002dc1a:	mov    edx,0x19
   14002dc1f:	jmp    0x14002dc2d
   14002dc21:	mov    edx,0x16
   14002dc26:	jmp    0x14002dc2d
   14002dc28:	mov    edx,0x17
   14002dc2d:	mov    DWORD PTR [rbx],edx
   14002dc2f:	cmp    edx,0x16
   14002dc32:	je     0x14002dc4d
   14002dc34:	cmp    edx,0x17
   14002dc37:	je     0x14002dc4d
   14002dc39:	cmp    edx,0x18
   14002dc3c:	je     0x14002dc4d
   14002dc3e:	cmp    edx,0x19
   14002dc41:	jne    0x14002dc7a
   14002dc43:	mov    rax,QWORD PTR [rbx+0x8]
   14002dc47:	cmp    BYTE PTR [rax+0x25],0x0
   14002dc4b:	je     0x14002dc7a
   14002dc4d:	mov    rax,QWORD PTR [rbx+0x120]
   14002dc54:	cmp    QWORD PTR [rbx+0x128],rax
   14002dc5b:	jne    0x14002dc7a
   14002dc5d:	add    edi,eax
   14002dc5f:	mov    rbx,QWORD PTR [rbx+0x10]
   14002dc63:	jmp    0x14002dc71
   14002dc65:	cmp    BYTE PTR [rbx+0x25],0x0
   14002dc69:	je     0x14002dc7a
   14002dc6b:	inc    edi
   14002dc6d:	mov    rbx,QWORD PTR [rbx+0x8]
   14002dc71:	test   rbx,rbx
   14002dc74:	jne    0x14002db60
   14002dc7a:	or     eax,0xffffffff
   14002dc7d:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dc82:	mov    rbp,QWORD PTR [rsp+0x40]
   14002dc87:	add    rsp,0x20
   14002dc8b:	pop    rdi
   14002dc8c:	ret    
   14002dc8d:	mov    rdx,QWORD PTR [rbx+0x8]
   14002dc91:	mov    rcx,rbp
   14002dc94:	mov    QWORD PTR [rsp+0x30],rsi
   14002dc99:	call   0x14002db30
   14002dc9e:	mov    rdx,QWORD PTR [rbx+0x10]
   14002dca2:	mov    rcx,rbp
   14002dca5:	mov    esi,eax
   14002dca7:	call   0x14002db30
   14002dcac:	test   esi,esi
   14002dcae:	js     0x14002dcb9
   14002dcb0:	cmp    esi,eax
   14002dcb2:	jne    0x14002dcb9
   14002dcb4:	lea    eax,[rsi+rdi*1]
   14002dcb7:	jmp    0x14002dcbc
   14002dcb9:	or     eax,0xffffffff
   14002dcbc:	mov    rsi,QWORD PTR [rsp+0x30]
   14002dcc1:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dcc6:	mov    rbp,QWORD PTR [rsp+0x40]
   14002dccb:	add    rsp,0x20
   14002dccf:	pop    rdi
   14002dcd0:	ret    
   14002dcd1:	nop    DWORD PTR [rax]
   14002dcd4:	(bad)  
   14002dcd5:	fild   DWORD PTR [rdx]
   14002dcd7:	add    BYTE PTR [rsi-0x26fffd25],dh
   14002dcdd:	fild   DWORD PTR [rdx]
   14002dcdf:	add    BYTE PTR [rbx-0x24],ch
   14002dce2:	add    al,BYTE PTR [rax]
   14002dce4:	loope  0x14002dcc1
   14002dce6:	add    al,BYTE PTR [rax]
   14002dce8:	fadd   QWORD PTR gs:[rdx]
   14002dceb:	add    BYTE PTR [rdi-0x24],bl
   14002dcee:	add    al,BYTE PTR [rax]
   14002dcf0:	(bad)  
   14002dcf1:	fadd   QWORD PTR [rdx]
   14002dcf3:	add    BYTE PTR [rbp-0x24],ch
   14002dcf6:	add    al,BYTE PTR [rax]
   14002dcf8:	add    BYTE PTR [rcx],al
   14002dcfa:	add    cl,BYTE PTR [rax]
   14002dcfc:	or     BYTE PTR [rbx],al
   14002dcfe:	or     BYTE PTR [rax],cl
   14002dd00:	or     BYTE PTR [rax],cl
   14002dd02:	or     BYTE PTR [rax],cl
   14002dd04:	or     BYTE PTR [rax*1+0x4070603],al
   14002dd0b:	add    al,0x8
   14002dd0d:	or     BYTE PTR [rsp+rax*1],al
   14002dd10:	add    al,0x4
   14002dd12:	add    al,0xcc
   14002dd14:	int3   
   14002dd15:	int3   
   14002dd16:	int3   
   14002dd17:	int3   
   14002dd18:	int3   
   14002dd19:	int3   
   14002dd1a:	int3   
   14002dd1b:	int3   
   14002dd1c:	int3   
   14002dd1d:	int3   
   14002dd1e:	int3   
   14002dd1f:	int3   
   14002dd20:	rex push rbx
   14002dd22:	sub    rsp,0x20
   14002dd26:	mov    rbx,QWORD PTR [rcx+0x8]
   14002dd2a:	test   rbx,rbx
   14002dd2d:	je     0x14002dd57
   14002dd2f:	lock dec DWORD PTR [rbx+0x8]
   14002dd33:	mov    QWORD PTR [rsp+0x30],rdi
   14002dd38:	jne    0x14002dd52
   14002dd3a:	mov    rax,QWORD PTR [rbx]
   14002dd3d:	mov    rcx,rbx
   14002dd40:	call   QWORD PTR [rax+0x8]
   14002dd43:	lock dec DWORD PTR [rbx+0xc]
   14002dd47:	jne    0x14002dd52
   14002dd49:	mov    rax,QWORD PTR [rbx]
   14002dd4c:	mov    rcx,rbx
   14002dd4f:	call   QWORD PTR [rax+0x10]
   14002dd52:	mov    rdi,QWORD PTR [rsp+0x30]
   14002dd57:	add    rsp,0x20
   14002dd5b:	pop    rbx
   14002dd5c:	ret    
   14002dd5d:	int3   
   14002dd5e:	int3   
   14002dd5f:	int3   
   14002dd60:	mov    rcx,QWORD PTR [rcx+0x8]
   14002dd64:	jmp    0x14002b150
   14002dd69:	int3   
   14002dd6a:	int3   
   14002dd6b:	int3   
   14002dd6c:	int3   
   14002dd6d:	int3   
   14002dd6e:	int3   
   14002dd6f:	int3   
   14002dd70:	sub    rsp,0x48
   14002dd74:	xor    eax,eax
   14002dd76:	test   rdx,rdx
   14002dd79:	je     0x14002ddcf
   14002dd7b:	movabs rax,0x7fffffffffffffff
   14002dd85:	cmp    rdx,rax
   14002dd88:	ja     0x14002dd98
   14002dd8a:	lea    rcx,[rdx+rdx*1]
   14002dd8e:	call   0x14002b1c2
   14002dd93:	test   rax,rax
   14002dd96:	jne    0x14002ddcf
   14002dd98:	lea    rdx,[rsp+0x58]
   14002dd9d:	lea    rcx,[rsp+0x20]
   14002dda2:	mov    QWORD PTR [rsp+0x58],0x0
   14002ddab:	call   QWORD PTR [rip+0x1bb1f]        # 0x1400498d0
   14002ddb1:	lea    r11,[rip+0x1c420]        # 0x14004a1d8
   14002ddb8:	lea    rdx,[rip+0x35989]        # 0x140063748
   14002ddbf:	lea    rcx,[rsp+0x20]
   14002ddc4:	mov    QWORD PTR [rsp+0x20],r11
   14002ddc9:	call   0x14002b560
   14002ddce:	int3   
   14002ddcf:	add    rsp,0x48
   14002ddd3:	ret    
   14002ddd4:	int3   
   14002ddd5:	int3   
   14002ddd6:	int3   
   14002ddd7:	int3   
   14002ddd8:	int3   
   14002ddd9:	int3   
   14002ddda:	int3   
   14002dddb:	int3   
   14002dddc:	int3   
   14002dddd:	int3   
   14002ddde:	int3   
   14002dddf:	int3   
   14002dde0:	mov    r8,QWORD PTR [rdx+0x10]
   14002dde4:	mov    rax,QWORD PTR [r8]
   14002dde7:	mov    QWORD PTR [rdx+0x10],rax
   14002ddeb:	mov    rax,QWORD PTR [r8]
   14002ddee:	cmp    BYTE PTR [rax+0x49],0x0
   14002ddf2:	jne    0x14002ddf8
   14002ddf4:	mov    QWORD PTR [rax+0x8],rdx
   14002ddf8:	mov    rax,QWORD PTR [rdx+0x8]
   14002ddfc:	mov    QWORD PTR [r8+0x8],rax
   14002de00:	mov    rax,QWORD PTR [rcx+0x8]
   14002de04:	cmp    rdx,QWORD PTR [rax+0x8]
   14002de08:	jne    0x14002de16
   14002de0a:	mov    QWORD PTR [rax+0x8],r8
   14002de0e:	mov    QWORD PTR [r8],rdx
   14002de11:	mov    QWORD PTR [rdx+0x8],r8
   14002de15:	ret    
   14002de16:	mov    rax,QWORD PTR [rdx+0x8]
   14002de1a:	cmp    rdx,QWORD PTR [rax]
   14002de1d:	jne    0x14002de2a
   14002de1f:	mov    QWORD PTR [rax],r8
   14002de22:	mov    QWORD PTR [r8],rdx
   14002de25:	mov    QWORD PTR [rdx+0x8],r8
   14002de29:	ret    
   14002de2a:	mov    QWORD PTR [rax+0x10],r8
   14002de2e:	mov    QWORD PTR [r8],rdx
   14002de31:	mov    QWORD PTR [rdx+0x8],r8
   14002de35:	ret    
   14002de36:	int3   
   14002de37:	int3   
   14002de38:	int3   
   14002de39:	int3   
   14002de3a:	int3   
   14002de3b:	int3   
   14002de3c:	int3   
   14002de3d:	int3   
   14002de3e:	int3   
   14002de3f:	int3   
   14002de40:	mov    r8,QWORD PTR [rdx]
   14002de43:	mov    rax,QWORD PTR [r8+0x10]
   14002de47:	mov    QWORD PTR [rdx],rax
   14002de4a:	mov    rax,QWORD PTR [r8+0x10]
   14002de4e:	cmp    BYTE PTR [rax+0x49],0x0
   14002de52:	jne    0x14002de58
   14002de54:	mov    QWORD PTR [rax+0x8],rdx
   14002de58:	mov    rax,QWORD PTR [rdx+0x8]
   14002de5c:	mov    QWORD PTR [r8+0x8],rax
   14002de60:	mov    rax,QWORD PTR [rcx+0x8]
   14002de64:	cmp    rdx,QWORD PTR [rax+0x8]
   14002de68:	jne    0x14002de77
   14002de6a:	mov    QWORD PTR [rax+0x8],r8
   14002de6e:	mov    QWORD PTR [r8+0x10],rdx
   14002de72:	mov    QWORD PTR [rdx+0x8],r8
   14002de76:	ret    
   14002de77:	mov    rax,QWORD PTR [rdx+0x8]
   14002de7b:	cmp    rdx,QWORD PTR [rax+0x10]
   14002de7f:	jne    0x14002de8e
   14002de81:	mov    QWORD PTR [rax+0x10],r8
   14002de85:	mov    QWORD PTR [r8+0x10],rdx
   14002de89:	mov    QWORD PTR [rdx+0x8],r8
   14002de8d:	ret    
   14002de8e:	mov    QWORD PTR [rax],r8
   14002de91:	mov    QWORD PTR [r8+0x10],rdx
   14002de95:	mov    QWORD PTR [rdx+0x8],r8
   14002de99:	ret    
   14002de9a:	int3   
   14002de9b:	int3   
   14002de9c:	int3   
   14002de9d:	int3   
   14002de9e:	int3   
   14002de9f:	int3   
   14002dea0:	rex push rbx
   14002dea2:	sub    rsp,0x40
   14002dea6:	mov    rbx,rcx
   14002dea9:	mov    ecx,0x30
   14002deae:	call   0x14002b1c2
   14002deb3:	test   rax,rax
   14002deb6:	je     0x14002dedb
   14002deb8:	mov    rdx,QWORD PTR [rbx+0x8]
   14002debc:	mov    QWORD PTR [rax],rdx
   14002debf:	mov    rdx,QWORD PTR [rbx+0x8]
   14002dec3:	mov    QWORD PTR [rax+0x8],rdx
   14002dec7:	mov    rcx,QWORD PTR [rbx+0x8]
   14002decb:	mov    WORD PTR [rax+0x28],0x0
   14002ded1:	mov    QWORD PTR [rax+0x10],rcx
   14002ded5:	add    rsp,0x40
   14002ded9:	pop    rbx
   14002deda:	ret    
   14002dedb:	lea    rdx,[rsp+0x58]
   14002dee0:	lea    rcx,[rsp+0x20]
   14002dee5:	mov    QWORD PTR [rsp+0x58],0x0
   14002deee:	call   QWORD PTR [rip+0x1b9dc]        # 0x1400498d0
   14002def4:	lea    r11,[rip+0x1c2dd]        # 0x14004a1d8
   14002defb:	lea    rdx,[rip+0x35846]        # 0x140063748
   14002df02:	lea    rcx,[rsp+0x20]
   14002df07:	mov    QWORD PTR [rsp+0x20],r11
   14002df0c:	call   0x14002b560
   14002df11:	int3   
   14002df12:	int3   
   14002df13:	int3   
   14002df14:	int3   
   14002df15:	int3   
   14002df16:	int3   
   14002df17:	int3   
   14002df18:	int3   
   14002df19:	int3   
   14002df1a:	int3   
   14002df1b:	int3   
   14002df1c:	int3   
   14002df1d:	int3   
   14002df1e:	int3   
   14002df1f:	int3   
   14002df20:	rex push rbx
   14002df22:	sub    rsp,0x40
   14002df26:	mov    rbx,rcx
   14002df29:	mov    ecx,0x50
   14002df2e:	call   0x14002b1c2
   14002df33:	test   rax,rax
   14002df36:	je     0x14002df5b
   14002df38:	mov    rdx,QWORD PTR [rbx+0x8]
   14002df3c:	mov    QWORD PTR [rax],rdx
   14002df3f:	mov    rdx,QWORD PTR [rbx+0x8]
   14002df43:	mov    QWORD PTR [rax+0x8],rdx
   14002df47:	mov    rcx,QWORD PTR [rbx+0x8]
   14002df4b:	mov    WORD PTR [rax+0x48],0x0
   14002df51:	mov    QWORD PTR [rax+0x10],rcx
   14002df55:	add    rsp,0x40
   14002df59:	pop    rbx
   14002df5a:	ret    
   14002df5b:	lea    rdx,[rsp+0x58]
   14002df60:	lea    rcx,[rsp+0x20]
   14002df65:	mov    QWORD PTR [rsp+0x58],0x0
   14002df6e:	call   QWORD PTR [rip+0x1b95c]        # 0x1400498d0
   14002df74:	lea    r11,[rip+0x1c25d]        # 0x14004a1d8
   14002df7b:	lea    rdx,[rip+0x357c6]        # 0x140063748
   14002df82:	lea    rcx,[rsp+0x20]
   14002df87:	mov    QWORD PTR [rsp+0x20],r11
   14002df8c:	call   0x14002b560
   14002df91:	int3   
   14002df92:	int3   
   14002df93:	int3   
   14002df94:	int3   
   14002df95:	int3   
   14002df96:	int3   
   14002df97:	int3   
   14002df98:	int3   
   14002df99:	int3   
   14002df9a:	int3   
   14002df9b:	int3   
   14002df9c:	int3   
   14002df9d:	int3   
   14002df9e:	int3   
   14002df9f:	int3   
   14002dfa0:	mov    rax,QWORD PTR [rcx]
   14002dfa3:	mov    DWORD PTR [rsp+0x8],0x0
   14002dfab:	mov    QWORD PTR [rdx],rax
   14002dfae:	mov    rax,QWORD PTR [rcx+0x8]
   14002dfb2:	mov    QWORD PTR [rdx+0x8],rax
   14002dfb6:	test   rax,rax
   14002dfb9:	je     0x14002dfbf
   14002dfbb:	lock inc DWORD PTR [rax+0x8]
   14002dfbf:	mov    rax,rdx
   14002dfc2:	ret    
   14002dfc3:	int3   
   14002dfc4:	int3   
   14002dfc5:	int3   
   14002dfc6:	int3   
   14002dfc7:	int3   
   14002dfc8:	int3   
   14002dfc9:	int3   
   14002dfca:	int3   
   14002dfcb:	int3   
   14002dfcc:	int3   
   14002dfcd:	int3   
   14002dfce:	int3   
   14002dfcf:	int3   
   14002dfd0:	mov    rdx,QWORD PTR [rcx+0x8]
   14002dfd4:	movabs rax,0x2aaaaaaaaaaaaaab
   14002dfde:	sub    rdx,QWORD PTR [rcx]
   14002dfe1:	imul   rdx
   14002dfe4:	sar    rdx,0x2
   14002dfe8:	mov    rax,rdx
   14002dfeb:	shr    rax,0x3f
   14002dfef:	add    rdx,rax
   14002dff2:	cmp    rdx,0x2
   14002dff6:	jae    0x14002dffb
   14002dff8:	xor    eax,eax
   14002dffa:	ret    
   14002dffb:	lea    rax,[rdx-0x2]
   14002dfff:	ret    
   14002e000:	mov    QWORD PTR [rsp+0x8],rbx
   14002e005:	mov    rax,QWORD PTR [rcx]
   14002e008:	mov    QWORD PTR [rsp+0x10],rdx
   14002e00d:	mov    r9,rcx
   14002e010:	mov    QWORD PTR [rax+0x20],rdx
   14002e014:	mov    rdx,QWORD PTR [rcx]
   14002e017:	mov    rax,QWORD PTR [rsp+0x10]
   14002e01c:	cmp    QWORD PTR [rdx+0x18],rax
   14002e020:	movabs rbx,0x2aaaaaaaaaaaaaab
   14002e02a:	mov    r11d,0x3
   14002e030:	setne  al
   14002e033:	mov    BYTE PTR [rdx+0x28],al
   14002e036:	mov    rdx,QWORD PTR [rcx]
   14002e039:	mov    rax,QWORD PTR [rsp+0x10]
   14002e03e:	mov    QWORD PTR [rdx+0x30],rax
   14002e042:	mov    r10,QWORD PTR [rcx]
   14002e045:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e049:	sub    rcx,r10
   14002e04c:	mov    rax,rbx
   14002e04f:	imul   rcx
   14002e052:	sar    rdx,0x2
   14002e056:	mov    rax,rdx
   14002e059:	shr    rax,0x3f
   14002e05d:	add    rdx,rax
   14002e060:	cmp    r11,rdx
   14002e063:	jae    0x14002e0b4
   14002e065:	mov    r8d,0x48
   14002e06b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002e070:	mov    rcx,QWORD PTR [r10+0x8]
   14002e074:	inc    r11
   14002e077:	add    r8,0x18
   14002e07b:	mov    QWORD PTR [r8+r10*1-0x10],rcx
   14002e080:	mov    rax,QWORD PTR [r9]
   14002e083:	mov    QWORD PTR [r8+rax*1-0x18],rcx
   14002e088:	mov    rax,QWORD PTR [r9]
   14002e08b:	mov    BYTE PTR [r8+rax*1-0x8],0x0
   14002e091:	mov    r10,QWORD PTR [r9]
   14002e094:	mov    rcx,QWORD PTR [r9+0x8]
   14002e098:	sub    rcx,r10
   14002e09b:	mov    rax,rbx
   14002e09e:	imul   rcx
   14002e0a1:	sar    rdx,0x2
   14002e0a5:	mov    rax,rdx
   14002e0a8:	shr    rax,0x3f
   14002e0ac:	add    rdx,rax
   14002e0af:	cmp    r11,rdx
   14002e0b2:	jb     0x14002e070
   14002e0b4:	mov    rbx,QWORD PTR [rsp+0x8]
   14002e0b9:	ret    
   14002e0ba:	int3   
   14002e0bb:	int3   
   14002e0bc:	int3   
   14002e0bd:	int3   
   14002e0be:	int3   
   14002e0bf:	int3   
   14002e0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002e0c5:	push   rdi
   14002e0c6:	sub    rsp,0x20
   14002e0ca:	xor    eax,eax
   14002e0cc:	mov    rdi,rdx
   14002e0cf:	mov    rbx,rcx
   14002e0d2:	mov    QWORD PTR [rcx],rax
   14002e0d5:	mov    QWORD PTR [rcx+0x8],rax
   14002e0d9:	mov    QWORD PTR [rcx+0x10],rax
   14002e0dd:	test   rdx,rdx
   14002e0e0:	je     0x14002e11d
   14002e0e2:	movabs rax,0xaaaaaaaaaaaaaaa
   14002e0ec:	cmp    rdx,rax
   14002e0ef:	jbe    0x14002e0ff
   14002e0f1:	lea    rcx,[rip+0x22860]        # 0x140050958
   14002e0f8:	call   QWORD PTR [rip+0x1b49a]        # 0x140049598
   14002e0fe:	int3   
   14002e0ff:	add    rcx,0x18
   14002e103:	call   0x14002d090
   14002e108:	lea    rcx,[rdi+rdi*2]
   14002e10c:	mov    QWORD PTR [rbx],rax
   14002e10f:	mov    QWORD PTR [rbx+0x8],rax
   14002e113:	lea    rax,[rax+rcx*8]
   14002e117:	mov    QWORD PTR [rbx+0x10],rax
   14002e11b:	mov    al,0x1
   14002e11d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e122:	add    rsp,0x20
   14002e126:	pop    rdi
   14002e127:	ret    
   14002e128:	int3   
   14002e129:	int3   
   14002e12a:	int3   
   14002e12b:	int3   
   14002e12c:	int3   
   14002e12d:	int3   
   14002e12e:	int3   
   14002e12f:	int3   
   14002e130:	mov    r8,QWORD PTR [rcx+0x20]
   14002e134:	mov    rax,QWORD PTR [rcx+0x48]
   14002e138:	mov    edx,0x1
   14002e13d:	sub    r8,QWORD PTR [rcx+0x18]
   14002e141:	mov    r9,QWORD PTR [rax]
   14002e144:	cmove  r8,rdx
   14002e148:	test   r9,r9
   14002e14b:	je     0x14002e151
   14002e14d:	mov    r9,QWORD PTR [r9+0x40]
   14002e151:	test   r9,r9
   14002e154:	movabs rax,0x7fffffffffffffff
   14002e15e:	cmove  r9,rdx
   14002e162:	cqo    
   14002e164:	idiv   r8
   14002e167:	imul   r9,r9
   14002e16b:	mov    r10,rax
   14002e16e:	cmp    rax,r9
   14002e171:	jge    0x14002e17d
   14002e173:	mov    eax,0x5f5e100
   14002e178:	mov    QWORD PTR [rcx+0x70],rax
   14002e17c:	ret    
   14002e17d:	imul   r9,r8
   14002e181:	movabs rdx,0x7ffffffffffe795f
   14002e18b:	cmp    r9,rdx
   14002e18e:	jg     0x14002e173
   14002e190:	lea    rax,[r9+0x186a0]
   14002e197:	mov    QWORD PTR [rcx+0x70],rax
   14002e19b:	cmp    r10,r8
   14002e19e:	jl     0x14002e173
   14002e1a0:	imul   r8,r8
   14002e1a4:	mov    eax,0x5f5e100
   14002e1a9:	cmp    r8,rdx
   14002e1ac:	jg     0x14002e1c7
   14002e1ae:	add    r8,0x186a0
   14002e1b5:	cmp    r8,rax
   14002e1b8:	cmovg  r8,rax
   14002e1bc:	mov    rax,QWORD PTR [rcx+0x70]
   14002e1c0:	cmp    r8,rax
   14002e1c3:	cmovg  rax,r8
   14002e1c7:	mov    QWORD PTR [rcx+0x70],rax
   14002e1cb:	ret    
   14002e1cc:	int3   
   14002e1cd:	int3   
   14002e1ce:	int3   
   14002e1cf:	int3   
   14002e1d0:	mov    rax,QWORD PTR [rcx+0x28]
   14002e1d4:	mov    rdx,QWORD PTR [rcx+0x58]
   14002e1d8:	mov    r8,rcx
   14002e1db:	movsxd rcx,DWORD PTR [rdx+0x10]
   14002e1df:	sub    rax,QWORD PTR [r8+0x40]
   14002e1e3:	cmp    rax,rcx
   14002e1e6:	jge    0x14002e1eb
   14002e1e8:	xor    al,al
   14002e1ea:	ret    
   14002e1eb:	neg    ecx
   14002e1ed:	movsxd rax,ecx
   14002e1f0:	add    QWORD PTR [r8+0x28],rax
   14002e1f4:	mov    rax,QWORD PTR [r8+0x58]
   14002e1f8:	mov    rcx,QWORD PTR [rax+0x8]
   14002e1fc:	mov    al,0x1
   14002e1fe:	mov    QWORD PTR [r8+0x58],rcx
   14002e202:	ret    
   14002e203:	int3   
   14002e204:	int3   
   14002e205:	int3   
   14002e206:	int3   
   14002e207:	int3   
   14002e208:	int3   
   14002e209:	int3   
   14002e20a:	int3   
   14002e20b:	int3   
   14002e20c:	int3   
   14002e20d:	int3   
   14002e20e:	int3   
   14002e20f:	int3   
   14002e210:	mov    QWORD PTR [rsp+0x8],rbx
   14002e215:	push   rdi
   14002e216:	sub    rsp,0x20
   14002e21a:	mov    rbx,QWORD PTR [rcx+0xe0]
   14002e221:	mov    rdi,rcx
   14002e224:	test   dl,dl
   14002e226:	jne    0x14002e2ed
   14002e22c:	movsxd rax,DWORD PTR [rbx+0x8]
   14002e230:	mov    r8,QWORD PTR [rdi+0x10]
   14002e234:	test   eax,eax
   14002e236:	mov    rcx,rax
   14002e239:	mov    rax,QWORD PTR [rbx+0x10]
   14002e23d:	sete   r9b
   14002e241:	test   rcx,rcx
   14002e244:	jne    0x14002e258
   14002e246:	test   r9b,r9b
   14002e249:	jne    0x14002e258
   14002e24b:	mov    rdx,rax
   14002e24e:	mov    rcx,r8
   14002e251:	call   0x14002e000
   14002e256:	jmp    0x14002e281
   14002e258:	lea    rdx,[rcx+rcx*2+0x6]
   14002e25d:	mov    rcx,QWORD PTR [r8]
   14002e260:	mov    QWORD PTR [rcx+rdx*8],rax
   14002e264:	test   r9b,r9b
   14002e267:	je     0x14002e281
   14002e269:	mov    rcx,QWORD PTR [r8]
   14002e26c:	mov    QWORD PTR [rcx+0x20],rax
   14002e270:	mov    rcx,QWORD PTR [r8]
   14002e273:	mov    rax,QWORD PTR [rcx+0x20]
   14002e277:	cmp    QWORD PTR [rcx+0x18],rax
   14002e27b:	setne  al
   14002e27e:	mov    BYTE PTR [rcx+0x28],al
   14002e281:	movsxd rax,DWORD PTR [rbx+0x8]
   14002e285:	movzx  r11d,BYTE PTR [rbx+0x20]
   14002e28a:	mov    r8,QWORD PTR [rdi+0x10]
   14002e28e:	test   eax,eax
   14002e290:	mov    r9,rax
   14002e293:	mov    rax,QWORD PTR [rbx+0x18]
   14002e297:	sete   r10b
   14002e29b:	test   r9,r9
   14002e29e:	je     0x14002e2a4
   14002e2a0:	mov    DWORD PTR [r8+0x50],r9d
   14002e2a4:	mov    rcx,QWORD PTR [r8]
   14002e2a7:	add    r9,0x2
   14002e2ab:	lea    rdx,[r9+r9*2]
   14002e2af:	mov    QWORD PTR [rcx+rdx*8+0x8],rax
   14002e2b4:	mov    rcx,QWORD PTR [r8]
   14002e2b7:	mov    BYTE PTR [rcx+rdx*8+0x10],r11b
   14002e2bc:	cmp    r9,0x2
   14002e2c0:	jne    0x14002e2ed
   14002e2c2:	test   r10b,r10b
   14002e2c5:	jne    0x14002e2ed
   14002e2c7:	mov    rcx,QWORD PTR [r8]
   14002e2ca:	mov    QWORD PTR [rcx],rax
   14002e2cd:	mov    rdx,QWORD PTR [r8]
   14002e2d0:	mov    rcx,QWORD PTR [rdx+0x8]
   14002e2d4:	cmp    QWORD PTR [rdx],rcx
   14002e2d7:	setne  cl
   14002e2da:	mov    BYTE PTR [rdx+0x10],cl
   14002e2dd:	mov    QWORD PTR [r8+0x28],rax
   14002e2e1:	mov    QWORD PTR [r8+0x30],rax
   14002e2e5:	mov    BYTE PTR [r8+0x38],r10b
   14002e2e9:	mov    BYTE PTR [r8+0x54],r10b
   14002e2ed:	lea    rax,[rbx+0x28]
   14002e2f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e2f6:	mov    QWORD PTR [rdi+0xe0],rax
   14002e2fd:	mov    al,0x1
   14002e2ff:	add    rsp,0x20
   14002e303:	pop    rdi
   14002e304:	ret    
   14002e305:	int3   
   14002e306:	int3   
   14002e307:	int3   
   14002e308:	int3   
   14002e309:	int3   
   14002e30a:	int3   
   14002e30b:	int3   
   14002e30c:	int3   
   14002e30d:	int3   
   14002e30e:	int3   
   14002e30f:	int3   
   14002e310:	mov    r10,QWORD PTR [rcx+0xe0]
   14002e317:	mov    r8,rcx
   14002e31a:	test   dl,dl
   14002e31c:	je     0x14002e32c
   14002e31e:	lea    rax,[r10+0x20]
   14002e322:	mov    QWORD PTR [rcx+0xe0],rax
   14002e329:	mov    al,0x1
   14002e32b:	ret    
   14002e32c:	mov    r9,QWORD PTR [r10+0x10]
   14002e330:	mov    rdx,QWORD PTR [r10+0x8]
   14002e334:	sub    rdx,QWORD PTR [r9+0x120]
   14002e33b:	test   DWORD PTR [rcx+0x60],0x2000
   14002e342:	je     0x14002e352
   14002e344:	mov    rax,QWORD PTR [rcx+0x20]
   14002e348:	cmp    QWORD PTR [rcx+0x28],rax
   14002e34c:	jne    0x14002e352
   14002e34e:	mov    BYTE PTR [rcx+0x79],0x1
   14002e352:	mov    rax,QWORD PTR [r10+0x18]
   14002e356:	mov    QWORD PTR [rcx+0x28],rax
   14002e35a:	nop    WORD PTR [rax+rax*1+0x0]
   14002e360:	dec    QWORD PTR [r8+0x28]
   14002e364:	inc    QWORD PTR [r8+0x68]
   14002e368:	dec    rdx
   14002e36b:	mov    rax,QWORD PTR [r8+0x28]
   14002e36f:	je     0x14002e39e
   14002e371:	movzx  ecx,BYTE PTR [rax]
   14002e374:	test   BYTE PTR [rcx+r9*1+0x18],0x2
   14002e37a:	je     0x14002e360
   14002e37c:	mov    rax,QWORD PTR [r9+0x120]
   14002e383:	lea    rcx,[rdx+rax*1]
   14002e387:	mov    QWORD PTR [r10+0x8],rcx
   14002e38b:	mov    rax,QWORD PTR [r8+0x28]
   14002e38f:	mov    QWORD PTR [r10+0x18],rax
   14002e393:	mov    rax,QWORD PTR [r9+0x10]
   14002e397:	mov    QWORD PTR [r8+0x58],rax
   14002e39b:	xor    al,al
   14002e39d:	ret    
   14002e39e:	add    QWORD PTR [r8+0xe0],0x20
   14002e3a6:	movzx  ecx,BYTE PTR [rax]
   14002e3a9:	test   BYTE PTR [rcx+r9*1+0x18],0x2
   14002e3af:	je     0x14002e329
   14002e3b5:	mov    rax,QWORD PTR [r9+0x10]
   14002e3b9:	mov    QWORD PTR [r8+0x58],rax
   14002e3bd:	xor    al,al
   14002e3bf:	ret    
   14002e3c0:	mov    r10,QWORD PTR [rcx+0xe0]
   14002e3c7:	mov    r8,rcx
   14002e3ca:	test   dl,dl
   14002e3cc:	je     0x14002e3dc
   14002e3ce:	lea    rax,[r10+0x20]
   14002e3d2:	mov    QWORD PTR [rcx+0xe0],rax
   14002e3d9:	mov    al,0x1
   14002e3db:	ret    
   14002e3dc:	mov    r9,QWORD PTR [r10+0x10]
   14002e3e0:	mov    r11,QWORD PTR [r10+0x8]
   14002e3e4:	mov    rax,QWORD PTR [r9+0x8]
   14002e3e8:	mov    QWORD PTR [rcx+0x58],rax
   14002e3ec:	mov    rax,QWORD PTR [r10+0x18]
   14002e3f0:	mov    QWORD PTR [rcx+0x28],rax
   14002e3f4:	mov    rcx,QWORD PTR [rcx+0x20]
   14002e3f8:	cmp    rax,rcx
   14002e3fb:	je     0x14002e488
   14002e401:	mov    rax,QWORD PTR [r8+0x28]
   14002e405:	cmp    rax,rcx
   14002e408:	je     0x14002e4c9
   14002e40e:	movzx  edx,BYTE PTR [rax]
   14002e411:	cmp    dl,0xa
   14002e414:	je     0x14002e420
   14002e416:	cmp    dl,0xd
   14002e419:	je     0x14002e420
   14002e41b:	cmp    dl,0xc
   14002e41e:	jne    0x14002e435
   14002e420:	mov    rcx,QWORD PTR [r8+0x58]
   14002e424:	movzx  eax,BYTE PTR [r8+0xb4]
   14002e42c:	test   BYTE PTR [rcx+0x10],al
   14002e42f:	je     0x14002e4c9
   14002e435:	test   dl,dl
   14002e437:	jne    0x14002e444
   14002e439:	test   BYTE PTR [r8+0x60],0x80
   14002e43e:	jne    0x14002e4c9
   14002e444:	mov    rax,QWORD PTR [r8+0x58]
   14002e448:	inc    r11
   14002e44b:	mov    rcx,QWORD PTR [rax+0x8]
   14002e44f:	mov    QWORD PTR [r8+0x58],rcx
   14002e453:	inc    QWORD PTR [r8+0x28]
   14002e457:	inc    QWORD PTR [r8+0x68]
   14002e45b:	mov    rax,QWORD PTR [r9+0x8]
   14002e45f:	mov    QWORD PTR [r8+0x58],rax
   14002e463:	cmp    r11,QWORD PTR [r9+0x128]
   14002e46a:	jae    0x14002e488
   14002e46c:	mov    rax,QWORD PTR [r8+0x28]
   14002e470:	mov    rcx,QWORD PTR [r8+0x20]
   14002e474:	cmp    rax,rcx
   14002e477:	je     0x14002e488
   14002e479:	movzx  eax,BYTE PTR [rax]
   14002e47c:	test   BYTE PTR [rax+r9*1+0x18],0x2
   14002e482:	je     0x14002e401
   14002e488:	mov    rcx,QWORD PTR [r8+0x20]
   14002e48c:	cmp    QWORD PTR [r8+0x28],rcx
   14002e490:	jne    0x14002e4d4
   14002e492:	add    QWORD PTR [r8+0xe0],0x20
   14002e49a:	test   DWORD PTR [r8+0x60],0x2000
   14002e4a2:	je     0x14002e4b8
   14002e4a4:	mov    rax,QWORD PTR [r8+0x28]
   14002e4a8:	cmp    rax,rcx
   14002e4ab:	jne    0x14002e4b8
   14002e4ad:	cmp    rax,QWORD PTR [r8+0x38]
   14002e4b1:	je     0x14002e4b8
   14002e4b3:	mov    BYTE PTR [r8+0x79],0x1
   14002e4b8:	mov    eax,DWORD PTR [r9+0x118]
   14002e4bf:	and    eax,0x2
   14002e4c2:	test   al,al
   14002e4c4:	jne    0x14002e503
   14002e4c6:	mov    al,0x1
   14002e4c8:	ret    
   14002e4c9:	add    QWORD PTR [r8+0xe0],0x20
   14002e4d1:	mov    al,0x1
   14002e4d3:	ret    
   14002e4d4:	cmp    r11,QWORD PTR [r9+0x128]
   14002e4db:	jne    0x14002e4f7
   14002e4dd:	add    QWORD PTR [r8+0xe0],0x20
   14002e4e5:	mov    rax,QWORD PTR [r8+0x28]
   14002e4e9:	movzx  ecx,BYTE PTR [rax]
   14002e4ec:	test   BYTE PTR [rcx+r9*1+0x18],0x2
   14002e4f2:	jne    0x14002e503
   14002e4f4:	mov    al,0x1
   14002e4f6:	ret    
   14002e4f7:	mov    QWORD PTR [r10+0x8],r11
   14002e4fb:	mov    rax,QWORD PTR [r8+0x28]
   14002e4ff:	mov    QWORD PTR [r10+0x18],rax
   14002e503:	mov    rax,QWORD PTR [r9+0x10]
   14002e507:	mov    QWORD PTR [r8+0x58],rax
   14002e50b:	xor    al,al
   14002e50d:	ret    
   14002e50e:	int3   
   14002e50f:	int3   
   14002e510:	mov    r9,QWORD PTR [rcx+0xe0]
   14002e517:	mov    r8,rcx
   14002e51a:	test   dl,dl
   14002e51c:	je     0x14002e52c
   14002e51e:	lea    rax,[r9+0x20]
   14002e522:	mov    QWORD PTR [rcx+0xe0],rax
   14002e529:	mov    al,0x1
   14002e52b:	ret    
   14002e52c:	mov    rax,QWORD PTR [r9+0x18]
   14002e530:	mov    rdx,QWORD PTR [r9+0x10]
   14002e534:	mov    rcx,QWORD PTR [r9+0x8]
   14002e538:	mov    QWORD PTR [r8+0x28],rax
   14002e53c:	cmp    rax,QWORD PTR [r8+0x20]
   14002e540:	je     0x14002e56a
   14002e542:	inc    QWORD PTR [r8+0x28]
   14002e546:	inc    QWORD PTR [r8+0x68]
   14002e54a:	inc    rcx
   14002e54d:	cmp    rcx,QWORD PTR [rdx+0x128]
   14002e554:	jae    0x14002e56a
   14002e556:	mov    rax,QWORD PTR [r8+0x28]
   14002e55a:	cmp    rax,QWORD PTR [r8+0x20]
   14002e55e:	je     0x14002e56a
   14002e560:	movzx  eax,BYTE PTR [rax]
   14002e563:	test   BYTE PTR [rax+rdx*1+0x18],0x2
   14002e568:	je     0x14002e542
   14002e56a:	mov    r10,QWORD PTR [r8+0x20]
   14002e56e:	cmp    QWORD PTR [r8+0x28],r10
   14002e572:	jne    0x14002e5aa
   14002e574:	add    QWORD PTR [r8+0xe0],0x20
   14002e57c:	test   DWORD PTR [r8+0x60],0x2000
   14002e584:	je     0x14002e59a
   14002e586:	mov    rax,QWORD PTR [r8+0x28]
   14002e58a:	cmp    rax,r10
   14002e58d:	jne    0x14002e59a
   14002e58f:	cmp    rax,QWORD PTR [r8+0x38]
   14002e593:	je     0x14002e59a
   14002e595:	mov    BYTE PTR [r8+0x79],0x1
   14002e59a:	mov    eax,DWORD PTR [rdx+0x118]
   14002e5a0:	and    eax,0x2
   14002e5a3:	test   al,al
   14002e5a5:	jne    0x14002e5d8
   14002e5a7:	mov    al,0x1
   14002e5a9:	ret    
   14002e5aa:	cmp    rcx,QWORD PTR [rdx+0x128]
   14002e5b1:	jne    0x14002e5cc
   14002e5b3:	add    QWORD PTR [r8+0xe0],0x20
   14002e5bb:	mov    rax,QWORD PTR [r8+0x28]
   14002e5bf:	movzx  ecx,BYTE PTR [rax]
   14002e5c2:	test   BYTE PTR [rcx+rdx*1+0x18],0x2
   14002e5c7:	jne    0x14002e5d8
   14002e5c9:	mov    al,0x1
   14002e5cb:	ret    
   14002e5cc:	mov    QWORD PTR [r9+0x8],rcx
   14002e5d0:	mov    rax,QWORD PTR [r8+0x28]
   14002e5d4:	mov    QWORD PTR [r9+0x18],rax
   14002e5d8:	mov    rax,QWORD PTR [rdx+0x10]
   14002e5dc:	mov    QWORD PTR [r8+0x58],rax
   14002e5e0:	xor    al,al
   14002e5e2:	ret    
   14002e5e3:	int3   
   14002e5e4:	int3   
   14002e5e5:	int3   
   14002e5e6:	int3   
   14002e5e7:	int3   
   14002e5e8:	int3   
   14002e5e9:	int3   
   14002e5ea:	int3   
   14002e5eb:	int3   
   14002e5ec:	int3   
   14002e5ed:	int3   
   14002e5ee:	int3   
   14002e5ef:	int3   
   14002e5f0:	mov    r10,QWORD PTR [rcx+0xe0]
   14002e5f7:	mov    r8,rcx
   14002e5fa:	test   dl,dl
   14002e5fc:	je     0x14002e60c
   14002e5fe:	lea    rax,[r10+0x20]
   14002e602:	mov    QWORD PTR [rcx+0xe0],rax
   14002e609:	mov    al,0x1
   14002e60b:	ret    
   14002e60c:	mov    rdx,QWORD PTR [r10+0x10]
   14002e610:	mov    r9,QWORD PTR [r10+0x8]
   14002e614:	mov    rax,QWORD PTR [rdx+0x8]
   14002e618:	mov    QWORD PTR [rcx+0x58],rax
   14002e61c:	movzx  r11d,BYTE PTR [rax+0x18]
   14002e621:	mov    rax,QWORD PTR [r10+0x18]
   14002e625:	mov    QWORD PTR [rcx+0x28],rax
   14002e629:	cmp    rax,QWORD PTR [rcx+0x20]
   14002e62d:	je     0x14002e689
   14002e62f:	nop
   14002e630:	cmp    BYTE PTR [r8+0x78],0x0
   14002e635:	mov    rax,QWORD PTR [r8+0x28]
   14002e639:	movzx  ecx,BYTE PTR [rax]
   14002e63c:	je     0x14002e650
   14002e63e:	mov    rax,QWORD PTR [r8+0x50]
   14002e642:	movzx  ecx,cl
   14002e645:	mov    rax,QWORD PTR [rax]
   14002e648:	movzx  ecx,BYTE PTR [rax+rcx*1+0x104]
   14002e650:	cmp    cl,r11b
   14002e653:	jne    0x14002e6e3
   14002e659:	inc    QWORD PTR [r8+0x28]
   14002e65d:	inc    QWORD PTR [r8+0x68]
   14002e661:	mov    rax,QWORD PTR [rdx+0x8]
   14002e665:	inc    r9
   14002e668:	mov    QWORD PTR [r8+0x58],rax
   14002e66c:	cmp    r9,QWORD PTR [rdx+0x128]
   14002e673:	jae    0x14002e689
   14002e675:	mov    rax,QWORD PTR [r8+0x28]
   14002e679:	cmp    rax,QWORD PTR [r8+0x20]
   14002e67d:	je     0x14002e689
   14002e67f:	movzx  eax,BYTE PTR [rax]
   14002e682:	test   BYTE PTR [rax+rdx*1+0x18],0x2
   14002e687:	je     0x14002e630
   14002e689:	cmp    BYTE PTR [rdx+0x134],0x0
   14002e690:	je     0x14002e6a3
   14002e692:	cmp    r9,QWORD PTR [rdx+0x128]
   14002e699:	jae    0x14002e6a3
   14002e69b:	mov    rax,QWORD PTR [r8+0x28]
   14002e69f:	mov    QWORD PTR [r8+0x30],rax
   14002e6a3:	mov    rcx,QWORD PTR [r8+0x20]
   14002e6a7:	cmp    QWORD PTR [r8+0x28],rcx
   14002e6ab:	jne    0x14002e6ee
   14002e6ad:	add    QWORD PTR [r8+0xe0],0x20
   14002e6b5:	test   DWORD PTR [r8+0x60],0x2000
   14002e6bd:	je     0x14002e6d3
   14002e6bf:	mov    rax,QWORD PTR [r8+0x28]
   14002e6c3:	cmp    rax,rcx
   14002e6c6:	jne    0x14002e6d3
   14002e6c8:	cmp    rax,QWORD PTR [r8+0x38]
   14002e6cc:	je     0x14002e6d3
   14002e6ce:	mov    BYTE PTR [r8+0x79],0x1
   14002e6d3:	mov    eax,DWORD PTR [rdx+0x118]
   14002e6d9:	and    eax,0x2
   14002e6dc:	test   al,al
   14002e6de:	jne    0x14002e71c
   14002e6e0:	mov    al,0x1
   14002e6e2:	ret    
   14002e6e3:	add    QWORD PTR [r8+0xe0],0x20
   14002e6eb:	mov    al,0x1
   14002e6ed:	ret    
   14002e6ee:	cmp    r9,QWORD PTR [rdx+0x128]
   14002e6f5:	jne    0x14002e710
   14002e6f7:	add    QWORD PTR [r8+0xe0],0x20
   14002e6ff:	mov    rax,QWORD PTR [r8+0x28]
   14002e703:	movzx  ecx,BYTE PTR [rax]
   14002e706:	test   BYTE PTR [rcx+rdx*1+0x18],0x2
   14002e70b:	jne    0x14002e71c
   14002e70d:	mov    al,0x1
   14002e70f:	ret    
   14002e710:	mov    QWORD PTR [r10+0x8],r9
   14002e714:	mov    rax,QWORD PTR [r8+0x28]
   14002e718:	mov    QWORD PTR [r10+0x18],rax
   14002e71c:	mov    rax,QWORD PTR [rdx+0x10]
   14002e720:	mov    QWORD PTR [r8+0x58],rax
   14002e724:	xor    al,al
   14002e726:	ret    
   14002e727:	int3   
   14002e728:	int3   
   14002e729:	int3   
   14002e72a:	int3   
   14002e72b:	int3   
   14002e72c:	int3   
   14002e72d:	int3   
   14002e72e:	int3   
   14002e72f:	int3   
   14002e730:	mov    r10,QWORD PTR [rcx+0xe0]
   14002e737:	mov    r8,rcx
   14002e73a:	test   dl,dl
   14002e73c:	je     0x14002e74c
   14002e73e:	lea    rax,[r10+0x20]
   14002e742:	mov    QWORD PTR [rcx+0xe0],rax
   14002e749:	mov    al,0x1
   14002e74b:	ret    
   14002e74c:	mov    rdx,QWORD PTR [r10+0x10]
   14002e750:	mov    r9,QWORD PTR [r10+0x8]
   14002e754:	mov    rax,QWORD PTR [rdx+0x8]
   14002e758:	mov    QWORD PTR [rcx+0x58],rax
   14002e75c:	mov    rax,QWORD PTR [r10+0x18]
   14002e760:	mov    r11,QWORD PTR [rdx+0x8]
   14002e764:	mov    QWORD PTR [rcx+0x28],rax
   14002e768:	cmp    rax,QWORD PTR [rcx+0x20]
   14002e76c:	je     0x14002e7cf
   14002e76e:	xchg   ax,ax
   14002e770:	cmp    BYTE PTR [r8+0x78],0x0
   14002e775:	mov    rax,QWORD PTR [r8+0x28]
   14002e779:	movzx  ecx,BYTE PTR [rax]
   14002e77c:	je     0x14002e790
   14002e77e:	mov    rax,QWORD PTR [r8+0x50]
   14002e782:	movzx  ecx,cl
   14002e785:	mov    rax,QWORD PTR [rax]
   14002e788:	movzx  ecx,BYTE PTR [rax+rcx*1+0x104]
   14002e790:	movzx  eax,cl
   14002e793:	cmp    BYTE PTR [rax+r11*1+0x10],0x0
   14002e799:	je     0x14002e829
   14002e79f:	inc    QWORD PTR [r8+0x28]
   14002e7a3:	inc    QWORD PTR [r8+0x68]
   14002e7a7:	mov    rax,QWORD PTR [rdx+0x8]
   14002e7ab:	inc    r9
   14002e7ae:	mov    QWORD PTR [r8+0x58],rax
   14002e7b2:	cmp    r9,QWORD PTR [rdx+0x128]
   14002e7b9:	jae    0x14002e7cf
   14002e7bb:	mov    rax,QWORD PTR [r8+0x28]
   14002e7bf:	cmp    rax,QWORD PTR [r8+0x20]
   14002e7c3:	je     0x14002e7cf
   14002e7c5:	movzx  eax,BYTE PTR [rax]
   14002e7c8:	test   BYTE PTR [rax+rdx*1+0x18],0x2
   14002e7cd:	je     0x14002e770
   14002e7cf:	cmp    BYTE PTR [rdx+0x134],0x0
   14002e7d6:	je     0x14002e7e9
   14002e7d8:	cmp    r9,QWORD PTR [rdx+0x128]
   14002e7df:	jae    0x14002e7e9
   14002e7e1:	mov    rax,QWORD PTR [r8+0x28]
   14002e7e5:	mov    QWORD PTR [r8+0x30],rax
   14002e7e9:	mov    rcx,QWORD PTR [r8+0x20]
   14002e7ed:	cmp    QWORD PTR [r8+0x28],rcx
   14002e7f1:	jne    0x14002e834
   14002e7f3:	add    QWORD PTR [r8+0xe0],0x20
   14002e7fb:	test   DWORD PTR [r8+0x60],0x2000
   14002e803:	je     0x14002e819
   14002e805:	mov    rax,QWORD PTR [r8+0x28]
   14002e809:	cmp    rax,rcx
   14002e80c:	jne    0x14002e819
   14002e80e:	cmp    rax,QWORD PTR [r8+0x38]
   14002e812:	je     0x14002e819
   14002e814:	mov    BYTE PTR [r8+0x79],0x1
   14002e819:	mov    eax,DWORD PTR [rdx+0x118]
   14002e81f:	and    eax,0x2
   14002e822:	test   al,al
   14002e824:	jne    0x14002e862
   14002e826:	mov    al,0x1
   14002e828:	ret    
   14002e829:	add    QWORD PTR [r8+0xe0],0x20
   14002e831:	mov    al,0x1
   14002e833:	ret    
   14002e834:	cmp    r9,QWORD PTR [rdx+0x128]
   14002e83b:	jne    0x14002e856
   14002e83d:	add    QWORD PTR [r8+0xe0],0x20
   14002e845:	mov    rax,QWORD PTR [r8+0x28]
   14002e849:	movzx  ecx,BYTE PTR [rax]
   14002e84c:	test   BYTE PTR [rcx+rdx*1+0x18],0x2
   14002e851:	jne    0x14002e862
   14002e853:	mov    al,0x1
   14002e855:	ret    
   14002e856:	mov    QWORD PTR [r10+0x8],r9
   14002e85a:	mov    rax,QWORD PTR [r8+0x28]
   14002e85e:	mov    QWORD PTR [r10+0x18],rax
   14002e862:	mov    rax,QWORD PTR [rdx+0x10]
   14002e866:	mov    QWORD PTR [r8+0x58],rax
   14002e86a:	xor    al,al
   14002e86c:	ret    
   14002e86d:	int3   
   14002e86e:	int3   
   14002e86f:	int3   
   14002e870:	mov    QWORD PTR [rsp+0x8],rcx
   14002e875:	push   rdi
   14002e876:	sub    rsp,0x30
   14002e87a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e883:	mov    QWORD PTR [rsp+0x48],rbx
   14002e888:	mov    rdi,rdx
   14002e88b:	mov    rbx,rcx
   14002e88e:	call   QWORD PTR [rip+0x1ad4c]        # 0x1400495e0
   14002e894:	lea    r11,[rip+0x1b955]        # 0x14004a1f0
   14002e89b:	mov    QWORD PTR [rbx],r11
   14002e89e:	test   rdi,rdi
   14002e8a1:	je     0x14002e8a7
   14002e8a3:	add    rdi,0x18
   14002e8a7:	lea    rax,[rip+0x1b9e2]        # 0x14004a290
   14002e8ae:	mov    QWORD PTR [rbx+0x18],rax
   14002e8b2:	mov    rcx,QWORD PTR [rdi+0x8]
   14002e8b6:	mov    QWORD PTR [rbx+0x20],rcx
   14002e8ba:	test   rcx,rcx
   14002e8bd:	je     0x14002e8c5
   14002e8bf:	mov    rax,QWORD PTR [rcx]
   14002e8c2:	call   QWORD PTR [rax+0x18]
   14002e8c5:	mov    rax,QWORD PTR [rdi+0x10]
   14002e8c9:	mov    QWORD PTR [rbx+0x28],rax
   14002e8cd:	mov    rax,QWORD PTR [rdi+0x18]
   14002e8d1:	mov    QWORD PTR [rbx+0x30],rax
   14002e8d5:	mov    eax,DWORD PTR [rdi+0x20]
   14002e8d8:	mov    DWORD PTR [rbx+0x38],eax
   14002e8db:	lea    rax,[rip+0x1f65e]        # 0x14004df40
   14002e8e2:	mov    QWORD PTR [rbx],rax
   14002e8e5:	lea    rax,[rip+0x1f644]        # 0x14004df30
   14002e8ec:	mov    QWORD PTR [rbx+0x18],rax
   14002e8f0:	mov    rax,rbx
   14002e8f3:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e8f8:	add    rsp,0x30
   14002e8fc:	pop    rdi
   14002e8fd:	ret    
   14002e8fe:	int3   
   14002e8ff:	int3   
   14002e900:	sub    rcx,0x18
   14002e904:	jmp    0x14002f270
   14002e909:	int3   
   14002e90a:	int3   
   14002e90b:	int3   
   14002e90c:	int3   
   14002e90d:	int3   
   14002e90e:	int3   
   14002e90f:	int3   
   14002e910:	rex push rbx
   14002e912:	sub    rsp,0x20
   14002e916:	lea    rax,[rip+0x1f623]        # 0x14004df40
   14002e91d:	mov    rbx,rcx
   14002e920:	mov    QWORD PTR [rcx],rax
   14002e923:	lea    rax,[rip+0x1b966]        # 0x14004a290
   14002e92a:	mov    QWORD PTR [rcx+0x18],rax
   14002e92e:	mov    rcx,QWORD PTR [rcx+0x20]
   14002e932:	test   rcx,rcx
   14002e935:	je     0x14002e949
   14002e937:	mov    rax,QWORD PTR [rcx]
   14002e93a:	call   QWORD PTR [rax+0x20]
   14002e93d:	test   al,al
   14002e93f:	je     0x14002e949
   14002e941:	mov    QWORD PTR [rbx+0x20],0x0
   14002e949:	mov    rcx,rbx
   14002e94c:	add    rsp,0x20
   14002e950:	pop    rbx
   14002e951:	rex.W jmp QWORD PTR [rip+0x1af40]        # 0x140049898
   14002e958:	int3   
   14002e959:	int3   
   14002e95a:	int3   
   14002e95b:	int3   
   14002e95c:	int3   
   14002e95d:	int3   
   14002e95e:	int3   
   14002e95f:	int3   
   14002e960:	rex push rbx
   14002e962:	sub    rsp,0x20
   14002e966:	lea    rax,[rip+0x1b89b]        # 0x14004a208
   14002e96d:	mov    rbx,rcx
   14002e970:	mov    QWORD PTR [rcx+0x40],rax
   14002e974:	lea    rax,[rip+0x1f5c5]        # 0x14004df40
   14002e97b:	mov    QWORD PTR [rcx],rax
   14002e97e:	lea    rax,[rip+0x1b90b]        # 0x14004a290
   14002e985:	mov    QWORD PTR [rcx+0x18],rax
   14002e989:	mov    rcx,QWORD PTR [rcx+0x20]
   14002e98d:	test   rcx,rcx
   14002e990:	je     0x14002e9a4
   14002e992:	mov    rax,QWORD PTR [rcx]
   14002e995:	call   QWORD PTR [rax+0x20]
   14002e998:	test   al,al
   14002e99a:	je     0x14002e9a4
   14002e99c:	mov    QWORD PTR [rbx+0x20],0x0
   14002e9a4:	mov    rcx,rbx
   14002e9a7:	add    rsp,0x20
   14002e9ab:	pop    rbx
   14002e9ac:	rex.W jmp QWORD PTR [rip+0x1aee5]        # 0x140049898
   14002e9b3:	int3   
   14002e9b4:	int3   
   14002e9b5:	int3   
   14002e9b6:	int3   
   14002e9b7:	int3   
   14002e9b8:	int3   
   14002e9b9:	int3   
   14002e9ba:	int3   
   14002e9bb:	int3   
   14002e9bc:	int3   
   14002e9bd:	int3   
   14002e9be:	int3   
   14002e9bf:	int3   
   14002e9c0:	mov    QWORD PTR [rsp+0x8],rcx
   14002e9c5:	push   rdi
   14002e9c6:	sub    rsp,0x30
   14002e9ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e9d3:	mov    QWORD PTR [rsp+0x48],rbx
   14002e9d8:	mov    rdi,rdx
   14002e9db:	mov    rbx,rcx
   14002e9de:	call   QWORD PTR [rip+0x1abfc]        # 0x1400495e0
   14002e9e4:	lea    r11,[rip+0x1f445]        # 0x14004de30
   14002e9eb:	mov    QWORD PTR [rbx],r11
   14002e9ee:	test   rdi,rdi
   14002e9f1:	je     0x14002e9f7
   14002e9f3:	add    rdi,0x18
   14002e9f7:	lea    rax,[rip+0x1b892]        # 0x14004a290
   14002e9fe:	mov    QWORD PTR [rbx+0x18],rax
   14002ea02:	mov    rcx,QWORD PTR [rdi+0x8]
   14002ea06:	mov    QWORD PTR [rbx+0x20],rcx
   14002ea0a:	test   rcx,rcx
   14002ea0d:	je     0x14002ea15
   14002ea0f:	mov    rax,QWORD PTR [rcx]
   14002ea12:	call   QWORD PTR [rax+0x18]
   14002ea15:	mov    rax,QWORD PTR [rdi+0x10]
   14002ea19:	mov    QWORD PTR [rbx+0x28],rax
   14002ea1d:	mov    rax,QWORD PTR [rdi+0x18]
   14002ea21:	mov    QWORD PTR [rbx+0x30],rax
   14002ea25:	mov    eax,DWORD PTR [rdi+0x20]
   14002ea28:	mov    DWORD PTR [rbx+0x38],eax
   14002ea2b:	lea    rax,[rip+0x1f55e]        # 0x14004df90
   14002ea32:	mov    QWORD PTR [rbx],rax
   14002ea35:	lea    rax,[rip+0x1f544]        # 0x14004df80
   14002ea3c:	mov    QWORD PTR [rbx+0x18],rax
   14002ea40:	mov    rax,rbx
   14002ea43:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ea48:	add    rsp,0x30
   14002ea4c:	pop    rdi
   14002ea4d:	ret    
   14002ea4e:	int3   
   14002ea4f:	int3   
   14002ea50:	sub    rcx,0x18
   14002ea54:	jmp    0x14002f450
   14002ea59:	int3   
   14002ea5a:	int3   
   14002ea5b:	int3   
   14002ea5c:	int3   
   14002ea5d:	int3   
   14002ea5e:	int3   
   14002ea5f:	int3   
   14002ea60:	rex push rbx
   14002ea62:	sub    rsp,0x20
   14002ea66:	lea    rax,[rip+0x1f523]        # 0x14004df90
   14002ea6d:	mov    rbx,rcx
   14002ea70:	mov    QWORD PTR [rcx],rax
   14002ea73:	lea    rax,[rip+0x1b816]        # 0x14004a290
   14002ea7a:	mov    QWORD PTR [rcx+0x18],rax
   14002ea7e:	mov    rcx,QWORD PTR [rcx+0x20]
   14002ea82:	test   rcx,rcx
   14002ea85:	je     0x14002ea99
   14002ea87:	mov    rax,QWORD PTR [rcx]
   14002ea8a:	call   QWORD PTR [rax+0x20]
   14002ea8d:	test   al,al
   14002ea8f:	je     0x14002ea99
   14002ea91:	mov    QWORD PTR [rbx+0x20],0x0
   14002ea99:	mov    rcx,rbx
   14002ea9c:	add    rsp,0x20
   14002eaa0:	pop    rbx
   14002eaa1:	rex.W jmp QWORD PTR [rip+0x1adf0]        # 0x140049898
   14002eaa8:	int3   
   14002eaa9:	int3   
   14002eaaa:	int3   
   14002eaab:	int3   
   14002eaac:	int3   
   14002eaad:	int3   
   14002eaae:	int3   
   14002eaaf:	int3   
   14002eab0:	rex push rbx
   14002eab2:	sub    rsp,0x20
   14002eab6:	lea    rax,[rip+0x1b74b]        # 0x14004a208
   14002eabd:	mov    rbx,rcx
   14002eac0:	mov    QWORD PTR [rcx+0x40],rax
   14002eac4:	lea    rax,[rip+0x1f4c5]        # 0x14004df90
   14002eacb:	mov    QWORD PTR [rcx],rax
   14002eace:	lea    rax,[rip+0x1b7bb]        # 0x14004a290
   14002ead5:	mov    QWORD PTR [rcx+0x18],rax
   14002ead9:	mov    rcx,QWORD PTR [rcx+0x20]
   14002eadd:	test   rcx,rcx
   14002eae0:	je     0x14002eaf4
   14002eae2:	mov    rax,QWORD PTR [rcx]
   14002eae5:	call   QWORD PTR [rax+0x20]
   14002eae8:	test   al,al
   14002eaea:	je     0x14002eaf4
   14002eaec:	mov    QWORD PTR [rbx+0x20],0x0
   14002eaf4:	mov    rcx,rbx
   14002eaf7:	add    rsp,0x20
   14002eafb:	pop    rbx
   14002eafc:	rex.W jmp QWORD PTR [rip+0x1ad95]        # 0x140049898
   14002eb03:	int3   
   14002eb04:	int3   
   14002eb05:	int3   
   14002eb06:	int3   
   14002eb07:	int3   
   14002eb08:	int3   
   14002eb09:	int3   
   14002eb0a:	int3   
   14002eb0b:	int3   
   14002eb0c:	int3   
   14002eb0d:	int3   
   14002eb0e:	int3   
   14002eb0f:	int3   
   14002eb10:	mov    QWORD PTR [rsp+0x8],rbx
   14002eb15:	mov    QWORD PTR [rsp+0x10],rbp
   14002eb1a:	mov    QWORD PTR [rsp+0x18],rsi
   14002eb1f:	push   rdi
   14002eb20:	sub    rsp,0x20
   14002eb24:	mov    rsi,r8
   14002eb27:	mov    ebp,edx
   14002eb29:	mov    rbx,rcx
   14002eb2c:	cmp    edx,0xd
   14002eb2f:	jne    0x14002eb35
   14002eb31:	mov    BYTE PTR [rcx+0x20],0x1
   14002eb35:	mov    r9,QWORD PTR [rcx]
   14002eb38:	mov    rax,QWORD PTR [r9+0x168]
   14002eb3f:	mov    rdx,QWORD PTR [r9+0x170]
   14002eb46:	sub    rdx,rax
   14002eb49:	add    rdx,0x7
   14002eb4d:	and    rdx,0xfffffffffffffff8
   14002eb51:	add    rdx,rax
   14002eb54:	mov    QWORD PTR [r9+0x170],rdx
   14002eb5b:	mov    rdx,QWORD PTR [rcx+0x10]
   14002eb5f:	test   rdx,rdx
   14002eb62:	je     0x14002eb7f
   14002eb64:	mov    rax,QWORD PTR [rcx]
   14002eb67:	mov    rcx,QWORD PTR [rax+0x168]
   14002eb6e:	sub    rcx,rcx
   14002eb71:	add    rcx,QWORD PTR [rax+0x170]
   14002eb78:	sub    rcx,rdx
   14002eb7b:	mov    QWORD PTR [rdx+0x8],rcx
   14002eb7f:	mov    rdi,QWORD PTR [rbx]
   14002eb82:	mov    rdx,QWORD PTR [rdi+0x170]
   14002eb89:	mov    rax,QWORD PTR [rdi+0x160]
   14002eb90:	sub    rax,rdx
   14002eb93:	cmp    rax,r8
   14002eb96:	jae    0x14002ebae
   14002eb98:	sub    rdx,QWORD PTR [rdi+0x168]
   14002eb9f:	lea    rcx,[rdi+0x160]
   14002eba6:	add    rdx,r8
   14002eba9:	call   0x140041bf0
   14002ebae:	mov    rcx,QWORD PTR [rdi+0x170]
   14002ebb5:	lea    rax,[rcx+rsi*1]
   14002ebb9:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ebbe:	mov    QWORD PTR [rdi+0x170],rax
   14002ebc5:	mov    QWORD PTR [rbx+0x10],rcx
   14002ebc9:	mov    QWORD PTR [rcx+0x8],0x0
   14002ebd1:	mov    rax,QWORD PTR [rbx+0x10]
   14002ebd5:	mov    DWORD PTR [rax],ebp
   14002ebd7:	mov    rax,QWORD PTR [rbx+0x10]
   14002ebdb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ebe0:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ebe5:	add    rsp,0x20
   14002ebe9:	pop    rdi
   14002ebea:	ret    
   14002ebeb:	int3   
   14002ebec:	int3   
   14002ebed:	int3   
   14002ebee:	int3   
   14002ebef:	int3   
   14002ebf0:	rex push rbx
   14002ebf2:	sub    rsp,0x20
   14002ebf6:	inc    QWORD PTR [rcx+0x60]
   14002ebfa:	mov    rax,QWORD PTR [rcx]
   14002ebfd:	mov    edx,DWORD PTR [rax+0x30]
   14002ec00:	bt     edx,0xd
   14002ec04:	jae    0x14002ec0a
   14002ec06:	xor    ebx,ebx
   14002ec08:	jmp    0x14002ec18
   14002ec0a:	bt     edx,0xc
   14002ec0e:	mov    ebx,0x0
   14002ec13:	setb   bl
   14002ec16:	inc    ebx
   14002ec18:	mov    edx,0x5
   14002ec1d:	lea    r8d,[rdx+0x13]
   14002ec21:	call   0x14002eb10
   14002ec26:	mov    BYTE PTR [rax+0x10],bl
   14002ec29:	mov    al,0x1
   14002ec2b:	add    rsp,0x20
   14002ec2f:	pop    rbx
   14002ec30:	ret    
   14002ec31:	int3   
   14002ec32:	int3   
   14002ec33:	int3   
   14002ec34:	int3   
   14002ec35:	int3   
   14002ec36:	int3   
   14002ec37:	int3   
   14002ec38:	int3   
   14002ec39:	int3   
   14002ec3a:	int3   
   14002ec3b:	int3   
   14002ec3c:	int3   
   14002ec3d:	int3   
   14002ec3e:	int3   
   14002ec3f:	int3   
   14002ec40:	mov    QWORD PTR [rsp+0x10],rbx
   14002ec45:	mov    QWORD PTR [rsp+0x18],rsi
   14002ec4a:	push   rdi
   14002ec4b:	sub    rsp,0x20
   14002ec4f:	mov    rsi,QWORD PTR [rcx+0x10]
   14002ec53:	movzx  edi,dl
   14002ec56:	mov    rbx,rcx
   14002ec59:	test   rsi,rsi
   14002ec5c:	je     0x14002ecf3
   14002ec62:	cmp    DWORD PTR [rsi],0x2
   14002ec65:	jne    0x14002ecf3
   14002ec6b:	mov    rax,QWORD PTR [rcx]
   14002ec6e:	mov    QWORD PTR [rsp+0x30],rbp
   14002ec73:	sub    rsi,QWORD PTR [rax+0x168]
   14002ec7a:	lea    rbp,[rax+0x160]
   14002ec81:	mov    rdx,QWORD PTR [rbp+0x10]
   14002ec85:	mov    rax,QWORD PTR [rbp+0x0]
   14002ec89:	sub    rax,rdx
   14002ec8c:	cmp    rax,0x1
   14002ec90:	jae    0x14002eca1
   14002ec92:	sub    rdx,QWORD PTR [rbp+0x8]
   14002ec96:	mov    rcx,rbp
   14002ec99:	inc    rdx
   14002ec9c:	call   0x140041bf0
   14002eca1:	inc    QWORD PTR [rbp+0x10]
   14002eca5:	cmp    BYTE PTR [rbx+0x18],0x0
   14002eca9:	mov    rax,QWORD PTR [rbx]
   14002ecac:	mov    rcx,QWORD PTR [rax+0x168]
   14002ecb3:	mov    rbp,QWORD PTR [rsp+0x30]
   14002ecb8:	lea    rdx,[rsi+rcx*1]
   14002ecbc:	mov    QWORD PTR [rbx+0x10],rdx
   14002ecc0:	je     0x14002ecd5
   14002ecc2:	mov    rax,QWORD PTR [rbx+0x8]
   14002ecc6:	movzx  ecx,dil
   14002ecca:	mov    rax,QWORD PTR [rax]
   14002eccd:	movzx  edi,BYTE PTR [rax+rcx*1+0x104]
   14002ecd5:	mov    ecx,DWORD PTR [rdx+0x10]
   14002ecd8:	mov    rax,rdx
   14002ecdb:	mov    BYTE PTR [rcx+rdx*1+0x18],dil
   14002ece0:	inc    DWORD PTR [rdx+0x10]
   14002ece3:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ece8:	mov    rsi,QWORD PTR [rsp+0x40]
   14002eced:	add    rsp,0x20
   14002ecf1:	pop    rdi
   14002ecf2:	ret    
   14002ecf3:	mov    edx,0x2
   14002ecf8:	lea    r8d,[rdx+0x17]
   14002ecfc:	call   0x14002eb10
   14002ed01:	mov    DWORD PTR [rax+0x10],0x1
   14002ed08:	cmp    BYTE PTR [rbx+0x18],0x0
   14002ed0c:	je     0x14002ed21
   14002ed0e:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ed12:	movzx  edx,dil
   14002ed16:	mov    rcx,QWORD PTR [rcx]
   14002ed19:	movzx  edi,BYTE PTR [rcx+rdx*1+0x104]
   14002ed21:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ed26:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ed2b:	mov    BYTE PTR [rax+0x18],dil
   14002ed2f:	add    rsp,0x20
   14002ed33:	pop    rdi
   14002ed34:	ret    
   14002ed35:	int3   
   14002ed36:	int3   
   14002ed37:	int3   
   14002ed38:	int3   
   14002ed39:	int3   
   14002ed3a:	int3   
   14002ed3b:	int3   
   14002ed3c:	int3   
   14002ed3d:	int3   
   14002ed3e:	int3   
   14002ed3f:	int3   
   14002ed40:	mov    r8,QWORD PTR [rdx+0x10]
   14002ed44:	mov    rax,QWORD PTR [r8]
   14002ed47:	mov    QWORD PTR [rdx+0x10],rax
   14002ed4b:	mov    rax,QWORD PTR [r8]
   14002ed4e:	cmp    BYTE PTR [rax+0x29],0x0
   14002ed52:	jne    0x14002ed58
   14002ed54:	mov    QWORD PTR [rax+0x8],rdx
   14002ed58:	mov    rax,QWORD PTR [rdx+0x8]
   14002ed5c:	mov    QWORD PTR [r8+0x8],rax
   14002ed60:	mov    rax,QWORD PTR [rcx+0x8]
   14002ed64:	cmp    rdx,QWORD PTR [rax+0x8]
   14002ed68:	jne    0x14002ed76
   14002ed6a:	mov    QWORD PTR [rax+0x8],r8
   14002ed6e:	mov    QWORD PTR [r8],rdx
   14002ed71:	mov    QWORD PTR [rdx+0x8],r8
   14002ed75:	ret    
   14002ed76:	mov    rax,QWORD PTR [rdx+0x8]
   14002ed7a:	cmp    rdx,QWORD PTR [rax]
   14002ed7d:	jne    0x14002ed8a
   14002ed7f:	mov    QWORD PTR [rax],r8
   14002ed82:	mov    QWORD PTR [r8],rdx
   14002ed85:	mov    QWORD PTR [rdx+0x8],r8
   14002ed89:	ret    
   14002ed8a:	mov    QWORD PTR [rax+0x10],r8
   14002ed8e:	mov    QWORD PTR [r8],rdx
   14002ed91:	mov    QWORD PTR [rdx+0x8],r8
   14002ed95:	ret    
   14002ed96:	int3   
   14002ed97:	int3   
   14002ed98:	int3   
   14002ed99:	int3   
   14002ed9a:	int3   
   14002ed9b:	int3   
   14002ed9c:	int3   
   14002ed9d:	int3   
   14002ed9e:	int3   
   14002ed9f:	int3   
   14002eda0:	mov    QWORD PTR [rsp+0x8],rbx
   14002eda5:	mov    r9,QWORD PTR [rcx]
   14002eda8:	mov    r10d,r8d
   14002edab:	mov    rbx,rdx
   14002edae:	movzx  eax,BYTE PTR [r9]
   14002edb2:	mov    r11,rcx
   14002edb5:	cmp    al,0x66
   14002edb7:	jg     0x14002ede5
   14002edb9:	cmp    al,0x61
   14002edbb:	jl     0x14002edc5
   14002edbd:	movsx  eax,al
   14002edc0:	sub    eax,0x57
   14002edc3:	jmp    0x14002ede8
   14002edc5:	cmp    al,0x46
   14002edc7:	jg     0x14002ede5
   14002edc9:	cmp    al,0x41
   14002edcb:	jl     0x14002edd5
   14002edcd:	movsx  eax,al
   14002edd0:	sub    eax,0x37
   14002edd3:	jmp    0x14002ede8
   14002edd5:	cmp    al,0x39
   14002edd7:	jg     0x14002ede5
   14002edd9:	cmp    al,0x30
   14002eddb:	jl     0x14002ede5
   14002eddd:	movsx  eax,al
   14002ede0:	sub    eax,0x30
   14002ede3:	jmp    0x14002ede8
   14002ede5:	or     eax,0xffffffff
   14002ede8:	or     ecx,0xffffffff
   14002edeb:	cmp    eax,r8d
   14002edee:	cmovl  ecx,eax
   14002edf1:	cmp    r9,rdx
   14002edf4:	je     0x14002ee69
   14002edf6:	test   ecx,ecx
   14002edf8:	js     0x14002ee69
   14002edfa:	cmp    ecx,r8d
   14002edfd:	jge    0x14002ee69
   14002edff:	xor    r8d,r8d
   14002ee02:	mov    rdx,QWORD PTR [r11]
   14002ee05:	movzx  eax,BYTE PTR [rdx]
   14002ee08:	cmp    al,0x66
   14002ee0a:	jg     0x14002ee38
   14002ee0c:	cmp    al,0x61
   14002ee0e:	jl     0x14002ee18
   14002ee10:	movsx  eax,al
   14002ee13:	sub    eax,0x57
   14002ee16:	jmp    0x14002ee3b
   14002ee18:	cmp    al,0x46
   14002ee1a:	jg     0x14002ee38
   14002ee1c:	cmp    al,0x41
   14002ee1e:	jl     0x14002ee28
   14002ee20:	movsx  eax,al
   14002ee23:	sub    eax,0x37
   14002ee26:	jmp    0x14002ee3b
   14002ee28:	cmp    al,0x39
   14002ee2a:	jg     0x14002ee38
   14002ee2c:	cmp    al,0x30
   14002ee2e:	jl     0x14002ee38
   14002ee30:	movsx  eax,al
   14002ee33:	sub    eax,0x30
   14002ee36:	jmp    0x14002ee3b
   14002ee38:	or     eax,0xffffffff
   14002ee3b:	or     ecx,0xffffffff
   14002ee3e:	cmp    eax,r10d
   14002ee41:	cmovl  ecx,eax
   14002ee44:	test   ecx,ecx
   14002ee46:	js     0x14002ee60
   14002ee48:	cmp    ecx,r10d
   14002ee4b:	jge    0x14002ee60
   14002ee4d:	imul   r8d,r10d
   14002ee51:	lea    rax,[rdx+0x1]
   14002ee55:	add    r8d,ecx
   14002ee58:	mov    QWORD PTR [r11],rax
   14002ee5b:	cmp    rax,rbx
   14002ee5e:	jne    0x14002ee02
   14002ee60:	mov    eax,r8d
   14002ee63:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ee68:	ret    
   14002ee69:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ee6e:	or     eax,0xffffffff
   14002ee71:	ret    
   14002ee72:	int3   
   14002ee73:	int3   
   14002ee74:	int3   
   14002ee75:	int3   
   14002ee76:	int3   
   14002ee77:	int3   
   14002ee78:	int3   
   14002ee79:	int3   
   14002ee7a:	int3   
   14002ee7b:	int3   
   14002ee7c:	int3   
   14002ee7d:	int3   
   14002ee7e:	int3   
   14002ee7f:	int3   
   14002ee80:	rex push rbx
   14002ee82:	sub    rsp,0x20
   14002ee86:	mov    rax,QWORD PTR [rcx+0x10]
   14002ee8a:	mov    r10,rcx
   14002ee8d:	movabs rcx,0xffffffffffffffe
   14002ee97:	mov    rbx,rdx
   14002ee9a:	cmp    rax,rcx
   14002ee9d:	jb     0x14002eeb7
   14002ee9f:	mov    rcx,QWORD PTR [rsp+0x50]
   14002eea4:	call   0x14002b150
   14002eea9:	lea    rcx,[rip+0x21ad0]        # 0x140050980
   14002eeb0:	call   QWORD PTR [rip+0x1a6e2]        # 0x140049598
   14002eeb6:	int3   
   14002eeb7:	mov    r11,QWORD PTR [rsp+0x50]
   14002eebc:	inc    rax
   14002eebf:	mov    QWORD PTR [r10+0x10],rax
   14002eec3:	mov    QWORD PTR [r11+0x8],r9
   14002eec7:	mov    rax,QWORD PTR [r10+0x8]
   14002eecb:	cmp    r9,rax
   14002eece:	jne    0x14002eee1
   14002eed0:	mov    QWORD PTR [rax+0x8],r11
   14002eed4:	mov    rax,QWORD PTR [r10+0x8]
   14002eed8:	mov    QWORD PTR [rax],r11
   14002eedb:	mov    rax,QWORD PTR [r10+0x8]
   14002eedf:	jmp    0x14002ef05
   14002eee1:	test   r8b,r8b
   14002eee4:	je     0x14002eef7
   14002eee6:	mov    QWORD PTR [r9],r11
   14002eee9:	mov    rax,QWORD PTR [r10+0x8]
   14002eeed:	cmp    r9,QWORD PTR [rax]
   14002eef0:	jne    0x14002ef09
   14002eef2:	mov    QWORD PTR [rax],r11
   14002eef5:	jmp    0x14002ef09
   14002eef7:	mov    QWORD PTR [r9+0x10],r11
   14002eefb:	mov    rax,QWORD PTR [r10+0x8]
   14002eeff:	cmp    r9,QWORD PTR [rax+0x10]
   14002ef03:	jne    0x14002ef09
   14002ef05:	mov    QWORD PTR [rax+0x10],r11
   14002ef09:	mov    rax,QWORD PTR [r11+0x8]
   14002ef0d:	mov    rdx,r11
   14002ef10:	cmp    BYTE PTR [rax+0x28],0x0
   14002ef14:	jne    0x14002f0fa
   14002ef1a:	nop    WORD PTR [rax+rax*1+0x0]
   14002ef20:	mov    rax,QWORD PTR [rdx+0x8]
   14002ef24:	mov    rcx,QWORD PTR [rax+0x8]
   14002ef28:	cmp    rax,QWORD PTR [rcx]
   14002ef2b:	jne    0x14002f008
   14002ef31:	mov    r8,QWORD PTR [rcx+0x10]
   14002ef35:	cmp    BYTE PTR [r8+0x28],0x0
   14002ef3a:	je     0x14002f012
   14002ef40:	cmp    rdx,QWORD PTR [rax+0x10]
   14002ef44:	jne    0x14002ef92
   14002ef46:	mov    rcx,QWORD PTR [rax+0x10]
   14002ef4a:	mov    rdx,rax
   14002ef4d:	mov    rax,QWORD PTR [rcx]
   14002ef50:	mov    QWORD PTR [rdx+0x10],rax
   14002ef54:	mov    rax,QWORD PTR [rcx]
   14002ef57:	cmp    BYTE PTR [rax+0x29],0x0
   14002ef5b:	jne    0x14002ef61
   14002ef5d:	mov    QWORD PTR [rax+0x8],rdx
   14002ef61:	mov    rax,QWORD PTR [rdx+0x8]
   14002ef65:	mov    QWORD PTR [rcx+0x8],rax
   14002ef69:	mov    rax,QWORD PTR [r10+0x8]
   14002ef6d:	cmp    rdx,QWORD PTR [rax+0x8]
   14002ef71:	jne    0x14002ef79
   14002ef73:	mov    QWORD PTR [rax+0x8],rcx
   14002ef77:	jmp    0x14002ef8b
   14002ef79:	mov    rax,QWORD PTR [rdx+0x8]
   14002ef7d:	cmp    rdx,QWORD PTR [rax]
   14002ef80:	jne    0x14002ef87
   14002ef82:	mov    QWORD PTR [rax],rcx
   14002ef85:	jmp    0x14002ef8b
   14002ef87:	mov    QWORD PTR [rax+0x10],rcx
   14002ef8b:	mov    QWORD PTR [rcx],rdx
   14002ef8e:	mov    QWORD PTR [rdx+0x8],rcx
   14002ef92:	mov    rax,QWORD PTR [rdx+0x8]
   14002ef96:	mov    BYTE PTR [rax+0x28],0x1
   14002ef9a:	mov    rax,QWORD PTR [rdx+0x8]
   14002ef9e:	mov    rcx,QWORD PTR [rax+0x8]
   14002efa2:	mov    BYTE PTR [rcx+0x28],0x0
   14002efa6:	mov    rax,QWORD PTR [rdx+0x8]
   14002efaa:	mov    rcx,QWORD PTR [rax+0x8]
   14002efae:	mov    r8,QWORD PTR [rcx]
   14002efb1:	mov    rax,QWORD PTR [r8+0x10]
   14002efb5:	mov    QWORD PTR [rcx],rax
   14002efb8:	mov    rax,QWORD PTR [r8+0x10]
   14002efbc:	cmp    BYTE PTR [rax+0x29],0x0
   14002efc0:	jne    0x14002efc6
   14002efc2:	mov    QWORD PTR [rax+0x8],rcx
   14002efc6:	mov    rax,QWORD PTR [rcx+0x8]
   14002efca:	mov    QWORD PTR [r8+0x8],rax
   14002efce:	mov    rax,QWORD PTR [r10+0x8]
   14002efd2:	cmp    rcx,QWORD PTR [rax+0x8]
   14002efd6:	jne    0x14002efe5
   14002efd8:	mov    QWORD PTR [rax+0x8],r8
   14002efdc:	mov    QWORD PTR [r8+0x10],rcx
   14002efe0:	jmp    0x14002f0e8
   14002efe5:	mov    rax,QWORD PTR [rcx+0x8]
   14002efe9:	cmp    rcx,QWORD PTR [rax+0x10]
   14002efed:	jne    0x14002effc
   14002efef:	mov    QWORD PTR [rax+0x10],r8
   14002eff3:	mov    QWORD PTR [r8+0x10],rcx
   14002eff7:	jmp    0x14002f0e8
   14002effc:	mov    QWORD PTR [rax],r8
   14002efff:	mov    QWORD PTR [r8+0x10],rcx
   14002f003:	jmp    0x14002f0e8
   14002f008:	mov    r8,QWORD PTR [rcx]
   14002f00b:	cmp    BYTE PTR [r8+0x28],0x0
   14002f010:	jne    0x14002f034
   14002f012:	mov    BYTE PTR [rax+0x28],0x1
   14002f016:	mov    BYTE PTR [r8+0x28],0x1
   14002f01b:	mov    rax,QWORD PTR [rdx+0x8]
   14002f01f:	mov    rcx,QWORD PTR [rax+0x8]
   14002f023:	mov    BYTE PTR [rcx+0x28],0x0
   14002f027:	mov    rax,QWORD PTR [rdx+0x8]
   14002f02b:	mov    rdx,QWORD PTR [rax+0x8]
   14002f02f:	jmp    0x14002f0ec
   14002f034:	cmp    rdx,QWORD PTR [rax]
   14002f037:	jne    0x14002f087
   14002f039:	mov    rcx,QWORD PTR [rax]
   14002f03c:	mov    rdx,rax
   14002f03f:	mov    rax,QWORD PTR [rcx+0x10]
   14002f043:	mov    QWORD PTR [rdx],rax
   14002f046:	mov    rax,QWORD PTR [rcx+0x10]
   14002f04a:	cmp    BYTE PTR [rax+0x29],0x0
   14002f04e:	jne    0x14002f054
   14002f050:	mov    QWORD PTR [rax+0x8],rdx
   14002f054:	mov    rax,QWORD PTR [rdx+0x8]
   14002f058:	mov    QWORD PTR [rcx+0x8],rax
   14002f05c:	mov    rax,QWORD PTR [r10+0x8]
   14002f060:	cmp    rdx,QWORD PTR [rax+0x8]
   14002f064:	jne    0x14002f06c
   14002f066:	mov    QWORD PTR [rax+0x8],rcx
   14002f06a:	jmp    0x14002f07f
   14002f06c:	mov    rax,QWORD PTR [rdx+0x8]
   14002f070:	cmp    rdx,QWORD PTR [rax+0x10]
   14002f074:	jne    0x14002f07c
   14002f076:	mov    QWORD PTR [rax+0x10],rcx
   14002f07a:	jmp    0x14002f07f
   14002f07c:	mov    QWORD PTR [rax],rcx
   14002f07f:	mov    QWORD PTR [rcx+0x10],rdx
   14002f083:	mov    QWORD PTR [rdx+0x8],rcx
   14002f087:	mov    rax,QWORD PTR [rdx+0x8]
   14002f08b:	mov    BYTE PTR [rax+0x28],0x1
   14002f08f:	mov    rax,QWORD PTR [rdx+0x8]
   14002f093:	mov    rcx,QWORD PTR [rax+0x8]
   14002f097:	mov    BYTE PTR [rcx+0x28],0x0
   14002f09b:	mov    rax,QWORD PTR [rdx+0x8]
   14002f09f:	mov    rcx,QWORD PTR [rax+0x8]
   14002f0a3:	mov    r8,QWORD PTR [rcx+0x10]
   14002f0a7:	mov    rax,QWORD PTR [r8]
   14002f0aa:	mov    QWORD PTR [rcx+0x10],rax
   14002f0ae:	mov    rax,QWORD PTR [r8]
   14002f0b1:	cmp    BYTE PTR [rax+0x29],0x0
   14002f0b5:	jne    0x14002f0bb
   14002f0b7:	mov    QWORD PTR [rax+0x8],rcx
   14002f0bb:	mov    rax,QWORD PTR [rcx+0x8]
   14002f0bf:	mov    QWORD PTR [r8+0x8],rax
   14002f0c3:	mov    rax,QWORD PTR [r10+0x8]
   14002f0c7:	cmp    rcx,QWORD PTR [rax+0x8]
   14002f0cb:	jne    0x14002f0d3
   14002f0cd:	mov    QWORD PTR [rax+0x8],r8
   14002f0d1:	jmp    0x14002f0e5
   14002f0d3:	mov    rax,QWORD PTR [rcx+0x8]
   14002f0d7:	cmp    rcx,QWORD PTR [rax]
   14002f0da:	jne    0x14002f0e1
   14002f0dc:	mov    QWORD PTR [rax],r8
   14002f0df:	jmp    0x14002f0e5
   14002f0e1:	mov    QWORD PTR [rax+0x10],r8
   14002f0e5:	mov    QWORD PTR [r8],rcx
   14002f0e8:	mov    QWORD PTR [rcx+0x8],r8
   14002f0ec:	mov    rax,QWORD PTR [rdx+0x8]
   14002f0f0:	cmp    BYTE PTR [rax+0x28],0x0
   14002f0f4:	je     0x14002ef20
   14002f0fa:	mov    rax,QWORD PTR [r10+0x8]
   14002f0fe:	mov    QWORD PTR [rbx],r11
   14002f101:	mov    rcx,QWORD PTR [rax+0x8]
   14002f105:	mov    rax,rbx
   14002f108:	mov    BYTE PTR [rcx+0x28],0x1
   14002f10c:	add    rsp,0x20
   14002f110:	pop    rbx
   14002f111:	ret    
   14002f112:	int3   
   14002f113:	int3   
   14002f114:	int3   
   14002f115:	int3   
   14002f116:	int3   
   14002f117:	int3   
   14002f118:	int3   
   14002f119:	int3   
   14002f11a:	int3   
   14002f11b:	int3   
   14002f11c:	int3   
   14002f11d:	int3   
   14002f11e:	int3   
   14002f11f:	int3   
   14002f120:	mov    rax,r8
   14002f123:	mov    r11,rcx
   14002f126:	mov    r8,rdx
   14002f129:	cmp    rcx,rdx
   14002f12c:	je     0x14002f160
   14002f12e:	mov    r9,rdx
   14002f131:	mov    r10,rax
   14002f134:	sub    r9,rax
   14002f137:	sub    r10,rdx
   14002f13a:	nop    WORD PTR [rax+rax*1+0x0]
   14002f140:	movzx  ecx,BYTE PTR [r8-0x2]
   14002f145:	sub    r8,0x2
   14002f149:	sub    rax,0x2
   14002f14d:	lea    rdx,[r10+r8*1+0x1]
   14002f152:	mov    BYTE PTR [rax],cl
   14002f154:	movzx  ecx,BYTE PTR [rdx+r9*1]
   14002f159:	mov    BYTE PTR [rdx],cl
   14002f15b:	cmp    r8,r11
   14002f15e:	jne    0x14002f140
   14002f160:	repz ret 
   14002f162:	int3   
   14002f163:	int3   
   14002f164:	int3   
   14002f165:	int3   
   14002f166:	int3   
   14002f167:	int3   
   14002f168:	int3   
   14002f169:	int3   
   14002f16a:	int3   
   14002f16b:	int3   
   14002f16c:	int3   
   14002f16d:	int3   
   14002f16e:	int3   
   14002f16f:	int3   
   14002f170:	sub    rsp,0x38
   14002f174:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f17d:	nop    DWORD PTR [rax]
   14002f180:	cmp    rcx,rdx
   14002f183:	je     0x14002f19a
   14002f185:	test   r8,r8
   14002f188:	je     0x14002f190
   14002f18a:	mov    rax,QWORD PTR [rcx]
   14002f18d:	mov    QWORD PTR [r8],rax
   14002f190:	add    r8,0x8
   14002f194:	add    rcx,0x8
   14002f198:	jmp    0x14002f180
   14002f19a:	mov    rax,r8
   14002f19d:	add    rsp,0x38
   14002f1a1:	ret    
   14002f1a2:	int3   
   14002f1a3:	int3   
   14002f1a4:	int3   
   14002f1a5:	int3   
   14002f1a6:	int3   
   14002f1a7:	int3   
   14002f1a8:	int3   
   14002f1a9:	int3   
   14002f1aa:	int3   
   14002f1ab:	int3   
   14002f1ac:	int3   
   14002f1ad:	int3   
   14002f1ae:	int3   
   14002f1af:	int3   
   14002f1b0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f1b5:	push   rdi
   14002f1b6:	sub    rsp,0x30
   14002f1ba:	mov    rax,QWORD PTR [rdx+0x8]
   14002f1be:	mov    rbx,rcx
   14002f1c1:	mov    rcx,QWORD PTR [rdx]
   14002f1c4:	mov    QWORD PTR [rsp+0x20],rcx
   14002f1c9:	mov    QWORD PTR [rsp+0x28],rax
   14002f1ce:	test   rax,rax
   14002f1d1:	je     0x14002f1e1
   14002f1d3:	lock inc DWORD PTR [rax+0x8]
   14002f1d7:	mov    rax,QWORD PTR [rsp+0x28]
   14002f1dc:	mov    rcx,QWORD PTR [rsp+0x20]
   14002f1e1:	mov    QWORD PTR [rbx],rcx
   14002f1e4:	mov    rdi,QWORD PTR [rbx+0x8]
   14002f1e8:	mov    QWORD PTR [rbx+0x8],rax
   14002f1ec:	test   rdi,rdi
   14002f1ef:	je     0x14002f227
   14002f1f1:	lock dec DWORD PTR [rdi+0x8]
   14002f1f5:	mov    QWORD PTR [rsp+0x40],rsi
   14002f1fa:	jne    0x14002f214
   14002f1fc:	mov    rax,QWORD PTR [rdi]
   14002f1ff:	mov    rcx,rdi
   14002f202:	call   QWORD PTR [rax+0x8]
   14002f205:	lock dec DWORD PTR [rdi+0xc]
   14002f209:	jne    0x14002f214
   14002f20b:	mov    rax,QWORD PTR [rdi]
   14002f20e:	mov    rcx,rdi
   14002f211:	call   QWORD PTR [rax+0x10]
   14002f214:	mov    rax,rbx
   14002f217:	mov    rsi,QWORD PTR [rsp+0x40]
   14002f21c:	mov    rbx,QWORD PTR [rsp+0x48]
   14002f221:	add    rsp,0x30
   14002f225:	pop    rdi
   14002f226:	ret    
   14002f227:	mov    rax,rbx
   14002f22a:	mov    rbx,QWORD PTR [rsp+0x48]
   14002f22f:	add    rsp,0x30
   14002f233:	pop    rdi
   14002f234:	ret    
   14002f235:	int3   
   14002f236:	int3   
   14002f237:	int3   
   14002f238:	int3   
   14002f239:	int3   
   14002f23a:	int3   
   14002f23b:	int3   
   14002f23c:	int3   
   14002f23d:	int3   
   14002f23e:	int3   
   14002f23f:	int3   
   14002f240:	mov    rdx,QWORD PTR [rcx+0xe0]
   14002f247:	mov    r8,QWORD PTR [rdx+0x10]
   14002f24b:	test   r8,r8
   14002f24e:	je     0x14002f257
   14002f250:	mov    rax,QWORD PTR [rdx+0x8]
   14002f254:	mov    QWORD PTR [rax],r8
   14002f257:	lea    rax,[rdx+0x30]
   14002f25b:	mov    QWORD PTR [rcx+0xe0],rax
   14002f262:	mov    al,0x1
   14002f264:	ret    
   14002f265:	int3   
   14002f266:	int3   
   14002f267:	int3   
   14002f268:	int3   
   14002f269:	int3   
   14002f26a:	int3   
   14002f26b:	int3   
   14002f26c:	int3   
   14002f26d:	int3   
   14002f26e:	int3   
   14002f26f:	int3   
   14002f270:	mov    QWORD PTR [rsp+0x8],rbx
   14002f275:	push   rdi
   14002f276:	sub    rsp,0x20
   14002f27a:	lea    rax,[rip+0x1ecbf]        # 0x14004df40
   14002f281:	mov    rbx,rcx
   14002f284:	mov    edi,edx
   14002f286:	mov    QWORD PTR [rcx],rax
   14002f289:	lea    rax,[rip+0x1b000]        # 0x14004a290
   14002f290:	mov    QWORD PTR [rcx+0x18],rax
   14002f294:	mov    rcx,QWORD PTR [rcx+0x20]
   14002f298:	test   rcx,rcx
   14002f29b:	je     0x14002f2af
   14002f29d:	mov    rax,QWORD PTR [rcx]
   14002f2a0:	call   QWORD PTR [rax+0x20]
   14002f2a3:	test   al,al
   14002f2a5:	je     0x14002f2af
   14002f2a7:	mov    QWORD PTR [rbx+0x20],0x0
   14002f2af:	mov    rcx,rbx
   14002f2b2:	call   QWORD PTR [rip+0x1a5e0]        # 0x140049898
   14002f2b8:	test   dil,0x1
   14002f2bc:	je     0x14002f2c6
   14002f2be:	mov    rcx,rbx
   14002f2c1:	call   0x14002b150
   14002f2c6:	mov    rax,rbx
   14002f2c9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f2ce:	add    rsp,0x20
   14002f2d2:	pop    rdi
   14002f2d3:	ret    
   14002f2d4:	int3   
   14002f2d5:	int3   
   14002f2d6:	int3   
   14002f2d7:	int3   
   14002f2d8:	int3   
   14002f2d9:	int3   
   14002f2da:	int3   
   14002f2db:	int3   
   14002f2dc:	int3   
   14002f2dd:	int3   
   14002f2de:	int3   
   14002f2df:	int3   
   14002f2e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f2e5:	push   rdi
   14002f2e6:	sub    r8,rdx
   14002f2e9:	mov    r10,rdx
   14002f2ec:	mov    rdi,rcx
   14002f2ef:	sar    r8,0x3
   14002f2f3:	test   r8,r8
   14002f2f6:	jle    0x14002f331
   14002f2f8:	mov    ebx,DWORD PTR [r9+0x4]
   14002f2fc:	nop    DWORD PTR [rax+0x0]
   14002f300:	mov    rax,r8
   14002f303:	cqo    
   14002f305:	sub    rax,rdx
   14002f308:	sar    rax,1
   14002f30b:	lea    r11,[r10+rax*8]
   14002f30f:	mov    ecx,DWORD PTR [r11+0x4]
   14002f313:	cmp    ebx,ecx
   14002f315:	jle    0x14002f327
   14002f317:	or     rcx,0xffffffffffffffff
   14002f31b:	lea    r10,[r11+0x8]
   14002f31f:	sub    rcx,rax
   14002f322:	add    r8,rcx
   14002f325:	jmp    0x14002f32c
   14002f327:	jge    0x14002f342
   14002f329:	mov    r8,rax
   14002f32c:	test   r8,r8
   14002f32f:	jg     0x14002f300
   14002f331:	mov    QWORD PTR [rdi],r10
   14002f334:	mov    QWORD PTR [rdi+0x8],r10
   14002f338:	mov    rax,rdi
   14002f33b:	mov    rbx,QWORD PTR [rsp+0x18]
   14002f340:	pop    rdi
   14002f341:	ret    
   14002f342:	mov    r9,r11
   14002f345:	mov    QWORD PTR [rsp+0x10],rsi
   14002f34a:	mov    rsi,r10
   14002f34d:	sub    r9,r10
   14002f350:	sar    r9,0x3
   14002f354:	test   r9,r9
   14002f357:	jle    0x14002f38d
   14002f359:	nop    DWORD PTR [rax+0x0]
   14002f360:	mov    rax,r9
   14002f363:	cqo    
   14002f365:	sub    rax,rdx
   14002f368:	sar    rax,1
   14002f36b:	cmp    DWORD PTR [rsi+rax*8+0x4],ebx
   14002f36f:	lea    rcx,[rsi+rax*8]
   14002f373:	jge    0x14002f385
   14002f375:	lea    rsi,[rcx+0x8]
   14002f379:	or     rcx,0xffffffffffffffff
   14002f37d:	sub    rcx,rax
   14002f380:	add    r9,rcx
   14002f383:	jmp    0x14002f388
   14002f385:	mov    r9,rax
   14002f388:	test   r9,r9
   14002f38b:	jg     0x14002f360
   14002f38d:	shl    r8,0x3
   14002f391:	lea    r9,[r11+0x8]
   14002f395:	sub    r8,r9
   14002f398:	add    r8,r10
   14002f39b:	sar    r8,0x3
   14002f39f:	test   r8,r8
   14002f3a2:	jle    0x14002f3de
   14002f3a4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002f3b0:	mov    rax,r8
   14002f3b3:	cqo    
   14002f3b5:	sub    rax,rdx
   14002f3b8:	sar    rax,1
   14002f3bb:	cmp    ebx,DWORD PTR [r9+rax*8+0x4]
   14002f3c0:	lea    rcx,[r9+rax*8]
   14002f3c4:	jl     0x14002f3d6
   14002f3c6:	lea    r9,[rcx+0x8]
   14002f3ca:	or     rcx,0xffffffffffffffff
   14002f3ce:	sub    rcx,rax
   14002f3d1:	add    r8,rcx
   14002f3d4:	jmp    0x14002f3d9
   14002f3d6:	mov    r8,rax
   14002f3d9:	test   r8,r8
   14002f3dc:	jg     0x14002f3b0
   14002f3de:	mov    rbx,QWORD PTR [rsp+0x18]
   14002f3e3:	mov    QWORD PTR [rdi],rsi
   14002f3e6:	mov    rsi,QWORD PTR [rsp+0x10]
   14002f3eb:	mov    QWORD PTR [rdi+0x8],r9
   14002f3ef:	mov    rax,rdi
   14002f3f2:	pop    rdi
   14002f3f3:	ret    
   14002f3f4:	int3   
   14002f3f5:	int3   
   14002f3f6:	int3   
   14002f3f7:	int3   
   14002f3f8:	int3   
   14002f3f9:	int3   
   14002f3fa:	int3   
   14002f3fb:	int3   
   14002f3fc:	int3   
   14002f3fd:	int3   
   14002f3fe:	int3   
   14002f3ff:	int3   
   14002f400:	mov    QWORD PTR [rsp+0x10],rbx
   14002f405:	push   rdi
   14002f406:	sub    rsp,0x20
   14002f40a:	xor    edi,edi
   14002f40c:	mov    rbx,rcx
   14002f40f:	mov    DWORD PTR [rsp+0x30],edi
   14002f413:	call   QWORD PTR [rip+0x1a1c7]        # 0x1400495e0
   14002f419:	mov    QWORD PTR [rbx+0x20],rdi
   14002f41d:	mov    QWORD PTR [rbx+0x28],rdi
   14002f421:	mov    QWORD PTR [rbx+0x30],rdi
   14002f425:	mov    DWORD PTR [rbx+0x38],0xffffffff
   14002f42c:	lea    rax,[rip+0x1eb0d]        # 0x14004df40
   14002f433:	mov    QWORD PTR [rbx],rax
   14002f436:	lea    rax,[rip+0x1eaf3]        # 0x14004df30
   14002f43d:	mov    QWORD PTR [rbx+0x18],rax
   14002f441:	mov    rax,rbx
   14002f444:	mov    rbx,QWORD PTR [rsp+0x38]
   14002f449:	add    rsp,0x20
   14002f44d:	pop    rdi
   14002f44e:	ret    
   14002f44f:	int3   
   14002f450:	mov    QWORD PTR [rsp+0x8],rbx
   14002f455:	push   rdi
   14002f456:	sub    rsp,0x20
   14002f45a:	lea    rax,[rip+0x1eb2f]        # 0x14004df90
   14002f461:	mov    rbx,rcx
   14002f464:	mov    edi,edx
   14002f466:	mov    QWORD PTR [rcx],rax
   14002f469:	lea    rax,[rip+0x1ae20]        # 0x14004a290
   14002f470:	mov    QWORD PTR [rcx+0x18],rax
   14002f474:	mov    rcx,QWORD PTR [rcx+0x20]
   14002f478:	test   rcx,rcx
   14002f47b:	je     0x14002f48f
   14002f47d:	mov    rax,QWORD PTR [rcx]
   14002f480:	call   QWORD PTR [rax+0x20]
   14002f483:	test   al,al
   14002f485:	je     0x14002f48f
   14002f487:	mov    QWORD PTR [rbx+0x20],0x0
   14002f48f:	mov    rcx,rbx
   14002f492:	call   QWORD PTR [rip+0x1a400]        # 0x140049898
   14002f498:	test   dil,0x1
   14002f49c:	je     0x14002f4a6
   14002f49e:	mov    rcx,rbx
   14002f4a1:	call   0x14002b150
   14002f4a6:	mov    rax,rbx
   14002f4a9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f4ae:	add    rsp,0x20
   14002f4b2:	pop    rdi
   14002f4b3:	ret    
   14002f4b4:	int3   
   14002f4b5:	int3   
   14002f4b6:	int3   
   14002f4b7:	int3   
   14002f4b8:	int3   
   14002f4b9:	int3   
   14002f4ba:	int3   
   14002f4bb:	int3   
   14002f4bc:	int3   
   14002f4bd:	int3   
   14002f4be:	int3   
   14002f4bf:	int3   
   14002f4c0:	rex push rbx
   14002f4c2:	sub    rsp,0x20
   14002f4c6:	mov    rax,QWORD PTR [rcx]
   14002f4c9:	mov    rbx,rdx
   14002f4cc:	mov    DWORD PTR [rsp+0x30],0x0
   14002f4d4:	mov    edx,DWORD PTR [rax]
   14002f4d6:	mov    rcx,rbx
   14002f4d9:	call   0x140042ad0
   14002f4de:	mov    rax,rbx
   14002f4e1:	add    rsp,0x20
   14002f4e5:	pop    rbx
   14002f4e6:	ret    
   14002f4e7:	int3   
   14002f4e8:	int3   
   14002f4e9:	int3   
   14002f4ea:	int3   
   14002f4eb:	int3   
   14002f4ec:	int3   
   14002f4ed:	int3   
   14002f4ee:	int3   
   14002f4ef:	int3   
   14002f4f0:	sub    rcx,0x18
   14002f4f4:	jmp    0x14002f550
   14002f4f9:	int3   
   14002f4fa:	int3   
   14002f4fb:	int3   
   14002f4fc:	int3   
   14002f4fd:	int3   
   14002f4fe:	int3   
   14002f4ff:	int3   
   14002f500:	sub    rcx,0x40
   14002f504:	jmp    0x14002f550
   14002f509:	int3   
   14002f50a:	int3   
   14002f50b:	int3   
   14002f50c:	int3   
   14002f50d:	int3   
   14002f50e:	int3   
   14002f50f:	int3   
   14002f510:	rex push rbx
   14002f512:	sub    rsp,0x20
   14002f516:	mov    rbx,rcx
   14002f519:	call   0x14002e870
   14002f51e:	lea    rax,[rip+0x1eb1b]        # 0x14004e040
   14002f525:	mov    QWORD PTR [rbx],rax
   14002f528:	lea    rax,[rip+0x1eb01]        # 0x14004e030
   14002f52f:	mov    QWORD PTR [rbx+0x18],rax
   14002f533:	lea    rax,[rip+0x1ead6]        # 0x14004e010
   14002f53a:	mov    QWORD PTR [rbx+0x40],rax
   14002f53e:	mov    rax,rbx
   14002f541:	add    rsp,0x20
   14002f545:	pop    rbx
   14002f546:	ret    
   14002f547:	int3   
   14002f548:	int3   
   14002f549:	int3   
   14002f54a:	int3   
   14002f54b:	int3   
   14002f54c:	int3   
   14002f54d:	int3   
   14002f54e:	int3   
   14002f54f:	int3   
   14002f550:	mov    QWORD PTR [rsp+0x8],rbx
   14002f555:	push   rdi
   14002f556:	sub    rsp,0x20
   14002f55a:	lea    rax,[rip+0x1aca7]        # 0x14004a208
   14002f561:	mov    rbx,rcx
   14002f564:	mov    edi,edx
   14002f566:	mov    QWORD PTR [rcx+0x40],rax
   14002f56a:	lea    rax,[rip+0x1e9cf]        # 0x14004df40
   14002f571:	mov    QWORD PTR [rcx],rax
   14002f574:	lea    rax,[rip+0x1ad15]        # 0x14004a290
   14002f57b:	mov    QWORD PTR [rcx+0x18],rax
   14002f57f:	mov    rcx,QWORD PTR [rcx+0x20]
   14002f583:	test   rcx,rcx
   14002f586:	je     0x14002f59a
   14002f588:	mov    rax,QWORD PTR [rcx]
   14002f58b:	call   QWORD PTR [rax+0x20]
   14002f58e:	test   al,al
   14002f590:	je     0x14002f59a
   14002f592:	mov    QWORD PTR [rbx+0x20],0x0
   14002f59a:	mov    rcx,rbx
   14002f59d:	call   QWORD PTR [rip+0x1a2f5]        # 0x140049898
   14002f5a3:	test   dil,0x1
   14002f5a7:	je     0x14002f5b1
   14002f5a9:	mov    rcx,rbx
   14002f5ac:	call   0x14002b150
   14002f5b1:	mov    rax,rbx
   14002f5b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f5b9:	add    rsp,0x20
   14002f5bd:	pop    rdi
   14002f5be:	ret    
   14002f5bf:	int3   
   14002f5c0:	rex push rdi
   14002f5c2:	sub    rsp,0x30
   14002f5c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f5cf:	mov    QWORD PTR [rsp+0x40],rbx
   14002f5d4:	mov    rdi,rcx
   14002f5d7:	mov    ecx,0x48
   14002f5dc:	call   0x14002b1c2
   14002f5e1:	mov    rbx,rax
   14002f5e4:	mov    QWORD PTR [rsp+0x48],rax
   14002f5e9:	test   rax,rax
   14002f5ec:	je     0x14002f61c
   14002f5ee:	lea    rdx,[rdi-0x40]
   14002f5f2:	mov    rcx,rax
   14002f5f5:	call   0x14002e870
   14002f5fa:	lea    rax,[rip+0x1ea3f]        # 0x14004e040
   14002f601:	mov    QWORD PTR [rbx],rax
   14002f604:	lea    rax,[rip+0x1ea25]        # 0x14004e030
   14002f60b:	mov    QWORD PTR [rbx+0x18],rax
   14002f60f:	lea    rax,[rip+0x1e9fa]        # 0x14004e010
   14002f616:	mov    QWORD PTR [rbx+0x40],rax
   14002f61a:	jmp    0x14002f61e
   14002f61c:	xor    ebx,ebx
   14002f61e:	test   rbx,rbx
   14002f621:	je     0x14002f629
   14002f623:	lea    rax,[rbx+0x40]
   14002f627:	jmp    0x14002f62b
   14002f629:	xor    eax,eax
   14002f62b:	mov    rbx,QWORD PTR [rsp+0x40]
   14002f630:	add    rsp,0x30
   14002f634:	pop    rdi
   14002f635:	ret    
   14002f636:	int3   
   14002f637:	int3   
   14002f638:	int3   
   14002f639:	int3   
   14002f63a:	int3   
   14002f63b:	int3   
   14002f63c:	int3   
   14002f63d:	int3   
   14002f63e:	int3   
   14002f63f:	int3   
   14002f640:	rex push rbx
   14002f642:	sub    rsp,0x70
   14002f646:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f64f:	lea    rbx,[rcx-0x40]
   14002f653:	mov    rdx,rbx
   14002f656:	lea    rcx,[rsp+0x28]
   14002f65b:	call   QWORD PTR [rip+0x19f7f]        # 0x1400495e0
   14002f661:	lea    r11,[rip+0x1ab88]        # 0x14004a1f0
   14002f668:	mov    QWORD PTR [rsp+0x28],r11
   14002f66d:	test   rbx,rbx
   14002f670:	je     0x14002f676
   14002f672:	add    rbx,0x18
   14002f676:	lea    rax,[rip+0x1ac13]        # 0x14004a290
   14002f67d:	mov    QWORD PTR [rsp+0x40],rax
   14002f682:	mov    rcx,QWORD PTR [rbx+0x8]
   14002f686:	mov    QWORD PTR [rsp+0x48],rcx
   14002f68b:	test   rcx,rcx
   14002f68e:	je     0x14002f696
   14002f690:	mov    rax,QWORD PTR [rcx]
   14002f693:	call   QWORD PTR [rax+0x18]
   14002f696:	mov    rax,QWORD PTR [rbx+0x10]
   14002f69a:	mov    QWORD PTR [rsp+0x50],rax
   14002f69f:	mov    rax,QWORD PTR [rbx+0x18]
   14002f6a3:	mov    QWORD PTR [rsp+0x58],rax
   14002f6a8:	mov    eax,DWORD PTR [rbx+0x20]
   14002f6ab:	mov    DWORD PTR [rsp+0x60],eax
   14002f6af:	lea    rax,[rip+0x1e98a]        # 0x14004e040
   14002f6b6:	mov    QWORD PTR [rsp+0x28],rax
   14002f6bb:	lea    rax,[rip+0x1e96e]        # 0x14004e030
   14002f6c2:	mov    QWORD PTR [rsp+0x40],rax
   14002f6c7:	lea    rax,[rip+0x1e942]        # 0x14004e010
   14002f6ce:	mov    QWORD PTR [rsp+0x68],rax
   14002f6d3:	lea    rdx,[rip+0x33d26]        # 0x140063400
   14002f6da:	lea    rcx,[rsp+0x28]
   14002f6df:	call   0x14002b560
   14002f6e4:	int3   
   14002f6e5:	int3   
   14002f6e6:	int3   
   14002f6e7:	int3   
   14002f6e8:	int3   
   14002f6e9:	int3   
   14002f6ea:	int3   
   14002f6eb:	int3   
   14002f6ec:	int3   
   14002f6ed:	int3   
   14002f6ee:	int3   
   14002f6ef:	int3   
   14002f6f0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f6f5:	push   rdi
   14002f6f6:	sub    rsp,0x20
   14002f6fa:	xor    edi,edi
   14002f6fc:	mov    rbx,rcx
   14002f6ff:	mov    DWORD PTR [rsp+0x30],edi
   14002f703:	call   QWORD PTR [rip+0x19ed7]        # 0x1400495e0
   14002f709:	mov    QWORD PTR [rbx+0x20],rdi
   14002f70d:	mov    QWORD PTR [rbx+0x28],rdi
   14002f711:	mov    QWORD PTR [rbx+0x30],rdi
   14002f715:	mov    DWORD PTR [rbx+0x38],0xffffffff
   14002f71c:	lea    rax,[rip+0x1e86d]        # 0x14004df90
   14002f723:	mov    QWORD PTR [rbx],rax
   14002f726:	lea    rax,[rip+0x1e853]        # 0x14004df80
   14002f72d:	mov    QWORD PTR [rbx+0x18],rax
   14002f731:	mov    rax,rbx
   14002f734:	mov    rbx,QWORD PTR [rsp+0x38]
   14002f739:	add    rsp,0x20
   14002f73d:	pop    rdi
   14002f73e:	ret    
   14002f73f:	int3   
   14002f740:	sub    rsp,0x38
   14002f744:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f74d:	nop    DWORD PTR [rax]
   14002f750:	cmp    rcx,rdx
   14002f753:	je     0x14002f77a
   14002f755:	test   r8,r8
   14002f758:	je     0x14002f770
   14002f75a:	mov    rax,QWORD PTR [rcx]
   14002f75d:	mov    QWORD PTR [r8],rax
   14002f760:	mov    rax,QWORD PTR [rcx+0x8]
   14002f764:	mov    QWORD PTR [r8+0x8],rax
   14002f768:	movzx  eax,BYTE PTR [rcx+0x10]
   14002f76c:	mov    BYTE PTR [r8+0x10],al
   14002f770:	add    r8,0x18
   14002f774:	add    rcx,0x18
   14002f778:	jmp    0x14002f750
   14002f77a:	mov    rax,r8
   14002f77d:	add    rsp,0x38
   14002f781:	ret    
   14002f782:	int3   
   14002f783:	int3   
   14002f784:	int3   
   14002f785:	int3   
   14002f786:	int3   
   14002f787:	int3   
   14002f788:	int3   
   14002f789:	int3   
   14002f78a:	int3   
   14002f78b:	int3   
   14002f78c:	int3   
   14002f78d:	int3   
   14002f78e:	int3   
   14002f78f:	int3   
   14002f790:	rex push rbx
   14002f792:	sub    rsp,0x20
   14002f796:	mov    rax,QWORD PTR [rcx]
   14002f799:	mov    rbx,rcx
   14002f79c:	mov    edx,DWORD PTR [rax+0x30]
   14002f79f:	and    edx,0xa03
   14002f7a5:	cmp    edx,0x800
   14002f7ab:	jne    0x14002f7c5
   14002f7ad:	mov    rax,QWORD PTR [rcx+0x60]
   14002f7b1:	mov    r8d,DWORD PTR [rcx+0x38]
   14002f7b5:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f7b9:	movzx  edx,BYTE PTR [rax]
   14002f7bc:	call   0x14002cbd0
   14002f7c1:	test   al,al
   14002f7c3:	jne    0x14002f7d4
   14002f7c5:	mov    rax,QWORD PTR [rbx+0x60]
   14002f7c9:	mov    rcx,rbx
   14002f7cc:	movzx  edx,BYTE PTR [rax]
   14002f7cf:	call   0x14002ec40
   14002f7d4:	mov    al,0x1
   14002f7d6:	inc    QWORD PTR [rbx+0x60]
   14002f7da:	add    rsp,0x20
   14002f7de:	pop    rbx
   14002f7df:	ret    
   14002f7e0:	rex push rbx
   14002f7e2:	sub    rsp,0x20
   14002f7e6:	mov    rbx,rdx
   14002f7e9:	mov    edx,DWORD PTR [rcx]
   14002f7eb:	mov    DWORD PTR [rsp+0x38],0x0
   14002f7f3:	mov    rcx,rbx
   14002f7f6:	call   0x140042ad0
   14002f7fb:	mov    rax,rbx
   14002f7fe:	add    rsp,0x20
   14002f802:	pop    rbx
   14002f803:	ret    
   14002f804:	int3   
   14002f805:	int3   
   14002f806:	int3   
   14002f807:	int3   
   14002f808:	int3   
   14002f809:	int3   
   14002f80a:	int3   
   14002f80b:	int3   
   14002f80c:	int3   
   14002f80d:	int3   
   14002f80e:	int3   
   14002f80f:	int3   
   14002f810:	sub    rcx,0x18
   14002f814:	jmp    0x14002f870
   14002f819:	int3   
   14002f81a:	int3   
   14002f81b:	int3   
   14002f81c:	int3   
   14002f81d:	int3   
   14002f81e:	int3   
   14002f81f:	int3   
   14002f820:	sub    rcx,0x40
   14002f824:	jmp    0x14002f870
   14002f829:	int3   
   14002f82a:	int3   
   14002f82b:	int3   
   14002f82c:	int3   
   14002f82d:	int3   
   14002f82e:	int3   
   14002f82f:	int3   
   14002f830:	rex push rbx
   14002f832:	sub    rsp,0x20
   14002f836:	mov    rbx,rcx
   14002f839:	call   0x14002e9c0
   14002f83e:	lea    rax,[rip+0x1e8bb]        # 0x14004e100
   14002f845:	mov    QWORD PTR [rbx],rax
   14002f848:	lea    rax,[rip+0x1e8a1]        # 0x14004e0f0
   14002f84f:	mov    QWORD PTR [rbx+0x18],rax
   14002f853:	lea    rax,[rip+0x1e876]        # 0x14004e0d0
   14002f85a:	mov    QWORD PTR [rbx+0x40],rax
   14002f85e:	mov    rax,rbx
   14002f861:	add    rsp,0x20
   14002f865:	pop    rbx
   14002f866:	ret    
   14002f867:	int3   
   14002f868:	int3   
   14002f869:	int3   
   14002f86a:	int3   
   14002f86b:	int3   
   14002f86c:	int3   
   14002f86d:	int3   
   14002f86e:	int3   
   14002f86f:	int3   
   14002f870:	mov    QWORD PTR [rsp+0x8],rbx
   14002f875:	push   rdi
   14002f876:	sub    rsp,0x20
   14002f87a:	lea    rax,[rip+0x1a987]        # 0x14004a208
   14002f881:	mov    rbx,rcx
   14002f884:	mov    edi,edx
   14002f886:	mov    QWORD PTR [rcx+0x40],rax
   14002f88a:	lea    rax,[rip+0x1e6ff]        # 0x14004df90
   14002f891:	mov    QWORD PTR [rcx],rax
   14002f894:	lea    rax,[rip+0x1a9f5]        # 0x14004a290
   14002f89b:	mov    QWORD PTR [rcx+0x18],rax
   14002f89f:	mov    rcx,QWORD PTR [rcx+0x20]
   14002f8a3:	test   rcx,rcx
   14002f8a6:	je     0x14002f8ba
   14002f8a8:	mov    rax,QWORD PTR [rcx]
   14002f8ab:	call   QWORD PTR [rax+0x20]
   14002f8ae:	test   al,al
   14002f8b0:	je     0x14002f8ba
   14002f8b2:	mov    QWORD PTR [rbx+0x20],0x0
   14002f8ba:	mov    rcx,rbx
   14002f8bd:	call   QWORD PTR [rip+0x19fd5]        # 0x140049898
   14002f8c3:	test   dil,0x1
   14002f8c7:	je     0x14002f8d1
   14002f8c9:	mov    rcx,rbx
   14002f8cc:	call   0x14002b150
   14002f8d1:	mov    rax,rbx
   14002f8d4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f8d9:	add    rsp,0x20
   14002f8dd:	pop    rdi
   14002f8de:	ret    
   14002f8df:	int3   
   14002f8e0:	rex push rdi
   14002f8e2:	sub    rsp,0x30
   14002f8e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f8ef:	mov    QWORD PTR [rsp+0x40],rbx
   14002f8f4:	mov    rdi,rcx
   14002f8f7:	mov    ecx,0x48
   14002f8fc:	call   0x14002b1c2
   14002f901:	mov    rbx,rax
   14002f904:	mov    QWORD PTR [rsp+0x48],rax
   14002f909:	test   rax,rax
   14002f90c:	je     0x14002f93c
   14002f90e:	lea    rdx,[rdi-0x40]
   14002f912:	mov    rcx,rax
   14002f915:	call   0x14002e9c0
   14002f91a:	lea    rax,[rip+0x1e7df]        # 0x14004e100
   14002f921:	mov    QWORD PTR [rbx],rax
   14002f924:	lea    rax,[rip+0x1e7c5]        # 0x14004e0f0
   14002f92b:	mov    QWORD PTR [rbx+0x18],rax
   14002f92f:	lea    rax,[rip+0x1e79a]        # 0x14004e0d0
   14002f936:	mov    QWORD PTR [rbx+0x40],rax
   14002f93a:	jmp    0x14002f93e
   14002f93c:	xor    ebx,ebx
   14002f93e:	test   rbx,rbx
   14002f941:	je     0x14002f949
   14002f943:	lea    rax,[rbx+0x40]
   14002f947:	jmp    0x14002f94b
   14002f949:	xor    eax,eax
   14002f94b:	mov    rbx,QWORD PTR [rsp+0x40]
   14002f950:	add    rsp,0x30
   14002f954:	pop    rdi
   14002f955:	ret    
   14002f956:	int3   
   14002f957:	int3   
   14002f958:	int3   
   14002f959:	int3   
   14002f95a:	int3   
   14002f95b:	int3   
   14002f95c:	int3   
   14002f95d:	int3   
   14002f95e:	int3   
   14002f95f:	int3   
   14002f960:	rex push rbx
   14002f962:	sub    rsp,0x70
   14002f966:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f96f:	lea    rbx,[rcx-0x40]
   14002f973:	mov    rdx,rbx
   14002f976:	lea    rcx,[rsp+0x28]
   14002f97b:	call   QWORD PTR [rip+0x19c5f]        # 0x1400495e0
   14002f981:	lea    r11,[rip+0x1e4a8]        # 0x14004de30
   14002f988:	mov    QWORD PTR [rsp+0x28],r11
   14002f98d:	test   rbx,rbx
   14002f990:	je     0x14002f996
   14002f992:	add    rbx,0x18
   14002f996:	lea    rax,[rip+0x1a8f3]        # 0x14004a290
   14002f99d:	mov    QWORD PTR [rsp+0x40],rax
   14002f9a2:	mov    rcx,QWORD PTR [rbx+0x8]
   14002f9a6:	mov    QWORD PTR [rsp+0x48],rcx
   14002f9ab:	test   rcx,rcx
   14002f9ae:	je     0x14002f9b6
   14002f9b0:	mov    rax,QWORD PTR [rcx]
   14002f9b3:	call   QWORD PTR [rax+0x18]
   14002f9b6:	mov    rax,QWORD PTR [rbx+0x10]
   14002f9ba:	mov    QWORD PTR [rsp+0x50],rax
   14002f9bf:	mov    rax,QWORD PTR [rbx+0x18]
   14002f9c3:	mov    QWORD PTR [rsp+0x58],rax
   14002f9c8:	mov    eax,DWORD PTR [rbx+0x20]
   14002f9cb:	mov    DWORD PTR [rsp+0x60],eax
   14002f9cf:	lea    rax,[rip+0x1e72a]        # 0x14004e100
   14002f9d6:	mov    QWORD PTR [rsp+0x28],rax
   14002f9db:	lea    rax,[rip+0x1e70e]        # 0x14004e0f0
   14002f9e2:	mov    QWORD PTR [rsp+0x40],rax
   14002f9e7:	lea    rax,[rip+0x1e6e2]        # 0x14004e0d0
   14002f9ee:	mov    QWORD PTR [rsp+0x68],rax
   14002f9f3:	lea    rdx,[rip+0x33aae]        # 0x1400634a8
   14002f9fa:	lea    rcx,[rsp+0x28]
   14002f9ff:	call   0x14002b560
   14002fa04:	int3   
   14002fa05:	int3   
   14002fa06:	int3   
   14002fa07:	int3   
   14002fa08:	int3   
   14002fa09:	int3   
   14002fa0a:	int3   
   14002fa0b:	int3   
   14002fa0c:	int3   
   14002fa0d:	int3   
   14002fa0e:	int3   
   14002fa0f:	int3   
   14002fa10:	push   r12
   14002fa12:	sub    rsp,0x30
   14002fa16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fa1f:	mov    QWORD PTR [rsp+0x40],rbx
   14002fa24:	mov    QWORD PTR [rsp+0x50],rsi
   14002fa29:	mov    QWORD PTR [rsp+0x58],rdi
   14002fa2e:	mov    rdi,rdx
   14002fa31:	mov    rbx,rcx
   14002fa34:	movabs rax,0x1fffffffffffffff
   14002fa3e:	cmp    rdx,rax
   14002fa41:	jbe    0x14002fa51
   14002fa43:	lea    rcx,[rip+0x20f0e]        # 0x140050958
   14002fa4a:	call   QWORD PTR [rip+0x19b48]        # 0x140049598
   14002fa50:	int3   
   14002fa51:	mov    rax,QWORD PTR [rcx+0x10]
   14002fa55:	sub    rax,QWORD PTR [rcx]
   14002fa58:	sar    rax,0x3
   14002fa5c:	cmp    rax,rdx
   14002fa5f:	jae    0x14002fab5
   14002fa61:	add    rcx,0x18
   14002fa65:	call   0x14002d9a0
   14002fa6a:	mov    r12,rax
   14002fa6d:	mov    QWORD PTR [rsp+0x48],rax
   14002fa72:	mov    r8,QWORD PTR [rbx+0x8]
   14002fa76:	mov    rdx,QWORD PTR [rbx]
   14002fa79:	sub    r8,rdx
   14002fa7c:	and    r8,0xfffffffffffffff8
   14002fa80:	mov    rcx,rax
   14002fa83:	call   QWORD PTR [rip+0x19b67]        # 0x1400495f0
   14002fa89:	nop
   14002fa8a:	mov    rcx,QWORD PTR [rbx]
   14002fa8d:	mov    rsi,QWORD PTR [rbx+0x8]
   14002fa91:	sub    rsi,rcx
   14002fa94:	sar    rsi,0x3
   14002fa98:	test   rcx,rcx
   14002fa9b:	je     0x14002faa2
   14002fa9d:	call   0x14002b150
   14002faa2:	lea    rax,[r12+rdi*8]
   14002faa6:	mov    QWORD PTR [rbx+0x10],rax
   14002faaa:	lea    rax,[r12+rsi*8]
   14002faae:	mov    QWORD PTR [rbx+0x8],rax
   14002fab2:	mov    QWORD PTR [rbx],r12
   14002fab5:	mov    rbx,QWORD PTR [rsp+0x40]
   14002faba:	mov    rsi,QWORD PTR [rsp+0x50]
   14002fabf:	mov    rdi,QWORD PTR [rsp+0x58]
   14002fac4:	add    rsp,0x30
   14002fac8:	pop    r12
   14002faca:	ret    
   14002facb:	int3   
   14002facc:	int3   
   14002facd:	int3   
   14002face:	int3   
   14002facf:	int3   
   14002fad0:	rex push rbx
   14002fad2:	push   rsi
   14002fad3:	push   r12
   14002fad5:	sub    rsp,0x20
   14002fad9:	mov    r12,QWORD PTR [rcx+0x8]
   14002fadd:	mov    rsi,rdx
   14002fae0:	mov    rbx,QWORD PTR [r12+0x8]
   14002fae5:	cmp    BYTE PTR [rbx+0x49],0x0
   14002fae9:	jne    0x14002fb71
   14002faef:	mov    QWORD PTR [rsp+0x40],rbp
   14002faf4:	mov    rbp,QWORD PTR [rdx+0x10]
   14002faf8:	mov    QWORD PTR [rsp+0x48],rdi
   14002fafd:	mov    QWORD PTR [rsp+0x50],r13
   14002fb02:	mov    r13,QWORD PTR [rdx+0x18]
   14002fb06:	lea    rcx,[rbx+0x18]
   14002fb0a:	cmp    r13,0x10
   14002fb0e:	jb     0x14002fb15
   14002fb10:	mov    rdx,QWORD PTR [rsi]
   14002fb13:	jmp    0x14002fb18
   14002fb15:	mov    rdx,rsi
   14002fb18:	mov    rdi,QWORD PTR [rcx+0x10]
   14002fb1c:	cmp    rdi,rdi
   14002fb1f:	cmp    QWORD PTR [rcx+0x18],0x10
   14002fb24:	jb     0x14002fb29
   14002fb26:	mov    rcx,QWORD PTR [rcx]
   14002fb29:	mov    r8,rbp
   14002fb2c:	cmp    rdi,rbp
   14002fb2f:	cmovb  r8,rdi
   14002fb33:	call   0x14002b13e
   14002fb38:	movsxd rcx,eax
   14002fb3b:	test   eax,eax
   14002fb3d:	jne    0x14002fb4c
   14002fb3f:	cmp    rdi,rbp
   14002fb42:	jb     0x14002fb58
   14002fb44:	cmp    rdi,rbp
   14002fb47:	setne  al
   14002fb4a:	mov    ecx,eax
   14002fb4c:	test   ecx,ecx
   14002fb4e:	js     0x14002fb58
   14002fb50:	mov    r12,rbx
   14002fb53:	mov    rbx,QWORD PTR [rbx]
   14002fb56:	jmp    0x14002fb5c
   14002fb58:	mov    rbx,QWORD PTR [rbx+0x10]
   14002fb5c:	cmp    BYTE PTR [rbx+0x49],0x0
   14002fb60:	je     0x14002fb06
   14002fb62:	mov    r13,QWORD PTR [rsp+0x50]
   14002fb67:	mov    rdi,QWORD PTR [rsp+0x48]
   14002fb6c:	mov    rbp,QWORD PTR [rsp+0x40]
   14002fb71:	mov    rax,r12
   14002fb74:	add    rsp,0x20
   14002fb78:	pop    r12
   14002fb7a:	pop    rsi
   14002fb7b:	pop    rbx
   14002fb7c:	ret    
   14002fb7d:	int3   
   14002fb7e:	int3   
   14002fb7f:	int3   
   14002fb80:	mov    QWORD PTR [rsp+0x20],r9
   14002fb85:	mov    QWORD PTR [rsp+0x10],rdx
   14002fb8a:	sub    rsp,0x28
   14002fb8e:	cmp    rcx,r8
   14002fb91:	je     0x14002fbc8
   14002fb93:	mov    r10,QWORD PTR [rcx+0x8]
   14002fb97:	mov    rdx,QWORD PTR [rsp+0x58]
   14002fb9c:	movabs rax,0xaaaaaaaaaaaaaa9
   14002fba6:	sub    rax,r10
   14002fba9:	cmp    rax,rdx
   14002fbac:	jae    0x14002fbbc
   14002fbae:	lea    rcx,[rip+0x1e413]        # 0x14004dfc8
   14002fbb5:	call   QWORD PTR [rip+0x199dd]        # 0x140049598
   14002fbbb:	int3   
   14002fbbc:	lea    rax,[r10+rdx*1]
   14002fbc0:	mov    QWORD PTR [rcx+0x8],rax
   14002fbc4:	sub    QWORD PTR [r8+0x8],rdx
   14002fbc8:	mov    rcx,QWORD PTR [r9+0x8]
   14002fbcc:	mov    rax,QWORD PTR [rsp+0x50]
   14002fbd1:	mov    QWORD PTR [rcx],rax
   14002fbd4:	mov    rax,QWORD PTR [rsp+0x50]
   14002fbd9:	mov    rcx,QWORD PTR [rax+0x8]
   14002fbdd:	mov    rax,QWORD PTR [rsp+0x38]
   14002fbe2:	mov    QWORD PTR [rcx],rax
   14002fbe5:	mov    rax,QWORD PTR [rsp+0x38]
   14002fbea:	mov    rcx,QWORD PTR [rax+0x8]
   14002fbee:	mov    rax,QWORD PTR [rsp+0x48]
   14002fbf3:	mov    QWORD PTR [rcx],rax
   14002fbf6:	mov    rax,QWORD PTR [rsp+0x50]
   14002fbfb:	mov    rdx,QWORD PTR [rsp+0x38]
   14002fc00:	mov    rcx,QWORD PTR [rax+0x8]
   14002fc04:	mov    r8,QWORD PTR [rdx+0x8]
   14002fc08:	mov    QWORD PTR [rdx+0x8],rcx
   14002fc0c:	mov    rax,QWORD PTR [rsp+0x48]
   14002fc11:	mov    rcx,QWORD PTR [rax+0x8]
   14002fc15:	mov    rax,QWORD PTR [rsp+0x50]
   14002fc1a:	mov    QWORD PTR [rax+0x8],rcx
   14002fc1e:	mov    rax,QWORD PTR [rsp+0x48]
   14002fc23:	mov    QWORD PTR [rax+0x8],r8
   14002fc27:	add    rsp,0x28
   14002fc2b:	ret    
   14002fc2c:	int3   
   14002fc2d:	int3   
   14002fc2e:	int3   
   14002fc2f:	int3   
   14002fc30:	mov    QWORD PTR [rsp+0x18],r8
   14002fc35:	push   rsi
   14002fc36:	push   r12
   14002fc38:	sub    rsp,0x28
   14002fc3c:	cmp    BYTE PTR [r8+0x29],0x0
   14002fc41:	mov    r12,rdx
   14002fc44:	mov    rsi,rcx
   14002fc47:	je     0x14002fc57
   14002fc49:	lea    rcx,[rip+0x20cc0]        # 0x140050910
   14002fc50:	call   QWORD PTR [rip+0x1995a]        # 0x1400495b0
   14002fc56:	int3   
   14002fc57:	mov    rdx,QWORD PTR [r8+0x10]
   14002fc5b:	lea    r9,[r8+0x10]
   14002fc5f:	mov    QWORD PTR [rsp+0x48],rbp
   14002fc64:	cmp    BYTE PTR [rdx+0x29],0x0
   14002fc68:	mov    rbp,r8
   14002fc6b:	jne    0x14002fc8e
   14002fc6d:	mov    rax,QWORD PTR [rdx]
   14002fc70:	cmp    BYTE PTR [rax+0x29],0x0
   14002fc74:	jne    0x14002fcb0
   14002fc76:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002fc80:	mov    rdx,rax
   14002fc83:	mov    rax,QWORD PTR [rax]
   14002fc86:	cmp    BYTE PTR [rax+0x29],0x0
   14002fc8a:	je     0x14002fc80
   14002fc8c:	jmp    0x14002fcb0
   14002fc8e:	mov    rdx,QWORD PTR [r8+0x8]
   14002fc92:	cmp    BYTE PTR [rdx+0x29],0x0
   14002fc96:	jne    0x14002fcb0
   14002fc98:	cmp    r8,QWORD PTR [rdx+0x10]
   14002fc9c:	jne    0x14002fcb0
   14002fc9e:	mov    QWORD PTR [rsp+0x50],rdx
   14002fca3:	mov    r8,rdx
   14002fca6:	mov    rdx,QWORD PTR [rdx+0x8]
   14002fcaa:	cmp    BYTE PTR [rdx+0x29],0x0
   14002fcae:	je     0x14002fc98
   14002fcb0:	mov    QWORD PTR [rsp+0x50],rdx
   14002fcb5:	mov    rcx,QWORD PTR [rbp+0x0]
   14002fcb9:	mov    QWORD PTR [rsp+0x40],rbx
   14002fcbe:	cmp    BYTE PTR [rcx+0x29],0x0
   14002fcc2:	mov    QWORD PTR [rsp+0x20],rdi
   14002fcc7:	je     0x14002fcce
   14002fcc9:	mov    rdi,QWORD PTR [r9]
   14002fccc:	jmp    0x14002fce9
   14002fcce:	mov    rax,QWORD PTR [r9]
   14002fcd1:	cmp    BYTE PTR [rax+0x29],0x0
   14002fcd5:	je     0x14002fcdc
   14002fcd7:	mov    rdi,rcx
   14002fcda:	jmp    0x14002fce9
   14002fcdc:	mov    rdi,QWORD PTR [rdx+0x10]
   14002fce0:	cmp    rdx,rbp
   14002fce3:	jne    0x14002fd93
   14002fce9:	cmp    BYTE PTR [rdi+0x29],0x0
   14002fced:	mov    rbx,QWORD PTR [rbp+0x8]
   14002fcf1:	jne    0x14002fcf7
   14002fcf3:	mov    QWORD PTR [rdi+0x8],rbx
   14002fcf7:	mov    rax,QWORD PTR [rsi+0x8]
   14002fcfb:	cmp    QWORD PTR [rax+0x8],rbp
   14002fcff:	jne    0x14002fd07
   14002fd01:	mov    QWORD PTR [rax+0x8],rdi
   14002fd05:	jmp    0x14002fd15
   14002fd07:	cmp    QWORD PTR [rbx],rbp
   14002fd0a:	jne    0x14002fd11
   14002fd0c:	mov    QWORD PTR [rbx],rdi
   14002fd0f:	jmp    0x14002fd15
   14002fd11:	mov    QWORD PTR [rbx+0x10],rdi
   14002fd15:	mov    rdx,QWORD PTR [rsi+0x8]
   14002fd19:	cmp    QWORD PTR [rdx],rbp
   14002fd1c:	jne    0x14002fd4f
   14002fd1e:	cmp    BYTE PTR [rdi+0x29],0x0
   14002fd22:	je     0x14002fd29
   14002fd24:	mov    rcx,rbx
   14002fd27:	jmp    0x14002fd4c
   14002fd29:	mov    rax,QWORD PTR [rdi]
   14002fd2c:	mov    rcx,rdi
   14002fd2f:	cmp    BYTE PTR [rax+0x29],0x0
   14002fd33:	jne    0x14002fd4c
   14002fd35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002fd40:	mov    rcx,rax
   14002fd43:	mov    rax,QWORD PTR [rax]
   14002fd46:	cmp    BYTE PTR [rax+0x29],0x0
   14002fd4a:	je     0x14002fd40
   14002fd4c:	mov    QWORD PTR [rdx],rcx
   14002fd4f:	mov    rdx,QWORD PTR [rsi+0x8]
   14002fd53:	cmp    QWORD PTR [rdx+0x10],rbp
   14002fd57:	jne    0x14002fdff
   14002fd5d:	cmp    BYTE PTR [rdi+0x29],0x0
   14002fd61:	je     0x14002fd6f
   14002fd63:	mov    rcx,rbx
   14002fd66:	mov    QWORD PTR [rdx+0x10],rbx
   14002fd6a:	jmp    0x14002fdff
   14002fd6f:	mov    rax,QWORD PTR [rdi+0x10]
   14002fd73:	mov    rcx,rdi
   14002fd76:	cmp    BYTE PTR [rax+0x29],0x0
   14002fd7a:	jne    0x14002fd8d
   14002fd7c:	nop    DWORD PTR [rax+0x0]
   14002fd80:	mov    rcx,rax
   14002fd83:	mov    rax,QWORD PTR [rax+0x10]
   14002fd87:	cmp    BYTE PTR [rax+0x29],0x0
   14002fd8b:	je     0x14002fd80
   14002fd8d:	mov    QWORD PTR [rdx+0x10],rcx
   14002fd91:	jmp    0x14002fdff
   14002fd93:	mov    QWORD PTR [rcx+0x8],rdx
   14002fd97:	mov    rax,QWORD PTR [rbp+0x0]
   14002fd9b:	mov    QWORD PTR [rdx],rax
   14002fd9e:	cmp    rdx,QWORD PTR [r9]
   14002fda1:	jne    0x14002fda8
   14002fda3:	mov    rbx,rdx
   14002fda6:	jmp    0x14002fdc7
   14002fda8:	cmp    BYTE PTR [rdi+0x29],0x0
   14002fdac:	mov    rbx,QWORD PTR [rdx+0x8]
   14002fdb0:	jne    0x14002fdb6
   14002fdb2:	mov    QWORD PTR [rdi+0x8],rbx
   14002fdb6:	mov    QWORD PTR [rbx],rdi
   14002fdb9:	mov    rax,QWORD PTR [r9]
   14002fdbc:	mov    QWORD PTR [rdx+0x10],rax
   14002fdc0:	mov    rax,QWORD PTR [r9]
   14002fdc3:	mov    QWORD PTR [rax+0x8],rdx
   14002fdc7:	mov    rax,QWORD PTR [rsi+0x8]
   14002fdcb:	cmp    QWORD PTR [rax+0x8],rbp
   14002fdcf:	jne    0x14002fdd7
   14002fdd1:	mov    QWORD PTR [rax+0x8],rdx
   14002fdd5:	jmp    0x14002fde9
   14002fdd7:	mov    rax,QWORD PTR [rbp+0x8]
   14002fddb:	cmp    QWORD PTR [rax],rbp
   14002fdde:	jne    0x14002fde5
   14002fde0:	mov    QWORD PTR [rax],rdx
   14002fde3:	jmp    0x14002fde9
   14002fde5:	mov    QWORD PTR [rax+0x10],rdx
   14002fde9:	mov    rax,QWORD PTR [rbp+0x8]
   14002fded:	mov    QWORD PTR [rdx+0x8],rax
   14002fdf1:	movzx  eax,BYTE PTR [rbp+0x28]
   14002fdf5:	movzx  ecx,BYTE PTR [rdx+0x28]
   14002fdf9:	mov    BYTE PTR [rdx+0x28],al
   14002fdfc:	mov    BYTE PTR [rbp+0x28],cl
   14002fdff:	cmp    BYTE PTR [rbp+0x28],0x1
   14002fe03:	jne    0x14002ff4f
   14002fe09:	mov    rax,QWORD PTR [rsi+0x8]
   14002fe0d:	cmp    rdi,QWORD PTR [rax+0x8]
   14002fe11:	je     0x14002ff4b
   14002fe17:	nop    WORD PTR [rax+rax*1+0x0]
   14002fe20:	cmp    BYTE PTR [rdi+0x28],0x1
   14002fe24:	jne    0x14002ff4b
   14002fe2a:	mov    rcx,QWORD PTR [rbx]
   14002fe2d:	cmp    rdi,rcx
   14002fe30:	jne    0x14002febb
   14002fe36:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fe3a:	cmp    BYTE PTR [rcx+0x28],0x0
   14002fe3e:	jne    0x14002fe57
   14002fe40:	mov    BYTE PTR [rcx+0x28],0x1
   14002fe44:	mov    rdx,rbx
   14002fe47:	mov    rcx,rsi
   14002fe4a:	mov    BYTE PTR [rbx+0x28],0x0
   14002fe4e:	call   0x14002ed40
   14002fe53:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fe57:	cmp    BYTE PTR [rcx+0x29],0x0
   14002fe5b:	jne    0x14002fef4
   14002fe61:	mov    rax,QWORD PTR [rcx]
   14002fe64:	cmp    BYTE PTR [rax+0x28],0x1
   14002fe68:	jne    0x14002fe74
   14002fe6a:	mov    rax,QWORD PTR [rcx+0x10]
   14002fe6e:	cmp    BYTE PTR [rax+0x28],0x1
   14002fe72:	je     0x14002fef0
   14002fe74:	mov    rax,QWORD PTR [rcx+0x10]
   14002fe78:	cmp    BYTE PTR [rax+0x28],0x1
   14002fe7c:	jne    0x14002fe98
   14002fe7e:	mov    rax,QWORD PTR [rcx]
   14002fe81:	mov    rdx,rcx
   14002fe84:	mov    BYTE PTR [rax+0x28],0x1
   14002fe88:	mov    BYTE PTR [rcx+0x28],0x0
   14002fe8c:	mov    rcx,rsi
   14002fe8f:	call   0x14002da10
   14002fe94:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fe98:	movzx  eax,BYTE PTR [rbx+0x28]
   14002fe9c:	mov    rdx,rbx
   14002fe9f:	mov    BYTE PTR [rcx+0x28],al
   14002fea2:	mov    BYTE PTR [rbx+0x28],0x1
   14002fea6:	mov    rax,QWORD PTR [rcx+0x10]
   14002feaa:	mov    rcx,rsi
   14002fead:	mov    BYTE PTR [rax+0x28],0x1
   14002feb1:	call   0x14002ed40
   14002feb6:	jmp    0x14002ff4b
   14002febb:	cmp    BYTE PTR [rcx+0x28],0x0
   14002febf:	jne    0x14002fed7
   14002fec1:	mov    BYTE PTR [rcx+0x28],0x1
   14002fec5:	mov    rdx,rbx
   14002fec8:	mov    rcx,rsi
   14002fecb:	mov    BYTE PTR [rbx+0x28],0x0
   14002fecf:	call   0x14002da10
   14002fed4:	mov    rcx,QWORD PTR [rbx]
   14002fed7:	cmp    BYTE PTR [rcx+0x29],0x0
   14002fedb:	jne    0x14002fef4
   14002fedd:	mov    rax,QWORD PTR [rcx+0x10]
   14002fee1:	cmp    BYTE PTR [rax+0x28],0x1
   14002fee5:	jne    0x14002ff0b
   14002fee7:	mov    rax,QWORD PTR [rcx]
   14002feea:	cmp    BYTE PTR [rax+0x28],0x1
   14002feee:	jne    0x14002ff0b
   14002fef0:	mov    BYTE PTR [rcx+0x28],0x0
   14002fef4:	mov    rax,QWORD PTR [rsi+0x8]
   14002fef8:	mov    rdi,rbx
   14002fefb:	mov    rbx,QWORD PTR [rbx+0x8]
   14002feff:	cmp    rdi,QWORD PTR [rax+0x8]
   14002ff03:	jne    0x14002fe20
   14002ff09:	jmp    0x14002ff4b
   14002ff0b:	mov    rax,QWORD PTR [rcx]
   14002ff0e:	cmp    BYTE PTR [rax+0x28],0x1
   14002ff12:	jne    0x14002ff2e
   14002ff14:	mov    rax,QWORD PTR [rcx+0x10]
   14002ff18:	mov    rdx,rcx
   14002ff1b:	mov    BYTE PTR [rax+0x28],0x1
   14002ff1f:	mov    BYTE PTR [rcx+0x28],0x0
   14002ff23:	mov    rcx,rsi
   14002ff26:	call   0x14002ed40
   14002ff2b:	mov    rcx,QWORD PTR [rbx]
   14002ff2e:	movzx  eax,BYTE PTR [rbx+0x28]
   14002ff32:	mov    rdx,rbx
   14002ff35:	mov    BYTE PTR [rcx+0x28],al
   14002ff38:	mov    BYTE PTR [rbx+0x28],0x1
   14002ff3c:	mov    rax,QWORD PTR [rcx]
   14002ff3f:	mov    rcx,rsi
   14002ff42:	mov    BYTE PTR [rax+0x28],0x1
   14002ff46:	call   0x14002da10
   14002ff4b:	mov    BYTE PTR [rdi+0x28],0x1
   14002ff4f:	mov    rcx,rbp
   14002ff52:	call   0x14002b150
   14002ff57:	mov    rax,QWORD PTR [rsi+0x10]
   14002ff5b:	mov    rdi,QWORD PTR [rsp+0x20]
   14002ff60:	mov    rbp,QWORD PTR [rsp+0x48]
   14002ff65:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ff6a:	test   rax,rax
   14002ff6d:	je     0x14002ff76
   14002ff6f:	dec    rax
   14002ff72:	mov    QWORD PTR [rsi+0x10],rax
   14002ff76:	mov    rax,QWORD PTR [rsp+0x50]
   14002ff7b:	mov    QWORD PTR [r12],rax
   14002ff7f:	mov    rax,r12
   14002ff82:	add    rsp,0x28
   14002ff86:	pop    r12
   14002ff88:	pop    rsi
   14002ff89:	ret    
   14002ff8a:	int3   
   14002ff8b:	int3   
   14002ff8c:	int3   
   14002ff8d:	int3   
   14002ff8e:	int3   
   14002ff8f:	int3   
   14002ff90:	mov    QWORD PTR [rsp+0x8],rbx
   14002ff95:	mov    QWORD PTR [rsp+0x10],rsi
   14002ff9a:	push   rdi
   14002ff9b:	sub    rsp,0x20
   14002ff9f:	cmp    BYTE PTR [rdx+0x29],0x0
   14002ffa3:	mov    rdi,rdx
   14002ffa6:	mov    rsi,rcx
   14002ffa9:	mov    rbx,rdx
   14002ffac:	jne    0x14002ffd0
   14002ffae:	xchg   ax,ax
   14002ffb0:	mov    rdx,QWORD PTR [rbx+0x10]
   14002ffb4:	mov    rcx,rsi
   14002ffb7:	call   0x14002ff90
   14002ffbc:	mov    rbx,QWORD PTR [rbx]
   14002ffbf:	mov    rcx,rdi
   14002ffc2:	call   0x14002b150
   14002ffc7:	cmp    BYTE PTR [rbx+0x29],0x0
   14002ffcb:	mov    rdi,rbx
   14002ffce:	je     0x14002ffb0
   14002ffd0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ffd5:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ffda:	add    rsp,0x20
   14002ffde:	pop    rdi
   14002ffdf:	ret    
   14002ffe0:	rex push rbp
   14002ffe2:	push   rsi
   14002ffe3:	push   rdi
   14002ffe4:	push   r12
   14002ffe6:	push   r13
   14002ffe8:	push   r14
   14002ffea:	push   r15
   14002ffec:	lea    rbp,[rsp-0x27]
   14002fff1:	sub    rsp,0xc0
   14002fff8:	mov    QWORD PTR [rbp-0x61],0xfffffffffffffffe
   140030000:	mov    QWORD PTR [rsp+0x110],rbx
   140030008:	mov    rax,QWORD PTR [rip+0x381e1]        # 0x1400681f0
   14003000f:	xor    rax,rsp
   140030012:	mov    QWORD PTR [rbp+0x1f],rax
   140030016:	mov    r14,rdx
   140030019:	mov    QWORD PTR [rbp-0x69],rdx
   14003001d:	mov    r12,rcx
   140030020:	mov    WORD PTR [rbp-0x79],0x61
   140030026:	lea    r9,[rbp-0x78]
   14003002a:	lea    r8,[rbp-0x79]
   14003002e:	lea    rdx,[rbp-0x31]
   140030032:	call   0x14002f7e0
   140030037:	nop
   140030038:	xor    eax,eax
   14003003a:	or     rcx,0xffffffffffffffff
   14003003e:	lea    rdi,[rbp-0x79]
   140030042:	repnz scas al,BYTE PTR es:[rdi]
   140030044:	not    rcx
   140030047:	lea    rdi,[rcx-0x1]
   14003004b:	lea    rcx,[rbp-0x31]
   14003004f:	mov    rsi,QWORD PTR [rbp-0x31]
   140030053:	mov    r13,QWORD PTR [rbp-0x19]
   140030057:	cmp    r13,0x10
   14003005b:	cmovae rcx,rsi
   14003005f:	mov    r8,rdi
   140030062:	mov    rbx,QWORD PTR [rbp-0x21]
   140030066:	cmp    rbx,rdi
   140030069:	cmovb  r8,rbx
   14003006d:	lea    rdx,[rbp-0x79]
   140030071:	call   0x14002b13e
   140030076:	movsxd rcx,eax
   140030079:	test   eax,eax
   14003007b:	jne    0x140030091
   14003007d:	cmp    rbx,rdi
   140030080:	jae    0x140030087
   140030082:	or     ecx,0xffffffff
   140030085:	jmp    0x140030091
   140030087:	xor    eax,eax
   140030089:	cmp    rbx,rdi
   14003008c:	setne  al
   14003008f:	mov    ecx,eax
   140030091:	test   ecx,ecx
   140030093:	sete   al
   140030096:	test   al,al
   140030098:	je     0x1400300b3
   14003009a:	mov    BYTE PTR [r14],0x0
   14003009e:	cmp    r13,0x10
   1400300a2:	jb     0x1400300ac
   1400300a4:	mov    rcx,rsi
   1400300a7:	call   0x14002b150
   1400300ac:	xor    eax,eax
   1400300ae:	jmp    0x140030428
   1400300b3:	mov    WORD PTR [rbp-0x75],0x41
   1400300b9:	lea    r9,[rbp-0x74]
   1400300bd:	lea    r8,[rbp-0x75]
   1400300c1:	lea    rdx,[rbp-0x59]
   1400300c5:	mov    rcx,r12
   1400300c8:	call   0x14002f7e0
   1400300cd:	nop
   1400300ce:	mov    WORD PTR [rbp-0x71],0x3b
   1400300d4:	lea    r9,[rbp-0x70]
   1400300d8:	lea    r8,[rbp-0x71]
   1400300dc:	lea    rdx,[rbp-0x9]
   1400300e0:	mov    rcx,r12
   1400300e3:	call   0x14002f7e0
   1400300e8:	xor    r12d,r12d
   1400300eb:	mov    edi,r12d
   1400300ee:	mov    r9,QWORD PTR [rbp-0x19]
   1400300f2:	mov    r8,QWORD PTR [rbp-0x31]
   1400300f6:	mov    r10,QWORD PTR [rbp-0x41]
   1400300fa:	mov    rbx,QWORD PTR [rbp-0x59]
   1400300fe:	mov    r11,QWORD PTR [rbp-0x21]
   140030102:	test   r11d,r11d
   140030105:	js     0x14003013f
   140030107:	mov    esi,DWORD PTR [rbp-0x49]
   14003010a:	nop    WORD PTR [rax+rax*1+0x0]
   140030110:	cmp    edi,esi
   140030112:	jg     0x14003013f
   140030114:	lea    rdx,[rbp-0x31]
   140030118:	cmp    r9,0x10
   14003011c:	cmovae rdx,r8
   140030120:	lea    rax,[rbp-0x59]
   140030124:	cmp    r10,0x10
   140030128:	cmovae rax,rbx
   14003012c:	movsxd rcx,edi
   14003012f:	movzx  eax,BYTE PTR [rcx+rax*1]
   140030133:	cmp    BYTE PTR [rcx+rdx*1],al
   140030136:	jne    0x14003013f
   140030138:	inc    edi
   14003013a:	cmp    edi,r11d
   14003013d:	jle    0x140030110
   14003013f:	dec    edi
   140030141:	jns    0x1400301a1
   140030143:	mov    BYTE PTR [r14],r12b
   140030146:	cmp    QWORD PTR [rbp+0xf],0x10
   14003014b:	jb     0x140030166
   14003014d:	mov    rcx,QWORD PTR [rbp-0x9]
   140030151:	call   0x14002b150
   140030156:	mov    r9,QWORD PTR [rbp-0x19]
   14003015a:	mov    r8,QWORD PTR [rbp-0x31]
   14003015e:	mov    r10,QWORD PTR [rbp-0x41]
   140030162:	mov    rbx,QWORD PTR [rbp-0x59]
   140030166:	mov    QWORD PTR [rbp+0xf],0xf
   14003016e:	mov    QWORD PTR [rbp+0x7],r12
   140030172:	mov    BYTE PTR [rbp-0x9],r12b
   140030176:	cmp    r10,0x10
   14003017a:	jb     0x14003018c
   14003017c:	mov    rcx,rbx
   14003017f:	call   0x14002b150
   140030184:	mov    r9,QWORD PTR [rbp-0x19]
   140030188:	mov    r8,QWORD PTR [rbp-0x31]
   14003018c:	mov    QWORD PTR [rbp-0x41],0xf
   140030194:	mov    QWORD PTR [rbp-0x49],r12
   140030198:	mov    BYTE PTR [rbp-0x59],0x0
   14003019c:	jmp    0x140030415
   1400301a1:	lea    rcx,[rbp-0x31]
   1400301a5:	cmp    r9,0x10
   1400301a9:	cmovae rcx,r8
   1400301ad:	movsxd rax,edi
   1400301b0:	movzx  esi,BYTE PTR [rax+rcx*1]
   1400301b4:	mov    r15,QWORD PTR [rbp+0xf]
   1400301b8:	mov    rax,QWORD PTR [rbp+0x7]
   1400301bc:	mov    r14,QWORD PTR [rbp-0x9]
   1400301c0:	test   edi,edi
   1400301c2:	je     0x14003033d
   1400301c8:	mov    r13d,r12d
   1400301cb:	mov    edx,r12d
   1400301ce:	mov    rcx,r12
   1400301d1:	test   r11,r11
   1400301d4:	je     0x140030201
   1400301d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400301e0:	lea    rax,[rbp-0x31]
   1400301e4:	cmp    r9,0x10
   1400301e8:	cmovae rax,r8
   1400301ec:	cmp    BYTE PTR [rcx+rax*1],sil
   1400301f0:	jne    0x1400301f5
   1400301f2:	inc    r13d
   1400301f5:	inc    edx
   1400301f7:	inc    rcx
   1400301fa:	mov    eax,edx
   1400301fc:	cmp    rax,r11
   1400301ff:	jb     0x1400301e0
   140030201:	xor    edx,edx
   140030203:	xor    ecx,ecx
   140030205:	cmp    QWORD PTR [rbp-0x49],rcx
   140030209:	jbe    0x140030232
   14003020b:	nop    DWORD PTR [rax+rax*1+0x0]
   140030210:	lea    rax,[rbp-0x59]
   140030214:	cmp    r10,0x10
   140030218:	cmovae rax,rbx
   14003021c:	cmp    BYTE PTR [rcx+rax*1],sil
   140030220:	jne    0x140030225
   140030222:	inc    r12d
   140030225:	inc    edx
   140030227:	inc    rcx
   14003022a:	mov    eax,edx
   14003022c:	cmp    rax,QWORD PTR [rbp-0x49]
   140030230:	jb     0x140030210
   140030232:	cmp    r13d,r12d
   140030235:	jne    0x140030336
   14003023b:	xor    r13d,r13d
   14003023e:	xor    edx,edx
   140030240:	xor    ecx,ecx
   140030242:	test   r11,r11
   140030245:	je     0x140030271
   140030247:	nop    WORD PTR [rax+rax*1+0x0]
   140030250:	lea    rax,[rbp-0x31]
   140030254:	cmp    r9,0x10
   140030258:	cmovae rax,r8
   14003025c:	cmp    BYTE PTR [rax+rcx*1],sil
   140030260:	jne    0x140030265
   140030262:	inc    r13d
   140030265:	inc    edx
   140030267:	inc    rcx
   14003026a:	mov    eax,edx
   14003026c:	cmp    rax,r11
   14003026f:	jb     0x140030250
   140030271:	xor    r12d,r12d
   140030274:	xor    ecx,ecx
   140030276:	xor    edx,edx
   140030278:	mov    rax,QWORD PTR [rbp+0x7]
   14003027c:	test   rax,rax
   14003027f:	je     0x1400302b6
   140030281:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030290:	lea    rax,[rbp-0x9]
   140030294:	cmp    r15,0x10
   140030298:	cmovae rax,r14
   14003029c:	cmp    BYTE PTR [rax+rdx*1],sil
   1400302a0:	jne    0x1400302a5
   1400302a2:	inc    r12d
   1400302a5:	inc    ecx
   1400302a7:	inc    rdx
   1400302aa:	mov    eax,ecx
   1400302ac:	cmp    rax,QWORD PTR [rbp+0x7]
   1400302b0:	jb     0x140030290
   1400302b2:	mov    rax,QWORD PTR [rbp+0x7]
   1400302b6:	cmp    r13d,r12d
   1400302b9:	jne    0x14003033a
   1400302bb:	mov    rax,QWORD PTR [rbp-0x69]
   1400302bf:	mov    BYTE PTR [rax],sil
   1400302c2:	cmp    r15,0x10
   1400302c6:	jb     0x1400302e0
   1400302c8:	mov    rcx,r14
   1400302cb:	call   0x14002b150
   1400302d0:	mov    r9,QWORD PTR [rbp-0x19]
   1400302d4:	mov    r8,QWORD PTR [rbp-0x31]
   1400302d8:	mov    r10,QWORD PTR [rbp-0x41]
   1400302dc:	mov    rbx,QWORD PTR [rbp-0x59]
   1400302e0:	mov    QWORD PTR [rbp+0xf],0xf
   1400302e8:	mov    QWORD PTR [rbp+0x7],0x0
   1400302f0:	mov    BYTE PTR [rbp-0x9],0x0
   1400302f4:	cmp    r10,0x10
   1400302f8:	jb     0x14003030a
   1400302fa:	mov    rcx,rbx
   1400302fd:	call   0x14002b150
   140030302:	mov    r9,QWORD PTR [rbp-0x19]
   140030306:	mov    r8,QWORD PTR [rbp-0x31]
   14003030a:	mov    QWORD PTR [rbp-0x41],0xf
   140030312:	mov    QWORD PTR [rbp-0x49],0x0
   14003031a:	mov    BYTE PTR [rbp-0x59],0x0
   14003031e:	cmp    r9,0x10
   140030322:	jb     0x14003032c
   140030324:	mov    rcx,r8
   140030327:	call   0x14002b150
   14003032c:	mov    eax,0x2
   140030331:	jmp    0x140030428
   140030336:	mov    rax,QWORD PTR [rbp+0x7]
   14003033a:	xor    r12d,r12d
   14003033d:	cmp    r11,QWORD PTR [rbp-0x49]
   140030341:	jne    0x1400303ba
   140030343:	cmp    r11,rax
   140030346:	jne    0x1400303ba
   140030348:	inc    edi
   14003034a:	mov    rax,QWORD PTR [rbp-0x69]
   14003034e:	mov    BYTE PTR [rax],dil
   140030351:	cmp    r15,0x10
   140030355:	jb     0x14003036f
   140030357:	mov    rcx,r14
   14003035a:	call   0x14002b150
   14003035f:	mov    r9,QWORD PTR [rbp-0x19]
   140030363:	mov    r8,QWORD PTR [rbp-0x31]
   140030367:	mov    r10,QWORD PTR [rbp-0x41]
   14003036b:	mov    rbx,QWORD PTR [rbp-0x59]
   14003036f:	mov    QWORD PTR [rbp+0xf],0xf
   140030377:	mov    QWORD PTR [rbp+0x7],r12
   14003037b:	mov    BYTE PTR [rbp-0x9],0x0
   14003037f:	cmp    r10,0x10
   140030383:	jb     0x140030395
   140030385:	mov    rcx,rbx
   140030388:	call   0x14002b150
   14003038d:	mov    r9,QWORD PTR [rbp-0x19]
   140030391:	mov    r8,QWORD PTR [rbp-0x31]
   140030395:	mov    QWORD PTR [rbp-0x41],0xf
   14003039d:	mov    QWORD PTR [rbp-0x49],r12
   1400303a1:	mov    BYTE PTR [rbp-0x59],0x0
   1400303a5:	cmp    r9,0x10
   1400303a9:	jb     0x1400303b3
   1400303ab:	mov    rcx,r8
   1400303ae:	call   0x14002b150
   1400303b3:	mov    eax,0x1
   1400303b8:	jmp    0x140030428
   1400303ba:	mov    rax,QWORD PTR [rbp-0x69]
   1400303be:	mov    BYTE PTR [rax],0x0
   1400303c1:	cmp    r15,0x10
   1400303c5:	jb     0x1400303df
   1400303c7:	mov    rcx,r14
   1400303ca:	call   0x14002b150
   1400303cf:	mov    r9,QWORD PTR [rbp-0x19]
   1400303d3:	mov    r8,QWORD PTR [rbp-0x31]
   1400303d7:	mov    r10,QWORD PTR [rbp-0x41]
   1400303db:	mov    rbx,QWORD PTR [rbp-0x59]
   1400303df:	mov    QWORD PTR [rbp+0xf],0xf
   1400303e7:	mov    QWORD PTR [rbp+0x7],r12
   1400303eb:	mov    BYTE PTR [rbp-0x9],0x0
   1400303ef:	cmp    r10,0x10
   1400303f3:	jb     0x140030405
   1400303f5:	mov    rcx,rbx
   1400303f8:	call   0x14002b150
   1400303fd:	mov    r9,QWORD PTR [rbp-0x19]
   140030401:	mov    r8,QWORD PTR [rbp-0x31]
   140030405:	mov    QWORD PTR [rbp-0x41],0xf
   14003040d:	mov    QWORD PTR [rbp-0x49],r12
   140030411:	mov    BYTE PTR [rbp-0x59],0x0
   140030415:	cmp    r9,0x10
   140030419:	jb     0x140030423
   14003041b:	mov    rcx,r8
   14003041e:	call   0x14002b150
   140030423:	mov    eax,0x3
   140030428:	mov    rcx,QWORD PTR [rbp+0x1f]
   14003042c:	xor    rcx,rsp
   14003042f:	call   0x14002b100
   140030434:	mov    rbx,QWORD PTR [rsp+0x110]
   14003043c:	add    rsp,0xc0
   140030443:	pop    r15
   140030445:	pop    r14
   140030447:	pop    r13
   140030449:	pop    r12
   14003044b:	pop    rdi
   14003044c:	pop    rsi
   14003044d:	pop    rbp
   14003044e:	ret    
   14003044f:	int3   
   140030450:	mov    r10,QWORD PTR [rcx+0x8]
   140030454:	mov    r8,QWORD PTR [rcx]
   140030457:	mov    r9d,edx
   14003045a:	mov    rcx,r10
   14003045d:	sub    rcx,r8
   140030460:	sar    rcx,0x3
   140030464:	test   rcx,rcx
   140030467:	jle    0x1400304a1
   140030469:	nop    DWORD PTR [rax+0x0]
   140030470:	mov    rax,rcx
   140030473:	cqo    
   140030475:	sub    rax,rdx
   140030478:	sar    rax,1
   14003047b:	cmp    DWORD PTR [r8+rax*8+0x4],r9d
   140030480:	mov    rdx,rax
   140030483:	lea    rax,[r8+rax*8]
   140030487:	jge    0x140030499
   140030489:	lea    r8,[rax+0x8]
   14003048d:	or     rax,0xffffffffffffffff
   140030491:	sub    rax,rdx
   140030494:	add    rcx,rax
   140030497:	jmp    0x14003049c
   140030499:	mov    rcx,rdx
   14003049c:	test   rcx,rcx
   14003049f:	jg     0x140030470
   1400304a1:	cmp    r8,r10
   1400304a4:	je     0x1400304b0
   1400304a6:	cmp    DWORD PTR [r8+0x4],r9d
   1400304aa:	jne    0x1400304b0
   1400304ac:	mov    eax,DWORD PTR [r8]
   1400304af:	ret    
   1400304b0:	or     eax,0xffffffff
   1400304b3:	ret    
   1400304b4:	int3   
   1400304b5:	int3   
   1400304b6:	int3   
   1400304b7:	int3   
   1400304b8:	int3   
   1400304b9:	int3   
   1400304ba:	int3   
   1400304bb:	int3   
   1400304bc:	int3   
   1400304bd:	int3   
   1400304be:	int3   
   1400304bf:	int3   
   1400304c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400304c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400304ca:	mov    QWORD PTR [rsp+0x20],rsi
   1400304cf:	push   r12
   1400304d1:	sub    rsp,0x20
   1400304d5:	mov    rsi,r8
   1400304d8:	mov    r8,QWORD PTR [rcx+0x10]
   1400304dc:	movzx  r12d,r9b
   1400304e0:	mov    rbp,rdx
   1400304e3:	mov    rbx,rcx
   1400304e6:	cmp    r8,rdx
   1400304e9:	jae    0x1400304f9
   1400304eb:	lea    rcx,[rip+0x2043e]        # 0x140050930
   1400304f2:	call   QWORD PTR [rip+0x190b8]        # 0x1400495b0
   1400304f8:	int3   
   1400304f9:	or     rax,0xffffffffffffffff
   1400304fd:	sub    rax,r8
   140030500:	cmp    rax,rsi
   140030503:	ja     0x140030513
   140030505:	lea    rcx,[rip+0x2043c]        # 0x140050948
   14003050c:	call   QWORD PTR [rip+0x19086]        # 0x140049598
   140030512:	int3   
   140030513:	mov    QWORD PTR [rsp+0x30],rdi
   140030518:	test   rsi,rsi
   14003051b:	je     0x140030602
   140030521:	lea    rdi,[r8+rsi*1]
   140030525:	cmp    rdi,0xfffffffffffffffe
   140030529:	jbe    0x140030539
   14003052b:	lea    rcx,[rip+0x20416]        # 0x140050948
   140030532:	call   QWORD PTR [rip+0x19060]        # 0x140049598
   140030538:	int3   
   140030539:	mov    rax,QWORD PTR [rcx+0x18]
   14003053d:	cmp    rax,rdi
   140030540:	jae    0x140030562
   140030542:	mov    rdx,rdi
   140030545:	call   0x140005750
   14003054a:	test   rdi,rdi
   14003054d:	je     0x140030602
   140030553:	mov    rax,QWORD PTR [rbx+0x18]
   140030557:	cmp    rax,0x10
   14003055b:	jb     0x140030584
   14003055d:	mov    rcx,QWORD PTR [rbx]
   140030560:	jmp    0x140030587
   140030562:	test   rdi,rdi
   140030565:	jne    0x140030553
   140030567:	mov    QWORD PTR [rcx+0x10],rdi
   14003056b:	cmp    rax,0x10
   14003056f:	jb     0x14003057c
   140030571:	mov    rax,QWORD PTR [rcx]
   140030574:	mov    BYTE PTR [rax],dil
   140030577:	jmp    0x140030602
   14003057c:	mov    rax,rcx
   14003057f:	mov    BYTE PTR [rcx],0x0
   140030582:	jmp    0x140030602
   140030584:	mov    rcx,rbx
   140030587:	cmp    rax,0x10
   14003058b:	jb     0x140030592
   14003058d:	mov    rax,QWORD PTR [rbx]
   140030590:	jmp    0x140030595
   140030592:	mov    rax,rbx
   140030595:	mov    r8,QWORD PTR [rbx+0x10]
   140030599:	lea    rdx,[rcx+rbp*1]
   14003059d:	lea    rcx,[rax+rbp*1]
   1400305a1:	sub    r8,rbp
   1400305a4:	add    rcx,rsi
   1400305a7:	call   QWORD PTR [rip+0x19043]        # 0x1400495f0
   1400305ad:	cmp    rsi,0x1
   1400305b1:	jne    0x1400305cc
   1400305b3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400305b8:	jb     0x1400305c3
   1400305ba:	mov    rax,QWORD PTR [rbx]
   1400305bd:	mov    BYTE PTR [rax+rbp*1],r12b
   1400305c1:	jmp    0x1400305eb
   1400305c3:	mov    rax,rbx
   1400305c6:	mov    BYTE PTR [rbx+rbp*1],r12b
   1400305ca:	jmp    0x1400305eb
   1400305cc:	cmp    QWORD PTR [rbx+0x18],0x10
   1400305d1:	jb     0x1400305d8
   1400305d3:	mov    rax,QWORD PTR [rbx]
   1400305d6:	jmp    0x1400305db
   1400305d8:	mov    rax,rbx
   1400305db:	lea    rcx,[rax+rbp*1]
   1400305df:	movsx  edx,r12b
   1400305e3:	mov    r8,rsi
   1400305e6:	call   0x14002b144
   1400305eb:	cmp    QWORD PTR [rbx+0x18],0x10
   1400305f0:	mov    QWORD PTR [rbx+0x10],rdi
   1400305f4:	jb     0x1400305fb
   1400305f6:	mov    rax,QWORD PTR [rbx]
   1400305f9:	jmp    0x1400305fe
   1400305fb:	mov    rax,rbx
   1400305fe:	mov    BYTE PTR [rax+rdi*1],0x0
   140030602:	mov    rdi,QWORD PTR [rsp+0x30]
   140030607:	mov    rbp,QWORD PTR [rsp+0x40]
   14003060c:	mov    rsi,QWORD PTR [rsp+0x48]
   140030611:	mov    rax,rbx
   140030614:	mov    rbx,QWORD PTR [rsp+0x38]
   140030619:	add    rsp,0x20
   14003061d:	pop    r12
   14003061f:	ret    
   140030620:	mov    QWORD PTR [rsp+0x8],rcx
   140030625:	push   rdi
   140030626:	sub    rsp,0x30
   14003062a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030633:	mov    QWORD PTR [rsp+0x50],rbx
   140030638:	mov    QWORD PTR [rsp+0x58],rsi
   14003063d:	mov    rsi,rdx
   140030640:	mov    rdi,rcx
   140030643:	xor    ebx,ebx
   140030645:	mov    DWORD PTR [rsp+0x48],ebx
   140030649:	call   0x14002e870
   14003064e:	nop
   14003064f:	lea    rax,[rip+0x1d9ea]        # 0x14004e040
   140030656:	mov    QWORD PTR [rdi],rax
   140030659:	lea    rcx,[rdi+0x18]
   14003065d:	lea    rax,[rip+0x1d9cc]        # 0x14004e030
   140030664:	mov    QWORD PTR [rcx],rax
   140030667:	lea    rax,[rip+0x1d9a2]        # 0x14004e010
   14003066e:	mov    QWORD PTR [rdi+0x40],rax
   140030672:	test   rsi,rsi
   140030675:	je     0x14003067b
   140030677:	lea    rbx,[rsi+0x18]
   14003067b:	mov    rdx,rbx
   14003067e:	call   0x1400010f8
   140030683:	nop
   140030684:	mov    rax,rdi
   140030687:	mov    rbx,QWORD PTR [rsp+0x50]
   14003068c:	mov    rsi,QWORD PTR [rsp+0x58]
   140030691:	add    rsp,0x30
   140030695:	pop    rdi
   140030696:	ret    
   140030697:	int3   
   140030698:	int3   
   140030699:	int3   
   14003069a:	int3   
   14003069b:	int3   
   14003069c:	int3   
   14003069d:	int3   
   14003069e:	int3   
   14003069f:	int3   
   1400306a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400306a5:	push   rdi
   1400306a6:	sub    rsp,0x30
   1400306aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400306b3:	mov    QWORD PTR [rsp+0x50],rbx
   1400306b8:	mov    QWORD PTR [rsp+0x58],rsi
   1400306bd:	mov    rsi,rdx
   1400306c0:	mov    rdi,rcx
   1400306c3:	xor    ebx,ebx
   1400306c5:	mov    DWORD PTR [rsp+0x48],ebx
   1400306c9:	call   0x14002e9c0
   1400306ce:	nop
   1400306cf:	lea    rax,[rip+0x1da2a]        # 0x14004e100
   1400306d6:	mov    QWORD PTR [rdi],rax
   1400306d9:	lea    rcx,[rdi+0x18]
   1400306dd:	lea    rax,[rip+0x1da0c]        # 0x14004e0f0
   1400306e4:	mov    QWORD PTR [rcx],rax
   1400306e7:	lea    rax,[rip+0x1d9e2]        # 0x14004e0d0
   1400306ee:	mov    QWORD PTR [rdi+0x40],rax
   1400306f2:	test   rsi,rsi
   1400306f5:	je     0x1400306fb
   1400306f7:	lea    rbx,[rsi+0x18]
   1400306fb:	mov    rdx,rbx
   1400306fe:	call   0x1400010f8
   140030703:	nop
   140030704:	mov    rax,rdi
   140030707:	mov    rbx,QWORD PTR [rsp+0x50]
   14003070c:	mov    rsi,QWORD PTR [rsp+0x58]
   140030711:	add    rsp,0x30
   140030715:	pop    rdi
   140030716:	ret    
   140030717:	int3   
   140030718:	int3   
   140030719:	int3   
   14003071a:	int3   
   14003071b:	int3   
   14003071c:	int3   
   14003071d:	int3   
   14003071e:	int3   
   14003071f:	int3   
   140030720:	test   rcx,rcx
   140030723:	je     0x140030775
   140030725:	push   rdi
   140030726:	sub    rsp,0x20
   14003072a:	mov    QWORD PTR [rsp+0x30],rbx
   14003072f:	mov    rbx,QWORD PTR [rcx+0x8]
   140030733:	mov    rdi,rcx
   140030736:	test   rbx,rbx
   140030739:	je     0x140030763
   14003073b:	lock dec DWORD PTR [rbx+0x8]
   14003073f:	mov    QWORD PTR [rsp+0x38],rsi
   140030744:	jne    0x14003075e
   140030746:	mov    rax,QWORD PTR [rbx]
   140030749:	mov    rcx,rbx
   14003074c:	call   QWORD PTR [rax+0x8]
   14003074f:	lock dec DWORD PTR [rbx+0xc]
   140030753:	jne    0x14003075e
   140030755:	mov    rax,QWORD PTR [rbx]
   140030758:	mov    rcx,rbx
   14003075b:	call   QWORD PTR [rax+0x10]
   14003075e:	mov    rsi,QWORD PTR [rsp+0x38]
   140030763:	mov    rcx,rdi
   140030766:	call   0x14002b150
   14003076b:	mov    rbx,QWORD PTR [rsp+0x30]
   140030770:	add    rsp,0x20
   140030774:	pop    rdi
   140030775:	repz ret 
   140030777:	int3   
   140030778:	int3   
   140030779:	int3   
   14003077a:	int3   
   14003077b:	int3   
   14003077c:	int3   
   14003077d:	int3   
   14003077e:	int3   
   14003077f:	int3   
   140030780:	sub    rsp,0x28
   140030784:	mov    r10,QWORD PTR [rcx]
   140030787:	mov    r8,QWORD PTR [rcx+0x8]
   14003078b:	movabs r9,0x1fffffffffffffff
   140030795:	sub    r8,r10
   140030798:	mov    rax,r9
   14003079b:	sar    r8,0x3
   14003079f:	sub    rax,rdx
   1400307a2:	cmp    rax,r8
   1400307a5:	jae    0x1400307b5
   1400307a7:	lea    rcx,[rip+0x201aa]        # 0x140050958
   1400307ae:	call   QWORD PTR [rip+0x18de4]        # 0x140049598
   1400307b4:	int3   
   1400307b5:	add    r8,rdx
   1400307b8:	mov    rdx,QWORD PTR [rcx+0x10]
   1400307bc:	sub    rdx,r10
   1400307bf:	sar    rdx,0x3
   1400307c3:	cmp    r8,rdx
   1400307c6:	jbe    0x1400307f7
   1400307c8:	mov    rax,rdx
   1400307cb:	shr    rax,1
   1400307ce:	sub    r9,rax
   1400307d1:	cmp    r9,rdx
   1400307d4:	jae    0x1400307e8
   1400307d6:	xor    edx,edx
   1400307d8:	cmp    rdx,r8
   1400307db:	cmovb  rdx,r8
   1400307df:	add    rsp,0x28
   1400307e3:	jmp    0x14002fa10
   1400307e8:	add    rdx,rax
   1400307eb:	cmp    rdx,r8
   1400307ee:	cmovb  rdx,r8
   1400307f2:	call   0x14002fa10
   1400307f7:	add    rsp,0x28
   1400307fb:	ret    
   1400307fc:	int3   
   1400307fd:	int3   
   1400307fe:	int3   
   1400307ff:	int3   
   140030800:	mov    QWORD PTR [rsp+0x8],rbx
   140030805:	mov    QWORD PTR [rsp+0x10],rsi
   14003080a:	push   rdi
   14003080b:	sub    rsp,0x20
   14003080f:	mov    rax,QWORD PTR [rcx+0x8]
   140030813:	mov    rbx,rcx
   140030816:	mov    rsi,QWORD PTR [rax+0x8]
   14003081a:	mov    rdi,rsi
   14003081d:	cmp    BYTE PTR [rsi+0x29],0x0
   140030821:	jne    0x140030843
   140030823:	mov    rdx,QWORD PTR [rdi+0x10]
   140030827:	mov    rcx,rbx
   14003082a:	call   0x14002ff90
   14003082f:	mov    rdi,QWORD PTR [rdi]
   140030832:	mov    rcx,rsi
   140030835:	call   0x14002b150
   14003083a:	cmp    BYTE PTR [rdi+0x29],0x0
   14003083e:	mov    rsi,rdi
   140030841:	je     0x140030823
   140030843:	mov    rax,QWORD PTR [rbx+0x8]
   140030847:	mov    rsi,QWORD PTR [rsp+0x38]
   14003084c:	mov    QWORD PTR [rax+0x8],rax
   140030850:	mov    rax,QWORD PTR [rbx+0x8]
   140030854:	mov    QWORD PTR [rax],rax
   140030857:	mov    rax,QWORD PTR [rbx+0x8]
   14003085b:	mov    QWORD PTR [rax+0x10],rax
   14003085f:	mov    QWORD PTR [rbx+0x10],0x0
   140030867:	mov    rbx,QWORD PTR [rsp+0x30]
   14003086c:	add    rsp,0x20
   140030870:	pop    rdi
   140030871:	ret    
   140030872:	int3   
   140030873:	int3   
   140030874:	int3   
   140030875:	int3   
   140030876:	int3   
   140030877:	int3   
   140030878:	int3   
   140030879:	int3   
   14003087a:	int3   
   14003087b:	int3   
   14003087c:	int3   
   14003087d:	int3   
   14003087e:	int3   
   14003087f:	int3   
   140030880:	rex push rbx
   140030882:	sub    rsp,0x20
   140030886:	cmp    QWORD PTR [rcx+0x20],0x10
   14003088b:	mov    rbx,rcx
   14003088e:	jb     0x140030899
   140030890:	mov    rcx,QWORD PTR [rcx+0x8]
   140030894:	call   0x14002b150
   140030899:	mov    QWORD PTR [rbx+0x20],0xf
   1400308a1:	mov    QWORD PTR [rbx+0x18],0x0
   1400308a9:	mov    BYTE PTR [rbx+0x8],0x0
   1400308ad:	add    rsp,0x20
   1400308b1:	pop    rbx
   1400308b2:	ret    
   1400308b3:	int3   
   1400308b4:	int3   
   1400308b5:	int3   
   1400308b6:	int3   
   1400308b7:	int3   
   1400308b8:	int3   
   1400308b9:	int3   
   1400308ba:	int3   
   1400308bb:	int3   
   1400308bc:	int3   
   1400308bd:	int3   
   1400308be:	int3   
   1400308bf:	int3   
   1400308c0:	rex push rbx
   1400308c2:	sub    rsp,0x20
   1400308c6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400308cb:	mov    rbx,rcx
   1400308ce:	jb     0x1400308d8
   1400308d0:	mov    rcx,QWORD PTR [rcx]
   1400308d3:	call   0x14002b150
   1400308d8:	mov    QWORD PTR [rbx+0x18],0xf
   1400308e0:	mov    QWORD PTR [rbx+0x10],0x0
   1400308e8:	mov    BYTE PTR [rbx],0x0
   1400308eb:	add    rsp,0x20
   1400308ef:	pop    rbx
   1400308f0:	ret    
   1400308f1:	int3   
   1400308f2:	int3   
   1400308f3:	int3   
   1400308f4:	int3   
   1400308f5:	int3   
   1400308f6:	int3   
   1400308f7:	int3   
   1400308f8:	int3   
   1400308f9:	int3   
   1400308fa:	int3   
   1400308fb:	int3   
   1400308fc:	int3   
   1400308fd:	int3   
   1400308fe:	int3   
   1400308ff:	int3   
   140030900:	rex push rbx
   140030902:	sub    rsp,0x30
   140030906:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003090f:	mov    rbx,rdx
   140030912:	call   0x14002dea0
   140030917:	mov    QWORD PTR [rsp+0x50],rax
   14003091c:	lea    r8,[rax+0x18]
   140030920:	test   r8,r8
   140030923:	je     0x140030932
   140030925:	mov    ecx,DWORD PTR [rbx]
   140030927:	mov    DWORD PTR [r8],ecx
   14003092a:	mov    rcx,QWORD PTR [rbx+0x8]
   14003092e:	mov    QWORD PTR [r8+0x8],rcx
   140030932:	add    rsp,0x30
   140030936:	pop    rbx
   140030937:	ret    
   140030938:	int3   
   140030939:	int3   
   14003093a:	int3   
   14003093b:	int3   
   14003093c:	int3   
   14003093d:	int3   
   14003093e:	int3   
   14003093f:	int3   
   140030940:	sub    rsp,0x38
   140030944:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003094d:	nop    DWORD PTR [rax]
   140030950:	cmp    rcx,rdx
   140030953:	je     0x140030972
   140030955:	test   r8,r8
   140030958:	je     0x140030968
   14003095a:	mov    rax,QWORD PTR [rcx]
   14003095d:	mov    QWORD PTR [r8],rax
   140030960:	mov    rax,QWORD PTR [rcx+0x8]
   140030964:	mov    QWORD PTR [r8+0x8],rax
   140030968:	add    r8,0x10
   14003096c:	add    rcx,0x10
   140030970:	jmp    0x140030950
   140030972:	mov    rax,r8
   140030975:	add    rsp,0x38
   140030979:	ret    
   14003097a:	int3   
   14003097b:	int3   
   14003097c:	int3   
   14003097d:	int3   
   14003097e:	int3   
   14003097f:	int3   
   140030980:	sub    rsp,0x38
   140030984:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003098d:	nop    DWORD PTR [rax]
   140030990:	cmp    rcx,rdx
   140030993:	je     0x1400309b2
   140030995:	test   r8,r8
   140030998:	je     0x1400309a8
   14003099a:	movzx  eax,BYTE PTR [rcx]
   14003099d:	mov    BYTE PTR [r8],al
   1400309a0:	mov    rax,QWORD PTR [rcx+0x8]
   1400309a4:	mov    QWORD PTR [r8+0x8],rax
   1400309a8:	add    r8,0x10
   1400309ac:	add    rcx,0x10
   1400309b0:	jmp    0x140030990
   1400309b2:	mov    rax,r8
   1400309b5:	add    rsp,0x38
   1400309b9:	ret    
   1400309ba:	int3   
   1400309bb:	int3   
   1400309bc:	int3   
   1400309bd:	int3   
   1400309be:	int3   
   1400309bf:	int3   
   1400309c0:	mov    QWORD PTR [rsp+0x18],r8
   1400309c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400309ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400309cf:	push   rsi
   1400309d0:	push   rdi
   1400309d1:	push   r12
   1400309d3:	sub    rsp,0x30
   1400309d7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400309e0:	mov    QWORD PTR [rsp+0x68],rbx
   1400309e5:	mov    rax,r8
   1400309e8:	mov    rbx,rcx
   1400309eb:	sub    rax,rdx
   1400309ee:	mov    rdi,QWORD PTR [rcx+0x10]
   1400309f2:	cmp    rdi,rax
   1400309f5:	ja     0x140030a23
   1400309f7:	cmp    QWORD PTR [rcx+0x18],rax
   1400309fb:	je     0x140030a23
   1400309fd:	mov    r8b,0x1
   140030a00:	mov    rdx,rax
   140030a03:	call   0x140005324
   140030a08:	test   al,al
   140030a0a:	je     0x140030a23
   140030a0c:	mov    QWORD PTR [rbx+0x10],rdi
   140030a10:	cmp    QWORD PTR [rbx+0x18],0x10
   140030a15:	jb     0x140030a1c
   140030a17:	mov    rax,QWORD PTR [rbx]
   140030a1a:	jmp    0x140030a1f
   140030a1c:	mov    rax,rbx
   140030a1f:	mov    BYTE PTR [rax+rdi*1],0x0
   140030a23:	xor    r12d,r12d
   140030a26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030a30:	mov    rdx,QWORD PTR [rsp+0x58]
   140030a35:	cmp    rdx,QWORD PTR [rsp+0x60]
   140030a3a:	je     0x140030ae7
   140030a40:	movzx  esi,BYTE PTR [rdx]
   140030a43:	mov    r8,QWORD PTR [rbx+0x10]
   140030a47:	or     rax,0xffffffffffffffff
   140030a4b:	sub    rax,r8
   140030a4e:	cmp    rax,0x1
   140030a52:	ja     0x140030a61
   140030a54:	lea    rcx,[rip+0x1feed]        # 0x140050948
   140030a5b:	call   QWORD PTR [rip+0x18b37]        # 0x140049598
   140030a61:	lea    rdi,[r8+0x1]
   140030a65:	cmp    rdi,0xfffffffffffffffe
   140030a69:	jbe    0x140030a78
   140030a6b:	lea    rcx,[rip+0x1fed6]        # 0x140050948
   140030a72:	call   QWORD PTR [rip+0x18b20]        # 0x140049598
   140030a78:	mov    rax,QWORD PTR [rbx+0x18]
   140030a7c:	cmp    rax,rdi
   140030a7f:	jae    0x140030a8e
   140030a81:	mov    rdx,rdi
   140030a84:	mov    rcx,rbx
   140030a87:	call   0x140005750
   140030a8c:	jmp    0x140030aaa
   140030a8e:	test   rdi,rdi
   140030a91:	jne    0x140030aaf
   140030a93:	mov    QWORD PTR [rbx+0x10],r12
   140030a97:	cmp    rax,0x10
   140030a9b:	jb     0x140030aa2
   140030a9d:	mov    rax,QWORD PTR [rbx]
   140030aa0:	jmp    0x140030aa5
   140030aa2:	mov    rax,rbx
   140030aa5:	mov    BYTE PTR [rax],r12b
   140030aa8:	jmp    0x140030add
   140030aaa:	test   rdi,rdi
   140030aad:	je     0x140030add
   140030aaf:	mov    rcx,QWORD PTR [rbx+0x10]
   140030ab3:	cmp    QWORD PTR [rbx+0x18],0x10
   140030ab8:	jb     0x140030abf
   140030aba:	mov    rax,QWORD PTR [rbx]
   140030abd:	jmp    0x140030ac2
   140030abf:	mov    rax,rbx
   140030ac2:	mov    BYTE PTR [rax+rcx*1],sil
   140030ac6:	mov    QWORD PTR [rbx+0x10],rdi
   140030aca:	cmp    QWORD PTR [rbx+0x18],0x10
   140030acf:	jb     0x140030ad6
   140030ad1:	mov    rax,QWORD PTR [rbx]
   140030ad4:	jmp    0x140030ad9
   140030ad6:	mov    rax,rbx
   140030ad9:	mov    BYTE PTR [rax+rdi*1],r12b
   140030add:	inc    QWORD PTR [rsp+0x58]
   140030ae2:	jmp    0x140030a30
   140030ae7:	mov    rbx,QWORD PTR [rsp+0x68]
   140030aec:	add    rsp,0x30
   140030af0:	pop    r12
   140030af2:	pop    rdi
   140030af3:	pop    rsi
   140030af4:	ret    
   140030af5:	int3   
   140030af6:	int3   
   140030af7:	int3   
   140030af8:	int3   
   140030af9:	int3   
   140030afa:	int3   
   140030afb:	int3   
   140030afc:	int3   
   140030afd:	int3   
   140030afe:	int3   
   140030aff:	int3   
   140030b00:	sub    rsp,0x38
   140030b04:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030b0d:	nop    DWORD PTR [rax]
   140030b10:	cmp    rcx,rdx
   140030b13:	je     0x140030b32
   140030b15:	test   r8,r8
   140030b18:	je     0x140030b28
   140030b1a:	movzx  eax,BYTE PTR [rcx]
   140030b1d:	mov    BYTE PTR [r8],al
   140030b20:	movzx  eax,BYTE PTR [rcx+0x1]
   140030b24:	mov    BYTE PTR [r8+0x1],al
   140030b28:	add    r8,0x2
   140030b2c:	add    rcx,0x2
   140030b30:	jmp    0x140030b10
   140030b32:	mov    rax,r8
   140030b35:	add    rsp,0x38
   140030b39:	ret    
   140030b3a:	int3   
   140030b3b:	int3   
   140030b3c:	int3   
   140030b3d:	int3   
   140030b3e:	int3   
   140030b3f:	int3   
   140030b40:	rex push rbx
   140030b42:	sub    rsp,0x30
   140030b46:	movzx  eax,BYTE PTR [rsp+0x40]
   140030b4b:	mov    r10,r9
   140030b4e:	mov    r11,r8
   140030b51:	mov    rbx,rdx
   140030b54:	lea    r9,[rcx+0x18]
   140030b58:	mov    BYTE PTR [rsp+0x28],al
   140030b5c:	mov    r8,r10
   140030b5f:	mov    rdx,r11
   140030b62:	mov    rcx,rbx
   140030b65:	mov    QWORD PTR [rsp+0x20],0x0
   140030b6e:	call   0x14002f740
   140030b73:	add    rsp,0x30
   140030b77:	pop    rbx
   140030b78:	ret    
   140030b79:	int3   
   140030b7a:	int3   
   140030b7b:	int3   
   140030b7c:	int3   
   140030b7d:	int3   
   140030b7e:	int3   
   140030b7f:	int3   
   140030b80:	rex push rbx
   140030b82:	sub    rsp,0x20
   140030b86:	mov    rbx,rcx
   140030b89:	mov    rcx,QWORD PTR [rcx+0x90]
   140030b90:	test   rcx,rcx
   140030b93:	je     0x140030b9a
   140030b95:	call   0x14002b150
   140030b9a:	xor    eax,eax
   140030b9c:	mov    QWORD PTR [rbx+0x90],rax
   140030ba3:	mov    QWORD PTR [rbx+0x98],rax
   140030baa:	mov    QWORD PTR [rbx+0xa0],rax
   140030bb1:	add    rsp,0x20
   140030bb5:	pop    rbx
   140030bb6:	ret    
   140030bb7:	int3   
   140030bb8:	int3   
   140030bb9:	int3   
   140030bba:	int3   
   140030bbb:	int3   
   140030bbc:	int3   
   140030bbd:	int3   
   140030bbe:	int3   
   140030bbf:	int3   
   140030bc0:	sub    rsp,0x38
   140030bc4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030bcd:	nop    DWORD PTR [rax]
   140030bd0:	test   rdx,rdx
   140030bd3:	je     0x140030bf9
   140030bd5:	test   rcx,rcx
   140030bd8:	je     0x140030bf0
   140030bda:	mov    rax,QWORD PTR [r8]
   140030bdd:	mov    QWORD PTR [rcx],rax
   140030be0:	mov    rax,QWORD PTR [r8+0x8]
   140030be4:	mov    QWORD PTR [rcx+0x8],rax
   140030be8:	movzx  eax,BYTE PTR [r8+0x10]
   140030bed:	mov    BYTE PTR [rcx+0x10],al
   140030bf0:	dec    rdx
   140030bf3:	add    rcx,0x18
   140030bf7:	jmp    0x140030bd0
   140030bf9:	add    rsp,0x38
   140030bfd:	ret    
   140030bfe:	int3   
   140030bff:	int3   
   140030c00:	mov    QWORD PTR [rsp+0x8],rcx
   140030c05:	sub    rsp,0x38
   140030c09:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030c12:	cmp    rcx,rdx
   140030c15:	je     0x140030c41
   140030c17:	test   r8,r8
   140030c1a:	je     0x140030c32
   140030c1c:	mov    rax,QWORD PTR [rcx]
   140030c1f:	mov    QWORD PTR [r8],rax
   140030c22:	mov    rax,QWORD PTR [rcx+0x8]
   140030c26:	mov    QWORD PTR [r8+0x8],rax
   140030c2a:	movzx  eax,BYTE PTR [rcx+0x10]
   140030c2e:	mov    BYTE PTR [r8+0x10],al
   140030c32:	add    r8,0x18
   140030c36:	add    rcx,0x18
   140030c3a:	mov    QWORD PTR [rsp+0x40],rcx
   140030c3f:	jmp    0x140030c12
   140030c41:	mov    rax,r8
   140030c44:	add    rsp,0x38
   140030c48:	ret    
   140030c49:	int3   
   140030c4a:	int3   
   140030c4b:	int3   
   140030c4c:	int3   
   140030c4d:	int3   
   140030c4e:	int3   
   140030c4f:	int3   
   140030c50:	mov    QWORD PTR [rsp+0x10],rdx
   140030c55:	push   rdi
   140030c56:	sub    rsp,0x30
   140030c5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030c63:	mov    QWORD PTR [rsp+0x40],rbx
   140030c68:	mov    rdi,rdx
   140030c6b:	mov    rbx,rcx
   140030c6e:	mov    QWORD PTR [rcx],0x0
   140030c75:	mov    ecx,0x18
   140030c7a:	call   0x14002b1c2
   140030c7f:	test   rax,rax
   140030c82:	je     0x140030ca0
   140030c84:	mov    DWORD PTR [rax+0x8],0x1
   140030c8b:	mov    DWORD PTR [rax+0xc],0x1
   140030c92:	lea    rcx,[rip+0x1d21f]        # 0x14004deb8
   140030c99:	mov    QWORD PTR [rax],rcx
   140030c9c:	mov    QWORD PTR [rax+0x10],rdi
   140030ca0:	mov    QWORD PTR [rbx],rax
   140030ca3:	mov    rax,rbx
   140030ca6:	mov    rbx,QWORD PTR [rsp+0x40]
   140030cab:	add    rsp,0x30
   140030caf:	pop    rdi
   140030cb0:	ret    
   140030cb1:	int3   
   140030cb2:	int3   
   140030cb3:	int3   
   140030cb4:	int3   
   140030cb5:	int3   
   140030cb6:	int3   
   140030cb7:	int3   
   140030cb8:	int3   
   140030cb9:	int3   
   140030cba:	int3   
   140030cbb:	int3   
   140030cbc:	int3   
   140030cbd:	int3   
   140030cbe:	int3   
   140030cbf:	int3   
   140030cc0:	rex push rdi
   140030cc2:	sub    rsp,0x20
   140030cc6:	mov    rdi,QWORD PTR [rcx+0x10]
   140030cca:	test   rdi,rdi
   140030ccd:	je     0x140030d12
   140030ccf:	mov    QWORD PTR [rsp+0x30],rbx
   140030cd4:	mov    rbx,QWORD PTR [rdi+0x8]
   140030cd8:	test   rbx,rbx
   140030cdb:	je     0x140030d05
   140030cdd:	lock dec DWORD PTR [rbx+0x8]
   140030ce1:	mov    QWORD PTR [rsp+0x38],rsi
   140030ce6:	jne    0x140030d00
   140030ce8:	mov    rax,QWORD PTR [rbx]
   140030ceb:	mov    rcx,rbx
   140030cee:	call   QWORD PTR [rax+0x8]
   140030cf1:	lock dec DWORD PTR [rbx+0xc]
   140030cf5:	jne    0x140030d00
   140030cf7:	mov    rax,QWORD PTR [rbx]
   140030cfa:	mov    rcx,rbx
   140030cfd:	call   QWORD PTR [rax+0x10]
   140030d00:	mov    rsi,QWORD PTR [rsp+0x38]
   140030d05:	mov    rcx,rdi
   140030d08:	call   0x14002b150
   140030d0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140030d12:	add    rsp,0x20
   140030d16:	pop    rdi
   140030d17:	ret    
   140030d18:	int3   
   140030d19:	int3   
   140030d1a:	int3   
   140030d1b:	int3   
   140030d1c:	int3   
   140030d1d:	int3   
   140030d1e:	int3   
   140030d1f:	int3   
   140030d20:	rex push rbx
   140030d22:	sub    rsp,0x30
   140030d26:	mov    r10,QWORD PTR [rsp+0x60]
   140030d2b:	mov    rbx,rcx
   140030d2e:	cmp    r9,r10
   140030d31:	jne    0x140030d6b
   140030d33:	cmp    QWORD PTR [rcx+0x18],0x10
   140030d38:	jb     0x140030d3d
   140030d3a:	mov    rcx,QWORD PTR [rcx]
   140030d3d:	xor    eax,eax
   140030d3f:	test   r8,r8
   140030d42:	jne    0x140030d49
   140030d44:	mov    r8d,eax
   140030d47:	jmp    0x140030d4c
   140030d49:	sub    r8,rdx
   140030d4c:	test   rdx,rdx
   140030d4f:	je     0x140030d57
   140030d51:	mov    rax,rdx
   140030d54:	sub    rax,rcx
   140030d57:	mov    rdx,rax
   140030d5a:	mov    rcx,rbx
   140030d5d:	call   0x140002dfc
   140030d62:	mov    rax,rbx
   140030d65:	add    rsp,0x30
   140030d69:	pop    rbx
   140030d6a:	ret    
   140030d6b:	cmp    QWORD PTR [rcx+0x18],0x10
   140030d70:	jb     0x140030d75
   140030d72:	mov    rcx,QWORD PTR [rcx]
   140030d75:	xor    eax,eax
   140030d77:	test   r8,r8
   140030d7a:	jne    0x140030d81
   140030d7c:	mov    r8d,eax
   140030d7f:	jmp    0x140030d84
   140030d81:	sub    r8,rdx
   140030d84:	test   rdx,rdx
   140030d87:	je     0x140030d8f
   140030d89:	mov    rax,rdx
   140030d8c:	sub    rax,rcx
   140030d8f:	sub    r10,r9
   140030d92:	mov    rdx,rax
   140030d95:	mov    rcx,rbx
   140030d98:	mov    QWORD PTR [rsp+0x20],r10
   140030d9d:	call   0x1400223c8
   140030da2:	mov    rax,rbx
   140030da5:	add    rsp,0x30
   140030da9:	pop    rbx
   140030daa:	ret    
   140030dab:	int3   
   140030dac:	int3   
   140030dad:	int3   
   140030dae:	int3   
   140030daf:	int3   
   140030db0:	mov    QWORD PTR [rsp+0x10],rbx
   140030db5:	mov    QWORD PTR [rsp+0x20],r9
   140030dba:	mov    QWORD PTR [rsp+0x18],r8
   140030dbf:	push   rdi
   140030dc0:	sub    rsp,0x20
   140030dc4:	mov    rax,QWORD PTR [rcx+0x8]
   140030dc8:	mov    rdi,rdx
   140030dcb:	mov    rbx,rcx
   140030dce:	cmp    r8,QWORD PTR [rax]
   140030dd1:	jne    0x140030df5
   140030dd3:	cmp    r9,rax
   140030dd6:	jne    0x140030df5
   140030dd8:	call   0x140030800
   140030ddd:	mov    r11,QWORD PTR [rbx+0x8]
   140030de1:	mov    rax,QWORD PTR [r11]
   140030de4:	mov    QWORD PTR [rdi],rax
   140030de7:	mov    rax,rdi
   140030dea:	mov    rbx,QWORD PTR [rsp+0x38]
   140030def:	add    rsp,0x20
   140030df3:	pop    rdi
   140030df4:	ret    
   140030df5:	cmp    r8,r9
   140030df8:	je     0x140030e79
   140030dfa:	nop    WORD PTR [rax+rax*1+0x0]
   140030e00:	cmp    BYTE PTR [r8+0x29],0x0
   140030e05:	mov    rax,r8
   140030e08:	jne    0x140030e5d
   140030e0a:	mov    rdx,QWORD PTR [r8+0x10]
   140030e0e:	cmp    BYTE PTR [rdx+0x29],0x0
   140030e12:	jne    0x140030e33
   140030e14:	mov    rcx,QWORD PTR [rdx]
   140030e17:	cmp    BYTE PTR [rcx+0x29],0x0
   140030e1b:	jne    0x140030e2c
   140030e1d:	nop    DWORD PTR [rax]
   140030e20:	mov    rdx,rcx
   140030e23:	mov    rcx,QWORD PTR [rcx]
   140030e26:	cmp    BYTE PTR [rcx+0x29],0x0
   140030e2a:	je     0x140030e20
   140030e2c:	mov    QWORD PTR [rsp+0x40],rdx
   140030e31:	jmp    0x140030e5d
   140030e33:	mov    rcx,QWORD PTR [r8+0x8]
   140030e37:	cmp    BYTE PTR [rcx+0x29],0x0
   140030e3b:	jne    0x140030e58
   140030e3d:	nop    DWORD PTR [rax]
   140030e40:	cmp    r8,QWORD PTR [rcx+0x10]
   140030e44:	jne    0x140030e58
   140030e46:	mov    QWORD PTR [rsp+0x40],rcx
   140030e4b:	mov    r8,rcx
   140030e4e:	mov    rcx,QWORD PTR [rcx+0x8]
   140030e52:	cmp    BYTE PTR [rcx+0x29],0x0
   140030e56:	je     0x140030e40
   140030e58:	mov    QWORD PTR [rsp+0x40],rcx
   140030e5d:	lea    rdx,[rsp+0x30]
   140030e62:	mov    r8,rax
   140030e65:	mov    rcx,rbx
   140030e68:	call   0x14002fc30
   140030e6d:	mov    r8,QWORD PTR [rsp+0x40]
   140030e72:	cmp    r8,QWORD PTR [rsp+0x48]
   140030e77:	jne    0x140030e00
   140030e79:	mov    rbx,QWORD PTR [rsp+0x38]
   140030e7e:	mov    QWORD PTR [rdi],r8
   140030e81:	mov    rax,rdi
   140030e84:	add    rsp,0x20
   140030e88:	pop    rdi
   140030e89:	ret    
   140030e8a:	int3   
   140030e8b:	int3   
   140030e8c:	int3   
   140030e8d:	int3   
   140030e8e:	int3   
   140030e8f:	int3   
   140030e90:	rex push rdi
   140030e92:	mov    rdi,QWORD PTR [rip+0x37807]        # 0x1400686a0
   140030e99:	mov    r11,QWORD PTR [rip+0x377f8]        # 0x140068698
   140030ea0:	mov    r10,rdx
   140030ea3:	sub    r11,rdi
   140030ea6:	mov    r9,rcx
   140030ea9:	sar    r11,0x4
   140030ead:	test   r11,r11
   140030eb0:	jle    0x140030f47
   140030eb6:	mov    QWORD PTR [rsp+0x10],rbx
   140030ebb:	mov    QWORD PTR [rsp+0x18],rbp
   140030ec0:	mov    QWORD PTR [rsp+0x20],rsi
   140030ec5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030ed0:	mov    rax,r11
   140030ed3:	cqo    
   140030ed5:	sub    rax,rdx
   140030ed8:	sar    rax,1
   140030edb:	mov    rbp,rax
   140030ede:	mov    rsi,rax
   140030ee1:	mov    rax,r9
   140030ee4:	add    rbp,rbp
   140030ee7:	mov    rbx,QWORD PTR [rdi+rbp*8+0x8]
   140030eec:	mov    rcx,QWORD PTR [rdi+rbp*8]
   140030ef0:	cmp    rcx,rbx
   140030ef3:	je     0x140030f1a
   140030ef5:	cmp    rax,r10
   140030ef8:	je     0x140030f15
   140030efa:	movzx  edx,BYTE PTR [rcx]
   140030efd:	movzx  r8d,BYTE PTR [rax]
   140030f01:	cmp    r8b,dl
   140030f04:	jg     0x140030f1f
   140030f06:	jl     0x140030f30
   140030f08:	inc    rcx
   140030f0b:	inc    rax
   140030f0e:	cmp    rcx,rbx
   140030f11:	jne    0x140030ef5
   140030f13:	jmp    0x140030f1a
   140030f15:	cmp    rcx,rbx
   140030f18:	jne    0x140030f30
   140030f1a:	cmp    rax,r10
   140030f1d:	je     0x140030f30
   140030f1f:	or     rax,0xffffffffffffffff
   140030f23:	lea    rdi,[rdi+rbp*8+0x10]
   140030f28:	sub    rax,rsi
   140030f2b:	add    r11,rax
   140030f2e:	jmp    0x140030f33
   140030f30:	mov    r11,rsi
   140030f33:	test   r11,r11
   140030f36:	jg     0x140030ed0
   140030f38:	mov    rsi,QWORD PTR [rsp+0x20]
   140030f3d:	mov    rbp,QWORD PTR [rsp+0x18]
   140030f42:	mov    rbx,QWORD PTR [rsp+0x10]
   140030f47:	cmp    rdi,QWORD PTR [rip+0x3774a]        # 0x140068698
   140030f4e:	je     0x140030f97
   140030f50:	mov    r8,QWORD PTR [rdi]
   140030f53:	mov    rcx,QWORD PTR [rdi+0x8]
   140030f57:	mov    rax,r10
   140030f5a:	sub    rcx,r8
   140030f5d:	sub    rax,r9
   140030f60:	cmp    rax,rcx
   140030f63:	jne    0x140030f97
   140030f65:	cmp    r9,r10
   140030f68:	je     0x140030f85
   140030f6a:	sub    r8,r9
   140030f6d:	nop    DWORD PTR [rax]
   140030f70:	movzx  edx,BYTE PTR [r9]
   140030f74:	movzx  ecx,BYTE PTR [r8+r9*1]
   140030f79:	inc    r9
   140030f7c:	cmp    dl,cl
   140030f7e:	jne    0x140030f97
   140030f80:	cmp    r9,r10
   140030f83:	jne    0x140030f70
   140030f85:	lea    rax,[rip+0x1d404]        # 0x14004e390
   140030f8c:	sub    rdi,rax
   140030f8f:	sar    rdi,0x4
   140030f93:	mov    eax,edi
   140030f95:	pop    rdi
   140030f96:	ret    
   140030f97:	or     eax,0xffffffff
   140030f9a:	pop    rdi
   140030f9b:	ret    
   140030f9c:	int3   
   140030f9d:	int3   
   140030f9e:	int3   
   140030f9f:	int3   
   140030fa0:	rex push rdi
   140030fa2:	sub    rsp,0x50
   140030fa6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140030faf:	mov    QWORD PTR [rsp+0x60],rbx
   140030fb4:	mov    QWORD PTR [rsp+0x68],rsi
   140030fb9:	mov    rsi,r9
   140030fbc:	mov    rbx,r8
   140030fbf:	mov    rdi,rdx
   140030fc2:	mov    ecx,0x28
   140030fc7:	call   0x14002b1c2
   140030fcc:	mov    r11,rax
   140030fcf:	mov    QWORD PTR [rsp+0x20],rax
   140030fd4:	test   rax,rax
   140030fd7:	je     0x140031012
   140030fd9:	mov    QWORD PTR [rax],rdi
   140030fdc:	mov    QWORD PTR [rax+0x8],rbx
   140030fe0:	lea    rdx,[rax+0x10]
   140030fe4:	test   rdx,rdx
   140030fe7:	je     0x14003100d
   140030fe9:	mov    rcx,QWORD PTR [rsi]
   140030fec:	mov    QWORD PTR [rdx],rcx
   140030fef:	xor    r8d,r8d
   140030ff2:	mov    QWORD PTR [rdx+0x8],r8
   140030ff6:	mov    rcx,QWORD PTR [rsi+0x8]
   140030ffa:	mov    QWORD PTR [rsi+0x8],r8
   140030ffe:	mov    QWORD PTR [rdx+0x8],rcx
   140031002:	mov    QWORD PTR [rsi],r8
   140031005:	mov    rax,QWORD PTR [rsi+0x10]
   140031009:	mov    QWORD PTR [rdx+0x10],rax
   14003100d:	mov    rax,r11
   140031010:	jmp    0x140031048
   140031012:	xor    r8d,r8d
   140031015:	mov    QWORD PTR [rsp+0x20],r8
   14003101a:	lea    rdx,[rsp+0x20]
   14003101f:	lea    rcx,[rsp+0x30]
   140031024:	call   QWORD PTR [rip+0x188a6]        # 0x1400498d0
   14003102a:	lea    r11,[rip+0x191a7]        # 0x14004a1d8
   140031031:	mov    QWORD PTR [rsp+0x30],r11
   140031036:	lea    rdx,[rip+0x3270b]        # 0x140063748
   14003103d:	lea    rcx,[rsp+0x30]
   140031042:	call   0x14002b560
   140031047:	int3   
   140031048:	mov    rbx,QWORD PTR [rsp+0x60]
   14003104d:	mov    rsi,QWORD PTR [rsp+0x68]
   140031052:	add    rsp,0x50
   140031056:	pop    rdi
   140031057:	ret    
   140031058:	int3   
   140031059:	int3   
   14003105a:	int3   
   14003105b:	int3   
   14003105c:	int3   
   14003105d:	int3   
   14003105e:	int3   
   14003105f:	int3   
   140031060:	push   r12
   140031062:	sub    rsp,0x40
   140031066:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003106f:	mov    QWORD PTR [rsp+0x50],rbx
   140031074:	mov    QWORD PTR [rsp+0x60],rsi
   140031079:	mov    QWORD PTR [rsp+0x68],rdi
   14003107e:	mov    rdi,rdx
   140031081:	mov    rbx,rcx
   140031084:	movabs rax,0x1fffffffffffffff
   14003108e:	cmp    rdx,rax
   140031091:	jbe    0x1400310a1
   140031093:	lea    rcx,[rip+0x1f8be]        # 0x140050958
   14003109a:	call   QWORD PTR [rip+0x184f8]        # 0x140049598
   1400310a0:	int3   
   1400310a1:	mov    rax,QWORD PTR [rcx+0x10]
   1400310a5:	sub    rax,QWORD PTR [rcx]
   1400310a8:	sar    rax,0x3
   1400310ac:	cmp    rax,rdx
   1400310af:	jae    0x140031115
   1400310b1:	add    rcx,0x18
   1400310b5:	call   0x14002d9a0
   1400310ba:	mov    r12,rax
   1400310bd:	mov    QWORD PTR [rsp+0x58],rax
   1400310c2:	movzx  r8d,BYTE PTR [rsp+0x58]
   1400310c8:	mov    BYTE PTR [rsp+0x28],r8b
   1400310cd:	mov    QWORD PTR [rsp+0x20],0x0
   1400310d6:	lea    r9,[rbx+0x18]
   1400310da:	mov    r8,rax
   1400310dd:	mov    rdx,QWORD PTR [rbx+0x8]
   1400310e1:	mov    rcx,QWORD PTR [rbx]
   1400310e4:	call   0x14002f170
   1400310e9:	nop
   1400310ea:	mov    rcx,QWORD PTR [rbx]
   1400310ed:	mov    rsi,QWORD PTR [rbx+0x8]
   1400310f1:	sub    rsi,rcx
   1400310f4:	sar    rsi,0x3
   1400310f8:	test   rcx,rcx
   1400310fb:	je     0x140031102
   1400310fd:	call   0x14002b150
   140031102:	lea    rax,[r12+rdi*8]
   140031106:	mov    QWORD PTR [rbx+0x10],rax
   14003110a:	lea    rax,[r12+rsi*8]
   14003110e:	mov    QWORD PTR [rbx+0x8],rax
   140031112:	mov    QWORD PTR [rbx],r12
   140031115:	mov    rbx,QWORD PTR [rsp+0x50]
   14003111a:	mov    rsi,QWORD PTR [rsp+0x60]
   14003111f:	mov    rdi,QWORD PTR [rsp+0x68]
   140031124:	add    rsp,0x40
   140031128:	pop    r12
   14003112a:	ret    
   14003112b:	int3   
   14003112c:	int3   
   14003112d:	int3   
   14003112e:	int3   
   14003112f:	int3   
   140031130:	sub    rsp,0x38
   140031134:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003113d:	nop    DWORD PTR [rax]
   140031140:	test   rdx,rdx
   140031143:	je     0x140031161
   140031145:	test   rcx,rcx
   140031148:	je     0x140031158
   14003114a:	movzx  eax,BYTE PTR [r8]
   14003114e:	mov    BYTE PTR [rcx],al
   140031150:	movzx  eax,BYTE PTR [r8+0x1]
   140031155:	mov    BYTE PTR [rcx+0x1],al
   140031158:	dec    rdx
   14003115b:	add    rcx,0x2
   14003115f:	jmp    0x140031140
   140031161:	add    rsp,0x38
   140031165:	ret    
   140031166:	int3   
   140031167:	int3   
   140031168:	int3   
   140031169:	int3   
   14003116a:	int3   
   14003116b:	int3   
   14003116c:	int3   
   14003116d:	int3   
   14003116e:	int3   
   14003116f:	int3   
   140031170:	mov    r11,rsp
   140031173:	sub    rsp,0xd8
   14003117a:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140031183:	lea    rax,[rip+0x1d426]        # 0x14004e5b0
   14003118a:	mov    QWORD PTR [r11+0x8],rax
   14003118e:	lea    rdx,[r11+0x8]
   140031192:	lea    rcx,[rsp+0x20]
   140031197:	call   QWORD PTR [rip+0x18733]        # 0x1400498d0
   14003119d:	lea    r11,[rip+0x1904c]        # 0x14004a1f0
   1400311a4:	mov    QWORD PTR [rsp+0x20],r11
   1400311a9:	lea    rdx,[rsp+0x20]
   1400311ae:	lea    rcx,[rsp+0x88]
   1400311b6:	call   0x14002f400
   1400311bb:	nop
   1400311bc:	mov    rdx,rax
   1400311bf:	lea    rcx,[rsp+0x40]
   1400311c4:	call   0x140030620
   1400311c9:	lea    rdx,[rip+0x32230]        # 0x140063400
   1400311d0:	lea    rcx,[rsp+0x40]
   1400311d5:	call   0x14002b560
   1400311da:	int3   
   1400311db:	int3   
   1400311dc:	int3   
   1400311dd:	int3   
   1400311de:	int3   
   1400311df:	int3   
   1400311e0:	mov    rdx,QWORD PTR [rcx]
   1400311e3:	mov    r8,QWORD PTR [rcx+0x8]
   1400311e7:	cmp    rdx,r8
   1400311ea:	je     0x14003122b
   1400311ec:	cmp    r8,r8
   1400311ef:	je     0x140031227
   1400311f1:	mov    r9,r8
   1400311f4:	sub    r9,rdx
   1400311f7:	nop    WORD PTR [rax+rax*1+0x0]
   140031200:	mov    rax,QWORD PTR [r9+rdx*1]
   140031204:	add    rdx,0x18
   140031208:	mov    QWORD PTR [rdx-0x18],rax
   14003120c:	mov    rax,QWORD PTR [r9+rdx*1-0x10]
   140031211:	mov    QWORD PTR [rdx-0x10],rax
   140031215:	movzx  eax,BYTE PTR [r9+rdx*1-0x8]
   14003121b:	mov    BYTE PTR [rdx-0x8],al
   14003121e:	lea    rax,[r9+rdx*1]
   140031222:	cmp    rax,r8
   140031225:	jne    0x140031200
   140031227:	mov    QWORD PTR [rcx+0x8],rdx
   14003122b:	repz ret 
   14003122d:	int3   
   14003122e:	int3   
   14003122f:	int3   
   140031230:	rex push rbp
   140031232:	push   rsi
   140031233:	push   rdi
   140031234:	lea    rbp,[rsp-0x47]
   140031239:	sub    rsp,0xa0
   140031240:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   140031248:	mov    QWORD PTR [rsp+0xd8],rbx
   140031250:	mov    rax,QWORD PTR [rip+0x36f99]        # 0x1400681f0
   140031257:	xor    rax,rsp
   14003125a:	mov    QWORD PTR [rbp+0x37],rax
   14003125e:	mov    rbx,rdx
   140031261:	mov    rdi,rcx
   140031264:	xor    esi,esi
   140031266:	mov    DWORD PTR [rbp-0x39],esi
   140031269:	cmp    QWORD PTR [rcx+0x418],rsi
   140031270:	je     0x14003139e
   140031276:	mov    rcx,QWORD PTR [rcx+0x410]
   14003127d:	mov    rax,QWORD PTR [rcx+0x8]
   140031281:	cmp    BYTE PTR [rax+0x49],sil
   140031285:	jne    0x14003129f
   140031287:	cmp    DWORD PTR [rax+0x18],r8d
   14003128b:	jge    0x140031293
   14003128d:	mov    rax,QWORD PTR [rax+0x10]
   140031291:	jmp    0x140031299
   140031293:	mov    rcx,rax
   140031296:	mov    rax,QWORD PTR [rax]
   140031299:	cmp    BYTE PTR [rax+0x49],sil
   14003129d:	je     0x140031287
   14003129f:	mov    QWORD PTR [rbp-0x29],rcx
   1400312a3:	mov    rax,QWORD PTR [rdi+0x410]
   1400312aa:	cmp    rcx,rax
   1400312ad:	je     0x1400312bb
   1400312af:	cmp    r8d,DWORD PTR [rcx+0x18]
   1400312b3:	jl     0x1400312bb
   1400312b5:	lea    rdx,[rbp-0x29]
   1400312b9:	jmp    0x1400312c3
   1400312bb:	mov    QWORD PTR [rbp-0x31],rax
   1400312bf:	lea    rdx,[rbp-0x31]
   1400312c3:	mov    rdx,QWORD PTR [rdx]
   1400312c6:	cmp    rdx,rax
   1400312c9:	jne    0x14003130c
   1400312cb:	mov    ecx,r8d
   1400312ce:	call   0x140043010
   1400312d3:	mov    rdx,rax
   1400312d6:	mov    QWORD PTR [rbp+0x27],0xf
   1400312de:	mov    QWORD PTR [rbp+0x1f],rsi
   1400312e2:	mov    BYTE PTR [rbp+0xf],sil
   1400312e6:	xor    eax,eax
   1400312e8:	or     rcx,0xffffffffffffffff
   1400312ec:	mov    rdi,rdx
   1400312ef:	repnz scas al,BYTE PTR es:[rdi]
   1400312f1:	not    rcx
   1400312f4:	lea    r8,[rcx-0x1]
   1400312f8:	lea    rcx,[rbp+0xf]
   1400312fc:	call   0x140005154
   140031301:	lea    rdx,[rbp+0xf]
   140031305:	mov    edi,0x1
   14003130a:	jmp    0x140031339
   14003130c:	mov    QWORD PTR [rbp-0x1],0xf
   140031314:	mov    QWORD PTR [rbp-0x9],rsi
   140031318:	mov    BYTE PTR [rbp-0x19],sil
   14003131c:	add    rdx,0x20
   140031320:	or     r9,0xffffffffffffffff
   140031324:	xor    r8d,r8d
   140031327:	lea    rcx,[rbp-0x19]
   14003132b:	call   0x1400048b8
   140031330:	lea    rdx,[rbp-0x19]
   140031334:	mov    edi,0x2
   140031339:	mov    DWORD PTR [rbp-0x39],edi
   14003133c:	mov    QWORD PTR [rbx+0x18],0xf
   140031344:	mov    QWORD PTR [rbx+0x10],rsi
   140031348:	mov    BYTE PTR [rbx],0x0
   14003134b:	or     r9,0xffffffffffffffff
   14003134f:	xor    r8d,r8d
   140031352:	mov    rcx,rbx
   140031355:	call   0x1400048b8
   14003135a:	or     edi,0x4
   14003135d:	test   dil,0x2
   140031361:	je     0x140031386
   140031363:	and    edi,0xfffffffd
   140031366:	cmp    QWORD PTR [rbp-0x1],0x10
   14003136b:	jb     0x140031376
   14003136d:	mov    rcx,QWORD PTR [rbp-0x19]
   140031371:	call   0x14002b150
   140031376:	mov    QWORD PTR [rbp-0x1],0xf
   14003137e:	mov    QWORD PTR [rbp-0x9],rsi
   140031382:	mov    BYTE PTR [rbp-0x19],0x0
   140031386:	test   dil,0x1
   14003138a:	je     0x1400313d2
   14003138c:	cmp    QWORD PTR [rbp+0x27],0x10
   140031391:	jb     0x1400313d2
   140031393:	mov    rcx,QWORD PTR [rbp+0xf]
   140031397:	call   0x14002b150
   14003139c:	jmp    0x1400313d2
   14003139e:	mov    ecx,r8d
   1400313a1:	call   0x140043010
   1400313a6:	mov    rdx,rax
   1400313a9:	mov    QWORD PTR [rbx+0x18],0xf
   1400313b1:	mov    QWORD PTR [rbx+0x10],rsi
   1400313b5:	mov    BYTE PTR [rbx],sil
   1400313b8:	xor    eax,eax
   1400313ba:	or     rcx,0xffffffffffffffff
   1400313be:	mov    rdi,rdx
   1400313c1:	repnz scas al,BYTE PTR es:[rdi]
   1400313c3:	not    rcx
   1400313c6:	lea    r8,[rcx-0x1]
   1400313ca:	mov    rcx,rbx
   1400313cd:	call   0x140005154
   1400313d2:	mov    rax,rbx
   1400313d5:	mov    rcx,QWORD PTR [rbp+0x37]
   1400313d9:	xor    rcx,rsp
   1400313dc:	call   0x14002b100
   1400313e1:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400313e9:	add    rsp,0xa0
   1400313f0:	pop    rdi
   1400313f1:	pop    rsi
   1400313f2:	pop    rbp
   1400313f3:	ret    
   1400313f4:	int3   
   1400313f5:	int3   
   1400313f6:	int3   
   1400313f7:	int3   
   1400313f8:	int3   
   1400313f9:	int3   
   1400313fa:	int3   
   1400313fb:	int3   
   1400313fc:	int3   
   1400313fd:	int3   
   1400313fe:	int3   
   1400313ff:	int3   
   140031400:	rex push rbp
   140031402:	push   rbx
   140031403:	push   rsi
   140031404:	push   rdi
   140031405:	push   r12
   140031407:	push   r13
   140031409:	push   r14
   14003140b:	push   r15
   14003140d:	mov    rbp,rsp
   140031410:	sub    rsp,0x78
   140031414:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14003141c:	mov    rax,QWORD PTR [rip+0x36dcd]        # 0x1400681f0
   140031423:	xor    rax,rsp
   140031426:	mov    QWORD PTR [rbp-0x10],rax
   14003142a:	mov    rbx,r9
   14003142d:	mov    r12,r8
   140031430:	mov    r14d,edx
   140031433:	mov    rsi,rcx
   140031436:	mov    QWORD PTR [rbp-0x40],rbx
   14003143a:	mov    rdi,QWORD PTR [rbp+0x68]
   14003143e:	mov    rax,QWORD PTR [rcx]
   140031441:	cmp    DWORD PTR [rax+0x34],0x0
   140031445:	jne    0x14003144a
   140031447:	mov    DWORD PTR [rax+0x34],edx
   14003144a:	mov    rdx,QWORD PTR [rcx+0x58]
   14003144e:	mov    QWORD PTR [rcx+0x60],rdx
   140031452:	xor    r15d,r15d
   140031455:	cmp    rdi,r8
   140031458:	jne    0x140031478
   14003145a:	lea    rax,[r8-0xa]
   14003145e:	mov    QWORD PTR [rbp-0x58],rax
   140031462:	mov    QWORD PTR [rbp-0x50],r15
   140031466:	lea    rcx,[rbp-0x58]
   14003146a:	lea    r8,[rbp-0x50]
   14003146e:	test   rax,rax
   140031471:	cmovle rcx,r8
   140031475:	mov    rdi,QWORD PTR [rcx]
   140031478:	sub    rdx,QWORD PTR [rsi+0x50]
   14003147c:	mov    QWORD PTR [rbp-0x50],rdx
   140031480:	lea    rax,[r12+0xa]
   140031485:	mov    QWORD PTR [rbp-0x58],rax
   140031489:	lea    rcx,[rbp-0x50]
   14003148d:	lea    r8,[rbp-0x58]
   140031491:	cmp    rdx,rax
   140031494:	cmovge rcx,r8
   140031498:	mov    r13,QWORD PTR [rcx]
   14003149b:	cmp    r14d,0x11
   14003149f:	je     0x1400315a8
   1400314a5:	test   rdi,rdi
   1400314a8:	jne    0x1400314bc
   1400314aa:	cmp    r13,rdx
   1400314ad:	jne    0x1400314bc
   1400314af:	lea    r8d,[rdi+0x3b]
   1400314b3:	lea    rdx,[rip+0x1d20e]        # 0x14004e6c8
   1400314ba:	jmp    0x1400314c9
   1400314bc:	mov    r8d,0x44
   1400314c2:	lea    rdx,[rip+0x1d1b7]        # 0x14004e680
   1400314c9:	mov    rcx,rbx
   1400314cc:	call   0x140009290
   1400314d1:	cmp    rdi,r13
   1400314d4:	je     0x140031593
   1400314da:	mov    rax,QWORD PTR [rsi+0x50]
   1400314de:	lea    r8,[rax+r12*1]
   1400314e2:	lea    rdx,[rax+rdi*1]
   1400314e6:	mov    QWORD PTR [rbp-0x20],0xf
   1400314ee:	mov    QWORD PTR [rbp-0x28],r15
   1400314f2:	mov    BYTE PTR [rbp-0x38],r15b
   1400314f6:	cmp    rdx,r8
   1400314f9:	je     0x140031508
   1400314fb:	sub    r8,rdx
   1400314fe:	lea    rcx,[rbp-0x38]
   140031502:	call   0x140005154
   140031507:	nop
   140031508:	or     r9,0xffffffffffffffff
   14003150c:	xor    r8d,r8d
   14003150f:	lea    rdx,[rbp-0x38]
   140031513:	mov    rcx,rbx
   140031516:	call   0x140005638
   14003151b:	nop
   14003151c:	cmp    QWORD PTR [rbp-0x20],0x10
   140031521:	jb     0x14003152c
   140031523:	mov    rcx,QWORD PTR [rbp-0x38]
   140031527:	call   0x14002b150
   14003152c:	mov    r8d,0xa
   140031532:	lea    rdx,[rip+0x1d137]        # 0x14004e670
   140031539:	mov    rcx,rbx
   14003153c:	call   0x140009290
   140031541:	mov    r11,QWORD PTR [rsi+0x50]
   140031545:	lea    r8,[r11+r13*1]
   140031549:	lea    rdx,[r11+r12*1]
   14003154d:	mov    QWORD PTR [rbp-0x20],0xf
   140031555:	mov    QWORD PTR [rbp-0x28],r15
   140031559:	mov    BYTE PTR [rbp-0x38],0x0
   14003155d:	cmp    rdx,r8
   140031560:	je     0x14003156f
   140031562:	sub    r8,rdx
   140031565:	lea    rcx,[rbp-0x38]
   140031569:	call   0x140005154
   14003156e:	nop
   14003156f:	or     r9,0xffffffffffffffff
   140031573:	xor    r8d,r8d
   140031576:	lea    rdx,[rbp-0x38]
   14003157a:	mov    rcx,rbx
   14003157d:	call   0x140005638
   140031582:	nop
   140031583:	cmp    QWORD PTR [rbp-0x20],0x10
   140031588:	jb     0x140031593
   14003158a:	mov    rcx,QWORD PTR [rbp-0x38]
   14003158e:	call   0x14002b150
   140031593:	mov    r8d,0x2
   140031599:	lea    rdx,[rip+0x1d0c8]        # 0x14004e668
   1400315a0:	mov    rcx,rbx
   1400315a3:	call   0x140009290
   1400315a8:	mov    rax,QWORD PTR [rsi]
   1400315ab:	test   DWORD PTR [rax+0x30],0x40000
   1400315b2:	jne    0x1400315db
   1400315b4:	mov    r9,r12
   1400315b7:	mov    r8d,r14d
   1400315ba:	mov    rdx,rbx
   1400315bd:	lea    rcx,[rbp-0x38]
   1400315c1:	call   0x140041e90
   1400315c6:	nop
   1400315c7:	lea    rcx,[rbp-0x38]
   1400315cb:	call   0x140042420
   1400315d0:	nop
   1400315d1:	lea    rcx,[rbp-0x38]
   1400315d5:	call   0x140041d10
   1400315da:	nop
   1400315db:	cmp    QWORD PTR [rbx+0x18],0x10
   1400315e0:	jb     0x1400315ea
   1400315e2:	mov    rcx,QWORD PTR [rbx]
   1400315e5:	call   0x14002b150
   1400315ea:	mov    QWORD PTR [rbx+0x18],0xf
   1400315f2:	mov    QWORD PTR [rbx+0x10],r15
   1400315f6:	mov    BYTE PTR [rbx],0x0
   1400315f9:	mov    rcx,QWORD PTR [rbp-0x10]
   1400315fd:	xor    rcx,rsp
   140031600:	call   0x14002b100
   140031605:	add    rsp,0x78
   140031609:	pop    r15
   14003160b:	pop    r14
   14003160d:	pop    r13
   14003160f:	pop    r12
   140031611:	pop    rdi
   140031612:	pop    rsi
   140031613:	pop    rbx
   140031614:	pop    rbp
   140031615:	ret    
   140031616:	int3   
   140031617:	int3   
   140031618:	int3   
   140031619:	int3   
   14003161a:	int3   
   14003161b:	int3   
   14003161c:	int3   
   14003161d:	int3   
   14003161e:	int3   
   14003161f:	int3   
   140031620:	test   rdx,rdx
   140031623:	je     0x14003190b
   140031629:	mov    rax,rsp
   14003162c:	push   rbp
   14003162d:	push   rdi
   14003162e:	push   r12
   140031630:	mov    rbp,rsp
   140031633:	sub    rsp,0x80
   14003163a:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140031642:	mov    QWORD PTR [rax+0x18],rbx
   140031646:	mov    QWORD PTR [rax+0x20],rsi
   14003164a:	mov    rax,QWORD PTR [rip+0x36b9f]        # 0x1400681f0
   140031651:	xor    rax,rsp
   140031654:	mov    QWORD PTR [rbp-0x8],rax
   140031658:	mov    rbx,rdx
   14003165b:	mov    rdi,rcx
   14003165e:	mov    rsi,rdx
   140031661:	xor    r12d,r12d
   140031664:	mov    eax,DWORD PTR [rbx]
   140031666:	cmp    eax,0x1b
   140031669:	je     0x1400317d7
   14003166f:	cmp    eax,0x1d
   140031672:	jne    0x1400318db
   140031678:	mov    r8,rsi
   14003167b:	mov    r11,QWORD PTR [rbx+0x10]
   14003167f:	cmp    r11,0x2710
   140031686:	jle    0x1400316e4
   140031688:	mov    rax,QWORD PTR [rdi]
   14003168b:	mov    rcx,QWORD PTR [rax+0x8]
   14003168f:	mov    r10,QWORD PTR [rax]
   140031692:	mov    r9,rcx
   140031695:	sub    r9,r10
   140031698:	sar    r9,0x3
   14003169c:	test   r9,r9
   14003169f:	jle    0x1400316ce
   1400316a1:	mov    rax,r9
   1400316a4:	cqo    
   1400316a6:	sub    rax,rdx
   1400316a9:	sar    rax,1
   1400316ac:	lea    rdx,[r10+rax*8]
   1400316b0:	cmp    DWORD PTR [rdx+0x4],r11d
   1400316b4:	jge    0x1400316c6
   1400316b6:	lea    r10,[rdx+0x8]
   1400316ba:	or     rdx,0xffffffffffffffff
   1400316be:	sub    rdx,rax
   1400316c1:	add    r9,rdx
   1400316c4:	jmp    0x1400316c9
   1400316c6:	mov    r9,rax
   1400316c9:	test   r9,r9
   1400316cc:	jg     0x1400316a1
   1400316ce:	cmp    r10,rcx
   1400316d1:	je     0x1400316de
   1400316d3:	cmp    DWORD PTR [r10+0x4],r11d
   1400316d7:	jne    0x1400316de
   1400316d9:	mov    eax,DWORD PTR [r10]
   1400316dc:	jmp    0x1400316e1
   1400316de:	or     eax,0xffffffff
   1400316e1:	movsxd r11,eax
   1400316e4:	cmp    DWORD PTR [r8],0x0
   1400316e8:	jne    0x1400316f3
   1400316ea:	movsxd rax,DWORD PTR [r8+0x10]
   1400316ee:	cmp    rax,r11
   1400316f1:	je     0x1400316fe
   1400316f3:	mov    r8,QWORD PTR [r8+0x8]
   1400316f7:	test   r8,r8
   1400316fa:	je     0x140031754
   1400316fc:	jmp    0x1400316e4
   1400316fe:	mov    QWORD PTR [rbx+0x10],r8
   140031702:	mov    rcx,QWORD PTR [r8+0x8]
   140031706:	test   rcx,rcx
   140031709:	je     0x1400318db
   14003170f:	mov    eax,DWORD PTR [rcx]
   140031711:	cmp    eax,0x1
   140031714:	je     0x140031731
   140031716:	cmp    eax,0x12
   140031719:	je     0x140031725
   14003171b:	cmp    eax,0x15
   14003171e:	jle    0x14003173e
   140031720:	cmp    eax,0x19
   140031723:	jg     0x14003173e
   140031725:	mov    eax,DWORD PTR [rcx+0x130]
   14003172b:	test   eax,eax
   14003172d:	jne    0x140031744
   14003172f:	jmp    0x14003173e
   140031731:	movsxd rax,DWORD PTR [rcx+0x10]
   140031735:	cmp    rax,r11
   140031738:	je     0x1400318db
   14003173e:	mov    rcx,QWORD PTR [rcx+0x8]
   140031742:	jmp    0x140031706
   140031744:	jle    0x1400318db
   14003174a:	dec    eax
   14003174c:	mov    DWORD PTR [rbx+0x18],eax
   14003174f:	jmp    0x1400318db
   140031754:	mov    rax,QWORD PTR [rdi]
   140031757:	cmp    DWORD PTR [rax+0x34],0x0
   14003175b:	jne    0x140031764
   14003175d:	mov    DWORD PTR [rax+0x34],0x2
   140031764:	mov    rax,QWORD PTR [rdi]
   140031767:	mov    QWORD PTR [rax+0x38],r12
   14003176b:	mov    rax,QWORD PTR [rdi]
   14003176e:	mov    QWORD PTR [rax+0x40],r12
   140031772:	mov    rax,QWORD PTR [rdi]
   140031775:	test   DWORD PTR [rax+0x30],0x40000
   14003177c:	jne    0x1400318db
   140031782:	mov    QWORD PTR [rbp-0x18],0xf
   14003178a:	mov    QWORD PTR [rbp-0x20],r12
   14003178e:	mov    BYTE PTR [rbp-0x30],0x0
   140031792:	mov    r8d,0x52
   140031798:	lea    rdx,[rip+0x1cfe1]        # 0x14004e780
   14003179f:	lea    rcx,[rbp-0x30]
   1400317a3:	call   0x140005154
   1400317a8:	nop
   1400317a9:	xor    r9d,r9d
   1400317ac:	lea    r8d,[r9+0x2]
   1400317b0:	lea    rdx,[rbp-0x30]
   1400317b4:	lea    rcx,[rbp-0x60]
   1400317b8:	call   0x140041e90
   1400317bd:	nop
   1400317be:	lea    rcx,[rbp-0x60]
   1400317c2:	call   0x140042420
   1400317c7:	nop
   1400317c8:	lea    rcx,[rbp-0x60]
   1400317cc:	call   0x140041d10
   1400317d1:	nop
   1400317d2:	jmp    0x1400318cb
   1400317d7:	mov    eax,DWORD PTR [rbx+0x10]
   1400317da:	test   eax,eax
   1400317dc:	jns    0x1400318db
   1400317e2:	or     r10d,0xffffffff
   1400317e6:	sub    r10d,eax
   1400317e9:	cmp    r10d,0x2710
   1400317f0:	jl     0x1400318db
   1400317f6:	mov    r11,QWORD PTR [rdi]
   1400317f9:	mov    rcx,QWORD PTR [r11+0x8]
   1400317fd:	mov    r9,QWORD PTR [r11]
   140031800:	mov    r8,rcx
   140031803:	sub    r8,r9
   140031806:	sar    r8,0x3
   14003180a:	test   r8,r8
   14003180d:	jle    0x14003183d
   14003180f:	nop
   140031810:	mov    rax,r8
   140031813:	cqo    
   140031815:	sub    rax,rdx
   140031818:	sar    rax,1
   14003181b:	lea    rdx,[r9+rax*8]
   14003181f:	cmp    DWORD PTR [rdx+0x4],r10d
   140031823:	jge    0x140031835
   140031825:	lea    r9,[rdx+0x8]
   140031829:	or     rdx,0xffffffffffffffff
   14003182d:	sub    rdx,rax
   140031830:	add    r8,rdx
   140031833:	jmp    0x140031838
   140031835:	mov    r8,rax
   140031838:	test   r8,r8
   14003183b:	jg     0x140031810
   14003183d:	cmp    r9,rcx
   140031840:	je     0x140031852
   140031842:	cmp    DWORD PTR [r9+0x4],r10d
   140031846:	jne    0x140031852
   140031848:	cmp    DWORD PTR [r9],0x0
   14003184c:	jg     0x1400318db
   140031852:	cmp    DWORD PTR [r11+0x34],0x0
   140031857:	jne    0x140031861
   140031859:	mov    DWORD PTR [r11+0x34],0x2
   140031861:	mov    rax,QWORD PTR [rdi]
   140031864:	mov    QWORD PTR [rax+0x38],r12
   140031868:	mov    rax,QWORD PTR [rdi]
   14003186b:	mov    QWORD PTR [rax+0x40],r12
   14003186f:	mov    rax,QWORD PTR [rdi]
   140031872:	test   DWORD PTR [rax+0x30],0x40000
   140031879:	jne    0x1400318db
   14003187b:	mov    QWORD PTR [rbp-0x18],0xf
   140031883:	mov    QWORD PTR [rbp-0x20],r12
   140031887:	mov    BYTE PTR [rbp-0x30],0x0
   14003188b:	mov    r8d,0x4f
   140031891:	lea    rdx,[rip+0x1ce98]        # 0x14004e730
   140031898:	lea    rcx,[rbp-0x30]
   14003189c:	call   0x140005154
   1400318a1:	nop
   1400318a2:	xor    r9d,r9d
   1400318a5:	lea    r8d,[r9+0x2]
   1400318a9:	lea    rdx,[rbp-0x30]
   1400318ad:	lea    rcx,[rbp-0x60]
   1400318b1:	call   0x140041e90
   1400318b6:	nop
   1400318b7:	lea    rcx,[rbp-0x60]
   1400318bb:	call   0x140042420
   1400318c0:	nop
   1400318c1:	lea    rcx,[rbp-0x60]
   1400318c5:	call   0x140041d10
   1400318ca:	nop
   1400318cb:	cmp    QWORD PTR [rbp-0x18],0x10
   1400318d0:	jb     0x1400318db
   1400318d2:	mov    rcx,QWORD PTR [rbp-0x30]
   1400318d6:	call   0x14002b150
   1400318db:	mov    rbx,QWORD PTR [rbx+0x8]
   1400318df:	test   rbx,rbx
   1400318e2:	jne    0x140031664
   1400318e8:	mov    rcx,QWORD PTR [rbp-0x8]
   1400318ec:	xor    rcx,rsp
   1400318ef:	call   0x14002b100
   1400318f4:	lea    r11,[rsp+0x80]
   1400318fc:	mov    rbx,QWORD PTR [r11+0x30]
   140031900:	mov    rsi,QWORD PTR [r11+0x38]
   140031904:	mov    rsp,r11
   140031907:	pop    r12
   140031909:	pop    rdi
   14003190a:	pop    rbp
   14003190b:	repz ret 
   14003190d:	int3   
   14003190e:	int3   
   14003190f:	int3   
   140031910:	mov    r11,rsp
   140031913:	push   rbp
   140031914:	push   rsi
   140031915:	push   rdi
   140031916:	sub    rsp,0x70
   14003191a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140031923:	mov    QWORD PTR [r11+0x20],rbx
   140031927:	mov    rax,QWORD PTR [rip+0x368c2]        # 0x1400681f0
   14003192e:	xor    rax,rsp
   140031931:	mov    QWORD PTR [rsp+0x60],rax
   140031936:	mov    rsi,r8
   140031939:	mov    rdi,rdx
   14003193c:	mov    rbp,rcx
   14003193f:	cmp    QWORD PTR [rcx+0x438],0x0
   140031947:	je     0x1400319f7
   14003194d:	mov    QWORD PTR [r11-0x38],0xf
   140031955:	mov    QWORD PTR [r11-0x40],0x0
   14003195d:	mov    BYTE PTR [rsp+0x38],0x0
   140031962:	cmp    rdx,r8
   140031965:	je     0x140031974
   140031967:	sub    r8,rdx
   14003196a:	lea    rcx,[r11-0x50]
   14003196e:	call   0x140005154
   140031973:	nop
   140031974:	lea    rdx,[rsp+0x38]
   140031979:	lea    rcx,[rbp+0x428]
   140031980:	call   0x14002fad0
   140031985:	mov    QWORD PTR [rsp+0x28],rax
   14003198a:	cmp    rax,QWORD PTR [rbp+0x430]
   140031991:	je     0x1400319ac
   140031993:	lea    rdx,[rax+0x18]
   140031997:	lea    rcx,[rsp+0x38]
   14003199c:	call   0x140002ec4
   1400319a1:	test   eax,eax
   1400319a3:	js     0x1400319ac
   1400319a5:	lea    rbx,[rsp+0x28]
   1400319aa:	jmp    0x1400319bd
   1400319ac:	mov    rax,QWORD PTR [rbp+0x430]
   1400319b3:	mov    QWORD PTR [rsp+0x20],rax
   1400319b8:	lea    rbx,[rsp+0x20]
   1400319bd:	mov    rbx,QWORD PTR [rbx]
   1400319c0:	cmp    QWORD PTR [rsp+0x50],0x10
   1400319c6:	jb     0x1400319d2
   1400319c8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400319cd:	call   0x14002b150
   1400319d2:	mov    QWORD PTR [rsp+0x50],0xf
   1400319db:	mov    QWORD PTR [rsp+0x48],0x0
   1400319e4:	mov    BYTE PTR [rsp+0x38],0x0
   1400319e9:	cmp    rbx,QWORD PTR [rbp+0x430]
   1400319f0:	je     0x1400319f7
   1400319f2:	mov    eax,DWORD PTR [rbx+0x40]
   1400319f5:	jmp    0x140031a1b
   1400319f7:	mov    rdx,rsi
   1400319fa:	mov    rcx,rdi
   1400319fd:	call   0x140030e90
   140031a02:	inc    eax
   140031a04:	movsxd rcx,eax
   140031a07:	cmp    rcx,0x16
   140031a0b:	jae    0x140031a19
   140031a0d:	lea    rax,[rip+0x1cdec]        # 0x14004e800
   140031a14:	mov    eax,DWORD PTR [rax+rcx*4]
   140031a17:	jmp    0x140031a1b
   140031a19:	xor    eax,eax
   140031a1b:	mov    rcx,QWORD PTR [rsp+0x60]
   140031a20:	xor    rcx,rsp
   140031a23:	call   0x14002b100
   140031a28:	mov    rbx,QWORD PTR [rsp+0xa8]
   140031a30:	add    rsp,0x70
   140031a34:	pop    rdi
   140031a35:	pop    rsi
   140031a36:	pop    rbp
   140031a37:	ret    
   140031a38:	int3   
   140031a39:	int3   
   140031a3a:	int3   
   140031a3b:	int3   
   140031a3c:	int3   
   140031a3d:	int3   
   140031a3e:	int3   
   140031a3f:	int3   
   140031a40:	mov    QWORD PTR [rsp+0x10],rbx
   140031a45:	mov    QWORD PTR [rsp+0x18],rbp
   140031a4a:	mov    QWORD PTR [rsp+0x20],rsi
   140031a4f:	push   rdi
   140031a50:	sub    rsp,0x20
   140031a54:	mov    rbx,QWORD PTR [rcx+0x8]
   140031a58:	mov    r9,rdx
   140031a5b:	mov    rbp,rcx
   140031a5e:	mov    rax,QWORD PTR [rbx+0x8]
   140031a62:	mov    rdi,rbx
   140031a65:	cmp    BYTE PTR [rax+0x29],0x0
   140031a69:	jne    0x140031a97
   140031a6b:	mov    r8d,DWORD PTR [rdx]
   140031a6e:	xchg   ax,ax
   140031a70:	mov    edx,DWORD PTR [rax+0x18]
   140031a73:	cmp    edx,r8d
   140031a76:	jae    0x140031a7e
   140031a78:	mov    rax,QWORD PTR [rax+0x10]
   140031a7c:	jmp    0x140031a91
   140031a7e:	cmp    BYTE PTR [rdi+0x29],0x0
   140031a82:	je     0x140031a8b
   140031a84:	cmp    r8d,edx
   140031a87:	cmovb  rdi,rax
   140031a8b:	mov    rbx,rax
   140031a8e:	mov    rax,QWORD PTR [rax]
   140031a91:	cmp    BYTE PTR [rax+0x29],0x0
   140031a95:	je     0x140031a70
   140031a97:	cmp    BYTE PTR [rdi+0x29],0x0
   140031a9b:	je     0x140031aa7
   140031a9d:	mov    rax,QWORD PTR [rcx+0x8]
   140031aa1:	mov    rcx,QWORD PTR [rax+0x8]
   140031aa5:	jmp    0x140031aaa
   140031aa7:	mov    rcx,QWORD PTR [rdi]
   140031aaa:	cmp    BYTE PTR [rcx+0x29],0x0
   140031aae:	jne    0x140031aca
   140031ab0:	mov    eax,DWORD PTR [r9]
   140031ab3:	cmp    eax,DWORD PTR [rcx+0x18]
   140031ab6:	jae    0x140031ac0
   140031ab8:	mov    rdi,rcx
   140031abb:	mov    rcx,QWORD PTR [rcx]
   140031abe:	jmp    0x140031ac4
   140031ac0:	mov    rcx,QWORD PTR [rcx+0x10]
   140031ac4:	cmp    BYTE PTR [rcx+0x29],0x0
   140031ac8:	je     0x140031ab3
   140031aca:	xor    esi,esi
   140031acc:	mov    rax,rbx
   140031acf:	cmp    rbx,rdi
   140031ad2:	je     0x140031b2b
   140031ad4:	inc    rsi
   140031ad7:	cmp    BYTE PTR [rax+0x29],0x0
   140031adb:	jne    0x140031b26
   140031add:	mov    rcx,QWORD PTR [rax+0x10]
   140031ae1:	cmp    BYTE PTR [rcx+0x29],0x0
   140031ae5:	jne    0x140031b01
   140031ae7:	mov    rax,rcx
   140031aea:	mov    rcx,QWORD PTR [rcx]
   140031aed:	cmp    BYTE PTR [rcx+0x29],0x0
   140031af1:	jne    0x140031b26
   140031af3:	mov    rax,rcx
   140031af6:	mov    rcx,QWORD PTR [rcx]
   140031af9:	cmp    BYTE PTR [rcx+0x29],0x0
   140031afd:	je     0x140031af3
   140031aff:	jmp    0x140031b26
   140031b01:	mov    rcx,QWORD PTR [rax+0x8]
   140031b05:	cmp    BYTE PTR [rcx+0x29],0x0
   140031b09:	jne    0x140031b23
   140031b0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140031b10:	cmp    rax,QWORD PTR [rcx+0x10]
   140031b14:	jne    0x140031b23
   140031b16:	mov    rax,rcx
   140031b19:	mov    rcx,QWORD PTR [rcx+0x8]
   140031b1d:	cmp    BYTE PTR [rcx+0x29],0x0
   140031b21:	je     0x140031b10
   140031b23:	mov    rax,rcx
   140031b26:	cmp    rax,rdi
   140031b29:	jne    0x140031ad4
   140031b2b:	mov    rcx,QWORD PTR [rbp+0x8]
   140031b2f:	cmp    rbx,QWORD PTR [rcx]
   140031b32:	jne    0x140031b43
   140031b34:	cmp    rdi,rcx
   140031b37:	jne    0x140031b43
   140031b39:	mov    rcx,rbp
   140031b3c:	call   0x140030800
   140031b41:	jmp    0x140031bb0
   140031b43:	cmp    rbx,rdi
   140031b46:	je     0x140031bb0
   140031b48:	nop    DWORD PTR [rax+rax*1+0x0]
   140031b50:	cmp    BYTE PTR [rbx+0x29],0x0
   140031b54:	mov    r8,rbx
   140031b57:	jne    0x140031b9e
   140031b59:	mov    rax,QWORD PTR [rbx+0x10]
   140031b5d:	cmp    BYTE PTR [rax+0x29],0x0
   140031b61:	jne    0x140031b7e
   140031b63:	mov    rbx,rax
   140031b66:	mov    rax,QWORD PTR [rax]
   140031b69:	cmp    BYTE PTR [rax+0x29],0x0
   140031b6d:	jne    0x140031b9e
   140031b6f:	nop
   140031b70:	mov    rbx,rax
   140031b73:	mov    rax,QWORD PTR [rax]
   140031b76:	cmp    BYTE PTR [rax+0x29],0x0
   140031b7a:	je     0x140031b70
   140031b7c:	jmp    0x140031b9e
   140031b7e:	mov    rax,QWORD PTR [rbx+0x8]
   140031b82:	cmp    BYTE PTR [rax+0x29],0x0
   140031b86:	jne    0x140031b9b
   140031b88:	cmp    rbx,QWORD PTR [rax+0x10]
   140031b8c:	jne    0x140031b9b
   140031b8e:	mov    rbx,rax
   140031b91:	mov    rax,QWORD PTR [rax+0x8]
   140031b95:	cmp    BYTE PTR [rax+0x29],0x0
   140031b99:	je     0x140031b88
   140031b9b:	mov    rbx,rax
   140031b9e:	lea    rdx,[rsp+0x30]
   140031ba3:	mov    rcx,rbp
   140031ba6:	call   0x14002fc30
   140031bab:	cmp    rbx,rdi
   140031bae:	jne    0x140031b50
   140031bb0:	mov    rbx,QWORD PTR [rsp+0x38]
   140031bb5:	mov    rbp,QWORD PTR [rsp+0x40]
   140031bba:	mov    rax,rsi
   140031bbd:	mov    rsi,QWORD PTR [rsp+0x48]
   140031bc2:	add    rsp,0x20
   140031bc6:	pop    rdi
   140031bc7:	ret    
   140031bc8:	int3   
   140031bc9:	int3   
   140031bca:	int3   
   140031bcb:	int3   
   140031bcc:	int3   
   140031bcd:	int3   
   140031bce:	int3   
   140031bcf:	int3   
   140031bd0:	rex push rbx
   140031bd2:	sub    rsp,0x20
   140031bd6:	mov    rbx,rcx
   140031bd9:	mov    rcx,QWORD PTR [rcx]
   140031bdc:	test   rcx,rcx
   140031bdf:	je     0x140031be6
   140031be1:	call   0x14002b150
   140031be6:	xor    eax,eax
   140031be8:	mov    QWORD PTR [rbx],rax
   140031beb:	mov    QWORD PTR [rbx+0x8],rax
   140031bef:	mov    QWORD PTR [rbx+0x10],rax
   140031bf3:	add    rsp,0x20
   140031bf7:	pop    rbx
   140031bf8:	ret    
   140031bf9:	int3   
   140031bfa:	int3   
   140031bfb:	int3   
   140031bfc:	int3   
   140031bfd:	int3   
   140031bfe:	int3   
   140031bff:	int3   
   140031c00:	rex push rbx
   140031c02:	sub    rsp,0x30
   140031c06:	movzx  eax,BYTE PTR [rsp+0x40]
   140031c0b:	mov    r10,r9
   140031c0e:	mov    r11,r8
   140031c11:	mov    rbx,rdx
   140031c14:	lea    r9,[rcx+0x18]
   140031c18:	mov    BYTE PTR [rsp+0x28],al
   140031c1c:	mov    r8,r10
   140031c1f:	mov    rdx,r11
   140031c22:	mov    rcx,rbx
   140031c25:	mov    QWORD PTR [rsp+0x20],0x0
   140031c2e:	call   0x140030b00
   140031c33:	add    rsp,0x30
   140031c37:	pop    rbx
   140031c38:	ret    
   140031c39:	int3   
   140031c3a:	int3   
   140031c3b:	int3   
   140031c3c:	int3   
   140031c3d:	int3   
   140031c3e:	int3   
   140031c3f:	int3   
   140031c40:	sub    rsp,0x28
   140031c44:	mov    r10,QWORD PTR [rcx]
   140031c47:	mov    r8,QWORD PTR [rcx+0x8]
   140031c4b:	movabs r9,0x1fffffffffffffff
   140031c55:	sub    r8,r10
   140031c58:	mov    rax,r9
   140031c5b:	sar    r8,0x3
   140031c5f:	sub    rax,rdx
   140031c62:	cmp    rax,r8
   140031c65:	jae    0x140031c75
   140031c67:	lea    rcx,[rip+0x1ecea]        # 0x140050958
   140031c6e:	call   QWORD PTR [rip+0x17924]        # 0x140049598
   140031c74:	int3   
   140031c75:	add    r8,rdx
   140031c78:	mov    rdx,QWORD PTR [rcx+0x10]
   140031c7c:	sub    rdx,r10
   140031c7f:	sar    rdx,0x3
   140031c83:	cmp    r8,rdx
   140031c86:	jbe    0x140031cb7
   140031c88:	mov    rax,rdx
   140031c8b:	shr    rax,1
   140031c8e:	sub    r9,rax
   140031c91:	cmp    r9,rdx
   140031c94:	jae    0x140031ca8
   140031c96:	xor    edx,edx
   140031c98:	cmp    rdx,r8
   140031c9b:	cmovb  rdx,r8
   140031c9f:	add    rsp,0x28
   140031ca3:	jmp    0x140031060
   140031ca8:	add    rdx,rax
   140031cab:	cmp    rdx,r8
   140031cae:	cmovb  rdx,r8
   140031cb2:	call   0x140031060
   140031cb7:	add    rsp,0x28
   140031cbb:	ret    
   140031cbc:	int3   
   140031cbd:	int3   
   140031cbe:	int3   
   140031cbf:	int3   
   140031cc0:	sub    rsp,0x28
   140031cc4:	cmp    BYTE PTR [rcx+0x54],0x0
   140031cc8:	mov    r9d,edx
   140031ccb:	mov    r8,rcx
   140031cce:	je     0x140031cdf
   140031cd0:	mov    rax,QWORD PTR [rcx+0x8]
   140031cd4:	cmp    QWORD PTR [rcx],rax
   140031cd7:	jne    0x140031cdf
   140031cd9:	call   0x140031170
   140031cde:	int3   
   140031cdf:	mov    r10,QWORD PTR [rcx]
   140031ce2:	mov    rcx,QWORD PTR [rcx+0x8]
   140031ce6:	movabs rax,0x2aaaaaaaaaaaaaab
   140031cf0:	sub    rcx,r10
   140031cf3:	add    r9d,0x2
   140031cf7:	imul   rcx
   140031cfa:	sar    rdx,0x2
   140031cfe:	mov    rax,rdx
   140031d01:	shr    rax,0x3f
   140031d05:	add    rdx,rax
   140031d08:	cmp    r9d,edx
   140031d0b:	jge    0x140031d22
   140031d0d:	test   r9d,r9d
   140031d10:	js     0x140031d22
   140031d12:	movsxd rax,r9d
   140031d15:	lea    rcx,[rax+rax*2]
   140031d19:	lea    rax,[r10+rcx*8]
   140031d1d:	add    rsp,0x28
   140031d21:	ret    
   140031d22:	lea    rax,[r8+0x28]
   140031d26:	add    rsp,0x28
   140031d2a:	ret    
   140031d2b:	int3   
   140031d2c:	int3   
   140031d2d:	int3   
   140031d2e:	int3   
   140031d2f:	int3   
   140031d30:	mov    QWORD PTR [rsp+0x20],rsi
   140031d35:	push   rdi
   140031d36:	sub    rsp,0x30
   140031d3a:	mov    rsi,rdx
   140031d3d:	mov    rdi,rcx
   140031d40:	cmp    rcx,rdx
   140031d43:	je     0x140031eda
   140031d49:	mov    r10,QWORD PTR [rdx+0x8]
   140031d4d:	mov    r9,QWORD PTR [rdx]
   140031d50:	mov    QWORD PTR [rsp+0x50],rbp
   140031d55:	mov    r8,r10
   140031d58:	movabs rbp,0x2aaaaaaaaaaaaaab
   140031d62:	sub    r8,r9
   140031d65:	mov    rax,rbp
   140031d68:	imul   r8
   140031d6b:	mov    r11,rdx
   140031d6e:	sar    r11,0x2
   140031d72:	mov    rax,r11
   140031d75:	shr    rax,0x3f
   140031d79:	add    r11,rax
   140031d7c:	jne    0x140031d96
   140031d7e:	call   0x1400311e0
   140031d83:	mov    rbp,QWORD PTR [rsp+0x50]
   140031d88:	mov    rax,rdi
   140031d8b:	mov    rsi,QWORD PTR [rsp+0x58]
   140031d90:	add    rsp,0x30
   140031d94:	pop    rdi
   140031d95:	ret    
   140031d96:	mov    r8,QWORD PTR [rcx]
   140031d99:	mov    rcx,QWORD PTR [rcx+0x8]
   140031d9d:	mov    QWORD PTR [rsp+0x48],rbx
   140031da2:	sub    rcx,r8
   140031da5:	mov    rax,rbp
   140031da8:	imul   rcx
   140031dab:	mov    rbx,rdx
   140031dae:	sar    rbx,0x2
   140031db2:	mov    rax,rbx
   140031db5:	shr    rax,0x3f
   140031db9:	add    rbx,rax
   140031dbc:	cmp    r11,rbx
   140031dbf:	ja     0x140031e21
   140031dc1:	cmp    r9,r10
   140031dc4:	je     0x140031df5
   140031dc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140031dd0:	mov    rax,QWORD PTR [r9]
   140031dd3:	add    r9,0x18
   140031dd7:	add    r8,0x18
   140031ddb:	mov    QWORD PTR [r8-0x18],rax
   140031ddf:	mov    rcx,QWORD PTR [r9-0x10]
   140031de3:	mov    QWORD PTR [r8-0x10],rcx
   140031de7:	movzx  ecx,BYTE PTR [r9-0x8]
   140031dec:	mov    BYTE PTR [r8-0x8],cl
   140031df0:	cmp    r9,r10
   140031df3:	jne    0x140031dd0
   140031df5:	mov    rcx,QWORD PTR [rsi+0x8]
   140031df9:	mov    rax,rbp
   140031dfc:	sub    rcx,QWORD PTR [rsi]
   140031dff:	imul   rcx
   140031e02:	sar    rdx,0x2
   140031e06:	mov    rax,rdx
   140031e09:	shr    rax,0x3f
   140031e0d:	add    rdx,rax
   140031e10:	mov    rax,QWORD PTR [rdi]
   140031e13:	lea    rcx,[rdx+rdx*2]
   140031e17:	lea    rcx,[rax+rcx*8]
   140031e1b:	mov    QWORD PTR [rdi+0x8],rcx
   140031e1f:	jmp    0x140031e75
   140031e21:	mov    rcx,QWORD PTR [rdi+0x10]
   140031e25:	mov    rax,rbp
   140031e28:	sub    rcx,r8
   140031e2b:	imul   rcx
   140031e2e:	sar    rdx,0x2
   140031e32:	mov    rax,rdx
   140031e35:	shr    rax,0x3f
   140031e39:	add    rdx,rax
   140031e3c:	cmp    r11,rdx
   140031e3f:	ja     0x140031e8d
   140031e41:	lea    rax,[rbx+rbx*2]
   140031e45:	mov    rcx,r9
   140031e48:	lea    rbx,[r9+rax*8]
   140031e4c:	mov    rdx,rbx
   140031e4f:	call   0x14002d7d0
   140031e54:	movzx  eax,BYTE PTR [rsp+0x40]
   140031e59:	mov    r8,QWORD PTR [rdi+0x8]
   140031e5d:	mov    rdx,QWORD PTR [rsi+0x8]
   140031e61:	mov    BYTE PTR [rsp+0x20],al
   140031e65:	lea    r9,[rdi+0x18]
   140031e69:	mov    rcx,rbx
   140031e6c:	call   0x14002f740
   140031e71:	mov    QWORD PTR [rdi+0x8],rax
   140031e75:	mov    rbx,QWORD PTR [rsp+0x48]
   140031e7a:	mov    rbp,QWORD PTR [rsp+0x50]
   140031e7f:	mov    rax,rdi
   140031e82:	mov    rsi,QWORD PTR [rsp+0x58]
   140031e87:	add    rsp,0x30
   140031e8b:	pop    rdi
   140031e8c:	ret    
   140031e8d:	test   r8,r8
   140031e90:	je     0x140031e9a
   140031e92:	mov    rcx,r8
   140031e95:	call   0x14002b150
   140031e9a:	mov    rcx,QWORD PTR [rsi+0x8]
   140031e9e:	mov    rax,rbp
   140031ea1:	sub    rcx,QWORD PTR [rsi]
   140031ea4:	imul   rcx
   140031ea7:	mov    rcx,rdi
   140031eaa:	sar    rdx,0x2
   140031eae:	mov    rax,rdx
   140031eb1:	shr    rax,0x3f
   140031eb5:	add    rdx,rax
   140031eb8:	call   0x14002e0c0
   140031ebd:	test   al,al
   140031ebf:	je     0x140031e75
   140031ec1:	movzx  eax,BYTE PTR [rsp+0x40]
   140031ec6:	mov    r8,QWORD PTR [rdi]
   140031ec9:	mov    rdx,QWORD PTR [rsi+0x8]
   140031ecd:	mov    rcx,QWORD PTR [rsi]
   140031ed0:	mov    BYTE PTR [rsp+0x20],al
   140031ed4:	lea    r9,[rdi+0x18]
   140031ed8:	jmp    0x140031e6c
   140031eda:	mov    rax,rcx
   140031edd:	mov    rsi,QWORD PTR [rsp+0x58]
   140031ee2:	add    rsp,0x30
   140031ee6:	pop    rdi
   140031ee7:	ret    
   140031ee8:	int3   
   140031ee9:	int3   
   140031eea:	int3   
   140031eeb:	int3   
   140031eec:	int3   
   140031eed:	int3   
   140031eee:	int3   
   140031eef:	int3   
   140031ef0:	mov    QWORD PTR [rsp+0x10],rbx
   140031ef5:	mov    QWORD PTR [rsp+0x18],rbp
   140031efa:	mov    QWORD PTR [rsp+0x20],rsi
   140031eff:	push   rdi
   140031f00:	sub    rsp,0x40
   140031f04:	mov    rax,QWORD PTR [rcx+0x58]
   140031f08:	mov    rdi,rcx
   140031f0b:	mov    esi,DWORD PTR [rax+0x10]
   140031f0e:	cmp    esi,0x2710
   140031f14:	jl     0x140031fc4
   140031f1a:	mov    rax,QWORD PTR [rcx+0x48]
   140031f1e:	lea    r9,[rsp+0x50]
   140031f23:	lea    rcx,[rsp+0x30]
   140031f28:	mov    rdx,QWORD PTR [rax]
   140031f2b:	xor    eax,eax
   140031f2d:	mov    DWORD PTR [rsp+0x54],esi
   140031f31:	mov    r8,QWORD PTR [rdx+0x8]
   140031f35:	mov    rdx,QWORD PTR [rdx]
   140031f38:	mov    DWORD PTR [rsp+0x50],eax
   140031f3c:	mov    QWORD PTR [rsp+0x20],rax
   140031f41:	call   0x14002f2e0
   140031f46:	mov    r11,QWORD PTR [rsp+0x30]
   140031f4b:	mov    rbx,QWORD PTR [rsp+0x38]
   140031f50:	movabs rbp,0x2aaaaaaaaaaaaaab
   140031f5a:	nop    WORD PTR [rax+rax*1+0x0]
   140031f60:	mov    esi,DWORD PTR [r11]
   140031f63:	add    r11,0x8
   140031f67:	cmp    r11,rbx
   140031f6a:	je     0x140031fc4
   140031f6c:	mov    r8,QWORD PTR [rdi+0x10]
   140031f70:	cmp    BYTE PTR [r8+0x54],0x0
   140031f75:	je     0x140031f80
   140031f77:	mov    rax,QWORD PTR [r8+0x8]
   140031f7b:	cmp    QWORD PTR [r8],rax
   140031f7e:	je     0x140031fe5
   140031f80:	mov    r10,QWORD PTR [r8]
   140031f83:	mov    rcx,QWORD PTR [r8+0x8]
   140031f87:	mov    rax,rbp
   140031f8a:	sub    rcx,r10
   140031f8d:	lea    r9d,[rsi+0x2]
   140031f91:	imul   rcx
   140031f94:	sar    rdx,0x2
   140031f98:	mov    rax,rdx
   140031f9b:	shr    rax,0x3f
   140031f9f:	add    rdx,rax
   140031fa2:	cmp    r9d,edx
   140031fa5:	jge    0x140031fb9
   140031fa7:	test   r9d,r9d
   140031faa:	js     0x140031fb9
   140031fac:	movsxd rax,r9d
   140031faf:	lea    rcx,[rax+rax*2]
   140031fb3:	lea    r8,[r10+rcx*8]
   140031fb7:	jmp    0x140031fbd
   140031fb9:	add    r8,0x28
   140031fbd:	cmp    BYTE PTR [r8+0x10],0x1
   140031fc2:	jne    0x140031f60
   140031fc4:	test   DWORD PTR [rdi+0x60],0x10000
   140031fcb:	je     0x140031feb
   140031fcd:	mov    rcx,QWORD PTR [rdi+0x10]
   140031fd1:	mov    edx,esi
   140031fd3:	call   0x140031cc0
   140031fd8:	cmp    BYTE PTR [rax+0x10],0x0
   140031fdc:	jne    0x140031feb
   140031fde:	xor    al,al
   140031fe0:	jmp    0x140032075
   140031fe5:	call   0x140031170
   140031fea:	int3   
   140031feb:	mov    rcx,QWORD PTR [rdi+0x10]
   140031fef:	mov    edx,esi
   140031ff1:	call   0x140031cc0
   140031ff6:	mov    rcx,QWORD PTR [rdi+0x10]
   140031ffa:	mov    edx,esi
   140031ffc:	mov    rbx,QWORD PTR [rax]
   140031fff:	call   0x140031cc0
   140032004:	mov    rax,QWORD PTR [rax+0x8]
   140032008:	cmp    rbx,rax
   14003200b:	je     0x140032067
   14003200d:	nop    DWORD PTR [rax]
   140032010:	mov    rcx,QWORD PTR [rdi+0x28]
   140032014:	cmp    rcx,QWORD PTR [rdi+0x20]
   140032018:	je     0x140031fde
   14003201a:	movzx  r8d,BYTE PTR [rdi+0x78]
   14003201f:	movzx  r9d,BYTE PTR [rcx]
   140032023:	test   r8b,r8b
   140032026:	je     0x14003203c
   140032028:	mov    rcx,QWORD PTR [rdi+0x50]
   14003202c:	movzx  edx,r9b
   140032030:	mov    rcx,QWORD PTR [rcx]
   140032033:	movzx  r9d,BYTE PTR [rcx+rdx*1+0x104]
   14003203c:	movzx  edx,BYTE PTR [rbx]
   14003203f:	test   r8b,r8b
   140032042:	je     0x140032056
   140032044:	mov    rcx,QWORD PTR [rdi+0x50]
   140032048:	movzx  edx,dl
   14003204b:	mov    rcx,QWORD PTR [rcx]
   14003204e:	movzx  edx,BYTE PTR [rcx+rdx*1+0x104]
   140032056:	cmp    r9b,dl
   140032059:	jne    0x140031fde
   14003205b:	inc    QWORD PTR [rdi+0x28]
   14003205f:	inc    rbx
   140032062:	cmp    rbx,rax
   140032065:	jne    0x140032010
   140032067:	mov    rax,QWORD PTR [rdi+0x58]
   14003206b:	mov    rcx,QWORD PTR [rax+0x8]
   14003206f:	mov    al,0x1
   140032071:	mov    QWORD PTR [rdi+0x58],rcx
   140032075:	mov    rbx,QWORD PTR [rsp+0x58]
   14003207a:	mov    rbp,QWORD PTR [rsp+0x60]
   14003207f:	mov    rsi,QWORD PTR [rsp+0x68]
   140032084:	add    rsp,0x40
   140032088:	pop    rdi
   140032089:	ret    
   14003208a:	int3   
   14003208b:	int3   
   14003208c:	int3   
   14003208d:	int3   
   14003208e:	int3   
   14003208f:	int3   
   140032090:	rex push rbx
   140032092:	push   rbp
   140032093:	push   rdi
   140032094:	sub    rsp,0x40
   140032098:	mov    rbp,QWORD PTR [rcx+0x58]
   14003209c:	mov    rdi,rcx
   14003209f:	xor    bl,bl
   1400320a1:	mov    ecx,DWORD PTR [rbp+0x10]
   1400320a4:	cmp    ecx,0x270f
   1400320aa:	jne    0x1400320b6
   1400320ac:	xor    al,al
   1400320ae:	add    rsp,0x40
   1400320b2:	pop    rdi
   1400320b3:	pop    rbp
   1400320b4:	pop    rbx
   1400320b5:	ret    
   1400320b6:	mov    QWORD PTR [rsp+0x68],rsi
   1400320bb:	mov    QWORD PTR [rsp+0x70],r12
   1400320c0:	test   ecx,ecx
   1400320c2:	jle    0x1400321c1
   1400320c8:	cmp    ecx,0x2710
   1400320ce:	jl     0x1400321a5
   1400320d4:	mov    rax,QWORD PTR [rdi+0x48]
   1400320d8:	mov    DWORD PTR [rsp+0x64],ecx
   1400320dc:	lea    r9,[rsp+0x60]
   1400320e1:	mov    rdx,QWORD PTR [rax]
   1400320e4:	xor    eax,eax
   1400320e6:	lea    rcx,[rsp+0x30]
   1400320eb:	mov    r8,QWORD PTR [rdx+0x8]
   1400320ef:	mov    rdx,QWORD PTR [rdx]
   1400320f2:	mov    DWORD PTR [rsp+0x60],eax
   1400320f6:	mov    QWORD PTR [rsp+0x20],rax
   1400320fb:	call   0x14002f2e0
   140032100:	mov    r11,QWORD PTR [rsp+0x30]
   140032105:	mov    rbp,QWORD PTR [rsp+0x38]
   14003210a:	cmp    r11,rbp
   14003210d:	je     0x1400321b4
   140032113:	mov    r9,QWORD PTR [rdi+0x10]
   140032117:	movabs r12,0x2aaaaaaaaaaaaaab
   140032121:	movzx  esi,BYTE PTR [r9+0x54]
   140032126:	mov    r8d,DWORD PTR [r11]
   140032129:	test   sil,sil
   14003212c:	je     0x140032137
   14003212e:	mov    rax,QWORD PTR [r9+0x8]
   140032132:	cmp    QWORD PTR [r9],rax
   140032135:	je     0x140032190
   140032137:	mov    r10,QWORD PTR [r9]
   14003213a:	mov    rcx,QWORD PTR [r9+0x8]
   14003213e:	mov    rax,r12
   140032141:	sub    rcx,r10
   140032144:	add    r8d,0x2
   140032148:	imul   rcx
   14003214b:	sar    rdx,0x2
   14003214f:	mov    rax,rdx
   140032152:	shr    rax,0x3f
   140032156:	add    rdx,rax
   140032159:	cmp    r8d,edx
   14003215c:	jge    0x140032170
   14003215e:	test   r8d,r8d
   140032161:	js     0x140032170
   140032163:	movsxd rax,r8d
   140032166:	lea    rcx,[rax+rax*2]
   14003216a:	lea    rax,[r10+rcx*8]
   14003216e:	jmp    0x140032174
   140032170:	lea    rax,[r9+0x28]
   140032174:	cmp    BYTE PTR [rax+0x10],0x0
   140032178:	jne    0x140032196
   14003217a:	add    r11,0x8
   14003217e:	cmp    r11,rbp
   140032181:	jne    0x140032126
   140032183:	mov    rax,QWORD PTR [rdi+0x58]
   140032187:	mov    rcx,QWORD PTR [rax+0x8]
   14003218b:	jmp    0x14003225e
   140032190:	call   0x140031170
   140032195:	int3   
   140032196:	mov    rax,QWORD PTR [rdi+0x58]
   14003219a:	mov    bl,0x1
   14003219c:	mov    rcx,QWORD PTR [rax+0x8]
   1400321a0:	jmp    0x14003225e
   1400321a5:	mov    edx,ecx
   1400321a7:	mov    rcx,QWORD PTR [rdi+0x10]
   1400321ab:	call   0x140031cc0
   1400321b0:	movzx  ebx,BYTE PTR [rax+0x10]
   1400321b4:	mov    rax,QWORD PTR [rdi+0x58]
   1400321b8:	mov    rcx,QWORD PTR [rax+0x8]
   1400321bc:	jmp    0x14003225e
   1400321c1:	or     esi,0xffffffff
   1400321c4:	mov    r8d,esi
   1400321c7:	sub    r8d,ecx
   1400321ca:	cmp    r8d,0x2710
   1400321d1:	jl     0x140032237
   1400321d3:	mov    rax,QWORD PTR [rdi+0x48]
   1400321d7:	mov    DWORD PTR [rsp+0x64],r8d
   1400321dc:	lea    r9,[rsp+0x60]
   1400321e1:	mov    rdx,QWORD PTR [rax]
   1400321e4:	xor    eax,eax
   1400321e6:	lea    rcx,[rsp+0x30]
   1400321eb:	mov    r8,QWORD PTR [rdx+0x8]
   1400321ef:	mov    rdx,QWORD PTR [rdx]
   1400321f2:	mov    DWORD PTR [rsp+0x60],eax
   1400321f6:	mov    QWORD PTR [rsp+0x20],rax
   1400321fb:	call   0x14002f2e0
   140032200:	mov    rax,QWORD PTR [rdi+0xc0]
   140032207:	mov    r11,QWORD PTR [rsp+0x30]
   14003220c:	cmp    QWORD PTR [rdi+0xb8],rax
   140032213:	je     0x140032218
   140032215:	mov    esi,DWORD PTR [rax-0x70]
   140032218:	mov    rax,QWORD PTR [rsp+0x38]
   14003221d:	cmp    r11,rax
   140032220:	je     0x14003225a
   140032222:	cmp    esi,DWORD PTR [r11]
   140032225:	sete   bl
   140032228:	test   bl,bl
   14003222a:	jne    0x14003225a
   14003222c:	add    r11,0x8
   140032230:	cmp    r11,rax
   140032233:	jne    0x140032222
   140032235:	jmp    0x14003225a
   140032237:	mov    rax,QWORD PTR [rdi+0xc0]
   14003223e:	cmp    QWORD PTR [rdi+0xb8],rax
   140032245:	je     0x140032258
   140032247:	add    rax,0xffffffffffffff90
   14003224b:	cmp    DWORD PTR [rax],r8d
   14003224e:	je     0x140032254
   140032250:	test   ecx,ecx
   140032252:	jne    0x140032258
   140032254:	mov    bl,0x1
   140032256:	jmp    0x14003225a
   140032258:	xor    bl,bl
   14003225a:	mov    rcx,QWORD PTR [rbp+0x8]
   14003225e:	mov    rsi,QWORD PTR [rsp+0x68]
   140032263:	mov    r12,QWORD PTR [rsp+0x70]
   140032268:	mov    QWORD PTR [rdi+0x58],rcx
   14003226c:	movzx  eax,bl
   14003226f:	add    rsp,0x40
   140032273:	pop    rdi
   140032274:	pop    rbp
   140032275:	pop    rbx
   140032276:	ret    
   140032277:	int3   
   140032278:	int3   
   140032279:	int3   
   14003227a:	int3   
   14003227b:	int3   
   14003227c:	int3   
   14003227d:	int3   
   14003227e:	int3   
   14003227f:	int3   
   140032280:	rex push rbx
   140032282:	sub    rsp,0x20
   140032286:	mov    rcx,QWORD PTR [rcx]
   140032289:	mov    rbx,rdx
   14003228c:	mov    DWORD PTR [rsp+0x30],0x0
   140032294:	call   0x140031230
   140032299:	mov    rax,rbx
   14003229c:	add    rsp,0x20
   1400322a0:	pop    rbx
   1400322a1:	ret    
   1400322a2:	int3   
   1400322a3:	int3   
   1400322a4:	int3   
   1400322a5:	int3   
   1400322a6:	int3   
   1400322a7:	int3   
   1400322a8:	int3   
   1400322a9:	int3   
   1400322aa:	int3   
   1400322ab:	int3   
   1400322ac:	int3   
   1400322ad:	int3   
   1400322ae:	int3   
   1400322af:	int3   
   1400322b0:	rex push rbx
   1400322b2:	push   rsi
   1400322b3:	push   rdi
   1400322b4:	sub    rsp,0x90
   1400322bb:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400322c4:	mov    rax,QWORD PTR [rip+0x35f25]        # 0x1400681f0
   1400322cb:	xor    rax,rsp
   1400322ce:	mov    QWORD PTR [rsp+0x88],rax
   1400322d6:	mov    rsi,r8
   1400322d9:	mov    edi,edx
   1400322db:	mov    rbx,rcx
   1400322de:	mov    rax,QWORD PTR [rcx]
   1400322e1:	mov    r8d,edx
   1400322e4:	lea    rdx,[rsp+0x60]
   1400322e9:	mov    rcx,QWORD PTR [rax+0x20]
   1400322ed:	call   0x140032280
   1400322f2:	nop
   1400322f3:	mov    QWORD PTR [rsp+0x48],0xf
   1400322fc:	mov    QWORD PTR [rsp+0x40],0x0
   140032305:	mov    BYTE PTR [rsp+0x30],0x0
   14003230a:	or     r9,0xffffffffffffffff
   14003230e:	xor    r8d,r8d
   140032311:	lea    rdx,[rsp+0x60]
   140032316:	lea    rcx,[rsp+0x30]
   14003231b:	call   0x1400048b8
   140032320:	mov    QWORD PTR [rsp+0x20],rsi
   140032325:	lea    r9,[rsp+0x30]
   14003232a:	mov    r8,rsi
   14003232d:	mov    edx,edi
   14003232f:	mov    rcx,rbx
   140032332:	call   0x140031400
   140032337:	nop
   140032338:	cmp    QWORD PTR [rsp+0x78],0x10
   14003233e:	jb     0x14003234a
   140032340:	mov    rcx,QWORD PTR [rsp+0x60]
   140032345:	call   0x14002b150
   14003234a:	mov    rcx,QWORD PTR [rsp+0x88]
   140032352:	xor    rcx,rsp
   140032355:	call   0x14002b100
   14003235a:	add    rsp,0x90
   140032361:	pop    rdi
   140032362:	pop    rsi
   140032363:	pop    rbx
   140032364:	ret    
   140032365:	int3   
   140032366:	int3   
   140032367:	int3   
   140032368:	int3   
   140032369:	int3   
   14003236a:	int3   
   14003236b:	int3   
   14003236c:	int3   
   14003236d:	int3   
   14003236e:	int3   
   14003236f:	int3   
   140032370:	rex push rdi
   140032372:	sub    rsp,0x90
   140032379:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140032382:	mov    QWORD PTR [rsp+0xa8],rbx
   14003238a:	mov    rax,QWORD PTR [rip+0x35e5f]        # 0x1400681f0
   140032391:	xor    rax,rsp
   140032394:	mov    QWORD PTR [rsp+0x88],rax
   14003239c:	mov    r8,rdx
   14003239f:	mov    rdi,rcx
   1400323a2:	mov    rcx,QWORD PTR [rcx]
   1400323a5:	mov    rax,QWORD PTR [rcx+0x170]
   1400323ac:	sub    rax,QWORD PTR [rcx+0x168]
   1400323b3:	cmp    QWORD PTR [rdi+0x80],rax
   1400323ba:	jne    0x140032494
   1400323c0:	mov    rax,QWORD PTR [rdi+0x98]
   1400323c7:	sub    rax,QWORD PTR [rdi+0x90]
   1400323ce:	test   rax,0xfffffffffffffff8
   1400323d4:	je     0x140032494
   1400323da:	mov    rax,QWORD PTR [rdi+0x98]
   1400323e1:	cmp    QWORD PTR [rax-0x8],rdx
   1400323e5:	jle    0x140032494
   1400323eb:	mov    eax,DWORD PTR [rcx+0x30]
   1400323ee:	test   al,0x3
   1400323f0:	jne    0x1400323fc
   1400323f2:	bt     eax,0x18
   1400323f6:	jae    0x140032494
   1400323fc:	mov    QWORD PTR [rsp+0x78],0xf
   140032405:	mov    QWORD PTR [rsp+0x70],0x0
   14003240e:	mov    BYTE PTR [rsp+0x60],0x0
   140032413:	mov    r8d,0x40
   140032419:	lea    rdx,[rip+0x1c490]        # 0x14004e8b0
   140032420:	lea    rcx,[rsp+0x60]
   140032425:	call   0x140005154
   14003242a:	nop
   14003242b:	mov    rbx,QWORD PTR [rdi+0x60]
   14003242f:	sub    rbx,QWORD PTR [rdi+0x50]
   140032433:	mov    QWORD PTR [rsp+0x48],0xf
   14003243c:	mov    QWORD PTR [rsp+0x40],0x0
   140032445:	mov    BYTE PTR [rsp+0x30],0x0
   14003244a:	or     r9,0xffffffffffffffff
   14003244e:	xor    r8d,r8d
   140032451:	lea    rdx,[rsp+0x60]
   140032456:	lea    rcx,[rsp+0x30]
   14003245b:	call   0x1400048b8
   140032460:	mov    QWORD PTR [rsp+0x20],rbx
   140032465:	lea    r9,[rsp+0x30]
   14003246a:	mov    r8,rbx
   14003246d:	mov    edx,0x11
   140032472:	mov    rcx,rdi
   140032475:	call   0x140031400
   14003247a:	nop
   14003247b:	cmp    QWORD PTR [rsp+0x78],0x10
   140032481:	jb     0x14003248d
   140032483:	mov    rcx,QWORD PTR [rsp+0x60]
   140032488:	call   0x14002b150
   14003248d:	xor    al,al
   14003248f:	jmp    0x140032537
   140032494:	mov    rax,QWORD PTR [rdi+0x98]
   14003249b:	sub    rax,QWORD PTR [rdi+0x90]
   1400324a2:	test   rax,0xfffffffffffffff8
   1400324a8:	je     0x140032535
   1400324ae:	xchg   ax,ax
   1400324b0:	mov    rax,QWORD PTR [rdi+0x98]
   1400324b7:	cmp    QWORD PTR [rax-0x8],r8
   1400324bb:	jle    0x140032535
   1400324bd:	mov    r9,QWORD PTR [rax-0x8]
   1400324c1:	cmp    QWORD PTR [rdi+0x90],rax
   1400324c8:	je     0x1400324d5
   1400324ca:	add    rax,0xfffffffffffffff8
   1400324ce:	mov    QWORD PTR [rdi+0x98],rax
   1400324d5:	mov    rdx,QWORD PTR [rdi]
   1400324d8:	mov    rax,QWORD PTR [rdx+0x168]
   1400324df:	mov    rcx,QWORD PTR [rdx+0x170]
   1400324e6:	sub    rcx,rax
   1400324e9:	add    rcx,0x7
   1400324ed:	and    rcx,0xfffffffffffffff8
   1400324f1:	add    rcx,rax
   1400324f4:	mov    QWORD PTR [rdx+0x170],rcx
   1400324fb:	mov    rax,QWORD PTR [rdi]
   1400324fe:	mov    rcx,QWORD PTR [rax+0x170]
   140032505:	sub    rcx,QWORD PTR [rax+0x168]
   14003250c:	sub    rcx,r9
   14003250f:	mov    rax,QWORD PTR [rax+0x168]
   140032516:	mov    QWORD PTR [rax+r9*1+0x10],rcx
   14003251b:	mov    rax,QWORD PTR [rdi+0x98]
   140032522:	sub    rax,QWORD PTR [rdi+0x90]
   140032529:	test   rax,0xfffffffffffffff8
   14003252f:	jne    0x1400324b0
   140032535:	mov    al,0x1
   140032537:	mov    rcx,QWORD PTR [rsp+0x88]
   14003253f:	xor    rcx,rsp
   140032542:	call   0x14002b100
   140032547:	mov    rbx,QWORD PTR [rsp+0xa8]
   14003254f:	add    rsp,0x90
   140032556:	pop    rdi
   140032557:	ret    
   140032558:	int3   
   140032559:	int3   
   14003255a:	int3   
   14003255b:	int3   
   14003255c:	int3   
   14003255d:	int3   
   14003255e:	int3   
   14003255f:	int3   
   140032560:	rex push rbp
   140032562:	push   rsi
   140032563:	push   rdi
   140032564:	sub    rsp,0x60
   140032568:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140032571:	mov    QWORD PTR [rsp+0x98],rbx
   140032579:	mov    rax,QWORD PTR [rip+0x35c70]        # 0x1400681f0
   140032580:	xor    rax,rsp
   140032583:	mov    QWORD PTR [rsp+0x50],rax
   140032588:	mov    rdi,r8
   14003258b:	mov    rsi,rdx
   14003258e:	mov    rbp,rcx
   140032591:	call   0x140031910
   140032596:	test   eax,eax
   140032598:	jne    0x140032658
   14003259e:	mov    r9d,0xf
   1400325a4:	mov    QWORD PTR [rsp+0x40],r9
   1400325a9:	xor    ebx,ebx
   1400325ab:	mov    ecx,ebx
   1400325ad:	mov    QWORD PTR [rsp+0x38],rbx
   1400325b2:	mov    BYTE PTR [rsp+0x28],cl
   1400325b6:	cmp    rsi,rdi
   1400325b9:	je     0x1400325d8
   1400325bb:	sub    rdi,rsi
   1400325be:	mov    r8,rdi
   1400325c1:	mov    rdx,rsi
   1400325c4:	lea    rcx,[rsp+0x28]
   1400325c9:	call   0x140005154
   1400325ce:	mov    r9,QWORD PTR [rsp+0x40]
   1400325d3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400325d8:	test   rcx,rcx
   1400325db:	je     0x14003261c
   1400325dd:	nop    DWORD PTR [rax]
   1400325e0:	lea    rax,[rsp+0x28]
   1400325e5:	mov    rdx,QWORD PTR [rsp+0x28]
   1400325ea:	cmp    r9,0x10
   1400325ee:	cmovae rax,rdx
   1400325f2:	movzx  eax,BYTE PTR [rax+rbx*1]
   1400325f6:	movzx  ecx,BYTE PTR [rax+rbp*1+0x104]
   1400325fe:	lea    rax,[rsp+0x28]
   140032603:	cmovae rax,rdx
   140032607:	mov    BYTE PTR [rax+rbx*1],cl
   14003260a:	inc    rbx
   14003260d:	mov    rcx,QWORD PTR [rsp+0x38]
   140032612:	mov    r9,QWORD PTR [rsp+0x40]
   140032617:	cmp    rbx,rcx
   14003261a:	jb     0x1400325e0
   14003261c:	lea    r8,[rsp+0x28]
   140032621:	mov    rax,QWORD PTR [rsp+0x28]
   140032626:	cmp    r9,0x10
   14003262a:	cmovae r8,rax
   14003262e:	lea    rdx,[rsp+0x28]
   140032633:	cmovae rdx,rax
   140032637:	add    r8,rcx
   14003263a:	mov    rcx,rbp
   14003263d:	call   0x140031910
   140032642:	mov    ebx,eax
   140032644:	cmp    QWORD PTR [rsp+0x40],0x10
   14003264a:	jb     0x140032658
   14003264c:	mov    rcx,QWORD PTR [rsp+0x28]
   140032651:	call   0x14002b150
   140032656:	mov    eax,ebx
   140032658:	mov    rcx,QWORD PTR [rsp+0x50]
   14003265d:	xor    rcx,rsp
   140032660:	call   0x14002b100
   140032665:	mov    rbx,QWORD PTR [rsp+0x98]
   14003266d:	add    rsp,0x60
   140032671:	pop    rdi
   140032672:	pop    rsi
   140032673:	pop    rbp
   140032674:	ret    
   140032675:	int3   
   140032676:	int3   
   140032677:	int3   
   140032678:	int3   
   140032679:	int3   
   14003267a:	int3   
   14003267b:	int3   
   14003267c:	int3   
   14003267d:	int3   
   14003267e:	int3   
   14003267f:	int3   
   140032680:	mov    rax,rsp
   140032683:	push   rdi
   140032684:	push   r12
   140032686:	push   r13
   140032688:	push   r14
   14003268a:	push   r15
   14003268c:	sub    rsp,0x90
   140032693:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14003269c:	mov    QWORD PTR [rax+0x10],rbx
   1400326a0:	mov    QWORD PTR [rax+0x18],rbp
   1400326a4:	mov    QWORD PTR [rax+0x20],rsi
   1400326a8:	mov    rax,QWORD PTR [rip+0x35b41]        # 0x1400681f0
   1400326af:	xor    rax,rsp
   1400326b2:	mov    QWORD PTR [rsp+0x88],rax
   1400326ba:	mov    r14,r8
   1400326bd:	mov    r15,rdx
   1400326c0:	mov    rdi,rcx
   1400326c3:	mov    r12b,0x1
   1400326c6:	xor    r13b,r13b
   1400326c9:	mov    r9,QWORD PTR [rcx+0x60]
   1400326cd:	cmp    r9,QWORD PTR [rcx+0x58]
   1400326d1:	je     0x140032731
   1400326d3:	mov    r10,QWORD PTR [rcx]
   1400326d6:	mov    eax,DWORD PTR [r10+0x30]
   1400326da:	test   eax,0x203
   1400326df:	je     0x1400326ed
   1400326e1:	and    eax,0x1003
   1400326e6:	cmp    eax,0x1001
   1400326eb:	jne    0x140032731
   1400326ed:	mov    rdx,QWORD PTR [rcx+0x8]
   1400326f1:	mov    rcx,QWORD PTR [rdx]
   1400326f4:	movzx  eax,BYTE PTR [r9]
   1400326f8:	cmp    BYTE PTR [rax+rcx*1+0x4],0x8
   1400326fd:	jne    0x14003270a
   1400326ff:	xor    r12b,r12b
   140032702:	lea    rax,[r9+0x1]
   140032706:	mov    QWORD PTR [rdi+0x60],rax
   14003270a:	mov    eax,DWORD PTR [r10+0x30]
   14003270e:	and    eax,0x3
   140032711:	test   al,al
   140032713:	jne    0x140032731
   140032715:	mov    rcx,QWORD PTR [rdx]
   140032718:	mov    rdx,QWORD PTR [rdi+0x60]
   14003271c:	movzx  eax,BYTE PTR [rdx]
   14003271f:	cmp    BYTE PTR [rax+rcx*1+0x4],0x7
   140032724:	jne    0x140032731
   140032726:	mov    r13b,0x1
   140032729:	lea    rax,[rdx+0x1]
   14003272d:	mov    QWORD PTR [rdi+0x60],rax
   140032731:	mov    rsi,QWORD PTR [rdi+0x10]
   140032735:	test   rsi,rsi
   140032738:	jne    0x1400327cd
   14003273e:	mov    QWORD PTR [rsp+0x78],0xf
   140032747:	xor    r12d,r12d
   14003274a:	mov    QWORD PTR [rsp+0x70],r12
   14003274f:	mov    BYTE PTR [rsp+0x60],r12b
   140032754:	lea    r8d,[rsi+0x12]
   140032758:	lea    rdx,[rip+0x1c1e9]        # 0x14004e948
   14003275f:	lea    rcx,[rsp+0x60]
   140032764:	call   0x140005154
   140032769:	nop
   14003276a:	mov    rbx,QWORD PTR [rdi+0x60]
   14003276e:	sub    rbx,QWORD PTR [rdi+0x50]
   140032772:	mov    QWORD PTR [rsp+0x48],0xf
   14003277b:	mov    QWORD PTR [rsp+0x40],r12
   140032780:	mov    BYTE PTR [rsp+0x30],r12b
   140032785:	or     r9,0xffffffffffffffff
   140032789:	xor    r8d,r8d
   14003278c:	lea    rdx,[rsp+0x60]
   140032791:	lea    rcx,[rsp+0x30]
   140032796:	call   0x1400048b8
   14003279b:	mov    QWORD PTR [rsp+0x20],rbx
   1400327a0:	lea    r9,[rsp+0x30]
   1400327a5:	mov    r8,rbx
   1400327a8:	lea    edx,[rsi+0xd]
   1400327ab:	mov    rcx,rdi
   1400327ae:	call   0x140031400
   1400327b3:	nop
   1400327b4:	cmp    QWORD PTR [rsp+0x78],0x10
   1400327ba:	jb     0x1400327c6
   1400327bc:	mov    rcx,QWORD PTR [rsp+0x60]
   1400327c1:	call   0x14002b150
   1400327c6:	xor    al,al
   1400327c8:	jmp    0x140032a5c
   1400327cd:	movsxd rax,DWORD PTR [rsi]
   1400327d0:	cmp    eax,0x1
   1400327d3:	jne    0x1400327db
   1400327d5:	mov    rsi,QWORD PTR [rdi+0x78]
   1400327d9:	jmp    0x140032857
   1400327db:	cmp    eax,0x2
   1400327de:	jne    0x140032811
   1400327e0:	cmp    DWORD PTR [rsi+0x10],0x1
   1400327e4:	jbe    0x140032811
   1400327e6:	mov    ecx,DWORD PTR [rsi+0x10]
   1400327e9:	dec    ecx
   1400327eb:	movzx  ebx,BYTE PTR [rcx+rsi*1+0x18]
   1400327f0:	mov    DWORD PTR [rsi+0x10],ecx
   1400327f3:	mov    edx,eax
   1400327f5:	lea    r8d,[rax+0x17]
   1400327f9:	mov    rcx,rdi
   1400327fc:	call   0x14002eb10
   140032801:	mov    DWORD PTR [rax+0x10],0x1
   140032808:	mov    BYTE PTR [rax+0x18],bl
   14003280b:	mov    rsi,QWORD PTR [rdi+0x10]
   14003280f:	jmp    0x14003284d
   140032811:	cmp    eax,0x1a
   140032814:	ja     0x14003284d
   140032816:	lea    rdx,[rip+0xfffffffffffcd7e3]        # 0x140000000
   14003281d:	movzx  eax,BYTE PTR [rdx+rax*1+0x32a98]
   140032825:	mov    ecx,DWORD PTR [rdx+rax*4+0x32a90]
   14003282c:	add    rcx,rdx
   14003282f:	jmp    rcx
   140032831:	mov    r8,QWORD PTR [rdi+0x60]
   140032835:	sub    r8,QWORD PTR [rdi+0x50]
   140032839:	mov    edx,0xd
   14003283e:	mov    rcx,rdi
   140032841:	call   0x1400322b0
   140032846:	xor    al,al
   140032848:	jmp    0x140032a5c
   14003284d:	mov    rax,QWORD PTR [rdi]
   140032850:	sub    rsi,QWORD PTR [rax+0x168]
   140032857:	mov    r9d,0x138
   14003285d:	mov    r8d,0x12
   140032863:	mov    rdx,rsi
   140032866:	mov    rcx,rdi
   140032869:	call   0x14002da70
   14003286e:	mov    rbp,rax
   140032871:	mov    QWORD PTR [rax+0x120],r15
   140032878:	mov    QWORD PTR [rax+0x128],r14
   14003287f:	mov    BYTE PTR [rax+0x135],r12b
   140032886:	mov    BYTE PTR [rax+0x134],0x0
   14003288d:	mov    r8,QWORD PTR [rdi]
   140032890:	sub    rbp,QWORD PTR [r8+0x168]
   140032897:	mov    rcx,QWORD PTR [r8+0x168]
   14003289e:	mov    rdx,QWORD PTR [r8+0x170]
   1400328a5:	sub    rdx,rcx
   1400328a8:	add    rdx,0x7
   1400328ac:	and    rdx,0xfffffffffffffff8
   1400328b0:	add    rdx,rcx
   1400328b3:	mov    QWORD PTR [r8+0x170],rdx
   1400328ba:	mov    rdx,QWORD PTR [rdi+0x10]
   1400328be:	test   rdx,rdx
   1400328c1:	je     0x1400328d4
   1400328c3:	mov    rax,QWORD PTR [rdi]
   1400328c6:	mov    rcx,QWORD PTR [rax+0x170]
   1400328cd:	sub    rcx,rdx
   1400328d0:	mov    QWORD PTR [rdx+0x8],rcx
   1400328d4:	mov    rbx,QWORD PTR [rdi]
   1400328d7:	mov    rdx,QWORD PTR [rbx+0x170]
   1400328de:	mov    rax,QWORD PTR [rbx+0x160]
   1400328e5:	sub    rax,rdx
   1400328e8:	cmp    rax,0x18
   1400328ec:	jae    0x140032905
   1400328ee:	sub    rdx,QWORD PTR [rbx+0x168]
   1400328f5:	add    rdx,0x18
   1400328f9:	lea    rcx,[rbx+0x160]
   140032900:	call   0x140041bf0
   140032905:	mov    rcx,QWORD PTR [rbx+0x170]
   14003290c:	lea    rax,[rcx+0x18]
   140032910:	mov    QWORD PTR [rbx+0x170],rax
   140032917:	mov    QWORD PTR [rdi+0x10],rcx
   14003291b:	xor    r12d,r12d
   14003291e:	mov    QWORD PTR [rcx+0x8],r12
   140032922:	mov    rax,QWORD PTR [rdi+0x10]
   140032926:	mov    DWORD PTR [rax],0x10
   14003292c:	mov    rdx,QWORD PTR [rdi+0x10]
   140032930:	mov    rax,QWORD PTR [rdi]
   140032933:	mov    rcx,QWORD PTR [rax+0x168]
   14003293a:	sub    rcx,rdx
   14003293d:	add    rcx,rbp
   140032940:	mov    QWORD PTR [rdx+0x10],rcx
   140032944:	mov    rdx,QWORD PTR [rdi]
   140032947:	mov    rax,QWORD PTR [rdx+0x168]
   14003294e:	mov    rcx,QWORD PTR [rdx+0x170]
   140032955:	sub    rcx,rax
   140032958:	add    rcx,0x7
   14003295c:	and    rcx,0xfffffffffffffff8
   140032960:	add    rcx,rax
   140032963:	mov    QWORD PTR [rdx+0x170],rcx
   14003296a:	mov    rax,QWORD PTR [rdi]
   14003296d:	mov    rcx,QWORD PTR [rax+0x170]
   140032974:	sub    rcx,QWORD PTR [rax+0x168]
   14003297b:	sub    rcx,rbp
   14003297e:	mov    rax,QWORD PTR [rax+0x168]
   140032985:	mov    QWORD PTR [rax+rbp*1+0x10],rcx
   14003298a:	test   r13b,r13b
   14003298d:	je     0x140032a5a
   140032993:	mov    r8,QWORD PTR [rdi+0x60]
   140032997:	cmp    r8,QWORD PTR [rdi+0x58]
   14003299b:	je     0x1400329b9
   14003299d:	mov    rax,QWORD PTR [rdi+0x8]
   1400329a1:	movzx  ecx,BYTE PTR [r8]
   1400329a5:	mov    rax,QWORD PTR [rax]
   1400329a8:	movzx  edx,BYTE PTR [rax+rcx*1+0x4]
   1400329ad:	sub    dl,0x6
   1400329b0:	cmp    dl,0x2
   1400329b3:	jbe    0x140032835
   1400329b9:	mov    r9d,0x18
   1400329bf:	xor    r8d,r8d
   1400329c2:	mov    rdx,rsi
   1400329c5:	mov    rcx,rdi
   1400329c8:	call   0x14002da70
   1400329cd:	mov    DWORD PTR [rax+0x10],0xfffffffd
   1400329d4:	mov    rcx,QWORD PTR [rdi]
   1400329d7:	mov    edx,DWORD PTR [rcx+0x30]
   1400329da:	shr    edx,0x14
   1400329dd:	and    dl,0x1
   1400329e0:	mov    BYTE PTR [rax+0x14],dl
   1400329e3:	lea    rdx,[rsi+0x18]
   1400329e7:	mov    r9d,0x18
   1400329ed:	lea    r8d,[r9-0x8]
   1400329f1:	mov    rcx,rdi
   1400329f4:	call   0x14002da70
   1400329f9:	mov    r11,rax
   1400329fc:	mov    r10,QWORD PTR [rdi]
   1400329ff:	mov    rcx,QWORD PTR [r10+0x168]
   140032a06:	mov    r9,QWORD PTR [r10+0x170]
   140032a0d:	sub    r9,rcx
   140032a10:	add    r9,0x7
   140032a14:	and    r9,0xfffffffffffffff8
   140032a18:	add    r9,rcx
   140032a1b:	mov    QWORD PTR [r10+0x170],r9
   140032a22:	mov    rax,QWORD PTR [rdi]
   140032a25:	mov    rcx,QWORD PTR [rax+0x170]
   140032a2c:	sub    rcx,r11
   140032a2f:	mov    QWORD PTR [r11+0x10],rcx
   140032a33:	mov    edx,0x1
   140032a38:	lea    r8d,[rdx+0x17]
   140032a3c:	mov    rcx,rdi
   140032a3f:	call   0x14002eb10
   140032a44:	mov    DWORD PTR [rax+0x10],0xfffffffd
   140032a4b:	mov    rcx,QWORD PTR [rdi]
   140032a4e:	mov    edx,DWORD PTR [rcx+0x30]
   140032a51:	shr    edx,0x14
   140032a54:	and    dl,0x1
   140032a57:	mov    BYTE PTR [rax+0x14],dl
   140032a5a:	mov    al,0x1
   140032a5c:	mov    rcx,QWORD PTR [rsp+0x88]
   140032a64:	xor    rcx,rsp
   140032a67:	call   0x14002b100
   140032a6c:	lea    r11,[rsp+0x90]
   140032a74:	mov    rbx,QWORD PTR [r11+0x38]
   140032a78:	mov    rbp,QWORD PTR [r11+0x40]
   140032a7c:	mov    rsi,QWORD PTR [r11+0x48]
   140032a80:	mov    rsp,r11
   140032a83:	pop    r15
   140032a85:	pop    r14
   140032a87:	pop    r13
   140032a89:	pop    r12
   140032a8b:	pop    rdi
   140032a8c:	ret    
   140032a8d:	nop    DWORD PTR [rax]
   140032a90:	xor    DWORD PTR [rax],ebp
   140032a92:	add    eax,DWORD PTR [rax]
   140032a94:	rex.WRB sub BYTE PTR [r11],r8b
   140032a97:	add    BYTE PTR [rax],al
   140032a99:	add    DWORD PTR [rcx],eax
   140032a9b:	add    BYTE PTR [rax],al
   140032a9d:	add    DWORD PTR [rcx],eax
   140032a9f:	add    BYTE PTR [rax],al
   140032aa1:	add    BYTE PTR [rax],al
   140032aa3:	add    BYTE PTR [rax],al
   140032aa5:	add    DWORD PTR [rcx],eax
   140032aa7:	add    DWORD PTR [rax],eax
   140032aa9:	add    BYTE PTR [rcx],al
   140032aab:	add    DWORD PTR [rax],eax
   140032aad:	add    BYTE PTR [rcx],al
   140032aaf:	add    DWORD PTR [rcx],eax
   140032ab1:	add    DWORD PTR [rax],eax
   140032ab3:	int3   
   140032ab4:	int3   
   140032ab5:	int3   
   140032ab6:	int3   
   140032ab7:	int3   
   140032ab8:	int3   
   140032ab9:	int3   
   140032aba:	int3   
   140032abb:	int3   
   140032abc:	int3   
   140032abd:	int3   
   140032abe:	int3   
   140032abf:	int3   
   140032ac0:	mov    rax,rsp
   140032ac3:	push   rbp
   140032ac4:	push   r12
   140032ac6:	push   r13
   140032ac8:	push   r14
   140032aca:	push   r15
   140032acc:	lea    rbp,[rax-0x5f]
   140032ad0:	sub    rsp,0xa0
   140032ad7:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   140032adf:	mov    QWORD PTR [rax+0x10],rbx
   140032ae3:	mov    QWORD PTR [rax+0x18],rsi
   140032ae7:	mov    QWORD PTR [rax+0x20],rdi
   140032aeb:	mov    rax,QWORD PTR [rip+0x356fe]        # 0x1400681f0
   140032af2:	xor    rax,rsp
   140032af5:	mov    QWORD PTR [rbp+0x2f],rax
   140032af9:	mov    BYTE PTR [rbp-0x39],dl
   140032afc:	mov    rsi,rcx
   140032aff:	mov    r14,QWORD PTR [rcx+0x58]
   140032b03:	cmp    QWORD PTR [rcx+0x60],r14
   140032b07:	je     0x140032b34
   140032b09:	mov    r12d,DWORD PTR [rcx+0x38]
   140032b0d:	mov    r13,QWORD PTR [rcx+0x8]
   140032b11:	mov    rdi,QWORD PTR [rsi+0x60]
   140032b15:	mov    r8d,r12d
   140032b18:	movzx  edx,BYTE PTR [rdi]
   140032b1b:	mov    rcx,r13
   140032b1e:	call   0x14002cbd0
   140032b23:	test   al,al
   140032b25:	je     0x140032b34
   140032b27:	lea    rax,[rdi+0x1]
   140032b2b:	mov    QWORD PTR [rsi+0x60],rax
   140032b2f:	cmp    rax,r14
   140032b32:	jne    0x140032b11
   140032b34:	cmp    QWORD PTR [rsi+0x60],r14
   140032b38:	jne    0x140032bbf
   140032b3e:	mov    QWORD PTR [rbp+0x1f],0xf
   140032b46:	xor    r12d,r12d
   140032b49:	mov    QWORD PTR [rbp+0x17],r12
   140032b4d:	mov    BYTE PTR [rbp+0x7],r12b
   140032b51:	xor    eax,eax
   140032b53:	or     rcx,0xffffffffffffffff
   140032b57:	mov    rdx,QWORD PTR [rip+0x35b4a]        # 0x1400686a8
   140032b5e:	mov    rdi,rdx
   140032b61:	repnz scas al,BYTE PTR es:[rdi]
   140032b63:	not    rcx
   140032b66:	lea    r8,[rcx-0x1]
   140032b6a:	lea    rcx,[rbp+0x7]
   140032b6e:	call   0x140005154
   140032b73:	nop
   140032b74:	mov    rdi,QWORD PTR [rsi+0x60]
   140032b78:	sub    rdi,QWORD PTR [rsi+0x50]
   140032b7c:	mov    QWORD PTR [rbp-0x19],0xf
   140032b84:	mov    QWORD PTR [rbp-0x21],r12
   140032b88:	mov    BYTE PTR [rbp-0x31],r12b
   140032b8c:	or     r9,0xffffffffffffffff
   140032b90:	xor    r8d,r8d
   140032b93:	lea    rdx,[rbp+0x7]
   140032b97:	lea    rcx,[rbp-0x31]
   140032b9b:	call   0x1400048b8
   140032ba0:	mov    QWORD PTR [rsp+0x20],rdi
   140032ba5:	lea    r9,[rbp-0x31]
   140032ba9:	mov    r8,rdi
   140032bac:	lea    edx,[r12+0x9]
   140032bb1:	mov    rcx,rsi
   140032bb4:	call   0x140031400
   140032bb9:	nop
   140032bba:	jmp    0x1400330aa
   140032bbf:	mov    r9,QWORD PTR [rsi+0x8]
   140032bc3:	mov    r8d,0xa
   140032bc9:	mov    rdx,r14
   140032bcc:	lea    rcx,[rsi+0x60]
   140032bd0:	call   0x14002eda0
   140032bd5:	movsxd r15,eax
   140032bd8:	mov    r14,QWORD PTR [rsi+0x58]
   140032bdc:	cmp    QWORD PTR [rsi+0x60],r14
   140032be0:	je     0x140032c17
   140032be2:	mov    r12d,DWORD PTR [rsi+0x38]
   140032be6:	mov    r13,QWORD PTR [rsi+0x8]
   140032bea:	nop    WORD PTR [rax+rax*1+0x0]
   140032bf0:	mov    rdi,QWORD PTR [rsi+0x60]
   140032bf4:	mov    r8d,r12d
   140032bf7:	movzx  edx,BYTE PTR [rdi]
   140032bfa:	mov    rcx,r13
   140032bfd:	call   0x14002cbd0
   140032c02:	test   al,al
   140032c04:	je     0x140032c17
   140032c06:	lea    rax,[rdi+0x1]
   140032c0a:	mov    QWORD PTR [rsi+0x60],rax
   140032c0e:	mov    rax,r14
   140032c11:	cmp    QWORD PTR [rsi+0x60],r14
   140032c15:	jne    0x140032bf0
   140032c17:	test   r15d,r15d
   140032c1a:	js     0x140033001
   140032c20:	mov    rdi,QWORD PTR [rsi+0x60]
   140032c24:	cmp    rdi,r14
   140032c27:	jne    0x140032cae
   140032c2d:	mov    QWORD PTR [rbp+0x1f],0xf
   140032c35:	xor    r12d,r12d
   140032c38:	mov    QWORD PTR [rbp+0x17],r12
   140032c3c:	mov    BYTE PTR [rbp+0x7],r12b
   140032c40:	xor    eax,eax
   140032c42:	or     rcx,0xffffffffffffffff
   140032c46:	mov    rdx,QWORD PTR [rip+0x35a5b]        # 0x1400686a8
   140032c4d:	mov    rdi,rdx
   140032c50:	repnz scas al,BYTE PTR es:[rdi]
   140032c52:	not    rcx
   140032c55:	lea    r8,[rcx-0x1]
   140032c59:	lea    rcx,[rbp+0x7]
   140032c5d:	call   0x140005154
   140032c62:	nop
   140032c63:	mov    rdi,QWORD PTR [rsi+0x60]
   140032c67:	sub    rdi,QWORD PTR [rsi+0x50]
   140032c6b:	mov    QWORD PTR [rbp-0x19],0xf
   140032c73:	mov    QWORD PTR [rbp-0x21],r12
   140032c77:	mov    BYTE PTR [rbp-0x31],r12b
   140032c7b:	or     r9,0xffffffffffffffff
   140032c7f:	xor    r8d,r8d
   140032c82:	lea    rdx,[rbp+0x7]
   140032c86:	lea    rcx,[rbp-0x31]
   140032c8a:	call   0x1400048b8
   140032c8f:	mov    QWORD PTR [rsp+0x20],rdi
   140032c94:	lea    r9,[rbp-0x31]
   140032c98:	mov    r8,rdi
   140032c9b:	lea    edx,[r12+0x9]
   140032ca0:	mov    rcx,rsi
   140032ca3:	call   0x140031400
   140032ca8:	nop
   140032ca9:	jmp    0x1400330aa
   140032cae:	mov    QWORD PTR [rbp-0x9],r15
   140032cb2:	mov    r12,QWORD PTR [rsi+0x8]
   140032cb6:	mov    rcx,QWORD PTR [r12]
   140032cba:	movzx  eax,BYTE PTR [rdi]
   140032cbd:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1b
   140032cc2:	jne    0x140032dad
   140032cc8:	inc    rdi
   140032ccb:	mov    QWORD PTR [rsi+0x60],rdi
   140032ccf:	cmp    rdi,r14
   140032cd2:	je     0x140032cfe
   140032cd4:	mov    r13d,DWORD PTR [rsi+0x38]
   140032cd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140032ce0:	mov    r8d,r13d
   140032ce3:	movzx  edx,BYTE PTR [rdi]
   140032ce6:	mov    rcx,r12
   140032ce9:	call   0x14002cbd0
   140032cee:	test   al,al
   140032cf0:	je     0x140032cfe
   140032cf2:	inc    rdi
   140032cf5:	mov    QWORD PTR [rsi+0x60],rdi
   140032cf9:	cmp    rdi,r14
   140032cfc:	jne    0x140032ce0
   140032cfe:	cmp    QWORD PTR [rsi+0x60],r14
   140032d02:	jne    0x140032d89
   140032d08:	mov    QWORD PTR [rbp+0x1f],0xf
   140032d10:	xor    r12d,r12d
   140032d13:	mov    QWORD PTR [rbp+0x17],r12
   140032d17:	mov    BYTE PTR [rbp+0x7],r12b
   140032d1b:	xor    eax,eax
   140032d1d:	or     rcx,0xffffffffffffffff
   140032d21:	mov    rdx,QWORD PTR [rip+0x35980]        # 0x1400686a8
   140032d28:	mov    rdi,rdx
   140032d2b:	repnz scas al,BYTE PTR es:[rdi]
   140032d2d:	not    rcx
   140032d30:	lea    r8,[rcx-0x1]
   140032d34:	lea    rcx,[rbp+0x7]
   140032d38:	call   0x140005154
   140032d3d:	nop
   140032d3e:	mov    rdi,QWORD PTR [rsi+0x60]
   140032d42:	sub    rdi,QWORD PTR [rsi+0x50]
   140032d46:	mov    QWORD PTR [rbp-0x19],0xf
   140032d4e:	mov    QWORD PTR [rbp-0x21],r12
   140032d52:	mov    BYTE PTR [rbp-0x31],r12b
   140032d56:	or     r9,0xffffffffffffffff
   140032d5a:	xor    r8d,r8d
   140032d5d:	lea    rdx,[rbp+0x7]
   140032d61:	lea    rcx,[rbp-0x31]
   140032d65:	call   0x1400048b8
   140032d6a:	mov    QWORD PTR [rsp+0x20],rdi
   140032d6f:	lea    r9,[rbp-0x31]
   140032d73:	mov    r8,rdi
   140032d76:	lea    edx,[r12+0x9]
   140032d7b:	mov    rcx,rsi
   140032d7e:	call   0x140031400
   140032d83:	nop
   140032d84:	jmp    0x1400330aa
   140032d89:	mov    r9,r12
   140032d8c:	mov    r8d,0xa
   140032d92:	mov    rdx,r14
   140032d95:	lea    rcx,[rsi+0x60]
   140032d99:	call   0x14002eda0
   140032d9e:	test   eax,eax
   140032da0:	js     0x140032da7
   140032da2:	movsxd r12,eax
   140032da5:	jmp    0x140032db0
   140032da7:	or     r12,0xffffffffffffffff
   140032dab:	jmp    0x140032db0
   140032dad:	mov    r12,r15
   140032db0:	mov    r13,QWORD PTR [rsi+0x58]
   140032db4:	cmp    QWORD PTR [rsi+0x60],r13
   140032db8:	je     0x140032de9
   140032dba:	mov    r14d,DWORD PTR [rsi+0x38]
   140032dbe:	mov    r15,QWORD PTR [rsi+0x8]
   140032dc2:	mov    rdi,QWORD PTR [rsi+0x60]
   140032dc6:	mov    r8d,r14d
   140032dc9:	movzx  edx,BYTE PTR [rdi]
   140032dcc:	mov    rcx,r15
   140032dcf:	call   0x14002cbd0
   140032dd4:	test   al,al
   140032dd6:	je     0x140032de5
   140032dd8:	lea    rax,[rdi+0x1]
   140032ddc:	mov    QWORD PTR [rsi+0x60],rax
   140032de0:	cmp    rax,r13
   140032de3:	jne    0x140032dc2
   140032de5:	mov    r15,QWORD PTR [rbp-0x9]
   140032de9:	mov    rdx,QWORD PTR [rsi+0x60]
   140032ded:	cmp    rdx,r13
   140032df0:	jne    0x140032e77
   140032df6:	mov    QWORD PTR [rbp+0x1f],0xf
   140032dfe:	xor    r12d,r12d
   140032e01:	mov    QWORD PTR [rbp+0x17],r12
   140032e05:	mov    BYTE PTR [rbp+0x7],r12b
   140032e09:	xor    eax,eax
   140032e0b:	or     rcx,0xffffffffffffffff
   140032e0f:	mov    rdx,QWORD PTR [rip+0x35892]        # 0x1400686a8
   140032e16:	mov    rdi,rdx
   140032e19:	repnz scas al,BYTE PTR es:[rdi]
   140032e1b:	not    rcx
   140032e1e:	lea    r8,[rcx-0x1]
   140032e22:	lea    rcx,[rbp+0x7]
   140032e26:	call   0x140005154
   140032e2b:	nop
   140032e2c:	mov    rdi,QWORD PTR [rsi+0x60]
   140032e30:	sub    rdi,QWORD PTR [rsi+0x50]
   140032e34:	mov    QWORD PTR [rbp-0x19],0xf
   140032e3c:	mov    QWORD PTR [rbp-0x21],r12
   140032e40:	mov    BYTE PTR [rbp-0x31],r12b
   140032e44:	or     r9,0xffffffffffffffff
   140032e48:	xor    r8d,r8d
   140032e4b:	lea    rdx,[rbp+0x7]
   140032e4f:	lea    rcx,[rbp-0x31]
   140032e53:	call   0x1400048b8
   140032e58:	mov    QWORD PTR [rsp+0x20],rdi
   140032e5d:	lea    r9,[rbp-0x31]
   140032e61:	mov    r8,rdi
   140032e64:	lea    edx,[r12+0x9]
   140032e69:	mov    rcx,rsi
   140032e6c:	call   0x140031400
   140032e71:	nop
   140032e72:	jmp    0x1400330aa
   140032e77:	cmp    BYTE PTR [rbp-0x39],0x0
   140032e7b:	je     0x140032fa9
   140032e81:	mov    rax,QWORD PTR [rsi+0x8]
   140032e85:	mov    rcx,QWORD PTR [rax]
   140032e88:	movzx  eax,BYTE PTR [rdx]
   140032e8b:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   140032e90:	jne    0x140032f28
   140032e96:	lea    rax,[rdx+0x1]
   140032e9a:	mov    QWORD PTR [rsi+0x60],rax
   140032e9e:	cmp    rax,r13
   140032ea1:	jne    0x140032fa9
   140032ea7:	mov    QWORD PTR [rbp+0x1f],0xf
   140032eaf:	xor    r12d,r12d
   140032eb2:	mov    QWORD PTR [rbp+0x17],r12
   140032eb6:	mov    BYTE PTR [rbp+0x7],r12b
   140032eba:	xor    eax,eax
   140032ebc:	or     rcx,0xffffffffffffffff
   140032ec0:	mov    rdx,QWORD PTR [rip+0x357e1]        # 0x1400686a8
   140032ec7:	mov    rdi,rdx
   140032eca:	repnz scas al,BYTE PTR es:[rdi]
   140032ecc:	not    rcx
   140032ecf:	lea    r8,[rcx-0x1]
   140032ed3:	lea    rcx,[rbp+0x7]
   140032ed7:	call   0x140005154
   140032edc:	nop
   140032edd:	mov    rdi,QWORD PTR [rsi+0x60]
   140032ee1:	sub    rdi,QWORD PTR [rsi+0x50]
   140032ee5:	mov    QWORD PTR [rbp-0x19],0xf
   140032eed:	mov    QWORD PTR [rbp-0x21],r12
   140032ef1:	mov    BYTE PTR [rbp-0x31],r12b
   140032ef5:	or     r9,0xffffffffffffffff
   140032ef9:	xor    r8d,r8d
   140032efc:	lea    rdx,[rbp+0x7]
   140032f00:	lea    rcx,[rbp-0x31]
   140032f04:	call   0x1400048b8
   140032f09:	mov    QWORD PTR [rsp+0x20],rdi
   140032f0e:	lea    r9,[rbp-0x31]
   140032f12:	mov    r8,rdi
   140032f15:	lea    edx,[r12+0x9]
   140032f1a:	mov    rcx,rsi
   140032f1d:	call   0x140031400
   140032f22:	nop
   140032f23:	jmp    0x1400330aa
   140032f28:	mov    QWORD PTR [rbp+0x1f],0xf
   140032f30:	xor    r12d,r12d
   140032f33:	mov    QWORD PTR [rbp+0x17],r12
   140032f37:	mov    BYTE PTR [rbp+0x7],r12b
   140032f3b:	xor    eax,eax
   140032f3d:	or     rcx,0xffffffffffffffff
   140032f41:	mov    rdx,QWORD PTR [rip+0x35760]        # 0x1400686a8
   140032f48:	mov    rdi,rdx
   140032f4b:	repnz scas al,BYTE PTR es:[rdi]
   140032f4d:	not    rcx
   140032f50:	lea    r8,[rcx-0x1]
   140032f54:	lea    rcx,[rbp+0x7]
   140032f58:	call   0x140005154
   140032f5d:	nop
   140032f5e:	mov    rdi,QWORD PTR [rsi+0x60]
   140032f62:	sub    rdi,QWORD PTR [rsi+0x50]
   140032f66:	mov    QWORD PTR [rbp-0x19],0xf
   140032f6e:	mov    QWORD PTR [rbp-0x21],r12
   140032f72:	mov    BYTE PTR [rbp-0x31],r12b
   140032f76:	or     r9,0xffffffffffffffff
   140032f7a:	xor    r8d,r8d
   140032f7d:	lea    rdx,[rbp+0x7]
   140032f81:	lea    rcx,[rbp-0x31]
   140032f85:	call   0x1400048b8
   140032f8a:	mov    QWORD PTR [rsp+0x20],rdi
   140032f8f:	lea    r9,[rbp-0x31]
   140032f93:	mov    r8,rdi
   140032f96:	lea    edx,[r12+0x9]
   140032f9b:	mov    rcx,rsi
   140032f9e:	call   0x140031400
   140032fa3:	nop
   140032fa4:	jmp    0x1400330aa
   140032fa9:	mov    rcx,QWORD PTR [rsi+0x8]
   140032fad:	mov    rdx,QWORD PTR [rcx]
   140032fb0:	mov    rdi,QWORD PTR [rsi+0x60]
   140032fb4:	movzx  eax,BYTE PTR [rdi]
   140032fb7:	cmp    BYTE PTR [rax+rdx*1+0x4],0x10
   140032fbc:	jne    0x14003302e
   140032fbe:	inc    rdi
   140032fc1:	mov    QWORD PTR [rsi+0x60],rdi
   140032fc5:	cmp    r15,r12
   140032fc8:	jbe    0x14003301b
   140032fca:	add    rdi,0xfffffffffffffffe
   140032fce:	mov    QWORD PTR [rsi+0x60],rdi
   140032fd2:	mov    r8d,DWORD PTR [rsi+0x34]
   140032fd6:	movzx  edx,BYTE PTR [rdi]
   140032fd9:	call   0x14002cbd0
   140032fde:	test   al,al
   140032fe0:	je     0x140032ffd
   140032fe2:	dec    rdi
   140032fe5:	mov    QWORD PTR [rsi+0x60],rdi
   140032fe9:	mov    r8d,DWORD PTR [rsi+0x34]
   140032fed:	movzx  edx,BYTE PTR [rdi]
   140032ff0:	mov    rcx,QWORD PTR [rsi+0x8]
   140032ff4:	call   0x14002cbd0
   140032ff9:	test   al,al
   140032ffb:	jne    0x140032fe2
   140032ffd:	inc    QWORD PTR [rsi+0x60]
   140033001:	mov    r8,QWORD PTR [rsi+0x60]
   140033005:	sub    r8,QWORD PTR [rsi+0x50]
   140033009:	mov    edx,0xa
   14003300e:	mov    rcx,rsi
   140033011:	call   0x1400322b0
   140033016:	jmp    0x1400330ba
   14003301b:	mov    r8,r12
   14003301e:	mov    rdx,r15
   140033021:	mov    rcx,rsi
   140033024:	call   0x140032680
   140033029:	jmp    0x1400330bc
   14003302e:	mov    QWORD PTR [rbp+0x1f],0xf
   140033036:	xor    r12d,r12d
   140033039:	mov    QWORD PTR [rbp+0x17],r12
   14003303d:	mov    BYTE PTR [rbp+0x7],r12b
   140033041:	xor    eax,eax
   140033043:	or     rcx,0xffffffffffffffff
   140033047:	mov    rdx,QWORD PTR [rip+0x3565a]        # 0x1400686a8
   14003304e:	mov    rdi,rdx
   140033051:	repnz scas al,BYTE PTR es:[rdi]
   140033053:	not    rcx
   140033056:	lea    r8,[rcx-0x1]
   14003305a:	lea    rcx,[rbp+0x7]
   14003305e:	call   0x140005154
   140033063:	nop
   140033064:	mov    rdi,QWORD PTR [rsi+0x60]
   140033068:	sub    rdi,QWORD PTR [rsi+0x50]
   14003306c:	mov    QWORD PTR [rbp-0x19],0xf
   140033074:	mov    QWORD PTR [rbp-0x21],r12
   140033078:	mov    BYTE PTR [rbp-0x31],r12b
   14003307c:	or     r9,0xffffffffffffffff
   140033080:	xor    r8d,r8d
   140033083:	lea    rdx,[rbp+0x7]
   140033087:	lea    rcx,[rbp-0x31]
   14003308b:	call   0x1400048b8
   140033090:	mov    QWORD PTR [rsp+0x20],rdi
   140033095:	lea    r9,[rbp-0x31]
   140033099:	mov    r8,rdi
   14003309c:	lea    edx,[r12+0x9]
   1400330a1:	mov    rcx,rsi
   1400330a4:	call   0x140031400
   1400330a9:	nop
   1400330aa:	cmp    QWORD PTR [rbp+0x1f],0x10
   1400330af:	jb     0x1400330ba
   1400330b1:	mov    rcx,QWORD PTR [rbp+0x7]
   1400330b5:	call   0x14002b150
   1400330ba:	xor    al,al
   1400330bc:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400330c0:	xor    rcx,rsp
   1400330c3:	call   0x14002b100
   1400330c8:	lea    r11,[rsp+0xa0]
   1400330d0:	mov    rbx,QWORD PTR [r11+0x38]
   1400330d4:	mov    rsi,QWORD PTR [r11+0x40]
   1400330d8:	mov    rdi,QWORD PTR [r11+0x48]
   1400330dc:	mov    rsp,r11
   1400330df:	pop    r15
   1400330e1:	pop    r14
   1400330e3:	pop    r13
   1400330e5:	pop    r12
   1400330e7:	pop    rbp
   1400330e8:	ret    
   1400330e9:	int3   
   1400330ea:	int3   
   1400330eb:	int3   
   1400330ec:	int3   
   1400330ed:	int3   
   1400330ee:	int3   
   1400330ef:	int3   
   1400330f0:	mov    rax,rsp
   1400330f3:	push   rdi
   1400330f4:	sub    rsp,0xa0
   1400330fb:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140033104:	mov    QWORD PTR [rax+0x10],rbx
   140033108:	mov    QWORD PTR [rax+0x18],rsi
   14003310c:	mov    rax,QWORD PTR [rip+0x350dd]        # 0x1400681f0
   140033113:	xor    rax,rsp
   140033116:	mov    QWORD PTR [rsp+0x90],rax
   14003311e:	mov    rdi,rcx
   140033121:	mov    rax,QWORD PTR [rcx+0x10]
   140033125:	test   rax,rax
   140033128:	je     0x14003312f
   14003312a:	cmp    DWORD PTR [rax],0x0
   14003312d:	jne    0x140033148
   14003312f:	mov    rax,QWORD PTR [rcx]
   140033132:	mov    ecx,DWORD PTR [rax+0x30]
   140033135:	test   cl,0x3
   140033138:	jne    0x1400332a7
   14003313e:	bt     ecx,0x18
   140033142:	jb     0x1400332a7
   140033148:	mov    eax,DWORD PTR [rdi+0x68]
   14003314b:	cmp    DWORD PTR [rdi+0x70],eax
   14003314e:	jae    0x140033153
   140033150:	mov    DWORD PTR [rdi+0x70],eax
   140033153:	mov    eax,DWORD PTR [rdi+0x6c]
   140033156:	test   eax,eax
   140033158:	js     0x14003315d
   14003315a:	mov    DWORD PTR [rdi+0x68],eax
   14003315d:	inc    QWORD PTR [rdi+0x60]
   140033161:	mov    edx,0x10
   140033166:	lea    r8d,[rdx+0x8]
   14003316a:	mov    rcx,rdi
   14003316d:	call   0x14002eb10
   140033172:	mov    rsi,rax
   140033175:	mov    rax,QWORD PTR [rdi]
   140033178:	mov    rbx,QWORD PTR [rax+0x168]
   14003317f:	mov    r9d,0x120
   140033185:	mov    r8d,0x11
   14003318b:	mov    rdx,QWORD PTR [rdi+0x80]
   140033192:	mov    rcx,rdi
   140033195:	call   0x14002da70
   14003319a:	mov    r11,rax
   14003319d:	sub    rsi,rbx
   1400331a0:	add    rsi,0x120
   1400331a7:	mov    QWORD PTR [rsp+0x30],rsi
   1400331ac:	mov    r8,QWORD PTR [rdi]
   1400331af:	mov    rcx,QWORD PTR [r8+0x168]
   1400331b6:	mov    rdx,QWORD PTR [r8+0x170]
   1400331bd:	sub    rdx,rcx
   1400331c0:	add    rdx,0x7
   1400331c4:	and    rdx,0xfffffffffffffff8
   1400331c8:	add    rdx,rcx
   1400331cb:	mov    QWORD PTR [r8+0x170],rdx
   1400331d2:	mov    rax,QWORD PTR [rdi]
   1400331d5:	mov    rcx,QWORD PTR [rax+0x168]
   1400331dc:	sub    rcx,rcx
   1400331df:	add    rcx,QWORD PTR [rax+0x170]
   1400331e6:	sub    rcx,r11
   1400331e9:	mov    QWORD PTR [r11+0x10],rcx
   1400331ed:	mov    rcx,QWORD PTR [rdi]
   1400331f0:	mov    rax,QWORD PTR [rcx+0x170]
   1400331f7:	sub    rax,QWORD PTR [rcx+0x168]
   1400331fe:	mov    QWORD PTR [rdi+0x80],rax
   140033205:	cmp    BYTE PTR [rdi+0x88],0x0
   14003320c:	je     0x140033226
   14003320e:	mov    edx,0x1c
   140033213:	lea    r8d,[rdx-0x4]
   140033217:	mov    rcx,rdi
   14003321a:	call   0x14002eb10
   14003321f:	movzx  ecx,BYTE PTR [rdi+0x18]
   140033223:	mov    BYTE PTR [rax+0x10],cl
   140033226:	lea    rbx,[rdi+0x90]
   14003322d:	mov    rax,QWORD PTR [rbx+0x8]
   140033231:	lea    rcx,[rsp+0x30]
   140033236:	cmp    rcx,rax
   140033239:	jae    0x14003327c
   14003323b:	mov    rcx,QWORD PTR [rbx]
   14003323e:	lea    rdx,[rsp+0x30]
   140033243:	cmp    rcx,rdx
   140033246:	ja     0x14003327c
   140033248:	lea    rdi,[rsp+0x30]
   14003324d:	sub    rdi,rcx
   140033250:	sar    rdi,0x3
   140033254:	cmp    rax,QWORD PTR [rbx+0x10]
   140033258:	jne    0x140033267
   14003325a:	mov    edx,0x1
   14003325f:	mov    rcx,rbx
   140033262:	call   0x140030780
   140033267:	mov    rdx,QWORD PTR [rbx+0x8]
   14003326b:	test   rdx,rdx
   14003326e:	je     0x14003329b
   140033270:	mov    rax,QWORD PTR [rbx]
   140033273:	mov    rcx,QWORD PTR [rax+rdi*8]
   140033277:	mov    QWORD PTR [rdx],rcx
   14003327a:	jmp    0x14003329b
   14003327c:	cmp    rax,QWORD PTR [rbx+0x10]
   140033280:	jne    0x14003328f
   140033282:	mov    edx,0x1
   140033287:	mov    rcx,rbx
   14003328a:	call   0x140030780
   14003328f:	mov    rax,QWORD PTR [rbx+0x8]
   140033293:	test   rax,rax
   140033296:	je     0x14003329b
   140033298:	mov    QWORD PTR [rax],rsi
   14003329b:	add    QWORD PTR [rbx+0x8],0x8
   1400332a0:	mov    al,0x1
   1400332a2:	jmp    0x140033336
   1400332a7:	mov    QWORD PTR [rsp+0x80],0xf
   1400332b3:	xor    esi,esi
   1400332b5:	mov    QWORD PTR [rsp+0x78],rsi
   1400332ba:	mov    BYTE PTR [rsp+0x68],sil
   1400332bf:	lea    r8d,[rsi+0x3f]
   1400332c3:	lea    rdx,[rip+0x1b716]        # 0x14004e9e0
   1400332ca:	lea    rcx,[rsp+0x68]
   1400332cf:	call   0x140005154
   1400332d4:	nop
   1400332d5:	mov    rbx,QWORD PTR [rdi+0x60]
   1400332d9:	sub    rbx,QWORD PTR [rdi+0x50]
   1400332dd:	mov    QWORD PTR [rsp+0x58],0xf
   1400332e6:	mov    QWORD PTR [rsp+0x50],rsi
   1400332eb:	mov    BYTE PTR [rsp+0x40],sil
   1400332f0:	or     r9,0xffffffffffffffff
   1400332f4:	xor    r8d,r8d
   1400332f7:	lea    rdx,[rsp+0x68]
   1400332fc:	lea    rcx,[rsp+0x40]
   140033301:	call   0x1400048b8
   140033306:	mov    QWORD PTR [rsp+0x20],rbx
   14003330b:	lea    r9,[rsp+0x40]
   140033310:	mov    r8,rbx
   140033313:	lea    edx,[rsi+0x11]
   140033316:	mov    rcx,rdi
   140033319:	call   0x140031400
   14003331e:	nop
   14003331f:	cmp    QWORD PTR [rsp+0x80],0x10
   140033328:	jb     0x140033334
   14003332a:	mov    rcx,QWORD PTR [rsp+0x68]
   14003332f:	call   0x14002b150
   140033334:	xor    al,al
   140033336:	mov    rcx,QWORD PTR [rsp+0x90]
   14003333e:	xor    rcx,rsp
   140033341:	call   0x14002b100
   140033346:	lea    r11,[rsp+0xa0]
   14003334e:	mov    rbx,QWORD PTR [r11+0x18]
   140033352:	mov    rsi,QWORD PTR [r11+0x20]
   140033356:	mov    rsp,r11
   140033359:	pop    rdi
   14003335a:	ret    
   14003335b:	int3   
   14003335c:	int3   
   14003335d:	int3   
   14003335e:	int3   
   14003335f:	int3   
   140033360:	rex push rbx
   140033362:	sub    rsp,0x40
   140033366:	mov    rbx,rcx
   140033369:	mov    QWORD PTR [rcx+0x10],0x0
   140033371:	mov    ecx,0x30
   140033376:	call   0x14002b1c2
   14003337b:	test   rax,rax
   14003337e:	je     0x1400333b0
   140033380:	mov    QWORD PTR [rbx+0x8],rax
   140033384:	mov    QWORD PTR [rax],rax
   140033387:	mov    rax,QWORD PTR [rbx+0x8]
   14003338b:	mov    QWORD PTR [rax+0x8],rax
   14003338f:	mov    rax,QWORD PTR [rbx+0x8]
   140033393:	mov    QWORD PTR [rax+0x10],rax
   140033397:	mov    rax,QWORD PTR [rbx+0x8]
   14003339b:	mov    BYTE PTR [rax+0x28],0x1
   14003339f:	mov    rax,QWORD PTR [rbx+0x8]
   1400333a3:	mov    BYTE PTR [rax+0x29],0x1
   1400333a7:	mov    rax,rbx
   1400333aa:	add    rsp,0x40
   1400333ae:	pop    rbx
   1400333af:	ret    
   1400333b0:	lea    rdx,[rsp+0x50]
   1400333b5:	lea    rcx,[rsp+0x20]
   1400333ba:	mov    QWORD PTR [rsp+0x50],0x0
   1400333c3:	call   QWORD PTR [rip+0x16507]        # 0x1400498d0
   1400333c9:	lea    r11,[rip+0x16e08]        # 0x14004a1d8
   1400333d0:	lea    rdx,[rip+0x30371]        # 0x140063748
   1400333d7:	lea    rcx,[rsp+0x20]
   1400333dc:	mov    QWORD PTR [rsp+0x20],r11
   1400333e1:	call   0x14002b560
   1400333e6:	int3   
   1400333e7:	int3   
   1400333e8:	int3   
   1400333e9:	int3   
   1400333ea:	int3   
   1400333eb:	int3   
   1400333ec:	int3   
   1400333ed:	int3   
   1400333ee:	int3   
   1400333ef:	int3   
   1400333f0:	push   r12
   1400333f2:	sub    rsp,0x40
   1400333f6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400333ff:	mov    QWORD PTR [rsp+0x50],rbx
   140033404:	mov    QWORD PTR [rsp+0x60],rsi
   140033409:	mov    QWORD PTR [rsp+0x68],rdi
   14003340e:	mov    rdi,rdx
   140033411:	mov    rbx,rcx
   140033414:	movabs rax,0xfffffffffffffff
   14003341e:	cmp    rdx,rax
   140033421:	jbe    0x140033431
   140033423:	lea    rcx,[rip+0x1d52e]        # 0x140050958
   14003342a:	call   QWORD PTR [rip+0x16168]        # 0x140049598
   140033430:	int3   
   140033431:	mov    rax,QWORD PTR [rcx+0x10]
   140033435:	sub    rax,QWORD PTR [rcx]
   140033438:	sar    rax,0x4
   14003343c:	cmp    rax,rdx
   14003343f:	jae    0x1400334a7
   140033441:	add    rcx,0x18
   140033445:	call   0x14002d930
   14003344a:	mov    r12,rax
   14003344d:	mov    QWORD PTR [rsp+0x58],rax
   140033452:	movzx  r8d,BYTE PTR [rsp+0x58]
   140033458:	mov    BYTE PTR [rsp+0x28],r8b
   14003345d:	mov    QWORD PTR [rsp+0x20],0x0
   140033466:	lea    r9,[rbx+0x18]
   14003346a:	mov    r8,rax
   14003346d:	mov    rdx,QWORD PTR [rbx+0x8]
   140033471:	mov    rcx,QWORD PTR [rbx]
   140033474:	call   0x140030940
   140033479:	nop
   14003347a:	mov    rcx,QWORD PTR [rbx]
   14003347d:	mov    rsi,QWORD PTR [rbx+0x8]
   140033481:	sub    rsi,rcx
   140033484:	test   rcx,rcx
   140033487:	je     0x14003348e
   140033489:	call   0x14002b150
   14003348e:	shl    rdi,0x4
   140033492:	add    rdi,r12
   140033495:	mov    QWORD PTR [rbx+0x10],rdi
   140033499:	and    rsi,0xfffffffffffffff0
   14003349d:	add    rsi,r12
   1400334a0:	mov    QWORD PTR [rbx+0x8],rsi
   1400334a4:	mov    QWORD PTR [rbx],r12
   1400334a7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400334ac:	mov    rsi,QWORD PTR [rsp+0x60]
   1400334b1:	mov    rdi,QWORD PTR [rsp+0x68]
   1400334b6:	add    rsp,0x40
   1400334ba:	pop    r12
   1400334bc:	ret    
   1400334bd:	int3   
   1400334be:	int3   
   1400334bf:	int3   
   1400334c0:	mov    QWORD PTR [rsp+0x18],rbp
   1400334c5:	push   rdi
   1400334c6:	sub    rsp,0x20
   1400334ca:	mov    rax,QWORD PTR [rcx]
   1400334cd:	mov    rbp,rcx
   1400334d0:	mov    rdi,QWORD PTR [rax]
   1400334d3:	mov    QWORD PTR [rax],rax
   1400334d6:	mov    rax,QWORD PTR [rcx]
   1400334d9:	mov    QWORD PTR [rax+0x8],rax
   1400334dd:	mov    QWORD PTR [rcx+0x8],0x0
   1400334e5:	cmp    rdi,QWORD PTR [rcx]
   1400334e8:	je     0x140033539
   1400334ea:	mov    QWORD PTR [rsp+0x30],rbx
   1400334ef:	mov    QWORD PTR [rsp+0x38],rsi
   1400334f4:	mov    rbx,QWORD PTR [rdi+0x18]
   1400334f8:	mov    rsi,QWORD PTR [rdi]
   1400334fb:	test   rbx,rbx
   1400334fe:	je     0x14003351e
   140033500:	lock dec DWORD PTR [rbx+0x8]
   140033504:	jne    0x14003351e
   140033506:	mov    rax,QWORD PTR [rbx]
   140033509:	mov    rcx,rbx
   14003350c:	call   QWORD PTR [rax+0x8]
   14003350f:	lock dec DWORD PTR [rbx+0xc]
   140033513:	jne    0x14003351e
   140033515:	mov    rax,QWORD PTR [rbx]
   140033518:	mov    rcx,rbx
   14003351b:	call   QWORD PTR [rax+0x10]
   14003351e:	mov    rcx,rdi
   140033521:	call   0x14002b150
   140033526:	mov    rdi,rsi
   140033529:	cmp    rsi,QWORD PTR [rbp+0x0]
   14003352d:	jne    0x1400334f4
   14003352f:	mov    rsi,QWORD PTR [rsp+0x38]
   140033534:	mov    rbx,QWORD PTR [rsp+0x30]
   140033539:	mov    rbp,QWORD PTR [rsp+0x40]
   14003353e:	add    rsp,0x20
   140033542:	pop    rdi
   140033543:	ret    
   140033544:	int3   
   140033545:	int3   
   140033546:	int3   
   140033547:	int3   
   140033548:	int3   
   140033549:	int3   
   14003354a:	int3   
   14003354b:	int3   
   14003354c:	int3   
   14003354d:	int3   
   14003354e:	int3   
   14003354f:	int3   
   140033550:	push   r12
   140033552:	sub    rsp,0x40
   140033556:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003355f:	mov    QWORD PTR [rsp+0x50],rbx
   140033564:	mov    QWORD PTR [rsp+0x60],rsi
   140033569:	mov    QWORD PTR [rsp+0x68],rdi
   14003356e:	mov    rdi,rdx
   140033571:	mov    rbx,rcx
   140033574:	movabs rax,0xfffffffffffffff
   14003357e:	cmp    rdx,rax
   140033581:	jbe    0x140033591
   140033583:	lea    rcx,[rip+0x1d3ce]        # 0x140050958
   14003358a:	call   QWORD PTR [rip+0x16008]        # 0x140049598
   140033590:	int3   
   140033591:	mov    rax,QWORD PTR [rcx+0x10]
   140033595:	sub    rax,QWORD PTR [rcx]
   140033598:	sar    rax,0x4
   14003359c:	cmp    rax,rdx
   14003359f:	jae    0x140033607
   1400335a1:	add    rcx,0x18
   1400335a5:	call   0x14002d930
   1400335aa:	mov    r12,rax
   1400335ad:	mov    QWORD PTR [rsp+0x58],rax
   1400335b2:	movzx  r8d,BYTE PTR [rsp+0x58]
   1400335b8:	mov    BYTE PTR [rsp+0x28],r8b
   1400335bd:	mov    QWORD PTR [rsp+0x20],0x0
   1400335c6:	lea    r9,[rbx+0x18]
   1400335ca:	mov    r8,rax
   1400335cd:	mov    rdx,QWORD PTR [rbx+0x8]
   1400335d1:	mov    rcx,QWORD PTR [rbx]
   1400335d4:	call   0x140030980
   1400335d9:	nop
   1400335da:	mov    rcx,QWORD PTR [rbx]
   1400335dd:	mov    rsi,QWORD PTR [rbx+0x8]
   1400335e1:	sub    rsi,rcx
   1400335e4:	test   rcx,rcx
   1400335e7:	je     0x1400335ee
   1400335e9:	call   0x14002b150
   1400335ee:	shl    rdi,0x4
   1400335f2:	add    rdi,r12
   1400335f5:	mov    QWORD PTR [rbx+0x10],rdi
   1400335f9:	and    rsi,0xfffffffffffffff0
   1400335fd:	add    rsi,r12
   140033600:	mov    QWORD PTR [rbx+0x8],rsi
   140033604:	mov    QWORD PTR [rbx],r12
   140033607:	mov    rbx,QWORD PTR [rsp+0x50]
   14003360c:	mov    rsi,QWORD PTR [rsp+0x60]
   140033611:	mov    rdi,QWORD PTR [rsp+0x68]
   140033616:	add    rsp,0x40
   14003361a:	pop    r12
   14003361c:	ret    
   14003361d:	int3   
   14003361e:	int3   
   14003361f:	int3   
   140033620:	mov    rax,rsp
   140033623:	push   rdi
   140033624:	sub    rsp,0x90
   14003362b:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140033634:	mov    QWORD PTR [rax+0x10],rbx
   140033638:	mov    QWORD PTR [rax+0x18],rsi
   14003363c:	mov    rax,QWORD PTR [rip+0x34bad]        # 0x1400681f0
   140033643:	xor    rax,rsp
   140033646:	mov    QWORD PTR [rsp+0x88],rax
   14003364e:	mov    rdi,rcx
   140033651:	inc    QWORD PTR [rcx+0x60]
   140033655:	mov    rdx,QWORD PTR [rcx+0x60]
   140033659:	mov    rbx,rdx
   14003365c:	mov    r9,QWORD PTR [rcx+0x58]
   140033660:	cmp    rdx,r9
   140033663:	je     0x14003368c
   140033665:	mov    r8,QWORD PTR [rdi+0x8]
   140033669:	nop    DWORD PTR [rax+0x0]
   140033670:	mov    rcx,QWORD PTR [r8]
   140033673:	movzx  eax,BYTE PTR [rdx]
   140033676:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003367b:	je     0x14003368c
   14003367d:	inc    rdx
   140033680:	mov    QWORD PTR [rdi+0x60],rdx
   140033684:	mov    rax,r9
   140033687:	cmp    rdx,r9
   14003368a:	jne    0x140033670
   14003368c:	mov    rdx,QWORD PTR [rdi+0x60]
   140033690:	cmp    rdx,r9
   140033693:	je     0x140033752
   140033699:	inc    rdx
   14003369c:	mov    QWORD PTR [rdi+0x60],rdx
   1400336a0:	cmp    rdx,r9
   1400336a3:	je     0x1400336c7
   1400336a5:	mov    rax,QWORD PTR [rdi+0x8]
   1400336a9:	movzx  ecx,BYTE PTR [rdx]
   1400336ac:	mov    rax,QWORD PTR [rax]
   1400336af:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2f
   1400336b4:	jne    0x140033660
   1400336b6:	lea    rax,[rdx+0x1]
   1400336ba:	mov    QWORD PTR [rdi+0x60],rax
   1400336be:	lea    rsi,[rax-0x2]
   1400336c2:	jmp    0x140033755
   1400336c7:	mov    QWORD PTR [rsp+0x78],0xf
   1400336d0:	xor    esi,esi
   1400336d2:	mov    QWORD PTR [rsp+0x70],rsi
   1400336d7:	mov    BYTE PTR [rsp+0x60],sil
   1400336dc:	lea    r8d,[rsi+0x1e]
   1400336e0:	lea    rdx,[rip+0x1b3b1]        # 0x14004ea98
   1400336e7:	lea    rcx,[rsp+0x60]
   1400336ec:	call   0x140005154
   1400336f1:	nop
   1400336f2:	mov    rbx,QWORD PTR [rdi+0x60]
   1400336f6:	sub    rbx,QWORD PTR [rdi+0x50]
   1400336fa:	mov    QWORD PTR [rsp+0x48],0xf
   140033703:	mov    QWORD PTR [rsp+0x40],rsi
   140033708:	mov    BYTE PTR [rsp+0x30],sil
   14003370d:	or     r9,0xffffffffffffffff
   140033711:	xor    r8d,r8d
   140033714:	lea    rdx,[rsp+0x60]
   140033719:	lea    rcx,[rsp+0x30]
   14003371e:	call   0x1400048b8
   140033723:	mov    QWORD PTR [rsp+0x20],rbx
   140033728:	lea    r9,[rsp+0x30]
   14003372d:	mov    r8,rbx
   140033730:	lea    edx,[rsi+0x5]
   140033733:	mov    rcx,rdi
   140033736:	call   0x140031400
   14003373b:	nop
   14003373c:	cmp    QWORD PTR [rsp+0x78],0x10
   140033742:	jb     0x14003374e
   140033744:	mov    rcx,QWORD PTR [rsp+0x60]
   140033749:	call   0x14002b150
   14003374e:	xor    al,al
   140033750:	jmp    0x140033775
   140033752:	mov    rsi,rdx
   140033755:	cmp    rbx,rsi
   140033758:	je     0x140033773
   14003375a:	nop    WORD PTR [rax+rax*1+0x0]
   140033760:	movzx  edx,BYTE PTR [rbx]
   140033763:	mov    rcx,rdi
   140033766:	call   0x14002ec40
   14003376b:	inc    rbx
   14003376e:	cmp    rbx,rsi
   140033771:	jne    0x140033760
   140033773:	mov    al,0x1
   140033775:	mov    rcx,QWORD PTR [rsp+0x88]
   14003377d:	xor    rcx,rsp
   140033780:	call   0x14002b100
   140033785:	lea    r11,[rsp+0x90]
   14003378d:	mov    rbx,QWORD PTR [r11+0x18]
   140033791:	mov    rsi,QWORD PTR [r11+0x20]
   140033795:	mov    rsp,r11
   140033798:	pop    rdi
   140033799:	ret    
   14003379a:	int3   
   14003379b:	int3   
   14003379c:	int3   
   14003379d:	int3   
   14003379e:	int3   
   14003379f:	int3   
   1400337a0:	sub    rsp,0x28
   1400337a4:	mov    rax,QWORD PTR [rcx]
   1400337a7:	mov    r9,rcx
   1400337aa:	mov    eax,DWORD PTR [rax+0x30]
   1400337ad:	nop    DWORD PTR [rax]
   1400337b0:	mov    r8,QWORD PTR [r9+0x60]
   1400337b4:	movzx  ecx,BYTE PTR [r8]
   1400337b8:	cmp    cl,0x69
   1400337bb:	je     0x1400337e2
   1400337bd:	cmp    cl,0x6d
   1400337c0:	je     0x1400337dc
   1400337c2:	cmp    cl,0x73
   1400337c5:	je     0x1400337d2
   1400337c7:	cmp    cl,0x78
   1400337ca:	jne    0x140033845
   1400337cc:	bts    eax,0xb
   1400337d0:	jmp    0x1400337e6
   1400337d2:	btr    eax,0xd
   1400337d6:	bts    eax,0xc
   1400337da:	jmp    0x1400337e6
   1400337dc:	btr    eax,0xa
   1400337e0:	jmp    0x1400337e6
   1400337e2:	bts    eax,0x14
   1400337e6:	inc    r8
   1400337e9:	mov    QWORD PTR [r9+0x60],r8
   1400337ed:	cmp    r8,QWORD PTR [r9+0x58]
   1400337f1:	jne    0x1400337b0
   1400337f3:	mov    rax,QWORD PTR [r9+0x8]
   1400337f7:	dec    r8
   1400337fa:	mov    QWORD PTR [r9+0x60],r8
   1400337fe:	mov    rax,QWORD PTR [rax]
   140033801:	movzx  ecx,BYTE PTR [r8]
   140033805:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   14003380a:	je     0x140033829
   14003380c:	nop    DWORD PTR [rax+0x0]
   140033810:	dec    r8
   140033813:	mov    QWORD PTR [r9+0x60],r8
   140033817:	mov    rax,QWORD PTR [r9+0x8]
   14003381b:	mov    rcx,QWORD PTR [rax]
   14003381e:	movzx  edx,BYTE PTR [r8]
   140033822:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140033827:	jne    0x140033810
   140033829:	mov    r8,QWORD PTR [r9+0x60]
   14003382d:	mov    edx,0x8
   140033832:	mov    rcx,r9
   140033835:	sub    r8,QWORD PTR [r9+0x50]
   140033839:	call   0x1400322b0
   14003383e:	xor    eax,eax
   140033840:	add    rsp,0x28
   140033844:	ret    
   140033845:	cmp    BYTE PTR [r8],0x2d
   140033849:	jne    0x140033840
   14003384b:	mov    rdx,QWORD PTR [r9+0x58]
   14003384f:	inc    r8
   140033852:	mov    QWORD PTR [r9+0x60],r8
   140033856:	cmp    r8,rdx
   140033859:	jne    0x14003389b
   14003385b:	mov    rax,QWORD PTR [r9+0x8]
   14003385f:	dec    r8
   140033862:	mov    QWORD PTR [r9+0x60],r8
   140033866:	mov    rax,QWORD PTR [rax]
   140033869:	movzx  ecx,BYTE PTR [r8]
   14003386d:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140033872:	je     0x140033829
   140033874:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140033880:	dec    r8
   140033883:	mov    QWORD PTR [r9+0x60],r8
   140033887:	mov    rax,QWORD PTR [r9+0x8]
   14003388b:	mov    rcx,QWORD PTR [rax]
   14003388e:	movzx  edx,BYTE PTR [r8]
   140033892:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140033897:	jne    0x140033880
   140033899:	jmp    0x140033829
   14003389b:	movzx  ecx,BYTE PTR [r8]
   14003389f:	cmp    cl,0x69
   1400338a2:	je     0x1400338c9
   1400338a4:	cmp    cl,0x6d
   1400338a7:	je     0x1400338c3
   1400338a9:	cmp    cl,0x73
   1400338ac:	je     0x1400338b9
   1400338ae:	cmp    cl,0x78
   1400338b1:	jne    0x140033840
   1400338b3:	btr    eax,0xb
   1400338b7:	jmp    0x1400338cd
   1400338b9:	btr    eax,0xc
   1400338bd:	bts    eax,0xd
   1400338c1:	jmp    0x1400338cd
   1400338c3:	bts    eax,0xa
   1400338c7:	jmp    0x1400338cd
   1400338c9:	btr    eax,0x14
   1400338cd:	inc    r8
   1400338d0:	mov    QWORD PTR [r9+0x60],r8
   1400338d4:	cmp    r8,rdx
   1400338d7:	jne    0x140033840
   1400338dd:	mov    rax,QWORD PTR [r9+0x8]
   1400338e1:	dec    r8
   1400338e4:	mov    QWORD PTR [r9+0x60],r8
   1400338e8:	mov    rax,QWORD PTR [rax]
   1400338eb:	movzx  ecx,BYTE PTR [r8]
   1400338ef:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   1400338f4:	je     0x140033829
   1400338fa:	nop    WORD PTR [rax+rax*1+0x0]
   140033900:	dec    r8
   140033903:	mov    QWORD PTR [r9+0x60],r8
   140033907:	mov    rax,QWORD PTR [r9+0x8]
   14003390b:	mov    rcx,QWORD PTR [rax]
   14003390e:	movzx  edx,BYTE PTR [r8]
   140033912:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140033917:	jne    0x140033900
   140033919:	jmp    0x140033829
   14003391e:	int3   
   14003391f:	int3   
   140033920:	rex push rbx
   140033922:	sub    rsp,0x20
   140033926:	mov    rax,QWORD PTR [rcx+0x10]
   14003392a:	mov    r10,rcx
   14003392d:	movabs rcx,0x555555555555554
   140033937:	mov    rbx,rdx
   14003393a:	cmp    rax,rcx
   14003393d:	jb     0x14003397e
   14003393f:	mov    rbx,QWORD PTR [rsp+0x50]
   140033944:	cmp    QWORD PTR [rbx+0x38],0x10
   140033949:	jb     0x140033954
   14003394b:	mov    rcx,QWORD PTR [rbx+0x20]
   14003394f:	call   0x14002b150
   140033954:	mov    QWORD PTR [rbx+0x38],0xf
   14003395c:	mov    QWORD PTR [rbx+0x30],0x0
   140033964:	mov    rcx,rbx
   140033967:	mov    BYTE PTR [rbx+0x20],0x0
   14003396b:	call   0x14002b150
   140033970:	lea    rcx,[rip+0x1d009]        # 0x140050980
   140033977:	call   QWORD PTR [rip+0x15c1b]        # 0x140049598
   14003397d:	int3   
   14003397e:	mov    r11,QWORD PTR [rsp+0x50]
   140033983:	inc    rax
   140033986:	mov    QWORD PTR [r10+0x10],rax
   14003398a:	mov    QWORD PTR [r11+0x8],r9
   14003398e:	mov    rax,QWORD PTR [r10+0x8]
   140033992:	cmp    r9,rax
   140033995:	jne    0x1400339a8
   140033997:	mov    QWORD PTR [rax+0x8],r11
   14003399b:	mov    rax,QWORD PTR [r10+0x8]
   14003399f:	mov    QWORD PTR [rax],r11
   1400339a2:	mov    rax,QWORD PTR [r10+0x8]
   1400339a6:	jmp    0x1400339cc
   1400339a8:	test   r8b,r8b
   1400339ab:	je     0x1400339be
   1400339ad:	mov    QWORD PTR [r9],r11
   1400339b0:	mov    rax,QWORD PTR [r10+0x8]
   1400339b4:	cmp    r9,QWORD PTR [rax]
   1400339b7:	jne    0x1400339d0
   1400339b9:	mov    QWORD PTR [rax],r11
   1400339bc:	jmp    0x1400339d0
   1400339be:	mov    QWORD PTR [r9+0x10],r11
   1400339c2:	mov    rax,QWORD PTR [r10+0x8]
   1400339c6:	cmp    r9,QWORD PTR [rax+0x10]
   1400339ca:	jne    0x1400339d0
   1400339cc:	mov    QWORD PTR [rax+0x10],r11
   1400339d0:	mov    rax,QWORD PTR [r11+0x8]
   1400339d4:	mov    rdx,r11
   1400339d7:	cmp    BYTE PTR [rax+0x48],0x0
   1400339db:	jne    0x140033bbb
   1400339e1:	mov    rax,QWORD PTR [rdx+0x8]
   1400339e5:	mov    rcx,QWORD PTR [rax+0x8]
   1400339e9:	cmp    rax,QWORD PTR [rcx]
   1400339ec:	jne    0x140033ac9
   1400339f2:	mov    r8,QWORD PTR [rcx+0x10]
   1400339f6:	cmp    BYTE PTR [r8+0x48],0x0
   1400339fb:	je     0x140033ad3
   140033a01:	cmp    rdx,QWORD PTR [rax+0x10]
   140033a05:	jne    0x140033a53
   140033a07:	mov    rcx,QWORD PTR [rax+0x10]
   140033a0b:	mov    rdx,rax
   140033a0e:	mov    rax,QWORD PTR [rcx]
   140033a11:	mov    QWORD PTR [rdx+0x10],rax
   140033a15:	mov    rax,QWORD PTR [rcx]
   140033a18:	cmp    BYTE PTR [rax+0x49],0x0
   140033a1c:	jne    0x140033a22
   140033a1e:	mov    QWORD PTR [rax+0x8],rdx
   140033a22:	mov    rax,QWORD PTR [rdx+0x8]
   140033a26:	mov    QWORD PTR [rcx+0x8],rax
   140033a2a:	mov    rax,QWORD PTR [r10+0x8]
   140033a2e:	cmp    rdx,QWORD PTR [rax+0x8]
   140033a32:	jne    0x140033a3a
   140033a34:	mov    QWORD PTR [rax+0x8],rcx
   140033a38:	jmp    0x140033a4c
   140033a3a:	mov    rax,QWORD PTR [rdx+0x8]
   140033a3e:	cmp    rdx,QWORD PTR [rax]
   140033a41:	jne    0x140033a48
   140033a43:	mov    QWORD PTR [rax],rcx
   140033a46:	jmp    0x140033a4c
   140033a48:	mov    QWORD PTR [rax+0x10],rcx
   140033a4c:	mov    QWORD PTR [rcx],rdx
   140033a4f:	mov    QWORD PTR [rdx+0x8],rcx
   140033a53:	mov    rax,QWORD PTR [rdx+0x8]
   140033a57:	mov    BYTE PTR [rax+0x48],0x1
   140033a5b:	mov    rax,QWORD PTR [rdx+0x8]
   140033a5f:	mov    rcx,QWORD PTR [rax+0x8]
   140033a63:	mov    BYTE PTR [rcx+0x48],0x0
   140033a67:	mov    rax,QWORD PTR [rdx+0x8]
   140033a6b:	mov    rcx,QWORD PTR [rax+0x8]
   140033a6f:	mov    r8,QWORD PTR [rcx]
   140033a72:	mov    rax,QWORD PTR [r8+0x10]
   140033a76:	mov    QWORD PTR [rcx],rax
   140033a79:	mov    rax,QWORD PTR [r8+0x10]
   140033a7d:	cmp    BYTE PTR [rax+0x49],0x0
   140033a81:	jne    0x140033a87
   140033a83:	mov    QWORD PTR [rax+0x8],rcx
   140033a87:	mov    rax,QWORD PTR [rcx+0x8]
   140033a8b:	mov    QWORD PTR [r8+0x8],rax
   140033a8f:	mov    rax,QWORD PTR [r10+0x8]
   140033a93:	cmp    rcx,QWORD PTR [rax+0x8]
   140033a97:	jne    0x140033aa6
   140033a99:	mov    QWORD PTR [rax+0x8],r8
   140033a9d:	mov    QWORD PTR [r8+0x10],rcx
   140033aa1:	jmp    0x140033ba9
   140033aa6:	mov    rax,QWORD PTR [rcx+0x8]
   140033aaa:	cmp    rcx,QWORD PTR [rax+0x10]
   140033aae:	jne    0x140033abd
   140033ab0:	mov    QWORD PTR [rax+0x10],r8
   140033ab4:	mov    QWORD PTR [r8+0x10],rcx
   140033ab8:	jmp    0x140033ba9
   140033abd:	mov    QWORD PTR [rax],r8
   140033ac0:	mov    QWORD PTR [r8+0x10],rcx
   140033ac4:	jmp    0x140033ba9
   140033ac9:	mov    r8,QWORD PTR [rcx]
   140033acc:	cmp    BYTE PTR [r8+0x48],0x0
   140033ad1:	jne    0x140033af5
   140033ad3:	mov    BYTE PTR [rax+0x48],0x1
   140033ad7:	mov    BYTE PTR [r8+0x48],0x1
   140033adc:	mov    rax,QWORD PTR [rdx+0x8]
   140033ae0:	mov    rcx,QWORD PTR [rax+0x8]
   140033ae4:	mov    BYTE PTR [rcx+0x48],0x0
   140033ae8:	mov    rax,QWORD PTR [rdx+0x8]
   140033aec:	mov    rdx,QWORD PTR [rax+0x8]
   140033af0:	jmp    0x140033bad
   140033af5:	cmp    rdx,QWORD PTR [rax]
   140033af8:	jne    0x140033b48
   140033afa:	mov    rcx,QWORD PTR [rax]
   140033afd:	mov    rdx,rax
   140033b00:	mov    rax,QWORD PTR [rcx+0x10]
   140033b04:	mov    QWORD PTR [rdx],rax
   140033b07:	mov    rax,QWORD PTR [rcx+0x10]
   140033b0b:	cmp    BYTE PTR [rax+0x49],0x0
   140033b0f:	jne    0x140033b15
   140033b11:	mov    QWORD PTR [rax+0x8],rdx
   140033b15:	mov    rax,QWORD PTR [rdx+0x8]
   140033b19:	mov    QWORD PTR [rcx+0x8],rax
   140033b1d:	mov    rax,QWORD PTR [r10+0x8]
   140033b21:	cmp    rdx,QWORD PTR [rax+0x8]
   140033b25:	jne    0x140033b2d
   140033b27:	mov    QWORD PTR [rax+0x8],rcx
   140033b2b:	jmp    0x140033b40
   140033b2d:	mov    rax,QWORD PTR [rdx+0x8]
   140033b31:	cmp    rdx,QWORD PTR [rax+0x10]
   140033b35:	jne    0x140033b3d
   140033b37:	mov    QWORD PTR [rax+0x10],rcx
   140033b3b:	jmp    0x140033b40
   140033b3d:	mov    QWORD PTR [rax],rcx
   140033b40:	mov    QWORD PTR [rcx+0x10],rdx
   140033b44:	mov    QWORD PTR [rdx+0x8],rcx
   140033b48:	mov    rax,QWORD PTR [rdx+0x8]
   140033b4c:	mov    BYTE PTR [rax+0x48],0x1
   140033b50:	mov    rax,QWORD PTR [rdx+0x8]
   140033b54:	mov    rcx,QWORD PTR [rax+0x8]
   140033b58:	mov    BYTE PTR [rcx+0x48],0x0
   140033b5c:	mov    rax,QWORD PTR [rdx+0x8]
   140033b60:	mov    rcx,QWORD PTR [rax+0x8]
   140033b64:	mov    r8,QWORD PTR [rcx+0x10]
   140033b68:	mov    rax,QWORD PTR [r8]
   140033b6b:	mov    QWORD PTR [rcx+0x10],rax
   140033b6f:	mov    rax,QWORD PTR [r8]
   140033b72:	cmp    BYTE PTR [rax+0x49],0x0
   140033b76:	jne    0x140033b7c
   140033b78:	mov    QWORD PTR [rax+0x8],rcx
   140033b7c:	mov    rax,QWORD PTR [rcx+0x8]
   140033b80:	mov    QWORD PTR [r8+0x8],rax
   140033b84:	mov    rax,QWORD PTR [r10+0x8]
   140033b88:	cmp    rcx,QWORD PTR [rax+0x8]
   140033b8c:	jne    0x140033b94
   140033b8e:	mov    QWORD PTR [rax+0x8],r8
   140033b92:	jmp    0x140033ba6
   140033b94:	mov    rax,QWORD PTR [rcx+0x8]
   140033b98:	cmp    rcx,QWORD PTR [rax]
   140033b9b:	jne    0x140033ba2
   140033b9d:	mov    QWORD PTR [rax],r8
   140033ba0:	jmp    0x140033ba6
   140033ba2:	mov    QWORD PTR [rax+0x10],r8
   140033ba6:	mov    QWORD PTR [r8],rcx
   140033ba9:	mov    QWORD PTR [rcx+0x8],r8
   140033bad:	mov    rax,QWORD PTR [rdx+0x8]
   140033bb1:	cmp    BYTE PTR [rax+0x48],0x0
   140033bb5:	je     0x1400339e1
   140033bbb:	mov    rax,QWORD PTR [r10+0x8]
   140033bbf:	mov    QWORD PTR [rbx],r11
   140033bc2:	mov    rcx,QWORD PTR [rax+0x8]
   140033bc6:	mov    rax,rbx
   140033bc9:	mov    BYTE PTR [rcx+0x48],0x1
   140033bcd:	add    rsp,0x20
   140033bd1:	pop    rbx
   140033bd2:	ret    
   140033bd3:	int3   
   140033bd4:	int3   
   140033bd5:	int3   
   140033bd6:	int3   
   140033bd7:	int3   
   140033bd8:	int3   
   140033bd9:	int3   
   140033bda:	int3   
   140033bdb:	int3   
   140033bdc:	int3   
   140033bdd:	int3   
   140033bde:	int3   
   140033bdf:	int3   
   140033be0:	mov    QWORD PTR [rsp+0x8],rbx
   140033be5:	push   rdi
   140033be6:	sub    rsp,0x20
   140033bea:	mov    rdi,rdx
   140033bed:	mov    rbx,rcx
   140033bf0:	call   0x140031d30
   140033bf5:	lea    rdx,[rdi+0x40]
   140033bf9:	lea    rcx,[rbx+0x40]
   140033bfd:	call   0x14002f1b0
   140033c02:	mov    r11d,DWORD PTR [rdi+0x50]
   140033c06:	mov    DWORD PTR [rbx+0x50],r11d
   140033c0a:	movzx  eax,BYTE PTR [rdi+0x54]
   140033c0e:	mov    BYTE PTR [rbx+0x54],al
   140033c11:	test   al,al
   140033c13:	jne    0x140033c34
   140033c15:	mov    rax,QWORD PTR [rdi+0x20]
   140033c19:	mov    QWORD PTR [rbx+0x20],rax
   140033c1d:	mov    rax,QWORD PTR [rdi+0x28]
   140033c21:	mov    QWORD PTR [rbx+0x28],rax
   140033c25:	mov    rax,QWORD PTR [rdi+0x30]
   140033c29:	mov    QWORD PTR [rbx+0x30],rax
   140033c2d:	movzx  eax,BYTE PTR [rdi+0x38]
   140033c31:	mov    BYTE PTR [rbx+0x38],al
   140033c34:	mov    rax,rbx
   140033c37:	mov    rbx,QWORD PTR [rsp+0x30]
   140033c3c:	add    rsp,0x20
   140033c40:	pop    rdi
   140033c41:	ret    
   140033c42:	int3   
   140033c43:	int3   
   140033c44:	int3   
   140033c45:	int3   
   140033c46:	int3   
   140033c47:	int3   
   140033c48:	int3   
   140033c49:	int3   
   140033c4a:	int3   
   140033c4b:	int3   
   140033c4c:	int3   
   140033c4d:	int3   
   140033c4e:	int3   
   140033c4f:	int3   
   140033c50:	mov    QWORD PTR [rsp+0x8],rcx
   140033c55:	push   r12
   140033c57:	sub    rsp,0x40
   140033c5b:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140033c64:	mov    QWORD PTR [rsp+0x58],rbx
   140033c69:	mov    QWORD PTR [rsp+0x60],rsi
   140033c6e:	mov    QWORD PTR [rsp+0x68],rdi
   140033c73:	mov    r12,rdx
   140033c76:	mov    rbx,rcx
   140033c79:	xor    ecx,ecx
   140033c7b:	mov    QWORD PTR [rbx],rcx
   140033c7e:	mov    QWORD PTR [rbx+0x8],rcx
   140033c82:	mov    QWORD PTR [rbx+0x10],rcx
   140033c86:	mov    r8,QWORD PTR [rdx+0x8]
   140033c8a:	sub    r8,QWORD PTR [rdx]
   140033c8d:	movabs rax,0x2aaaaaaaaaaaaaab
   140033c97:	imul   r8
   140033c9a:	mov    rdi,rdx
   140033c9d:	sar    rdi,0x2
   140033ca1:	mov    rax,rdi
   140033ca4:	shr    rax,0x3f
   140033ca8:	add    rdi,rax
   140033cab:	mov    QWORD PTR [rbx],rcx
   140033cae:	mov    QWORD PTR [rbx+0x8],rcx
   140033cb2:	mov    QWORD PTR [rbx+0x10],rcx
   140033cb6:	je     0x140033d16
   140033cb8:	movabs rax,0xaaaaaaaaaaaaaaa
   140033cc2:	cmp    rdi,rax
   140033cc5:	jbe    0x140033cd5
   140033cc7:	lea    rcx,[rip+0x1cc8a]        # 0x140050958
   140033cce:	call   QWORD PTR [rip+0x158c4]        # 0x140049598
   140033cd4:	int3   
   140033cd5:	mov    rdx,rdi
   140033cd8:	lea    rcx,[rbx+0x18]
   140033cdc:	call   0x14002d090
   140033ce1:	mov    r8,rax
   140033ce4:	mov    QWORD PTR [rbx],rax
   140033ce7:	mov    QWORD PTR [rbx+0x8],rax
   140033ceb:	lea    rax,[rdi+rdi*2]
   140033cef:	lea    rcx,[r8+rax*8]
   140033cf3:	mov    QWORD PTR [rbx+0x10],rcx
   140033cf7:	movzx  eax,BYTE PTR [rsp+0x50]
   140033cfc:	mov    BYTE PTR [rsp+0x20],al
   140033d00:	lea    r9,[rbx+0x18]
   140033d04:	mov    rdx,QWORD PTR [r12+0x8]
   140033d09:	mov    rcx,QWORD PTR [r12]
   140033d0d:	call   0x140030c00
   140033d12:	mov    QWORD PTR [rbx+0x8],rax
   140033d16:	mov    rax,rbx
   140033d19:	mov    rbx,QWORD PTR [rsp+0x58]
   140033d1e:	mov    rsi,QWORD PTR [rsp+0x60]
   140033d23:	mov    rdi,QWORD PTR [rsp+0x68]
   140033d28:	add    rsp,0x40
   140033d2c:	pop    r12
   140033d2e:	ret    
   140033d2f:	int3   
   140033d30:	test   r8,r8
   140033d33:	je     0x14003408a
   140033d39:	mov    rax,rsp
   140033d3c:	mov    QWORD PTR [rax+0x10],rdx
   140033d40:	push   rdi
   140033d41:	push   r12
   140033d43:	push   r13
   140033d45:	push   r14
   140033d47:	push   r15
   140033d49:	sub    rsp,0x60
   140033d4d:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140033d56:	mov    QWORD PTR [rax+0x8],rbx
   140033d5a:	mov    QWORD PTR [rax+0x20],rsi
   140033d5e:	mov    r13,r9
   140033d61:	mov    rsi,r8
   140033d64:	mov    r10,rdx
   140033d67:	mov    r12,rcx
   140033d6a:	mov    r15,QWORD PTR [rcx+0x8]
   140033d6e:	mov    r8,QWORD PTR [rcx]
   140033d71:	mov    rdx,r15
   140033d74:	sub    rdx,r8
   140033d77:	movabs rdi,0x2aaaaaaaaaaaaaab
   140033d81:	mov    rax,rdi
   140033d84:	imul   rdx
   140033d87:	sar    rdx,0x2
   140033d8b:	mov    rax,rdx
   140033d8e:	shr    rax,0x3f
   140033d92:	add    rdx,rax
   140033d95:	movabs rax,0xaaaaaaaaaaaaaaa
   140033d9f:	sub    rax,rdx
   140033da2:	cmp    rax,rsi
   140033da5:	jae    0x140033db5
   140033da7:	lea    rcx,[rip+0x1cbaa]        # 0x140050958
   140033dae:	call   QWORD PTR [rip+0x157e4]        # 0x140049598
   140033db4:	int3   
   140033db5:	lea    r9,[rdx+rsi*1]
   140033db9:	mov    rcx,QWORD PTR [rcx+0x10]
   140033dbd:	sub    rcx,r8
   140033dc0:	mov    rax,rdi
   140033dc3:	imul   rcx
   140033dc6:	sar    rdx,0x2
   140033dca:	mov    rax,rdx
   140033dcd:	shr    rax,0x3f
   140033dd1:	add    rdx,rax
   140033dd4:	cmp    rdx,r9
   140033dd7:	jae    0x140033f12
   140033ddd:	mov    rdx,r9
   140033de0:	mov    rcx,r12
   140033de3:	call   0x14002d030
   140033de8:	mov    QWORD PTR [rsp+0xa0],rax
   140033df0:	mov    rdx,rax
   140033df3:	lea    rcx,[r12+0x18]
   140033df8:	call   0x14002d090
   140033dfd:	mov    rbx,rax
   140033e00:	mov    QWORD PTR [rsp+0x30],rax
   140033e05:	mov    rcx,QWORD PTR [rsp+0x98]
   140033e0d:	sub    rcx,QWORD PTR [r12]
   140033e11:	mov    rax,rdi
   140033e14:	imul   rcx
   140033e17:	mov    rdi,rdx
   140033e1a:	sar    rdi,0x2
   140033e1e:	mov    rax,rdi
   140033e21:	shr    rax,0x3f
   140033e25:	add    rdi,rax
   140033e28:	lea    rax,[rdi+rdi*2]
   140033e2c:	lea    rcx,[rbx+rax*8]
   140033e30:	movzx  eax,BYTE PTR [rsp+0xa0]
   140033e38:	mov    BYTE PTR [rsp+0x28],al
   140033e3c:	xor    r15d,r15d
   140033e3f:	mov    QWORD PTR [rsp+0x20],r15
   140033e44:	lea    r9,[r12+0x18]
   140033e49:	mov    r8,r13
   140033e4c:	mov    rdx,rsi
   140033e4f:	call   0x140030bc0
   140033e54:	movzx  eax,BYTE PTR [rsp+0xa0]
   140033e5c:	mov    BYTE PTR [rsp+0x28],al
   140033e60:	mov    QWORD PTR [rsp+0x20],r15
   140033e65:	lea    r9,[r12+0x18]
   140033e6a:	mov    r8,rbx
   140033e6d:	mov    rdx,QWORD PTR [rsp+0x98]
   140033e75:	mov    rcx,QWORD PTR [r12]
   140033e79:	call   0x14002f740
   140033e7e:	lea    rax,[rdi+rsi*1]
   140033e82:	lea    rcx,[rax+rax*2]
   140033e86:	lea    r8,[rbx+rcx*8]
   140033e8a:	movzx  eax,BYTE PTR [rsp+0xa0]
   140033e92:	mov    BYTE PTR [rsp+0x28],al
   140033e96:	mov    QWORD PTR [rsp+0x20],r15
   140033e9b:	lea    r9,[r12+0x18]
   140033ea0:	mov    rdx,QWORD PTR [r12+0x8]
   140033ea5:	mov    rcx,QWORD PTR [rsp+0x98]
   140033ead:	call   0x14002f740
   140033eb2:	nop
   140033eb3:	mov    rcx,QWORD PTR [r12]
   140033eb7:	mov    rdx,QWORD PTR [r12+0x8]
   140033ebc:	sub    rdx,rcx
   140033ebf:	movabs rax,0x2aaaaaaaaaaaaaab
   140033ec9:	imul   rdx
   140033ecc:	sar    rdx,0x2
   140033ed0:	mov    rax,rdx
   140033ed3:	shr    rax,0x3f
   140033ed7:	add    rdx,rax
   140033eda:	add    rsi,rdx
   140033edd:	test   rcx,rcx
   140033ee0:	je     0x140033ee7
   140033ee2:	call   0x14002b150
   140033ee7:	mov    rax,QWORD PTR [rsp+0xa0]
   140033eef:	lea    rax,[rax+rax*2]
   140033ef3:	lea    rcx,[rbx+rax*8]
   140033ef7:	mov    QWORD PTR [r12+0x10],rcx
   140033efc:	lea    rax,[rsi+rsi*2]
   140033f00:	lea    rcx,[rbx+rax*8]
   140033f04:	mov    QWORD PTR [r12+0x8],rcx
   140033f09:	mov    QWORD PTR [r12],rbx
   140033f0d:	jmp    0x140034071
   140033f12:	mov    rcx,r15
   140033f15:	sub    rcx,r10
   140033f18:	mov    rax,rdi
   140033f1b:	imul   rcx
   140033f1e:	sar    rdx,0x2
   140033f22:	mov    rax,rdx
   140033f25:	shr    rax,0x3f
   140033f29:	add    rdx,rax
   140033f2c:	mov    rbx,QWORD PTR [r13+0x0]
   140033f30:	mov    rdi,QWORD PTR [r13+0x8]
   140033f34:	lea    rax,[rsi+rsi*2]
   140033f38:	mov    r8,r15
   140033f3b:	mov    rcx,r12
   140033f3e:	cmp    rdx,rsi
   140033f41:	jae    0x140034006
   140033f47:	mov    QWORD PTR [rsp+0x40],rbx
   140033f4c:	mov    QWORD PTR [rsp+0x48],rdi
   140033f51:	movzx  r13d,BYTE PTR [r13+0x10]
   140033f56:	mov    BYTE PTR [rsp+0x50],r13b
   140033f5b:	lea    r14,[rax*8+0x0]
   140033f63:	lea    r9,[r14+r10*1]
   140033f67:	mov    rdx,r10
   140033f6a:	call   0x140030b40
   140033f6f:	nop
   140033f70:	mov    r10,QWORD PTR [r12+0x8]
   140033f75:	mov    rcx,r10
   140033f78:	sub    rcx,QWORD PTR [rsp+0x98]
   140033f80:	movabs rax,0x2aaaaaaaaaaaaaab
   140033f8a:	imul   rcx
   140033f8d:	sar    rdx,0x2
   140033f91:	mov    rax,rdx
   140033f94:	shr    rax,0x3f
   140033f98:	add    rdx,rax
   140033f9b:	sub    rsi,rdx
   140033f9e:	lea    r9,[r12+0x18]
   140033fa3:	movzx  eax,BYTE PTR [rsp+0xa0]
   140033fab:	mov    BYTE PTR [rsp+0x28],al
   140033faf:	xor    r15d,r15d
   140033fb2:	mov    QWORD PTR [rsp+0x20],r15
   140033fb7:	lea    r8,[rsp+0x40]
   140033fbc:	mov    rdx,rsi
   140033fbf:	mov    rcx,r10
   140033fc2:	call   0x140030bc0
   140033fc7:	nop
   140033fc8:	add    QWORD PTR [r12+0x8],r14
   140033fcd:	mov    rcx,QWORD PTR [r12+0x8]
   140033fd2:	sub    rcx,r14
   140033fd5:	mov    rax,QWORD PTR [rsp+0x98]
   140033fdd:	cmp    rax,rcx
   140033fe0:	je     0x140034071
   140033fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140033ff0:	mov    QWORD PTR [rax],rbx
   140033ff3:	mov    QWORD PTR [rax+0x8],rdi
   140033ff7:	mov    BYTE PTR [rax+0x10],r13b
   140033ffb:	add    rax,0x18
   140033fff:	cmp    rax,rcx
   140034002:	jne    0x140033ff0
   140034004:	jmp    0x140034071
   140034006:	movzx  r14d,BYTE PTR [r13+0x10]
   14003400b:	lea    r13,[rax*8+0x0]
   140034013:	mov    rsi,r15
   140034016:	sub    rsi,r13
   140034019:	mov    r9,r15
   14003401c:	mov    rdx,rsi
   14003401f:	call   0x140030b40
   140034024:	mov    QWORD PTR [r12+0x8],rax
   140034029:	mov    r8,r15
   14003402c:	mov    rdx,rsi
   14003402f:	mov    rcx,QWORD PTR [rsp+0x98]
   140034037:	call   0x14002d810
   14003403c:	mov    r11,QWORD PTR [rsp+0x98]
   140034044:	lea    rax,[r13+r11*1+0x0]
   140034049:	cmp    r11,rax
   14003404c:	je     0x140034071
   14003404e:	xchg   ax,ax
   140034050:	mov    QWORD PTR [r11],rbx
   140034053:	mov    QWORD PTR [r11+0x8],rdi
   140034057:	mov    BYTE PTR [r11+0x10],r14b
   14003405b:	add    r11,0x18
   14003405f:	mov    rax,QWORD PTR [rsp+0x98]
   140034067:	lea    rcx,[r13+rax*1+0x0]
   14003406c:	cmp    r11,rcx
   14003406f:	jne    0x140034050
   140034071:	lea    r11,[rsp+0x60]
   140034076:	mov    rbx,QWORD PTR [r11+0x30]
   14003407a:	mov    rsi,QWORD PTR [r11+0x48]
   14003407e:	mov    rsp,r11
   140034081:	pop    r15
   140034083:	pop    r14
   140034085:	pop    r13
   140034087:	pop    r12
   140034089:	pop    rdi
   14003408a:	repz ret 
   14003408c:	int3   
   14003408d:	int3   
   14003408e:	int3   
   14003408f:	int3   
   140034090:	push   r12
   140034092:	push   r13
   140034094:	sub    rsp,0x58
   140034098:	cmp    BYTE PTR [rcx+0x54],0x0
   14003409c:	mov    r13,rdx
   14003409f:	mov    r12,rcx
   1400340a2:	je     0x140034100
   1400340a4:	call   0x140031d30
   1400340a9:	lea    rdx,[r13+0x40]
   1400340ad:	lea    rcx,[r12+0x40]
   1400340b2:	call   0x14002f1b0
   1400340b7:	mov    r11d,DWORD PTR [r13+0x50]
   1400340bb:	mov    DWORD PTR [r12+0x50],r11d
   1400340c0:	movzx  eax,BYTE PTR [r13+0x54]
   1400340c5:	mov    BYTE PTR [r12+0x54],al
   1400340ca:	test   al,al
   1400340cc:	jne    0x140034384
   1400340d2:	mov    rax,QWORD PTR [r13+0x20]
   1400340d6:	mov    QWORD PTR [r12+0x20],rax
   1400340db:	mov    rax,QWORD PTR [r13+0x28]
   1400340df:	mov    QWORD PTR [r12+0x28],rax
   1400340e4:	mov    rax,QWORD PTR [r13+0x30]
   1400340e8:	mov    QWORD PTR [r12+0x30],rax
   1400340ed:	movzx  eax,BYTE PTR [r13+0x38]
   1400340f2:	mov    BYTE PTR [r12+0x38],al
   1400340f7:	add    rsp,0x58
   1400340fb:	pop    r13
   1400340fd:	pop    r12
   1400340ff:	ret    
   140034100:	mov    r9,QWORD PTR [rcx+0x8]
   140034104:	mov    r8,QWORD PTR [rcx]
   140034107:	mov    QWORD PTR [rsp+0x78],rbx
   14003410c:	mov    QWORD PTR [rsp+0x50],rbp
   140034111:	mov    QWORD PTR [rsp+0x48],rsi
   140034116:	mov    QWORD PTR [rsp+0x40],rdi
   14003411b:	mov    rcx,r9
   14003411e:	movabs rbx,0x2aaaaaaaaaaaaaab
   140034128:	mov    QWORD PTR [rsp+0x38],r14
   14003412d:	sub    rcx,r8
   140034130:	mov    rax,rbx
   140034133:	mov    QWORD PTR [rsp+0x30],r15
   140034138:	lea    rdi,[rsp+0x70]
   14003413d:	imul   rcx
   140034140:	mov    r11,rdx
   140034143:	sar    r11,0x2
   140034147:	mov    rax,r11
   14003414a:	shr    rax,0x3f
   14003414e:	add    r11,rax
   140034151:	mov    QWORD PTR [rsp+0x20],r11
   140034156:	cmp    r11,0x2
   14003415a:	jbe    0x140034167
   14003415c:	lea    rax,[r8+0x30]
   140034160:	mov    QWORD PTR [rsp+0x70],rax
   140034165:	jmp    0x14003416c
   140034167:	mov    QWORD PTR [rsp+0x70],r9
   14003416c:	mov    r9,QWORD PTR [r13+0x8]
   140034170:	mov    r10,QWORD PTR [r13+0x0]
   140034174:	mov    rdi,QWORD PTR [rdi]
   140034177:	mov    rax,rbx
   14003417a:	mov    rcx,r9
   14003417d:	lea    rbx,[rsp+0x70]
   140034182:	sub    rcx,r10
   140034185:	imul   rcx
   140034188:	sar    rdx,0x2
   14003418c:	mov    rax,rdx
   14003418f:	shr    rax,0x3f
   140034193:	add    rdx,rax
   140034196:	cmp    rdx,0x2
   14003419a:	jbe    0x1400341a7
   14003419c:	lea    rax,[r10+0x30]
   1400341a0:	mov    QWORD PTR [rsp+0x70],rax
   1400341a5:	jmp    0x1400341ac
   1400341a7:	mov    QWORD PTR [rsp+0x70],r9
   1400341ac:	mov    rbx,QWORD PTR [rbx]
   1400341af:	mov    rsi,r8
   1400341b2:	test   r11d,r11d
   1400341b5:	jg     0x1400341bc
   1400341b7:	lea    rsi,[r12+0x28]
   1400341bc:	mov    rsi,QWORD PTR [rsi+0x8]
   1400341c0:	cmp    QWORD PTR [rdi],rsi
   1400341c3:	jne    0x1400341d1
   1400341c5:	cmp    r11d,0x1
   1400341c9:	jle    0x1400341db
   1400341cb:	lea    rax,[r8+0x18]
   1400341cf:	jmp    0x1400341e0
   1400341d1:	lea    rax,[r8+0x30]
   1400341d5:	cmp    r11d,0x2
   1400341d9:	jg     0x1400341e0
   1400341db:	lea    rax,[r12+0x28]
   1400341e0:	mov    rbp,QWORD PTR [rax]
   1400341e3:	xor    eax,eax
   1400341e5:	mov    rcx,r12
   1400341e8:	mov    QWORD PTR [rsp+0x88],rax
   1400341f0:	mov    QWORD PTR [rsp+0x80],rax
   1400341f8:	mov    r14d,eax
   1400341fb:	mov    r15d,eax
   1400341fe:	mov    QWORD PTR [rsp+0x70],rax
   140034203:	call   0x14002dfd0
   140034208:	mov    r11,rax
   14003420b:	test   rax,rax
   14003420e:	je     0x1400342ce
   140034214:	mov    rcx,QWORD PTR [rdi]
   140034217:	cmp    rcx,rsi
   14003421a:	jne    0x14003423c
   14003421c:	cmp    QWORD PTR [rbx],rsi
   14003421f:	jne    0x1400342be
   140034225:	movzx  ecx,BYTE PTR [rdi+0x10]
   140034229:	test   cl,cl
   14003422b:	jne    0x140034237
   14003422d:	cmp    BYTE PTR [rbx+0x10],0x1
   140034231:	je     0x1400342d3
   140034237:	cmp    cl,0x1
   14003423a:	jmp    0x140034292
   14003423c:	mov    rax,QWORD PTR [rbx]
   14003423f:	cmp    rax,rsi
   140034242:	je     0x140034366
   140034248:	mov    r14,rcx
   14003424b:	mov    r15,rax
   14003424e:	sub    r14,rbp
   140034251:	sub    r15,rbp
   140034254:	cmp    r15,r14
   140034257:	jg     0x140034366
   14003425d:	jl     0x1400342d3
   14003425f:	mov    rdx,QWORD PTR [rdi+0x8]
   140034263:	sub    rdx,rcx
   140034266:	mov    rcx,QWORD PTR [rbx+0x8]
   14003426a:	sub    rcx,rax
   14003426d:	mov    QWORD PTR [rsp+0x88],rdx
   140034275:	mov    QWORD PTR [rsp+0x80],rcx
   14003427d:	cmp    rdx,rcx
   140034280:	jne    0x1400342d3
   140034282:	movzx  eax,BYTE PTR [rdi+0x10]
   140034286:	test   al,al
   140034288:	jne    0x140034290
   14003428a:	cmp    BYTE PTR [rbx+0x10],0x1
   14003428e:	je     0x1400342d3
   140034290:	cmp    al,0x1
   140034292:	jne    0x14003429e
   140034294:	cmp    BYTE PTR [rbx+0x10],0x0
   140034298:	je     0x140034366
   14003429e:	mov    rcx,QWORD PTR [rsp+0x70]
   1400342a3:	add    rdi,0x18
   1400342a7:	add    rbx,0x18
   1400342ab:	inc    rcx
   1400342ae:	mov    QWORD PTR [rsp+0x70],rcx
   1400342b3:	cmp    rcx,r11
   1400342b6:	jb     0x140034214
   1400342bc:	jmp    0x1400342d8
   1400342be:	mov    rcx,QWORD PTR [rsp+0x70]
   1400342c3:	xor    edx,edx
   1400342c5:	lea    r14d,[rdx+0x1]
   1400342c9:	mov    r15d,edx
   1400342cc:	jmp    0x1400342da
   1400342ce:	mov    rcx,r14
   1400342d1:	jmp    0x1400342d8
   1400342d3:	mov    rcx,QWORD PTR [rsp+0x70]
   1400342d8:	xor    edx,edx
   1400342da:	mov    rax,QWORD PTR [rsp+0x20]
   1400342df:	cmp    rax,0x2
   1400342e3:	jb     0x1400342e9
   1400342e5:	lea    rdx,[rax-0x2]
   1400342e9:	cmp    rcx,rdx
   1400342ec:	je     0x140034366
   1400342ee:	cmp    r15,r14
   1400342f1:	jl     0x140034311
   1400342f3:	mov    rax,QWORD PTR [rsp+0x80]
   1400342fb:	cmp    rax,QWORD PTR [rsp+0x88]
   140034303:	jg     0x140034311
   140034305:	cmp    BYTE PTR [rdi+0x10],0x0
   140034309:	jne    0x140034366
   14003430b:	cmp    BYTE PTR [rbx+0x10],0x1
   14003430f:	jne    0x140034366
   140034311:	mov    rdx,r13
   140034314:	mov    rcx,r12
   140034317:	call   0x140031d30
   14003431c:	lea    rdx,[r13+0x40]
   140034320:	lea    rcx,[r12+0x40]
   140034325:	call   0x14002f1b0
   14003432a:	mov    r11d,DWORD PTR [r13+0x50]
   14003432e:	mov    DWORD PTR [r12+0x50],r11d
   140034333:	movzx  eax,BYTE PTR [r13+0x54]
   140034338:	mov    BYTE PTR [r12+0x54],al
   14003433d:	test   al,al
   14003433f:	jne    0x140034366
   140034341:	mov    rax,QWORD PTR [r13+0x20]
   140034345:	mov    QWORD PTR [r12+0x20],rax
   14003434a:	mov    rax,QWORD PTR [r13+0x28]
   14003434e:	mov    QWORD PTR [r12+0x28],rax
   140034353:	mov    rax,QWORD PTR [r13+0x30]
   140034357:	mov    QWORD PTR [r12+0x30],rax
   14003435c:	movzx  eax,BYTE PTR [r13+0x38]
   140034361:	mov    BYTE PTR [r12+0x38],al
   140034366:	mov    r14,QWORD PTR [rsp+0x38]
   14003436b:	mov    rdi,QWORD PTR [rsp+0x40]
   140034370:	mov    rsi,QWORD PTR [rsp+0x48]
   140034375:	mov    rbp,QWORD PTR [rsp+0x50]
   14003437a:	mov    rbx,QWORD PTR [rsp+0x78]
   14003437f:	mov    r15,QWORD PTR [rsp+0x30]
   140034384:	add    rsp,0x58
   140034388:	pop    r13
   14003438a:	pop    r12
   14003438c:	ret    
   14003438d:	int3   
   14003438e:	int3   
   14003438f:	int3   
   140034390:	mov    QWORD PTR [rsp+0x8],rcx
   140034395:	push   rdi
   140034396:	sub    rsp,0x30
   14003439a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400343a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400343a8:	mov    QWORD PTR [rsp+0x50],rbp
   1400343ad:	mov    QWORD PTR [rsp+0x58],rsi
   1400343b2:	mov    rbx,rcx
   1400343b5:	mov    rcx,QWORD PTR [rcx+0x180]
   1400343bc:	test   rcx,rcx
   1400343bf:	je     0x1400343c6
   1400343c1:	call   0x14002b150
   1400343c6:	xor    ebp,ebp
   1400343c8:	mov    QWORD PTR [rbx+0x180],rbp
   1400343cf:	mov    QWORD PTR [rbx+0x188],rbp
   1400343d6:	mov    QWORD PTR [rbx+0x190],rbp
   1400343dd:	mov    rcx,QWORD PTR [rbx+0x168]
   1400343e4:	call   0x14002b150
   1400343e9:	mov    rdi,QWORD PTR [rbx+0x28]
   1400343ed:	test   rdi,rdi
   1400343f0:	je     0x140034411
   1400343f2:	lock dec DWORD PTR [rdi+0x8]
   1400343f6:	jne    0x140034411
   1400343f8:	mov    rax,QWORD PTR [rdi]
   1400343fb:	mov    rcx,rdi
   1400343fe:	call   QWORD PTR [rax+0x8]
   140034401:	lock dec DWORD PTR [rdi+0xc]
   140034405:	jne    0x140034411
   140034407:	mov    rax,QWORD PTR [rdi]
   14003440a:	mov    rcx,rdi
   14003440d:	call   QWORD PTR [rax+0x10]
   140034410:	nop
   140034411:	mov    rcx,QWORD PTR [rbx]
   140034414:	test   rcx,rcx
   140034417:	je     0x14003441e
   140034419:	call   0x14002b150
   14003441e:	mov    QWORD PTR [rbx],rbp
   140034421:	mov    QWORD PTR [rbx+0x8],rbp
   140034425:	mov    QWORD PTR [rbx+0x10],rbp
   140034429:	mov    rbx,QWORD PTR [rsp+0x48]
   14003442e:	mov    rbp,QWORD PTR [rsp+0x50]
   140034433:	mov    rsi,QWORD PTR [rsp+0x58]
   140034438:	add    rsp,0x30
   14003443c:	pop    rdi
   14003443d:	ret    
   14003443e:	int3   
   14003443f:	int3   
   140034440:	sub    rsp,0x88
   140034447:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140034450:	mov    rax,QWORD PTR [rip+0x33d99]        # 0x1400681f0
   140034457:	xor    rax,rsp
   14003445a:	mov    QWORD PTR [rsp+0x70],rax
   14003445f:	mov    r8d,edx
   140034462:	lea    rdx,[rsp+0x48]
   140034467:	call   0x140032280
   14003446c:	nop
   14003446d:	cmp    QWORD PTR [rax+0x18],0x10
   140034472:	jb     0x140034477
   140034474:	mov    rax,QWORD PTR [rax]
   140034477:	mov    QWORD PTR [rsp+0x20],rax
   14003447c:	lea    rdx,[rsp+0x20]
   140034481:	lea    rcx,[rsp+0x28]
   140034486:	call   QWORD PTR [rip+0x15444]        # 0x1400498d0
   14003448c:	lea    r11,[rip+0x199b5]        # 0x14004de48
   140034493:	mov    QWORD PTR [rsp+0x28],r11
   140034498:	cmp    QWORD PTR [rsp+0x60],0x10
   14003449e:	jb     0x1400344aa
   1400344a0:	mov    rcx,QWORD PTR [rsp+0x48]
   1400344a5:	call   0x14002b150
   1400344aa:	mov    QWORD PTR [rsp+0x60],0xf
   1400344b3:	mov    QWORD PTR [rsp+0x58],0x0
   1400344bc:	mov    BYTE PTR [rsp+0x48],0x0
   1400344c1:	lea    rcx,[rsp+0x28]
   1400344c6:	call   0x140042430
   1400344cb:	nop
   1400344cc:	lea    rcx,[rsp+0x28]
   1400344d1:	call   QWORD PTR [rip+0x153c1]        # 0x140049898
   1400344d7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400344dc:	xor    rcx,rsp
   1400344df:	call   0x14002b100
   1400344e4:	add    rsp,0x88
   1400344eb:	ret    
   1400344ec:	int3   
   1400344ed:	int3   
   1400344ee:	int3   
   1400344ef:	int3   
   1400344f0:	rex push rbp
   1400344f2:	push   rbx
   1400344f3:	push   rsi
   1400344f4:	push   rdi
   1400344f5:	lea    rbp,[rsp-0x3f]
   1400344fa:	sub    rsp,0xd8
   140034501:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   140034509:	mov    rax,QWORD PTR [rip+0x33ce0]        # 0x1400681f0
   140034510:	xor    rax,rsp
   140034513:	mov    QWORD PTR [rbp+0x27],rax
   140034517:	mov    r10,r8
   14003451a:	mov    rbx,rdx
   14003451d:	mov    rsi,rcx
   140034520:	mov    QWORD PTR [rbp-0x61],rdx
   140034524:	xor    edi,edi
   140034526:	mov    DWORD PTR [rbp-0x69],edi
   140034529:	mov    QWORD PTR [rdx+0x18],0xf
   140034531:	mov    QWORD PTR [rdx+0x10],rdi
   140034535:	mov    BYTE PTR [rdx],dil
   140034538:	mov    DWORD PTR [rbp-0x69],0x1
   14003453f:	mov    ecx,DWORD PTR [rcx+0x468]
   140034545:	test   ecx,ecx
   140034547:	je     0x1400346aa
   14003454d:	dec    ecx
   14003454f:	je     0x140034658
   140034555:	dec    ecx
   140034557:	je     0x140034566
   140034559:	dec    ecx
   14003455b:	je     0x1400346aa
   140034561:	jmp    0x140034779
   140034566:	lea    rdx,[rbp-0x51]
   14003456a:	mov    rcx,rsi
   14003456d:	call   0x14002f7e0
   140034572:	nop
   140034573:	mov    rdx,rax
   140034576:	mov    rcx,rbx
   140034579:	call   0x140004730
   14003457e:	nop
   14003457f:	cmp    QWORD PTR [rbp-0x39],0x10
   140034584:	jb     0x14003458f
   140034586:	mov    rcx,QWORD PTR [rbp-0x51]
   14003458a:	call   0x14002b150
   14003458f:	mov    QWORD PTR [rbp-0x39],0xf
   140034597:	mov    QWORD PTR [rbp-0x41],rdi
   14003459b:	mov    BYTE PTR [rbp-0x51],0x0
   14003459f:	mov    r8,QWORD PTR [rbx+0x10]
   1400345a3:	test   r8,r8
   1400345a6:	je     0x1400345ce
   1400345a8:	mov    rcx,QWORD PTR [rbx+0x18]
   1400345ac:	movzx  edx,BYTE PTR [rsi+0x46c]
   1400345b3:	cmp    rcx,0x10
   1400345b7:	jb     0x1400345be
   1400345b9:	mov    rax,QWORD PTR [rbx]
   1400345bc:	jmp    0x1400345c1
   1400345be:	mov    rax,rbx
   1400345c1:	cmp    BYTE PTR [rax+rdi*1],dl
   1400345c4:	je     0x1400345ce
   1400345c6:	inc    rdi
   1400345c9:	cmp    rdi,r8
   1400345cc:	jb     0x1400345b3
   1400345ce:	or     rsi,0xffffffffffffffff
   1400345d2:	cmp    r8,rdi
   1400345d5:	jae    0x1400345e5
   1400345d7:	lea    rcx,[rip+0x1c352]        # 0x140050930
   1400345de:	call   QWORD PTR [rip+0x14fcc]        # 0x1400495b0
   1400345e4:	int3   
   1400345e5:	mov    rax,r8
   1400345e8:	sub    rax,rdi
   1400345eb:	cmp    rax,0xffffffffffffffff
   1400345ef:	jae    0x1400345fd
   1400345f1:	mov    rsi,rax
   1400345f4:	test   rax,rax
   1400345f7:	je     0x140034779
   1400345fd:	mov    rax,QWORD PTR [rbx+0x18]
   140034601:	cmp    rax,0x10
   140034605:	jb     0x14003460c
   140034607:	mov    rcx,QWORD PTR [rbx]
   14003460a:	jmp    0x14003460f
   14003460c:	mov    rcx,rbx
   14003460f:	cmp    rax,0x10
   140034613:	jb     0x14003461a
   140034615:	mov    rax,QWORD PTR [rbx]
   140034618:	jmp    0x14003461d
   14003461a:	mov    rax,rbx
   14003461d:	sub    r8,rsi
   140034620:	sub    r8,rdi
   140034623:	lea    rdx,[rcx+rsi*1]
   140034627:	add    rdx,rdi
   14003462a:	lea    rcx,[rax+rdi*1]
   14003462e:	call   QWORD PTR [rip+0x14fbc]        # 0x1400495f0
   140034634:	mov    r11,QWORD PTR [rbx+0x10]
   140034638:	sub    r11,rsi
   14003463b:	mov    QWORD PTR [rbx+0x10],r11
   14003463f:	cmp    QWORD PTR [rbx+0x18],0x10
   140034644:	jb     0x14003464b
   140034646:	mov    rax,QWORD PTR [rbx]
   140034649:	jmp    0x14003464e
   14003464b:	mov    rax,rbx
   14003464e:	mov    BYTE PTR [rax+r11*1],0x0
   140034653:	jmp    0x140034779
   140034658:	lea    rdx,[rbp-0x29]
   14003465c:	mov    rcx,rsi
   14003465f:	call   0x14002f7e0
   140034664:	nop
   140034665:	mov    rdx,rax
   140034668:	mov    rcx,rbx
   14003466b:	call   0x140004730
   140034670:	nop
   140034671:	cmp    QWORD PTR [rbp-0x11],0x10
   140034676:	jb     0x140034681
   140034678:	mov    rcx,QWORD PTR [rbp-0x29]
   14003467c:	call   0x14002b150
   140034681:	mov    QWORD PTR [rbp-0x11],0xf
   140034689:	mov    QWORD PTR [rbp-0x19],rdi
   14003468d:	mov    BYTE PTR [rbp-0x29],0x0
   140034691:	movsx  rdx,BYTE PTR [rsi+0x46c]
   140034699:	or     r8,0xffffffffffffffff
   14003469d:	mov    rcx,rbx
   1400346a0:	call   0x140002dfc
   1400346a5:	jmp    0x140034779
   1400346aa:	mov    rdx,QWORD PTR [rdx+0x18]
   1400346ae:	cmp    rdx,0x10
   1400346b2:	jb     0x1400346b9
   1400346b4:	mov    rcx,QWORD PTR [rbx]
   1400346b7:	jmp    0x1400346bc
   1400346b9:	mov    rcx,rbx
   1400346bc:	mov    rax,QWORD PTR [rbx+0x10]
   1400346c0:	lea    r8,[rcx+rax*1]
   1400346c4:	cmp    rdx,0x10
   1400346c8:	jb     0x1400346cf
   1400346ca:	mov    rdx,QWORD PTR [rbx]
   1400346cd:	jmp    0x1400346d2
   1400346cf:	mov    rdx,rbx
   1400346d2:	mov    QWORD PTR [rsp+0x20],r9
   1400346d7:	mov    r9,r10
   1400346da:	mov    rcx,rbx
   1400346dd:	call   0x140030d20
   1400346e2:	cmp    QWORD PTR [rbx+0x10],0x0
   1400346e7:	jbe    0x140034728
   1400346e9:	nop    DWORD PTR [rax+0x0]
   1400346f0:	mov    rcx,QWORD PTR [rbx+0x18]
   1400346f4:	cmp    rcx,0x10
   1400346f8:	jb     0x1400346ff
   1400346fa:	mov    rax,QWORD PTR [rbx]
   1400346fd:	jmp    0x140034702
   1400346ff:	mov    rax,rbx
   140034702:	movzx  eax,BYTE PTR [rax+rdi*1]
   140034706:	movzx  edx,BYTE PTR [rax+rsi*1+0x104]
   14003470e:	cmp    rcx,0x10
   140034712:	jb     0x140034719
   140034714:	mov    rax,QWORD PTR [rbx]
   140034717:	jmp    0x14003471c
   140034719:	mov    rax,rbx
   14003471c:	mov    BYTE PTR [rax+rdi*1],dl
   14003471f:	inc    rdi
   140034722:	cmp    rdi,QWORD PTR [rbx+0x10]
   140034726:	jb     0x1400346f0
   140034728:	mov    rax,QWORD PTR [rbx+0x18]
   14003472c:	cmp    rax,0x10
   140034730:	jb     0x140034737
   140034732:	mov    rcx,QWORD PTR [rbx]
   140034735:	jmp    0x14003473a
   140034737:	mov    rcx,rbx
   14003473a:	mov    rdx,QWORD PTR [rbx+0x10]
   14003473e:	cmp    rax,0x10
   140034742:	jb     0x140034749
   140034744:	mov    r8,QWORD PTR [rbx]
   140034747:	jmp    0x14003474c
   140034749:	mov    r8,rbx
   14003474c:	lea    r9,[rcx+rdx*1]
   140034750:	lea    rdx,[rbp-0x1]
   140034754:	mov    rcx,rsi
   140034757:	call   0x14002f7e0
   14003475c:	nop
   14003475d:	mov    rdx,rax
   140034760:	mov    rcx,rbx
   140034763:	call   0x140004730
   140034768:	nop
   140034769:	cmp    QWORD PTR [rbp+0x17],0x10
   14003476e:	jb     0x140034779
   140034770:	mov    rcx,QWORD PTR [rbp-0x1]
   140034774:	call   0x14002b150
   140034779:	cmp    QWORD PTR [rbx+0x10],0x0
   14003477e:	jne    0x1400347b3
   140034780:	mov    QWORD PTR [rbp-0x39],0xf
   140034788:	mov    QWORD PTR [rbp-0x41],0x1
   140034790:	mov    WORD PTR [rbp-0x51],0x0
   140034796:	lea    rdx,[rbp-0x51]
   14003479a:	mov    rcx,rbx
   14003479d:	call   0x140004730
   1400347a2:	nop
   1400347a3:	cmp    QWORD PTR [rbp-0x39],0x10
   1400347a8:	jb     0x1400347b3
   1400347aa:	mov    rcx,QWORD PTR [rbp-0x51]
   1400347ae:	call   0x14002b150
   1400347b3:	mov    rax,rbx
   1400347b6:	mov    rcx,QWORD PTR [rbp+0x27]
   1400347ba:	xor    rcx,rsp
   1400347bd:	call   0x14002b100
   1400347c2:	add    rsp,0xd8
   1400347c9:	pop    rdi
   1400347ca:	pop    rsi
   1400347cb:	pop    rbx
   1400347cc:	pop    rbp
   1400347cd:	ret    
   1400347ce:	int3   
   1400347cf:	int3   
   1400347d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400347d5:	push   rdi
   1400347d6:	sub    rsp,0x20
   1400347da:	mov    rbx,rcx
   1400347dd:	mov    rcx,QWORD PTR [rcx+0x50]
   1400347e1:	test   rcx,rcx
   1400347e4:	je     0x1400347eb
   1400347e6:	call   0x14002b150
   1400347eb:	xor    edi,edi
   1400347ed:	mov    QWORD PTR [rbx+0x50],rdi
   1400347f1:	mov    QWORD PTR [rbx+0x58],rdi
   1400347f5:	mov    QWORD PTR [rbx+0x60],rdi
   1400347f9:	mov    rcx,QWORD PTR [rbx+0x20]
   1400347fd:	test   rcx,rcx
   140034800:	je     0x140034807
   140034802:	call   0x14002b150
   140034807:	mov    QWORD PTR [rbx+0x20],rdi
   14003480b:	mov    QWORD PTR [rbx+0x28],rdi
   14003480f:	mov    QWORD PTR [rbx+0x30],rdi
   140034813:	mov    rcx,QWORD PTR [rbx]
   140034816:	test   rcx,rcx
   140034819:	je     0x140034820
   14003481b:	call   0x14002b150
   140034820:	mov    QWORD PTR [rbx],rdi
   140034823:	mov    QWORD PTR [rbx+0x8],rdi
   140034827:	mov    QWORD PTR [rbx+0x10],rdi
   14003482b:	mov    rbx,QWORD PTR [rsp+0x30]
   140034830:	add    rsp,0x20
   140034834:	pop    rdi
   140034835:	ret    
   140034836:	int3   
   140034837:	int3   
   140034838:	int3   
   140034839:	int3   
   14003483a:	int3   
   14003483b:	int3   
   14003483c:	int3   
   14003483d:	int3   
   14003483e:	int3   
   14003483f:	int3   
   140034840:	sub    rsp,0x28
   140034844:	mov    r10,QWORD PTR [rcx]
   140034847:	mov    r8,QWORD PTR [rcx+0x8]
   14003484b:	movabs r9,0xfffffffffffffff
   140034855:	sub    r8,r10
   140034858:	mov    rax,r9
   14003485b:	sar    r8,0x4
   14003485f:	sub    rax,rdx
   140034862:	cmp    rax,r8
   140034865:	jae    0x140034875
   140034867:	lea    rcx,[rip+0x1c0ea]        # 0x140050958
   14003486e:	call   QWORD PTR [rip+0x14d24]        # 0x140049598
   140034874:	int3   
   140034875:	add    r8,rdx
   140034878:	mov    rdx,QWORD PTR [rcx+0x10]
   14003487c:	sub    rdx,r10
   14003487f:	sar    rdx,0x4
   140034883:	cmp    r8,rdx
   140034886:	jbe    0x1400348b7
   140034888:	mov    rax,rdx
   14003488b:	shr    rax,1
   14003488e:	sub    r9,rax
   140034891:	cmp    r9,rdx
   140034894:	jae    0x1400348a8
   140034896:	xor    edx,edx
   140034898:	cmp    rdx,r8
   14003489b:	cmovb  rdx,r8
   14003489f:	add    rsp,0x28
   1400348a3:	jmp    0x1400333f0
   1400348a8:	add    rdx,rax
   1400348ab:	cmp    rdx,r8
   1400348ae:	cmovb  rdx,r8
   1400348b2:	call   0x1400333f0
   1400348b7:	add    rsp,0x28
   1400348bb:	ret    
   1400348bc:	int3   
   1400348bd:	int3   
   1400348be:	int3   
   1400348bf:	int3   
   1400348c0:	test   r8,r8
   1400348c3:	je     0x140034b43
   1400348c9:	mov    QWORD PTR [rsp+0x10],rdx
   1400348ce:	push   rdi
   1400348cf:	push   r12
   1400348d1:	push   r13
   1400348d3:	push   r14
   1400348d5:	push   r15
   1400348d7:	sub    rsp,0x40
   1400348db:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400348e4:	mov    QWORD PTR [rsp+0x70],rbx
   1400348e9:	mov    QWORD PTR [rsp+0x88],rsi
   1400348f1:	mov    r15,r9
   1400348f4:	mov    rsi,r8
   1400348f7:	mov    rdi,rcx
   1400348fa:	mov    r14,QWORD PTR [rcx+0x8]
   1400348fe:	mov    r9,QWORD PTR [rcx]
   140034901:	mov    rcx,r14
   140034904:	sub    rcx,r9
   140034907:	sar    rcx,1
   14003490a:	movabs r8,0x7fffffffffffffff
   140034914:	mov    rax,r8
   140034917:	sub    rax,rcx
   14003491a:	cmp    rax,rsi
   14003491d:	jae    0x14003492d
   14003491f:	lea    rcx,[rip+0x1c032]        # 0x140050958
   140034926:	call   QWORD PTR [rip+0x14c6c]        # 0x140049598
   14003492c:	int3   
   14003492d:	lea    r10,[rcx+rsi*1]
   140034931:	mov    rbx,QWORD PTR [rdi+0x10]
   140034935:	sub    rbx,r9
   140034938:	sar    rbx,1
   14003493b:	cmp    rbx,r10
   14003493e:	jae    0x140034a30
   140034944:	mov    rax,rbx
   140034947:	shr    rax,1
   14003494a:	sub    r8,rax
   14003494d:	cmp    r8,rbx
   140034950:	jae    0x14003495a
   140034952:	xor    r13d,r13d
   140034955:	mov    ebx,r13d
   140034958:	jmp    0x140034960
   14003495a:	add    rbx,rax
   14003495d:	xor    r13d,r13d
   140034960:	cmp    rbx,r10
   140034963:	cmovb  rbx,r10
   140034967:	mov    rdx,rbx
   14003496a:	lea    rcx,[rdi+0x18]
   14003496e:	call   0x14002dd70
   140034973:	mov    r12,rax
   140034976:	mov    QWORD PTR [rsp+0x80],rax
   14003497e:	mov    r14,QWORD PTR [rsp+0x78]
   140034983:	sub    r14,QWORD PTR [rdi]
   140034986:	sar    r14,1
   140034989:	lea    rcx,[rax+r14*2]
   14003498d:	movzx  edx,BYTE PTR [rsp+0x80]
   140034995:	mov    BYTE PTR [rsp+0x28],dl
   140034999:	mov    QWORD PTR [rsp+0x20],r13
   14003499e:	lea    r9,[rdi+0x18]
   1400349a2:	mov    r8,r15
   1400349a5:	mov    rdx,rsi
   1400349a8:	call   0x140031130
   1400349ad:	movzx  eax,BYTE PTR [rsp+0x80]
   1400349b5:	mov    BYTE PTR [rsp+0x28],al
   1400349b9:	mov    QWORD PTR [rsp+0x20],r13
   1400349be:	lea    r9,[rdi+0x18]
   1400349c2:	mov    r8,r12
   1400349c5:	mov    rdx,QWORD PTR [rsp+0x78]
   1400349ca:	mov    rcx,QWORD PTR [rdi]
   1400349cd:	call   0x140030b00
   1400349d2:	lea    rax,[r14+rsi*1]
   1400349d6:	lea    r8,[r12+rax*2]
   1400349da:	movzx  eax,BYTE PTR [rsp+0x80]
   1400349e2:	mov    BYTE PTR [rsp+0x28],al
   1400349e6:	mov    QWORD PTR [rsp+0x20],r13
   1400349eb:	lea    r9,[rdi+0x18]
   1400349ef:	mov    rdx,QWORD PTR [rdi+0x8]
   1400349f3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400349f8:	call   0x140030b00
   1400349fd:	nop
   1400349fe:	mov    rcx,QWORD PTR [rdi]
   140034a01:	mov    rax,QWORD PTR [rdi+0x8]
   140034a05:	sub    rax,rcx
   140034a08:	sar    rax,1
   140034a0b:	add    rsi,rax
   140034a0e:	test   rcx,rcx
   140034a11:	je     0x140034a18
   140034a13:	call   0x14002b150
   140034a18:	lea    rax,[r12+rbx*2]
   140034a1c:	mov    QWORD PTR [rdi+0x10],rax
   140034a20:	lea    rax,[r12+rsi*2]
   140034a24:	mov    QWORD PTR [rdi+0x8],rax
   140034a28:	mov    QWORD PTR [rdi],r12
   140034a2b:	jmp    0x140034b29
   140034a30:	mov    rax,r14
   140034a33:	sub    rax,rdx
   140034a36:	sar    rax,1
   140034a39:	mov    r8,r14
   140034a3c:	mov    rcx,rdi
   140034a3f:	cmp    rax,rsi
   140034a42:	jae    0x140034ad1
   140034a48:	movzx  ebx,BYTE PTR [r15]
   140034a4c:	mov    BYTE PTR [rsp+0x80],bl
   140034a53:	movzx  r12d,BYTE PTR [r15+0x1]
   140034a58:	mov    BYTE PTR [rsp+0x81],r12b
   140034a60:	lea    r15,[rsi+rsi*1]
   140034a64:	lea    r9,[r15+rdx*1]
   140034a68:	call   0x140031c00
   140034a6d:	nop
   140034a6e:	mov    rcx,QWORD PTR [rdi+0x8]
   140034a72:	mov    rax,rcx
   140034a75:	sub    rax,QWORD PTR [rsp+0x78]
   140034a7a:	sar    rax,1
   140034a7d:	sub    rsi,rax
   140034a80:	lea    r9,[rdi+0x18]
   140034a84:	movzx  eax,BYTE PTR [rsp+0x80]
   140034a8c:	mov    BYTE PTR [rsp+0x28],al
   140034a90:	xor    r13d,r13d
   140034a93:	mov    QWORD PTR [rsp+0x20],r13
   140034a98:	lea    r8,[rsp+0x80]
   140034aa0:	mov    rdx,rsi
   140034aa3:	call   0x140031130
   140034aa8:	nop
   140034aa9:	add    QWORD PTR [rdi+0x8],r15
   140034aad:	mov    rcx,QWORD PTR [rdi+0x8]
   140034ab1:	sub    rcx,r15
   140034ab4:	mov    rax,QWORD PTR [rsp+0x78]
   140034ab9:	cmp    rax,rcx
   140034abc:	je     0x140034b29
   140034abe:	xchg   ax,ax
   140034ac0:	mov    BYTE PTR [rax],bl
   140034ac2:	mov    BYTE PTR [rax+0x1],r12b
   140034ac6:	add    rax,0x2
   140034aca:	cmp    rax,rcx
   140034acd:	jne    0x140034ac0
   140034acf:	jmp    0x140034b29
   140034ad1:	movzx  r12d,BYTE PTR [r15]
   140034ad5:	movzx  r13d,BYTE PTR [r15+0x1]
   140034ada:	add    rsi,rsi
   140034add:	mov    rbx,r14
   140034ae0:	sub    rbx,rsi
   140034ae3:	mov    r9,r14
   140034ae6:	mov    rdx,rbx
   140034ae9:	call   0x140031c00
   140034aee:	mov    QWORD PTR [rdi+0x8],rax
   140034af2:	mov    r8,r14
   140034af5:	mov    rdx,rbx
   140034af8:	mov    rcx,QWORD PTR [rsp+0x78]
   140034afd:	call   0x14002f120
   140034b02:	mov    r11,QWORD PTR [rsp+0x78]
   140034b07:	lea    rax,[rsi+r11*1]
   140034b0b:	cmp    r11,rax
   140034b0e:	je     0x140034b29
   140034b10:	mov    BYTE PTR [r11],r12b
   140034b13:	mov    BYTE PTR [r11+0x1],r13b
   140034b17:	add    r11,0x2
   140034b1b:	mov    rax,QWORD PTR [rsp+0x78]
   140034b20:	lea    rcx,[rsi+rax*1]
   140034b24:	cmp    r11,rcx
   140034b27:	jne    0x140034b10
   140034b29:	mov    rbx,QWORD PTR [rsp+0x70]
   140034b2e:	mov    rsi,QWORD PTR [rsp+0x88]
   140034b36:	add    rsp,0x40
   140034b3a:	pop    r15
   140034b3c:	pop    r14
   140034b3e:	pop    r13
   140034b40:	pop    r12
   140034b42:	pop    rdi
   140034b43:	repz ret 
   140034b45:	int3   
   140034b46:	int3   
   140034b47:	int3   
   140034b48:	int3   
   140034b49:	int3   
   140034b4a:	int3   
   140034b4b:	int3   
   140034b4c:	int3   
   140034b4d:	int3   
   140034b4e:	int3   
   140034b4f:	int3   
   140034b50:	mov    QWORD PTR [rsp+0x18],r8
   140034b55:	push   rsi
   140034b56:	push   r12
   140034b58:	sub    rsp,0x28
   140034b5c:	cmp    BYTE PTR [r8+0x49],0x0
   140034b61:	mov    r12,rdx
   140034b64:	mov    rsi,rcx
   140034b67:	je     0x140034b77
   140034b69:	lea    rcx,[rip+0x1bda0]        # 0x140050910
   140034b70:	call   QWORD PTR [rip+0x14a3a]        # 0x1400495b0
   140034b76:	int3   
   140034b77:	mov    rdx,QWORD PTR [r8+0x10]
   140034b7b:	lea    r9,[r8+0x10]
   140034b7f:	mov    QWORD PTR [rsp+0x48],rbp
   140034b84:	cmp    BYTE PTR [rdx+0x49],0x0
   140034b88:	mov    rbp,r8
   140034b8b:	jne    0x140034bae
   140034b8d:	mov    rax,QWORD PTR [rdx]
   140034b90:	cmp    BYTE PTR [rax+0x49],0x0
   140034b94:	jne    0x140034bd0
   140034b96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140034ba0:	mov    rdx,rax
   140034ba3:	mov    rax,QWORD PTR [rax]
   140034ba6:	cmp    BYTE PTR [rax+0x49],0x0
   140034baa:	je     0x140034ba0
   140034bac:	jmp    0x140034bd0
   140034bae:	mov    rdx,QWORD PTR [r8+0x8]
   140034bb2:	cmp    BYTE PTR [rdx+0x49],0x0
   140034bb6:	jne    0x140034bd0
   140034bb8:	cmp    r8,QWORD PTR [rdx+0x10]
   140034bbc:	jne    0x140034bd0
   140034bbe:	mov    QWORD PTR [rsp+0x50],rdx
   140034bc3:	mov    r8,rdx
   140034bc6:	mov    rdx,QWORD PTR [rdx+0x8]
   140034bca:	cmp    BYTE PTR [rdx+0x49],0x0
   140034bce:	je     0x140034bb8
   140034bd0:	mov    QWORD PTR [rsp+0x50],rdx
   140034bd5:	mov    rcx,QWORD PTR [rbp+0x0]
   140034bd9:	mov    QWORD PTR [rsp+0x40],rbx
   140034bde:	cmp    BYTE PTR [rcx+0x49],0x0
   140034be2:	mov    QWORD PTR [rsp+0x20],rdi
   140034be7:	je     0x140034bee
   140034be9:	mov    rdi,QWORD PTR [r9]
   140034bec:	jmp    0x140034c09
   140034bee:	mov    rax,QWORD PTR [r9]
   140034bf1:	cmp    BYTE PTR [rax+0x49],0x0
   140034bf5:	je     0x140034bfc
   140034bf7:	mov    rdi,rcx
   140034bfa:	jmp    0x140034c09
   140034bfc:	mov    rdi,QWORD PTR [rdx+0x10]
   140034c00:	cmp    rdx,rbp
   140034c03:	jne    0x140034cb3
   140034c09:	cmp    BYTE PTR [rdi+0x49],0x0
   140034c0d:	mov    rbx,QWORD PTR [rbp+0x8]
   140034c11:	jne    0x140034c17
   140034c13:	mov    QWORD PTR [rdi+0x8],rbx
   140034c17:	mov    rax,QWORD PTR [rsi+0x8]
   140034c1b:	cmp    QWORD PTR [rax+0x8],rbp
   140034c1f:	jne    0x140034c27
   140034c21:	mov    QWORD PTR [rax+0x8],rdi
   140034c25:	jmp    0x140034c35
   140034c27:	cmp    QWORD PTR [rbx],rbp
   140034c2a:	jne    0x140034c31
   140034c2c:	mov    QWORD PTR [rbx],rdi
   140034c2f:	jmp    0x140034c35
   140034c31:	mov    QWORD PTR [rbx+0x10],rdi
   140034c35:	mov    rdx,QWORD PTR [rsi+0x8]
   140034c39:	cmp    QWORD PTR [rdx],rbp
   140034c3c:	jne    0x140034c6f
   140034c3e:	cmp    BYTE PTR [rdi+0x49],0x0
   140034c42:	je     0x140034c49
   140034c44:	mov    rcx,rbx
   140034c47:	jmp    0x140034c6c
   140034c49:	mov    rax,QWORD PTR [rdi]
   140034c4c:	mov    rcx,rdi
   140034c4f:	cmp    BYTE PTR [rax+0x49],0x0
   140034c53:	jne    0x140034c6c
   140034c55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140034c60:	mov    rcx,rax
   140034c63:	mov    rax,QWORD PTR [rax]
   140034c66:	cmp    BYTE PTR [rax+0x49],0x0
   140034c6a:	je     0x140034c60
   140034c6c:	mov    QWORD PTR [rdx],rcx
   140034c6f:	mov    rdx,QWORD PTR [rsi+0x8]
   140034c73:	cmp    QWORD PTR [rdx+0x10],rbp
   140034c77:	jne    0x140034d1f
   140034c7d:	cmp    BYTE PTR [rdi+0x49],0x0
   140034c81:	je     0x140034c8f
   140034c83:	mov    rcx,rbx
   140034c86:	mov    QWORD PTR [rdx+0x10],rbx
   140034c8a:	jmp    0x140034d1f
   140034c8f:	mov    rax,QWORD PTR [rdi+0x10]
   140034c93:	mov    rcx,rdi
   140034c96:	cmp    BYTE PTR [rax+0x49],0x0
   140034c9a:	jne    0x140034cad
   140034c9c:	nop    DWORD PTR [rax+0x0]
   140034ca0:	mov    rcx,rax
   140034ca3:	mov    rax,QWORD PTR [rax+0x10]
   140034ca7:	cmp    BYTE PTR [rax+0x49],0x0
   140034cab:	je     0x140034ca0
   140034cad:	mov    QWORD PTR [rdx+0x10],rcx
   140034cb1:	jmp    0x140034d1f
   140034cb3:	mov    QWORD PTR [rcx+0x8],rdx
   140034cb7:	mov    rax,QWORD PTR [rbp+0x0]
   140034cbb:	mov    QWORD PTR [rdx],rax
   140034cbe:	cmp    rdx,QWORD PTR [r9]
   140034cc1:	jne    0x140034cc8
   140034cc3:	mov    rbx,rdx
   140034cc6:	jmp    0x140034ce7
   140034cc8:	cmp    BYTE PTR [rdi+0x49],0x0
   140034ccc:	mov    rbx,QWORD PTR [rdx+0x8]
   140034cd0:	jne    0x140034cd6
   140034cd2:	mov    QWORD PTR [rdi+0x8],rbx
   140034cd6:	mov    QWORD PTR [rbx],rdi
   140034cd9:	mov    rax,QWORD PTR [r9]
   140034cdc:	mov    QWORD PTR [rdx+0x10],rax
   140034ce0:	mov    rax,QWORD PTR [r9]
   140034ce3:	mov    QWORD PTR [rax+0x8],rdx
   140034ce7:	mov    rax,QWORD PTR [rsi+0x8]
   140034ceb:	cmp    QWORD PTR [rax+0x8],rbp
   140034cef:	jne    0x140034cf7
   140034cf1:	mov    QWORD PTR [rax+0x8],rdx
   140034cf5:	jmp    0x140034d09
   140034cf7:	mov    rax,QWORD PTR [rbp+0x8]
   140034cfb:	cmp    QWORD PTR [rax],rbp
   140034cfe:	jne    0x140034d05
   140034d00:	mov    QWORD PTR [rax],rdx
   140034d03:	jmp    0x140034d09
   140034d05:	mov    QWORD PTR [rax+0x10],rdx
   140034d09:	mov    rax,QWORD PTR [rbp+0x8]
   140034d0d:	mov    QWORD PTR [rdx+0x8],rax
   140034d11:	movzx  eax,BYTE PTR [rbp+0x48]
   140034d15:	movzx  ecx,BYTE PTR [rdx+0x48]
   140034d19:	mov    BYTE PTR [rdx+0x48],al
   140034d1c:	mov    BYTE PTR [rbp+0x48],cl
   140034d1f:	cmp    BYTE PTR [rbp+0x48],0x1
   140034d23:	jne    0x140034e6f
   140034d29:	mov    rax,QWORD PTR [rsi+0x8]
   140034d2d:	cmp    rdi,QWORD PTR [rax+0x8]
   140034d31:	je     0x140034e6b
   140034d37:	nop    WORD PTR [rax+rax*1+0x0]
   140034d40:	cmp    BYTE PTR [rdi+0x48],0x1
   140034d44:	jne    0x140034e6b
   140034d4a:	mov    rcx,QWORD PTR [rbx]
   140034d4d:	cmp    rdi,rcx
   140034d50:	jne    0x140034ddb
   140034d56:	mov    rcx,QWORD PTR [rbx+0x10]
   140034d5a:	cmp    BYTE PTR [rcx+0x48],0x0
   140034d5e:	jne    0x140034d77
   140034d60:	mov    BYTE PTR [rcx+0x48],0x1
   140034d64:	mov    rdx,rbx
   140034d67:	mov    rcx,rsi
   140034d6a:	mov    BYTE PTR [rbx+0x48],0x0
   140034d6e:	call   0x14002dde0
   140034d73:	mov    rcx,QWORD PTR [rbx+0x10]
   140034d77:	cmp    BYTE PTR [rcx+0x49],0x0
   140034d7b:	jne    0x140034e14
   140034d81:	mov    rax,QWORD PTR [rcx]
   140034d84:	cmp    BYTE PTR [rax+0x48],0x1
   140034d88:	jne    0x140034d94
   140034d8a:	mov    rax,QWORD PTR [rcx+0x10]
   140034d8e:	cmp    BYTE PTR [rax+0x48],0x1
   140034d92:	je     0x140034e10
   140034d94:	mov    rax,QWORD PTR [rcx+0x10]
   140034d98:	cmp    BYTE PTR [rax+0x48],0x1
   140034d9c:	jne    0x140034db8
   140034d9e:	mov    rax,QWORD PTR [rcx]
   140034da1:	mov    rdx,rcx
   140034da4:	mov    BYTE PTR [rax+0x48],0x1
   140034da8:	mov    BYTE PTR [rcx+0x48],0x0
   140034dac:	mov    rcx,rsi
   140034daf:	call   0x14002de40
   140034db4:	mov    rcx,QWORD PTR [rbx+0x10]
   140034db8:	movzx  eax,BYTE PTR [rbx+0x48]
   140034dbc:	mov    rdx,rbx
   140034dbf:	mov    BYTE PTR [rcx+0x48],al
   140034dc2:	mov    BYTE PTR [rbx+0x48],0x1
   140034dc6:	mov    rax,QWORD PTR [rcx+0x10]
   140034dca:	mov    rcx,rsi
   140034dcd:	mov    BYTE PTR [rax+0x48],0x1
   140034dd1:	call   0x14002dde0
   140034dd6:	jmp    0x140034e6b
   140034ddb:	cmp    BYTE PTR [rcx+0x48],0x0
   140034ddf:	jne    0x140034df7
   140034de1:	mov    BYTE PTR [rcx+0x48],0x1
   140034de5:	mov    rdx,rbx
   140034de8:	mov    rcx,rsi
   140034deb:	mov    BYTE PTR [rbx+0x48],0x0
   140034def:	call   0x14002de40
   140034df4:	mov    rcx,QWORD PTR [rbx]
   140034df7:	cmp    BYTE PTR [rcx+0x49],0x0
   140034dfb:	jne    0x140034e14
   140034dfd:	mov    rax,QWORD PTR [rcx+0x10]
   140034e01:	cmp    BYTE PTR [rax+0x48],0x1
   140034e05:	jne    0x140034e2b
   140034e07:	mov    rax,QWORD PTR [rcx]
   140034e0a:	cmp    BYTE PTR [rax+0x48],0x1
   140034e0e:	jne    0x140034e2b
   140034e10:	mov    BYTE PTR [rcx+0x48],0x0
   140034e14:	mov    rax,QWORD PTR [rsi+0x8]
   140034e18:	mov    rdi,rbx
   140034e1b:	mov    rbx,QWORD PTR [rbx+0x8]
   140034e1f:	cmp    rdi,QWORD PTR [rax+0x8]
   140034e23:	jne    0x140034d40
   140034e29:	jmp    0x140034e6b
   140034e2b:	mov    rax,QWORD PTR [rcx]
   140034e2e:	cmp    BYTE PTR [rax+0x48],0x1
   140034e32:	jne    0x140034e4e
   140034e34:	mov    rax,QWORD PTR [rcx+0x10]
   140034e38:	mov    rdx,rcx
   140034e3b:	mov    BYTE PTR [rax+0x48],0x1
   140034e3f:	mov    BYTE PTR [rcx+0x48],0x0
   140034e43:	mov    rcx,rsi
   140034e46:	call   0x14002dde0
   140034e4b:	mov    rcx,QWORD PTR [rbx]
   140034e4e:	movzx  eax,BYTE PTR [rbx+0x48]
   140034e52:	mov    rdx,rbx
   140034e55:	mov    BYTE PTR [rcx+0x48],al
   140034e58:	mov    BYTE PTR [rbx+0x48],0x1
   140034e5c:	mov    rax,QWORD PTR [rcx]
   140034e5f:	mov    rcx,rsi
   140034e62:	mov    BYTE PTR [rax+0x48],0x1
   140034e66:	call   0x14002de40
   140034e6b:	mov    BYTE PTR [rdi+0x48],0x1
   140034e6f:	cmp    QWORD PTR [rbp+0x38],0x10
   140034e74:	mov    rdi,QWORD PTR [rsp+0x20]
   140034e79:	mov    rbx,QWORD PTR [rsp+0x40]
   140034e7e:	jb     0x140034e89
   140034e80:	mov    rcx,QWORD PTR [rbp+0x20]
   140034e84:	call   0x14002b150
   140034e89:	mov    QWORD PTR [rbp+0x38],0xf
   140034e91:	mov    QWORD PTR [rbp+0x30],0x0
   140034e99:	mov    rcx,rbp
   140034e9c:	mov    BYTE PTR [rbp+0x20],0x0
   140034ea0:	call   0x14002b150
   140034ea5:	mov    rax,QWORD PTR [rsi+0x10]
   140034ea9:	mov    rbp,QWORD PTR [rsp+0x48]
   140034eae:	test   rax,rax
   140034eb1:	je     0x140034eba
   140034eb3:	dec    rax
   140034eb6:	mov    QWORD PTR [rsi+0x10],rax
   140034eba:	mov    rax,QWORD PTR [rsp+0x50]
   140034ebf:	mov    QWORD PTR [r12],rax
   140034ec3:	mov    rax,r12
   140034ec6:	add    rsp,0x28
   140034eca:	pop    r12
   140034ecc:	pop    rsi
   140034ecd:	ret    
   140034ece:	int3   
   140034ecf:	int3   
   140034ed0:	mov    QWORD PTR [rsp+0x18],r8
   140034ed5:	push   rsi
   140034ed6:	push   r12
   140034ed8:	sub    rsp,0x28
   140034edc:	cmp    BYTE PTR [r8+0x49],0x0
   140034ee1:	mov    r12,rdx
   140034ee4:	mov    rsi,rcx
   140034ee7:	je     0x140034ef7
   140034ee9:	lea    rcx,[rip+0x1ba20]        # 0x140050910
   140034ef0:	call   QWORD PTR [rip+0x146ba]        # 0x1400495b0
   140034ef6:	int3   
   140034ef7:	mov    rdx,QWORD PTR [r8+0x10]
   140034efb:	lea    r9,[r8+0x10]
   140034eff:	mov    QWORD PTR [rsp+0x48],rbp
   140034f04:	cmp    BYTE PTR [rdx+0x49],0x0
   140034f08:	mov    rbp,r8
   140034f0b:	jne    0x140034f2e
   140034f0d:	mov    rax,QWORD PTR [rdx]
   140034f10:	cmp    BYTE PTR [rax+0x49],0x0
   140034f14:	jne    0x140034f50
   140034f16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140034f20:	mov    rdx,rax
   140034f23:	mov    rax,QWORD PTR [rax]
   140034f26:	cmp    BYTE PTR [rax+0x49],0x0
   140034f2a:	je     0x140034f20
   140034f2c:	jmp    0x140034f50
   140034f2e:	mov    rdx,QWORD PTR [r8+0x8]
   140034f32:	cmp    BYTE PTR [rdx+0x49],0x0
   140034f36:	jne    0x140034f50
   140034f38:	cmp    r8,QWORD PTR [rdx+0x10]
   140034f3c:	jne    0x140034f50
   140034f3e:	mov    QWORD PTR [rsp+0x50],rdx
   140034f43:	mov    r8,rdx
   140034f46:	mov    rdx,QWORD PTR [rdx+0x8]
   140034f4a:	cmp    BYTE PTR [rdx+0x49],0x0
   140034f4e:	je     0x140034f38
   140034f50:	mov    QWORD PTR [rsp+0x50],rdx
   140034f55:	mov    rcx,QWORD PTR [rbp+0x0]
   140034f59:	mov    QWORD PTR [rsp+0x40],rbx
   140034f5e:	cmp    BYTE PTR [rcx+0x49],0x0
   140034f62:	mov    QWORD PTR [rsp+0x20],rdi
   140034f67:	je     0x140034f6e
   140034f69:	mov    rdi,QWORD PTR [r9]
   140034f6c:	jmp    0x140034f89
   140034f6e:	mov    rax,QWORD PTR [r9]
   140034f71:	cmp    BYTE PTR [rax+0x49],0x0
   140034f75:	je     0x140034f7c
   140034f77:	mov    rdi,rcx
   140034f7a:	jmp    0x140034f89
   140034f7c:	mov    rdi,QWORD PTR [rdx+0x10]
   140034f80:	cmp    rdx,rbp
   140034f83:	jne    0x140035033
   140034f89:	cmp    BYTE PTR [rdi+0x49],0x0
   140034f8d:	mov    rbx,QWORD PTR [rbp+0x8]
   140034f91:	jne    0x140034f97
   140034f93:	mov    QWORD PTR [rdi+0x8],rbx
   140034f97:	mov    rax,QWORD PTR [rsi+0x8]
   140034f9b:	cmp    QWORD PTR [rax+0x8],rbp
   140034f9f:	jne    0x140034fa7
   140034fa1:	mov    QWORD PTR [rax+0x8],rdi
   140034fa5:	jmp    0x140034fb5
   140034fa7:	cmp    QWORD PTR [rbx],rbp
   140034faa:	jne    0x140034fb1
   140034fac:	mov    QWORD PTR [rbx],rdi
   140034faf:	jmp    0x140034fb5
   140034fb1:	mov    QWORD PTR [rbx+0x10],rdi
   140034fb5:	mov    rdx,QWORD PTR [rsi+0x8]
   140034fb9:	cmp    QWORD PTR [rdx],rbp
   140034fbc:	jne    0x140034fef
   140034fbe:	cmp    BYTE PTR [rdi+0x49],0x0
   140034fc2:	je     0x140034fc9
   140034fc4:	mov    rcx,rbx
   140034fc7:	jmp    0x140034fec
   140034fc9:	mov    rax,QWORD PTR [rdi]
   140034fcc:	mov    rcx,rdi
   140034fcf:	cmp    BYTE PTR [rax+0x49],0x0
   140034fd3:	jne    0x140034fec
   140034fd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140034fe0:	mov    rcx,rax
   140034fe3:	mov    rax,QWORD PTR [rax]
   140034fe6:	cmp    BYTE PTR [rax+0x49],0x0
   140034fea:	je     0x140034fe0
   140034fec:	mov    QWORD PTR [rdx],rcx
   140034fef:	mov    rdx,QWORD PTR [rsi+0x8]
   140034ff3:	cmp    QWORD PTR [rdx+0x10],rbp
   140034ff7:	jne    0x14003509f
   140034ffd:	cmp    BYTE PTR [rdi+0x49],0x0
   140035001:	je     0x14003500f
   140035003:	mov    rcx,rbx
   140035006:	mov    QWORD PTR [rdx+0x10],rbx
   14003500a:	jmp    0x14003509f
   14003500f:	mov    rax,QWORD PTR [rdi+0x10]
   140035013:	mov    rcx,rdi
   140035016:	cmp    BYTE PTR [rax+0x49],0x0
   14003501a:	jne    0x14003502d
   14003501c:	nop    DWORD PTR [rax+0x0]
   140035020:	mov    rcx,rax
   140035023:	mov    rax,QWORD PTR [rax+0x10]
   140035027:	cmp    BYTE PTR [rax+0x49],0x0
   14003502b:	je     0x140035020
   14003502d:	mov    QWORD PTR [rdx+0x10],rcx
   140035031:	jmp    0x14003509f
   140035033:	mov    QWORD PTR [rcx+0x8],rdx
   140035037:	mov    rax,QWORD PTR [rbp+0x0]
   14003503b:	mov    QWORD PTR [rdx],rax
   14003503e:	cmp    rdx,QWORD PTR [r9]
   140035041:	jne    0x140035048
   140035043:	mov    rbx,rdx
   140035046:	jmp    0x140035067
   140035048:	cmp    BYTE PTR [rdi+0x49],0x0
   14003504c:	mov    rbx,QWORD PTR [rdx+0x8]
   140035050:	jne    0x140035056
   140035052:	mov    QWORD PTR [rdi+0x8],rbx
   140035056:	mov    QWORD PTR [rbx],rdi
   140035059:	mov    rax,QWORD PTR [r9]
   14003505c:	mov    QWORD PTR [rdx+0x10],rax
   140035060:	mov    rax,QWORD PTR [r9]
   140035063:	mov    QWORD PTR [rax+0x8],rdx
   140035067:	mov    rax,QWORD PTR [rsi+0x8]
   14003506b:	cmp    QWORD PTR [rax+0x8],rbp
   14003506f:	jne    0x140035077
   140035071:	mov    QWORD PTR [rax+0x8],rdx
   140035075:	jmp    0x140035089
   140035077:	mov    rax,QWORD PTR [rbp+0x8]
   14003507b:	cmp    QWORD PTR [rax],rbp
   14003507e:	jne    0x140035085
   140035080:	mov    QWORD PTR [rax],rdx
   140035083:	jmp    0x140035089
   140035085:	mov    QWORD PTR [rax+0x10],rdx
   140035089:	mov    rax,QWORD PTR [rbp+0x8]
   14003508d:	mov    QWORD PTR [rdx+0x8],rax
   140035091:	movzx  eax,BYTE PTR [rbp+0x48]
   140035095:	movzx  ecx,BYTE PTR [rdx+0x48]
   140035099:	mov    BYTE PTR [rdx+0x48],al
   14003509c:	mov    BYTE PTR [rbp+0x48],cl
   14003509f:	cmp    BYTE PTR [rbp+0x48],0x1
   1400350a3:	jne    0x1400351ef
   1400350a9:	mov    rax,QWORD PTR [rsi+0x8]
   1400350ad:	cmp    rdi,QWORD PTR [rax+0x8]
   1400350b1:	je     0x1400351eb
   1400350b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400350c0:	cmp    BYTE PTR [rdi+0x48],0x1
   1400350c4:	jne    0x1400351eb
   1400350ca:	mov    rcx,QWORD PTR [rbx]
   1400350cd:	cmp    rdi,rcx
   1400350d0:	jne    0x14003515b
   1400350d6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400350da:	cmp    BYTE PTR [rcx+0x48],0x0
   1400350de:	jne    0x1400350f7
   1400350e0:	mov    BYTE PTR [rcx+0x48],0x1
   1400350e4:	mov    rdx,rbx
   1400350e7:	mov    rcx,rsi
   1400350ea:	mov    BYTE PTR [rbx+0x48],0x0
   1400350ee:	call   0x14002dde0
   1400350f3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400350f7:	cmp    BYTE PTR [rcx+0x49],0x0
   1400350fb:	jne    0x140035194
   140035101:	mov    rax,QWORD PTR [rcx]
   140035104:	cmp    BYTE PTR [rax+0x48],0x1
   140035108:	jne    0x140035114
   14003510a:	mov    rax,QWORD PTR [rcx+0x10]
   14003510e:	cmp    BYTE PTR [rax+0x48],0x1
   140035112:	je     0x140035190
   140035114:	mov    rax,QWORD PTR [rcx+0x10]
   140035118:	cmp    BYTE PTR [rax+0x48],0x1
   14003511c:	jne    0x140035138
   14003511e:	mov    rax,QWORD PTR [rcx]
   140035121:	mov    rdx,rcx
   140035124:	mov    BYTE PTR [rax+0x48],0x1
   140035128:	mov    BYTE PTR [rcx+0x48],0x0
   14003512c:	mov    rcx,rsi
   14003512f:	call   0x14002de40
   140035134:	mov    rcx,QWORD PTR [rbx+0x10]
   140035138:	movzx  eax,BYTE PTR [rbx+0x48]
   14003513c:	mov    rdx,rbx
   14003513f:	mov    BYTE PTR [rcx+0x48],al
   140035142:	mov    BYTE PTR [rbx+0x48],0x1
   140035146:	mov    rax,QWORD PTR [rcx+0x10]
   14003514a:	mov    rcx,rsi
   14003514d:	mov    BYTE PTR [rax+0x48],0x1
   140035151:	call   0x14002dde0
   140035156:	jmp    0x1400351eb
   14003515b:	cmp    BYTE PTR [rcx+0x48],0x0
   14003515f:	jne    0x140035177
   140035161:	mov    BYTE PTR [rcx+0x48],0x1
   140035165:	mov    rdx,rbx
   140035168:	mov    rcx,rsi
   14003516b:	mov    BYTE PTR [rbx+0x48],0x0
   14003516f:	call   0x14002de40
   140035174:	mov    rcx,QWORD PTR [rbx]
   140035177:	cmp    BYTE PTR [rcx+0x49],0x0
   14003517b:	jne    0x140035194
   14003517d:	mov    rax,QWORD PTR [rcx+0x10]
   140035181:	cmp    BYTE PTR [rax+0x48],0x1
   140035185:	jne    0x1400351ab
   140035187:	mov    rax,QWORD PTR [rcx]
   14003518a:	cmp    BYTE PTR [rax+0x48],0x1
   14003518e:	jne    0x1400351ab
   140035190:	mov    BYTE PTR [rcx+0x48],0x0
   140035194:	mov    rax,QWORD PTR [rsi+0x8]
   140035198:	mov    rdi,rbx
   14003519b:	mov    rbx,QWORD PTR [rbx+0x8]
   14003519f:	cmp    rdi,QWORD PTR [rax+0x8]
   1400351a3:	jne    0x1400350c0
   1400351a9:	jmp    0x1400351eb
   1400351ab:	mov    rax,QWORD PTR [rcx]
   1400351ae:	cmp    BYTE PTR [rax+0x48],0x1
   1400351b2:	jne    0x1400351ce
   1400351b4:	mov    rax,QWORD PTR [rcx+0x10]
   1400351b8:	mov    rdx,rcx
   1400351bb:	mov    BYTE PTR [rax+0x48],0x1
   1400351bf:	mov    BYTE PTR [rcx+0x48],0x0
   1400351c3:	mov    rcx,rsi
   1400351c6:	call   0x14002dde0
   1400351cb:	mov    rcx,QWORD PTR [rbx]
   1400351ce:	movzx  eax,BYTE PTR [rbx+0x48]
   1400351d2:	mov    rdx,rbx
   1400351d5:	mov    BYTE PTR [rcx+0x48],al
   1400351d8:	mov    BYTE PTR [rbx+0x48],0x1
   1400351dc:	mov    rax,QWORD PTR [rcx]
   1400351df:	mov    rcx,rsi
   1400351e2:	mov    BYTE PTR [rax+0x48],0x1
   1400351e6:	call   0x14002de40
   1400351eb:	mov    BYTE PTR [rdi+0x48],0x1
   1400351ef:	cmp    QWORD PTR [rbp+0x30],0x10
   1400351f4:	mov    rdi,QWORD PTR [rsp+0x20]
   1400351f9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400351fe:	jb     0x140035209
   140035200:	mov    rcx,QWORD PTR [rbp+0x18]
   140035204:	call   0x14002b150
   140035209:	mov    QWORD PTR [rbp+0x30],0xf
   140035211:	mov    QWORD PTR [rbp+0x28],0x0
   140035219:	mov    rcx,rbp
   14003521c:	mov    BYTE PTR [rbp+0x18],0x0
   140035220:	call   0x14002b150
   140035225:	mov    rax,QWORD PTR [rsi+0x10]
   140035229:	mov    rbp,QWORD PTR [rsp+0x48]
   14003522e:	test   rax,rax
   140035231:	je     0x14003523a
   140035233:	dec    rax
   140035236:	mov    QWORD PTR [rsi+0x10],rax
   14003523a:	mov    rax,QWORD PTR [rsp+0x50]
   14003523f:	mov    QWORD PTR [r12],rax
   140035243:	mov    rax,r12
   140035246:	add    rsp,0x28
   14003524a:	pop    r12
   14003524c:	pop    rsi
   14003524d:	ret    
   14003524e:	int3   
   14003524f:	int3   
   140035250:	mov    QWORD PTR [rsp+0x10],rbx
   140035255:	mov    QWORD PTR [rsp+0x18],rsi
   14003525a:	push   rdi
   14003525b:	sub    rsp,0x20
   14003525f:	cmp    BYTE PTR [rdx+0x49],0x0
   140035263:	mov    rbx,rdx
   140035266:	mov    rsi,rcx
   140035269:	mov    rdi,rdx
   14003526c:	jne    0x1400352c5
   14003526e:	mov    QWORD PTR [rsp+0x30],rbp
   140035273:	xor    ebp,ebp
   140035275:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140035280:	mov    rdx,QWORD PTR [rdi+0x10]
   140035284:	mov    rcx,rsi
   140035287:	call   0x140035250
   14003528c:	cmp    QWORD PTR [rbx+0x38],0x10
   140035291:	mov    rdi,QWORD PTR [rdi]
   140035294:	jb     0x14003529f
   140035296:	mov    rcx,QWORD PTR [rbx+0x20]
   14003529a:	call   0x14002b150
   14003529f:	mov    QWORD PTR [rbx+0x38],0xf
   1400352a7:	mov    QWORD PTR [rbx+0x30],rbp
   1400352ab:	mov    rcx,rbx
   1400352ae:	mov    BYTE PTR [rbx+0x20],bpl
   1400352b2:	call   0x14002b150
   1400352b7:	mov    rbx,rdi
   1400352ba:	cmp    BYTE PTR [rdi+0x49],bpl
   1400352be:	je     0x140035280
   1400352c0:	mov    rbp,QWORD PTR [rsp+0x30]
   1400352c5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400352ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400352cf:	add    rsp,0x20
   1400352d3:	pop    rdi
   1400352d4:	ret    
   1400352d5:	int3   
   1400352d6:	int3   
   1400352d7:	int3   
   1400352d8:	int3   
   1400352d9:	int3   
   1400352da:	int3   
   1400352db:	int3   
   1400352dc:	int3   
   1400352dd:	int3   
   1400352de:	int3   
   1400352df:	int3   
   1400352e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400352e5:	push   rbx
   1400352e6:	sub    rsp,0x40
   1400352ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400352f3:	mov    rbx,rcx
   1400352f6:	mov    DWORD PTR [rsp+0x58],0x0
   1400352fe:	mov    r8b,0x1
   140035301:	lea    rdx,[rip+0x353f8]        # 0x14006a700
   140035308:	lea    rcx,[rsp+0x28]
   14003530d:	call   0x140043240
   140035312:	nop
   140035313:	mov    eax,DWORD PTR [rip+0x35417]        # 0x14006a730
   140035319:	test   al,0x1
   14003531b:	jne    0x140035350
   14003531d:	or     eax,0x1
   140035320:	mov    DWORD PTR [rip+0x3540a],eax        # 0x14006a730
   140035326:	mov    QWORD PTR [rip+0x353ef],0xf        # 0x14006a720
   140035331:	mov    QWORD PTR [rip+0x353dc],0x0        # 0x14006a718
   14003533c:	mov    BYTE PTR [rip+0x353c5],0x0        # 0x14006a708
   140035343:	lea    rcx,[rip+0x13446]        # 0x140048790
   14003534a:	call   0x14002b278
   14003534f:	nop
   140035350:	mov    QWORD PTR [rbx+0x18],0xf
   140035358:	mov    QWORD PTR [rbx+0x10],0x0
   140035360:	mov    BYTE PTR [rbx],0x0
   140035363:	or     r9,0xffffffffffffffff
   140035367:	xor    r8d,r8d
   14003536a:	lea    rdx,[rip+0x35397]        # 0x14006a708
   140035371:	mov    rcx,rbx
   140035374:	call   0x1400048b8
   140035379:	mov    DWORD PTR [rsp+0x58],0x1
   140035381:	lea    rcx,[rsp+0x28]
   140035386:	call   0x140043290
   14003538b:	mov    rax,rbx
   14003538e:	add    rsp,0x40
   140035392:	pop    rbx
   140035393:	ret    
   140035394:	int3   
   140035395:	int3   
   140035396:	int3   
   140035397:	int3   
   140035398:	int3   
   140035399:	int3   
   14003539a:	int3   
   14003539b:	int3   
   14003539c:	int3   
   14003539d:	int3   
   14003539e:	int3   
   14003539f:	int3   
   1400353a0:	sub    rsp,0x28
   1400353a4:	xor    r10d,r10d
   1400353a7:	mov    QWORD PTR [rsp+0x38],rbx
   1400353ac:	mov    DWORD PTR [rsp+0x30],r9d
   1400353b1:	mov    rbx,rcx
   1400353b4:	cmp    rdx,r8
   1400353b7:	je     0x1400353e6
   1400353b9:	mov    r11d,0x9e3779b9
   1400353bf:	nop
   1400353c0:	movsx  rcx,BYTE PTR [rdx]
   1400353c4:	mov    r9,r10
   1400353c7:	mov    rax,r10
   1400353ca:	shr    rax,0x2
   1400353ce:	shl    r9,0x6
   1400353d2:	inc    rdx
   1400353d5:	add    rax,r9
   1400353d8:	add    rax,r11
   1400353db:	add    rcx,rax
   1400353de:	xor    r10,rcx
   1400353e1:	cmp    rdx,r8
   1400353e4:	jne    0x1400353c0
   1400353e6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400353ea:	movabs rax,0x200009c482fb3f8b
   1400353f4:	mul    r10
   1400353f7:	lea    rax,[rsp+0x30]
   1400353fc:	shr    rdx,0x1c
   140035400:	imul   edx,edx,0x7fffd8ee
   140035406:	sub    r10d,edx
   140035409:	add    r10d,0x2710
   140035410:	mov    DWORD PTR [rsp+0x34],r10d
   140035415:	cmp    rax,rcx
   140035418:	jae    0x140035465
   14003541a:	mov    rax,QWORD PTR [rbx]
   14003541d:	lea    rdx,[rsp+0x30]
   140035422:	cmp    rax,rdx
   140035425:	ja     0x140035465
   140035427:	mov    QWORD PTR [rsp+0x20],rdi
   14003542c:	lea    rdi,[rsp+0x30]
   140035431:	sub    rdi,rax
   140035434:	sar    rdi,0x3
   140035438:	cmp    rcx,QWORD PTR [rbx+0x10]
   14003543c:	jne    0x14003544b
   14003543e:	mov    edx,0x1
   140035443:	mov    rcx,rbx
   140035446:	call   0x140031c40
   14003544b:	mov    rdx,QWORD PTR [rbx+0x8]
   14003544f:	test   rdx,rdx
   140035452:	je     0x14003545e
   140035454:	mov    rax,QWORD PTR [rbx]
   140035457:	mov    rcx,QWORD PTR [rax+rdi*8]
   14003545b:	mov    QWORD PTR [rdx],rcx
   14003545e:	mov    rdi,QWORD PTR [rsp+0x20]
   140035463:	jmp    0x140035489
   140035465:	cmp    rcx,QWORD PTR [rbx+0x10]
   140035469:	jne    0x140035478
   14003546b:	mov    edx,0x1
   140035470:	mov    rcx,rbx
   140035473:	call   0x140031c40
   140035478:	mov    rcx,QWORD PTR [rbx+0x8]
   14003547c:	test   rcx,rcx
   14003547f:	je     0x140035489
   140035481:	mov    rax,QWORD PTR [rsp+0x30]
   140035486:	mov    QWORD PTR [rcx],rax
   140035489:	add    QWORD PTR [rbx+0x8],0x8
   14003548e:	mov    rcx,QWORD PTR [rbx]
   140035491:	mov    rax,QWORD PTR [rbx+0x8]
   140035495:	mov    rbx,QWORD PTR [rsp+0x38]
   14003549a:	cmp    rcx,rax
   14003549d:	je     0x1400354e2
   14003549f:	add    rax,0xfffffffffffffff8
   1400354a3:	cmp    rax,rcx
   1400354a6:	je     0x1400354e2
   1400354a8:	lea    r9,[rax-0x4]
   1400354ac:	nop    DWORD PTR [rax+0x0]
   1400354b0:	mov    edx,DWORD PTR [r9]
   1400354b3:	cmp    DWORD PTR [r9+0x8],edx
   1400354b7:	jge    0x1400354e2
   1400354b9:	mov    edx,DWORD PTR [rax]
   1400354bb:	mov    r8d,DWORD PTR [r9-0x4]
   1400354bf:	sub    rax,0x8
   1400354c3:	mov    DWORD PTR [r9-0x4],edx
   1400354c7:	mov    DWORD PTR [rax+0x8],r8d
   1400354cb:	mov    edx,DWORD PTR [r9+0x8]
   1400354cf:	mov    r8d,DWORD PTR [r9]
   1400354d2:	mov    DWORD PTR [r9],edx
   1400354d5:	sub    r9,0x8
   1400354d9:	mov    DWORD PTR [r9+0x10],r8d
   1400354dd:	cmp    rax,rcx
   1400354e0:	jne    0x1400354b0
   1400354e2:	add    rsp,0x28
   1400354e6:	ret    
   1400354e7:	int3   
   1400354e8:	int3   
   1400354e9:	int3   
   1400354ea:	int3   
   1400354eb:	int3   
   1400354ec:	int3   
   1400354ed:	int3   
   1400354ee:	int3   
   1400354ef:	int3   
   1400354f0:	rex push rbp
   1400354f2:	push   rbx
   1400354f3:	push   rsi
   1400354f4:	push   rdi
   1400354f5:	push   r12
   1400354f7:	push   r13
   1400354f9:	push   r14
   1400354fb:	lea    rbp,[rsp-0x27]
   140035500:	sub    rsp,0xa0
   140035507:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14003550f:	mov    rax,QWORD PTR [rip+0x32cda]        # 0x1400681f0
   140035516:	xor    rax,rsp
   140035519:	mov    QWORD PTR [rbp+0x17],rax
   14003551d:	mov    r12,r9
   140035520:	mov    rsi,r8
   140035523:	mov    rdi,rdx
   140035526:	mov    r13,rcx
   140035529:	xor    r14d,r14d
   14003552c:	mov    DWORD PTR [rbp-0x51],r14d
   140035530:	cmp    QWORD PTR [rcx+0x458],r14
   140035537:	je     0x1400355fb
   14003553d:	mov    QWORD PTR [rbp+0x7],0xf
   140035545:	mov    QWORD PTR [rbp-0x1],r14
   140035549:	mov    BYTE PTR [rbp-0x11],r14b
   14003554d:	cmp    r8,r9
   140035550:	je     0x140035565
   140035552:	mov    r8,r9
   140035555:	sub    r8,rsi
   140035558:	mov    rdx,rsi
   14003555b:	lea    rcx,[rbp-0x11]
   14003555f:	call   0x140005154
   140035564:	nop
   140035565:	lea    rdx,[rbp-0x11]
   140035569:	lea    rcx,[r13+0x448]
   140035570:	call   0x1400053f0
   140035575:	mov    QWORD PTR [rbp-0x51],rax
   140035579:	cmp    rax,QWORD PTR [r13+0x450]
   140035580:	je     0x140035599
   140035582:	lea    rdx,[rax+0x18]
   140035586:	lea    rcx,[rbp-0x11]
   14003558a:	call   0x140002ec4
   14003558f:	test   eax,eax
   140035591:	js     0x140035599
   140035593:	lea    rbx,[rbp-0x51]
   140035597:	jmp    0x1400355a8
   140035599:	mov    rax,QWORD PTR [r13+0x450]
   1400355a0:	mov    QWORD PTR [rbp-0x49],rax
   1400355a4:	lea    rbx,[rbp-0x49]
   1400355a8:	mov    rbx,QWORD PTR [rbx]
   1400355ab:	cmp    QWORD PTR [rbp+0x7],0x10
   1400355b0:	jb     0x1400355bb
   1400355b2:	mov    rcx,QWORD PTR [rbp-0x11]
   1400355b6:	call   0x14002b150
   1400355bb:	mov    QWORD PTR [rbp+0x7],0xf
   1400355c3:	mov    QWORD PTR [rbp-0x1],r14
   1400355c7:	mov    BYTE PTR [rbp-0x11],0x0
   1400355cb:	cmp    rbx,QWORD PTR [r13+0x450]
   1400355d2:	je     0x1400355fb
   1400355d4:	mov    QWORD PTR [rdi+0x18],0xf
   1400355dc:	mov    QWORD PTR [rdi+0x10],r14
   1400355e0:	mov    BYTE PTR [rdi],0x0
   1400355e3:	lea    rdx,[rbx+0x40]
   1400355e7:	or     r9,0xffffffffffffffff
   1400355eb:	xor    r8d,r8d
   1400355ee:	mov    rcx,rdi
   1400355f1:	call   0x1400048b8
   1400355f6:	jmp    0x14003577a
   1400355fb:	mov    QWORD PTR [rbp-0x21],0xf
   140035603:	mov    QWORD PTR [rbp-0x29],r14
   140035607:	mov    BYTE PTR [rbp-0x39],0x0
   14003560b:	cmp    rsi,r12
   14003560e:	je     0x140035623
   140035610:	mov    r8,r12
   140035613:	sub    r8,rsi
   140035616:	mov    rdx,rsi
   140035619:	lea    rcx,[rbp-0x39]
   14003561d:	call   0x140005154
   140035622:	nop
   140035623:	lea    rdx,[rbp-0x39]
   140035627:	lea    rcx,[rbp-0x11]
   14003562b:	call   0x140043030
   140035630:	mov    rbx,rax
   140035633:	lea    rax,[rbp-0x39]
   140035637:	cmp    rax,rbx
   14003563a:	je     0x1400356a2
   14003563c:	cmp    QWORD PTR [rbp-0x21],0x10
   140035641:	jb     0x14003564c
   140035643:	mov    rcx,QWORD PTR [rbp-0x39]
   140035647:	call   0x14002b150
   14003564c:	mov    QWORD PTR [rbp-0x21],0xf
   140035654:	mov    QWORD PTR [rbp-0x29],r14
   140035658:	mov    BYTE PTR [rbp-0x39],0x0
   14003565c:	cmp    QWORD PTR [rbx+0x18],0x10
   140035661:	jae    0x140035679
   140035663:	mov    r8,QWORD PTR [rbx+0x10]
   140035667:	inc    r8
   14003566a:	mov    rdx,rbx
   14003566d:	lea    rcx,[rbp-0x39]
   140035671:	call   QWORD PTR [rip+0x13f79]        # 0x1400495f0
   140035677:	jmp    0x140035683
   140035679:	mov    rax,QWORD PTR [rbx]
   14003567c:	mov    QWORD PTR [rbp-0x39],rax
   140035680:	mov    QWORD PTR [rbx],r14
   140035683:	mov    rax,QWORD PTR [rbx+0x10]
   140035687:	mov    QWORD PTR [rbp-0x29],rax
   14003568b:	mov    rax,QWORD PTR [rbx+0x18]
   14003568f:	mov    QWORD PTR [rbp-0x21],rax
   140035693:	mov    QWORD PTR [rbx+0x18],0xf
   14003569b:	mov    QWORD PTR [rbx+0x10],r14
   14003569f:	mov    BYTE PTR [rbx],0x0
   1400356a2:	cmp    QWORD PTR [rbp+0x7],0x10
   1400356a7:	jb     0x1400356b2
   1400356a9:	mov    rcx,QWORD PTR [rbp-0x11]
   1400356ad:	call   0x14002b150
   1400356b2:	mov    rdx,QWORD PTR [rbp-0x29]
   1400356b6:	test   rdx,rdx
   1400356b9:	je     0x1400356fd
   1400356bb:	lea    r8,[rbp-0x39]
   1400356bf:	mov    r9,QWORD PTR [rbp-0x39]
   1400356c3:	mov    rax,QWORD PTR [rbp-0x21]
   1400356c7:	cmp    rax,0x10
   1400356cb:	cmovae r8,r9
   1400356cf:	add    r8,rdx
   1400356d2:	lea    rdx,[rbp-0x39]
   1400356d6:	cmp    rax,0x10
   1400356da:	cmovae rdx,r9
   1400356de:	mov    QWORD PTR [rdi+0x18],0xf
   1400356e6:	mov    QWORD PTR [rdi+0x10],r14
   1400356ea:	mov    BYTE PTR [rdi],0x0
   1400356ed:	movzx  r9d,BYTE PTR [rbp-0x59]
   1400356f2:	mov    rcx,rdi
   1400356f5:	call   0x1400309c0
   1400356fa:	nop
   1400356fb:	jmp    0x14003576a
   1400356fd:	sub    r12,rsi
   140035700:	cmp    r12,0x1
   140035704:	jne    0x14003575b
   140035706:	movzx  ebx,BYTE PTR [rsi]
   140035709:	mov    QWORD PTR [rdi+0x18],0xf
   140035711:	mov    QWORD PTR [rdi+0x10],r14
   140035715:	mov    BYTE PTR [rdi],0x0
   140035718:	cmp    QWORD PTR [rdi+0x18],r12
   14003571c:	jae    0x14003572d
   14003571e:	mov    r8,QWORD PTR [rdi+0x10]
   140035722:	mov    rdx,r12
   140035725:	mov    rcx,rdi
   140035728:	call   0x140005750
   14003572d:	cmp    QWORD PTR [rdi+0x18],0x10
   140035732:	jb     0x140035739
   140035734:	mov    rax,QWORD PTR [rdi]
   140035737:	jmp    0x14003573c
   140035739:	mov    rax,rdi
   14003573c:	mov    BYTE PTR [rax],bl
   14003573e:	mov    QWORD PTR [rdi+0x10],0x1
   140035746:	cmp    QWORD PTR [rdi+0x18],0x10
   14003574b:	jb     0x140035752
   14003574d:	mov    rax,QWORD PTR [rdi]
   140035750:	jmp    0x140035755
   140035752:	mov    rax,rdi
   140035755:	mov    BYTE PTR [rax+0x1],0x0
   140035759:	jmp    0x14003576a
   14003575b:	mov    QWORD PTR [rdi+0x18],0xf
   140035763:	mov    QWORD PTR [rdi+0x10],r14
   140035767:	mov    BYTE PTR [rdi],0x0
   14003576a:	cmp    QWORD PTR [rbp-0x21],0x10
   14003576f:	jb     0x14003577a
   140035771:	mov    rcx,QWORD PTR [rbp-0x39]
   140035775:	call   0x14002b150
   14003577a:	mov    rax,rdi
   14003577d:	mov    rcx,QWORD PTR [rbp+0x17]
   140035781:	xor    rcx,rsp
   140035784:	call   0x14002b100
   140035789:	add    rsp,0xa0
   140035790:	pop    r14
   140035792:	pop    r13
   140035794:	pop    r12
   140035796:	pop    rdi
   140035797:	pop    rsi
   140035798:	pop    rbx
   140035799:	pop    rbp
   14003579a:	ret    
   14003579b:	int3   
   14003579c:	int3   
   14003579d:	int3   
   14003579e:	int3   
   14003579f:	int3   
   1400357a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400357a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400357aa:	push   rdi
   1400357ab:	sub    rsp,0x30
   1400357af:	movzx  r11d,r9b
   1400357b3:	mov    r9,QWORD PTR [rcx+0x8]
   1400357b7:	mov    rdi,r8
   1400357ba:	mov    rax,QWORD PTR [r9+0x8]
   1400357be:	mov    rsi,rdx
   1400357c1:	mov    r8b,0x1
   1400357c4:	cmp    BYTE PTR [rax+0x49],0x0
   1400357c8:	jne    0x1400357fe
   1400357ca:	mov    r10d,DWORD PTR [rdi+0x18]
   1400357ce:	xchg   ax,ax
   1400357d0:	mov    r9,rax
   1400357d3:	test   r11b,r11b
   1400357d6:	je     0x1400357e2
   1400357d8:	cmp    DWORD PTR [rax+0x18],r10d
   1400357dc:	setge  r8b
   1400357e0:	jmp    0x1400357ea
   1400357e2:	cmp    r10d,DWORD PTR [rax+0x18]
   1400357e6:	setl   r8b
   1400357ea:	test   r8b,r8b
   1400357ed:	je     0x1400357f4
   1400357ef:	mov    rax,QWORD PTR [rax]
   1400357f2:	jmp    0x1400357f8
   1400357f4:	mov    rax,QWORD PTR [rax+0x10]
   1400357f8:	cmp    BYTE PTR [rax+0x49],0x0
   1400357fc:	je     0x1400357d0
   1400357fe:	mov    rbx,r9
   140035801:	test   r8b,r8b
   140035804:	je     0x1400358aa
   14003580a:	mov    rax,QWORD PTR [rcx+0x8]
   14003580e:	cmp    r9,QWORD PTR [rax]
   140035811:	jne    0x140035842
   140035813:	mov    r8b,0x1
   140035816:	lea    rdx,[rsp+0x40]
   14003581b:	mov    QWORD PTR [rsp+0x20],rdi
   140035820:	call   0x140033920
   140035825:	mov    BYTE PTR [rsi+0x8],0x1
   140035829:	mov    rcx,QWORD PTR [rax]
   14003582c:	mov    rax,rsi
   14003582f:	mov    QWORD PTR [rsi],rcx
   140035832:	mov    rbx,QWORD PTR [rsp+0x48]
   140035837:	mov    rsi,QWORD PTR [rsp+0x50]
   14003583c:	add    rsp,0x30
   140035840:	pop    rdi
   140035841:	ret    
   140035842:	cmp    BYTE PTR [r9+0x49],0x0
   140035847:	je     0x14003584f
   140035849:	mov    rbx,QWORD PTR [r9+0x10]
   14003584d:	jmp    0x1400358aa
   14003584f:	mov    rax,QWORD PTR [r9]
   140035852:	cmp    BYTE PTR [rax+0x49],0x0
   140035856:	jne    0x14003587f
   140035858:	mov    rbx,rax
   14003585b:	mov    rax,QWORD PTR [rax+0x10]
   14003585f:	cmp    BYTE PTR [rax+0x49],0x0
   140035863:	jne    0x1400358aa
   140035865:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140035870:	mov    rbx,rax
   140035873:	mov    rax,QWORD PTR [rax+0x10]
   140035877:	cmp    BYTE PTR [rax+0x49],0x0
   14003587b:	je     0x140035870
   14003587d:	jmp    0x1400358aa
   14003587f:	mov    rax,QWORD PTR [r9+0x8]
   140035883:	cmp    BYTE PTR [rax+0x49],0x0
   140035887:	jne    0x1400358a2
   140035889:	nop    DWORD PTR [rax+0x0]
   140035890:	cmp    rbx,QWORD PTR [rax]
   140035893:	jne    0x1400358a2
   140035895:	mov    rbx,rax
   140035898:	mov    rax,QWORD PTR [rax+0x8]
   14003589c:	cmp    BYTE PTR [rax+0x49],0x0
   1400358a0:	je     0x140035890
   1400358a2:	cmp    BYTE PTR [rbx+0x49],0x0
   1400358a6:	cmove  rbx,rax
   1400358aa:	mov    eax,DWORD PTR [rdi+0x18]
   1400358ad:	cmp    DWORD PTR [rbx+0x18],eax
   1400358b0:	jl     0x140035816
   1400358b6:	cmp    QWORD PTR [rdi+0x38],0x10
   1400358bb:	jb     0x1400358c6
   1400358bd:	mov    rcx,QWORD PTR [rdi+0x20]
   1400358c1:	call   0x14002b150
   1400358c6:	mov    QWORD PTR [rdi+0x38],0xf
   1400358ce:	mov    QWORD PTR [rdi+0x30],0x0
   1400358d6:	mov    rcx,rdi
   1400358d9:	mov    BYTE PTR [rdi+0x20],0x0
   1400358dd:	call   0x14002b150
   1400358e2:	mov    QWORD PTR [rsi],rbx
   1400358e5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400358ea:	mov    BYTE PTR [rsi+0x8],0x0
   1400358ee:	mov    rax,rsi
   1400358f1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400358f6:	add    rsp,0x30
   1400358fa:	pop    rdi
   1400358fb:	ret    
   1400358fc:	int3   
   1400358fd:	int3   
   1400358fe:	int3   
   1400358ff:	int3   
   140035900:	mov    rax,rsp
   140035903:	mov    BYTE PTR [rax+0x20],r9b
   140035907:	mov    QWORD PTR [rax+0x18],r8
   14003590b:	mov    QWORD PTR [rax+0x10],rdx
   14003590f:	mov    QWORD PTR [rax+0x8],rcx
   140035913:	push   rbx
   140035914:	push   rbp
   140035915:	push   rsi
   140035916:	push   rdi
   140035917:	push   r12
   140035919:	push   r13
   14003591b:	push   r14
   14003591d:	sub    rsp,0x40
   140035921:	mov    r13,QWORD PTR [rcx+0x8]
   140035925:	mov    rbp,r8
   140035928:	mov    r14,rdx
   14003592b:	mov    rbx,QWORD PTR [r13+0x8]
   14003592f:	mov    r12,rcx
   140035932:	lea    rsi,[r8+0x18]
   140035936:	cmp    BYTE PTR [rbx+0x49],0x0
   14003593a:	mov    dil,0x1
   14003593d:	jne    0x140035a45
   140035943:	mov    r12,QWORD PTR [rsi+0x10]
   140035947:	mov    QWORD PTR [rax-0x40],r15
   14003594b:	mov    r15,QWORD PTR [rsi+0x18]
   14003594f:	movzx  r14d,r9b
   140035953:	mov    r13,rbx
   140035956:	test   r14b,r14b
   140035959:	je     0x1400359b6
   14003595b:	lea    rcx,[rbx+0x18]
   14003595f:	cmp    r15,0x10
   140035963:	jb     0x14003596a
   140035965:	mov    rdx,QWORD PTR [rsi]
   140035968:	jmp    0x14003596d
   14003596a:	mov    rdx,rsi
   14003596d:	mov    rdi,QWORD PTR [rcx+0x10]
   140035971:	cmp    rdi,rdi
   140035974:	cmp    QWORD PTR [rcx+0x18],0x10
   140035979:	jb     0x14003597e
   14003597b:	mov    rcx,QWORD PTR [rcx]
   14003597e:	mov    r8,r12
   140035981:	cmp    rdi,r12
   140035984:	cmovb  r8,rdi
   140035988:	call   0x14002b13e
   14003598d:	movsxd rcx,eax
   140035990:	test   eax,eax
   140035992:	jne    0x1400359ae
   140035994:	cmp    rdi,r12
   140035997:	jae    0x1400359a4
   140035999:	or     ecx,0xffffffff
   14003599c:	test   ecx,ecx
   14003599e:	setns  dil
   1400359a2:	jmp    0x140035a10
   1400359a4:	xor    eax,eax
   1400359a6:	cmp    rdi,r12
   1400359a9:	setne  al
   1400359ac:	mov    ecx,eax
   1400359ae:	test   ecx,ecx
   1400359b0:	setns  dil
   1400359b4:	jmp    0x140035a10
   1400359b6:	cmp    QWORD PTR [rbx+0x30],0x10
   1400359bb:	mov    rbp,QWORD PTR [rbx+0x28]
   1400359bf:	lea    rdx,[rbx+0x18]
   1400359c3:	jb     0x1400359c8
   1400359c5:	mov    rdx,QWORD PTR [rdx]
   1400359c8:	cmp    r12,r12
   1400359cb:	mov    rdi,r12
   1400359ce:	cmovb  rdi,r12
   1400359d2:	cmp    r15,0x10
   1400359d6:	jb     0x1400359dd
   1400359d8:	mov    rcx,QWORD PTR [rsi]
   1400359db:	jmp    0x1400359e0
   1400359dd:	mov    rcx,rsi
   1400359e0:	mov    r8,rbp
   1400359e3:	cmp    rdi,rbp
   1400359e6:	cmovb  r8,rdi
   1400359ea:	call   0x14002b13e
   1400359ef:	movsxd rcx,eax
   1400359f2:	test   eax,eax
   1400359f4:	jne    0x140035a0a
   1400359f6:	cmp    rdi,rbp
   1400359f9:	jae    0x140035a00
   1400359fb:	or     ecx,0xffffffff
   1400359fe:	jmp    0x140035a0a
   140035a00:	xor    eax,eax
   140035a02:	cmp    rdi,rbp
   140035a05:	setne  al
   140035a08:	mov    ecx,eax
   140035a0a:	test   ecx,ecx
   140035a0c:	sets   dil
   140035a10:	test   dil,dil
   140035a13:	je     0x140035a1a
   140035a15:	mov    rbx,QWORD PTR [rbx]
   140035a18:	jmp    0x140035a1e
   140035a1a:	mov    rbx,QWORD PTR [rbx+0x10]
   140035a1e:	cmp    BYTE PTR [rbx+0x49],0x0
   140035a22:	je     0x140035953
   140035a28:	mov    r14,QWORD PTR [rsp+0x88]
   140035a30:	mov    rbp,QWORD PTR [rsp+0x90]
   140035a38:	mov    r12,QWORD PTR [rsp+0x80]
   140035a40:	mov    r15,QWORD PTR [rsp+0x38]
   140035a45:	mov    rbx,r13
   140035a48:	test   dil,dil
   140035a4b:	je     0x140035aea
   140035a51:	mov    rax,QWORD PTR [r12+0x8]
   140035a56:	cmp    r13,QWORD PTR [rax]
   140035a59:	jne    0x140035a86
   140035a5b:	mov    r8b,0x1
   140035a5e:	lea    rdx,[rsp+0x90]
   140035a66:	mov    r9,r13
   140035a69:	mov    rcx,r12
   140035a6c:	mov    QWORD PTR [rsp+0x20],rbp
   140035a71:	call   0x140025210
   140035a76:	mov    BYTE PTR [r14+0x8],0x1
   140035a7b:	mov    rcx,QWORD PTR [rax]
   140035a7e:	mov    QWORD PTR [r14],rcx
   140035a81:	jmp    0x140035b35
   140035a86:	cmp    BYTE PTR [r13+0x49],0x0
   140035a8b:	je     0x140035a93
   140035a8d:	mov    rbx,QWORD PTR [r13+0x10]
   140035a91:	jmp    0x140035aea
   140035a93:	mov    rax,QWORD PTR [r13+0x0]
   140035a97:	cmp    BYTE PTR [rax+0x49],0x0
   140035a9b:	jne    0x140035abf
   140035a9d:	mov    rbx,rax
   140035aa0:	mov    rax,QWORD PTR [rax+0x10]
   140035aa4:	cmp    BYTE PTR [rax+0x49],0x0
   140035aa8:	jne    0x140035aea
   140035aaa:	nop    WORD PTR [rax+rax*1+0x0]
   140035ab0:	mov    rbx,rax
   140035ab3:	mov    rax,QWORD PTR [rax+0x10]
   140035ab7:	cmp    BYTE PTR [rax+0x49],0x0
   140035abb:	je     0x140035ab0
   140035abd:	jmp    0x140035aea
   140035abf:	mov    rax,QWORD PTR [r13+0x8]
   140035ac3:	cmp    BYTE PTR [rax+0x49],0x0
   140035ac7:	jne    0x140035ae2
   140035ac9:	nop    DWORD PTR [rax+0x0]
   140035ad0:	cmp    rbx,QWORD PTR [rax]
   140035ad3:	jne    0x140035ae2
   140035ad5:	mov    rbx,rax
   140035ad8:	mov    rax,QWORD PTR [rax+0x8]
   140035adc:	cmp    BYTE PTR [rax+0x49],0x0
   140035ae0:	je     0x140035ad0
   140035ae2:	cmp    BYTE PTR [rbx+0x49],0x0
   140035ae6:	cmove  rbx,rax
   140035aea:	lea    rcx,[rbx+0x18]
   140035aee:	mov    rdx,rsi
   140035af1:	call   0x140002ec4
   140035af6:	test   eax,eax
   140035af8:	jns    0x140035b03
   140035afa:	movzx  r8d,dil
   140035afe:	jmp    0x140035a5e
   140035b03:	cmp    QWORD PTR [rsi+0x18],0x10
   140035b08:	jb     0x140035b12
   140035b0a:	mov    rcx,QWORD PTR [rsi]
   140035b0d:	call   0x14002b150
   140035b12:	mov    QWORD PTR [rsi+0x18],0xf
   140035b1a:	mov    QWORD PTR [rsi+0x10],0x0
   140035b22:	mov    rcx,rbp
   140035b25:	mov    BYTE PTR [rsi],0x0
   140035b28:	call   0x14002b150
   140035b2d:	mov    QWORD PTR [r14],rbx
   140035b30:	mov    BYTE PTR [r14+0x8],0x0
   140035b35:	mov    rax,r14
   140035b38:	add    rsp,0x40
   140035b3c:	pop    r14
   140035b3e:	pop    r13
   140035b40:	pop    r12
   140035b42:	pop    rdi
   140035b43:	pop    rsi
   140035b44:	pop    rbp
   140035b45:	pop    rbx
   140035b46:	ret    
   140035b47:	int3   
   140035b48:	int3   
   140035b49:	int3   
   140035b4a:	int3   
   140035b4b:	int3   
   140035b4c:	int3   
   140035b4d:	int3   
   140035b4e:	int3   
   140035b4f:	int3   
   140035b50:	mov    QWORD PTR [rsp+0x8],rbx
   140035b55:	push   rdi
   140035b56:	sub    rsp,0x20
   140035b5a:	mov    rdi,rdx
   140035b5d:	mov    rbx,rcx
   140035b60:	call   0x140033c50
   140035b65:	xor    eax,eax
   140035b67:	mov    QWORD PTR [rbx+0x20],rax
   140035b6b:	mov    QWORD PTR [rbx+0x28],rax
   140035b6f:	mov    QWORD PTR [rbx+0x30],rax
   140035b73:	mov    BYTE PTR [rbx+0x38],al
   140035b76:	mov    rax,QWORD PTR [rdi+0x40]
   140035b7a:	mov    QWORD PTR [rbx+0x40],rax
   140035b7e:	mov    rax,QWORD PTR [rdi+0x48]
   140035b82:	mov    QWORD PTR [rbx+0x48],rax
   140035b86:	test   rax,rax
   140035b89:	je     0x140035b8f
   140035b8b:	lock inc DWORD PTR [rax+0x8]
   140035b8f:	mov    eax,DWORD PTR [rdi+0x50]
   140035b92:	mov    DWORD PTR [rbx+0x50],eax
   140035b95:	movzx  eax,BYTE PTR [rdi+0x54]
   140035b99:	mov    BYTE PTR [rbx+0x54],al
   140035b9c:	test   al,al
   140035b9e:	jne    0x140035bbf
   140035ba0:	mov    rax,QWORD PTR [rdi+0x20]
   140035ba4:	mov    QWORD PTR [rbx+0x20],rax
   140035ba8:	mov    rax,QWORD PTR [rdi+0x28]
   140035bac:	mov    QWORD PTR [rbx+0x28],rax
   140035bb0:	mov    rax,QWORD PTR [rdi+0x30]
   140035bb4:	mov    QWORD PTR [rbx+0x30],rax
   140035bb8:	movzx  eax,BYTE PTR [rdi+0x38]
   140035bbc:	mov    BYTE PTR [rbx+0x38],al
   140035bbf:	mov    rax,rbx
   140035bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140035bc7:	add    rsp,0x20
   140035bcb:	pop    rdi
   140035bcc:	ret    
   140035bcd:	int3   
   140035bce:	int3   
   140035bcf:	int3   
   140035bd0:	rex push rbx
   140035bd2:	sub    rsp,0x20
   140035bd6:	mov    eax,DWORD PTR [rcx+0xec]
   140035bdc:	mov    rbx,rcx
   140035bdf:	test   eax,eax
   140035be1:	je     0x140035c2d
   140035be3:	dec    eax
   140035be5:	mov    DWORD PTR [rcx+0xec],eax
   140035beb:	call   0x140041d30
   140035bf0:	lea    r8,[rax+0xfe8]
   140035bf7:	test   r8,r8
   140035bfa:	je     0x140035c19
   140035bfc:	mov    rdx,QWORD PTR [rbx+0xe0]
   140035c03:	mov    rcx,QWORD PTR [rbx+0xd8]
   140035c0a:	mov    DWORD PTR [r8],0x6
   140035c11:	mov    QWORD PTR [r8+0x8],rcx
   140035c15:	mov    QWORD PTR [r8+0x10],rdx
   140035c19:	mov    QWORD PTR [rbx+0xd8],rax
   140035c20:	mov    QWORD PTR [rbx+0xe0],r8
   140035c27:	add    rsp,0x20
   140035c2b:	pop    rbx
   140035c2c:	ret    
   140035c2d:	mov    rcx,QWORD PTR [rcx+0x50]
   140035c31:	mov    edx,0x13
   140035c36:	add    rsp,0x20
   140035c3a:	pop    rbx
   140035c3b:	jmp    0x140034440
   140035c40:	mov    QWORD PTR [rsp+0x8],rbx
   140035c45:	mov    QWORD PTR [rsp+0x10],rsi
   140035c4a:	push   rdi
   140035c4b:	sub    rsp,0x20
   140035c4f:	mov    r9,QWORD PTR [rcx+0xe0]
   140035c56:	mov    rdi,r8
   140035c59:	mov    esi,edx
   140035c5b:	sub    r9,0x28
   140035c5f:	mov    rbx,rcx
   140035c62:	cmp    r9,QWORD PTR [rcx+0xd8]
   140035c69:	jae    0x140035c7b
   140035c6b:	call   0x140035bd0
   140035c70:	mov    r9,QWORD PTR [rbx+0xe0]
   140035c77:	sub    r9,0x28
   140035c7b:	test   r9,r9
   140035c7e:	je     0x140035ca2
   140035c80:	mov    DWORD PTR [r9],0x1
   140035c87:	mov    DWORD PTR [r9+0x8],esi
   140035c8b:	mov    rax,QWORD PTR [rdi]
   140035c8e:	mov    QWORD PTR [r9+0x10],rax
   140035c92:	mov    rax,QWORD PTR [rdi+0x8]
   140035c96:	mov    QWORD PTR [r9+0x18],rax
   140035c9a:	movzx  eax,BYTE PTR [rdi+0x10]
   140035c9e:	mov    BYTE PTR [r9+0x20],al
   140035ca2:	mov    rsi,QWORD PTR [rsp+0x38]
   140035ca7:	mov    QWORD PTR [rbx+0xe0],r9
   140035cae:	mov    rbx,QWORD PTR [rsp+0x30]
   140035cb3:	add    rsp,0x20
   140035cb7:	pop    rdi
   140035cb8:	ret    
   140035cb9:	int3   
   140035cba:	int3   
   140035cbb:	int3   
   140035cbc:	int3   
   140035cbd:	int3   
   140035cbe:	int3   
   140035cbf:	int3   
   140035cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140035cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140035cca:	push   rdi
   140035ccb:	sub    rsp,0x20
   140035ccf:	mov    r9,QWORD PTR [rcx+0xe0]
   140035cd6:	movzx  edi,r8b
   140035cda:	mov    rsi,rdx
   140035cdd:	sub    r9,0x20
   140035ce1:	mov    rbx,rcx
   140035ce4:	cmp    r9,QWORD PTR [rcx+0xd8]
   140035ceb:	jae    0x140035cfd
   140035ced:	call   0x140035bd0
   140035cf2:	mov    r9,QWORD PTR [rbx+0xe0]
   140035cf9:	sub    r9,0x20
   140035cfd:	test   r9,r9
   140035d00:	je     0x140035d19
   140035d02:	mov    rax,QWORD PTR [rbx+0x28]
   140035d06:	mov    DWORD PTR [r9],0x3
   140035d0d:	mov    QWORD PTR [r9+0x8],rsi
   140035d11:	mov    QWORD PTR [r9+0x10],rax
   140035d15:	mov    BYTE PTR [r9+0x18],dil
   140035d19:	mov    rsi,QWORD PTR [rsp+0x38]
   140035d1e:	mov    QWORD PTR [rbx+0xe0],r9
   140035d25:	mov    rbx,QWORD PTR [rsp+0x30]
   140035d2a:	add    rsp,0x20
   140035d2e:	pop    rdi
   140035d2f:	ret    
   140035d30:	mov    QWORD PTR [rsp+0x8],rbx
   140035d35:	push   rdi
   140035d36:	sub    rsp,0x20
   140035d3a:	mov    r8,QWORD PTR [rcx+0xe0]
   140035d41:	mov    rdi,rdx
   140035d44:	mov    rbx,rcx
   140035d47:	sub    r8,0x18
   140035d4b:	cmp    r8,QWORD PTR [rcx+0xd8]
   140035d52:	jae    0x140035d64
   140035d54:	call   0x140035bd0
   140035d59:	mov    r8,QWORD PTR [rbx+0xe0]
   140035d60:	sub    r8,0x18
   140035d64:	test   r8,r8
   140035d67:	je     0x140035d7c
   140035d69:	mov    rax,QWORD PTR [rbx+0x28]
   140035d6d:	mov    DWORD PTR [r8],0x4
   140035d74:	mov    QWORD PTR [r8+0x8],rdi
   140035d78:	mov    QWORD PTR [r8+0x10],rax
   140035d7c:	mov    QWORD PTR [rbx+0xe0],r8
   140035d83:	mov    rbx,QWORD PTR [rsp+0x30]
   140035d88:	add    rsp,0x20
   140035d8c:	pop    rdi
   140035d8d:	ret    
   140035d8e:	int3   
   140035d8f:	int3   
   140035d90:	mov    QWORD PTR [rsp+0x8],rbx
   140035d95:	mov    QWORD PTR [rsp+0x10],rsi
   140035d9a:	push   rdi
   140035d9b:	sub    rsp,0x20
   140035d9f:	mov    r9,QWORD PTR [rcx+0xe0]
   140035da6:	mov    rdi,r8
   140035da9:	mov    esi,edx
   140035dab:	sub    r9,0x30
   140035daf:	mov    rbx,rcx
   140035db2:	cmp    r9,QWORD PTR [rcx+0xd8]
   140035db9:	jae    0x140035dcb
   140035dbb:	call   0x140035bd0
   140035dc0:	mov    r9,QWORD PTR [rbx+0xe0]
   140035dc7:	sub    r9,0x30
   140035dcb:	test   r9,r9
   140035dce:	je     0x140035e1a
   140035dd0:	mov    rax,QWORD PTR [rbx+0x28]
   140035dd4:	mov    DWORD PTR [r9],0x5
   140035ddb:	lea    rdx,[r9+0x8]
   140035ddf:	mov    QWORD PTR [rdx+0x20],rax
   140035de3:	mov    DWORD PTR [rdx+0x10],esi
   140035de6:	mov    QWORD PTR [rdx],rdi
   140035de9:	mov    rax,QWORD PTR [rdi]
   140035dec:	mov    QWORD PTR [rdx+0x8],rax
   140035df0:	mov    QWORD PTR [rdi],rdx
   140035df3:	mov    rcx,QWORD PTR [rdx+0x8]
   140035df7:	mov    eax,DWORD PTR [rdx+0x10]
   140035dfa:	cmp    eax,DWORD PTR [rcx+0x10]
   140035dfd:	jg     0x140035e12
   140035dff:	test   rcx,rcx
   140035e02:	je     0x140035e12
   140035e04:	cmp    DWORD PTR [rcx+0x10],eax
   140035e07:	je     0x140035e31
   140035e09:	mov    rcx,QWORD PTR [rcx+0x8]
   140035e0d:	test   rcx,rcx
   140035e10:	jne    0x140035e04
   140035e12:	mov    QWORD PTR [rdx+0x18],0x0
   140035e1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140035e1f:	mov    QWORD PTR [rbx+0xe0],r9
   140035e26:	mov    rbx,QWORD PTR [rsp+0x30]
   140035e2b:	add    rsp,0x20
   140035e2f:	pop    rdi
   140035e30:	ret    
   140035e31:	mov    rax,QWORD PTR [rcx+0x18]
   140035e35:	mov    QWORD PTR [rdx+0x18],rax
   140035e39:	mov    rax,QWORD PTR [rcx+0x20]
   140035e3d:	mov    QWORD PTR [rdx+0x20],rax
   140035e41:	jmp    0x140035e1a
   140035e43:	int3   
   140035e44:	int3   
   140035e45:	int3   
   140035e46:	int3   
   140035e47:	int3   
   140035e48:	int3   
   140035e49:	int3   
   140035e4a:	int3   
   140035e4b:	int3   
   140035e4c:	int3   
   140035e4d:	int3   
   140035e4e:	int3   
   140035e4f:	int3   
   140035e50:	mov    QWORD PTR [rsp+0x8],rbx
   140035e55:	mov    QWORD PTR [rsp+0x10],rsi
   140035e5a:	mov    QWORD PTR [rsp+0x20],r9
   140035e5f:	push   rdi
   140035e60:	sub    rsp,0x20
   140035e64:	mov    r9,QWORD PTR [rcx+0xe0]
   140035e6b:	mov    rdi,r8
   140035e6e:	mov    rsi,rdx
   140035e71:	sub    r9,0x20
   140035e75:	mov    rbx,rcx
   140035e78:	cmp    r9,QWORD PTR [rcx+0xd8]
   140035e7f:	jae    0x140035e91
   140035e81:	call   0x140035bd0
   140035e86:	mov    r9,QWORD PTR [rbx+0xe0]
   140035e8d:	sub    r9,0x20
   140035e91:	test   r9,r9
   140035e94:	je     0x140035eae
   140035e96:	mov    eax,DWORD PTR [rsp+0x50]
   140035e9a:	mov    QWORD PTR [r9+0x8],rsi
   140035e9e:	mov    QWORD PTR [r9+0x10],rdi
   140035ea2:	mov    DWORD PTR [r9],eax
   140035ea5:	mov    rax,QWORD PTR [rsp+0x48]
   140035eaa:	mov    QWORD PTR [r9+0x18],rax
   140035eae:	mov    rsi,QWORD PTR [rsp+0x38]
   140035eb3:	mov    QWORD PTR [rbx+0xe0],r9
   140035eba:	mov    rbx,QWORD PTR [rsp+0x30]
   140035ebf:	add    rsp,0x20
   140035ec3:	pop    rdi
   140035ec4:	ret    
   140035ec5:	int3   
   140035ec6:	int3   
   140035ec7:	int3   
   140035ec8:	int3   
   140035ec9:	int3   
   140035eca:	int3   
   140035ecb:	int3   
   140035ecc:	int3   
   140035ecd:	int3   
   140035ece:	int3   
   140035ecf:	int3   
   140035ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140035ed5:	push   rdi
   140035ed6:	sub    rsp,0x20
   140035eda:	mov    r8,QWORD PTR [rcx+0xe0]
   140035ee1:	mov    rdi,rdx
   140035ee4:	mov    rbx,rcx
   140035ee7:	sub    r8,0x18
   140035eeb:	cmp    r8,QWORD PTR [rcx+0xd8]
   140035ef2:	jae    0x140035f04
   140035ef4:	call   0x140035bd0
   140035ef9:	mov    r8,QWORD PTR [rbx+0xe0]
   140035f00:	sub    r8,0x18
   140035f04:	test   r8,r8
   140035f07:	je     0x140035f1c
   140035f09:	mov    rax,QWORD PTR [rbx+0x28]
   140035f0d:	mov    DWORD PTR [r8],0xd
   140035f14:	mov    QWORD PTR [r8+0x8],rdi
   140035f18:	mov    QWORD PTR [r8+0x10],rax
   140035f1c:	mov    QWORD PTR [rbx+0xe0],r8
   140035f23:	mov    rbx,QWORD PTR [rsp+0x30]
   140035f28:	add    rsp,0x20
   140035f2c:	pop    rdi
   140035f2d:	ret    
   140035f2e:	int3   
   140035f2f:	int3   
   140035f30:	xor    r8d,r8d
   140035f33:	mov    QWORD PTR [rcx],r8
   140035f36:	mov    QWORD PTR [rcx+0x8],r8
   140035f3a:	mov    QWORD PTR [rcx+0x10],r8
   140035f3e:	mov    rax,QWORD PTR [rdx]
   140035f41:	mov    QWORD PTR [rcx+0x20],rax
   140035f45:	mov    rax,QWORD PTR [rdx+0x8]
   140035f49:	mov    QWORD PTR [rcx+0x28],rax
   140035f4d:	test   rax,rax
   140035f50:	je     0x140035f56
   140035f52:	lock inc DWORD PTR [rax+0x8]
   140035f56:	mov    QWORD PTR [rcx+0x38],r8
   140035f5a:	mov    QWORD PTR [rcx+0x40],r8
   140035f5e:	mov    QWORD PTR [rcx+0x170],r8
   140035f65:	mov    QWORD PTR [rcx+0x168],r8
   140035f6c:	mov    QWORD PTR [rcx+0x160],r8
   140035f73:	mov    rax,rcx
   140035f76:	mov    QWORD PTR [rcx+0x180],r8
   140035f7d:	mov    QWORD PTR [rcx+0x188],r8
   140035f84:	mov    QWORD PTR [rcx+0x190],r8
   140035f8b:	ret    
   140035f8c:	int3   
   140035f8d:	int3   
   140035f8e:	int3   
   140035f8f:	int3   
   140035f90:	rex push rbx
   140035f92:	sub    rsp,0x20
   140035f96:	mov    rcx,QWORD PTR [rcx]
   140035f99:	mov    rbx,rdx
   140035f9c:	mov    DWORD PTR [rsp+0x30],0x0
   140035fa4:	call   0x1400344f0
   140035fa9:	mov    rax,rbx
   140035fac:	add    rsp,0x20
   140035fb0:	pop    rbx
   140035fb1:	ret    
   140035fb2:	int3   
   140035fb3:	int3   
   140035fb4:	int3   
   140035fb5:	int3   
   140035fb6:	int3   
   140035fb7:	int3   
   140035fb8:	int3   
   140035fb9:	int3   
   140035fba:	int3   
   140035fbb:	int3   
   140035fbc:	int3   
   140035fbd:	int3   
   140035fbe:	int3   
   140035fbf:	int3   
   140035fc0:	rex push rbx
   140035fc2:	sub    rsp,0x20
   140035fc6:	mov    rbx,rcx
   140035fc9:	mov    QWORD PTR [rcx],rdx
   140035fcc:	mov    rax,QWORD PTR [rdx+0x20]
   140035fd0:	mov    QWORD PTR [rcx+0x8],rax
   140035fd4:	xor    ecx,ecx
   140035fd6:	lea    r8,[rip+0x18c32]        # 0x14004ec0f
   140035fdd:	mov    QWORD PTR [rbx+0x10],rcx
   140035fe1:	mov    DWORD PTR [rbx+0x1c],ecx
   140035fe4:	mov    BYTE PTR [rbx+0x20],cl
   140035fe7:	mov    DWORD PTR [rbx+0x24],ecx
   140035fea:	mov    BYTE PTR [rbx+0x30],cl
   140035fed:	mov    rax,QWORD PTR [rdx+0x168]
   140035ff4:	mov    QWORD PTR [rdx+0x170],rax
   140035ffb:	mov    rax,QWORD PTR [rbx]
   140035ffe:	lea    rdx,[rip+0x18c09]        # 0x14004ec0e
   140036005:	mov    DWORD PTR [rax+0x34],ecx
   140036008:	mov    rax,QWORD PTR [rbx+0x8]
   14003600c:	mov    rcx,QWORD PTR [rax]
   14003600f:	call   0x140032560
   140036014:	lea    r8,[rip+0x18bf3]        # 0x14004ec0e
   14003601b:	lea    rdx,[rip+0x18beb]        # 0x14004ec0d
   140036022:	mov    DWORD PTR [rbx+0x34],eax
   140036025:	mov    rax,QWORD PTR [rbx+0x8]
   140036029:	mov    rcx,QWORD PTR [rax]
   14003602c:	call   0x140032560
   140036031:	lea    r8,[rip+0x18bd5]        # 0x14004ec0d
   140036038:	lea    rdx,[rip+0x18bc9]        # 0x14004ec08
   14003603f:	mov    DWORD PTR [rbx+0x38],eax
   140036042:	mov    rax,QWORD PTR [rbx+0x8]
   140036046:	mov    rcx,QWORD PTR [rax]
   140036049:	call   0x140032560
   14003604e:	lea    r8,[rip+0x18bb0]        # 0x14004ec05
   140036055:	lea    rdx,[rip+0x18ba4]        # 0x14004ec00
   14003605c:	mov    DWORD PTR [rbx+0x3c],eax
   14003605f:	mov    rax,QWORD PTR [rbx+0x8]
   140036063:	mov    rcx,QWORD PTR [rax]
   140036066:	call   0x140032560
   14003606b:	lea    r8,[rip+0x18b8b]        # 0x14004ebfd
   140036072:	lea    rdx,[rip+0x18b7f]        # 0x14004ebf8
   140036079:	mov    DWORD PTR [rbx+0x40],eax
   14003607c:	mov    rax,QWORD PTR [rbx+0x8]
   140036080:	mov    rcx,QWORD PTR [rax]
   140036083:	call   0x140032560
   140036088:	mov    rcx,QWORD PTR [rbx]
   14003608b:	mov    DWORD PTR [rbx+0x44],eax
   14003608e:	mov    eax,DWORD PTR [rbx+0x34]
   140036091:	mov    DWORD PTR [rcx+0x178],eax
   140036097:	mov    rax,rbx
   14003609a:	add    rsp,0x20
   14003609e:	pop    rbx
   14003609f:	ret    
   1400360a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400360a5:	push   rdi
   1400360a6:	sub    rsp,0x20
   1400360aa:	mov    rax,QWORD PTR [rcx+0x8]
   1400360ae:	mov    rdi,rdx
   1400360b1:	mov    rbx,rcx
   1400360b4:	cmp    rdx,rax
   1400360b7:	jae    0x1400360e0
   1400360b9:	mov    rcx,QWORD PTR [rcx]
   1400360bc:	cmp    rcx,rdx
   1400360bf:	ja     0x1400360e0
   1400360c1:	sub    rdi,rcx
   1400360c4:	cmp    rax,QWORD PTR [rbx+0x10]
   1400360c8:	jne    0x1400360d7
   1400360ca:	mov    edx,0x1
   1400360cf:	mov    rcx,rbx
   1400360d2:	call   0x140034840
   1400360d7:	and    rdi,0xfffffffffffffff0
   1400360db:	add    rdi,QWORD PTR [rbx]
   1400360de:	jmp    0x1400360f3
   1400360e0:	cmp    rax,QWORD PTR [rbx+0x10]
   1400360e4:	jne    0x1400360f3
   1400360e6:	mov    edx,0x1
   1400360eb:	mov    rcx,rbx
   1400360ee:	call   0x140034840
   1400360f3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400360f7:	test   rcx,rcx
   1400360fa:	je     0x14003610a
   1400360fc:	mov    rax,QWORD PTR [rdi]
   1400360ff:	mov    QWORD PTR [rcx],rax
   140036102:	mov    rax,QWORD PTR [rdi+0x8]
   140036106:	mov    QWORD PTR [rcx+0x8],rax
   14003610a:	add    QWORD PTR [rbx+0x8],0x10
   14003610f:	mov    rbx,QWORD PTR [rsp+0x30]
   140036114:	add    rsp,0x20
   140036118:	pop    rdi
   140036119:	ret    
   14003611a:	int3   
   14003611b:	int3   
   14003611c:	int3   
   14003611d:	int3   
   14003611e:	int3   
   14003611f:	int3   
   140036120:	mov    QWORD PTR [rsp+0x8],rcx
   140036125:	push   rbx
   140036126:	sub    rsp,0x30
   14003612a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036133:	mov    rbx,rcx
   140036136:	call   0x1400334c0
   14003613b:	nop
   14003613c:	mov    rcx,QWORD PTR [rbx]
   14003613f:	add    rsp,0x30
   140036143:	pop    rbx
   140036144:	jmp    0x14002b150
   140036149:	int3   
   14003614a:	int3   
   14003614b:	int3   
   14003614c:	int3   
   14003614d:	int3   
   14003614e:	int3   
   14003614f:	int3   
   140036150:	mov    rax,rsp
   140036153:	push   rbp
   140036154:	push   r12
   140036156:	push   r13
   140036158:	push   r14
   14003615a:	push   r15
   14003615c:	lea    rbp,[rax-0x68]
   140036160:	sub    rsp,0x140
   140036167:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14003616f:	mov    QWORD PTR [rax+0x10],rbx
   140036173:	mov    QWORD PTR [rax+0x18],rsi
   140036177:	mov    QWORD PTR [rax+0x20],rdi
   14003617b:	mov    rax,QWORD PTR [rip+0x3206e]        # 0x1400681f0
   140036182:	xor    rax,rsp
   140036185:	mov    QWORD PTR [rbp+0x38],rax
   140036189:	mov    rdi,rcx
   14003618c:	inc    QWORD PTR [rcx+0x60]
   140036190:	mov    rdx,QWORD PTR [rcx+0x60]
   140036194:	mov    r8,QWORD PTR [rcx+0x58]
   140036198:	cmp    rdx,r8
   14003619b:	jne    0x1400361e3
   14003619d:	lea    r9,[rdx-0x1]
   1400361a1:	mov    QWORD PTR [rcx+0x60],r9
   1400361a5:	movzx  edx,BYTE PTR [r9]
   1400361a9:	mov    rax,QWORD PTR [rcx+0x8]
   1400361ad:	mov    rcx,QWORD PTR [rax]
   1400361b0:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400361b5:	je     0x1400361da
   1400361b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400361c0:	dec    r9
   1400361c3:	mov    QWORD PTR [rdi+0x60],r9
   1400361c7:	movzx  r8d,BYTE PTR [r9]
   1400361cb:	mov    rax,QWORD PTR [rdi+0x8]
   1400361cf:	mov    rdx,QWORD PTR [rax]
   1400361d2:	cmp    BYTE PTR [r8+rdx*1+0x4],0x1
   1400361d8:	jne    0x1400361c0
   1400361da:	mov    r8,QWORD PTR [rdi+0x60]
   1400361de:	jmp    0x140037a7a
   1400361e3:	mov    r9,QWORD PTR [rcx+0x8]
   1400361e7:	mov    rcx,QWORD PTR [r9]
   1400361ea:	movzx  eax,BYTE PTR [rdx]
   1400361ed:	cmp    BYTE PTR [rax+rcx*1+0x4],0xd
   1400361f2:	jne    0x140036214
   1400361f4:	cmp    rdx,r8
   1400361f7:	je     0x14003620d
   1400361f9:	movzx  ecx,BYTE PTR [rdx]
   1400361fc:	inc    rdx
   1400361ff:	mov    QWORD PTR [rdi+0x60],rdx
   140036203:	mov    rax,QWORD PTR [r9]
   140036206:	cmp    BYTE PTR [rcx+rax*1+0x4],0x2
   14003620b:	jne    0x1400361f4
   14003620d:	mov    al,0x1
   14003620f:	jmp    0x140037a8d
   140036214:	xor    r13d,r13d
   140036217:	mov    r15d,r13d
   14003621a:	xor    edx,edx
   14003621c:	lea    r8d,[r13+0x18]
   140036220:	mov    rcx,rdi
   140036223:	call   0x14002eb10
   140036228:	mov    r12,rax
   14003622b:	mov    rax,QWORD PTR [rdi]
   14003622e:	mov    ecx,DWORD PTR [rax+0x30]
   140036231:	shr    ecx,0x14
   140036234:	and    cl,0x1
   140036237:	mov    BYTE PTR [r12+0x14],cl
   14003623c:	mov    rdx,QWORD PTR [rdi]
   14003623f:	mov    rax,r12
   140036242:	sub    rax,QWORD PTR [rdx+0x168]
   140036249:	mov    QWORD PTR [rsp+0x68],rax
   14003624e:	mov    rax,QWORD PTR [rdi+0x80]
   140036255:	mov    QWORD PTR [rsp+0x78],rax
   14003625a:	mov    rax,QWORD PTR [rdx+0x168]
   140036261:	mov    rcx,QWORD PTR [rdx+0x170]
   140036268:	sub    rcx,rax
   14003626b:	add    rcx,0x7
   14003626f:	and    rcx,0xfffffffffffffff8
   140036273:	add    rcx,rax
   140036276:	mov    QWORD PTR [rdx+0x170],rcx
   14003627d:	mov    r9,QWORD PTR [rdi]
   140036280:	mov    rax,QWORD PTR [r9+0x170]
   140036287:	sub    rax,QWORD PTR [r9+0x168]
   14003628e:	mov    QWORD PTR [rsp+0x70],rax
   140036293:	mov    QWORD PTR [rdi+0x80],rax
   14003629a:	mov    r14d,DWORD PTR [r9+0x30]
   14003629e:	movzx  eax,BYTE PTR [rdi+0x88]
   1400362a5:	mov    BYTE PTR [rsp+0x30],al
   1400362a9:	mov    BYTE PTR [rdi+0x88],r13b
   1400362b0:	mov    eax,DWORD PTR [rdi+0x6c]
   1400362b3:	mov    DWORD PTR [rsp+0x60],eax
   1400362b7:	mov    eax,DWORD PTR [rdi+0x70]
   1400362ba:	mov    DWORD PTR [rsp+0x64],eax
   1400362be:	mov    DWORD PTR [rdi+0x6c],0xffffffff
   1400362c5:	mov    r10d,DWORD PTR [rdi+0x68]
   1400362c9:	mov    DWORD PTR [rdi+0x70],r10d
   1400362cd:	mov    rdx,QWORD PTR [rdi+0x8]
   1400362d1:	mov    rax,QWORD PTR [rdx]
   1400362d4:	mov    r8,QWORD PTR [rdi+0x60]
   1400362d8:	movzx  ebx,BYTE PTR [r8]
   1400362dc:	movzx  eax,BYTE PTR [rbx+rax*1+0x4]
   1400362e1:	dec    eax
   1400362e3:	cmp    eax,0x34
   1400362e6:	ja     0x140037141
   1400362ec:	cdqe   
   1400362ee:	lea    r11,[rip+0xfffffffffffc9d0b]        # 0x140000000
   1400362f5:	movzx  eax,BYTE PTR [r11+rax*1+0x37af0]
   1400362fe:	mov    ecx,DWORD PTR [r11+rax*4+0x37abc]
   140036306:	add    rcx,r11
   140036309:	jmp    rcx
   14003630b:	mov    DWORD PTR [rdi+0x6c],r10d
   14003630f:	mov    DWORD PTR [r12+0x10],r13d
   140036314:	jmp    0x140037461
   140036319:	mov    r9,rdx
   14003631c:	mov    r8d,0xa
   140036322:	mov    rdx,QWORD PTR [rdi+0x58]
   140036326:	lea    rcx,[rdi+0x60]
   14003632a:	call   0x14002eda0
   14003632f:	mov    ebx,eax
   140036331:	test   eax,eax
   140036333:	js     0x14003634e
   140036335:	mov    rax,QWORD PTR [rdi+0x8]
   140036339:	mov    rdx,QWORD PTR [rax]
   14003633c:	mov    rax,QWORD PTR [rdi+0x60]
   140036340:	movzx  ecx,BYTE PTR [rax]
   140036343:	cmp    BYTE PTR [rcx+rdx*1+0x4],0x2
   140036348:	je     0x14003731b
   14003634e:	dec    QWORD PTR [rdi+0x60]
   140036352:	mov    rdx,QWORD PTR [rdi+0x60]
   140036356:	mov    rax,QWORD PTR [rdi+0x8]
   14003635a:	mov    rcx,QWORD PTR [rax]
   14003635d:	movzx  eax,BYTE PTR [rdx]
   140036360:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036365:	je     0x140036388
   140036367:	nop    WORD PTR [rax+rax*1+0x0]
   140036370:	dec    rdx
   140036373:	mov    QWORD PTR [rdi+0x60],rdx
   140036377:	mov    rax,QWORD PTR [rdi+0x8]
   14003637b:	mov    rcx,QWORD PTR [rax]
   14003637e:	movzx  eax,BYTE PTR [rdx]
   140036381:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036386:	jne    0x140036370
   140036388:	mov    QWORD PTR [rbp+0x28],0xf
   140036390:	mov    QWORD PTR [rbp+0x20],r13
   140036394:	mov    BYTE PTR [rbp+0x10],r13b
   140036398:	mov    r8d,0x54
   14003639e:	lea    rdx,[rip+0x18a6b]        # 0x14004ee10
   1400363a5:	lea    rcx,[rbp+0x10]
   1400363a9:	call   0x140005154
   1400363ae:	nop
   1400363af:	mov    rbx,QWORD PTR [rdi+0x60]
   1400363b3:	sub    rbx,QWORD PTR [rdi+0x50]
   1400363b7:	mov    QWORD PTR [rsp+0x50],0xf
   1400363c0:	mov    QWORD PTR [rsp+0x48],r13
   1400363c5:	mov    BYTE PTR [rsp+0x38],0x0
   1400363ca:	or     r9,0xffffffffffffffff
   1400363ce:	xor    r8d,r8d
   1400363d1:	lea    rdx,[rbp+0x10]
   1400363d5:	lea    rcx,[rsp+0x38]
   1400363da:	call   0x1400048b8
   1400363df:	mov    QWORD PTR [rsp+0x20],rbx
   1400363e4:	lea    r9,[rsp+0x38]
   1400363e9:	mov    r8,rbx
   1400363ec:	mov    edx,0x14
   1400363f1:	mov    rcx,rdi
   1400363f4:	call   0x140031400
   1400363f9:	nop
   1400363fa:	cmp    QWORD PTR [rbp+0x28],0x10
   1400363ff:	jb     0x140037a8b
   140036405:	mov    rcx,QWORD PTR [rbp+0x10]
   140036409:	call   0x14002b150
   14003640e:	jmp    0x140037a8b
   140036413:	lea    rax,[r8+0x1]
   140036417:	mov    QWORD PTR [rdi+0x60],rax
   14003641b:	mov    r9,rdx
   14003641e:	mov    r8d,0xa
   140036424:	mov    rdx,QWORD PTR [rdi+0x58]
   140036428:	lea    rcx,[rdi+0x60]
   14003642c:	call   0x14002eda0
   140036431:	mov    ebx,eax
   140036433:	test   eax,eax
   140036435:	jle    0x140036454
   140036437:	mov    rax,QWORD PTR [rdi+0x8]
   14003643b:	mov    rdx,QWORD PTR [rax]
   14003643e:	mov    rax,QWORD PTR [rdi+0x60]
   140036442:	movzx  ecx,BYTE PTR [rax]
   140036445:	cmp    BYTE PTR [rcx+rdx*1+0x4],0x2
   14003644a:	jne    0x140036454
   14003644c:	add    ebx,DWORD PTR [rdi+0x68]
   14003644f:	jmp    0x14003731b
   140036454:	dec    QWORD PTR [rdi+0x60]
   140036458:	mov    rdx,QWORD PTR [rdi+0x60]
   14003645c:	mov    rax,QWORD PTR [rdi+0x8]
   140036460:	mov    rcx,QWORD PTR [rax]
   140036463:	movzx  eax,BYTE PTR [rdx]
   140036466:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   14003646b:	je     0x140036488
   14003646d:	nop    DWORD PTR [rax]
   140036470:	dec    rdx
   140036473:	mov    QWORD PTR [rdi+0x60],rdx
   140036477:	mov    rax,QWORD PTR [rdi+0x8]
   14003647b:	mov    rcx,QWORD PTR [rax]
   14003647e:	movzx  eax,BYTE PTR [rdx]
   140036481:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036486:	jne    0x140036470
   140036488:	mov    QWORD PTR [rbp+0x0],0xf
   140036490:	mov    QWORD PTR [rbp-0x8],r13
   140036494:	mov    BYTE PTR [rbp-0x18],r13b
   140036498:	mov    r8d,0x34
   14003649e:	lea    rdx,[rip+0x1892b]        # 0x14004edd0
   1400364a5:	lea    rcx,[rbp-0x18]
   1400364a9:	call   0x140005154
   1400364ae:	nop
   1400364af:	mov    rbx,QWORD PTR [rdi+0x60]
   1400364b3:	sub    rbx,QWORD PTR [rdi+0x50]
   1400364b7:	mov    QWORD PTR [rsp+0x50],0xf
   1400364c0:	mov    QWORD PTR [rsp+0x48],r13
   1400364c5:	mov    BYTE PTR [rsp+0x38],0x0
   1400364ca:	or     r9,0xffffffffffffffff
   1400364ce:	xor    r8d,r8d
   1400364d1:	lea    rdx,[rbp-0x18]
   1400364d5:	lea    rcx,[rsp+0x38]
   1400364da:	call   0x1400048b8
   1400364df:	mov    QWORD PTR [rsp+0x20],rbx
   1400364e4:	lea    r9,[rsp+0x38]
   1400364e9:	mov    r8,rbx
   1400364ec:	mov    edx,0x14
   1400364f1:	mov    rcx,rdi
   1400364f4:	call   0x140031400
   1400364f9:	nop
   1400364fa:	cmp    QWORD PTR [rbp+0x0],0x10
   1400364ff:	jb     0x140037a8b
   140036505:	mov    rcx,QWORD PTR [rbp-0x18]
   140036509:	call   0x14002b150
   14003650e:	jmp    0x140037a8b
   140036513:	lea    rax,[r8+0x1]
   140036517:	mov    QWORD PTR [rdi+0x60],rax
   14003651b:	mov    r9,rdx
   14003651e:	mov    r8d,0xa
   140036524:	mov    rdx,QWORD PTR [rdi+0x58]
   140036528:	lea    rcx,[rdi+0x60]
   14003652c:	call   0x14002eda0
   140036531:	test   eax,eax
   140036533:	jg     0x14003653e
   140036535:	dec    QWORD PTR [rdi+0x60]
   140036539:	jmp    0x140037361
   14003653e:	mov    ebx,DWORD PTR [rdi+0x68]
   140036541:	sub    ebx,eax
   140036543:	inc    ebx
   140036545:	test   ebx,ebx
   140036547:	jg     0x14003731b
   14003654d:	dec    QWORD PTR [rdi+0x60]
   140036551:	mov    rdx,QWORD PTR [rdi+0x60]
   140036555:	mov    rax,QWORD PTR [rdi+0x8]
   140036559:	mov    rcx,QWORD PTR [rax]
   14003655c:	movzx  eax,BYTE PTR [rdx]
   14003655f:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036564:	je     0x140036588
   140036566:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036570:	dec    rdx
   140036573:	mov    QWORD PTR [rdi+0x60],rdx
   140036577:	mov    rax,QWORD PTR [rdi+0x8]
   14003657b:	mov    rcx,QWORD PTR [rax]
   14003657e:	movzx  eax,BYTE PTR [rdx]
   140036581:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036586:	jne    0x140036570
   140036588:	mov    QWORD PTR [rbp-0x28],0xf
   140036590:	mov    QWORD PTR [rbp-0x30],r13
   140036594:	mov    BYTE PTR [rbp-0x40],r13b
   140036598:	mov    r8d,0x34
   14003659e:	lea    rdx,[rip+0x1882b]        # 0x14004edd0
   1400365a5:	lea    rcx,[rbp-0x40]
   1400365a9:	call   0x140005154
   1400365ae:	nop
   1400365af:	mov    rbx,QWORD PTR [rdi+0x60]
   1400365b3:	sub    rbx,QWORD PTR [rdi+0x50]
   1400365b7:	mov    QWORD PTR [rsp+0x50],0xf
   1400365c0:	mov    QWORD PTR [rsp+0x48],r13
   1400365c5:	mov    BYTE PTR [rsp+0x38],0x0
   1400365ca:	or     r9,0xffffffffffffffff
   1400365ce:	xor    r8d,r8d
   1400365d1:	lea    rdx,[rbp-0x40]
   1400365d5:	lea    rcx,[rsp+0x38]
   1400365da:	call   0x1400048b8
   1400365df:	mov    QWORD PTR [rsp+0x20],rbx
   1400365e4:	lea    r9,[rsp+0x38]
   1400365e9:	mov    r8,rbx
   1400365ec:	mov    edx,0x14
   1400365f1:	mov    rcx,rdi
   1400365f4:	call   0x140031400
   1400365f9:	nop
   1400365fa:	cmp    QWORD PTR [rbp-0x28],0x10
   1400365ff:	jb     0x140037a8b
   140036605:	mov    rcx,QWORD PTR [rbp-0x40]
   140036609:	call   0x14002b150
   14003660e:	jmp    0x140037a8b
   140036613:	or     r13d,0xffffffff
   140036617:	mov    DWORD PTR [r12+0x10],r13d
   14003661c:	inc    QWORD PTR [rdi+0x60]
   140036620:	lea    edx,[r13+0x11]
   140036624:	lea    r8d,[r13+0x19]
   140036628:	mov    rcx,rdi
   14003662b:	call   0x14002eb10
   140036630:	mov    r15,rax
   140036633:	mov    r8,QWORD PTR [rdi]
   140036636:	sub    r15,QWORD PTR [r8+0x168]
   14003663d:	mov    rcx,QWORD PTR [r8+0x168]
   140036644:	mov    rdx,QWORD PTR [r8+0x170]
   14003664b:	sub    rdx,rcx
   14003664e:	add    rdx,0x7
   140036652:	and    rdx,0xfffffffffffffff8
   140036656:	add    rdx,rcx
   140036659:	mov    QWORD PTR [r8+0x170],rdx
   140036660:	mov    rcx,QWORD PTR [rdi]
   140036663:	mov    rax,QWORD PTR [rcx+0x170]
   14003666a:	sub    rax,QWORD PTR [rcx+0x168]
   140036671:	mov    QWORD PTR [rdi+0x80],rax
   140036678:	jmp    0x140037465
   14003667d:	mov    r13d,0xfffffffe
   140036683:	mov    DWORD PTR [r12+0x10],r13d
   140036688:	inc    QWORD PTR [rdi+0x60]
   14003668c:	mov    edx,0x10
   140036691:	lea    r8d,[rdx+0x8]
   140036695:	mov    rcx,rdi
   140036698:	call   0x14002eb10
   14003669d:	mov    r15,rax
   1400366a0:	mov    rdx,QWORD PTR [rdi]
   1400366a3:	sub    r15,QWORD PTR [rdx+0x168]
   1400366aa:	mov    rax,QWORD PTR [rdx+0x168]
   1400366b1:	mov    rcx,QWORD PTR [rdx+0x170]
   1400366b8:	sub    rcx,rax
   1400366bb:	add    rcx,0x7
   1400366bf:	and    rcx,0xfffffffffffffff8
   1400366c3:	add    rcx,rax
   1400366c6:	mov    QWORD PTR [rdx+0x170],rcx
   1400366cd:	jmp    0x140036660
   1400366cf:	inc    r8
   1400366d2:	mov    QWORD PTR [rdi+0x60],r8
   1400366d6:	cmp    r8,QWORD PTR [rdi+0x58]
   1400366da:	jne    0x140036713
   1400366dc:	dec    r8
   1400366df:	mov    QWORD PTR [rdi+0x60],r8
   1400366e3:	movzx  ecx,BYTE PTR [r8]
   1400366e7:	mov    rax,QWORD PTR [rdx]
   1400366ea:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   1400366ef:	je     0x14003670a
   1400366f1:	dec    r8
   1400366f4:	mov    QWORD PTR [rdi+0x60],r8
   1400366f8:	movzx  edx,BYTE PTR [r8]
   1400366fc:	mov    rax,QWORD PTR [rdi+0x8]
   140036700:	mov    rcx,QWORD PTR [rax]
   140036703:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036708:	jne    0x1400366f1
   14003670a:	mov    r8,QWORD PTR [rdi+0x60]
   14003670e:	jmp    0x140037a7a
   140036713:	mov    rcx,QWORD PTR [rdx]
   140036716:	movzx  eax,BYTE PTR [r8]
   14003671a:	movzx  edx,BYTE PTR [rax+rcx*1+0x4]
   14003671f:	cmp    dl,0x35
   140036722:	jne    0x140036731
   140036724:	mov    r13d,0xfffffffe
   14003672a:	mov    DWORD PTR [r12+0x10],r13d
   14003672f:	jmp    0x14003673f
   140036731:	cmp    dl,0x25
   140036734:	jne    0x14003679d
   140036736:	or     r13d,0xffffffff
   14003673a:	mov    DWORD PTR [r12+0x10],r13d
   14003673f:	inc    QWORD PTR [rdi+0x60]
   140036743:	mov    edx,0x10
   140036748:	lea    r8d,[rdx+0x8]
   14003674c:	mov    rcx,rdi
   14003674f:	call   0x14002eb10
   140036754:	mov    r15,rax
   140036757:	mov    rax,QWORD PTR [rdi]
   14003675a:	sub    r15,QWORD PTR [rax+0x168]
   140036761:	mov    edx,0x1a
   140036766:	lea    r8d,[rdx-0x2]
   14003676a:	mov    rcx,rdi
   14003676d:	call   0x14002eb10
   140036772:	mov    r11,QWORD PTR [rdi]
   140036775:	mov    rax,QWORD PTR [r11+0x168]
   14003677c:	mov    rcx,QWORD PTR [r11+0x170]
   140036783:	sub    rcx,rax
   140036786:	add    rcx,0x7
   14003678a:	and    rcx,0xfffffffffffffff8
   14003678e:	add    rcx,rax
   140036791:	mov    QWORD PTR [r11+0x170],rcx
   140036798:	jmp    0x140036660
   14003679d:	mov    bl,0x3e
   14003679f:	lea    rax,[r8-0x1]
   1400367a3:	mov    QWORD PTR [rdi+0x60],rax
   1400367a7:	jmp    0x14003703e
   1400367ac:	mov    r13d,0xfffffffd
   1400367b2:	jmp    0x140036683
   1400367b7:	mov    r13d,0xfffffffc
   1400367bd:	mov    DWORD PTR [r12+0x10],r13d
   1400367c2:	inc    QWORD PTR [rdi+0x60]
   1400367c6:	mov    r8,QWORD PTR [rdi+0x60]
   1400367ca:	mov    rdx,QWORD PTR [rdi+0x58]
   1400367ce:	cmp    r8,rdx
   1400367d1:	jne    0x140036812
   1400367d3:	dec    r8
   1400367d6:	mov    QWORD PTR [rdi+0x60],r8
   1400367da:	movzx  edx,BYTE PTR [r8]
   1400367de:	mov    rax,QWORD PTR [rdi+0x8]
   1400367e2:	mov    rcx,QWORD PTR [rax]
   1400367e5:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400367ea:	je     0x140036809
   1400367ec:	nop    DWORD PTR [rax+0x0]
   1400367f0:	dec    r8
   1400367f3:	mov    QWORD PTR [rdi+0x60],r8
   1400367f7:	movzx  edx,BYTE PTR [r8]
   1400367fb:	mov    rax,QWORD PTR [rdi+0x8]
   1400367ff:	mov    rcx,QWORD PTR [rax]
   140036802:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036807:	jne    0x1400367f0
   140036809:	mov    r8,QWORD PTR [rdi+0x60]
   14003680d:	jmp    0x140037a7a
   140036812:	mov    r9,QWORD PTR [rdi+0x8]
   140036816:	mov    r8d,0xa
   14003681c:	lea    rcx,[rdi+0x60]
   140036820:	call   0x14002eda0
   140036825:	mov    ebx,eax
   140036827:	mov    r8,QWORD PTR [rdi+0x60]
   14003682b:	movzx  r9d,BYTE PTR [r8]
   14003682f:	cmp    r9b,0x52
   140036833:	jne    0x140036a02
   140036839:	lea    rax,[r8+0x1]
   14003683d:	mov    QWORD PTR [rdi+0x60],rax
   140036841:	mov    r10,QWORD PTR [rdi+0x58]
   140036845:	cmp    rax,r10
   140036848:	jne    0x140036892
   14003684a:	lea    r8,[rax-0x1]
   14003684e:	mov    QWORD PTR [rdi+0x60],r8
   140036852:	movzx  edx,BYTE PTR [r8]
   140036856:	mov    rax,QWORD PTR [rdi+0x8]
   14003685a:	mov    rcx,QWORD PTR [rax]
   14003685d:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036862:	je     0x140036889
   140036864:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036870:	dec    r8
   140036873:	mov    QWORD PTR [rdi+0x60],r8
   140036877:	movzx  edx,BYTE PTR [r8]
   14003687b:	mov    rax,QWORD PTR [rdi+0x8]
   14003687f:	mov    rcx,QWORD PTR [rax]
   140036882:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036887:	jne    0x140036870
   140036889:	mov    r8,QWORD PTR [rdi+0x60]
   14003688d:	jmp    0x140037a7a
   140036892:	cmp    BYTE PTR [rax],0x26
   140036895:	jne    0x140036928
   14003689b:	lea    r9,[rax+0x1]
   14003689f:	mov    QWORD PTR [rdi+0x60],r9
   1400368a3:	cmp    r9,r10
   1400368a6:	je     0x1400368d3
   1400368a8:	mov    r8,QWORD PTR [rdi+0x8]
   1400368ac:	nop    DWORD PTR [rax+0x0]
   1400368b0:	mov    rcx,QWORD PTR [r8]
   1400368b3:	mov    rdx,QWORD PTR [rdi+0x60]
   1400368b7:	movzx  eax,BYTE PTR [rdx]
   1400368ba:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   1400368bf:	je     0x1400368d3
   1400368c1:	lea    rax,[rdx+0x1]
   1400368c5:	mov    QWORD PTR [rdi+0x60],rax
   1400368c9:	mov    rax,QWORD PTR [rdi+0x58]
   1400368cd:	cmp    QWORD PTR [rdi+0x60],rax
   1400368d1:	jne    0x1400368b0
   1400368d3:	mov    rdx,QWORD PTR [rdi+0x60]
   1400368d7:	cmp    rdx,r10
   1400368da:	jne    0x14003691e
   1400368dc:	lea    r8,[rdx-0x1]
   1400368e0:	mov    QWORD PTR [rdi+0x60],r8
   1400368e4:	movzx  edx,BYTE PTR [r8]
   1400368e8:	mov    rax,QWORD PTR [rdi+0x8]
   1400368ec:	mov    rcx,QWORD PTR [rax]
   1400368ef:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400368f4:	je     0x140037a7a
   1400368fa:	nop    WORD PTR [rax+rax*1+0x0]
   140036900:	dec    r8
   140036903:	mov    QWORD PTR [rdi+0x60],r8
   140036907:	movzx  edx,BYTE PTR [r8]
   14003690b:	mov    rax,QWORD PTR [rdi+0x8]
   14003690f:	mov    rcx,QWORD PTR [rax]
   140036912:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036917:	jne    0x140036900
   140036919:	jmp    0x140037a7a
   14003691e:	mov    rcx,r9
   140036921:	call   0x14002d8c0
   140036926:	jmp    0x14003693e
   140036928:	mov    r9,QWORD PTR [rdi+0x8]
   14003692c:	mov    r8d,0xa
   140036932:	mov    rdx,r10
   140036935:	lea    rcx,[rdi+0x60]
   140036939:	call   0x14002eda0
   14003693e:	mov    ebx,eax
   140036940:	neg    ebx
   140036942:	mov    edx,0x1b
   140036947:	lea    r8d,[rdx-0x3]
   14003694b:	mov    rcx,rdi
   14003694e:	call   0x14002eb10
   140036953:	test   ebx,ebx
   140036955:	jns    0x14003695b
   140036957:	dec    ebx
   140036959:	jmp    0x14003695d
   14003695b:	xor    ebx,ebx
   14003695d:	mov    DWORD PTR [rax+0x10],ebx
   140036960:	mov    rdx,QWORD PTR [rdi+0x8]
   140036964:	mov    rcx,QWORD PTR [rdx]
   140036967:	mov    r8,QWORD PTR [rdi+0x60]
   14003696b:	movzx  eax,BYTE PTR [r8]
   14003696f:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   140036974:	je     0x1400369ae
   140036976:	dec    r8
   140036979:	mov    QWORD PTR [rdi+0x60],r8
   14003697d:	movzx  ecx,BYTE PTR [r8]
   140036981:	mov    rax,QWORD PTR [rdx]
   140036984:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036989:	je     0x140037a7a
   14003698f:	nop
   140036990:	dec    r8
   140036993:	mov    QWORD PTR [rdi+0x60],r8
   140036997:	movzx  edx,BYTE PTR [r8]
   14003699b:	mov    rax,QWORD PTR [rdi+0x8]
   14003699f:	mov    rcx,QWORD PTR [rax]
   1400369a2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400369a7:	jne    0x140036990
   1400369a9:	jmp    0x140037a7a
   1400369ae:	inc    r8
   1400369b1:	mov    QWORD PTR [rdi+0x60],r8
   1400369b5:	cmp    r8,QWORD PTR [rdi+0x58]
   1400369b9:	jne    0x140037465
   1400369bf:	dec    r8
   1400369c2:	mov    QWORD PTR [rdi+0x60],r8
   1400369c6:	movzx  ecx,BYTE PTR [r8]
   1400369ca:	mov    rax,QWORD PTR [rdx]
   1400369cd:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   1400369d2:	je     0x1400369f9
   1400369d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400369e0:	dec    r8
   1400369e3:	mov    QWORD PTR [rdi+0x60],r8
   1400369e7:	movzx  edx,BYTE PTR [r8]
   1400369eb:	mov    rax,QWORD PTR [rdi+0x8]
   1400369ef:	mov    rcx,QWORD PTR [rax]
   1400369f2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400369f7:	jne    0x1400369e0
   1400369f9:	mov    r8,QWORD PTR [rdi+0x60]
   1400369fd:	jmp    0x140037a7a
   140036a02:	cmp    r9b,0x27
   140036a06:	je     0x140036ddf
   140036a0c:	cmp    r9b,0x3c
   140036a10:	je     0x140036ddf
   140036a16:	cmp    r9b,0x44
   140036a1a:	jne    0x140036b5e
   140036a20:	lea    rcx,[rip+0x1839d]        # 0x14004edc4
   140036a27:	mov    r8,QWORD PTR [rdi+0x58]
   140036a2b:	nop    DWORD PTR [rax+rax*1+0x0]
   140036a30:	mov    rdx,QWORD PTR [rdi+0x60]
   140036a34:	cmp    rdx,r8
   140036a37:	je     0x140036a50
   140036a39:	movzx  eax,BYTE PTR [rcx]
   140036a3c:	cmp    BYTE PTR [rdx],al
   140036a3e:	jne    0x140036a50
   140036a40:	lea    rax,[rdx+0x1]
   140036a44:	mov    QWORD PTR [rdi+0x60],rax
   140036a48:	inc    rcx
   140036a4b:	cmp    BYTE PTR [rcx],r15b
   140036a4e:	jne    0x140036a30
   140036a50:	mov    rax,QWORD PTR [rdi+0x60]
   140036a54:	cmp    rax,r8
   140036a57:	je     0x140036b22
   140036a5d:	cmp    BYTE PTR [rcx],r15b
   140036a60:	jne    0x140036b22
   140036a66:	mov    edx,0x1b
   140036a6b:	lea    r8d,[rdx-0x3]
   140036a6f:	mov    rcx,rdi
   140036a72:	call   0x14002eb10
   140036a77:	mov    DWORD PTR [rax+0x10],0x270f
   140036a7e:	mov    rdx,QWORD PTR [rdi+0x8]
   140036a82:	mov    rcx,QWORD PTR [rdx]
   140036a85:	mov    r8,QWORD PTR [rdi+0x60]
   140036a89:	movzx  eax,BYTE PTR [r8]
   140036a8d:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   140036a92:	je     0x140036ace
   140036a94:	dec    r8
   140036a97:	mov    QWORD PTR [rdi+0x60],r8
   140036a9b:	movzx  ecx,BYTE PTR [r8]
   140036a9f:	mov    rax,QWORD PTR [rdx]
   140036aa2:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036aa7:	je     0x140037a7a
   140036aad:	nop    DWORD PTR [rax]
   140036ab0:	dec    r8
   140036ab3:	mov    QWORD PTR [rdi+0x60],r8
   140036ab7:	movzx  edx,BYTE PTR [r8]
   140036abb:	mov    rax,QWORD PTR [rdi+0x8]
   140036abf:	mov    rcx,QWORD PTR [rax]
   140036ac2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036ac7:	jne    0x140036ab0
   140036ac9:	jmp    0x140037a7a
   140036ace:	inc    r8
   140036ad1:	mov    QWORD PTR [rdi+0x60],r8
   140036ad5:	cmp    r8,QWORD PTR [rdi+0x58]
   140036ad9:	jne    0x140037465
   140036adf:	dec    r8
   140036ae2:	mov    QWORD PTR [rdi+0x60],r8
   140036ae6:	movzx  ecx,BYTE PTR [r8]
   140036aea:	mov    rax,QWORD PTR [rdx]
   140036aed:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036af2:	je     0x140036b19
   140036af4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036b00:	dec    r8
   140036b03:	mov    QWORD PTR [rdi+0x60],r8
   140036b07:	movzx  edx,BYTE PTR [r8]
   140036b0b:	mov    rax,QWORD PTR [rdi+0x8]
   140036b0f:	mov    rcx,QWORD PTR [rax]
   140036b12:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036b17:	jne    0x140036b00
   140036b19:	mov    r8,QWORD PTR [rdi+0x60]
   140036b1d:	jmp    0x140037a7a
   140036b22:	lea    r8,[rax-0x1]
   140036b26:	mov    QWORD PTR [rdi+0x60],r8
   140036b2a:	movzx  edx,BYTE PTR [r8]
   140036b2e:	mov    rax,QWORD PTR [rdi+0x8]
   140036b32:	mov    rcx,QWORD PTR [rax]
   140036b35:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036b3a:	je     0x140037a7a
   140036b40:	dec    r8
   140036b43:	mov    QWORD PTR [rdi+0x60],r8
   140036b47:	movzx  edx,BYTE PTR [r8]
   140036b4b:	mov    rax,QWORD PTR [rdi+0x8]
   140036b4f:	mov    rcx,QWORD PTR [rax]
   140036b52:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036b57:	jne    0x140036b40
   140036b59:	jmp    0x140037a7a
   140036b5e:	test   eax,eax
   140036b60:	jle    0x140036c22
   140036b66:	mov    edx,0x1b
   140036b6b:	lea    r8d,[rdx-0x3]
   140036b6f:	mov    rcx,rdi
   140036b72:	call   0x14002eb10
   140036b77:	mov    DWORD PTR [rax+0x10],ebx
   140036b7a:	mov    rdx,QWORD PTR [rdi+0x8]
   140036b7e:	mov    rcx,QWORD PTR [rdx]
   140036b81:	mov    r8,QWORD PTR [rdi+0x60]
   140036b85:	movzx  eax,BYTE PTR [r8]
   140036b89:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   140036b8e:	je     0x140036bce
   140036b90:	dec    r8
   140036b93:	mov    QWORD PTR [rdi+0x60],r8
   140036b97:	movzx  ecx,BYTE PTR [r8]
   140036b9b:	mov    rax,QWORD PTR [rdx]
   140036b9e:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036ba3:	je     0x140037a7a
   140036ba9:	nop    DWORD PTR [rax+0x0]
   140036bb0:	dec    r8
   140036bb3:	mov    QWORD PTR [rdi+0x60],r8
   140036bb7:	movzx  edx,BYTE PTR [r8]
   140036bbb:	mov    rax,QWORD PTR [rdi+0x8]
   140036bbf:	mov    rcx,QWORD PTR [rax]
   140036bc2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036bc7:	jne    0x140036bb0
   140036bc9:	jmp    0x140037a7a
   140036bce:	inc    r8
   140036bd1:	mov    QWORD PTR [rdi+0x60],r8
   140036bd5:	cmp    r8,QWORD PTR [rdi+0x58]
   140036bd9:	jne    0x140037465
   140036bdf:	dec    r8
   140036be2:	mov    QWORD PTR [rdi+0x60],r8
   140036be6:	movzx  ecx,BYTE PTR [r8]
   140036bea:	mov    rax,QWORD PTR [rdx]
   140036bed:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036bf2:	je     0x140036c19
   140036bf4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036c00:	dec    r8
   140036c03:	mov    QWORD PTR [rdi+0x60],r8
   140036c07:	movzx  edx,BYTE PTR [r8]
   140036c0b:	mov    rax,QWORD PTR [rdi+0x8]
   140036c0f:	mov    rcx,QWORD PTR [rax]
   140036c12:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036c17:	jne    0x140036c00
   140036c19:	mov    r8,QWORD PTR [rdi+0x60]
   140036c1d:	jmp    0x140037a7a
   140036c22:	mov    rdx,QWORD PTR [rdi+0x8]
   140036c26:	mov    rcx,QWORD PTR [rdx]
   140036c29:	movzx  eax,r9b
   140036c2d:	cmp    BYTE PTR [rax+rcx*1+0x4],0x8
   140036c32:	je     0x140036c6e
   140036c34:	dec    r8
   140036c37:	mov    QWORD PTR [rdi+0x60],r8
   140036c3b:	movzx  ecx,BYTE PTR [r8]
   140036c3f:	mov    rax,QWORD PTR [rdx]
   140036c42:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036c47:	je     0x140037a7a
   140036c4d:	nop    DWORD PTR [rax]
   140036c50:	dec    r8
   140036c53:	mov    QWORD PTR [rdi+0x60],r8
   140036c57:	movzx  edx,BYTE PTR [r8]
   140036c5b:	mov    rax,QWORD PTR [rdi+0x8]
   140036c5f:	mov    rcx,QWORD PTR [rax]
   140036c62:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036c67:	jne    0x140036c50
   140036c69:	jmp    0x140037a7a
   140036c6e:	lea    rcx,[r8+0x1]
   140036c72:	mov    QWORD PTR [rdi+0x60],rcx
   140036c76:	mov    r9,QWORD PTR [rdi+0x58]
   140036c7a:	cmp    rcx,r9
   140036c7d:	jne    0x140036cc2
   140036c7f:	lea    r8,[rcx-0x1]
   140036c83:	mov    QWORD PTR [rdi+0x60],r8
   140036c87:	movzx  ecx,BYTE PTR [r8]
   140036c8b:	mov    rax,QWORD PTR [rdx]
   140036c8e:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036c93:	je     0x140036cb9
   140036c95:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036ca0:	dec    r8
   140036ca3:	mov    QWORD PTR [rdi+0x60],r8
   140036ca7:	movzx  edx,BYTE PTR [r8]
   140036cab:	mov    rax,QWORD PTR [rdi+0x8]
   140036caf:	mov    rcx,QWORD PTR [rax]
   140036cb2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036cb7:	jne    0x140036ca0
   140036cb9:	mov    r8,QWORD PTR [rdi+0x60]
   140036cbd:	jmp    0x140037a7a
   140036cc2:	mov    rax,QWORD PTR [rdx]
   140036cc5:	movzx  r8d,BYTE PTR [rcx]
   140036cc9:	cmp    BYTE PTR [r8+rax*1+0x4],0x14
   140036ccf:	jne    0x140036d7f
   140036cd5:	inc    rcx
   140036cd8:	mov    QWORD PTR [rdi+0x60],rcx
   140036cdc:	cmp    rcx,r9
   140036cdf:	jne    0x140036d22
   140036ce1:	lea    r8,[rcx-0x1]
   140036ce5:	mov    QWORD PTR [rdi+0x60],r8
   140036ce9:	movzx  ecx,BYTE PTR [r8]
   140036ced:	mov    rax,QWORD PTR [rdx]
   140036cf0:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036cf5:	je     0x140036d19
   140036cf7:	nop    WORD PTR [rax+rax*1+0x0]
   140036d00:	dec    r8
   140036d03:	mov    QWORD PTR [rdi+0x60],r8
   140036d07:	movzx  edx,BYTE PTR [r8]
   140036d0b:	mov    rax,QWORD PTR [rdi+0x8]
   140036d0f:	mov    rcx,QWORD PTR [rax]
   140036d12:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036d17:	jne    0x140036d00
   140036d19:	mov    r8,QWORD PTR [rdi+0x60]
   140036d1d:	jmp    0x140037a7a
   140036d22:	mov    rax,QWORD PTR [rdx]
   140036d25:	movzx  r8d,BYTE PTR [rcx]
   140036d29:	cmp    BYTE PTR [rax+r8*1+0x4],0x25
   140036d2f:	je     0x140036d72
   140036d31:	cmp    BYTE PTR [r8+rax*1+0x4],0x35
   140036d37:	je     0x140036d72
   140036d39:	lea    r8,[rcx-0x1]
   140036d3d:	mov    QWORD PTR [rdi+0x60],r8
   140036d41:	movzx  ecx,BYTE PTR [r8]
   140036d45:	mov    rax,QWORD PTR [rdx]
   140036d48:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036d4d:	je     0x140036d69
   140036d4f:	nop
   140036d50:	dec    r8
   140036d53:	mov    QWORD PTR [rdi+0x60],r8
   140036d57:	movzx  edx,BYTE PTR [r8]
   140036d5b:	mov    rax,QWORD PTR [rdi+0x8]
   140036d5f:	mov    rcx,QWORD PTR [rax]
   140036d62:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036d67:	jne    0x140036d50
   140036d69:	mov    r8,QWORD PTR [rdi+0x60]
   140036d6d:	jmp    0x140037a7a
   140036d72:	lea    rax,[rcx-0x3]
   140036d76:	mov    QWORD PTR [rdi+0x60],rax
   140036d7a:	jmp    0x140037465
   140036d7f:	cmp    BYTE PTR [r8+rax*1+0x4],0x25
   140036d85:	je     0x140036dd2
   140036d87:	cmp    BYTE PTR [r8+rax*1+0x4],0x35
   140036d8d:	je     0x140036dd2
   140036d8f:	lea    r8,[rcx-0x1]
   140036d93:	mov    QWORD PTR [rdi+0x60],r8
   140036d97:	movzx  ecx,BYTE PTR [r8]
   140036d9b:	mov    rax,QWORD PTR [rdx]
   140036d9e:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036da3:	je     0x140036dc9
   140036da5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036db0:	dec    r8
   140036db3:	mov    QWORD PTR [rdi+0x60],r8
   140036db7:	movzx  edx,BYTE PTR [r8]
   140036dbb:	mov    rax,QWORD PTR [rdi+0x8]
   140036dbf:	mov    rcx,QWORD PTR [rax]
   140036dc2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036dc7:	jne    0x140036db0
   140036dc9:	mov    r8,QWORD PTR [rdi+0x60]
   140036dcd:	jmp    0x140037a7a
   140036dd2:	lea    rax,[rcx-0x2]
   140036dd6:	mov    QWORD PTR [rdi+0x60],rax
   140036dda:	jmp    0x140037465
   140036ddf:	lea    rcx,[r8+0x1]
   140036de3:	mov    QWORD PTR [rdi+0x60],rcx
   140036de7:	mov    r9,rcx
   140036dea:	mov    r8,QWORD PTR [rdi+0x58]
   140036dee:	cmp    rcx,r8
   140036df1:	je     0x140036e0e
   140036df3:	movzx  eax,BYTE PTR [rcx]
   140036df6:	cmp    al,0x3e
   140036df8:	je     0x140036e0e
   140036dfa:	cmp    al,0x27
   140036dfc:	je     0x140036e0e
   140036dfe:	inc    rcx
   140036e01:	mov    QWORD PTR [rdi+0x60],rcx
   140036e05:	mov    rax,QWORD PTR [rdi+0x58]
   140036e09:	cmp    rcx,rax
   140036e0c:	jne    0x140036df3
   140036e0e:	mov    rdx,QWORD PTR [rdi+0x60]
   140036e12:	cmp    rdx,r8
   140036e15:	jne    0x140036e5e
   140036e17:	lea    r8,[rdx-0x1]
   140036e1b:	mov    QWORD PTR [rdi+0x60],r8
   140036e1f:	movzx  edx,BYTE PTR [r8]
   140036e23:	mov    rax,QWORD PTR [rdi+0x8]
   140036e27:	mov    rcx,QWORD PTR [rax]
   140036e2a:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036e2f:	je     0x140037a7a
   140036e35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036e40:	dec    r8
   140036e43:	mov    QWORD PTR [rdi+0x60],r8
   140036e47:	movzx  edx,BYTE PTR [r8]
   140036e4b:	mov    rax,QWORD PTR [rdi+0x8]
   140036e4f:	mov    rcx,QWORD PTR [rax]
   140036e52:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036e57:	jne    0x140036e40
   140036e59:	jmp    0x140037a7a
   140036e5e:	mov    rcx,r9
   140036e61:	call   0x14002d8c0
   140036e66:	mov    ebx,eax
   140036e68:	mov    edx,0x1b
   140036e6d:	lea    r8d,[rdx-0x3]
   140036e71:	mov    rcx,rdi
   140036e74:	call   0x14002eb10
   140036e79:	mov    DWORD PTR [rax+0x10],ebx
   140036e7c:	mov    rdx,QWORD PTR [rdi+0x60]
   140036e80:	movzx  eax,BYTE PTR [rdx]
   140036e83:	cmp    al,0x3e
   140036e85:	je     0x140036e8b
   140036e87:	cmp    al,0x27
   140036e89:	jne    0x140036e9f
   140036e8b:	inc    rdx
   140036e8e:	mov    QWORD PTR [rdi+0x60],rdx
   140036e92:	mov    r10,QWORD PTR [rdi+0x58]
   140036e96:	cmp    rdx,r10
   140036e99:	jne    0x140036f65
   140036e9f:	dec    QWORD PTR [rdi+0x60]
   140036ea3:	mov    rdx,QWORD PTR [rdi+0x60]
   140036ea7:	mov    rax,QWORD PTR [rdi+0x8]
   140036eab:	mov    rcx,QWORD PTR [rax]
   140036eae:	movzx  eax,BYTE PTR [rdx]
   140036eb1:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036eb6:	je     0x140036ed8
   140036eb8:	nop    DWORD PTR [rax+rax*1+0x0]
   140036ec0:	dec    rdx
   140036ec3:	mov    QWORD PTR [rdi+0x60],rdx
   140036ec7:	mov    rax,QWORD PTR [rdi+0x8]
   140036ecb:	mov    rcx,QWORD PTR [rax]
   140036ece:	movzx  eax,BYTE PTR [rdx]
   140036ed1:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140036ed6:	jne    0x140036ec0
   140036ed8:	mov    QWORD PTR [rbp-0x50],0xf
   140036ee0:	xor    r12d,r12d
   140036ee3:	mov    QWORD PTR [rbp-0x58],r12
   140036ee7:	mov    BYTE PTR [rbp-0x68],r12b
   140036eeb:	lea    r8d,[r12+0x1b]
   140036ef0:	lea    rdx,[rip+0x17eb1]        # 0x14004eda8
   140036ef7:	lea    rcx,[rbp-0x68]
   140036efb:	call   0x140005154
   140036f00:	nop
   140036f01:	mov    rbx,QWORD PTR [rdi+0x60]
   140036f05:	sub    rbx,QWORD PTR [rdi+0x50]
   140036f09:	mov    QWORD PTR [rsp+0x50],0xf
   140036f12:	mov    QWORD PTR [rsp+0x48],r12
   140036f17:	mov    BYTE PTR [rsp+0x38],r12b
   140036f1c:	or     r9,0xffffffffffffffff
   140036f20:	xor    r8d,r8d
   140036f23:	lea    rdx,[rbp-0x68]
   140036f27:	lea    rcx,[rsp+0x38]
   140036f2c:	call   0x1400048b8
   140036f31:	mov    QWORD PTR [rsp+0x20],rbx
   140036f36:	lea    r9,[rsp+0x38]
   140036f3b:	mov    r8,rbx
   140036f3e:	lea    edx,[r12+0x14]
   140036f43:	mov    rcx,rdi
   140036f46:	call   0x140031400
   140036f4b:	nop
   140036f4c:	cmp    QWORD PTR [rbp-0x50],0x10
   140036f51:	jb     0x140037a8b
   140036f57:	mov    rcx,QWORD PTR [rbp-0x68]
   140036f5b:	call   0x14002b150
   140036f60:	jmp    0x140037a8b
   140036f65:	mov    r9,QWORD PTR [rdi+0x8]
   140036f69:	mov    rcx,QWORD PTR [r9]
   140036f6c:	movzx  eax,BYTE PTR [rdx]
   140036f6f:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   140036f74:	je     0x140036fb2
   140036f76:	lea    r8,[rdx-0x1]
   140036f7a:	mov    QWORD PTR [rdi+0x60],r8
   140036f7e:	movzx  ecx,BYTE PTR [r8]
   140036f82:	mov    rax,QWORD PTR [r9]
   140036f85:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036f8a:	je     0x140036fa9
   140036f8c:	nop    DWORD PTR [rax+0x0]
   140036f90:	dec    r8
   140036f93:	mov    QWORD PTR [rdi+0x60],r8
   140036f97:	movzx  edx,BYTE PTR [r8]
   140036f9b:	mov    rax,QWORD PTR [rdi+0x8]
   140036f9f:	mov    rcx,QWORD PTR [rax]
   140036fa2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036fa7:	jne    0x140036f90
   140036fa9:	mov    r8,QWORD PTR [rdi+0x60]
   140036fad:	jmp    0x140037a7a
   140036fb2:	lea    r8,[rdx+0x1]
   140036fb6:	mov    QWORD PTR [rdi+0x60],r8
   140036fba:	cmp    r8,r10
   140036fbd:	jne    0x140037465
   140036fc3:	dec    r8
   140036fc6:	mov    QWORD PTR [rdi+0x60],r8
   140036fca:	movzx  ecx,BYTE PTR [r8]
   140036fce:	mov    rax,QWORD PTR [r9]
   140036fd1:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140036fd6:	je     0x140036ff9
   140036fd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140036fe0:	dec    r8
   140036fe3:	mov    QWORD PTR [rdi+0x60],r8
   140036fe7:	movzx  edx,BYTE PTR [r8]
   140036feb:	mov    rax,QWORD PTR [rdi+0x8]
   140036fef:	mov    rcx,QWORD PTR [rax]
   140036ff2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140036ff7:	jne    0x140036fe0
   140036ff9:	mov    r8,QWORD PTR [rdi+0x60]
   140036ffd:	jmp    0x140037a7a
   140037002:	dec    r8
   140037005:	mov    QWORD PTR [rdi+0x60],r8
   140037009:	movzx  ecx,BYTE PTR [r8]
   14003700d:	mov    rax,QWORD PTR [rdx]
   140037010:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140037015:	je     0x140037a7a
   14003701b:	nop    DWORD PTR [rax+rax*1+0x0]
   140037020:	dec    r8
   140037023:	mov    QWORD PTR [rdi+0x60],r8
   140037027:	movzx  edx,BYTE PTR [r8]
   14003702b:	mov    rax,QWORD PTR [rdi+0x8]
   14003702f:	mov    rcx,QWORD PTR [rax]
   140037032:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037037:	jne    0x140037020
   140037039:	jmp    0x140037a7a
   14003703e:	test   DWORD PTR [r9+0x30],0x400000
   140037046:	jne    0x14003707e
   140037048:	lea    r13d,[r10+0x1]
   14003704c:	mov    DWORD PTR [rdi+0x68],r13d
   140037050:	test   DWORD PTR [r9+0x30],0x800000
   140037058:	je     0x14003707e
   14003705a:	mov    rax,QWORD PTR [rdi+0x60]
   14003705e:	sub    rax,QWORD PTR [rdi+0x50]
   140037062:	add    rax,0xfffffffffffffffe
   140037066:	mov    QWORD PTR [rbp-0x80],rax
   14003706a:	mov    QWORD PTR [rbp-0x78],r15
   14003706e:	lea    rcx,[r9+0x180]
   140037075:	lea    rdx,[rbp-0x80]
   140037079:	call   0x1400360a0
   14003707e:	mov    DWORD PTR [r12+0x10],r13d
   140037083:	inc    QWORD PTR [rdi+0x60]
   140037087:	mov    rcx,QWORD PTR [rdi+0x60]
   14003708b:	mov    r10,rcx
   14003708e:	mov    rdx,QWORD PTR [rdi+0x58]
   140037092:	cmp    rcx,rdx
   140037095:	jne    0x1400370d3
   140037097:	lea    r8,[rcx-0x1]
   14003709b:	mov    QWORD PTR [rdi+0x60],r8
   14003709f:	movzx  edx,BYTE PTR [r8]
   1400370a3:	mov    rax,QWORD PTR [rdi+0x8]
   1400370a7:	mov    rcx,QWORD PTR [rax]
   1400370aa:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400370af:	je     0x1400370ca
   1400370b1:	dec    r8
   1400370b4:	mov    QWORD PTR [rdi+0x60],r8
   1400370b8:	movzx  edx,BYTE PTR [r8]
   1400370bc:	mov    rax,QWORD PTR [rdi+0x8]
   1400370c0:	mov    rcx,QWORD PTR [rax]
   1400370c3:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400370c8:	jne    0x1400370b1
   1400370ca:	mov    r8,QWORD PTR [rdi+0x60]
   1400370ce:	jmp    0x140037a7a
   1400370d3:	cmp    BYTE PTR [rcx],bl
   1400370d5:	je     0x1400370e4
   1400370d7:	inc    rcx
   1400370da:	mov    QWORD PTR [rdi+0x60],rcx
   1400370de:	cmp    rcx,QWORD PTR [rdi+0x58]
   1400370e2:	jne    0x1400370d3
   1400370e4:	mov    r8,QWORD PTR [rdi+0x60]
   1400370e8:	cmp    r8,rdx
   1400370eb:	jne    0x14003712e
   1400370ed:	dec    r8
   1400370f0:	mov    QWORD PTR [rdi+0x60],r8
   1400370f4:	movzx  edx,BYTE PTR [r8]
   1400370f8:	mov    rax,QWORD PTR [rdi+0x8]
   1400370fc:	mov    rcx,QWORD PTR [rax]
   1400370ff:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037104:	je     0x140037a7a
   14003710a:	nop    WORD PTR [rax+rax*1+0x0]
   140037110:	dec    r8
   140037113:	mov    QWORD PTR [rdi+0x60],r8
   140037117:	movzx  edx,BYTE PTR [r8]
   14003711b:	mov    rax,QWORD PTR [rdi+0x8]
   14003711f:	mov    rcx,QWORD PTR [rax]
   140037122:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037127:	jne    0x140037110
   140037129:	jmp    0x140037a7a
   14003712e:	mov    r9d,r13d
   140037131:	mov    rdx,r10
   140037134:	mov    rcx,QWORD PTR [rdi]
   140037137:	call   0x1400353a0
   14003713c:	jmp    0x140037461
   140037141:	cmp    bl,0x52
   140037144:	jne    0x1400371a2
   140037146:	inc    r8
   140037149:	mov    QWORD PTR [rdi+0x60],r8
   14003714d:	mov    ebx,r13d
   140037150:	mov    rcx,QWORD PTR [rdx]
   140037153:	movzx  eax,BYTE PTR [r8]
   140037157:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   14003715c:	je     0x14003731b
   140037162:	dec    r8
   140037165:	mov    QWORD PTR [rdi+0x60],r8
   140037169:	movzx  ecx,BYTE PTR [r8]
   14003716d:	mov    rax,QWORD PTR [rdx]
   140037170:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140037175:	je     0x140037199
   140037177:	nop    WORD PTR [rax+rax*1+0x0]
   140037180:	dec    r8
   140037183:	mov    QWORD PTR [rdi+0x60],r8
   140037187:	movzx  edx,BYTE PTR [r8]
   14003718b:	mov    rax,QWORD PTR [rdi+0x8]
   14003718f:	mov    rcx,QWORD PTR [rax]
   140037192:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037197:	jne    0x140037180
   140037199:	mov    r8,QWORD PTR [rdi+0x60]
   14003719d:	jmp    0x140037a7a
   1400371a2:	cmp    bl,0x26
   1400371a5:	jne    0x14003722e
   1400371ab:	inc    r8
   1400371ae:	mov    QWORD PTR [rdi+0x60],r8
   1400371b2:	mov    r10,r8
   1400371b5:	mov    r9,QWORD PTR [rdi+0x58]
   1400371b9:	cmp    r8,r9
   1400371bc:	je     0x1400371db
   1400371be:	xchg   ax,ax
   1400371c0:	mov    rcx,QWORD PTR [rdx]
   1400371c3:	movzx  eax,BYTE PTR [r8]
   1400371c7:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   1400371cc:	je     0x1400371db
   1400371ce:	inc    r8
   1400371d1:	mov    QWORD PTR [rdi+0x60],r8
   1400371d5:	cmp    r8,QWORD PTR [rdi+0x58]
   1400371d9:	jne    0x1400371c0
   1400371db:	mov    rax,QWORD PTR [rdi+0x60]
   1400371df:	cmp    rax,r9
   1400371e2:	jne    0x14003730e
   1400371e8:	lea    r8,[rax-0x1]
   1400371ec:	mov    QWORD PTR [rdi+0x60],r8
   1400371f0:	movzx  ecx,BYTE PTR [r8]
   1400371f4:	mov    rax,QWORD PTR [rdx]
   1400371f7:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   1400371fc:	je     0x140037a7a
   140037202:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037210:	dec    r8
   140037213:	mov    QWORD PTR [rdi+0x60],r8
   140037217:	movzx  edx,BYTE PTR [r8]
   14003721b:	mov    rax,QWORD PTR [rdi+0x8]
   14003721f:	mov    rcx,QWORD PTR [rax]
   140037222:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037227:	jne    0x140037210
   140037229:	jmp    0x140037a7a
   14003722e:	cmp    bl,0x50
   140037231:	jne    0x140037361
   140037237:	lea    rax,[r8+0x1]
   14003723b:	mov    QWORD PTR [rdi+0x60],rax
   14003723f:	mov    r9,QWORD PTR [rdi+0x58]
   140037243:	cmp    rax,r9
   140037246:	jne    0x140037282
   140037248:	lea    r8,[rax-0x1]
   14003724c:	mov    QWORD PTR [rdi+0x60],r8
   140037250:	movzx  ecx,BYTE PTR [r8]
   140037254:	mov    rax,QWORD PTR [rdx]
   140037257:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   14003725c:	je     0x140037279
   14003725e:	xchg   ax,ax
   140037260:	dec    r8
   140037263:	mov    QWORD PTR [rdi+0x60],r8
   140037267:	movzx  edx,BYTE PTR [r8]
   14003726b:	mov    rax,QWORD PTR [rdi+0x8]
   14003726f:	mov    rcx,QWORD PTR [rax]
   140037272:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037277:	jne    0x140037260
   140037279:	mov    r8,QWORD PTR [rdi+0x60]
   14003727d:	jmp    0x140037a7a
   140037282:	cmp    BYTE PTR [rax],0x3e
   140037285:	jne    0x140037361
   14003728b:	lea    r10,[rax+0x1]
   14003728f:	mov    QWORD PTR [rdi+0x60],r10
   140037293:	cmp    r10,r9
   140037296:	je     0x1400372c4
   140037298:	nop    DWORD PTR [rax+rax*1+0x0]
   1400372a0:	mov    rcx,QWORD PTR [rdx]
   1400372a3:	mov    r8,QWORD PTR [rdi+0x60]
   1400372a7:	movzx  eax,BYTE PTR [r8]
   1400372ab:	cmp    BYTE PTR [rax+rcx*1+0x4],0x2
   1400372b0:	je     0x1400372c4
   1400372b2:	lea    rax,[r8+0x1]
   1400372b6:	mov    QWORD PTR [rdi+0x60],rax
   1400372ba:	mov    rax,QWORD PTR [rdi+0x58]
   1400372be:	cmp    QWORD PTR [rdi+0x60],rax
   1400372c2:	jne    0x1400372a0
   1400372c4:	mov    rax,QWORD PTR [rdi+0x60]
   1400372c8:	cmp    rax,r9
   1400372cb:	jne    0x14003730e
   1400372cd:	lea    r8,[rax-0x1]
   1400372d1:	mov    QWORD PTR [rdi+0x60],r8
   1400372d5:	movzx  ecx,BYTE PTR [r8]
   1400372d9:	mov    rax,QWORD PTR [rdx]
   1400372dc:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   1400372e1:	je     0x140037a7a
   1400372e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400372f0:	dec    r8
   1400372f3:	mov    QWORD PTR [rdi+0x60],r8
   1400372f7:	movzx  edx,BYTE PTR [r8]
   1400372fb:	mov    rax,QWORD PTR [rdi+0x8]
   1400372ff:	mov    rcx,QWORD PTR [rax]
   140037302:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037307:	jne    0x1400372f0
   140037309:	jmp    0x140037a7a
   14003730e:	mov    rdx,rax
   140037311:	mov    rcx,r10
   140037314:	call   0x14002d8c0
   140037319:	mov    ebx,eax
   14003731b:	mov    DWORD PTR [r12+0x10],r13d
   140037320:	mov    edx,0x1d
   140037325:	lea    r8d,[rdx+0x3]
   140037329:	mov    rcx,rdi
   14003732c:	call   0x14002eb10
   140037331:	movsxd rcx,ebx
   140037334:	mov    QWORD PTR [rax+0x10],rcx
   140037338:	mov    DWORD PTR [rax+0x18],r13d
   14003733c:	mov    rax,QWORD PTR [rdi]
   14003733f:	mov    ebx,DWORD PTR [rax+0x30]
   140037342:	shr    ebx,0x14
   140037345:	and    bl,0x1
   140037348:	mov    edx,0x1c
   14003734d:	lea    r8d,[rdx-0x4]
   140037351:	mov    rcx,rdi
   140037354:	call   0x14002eb10
   140037359:	mov    BYTE PTR [rax+0x10],bl
   14003735c:	jmp    0x140037465
   140037361:	mov    rcx,rdi
   140037364:	call   0x1400337a0
   140037369:	mov    ebx,eax
   14003736b:	mov    r8,QWORD PTR [rdi+0x60]
   14003736f:	cmp    r8,QWORD PTR [rdi+0x58]
   140037373:	jne    0x1400373be
   140037375:	dec    r8
   140037378:	mov    QWORD PTR [rdi+0x60],r8
   14003737c:	movzx  edx,BYTE PTR [r8]
   140037380:	mov    rax,QWORD PTR [rdi+0x8]
   140037384:	mov    rcx,QWORD PTR [rax]
   140037387:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   14003738c:	je     0x140037a7a
   140037392:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400373a0:	dec    r8
   1400373a3:	mov    QWORD PTR [rdi+0x60],r8
   1400373a7:	movzx  edx,BYTE PTR [r8]
   1400373ab:	mov    rax,QWORD PTR [rdi+0x8]
   1400373af:	mov    rcx,QWORD PTR [rax]
   1400373b2:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   1400373b7:	jne    0x1400373a0
   1400373b9:	jmp    0x140037a7a
   1400373be:	mov    rax,QWORD PTR [rdi]
   1400373c1:	mov    ecx,DWORD PTR [rax+0x30]
   1400373c4:	mov    eax,ebx
   1400373c6:	shr    eax,0x14
   1400373c9:	shr    ecx,0x14
   1400373cc:	xor    al,cl
   1400373ce:	and    al,0x1
   1400373d0:	mov    BYTE PTR [rdi+0x88],al
   1400373d6:	mov    DWORD PTR [r12+0x10],r13d
   1400373db:	mov    rdx,QWORD PTR [rdi+0x8]
   1400373df:	mov    rax,QWORD PTR [rdx]
   1400373e2:	mov    r8,QWORD PTR [rdi+0x60]
   1400373e6:	movzx  ecx,BYTE PTR [r8]
   1400373ea:	cmp    BYTE PTR [rcx+rax*1+0x4],0x2
   1400373ef:	jne    0x14003741c
   1400373f1:	mov    rax,QWORD PTR [rdi]
   1400373f4:	mov    DWORD PTR [rax+0x30],ebx
   1400373f7:	shr    ebx,0x14
   1400373fa:	and    bl,0x1
   1400373fd:	cmp    BYTE PTR [rdi+0x18],bl
   140037400:	je     0x140037405
   140037402:	mov    BYTE PTR [rdi+0x18],bl
   140037405:	xor    r12b,r12b
   140037408:	movzx  r11d,BYTE PTR [rsp+0x30]
   14003740e:	or     r11b,BYTE PTR [rdi+0x88]
   140037415:	mov    BYTE PTR [rsp+0x30],r11b
   14003741a:	jmp    0x140037442
   14003741c:	cmp    BYTE PTR [rcx+rax*1+0x4],0x24
   140037421:	jne    0x140037a4c
   140037427:	mov    rax,QWORD PTR [rdi]
   14003742a:	mov    DWORD PTR [rax+0x30],ebx
   14003742d:	shr    ebx,0x14
   140037430:	and    bl,0x1
   140037433:	cmp    BYTE PTR [rdi+0x18],bl
   140037436:	je     0x14003743b
   140037438:	mov    BYTE PTR [rdi+0x18],bl
   14003743b:	inc    QWORD PTR [rdi+0x60]
   14003743f:	mov    r12b,0x1
   140037442:	cmp    BYTE PTR [rdi+0x88],r13b
   140037449:	je     0x140037470
   14003744b:	mov    edx,0x1c
   140037450:	lea    r8d,[rdx-0x4]
   140037454:	mov    rcx,rdi
   140037457:	call   0x14002eb10
   14003745c:	mov    BYTE PTR [rax+0x10],bl
   14003745f:	jmp    0x140037470
   140037461:	inc    QWORD PTR [rdi+0x60]
   140037465:	mov    r12b,0x1
   140037468:	nop    DWORD PTR [rax+rax*1+0x0]
   140037470:	mov    rax,QWORD PTR [rdi+0x58]
   140037474:	cmp    QWORD PTR [rdi+0x60],rax
   140037478:	je     0x140037484
   14003747a:	mov    rcx,rdi
   14003747d:	call   QWORD PTR [rdi+0x48]
   140037480:	test   al,al
   140037482:	jne    0x140037470
   140037484:	mov    rdx,QWORD PTR [rsp+0x68]
   140037489:	mov    rcx,rdi
   14003748c:	call   0x140032370
   140037491:	test   al,al
   140037493:	jne    0x140037549
   140037499:	dec    QWORD PTR [rdi+0x60]
   14003749d:	mov    rdx,QWORD PTR [rdi+0x60]
   1400374a1:	mov    rax,QWORD PTR [rdi+0x8]
   1400374a5:	mov    rcx,QWORD PTR [rax]
   1400374a8:	movzx  eax,BYTE PTR [rdx]
   1400374ab:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   1400374b0:	je     0x1400374ca
   1400374b2:	dec    rdx
   1400374b5:	mov    QWORD PTR [rdi+0x60],rdx
   1400374b9:	mov    rax,QWORD PTR [rdi+0x8]
   1400374bd:	mov    rcx,QWORD PTR [rax]
   1400374c0:	movzx  eax,BYTE PTR [rdx]
   1400374c3:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   1400374c8:	jne    0x1400374b2
   1400374ca:	mov    QWORD PTR [rbp-0x50],0xf
   1400374d2:	mov    QWORD PTR [rbp-0x58],0x0
   1400374da:	mov    BYTE PTR [rbp-0x68],0x0
   1400374de:	mov    r8d,0x32
   1400374e4:	lea    rdx,[rip+0x17885]        # 0x14004ed70
   1400374eb:	lea    rcx,[rbp-0x68]
   1400374ef:	call   0x140005154
   1400374f4:	nop
   1400374f5:	mov    rbx,QWORD PTR [rdi+0x60]
   1400374f9:	sub    rbx,QWORD PTR [rdi+0x50]
   1400374fd:	mov    QWORD PTR [rsp+0x50],0xf
   140037506:	mov    QWORD PTR [rsp+0x48],0x0
   14003750f:	mov    BYTE PTR [rsp+0x38],0x0
   140037514:	or     r9,0xffffffffffffffff
   140037518:	xor    r8d,r8d
   14003751b:	lea    rdx,[rbp-0x68]
   14003751f:	lea    rcx,[rsp+0x38]
   140037524:	call   0x1400048b8
   140037529:	mov    QWORD PTR [rsp+0x20],rbx
   14003752e:	lea    r9,[rsp+0x38]
   140037533:	mov    r8,rbx
   140037536:	mov    edx,0x14
   14003753b:	mov    rcx,rdi
   14003753e:	call   0x140031400
   140037543:	nop
   140037544:	jmp    0x140036f4c
   140037549:	mov    rax,QWORD PTR [rdi+0x60]
   14003754d:	mov    r8,QWORD PTR [rdi+0x58]
   140037551:	cmp    rax,r8
   140037554:	jne    0x140037593
   140037556:	lea    r9,[rax-0x1]
   14003755a:	mov    QWORD PTR [rdi+0x60],r9
   14003755e:	movzx  edx,BYTE PTR [r9]
   140037562:	mov    rax,QWORD PTR [rdi+0x8]
   140037566:	mov    rcx,QWORD PTR [rax]
   140037569:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   14003756e:	je     0x140037589
   140037570:	dec    r9
   140037573:	mov    QWORD PTR [rdi+0x60],r9
   140037577:	movzx  edx,BYTE PTR [r9]
   14003757b:	mov    rax,QWORD PTR [rdi+0x8]
   14003757f:	mov    rcx,QWORD PTR [rax]
   140037582:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037587:	jne    0x140037570
   140037589:	mov    edx,0x8
   14003758e:	jmp    0x140037a7f
   140037593:	inc    rax
   140037596:	mov    QWORD PTR [rdi+0x60],rax
   14003759a:	test   r12b,r12b
   14003759d:	je     0x1400375de
   14003759f:	cmp    BYTE PTR [rdi+0x88],0x0
   1400375a6:	je     0x1400375c5
   1400375a8:	mov    ebx,r14d
   1400375ab:	shr    ebx,0x14
   1400375ae:	and    bl,0x1
   1400375b1:	mov    edx,0x1c
   1400375b6:	lea    r8d,[rdx-0x4]
   1400375ba:	mov    rcx,rdi
   1400375bd:	call   0x14002eb10
   1400375c2:	mov    BYTE PTR [rax+0x10],bl
   1400375c5:	mov    rax,QWORD PTR [rdi]
   1400375c8:	mov    DWORD PTR [rax+0x30],r14d
   1400375cc:	shr    r14d,0x14
   1400375d0:	and    r14b,0x1
   1400375d4:	cmp    BYTE PTR [rdi+0x18],r14b
   1400375d8:	je     0x1400375de
   1400375da:	mov    BYTE PTR [rdi+0x18],r14b
   1400375de:	test   r15,r15
   1400375e1:	je     0x1400376e3
   1400375e7:	mov    rdx,QWORD PTR [rdi]
   1400375ea:	mov    rax,QWORD PTR [rdx+0x168]
   1400375f1:	mov    rcx,QWORD PTR [rdx+0x170]
   1400375f8:	sub    rcx,rax
   1400375fb:	add    rcx,0x7
   1400375ff:	and    rcx,0xfffffffffffffff8
   140037603:	add    rcx,rax
   140037606:	mov    QWORD PTR [rdx+0x170],rcx
   14003760d:	mov    rcx,QWORD PTR [rdi]
   140037610:	mov    r8,QWORD PTR [rcx+0x168]
   140037617:	lea    rdx,[r8+r15*1]
   14003761b:	mov    rax,QWORD PTR [rcx+0x170]
   140037622:	sub    rax,r8
   140037625:	sub    rax,rdx
   140037628:	add    rax,r8
   14003762b:	mov    QWORD PTR [rdx+0x10],rax
   14003762f:	cmp    QWORD PTR [rdi+0x10],rdx
   140037633:	jne    0x1400376e3
   140037639:	dec    QWORD PTR [rdi+0x60]
   14003763d:	mov    rdx,QWORD PTR [rdi+0x60]
   140037641:	mov    rax,QWORD PTR [rdi+0x8]
   140037645:	mov    rcx,QWORD PTR [rax]
   140037648:	movzx  eax,BYTE PTR [rdx]
   14003764b:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037650:	je     0x14003766a
   140037652:	dec    rdx
   140037655:	mov    QWORD PTR [rdi+0x60],rdx
   140037659:	mov    rax,QWORD PTR [rdi+0x8]
   14003765d:	mov    rcx,QWORD PTR [rax]
   140037660:	movzx  eax,BYTE PTR [rdx]
   140037663:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037668:	jne    0x140037652
   14003766a:	mov    QWORD PTR [rbp-0x50],0xf
   140037672:	xor    r12d,r12d
   140037675:	mov    QWORD PTR [rbp-0x58],r12
   140037679:	mov    BYTE PTR [rbp-0x68],r12b
   14003767d:	lea    r8d,[r12+0x26]
   140037682:	lea    rdx,[rip+0x176bf]        # 0x14004ed48
   140037689:	lea    rcx,[rbp-0x68]
   14003768d:	call   0x140005154
   140037692:	nop
   140037693:	mov    rbx,QWORD PTR [rdi+0x60]
   140037697:	sub    rbx,QWORD PTR [rdi+0x50]
   14003769b:	mov    QWORD PTR [rsp+0x50],0xf
   1400376a4:	mov    QWORD PTR [rsp+0x48],r12
   1400376a9:	mov    BYTE PTR [rsp+0x38],r12b
   1400376ae:	or     r9,0xffffffffffffffff
   1400376b2:	xor    r8d,r8d
   1400376b5:	lea    rdx,[rbp-0x68]
   1400376b9:	lea    rcx,[rsp+0x38]
   1400376be:	call   0x1400048b8
   1400376c3:	mov    QWORD PTR [rsp+0x20],rbx
   1400376c8:	lea    r9,[rsp+0x38]
   1400376cd:	mov    r8,rbx
   1400376d0:	lea    edx,[r12+0x14]
   1400376d5:	mov    rcx,rdi
   1400376d8:	call   0x140031400
   1400376dd:	nop
   1400376de:	jmp    0x140036f4c
   1400376e3:	cmp    r13d,0xfffffffc
   1400376e7:	jne    0x1400379a1
   1400376ed:	mov    rax,QWORD PTR [rdi]
   1400376f0:	mov    rdx,QWORD PTR [rax+0x168]
   1400376f7:	mov    rbx,QWORD PTR [rsp+0x70]
   1400376fc:	add    rdx,rbx
   1400376ff:	cmp    DWORD PTR [rdx],0x11
   140037702:	je     0x14003773d
   140037704:	mov    r9d,0x120
   14003770a:	lea    r8d,[r13+0x15]
   14003770e:	mov    rdx,rbx
   140037711:	mov    rcx,rdi
   140037714:	call   0x14002da70
   140037719:	mov    rcx,QWORD PTR [rdi]
   14003771c:	mov    rdx,QWORD PTR [rcx+0x170]
   140037723:	sub    rdx,QWORD PTR [rcx+0x168]
   14003772a:	sub    rdx,rax
   14003772d:	add    rdx,QWORD PTR [rcx+0x168]
   140037734:	mov    QWORD PTR [rax+0x10],rdx
   140037738:	jmp    0x1400378d1
   14003773d:	mov    rax,QWORD PTR [rdx+0x10]
   140037741:	cmp    DWORD PTR [rdx+rax*1],0x11
   140037745:	jne    0x140037801
   14003774b:	dec    QWORD PTR [rdi+0x60]
   14003774f:	mov    rdx,QWORD PTR [rdi+0x60]
   140037753:	mov    rax,QWORD PTR [rdi+0x8]
   140037757:	mov    rcx,QWORD PTR [rax]
   14003775a:	movzx  eax,BYTE PTR [rdx]
   14003775d:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037762:	je     0x140037788
   140037764:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037770:	dec    rdx
   140037773:	mov    QWORD PTR [rdi+0x60],rdx
   140037777:	mov    rax,QWORD PTR [rdi+0x8]
   14003777b:	mov    rcx,QWORD PTR [rax]
   14003777e:	movzx  eax,BYTE PTR [rdx]
   140037781:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037786:	jne    0x140037770
   140037788:	mov    QWORD PTR [rbp-0x50],0xf
   140037790:	xor    r12d,r12d
   140037793:	mov    QWORD PTR [rbp-0x58],r12
   140037797:	mov    BYTE PTR [rbp-0x68],r12b
   14003779b:	lea    r8d,[r12+0x55]
   1400377a0:	lea    rdx,[rip+0x17549]        # 0x14004ecf0
   1400377a7:	lea    rcx,[rbp-0x68]
   1400377ab:	call   0x140005154
   1400377b0:	nop
   1400377b1:	mov    rbx,QWORD PTR [rdi+0x60]
   1400377b5:	sub    rbx,QWORD PTR [rdi+0x50]
   1400377b9:	mov    QWORD PTR [rsp+0x50],0xf
   1400377c2:	mov    QWORD PTR [rsp+0x48],r12
   1400377c7:	mov    BYTE PTR [rsp+0x38],r12b
   1400377cc:	or     r9,0xffffffffffffffff
   1400377d0:	xor    r8d,r8d
   1400377d3:	lea    rdx,[rbp-0x68]
   1400377d7:	lea    rcx,[rsp+0x38]
   1400377dc:	call   0x1400048b8
   1400377e1:	mov    QWORD PTR [rsp+0x20],rbx
   1400377e6:	lea    r9,[rsp+0x38]
   1400377eb:	mov    r8,rbx
   1400377ee:	lea    edx,[r12+0x2]
   1400377f3:	mov    rcx,rdi
   1400377f6:	call   0x140031400
   1400377fb:	nop
   1400377fc:	jmp    0x140036f4c
   140037801:	add    rdx,QWORD PTR [rdx+0x8]
   140037805:	cmp    DWORD PTR [rdx],0x1b
   140037808:	jne    0x1400378d1
   14003780e:	cmp    DWORD PTR [rdx+0x10],0x270f
   140037815:	jne    0x1400378d1
   14003781b:	dec    QWORD PTR [rdi+0x60]
   14003781f:	mov    rdx,QWORD PTR [rdi+0x60]
   140037823:	mov    rax,QWORD PTR [rdi+0x8]
   140037827:	mov    rcx,QWORD PTR [rax]
   14003782a:	movzx  eax,BYTE PTR [rdx]
   14003782d:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037832:	je     0x140037858
   140037834:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037840:	dec    rdx
   140037843:	mov    QWORD PTR [rdi+0x60],rdx
   140037847:	mov    rax,QWORD PTR [rdi+0x8]
   14003784b:	mov    rcx,QWORD PTR [rax]
   14003784e:	movzx  eax,BYTE PTR [rdx]
   140037851:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037856:	jne    0x140037840
   140037858:	mov    QWORD PTR [rbp-0x50],0xf
   140037860:	xor    r12d,r12d
   140037863:	mov    QWORD PTR [rbp-0x58],r12
   140037867:	mov    BYTE PTR [rbp-0x68],r12b
   14003786b:	lea    r8d,[r12+0x3c]
   140037870:	lea    rdx,[rip+0x17431]        # 0x14004eca8
   140037877:	lea    rcx,[rbp-0x68]
   14003787b:	call   0x140005154
   140037880:	nop
   140037881:	mov    rbx,QWORD PTR [rdi+0x60]
   140037885:	sub    rbx,QWORD PTR [rdi+0x50]
   140037889:	mov    QWORD PTR [rsp+0x50],0xf
   140037892:	mov    QWORD PTR [rsp+0x48],r12
   140037897:	mov    BYTE PTR [rsp+0x38],r12b
   14003789c:	or     r9,0xffffffffffffffff
   1400378a0:	xor    r8d,r8d
   1400378a3:	lea    rdx,[rbp-0x68]
   1400378a7:	lea    rcx,[rsp+0x38]
   1400378ac:	call   0x1400048b8
   1400378b1:	mov    QWORD PTR [rsp+0x20],rbx
   1400378b6:	lea    r9,[rsp+0x38]
   1400378bb:	mov    r8,rbx
   1400378be:	lea    edx,[r12+0x2]
   1400378c3:	mov    rcx,rdi
   1400378c6:	call   0x140031400
   1400378cb:	nop
   1400378cc:	jmp    0x140036f4c
   1400378d1:	mov    rax,QWORD PTR [rdi]
   1400378d4:	mov    rax,QWORD PTR [rax+0x168]
   1400378db:	add    rax,rbx
   1400378de:	add    rax,QWORD PTR [rax+0x8]
   1400378e2:	mov    ecx,DWORD PTR [rax]
   1400378e4:	cmp    ecx,0x1b
   1400378e7:	je     0x1400379a1
   1400378ed:	test   ecx,ecx
   1400378ef:	je     0x1400379a1
   1400378f5:	dec    QWORD PTR [rdi+0x60]
   1400378f9:	mov    rdx,QWORD PTR [rdi+0x60]
   1400378fd:	mov    rax,QWORD PTR [rdi+0x8]
   140037901:	mov    rcx,QWORD PTR [rax]
   140037904:	movzx  eax,BYTE PTR [rdx]
   140037907:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   14003790c:	je     0x140037928
   14003790e:	xchg   ax,ax
   140037910:	dec    rdx
   140037913:	mov    QWORD PTR [rdi+0x60],rdx
   140037917:	mov    rax,QWORD PTR [rdi+0x8]
   14003791b:	mov    rcx,QWORD PTR [rax]
   14003791e:	movzx  eax,BYTE PTR [rdx]
   140037921:	cmp    BYTE PTR [rax+rcx*1+0x4],0x1
   140037926:	jne    0x140037910
   140037928:	mov    QWORD PTR [rbp-0x50],0xf
   140037930:	xor    r12d,r12d
   140037933:	mov    QWORD PTR [rbp-0x58],r12
   140037937:	mov    BYTE PTR [rbp-0x68],r12b
   14003793b:	lea    r8d,[r12+0x42]
   140037940:	lea    rdx,[rip+0x17319]        # 0x14004ec60
   140037947:	lea    rcx,[rbp-0x68]
   14003794b:	call   0x140005154
   140037950:	nop
   140037951:	mov    rbx,QWORD PTR [rdi+0x60]
   140037955:	sub    rbx,QWORD PTR [rdi+0x50]
   140037959:	mov    QWORD PTR [rsp+0x50],0xf
   140037962:	mov    QWORD PTR [rsp+0x48],r12
   140037967:	mov    BYTE PTR [rsp+0x38],r12b
   14003796c:	or     r9,0xffffffffffffffff
   140037970:	xor    r8d,r8d
   140037973:	lea    rdx,[rbp-0x68]
   140037977:	lea    rcx,[rsp+0x38]
   14003797c:	call   0x1400048b8
   140037981:	mov    QWORD PTR [rsp+0x20],rbx
   140037986:	lea    r9,[rsp+0x38]
   14003798b:	mov    r8,rbx
   14003798e:	lea    edx,[r12+0xd]
   140037993:	mov    rcx,rdi
   140037996:	call   0x140031400
   14003799b:	nop
   14003799c:	jmp    0x140036f4c
   1400379a1:	mov    r8d,0x18
   1400379a7:	mov    r12d,0x1
   1400379ad:	mov    edx,r12d
   1400379b0:	mov    rcx,rdi
   1400379b3:	call   0x14002eb10
   1400379b8:	mov    DWORD PTR [rax+0x10],r13d
   1400379bc:	mov    rcx,QWORD PTR [rdi]
   1400379bf:	mov    edx,DWORD PTR [rcx+0x30]
   1400379c2:	shr    edx,0x14
   1400379c5:	and    dl,r12b
   1400379c8:	mov    BYTE PTR [rax+0x14],dl
   1400379cb:	mov    rax,QWORD PTR [rsp+0x68]
   1400379d0:	mov    QWORD PTR [rdi+0x78],rax
   1400379d4:	mov    rax,QWORD PTR [rsp+0x78]
   1400379d9:	mov    QWORD PTR [rdi+0x80],rax
   1400379e0:	movzx  eax,BYTE PTR [rsp+0x30]
   1400379e5:	mov    BYTE PTR [rdi+0x88],al
   1400379eb:	mov    eax,DWORD PTR [rdi+0x70]
   1400379ee:	cmp    eax,DWORD PTR [rdi+0x68]
   1400379f1:	jbe    0x1400379f6
   1400379f3:	mov    DWORD PTR [rdi+0x68],eax
   1400379f6:	mov    eax,DWORD PTR [rsp+0x60]
   1400379fa:	mov    DWORD PTR [rdi+0x6c],eax
   1400379fd:	mov    eax,DWORD PTR [rsp+0x64]
   140037a01:	mov    DWORD PTR [rdi+0x70],eax
   140037a04:	test   r13d,r13d
   140037a07:	jle    0x140037a48
   140037a09:	mov    rcx,QWORD PTR [rdi]
   140037a0c:	test   DWORD PTR [rcx+0x30],0x800000
   140037a13:	je     0x140037a37
   140037a15:	mov    rbx,QWORD PTR [rdi+0x60]
   140037a19:	sub    rbx,QWORD PTR [rdi+0x50]
   140037a1d:	dec    rbx
   140037a20:	lea    eax,[r13-0x1]
   140037a24:	movsxd rdx,eax
   140037a27:	add    rcx,0x180
   140037a2e:	call   0x14002cf10
   140037a33:	mov    QWORD PTR [rax+0x8],rbx
   140037a37:	cmp    r13d,0x20
   140037a3b:	jge    0x140037a48
   140037a3d:	lea    ecx,[r13-0x1]
   140037a41:	shl    r12d,cl
   140037a44:	or     DWORD PTR [rdi+0x24],r12d
   140037a48:	mov    al,0x1
   140037a4a:	jmp    0x140037a8d
   140037a4c:	dec    r8
   140037a4f:	mov    QWORD PTR [rdi+0x60],r8
   140037a53:	movzx  ecx,BYTE PTR [r8]
   140037a57:	mov    rax,QWORD PTR [rdx]
   140037a5a:	cmp    BYTE PTR [rcx+rax*1+0x4],0x1
   140037a5f:	je     0x140037a7a
   140037a61:	dec    r8
   140037a64:	mov    QWORD PTR [rdi+0x60],r8
   140037a68:	movzx  edx,BYTE PTR [r8]
   140037a6c:	mov    rax,QWORD PTR [rdi+0x8]
   140037a70:	mov    rcx,QWORD PTR [rax]
   140037a73:	cmp    BYTE PTR [rdx+rcx*1+0x4],0x1
   140037a78:	jne    0x140037a61
   140037a7a:	mov    edx,0x14
   140037a7f:	sub    r8,QWORD PTR [rdi+0x50]
   140037a83:	mov    rcx,rdi
   140037a86:	call   0x1400322b0
   140037a8b:	xor    al,al
   140037a8d:	mov    rcx,QWORD PTR [rbp+0x38]
   140037a91:	xor    rcx,rsp
   140037a94:	call   0x14002b100
   140037a99:	lea    r11,[rsp+0x140]
   140037aa1:	mov    rbx,QWORD PTR [r11+0x38]
   140037aa5:	mov    rsi,QWORD PTR [r11+0x40]
   140037aa9:	mov    rdi,QWORD PTR [r11+0x48]
   140037aad:	mov    rsp,r11
   140037ab0:	pop    r15
   140037ab2:	pop    r14
   140037ab4:	pop    r13
   140037ab6:	pop    r12
   140037ab8:	pop    rbp
   140037ab9:	ret    
   140037aba:	xchg   ax,ax
   140037abc:	mov    bh,0x67
   140037abe:	add    eax,DWORD PTR [rax]
   140037ac0:	add    dh,BYTE PTR [rax+0x3]
   140037ac3:	add    BYTE PTR [rbx],dl
   140037ac5:	add    eax,DWORD PTR fs:[rax]
   140037ac8:	or     esp,DWORD PTR [rbx+0x3]
   140037acb:	add    BYTE PTR [rbx],dl
   140037acd:	add    eax,DWORD PTR gs:[rax]
   140037ad0:	sbb    DWORD PTR [rbx+0x3],esp
   140037ad3:	add    bh,cl
   140037ad5:	add    ax,WORD PTR [rax]
   140037ad8:	lods   al,BYTE PTR ds:[rsi]
   140037ad9:	add    eax,DWORD PTR [eax]
   140037adc:	ds jo  0x140037ae2
   140037adf:	add    BYTE PTR [rdi],cl
   140037ae1:	movsxd eax,DWORD PTR [rbx]
   140037ae3:	add    BYTE PTR [rbx],dl
   140037ae5:	add    ax,WORD PTR [rax]
   140037ae8:	jge    0x140037b50
   140037aea:	add    eax,DWORD PTR [rax]
   140037aec:	rex.B jno 0x140037af2
   140037aef:	add    BYTE PTR [rax],al
   140037af1:	add    DWORD PTR [rsp+rcx*1],ecx
   140037af4:	or     al,0xc
   140037af6:	add    cl,BYTE PTR [rsp+rcx*1]
   140037af9:	or     al,0x3
   140037afb:	or     al,0xc
   140037afd:	add    al,0xc
   140037aff:	or     al,0x5
   140037b01:	or     al,0xc
   140037b03:	(bad)  
   140037b04:	(bad)  
   140037b05:	or     al,0xc
   140037b07:	or     al,0x8
   140037b09:	or     al,0xc
   140037b0b:	or     al,0xc
   140037b0d:	or     al,0xc
   140037b0f:	or     al,0xc
   140037b11:	or     al,0xc
   140037b13:	or     DWORD PTR [rdx],ecx
   140037b15:	or     al,0xc
   140037b17:	or     al,0xc
   140037b19:	or     al,0xc
   140037b1b:	or     al,0xc
   140037b1d:	or     al,0xc
   140037b1f:	or     al,0xc
   140037b21:	or     al,0xc
   140037b23:	or     al,0xb
   140037b25:	int3   
   140037b26:	int3   
   140037b27:	int3   
   140037b28:	int3   
   140037b29:	int3   
   140037b2a:	int3   
   140037b2b:	int3   
   140037b2c:	int3   
   140037b2d:	int3   
   140037b2e:	int3   
   140037b2f:	int3   
   140037b30:	rex push rbp
   140037b32:	push   rsi
   140037b33:	push   rdi
   140037b34:	push   r12
   140037b36:	push   r13
   140037b38:	push   r14
   140037b3a:	push   r15
   140037b3c:	lea    rbp,[rsp-0x1f]
   140037b41:	sub    rsp,0xa0
   140037b48:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   140037b50:	mov    QWORD PTR [rsp+0xe8],rbx
   140037b58:	mov    rax,QWORD PTR [rip+0x30691]        # 0x1400681f0
   140037b5f:	xor    rax,rsp
   140037b62:	mov    QWORD PTR [rbp+0xf],rax
   140037b66:	mov    rsi,r9
   140037b69:	mov    r14,r8
   140037b6c:	mov    QWORD PTR [rbp-0x59],r8
   140037b70:	mov    r10,rdx
   140037b73:	mov    r13,rcx
   140037b76:	lea    rbx,[r8+0x28]
   140037b7a:	cmp    rcx,rdx
   140037b7d:	je     0x140038080
   140037b83:	mov    r12,QWORD PTR [r9+0x20]
   140037b87:	mov    QWORD PTR [rbp-0x51],r12
   140037b8b:	xor    r9d,r9d
   140037b8e:	mov    r11d,DWORD PTR [r8+0x10]
   140037b92:	movzx  r8d,BYTE PTR [rbp+0x7f]
   140037b97:	test   r11d,r11d
   140037b9a:	je     0x140037c49
   140037ba0:	mov    rdx,r13
   140037ba3:	movzx  edi,BYTE PTR [rbx]
   140037ba6:	test   dil,dil
   140037ba9:	jne    0x140037bd2
   140037bab:	movzx  eax,BYTE PTR [r13+0x0]
   140037bb0:	test   r8b,r8b
   140037bb3:	je     0x140037bc4
   140037bb5:	mov    rcx,QWORD PTR [r12]
   140037bb9:	movzx  eax,al
   140037bbc:	movzx  eax,BYTE PTR [rax+rcx*1+0x104]
   140037bc4:	test   al,al
   140037bc6:	je     0x140037c1d
   140037bc8:	inc    rbx
   140037bcb:	cmp    BYTE PTR [rbx],0x0
   140037bce:	je     0x140037bc8
   140037bd0:	jmp    0x140037c13
   140037bd2:	cmp    rdx,r10
   140037bd5:	je     0x140037c03
   140037bd7:	movzx  eax,BYTE PTR [rdx]
   140037bda:	test   r8b,r8b
   140037bdd:	je     0x140037bee
   140037bdf:	mov    rcx,QWORD PTR [r12]
   140037be3:	movzx  eax,al
   140037be6:	movzx  eax,BYTE PTR [rax+rcx*1+0x104]
   140037bee:	cmp    al,dil
   140037bf1:	jne    0x140037c03
   140037bf3:	inc    rbx
   140037bf6:	inc    rdx
   140037bf9:	movzx  edi,BYTE PTR [rbx]
   140037bfc:	test   dil,dil
   140037bff:	je     0x140037c2d
   140037c01:	jmp    0x140037bd2
   140037c03:	cmp    BYTE PTR [rbx],0x0
   140037c06:	je     0x140037c2d
   140037c08:	inc    rbx
   140037c0b:	cmp    BYTE PTR [rbx],0x0
   140037c0e:	jne    0x140037c08
   140037c10:	inc    rbx
   140037c13:	inc    r9d
   140037c16:	cmp    r9d,r11d
   140037c19:	jae    0x140037c49
   140037c1b:	jmp    0x140037ba0
   140037c1d:	cmp    BYTE PTR [r14+0x24],0x0
   140037c22:	jne    0x140038080
   140037c28:	jmp    0x14003807d
   140037c2d:	cmp    BYTE PTR [r14+0x24],0x0
   140037c32:	jne    0x140038080
   140037c38:	cmp    rdx,r13
   140037c3b:	je     0x14003807d
   140037c41:	mov    r13,rdx
   140037c44:	jmp    0x140038080
   140037c49:	movzx  edx,BYTE PTR [r13+0x0]
   140037c4e:	mov    BYTE PTR [rbp-0x5d],dl
   140037c51:	test   r8b,r8b
   140037c54:	je     0x140037c68
   140037c56:	mov    rcx,QWORD PTR [r12]
   140037c5a:	movzx  eax,dl
   140037c5d:	movzx  edx,BYTE PTR [rax+rcx*1+0x104]
   140037c65:	mov    BYTE PTR [rbp-0x5d],dl
   140037c68:	mov    eax,DWORD PTR [r14+0x14]
   140037c6c:	test   eax,eax
   140037c6e:	jne    0x140037c7a
   140037c70:	cmp    DWORD PTR [r14+0x18],eax
   140037c74:	je     0x14003803d
   140037c7a:	mov    r15d,0xf
   140037c80:	mov    QWORD PTR [rbp-0x29],r15
   140037c84:	mov    QWORD PTR [rbp-0x31],0x0
   140037c8c:	mov    BYTE PTR [rbp-0x41],0x0
   140037c90:	test   eax,eax
   140037c92:	je     0x140037eb8
   140037c98:	test   DWORD PTR [rsi+0x30],0x200000
   140037c9f:	jne    0x140037cb6
   140037ca1:	mov    BYTE PTR [rbp-0x41],dl
   140037ca4:	mov    esi,0x1
   140037ca9:	mov    QWORD PTR [rbp-0x31],rsi
   140037cad:	mov    BYTE PTR [rbp-0x40],0x0
   140037cb1:	jmp    0x140037d5d
   140037cb6:	mov    BYTE PTR [rbp-0x61],dl
   140037cb9:	mov    BYTE PTR [rbp-0x60],0x0
   140037cbd:	lea    r9,[rbp-0x60]
   140037cc1:	lea    r8,[rbp-0x61]
   140037cc5:	lea    rdx,[rbp-0x19]
   140037cc9:	mov    rcx,r12
   140037ccc:	call   0x14002f4c0
   140037cd1:	mov    rdi,rax
   140037cd4:	lea    rax,[rbp-0x41]
   140037cd8:	cmp    rax,rdi
   140037cdb:	je     0x140037d45
   140037cdd:	cmp    QWORD PTR [rbp-0x29],0x10
   140037ce2:	jb     0x140037ced
   140037ce4:	mov    rcx,QWORD PTR [rbp-0x41]
   140037ce8:	call   0x14002b150
   140037ced:	mov    QWORD PTR [rbp-0x29],0xf
   140037cf5:	xor    esi,esi
   140037cf7:	mov    QWORD PTR [rbp-0x31],rsi
   140037cfb:	mov    BYTE PTR [rbp-0x41],sil
   140037cff:	cmp    QWORD PTR [rdi+0x18],0x10
   140037d04:	jae    0x140037d1c
   140037d06:	mov    r8,QWORD PTR [rdi+0x10]
   140037d0a:	inc    r8
   140037d0d:	mov    rdx,rdi
   140037d10:	lea    rcx,[rbp-0x41]
   140037d14:	call   QWORD PTR [rip+0x118d6]        # 0x1400495f0
   140037d1a:	jmp    0x140037d26
   140037d1c:	mov    rax,QWORD PTR [rdi]
   140037d1f:	mov    QWORD PTR [rbp-0x41],rax
   140037d23:	mov    QWORD PTR [rdi],rsi
   140037d26:	mov    rax,QWORD PTR [rdi+0x10]
   140037d2a:	mov    QWORD PTR [rbp-0x31],rax
   140037d2e:	mov    rax,QWORD PTR [rdi+0x18]
   140037d32:	mov    QWORD PTR [rbp-0x29],rax
   140037d36:	mov    QWORD PTR [rdi+0x18],0xf
   140037d3e:	mov    QWORD PTR [rdi+0x10],rsi
   140037d42:	mov    BYTE PTR [rdi],sil
   140037d45:	cmp    QWORD PTR [rbp-0x1],0x10
   140037d4a:	jb     0x140037d55
   140037d4c:	mov    rcx,QWORD PTR [rbp-0x19]
   140037d50:	call   0x14002b150
   140037d55:	mov    rsi,QWORD PTR [rbp-0x31]
   140037d59:	mov    r15,QWORD PTR [rbp-0x29]
   140037d5d:	xor    r14d,r14d
   140037d60:	mov    rax,QWORD PTR [rbp-0x59]
   140037d64:	cmp    DWORD PTR [rax+0x14],r14d
   140037d68:	jbe    0x140037eb5
   140037d6e:	mov    r12,QWORD PTR [rbp-0x41]
   140037d72:	cmp    BYTE PTR [rbx],0x0
   140037d75:	jne    0x140037d93
   140037d77:	test   rsi,rsi
   140037d7a:	je     0x140037de3
   140037d7c:	cmp    rsi,0x1
   140037d80:	jne    0x140037d93
   140037d82:	lea    rax,[rbp-0x41]
   140037d86:	cmp    r15,0x10
   140037d8a:	cmovae rax,r12
   140037d8e:	cmp    BYTE PTR [rax],0x0
   140037d91:	je     0x140037de3
   140037d93:	xor    eax,eax
   140037d95:	or     rcx,0xffffffffffffffff
   140037d99:	mov    rdi,rbx
   140037d9c:	repnz scas al,BYTE PTR es:[rdi]
   140037d9e:	not    rcx
   140037da1:	lea    rdi,[rcx-0x1]
   140037da5:	lea    rcx,[rbp-0x41]
   140037da9:	cmp    r15,0x10
   140037dad:	cmovae rcx,r12
   140037db1:	mov    r8,rdi
   140037db4:	cmp    rsi,rdi
   140037db7:	cmovb  r8,rsi
   140037dbb:	mov    rdx,rbx
   140037dbe:	call   0x14002b13e
   140037dc3:	movsxd rcx,eax
   140037dc6:	test   eax,eax
   140037dc8:	jne    0x140037ddb
   140037dca:	cmp    rsi,rdi
   140037dcd:	jb     0x140037e60
   140037dd3:	cmp    rsi,rdi
   140037dd6:	setne  al
   140037dd9:	mov    ecx,eax
   140037ddb:	test   ecx,ecx
   140037ddd:	js     0x140037e60
   140037de3:	inc    rbx
   140037de6:	cmp    BYTE PTR [rbx],0x0
   140037de9:	jne    0x140037de3
   140037deb:	inc    rbx
   140037dee:	cmp    BYTE PTR [rbx],0x0
   140037df1:	jne    0x140037e13
   140037df3:	test   rsi,rsi
   140037df6:	je     0x140037e8d
   140037dfc:	cmp    rsi,0x1
   140037e00:	jne    0x140037e13
   140037e02:	lea    rax,[rbp-0x41]
   140037e06:	cmp    r15,0x10
   140037e0a:	cmovae rax,r12
   140037e0e:	cmp    BYTE PTR [rax],0x0
   140037e11:	je     0x140037e8d
   140037e13:	xor    eax,eax
   140037e15:	or     rcx,0xffffffffffffffff
   140037e19:	mov    rdi,rbx
   140037e1c:	repnz scas al,BYTE PTR es:[rdi]
   140037e1e:	not    rcx
   140037e21:	lea    rdi,[rcx-0x1]
   140037e25:	lea    rcx,[rbp-0x41]
   140037e29:	cmp    r15,0x10
   140037e2d:	cmovae rcx,r12
   140037e31:	mov    r8,rdi
   140037e34:	cmp    rsi,rdi
   140037e37:	cmovb  r8,rsi
   140037e3b:	mov    rdx,rbx
   140037e3e:	call   0x14002b13e
   140037e43:	movsxd rcx,eax
   140037e46:	test   eax,eax
   140037e48:	jne    0x140037e57
   140037e4a:	cmp    rsi,rdi
   140037e4d:	jb     0x140037e8d
   140037e4f:	cmp    rsi,rdi
   140037e52:	setne  al
   140037e55:	mov    ecx,eax
   140037e57:	test   ecx,ecx
   140037e59:	jle    0x140037e8d
   140037e5b:	jmp    0x140037e70
   140037e5d:	nop    DWORD PTR [rax]
   140037e60:	inc    rbx
   140037e63:	cmp    BYTE PTR [rbx],0x0
   140037e66:	jne    0x140037e60
   140037e68:	inc    rbx
   140037e6b:	nop    DWORD PTR [rax+rax*1+0x0]
   140037e70:	inc    rbx
   140037e73:	cmp    BYTE PTR [rbx],0x0
   140037e76:	jne    0x140037e70
   140037e78:	inc    rbx
   140037e7b:	inc    r14d
   140037e7e:	mov    rax,QWORD PTR [rbp-0x59]
   140037e82:	cmp    r14d,DWORD PTR [rax+0x14]
   140037e86:	jae    0x140037eb1
   140037e88:	jmp    0x140037d72
   140037e8d:	mov    rax,QWORD PTR [rbp-0x59]
   140037e91:	cmp    BYTE PTR [rax+0x24],0x0
   140037e95:	jne    0x140037e9a
   140037e97:	inc    r13
   140037e9a:	cmp    r15,0x10
   140037e9e:	jb     0x140038080
   140037ea4:	mov    rcx,r12
   140037ea7:	call   0x14002b150
   140037eac:	jmp    0x140038080
   140037eb1:	mov    r12,QWORD PTR [rbp-0x51]
   140037eb5:	mov    r14,rax
   140037eb8:	cmp    DWORD PTR [r14+0x18],0x0
   140037ebd:	je     0x14003802a
   140037ec3:	movzx  eax,BYTE PTR [rbp-0x5d]
   140037ec7:	mov    BYTE PTR [rbp-0x61],al
   140037eca:	mov    BYTE PTR [rbp-0x60],0x0
   140037ece:	lea    r9,[rbp-0x60]
   140037ed2:	lea    r8,[rbp-0x61]
   140037ed6:	lea    rdx,[rbp-0x19]
   140037eda:	mov    rcx,r12
   140037edd:	call   0x140035f90
   140037ee2:	mov    rdi,rax
   140037ee5:	lea    rax,[rbp-0x41]
   140037ee9:	cmp    rax,rdi
   140037eec:	je     0x140037f58
   140037eee:	cmp    QWORD PTR [rbp-0x29],0x10
   140037ef3:	jb     0x140037efe
   140037ef5:	mov    rcx,QWORD PTR [rbp-0x41]
   140037ef9:	call   0x14002b150
   140037efe:	mov    QWORD PTR [rbp-0x29],0xf
   140037f06:	xor    esi,esi
   140037f08:	mov    QWORD PTR [rbp-0x31],rsi
   140037f0c:	mov    BYTE PTR [rbp-0x41],sil
   140037f10:	cmp    QWORD PTR [rdi+0x18],0x10
   140037f15:	jae    0x140037f2d
   140037f17:	mov    r8,QWORD PTR [rdi+0x10]
   140037f1b:	inc    r8
   140037f1e:	mov    rdx,rdi
   140037f21:	lea    rcx,[rbp-0x41]
   140037f25:	call   QWORD PTR [rip+0x116c5]        # 0x1400495f0
   140037f2b:	jmp    0x140037f37
   140037f2d:	mov    rax,QWORD PTR [rdi]
   140037f30:	mov    QWORD PTR [rbp-0x41],rax
   140037f34:	mov    QWORD PTR [rdi],rsi
   140037f37:	mov    rax,QWORD PTR [rdi+0x10]
   140037f3b:	mov    QWORD PTR [rbp-0x31],rax
   140037f3f:	mov    rax,QWORD PTR [rdi+0x18]
   140037f43:	mov    QWORD PTR [rbp-0x29],rax
   140037f47:	mov    QWORD PTR [rdi+0x18],0xf
   140037f4f:	mov    QWORD PTR [rdi+0x10],rsi
   140037f53:	mov    BYTE PTR [rdi],sil
   140037f56:	jmp    0x140037f5a
   140037f58:	xor    esi,esi
   140037f5a:	cmp    QWORD PTR [rbp-0x1],0x10
   140037f5f:	jb     0x140037f6a
   140037f61:	mov    rcx,QWORD PTR [rbp-0x19]
   140037f65:	call   0x14002b150
   140037f6a:	mov    r12d,esi
   140037f6d:	mov    r14d,DWORD PTR [r14+0x18]
   140037f71:	mov    r15,QWORD PTR [rbp-0x29]
   140037f75:	test   r14d,r14d
   140037f78:	je     0x140038026
   140037f7e:	mov    rsi,QWORD PTR [rbp-0x31]
   140037f82:	cmp    BYTE PTR [rbx],0x0
   140037f85:	jne    0x140037fa7
   140037f87:	test   rsi,rsi
   140037f8a:	je     0x140038008
   140037f8c:	cmp    rsi,0x1
   140037f90:	jne    0x140037fa7
   140037f92:	lea    rax,[rbp-0x41]
   140037f96:	cmp    r15,0x10
   140037f9a:	mov    rcx,QWORD PTR [rbp-0x41]
   140037f9e:	cmovae rax,rcx
   140037fa2:	cmp    BYTE PTR [rax],0x0
   140037fa5:	je     0x14003800c
   140037fa7:	xor    eax,eax
   140037fa9:	or     rcx,0xffffffffffffffff
   140037fad:	mov    rdi,rbx
   140037fb0:	repnz scas al,BYTE PTR es:[rdi]
   140037fb2:	not    rcx
   140037fb5:	lea    rdi,[rcx-0x1]
   140037fb9:	lea    rcx,[rbp-0x41]
   140037fbd:	cmp    r15,0x10
   140037fc1:	cmovae rcx,QWORD PTR [rbp-0x41]
   140037fc6:	mov    r8,rdi
   140037fc9:	cmp    rsi,rdi
   140037fcc:	cmovb  r8,rsi
   140037fd0:	mov    rdx,rbx
   140037fd3:	call   0x14002b13e
   140037fd8:	movsxd rcx,eax
   140037fdb:	test   eax,eax
   140037fdd:	jne    0x140037fec
   140037fdf:	cmp    rsi,rdi
   140037fe2:	jb     0x140037ff0
   140037fe4:	cmp    rsi,rdi
   140037fe7:	setne  al
   140037fea:	mov    ecx,eax
   140037fec:	test   ecx,ecx
   140037fee:	je     0x140038008
   140037ff0:	inc    rbx
   140037ff3:	cmp    BYTE PTR [rbx],0x0
   140037ff6:	jne    0x140037ff0
   140037ff8:	inc    rbx
   140037ffb:	inc    r12d
   140037ffe:	cmp    r12d,r14d
   140038001:	jae    0x140038026
   140038003:	jmp    0x140037f82
   140038008:	mov    rcx,QWORD PTR [rbp-0x41]
   14003800c:	mov    rax,QWORD PTR [rbp-0x59]
   140038010:	cmp    BYTE PTR [rax+0x24],0x0
   140038014:	jne    0x140038019
   140038016:	inc    r13
   140038019:	cmp    r15,0x10
   14003801d:	jb     0x140038080
   14003801f:	call   0x14002b150
   140038024:	jmp    0x140038080
   140038026:	mov    r14,QWORD PTR [rbp-0x59]
   14003802a:	cmp    r15,0x10
   14003802e:	jb     0x140038039
   140038030:	mov    rcx,QWORD PTR [rbp-0x41]
   140038034:	call   0x14002b150
   140038039:	mov    r12,QWORD PTR [rbp-0x51]
   14003803d:	mov    r8d,DWORD PTR [r14+0x1c]
   140038041:	movzx  edi,BYTE PTR [rbp-0x5d]
   140038045:	movzx  edx,dil
   140038049:	mov    rcx,r12
   14003804c:	call   0x14002cbd0
   140038051:	cmp    al,0x1
   140038053:	je     0x140037c1d
   140038059:	mov    r8d,DWORD PTR [r14+0x20]
   14003805d:	test   r8d,r8d
   140038060:	je     0x140038076
   140038062:	movzx  edx,dil
   140038066:	mov    rcx,r12
   140038069:	call   0x14002cbd0
   14003806e:	test   al,al
   140038070:	je     0x140037c1d
   140038076:	cmp    BYTE PTR [r14+0x24],0x0
   14003807b:	je     0x140038080
   14003807d:	inc    r13
   140038080:	mov    rax,r13
   140038083:	mov    rcx,QWORD PTR [rbp+0xf]
   140038087:	xor    rcx,rsp
   14003808a:	call   0x14002b100
   14003808f:	mov    rbx,QWORD PTR [rsp+0xe8]
   140038097:	add    rsp,0xa0
   14003809e:	pop    r15
   1400380a0:	pop    r14
   1400380a2:	pop    r13
   1400380a4:	pop    r12
   1400380a6:	pop    rdi
   1400380a7:	pop    rsi
   1400380a8:	pop    rbp
   1400380a9:	ret    
   1400380aa:	int3   
   1400380ab:	int3   
   1400380ac:	int3   
   1400380ad:	int3   
   1400380ae:	int3   
   1400380af:	int3   
   1400380b0:	rex push rbx
   1400380b2:	sub    rsp,0x20
   1400380b6:	mov    rcx,QWORD PTR [rcx]
   1400380b9:	mov    rbx,rdx
   1400380bc:	mov    DWORD PTR [rsp+0x30],0x0
   1400380c4:	call   0x1400354f0
   1400380c9:	mov    rax,rbx
   1400380cc:	add    rsp,0x20
   1400380d0:	pop    rbx
   1400380d1:	ret    
   1400380d2:	int3   
   1400380d3:	int3   
   1400380d4:	int3   
   1400380d5:	int3   
   1400380d6:	int3   
   1400380d7:	int3   
   1400380d8:	int3   
   1400380d9:	int3   
   1400380da:	int3   
   1400380db:	int3   
   1400380dc:	int3   
   1400380dd:	int3   
   1400380de:	int3   
   1400380df:	int3   
   1400380e0:	rex push rbp
   1400380e2:	push   rsi
   1400380e3:	push   rdi
   1400380e4:	push   r12
   1400380e6:	push   r13
   1400380e8:	push   r14
   1400380ea:	push   r15
   1400380ec:	lea    rbp,[rsp-0x27]
   1400380f1:	sub    rsp,0xd0
   1400380f8:	mov    QWORD PTR [rbp-0x61],0xfffffffffffffffe
   140038100:	mov    QWORD PTR [rsp+0x120],rbx
   140038108:	mov    rax,QWORD PTR [rip+0x300e1]        # 0x1400681f0
   14003810f:	xor    rax,rsp
   140038112:	mov    QWORD PTR [rbp+0x1f],rax
   140038116:	mov    r13,rdx
   140038119:	mov    QWORD PTR [rbp-0x69],rdx
   14003811d:	mov    r12,rcx
   140038120:	mov    QWORD PTR [rsp+0x28],rcx
   140038125:	mov    edx,0xf
   14003812a:	mov    r8d,0x110
   140038130:	call   0x14002eb10
   140038135:	mov    r15,rax
   140038138:	mov    QWORD PTR [rbp-0x79],rax
   14003813c:	movzx  eax,BYTE PTR [r13+0x40]
   140038141:	mov    BYTE PTR [rsp+0x24],al
   140038145:	lea    r14,[r15+0x10]
   140038149:	mov    QWORD PTR [rbp-0x71],r14
   14003814d:	xor    edx,edx
   14003814f:	mov    r8d,0x100
   140038155:	mov    rcx,r14
   140038158:	call   0x14002b144
   14003815d:	mov    r11,QWORD PTR [r13+0x0]
   140038161:	mov    rcx,QWORD PTR [r13+0x8]
   140038165:	cmp    r11,rcx
   140038168:	je     0x1400381dc
   14003816a:	nop    WORD PTR [rax+rax*1+0x0]
   140038170:	xor    r8d,r8d
   140038173:	mov    r9,r14
   140038176:	data16 nop WORD PTR [rax+rax*1+0x0]
   140038180:	mov    rdi,QWORD PTR [r12+0x8]
   140038185:	movzx  r10d,BYTE PTR [r12+0x18]
   14003818b:	test   r10b,r10b
   14003818e:	je     0x1400381a1
   140038190:	mov    rdx,QWORD PTR [rdi]
   140038193:	movzx  eax,r8b
   140038197:	movzx  ebx,BYTE PTR [rax+rdx*1+0x104]
   14003819f:	jmp    0x1400381a5
   1400381a1:	movzx  ebx,r8b
   1400381a5:	movzx  eax,BYTE PTR [r11]
   1400381a9:	test   r10b,r10b
   1400381ac:	je     0x1400381bc
   1400381ae:	mov    rdx,QWORD PTR [rdi]
   1400381b1:	movzx  eax,al
   1400381b4:	movzx  eax,BYTE PTR [rax+rdx*1+0x104]
   1400381bc:	cmp    bl,al
   1400381be:	jne    0x1400381c4
   1400381c0:	mov    BYTE PTR [r9],0x1
   1400381c4:	inc    r8d
   1400381c7:	inc    r9
   1400381ca:	cmp    r8d,0x100
   1400381d1:	jb     0x140038180
   1400381d3:	add    r11,0x2
   1400381d7:	cmp    r11,rcx
   1400381da:	jne    0x140038170
   1400381dc:	mov    rbx,QWORD PTR [r13+0x20]
   1400381e0:	mov    rdi,QWORD PTR [r13+0x28]
   1400381e4:	cmp    rbx,rdi
   1400381e7:	je     0x1400384a8
   1400381ed:	nop    DWORD PTR [rax]
   1400381f0:	movzx  edx,BYTE PTR [rbx]
   1400381f3:	mov    r10,QWORD PTR [r12+0x8]
   1400381f8:	movzx  r8d,BYTE PTR [r12+0x18]
   1400381fe:	test   r8b,r8b
   140038201:	je     0x140038211
   140038203:	mov    rcx,QWORD PTR [r10]
   140038206:	movzx  eax,dl
   140038209:	movzx  edx,BYTE PTR [rax+rcx*1+0x104]
   140038211:	movzx  esi,BYTE PTR [rbx+0x2]
   140038215:	test   r8b,r8b
   140038218:	je     0x140038229
   14003821a:	mov    rcx,QWORD PTR [r10]
   14003821d:	movzx  eax,sil
   140038221:	movzx  esi,BYTE PTR [rax+rcx*1+0x104]
   140038229:	add    rbx,0x4
   14003822d:	mov    rax,QWORD PTR [r12]
   140038231:	test   DWORD PTR [rax+0x30],0x200000
   140038238:	je     0x140038425
   14003823e:	mov    BYTE PTR [rsp+0x20],dl
   140038242:	mov    BYTE PTR [rsp+0x21],0x0
   140038247:	lea    r9,[rsp+0x21]
   14003824c:	lea    r8,[rsp+0x20]
   140038251:	lea    rdx,[rbp-0x9]
   140038255:	mov    rcx,r10
   140038258:	call   0x14002f4c0
   14003825d:	nop
   14003825e:	mov    BYTE PTR [rsp+0x20],sil
   140038263:	lea    r9,[rsp+0x21]
   140038268:	lea    r8,[rsp+0x20]
   14003826d:	lea    rdx,[rbp-0x59]
   140038271:	mov    rcx,QWORD PTR [r12+0x8]
   140038276:	call   0x14002f4c0
   14003827b:	nop
   14003827c:	lea    rdx,[rbp-0x9]
   140038280:	mov    r14,QWORD PTR [rbp-0x9]
   140038284:	mov    r15,QWORD PTR [rbp+0xf]
   140038288:	cmp    r15,0x10
   14003828c:	cmovae rdx,r14
   140038290:	lea    rcx,[rbp-0x59]
   140038294:	cmp    QWORD PTR [rbp-0x41],0x10
   140038299:	cmovae rcx,QWORD PTR [rbp-0x59]
   14003829e:	mov    rsi,QWORD PTR [rbp+0x7]
   1400382a2:	mov    r8,rsi
   1400382a5:	mov    r13,QWORD PTR [rbp-0x49]
   1400382a9:	cmp    r13,rsi
   1400382ac:	cmovb  r8,r13
   1400382b0:	call   0x14002b13e
   1400382b5:	movsxd rcx,eax
   1400382b8:	test   eax,eax
   1400382ba:	jne    0x1400382d0
   1400382bc:	cmp    r13,rsi
   1400382bf:	jae    0x1400382c6
   1400382c1:	or     ecx,0xffffffff
   1400382c4:	jmp    0x1400382d0
   1400382c6:	xor    eax,eax
   1400382c8:	cmp    r13,rsi
   1400382cb:	setne  al
   1400382ce:	mov    ecx,eax
   1400382d0:	test   ecx,ecx
   1400382d2:	sets   al
   1400382d5:	test   al,al
   1400382d7:	jne    0x14003845f
   1400382dd:	xor    r13d,r13d
   1400382e0:	mov    r14,QWORD PTR [rbp-0x71]
   1400382e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400382f0:	mov    BYTE PTR [rsp+0x20],r13b
   1400382f5:	lea    r9,[rsp+0x21]
   1400382fa:	lea    r8,[rsp+0x20]
   1400382ff:	lea    rdx,[rbp-0x31]
   140038303:	mov    rcx,QWORD PTR [r12+0x8]
   140038308:	call   0x14002f4c0
   14003830d:	nop
   14003830e:	lea    rdx,[rbp-0x9]
   140038312:	cmp    QWORD PTR [rbp+0xf],0x10
   140038317:	cmovae rdx,QWORD PTR [rbp-0x9]
   14003831c:	lea    rcx,[rbp-0x31]
   140038320:	mov    r15,QWORD PTR [rbp-0x19]
   140038324:	cmp    r15,0x10
   140038328:	cmovae rcx,QWORD PTR [rbp-0x31]
   14003832d:	mov    r12,QWORD PTR [rbp+0x7]
   140038331:	mov    r8,r12
   140038334:	mov    rsi,QWORD PTR [rbp-0x21]
   140038338:	cmp    rsi,r12
   14003833b:	cmovb  r8,rsi
   14003833f:	call   0x14002b13e
   140038344:	movsxd rcx,eax
   140038347:	test   eax,eax
   140038349:	jne    0x14003835f
   14003834b:	cmp    rsi,r12
   14003834e:	jae    0x140038355
   140038350:	or     ecx,0xffffffff
   140038353:	jmp    0x14003835f
   140038355:	xor    eax,eax
   140038357:	cmp    rsi,r12
   14003835a:	setne  al
   14003835d:	mov    ecx,eax
   14003835f:	test   ecx,ecx
   140038361:	sets   al
   140038364:	test   al,al
   140038366:	sete   al
   140038369:	test   al,al
   14003836b:	je     0x1400383c8
   14003836d:	lea    rdx,[rbp-0x31]
   140038371:	cmp    r15,0x10
   140038375:	cmovae rdx,QWORD PTR [rbp-0x31]
   14003837a:	lea    rcx,[rbp-0x59]
   14003837e:	cmp    QWORD PTR [rbp-0x41],0x10
   140038383:	cmovae rcx,QWORD PTR [rbp-0x59]
   140038388:	mov    r8,rsi
   14003838b:	mov    r12,QWORD PTR [rbp-0x49]
   14003838f:	cmp    r12,rsi
   140038392:	cmovb  r8,r12
   140038396:	call   0x14002b13e
   14003839b:	movsxd rcx,eax
   14003839e:	test   eax,eax
   1400383a0:	jne    0x1400383b6
   1400383a2:	cmp    r12,rsi
   1400383a5:	jae    0x1400383ac
   1400383a7:	or     ecx,0xffffffff
   1400383aa:	jmp    0x1400383b6
   1400383ac:	xor    eax,eax
   1400383ae:	cmp    r12,rsi
   1400383b1:	setne  al
   1400383b4:	mov    ecx,eax
   1400383b6:	test   ecx,ecx
   1400383b8:	sets   al
   1400383bb:	test   al,al
   1400383bd:	sete   al
   1400383c0:	test   al,al
   1400383c2:	je     0x1400383c8
   1400383c4:	mov    BYTE PTR [r14],0x1
   1400383c8:	cmp    r15,0x10
   1400383cc:	jb     0x1400383d7
   1400383ce:	mov    rcx,QWORD PTR [rbp-0x31]
   1400383d2:	call   0x14002b150
   1400383d7:	inc    r13d
   1400383da:	inc    r14
   1400383dd:	cmp    r13d,0x100
   1400383e4:	mov    r12,QWORD PTR [rsp+0x28]
   1400383e9:	jb     0x1400382f0
   1400383ef:	cmp    QWORD PTR [rbp-0x41],0x10
   1400383f4:	jb     0x1400383ff
   1400383f6:	mov    rcx,QWORD PTR [rbp-0x59]
   1400383fa:	call   0x14002b150
   1400383ff:	mov    QWORD PTR [rbp-0x41],0xf
   140038407:	mov    QWORD PTR [rbp-0x49],0x0
   14003840f:	mov    BYTE PTR [rbp-0x59],0x0
   140038413:	cmp    QWORD PTR [rbp+0xf],0x10
   140038418:	jb     0x14003844c
   14003841a:	mov    rcx,QWORD PTR [rbp-0x9]
   14003841e:	call   0x14002b150
   140038423:	jmp    0x14003844c
   140038425:	cmp    sil,dl
   140038428:	jb     0x140038499
   14003842a:	movzx  ecx,sil
   14003842e:	movzx  eax,dl
   140038431:	sub    ecx,eax
   140038433:	inc    ecx
   140038435:	movsxd r8,ecx
   140038438:	movzx  eax,dl
   14003843b:	lea    rcx,[rax+r15*1+0x10]
   140038440:	mov    edx,0x1
   140038445:	call   0x14002b144
   14003844a:	jmp    0x140038455
   14003844c:	mov    r15,QWORD PTR [rbp-0x79]
   140038450:	mov    r12,QWORD PTR [rsp+0x28]
   140038455:	cmp    rbx,rdi
   140038458:	je     0x1400384a0
   14003845a:	jmp    0x1400381f0
   14003845f:	cmp    QWORD PTR [rbp-0x41],0x10
   140038464:	jb     0x140038477
   140038466:	mov    rcx,QWORD PTR [rbp-0x59]
   14003846a:	call   0x14002b150
   14003846f:	mov    r15,QWORD PTR [rbp+0xf]
   140038473:	mov    r14,QWORD PTR [rbp-0x9]
   140038477:	mov    QWORD PTR [rbp-0x41],0xf
   14003847f:	mov    QWORD PTR [rbp-0x49],0x0
   140038487:	mov    BYTE PTR [rbp-0x59],0x0
   14003848b:	cmp    r15,0x10
   14003848f:	jb     0x140038499
   140038491:	mov    rcx,r14
   140038494:	call   0x14002b150
   140038499:	xor    eax,eax
   14003849b:	jmp    0x14003876e
   1400384a0:	mov    r13,QWORD PTR [rbp-0x69]
   1400384a4:	mov    r14,QWORD PTR [rbp-0x71]
   1400384a8:	mov    esi,DWORD PTR [r13+0x44]
   1400384ac:	mov    rax,QWORD PTR [r12]
   1400384b0:	test   DWORD PTR [rax+0x30],0x100000
   1400384b7:	je     0x1400384d8
   1400384b9:	mov    ecx,DWORD PTR [r12+0x3c]
   1400384be:	mov    eax,ecx
   1400384c0:	and    eax,esi
   1400384c2:	cmp    eax,ecx
   1400384c4:	je     0x1400384d3
   1400384c6:	mov    ecx,DWORD PTR [r12+0x40]
   1400384cb:	mov    eax,ecx
   1400384cd:	and    eax,esi
   1400384cf:	cmp    eax,ecx
   1400384d1:	jne    0x1400384d8
   1400384d3:	or     esi,DWORD PTR [r12+0x44]
   1400384d8:	xor    r15d,r15d
   1400384db:	test   esi,esi
   1400384dd:	je     0x140038514
   1400384df:	mov    ebx,r15d
   1400384e2:	mov    rdi,r14
   1400384e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400384f0:	mov    r8d,esi
   1400384f3:	movzx  edx,bl
   1400384f6:	mov    rcx,QWORD PTR [r12+0x8]
   1400384fb:	call   0x14002cbd0
   140038500:	test   al,al
   140038502:	je     0x140038507
   140038504:	mov    BYTE PTR [rdi],0x1
   140038507:	inc    ebx
   140038509:	inc    rdi
   14003850c:	cmp    ebx,0x100
   140038512:	jb     0x1400384f0
   140038514:	mov    esi,DWORD PTR [r13+0x48]
   140038518:	mov    rax,QWORD PTR [r12]
   14003851c:	test   DWORD PTR [rax+0x30],0x100000
   140038523:	je     0x140038544
   140038525:	mov    ecx,DWORD PTR [r12+0x3c]
   14003852a:	mov    eax,ecx
   14003852c:	and    eax,esi
   14003852e:	cmp    eax,ecx
   140038530:	je     0x14003853f
   140038532:	mov    ecx,DWORD PTR [r12+0x40]
   140038537:	mov    eax,ecx
   140038539:	and    eax,esi
   14003853b:	cmp    eax,ecx
   14003853d:	jne    0x140038544
   14003853f:	or     esi,DWORD PTR [r12+0x44]
   140038544:	test   esi,esi
   140038546:	je     0x140038574
   140038548:	mov    ebx,r15d
   14003854b:	mov    rdi,r14
   14003854e:	xchg   ax,ax
   140038550:	mov    r8d,esi
   140038553:	movzx  edx,bl
   140038556:	mov    rcx,QWORD PTR [r12+0x8]
   14003855b:	call   0x14002cbd0
   140038560:	test   al,al
   140038562:	jne    0x140038567
   140038564:	mov    BYTE PTR [rdi],0x1
   140038567:	inc    ebx
   140038569:	inc    rdi
   14003856c:	cmp    ebx,0x100
   140038572:	jb     0x140038550
   140038574:	mov    rbx,QWORD PTR [r13+0x50]
   140038578:	mov    rdi,QWORD PTR [r13+0x58]
   14003857c:	cmp    rbx,rdi
   14003857f:	je     0x140038738
   140038585:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038590:	mov    QWORD PTR [rbp-0x41],0xf
   140038598:	mov    QWORD PTR [rbp-0x49],r15
   14003859c:	mov    BYTE PTR [rbp-0x59],0x0
   1400385a0:	lea    r9,[rbx+0x1]
   1400385a4:	mov    r8,rbx
   1400385a7:	lea    rdx,[rbp-0x31]
   1400385ab:	mov    rcx,QWORD PTR [r12+0x8]
   1400385b0:	call   0x140035f90
   1400385b5:	mov    rsi,rax
   1400385b8:	lea    rax,[rbp-0x59]
   1400385bc:	cmp    rax,rsi
   1400385bf:	je     0x140038627
   1400385c1:	cmp    QWORD PTR [rbp-0x41],0x10
   1400385c6:	jb     0x1400385d1
   1400385c8:	mov    rcx,QWORD PTR [rbp-0x59]
   1400385cc:	call   0x14002b150
   1400385d1:	mov    QWORD PTR [rbp-0x41],0xf
   1400385d9:	mov    QWORD PTR [rbp-0x49],r15
   1400385dd:	mov    BYTE PTR [rbp-0x59],0x0
   1400385e1:	cmp    QWORD PTR [rsi+0x18],0x10
   1400385e6:	jae    0x1400385fe
   1400385e8:	mov    r8,QWORD PTR [rsi+0x10]
   1400385ec:	inc    r8
   1400385ef:	mov    rdx,rsi
   1400385f2:	lea    rcx,[rbp-0x59]
   1400385f6:	call   QWORD PTR [rip+0x10ff4]        # 0x1400495f0
   1400385fc:	jmp    0x140038608
   1400385fe:	mov    rax,QWORD PTR [rsi]
   140038601:	mov    QWORD PTR [rbp-0x59],rax
   140038605:	mov    QWORD PTR [rsi],r15
   140038608:	mov    rax,QWORD PTR [rsi+0x10]
   14003860c:	mov    QWORD PTR [rbp-0x49],rax
   140038610:	mov    rax,QWORD PTR [rsi+0x18]
   140038614:	mov    QWORD PTR [rbp-0x41],rax
   140038618:	mov    QWORD PTR [rsi+0x18],0xf
   140038620:	mov    QWORD PTR [rsi+0x10],r15
   140038624:	mov    BYTE PTR [rsi],0x0
   140038627:	cmp    QWORD PTR [rbp-0x19],0x10
   14003862c:	jb     0x140038637
   14003862e:	mov    rcx,QWORD PTR [rbp-0x31]
   140038632:	call   0x14002b150
   140038637:	cmp    QWORD PTR [rbp-0x49],0x0
   14003863c:	je     0x140038724
   140038642:	mov    esi,r15d
   140038645:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038650:	mov    BYTE PTR [rsp+0x20],sil
   140038655:	mov    BYTE PTR [rsp+0x21],0x0
   14003865a:	lea    r9,[rsp+0x21]
   14003865f:	lea    r8,[rsp+0x20]
   140038664:	lea    rdx,[rbp-0x31]
   140038668:	mov    rcx,QWORD PTR [r12+0x8]
   14003866d:	call   0x140035f90
   140038672:	nop
   140038673:	lea    rdx,[rbp-0x31]
   140038677:	mov    r15,QWORD PTR [rbp-0x19]
   14003867b:	cmp    r15,0x10
   14003867f:	cmovae rdx,QWORD PTR [rbp-0x31]
   140038684:	lea    rcx,[rbp-0x59]
   140038688:	cmp    QWORD PTR [rbp-0x41],0x10
   14003868d:	cmovae rcx,QWORD PTR [rbp-0x59]
   140038692:	mov    r12,QWORD PTR [rbp-0x21]
   140038696:	mov    r8,r12
   140038699:	mov    r13,QWORD PTR [rbp-0x49]
   14003869d:	cmp    r13,r12
   1400386a0:	cmovb  r8,r13
   1400386a4:	call   0x14002b13e
   1400386a9:	movsxd rcx,eax
   1400386ac:	test   eax,eax
   1400386ae:	jne    0x1400386c4
   1400386b0:	cmp    r13,r12
   1400386b3:	jae    0x1400386ba
   1400386b5:	or     ecx,0xffffffff
   1400386b8:	jmp    0x1400386c4
   1400386ba:	xor    eax,eax
   1400386bc:	cmp    r13,r12
   1400386bf:	setne  al
   1400386c2:	mov    ecx,eax
   1400386c4:	test   ecx,ecx
   1400386c6:	sete   al
   1400386c9:	test   al,al
   1400386cb:	je     0x1400386d1
   1400386cd:	mov    BYTE PTR [r14],0x1
   1400386d1:	cmp    r15,0x10
   1400386d5:	jb     0x1400386e0
   1400386d7:	mov    rcx,QWORD PTR [rbp-0x31]
   1400386db:	call   0x14002b150
   1400386e0:	inc    esi
   1400386e2:	inc    r14
   1400386e5:	cmp    esi,0x100
   1400386eb:	mov    r12,QWORD PTR [rsp+0x28]
   1400386f0:	jb     0x140038650
   1400386f6:	add    rbx,0x2
   1400386fa:	cmp    QWORD PTR [rbp-0x41],0x10
   1400386ff:	jb     0x14003870a
   140038701:	mov    rcx,QWORD PTR [rbp-0x59]
   140038705:	call   0x14002b150
   14003870a:	cmp    rbx,rdi
   14003870d:	mov    r12,QWORD PTR [rsp+0x28]
   140038712:	mov    r14,QWORD PTR [rbp-0x71]
   140038716:	mov    r15d,0x0
   14003871c:	jne    0x140038590
   140038722:	jmp    0x140038738
   140038724:	cmp    QWORD PTR [rbp-0x41],0x10
   140038729:	jb     0x140038734
   14003872b:	mov    rcx,QWORD PTR [rbp-0x59]
   14003872f:	call   0x14002b150
   140038734:	xor    eax,eax
   140038736:	jmp    0x14003876e
   140038738:	mov    r8,QWORD PTR [rbp-0x79]
   14003873c:	cmp    BYTE PTR [rsp+0x24],0x0
   140038741:	je     0x14003876b
   140038743:	lea    rcx,[r8+0x11]
   140038747:	mov    edx,0x80
   14003874c:	nop    DWORD PTR [rax+0x0]
   140038750:	cmp    BYTE PTR [rcx-0x1],0x0
   140038754:	sete   al
   140038757:	mov    BYTE PTR [rcx-0x1],al
   14003875a:	cmp    BYTE PTR [rcx],0x0
   14003875d:	sete   al
   140038760:	mov    BYTE PTR [rcx],al
   140038762:	add    rcx,0x2
   140038766:	dec    rdx
   140038769:	jne    0x140038750
   14003876b:	mov    rax,r8
   14003876e:	mov    rcx,QWORD PTR [rbp+0x1f]
   140038772:	xor    rcx,rsp
   140038775:	call   0x14002b100
   14003877a:	mov    rbx,QWORD PTR [rsp+0x120]
   140038782:	add    rsp,0xd0
   140038789:	pop    r15
   14003878b:	pop    r14
   14003878d:	pop    r13
   14003878f:	pop    r12
   140038791:	pop    rdi
   140038792:	pop    rsi
   140038793:	pop    rbp
   140038794:	ret    
   140038795:	int3   
   140038796:	int3   
   140038797:	int3   
   140038798:	int3   
   140038799:	int3   
   14003879a:	int3   
   14003879b:	int3   
   14003879c:	int3   
   14003879d:	int3   
   14003879e:	int3   
   14003879f:	int3   
   1400387a0:	rex push rbp
   1400387a2:	push   rsi
   1400387a3:	push   rdi
   1400387a4:	push   r12
   1400387a6:	push   r13
   1400387a8:	push   r14
   1400387aa:	push   r15
   1400387ac:	lea    rbp,[rsp-0x27]
   1400387b1:	sub    rsp,0xd0
   1400387b8:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   1400387c0:	mov    QWORD PTR [rsp+0x120],rbx
   1400387c8:	mov    rax,QWORD PTR [rip+0x2fa21]        # 0x1400681f0
   1400387cf:	xor    rax,rsp
   1400387d2:	mov    QWORD PTR [rbp+0x17],rax
   1400387d6:	mov    r14,rdx
   1400387d9:	mov    QWORD PTR [rbp-0x71],rdx
   1400387dd:	mov    r13,rcx
   1400387e0:	mov    edx,0xe
   1400387e5:	lea    r8d,[rdx+0x1a]
   1400387e9:	call   0x14002eb10
   1400387ee:	mov    r15,rax
   1400387f1:	mov    r8,QWORD PTR [r14+0x8]
   1400387f5:	sub    r8,QWORD PTR [r14]
   1400387f8:	sar    r8,1
   1400387fb:	mov    DWORD PTR [rax+0x10],r8d
   1400387ff:	mov    rcx,QWORD PTR [r14+0x28]
   140038803:	sub    rcx,QWORD PTR [r14+0x20]
   140038807:	sar    rcx,1
   14003880a:	shr    ecx,1
   14003880c:	mov    DWORD PTR [rax+0x14],ecx
   14003880f:	mov    rax,QWORD PTR [r14+0x58]
   140038813:	sub    rax,QWORD PTR [r14+0x50]
   140038817:	sar    rax,1
   14003881a:	mov    DWORD PTR [r15+0x18],eax
   14003881e:	mov    r8d,DWORD PTR [r14+0x44]
   140038822:	mov    DWORD PTR [r15+0x1c],r8d
   140038826:	mov    edx,DWORD PTR [r14+0x48]
   14003882a:	mov    DWORD PTR [r15+0x20],edx
   14003882e:	mov    rax,QWORD PTR [r13+0x0]
   140038832:	test   DWORD PTR [rax+0x30],0x100000
   140038839:	je     0x140038882
   14003883b:	mov    ecx,DWORD PTR [r13+0x3c]
   14003883f:	mov    eax,r8d
   140038842:	and    eax,ecx
   140038844:	cmp    eax,ecx
   140038846:	je     0x140038855
   140038848:	mov    ecx,DWORD PTR [r13+0x40]
   14003884c:	mov    eax,r8d
   14003884f:	and    eax,ecx
   140038851:	cmp    eax,ecx
   140038853:	jne    0x140038860
   140038855:	mov    eax,DWORD PTR [r13+0x44]
   140038859:	or     eax,r8d
   14003885c:	mov    DWORD PTR [r15+0x1c],eax
   140038860:	mov    ecx,DWORD PTR [r13+0x3c]
   140038864:	mov    eax,edx
   140038866:	and    eax,ecx
   140038868:	cmp    eax,ecx
   14003886a:	je     0x140038878
   14003886c:	mov    ecx,DWORD PTR [r13+0x40]
   140038870:	mov    eax,edx
   140038872:	and    eax,ecx
   140038874:	cmp    eax,ecx
   140038876:	jne    0x140038882
   140038878:	mov    eax,DWORD PTR [r13+0x44]
   14003887c:	or     eax,edx
   14003887e:	mov    DWORD PTR [r15+0x20],eax
   140038882:	movzx  eax,BYTE PTR [r14+0x40]
   140038887:	mov    BYTE PTR [r15+0x24],al
   14003888b:	cmp    BYTE PTR [r14+0x41],0x0
   140038890:	sete   al
   140038893:	mov    BYTE PTR [r15+0x25],al
   140038897:	mov    rax,QWORD PTR [r13+0x0]
   14003889b:	sub    r15,QWORD PTR [rax+0x168]
   1400388a2:	mov    QWORD PTR [rbp-0x79],r15
   1400388a6:	mov    rbx,QWORD PTR [r14]
   1400388a9:	mov    rdi,QWORD PTR [r14+0x8]
   1400388ad:	xor    r12d,r12d
   1400388b0:	cmp    rbx,rdi
   1400388b3:	je     0x140038963
   1400388b9:	nop    DWORD PTR [rax+0x0]
   1400388c0:	cmp    BYTE PTR [rbx+0x1],0x0
   1400388c4:	setne  r12b
   1400388c8:	add    r12,0x2
   1400388cc:	mov    rsi,QWORD PTR [r13+0x0]
   1400388d0:	add    rsi,0x160
   1400388d7:	mov    rcx,QWORD PTR [rsi+0x10]
   1400388db:	mov    rax,QWORD PTR [rsi]
   1400388de:	sub    rax,rcx
   1400388e1:	cmp    rax,r12
   1400388e4:	jae    0x1400388f8
   1400388e6:	mov    rdx,r12
   1400388e9:	sub    rdx,QWORD PTR [rsi+0x8]
   1400388ed:	add    rdx,rcx
   1400388f0:	mov    rcx,rsi
   1400388f3:	call   0x140041bf0
   1400388f8:	mov    rdx,QWORD PTR [rsi+0x10]
   1400388fc:	lea    rax,[r12+rdx*1]
   140038900:	mov    QWORD PTR [rsi+0x10],rax
   140038904:	movzx  eax,BYTE PTR [rbx]
   140038907:	mov    rcx,QWORD PTR [r13+0x8]
   14003890b:	cmp    BYTE PTR [r13+0x18],0x0
   140038910:	je     0x140038920
   140038912:	mov    rcx,QWORD PTR [rcx]
   140038915:	movzx  eax,al
   140038918:	movzx  eax,BYTE PTR [rax+rcx*1+0x104]
   140038920:	mov    BYTE PTR [rdx],al
   140038922:	movzx  eax,BYTE PTR [rbx+0x1]
   140038926:	test   al,al
   140038928:	je     0x14003894c
   14003892a:	mov    rcx,QWORD PTR [r13+0x8]
   14003892e:	cmp    BYTE PTR [r13+0x18],0x0
   140038933:	je     0x140038943
   140038935:	mov    rcx,QWORD PTR [rcx]
   140038938:	movzx  eax,al
   14003893b:	movzx  eax,BYTE PTR [rax+rcx*1+0x104]
   140038943:	mov    BYTE PTR [rdx+0x1],al
   140038946:	mov    BYTE PTR [rdx+0x2],0x0
   14003894a:	jmp    0x140038950
   14003894c:	mov    BYTE PTR [rdx+0x1],0x0
   140038950:	add    rbx,0x2
   140038954:	cmp    rbx,rdi
   140038957:	mov    r12d,0x0
   14003895d:	jne    0x1400388c0
   140038963:	mov    rbx,QWORD PTR [r14+0x20]
   140038967:	mov    rdi,QWORD PTR [r14+0x28]
   14003896b:	cmp    rbx,rdi
   14003896e:	je     0x140039171
   140038974:	movzx  esi,BYTE PTR [rbx]
   140038977:	movzx  r14d,BYTE PTR [rbx+0x1]
   14003897c:	mov    r10,QWORD PTR [r13+0x8]
   140038980:	movzx  edx,BYTE PTR [r13+0x18]
   140038985:	test   dl,dl
   140038987:	je     0x1400389a5
   140038989:	mov    rcx,QWORD PTR [r10]
   14003898c:	movzx  eax,sil
   140038990:	movzx  esi,BYTE PTR [rax+rcx*1+0x104]
   140038998:	movzx  eax,r14b
   14003899c:	movzx  r14d,BYTE PTR [rax+rcx*1+0x104]
   1400389a5:	movzx  r8d,BYTE PTR [rbx+0x2]
   1400389aa:	mov    BYTE PTR [rsp+0x20],r8b
   1400389af:	movzx  r15d,BYTE PTR [rbx+0x3]
   1400389b4:	test   dl,dl
   1400389b6:	je     0x1400389da
   1400389b8:	mov    rcx,QWORD PTR [r10]
   1400389bb:	movzx  eax,r8b
   1400389bf:	movzx  r8d,BYTE PTR [rax+rcx*1+0x104]
   1400389c8:	mov    BYTE PTR [rsp+0x20],r8b
   1400389cd:	movzx  eax,r15b
   1400389d1:	movzx  r15d,BYTE PTR [rax+rcx*1+0x104]
   1400389da:	add    rbx,0x4
   1400389de:	mov    QWORD PTR [rbp-0x49],0xf
   1400389e6:	mov    QWORD PTR [rbp-0x51],r12
   1400389ea:	mov    BYTE PTR [rbp-0x61],0x0
   1400389ee:	mov    QWORD PTR [rbp-0x21],0xf
   1400389f6:	mov    QWORD PTR [rbp-0x29],r12
   1400389fa:	mov    BYTE PTR [rbp-0x39],0x0
   1400389fe:	mov    rax,QWORD PTR [r13+0x0]
   140038a02:	test   DWORD PTR [rax+0x30],0x200000
   140038a09:	je     0x140038c80
   140038a0f:	mov    BYTE PTR [rsp+0x24],sil
   140038a14:	mov    BYTE PTR [rsp+0x25],r14b
   140038a19:	mov    BYTE PTR [rsp+0x26],0x0
   140038a1e:	mov    BYTE PTR [rsp+0x28],r8b
   140038a23:	mov    BYTE PTR [rbp-0x80],r15b
   140038a27:	mov    BYTE PTR [rbp-0x7f],0x0
   140038a2b:	lea    r9,[rsp+0x26]
   140038a30:	lea    rax,[rsp+0x25]
   140038a35:	test   r14b,r14b
   140038a38:	cmove  r9,rax
   140038a3c:	lea    r8,[rsp+0x24]
   140038a41:	lea    rdx,[rbp-0x11]
   140038a45:	mov    rcx,r10
   140038a48:	call   0x14002f4c0
   140038a4d:	mov    rsi,rax
   140038a50:	lea    rax,[rbp-0x61]
   140038a54:	cmp    rax,rsi
   140038a57:	je     0x140038abf
   140038a59:	cmp    QWORD PTR [rbp-0x49],0x10
   140038a5e:	jb     0x140038a69
   140038a60:	mov    rcx,QWORD PTR [rbp-0x61]
   140038a64:	call   0x14002b150
   140038a69:	mov    QWORD PTR [rbp-0x49],0xf
   140038a71:	mov    QWORD PTR [rbp-0x51],r12
   140038a75:	mov    BYTE PTR [rbp-0x61],0x0
   140038a79:	cmp    QWORD PTR [rsi+0x18],0x10
   140038a7e:	jae    0x140038a96
   140038a80:	mov    r8,QWORD PTR [rsi+0x10]
   140038a84:	inc    r8
   140038a87:	mov    rdx,rsi
   140038a8a:	lea    rcx,[rbp-0x61]
   140038a8e:	call   QWORD PTR [rip+0x10b5c]        # 0x1400495f0
   140038a94:	jmp    0x140038aa0
   140038a96:	mov    rax,QWORD PTR [rsi]
   140038a99:	mov    QWORD PTR [rbp-0x61],rax
   140038a9d:	mov    QWORD PTR [rsi],r12
   140038aa0:	mov    rax,QWORD PTR [rsi+0x10]
   140038aa4:	mov    QWORD PTR [rbp-0x51],rax
   140038aa8:	mov    rax,QWORD PTR [rsi+0x18]
   140038aac:	mov    QWORD PTR [rbp-0x49],rax
   140038ab0:	mov    QWORD PTR [rsi+0x18],0xf
   140038ab8:	mov    QWORD PTR [rsi+0x10],r12
   140038abc:	mov    BYTE PTR [rsi],0x0
   140038abf:	cmp    QWORD PTR [rbp+0x7],0x10
   140038ac4:	jb     0x140038acf
   140038ac6:	mov    rcx,QWORD PTR [rbp-0x11]
   140038aca:	call   0x14002b150
   140038acf:	lea    r9,[rbp-0x7f]
   140038ad3:	lea    rax,[rbp-0x80]
   140038ad7:	cmp    BYTE PTR [rbp-0x80],0x0
   140038adb:	cmove  r9,rax
   140038adf:	lea    r8,[rsp+0x28]
   140038ae4:	lea    rdx,[rbp-0x11]
   140038ae8:	mov    rcx,QWORD PTR [r13+0x8]
   140038aec:	call   0x14002f4c0
   140038af1:	mov    rsi,rax
   140038af4:	lea    rax,[rbp-0x39]
   140038af8:	cmp    rax,rsi
   140038afb:	je     0x140038b63
   140038afd:	cmp    QWORD PTR [rbp-0x21],0x10
   140038b02:	jb     0x140038b0d
   140038b04:	mov    rcx,QWORD PTR [rbp-0x39]
   140038b08:	call   0x14002b150
   140038b0d:	mov    QWORD PTR [rbp-0x21],0xf
   140038b15:	mov    QWORD PTR [rbp-0x29],r12
   140038b19:	mov    BYTE PTR [rbp-0x39],0x0
   140038b1d:	cmp    QWORD PTR [rsi+0x18],0x10
   140038b22:	jae    0x140038b3a
   140038b24:	mov    r8,QWORD PTR [rsi+0x10]
   140038b28:	inc    r8
   140038b2b:	mov    rdx,rsi
   140038b2e:	lea    rcx,[rbp-0x39]
   140038b32:	call   QWORD PTR [rip+0x10ab8]        # 0x1400495f0
   140038b38:	jmp    0x140038b44
   140038b3a:	mov    rax,QWORD PTR [rsi]
   140038b3d:	mov    QWORD PTR [rbp-0x39],rax
   140038b41:	mov    QWORD PTR [rsi],r12
   140038b44:	mov    rax,QWORD PTR [rsi+0x10]
   140038b48:	mov    QWORD PTR [rbp-0x29],rax
   140038b4c:	mov    rax,QWORD PTR [rsi+0x18]
   140038b50:	mov    QWORD PTR [rbp-0x21],rax
   140038b54:	mov    QWORD PTR [rsi+0x18],0xf
   140038b5c:	mov    QWORD PTR [rsi+0x10],r12
   140038b60:	mov    BYTE PTR [rsi],0x0
   140038b63:	cmp    QWORD PTR [rbp+0x7],0x10
   140038b68:	jb     0x140038b73
   140038b6a:	mov    rcx,QWORD PTR [rbp-0x11]
   140038b6e:	call   0x14002b150
   140038b73:	mov    rsi,QWORD PTR [rbp-0x51]
   140038b77:	test   rsi,rsi
   140038b7a:	jne    0x140038bee
   140038b7c:	mov    ecx,0xf
   140038b81:	mov    QWORD PTR [rbp+0x7],rcx
   140038b85:	mov    esi,0x1
   140038b8a:	mov    QWORD PTR [rbp-0x1],rsi
   140038b8e:	mov    WORD PTR [rbp-0x11],0x0
   140038b94:	cmp    QWORD PTR [rbp-0x49],0x10
   140038b99:	jb     0x140038bac
   140038b9b:	mov    rcx,QWORD PTR [rbp-0x61]
   140038b9f:	call   0x14002b150
   140038ba4:	mov    rcx,QWORD PTR [rbp+0x7]
   140038ba8:	mov    rsi,QWORD PTR [rbp-0x1]
   140038bac:	mov    QWORD PTR [rbp-0x49],0xf
   140038bb4:	mov    QWORD PTR [rbp-0x51],r12
   140038bb8:	mov    BYTE PTR [rbp-0x61],0x0
   140038bbc:	cmp    rcx,0x10
   140038bc0:	jae    0x140038bde
   140038bc2:	lea    r8,[rsi+0x1]
   140038bc6:	lea    rdx,[rbp-0x11]
   140038bca:	lea    rcx,[rbp-0x61]
   140038bce:	call   QWORD PTR [rip+0x10a1c]        # 0x1400495f0
   140038bd4:	mov    rcx,QWORD PTR [rbp+0x7]
   140038bd8:	mov    rsi,QWORD PTR [rbp-0x1]
   140038bdc:	jmp    0x140038be6
   140038bde:	mov    rax,QWORD PTR [rbp-0x11]
   140038be2:	mov    QWORD PTR [rbp-0x61],rax
   140038be6:	mov    QWORD PTR [rbp-0x51],rsi
   140038bea:	mov    QWORD PTR [rbp-0x49],rcx
   140038bee:	mov    r12,QWORD PTR [rbp-0x29]
   140038bf2:	test   r12,r12
   140038bf5:	jne    0x140038f69
   140038bfb:	mov    ecx,0xf
   140038c00:	mov    QWORD PTR [rbp+0x7],rcx
   140038c04:	mov    r12d,0x1
   140038c0a:	mov    QWORD PTR [rbp-0x1],r12
   140038c0e:	mov    WORD PTR [rbp-0x11],0x0
   140038c14:	cmp    QWORD PTR [rbp-0x21],0x10
   140038c19:	jb     0x140038c30
   140038c1b:	mov    rcx,QWORD PTR [rbp-0x39]
   140038c1f:	call   0x14002b150
   140038c24:	mov    rsi,QWORD PTR [rbp-0x51]
   140038c28:	mov    rcx,QWORD PTR [rbp+0x7]
   140038c2c:	mov    r12,QWORD PTR [rbp-0x1]
   140038c30:	mov    QWORD PTR [rbp-0x21],0xf
   140038c38:	mov    QWORD PTR [rbp-0x29],0x0
   140038c40:	mov    BYTE PTR [rbp-0x39],0x0
   140038c44:	cmp    rcx,0x10
   140038c48:	jae    0x140038c6b
   140038c4a:	lea    r8,[r12+0x1]
   140038c4f:	lea    rdx,[rbp-0x11]
   140038c53:	lea    rcx,[rbp-0x39]
   140038c57:	call   QWORD PTR [rip+0x10993]        # 0x1400495f0
   140038c5d:	mov    rsi,QWORD PTR [rbp-0x51]
   140038c61:	mov    rcx,QWORD PTR [rbp+0x7]
   140038c65:	mov    r12,QWORD PTR [rbp-0x1]
   140038c69:	jmp    0x140038c73
   140038c6b:	mov    rax,QWORD PTR [rbp-0x11]
   140038c6f:	mov    QWORD PTR [rbp-0x39],rax
   140038c73:	mov    QWORD PTR [rbp-0x29],r12
   140038c77:	mov    QWORD PTR [rbp-0x21],rcx
   140038c7b:	jmp    0x140038f69
   140038c80:	test   r14b,r14b
   140038c83:	je     0x140038dae
   140038c89:	xor    r8d,r8d
   140038c8c:	lea    rdx,[rbp-0x61]
   140038c90:	lea    rcx,[rbp-0x60]
   140038c94:	call   QWORD PTR [rip+0x10956]        # 0x1400495f0
   140038c9a:	lea    r11,[rbp-0x61]
   140038c9e:	cmp    QWORD PTR [rbp-0x49],0x10
   140038ca3:	cmovae r11,QWORD PTR [rbp-0x61]
   140038ca8:	mov    BYTE PTR [r11],sil
   140038cab:	mov    QWORD PTR [rbp-0x51],0x1
   140038cb3:	lea    rax,[rbp-0x61]
   140038cb7:	cmp    QWORD PTR [rbp-0x49],0x10
   140038cbc:	cmovae rax,QWORD PTR [rbp-0x61]
   140038cc1:	mov    BYTE PTR [rax+0x1],0x0
   140038cc5:	lea    rax,[rbp-0x61]
   140038cc9:	mov    r9,QWORD PTR [rbp-0x61]
   140038ccd:	mov    rdx,QWORD PTR [rbp-0x49]
   140038cd1:	cmp    rdx,0x10
   140038cd5:	cmovae rax,r9
   140038cd9:	mov    r8,QWORD PTR [rbp-0x51]
   140038cdd:	lea    r12,[r8+rax*1]
   140038ce1:	lea    rax,[rbp-0x61]
   140038ce5:	cmovae rax,r9
   140038ce9:	test   r12,r12
   140038cec:	je     0x140038cfa
   140038cee:	sub    r12,rax
   140038cf1:	cmp    r8,r12
   140038cf4:	jb     0x1400390f4
   140038cfa:	or     rax,0xffffffffffffffff
   140038cfe:	sub    rax,r8
   140038d01:	cmp    rax,0x1
   140038d05:	jbe    0x1400390e6
   140038d0b:	lea    rsi,[r8+0x1]
   140038d0f:	cmp    rsi,0xfffffffffffffffe
   140038d13:	ja     0x1400390d8
   140038d19:	cmp    rdx,rsi
   140038d1c:	jae    0x140038d2c
   140038d1e:	mov    rdx,rsi
   140038d21:	lea    rcx,[rbp-0x61]
   140038d25:	call   0x140005750
   140038d2a:	jmp    0x140038d44
   140038d2c:	test   rsi,rsi
   140038d2f:	jne    0x140038d53
   140038d31:	mov    QWORD PTR [rbp-0x51],rsi
   140038d35:	lea    rax,[rbp-0x61]
   140038d39:	cmp    rdx,0x10
   140038d3d:	cmovae rax,r9
   140038d41:	mov    BYTE PTR [rax],sil
   140038d44:	mov    r9,QWORD PTR [rbp-0x61]
   140038d48:	mov    r8,QWORD PTR [rbp-0x51]
   140038d4c:	mov    rdx,QWORD PTR [rbp-0x49]
   140038d50:	test   rsi,rsi
   140038d53:	setne  al
   140038d56:	test   al,al
   140038d58:	je     0x140038dfc
   140038d5e:	lea    rcx,[rbp-0x61]
   140038d62:	cmp    rdx,0x10
   140038d66:	cmovae rcx,r9
   140038d6a:	lea    rax,[rbp-0x61]
   140038d6e:	cmovae rax,r9
   140038d72:	sub    r8,r12
   140038d75:	lea    rdx,[rcx+r12*1]
   140038d79:	lea    rcx,[rax+r12*1+0x1]
   140038d7e:	call   QWORD PTR [rip+0x1086c]        # 0x1400495f0
   140038d84:	lea    r11,[rbp-0x61]
   140038d88:	cmp    QWORD PTR [rbp-0x49],0x10
   140038d8d:	cmovae r11,QWORD PTR [rbp-0x61]
   140038d92:	mov    BYTE PTR [r11+r12*1],r14b
   140038d96:	mov    QWORD PTR [rbp-0x51],rsi
   140038d9a:	lea    rax,[rbp-0x61]
   140038d9e:	cmp    QWORD PTR [rbp-0x49],0x10
   140038da3:	cmovae rax,QWORD PTR [rbp-0x61]
   140038da8:	mov    BYTE PTR [rax+rsi*1],0x0
   140038dac:	jmp    0x140038dfc
   140038dae:	mov    QWORD PTR [rbp+0x7],0xf
   140038db6:	mov    BYTE PTR [rbp-0x11],sil
   140038dba:	mov    QWORD PTR [rbp-0x1],0x1
   140038dc2:	mov    BYTE PTR [rbp-0x10],0x0
   140038dc6:	mov    QWORD PTR [rbp-0x49],0xf
   140038dce:	mov    QWORD PTR [rbp-0x51],r12
   140038dd2:	mov    BYTE PTR [rbp-0x61],0x0
   140038dd6:	mov    r8d,0x2
   140038ddc:	lea    rdx,[rbp-0x11]
   140038de0:	lea    rcx,[rbp-0x61]
   140038de4:	call   QWORD PTR [rip+0x10806]        # 0x1400495f0
   140038dea:	mov    r11,QWORD PTR [rbp-0x1]
   140038dee:	mov    QWORD PTR [rbp-0x51],r11
   140038df2:	mov    rax,QWORD PTR [rbp+0x7]
   140038df6:	mov    QWORD PTR [rbp-0x49],rax
   140038dfa:	jmp    0x140038dff
   140038dfc:	xor    r12d,r12d
   140038dff:	lea    rax,[rbp-0x39]
   140038e03:	test   r15b,r15b
   140038e06:	je     0x140038f26
   140038e0c:	mov    r9,QWORD PTR [rbp-0x39]
   140038e10:	mov    rdx,QWORD PTR [rbp-0x21]
   140038e14:	cmp    rdx,0x10
   140038e18:	cmovae rax,r9
   140038e1c:	mov    r8,QWORD PTR [rbp-0x29]
   140038e20:	lea    r12,[r8+rax*1]
   140038e24:	lea    rax,[rbp-0x39]
   140038e28:	cmovae rax,r9
   140038e2c:	test   r12,r12
   140038e2f:	je     0x140038e3d
   140038e31:	sub    r12,rax
   140038e34:	cmp    r8,r12
   140038e37:	jb     0x14003911e
   140038e3d:	or     rax,0xffffffffffffffff
   140038e41:	sub    rax,r8
   140038e44:	cmp    rax,0x1
   140038e48:	jbe    0x140039110
   140038e4e:	lea    rsi,[r8+0x1]
   140038e52:	cmp    rsi,0xfffffffffffffffe
   140038e56:	ja     0x140039102
   140038e5c:	cmp    rdx,rsi
   140038e5f:	jae    0x140038e6f
   140038e61:	mov    rdx,rsi
   140038e64:	lea    rcx,[rbp-0x39]
   140038e68:	call   0x140005750
   140038e6d:	jmp    0x140038e87
   140038e6f:	test   rsi,rsi
   140038e72:	jne    0x140038e96
   140038e74:	mov    QWORD PTR [rbp-0x29],rsi
   140038e78:	lea    rax,[rbp-0x39]
   140038e7c:	cmp    rdx,0x10
   140038e80:	cmovae rax,r9
   140038e84:	mov    BYTE PTR [rax],sil
   140038e87:	mov    r9,QWORD PTR [rbp-0x39]
   140038e8b:	mov    r8,QWORD PTR [rbp-0x29]
   140038e8f:	mov    rdx,QWORD PTR [rbp-0x21]
   140038e93:	test   rsi,rsi
   140038e96:	setne  al
   140038e99:	test   al,al
   140038e9b:	je     0x140038efd
   140038e9d:	lea    rcx,[rbp-0x39]
   140038ea1:	cmp    rdx,0x10
   140038ea5:	cmovae rcx,r9
   140038ea9:	lea    rax,[rbp-0x39]
   140038ead:	cmovae rax,r9
   140038eb1:	sub    r8,r12
   140038eb4:	lea    rdx,[rcx+r12*1]
   140038eb8:	lea    rcx,[rax+r12*1+0x1]
   140038ebd:	call   QWORD PTR [rip+0x1072d]        # 0x1400495f0
   140038ec3:	lea    r11,[rbp-0x39]
   140038ec7:	cmp    QWORD PTR [rbp-0x21],0x10
   140038ecc:	cmovae r11,QWORD PTR [rbp-0x39]
   140038ed1:	movzx  r9d,BYTE PTR [rsp+0x20]
   140038ed7:	mov    BYTE PTR [r11+r12*1],r9b
   140038edb:	mov    QWORD PTR [rbp-0x29],rsi
   140038edf:	lea    rax,[rbp-0x39]
   140038ee3:	cmp    QWORD PTR [rbp-0x21],0x10
   140038ee8:	cmovae rax,QWORD PTR [rbp-0x39]
   140038eed:	mov    BYTE PTR [rax+rsi*1],0x0
   140038ef1:	mov    rdx,QWORD PTR [rbp-0x21]
   140038ef5:	mov    r8,QWORD PTR [rbp-0x29]
   140038ef9:	mov    r9,QWORD PTR [rbp-0x39]
   140038efd:	lea    rax,[rbp-0x39]
   140038f01:	cmp    rdx,0x10
   140038f05:	cmovae rax,r9
   140038f09:	lea    rcx,[r8+rax*1]
   140038f0d:	lea    rax,[rbp-0x39]
   140038f11:	cmovae rax,r9
   140038f15:	test   rcx,rcx
   140038f18:	je     0x140038f1d
   140038f1a:	sub    rcx,rax
   140038f1d:	movzx  r9d,r15b
   140038f21:	mov    rdx,rcx
   140038f24:	jmp    0x140038f52
   140038f26:	lea    rdx,[rbp-0x39]
   140038f2a:	mov    r8,QWORD PTR [rbp-0x39]
   140038f2e:	mov    rcx,QWORD PTR [rbp-0x21]
   140038f32:	cmp    rcx,0x10
   140038f36:	cmovae rdx,r8
   140038f3a:	cmovae rax,r8
   140038f3e:	add    rdx,QWORD PTR [rbp-0x29]
   140038f42:	jne    0x140038f49
   140038f44:	mov    rdx,r12
   140038f47:	jmp    0x140038f4c
   140038f49:	sub    rdx,rax
   140038f4c:	movzx  r9d,BYTE PTR [rsp+0x20]
   140038f52:	mov    r8d,0x1
   140038f58:	lea    rcx,[rbp-0x39]
   140038f5c:	call   0x1400304c0
   140038f61:	mov    r12,QWORD PTR [rbp-0x29]
   140038f65:	mov    rsi,QWORD PTR [rbp-0x51]
   140038f69:	lea    rdx,[rbp-0x61]
   140038f6d:	cmp    QWORD PTR [rbp-0x49],0x10
   140038f72:	cmovae rdx,QWORD PTR [rbp-0x61]
   140038f77:	lea    rcx,[rbp-0x39]
   140038f7b:	cmp    QWORD PTR [rbp-0x21],0x10
   140038f80:	cmovae rcx,QWORD PTR [rbp-0x39]
   140038f85:	mov    r8,rsi
   140038f88:	cmp    r12,rsi
   140038f8b:	cmovb  r8,r12
   140038f8f:	call   0x14002b13e
   140038f94:	movsxd rcx,eax
   140038f97:	test   eax,eax
   140038f99:	jne    0x140038faf
   140038f9b:	cmp    r12,rsi
   140038f9e:	jae    0x140038fa5
   140038fa0:	or     ecx,0xffffffff
   140038fa3:	jmp    0x140038faf
   140038fa5:	xor    eax,eax
   140038fa7:	cmp    r12,rsi
   140038faa:	setne  al
   140038fad:	mov    ecx,eax
   140038faf:	test   ecx,ecx
   140038fb1:	sets   al
   140038fb4:	test   al,al
   140038fb6:	jne    0x140039136
   140038fbc:	lea    r12,[r12+rsi*1+0x2]
   140038fc1:	mov    rsi,QWORD PTR [r13+0x0]
   140038fc5:	add    rsi,0x160
   140038fcc:	mov    rdx,QWORD PTR [rsi+0x10]
   140038fd0:	mov    rax,QWORD PTR [rsi]
   140038fd3:	sub    rax,rdx
   140038fd6:	cmp    rax,r12
   140038fd9:	jae    0x140038fea
   140038fdb:	sub    rdx,QWORD PTR [rsi+0x8]
   140038fdf:	add    rdx,r12
   140038fe2:	mov    rcx,rsi
   140038fe5:	call   0x140041bf0
   140038fea:	mov    r11,QWORD PTR [rsi+0x10]
   140038fee:	lea    rax,[r11+r12*1]
   140038ff2:	mov    QWORD PTR [rsi+0x10],rax
   140038ff6:	lea    rcx,[rbp-0x61]
   140038ffa:	mov    r8,QWORD PTR [rbp-0x61]
   140038ffe:	mov    rax,QWORD PTR [rbp-0x49]
   140039002:	cmp    rax,0x10
   140039006:	cmovae rcx,r8
   14003900a:	mov    r10,QWORD PTR [rbp-0x51]
   14003900e:	lea    rdx,[r10+rcx*1]
   140039012:	lea    rcx,[rbp-0x61]
   140039016:	cmovae rcx,r8
   14003901a:	mov    r9,r11
   14003901d:	cmp    rcx,rdx
   140039020:	je     0x140039046
   140039022:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140039030:	movzx  r8d,BYTE PTR [rcx]
   140039034:	inc    rcx
   140039037:	mov    BYTE PTR [r9],r8b
   14003903a:	inc    r9
   14003903d:	cmp    rcx,rdx
   140039040:	jne    0x140039030
   140039042:	mov    r10,QWORD PTR [rbp-0x51]
   140039046:	mov    BYTE PTR [r10+r11*1],0x0
   14003904b:	mov    rax,QWORD PTR [rbp-0x51]
   14003904f:	lea    r11,[rax+r11*1+0x1]
   140039054:	lea    rcx,[rbp-0x39]
   140039058:	mov    r8,QWORD PTR [rbp-0x39]
   14003905c:	mov    rax,QWORD PTR [rbp-0x21]
   140039060:	cmp    rax,0x10
   140039064:	cmovae rcx,r8
   140039068:	mov    r10,QWORD PTR [rbp-0x29]
   14003906c:	lea    rdx,[r10+rcx*1]
   140039070:	lea    rcx,[rbp-0x39]
   140039074:	cmovae rcx,r8
   140039078:	mov    r9,r11
   14003907b:	cmp    rcx,rdx
   14003907e:	je     0x140039096
   140039080:	movzx  r8d,BYTE PTR [rcx]
   140039084:	inc    rcx
   140039087:	mov    BYTE PTR [r9],r8b
   14003908a:	inc    r9
   14003908d:	cmp    rcx,rdx
   140039090:	jne    0x140039080
   140039092:	mov    r10,QWORD PTR [rbp-0x29]
   140039096:	mov    BYTE PTR [r10+r11*1],0x0
   14003909b:	cmp    QWORD PTR [rbp-0x21],0x10
   1400390a0:	jb     0x1400390ab
   1400390a2:	mov    rcx,QWORD PTR [rbp-0x39]
   1400390a6:	call   0x14002b150
   1400390ab:	mov    QWORD PTR [rbp-0x21],0xf
   1400390b3:	xor    r12d,r12d
   1400390b6:	mov    QWORD PTR [rbp-0x29],r12
   1400390ba:	mov    BYTE PTR [rbp-0x39],r12b
   1400390be:	cmp    QWORD PTR [rbp-0x49],0x10
   1400390c3:	jb     0x1400390ce
   1400390c5:	mov    rcx,QWORD PTR [rbp-0x61]
   1400390c9:	call   0x14002b150
   1400390ce:	cmp    rbx,rdi
   1400390d1:	je     0x14003912c
   1400390d3:	jmp    0x140038974
   1400390d8:	lea    rcx,[rip+0x17869]        # 0x140050948
   1400390df:	call   QWORD PTR [rip+0x104b3]        # 0x140049598
   1400390e5:	int3   
   1400390e6:	lea    rcx,[rip+0x1785b]        # 0x140050948
   1400390ed:	call   QWORD PTR [rip+0x104a5]        # 0x140049598
   1400390f3:	int3   
   1400390f4:	lea    rcx,[rip+0x17835]        # 0x140050930
   1400390fb:	call   QWORD PTR [rip+0x104af]        # 0x1400495b0
   140039101:	int3   
   140039102:	lea    rcx,[rip+0x1783f]        # 0x140050948
   140039109:	call   QWORD PTR [rip+0x10489]        # 0x140049598
   14003910f:	int3   
   140039110:	lea    rcx,[rip+0x17831]        # 0x140050948
   140039117:	call   QWORD PTR [rip+0x1047b]        # 0x140049598
   14003911d:	int3   
   14003911e:	lea    rcx,[rip+0x1780b]        # 0x140050930
   140039125:	call   QWORD PTR [rip+0x10485]        # 0x1400495b0
   14003912b:	nop
   14003912c:	mov    r14,QWORD PTR [rbp-0x71]
   140039130:	mov    r15,QWORD PTR [rbp-0x79]
   140039134:	jmp    0x140039171
   140039136:	cmp    QWORD PTR [rbp-0x21],0x10
   14003913b:	jb     0x140039146
   14003913d:	mov    rcx,QWORD PTR [rbp-0x39]
   140039141:	call   0x14002b150
   140039146:	mov    QWORD PTR [rbp-0x21],0xf
   14003914e:	mov    QWORD PTR [rbp-0x29],0x0
   140039156:	mov    BYTE PTR [rbp-0x39],0x0
   14003915a:	cmp    QWORD PTR [rbp-0x49],0x10
   14003915f:	jb     0x14003916a
   140039161:	mov    rcx,QWORD PTR [rbp-0x61]
   140039165:	call   0x14002b150
   14003916a:	xor    eax,eax
   14003916c:	jmp    0x1400392e8
   140039171:	mov    rbx,QWORD PTR [r14+0x50]
   140039175:	mov    rdi,QWORD PTR [r14+0x58]
   140039179:	cmp    rbx,rdi
   14003917c:	je     0x1400392d5
   140039182:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140039190:	mov    QWORD PTR [rbp-0x49],0xf
   140039198:	mov    QWORD PTR [rbp-0x51],r12
   14003919c:	mov    BYTE PTR [rbp-0x61],0x0
   1400391a0:	lea    r9,[rbx+0x1]
   1400391a4:	movzx  ecx,BYTE PTR [r9]
   1400391a8:	lea    rdx,[rbp-0x11]
   1400391ac:	test   cl,cl
   1400391ae:	je     0x1400391e3
   1400391b0:	movzx  eax,BYTE PTR [rbx]
   1400391b3:	mov    BYTE PTR [rsp+0x24],al
   1400391b7:	mov    BYTE PTR [rsp+0x25],cl
   1400391bb:	mov    BYTE PTR [rsp+0x26],0x0
   1400391c0:	lea    r9,[rsp+0x26]
   1400391c5:	lea    r8,[rsp+0x24]
   1400391ca:	mov    rcx,QWORD PTR [r13+0x8]
   1400391ce:	call   0x140035f90
   1400391d3:	nop
   1400391d4:	mov    rdx,rax
   1400391d7:	lea    rcx,[rbp-0x61]
   1400391db:	call   0x140004730
   1400391e0:	nop
   1400391e1:	jmp    0x1400391fd
   1400391e3:	mov    r8,rbx
   1400391e6:	mov    rcx,QWORD PTR [r13+0x8]
   1400391ea:	call   0x140035f90
   1400391ef:	nop
   1400391f0:	mov    rdx,rax
   1400391f3:	lea    rcx,[rbp-0x61]
   1400391f7:	call   0x140004730
   1400391fc:	nop
   1400391fd:	cmp    QWORD PTR [rbp+0x7],0x10
   140039202:	jb     0x14003920d
   140039204:	mov    rcx,QWORD PTR [rbp-0x11]
   140039208:	call   0x14002b150
   14003920d:	mov    r12,QWORD PTR [rbp-0x51]
   140039211:	test   r12,r12
   140039214:	je     0x1400392d0
   14003921a:	inc    r12
   14003921d:	mov    rsi,QWORD PTR [r13+0x0]
   140039221:	mov    rdx,QWORD PTR [rsi+0x170]
   140039228:	mov    rax,QWORD PTR [rsi+0x160]
   14003922f:	sub    rax,rdx
   140039232:	cmp    rax,r12
   140039235:	jae    0x14003924d
   140039237:	sub    rdx,QWORD PTR [rsi+0x168]
   14003923e:	add    rdx,r12
   140039241:	lea    rcx,[rsi+0x160]
   140039248:	call   0x140041bf0
   14003924d:	mov    r11,QWORD PTR [rsi+0x170]
   140039254:	lea    rax,[r11+r12*1]
   140039258:	mov    QWORD PTR [rsi+0x170],rax
   14003925f:	lea    rdx,[rbp-0x61]
   140039263:	mov    r8,QWORD PTR [rbp-0x61]
   140039267:	mov    rax,QWORD PTR [rbp-0x49]
   14003926b:	cmp    rax,0x10
   14003926f:	cmovae rdx,r8
   140039273:	mov    r10,QWORD PTR [rbp-0x51]
   140039277:	add    rdx,r10
   14003927a:	lea    rcx,[rbp-0x61]
   14003927e:	cmp    rax,0x10
   140039282:	cmovae rcx,r8
   140039286:	mov    r9,r11
   140039289:	cmp    rcx,rdx
   14003928c:	je     0x1400392a6
   14003928e:	xchg   ax,ax
   140039290:	movzx  r8d,BYTE PTR [rcx]
   140039294:	inc    rcx
   140039297:	mov    BYTE PTR [r9],r8b
   14003929a:	inc    r9
   14003929d:	cmp    rcx,rdx
   1400392a0:	jne    0x140039290
   1400392a2:	mov    r10,QWORD PTR [rbp-0x51]
   1400392a6:	mov    BYTE PTR [r11+r10*1],0x0
   1400392ab:	add    rbx,0x2
   1400392af:	cmp    QWORD PTR [rbp-0x49],0x10
   1400392b4:	jb     0x1400392bf
   1400392b6:	mov    rcx,QWORD PTR [rbp-0x61]
   1400392ba:	call   0x14002b150
   1400392bf:	cmp    rbx,rdi
   1400392c2:	mov    r12d,0x0
   1400392c8:	jne    0x140039190
   1400392ce:	jmp    0x1400392d5
   1400392d0:	jmp    0x14003915a
   1400392d5:	mov    rax,QWORD PTR [r13+0x0]
   1400392d9:	mov    rcx,QWORD PTR [rax+0x168]
   1400392e0:	lea    rax,[r15+rcx*1]
   1400392e4:	mov    QWORD PTR [r13+0x10],rax
   1400392e8:	mov    rcx,QWORD PTR [rbp+0x17]
   1400392ec:	xor    rcx,rsp
   1400392ef:	call   0x14002b100
   1400392f4:	mov    rbx,QWORD PTR [rsp+0x120]
   1400392fc:	add    rsp,0xd0
   140039303:	pop    r15
   140039305:	pop    r14
   140039307:	pop    r13
   140039309:	pop    r12
   14003930b:	pop    rdi
   14003930c:	pop    rsi
   14003930d:	pop    rbp
   14003930e:	ret    
   14003930f:	int3   
   140039310:	rex push rbx
   140039312:	sub    rsp,0x40
   140039316:	cmp    QWORD PTR [rcx+0x10],0x0
   14003931b:	mov    r10,r9
   14003931e:	mov    rbx,rdx
   140039321:	mov    r11,rcx
   140039324:	jne    0x140039340
   140039326:	mov    QWORD PTR [rsp+0x20],r9
   14003932b:	mov    r9,QWORD PTR [rcx+0x8]
   14003932f:	mov    r8b,0x1
   140039332:	call   0x140033920
   140039337:	mov    rax,rbx
   14003933a:	add    rsp,0x40
   14003933e:	pop    rbx
   14003933f:	ret    
   140039340:	mov    rcx,QWORD PTR [rcx+0x8]
   140039344:	mov    QWORD PTR [rsp+0x50],rsi
   140039349:	cmp    r8,QWORD PTR [rcx]
   14003934c:	jne    0x14003937d
   14003934e:	mov    eax,DWORD PTR [r8+0x18]
   140039352:	cmp    DWORD PTR [r9+0x18],eax
   140039356:	jge    0x1400394fb
   14003935c:	mov    QWORD PTR [rsp+0x20],r9
   140039361:	mov    r9,r8
   140039364:	mov    rcx,r11
   140039367:	mov    r8b,0x1
   14003936a:	call   0x140033920
   14003936f:	mov    rsi,QWORD PTR [rsp+0x50]
   140039374:	mov    rax,rbx
   140039377:	add    rsp,0x40
   14003937b:	pop    rbx
   14003937c:	ret    
   14003937d:	cmp    r8,rcx
   140039380:	jne    0x1400393b2
   140039382:	mov    r9,QWORD PTR [rcx+0x10]
   140039386:	mov    eax,DWORD PTR [r10+0x18]
   14003938a:	cmp    DWORD PTR [r9+0x18],eax
   14003938e:	jge    0x1400394fb
   140039394:	xor    r8d,r8d
   140039397:	mov    rcx,r11
   14003939a:	mov    QWORD PTR [rsp+0x20],r10
   14003939f:	call   0x140033920
   1400393a4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400393a9:	mov    rax,rbx
   1400393ac:	add    rsp,0x40
   1400393b0:	pop    rbx
   1400393b1:	ret    
   1400393b2:	mov    esi,DWORD PTR [r9+0x18]
   1400393b6:	cmp    DWORD PTR [r8+0x18],esi
   1400393ba:	jle    0x140039469
   1400393c0:	cmp    BYTE PTR [r8+0x49],0x0
   1400393c5:	mov    rax,r8
   1400393c8:	je     0x1400393d0
   1400393ca:	mov    r9,QWORD PTR [r8+0x10]
   1400393ce:	jmp    0x14003942d
   1400393d0:	mov    r9,QWORD PTR [r8]
   1400393d3:	cmp    BYTE PTR [r9+0x49],0x0
   1400393d8:	jne    0x1400393ff
   1400393da:	mov    rax,QWORD PTR [r9+0x10]
   1400393de:	cmp    BYTE PTR [rax+0x49],0x0
   1400393e2:	jne    0x14003942d
   1400393e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400393f0:	mov    r9,rax
   1400393f3:	mov    rax,QWORD PTR [rax+0x10]
   1400393f7:	cmp    BYTE PTR [rax+0x49],0x0
   1400393fb:	je     0x1400393f0
   1400393fd:	jmp    0x14003942d
   1400393ff:	mov    rdx,QWORD PTR [r8+0x8]
   140039403:	cmp    BYTE PTR [rdx+0x49],0x0
   140039407:	jne    0x140039422
   140039409:	nop    DWORD PTR [rax+0x0]
   140039410:	cmp    rax,QWORD PTR [rdx]
   140039413:	jne    0x140039422
   140039415:	mov    rax,rdx
   140039418:	mov    rdx,QWORD PTR [rdx+0x8]
   14003941c:	cmp    BYTE PTR [rdx+0x49],0x0
   140039420:	je     0x140039410
   140039422:	cmp    BYTE PTR [rax+0x49],0x0
   140039426:	mov    r9,rax
   140039429:	cmove  r9,rdx
   14003942d:	cmp    DWORD PTR [r9+0x18],esi
   140039431:	jge    0x140039465
   140039433:	mov    rax,QWORD PTR [r9+0x10]
   140039437:	mov    QWORD PTR [rsp+0x20],r10
   14003943c:	mov    rdx,rbx
   14003943f:	cmp    BYTE PTR [rax+0x49],0x0
   140039443:	mov    rcx,r11
   140039446:	jne    0x1400394e5
   14003944c:	mov    r9,r8
   14003944f:	mov    r8b,0x1
   140039452:	call   0x140033920
   140039457:	mov    rsi,QWORD PTR [rsp+0x50]
   14003945c:	mov    rax,rbx
   14003945f:	add    rsp,0x40
   140039463:	pop    rbx
   140039464:	ret    
   140039465:	cmp    DWORD PTR [r8+0x18],esi
   140039469:	jge    0x1400394fb
   14003946f:	cmp    BYTE PTR [r8+0x49],0x0
   140039474:	mov    r9,r8
   140039477:	jne    0x1400394be
   140039479:	mov    rax,QWORD PTR [r8+0x10]
   14003947d:	cmp    BYTE PTR [rax+0x49],0x0
   140039481:	jne    0x14003949e
   140039483:	mov    r9,rax
   140039486:	mov    rax,QWORD PTR [rax]
   140039489:	cmp    BYTE PTR [rax+0x49],0x0
   14003948d:	jne    0x1400394be
   14003948f:	nop
   140039490:	mov    r9,rax
   140039493:	mov    rax,QWORD PTR [rax]
   140039496:	cmp    BYTE PTR [rax+0x49],0x0
   14003949a:	je     0x140039490
   14003949c:	jmp    0x1400394be
   14003949e:	mov    rax,QWORD PTR [r8+0x8]
   1400394a2:	cmp    BYTE PTR [rax+0x49],0x0
   1400394a6:	jne    0x1400394bb
   1400394a8:	cmp    r9,QWORD PTR [rax+0x10]
   1400394ac:	jne    0x1400394bb
   1400394ae:	mov    r9,rax
   1400394b1:	mov    rax,QWORD PTR [rax+0x8]
   1400394b5:	cmp    BYTE PTR [rax+0x49],0x0
   1400394b9:	je     0x1400394a8
   1400394bb:	mov    r9,rax
   1400394be:	cmp    r9,rcx
   1400394c1:	je     0x1400394c9
   1400394c3:	cmp    esi,DWORD PTR [r9+0x18]
   1400394c7:	jge    0x1400394fb
   1400394c9:	mov    rax,QWORD PTR [r8+0x10]
   1400394cd:	mov    QWORD PTR [rsp+0x20],r10
   1400394d2:	mov    rdx,rbx
   1400394d5:	cmp    BYTE PTR [rax+0x49],0x0
   1400394d9:	mov    rcx,r11
   1400394dc:	je     0x14003944f
   1400394e2:	mov    r9,r8
   1400394e5:	xor    r8d,r8d
   1400394e8:	call   0x140033920
   1400394ed:	mov    rsi,QWORD PTR [rsp+0x50]
   1400394f2:	mov    rax,rbx
   1400394f5:	add    rsp,0x40
   1400394f9:	pop    rbx
   1400394fa:	ret    
   1400394fb:	lea    rdx,[rsp+0x30]
   140039500:	xor    r9d,r9d
   140039503:	mov    r8,r10
   140039506:	mov    rcx,r11
   140039509:	call   0x1400357a0
   14003950e:	mov    rsi,QWORD PTR [rsp+0x50]
   140039513:	mov    rcx,QWORD PTR [rax]
   140039516:	mov    rax,rbx
   140039519:	mov    QWORD PTR [rbx],rcx
   14003951c:	add    rsp,0x40
   140039520:	pop    rbx
   140039521:	ret    
   140039522:	int3   
   140039523:	int3   
   140039524:	int3   
   140039525:	int3   
   140039526:	int3   
   140039527:	int3   
   140039528:	int3   
   140039529:	int3   
   14003952a:	int3   
   14003952b:	int3   
   14003952c:	int3   
   14003952d:	int3   
   14003952e:	int3   
   14003952f:	int3   
   140039530:	mov    QWORD PTR [rsp+0x10],rbp
   140039535:	mov    QWORD PTR [rsp+0x18],r8
   14003953a:	push   rsi
   14003953b:	push   rdi
   14003953c:	push   r12
   14003953e:	sub    rsp,0x40
   140039542:	cmp    QWORD PTR [rcx+0x10],0x0
   140039547:	mov    rbp,r9
   14003954a:	mov    rdi,rdx
   14003954d:	mov    rsi,rcx
   140039550:	jne    0x140039574
   140039552:	mov    QWORD PTR [rsp+0x20],r9
   140039557:	mov    r9,QWORD PTR [rcx+0x8]
   14003955b:	mov    r8b,0x1
   14003955e:	call   0x140025210
   140039563:	mov    rax,rdi
   140039566:	mov    rbp,QWORD PTR [rsp+0x68]
   14003956b:	add    rsp,0x40
   14003956f:	pop    r12
   140039571:	pop    rdi
   140039572:	pop    rsi
   140039573:	ret    
   140039574:	mov    rcx,QWORD PTR [rcx+0x8]
   140039578:	mov    QWORD PTR [rsp+0x60],rbx
   14003957d:	cmp    r8,QWORD PTR [rcx]
   140039580:	jne    0x1400395b4
   140039582:	lea    rdx,[r8+0x18]
   140039586:	lea    rcx,[r9+0x18]
   14003958a:	call   0x140002ec4
   14003958f:	test   eax,eax
   140039591:	jns    0x140039768
   140039597:	mov    r9,QWORD PTR [rsp+0x70]
   14003959c:	mov    r8b,0x1
   14003959f:	mov    rdx,rdi
   1400395a2:	mov    rcx,rsi
   1400395a5:	mov    QWORD PTR [rsp+0x20],rbp
   1400395aa:	call   0x140025210
   1400395af:	jmp    0x140039781
   1400395b4:	cmp    r8,rcx
   1400395b7:	jne    0x1400395f2
   1400395b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400395bd:	lea    rdx,[r9+0x18]
   1400395c1:	add    rcx,0x18
   1400395c5:	call   0x140002ec4
   1400395ca:	test   eax,eax
   1400395cc:	jns    0x140039768
   1400395d2:	mov    r9,QWORD PTR [rsi+0x8]
   1400395d6:	xor    r8d,r8d
   1400395d9:	mov    rdx,rdi
   1400395dc:	mov    r9,QWORD PTR [r9+0x10]
   1400395e0:	mov    rcx,rsi
   1400395e3:	mov    QWORD PTR [rsp+0x20],rbp
   1400395e8:	call   0x140025210
   1400395ed:	jmp    0x140039781
   1400395f2:	lea    rdx,[r8+0x18]
   1400395f6:	lea    rcx,[r9+0x18]
   1400395fa:	call   0x140002ec4
   1400395ff:	test   eax,eax
   140039601:	jns    0x1400396b5
   140039607:	mov    rax,QWORD PTR [rsp+0x70]
   14003960c:	cmp    BYTE PTR [rax+0x49],0x0
   140039610:	je     0x140039618
   140039612:	mov    rbx,QWORD PTR [rax+0x10]
   140039616:	jmp    0x14003966d
   140039618:	mov    rbx,QWORD PTR [rax]
   14003961b:	cmp    BYTE PTR [rbx+0x49],0x0
   14003961f:	jne    0x14003963f
   140039621:	mov    rax,QWORD PTR [rbx+0x10]
   140039625:	cmp    BYTE PTR [rax+0x49],0x0
   140039629:	jne    0x14003966d
   14003962b:	nop    DWORD PTR [rax+rax*1+0x0]
   140039630:	mov    rbx,rax
   140039633:	mov    rax,QWORD PTR [rax+0x10]
   140039637:	cmp    BYTE PTR [rax+0x49],0x0
   14003963b:	je     0x140039630
   14003963d:	jmp    0x14003966d
   14003963f:	mov    rcx,QWORD PTR [rax+0x8]
   140039643:	cmp    BYTE PTR [rcx+0x49],0x0
   140039647:	jne    0x140039662
   140039649:	nop    DWORD PTR [rax+0x0]
   140039650:	cmp    rax,QWORD PTR [rcx]
   140039653:	jne    0x140039662
   140039655:	mov    rax,rcx
   140039658:	mov    rcx,QWORD PTR [rcx+0x8]
   14003965c:	cmp    BYTE PTR [rcx+0x49],0x0
   140039660:	je     0x140039650
   140039662:	cmp    BYTE PTR [rax+0x49],0x0
   140039666:	mov    rbx,rax
   140039669:	cmove  rbx,rcx
   14003966d:	lea    rcx,[rbx+0x18]
   140039671:	lea    rdx,[rbp+0x18]
   140039675:	call   0x140002ec4
   14003967a:	test   eax,eax
   14003967c:	jns    0x1400396b5
   14003967e:	mov    rax,QWORD PTR [rbx+0x10]
   140039682:	mov    QWORD PTR [rsp+0x20],rbp
   140039687:	mov    rdx,rdi
   14003968a:	cmp    BYTE PTR [rax+0x49],0x0
   14003968e:	mov    rcx,rsi
   140039691:	je     0x1400396a3
   140039693:	mov    r9,rbx
   140039696:	xor    r8d,r8d
   140039699:	call   0x140025210
   14003969e:	jmp    0x140039781
   1400396a3:	mov    r9,QWORD PTR [rsp+0x70]
   1400396a8:	mov    r8b,0x1
   1400396ab:	call   0x140025210
   1400396b0:	jmp    0x140039781
   1400396b5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400396ba:	lea    rdx,[rbp+0x18]
   1400396be:	add    rcx,0x18
   1400396c2:	call   0x140002ec4
   1400396c7:	test   eax,eax
   1400396c9:	jns    0x140039768
   1400396cf:	mov    r9,QWORD PTR [rsp+0x70]
   1400396d4:	mov    rbx,r9
   1400396d7:	cmp    BYTE PTR [r9+0x49],0x0
   1400396dc:	jne    0x140039726
   1400396de:	mov    rax,QWORD PTR [r9+0x10]
   1400396e2:	cmp    BYTE PTR [rax+0x49],0x0
   1400396e6:	jne    0x140039702
   1400396e8:	mov    rbx,rax
   1400396eb:	mov    rax,QWORD PTR [rax]
   1400396ee:	cmp    BYTE PTR [rax+0x49],0x0
   1400396f2:	jne    0x140039726
   1400396f4:	mov    rbx,rax
   1400396f7:	mov    rax,QWORD PTR [rax]
   1400396fa:	cmp    BYTE PTR [rax+0x49],0x0
   1400396fe:	je     0x1400396f4
   140039700:	jmp    0x140039726
   140039702:	mov    rax,QWORD PTR [r9+0x8]
   140039706:	cmp    BYTE PTR [rax+0x49],0x0
   14003970a:	jne    0x140039723
   14003970c:	nop    DWORD PTR [rax+0x0]
   140039710:	cmp    rbx,QWORD PTR [rax+0x10]
   140039714:	jne    0x140039723
   140039716:	mov    rbx,rax
   140039719:	mov    rax,QWORD PTR [rax+0x8]
   14003971d:	cmp    BYTE PTR [rax+0x49],0x0
   140039721:	je     0x140039710
   140039723:	mov    rbx,rax
   140039726:	cmp    rbx,QWORD PTR [rsi+0x8]
   14003972a:	je     0x140039742
   14003972c:	lea    rdx,[rbx+0x18]
   140039730:	lea    rcx,[rbp+0x18]
   140039734:	call   0x140002ec4
   140039739:	test   eax,eax
   14003973b:	jns    0x140039768
   14003973d:	mov    r9,QWORD PTR [rsp+0x70]
   140039742:	mov    rax,QWORD PTR [r9+0x10]
   140039746:	mov    QWORD PTR [rsp+0x20],rbp
   14003974b:	mov    rdx,rdi
   14003974e:	cmp    BYTE PTR [rax+0x49],0x0
   140039752:	mov    rcx,rsi
   140039755:	jne    0x140039696
   14003975b:	mov    r9,rbx
   14003975e:	mov    r8b,0x1
   140039761:	call   0x140025210
   140039766:	jmp    0x140039781
   140039768:	lea    rdx,[rsp+0x30]
   14003976d:	xor    r9d,r9d
   140039770:	mov    r8,rbp
   140039773:	mov    rcx,rsi
   140039776:	call   0x140035900
   14003977b:	mov    rcx,QWORD PTR [rax]
   14003977e:	mov    QWORD PTR [rdi],rcx
   140039781:	mov    rbx,QWORD PTR [rsp+0x60]
   140039786:	mov    rbp,QWORD PTR [rsp+0x68]
   14003978b:	mov    rax,rdi
   14003978e:	add    rsp,0x40
   140039792:	pop    r12
   140039794:	pop    rdi
   140039795:	pop    rsi
   140039796:	ret    
   140039797:	int3   
   140039798:	int3   
   140039799:	int3   
   14003979a:	int3   
   14003979b:	int3   
   14003979c:	int3   
   14003979d:	int3   
   14003979e:	int3   
   14003979f:	int3   
   1400397a0:	rex push rdi
   1400397a2:	sub    rsp,0x30
   1400397a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400397af:	mov    QWORD PTR [rsp+0x40],rbx
   1400397b4:	mov    QWORD PTR [rsp+0x48],rsi
   1400397b9:	mov    rsi,rdx
   1400397bc:	call   0x14002df20
   1400397c1:	mov    rdi,rax
   1400397c4:	mov    QWORD PTR [rsp+0x50],rax
   1400397c9:	lea    rbx,[rax+0x18]
   1400397cd:	mov    QWORD PTR [rsp+0x58],rbx
   1400397d2:	mov    QWORD PTR [rsp+0x28],rbx
   1400397d7:	test   rbx,rbx
   1400397da:	je     0x140039807
   1400397dc:	mov    QWORD PTR [rbx+0x18],0xf
   1400397e4:	mov    QWORD PTR [rbx+0x10],0x0
   1400397ec:	mov    BYTE PTR [rbx],0x0
   1400397ef:	or     r9,0xffffffffffffffff
   1400397f3:	xor    r8d,r8d
   1400397f6:	mov    rdx,rsi
   1400397f9:	mov    rcx,rbx
   1400397fc:	call   0x1400048b8
   140039801:	mov    eax,DWORD PTR [rsi+0x28]
   140039804:	mov    DWORD PTR [rbx+0x28],eax
   140039807:	mov    rax,rdi
   14003980a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003980f:	mov    rsi,QWORD PTR [rsp+0x48]
   140039814:	add    rsp,0x30
   140039818:	pop    rdi
   140039819:	ret    
   14003981a:	int3   
   14003981b:	int3   
   14003981c:	int3   
   14003981d:	int3   
   14003981e:	int3   
   14003981f:	int3   
   140039820:	mov    QWORD PTR [rsp+0x8],rbx
   140039825:	mov    QWORD PTR [rsp+0x18],r8
   14003982a:	push   rdi
   14003982b:	sub    rsp,0x40
   14003982f:	mov    r11,QWORD PTR [rcx+0x8]
   140039833:	mov    r10,QWORD PTR [rcx]
   140039836:	mov    rdi,rdx
   140039839:	mov    r8,r11
   14003983c:	movabs rax,0x2aaaaaaaaaaaaaab
   140039846:	mov    rbx,rcx
   140039849:	sub    r8,r10
   14003984c:	mov    QWORD PTR [rsp+0x20],r9
   140039851:	mov    QWORD PTR [rsp+0x28],r9
   140039856:	mov    BYTE PTR [rsp+0x30],0x0
   14003985b:	imul   r8
   14003985e:	sar    rdx,0x2
   140039862:	mov    rax,rdx
   140039865:	shr    rax,0x3f
   140039869:	add    rdx,rax
   14003986c:	lea    rax,[rdi+0x2]
   140039870:	cmp    rdx,rax
   140039873:	jbe    0x1400398e6
   140039875:	lea    rax,[rax+rax*2]
   140039879:	lea    rcx,[r10+rax*8]
   14003987d:	cmp    rcx,r11
   140039880:	je     0x1400398ba
   140039882:	cmp    r11,r11
   140039885:	je     0x1400398b6
   140039887:	mov    rdx,r11
   14003988a:	sub    rdx,rcx
   14003988d:	nop    DWORD PTR [rax]
   140039890:	mov    rax,QWORD PTR [rdx+rcx*1]
   140039894:	add    rcx,0x18
   140039898:	mov    QWORD PTR [rcx-0x18],rax
   14003989c:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   1400398a1:	mov    QWORD PTR [rcx-0x10],rax
   1400398a5:	movzx  eax,BYTE PTR [rdx+rcx*1-0x8]
   1400398aa:	mov    BYTE PTR [rcx-0x8],al
   1400398ad:	lea    rax,[rdx+rcx*1]
   1400398b1:	cmp    rax,r11
   1400398b4:	jne    0x140039890
   1400398b6:	mov    QWORD PTR [rbx+0x8],rcx
   1400398ba:	mov    rcx,QWORD PTR [rbx+0x8]
   1400398be:	mov    rax,QWORD PTR [rbx]
   1400398c1:	cmp    rax,rcx
   1400398c4:	je     0x14003991f
   1400398c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400398d0:	mov    QWORD PTR [rax],r9
   1400398d3:	mov    QWORD PTR [rax+0x8],r9
   1400398d7:	mov    BYTE PTR [rax+0x10],0x0
   1400398db:	add    rax,0x18
   1400398df:	cmp    rax,rcx
   1400398e2:	jne    0x1400398d0
   1400398e4:	jmp    0x14003991f
   1400398e6:	cmp    r10,r11
   1400398e9:	je     0x140039905
   1400398eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400398f0:	mov    QWORD PTR [r10],r9
   1400398f3:	mov    QWORD PTR [r10+0x8],r9
   1400398f7:	mov    BYTE PTR [r10+0x10],0x0
   1400398fc:	add    r10,0x18
   140039900:	cmp    r10,r11
   140039903:	jne    0x1400398f0
   140039905:	cmp    rax,rdx
   140039908:	je     0x14003991f
   14003990a:	sub    rdi,rdx
   14003990d:	mov    rdx,QWORD PTR [rcx+0x8]
   140039911:	lea    r9,[rsp+0x20]
   140039916:	lea    r8,[rdi+0x2]
   14003991a:	call   0x140033d30
   14003991f:	mov    rcx,QWORD PTR [rbx]
   140039922:	mov    rax,QWORD PTR [rsp+0x60]
   140039927:	mov    QWORD PTR [rcx+0x18],rax
   14003992b:	mov    DWORD PTR [rbx+0x50],0x0
   140039932:	mov    rbx,QWORD PTR [rsp+0x50]
   140039937:	add    rsp,0x40
   14003993b:	pop    rdi
   14003993c:	ret    
   14003993d:	int3   
   14003993e:	int3   
   14003993f:	int3   
   140039940:	mov    rax,rsp
   140039943:	push   rdi
   140039944:	sub    rsp,0xd0
   14003994b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140039954:	mov    QWORD PTR [rax+0x8],rbx
   140039958:	mov    QWORD PTR [rax+0x18],rbp
   14003995c:	mov    QWORD PTR [rax+0x20],rsi
   140039960:	mov    esi,r8d
   140039963:	mov    rbx,rcx
   140039966:	mov    rcx,QWORD PTR [rdx]
   140039969:	test   rcx,rcx
   14003996c:	je     0x140039a8d
   140039972:	xor    ebp,ebp
   140039974:	cmp    DWORD PTR [rcx+0x34],ebp
   140039977:	jne    0x140039a8d
   14003997d:	mov    QWORD PTR [rbx+0x58],rbp
   140039981:	mov    DWORD PTR [rbx+0x60],r8d
   140039985:	xor    edx,edx
   140039987:	mov    rcx,rbx
   14003998a:	call   0x14002e130
   14003998f:	mov    rax,QWORD PTR [rbx+0x48]
   140039993:	mov    rcx,QWORD PTR [rax]
   140039996:	test   rcx,rcx
   140039999:	je     0x1400399a0
   14003999b:	mov    ecx,DWORD PTR [rcx+0x30]
   14003999e:	jmp    0x1400399a2
   1400399a0:	mov    ecx,ebp
   1400399a2:	mov    eax,ecx
   1400399a4:	shr    eax,0x14
   1400399a7:	and    al,0x1
   1400399a9:	mov    BYTE PTR [rbx+0x78],al
   1400399ac:	test   DWORD PTR [rbx+0x60],0x30000
   1400399b3:	jne    0x1400399e4
   1400399b5:	test   ecx,0x203
   1400399bb:	jne    0x1400399c6
   1400399bd:	or     DWORD PTR [rbx+0x60],0x10000
   1400399c4:	jmp    0x1400399e4
   1400399c6:	and    ecx,0x1003
   1400399cc:	cmp    ecx,0x1001
   1400399d2:	jne    0x1400399dd
   1400399d4:	or     DWORD PTR [rbx+0x60],0x10000
   1400399db:	jmp    0x1400399e4
   1400399dd:	or     DWORD PTR [rbx+0x60],0x20000
   1400399e4:	test   DWORD PTR [rbx+0x60],0x20000
   1400399eb:	je     0x140039a4e
   1400399ed:	mov    ecx,0x58
   1400399f2:	call   0x14002b1c2
   1400399f7:	test   rax,rax
   1400399fa:	je     0x140039a28
   1400399fc:	mov    QWORD PTR [rax],rbp
   1400399ff:	mov    QWORD PTR [rax+0x8],rbp
   140039a03:	mov    QWORD PTR [rax+0x10],rbp
   140039a07:	mov    QWORD PTR [rax+0x20],rbp
   140039a0b:	mov    QWORD PTR [rax+0x28],rbp
   140039a0f:	mov    QWORD PTR [rax+0x30],rbp
   140039a13:	mov    BYTE PTR [rax+0x38],bpl
   140039a17:	mov    QWORD PTR [rax+0x40],rbp
   140039a1b:	mov    QWORD PTR [rax+0x48],rbp
   140039a1f:	mov    DWORD PTR [rax+0x50],ebp
   140039a22:	mov    BYTE PTR [rax+0x54],0x1
   140039a26:	jmp    0x140039a2b
   140039a28:	mov    rax,rbp
   140039a2b:	mov    rdi,QWORD PTR [rbx+0x8]
   140039a2f:	mov    QWORD PTR [rbx+0x8],rax
   140039a33:	test   rdi,rdi
   140039a36:	je     0x140039a48
   140039a38:	mov    rcx,rdi
   140039a3b:	call   0x140020e68
   140039a40:	mov    rcx,rdi
   140039a43:	call   0x14002b150
   140039a48:	mov    rax,QWORD PTR [rbx+0x8]
   140039a4c:	jmp    0x140039a51
   140039a4e:	mov    rax,QWORD PTR [rbx]
   140039a51:	mov    QWORD PTR [rbx+0x10],rax
   140039a55:	mov    QWORD PTR [rbx+0xd8],rbp
   140039a5c:	mov    QWORD PTR [rbx+0xe0],rbp
   140039a63:	mov    rax,QWORD PTR [rbx+0x48]
   140039a67:	mov    rcx,QWORD PTR [rax]
   140039a6a:	mov    eax,DWORD PTR [rcx+0x178]
   140039a70:	mov    DWORD PTR [rbx+0xb0],eax
   140039a76:	shr    esi,0x6
   140039a79:	not    sil
   140039a7c:	and    sil,0x1
   140039a80:	or     sil,0x2
   140039a84:	mov    BYTE PTR [rbx+0xb4],sil
   140039a8b:	jmp    0x140039aed
   140039a8d:	lea    rax,[rip+0x15474]        # 0x14004ef08
   140039a94:	mov    QWORD PTR [rsp+0xe8],rax
   140039a9c:	lea    rdx,[rsp+0xe8]
   140039aa4:	lea    rcx,[rsp+0x20]
   140039aa9:	call   QWORD PTR [rip+0xfe21]        # 0x1400498d0
   140039aaf:	lea    r11,[rip+0x1437a]        # 0x14004de30
   140039ab6:	mov    QWORD PTR [rsp+0x20],r11
   140039abb:	lea    rdx,[rsp+0x20]
   140039ac0:	lea    rcx,[rsp+0x88]
   140039ac8:	call   0x14002f6f0
   140039acd:	nop
   140039ace:	mov    rdx,rax
   140039ad1:	lea    rcx,[rsp+0x40]
   140039ad6:	call   0x1400306a0
   140039adb:	lea    rdx,[rip+0x299c6]        # 0x1400634a8
   140039ae2:	lea    rcx,[rsp+0x40]
   140039ae7:	call   0x14002b560
   140039aec:	nop
   140039aed:	lea    r11,[rsp+0xd0]
   140039af5:	mov    rbx,QWORD PTR [r11+0x10]
   140039af9:	mov    rbp,QWORD PTR [r11+0x20]
   140039afd:	mov    rsi,QWORD PTR [r11+0x28]
   140039b01:	mov    rsp,r11
   140039b04:	pop    rdi
   140039b05:	ret    
   140039b06:	int3   
   140039b07:	int3   
   140039b08:	int3   
   140039b09:	int3   
   140039b0a:	int3   
   140039b0b:	int3   
   140039b0c:	int3   
   140039b0d:	int3   
   140039b0e:	int3   
   140039b0f:	int3   
   140039b10:	mov    QWORD PTR [rsp+0x8],rbx
   140039b15:	mov    QWORD PTR [rsp+0x10],rbp
   140039b1a:	mov    QWORD PTR [rsp+0x18],rsi
   140039b1f:	mov    QWORD PTR [rsp+0x20],rdi
   140039b24:	push   r12
   140039b26:	sub    rsp,0x20
   140039b2a:	mov    rax,QWORD PTR [rcx+0x58]
   140039b2e:	mov    rsi,rcx
   140039b31:	movsxd rbx,DWORD PTR [rax+0x10]
   140039b35:	movzx  eax,BYTE PTR [rax+0x14]
   140039b39:	mov    BYTE PTR [rcx+0x78],al
   140039b3c:	lea    eax,[rbx+0x5]
   140039b3f:	cmp    eax,0x5
   140039b42:	ja     0x140039c74
   140039b48:	lea    rcx,[rip+0xfffffffffffc64b1]        # 0x140000000
   140039b4f:	cdqe   
   140039b51:	mov    edx,DWORD PTR [rcx+rax*4+0x39ce0]
   140039b58:	add    rdx,rcx
   140039b5b:	jmp    rdx
   140039b5d:	mov    rax,QWORD PTR [rsi+0x58]
   140039b61:	cmp    ebx,0xffffffff
   140039b64:	mov    rcx,QWORD PTR [rax+0x8]
   140039b68:	sete   r8b
   140039b6c:	mov    rax,QWORD PTR [rcx+0x10]
   140039b70:	mov    rdx,QWORD PTR [rax+0x8]
   140039b74:	mov    rax,QWORD PTR [rcx+0x8]
   140039b78:	mov    rcx,rsi
   140039b7b:	mov    QWORD PTR [rsi+0x58],rax
   140039b7f:	call   0x140035cc0
   140039b84:	jmp    0x140039cc3
   140039b89:	mov    rax,QWORD PTR [rsi+0x58]
   140039b8d:	movzx  edi,BYTE PTR [rsi+0x7b]
   140039b91:	mov    BYTE PTR [rsi+0x7b],0x1
   140039b95:	mov    rcx,QWORD PTR [rax+0x8]
   140039b99:	mov    rax,QWORD PTR [rcx+0x10]
   140039b9d:	mov    rbx,QWORD PTR [rax+0x8]
   140039ba1:	mov    rax,QWORD PTR [rcx+0x8]
   140039ba5:	mov    rcx,rsi
   140039ba8:	mov    QWORD PTR [rsi+0x58],rax
   140039bac:	call   0x140040e60
   140039bb1:	mov    QWORD PTR [rsi+0x58],rbx
   140039bb5:	mov    BYTE PTR [rsi+0x7b],dil
   140039bb9:	jmp    0x140039cc5
   140039bbe:	mov    rax,QWORD PTR [rsi+0x58]
   140039bc2:	mov    rbp,QWORD PTR [rax+0x8]
   140039bc6:	mov    rcx,QWORD PTR [rbp+0x8]
   140039bca:	mov    QWORD PTR [rsi+0x58],rcx
   140039bce:	cmp    DWORD PTR [rcx],0x1b
   140039bd1:	jne    0x140039bf0
   140039bd3:	mov    rcx,rsi
   140039bd6:	call   0x140032090
   140039bdb:	test   al,al
   140039bdd:	jne    0x140039cc3
   140039be3:	mov    rax,QWORD PTR [rbp+0x10]
   140039be7:	mov    QWORD PTR [rsi+0x58],rax
   140039beb:	jmp    0x140039cc3
   140039bf0:	cmp    DWORD PTR [rcx+0x10],0xfffffffe
   140039bf4:	mov    rcx,QWORD PTR [rcx+0x8]
   140039bf8:	mov    rbx,QWORD PTR [rsi+0x28]
   140039bfc:	mov    rax,QWORD PTR [rcx+0x10]
   140039c00:	sete   dil
   140039c04:	mov    r12,QWORD PTR [rax+0x8]
   140039c08:	mov    rax,QWORD PTR [rcx+0x8]
   140039c0c:	mov    rcx,rsi
   140039c0f:	mov    QWORD PTR [rsi+0x58],rax
   140039c13:	call   0x140040e60
   140039c18:	mov    QWORD PTR [rsi+0x28],rbx
   140039c1c:	test   dil,dil
   140039c1f:	je     0x140039c26
   140039c21:	test   al,al
   140039c23:	sete   al
   140039c26:	test   al,al
   140039c28:	je     0x140039be3
   140039c2a:	mov    QWORD PTR [rsi+0x58],r12
   140039c2e:	jmp    0x140039cc3
   140039c33:	mov    rcx,QWORD PTR [rsi+0x10]
   140039c37:	xor    edx,edx
   140039c39:	call   0x140031cc0
   140039c3e:	xor    edx,edx
   140039c40:	mov    rcx,rsi
   140039c43:	mov    r8,rax
   140039c46:	call   0x140035c40
   140039c4b:	mov    rcx,QWORD PTR [rsi+0x10]
   140039c4f:	mov    r11,QWORD PTR [rsi+0x28]
   140039c53:	mov    rax,QWORD PTR [rcx]
   140039c56:	mov    QWORD PTR [rax+0x30],r11
   140039c5a:	mov    rax,QWORD PTR [rcx]
   140039c5d:	mov    QWORD PTR [rax+0x20],r11
   140039c61:	mov    rcx,QWORD PTR [rcx]
   140039c64:	mov    rax,QWORD PTR [rcx+0x20]
   140039c68:	cmp    QWORD PTR [rcx+0x18],rax
   140039c6c:	setne  al
   140039c6f:	mov    BYTE PTR [rcx+0x28],al
   140039c72:	jmp    0x140039cb7
   140039c74:	test   DWORD PTR [rsi+0x60],0x40000
   140039c7b:	jne    0x140039cb7
   140039c7d:	mov    rcx,QWORD PTR [rsi+0x10]
   140039c81:	mov    edx,ebx
   140039c83:	call   0x140031cc0
   140039c88:	mov    edx,ebx
   140039c8a:	mov    rcx,rsi
   140039c8d:	mov    r8,rax
   140039c90:	call   0x140035c40
   140039c95:	mov    rax,QWORD PTR [rsi+0x28]
   140039c99:	mov    rcx,QWORD PTR [rsi+0x10]
   140039c9d:	test   ebx,ebx
   140039c9f:	jne    0x140039cab
   140039ca1:	mov    rdx,rax
   140039ca4:	call   0x14002e000
   140039ca9:	jmp    0x140039cb7
   140039cab:	mov    rcx,QWORD PTR [rcx]
   140039cae:	lea    rdx,[rbx+rbx*2+0x6]
   140039cb3:	mov    QWORD PTR [rcx+rdx*8],rax
   140039cb7:	mov    rax,QWORD PTR [rsi+0x58]
   140039cbb:	mov    rcx,QWORD PTR [rax+0x8]
   140039cbf:	mov    QWORD PTR [rsi+0x58],rcx
   140039cc3:	mov    al,0x1
   140039cc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140039cca:	mov    rbp,QWORD PTR [rsp+0x38]
   140039ccf:	mov    rsi,QWORD PTR [rsp+0x40]
   140039cd4:	mov    rdi,QWORD PTR [rsp+0x48]
   140039cd9:	add    rsp,0x20
   140039cdd:	pop    r12
   140039cdf:	ret    
   140039ce0:	xor    ebx,DWORD PTR [rbx+rax*1+0x39bbe00]
   140039ce7:	add    BYTE PTR [rcx+0x5d00039b],cl
   140039ced:	fwait
   140039cee:	add    eax,DWORD PTR [rax]
   140039cf0:	pop    rbp
   140039cf1:	fwait
   140039cf2:	add    eax,DWORD PTR [rax]
   140039cf4:	mov    bh,0x9c
   140039cf6:	add    eax,DWORD PTR [rax]
   140039cf8:	int3   
   140039cf9:	int3   
   140039cfa:	int3   
   140039cfb:	int3   
   140039cfc:	int3   
   140039cfd:	int3   
   140039cfe:	int3   
   140039cff:	int3   
   140039d00:	rex push rbx
   140039d02:	sub    rsp,0x20
   140039d06:	mov    rax,QWORD PTR [rcx+0x28]
   140039d0a:	mov    rdx,QWORD PTR [rcx+0x58]
   140039d0e:	mov    rbx,rcx
   140039d11:	cmp    rax,QWORD PTR [rcx+0x20]
   140039d15:	jne    0x140039d2f
   140039d17:	mov    eax,DWORD PTR [rdx+0x118]
   140039d1d:	movzx  r8d,BYTE PTR [rdx+0x118]
   140039d25:	shr    eax,1
   140039d27:	and    r8b,0x1
   140039d2b:	and    al,0x1
   140039d2d:	jmp    0x140039d47
   140039d2f:	movzx  eax,BYTE PTR [rax]
   140039d32:	movzx  ecx,BYTE PTR [rax+rdx*1+0x18]
   140039d37:	movzx  r8d,cl
   140039d3b:	shr    cl,1
   140039d3d:	and    r8b,0x1
   140039d41:	and    cl,0x1
   140039d44:	movzx  eax,cl
   140039d47:	test   r8b,r8b
   140039d4a:	je     0x140039d70
   140039d4c:	test   al,al
   140039d4e:	je     0x140039d5c
   140039d50:	mov    rdx,QWORD PTR [rdx+0x10]
   140039d54:	mov    rcx,rbx
   140039d57:	call   0x140035d30
   140039d5c:	mov    rax,QWORD PTR [rbx+0x58]
   140039d60:	mov    rcx,QWORD PTR [rax+0x8]
   140039d64:	mov    al,0x1
   140039d66:	mov    QWORD PTR [rbx+0x58],rcx
   140039d6a:	add    rsp,0x20
   140039d6e:	pop    rbx
   140039d6f:	ret    
   140039d70:	test   al,al
   140039d72:	je     0x140039d84
   140039d74:	mov    rax,QWORD PTR [rdx+0x10]
   140039d78:	mov    QWORD PTR [rbx+0x58],rax
   140039d7c:	mov    al,0x1
   140039d7e:	add    rsp,0x20
   140039d82:	pop    rbx
   140039d83:	ret    
   140039d84:	xor    al,al
   140039d86:	add    rsp,0x20
   140039d8a:	pop    rbx
   140039d8b:	ret    
   140039d8c:	int3   
   140039d8d:	int3   
   140039d8e:	int3   
   140039d8f:	int3   
   140039d90:	mov    QWORD PTR [rsp+0x8],rbx
   140039d95:	mov    QWORD PTR [rsp+0x10],rbp
   140039d9a:	mov    QWORD PTR [rsp+0x18],rsi
   140039d9f:	mov    QWORD PTR [rsp+0x20],rdi
   140039da4:	push   r12
   140039da6:	sub    rsp,0x20
   140039daa:	mov    rax,QWORD PTR [rcx+0x28]
   140039dae:	mov    rdi,QWORD PTR [rcx+0x58]
   140039db2:	mov    rbx,rcx
   140039db5:	cmp    rax,QWORD PTR [rcx+0x20]
   140039db9:	jne    0x140039dd4
   140039dbb:	mov    ebp,DWORD PTR [rdi+0x118]
   140039dc1:	movzx  esi,BYTE PTR [rdi+0x118]
   140039dc8:	shr    ebp,1
   140039dca:	and    sil,0x1
   140039dce:	and    bpl,0x1
   140039dd2:	jmp    0x140039deb
   140039dd4:	movzx  eax,BYTE PTR [rax]
   140039dd7:	movzx  ecx,BYTE PTR [rax+rdi*1+0x18]
   140039ddc:	movzx  esi,cl
   140039ddf:	shr    cl,1
   140039de1:	and    sil,0x1
   140039de5:	and    cl,0x1
   140039de8:	movzx  ebp,cl
   140039deb:	mov    rax,QWORD PTR [rbx+0xe0]
   140039df2:	cmp    DWORD PTR [rax],0x5
   140039df5:	jne    0x140039e12
   140039df7:	mov    ecx,DWORD PTR [rdi+0x130]
   140039dfd:	cmp    DWORD PTR [rax+0x18],ecx
   140039e00:	jne    0x140039e12
   140039e02:	lea    r12,[rbx+0x80]
   140039e09:	mov    rax,QWORD PTR [r12]
   140039e0d:	cmp    DWORD PTR [rax+0x10],ecx
   140039e10:	je     0x140039e2a
   140039e12:	mov    edx,DWORD PTR [rdi+0x130]
   140039e18:	lea    r12,[rbx+0x80]
   140039e1f:	mov    rcx,rbx
   140039e22:	mov    r8,r12
   140039e25:	call   0x140035d90
   140039e2a:	mov    rcx,QWORD PTR [r12]
   140039e2e:	mov    rdx,QWORD PTR [rdi+0x128]
   140039e35:	cmp    QWORD PTR [rcx+0x18],0x0
   140039e3a:	je     0x140039e51
   140039e3c:	mov    rax,QWORD PTR [rcx+0x20]
   140039e40:	cmp    QWORD PTR [rbx+0x28],rax
   140039e44:	sete   al
   140039e47:	test   al,al
   140039e49:	je     0x140039e51
   140039e4b:	mov    QWORD PTR [rcx+0x18],rdx
   140039e4f:	jmp    0x140039e59
   140039e51:	mov    rax,QWORD PTR [rbx+0x28]
   140039e55:	mov    QWORD PTR [rcx+0x20],rax
   140039e59:	mov    rax,QWORD PTR [r12]
   140039e5d:	mov    rcx,QWORD PTR [rax+0x18]
   140039e61:	cmp    rcx,QWORD PTR [rdi+0x120]
   140039e68:	jb     0x140039efe
   140039e6e:	cmp    BYTE PTR [rdi+0x135],0x0
   140039e75:	je     0x140039eca
   140039e77:	test   DWORD PTR [rbx+0x60],0x400
   140039e7e:	je     0x140039e86
   140039e80:	cmp    BYTE PTR [rbx+0x7b],0x0
   140039e84:	je     0x140039eca
   140039e86:	cmp    rcx,QWORD PTR [rdi+0x128]
   140039e8d:	jae    0x140039eb9
   140039e8f:	test   sil,sil
   140039e92:	je     0x140039eb9
   140039e94:	test   bpl,bpl
   140039e97:	je     0x140039ea5
   140039e99:	mov    rdx,QWORD PTR [rdi+0x10]
   140039e9d:	mov    rcx,rbx
   140039ea0:	call   0x140035d30
   140039ea5:	mov    rax,QWORD PTR [r12]
   140039ea9:	inc    QWORD PTR [rax+0x18]
   140039ead:	mov    rax,QWORD PTR [rdi+0x8]
   140039eb1:	mov    QWORD PTR [rbx+0x58],rax
   140039eb5:	mov    al,0x1
   140039eb7:	jmp    0x140039f05
   140039eb9:	test   bpl,bpl
   140039ebc:	je     0x140039f03
   140039ebe:	mov    rax,QWORD PTR [rdi+0x10]
   140039ec2:	mov    QWORD PTR [rbx+0x58],rax
   140039ec6:	mov    al,0x1
   140039ec8:	jmp    0x140039f05
   140039eca:	test   bpl,bpl
   140039ecd:	je     0x140039ef5
   140039ecf:	cmp    rcx,QWORD PTR [rdi+0x128]
   140039ed6:	jae    0x140039ee9
   140039ed8:	test   sil,sil
   140039edb:	je     0x140039ee9
   140039edd:	mov    rdx,QWORD PTR [rdi+0x8]
   140039ee1:	mov    rcx,rbx
   140039ee4:	call   0x140035ed0
   140039ee9:	mov    rax,QWORD PTR [rdi+0x10]
   140039eed:	mov    QWORD PTR [rbx+0x58],rax
   140039ef1:	mov    al,0x1
   140039ef3:	jmp    0x140039f05
   140039ef5:	cmp    rcx,QWORD PTR [rdi+0x128]
   140039efc:	jae    0x140039f03
   140039efe:	test   sil,sil
   140039f01:	jne    0x140039ea9
   140039f03:	xor    al,al
   140039f05:	mov    rbx,QWORD PTR [rsp+0x30]
   140039f0a:	mov    rbp,QWORD PTR [rsp+0x38]
   140039f0f:	mov    rsi,QWORD PTR [rsp+0x40]
   140039f14:	mov    rdi,QWORD PTR [rsp+0x48]
   140039f19:	add    rsp,0x20
   140039f1d:	pop    r12
   140039f1f:	ret    
   140039f20:	mov    QWORD PTR [rsp+0x18],rbx
   140039f25:	push   rdi
   140039f26:	sub    rsp,0x30
   140039f2a:	mov    rdi,QWORD PTR [rcx+0x58]
   140039f2e:	mov    rbx,rcx
   140039f31:	cmp    BYTE PTR [rdi+0x135],0x0
   140039f38:	mov    r9,QWORD PTR [rdi+0x8]
   140039f3c:	je     0x140039f59
   140039f3e:	test   DWORD PTR [rcx+0x60],0x400
   140039f45:	je     0x140039f4d
   140039f47:	cmp    BYTE PTR [rcx+0x7b],0x0
   140039f4b:	je     0x140039f59
   140039f4d:	mov    r8,QWORD PTR [rdi+0x128]
   140039f54:	mov    r10b,0x1
   140039f57:	jmp    0x140039f63
   140039f59:	mov    r8,QWORD PTR [rdi+0x120]
   140039f60:	xor    r10b,r10b
   140039f63:	mov    rdx,QWORD PTR [rcx+0x20]
   140039f67:	mov    rcx,QWORD PTR [rcx+0x28]
   140039f6b:	lea    rax,[rsp+0x40]
   140039f70:	sub    rdx,rcx
   140039f73:	lea    r11,[rsp+0x48]
   140039f78:	mov    QWORD PTR [rsp+0x40],r8
   140039f7d:	cmp    r8,rdx
   140039f80:	mov    QWORD PTR [rsp+0x48],rdx
   140039f85:	cmovae rax,r11
   140039f89:	mov    rax,QWORD PTR [rax]
   140039f8c:	add    rax,rcx
   140039f8f:	cmp    rcx,rax
   140039f92:	je     0x140039fd8
   140039f94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140039fa0:	cmp    BYTE PTR [rbx+0x78],0x0
   140039fa4:	mov    rdx,QWORD PTR [rbx+0x28]
   140039fa8:	movzx  r8d,BYTE PTR [rdx]
   140039fac:	je     0x140039fc2
   140039fae:	mov    rdx,QWORD PTR [rbx+0x50]
   140039fb2:	movzx  r8d,r8b
   140039fb6:	mov    rdx,QWORD PTR [rdx]
   140039fb9:	movzx  r8d,BYTE PTR [rdx+r8*1+0x104]
   140039fc2:	movzx  edx,r8b
   140039fc6:	cmp    BYTE PTR [rdx+r9*1+0x10],0x0
   140039fcc:	je     0x140039fd8
   140039fce:	inc    QWORD PTR [rbx+0x28]
   140039fd2:	cmp    QWORD PTR [rbx+0x28],rax
   140039fd6:	jne    0x140039fa0
   140039fd8:	mov    rax,QWORD PTR [rbx+0x28]
   140039fdc:	mov    edx,eax
   140039fde:	sub    edx,ecx
   140039fe0:	cmp    rdx,QWORD PTR [rdi+0x120]
   140039fe7:	jae    0x140039ff6
   140039fe9:	xor    al,al
   140039feb:	mov    rbx,QWORD PTR [rsp+0x50]
   140039ff0:	add    rsp,0x30
   140039ff4:	pop    rdi
   140039ff5:	ret    
   140039ff6:	test   r10b,r10b
   140039ff9:	je     0x14003a045
   140039ffb:	cmp    BYTE PTR [rdi+0x134],0x0
   14003a002:	je     0x14003a011
   14003a004:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003a00b:	jae    0x14003a011
   14003a00d:	mov    QWORD PTR [rbx+0x30],rax
   14003a011:	cmp    rdx,QWORD PTR [rdi+0x120]
   14003a018:	je     0x14003a030
   14003a01a:	mov    r9,rax
   14003a01d:	mov    r8,rdi
   14003a020:	mov    rcx,rbx
   14003a023:	mov    DWORD PTR [rsp+0x20],0x7
   14003a02b:	call   0x140035e50
   14003a030:	mov    rax,QWORD PTR [rdi+0x10]
   14003a034:	mov    QWORD PTR [rbx+0x58],rax
   14003a038:	mov    al,0x1
   14003a03a:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a03f:	add    rsp,0x30
   14003a043:	pop    rdi
   14003a044:	ret    
   14003a045:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003a04c:	jae    0x14003a064
   14003a04e:	mov    r9,rax
   14003a051:	mov    r8,rdi
   14003a054:	mov    rcx,rbx
   14003a057:	mov    DWORD PTR [rsp+0x20],0xb
   14003a05f:	call   0x140035e50
   14003a064:	mov    rax,QWORD PTR [rdi+0x10]
   14003a068:	mov    QWORD PTR [rbx+0x58],rax
   14003a06c:	mov    rax,QWORD PTR [rbx+0x28]
   14003a070:	cmp    rax,QWORD PTR [rbx+0x20]
   14003a074:	jne    0x14003a08f
   14003a076:	mov    eax,DWORD PTR [rdi+0x118]
   14003a07c:	and    eax,0x2
   14003a07f:	test   eax,eax
   14003a081:	setne  al
   14003a084:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a089:	add    rsp,0x30
   14003a08d:	pop    rdi
   14003a08e:	ret    
   14003a08f:	movzx  eax,BYTE PTR [rax]
   14003a092:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a097:	movzx  eax,BYTE PTR [rax+rdi*1+0x18]
   14003a09c:	shr    eax,1
   14003a09e:	and    eax,0x1
   14003a0a1:	test   eax,eax
   14003a0a3:	setne  al
   14003a0a6:	add    rsp,0x30
   14003a0aa:	pop    rdi
   14003a0ab:	ret    
   14003a0ac:	int3   
   14003a0ad:	int3   
   14003a0ae:	int3   
   14003a0af:	int3   
   14003a0b0:	mov    QWORD PTR [rsp+0x18],rbx
   14003a0b5:	push   rdi
   14003a0b6:	sub    rsp,0x30
   14003a0ba:	mov    rdi,QWORD PTR [rcx+0x58]
   14003a0be:	mov    rbx,rcx
   14003a0c1:	cmp    BYTE PTR [rdi+0x135],0x0
   14003a0c8:	mov    rax,QWORD PTR [rdi+0x8]
   14003a0cc:	movzx  r9d,BYTE PTR [rax+0x18]
   14003a0d1:	je     0x14003a0ee
   14003a0d3:	test   DWORD PTR [rcx+0x60],0x400
   14003a0da:	je     0x14003a0e2
   14003a0dc:	cmp    BYTE PTR [rcx+0x7b],0x0
   14003a0e0:	je     0x14003a0ee
   14003a0e2:	mov    r8,QWORD PTR [rdi+0x128]
   14003a0e9:	mov    r10b,0x1
   14003a0ec:	jmp    0x14003a0f8
   14003a0ee:	mov    r8,QWORD PTR [rdi+0x120]
   14003a0f5:	xor    r10b,r10b
   14003a0f8:	mov    rdx,QWORD PTR [rcx+0x20]
   14003a0fc:	mov    rcx,QWORD PTR [rcx+0x28]
   14003a100:	lea    rax,[rsp+0x40]
   14003a105:	sub    rdx,rcx
   14003a108:	lea    r11,[rsp+0x48]
   14003a10d:	mov    QWORD PTR [rsp+0x40],r8
   14003a112:	cmp    r8,rdx
   14003a115:	mov    QWORD PTR [rsp+0x48],rdx
   14003a11a:	cmovae rax,r11
   14003a11e:	mov    rax,QWORD PTR [rax]
   14003a121:	add    rax,rcx
   14003a124:	cmp    rcx,rax
   14003a127:	je     0x14003a161
   14003a129:	nop    DWORD PTR [rax+0x0]
   14003a130:	cmp    BYTE PTR [rbx+0x78],0x0
   14003a134:	mov    rdx,QWORD PTR [rbx+0x28]
   14003a138:	movzx  r8d,BYTE PTR [rdx]
   14003a13c:	je     0x14003a152
   14003a13e:	mov    rdx,QWORD PTR [rbx+0x50]
   14003a142:	movzx  r8d,r8b
   14003a146:	mov    rdx,QWORD PTR [rdx]
   14003a149:	movzx  r8d,BYTE PTR [rdx+r8*1+0x104]
   14003a152:	cmp    r8b,r9b
   14003a155:	jne    0x14003a161
   14003a157:	inc    QWORD PTR [rbx+0x28]
   14003a15b:	cmp    QWORD PTR [rbx+0x28],rax
   14003a15f:	jne    0x14003a130
   14003a161:	mov    rax,QWORD PTR [rbx+0x28]
   14003a165:	mov    edx,eax
   14003a167:	sub    edx,ecx
   14003a169:	cmp    rdx,QWORD PTR [rdi+0x120]
   14003a170:	jae    0x14003a17f
   14003a172:	xor    al,al
   14003a174:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a179:	add    rsp,0x30
   14003a17d:	pop    rdi
   14003a17e:	ret    
   14003a17f:	test   r10b,r10b
   14003a182:	je     0x14003a1ce
   14003a184:	cmp    BYTE PTR [rdi+0x134],0x0
   14003a18b:	je     0x14003a19a
   14003a18d:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003a194:	jae    0x14003a19a
   14003a196:	mov    QWORD PTR [rbx+0x30],rax
   14003a19a:	cmp    rdx,QWORD PTR [rdi+0x120]
   14003a1a1:	je     0x14003a1b9
   14003a1a3:	mov    r9,rax
   14003a1a6:	mov    r8,rdi
   14003a1a9:	mov    rcx,rbx
   14003a1ac:	mov    DWORD PTR [rsp+0x20],0x7
   14003a1b4:	call   0x140035e50
   14003a1b9:	mov    rax,QWORD PTR [rdi+0x10]
   14003a1bd:	mov    QWORD PTR [rbx+0x58],rax
   14003a1c1:	mov    al,0x1
   14003a1c3:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a1c8:	add    rsp,0x30
   14003a1cc:	pop    rdi
   14003a1cd:	ret    
   14003a1ce:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003a1d5:	jae    0x14003a1ed
   14003a1d7:	mov    r9,rax
   14003a1da:	mov    r8,rdi
   14003a1dd:	mov    rcx,rbx
   14003a1e0:	mov    DWORD PTR [rsp+0x20],0xa
   14003a1e8:	call   0x140035e50
   14003a1ed:	mov    rax,QWORD PTR [rdi+0x10]
   14003a1f1:	mov    QWORD PTR [rbx+0x58],rax
   14003a1f5:	mov    rax,QWORD PTR [rbx+0x28]
   14003a1f9:	cmp    rax,QWORD PTR [rbx+0x20]
   14003a1fd:	jne    0x14003a218
   14003a1ff:	mov    eax,DWORD PTR [rdi+0x118]
   14003a205:	and    eax,0x2
   14003a208:	test   eax,eax
   14003a20a:	setne  al
   14003a20d:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a212:	add    rsp,0x30
   14003a216:	pop    rdi
   14003a217:	ret    
   14003a218:	movzx  eax,BYTE PTR [rax]
   14003a21b:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a220:	movzx  eax,BYTE PTR [rax+rdi*1+0x18]
   14003a225:	shr    eax,1
   14003a227:	and    eax,0x1
   14003a22a:	test   eax,eax
   14003a22c:	setne  al
   14003a22f:	add    rsp,0x30
   14003a233:	pop    rdi
   14003a234:	ret    
   14003a235:	int3   
   14003a236:	int3   
   14003a237:	int3   
   14003a238:	int3   
   14003a239:	int3   
   14003a23a:	int3   
   14003a23b:	int3   
   14003a23c:	int3   
   14003a23d:	int3   
   14003a23e:	int3   
   14003a23f:	int3   
   14003a240:	mov    QWORD PTR [rsp+0x8],rbx
   14003a245:	push   rdi
   14003a246:	sub    rsp,0x30
   14003a24a:	mov    rdi,QWORD PTR [rcx+0x58]
   14003a24e:	xor    r8d,r8d
   14003a251:	mov    rbx,rcx
   14003a254:	mov    rdx,QWORD PTR [rdi+0x8]
   14003a258:	cmp    QWORD PTR [rdi+0x120],r8
   14003a25f:	jbe    0x14003a2be
   14003a261:	mov    rax,QWORD PTR [rbx+0x28]
   14003a265:	mov    QWORD PTR [rbx+0x58],rdx
   14003a269:	cmp    rax,QWORD PTR [rbx+0x20]
   14003a26d:	je     0x14003a396
   14003a273:	movzx  ecx,BYTE PTR [rax]
   14003a276:	cmp    cl,0xa
   14003a279:	je     0x14003a285
   14003a27b:	cmp    cl,0xd
   14003a27e:	je     0x14003a285
   14003a280:	cmp    cl,0xc
   14003a283:	jne    0x14003a295
   14003a285:	movzx  eax,BYTE PTR [rbx+0xb4]
   14003a28c:	test   BYTE PTR [rdx+0x10],al
   14003a28f:	je     0x14003a396
   14003a295:	test   cl,cl
   14003a297:	jne    0x14003a2a3
   14003a299:	test   BYTE PTR [rbx+0x60],0x80
   14003a29d:	jne    0x14003a396
   14003a2a3:	mov    rax,QWORD PTR [rdx+0x8]
   14003a2a7:	inc    r8d
   14003a2aa:	mov    QWORD PTR [rbx+0x58],rax
   14003a2ae:	inc    QWORD PTR [rbx+0x28]
   14003a2b2:	mov    eax,r8d
   14003a2b5:	cmp    rax,QWORD PTR [rdi+0x120]
   14003a2bc:	jb     0x14003a261
   14003a2be:	cmp    BYTE PTR [rdi+0x135],0x0
   14003a2c5:	je     0x14003a3a3
   14003a2cb:	test   DWORD PTR [rbx+0x60],0x400
   14003a2d2:	je     0x14003a2de
   14003a2d4:	cmp    BYTE PTR [rbx+0x7b],0x0
   14003a2d8:	je     0x14003a3a3
   14003a2de:	mov    eax,r8d
   14003a2e1:	cmp    rax,QWORD PTR [rdi+0x128]
   14003a2e8:	jae    0x14003a341
   14003a2ea:	nop    WORD PTR [rax+rax*1+0x0]
   14003a2f0:	mov    rax,QWORD PTR [rbx+0x28]
   14003a2f4:	mov    QWORD PTR [rbx+0x58],rdx
   14003a2f8:	cmp    rax,QWORD PTR [rbx+0x20]
   14003a2fc:	je     0x14003a341
   14003a2fe:	movzx  ecx,BYTE PTR [rax]
   14003a301:	cmp    cl,0xa
   14003a304:	je     0x14003a310
   14003a306:	cmp    cl,0xd
   14003a309:	je     0x14003a310
   14003a30b:	cmp    cl,0xc
   14003a30e:	jne    0x14003a31c
   14003a310:	movzx  eax,BYTE PTR [rbx+0xb4]
   14003a317:	test   BYTE PTR [rdx+0x10],al
   14003a31a:	je     0x14003a341
   14003a31c:	test   cl,cl
   14003a31e:	jne    0x14003a326
   14003a320:	test   BYTE PTR [rbx+0x60],0x80
   14003a324:	jne    0x14003a341
   14003a326:	mov    rax,QWORD PTR [rdx+0x8]
   14003a32a:	inc    r8d
   14003a32d:	mov    QWORD PTR [rbx+0x58],rax
   14003a331:	inc    QWORD PTR [rbx+0x28]
   14003a335:	mov    eax,r8d
   14003a338:	cmp    rax,QWORD PTR [rdi+0x128]
   14003a33f:	jb     0x14003a2f0
   14003a341:	cmp    BYTE PTR [rdi+0x134],0x0
   14003a348:	je     0x14003a35e
   14003a34a:	mov    eax,r8d
   14003a34d:	cmp    rax,QWORD PTR [rdi+0x128]
   14003a354:	jae    0x14003a35e
   14003a356:	mov    rax,QWORD PTR [rbx+0x28]
   14003a35a:	mov    QWORD PTR [rbx+0x30],rax
   14003a35e:	mov    edx,r8d
   14003a361:	cmp    rdx,QWORD PTR [rdi+0x120]
   14003a368:	je     0x14003a381
   14003a36a:	mov    r9,QWORD PTR [rbx+0x28]
   14003a36e:	mov    r8,rdi
   14003a371:	mov    rcx,rbx
   14003a374:	mov    DWORD PTR [rsp+0x20],0x7
   14003a37c:	call   0x140035e50
   14003a381:	mov    rax,QWORD PTR [rdi+0x10]
   14003a385:	mov    QWORD PTR [rbx+0x58],rax
   14003a389:	mov    al,0x1
   14003a38b:	mov    rbx,QWORD PTR [rsp+0x40]
   14003a390:	add    rsp,0x30
   14003a394:	pop    rdi
   14003a395:	ret    
   14003a396:	xor    al,al
   14003a398:	mov    rbx,QWORD PTR [rsp+0x40]
   14003a39d:	add    rsp,0x30
   14003a3a1:	pop    rdi
   14003a3a2:	ret    
   14003a3a3:	mov    edx,r8d
   14003a3a6:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003a3ad:	jae    0x14003a3c6
   14003a3af:	mov    r9,QWORD PTR [rbx+0x28]
   14003a3b3:	mov    r8,rdi
   14003a3b6:	mov    rcx,rbx
   14003a3b9:	mov    DWORD PTR [rsp+0x20],0x8
   14003a3c1:	call   0x140035e50
   14003a3c6:	mov    rax,QWORD PTR [rdi+0x10]
   14003a3ca:	mov    QWORD PTR [rbx+0x58],rax
   14003a3ce:	mov    rax,QWORD PTR [rbx+0x28]
   14003a3d2:	cmp    rax,QWORD PTR [rbx+0x20]
   14003a3d6:	jne    0x14003a3f1
   14003a3d8:	mov    eax,DWORD PTR [rdi+0x118]
   14003a3de:	and    eax,0x2
   14003a3e1:	test   eax,eax
   14003a3e3:	setne  al
   14003a3e6:	mov    rbx,QWORD PTR [rsp+0x40]
   14003a3eb:	add    rsp,0x30
   14003a3ef:	pop    rdi
   14003a3f0:	ret    
   14003a3f1:	movzx  eax,BYTE PTR [rax]
   14003a3f4:	mov    rbx,QWORD PTR [rsp+0x40]
   14003a3f9:	movzx  eax,BYTE PTR [rax+rdi*1+0x18]
   14003a3fe:	shr    eax,1
   14003a400:	and    eax,0x1
   14003a403:	test   eax,eax
   14003a405:	setne  al
   14003a408:	add    rsp,0x30
   14003a40c:	pop    rdi
   14003a40d:	ret    
   14003a40e:	int3   
   14003a40f:	int3   
   14003a410:	rex push rsi
   14003a412:	push   rdi
   14003a413:	push   r12
   14003a415:	sub    rsp,0x30
   14003a419:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003a422:	mov    QWORD PTR [rsp+0x58],rbx
   14003a427:	mov    QWORD PTR [rsp+0x60],rbp
   14003a42c:	mov    rsi,r9
   14003a42f:	mov    rbp,r8
   14003a432:	mov    r12d,edx
   14003a435:	mov    rdi,rcx
   14003a438:	mov    rbx,QWORD PTR [rcx+0xe0]
   14003a43f:	sub    rbx,0x70
   14003a443:	mov    QWORD PTR [rsp+0x50],rbx
   14003a448:	cmp    rbx,QWORD PTR [rcx+0xd8]
   14003a44f:	jae    0x14003a466
   14003a451:	call   0x140035bd0
   14003a456:	mov    rbx,QWORD PTR [rdi+0xe0]
   14003a45d:	sub    rbx,0x70
   14003a461:	mov    QWORD PTR [rsp+0x50],rbx
   14003a466:	mov    QWORD PTR [rsp+0x28],rbx
   14003a46b:	test   rbx,rbx
   14003a46e:	je     0x14003a48d
   14003a470:	mov    DWORD PTR [rbx],0xe
   14003a476:	mov    DWORD PTR [rbx+0x8],r12d
   14003a47a:	mov    QWORD PTR [rbx+0x10],rbp
   14003a47e:	lea    rcx,[rbx+0x18]
   14003a482:	mov    rdx,rsi
   14003a485:	call   0x140035b50
   14003a48a:	nop
   14003a48b:	jmp    0x14003a48d
   14003a48d:	mov    QWORD PTR [rdi+0xe0],rbx
   14003a494:	mov    rbx,QWORD PTR [rsp+0x58]
   14003a499:	mov    rbp,QWORD PTR [rsp+0x60]
   14003a49e:	add    rsp,0x30
   14003a4a2:	pop    r12
   14003a4a4:	pop    rdi
   14003a4a5:	pop    rsi
   14003a4a6:	ret    
   14003a4a7:	int3   
   14003a4a8:	int3   
   14003a4a9:	int3   
   14003a4aa:	int3   
   14003a4ab:	int3   
   14003a4ac:	int3   
   14003a4ad:	int3   
   14003a4ae:	int3   
   14003a4af:	int3   
   14003a4b0:	mov    QWORD PTR [rsp+0x10],rdx
   14003a4b5:	push   rbp
   14003a4b6:	push   rsi
   14003a4b7:	push   rdi
   14003a4b8:	push   r12
   14003a4ba:	push   r13
   14003a4bc:	push   r14
   14003a4be:	push   r15
   14003a4c0:	lea    rbp,[rsp-0x17]
   14003a4c5:	sub    rsp,0xb0
   14003a4cc:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14003a4d4:	mov    QWORD PTR [rsp+0x100],rbx
   14003a4dc:	mov    rax,QWORD PTR [rip+0x2dd0d]        # 0x1400681f0
   14003a4e3:	xor    rax,rsp
   14003a4e6:	mov    QWORD PTR [rbp+0x7],rax
   14003a4ea:	mov    r14,r9
   14003a4ed:	mov    QWORD PTR [rbp-0x71],r9
   14003a4f1:	mov    rbx,rdx
   14003a4f4:	mov    r13,rcx
   14003a4f7:	mov    QWORD PTR [rbp-0x69],rcx
   14003a4fb:	mov    r12,QWORD PTR [rbp+0x77]
   14003a4ff:	lea    rsi,[r9+0x28]
   14003a503:	cmp    rdx,r8
   14003a506:	jne    0x14003a513
   14003a508:	mov    QWORD PTR [rcx],rdx
   14003a50b:	mov    rax,rcx
   14003a50e:	jmp    0x14003aa65
   14003a513:	mov    r15,QWORD PTR [r12+0x20]
   14003a518:	mov    QWORD PTR [rbp-0x61],r15
   14003a51c:	xor    r10d,r10d
   14003a51f:	mov    r11d,DWORD PTR [r9+0x10]
   14003a523:	movzx  r9d,BYTE PTR [rbp+0x7f]
   14003a528:	test   r11d,r11d
   14003a52b:	je     0x14003a601
   14003a531:	mov    rax,rbx
   14003a534:	mov    QWORD PTR [rbp-0x59],rbx
   14003a538:	movzx  edi,BYTE PTR [rsi]
   14003a53b:	test   dil,dil
   14003a53e:	jne    0x14003a570
   14003a540:	movzx  eax,BYTE PTR [rbx]
   14003a543:	test   r9b,r9b
   14003a546:	je     0x14003a556
   14003a548:	mov    rcx,QWORD PTR [r15]
   14003a54b:	movzx  eax,al
   14003a54e:	movzx  eax,BYTE PTR [rax+rcx*1+0x104]
   14003a556:	test   al,al
   14003a558:	je     0x14003a5c8
   14003a55a:	nop    WORD PTR [rax+rax*1+0x0]
   14003a560:	inc    rsi
   14003a563:	cmp    BYTE PTR [rsi],0x0
   14003a566:	je     0x14003a560
   14003a568:	jmp    0x14003a5bb
   14003a56a:	nop    WORD PTR [rax+rax*1+0x0]
   14003a570:	cmp    rax,r8
   14003a573:	je     0x14003a5a4
   14003a575:	movzx  ecx,BYTE PTR [rax]
   14003a578:	test   r9b,r9b
   14003a57b:	je     0x14003a58b
   14003a57d:	mov    rdx,QWORD PTR [r15]
   14003a580:	movzx  ecx,cl
   14003a583:	movzx  ecx,BYTE PTR [rcx+rdx*1+0x104]
   14003a58b:	cmp    cl,dil
   14003a58e:	jne    0x14003a5a4
   14003a590:	inc    rsi
   14003a593:	inc    rax
   14003a596:	mov    QWORD PTR [rbp-0x59],rax
   14003a59a:	movzx  edi,BYTE PTR [rsi]
   14003a59d:	test   dil,dil
   14003a5a0:	je     0x14003a5d8
   14003a5a2:	jmp    0x14003a570
   14003a5a4:	cmp    BYTE PTR [rsi],0x0
   14003a5a7:	je     0x14003a5d8
   14003a5a9:	nop    DWORD PTR [rax+0x0]
   14003a5b0:	inc    rsi
   14003a5b3:	cmp    BYTE PTR [rsi],0x0
   14003a5b6:	jne    0x14003a5b0
   14003a5b8:	inc    rsi
   14003a5bb:	inc    r10d
   14003a5be:	cmp    r10d,r11d
   14003a5c1:	jae    0x14003a601
   14003a5c3:	jmp    0x14003a531
   14003a5c8:	cmp    BYTE PTR [r14+0x24],0x0
   14003a5cd:	jne    0x14003aa5e
   14003a5d3:	jmp    0x14003aa5b
   14003a5d8:	cmp    BYTE PTR [r14+0x24],0x0
   14003a5dd:	jne    0x14003a5eb
   14003a5df:	cmp    rax,rbx
   14003a5e2:	jne    0x14003a5f1
   14003a5e4:	inc    rbx
   14003a5e7:	mov    QWORD PTR [rbp+0x5f],rbx
   14003a5eb:	lea    rax,[rbp+0x5f]
   14003a5ef:	jmp    0x14003a5f5
   14003a5f1:	lea    rax,[rbp-0x59]
   14003a5f5:	mov    rax,QWORD PTR [rax]
   14003a5f8:	mov    QWORD PTR [r13+0x0],rax
   14003a5fc:	jmp    0x14003aa62
   14003a601:	movzx  edx,BYTE PTR [rbx]
   14003a604:	mov    BYTE PTR [rbp-0x75],dl
   14003a607:	test   r9b,r9b
   14003a60a:	je     0x14003a61d
   14003a60c:	mov    rcx,QWORD PTR [r15]
   14003a60f:	movzx  eax,dl
   14003a612:	movzx  edx,BYTE PTR [rax+rcx*1+0x104]
   14003a61a:	mov    BYTE PTR [rbp-0x75],dl
   14003a61d:	mov    eax,DWORD PTR [r14+0x14]
   14003a621:	test   eax,eax
   14003a623:	jne    0x14003a62f
   14003a625:	cmp    DWORD PTR [r14+0x18],eax
   14003a629:	je     0x14003aa1b
   14003a62f:	mov    r14d,0xf
   14003a635:	mov    QWORD PTR [rbp-0x31],r14
   14003a639:	xor    r13d,r13d
   14003a63c:	mov    QWORD PTR [rbp-0x39],r13
   14003a640:	mov    BYTE PTR [rbp-0x49],r13b
   14003a644:	test   eax,eax
   14003a646:	je     0x14003a87b
   14003a64c:	test   DWORD PTR [r12+0x30],0x200000
   14003a655:	jne    0x14003a66d
   14003a657:	mov    BYTE PTR [rbp-0x49],dl
   14003a65a:	mov    r12d,0x1
   14003a660:	mov    QWORD PTR [rbp-0x39],r12
   14003a664:	mov    BYTE PTR [rbp-0x48],r13b
   14003a668:	jmp    0x14003a716
   14003a66d:	mov    BYTE PTR [rbp-0x79],dl
   14003a670:	mov    BYTE PTR [rbp-0x78],0x0
   14003a674:	lea    r9,[rbp-0x78]
   14003a678:	lea    r8,[rbp-0x79]
   14003a67c:	lea    rdx,[rbp-0x21]
   14003a680:	mov    rcx,r15
   14003a683:	call   0x14002f4c0
   14003a688:	mov    rdi,rax
   14003a68b:	lea    rax,[rbp-0x49]
   14003a68f:	cmp    rax,rdi
   14003a692:	je     0x14003a6fa
   14003a694:	cmp    QWORD PTR [rbp-0x31],0x10
   14003a699:	jb     0x14003a6a4
   14003a69b:	mov    rcx,QWORD PTR [rbp-0x49]
   14003a69f:	call   0x14002b150
   14003a6a4:	mov    QWORD PTR [rbp-0x31],0xf
   14003a6ac:	mov    QWORD PTR [rbp-0x39],r13
   14003a6b0:	mov    BYTE PTR [rbp-0x49],0x0
   14003a6b4:	cmp    QWORD PTR [rdi+0x18],0x10
   14003a6b9:	jae    0x14003a6d1
   14003a6bb:	mov    r8,QWORD PTR [rdi+0x10]
   14003a6bf:	inc    r8
   14003a6c2:	mov    rdx,rdi
   14003a6c5:	lea    rcx,[rbp-0x49]
   14003a6c9:	call   QWORD PTR [rip+0xef21]        # 0x1400495f0
   14003a6cf:	jmp    0x14003a6db
   14003a6d1:	mov    rax,QWORD PTR [rdi]
   14003a6d4:	mov    QWORD PTR [rbp-0x49],rax
   14003a6d8:	mov    QWORD PTR [rdi],r13
   14003a6db:	mov    rax,QWORD PTR [rdi+0x10]
   14003a6df:	mov    QWORD PTR [rbp-0x39],rax
   14003a6e3:	mov    rax,QWORD PTR [rdi+0x18]
   14003a6e7:	mov    QWORD PTR [rbp-0x31],rax
   14003a6eb:	mov    QWORD PTR [rdi+0x18],0xf
   14003a6f3:	mov    QWORD PTR [rdi+0x10],r13
   14003a6f7:	mov    BYTE PTR [rdi],0x0
   14003a6fa:	cmp    QWORD PTR [rbp-0x9],0x10
   14003a6ff:	jb     0x14003a70a
   14003a701:	mov    rcx,QWORD PTR [rbp-0x21]
   14003a705:	call   0x14002b150
   14003a70a:	mov    r12,QWORD PTR [rbp-0x39]
   14003a70e:	mov    r14,QWORD PTR [rbp-0x31]
   14003a712:	mov    rbx,QWORD PTR [rbp+0x5f]
   14003a716:	mov    rax,QWORD PTR [rbp-0x71]
   14003a71a:	cmp    DWORD PTR [rax+0x14],0x0
   14003a71e:	jbe    0x14003a87f
   14003a724:	mov    r15,QWORD PTR [rbp-0x49]
   14003a728:	cmp    BYTE PTR [rsi],0x0
   14003a72b:	jne    0x14003a749
   14003a72d:	test   r12,r12
   14003a730:	je     0x14003a7a0
   14003a732:	cmp    r12,0x1
   14003a736:	jne    0x14003a749
   14003a738:	lea    rax,[rbp-0x49]
   14003a73c:	cmp    r14,0x10
   14003a740:	cmovae rax,r15
   14003a744:	cmp    BYTE PTR [rax],0x0
   14003a747:	je     0x14003a7a0
   14003a749:	xor    eax,eax
   14003a74b:	or     rcx,0xffffffffffffffff
   14003a74f:	mov    rdi,rsi
   14003a752:	repnz scas al,BYTE PTR es:[rdi]
   14003a754:	not    rcx
   14003a757:	lea    rdi,[rcx-0x1]
   14003a75b:	lea    rcx,[rbp-0x49]
   14003a75f:	cmp    r14,0x10
   14003a763:	cmovae rcx,r15
   14003a767:	mov    r8,rdi
   14003a76a:	cmp    r12,rdi
   14003a76d:	cmovb  r8,r12
   14003a771:	mov    rdx,rsi
   14003a774:	call   0x14002b13e
   14003a779:	movsxd rcx,eax
   14003a77c:	test   eax,eax
   14003a77e:	jne    0x14003a791
   14003a780:	cmp    r12,rdi
   14003a783:	jb     0x14003a820
   14003a789:	cmp    r12,rdi
   14003a78c:	setne  al
   14003a78f:	mov    ecx,eax
   14003a791:	test   ecx,ecx
   14003a793:	js     0x14003a820
   14003a799:	nop    DWORD PTR [rax+0x0]
   14003a7a0:	inc    rsi
   14003a7a3:	cmp    BYTE PTR [rsi],0x0
   14003a7a6:	jne    0x14003a7a0
   14003a7a8:	inc    rsi
   14003a7ab:	cmp    BYTE PTR [rsi],0x0
   14003a7ae:	jne    0x14003a7d0
   14003a7b0:	test   r12,r12
   14003a7b3:	je     0x14003a84d
   14003a7b9:	cmp    r12,0x1
   14003a7bd:	jne    0x14003a7d0
   14003a7bf:	lea    rax,[rbp-0x49]
   14003a7c3:	cmp    r14,0x10
   14003a7c7:	cmovae rax,r15
   14003a7cb:	cmp    BYTE PTR [rax],0x0
   14003a7ce:	je     0x14003a84d
   14003a7d0:	xor    eax,eax
   14003a7d2:	or     rcx,0xffffffffffffffff
   14003a7d6:	mov    rdi,rsi
   14003a7d9:	repnz scas al,BYTE PTR es:[rdi]
   14003a7db:	not    rcx
   14003a7de:	lea    rdi,[rcx-0x1]
   14003a7e2:	lea    rcx,[rbp-0x49]
   14003a7e6:	cmp    r14,0x10
   14003a7ea:	cmovae rcx,r15
   14003a7ee:	mov    r8,rdi
   14003a7f1:	cmp    r12,rdi
   14003a7f4:	cmovb  r8,r12
   14003a7f8:	mov    rdx,rsi
   14003a7fb:	call   0x14002b13e
   14003a800:	movsxd rcx,eax
   14003a803:	test   eax,eax
   14003a805:	jne    0x14003a814
   14003a807:	cmp    r12,rdi
   14003a80a:	jb     0x14003a84d
   14003a80c:	cmp    r12,rdi
   14003a80f:	setne  al
   14003a812:	mov    ecx,eax
   14003a814:	test   ecx,ecx
   14003a816:	jle    0x14003a84d
   14003a818:	jmp    0x14003a830
   14003a81a:	nop    WORD PTR [rax+rax*1+0x0]
   14003a820:	inc    rsi
   14003a823:	cmp    BYTE PTR [rsi],0x0
   14003a826:	jne    0x14003a820
   14003a828:	inc    rsi
   14003a82b:	nop    DWORD PTR [rax+rax*1+0x0]
   14003a830:	inc    rsi
   14003a833:	cmp    BYTE PTR [rsi],0x0
   14003a836:	jne    0x14003a830
   14003a838:	inc    rsi
   14003a83b:	inc    r13d
   14003a83e:	mov    rax,QWORD PTR [rbp-0x71]
   14003a842:	cmp    r13d,DWORD PTR [rax+0x14]
   14003a846:	jae    0x14003a883
   14003a848:	jmp    0x14003a728
   14003a84d:	mov    rax,QWORD PTR [rbp-0x71]
   14003a851:	cmp    BYTE PTR [rax+0x24],0x0
   14003a855:	jne    0x14003a85e
   14003a857:	inc    rbx
   14003a85a:	mov    QWORD PTR [rbp+0x5f],rbx
   14003a85e:	mov    rdi,QWORD PTR [rbp-0x69]
   14003a862:	mov    QWORD PTR [rdi],rbx
   14003a865:	cmp    r14,0x10
   14003a869:	jb     0x14003a873
   14003a86b:	mov    rcx,r15
   14003a86e:	call   0x14002b150
   14003a873:	mov    rax,rdi
   14003a876:	jmp    0x14003aa65
   14003a87b:	mov    rax,QWORD PTR [rbp-0x71]
   14003a87f:	mov    r15,QWORD PTR [rbp-0x49]
   14003a883:	cmp    DWORD PTR [rax+0x18],0x0
   14003a887:	je     0x14003a9fd
   14003a88d:	movzx  eax,BYTE PTR [rbp-0x75]
   14003a891:	mov    BYTE PTR [rbp-0x79],al
   14003a894:	mov    BYTE PTR [rbp-0x78],0x0
   14003a898:	lea    r9,[rbp-0x78]
   14003a89c:	lea    r8,[rbp-0x79]
   14003a8a0:	lea    rdx,[rbp-0x21]
   14003a8a4:	mov    rcx,QWORD PTR [rbp-0x61]
   14003a8a8:	call   0x140035f90
   14003a8ad:	mov    rdi,rax
   14003a8b0:	lea    rax,[rbp-0x49]
   14003a8b4:	cmp    rax,rdi
   14003a8b7:	je     0x14003a921
   14003a8b9:	cmp    QWORD PTR [rbp-0x31],0x10
   14003a8be:	jb     0x14003a8c9
   14003a8c0:	mov    rcx,QWORD PTR [rbp-0x49]
   14003a8c4:	call   0x14002b150
   14003a8c9:	mov    QWORD PTR [rbp-0x31],0xf
   14003a8d1:	xor    ebx,ebx
   14003a8d3:	mov    QWORD PTR [rbp-0x39],rbx
   14003a8d7:	mov    BYTE PTR [rbp-0x49],bl
   14003a8da:	cmp    QWORD PTR [rdi+0x18],0x10
   14003a8df:	jae    0x14003a8f7
   14003a8e1:	mov    r8,QWORD PTR [rdi+0x10]
   14003a8e5:	inc    r8
   14003a8e8:	mov    rdx,rdi
   14003a8eb:	lea    rcx,[rbp-0x49]
   14003a8ef:	call   QWORD PTR [rip+0xecfb]        # 0x1400495f0
   14003a8f5:	jmp    0x14003a901
   14003a8f7:	mov    rax,QWORD PTR [rdi]
   14003a8fa:	mov    QWORD PTR [rbp-0x49],rax
   14003a8fe:	mov    QWORD PTR [rdi],rbx
   14003a901:	mov    rax,QWORD PTR [rdi+0x10]
   14003a905:	mov    QWORD PTR [rbp-0x39],rax
   14003a909:	mov    rax,QWORD PTR [rdi+0x18]
   14003a90d:	mov    QWORD PTR [rbp-0x31],rax
   14003a911:	mov    QWORD PTR [rdi+0x18],0xf
   14003a919:	mov    QWORD PTR [rdi+0x10],rbx
   14003a91d:	mov    BYTE PTR [rdi],bl
   14003a91f:	jmp    0x14003a923
   14003a921:	xor    ebx,ebx
   14003a923:	cmp    QWORD PTR [rbp-0x9],0x10
   14003a928:	jb     0x14003a933
   14003a92a:	mov    rcx,QWORD PTR [rbp-0x21]
   14003a92e:	call   0x14002b150
   14003a933:	mov    r12d,ebx
   14003a936:	mov    rcx,QWORD PTR [rbp-0x71]
   14003a93a:	mov    r13d,DWORD PTR [rcx+0x18]
   14003a93e:	mov    r14,QWORD PTR [rbp-0x31]
   14003a942:	mov    r15,QWORD PTR [rbp-0x49]
   14003a946:	test   r13d,r13d
   14003a949:	je     0x14003a9f9
   14003a94f:	mov    rbx,QWORD PTR [rbp-0x39]
   14003a953:	cmp    BYTE PTR [rsi],0x0
   14003a956:	jne    0x14003a974
   14003a958:	test   rbx,rbx
   14003a95b:	je     0x14003a9d8
   14003a95d:	cmp    rbx,0x1
   14003a961:	jne    0x14003a974
   14003a963:	lea    rax,[rbp-0x49]
   14003a967:	cmp    r14,0x10
   14003a96b:	cmovae rax,r15
   14003a96f:	cmp    BYTE PTR [rax],0x0
   14003a972:	je     0x14003a9d8
   14003a974:	xor    eax,eax
   14003a976:	or     rcx,0xffffffffffffffff
   14003a97a:	mov    rdi,rsi
   14003a97d:	repnz scas al,BYTE PTR es:[rdi]
   14003a97f:	not    rcx
   14003a982:	lea    rdi,[rcx-0x1]
   14003a986:	lea    rcx,[rbp-0x49]
   14003a98a:	cmp    r14,0x10
   14003a98e:	cmovae rcx,r15
   14003a992:	mov    r8,rdi
   14003a995:	cmp    rbx,rdi
   14003a998:	cmovb  r8,rbx
   14003a99c:	mov    rdx,rsi
   14003a99f:	call   0x14002b13e
   14003a9a4:	movsxd rcx,eax
   14003a9a7:	test   eax,eax
   14003a9a9:	jne    0x14003a9b8
   14003a9ab:	cmp    rbx,rdi
   14003a9ae:	jb     0x14003a9c0
   14003a9b0:	cmp    rbx,rdi
   14003a9b3:	setne  al
   14003a9b6:	mov    ecx,eax
   14003a9b8:	test   ecx,ecx
   14003a9ba:	je     0x14003a9d8
   14003a9bc:	nop    DWORD PTR [rax+0x0]
   14003a9c0:	inc    rsi
   14003a9c3:	cmp    BYTE PTR [rsi],0x0
   14003a9c6:	jne    0x14003a9c0
   14003a9c8:	inc    rsi
   14003a9cb:	inc    r12d
   14003a9ce:	cmp    r12d,r13d
   14003a9d1:	jae    0x14003a9f9
   14003a9d3:	jmp    0x14003a953
   14003a9d8:	mov    rax,QWORD PTR [rbp-0x71]
   14003a9dc:	cmp    BYTE PTR [rax+0x24],0x0
   14003a9e0:	mov    rax,QWORD PTR [rbp+0x5f]
   14003a9e4:	jne    0x14003a9ed
   14003a9e6:	inc    rax
   14003a9e9:	mov    QWORD PTR [rbp+0x5f],rax
   14003a9ed:	mov    rdi,QWORD PTR [rbp-0x69]
   14003a9f1:	mov    QWORD PTR [rdi],rax
   14003a9f4:	jmp    0x14003a865
   14003a9f9:	mov    rbx,QWORD PTR [rbp+0x5f]
   14003a9fd:	cmp    r14,0x10
   14003aa01:	jb     0x14003aa0f
   14003aa03:	mov    rcx,r15
   14003aa06:	call   0x14002b150
   14003aa0b:	mov    rbx,QWORD PTR [rbp+0x5f]
   14003aa0f:	mov    r14,QWORD PTR [rbp-0x71]
   14003aa13:	mov    r15,QWORD PTR [rbp-0x61]
   14003aa17:	mov    r13,QWORD PTR [rbp-0x69]
   14003aa1b:	mov    r8d,DWORD PTR [r14+0x1c]
   14003aa1f:	movzx  edi,BYTE PTR [rbp-0x75]
   14003aa23:	movzx  edx,dil
   14003aa27:	mov    rcx,r15
   14003aa2a:	call   0x14002cbd0
   14003aa2f:	cmp    al,0x1
   14003aa31:	je     0x14003a5c8
   14003aa37:	mov    r8d,DWORD PTR [r14+0x20]
   14003aa3b:	test   r8d,r8d
   14003aa3e:	je     0x14003aa54
   14003aa40:	movzx  edx,dil
   14003aa44:	mov    rcx,r15
   14003aa47:	call   0x14002cbd0
   14003aa4c:	test   al,al
   14003aa4e:	je     0x14003a5c8
   14003aa54:	cmp    BYTE PTR [r14+0x24],0x0
   14003aa59:	je     0x14003aa5e
   14003aa5b:	inc    rbx
   14003aa5e:	mov    QWORD PTR [r13+0x0],rbx
   14003aa62:	mov    rax,r13
   14003aa65:	mov    rcx,QWORD PTR [rbp+0x7]
   14003aa69:	xor    rcx,rsp
   14003aa6c:	call   0x14002b100
   14003aa71:	mov    rbx,QWORD PTR [rsp+0x100]
   14003aa79:	add    rsp,0xb0
   14003aa80:	pop    r15
   14003aa82:	pop    r14
   14003aa84:	pop    r13
   14003aa86:	pop    r12
   14003aa88:	pop    rdi
   14003aa89:	pop    rsi
   14003aa8a:	pop    rbp
   14003aa8b:	ret    
   14003aa8c:	int3   
   14003aa8d:	int3   
   14003aa8e:	int3   
   14003aa8f:	int3   
   14003aa90:	rex push rdi
   14003aa92:	sub    rsp,0x50
   14003aa96:	inc    QWORD PTR [rcx+0x60]
   14003aa9a:	mov    rdx,QWORD PTR [rcx+0x60]
   14003aa9e:	mov    rdi,rcx
   14003aaa1:	cmp    rdx,QWORD PTR [rcx+0x58]
   14003aaa5:	jne    0x14003aac0
   14003aaa7:	sub    rdx,QWORD PTR [rcx+0x50]
   14003aaab:	mov    r8,rdx
   14003aaae:	mov    edx,0x8
   14003aab3:	call   0x1400322b0
   14003aab8:	xor    al,al
   14003aaba:	add    rsp,0x50
   14003aabe:	pop    rdi
   14003aabf:	ret    
   14003aac0:	mov    r9,QWORD PTR [rcx]
   14003aac3:	mov    r8d,DWORD PTR [r9+0x30]
   14003aac7:	test   r8d,0x203
   14003aace:	je     0x14003aadf
   14003aad0:	mov    eax,r8d
   14003aad3:	and    eax,0x1003
   14003aad8:	cmp    eax,0x1001
   14003aadd:	jne    0x14003aafd
   14003aadf:	mov    rax,QWORD PTR [rcx+0x8]
   14003aae3:	movzx  ecx,BYTE PTR [rdx]
   14003aae6:	mov    rax,QWORD PTR [rax]
   14003aae9:	cmp    BYTE PTR [rax+rcx*1+0x4],0x8
   14003aaee:	jne    0x14003aafd
   14003aaf0:	mov    rcx,rdi
   14003aaf3:	add    rsp,0x50
   14003aaf7:	pop    rdi
   14003aaf8:	jmp    0x140036150
   14003aafd:	mov    QWORD PTR [rsp+0x68],rbp
   14003ab02:	mov    QWORD PTR [rsp+0x70],rsi
   14003ab07:	mov    QWORD PTR [rsp+0x48],r12
   14003ab0c:	mov    QWORD PTR [rsp+0x40],r13
   14003ab11:	xor    ebp,ebp
   14003ab13:	mov    QWORD PTR [rsp+0x38],r14
   14003ab18:	mov    QWORD PTR [rsp+0x30],r15
   14003ab1d:	bt     r8d,0x16
   14003ab22:	jb     0x14003ab5a
   14003ab24:	inc    DWORD PTR [rdi+0x68]
   14003ab27:	test   DWORD PTR [r9+0x30],0x800000
   14003ab2f:	mov    ebp,DWORD PTR [rdi+0x68]
   14003ab32:	je     0x14003ab5a
   14003ab34:	sub    rdx,QWORD PTR [rdi+0x50]
   14003ab38:	lea    rcx,[r9+0x180]
   14003ab3f:	mov    QWORD PTR [rsp+0x28],0x0
   14003ab48:	dec    rdx
   14003ab4b:	mov    QWORD PTR [rsp+0x20],rdx
   14003ab50:	lea    rdx,[rsp+0x20]
   14003ab55:	call   0x1400360a0
   14003ab5a:	xor    edx,edx
   14003ab5c:	mov    rcx,rdi
   14003ab5f:	lea    r8d,[rdx+0x18]
   14003ab63:	call   0x14002eb10
   14003ab68:	mov    r12,rax
   14003ab6b:	mov    DWORD PTR [rax+0x10],ebp
   14003ab6e:	mov    rcx,QWORD PTR [rdi]
   14003ab71:	mov    edx,DWORD PTR [rcx+0x30]
   14003ab74:	shr    edx,0x14
   14003ab77:	and    dl,0x1
   14003ab7a:	mov    BYTE PTR [rax+0x14],dl
   14003ab7d:	mov    rdx,QWORD PTR [rdi]
   14003ab80:	mov    r15,QWORD PTR [rdi+0x80]
   14003ab87:	mov    rax,QWORD PTR [rdx+0x168]
   14003ab8e:	mov    rcx,QWORD PTR [rdx+0x170]
   14003ab95:	sub    r12,QWORD PTR [rdx+0x168]
   14003ab9c:	sub    rcx,rax
   14003ab9f:	add    rcx,0x7
   14003aba3:	and    rcx,0xfffffffffffffff8
   14003aba7:	add    rcx,rax
   14003abaa:	mov    QWORD PTR [rdx+0x170],rcx
   14003abb1:	mov    rcx,QWORD PTR [rdi]
   14003abb4:	movzx  r13d,BYTE PTR [rdi+0x88]
   14003abbc:	mov    rax,QWORD PTR [rcx+0x170]
   14003abc3:	mov    r14d,DWORD PTR [rdi+0x6c]
   14003abc7:	sub    rax,QWORD PTR [rcx+0x168]
   14003abce:	mov    QWORD PTR [rdi+0x80],rax
   14003abd5:	mov    esi,DWORD PTR [rcx+0x30]
   14003abd8:	mov    BYTE PTR [rdi+0x88],0x0
   14003abdf:	mov    DWORD PTR [rdi+0x6c],0xffffffff
   14003abe6:	mov    rax,QWORD PTR [rdi+0x58]
   14003abea:	cmp    QWORD PTR [rdi+0x60],rax
   14003abee:	je     0x14003abfa
   14003abf0:	mov    rcx,rdi
   14003abf3:	call   QWORD PTR [rdi+0x48]
   14003abf6:	test   al,al
   14003abf8:	jne    0x14003abe6
   14003abfa:	mov    rdx,r12
   14003abfd:	mov    rcx,rdi
   14003ac00:	call   0x140032370
   14003ac05:	test   al,al
   14003ac07:	je     0x14003ace9
   14003ac0d:	cmp    BYTE PTR [rdi+0x88],0x0
   14003ac14:	mov    QWORD PTR [rsp+0x60],rbx
   14003ac19:	je     0x14003ac37
   14003ac1b:	mov    edx,0x1c
   14003ac20:	mov    ebx,esi
   14003ac22:	mov    rcx,rdi
   14003ac25:	shr    ebx,0x14
   14003ac28:	lea    r8d,[rdx-0x4]
   14003ac2c:	and    bl,0x1
   14003ac2f:	call   0x14002eb10
   14003ac34:	mov    BYTE PTR [rax+0x10],bl
   14003ac37:	mov    rax,QWORD PTR [rdi]
   14003ac3a:	mov    DWORD PTR [rax+0x30],esi
   14003ac3d:	shr    esi,0x14
   14003ac40:	and    sil,0x1
   14003ac44:	cmp    BYTE PTR [rdi+0x18],sil
   14003ac48:	je     0x14003ac4e
   14003ac4a:	mov    BYTE PTR [rdi+0x18],sil
   14003ac4e:	mov    rbx,QWORD PTR [rdi+0x60]
   14003ac52:	mov    r8,QWORD PTR [rdi+0x58]
   14003ac56:	mov    BYTE PTR [rdi+0x88],r13b
   14003ac5d:	mov    DWORD PTR [rdi+0x6c],r14d
   14003ac61:	cmp    rbx,r8
   14003ac64:	jne    0x14003ac7b
   14003ac66:	sub    r8,QWORD PTR [rdi+0x50]
   14003ac6a:	mov    edx,0x8
   14003ac6f:	mov    rcx,rdi
   14003ac72:	call   0x1400322b0
   14003ac77:	xor    al,al
   14003ac79:	jmp    0x14003ace4
   14003ac7b:	test   ebp,ebp
   14003ac7d:	je     0x14003aca2
   14003ac7f:	mov    rcx,QWORD PTR [rdi]
   14003ac82:	test   DWORD PTR [rcx+0x30],0x800000
   14003ac89:	je     0x14003aca2
   14003ac8b:	sub    rbx,QWORD PTR [rdi+0x50]
   14003ac8f:	lea    edx,[rbp-0x1]
   14003ac92:	add    rcx,0x180
   14003ac99:	call   0x14002cf10
   14003ac9e:	mov    QWORD PTR [rax+0x8],rbx
   14003aca2:	inc    QWORD PTR [rdi+0x60]
   14003aca6:	mov    ebx,0x1
   14003acab:	mov    rcx,rdi
   14003acae:	lea    r8d,[rbx+0x17]
   14003acb2:	mov    edx,ebx
   14003acb4:	call   0x14002eb10
   14003acb9:	mov    DWORD PTR [rax+0x10],ebp
   14003acbc:	mov    rcx,QWORD PTR [rdi]
   14003acbf:	mov    edx,DWORD PTR [rcx+0x30]
   14003acc2:	lea    ecx,[rbp-0x1]
   14003acc5:	shr    edx,0x14
   14003acc8:	and    dl,bl
   14003acca:	mov    BYTE PTR [rax+0x14],dl
   14003accd:	mov    QWORD PTR [rdi+0x78],r12
   14003acd1:	mov    QWORD PTR [rdi+0x80],r15
   14003acd8:	cmp    ecx,0x1e
   14003acdb:	ja     0x14003ace2
   14003acdd:	shl    ebx,cl
   14003acdf:	or     DWORD PTR [rdi+0x24],ebx
   14003ace2:	mov    al,0x1
   14003ace4:	mov    rbx,QWORD PTR [rsp+0x60]
   14003ace9:	mov    r13,QWORD PTR [rsp+0x40]
   14003acee:	mov    r12,QWORD PTR [rsp+0x48]
   14003acf3:	mov    rsi,QWORD PTR [rsp+0x70]
   14003acf8:	mov    rbp,QWORD PTR [rsp+0x68]
   14003acfd:	mov    r14,QWORD PTR [rsp+0x38]
   14003ad02:	mov    r15,QWORD PTR [rsp+0x30]
   14003ad07:	add    rsp,0x50
   14003ad0b:	pop    rdi
   14003ad0c:	ret    
   14003ad0d:	int3   
   14003ad0e:	int3   
   14003ad0f:	int3   
   14003ad10:	rex push rbx
   14003ad12:	push   rbp
   14003ad13:	push   rsi
   14003ad14:	push   rdi
   14003ad15:	sub    rsp,0xc8
   14003ad1c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14003ad25:	mov    rax,QWORD PTR [rip+0x2d4c4]        # 0x1400681f0
   14003ad2c:	xor    rax,rsp
   14003ad2f:	mov    QWORD PTR [rsp+0xb8],rax
   14003ad37:	mov    r11,r9
   14003ad3a:	mov    rbx,r8
   14003ad3d:	mov    rdi,rdx
   14003ad40:	mov    r10,rcx
   14003ad43:	xor    ebp,ebp
   14003ad45:	movzx  esi,BYTE PTR [rsp+0x110]
   14003ad4d:	mov    QWORD PTR [rsp+0x38],r10
   14003ad52:	mov    QWORD PTR [rsp+0x40],r11
   14003ad57:	mov    r8d,0x1
   14003ad5d:	mov    rdx,rbp
   14003ad60:	mov    QWORD PTR [rsp+0x50],rdx
   14003ad65:	mov    r9d,ebp
   14003ad68:	mov    DWORD PTR [rsp+0x4c],ebp
   14003ad6c:	mov    QWORD PTR [rsp+0x58],rbp
   14003ad71:	movzx  eax,BYTE PTR [r10+0x18]
   14003ad76:	mov    BYTE PTR [rsp+0x30],al
   14003ad7a:	lea    rcx,[rip+0xfffffffffffc527f]        # 0x140000000
   14003ad81:	mov    DWORD PTR [rsp+0x48],r8d
   14003ad86:	test   rdi,rdi
   14003ad89:	je     0x14003b2c9
   14003ad8f:	movsxd rax,DWORD PTR [rdi]
   14003ad92:	cmp    eax,0x1d
   14003ad95:	ja     0x14003aea9
   14003ad9b:	mov    ecx,DWORD PTR [rcx+rax*4+0x3b2e8]
   14003ada2:	lea    rax,[rip+0xfffffffffffc5257]        # 0x140000000
   14003ada9:	add    rcx,rax
   14003adac:	jmp    rcx
   14003adae:	movzx  eax,BYTE PTR [rdi+0x10]
   14003adb2:	mov    BYTE PTR [rsp+0x30],al
   14003adb6:	jmp    0x14003aea9
   14003adbb:	cmp    rdx,rdi
   14003adbe:	je     0x14003af75
   14003adc4:	test   rdx,rdx
   14003adc7:	jne    0x14003b0e4
   14003adcd:	mov    rdx,rdi
   14003add0:	mov    QWORD PTR [rsp+0x50],rdx
   14003add5:	mov    rax,QWORD PTR [rdi+0x8]
   14003add9:	mov    QWORD PTR [rsp+0x58],rax
   14003adde:	mov    rdi,QWORD PTR [rdi+0x10]
   14003ade2:	cmp    DWORD PTR [rdi],ebp
   14003ade4:	jne    0x14003adf4
   14003ade6:	mov    r9d,DWORD PTR [rdi+0x10]
   14003adea:	mov    DWORD PTR [rsp+0x4c],r9d
   14003adef:	jmp    0x14003aead
   14003adf4:	mov    r9d,ebp
   14003adf7:	mov    DWORD PTR [rsp+0x4c],ebp
   14003adfb:	jmp    0x14003aead
   14003ae00:	mov    rdi,QWORD PTR [rdi+0x10]
   14003ae04:	or     r8d,0xffffffff
   14003ae08:	jmp    0x14003aead
   14003ae0d:	mov    ecx,DWORD PTR [rdi+0x10]
   14003ae10:	test   ecx,ecx
   14003ae12:	js     0x14003b104
   14003ae18:	test   rdx,rdx
   14003ae1b:	je     0x14003ae36
   14003ae1d:	test   r9d,r9d
   14003ae20:	je     0x14003ae36
   14003ae22:	cmp    r9d,ecx
   14003ae25:	jne    0x14003ae36
   14003ae27:	mov    rdx,rbp
   14003ae2a:	mov    QWORD PTR [rsp+0x50],rdx
   14003ae2f:	mov    rdi,QWORD PTR [rsp+0x58]
   14003ae34:	jmp    0x14003aead
   14003ae36:	mov    rdx,QWORD PTR [r10]
   14003ae39:	cmp    BYTE PTR [rdx+0x1a0],bpl
   14003ae40:	je     0x14003ae92
   14003ae42:	test   ecx,ecx
   14003ae44:	je     0x14003ae92
   14003ae46:	mov    rdx,QWORD PTR [rdx+0x50]
   14003ae4a:	test   rdx,rdx
   14003ae4d:	je     0x14003ae92
   14003ae4f:	cmp    DWORD PTR [rdx],0x1d
   14003ae52:	jne    0x14003ae61
   14003ae54:	mov    rax,QWORD PTR [rdx+0x10]
   14003ae58:	cmp    DWORD PTR [rax],ebp
   14003ae5a:	jne    0x14003ae61
   14003ae5c:	cmp    DWORD PTR [rax+0x10],ecx
   14003ae5f:	je     0x14003ae67
   14003ae61:	mov    rdx,QWORD PTR [rdx+0x8]
   14003ae65:	jmp    0x14003ae4a
   14003ae67:	mov    BYTE PTR [rsp+0x20],sil
   14003ae6c:	mov    r9,r11
   14003ae6f:	mov    r8,rbx
   14003ae72:	mov    rdx,QWORD PTR [rdx+0x8]
   14003ae76:	mov    rcx,r10
   14003ae79:	call   0x14003ad10
   14003ae7e:	mov    r10,QWORD PTR [rsp+0x38]
   14003ae83:	mov    r11,QWORD PTR [rsp+0x40]
   14003ae88:	mov    r8d,DWORD PTR [rsp+0x48]
   14003ae8d:	mov    r9d,DWORD PTR [rsp+0x4c]
   14003ae92:	mov    rdx,QWORD PTR [rsp+0x50]
   14003ae97:	jmp    0x14003aea9
   14003ae99:	cmp    DWORD PTR [rdi+0x10],0xfffffffd
   14003ae9d:	jne    0x14003aea9
   14003ae9f:	mov    rax,QWORD PTR [rdi+0x8]
   14003aea3:	mov    rdi,QWORD PTR [rax+0x8]
   14003aea7:	jmp    0x14003aead
   14003aea9:	mov    rdi,QWORD PTR [rdi+0x8]
   14003aead:	inc    r8d
   14003aeb0:	jmp    0x14003ad7a
   14003aeb5:	test   rbx,rbx
   14003aeb8:	je     0x14003aed0
   14003aeba:	or     BYTE PTR [rbx],0x4
   14003aebd:	or     BYTE PTR [rbx+0xa],sil
   14003aec1:	or     BYTE PTR [rbx+0xd],sil
   14003aec5:	or     BYTE PTR [rbx+0xc],sil
   14003aec9:	or     BYTE PTR [rbx+0x85],sil
   14003aed0:	test   r11,r11
   14003aed3:	je     0x14003b2c9
   14003aed9:	mov    rbx,rbp
   14003aedc:	mov    rdi,QWORD PTR [rdi+0x8]
   14003aee0:	jmp    0x14003ad4d
   14003aee5:	test   BYTE PTR [rdi+0x18],0x4
   14003aee9:	jne    0x14003b034
   14003aeef:	mov    rdx,rdi
   14003aef2:	mov    rcx,r10
   14003aef5:	call   0x14002cfb0
   14003aefa:	test   al,al
   14003aefc:	jne    0x14003b02a
   14003af02:	mov    eax,DWORD PTR [rdi]
   14003af04:	cmp    eax,0x12
   14003af07:	je     0x14003af11
   14003af09:	add    eax,0xffffffea
   14003af0c:	cmp    eax,0x3
   14003af0f:	ja     0x14003af2f
   14003af11:	mov    ecx,DWORD PTR [rdi+0x130]
   14003af17:	cmp    ecx,0x40
   14003af1a:	ja     0x14003af2f
   14003af1c:	mov    eax,0x1
   14003af21:	shl    rax,cl
   14003af24:	mov    rcx,QWORD PTR [rsp+0x38]
   14003af29:	or     QWORD PTR [rcx+0x28],rax
   14003af2d:	jmp    0x14003af34
   14003af2f:	mov    rcx,QWORD PTR [rsp+0x38]
   14003af34:	mov    BYTE PTR [rsp+0x20],sil
   14003af39:	mov    r9,QWORD PTR [rsp+0x40]
   14003af3e:	mov    r8,rbx
   14003af41:	mov    rdx,QWORD PTR [rdi+0x8]
   14003af45:	call   0x14003ad10
   14003af4a:	cmp    DWORD PTR [rdi],0x11
   14003af4d:	je     0x14003af62
   14003af4f:	cmp    QWORD PTR [rdi+0x120],rbp
   14003af56:	je     0x14003af62
   14003af58:	cmp    DWORD PTR [rsp+0x48],ebp
   14003af5c:	jne    0x14003b2c9
   14003af62:	mov    r11,QWORD PTR [rsp+0x40]
   14003af67:	mov    rdi,QWORD PTR [rdi+0x10]
   14003af6b:	mov    r10,QWORD PTR [rsp+0x38]
   14003af70:	jmp    0x14003ad4d
   14003af75:	mov    rax,QWORD PTR [r10]
   14003af78:	cmp    DWORD PTR [rax+0x34],ebp
   14003af7b:	jne    0x14003af84
   14003af7d:	mov    DWORD PTR [rax+0x34],0x2
   14003af84:	mov    rax,QWORD PTR [r10]
   14003af87:	mov    QWORD PTR [rax+0x38],rbp
   14003af8b:	mov    rax,QWORD PTR [r10]
   14003af8e:	mov    QWORD PTR [rax+0x40],rbp
   14003af92:	mov    rax,QWORD PTR [r10]
   14003af95:	test   DWORD PTR [rax+0x30],0x40000
   14003af9c:	jne    0x14003b0e4
   14003afa2:	mov    QWORD PTR [rsp+0xa8],0xf
   14003afae:	mov    QWORD PTR [rsp+0xa0],rbp
   14003afb6:	mov    BYTE PTR [rsp+0x90],bpl
   14003afbe:	mov    r8d,0x22
   14003afc4:	lea    rdx,[rip+0x14005]        # 0x14004efd0
   14003afcb:	lea    rcx,[rsp+0x90]
   14003afd3:	call   0x140005154
   14003afd8:	nop
   14003afd9:	xor    r9d,r9d
   14003afdc:	lea    r8d,[r9+0x2]
   14003afe0:	lea    rdx,[rsp+0x90]
   14003afe8:	lea    rcx,[rsp+0x68]
   14003afed:	call   0x140041e90
   14003aff2:	nop
   14003aff3:	lea    rcx,[rsp+0x68]
   14003aff8:	call   0x140042420
   14003affd:	nop
   14003affe:	lea    rcx,[rsp+0x68]
   14003b003:	call   0x140041d10
   14003b008:	nop
   14003b009:	cmp    QWORD PTR [rsp+0xa8],0x10
   14003b012:	jb     0x14003b0da
   14003b018:	mov    rcx,QWORD PTR [rsp+0x90]
   14003b020:	call   0x14002b150
   14003b025:	jmp    0x14003b0da
   14003b02a:	mov    rcx,QWORD PTR [rsp+0x38]
   14003b02f:	jmp    0x14003b107
   14003b034:	movzx  r9d,BYTE PTR [rsp+0x110]
   14003b03d:	test   rbx,rbx
   14003b040:	je     0x14003b062
   14003b042:	or     BYTE PTR [rbx],0x4
   14003b045:	mov    rax,rdi
   14003b048:	sub    rax,rbx
   14003b04b:	mov    esi,0x100
   14003b050:	test   BYTE PTR [rax+rbx*1+0x18],0x3
   14003b055:	je     0x14003b05a
   14003b057:	or     BYTE PTR [rbx],r9b
   14003b05a:	inc    rbx
   14003b05d:	dec    rsi
   14003b060:	jne    0x14003b050
   14003b062:	test   r11,r11
   14003b065:	je     0x14003b2c9
   14003b06b:	test   BYTE PTR [rdi+0x118],0x3
   14003b072:	je     0x14003b2c9
   14003b078:	movzx  eax,r9b
   14003b07c:	jmp    0x14003b2c6
   14003b081:	test   rbx,rbx
   14003b084:	je     0x14003b2c9
   14003b08a:	or     BYTE PTR [rbx],0x4
   14003b08d:	movzx  r8d,BYTE PTR [rdi+0x18]
   14003b092:	mov    esi,0x100
   14003b097:	movzx  r9d,BYTE PTR [rsp+0x110]
   14003b0a0:	movzx  r11d,BYTE PTR [rsp+0x30]
   14003b0a6:	test   r11b,r11b
   14003b0a9:	je     0x14003b0c0
   14003b0ab:	mov    rax,QWORD PTR [r10+0x8]
   14003b0af:	movzx  ecx,bpl
   14003b0b3:	mov    rax,QWORD PTR [rax]
   14003b0b6:	movzx  edx,BYTE PTR [rax+rcx*1+0x104]
   14003b0be:	jmp    0x14003b0c4
   14003b0c0:	movzx  edx,bpl
   14003b0c4:	cmp    dl,r8b
   14003b0c7:	jne    0x14003b0cc
   14003b0c9:	or     BYTE PTR [rbx],r9b
   14003b0cc:	inc    ebp
   14003b0ce:	inc    rbx
   14003b0d1:	cmp    ebp,esi
   14003b0d3:	jb     0x14003b0a6
   14003b0d5:	jmp    0x14003b2c9
   14003b0da:	mov    r11,QWORD PTR [rsp+0x40]
   14003b0df:	mov    r10,QWORD PTR [rsp+0x38]
   14003b0e4:	test   r11,r11
   14003b0e7:	je     0x14003b0f0
   14003b0e9:	movzx  eax,sil
   14003b0ed:	or     DWORD PTR [r11],eax
   14003b0f0:	movzx  r8d,sil
   14003b0f4:	mov    rdx,rbx
   14003b0f7:	mov    rcx,r10
   14003b0fa:	call   0x14002cf50
   14003b0ff:	jmp    0x14003b2c9
   14003b104:	mov    rcx,r10
   14003b107:	mov    rdx,rbx
   14003b10a:	movzx  r8d,sil
   14003b10e:	call   0x14002cf50
   14003b113:	mov    rdx,QWORD PTR [rsp+0x40]
   14003b118:	test   rdx,rdx
   14003b11b:	je     0x14003b2c9
   14003b121:	movzx  eax,sil
   14003b125:	or     DWORD PTR [rdx],eax
   14003b127:	jmp    0x14003b2c9
   14003b12c:	mov    BYTE PTR [rsp+0x20],sil
   14003b131:	mov    r9,r11
   14003b134:	mov    r8,rbx
   14003b137:	mov    rdx,QWORD PTR [rdi+0x8]
   14003b13b:	mov    rcx,r10
   14003b13e:	call   0x14003ad10
   14003b143:	test   rbx,rbx
   14003b146:	je     0x14003b2c9
   14003b14c:	or     BYTE PTR [rbx],0x4
   14003b14f:	mov    esi,0x100
   14003b154:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003b160:	mov    rax,QWORD PTR [rsp+0x38]
   14003b165:	mov    r8d,DWORD PTR [rax+0x34]
   14003b169:	movzx  edx,bpl
   14003b16d:	mov    rcx,QWORD PTR [rax+0x8]
   14003b171:	call   0x14002cbd0
   14003b176:	test   al,al
   14003b178:	jne    0x14003b186
   14003b17a:	movzx  eax,BYTE PTR [rsp+0x110]
   14003b182:	not    al
   14003b184:	and    BYTE PTR [rbx],al
   14003b186:	inc    ebp
   14003b188:	inc    rbx
   14003b18b:	cmp    ebp,esi
   14003b18d:	jb     0x14003b160
   14003b18f:	jmp    0x14003b2c9
   14003b194:	mov    BYTE PTR [rsp+0x20],sil
   14003b199:	mov    r9,r11
   14003b19c:	mov    r8,rbx
   14003b19f:	mov    rdx,QWORD PTR [rdi+0x8]
   14003b1a3:	mov    rcx,r10
   14003b1a6:	call   0x14003ad10
   14003b1ab:	test   rbx,rbx
   14003b1ae:	je     0x14003b2c9
   14003b1b4:	or     BYTE PTR [rbx],0x4
   14003b1b7:	mov    esi,0x100
   14003b1bc:	nop    DWORD PTR [rax+0x0]
   14003b1c0:	mov    rax,QWORD PTR [rsp+0x38]
   14003b1c5:	mov    r8d,DWORD PTR [rax+0x34]
   14003b1c9:	movzx  edx,bpl
   14003b1cd:	mov    rcx,QWORD PTR [rax+0x8]
   14003b1d1:	call   0x14002cbd0
   14003b1d6:	test   al,al
   14003b1d8:	je     0x14003b1e6
   14003b1da:	movzx  eax,BYTE PTR [rsp+0x110]
   14003b1e2:	not    al
   14003b1e4:	and    BYTE PTR [rbx],al
   14003b1e6:	inc    ebp
   14003b1e8:	inc    rbx
   14003b1eb:	cmp    ebp,esi
   14003b1ed:	jb     0x14003b1c0
   14003b1ef:	jmp    0x14003b2c9
   14003b1f4:	test   rbx,rbx
   14003b1f7:	je     0x14003b2c9
   14003b1fd:	cmp    BYTE PTR [rdi+0x25],bpl
   14003b201:	je     0x14003b0f0
   14003b207:	or     BYTE PTR [rbx],0x4
   14003b20a:	mov    esi,0x100
   14003b20f:	nop
   14003b210:	mov    BYTE PTR [rsp+0x30],bpl
   14003b215:	movzx  eax,BYTE PTR [r10+0x18]
   14003b21a:	mov    BYTE PTR [rsp+0x20],al
   14003b21e:	mov    r9,QWORD PTR [r10]
   14003b221:	mov    r8,rdi
   14003b224:	lea    rdx,[rsp+0x31]
   14003b229:	lea    rcx,[rsp+0x30]
   14003b22e:	call   0x140037b30
   14003b233:	lea    rcx,[rsp+0x30]
   14003b238:	cmp    rcx,rax
   14003b23b:	je     0x14003b247
   14003b23d:	movzx  eax,BYTE PTR [rsp+0x110]
   14003b245:	or     BYTE PTR [rbx],al
   14003b247:	inc    ebp
   14003b249:	inc    rbx
   14003b24c:	cmp    ebp,esi
   14003b24e:	mov    r10,QWORD PTR [rsp+0x38]
   14003b253:	jb     0x14003b210
   14003b255:	jmp    0x14003b2c9
   14003b257:	test   rbx,rbx
   14003b25a:	je     0x14003b2c9
   14003b25c:	or     BYTE PTR [rbx],0x4
   14003b25f:	mov    esi,0x100
   14003b264:	movzx  r11d,BYTE PTR [rsp+0x30]
   14003b26a:	nop    WORD PTR [rax+rax*1+0x0]
   14003b270:	test   r11b,r11b
   14003b273:	je     0x14003b28a
   14003b275:	mov    rax,QWORD PTR [r10+0x8]
   14003b279:	movzx  ecx,bpl
   14003b27d:	mov    rax,QWORD PTR [rax]
   14003b280:	movzx  edx,BYTE PTR [rax+rcx*1+0x104]
   14003b288:	jmp    0x14003b28e
   14003b28a:	movzx  edx,bpl
   14003b28e:	movzx  eax,dl
   14003b291:	cmp    BYTE PTR [rax+rdi*1+0x10],0x0
   14003b296:	je     0x14003b2a2
   14003b298:	movzx  eax,BYTE PTR [rsp+0x110]
   14003b2a0:	or     BYTE PTR [rbx],al
   14003b2a2:	inc    ebp
   14003b2a4:	inc    rbx
   14003b2a7:	cmp    ebp,esi
   14003b2a9:	jb     0x14003b270
   14003b2ab:	jmp    0x14003b2c9
   14003b2ad:	test   rbx,rbx
   14003b2b0:	je     0x14003b2bd
   14003b2b2:	or     BYTE PTR [rbx],0x4
   14003b2b5:	or     BYTE PTR [rbx+0xa],sil
   14003b2b9:	or     BYTE PTR [rbx+0xd],sil
   14003b2bd:	test   r11,r11
   14003b2c0:	je     0x14003b2c9
   14003b2c2:	movzx  eax,sil
   14003b2c6:	or     DWORD PTR [r11],eax
   14003b2c9:	mov    rcx,QWORD PTR [rsp+0xb8]
   14003b2d1:	xor    rcx,rsp
   14003b2d4:	call   0x14002b100
   14003b2d9:	add    rsp,0xc8
   14003b2e0:	pop    rdi
   14003b2e1:	pop    rsi
   14003b2e2:	pop    rbp
   14003b2e3:	pop    rbx
   14003b2e4:	ret    
   14003b2e5:	nop    DWORD PTR [rax]
   14003b2e8:	cdq    
   14003b2e9:	scas   al,BYTE PTR es:[rdi]
   14003b2ea:	add    eax,DWORD PTR [rax]
   14003b2ec:	or     eax,0x810003ae
   14003b2f1:	mov    al,0x3
   14003b2f3:	add    BYTE PTR [rcx-0x4afffc52],ch
   14003b2f9:	scas   al,BYTE PTR es:[rdi]
   14003b2fa:	add    eax,DWORD PTR [rax]
   14003b2fc:	lock mov al,0x3
   14003b2ff:	add    BYTE PTR [rcx+rsi*4],al
   14003b302:	add    eax,DWORD PTR [rax]
   14003b304:	test   eax,0xa90003ae
   14003b309:	scas   al,BYTE PTR es:[rdi]
   14003b30a:	add    eax,DWORD PTR [rax]
   14003b30c:	sub    al,0xb1
   14003b30e:	add    eax,DWORD PTR [rax]
   14003b310:	xchg   esp,eax
   14003b311:	mov    cl,0x3
   14003b313:	add    BYTE PTR [rcx-0x42fffc52],ch
   14003b319:	mov    dl,0x3
   14003b31b:	add    ah,ah
   14003b31d:	mov    al,0x3
   14003b31f:	add    ah,dh
   14003b321:	mov    cl,0x3
   14003b323:	add    BYTE PTR [rdi-0x4e],dl
   14003b326:	add    eax,DWORD PTR [rax]
   14003b328:	add    BYTE PTR [rsi-0x511afffd],ch
   14003b32e:	add    eax,DWORD PTR [rax]
   14003b330:	in     eax,0xae
   14003b332:	add    eax,DWORD PTR [rax]
   14003b334:	test   eax,0xad0003ae
   14003b339:	mov    dl,0x3
   14003b33b:	add    BYTE PTR [rcx-0x1afffc52],ch
   14003b341:	scas   al,BYTE PTR es:[rdi]
   14003b342:	add    eax,DWORD PTR [rax]
   14003b344:	in     eax,0xae
   14003b346:	add    eax,DWORD PTR [rax]
   14003b348:	in     eax,0xae
   14003b34a:	add    eax,DWORD PTR [rax]
   14003b34c:	in     eax,0xae
   14003b34e:	add    eax,DWORD PTR [rax]
   14003b350:	test   eax,0xa90003ae
   14003b355:	scas   al,BYTE PTR es:[rdi]
   14003b356:	add    eax,DWORD PTR [rax]
   14003b358:	scas   al,BYTE PTR es:[rdi]
   14003b359:	lods   eax,DWORD PTR ds:[rsi]
   14003b35a:	add    eax,DWORD PTR [rax]
   14003b35c:	mov    ebx,0x480003ad
   14003b361:	mov    eax,esp
   14003b363:	push   rbp
   14003b364:	push   r12
   14003b366:	push   r13
   14003b368:	lea    rbp,[rax-0xa8]
   14003b36f:	sub    rsp,0x190
   14003b376:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14003b37f:	mov    QWORD PTR [rax+0x10],rbx
   14003b383:	mov    QWORD PTR [rax+0x18],rsi
   14003b387:	mov    QWORD PTR [rax+0x20],rdi
   14003b38b:	mov    rax,QWORD PTR [rip+0x2ce5e]        # 0x1400681f0
   14003b392:	xor    rax,rsp
   14003b395:	mov    QWORD PTR [rbp+0x88],rax
   14003b39c:	mov    rdi,rcx
   14003b39f:	lea    rbx,[rcx+0x60]
   14003b3a3:	mov    r12,QWORD PTR [rbx]
   14003b3a6:	mov    r10,QWORD PTR [rcx+0x58]
   14003b3aa:	cmp    r12,r10
   14003b3ad:	jne    0x14003b43e
   14003b3b3:	mov    QWORD PTR [rsp+0x60],0xf
   14003b3bc:	xor    esi,esi
   14003b3be:	mov    QWORD PTR [rsp+0x58],rsi
   14003b3c3:	mov    BYTE PTR [rsp+0x48],sil
   14003b3c8:	lea    r8d,[rsi+0x27]
   14003b3cc:	lea    rdx,[rip+0x13d95]        # 0x14004f168
   14003b3d3:	lea    rcx,[rsp+0x48]
   14003b3d8:	call   0x140005154
   14003b3dd:	nop
   14003b3de:	mov    rbx,QWORD PTR [rbx]
   14003b3e1:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b3e5:	mov    QWORD PTR [rbp-0x78],0xf
   14003b3ed:	mov    QWORD PTR [rbp-0x80],rsi
   14003b3f1:	mov    BYTE PTR [rsp+0x70],sil
   14003b3f6:	or     r9,0xffffffffffffffff
   14003b3fa:	xor    r8d,r8d
   14003b3fd:	lea    rdx,[rsp+0x48]
   14003b402:	lea    rcx,[rsp+0x70]
   14003b407:	call   0x1400048b8
   14003b40c:	mov    QWORD PTR [rsp+0x20],rbx
   14003b411:	lea    r9,[rsp+0x70]
   14003b416:	mov    r8,rbx
   14003b419:	lea    edx,[rsi+0x5]
   14003b41c:	mov    rcx,rdi
   14003b41f:	call   0x140031400
   14003b424:	nop
   14003b425:	cmp    QWORD PTR [rsp+0x60],0x10
   14003b42b:	jb     0x14003b437
   14003b42d:	mov    rcx,QWORD PTR [rsp+0x48]
   14003b432:	call   0x14002b150
   14003b437:	xor    al,al
   14003b439:	jmp    0x14003bcf4
   14003b43e:	mov    rsi,QWORD PTR [rcx+0x8]
   14003b442:	mov    rax,QWORD PTR [rsi]
   14003b445:	movzx  edx,BYTE PTR [r12]
   14003b44a:	movzx  eax,BYTE PTR [rdx+rax*1+0x4]
   14003b44f:	add    eax,0xffffffef
   14003b452:	cmp    eax,0x27
   14003b455:	ja     0x14003bcee
   14003b45b:	cdqe   
   14003b45d:	lea    r8,[rip+0xfffffffffffc4b9c]        # 0x140000000
   14003b464:	movzx  eax,BYTE PTR [r8+rax*1+0x3bd54]
   14003b46d:	mov    ecx,DWORD PTR [r8+rax*4+0x3bd20]
   14003b475:	add    rcx,r8
   14003b478:	jmp    rcx
   14003b47a:	mov    al,0x7
   14003b47c:	jmp    0x14003bcf1
   14003b481:	mov    al,0x1b
   14003b483:	jmp    0x14003bcf1
   14003b488:	mov    al,0xc
   14003b48a:	jmp    0x14003bcf1
   14003b48f:	mov    al,0xa
   14003b491:	jmp    0x14003bcf1
   14003b496:	mov    al,0xd
   14003b498:	jmp    0x14003bcf1
   14003b49d:	mov    al,0x9
   14003b49f:	jmp    0x14003bcf1
   14003b4a4:	mov    al,0xb
   14003b4a6:	jmp    0x14003bcf1
   14003b4ab:	mov    al,0x8
   14003b4ad:	jmp    0x14003bcf1
   14003b4b2:	inc    r12
   14003b4b5:	mov    QWORD PTR [rbx],r12
   14003b4b8:	cmp    r12,r10
   14003b4bb:	jne    0x14003b579
   14003b4c1:	lea    rdx,[r12-0x1]
   14003b4c6:	mov    QWORD PTR [rbx],rdx
   14003b4c9:	mov    rcx,QWORD PTR [rsi]
   14003b4cc:	movzx  eax,BYTE PTR [rdx]
   14003b4cf:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b4d4:	je     0x14003b4f3
   14003b4d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003b4e0:	dec    rdx
   14003b4e3:	mov    QWORD PTR [rbx],rdx
   14003b4e6:	mov    rcx,QWORD PTR [rsi]
   14003b4e9:	movzx  eax,BYTE PTR [rdx]
   14003b4ec:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b4f1:	jne    0x14003b4e0
   14003b4f3:	mov    QWORD PTR [rbp+0x78],0xf
   14003b4fb:	xor    esi,esi
   14003b4fd:	mov    QWORD PTR [rbp+0x70],rsi
   14003b501:	mov    BYTE PTR [rbp+0x60],sil
   14003b505:	lea    r8d,[rsi+0x2d]
   14003b509:	lea    rdx,[rip+0x13c28]        # 0x14004f138
   14003b510:	lea    rcx,[rbp+0x60]
   14003b514:	call   0x140005154
   14003b519:	nop
   14003b51a:	mov    rbx,QWORD PTR [rbx]
   14003b51d:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b521:	mov    QWORD PTR [rsp+0x60],0xf
   14003b52a:	mov    QWORD PTR [rsp+0x58],rsi
   14003b52f:	mov    BYTE PTR [rsp+0x48],sil
   14003b534:	or     r9,0xffffffffffffffff
   14003b538:	xor    r8d,r8d
   14003b53b:	lea    rdx,[rbp+0x60]
   14003b53f:	lea    rcx,[rsp+0x48]
   14003b544:	call   0x1400048b8
   14003b549:	mov    QWORD PTR [rsp+0x20],rbx
   14003b54e:	lea    r9,[rsp+0x48]
   14003b553:	mov    r8,rbx
   14003b556:	lea    edx,[rsi+0x5]
   14003b559:	mov    rcx,rdi
   14003b55c:	call   0x140031400
   14003b561:	nop
   14003b562:	cmp    QWORD PTR [rbp+0x78],0x10
   14003b567:	jb     0x14003b572
   14003b569:	mov    rcx,QWORD PTR [rbp+0x60]
   14003b56d:	call   0x14002b150
   14003b572:	xor    al,al
   14003b574:	jmp    0x14003bcf4
   14003b579:	movsx  eax,BYTE PTR [r12]
   14003b57e:	and    eax,0x8000001f
   14003b583:	jge    0x14003bcf1
   14003b589:	dec    eax
   14003b58b:	or     eax,0xffffffe0
   14003b58e:	inc    eax
   14003b590:	jmp    0x14003bcf1
   14003b595:	inc    r12
   14003b598:	mov    QWORD PTR [rbx],r12
   14003b59b:	cmp    r12,r10
   14003b59e:	jne    0x14003b659
   14003b5a4:	lea    rdx,[r12-0x1]
   14003b5a9:	mov    QWORD PTR [rbx],rdx
   14003b5ac:	mov    rcx,QWORD PTR [rsi]
   14003b5af:	movzx  eax,BYTE PTR [rdx]
   14003b5b2:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b5b7:	je     0x14003b5d3
   14003b5b9:	nop    DWORD PTR [rax+0x0]
   14003b5c0:	dec    rdx
   14003b5c3:	mov    QWORD PTR [rbx],rdx
   14003b5c6:	mov    rcx,QWORD PTR [rsi]
   14003b5c9:	movzx  eax,BYTE PTR [rdx]
   14003b5cc:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b5d1:	jne    0x14003b5c0
   14003b5d3:	mov    QWORD PTR [rbp-0x50],0xf
   14003b5db:	xor    esi,esi
   14003b5dd:	mov    QWORD PTR [rbp-0x58],rsi
   14003b5e1:	mov    BYTE PTR [rbp-0x68],sil
   14003b5e5:	lea    r8d,[rsi+0x33]
   14003b5e9:	lea    rdx,[rip+0x13b10]        # 0x14004f100
   14003b5f0:	lea    rcx,[rbp-0x68]
   14003b5f4:	call   0x140005154
   14003b5f9:	nop
   14003b5fa:	mov    rbx,QWORD PTR [rbx]
   14003b5fd:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b601:	mov    QWORD PTR [rsp+0x60],0xf
   14003b60a:	mov    QWORD PTR [rsp+0x58],rsi
   14003b60f:	mov    BYTE PTR [rsp+0x48],sil
   14003b614:	or     r9,0xffffffffffffffff
   14003b618:	xor    r8d,r8d
   14003b61b:	lea    rdx,[rbp-0x68]
   14003b61f:	lea    rcx,[rsp+0x48]
   14003b624:	call   0x1400048b8
   14003b629:	mov    QWORD PTR [rsp+0x20],rbx
   14003b62e:	lea    r9,[rsp+0x48]
   14003b633:	mov    r8,rbx
   14003b636:	lea    edx,[rsi+0x5]
   14003b639:	mov    rcx,rdi
   14003b63c:	call   0x140031400
   14003b641:	nop
   14003b642:	cmp    QWORD PTR [rbp-0x50],0x10
   14003b647:	jb     0x14003b652
   14003b649:	mov    rcx,QWORD PTR [rbp-0x68]
   14003b64d:	call   0x14002b150
   14003b652:	xor    al,al
   14003b654:	jmp    0x14003bcf4
   14003b659:	mov    rcx,QWORD PTR [rsi]
   14003b65c:	movzx  eax,BYTE PTR [r12]
   14003b661:	cmp    BYTE PTR [rax+rcx*1+0x4],0xf
   14003b666:	jne    0x14003b82d
   14003b66c:	lea    rdx,[r12+0x1]
   14003b671:	mov    QWORD PTR [rbx],rdx
   14003b674:	cmp    rdx,r10
   14003b677:	jne    0x14003b729
   14003b67d:	dec    rdx
   14003b680:	mov    QWORD PTR [rbx],rdx
   14003b683:	mov    rcx,QWORD PTR [rsi]
   14003b686:	movzx  eax,BYTE PTR [rdx]
   14003b689:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b68e:	je     0x14003b6a3
   14003b690:	dec    rdx
   14003b693:	mov    QWORD PTR [rbx],rdx
   14003b696:	mov    rcx,QWORD PTR [rsi]
   14003b699:	movzx  eax,BYTE PTR [rdx]
   14003b69c:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b6a1:	jne    0x14003b690
   14003b6a3:	mov    QWORD PTR [rbp+0x0],0xf
   14003b6ab:	xor    esi,esi
   14003b6ad:	mov    QWORD PTR [rbp-0x8],rsi
   14003b6b1:	mov    BYTE PTR [rbp-0x18],sil
   14003b6b5:	lea    r8d,[rsi+0x29]
   14003b6b9:	lea    rdx,[rip+0x13a10]        # 0x14004f0d0
   14003b6c0:	lea    rcx,[rbp-0x18]
   14003b6c4:	call   0x140005154
   14003b6c9:	nop
   14003b6ca:	mov    rbx,QWORD PTR [rbx]
   14003b6cd:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b6d1:	mov    QWORD PTR [rsp+0x60],0xf
   14003b6da:	mov    QWORD PTR [rsp+0x58],rsi
   14003b6df:	mov    BYTE PTR [rsp+0x48],sil
   14003b6e4:	or     r9,0xffffffffffffffff
   14003b6e8:	xor    r8d,r8d
   14003b6eb:	lea    rdx,[rbp-0x18]
   14003b6ef:	lea    rcx,[rsp+0x48]
   14003b6f4:	call   0x1400048b8
   14003b6f9:	mov    QWORD PTR [rsp+0x20],rbx
   14003b6fe:	lea    r9,[rsp+0x48]
   14003b703:	mov    r8,rbx
   14003b706:	lea    edx,[rsi+0x5]
   14003b709:	mov    rcx,rdi
   14003b70c:	call   0x140031400
   14003b711:	nop
   14003b712:	cmp    QWORD PTR [rbp+0x0],0x10
   14003b717:	jb     0x14003b722
   14003b719:	mov    rcx,QWORD PTR [rbp-0x18]
   14003b71d:	call   0x14002b150
   14003b722:	xor    al,al
   14003b724:	jmp    0x14003bcf4
   14003b729:	mov    r9,rsi
   14003b72c:	mov    r8d,0x10
   14003b732:	mov    rdx,r10
   14003b735:	mov    rcx,rbx
   14003b738:	call   0x14002eda0
   14003b73d:	mov    r11d,eax
   14003b740:	mov    rdx,QWORD PTR [rbx]
   14003b743:	cmp    rdx,QWORD PTR [rdi+0x58]
   14003b747:	je     0x14003b76b
   14003b749:	cmp    eax,0x7f
   14003b74c:	ja     0x14003b76b
   14003b74e:	mov    rax,QWORD PTR [rdi+0x8]
   14003b752:	mov    rcx,QWORD PTR [rax]
   14003b755:	movzx  eax,BYTE PTR [rdx]
   14003b758:	cmp    BYTE PTR [rax+rcx*1+0x4],0x10
   14003b75d:	jne    0x14003b76b
   14003b75f:	lea    rax,[rdx+0x1]
   14003b763:	mov    QWORD PTR [rbx],rax
   14003b766:	jmp    0x14003b877
   14003b76b:	dec    rdx
   14003b76e:	mov    QWORD PTR [rbx],rdx
   14003b771:	mov    rax,QWORD PTR [rdi+0x8]
   14003b775:	mov    rcx,QWORD PTR [rax]
   14003b778:	movzx  eax,BYTE PTR [rdx]
   14003b77b:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b780:	je     0x14003b7a7
   14003b782:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003b790:	dec    rdx
   14003b793:	mov    QWORD PTR [rbx],rdx
   14003b796:	mov    rax,QWORD PTR [rdi+0x8]
   14003b79a:	mov    rcx,QWORD PTR [rax]
   14003b79d:	movzx  eax,BYTE PTR [rdx]
   14003b7a0:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b7a5:	jne    0x14003b790
   14003b7a7:	mov    QWORD PTR [rbp+0x50],0xf
   14003b7af:	xor    esi,esi
   14003b7b1:	mov    QWORD PTR [rbp+0x48],rsi
   14003b7b5:	mov    BYTE PTR [rbp+0x38],sil
   14003b7b9:	lea    r8d,[rsi+0x28]
   14003b7bd:	lea    rdx,[rip+0x138dc]        # 0x14004f0a0
   14003b7c4:	lea    rcx,[rbp+0x38]
   14003b7c8:	call   0x140005154
   14003b7cd:	nop
   14003b7ce:	mov    rbx,QWORD PTR [rbx]
   14003b7d1:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b7d5:	mov    QWORD PTR [rsp+0x60],0xf
   14003b7de:	mov    QWORD PTR [rsp+0x58],rsi
   14003b7e3:	mov    BYTE PTR [rsp+0x48],sil
   14003b7e8:	or     r9,0xffffffffffffffff
   14003b7ec:	xor    r8d,r8d
   14003b7ef:	lea    rdx,[rbp+0x38]
   14003b7f3:	lea    rcx,[rsp+0x48]
   14003b7f8:	call   0x1400048b8
   14003b7fd:	mov    QWORD PTR [rsp+0x20],rbx
   14003b802:	lea    r9,[rsp+0x48]
   14003b807:	mov    r8,rbx
   14003b80a:	lea    edx,[rsi+0xa]
   14003b80d:	mov    rcx,rdi
   14003b810:	call   0x140031400
   14003b815:	nop
   14003b816:	cmp    QWORD PTR [rbp+0x50],0x10
   14003b81b:	jb     0x14003b826
   14003b81d:	mov    rcx,QWORD PTR [rbp+0x38]
   14003b821:	call   0x14002b150
   14003b826:	xor    al,al
   14003b828:	jmp    0x14003bcf4
   14003b82d:	sub    r10,r12
   14003b830:	mov    QWORD PTR [rsp+0x38],r10
   14003b835:	mov    QWORD PTR [rsp+0x30],0x2
   14003b83e:	lea    rax,[rsp+0x38]
   14003b843:	lea    rcx,[rsp+0x30]
   14003b848:	cmp    r10,0x2
   14003b84c:	cmovge rax,rcx
   14003b850:	mov    rax,QWORD PTR [rax]
   14003b853:	lea    rdx,[r12+rax*1]
   14003b857:	mov    r9,rsi
   14003b85a:	mov    r8d,0x10
   14003b860:	mov    rcx,rbx
   14003b863:	call   0x14002eda0
   14003b868:	test   eax,eax
   14003b86a:	js     0x14003b880
   14003b86c:	test   eax,0xffffff00
   14003b871:	jne    0x14003b880
   14003b873:	movzx  r11d,al
   14003b877:	movzx  eax,r11b
   14003b87b:	jmp    0x14003bcf4
   14003b880:	dec    QWORD PTR [rbx]
   14003b883:	mov    rdx,QWORD PTR [rbx]
   14003b886:	mov    rax,QWORD PTR [rdi+0x8]
   14003b88a:	mov    rcx,QWORD PTR [rax]
   14003b88d:	movzx  eax,BYTE PTR [rdx]
   14003b890:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b895:	je     0x14003b8b7
   14003b897:	nop    WORD PTR [rax+rax*1+0x0]
   14003b8a0:	dec    rdx
   14003b8a3:	mov    QWORD PTR [rbx],rdx
   14003b8a6:	mov    rax,QWORD PTR [rdi+0x8]
   14003b8aa:	mov    rcx,QWORD PTR [rax]
   14003b8ad:	movzx  eax,BYTE PTR [rdx]
   14003b8b0:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b8b5:	jne    0x14003b8a0
   14003b8b7:	mov    QWORD PTR [rbp-0x28],0xf
   14003b8bf:	xor    esi,esi
   14003b8c1:	mov    QWORD PTR [rbp-0x30],rsi
   14003b8c5:	mov    BYTE PTR [rbp-0x40],sil
   14003b8c9:	lea    r8d,[rsi+0x31]
   14003b8cd:	lea    rdx,[rip+0x13794]        # 0x14004f068
   14003b8d4:	lea    rcx,[rbp-0x40]
   14003b8d8:	call   0x140005154
   14003b8dd:	nop
   14003b8de:	mov    rbx,QWORD PTR [rbx]
   14003b8e1:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b8e5:	mov    QWORD PTR [rsp+0x60],0xf
   14003b8ee:	mov    QWORD PTR [rsp+0x58],rsi
   14003b8f3:	mov    BYTE PTR [rsp+0x48],sil
   14003b8f8:	or     r9,0xffffffffffffffff
   14003b8fc:	xor    r8d,r8d
   14003b8ff:	lea    rdx,[rbp-0x40]
   14003b903:	lea    rcx,[rsp+0x48]
   14003b908:	call   0x1400048b8
   14003b90d:	mov    QWORD PTR [rsp+0x20],rbx
   14003b912:	lea    r9,[rsp+0x48]
   14003b917:	mov    r8,rbx
   14003b91a:	lea    edx,[rsi+0x5]
   14003b91d:	mov    rcx,rdi
   14003b920:	call   0x140031400
   14003b925:	nop
   14003b926:	cmp    QWORD PTR [rbp-0x28],0x10
   14003b92b:	jb     0x14003b936
   14003b92d:	mov    rcx,QWORD PTR [rbp-0x40]
   14003b931:	call   0x14002b150
   14003b936:	xor    al,al
   14003b938:	jmp    0x14003bcf4
   14003b93d:	mov    QWORD PTR [rsp+0x30],0x4
   14003b946:	sub    r10,r12
   14003b949:	mov    QWORD PTR [rsp+0x38],r10
   14003b94e:	lea    rax,[rsp+0x30]
   14003b953:	lea    rcx,[rsp+0x38]
   14003b958:	cmp    r10,0x4
   14003b95c:	cmovle rax,rcx
   14003b960:	mov    r13,QWORD PTR [rax]
   14003b963:	mov    QWORD PTR [rsp+0x30],r12
   14003b968:	lea    rdx,[r12+0x1]
   14003b96d:	mov    r9,rsi
   14003b970:	mov    r8d,0x8
   14003b976:	lea    rcx,[rsp+0x30]
   14003b97b:	call   0x14002eda0
   14003b980:	test   eax,eax
   14003b982:	je     0x14003ba39
   14003b988:	lea    rdx,[r12-0x1]
   14003b98d:	mov    QWORD PTR [rbx],rdx
   14003b990:	mov    rcx,QWORD PTR [rsi]
   14003b993:	movzx  eax,BYTE PTR [rdx]
   14003b996:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b99b:	je     0x14003b9b3
   14003b99d:	nop    DWORD PTR [rax]
   14003b9a0:	dec    rdx
   14003b9a3:	mov    QWORD PTR [rbx],rdx
   14003b9a6:	mov    rcx,QWORD PTR [rsi]
   14003b9a9:	movzx  eax,BYTE PTR [rdx]
   14003b9ac:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003b9b1:	jne    0x14003b9a0
   14003b9b3:	mov    QWORD PTR [rbp+0x28],0xf
   14003b9bb:	xor    esi,esi
   14003b9bd:	mov    QWORD PTR [rbp+0x20],rsi
   14003b9c1:	mov    BYTE PTR [rbp+0x10],sil
   14003b9c5:	lea    r8d,[rsi+0x1e]
   14003b9c9:	lea    rdx,[rip+0x13678]        # 0x14004f048
   14003b9d0:	lea    rcx,[rbp+0x10]
   14003b9d4:	call   0x140005154
   14003b9d9:	nop
   14003b9da:	mov    rbx,QWORD PTR [rbx]
   14003b9dd:	sub    rbx,QWORD PTR [rdi+0x50]
   14003b9e1:	mov    QWORD PTR [rsp+0x60],0xf
   14003b9ea:	mov    QWORD PTR [rsp+0x58],rsi
   14003b9ef:	mov    BYTE PTR [rsp+0x48],sil
   14003b9f4:	or     r9,0xffffffffffffffff
   14003b9f8:	xor    r8d,r8d
   14003b9fb:	lea    rdx,[rbp+0x10]
   14003b9ff:	lea    rcx,[rsp+0x48]
   14003ba04:	call   0x1400048b8
   14003ba09:	mov    QWORD PTR [rsp+0x20],rbx
   14003ba0e:	lea    r9,[rsp+0x48]
   14003ba13:	mov    r8,rbx
   14003ba16:	lea    edx,[rsi+0x5]
   14003ba19:	mov    rcx,rdi
   14003ba1c:	call   0x140031400
   14003ba21:	nop
   14003ba22:	cmp    QWORD PTR [rbp+0x28],0x10
   14003ba27:	jb     0x14003ba32
   14003ba29:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ba2d:	call   0x14002b150
   14003ba32:	xor    al,al
   14003ba34:	jmp    0x14003bcf4
   14003ba39:	lea    rdx,[r12+r13*1]
   14003ba3d:	mov    r9,rsi
   14003ba40:	mov    r8d,0x8
   14003ba46:	mov    rcx,rbx
   14003ba49:	call   0x14002eda0
   14003ba4e:	test   eax,eax
   14003ba50:	jns    0x14003bcf4
   14003ba56:	dec    QWORD PTR [rbx]
   14003ba59:	mov    rdx,QWORD PTR [rbx]
   14003ba5c:	mov    rax,QWORD PTR [rdi+0x8]
   14003ba60:	mov    rcx,QWORD PTR [rax]
   14003ba63:	movzx  eax,BYTE PTR [rdx]
   14003ba66:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003ba6b:	je     0x14003ba87
   14003ba6d:	nop    DWORD PTR [rax]
   14003ba70:	dec    rdx
   14003ba73:	mov    QWORD PTR [rbx],rdx
   14003ba76:	mov    rax,QWORD PTR [rdi+0x8]
   14003ba7a:	mov    rcx,QWORD PTR [rax]
   14003ba7d:	movzx  eax,BYTE PTR [rdx]
   14003ba80:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003ba85:	jne    0x14003ba70
   14003ba87:	mov    QWORD PTR [rbp-0x78],0xf
   14003ba8f:	xor    esi,esi
   14003ba91:	mov    QWORD PTR [rbp-0x80],rsi
   14003ba95:	mov    BYTE PTR [rsp+0x70],sil
   14003ba9a:	lea    r8d,[rsi+0x21]
   14003ba9e:	lea    rdx,[rip+0x1357b]        # 0x14004f020
   14003baa5:	lea    rcx,[rsp+0x70]
   14003baaa:	call   0x140005154
   14003baaf:	nop
   14003bab0:	mov    rbx,QWORD PTR [rbx]
   14003bab3:	sub    rbx,QWORD PTR [rdi+0x50]
   14003bab7:	mov    QWORD PTR [rsp+0x60],0xf
   14003bac0:	mov    QWORD PTR [rsp+0x58],rsi
   14003bac5:	mov    BYTE PTR [rsp+0x48],sil
   14003baca:	or     r9,0xffffffffffffffff
   14003bace:	xor    r8d,r8d
   14003bad1:	lea    rdx,[rsp+0x70]
   14003bad6:	lea    rcx,[rsp+0x48]
   14003badb:	call   0x1400048b8
   14003bae0:	mov    QWORD PTR [rsp+0x20],rbx
   14003bae5:	lea    r9,[rsp+0x48]
   14003baea:	mov    r8,rbx
   14003baed:	lea    edx,[rsi+0x5]
   14003baf0:	mov    rcx,rdi
   14003baf3:	call   0x140031400
   14003baf8:	nop
   14003baf9:	cmp    QWORD PTR [rbp-0x78],0x10
   14003bafe:	jb     0x14003bb0a
   14003bb00:	mov    rcx,QWORD PTR [rsp+0x70]
   14003bb05:	call   0x14002b150
   14003bb0a:	xor    al,al
   14003bb0c:	jmp    0x14003bcf4
   14003bb11:	lea    rdx,[r12+0x1]
   14003bb16:	mov    QWORD PTR [rbx],rdx
   14003bb19:	cmp    rdx,r10
   14003bb1c:	jne    0x14003bb72
   14003bb1e:	lea    r8,[rdx-0x1]
   14003bb22:	mov    QWORD PTR [rbx],r8
   14003bb25:	movzx  ecx,BYTE PTR [r8]
   14003bb29:	mov    rax,QWORD PTR [rsi]
   14003bb2c:	cmp    BYTE PTR [rcx+rax*1+0x4],0xc
   14003bb31:	je     0x14003bb57
   14003bb33:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003bb40:	dec    r8
   14003bb43:	mov    QWORD PTR [rbx],r8
   14003bb46:	movzx  edx,BYTE PTR [r8]
   14003bb4a:	mov    rax,rsi
   14003bb4d:	mov    rcx,QWORD PTR [rsi]
   14003bb50:	cmp    BYTE PTR [rdx+rcx*1+0x4],0xc
   14003bb55:	jne    0x14003bb40
   14003bb57:	mov    r8,QWORD PTR [rbx]
   14003bb5a:	sub    r8,QWORD PTR [rdi+0x50]
   14003bb5e:	mov    edx,0x5
   14003bb63:	mov    rcx,rdi
   14003bb66:	call   0x1400322b0
   14003bb6b:	xor    al,al
   14003bb6d:	jmp    0x14003bcf4
   14003bb72:	mov    rcx,QWORD PTR [rsi]
   14003bb75:	movzx  eax,BYTE PTR [rdx]
   14003bb78:	cmp    BYTE PTR [rax+rcx*1+0x4],0xf
   14003bb7d:	jne    0x14003bc9d
   14003bb83:	mov    r8,rdx
   14003bb86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003bb90:	mov    rcx,QWORD PTR [rsi]
   14003bb93:	movzx  eax,BYTE PTR [rdx]
   14003bb96:	cmp    BYTE PTR [rax+rcx*1+0x4],0x10
   14003bb9b:	je     0x14003bba8
   14003bb9d:	inc    rdx
   14003bba0:	mov    QWORD PTR [rbx],rdx
   14003bba3:	cmp    rdx,r10
   14003bba6:	jne    0x14003bb90
   14003bba8:	mov    r9,QWORD PTR [rbx]
   14003bbab:	cmp    r9,r10
   14003bbae:	jne    0x14003bbec
   14003bbb0:	lea    r8,[r9-0x1]
   14003bbb4:	mov    QWORD PTR [rbx],r8
   14003bbb7:	movzx  ecx,BYTE PTR [r8]
   14003bbbb:	mov    rax,QWORD PTR [rsi]
   14003bbbe:	cmp    BYTE PTR [rcx+rax*1+0x4],0xc
   14003bbc3:	je     0x14003bb5a
   14003bbc5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003bbd0:	dec    r8
   14003bbd3:	mov    QWORD PTR [rbx],r8
   14003bbd6:	movzx  edx,BYTE PTR [r8]
   14003bbda:	mov    rax,rsi
   14003bbdd:	mov    rcx,QWORD PTR [rsi]
   14003bbe0:	cmp    BYTE PTR [rdx+rcx*1+0x4],0xc
   14003bbe5:	jne    0x14003bbd0
   14003bbe7:	jmp    0x14003bb5a
   14003bbec:	inc    r8
   14003bbef:	lea    rax,[r9+0x1]
   14003bbf3:	mov    QWORD PTR [rbx],rax
   14003bbf6:	lea    rdx,[rsp+0x48]
   14003bbfb:	mov    rcx,rsi
   14003bbfe:	call   0x1400380b0
   14003bc03:	nop
   14003bc04:	mov    rax,QWORD PTR [rsp+0x58]
   14003bc09:	test   rax,rax
   14003bc0c:	jne    0x14003bc5f
   14003bc0e:	dec    QWORD PTR [rbx]
   14003bc11:	mov    r8,QWORD PTR [rbx]
   14003bc14:	mov    rax,QWORD PTR [rdi+0x8]
   14003bc18:	mov    rcx,QWORD PTR [rax]
   14003bc1b:	movzx  eax,BYTE PTR [r8]
   14003bc1f:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003bc24:	je     0x14003bc48
   14003bc26:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003bc30:	dec    r8
   14003bc33:	mov    QWORD PTR [rbx],r8
   14003bc36:	mov    rax,QWORD PTR [rdi+0x8]
   14003bc3a:	mov    rcx,QWORD PTR [rax]
   14003bc3d:	movzx  eax,BYTE PTR [r8]
   14003bc41:	cmp    BYTE PTR [rax+rcx*1+0x4],0xc
   14003bc46:	jne    0x14003bc30
   14003bc48:	sub    r8,QWORD PTR [rdi+0x50]
   14003bc4c:	mov    edx,0x3
   14003bc51:	mov    rcx,rdi
   14003bc54:	call   0x1400322b0
   14003bc59:	nop
   14003bc5a:	jmp    0x14003b425
   14003bc5f:	cmp    rax,0x1
   14003bc63:	jne    0x14003bc8b
   14003bc65:	lea    rdx,[rsp+0x48]
   14003bc6a:	mov    rcx,QWORD PTR [rsp+0x48]
   14003bc6f:	mov    rax,QWORD PTR [rsp+0x60]
   14003bc74:	cmp    rax,0x10
   14003bc78:	cmovae rdx,rcx
   14003bc7c:	movzx  ebx,BYTE PTR [rdx]
   14003bc7f:	jb     0x14003bc86
   14003bc81:	call   0x14002b150
   14003bc86:	movzx  eax,bl
   14003bc89:	jmp    0x14003bcf4
   14003bc8b:	cmp    QWORD PTR [rsp+0x60],0x10
   14003bc91:	jb     0x14003bc9d
   14003bc93:	mov    rcx,QWORD PTR [rsp+0x48]
   14003bc98:	call   0x14002b150
   14003bc9d:	dec    QWORD PTR [rbx]
   14003bca0:	mov    r8,QWORD PTR [rbx]
   14003bca3:	movzx  edx,BYTE PTR [r8]
   14003bca7:	mov    rax,QWORD PTR [rdi+0x8]
   14003bcab:	mov    rcx,QWORD PTR [rax]
   14003bcae:	cmp    BYTE PTR [rdx+rcx*1+0x4],0xc
   14003bcb3:	je     0x14003bcd8
   14003bcb5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003bcc0:	dec    r8
   14003bcc3:	mov    QWORD PTR [rbx],r8
   14003bcc6:	movzx  edx,BYTE PTR [r8]
   14003bcca:	mov    rax,QWORD PTR [rdi+0x8]
   14003bcce:	mov    rcx,QWORD PTR [rax]
   14003bcd1:	cmp    BYTE PTR [rdx+rcx*1+0x4],0xc
   14003bcd6:	jne    0x14003bcc0
   14003bcd8:	sub    r8,QWORD PTR [rdi+0x50]
   14003bcdc:	mov    edx,0x5
   14003bce1:	mov    rcx,rdi
   14003bce4:	call   0x1400322b0
   14003bce9:	jmp    0x14003b437
   14003bcee:	movzx  eax,dl
   14003bcf1:	inc    QWORD PTR [rbx]
   14003bcf4:	mov    rcx,QWORD PTR [rbp+0x88]
   14003bcfb:	xor    rcx,rsp
   14003bcfe:	call   0x14002b100
   14003bd03:	lea    r11,[rsp+0x190]
   14003bd0b:	mov    rbx,QWORD PTR [r11+0x28]
   14003bd0f:	mov    rsi,QWORD PTR [r11+0x30]
   14003bd13:	mov    rdi,QWORD PTR [r11+0x38]
   14003bd17:	mov    rsp,r11
   14003bd1a:	pop    r13
   14003bd1c:	pop    r12
   14003bd1e:	pop    rbp
   14003bd1f:	ret    
   14003bd20:	cmp    eax,0xab0003b9
   14003bd25:	mov    ah,0x3
   14003bd27:	add    BYTE PTR [rdx-0x4c],bh
   14003bd2a:	add    eax,DWORD PTR [rax]
   14003bd2c:	mov    BYTE PTR [rbx+rax*1+0x3b48f00],dh
   14003bd33:	add    BYTE PTR [rsi-0x62fffc4c],dl
   14003bd39:	mov    ah,0x3
   14003bd3b:	add    BYTE PTR [rsp+rsi*4-0x4a6afffd],ah
   14003bd42:	add    eax,DWORD PTR [rax]
   14003bd44:	mov    dl,0xb4
   14003bd46:	add    eax,DWORD PTR [rax]
   14003bd48:	xor    DWORD PTR [rbx+rax*1+0x3bb1100],0x3bcee00
   14003bd53:	add    BYTE PTR [rax],al
   14003bd55:	add    DWORD PTR [rsp+rcx*1],ecx
   14003bd58:	or     al,0xc
   14003bd5a:	or     al,0xc
   14003bd5c:	or     al,0xc
   14003bd5e:	or     al,0x2
   14003bd60:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003bd67:	or     al,0xc
   14003bd69:	or     cl,BYTE PTR [rsp+rcx*1]
   14003bd6c:	or     al,0xc
   14003bd6e:	or     al,0xc
   14003bd70:	or     al,0xc
   14003bd72:	or     al,0xc
   14003bd74:	or     al,0xc
   14003bd76:	or     al,0xc
   14003bd78:	or     al,0xc
   14003bd7a:	or     al,0xb
   14003bd7c:	int3   
   14003bd7d:	int3   
   14003bd7e:	int3   
   14003bd7f:	int3   
   14003bd80:	mov    QWORD PTR [rsp+0x8],rbx
   14003bd85:	mov    QWORD PTR [rsp+0x10],rbp
   14003bd8a:	mov    QWORD PTR [rsp+0x18],rsi
   14003bd8f:	push   rdi
   14003bd90:	sub    rsp,0x20
   14003bd94:	mov    rbp,rdx
   14003bd97:	mov    r9,rdx
   14003bd9a:	mov    rdx,QWORD PTR [rcx+0x28]
   14003bd9e:	mov    rsi,r8
   14003bda1:	mov    rdi,rcx
   14003bda4:	mov    r8d,0x1
   14003bdaa:	add    rcx,0x20
   14003bdae:	call   0x1400348c0
   14003bdb3:	mov    rdx,QWORD PTR [rdi+0x28]
   14003bdb7:	lea    rcx,[rdi+0x20]
   14003bdbb:	mov    r9,rsi
   14003bdbe:	mov    r8d,0x1
   14003bdc4:	call   0x1400348c0
   14003bdc9:	cmp    BYTE PTR [rbp+0x1],0x0
   14003bdcd:	je     0x14003bdf6
   14003bdcf:	mov    rdx,QWORD PTR [rdi+0x8]
   14003bdd3:	mov    r9,rbp
   14003bdd6:	mov    r8d,0x1
   14003bddc:	mov    rcx,rdi
   14003bddf:	mov    BYTE PTR [rdi+0x41],0x1
   14003bde3:	call   0x1400348c0
   14003bde8:	cmp    BYTE PTR [rbp+0x1],0x0
   14003bdec:	je     0x14003bdf2
   14003bdee:	mov    BYTE PTR [rdi+0x41],0x1
   14003bdf2:	mov    BYTE PTR [rdi+0x4c],0x0
   14003bdf6:	cmp    BYTE PTR [rsi+0x1],0x0
   14003bdfa:	je     0x14003be23
   14003bdfc:	mov    rdx,QWORD PTR [rdi+0x8]
   14003be00:	mov    r9,rsi
   14003be03:	mov    r8d,0x1
   14003be09:	mov    rcx,rdi
   14003be0c:	mov    BYTE PTR [rdi+0x41],0x1
   14003be10:	call   0x1400348c0
   14003be15:	cmp    BYTE PTR [rsi+0x1],0x0
   14003be19:	je     0x14003be1f
   14003be1b:	mov    BYTE PTR [rdi+0x41],0x1
   14003be1f:	mov    BYTE PTR [rdi+0x4c],0x0
   14003be23:	mov    rbx,QWORD PTR [rsp+0x30]
   14003be28:	mov    rbp,QWORD PTR [rsp+0x38]
   14003be2d:	mov    rsi,QWORD PTR [rsp+0x40]
   14003be32:	mov    BYTE PTR [rdi+0x4c],0x0
   14003be36:	add    rsp,0x20
   14003be3a:	pop    rdi
   14003be3b:	ret    
   14003be3c:	int3   
   14003be3d:	int3   
   14003be3e:	int3   
   14003be3f:	int3   
   14003be40:	mov    QWORD PTR [rsp+0x10],rbx
   14003be45:	mov    QWORD PTR [rsp+0x20],r9
   14003be4a:	mov    QWORD PTR [rsp+0x18],r8
   14003be4f:	push   rdi
   14003be50:	sub    rsp,0x20
   14003be54:	mov    rdi,rdx
   14003be57:	mov    rdx,QWORD PTR [rcx+0x8]
   14003be5b:	mov    rbx,rcx
   14003be5e:	cmp    r8,QWORD PTR [rdx]
   14003be61:	jne    0x14003bea8
   14003be63:	cmp    r9,rdx
   14003be66:	jne    0x14003bea8
   14003be68:	mov    rdx,QWORD PTR [rdx+0x8]
   14003be6c:	call   0x140035250
   14003be71:	mov    r11,QWORD PTR [rbx+0x8]
   14003be75:	mov    QWORD PTR [r11+0x8],r11
   14003be79:	mov    rax,QWORD PTR [rbx+0x8]
   14003be7d:	mov    QWORD PTR [rax],rax
   14003be80:	mov    rax,QWORD PTR [rbx+0x8]
   14003be84:	mov    QWORD PTR [rax+0x10],rax
   14003be88:	mov    rax,QWORD PTR [rbx+0x8]
   14003be8c:	mov    QWORD PTR [rbx+0x10],0x0
   14003be94:	mov    rcx,QWORD PTR [rax]
   14003be97:	mov    rax,rdi
   14003be9a:	mov    QWORD PTR [rdi],rcx
   14003be9d:	mov    rbx,QWORD PTR [rsp+0x38]
   14003bea2:	add    rsp,0x20
   14003bea6:	pop    rdi
   14003bea7:	ret    
   14003bea8:	cmp    r8,r9
   14003beab:	je     0x14003bf29
   14003bead:	nop    DWORD PTR [rax]
   14003beb0:	cmp    BYTE PTR [r8+0x49],0x0
   14003beb5:	mov    rax,r8
   14003beb8:	jne    0x14003bf0d
   14003beba:	mov    rdx,QWORD PTR [r8+0x10]
   14003bebe:	cmp    BYTE PTR [rdx+0x49],0x0
   14003bec2:	jne    0x14003bee3
   14003bec4:	mov    rcx,QWORD PTR [rdx]
   14003bec7:	cmp    BYTE PTR [rcx+0x49],0x0
   14003becb:	jne    0x14003bedc
   14003becd:	nop    DWORD PTR [rax]
   14003bed0:	mov    rdx,rcx
   14003bed3:	mov    rcx,QWORD PTR [rcx]
   14003bed6:	cmp    BYTE PTR [rcx+0x49],0x0
   14003beda:	je     0x14003bed0
   14003bedc:	mov    QWORD PTR [rsp+0x40],rdx
   14003bee1:	jmp    0x14003bf0d
   14003bee3:	mov    rcx,QWORD PTR [r8+0x8]
   14003bee7:	cmp    BYTE PTR [rcx+0x49],0x0
   14003beeb:	jne    0x14003bf08
   14003beed:	nop    DWORD PTR [rax]
   14003bef0:	cmp    r8,QWORD PTR [rcx+0x10]
   14003bef4:	jne    0x14003bf08
   14003bef6:	mov    QWORD PTR [rsp+0x40],rcx
   14003befb:	mov    r8,rcx
   14003befe:	mov    rcx,QWORD PTR [rcx+0x8]
   14003bf02:	cmp    BYTE PTR [rcx+0x49],0x0
   14003bf06:	je     0x14003bef0
   14003bf08:	mov    QWORD PTR [rsp+0x40],rcx
   14003bf0d:	lea    rdx,[rsp+0x30]
   14003bf12:	mov    r8,rax
   14003bf15:	mov    rcx,rbx
   14003bf18:	call   0x140034b50
   14003bf1d:	mov    r8,QWORD PTR [rsp+0x40]
   14003bf22:	cmp    r8,QWORD PTR [rsp+0x48]
   14003bf27:	jne    0x14003beb0
   14003bf29:	mov    rbx,QWORD PTR [rsp+0x38]
   14003bf2e:	mov    QWORD PTR [rdi],r8
   14003bf31:	mov    rax,rdi
   14003bf34:	add    rsp,0x20
   14003bf38:	pop    rdi
   14003bf39:	ret    
   14003bf3a:	int3   
   14003bf3b:	int3   
   14003bf3c:	int3   
   14003bf3d:	int3   
   14003bf3e:	int3   
   14003bf3f:	int3   
   14003bf40:	mov    rax,rsp
   14003bf43:	push   rdi
   14003bf44:	sub    rsp,0x60
   14003bf48:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003bf51:	mov    QWORD PTR [rax+0x18],rbx
   14003bf55:	mov    QWORD PTR [rax+0x20],rsi
   14003bf59:	mov    rax,QWORD PTR [rip+0x2c290]        # 0x1400681f0
   14003bf60:	xor    rax,rsp
   14003bf63:	mov    QWORD PTR [rsp+0x50],rax
   14003bf68:	mov    rdi,rdx
   14003bf6b:	mov    rbx,rcx
   14003bf6e:	mov    r11,QWORD PTR [rcx+0x8]
   14003bf72:	mov    rax,QWORD PTR [r11]
   14003bf75:	mov    rsi,QWORD PTR [rcx+0x60]
   14003bf79:	movzx  ecx,BYTE PTR [rsi]
   14003bf7c:	movzx  edx,BYTE PTR [rcx+rax*1+0x4]
   14003bf81:	cmp    dl,0x9
   14003bf84:	je     0x14003c01c
   14003bf8a:	cmp    dl,0xc
   14003bf8d:	je     0x14003bff2
   14003bf8f:	cmp    dl,0xe
   14003bf92:	je     0x14003bf9e
   14003bf94:	lea    rax,[rsi+0x1]
   14003bf98:	mov    QWORD PTR [rbx+0x60],rax
   14003bf9c:	jmp    0x14003c011
   14003bf9e:	cmp    BYTE PTR [r8+0x4c],0x0
   14003bfa3:	jne    0x14003bfd9
   14003bfa5:	lea    r8,[rsi+0x1]
   14003bfa9:	mov    QWORD PTR [rbx+0x60],r8
   14003bfad:	cmp    r8,QWORD PTR [rbx+0x58]
   14003bfb1:	je     0x14003bfcb
   14003bfb3:	movzx  ecx,BYTE PTR [r8]
   14003bfb7:	mov    rax,QWORD PTR [r11]
   14003bfba:	cmp    BYTE PTR [rcx+rax*1+0x4],0xa
   14003bfbf:	jne    0x14003bfcb
   14003bfc1:	lea    rax,[r8-0x1]
   14003bfc5:	mov    QWORD PTR [rbx+0x60],rax
   14003bfc9:	jmp    0x14003bfd9
   14003bfcb:	sub    r8,QWORD PTR [rbx+0x50]
   14003bfcf:	mov    edx,0xb
   14003bfd4:	jmp    0x14003c17c
   14003bfd9:	mov    rax,QWORD PTR [rbx+0x60]
   14003bfdd:	movzx  ecx,BYTE PTR [rax]
   14003bfe0:	inc    rax
   14003bfe3:	mov    QWORD PTR [rbx+0x60],rax
   14003bfe7:	mov    BYTE PTR [rdi],cl
   14003bfe9:	mov    BYTE PTR [rdi+0x1],0x0
   14003bfed:	jmp    0x14003c189
   14003bff2:	mov    rax,QWORD PTR [rbx]
   14003bff5:	test   DWORD PTR [rax+0x30],0x10000
   14003bffc:	lea    rax,[rsi+0x1]
   14003c000:	mov    QWORD PTR [rbx+0x60],rax
   14003c004:	jne    0x14003c011
   14003c006:	mov    rcx,rbx
   14003c009:	call   0x14003b360
   14003c00e:	movzx  ecx,al
   14003c011:	mov    BYTE PTR [rdi],cl
   14003c013:	mov    BYTE PTR [rdi+0x1],0x0
   14003c017:	jmp    0x14003c189
   14003c01c:	inc    rsi
   14003c01f:	mov    QWORD PTR [rbx+0x60],rsi
   14003c023:	mov    r8,QWORD PTR [rbx+0x58]
   14003c027:	cmp    r8,rsi
   14003c02a:	je     0x14003c170
   14003c030:	mov    rcx,QWORD PTR [r11]
   14003c033:	movzx  eax,BYTE PTR [rsi]
   14003c036:	cmp    BYTE PTR [rax+rcx*1+0x4],0x5
   14003c03b:	je     0x14003c05a
   14003c03d:	lea    rax,[rsi-0x1]
   14003c041:	mov    QWORD PTR [rbx+0x60],rax
   14003c045:	movzx  ecx,BYTE PTR [rax]
   14003c048:	inc    rax
   14003c04b:	mov    QWORD PTR [rbx+0x60],rax
   14003c04f:	mov    BYTE PTR [rdi],cl
   14003c051:	mov    BYTE PTR [rdi+0x1],0x0
   14003c055:	jmp    0x14003c189
   14003c05a:	inc    rsi
   14003c05d:	mov    QWORD PTR [rbx+0x60],rsi
   14003c061:	cmp    r8,rsi
   14003c064:	je     0x14003c170
   14003c06a:	lea    rax,[rsi+0x1]
   14003c06e:	mov    QWORD PTR [rbx+0x60],rax
   14003c072:	cmp    r8,rax
   14003c075:	je     0x14003c170
   14003c07b:	nop    DWORD PTR [rax+rax*1+0x0]
   14003c080:	mov    rcx,QWORD PTR [r11]
   14003c083:	mov    rdx,QWORD PTR [rbx+0x60]
   14003c087:	movzx  eax,BYTE PTR [rdx]
   14003c08a:	cmp    BYTE PTR [rax+rcx*1+0x4],0x5
   14003c08f:	je     0x14003c09e
   14003c091:	lea    rax,[rdx+0x1]
   14003c095:	mov    QWORD PTR [rbx+0x60],rax
   14003c099:	cmp    rax,r8
   14003c09c:	jne    0x14003c080
   14003c09e:	mov    r9,QWORD PTR [rbx+0x60]
   14003c0a2:	cmp    r8,r9
   14003c0a5:	je     0x14003c170
   14003c0ab:	lea    r10,[r9+0x1]
   14003c0af:	mov    QWORD PTR [rbx+0x60],r10
   14003c0b3:	cmp    r8,r10
   14003c0b6:	je     0x14003c170
   14003c0bc:	mov    rdx,QWORD PTR [r11]
   14003c0bf:	movzx  eax,BYTE PTR [r10]
   14003c0c3:	cmp    BYTE PTR [rax+rdx*1+0x4],0xa
   14003c0c8:	jne    0x14003c170
   14003c0ce:	lea    rax,[r10+0x1]
   14003c0d2:	mov    QWORD PTR [rbx+0x60],rax
   14003c0d6:	mov    r8,rsi
   14003c0d9:	lea    rdx,[rsp+0x28]
   14003c0de:	mov    rcx,r11
   14003c0e1:	call   0x1400380b0
   14003c0e6:	nop
   14003c0e7:	mov    r8,QWORD PTR [rsp+0x38]
   14003c0ec:	test   r8,r8
   14003c0ef:	je     0x14003c143
   14003c0f1:	cmp    r8,0x2
   14003c0f5:	ja     0x14003c143
   14003c0f7:	lea    rax,[rsp+0x28]
   14003c0fc:	mov    rcx,QWORD PTR [rsp+0x28]
   14003c101:	mov    rdx,QWORD PTR [rsp+0x40]
   14003c106:	cmp    rdx,0x10
   14003c10a:	cmovae rax,rcx
   14003c10e:	movzx  r9d,BYTE PTR [rax]
   14003c112:	cmp    r8,0x1
   14003c116:	jbe    0x14003c12c
   14003c118:	lea    rax,[rsp+0x28]
   14003c11d:	cmp    rdx,0x10
   14003c121:	cmovae rax,rcx
   14003c125:	movzx  r8d,BYTE PTR [rax+0x1]
   14003c12a:	jmp    0x14003c12f
   14003c12c:	xor    r8b,r8b
   14003c12f:	mov    BYTE PTR [rdi],r9b
   14003c132:	mov    BYTE PTR [rdi+0x1],r8b
   14003c136:	cmp    rdx,0x10
   14003c13a:	jb     0x14003c189
   14003c13c:	call   0x14002b150
   14003c141:	jmp    0x14003c189
   14003c143:	sub    rsi,QWORD PTR [rbx+0x50]
   14003c147:	mov    r8,rsi
   14003c14a:	mov    edx,0x3
   14003c14f:	mov    rcx,rbx
   14003c152:	call   0x1400322b0
   14003c157:	mov    WORD PTR [rdi],0x0
   14003c15c:	cmp    QWORD PTR [rsp+0x40],0x10
   14003c162:	jb     0x14003c189
   14003c164:	mov    rcx,QWORD PTR [rsp+0x28]
   14003c169:	call   0x14002b150
   14003c16e:	jmp    0x14003c189
   14003c170:	sub    rsi,QWORD PTR [rbx+0x50]
   14003c174:	mov    r8,rsi
   14003c177:	mov    edx,0x3
   14003c17c:	mov    rcx,rbx
   14003c17f:	call   0x1400322b0
   14003c184:	mov    WORD PTR [rdi],0x0
   14003c189:	mov    rax,rdi
   14003c18c:	mov    rcx,QWORD PTR [rsp+0x50]
   14003c191:	xor    rcx,rsp
   14003c194:	call   0x14002b100
   14003c199:	lea    r11,[rsp+0x60]
   14003c19e:	mov    rbx,QWORD PTR [r11+0x20]
   14003c1a2:	mov    rsi,QWORD PTR [r11+0x28]
   14003c1a6:	mov    rsp,r11
   14003c1a9:	pop    rdi
   14003c1aa:	ret    
   14003c1ab:	int3   
   14003c1ac:	int3   
   14003c1ad:	int3   
   14003c1ae:	int3   
   14003c1af:	int3   
   14003c1b0:	rex push rbx
   14003c1b2:	sub    rsp,0x30
   14003c1b6:	mov    rax,QWORD PTR [rcx+0x20]
   14003c1ba:	mov    rbx,rcx
   14003c1bd:	cmp    QWORD PTR [rcx+0x28],rax
   14003c1c1:	je     0x14003c210
   14003c1c3:	mov    rcx,QWORD PTR [rcx+0x48]
   14003c1c7:	movzx  eax,BYTE PTR [rbx+0x78]
   14003c1cb:	mov    r9,QWORD PTR [rbx+0x58]
   14003c1cf:	mov    r8,QWORD PTR [rbx+0x20]
   14003c1d3:	mov    rdx,QWORD PTR [rbx+0x28]
   14003c1d7:	mov    BYTE PTR [rsp+0x28],al
   14003c1db:	mov    rax,QWORD PTR [rcx]
   14003c1de:	lea    rcx,[rsp+0x40]
   14003c1e3:	mov    QWORD PTR [rsp+0x20],rax
   14003c1e8:	call   0x14003a4b0
   14003c1ed:	mov    r11,QWORD PTR [rsp+0x40]
   14003c1f2:	cmp    r11,QWORD PTR [rbx+0x28]
   14003c1f6:	je     0x14003c210
   14003c1f8:	mov    rax,QWORD PTR [rbx+0x58]
   14003c1fc:	mov    rcx,QWORD PTR [rax+0x8]
   14003c200:	mov    QWORD PTR [rbx+0x28],r11
   14003c204:	mov    al,0x1
   14003c206:	mov    QWORD PTR [rbx+0x58],rcx
   14003c20a:	add    rsp,0x30
   14003c20e:	pop    rbx
   14003c20f:	ret    
   14003c210:	xor    al,al
   14003c212:	add    rsp,0x30
   14003c216:	pop    rbx
   14003c217:	ret    
   14003c218:	int3   
   14003c219:	int3   
   14003c21a:	int3   
   14003c21b:	int3   
   14003c21c:	int3   
   14003c21d:	int3   
   14003c21e:	int3   
   14003c21f:	int3   
   14003c220:	rex push rbp
   14003c222:	push   rsi
   14003c223:	push   r12
   14003c225:	sub    rsp,0x40
   14003c229:	mov    rbp,QWORD PTR [rcx+0x58]
   14003c22d:	mov    QWORD PTR [rsp+0x70],rbx
   14003c232:	mov    QWORD PTR [rsp+0x38],rdi
   14003c237:	cmp    BYTE PTR [rbp+0x135],0x0
   14003c23e:	mov    QWORD PTR [rsp+0x30],r13
   14003c243:	mov    r13,QWORD PTR [rbp+0x8]
   14003c247:	mov    rsi,rcx
   14003c24a:	je     0x14003c267
   14003c24c:	test   DWORD PTR [rcx+0x60],0x400
   14003c253:	je     0x14003c25b
   14003c255:	cmp    BYTE PTR [rcx+0x7b],0x0
   14003c259:	je     0x14003c267
   14003c25b:	mov    rdx,QWORD PTR [rbp+0x128]
   14003c262:	mov    r12b,0x1
   14003c265:	jmp    0x14003c271
   14003c267:	mov    rdx,QWORD PTR [rbp+0x120]
   14003c26e:	xor    r12b,r12b
   14003c271:	mov    rdi,QWORD PTR [rsi+0x28]
   14003c275:	mov    rcx,QWORD PTR [rcx+0x20]
   14003c279:	lea    rax,[rsp+0x60]
   14003c27e:	sub    rcx,rdi
   14003c281:	lea    r8,[rsp+0x68]
   14003c286:	mov    QWORD PTR [rsp+0x60],rdx
   14003c28b:	cmp    rdx,rcx
   14003c28e:	mov    QWORD PTR [rsp+0x68],rcx
   14003c293:	cmovae rax,r8
   14003c297:	mov    rax,QWORD PTR [rax]
   14003c29a:	lea    rbx,[rdi+rax*1]
   14003c29e:	cmp    rdi,rbx
   14003c2a1:	je     0x14003c2ec
   14003c2a3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003c2b0:	mov    rax,QWORD PTR [rsi+0x48]
   14003c2b4:	mov    r8,QWORD PTR [rsi+0x20]
   14003c2b8:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c2bc:	mov    rcx,QWORD PTR [rax]
   14003c2bf:	movzx  eax,BYTE PTR [rsi+0x78]
   14003c2c3:	mov    r9,r13
   14003c2c6:	mov    BYTE PTR [rsp+0x28],al
   14003c2ca:	mov    QWORD PTR [rsp+0x20],rcx
   14003c2cf:	lea    rcx,[rsp+0x60]
   14003c2d4:	call   0x14003a4b0
   14003c2d9:	mov    rcx,QWORD PTR [rax]
   14003c2dc:	cmp    QWORD PTR [rsi+0x28],rcx
   14003c2e0:	je     0x14003c2ec
   14003c2e2:	inc    QWORD PTR [rsi+0x28]
   14003c2e6:	cmp    QWORD PTR [rsi+0x28],rbx
   14003c2ea:	jne    0x14003c2b0
   14003c2ec:	mov    rax,QWORD PTR [rsi+0x28]
   14003c2f0:	mov    r13,QWORD PTR [rsp+0x30]
   14003c2f5:	mov    rbx,QWORD PTR [rsp+0x70]
   14003c2fa:	mov    edx,eax
   14003c2fc:	sub    edx,edi
   14003c2fe:	mov    rdi,QWORD PTR [rsp+0x38]
   14003c303:	cmp    rdx,QWORD PTR [rbp+0x120]
   14003c30a:	jae    0x14003c317
   14003c30c:	xor    al,al
   14003c30e:	add    rsp,0x40
   14003c312:	pop    r12
   14003c314:	pop    rsi
   14003c315:	pop    rbp
   14003c316:	ret    
   14003c317:	test   r12b,r12b
   14003c31a:	je     0x14003c364
   14003c31c:	cmp    BYTE PTR [rbp+0x134],0x0
   14003c323:	je     0x14003c332
   14003c325:	cmp    rdx,QWORD PTR [rbp+0x128]
   14003c32c:	jae    0x14003c332
   14003c32e:	mov    QWORD PTR [rsi+0x30],rax
   14003c332:	cmp    rdx,QWORD PTR [rbp+0x120]
   14003c339:	je     0x14003c351
   14003c33b:	mov    r9,rax
   14003c33e:	mov    r8,rbp
   14003c341:	mov    rcx,rsi
   14003c344:	mov    DWORD PTR [rsp+0x20],0x7
   14003c34c:	call   0x140035e50
   14003c351:	mov    rax,QWORD PTR [rbp+0x10]
   14003c355:	mov    QWORD PTR [rsi+0x58],rax
   14003c359:	mov    al,0x1
   14003c35b:	add    rsp,0x40
   14003c35f:	pop    r12
   14003c361:	pop    rsi
   14003c362:	pop    rbp
   14003c363:	ret    
   14003c364:	cmp    rdx,QWORD PTR [rbp+0x128]
   14003c36b:	jae    0x14003c383
   14003c36d:	mov    r9,rax
   14003c370:	mov    r8,rbp
   14003c373:	mov    rcx,rsi
   14003c376:	mov    DWORD PTR [rsp+0x20],0xc
   14003c37e:	call   0x140035e50
   14003c383:	mov    rax,QWORD PTR [rbp+0x10]
   14003c387:	mov    QWORD PTR [rsi+0x58],rax
   14003c38b:	mov    rax,QWORD PTR [rsi+0x28]
   14003c38f:	cmp    rax,QWORD PTR [rsi+0x20]
   14003c393:	jne    0x14003c3ac
   14003c395:	mov    eax,DWORD PTR [rbp+0x118]
   14003c39b:	and    eax,0x2
   14003c39e:	test   eax,eax
   14003c3a0:	setne  al
   14003c3a3:	add    rsp,0x40
   14003c3a7:	pop    r12
   14003c3a9:	pop    rsi
   14003c3aa:	pop    rbp
   14003c3ab:	ret    
   14003c3ac:	movzx  eax,BYTE PTR [rax]
   14003c3af:	movzx  eax,BYTE PTR [rax+rbp*1+0x18]
   14003c3b4:	shr    eax,1
   14003c3b6:	and    eax,0x1
   14003c3b9:	test   eax,eax
   14003c3bb:	setne  al
   14003c3be:	add    rsp,0x40
   14003c3c2:	pop    r12
   14003c3c4:	pop    rsi
   14003c3c5:	pop    rbp
   14003c3c6:	ret    
   14003c3c7:	int3   
   14003c3c8:	int3   
   14003c3c9:	int3   
   14003c3ca:	int3   
   14003c3cb:	int3   
   14003c3cc:	int3   
   14003c3cd:	int3   
   14003c3ce:	int3   
   14003c3cf:	int3   
   14003c3d0:	rex push rbx
   14003c3d2:	sub    rsp,0x30
   14003c3d6:	mov    edx,DWORD PTR [rcx+0x60]
   14003c3d9:	mov    rbx,rcx
   14003c3dc:	test   dl,dl
   14003c3de:	jns    0x14003c3ea
   14003c3e0:	add    rsp,0x30
   14003c3e4:	pop    rbx
   14003c3e5:	jmp    0x14003a240
   14003c3ea:	mov    QWORD PTR [rsp+0x50],rdi
   14003c3ef:	mov    rdi,QWORD PTR [rcx+0x58]
   14003c3f3:	mov    rax,QWORD PTR [rdi+0x8]
   14003c3f7:	movzx  ecx,BYTE PTR [rax+0x10]
   14003c3fb:	test   BYTE PTR [rbx+0xb4],cl
   14003c401:	jne    0x14003c415
   14003c403:	mov    rcx,rbx
   14003c406:	mov    rdi,QWORD PTR [rsp+0x50]
   14003c40b:	add    rsp,0x30
   14003c40f:	pop    rbx
   14003c410:	jmp    0x14003a240
   14003c415:	cmp    BYTE PTR [rdi+0x135],0x0
   14003c41c:	je     0x14003c436
   14003c41e:	bt     edx,0xa
   14003c422:	jae    0x14003c42a
   14003c424:	cmp    BYTE PTR [rbx+0x7b],0x0
   14003c428:	je     0x14003c436
   14003c42a:	mov    r8d,DWORD PTR [rdi+0x128]
   14003c431:	mov    r9b,0x1
   14003c434:	jmp    0x14003c440
   14003c436:	mov    r8d,DWORD PTR [rdi+0x120]
   14003c43d:	xor    r9b,r9b
   14003c440:	mov    rax,QWORD PTR [rbx+0x20]
   14003c444:	lea    rcx,[rsp+0x40]
   14003c449:	lea    r10,[rsp+0x48]
   14003c44e:	mov    edx,eax
   14003c450:	mov    DWORD PTR [rsp+0x40],r8d
   14003c455:	sub    edx,DWORD PTR [rbx+0x28]
   14003c458:	cmp    r8d,edx
   14003c45b:	mov    DWORD PTR [rsp+0x48],edx
   14003c45f:	cmovae rcx,r10
   14003c463:	mov    edx,DWORD PTR [rcx]
   14003c465:	cmp    QWORD PTR [rdi+0x120],rdx
   14003c46c:	jbe    0x14003c47f
   14003c46e:	mov    rdi,QWORD PTR [rsp+0x50]
   14003c473:	mov    QWORD PTR [rbx+0x28],rax
   14003c477:	xor    al,al
   14003c479:	add    rsp,0x30
   14003c47d:	pop    rbx
   14003c47e:	ret    
   14003c47f:	add    QWORD PTR [rbx+0x28],rdx
   14003c483:	test   r9b,r9b
   14003c486:	je     0x14003c4d7
   14003c488:	cmp    BYTE PTR [rdi+0x134],0x0
   14003c48f:	je     0x14003c4a2
   14003c491:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003c498:	jae    0x14003c4a2
   14003c49a:	mov    rax,QWORD PTR [rbx+0x28]
   14003c49e:	mov    QWORD PTR [rbx+0x30],rax
   14003c4a2:	cmp    rdx,QWORD PTR [rdi+0x120]
   14003c4a9:	je     0x14003c4c2
   14003c4ab:	mov    r9,QWORD PTR [rbx+0x28]
   14003c4af:	mov    r8,rdi
   14003c4b2:	mov    rcx,rbx
   14003c4b5:	mov    DWORD PTR [rsp+0x20],0x7
   14003c4bd:	call   0x140035e50
   14003c4c2:	mov    rax,QWORD PTR [rdi+0x10]
   14003c4c6:	mov    rdi,QWORD PTR [rsp+0x50]
   14003c4cb:	mov    QWORD PTR [rbx+0x58],rax
   14003c4cf:	mov    al,0x1
   14003c4d1:	add    rsp,0x30
   14003c4d5:	pop    rbx
   14003c4d6:	ret    
   14003c4d7:	cmp    rdx,QWORD PTR [rdi+0x128]
   14003c4de:	jae    0x14003c4f7
   14003c4e0:	mov    r9,QWORD PTR [rbx+0x28]
   14003c4e4:	mov    r8,rdi
   14003c4e7:	mov    rcx,rbx
   14003c4ea:	mov    DWORD PTR [rsp+0x20],0x9
   14003c4f2:	call   0x140035e50
   14003c4f7:	mov    rax,QWORD PTR [rdi+0x10]
   14003c4fb:	mov    QWORD PTR [rbx+0x58],rax
   14003c4ff:	mov    rax,QWORD PTR [rbx+0x28]
   14003c503:	cmp    rax,QWORD PTR [rbx+0x20]
   14003c507:	jne    0x14003c522
   14003c509:	mov    eax,DWORD PTR [rdi+0x118]
   14003c50f:	mov    rdi,QWORD PTR [rsp+0x50]
   14003c514:	and    eax,0x2
   14003c517:	test   eax,eax
   14003c519:	setne  al
   14003c51c:	add    rsp,0x30
   14003c520:	pop    rbx
   14003c521:	ret    
   14003c522:	movzx  eax,BYTE PTR [rax]
   14003c525:	movzx  eax,BYTE PTR [rax+rdi*1+0x18]
   14003c52a:	mov    rdi,QWORD PTR [rsp+0x50]
   14003c52f:	shr    eax,1
   14003c531:	and    eax,0x1
   14003c534:	test   eax,eax
   14003c536:	setne  al
   14003c539:	add    rsp,0x30
   14003c53d:	pop    rbx
   14003c53e:	ret    
   14003c53f:	int3   
   14003c540:	rex push rbx
   14003c542:	push   rbp
   14003c543:	sub    rsp,0x38
   14003c547:	mov    rbp,QWORD PTR [rcx+0xe0]
   14003c54e:	mov    rbx,rcx
   14003c551:	test   dl,dl
   14003c553:	je     0x14003c569
   14003c555:	lea    rax,[rbp+0x20]
   14003c559:	mov    QWORD PTR [rcx+0xe0],rax
   14003c560:	mov    al,0x1
   14003c562:	add    rsp,0x38
   14003c566:	pop    rbp
   14003c567:	pop    rbx
   14003c568:	ret    
   14003c569:	mov    QWORD PTR [rsp+0x58],rsi
   14003c56e:	mov    rsi,QWORD PTR [rbp+0x8]
   14003c572:	mov    QWORD PTR [rsp+0x60],rdi
   14003c577:	mov    rdi,QWORD PTR [rbp+0x10]
   14003c57b:	mov    QWORD PTR [rsp+0x30],r12
   14003c580:	mov    r12,QWORD PTR [rdi+0x8]
   14003c584:	mov    QWORD PTR [rcx+0x58],r12
   14003c588:	mov    rax,QWORD PTR [rbp+0x18]
   14003c58c:	mov    QWORD PTR [rcx+0x28],rax
   14003c590:	cmp    rax,QWORD PTR [rcx+0x20]
   14003c594:	je     0x14003c606
   14003c596:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003c5a0:	mov    rax,QWORD PTR [rbx+0x48]
   14003c5a4:	mov    r8,QWORD PTR [rbx+0x20]
   14003c5a8:	mov    rdx,QWORD PTR [rbx+0x28]
   14003c5ac:	mov    rcx,QWORD PTR [rax]
   14003c5af:	movzx  eax,BYTE PTR [rbx+0x78]
   14003c5b3:	mov    r9,r12
   14003c5b6:	mov    BYTE PTR [rsp+0x28],al
   14003c5ba:	mov    QWORD PTR [rsp+0x20],rcx
   14003c5bf:	lea    rcx,[rsp+0x50]
   14003c5c4:	call   0x14003a4b0
   14003c5c9:	mov    rcx,QWORD PTR [rax]
   14003c5cc:	cmp    QWORD PTR [rbx+0x28],rcx
   14003c5d0:	je     0x14003c65f
   14003c5d6:	inc    QWORD PTR [rbx+0x28]
   14003c5da:	inc    QWORD PTR [rbx+0x68]
   14003c5de:	mov    rax,QWORD PTR [rdi+0x8]
   14003c5e2:	inc    rsi
   14003c5e5:	mov    QWORD PTR [rbx+0x58],rax
   14003c5e9:	cmp    rsi,QWORD PTR [rdi+0x128]
   14003c5f0:	jae    0x14003c606
   14003c5f2:	mov    rax,QWORD PTR [rbx+0x28]
   14003c5f6:	cmp    rax,QWORD PTR [rbx+0x20]
   14003c5fa:	je     0x14003c606
   14003c5fc:	movzx  eax,BYTE PTR [rax]
   14003c5ff:	test   BYTE PTR [rax+rdi*1+0x18],0x2
   14003c604:	je     0x14003c5a0
   14003c606:	cmp    BYTE PTR [rdi+0x134],0x0
   14003c60d:	je     0x14003c620
   14003c60f:	cmp    rsi,QWORD PTR [rdi+0x128]
   14003c616:	jae    0x14003c620
   14003c618:	mov    rax,QWORD PTR [rbx+0x28]
   14003c61c:	mov    QWORD PTR [rbx+0x30],rax
   14003c620:	mov    rcx,QWORD PTR [rbx+0x20]
   14003c624:	cmp    QWORD PTR [rbx+0x28],rcx
   14003c628:	jne    0x14003c66b
   14003c62a:	add    QWORD PTR [rbx+0xe0],0x20
   14003c632:	test   DWORD PTR [rbx+0x60],0x2000
   14003c639:	je     0x14003c64e
   14003c63b:	mov    rax,QWORD PTR [rbx+0x28]
   14003c63f:	cmp    rax,rcx
   14003c642:	jne    0x14003c64e
   14003c644:	cmp    rax,QWORD PTR [rbx+0x38]
   14003c648:	je     0x14003c64e
   14003c64a:	mov    BYTE PTR [rbx+0x79],0x1
   14003c64e:	mov    eax,DWORD PTR [rdi+0x118]
   14003c654:	and    eax,0x2
   14003c657:	test   al,al
   14003c659:	jne    0x14003c69a
   14003c65b:	mov    al,0x1
   14003c65d:	jmp    0x14003c6a4
   14003c65f:	add    QWORD PTR [rbx+0xe0],0x20
   14003c667:	mov    al,0x1
   14003c669:	jmp    0x14003c6a4
   14003c66b:	cmp    rsi,QWORD PTR [rdi+0x128]
   14003c672:	jne    0x14003c68e
   14003c674:	add    QWORD PTR [rbx+0xe0],0x20
   14003c67c:	mov    rax,QWORD PTR [rbx+0x28]
   14003c680:	movzx  ecx,BYTE PTR [rax]
   14003c683:	test   BYTE PTR [rcx+rdi*1+0x18],0x2
   14003c688:	jne    0x14003c69a
   14003c68a:	mov    al,0x1
   14003c68c:	jmp    0x14003c6a4
   14003c68e:	mov    QWORD PTR [rbp+0x8],rsi
   14003c692:	mov    rax,QWORD PTR [rbx+0x28]
   14003c696:	mov    QWORD PTR [rbp+0x18],rax
   14003c69a:	mov    rax,QWORD PTR [rdi+0x10]
   14003c69e:	mov    QWORD PTR [rbx+0x58],rax
   14003c6a2:	xor    al,al
   14003c6a4:	mov    rdi,QWORD PTR [rsp+0x60]
   14003c6a9:	mov    rsi,QWORD PTR [rsp+0x58]
   14003c6ae:	mov    r12,QWORD PTR [rsp+0x30]
   14003c6b3:	add    rsp,0x38
   14003c6b7:	pop    rbp
   14003c6b8:	pop    rbx
   14003c6b9:	ret    
   14003c6ba:	int3   
   14003c6bb:	int3   
   14003c6bc:	int3   
   14003c6bd:	int3   
   14003c6be:	int3   
   14003c6bf:	int3   
   14003c6c0:	mov    QWORD PTR [rsp+0x10],rdx
   14003c6c5:	push   rdi
   14003c6c6:	sub    rsp,0x30
   14003c6ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003c6d3:	mov    QWORD PTR [rsp+0x40],rbx
   14003c6d8:	mov    rdi,rdx
   14003c6db:	mov    rbx,rcx
   14003c6de:	mov    QWORD PTR [rcx],0x0
   14003c6e5:	mov    ecx,0x18
   14003c6ea:	call   0x14002b1c2
   14003c6ef:	test   rax,rax
   14003c6f2:	je     0x14003c710
   14003c6f4:	mov    DWORD PTR [rax+0x8],0x1
   14003c6fb:	mov    DWORD PTR [rax+0xc],0x1
   14003c702:	lea    rcx,[rip+0x11787]        # 0x14004de90
   14003c709:	mov    QWORD PTR [rax],rcx
   14003c70c:	mov    QWORD PTR [rax+0x10],rdi
   14003c710:	mov    QWORD PTR [rbx],rax
   14003c713:	mov    rax,rbx
   14003c716:	mov    rbx,QWORD PTR [rsp+0x40]
   14003c71b:	add    rsp,0x30
   14003c71f:	pop    rdi
   14003c720:	ret    
   14003c721:	int3   
   14003c722:	int3   
   14003c723:	int3   
   14003c724:	int3   
   14003c725:	int3   
   14003c726:	int3   
   14003c727:	int3   
   14003c728:	int3   
   14003c729:	int3   
   14003c72a:	int3   
   14003c72b:	int3   
   14003c72c:	int3   
   14003c72d:	int3   
   14003c72e:	int3   
   14003c72f:	int3   
   14003c730:	rex push rbx
   14003c732:	sub    rsp,0x20
   14003c736:	mov    rbx,QWORD PTR [rcx+0x10]
   14003c73a:	test   rbx,rbx
   14003c73d:	je     0x14003c74f
   14003c73f:	mov    rcx,rbx
   14003c742:	call   0x140034390
   14003c747:	mov    rcx,rbx
   14003c74a:	call   0x14002b150
   14003c74f:	add    rsp,0x20
   14003c753:	pop    rbx
   14003c754:	ret    
   14003c755:	int3   
   14003c756:	int3   
   14003c757:	int3   
   14003c758:	int3   
   14003c759:	int3   
   14003c75a:	int3   
   14003c75b:	int3   
   14003c75c:	int3   
   14003c75d:	int3   
   14003c75e:	int3   
   14003c75f:	int3   
   14003c760:	mov    QWORD PTR [rsp+0x18],r8
   14003c765:	push   rsi
   14003c766:	push   rdi
   14003c767:	push   r12
   14003c769:	push   r13
   14003c76b:	push   r14
   14003c76d:	sub    rsp,0x30
   14003c771:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003c77a:	mov    QWORD PTR [rsp+0x78],rbx
   14003c77f:	mov    rbx,r8
   14003c782:	mov    r13,rdx
   14003c785:	mov    rdi,rcx
   14003c788:	mov    QWORD PTR [rsp+0x60],rbx
   14003c78d:	xor    r14d,r14d
   14003c790:	cmp    rdi,r13
   14003c793:	je     0x14003c82f
   14003c799:	mov    QWORD PTR [rsp+0x68],rbx
   14003c79e:	test   rbx,rbx
   14003c7a1:	je     0x14003c81d
   14003c7a3:	mov    eax,DWORD PTR [rdi]
   14003c7a5:	mov    DWORD PTR [rbx],eax
   14003c7a7:	mov    rax,QWORD PTR [rdi+0x8]
   14003c7ab:	mov    QWORD PTR [rbx+0x8],rax
   14003c7af:	lea    rdx,[rdi+0x10]
   14003c7b3:	lea    rcx,[rbx+0x10]
   14003c7b7:	call   0x140033c50
   14003c7bc:	mov    QWORD PTR [rbx+0x30],r14
   14003c7c0:	mov    QWORD PTR [rbx+0x38],r14
   14003c7c4:	mov    QWORD PTR [rbx+0x40],r14
   14003c7c8:	mov    BYTE PTR [rbx+0x48],0x0
   14003c7cc:	mov    rax,QWORD PTR [rdi+0x50]
   14003c7d0:	mov    QWORD PTR [rbx+0x50],rax
   14003c7d4:	mov    rax,QWORD PTR [rdi+0x58]
   14003c7d8:	mov    QWORD PTR [rbx+0x58],rax
   14003c7dc:	test   rax,rax
   14003c7df:	je     0x14003c7e5
   14003c7e1:	lock inc DWORD PTR [rax+0x8]
   14003c7e5:	mov    eax,DWORD PTR [rdi+0x60]
   14003c7e8:	mov    DWORD PTR [rbx+0x60],eax
   14003c7eb:	movzx  eax,BYTE PTR [rdi+0x64]
   14003c7ef:	mov    BYTE PTR [rbx+0x64],al
   14003c7f2:	test   al,al
   14003c7f4:	jne    0x14003c815
   14003c7f6:	mov    rax,QWORD PTR [rdi+0x30]
   14003c7fa:	mov    QWORD PTR [rbx+0x30],rax
   14003c7fe:	mov    rax,QWORD PTR [rdi+0x38]
   14003c802:	mov    QWORD PTR [rbx+0x38],rax
   14003c806:	mov    rax,QWORD PTR [rdi+0x40]
   14003c80a:	mov    QWORD PTR [rbx+0x40],rax
   14003c80e:	movzx  eax,BYTE PTR [rdi+0x48]
   14003c812:	mov    BYTE PTR [rbx+0x48],al
   14003c815:	mov    rax,QWORD PTR [rdi+0x68]
   14003c819:	mov    QWORD PTR [rbx+0x68],rax
   14003c81d:	add    rbx,0x70
   14003c821:	mov    QWORD PTR [rsp+0x70],rbx
   14003c826:	add    rdi,0x70
   14003c82a:	jmp    0x14003c790
   14003c82f:	mov    rax,rbx
   14003c832:	mov    rbx,QWORD PTR [rsp+0x78]
   14003c837:	add    rsp,0x30
   14003c83b:	pop    r14
   14003c83d:	pop    r13
   14003c83f:	pop    r12
   14003c841:	pop    rdi
   14003c842:	pop    rsi
   14003c843:	ret    
   14003c844:	int3   
   14003c845:	int3   
   14003c846:	int3   
   14003c847:	int3   
   14003c848:	int3   
   14003c849:	int3   
   14003c84a:	int3   
   14003c84b:	int3   
   14003c84c:	int3   
   14003c84d:	int3   
   14003c84e:	int3   
   14003c84f:	int3   
   14003c850:	rex push rbp
   14003c852:	push   rsi
   14003c853:	push   rdi
   14003c854:	push   r12
   14003c856:	push   r13
   14003c858:	push   r14
   14003c85a:	push   r15
   14003c85c:	lea    rbp,[rsp-0x27]
   14003c861:	sub    rsp,0xc0
   14003c868:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   14003c870:	mov    QWORD PTR [rsp+0x110],rbx
   14003c878:	mov    rax,QWORD PTR [rip+0x2b971]        # 0x1400681f0
   14003c87f:	xor    rax,rsp
   14003c882:	mov    QWORD PTR [rbp+0x1f],rax
   14003c886:	mov    rbx,rdx
   14003c889:	mov    r14,rcx
   14003c88c:	movzx  r15d,BYTE PTR [rcx+0x18]
   14003c891:	xor    r13d,r13d
   14003c894:	mov    QWORD PTR [rbp-0x69],r13
   14003c898:	xor    esi,esi
   14003c89a:	mov    QWORD PTR [rbp-0x61],rsi
   14003c89e:	xor    r12d,r12d
   14003c8a1:	mov    QWORD PTR [rbp-0x59],r12
   14003c8a5:	test   rdx,rdx
   14003c8a8:	je     0x14003cb46
   14003c8ae:	lea    rdx,[rip+0xfffffffffffc374b]        # 0x140000000
   14003c8b5:	movabs r8,0xffffffffffffffe
   14003c8bf:	movabs r9,0xfffffffffffffff
   14003c8c9:	nop    DWORD PTR [rax+0x0]
   14003c8d0:	mov    eax,DWORD PTR [rbx]
   14003c8d2:	add    eax,0xffffffef
   14003c8d5:	cmp    eax,0xb
   14003c8d8:	ja     0x14003cb1c
   14003c8de:	cdqe   
   14003c8e0:	mov    ecx,DWORD PTR [rdx+rax*4+0x3cc6c]
   14003c8e7:	add    rcx,rdx
   14003c8ea:	jmp    rcx
   14003c8ec:	movzx  eax,BYTE PTR [rbx+0x10]
   14003c8f0:	mov    BYTE PTR [r14+0x18],al
   14003c8f4:	jmp    0x14003cb1c
   14003c8f9:	movzx  edi,BYTE PTR [r14+0x18]
   14003c8fe:	mov    BYTE PTR [rbp-0x49],dil
   14003c902:	mov    QWORD PTR [rbp-0x41],rbx
   14003c906:	lea    rax,[rbp-0x49]
   14003c90a:	cmp    rax,rsi
   14003c90d:	jae    0x14003c9c2
   14003c913:	lea    rax,[rbp-0x49]
   14003c917:	cmp    r13,rax
   14003c91a:	ja     0x14003c9c2
   14003c920:	lea    rdi,[rbp-0x49]
   14003c924:	sub    rdi,r13
   14003c927:	cmp    rsi,r12
   14003c92a:	jne    0x14003c9a0
   14003c92c:	mov    rcx,rsi
   14003c92f:	sub    rcx,r13
   14003c932:	sar    rcx,0x4
   14003c936:	cmp    rcx,r8
   14003c939:	ja     0x14003cb2a
   14003c93f:	inc    rcx
   14003c942:	mov    rdx,r12
   14003c945:	sub    rdx,r13
   14003c948:	sar    rdx,0x4
   14003c94c:	cmp    rcx,rdx
   14003c94f:	jbe    0x14003c999
   14003c951:	mov    r8,rdx
   14003c954:	shr    r8,1
   14003c957:	mov    rax,r9
   14003c95a:	sub    rax,r8
   14003c95d:	cmp    rax,rdx
   14003c960:	jae    0x14003c966
   14003c962:	xor    edx,edx
   14003c964:	jmp    0x14003c969
   14003c966:	add    rdx,r8
   14003c969:	cmp    rdx,rcx
   14003c96c:	cmovb  rdx,rcx
   14003c970:	lea    rcx,[rbp-0x69]
   14003c974:	call   0x140033550
   14003c979:	mov    r12,QWORD PTR [rbp-0x59]
   14003c97d:	mov    rsi,QWORD PTR [rbp-0x61]
   14003c981:	mov    r13,QWORD PTR [rbp-0x69]
   14003c985:	movabs r9,0xfffffffffffffff
   14003c98f:	movabs r8,0xffffffffffffffe
   14003c999:	lea    rdx,[rip+0xfffffffffffc3660]        # 0x140000000
   14003c9a0:	and    rdi,0xfffffffffffffff0
   14003c9a4:	add    rdi,r13
   14003c9a7:	test   rsi,rsi
   14003c9aa:	je     0x14003ca47
   14003c9b0:	movzx  eax,BYTE PTR [rdi]
   14003c9b3:	mov    BYTE PTR [rsi],al
   14003c9b5:	mov    rax,QWORD PTR [rdi+0x8]
   14003c9b9:	mov    QWORD PTR [rsi+0x8],rax
   14003c9bd:	jmp    0x14003ca47
   14003c9c2:	cmp    rsi,r12
   14003c9c5:	jne    0x14003ca3b
   14003c9c7:	mov    rcx,rsi
   14003c9ca:	sub    rcx,r13
   14003c9cd:	sar    rcx,0x4
   14003c9d1:	cmp    rcx,r8
   14003c9d4:	ja     0x14003cb38
   14003c9da:	inc    rcx
   14003c9dd:	mov    rdx,r12
   14003c9e0:	sub    rdx,r13
   14003c9e3:	sar    rdx,0x4
   14003c9e7:	cmp    rcx,rdx
   14003c9ea:	jbe    0x14003ca34
   14003c9ec:	mov    r8,rdx
   14003c9ef:	shr    r8,1
   14003c9f2:	mov    rax,r9
   14003c9f5:	sub    rax,r8
   14003c9f8:	cmp    rax,rdx
   14003c9fb:	jae    0x14003ca01
   14003c9fd:	xor    edx,edx
   14003c9ff:	jmp    0x14003ca04
   14003ca01:	add    rdx,r8
   14003ca04:	cmp    rdx,rcx
   14003ca07:	cmovb  rdx,rcx
   14003ca0b:	lea    rcx,[rbp-0x69]
   14003ca0f:	call   0x140033550
   14003ca14:	mov    r12,QWORD PTR [rbp-0x59]
   14003ca18:	mov    rsi,QWORD PTR [rbp-0x61]
   14003ca1c:	mov    r13,QWORD PTR [rbp-0x69]
   14003ca20:	movabs r9,0xfffffffffffffff
   14003ca2a:	movabs r8,0xffffffffffffffe
   14003ca34:	lea    rdx,[rip+0xfffffffffffc35c5]        # 0x140000000
   14003ca3b:	test   rsi,rsi
   14003ca3e:	je     0x14003ca47
   14003ca40:	mov    BYTE PTR [rsi],dil
   14003ca43:	mov    QWORD PTR [rsi+0x8],rbx
   14003ca47:	add    rsi,0x10
   14003ca4b:	mov    QWORD PTR [rbp-0x61],rsi
   14003ca4f:	jmp    0x14003cb1c
   14003ca54:	mov    rdx,QWORD PTR [rbx+0x8]
   14003ca58:	mov    rcx,r14
   14003ca5b:	call   0x14002db30
   14003ca60:	mov    DWORD PTR [rbx+0x10],eax
   14003ca63:	test   eax,eax
   14003ca65:	jns    0x14003cb01
   14003ca6b:	mov    rax,QWORD PTR [r14]
   14003ca6e:	cmp    DWORD PTR [rax+0x34],0x0
   14003ca72:	jne    0x14003ca7b
   14003ca74:	mov    DWORD PTR [rax+0x34],0x2
   14003ca7b:	mov    rax,QWORD PTR [r14]
   14003ca7e:	mov    QWORD PTR [rax+0x38],0x0
   14003ca86:	mov    rax,QWORD PTR [r14]
   14003ca89:	mov    QWORD PTR [rax+0x40],0x0
   14003ca91:	mov    rax,QWORD PTR [r14]
   14003ca94:	test   DWORD PTR [rax+0x30],0x40000
   14003ca9b:	jne    0x14003cb01
   14003ca9d:	mov    QWORD PTR [rbp+0xf],0xf
   14003caa5:	mov    QWORD PTR [rbp+0x7],0x0
   14003caad:	mov    BYTE PTR [rbp-0x9],0x0
   14003cab1:	mov    r8d,0x43
   14003cab7:	lea    rdx,[rip+0x12772]        # 0x14004f230
   14003cabe:	lea    rcx,[rbp-0x9]
   14003cac2:	call   0x140005154
   14003cac7:	nop
   14003cac8:	xor    r9d,r9d
   14003cacb:	lea    r8d,[r9+0x2]
   14003cacf:	lea    rdx,[rbp-0x9]
   14003cad3:	lea    rcx,[rbp-0x31]
   14003cad7:	call   0x140041e90
   14003cadc:	nop
   14003cadd:	lea    rcx,[rbp-0x31]
   14003cae1:	call   0x140042420
   14003cae6:	nop
   14003cae7:	lea    rcx,[rbp-0x31]
   14003caeb:	call   0x140041d10
   14003caf0:	nop
   14003caf1:	cmp    QWORD PTR [rbp+0xf],0x10
   14003caf6:	jb     0x14003cb01
   14003caf8:	mov    rcx,QWORD PTR [rbp-0x9]
   14003cafc:	call   0x14002b150
   14003cb01:	movabs r8,0xffffffffffffffe
   14003cb0b:	movabs r9,0xfffffffffffffff
   14003cb15:	lea    rdx,[rip+0xfffffffffffc34e4]        # 0x140000000
   14003cb1c:	mov    rbx,QWORD PTR [rbx+0x8]
   14003cb20:	test   rbx,rbx
   14003cb23:	je     0x14003cb46
   14003cb25:	jmp    0x14003c8d0
   14003cb2a:	lea    rcx,[rip+0x13e27]        # 0x140050958
   14003cb31:	call   QWORD PTR [rip+0xca61]        # 0x140049598
   14003cb37:	int3   
   14003cb38:	lea    rcx,[rip+0x13e19]        # 0x140050958
   14003cb3f:	call   QWORD PTR [rip+0xca53]        # 0x140049598
   14003cb45:	int3   
   14003cb46:	mov    rax,rsi
   14003cb49:	sub    rax,r13
   14003cb4c:	test   rax,0xfffffffffffffff0
   14003cb52:	je     0x14003cc33
   14003cb58:	nop    DWORD PTR [rax+rax*1+0x0]
   14003cb60:	lea    rax,[rsi-0x10]
   14003cb64:	movzx  ecx,BYTE PTR [rax]
   14003cb67:	mov    BYTE PTR [r14+0x18],cl
   14003cb6b:	mov    r12,QWORD PTR [rax+0x8]
   14003cb6f:	cmp    r13,rsi
   14003cb72:	cmovne rsi,rax
   14003cb76:	mov    QWORD PTR [rbp-0x61],rsi
   14003cb7a:	mov    QWORD PTR [r14+0x28],0x0
   14003cb82:	mov    BYTE PTR [rsp+0x20],0x1
   14003cb87:	lea    r9,[r12+0x118]
   14003cb8f:	lea    r8,[r12+0x18]
   14003cb94:	mov    rdx,QWORD PTR [r12+0x8]
   14003cb99:	mov    rcx,r14
   14003cb9c:	call   0x14003ad10
   14003cba1:	mov    QWORD PTR [r14+0x28],0x0
   14003cba9:	mov    BYTE PTR [rsp+0x20],0x2
   14003cbae:	lea    r9,[r12+0x118]
   14003cbb6:	lea    r8,[r12+0x18]
   14003cbbb:	mov    rdx,QWORD PTR [r12+0x10]
   14003cbc0:	mov    rcx,r14
   14003cbc3:	call   0x14003ad10
   14003cbc8:	mov    r11d,DWORD PTR [r12]
   14003cbcc:	cmp    r11d,0x12
   14003cbd0:	jne    0x14003cc1d
   14003cbd2:	mov    rdx,QWORD PTR [r12+0x8]
   14003cbd7:	mov    rcx,QWORD PTR [rdx+0x8]
   14003cbdb:	mov    rax,QWORD PTR [r12+0x10]
   14003cbe0:	cmp    QWORD PTR [rcx+0x8],rax
   14003cbe4:	jne    0x14003cc1d
   14003cbe6:	mov    ecx,DWORD PTR [rdx]
   14003cbe8:	sub    ecx,0x2
   14003cbeb:	je     0x14003cc17
   14003cbed:	sub    ecx,0x3
   14003cbf0:	je     0x14003cc0f
   14003cbf2:	sub    ecx,0x9
   14003cbf5:	je     0x14003cc01
   14003cbf7:	dec    ecx
   14003cbf9:	jne    0x14003cc1d
   14003cbfb:	lea    r11d,[rcx+0x18]
   14003cbff:	jmp    0x14003cc1d
   14003cc01:	cmp    BYTE PTR [rdx+0x25],0x0
   14003cc05:	je     0x14003cc1d
   14003cc07:	mov    r11d,0x19
   14003cc0d:	jmp    0x14003cc1d
   14003cc0f:	mov    r11d,0x16
   14003cc15:	jmp    0x14003cc1d
   14003cc17:	mov    r11d,0x17
   14003cc1d:	mov    DWORD PTR [r12],r11d
   14003cc21:	mov    rax,rsi
   14003cc24:	sub    rax,r13
   14003cc27:	test   rax,0xfffffffffffffff0
   14003cc2d:	jne    0x14003cb60
   14003cc33:	mov    BYTE PTR [r14+0x18],r15b
   14003cc37:	test   r13,r13
   14003cc3a:	je     0x14003cc44
   14003cc3c:	mov    rcx,r13
   14003cc3f:	call   0x14002b150
   14003cc44:	mov    rcx,QWORD PTR [rbp+0x1f]
   14003cc48:	xor    rcx,rsp
   14003cc4b:	call   0x14002b100
   14003cc50:	mov    rbx,QWORD PTR [rsp+0x110]
   14003cc58:	add    rsp,0xc0
   14003cc5f:	pop    r15
   14003cc61:	pop    r14
   14003cc63:	pop    r13
   14003cc65:	pop    r12
   14003cc67:	pop    rdi
   14003cc68:	pop    rsi
   14003cc69:	pop    rbp
   14003cc6a:	ret    
   14003cc6b:	nop
   14003cc6c:	stc    
   14003cc6d:	enter  0x3,0xf9
   14003cc71:	enter  0x3,0x1c
   14003cc75:	retf   
   14003cc76:	add    eax,DWORD PTR [rax]
   14003cc78:	sbb    al,0xcb
   14003cc7a:	add    eax,DWORD PTR [rax]
   14003cc7c:	sbb    al,0xcb
   14003cc7e:	add    eax,DWORD PTR [rax]
   14003cc80:	stc    
   14003cc81:	enter  0x3,0xf9
   14003cc85:	enter  0x3,0xf9
   14003cc89:	enter  0x3,0xf9
   14003cc8d:	enter  0x3,0x54
   14003cc91:	retf   0x3
   14003cc94:	sbb    al,0xcb
   14003cc96:	add    eax,DWORD PTR [rax]
   14003cc98:	in     al,dx
   14003cc99:	enter  0x3,0xcc
   14003cc9d:	int3   
   14003cc9e:	int3   
   14003cc9f:	int3   
   14003cca0:	mov    QWORD PTR [rsp+0x10],rbx
   14003cca5:	mov    QWORD PTR [rsp+0x18],rbp
   14003ccaa:	mov    QWORD PTR [rsp+0x20],rsi
   14003ccaf:	push   rdi
   14003ccb0:	sub    rsp,0x20
   14003ccb4:	mov    rsi,QWORD PTR [rcx+0x60]
   14003ccb8:	mov    rbp,QWORD PTR [rcx+0x8]
   14003ccbc:	mov    rbx,rcx
   14003ccbf:	lea    rcx,[rsp+0x30]
   14003ccc4:	lea    rdx,[rsi+0x1]
   14003ccc8:	mov    r8d,0xa
   14003ccce:	mov    r9,rbp
   14003ccd1:	mov    QWORD PTR [rsp+0x30],rsi
   14003ccd6:	call   0x14002eda0
   14003ccdb:	mov    edi,eax
   14003ccdd:	test   eax,eax
   14003ccdf:	je     0x14003cd7f
   14003cce5:	mov    rcx,QWORD PTR [rbx]
   14003cce8:	mov    edx,DWORD PTR [rcx+0x30]
   14003cceb:	test   dl,0x3
   14003ccee:	jne    0x14003ccfa
   14003ccf0:	bt     edx,0x8
   14003ccf4:	jb     0x14003cd7f
   14003ccfa:	test   eax,eax
   14003ccfc:	jle    0x14003cd3a
   14003ccfe:	lea    ecx,[rax-0x1]
   14003cd01:	mov    eax,DWORD PTR [rbx+0x24]
   14003cd04:	movzx  edx,cl
   14003cd07:	bt     eax,edx
   14003cd0a:	jae    0x14003cd3a
   14003cd0c:	mov    rax,QWORD PTR [rsp+0x30]
   14003cd11:	mov    edx,0xd
   14003cd16:	mov    rcx,rbx
   14003cd19:	lea    r8d,[rdx+0xb]
   14003cd1d:	mov    QWORD PTR [rbx+0x60],rax
   14003cd21:	call   0x14002eb10
   14003cd26:	mov    DWORD PTR [rax+0x10],edi
   14003cd29:	mov    rcx,QWORD PTR [rbx]
   14003cd2c:	mov    edx,DWORD PTR [rcx+0x30]
   14003cd2f:	shr    edx,0x14
   14003cd32:	and    dl,0x1
   14003cd35:	mov    BYTE PTR [rax+0x14],dl
   14003cd38:	jmp    0x14003cd92
   14003cd3a:	lea    r8,[rsi-0x1]
   14003cd3e:	mov    QWORD PTR [rbx+0x60],r8
   14003cd42:	mov    rax,QWORD PTR [rbp+0x0]
   14003cd46:	movzx  ecx,BYTE PTR [r8]
   14003cd4a:	cmp    BYTE PTR [rcx+rax*1+0x4],0xc
   14003cd4f:	je     0x14003cd6a
   14003cd51:	dec    r8
   14003cd54:	mov    rax,rbp
   14003cd57:	mov    QWORD PTR [rbx+0x60],r8
   14003cd5b:	movzx  edx,BYTE PTR [r8]
   14003cd5f:	mov    rcx,QWORD PTR [rbp+0x0]
   14003cd63:	cmp    BYTE PTR [rdx+rcx*1+0x4],0xc
   14003cd68:	jne    0x14003cd51
   14003cd6a:	sub    r8,QWORD PTR [rbx+0x50]
   14003cd6e:	mov    edx,0x6
   14003cd73:	mov    rcx,rbx
   14003cd76:	call   0x1400322b0
   14003cd7b:	xor    al,al
   14003cd7d:	jmp    0x14003cd94
   14003cd7f:	mov    rcx,rbx
   14003cd82:	call   0x14003b360
   14003cd87:	mov    rcx,rbx
   14003cd8a:	movzx  edx,al
   14003cd8d:	call   0x14002ec40
   14003cd92:	mov    al,0x1
   14003cd94:	mov    rbx,QWORD PTR [rsp+0x38]
   14003cd99:	mov    rbp,QWORD PTR [rsp+0x40]
   14003cd9e:	mov    rsi,QWORD PTR [rsp+0x48]
   14003cda3:	add    rsp,0x20
   14003cda7:	pop    rdi
   14003cda8:	ret    
   14003cda9:	int3   
   14003cdaa:	int3   
   14003cdab:	int3   
   14003cdac:	int3   
   14003cdad:	int3   
   14003cdae:	int3   
   14003cdaf:	int3   
   14003cdb0:	mov    QWORD PTR [rsp+0x10],rbx
   14003cdb5:	push   rdi
   14003cdb6:	sub    rsp,0x20
   14003cdba:	mov    rdi,rdx
   14003cdbd:	mov    r8,rdx
   14003cdc0:	lea    rdx,[rsp+0x30]
   14003cdc5:	mov    rbx,rcx
   14003cdc8:	call   0x14003bf40
   14003cdcd:	mov    r9,QWORD PTR [rbx+0x58]
   14003cdd1:	mov    rdx,QWORD PTR [rbx+0x60]
   14003cdd5:	cmp    r9,rdx
   14003cdd8:	jne    0x14003cdf8
   14003cdda:	sub    rdx,QWORD PTR [rbx+0x50]
   14003cdde:	mov    rcx,rbx
   14003cde1:	mov    r8,rdx
   14003cde4:	mov    edx,0x7
   14003cde9:	mov    rbx,QWORD PTR [rsp+0x38]
   14003cdee:	add    rsp,0x20
   14003cdf2:	pop    rdi
   14003cdf3:	jmp    0x1400322b0
   14003cdf8:	mov    r8,QWORD PTR [rbx+0x8]
   14003cdfc:	movzx  ecx,BYTE PTR [rdx]
   14003cdff:	mov    rax,QWORD PTR [r8]
   14003ce02:	cmp    BYTE PTR [rcx+rax*1+0x4],0xe
   14003ce07:	jne    0x14003ced2
   14003ce0d:	inc    rdx
   14003ce10:	mov    QWORD PTR [rbx+0x60],rdx
   14003ce14:	cmp    r9,rdx
   14003ce17:	je     0x14003cdda
   14003ce19:	movzx  ecx,BYTE PTR [rdx]
   14003ce1c:	mov    rax,QWORD PTR [r8]
   14003ce1f:	cmp    BYTE PTR [rcx+rax*1+0x4],0xa
   14003ce24:	je     0x14003ceca
   14003ce2a:	lea    rdx,[rsp+0x40]
   14003ce2f:	mov    r8,rdi
   14003ce32:	mov    rcx,rbx
   14003ce35:	call   0x14003bf40
   14003ce3a:	lea    r8,[rsp+0x40]
   14003ce3f:	lea    rdx,[rsp+0x30]
   14003ce44:	mov    rcx,rdi
   14003ce47:	call   0x14003bd80
   14003ce4c:	mov    r8,QWORD PTR [rbx+0x60]
   14003ce50:	mov    rdx,QWORD PTR [rbx+0x8]
   14003ce54:	movzx  ecx,BYTE PTR [r8]
   14003ce58:	mov    rax,QWORD PTR [rdx]
   14003ce5b:	cmp    BYTE PTR [rcx+rax*1+0x4],0xe
   14003ce60:	jne    0x14003cef8
   14003ce66:	inc    r8
   14003ce69:	mov    QWORD PTR [rbx+0x60],r8
   14003ce6d:	cmp    QWORD PTR [rbx+0x58],r8
   14003ce71:	jne    0x14003ce8e
   14003ce73:	sub    r8,QWORD PTR [rbx+0x50]
   14003ce77:	mov    edx,0x7
   14003ce7c:	mov    rcx,rbx
   14003ce7f:	mov    rbx,QWORD PTR [rsp+0x38]
   14003ce84:	add    rsp,0x20
   14003ce88:	pop    rdi
   14003ce89:	jmp    0x1400322b0
   14003ce8e:	movzx  ecx,BYTE PTR [r8]
   14003ce92:	mov    rax,QWORD PTR [rdx]
   14003ce95:	cmp    BYTE PTR [rcx+rax*1+0x4],0xa
   14003ce9a:	jne    0x14003ceaf
   14003ce9c:	lea    rax,[r8-0x1]
   14003cea0:	mov    QWORD PTR [rbx+0x60],rax
   14003cea4:	mov    rbx,QWORD PTR [rsp+0x38]
   14003cea9:	add    rsp,0x20
   14003cead:	pop    rdi
   14003ceae:	ret    
   14003ceaf:	sub    r8,QWORD PTR [rbx+0x50]
   14003ceb3:	mov    edx,0xb
   14003ceb8:	mov    rcx,rbx
   14003cebb:	mov    rbx,QWORD PTR [rsp+0x38]
   14003cec0:	add    rsp,0x20
   14003cec4:	pop    rdi
   14003cec5:	jmp    0x1400322b0
   14003ceca:	lea    rax,[rdx-0x1]
   14003cece:	mov    QWORD PTR [rbx+0x60],rax
   14003ced2:	mov    rdx,QWORD PTR [rdi+0x8]
   14003ced6:	lea    r9,[rsp+0x30]
   14003cedb:	mov    r8d,0x1
   14003cee1:	mov    rcx,rdi
   14003cee4:	call   0x1400348c0
   14003cee9:	cmp    BYTE PTR [rsp+0x31],0x0
   14003ceee:	je     0x14003cef4
   14003cef0:	mov    BYTE PTR [rdi+0x41],0x1
   14003cef4:	mov    BYTE PTR [rdi+0x4c],0x0
   14003cef8:	mov    rbx,QWORD PTR [rsp+0x38]
   14003cefd:	add    rsp,0x20
   14003cf01:	pop    rdi
   14003cf02:	ret    
   14003cf03:	int3   
   14003cf04:	int3   
   14003cf05:	int3   
   14003cf06:	int3   
   14003cf07:	int3   
   14003cf08:	int3   
   14003cf09:	int3   
   14003cf0a:	int3   
   14003cf0b:	int3   
   14003cf0c:	int3   
   14003cf0d:	int3   
   14003cf0e:	int3   
   14003cf0f:	int3   
   14003cf10:	rex push rbp
   14003cf12:	push   rsi
   14003cf13:	push   rdi
   14003cf14:	push   r12
   14003cf16:	push   r13
   14003cf18:	lea    rbp,[rsp-0xe0]
   14003cf20:	sub    rsp,0x1e0
   14003cf27:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14003cf30:	mov    QWORD PTR [rsp+0x220],rbx
   14003cf38:	mov    rax,QWORD PTR [rip+0x2b2b1]        # 0x1400681f0
   14003cf3f:	xor    rax,rsp
   14003cf42:	mov    QWORD PTR [rbp+0xd0],rax
   14003cf49:	mov    rdi,rdx
   14003cf4c:	mov    rbx,rcx
   14003cf4f:	inc    QWORD PTR [rcx+0x60]
   14003cf53:	mov    rdx,QWORD PTR [rcx+0x60]
   14003cf57:	mov    r8,QWORD PTR [rcx+0x58]
   14003cf5b:	cmp    r8,rdx
   14003cf5e:	jne    0x14003cff9
   14003cf64:	mov    QWORD PTR [rbp-0x80],0xf
   14003cf6c:	xor    esi,esi
   14003cf6e:	mov    QWORD PTR [rsp+0x78],rsi
   14003cf73:	mov    BYTE PTR [rsp+0x68],sil
   14003cf78:	xor    eax,eax
   14003cf7a:	or     rcx,0xffffffffffffffff
   14003cf7e:	mov    rdx,QWORD PTR [rip+0x2b72b]        # 0x1400686b0
   14003cf85:	mov    rdi,rdx
   14003cf88:	repnz scas al,BYTE PTR es:[rdi]
   14003cf8a:	not    rcx
   14003cf8d:	lea    r8,[rcx-0x1]
   14003cf91:	lea    rcx,[rsp+0x68]
   14003cf96:	call   0x140005154
   14003cf9b:	nop
   14003cf9c:	mov    rdi,QWORD PTR [rbx+0x60]
   14003cfa0:	sub    rdi,QWORD PTR [rbx+0x50]
   14003cfa4:	mov    QWORD PTR [rbp-0x58],0xf
   14003cfac:	mov    QWORD PTR [rbp-0x60],rsi
   14003cfb0:	mov    BYTE PTR [rbp-0x70],sil
   14003cfb4:	or     r9,0xffffffffffffffff
   14003cfb8:	xor    r8d,r8d
   14003cfbb:	lea    rdx,[rsp+0x68]
   14003cfc0:	lea    rcx,[rbp-0x70]
   14003cfc4:	call   0x1400048b8
   14003cfc9:	mov    QWORD PTR [rsp+0x20],rdi
   14003cfce:	lea    r9,[rbp-0x70]
   14003cfd2:	mov    r8,rdi
   14003cfd5:	lea    edx,[rsi+0x7]
   14003cfd8:	mov    rcx,rbx
   14003cfdb:	call   0x140031400
   14003cfe0:	nop
   14003cfe1:	cmp    QWORD PTR [rbp-0x80],0x10
   14003cfe6:	jb     0x14003cff2
   14003cfe8:	mov    rcx,QWORD PTR [rsp+0x68]
   14003cfed:	call   0x14002b150
   14003cff2:	xor    al,al
   14003cff4:	jmp    0x14003d7da
   14003cff9:	mov    r10,QWORD PTR [rcx+0x8]
   14003cffd:	mov    rcx,QWORD PTR [r10]
   14003d000:	movzx  eax,BYTE PTR [rdx]
   14003d003:	movzx  r9d,BYTE PTR [rax+rcx*1+0x4]
   14003d009:	sub    r9d,0x5
   14003d00d:	je     0x14003d7c5
   14003d013:	sub    r9d,0x1f
   14003d017:	je     0x14003d404
   14003d01d:	dec    r9d
   14003d020:	jne    0x14003d7c5
   14003d026:	lea    rsi,[rdx+0x1]
   14003d02a:	mov    QWORD PTR [rbx+0x60],rsi
   14003d02e:	cmp    r8,rsi
   14003d031:	jne    0x14003d0e1
   14003d037:	mov    QWORD PTR [rbp+0xc0],0xf
   14003d042:	xor    esi,esi
   14003d044:	mov    QWORD PTR [rbp+0xb8],rsi
   14003d04b:	mov    BYTE PTR [rbp+0xa8],sil
   14003d052:	xor    eax,eax
   14003d054:	or     rcx,0xffffffffffffffff
   14003d058:	mov    rdx,QWORD PTR [rip+0x2b651]        # 0x1400686b0
   14003d05f:	mov    rdi,rdx
   14003d062:	repnz scas al,BYTE PTR es:[rdi]
   14003d064:	not    rcx
   14003d067:	lea    r8,[rcx-0x1]
   14003d06b:	lea    rcx,[rbp+0xa8]
   14003d072:	call   0x140005154
   14003d077:	nop
   14003d078:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d07c:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d080:	mov    QWORD PTR [rsp+0x50],0xf
   14003d089:	mov    QWORD PTR [rsp+0x48],rsi
   14003d08e:	mov    BYTE PTR [rsp+0x38],sil
   14003d093:	or     r9,0xffffffffffffffff
   14003d097:	xor    r8d,r8d
   14003d09a:	lea    rdx,[rbp+0xa8]
   14003d0a1:	lea    rcx,[rsp+0x38]
   14003d0a6:	call   0x1400048b8
   14003d0ab:	mov    QWORD PTR [rsp+0x20],rdi
   14003d0b0:	lea    r9,[rsp+0x38]
   14003d0b5:	mov    r8,rdi
   14003d0b8:	lea    edx,[rsi+0x7]
   14003d0bb:	mov    rcx,rbx
   14003d0be:	call   0x140031400
   14003d0c3:	nop
   14003d0c4:	cmp    QWORD PTR [rbp+0xc0],0x10
   14003d0cc:	jb     0x14003d0da
   14003d0ce:	mov    rcx,QWORD PTR [rbp+0xa8]
   14003d0d5:	call   0x14002b150
   14003d0da:	xor    al,al
   14003d0dc:	jmp    0x14003d7da
   14003d0e1:	lea    rax,[rsi+0x1]
   14003d0e5:	mov    QWORD PTR [rbx+0x60],rax
   14003d0e9:	cmp    r8,rax
   14003d0ec:	jne    0x14003d190
   14003d0f2:	mov    QWORD PTR [rbp+0x70],0xf
   14003d0fa:	xor    esi,esi
   14003d0fc:	mov    QWORD PTR [rbp+0x68],rsi
   14003d100:	mov    BYTE PTR [rbp+0x58],sil
   14003d104:	xor    eax,eax
   14003d106:	or     rcx,0xffffffffffffffff
   14003d10a:	mov    rdx,QWORD PTR [rip+0x2b59f]        # 0x1400686b0
   14003d111:	mov    rdi,rdx
   14003d114:	repnz scas al,BYTE PTR es:[rdi]
   14003d116:	not    rcx
   14003d119:	lea    r8,[rcx-0x1]
   14003d11d:	lea    rcx,[rbp+0x58]
   14003d121:	call   0x140005154
   14003d126:	nop
   14003d127:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d12b:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d12f:	mov    QWORD PTR [rsp+0x50],0xf
   14003d138:	mov    QWORD PTR [rsp+0x48],rsi
   14003d13d:	mov    BYTE PTR [rsp+0x38],sil
   14003d142:	or     r9,0xffffffffffffffff
   14003d146:	xor    r8d,r8d
   14003d149:	lea    rdx,[rbp+0x58]
   14003d14d:	lea    rcx,[rsp+0x38]
   14003d152:	call   0x1400048b8
   14003d157:	mov    QWORD PTR [rsp+0x20],rdi
   14003d15c:	lea    r9,[rsp+0x38]
   14003d161:	mov    r8,rdi
   14003d164:	lea    edx,[rsi+0x7]
   14003d167:	mov    rcx,rbx
   14003d16a:	call   0x140031400
   14003d16f:	nop
   14003d170:	cmp    QWORD PTR [rbp+0x70],0x10
   14003d175:	jb     0x14003d180
   14003d177:	mov    rcx,QWORD PTR [rbp+0x58]
   14003d17b:	call   0x14002b150
   14003d180:	xor    al,al
   14003d182:	jmp    0x14003d7da
   14003d187:	nop    WORD PTR [rax+rax*1+0x0]
   14003d190:	mov    rcx,QWORD PTR [r10]
   14003d193:	mov    rdx,QWORD PTR [rbx+0x60]
   14003d197:	movzx  eax,BYTE PTR [rdx]
   14003d19a:	cmp    BYTE PTR [rax+rcx*1+0x4],0x25
   14003d19f:	je     0x14003d1b3
   14003d1a1:	lea    rax,[rdx+0x1]
   14003d1a5:	mov    QWORD PTR [rbx+0x60],rax
   14003d1a9:	mov    rax,QWORD PTR [rbx+0x58]
   14003d1ad:	cmp    QWORD PTR [rbx+0x60],rax
   14003d1b1:	jne    0x14003d190
   14003d1b3:	mov    r9,QWORD PTR [rbx+0x60]
   14003d1b7:	cmp    r8,r9
   14003d1ba:	jne    0x14003d255
   14003d1c0:	mov    QWORD PTR [rbp-0x30],0xf
   14003d1c8:	xor    esi,esi
   14003d1ca:	mov    QWORD PTR [rbp-0x38],rsi
   14003d1ce:	mov    BYTE PTR [rbp-0x48],sil
   14003d1d2:	xor    eax,eax
   14003d1d4:	or     rcx,0xffffffffffffffff
   14003d1d8:	mov    rdx,QWORD PTR [rip+0x2b4d1]        # 0x1400686b0
   14003d1df:	mov    rdi,rdx
   14003d1e2:	repnz scas al,BYTE PTR es:[rdi]
   14003d1e4:	not    rcx
   14003d1e7:	lea    r8,[rcx-0x1]
   14003d1eb:	lea    rcx,[rbp-0x48]
   14003d1ef:	call   0x140005154
   14003d1f4:	nop
   14003d1f5:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d1f9:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d1fd:	mov    QWORD PTR [rsp+0x50],0xf
   14003d206:	mov    QWORD PTR [rsp+0x48],rsi
   14003d20b:	mov    BYTE PTR [rsp+0x38],sil
   14003d210:	or     r9,0xffffffffffffffff
   14003d214:	xor    r8d,r8d
   14003d217:	lea    rdx,[rbp-0x48]
   14003d21b:	lea    rcx,[rsp+0x38]
   14003d220:	call   0x1400048b8
   14003d225:	mov    QWORD PTR [rsp+0x20],rdi
   14003d22a:	lea    r9,[rsp+0x38]
   14003d22f:	mov    r8,rdi
   14003d232:	lea    edx,[rsi+0x7]
   14003d235:	mov    rcx,rbx
   14003d238:	call   0x140031400
   14003d23d:	nop
   14003d23e:	cmp    QWORD PTR [rbp-0x30],0x10
   14003d243:	jb     0x14003d24e
   14003d245:	mov    rcx,QWORD PTR [rbp-0x48]
   14003d249:	call   0x14002b150
   14003d24e:	xor    al,al
   14003d250:	jmp    0x14003d7da
   14003d255:	lea    rax,[r9+0x1]
   14003d259:	mov    QWORD PTR [rbx+0x60],rax
   14003d25d:	cmp    r8,rax
   14003d260:	je     0x14003d35a
   14003d266:	mov    rdx,QWORD PTR [r10]
   14003d269:	movzx  eax,BYTE PTR [rax]
   14003d26c:	cmp    BYTE PTR [rax+rdx*1+0x4],0xa
   14003d271:	jne    0x14003d35a
   14003d277:	mov    r8,rsi
   14003d27a:	lea    rdx,[rsp+0x68]
   14003d27f:	mov    rcx,r10
   14003d282:	call   0x1400380b0
   14003d287:	nop
   14003d288:	mov    rcx,QWORD PTR [rsp+0x78]
   14003d28d:	test   rcx,rcx
   14003d290:	je     0x14003d340
   14003d296:	cmp    rcx,0x2
   14003d29a:	ja     0x14003d340
   14003d2a0:	lea    rax,[rsp+0x68]
   14003d2a5:	mov    rdx,QWORD PTR [rsp+0x68]
   14003d2aa:	mov    r8,QWORD PTR [rbp-0x80]
   14003d2ae:	cmp    r8,0x10
   14003d2b2:	cmovae rax,rdx
   14003d2b6:	movzx  eax,BYTE PTR [rax]
   14003d2b9:	mov    BYTE PTR [rsp+0x30],al
   14003d2bd:	cmp    rcx,0x1
   14003d2c1:	jbe    0x14003d2d6
   14003d2c3:	lea    rax,[rsp+0x68]
   14003d2c8:	cmp    r8,0x10
   14003d2cc:	cmovae rax,rdx
   14003d2d0:	movzx  esi,BYTE PTR [rax+0x1]
   14003d2d4:	jmp    0x14003d2d9
   14003d2d6:	xor    sil,sil
   14003d2d9:	mov    BYTE PTR [rsp+0x31],sil
   14003d2de:	lea    rcx,[rdi+0x50]
   14003d2e2:	lea    r9,[rsp+0x30]
   14003d2e7:	mov    r8d,0x1
   14003d2ed:	mov    rdx,QWORD PTR [rdi+0x58]
   14003d2f1:	call   0x1400348c0
   14003d2f6:	test   sil,sil
   14003d2f9:	je     0x14003d31e
   14003d2fb:	mov    BYTE PTR [rdi+0x41],0x1
   14003d2ff:	lea    r9,[rsp+0x30]
   14003d304:	mov    r8d,0x1
   14003d30a:	mov    rdx,QWORD PTR [rdi+0x8]
   14003d30e:	mov    rcx,rdi
   14003d311:	call   0x1400348c0
   14003d316:	mov    BYTE PTR [rdi+0x41],0x1
   14003d31a:	mov    BYTE PTR [rdi+0x4c],0x0
   14003d31e:	mov    BYTE PTR [rdi+0x4c],0x0
   14003d322:	inc    QWORD PTR [rbx+0x60]
   14003d326:	cmp    QWORD PTR [rbp-0x80],0x10
   14003d32b:	jb     0x14003d7d8
   14003d331:	mov    rcx,QWORD PTR [rsp+0x68]
   14003d336:	call   0x14002b150
   14003d33b:	jmp    0x14003d7d8
   14003d340:	sub    rsi,QWORD PTR [rbx+0x50]
   14003d344:	mov    r8,rsi
   14003d347:	mov    edx,0x3
   14003d34c:	mov    rcx,rbx
   14003d34f:	call   0x1400322b0
   14003d354:	nop
   14003d355:	jmp    0x14003cfe1
   14003d35a:	mov    QWORD PTR [rbp+0x98],0xf
   14003d365:	xor    esi,esi
   14003d367:	mov    QWORD PTR [rbp+0x90],rsi
   14003d36e:	mov    BYTE PTR [rbp+0x80],sil
   14003d375:	xor    eax,eax
   14003d377:	or     rcx,0xffffffffffffffff
   14003d37b:	mov    rdx,QWORD PTR [rip+0x2b32e]        # 0x1400686b0
   14003d382:	mov    rdi,rdx
   14003d385:	repnz scas al,BYTE PTR es:[rdi]
   14003d387:	not    rcx
   14003d38a:	lea    r8,[rcx-0x1]
   14003d38e:	lea    rcx,[rbp+0x80]
   14003d395:	call   0x140005154
   14003d39a:	nop
   14003d39b:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d39f:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d3a3:	mov    QWORD PTR [rsp+0x50],0xf
   14003d3ac:	mov    QWORD PTR [rsp+0x48],rsi
   14003d3b1:	mov    BYTE PTR [rsp+0x38],sil
   14003d3b6:	or     r9,0xffffffffffffffff
   14003d3ba:	xor    r8d,r8d
   14003d3bd:	lea    rdx,[rbp+0x80]
   14003d3c4:	lea    rcx,[rsp+0x38]
   14003d3c9:	call   0x1400048b8
   14003d3ce:	mov    QWORD PTR [rsp+0x20],rdi
   14003d3d3:	lea    r9,[rsp+0x38]
   14003d3d8:	mov    r8,rdi
   14003d3db:	lea    edx,[rsi+0x7]
   14003d3de:	mov    rcx,rbx
   14003d3e1:	call   0x140031400
   14003d3e6:	nop
   14003d3e7:	cmp    QWORD PTR [rbp+0x98],0x10
   14003d3ef:	jb     0x14003d3fd
   14003d3f1:	mov    rcx,QWORD PTR [rbp+0x80]
   14003d3f8:	call   0x14002b150
   14003d3fd:	xor    al,al
   14003d3ff:	jmp    0x14003d7da
   14003d404:	mov    rax,QWORD PTR [rbx]
   14003d407:	mov    ecx,DWORD PTR [rax+0x30]
   14003d40a:	and    ecx,0x103
   14003d410:	cmp    ecx,0x101
   14003d416:	je     0x14003d7c5
   14003d41c:	lea    rsi,[rdx+0x1]
   14003d420:	mov    QWORD PTR [rbx+0x60],rsi
   14003d424:	cmp    r8,rsi
   14003d427:	jne    0x14003d4c2
   14003d42d:	mov    QWORD PTR [rbp+0x48],0xf
   14003d435:	xor    esi,esi
   14003d437:	mov    QWORD PTR [rbp+0x40],rsi
   14003d43b:	mov    BYTE PTR [rbp+0x30],sil
   14003d43f:	xor    eax,eax
   14003d441:	or     rcx,0xffffffffffffffff
   14003d445:	mov    rdx,QWORD PTR [rip+0x2b264]        # 0x1400686b0
   14003d44c:	mov    rdi,rdx
   14003d44f:	repnz scas al,BYTE PTR es:[rdi]
   14003d451:	not    rcx
   14003d454:	lea    r8,[rcx-0x1]
   14003d458:	lea    rcx,[rbp+0x30]
   14003d45c:	call   0x140005154
   14003d461:	nop
   14003d462:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d466:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d46a:	mov    QWORD PTR [rsp+0x50],0xf
   14003d473:	mov    QWORD PTR [rsp+0x48],rsi
   14003d478:	mov    BYTE PTR [rsp+0x38],sil
   14003d47d:	or     r9,0xffffffffffffffff
   14003d481:	xor    r8d,r8d
   14003d484:	lea    rdx,[rbp+0x30]
   14003d488:	lea    rcx,[rsp+0x38]
   14003d48d:	call   0x1400048b8
   14003d492:	mov    QWORD PTR [rsp+0x20],rdi
   14003d497:	lea    r9,[rsp+0x38]
   14003d49c:	mov    r8,rdi
   14003d49f:	lea    edx,[rsi+0x7]
   14003d4a2:	mov    rcx,rbx
   14003d4a5:	call   0x140031400
   14003d4aa:	nop
   14003d4ab:	cmp    QWORD PTR [rbp+0x48],0x10
   14003d4b0:	jb     0x14003d4bb
   14003d4b2:	mov    rcx,QWORD PTR [rbp+0x30]
   14003d4b6:	call   0x14002b150
   14003d4bb:	xor    al,al
   14003d4bd:	jmp    0x14003d7da
   14003d4c2:	lea    r9,[rsi+0x1]
   14003d4c6:	mov    QWORD PTR [rbx+0x60],r9
   14003d4ca:	cmp    r8,r9
   14003d4cd:	jne    0x14003d570
   14003d4d3:	mov    QWORD PTR [rbp-0x8],0xf
   14003d4db:	xor    esi,esi
   14003d4dd:	mov    QWORD PTR [rbp-0x10],rsi
   14003d4e1:	mov    BYTE PTR [rbp-0x20],sil
   14003d4e5:	xor    eax,eax
   14003d4e7:	or     rcx,0xffffffffffffffff
   14003d4eb:	mov    rdx,QWORD PTR [rip+0x2b1be]        # 0x1400686b0
   14003d4f2:	mov    rdi,rdx
   14003d4f5:	repnz scas al,BYTE PTR es:[rdi]
   14003d4f7:	not    rcx
   14003d4fa:	lea    r8,[rcx-0x1]
   14003d4fe:	lea    rcx,[rbp-0x20]
   14003d502:	call   0x140005154
   14003d507:	nop
   14003d508:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d50c:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d510:	mov    QWORD PTR [rsp+0x50],0xf
   14003d519:	mov    QWORD PTR [rsp+0x48],rsi
   14003d51e:	mov    BYTE PTR [rsp+0x38],sil
   14003d523:	or     r9,0xffffffffffffffff
   14003d527:	xor    r8d,r8d
   14003d52a:	lea    rdx,[rbp-0x20]
   14003d52e:	lea    rcx,[rsp+0x38]
   14003d533:	call   0x1400048b8
   14003d538:	mov    QWORD PTR [rsp+0x20],rdi
   14003d53d:	lea    r9,[rsp+0x38]
   14003d542:	mov    r8,rdi
   14003d545:	lea    edx,[rsi+0x7]
   14003d548:	mov    rcx,rbx
   14003d54b:	call   0x140031400
   14003d550:	nop
   14003d551:	cmp    QWORD PTR [rbp-0x8],0x10
   14003d556:	jb     0x14003d561
   14003d558:	mov    rcx,QWORD PTR [rbp-0x20]
   14003d55c:	call   0x14002b150
   14003d561:	xor    al,al
   14003d563:	jmp    0x14003d7da
   14003d568:	nop    DWORD PTR [rax+rax*1+0x0]
   14003d570:	mov    rcx,QWORD PTR [r10]
   14003d573:	mov    rdx,QWORD PTR [rbx+0x60]
   14003d577:	movzx  eax,BYTE PTR [rdx]
   14003d57a:	cmp    BYTE PTR [rax+rcx*1+0x4],0x24
   14003d57f:	je     0x14003d593
   14003d581:	lea    rax,[rdx+0x1]
   14003d585:	mov    QWORD PTR [rbx+0x60],rax
   14003d589:	mov    rax,QWORD PTR [rbx+0x58]
   14003d58d:	cmp    QWORD PTR [rbx+0x60],rax
   14003d591:	jne    0x14003d570
   14003d593:	mov    r12,QWORD PTR [rbx+0x60]
   14003d597:	cmp    r8,r12
   14003d59a:	jne    0x14003d635
   14003d5a0:	mov    QWORD PTR [rbp+0x20],0xf
   14003d5a8:	xor    esi,esi
   14003d5aa:	mov    QWORD PTR [rbp+0x18],rsi
   14003d5ae:	mov    BYTE PTR [rbp+0x8],sil
   14003d5b2:	xor    eax,eax
   14003d5b4:	or     rcx,0xffffffffffffffff
   14003d5b8:	mov    rdx,QWORD PTR [rip+0x2b0f1]        # 0x1400686b0
   14003d5bf:	mov    rdi,rdx
   14003d5c2:	repnz scas al,BYTE PTR es:[rdi]
   14003d5c4:	not    rcx
   14003d5c7:	lea    r8,[rcx-0x1]
   14003d5cb:	lea    rcx,[rbp+0x8]
   14003d5cf:	call   0x140005154
   14003d5d4:	nop
   14003d5d5:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d5d9:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d5dd:	mov    QWORD PTR [rsp+0x50],0xf
   14003d5e6:	mov    QWORD PTR [rsp+0x48],rsi
   14003d5eb:	mov    BYTE PTR [rsp+0x38],sil
   14003d5f0:	or     r9,0xffffffffffffffff
   14003d5f4:	xor    r8d,r8d
   14003d5f7:	lea    rdx,[rbp+0x8]
   14003d5fb:	lea    rcx,[rsp+0x38]
   14003d600:	call   0x1400048b8
   14003d605:	mov    QWORD PTR [rsp+0x20],rdi
   14003d60a:	lea    r9,[rsp+0x38]
   14003d60f:	mov    r8,rdi
   14003d612:	lea    edx,[rsi+0x7]
   14003d615:	mov    rcx,rbx
   14003d618:	call   0x140031400
   14003d61d:	nop
   14003d61e:	cmp    QWORD PTR [rbp+0x20],0x10
   14003d623:	jb     0x14003d62e
   14003d625:	mov    rcx,QWORD PTR [rbp+0x8]
   14003d629:	call   0x14002b150
   14003d62e:	xor    al,al
   14003d630:	jmp    0x14003d7da
   14003d635:	lea    rax,[r12+0x1]
   14003d63a:	mov    QWORD PTR [rbx+0x60],rax
   14003d63e:	cmp    r8,rax
   14003d641:	je     0x14003d733
   14003d647:	mov    rcx,QWORD PTR [r10]
   14003d64a:	movzx  eax,BYTE PTR [rax]
   14003d64d:	cmp    BYTE PTR [rax+rcx*1+0x4],0xa
   14003d652:	jne    0x14003d733
   14003d658:	xor    r13b,r13b
   14003d65b:	movzx  eax,BYTE PTR [rsi]
   14003d65e:	cmp    BYTE PTR [rax+rcx*1+0x4],0x4
   14003d663:	jne    0x14003d66b
   14003d665:	mov    rsi,r9
   14003d668:	mov    r13b,0x1
   14003d66b:	mov    r8,r12
   14003d66e:	mov    rdx,rsi
   14003d671:	call   0x140032560
   14003d676:	test   eax,eax
   14003d678:	jne    0x14003d719
   14003d67e:	cmp    BYTE PTR [rdi+0x4c],al
   14003d681:	je     0x14003d6fe
   14003d683:	sub    r12,rsi
   14003d686:	cmp    r12,0x1
   14003d68a:	jne    0x14003d6fe
   14003d68c:	inc    QWORD PTR [rbx+0x60]
   14003d690:	mov    rcx,QWORD PTR [rbx+0x60]
   14003d694:	cmp    rcx,QWORD PTR [rbx+0x58]
   14003d698:	je     0x14003d6fe
   14003d69a:	mov    rax,QWORD PTR [rbx+0x8]
   14003d69e:	mov    rdx,QWORD PTR [rax]
   14003d6a1:	movzx  eax,BYTE PTR [rcx]
   14003d6a4:	cmp    BYTE PTR [rax+rdx*1+0x4],0xa
   14003d6a9:	jne    0x14003d6fe
   14003d6ab:	movzx  eax,BYTE PTR [rsi]
   14003d6ae:	movzx  edx,BYTE PTR [rax+rdx*1+0x4]
   14003d6b3:	cmp    dl,0x14
   14003d6b6:	jne    0x14003d6d9
   14003d6b8:	lea    rax,[rcx+0x1]
   14003d6bc:	mov    QWORD PTR [rbx+0x60],rax
   14003d6c0:	lea    edx,[r12+0x8]
   14003d6c5:	lea    r8d,[r12+0xf]
   14003d6ca:	mov    rcx,rbx
   14003d6cd:	call   0x14002eb10
   14003d6d2:	xor    al,al
   14003d6d4:	jmp    0x14003d7da
   14003d6d9:	cmp    dl,0x15
   14003d6dc:	jne    0x14003d6fe
   14003d6de:	lea    rax,[rcx+0x1]
   14003d6e2:	mov    QWORD PTR [rbx+0x60],rax
   14003d6e6:	mov    edx,0xa
   14003d6eb:	lea    r8d,[rdx+0x6]
   14003d6ef:	mov    rcx,rbx
   14003d6f2:	call   0x14002eb10
   14003d6f7:	xor    al,al
   14003d6f9:	jmp    0x14003d7da
   14003d6fe:	sub    rsi,QWORD PTR [rbx+0x50]
   14003d702:	mov    r8,rsi
   14003d705:	mov    edx,0x4
   14003d70a:	mov    rcx,rbx
   14003d70d:	call   0x1400322b0
   14003d712:	xor    al,al
   14003d714:	jmp    0x14003d7da
   14003d719:	mov    BYTE PTR [rdi+0x4c],0x0
   14003d71d:	test   r13b,r13b
   14003d720:	jne    0x14003d727
   14003d722:	or     DWORD PTR [rdi+0x44],eax
   14003d725:	jmp    0x14003d72a
   14003d727:	or     DWORD PTR [rdi+0x48],eax
   14003d72a:	inc    QWORD PTR [rbx+0x60]
   14003d72e:	jmp    0x14003d7d8
   14003d733:	mov    QWORD PTR [rbp-0x58],0xf
   14003d73b:	xor    esi,esi
   14003d73d:	mov    QWORD PTR [rbp-0x60],rsi
   14003d741:	mov    BYTE PTR [rbp-0x70],sil
   14003d745:	xor    eax,eax
   14003d747:	or     rcx,0xffffffffffffffff
   14003d74b:	mov    rdx,QWORD PTR [rip+0x2af5e]        # 0x1400686b0
   14003d752:	mov    rdi,rdx
   14003d755:	repnz scas al,BYTE PTR es:[rdi]
   14003d757:	not    rcx
   14003d75a:	lea    r8,[rcx-0x1]
   14003d75e:	lea    rcx,[rbp-0x70]
   14003d762:	call   0x140005154
   14003d767:	nop
   14003d768:	mov    rdi,QWORD PTR [rbx+0x60]
   14003d76c:	sub    rdi,QWORD PTR [rbx+0x50]
   14003d770:	mov    QWORD PTR [rsp+0x50],0xf
   14003d779:	mov    QWORD PTR [rsp+0x48],rsi
   14003d77e:	mov    BYTE PTR [rsp+0x38],sil
   14003d783:	or     r9,0xffffffffffffffff
   14003d787:	xor    r8d,r8d
   14003d78a:	lea    rdx,[rbp-0x70]
   14003d78e:	lea    rcx,[rsp+0x38]
   14003d793:	call   0x1400048b8
   14003d798:	mov    QWORD PTR [rsp+0x20],rdi
   14003d79d:	lea    r9,[rsp+0x38]
   14003d7a2:	mov    r8,rdi
   14003d7a5:	lea    edx,[rsi+0x7]
   14003d7a8:	mov    rcx,rbx
   14003d7ab:	call   0x140031400
   14003d7b0:	nop
   14003d7b1:	cmp    QWORD PTR [rbp-0x58],0x10
   14003d7b6:	jb     0x14003d7c1
   14003d7b8:	mov    rcx,QWORD PTR [rbp-0x70]
   14003d7bc:	call   0x14002b150
   14003d7c1:	xor    al,al
   14003d7c3:	jmp    0x14003d7da
   14003d7c5:	lea    rax,[rdx-0x1]
   14003d7c9:	mov    QWORD PTR [rbx+0x60],rax
   14003d7cd:	mov    rdx,rdi
   14003d7d0:	mov    rcx,rbx
   14003d7d3:	call   0x14003cdb0
   14003d7d8:	mov    al,0x1
   14003d7da:	mov    rcx,QWORD PTR [rbp+0xd0]
   14003d7e1:	xor    rcx,rsp
   14003d7e4:	call   0x14002b100
   14003d7e9:	mov    rbx,QWORD PTR [rsp+0x220]
   14003d7f1:	add    rsp,0x1e0
   14003d7f8:	pop    r13
   14003d7fa:	pop    r12
   14003d7fc:	pop    rdi
   14003d7fd:	pop    rsi
   14003d7fe:	pop    rbp
   14003d7ff:	ret    
   14003d800:	mov    rax,rsp
   14003d803:	push   rbp
   14003d804:	lea    rbp,[rax-0x5f]
   14003d808:	sub    rsp,0xa0
   14003d80f:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14003d817:	mov    QWORD PTR [rax+0x10],rbx
   14003d81b:	mov    QWORD PTR [rax+0x18],rsi
   14003d81f:	mov    QWORD PTR [rax+0x20],rdi
   14003d823:	mov    rdi,rcx
   14003d826:	inc    QWORD PTR [rcx+0x60]
   14003d82a:	mov    r8,QWORD PTR [rcx+0x60]
   14003d82e:	cmp    r8,QWORD PTR [rcx+0x58]
   14003d832:	jne    0x14003d883
   14003d834:	lea    r9,[r8-0x1]
   14003d838:	mov    QWORD PTR [rcx+0x60],r9
   14003d83c:	movzx  r8d,BYTE PTR [r9]
   14003d840:	mov    rax,QWORD PTR [rcx+0x8]
   14003d844:	mov    rdx,QWORD PTR [rax]
   14003d847:	cmp    BYTE PTR [r8+rdx*1+0x4],0xc
   14003d84d:	je     0x14003d869
   14003d84f:	nop
   14003d850:	dec    r9
   14003d853:	mov    QWORD PTR [rdi+0x60],r9
   14003d857:	movzx  edx,BYTE PTR [r9]
   14003d85b:	mov    rax,QWORD PTR [rdi+0x8]
   14003d85f:	mov    rcx,QWORD PTR [rax]
   14003d862:	cmp    BYTE PTR [rdx+rcx*1+0x4],0xc
   14003d867:	jne    0x14003d850
   14003d869:	mov    r8,QWORD PTR [rdi+0x60]
   14003d86d:	sub    r8,QWORD PTR [rdi+0x50]
   14003d871:	mov    edx,0x5
   14003d876:	mov    rcx,rdi
   14003d879:	call   0x1400322b0
   14003d87e:	jmp    0x14003dc76
   14003d883:	xor    ebx,ebx
   14003d885:	mov    QWORD PTR [rbp-0x19],rbx
   14003d889:	mov    QWORD PTR [rbp-0x11],rbx
   14003d88d:	mov    QWORD PTR [rbp-0x9],rbx
   14003d891:	mov    QWORD PTR [rbp+0x7],rbx
   14003d895:	mov    QWORD PTR [rbp+0xf],rbx
   14003d899:	mov    QWORD PTR [rbp+0x17],rbx
   14003d89d:	mov    QWORD PTR [rbp+0x37],rbx
   14003d8a1:	mov    QWORD PTR [rbp+0x3f],rbx
   14003d8a5:	mov    QWORD PTR [rbp+0x47],rbx
   14003d8a9:	xor    al,al
   14003d8ab:	mov    BYTE PTR [rbp+0x28],al
   14003d8ae:	mov    QWORD PTR [rbp+0x2b],rbx
   14003d8b2:	mov    BYTE PTR [rbp+0x33],0x1
   14003d8b6:	movzx  eax,al
   14003d8b9:	mov    esi,0x1
   14003d8be:	test   dl,dl
   14003d8c0:	cmovne eax,esi
   14003d8c3:	mov    BYTE PTR [rbp+0x27],al
   14003d8c6:	movsx  eax,BYTE PTR [r8]
   14003d8ca:	add    eax,0xffffffe0
   14003d8cd:	cmp    eax,0x57
   14003d8d0:	ja     0x14003dbfe
   14003d8d6:	cdqe   
   14003d8d8:	lea    rdx,[rip+0xfffffffffffc2721]        # 0x140000000
   14003d8df:	movzx  eax,BYTE PTR [rdx+rax*1+0x3dcc0]
   14003d8e7:	mov    ecx,DWORD PTR [rdx+rax*4+0x3dc94]
   14003d8ee:	add    rcx,rdx
   14003d8f1:	jmp    rcx
   14003d8f3:	mov    eax,DWORD PTR [rdi+0x38]
   14003d8f6:	jmp    0x14003db5c
   14003d8fb:	mov    eax,DWORD PTR [rdi+0x34]
   14003d8fe:	jmp    0x14003db5c
   14003d903:	mov    WORD PTR [rbp+0x67],0x24
   14003d909:	lea    r9,[rbp+0x67]
   14003d90d:	mov    r8,rsi
   14003d910:	mov    rdx,rbx
   14003d913:	lea    rcx,[rbp-0x19]
   14003d917:	call   0x1400348c0
   14003d91c:	mov    BYTE PTR [rbp+0x33],0x0
   14003d920:	mov    WORD PTR [rbp+0x67],0x26
   14003d926:	lea    r9,[rbp+0x67]
   14003d92a:	mov    r8,rsi
   14003d92d:	mov    rdx,QWORD PTR [rbp-0x11]
   14003d931:	lea    rcx,[rbp-0x19]
   14003d935:	call   0x1400348c0
   14003d93a:	mov    BYTE PTR [rbp+0x33],0x0
   14003d93e:	mov    WORD PTR [rbp+0x67],0x2a
   14003d944:	lea    r9,[rbp+0x67]
   14003d948:	mov    r8,rsi
   14003d94b:	mov    rdx,QWORD PTR [rbp-0x11]
   14003d94f:	lea    rcx,[rbp-0x19]
   14003d953:	call   0x1400348c0
   14003d958:	mov    BYTE PTR [rbp+0x33],0x0
   14003d95c:	mov    WORD PTR [rbp+0x67],0x2b
   14003d962:	lea    r9,[rbp+0x67]
   14003d966:	mov    r8,rsi
   14003d969:	mov    rdx,QWORD PTR [rbp-0x11]
   14003d96d:	lea    rcx,[rbp-0x19]
   14003d971:	call   0x1400348c0
   14003d976:	mov    BYTE PTR [rbp+0x33],0x0
   14003d97a:	mov    WORD PTR [rbp+0x67],0x2d
   14003d980:	lea    r9,[rbp+0x67]
   14003d984:	mov    r8,rsi
   14003d987:	mov    rdx,QWORD PTR [rbp-0x11]
   14003d98b:	lea    rcx,[rbp-0x19]
   14003d98f:	call   0x1400348c0
   14003d994:	mov    BYTE PTR [rbp+0x33],0x0
   14003d998:	mov    WORD PTR [rbp+0x67],0x5f
   14003d99e:	lea    r9,[rbp+0x67]
   14003d9a2:	mov    r8,rsi
   14003d9a5:	mov    rdx,QWORD PTR [rbp-0x11]
   14003d9a9:	lea    rcx,[rbp-0x19]
   14003d9ad:	call   0x1400348c0
   14003d9b2:	mov    BYTE PTR [rbp+0x33],0x0
   14003d9b6:	mov    WORD PTR [rbp+0x67],0x3c
   14003d9bc:	lea    r9,[rbp+0x67]
   14003d9c0:	mov    r8,rsi
   14003d9c3:	mov    rdx,QWORD PTR [rbp-0x11]
   14003d9c7:	lea    rcx,[rbp-0x19]
   14003d9cb:	call   0x1400348c0
   14003d9d0:	mov    WORD PTR [rbp+0x67],0x3e
   14003d9d6:	jmp    0x14003db29
   14003d9db:	mov    rax,QWORD PTR [rdi+0x8]
   14003d9df:	lea    r8,[rip+0x1195f]        # 0x14004f345
   14003d9e6:	lea    rdx,[rip+0x11953]        # 0x14004f340
   14003d9ed:	mov    rcx,QWORD PTR [rax]
   14003d9f0:	call   0x140032560
   14003d9f5:	or     DWORD PTR [rbp+0x2b],eax
   14003d9f8:	jmp    0x14003db41
   14003d9fd:	mov    WORD PTR [rbp+0x67],0x28
   14003da03:	lea    r9,[rbp+0x67]
   14003da07:	mov    r8,rsi
   14003da0a:	mov    rdx,rbx
   14003da0d:	lea    rcx,[rbp-0x19]
   14003da11:	call   0x1400348c0
   14003da16:	mov    BYTE PTR [rbp+0x33],0x0
   14003da1a:	mov    WORD PTR [rbp+0x67],0x5b
   14003da20:	lea    r9,[rbp+0x67]
   14003da24:	mov    r8,rsi
   14003da27:	mov    rdx,QWORD PTR [rbp-0x11]
   14003da2b:	lea    rcx,[rbp-0x19]
   14003da2f:	call   0x1400348c0
   14003da34:	mov    WORD PTR [rbp+0x67],0x7b
   14003da3a:	jmp    0x14003db29
   14003da3f:	mov    WORD PTR [rbp+0x67],0x29
   14003da45:	lea    r9,[rbp+0x67]
   14003da49:	mov    r8,rsi
   14003da4c:	mov    rdx,rbx
   14003da4f:	lea    rcx,[rbp-0x19]
   14003da53:	call   0x1400348c0
   14003da58:	mov    BYTE PTR [rbp+0x33],0x0
   14003da5c:	mov    WORD PTR [rbp+0x67],0x5d
   14003da62:	lea    r9,[rbp+0x67]
   14003da66:	mov    r8,rsi
   14003da69:	mov    rdx,QWORD PTR [rbp-0x11]
   14003da6d:	lea    rcx,[rbp-0x19]
   14003da71:	call   0x1400348c0
   14003da76:	mov    WORD PTR [rbp+0x67],0x7d
   14003da7c:	jmp    0x14003db29
   14003da81:	mov    WORD PTR [rbp+0x67],0x22
   14003da87:	lea    r9,[rbp+0x67]
   14003da8b:	mov    r8,rsi
   14003da8e:	mov    rdx,rbx
   14003da91:	lea    rcx,[rbp-0x19]
   14003da95:	call   0x1400348c0
   14003da9a:	mov    BYTE PTR [rbp+0x33],0x0
   14003da9e:	mov    WORD PTR [rbp+0x67],0x27
   14003daa4:	lea    r9,[rbp+0x67]
   14003daa8:	mov    r8,rsi
   14003daab:	mov    rdx,QWORD PTR [rbp-0x11]
   14003daaf:	lea    rcx,[rbp-0x19]
   14003dab3:	call   0x1400348c0
   14003dab8:	mov    WORD PTR [rbp+0x67],0x60
   14003dabe:	jmp    0x14003db29
   14003dac0:	mov    WORD PTR [rbp+0x67],0x27
   14003dac6:	lea    r9,[rbp+0x67]
   14003daca:	mov    r8,rsi
   14003dacd:	mov    rdx,rbx
   14003dad0:	lea    rcx,[rbp-0x19]
   14003dad4:	call   0x1400348c0
   14003dad9:	mov    BYTE PTR [rbp+0x33],0x0
   14003dadd:	mov    WORD PTR [rbp+0x67],0x2c
   14003dae3:	lea    r9,[rbp+0x67]
   14003dae7:	mov    r8,rsi
   14003daea:	mov    rdx,QWORD PTR [rbp-0x11]
   14003daee:	lea    rcx,[rbp-0x19]
   14003daf2:	call   0x1400348c0
   14003daf7:	mov    WORD PTR [rbp+0x67],0x23
   14003dafd:	jmp    0x14003db29
   14003daff:	mov    WORD PTR [rbp+0x67],0x3b
   14003db05:	mov    rdx,rbx
   14003db08:	jmp    0x14003db31
   14003db0a:	mov    WORD PTR [rbp+0x67],0xa
   14003db10:	lea    r9,[rbp+0x67]
   14003db14:	mov    r8,rsi
   14003db17:	mov    rdx,rbx
   14003db1a:	lea    rcx,[rbp-0x19]
   14003db1e:	call   0x1400348c0
   14003db23:	mov    WORD PTR [rbp+0x67],0xc
   14003db29:	mov    BYTE PTR [rbp+0x33],0x0
   14003db2d:	mov    rdx,QWORD PTR [rbp-0x11]
   14003db31:	lea    r9,[rbp+0x67]
   14003db35:	mov    r8,rsi
   14003db38:	lea    rcx,[rbp-0x19]
   14003db3c:	call   0x1400348c0
   14003db41:	mov    BYTE PTR [rbp+0x33],0x0
   14003db45:	cmp    BYTE PTR [rbp+0x28],0x0
   14003db49:	je     0x14003db63
   14003db4b:	xor    r8d,r8d
   14003db4e:	lea    rdx,[rbp-0x19]
   14003db52:	mov    rcx,rdi
   14003db55:	call   0x1400387a0
   14003db5a:	jmp    0x14003db72
   14003db5c:	mov    DWORD PTR [rbp+0x2b],eax
   14003db5f:	mov    BYTE PTR [rbp+0x33],0x0
   14003db63:	xor    r8d,r8d
   14003db66:	lea    rdx,[rbp-0x19]
   14003db6a:	mov    rcx,rdi
   14003db6d:	call   0x1400380e0
   14003db72:	test   rax,rax
   14003db75:	jne    0x14003db90
   14003db77:	mov    r8,QWORD PTR [rdi+0x60]
   14003db7b:	sub    r8,QWORD PTR [rdi+0x50]
   14003db7f:	lea    edx,[rax+0x4]
   14003db82:	mov    rcx,rdi
   14003db85:	call   0x1400322b0
   14003db8a:	nop
   14003db8b:	jmp    0x14003dc10
   14003db90:	inc    QWORD PTR [rdi+0x60]
   14003db94:	cmp    QWORD PTR [rbp+0x37],0x0
   14003db99:	je     0x14003dbae
   14003db9b:	lea    rcx,[rbp+0x37]
   14003db9f:	call   QWORD PTR [rip+0xb7b3]        # 0x140049358
   14003dba5:	mov    rcx,QWORD PTR [rbp+0x37]
   14003dba9:	call   0x14002b150
   14003dbae:	mov    QWORD PTR [rbp+0x37],rbx
   14003dbb2:	mov    QWORD PTR [rbp+0x3f],rbx
   14003dbb6:	mov    QWORD PTR [rbp+0x47],rbx
   14003dbba:	cmp    QWORD PTR [rbp+0x7],0x0
   14003dbbf:	je     0x14003dbd4
   14003dbc1:	lea    rcx,[rbp+0x7]
   14003dbc5:	call   QWORD PTR [rip+0xb78d]        # 0x140049358
   14003dbcb:	mov    rcx,QWORD PTR [rbp+0x7]
   14003dbcf:	call   0x14002b150
   14003dbd4:	mov    QWORD PTR [rbp+0x7],rbx
   14003dbd8:	mov    QWORD PTR [rbp+0xf],rbx
   14003dbdc:	mov    QWORD PTR [rbp+0x17],rbx
   14003dbe0:	cmp    QWORD PTR [rbp-0x19],0x0
   14003dbe5:	je     0x14003dbfa
   14003dbe7:	lea    rcx,[rbp-0x19]
   14003dbeb:	call   QWORD PTR [rip+0xb767]        # 0x140049358
   14003dbf1:	mov    rcx,QWORD PTR [rbp-0x19]
   14003dbf5:	call   0x14002b150
   14003dbfa:	mov    al,0x1
   14003dbfc:	jmp    0x14003dc78
   14003dbfe:	sub    r8,QWORD PTR [rdi+0x50]
   14003dc02:	mov    edx,0x4
   14003dc07:	mov    rcx,rdi
   14003dc0a:	call   0x1400322b0
   14003dc0f:	nop
   14003dc10:	cmp    QWORD PTR [rbp+0x37],0x0
   14003dc15:	je     0x14003dc2a
   14003dc17:	lea    rcx,[rbp+0x37]
   14003dc1b:	call   QWORD PTR [rip+0xb737]        # 0x140049358
   14003dc21:	mov    rcx,QWORD PTR [rbp+0x37]
   14003dc25:	call   0x14002b150
   14003dc2a:	cmp    QWORD PTR [rbp+0x7],0x0
   14003dc2f:	mov    QWORD PTR [rbp+0x47],rbx
   14003dc33:	mov    QWORD PTR [rbp+0x3f],rbx
   14003dc37:	mov    QWORD PTR [rbp+0x37],rbx
   14003dc3b:	je     0x14003dc50
   14003dc3d:	lea    rcx,[rbp+0x7]
   14003dc41:	call   QWORD PTR [rip+0xb711]        # 0x140049358
   14003dc47:	mov    rcx,QWORD PTR [rbp+0x7]
   14003dc4b:	call   0x14002b150
   14003dc50:	cmp    QWORD PTR [rbp-0x19],0x0
   14003dc55:	mov    QWORD PTR [rbp+0x17],rbx
   14003dc59:	mov    QWORD PTR [rbp+0xf],rbx
   14003dc5d:	mov    QWORD PTR [rbp+0x7],rbx
   14003dc61:	je     0x14003dc76
   14003dc63:	lea    rcx,[rbp-0x19]
   14003dc67:	call   QWORD PTR [rip+0xb6eb]        # 0x140049358
   14003dc6d:	mov    rcx,QWORD PTR [rbp-0x19]
   14003dc71:	call   0x14002b150
   14003dc76:	xor    al,al
   14003dc78:	lea    r11,[rsp+0xa0]
   14003dc80:	mov    rbx,QWORD PTR [r11+0x18]
   14003dc84:	mov    rsi,QWORD PTR [r11+0x20]
   14003dc88:	mov    rdi,QWORD PTR [r11+0x28]
   14003dc8c:	mov    rsp,r11
   14003dc8f:	pop    rbp
   14003dc90:	ret    
   14003dc91:	nop    DWORD PTR [rax]
   14003dc94:	repz fadd DWORD PTR [rbx]
   14003dc97:	add    BYTE PTR [rcx-0x3ffffc26],al
   14003dc9d:	fiadd  DWORD PTR [rbx]
   14003dc9f:	add    ch,bh
   14003dca1:	fld    DWORD PTR [rbx]
   14003dca3:	add    BYTE PTR [rdi],bh
   14003dca5:	fiadd  DWORD PTR [rbx]
   14003dca7:	add    bl,bl
   14003dca9:	fld    DWORD PTR [rbx]
   14003dcab:	add    bh,bh
   14003dcad:	fiadd  DWORD PTR [rbx]
   14003dcaf:	add    BYTE PTR [rdx],cl
   14003dcb1:	fild   DWORD PTR [rbx]
   14003dcb3:	add    BYTE PTR [rbx],al
   14003dcb5:	fld    DWORD PTR [rbx]
   14003dcb7:	add    bl,bh
   14003dcb9:	fadd   DWORD PTR [rbx]
   14003dcbb:	add    dh,bh
   14003dcbd:	fild   DWORD PTR [rbx]
   14003dcbf:	add    BYTE PTR [rax],al
   14003dcc1:	or     al,BYTE PTR [rcx]
   14003dcc3:	or     cl,BYTE PTR [rdx]
   14003dcc5:	or     cl,BYTE PTR [rdx]
   14003dcc7:	add    al,BYTE PTR [rbx]
   14003dcc9:	add    al,0xa
   14003dccb:	or     cl,BYTE PTR [rdx]
   14003dccd:	or     al,BYTE PTR [rip+0xa0a0a0a]        # 0x14a0de6dd
   14003dcd3:	or     cl,BYTE PTR [rdx]
   14003dcd5:	or     cl,BYTE PTR [rdx]
   14003dcd7:	or     cl,BYTE PTR [rdx]
   14003dcd9:	or     cl,BYTE PTR [rdx]
   14003dcdb:	or     al,BYTE PTR [rsi]
   14003dcdd:	or     al,BYTE PTR [rdi]
   14003dcdf:	or     cl,BYTE PTR [rdx]
   14003dce1:	or     cl,BYTE PTR [rdx]
   14003dce3:	or     cl,BYTE PTR [rdx]
   14003dce5:	or     cl,BYTE PTR [rdx]
   14003dce7:	or     cl,BYTE PTR [rdx]
   14003dce9:	or     cl,BYTE PTR [rdx]
   14003dceb:	or     cl,BYTE PTR [rdx]
   14003dced:	or     cl,BYTE PTR [rdx]
   14003dcef:	or     cl,BYTE PTR [rdx]
   14003dcf1:	or     cl,BYTE PTR [rdx]
   14003dcf3:	or     cl,BYTE PTR [rdx]
   14003dcf5:	or     cl,BYTE PTR [rdx]
   14003dcf7:	or     cl,BYTE PTR [rdx]
   14003dcf9:	or     cl,BYTE PTR [rdx]
   14003dcfb:	or     cl,BYTE PTR [rdx]
   14003dcfd:	or     cl,BYTE PTR [rdx]
   14003dcff:	or     BYTE PTR [rdx],cl
   14003dd01:	or     cl,BYTE PTR [rdx]
   14003dd03:	or     cl,BYTE PTR [rdx]
   14003dd05:	or     cl,BYTE PTR [rdx]
   14003dd07:	or     cl,BYTE PTR [rdx]
   14003dd09:	or     cl,BYTE PTR [rdx]
   14003dd0b:	or     cl,BYTE PTR [rdx]
   14003dd0d:	or     cl,BYTE PTR [rdx]
   14003dd0f:	or     cl,BYTE PTR [rdx]
   14003dd11:	or     cl,BYTE PTR [rdx]
   14003dd13:	add    BYTE PTR [rdx],cl
   14003dd15:	or     cl,BYTE PTR [rdx]
   14003dd17:	or     esp,ecx
   14003dd19:	int3   
   14003dd1a:	int3   
   14003dd1b:	int3   
   14003dd1c:	int3   
   14003dd1d:	int3   
   14003dd1e:	int3   
   14003dd1f:	int3   
   14003dd20:	mov    rax,rsp
   14003dd23:	push   rdi
   14003dd24:	sub    rsp,0x70
   14003dd28:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14003dd31:	mov    QWORD PTR [rax+0x18],rbx
   14003dd35:	mov    QWORD PTR [rax+0x20],rsi
   14003dd39:	mov    rax,QWORD PTR [rip+0x2a4b0]        # 0x1400681f0
   14003dd40:	xor    rax,rsp
   14003dd43:	mov    QWORD PTR [rsp+0x60],rax
   14003dd48:	mov    rdi,rdx
   14003dd4b:	mov    rsi,rcx
   14003dd4e:	call   0x14002fad0
   14003dd53:	mov    rbx,rax
   14003dd56:	cmp    rax,QWORD PTR [rsi+0x8]
   14003dd5a:	je     0x14003dd6c
   14003dd5c:	lea    rdx,[rax+0x18]
   14003dd60:	mov    rcx,rdi
   14003dd63:	call   0x140002ec4
   14003dd68:	test   eax,eax
   14003dd6a:	jns    0x14003ddd6
   14003dd6c:	mov    QWORD PTR [rsp+0x48],0xf
   14003dd75:	mov    QWORD PTR [rsp+0x40],0x0
   14003dd7e:	mov    BYTE PTR [rsp+0x30],0x0
   14003dd83:	or     r9,0xffffffffffffffff
   14003dd87:	xor    r8d,r8d
   14003dd8a:	mov    rdx,rdi
   14003dd8d:	lea    rcx,[rsp+0x30]
   14003dd92:	call   0x1400048b8
   14003dd97:	mov    DWORD PTR [rsp+0x58],0x0
   14003dd9f:	lea    rdx,[rsp+0x30]
   14003dda4:	mov    rcx,rsi
   14003dda7:	call   0x1400397a0
   14003ddac:	mov    r9,rax
   14003ddaf:	mov    r8,rbx
   14003ddb2:	lea    rdx,[rsp+0x20]
   14003ddb7:	mov    rcx,rsi
   14003ddba:	call   0x140039530
   14003ddbf:	mov    rbx,QWORD PTR [rsp+0x20]
   14003ddc4:	cmp    QWORD PTR [rsp+0x48],0x10
   14003ddca:	jb     0x14003ddd6
   14003ddcc:	mov    rcx,QWORD PTR [rsp+0x30]
   14003ddd1:	call   0x14002b150
   14003ddd6:	lea    rax,[rbx+0x40]
   14003ddda:	mov    rcx,QWORD PTR [rsp+0x60]
   14003dddf:	xor    rcx,rsp
   14003dde2:	call   0x14002b100
   14003dde7:	lea    r11,[rsp+0x70]
   14003ddec:	mov    rbx,QWORD PTR [r11+0x20]
   14003ddf0:	mov    rsi,QWORD PTR [r11+0x28]
   14003ddf4:	mov    rsp,r11
   14003ddf7:	pop    rdi
   14003ddf8:	ret    
   14003ddf9:	int3   
   14003ddfa:	int3   
   14003ddfb:	int3   
   14003ddfc:	int3   
   14003ddfd:	int3   
   14003ddfe:	int3   
   14003ddff:	int3   
   14003de00:	jmp    0x14003c3d0
   14003de05:	int3   
   14003de06:	int3   
   14003de07:	int3   
   14003de08:	int3   
   14003de09:	int3   
   14003de0a:	int3   
   14003de0b:	int3   
   14003de0c:	int3   
   14003de0d:	int3   
   14003de0e:	int3   
   14003de0f:	int3   
   14003de10:	rex push rbx
   14003de12:	sub    rsp,0x20
   14003de16:	mov    rax,QWORD PTR [rcx+0x58]
   14003de1a:	mov    rbx,rcx
   14003de1d:	movsxd r10,DWORD PTR [rax+0x10]
   14003de21:	movzx  eax,BYTE PTR [rax+0x14]
   14003de25:	mov    BYTE PTR [rcx+0x78],al
   14003de28:	test   r10d,r10d
   14003de2b:	jle    0x14003df12
   14003de31:	test   DWORD PTR [rcx+0x60],0x40000
   14003de38:	jne    0x14003de94
   14003de3a:	mov    rax,QWORD PTR [rcx+0x28]
   14003de3e:	mov    r8,QWORD PTR [rcx+0x10]
   14003de42:	mov    r9,r10
   14003de45:	test   r10d,r10d
   14003de48:	je     0x14003de4e
   14003de4a:	mov    DWORD PTR [r8+0x50],r10d
   14003de4e:	mov    rcx,QWORD PTR [r8]
   14003de51:	add    r9,0x2
   14003de55:	lea    rdx,[r9+r9*2]
   14003de59:	mov    QWORD PTR [rcx+rdx*8+0x8],rax
   14003de5e:	mov    rcx,QWORD PTR [r8]
   14003de61:	mov    BYTE PTR [rcx+rdx*8+0x10],0x1
   14003de66:	cmp    r9,0x2
   14003de6a:	jne    0x14003de94
   14003de6c:	mov    rcx,QWORD PTR [r8]
   14003de6f:	mov    QWORD PTR [rcx],rax
   14003de72:	mov    rdx,QWORD PTR [r8]
   14003de75:	mov    rcx,QWORD PTR [rdx+0x8]
   14003de79:	cmp    QWORD PTR [rdx],rcx
   14003de7c:	setne  cl
   14003de7f:	mov    BYTE PTR [rdx+0x10],cl
   14003de82:	mov    QWORD PTR [r8+0x28],rax
   14003de86:	mov    QWORD PTR [r8+0x30],rax
   14003de8a:	mov    BYTE PTR [r8+0x38],0x0
   14003de8f:	mov    BYTE PTR [r8+0x54],0x0
   14003de94:	mov    rax,QWORD PTR [rbx+0xc0]
   14003de9b:	cmp    QWORD PTR [rbx+0xb8],rax
   14003dea2:	je     0x14003defe
   14003dea4:	mov    rdx,rax
   14003dea7:	cmp    r10d,DWORD PTR [rax-0x70]
   14003deab:	jne    0x14003defe
   14003dead:	mov    rax,QWORD PTR [rax-0x68]
   14003deb1:	mov    rcx,QWORD PTR [rbx+0x10]
   14003deb5:	add    rdx,0xffffffffffffffa0
   14003deb9:	mov    QWORD PTR [rbx+0x58],rax
   14003debd:	call   0x140033be0
   14003dec2:	mov    r11,QWORD PTR [rbx+0xc0]
   14003dec9:	mov    r8,QWORD PTR [r11-0x68]
   14003decd:	mov    edx,DWORD PTR [r11-0x70]
   14003ded1:	lea    r9,[r11-0x60]
   14003ded5:	mov    rcx,rbx
   14003ded8:	call   0x14003a410
   14003dedd:	mov    rcx,QWORD PTR [rbx+0xc0]
   14003dee4:	cmp    QWORD PTR [rbx+0xb8],rcx
   14003deeb:	je     0x14003defe
   14003deed:	add    rcx,0xffffffffffffffa0
   14003def1:	call   0x140020e68
   14003def6:	add    QWORD PTR [rbx+0xc0],0xffffffffffffff90
   14003defe:	mov    rax,QWORD PTR [rbx+0x58]
   14003df02:	mov    rcx,QWORD PTR [rax+0x8]
   14003df06:	mov    al,0x1
   14003df08:	mov    QWORD PTR [rbx+0x58],rcx
   14003df0c:	add    rsp,0x20
   14003df10:	pop    rbx
   14003df11:	ret    
   14003df12:	jns    0x14003defe
   14003df14:	cmp    r10d,0xfffffffc
   14003df18:	je     0x14003defe
   14003df1a:	mov    QWORD PTR [rcx+0x58],0x0
   14003df22:	mov    al,0x1
   14003df24:	add    rsp,0x20
   14003df28:	pop    rbx
   14003df29:	ret    
   14003df2a:	int3   
   14003df2b:	int3   
   14003df2c:	int3   
   14003df2d:	int3   
   14003df2e:	int3   
   14003df2f:	int3   
   14003df30:	rex push rbx
   14003df32:	sub    rsp,0x20
   14003df36:	mov    rax,QWORD PTR [rcx+0xc0]
   14003df3d:	mov    rbx,rcx
   14003df40:	cmp    QWORD PTR [rcx+0xb8],rax
   14003df47:	je     0x14003e002
   14003df4d:	mov    QWORD PTR [rsp+0x30],rsi
   14003df52:	mov    rsi,QWORD PTR [rcx+0x10]
   14003df56:	mov    QWORD PTR [rsp+0x38],rdi
   14003df5b:	mov    rdi,rax
   14003df5e:	mov    rax,QWORD PTR [rax-0x68]
   14003df62:	mov    QWORD PTR [rcx+0x58],rax
   14003df66:	lea    rdx,[rdi-0x60]
   14003df6a:	mov    rcx,rsi
   14003df6d:	call   0x140031d30
   14003df72:	lea    rdx,[rdi-0x20]
   14003df76:	lea    rcx,[rsi+0x40]
   14003df7a:	call   0x14002f1b0
   14003df7f:	mov    r11d,DWORD PTR [rdi-0x10]
   14003df83:	mov    DWORD PTR [rsi+0x50],r11d
   14003df87:	movzx  eax,BYTE PTR [rdi-0xc]
   14003df8b:	mov    BYTE PTR [rsi+0x54],al
   14003df8e:	test   al,al
   14003df90:	jne    0x14003dfb1
   14003df92:	mov    rax,QWORD PTR [rdi-0x40]
   14003df96:	mov    QWORD PTR [rsi+0x20],rax
   14003df9a:	mov    rax,QWORD PTR [rdi-0x38]
   14003df9e:	mov    QWORD PTR [rsi+0x28],rax
   14003dfa2:	mov    rax,QWORD PTR [rdi-0x30]
   14003dfa6:	mov    QWORD PTR [rsi+0x30],rax
   14003dfaa:	movzx  eax,BYTE PTR [rdi-0x28]
   14003dfae:	mov    BYTE PTR [rsi+0x38],al
   14003dfb1:	mov    rax,QWORD PTR [rbx+0xc0]
   14003dfb8:	mov    rcx,rbx
   14003dfbb:	mov    r8,QWORD PTR [rax-0x68]
   14003dfbf:	mov    edx,DWORD PTR [rax-0x70]
   14003dfc2:	lea    r9,[rax-0x60]
   14003dfc6:	call   0x14003a410
   14003dfcb:	mov    rcx,QWORD PTR [rbx+0xc0]
   14003dfd2:	mov    rdi,QWORD PTR [rsp+0x38]
   14003dfd7:	mov    rsi,QWORD PTR [rsp+0x30]
   14003dfdc:	cmp    QWORD PTR [rbx+0xb8],rcx
   14003dfe3:	je     0x14003e0b6
   14003dfe9:	add    rcx,0xffffffffffffffa0
   14003dfed:	call   0x140020e68
   14003dff2:	add    QWORD PTR [rbx+0xc0],0xffffffffffffff90
   14003dffa:	mov    al,0x1
   14003dffc:	add    rsp,0x20
   14003e000:	pop    rbx
   14003e001:	ret    
   14003e002:	test   DWORD PTR [rcx+0x60],0x800
   14003e009:	je     0x14003e027
   14003e00b:	mov    rcx,QWORD PTR [rcx+0x10]
   14003e00f:	xor    edx,edx
   14003e011:	call   0x140031cc0
   14003e016:	mov    rcx,QWORD PTR [rax]
   14003e019:	cmp    QWORD PTR [rbx+0x28],rcx
   14003e01d:	jne    0x14003e027
   14003e01f:	xor    al,al
   14003e021:	add    rsp,0x20
   14003e025:	pop    rbx
   14003e026:	ret    
   14003e027:	mov    ecx,DWORD PTR [rbx+0x60]
   14003e02a:	bt     ecx,0xf
   14003e02e:	jae    0x14003e03a
   14003e030:	mov    rax,QWORD PTR [rbx+0x20]
   14003e034:	cmp    QWORD PTR [rbx+0x28],rax
   14003e038:	jne    0x14003e01f
   14003e03a:	bt     ecx,0xe
   14003e03e:	jae    0x14003e04a
   14003e040:	mov    rax,QWORD PTR [rbx+0x38]
   14003e044:	cmp    QWORD PTR [rbx+0x28],rax
   14003e048:	je     0x14003e01f
   14003e04a:	mov    r8,QWORD PTR [rbx+0x10]
   14003e04e:	mov    rax,QWORD PTR [rbx+0x28]
   14003e052:	mov    rcx,QWORD PTR [r8]
   14003e055:	mov    QWORD PTR [rcx+0x38],rax
   14003e059:	mov    rcx,QWORD PTR [r8]
   14003e05c:	mov    BYTE PTR [rcx+0x40],0x1
   14003e060:	mov    rcx,QWORD PTR [r8]
   14003e063:	mov    QWORD PTR [rcx],rax
   14003e066:	mov    rdx,QWORD PTR [r8]
   14003e069:	mov    rcx,QWORD PTR [rdx+0x8]
   14003e06d:	cmp    QWORD PTR [rdx],rcx
   14003e070:	setne  cl
   14003e073:	mov    BYTE PTR [rdx+0x10],cl
   14003e076:	mov    QWORD PTR [r8+0x28],rax
   14003e07a:	mov    QWORD PTR [r8+0x30],rax
   14003e07e:	mov    BYTE PTR [r8+0x38],0x0
   14003e083:	mov    BYTE PTR [r8+0x54],0x0
   14003e088:	test   DWORD PTR [rbx+0x60],0x20000
   14003e08f:	mov    QWORD PTR [rbx+0x58],0x0
   14003e097:	mov    BYTE PTR [rbx+0x7a],0x1
   14003e09b:	je     0x14003e0b6
   14003e09d:	mov    rdx,QWORD PTR [rbx+0x10]
   14003e0a1:	mov    rcx,QWORD PTR [rbx]
   14003e0a4:	call   0x140034090
   14003e0a9:	test   DWORD PTR [rbx+0x60],0x400
   14003e0b0:	je     0x14003e01f
   14003e0b6:	mov    al,0x1
   14003e0b8:	add    rsp,0x20
   14003e0bc:	pop    rbx
   14003e0bd:	ret    
   14003e0be:	int3   
   14003e0bf:	int3   
   14003e0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14003e0c5:	push   rdi
   14003e0c6:	sub    rsp,0x20
   14003e0ca:	mov    rdi,QWORD PTR [rcx+0xe0]
   14003e0d1:	mov    rbx,rcx
   14003e0d4:	test   dl,dl
   14003e0d6:	jne    0x14003e0f9
   14003e0d8:	mov    rcx,QWORD PTR [rcx+0xc0]
   14003e0df:	cmp    QWORD PTR [rbx+0xb8],rcx
   14003e0e6:	je     0x14003e0f9
   14003e0e8:	add    rcx,0xffffffffffffffa0
   14003e0ec:	call   0x140020e68
   14003e0f1:	add    QWORD PTR [rbx+0xc0],0xffffffffffffff90
   14003e0f9:	lea    rax,[rdi+0x8]
   14003e0fd:	mov    QWORD PTR [rbx+0xe0],rax
   14003e104:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e109:	mov    al,0x1
   14003e10b:	add    rsp,0x20
   14003e10f:	pop    rdi
   14003e110:	ret    
   14003e111:	int3   
   14003e112:	int3   
   14003e113:	int3   
   14003e114:	int3   
   14003e115:	int3   
   14003e116:	int3   
   14003e117:	int3   
   14003e118:	int3   
   14003e119:	int3   
   14003e11a:	int3   
   14003e11b:	int3   
   14003e11c:	int3   
   14003e11d:	int3   
   14003e11e:	int3   
   14003e11f:	int3   
   14003e120:	mov    QWORD PTR [rsp+0x18],rbx
   14003e125:	mov    QWORD PTR [rsp+0x20],rbp
   14003e12a:	push   rdi
   14003e12b:	sub    rsp,0x30
   14003e12f:	mov    rax,QWORD PTR [rcx]
   14003e132:	mov    rbx,r8
   14003e135:	mov    rbp,rdx
   14003e138:	cmp    DWORD PTR [rax+0x34],0x0
   14003e13c:	mov    rdi,rcx
   14003e13f:	jne    0x14003e2ac
   14003e145:	mov    edx,0x6
   14003e14a:	mov    QWORD PTR [rsp+0x40],rsi
   14003e14f:	mov    QWORD PTR [rsp+0x48],r12
   14003e154:	lea    r8d,[rdx+0xa]
   14003e158:	call   0x14002eb10
   14003e15d:	mov    rax,QWORD PTR [rdi]
   14003e160:	mov    r11,rbx
   14003e163:	sub    r11,rbp
   14003e166:	mov    QWORD PTR [rax+0x40],r11
   14003e16a:	mov    rsi,QWORD PTR [rdi]
   14003e16d:	mov    rdx,QWORD PTR [rsi+0x170]
   14003e174:	mov    rax,QWORD PTR [rsi+0x160]
   14003e17b:	lea    r12,[r11+0x1]
   14003e17f:	sub    rax,rdx
   14003e182:	cmp    rax,r12
   14003e185:	jae    0x14003e19d
   14003e187:	sub    rdx,QWORD PTR [rsi+0x168]
   14003e18e:	lea    rcx,[rsi+0x160]
   14003e195:	add    rdx,r12
   14003e198:	call   0x140041bf0
   14003e19d:	mov    r8,QWORD PTR [rsi+0x170]
   14003e1a4:	mov    rcx,rbp
   14003e1a7:	lea    rax,[r8+r12*1]
   14003e1ab:	mov    r12,QWORD PTR [rsp+0x48]
   14003e1b0:	mov    QWORD PTR [rsi+0x170],rax
   14003e1b7:	mov    rax,QWORD PTR [rdi]
   14003e1ba:	mov    rsi,QWORD PTR [rsp+0x40]
   14003e1bf:	mov    QWORD PTR [rax+0x38],r8
   14003e1c3:	cmp    rbp,rbx
   14003e1c6:	je     0x14003e1df
   14003e1c8:	mov    rdx,r8
   14003e1cb:	sub    rdx,rbp
   14003e1ce:	xchg   ax,ax
   14003e1d0:	movzx  eax,BYTE PTR [rcx]
   14003e1d3:	inc    rcx
   14003e1d6:	mov    BYTE PTR [rdx+rcx*1-0x1],al
   14003e1da:	cmp    rcx,rbx
   14003e1dd:	jne    0x14003e1d0
   14003e1df:	sub    r8,rbp
   14003e1e2:	mov    BYTE PTR [r8+rbx*1],0x0
   14003e1e7:	mov    rax,QWORD PTR [rdi]
   14003e1ea:	xor    ebx,ebx
   14003e1ec:	mov    DWORD PTR [rax+0x34],ebx
   14003e1ef:	mov    rcx,QWORD PTR [rdi]
   14003e1f2:	mov    rax,QWORD PTR [rcx+0x168]
   14003e1f9:	mov    QWORD PTR [rcx+0x50],rax
   14003e1fd:	mov    rdx,QWORD PTR [rdi]
   14003e200:	mov    rcx,rdi
   14003e203:	mov    rdx,QWORD PTR [rdx+0x50]
   14003e207:	call   0x14002cce0
   14003e20c:	mov    rax,QWORD PTR [rdi]
   14003e20f:	cmp    BYTE PTR [rdi+0x30],bl
   14003e212:	je     0x14003e235
   14003e214:	mov    BYTE PTR [rax+0x1a0],0x1
   14003e21b:	mov    rdx,QWORD PTR [rdi]
   14003e21e:	mov    rcx,rdi
   14003e221:	mov    rdx,QWORD PTR [rdx+0x50]
   14003e225:	call   0x140031620
   14003e22a:	mov    r11,QWORD PTR [rdi]
   14003e22d:	cmp    DWORD PTR [r11+0x34],ebx
   14003e231:	jne    0x14003e2ac
   14003e233:	jmp    0x14003e23b
   14003e235:	mov    BYTE PTR [rax+0x1a0],bl
   14003e23b:	mov    rdx,QWORD PTR [rdi]
   14003e23e:	mov    rcx,rdi
   14003e241:	mov    rdx,QWORD PTR [rdx+0x50]
   14003e245:	call   0x14003c850
   14003e24a:	mov    rcx,QWORD PTR [rdi]
   14003e24d:	xor    edx,edx
   14003e24f:	add    rcx,0x5c
   14003e253:	mov    r8d,0x100
   14003e259:	call   0x14002b144
   14003e25e:	mov    r11,QWORD PTR [rdi]
   14003e261:	mov    rcx,rdi
   14003e264:	mov    DWORD PTR [r11+0x15c],ebx
   14003e26b:	mov    rdx,QWORD PTR [rdi]
   14003e26e:	mov    QWORD PTR [rdi+0x28],rbx
   14003e272:	lea    r9,[rdx+0x15c]
   14003e279:	lea    r8,[rdx+0x5c]
   14003e27d:	mov    rdx,QWORD PTR [rdx+0x50]
   14003e281:	mov    BYTE PTR [rsp+0x20],0x3
   14003e286:	call   0x14003ad10
   14003e28b:	mov    rbx,QWORD PTR [rdi]
   14003e28e:	mov    rdx,QWORD PTR [rbx+0x50]
   14003e292:	mov    rcx,rdi
   14003e295:	call   0x14002cdd0
   14003e29a:	mov    rcx,rdi
   14003e29d:	mov    DWORD PTR [rbx+0x58],eax
   14003e2a0:	mov    rdx,QWORD PTR [rdi]
   14003e2a3:	mov    rdx,QWORD PTR [rdx+0x50]
   14003e2a7:	call   0x14002ce60
   14003e2ac:	mov    rbx,QWORD PTR [rsp+0x50]
   14003e2b1:	mov    rbp,QWORD PTR [rsp+0x58]
   14003e2b6:	add    rsp,0x30
   14003e2ba:	pop    rdi
   14003e2bb:	ret    
   14003e2bc:	int3   
   14003e2bd:	int3   
   14003e2be:	int3   
   14003e2bf:	int3   
   14003e2c0:	mov    rax,rsp
   14003e2c3:	push   rbp
   14003e2c4:	lea    rbp,[rax-0x38]
   14003e2c8:	sub    rsp,0x130
   14003e2cf:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14003e2d7:	mov    QWORD PTR [rax+0x10],rbx
   14003e2db:	mov    QWORD PTR [rax+0x18],rsi
   14003e2df:	mov    QWORD PTR [rax+0x20],rdi
   14003e2e3:	mov    rax,QWORD PTR [rip+0x29f06]        # 0x1400681f0
   14003e2ea:	xor    rax,rsp
   14003e2ed:	mov    QWORD PTR [rbp+0x28],rax
   14003e2f1:	mov    rdi,rcx
   14003e2f4:	inc    QWORD PTR [rcx+0x60]
   14003e2f8:	mov    rcx,QWORD PTR [rcx+0x60]
   14003e2fc:	mov    r9,QWORD PTR [rdi+0x8]
   14003e300:	mov    rax,QWORD PTR [r9]
   14003e303:	movzx  ebx,BYTE PTR [rcx]
   14003e306:	movzx  eax,BYTE PTR [rbx+rax*1+0x4]
   14003e30b:	dec    eax
   14003e30d:	lea    r10,[rip+0xfffffffffffc1cec]        # 0x140000000
   14003e314:	cmp    eax,0x18
   14003e317:	ja     0x14003e53e
   14003e31d:	cdqe   
   14003e31f:	mov    edx,DWORD PTR [r10+rax*4+0x3e700]
   14003e327:	add    rdx,r10
   14003e32a:	jmp    rdx
   14003e32c:	mov    rcx,rdi
   14003e32f:	call   0x14003aa90
   14003e334:	jmp    0x14003e6da
   14003e339:	mov    rax,QWORD PTR [rdi]
   14003e33c:	test   DWORD PTR [rax+0x30],0x400
   14003e343:	je     0x14003e362
   14003e345:	lea    rax,[rcx+0x1]
   14003e349:	mov    QWORD PTR [rdi+0x60],rax
   14003e34d:	or     r8,0xffffffffffffffff
   14003e351:	lea    edx,[r8+0x2]
   14003e355:	mov    rcx,rdi
   14003e358:	call   0x140032680
   14003e35d:	jmp    0x14003e6da
   14003e362:	mov    rcx,rdi
   14003e365:	call   0x14002f790
   14003e36a:	jmp    0x14003e6da
   14003e36f:	mov    rax,QWORD PTR [rdi]
   14003e372:	mov    edx,DWORD PTR [rax+0x30]
   14003e375:	bt     edx,0xa
   14003e379:	jae    0x14003e3a2
   14003e37b:	lea    rax,[rcx+0x1]
   14003e37f:	mov    QWORD PTR [rdi+0x60],rax
   14003e383:	xor    edx,edx
   14003e385:	lea    r8d,[rdx+0x1]
   14003e389:	mov    rcx,rdi
   14003e38c:	call   0x140032680
   14003e391:	jmp    0x14003e6da
   14003e396:	mov    rax,QWORD PTR [rdi]
   14003e399:	mov    edx,DWORD PTR [rax+0x30]
   14003e39c:	bt     edx,0x9
   14003e3a0:	jae    0x14003e3b3
   14003e3a2:	and    edx,0xa03
   14003e3a8:	cmp    edx,0x800
   14003e3ae:	jmp    0x14003e6b4
   14003e3b3:	lea    rax,[rcx+0x1]
   14003e3b7:	mov    QWORD PTR [rdi+0x60],rax
   14003e3bb:	mov    dl,0x1
   14003e3bd:	mov    rcx,rdi
   14003e3c0:	call   0x140032ac0
   14003e3c5:	jmp    0x14003e6da
   14003e3ca:	mov    rax,QWORD PTR [rdi]
   14003e3cd:	mov    ecx,DWORD PTR [rax+0x30]
   14003e3d0:	bt     ecx,0x9
   14003e3d4:	jae    0x14003e3e7
   14003e3d6:	and    ecx,0xa03
   14003e3dc:	cmp    ecx,0x800
   14003e3e2:	jmp    0x14003e6b4
   14003e3e7:	mov    QWORD PTR [rbp+0x18],0xf
   14003e3ef:	xor    esi,esi
   14003e3f1:	mov    QWORD PTR [rbp+0x10],rsi
   14003e3f5:	mov    BYTE PTR [rbp+0x0],sil
   14003e3f9:	lea    r8d,[rsi+0x3e]
   14003e3fd:	lea    rdx,[rip+0x11014]        # 0x14004f418
   14003e404:	lea    rcx,[rbp+0x0]
   14003e408:	call   0x140005154
   14003e40d:	nop
   14003e40e:	mov    rbx,QWORD PTR [rdi+0x60]
   14003e412:	sub    rbx,QWORD PTR [rdi+0x50]
   14003e416:	mov    QWORD PTR [rsp+0x48],0xf
   14003e41f:	mov    QWORD PTR [rsp+0x40],rsi
   14003e424:	mov    BYTE PTR [rsp+0x30],sil
   14003e429:	or     r9,0xffffffffffffffff
   14003e42d:	xor    r8d,r8d
   14003e430:	lea    rdx,[rbp+0x0]
   14003e434:	lea    rcx,[rsp+0x30]
   14003e439:	call   0x1400048b8
   14003e43e:	mov    QWORD PTR [rsp+0x20],rbx
   14003e443:	lea    r9,[rsp+0x30]
   14003e448:	mov    r8,rbx
   14003e44b:	lea    edx,[rsi+0x9]
   14003e44e:	mov    rcx,rdi
   14003e451:	call   0x140031400
   14003e456:	nop
   14003e457:	cmp    QWORD PTR [rbp+0x18],0x10
   14003e45c:	jb     0x14003e467
   14003e45e:	mov    rcx,QWORD PTR [rbp+0x0]
   14003e462:	call   0x14002b150
   14003e467:	xor    al,al
   14003e469:	jmp    0x14003e6da
   14003e46e:	mov    rax,QWORD PTR [rdi]
   14003e471:	mov    ecx,DWORD PTR [rax+0x30]
   14003e474:	bt     ecx,0xb
   14003e478:	jae    0x14003e3d6
   14003e47e:	mov    rcx,rdi
   14003e481:	call   0x1400330f0
   14003e486:	jmp    0x14003e6da
   14003e48b:	mov    rcx,rdi
   14003e48e:	call   0x14003cca0
   14003e493:	jmp    0x14003e6da
   14003e498:	mov    rax,QWORD PTR [rdi]
   14003e49b:	mov    edx,DWORD PTR [rax+0x30]
   14003e49e:	bt     edx,0xc
   14003e4a2:	jae    0x14003e3a2
   14003e4a8:	mov    edx,0xb
   14003e4ad:	lea    rax,[rcx+0x1]
   14003e4b1:	mov    QWORD PTR [rdi+0x60],rax
   14003e4b5:	mov    r8d,0x10
   14003e4bb:	mov    rcx,rdi
   14003e4be:	call   0x14002eb10
   14003e4c3:	jmp    0x14003e6d8
   14003e4c8:	mov    rax,QWORD PTR [rdi]
   14003e4cb:	mov    edx,DWORD PTR [rax+0x30]
   14003e4ce:	bt     edx,0xc
   14003e4d2:	jae    0x14003e3a2
   14003e4d8:	mov    edx,0xc
   14003e4dd:	jmp    0x14003e4ad
   14003e4df:	mov    rax,QWORD PTR [rdi]
   14003e4e2:	mov    edx,DWORD PTR [rax+0x30]
   14003e4e5:	bt     edx,0xc
   14003e4e9:	jae    0x14003e3a2
   14003e4ef:	mov    edx,0x7
   14003e4f4:	jmp    0x14003e4ad
   14003e4f6:	mov    rax,QWORD PTR [rdi]
   14003e4f9:	mov    edx,DWORD PTR [rax+0x30]
   14003e4fc:	bt     edx,0xc
   14003e500:	jae    0x14003e3a2
   14003e506:	mov    edx,0x8
   14003e50b:	jmp    0x14003e4ad
   14003e50d:	mov    rax,QWORD PTR [rdi]
   14003e510:	mov    edx,DWORD PTR [rax+0x30]
   14003e513:	bt     edx,0xc
   14003e517:	jae    0x14003e3a2
   14003e51d:	mov    edx,0x9
   14003e522:	jmp    0x14003e4ad
   14003e524:	mov    rax,QWORD PTR [rdi]
   14003e527:	mov    edx,DWORD PTR [rax+0x30]
   14003e52a:	bt     edx,0xc
   14003e52e:	jae    0x14003e3a2
   14003e534:	mov    edx,0xa
   14003e539:	jmp    0x14003e4ad
   14003e53e:	mov    rax,QWORD PTR [rdi]
   14003e541:	mov    r8d,DWORD PTR [rax+0x30]
   14003e545:	bt     r8d,0xc
   14003e54a:	jae    0x14003e6a6
   14003e550:	mov    dl,0x1
   14003e552:	movsx  eax,bl
   14003e555:	add    eax,0xffffffbd
   14003e558:	cmp    eax,0x34
   14003e55b:	ja     0x14003e6a6
   14003e561:	cdqe   
   14003e563:	movzx  eax,BYTE PTR [r10+rax*1+0x3e77c]
   14003e56c:	mov    ecx,DWORD PTR [r10+rax*4+0x3e764]
   14003e574:	add    rcx,r10
   14003e577:	jmp    rcx
   14003e579:	xor    dl,dl
   14003e57b:	xor    esi,esi
   14003e57d:	mov    QWORD PTR [rsp+0x60],rsi
   14003e582:	mov    QWORD PTR [rsp+0x68],rsi
   14003e587:	mov    QWORD PTR [rsp+0x70],rsi
   14003e58c:	mov    QWORD PTR [rbp-0x80],rsi
   14003e590:	mov    QWORD PTR [rbp-0x78],rsi
   14003e594:	mov    QWORD PTR [rbp-0x70],rsi
   14003e598:	mov    QWORD PTR [rbp-0x50],rsi
   14003e59c:	mov    QWORD PTR [rbp-0x48],rsi
   14003e5a0:	mov    QWORD PTR [rbp-0x40],rsi
   14003e5a4:	xor    al,al
   14003e5a6:	mov    BYTE PTR [rbp-0x5f],al
   14003e5a9:	mov    DWORD PTR [rbp-0x58],esi
   14003e5ac:	movzx  eax,al
   14003e5af:	mov    ecx,0x1
   14003e5b4:	test   dl,dl
   14003e5b6:	cmovne eax,ecx
   14003e5b9:	mov    BYTE PTR [rbp-0x60],al
   14003e5bc:	mov    eax,DWORD PTR [rdi+0x34]
   14003e5bf:	mov    DWORD PTR [rbp-0x5c],eax
   14003e5c2:	mov    BYTE PTR [rbp-0x54],sil
   14003e5c6:	xor    r8d,r8d
   14003e5c9:	lea    rdx,[rsp+0x60]
   14003e5ce:	mov    rcx,rdi
   14003e5d1:	call   0x1400380e0
   14003e5d6:	test   rax,rax
   14003e5d9:	jne    0x14003e600
   14003e5db:	mov    r8,QWORD PTR [rdi+0x60]
   14003e5df:	sub    r8,QWORD PTR [rdi+0x50]
   14003e5e3:	lea    edx,[rsi+0x4]
   14003e5e6:	mov    rcx,rdi
   14003e5e9:	call   0x1400322b0
   14003e5ee:	nop
   14003e5ef:	lea    rcx,[rsp+0x60]
   14003e5f4:	call   0x1400347d0
   14003e5f9:	xor    al,al
   14003e5fb:	jmp    0x14003e6da
   14003e600:	inc    QWORD PTR [rdi+0x60]
   14003e604:	lea    rcx,[rsp+0x60]
   14003e609:	call   0x1400347d0
   14003e60e:	jmp    0x14003e6d8
   14003e613:	xor    dl,dl
   14003e615:	mov    rcx,rdi
   14003e618:	call   0x14003d800
   14003e61d:	jmp    0x14003e6da
   14003e622:	mov    QWORD PTR [rbp-0x10],0xf
   14003e62a:	xor    esi,esi
   14003e62c:	mov    QWORD PTR [rbp-0x18],rsi
   14003e630:	mov    BYTE PTR [rbp-0x28],sil
   14003e634:	lea    r8d,[rsi+0x71]
   14003e638:	lea    rdx,[rip+0x10d61]        # 0x14004f3a0
   14003e63f:	lea    rcx,[rbp-0x28]
   14003e643:	call   0x140005154
   14003e648:	nop
   14003e649:	mov    rbx,QWORD PTR [rdi+0x60]
   14003e64d:	sub    rbx,QWORD PTR [rdi+0x50]
   14003e651:	mov    QWORD PTR [rsp+0x48],0xf
   14003e65a:	mov    QWORD PTR [rsp+0x40],rsi
   14003e65f:	mov    BYTE PTR [rsp+0x30],sil
   14003e664:	or     r9,0xffffffffffffffff
   14003e668:	xor    r8d,r8d
   14003e66b:	lea    rdx,[rbp-0x28]
   14003e66f:	lea    rcx,[rsp+0x30]
   14003e674:	call   0x1400048b8
   14003e679:	mov    QWORD PTR [rsp+0x20],rbx
   14003e67e:	lea    r9,[rsp+0x30]
   14003e683:	mov    r8,rbx
   14003e686:	lea    edx,[rsi+0x5]
   14003e689:	mov    rcx,rdi
   14003e68c:	call   0x140031400
   14003e691:	nop
   14003e692:	cmp    QWORD PTR [rbp-0x10],0x10
   14003e697:	jb     0x14003e6a2
   14003e699:	mov    rcx,QWORD PTR [rbp-0x28]
   14003e69d:	call   0x14002b150
   14003e6a2:	xor    al,al
   14003e6a4:	jmp    0x14003e6da
   14003e6a6:	and    r8d,0xa03
   14003e6ad:	cmp    r8d,0x800
   14003e6b4:	jne    0x14003e6c9
   14003e6b6:	mov    r8d,DWORD PTR [rdi+0x38]
   14003e6ba:	movzx  edx,bl
   14003e6bd:	mov    rcx,r9
   14003e6c0:	call   0x14002cbd0
   14003e6c5:	test   al,al
   14003e6c7:	jne    0x14003e6d4
   14003e6c9:	movzx  edx,bl
   14003e6cc:	mov    rcx,rdi
   14003e6cf:	call   0x14002ec40
   14003e6d4:	inc    QWORD PTR [rdi+0x60]
   14003e6d8:	mov    al,0x1
   14003e6da:	mov    rcx,QWORD PTR [rbp+0x28]
   14003e6de:	xor    rcx,rsp
   14003e6e1:	call   0x14002b100
   14003e6e6:	lea    r11,[rsp+0x130]
   14003e6ee:	mov    rbx,QWORD PTR [r11+0x18]
   14003e6f2:	mov    rsi,QWORD PTR [r11+0x20]
   14003e6f6:	mov    rdi,QWORD PTR [r11+0x28]
   14003e6fa:	mov    rsp,r11
   14003e6fd:	pop    rbp
   14003e6fe:	ret    
   14003e6ff:	nop
   14003e700:	sub    al,0xe3
   14003e702:	add    eax,DWORD PTR [rax]
   14003e704:	addr32 in al,0x3
   14003e707:	add    BYTE PTR [rsi],bh
   14003e709:	in     eax,0x3
   14003e70b:	add    BYTE PTR [rsi],bh
   14003e70d:	in     eax,0x3
   14003e70f:	add    BYTE PTR [rsi],bh
   14003e711:	in     eax,0x3
   14003e713:	add    BYTE PTR [rsi],bh
   14003e715:	in     eax,0x3
   14003e717:	add    BYTE PTR [rcx],bh
   14003e719:	jrcxz  0x14003e71e
   14003e71b:	add    BYTE PTR [rdi-0x1d],ch
   14003e71e:	add    eax,DWORD PTR [rax]
   14003e720:	ds in  eax,0x3
   14003e723:	add    BYTE PTR [rsi],bh
   14003e725:	in     eax,0x3
   14003e727:	add    BYTE PTR [rsi-0x1c],ch
   14003e72a:	add    eax,DWORD PTR [rax]
   14003e72c:	ds in  eax,0x3
   14003e72f:	add    BYTE PTR [rsi],bh
   14003e731:	in     eax,0x3
   14003e733:	add    BYTE PTR [rsi],bh
   14003e735:	in     eax,0x3
   14003e737:	add    BYTE PTR [rsi-0x35fffc1d],dl
   14003e73d:	jrcxz  0x14003e742
   14003e73f:	add    BYTE PTR [rbx-0x20fffc1c],cl
   14003e745:	in     al,0x3
   14003e747:	add    dh,dh
   14003e749:	in     al,0x3
   14003e74b:	add    BYTE PTR [rip+0x240003e5],cl        # 0x16403eb36
   14003e751:	in     eax,0x3
   14003e753:	add    BYTE PTR [rsi],bh
   14003e755:	in     eax,0x3
   14003e757:	add    BYTE PTR [rsi],bh
   14003e759:	in     eax,0x3
   14003e75b:	add    BYTE PTR [rax-0x37fffc1c],bl
   14003e761:	in     al,0x3
   14003e763:	add    BYTE PTR [rdx],ah
   14003e765:	out    0x3,al
   14003e767:	add    BYTE PTR [rip+0x7b0003e6],dl        # 0x1bb03eb53
   14003e76d:	in     eax,0x3
   14003e76f:	add    BYTE PTR [rbx],dl
   14003e771:	out    0x3,al
   14003e773:	add    BYTE PTR [rcx-0x1b],bh
   14003e776:	add    eax,DWORD PTR [rax]
   14003e778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e779:	out    0x3,al
   14003e77b:	add    BYTE PTR [rax],al
   14003e77d:	add    eax,0x5050505
   14003e782:	add    eax,0x5050505
   14003e787:	add    eax,0x5050505
   14003e78c:	add    DWORD PTR [rip+0x5020505],eax        # 0x14505ec97
   14003e792:	add    eax,0x5050505
   14003e797:	add    eax,0x5050505
   14003e79c:	add    BYTE PTR [rip+0x5050505],al        # 0x14508eca7
   14003e7a2:	add    eax,0x5050505
   14003e7a7:	add    eax,0x5050505
   14003e7ac:	add    eax,DWORD PTR [rip+0xffffffffcc040505]        # 0x10c07ecb7
   14003e7b2:	int3   
   14003e7b3:	int3   
   14003e7b4:	int3   
   14003e7b5:	int3   
   14003e7b6:	int3   
   14003e7b7:	int3   
   14003e7b8:	int3   
   14003e7b9:	int3   
   14003e7ba:	int3   
   14003e7bb:	int3   
   14003e7bc:	int3   
   14003e7bd:	int3   
   14003e7be:	int3   
   14003e7bf:	int3   
   14003e7c0:	mov    rax,rsp
   14003e7c3:	push   rbp
   14003e7c4:	push   r12
   14003e7c6:	push   r13
   14003e7c8:	push   r14
   14003e7ca:	push   r15
   14003e7cc:	lea    rbp,[rax-0x138]
   14003e7d3:	sub    rsp,0x210
   14003e7da:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14003e7e2:	mov    QWORD PTR [rax+0x10],rbx
   14003e7e6:	mov    QWORD PTR [rax+0x18],rsi
   14003e7ea:	mov    QWORD PTR [rax+0x20],rdi
   14003e7ee:	mov    rax,QWORD PTR [rip+0x299fb]        # 0x1400681f0
   14003e7f5:	xor    rax,rsp
   14003e7f8:	mov    QWORD PTR [rbp+0x100],rax
   14003e7ff:	mov    r12,rcx
   14003e802:	inc    QWORD PTR [rcx+0x60]
   14003e806:	mov    r13,QWORD PTR [rcx+0x60]
   14003e80a:	xor    sil,sil
   14003e80d:	mov    rdi,QWORD PTR [rcx+0x8]
   14003e811:	mov    rcx,QWORD PTR [rdi]
   14003e814:	movzx  eax,BYTE PTR [r13+0x0]
   14003e819:	movzx  ecx,BYTE PTR [rax+rcx*1+0x4]
   14003e81e:	add    ecx,0xffffffef
   14003e821:	cmp    ecx,0x2a
   14003e824:	ja     0x14003f1aa
   14003e82a:	movsxd rax,ecx
   14003e82d:	lea    rdx,[rip+0xfffffffffffc17cc]        # 0x140000000
   14003e834:	movzx  eax,BYTE PTR [rdx+rax*1+0x3f244]
   14003e83c:	mov    ecx,DWORD PTR [rdx+rax*4+0x3f1f0]
   14003e843:	add    rcx,rdx
   14003e846:	jmp    rcx
   14003e848:	mov    sil,0x1
   14003e84b:	jmp    0x14003f100
   14003e850:	mov    rcx,r12
   14003e853:	call   0x14003cca0
   14003e858:	jmp    0x14003f1bf
   14003e85d:	mov    edx,0x9
   14003e862:	lea    rax,[r13+0x1]
   14003e866:	mov    QWORD PTR [r12+0x60],rax
   14003e86b:	mov    r8d,0x10
   14003e871:	mov    rcx,r12
   14003e874:	call   0x14002eb10
   14003e879:	jmp    0x14003f1bd
   14003e87e:	mov    edx,0xa
   14003e883:	jmp    0x14003e862
   14003e885:	mov    edx,0xb
   14003e88a:	jmp    0x14003e862
   14003e88c:	mov    edx,0xc
   14003e891:	jmp    0x14003e862
   14003e893:	mov    edx,0x7
   14003e898:	jmp    0x14003e862
   14003e89a:	mov    edx,0x8
   14003e89f:	jmp    0x14003e862
   14003e8a1:	mov    edx,0x14
   14003e8a6:	jmp    0x14003e862
   14003e8a8:	mov    rcx,r12
   14003e8ab:	call   0x140033620
   14003e8b0:	jmp    0x14003f1bf
   14003e8b5:	mov    rcx,r12
   14003e8b8:	call   0x14002ebf0
   14003e8bd:	jmp    0x14003f1bf
   14003e8c2:	mov    edx,0x13
   14003e8c7:	jmp    0x14003e862
   14003e8c9:	mov    edx,0x15
   14003e8ce:	jmp    0x14003e862
   14003e8d0:	mov    sil,0x1
   14003e8d3:	inc    r13
   14003e8d6:	mov    QWORD PTR [r12+0x60],r13
   14003e8db:	mov    r9,QWORD PTR [r12+0x58]
   14003e8e0:	cmp    r13,r9
   14003e8e3:	jne    0x14003e985
   14003e8e9:	mov    QWORD PTR [rbp+0xf0],0xf
   14003e8f4:	xor    ebx,ebx
   14003e8f6:	mov    QWORD PTR [rbp+0xe8],rbx
   14003e8fd:	mov    BYTE PTR [rbp+0xd8],bl
   14003e903:	lea    r8d,[rbx+0x21]
   14003e907:	lea    rdx,[rip+0x10bfa]        # 0x14004f508
   14003e90e:	lea    rcx,[rbp+0xd8]
   14003e915:	call   0x140005154
   14003e91a:	nop
   14003e91b:	mov    rdi,QWORD PTR [r12+0x60]
   14003e920:	sub    rdi,QWORD PTR [r12+0x50]
   14003e925:	mov    QWORD PTR [rsp+0x50],0xf
   14003e92e:	mov    QWORD PTR [rsp+0x48],rbx
   14003e933:	mov    BYTE PTR [rsp+0x38],bl
   14003e937:	or     r9,0xffffffffffffffff
   14003e93b:	xor    r8d,r8d
   14003e93e:	lea    rdx,[rbp+0xd8]
   14003e945:	lea    rcx,[rsp+0x38]
   14003e94a:	call   0x1400048b8
   14003e94f:	mov    QWORD PTR [rsp+0x20],rdi
   14003e954:	lea    r9,[rsp+0x38]
   14003e959:	mov    r8,rdi
   14003e95c:	lea    edx,[rbx+0x5]
   14003e95f:	mov    rcx,r12
   14003e962:	call   0x140031400
   14003e967:	nop
   14003e968:	cmp    QWORD PTR [rbp+0xf0],0x10
   14003e970:	jb     0x14003e97e
   14003e972:	mov    rcx,QWORD PTR [rbp+0xd8]
   14003e979:	call   0x14002b150
   14003e97e:	xor    al,al
   14003e980:	jmp    0x14003f1bf
   14003e985:	mov    rcx,QWORD PTR [rdi]
   14003e988:	movzx  eax,BYTE PTR [r13+0x0]
   14003e98d:	cmp    BYTE PTR [rax+rcx*1+0x4],0xf
   14003e992:	jne    0x14003ea88
   14003e998:	nop    DWORD PTR [rax+rax*1+0x0]
   14003e9a0:	mov    rcx,QWORD PTR [rdi]
   14003e9a3:	mov    rdx,QWORD PTR [r12+0x60]
   14003e9a8:	movzx  eax,BYTE PTR [rdx]
   14003e9ab:	cmp    BYTE PTR [rax+rcx*1+0x4],0x10
   14003e9b0:	je     0x14003e9c7
   14003e9b2:	lea    rax,[rdx+0x1]
   14003e9b6:	mov    QWORD PTR [r12+0x60],rax
   14003e9bb:	mov    rax,QWORD PTR [r12+0x58]
   14003e9c0:	cmp    QWORD PTR [r12+0x60],rax
   14003e9c5:	jne    0x14003e9a0
   14003e9c7:	mov    r8,QWORD PTR [r12+0x60]
   14003e9cc:	cmp    r8,r9
   14003e9cf:	jne    0x14003ea71
   14003e9d5:	mov    QWORD PTR [rbp+0xa0],0xf
   14003e9e0:	xor    ebx,ebx
   14003e9e2:	mov    QWORD PTR [rbp+0x98],rbx
   14003e9e9:	mov    BYTE PTR [rbp+0x88],bl
   14003e9ef:	lea    r8d,[rbx+0x30]
   14003e9f3:	lea    rdx,[rip+0x10ad6]        # 0x14004f4d0
   14003e9fa:	lea    rcx,[rbp+0x88]
   14003ea01:	call   0x140005154
   14003ea06:	nop
   14003ea07:	mov    rdi,QWORD PTR [r12+0x60]
   14003ea0c:	sub    rdi,QWORD PTR [r12+0x50]
   14003ea11:	mov    QWORD PTR [rsp+0x50],0xf
   14003ea1a:	mov    QWORD PTR [rsp+0x48],rbx
   14003ea1f:	mov    BYTE PTR [rsp+0x38],bl
   14003ea23:	or     r9,0xffffffffffffffff
   14003ea27:	xor    r8d,r8d
   14003ea2a:	lea    rdx,[rbp+0x88]
   14003ea31:	lea    rcx,[rsp+0x38]
   14003ea36:	call   0x1400048b8
   14003ea3b:	mov    QWORD PTR [rsp+0x20],rdi
   14003ea40:	lea    r9,[rsp+0x38]
   14003ea45:	mov    r8,rdi
   14003ea48:	lea    edx,[rbx+0x5]
   14003ea4b:	mov    rcx,r12
   14003ea4e:	call   0x140031400
   14003ea53:	nop
   14003ea54:	cmp    QWORD PTR [rbp+0xa0],0x10
   14003ea5c:	jb     0x14003ea6a
   14003ea5e:	mov    rcx,QWORD PTR [rbp+0x88]
   14003ea65:	call   0x14002b150
   14003ea6a:	xor    al,al
   14003ea6c:	jmp    0x14003f1bf
   14003ea71:	lea    rax,[r8+0x1]
   14003ea75:	mov    QWORD PTR [r12+0x60],rax
   14003ea7a:	lea    rdx,[r13+0x1]
   14003ea7e:	mov    rcx,QWORD PTR [rdi]
   14003ea81:	call   0x140032560
   14003ea86:	jmp    0x14003ea99
   14003ea88:	lea    r8,[r13+0x1]
   14003ea8c:	mov    rdx,r13
   14003ea8f:	call   0x140032560
   14003ea94:	inc    QWORD PTR [r12+0x60]
   14003ea99:	mov    edx,eax
   14003ea9b:	xor    ebx,ebx
   14003ea9d:	test   eax,eax
   14003ea9f:	je     0x14003eb35
   14003eaa5:	mov    QWORD PTR [rsp+0x70],rbx
   14003eaaa:	mov    QWORD PTR [rsp+0x78],rbx
   14003eaaf:	mov    QWORD PTR [rbp-0x80],rbx
   14003eab3:	mov    QWORD PTR [rbp-0x70],rbx
   14003eab7:	mov    QWORD PTR [rbp-0x68],rbx
   14003eabb:	mov    QWORD PTR [rbp-0x60],rbx
   14003eabf:	mov    QWORD PTR [rbp-0x40],rbx
   14003eac3:	mov    QWORD PTR [rbp-0x38],rbx
   14003eac7:	mov    QWORD PTR [rbp-0x30],rbx
   14003eacb:	xor    al,al
   14003eacd:	mov    BYTE PTR [rbp-0x4f],al
   14003ead0:	mov    DWORD PTR [rbp-0x48],ebx
   14003ead3:	movzx  eax,al
   14003ead6:	mov    ecx,0x1
   14003eadb:	test   sil,sil
   14003eade:	cmovne eax,ecx
   14003eae1:	mov    BYTE PTR [rbp-0x50],al
   14003eae4:	mov    DWORD PTR [rbp-0x4c],edx
   14003eae7:	mov    BYTE PTR [rbp-0x44],bl
   14003eaea:	xor    r8d,r8d
   14003eaed:	lea    rdx,[rsp+0x70]
   14003eaf2:	mov    rcx,r12
   14003eaf5:	call   0x1400380e0
   14003eafa:	test   rax,rax
   14003eafd:	jne    0x14003eb26
   14003eaff:	mov    r8,QWORD PTR [r12+0x60]
   14003eb04:	sub    r8,QWORD PTR [r12+0x50]
   14003eb09:	lea    edx,[rbx+0x4]
   14003eb0c:	mov    rcx,r12
   14003eb0f:	call   0x1400322b0
   14003eb14:	nop
   14003eb15:	lea    rcx,[rsp+0x70]
   14003eb1a:	call   0x1400347d0
   14003eb1f:	xor    al,al
   14003eb21:	jmp    0x14003f1bf
   14003eb26:	lea    rcx,[rsp+0x70]
   14003eb2b:	call   0x1400347d0
   14003eb30:	jmp    0x14003f1bd
   14003eb35:	mov    QWORD PTR [rbp+0x0],0xf
   14003eb3d:	mov    QWORD PTR [rbp-0x8],rbx
   14003eb41:	mov    BYTE PTR [rbp-0x18],bl
   14003eb44:	mov    r8d,0x4e
   14003eb4a:	lea    rdx,[rip+0x1092f]        # 0x14004f480
   14003eb51:	lea    rcx,[rbp-0x18]
   14003eb55:	call   0x140005154
   14003eb5a:	nop
   14003eb5b:	mov    rdi,QWORD PTR [r12+0x60]
   14003eb60:	sub    rdi,QWORD PTR [r12+0x50]
   14003eb65:	mov    QWORD PTR [rsp+0x50],0xf
   14003eb6e:	mov    QWORD PTR [rsp+0x48],rbx
   14003eb73:	mov    BYTE PTR [rsp+0x38],0x0
   14003eb78:	or     r9,0xffffffffffffffff
   14003eb7c:	xor    r8d,r8d
   14003eb7f:	lea    rdx,[rbp-0x18]
   14003eb83:	lea    rcx,[rsp+0x38]
   14003eb88:	call   0x1400048b8
   14003eb8d:	mov    QWORD PTR [rsp+0x20],rdi
   14003eb92:	lea    r9,[rsp+0x38]
   14003eb97:	mov    r8,rdi
   14003eb9a:	mov    edx,0x4
   14003eb9f:	mov    rcx,r12
   14003eba2:	call   0x140031400
   14003eba7:	nop
   14003eba8:	cmp    QWORD PTR [rbp+0x0],0x10
   14003ebad:	jb     0x14003ebb8
   14003ebaf:	mov    rcx,QWORD PTR [rbp-0x18]
   14003ebb3:	call   0x14002b150
   14003ebb8:	xor    al,al
   14003ebba:	jmp    0x14003f1bf
   14003ebbf:	mov    rax,QWORD PTR [r12]
   14003ebc3:	test   DWORD PTR [rax+0x30],0x203
   14003ebca:	jne    0x14003f100
   14003ebd0:	xor    edx,edx
   14003ebd2:	lea    r8d,[rdx+0x18]
   14003ebd6:	mov    rcx,r12
   14003ebd9:	call   0x14002eb10
   14003ebde:	mov    DWORD PTR [rax+0x10],0xfffffffb
   14003ebe5:	mov    rcx,QWORD PTR [r12]
   14003ebe9:	mov    edx,DWORD PTR [rcx+0x30]
   14003ebec:	shr    edx,0x14
   14003ebef:	and    dl,0x1
   14003ebf2:	mov    BYTE PTR [rax+0x14],dl
   14003ebf5:	mov    rdx,QWORD PTR [r12]
   14003ebf9:	mov    rax,QWORD PTR [rdx+0x168]
   14003ec00:	mov    rcx,QWORD PTR [rdx+0x170]
   14003ec07:	sub    rcx,rax
   14003ec0a:	add    rcx,0x7
   14003ec0e:	and    rcx,0xfffffffffffffff8
   14003ec12:	add    rcx,rax
   14003ec15:	mov    QWORD PTR [rdx+0x170],rcx
   14003ec1c:	inc    QWORD PTR [r12+0x60]
   14003ec21:	jmp    0x14003f1bd
   14003ec26:	mov    rax,QWORD PTR [r12]
   14003ec2a:	test   DWORD PTR [rax+0x30],0x203
   14003ec31:	jne    0x14003f100
   14003ec37:	mov    rsi,QWORD PTR [r12+0x58]
   14003ec3c:	mov    rbx,QWORD PTR [r12+0x50]
   14003ec41:	lea    rdx,[rip+0xf210]        # 0x14004de58
   14003ec48:	mov    QWORD PTR [r12+0x60],rdx
   14003ec4d:	mov    QWORD PTR [r12+0x50],rdx
   14003ec52:	xor    eax,eax
   14003ec54:	or     rcx,0xffffffffffffffff
   14003ec58:	mov    rdi,rdx
   14003ec5b:	repnz scas al,BYTE PTR es:[rdi]
   14003ec5d:	not    rcx
   14003ec60:	dec    rcx
   14003ec63:	add    rcx,rdx
   14003ec66:	mov    QWORD PTR [r12+0x58],rcx
   14003ec6b:	mov    rcx,r12
   14003ec6e:	call   0x14002ccb0
   14003ec73:	lea    rcx,[r13+0x1]
   14003ec77:	mov    QWORD PTR [r12+0x60],rcx
   14003ec7c:	mov    QWORD PTR [r12+0x58],rsi
   14003ec81:	mov    QWORD PTR [r12+0x50],rbx
   14003ec86:	jmp    0x14003f1bf
   14003ec8b:	mov    r15,QWORD PTR [r12]
   14003ec8f:	test   DWORD PTR [r15+0x30],0x203
   14003ec97:	jne    0x14003f100
   14003ec9d:	mov    BYTE PTR [rsp+0x30],0x0
   14003eca2:	inc    r13
   14003eca5:	mov    QWORD PTR [r12+0x60],r13
   14003ecaa:	mov    r14,QWORD PTR [r12+0x58]
   14003ecaf:	cmp    r13,r14
   14003ecb2:	jne    0x14003ed62
   14003ecb8:	mov    QWORD PTR [rbp+0xc8],0xf
   14003ecc3:	xor    ebx,ebx
   14003ecc5:	mov    QWORD PTR [rbp+0xc0],rbx
   14003eccc:	mov    BYTE PTR [rbp+0xb0],bl
   14003ecd2:	xor    eax,eax
   14003ecd4:	or     rcx,0xffffffffffffffff
   14003ecd8:	mov    rdx,QWORD PTR [rip+0x299d9]        # 0x1400686b8
   14003ecdf:	mov    rdi,rdx
   14003ece2:	repnz scas al,BYTE PTR es:[rdi]
   14003ece4:	not    rcx
   14003ece7:	lea    r8,[rcx-0x1]
   14003eceb:	lea    rcx,[rbp+0xb0]
   14003ecf2:	call   0x140005154
   14003ecf7:	nop
   14003ecf8:	mov    rdi,QWORD PTR [r12+0x60]
   14003ecfd:	sub    rdi,QWORD PTR [r12+0x50]
   14003ed02:	mov    QWORD PTR [rsp+0x50],0xf
   14003ed0b:	mov    QWORD PTR [rsp+0x48],rbx
   14003ed10:	mov    BYTE PTR [rsp+0x38],bl
   14003ed14:	or     r9,0xffffffffffffffff
   14003ed18:	xor    r8d,r8d
   14003ed1b:	lea    rdx,[rbp+0xb0]
   14003ed22:	lea    rcx,[rsp+0x38]
   14003ed27:	call   0x1400048b8
   14003ed2c:	mov    QWORD PTR [rsp+0x20],rdi
   14003ed31:	lea    r9,[rsp+0x38]
   14003ed36:	mov    r8,rdi
   14003ed39:	lea    edx,[rbx+0x5]
   14003ed3c:	mov    rcx,r12
   14003ed3f:	call   0x140031400
   14003ed44:	nop
   14003ed45:	cmp    QWORD PTR [rbp+0xc8],0x10
   14003ed4d:	jb     0x14003ed5b
   14003ed4f:	mov    rcx,QWORD PTR [rbp+0xb0]
   14003ed56:	call   0x14002b150
   14003ed5b:	xor    al,al
   14003ed5d:	jmp    0x14003f1bf
   14003ed62:	mov    rcx,QWORD PTR [rdi]
   14003ed65:	movzx  eax,BYTE PTR [r13+0x0]
   14003ed6a:	movzx  edx,BYTE PTR [rax+rcx*1+0x4]
   14003ed6f:	xor    sil,sil
   14003ed72:	cmp    dl,0xf
   14003ed75:	je     0x14003ed85
   14003ed77:	cmp    dl,0x14
   14003ed7a:	je     0x14003ed85
   14003ed7c:	cmp    dl,0x19
   14003ed7f:	jne    0x14003ee4b
   14003ed85:	lea    rax,[r13+0x1]
   14003ed89:	mov    QWORD PTR [r12+0x60],rax
   14003ed8e:	cmp    rax,r14
   14003ed91:	jne    0x14003ee2c
   14003ed97:	mov    QWORD PTR [rbp+0x78],0xf
   14003ed9f:	xor    ebx,ebx
   14003eda1:	mov    QWORD PTR [rbp+0x70],rbx
   14003eda5:	mov    BYTE PTR [rbp+0x60],bl
   14003eda8:	xor    eax,eax
   14003edaa:	or     rcx,0xffffffffffffffff
   14003edae:	mov    rdx,QWORD PTR [rip+0x29903]        # 0x1400686b8
   14003edb5:	mov    rdi,rdx
   14003edb8:	repnz scas al,BYTE PTR es:[rdi]
   14003edba:	not    rcx
   14003edbd:	lea    r8,[rcx-0x1]
   14003edc1:	lea    rcx,[rbp+0x60]
   14003edc5:	call   0x140005154
   14003edca:	nop
   14003edcb:	mov    rdi,QWORD PTR [r12+0x60]
   14003edd0:	sub    rdi,QWORD PTR [r12+0x50]
   14003edd5:	mov    QWORD PTR [rsp+0x50],0xf
   14003edde:	mov    QWORD PTR [rsp+0x48],rbx
   14003ede3:	mov    BYTE PTR [rsp+0x38],bl
   14003ede7:	or     r9,0xffffffffffffffff
   14003edeb:	xor    r8d,r8d
   14003edee:	lea    rdx,[rbp+0x60]
   14003edf2:	lea    rcx,[rsp+0x38]
   14003edf7:	call   0x1400048b8
   14003edfc:	mov    QWORD PTR [rsp+0x20],rdi
   14003ee01:	lea    r9,[rsp+0x38]
   14003ee06:	mov    r8,rdi
   14003ee09:	lea    edx,[rbx+0x5]
   14003ee0c:	mov    rcx,r12
   14003ee0f:	call   0x140031400
   14003ee14:	nop
   14003ee15:	cmp    QWORD PTR [rbp+0x78],0x10
   14003ee1a:	jb     0x14003ee25
   14003ee1c:	mov    rcx,QWORD PTR [rbp+0x60]
   14003ee20:	call   0x14002b150
   14003ee25:	xor    al,al
   14003ee27:	jmp    0x14003f1bf
   14003ee2c:	mov    BYTE PTR [rsp+0x30],0x1
   14003ee31:	cmp    dl,0xf
   14003ee34:	je     0x14003ee48
   14003ee36:	mov    esi,0x15
   14003ee3b:	mov    eax,0x19
   14003ee40:	cmp    dl,0x14
   14003ee43:	cmovne esi,eax
   14003ee46:	jmp    0x14003ee4b
   14003ee48:	mov    sil,0x10
   14003ee4b:	mov    rax,QWORD PTR [r12+0x60]
   14003ee50:	cmp    BYTE PTR [rax],0x2d
   14003ee53:	sete   r13b
   14003ee57:	test   r13b,r13b
   14003ee5a:	je     0x14003ef06
   14003ee60:	inc    rax
   14003ee63:	mov    QWORD PTR [r12+0x60],rax
   14003ee68:	cmp    rax,r14
   14003ee6b:	jne    0x14003ef06
   14003ee71:	mov    QWORD PTR [rbp+0x28],0xf
   14003ee79:	xor    ebx,ebx
   14003ee7b:	mov    QWORD PTR [rbp+0x20],rbx
   14003ee7f:	mov    BYTE PTR [rbp+0x10],bl
   14003ee82:	xor    eax,eax
   14003ee84:	or     rcx,0xffffffffffffffff
   14003ee88:	mov    rdx,QWORD PTR [rip+0x29829]        # 0x1400686b8
   14003ee8f:	mov    rdi,rdx
   14003ee92:	repnz scas al,BYTE PTR es:[rdi]
   14003ee94:	not    rcx
   14003ee97:	lea    r8,[rcx-0x1]
   14003ee9b:	lea    rcx,[rbp+0x10]
   14003ee9f:	call   0x140005154
   14003eea4:	nop
   14003eea5:	mov    rdi,QWORD PTR [r12+0x60]
   14003eeaa:	sub    rdi,QWORD PTR [r12+0x50]
   14003eeaf:	mov    QWORD PTR [rsp+0x50],0xf
   14003eeb8:	mov    QWORD PTR [rsp+0x48],rbx
   14003eebd:	mov    BYTE PTR [rsp+0x38],bl
   14003eec1:	or     r9,0xffffffffffffffff
   14003eec5:	xor    r8d,r8d
   14003eec8:	lea    rdx,[rbp+0x10]
   14003eecc:	lea    rcx,[rsp+0x38]
   14003eed1:	call   0x1400048b8
   14003eed6:	mov    QWORD PTR [rsp+0x20],rdi
   14003eedb:	lea    r9,[rsp+0x38]
   14003eee0:	mov    r8,rdi
   14003eee3:	lea    edx,[rbx+0x5]
   14003eee6:	mov    rcx,r12
   14003eee9:	call   0x140031400
   14003eeee:	nop
   14003eeef:	cmp    QWORD PTR [rbp+0x28],0x10
   14003eef4:	jb     0x14003eeff
   14003eef6:	mov    rcx,QWORD PTR [rbp+0x10]
   14003eefa:	call   0x14002b150
   14003eeff:	xor    al,al
   14003ef01:	jmp    0x14003f1bf
   14003ef06:	mov    rax,QWORD PTR [r12+0x60]
   14003ef0b:	mov    QWORD PTR [rsp+0x60],rax
   14003ef10:	mov    r9,rdi
   14003ef13:	mov    r8d,0xa
   14003ef19:	mov    rdx,r14
   14003ef1c:	lea    rcx,[rsp+0x60]
   14003ef21:	call   0x14002eda0
   14003ef26:	mov    ebx,eax
   14003ef28:	test   eax,eax
   14003ef2a:	jns    0x14003ef79
   14003ef2c:	test   sil,sil
   14003ef2f:	je     0x14003ef79
   14003ef31:	mov    rcx,QWORD PTR [r12+0x60]
   14003ef36:	cmp    rcx,r14
   14003ef39:	je     0x14003ef68
   14003ef3b:	nop    DWORD PTR [rax+rax*1+0x0]
   14003ef40:	mov    rdx,QWORD PTR [rdi]
   14003ef43:	mov    r8,QWORD PTR [r12+0x60]
   14003ef48:	movzx  eax,BYTE PTR [r8]
   14003ef4c:	cmp    BYTE PTR [rax+rdx*1+0x4],sil
   14003ef51:	je     0x14003ef68
   14003ef53:	lea    rax,[r8+0x1]
   14003ef57:	mov    QWORD PTR [r12+0x60],rax
   14003ef5c:	mov    rax,QWORD PTR [r12+0x58]
   14003ef61:	cmp    QWORD PTR [r12+0x60],rax
   14003ef66:	jne    0x14003ef40
   14003ef68:	mov    rdi,QWORD PTR [r12+0x60]
   14003ef6d:	mov    rdx,rdi
   14003ef70:	call   0x14002d8c0
   14003ef75:	mov    ebx,eax
   14003ef77:	jmp    0x14003ef7e
   14003ef79:	mov    rdi,QWORD PTR [rsp+0x60]
   14003ef7e:	test   r13b,r13b
   14003ef81:	je     0x14003ef8d
   14003ef83:	mov    eax,DWORD PTR [r12+0x68]
   14003ef88:	sub    eax,ebx
   14003ef8a:	lea    ebx,[rax+0x1]
   14003ef8d:	test   ebx,ebx
   14003ef8f:	jle    0x14003efa1
   14003ef91:	lea    ecx,[rbx-0x1]
   14003ef94:	movzx  edx,cl
   14003ef97:	mov    eax,DWORD PTR [r12+0x24]
   14003ef9c:	bt     eax,edx
   14003ef9f:	jb     0x14003efdc
   14003efa1:	cmp    ebx,0x2710
   14003efa7:	jle    0x14003f0d1
   14003efad:	mov    edx,ebx
   14003efaf:	mov    rcx,r15
   14003efb2:	call   0x140030450
   14003efb7:	test   eax,eax
   14003efb9:	jle    0x14003f0d1
   14003efbf:	mov    edx,ebx
   14003efc1:	mov    rcx,r15
   14003efc4:	call   0x140030450
   14003efc9:	dec    eax
   14003efcb:	movzx  ecx,al
   14003efce:	mov    eax,DWORD PTR [r12+0x24]
   14003efd3:	bt     eax,ecx
   14003efd6:	jae    0x14003f0d1
   14003efdc:	mov    QWORD PTR [r12+0x60],rdi
   14003efe1:	mov    edx,0xd
   14003efe6:	lea    r8d,[rdx+0xb]
   14003efea:	mov    rcx,r12
   14003efed:	call   0x14002eb10
   14003eff2:	mov    DWORD PTR [rax+0x10],ebx
   14003eff5:	mov    rcx,QWORD PTR [r12]
   14003eff9:	mov    edx,DWORD PTR [rcx+0x30]
   14003effc:	shr    edx,0x14
   14003efff:	and    dl,0x1
   14003f002:	mov    BYTE PTR [rax+0x14],dl
   14003f005:	mov    QWORD PTR [r12+0x60],rdi
   14003f00a:	cmp    BYTE PTR [rsp+0x30],0x0
   14003f00f:	je     0x14003f1bd
   14003f015:	cmp    rdi,QWORD PTR [r12+0x58]
   14003f01a:	je     0x14003f03c
   14003f01c:	mov    rax,QWORD PTR [r12+0x8]
   14003f021:	mov    rcx,QWORD PTR [rax]
   14003f024:	movzx  eax,BYTE PTR [rdi]
   14003f027:	cmp    BYTE PTR [rax+rcx*1+0x4],sil
   14003f02c:	jne    0x14003f03c
   14003f02e:	lea    rax,[rdi+0x1]
   14003f032:	mov    QWORD PTR [r12+0x60],rax
   14003f037:	jmp    0x14003f1bd
   14003f03c:	mov    QWORD PTR [rbp+0x50],0xf
   14003f044:	xor    ebx,ebx
   14003f046:	mov    QWORD PTR [rbp+0x48],rbx
   14003f04a:	mov    BYTE PTR [rbp+0x38],bl
   14003f04d:	xor    eax,eax
   14003f04f:	or     rcx,0xffffffffffffffff
   14003f053:	mov    rdx,QWORD PTR [rip+0x2965e]        # 0x1400686b8
   14003f05a:	mov    rdi,rdx
   14003f05d:	repnz scas al,BYTE PTR es:[rdi]
   14003f05f:	not    rcx
   14003f062:	lea    r8,[rcx-0x1]
   14003f066:	lea    rcx,[rbp+0x38]
   14003f06a:	call   0x140005154
   14003f06f:	nop
   14003f070:	mov    rdi,QWORD PTR [r12+0x60]
   14003f075:	sub    rdi,QWORD PTR [r12+0x50]
   14003f07a:	mov    QWORD PTR [rsp+0x50],0xf
   14003f083:	mov    QWORD PTR [rsp+0x48],rbx
   14003f088:	mov    BYTE PTR [rsp+0x38],bl
   14003f08c:	or     r9,0xffffffffffffffff
   14003f090:	xor    r8d,r8d
   14003f093:	lea    rdx,[rbp+0x38]
   14003f097:	lea    rcx,[rsp+0x38]
   14003f09c:	call   0x1400048b8
   14003f0a1:	mov    QWORD PTR [rsp+0x20],rdi
   14003f0a6:	lea    r9,[rsp+0x38]
   14003f0ab:	mov    r8,rdi
   14003f0ae:	lea    edx,[rbx+0x5]
   14003f0b1:	mov    rcx,r12
   14003f0b4:	call   0x140031400
   14003f0b9:	nop
   14003f0ba:	cmp    QWORD PTR [rbp+0x50],0x10
   14003f0bf:	jb     0x14003f0ca
   14003f0c1:	mov    rcx,QWORD PTR [rbp+0x38]
   14003f0c5:	call   0x14002b150
   14003f0ca:	xor    al,al
   14003f0cc:	jmp    0x14003f1bf
   14003f0d1:	mov    r8,QWORD PTR [r12+0x60]
   14003f0d6:	sub    r8,QWORD PTR [r12+0x50]
   14003f0db:	mov    edx,0x6
   14003f0e0:	mov    rcx,r12
   14003f0e3:	call   0x1400322b0
   14003f0e8:	xor    al,al
   14003f0ea:	jmp    0x14003f1bf
   14003f0ef:	mov    rax,QWORD PTR [r12]
   14003f0f3:	test   DWORD PTR [rax+0x30],0x203
   14003f0fa:	jne    0x14003f1aa
   14003f100:	lea    r8,[r13+0x1]
   14003f104:	mov    rdx,r13
   14003f107:	mov    rcx,QWORD PTR [rdi]
   14003f10a:	call   0x140032560
   14003f10f:	mov    edx,eax
   14003f111:	test   eax,eax
   14003f113:	je     0x14003f1aa
   14003f119:	xor    ebx,ebx
   14003f11b:	mov    QWORD PTR [rsp+0x70],rbx
   14003f120:	mov    QWORD PTR [rsp+0x78],rbx
   14003f125:	mov    QWORD PTR [rbp-0x80],rbx
   14003f129:	mov    QWORD PTR [rbp-0x70],rbx
   14003f12d:	mov    QWORD PTR [rbp-0x68],rbx
   14003f131:	mov    QWORD PTR [rbp-0x60],rbx
   14003f135:	mov    QWORD PTR [rbp-0x40],rbx
   14003f139:	mov    QWORD PTR [rbp-0x38],rbx
   14003f13d:	mov    QWORD PTR [rbp-0x30],rbx
   14003f141:	xor    al,al
   14003f143:	mov    BYTE PTR [rbp-0x4f],al
   14003f146:	mov    DWORD PTR [rbp-0x48],ebx
   14003f149:	movzx  eax,al
   14003f14c:	mov    ecx,0x1
   14003f151:	test   sil,sil
   14003f154:	cmovne eax,ecx
   14003f157:	mov    BYTE PTR [rbp-0x50],al
   14003f15a:	mov    DWORD PTR [rbp-0x4c],edx
   14003f15d:	mov    BYTE PTR [rbp-0x44],bl
   14003f160:	xor    r8d,r8d
   14003f163:	lea    rdx,[rsp+0x70]
   14003f168:	mov    rcx,r12
   14003f16b:	call   0x1400380e0
   14003f170:	test   rax,rax
   14003f173:	jne    0x14003f199
   14003f175:	mov    r8,QWORD PTR [r12+0x60]
   14003f17a:	sub    r8,QWORD PTR [r12+0x50]
   14003f17f:	lea    edx,[rbx+0x4]
   14003f182:	mov    rcx,r12
   14003f185:	call   0x1400322b0
   14003f18a:	nop
   14003f18b:	lea    rcx,[rsp+0x70]
   14003f190:	call   0x1400347d0
   14003f195:	xor    al,al
   14003f197:	jmp    0x14003f1bf
   14003f199:	inc    QWORD PTR [r12+0x60]
   14003f19e:	lea    rcx,[rsp+0x70]
   14003f1a3:	call   0x1400347d0
   14003f1a8:	jmp    0x14003f1bd
   14003f1aa:	mov    rcx,r12
   14003f1ad:	call   0x14003b360
   14003f1b2:	movzx  edx,al
   14003f1b5:	mov    rcx,r12
   14003f1b8:	call   0x14002ec40
   14003f1bd:	mov    al,0x1
   14003f1bf:	mov    rcx,QWORD PTR [rbp+0x100]
   14003f1c6:	xor    rcx,rsp
   14003f1c9:	call   0x14002b100
   14003f1ce:	lea    r11,[rsp+0x210]
   14003f1d6:	mov    rbx,QWORD PTR [r11+0x38]
   14003f1da:	mov    rsi,QWORD PTR [r11+0x40]
   14003f1de:	mov    rdi,QWORD PTR [r11+0x48]
   14003f1e2:	mov    rsp,r11
   14003f1e5:	pop    r15
   14003f1e7:	pop    r14
   14003f1e9:	pop    r13
   14003f1eb:	pop    r12
   14003f1ed:	pop    rbp
   14003f1ee:	ret    
   14003f1ef:	nop
   14003f1f0:	push   rax
   14003f1f1:	call   0x12896f1f9
   14003f1f6:	add    eax,DWORD PTR [rax]
   14003f1f8:	(bad)  
   14003f1f9:	call   0x12860f201
   14003f1fe:	add    eax,DWORD PTR [rax]
   14003f200:	jle    0x14003f1ea
   14003f202:	add    eax,DWORD PTR [rax]
   14003f204:	add    cl,dh
   14003f206:	add    eax,DWORD PTR [rax]
   14003f208:	call   0x12888f211
   14003f20e:	add    eax,DWORD PTR [rax]
   14003f210:	mov    eax,gs
   14003f212:	add    eax,DWORD PTR [rax]
   14003f214:	out    dx,eax
   14003f215:	lock add eax,DWORD PTR [rax]
   14003f218:	test   al,0xe8
   14003f21a:	add    eax,DWORD PTR [rax]
   14003f21c:	ret    0x3e8
   14003f21f:	add    BYTE PTR [rbp-0x5efffc18],dh
   14003f225:	call   0x128ccf22d
   14003f22a:	add    eax,DWORD PTR [rax]
   14003f22c:	shr    eax,cl
   14003f22e:	add    eax,DWORD PTR [rax]
   14003f230:	shr    al,1
   14003f232:	add    eax,DWORD PTR [rax]
   14003f234:	mov    ebp,esp
   14003f236:	add    eax,DWORD PTR [rax]
   14003f238:	mov    edi,0x260003eb
   14003f23d:	in     al,dx
   14003f23e:	add    eax,DWORD PTR [rax]
   14003f240:	stos   BYTE PTR es:[rdi],al
   14003f241:	icebp  
   14003f242:	add    eax,DWORD PTR [rax]
   14003f244:	add    BYTE PTR [rcx],al
   14003f246:	add    al,BYTE PTR [rbx]
   14003f248:	add    al,0x5
   14003f24a:	(bad)  
   14003f24b:	(bad)  
   14003f24c:	or     BYTE PTR [rsp+rdx*1],dl
   14003f24f:	adc    al,0x14
   14003f251:	adc    al,0x14
   14003f253:	adc    al,0x9
   14003f255:	adc    al,0x14
   14003f257:	adc    al,0x14
   14003f259:	adc    al,0x14
   14003f25b:	adc    al,0x14
   14003f25d:	adc    al,0x14
   14003f25f:	adc    al,0x14
   14003f261:	adc    al,0x14
   14003f263:	or     cl,BYTE PTR [rbx]
   14003f265:	or     al,0xd
   14003f267:	(bad)  
   14003f268:	adc    al,0xf
   14003f26a:	adc    BYTE PTR [rcx+rdx*1],dl
   14003f26d:	adc    dl,BYTE PTR [rbx]
   14003f26f:	int3   
   14003f270:	mov    rax,rsp
   14003f273:	push   rbp
   14003f274:	push   rdi
   14003f275:	push   r12
   14003f277:	lea    rbp,[rax-0x5f]
   14003f27b:	sub    rsp,0x100
   14003f282:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14003f28a:	mov    QWORD PTR [rax+0x10],rbx
   14003f28e:	mov    QWORD PTR [rax+0x18],rsi
   14003f292:	mov    rax,QWORD PTR [rip+0x28f57]        # 0x1400681f0
   14003f299:	xor    rax,rsp
   14003f29c:	mov    QWORD PTR [rbp+0x3f],rax
   14003f2a0:	mov    rbx,rcx
   14003f2a3:	inc    QWORD PTR [rcx+0x60]
   14003f2a7:	mov    r12,QWORD PTR [rcx+0x60]
   14003f2ab:	xor    esi,esi
   14003f2ad:	cmp    r12,QWORD PTR [rcx+0x58]
   14003f2b1:	jne    0x14003f345
   14003f2b7:	mov    QWORD PTR [rbp+0x2f],0xf
   14003f2bf:	mov    QWORD PTR [rbp+0x27],rsi
   14003f2c3:	mov    BYTE PTR [rbp+0x17],sil
   14003f2c7:	xor    eax,eax
   14003f2c9:	or     rcx,0xffffffffffffffff
   14003f2cd:	mov    rdx,QWORD PTR [rip+0x293ec]        # 0x1400686c0
   14003f2d4:	mov    rdi,rdx
   14003f2d7:	repnz scas al,BYTE PTR es:[rdi]
   14003f2d9:	not    rcx
   14003f2dc:	lea    r8,[rcx-0x1]
   14003f2e0:	lea    rcx,[rbp+0x17]
   14003f2e4:	call   0x140005154
   14003f2e9:	nop
   14003f2ea:	mov    rdi,QWORD PTR [rbx+0x60]
   14003f2ee:	sub    rdi,QWORD PTR [rbx+0x50]
   14003f2f2:	mov    QWORD PTR [rbp+0x7],0xf
   14003f2fa:	mov    QWORD PTR [rbp-0x1],rsi
   14003f2fe:	mov    BYTE PTR [rbp-0x11],sil
   14003f302:	or     r9,0xffffffffffffffff
   14003f306:	xor    r8d,r8d
   14003f309:	lea    rdx,[rbp+0x17]
   14003f30d:	lea    rcx,[rbp-0x11]
   14003f311:	call   0x1400048b8
   14003f316:	mov    QWORD PTR [rsp+0x20],rdi
   14003f31b:	lea    r9,[rbp-0x11]
   14003f31f:	mov    r8,rdi
   14003f322:	lea    edx,[rsi+0x7]
   14003f325:	mov    rcx,rbx
   14003f328:	call   0x140031400
   14003f32d:	nop
   14003f32e:	cmp    QWORD PTR [rbp+0x2f],0x10
   14003f333:	jb     0x14003f33e
   14003f335:	mov    rcx,QWORD PTR [rbp+0x17]
   14003f339:	call   0x14002b150
   14003f33e:	xor    al,al
   14003f340:	jmp    0x14003f52c
   14003f345:	mov    QWORD PTR [rsp+0x30],rsi
   14003f34a:	mov    QWORD PTR [rsp+0x38],rsi
   14003f34f:	mov    QWORD PTR [rbp-0x79],rsi
   14003f353:	mov    QWORD PTR [rbp-0x69],rsi
   14003f357:	mov    QWORD PTR [rbp-0x61],rsi
   14003f35b:	mov    QWORD PTR [rbp-0x59],rsi
   14003f35f:	mov    QWORD PTR [rbp-0x39],rsi
   14003f363:	mov    QWORD PTR [rbp-0x31],rsi
   14003f367:	mov    QWORD PTR [rbp-0x29],rsi
   14003f36b:	mov    WORD PTR [rbp-0x49],si
   14003f36f:	mov    QWORD PTR [rbp-0x45],rsi
   14003f373:	mov    BYTE PTR [rbp-0x3d],0x1
   14003f377:	mov    rsi,r12
   14003f37a:	nop    WORD PTR [rax+rax*1+0x0]
   14003f380:	mov    r9,QWORD PTR [rbx+0x8]
   14003f384:	mov    rcx,QWORD PTR [r9]
   14003f387:	mov    rdi,QWORD PTR [rbx+0x60]
   14003f38b:	movzx  eax,BYTE PTR [rdi]
   14003f38e:	movzx  edx,BYTE PTR [rax+rcx*1+0x4]
   14003f393:	sub    edx,0x4
   14003f396:	je     0x14003f428
   14003f39c:	sub    edx,0x5
   14003f39f:	je     0x14003f411
   14003f3a1:	dec    edx
   14003f3a3:	je     0x14003f40a
   14003f3a5:	cmp    edx,0x2
   14003f3a8:	jne    0x14003f43b
   14003f3ae:	lea    rdx,[rdi+0x1]
   14003f3b2:	mov    QWORD PTR [rbx+0x60],rdx
   14003f3b6:	mov    rax,QWORD PTR [r9]
   14003f3b9:	movzx  ecx,BYTE PTR [rdx]
   14003f3bc:	cmp    BYTE PTR [rcx+rax*1+0x4],0x16
   14003f3c1:	jne    0x14003f3e0
   14003f3c3:	lea    r8,[rdx+0x1]
   14003f3c7:	mov    rcx,rax
   14003f3ca:	call   0x140032560
   14003f3cf:	test   eax,eax
   14003f3d1:	je     0x14003f404
   14003f3d3:	or     DWORD PTR [rbp-0x45],eax
   14003f3d6:	mov    BYTE PTR [rbp-0x3d],0x0
   14003f3da:	inc    QWORD PTR [rbx+0x60]
   14003f3de:	jmp    0x14003f448
   14003f3e0:	cmp    BYTE PTR [rcx+rax*1+0x4],0x17
   14003f3e5:	jne    0x14003f404
   14003f3e7:	lea    r8,[rdx+0x1]
   14003f3eb:	mov    rcx,rax
   14003f3ee:	call   0x140032560
   14003f3f3:	test   eax,eax
   14003f3f5:	je     0x14003f404
   14003f3f7:	or     DWORD PTR [rbp-0x41],eax
   14003f3fa:	mov    BYTE PTR [rbp-0x3d],0x0
   14003f3fe:	inc    QWORD PTR [rbx+0x60]
   14003f402:	jmp    0x14003f448
   14003f404:	dec    QWORD PTR [rbx+0x60]
   14003f408:	jmp    0x14003f43b
   14003f40a:	cmp    rdi,rsi
   14003f40d:	jne    0x14003f45b
   14003f40f:	jmp    0x14003f43b
   14003f411:	lea    rdx,[rsp+0x30]
   14003f416:	mov    rcx,rbx
   14003f419:	call   0x14003cf10
   14003f41e:	test   al,al
   14003f420:	je     0x14003f4f7
   14003f426:	jmp    0x14003f448
   14003f428:	cmp    rdi,r12
   14003f42b:	jne    0x14003f43b
   14003f42d:	mov    BYTE PTR [rbp-0x49],0x1
   14003f431:	lea    rsi,[rdi+0x1]
   14003f435:	mov    QWORD PTR [rbx+0x60],rsi
   14003f439:	jmp    0x14003f448
   14003f43b:	lea    rdx,[rsp+0x30]
   14003f440:	mov    rcx,rbx
   14003f443:	call   0x14003cdb0
   14003f448:	mov    rax,QWORD PTR [rbx+0x58]
   14003f44c:	cmp    QWORD PTR [rbx+0x60],rax
   14003f450:	je     0x14003f4f9
   14003f456:	jmp    0x14003f380
   14003f45b:	inc    QWORD PTR [rbx+0x60]
   14003f45f:	xor    r8d,r8d
   14003f462:	lea    rdx,[rsp+0x30]
   14003f467:	mov    rcx,rbx
   14003f46a:	cmp    BYTE PTR [rbp-0x48],r8b
   14003f46e:	je     0x14003f477
   14003f470:	call   0x1400387a0
   14003f475:	jmp    0x14003f47c
   14003f477:	call   0x1400380e0
   14003f47c:	test   rax,rax
   14003f47f:	jne    0x14003f4c8
   14003f481:	mov    r8,QWORD PTR [rbx+0x60]
   14003f485:	sub    r8,QWORD PTR [rbx+0x50]
   14003f489:	lea    edx,[rax+0x4]
   14003f48c:	mov    rcx,rbx
   14003f48f:	call   0x1400322b0
   14003f494:	nop
   14003f495:	mov    rcx,QWORD PTR [rbp-0x39]
   14003f499:	test   rcx,rcx
   14003f49c:	je     0x14003f4a3
   14003f49e:	call   0x14002b150
   14003f4a3:	mov    rcx,QWORD PTR [rbp-0x69]
   14003f4a7:	test   rcx,rcx
   14003f4aa:	je     0x14003f4b1
   14003f4ac:	call   0x14002b150
   14003f4b1:	mov    rcx,QWORD PTR [rsp+0x30]
   14003f4b6:	test   rcx,rcx
   14003f4b9:	je     0x14003f33e
   14003f4bf:	call   0x14002b150
   14003f4c4:	xor    al,al
   14003f4c6:	jmp    0x14003f52c
   14003f4c8:	mov    rcx,QWORD PTR [rbp-0x39]
   14003f4cc:	test   rcx,rcx
   14003f4cf:	je     0x14003f4d6
   14003f4d1:	call   0x14002b150
   14003f4d6:	mov    rcx,QWORD PTR [rbp-0x69]
   14003f4da:	test   rcx,rcx
   14003f4dd:	je     0x14003f4e4
   14003f4df:	call   0x14002b150
   14003f4e4:	mov    rcx,QWORD PTR [rsp+0x30]
   14003f4e9:	test   rcx,rcx
   14003f4ec:	je     0x14003f4f3
   14003f4ee:	call   0x14002b150
   14003f4f3:	mov    al,0x1
   14003f4f5:	jmp    0x14003f52c
   14003f4f7:	jmp    0x14003f4c8
   14003f4f9:	setne  dil
   14003f4fd:	mov    rcx,QWORD PTR [rbp-0x39]
   14003f501:	test   rcx,rcx
   14003f504:	je     0x14003f50b
   14003f506:	call   0x14002b150
   14003f50b:	mov    rcx,QWORD PTR [rbp-0x69]
   14003f50f:	test   rcx,rcx
   14003f512:	je     0x14003f519
   14003f514:	call   0x14002b150
   14003f519:	mov    rcx,QWORD PTR [rsp+0x30]
   14003f51e:	test   rcx,rcx
   14003f521:	je     0x14003f528
   14003f523:	call   0x14002b150
   14003f528:	movzx  eax,dil
   14003f52c:	mov    rcx,QWORD PTR [rbp+0x3f]
   14003f530:	xor    rcx,rsp
   14003f533:	call   0x14002b100
   14003f538:	lea    r11,[rsp+0x100]
   14003f540:	mov    rbx,QWORD PTR [r11+0x28]
   14003f544:	mov    rsi,QWORD PTR [r11+0x30]
   14003f548:	mov    rsp,r11
   14003f54b:	pop    r12
   14003f54d:	pop    rdi
   14003f54e:	pop    rbp
   14003f54f:	ret    
   14003f550:	rex push rdi
   14003f552:	sub    rsp,0x30
   14003f556:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003f55f:	mov    QWORD PTR [rsp+0x40],rbx
   14003f564:	mov    rdi,rdx
   14003f567:	call   0x14002df20
   14003f56c:	mov    rbx,rax
   14003f56f:	mov    QWORD PTR [rsp+0x50],rax
   14003f574:	lea    r8,[rax+0x18]
   14003f578:	mov    QWORD PTR [rsp+0x58],r8
   14003f57d:	mov    QWORD PTR [rsp+0x28],r8
   14003f582:	test   r8,r8
   14003f585:	je     0x14003f5ad
   14003f587:	mov    ecx,DWORD PTR [rdi]
   14003f589:	mov    DWORD PTR [r8],ecx
   14003f58c:	lea    rcx,[r8+0x8]
   14003f590:	mov    QWORD PTR [rcx+0x18],0xf
   14003f598:	mov    QWORD PTR [rcx+0x10],0x0
   14003f5a0:	mov    BYTE PTR [rcx],0x0
   14003f5a3:	lea    rdx,[rdi+0x8]
   14003f5a7:	call   0x140004730
   14003f5ac:	nop
   14003f5ad:	mov    rax,rbx
   14003f5b0:	mov    rbx,QWORD PTR [rsp+0x40]
   14003f5b5:	add    rsp,0x30
   14003f5b9:	pop    rdi
   14003f5ba:	ret    
   14003f5bb:	int3   
   14003f5bc:	int3   
   14003f5bd:	int3   
   14003f5be:	int3   
   14003f5bf:	int3   
   14003f5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14003f5c5:	push   rdi
   14003f5c6:	sub    rsp,0x20
   14003f5ca:	mov    r8,QWORD PTR [rcx+0x60]
   14003f5ce:	mov    r9,QWORD PTR [rcx+0x8]
   14003f5d2:	mov    rbx,rcx
   14003f5d5:	movzx  edi,BYTE PTR [r8]
   14003f5d9:	mov    rax,QWORD PTR [r9]
   14003f5dc:	movzx  edx,BYTE PTR [rdi+rax*1+0x4]
   14003f5e1:	add    edx,0xfffffffd
   14003f5e4:	cmp    edx,0x17
   14003f5e7:	ja     0x14003f753
   14003f5ed:	movsxd rax,edx
   14003f5f0:	lea    rdx,[rip+0xfffffffffffc0a09]        # 0x140000000
   14003f5f7:	mov    ecx,DWORD PTR [rdx+rax*4+0x3f798]
   14003f5fe:	add    rcx,rdx
   14003f601:	jmp    rcx
   14003f603:	mov    rcx,rbx
   14003f606:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f60b:	add    rsp,0x20
   14003f60f:	pop    rdi
   14003f610:	jmp    0x14003e2c0
   14003f615:	mov    rcx,rbx
   14003f618:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f61d:	add    rsp,0x20
   14003f621:	pop    rdi
   14003f622:	jmp    0x14002ebf0
   14003f627:	mov    edx,0x3
   14003f62c:	jmp    0x14003f633
   14003f62e:	mov    edx,0x4
   14003f633:	lea    rax,[r8+0x1]
   14003f637:	mov    rcx,rbx
   14003f63a:	mov    r8d,0x10
   14003f640:	mov    QWORD PTR [rbx+0x60],rax
   14003f644:	call   0x14002eb10
   14003f649:	mov    al,0x1
   14003f64b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f650:	add    rsp,0x20
   14003f654:	pop    rdi
   14003f655:	ret    
   14003f656:	mov    rax,QWORD PTR [rbx+0x10]
   14003f65a:	test   rax,rax
   14003f65d:	je     0x14003f684
   14003f65f:	cmp    DWORD PTR [rax],0x3
   14003f662:	je     0x14003f684
   14003f664:	lea    rax,[r8+0x1]
   14003f668:	xor    edx,edx
   14003f66a:	mov    rcx,rbx
   14003f66d:	or     r8,0xffffffffffffffff
   14003f671:	mov    QWORD PTR [rbx+0x60],rax
   14003f675:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f67a:	add    rsp,0x20
   14003f67e:	pop    rdi
   14003f67f:	jmp    0x140032680
   14003f684:	mov    rcx,rbx
   14003f687:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f68c:	add    rsp,0x20
   14003f690:	pop    rdi
   14003f691:	jmp    0x14002f790
   14003f696:	mov    rax,QWORD PTR [rbx+0x10]
   14003f69a:	test   rax,rax
   14003f69d:	je     0x14003f6d2
   14003f69f:	cmp    DWORD PTR [rax],0x3
   14003f6a2:	je     0x14003f6d2
   14003f6a4:	mov    rax,QWORD PTR [rbx]
   14003f6a7:	test   DWORD PTR [rax+0x30],0x1000
   14003f6ae:	je     0x14003f6d2
   14003f6b0:	lea    rax,[r8+0x1]
   14003f6b4:	or     r8,0xffffffffffffffff
   14003f6b8:	mov    rcx,rbx
   14003f6bb:	lea    edx,[r8+0x2]
   14003f6bf:	mov    QWORD PTR [rbx+0x60],rax
   14003f6c3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f6c8:	add    rsp,0x20
   14003f6cc:	pop    rdi
   14003f6cd:	jmp    0x140032680
   14003f6d2:	mov    rax,QWORD PTR [rbx]
   14003f6d5:	mov    r8d,DWORD PTR [rax+0x30]
   14003f6d9:	and    r8d,0xa03
   14003f6e0:	cmp    r8d,0x800
   14003f6e7:	jmp    0x14003f765
   14003f6e9:	mov    rax,QWORD PTR [rbx+0x10]
   14003f6ed:	test   rax,rax
   14003f6f0:	je     0x14003f753
   14003f6f2:	cmp    DWORD PTR [rax],0x3
   14003f6f5:	je     0x14003f753
   14003f6f7:	mov    rax,QWORD PTR [rbx]
   14003f6fa:	test   DWORD PTR [rax+0x30],0x1000
   14003f701:	je     0x14003f753
   14003f703:	lea    rax,[r8+0x1]
   14003f707:	xor    edx,edx
   14003f709:	mov    rcx,rbx
   14003f70c:	lea    r8d,[rdx+0x1]
   14003f710:	mov    QWORD PTR [rbx+0x60],rax
   14003f714:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f719:	add    rsp,0x20
   14003f71d:	pop    rdi
   14003f71e:	jmp    0x140032680
   14003f723:	mov    rcx,rbx
   14003f726:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f72b:	add    rsp,0x20
   14003f72f:	pop    rdi
   14003f730:	jmp    0x14003f270
   14003f735:	mov    rax,QWORD PTR [rbx]
   14003f738:	mov    ecx,DWORD PTR [rax+0x30]
   14003f73b:	bt     ecx,0x11
   14003f73f:	jae    0x14003f759
   14003f741:	mov    rcx,rbx
   14003f744:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f749:	add    rsp,0x20
   14003f74d:	pop    rdi
   14003f74e:	jmp    0x1400330f0
   14003f753:	mov    rax,QWORD PTR [rbx]
   14003f756:	mov    ecx,DWORD PTR [rax+0x30]
   14003f759:	and    ecx,0xa03
   14003f75f:	cmp    ecx,0x800
   14003f765:	jne    0x14003f77b
   14003f767:	mov    r8d,DWORD PTR [rbx+0x38]
   14003f76b:	movzx  edx,dil
   14003f76f:	mov    rcx,r9
   14003f772:	call   0x14002cbd0
   14003f777:	test   al,al
   14003f779:	jne    0x14003f787
   14003f77b:	movzx  edx,dil
   14003f77f:	mov    rcx,rbx
   14003f782:	call   0x14002ec40
   14003f787:	inc    QWORD PTR [rbx+0x60]
   14003f78b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f790:	mov    al,0x1
   14003f792:	add    rsp,0x20
   14003f796:	pop    rdi
   14003f797:	ret    
   14003f798:	test   BYTE PTR cs:[rbx],0x0
   14003f79c:	(bad)  
   14003f79d:	test   BYTE PTR [rbx],0x0
   14003f7a0:	adc    eax,0x560003f6
   14003f7a5:	test   BYTE PTR [rbx],0x0
   14003f7a8:	xchg   esi,eax
   14003f7a9:	test   BYTE PTR [rbx],0x0
   14003f7ac:	jmp    0x16303fba7
   14003f7b1:	test   DWORD PTR [rbx],0x3f75300
   14003f7b7:	add    BYTE PTR [rbx-0x9],dl
   14003f7ba:	add    eax,DWORD PTR [rax]
   14003f7bc:	add    esi,esi
   14003f7be:	add    eax,DWORD PTR [rax]
   14003f7c0:	push   rbx
   14003f7c1:	test   DWORD PTR [rbx],0x3f75300
   14003f7c7:	add    BYTE PTR [rbx-0x9],dl
   14003f7ca:	add    eax,DWORD PTR [rax]
   14003f7cc:	push   rbx
   14003f7cd:	test   DWORD PTR [rbx],0x3f75300
   14003f7d3:	add    BYTE PTR [rbx-0x9],dl
   14003f7d6:	add    eax,DWORD PTR [rax]
   14003f7d8:	push   rbx
   14003f7d9:	test   DWORD PTR [rbx],0x3f75300
   14003f7df:	add    BYTE PTR [rbx-0x9],dl
   14003f7e2:	add    eax,DWORD PTR [rax]
   14003f7e4:	push   rbx
   14003f7e5:	test   DWORD PTR [rbx],0x3f75300
   14003f7eb:	add    BYTE PTR [rbx-0x9],dl
   14003f7ee:	add    eax,DWORD PTR [rax]
   14003f7f0:	push   rbx
   14003f7f1:	test   DWORD PTR [rbx],0x3f73500
   14003f7f7:	add    ah,cl
   14003f7f9:	int3   
   14003f7fa:	int3   
   14003f7fb:	int3   
   14003f7fc:	int3   
   14003f7fd:	int3   
   14003f7fe:	int3   
   14003f7ff:	int3   
   14003f800:	mov    rax,rsp
   14003f803:	push   rbp
   14003f804:	lea    rbp,[rax-0x18]
   14003f808:	sub    rsp,0x110
   14003f80f:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14003f818:	mov    QWORD PTR [rax+0x10],rbx
   14003f81c:	mov    QWORD PTR [rax+0x18],rsi
   14003f820:	mov    QWORD PTR [rax+0x20],rdi
   14003f824:	mov    rax,QWORD PTR [rip+0x289c5]        # 0x1400681f0
   14003f82b:	xor    rax,rsp
   14003f82e:	mov    QWORD PTR [rbp+0x0],rax
   14003f832:	mov    rdi,rcx
   14003f835:	mov    r9,QWORD PTR [rcx+0x8]
   14003f839:	mov    rax,QWORD PTR [r9]
   14003f83c:	mov    rcx,QWORD PTR [rcx+0x60]
   14003f840:	movzx  ebx,BYTE PTR [rcx]
   14003f843:	movzx  eax,BYTE PTR [rbx+rax*1+0x4]
   14003f848:	dec    eax
   14003f84a:	cmp    eax,0x19
   14003f84d:	ja     0x14003fbc4
   14003f853:	cdqe   
   14003f855:	lea    r8,[rip+0xfffffffffffc07a4]        # 0x140000000
   14003f85c:	mov    edx,DWORD PTR [r8+rax*4+0x3fc24]
   14003f864:	add    rdx,r8
   14003f867:	jmp    rdx
   14003f869:	mov    rcx,rdi
   14003f86c:	call   0x14003aa90
   14003f871:	jmp    0x14003fbfc
   14003f876:	mov    rcx,rdi
   14003f879:	call   0x14003e7c0
   14003f87e:	jmp    0x14003fbfc
   14003f883:	mov    rcx,rdi
   14003f886:	call   0x14002ebf0
   14003f88b:	jmp    0x14003fbfc
   14003f890:	lea    rax,[rcx+0x1]
   14003f894:	mov    QWORD PTR [rdi+0x60],rax
   14003f898:	mov    rax,QWORD PTR [rdi]
   14003f89b:	mov    edx,DWORD PTR [rax+0x30]
   14003f89e:	and    edx,0x400
   14003f8a4:	or     edx,0x180
   14003f8aa:	shr    edx,0x7
   14003f8ad:	mov    r8d,0x10
   14003f8b3:	mov    rcx,rdi
   14003f8b6:	call   0x14002eb10
   14003f8bb:	jmp    0x14003fbfa
   14003f8c0:	lea    rax,[rcx+0x1]
   14003f8c4:	mov    QWORD PTR [rdi+0x60],rax
   14003f8c8:	mov    rax,QWORD PTR [rdi]
   14003f8cb:	mov    edx,DWORD PTR [rax+0x30]
   14003f8ce:	and    edx,0x400
   14003f8d4:	bts    edx,0x9
   14003f8d8:	jmp    0x14003f8aa
   14003f8da:	cmp    rcx,QWORD PTR [rdi+0x50]
   14003f8de:	jne    0x14003f95f
   14003f8e0:	mov    QWORD PTR [rbp-0x10],0xf
   14003f8e8:	xor    esi,esi
   14003f8ea:	mov    QWORD PTR [rbp-0x18],rsi
   14003f8ee:	mov    BYTE PTR [rbp-0x28],sil
   14003f8f2:	lea    r8d,[rsi+0x3a]
   14003f8f6:	lea    rdx,[rip+0xfdcb]        # 0x14004f6c8
   14003f8fd:	lea    rcx,[rbp-0x28]
   14003f901:	call   0x140005154
   14003f906:	nop
   14003f907:	mov    QWORD PTR [rsp+0x48],0xf
   14003f910:	mov    QWORD PTR [rsp+0x40],rsi
   14003f915:	mov    BYTE PTR [rsp+0x30],sil
   14003f91a:	or     r9,0xffffffffffffffff
   14003f91e:	xor    r8d,r8d
   14003f921:	lea    rdx,[rbp-0x28]
   14003f925:	lea    rcx,[rsp+0x30]
   14003f92a:	call   0x1400048b8
   14003f92f:	mov    QWORD PTR [rsp+0x20],rsi
   14003f934:	lea    r9,[rsp+0x30]
   14003f939:	xor    r8d,r8d
   14003f93c:	lea    edx,[rsi+0xd]
   14003f93f:	mov    rcx,rdi
   14003f942:	call   0x140031400
   14003f947:	nop
   14003f948:	cmp    QWORD PTR [rbp-0x10],0x10
   14003f94d:	jb     0x14003f958
   14003f94f:	mov    rcx,QWORD PTR [rbp-0x28]
   14003f953:	call   0x14002b150
   14003f958:	xor    al,al
   14003f95a:	jmp    0x14003fbfc
   14003f95f:	lea    rax,[rcx+0x1]
   14003f963:	mov    QWORD PTR [rdi+0x60],rax
   14003f967:	or     r8,0xffffffffffffffff
   14003f96b:	xor    edx,edx
   14003f96d:	mov    rcx,rdi
   14003f970:	call   0x140032680
   14003f975:	jmp    0x14003fbfc
   14003f97a:	cmp    rcx,QWORD PTR [rdi+0x50]
   14003f97e:	jne    0x14003fa0a
   14003f984:	mov    QWORD PTR [rsp+0x78],0xf
   14003f98d:	xor    esi,esi
   14003f98f:	mov    QWORD PTR [rsp+0x70],rsi
   14003f994:	mov    BYTE PTR [rsp+0x60],sil
   14003f999:	lea    r8d,[rsi+0x3a]
   14003f99d:	lea    rdx,[rip+0xfce4]        # 0x14004f688
   14003f9a4:	lea    rcx,[rsp+0x60]
   14003f9a9:	call   0x140005154
   14003f9ae:	nop
   14003f9af:	mov    QWORD PTR [rsp+0x48],0xf
   14003f9b8:	mov    QWORD PTR [rsp+0x40],rsi
   14003f9bd:	mov    BYTE PTR [rsp+0x30],sil
   14003f9c2:	or     r9,0xffffffffffffffff
   14003f9c6:	xor    r8d,r8d
   14003f9c9:	lea    rdx,[rsp+0x60]
   14003f9ce:	lea    rcx,[rsp+0x30]
   14003f9d3:	call   0x1400048b8
   14003f9d8:	mov    QWORD PTR [rsp+0x20],rsi
   14003f9dd:	lea    r9,[rsp+0x30]
   14003f9e2:	xor    r8d,r8d
   14003f9e5:	lea    edx,[rsi+0xd]
   14003f9e8:	mov    rcx,rdi
   14003f9eb:	call   0x140031400
   14003f9f0:	nop
   14003f9f1:	cmp    QWORD PTR [rsp+0x78],0x10
   14003f9f7:	jb     0x14003fa03
   14003f9f9:	mov    rcx,QWORD PTR [rsp+0x60]
   14003f9fe:	call   0x14002b150
   14003fa03:	xor    al,al
   14003fa05:	jmp    0x14003fbfc
   14003fa0a:	lea    rax,[rcx+0x1]
   14003fa0e:	mov    QWORD PTR [rdi+0x60],rax
   14003fa12:	xor    edx,edx
   14003fa14:	lea    r8d,[rdx+0x1]
   14003fa18:	mov    rcx,rdi
   14003fa1b:	call   0x140032680
   14003fa20:	jmp    0x14003fbfc
   14003fa25:	cmp    rcx,QWORD PTR [rdi+0x50]
   14003fa29:	jne    0x14003faaa
   14003fa2b:	mov    QWORD PTR [rbp-0x38],0xf
   14003fa33:	xor    esi,esi
   14003fa35:	mov    QWORD PTR [rbp-0x40],rsi
   14003fa39:	mov    BYTE PTR [rbp-0x50],sil
   14003fa3d:	lea    r8d,[rsi+0x3a]
   14003fa41:	lea    rdx,[rip+0xfc00]        # 0x14004f648
   14003fa48:	lea    rcx,[rbp-0x50]
   14003fa4c:	call   0x140005154
   14003fa51:	nop
   14003fa52:	mov    QWORD PTR [rsp+0x48],0xf
   14003fa5b:	mov    QWORD PTR [rsp+0x40],rsi
   14003fa60:	mov    BYTE PTR [rsp+0x30],sil
   14003fa65:	or     r9,0xffffffffffffffff
   14003fa69:	xor    r8d,r8d
   14003fa6c:	lea    rdx,[rbp-0x50]
   14003fa70:	lea    rcx,[rsp+0x30]
   14003fa75:	call   0x1400048b8
   14003fa7a:	mov    QWORD PTR [rsp+0x20],rsi
   14003fa7f:	lea    r9,[rsp+0x30]
   14003fa84:	xor    r8d,r8d
   14003fa87:	lea    edx,[rsi+0xd]
   14003fa8a:	mov    rcx,rdi
   14003fa8d:	call   0x140031400
   14003fa92:	nop
   14003fa93:	cmp    QWORD PTR [rbp-0x38],0x10
   14003fa98:	jb     0x14003faa3
   14003fa9a:	mov    rcx,QWORD PTR [rbp-0x50]
   14003fa9e:	call   0x14002b150
   14003faa3:	xor    al,al
   14003faa5:	jmp    0x14003fbfc
   14003faaa:	lea    rax,[rcx+0x1]
   14003faae:	mov    QWORD PTR [rdi+0x60],rax
   14003fab2:	or     r8,0xffffffffffffffff
   14003fab6:	lea    edx,[r8+0x2]
   14003faba:	mov    rcx,rdi
   14003fabd:	call   0x140032680
   14003fac2:	jmp    0x14003fbfc
   14003fac7:	lea    rax,[rcx+0x1]
   14003facb:	mov    QWORD PTR [rdi+0x60],rax
   14003facf:	xor    edx,edx
   14003fad1:	mov    rcx,rdi
   14003fad4:	call   0x140032ac0
   14003fad9:	jmp    0x14003fbfc
   14003fade:	mov    QWORD PTR [rbp-0x60],0xf
   14003fae6:	xor    esi,esi
   14003fae8:	mov    QWORD PTR [rbp-0x68],rsi
   14003faec:	mov    BYTE PTR [rbp-0x78],sil
   14003faf0:	lea    r8d,[rsi+0x3e]
   14003faf4:	lea    rdx,[rip+0xf91d]        # 0x14004f418
   14003fafb:	lea    rcx,[rbp-0x78]
   14003faff:	call   0x140005154
   14003fb04:	nop
   14003fb05:	mov    rbx,QWORD PTR [rdi+0x60]
   14003fb09:	sub    rbx,QWORD PTR [rdi+0x50]
   14003fb0d:	mov    QWORD PTR [rsp+0x48],0xf
   14003fb16:	mov    QWORD PTR [rsp+0x40],rsi
   14003fb1b:	mov    BYTE PTR [rsp+0x30],sil
   14003fb20:	or     r9,0xffffffffffffffff
   14003fb24:	xor    r8d,r8d
   14003fb27:	lea    rdx,[rbp-0x78]
   14003fb2b:	lea    rcx,[rsp+0x30]
   14003fb30:	call   0x1400048b8
   14003fb35:	mov    QWORD PTR [rsp+0x20],rbx
   14003fb3a:	lea    r9,[rsp+0x30]
   14003fb3f:	mov    r8,rbx
   14003fb42:	lea    edx,[rsi+0x9]
   14003fb45:	mov    rcx,rdi
   14003fb48:	call   0x140031400
   14003fb4d:	nop
   14003fb4e:	cmp    QWORD PTR [rbp-0x60],0x10
   14003fb53:	jb     0x14003fb5e
   14003fb55:	mov    rcx,QWORD PTR [rbp-0x78]
   14003fb59:	call   0x14002b150
   14003fb5e:	xor    al,al
   14003fb60:	jmp    0x14003fbfc
   14003fb65:	mov    rcx,rdi
   14003fb68:	call   0x14003f270
   14003fb6d:	jmp    0x14003fbfc
   14003fb72:	mov    rax,QWORD PTR [rdi]
   14003fb75:	mov    ecx,DWORD PTR [rax+0x30]
   14003fb78:	bt     ecx,0x11
   14003fb7c:	jae    0x14003fbca
   14003fb7e:	mov    rcx,rdi
   14003fb81:	call   0x1400330f0
   14003fb86:	jmp    0x14003fbfc
   14003fb88:	mov    rax,QWORD PTR [rdi]
   14003fb8b:	mov    ecx,DWORD PTR [rax+0x30]
   14003fb8e:	and    ecx,0xa00
   14003fb94:	cmp    ecx,0x800
   14003fb9a:	jne    0x14003fbc4
   14003fb9c:	mov    rdx,QWORD PTR [rdi+0x58]
   14003fba0:	mov    rax,QWORD PTR [rdi+0x60]
   14003fba4:	cmp    rax,rdx
   14003fba7:	je     0x14003fbfa
   14003fba9:	movzx  ecx,BYTE PTR [rax]
   14003fbac:	inc    rax
   14003fbaf:	mov    QWORD PTR [rdi+0x60],rax
   14003fbb3:	cmp    cl,0xa
   14003fbb6:	je     0x14003fbfa
   14003fbb8:	cmp    cl,0xd
   14003fbbb:	je     0x14003fbfa
   14003fbbd:	cmp    cl,0xc
   14003fbc0:	jne    0x14003fba0
   14003fbc2:	jmp    0x14003fbfa
   14003fbc4:	mov    rax,QWORD PTR [rdi]
   14003fbc7:	mov    ecx,DWORD PTR [rax+0x30]
   14003fbca:	and    ecx,0xa03
   14003fbd0:	cmp    ecx,0x800
   14003fbd6:	jne    0x14003fbeb
   14003fbd8:	mov    r8d,DWORD PTR [rdi+0x38]
   14003fbdc:	movzx  edx,bl
   14003fbdf:	mov    rcx,r9
   14003fbe2:	call   0x14002cbd0
   14003fbe7:	test   al,al
   14003fbe9:	jne    0x14003fbf6
   14003fbeb:	movzx  edx,bl
   14003fbee:	mov    rcx,rdi
   14003fbf1:	call   0x14002ec40
   14003fbf6:	inc    QWORD PTR [rdi+0x60]
   14003fbfa:	mov    al,0x1
   14003fbfc:	mov    rcx,QWORD PTR [rbp+0x0]
   14003fc00:	xor    rcx,rsp
   14003fc03:	call   0x14002b100
   14003fc08:	lea    r11,[rsp+0x110]
   14003fc10:	mov    rbx,QWORD PTR [r11+0x18]
   14003fc14:	mov    rsi,QWORD PTR [r11+0x20]
   14003fc18:	mov    rdi,QWORD PTR [r11+0x28]
   14003fc1c:	mov    rsp,r11
   14003fc1f:	pop    rbp
   14003fc20:	ret    
   14003fc21:	nop    DWORD PTR [rax]
   14003fc24:	imul   edi,eax,0xf9580003
   14003fc2a:	add    eax,DWORD PTR [rax]
   14003fc2c:	sar    al,0x3
   14003fc2f:	add    BYTE PTR [rax-0x7cfffc08],dl
   14003fc35:	clc    
   14003fc36:	add    eax,DWORD PTR [rax]
   14003fc38:	(bad)  
   14003fc3a:	add    eax,DWORD PTR [rax]
   14003fc3c:	and    eax,0x7a0003fa
   14003fc41:	stc    
   14003fc42:	add    eax,DWORD PTR [rax]
   14003fc44:	gs sti 
   14003fc46:	add    eax,DWORD PTR [rax]
   14003fc48:	(bad)  
   14003fc49:	sti    
   14003fc4a:	add    eax,DWORD PTR [rax]
   14003fc4c:	jle    0x14003fc49
   14003fc4e:	add    eax,DWORD PTR [rax]
   14003fc50:	jbe    0x14003fc4a
   14003fc52:	add    eax,DWORD PTR [rax]
   14003fc54:	mov    bl,bh
   14003fc56:	add    eax,DWORD PTR [rax]
   14003fc58:	(bad)  
   14003fc59:	sti    
   14003fc5a:	add    eax,DWORD PTR [rax]
   14003fc5c:	(bad)  
   14003fc5d:	cli    
   14003fc5e:	add    eax,DWORD PTR [rax]
   14003fc60:	fdivp  st(2),st
   14003fc62:	add    eax,DWORD PTR [rax]
   14003fc64:	(bad)  
   14003fc65:	sti    
   14003fc66:	add    eax,DWORD PTR [rax]
   14003fc68:	(bad)  
   14003fc69:	sti    
   14003fc6a:	add    eax,DWORD PTR [rax]
   14003fc6c:	(bad)  
   14003fc6d:	sti    
   14003fc6e:	add    eax,DWORD PTR [rax]
   14003fc70:	(bad)  
   14003fc71:	sti    
   14003fc72:	add    eax,DWORD PTR [rax]
   14003fc74:	(bad)  
   14003fc75:	sti    
   14003fc76:	add    eax,DWORD PTR [rax]
   14003fc78:	(bad)  
   14003fc79:	sti    
   14003fc7a:	add    eax,DWORD PTR [rax]
   14003fc7c:	(bad)  
   14003fc7d:	sti    
   14003fc7e:	add    eax,DWORD PTR [rax]
   14003fc80:	(bad)  
   14003fc81:	sti    
   14003fc82:	add    eax,DWORD PTR [rax]
   14003fc84:	(bad)  
   14003fc85:	sti    
   14003fc86:	add    eax,DWORD PTR [rax]
   14003fc88:	jb     0x14003fc85
   14003fc8a:	add    eax,DWORD PTR [rax]
   14003fc8c:	int3   
   14003fc8d:	int3   
   14003fc8e:	int3   
   14003fc8f:	int3   
   14003fc90:	mov    QWORD PTR [rsp+0x8],rcx
   14003fc95:	push   rbx
   14003fc96:	sub    rsp,0x30
   14003fc9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003fca3:	mov    rbx,rcx
   14003fca6:	mov    r8,QWORD PTR [rcx+0x8]
   14003fcaa:	mov    r9,r8
   14003fcad:	mov    r8,QWORD PTR [r8]
   14003fcb0:	lea    rdx,[rsp+0x48]
   14003fcb5:	call   0x14003be40
   14003fcba:	nop
   14003fcbb:	mov    rcx,QWORD PTR [rbx+0x8]
   14003fcbf:	add    rsp,0x30
   14003fcc3:	pop    rbx
   14003fcc4:	jmp    0x14002b150
   14003fcc9:	int3   
   14003fcca:	int3   
   14003fccb:	int3   
   14003fccc:	int3   
   14003fccd:	int3   
   14003fcce:	int3   
   14003fccf:	int3   
   14003fcd0:	mov    QWORD PTR [rsp+0x8],rcx
   14003fcd5:	push   rbx
   14003fcd6:	sub    rsp,0x30
   14003fcda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003fce3:	mov    rbx,rcx
   14003fce6:	mov    r8,QWORD PTR [rcx+0x8]
   14003fcea:	mov    r9,r8
   14003fced:	mov    r8,QWORD PTR [r8]
   14003fcf0:	lea    rdx,[rsp+0x48]
   14003fcf5:	call   0x140025560
   14003fcfa:	nop
   14003fcfb:	mov    rcx,QWORD PTR [rbx+0x8]
   14003fcff:	add    rsp,0x30
   14003fd03:	pop    rbx
   14003fd04:	jmp    0x14002b150
   14003fd09:	int3   
   14003fd0a:	int3   
   14003fd0b:	int3   
   14003fd0c:	int3   
   14003fd0d:	int3   
   14003fd0e:	int3   
   14003fd0f:	int3   
   14003fd10:	rex push rdi
   14003fd12:	push   r12
   14003fd14:	push   r13
   14003fd16:	sub    rsp,0x40
   14003fd1a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003fd23:	mov    QWORD PTR [rsp+0x60],rbx
   14003fd28:	mov    QWORD PTR [rsp+0x70],rsi
   14003fd2d:	mov    rbx,rdx
   14003fd30:	mov    rdi,rcx
   14003fd33:	movabs rax,0x249249249249249
   14003fd3d:	cmp    rdx,rax
   14003fd40:	jbe    0x14003fd50
   14003fd42:	lea    rcx,[rip+0x10c0f]        # 0x140050958
   14003fd49:	call   QWORD PTR [rip+0x9849]        # 0x140049598
   14003fd4f:	int3   
   14003fd50:	mov    rcx,QWORD PTR [rcx+0x10]
   14003fd54:	sub    rcx,QWORD PTR [rdi]
   14003fd57:	movabs rsi,0x4924924924924925
   14003fd61:	mov    rax,rsi
   14003fd64:	imul   rcx
   14003fd67:	sar    rdx,0x5
   14003fd6b:	mov    rax,rdx
   14003fd6e:	shr    rax,0x3f
   14003fd72:	add    rdx,rax
   14003fd75:	cmp    rdx,rbx
   14003fd78:	jae    0x14003fe17
   14003fd7e:	mov    rdx,rbx
   14003fd81:	lea    rcx,[rdi+0x18]
   14003fd85:	call   0x14002d850
   14003fd8a:	mov    r12,rax
   14003fd8d:	mov    QWORD PTR [rsp+0x68],rax
   14003fd92:	movzx  eax,BYTE PTR [rsp+0x68]
   14003fd97:	mov    BYTE PTR [rsp+0x28],al
   14003fd9b:	mov    QWORD PTR [rsp+0x20],0x0
   14003fda4:	lea    r9,[rdi+0x18]
   14003fda8:	mov    r8,r12
   14003fdab:	mov    rdx,QWORD PTR [rdi+0x8]
   14003fdaf:	mov    rcx,QWORD PTR [rdi]
   14003fdb2:	call   0x14003c760
   14003fdb7:	nop
   14003fdb8:	mov    r11,QWORD PTR [rdi+0x8]
   14003fdbc:	mov    r10,QWORD PTR [rdi]
   14003fdbf:	mov    rcx,r11
   14003fdc2:	sub    rcx,r10
   14003fdc5:	mov    rax,rsi
   14003fdc8:	imul   rcx
   14003fdcb:	mov    rsi,rdx
   14003fdce:	sar    rsi,0x5
   14003fdd2:	mov    rax,rsi
   14003fdd5:	shr    rax,0x3f
   14003fdd9:	add    rsi,rax
   14003fddc:	test   r10,r10
   14003fddf:	je     0x14003fdfe
   14003fde1:	movzx  r9d,BYTE PTR [rsp+0x68]
   14003fde7:	lea    r8,[rdi+0x18]
   14003fdeb:	mov    rdx,r11
   14003fdee:	mov    rcx,r10
   14003fdf1:	call   0x1400225c4
   14003fdf6:	mov    rcx,QWORD PTR [rdi]
   14003fdf9:	call   0x14002b150
   14003fdfe:	imul   rbx,rbx,0x70
   14003fe02:	add    rbx,r12
   14003fe05:	mov    QWORD PTR [rdi+0x10],rbx
   14003fe09:	imul   rsi,rsi,0x70
   14003fe0d:	add    rsi,r12
   14003fe10:	mov    QWORD PTR [rdi+0x8],rsi
   14003fe14:	mov    QWORD PTR [rdi],r12
   14003fe17:	mov    rbx,QWORD PTR [rsp+0x60]
   14003fe1c:	mov    rsi,QWORD PTR [rsp+0x70]
   14003fe21:	add    rsp,0x40
   14003fe25:	pop    r13
   14003fe27:	pop    r12
   14003fe29:	pop    rdi
   14003fe2a:	ret    
   14003fe2b:	int3   
   14003fe2c:	int3   
   14003fe2d:	int3   
   14003fe2e:	int3   
   14003fe2f:	int3   
   14003fe30:	rex push rdi
   14003fe32:	sub    rsp,0x20
   14003fe36:	mov    r8,QWORD PTR [rcx+0x8]
   14003fe3a:	mov    r11,rdx
   14003fe3d:	movabs rdi,0x4924924924924925
   14003fe47:	sub    r8,QWORD PTR [rcx]
   14003fe4a:	mov    rax,rdi
   14003fe4d:	movabs r9,0x249249249249249
   14003fe57:	mov    r10,rcx
   14003fe5a:	imul   r8
   14003fe5d:	mov    r8,rdx
   14003fe60:	sar    r8,0x5
   14003fe64:	mov    rax,r8
   14003fe67:	shr    rax,0x3f
   14003fe6b:	add    r8,rax
   14003fe6e:	mov    rax,r9
   14003fe71:	sub    rax,r11
   14003fe74:	cmp    rax,r8
   14003fe77:	jae    0x14003fe87
   14003fe79:	lea    rcx,[rip+0x10ad8]        # 0x140050958
   14003fe80:	call   QWORD PTR [rip+0x9712]        # 0x140049598
   14003fe86:	int3   
   14003fe87:	mov    rcx,QWORD PTR [rcx+0x10]
   14003fe8b:	mov    rax,rdi
   14003fe8e:	add    r8,r11
   14003fe91:	sub    rcx,QWORD PTR [r10]
   14003fe94:	imul   rcx
   14003fe97:	sar    rdx,0x5
   14003fe9b:	mov    rax,rdx
   14003fe9e:	shr    rax,0x3f
   14003fea2:	add    rdx,rax
   14003fea5:	cmp    r8,rdx
   14003fea8:	jbe    0x14003fece
   14003feaa:	mov    rax,rdx
   14003fead:	shr    rax,1
   14003feb0:	sub    r9,rax
   14003feb3:	cmp    r9,rdx
   14003feb6:	jae    0x14003febc
   14003feb8:	xor    edx,edx
   14003feba:	jmp    0x14003febf
   14003febc:	add    rdx,rax
   14003febf:	cmp    rdx,r8
   14003fec2:	mov    rcx,r10
   14003fec5:	cmovb  rdx,r8
   14003fec9:	call   0x14003fd10
   14003fece:	add    rsp,0x20
   14003fed2:	pop    rdi
   14003fed3:	ret    
   14003fed4:	int3   
   14003fed5:	int3   
   14003fed6:	int3   
   14003fed7:	int3   
   14003fed8:	int3   
   14003fed9:	int3   
   14003feda:	int3   
   14003fedb:	int3   
   14003fedc:	int3   
   14003fedd:	int3   
   14003fede:	int3   
   14003fedf:	int3   
   14003fee0:	rex push rbp
   14003fee2:	push   rsi
   14003fee3:	push   rdi
   14003fee4:	push   r12
   14003fee6:	push   r13
   14003fee8:	push   r14
   14003feea:	push   r15
   14003feec:	lea    rbp,[rsp-0x27]
   14003fef1:	sub    rsp,0x90
   14003fef8:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   14003ff00:	mov    QWORD PTR [rsp+0xe8],rbx
   14003ff08:	mov    rax,QWORD PTR [rip+0x282e1]        # 0x1400681f0
   14003ff0f:	xor    rax,rsp
   14003ff12:	mov    QWORD PTR [rbp+0x1f],rax
   14003ff16:	mov    esi,r9d
   14003ff19:	mov    r15,r8
   14003ff1c:	mov    r14,rdx
   14003ff1f:	mov    rdi,rcx
   14003ff22:	mov    rax,QWORD PTR [rcx]
   14003ff25:	mov    DWORD PTR [rax+0x30],r9d
   14003ff29:	mov    r13d,r9d
   14003ff2c:	shr    r13d,0x14
   14003ff30:	and    r13b,0x1
   14003ff34:	mov    BYTE PTR [rcx+0x18],r13b
   14003ff38:	mov    QWORD PTR [rcx+0x50],rdx
   14003ff3c:	mov    QWORD PTR [rcx+0x60],rdx
   14003ff40:	mov    QWORD PTR [rcx+0x58],r8
   14003ff44:	cmp    rdx,r8
   14003ff47:	jne    0x14003ff67
   14003ff49:	test   r9b,0x3
   14003ff4d:	jne    0x14003ff56
   14003ff4f:	bt     r9d,0x18
   14003ff54:	jae    0x14003ff67
   14003ff56:	xor    r8d,r8d
   14003ff59:	lea    edx,[r8+0x11]
   14003ff5d:	call   0x1400322b0
   14003ff62:	jmp    0x14004011b
   14003ff67:	mov    eax,r9d
   14003ff6a:	xor    r12d,r12d
   14003ff6d:	and    eax,0x3
   14003ff70:	je     0x140040019
   14003ff76:	dec    eax
   14003ff78:	je     0x14004000c
   14003ff7e:	dec    eax
   14003ff80:	je     0x14003ffff
   14003ff82:	mov    QWORD PTR [rbp+0xf],0xf
   14003ff8a:	mov    QWORD PTR [rbp+0x7],r12
   14003ff8e:	mov    BYTE PTR [rbp-0x9],r12b
   14003ff92:	lea    r8d,[r12+0x43]
   14003ff97:	lea    rdx,[rip+0xf852]        # 0x14004f7f0
   14003ff9e:	lea    rcx,[rbp-0x9]
   14003ffa2:	call   0x140005154
   14003ffa7:	nop
   14003ffa8:	mov    QWORD PTR [rbp-0x21],0xf
   14003ffb0:	mov    QWORD PTR [rbp-0x29],r12
   14003ffb4:	mov    BYTE PTR [rbp-0x39],r12b
   14003ffb8:	or     r9,0xffffffffffffffff
   14003ffbc:	xor    r8d,r8d
   14003ffbf:	lea    rdx,[rbp-0x9]
   14003ffc3:	lea    rcx,[rbp-0x39]
   14003ffc7:	call   0x1400048b8
   14003ffcc:	mov    QWORD PTR [rsp+0x20],r12
   14003ffd1:	lea    r9,[rbp-0x39]
   14003ffd5:	xor    r8d,r8d
   14003ffd8:	lea    edx,[r12+0x15]
   14003ffdd:	mov    rcx,rdi
   14003ffe0:	call   0x140031400
   14003ffe5:	nop
   14003ffe6:	cmp    QWORD PTR [rbp+0xf],0x10
   14003ffeb:	jb     0x14004011b
   14003fff1:	mov    rcx,QWORD PTR [rbp-0x9]
   14003fff5:	call   0x14002b150
   14003fffa:	jmp    0x14004011b
   14003ffff:	lea    rax,[rip+0xfffffffffffef78a]        # 0x14002f790
   140040006:	mov    QWORD PTR [rcx+0x48],rax
   14004000a:	jmp    0x140040042
   14004000c:	lea    rax,[rip+0xfffffffffffff5ad]        # 0x14003f5c0
   140040013:	mov    QWORD PTR [rcx+0x48],rax
   140040017:	jmp    0x140040042
   140040019:	lea    rax,[rip+0xfffffffffffff7e0]        # 0x14003f800
   140040020:	mov    QWORD PTR [rcx+0x48],rax
   140040024:	xor    edx,edx
   140040026:	lea    r8d,[rdx+0x18]
   14004002a:	call   0x14002eb10
   14004002f:	mov    DWORD PTR [rax+0x10],r12d
   140040033:	mov    rcx,QWORD PTR [rdi]
   140040036:	mov    edx,DWORD PTR [rcx+0x30]
   140040039:	shr    edx,0x14
   14004003c:	and    dl,0x1
   14004003f:	mov    BYTE PTR [rax+0x14],dl
   140040042:	mov    bl,0x1
   140040044:	mov    rax,QWORD PTR [rdi+0x58]
   140040048:	cmp    QWORD PTR [rdi+0x60],rax
   14004004c:	je     0x14004005b
   14004004e:	mov    rcx,rdi
   140040051:	call   QWORD PTR [rdi+0x48]
   140040054:	movzx  ebx,al
   140040057:	test   al,al
   140040059:	jne    0x140040044
   14004005b:	or     rdx,0xffffffffffffffff
   14004005f:	mov    rcx,rdi
   140040062:	call   0x140032370
   140040067:	mov    r11,QWORD PTR [rdi]
   14004006a:	mov    DWORD PTR [r11+0x30],esi
   14004006e:	cmp    BYTE PTR [rdi+0x18],r13b
   140040072:	je     0x140040078
   140040074:	mov    BYTE PTR [rdi+0x18],r13b
   140040078:	test   bl,bl
   14004007a:	jne    0x1400400fb
   14004007c:	mov    QWORD PTR [rbp+0xf],0xf
   140040084:	mov    QWORD PTR [rbp+0x7],r12
   140040088:	mov    BYTE PTR [rbp-0x9],r12b
   14004008c:	mov    r8d,0x3e
   140040092:	lea    rdx,[rip+0xf70f]        # 0x14004f7a8
   140040099:	lea    rcx,[rbp-0x9]
   14004009d:	call   0x140005154
   1400400a2:	nop
   1400400a3:	mov    rbx,QWORD PTR [rdi+0x60]
   1400400a7:	sub    rbx,QWORD PTR [rdi+0x50]
   1400400ab:	mov    QWORD PTR [rbp-0x21],0xf
   1400400b3:	mov    QWORD PTR [rbp-0x29],r12
   1400400b7:	mov    BYTE PTR [rbp-0x39],0x0
   1400400bb:	or     r9,0xffffffffffffffff
   1400400bf:	xor    r8d,r8d
   1400400c2:	lea    rdx,[rbp-0x9]
   1400400c6:	lea    rcx,[rbp-0x39]
   1400400ca:	call   0x1400048b8
   1400400cf:	mov    QWORD PTR [rsp+0x20],rbx
   1400400d4:	lea    r9,[rbp-0x39]
   1400400d8:	mov    r8,rbx
   1400400db:	mov    edx,0x8
   1400400e0:	mov    rcx,rdi
   1400400e3:	call   0x140031400
   1400400e8:	nop
   1400400e9:	cmp    QWORD PTR [rbp+0xf],0x10
   1400400ee:	jb     0x14004011b
   1400400f0:	mov    rcx,QWORD PTR [rbp-0x9]
   1400400f4:	call   0x14002b150
   1400400f9:	jmp    0x14004011b
   1400400fb:	mov    rcx,QWORD PTR [rdi]
   1400400fe:	cmp    DWORD PTR [rcx+0x34],r12d
   140040102:	jne    0x14004011b
   140040104:	mov    eax,DWORD PTR [rdi+0x68]
   140040107:	inc    eax
   140040109:	mov    QWORD PTR [rcx+0x48],rax
   14004010d:	mov    r8,r15
   140040110:	mov    rdx,r14
   140040113:	mov    rcx,rdi
   140040116:	call   0x14003e120
   14004011b:	mov    rcx,QWORD PTR [rbp+0x1f]
   14004011f:	xor    rcx,rsp
   140040122:	call   0x14002b100
   140040127:	mov    rbx,QWORD PTR [rsp+0xe8]
   14004012f:	add    rsp,0x90
   140040136:	pop    r15
   140040138:	pop    r14
   14004013a:	pop    r13
   14004013c:	pop    r12
   14004013e:	pop    rdi
   14004013f:	pop    rsi
   140040140:	pop    rbp
   140040141:	ret    
   140040142:	int3   
   140040143:	int3   
   140040144:	int3   
   140040145:	int3   
   140040146:	int3   
   140040147:	int3   
   140040148:	int3   
   140040149:	int3   
   14004014a:	int3   
   14004014b:	int3   
   14004014c:	int3   
   14004014d:	int3   
   14004014e:	int3   
   14004014f:	int3   
   140040150:	rex push rdi
   140040152:	sub    rsp,0x90
   140040159:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140040162:	mov    QWORD PTR [rsp+0xb0],rbx
   14004016a:	mov    rax,QWORD PTR [rip+0x2807f]        # 0x1400681f0
   140040171:	xor    rax,rsp
   140040174:	mov    QWORD PTR [rsp+0x88],rax
   14004017c:	mov    rdi,rcx
   14004017f:	mov    rbx,QWORD PTR [rcx+0x8]
   140040183:	mov    rax,QWORD PTR [rbx+0x8]
   140040187:	cmp    BYTE PTR [rax+0x49],0x0
   14004018b:	jne    0x1400401a7
   14004018d:	mov    ecx,DWORD PTR [rdx]
   14004018f:	nop
   140040190:	cmp    DWORD PTR [rax+0x18],ecx
   140040193:	jge    0x14004019b
   140040195:	mov    rax,QWORD PTR [rax+0x10]
   140040199:	jmp    0x1400401a1
   14004019b:	mov    rbx,rax
   14004019e:	mov    rax,QWORD PTR [rax]
   1400401a1:	cmp    BYTE PTR [rax+0x49],0x0
   1400401a5:	je     0x140040190
   1400401a7:	cmp    rbx,QWORD PTR [rdi+0x8]
   1400401ab:	je     0x1400401b8
   1400401ad:	mov    eax,DWORD PTR [rbx+0x18]
   1400401b0:	cmp    DWORD PTR [rdx],eax
   1400401b2:	jge    0x14004025c
   1400401b8:	mov    QWORD PTR [rsp+0x78],0xf
   1400401c1:	mov    QWORD PTR [rsp+0x70],0x0
   1400401ca:	mov    BYTE PTR [rsp+0x60],0x0
   1400401cf:	mov    eax,DWORD PTR [rdx]
   1400401d1:	mov    DWORD PTR [rsp+0x30],eax
   1400401d5:	mov    QWORD PTR [rsp+0x50],0xf
   1400401de:	mov    QWORD PTR [rsp+0x48],0x0
   1400401e7:	mov    BYTE PTR [rsp+0x38],0x0
   1400401ec:	lea    rdx,[rsp+0x60]
   1400401f1:	lea    rcx,[rsp+0x38]
   1400401f6:	call   0x140004730
   1400401fb:	nop
   1400401fc:	lea    rdx,[rsp+0x30]
   140040201:	mov    rcx,rdi
   140040204:	call   0x14003f550
   140040209:	mov    r9,rax
   14004020c:	mov    r8,rbx
   14004020f:	lea    rdx,[rsp+0x20]
   140040214:	mov    rcx,rdi
   140040217:	call   0x140039310
   14004021c:	mov    rbx,QWORD PTR [rsp+0x20]
   140040221:	cmp    QWORD PTR [rsp+0x50],0x10
   140040227:	jb     0x140040233
   140040229:	mov    rcx,QWORD PTR [rsp+0x38]
   14004022e:	call   0x14002b150
   140040233:	mov    QWORD PTR [rsp+0x50],0xf
   14004023c:	mov    QWORD PTR [rsp+0x48],0x0
   140040245:	mov    BYTE PTR [rsp+0x38],0x0
   14004024a:	cmp    QWORD PTR [rsp+0x78],0x10
   140040250:	jb     0x14004025c
   140040252:	mov    rcx,QWORD PTR [rsp+0x60]
   140040257:	call   0x14002b150
   14004025c:	lea    rax,[rbx+0x20]
   140040260:	mov    rcx,QWORD PTR [rsp+0x88]
   140040268:	xor    rcx,rsp
   14004026b:	call   0x14002b100
   140040270:	mov    rbx,QWORD PTR [rsp+0xb0]
   140040278:	add    rsp,0x90
   14004027f:	pop    rdi
   140040280:	ret    
   140040281:	int3   
   140040282:	int3   
   140040283:	int3   
   140040284:	int3   
   140040285:	int3   
   140040286:	int3   
   140040287:	int3   
   140040288:	int3   
   140040289:	int3   
   14004028a:	int3   
   14004028b:	int3   
   14004028c:	int3   
   14004028d:	int3   
   14004028e:	int3   
   14004028f:	int3   
   140040290:	mov    QWORD PTR [rsp+0x8],rcx
   140040295:	push   rdi
   140040296:	sub    rsp,0x30
   14004029a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400402a3:	mov    QWORD PTR [rsp+0x58],rbx
   1400402a8:	mov    rdi,rcx
   1400402ab:	lea    rbx,[rcx+0x448]
   1400402b2:	mov    QWORD PTR [rsp+0x48],rbx
   1400402b7:	mov    r8,QWORD PTR [rbx+0x8]
   1400402bb:	mov    r9,r8
   1400402be:	mov    r8,QWORD PTR [r8]
   1400402c1:	lea    rdx,[rsp+0x50]
   1400402c6:	mov    rcx,rbx
   1400402c9:	call   0x140004a78
   1400402ce:	nop
   1400402cf:	mov    rcx,QWORD PTR [rbx+0x8]
   1400402d3:	call   0x14002b150
   1400402d8:	nop
   1400402d9:	lea    rbx,[rdi+0x428]
   1400402e0:	mov    QWORD PTR [rsp+0x48],rbx
   1400402e5:	mov    r8,QWORD PTR [rbx+0x8]
   1400402e9:	mov    r9,r8
   1400402ec:	mov    r8,QWORD PTR [r8]
   1400402ef:	lea    rdx,[rsp+0x50]
   1400402f4:	mov    rcx,rbx
   1400402f7:	call   0x140025560
   1400402fc:	nop
   1400402fd:	mov    rcx,QWORD PTR [rbx+0x8]
   140040301:	call   0x14002b150
   140040306:	nop
   140040307:	lea    rbx,[rdi+0x408]
   14004030e:	mov    QWORD PTR [rsp+0x40],rbx
   140040313:	mov    r8,QWORD PTR [rbx+0x8]
   140040317:	mov    r9,r8
   14004031a:	mov    r8,QWORD PTR [r8]
   14004031d:	lea    rdx,[rsp+0x48]
   140040322:	mov    rcx,rbx
   140040325:	call   0x14003be40
   14004032a:	nop
   14004032b:	mov    rcx,QWORD PTR [rbx+0x8]
   14004032f:	mov    rbx,QWORD PTR [rsp+0x58]
   140040334:	add    rsp,0x30
   140040338:	pop    rdi
   140040339:	jmp    0x14002b150
   14004033e:	int3   
   14004033f:	int3   
   140040340:	rex push rdi
   140040342:	sub    rsp,0x30
   140040346:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004034f:	mov    QWORD PTR [rsp+0x50],rbx
   140040354:	mov    QWORD PTR [rsp+0x58],rsi
   140040359:	mov    rsi,rdx
   14004035c:	mov    rbx,rcx
   14004035f:	mov    rcx,QWORD PTR [rcx+0x8]
   140040363:	cmp    rdx,rcx
   140040366:	jae    0x1400403e1
   140040368:	mov    rax,QWORD PTR [rbx]
   14004036b:	cmp    rax,rdx
   14004036e:	ja     0x1400403e1
   140040370:	sub    rsi,rax
   140040373:	movabs rax,0x4924924924924925
   14004037d:	imul   rsi
   140040380:	mov    rdi,rdx
   140040383:	sar    rdi,0x5
   140040387:	mov    rax,rdi
   14004038a:	shr    rax,0x3f
   14004038e:	add    rdi,rax
   140040391:	cmp    rcx,QWORD PTR [rbx+0x10]
   140040395:	jne    0x1400403a4
   140040397:	mov    edx,0x1
   14004039c:	mov    rcx,rbx
   14004039f:	call   0x14003fe30
   1400403a4:	imul   rdi,rdi,0x70
   1400403a8:	add    rdi,QWORD PTR [rbx]
   1400403ab:	mov    rsi,QWORD PTR [rbx+0x8]
   1400403af:	mov    QWORD PTR [rsp+0x40],rsi
   1400403b4:	mov    QWORD PTR [rsp+0x48],rsi
   1400403b9:	test   rsi,rsi
   1400403bc:	je     0x1400403df
   1400403be:	mov    eax,DWORD PTR [rdi]
   1400403c0:	mov    DWORD PTR [rsi],eax
   1400403c2:	mov    rax,QWORD PTR [rdi+0x8]
   1400403c6:	mov    QWORD PTR [rsi+0x8],rax
   1400403ca:	lea    rdx,[rdi+0x10]
   1400403ce:	lea    rcx,[rsi+0x10]
   1400403d2:	call   0x140035b50
   1400403d7:	mov    r11,QWORD PTR [rdi+0x68]
   1400403db:	mov    QWORD PTR [rsi+0x68],r11
   1400403df:	jmp    0x140040428
   1400403e1:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400403e5:	jne    0x1400403f4
   1400403e7:	mov    edx,0x1
   1400403ec:	mov    rcx,rbx
   1400403ef:	call   0x14003fe30
   1400403f4:	mov    rdi,QWORD PTR [rbx+0x8]
   1400403f8:	mov    QWORD PTR [rsp+0x40],rdi
   1400403fd:	mov    QWORD PTR [rsp+0x48],rdi
   140040402:	test   rdi,rdi
   140040405:	je     0x140040428
   140040407:	mov    eax,DWORD PTR [rsi]
   140040409:	mov    DWORD PTR [rdi],eax
   14004040b:	mov    rax,QWORD PTR [rsi+0x8]
   14004040f:	mov    QWORD PTR [rdi+0x8],rax
   140040413:	lea    rdx,[rsi+0x10]
   140040417:	lea    rcx,[rdi+0x10]
   14004041b:	call   0x140035b50
   140040420:	mov    r11,QWORD PTR [rsi+0x68]
   140040424:	mov    QWORD PTR [rdi+0x68],r11
   140040428:	add    QWORD PTR [rbx+0x8],0x70
   14004042d:	mov    rbx,QWORD PTR [rsp+0x50]
   140040432:	mov    rsi,QWORD PTR [rsp+0x58]
   140040437:	add    rsp,0x30
   14004043b:	pop    rdi
   14004043c:	ret    
   14004043d:	int3   
   14004043e:	int3   
   14004043f:	int3   
   140040440:	mov    rax,rsp
   140040443:	push   rdi
   140040444:	sub    rsp,0xe0
   14004044b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040454:	mov    QWORD PTR [rax+0x8],rbx
   140040458:	mov    QWORD PTR [rax+0x10],rsi
   14004045c:	mov    ebx,r9d
   14004045f:	mov    rdi,r8
   140040462:	mov    rsi,rdx
   140040465:	mov    rdx,rcx
   140040468:	lea    rcx,[rsp+0x30]
   14004046d:	call   0x140035fc0
   140040472:	xor    r11d,r11d
   140040475:	mov    DWORD PTR [rsp+0x98],r11d
   14004047d:	mov    DWORD PTR [rsp+0x9c],0xffffffff
   140040488:	mov    DWORD PTR [rsp+0xa0],r11d
   140040490:	mov    QWORD PTR [rsp+0xa8],r11
   140040498:	mov    QWORD PTR [rsp+0xb0],r11
   1400404a0:	mov    BYTE PTR [rsp+0xb8],r11b
   1400404a8:	mov    QWORD PTR [rsp+0xc0],r11
   1400404b0:	mov    QWORD PTR [rsp+0xc8],r11
   1400404b8:	mov    QWORD PTR [rsp+0xd0],r11
   1400404c0:	mov    r9d,ebx
   1400404c3:	mov    r8,rdi
   1400404c6:	mov    rdx,rsi
   1400404c9:	lea    rcx,[rsp+0x30]
   1400404ce:	call   0x14003fee0
   1400404d3:	nop
   1400404d4:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400404dc:	test   rcx,rcx
   1400404df:	je     0x1400404e6
   1400404e1:	call   0x14002b150
   1400404e6:	lea    r11,[rsp+0xe0]
   1400404ee:	mov    rbx,QWORD PTR [r11+0x10]
   1400404f2:	mov    rsi,QWORD PTR [r11+0x18]
   1400404f6:	mov    rsp,r11
   1400404f9:	pop    rdi
   1400404fa:	ret    
   1400404fb:	int3   
   1400404fc:	int3   
   1400404fd:	int3   
   1400404fe:	int3   
   1400404ff:	int3   
   140040500:	mov    rax,rsp
   140040503:	push   rbp
   140040504:	push   r12
   140040506:	push   r13
   140040508:	push   r14
   14004050a:	push   r15
   14004050c:	lea    rbp,[rax-0xe8]
   140040513:	sub    rsp,0x1c0
   14004051a:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   140040522:	mov    QWORD PTR [rax+0x10],rbx
   140040526:	mov    QWORD PTR [rax+0x18],rsi
   14004052a:	mov    QWORD PTR [rax+0x20],rdi
   14004052e:	mov    rax,QWORD PTR [rip+0x27cbb]        # 0x1400681f0
   140040535:	xor    rax,rsp
   140040538:	mov    QWORD PTR [rbp+0xb0],rax
   14004053f:	mov    r14,rcx
   140040542:	mov    QWORD PTR [rsp+0x78],rcx
   140040547:	mov    DWORD PTR [rcx],edx
   140040549:	call   0x1400426d0
   14004054e:	lea    rcx,[r14+0x408]
   140040555:	call   0x1400256e0
   14004055a:	nop
   14004055b:	lea    rcx,[r14+0x428]
   140040562:	call   0x1400256e0
   140040567:	nop
   140040568:	lea    rcx,[r14+0x448]
   14004056f:	call   0x140002fc8
   140040574:	nop
   140040575:	mov    QWORD PTR [rsp+0x30],0x0
   14004057e:	mov    QWORD PTR [rsp+0x38],0x0
   140040587:	lea    rcx,[rbp+0x10]
   14004058b:	call   0x1400352e0
   140040590:	nop
   140040591:	or     r12,0xffffffffffffffff
   140040595:	cmp    QWORD PTR [rbp+0x20],0x0
   14004059a:	je     0x1400406e5
   1400405a0:	lea    rdx,[rbp+0x10]
   1400405a4:	lea    rcx,[rsp+0x68]
   1400405a9:	call   0x1400425b0
   1400405ae:	mov    r11,rax
   1400405b1:	mov    rcx,QWORD PTR [rax]
   1400405b4:	mov    QWORD PTR [rbp-0x78],rcx
   1400405b8:	mov    rax,QWORD PTR [rax+0x8]
   1400405bc:	mov    QWORD PTR [r11+0x8],0x0
   1400405c4:	mov    QWORD PTR [r11],0x0
   1400405cb:	mov    QWORD PTR [rsp+0x30],rcx
   1400405d0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400405d5:	mov    QWORD PTR [rsp+0x38],rax
   1400405da:	test   rbx,rbx
   1400405dd:	je     0x1400405fe
   1400405df:	lock dec DWORD PTR [rbx+0x8]
   1400405e3:	jne    0x1400405fe
   1400405e5:	mov    rax,QWORD PTR [rbx]
   1400405e8:	mov    rcx,rbx
   1400405eb:	call   QWORD PTR [rax+0x8]
   1400405ee:	lock dec DWORD PTR [rbx+0xc]
   1400405f2:	jne    0x1400405fe
   1400405f4:	mov    rax,QWORD PTR [rbx]
   1400405f7:	mov    rcx,rbx
   1400405fa:	call   QWORD PTR [rax+0x10]
   1400405fd:	nop
   1400405fe:	mov    rbx,QWORD PTR [rsp+0x70]
   140040603:	test   rbx,rbx
   140040606:	je     0x140040626
   140040608:	lock dec DWORD PTR [rbx+0x8]
   14004060c:	jne    0x140040626
   14004060e:	mov    rax,QWORD PTR [rbx]
   140040611:	mov    rcx,rbx
   140040614:	call   QWORD PTR [rax+0x8]
   140040617:	lock dec DWORD PTR [rbx+0xc]
   14004061b:	jne    0x140040626
   14004061d:	mov    rax,QWORD PTR [rbx]
   140040620:	mov    rcx,rbx
   140040623:	call   QWORD PTR [rax+0x10]
   140040626:	cmp    QWORD PTR [rsp+0x30],0x0
   14004062c:	jne    0x1400406f1
   140040632:	mov    QWORD PTR [rbp+0x50],0xf
   14004063a:	mov    QWORD PTR [rbp+0x48],0x0
   140040642:	mov    BYTE PTR [rbp+0x38],0x0
   140040646:	mov    r8d,0x20
   14004064c:	lea    rdx,[rip+0xf2e5]        # 0x14004f938
   140040653:	lea    rcx,[rbp+0x38]
   140040657:	call   0x140005154
   14004065c:	nop
   14004065d:	lea    r8,[rbp+0x10]
   140040661:	lea    rdx,[rbp+0x38]
   140040665:	lea    rcx,[rbp+0x60]
   140040669:	call   0x1400093c4
   14004066e:	nop
   14004066f:	cmp    QWORD PTR [rax+0x18],0x10
   140040674:	jb     0x140040679
   140040676:	mov    rax,QWORD PTR [rax]
   140040679:	mov    QWORD PTR [rsp+0x48],rax
   14004067e:	lea    rdx,[rsp+0x48]
   140040683:	lea    rcx,[rsp+0x50]
   140040688:	call   QWORD PTR [rip+0x9242]        # 0x1400498d0
   14004068e:	lea    r11,[rip+0xd7b3]        # 0x14004de48
   140040695:	mov    QWORD PTR [rsp+0x50],r11
   14004069a:	cmp    QWORD PTR [rbp+0x78],0x10
   14004069f:	jb     0x1400406aa
   1400406a1:	mov    rcx,QWORD PTR [rbp+0x60]
   1400406a5:	call   0x14002b150
   1400406aa:	mov    QWORD PTR [rbp+0x78],0xf
   1400406b2:	mov    QWORD PTR [rbp+0x70],0x0
   1400406ba:	mov    BYTE PTR [rbp+0x60],0x0
   1400406be:	lea    rcx,[rsp+0x50]
   1400406c3:	call   0x140042430
   1400406c8:	nop
   1400406c9:	lea    rcx,[rsp+0x50]
   1400406ce:	call   QWORD PTR [rip+0x91c4]        # 0x140049898
   1400406d4:	nop
   1400406d5:	cmp    QWORD PTR [rbp+0x50],0x10
   1400406da:	jb     0x1400406e5
   1400406dc:	mov    rcx,QWORD PTR [rbp+0x38]
   1400406e0:	call   0x14002b150
   1400406e5:	cmp    QWORD PTR [rsp+0x30],0x0
   1400406eb:	je     0x140040a17
   1400406f1:	xor    r13d,r13d
   1400406f4:	mov    ecx,r13d
   1400406f7:	call   0x140043010
   1400406fc:	mov    rdi,rax
   1400406ff:	mov    edx,0xf
   140040704:	mov    QWORD PTR [rbp-0x50],rdx
   140040708:	xor    ecx,ecx
   14004070a:	mov    QWORD PTR [rbp-0x58],rcx
   14004070e:	mov    BYTE PTR [rbp-0x68],cl
   140040711:	movzx  esi,BYTE PTR [rax]
   140040714:	test   sil,sil
   140040717:	je     0x1400407bc
   14004071d:	nop    DWORD PTR [rax]
   140040720:	mov    rax,r12
   140040723:	sub    rax,rcx
   140040726:	cmp    rax,0x1
   14004072a:	jbe    0x140040936
   140040730:	lea    rbx,[rcx+0x1]
   140040734:	cmp    rbx,0xfffffffffffffffe
   140040738:	ja     0x140040928
   14004073e:	cmp    rdx,rbx
   140040741:	jae    0x140040754
   140040743:	mov    r8,rcx
   140040746:	mov    rdx,rbx
   140040749:	lea    rcx,[rbp-0x68]
   14004074d:	call   0x140005750
   140040752:	jmp    0x14004076c
   140040754:	test   rbx,rbx
   140040757:	jne    0x140040777
   140040759:	mov    QWORD PTR [rbp-0x58],rbx
   14004075d:	lea    rax,[rbp-0x68]
   140040761:	cmp    rdx,0x10
   140040765:	cmovae rax,QWORD PTR [rbp-0x68]
   14004076a:	mov    BYTE PTR [rax],bl
   14004076c:	mov    rcx,QWORD PTR [rbp-0x58]
   140040770:	mov    rdx,QWORD PTR [rbp-0x50]
   140040774:	test   rbx,rbx
   140040777:	setne  al
   14004077a:	test   al,al
   14004077c:	je     0x1400407ad
   14004077e:	lea    rax,[rbp-0x68]
   140040782:	cmp    rdx,0x10
   140040786:	cmovae rax,QWORD PTR [rbp-0x68]
   14004078b:	mov    BYTE PTR [rax+rcx*1],sil
   14004078f:	mov    QWORD PTR [rbp-0x58],rbx
   140040793:	lea    rax,[rbp-0x68]
   140040797:	cmp    QWORD PTR [rbp-0x50],0x10
   14004079c:	cmovae rax,QWORD PTR [rbp-0x68]
   1400407a1:	mov    BYTE PTR [rax+rbx*1],0x0
   1400407a5:	mov    rdx,QWORD PTR [rbp-0x50]
   1400407a9:	mov    rcx,QWORD PTR [rbp-0x58]
   1400407ad:	inc    rdi
   1400407b0:	movzx  esi,BYTE PTR [rdi]
   1400407b3:	test   sil,sil
   1400407b6:	jne    0x140040720
   1400407bc:	lea    r9d,[r13+0xc8]
   1400407c3:	lea    rax,[rbp-0x68]
   1400407c7:	mov    QWORD PTR [rsp+0x20],rax
   1400407cc:	mov    r8d,DWORD PTR [r14]
   1400407cf:	lea    rdx,[rsp+0x30]
   1400407d4:	lea    rcx,[rbp-0x18]
   1400407d8:	call   0x140042610
   1400407dd:	nop
   1400407de:	mov    edx,0xf
   1400407e3:	mov    QWORD PTR [rbp-0x28],rdx
   1400407e7:	xor    ecx,ecx
   1400407e9:	mov    QWORD PTR [rbp-0x30],rcx
   1400407ed:	mov    BYTE PTR [rbp-0x40],cl
   1400407f0:	xor    edi,edi
   1400407f2:	cmp    QWORD PTR [rbp-0x8],rdi
   1400407f6:	jbe    0x1400408ac
   1400407fc:	nop    DWORD PTR [rax+0x0]
   140040800:	lea    rax,[rbp-0x18]
   140040804:	cmp    QWORD PTR [rbp+0x0],0x10
   140040809:	cmovae rax,QWORD PTR [rbp-0x18]
   14004080e:	movzx  esi,BYTE PTR [rdi+rax*1]
   140040812:	mov    rax,r12
   140040815:	sub    rax,rcx
   140040818:	cmp    rax,0x1
   14004081c:	jbe    0x140040952
   140040822:	lea    rbx,[rcx+0x1]
   140040826:	cmp    rbx,0xfffffffffffffffe
   14004082a:	ja     0x140040944
   140040830:	cmp    rdx,rbx
   140040833:	jae    0x140040846
   140040835:	mov    r8,rcx
   140040838:	mov    rdx,rbx
   14004083b:	lea    rcx,[rbp-0x40]
   14004083f:	call   0x140005750
   140040844:	jmp    0x14004085e
   140040846:	test   rbx,rbx
   140040849:	jne    0x140040869
   14004084b:	mov    QWORD PTR [rbp-0x30],rbx
   14004084f:	lea    rax,[rbp-0x40]
   140040853:	cmp    rdx,0x10
   140040857:	cmovae rax,QWORD PTR [rbp-0x40]
   14004085c:	mov    BYTE PTR [rax],bl
   14004085e:	mov    rcx,QWORD PTR [rbp-0x30]
   140040862:	mov    rdx,QWORD PTR [rbp-0x28]
   140040866:	test   rbx,rbx
   140040869:	setne  al
   14004086c:	test   al,al
   14004086e:	je     0x14004089f
   140040870:	lea    rax,[rbp-0x40]
   140040874:	cmp    rdx,0x10
   140040878:	cmovae rax,QWORD PTR [rbp-0x40]
   14004087d:	mov    BYTE PTR [rcx+rax*1],sil
   140040881:	mov    QWORD PTR [rbp-0x30],rbx
   140040885:	lea    rax,[rbp-0x40]
   140040889:	cmp    QWORD PTR [rbp-0x28],0x10
   14004088e:	cmovae rax,QWORD PTR [rbp-0x40]
   140040893:	mov    BYTE PTR [rbx+rax*1],0x0
   140040897:	mov    rdx,QWORD PTR [rbp-0x28]
   14004089b:	mov    rcx,QWORD PTR [rbp-0x30]
   14004089f:	inc    rdi
   1400408a2:	cmp    rdi,QWORD PTR [rbp-0x8]
   1400408a6:	jb     0x140040800
   1400408ac:	mov    DWORD PTR [rsp+0x40],r13d
   1400408b1:	lea    rdx,[rsp+0x40]
   1400408b6:	lea    rcx,[r14+0x408]
   1400408bd:	call   0x140040150
   1400408c2:	mov    r9,r12
   1400408c5:	xor    r8d,r8d
   1400408c8:	lea    rdx,[rbp-0x40]
   1400408cc:	mov    rcx,rax
   1400408cf:	call   0x1400048b8
   1400408d4:	nop
   1400408d5:	cmp    QWORD PTR [rbp-0x28],0x10
   1400408da:	jb     0x1400408e6
   1400408dc:	mov    rcx,QWORD PTR [rbp-0x40]
   1400408e0:	call   0x14002b150
   1400408e5:	nop
   1400408e6:	cmp    QWORD PTR [rbp+0x0],0x10
   1400408eb:	jb     0x1400408f6
   1400408ed:	mov    rcx,QWORD PTR [rbp-0x18]
   1400408f1:	call   0x14002b150
   1400408f6:	mov    QWORD PTR [rbp+0x0],0xf
   1400408fe:	mov    QWORD PTR [rbp-0x8],0x0
   140040906:	mov    BYTE PTR [rbp-0x18],0x0
   14004090a:	cmp    QWORD PTR [rbp-0x50],0x10
   14004090f:	jb     0x14004091a
   140040911:	mov    rcx,QWORD PTR [rbp-0x68]
   140040915:	call   0x14002b150
   14004091a:	inc    r13d
   14004091d:	cmp    r13d,0x15
   140040921:	jg     0x140040960
   140040923:	jmp    0x1400406f4
   140040928:	lea    rcx,[rip+0x10019]        # 0x140050948
   14004092f:	call   QWORD PTR [rip+0x8c63]        # 0x140049598
   140040935:	int3   
   140040936:	lea    rcx,[rip+0x1000b]        # 0x140050948
   14004093d:	call   QWORD PTR [rip+0x8c55]        # 0x140049598
   140040943:	nop
   140040944:	lea    rcx,[rip+0xfffd]        # 0x140050948
   14004094b:	call   QWORD PTR [rip+0x8c47]        # 0x140049598
   140040951:	int3   
   140040952:	lea    rcx,[rip+0xffef]        # 0x140050948
   140040959:	call   QWORD PTR [rip+0x8c39]        # 0x140049598
   14004095f:	nop
   140040960:	mov    eax,DWORD PTR [rip+0x29dfa]        # 0x14006a760
   140040966:	test   al,0x1
   140040968:	jne    0x14004099d
   14004096a:	or     eax,0x1
   14004096d:	mov    DWORD PTR [rip+0x29ded],eax        # 0x14006a760
   140040973:	mov    QWORD PTR [rip+0x29dd2],0xf        # 0x14006a750
   14004097e:	mov    QWORD PTR [rip+0x29dbf],0x0        # 0x14006a748
   140040989:	mov    BYTE PTR [rip+0x29da8],0x0        # 0x14006a738
   140040990:	lea    rcx,[rip+0x7db9]        # 0x140048750
   140040997:	call   0x14002b278
   14004099c:	nop
   14004099d:	xor    ebx,ebx
   14004099f:	lea    rdi,[rip+0xef5a]        # 0x14004f900
   1400409a6:	lea    r13,[rip+0x29d8b]        # 0x14006a738
   1400409ad:	nop    DWORD PTR [rax]
   1400409b0:	lea    r9d,[rbx+0x12c]
   1400409b7:	mov    QWORD PTR [rsp+0x20],r13
   1400409bc:	mov    r8d,DWORD PTR [r14]
   1400409bf:	lea    rdx,[rsp+0x30]
   1400409c4:	lea    rcx,[rbp+0x88]
   1400409cb:	call   0x140042610
   1400409d0:	nop
   1400409d1:	cmp    QWORD PTR [rbp+0x98],0x0
   1400409d9:	je     0x1400409f6
   1400409db:	lea    rdx,[rbp+0x88]
   1400409e2:	lea    rcx,[r14+0x428]
   1400409e9:	call   0x14003dd20
   1400409ee:	mov    r11,rax
   1400409f1:	mov    eax,DWORD PTR [rdi]
   1400409f3:	mov    DWORD PTR [r11],eax
   1400409f6:	cmp    QWORD PTR [rbp+0xa0],0x10
   1400409fe:	jb     0x140040a0c
   140040a00:	mov    rcx,QWORD PTR [rbp+0x88]
   140040a07:	call   0x14002b150
   140040a0c:	inc    ebx
   140040a0e:	add    rdi,0x4
   140040a12:	cmp    ebx,0xd
   140040a15:	jbe    0x1400409b0
   140040a17:	lea    rdx,[r14+0x46c]
   140040a1e:	mov    rcx,r14
   140040a21:	call   0x14002ffe0
   140040a26:	mov    DWORD PTR [r14+0x468],eax
   140040a2d:	cmp    QWORD PTR [rbp+0x28],0x10
   140040a32:	jb     0x140040a3d
   140040a34:	mov    rcx,QWORD PTR [rbp+0x10]
   140040a38:	call   0x14002b150
   140040a3d:	mov    QWORD PTR [rbp+0x28],0xf
   140040a45:	mov    QWORD PTR [rbp+0x20],0x0
   140040a4d:	mov    BYTE PTR [rbp+0x10],0x0
   140040a51:	mov    rbx,QWORD PTR [rsp+0x38]
   140040a56:	test   rbx,rbx
   140040a59:	je     0x140040a7a
   140040a5b:	lock dec DWORD PTR [rbx+0x8]
   140040a5f:	jne    0x140040a7a
   140040a61:	mov    rdx,QWORD PTR [rbx]
   140040a64:	mov    rcx,rbx
   140040a67:	call   QWORD PTR [rdx+0x8]
   140040a6a:	lock dec DWORD PTR [rbx+0xc]
   140040a6e:	jne    0x140040a7a
   140040a70:	mov    rdx,QWORD PTR [rbx]
   140040a73:	mov    rcx,rbx
   140040a76:	call   QWORD PTR [rdx+0x10]
   140040a79:	nop
   140040a7a:	mov    rax,r14
   140040a7d:	mov    rcx,QWORD PTR [rbp+0xb0]
   140040a84:	xor    rcx,rsp
   140040a87:	call   0x14002b100
   140040a8c:	lea    r11,[rsp+0x1c0]
   140040a94:	mov    rbx,QWORD PTR [r11+0x38]
   140040a98:	mov    rsi,QWORD PTR [r11+0x40]
   140040a9c:	mov    rdi,QWORD PTR [r11+0x48]
   140040aa0:	mov    rsp,r11
   140040aa3:	pop    r15
   140040aa5:	pop    r14
   140040aa7:	pop    r13
   140040aa9:	pop    r12
   140040aab:	pop    rbp
   140040aac:	ret    
   140040aad:	int3   
   140040aae:	int3   
   140040aaf:	int3   
   140040ab0:	mov    rax,rsp
   140040ab3:	push   rdi
   140040ab4:	sub    rsp,0xa0
   140040abb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040ac4:	mov    QWORD PTR [rax+0x8],rbx
   140040ac8:	mov    QWORD PTR [rax+0x10],rsi
   140040acc:	mov    rbx,rcx
   140040acf:	mov    rax,QWORD PTR [rcx+0xe0]
   140040ad6:	sub    rax,0x8
   140040ada:	cmp    rax,QWORD PTR [rcx+0xd8]
   140040ae1:	jae    0x140040af3
   140040ae3:	call   0x140035bd0
   140040ae8:	mov    rax,QWORD PTR [rbx+0xe0]
   140040aef:	sub    rax,0x8
   140040af3:	test   rax,rax
   140040af6:	je     0x140040afe
   140040af8:	mov    DWORD PTR [rax],0xf
   140040afe:	mov    QWORD PTR [rbx+0xe0],rax
   140040b05:	mov    rcx,QWORD PTR [rbx+0xc8]
   140040b0c:	sub    rcx,QWORD PTR [rbx+0xb8]
   140040b13:	movabs rax,0x4924924924924925
   140040b1d:	imul   rcx
   140040b20:	sar    rdx,0x5
   140040b24:	mov    rax,rdx
   140040b27:	shr    rax,0x3f
   140040b2b:	add    rdx,rax
   140040b2e:	jne    0x140040b41
   140040b30:	mov    edx,0x32
   140040b35:	lea    rcx,[rbx+0xb8]
   140040b3c:	call   0x14003fd10
   140040b41:	xor    eax,eax
   140040b43:	mov    QWORD PTR [rsp+0x38],rax
   140040b48:	mov    QWORD PTR [rsp+0x40],rax
   140040b4d:	mov    QWORD PTR [rsp+0x48],rax
   140040b52:	mov    QWORD PTR [rsp+0x58],rax
   140040b57:	mov    QWORD PTR [rsp+0x60],rax
   140040b5c:	mov    QWORD PTR [rsp+0x68],rax
   140040b61:	mov    BYTE PTR [rsp+0x70],al
   140040b65:	mov    QWORD PTR [rsp+0x78],rax
   140040b6a:	mov    QWORD PTR [rsp+0x80],rax
   140040b72:	mov    DWORD PTR [rsp+0x88],eax
   140040b79:	mov    BYTE PTR [rsp+0x8c],0x1
   140040b81:	lea    rdx,[rsp+0x28]
   140040b86:	lea    rcx,[rbx+0xb8]
   140040b8d:	call   0x140040340
   140040b92:	nop
   140040b93:	lea    rcx,[rsp+0x38]
   140040b98:	call   0x140020e68
   140040b9d:	mov    rax,QWORD PTR [rbx+0xc0]
   140040ba4:	mov    rcx,QWORD PTR [rbx+0x58]
   140040ba8:	mov    rdx,QWORD PTR [rcx+0x8]
   140040bac:	mov    QWORD PTR [rax-0x68],rdx
   140040bb0:	mov    rsi,QWORD PTR [rbx+0xc0]
   140040bb7:	mov    rdi,QWORD PTR [rbx+0x10]
   140040bbb:	mov    rdx,rdi
   140040bbe:	lea    rcx,[rsi-0x60]
   140040bc2:	call   0x140031d30
   140040bc7:	lea    rdx,[rdi+0x40]
   140040bcb:	lea    rcx,[rsi-0x20]
   140040bcf:	call   0x14002f1b0
   140040bd4:	mov    r11d,DWORD PTR [rdi+0x50]
   140040bd8:	mov    DWORD PTR [rsi-0x10],r11d
   140040bdc:	movzx  eax,BYTE PTR [rdi+0x54]
   140040be0:	mov    BYTE PTR [rsi-0xc],al
   140040be3:	test   al,al
   140040be5:	jne    0x140040c06
   140040be7:	mov    rax,QWORD PTR [rdi+0x20]
   140040beb:	mov    QWORD PTR [rsi-0x40],rax
   140040bef:	mov    rax,QWORD PTR [rdi+0x28]
   140040bf3:	mov    QWORD PTR [rsi-0x38],rax
   140040bf7:	mov    rax,QWORD PTR [rdi+0x30]
   140040bfb:	mov    QWORD PTR [rsi-0x30],rax
   140040bff:	movzx  eax,BYTE PTR [rdi+0x38]
   140040c03:	mov    BYTE PTR [rsi-0x28],al
   140040c06:	mov    rax,QWORD PTR [rbx+0x58]
   140040c0a:	mov    edx,DWORD PTR [rax+0x18]
   140040c0d:	test   edx,edx
   140040c0f:	jle    0x140040c20
   140040c11:	lea    r8,[rbx+0x80]
   140040c18:	mov    rcx,rbx
   140040c1b:	call   0x140035d90
   140040c20:	mov    rax,QWORD PTR [rbx+0x58]
   140040c24:	mov    rcx,QWORD PTR [rax+0x10]
   140040c28:	mov    QWORD PTR [rbx+0x58],rcx
   140040c2c:	mov    rax,QWORD PTR [rbx+0xc0]
   140040c33:	mov    ecx,DWORD PTR [rcx+0x10]
   140040c36:	mov    DWORD PTR [rax-0x70],ecx
   140040c39:	mov    al,0x1
   140040c3b:	lea    r11,[rsp+0xa0]
   140040c43:	mov    rbx,QWORD PTR [r11+0x10]
   140040c47:	mov    rsi,QWORD PTR [r11+0x18]
   140040c4b:	mov    rsp,r11
   140040c4e:	pop    rdi
   140040c4f:	ret    
   140040c50:	mov    r11,rsp
   140040c53:	push   rdi
   140040c54:	sub    rsp,0xa0
   140040c5b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040c64:	mov    QWORD PTR [r11+0x8],rbx
   140040c68:	mov    QWORD PTR [r11+0x10],rbp
   140040c6c:	mov    QWORD PTR [r11+0x18],rsi
   140040c70:	mov    rbp,rcx
   140040c73:	mov    rsi,QWORD PTR [rcx+0xe0]
   140040c7a:	test   dl,dl
   140040c7c:	jne    0x140040d3b
   140040c82:	xor    eax,eax
   140040c84:	mov    QWORD PTR [r11-0x70],rax
   140040c88:	mov    QWORD PTR [r11-0x68],rax
   140040c8c:	mov    QWORD PTR [r11-0x60],rax
   140040c90:	mov    QWORD PTR [r11-0x50],rax
   140040c94:	mov    QWORD PTR [r11-0x48],rax
   140040c98:	mov    QWORD PTR [r11-0x40],rax
   140040c9c:	mov    BYTE PTR [rsp+0x70],al
   140040ca0:	mov    QWORD PTR [r11-0x30],rax
   140040ca4:	mov    QWORD PTR [r11-0x28],rax
   140040ca8:	mov    DWORD PTR [r11-0x20],eax
   140040cac:	mov    BYTE PTR [r11-0x1c],0x1
   140040cb1:	add    rcx,0xb8
   140040cb8:	lea    rdx,[r11-0x80]
   140040cbc:	call   0x140040340
   140040cc1:	nop
   140040cc2:	lea    rcx,[rsp+0x38]
   140040cc7:	call   0x140020e68
   140040ccc:	mov    rax,QWORD PTR [rbp+0xc0]
   140040cd3:	mov    ecx,DWORD PTR [rsi+0x8]
   140040cd6:	mov    DWORD PTR [rax-0x70],ecx
   140040cd9:	mov    rax,QWORD PTR [rbp+0xc0]
   140040ce0:	mov    rcx,QWORD PTR [rsi+0x10]
   140040ce4:	mov    QWORD PTR [rax-0x68],rcx
   140040ce8:	mov    rdi,QWORD PTR [rbp+0xc0]
   140040cef:	lea    rdx,[rsi+0x18]
   140040cf3:	lea    rcx,[rdi-0x60]
   140040cf7:	call   0x140031d30
   140040cfc:	lea    rdx,[rsi+0x58]
   140040d00:	lea    rcx,[rdi-0x20]
   140040d04:	call   0x14002f1b0
   140040d09:	mov    r11d,DWORD PTR [rsi+0x68]
   140040d0d:	mov    DWORD PTR [rdi-0x10],r11d
   140040d11:	movzx  eax,BYTE PTR [rsi+0x6c]
   140040d15:	mov    BYTE PTR [rdi-0xc],al
   140040d18:	test   al,al
   140040d1a:	jne    0x140040d3b
   140040d1c:	mov    rax,QWORD PTR [rsi+0x38]
   140040d20:	mov    QWORD PTR [rdi-0x40],rax
   140040d24:	mov    rax,QWORD PTR [rsi+0x40]
   140040d28:	mov    QWORD PTR [rdi-0x38],rax
   140040d2c:	mov    rax,QWORD PTR [rsi+0x48]
   140040d30:	mov    QWORD PTR [rdi-0x30],rax
   140040d34:	movzx  eax,BYTE PTR [rsi+0x50]
   140040d38:	mov    BYTE PTR [rdi-0x28],al
   140040d3b:	lea    rcx,[rsi+0x18]
   140040d3f:	call   0x140020e68
   140040d44:	lea    r11,[rsi+0x70]
   140040d48:	mov    QWORD PTR [rbp+0xe0],r11
   140040d4f:	mov    al,0x1
   140040d51:	lea    r11,[rsp+0xa0]
   140040d59:	mov    rbx,QWORD PTR [r11+0x10]
   140040d5d:	mov    rbp,QWORD PTR [r11+0x18]
   140040d61:	mov    rsi,QWORD PTR [r11+0x20]
   140040d65:	mov    rsp,r11
   140040d68:	pop    rdi
   140040d69:	ret    
   140040d6a:	int3   
   140040d6b:	int3   
   140040d6c:	int3   
   140040d6d:	int3   
   140040d6e:	int3   
   140040d6f:	int3   
   140040d70:	mov    QWORD PTR [rsp+0x8],rbx
   140040d75:	push   rdi
   140040d76:	sub    rsp,0x20
   140040d7a:	mov    rbx,rcx
   140040d7d:	mov    BYTE PTR [rcx+0xe8],dl
   140040d83:	lea    rdi,[rip+0xec26]        # 0x14004f9b0
   140040d8a:	nop    WORD PTR [rax+rax*1+0x0]
   140040d90:	mov    rax,QWORD PTR [rbx+0xe0]
   140040d97:	mov    rcx,rbx
   140040d9a:	mov    edx,DWORD PTR [rax]
   140040d9c:	mov    rax,QWORD PTR [rdi+rdx*8]
   140040da0:	movzx  edx,BYTE PTR [rbx+0xe8]
   140040da7:	call   rax
   140040da9:	test   al,al
   140040dab:	jne    0x140040d90
   140040dad:	cmp    QWORD PTR [rbx+0x58],0x0
   140040db2:	mov    rbx,QWORD PTR [rsp+0x30]
   140040db7:	setne  al
   140040dba:	add    rsp,0x20
   140040dbe:	pop    rdi
   140040dbf:	ret    
   140040dc0:	mov    QWORD PTR [rsp+0x10],rdx
   140040dc5:	push   rdi
   140040dc6:	sub    rsp,0x30
   140040dca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040dd3:	mov    QWORD PTR [rsp+0x40],rbx
   140040dd8:	mov    rdi,rdx
   140040ddb:	mov    rbx,rcx
   140040dde:	mov    QWORD PTR [rcx],0x0
   140040de5:	mov    ecx,0x18
   140040dea:	call   0x14002b1c2
   140040def:	test   rax,rax
   140040df2:	je     0x140040e10
   140040df4:	mov    DWORD PTR [rax+0x8],0x1
   140040dfb:	mov    DWORD PTR [rax+0xc],0x1
   140040e02:	lea    rcx,[rip+0xd0d7]        # 0x14004dee0
   140040e09:	mov    QWORD PTR [rax],rcx
   140040e0c:	mov    QWORD PTR [rax+0x10],rdi
   140040e10:	mov    QWORD PTR [rbx],rax
   140040e13:	mov    rax,rbx
   140040e16:	mov    rbx,QWORD PTR [rsp+0x40]
   140040e1b:	add    rsp,0x30
   140040e1f:	pop    rdi
   140040e20:	ret    
   140040e21:	int3   
   140040e22:	int3   
   140040e23:	int3   
   140040e24:	int3   
   140040e25:	int3   
   140040e26:	int3   
   140040e27:	int3   
   140040e28:	int3   
   140040e29:	int3   
   140040e2a:	int3   
   140040e2b:	int3   
   140040e2c:	int3   
   140040e2d:	int3   
   140040e2e:	int3   
   140040e2f:	int3   
   140040e30:	rex push rbx
   140040e32:	sub    rsp,0x20
   140040e36:	mov    rbx,QWORD PTR [rcx+0x10]
   140040e3a:	test   rbx,rbx
   140040e3d:	je     0x140040e4f
   140040e3f:	mov    rcx,rbx
   140040e42:	call   0x140040290
   140040e47:	mov    rcx,rbx
   140040e4a:	call   0x14002b150
   140040e4f:	add    rsp,0x20
   140040e53:	pop    rbx
   140040e54:	ret    
   140040e55:	int3   
   140040e56:	int3   
   140040e57:	int3   
   140040e58:	int3   
   140040e59:	int3   
   140040e5a:	int3   
   140040e5b:	int3   
   140040e5c:	int3   
   140040e5d:	int3   
   140040e5e:	int3   
   140040e5f:	int3   
   140040e60:	mov    QWORD PTR [rsp+0x8],rbx
   140040e65:	push   rdi
   140040e66:	sub    rsp,0x20
   140040e6a:	mov    rax,QWORD PTR [rcx+0xe0]
   140040e71:	mov    rbx,rcx
   140040e74:	sub    rax,0x8
   140040e78:	cmp    rax,QWORD PTR [rcx+0xd8]
   140040e7f:	jae    0x140040e91
   140040e81:	call   0x140035bd0
   140040e86:	mov    rax,QWORD PTR [rbx+0xe0]
   140040e8d:	sub    rax,0x8
   140040e91:	test   rax,rax
   140040e94:	je     0x140040e9c
   140040e96:	mov    DWORD PTR [rax],0x2
   140040e9c:	cmp    QWORD PTR [rbx+0x58],0x0
   140040ea1:	mov    QWORD PTR [rbx+0xe0],rax
   140040ea8:	lea    rdi,[rip+0xfffffffffffbf151]        # 0x140000000
   140040eaf:	je     0x140040f75
   140040eb5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140040ec0:	mov    rax,QWORD PTR [rbx+0x58]
   140040ec4:	movsxd rcx,DWORD PTR [rax]
   140040ec7:	mov    rax,QWORD PTR [rdi+rcx*8+0x4fa70]
   140040ecf:	inc    QWORD PTR [rbx+0x68]
   140040ed3:	mov    rcx,rbx
   140040ed6:	call   rax
   140040ed8:	test   al,al
   140040eda:	jne    0x140040f6a
   140040ee0:	mov    rax,QWORD PTR [rbx+0x70]
   140040ee4:	cmp    QWORD PTR [rbx+0x68],rax
   140040ee8:	jle    0x140040ef8
   140040eea:	mov    rcx,QWORD PTR [rbx+0x50]
   140040eee:	mov    edx,0x12
   140040ef3:	call   0x140034440
   140040ef8:	test   DWORD PTR [rbx+0x60],0x2000
   140040eff:	je     0x140040f15
   140040f01:	mov    rax,QWORD PTR [rbx+0x28]
   140040f05:	cmp    rax,QWORD PTR [rbx+0x20]
   140040f09:	jne    0x140040f15
   140040f0b:	cmp    rax,QWORD PTR [rbx+0x38]
   140040f0f:	je     0x140040f15
   140040f11:	mov    BYTE PTR [rbx+0x79],0x1
   140040f15:	mov    BYTE PTR [rbx+0xe8],0x0
   140040f1c:	nop    DWORD PTR [rax+0x0]
   140040f20:	mov    rax,QWORD PTR [rbx+0xe0]
   140040f27:	movzx  edx,BYTE PTR [rbx+0xe8]
   140040f2e:	mov    ecx,DWORD PTR [rax]
   140040f30:	mov    rax,QWORD PTR [rdi+rcx*8+0x4f9b0]
   140040f38:	mov    rcx,rbx
   140040f3b:	call   rax
   140040f3d:	test   al,al
   140040f3f:	jne    0x140040f20
   140040f41:	cmp    QWORD PTR [rbx+0x58],0x0
   140040f46:	setne  cl
   140040f49:	test   DWORD PTR [rbx+0x60],0x2000
   140040f50:	je     0x140040f66
   140040f52:	mov    rax,QWORD PTR [rbx+0x28]
   140040f56:	cmp    rax,QWORD PTR [rbx+0x20]
   140040f5a:	jne    0x140040f66
   140040f5c:	cmp    rax,QWORD PTR [rbx+0x38]
   140040f60:	je     0x140040f66
   140040f62:	mov    BYTE PTR [rbx+0x79],0x1
   140040f66:	test   cl,cl
   140040f68:	je     0x140040fac
   140040f6a:	cmp    QWORD PTR [rbx+0x58],0x0
   140040f6f:	jne    0x140040ec0
   140040f75:	mov    BYTE PTR [rbx+0xe8],0x1
   140040f7c:	nop    DWORD PTR [rax+0x0]
   140040f80:	mov    rax,QWORD PTR [rbx+0xe0]
   140040f87:	movzx  edx,BYTE PTR [rbx+0xe8]
   140040f8e:	mov    ecx,DWORD PTR [rax]
   140040f90:	mov    rax,QWORD PTR [rdi+rcx*8+0x4f9b0]
   140040f98:	mov    rcx,rbx
   140040f9b:	call   rax
   140040f9d:	test   al,al
   140040f9f:	jne    0x140040f80
   140040fa1:	cmp    QWORD PTR [rbx+0x58],0x0
   140040fa6:	jne    0x140040ec0
   140040fac:	movzx  eax,BYTE PTR [rbx+0xe8]
   140040fb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140040fb8:	add    rsp,0x20
   140040fbc:	pop    rdi
   140040fbd:	ret    
   140040fbe:	int3   
   140040fbf:	int3   
   140040fc0:	rex push rbx
   140040fc2:	sub    rsp,0x20
   140040fc6:	mov    rax,QWORD PTR [rcx+0x48]
   140040fca:	mov    WORD PTR [rcx+0x79],0x0
   140040fd0:	mov    rbx,rcx
   140040fd3:	mov    rdx,QWORD PTR [rax]
   140040fd6:	mov    rax,QWORD PTR [rdx+0x50]
   140040fda:	mov    rdx,QWORD PTR [rcx+0x28]
   140040fde:	mov    QWORD PTR [rcx+0x58],rax
   140040fe2:	mov    rcx,QWORD PTR [rcx+0x10]
   140040fe6:	call   0x14002e000
   140040feb:	mov    rax,QWORD PTR [rbx+0x28]
   140040fef:	mov    rcx,rbx
   140040ff2:	mov    QWORD PTR [rbx+0x30],rax
   140040ff6:	call   0x140040e60
   140040ffb:	cmp    BYTE PTR [rbx+0x7a],0x0
   140040fff:	jne    0x14004105a
   140041001:	cmp    BYTE PTR [rbx+0x79],0x0
   140041005:	je     0x14004105a
   140041007:	test   DWORD PTR [rbx+0x60],0x2000
   14004100e:	je     0x14004105a
   140041010:	mov    r8,QWORD PTR [rbx+0x10]
   140041014:	mov    rax,QWORD PTR [rbx+0x20]
   140041018:	mov    BYTE PTR [rbx+0x7a],0x1
   14004101c:	mov    rcx,QWORD PTR [r8]
   14004101f:	mov    QWORD PTR [rcx+0x38],rax
   140041023:	mov    rcx,QWORD PTR [r8]
   140041026:	mov    BYTE PTR [rcx+0x40],0x0
   14004102a:	mov    rcx,QWORD PTR [r8]
   14004102d:	mov    QWORD PTR [rcx],rax
   140041030:	mov    rdx,QWORD PTR [r8]
   140041033:	mov    rcx,QWORD PTR [rdx+0x8]
   140041037:	cmp    QWORD PTR [rdx],rcx
   14004103a:	setne  cl
   14004103d:	mov    BYTE PTR [rdx+0x10],cl
   140041040:	mov    QWORD PTR [r8+0x28],rax
   140041044:	mov    QWORD PTR [r8+0x30],rax
   140041048:	mov    BYTE PTR [r8+0x38],0x0
   14004104d:	mov    BYTE PTR [r8+0x54],0x0
   140041052:	mov    rax,QWORD PTR [rbx+0x20]
   140041056:	mov    QWORD PTR [rbx+0x28],rax
   14004105a:	movzx  eax,BYTE PTR [rbx+0x7a]
   14004105e:	test   al,al
   140041060:	jne    0x14004106a
   140041062:	mov    rcx,QWORD PTR [rbx+0x30]
   140041066:	mov    QWORD PTR [rbx+0x28],rcx
   14004106a:	add    rsp,0x20
   14004106e:	pop    rbx
   14004106f:	ret    
   140041070:	mov    rax,rsp
   140041073:	mov    QWORD PTR [rax+0x18],r8
   140041077:	mov    QWORD PTR [rax+0x8],rcx
   14004107b:	push   rbp
   14004107c:	push   rsi
   14004107d:	push   rdi
   14004107e:	push   r12
   140041080:	push   r13
   140041082:	push   r14
   140041084:	push   r15
   140041086:	lea    rbp,[rax-0x5f]
   14004108a:	sub    rsp,0x100
   140041091:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   140041099:	mov    QWORD PTR [rax+0x10],rbx
   14004109d:	mov    r12,r8
   1400410a0:	mov    rdi,rdx
   1400410a3:	mov    r15,rcx
   1400410a6:	xor    r13d,r13d
   1400410a9:	mov    DWORD PTR [rbp+0x7f],r13d
   1400410ad:	mov    eax,DWORD PTR [rip+0x296ed]        # 0x14006a7a0
   1400410b3:	test   al,0x1
   1400410b5:	jne    0x140041134
   1400410b7:	or     eax,0x1
   1400410ba:	mov    DWORD PTR [rip+0x296e0],eax        # 0x14006a7a0
   1400410c0:	mov    QWORD PTR [rip+0x296a9],r13        # 0x14006a770
   1400410c7:	lea    ecx,[r13+0x28]
   1400410cb:	call   0x14002b1c2
   1400410d0:	test   rax,rax
   1400410d3:	je     0x140041106
   1400410d5:	mov    QWORD PTR [rip+0x2968c],rax        # 0x14006a768
   1400410dc:	mov    QWORD PTR [rax],rax
   1400410df:	mov    rax,QWORD PTR [rip+0x29682]        # 0x14006a768
   1400410e6:	mov    QWORD PTR [rax+0x8],rax
   1400410ea:	lea    rcx,[rip+0x2968f]        # 0x14006a780
   1400410f1:	call   0x140033360
   1400410f6:	nop
   1400410f7:	lea    rcx,[rip+0x76d2]        # 0x1400487d0
   1400410fe:	call   0x14002b278
   140041103:	nop
   140041104:	jmp    0x140041134
   140041106:	mov    QWORD PTR [rbp-0x41],r13
   14004110a:	lea    rdx,[rbp-0x41]
   14004110e:	lea    rcx,[rbp-0x19]
   140041112:	call   QWORD PTR [rip+0x87b8]        # 0x1400498d0
   140041118:	lea    r11,[rip+0x90b9]        # 0x14004a1d8
   14004111f:	mov    QWORD PTR [rbp-0x19],r11
   140041123:	lea    rdx,[rip+0x2261e]        # 0x140063748
   14004112a:	lea    rcx,[rbp-0x19]
   14004112e:	call   0x14002b560
   140041133:	nop
   140041134:	mov    rdx,QWORD PTR [rip+0x2964d]        # 0x14006a788
   14004113b:	mov    rax,QWORD PTR [rdx+0x8]
   14004113f:	mov    rcx,rdx
   140041142:	cmp    BYTE PTR [rax+0x29],0x0
   140041146:	jne    0x140041168
   140041148:	mov    r8d,DWORD PTR [rdi]
   14004114b:	nop    DWORD PTR [rax+rax*1+0x0]
   140041150:	cmp    DWORD PTR [rax+0x18],r8d
   140041154:	jae    0x14004115c
   140041156:	mov    rax,QWORD PTR [rax+0x10]
   14004115a:	jmp    0x140041162
   14004115c:	mov    rcx,rax
   14004115f:	mov    rax,QWORD PTR [rax]
   140041162:	cmp    BYTE PTR [rax+0x29],0x0
   140041166:	je     0x140041150
   140041168:	mov    QWORD PTR [rbp-0x49],rcx
   14004116c:	cmp    rcx,rdx
   14004116f:	je     0x14004117e
   140041171:	mov    eax,DWORD PTR [rcx+0x18]
   140041174:	cmp    DWORD PTR [rdi],eax
   140041176:	jb     0x14004117e
   140041178:	lea    rbx,[rbp-0x49]
   14004117c:	jmp    0x140041186
   14004117e:	mov    QWORD PTR [rbp-0x51],rdx
   140041182:	lea    rbx,[rbp-0x51]
   140041186:	mov    rbx,QWORD PTR [rbx]
   140041189:	cmp    rbx,rdx
   14004118c:	je     0x14004130f
   140041192:	mov    rdx,QWORD PTR [rip+0x295cf]        # 0x14006a768
   140041199:	mov    rax,QWORD PTR [rdx+0x8]
   14004119d:	cmp    rax,QWORD PTR [rbx+0x20]
   1400411a1:	je     0x1400412ee
   1400411a7:	mov    QWORD PTR [rsp+0x48],r13
   1400411ac:	mov    ecx,0x28
   1400411b1:	call   0x14002b1c2
   1400411b6:	mov    rdi,rax
   1400411b9:	test   rax,rax
   1400411bc:	je     0x1400412c0
   1400411c2:	mov    QWORD PTR [rsp+0x40],rax
   1400411c7:	mov    QWORD PTR [rax],rax
   1400411ca:	mov    QWORD PTR [rax+0x8],rax
   1400411ce:	mov    r9,QWORD PTR [rbx+0x20]
   1400411d2:	mov    rcx,QWORD PTR [rip+0x2958f]        # 0x14006a768
   1400411d9:	cmp    r9,rcx
   1400411dc:	je     0x140041210
   1400411de:	mov    rax,QWORD PTR [r9]
   1400411e1:	mov    QWORD PTR [rsp+0x28],0x1
   1400411ea:	mov    QWORD PTR [rsp+0x20],rax
   1400411ef:	lea    r8,[rip+0x29572]        # 0x14006a768
   1400411f6:	mov    rdx,rdi
   1400411f9:	lea    rcx,[rsp+0x40]
   1400411fe:	call   0x14002fb80
   140041203:	mov    rdi,QWORD PTR [rsp+0x40]
   140041208:	mov    rcx,QWORD PTR [rip+0x29559]        # 0x14006a768
   14004120f:	nop
   140041210:	mov    r9,QWORD PTR [rdi]
   140041213:	cmp    r9,rdi
   140041216:	je     0x140041250
   140041218:	mov    rax,QWORD PTR [r9]
   14004121b:	mov    QWORD PTR [rsp+0x28],0x1
   140041224:	mov    QWORD PTR [rsp+0x20],rax
   140041229:	lea    r8,[rsp+0x40]
   14004122e:	mov    rdx,rcx
   140041231:	lea    rcx,[rip+0x29530]        # 0x14006a768
   140041238:	call   0x14002fb80
   14004123d:	mov    rdi,QWORD PTR [rsp+0x40]
   140041242:	mov    rcx,QWORD PTR [rip+0x2951f]        # 0x14006a768
   140041249:	nop    DWORD PTR [rax+0x0]
   140041250:	mov    rax,QWORD PTR [rcx+0x8]
   140041254:	mov    QWORD PTR [rbx+0x20],rax
   140041258:	mov    rsi,QWORD PTR [rdi]
   14004125b:	mov    QWORD PTR [rdi],rdi
   14004125e:	mov    QWORD PTR [rdi+0x8],rdi
   140041262:	mov    QWORD PTR [rsp+0x48],r13
   140041267:	cmp    rsi,rdi
   14004126a:	je     0x1400412af
   14004126c:	nop    DWORD PTR [rax+0x0]
   140041270:	mov    r12,QWORD PTR [rsi]
   140041273:	mov    rbx,QWORD PTR [rsi+0x18]
   140041277:	test   rbx,rbx
   14004127a:	je     0x14004129f
   14004127c:	lock dec DWORD PTR [rbx+0x8]
   140041280:	jne    0x14004129a
   140041282:	mov    rax,QWORD PTR [rbx]
   140041285:	mov    rcx,rbx
   140041288:	call   QWORD PTR [rax+0x8]
   14004128b:	lock dec DWORD PTR [rbx+0xc]
   14004128f:	jne    0x14004129a
   140041291:	mov    rax,QWORD PTR [rbx]
   140041294:	mov    rcx,rbx
   140041297:	call   QWORD PTR [rax+0x10]
   14004129a:	mov    rdi,QWORD PTR [rsp+0x40]
   14004129f:	mov    rcx,rsi
   1400412a2:	call   0x14002b150
   1400412a7:	mov    rsi,r12
   1400412aa:	cmp    r12,rdi
   1400412ad:	jne    0x140041270
   1400412af:	mov    rcx,rdi
   1400412b2:	call   0x14002b150
   1400412b7:	mov    rdx,QWORD PTR [rip+0x294aa]        # 0x14006a768
   1400412be:	jmp    0x1400412ee
   1400412c0:	mov    QWORD PTR [rbp-0x59],r13
   1400412c4:	lea    rdx,[rbp-0x59]
   1400412c8:	lea    rcx,[rbp+0x7]
   1400412cc:	call   QWORD PTR [rip+0x85fe]        # 0x1400498d0
   1400412d2:	lea    r11,[rip+0x8eff]        # 0x14004a1d8
   1400412d9:	mov    QWORD PTR [rbp+0x7],r11
   1400412dd:	lea    rdx,[rip+0x22464]        # 0x140063748
   1400412e4:	lea    rcx,[rbp+0x7]
   1400412e8:	call   0x14002b560
   1400412ed:	int3   
   1400412ee:	mov    rax,QWORD PTR [rdx+0x8]
   1400412f2:	mov    rcx,QWORD PTR [rax+0x10]
   1400412f6:	mov    QWORD PTR [r15],rcx
   1400412f9:	mov    rcx,QWORD PTR [rax+0x18]
   1400412fd:	mov    QWORD PTR [r15+0x8],rcx
   140041301:	test   rcx,rcx
   140041304:	je     0x14004130a
   140041306:	lock inc DWORD PTR [rcx+0x8]
   14004130a:	jmp    0x140041696
   14004130f:	mov    ecx,0x470
   140041314:	call   0x14002b1c2
   140041319:	mov    QWORD PTR [rsp+0x58],rax
   14004131e:	test   rax,rax
   140041321:	je     0x140041332
   140041323:	mov    edx,DWORD PTR [rdi]
   140041325:	mov    rcx,rax
   140041328:	call   0x140040500
   14004132d:	mov    rbx,rax
   140041330:	jmp    0x140041335
   140041332:	mov    rbx,r13
   140041335:	mov    QWORD PTR [rsp+0x30],rbx
   14004133a:	mov    rdx,rbx
   14004133d:	lea    rcx,[rsp+0x38]
   140041342:	call   0x140040dc0
   140041347:	mov    r8,rbx
   14004134a:	mov    rdx,rbx
   14004134d:	lea    rcx,[rsp+0x30]
   140041352:	call   0x140025170
   140041357:	nop
   140041358:	mov    rax,QWORD PTR [rsp+0x30]
   14004135d:	mov    QWORD PTR [rbp-0x79],rax
   140041361:	mov    rax,QWORD PTR [rsp+0x38]
   140041366:	mov    QWORD PTR [rbp-0x71],rax
   14004136a:	test   rax,rax
   14004136d:	je     0x140041373
   14004136f:	lock inc DWORD PTR [rax+0x8]
   140041373:	mov    QWORD PTR [rbp-0x69],r13
   140041377:	mov    rbx,QWORD PTR [rip+0x293ea]        # 0x14006a768
   14004137e:	lea    r9,[rbp-0x79]
   140041382:	mov    r8,QWORD PTR [rbx+0x8]
   140041386:	mov    rdx,rbx
   140041389:	lea    rcx,[rip+0x293d8]        # 0x14006a768
   140041390:	call   0x140030fa0
   140041395:	mov    r11,rax
   140041398:	movabs rcx,0xaaaaaaaaaaaaaa9
   1400413a2:	mov    rdx,QWORD PTR [rip+0x293c7]        # 0x14006a770
   1400413a9:	sub    rcx,rdx
   1400413ac:	cmp    rcx,0x1
   1400413b0:	jae    0x1400413c0
   1400413b2:	lea    rcx,[rip+0xcc0f]        # 0x14004dfc8
   1400413b9:	call   QWORD PTR [rip+0x81d9]        # 0x140049598
   1400413bf:	int3   
   1400413c0:	inc    rdx
   1400413c3:	mov    QWORD PTR [rip+0x293a6],rdx        # 0x14006a770
   1400413ca:	mov    QWORD PTR [rbx+0x8],rax
   1400413ce:	mov    rax,QWORD PTR [rax+0x8]
   1400413d2:	mov    QWORD PTR [rax],r11
   1400413d5:	mov    rcx,QWORD PTR [rbp-0x71]
   1400413d9:	test   rcx,rcx
   1400413dc:	je     0x140041401
   1400413de:	lock dec DWORD PTR [rcx+0x8]
   1400413e2:	jne    0x140041401
   1400413e4:	mov    rbx,QWORD PTR [rbp-0x71]
   1400413e8:	mov    rax,QWORD PTR [rbx]
   1400413eb:	mov    rcx,rbx
   1400413ee:	call   QWORD PTR [rax+0x8]
   1400413f1:	lock dec DWORD PTR [rbx+0xc]
   1400413f5:	jne    0x140041401
   1400413f7:	mov    rcx,QWORD PTR [rbp-0x71]
   1400413fb:	mov    rax,QWORD PTR [rcx]
   1400413fe:	call   QWORD PTR [rax+0x10]
   140041401:	mov    rax,QWORD PTR [rip+0x29360]        # 0x14006a768
   140041408:	mov    rax,QWORD PTR [rax+0x8]
   14004140c:	mov    ecx,DWORD PTR [rdi]
   14004140e:	mov    DWORD PTR [rbp-0x39],ecx
   140041411:	mov    QWORD PTR [rbp-0x31],rax
   140041415:	lea    rdx,[rbp-0x39]
   140041419:	lea    rcx,[rip+0x29360]        # 0x14006a780
   140041420:	call   0x140030900
   140041425:	mov    r11,rax
   140041428:	mov    r10,QWORD PTR [rip+0x29359]        # 0x14006a788
   14004142f:	mov    rcx,QWORD PTR [r10+0x8]
   140041433:	mov    r9,r10
   140041436:	mov    r8b,0x1
   140041439:	cmp    BYTE PTR [rcx+0x29],0x0
   14004143d:	jne    0x14004146e
   14004143f:	mov    edx,DWORD PTR [rax+0x18]
   140041442:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140041450:	mov    r9,rcx
   140041453:	cmp    edx,DWORD PTR [rcx+0x18]
   140041456:	setb   r8b
   14004145a:	test   r8b,r8b
   14004145d:	je     0x140041464
   14004145f:	mov    rcx,QWORD PTR [rcx]
   140041462:	jmp    0x140041468
   140041464:	mov    rcx,QWORD PTR [rcx+0x10]
   140041468:	cmp    BYTE PTR [rcx+0x29],0x0
   14004146c:	je     0x140041450
   14004146e:	mov    rax,r9
   140041471:	test   r8b,r8b
   140041474:	je     0x1400414fa
   14004147a:	cmp    r9,QWORD PTR [r10]
   14004147d:	jne    0x14004149c
   14004147f:	mov    QWORD PTR [rsp+0x20],r11
   140041484:	mov    r8b,0x1
   140041487:	lea    rdx,[rbp-0x29]
   14004148b:	lea    rcx,[rip+0x292ee]        # 0x14006a780
   140041492:	call   0x14002ee80
   140041497:	jmp    0x140041522
   14004149c:	cmp    BYTE PTR [r9+0x29],0x0
   1400414a1:	je     0x1400414a9
   1400414a3:	mov    rax,QWORD PTR [r9+0x10]
   1400414a7:	jmp    0x1400414fa
   1400414a9:	mov    rcx,QWORD PTR [r9]
   1400414ac:	cmp    BYTE PTR [rcx+0x29],0x0
   1400414b0:	jne    0x1400414cf
   1400414b2:	mov    rax,rcx
   1400414b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400414b9:	cmp    BYTE PTR [rcx+0x29],0x0
   1400414bd:	jne    0x1400414fa
   1400414bf:	nop
   1400414c0:	mov    rax,rcx
   1400414c3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400414c7:	cmp    BYTE PTR [rcx+0x29],0x0
   1400414cb:	je     0x1400414c0
   1400414cd:	jmp    0x1400414fa
   1400414cf:	mov    rcx,QWORD PTR [r9+0x8]
   1400414d3:	cmp    BYTE PTR [rcx+0x29],0x0
   1400414d7:	jne    0x1400414f2
   1400414d9:	nop    DWORD PTR [rax+0x0]
   1400414e0:	cmp    rax,QWORD PTR [rcx]
   1400414e3:	jne    0x1400414f2
   1400414e5:	mov    rax,rcx
   1400414e8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400414ec:	cmp    BYTE PTR [rcx+0x29],0x0
   1400414f0:	je     0x1400414e0
   1400414f2:	cmp    BYTE PTR [rax+0x29],0x0
   1400414f6:	cmove  rax,rcx
   1400414fa:	mov    ecx,DWORD PTR [r11+0x18]
   1400414fe:	cmp    DWORD PTR [rax+0x18],ecx
   140041501:	jae    0x14004151a
   140041503:	mov    QWORD PTR [rsp+0x20],r11
   140041508:	lea    rdx,[rbp-0x21]
   14004150c:	lea    rcx,[rip+0x2926d]        # 0x14006a780
   140041513:	call   0x14002ee80
   140041518:	jmp    0x140041522
   14004151a:	mov    rcx,r11
   14004151d:	call   0x14002b150
   140041522:	mov    r8,QWORD PTR [rip+0x2925f]        # 0x14006a788
   140041529:	mov    rax,QWORD PTR [r8+0x8]
   14004152d:	mov    rcx,r8
   140041530:	cmp    BYTE PTR [rax+0x29],0x0
   140041534:	jne    0x14004154f
   140041536:	mov    edx,DWORD PTR [rdi]
   140041538:	cmp    DWORD PTR [rax+0x18],edx
   14004153b:	jae    0x140041543
   14004153d:	mov    rax,QWORD PTR [rax+0x10]
   140041541:	jmp    0x140041549
   140041543:	mov    rcx,rax
   140041546:	mov    rax,QWORD PTR [rax]
   140041549:	cmp    BYTE PTR [rax+0x29],0x0
   14004154d:	je     0x140041538
   14004154f:	mov    QWORD PTR [rbp-0x61],rcx
   140041553:	cmp    rcx,r8
   140041556:	je     0x140041565
   140041558:	mov    eax,DWORD PTR [rcx+0x18]
   14004155b:	cmp    DWORD PTR [rdi],eax
   14004155d:	jb     0x140041565
   14004155f:	lea    rcx,[rbp-0x61]
   140041563:	jmp    0x14004156f
   140041565:	mov    QWORD PTR [rsp+0x58],r8
   14004156a:	lea    rcx,[rsp+0x58]
   14004156f:	mov    rcx,QWORD PTR [rcx]
   140041572:	mov    rax,QWORD PTR [rip+0x291ef]        # 0x14006a768
   140041579:	mov    rax,QWORD PTR [rax+0x8]
   14004157d:	add    rcx,0x18
   140041581:	mov    QWORD PTR [rax+0x20],rcx
   140041585:	mov    r13,QWORD PTR [rip+0x29204]        # 0x14006a790
   14004158c:	cmp    r13,r12
   14004158f:	jbe    0x140041654
   140041595:	mov    rsi,QWORD PTR [rip+0x291cc]        # 0x14006a768
   14004159c:	mov    rbx,QWORD PTR [rsi]
   14004159f:	cmp    rbx,rsi
   1400415a2:	je     0x140041654
   1400415a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400415b0:	cmp    r13,r12
   1400415b3:	jbe    0x140041654
   1400415b9:	mov    rax,QWORD PTR [rbx+0x18]
   1400415bd:	test   rax,rax
   1400415c0:	je     0x140041647
   1400415c6:	mov    eax,DWORD PTR [rax+0x8]
   1400415c9:	cmp    eax,0x1
   1400415cc:	jne    0x140041647
   1400415ce:	mov    rdi,rbx
   1400415d1:	mov    rbx,QWORD PTR [rbx]
   1400415d4:	mov    rdx,QWORD PTR [rdi+0x20]
   1400415d8:	lea    rcx,[rip+0x291a1]        # 0x14006a780
   1400415df:	call   0x140031a40
   1400415e4:	cmp    rdi,QWORD PTR [rip+0x2917d]        # 0x14006a768
   1400415eb:	je     0x140041642
   1400415ed:	mov    rcx,QWORD PTR [rdi+0x8]
   1400415f1:	mov    rax,QWORD PTR [rdi]
   1400415f4:	mov    QWORD PTR [rcx],rax
   1400415f7:	mov    rcx,QWORD PTR [rdi]
   1400415fa:	mov    rax,QWORD PTR [rdi+0x8]
   1400415fe:	mov    QWORD PTR [rcx+0x8],rax
   140041602:	mov    r12,QWORD PTR [rdi+0x18]
   140041606:	test   r12,r12
   140041609:	je     0x14004162f
   14004160b:	lock dec DWORD PTR [r12+0x8]
   140041611:	jne    0x14004162f
   140041613:	mov    rax,QWORD PTR [r12]
   140041617:	mov    rcx,r12
   14004161a:	call   QWORD PTR [rax+0x8]
   14004161d:	lock dec DWORD PTR [r12+0xc]
   140041623:	jne    0x14004162f
   140041625:	mov    rax,QWORD PTR [r12]
   140041629:	mov    rcx,r12
   14004162c:	call   QWORD PTR [rax+0x10]
   14004162f:	mov    rcx,rdi
   140041632:	call   0x14002b150
   140041637:	dec    QWORD PTR [rip+0x29132]        # 0x14006a770
   14004163e:	mov    r12,QWORD PTR [rbp+0x77]
   140041642:	dec    r13
   140041645:	jmp    0x14004164b
   140041647:	mov    rbx,QWORD PTR [rbx+0x8]
   14004164b:	cmp    rbx,rsi
   14004164e:	jne    0x1400415b0
   140041654:	mov    rax,QWORD PTR [rsp+0x30]
   140041659:	mov    QWORD PTR [r15],rax
   14004165c:	xor    ecx,ecx
   14004165e:	mov    rax,QWORD PTR [rsp+0x38]
   140041663:	mov    ebx,ecx
   140041665:	mov    QWORD PTR [rsp+0x38],rcx
   14004166a:	mov    QWORD PTR [r15+0x8],rax
   14004166e:	mov    QWORD PTR [rsp+0x30],rcx
   140041673:	mov    DWORD PTR [rbp+0x7f],0x1
   14004167a:	je     0x140041696
   14004167c:	lock dec DWORD PTR [rcx+0x8]
   140041680:	jne    0x140041696
   140041682:	mov    rax,QWORD PTR [rcx]
   140041685:	call   QWORD PTR [rax+0x8]
   140041688:	lock dec DWORD PTR [rbx+0xc]
   14004168c:	jne    0x140041696
   14004168e:	mov    rax,QWORD PTR [rbx]
   140041691:	mov    ecx,ebx
   140041693:	call   QWORD PTR [rax+0x10]
   140041696:	mov    rax,r15
   140041699:	mov    rbx,QWORD PTR [rsp+0x148]
   1400416a1:	add    rsp,0x100
   1400416a8:	pop    r15
   1400416aa:	pop    r14
   1400416ac:	pop    r13
   1400416ae:	pop    r12
   1400416b0:	pop    rdi
   1400416b1:	pop    rsi
   1400416b2:	pop    rbp
   1400416b3:	ret    
   1400416b4:	int3   
   1400416b5:	int3   
   1400416b6:	int3   
   1400416b7:	int3   
   1400416b8:	int3   
   1400416b9:	int3   
   1400416ba:	int3   
   1400416bb:	int3   
   1400416bc:	int3   
   1400416bd:	int3   
   1400416be:	int3   
   1400416bf:	int3   
   1400416c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400416c5:	push   rsi
   1400416c6:	push   r12
   1400416c8:	push   r13
   1400416ca:	sub    rsp,0x40
   1400416ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400416d7:	mov    QWORD PTR [rsp+0x78],rbx
   1400416dc:	mov    rbx,rcx
   1400416df:	lea    r12,[rcx+0xd8]
   1400416e6:	mov    QWORD PTR [rsp+0x68],r12
   1400416eb:	call   0x140041d30
   1400416f0:	mov    QWORD PTR [r12],rax
   1400416f4:	add    rax,0xff8
   1400416fa:	mov    QWORD PTR [rbx+0xe0],rax
   140041701:	je     0x140041709
   140041703:	mov    DWORD PTR [rax],0x0
   140041709:	mov    DWORD PTR [rbx+0xec],0x400
   140041713:	mov    rax,QWORD PTR [rbx+0x18]
   140041717:	mov    QWORD PTR [rbx+0x28],rax
   14004171b:	mov    QWORD PTR [rbx+0x38],rax
   14004171f:	mov    QWORD PTR [rbx+0x68],0x0
   140041727:	or     DWORD PTR [rbx+0x60],0x8000
   14004172e:	test   DWORD PTR [rbx+0x60],0x40000
   140041735:	je     0x14004173e
   140041737:	mov    edx,0x1
   14004173c:	jmp    0x14004174e
   14004173e:	mov    rax,QWORD PTR [rbx+0x48]
   140041742:	mov    rdx,QWORD PTR [rax]
   140041745:	test   rdx,rdx
   140041748:	je     0x14004174e
   14004174a:	mov    rdx,QWORD PTR [rdx+0x48]
   14004174e:	mov    r9,QWORD PTR [rbx+0x20]
   140041752:	mov    r8,QWORD PTR [rbx+0x38]
   140041756:	mov    rcx,QWORD PTR [rbx+0x10]
   14004175a:	call   0x140039820
   14004175f:	mov    rax,QWORD PTR [rbx+0x18]
   140041763:	mov    rcx,QWORD PTR [rbx+0x10]
   140041767:	mov    QWORD PTR [rcx+0x20],rax
   14004176b:	lea    rdx,[rsp+0x28]
   140041770:	mov    rcx,QWORD PTR [rbx+0x48]
   140041774:	call   0x14002dfa0
   140041779:	mov    rsi,rax
   14004177c:	mov    QWORD PTR [rsp+0x70],rax
   140041781:	mov    rcx,QWORD PTR [rbx+0x10]
   140041785:	add    rcx,0x40
   140041789:	mov    rdx,rax
   14004178c:	call   0x14002f1b0
   140041791:	nop
   140041792:	mov    rsi,QWORD PTR [rsi+0x8]
   140041796:	test   rsi,rsi
   140041799:	je     0x1400417b9
   14004179b:	lock dec DWORD PTR [rsi+0x8]
   14004179f:	jne    0x1400417b9
   1400417a1:	mov    rax,QWORD PTR [rsi]
   1400417a4:	mov    rcx,rsi
   1400417a7:	call   QWORD PTR [rax+0x8]
   1400417aa:	lock dec DWORD PTR [rsi+0xc]
   1400417ae:	jne    0x1400417b9
   1400417b0:	mov    rax,QWORD PTR [rsi]
   1400417b3:	mov    rcx,rsi
   1400417b6:	call   QWORD PTR [rax+0x10]
   1400417b9:	test   DWORD PTR [rbx+0x60],0x20000
   1400417c0:	je     0x140041814
   1400417c2:	mov    rsi,QWORD PTR [rbx+0x10]
   1400417c6:	mov    r13,QWORD PTR [rbx]
   1400417c9:	mov    rdx,rsi
   1400417cc:	mov    rcx,r13
   1400417cf:	call   0x140031d30
   1400417d4:	lea    rdx,[rsi+0x40]
   1400417d8:	lea    rcx,[r13+0x40]
   1400417dc:	call   0x14002f1b0
   1400417e1:	mov    eax,DWORD PTR [rsi+0x50]
   1400417e4:	mov    DWORD PTR [r13+0x50],eax
   1400417e8:	movzx  eax,BYTE PTR [rsi+0x54]
   1400417ec:	mov    BYTE PTR [r13+0x54],al
   1400417f0:	test   al,al
   1400417f2:	jne    0x140041814
   1400417f4:	mov    rax,QWORD PTR [rsi+0x20]
   1400417f8:	mov    QWORD PTR [r13+0x20],rax
   1400417fc:	mov    rax,QWORD PTR [rsi+0x28]
   140041800:	mov    QWORD PTR [r13+0x28],rax
   140041804:	mov    rax,QWORD PTR [rsi+0x30]
   140041808:	mov    QWORD PTR [r13+0x30],rax
   14004180c:	movzx  eax,BYTE PTR [rsi+0x38]
   140041810:	mov    BYTE PTR [r13+0x38],al
   140041814:	mov    rax,QWORD PTR [rbx+0x48]
   140041818:	mov    rcx,QWORD PTR [rax]
   14004181b:	test   rcx,rcx
   14004181e:	je     0x140041823
   140041820:	mov    ecx,DWORD PTR [rcx+0x30]
   140041823:	mov    edx,DWORD PTR [rbx+0x60]
   140041826:	call   0x140042440
   14004182b:	mov    rcx,rbx
   14004182e:	call   0x140040fc0
   140041833:	test   al,al
   140041835:	jne    0x14004184f
   140041837:	mov    rcx,QWORD PTR [r12]
   14004183b:	call   0x140041da0
   140041840:	mov    QWORD PTR [r12],0x0
   140041848:	xor    al,al
   14004184a:	jmp    0x1400418d0
   14004184f:	mov    r8,QWORD PTR [rbx]
   140041852:	cmp    BYTE PTR [r8+0x54],0x0
   140041857:	je     0x140041867
   140041859:	mov    rax,QWORD PTR [r8+0x8]
   14004185d:	cmp    QWORD PTR [r8],rax
   140041860:	jne    0x140041867
   140041862:	call   0x140031170
   140041867:	mov    r9,QWORD PTR [r8]
   14004186a:	mov    rcx,QWORD PTR [r8+0x8]
   14004186e:	sub    rcx,r9
   140041871:	movabs rax,0x2aaaaaaaaaaaaaab
   14004187b:	imul   rcx
   14004187e:	sar    rdx,0x2
   140041882:	mov    rax,rdx
   140041885:	shr    rax,0x3f
   140041889:	add    rdx,rax
   14004188c:	cmp    edx,0x2
   14004188f:	lea    rcx,[r9+0x30]
   140041893:	jg     0x140041899
   140041895:	lea    rcx,[r8+0x28]
   140041899:	mov    rax,QWORD PTR [rbx+0x20]
   14004189d:	cmp    QWORD PTR [rcx+0x8],rax
   1400418a1:	jne    0x1400418ba
   1400418a3:	xor    edx,edx
   1400418a5:	mov    rcx,r8
   1400418a8:	call   0x140031cc0
   1400418ad:	mov    rcx,QWORD PTR [rbx+0x18]
   1400418b1:	cmp    QWORD PTR [rax],rcx
   1400418b4:	jne    0x1400418ba
   1400418b6:	mov    bl,0x1
   1400418b8:	jmp    0x1400418bc
   1400418ba:	xor    bl,bl
   1400418bc:	mov    rcx,QWORD PTR [r12]
   1400418c0:	call   0x140041da0
   1400418c5:	mov    QWORD PTR [r12],0x0
   1400418cd:	movzx  eax,bl
   1400418d0:	mov    rbx,QWORD PTR [rsp+0x78]
   1400418d5:	add    rsp,0x40
   1400418d9:	pop    r13
   1400418db:	pop    r12
   1400418dd:	pop    rsi
   1400418de:	ret    
   1400418df:	int3   
   1400418e0:	mov    rax,rsp
   1400418e3:	mov    QWORD PTR [rax+0x8],rcx
   1400418e7:	push   rbp
   1400418e8:	push   rsi
   1400418e9:	push   rdi
   1400418ea:	sub    rsp,0x60
   1400418ee:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400418f7:	mov    QWORD PTR [rax+0x10],rbx
   1400418fb:	mov    rdi,r8
   1400418fe:	mov    rsi,rdx
   140041901:	mov    rbx,rcx
   140041904:	xor    ebp,ebp
   140041906:	mov    DWORD PTR [rax+0x20],ebp
   140041909:	mov    r8b,0x1
   14004190c:	lea    rdx,[rip+0x28e91]        # 0x14006a7a4
   140041913:	lea    rcx,[rax-0x48]
   140041917:	call   0x140043240
   14004191c:	nop
   14004191d:	lea    rax,[rsp+0x30]
   140041922:	cmp    BYTE PTR [rsp+0x38],bpl
   140041927:	cmove  rax,rbp
   14004192b:	test   rax,rax
   14004192e:	je     0x140041958
   140041930:	mov    r8,rdi
   140041933:	mov    rdx,rsi
   140041936:	mov    rcx,rbx
   140041939:	call   0x140041070
   14004193e:	mov    DWORD PTR [rsp+0x98],0x1
   140041949:	lea    rcx,[rsp+0x30]
   14004194e:	call   0x140043290
   140041953:	mov    rax,rbx
   140041956:	jmp    0x14004198b
   140041958:	lea    rax,[rip+0xe279]        # 0x14004fbd8
   14004195f:	mov    QWORD PTR [rsp+0x20],rax
   140041964:	lea    rdx,[rsp+0x20]
   140041969:	lea    rcx,[rsp+0x40]
   14004196e:	call   QWORD PTR [rip+0x7f5c]        # 0x1400498d0
   140041974:	lea    r11,[rip+0xc4cd]        # 0x14004de48
   14004197b:	mov    QWORD PTR [rsp+0x40],r11
   140041980:	lea    rcx,[rsp+0x40]
   140041985:	call   0x140020094
   14004198a:	nop
   14004198b:	mov    rbx,QWORD PTR [rsp+0x88]
   140041993:	add    rsp,0x60
   140041997:	pop    rdi
   140041998:	pop    rsi
   140041999:	pop    rbp
   14004199a:	ret    
   14004199b:	int3   
   14004199c:	int3   
   14004199d:	int3   
   14004199e:	int3   
   14004199f:	int3   
   1400419a0:	jmp    0x1400416c0
   1400419a5:	int3   
   1400419a6:	int3   
   1400419a7:	int3   
   1400419a8:	int3   
   1400419a9:	int3   
   1400419aa:	int3   
   1400419ab:	int3   
   1400419ac:	int3   
   1400419ad:	int3   
   1400419ae:	int3   
   1400419af:	int3   
   1400419b0:	mov    DWORD PTR [rsp+0x10],edx
   1400419b4:	push   rbx
   1400419b5:	sub    rsp,0x20
   1400419b9:	lea    rdx,[rsp+0x38]
   1400419be:	mov    r8d,0x5
   1400419c4:	mov    rbx,rcx
   1400419c7:	mov    DWORD PTR [rsp+0x30],0x0
   1400419cf:	call   0x1400418e0
   1400419d4:	mov    rax,rbx
   1400419d7:	add    rsp,0x20
   1400419db:	pop    rbx
   1400419dc:	ret    
   1400419dd:	int3   
   1400419de:	int3   
   1400419df:	int3   
   1400419e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400419e5:	push   rbp
   1400419e6:	push   rsi
   1400419e7:	push   rdi
   1400419e8:	sub    rsp,0x30
   1400419ec:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400419f5:	mov    QWORD PTR [rsp+0x60],rbx
   1400419fa:	mov    rdi,rcx
   1400419fd:	xor    ebp,ebp
   1400419ff:	mov    QWORD PTR [rcx],rbp
   140041a02:	mov    QWORD PTR [rcx+0x8],rbp
   140041a06:	mov    QWORD PTR [rcx+0x10],rbp
   140041a0a:	lea    ecx,[rbp+0x10]
   140041a0d:	call   0x14002b1c2
   140041a12:	mov    rsi,rax
   140041a15:	mov    QWORD PTR [rsp+0x58],rax
   140041a1a:	test   rax,rax
   140041a1d:	je     0x140041a30
   140041a1f:	call   0x1400424c0
   140041a24:	mov    edx,eax
   140041a26:	mov    rcx,rsi
   140041a29:	call   0x1400419b0
   140041a2e:	jmp    0x140041a33
   140041a30:	mov    rsi,rbp
   140041a33:	mov    QWORD PTR [rdi+0x20],rsi
   140041a37:	lea    rcx,[rdi+0x28]
   140041a3b:	mov    rdx,rsi
   140041a3e:	call   0x140030c50
   140041a43:	mov    r8,rsi
   140041a46:	mov    rdx,rsi
   140041a49:	lea    rcx,[rdi+0x20]
   140041a4d:	call   0x140025170
   140041a52:	mov    QWORD PTR [rdi+0x38],rbp
   140041a56:	mov    QWORD PTR [rdi+0x40],rbp
   140041a5a:	mov    QWORD PTR [rdi+0x170],rbp
   140041a61:	mov    QWORD PTR [rdi+0x168],rbp
   140041a68:	mov    QWORD PTR [rdi+0x160],rbp
   140041a6f:	mov    QWORD PTR [rdi+0x180],rbp
   140041a76:	mov    QWORD PTR [rdi+0x188],rbp
   140041a7d:	mov    QWORD PTR [rdi+0x190],rbp
   140041a84:	mov    rax,rdi
   140041a87:	mov    rbx,QWORD PTR [rsp+0x60]
   140041a8c:	add    rsp,0x30
   140041a90:	pop    rdi
   140041a91:	pop    rsi
   140041a92:	pop    rbp
   140041a93:	ret    
   140041a94:	int3   
   140041a95:	int3   
   140041a96:	int3   
   140041a97:	int3   
   140041a98:	int3   
   140041a99:	int3   
   140041a9a:	int3   
   140041a9b:	int3   
   140041a9c:	int3   
   140041a9d:	int3   
   140041a9e:	int3   
   140041a9f:	int3   
   140041aa0:	mov    rax,rsp
   140041aa3:	push   rdi
   140041aa4:	push   r12
   140041aa6:	push   r13
   140041aa8:	sub    rsp,0x60
   140041aac:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140041ab5:	mov    QWORD PTR [rax+0x10],rbx
   140041ab9:	mov    QWORD PTR [rax+0x18],rbp
   140041abd:	mov    QWORD PTR [rax+0x20],rsi
   140041ac1:	mov    ebp,r9d
   140041ac4:	mov    r12,r8
   140041ac7:	mov    r13,rdx
   140041aca:	mov    rdi,rcx
   140041acd:	xor    esi,esi
   140041acf:	mov    QWORD PTR [rax-0x50],rsi
   140041ad3:	mov    QWORD PTR [rax-0x48],rsi
   140041ad7:	cmp    QWORD PTR [rcx],rsi
   140041ada:	mov    ecx,0x1a8
   140041adf:	jne    0x140041b3c
   140041ae1:	call   0x14002b1c2
   140041ae6:	mov    rbx,rax
   140041ae9:	mov    QWORD PTR [rsp+0x80],rax
   140041af1:	test   rax,rax
   140041af4:	je     0x140041b00
   140041af6:	mov    rcx,rax
   140041af9:	call   0x1400419e0
   140041afe:	jmp    0x140041b03
   140041b00:	mov    rbx,rsi
   140041b03:	mov    QWORD PTR [rsp+0x38],rbx
   140041b08:	mov    rdx,rbx
   140041b0b:	lea    rcx,[rsp+0x40]
   140041b10:	call   0x14003c6c0
   140041b15:	mov    r8,rbx
   140041b18:	mov    rdx,rbx
   140041b1b:	lea    rcx,[rsp+0x38]
   140041b20:	call   0x140025170
   140041b25:	nop
   140041b26:	mov    rbx,QWORD PTR [rsp+0x38]
   140041b2b:	mov    QWORD PTR [rsp+0x28],rbx
   140041b30:	mov    rsi,QWORD PTR [rsp+0x40]
   140041b35:	mov    QWORD PTR [rsp+0x30],rsi
   140041b3a:	jmp    0x140041b8f
   140041b3c:	call   0x14002b1c2
   140041b41:	test   rax,rax
   140041b44:	je     0x140041b58
   140041b46:	mov    rdx,QWORD PTR [rdi]
   140041b49:	add    rdx,0x20
   140041b4d:	mov    rcx,rax
   140041b50:	call   0x140035f30
   140041b55:	mov    rsi,rax
   140041b58:	mov    QWORD PTR [rsp+0x48],rsi
   140041b5d:	mov    rdx,rsi
   140041b60:	lea    rcx,[rsp+0x50]
   140041b65:	call   0x14003c6c0
   140041b6a:	mov    r8,rsi
   140041b6d:	mov    rdx,rsi
   140041b70:	lea    rcx,[rsp+0x48]
   140041b75:	call   0x140025170
   140041b7a:	nop
   140041b7b:	mov    rbx,QWORD PTR [rsp+0x48]
   140041b80:	mov    QWORD PTR [rsp+0x28],rbx
   140041b85:	mov    rsi,QWORD PTR [rsp+0x50]
   140041b8a:	mov    QWORD PTR [rsp+0x30],rsi
   140041b8f:	mov    r9d,ebp
   140041b92:	mov    r8,r12
   140041b95:	mov    rdx,r13
   140041b98:	mov    rcx,rbx
   140041b9b:	call   0x140040440
   140041ba0:	mov    QWORD PTR [rdi],rbx
   140041ba3:	mov    rbx,QWORD PTR [rdi+0x8]
   140041ba7:	mov    QWORD PTR [rdi+0x8],rsi
   140041bab:	test   rbx,rbx
   140041bae:	je     0x140041bce
   140041bb0:	lock dec DWORD PTR [rbx+0x8]
   140041bb4:	jne    0x140041bce
   140041bb6:	mov    rax,QWORD PTR [rbx]
   140041bb9:	mov    rcx,rbx
   140041bbc:	call   QWORD PTR [rax+0x8]
   140041bbf:	lock dec DWORD PTR [rbx+0xc]
   140041bc3:	jne    0x140041bce
   140041bc5:	mov    rax,QWORD PTR [rbx]
   140041bc8:	mov    rcx,rbx
   140041bcb:	call   QWORD PTR [rax+0x10]
   140041bce:	mov    rax,rdi
   140041bd1:	lea    r11,[rsp+0x60]
   140041bd6:	mov    rbx,QWORD PTR [r11+0x28]
   140041bda:	mov    rbp,QWORD PTR [r11+0x30]
   140041bde:	mov    rsi,QWORD PTR [r11+0x38]
   140041be2:	mov    rsp,r11
   140041be5:	pop    r13
   140041be7:	pop    r12
   140041be9:	pop    rdi
   140041bea:	ret    
   140041beb:	int3   
   140041bec:	int3   
   140041bed:	int3   
   140041bee:	int3   
   140041bef:	int3   
   140041bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140041bf5:	mov    QWORD PTR [rsp+0x10],rbp
   140041bfa:	mov    QWORD PTR [rsp+0x18],rsi
   140041bff:	push   rdi
   140041c00:	sub    rsp,0x20
   140041c04:	mov    rax,QWORD PTR [rcx+0x8]
   140041c08:	mov    rbp,rcx
   140041c0b:	test   rax,rax
   140041c0e:	je     0x140041c18
   140041c10:	mov    rdi,QWORD PTR [rcx]
   140041c13:	sub    rdi,rax
   140041c16:	jmp    0x140041c1d
   140041c18:	mov    edi,0x400
   140041c1d:	cmp    rdi,rdx
   140041c20:	jae    0x140041c2a
   140041c22:	add    rdi,rdi
   140041c25:	cmp    rdi,rdx
   140041c28:	jb     0x140041c22
   140041c2a:	mov    rsi,QWORD PTR [rcx+0x10]
   140041c2e:	add    rdi,0x7
   140041c32:	and    rdi,0xfffffffffffffff8
   140041c36:	sub    rsi,rax
   140041c39:	mov    rcx,rdi
   140041c3c:	call   0x14002b1c2
   140041c41:	mov    rdx,QWORD PTR [rbp+0x8]
   140041c45:	mov    r8,rsi
   140041c48:	mov    rcx,rax
   140041c4b:	mov    rbx,rax
   140041c4e:	call   0x14002b120
   140041c53:	mov    rcx,QWORD PTR [rbp+0x8]
   140041c57:	call   0x14002b150
   140041c5c:	lea    rcx,[rbx+rsi*1]
   140041c60:	mov    rsi,QWORD PTR [rsp+0x40]
   140041c65:	lea    rax,[rbx+rdi*1]
   140041c69:	mov    QWORD PTR [rbp+0x8],rbx
   140041c6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140041c72:	mov    QWORD PTR [rbp+0x10],rcx
   140041c76:	mov    QWORD PTR [rbp+0x0],rax
   140041c7a:	mov    rbp,QWORD PTR [rsp+0x38]
   140041c7f:	add    rsp,0x20
   140041c83:	pop    rdi
   140041c84:	ret    
   140041c85:	int3   
   140041c86:	int3   
   140041c87:	int3   
   140041c88:	int3   
   140041c89:	int3   
   140041c8a:	int3   
   140041c8b:	int3   
   140041c8c:	int3   
   140041c8d:	int3   
   140041c8e:	int3   
   140041c8f:	int3   
   140041c90:	mov    QWORD PTR [rsp+0x8],rbx
   140041c95:	mov    QWORD PTR [rsp+0x10],rbp
   140041c9a:	mov    QWORD PTR [rsp+0x18],rsi
   140041c9f:	push   rdi
   140041ca0:	sub    rsp,0x20
   140041ca4:	mov    rax,QWORD PTR [rcx]
   140041ca7:	mov    rbp,rdx
   140041caa:	mov    rdx,QWORD PTR [rcx+0x10]
   140041cae:	sub    rax,rdx
   140041cb1:	mov    rsi,r8
   140041cb4:	mov    rdi,rcx
   140041cb7:	cmp    rax,r8
   140041cba:	jae    0x140041cc8
   140041cbc:	sub    rdx,QWORD PTR [rcx+0x8]
   140041cc0:	add    rdx,r8
   140041cc3:	call   0x140041bf0
   140041cc8:	mov    rcx,QWORD PTR [rdi+0x8]
   140041ccc:	mov    r8,QWORD PTR [rdi+0x10]
   140041cd0:	lea    rbx,[rcx+rbp*1]
   140041cd4:	sub    r8,rcx
   140041cd7:	lea    rcx,[rbx+rsi*1]
   140041cdb:	sub    r8,rbp
   140041cde:	mov    rdx,rbx
   140041ce1:	call   QWORD PTR [rip+0x7909]        # 0x1400495f0
   140041ce7:	add    QWORD PTR [rdi+0x10],rsi
   140041ceb:	mov    rsi,QWORD PTR [rsp+0x40]
   140041cf0:	mov    rbp,QWORD PTR [rsp+0x38]
   140041cf5:	mov    rax,rbx
   140041cf8:	mov    rbx,QWORD PTR [rsp+0x30]
   140041cfd:	add    rsp,0x20
   140041d01:	pop    rdi
   140041d02:	ret    
   140041d03:	int3   
   140041d04:	int3   
   140041d05:	int3   
   140041d06:	int3   
   140041d07:	int3   
   140041d08:	int3   
   140041d09:	int3   
   140041d0a:	int3   
   140041d0b:	int3   
   140041d0c:	int3   
   140041d0d:	int3   
   140041d0e:	int3   
   140041d0f:	int3   
   140041d10:	lea    rax,[rip+0xdf79]        # 0x14004fc90
   140041d17:	mov    QWORD PTR [rcx],rax
   140041d1a:	rex.W jmp QWORD PTR [rip+0x7b77]        # 0x140049898
   140041d21:	int3   
   140041d22:	int3   
   140041d23:	int3   
   140041d24:	int3   
   140041d25:	int3   
   140041d26:	int3   
   140041d27:	int3   
   140041d28:	int3   
   140041d29:	int3   
   140041d2a:	int3   
   140041d2b:	int3   
   140041d2c:	int3   
   140041d2d:	int3   
   140041d2e:	int3   
   140041d2f:	int3   
   140041d30:	rex push rbx
   140041d32:	sub    rsp,0x40
   140041d36:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140041d3f:	mov    r8b,0x1
   140041d42:	lea    rdx,[rip+0x28a6b]        # 0x14006a7b4
   140041d49:	lea    rcx,[rsp+0x28]
   140041d4e:	call   0x140043240
   140041d53:	nop
   140041d54:	mov    rbx,QWORD PTR [rip+0x28a4d]        # 0x14006a7a8
   140041d5b:	test   rbx,rbx
   140041d5e:	je     0x140041d72
   140041d60:	mov    rcx,QWORD PTR [rbx]
   140041d63:	mov    QWORD PTR [rip+0x28a3e],rcx        # 0x14006a7a8
   140041d6a:	dec    DWORD PTR [rip+0x28a40]        # 0x14006a7b0
   140041d70:	jmp    0x140041d7f
   140041d72:	mov    ecx,0x1000
   140041d77:	call   0x14002b1c2
   140041d7c:	mov    rbx,rax
   140041d7f:	lea    rcx,[rsp+0x28]
   140041d84:	call   0x140043290
   140041d89:	mov    rax,rbx
   140041d8c:	add    rsp,0x40
   140041d90:	pop    rbx
   140041d91:	ret    
   140041d92:	int3   
   140041d93:	int3   
   140041d94:	int3   
   140041d95:	int3   
   140041d96:	int3   
   140041d97:	int3   
   140041d98:	int3   
   140041d99:	int3   
   140041d9a:	int3   
   140041d9b:	int3   
   140041d9c:	int3   
   140041d9d:	int3   
   140041d9e:	int3   
   140041d9f:	int3   
   140041da0:	rex push rbx
   140041da2:	sub    rsp,0x30
   140041da6:	mov    rbx,rcx
   140041da9:	lea    rdx,[rip+0x28a04]        # 0x14006a7b4
   140041db0:	lea    rcx,[rsp+0x20]
   140041db5:	mov    r8b,0x1
   140041db8:	call   0x140043240
   140041dbd:	cmp    DWORD PTR [rip+0x289ec],0x10        # 0x14006a7b0
   140041dc4:	jb     0x140041dde
   140041dc6:	mov    rcx,rbx
   140041dc9:	call   0x14002b150
   140041dce:	lea    rcx,[rsp+0x20]
   140041dd3:	call   0x140043290
   140041dd8:	add    rsp,0x30
   140041ddc:	pop    rbx
   140041ddd:	ret    
   140041dde:	mov    rax,QWORD PTR [rip+0x289c3]        # 0x14006a7a8
   140041de5:	lea    rcx,[rsp+0x20]
   140041dea:	mov    QWORD PTR [rbx],rax
   140041ded:	inc    DWORD PTR [rip+0x289bd]        # 0x14006a7b0
   140041df3:	mov    QWORD PTR [rip+0x289ae],rbx        # 0x14006a7a8
   140041dfa:	call   0x140043290
   140041dff:	add    rsp,0x30
   140041e03:	pop    rbx
   140041e04:	ret    
   140041e05:	int3   
   140041e06:	int3   
   140041e07:	int3   
   140041e08:	int3   
   140041e09:	int3   
   140041e0a:	int3   
   140041e0b:	int3   
   140041e0c:	int3   
   140041e0d:	int3   
   140041e0e:	int3   
   140041e0f:	int3   
   140041e10:	mov    QWORD PTR [rsp+0x8],rbx
   140041e15:	push   rdi
   140041e16:	sub    rsp,0x20
   140041e1a:	mov    rbx,rdx
   140041e1d:	mov    rdi,rcx
   140041e20:	call   QWORD PTR [rip+0x77ba]        # 0x1400495e0
   140041e26:	lea    r11,[rip+0xde63]        # 0x14004fc90
   140041e2d:	mov    QWORD PTR [rdi],r11
   140041e30:	mov    eax,DWORD PTR [rbx+0x18]
   140041e33:	mov    DWORD PTR [rdi+0x18],eax
   140041e36:	mov    rax,QWORD PTR [rbx+0x20]
   140041e3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140041e3f:	mov    QWORD PTR [rdi+0x20],rax
   140041e43:	mov    rax,rdi
   140041e46:	add    rsp,0x20
   140041e4a:	pop    rdi
   140041e4b:	ret    
   140041e4c:	int3   
   140041e4d:	int3   
   140041e4e:	int3   
   140041e4f:	int3   
   140041e50:	mov    QWORD PTR [rsp+0x8],rbx
   140041e55:	push   rdi
   140041e56:	sub    rsp,0x20
   140041e5a:	lea    rax,[rip+0xde2f]        # 0x14004fc90
   140041e61:	mov    ebx,edx
   140041e63:	mov    rdi,rcx
   140041e66:	mov    QWORD PTR [rcx],rax
   140041e69:	call   QWORD PTR [rip+0x7a29]        # 0x140049898
   140041e6f:	test   bl,0x1
   140041e72:	je     0x140041e7c
   140041e74:	mov    rcx,rdi
   140041e77:	call   0x14002b150
   140041e7c:	mov    rax,rdi
   140041e7f:	mov    rbx,QWORD PTR [rsp+0x30]
   140041e84:	add    rsp,0x20
   140041e88:	pop    rdi
   140041e89:	ret    
   140041e8a:	int3   
   140041e8b:	int3   
   140041e8c:	int3   
   140041e8d:	int3   
   140041e8e:	int3   
   140041e8f:	int3   
   140041e90:	mov    QWORD PTR [rsp+0x10],rbx
   140041e95:	mov    QWORD PTR [rsp+0x18],rsi
   140041e9a:	push   rdi
   140041e9b:	sub    rsp,0x20
   140041e9f:	cmp    QWORD PTR [rdx+0x18],0x10
   140041ea4:	mov    rdi,r9
   140041ea7:	mov    esi,r8d
   140041eaa:	mov    rbx,rcx
   140041ead:	jb     0x140041eb9
   140041eaf:	mov    rax,QWORD PTR [rdx]
   140041eb2:	mov    QWORD PTR [rsp+0x30],rax
   140041eb7:	jmp    0x140041ebe
   140041eb9:	mov    QWORD PTR [rsp+0x30],rdx
   140041ebe:	lea    rdx,[rsp+0x30]
   140041ec3:	call   QWORD PTR [rip+0x7a07]        # 0x1400498d0
   140041ec9:	mov    DWORD PTR [rbx+0x18],esi
   140041ecc:	mov    rsi,QWORD PTR [rsp+0x40]
   140041ed1:	lea    r11,[rip+0xddb8]        # 0x14004fc90
   140041ed8:	mov    QWORD PTR [rbx+0x20],rdi
   140041edc:	mov    rax,rbx
   140041edf:	mov    QWORD PTR [rbx],r11
   140041ee2:	mov    rbx,QWORD PTR [rsp+0x38]
   140041ee7:	add    rsp,0x20
   140041eeb:	pop    rdi
   140041eec:	ret    
   140041eed:	int3   
   140041eee:	int3   
   140041eef:	int3   
   140041ef0:	mov    QWORD PTR [rsp+0x8],rcx
   140041ef5:	push   rdi
   140041ef6:	sub    rsp,0x30
   140041efa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140041f03:	mov    QWORD PTR [rsp+0x48],rbx
   140041f08:	mov    rdi,rdx
   140041f0b:	mov    rbx,rcx
   140041f0e:	call   QWORD PTR [rip+0x76cc]        # 0x1400495e0
   140041f14:	lea    r11,[rip+0xdd75]        # 0x14004fc90
   140041f1b:	mov    QWORD PTR [rbx],r11
   140041f1e:	mov    eax,DWORD PTR [rdi+0x18]
   140041f21:	mov    DWORD PTR [rbx+0x18],eax
   140041f24:	mov    rax,QWORD PTR [rdi+0x20]
   140041f28:	mov    QWORD PTR [rbx+0x20],rax
   140041f2c:	lea    rax,[rip+0x835d]        # 0x14004a290
   140041f33:	mov    QWORD PTR [rbx+0x28],rax
   140041f37:	mov    rcx,QWORD PTR [rdi+0x30]
   140041f3b:	mov    QWORD PTR [rbx+0x30],rcx
   140041f3f:	test   rcx,rcx
   140041f42:	je     0x140041f4a
   140041f44:	mov    rax,QWORD PTR [rcx]
   140041f47:	call   QWORD PTR [rax+0x18]
   140041f4a:	mov    rax,QWORD PTR [rdi+0x38]
   140041f4e:	mov    QWORD PTR [rbx+0x38],rax
   140041f52:	mov    rax,QWORD PTR [rdi+0x40]
   140041f56:	mov    QWORD PTR [rbx+0x40],rax
   140041f5a:	mov    eax,DWORD PTR [rdi+0x48]
   140041f5d:	mov    DWORD PTR [rbx+0x48],eax
   140041f60:	lea    rax,[rip+0xdda1]        # 0x14004fd08
   140041f67:	mov    QWORD PTR [rbx],rax
   140041f6a:	lea    rax,[rip+0xdd87]        # 0x14004fcf8
   140041f71:	mov    QWORD PTR [rbx+0x28],rax
   140041f75:	mov    rax,rbx
   140041f78:	mov    rbx,QWORD PTR [rsp+0x48]
   140041f7d:	add    rsp,0x30
   140041f81:	pop    rdi
   140041f82:	ret    
   140041f83:	int3   
   140041f84:	int3   
   140041f85:	int3   
   140041f86:	int3   
   140041f87:	int3   
   140041f88:	int3   
   140041f89:	int3   
   140041f8a:	int3   
   140041f8b:	int3   
   140041f8c:	int3   
   140041f8d:	int3   
   140041f8e:	int3   
   140041f8f:	int3   
   140041f90:	sub    rcx,0x28
   140041f94:	jmp    0x140042060
   140041f99:	int3   
   140041f9a:	int3   
   140041f9b:	int3   
   140041f9c:	int3   
   140041f9d:	int3   
   140041f9e:	int3   
   140041f9f:	int3   
   140041fa0:	rex push rbx
   140041fa2:	sub    rsp,0x20
   140041fa6:	lea    rax,[rip+0xdd5b]        # 0x14004fd08
   140041fad:	mov    rbx,rcx
   140041fb0:	mov    QWORD PTR [rcx],rax
   140041fb3:	lea    rax,[rip+0x82d6]        # 0x14004a290
   140041fba:	mov    QWORD PTR [rcx+0x28],rax
   140041fbe:	mov    rcx,QWORD PTR [rcx+0x30]
   140041fc2:	test   rcx,rcx
   140041fc5:	je     0x140041fd9
   140041fc7:	mov    rax,QWORD PTR [rcx]
   140041fca:	call   QWORD PTR [rax+0x20]
   140041fcd:	test   al,al
   140041fcf:	je     0x140041fd9
   140041fd1:	mov    QWORD PTR [rbx+0x30],0x0
   140041fd9:	lea    rax,[rip+0xdcb0]        # 0x14004fc90
   140041fe0:	mov    rcx,rbx
   140041fe3:	mov    QWORD PTR [rbx],rax
   140041fe6:	add    rsp,0x20
   140041fea:	pop    rbx
   140041feb:	rex.W jmp QWORD PTR [rip+0x78a6]        # 0x140049898
   140041ff2:	int3   
   140041ff3:	int3   
   140041ff4:	int3   
   140041ff5:	int3   
   140041ff6:	int3   
   140041ff7:	int3   
   140041ff8:	int3   
   140041ff9:	int3   
   140041ffa:	int3   
   140041ffb:	int3   
   140041ffc:	int3   
   140041ffd:	int3   
   140041ffe:	int3   
   140041fff:	int3   
   140042000:	rex push rbx
   140042002:	sub    rsp,0x20
   140042006:	lea    rax,[rip+0x81fb]        # 0x14004a208
   14004200d:	mov    rbx,rcx
   140042010:	mov    QWORD PTR [rcx+0x50],rax
   140042014:	lea    rax,[rip+0xdced]        # 0x14004fd08
   14004201b:	mov    QWORD PTR [rcx],rax
   14004201e:	lea    rax,[rip+0x826b]        # 0x14004a290
   140042025:	mov    QWORD PTR [rcx+0x28],rax
   140042029:	mov    rcx,QWORD PTR [rcx+0x30]
   14004202d:	test   rcx,rcx
   140042030:	je     0x140042044
   140042032:	mov    rax,QWORD PTR [rcx]
   140042035:	call   QWORD PTR [rax+0x20]
   140042038:	test   al,al
   14004203a:	je     0x140042044
   14004203c:	mov    QWORD PTR [rbx+0x30],0x0
   140042044:	lea    rax,[rip+0xdc45]        # 0x14004fc90
   14004204b:	mov    rcx,rbx
   14004204e:	mov    QWORD PTR [rbx],rax
   140042051:	add    rsp,0x20
   140042055:	pop    rbx
   140042056:	rex.W jmp QWORD PTR [rip+0x783b]        # 0x140049898
   14004205d:	int3   
   14004205e:	int3   
   14004205f:	int3   
   140042060:	mov    QWORD PTR [rsp+0x8],rbx
   140042065:	push   rdi
   140042066:	sub    rsp,0x20
   14004206a:	lea    rax,[rip+0xdc97]        # 0x14004fd08
   140042071:	mov    rbx,rcx
   140042074:	mov    edi,edx
   140042076:	mov    QWORD PTR [rcx],rax
   140042079:	lea    rax,[rip+0x8210]        # 0x14004a290
   140042080:	mov    QWORD PTR [rcx+0x28],rax
   140042084:	mov    rcx,QWORD PTR [rcx+0x30]
   140042088:	test   rcx,rcx
   14004208b:	je     0x14004209f
   14004208d:	mov    rax,QWORD PTR [rcx]
   140042090:	call   QWORD PTR [rax+0x20]
   140042093:	test   al,al
   140042095:	je     0x14004209f
   140042097:	mov    QWORD PTR [rbx+0x30],0x0
   14004209f:	lea    rax,[rip+0xdbea]        # 0x14004fc90
   1400420a6:	mov    rcx,rbx
   1400420a9:	mov    QWORD PTR [rbx],rax
   1400420ac:	call   QWORD PTR [rip+0x77e6]        # 0x140049898
   1400420b2:	test   dil,0x1
   1400420b6:	je     0x1400420c0
   1400420b8:	mov    rcx,rbx
   1400420bb:	call   0x14002b150
   1400420c0:	mov    rax,rbx
   1400420c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400420c8:	add    rsp,0x20
   1400420cc:	pop    rdi
   1400420cd:	ret    
   1400420ce:	int3   
   1400420cf:	int3   
   1400420d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400420d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400420da:	push   rdi
   1400420db:	sub    rsp,0x20
   1400420df:	xor    esi,esi
   1400420e1:	mov    rbx,rdx
   1400420e4:	mov    rdi,rcx
   1400420e7:	mov    DWORD PTR [rsp+0x30],esi
   1400420eb:	call   QWORD PTR [rip+0x74ef]        # 0x1400495e0
   1400420f1:	lea    r11,[rip+0xdb98]        # 0x14004fc90
   1400420f8:	mov    QWORD PTR [rdi],r11
   1400420fb:	mov    eax,DWORD PTR [rbx+0x18]
   1400420fe:	mov    DWORD PTR [rdi+0x18],eax
   140042101:	mov    rax,QWORD PTR [rbx+0x20]
   140042105:	mov    rbx,QWORD PTR [rsp+0x38]
   14004210a:	mov    QWORD PTR [rdi+0x20],rax
   14004210e:	mov    QWORD PTR [rdi+0x30],rsi
   140042112:	mov    QWORD PTR [rdi+0x38],rsi
   140042116:	mov    QWORD PTR [rdi+0x40],rsi
   14004211a:	mov    rsi,QWORD PTR [rsp+0x40]
   14004211f:	lea    rax,[rip+0xdbe2]        # 0x14004fd08
   140042126:	mov    DWORD PTR [rdi+0x48],0xffffffff
   14004212d:	mov    QWORD PTR [rdi],rax
   140042130:	lea    rax,[rip+0xdbc1]        # 0x14004fcf8
   140042137:	mov    QWORD PTR [rdi+0x28],rax
   14004213b:	mov    rax,rdi
   14004213e:	add    rsp,0x20
   140042142:	pop    rdi
   140042143:	ret    
   140042144:	int3   
   140042145:	int3   
   140042146:	int3   
   140042147:	int3   
   140042148:	int3   
   140042149:	int3   
   14004214a:	int3   
   14004214b:	int3   
   14004214c:	int3   
   14004214d:	int3   
   14004214e:	int3   
   14004214f:	int3   
   140042150:	sub    rcx,0x28
   140042154:	jmp    0x1400421b0
   140042159:	int3   
   14004215a:	int3   
   14004215b:	int3   
   14004215c:	int3   
   14004215d:	int3   
   14004215e:	int3   
   14004215f:	int3   
   140042160:	sub    rcx,0x50
   140042164:	jmp    0x1400421b0
   140042169:	int3   
   14004216a:	int3   
   14004216b:	int3   
   14004216c:	int3   
   14004216d:	int3   
   14004216e:	int3   
   14004216f:	int3   
   140042170:	rex push rbx
   140042172:	sub    rsp,0x20
   140042176:	mov    rbx,rcx
   140042179:	call   0x140041ef0
   14004217e:	lea    rax,[rip+0xdbcb]        # 0x14004fd50
   140042185:	mov    QWORD PTR [rbx],rax
   140042188:	lea    rax,[rip+0xdbb1]        # 0x14004fd40
   14004218f:	mov    QWORD PTR [rbx+0x28],rax
   140042193:	lea    rax,[rip+0xdb86]        # 0x14004fd20
   14004219a:	mov    QWORD PTR [rbx+0x50],rax
   14004219e:	mov    rax,rbx
   1400421a1:	add    rsp,0x20
   1400421a5:	pop    rbx
   1400421a6:	ret    
   1400421a7:	int3   
   1400421a8:	int3   
   1400421a9:	int3   
   1400421aa:	int3   
   1400421ab:	int3   
   1400421ac:	int3   
   1400421ad:	int3   
   1400421ae:	int3   
   1400421af:	int3   
   1400421b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400421b5:	push   rdi
   1400421b6:	sub    rsp,0x20
   1400421ba:	lea    rax,[rip+0x8047]        # 0x14004a208
   1400421c1:	mov    rbx,rcx
   1400421c4:	mov    edi,edx
   1400421c6:	mov    QWORD PTR [rcx+0x50],rax
   1400421ca:	lea    rax,[rip+0xdb37]        # 0x14004fd08
   1400421d1:	mov    QWORD PTR [rcx],rax
   1400421d4:	lea    rax,[rip+0x80b5]        # 0x14004a290
   1400421db:	mov    QWORD PTR [rcx+0x28],rax
   1400421df:	mov    rcx,QWORD PTR [rcx+0x30]
   1400421e3:	test   rcx,rcx
   1400421e6:	je     0x1400421fa
   1400421e8:	mov    rax,QWORD PTR [rcx]
   1400421eb:	call   QWORD PTR [rax+0x20]
   1400421ee:	test   al,al
   1400421f0:	je     0x1400421fa
   1400421f2:	mov    QWORD PTR [rbx+0x30],0x0
   1400421fa:	lea    rax,[rip+0xda8f]        # 0x14004fc90
   140042201:	mov    rcx,rbx
   140042204:	mov    QWORD PTR [rbx],rax
   140042207:	call   QWORD PTR [rip+0x768b]        # 0x140049898
   14004220d:	test   dil,0x1
   140042211:	je     0x14004221b
   140042213:	mov    rcx,rbx
   140042216:	call   0x14002b150
   14004221b:	mov    rax,rbx
   14004221e:	mov    rbx,QWORD PTR [rsp+0x30]
   140042223:	add    rsp,0x20
   140042227:	pop    rdi
   140042228:	ret    
   140042229:	int3   
   14004222a:	int3   
   14004222b:	int3   
   14004222c:	int3   
   14004222d:	int3   
   14004222e:	int3   
   14004222f:	int3   
   140042230:	rex push rdi
   140042232:	sub    rsp,0x30
   140042236:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004223f:	mov    QWORD PTR [rsp+0x40],rbx
   140042244:	mov    rdi,rcx
   140042247:	mov    ecx,0x58
   14004224c:	call   0x14002b1c2
   140042251:	mov    rbx,rax
   140042254:	mov    QWORD PTR [rsp+0x48],rax
   140042259:	test   rax,rax
   14004225c:	je     0x14004228c
   14004225e:	lea    rdx,[rdi-0x50]
   140042262:	mov    rcx,rax
   140042265:	call   0x140041ef0
   14004226a:	lea    rax,[rip+0xdadf]        # 0x14004fd50
   140042271:	mov    QWORD PTR [rbx],rax
   140042274:	lea    rax,[rip+0xdac5]        # 0x14004fd40
   14004227b:	mov    QWORD PTR [rbx+0x28],rax
   14004227f:	lea    rax,[rip+0xda9a]        # 0x14004fd20
   140042286:	mov    QWORD PTR [rbx+0x50],rax
   14004228a:	jmp    0x14004228e
   14004228c:	xor    ebx,ebx
   14004228e:	test   rbx,rbx
   140042291:	je     0x140042299
   140042293:	lea    rax,[rbx+0x50]
   140042297:	jmp    0x14004229b
   140042299:	xor    eax,eax
   14004229b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400422a0:	add    rsp,0x30
   1400422a4:	pop    rdi
   1400422a5:	ret    
   1400422a6:	int3   
   1400422a7:	int3   
   1400422a8:	int3   
   1400422a9:	int3   
   1400422aa:	int3   
   1400422ab:	int3   
   1400422ac:	int3   
   1400422ad:	int3   
   1400422ae:	int3   
   1400422af:	int3   
   1400422b0:	rex push rbx
   1400422b2:	sub    rsp,0x80
   1400422b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400422c2:	lea    rbx,[rcx-0x50]
   1400422c6:	mov    rdx,rbx
   1400422c9:	lea    rcx,[rsp+0x28]
   1400422ce:	call   QWORD PTR [rip+0x730c]        # 0x1400495e0
   1400422d4:	lea    r11,[rip+0xd9b5]        # 0x14004fc90
   1400422db:	mov    QWORD PTR [rsp+0x28],r11
   1400422e0:	mov    eax,DWORD PTR [rbx+0x18]
   1400422e3:	mov    DWORD PTR [rsp+0x40],eax
   1400422e7:	mov    rax,QWORD PTR [rbx+0x20]
   1400422eb:	mov    QWORD PTR [rsp+0x48],rax
   1400422f0:	lea    rax,[rip+0x7f99]        # 0x14004a290
   1400422f7:	mov    QWORD PTR [rsp+0x50],rax
   1400422fc:	mov    rcx,QWORD PTR [rbx+0x30]
   140042300:	mov    QWORD PTR [rsp+0x58],rcx
   140042305:	test   rcx,rcx
   140042308:	je     0x140042310
   14004230a:	mov    rax,QWORD PTR [rcx]
   14004230d:	call   QWORD PTR [rax+0x18]
   140042310:	mov    rax,QWORD PTR [rbx+0x38]
   140042314:	mov    QWORD PTR [rsp+0x60],rax
   140042319:	mov    rax,QWORD PTR [rbx+0x40]
   14004231d:	mov    QWORD PTR [rsp+0x68],rax
   140042322:	mov    eax,DWORD PTR [rbx+0x48]
   140042325:	mov    DWORD PTR [rsp+0x70],eax
   140042329:	lea    rax,[rip+0xda20]        # 0x14004fd50
   140042330:	mov    QWORD PTR [rsp+0x28],rax
   140042335:	lea    rax,[rip+0xda04]        # 0x14004fd40
   14004233c:	mov    QWORD PTR [rsp+0x50],rax
   140042341:	lea    rax,[rip+0xd9d8]        # 0x14004fd20
   140042348:	mov    QWORD PTR [rsp+0x78],rax
   14004234d:	lea    rdx,[rip+0x2122c]        # 0x140063580
   140042354:	lea    rcx,[rsp+0x28]
   140042359:	call   0x14002b560
   14004235e:	int3   
   14004235f:	int3   
   140042360:	mov    QWORD PTR [rsp+0x8],rcx
   140042365:	push   rdi
   140042366:	sub    rsp,0x30
   14004236a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140042373:	mov    QWORD PTR [rsp+0x50],rbx
   140042378:	mov    QWORD PTR [rsp+0x58],rsi
   14004237d:	mov    rsi,rdx
   140042380:	mov    rdi,rcx
   140042383:	xor    ebx,ebx
   140042385:	mov    DWORD PTR [rsp+0x48],ebx
   140042389:	call   0x140041ef0
   14004238e:	nop
   14004238f:	lea    rax,[rip+0xd9ba]        # 0x14004fd50
   140042396:	mov    QWORD PTR [rdi],rax
   140042399:	lea    rcx,[rdi+0x28]
   14004239d:	lea    rax,[rip+0xd99c]        # 0x14004fd40
   1400423a4:	mov    QWORD PTR [rcx],rax
   1400423a7:	lea    rax,[rip+0xd972]        # 0x14004fd20
   1400423ae:	mov    QWORD PTR [rdi+0x50],rax
   1400423b2:	test   rsi,rsi
   1400423b5:	je     0x1400423bb
   1400423b7:	lea    rbx,[rsi+0x28]
   1400423bb:	mov    rdx,rbx
   1400423be:	call   0x1400010f8
   1400423c3:	nop
   1400423c4:	mov    rax,rdi
   1400423c7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400423cc:	mov    rsi,QWORD PTR [rsp+0x58]
   1400423d1:	add    rsp,0x30
   1400423d5:	pop    rdi
   1400423d6:	ret    
   1400423d7:	int3   
   1400423d8:	int3   
   1400423d9:	int3   
   1400423da:	int3   
   1400423db:	int3   
   1400423dc:	int3   
   1400423dd:	int3   
   1400423de:	int3   
   1400423df:	int3   
   1400423e0:	sub    rsp,0xd8
   1400423e7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400423f0:	mov    rdx,rcx
   1400423f3:	lea    rcx,[rsp+0x80]
   1400423fb:	call   0x1400420d0
   140042400:	nop
   140042401:	mov    rdx,rax
   140042404:	lea    rcx,[rsp+0x28]
   140042409:	call   0x140042360
   14004240e:	lea    rdx,[rip+0x2116b]        # 0x140063580
   140042415:	lea    rcx,[rsp+0x28]
   14004241a:	call   0x14002b560
   14004241f:	int3   
   140042420:	sub    rsp,0x28
   140042424:	call   0x1400423e0
   140042429:	int3   
   14004242a:	int3   
   14004242b:	int3   
   14004242c:	int3   
   14004242d:	int3   
   14004242e:	int3   
   14004242f:	int3   
   140042430:	sub    rsp,0x28
   140042434:	call   0x140020094
   140042439:	int3   
   14004243a:	int3   
   14004243b:	int3   
   14004243c:	int3   
   14004243d:	int3   
   14004243e:	int3   
   14004243f:	int3   
   140042440:	bt     edx,0x13
   140042444:	jae    0x1400424be
   140042446:	mov    r11,rsp
   140042449:	sub    rsp,0xd8
   140042450:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140042459:	bt     edx,0x11
   14004245d:	jae    0x1400424b7
   14004245f:	lea    rax,[rip+0xd9ca]        # 0x14004fe30
   140042466:	mov    QWORD PTR [r11+0x18],rax
   14004246a:	lea    rdx,[r11+0x18]
   14004246e:	lea    rcx,[rsp+0x20]
   140042473:	call   QWORD PTR [rip+0x7457]        # 0x1400498d0
   140042479:	lea    r11,[rip+0x7d70]        # 0x14004a1f0
   140042480:	mov    QWORD PTR [rsp+0x20],r11
   140042485:	lea    rdx,[rsp+0x20]
   14004248a:	lea    rcx,[rsp+0x88]
   140042492:	call   0x14002f400
   140042497:	nop
   140042498:	mov    rdx,rax
   14004249b:	lea    rcx,[rsp+0x40]
   1400424a0:	call   0x140030620
   1400424a5:	lea    rdx,[rip+0x20f54]        # 0x140063400
   1400424ac:	lea    rcx,[rsp+0x40]
   1400424b1:	call   0x14002b560
   1400424b6:	nop
   1400424b7:	add    rsp,0xd8
   1400424be:	repz ret 
   1400424c0:	rex.W jmp QWORD PTR [rip+0x6c99]        # 0x140049160
   1400424c7:	int3   
   1400424c8:	int3   
   1400424c9:	int3   
   1400424ca:	int3   
   1400424cb:	int3   
   1400424cc:	int3   
   1400424cd:	int3   
   1400424ce:	int3   
   1400424cf:	int3   
   1400424d0:	rex.W jmp QWORD PTR [rip+0x6b69]        # 0x140049040
   1400424d7:	int3   
   1400424d8:	int3   
   1400424d9:	int3   
   1400424da:	int3   
   1400424db:	int3   
   1400424dc:	int3   
   1400424dd:	int3   
   1400424de:	int3   
   1400424df:	int3   
   1400424e0:	mov    rax,rcx
   1400424e3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400424e7:	rex.W jmp QWORD PTR [rax+0x18]
   1400424eb:	int3   
   1400424ec:	int3   
   1400424ed:	int3   
   1400424ee:	int3   
   1400424ef:	int3   
   1400424f0:	rex push rbx
   1400424f2:	sub    rsp,0x20
   1400424f6:	mov    rax,rdx
   1400424f9:	mov    rbx,rcx
   1400424fc:	lea    rdx,[rip+0x26325]        # 0x140068828
   140042503:	mov    rcx,rax
   140042506:	call   QWORD PTR [rip+0x70dc]        # 0x1400495e8
   14004250c:	test   al,al
   14004250e:	je     0x14004251a
   140042510:	lea    rax,[rbx+0x18]
   140042514:	add    rsp,0x20
   140042518:	pop    rbx
   140042519:	ret    
   14004251a:	xor    eax,eax
   14004251c:	add    rsp,0x20
   140042520:	pop    rbx
   140042521:	ret    
   140042522:	int3   
   140042523:	int3   
   140042524:	int3   
   140042525:	int3   
   140042526:	int3   
   140042527:	int3   
   140042528:	int3   
   140042529:	int3   
   14004252a:	int3   
   14004252b:	int3   
   14004252c:	int3   
   14004252d:	int3   
   14004252e:	int3   
   14004252f:	int3   
   140042530:	mov    QWORD PTR [rsp+0x18],r8
   140042535:	mov    QWORD PTR [rsp+0x10],rdx
   14004253a:	push   rdi
   14004253b:	sub    rsp,0x30
   14004253f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140042548:	mov    QWORD PTR [rsp+0x40],rbx
   14004254d:	mov    QWORD PTR [rsp+0x58],rsi
   140042552:	mov    rdi,r8
   140042555:	mov    rsi,rdx
   140042558:	mov    rbx,rcx
   14004255b:	mov    QWORD PTR [rcx],0x0
   140042562:	mov    ecx,0x20
   140042567:	call   0x14002b1c2
   14004256c:	test   rax,rax
   14004256f:	je     0x140042591
   140042571:	mov    DWORD PTR [rax+0x8],0x1
   140042578:	mov    DWORD PTR [rax+0xc],0x1
   14004257f:	lea    rcx,[rip+0xd902]        # 0x14004fe88
   140042586:	mov    QWORD PTR [rax],rcx
   140042589:	mov    QWORD PTR [rax+0x10],rsi
   14004258d:	mov    QWORD PTR [rax+0x18],rdi
   140042591:	mov    QWORD PTR [rbx],rax
   140042594:	mov    rax,rbx
   140042597:	mov    rbx,QWORD PTR [rsp+0x40]
   14004259c:	mov    rsi,QWORD PTR [rsp+0x58]
   1400425a1:	add    rsp,0x30
   1400425a5:	pop    rdi
   1400425a6:	ret    
   1400425a7:	int3   
   1400425a8:	int3   
   1400425a9:	int3   
   1400425aa:	int3   
   1400425ab:	int3   
   1400425ac:	int3   
   1400425ad:	int3   
   1400425ae:	int3   
   1400425af:	int3   
   1400425b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400425b5:	push   rdi
   1400425b6:	sub    rsp,0x20
   1400425ba:	cmp    QWORD PTR [rdx+0x18],0x10
   1400425bf:	mov    rdi,rcx
   1400425c2:	mov    DWORD PTR [rsp+0x30],0x0
   1400425ca:	jb     0x1400425cf
   1400425cc:	mov    rdx,QWORD PTR [rdx]
   1400425cf:	mov    rcx,rdx
   1400425d2:	call   QWORD PTR [rip+0x6ba0]        # 0x140049178
   1400425d8:	lea    rcx,[rdi+0x8]
   1400425dc:	lea    r8,[rip+0xfffffffffffffeed]        # 0x1400424d0
   1400425e3:	mov    rdx,rax
   1400425e6:	mov    rbx,rax
   1400425e9:	mov    QWORD PTR [rdi],rax
   1400425ec:	call   0x140042530
   1400425f1:	mov    r8,rbx
   1400425f4:	mov    rdx,rbx
   1400425f7:	mov    rcx,rdi
   1400425fa:	call   0x140025170
   1400425ff:	mov    rbx,QWORD PTR [rsp+0x38]
   140042604:	mov    rax,rdi
   140042607:	add    rsp,0x20
   14004260b:	pop    rdi
   14004260c:	ret    
   14004260d:	int3   
   14004260e:	int3   
   14004260f:	int3   
   140042610:	rex push rbx
   140042612:	push   rsi
   140042613:	push   rdi
   140042614:	sub    rsp,0x140
   14004261b:	mov    rax,QWORD PTR [rip+0x25bce]        # 0x1400681f0
   140042622:	xor    rax,rsp
   140042625:	mov    QWORD PTR [rsp+0x130],rax
   14004262d:	mov    rsi,QWORD PTR [rsp+0x180]
   140042635:	mov    rax,rdx
   140042638:	mov    edi,r9d
   14004263b:	mov    rbx,rcx
   14004263e:	mov    rcx,QWORD PTR [rax]
   140042641:	lea    r8,[rsp+0x30]
   140042646:	mov    r9d,0x100
   14004264c:	mov    edx,edi
   14004264e:	mov    DWORD PTR [rsp+0x20],0x0
   140042656:	call   QWORD PTR [rip+0x72bc]        # 0x140049918
   14004265c:	mov    QWORD PTR [rbx+0x18],0xf
   140042664:	mov    QWORD PTR [rbx+0x10],0x0
   14004266c:	mov    BYTE PTR [rbx],0x0
   14004266f:	test   eax,eax
   140042671:	jne    0x140042687
   140042673:	or     r9,0xffffffffffffffff
   140042677:	xor    r8d,r8d
   14004267a:	mov    rdx,rsi
   14004267d:	mov    rcx,rbx
   140042680:	call   0x1400048b8
   140042685:	jmp    0x1400426a8
   140042687:	or     rcx,0xffffffffffffffff
   14004268b:	xor    eax,eax
   14004268d:	lea    rdi,[rsp+0x30]
   140042692:	repnz scas al,BYTE PTR es:[rdi]
   140042694:	lea    rdx,[rsp+0x30]
   140042699:	not    rcx
   14004269c:	lea    r8,[rcx-0x1]
   1400426a0:	mov    rcx,rbx
   1400426a3:	call   0x140005154
   1400426a8:	mov    rax,rbx
   1400426ab:	mov    rcx,QWORD PTR [rsp+0x130]
   1400426b3:	xor    rcx,rsp
   1400426b6:	call   0x14002b100
   1400426bb:	add    rsp,0x140
   1400426c2:	pop    rdi
   1400426c3:	pop    rsi
   1400426c4:	pop    rbx
   1400426c5:	ret    
   1400426c6:	int3   
   1400426c7:	int3   
   1400426c8:	int3   
   1400426c9:	int3   
   1400426ca:	int3   
   1400426cb:	int3   
   1400426cc:	int3   
   1400426cd:	int3   
   1400426ce:	int3   
   1400426cf:	int3   
   1400426d0:	mov    rax,rsp
   1400426d3:	push   rbp
   1400426d4:	push   r12
   1400426d6:	push   r13
   1400426d8:	lea    rbp,[rax-0x198]
   1400426df:	sub    rsp,0x280
   1400426e6:	mov    QWORD PTR [rbp-0x68],0xfffffffffffffffe
   1400426ee:	mov    QWORD PTR [rax+0x10],rbx
   1400426f2:	mov    QWORD PTR [rax+0x18],rsi
   1400426f6:	mov    QWORD PTR [rax+0x20],rdi
   1400426fa:	mov    rax,QWORD PTR [rip+0x25aef]        # 0x1400681f0
   140042701:	xor    rax,rsp
   140042704:	mov    QWORD PTR [rbp+0x170],rax
   14004270b:	mov    rbx,rcx
   14004270e:	add    rcx,0x4
   140042712:	xor    edx,edx
   140042714:	mov    r8d,0x100
   14004271a:	call   0x14002b144
   14004271f:	xor    r13d,r13d
   140042722:	mov    QWORD PTR [rsp+0x48],r13
   140042727:	mov    QWORD PTR [rsp+0x50],r13
   14004272c:	lea    rcx,[rbp-0x60]
   140042730:	call   0x1400352e0
   140042735:	nop
   140042736:	or     r12,0xffffffffffffffff
   14004273a:	cmp    QWORD PTR [rbp-0x50],r13
   14004273e:	je     0x14004290f
   140042744:	lea    rdx,[rbp-0x60]
   140042748:	lea    rcx,[rbp-0x78]
   14004274c:	call   0x1400425b0
   140042751:	nop
   140042752:	mov    rdx,QWORD PTR [rax]
   140042755:	mov    QWORD PTR [rsp+0x60],rdx
   14004275a:	mov    rcx,QWORD PTR [rax+0x8]
   14004275e:	mov    QWORD PTR [rax+0x8],r13
   140042762:	mov    QWORD PTR [rax],r13
   140042765:	mov    QWORD PTR [rsp+0x48],rdx
   14004276a:	mov    QWORD PTR [rsp+0x50],rcx
   14004276f:	mov    rdi,QWORD PTR [rbp-0x70]
   140042773:	test   rdi,rdi
   140042776:	je     0x14004279b
   140042778:	lock dec DWORD PTR [rdi+0x8]
   14004277c:	jne    0x140042796
   14004277e:	mov    rax,QWORD PTR [rdi]
   140042781:	mov    rcx,rdi
   140042784:	call   QWORD PTR [rax+0x8]
   140042787:	lock dec DWORD PTR [rdi+0xc]
   14004278b:	jne    0x140042796
   14004278d:	mov    rax,QWORD PTR [rdi]
   140042790:	mov    rcx,rdi
   140042793:	call   QWORD PTR [rax+0x10]
   140042796:	mov    rdx,QWORD PTR [rsp+0x60]
   14004279b:	test   rdx,rdx
   14004279e:	jne    0x140042855
   1400427a4:	mov    QWORD PTR [rbp+0x30],0xf
   1400427ac:	mov    QWORD PTR [rbp+0x28],r13
   1400427b0:	mov    BYTE PTR [rbp+0x18],dl
   1400427b3:	lea    r8d,[rdx+0x20]
   1400427b7:	lea    rdx,[rip+0xd17a]        # 0x14004f938
   1400427be:	lea    rcx,[rbp+0x18]
   1400427c2:	call   0x140005154
   1400427c7:	nop
   1400427c8:	lea    r8,[rbp-0x60]
   1400427cc:	lea    rdx,[rbp+0x18]
   1400427d0:	lea    rcx,[rbp+0x40]
   1400427d4:	call   0x1400093c4
   1400427d9:	nop
   1400427da:	cmp    QWORD PTR [rax+0x18],0x10
   1400427df:	jb     0x1400427e4
   1400427e1:	mov    rax,QWORD PTR [rax]
   1400427e4:	mov    QWORD PTR [rsp+0x58],rax
   1400427e9:	lea    rdx,[rsp+0x58]
   1400427ee:	lea    rcx,[rsp+0x70]
   1400427f3:	call   QWORD PTR [rip+0x70d7]        # 0x1400498d0
   1400427f9:	lea    rdx,[rip+0xb648]        # 0x14004de48
   140042800:	mov    QWORD PTR [rsp+0x70],rdx
   140042805:	cmp    QWORD PTR [rbp+0x58],0x10
   14004280a:	jb     0x140042815
   14004280c:	mov    rcx,QWORD PTR [rbp+0x40]
   140042810:	call   0x14002b150
   140042815:	mov    QWORD PTR [rbp+0x58],0xf
   14004281d:	mov    QWORD PTR [rbp+0x50],r13
   140042821:	mov    BYTE PTR [rbp+0x40],0x0
   140042825:	lea    rcx,[rsp+0x70]
   14004282a:	call   0x140042430
   14004282f:	nop
   140042830:	lea    rcx,[rsp+0x70]
   140042835:	call   QWORD PTR [rip+0x705d]        # 0x140049898
   14004283b:	nop
   14004283c:	cmp    QWORD PTR [rbp+0x30],0x10
   140042841:	jb     0x14004290f
   140042847:	mov    rcx,QWORD PTR [rbp+0x18]
   14004284b:	call   0x14002b150
   140042850:	jmp    0x14004290f
   140042855:	mov    sil,0x1
   140042858:	nop    DWORD PTR [rax+rax*1+0x0]
   140042860:	movzx  ecx,sil
   140042864:	call   0x140042d50
   140042869:	mov    rdx,rax
   14004286c:	mov    QWORD PTR [rbp+0x8],0xf
   140042874:	mov    QWORD PTR [rbp+0x0],r13
   140042878:	mov    BYTE PTR [rbp-0x10],0x0
   14004287c:	xor    eax,eax
   14004287e:	mov    rcx,r12
   140042881:	mov    rdi,rdx
   140042884:	repnz scas al,BYTE PTR es:[rdi]
   140042886:	not    rcx
   140042889:	lea    r8,[rcx-0x1]
   14004288d:	lea    rcx,[rbp-0x10]
   140042891:	call   0x140005154
   140042896:	nop
   140042897:	movzx  r9d,sil
   14004289b:	lea    rax,[rbp-0x10]
   14004289f:	mov    QWORD PTR [rsp+0x20],rax
   1400428a4:	mov    r8d,DWORD PTR [rbx]
   1400428a7:	lea    rdx,[rsp+0x48]
   1400428ac:	lea    rcx,[rbp-0x38]
   1400428b0:	call   0x140042610
   1400428b5:	nop
   1400428b6:	cmp    QWORD PTR [rbp+0x8],0x10
   1400428bb:	jb     0x1400428c6
   1400428bd:	mov    rcx,QWORD PTR [rbp-0x10]
   1400428c1:	call   0x14002b150
   1400428c6:	mov    rcx,r13
   1400428c9:	cmp    QWORD PTR [rbp-0x28],rcx
   1400428cd:	jbe    0x1400428f0
   1400428cf:	nop
   1400428d0:	lea    rax,[rbp-0x38]
   1400428d4:	cmp    QWORD PTR [rbp-0x20],0x10
   1400428d9:	cmovae rax,QWORD PTR [rbp-0x38]
   1400428de:	movzx  eax,BYTE PTR [rax+rcx*1]
   1400428e2:	mov    BYTE PTR [rax+rbx*1+0x4],sil
   1400428e7:	inc    rcx
   1400428ea:	cmp    rcx,QWORD PTR [rbp-0x28]
   1400428ee:	jb     0x1400428d0
   1400428f0:	cmp    QWORD PTR [rbp-0x20],0x10
   1400428f5:	jb     0x140042900
   1400428f7:	mov    rcx,QWORD PTR [rbp-0x38]
   1400428fb:	call   0x14002b150
   140042900:	inc    sil
   140042903:	cmp    sil,0x3c
   140042907:	jb     0x140042860
   14004290d:	jmp    0x14004293d
   14004290f:	mov    dil,0x1
   140042912:	movzx  ecx,dil
   140042916:	call   0x140042d50
   14004291b:	test   rax,rax
   14004291e:	je     0x140042934
   140042920:	movzx  ecx,BYTE PTR [rax]
   140042923:	test   cl,cl
   140042925:	je     0x140042934
   140042927:	movzx  ecx,cl
   14004292a:	mov    BYTE PTR [rcx+rbx*1+0x4],dil
   14004292f:	inc    rax
   140042932:	jne    0x140042920
   140042934:	inc    dil
   140042937:	cmp    dil,0x3c
   14004293b:	jb     0x140042912
   14004293d:	mov    dil,0x41
   140042940:	movzx  esi,dil
   140042944:	cmp    BYTE PTR [rsi+rbx*1+0x4],0x0
   140042949:	jne    0x1400429b7
   14004294b:	mov    BYTE PTR [rsp+0x30],dil
   140042950:	lea    rax,[rsp+0x40]
   140042955:	mov    QWORD PTR [rsp+0x20],rax
   14004295a:	mov    r9d,0x1
   140042960:	lea    r8,[rsp+0x30]
   140042965:	mov    edx,r9d
   140042968:	mov    ecx,DWORD PTR [rbx]
   14004296a:	call   QWORD PTR [rip+0x67f8]        # 0x140049168
   140042970:	test   eax,eax
   140042972:	je     0x140042982
   140042974:	test   BYTE PTR [rsp+0x40],0x2
   140042979:	je     0x140042982
   14004297b:	mov    BYTE PTR [rsi+rbx*1+0x4],0x16
   140042980:	jmp    0x1400429b7
   140042982:	mov    BYTE PTR [rsp+0x38],dil
   140042987:	lea    rax,[rsp+0x44]
   14004298c:	mov    QWORD PTR [rsp+0x20],rax
   140042991:	mov    r9d,0x1
   140042997:	lea    r8,[rsp+0x38]
   14004299c:	mov    edx,r9d
   14004299f:	mov    ecx,DWORD PTR [rbx]
   1400429a1:	call   QWORD PTR [rip+0x67c1]        # 0x140049168
   1400429a7:	test   eax,eax
   1400429a9:	je     0x1400429b7
   1400429ab:	test   BYTE PTR [rsp+0x44],0x1
   1400429b0:	je     0x1400429b7
   1400429b2:	mov    BYTE PTR [rsi+rbx*1+0x4],0x17
   1400429b7:	movzx  eax,dil
   1400429bb:	inc    dil
   1400429be:	cmp    al,0xff
   1400429c0:	jne    0x140042940
   1400429c6:	mov    eax,r13d
   1400429c9:	lea    rcx,[rbp+0x70]
   1400429cd:	nop    DWORD PTR [rax]
   1400429d0:	mov    BYTE PTR [rcx],al
   1400429d2:	inc    eax
   1400429d4:	inc    rcx
   1400429d7:	cmp    eax,0x100
   1400429dc:	jl     0x1400429d0
   1400429de:	lea    rax,[rbx+0x104]
   1400429e5:	mov    DWORD PTR [rsp+0x28],0x100
   1400429ed:	mov    QWORD PTR [rsp+0x20],rax
   1400429f2:	mov    r9d,0x100
   1400429f8:	lea    r8,[rbp+0x70]
   1400429fc:	mov    edx,r9d
   1400429ff:	mov    ecx,DWORD PTR [rbx]
   140042a01:	call   QWORD PTR [rip+0x6769]        # 0x140049170
   140042a07:	cmp    eax,0x100
   140042a0c:	jge    0x140042a2e
   140042a0e:	movsxd rcx,eax
   140042a11:	lea    rcx,[rcx+rbx*1+0x104]
   140042a19:	nop    DWORD PTR [rax+0x0]
   140042a20:	mov    BYTE PTR [rcx],al
   140042a22:	inc    eax
   140042a24:	inc    rcx
   140042a27:	cmp    eax,0x100
   140042a2c:	jl     0x140042a20
   140042a2e:	lea    rax,[rbx+0x204]
   140042a35:	mov    QWORD PTR [rsp+0x20],rax
   140042a3a:	mov    r9d,0x100
   140042a40:	lea    r8,[rbp+0x70]
   140042a44:	mov    edx,0x1
   140042a49:	mov    ecx,DWORD PTR [rbx]
   140042a4b:	call   QWORD PTR [rip+0x6717]        # 0x140049168
   140042a51:	nop
   140042a52:	cmp    QWORD PTR [rbp-0x48],0x10
   140042a57:	jb     0x140042a62
   140042a59:	mov    rcx,QWORD PTR [rbp-0x60]
   140042a5d:	call   0x14002b150
   140042a62:	mov    QWORD PTR [rbp-0x48],0xf
   140042a6a:	mov    QWORD PTR [rbp-0x50],r13
   140042a6e:	mov    BYTE PTR [rbp-0x60],0x0
   140042a72:	mov    rcx,QWORD PTR [rsp+0x50]
   140042a77:	test   rcx,rcx
   140042a7a:	je     0x140042aa1
   140042a7c:	lock dec DWORD PTR [rcx+0x8]
   140042a80:	jne    0x140042aa1
   140042a82:	mov    rdi,QWORD PTR [rsp+0x50]
   140042a87:	mov    rax,QWORD PTR [rdi]
   140042a8a:	mov    rcx,rdi
   140042a8d:	call   QWORD PTR [rax+0x8]
   140042a90:	lock dec DWORD PTR [rdi+0xc]
   140042a94:	jne    0x140042aa1
   140042a96:	mov    rcx,QWORD PTR [rsp+0x50]
   140042a9b:	mov    rax,QWORD PTR [rcx]
   140042a9e:	call   QWORD PTR [rax+0x10]
   140042aa1:	mov    rcx,QWORD PTR [rbp+0x170]
   140042aa8:	xor    rcx,rsp
   140042aab:	call   0x14002b100
   140042ab0:	lea    r11,[rsp+0x280]
   140042ab8:	mov    rbx,QWORD PTR [r11+0x28]
   140042abc:	mov    rsi,QWORD PTR [r11+0x30]
   140042ac0:	mov    rdi,QWORD PTR [r11+0x38]
   140042ac4:	mov    rsp,r11
   140042ac7:	pop    r13
   140042ac9:	pop    r12
   140042acb:	pop    rbp
   140042acc:	ret    
   140042acd:	int3   
   140042ace:	int3   
   140042acf:	int3   
   140042ad0:	rex push rbp
   140042ad2:	push   rbx
   140042ad3:	push   rsi
   140042ad4:	push   rdi
   140042ad5:	push   r12
   140042ad7:	push   r13
   140042ad9:	push   r14
   140042adb:	push   r15
   140042add:	mov    rbp,rsp
   140042ae0:	sub    rsp,0x78
   140042ae4:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140042aec:	mov    rax,QWORD PTR [rip+0x256fd]        # 0x1400681f0
   140042af3:	xor    rax,rsp
   140042af6:	mov    QWORD PTR [rbp-0x10],rax
   140042afa:	mov    rdi,r9
   140042afd:	mov    rsi,r8
   140042b00:	mov    r15d,edx
   140042b03:	mov    rbx,rcx
   140042b06:	xor    eax,eax
   140042b08:	mov    DWORD PTR [rbp-0x48],eax
   140042b0b:	mov    r14d,r9d
   140042b0e:	sub    r14d,r8d
   140042b11:	mov    DWORD PTR [rsp+0x28],eax
   140042b15:	mov    QWORD PTR [rsp+0x20],rax
   140042b1a:	mov    r9d,r14d
   140042b1d:	mov    edx,0x400
   140042b22:	mov    ecx,r15d
   140042b25:	call   QWORD PTR [rip+0x6645]        # 0x140049170
   140042b2b:	mov    r13d,eax
   140042b2e:	mov    r12d,0xf
   140042b34:	test   eax,eax
   140042b36:	jne    0x140042b65
   140042b38:	mov    QWORD PTR [rbx+0x18],r12
   140042b3c:	mov    QWORD PTR [rbx+0x10],0x0
   140042b44:	mov    BYTE PTR [rbx],al
   140042b46:	cmp    rsi,rdi
   140042b49:	je     0x140042d2e
   140042b4f:	sub    rdi,rsi
   140042b52:	mov    r8,rdi
   140042b55:	mov    rdx,rsi
   140042b58:	mov    rcx,rbx
   140042b5b:	call   0x140005154
   140042b60:	jmp    0x140042d2e
   140042b65:	inc    r13d
   140042b68:	mov    QWORD PTR [rbp-0x20],r12
   140042b6c:	mov    QWORD PTR [rbp-0x28],0x0
   140042b74:	mov    BYTE PTR [rbp-0x38],0x0
   140042b78:	movsxd rdx,r13d
   140042b7b:	xor    r8d,r8d
   140042b7e:	lea    rcx,[rbp-0x38]
   140042b82:	call   0x140005250
   140042b87:	nop
   140042b88:	lea    rax,[rbp-0x38]
   140042b8c:	cmp    QWORD PTR [rbp-0x20],0x10
   140042b91:	cmovae rax,QWORD PTR [rbp-0x38]
   140042b96:	mov    DWORD PTR [rsp+0x28],r13d
   140042b9b:	mov    QWORD PTR [rsp+0x20],rax
   140042ba0:	mov    r9d,r14d
   140042ba3:	mov    r8,rsi
   140042ba6:	mov    edx,0x400
   140042bab:	mov    ecx,r15d
   140042bae:	call   QWORD PTR [rip+0x65bc]        # 0x140049170
   140042bb4:	cmp    eax,DWORD PTR [rbp-0x28]
   140042bb7:	jle    0x140042be9
   140042bb9:	mov    QWORD PTR [rbx+0x18],r12
   140042bbd:	mov    QWORD PTR [rbx+0x10],0x0
   140042bc5:	mov    BYTE PTR [rbx],0x0
   140042bc8:	cmp    rsi,rdi
   140042bcb:	je     0x140042bdf
   140042bcd:	sub    rdi,rsi
   140042bd0:	mov    r8,rdi
   140042bd3:	mov    rdx,rsi
   140042bd6:	mov    rcx,rbx
   140042bd9:	call   0x140005154
   140042bde:	nop
   140042bdf:	cmp    QWORD PTR [rbp-0x20],0x10
   140042be4:	jmp    0x140042d23
   140042be9:	mov    rcx,QWORD PTR [rbp-0x28]
   140042bed:	test   rcx,rcx
   140042bf0:	je     0x140042ca2
   140042bf6:	mov    rdx,QWORD PTR [rbp-0x20]
   140042bfa:	mov    r10,QWORD PTR [rbp-0x38]
   140042bfe:	xchg   ax,ax
   140042c00:	lea    rax,[rbp-0x38]
   140042c04:	cmp    rdx,0x10
   140042c08:	cmovae rax,r10
   140042c0c:	cmp    BYTE PTR [rax+rcx*1-0x1],0x0
   140042c11:	jne    0x140042ca2
   140042c17:	or     rdi,0xffffffffffffffff
   140042c1b:	lea    r9,[rcx-0x1]
   140042c1f:	cmp    rcx,r9
   140042c22:	jb     0x140042c94
   140042c24:	mov    r8,rcx
   140042c27:	sub    r8,r9
   140042c2a:	cmp    r8,rdi
   140042c2d:	jae    0x140042c37
   140042c2f:	mov    rdi,r8
   140042c32:	test   r8,r8
   140042c35:	je     0x140042c89
   140042c37:	lea    rcx,[rbp-0x38]
   140042c3b:	cmp    rdx,0x10
   140042c3f:	cmovae rcx,r10
   140042c43:	lea    rax,[rbp-0x38]
   140042c47:	cmovae rax,r10
   140042c4b:	sub    r8,rdi
   140042c4e:	lea    rdx,[rcx+r9*1]
   140042c52:	add    rdx,rdi
   140042c55:	lea    rcx,[rax+r9*1]
   140042c59:	call   QWORD PTR [rip+0x6991]        # 0x1400495f0
   140042c5f:	mov    r11,QWORD PTR [rbp-0x28]
   140042c63:	sub    r11,rdi
   140042c66:	mov    QWORD PTR [rbp-0x28],r11
   140042c6a:	lea    rax,[rbp-0x38]
   140042c6e:	cmp    QWORD PTR [rbp-0x20],0x10
   140042c73:	cmovae rax,QWORD PTR [rbp-0x38]
   140042c78:	mov    BYTE PTR [rax+r11*1],0x0
   140042c7d:	mov    rdx,QWORD PTR [rbp-0x20]
   140042c81:	mov    rcx,QWORD PTR [rbp-0x28]
   140042c85:	mov    r10,QWORD PTR [rbp-0x38]
   140042c89:	test   rcx,rcx
   140042c8c:	jne    0x140042c00
   140042c92:	jmp    0x140042ca2
   140042c94:	lea    rcx,[rip+0xdc95]        # 0x140050930
   140042c9b:	call   QWORD PTR [rip+0x690f]        # 0x1400495b0
   140042ca1:	int3   
   140042ca2:	mov    QWORD PTR [rbx+0x18],r12
   140042ca6:	xor    edi,edi
   140042ca8:	mov    QWORD PTR [rbx+0x10],rdi
   140042cac:	mov    BYTE PTR [rbx],dil
   140042caf:	lea    rax,[rbp-0x38]
   140042cb3:	cmp    rbx,rax
   140042cb6:	je     0x140042d1b
   140042cb8:	cmp    QWORD PTR [rbx+0x18],0x10
   140042cbd:	jb     0x140042cc7
   140042cbf:	mov    rcx,QWORD PTR [rbx]
   140042cc2:	call   0x14002b150
   140042cc7:	mov    QWORD PTR [rbx+0x18],r12
   140042ccb:	mov    QWORD PTR [rbx+0x10],rdi
   140042ccf:	mov    BYTE PTR [rbx],dil
   140042cd2:	mov    rcx,QWORD PTR [rbp-0x20]
   140042cd6:	cmp    rcx,0x10
   140042cda:	jae    0x140042cf6
   140042cdc:	mov    r8,QWORD PTR [rbp-0x28]
   140042ce0:	inc    r8
   140042ce3:	lea    rdx,[rbp-0x38]
   140042ce7:	mov    rcx,rbx
   140042cea:	call   QWORD PTR [rip+0x6900]        # 0x1400495f0
   140042cf0:	mov    rcx,QWORD PTR [rbp-0x20]
   140042cf4:	jmp    0x140042d01
   140042cf6:	mov    rax,QWORD PTR [rbp-0x38]
   140042cfa:	mov    QWORD PTR [rbx],rax
   140042cfd:	mov    QWORD PTR [rbp-0x38],rdi
   140042d01:	mov    rax,QWORD PTR [rbp-0x28]
   140042d05:	mov    QWORD PTR [rbx+0x10],rax
   140042d09:	mov    QWORD PTR [rbx+0x18],rcx
   140042d0d:	mov    QWORD PTR [rbp-0x20],r12
   140042d11:	mov    QWORD PTR [rbp-0x28],rdi
   140042d15:	mov    BYTE PTR [rbp-0x38],dil
   140042d19:	jmp    0x140042d1f
   140042d1b:	mov    r12,QWORD PTR [rbp-0x20]
   140042d1f:	cmp    r12,0x10
   140042d23:	jb     0x140042d2e
   140042d25:	mov    rcx,QWORD PTR [rbp-0x38]
   140042d29:	call   0x14002b150
   140042d2e:	mov    rax,rbx
   140042d31:	mov    rcx,QWORD PTR [rbp-0x10]
   140042d35:	xor    rcx,rsp
   140042d38:	call   0x14002b100
   140042d3d:	add    rsp,0x78
   140042d41:	pop    r15
   140042d43:	pop    r14
   140042d45:	pop    r13
   140042d47:	pop    r12
   140042d49:	pop    rdi
   140042d4a:	pop    rsi
   140042d4b:	pop    rbx
   140042d4c:	pop    rbp
   140042d4d:	ret    
   140042d4e:	int3   
   140042d4f:	int3   
   140042d50:	rex push rbp
   140042d52:	lea    rbp,[rsp-0xe0]
   140042d5a:	sub    rsp,0x1e0
   140042d61:	lea    rax,[rip+0xd624]        # 0x14005038c
   140042d68:	lea    r8,[rip+0xdb86]        # 0x1400508f5
   140042d6f:	mov    QWORD PTR [rsp+0x8],rax
   140042d74:	lea    rax,[rip+0xd60d]        # 0x140050388
   140042d7b:	mov    QWORD PTR [rsp],r8
   140042d7f:	mov    QWORD PTR [rsp+0x10],rax
   140042d84:	lea    rax,[rip+0xd5f9]        # 0x140050384
   140042d8b:	mov    QWORD PTR [rbp-0x50],r8
   140042d8f:	mov    QWORD PTR [rsp+0x18],rax
   140042d94:	lea    rax,[rip+0xd5e5]        # 0x140050380
   140042d9b:	mov    QWORD PTR [rbp-0x48],r8
   140042d9f:	mov    QWORD PTR [rsp+0x20],rax
   140042da4:	lea    rax,[rip+0xd5d1]        # 0x14005037c
   140042dab:	mov    QWORD PTR [rbp+0x38],r8
   140042daf:	mov    QWORD PTR [rsp+0x28],rax
   140042db4:	lea    rax,[rip+0xdb0d]        # 0x1400508c8
   140042dbb:	mov    QWORD PTR [rbp+0x40],r8
   140042dbf:	mov    QWORD PTR [rsp+0x30],rax
   140042dc4:	lea    rax,[rip+0xd5ad]        # 0x140050378
   140042dcb:	mov    QWORD PTR [rbp+0x48],r8
   140042dcf:	mov    QWORD PTR [rsp+0x38],rax
   140042dd4:	lea    rax,[rip+0xd599]        # 0x140050374
   140042ddb:	mov    QWORD PTR [rbp+0x50],r8
   140042ddf:	mov    QWORD PTR [rsp+0x40],rax
   140042de4:	lea    rax,[rip+0xdb19]        # 0x140050904
   140042deb:	mov    QWORD PTR [rbp+0x58],r8
   140042def:	mov    QWORD PTR [rsp+0x48],rax
   140042df4:	lea    rax,[rip+0xdb05]        # 0x140050900
   140042dfb:	mov    QWORD PTR [rsp+0x50],rax
   140042e00:	lea    rax,[rip+0xdf99]        # 0x140050da0
   140042e07:	mov    QWORD PTR [rsp+0x58],rax
   140042e0c:	lea    rax,[rip+0xe9b5]        # 0x1400517c8
   140042e13:	mov    QWORD PTR [rsp+0x60],rax
   140042e18:	lea    rax,[rip+0xd551]        # 0x140050370
   140042e1f:	mov    QWORD PTR [rsp+0x68],rax
   140042e24:	lea    rax,[rip+0xd541]        # 0x14005036c
   140042e2b:	mov    QWORD PTR [rsp+0x70],rax
   140042e30:	lea    rax,[rip+0xd531]        # 0x140050368
   140042e37:	mov    QWORD PTR [rsp+0x78],rax
   140042e3c:	lea    rax,[rip+0xd521]        # 0x140050364
   140042e43:	mov    QWORD PTR [rbp-0x80],rax
   140042e47:	lea    rax,[rip+0xd50a]        # 0x140050358
   140042e4e:	mov    QWORD PTR [rbp-0x78],rax
   140042e52:	lea    rax,[rip+0xd1c3]        # 0x14005001c
   140042e59:	mov    QWORD PTR [rbp-0x70],rax
   140042e5d:	lea    rax,[rip+0xdc7c]        # 0x140050ae0
   140042e64:	mov    QWORD PTR [rbp-0x68],rax
   140042e68:	lea    rax,[rip+0xe951]        # 0x1400517c0
   140042e6f:	mov    QWORD PTR [rbp-0x60],rax
   140042e73:	lea    rax,[rip+0xe94a]        # 0x1400517c4
   140042e7a:	mov    QWORD PTR [rbp-0x58],rax
   140042e7e:	lea    rax,[rip+0xd4cf]        # 0x140050354
   140042e85:	mov    QWORD PTR [rbp-0x40],rax
   140042e89:	lea    rax,[rip+0xd4c0]        # 0x140050350
   140042e90:	mov    QWORD PTR [rbp-0x38],rax
   140042e94:	lea    rax,[rip+0xda61]        # 0x1400508fc
   140042e9b:	mov    QWORD PTR [rbp-0x30],rax
   140042e9f:	lea    rax,[rip+0xd4a6]        # 0x14005034c
   140042ea6:	mov    QWORD PTR [rbp-0x28],rax
   140042eaa:	lea    rax,[rip+0xd16f]        # 0x140050020
   140042eb1:	mov    QWORD PTR [rbp-0x20],rax
   140042eb5:	lea    rax,[rip+0xd150]        # 0x14005000c
   140042ebc:	mov    QWORD PTR [rbp-0x18],rax
   140042ec0:	lea    rax,[rip+0xd125]        # 0x14004ffec
   140042ec7:	mov    QWORD PTR [rbp-0x10],rax
   140042ecb:	lea    rax,[rip+0xd10a]        # 0x14004ffdc
   140042ed2:	mov    QWORD PTR [rbp-0x8],rax
   140042ed6:	lea    rax,[rip+0xd0f7]        # 0x14004ffd4
   140042edd:	mov    QWORD PTR [rbp+0x0],rax
   140042ee1:	lea    rax,[rip+0xd0e4]        # 0x14004ffcc
   140042ee8:	mov    QWORD PTR [rbp+0x8],rax
   140042eec:	lea    rax,[rip+0xd0d1]        # 0x14004ffc4
   140042ef3:	mov    QWORD PTR [rbp+0x10],rax
   140042ef7:	lea    rax,[rip+0xd11a]        # 0x140050018
   140042efe:	mov    QWORD PTR [rbp+0x18],rax
   140042f02:	lea    rax,[rip+0xd43f]        # 0x140050348
   140042f09:	mov    QWORD PTR [rbp+0x20],rax
   140042f0d:	lea    rax,[rip+0xd9f4]        # 0x140050908
   140042f14:	mov    QWORD PTR [rbp+0x28],rax
   140042f18:	lea    rax,[rip+0xd0f1]        # 0x140050010
   140042f1f:	mov    QWORD PTR [rbp+0x30],rax
   140042f23:	lea    rax,[rip+0xdbbe]        # 0x140050ae8
   140042f2a:	lea    rdx,[rip+0xd18b]        # 0x1400500bc
   140042f31:	mov    QWORD PTR [rbp+0x60],r8
   140042f35:	mov    QWORD PTR [rbp+0x78],rax
   140042f39:	mov    QWORD PTR [rbp+0xb8],rdx
   140042f40:	lea    rax,[rip+0xd171]        # 0x1400500b8
   140042f47:	mov    QWORD PTR [rbp+0x80],rax
   140042f4e:	lea    rax,[rip+0xd147]        # 0x14005009c
   140042f55:	lea    rdx,[rip+0xd168]        # 0x1400500c4
   140042f5c:	mov    QWORD PTR [rbp+0x88],rax
   140042f63:	mov    QWORD PTR [rbp+0xc0],rdx
   140042f6a:	lea    rax,[rip+0xdb5f]        # 0x140050ad0
   140042f71:	mov    QWORD PTR [rbp+0x90],rax
   140042f78:	lea    rax,[rip+0xd115]        # 0x140050094
   140042f7f:	lea    rdx,[rip+0xd3be]        # 0x140050344
   140042f86:	mov    QWORD PTR [rbp+0x98],rax
   140042f8d:	lea    rax,[rip+0xd14c]        # 0x1400500e0
   140042f94:	mov    QWORD PTR [rbp+0xc8],rdx
   140042f9b:	mov    QWORD PTR [rbp+0xa0],rax
   140042fa2:	lea    rdx,[rip+0xd127]        # 0x1400500d0
   140042fa9:	lea    rax,[rip+0xd390]        # 0x140050340
   140042fb0:	mov    QWORD PTR [rbp+0xa8],rax
   140042fb7:	mov    QWORD PTR [rbp+0xd0],rdx
   140042fbe:	lea    rax,[rip+0xd01f]        # 0x14004ffe4
   140042fc5:	lea    rdx,[rip+0xd0e8]        # 0x1400500b4
   140042fcc:	mov    QWORD PTR [rbp+0x68],r8
   140042fd0:	mov    QWORD PTR [rbp+0x70],r8
   140042fd4:	mov    QWORD PTR [rbp+0xb0],rax
   140042fdb:	mov    QWORD PTR [rbp+0xd8],rdx
   140042fe2:	cmp    cl,0x3c
   140042fe5:	jb     0x140042ff3
   140042fe7:	mov    rax,r8
   140042fea:	add    rsp,0x1e0
   140042ff1:	pop    rbp
   140042ff2:	ret    
   140042ff3:	movzx  eax,cl
   140042ff6:	mov    rax,QWORD PTR [rsp+rax*8]
   140042ffa:	add    rsp,0x1e0
   140043001:	pop    rbp
   140043002:	ret    
   140043003:	int3   
   140043004:	int3   
   140043005:	int3   
   140043006:	int3   
   140043007:	int3   
   140043008:	int3   
   140043009:	int3   
   14004300a:	int3   
   14004300b:	int3   
   14004300c:	int3   
   14004300d:	int3   
   14004300e:	int3   
   14004300f:	int3   
   140043010:	cmp    ecx,0x15
   140043013:	jle    0x14004301d
   140043015:	lea    rax,[rip+0xd424]        # 0x140050440
   14004301c:	ret    
   14004301d:	movsxd rax,ecx
   140043020:	lea    rcx,[rip+0xd369]        # 0x140050390
   140043027:	mov    rax,QWORD PTR [rcx+rax*8]
   14004302b:	ret    
   14004302c:	int3   
   14004302d:	int3   
   14004302e:	int3   
   14004302f:	int3   
   140043030:	mov    QWORD PTR [rsp+0x8],rbx
   140043035:	mov    QWORD PTR [rsp+0x10],rbp
   14004303a:	mov    QWORD PTR [rsp+0x20],rsi
   14004303f:	push   rdi
   140043040:	push   r12
   140043042:	push   r13
   140043044:	push   r14
   140043046:	push   r15
   140043048:	sub    rsp,0x20
   14004304c:	mov    rsi,rdx
   14004304f:	mov    rdx,QWORD PTR [rip+0x257fa]        # 0x140068850
   140043056:	xor    r12d,r12d
   140043059:	mov    rbx,rcx
   14004305c:	mov    DWORD PTR [rsp+0x60],0x0
   140043064:	cmp    BYTE PTR [rdx],r12b
   140043067:	je     0x1400430d9
   140043069:	mov    r13,QWORD PTR [rsi+0x10]
   14004306d:	mov    r15,QWORD PTR [rsi+0x18]
   140043071:	or     rcx,0xffffffffffffffff
   140043075:	xor    eax,eax
   140043077:	mov    rdi,rdx
   14004307a:	repnz scas al,BYTE PTR es:[rdi]
   14004307c:	cmp    r13,r13
   14004307f:	mov    rdi,r13
   140043082:	not    rcx
   140043085:	cmovb  rdi,r13
   140043089:	lea    rbp,[rcx-0x1]
   14004308d:	cmp    r15,0x10
   140043091:	jb     0x140043098
   140043093:	mov    rcx,QWORD PTR [rsi]
   140043096:	jmp    0x14004309b
   140043098:	mov    rcx,rsi
   14004309b:	mov    r8,rbp
   14004309e:	cmp    rdi,rbp
   1400430a1:	cmovb  r8,rdi
   1400430a5:	call   0x14002b13e
   1400430aa:	movsxd rcx,eax
   1400430ad:	test   eax,eax
   1400430af:	jne    0x1400430be
   1400430b1:	cmp    rdi,rbp
   1400430b4:	jb     0x1400430c2
   1400430b6:	cmp    rdi,rbp
   1400430b9:	setne  al
   1400430bc:	mov    ecx,eax
   1400430be:	test   ecx,ecx
   1400430c0:	je     0x140043127
   1400430c2:	inc    r12d
   1400430c5:	lea    rcx,[rip+0xfffffffffffbcf34]        # 0x140000000
   1400430cc:	mov    rdx,QWORD PTR [rcx+r12*8+0x68850]
   1400430d4:	cmp    BYTE PTR [rdx],0x0
   1400430d7:	jne    0x140043071
   1400430d9:	mov    rdx,QWORD PTR [rip+0x25b80]        # 0x140068c60
   1400430e0:	xor    r12d,r12d
   1400430e3:	cmp    BYTE PTR [rdx],r12b
   1400430e6:	je     0x1400431ca
   1400430ec:	mov    r13,QWORD PTR [rsi+0x10]
   1400430f0:	mov    r15,QWORD PTR [rsi+0x18]
   1400430f4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140043100:	or     rcx,0xffffffffffffffff
   140043104:	xor    eax,eax
   140043106:	mov    rdi,rdx
   140043109:	repnz scas al,BYTE PTR es:[rdi]
   14004310b:	cmp    r13,r13
   14004310e:	mov    rdi,r13
   140043111:	not    rcx
   140043114:	cmovb  rdi,r13
   140043118:	lea    rbp,[rcx-0x1]
   14004311c:	cmp    r15,0x10
   140043120:	jb     0x140043185
   140043122:	mov    rcx,QWORD PTR [rsi]
   140043125:	jmp    0x140043188
   140043127:	mov    QWORD PTR [rbx+0x18],0xf
   14004312f:	mov    QWORD PTR [rbx+0x10],0x0
   140043137:	mov    BYTE PTR [rbx],0x0
   14004313a:	cmp    QWORD PTR [rbx+0x18],0x1
   14004313f:	jae    0x140043152
   140043141:	mov    r8,QWORD PTR [rbx+0x10]
   140043145:	mov    edx,0x1
   14004314a:	mov    rcx,rbx
   14004314d:	call   0x140005750
   140043152:	cmp    QWORD PTR [rbx+0x18],0x10
   140043157:	jb     0x14004315e
   140043159:	mov    rax,QWORD PTR [rbx]
   14004315c:	jmp    0x140043161
   14004315e:	mov    rax,rbx
   140043161:	mov    BYTE PTR [rax],r12b
   140043164:	cmp    QWORD PTR [rbx+0x18],0x10
   140043169:	mov    QWORD PTR [rbx+0x10],0x1
   140043171:	jb     0x14004317c
   140043173:	mov    rax,QWORD PTR [rbx]
   140043176:	mov    BYTE PTR [rax+0x1],0x0
   14004317a:	jmp    0x1400431dd
   14004317c:	mov    rax,rbx
   14004317f:	mov    BYTE PTR [rbx+0x1],0x0
   140043183:	jmp    0x1400431dd
   140043185:	mov    rcx,rsi
   140043188:	mov    r8,rbp
   14004318b:	cmp    rdi,rbp
   14004318e:	cmovb  r8,rdi
   140043192:	call   0x14002b13e
   140043197:	movsxd rcx,eax
   14004319a:	test   eax,eax
   14004319c:	jne    0x1400431ab
   14004319e:	cmp    rdi,rbp
   1400431a1:	jb     0x1400431af
   1400431a3:	cmp    rdi,rbp
   1400431a6:	setne  al
   1400431a9:	mov    ecx,eax
   1400431ab:	test   ecx,ecx
   1400431ad:	je     0x1400431fd
   1400431af:	inc    r12d
   1400431b2:	lea    rcx,[rip+0xfffffffffffbce47]        # 0x140000000
   1400431b9:	mov    rdx,QWORD PTR [rcx+r12*8+0x68c60]
   1400431c1:	cmp    BYTE PTR [rdx],0x0
   1400431c4:	jne    0x140043100
   1400431ca:	mov    QWORD PTR [rbx+0x18],0xf
   1400431d2:	mov    QWORD PTR [rbx+0x10],0x0
   1400431da:	mov    BYTE PTR [rbx],0x0
   1400431dd:	mov    rbp,QWORD PTR [rsp+0x58]
   1400431e2:	mov    rsi,QWORD PTR [rsp+0x68]
   1400431e7:	mov    rax,rbx
   1400431ea:	mov    rbx,QWORD PTR [rsp+0x50]
   1400431ef:	add    rsp,0x20
   1400431f3:	pop    r15
   1400431f5:	pop    r14
   1400431f7:	pop    r13
   1400431f9:	pop    r12
   1400431fb:	pop    rdi
   1400431fc:	ret    
   1400431fd:	lea    rcx,[rip+0xfffffffffffbcdfc]        # 0x140000000
   140043204:	xor    eax,eax
   140043206:	mov    rdx,QWORD PTR [rcx+r12*8+0x68c60]
   14004320e:	or     rcx,0xffffffffffffffff
   140043212:	mov    QWORD PTR [rbx+0x18],0xf
   14004321a:	mov    QWORD PTR [rbx+0x10],0x0
   140043222:	mov    rdi,rdx
   140043225:	mov    BYTE PTR [rbx],0x0
   140043228:	repnz scas al,BYTE PTR es:[rdi]
   14004322a:	not    rcx
   14004322d:	lea    r8,[rcx-0x1]
   140043231:	mov    rcx,rbx
   140043234:	call   0x140005154
   140043239:	jmp    0x1400431dd
   14004323b:	int3   
   14004323c:	int3   
   14004323d:	int3   
   14004323e:	int3   
   14004323f:	int3   
   140043240:	rex push rbx
   140043242:	sub    rsp,0x20
   140043246:	mov    rbx,rcx
   140043249:	mov    QWORD PTR [rcx],rdx
   14004324c:	mov    BYTE PTR [rcx+0x8],0x0
   140043250:	test   r8b,r8b
   140043253:	je     0x140043283
   140043255:	mov    QWORD PTR [rsp+0x30],rdi
   14004325a:	xor    eax,eax
   14004325c:	mov    edi,0x1
   140043261:	lock cmpxchg DWORD PTR [rdx],edi
   140043265:	je     0x14004327a
   140043267:	xor    ecx,ecx
   140043269:	call   QWORD PTR [rip+0x5e81]        # 0x1400490f0
   14004326f:	mov    rcx,QWORD PTR [rbx]
   140043272:	xor    eax,eax
   140043274:	lock cmpxchg DWORD PTR [rcx],edi
   140043278:	jne    0x140043267
   14004327a:	mov    BYTE PTR [rbx+0x8],dil
   14004327e:	mov    rdi,QWORD PTR [rsp+0x30]
   140043283:	mov    rax,rbx
   140043286:	add    rsp,0x20
   14004328a:	pop    rbx
   14004328b:	ret    
   14004328c:	int3   
   14004328d:	int3   
   14004328e:	int3   
   14004328f:	int3   
   140043290:	cmp    BYTE PTR [rcx+0x8],0x0
   140043294:	je     0x1400432a1
   140043296:	mov    rax,QWORD PTR [rcx]
   140043299:	xor    edx,edx
   14004329b:	xchg   DWORD PTR [rax],edx
   14004329d:	mov    BYTE PTR [rcx+0x8],0x0
   1400432a1:	repz ret 
   1400432a3:	int3   
   1400432a4:	jmp    QWORD PTR [rip+0x5f66]        # 0x140049210
   1400432aa:	jmp    QWORD PTR [rip+0x5ed0]        # 0x140049180
   1400432b0:	rex push rbp
   1400432b2:	sub    rsp,0x20
   1400432b6:	mov    rbp,rdx
   1400432b9:	mov    rdx,QWORD PTR [rbp+0x58]
   1400432bd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400432c1:	call   0x14001195c
   1400432c6:	add    rsp,0x20
   1400432ca:	pop    rbp
   1400432cb:	ret    
   1400432cc:	int3   
   1400432cd:	int3   
   1400432ce:	int3   
   1400432cf:	int3   
   1400432d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400432d5:	push   rbp
   1400432d6:	sub    rsp,0x20
   1400432da:	mov    rbp,rdx
   1400432dd:	mov    rcx,QWORD PTR [rbp+0x50]
   1400432e1:	call   0x14002b150
   1400432e6:	xor    edx,edx
   1400432e8:	xor    ecx,ecx
   1400432ea:	call   0x14002b560
   1400432ef:	nop
   1400432f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400432f5:	push   rbp
   1400432f6:	sub    rsp,0x20
   1400432fa:	mov    rbp,rdx
   1400432fd:	mov    rcx,QWORD PTR [rbp+0x48]
   140043301:	call   0x140025770
   140043306:	xor    edx,edx
   140043308:	xor    ecx,ecx
   14004330a:	call   0x14002b560
   14004330f:	nop
   140043310:	mov    rcx,QWORD PTR [rdx+0x40]
   140043317:	jmp    0x14002dd60
   14004331c:	int3   
   14004331d:	int3   
   14004331e:	int3   
   14004331f:	int3   
   140043320:	rex push rbp
   140043322:	mov    rbp,rdx
   140043325:	mov    eax,DWORD PTR [rip+0x26d15]        # 0x14006a040
   14004332b:	and    eax,0xfffffffe
   14004332e:	mov    DWORD PTR [rip+0x26d0c],eax        # 0x14006a040
   140043334:	pop    rbp
   140043335:	ret    
   140043336:	int3   
   140043337:	int3   
   140043338:	int3   
   140043339:	int3   
   14004333a:	int3   
   14004333b:	int3   
   14004333c:	int3   
   14004333d:	int3   
   14004333e:	int3   
   14004333f:	int3   
   140043340:	mov    rcx,QWORD PTR [rdx+0x20]
   140043347:	jmp    0x14002b150
   14004334c:	int3   
   14004334d:	int3   
   14004334e:	int3   
   14004334f:	int3   
   140043350:	lea    rcx,[rdx+0xd0]
   140043357:	jmp    0x14000638c
   14004335c:	int3   
   14004335d:	int3   
   14004335e:	int3   
   14004335f:	int3   
   140043360:	lea    rcx,[rdx+0xa0]
   140043367:	jmp    0x14001d41c
   14004336c:	int3   
   14004336d:	int3   
   14004336e:	int3   
   14004336f:	int3   
   140043370:	lea    rcx,[rdx+0xb8]
   140043377:	jmp    0x14001d41c
   14004337c:	int3   
   14004337d:	int3   
   14004337e:	int3   
   14004337f:	int3   
   140043380:	lea    rcx,[rdx+0x120]
   140043387:	jmp    0x14000638c
   14004338c:	int3   
   14004338d:	int3   
   14004338e:	int3   
   14004338f:	int3   
   140043390:	lea    rcx,[rdx+0x148]
   140043397:	jmp    0x1400308c0
   14004339c:	int3   
   14004339d:	int3   
   14004339e:	int3   
   14004339f:	int3   
   1400433a0:	lea    rcx,[rdx+0xf8]
   1400433a7:	jmp    0x14000638c
   1400433ac:	int3   
   1400433ad:	int3   
   1400433ae:	int3   
   1400433af:	int3   
   1400433b0:	lea    rcx,[rdx+0x178]
   1400433b7:	jmp    0x1400308c0
   1400433bc:	lea    rcx,[rdx+0x48]
   1400433c3:	rex.W jmp QWORD PTR [rip+0x61de]        # 0x1400495a8
   1400433ca:	rex push rbp
   1400433cc:	sub    rsp,0x20
   1400433d0:	mov    rbp,rdx
   1400433d3:	mov    ecx,0x8
   1400433d8:	call   0x14002b85c
   1400433dd:	nop
   1400433de:	add    rsp,0x20
   1400433e2:	pop    rbp
   1400433e3:	ret    
   1400433e4:	int3   
   1400433e5:	rex push rbp
   1400433e7:	sub    rsp,0x20
   1400433eb:	mov    rbp,rdx
   1400433ee:	mov    rax,QWORD PTR [rcx]
   1400433f1:	mov    rdx,rcx
   1400433f4:	mov    ecx,DWORD PTR [rax]
   1400433f6:	call   0x14002b944
   1400433fb:	nop
   1400433fc:	add    rsp,0x20
   140043400:	pop    rbp
   140043401:	ret    
   140043402:	int3   
   140043403:	rex push rbp
   140043405:	sub    rsp,0x20
   140043409:	mov    rbp,rdx
   14004340c:	mov    QWORD PTR [rbp+0x38],rcx
   140043410:	mov    QWORD PTR [rbp+0x28],rcx
   140043414:	mov    rax,QWORD PTR [rbp+0x28]
   140043418:	mov    rcx,QWORD PTR [rax]
   14004341b:	mov    QWORD PTR [rbp+0x30],rcx
   14004341f:	mov    rax,QWORD PTR [rbp+0x30]
   140043423:	cmp    DWORD PTR [rax],0xe06d7363
   140043429:	je     0x140043437
   14004342b:	mov    DWORD PTR [rbp+0x20],0x0
   140043432:	mov    eax,DWORD PTR [rbp+0x20]
   140043435:	jmp    0x14004343d
   140043437:	call   0x14002bb60
   14004343c:	nop
   14004343d:	add    rsp,0x20
   140043441:	pop    rbp
   140043442:	ret    
   140043443:	int3   
   140043444:	rex push rbp
   140043446:	sub    rsp,0x20
   14004344a:	mov    rbp,rdx
   14004344d:	cmp    DWORD PTR [rbp+0x20],0x0
   140043451:	jne    0x140043469
   140043453:	mov    r9,QWORD PTR [rbp+0x78]
   140043457:	mov    r8d,DWORD PTR [rbp+0x70]
   14004345b:	mov    rdx,QWORD PTR [rbp+0x68]
   14004345f:	mov    rcx,QWORD PTR [rbp+0x60]
   140043463:	call   0x14002b7ac
   140043468:	nop
   140043469:	add    rsp,0x20
   14004346d:	pop    rbp
   14004346e:	ret    
   14004346f:	int3   
   140043470:	rex push rbp
   140043472:	sub    rsp,0x20
   140043476:	mov    rbp,rdx
   140043479:	mov    rax,QWORD PTR [rcx]
   14004347c:	xor    ecx,ecx
   14004347e:	cmp    DWORD PTR [rax],0xc0000005
   140043484:	sete   cl
   140043487:	mov    eax,ecx
   140043489:	mov    eax,ecx
   14004348b:	add    rsp,0x20
   14004348f:	pop    rbp
   140043490:	ret    
   140043491:	int3   
   140043492:	int3   
   140043493:	int3   
   140043494:	int3   
   140043495:	int3   
   140043496:	int3   
   140043497:	int3   
   140043498:	int3   
   140043499:	int3   
   14004349a:	int3   
   14004349b:	int3   
   14004349c:	int3   
   14004349d:	int3   
   14004349e:	int3   
   14004349f:	int3   
   1400434a0:	rex push rbp
   1400434a2:	mov    rbp,rdx
   1400434a5:	mov    eax,DWORD PTR [rip+0x271f5]        # 0x14006a6a0
   1400434ab:	and    eax,0xfffffffe
   1400434ae:	mov    DWORD PTR [rip+0x271ec],eax        # 0x14006a6a0
   1400434b4:	pop    rbp
   1400434b5:	ret    
   1400434b6:	int3   
   1400434b7:	int3   
   1400434b8:	int3   
   1400434b9:	int3   
   1400434ba:	int3   
   1400434bb:	int3   
   1400434bc:	int3   
   1400434bd:	int3   
   1400434be:	int3   
   1400434bf:	int3   
   1400434c0:	rex push rbp
   1400434c2:	mov    rbp,rdx
   1400434c5:	mov    eax,DWORD PTR [rip+0x27205]        # 0x14006a6d0
   1400434cb:	and    eax,0xfffffffe
   1400434ce:	mov    DWORD PTR [rip+0x271fc],eax        # 0x14006a6d0
   1400434d4:	pop    rbp
   1400434d5:	ret    
   1400434d6:	int3   
   1400434d7:	int3   
   1400434d8:	int3   
   1400434d9:	int3   
   1400434da:	int3   
   1400434db:	int3   
   1400434dc:	int3   
   1400434dd:	int3   
   1400434de:	int3   
   1400434df:	int3   
   1400434e0:	rex push rbp
   1400434e2:	sub    rsp,0x20
   1400434e6:	mov    rbp,rdx
   1400434e9:	mov    eax,DWORD PTR [rbp+0x20]
   1400434ec:	and    eax,0x1
   1400434ef:	test   eax,eax
   1400434f1:	je     0x140043500
   1400434f3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400434f7:	lea    rcx,[rbp+0x58]
   1400434fb:	call   0x14000638c
   140043500:	add    rsp,0x20
   140043504:	pop    rbp
   140043505:	ret    
   140043506:	int3   
   140043507:	int3   
   140043508:	int3   
   140043509:	int3   
   14004350a:	int3   
   14004350b:	int3   
   14004350c:	int3   
   14004350d:	int3   
   14004350e:	int3   
   14004350f:	int3   
   140043510:	rex push rbp
   140043512:	sub    rsp,0x20
   140043516:	mov    rbp,rdx
   140043519:	mov    eax,DWORD PTR [rbp+0x20]
   14004351c:	and    eax,0x2
   14004351f:	test   eax,eax
   140043521:	je     0x140043530
   140043523:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140043527:	lea    rcx,[rbp+0x30]
   14004352b:	call   0x14000638c
   140043530:	add    rsp,0x20
   140043534:	pop    rbp
   140043535:	ret    
   140043536:	int3   
   140043537:	int3   
   140043538:	int3   
   140043539:	int3   
   14004353a:	int3   
   14004353b:	int3   
   14004353c:	int3   
   14004353d:	int3   
   14004353e:	int3   
   14004353f:	int3   
   140043540:	lea    rcx,[rdx+0x58]
   140043547:	jmp    0x14002bf10
   14004354c:	int3   
   14004354d:	int3   
   14004354e:	int3   
   14004354f:	int3   
   140043550:	rex push rbp
   140043552:	sub    rsp,0x20
   140043556:	mov    rbp,rdx
   140043559:	mov    eax,DWORD PTR [rbp+0x40]
   14004355c:	and    eax,0x1
   14004355f:	test   eax,eax
   140043561:	je     0x140043570
   140043563:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140043567:	mov    rcx,QWORD PTR [rbp+0x60]
   14004356b:	call   0x14000638c
   140043570:	add    rsp,0x20
   140043574:	pop    rbp
   140043575:	ret    
   140043576:	int3   
   140043577:	int3   
   140043578:	int3   
   140043579:	int3   
   14004357a:	int3   
   14004357b:	int3   
   14004357c:	int3   
   14004357d:	int3   
   14004357e:	int3   
   14004357f:	int3   
   140043580:	lea    rcx,[rdx+0x68]
   140043587:	jmp    0x14000638c
   14004358c:	int3   
   14004358d:	int3   
   14004358e:	int3   
   14004358f:	int3   
   140043590:	rex push rbp
   140043592:	mov    rbp,rdx
   140043595:	mov    eax,DWORD PTR [rip+0x270f5]        # 0x14006a690
   14004359b:	and    eax,0xfffffffe
   14004359e:	mov    DWORD PTR [rip+0x270ec],eax        # 0x14006a690
   1400435a4:	pop    rbp
   1400435a5:	ret    
   1400435a6:	int3   
   1400435a7:	int3   
   1400435a8:	int3   
   1400435a9:	int3   
   1400435aa:	int3   
   1400435ab:	int3   
   1400435ac:	int3   
   1400435ad:	int3   
   1400435ae:	int3   
   1400435af:	int3   
   1400435b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400435b7:	jmp    0x14001d41c
   1400435bc:	int3   
   1400435bd:	int3   
   1400435be:	int3   
   1400435bf:	int3   
   1400435c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400435c7:	jmp    0x14002cb50
   1400435cc:	int3   
   1400435cd:	int3   
   1400435ce:	int3   
   1400435cf:	int3   
   1400435d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400435d5:	push   rbp
   1400435d6:	sub    rsp,0x20
   1400435da:	mov    rbp,rdx
   1400435dd:	xor    edx,edx
   1400435df:	xor    ecx,ecx
   1400435e1:	call   0x14002b560
   1400435e6:	nop
   1400435e7:	int3   
   1400435e8:	int3   
   1400435e9:	int3   
   1400435ea:	int3   
   1400435eb:	int3   
   1400435ec:	int3   
   1400435ed:	int3   
   1400435ee:	int3   
   1400435ef:	int3   
   1400435f0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400435f7:	jmp    0x14002b150
   1400435fc:	int3   
   1400435fd:	int3   
   1400435fe:	int3   
   1400435ff:	int3   
   140043600:	lea    rcx,[rdx+0x28]
   140043607:	jmp    0x14001d41c
   14004360c:	int3   
   14004360d:	int3   
   14004360e:	int3   
   14004360f:	int3   
   140043610:	mov    QWORD PTR [rsp+0x10],rdx
   140043615:	push   rbp
   140043616:	sub    rsp,0x20
   14004361a:	mov    rbp,rdx
   14004361d:	xor    edx,edx
   14004361f:	xor    ecx,ecx
   140043621:	call   0x14002b560
   140043626:	nop
   140043627:	int3   
   140043628:	int3   
   140043629:	int3   
   14004362a:	int3   
   14004362b:	int3   
   14004362c:	int3   
   14004362d:	int3   
   14004362e:	int3   
   14004362f:	int3   
   140043630:	lea    rcx,[rdx+0x28]
   140043637:	jmp    0x14002cb50
   14004363c:	int3   
   14004363d:	int3   
   14004363e:	int3   
   14004363f:	int3   
   140043640:	mov    QWORD PTR [rsp+0x10],rdx
   140043645:	push   rbp
   140043646:	sub    rsp,0x20
   14004364a:	mov    rbp,rdx
   14004364d:	mov    rcx,QWORD PTR [rbp+0x48]
   140043651:	call   0x14002b150
   140043656:	xor    edx,edx
   140043658:	xor    ecx,ecx
   14004365a:	call   0x14002b560
   14004365f:	nop
   140043660:	lea    rcx,[rdx+0x68]
   140043667:	jmp    0x14000638c
   14004366c:	int3   
   14004366d:	int3   
   14004366e:	int3   
   14004366f:	int3   
   140043670:	lea    rcx,[rdx+0x40]
   140043677:	jmp    0x14000638c
   14004367c:	int3   
   14004367d:	int3   
   14004367e:	int3   
   14004367f:	int3   
   140043680:	mov    rcx,QWORD PTR [rdx+0x40]
   140043687:	jmp    0x14002e910
   14004368c:	int3   
   14004368d:	int3   
   14004368e:	int3   
   14004368f:	int3   
   140043690:	mov    rcx,QWORD PTR [rdx+0x40]
   140043697:	add    rcx,0x40
   14004369b:	jmp    0x1400010c4
   1400436a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400436a7:	jmp    0x14002ea60
   1400436ac:	int3   
   1400436ad:	int3   
   1400436ae:	int3   
   1400436af:	int3   
   1400436b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400436b7:	add    rcx,0x40
   1400436bb:	jmp    0x1400010c4
   1400436c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400436c5:	push   rbp
   1400436c6:	sub    rsp,0x20
   1400436ca:	mov    rbp,rdx
   1400436cd:	mov    rcx,QWORD PTR [rbp+0x50]
   1400436d1:	call   0x14002b150
   1400436d6:	xor    edx,edx
   1400436d8:	xor    ecx,ecx
   1400436da:	call   0x14002b560
   1400436df:	nop
   1400436e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400436e5:	push   rbp
   1400436e6:	sub    rsp,0x20
   1400436ea:	mov    rbp,rdx
   1400436ed:	xor    edx,edx
   1400436ef:	xor    ecx,ecx
   1400436f1:	call   0x14002b560
   1400436f6:	nop
   1400436f7:	int3   
   1400436f8:	int3   
   1400436f9:	int3   
   1400436fa:	int3   
   1400436fb:	int3   
   1400436fc:	int3   
   1400436fd:	int3   
   1400436fe:	int3   
   1400436ff:	int3   
   140043700:	mov    QWORD PTR [rsp+0x10],rdx
   140043705:	push   rbp
   140043706:	sub    rsp,0x20
   14004370a:	mov    rbp,rdx
   14004370d:	xor    edx,edx
   14004370f:	xor    ecx,ecx
   140043711:	call   0x14002b560
   140043716:	nop
   140043717:	int3   
   140043718:	int3   
   140043719:	int3   
   14004371a:	int3   
   14004371b:	int3   
   14004371c:	int3   
   14004371d:	int3   
   14004371e:	int3   
   14004371f:	int3   
   140043720:	mov    QWORD PTR [rsp+0x10],rdx
   140043725:	push   rbx
   140043726:	push   rbp
   140043727:	sub    rsp,0x28
   14004372b:	mov    rbp,rdx
   14004372e:	mov    rbx,QWORD PTR [rbp+0x50]
   140043732:	cmp    QWORD PTR [rbx+0x18],0x10
   140043737:	jb     0x140043741
   140043739:	mov    rcx,QWORD PTR [rbx]
   14004373c:	call   0x14002b150
   140043741:	mov    QWORD PTR [rbx+0x18],0xf
   140043749:	mov    QWORD PTR [rbx+0x10],0x0
   140043751:	mov    BYTE PTR [rbx],0x0
   140043754:	xor    edx,edx
   140043756:	xor    ecx,ecx
   140043758:	call   0x14002b560
   14004375d:	nop
   14004375e:	int3   
   14004375f:	int3   
   140043760:	mov    QWORD PTR [rsp+0x10],rdx
   140043765:	push   rbp
   140043766:	sub    rsp,0x20
   14004376a:	mov    rbp,rdx
   14004376d:	xor    edx,edx
   14004376f:	xor    ecx,ecx
   140043771:	call   0x14002b560
   140043776:	nop
   140043777:	int3   
   140043778:	int3   
   140043779:	int3   
   14004377a:	int3   
   14004377b:	int3   
   14004377c:	int3   
   14004377d:	int3   
   14004377e:	int3   
   14004377f:	int3   
   140043780:	mov    QWORD PTR [rsp+0x10],rdx
   140043785:	push   rbp
   140043786:	sub    rsp,0x20
   14004378a:	mov    rbp,rdx
   14004378d:	xor    edx,edx
   14004378f:	xor    ecx,ecx
   140043791:	call   0x14002b560
   140043796:	nop
   140043797:	int3   
   140043798:	int3   
   140043799:	int3   
   14004379a:	int3   
   14004379b:	int3   
   14004379c:	int3   
   14004379d:	int3   
   14004379e:	int3   
   14004379f:	int3   
   1400437a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400437a5:	push   rbp
   1400437a6:	sub    rsp,0x20
   1400437aa:	mov    rbp,rdx
   1400437ad:	xor    edx,edx
   1400437af:	xor    ecx,ecx
   1400437b1:	call   0x14002b560
   1400437b6:	nop
   1400437b7:	int3   
   1400437b8:	int3   
   1400437b9:	int3   
   1400437ba:	int3   
   1400437bb:	int3   
   1400437bc:	int3   
   1400437bd:	int3   
   1400437be:	int3   
   1400437bf:	int3   
   1400437c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400437c5:	push   rbp
   1400437c6:	sub    rsp,0x20
   1400437ca:	mov    rbp,rdx
   1400437cd:	mov    rcx,QWORD PTR [rbp+0x48]
   1400437d1:	call   0x140030720
   1400437d6:	xor    edx,edx
   1400437d8:	xor    ecx,ecx
   1400437da:	call   0x14002b560
   1400437df:	nop
   1400437e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400437e5:	push   rbp
   1400437e6:	sub    rsp,0x20
   1400437ea:	mov    rbp,rdx
   1400437ed:	mov    rcx,QWORD PTR [rbp+0x20]
   1400437f1:	call   0x14002b150
   1400437f6:	xor    edx,edx
   1400437f8:	xor    ecx,ecx
   1400437fa:	call   0x14002b560
   1400437ff:	nop
   140043800:	mov    QWORD PTR [rsp+0x10],rdx
   140043805:	push   rbp
   140043806:	sub    rsp,0x30
   14004380a:	mov    rbp,rdx
   14004380d:	mov    rcx,QWORD PTR [rbp+0x58]
   140043811:	call   0x14002b150
   140043816:	xor    edx,edx
   140043818:	xor    ecx,ecx
   14004381a:	call   0x14002b560
   14004381f:	nop
   140043820:	mov    QWORD PTR [rsp+0x10],rdx
   140043825:	push   rbp
   140043826:	sub    rsp,0x20
   14004382a:	mov    rbp,rdx
   14004382d:	xor    edx,edx
   14004382f:	xor    ecx,ecx
   140043831:	call   0x14002b560
   140043836:	nop
   140043837:	int3   
   140043838:	int3   
   140043839:	int3   
   14004383a:	int3   
   14004383b:	int3   
   14004383c:	int3   
   14004383d:	int3   
   14004383e:	int3   
   14004383f:	int3   
   140043840:	rex push rbp
   140043842:	sub    rsp,0x20
   140043846:	mov    rbp,rdx
   140043849:	mov    eax,DWORD PTR [rbp+0x20]
   14004384c:	and    eax,0x1
   14004384f:	test   eax,eax
   140043851:	je     0x140043860
   140043853:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140043857:	lea    rcx,[rbp+0x68]
   14004385b:	call   0x14000638c
   140043860:	add    rsp,0x20
   140043864:	pop    rbp
   140043865:	ret    
   140043866:	int3   
   140043867:	int3   
   140043868:	int3   
   140043869:	int3   
   14004386a:	int3   
   14004386b:	int3   
   14004386c:	int3   
   14004386d:	int3   
   14004386e:	int3   
   14004386f:	int3   
   140043870:	rex push rbp
   140043872:	sub    rsp,0x20
   140043876:	mov    rbp,rdx
   140043879:	mov    eax,DWORD PTR [rbp+0x20]
   14004387c:	and    eax,0x2
   14004387f:	test   eax,eax
   140043881:	je     0x140043890
   140043883:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140043887:	lea    rcx,[rbp+0x40]
   14004388b:	call   0x14000638c
   140043890:	add    rsp,0x20
   140043894:	pop    rbp
   140043895:	ret    
   140043896:	int3   
   140043897:	int3   
   140043898:	int3   
   140043899:	int3   
   14004389a:	int3   
   14004389b:	int3   
   14004389c:	int3   
   14004389d:	int3   
   14004389e:	int3   
   14004389f:	int3   
   1400438a0:	mov    rcx,QWORD PTR [rdx+0x38]
   1400438a7:	jmp    0x14000638c
   1400438ac:	int3   
   1400438ad:	int3   
   1400438ae:	int3   
   1400438af:	int3   
   1400438b0:	lea    rcx,[rdx+0x40]
   1400438b7:	jmp    0x14000638c
   1400438bc:	int3   
   1400438bd:	int3   
   1400438be:	int3   
   1400438bf:	int3   
   1400438c0:	lea    rcx,[rdx+0x40]
   1400438c7:	jmp    0x14000638c
   1400438cc:	int3   
   1400438cd:	int3   
   1400438ce:	int3   
   1400438cf:	int3   
   1400438d0:	lea    rcx,[rdx+0x40]
   1400438d7:	jmp    0x140041d10
   1400438dc:	int3   
   1400438dd:	int3   
   1400438de:	int3   
   1400438df:	int3   
   1400438e0:	lea    rcx,[rdx+0x50]
   1400438e7:	jmp    0x14000638c
   1400438ec:	int3   
   1400438ed:	int3   
   1400438ee:	int3   
   1400438ef:	int3   
   1400438f0:	lea    rcx,[rdx+0x20]
   1400438f7:	jmp    0x140041d10
   1400438fc:	int3   
   1400438fd:	int3   
   1400438fe:	int3   
   1400438ff:	int3   
   140043900:	lea    rcx,[rdx+0x50]
   140043907:	jmp    0x14000638c
   14004390c:	int3   
   14004390d:	int3   
   14004390e:	int3   
   14004390f:	int3   
   140043910:	lea    rcx,[rdx+0x20]
   140043917:	jmp    0x140041d10
   14004391c:	int3   
   14004391d:	int3   
   14004391e:	int3   
   14004391f:	int3   
   140043920:	lea    rcx,[rdx+0x38]
   140043927:	jmp    0x14000638c
   14004392c:	int3   
   14004392d:	int3   
   14004392e:	int3   
   14004392f:	int3   
   140043930:	lea    rcx,[rdx+0x70]
   140043937:	jmp    0x14000638c
   14004393c:	int3   
   14004393d:	int3   
   14004393e:	int3   
   14004393f:	int3   
   140043940:	lea    rcx,[rdx+0x70]
   140043947:	jmp    0x14000638c
   14004394c:	int3   
   14004394d:	int3   
   14004394e:	int3   
   14004394f:	int3   
   140043950:	lea    rcx,[rdx+0x70]
   140043957:	jmp    0x14000638c
   14004395c:	int3   
   14004395d:	int3   
   14004395e:	int3   
   14004395f:	int3   
   140043960:	lea    rcx,[rdx+0x70]
   140043967:	jmp    0x14000638c
   14004396c:	int3   
   14004396d:	int3   
   14004396e:	int3   
   14004396f:	int3   
   140043970:	lea    rcx,[rdx+0x70]
   140043977:	jmp    0x14000638c
   14004397c:	int3   
   14004397d:	int3   
   14004397e:	int3   
   14004397f:	int3   
   140043980:	lea    rcx,[rdx+0x70]
   140043987:	jmp    0x14000638c
   14004398c:	int3   
   14004398d:	int3   
   14004398e:	int3   
   14004398f:	int3   
   140043990:	lea    rcx,[rdx+0x70]
   140043997:	jmp    0x14000638c
   14004399c:	int3   
   14004399d:	int3   
   14004399e:	int3   
   14004399f:	int3   
   1400439a0:	lea    rcx,[rdx+0x68]
   1400439a7:	jmp    0x14000638c
   1400439ac:	int3   
   1400439ad:	int3   
   1400439ae:	int3   
   1400439af:	int3   
   1400439b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400439b5:	push   rbp
   1400439b6:	sub    rsp,0x30
   1400439ba:	mov    rbp,rdx
   1400439bd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400439c1:	call   0x14002b150
   1400439c6:	xor    edx,edx
   1400439c8:	xor    ecx,ecx
   1400439ca:	call   0x14002b560
   1400439cf:	nop
   1400439d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400439d5:	push   rbp
   1400439d6:	sub    rsp,0x30
   1400439da:	mov    rbp,rdx
   1400439dd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400439e1:	call   0x14002b150
   1400439e6:	xor    edx,edx
   1400439e8:	xor    ecx,ecx
   1400439ea:	call   0x14002b560
   1400439ef:	nop
   1400439f0:	lea    rcx,[rdx+0x60]
   1400439f7:	jmp    0x14000638c
   1400439fc:	int3   
   1400439fd:	int3   
   1400439fe:	int3   
   1400439ff:	int3   
   140043a00:	mov    QWORD PTR [rsp+0x10],rdx
   140043a05:	push   rbp
   140043a06:	sub    rsp,0x30
   140043a0a:	mov    rbp,rdx
   140043a0d:	mov    rcx,QWORD PTR [rbp+0x50]
   140043a11:	call   0x140010cbc
   140043a16:	xor    edx,edx
   140043a18:	xor    ecx,ecx
   140043a1a:	call   0x14002b560
   140043a1f:	nop
   140043a20:	mov    QWORD PTR [rsp+0x10],rdx
   140043a25:	push   rbp
   140043a26:	sub    rsp,0x30
   140043a2a:	mov    rbp,rdx
   140043a2d:	mov    rcx,QWORD PTR [rbp+0x30]
   140043a31:	call   0x14002b150
   140043a36:	xor    edx,edx
   140043a38:	xor    ecx,ecx
   140043a3a:	call   0x14002b560
   140043a3f:	nop
   140043a40:	mov    QWORD PTR [rsp+0x10],rdx
   140043a45:	push   rbp
   140043a46:	sub    rsp,0x30
   140043a4a:	mov    rbp,rdx
   140043a4d:	xor    edx,edx
   140043a4f:	xor    ecx,ecx
   140043a51:	call   0x14002b560
   140043a56:	nop
   140043a57:	int3   
   140043a58:	int3   
   140043a59:	int3   
   140043a5a:	int3   
   140043a5b:	int3   
   140043a5c:	int3   
   140043a5d:	int3   
   140043a5e:	int3   
   140043a5f:	int3   
   140043a60:	mov    rcx,QWORD PTR [rdx+0x40]
   140043a67:	jmp    0x140031bd0
   140043a6c:	int3   
   140043a6d:	int3   
   140043a6e:	int3   
   140043a6f:	int3   
   140043a70:	lea    rcx,[rdx+0x48]
   140043a77:	jmp    0x14000638c
   140043a7c:	int3   
   140043a7d:	int3   
   140043a7e:	int3   
   140043a7f:	int3   
   140043a80:	lea    rcx,[rdx+0x28]
   140043a87:	jmp    0x14001d41c
   140043a8c:	int3   
   140043a8d:	int3   
   140043a8e:	int3   
   140043a8f:	int3   
   140043a90:	rex push rbp
   140043a92:	sub    rsp,0x20
   140043a96:	mov    rbp,rdx
   140043a99:	mov    eax,DWORD PTR [rbp+0x30]
   140043a9c:	and    eax,0x1
   140043a9f:	test   eax,eax
   140043aa1:	je     0x140043ab0
   140043aa3:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140043aa7:	mov    rcx,QWORD PTR [rbp+0x38]
   140043aab:	call   0x14000638c
   140043ab0:	add    rsp,0x20
   140043ab4:	pop    rbp
   140043ab5:	ret    
   140043ab6:	int3   
   140043ab7:	int3   
   140043ab8:	int3   
   140043ab9:	int3   
   140043aba:	int3   
   140043abb:	int3   
   140043abc:	int3   
   140043abd:	int3   
   140043abe:	int3   
   140043abf:	int3   
   140043ac0:	lea    rcx,[rdx+0x98]
   140043ac7:	jmp    0x14000638c
   140043acc:	int3   
   140043acd:	int3   
   140043ace:	int3   
   140043acf:	int3   
   140043ad0:	lea    rcx,[rdx+0x70]
   140043ad7:	jmp    0x14000638c
   140043adc:	int3   
   140043add:	int3   
   140043ade:	int3   
   140043adf:	int3   
   140043ae0:	lea    rcx,[rdx+0x48]
   140043ae7:	jmp    0x14000638c
   140043aec:	int3   
   140043aed:	int3   
   140043aee:	int3   
   140043aef:	int3   
   140043af0:	lea    rcx,[rdx+0x48]
   140043af7:	jmp    0x14000638c
   140043afc:	int3   
   140043afd:	int3   
   140043afe:	int3   
   140043aff:	int3   
   140043b00:	mov    QWORD PTR [rsp+0x10],rdx
   140043b05:	push   rbp
   140043b06:	sub    rsp,0x30
   140043b0a:	mov    rbp,rdx
   140043b0d:	mov    rcx,QWORD PTR [rbp+0x80]
   140043b14:	call   0x14002b150
   140043b19:	xor    edx,edx
   140043b1b:	xor    ecx,ecx
   140043b1d:	call   0x14002b560
   140043b22:	nop
   140043b23:	int3   
   140043b24:	int3   
   140043b25:	int3   
   140043b26:	int3   
   140043b27:	int3   
   140043b28:	int3   
   140043b29:	int3   
   140043b2a:	int3   
   140043b2b:	int3   
   140043b2c:	int3   
   140043b2d:	int3   
   140043b2e:	int3   
   140043b2f:	int3   
   140043b30:	mov    QWORD PTR [rsp+0x10],rdx
   140043b35:	push   rbp
   140043b36:	sub    rsp,0x30
   140043b3a:	mov    rbp,rdx
   140043b3d:	xor    edx,edx
   140043b3f:	xor    ecx,ecx
   140043b41:	call   0x14002b560
   140043b46:	nop
   140043b47:	int3   
   140043b48:	int3   
   140043b49:	int3   
   140043b4a:	int3   
   140043b4b:	int3   
   140043b4c:	int3   
   140043b4d:	int3   
   140043b4e:	int3   
   140043b4f:	int3   
   140043b50:	lea    rcx,[rdx+0x28]
   140043b57:	jmp    0x140043290
   140043b5c:	int3   
   140043b5d:	int3   
   140043b5e:	int3   
   140043b5f:	int3   
   140043b60:	rex push rbp
   140043b62:	mov    rbp,rdx
   140043b65:	mov    eax,DWORD PTR [rip+0x26bc5]        # 0x14006a730
   140043b6b:	and    eax,0xfffffffe
   140043b6e:	mov    DWORD PTR [rip+0x26bbc],eax        # 0x14006a730
   140043b74:	pop    rbp
   140043b75:	ret    
   140043b76:	int3   
   140043b77:	int3   
   140043b78:	int3   
   140043b79:	int3   
   140043b7a:	int3   
   140043b7b:	int3   
   140043b7c:	int3   
   140043b7d:	int3   
   140043b7e:	int3   
   140043b7f:	int3   
   140043b80:	rex push rbp
   140043b82:	sub    rsp,0x20
   140043b86:	mov    rbp,rdx
   140043b89:	mov    eax,DWORD PTR [rbp+0x58]
   140043b8c:	and    eax,0x1
   140043b8f:	test   eax,eax
   140043b91:	je     0x140043ba0
   140043b93:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140043b97:	mov    rcx,QWORD PTR [rbp+0x50]
   140043b9b:	call   0x14000638c
   140043ba0:	add    rsp,0x20
   140043ba4:	pop    rbp
   140043ba5:	ret    
   140043ba6:	int3   
   140043ba7:	int3   
   140043ba8:	int3   
   140043ba9:	int3   
   140043baa:	int3   
   140043bab:	int3   
   140043bac:	int3   
   140043bad:	int3   
   140043bae:	int3   
   140043baf:	int3   
   140043bb0:	lea    rcx,[rdx+0x68]
   140043bb7:	jmp    0x14000638c
   140043bbc:	int3   
   140043bbd:	int3   
   140043bbe:	int3   
   140043bbf:	int3   
   140043bc0:	lea    rcx,[rdx+0x40]
   140043bc7:	jmp    0x14000638c
   140043bcc:	int3   
   140043bcd:	int3   
   140043bce:	int3   
   140043bcf:	int3   
   140043bd0:	lea    rcx,[rdx+0x68]
   140043bd7:	jmp    0x14000638c
   140043bdc:	int3   
   140043bdd:	int3   
   140043bde:	int3   
   140043bdf:	int3   
   140043be0:	mov    rcx,QWORD PTR [rdx+0x40]
   140043be7:	jmp    0x14002d920
   140043bec:	int3   
   140043bed:	int3   
   140043bee:	int3   
   140043bef:	int3   
   140043bf0:	lea    rcx,[rdx+0x110]
   140043bf7:	jmp    0x14000638c
   140043bfc:	int3   
   140043bfd:	int3   
   140043bfe:	int3   
   140043bff:	int3   
   140043c00:	lea    rcx,[rdx+0xe8]
   140043c07:	jmp    0x14000638c
   140043c0c:	int3   
   140043c0d:	int3   
   140043c0e:	int3   
   140043c0f:	int3   
   140043c10:	lea    rcx,[rdx+0xc0]
   140043c17:	jmp    0x14000638c
   140043c1c:	int3   
   140043c1d:	int3   
   140043c1e:	int3   
   140043c1f:	int3   
   140043c20:	lea    rcx,[rdx+0x98]
   140043c27:	jmp    0x14000638c
   140043c2c:	int3   
   140043c2d:	int3   
   140043c2e:	int3   
   140043c2f:	int3   
   140043c30:	lea    rcx,[rdx+0x98]
   140043c37:	jmp    0x14000638c
   140043c3c:	int3   
   140043c3d:	int3   
   140043c3e:	int3   
   140043c3f:	int3   
   140043c40:	lea    rcx,[rdx+0x98]
   140043c47:	jmp    0x14000638c
   140043c4c:	int3   
   140043c4d:	int3   
   140043c4e:	int3   
   140043c4f:	int3   
   140043c50:	lea    rcx,[rdx+0x98]
   140043c57:	jmp    0x14000638c
   140043c5c:	int3   
   140043c5d:	int3   
   140043c5e:	int3   
   140043c5f:	int3   
   140043c60:	lea    rcx,[rdx+0x98]
   140043c67:	jmp    0x14000638c
   140043c6c:	int3   
   140043c6d:	int3   
   140043c6e:	int3   
   140043c6f:	int3   
   140043c70:	lea    rcx,[rdx+0x98]
   140043c77:	jmp    0x14000638c
   140043c7c:	int3   
   140043c7d:	int3   
   140043c7e:	int3   
   140043c7f:	int3   
   140043c80:	lea    rcx,[rdx+0x40]
   140043c87:	jmp    0x14000638c
   140043c8c:	int3   
   140043c8d:	int3   
   140043c8e:	int3   
   140043c8f:	int3   
   140043c90:	lea    rcx,[rdx+0x68]
   140043c97:	jmp    0x14000638c
   140043c9c:	int3   
   140043c9d:	int3   
   140043c9e:	int3   
   140043c9f:	int3   
   140043ca0:	lea    rcx,[rdx+0x68]
   140043ca7:	jmp    0x14000638c
   140043cac:	int3   
   140043cad:	int3   
   140043cae:	int3   
   140043caf:	int3   
   140043cb0:	lea    rcx,[rdx+0xa0]
   140043cb7:	jmp    0x14000638c
   140043cbc:	int3   
   140043cbd:	int3   
   140043cbe:	int3   
   140043cbf:	int3   
   140043cc0:	lea    rcx,[rdx+0x50]
   140043cc7:	jmp    0x14000638c
   140043ccc:	int3   
   140043ccd:	int3   
   140043cce:	int3   
   140043ccf:	int3   
   140043cd0:	lea    rcx,[rdx+0x78]
   140043cd7:	jmp    0x14000638c
   140043cdc:	int3   
   140043cdd:	int3   
   140043cde:	int3   
   140043cdf:	int3   
   140043ce0:	lea    rcx,[rdx+0x50]
   140043ce7:	jmp    0x14000638c
   140043cec:	int3   
   140043ced:	int3   
   140043cee:	int3   
   140043cef:	int3   
   140043cf0:	lea    rcx,[rdx+0x78]
   140043cf7:	jmp    0x14000638c
   140043cfc:	int3   
   140043cfd:	int3   
   140043cfe:	int3   
   140043cff:	int3   
   140043d00:	lea    rcx,[rdx+0x78]
   140043d07:	jmp    0x14000638c
   140043d0c:	int3   
   140043d0d:	int3   
   140043d0e:	int3   
   140043d0f:	int3   
   140043d10:	lea    rcx,[rdx+0x48]
   140043d17:	jmp    0x14000638c
   140043d1c:	int3   
   140043d1d:	int3   
   140043d1e:	int3   
   140043d1f:	int3   
   140043d20:	lea    rcx,[rdx+0x70]
   140043d27:	jmp    0x14000638c
   140043d2c:	int3   
   140043d2d:	int3   
   140043d2e:	int3   
   140043d2f:	int3   
   140043d30:	lea    rcx,[rdx+0x98]
   140043d37:	jmp    0x14000638c
   140043d3c:	int3   
   140043d3d:	int3   
   140043d3e:	int3   
   140043d3f:	int3   
   140043d40:	lea    rcx,[rdx+0x98]
   140043d47:	jmp    0x14000638c
   140043d4c:	int3   
   140043d4d:	int3   
   140043d4e:	int3   
   140043d4f:	int3   
   140043d50:	lea    rcx,[rdx+0x98]
   140043d57:	jmp    0x14000638c
   140043d5c:	int3   
   140043d5d:	int3   
   140043d5e:	int3   
   140043d5f:	int3   
   140043d60:	lea    rcx,[rdx+0x98]
   140043d67:	jmp    0x14000638c
   140043d6c:	int3   
   140043d6d:	int3   
   140043d6e:	int3   
   140043d6f:	int3   
   140043d70:	lea    rcx,[rdx+0x98]
   140043d77:	jmp    0x14000638c
   140043d7c:	int3   
   140043d7d:	int3   
   140043d7e:	int3   
   140043d7f:	int3   
   140043d80:	lea    rcx,[rdx+0x48]
   140043d87:	jmp    0x14000638c
   140043d8c:	int3   
   140043d8d:	int3   
   140043d8e:	int3   
   140043d8f:	int3   
   140043d90:	lea    rcx,[rdx+0x98]
   140043d97:	jmp    0x14000638c
   140043d9c:	int3   
   140043d9d:	int3   
   140043d9e:	int3   
   140043d9f:	int3   
   140043da0:	lea    rcx,[rdx+0x98]
   140043da7:	jmp    0x14000638c
   140043dac:	int3   
   140043dad:	int3   
   140043dae:	int3   
   140043daf:	int3   
   140043db0:	rex push rbp
   140043db2:	sub    rsp,0x20
   140043db6:	mov    rbp,rdx
   140043db9:	mov    rdx,QWORD PTR [rbp+0x58]
   140043dbd:	mov    rcx,QWORD PTR [rbp+0x28]
   140043dc1:	call   0x14001195c
   140043dc6:	add    rsp,0x20
   140043dca:	pop    rbp
   140043dcb:	ret    
   140043dcc:	int3   
   140043dcd:	int3   
   140043dce:	int3   
   140043dcf:	int3   
   140043dd0:	mov    QWORD PTR [rsp+0x10],rdx
   140043dd5:	push   rbp
   140043dd6:	sub    rsp,0x20
   140043dda:	mov    rbp,rdx
   140043ddd:	mov    rcx,QWORD PTR [rbp+0x50]
   140043de1:	call   0x14002b150
   140043de6:	xor    edx,edx
   140043de8:	xor    ecx,ecx
   140043dea:	call   0x14002b560
   140043def:	nop
   140043df0:	lea    rcx,[rdx+0x20]
   140043df7:	jmp    0x14002cb50
   140043dfc:	int3   
   140043dfd:	int3   
   140043dfe:	int3   
   140043dff:	int3   
   140043e00:	lea    rcx,[rdx+0x88]
   140043e07:	jmp    0x14002ea60
   140043e0c:	int3   
   140043e0d:	int3   
   140043e0e:	int3   
   140043e0f:	int3   
   140043e10:	rex push rbp
   140043e12:	sub    rsp,0x20
   140043e16:	mov    rbp,rdx
   140043e19:	mov    rdx,QWORD PTR [rbp+0x50]
   140043e1d:	mov    rcx,QWORD PTR [rbp+0x28]
   140043e21:	call   0x14001195c
   140043e26:	add    rsp,0x20
   140043e2a:	pop    rbp
   140043e2b:	ret    
   140043e2c:	int3   
   140043e2d:	int3   
   140043e2e:	int3   
   140043e2f:	int3   
   140043e30:	lea    rcx,[rdx+0x50]
   140043e37:	jmp    0x14000638c
   140043e3c:	int3   
   140043e3d:	int3   
   140043e3e:	int3   
   140043e3f:	int3   
   140043e40:	lea    rcx,[rdx+0x78]
   140043e47:	jmp    0x14000638c
   140043e4c:	int3   
   140043e4d:	int3   
   140043e4e:	int3   
   140043e4f:	int3   
   140043e50:	lea    rcx,[rdx+0x78]
   140043e57:	jmp    0x14000638c
   140043e5c:	int3   
   140043e5d:	int3   
   140043e5e:	int3   
   140043e5f:	int3   
   140043e60:	lea    rcx,[rdx+0x90]
   140043e67:	jmp    0x14000638c
   140043e6c:	int3   
   140043e6d:	int3   
   140043e6e:	int3   
   140043e6f:	int3   
   140043e70:	lea    rcx,[rdx+0x68]
   140043e77:	jmp    0x140041d10
   140043e7c:	int3   
   140043e7d:	int3   
   140043e7e:	int3   
   140043e7f:	int3   
   140043e80:	lea    rcx,[rdx+0x48]
   140043e87:	jmp    0x14000638c
   140043e8c:	int3   
   140043e8d:	int3   
   140043e8e:	int3   
   140043e8f:	int3   
   140043e90:	lea    rcx,[rdx+0x160]
   140043e97:	jmp    0x14000638c
   140043e9c:	int3   
   140043e9d:	int3   
   140043e9e:	int3   
   140043e9f:	int3   
   140043ea0:	lea    rcx,[rdx+0x98]
   140043ea7:	jmp    0x14000638c
   140043eac:	int3   
   140043ead:	int3   
   140043eae:	int3   
   140043eaf:	int3   
   140043eb0:	lea    rcx,[rdx+0xe8]
   140043eb7:	jmp    0x14000638c
   140043ebc:	int3   
   140043ebd:	int3   
   140043ebe:	int3   
   140043ebf:	int3   
   140043ec0:	lea    rcx,[rdx+0x138]
   140043ec7:	jmp    0x14000638c
   140043ecc:	int3   
   140043ecd:	int3   
   140043ece:	int3   
   140043ecf:	int3   
   140043ed0:	lea    rcx,[rdx+0xc0]
   140043ed7:	jmp    0x14000638c
   140043edc:	int3   
   140043edd:	int3   
   140043ede:	int3   
   140043edf:	int3   
   140043ee0:	lea    rcx,[rdx+0x110]
   140043ee7:	jmp    0x14000638c
   140043eec:	int3   
   140043eed:	int3   
   140043eee:	int3   
   140043eef:	int3   
   140043ef0:	lea    rcx,[rdx+0x70]
   140043ef7:	jmp    0x14000638c
   140043efc:	int3   
   140043efd:	int3   
   140043efe:	int3   
   140043eff:	int3   
   140043f00:	lea    rcx,[rdx+0x48]
   140043f07:	jmp    0x14000638c
   140043f0c:	int3   
   140043f0d:	int3   
   140043f0e:	int3   
   140043f0f:	int3   
   140043f10:	lea    rcx,[rdx+0x28]
   140043f17:	jmp    0x14000638c
   140043f1c:	int3   
   140043f1d:	int3   
   140043f1e:	int3   
   140043f1f:	int3   
   140043f20:	mov    QWORD PTR [rsp+0x10],rdx
   140043f25:	push   rbx
   140043f26:	push   rbp
   140043f27:	sub    rsp,0x28
   140043f2b:	mov    rbp,rdx
   140043f2e:	mov    rbx,QWORD PTR [rbp+0x48]
   140043f32:	test   rbx,rbx
   140043f35:	je     0x140043f47
   140043f37:	mov    rcx,rbx
   140043f3a:	call   0x140034390
   140043f3f:	mov    rcx,rbx
   140043f42:	call   0x14002b150
   140043f47:	xor    edx,edx
   140043f49:	xor    ecx,ecx
   140043f4b:	call   0x14002b560
   140043f50:	nop
   140043f51:	int3   
   140043f52:	int3   
   140043f53:	int3   
   140043f54:	int3   
   140043f55:	int3   
   140043f56:	int3   
   140043f57:	int3   
   140043f58:	int3   
   140043f59:	int3   
   140043f5a:	int3   
   140043f5b:	int3   
   140043f5c:	int3   
   140043f5d:	int3   
   140043f5e:	int3   
   140043f5f:	int3   
   140043f60:	rex push rbp
   140043f62:	sub    rsp,0x20
   140043f66:	mov    rbp,rdx
   140043f69:	mov    rdx,QWORD PTR [rbp+0x70]
   140043f6d:	mov    rcx,QWORD PTR [rbp+0x68]
   140043f71:	call   0x14001195c
   140043f76:	add    rsp,0x20
   140043f7a:	pop    rbp
   140043f7b:	ret    
   140043f7c:	int3   
   140043f7d:	int3   
   140043f7e:	int3   
   140043f7f:	int3   
   140043f80:	mov    QWORD PTR [rsp+0x10],rdx
   140043f85:	push   rbx
   140043f86:	push   rbp
   140043f87:	push   rdi
   140043f88:	sub    rsp,0x20
   140043f8c:	mov    rbp,rdx
   140043f8f:	mov    rbx,QWORD PTR [rbp+0x60]
   140043f93:	mov    rdi,QWORD PTR [rbp+0x70]
   140043f97:	cmp    rbx,rdi
   140043f9a:	je     0x140043fb2
   140043f9c:	nop    DWORD PTR [rax+0x0]
   140043fa0:	lea    rcx,[rbx+0x10]
   140043fa4:	call   0x140020e68
   140043fa9:	add    rbx,0x70
   140043fad:	cmp    rbx,rdi
   140043fb0:	jne    0x140043fa0
   140043fb2:	xor    edx,edx
   140043fb4:	xor    ecx,ecx
   140043fb6:	call   0x14002b560
   140043fbb:	nop
   140043fbc:	int3   
   140043fbd:	int3   
   140043fbe:	int3   
   140043fbf:	int3   
   140043fc0:	lea    rcx,[rdx+0x30]
   140043fc7:	jmp    0x140031bd0
   140043fcc:	int3   
   140043fcd:	int3   
   140043fce:	int3   
   140043fcf:	int3   
   140043fd0:	lea    rcx,[rdx+0x90]
   140043fd7:	jmp    0x14000638c
   140043fdc:	int3   
   140043fdd:	int3   
   140043fde:	int3   
   140043fdf:	int3   
   140043fe0:	lea    rcx,[rdx+0x68]
   140043fe7:	jmp    0x140041d10
   140043fec:	int3   
   140043fed:	int3   
   140043fee:	int3   
   140043fef:	int3   
   140043ff0:	lea    rcx,[rdx+0x68]
   140043ff7:	jmp    0x14000638c
   140043ffc:	int3   
   140043ffd:	int3   
   140043ffe:	int3   
   140043fff:	int3   
   140044000:	lea    rcx,[rdx+0x130]
   140044007:	jmp    0x14000638c
   14004400c:	int3   
   14004400d:	int3   
   14004400e:	int3   
   14004400f:	int3   
   140044010:	lea    rcx,[rdx+0xe0]
   140044017:	jmp    0x14000638c
   14004401c:	int3   
   14004401d:	int3   
   14004401e:	int3   
   14004401f:	int3   
   140044020:	lea    rcx,[rdx+0x108]
   140044027:	jmp    0x14000638c
   14004402c:	int3   
   14004402d:	int3   
   14004402e:	int3   
   14004402f:	int3   
   140044030:	lea    rcx,[rdx+0x90]
   140044037:	jmp    0x14000638c
   14004403c:	int3   
   14004403d:	int3   
   14004403e:	int3   
   14004403f:	int3   
   140044040:	lea    rcx,[rdx+0x1a8]
   140044047:	jmp    0x14000638c
   14004404c:	int3   
   14004404d:	int3   
   14004404e:	int3   
   14004404f:	int3   
   140044050:	lea    rcx,[rdx+0x158]
   140044057:	jmp    0x14000638c
   14004405c:	int3   
   14004405d:	int3   
   14004405e:	int3   
   14004405f:	int3   
   140044060:	lea    rcx,[rdx+0xb8]
   140044067:	jmp    0x14000638c
   14004406c:	int3   
   14004406d:	int3   
   14004406e:	int3   
   14004406f:	int3   
   140044070:	lea    rcx,[rdx+0x180]
   140044077:	jmp    0x14000638c
   14004407c:	int3   
   14004407d:	int3   
   14004407e:	int3   
   14004407f:	int3   
   140044080:	lea    rcx,[rdx+0x68]
   140044087:	jmp    0x14000638c
   14004408c:	int3   
   14004408d:	int3   
   14004408e:	int3   
   14004408f:	int3   
   140044090:	lea    rcx,[rdx+0x30]
   140044097:	jmp    0x1400347d0
   14004409c:	int3   
   14004409d:	int3   
   14004409e:	int3   
   14004409f:	int3   
   1400440a0:	lea    rcx,[rdx+0x30]
   1400440a7:	jmp    0x1400308c0
   1400440ac:	int3   
   1400440ad:	int3   
   1400440ae:	int3   
   1400440af:	int3   
   1400440b0:	lea    rcx,[rdx+0x100]
   1400440b7:	jmp    0x14000638c
   1400440bc:	int3   
   1400440bd:	int3   
   1400440be:	int3   
   1400440bf:	int3   
   1400440c0:	lea    rcx,[rdx+0x60]
   1400440c7:	jmp    0x1400347d0
   1400440cc:	int3   
   1400440cd:	int3   
   1400440ce:	int3   
   1400440cf:	int3   
   1400440d0:	lea    rcx,[rdx+0xd8]
   1400440d7:	jmp    0x14000638c
   1400440dc:	int3   
   1400440dd:	int3   
   1400440de:	int3   
   1400440df:	int3   
   1400440e0:	lea    rcx,[rdx+0x70]
   1400440e7:	jmp    0x1400347d0
   1400440ec:	int3   
   1400440ed:	int3   
   1400440ee:	int3   
   1400440ef:	int3   
   1400440f0:	lea    rcx,[rdx+0x1d8]
   1400440f7:	jmp    0x14000638c
   1400440fc:	int3   
   1400440fd:	int3   
   1400440fe:	int3   
   1400440ff:	int3   
   140044100:	lea    rcx,[rdx+0x188]
   140044107:	jmp    0x14000638c
   14004410c:	int3   
   14004410d:	int3   
   14004410e:	int3   
   14004410f:	int3   
   140044110:	lea    rcx,[rdx+0x70]
   140044117:	jmp    0x1400347d0
   14004411c:	int3   
   14004411d:	int3   
   14004411e:	int3   
   14004411f:	int3   
   140044120:	lea    rcx,[rdx+0xe8]
   140044127:	jmp    0x14000638c
   14004412c:	int3   
   14004412d:	int3   
   14004412e:	int3   
   14004412f:	int3   
   140044130:	lea    rcx,[rdx+0x1b0]
   140044137:	jmp    0x14000638c
   14004413c:	int3   
   14004413d:	int3   
   14004413e:	int3   
   14004413f:	int3   
   140044140:	lea    rcx,[rdx+0x160]
   140044147:	jmp    0x14000638c
   14004414c:	int3   
   14004414d:	int3   
   14004414e:	int3   
   14004414f:	int3   
   140044150:	lea    rcx,[rdx+0x110]
   140044157:	jmp    0x14000638c
   14004415c:	int3   
   14004415d:	int3   
   14004415e:	int3   
   14004415f:	int3   
   140044160:	lea    rcx,[rdx+0x138]
   140044167:	jmp    0x14000638c
   14004416c:	int3   
   14004416d:	int3   
   14004416e:	int3   
   14004416f:	int3   
   140044170:	lea    rcx,[rdx+0xd0]
   140044177:	jmp    0x14000638c
   14004417c:	int3   
   14004417d:	int3   
   14004417e:	int3   
   14004417f:	int3   
   140044180:	lea    rcx,[rdx+0x30]
   140044187:	jmp    0x1400347d0
   14004418c:	int3   
   14004418d:	int3   
   14004418e:	int3   
   14004418f:	int3   
   140044190:	rex push rbp
   140044192:	sub    rsp,0x20
   140044196:	mov    rbp,rdx
   140044199:	mov    rdx,QWORD PTR [rbp+0x58]
   14004419d:	mov    rcx,QWORD PTR [rbp+0x28]
   1400441a1:	call   0x14001195c
   1400441a6:	add    rsp,0x20
   1400441aa:	pop    rbp
   1400441ab:	ret    
   1400441ac:	int3   
   1400441ad:	int3   
   1400441ae:	int3   
   1400441af:	int3   
   1400441b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400441b5:	push   rbp
   1400441b6:	sub    rsp,0x20
   1400441ba:	mov    rbp,rdx
   1400441bd:	mov    rcx,QWORD PTR [rbp+0x50]
   1400441c1:	call   0x14002b150
   1400441c6:	xor    edx,edx
   1400441c8:	xor    ecx,ecx
   1400441ca:	call   0x14002b560
   1400441cf:	nop
   1400441d0:	lea    rcx,[rdx+0xd8]
   1400441d7:	jmp    0x14000638c
   1400441dc:	int3   
   1400441dd:	int3   
   1400441de:	int3   
   1400441df:	int3   
   1400441e0:	lea    rcx,[rdx+0x60]
   1400441e7:	jmp    0x14000638c
   1400441ec:	int3   
   1400441ed:	int3   
   1400441ee:	int3   
   1400441ef:	int3   
   1400441f0:	lea    rcx,[rdx+0xb0]
   1400441f7:	jmp    0x14000638c
   1400441fc:	int3   
   1400441fd:	int3   
   1400441fe:	int3   
   1400441ff:	int3   
   140044200:	lea    rcx,[rdx+0x88]
   140044207:	jmp    0x14000638c
   14004420c:	int3   
   14004420d:	int3   
   14004420e:	int3   
   14004420f:	int3   
   140044210:	mov    QWORD PTR [rsp+0x10],rdx
   140044215:	push   rbp
   140044216:	sub    rsp,0x30
   14004421a:	mov    rbp,rdx
   14004421d:	mov    rcx,QWORD PTR [rbp+0x68]
   140044221:	call   0x14002b150
   140044226:	xor    edx,edx
   140044228:	xor    ecx,ecx
   14004422a:	call   0x14002b560
   14004422f:	nop
   140044230:	lea    rcx,[rdx+0x60]
   140044237:	jmp    0x14000638c
   14004423c:	int3   
   14004423d:	int3   
   14004423e:	int3   
   14004423f:	int3   
   140044240:	lea    rcx,[rdx+0x60]
   140044247:	jmp    0x14000638c
   14004424c:	int3   
   14004424d:	int3   
   14004424e:	int3   
   14004424f:	int3   
   140044250:	lea    rcx,[rdx+0x60]
   140044257:	jmp    0x14000638c
   14004425c:	int3   
   14004425d:	int3   
   14004425e:	int3   
   14004425f:	int3   
   140044260:	lea    rcx,[rdx+0x30]
   140044267:	jmp    0x140030880
   14004426c:	int3   
   14004426d:	int3   
   14004426e:	int3   
   14004426f:	int3   
   140044270:	mov    rcx,QWORD PTR [rdx+0x40]
   140044277:	add    rcx,0x408
   14004427e:	jmp    0x14003fc90
   140044283:	int3   
   140044284:	int3   
   140044285:	int3   
   140044286:	int3   
   140044287:	int3   
   140044288:	int3   
   140044289:	int3   
   14004428a:	int3   
   14004428b:	int3   
   14004428c:	int3   
   14004428d:	int3   
   14004428e:	int3   
   14004428f:	int3   
   140044290:	mov    rcx,QWORD PTR [rdx+0x40]
   140044297:	add    rcx,0x428
   14004429e:	jmp    0x14003fcd0
   1400442a3:	int3   
   1400442a4:	int3   
   1400442a5:	int3   
   1400442a6:	int3   
   1400442a7:	int3   
   1400442a8:	int3   
   1400442a9:	int3   
   1400442aa:	int3   
   1400442ab:	int3   
   1400442ac:	int3   
   1400442ad:	int3   
   1400442ae:	int3   
   1400442af:	int3   
   1400442b0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400442b7:	jmp    0x140010de0
   1400442bc:	int3   
   1400442bd:	int3   
   1400442be:	int3   
   1400442bf:	int3   
   1400442c0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400442c7:	jmp    0x14002dd60
   1400442cc:	int3   
   1400442cd:	int3   
   1400442ce:	int3   
   1400442cf:	int3   
   1400442d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400442d7:	jmp    0x14002dd60
   1400442dc:	int3   
   1400442dd:	int3   
   1400442de:	int3   
   1400442df:	int3   
   1400442e0:	rex push rbp
   1400442e2:	sub    rsp,0x20
   1400442e6:	mov    rbp,rdx
   1400442e9:	mov    rdx,QWORD PTR [rbp+0x40]
   1400442ed:	mov    rcx,QWORD PTR [rbp+0x48]
   1400442f1:	call   0x14001195c
   1400442f6:	add    rsp,0x20
   1400442fa:	pop    rbp
   1400442fb:	ret    
   1400442fc:	int3   
   1400442fd:	int3   
   1400442fe:	int3   
   1400442ff:	int3   
   140044300:	rex push rbp
   140044302:	sub    rsp,0x20
   140044306:	mov    rbp,rdx
   140044309:	mov    rdx,QWORD PTR [rbp+0x40]
   14004430d:	mov    rcx,QWORD PTR [rbp+0x48]
   140044311:	call   0x14001195c
   140044316:	add    rsp,0x20
   14004431a:	pop    rbp
   14004431b:	ret    
   14004431c:	int3   
   14004431d:	int3   
   14004431e:	int3   
   14004431f:	int3   
   140044320:	lea    rcx,[rdx+0x30]
   140044327:	jmp    0x140030b80
   14004432c:	int3   
   14004432d:	int3   
   14004432e:	int3   
   14004432f:	int3   
   140044330:	mov    rcx,QWORD PTR [rdx+0x78]
   140044337:	add    rcx,0x408
   14004433e:	jmp    0x14003fc90
   140044343:	int3   
   140044344:	int3   
   140044345:	int3   
   140044346:	int3   
   140044347:	int3   
   140044348:	int3   
   140044349:	int3   
   14004434a:	int3   
   14004434b:	int3   
   14004434c:	int3   
   14004434d:	int3   
   14004434e:	int3   
   14004434f:	int3   
   140044350:	mov    rcx,QWORD PTR [rdx+0x78]
   140044357:	add    rcx,0x428
   14004435e:	jmp    0x14003fcd0
   140044363:	int3   
   140044364:	int3   
   140044365:	int3   
   140044366:	int3   
   140044367:	int3   
   140044368:	int3   
   140044369:	int3   
   14004436a:	int3   
   14004436b:	int3   
   14004436c:	int3   
   14004436d:	int3   
   14004436e:	int3   
   14004436f:	int3   
   140044370:	mov    rcx,QWORD PTR [rdx+0x78]
   140044377:	add    rcx,0x448
   14004437e:	jmp    0x140001384
   140044383:	int3   
   140044384:	int3   
   140044385:	int3   
   140044386:	int3   
   140044387:	int3   
   140044388:	int3   
   140044389:	int3   
   14004438a:	int3   
   14004438b:	int3   
   14004438c:	int3   
   14004438d:	int3   
   14004438e:	int3   
   14004438f:	int3   
   140044390:	lea    rcx,[rdx+0x30]
   140044397:	jmp    0x14002dd20
   14004439c:	int3   
   14004439d:	int3   
   14004439e:	int3   
   14004439f:	int3   
   1400443a0:	lea    rcx,[rdx+0x110]
   1400443a7:	jmp    0x14000638c
   1400443ac:	int3   
   1400443ad:	int3   
   1400443ae:	int3   
   1400443af:	int3   
   1400443b0:	lea    rcx,[rdx+0x68]
   1400443b7:	jmp    0x14002dd20
   1400443bc:	int3   
   1400443bd:	int3   
   1400443be:	int3   
   1400443bf:	int3   
   1400443c0:	lea    rcx,[rdx+0x138]
   1400443c7:	jmp    0x14000638c
   1400443cc:	int3   
   1400443cd:	int3   
   1400443ce:	int3   
   1400443cf:	int3   
   1400443d0:	lea    rcx,[rdx+0x160]
   1400443d7:	jmp    0x14000638c
   1400443dc:	int3   
   1400443dd:	int3   
   1400443de:	int3   
   1400443df:	int3   
   1400443e0:	lea    rcx,[rdx+0x50]
   1400443e7:	jmp    0x14001d41c
   1400443ec:	int3   
   1400443ed:	int3   
   1400443ee:	int3   
   1400443ef:	int3   
   1400443f0:	lea    rcx,[rdx+0x98]
   1400443f7:	jmp    0x14000638c
   1400443fc:	int3   
   1400443fd:	int3   
   1400443fe:	int3   
   1400443ff:	int3   
   140044400:	lea    rcx,[rdx+0xe8]
   140044407:	jmp    0x14000638c
   14004440c:	int3   
   14004440d:	int3   
   14004440e:	int3   
   14004440f:	int3   
   140044410:	lea    rcx,[rdx+0xc0]
   140044417:	jmp    0x14000638c
   14004441c:	int3   
   14004441d:	int3   
   14004441e:	int3   
   14004441f:	int3   
   140044420:	rex push rbp
   140044422:	mov    rbp,rdx
   140044425:	mov    eax,DWORD PTR [rip+0x26335]        # 0x14006a760
   14004442b:	and    eax,0xfffffffe
   14004442e:	mov    DWORD PTR [rip+0x2632c],eax        # 0x14006a760
   140044434:	pop    rbp
   140044435:	ret    
   140044436:	int3   
   140044437:	int3   
   140044438:	int3   
   140044439:	int3   
   14004443a:	int3   
   14004443b:	int3   
   14004443c:	int3   
   14004443d:	int3   
   14004443e:	int3   
   14004443f:	int3   
   140044440:	lea    rcx,[rdx+0x188]
   140044447:	jmp    0x14000638c
   14004444c:	int3   
   14004444d:	int3   
   14004444e:	int3   
   14004444f:	int3   
   140044450:	lea    rcx,[rdx+0x28]
   140044457:	jmp    0x140022a58
   14004445c:	int3   
   14004445d:	int3   
   14004445e:	int3   
   14004445f:	int3   
   140044460:	mov    QWORD PTR [rsp+0x10],rdx
   140044465:	push   rbx
   140044466:	push   rbp
   140044467:	sub    rsp,0x28
   14004446b:	mov    rbp,rdx
   14004446e:	mov    rbx,QWORD PTR [rbp+0x48]
   140044472:	test   rbx,rbx
   140044475:	je     0x140044487
   140044477:	mov    rcx,rbx
   14004447a:	call   0x140040290
   14004447f:	mov    rcx,rbx
   140044482:	call   0x14002b150
   140044487:	xor    edx,edx
   140044489:	xor    ecx,ecx
   14004448b:	call   0x14002b560
   140044490:	nop
   140044491:	int3   
   140044492:	int3   
   140044493:	int3   
   140044494:	int3   
   140044495:	int3   
   140044496:	int3   
   140044497:	int3   
   140044498:	int3   
   140044499:	int3   
   14004449a:	int3   
   14004449b:	int3   
   14004449c:	int3   
   14004449d:	int3   
   14004449e:	int3   
   14004449f:	int3   
   1400444a0:	rex push rbp
   1400444a2:	mov    rbp,rdx
   1400444a5:	mov    eax,DWORD PTR [rip+0x262f5]        # 0x14006a7a0
   1400444ab:	and    eax,0xfffffffe
   1400444ae:	mov    DWORD PTR [rip+0x262ec],eax        # 0x14006a7a0
   1400444b4:	pop    rbp
   1400444b5:	ret    
   1400444b6:	int3   
   1400444b7:	int3   
   1400444b8:	int3   
   1400444b9:	int3   
   1400444ba:	int3   
   1400444bb:	int3   
   1400444bc:	int3   
   1400444bd:	int3   
   1400444be:	int3   
   1400444bf:	int3   
   1400444c0:	lea    rcx,[rip+0x262a1]        # 0x14006a768
   1400444c7:	jmp    0x140036120
   1400444cc:	int3   
   1400444cd:	int3   
   1400444ce:	int3   
   1400444cf:	int3   
   1400444d0:	lea    rcx,[rdx+0x40]
   1400444d7:	jmp    0x140036120
   1400444dc:	int3   
   1400444dd:	int3   
   1400444de:	int3   
   1400444df:	int3   
   1400444e0:	lea    rcx,[rdx+0x40]
   1400444e7:	jmp    0x14002d920
   1400444ec:	int3   
   1400444ed:	int3   
   1400444ee:	int3   
   1400444ef:	int3   
   1400444f0:	rex push rbp
   1400444f2:	sub    rsp,0x20
   1400444f6:	mov    rbp,rdx
   1400444f9:	mov    eax,DWORD PTR [rbp+0x158]
   1400444ff:	and    eax,0x1
   140044502:	test   eax,eax
   140044504:	je     0x140044519
   140044506:	and    DWORD PTR [rbp+0x158],0xfffffffe
   14004450d:	mov    rcx,QWORD PTR [rbp+0x140]
   140044514:	call   0x14002dd20
   140044519:	add    rsp,0x20
   14004451d:	pop    rbp
   14004451e:	ret    
   14004451f:	int3   
   140044520:	mov    rcx,QWORD PTR [rdx+0x58]
   140044527:	jmp    0x14002b150
   14004452c:	int3   
   14004452d:	int3   
   14004452e:	int3   
   14004452f:	int3   
   140044530:	lea    rcx,[rdx+0x30]
   140044537:	jmp    0x14002dd20
   14004453c:	int3   
   14004453d:	int3   
   14004453e:	int3   
   14004453f:	int3   
   140044540:	lea    rcx,[rdx+0x60]
   140044547:	jmp    0x14002dd20
   14004454c:	int3   
   14004454d:	int3   
   14004454e:	int3   
   14004454f:	int3   
   140044550:	lea    rcx,[rdx+0x68]
   140044557:	jmp    0x14002cb60
   14004455c:	int3   
   14004455d:	int3   
   14004455e:	int3   
   14004455f:	int3   
   140044560:	mov    rcx,QWORD PTR [rdx+0x70]
   140044567:	jmp    0x14002161c
   14004456c:	int3   
   14004456d:	int3   
   14004456e:	int3   
   14004456f:	int3   
   140044570:	mov    QWORD PTR [rsp+0x10],rdx
   140044575:	push   rbx
   140044576:	push   rbp
   140044577:	sub    rsp,0x28
   14004457b:	mov    rbp,rdx
   14004457e:	mov    rbx,QWORD PTR [rbp+0x60]
   140044582:	mov    dl,0x1
   140044584:	mov    rcx,rbx
   140044587:	call   0x140040d70
   14004458c:	test   al,al
   14004458e:	jne    0x140044582
   140044590:	xor    edx,edx
   140044592:	xor    ecx,ecx
   140044594:	call   0x14002b560
   140044599:	nop
   14004459a:	int3   
   14004459b:	int3   
   14004459c:	int3   
   14004459d:	int3   
   14004459e:	int3   
   14004459f:	int3   
   1400445a0:	lea    rcx,[rdx+0x30]
   1400445a7:	jmp    0x140043290
   1400445ac:	int3   
   1400445ad:	int3   
   1400445ae:	int3   
   1400445af:	int3   
   1400445b0:	rex push rbp
   1400445b2:	sub    rsp,0x20
   1400445b6:	mov    rbp,rdx
   1400445b9:	mov    eax,DWORD PTR [rbp+0x98]
   1400445bf:	and    eax,0x1
   1400445c2:	test   eax,eax
   1400445c4:	je     0x1400445d9
   1400445c6:	and    DWORD PTR [rbp+0x98],0xfffffffe
   1400445cd:	mov    rcx,QWORD PTR [rbp+0x80]
   1400445d4:	call   0x14002dd20
   1400445d9:	add    rsp,0x20
   1400445dd:	pop    rbp
   1400445de:	ret    
   1400445df:	int3   
   1400445e0:	lea    rcx,[rdx+0x40]
   1400445e7:	jmp    0x14001d41c
   1400445ec:	int3   
   1400445ed:	int3   
   1400445ee:	int3   
   1400445ef:	int3   
   1400445f0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400445f7:	jmp    0x140031bd0
   1400445fc:	int3   
   1400445fd:	int3   
   1400445fe:	int3   
   1400445ff:	int3   
   140044600:	mov    rcx,QWORD PTR [rdx+0x58]
   140044607:	jmp    0x14002b150
   14004460c:	int3   
   14004460d:	int3   
   14004460e:	int3   
   14004460f:	int3   
   140044610:	lea    rcx,[rdx+0x28]
   140044617:	jmp    0x14002161c
   14004461c:	int3   
   14004461d:	int3   
   14004461e:	int3   
   14004461f:	int3   
   140044620:	mov    rcx,QWORD PTR [rdx+0x80]
   140044627:	jmp    0x14002b150
   14004462c:	int3   
   14004462d:	int3   
   14004462e:	int3   
   14004462f:	int3   
   140044630:	lea    rcx,[rdx+0x38]
   140044637:	jmp    0x14002161c
   14004463c:	int3   
   14004463d:	int3   
   14004463e:	int3   
   14004463f:	int3   
   140044640:	lea    rcx,[rdx+0x48]
   140044647:	jmp    0x14002161c
   14004464c:	int3   
   14004464d:	int3   
   14004464e:	int3   
   14004464f:	int3   
   140044650:	lea    rcx,[rip+0x26111]        # 0x14006a768
   140044657:	jmp    0x140036120
   14004465c:	int3   
   14004465d:	int3   
   14004465e:	int3   
   14004465f:	int3   
   140044660:	mov    rcx,QWORD PTR [rdx+0x40]
   140044667:	jmp    0x14002dd60
   14004466c:	int3   
   14004466d:	int3   
   14004466e:	int3   
   14004466f:	int3   
   140044670:	lea    rcx,[rip+0x260f1]        # 0x14006a768
   140044677:	jmp    0x14002d920
   14004467c:	int3   
   14004467d:	int3   
   14004467e:	int3   
   14004467f:	int3   
   140044680:	lea    rcx,[rdx+0x28]
   140044687:	jmp    0x140043290
   14004468c:	int3   
   14004468d:	int3   
   14004468e:	int3   
   14004468f:	int3   
   140044690:	mov    rcx,QWORD PTR [rdx+0x40]
   140044697:	jmp    0x140041d10
   14004469c:	int3   
   14004469d:	int3   
   14004469e:	int3   
   14004469f:	int3   
   1400446a0:	lea    rcx,[rdx+0x28]
   1400446a7:	jmp    0x140041d10
   1400446ac:	int3   
   1400446ad:	int3   
   1400446ae:	int3   
   1400446af:	int3   
   1400446b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400446b7:	jmp    0x140041fa0
   1400446bc:	int3   
   1400446bd:	int3   
   1400446be:	int3   
   1400446bf:	int3   
   1400446c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400446c7:	add    rcx,0x50
   1400446cb:	jmp    0x1400010c4
   1400446d0:	lea    rcx,[rdx+0x80]
   1400446d7:	jmp    0x140041fa0
   1400446dc:	int3   
   1400446dd:	int3   
   1400446de:	int3   
   1400446df:	int3   
   1400446e0:	lea    rcx,[rdx+0x20]
   1400446e7:	jmp    0x14001d41c
   1400446ec:	int3   
   1400446ed:	int3   
   1400446ee:	int3   
   1400446ef:	int3   
   1400446f0:	lea    rcx,[rdx+0x88]
   1400446f7:	jmp    0x14002e910
   1400446fc:	int3   
   1400446fd:	int3   
   1400446fe:	int3   
   1400446ff:	int3   
   140044700:	mov    QWORD PTR [rsp+0x10],rdx
   140044705:	push   rbp
   140044706:	sub    rsp,0x20
   14004470a:	mov    rbp,rdx
   14004470d:	mov    rcx,QWORD PTR [rbp+0x48]
   140044711:	call   QWORD PTR [rbp+0x50]
   140044714:	xor    edx,edx
   140044716:	xor    ecx,ecx
   140044718:	call   0x14002b560
   14004471d:	nop
   14004471e:	int3   
   14004471f:	int3   
   140044720:	lea    rcx,[rdx+0x48]
   140044727:	jmp    0x14002dd20
   14004472c:	int3   
   14004472d:	int3   
   14004472e:	int3   
   14004472f:	int3   
   140044730:	lea    rcx,[rdx+0xa0]
   140044737:	jmp    0x14000638c
   14004473c:	int3   
   14004473d:	int3   
   14004473e:	int3   
   14004473f:	int3   
   140044740:	lea    rcx,[rdx+0x88]
   140044747:	jmp    0x14002dd20
   14004474c:	int3   
   14004474d:	int3   
   14004474e:	int3   
   14004474f:	int3   
   140044750:	lea    rcx,[rdx+0x118]
   140044757:	jmp    0x14000638c
   14004475c:	int3   
   14004475d:	int3   
   14004475e:	int3   
   14004475f:	int3   
   140044760:	lea    rcx,[rdx+0x140]
   140044767:	jmp    0x14000638c
   14004476c:	int3   
   14004476d:	int3   
   14004476e:	int3   
   14004476f:	int3   
   140044770:	lea    rcx,[rdx+0x70]
   140044777:	jmp    0x14001d41c
   14004477c:	int3   
   14004477d:	int3   
   14004477e:	int3   
   14004477f:	int3   
   140044780:	lea    rcx,[rdx+0xf0]
   140044787:	jmp    0x14000638c
   14004478c:	int3   
   14004478d:	int3   
   14004478e:	int3   
   14004478f:	int3   
   140044790:	lea    rcx,[rdx+0x40]
   140044797:	jmp    0x14000638c
   14004479c:	mov    rcx,QWORD PTR [rdx+0x40]
   1400447a3:	jmp    0x1400010a0
   1400447a8:	lea    rcx,[rdx+0x40]
   1400447af:	jmp    0x140002fa0
   1400447b4:	int3   
   1400447b5:	int3   
   1400447b6:	int3   
   1400447b7:	int3   
   1400447b8:	lea    rcx,[rdx+0x48]
   1400447bf:	jmp    0x140002fa0
   1400447c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400447c9:	push   rbp
   1400447ca:	sub    rsp,0x20
   1400447ce:	mov    rbp,rdx
   1400447d1:	mov    rcx,QWORD PTR [rbp+0x58]
   1400447d5:	call   QWORD PTR [rip+0x4e9d]        # 0x140049678
   1400447db:	xor    edx,edx
   1400447dd:	xor    ecx,ecx
   1400447df:	call   0x14002b560
   1400447e4:	nop
   1400447e5:	mov    rcx,QWORD PTR [rdx+0x40]
   1400447ec:	sub    rcx,0x98
   1400447f3:	add    rcx,0x18
   1400447f7:	rex.W jmp QWORD PTR [rip+0x4cc2]        # 0x1400494c0
   1400447fe:	mov    QWORD PTR [rsp+0x10],rdx
   140044803:	push   rbp
   140044804:	sub    rsp,0x20
   140044808:	mov    rbp,rdx
   14004480b:	xor    edx,edx
   14004480d:	xor    ecx,ecx
   14004480f:	call   0x14002b560
   140044814:	nop
   140044815:	lea    rcx,[rdx+0x50]
   14004481c:	rex.W jmp QWORD PTR [rip+0x4d85]        # 0x1400495a8
   140044823:	lea    rcx,[rdx+0x28]
   14004482a:	jmp    0x140005108
   14004482f:	int3   
   140044830:	int3   
   140044831:	int3   
   140044832:	int3   
   140044833:	mov    QWORD PTR [rsp+0x10],rdx
   140044838:	push   rbp
   140044839:	sub    rsp,0x20
   14004483d:	mov    rbp,rdx
   140044840:	mov    rdx,QWORD PTR [rbp+0x60]
   140044844:	mov    rax,QWORD PTR [rdx]
   140044847:	movsxd rcx,DWORD PTR [rax+0x4]
   14004484b:	add    rcx,rdx
   14004484e:	mov    r8b,0x1
   140044851:	mov    edx,0x4
   140044856:	call   QWORD PTR [rip+0x4a9c]        # 0x1400492f8
   14004485c:	nop
   14004485d:	lea    rax,[rip+0xfffffffffffc18d1]        # 0x140006135
   140044864:	add    rsp,0x20
   140044868:	pop    rbp
   140044869:	ret    
   14004486a:	int3   
   14004486b:	int3   
   14004486c:	int3   
   14004486d:	int3   
   14004486e:	int3   
   14004486f:	int3   
   140044870:	int3   
   140044871:	int3   
   140044872:	int3   
   140044873:	lea    rcx,[rdx+0x28]
   14004487a:	jmp    0x1400010a0
   14004487f:	lea    rcx,[rdx+0x28]
   140044886:	jmp    0x140005108
   14004488b:	int3   
   14004488c:	int3   
   14004488d:	int3   
   14004488e:	int3   
   14004488f:	mov    QWORD PTR [rsp+0x10],rdx
   140044894:	push   rbp
   140044895:	sub    rsp,0x20
   140044899:	mov    rbp,rdx
   14004489c:	mov    rdx,QWORD PTR [rbp+0x60]
   1400448a0:	mov    rax,QWORD PTR [rdx]
   1400448a3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400448a7:	add    rcx,rdx
   1400448aa:	mov    r8b,0x1
   1400448ad:	mov    edx,0x4
   1400448b2:	call   QWORD PTR [rip+0x4a40]        # 0x1400492f8
   1400448b8:	nop
   1400448b9:	lea    rax,[rip+0xfffffffffffc16e9]        # 0x140005fa9
   1400448c0:	add    rsp,0x20
   1400448c4:	pop    rbp
   1400448c5:	ret    
   1400448c6:	int3   
   1400448c7:	int3   
   1400448c8:	int3   
   1400448c9:	int3   
   1400448ca:	int3   
   1400448cb:	int3   
   1400448cc:	int3   
   1400448cd:	int3   
   1400448ce:	int3   
   1400448cf:	lea    rcx,[rdx+0x28]
   1400448d6:	jmp    0x1400010a0
   1400448db:	lea    rcx,[rdx+0x40]
   1400448e2:	jmp    0x140001074
   1400448e7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400448ee:	jmp    0x14001d700
   1400448f3:	mov    rcx,QWORD PTR [rdx+0x40]
   1400448fa:	jmp    0x140010cbc
   1400448ff:	mov    rcx,QWORD PTR [rdx+0x40]
   140044906:	sub    rcx,0x98
   14004490d:	add    rcx,0x18
   140044911:	rex.W jmp QWORD PTR [rip+0x4c18]        # 0x140049530
   140044918:	rex push rbp
   14004491a:	sub    rsp,0x20
   14004491e:	mov    rbp,rdx
   140044921:	mov    eax,DWORD PTR [rbp+0x48]
   140044924:	and    eax,0x1
   140044927:	test   eax,eax
   140044929:	je     0x140044940
   14004492b:	and    DWORD PTR [rbp+0x48],0xfffffffe
   14004492f:	mov    rcx,QWORD PTR [rbp+0x40]
   140044933:	add    rcx,0x98
   14004493a:	call   QWORD PTR [rip+0x49c0]        # 0x140049300
   140044940:	add    rsp,0x20
   140044944:	pop    rbp
   140044945:	ret    
   140044946:	int3   
   140044947:	int3   
   140044948:	mov    rcx,QWORD PTR [rdx+0x40]
   14004494f:	add    rcx,0x18
   140044953:	rex.W jmp QWORD PTR [rip+0x4b66]        # 0x1400494c0
   14004495a:	int3   
   14004495b:	int3   
   14004495c:	int3   
   14004495d:	int3   
   14004495e:	int3   
   14004495f:	int3   
   140044960:	int3   
   140044961:	int3   
   140044962:	int3   
   140044963:	int3   
   140044964:	int3   
   140044965:	int3   
   140044966:	int3   
   140044967:	int3   
   140044968:	mov    rcx,QWORD PTR [rdx+0x28]
   14004496f:	rex.W jmp QWORD PTR [rip+0x49ba]        # 0x140049330
   140044976:	mov    QWORD PTR [rsp+0x10],rdx
   14004497b:	push   rbp
   14004497c:	sub    rsp,0x20
   140044980:	mov    rbp,rdx
   140044983:	lea    rax,[rip+0xfffffffffffc5cd9]        # 0x14000a663
   14004498a:	add    rsp,0x20
   14004498e:	pop    rbp
   14004498f:	ret    
   140044990:	int3   
   140044991:	mov    QWORD PTR [rsp+0x10],rdx
   140044996:	push   rbp
   140044997:	sub    rsp,0x20
   14004499b:	mov    rbp,rdx
   14004499e:	mov    rcx,QWORD PTR [rbp+0x58]
   1400449a2:	call   QWORD PTR [rip+0x4cd0]        # 0x140049678
   1400449a8:	xor    edx,edx
   1400449aa:	xor    ecx,ecx
   1400449ac:	call   0x14002b560
   1400449b1:	nop
   1400449b2:	mov    QWORD PTR [rsp+0x10],rdx
   1400449b7:	push   rbp
   1400449b8:	sub    rsp,0x20
   1400449bc:	mov    rbp,rdx
   1400449bf:	mov    rcx,QWORD PTR [rbp+0x58]
   1400449c3:	call   QWORD PTR [rip+0x4caf]        # 0x140049678
   1400449c9:	xor    edx,edx
   1400449cb:	xor    ecx,ecx
   1400449cd:	call   0x14002b560
   1400449d2:	nop
   1400449d3:	mov    rcx,QWORD PTR [rdx+0x40]
   1400449da:	jmp    0x14001d41c
   1400449df:	mov    rcx,QWORD PTR [rdx+0x40]
   1400449e6:	jmp    0x140004670
   1400449eb:	mov    rcx,QWORD PTR [rdx+0x48]
   1400449f2:	jmp    0x140004670
   1400449f7:	int3   
   1400449f8:	int3   
   1400449f9:	int3   
   1400449fa:	int3   
   1400449fb:	mov    rcx,QWORD PTR [rdx+0x38]
   140044a02:	jmp    0x140004670
   140044a07:	int3   
   140044a08:	int3   
   140044a09:	int3   
   140044a0a:	int3   
   140044a0b:	lea    rcx,[rdx+0x50]
   140044a12:	jmp    0x140004670
   140044a17:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a1e:	jmp    0x1400227ec
   140044a23:	int3   
   140044a24:	int3   
   140044a25:	int3   
   140044a26:	int3   
   140044a27:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a2e:	add    rcx,0x50
   140044a32:	jmp    0x1400010c4
   140044a37:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a3e:	add    rcx,0x8
   140044a42:	jmp    0x140022254
   140044a47:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a4e:	add    rcx,0x88
   140044a55:	jmp    0x14002227c
   140044a5a:	int3   
   140044a5b:	int3   
   140044a5c:	int3   
   140044a5d:	int3   
   140044a5e:	int3   
   140044a5f:	int3   
   140044a60:	int3   
   140044a61:	int3   
   140044a62:	int3   
   140044a63:	int3   
   140044a64:	int3   
   140044a65:	int3   
   140044a66:	int3   
   140044a67:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a6e:	add    rcx,0xb8
   140044a75:	jmp    0x14002228c
   140044a7a:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a81:	add    rcx,0x8
   140044a85:	jmp    0x140022254
   140044a8a:	mov    rcx,QWORD PTR [rdx+0x40]
   140044a91:	add    rcx,0x88
   140044a98:	jmp    0x14002227c
   140044a9d:	lea    rcx,[rdx+0xc0]
   140044aa4:	jmp    0x14002238c
   140044aa9:	int3   
   140044aaa:	int3   
   140044aab:	int3   
   140044aac:	int3   
   140044aad:	lea    rcx,[rdx+0x50]
   140044ab4:	rex.W jmp QWORD PTR [rip+0x4a9d]        # 0x140049558
   140044abb:	int3   
   140044abc:	int3   
   140044abd:	lea    rcx,[rdx+0x28]
   140044ac4:	jmp    0x14001d700
   140044ac9:	int3   
   140044aca:	int3   
   140044acb:	int3   
   140044acc:	int3   
   140044acd:	lea    rcx,[rdx+0x198]
   140044ad4:	jmp    0x1400227ec
   140044ad9:	mov    rcx,QWORD PTR [rdx+0x40]
   140044ae0:	jmp    0x140021038
   140044ae5:	int3   
   140044ae6:	int3   
   140044ae7:	int3   
   140044ae8:	int3   
   140044ae9:	mov    rcx,QWORD PTR [rdx+0x40]
   140044af0:	add    rcx,0x40
   140044af4:	jmp    0x1400010c4
   140044af9:	mov    rcx,QWORD PTR [rdx+0x48]
   140044b00:	rex.W jmp QWORD PTR [rip+0x4b71]        # 0x140049678
   140044b07:	lea    rcx,[rdx+0x40]
   140044b0e:	jmp    0x140020e68
   140044b13:	int3   
   140044b14:	int3   
   140044b15:	int3   
   140044b16:	int3   
   140044b17:	lea    rcx,[rdx+0xb0]
   140044b1e:	jmp    0x140022100
   140044b23:	int3   
   140044b24:	int3   
   140044b25:	int3   
   140044b26:	int3   
   140044b27:	lea    rcx,[rdx+0xb0]
   140044b2e:	add    rcx,0x8
   140044b32:	jmp    0x140022254
   140044b37:	lea    rcx,[rdx+0xb0]
   140044b3e:	add    rcx,0x88
   140044b45:	jmp    0x14002227c
   140044b4a:	lea    rcx,[rdx+0x70]
   140044b51:	jmp    0x140021038
   140044b56:	mov    QWORD PTR [rsp+0x10],rdx
   140044b5b:	push   rbp
   140044b5c:	sub    rsp,0x20
   140044b60:	mov    rbp,rdx
   140044b63:	mov    rcx,QWORD PTR [rbp+0x140]
   140044b6a:	mov    rdx,QWORD PTR [rcx+0x20]
   140044b6e:	mov    r8,QWORD PTR [rbp+0x148]
   140044b75:	cmp    r8,rdx
   140044b78:	jae    0x140044bae
   140044b7a:	test   rdx,rdx
   140044b7d:	je     0x140044ba8
   140044b7f:	inc    QWORD PTR [rcx+0x18]
   140044b83:	mov    rax,QWORD PTR [rcx+0x10]
   140044b87:	shl    rax,0x4
   140044b8b:	cmp    QWORD PTR [rcx+0x18],rax
   140044b8f:	sbb    rax,rax
   140044b92:	and    rax,QWORD PTR [rcx+0x18]
   140044b96:	mov    QWORD PTR [rcx+0x18],rax
   140044b9a:	dec    rdx
   140044b9d:	mov    QWORD PTR [rcx+0x20],rdx
   140044ba1:	jne    0x140044ba8
   140044ba3:	and    QWORD PTR [rcx+0x18],0x0
   140044ba8:	cmp    r8,QWORD PTR [rcx+0x20]
   140044bac:	jb     0x140044b7a
   140044bae:	xor    edx,edx
   140044bb0:	xor    ecx,ecx
   140044bb2:	call   0x14002b560
   140044bb7:	nop
   140044bb8:	int3   
   140044bb9:	int3   
   140044bba:	int3   
   140044bbb:	int3   
   140044bbc:	int3   
   140044bbd:	int3   
   140044bbe:	int3   
   140044bbf:	int3   
   140044bc0:	int3   
   140044bc1:	int3   
   140044bc2:	int3   
   140044bc3:	int3   
   140044bc4:	int3   
   140044bc5:	int3   
   140044bc6:	mov    QWORD PTR [rsp+0x10],rdx
   140044bcb:	push   rbp
   140044bcc:	sub    rsp,0x20
   140044bd0:	mov    rbp,rdx
   140044bd3:	mov    rcx,QWORD PTR [rbp+0x140]
   140044bda:	mov    rax,QWORD PTR [rcx+0x20]
   140044bde:	mov    rdx,QWORD PTR [rbp+0x148]
   140044be5:	cmp    rdx,rax
   140044be8:	jae    0x140044c03
   140044bea:	test   rax,rax
   140044bed:	je     0x140044bfd
   140044bef:	dec    rax
   140044bf2:	mov    QWORD PTR [rcx+0x20],rax
   140044bf6:	jne    0x140044bfd
   140044bf8:	and    QWORD PTR [rcx+0x18],0x0
   140044bfd:	cmp    rdx,QWORD PTR [rcx+0x20]
   140044c01:	jb     0x140044bea
   140044c03:	xor    edx,edx
   140044c05:	xor    ecx,ecx
   140044c07:	call   0x14002b560
   140044c0c:	nop
   140044c0d:	mov    rcx,QWORD PTR [rdx+0x40]
   140044c14:	sub    rcx,0x88
   140044c1b:	add    rcx,0x8
   140044c1f:	rex.W jmp QWORD PTR [rip+0x46ca]        # 0x1400492f0
   140044c26:	mov    QWORD PTR [rsp+0x10],rdx
   140044c2b:	push   rbp
   140044c2c:	sub    rsp,0x20
   140044c30:	mov    rbp,rdx
   140044c33:	mov    rcx,QWORD PTR [rbp+0x20]
   140044c37:	call   QWORD PTR [rip+0x4a3b]        # 0x140049678
   140044c3d:	xor    edx,edx
   140044c3f:	xor    ecx,ecx
   140044c41:	call   0x14002b560
   140044c46:	nop
   140044c47:	mov    QWORD PTR [rsp+0x10],rdx
   140044c4c:	push   rbp
   140044c4d:	sub    rsp,0x20
   140044c51:	mov    rbp,rdx
   140044c54:	mov    rcx,QWORD PTR [rbp+0x88]
   140044c5b:	call   QWORD PTR [rip+0x4a17]        # 0x140049678
   140044c61:	xor    edx,edx
   140044c63:	xor    ecx,ecx
   140044c65:	call   0x14002b560
   140044c6a:	nop
   140044c6b:	int3   
   140044c6c:	int3   
   140044c6d:	int3   
   140044c6e:	int3   
   140044c6f:	int3   
   140044c70:	int3   
   140044c71:	int3   
   140044c72:	int3   
   140044c73:	int3   
   140044c74:	int3   
   140044c75:	int3   
   140044c76:	int3   
   140044c77:	mov    QWORD PTR [rsp+0x10],rdx
   140044c7c:	push   rbp
   140044c7d:	sub    rsp,0x20
   140044c81:	mov    rbp,rdx
   140044c84:	xor    edx,edx
   140044c86:	xor    ecx,ecx
   140044c88:	call   0x14002b560
   140044c8d:	nop
   140044c8e:	lea    rcx,[rdx+0x28]
   140044c95:	jmp    0x140010cbc
   140044c9a:	mov    QWORD PTR [rsp+0x10],rdx
   140044c9f:	push   rbp
   140044ca0:	sub    rsp,0x20
   140044ca4:	mov    rbp,rdx
   140044ca7:	mov    rcx,QWORD PTR [rbp+0x98]
   140044cae:	mov    QWORD PTR [rbp+0x98],rcx
   140044cb5:	xor    eax,eax
   140044cb7:	inc    rcx
   140044cba:	je     0x140044d0d
   140044cbc:	movabs rax,0x7fffffffffffffff
   140044cc6:	cmp    rcx,rax
   140044cc9:	ja     0x140044cd9
   140044ccb:	add    rcx,rcx
   140044cce:	call   QWORD PTR [rip+0x49c4]        # 0x140049698
   140044cd4:	test   rax,rax
   140044cd7:	jne    0x140044d0d
   140044cd9:	and    QWORD PTR [rbp+0x98],0x0
   140044ce1:	lea    rdx,[rbp+0x98]
   140044ce8:	lea    rcx,[rbp+0x40]
   140044cec:	call   QWORD PTR [rip+0x4bde]        # 0x1400498d0
   140044cf2:	lea    rax,[rip+0x54df]        # 0x14004a1d8
   140044cf9:	mov    QWORD PTR [rbp+0x40],rax
   140044cfd:	lea    rdx,[rip+0x1ea44]        # 0x140063748
   140044d04:	lea    rcx,[rbp+0x40]
   140044d08:	call   0x14002b560
   140044d0d:	mov    QWORD PTR [rbp+0xa8],rax
   140044d14:	lea    rax,[rip+0xfffffffffffc4f6b]        # 0x140009c86
   140044d1b:	add    rsp,0x20
   140044d1f:	pop    rbp
   140044d20:	ret    
   140044d21:	int3   
   140044d22:	int3   
   140044d23:	int3   
   140044d24:	int3   
   140044d25:	int3   
   140044d26:	int3   
   140044d27:	int3   
   140044d28:	int3   
   140044d29:	int3   
   140044d2a:	mov    QWORD PTR [rsp+0x10],rdx
   140044d2f:	push   rbx
   140044d30:	push   rbp
   140044d31:	sub    rsp,0x28
   140044d35:	mov    rbp,rdx
   140044d38:	mov    rbx,QWORD PTR [rbp+0x90]
   140044d3f:	cmp    QWORD PTR [rbx+0x18],0x8
   140044d44:	jb     0x140044d4f
   140044d46:	mov    rcx,QWORD PTR [rbx]
   140044d49:	call   QWORD PTR [rip+0x4929]        # 0x140049678
   140044d4f:	mov    QWORD PTR [rbx+0x18],0x7
   140044d57:	and    QWORD PTR [rbx+0x10],0x0
   140044d5c:	xor    eax,eax
   140044d5e:	mov    WORD PTR [rbx],ax
   140044d61:	xor    edx,edx
   140044d63:	xor    ecx,ecx
   140044d65:	call   0x14002b560
   140044d6a:	nop
   140044d6b:	rex push rbp
   140044d6d:	sub    rsp,0x20
   140044d71:	mov    rbp,rdx
   140044d74:	mov    rdx,QWORD PTR [rbp+0x48]
   140044d78:	mov    rcx,QWORD PTR [rbp+0x58]
   140044d7c:	call   0x14001195c
   140044d81:	add    rsp,0x20
   140044d85:	pop    rbp
   140044d86:	ret    
   140044d87:	mov    rcx,QWORD PTR [rdx+0xb0]
   140044d8e:	jmp    0x140004670
   140044d93:	int3   
   140044d94:	int3   
   140044d95:	int3   
   140044d96:	int3   
   140044d97:	mov    rcx,QWORD PTR [rdx+0xa8]
   140044d9e:	jmp    0x140004670
   140044da3:	int3   
   140044da4:	int3   
   140044da5:	int3   
   140044da6:	int3   
   140044da7:	mov    rcx,QWORD PTR [rdx+0x80]
   140044dae:	jmp    0x140004670
   140044db3:	int3   
   140044db4:	int3   
   140044db5:	int3   
   140044db6:	int3   
   140044db7:	mov    rcx,QWORD PTR [rdx+0x98]
   140044dbe:	jmp    0x140004670
   140044dc3:	int3   
   140044dc4:	int3   
   140044dc5:	int3   
   140044dc6:	int3   
   140044dc7:	rex push rbp
   140044dc9:	sub    rsp,0x20
   140044dcd:	mov    rbp,rdx
   140044dd0:	mov    rdx,QWORD PTR [rbp+0xa0]
   140044dd7:	mov    rcx,QWORD PTR [rbp+0x88]
   140044dde:	call   0x14001195c
   140044de3:	add    rsp,0x20
   140044de7:	pop    rbp
   140044de8:	ret    
   140044de9:	mov    rcx,QWORD PTR [rdx+0x48]
   140044df0:	jmp    0x140007774
   140044df5:	int3   
   140044df6:	int3   
   140044df7:	int3   
   140044df8:	int3   
   140044df9:	rex push rbp
   140044dfb:	sub    rsp,0x20
   140044dff:	mov    rbp,rdx
   140044e02:	mov    eax,DWORD PTR [rbp+0x58]
   140044e05:	and    eax,0x1
   140044e08:	test   eax,eax
   140044e0a:	je     0x140044e19
   140044e0c:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140044e10:	mov    rcx,QWORD PTR [rbp+0x40]
   140044e14:	call   0x140007774
   140044e19:	add    rsp,0x20
   140044e1d:	pop    rbp
   140044e1e:	ret    
   140044e1f:	mov    QWORD PTR [rsp+0x10],rdx
   140044e24:	push   rbp
   140044e25:	sub    rsp,0x20
   140044e29:	mov    rbp,rdx
   140044e2c:	mov    rcx,QWORD PTR [rbp+0x98]
   140044e33:	mov    QWORD PTR [rbp+0x98],rcx
   140044e3a:	xor    eax,eax
   140044e3c:	inc    rcx
   140044e3f:	je     0x140044e86
   140044e41:	cmp    rcx,0xffffffffffffffff
   140044e45:	ja     0x140044e52
   140044e47:	call   QWORD PTR [rip+0x484b]        # 0x140049698
   140044e4d:	test   rax,rax
   140044e50:	jne    0x140044e86
   140044e52:	and    QWORD PTR [rbp+0x98],0x0
   140044e5a:	lea    rdx,[rbp+0x98]
   140044e61:	lea    rcx,[rbp+0x40]
   140044e65:	call   QWORD PTR [rip+0x4a65]        # 0x1400498d0
   140044e6b:	lea    rax,[rip+0x5366]        # 0x14004a1d8
   140044e72:	mov    QWORD PTR [rbp+0x40],rax
   140044e76:	lea    rdx,[rip+0x1e8cb]        # 0x140063748
   140044e7d:	lea    rcx,[rbp+0x40]
   140044e81:	call   0x14002b560
   140044e86:	mov    QWORD PTR [rbp+0xa8],rax
   140044e8d:	lea    rax,[rip+0xfffffffffffc0987]        # 0x14000581b
   140044e94:	add    rsp,0x20
   140044e98:	pop    rbp
   140044e99:	ret    
   140044e9a:	int3   
   140044e9b:	int3   
   140044e9c:	int3   
   140044e9d:	int3   
   140044e9e:	int3   
   140044e9f:	mov    QWORD PTR [rsp+0x10],rdx
   140044ea4:	push   rbx
   140044ea5:	push   rbp
   140044ea6:	sub    rsp,0x28
   140044eaa:	mov    rbp,rdx
   140044ead:	mov    rbx,QWORD PTR [rbp+0x90]
   140044eb4:	cmp    QWORD PTR [rbx+0x18],0x10
   140044eb9:	jb     0x140044ec4
   140044ebb:	mov    rcx,QWORD PTR [rbx]
   140044ebe:	call   QWORD PTR [rip+0x47b4]        # 0x140049678
   140044ec4:	mov    QWORD PTR [rbx+0x18],0xf
   140044ecc:	and    QWORD PTR [rbx+0x10],0x0
   140044ed1:	mov    BYTE PTR [rbx],0x0
   140044ed4:	xor    edx,edx
   140044ed6:	xor    ecx,ecx
   140044ed8:	call   0x14002b560
   140044edd:	nop
   140044ede:	lea    rcx,[rdx+0x60]
   140044ee5:	jmp    0x14000638c
   140044eea:	mov    QWORD PTR [rsp+0x10],rdx
   140044eef:	push   rbx
   140044ef0:	push   rbp
   140044ef1:	sub    rsp,0x28
   140044ef5:	mov    rbp,rdx
   140044ef8:	mov    rbx,QWORD PTR [rbp+0x40]
   140044efc:	cmp    QWORD PTR [rbx+0x18],0x10
   140044f01:	jb     0x140044f0c
   140044f03:	mov    rcx,QWORD PTR [rbx]
   140044f06:	call   QWORD PTR [rip+0x476c]        # 0x140049678
   140044f0c:	mov    QWORD PTR [rbx+0x18],0xf
   140044f14:	and    QWORD PTR [rbx+0x10],0x0
   140044f19:	mov    BYTE PTR [rbx],0x0
   140044f1c:	xor    edx,edx
   140044f1e:	xor    ecx,ecx
   140044f20:	call   0x14002b560
   140044f25:	nop
   140044f26:	mov    rcx,QWORD PTR [rdx+0x40]
   140044f2d:	jmp    0x14000638c
   140044f32:	mov    QWORD PTR [rsp+0x10],rdx
   140044f37:	push   rbx
   140044f38:	push   rbp
   140044f39:	sub    rsp,0x28
   140044f3d:	mov    rbp,rdx
   140044f40:	mov    rbx,QWORD PTR [rbp+0x40]
   140044f44:	cmp    QWORD PTR [rbx+0x18],0x10
   140044f49:	jb     0x140044f54
   140044f4b:	mov    rcx,QWORD PTR [rbx]
   140044f4e:	call   QWORD PTR [rip+0x4724]        # 0x140049678
   140044f54:	mov    QWORD PTR [rbx+0x18],0xf
   140044f5c:	and    QWORD PTR [rbx+0x10],0x0
   140044f61:	mov    BYTE PTR [rbx],0x0
   140044f64:	xor    edx,edx
   140044f66:	xor    ecx,ecx
   140044f68:	call   0x14002b560
   140044f6d:	nop
   140044f6e:	mov    QWORD PTR [rsp+0x10],rdx
   140044f73:	push   rbx
   140044f74:	push   rbp
   140044f75:	sub    rsp,0x28
   140044f79:	mov    rbp,rdx
   140044f7c:	mov    rbx,QWORD PTR [rbp+0x40]
   140044f80:	cmp    QWORD PTR [rbx+0x18],0x10
   140044f85:	jb     0x140044f90
   140044f87:	mov    rcx,QWORD PTR [rbx]
   140044f8a:	call   QWORD PTR [rip+0x46e8]        # 0x140049678
   140044f90:	mov    QWORD PTR [rbx+0x18],0xf
   140044f98:	and    QWORD PTR [rbx+0x10],0x0
   140044f9d:	mov    BYTE PTR [rbx],0x0
   140044fa0:	xor    edx,edx
   140044fa2:	xor    ecx,ecx
   140044fa4:	call   0x14002b560
   140044fa9:	nop
   140044faa:	mov    rcx,QWORD PTR [rdx+0x40]
   140044fb1:	jmp    0x140010de0
   140044fb6:	lea    rcx,[rdx+0x40]
   140044fbd:	jmp    0x14000638c
   140044fc2:	mov    rcx,QWORD PTR [rdx+0x40]
   140044fc9:	rex.W jmp QWORD PTR [rip+0x4480]        # 0x140049450
   140044fd0:	mov    rcx,QWORD PTR [rdx+0x40]
   140044fd7:	sub    rcx,0xb0
   140044fde:	add    rcx,0x10
   140044fe2:	rex.W jmp QWORD PTR [rip+0x43ff]        # 0x1400493e8
   140044fe9:	rex push rbp
   140044feb:	sub    rsp,0x20
   140044fef:	mov    rbp,rdx
   140044ff2:	mov    eax,DWORD PTR [rbp+0x180]
   140044ff8:	and    eax,0x1
   140044ffb:	test   eax,eax
   140044ffd:	je     0x140045017
   140044fff:	and    DWORD PTR [rbp+0x180],0xfffffffe
   140045006:	lea    rcx,[rbp+0x30]
   14004500a:	add    rcx,0xb0
   140045011:	call   QWORD PTR [rip+0x43e9]        # 0x140049400
   140045017:	add    rsp,0x20
   14004501b:	pop    rbp
   14004501c:	ret    
   14004501d:	int3   
   14004501e:	int3   
   14004501f:	int3   
   140045020:	int3   
   140045021:	int3   
   140045022:	int3   
   140045023:	int3   
   140045024:	int3   
   140045025:	int3   
   140045026:	int3   
   140045027:	int3   
   140045028:	int3   
   140045029:	lea    rcx,[rdx+0x30]
   140045030:	add    rcx,0x10
   140045034:	rex.W jmp QWORD PTR [rip+0x43ad]        # 0x1400493e8
   14004503b:	int3   
   14004503c:	int3   
   14004503d:	int3   
   14004503e:	int3   
   14004503f:	int3   
   140045040:	int3   
   140045041:	int3   
   140045042:	int3   
   140045043:	int3   
   140045044:	int3   
   140045045:	int3   
   140045046:	int3   
   140045047:	int3   
   140045048:	int3   
   140045049:	mov    rcx,QWORD PTR [rdx+0x188]
   140045050:	rex.W jmp QWORD PTR [rip+0x43f9]        # 0x140049450
   140045057:	int3   
   140045058:	int3   
   140045059:	lea    rcx,[rdx+0x30]
   140045060:	add    rcx,0x10
   140045064:	jmp    0x14000bac8
   140045069:	lea    rcx,[rdx+0x30]
   140045070:	jmp    0x14000ac64
   140045075:	int3   
   140045076:	int3   
   140045077:	int3   
   140045078:	int3   
   140045079:	mov    rcx,QWORD PTR [rdx+0x180]
   140045080:	sub    rcx,0xb0
   140045087:	add    rcx,0x10
   14004508b:	rex.W jmp QWORD PTR [rip+0x4356]        # 0x1400493e8
   140045092:	rex push rbp
   140045094:	sub    rsp,0x20
   140045098:	mov    rbp,rdx
   14004509b:	mov    eax,DWORD PTR [rbp+0x88]
   1400450a1:	and    eax,0x1
   1400450a4:	test   eax,eax
   1400450a6:	je     0x1400450bb
   1400450a8:	and    DWORD PTR [rbp+0x88],0xfffffffe
   1400450af:	mov    rcx,QWORD PTR [rbp+0x80]
   1400450b6:	call   0x140018184
   1400450bb:	add    rsp,0x20
   1400450bf:	pop    rbp
   1400450c0:	ret    
   1400450c1:	int3   
   1400450c2:	lea    rcx,[rdx+0x38]
   1400450c9:	jmp    0x140010cbc
   1400450ce:	mov    rcx,QWORD PTR [rdx+0x40]
   1400450d5:	jmp    0x140008858
   1400450da:	int3   
   1400450db:	int3   
   1400450dc:	int3   
   1400450dd:	int3   
   1400450de:	mov    rcx,QWORD PTR [rdx+0x40]
   1400450e5:	add    rcx,0x40
   1400450e9:	jmp    0x1400010c4
   1400450ee:	lea    rcx,[rdx+0x20]
   1400450f5:	jmp    0x14001d41c
   1400450fa:	int3   
   1400450fb:	int3   
   1400450fc:	int3   
   1400450fd:	int3   
   1400450fe:	lea    rcx,[rdx+0x88]
   140045105:	jmp    0x140008858
   14004510a:	lea    rcx,[rdx+0x30]
   140045111:	jmp    0x1400010a0
   140045116:	int3   
   140045117:	int3   
   140045118:	int3   
   140045119:	int3   
   14004511a:	lea    rcx,[rdx+0x30]
   140045121:	jmp    0x1400010a0
   140045126:	int3   
   140045127:	int3   
   140045128:	int3   
   140045129:	int3   
   14004512a:	mov    QWORD PTR [rsp+0x10],rdx
   14004512f:	push   rbp
   140045130:	sub    rsp,0x20
   140045134:	mov    rbp,rdx
   140045137:	mov    rdx,QWORD PTR [rbp+0x70]
   14004513b:	mov    rax,QWORD PTR [rdx]
   14004513e:	movsxd rcx,DWORD PTR [rax+0x4]
   140045142:	add    rcx,rdx
   140045145:	mov    r8b,0x1
   140045148:	mov    edx,0x4
   14004514d:	call   QWORD PTR [rip+0x41a5]        # 0x1400492f8
   140045153:	nop
   140045154:	lea    rax,[rip+0xfffffffffffc1bef]        # 0x140006d4a
   14004515b:	add    rsp,0x20
   14004515f:	pop    rbp
   140045160:	ret    
   140045161:	int3   
   140045162:	mov    rcx,QWORD PTR [rdx+0x40]
   140045169:	rex.W jmp QWORD PTR [rip+0x41c0]        # 0x140049330
   140045170:	rex push rbp
   140045172:	sub    rsp,0x20
   140045176:	mov    rbp,rdx
   140045179:	mov    eax,DWORD PTR [rbp+0x60]
   14004517c:	and    eax,0x1
   14004517f:	test   eax,eax
   140045181:	je     0x140045198
   140045183:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140045187:	mov    rcx,QWORD PTR [rbp+0x50]
   14004518b:	add    rcx,0xb0
   140045192:	call   QWORD PTR [rip+0x4168]        # 0x140049300
   140045198:	add    rsp,0x20
   14004519c:	pop    rbp
   14004519d:	ret    
   14004519e:	int3   
   14004519f:	int3   
   1400451a0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400451a7:	add    rcx,0x10
   1400451ab:	rex.W jmp QWORD PTR [rip+0x412e]        # 0x1400492e0
   1400451b2:	int3   
   1400451b3:	int3   
   1400451b4:	int3   
   1400451b5:	int3   
   1400451b6:	int3   
   1400451b7:	int3   
   1400451b8:	int3   
   1400451b9:	int3   
   1400451ba:	int3   
   1400451bb:	int3   
   1400451bc:	int3   
   1400451bd:	int3   
   1400451be:	int3   
   1400451bf:	int3   
   1400451c0:	mov    rcx,QWORD PTR [rdx+0x68]
   1400451c7:	rex.W jmp QWORD PTR [rip+0x4162]        # 0x140049330
   1400451ce:	int3   
   1400451cf:	int3   
   1400451d0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400451d7:	add    rcx,0x10
   1400451db:	jmp    0x140003b0c
   1400451e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400451e7:	sub    rcx,0xb0
   1400451ee:	add    rcx,0x10
   1400451f2:	rex.W jmp QWORD PTR [rip+0x40e7]        # 0x1400492e0
   1400451f9:	rex push rbp
   1400451fb:	sub    rsp,0x20
   1400451ff:	mov    rbp,rdx
   140045202:	mov    eax,DWORD PTR [rbp+0x70]
   140045205:	and    eax,0x1
   140045208:	test   eax,eax
   14004520a:	je     0x140045219
   14004520c:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140045210:	mov    rcx,QWORD PTR [rbp+0x60]
   140045214:	call   0x14000638c
   140045219:	add    rsp,0x20
   14004521d:	pop    rbp
   14004521e:	ret    
   14004521f:	mov    rcx,QWORD PTR [rdx+0x40]
   140045226:	jmp    0x1400214b8
   14004522b:	int3   
   14004522c:	int3   
   14004522d:	int3   
   14004522e:	int3   
   14004522f:	mov    rcx,QWORD PTR [rdx+0x40]
   140045236:	add    rcx,0x40
   14004523a:	jmp    0x1400010c4
   14004523f:	mov    rcx,QWORD PTR [rdx+0x40]
   140045246:	jmp    0x140021354
   14004524b:	int3   
   14004524c:	int3   
   14004524d:	int3   
   14004524e:	int3   
   14004524f:	mov    rcx,QWORD PTR [rdx+0x40]
   140045256:	add    rcx,0x40
   14004525a:	jmp    0x1400010c4
   14004525f:	mov    rcx,QWORD PTR [rdx+0x40]
   140045266:	jmp    0x140020ed4
   14004526b:	int3   
   14004526c:	int3   
   14004526d:	int3   
   14004526e:	int3   
   14004526f:	mov    rcx,QWORD PTR [rdx+0x40]
   140045276:	add    rcx,0x40
   14004527a:	jmp    0x1400010c4
   14004527f:	mov    rcx,QWORD PTR [rdx+0x30]
   140045286:	jmp    0x140002da8
   14004528b:	int3   
   14004528c:	int3   
   14004528d:	int3   
   14004528e:	int3   
   14004528f:	mov    rcx,QWORD PTR [rdx+0x20]
   140045296:	jmp    0x140002da8
   14004529b:	int3   
   14004529c:	int3   
   14004529d:	int3   
   14004529e:	int3   
   14004529f:	mov    rcx,QWORD PTR [rdx+0x20]
   1400452a6:	add    rcx,0x78
   1400452aa:	jmp    0x14000638c
   1400452af:	lea    rcx,[rdx+0xa0]
   1400452b6:	jmp    0x140020838
   1400452bb:	int3   
   1400452bc:	int3   
   1400452bd:	int3   
   1400452be:	int3   
   1400452bf:	mov    rcx,QWORD PTR [rdx+0x28]
   1400452c6:	jmp    0x140002da8
   1400452cb:	lea    rcx,[rdx+0x70]
   1400452d2:	jmp    0x1400214b8
   1400452d7:	mov    rcx,QWORD PTR [rdx+0x50]
   1400452de:	add    rcx,0x10
   1400452e2:	jmp    0x14000638c
   1400452e7:	mov    rcx,QWORD PTR [rdx+0x50]
   1400452ee:	add    rcx,0x38
   1400452f2:	jmp    0x14000638c
   1400452f7:	mov    rcx,QWORD PTR [rdx+0x50]
   1400452fe:	add    rcx,0x60
   140045302:	jmp    0x14000638c
   140045307:	mov    rcx,QWORD PTR [rdx+0x30]
   14004530e:	jmp    0x14000638c
   140045313:	int3   
   140045314:	int3   
   140045315:	int3   
   140045316:	int3   
   140045317:	lea    rcx,[rdx+0x20]
   14004531e:	jmp    0x140001074
   140045323:	lea    rcx,[rdx+0xd0]
   14004532a:	jmp    0x14000638c
   14004532f:	int3   
   140045330:	int3   
   140045331:	int3   
   140045332:	int3   
   140045333:	lea    rcx,[rdx+0x28]
   14004533a:	jmp    0x14001d41c
   14004533f:	int3   
   140045340:	int3   
   140045341:	int3   
   140045342:	int3   
   140045343:	lea    rcx,[rdx+0x90]
   14004534a:	jmp    0x140020ed4
   14004534f:	lea    rcx,[rdx+0x30]
   140045356:	jmp    0x14000638c
   14004535b:	mov    rcx,QWORD PTR [rdx+0x80]
   140045362:	jmp    0x14000638c
   140045367:	int3   
   140045368:	int3   
   140045369:	int3   
   14004536a:	int3   
   14004536b:	lea    rcx,[rdx+0x30]
   140045372:	jmp    0x140010cbc
   140045377:	int3   
   140045378:	int3   
   140045379:	int3   
   14004537a:	int3   
   14004537b:	lea    rcx,[rdx+0x88]
   140045382:	jmp    0x14000638c
   140045387:	int3   
   140045388:	int3   
   140045389:	int3   
   14004538a:	int3   
   14004538b:	lea    rcx,[rdx+0x50]
   140045392:	jmp    0x140010cbc
   140045397:	lea    rcx,[rdx+0x68]
   14004539e:	jmp    0x14000638c
   1400453a3:	mov    rcx,QWORD PTR [rdx+0x128]
   1400453aa:	jmp    0x140018a4c
   1400453af:	int3   
   1400453b0:	int3   
   1400453b1:	int3   
   1400453b2:	int3   
   1400453b3:	lea    rcx,[rdx+0x30]
   1400453ba:	rex.W jmp QWORD PTR [rip+0x415f]        # 0x140049520
   1400453c1:	int3   
   1400453c2:	int3   
   1400453c3:	lea    rcx,[rdx+0x30]
   1400453ca:	jmp    0x140019da4
   1400453cf:	mov    rcx,QWORD PTR [rdx+0xe8]
   1400453d6:	jmp    0x140018a4c
   1400453db:	int3   
   1400453dc:	int3   
   1400453dd:	int3   
   1400453de:	int3   
   1400453df:	mov    rcx,QWORD PTR [rdx+0xe0]
   1400453e6:	jmp    0x140018a4c
   1400453eb:	mov    rcx,QWORD PTR [rdx+0x28]
   1400453f2:	jmp    0x140018184
   1400453f7:	rex push rbp
   1400453f9:	sub    rsp,0x20
   1400453fd:	mov    rbp,rdx
   140045400:	mov    eax,DWORD PTR [rbp+0x20]
   140045403:	and    eax,0x1
   140045406:	test   eax,eax
   140045408:	je     0x140045417
   14004540a:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14004540e:	mov    rcx,QWORD PTR [rbp+0x30]
   140045412:	call   0x14000638c
   140045417:	add    rsp,0x20
   14004541b:	pop    rbp
   14004541c:	ret    
   14004541d:	rex push rbp
   14004541f:	sub    rsp,0x20
   140045423:	mov    rbp,rdx
   140045426:	mov    rdx,QWORD PTR [rbp+0x60]
   14004542a:	mov    rcx,QWORD PTR [rbp+0x58]
   14004542e:	call   0x14001195c
   140045433:	add    rsp,0x20
   140045437:	pop    rbp
   140045438:	ret    
   140045439:	int3   
   14004543a:	int3   
   14004543b:	int3   
   14004543c:	int3   
   14004543d:	mov    QWORD PTR [rsp+0x10],rdx
   140045442:	push   rbx
   140045443:	push   rbp
   140045444:	sub    rsp,0x28
   140045448:	mov    rbp,rdx
   14004544b:	mov    rbx,QWORD PTR [rbp+0x50]
   14004544f:	jmp    0x140045477
   140045451:	cmp    QWORD PTR [rbx+0x18],0x8
   140045456:	jb     0x140045461
   140045458:	mov    rcx,QWORD PTR [rbx]
   14004545b:	call   QWORD PTR [rip+0x4217]        # 0x140049678
   140045461:	mov    QWORD PTR [rbx+0x18],0x7
   140045469:	and    QWORD PTR [rbx+0x10],0x0
   14004546e:	xor    eax,eax
   140045470:	mov    WORD PTR [rbx],ax
   140045473:	add    rbx,0x28
   140045477:	cmp    rbx,QWORD PTR [rbp+0x60]
   14004547b:	jne    0x140045451
   14004547d:	xor    edx,edx
   14004547f:	xor    ecx,ecx
   140045481:	call   0x14002b560
   140045486:	nop
   140045487:	rex push rbp
   140045489:	sub    rsp,0x20
   14004548d:	mov    rbp,rdx
   140045490:	mov    eax,DWORD PTR [rbp+0x58]
   140045493:	and    eax,0x1
   140045496:	test   eax,eax
   140045498:	je     0x1400454a7
   14004549a:	and    DWORD PTR [rbp+0x58],0xfffffffe
   14004549e:	mov    rcx,QWORD PTR [rbp+0x50]
   1400454a2:	call   0x140018184
   1400454a7:	add    rsp,0x20
   1400454ab:	pop    rbp
   1400454ac:	ret    
   1400454ad:	mov    QWORD PTR [rsp+0x10],rdx
   1400454b2:	push   rbp
   1400454b3:	sub    rsp,0x20
   1400454b7:	mov    rbp,rdx
   1400454ba:	mov    rcx,QWORD PTR [rbp+0x78]
   1400454be:	call   QWORD PTR [rip+0x41b4]        # 0x140049678
   1400454c4:	xor    edx,edx
   1400454c6:	xor    ecx,ecx
   1400454c8:	call   0x14002b560
   1400454cd:	nop
   1400454ce:	lea    rcx,[rdx+0x30]
   1400454d5:	jmp    0x140018184
   1400454da:	int3   
   1400454db:	int3   
   1400454dc:	int3   
   1400454dd:	int3   
   1400454de:	lea    rcx,[rdx+0x30]
   1400454e5:	jmp    0x140018184
   1400454ea:	int3   
   1400454eb:	int3   
   1400454ec:	int3   
   1400454ed:	int3   
   1400454ee:	lea    rcx,[rdx+0x30]
   1400454f5:	jmp    0x140018184
   1400454fa:	rex push rbp
   1400454fc:	sub    rsp,0x20
   140045500:	mov    rbp,rdx
   140045503:	mov    eax,DWORD PTR [rbp+0x20]
   140045506:	and    eax,0x1
   140045509:	test   eax,eax
   14004550b:	je     0x14004551a
   14004550d:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140045511:	mov    rcx,QWORD PTR [rbp+0x30]
   140045515:	call   0x140018184
   14004551a:	add    rsp,0x20
   14004551e:	pop    rbp
   14004551f:	ret    
   140045520:	int3   
   140045521:	int3   
   140045522:	int3   
   140045523:	int3   
   140045524:	int3   
   140045525:	int3   
   140045526:	int3   
   140045527:	int3   
   140045528:	int3   
   140045529:	int3   
   14004552a:	lea    rcx,[rdx+0x38]
   140045531:	jmp    0x140018184
   140045536:	mov    rcx,QWORD PTR [rdx+0x40]
   14004553d:	sub    rcx,0xa8
   140045544:	add    rcx,0x8
   140045548:	rex.W jmp QWORD PTR [rip+0x3ea1]        # 0x1400493f0
   14004554f:	rex push rbp
   140045551:	sub    rsp,0x20
   140045555:	mov    rbp,rdx
   140045558:	mov    eax,DWORD PTR [rbp+0x160]
   14004555e:	and    eax,0x1
   140045561:	test   eax,eax
   140045563:	je     0x14004557d
   140045565:	and    DWORD PTR [rbp+0x160],0xfffffffe
   14004556c:	lea    rcx,[rbp+0x30]
   140045570:	add    rcx,0xa8
   140045577:	call   QWORD PTR [rip+0x3e83]        # 0x140049400
   14004557d:	add    rsp,0x20
   140045581:	pop    rbp
   140045582:	ret    
   140045583:	int3   
   140045584:	int3   
   140045585:	int3   
   140045586:	int3   
   140045587:	int3   
   140045588:	int3   
   140045589:	int3   
   14004558a:	int3   
   14004558b:	int3   
   14004558c:	int3   
   14004558d:	int3   
   14004558e:	int3   
   14004558f:	lea    rcx,[rdx+0x30]
   140045596:	add    rcx,0x8
   14004559a:	rex.W jmp QWORD PTR [rip+0x3e4f]        # 0x1400493f0
   1400455a1:	int3   
   1400455a2:	int3   
   1400455a3:	int3   
   1400455a4:	int3   
   1400455a5:	int3   
   1400455a6:	int3   
   1400455a7:	int3   
   1400455a8:	int3   
   1400455a9:	int3   
   1400455aa:	int3   
   1400455ab:	int3   
   1400455ac:	int3   
   1400455ad:	int3   
   1400455ae:	int3   
   1400455af:	mov    rcx,QWORD PTR [rdx+0x168]
   1400455b6:	rex.W jmp QWORD PTR [rip+0x3e93]        # 0x140049450
   1400455bd:	int3   
   1400455be:	int3   
   1400455bf:	lea    rcx,[rdx+0x30]
   1400455c6:	jmp    0x14000ae80
   1400455cb:	int3   
   1400455cc:	int3   
   1400455cd:	int3   
   1400455ce:	int3   
   1400455cf:	mov    rcx,QWORD PTR [rdx+0x160]
   1400455d6:	sub    rcx,0xa8
   1400455dd:	add    rcx,0x8
   1400455e1:	rex.W jmp QWORD PTR [rip+0x3e08]        # 0x1400493f0
   1400455e8:	lea    rcx,[rdx+0x78]
   1400455ef:	jmp    0x140018184
   1400455f4:	rex push rbp
   1400455f6:	sub    rsp,0x20
   1400455fa:	mov    rbp,rdx
   1400455fd:	mov    eax,DWORD PTR [rbp+0x98]
   140045603:	and    eax,0x1
   140045606:	test   eax,eax
   140045608:	je     0x14004561d
   14004560a:	and    DWORD PTR [rbp+0x98],0xfffffffe
   140045611:	mov    rcx,QWORD PTR [rbp+0x90]
   140045618:	call   0x14000638c
   14004561d:	add    rsp,0x20
   140045621:	pop    rbp
   140045622:	ret    
   140045623:	int3   
   140045624:	lea    rcx,[rdx+0x48]
   14004562b:	jmp    0x140010cbc
   140045630:	rex push rbp
   140045632:	sub    rsp,0x20
   140045636:	mov    rbp,rdx
   140045639:	mov    eax,DWORD PTR [rbp+0x58]
   14004563c:	and    eax,0x1
   14004563f:	test   eax,eax
   140045641:	je     0x140045650
   140045643:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140045647:	mov    rcx,QWORD PTR [rbp+0x50]
   14004564b:	call   0x14000638c
   140045650:	add    rsp,0x20
   140045654:	pop    rbp
   140045655:	ret    
   140045656:	rex push rbp
   140045658:	sub    rsp,0x20
   14004565c:	mov    rbp,rdx
   14004565f:	mov    rdx,QWORD PTR [rbp+0x40]
   140045663:	mov    rcx,QWORD PTR [rbp+0x50]
   140045667:	call   0x14001195c
   14004566c:	add    rsp,0x20
   140045670:	pop    rbp
   140045671:	ret    
   140045672:	rex push rbp
   140045674:	sub    rsp,0x20
   140045678:	mov    rbp,rdx
   14004567b:	mov    rdx,QWORD PTR [rbp+0x78]
   14004567f:	mov    rcx,QWORD PTR [rbp+0x28]
   140045683:	call   0x14001195c
   140045688:	add    rsp,0x20
   14004568c:	pop    rbp
   14004568d:	ret    
   14004568e:	int3   
   14004568f:	int3   
   140045690:	int3   
   140045691:	int3   
   140045692:	mov    rcx,QWORD PTR [rdx+0x28]
   140045699:	jmp    0x14000638c
   14004569e:	int3   
   14004569f:	int3   
   1400456a0:	int3   
   1400456a1:	int3   
   1400456a2:	mov    QWORD PTR [rsp+0x10],rdx
   1400456a7:	push   rbp
   1400456a8:	sub    rsp,0x20
   1400456ac:	mov    rbp,rdx
   1400456af:	mov    rcx,QWORD PTR [rbp+0x70]
   1400456b3:	call   QWORD PTR [rip+0x3fbf]        # 0x140049678
   1400456b9:	xor    edx,edx
   1400456bb:	xor    ecx,ecx
   1400456bd:	call   0x14002b560
   1400456c2:	nop
   1400456c3:	rex push rbp
   1400456c5:	sub    rsp,0x20
   1400456c9:	mov    rbp,rdx
   1400456cc:	mov    rdx,QWORD PTR [rbp+0x78]
   1400456d0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400456d4:	call   0x14001195c
   1400456d9:	add    rsp,0x20
   1400456dd:	pop    rbp
   1400456de:	ret    
   1400456df:	int3   
   1400456e0:	int3   
   1400456e1:	int3   
   1400456e2:	int3   
   1400456e3:	mov    rcx,QWORD PTR [rdx+0x28]
   1400456ea:	jmp    0x14000638c
   1400456ef:	int3   
   1400456f0:	int3   
   1400456f1:	int3   
   1400456f2:	int3   
   1400456f3:	mov    QWORD PTR [rsp+0x10],rdx
   1400456f8:	push   rbp
   1400456f9:	sub    rsp,0x20
   1400456fd:	mov    rbp,rdx
   140045700:	mov    rcx,QWORD PTR [rbp+0x70]
   140045704:	call   QWORD PTR [rip+0x3f6e]        # 0x140049678
   14004570a:	xor    edx,edx
   14004570c:	xor    ecx,ecx
   14004570e:	call   0x14002b560
   140045713:	nop
   140045714:	rex push rbp
   140045716:	sub    rsp,0x20
   14004571a:	mov    rbp,rdx
   14004571d:	mov    rdx,QWORD PTR [rbp+0x78]
   140045721:	mov    rcx,QWORD PTR [rbp+0x28]
   140045725:	call   0x14001195c
   14004572a:	add    rsp,0x20
   14004572e:	pop    rbp
   14004572f:	ret    
   140045730:	int3   
   140045731:	int3   
   140045732:	int3   
   140045733:	int3   
   140045734:	mov    QWORD PTR [rsp+0x10],rdx
   140045739:	push   rbp
   14004573a:	sub    rsp,0x20
   14004573e:	mov    rbp,rdx
   140045741:	mov    rcx,QWORD PTR [rbp+0x70]
   140045745:	call   QWORD PTR [rip+0x3f2d]        # 0x140049678
   14004574b:	xor    edx,edx
   14004574d:	xor    ecx,ecx
   14004574f:	call   0x14002b560
   140045754:	nop
   140045755:	rex push rbp
   140045757:	sub    rsp,0x20
   14004575b:	mov    rbp,rdx
   14004575e:	mov    eax,DWORD PTR [rbp+0x48]
   140045761:	and    eax,0x1
   140045764:	test   eax,eax
   140045766:	je     0x140045775
   140045768:	and    DWORD PTR [rbp+0x48],0xfffffffe
   14004576c:	mov    rcx,QWORD PTR [rbp+0x40]
   140045770:	call   0x14000638c
   140045775:	add    rsp,0x20
   140045779:	pop    rbp
   14004577a:	ret    
   14004577b:	lea    rcx,[rdx+0x80]
   140045782:	jmp    0x14000638c
   140045787:	int3   
   140045788:	int3   
   140045789:	int3   
   14004578a:	int3   
   14004578b:	lea    rcx,[rdx+0x30]
   140045792:	jmp    0x14000638c
   140045797:	int3   
   140045798:	int3   
   140045799:	int3   
   14004579a:	int3   
   14004579b:	lea    rcx,[rdx+0x30]
   1400457a2:	jmp    0x140002da8
   1400457a7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400457ae:	sub    rcx,0xa8
   1400457b5:	add    rcx,0x8
   1400457b9:	rex.W jmp QWORD PTR [rip+0x3b30]        # 0x1400492f0
   1400457c0:	rex push rbp
   1400457c2:	sub    rsp,0x20
   1400457c6:	mov    rbp,rdx
   1400457c9:	mov    eax,DWORD PTR [rbp+0x30]
   1400457cc:	and    eax,0x1
   1400457cf:	test   eax,eax
   1400457d1:	je     0x1400457eb
   1400457d3:	and    DWORD PTR [rbp+0x30],0xfffffffe
   1400457d7:	lea    rcx,[rbp+0x90]
   1400457de:	add    rcx,0xa8
   1400457e5:	call   QWORD PTR [rip+0x3b15]        # 0x140049300
   1400457eb:	add    rsp,0x20
   1400457ef:	pop    rbp
   1400457f0:	ret    
   1400457f1:	int3   
   1400457f2:	int3   
   1400457f3:	int3   
   1400457f4:	int3   
   1400457f5:	int3   
   1400457f6:	int3   
   1400457f7:	int3   
   1400457f8:	int3   
   1400457f9:	int3   
   1400457fa:	int3   
   1400457fb:	int3   
   1400457fc:	int3   
   1400457fd:	int3   
   1400457fe:	int3   
   1400457ff:	int3   
   140045800:	lea    rcx,[rdx+0x90]
   140045807:	add    rcx,0x8
   14004580b:	rex.W jmp QWORD PTR [rip+0x3ade]        # 0x1400492f0
   140045812:	int3   
   140045813:	int3   
   140045814:	int3   
   140045815:	int3   
   140045816:	int3   
   140045817:	int3   
   140045818:	int3   
   140045819:	int3   
   14004581a:	int3   
   14004581b:	int3   
   14004581c:	int3   
   14004581d:	int3   
   14004581e:	int3   
   14004581f:	int3   
   140045820:	mov    rcx,QWORD PTR [rdx+0x58]
   140045827:	rex.W jmp QWORD PTR [rip+0x3b02]        # 0x140049330
   14004582e:	int3   
   14004582f:	int3   
   140045830:	lea    rcx,[rdx+0x90]
   140045837:	add    rcx,0x8
   14004583b:	jmp    0x140003b0c
   140045840:	lea    rcx,[rdx+0x90]
   140045847:	jmp    0x1400028a4
   14004584c:	int3   
   14004584d:	int3   
   14004584e:	int3   
   14004584f:	int3   
   140045850:	lea    rcx,[rdx+0x38]
   140045857:	jmp    0x14000291c
   14004585c:	int3   
   14004585d:	int3   
   14004585e:	int3   
   14004585f:	int3   
   140045860:	lea    rcx,[rdx+0x1a0]
   140045867:	jmp    0x14000638c
   14004586c:	int3   
   14004586d:	int3   
   14004586e:	int3   
   14004586f:	int3   
   140045870:	lea    rcx,[rdx+0x220]
   140045877:	jmp    0x14000638c
   14004587c:	int3   
   14004587d:	int3   
   14004587e:	int3   
   14004587f:	int3   
   140045880:	lea    rcx,[rdx+0x1f0]
   140045887:	jmp    0x14000638c
   14004588c:	int3   
   14004588d:	int3   
   14004588e:	int3   
   14004588f:	int3   
   140045890:	lea    rcx,[rdx+0x248]
   140045897:	jmp    0x14000638c
   14004589c:	int3   
   14004589d:	int3   
   14004589e:	int3   
   14004589f:	int3   
   1400458a0:	lea    rcx,[rdx+0x1f0]
   1400458a7:	jmp    0x14000638c
   1400458ac:	int3   
   1400458ad:	int3   
   1400458ae:	int3   
   1400458af:	int3   
   1400458b0:	lea    rcx,[rdx+0x1c8]
   1400458b7:	jmp    0x14000638c
   1400458bc:	lea    rcx,[rdx+0x30]
   1400458c3:	jmp    0x14000638c
   1400458c8:	int3   
   1400458c9:	int3   
   1400458ca:	int3   
   1400458cb:	int3   
   1400458cc:	lea    rcx,[rdx+0x80]
   1400458d3:	jmp    0x14000638c
   1400458d8:	int3   
   1400458d9:	int3   
   1400458da:	int3   
   1400458db:	int3   
   1400458dc:	lea    rcx,[rdx+0x58]
   1400458e3:	jmp    0x14000638c
   1400458e8:	int3   
   1400458e9:	int3   
   1400458ea:	int3   
   1400458eb:	int3   
   1400458ec:	lea    rcx,[rdx+0x58]
   1400458f3:	jmp    0x14000638c
   1400458f8:	int3   
   1400458f9:	int3   
   1400458fa:	int3   
   1400458fb:	int3   
   1400458fc:	lea    rcx,[rdx+0xa8]
   140045903:	jmp    0x14000638c
   140045908:	int3   
   140045909:	int3   
   14004590a:	int3   
   14004590b:	int3   
   14004590c:	lea    rcx,[rdx+0x80]
   140045913:	jmp    0x14000638c
   140045918:	int3   
   140045919:	int3   
   14004591a:	int3   
   14004591b:	int3   
   14004591c:	lea    rcx,[rdx+0xd0]
   140045923:	jmp    0x14000638c
   140045928:	int3   
   140045929:	int3   
   14004592a:	int3   
   14004592b:	int3   
   14004592c:	lea    rcx,[rdx+0xf8]
   140045933:	jmp    0x14000638c
   140045938:	int3   
   140045939:	int3   
   14004593a:	int3   
   14004593b:	int3   
   14004593c:	lea    rcx,[rdx+0x58]
   140045943:	jmp    0x14000638c
   140045948:	lea    rcx,[rdx+0xa8]
   14004594f:	jmp    0x14000638c
   140045954:	int3   
   140045955:	int3   
   140045956:	int3   
   140045957:	int3   
   140045958:	lea    rcx,[rdx+0x58]
   14004595f:	jmp    0x14000638c
   140045964:	int3   
   140045965:	int3   
   140045966:	int3   
   140045967:	int3   
   140045968:	lea    rcx,[rdx+0x30]
   14004596f:	jmp    0x14000638c
   140045974:	int3   
   140045975:	int3   
   140045976:	int3   
   140045977:	int3   
   140045978:	lea    rcx,[rdx+0x80]
   14004597f:	jmp    0x14000638c
   140045984:	int3   
   140045985:	int3   
   140045986:	int3   
   140045987:	int3   
   140045988:	lea    rcx,[rdx+0x30]
   14004598f:	jmp    0x14000638c
   140045994:	int3   
   140045995:	int3   
   140045996:	int3   
   140045997:	int3   
   140045998:	lea    rcx,[rdx+0x80]
   14004599f:	jmp    0x14000638c
   1400459a4:	int3   
   1400459a5:	int3   
   1400459a6:	int3   
   1400459a7:	int3   
   1400459a8:	lea    rcx,[rdx+0x80]
   1400459af:	jmp    0x14000638c
   1400459b4:	int3   
   1400459b5:	int3   
   1400459b6:	int3   
   1400459b7:	int3   
   1400459b8:	lea    rcx,[rdx+0x30]
   1400459bf:	jmp    0x14000638c
   1400459c4:	int3   
   1400459c5:	int3   
   1400459c6:	int3   
   1400459c7:	int3   
   1400459c8:	lea    rcx,[rdx+0x80]
   1400459cf:	jmp    0x14000638c
   1400459d4:	int3   
   1400459d5:	int3   
   1400459d6:	int3   
   1400459d7:	int3   
   1400459d8:	lea    rcx,[rdx+0x30]
   1400459df:	jmp    0x14000638c
   1400459e4:	lea    rcx,[rdx+0xb0]
   1400459eb:	jmp    0x14000638c
   1400459f0:	int3   
   1400459f1:	int3   
   1400459f2:	int3   
   1400459f3:	int3   
   1400459f4:	lea    rcx,[rdx+0x88]
   1400459fb:	jmp    0x14000638c
   140045a00:	int3   
   140045a01:	int3   
   140045a02:	int3   
   140045a03:	int3   
   140045a04:	lea    rcx,[rdx+0x60]
   140045a0b:	jmp    0x14000638c
   140045a10:	int3   
   140045a11:	int3   
   140045a12:	int3   
   140045a13:	int3   
   140045a14:	lea    rcx,[rdx+0x38]
   140045a1b:	jmp    0x14000638c
   140045a20:	int3   
   140045a21:	int3   
   140045a22:	int3   
   140045a23:	int3   
   140045a24:	rex push rbp
   140045a26:	sub    rsp,0x20
   140045a2a:	mov    rbp,rdx
   140045a2d:	mov    eax,DWORD PTR [rbp+0x20]
   140045a30:	and    eax,0x1
   140045a33:	test   eax,eax
   140045a35:	je     0x140045a44
   140045a37:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140045a3b:	lea    rcx,[rbp+0x38]
   140045a3f:	call   0x14000638c
   140045a44:	add    rsp,0x20
   140045a48:	pop    rbp
   140045a49:	ret    
   140045a4a:	int3   
   140045a4b:	int3   
   140045a4c:	int3   
   140045a4d:	int3   
   140045a4e:	int3   
   140045a4f:	int3   
   140045a50:	int3   
   140045a51:	int3   
   140045a52:	int3   
   140045a53:	int3   
   140045a54:	rex push rbp
   140045a56:	sub    rsp,0x20
   140045a5a:	mov    rbp,rdx
   140045a5d:	mov    eax,DWORD PTR [rbp+0x20]
   140045a60:	and    eax,0x2
   140045a63:	test   eax,eax
   140045a65:	je     0x140045a74
   140045a67:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140045a6b:	lea    rcx,[rbp+0x60]
   140045a6f:	call   0x14000638c
   140045a74:	add    rsp,0x20
   140045a78:	pop    rbp
   140045a79:	ret    
   140045a7a:	lea    rcx,[rdx+0x58]
   140045a81:	jmp    0x14000638c
   140045a86:	lea    rcx,[rdx+0x70]
   140045a8d:	jmp    0x14000638c
   140045a92:	int3   
   140045a93:	int3   
   140045a94:	int3   
   140045a95:	int3   
   140045a96:	lea    rcx,[rdx+0x20]
   140045a9d:	jmp    0x14002161c
   140045aa2:	lea    rcx,[rdx+0xd0]
   140045aa9:	jmp    0x14000638c
   140045aae:	int3   
   140045aaf:	int3   
   140045ab0:	int3   
   140045ab1:	int3   
   140045ab2:	lea    rcx,[rdx+0x28]
   140045ab9:	jmp    0x14001d41c
   140045abe:	int3   
   140045abf:	int3   
   140045ac0:	int3   
   140045ac1:	int3   
   140045ac2:	lea    rcx,[rdx+0x90]
   140045ac9:	jmp    0x140021354
   140045ace:	lea    rcx,[rdx+0x28]
   140045ad5:	jmp    0x14001d41c
   140045ada:	int3   
   140045adb:	int3   
   140045adc:	int3   
   140045add:	int3   
   140045ade:	lea    rcx,[rdx+0x88]
   140045ae5:	jmp    0x1400214b8
   140045aea:	int3   
   140045aeb:	int3   
   140045aec:	int3   
   140045aed:	int3   
   140045aee:	lea    rcx,[rdx+0x28]
   140045af5:	jmp    0x14001d41c
   140045afa:	int3   
   140045afb:	int3   
   140045afc:	int3   
   140045afd:	int3   
   140045afe:	lea    rcx,[rdx+0x88]
   140045b05:	jmp    0x1400214b8
   140045b0a:	lea    rcx,[rdx+0xa8]
   140045b11:	jmp    0x14000638c
   140045b16:	int3   
   140045b17:	int3   
   140045b18:	int3   
   140045b19:	int3   
   140045b1a:	lea    rcx,[rdx+0x58]
   140045b21:	jmp    0x14000638c
   140045b26:	int3   
   140045b27:	int3   
   140045b28:	int3   
   140045b29:	int3   
   140045b2a:	rex push rbp
   140045b2c:	sub    rsp,0x20
   140045b30:	mov    rbp,rdx
   140045b33:	mov    eax,DWORD PTR [rbp+0x40]
   140045b36:	and    eax,0x1
   140045b39:	test   eax,eax
   140045b3b:	je     0x140045b4a
   140045b3d:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140045b41:	mov    rcx,QWORD PTR [rbp+0x50]
   140045b45:	call   0x14000638c
   140045b4a:	add    rsp,0x20
   140045b4e:	pop    rbp
   140045b4f:	ret    
   140045b50:	int3   
   140045b51:	int3   
   140045b52:	int3   
   140045b53:	int3   
   140045b54:	int3   
   140045b55:	int3   
   140045b56:	int3   
   140045b57:	int3   
   140045b58:	int3   
   140045b59:	int3   
   140045b5a:	lea    rcx,[rdx+0x30]
   140045b61:	jmp    0x14002161c
   140045b66:	int3   
   140045b67:	int3   
   140045b68:	int3   
   140045b69:	int3   
   140045b6a:	lea    rcx,[rdx+0xf8]
   140045b71:	jmp    0x14000638c
   140045b76:	int3   
   140045b77:	int3   
   140045b78:	int3   
   140045b79:	int3   
   140045b7a:	lea    rcx,[rdx+0x80]
   140045b81:	jmp    0x14000638c
   140045b86:	int3   
   140045b87:	int3   
   140045b88:	int3   
   140045b89:	int3   
   140045b8a:	lea    rcx,[rdx+0xd0]
   140045b91:	jmp    0x14000638c
   140045b96:	lea    rcx,[rdx+0x60]
   140045b9d:	jmp    0x14000638c
   140045ba2:	int3   
   140045ba3:	int3   
   140045ba4:	int3   
   140045ba5:	int3   
   140045ba6:	lea    rcx,[rdx+0x38]
   140045bad:	jmp    0x14000638c
   140045bb2:	int3   
   140045bb3:	int3   
   140045bb4:	int3   
   140045bb5:	int3   
   140045bb6:	lea    rcx,[rdx+0x88]
   140045bbd:	jmp    0x14000638c
   140045bc2:	int3   
   140045bc3:	int3   
   140045bc4:	int3   
   140045bc5:	int3   
   140045bc6:	lea    rcx,[rdx+0x60]
   140045bcd:	jmp    0x14000638c
   140045bd2:	int3   
   140045bd3:	int3   
   140045bd4:	int3   
   140045bd5:	int3   
   140045bd6:	lea    rcx,[rdx+0x38]
   140045bdd:	jmp    0x14000638c
   140045be2:	lea    rcx,[rdx+0x28]
   140045be9:	jmp    0x140018184
   140045bee:	int3   
   140045bef:	int3   
   140045bf0:	int3   
   140045bf1:	int3   
   140045bf2:	lea    rcx,[rdx+0x28]
   140045bf9:	jmp    0x140018184
   140045bfe:	mov    rcx,QWORD PTR [rdx+0x20]
   140045c05:	add    rcx,0x8
   140045c09:	jmp    0x14000638c
   140045c0e:	mov    rcx,QWORD PTR [rdx+0x20]
   140045c15:	add    rcx,0x30
   140045c19:	jmp    0x14000638c
   140045c1e:	lea    rcx,[rdx+0x58]
   140045c25:	jmp    0x14000638c
   140045c2a:	lea    rcx,[rdx+0x58]
   140045c31:	jmp    0x140018184
   140045c36:	int3   
   140045c37:	int3   
   140045c38:	int3   
   140045c39:	int3   
   140045c3a:	lea    rcx,[rdx+0x80]
   140045c41:	jmp    0x14000638c
   140045c46:	int3   
   140045c47:	int3   
   140045c48:	int3   
   140045c49:	int3   
   140045c4a:	lea    rcx,[rdx+0x30]
   140045c51:	jmp    0x14000638c
   140045c56:	lea    rcx,[rdx+0x30]
   140045c5d:	jmp    0x140018184
   140045c62:	rex push rbp
   140045c64:	sub    rsp,0x20
   140045c68:	mov    rbp,rdx
   140045c6b:	mov    eax,DWORD PTR [rbp+0x20]
   140045c6e:	and    eax,0x1
   140045c71:	test   eax,eax
   140045c73:	je     0x140045c82
   140045c75:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140045c79:	mov    rcx,QWORD PTR [rbp+0x28]
   140045c7d:	call   0x140018184
   140045c82:	add    rsp,0x20
   140045c86:	pop    rbp
   140045c87:	ret    
   140045c88:	int3   
   140045c89:	int3   
   140045c8a:	int3   
   140045c8b:	int3   
   140045c8c:	int3   
   140045c8d:	int3   
   140045c8e:	int3   
   140045c8f:	int3   
   140045c90:	int3   
   140045c91:	int3   
   140045c92:	lea    rcx,[rdx+0x38]
   140045c99:	jmp    0x140018184
   140045c9e:	mov    QWORD PTR [rsp+0x10],rdx
   140045ca3:	push   rbx
   140045ca4:	push   rbp
   140045ca5:	sub    rsp,0x28
   140045ca9:	mov    rbp,rdx
   140045cac:	mov    rbx,QWORD PTR [rbp+0x40]
   140045cb0:	jmp    0x140045cd8
   140045cb2:	cmp    QWORD PTR [rbx+0x18],0x8
   140045cb7:	jb     0x140045cc2
   140045cb9:	mov    rcx,QWORD PTR [rbx]
   140045cbc:	call   QWORD PTR [rip+0x39b6]        # 0x140049678
   140045cc2:	mov    QWORD PTR [rbx+0x18],0x7
   140045cca:	and    QWORD PTR [rbx+0x10],0x0
   140045ccf:	xor    eax,eax
   140045cd1:	mov    WORD PTR [rbx],ax
   140045cd4:	add    rbx,0x38
   140045cd8:	cmp    rbx,QWORD PTR [rbp+0x50]
   140045cdc:	jne    0x140045cb2
   140045cde:	xor    edx,edx
   140045ce0:	xor    ecx,ecx
   140045ce2:	call   0x14002b560
   140045ce7:	nop
   140045ce8:	lea    rcx,[rdx+0x28]
   140045cef:	jmp    0x140018184
   140045cf4:	mov    QWORD PTR [rsp+0x10],rdx
   140045cf9:	push   rbp
   140045cfa:	sub    rsp,0x20
   140045cfe:	mov    rbp,rdx
   140045d01:	mov    rcx,QWORD PTR [rbp+0x78]
   140045d05:	call   QWORD PTR [rip+0x396d]        # 0x140049678
   140045d0b:	xor    edx,edx
   140045d0d:	xor    ecx,ecx
   140045d0f:	call   0x14002b560
   140045d14:	nop
   140045d15:	rex push rbp
   140045d17:	sub    rsp,0x20
   140045d1b:	mov    rbp,rdx
   140045d1e:	mov    eax,DWORD PTR [rbp+0x60]
   140045d21:	and    eax,0x1
   140045d24:	test   eax,eax
   140045d26:	je     0x140045d35
   140045d28:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140045d2c:	mov    rcx,QWORD PTR [rbp+0x50]
   140045d30:	call   0x140018184
   140045d35:	add    rsp,0x20
   140045d39:	pop    rbp
   140045d3a:	ret    
   140045d3b:	lea    rcx,[rdx+0x30]
   140045d42:	jmp    0x14000638c
   140045d47:	int3   
   140045d48:	int3   
   140045d49:	int3   
   140045d4a:	int3   
   140045d4b:	lea    rcx,[rdx+0x30]
   140045d52:	jmp    0x14000638c
   140045d57:	int3   
   140045d58:	int3   
   140045d59:	int3   
   140045d5a:	int3   
   140045d5b:	lea    rcx,[rdx+0x30]
   140045d62:	jmp    0x14000638c
   140045d67:	rex push rbp
   140045d69:	sub    rsp,0x20
   140045d6d:	mov    rbp,rdx
   140045d70:	mov    eax,DWORD PTR [rbp+0x60]
   140045d73:	and    eax,0x1
   140045d76:	test   eax,eax
   140045d78:	je     0x140045d87
   140045d7a:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140045d7e:	mov    rcx,QWORD PTR [rbp+0x50]
   140045d82:	call   0x14000638c
   140045d87:	add    rsp,0x20
   140045d8b:	pop    rbp
   140045d8c:	ret    
   140045d8d:	mov    rcx,QWORD PTR [rdx+0x40]
   140045d94:	sub    rcx,0xb8
   140045d9b:	add    rcx,0x18
   140045d9f:	rex.W jmp QWORD PTR [rip+0x371a]        # 0x1400494c0
   140045da6:	lea    rcx,[rdx+0x30]
   140045dad:	jmp    0x140018184
   140045db2:	int3   
   140045db3:	int3   
   140045db4:	int3   
   140045db5:	int3   
   140045db6:	lea    rcx,[rdx+0x58]
   140045dbd:	jmp    0x140018184
   140045dc2:	int3   
   140045dc3:	int3   
   140045dc4:	int3   
   140045dc5:	int3   
   140045dc6:	lea    rcx,[rdx+0x58]
   140045dcd:	jmp    0x140018184
   140045dd2:	mov    rcx,QWORD PTR [rdx+0x28]
   140045dd9:	jmp    0x140011950
   140045dde:	int3   
   140045ddf:	int3   
   140045de0:	int3   
   140045de1:	int3   
   140045de2:	rex push rbp
   140045de4:	sub    rsp,0x20
   140045de8:	mov    rbp,rdx
   140045deb:	mov    eax,DWORD PTR [rbp+0x20]
   140045dee:	and    eax,0x1
   140045df1:	test   eax,eax
   140045df3:	je     0x140045e0a
   140045df5:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140045df9:	mov    rcx,QWORD PTR [rbp+0x30]
   140045dfd:	add    rcx,0xa8
   140045e04:	call   QWORD PTR [rip+0x34f6]        # 0x140049300
   140045e0a:	add    rsp,0x20
   140045e0e:	pop    rbp
   140045e0f:	ret    
   140045e10:	int3   
   140045e11:	int3   
   140045e12:	mov    rcx,QWORD PTR [rdx+0x30]
   140045e19:	add    rcx,0x8
   140045e1d:	rex.W jmp QWORD PTR [rip+0x34cc]        # 0x1400492f0
   140045e24:	int3   
   140045e25:	int3   
   140045e26:	int3   
   140045e27:	int3   
   140045e28:	int3   
   140045e29:	int3   
   140045e2a:	int3   
   140045e2b:	int3   
   140045e2c:	int3   
   140045e2d:	int3   
   140045e2e:	int3   
   140045e2f:	int3   
   140045e30:	int3   
   140045e31:	int3   
   140045e32:	mov    rcx,QWORD PTR [rdx+0x38]
   140045e39:	rex.W jmp QWORD PTR [rip+0x34f0]        # 0x140049330
   140045e40:	int3   
   140045e41:	int3   
   140045e42:	mov    rcx,QWORD PTR [rdx+0x28]
   140045e49:	add    rcx,0x8
   140045e4d:	jmp    0x1400028a4
   140045e52:	lea    rcx,[rdx+0x48]
   140045e59:	jmp    0x140018184
   140045e5e:	mov    QWORD PTR [rsp+0x10],rdx
   140045e63:	push   rbp
   140045e64:	sub    rsp,0x20
   140045e68:	mov    rbp,rdx
   140045e6b:	mov    rcx,QWORD PTR [rbp+0x60]
   140045e6f:	call   QWORD PTR [rip+0x3803]        # 0x140049678
   140045e75:	xor    edx,edx
   140045e77:	xor    ecx,ecx
   140045e79:	call   0x14002b560
   140045e7e:	nop
   140045e7f:	lea    rcx,[rdx+0x48]
   140045e86:	jmp    0x140018184
   140045e8b:	int3   
   140045e8c:	int3   
   140045e8d:	int3   
   140045e8e:	int3   
   140045e8f:	lea    rcx,[rdx+0x98]
   140045e96:	jmp    0x140018184
   140045e9b:	int3   
   140045e9c:	int3   
   140045e9d:	int3   
   140045e9e:	int3   
   140045e9f:	lea    rcx,[rdx+0x110]
   140045ea6:	jmp    0x140018184
   140045eab:	int3   
   140045eac:	int3   
   140045ead:	int3   
   140045eae:	int3   
   140045eaf:	lea    rcx,[rdx+0x70]
   140045eb6:	jmp    0x140018184
   140045ebb:	int3   
   140045ebc:	int3   
   140045ebd:	int3   
   140045ebe:	int3   
   140045ebf:	lea    rcx,[rdx+0xe8]
   140045ec6:	jmp    0x14000638c
   140045ecb:	int3   
   140045ecc:	int3   
   140045ecd:	int3   
   140045ece:	int3   
   140045ecf:	lea    rcx,[rdx+0xc0]
   140045ed6:	jmp    0x14000638c
   140045edb:	int3   
   140045edc:	int3   
   140045edd:	int3   
   140045ede:	int3   
   140045edf:	lea    rcx,[rdx+0xe8]
   140045ee6:	jmp    0x140018184
   140045eeb:	mov    QWORD PTR [rsp+0x10],rdx
   140045ef0:	push   rbx
   140045ef1:	push   rbp
   140045ef2:	sub    rsp,0x28
   140045ef6:	mov    rbp,rdx
   140045ef9:	mov    rcx,QWORD PTR [rbp+0x38]
   140045efd:	mov    rax,QWORD PTR [rcx]
   140045f00:	call   QWORD PTR [rax+0x8]
   140045f03:	mov    rbx,rax
   140045f06:	lea    rdx,[rip+0xae4b]        # 0x140050d58
   140045f0d:	mov    rcx,QWORD PTR [rip+0x36bc]        # 0x1400495d0
   140045f14:	call   0x140005e8c
   140045f19:	mov    rcx,rax
   140045f1c:	mov    rdx,rbx
   140045f1f:	call   0x140005e8c
   140045f24:	mov    rcx,rax
   140045f27:	mov    rdx,QWORD PTR [rip+0x355a]        # 0x140049488
   140045f2e:	call   QWORD PTR [rip+0x354c]        # 0x140049480
   140045f34:	nop
   140045f35:	lea    rax,[rip+0xfffffffffffc8d89]        # 0x14000ecc5
   140045f3c:	add    rsp,0x28
   140045f40:	pop    rbp
   140045f41:	pop    rbx
   140045f42:	ret    
   140045f43:	int3   
   140045f44:	int3   
   140045f45:	int3   
   140045f46:	int3   
   140045f47:	int3   
   140045f48:	int3   
   140045f49:	int3   
   140045f4a:	int3   
   140045f4b:	mov    QWORD PTR [rsp+0x10],rdx
   140045f50:	push   rbp
   140045f51:	sub    rsp,0x20
   140045f55:	mov    rbp,rdx
   140045f58:	mov    rcx,QWORD PTR [rbp+0x40]
   140045f5c:	mov    rax,QWORD PTR [rcx]
   140045f5f:	call   QWORD PTR [rax+0x8]
   140045f62:	mov    rdx,rax
   140045f65:	mov    rcx,QWORD PTR [rip+0x3664]        # 0x1400495d0
   140045f6c:	call   0x140005e8c
   140045f71:	mov    rcx,rax
   140045f74:	mov    rdx,QWORD PTR [rip+0x350d]        # 0x140049488
   140045f7b:	call   QWORD PTR [rip+0x34ff]        # 0x140049480
   140045f81:	nop
   140045f82:	lea    rax,[rip+0xfffffffffffc8d3c]        # 0x14000ecc5
   140045f89:	add    rsp,0x20
   140045f8d:	pop    rbp
   140045f8e:	ret    
   140045f8f:	int3   
   140045f90:	lea    rcx,[rdx+0x38]
   140045f97:	jmp    0x140018184
   140045f9c:	int3   
   140045f9d:	int3   
   140045f9e:	int3   
   140045f9f:	int3   
   140045fa0:	lea    rcx,[rdx+0x60]
   140045fa7:	jmp    0x140018184
   140045fac:	int3   
   140045fad:	int3   
   140045fae:	int3   
   140045faf:	int3   
   140045fb0:	lea    rcx,[rdx+0x38]
   140045fb7:	jmp    0x140018184
   140045fbc:	int3   
   140045fbd:	int3   
   140045fbe:	int3   
   140045fbf:	int3   
   140045fc0:	lea    rcx,[rdx+0x60]
   140045fc7:	jmp    0x140018184
   140045fcc:	lea    rcx,[rdx+0x70]
   140045fd3:	jmp    0x14000e398
   140045fd8:	int3   
   140045fd9:	int3   
   140045fda:	int3   
   140045fdb:	int3   
   140045fdc:	lea    rcx,[rdx+0x70]
   140045fe3:	jmp    0x14000e398
   140045fe8:	int3   
   140045fe9:	int3   
   140045fea:	int3   
   140045feb:	int3   
   140045fec:	lea    rcx,[rdx+0x90]
   140045ff3:	jmp    0x140018184
   140045ff8:	lea    rcx,[rdx+0xa8]
   140045fff:	jmp    0x140018184
   140046004:	int3   
   140046005:	int3   
   140046006:	int3   
   140046007:	int3   
   140046008:	lea    rcx,[rdx+0x58]
   14004600f:	jmp    0x140018184
   140046014:	int3   
   140046015:	int3   
   140046016:	int3   
   140046017:	int3   
   140046018:	lea    rcx,[rdx+0x80]
   14004601f:	jmp    0x140018184
   140046024:	int3   
   140046025:	int3   
   140046026:	int3   
   140046027:	int3   
   140046028:	lea    rcx,[rdx+0x30]
   14004602f:	jmp    0x140018184
   140046034:	mov    QWORD PTR [rsp+0x10],rdx
   140046039:	push   rbx
   14004603a:	push   rbp
   14004603b:	sub    rsp,0x28
   14004603f:	mov    rbp,rdx
   140046042:	mov    rbx,QWORD PTR [rbp+0x40]
   140046046:	jmp    0x140046054
   140046048:	mov    rcx,rbx
   14004604b:	call   0x14000638c
   140046050:	add    rbx,0x28
   140046054:	cmp    rbx,QWORD PTR [rbp+0x50]
   140046058:	jne    0x140046048
   14004605a:	xor    edx,edx
   14004605c:	xor    ecx,ecx
   14004605e:	call   0x14002b560
   140046063:	nop
   140046064:	rex push rbp
   140046066:	sub    rsp,0x20
   14004606a:	mov    rbp,rdx
   14004606d:	mov    rdx,QWORD PTR [rbp+0x60]
   140046071:	mov    rcx,QWORD PTR [rbp+0x58]
   140046075:	call   0x14001195c
   14004607a:	add    rsp,0x20
   14004607e:	pop    rbp
   14004607f:	ret    
   140046080:	int3   
   140046081:	int3   
   140046082:	int3   
   140046083:	int3   
   140046084:	mov    rcx,QWORD PTR [rdx+0x58]
   14004608b:	jmp    0x14000638c
   140046090:	int3   
   140046091:	int3   
   140046092:	int3   
   140046093:	int3   
   140046094:	mov    QWORD PTR [rsp+0x10],rdx
   140046099:	push   rbx
   14004609a:	push   rbp
   14004609b:	sub    rsp,0x28
   14004609f:	mov    rbp,rdx
   1400460a2:	mov    rbx,QWORD PTR [rbp+0x50]
   1400460a6:	jmp    0x1400460b4
   1400460a8:	mov    rcx,rbx
   1400460ab:	call   0x140002da8
   1400460b0:	add    rbx,0x50
   1400460b4:	cmp    rbx,QWORD PTR [rbp+0x60]
   1400460b8:	jne    0x1400460a8
   1400460ba:	xor    edx,edx
   1400460bc:	xor    ecx,ecx
   1400460be:	call   0x14002b560
   1400460c3:	nop
   1400460c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400460c9:	push   rbp
   1400460ca:	sub    rsp,0x20
   1400460ce:	mov    rbp,rdx
   1400460d1:	mov    rcx,QWORD PTR [rbp+0x68]
   1400460d5:	call   QWORD PTR [rip+0x359d]        # 0x140049678
   1400460db:	xor    edx,edx
   1400460dd:	xor    ecx,ecx
   1400460df:	call   0x14002b560
   1400460e4:	nop
   1400460e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400460ea:	push   rbp
   1400460eb:	sub    rsp,0x20
   1400460ef:	mov    rbp,rdx
   1400460f2:	mov    rcx,QWORD PTR [rbp+0x68]
   1400460f6:	call   QWORD PTR [rip+0x357c]        # 0x140049678
   1400460fc:	xor    edx,edx
   1400460fe:	xor    ecx,ecx
   140046100:	call   0x14002b560
   140046105:	nop
   140046106:	lea    rcx,[rdx+0x40]
   14004610d:	jmp    0x140002da8
   140046112:	int3   
   140046113:	int3   
   140046114:	int3   
   140046115:	int3   
   140046116:	lea    rcx,[rdx+0x90]
   14004611d:	jmp    0x14000638c
   140046122:	int3   
   140046123:	int3   
   140046124:	int3   
   140046125:	int3   
   140046126:	lea    rcx,[rdx+0xb8]
   14004612d:	jmp    0x14000638c
   140046132:	int3   
   140046133:	int3   
   140046134:	int3   
   140046135:	int3   
   140046136:	rex push rbp
   140046138:	sub    rsp,0x20
   14004613c:	mov    rbp,rdx
   14004613f:	mov    rdx,QWORD PTR [rbp+0x28]
   140046143:	mov    rcx,QWORD PTR [rbp+0x20]
   140046147:	call   0x14001195c
   14004614c:	add    rsp,0x20
   140046150:	pop    rbp
   140046151:	ret    
   140046152:	int3   
   140046153:	int3   
   140046154:	int3   
   140046155:	int3   
   140046156:	mov    rcx,QWORD PTR [rdx+0x20]
   14004615d:	jmp    0x14000638c
   140046162:	int3   
   140046163:	int3   
   140046164:	int3   
   140046165:	int3   
   140046166:	rex push rbp
   140046168:	sub    rsp,0x20
   14004616c:	mov    rbp,rdx
   14004616f:	mov    rdx,QWORD PTR [rbp+0x20]
   140046173:	mov    rcx,QWORD PTR [rbp+0x28]
   140046177:	call   0x14001195c
   14004617c:	add    rsp,0x20
   140046180:	pop    rbp
   140046181:	ret    
   140046182:	int3   
   140046183:	int3   
   140046184:	int3   
   140046185:	int3   
   140046186:	mov    rcx,QWORD PTR [rdx+0x28]
   14004618d:	jmp    0x14000638c
   140046192:	lea    rcx,[rdx+0x30]
   140046199:	jmp    0x140002070
   14004619e:	int3   
   14004619f:	int3   
   1400461a0:	int3   
   1400461a1:	int3   
   1400461a2:	lea    rcx,[rdx+0x140]
   1400461a9:	jmp    0x14000638c
   1400461ae:	int3   
   1400461af:	int3   
   1400461b0:	int3   
   1400461b1:	int3   
   1400461b2:	lea    rcx,[rdx+0x168]
   1400461b9:	jmp    0x14000638c
   1400461be:	lea    rcx,[rdx+0x30]
   1400461c5:	jmp    0x14001470c
   1400461ca:	int3   
   1400461cb:	int3   
   1400461cc:	int3   
   1400461cd:	int3   
   1400461ce:	rex push rbp
   1400461d0:	sub    rsp,0x20
   1400461d4:	mov    rbp,rdx
   1400461d7:	mov    eax,DWORD PTR [rbp+0x160]
   1400461dd:	and    eax,0x1
   1400461e0:	test   eax,eax
   1400461e2:	je     0x1400461f7
   1400461e4:	and    DWORD PTR [rbp+0x160],0xfffffffe
   1400461eb:	mov    rcx,QWORD PTR [rbp+0x150]
   1400461f2:	call   0x14000638c
   1400461f7:	add    rsp,0x20
   1400461fb:	pop    rbp
   1400461fc:	ret    
   1400461fd:	int3   
   1400461fe:	mov    rcx,QWORD PTR [rdx+0x168]
   140046205:	sub    rcx,0x98
   14004620c:	add    rcx,0x18
   140046210:	rex.W jmp QWORD PTR [rip+0x32a9]        # 0x1400494c0
   140046217:	lea    rcx,[rdx+0x78]
   14004621e:	jmp    0x140018184
   140046223:	int3   
   140046224:	int3   
   140046225:	int3   
   140046226:	int3   
   140046227:	lea    rcx,[rdx+0x50]
   14004622e:	jmp    0x140018184
   140046233:	int3   
   140046234:	int3   
   140046235:	int3   
   140046236:	int3   
   140046237:	lea    rcx,[rdx+0x28]
   14004623e:	jmp    0x140018184
   140046243:	int3   
   140046244:	int3   
   140046245:	int3   
   140046246:	int3   
   140046247:	lea    rcx,[rdx+0x50]
   14004624e:	jmp    0x140018184
   140046253:	int3   
   140046254:	int3   
   140046255:	int3   
   140046256:	int3   
   140046257:	lea    rcx,[rdx+0x28]
   14004625e:	jmp    0x140018184
   140046263:	lea    rcx,[rdx+0x168]
   14004626a:	jmp    0x14000638c
   14004626f:	int3   
   140046270:	int3   
   140046271:	int3   
   140046272:	int3   
   140046273:	lea    rcx,[rdx+0x50]
   14004627a:	jmp    0x140018184
   14004627f:	int3   
   140046280:	int3   
   140046281:	int3   
   140046282:	int3   
   140046283:	lea    rcx,[rdx+0x78]
   14004628a:	jmp    0x140018184
   14004628f:	int3   
   140046290:	int3   
   140046291:	int3   
   140046292:	int3   
   140046293:	lea    rcx,[rdx+0x28]
   14004629a:	jmp    0x140018184
   14004629f:	int3   
   1400462a0:	int3   
   1400462a1:	int3   
   1400462a2:	int3   
   1400462a3:	lea    rcx,[rdx+0xa0]
   1400462aa:	jmp    0x140018184
   1400462af:	int3   
   1400462b0:	int3   
   1400462b1:	int3   
   1400462b2:	int3   
   1400462b3:	lea    rcx,[rdx+0xc8]
   1400462ba:	jmp    0x140018184
   1400462bf:	int3   
   1400462c0:	int3   
   1400462c1:	int3   
   1400462c2:	int3   
   1400462c3:	lea    rcx,[rdx+0x190]
   1400462ca:	jmp    0x140018184
   1400462cf:	int3   
   1400462d0:	int3   
   1400462d1:	int3   
   1400462d2:	int3   
   1400462d3:	lea    rcx,[rdx+0x118]
   1400462da:	jmp    0x140018184
   1400462df:	int3   
   1400462e0:	int3   
   1400462e1:	int3   
   1400462e2:	int3   
   1400462e3:	lea    rcx,[rdx+0x140]
   1400462ea:	jmp    0x140018184
   1400462ef:	int3   
   1400462f0:	int3   
   1400462f1:	int3   
   1400462f2:	int3   
   1400462f3:	lea    rcx,[rdx+0xf0]
   1400462fa:	jmp    0x140018184
   1400462ff:	lea    rcx,[rdx+0x350]
   140046306:	jmp    0x14000638c
   14004630b:	int3   
   14004630c:	int3   
   14004630d:	int3   
   14004630e:	int3   
   14004630f:	lea    rcx,[rdx+0x260]
   140046316:	jmp    0x140018184
   14004631b:	int3   
   14004631c:	int3   
   14004631d:	int3   
   14004631e:	int3   
   14004631f:	lea    rcx,[rdx+0x300]
   140046326:	jmp    0x140018184
   14004632b:	int3   
   14004632c:	int3   
   14004632d:	int3   
   14004632e:	int3   
   14004632f:	lea    rcx,[rdx+0x288]
   140046336:	jmp    0x140018184
   14004633b:	int3   
   14004633c:	int3   
   14004633d:	int3   
   14004633e:	int3   
   14004633f:	lea    rcx,[rdx+0x150]
   140046346:	jmp    0x140002070
   14004634b:	int3   
   14004634c:	int3   
   14004634d:	int3   
   14004634e:	int3   
   14004634f:	lea    rcx,[rdx+0x2b0]
   140046356:	jmp    0x14000638c
   14004635b:	int3   
   14004635c:	int3   
   14004635d:	int3   
   14004635e:	int3   
   14004635f:	lea    rcx,[rdx+0x50]
   140046366:	jmp    0x14001470c
   14004636b:	int3   
   14004636c:	int3   
   14004636d:	int3   
   14004636e:	int3   
   14004636f:	lea    rcx,[rdx+0x328]
   140046376:	jmp    0x14000638c
   14004637b:	int3   
   14004637c:	int3   
   14004637d:	int3   
   14004637e:	int3   
   14004637f:	mov    rcx,QWORD PTR [rdx+0x20]
   140046386:	sub    rcx,0x98
   14004638d:	add    rcx,0x18
   140046391:	rex.W jmp QWORD PTR [rip+0x3128]        # 0x1400494c0
   140046398:	int3   
   140046399:	int3   
   14004639a:	int3   
   14004639b:	int3   
   14004639c:	int3   
   14004639d:	int3   
   14004639e:	int3   
   14004639f:	lea    rcx,[rdx+0x2d8]
   1400463a6:	jmp    0x14000638c
   1400463ab:	int3   
   1400463ac:	int3   
   1400463ad:	int3   
   1400463ae:	int3   
   1400463af:	lea    rcx,[rdx+0x4e0]
   1400463b6:	jmp    0x14000638c
   1400463bb:	int3   
   1400463bc:	int3   
   1400463bd:	int3   
   1400463be:	int3   
   1400463bf:	lea    rcx,[rdx+0x260]
   1400463c6:	jmp    0x14000638c
   1400463cb:	int3   
   1400463cc:	int3   
   1400463cd:	int3   
   1400463ce:	int3   
   1400463cf:	lea    rcx,[rdx+0x328]
   1400463d6:	jmp    0x14000638c
   1400463db:	int3   
   1400463dc:	int3   
   1400463dd:	int3   
   1400463de:	int3   
   1400463df:	lea    rcx,[rdx+0x3a0]
   1400463e6:	jmp    0x14000638c
   1400463eb:	int3   
   1400463ec:	int3   
   1400463ed:	int3   
   1400463ee:	int3   
   1400463ef:	lea    rcx,[rdx+0x440]
   1400463f6:	jmp    0x14000638c
   1400463fb:	int3   
   1400463fc:	int3   
   1400463fd:	int3   
   1400463fe:	int3   
   1400463ff:	lea    rcx,[rdx+0x418]
   140046406:	jmp    0x14000638c
   14004640b:	int3   
   14004640c:	int3   
   14004640d:	int3   
   14004640e:	int3   
   14004640f:	lea    rcx,[rdx+0x468]
   140046416:	jmp    0x14000638c
   14004641b:	int3   
   14004641c:	int3   
   14004641d:	int3   
   14004641e:	int3   
   14004641f:	lea    rcx,[rdx+0x3c8]
   140046426:	jmp    0x14000638c
   14004642b:	int3   
   14004642c:	int3   
   14004642d:	int3   
   14004642e:	int3   
   14004642f:	lea    rcx,[rdx+0x490]
   140046436:	jmp    0x14000638c
   14004643b:	int3   
   14004643c:	int3   
   14004643d:	int3   
   14004643e:	int3   
   14004643f:	lea    rcx,[rdx+0x4b8]
   140046446:	jmp    0x14000638c
   14004644b:	int3   
   14004644c:	int3   
   14004644d:	int3   
   14004644e:	int3   
   14004644f:	lea    rcx,[rdx+0x378]
   140046456:	jmp    0x14000638c
   14004645b:	int3   
   14004645c:	int3   
   14004645d:	int3   
   14004645e:	int3   
   14004645f:	lea    rcx,[rdx+0x3f0]
   140046466:	jmp    0x14000638c
   14004646b:	mov    rcx,QWORD PTR [rdx+0x40]
   140046472:	add    rcx,0x8
   140046476:	jmp    0x140001384
   14004647b:	mov    rcx,QWORD PTR [rdx+0x40]
   140046482:	add    rcx,0x28
   140046486:	jmp    0x14000638c
   14004648b:	mov    rcx,QWORD PTR [rdx+0x40]
   140046492:	jmp    0x140010de0
   140046497:	lea    rcx,[rdx+0x30]
   14004649e:	jmp    0x14000638c
   1400464a3:	int3   
   1400464a4:	int3   
   1400464a5:	int3   
   1400464a6:	int3   
   1400464a7:	lea    rcx,[rdx+0x60]
   1400464ae:	jmp    0x14000638c
   1400464b3:	int3   
   1400464b4:	int3   
   1400464b5:	int3   
   1400464b6:	int3   
   1400464b7:	lea    rcx,[rdx+0x60]
   1400464be:	add    rcx,0x28
   1400464c2:	jmp    0x14000638c
   1400464c7:	lea    rcx,[rdx+0x60]
   1400464ce:	jmp    0x140002da8
   1400464d3:	int3   
   1400464d4:	int3   
   1400464d5:	int3   
   1400464d6:	int3   
   1400464d7:	lea    rcx,[rdx+0xc0]
   1400464de:	jmp    0x1400207e4
   1400464e3:	int3   
   1400464e4:	int3   
   1400464e5:	int3   
   1400464e6:	int3   
   1400464e7:	lea    rcx,[rdx+0x130]
   1400464ee:	jmp    0x140020838
   1400464f3:	lea    rcx,[rdx+0x40]
   1400464fa:	jmp    0x14001d41c
   1400464ff:	int3   
   140046500:	int3   
   140046501:	int3   
   140046502:	int3   
   140046503:	lea    rcx,[rdx+0xa0]
   14004650a:	jmp    0x140021038
   14004650f:	mov    rcx,QWORD PTR [rdx+0x28]
   140046516:	jmp    0x14000638c
   14004651b:	lea    rcx,[rdx+0x88]
   140046522:	jmp    0x140018184
   140046527:	int3   
   140046528:	int3   
   140046529:	int3   
   14004652a:	int3   
   14004652b:	lea    rcx,[rdx+0x60]
   140046532:	jmp    0x140018184
   140046537:	rex push rbp
   140046539:	sub    rsp,0x20
   14004653d:	mov    rbp,rdx
   140046540:	mov    eax,DWORD PTR [rbp+0x38]
   140046543:	and    eax,0x1
   140046546:	test   eax,eax
   140046548:	je     0x14004655f
   14004654a:	and    DWORD PTR [rbp+0x38],0xfffffffe
   14004654e:	lea    rcx,[rbp+0x50]
   140046552:	add    rcx,0x98
   140046559:	call   QWORD PTR [rip+0x2ea1]        # 0x140049400
   14004655f:	add    rsp,0x20
   140046563:	pop    rbp
   140046564:	ret    
   140046565:	int3   
   140046566:	int3   
   140046567:	lea    rcx,[rdx+0x50]
   14004656e:	add    rcx,0x18
   140046572:	rex.W jmp QWORD PTR [rip+0x2fb7]        # 0x140049530
   140046579:	int3   
   14004657a:	int3   
   14004657b:	int3   
   14004657c:	int3   
   14004657d:	int3   
   14004657e:	int3   
   14004657f:	int3   
   140046580:	int3   
   140046581:	int3   
   140046582:	int3   
   140046583:	int3   
   140046584:	int3   
   140046585:	int3   
   140046586:	int3   
   140046587:	mov    rcx,QWORD PTR [rdx+0x178]
   14004658e:	rex.W jmp QWORD PTR [rip+0x2ebb]        # 0x140049450
   140046595:	int3   
   140046596:	int3   
   140046597:	lea    rcx,[rdx+0x50]
   14004659e:	jmp    0x14001cb40
   1400465a3:	int3   
   1400465a4:	int3   
   1400465a5:	int3   
   1400465a6:	int3   
   1400465a7:	lea    rcx,[rdx+0x150]
   1400465ae:	jmp    0x140018184
   1400465b3:	int3   
   1400465b4:	int3   
   1400465b5:	int3   
   1400465b6:	int3   
   1400465b7:	mov    rcx,QWORD PTR [rdx+0x38]
   1400465be:	sub    rcx,0x98
   1400465c5:	add    rcx,0x18
   1400465c9:	rex.W jmp QWORD PTR [rip+0x2f60]        # 0x140049530
   1400465d0:	lea    rcx,[rdx+0x20]
   1400465d7:	jmp    0x14001c85c
   1400465dc:	int3   
   1400465dd:	int3   
   1400465de:	int3   
   1400465df:	int3   
   1400465e0:	lea    rcx,[rdx+0x38]
   1400465e7:	jmp    0x140018184
   1400465ec:	int3   
   1400465ed:	int3   
   1400465ee:	int3   
   1400465ef:	int3   
   1400465f0:	lea    rcx,[rdx+0x38]
   1400465f7:	jmp    0x140018184
   1400465fc:	lea    rcx,[rdx+0x28]
   140046603:	jmp    0x140018184
   140046608:	int3   
   140046609:	int3   
   14004660a:	int3   
   14004660b:	int3   
   14004660c:	lea    rcx,[rdx+0x50]
   140046613:	jmp    0x140018184
   140046618:	lea    rcx,[rdx+0x38]
   14004661f:	jmp    0x14000638c
   140046624:	int3   
   140046625:	int3   
   140046626:	int3   
   140046627:	int3   
   140046628:	rex push rbp
   14004662a:	sub    rsp,0x20
   14004662e:	mov    rbp,rdx
   140046631:	mov    eax,DWORD PTR [rbp+0x20]
   140046634:	and    eax,0x1
   140046637:	test   eax,eax
   140046639:	je     0x140046648
   14004663b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14004663f:	mov    rcx,QWORD PTR [rbp+0x30]
   140046643:	call   0x14000638c
   140046648:	add    rsp,0x20
   14004664c:	pop    rbp
   14004664d:	ret    
   14004664e:	lea    rcx,[rdx+0x198]
   140046655:	jmp    0x14000638c
   14004665a:	int3   
   14004665b:	int3   
   14004665c:	int3   
   14004665d:	int3   
   14004665e:	lea    rcx,[rdx+0x148]
   140046665:	jmp    0x14000638c
   14004666a:	int3   
   14004666b:	int3   
   14004666c:	int3   
   14004666d:	int3   
   14004666e:	lea    rcx,[rdx+0xf8]
   140046675:	jmp    0x14000638c
   14004667a:	int3   
   14004667b:	int3   
   14004667c:	int3   
   14004667d:	int3   
   14004667e:	lea    rcx,[rdx+0xa8]
   140046685:	jmp    0x14000638c
   14004668a:	int3   
   14004668b:	int3   
   14004668c:	int3   
   14004668d:	int3   
   14004668e:	lea    rcx,[rdx+0x58]
   140046695:	jmp    0x14000638c
   14004669a:	int3   
   14004669b:	int3   
   14004669c:	int3   
   14004669d:	int3   
   14004669e:	lea    rcx,[rdx+0x120]
   1400466a5:	jmp    0x14000638c
   1400466aa:	int3   
   1400466ab:	int3   
   1400466ac:	int3   
   1400466ad:	int3   
   1400466ae:	lea    rcx,[rdx+0x30]
   1400466b5:	jmp    0x14000638c
   1400466ba:	int3   
   1400466bb:	int3   
   1400466bc:	int3   
   1400466bd:	int3   
   1400466be:	lea    rcx,[rdx+0xd0]
   1400466c5:	jmp    0x14000638c
   1400466ca:	int3   
   1400466cb:	int3   
   1400466cc:	int3   
   1400466cd:	int3   
   1400466ce:	lea    rcx,[rdx+0x1c0]
   1400466d5:	jmp    0x14000638c
   1400466da:	int3   
   1400466db:	int3   
   1400466dc:	int3   
   1400466dd:	int3   
   1400466de:	lea    rcx,[rdx+0x80]
   1400466e5:	jmp    0x14000638c
   1400466ea:	int3   
   1400466eb:	int3   
   1400466ec:	int3   
   1400466ed:	int3   
   1400466ee:	lea    rcx,[rdx+0x170]
   1400466f5:	jmp    0x14000638c
   1400466fa:	int3   
   1400466fb:	int3   
   1400466fc:	int3   
   1400466fd:	int3   
   1400466fe:	lea    rcx,[rdx+0x1e8]
   140046705:	jmp    0x14000638c
   14004670a:	rex push rbp
   14004670c:	sub    rsp,0x20
   140046710:	mov    rbp,rdx
   140046713:	mov    eax,DWORD PTR [rbp+0x20]
   140046716:	and    eax,0x1
   140046719:	test   eax,eax
   14004671b:	je     0x14004672a
   14004671d:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140046721:	mov    rcx,QWORD PTR [rbp+0x28]
   140046725:	call   0x14000638c
   14004672a:	add    rsp,0x20
   14004672e:	pop    rbp
   14004672f:	ret    
   140046730:	int3   
   140046731:	int3   
   140046732:	int3   
   140046733:	int3   
   140046734:	int3   
   140046735:	int3   
   140046736:	int3   
   140046737:	int3   
   140046738:	int3   
   140046739:	int3   
   14004673a:	lea    rcx,[rdx+0x88]
   140046741:	jmp    0x14000638c
   140046746:	int3   
   140046747:	int3   
   140046748:	int3   
   140046749:	int3   
   14004674a:	lea    rcx,[rdx+0x60]
   140046751:	jmp    0x14000638c
   140046756:	int3   
   140046757:	int3   
   140046758:	int3   
   140046759:	int3   
   14004675a:	lea    rcx,[rdx+0x38]
   140046761:	jmp    0x14000638c
   140046766:	mov    rcx,QWORD PTR [rdx+0x40]
   14004676d:	jmp    0x140011950
   140046772:	int3   
   140046773:	int3   
   140046774:	int3   
   140046775:	int3   
   140046776:	mov    rcx,QWORD PTR [rdx+0x40]
   14004677d:	add    rcx,0x8
   140046781:	jmp    0x1400028a4
   140046786:	lea    rcx,[rdx+0x40]
   14004678d:	jmp    0x140018184
   140046792:	int3   
   140046793:	int3   
   140046794:	int3   
   140046795:	int3   
   140046796:	lea    rcx,[rdx+0x90]
   14004679d:	jmp    0x140018184
   1400467a2:	int3   
   1400467a3:	int3   
   1400467a4:	int3   
   1400467a5:	int3   
   1400467a6:	lea    rcx,[rdx+0xb8]
   1400467ad:	jmp    0x140018184
   1400467b2:	int3   
   1400467b3:	int3   
   1400467b4:	int3   
   1400467b5:	int3   
   1400467b6:	lea    rcx,[rdx+0x68]
   1400467bd:	jmp    0x140018184
   1400467c2:	mov    rcx,QWORD PTR [rdx+0x50]
   1400467c9:	rex.W jmp QWORD PTR [rip+0x2ea8]        # 0x140049678
   1400467d0:	rex push rbp
   1400467d2:	sub    rsp,0x20
   1400467d6:	mov    rbp,rdx
   1400467d9:	mov    rdx,QWORD PTR [rbp+0x40]
   1400467dd:	mov    rcx,QWORD PTR [rbp+0x48]
   1400467e1:	call   0x14001195c
   1400467e6:	add    rsp,0x20
   1400467ea:	pop    rbp
   1400467eb:	ret    
   1400467ec:	int3   
   1400467ed:	int3   
   1400467ee:	int3   
   1400467ef:	int3   
   1400467f0:	rex push rbp
   1400467f2:	sub    rsp,0x20
   1400467f6:	mov    rbp,rdx
   1400467f9:	mov    rdx,QWORD PTR [rbp+0x40]
   1400467fd:	mov    rcx,QWORD PTR [rbp+0x48]
   140046801:	call   0x14001195c
   140046806:	add    rsp,0x20
   14004680a:	pop    rbp
   14004680b:	ret    
   14004680c:	lea    rcx,[rdx+0xa0]
   140046813:	jmp    0x14000638c
   140046818:	int3   
   140046819:	int3   
   14004681a:	int3   
   14004681b:	int3   
   14004681c:	lea    rcx,[rdx+0x50]
   140046823:	jmp    0x14000638c
   140046828:	int3   
   140046829:	int3   
   14004682a:	int3   
   14004682b:	int3   
   14004682c:	lea    rcx,[rdx+0x28]
   140046833:	jmp    0x14000638c
   140046838:	int3   
   140046839:	int3   
   14004683a:	int3   
   14004683b:	int3   
   14004683c:	lea    rcx,[rdx+0x78]
   140046843:	jmp    0x14000638c
   140046848:	lea    rcx,[rdx+0x20]
   14004684f:	jmp    0x14001c85c
   140046854:	int3   
   140046855:	int3   
   140046856:	int3   
   140046857:	int3   
   140046858:	lea    rcx,[rdx+0x38]
   14004685f:	jmp    0x140018184
   140046864:	int3   
   140046865:	int3   
   140046866:	int3   
   140046867:	int3   
   140046868:	lea    rcx,[rdx+0x60]
   14004686f:	jmp    0x140018184
   140046874:	int3   
   140046875:	int3   
   140046876:	int3   
   140046877:	int3   
   140046878:	lea    rcx,[rdx+0x60]
   14004687f:	jmp    0x140018184
   140046884:	int3   
   140046885:	int3   
   140046886:	int3   
   140046887:	int3   
   140046888:	lea    rcx,[rdx+0x60]
   14004688f:	jmp    0x14000638c
   140046894:	int3   
   140046895:	int3   
   140046896:	int3   
   140046897:	int3   
   140046898:	lea    rcx,[rdx+0x88]
   14004689f:	jmp    0x140018184
   1400468a4:	int3   
   1400468a5:	int3   
   1400468a6:	int3   
   1400468a7:	int3   
   1400468a8:	lea    rcx,[rdx+0xb0]
   1400468af:	jmp    0x140018184
   1400468b4:	lea    rcx,[rdx+0x30]
   1400468bb:	jmp    0x140018184
   1400468c0:	int3   
   1400468c1:	int3   
   1400468c2:	int3   
   1400468c3:	int3   
   1400468c4:	lea    rcx,[rdx+0xa8]
   1400468cb:	jmp    0x140018184
   1400468d0:	int3   
   1400468d1:	int3   
   1400468d2:	int3   
   1400468d3:	int3   
   1400468d4:	lea    rcx,[rdx+0x58]
   1400468db:	jmp    0x140018184
   1400468e0:	int3   
   1400468e1:	int3   
   1400468e2:	int3   
   1400468e3:	int3   
   1400468e4:	lea    rcx,[rdx+0x30]
   1400468eb:	jmp    0x140018184
   1400468f0:	int3   
   1400468f1:	int3   
   1400468f2:	int3   
   1400468f3:	int3   
   1400468f4:	lea    rcx,[rdx+0x80]
   1400468fb:	jmp    0x140018184
   140046900:	mov    rcx,QWORD PTR [rdx+0x50]
   140046907:	jmp    0x140007774
   14004690c:	int3   
   14004690d:	int3   
   14004690e:	int3   
   14004690f:	int3   
   140046910:	mov    rcx,QWORD PTR [rdx+0x40]
   140046917:	jmp    0x140007774
   14004691c:	int3   
   14004691d:	int3   
   14004691e:	int3   
   14004691f:	int3   
   140046920:	lea    rcx,[rdx+0x58]
   140046927:	jmp    0x14000638c
   14004692c:	int3   
   14004692d:	int3   
   14004692e:	int3   
   14004692f:	int3   
   140046930:	mov    QWORD PTR [rsp+0x10],rdx
   140046935:	push   rbx
   140046936:	push   rbp
   140046937:	push   rsi
   140046938:	push   rdi
   140046939:	push   r12
   14004693b:	sub    rsp,0x20
   14004693f:	mov    rbp,rdx
   140046942:	mov    r12,QWORD PTR [rbp+0x38]
   140046946:	mov    rdi,QWORD PTR [r12+0x8]
   14004694b:	mov    rax,QWORD PTR [rbp+0x30]
   14004694f:	lea    rcx,[rax+rax*4]
   140046953:	mov    rax,QWORD PTR [r12]
   140046957:	lea    rbx,[rax+rcx*8]
   14004695b:	cmp    rbx,rdi
   14004695e:	je     0x1400469a3
   140046960:	mov    rsi,rdi
   140046963:	cmp    rdi,rdi
   140046966:	je     0x140046980
   140046968:	mov    rdx,rsi
   14004696b:	mov    rcx,rbx
   14004696e:	call   0x140004730
   140046973:	add    rbx,0x28
   140046977:	add    rsi,0x28
   14004697b:	cmp    rsi,rdi
   14004697e:	jne    0x140046968
   140046980:	mov    rsi,QWORD PTR [r12+0x8]
   140046985:	mov    rdi,rbx
   140046988:	cmp    rbx,rsi
   14004698b:	je     0x14004699e
   14004698d:	mov    rcx,rdi
   140046990:	call   0x14000638c
   140046995:	add    rdi,0x28
   140046999:	cmp    rdi,rsi
   14004699c:	jne    0x14004698d
   14004699e:	mov    QWORD PTR [r12+0x8],rbx
   1400469a3:	xor    edx,edx
   1400469a5:	xor    ecx,ecx
   1400469a7:	call   0x14002b560
   1400469ac:	nop
   1400469ad:	mov    rcx,QWORD PTR [rdx+0x1f0]
   1400469b4:	jmp    0x140007774
   1400469b9:	int3   
   1400469ba:	int3   
   1400469bb:	int3   
   1400469bc:	int3   
   1400469bd:	mov    rcx,QWORD PTR [rdx+0x1e8]
   1400469c4:	jmp    0x140007774
   1400469c9:	int3   
   1400469ca:	int3   
   1400469cb:	int3   
   1400469cc:	int3   
   1400469cd:	mov    rcx,QWORD PTR [rdx+0x1f8]
   1400469d4:	jmp    0x140007774
   1400469d9:	int3   
   1400469da:	int3   
   1400469db:	int3   
   1400469dc:	int3   
   1400469dd:	mov    rcx,QWORD PTR [rdx+0x20]
   1400469e4:	jmp    0x140007774
   1400469e9:	int3   
   1400469ea:	int3   
   1400469eb:	int3   
   1400469ec:	int3   
   1400469ed:	mov    rcx,QWORD PTR [rdx+0x1f8]
   1400469f4:	jmp    0x140007774
   1400469f9:	int3   
   1400469fa:	int3   
   1400469fb:	int3   
   1400469fc:	int3   
   1400469fd:	mov    rcx,QWORD PTR [rdx+0x30]
   140046a04:	jmp    0x140007774
   140046a09:	int3   
   140046a0a:	int3   
   140046a0b:	int3   
   140046a0c:	int3   
   140046a0d:	mov    QWORD PTR [rsp+0x10],rdx
   140046a12:	push   rbx
   140046a13:	push   rbp
   140046a14:	push   rsi
   140046a15:	push   rdi
   140046a16:	sub    rsp,0x28
   140046a1a:	mov    rbp,rdx
   140046a1d:	mov    rbx,QWORD PTR [rbp+0x1e0]
   140046a24:	mov    rdi,QWORD PTR [rbx]
   140046a27:	test   rdi,rdi
   140046a2a:	je     0x140046a4c
   140046a2c:	mov    rsi,QWORD PTR [rbx+0x8]
   140046a30:	jmp    0x140046a3e
   140046a32:	mov    rcx,rdi
   140046a35:	call   0x14000638c
   140046a3a:	add    rdi,0x28
   140046a3e:	cmp    rdi,rsi
   140046a41:	jne    0x140046a32
   140046a43:	mov    rcx,QWORD PTR [rbx]
   140046a46:	call   QWORD PTR [rip+0x2c2c]        # 0x140049678
   140046a4c:	and    QWORD PTR [rbx],0x0
   140046a50:	and    QWORD PTR [rbx+0x8],0x0
   140046a55:	and    QWORD PTR [rbx+0x10],0x0
   140046a5a:	xor    edx,edx
   140046a5c:	xor    ecx,ecx
   140046a5e:	call   0x14002b560
   140046a63:	nop
   140046a64:	mov    rcx,QWORD PTR [rdx+0x3f0]
   140046a6b:	jmp    0x140004670
   140046a70:	int3   
   140046a71:	int3   
   140046a72:	int3   
   140046a73:	int3   
   140046a74:	mov    rcx,QWORD PTR [rdx+0xf0]
   140046a7b:	jmp    0x140004670
   140046a80:	int3   
   140046a81:	int3   
   140046a82:	int3   
   140046a83:	int3   
   140046a84:	mov    rcx,QWORD PTR [rdx+0xf8]
   140046a8b:	jmp    0x140004670
   140046a90:	int3   
   140046a91:	int3   
   140046a92:	int3   
   140046a93:	int3   
   140046a94:	mov    rcx,QWORD PTR [rdx+0xd8]
   140046a9b:	jmp    0x140004670
   140046aa0:	int3   
   140046aa1:	int3   
   140046aa2:	int3   
   140046aa3:	int3   
   140046aa4:	lea    rcx,[rdx+0x48]
   140046aab:	jmp    0x140007774
   140046ab0:	int3   
   140046ab1:	int3   
   140046ab2:	int3   
   140046ab3:	int3   
   140046ab4:	lea    rcx,[rdx+0x48]
   140046abb:	jmp    0x140007774
   140046ac0:	int3   
   140046ac1:	int3   
   140046ac2:	int3   
   140046ac3:	int3   
   140046ac4:	lea    rcx,[rdx+0x1d0]
   140046acb:	jmp    0x140007774
   140046ad0:	int3   
   140046ad1:	int3   
   140046ad2:	int3   
   140046ad3:	int3   
   140046ad4:	lea    rcx,[rdx+0x230]
   140046adb:	jmp    0x140007774
   140046ae0:	int3   
   140046ae1:	int3   
   140046ae2:	int3   
   140046ae3:	int3   
   140046ae4:	mov    rcx,QWORD PTR [rdx+0xd8]
   140046aeb:	jmp    0x140007774
   140046af0:	int3   
   140046af1:	int3   
   140046af2:	int3   
   140046af3:	int3   
   140046af4:	mov    rcx,QWORD PTR [rdx+0xf8]
   140046afb:	jmp    0x140007774
   140046b00:	int3   
   140046b01:	int3   
   140046b02:	int3   
   140046b03:	int3   
   140046b04:	mov    rcx,QWORD PTR [rdx+0xd8]
   140046b0b:	jmp    0x140007774
   140046b10:	int3   
   140046b11:	int3   
   140046b12:	int3   
   140046b13:	int3   
   140046b14:	mov    rcx,QWORD PTR [rdx+0xf0]
   140046b1b:	jmp    0x140007774
   140046b20:	int3   
   140046b21:	int3   
   140046b22:	int3   
   140046b23:	int3   
   140046b24:	lea    rcx,[rdx+0x28]
   140046b2b:	jmp    0x140004618
   140046b30:	lea    rcx,[rdx+0xa0]
   140046b37:	jmp    0x14000638c
   140046b3c:	int3   
   140046b3d:	int3   
   140046b3e:	int3   
   140046b3f:	int3   
   140046b40:	lea    rcx,[rdx+0x20]
   140046b47:	jmp    0x140004618
   140046b4c:	int3   
   140046b4d:	int3   
   140046b4e:	int3   
   140046b4f:	int3   
   140046b50:	mov    rcx,QWORD PTR [rdx+0x58]
   140046b57:	jmp    0x140004670
   140046b5c:	mov    rcx,QWORD PTR [rdx+0x40]
   140046b63:	jmp    0x140001384
   140046b68:	int3   
   140046b69:	int3   
   140046b6a:	int3   
   140046b6b:	int3   
   140046b6c:	mov    rcx,QWORD PTR [rdx+0x40]
   140046b73:	jmp    0x140010de0
   140046b78:	mov    rcx,QWORD PTR [rdx+0x40]
   140046b7f:	add    rcx,0x8
   140046b83:	jmp    0x140001384
   140046b88:	mov    rcx,QWORD PTR [rdx+0x58]
   140046b8f:	rex.W jmp QWORD PTR [rip+0x2ae2]        # 0x140049678
   140046b96:	int3   
   140046b97:	int3   
   140046b98:	mov    QWORD PTR [rsp+0x10],rdx
   140046b9d:	push   rbx
   140046b9e:	push   rbp
   140046b9f:	sub    rsp,0x28
   140046ba3:	mov    rbp,rdx
   140046ba6:	mov    rcx,QWORD PTR [rbp+0x28]
   140046baa:	mov    rax,QWORD PTR [rcx]
   140046bad:	call   QWORD PTR [rax+0x8]
   140046bb0:	mov    rbx,rax
   140046bb3:	lea    rdx,[rip+0xa19e]        # 0x140050d58
   140046bba:	mov    rcx,QWORD PTR [rip+0x2a0f]        # 0x1400495d0
   140046bc1:	call   0x140005e8c
   140046bc6:	mov    rcx,rax
   140046bc9:	mov    rdx,rbx
   140046bcc:	call   0x140005e8c
   140046bd1:	mov    rcx,rax
   140046bd4:	mov    rdx,QWORD PTR [rip+0x28ad]        # 0x140049488
   140046bdb:	call   QWORD PTR [rip+0x289f]        # 0x140049480
   140046be1:	nop
   140046be2:	lea    rax,[rip+0xfffffffffffdbf6a]        # 0x140022b53
   140046be9:	add    rsp,0x28
   140046bed:	pop    rbp
   140046bee:	pop    rbx
   140046bef:	ret    
   140046bf0:	int3   
   140046bf1:	int3   
   140046bf2:	int3   
   140046bf3:	int3   
   140046bf4:	int3   
   140046bf5:	int3   
   140046bf6:	int3   
   140046bf7:	int3   
   140046bf8:	mov    QWORD PTR [rsp+0x10],rdx
   140046bfd:	push   rbp
   140046bfe:	sub    rsp,0x20
   140046c02:	mov    rbp,rdx
   140046c05:	mov    rcx,QWORD PTR [rbp+0x30]
   140046c09:	mov    rax,QWORD PTR [rcx]
   140046c0c:	call   QWORD PTR [rax+0x8]
   140046c0f:	mov    rdx,rax
   140046c12:	mov    rcx,QWORD PTR [rip+0x29b7]        # 0x1400495d0
   140046c19:	call   0x140005e8c
   140046c1e:	mov    rcx,rax
   140046c21:	mov    rdx,QWORD PTR [rip+0x2860]        # 0x140049488
   140046c28:	call   QWORD PTR [rip+0x2852]        # 0x140049480
   140046c2e:	nop
   140046c2f:	lea    rax,[rip+0xfffffffffffdbf1d]        # 0x140022b53
   140046c36:	add    rsp,0x20
   140046c3a:	pop    rbp
   140046c3b:	ret    
   140046c3c:	int3   
   140046c3d:	lea    rcx,[rdx+0x28]
   140046c44:	jmp    0x1400013c0
   140046c49:	int3   
   140046c4a:	int3   
   140046c4b:	int3   
   140046c4c:	int3   
   140046c4d:	lea    rcx,[rdx+0x48]
   140046c54:	jmp    0x1400013c0
   140046c59:	int3   
   140046c5a:	int3   
   140046c5b:	int3   
   140046c5c:	int3   
   140046c5d:	lea    rcx,[rdx+0xc8]
   140046c64:	jmp    0x14000638c
   140046c69:	int3   
   140046c6a:	int3   
   140046c6b:	int3   
   140046c6c:	int3   
   140046c6d:	lea    rcx,[rdx+0xa0]
   140046c74:	jmp    0x14000638c
   140046c79:	int3   
   140046c7a:	int3   
   140046c7b:	int3   
   140046c7c:	int3   
   140046c7d:	lea    rcx,[rdx+0xf0]
   140046c84:	jmp    0x14000638c
   140046c89:	int3   
   140046c8a:	int3   
   140046c8b:	int3   
   140046c8c:	int3   
   140046c8d:	lea    rcx,[rdx+0x78]
   140046c94:	jmp    0x14000638c
   140046c99:	mov    QWORD PTR [rsp+0x10],rdx
   140046c9e:	push   rbp
   140046c9f:	sub    rsp,0x20
   140046ca3:	mov    rbp,rdx
   140046ca6:	lea    rax,[rip+0xfffffffffffd7b55]        # 0x14001e802
   140046cad:	add    rsp,0x20
   140046cb1:	pop    rbp
   140046cb2:	ret    
   140046cb3:	int3   
   140046cb4:	lea    rcx,[rdx+0xd8]
   140046cbb:	jmp    0x14000638c
   140046cc0:	int3   
   140046cc1:	int3   
   140046cc2:	int3   
   140046cc3:	int3   
   140046cc4:	lea    rcx,[rdx+0x100]
   140046ccb:	jmp    0x14000638c
   140046cd0:	int3   
   140046cd1:	int3   
   140046cd2:	int3   
   140046cd3:	int3   
   140046cd4:	lea    rcx,[rdx+0xb0]
   140046cdb:	jmp    0x14000638c
   140046ce0:	int3   
   140046ce1:	int3   
   140046ce2:	int3   
   140046ce3:	int3   
   140046ce4:	lea    rcx,[rdx+0x128]
   140046ceb:	jmp    0x14000638c
   140046cf0:	int3   
   140046cf1:	int3   
   140046cf2:	int3   
   140046cf3:	int3   
   140046cf4:	lea    rcx,[rdx+0x60]
   140046cfb:	jmp    0x14000638c
   140046d00:	int3   
   140046d01:	int3   
   140046d02:	int3   
   140046d03:	int3   
   140046d04:	lea    rcx,[rdx+0x38]
   140046d0b:	jmp    0x14000638c
   140046d10:	int3   
   140046d11:	int3   
   140046d12:	int3   
   140046d13:	int3   
   140046d14:	lea    rcx,[rdx+0x60]
   140046d1b:	jmp    0x14000638c
   140046d20:	int3   
   140046d21:	int3   
   140046d22:	int3   
   140046d23:	int3   
   140046d24:	lea    rcx,[rdx+0x38]
   140046d2b:	jmp    0x14000638c
   140046d30:	lea    rcx,[rdx+0x60]
   140046d37:	jmp    0x14000638c
   140046d3c:	int3   
   140046d3d:	int3   
   140046d3e:	int3   
   140046d3f:	int3   
   140046d40:	lea    rcx,[rdx+0xb0]
   140046d47:	jmp    0x14000638c
   140046d4c:	int3   
   140046d4d:	int3   
   140046d4e:	int3   
   140046d4f:	int3   
   140046d50:	lea    rcx,[rdx+0x38]
   140046d57:	jmp    0x14000638c
   140046d5c:	int3   
   140046d5d:	int3   
   140046d5e:	int3   
   140046d5f:	int3   
   140046d60:	lea    rcx,[rdx+0x88]
   140046d67:	jmp    0x14000638c
   140046d6c:	int3   
   140046d6d:	int3   
   140046d6e:	int3   
   140046d6f:	int3   
   140046d70:	lea    rcx,[rdx+0x60]
   140046d77:	jmp    0x14000638c
   140046d7c:	lea    rcx,[rdx+0x38]
   140046d83:	jmp    0x1400013c0
   140046d88:	int3   
   140046d89:	int3   
   140046d8a:	int3   
   140046d8b:	int3   
   140046d8c:	lea    rcx,[rdx+0xb0]
   140046d93:	jmp    0x14000638c
   140046d98:	int3   
   140046d99:	int3   
   140046d9a:	int3   
   140046d9b:	int3   
   140046d9c:	lea    rcx,[rdx+0x88]
   140046da3:	jmp    0x14000638c
   140046da8:	int3   
   140046da9:	int3   
   140046daa:	int3   
   140046dab:	int3   
   140046dac:	lea    rcx,[rdx+0x60]
   140046db3:	jmp    0x14000638c
   140046db8:	int3   
   140046db9:	int3   
   140046dba:	int3   
   140046dbb:	int3   
   140046dbc:	lea    rcx,[rdx+0xb0]
   140046dc3:	jmp    0x14000638c
   140046dc8:	int3   
   140046dc9:	int3   
   140046dca:	int3   
   140046dcb:	int3   
   140046dcc:	lea    rcx,[rdx+0x60]
   140046dd3:	jmp    0x14000638c
   140046dd8:	int3   
   140046dd9:	int3   
   140046dda:	int3   
   140046ddb:	int3   
   140046ddc:	lea    rcx,[rdx+0x88]
   140046de3:	jmp    0x14000638c
   140046de8:	int3   
   140046de9:	int3   
   140046dea:	int3   
   140046deb:	int3   
   140046dec:	lea    rcx,[rdx+0xb0]
   140046df3:	jmp    0x14000638c
   140046df8:	int3   
   140046df9:	int3   
   140046dfa:	int3   
   140046dfb:	int3   
   140046dfc:	lea    rcx,[rdx+0x60]
   140046e03:	jmp    0x14000638c
   140046e08:	int3   
   140046e09:	int3   
   140046e0a:	int3   
   140046e0b:	int3   
   140046e0c:	lea    rcx,[rdx+0x88]
   140046e13:	jmp    0x14000638c
   140046e18:	int3   
   140046e19:	int3   
   140046e1a:	int3   
   140046e1b:	int3   
   140046e1c:	lea    rcx,[rdx+0xb0]
   140046e23:	jmp    0x14000638c
   140046e28:	int3   
   140046e29:	int3   
   140046e2a:	int3   
   140046e2b:	int3   
   140046e2c:	lea    rcx,[rdx+0x60]
   140046e33:	jmp    0x14000638c
   140046e38:	int3   
   140046e39:	int3   
   140046e3a:	int3   
   140046e3b:	int3   
   140046e3c:	lea    rcx,[rdx+0x88]
   140046e43:	jmp    0x14000638c
   140046e48:	int3   
   140046e49:	int3   
   140046e4a:	int3   
   140046e4b:	int3   
   140046e4c:	lea    rcx,[rdx+0xb0]
   140046e53:	jmp    0x14000638c
   140046e58:	int3   
   140046e59:	int3   
   140046e5a:	int3   
   140046e5b:	int3   
   140046e5c:	lea    rcx,[rdx+0x60]
   140046e63:	jmp    0x14000638c
   140046e68:	int3   
   140046e69:	int3   
   140046e6a:	int3   
   140046e6b:	int3   
   140046e6c:	lea    rcx,[rdx+0x88]
   140046e73:	jmp    0x14000638c
   140046e78:	lea    rcx,[rdx+0x38]
   140046e7f:	jmp    0x1400013c0
   140046e84:	int3   
   140046e85:	int3   
   140046e86:	int3   
   140046e87:	int3   
   140046e88:	lea    rcx,[rdx+0xb0]
   140046e8f:	jmp    0x14000638c
   140046e94:	int3   
   140046e95:	int3   
   140046e96:	int3   
   140046e97:	int3   
   140046e98:	lea    rcx,[rdx+0x88]
   140046e9f:	jmp    0x14000638c
   140046ea4:	int3   
   140046ea5:	int3   
   140046ea6:	int3   
   140046ea7:	int3   
   140046ea8:	lea    rcx,[rdx+0x60]
   140046eaf:	jmp    0x14000638c
   140046eb4:	int3   
   140046eb5:	int3   
   140046eb6:	int3   
   140046eb7:	int3   
   140046eb8:	lea    rcx,[rdx+0xb0]
   140046ebf:	jmp    0x14000638c
   140046ec4:	int3   
   140046ec5:	int3   
   140046ec6:	int3   
   140046ec7:	int3   
   140046ec8:	lea    rcx,[rdx+0x60]
   140046ecf:	jmp    0x14000638c
   140046ed4:	int3   
   140046ed5:	int3   
   140046ed6:	int3   
   140046ed7:	int3   
   140046ed8:	lea    rcx,[rdx+0x88]
   140046edf:	jmp    0x14000638c
   140046ee4:	lea    rcx,[rdx+0x28]
   140046eeb:	jmp    0x140018274
   140046ef0:	int3   
   140046ef1:	int3   
   140046ef2:	int3   
   140046ef3:	int3   
   140046ef4:	lea    rcx,[rdx+0x68]
   140046efb:	jmp    0x14000f64c
   140046f00:	int3   
   140046f01:	int3   
   140046f02:	int3   
   140046f03:	int3   
   140046f04:	lea    rcx,[rdx+0xa0]
   140046f0b:	jmp    0x140018184
   140046f10:	int3   
   140046f11:	int3   
   140046f12:	int3   
   140046f13:	int3   
   140046f14:	lea    rcx,[rdx+0xf0]
   140046f1b:	jmp    0x140018184
   140046f20:	int3   
   140046f21:	int3   
   140046f22:	int3   
   140046f23:	int3   
   140046f24:	mov    QWORD PTR [rsp+0x10],rdx
   140046f29:	push   rbp
   140046f2a:	sub    rsp,0x20
   140046f2e:	mov    rbp,rdx
   140046f31:	inc    QWORD PTR [rbp+0x20]
   140046f35:	lea    rax,[rip+0xfffffffffffd10fc]        # 0x140018038
   140046f3c:	add    rsp,0x20
   140046f40:	pop    rbp
   140046f41:	ret    
   140046f42:	int3   
   140046f43:	mov    QWORD PTR [rsp+0x10],rdx
   140046f48:	push   rbx
   140046f49:	push   rbp
   140046f4a:	sub    rsp,0x28
   140046f4e:	mov    rbp,rdx
   140046f51:	mov    QWORD PTR [rbp+0x50],0xf
   140046f59:	and    QWORD PTR [rbp+0x48],0x0
   140046f5e:	mov    BYTE PTR [rbp+0x38],0x0
   140046f62:	lea    rcx,[rip+0xa517]        # 0x140051480
   140046f69:	call   QWORD PTR [rip+0x2699]        # 0x140049608
   140046f6f:	mov    r8,rax
   140046f72:	lea    rdx,[rip+0xa507]        # 0x140051480
   140046f79:	lea    rcx,[rbp+0x38]
   140046f7d:	call   0x140005154
   140046f82:	nop
   140046f83:	mov    QWORD PTR [rbp+0x78],0xf
   140046f8b:	and    QWORD PTR [rbp+0x70],0x0
   140046f90:	mov    BYTE PTR [rbp+0x60],0x0
   140046f94:	lea    rcx,[rip+0xa17d]        # 0x140051118
   140046f9b:	call   QWORD PTR [rip+0x2667]        # 0x140049608
   140046fa1:	mov    r8,rax
   140046fa4:	lea    rdx,[rip+0xa16d]        # 0x140051118
   140046fab:	lea    rcx,[rbp+0x60]
   140046faf:	call   0x140005154
   140046fb4:	nop
   140046fb5:	mov    r8d,0x268
   140046fbb:	lea    rdx,[rbp+0x60]
   140046fbf:	lea    rcx,[rbp+0x88]
   140046fc6:	call   0x14001231c
   140046fcb:	mov    rbx,rax
   140046fce:	mov    rcx,QWORD PTR [rbp+0x20]
   140046fd2:	mov    rdx,QWORD PTR [rcx]
   140046fd5:	call   QWORD PTR [rdx+0x8]
   140046fd8:	mov    r8,rax
   140046fdb:	lea    rdx,[rbp+0x38]
   140046fdf:	lea    rcx,[rbp+0xb0]
   140046fe6:	call   0x1400112ec
   140046feb:	nop
   140046fec:	mov    rcx,QWORD PTR [rip+0x2383d]        # 0x14006a830
   140046ff3:	mov    r9,QWORD PTR [rcx]
   140046ff6:	mov    r8,rbx
   140046ff9:	mov    rdx,rax
   140046ffc:	call   QWORD PTR [r9+0x80]
   140047003:	nop
   140047004:	cmp    QWORD PTR [rbp+0xc8],0x10
   14004700c:	jb     0x14004701b
   14004700e:	mov    rcx,QWORD PTR [rbp+0xb0]
   140047015:	call   QWORD PTR [rip+0x265d]        # 0x140049678
   14004701b:	mov    QWORD PTR [rbp+0xc8],0xf
   140047026:	and    QWORD PTR [rbp+0xc0],0x0
   14004702e:	mov    BYTE PTR [rbp+0xb0],0x0
   140047035:	cmp    QWORD PTR [rbp+0xa0],0x10
   14004703d:	jb     0x14004704c
   14004703f:	mov    rcx,QWORD PTR [rbp+0x88]
   140047046:	call   QWORD PTR [rip+0x262c]        # 0x140049678
   14004704c:	mov    QWORD PTR [rbp+0xa0],0xf
   140047057:	and    QWORD PTR [rbp+0x98],0x0
   14004705f:	mov    BYTE PTR [rbp+0x88],0x0
   140047066:	cmp    QWORD PTR [rbp+0x78],0x10
   14004706b:	jb     0x140047078
   14004706d:	mov    rcx,QWORD PTR [rbp+0x60]
   140047071:	call   QWORD PTR [rip+0x2601]        # 0x140049678
   140047077:	nop
   140047078:	cmp    QWORD PTR [rbp+0x50],0x10
   14004707d:	jb     0x14004708a
   14004707f:	mov    rcx,QWORD PTR [rbp+0x38]
   140047083:	call   QWORD PTR [rip+0x25ef]        # 0x140049678
   140047089:	nop
   14004708a:	lea    rax,[rip+0xfffffffffffd094d]        # 0x1400179de
   140047091:	add    rsp,0x28
   140047095:	pop    rbp
   140047096:	pop    rbx
   140047097:	ret    
   140047098:	int3   
   140047099:	int3   
   14004709a:	int3   
   14004709b:	int3   
   14004709c:	int3   
   14004709d:	int3   
   14004709e:	int3   
   14004709f:	int3   
   1400470a0:	int3   
   1400470a1:	int3   
   1400470a2:	int3   
   1400470a3:	lea    rcx,[rdx+0x38]
   1400470aa:	jmp    0x14000638c
   1400470af:	int3   
   1400470b0:	int3   
   1400470b1:	int3   
   1400470b2:	int3   
   1400470b3:	lea    rcx,[rdx+0x60]
   1400470ba:	jmp    0x14000638c
   1400470bf:	int3   
   1400470c0:	int3   
   1400470c1:	int3   
   1400470c2:	int3   
   1400470c3:	lea    rcx,[rdx+0x88]
   1400470ca:	jmp    0x14000638c
   1400470cf:	int3   
   1400470d0:	int3   
   1400470d1:	int3   
   1400470d2:	int3   
   1400470d3:	lea    rcx,[rdx+0xb0]
   1400470da:	jmp    0x14000638c
   1400470df:	int3   
   1400470e0:	int3   
   1400470e1:	int3   
   1400470e2:	int3   
   1400470e3:	mov    QWORD PTR [rsp+0x10],rdx
   1400470e8:	push   rbx
   1400470e9:	push   rbp
   1400470ea:	sub    rsp,0x28
   1400470ee:	mov    rbp,rdx
   1400470f1:	mov    QWORD PTR [rbp+0x78],0xf
   1400470f9:	and    QWORD PTR [rbp+0x70],0x0
   1400470fe:	mov    BYTE PTR [rbp+0x60],0x0
   140047102:	lea    rcx,[rip+0xa00f]        # 0x140051118
   140047109:	call   QWORD PTR [rip+0x24f9]        # 0x140049608
   14004710f:	mov    r8,rax
   140047112:	lea    rdx,[rip+0x9fff]        # 0x140051118
   140047119:	lea    rcx,[rbp+0x60]
   14004711d:	call   0x140005154
   140047122:	nop
   140047123:	mov    rcx,QWORD PTR [rbp+0x30]
   140047127:	mov    rax,QWORD PTR [rcx]
   14004712a:	call   QWORD PTR [rax+0x8]
   14004712d:	mov    rbx,rax
   140047130:	mov    QWORD PTR [rbp+0x50],0xf
   140047138:	and    QWORD PTR [rbp+0x48],0x0
   14004713d:	mov    BYTE PTR [rbp+0x38],0x0
   140047141:	mov    rcx,rax
   140047144:	call   QWORD PTR [rip+0x24be]        # 0x140049608
   14004714a:	mov    r8,rax
   14004714d:	mov    rdx,rbx
   140047150:	lea    rcx,[rbp+0x38]
   140047154:	call   0x140005154
   140047159:	nop
   14004715a:	mov    r8d,0x26d
   140047160:	lea    rdx,[rbp+0x60]
   140047164:	lea    rcx,[rbp+0x88]
   14004716b:	call   0x14001231c
   140047170:	nop
   140047171:	mov    rcx,QWORD PTR [rip+0x236b8]        # 0x14006a830
   140047178:	mov    r9,QWORD PTR [rcx]
   14004717b:	mov    r8,rax
   14004717e:	lea    rdx,[rbp+0x38]
   140047182:	call   QWORD PTR [r9+0x80]
   140047189:	nop
   14004718a:	cmp    QWORD PTR [rbp+0xa0],0x10
   140047192:	jb     0x1400471a1
   140047194:	mov    rcx,QWORD PTR [rbp+0x88]
   14004719b:	call   QWORD PTR [rip+0x24d7]        # 0x140049678
   1400471a1:	mov    QWORD PTR [rbp+0xa0],0xf
   1400471ac:	and    QWORD PTR [rbp+0x98],0x0
   1400471b4:	mov    BYTE PTR [rbp+0x88],0x0
   1400471bb:	cmp    QWORD PTR [rbp+0x50],0x10
   1400471c0:	jb     0x1400471cc
   1400471c2:	mov    rcx,QWORD PTR [rbp+0x38]
   1400471c6:	call   QWORD PTR [rip+0x24ac]        # 0x140049678
   1400471cc:	mov    QWORD PTR [rbp+0x50],0xf
   1400471d4:	and    QWORD PTR [rbp+0x48],0x0
   1400471d9:	mov    BYTE PTR [rbp+0x38],0x0
   1400471dd:	cmp    QWORD PTR [rbp+0x78],0x10
   1400471e2:	jb     0x1400471ee
   1400471e4:	mov    rcx,QWORD PTR [rbp+0x60]
   1400471e8:	call   QWORD PTR [rip+0x248a]        # 0x140049678
   1400471ee:	mov    QWORD PTR [rbp+0x78],0xf
   1400471f6:	and    QWORD PTR [rbp+0x70],0x0
   1400471fb:	mov    BYTE PTR [rbp+0x60],0x0
   1400471ff:	mov    rcx,QWORD PTR [rip+0x235da]        # 0x14006a7e0
   140047206:	test   rcx,rcx
   140047209:	je     0x140047219
   14004720b:	call   QWORD PTR [rip+0x2467]        # 0x140049678
   140047211:	and    QWORD PTR [rip+0x235c7],0x0        # 0x14006a7e0
   140047219:	lea    rax,[rip+0xfffffffffffd07be]        # 0x1400179de
   140047220:	add    rsp,0x28
   140047224:	pop    rbp
   140047225:	pop    rbx
   140047226:	ret    
   140047227:	int3   
   140047228:	int3   
   140047229:	int3   
   14004722a:	int3   
   14004722b:	int3   
   14004722c:	int3   
   14004722d:	int3   
   14004722e:	int3   
   14004722f:	int3   
   140047230:	int3   
   140047231:	int3   
   140047232:	int3   
   140047233:	lea    rcx,[rdx+0x60]
   14004723a:	jmp    0x14000638c
   14004723f:	int3   
   140047240:	int3   
   140047241:	int3   
   140047242:	int3   
   140047243:	lea    rcx,[rdx+0x38]
   14004724a:	jmp    0x14000638c
   14004724f:	int3   
   140047250:	int3   
   140047251:	int3   
   140047252:	int3   
   140047253:	lea    rcx,[rdx+0x88]
   14004725a:	jmp    0x14000638c
   14004725f:	lea    rcx,[rdx+0x50]
   140047266:	jmp    0x14000638c
   14004726b:	int3   
   14004726c:	int3   
   14004726d:	int3   
   14004726e:	int3   
   14004726f:	lea    rcx,[rdx+0x20]
   140047276:	jmp    0x14000638c
   14004727b:	int3   
   14004727c:	int3   
   14004727d:	int3   
   14004727e:	int3   
   14004727f:	lea    rcx,[rdx+0xa0]
   140047286:	jmp    0x140018184
   14004728b:	int3   
   14004728c:	int3   
   14004728d:	int3   
   14004728e:	int3   
   14004728f:	lea    rcx,[rdx+0x78]
   140047296:	jmp    0x140018184
   14004729b:	int3   
   14004729c:	int3   
   14004729d:	int3   
   14004729e:	int3   
   14004729f:	lea    rcx,[rdx+0x20]
   1400472a6:	jmp    0x14000f64c
   1400472ab:	int3   
   1400472ac:	int3   
   1400472ad:	int3   
   1400472ae:	int3   
   1400472af:	lea    rcx,[rdx+0xc8]
   1400472b6:	jmp    0x140018184
   1400472bb:	int3   
   1400472bc:	int3   
   1400472bd:	int3   
   1400472be:	int3   
   1400472bf:	lea    rcx,[rdx+0xa0]
   1400472c6:	jmp    0x140018184
   1400472cb:	int3   
   1400472cc:	int3   
   1400472cd:	int3   
   1400472ce:	int3   
   1400472cf:	lea    rcx,[rdx+0x50]
   1400472d6:	jmp    0x14000638c
   1400472db:	int3   
   1400472dc:	int3   
   1400472dd:	int3   
   1400472de:	int3   
   1400472df:	lea    rcx,[rdx+0x118]
   1400472e6:	jmp    0x140018184
   1400472eb:	int3   
   1400472ec:	int3   
   1400472ed:	int3   
   1400472ee:	int3   
   1400472ef:	lea    rcx,[rdx+0xf0]
   1400472f6:	jmp    0x140018184
   1400472fb:	int3   
   1400472fc:	int3   
   1400472fd:	int3   
   1400472fe:	int3   
   1400472ff:	lea    rcx,[rdx+0x140]
   140047306:	jmp    0x140018184
   14004730b:	int3   
   14004730c:	int3   
   14004730d:	int3   
   14004730e:	int3   
   14004730f:	lea    rcx,[rdx+0x168]
   140047316:	jmp    0x140018184
   14004731b:	lea    rcx,[rdx+0x50]
   140047322:	jmp    0x14000638c
   140047327:	int3   
   140047328:	int3   
   140047329:	int3   
   14004732a:	int3   
   14004732b:	lea    rcx,[rdx+0x28]
   140047332:	jmp    0x14000638c
   140047337:	int3   
   140047338:	int3   
   140047339:	int3   
   14004733a:	int3   
   14004733b:	lea    rcx,[rdx+0x78]
   140047342:	jmp    0x14000638c
   140047347:	int3   
   140047348:	int3   
   140047349:	int3   
   14004734a:	int3   
   14004734b:	lea    rcx,[rdx+0x50]
   140047352:	jmp    0x14000638c
   140047357:	int3   
   140047358:	int3   
   140047359:	int3   
   14004735a:	int3   
   14004735b:	lea    rcx,[rdx+0x28]
   140047362:	jmp    0x14000638c
   140047367:	int3   
   140047368:	int3   
   140047369:	int3   
   14004736a:	int3   
   14004736b:	lea    rcx,[rdx+0x78]
   140047372:	jmp    0x14000638c
   140047377:	int3   
   140047378:	int3   
   140047379:	int3   
   14004737a:	int3   
   14004737b:	lea    rcx,[rdx+0x50]
   140047382:	jmp    0x14000638c
   140047387:	int3   
   140047388:	int3   
   140047389:	int3   
   14004738a:	int3   
   14004738b:	lea    rcx,[rdx+0x28]
   140047392:	jmp    0x14000638c
   140047397:	int3   
   140047398:	int3   
   140047399:	int3   
   14004739a:	int3   
   14004739b:	lea    rcx,[rdx+0x78]
   1400473a2:	jmp    0x14000638c
   1400473a7:	lea    rcx,[rdx+0x28]
   1400473ae:	jmp    0x14000638c
   1400473b3:	lea    rcx,[rdx+0x78]
   1400473ba:	jmp    0x140001384
   1400473bf:	int3   
   1400473c0:	int3   
   1400473c1:	int3   
   1400473c2:	int3   
   1400473c3:	rex push rbp
   1400473c5:	sub    rsp,0x20
   1400473c9:	mov    rbp,rdx
   1400473cc:	mov    eax,DWORD PTR [rbp+0x44]
   1400473cf:	and    eax,0x2
   1400473d2:	test   eax,eax
   1400473d4:	je     0x1400473ee
   1400473d6:	and    DWORD PTR [rbp+0x44],0xfffffffd
   1400473da:	lea    rcx,[rbp+0xa0]
   1400473e1:	add    rcx,0xb8
   1400473e8:	call   QWORD PTR [rip+0x1f12]        # 0x140049300
   1400473ee:	add    rsp,0x20
   1400473f2:	pop    rbp
   1400473f3:	ret    
   1400473f4:	int3   
   1400473f5:	int3   
   1400473f6:	int3   
   1400473f7:	int3   
   1400473f8:	int3   
   1400473f9:	int3   
   1400473fa:	int3   
   1400473fb:	int3   
   1400473fc:	int3   
   1400473fd:	int3   
   1400473fe:	int3   
   1400473ff:	int3   
   140047400:	int3   
   140047401:	int3   
   140047402:	int3   
   140047403:	lea    rcx,[rdx+0xa0]
   14004740a:	add    rcx,0x18
   14004740e:	rex.W jmp QWORD PTR [rip+0x20ab]        # 0x1400494c0
   140047415:	int3   
   140047416:	int3   
   140047417:	int3   
   140047418:	int3   
   140047419:	int3   
   14004741a:	int3   
   14004741b:	int3   
   14004741c:	int3   
   14004741d:	int3   
   14004741e:	int3   
   14004741f:	int3   
   140047420:	int3   
   140047421:	int3   
   140047422:	int3   
   140047423:	mov    rcx,QWORD PTR [rdx+0x48]
   14004742a:	rex.W jmp QWORD PTR [rip+0x1eff]        # 0x140049330
   140047431:	int3   
   140047432:	int3   
   140047433:	lea    rcx,[rdx+0xa0]
   14004743a:	add    rcx,0x18
   14004743e:	jmp    0x140003b0c
   140047443:	lea    rcx,[rdx+0x48]
   14004744a:	jmp    0x140001074
   14004744f:	int3   
   140047450:	int3   
   140047451:	int3   
   140047452:	int3   
   140047453:	lea    rcx,[rdx+0xa0]
   14004745a:	jmp    0x14001420c
   14004745f:	int3   
   140047460:	int3   
   140047461:	int3   
   140047462:	int3   
   140047463:	lea    rcx,[rdx+0x58]
   14004746a:	jmp    0x140004618
   14004746f:	int3   
   140047470:	int3   
   140047471:	int3   
   140047472:	int3   
   140047473:	lea    rcx,[rdx+0x1f8]
   14004747a:	jmp    0x14000638c
   14004747f:	int3   
   140047480:	int3   
   140047481:	int3   
   140047482:	int3   
   140047483:	lea    rcx,[rdx+0x1d0]
   14004748a:	jmp    0x14000638c
   14004748f:	int3   
   140047490:	int3   
   140047491:	int3   
   140047492:	int3   
   140047493:	lea    rcx,[rdx+0x220]
   14004749a:	jmp    0x14000638c
   14004749f:	int3   
   1400474a0:	int3   
   1400474a1:	int3   
   1400474a2:	int3   
   1400474a3:	rex push rbp
   1400474a5:	sub    rsp,0x20
   1400474a9:	mov    rbp,rdx
   1400474ac:	mov    eax,DWORD PTR [rbp+0x44]
   1400474af:	and    eax,0x1
   1400474b2:	test   eax,eax
   1400474b4:	je     0x1400474c6
   1400474b6:	and    DWORD PTR [rbp+0x44],0xfffffffe
   1400474ba:	mov    rcx,QWORD PTR [rbp+0x1c8]
   1400474c1:	call   0x14000638c
   1400474c6:	add    rsp,0x20
   1400474ca:	pop    rbp
   1400474cb:	ret    
   1400474cc:	int3   
   1400474cd:	int3   
   1400474ce:	int3   
   1400474cf:	int3   
   1400474d0:	int3   
   1400474d1:	int3   
   1400474d2:	int3   
   1400474d3:	mov    rcx,QWORD PTR [rdx+0x48]
   1400474da:	sub    rcx,0xb8
   1400474e1:	add    rcx,0x18
   1400474e5:	rex.W jmp QWORD PTR [rip+0x1fd4]        # 0x1400494c0
   1400474ec:	int3   
   1400474ed:	int3   
   1400474ee:	int3   
   1400474ef:	int3   
   1400474f0:	int3   
   1400474f1:	int3   
   1400474f2:	int3   
   1400474f3:	lea    rcx,[rdx+0x78]
   1400474fa:	jmp    0x140010de0
   1400474ff:	lea    rcx,[rdx+0x28]
   140047506:	jmp    0x14000638c
   14004750b:	int3   
   14004750c:	int3   
   14004750d:	int3   
   14004750e:	int3   
   14004750f:	lea    rcx,[rdx+0x78]
   140047516:	jmp    0x14000638c
   14004751b:	int3   
   14004751c:	int3   
   14004751d:	int3   
   14004751e:	int3   
   14004751f:	lea    rcx,[rdx+0x50]
   140047526:	jmp    0x14000638c
   14004752b:	lea    rcx,[rdx+0x28]
   140047532:	jmp    0x14000638c
   140047537:	int3   
   140047538:	int3   
   140047539:	int3   
   14004753a:	int3   
   14004753b:	lea    rcx,[rdx+0x50]
   140047542:	jmp    0x14000638c
   140047547:	lea    rcx,[rdx+0x80]
   14004754e:	jmp    0x14000638c
   140047553:	int3   
   140047554:	int3   
   140047555:	int3   
   140047556:	int3   
   140047557:	mov    rcx,QWORD PTR [rdx+0x20]
   14004755e:	rex.W jmp QWORD PTR [rip+0x2113]        # 0x140049678
   140047565:	int3   
   140047566:	int3   
   140047567:	lea    rcx,[rdx+0x58]
   14004756e:	jmp    0x14000638c
   140047573:	rex push rbp
   140047575:	sub    rsp,0x20
   140047579:	mov    rbp,rdx
   14004757c:	mov    eax,DWORD PTR [rbp+0x40]
   14004757f:	and    eax,0x1
   140047582:	test   eax,eax
   140047584:	je     0x140047596
   140047586:	and    DWORD PTR [rbp+0x40],0xfffffffe
   14004758a:	mov    rcx,QWORD PTR [rbp+0xa0]
   140047591:	call   0x14000638c
   140047596:	add    rsp,0x20
   14004759a:	pop    rbp
   14004759b:	ret    
   14004759c:	int3   
   14004759d:	int3   
   14004759e:	int3   
   14004759f:	int3   
   1400475a0:	int3   
   1400475a1:	int3   
   1400475a2:	int3   
   1400475a3:	lea    rcx,[rdx+0xb8]
   1400475aa:	jmp    0x14000638c
   1400475af:	int3   
   1400475b0:	int3   
   1400475b1:	int3   
   1400475b2:	int3   
   1400475b3:	lea    rcx,[rdx+0x48]
   1400475ba:	jmp    0x1400103f4
   1400475bf:	int3   
   1400475c0:	int3   
   1400475c1:	int3   
   1400475c2:	int3   
   1400475c3:	lea    rcx,[rdx+0x68]
   1400475ca:	jmp    0x140004618
   1400475cf:	int3   
   1400475d0:	int3   
   1400475d1:	int3   
   1400475d2:	int3   
   1400475d3:	lea    rcx,[rdx+0x130]
   1400475da:	jmp    0x14000638c
   1400475df:	int3   
   1400475e0:	int3   
   1400475e1:	int3   
   1400475e2:	int3   
   1400475e3:	lea    rcx,[rdx+0xe0]
   1400475ea:	jmp    0x14000638c
   1400475ef:	int3   
   1400475f0:	int3   
   1400475f1:	int3   
   1400475f2:	int3   
   1400475f3:	lea    rcx,[rdx+0x108]
   1400475fa:	jmp    0x14000638c
   1400475ff:	int3   
   140047600:	int3   
   140047601:	int3   
   140047602:	int3   
   140047603:	lea    rcx,[rdx+0xe0]
   14004760a:	jmp    0x14000638c
   14004760f:	int3   
   140047610:	int3   
   140047611:	int3   
   140047612:	int3   
   140047613:	lea    rcx,[rdx+0xe0]
   14004761a:	jmp    0x14000638c
   14004761f:	lea    rcx,[rdx+0x38]
   140047626:	jmp    0x14000f64c
   14004762b:	int3   
   14004762c:	int3   
   14004762d:	int3   
   14004762e:	int3   
   14004762f:	lea    rcx,[rdx+0x70]
   140047636:	jmp    0x140018184
   14004763b:	int3   
   14004763c:	int3   
   14004763d:	int3   
   14004763e:	int3   
   14004763f:	lea    rcx,[rdx+0x98]
   140047646:	jmp    0x140018184
   14004764b:	int3   
   14004764c:	int3   
   14004764d:	int3   
   14004764e:	int3   
   14004764f:	lea    rcx,[rdx+0xc0]
   140047656:	jmp    0x140018184
   14004765b:	int3   
   14004765c:	int3   
   14004765d:	int3   
   14004765e:	int3   
   14004765f:	mov    QWORD PTR [rsp+0x10],rdx
   140047664:	push   rbp
   140047665:	sub    rsp,0x20
   140047669:	mov    rbp,rdx
   14004766c:	inc    QWORD PTR [rbp+0x28]
   140047670:	lea    rax,[rip+0xfffffffffffc7f79]        # 0x14000f5f0
   140047677:	add    rsp,0x20
   14004767b:	pop    rbp
   14004767c:	ret    
   14004767d:	int3   
   14004767e:	lea    rcx,[rdx+0x50]
   140047685:	jmp    0x140018184
   14004768a:	int3   
   14004768b:	int3   
   14004768c:	int3   
   14004768d:	int3   
   14004768e:	lea    rcx,[rdx+0xa0]
   140047695:	jmp    0x14000638c
   14004769a:	int3   
   14004769b:	int3   
   14004769c:	int3   
   14004769d:	int3   
   14004769e:	lea    rcx,[rdx+0x50]
   1400476a5:	jmp    0x14000638c
   1400476aa:	int3   
   1400476ab:	int3   
   1400476ac:	int3   
   1400476ad:	int3   
   1400476ae:	lea    rcx,[rdx+0x78]
   1400476b5:	jmp    0x14000638c
   1400476ba:	int3   
   1400476bb:	int3   
   1400476bc:	int3   
   1400476bd:	int3   
   1400476be:	lea    rcx,[rdx+0xa0]
   1400476c5:	jmp    0x14000638c
   1400476ca:	int3   
   1400476cb:	int3   
   1400476cc:	int3   
   1400476cd:	int3   
   1400476ce:	lea    rcx,[rdx+0x78]
   1400476d5:	jmp    0x14000638c
   1400476da:	int3   
   1400476db:	int3   
   1400476dc:	int3   
   1400476dd:	int3   
   1400476de:	lea    rcx,[rdx+0x50]
   1400476e5:	jmp    0x14000638c
   1400476ea:	int3   
   1400476eb:	int3   
   1400476ec:	int3   
   1400476ed:	int3   
   1400476ee:	lea    rcx,[rdx+0xa0]
   1400476f5:	jmp    0x14000638c
   1400476fa:	int3   
   1400476fb:	int3   
   1400476fc:	int3   
   1400476fd:	int3   
   1400476fe:	lea    rcx,[rdx+0x50]
   140047705:	jmp    0x14000638c
   14004770a:	int3   
   14004770b:	int3   
   14004770c:	int3   
   14004770d:	int3   
   14004770e:	lea    rcx,[rdx+0x140]
   140047715:	jmp    0x14000638c
   14004771a:	int3   
   14004771b:	int3   
   14004771c:	int3   
   14004771d:	int3   
   14004771e:	lea    rcx,[rdx+0xf0]
   140047725:	jmp    0x14000638c
   14004772a:	int3   
   14004772b:	int3   
   14004772c:	int3   
   14004772d:	int3   
   14004772e:	lea    rcx,[rdx+0xc8]
   140047735:	jmp    0x14000638c
   14004773a:	int3   
   14004773b:	int3   
   14004773c:	int3   
   14004773d:	int3   
   14004773e:	lea    rcx,[rdx+0x118]
   140047745:	jmp    0x14000638c
   14004774a:	int3   
   14004774b:	int3   
   14004774c:	int3   
   14004774d:	int3   
   14004774e:	lea    rcx,[rdx+0x78]
   140047755:	jmp    0x14000638c
   14004775a:	int3   
   14004775b:	int3   
   14004775c:	int3   
   14004775d:	int3   
   14004775e:	lea    rcx,[rdx+0xa0]
   140047765:	jmp    0x14000638c
   14004776a:	int3   
   14004776b:	int3   
   14004776c:	int3   
   14004776d:	int3   
   14004776e:	lea    rcx,[rdx+0x78]
   140047775:	jmp    0x14000638c
   14004777a:	int3   
   14004777b:	int3   
   14004777c:	int3   
   14004777d:	int3   
   14004777e:	lea    rcx,[rdx+0x50]
   140047785:	jmp    0x14000638c
   14004778a:	int3   
   14004778b:	int3   
   14004778c:	int3   
   14004778d:	int3   
   14004778e:	lea    rcx,[rdx+0xa0]
   140047795:	jmp    0x14000638c
   14004779a:	int3   
   14004779b:	int3   
   14004779c:	int3   
   14004779d:	int3   
   14004779e:	lea    rcx,[rdx+0x78]
   1400477a5:	jmp    0x14000638c
   1400477aa:	int3   
   1400477ab:	int3   
   1400477ac:	int3   
   1400477ad:	int3   
   1400477ae:	lea    rcx,[rdx+0x50]
   1400477b5:	jmp    0x14000638c
   1400477ba:	lea    rcx,[rdx+0xa0]
   1400477c1:	jmp    0x14000638c
   1400477c6:	int3   
   1400477c7:	int3   
   1400477c8:	int3   
   1400477c9:	int3   
   1400477ca:	lea    rcx,[rdx+0x78]
   1400477d1:	jmp    0x140018184
   1400477d6:	int3   
   1400477d7:	int3   
   1400477d8:	int3   
   1400477d9:	int3   
   1400477da:	lea    rcx,[rdx+0x48]
   1400477e1:	jmp    0x140001384
   1400477e6:	int3   
   1400477e7:	int3   
   1400477e8:	int3   
   1400477e9:	int3   
   1400477ea:	lea    rcx,[rdx+0xc8]
   1400477f1:	jmp    0x140018184
   1400477f6:	int3   
   1400477f7:	int3   
   1400477f8:	int3   
   1400477f9:	int3   
   1400477fa:	lea    rcx,[rdx+0x48]
   140047801:	jmp    0x140010de0
   140047806:	lea    rcx,[rdx+0x78]
   14004780d:	jmp    0x14000638c
   140047812:	int3   
   140047813:	int3   
   140047814:	int3   
   140047815:	int3   
   140047816:	lea    rcx,[rdx+0x50]
   14004781d:	jmp    0x14000638c
   140047822:	int3   
   140047823:	int3   
   140047824:	int3   
   140047825:	int3   
   140047826:	lea    rcx,[rdx+0x20]
   14004782d:	jmp    0x14000638c
   140047832:	mov    rcx,QWORD PTR [rdx+0x40]
   140047839:	jmp    0x140022b90
   14004783e:	int3   
   14004783f:	int3   
   140047840:	int3   
   140047841:	int3   
   140047842:	mov    rcx,QWORD PTR [rdx+0x40]
   140047849:	add    rcx,0x68
   14004784d:	jmp    0x14000e7ec
   140047852:	lea    rcx,[rdx+0x90]
   140047859:	jmp    0x14000638c
   14004785e:	int3   
   14004785f:	int3   
   140047860:	int3   
   140047861:	int3   
   140047862:	lea    rcx,[rdx+0x68]
   140047869:	jmp    0x14000638c
   14004786e:	int3   
   14004786f:	int3   
   140047870:	int3   
   140047871:	int3   
   140047872:	lea    rcx,[rdx+0x30]
   140047879:	jmp    0x14000638c
   14004787e:	lea    rcx,[rdx+0x80]
   140047885:	jmp    0x140018184
   14004788a:	int3   
   14004788b:	int3   
   14004788c:	int3   
   14004788d:	int3   
   14004788e:	lea    rcx,[rdx+0x58]
   140047895:	jmp    0x140018184
   14004789a:	int3   
   14004789b:	int3   
   14004789c:	int3   
   14004789d:	int3   
   14004789e:	lea    rcx,[rdx+0x30]
   1400478a5:	jmp    0x140018184
   1400478aa:	int3   
   1400478ab:	int3   
   1400478ac:	int3   
   1400478ad:	int3   
   1400478ae:	rex push rbp
   1400478b0:	sub    rsp,0x20
   1400478b4:	mov    rbp,rdx
   1400478b7:	mov    eax,DWORD PTR [rbp+0x20]
   1400478ba:	and    eax,0x2
   1400478bd:	test   eax,eax
   1400478bf:	je     0x1400478ce
   1400478c1:	and    DWORD PTR [rbp+0x20],0xfffffffd
   1400478c5:	lea    rcx,[rbp+0x30]
   1400478c9:	call   0x140018184
   1400478ce:	add    rsp,0x20
   1400478d2:	pop    rbp
   1400478d3:	ret    
   1400478d4:	int3   
   1400478d5:	int3   
   1400478d6:	int3   
   1400478d7:	int3   
   1400478d8:	int3   
   1400478d9:	int3   
   1400478da:	int3   
   1400478db:	int3   
   1400478dc:	int3   
   1400478dd:	int3   
   1400478de:	rex push rbp
   1400478e0:	sub    rsp,0x20
   1400478e4:	mov    rbp,rdx
   1400478e7:	mov    eax,DWORD PTR [rbp+0x20]
   1400478ea:	and    eax,0x4
   1400478ed:	test   eax,eax
   1400478ef:	je     0x1400478fe
   1400478f1:	and    DWORD PTR [rbp+0x20],0xfffffffb
   1400478f5:	lea    rcx,[rbp+0x58]
   1400478f9:	call   0x140018184
   1400478fe:	add    rsp,0x20
   140047902:	pop    rbp
   140047903:	ret    
   140047904:	lea    rcx,[rdx+0x48]
   14004790b:	jmp    0x14000f64c
   140047910:	int3   
   140047911:	int3   
   140047912:	int3   
   140047913:	int3   
   140047914:	lea    rcx,[rdx+0x90]
   14004791b:	jmp    0x140018184
   140047920:	int3   
   140047921:	int3   
   140047922:	int3   
   140047923:	int3   
   140047924:	lea    rcx,[rdx+0xb8]
   14004792b:	jmp    0x14000638c
   140047930:	int3   
   140047931:	int3   
   140047932:	int3   
   140047933:	int3   
   140047934:	mov    QWORD PTR [rsp+0x10],rdx
   140047939:	push   rbp
   14004793a:	sub    rsp,0x20
   14004793e:	mov    rbp,rdx
   140047941:	inc    QWORD PTR [rbp+0x28]
   140047945:	lea    rax,[rip+0xfffffffffffd0403]        # 0x140017d4f
   14004794c:	add    rsp,0x20
   140047950:	pop    rbp
   140047951:	ret    
   140047952:	int3   
   140047953:	lea    rcx,[rdx+0x28]
   14004795a:	jmp    0x14000638c
   14004795f:	int3   
   140047960:	int3   
   140047961:	int3   
   140047962:	int3   
   140047963:	lea    rcx,[rdx+0x28]
   14004796a:	jmp    0x14000638c
   14004796f:	int3   
   140047970:	int3   
   140047971:	int3   
   140047972:	int3   
   140047973:	lea    rcx,[rdx+0x28]
   14004797a:	jmp    0x14000638c
   14004797f:	lea    rcx,[rdx+0x20]
   140047986:	jmp    0x14000f64c
   14004798b:	int3   
   14004798c:	int3   
   14004798d:	int3   
   14004798e:	int3   
   14004798f:	mov    rcx,QWORD PTR [rdx+0x40]
   140047996:	rex.W jmp QWORD PTR [rip+0x1cdb]        # 0x140049678
   14004799d:	int3   
   14004799e:	int3   
   14004799f:	mov    rcx,QWORD PTR [rdx+0x40]
   1400479a6:	add    rcx,0x8
   1400479aa:	jmp    0x140004618
   1400479af:	lea    rcx,[rdx+0x50]
   1400479b6:	jmp    0x14000638c
   1400479bb:	int3   
   1400479bc:	int3   
   1400479bd:	int3   
   1400479be:	int3   
   1400479bf:	lea    rcx,[rdx+0x50]
   1400479c6:	jmp    0x14000638c
   1400479cb:	lea    rcx,[rdx+0x70]
   1400479d2:	jmp    0x140018184
   1400479d7:	int3   
   1400479d8:	int3   
   1400479d9:	int3   
   1400479da:	int3   
   1400479db:	lea    rcx,[rdx+0x48]
   1400479e2:	jmp    0x140018184
   1400479e7:	lea    rcx,[rdx+0x28]
   1400479ee:	jmp    0x14000638c
   1400479f3:	int3   
   1400479f4:	int3   
   1400479f5:	int3   
   1400479f6:	int3   
   1400479f7:	lea    rcx,[rdx+0x28]
   1400479fe:	jmp    0x14000638c
   140047a03:	lea    rcx,[rdx+0x30]
   140047a0a:	jmp    0x140018184
   140047a0f:	int3   
   140047a10:	int3   
   140047a11:	int3   
   140047a12:	int3   
   140047a13:	lea    rcx,[rdx+0x58]
   140047a1a:	jmp    0x140018184
   140047a1f:	mov    rcx,QWORD PTR [rdx+0x80]
   140047a26:	jmp    0x14000638c
   140047a2b:	int3   
   140047a2c:	int3   
   140047a2d:	int3   
   140047a2e:	int3   
   140047a2f:	lea    rcx,[rdx+0x88]
   140047a36:	jmp    0x14000638c
   140047a3b:	int3   
   140047a3c:	int3   
   140047a3d:	int3   
   140047a3e:	int3   
   140047a3f:	lea    rcx,[rdx+0x50]
   140047a46:	jmp    0x14000638c
   140047a4b:	int3   
   140047a4c:	int3   
   140047a4d:	int3   
   140047a4e:	int3   
   140047a4f:	lea    rcx,[rdx+0xb0]
   140047a56:	jmp    0x14000638c
   140047a5b:	int3   
   140047a5c:	int3   
   140047a5d:	int3   
   140047a5e:	int3   
   140047a5f:	lea    rcx,[rdx+0x30]
   140047a66:	jmp    0x140001074
   140047a6b:	int3   
   140047a6c:	int3   
   140047a6d:	int3   
   140047a6e:	int3   
   140047a6f:	lea    rcx,[rdx+0x30]
   140047a76:	jmp    0x140001074
   140047a7b:	lea    rcx,[rdx+0x38]
   140047a82:	jmp    0x140018184
   140047a87:	int3   
   140047a88:	int3   
   140047a89:	int3   
   140047a8a:	int3   
   140047a8b:	rex push rbp
   140047a8d:	sub    rsp,0x20
   140047a91:	mov    rbp,rdx
   140047a94:	mov    eax,DWORD PTR [rbp+0x20]
   140047a97:	and    eax,0x1
   140047a9a:	test   eax,eax
   140047a9c:	je     0x140047aab
   140047a9e:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140047aa2:	mov    rcx,QWORD PTR [rbp+0x30]
   140047aa6:	call   0x140018184
   140047aab:	add    rsp,0x20
   140047aaf:	pop    rbp
   140047ab0:	ret    
   140047ab1:	lea    rcx,[rdx+0x28]
   140047ab8:	jmp    0x140018184
   140047abd:	int3   
   140047abe:	int3   
   140047abf:	int3   
   140047ac0:	int3   
   140047ac1:	lea    rcx,[rdx+0x28]
   140047ac8:	jmp    0x140018184
   140047acd:	int3   
   140047ace:	int3   
   140047acf:	int3   
   140047ad0:	int3   
   140047ad1:	lea    rcx,[rdx+0x28]
   140047ad8:	jmp    0x14000638c
   140047add:	lea    rcx,[rdx+0x40]
   140047ae4:	jmp    0x140004618
   140047ae9:	int3   
   140047aea:	int3   
   140047aeb:	int3   
   140047aec:	int3   
   140047aed:	lea    rcx,[rdx+0x68]
   140047af4:	jmp    0x14000638c
   140047af9:	int3   
   140047afa:	int3   
   140047afb:	int3   
   140047afc:	int3   
   140047afd:	mov    rcx,QWORD PTR [rdx+0x38]
   140047b04:	rex.W jmp QWORD PTR [rip+0x1b6d]        # 0x140049678
   140047b0b:	int3   
   140047b0c:	int3   
   140047b0d:	mov    rcx,QWORD PTR [rdx+0x38]
   140047b14:	jmp    0x14000638c
   140047b19:	int3   
   140047b1a:	int3   
   140047b1b:	int3   
   140047b1c:	int3   
   140047b1d:	lea    rcx,[rdx+0xb8]
   140047b24:	jmp    0x14000638c
   140047b29:	int3   
   140047b2a:	int3   
   140047b2b:	int3   
   140047b2c:	int3   
   140047b2d:	lea    rcx,[rdx+0xe0]
   140047b34:	jmp    0x140018184
   140047b39:	int3   
   140047b3a:	int3   
   140047b3b:	int3   
   140047b3c:	int3   
   140047b3d:	lea    rcx,[rdx+0x68]
   140047b44:	jmp    0x1400013c0
   140047b49:	int3   
   140047b4a:	int3   
   140047b4b:	int3   
   140047b4c:	int3   
   140047b4d:	lea    rcx,[rdx+0x90]
   140047b54:	jmp    0x14000638c
   140047b59:	lea    rcx,[rdx+0x20]
   140047b60:	jmp    0x140010cbc
   140047b65:	int3   
   140047b66:	int3   
   140047b67:	int3   
   140047b68:	int3   
   140047b69:	lea    rcx,[rdx+0x60]
   140047b70:	jmp    0x140004618
   140047b75:	int3   
   140047b76:	int3   
   140047b77:	int3   
   140047b78:	int3   
   140047b79:	lea    rcx,[rdx+0x40]
   140047b80:	jmp    0x140004618
   140047b85:	lea    rcx,[rdx+0x20]
   140047b8c:	jmp    0x140004618
   140047b91:	int3   
   140047b92:	int3   
   140047b93:	int3   
   140047b94:	int3   
   140047b95:	lea    rcx,[rdx+0x50]
   140047b9c:	jmp    0x14000638c
   140047ba1:	int3   
   140047ba2:	int3   
   140047ba3:	int3   
   140047ba4:	int3   
   140047ba5:	mov    rcx,QWORD PTR [rdx+0x40]
   140047bac:	rex.W jmp QWORD PTR [rip+0x1ac5]        # 0x140049678
   140047bb3:	int3   
   140047bb4:	int3   
   140047bb5:	mov    rcx,QWORD PTR [rdx+0x40]
   140047bbc:	add    rcx,0x8
   140047bc0:	jmp    0x140004618
   140047bc5:	lea    rcx,[rdx+0x28]
   140047bcc:	jmp    0x14000638c
   140047bd1:	int3   
   140047bd2:	int3   
   140047bd3:	int3   
   140047bd4:	int3   
   140047bd5:	lea    rcx,[rdx+0x50]
   140047bdc:	jmp    0x14000638c
   140047be1:	int3   
   140047be2:	int3   
   140047be3:	int3   
   140047be4:	int3   
   140047be5:	lea    rcx,[rdx+0x28]
   140047bec:	jmp    0x14000638c
   140047bf1:	int3   
   140047bf2:	int3   
   140047bf3:	int3   
   140047bf4:	int3   
   140047bf5:	lea    rcx,[rdx+0x78]
   140047bfc:	jmp    0x14000638c
   140047c01:	lea    rcx,[rdx+0x58]
   140047c08:	jmp    0x14000638c
   140047c0d:	int3   
   140047c0e:	int3   
   140047c0f:	int3   
   140047c10:	int3   
   140047c11:	lea    rcx,[rdx+0x30]
   140047c18:	jmp    0x14000638c
   140047c1d:	int3   
   140047c1e:	int3   
   140047c1f:	int3   
   140047c20:	int3   
   140047c21:	lea    rcx,[rdx+0x80]
   140047c28:	jmp    0x14000638c
   140047c2d:	int3   
   140047c2e:	int3   
   140047c2f:	int3   
   140047c30:	int3   
   140047c31:	lea    rcx,[rdx+0x58]
   140047c38:	jmp    0x14000638c
   140047c3d:	int3   
   140047c3e:	int3   
   140047c3f:	int3   
   140047c40:	int3   
   140047c41:	lea    rcx,[rdx+0x30]
   140047c48:	jmp    0x14000638c
   140047c4d:	int3   
   140047c4e:	int3   
   140047c4f:	int3   
   140047c50:	int3   
   140047c51:	lea    rcx,[rdx+0x80]
   140047c58:	jmp    0x14000638c
   140047c5d:	int3   
   140047c5e:	int3   
   140047c5f:	int3   
   140047c60:	int3   
   140047c61:	lea    rcx,[rdx+0x58]
   140047c68:	jmp    0x14000638c
   140047c6d:	int3   
   140047c6e:	int3   
   140047c6f:	int3   
   140047c70:	int3   
   140047c71:	lea    rcx,[rdx+0x30]
   140047c78:	jmp    0x14000638c
   140047c7d:	int3   
   140047c7e:	int3   
   140047c7f:	int3   
   140047c80:	int3   
   140047c81:	lea    rcx,[rdx+0x80]
   140047c88:	jmp    0x14000638c
   140047c8d:	lea    rcx,[rdx+0x380]
   140047c94:	jmp    0x14000638c
   140047c99:	int3   
   140047c9a:	int3   
   140047c9b:	int3   
   140047c9c:	int3   
   140047c9d:	mov    rcx,QWORD PTR [rdx+0x38]
   140047ca4:	rex.W jmp QWORD PTR [rip+0x19cd]        # 0x140049678
   140047cab:	int3   
   140047cac:	int3   
   140047cad:	lea    rcx,[rdx+0x28]
   140047cb4:	jmp    0x14001cfa8
   140047cb9:	int3   
   140047cba:	int3   
   140047cbb:	int3   
   140047cbc:	int3   
   140047cbd:	lea    rcx,[rdx+0x230]
   140047cc4:	jmp    0x14000638c
   140047cc9:	int3   
   140047cca:	int3   
   140047ccb:	int3   
   140047ccc:	int3   
   140047ccd:	lea    rcx,[rdx+0x280]
   140047cd4:	jmp    0x14000638c
   140047cd9:	int3   
   140047cda:	int3   
   140047cdb:	int3   
   140047cdc:	int3   
   140047cdd:	lea    rcx,[rdx+0x258]
   140047ce4:	jmp    0x14000638c
   140047ce9:	int3   
   140047cea:	int3   
   140047ceb:	int3   
   140047cec:	int3   
   140047ced:	lea    rcx,[rdx+0x300]
   140047cf4:	jmp    0x14001776c
   140047cf9:	int3   
   140047cfa:	int3   
   140047cfb:	int3   
   140047cfc:	int3   
   140047cfd:	lea    rcx,[rdx+0x40]
   140047d04:	jmp    0x1400013c0
   140047d09:	int3   
   140047d0a:	int3   
   140047d0b:	int3   
   140047d0c:	int3   
   140047d0d:	lea    rcx,[rdx+0x160]
   140047d14:	jmp    0x14001f798
   140047d19:	int3   
   140047d1a:	int3   
   140047d1b:	int3   
   140047d1c:	int3   
   140047d1d:	lea    rcx,[rdx+0x230]
   140047d24:	jmp    0x14000638c
   140047d29:	int3   
   140047d2a:	int3   
   140047d2b:	int3   
   140047d2c:	int3   
   140047d2d:	lea    rcx,[rdx+0x280]
   140047d34:	jmp    0x14000638c
   140047d39:	int3   
   140047d3a:	int3   
   140047d3b:	int3   
   140047d3c:	int3   
   140047d3d:	lea    rcx,[rdx+0x258]
   140047d44:	jmp    0x14000638c
   140047d49:	int3   
   140047d4a:	int3   
   140047d4b:	int3   
   140047d4c:	int3   
   140047d4d:	rex push rbp
   140047d4f:	sub    rsp,0x20
   140047d53:	mov    rbp,rdx
   140047d56:	mov    eax,DWORD PTR [rbp+0x38]
   140047d59:	and    eax,0x1
   140047d5c:	test   eax,eax
   140047d5e:	je     0x140047d75
   140047d60:	and    DWORD PTR [rbp+0x38],0xfffffffe
   140047d64:	lea    rcx,[rbp+0x70]
   140047d68:	add    rcx,0x88
   140047d6f:	call   QWORD PTR [rip+0x158b]        # 0x140049300
   140047d75:	add    rsp,0x20
   140047d79:	pop    rbp
   140047d7a:	ret    
   140047d7b:	int3   
   140047d7c:	int3   
   140047d7d:	lea    rcx,[rdx+0x70]
   140047d84:	add    rcx,0x8
   140047d88:	rex.W jmp QWORD PTR [rip+0x1561]        # 0x1400492f0
   140047d8f:	int3   
   140047d90:	int3   
   140047d91:	int3   
   140047d92:	int3   
   140047d93:	int3   
   140047d94:	int3   
   140047d95:	int3   
   140047d96:	int3   
   140047d97:	int3   
   140047d98:	int3   
   140047d99:	int3   
   140047d9a:	int3   
   140047d9b:	int3   
   140047d9c:	int3   
   140047d9d:	mov    rcx,QWORD PTR [rdx+0x3d0]
   140047da4:	rex.W jmp QWORD PTR [rip+0x1585]        # 0x140049330
   140047dab:	int3   
   140047dac:	int3   
   140047dad:	lea    rcx,[rdx+0x70]
   140047db4:	jmp    0x1400177e8
   140047db9:	int3   
   140047dba:	int3   
   140047dbb:	int3   
   140047dbc:	int3   
   140047dbd:	lea    rcx,[rdx+0x230]
   140047dc4:	jmp    0x14000638c
   140047dc9:	int3   
   140047dca:	int3   
   140047dcb:	int3   
   140047dcc:	int3   
   140047dcd:	lea    rcx,[rdx+0x2d0]
   140047dd4:	jmp    0x14000638c
   140047dd9:	int3   
   140047dda:	int3   
   140047ddb:	int3   
   140047ddc:	int3   
   140047ddd:	lea    rcx,[rdx+0x258]
   140047de4:	jmp    0x14000638c
   140047de9:	int3   
   140047dea:	int3   
   140047deb:	int3   
   140047dec:	int3   
   140047ded:	lea    rcx,[rdx+0x230]
   140047df4:	jmp    0x14000638c
   140047df9:	int3   
   140047dfa:	int3   
   140047dfb:	int3   
   140047dfc:	int3   
   140047dfd:	lea    rcx,[rdx+0x280]
   140047e04:	jmp    0x14000638c
   140047e09:	int3   
   140047e0a:	int3   
   140047e0b:	int3   
   140047e0c:	int3   
   140047e0d:	lea    rcx,[rdx+0x258]
   140047e14:	jmp    0x14000638c
   140047e19:	int3   
   140047e1a:	int3   
   140047e1b:	int3   
   140047e1c:	int3   
   140047e1d:	lea    rcx,[rdx+0x230]
   140047e24:	jmp    0x14000638c
   140047e29:	int3   
   140047e2a:	int3   
   140047e2b:	int3   
   140047e2c:	int3   
   140047e2d:	lea    rcx,[rdx+0x280]
   140047e34:	jmp    0x14000638c
   140047e39:	int3   
   140047e3a:	int3   
   140047e3b:	int3   
   140047e3c:	int3   
   140047e3d:	lea    rcx,[rdx+0x258]
   140047e44:	jmp    0x14000638c
   140047e49:	int3   
   140047e4a:	int3   
   140047e4b:	int3   
   140047e4c:	int3   
   140047e4d:	mov    rcx,QWORD PTR [rdx+0x38]
   140047e54:	sub    rcx,0x88
   140047e5b:	add    rcx,0x8
   140047e5f:	rex.W jmp QWORD PTR [rip+0x148a]        # 0x1400492f0
   140047e66:	int3   
   140047e67:	int3   
   140047e68:	int3   
   140047e69:	int3   
   140047e6a:	int3   
   140047e6b:	int3   
   140047e6c:	int3   
   140047e6d:	mov    QWORD PTR [rsp+0x10],rdx
   140047e72:	push   rbp
   140047e73:	sub    rsp,0x20
   140047e77:	mov    rbp,rdx
   140047e7a:	mov    QWORD PTR [rbp+0x2e8],0xf
   140047e85:	and    QWORD PTR [rbp+0x2e0],0x0
   140047e8d:	mov    BYTE PTR [rbp+0x2d0],0x0
   140047e94:	lea    rcx,[rip+0x927d]        # 0x140051118
   140047e9b:	call   QWORD PTR [rip+0x1767]        # 0x140049608
   140047ea1:	mov    r8,rax
   140047ea4:	lea    rdx,[rip+0x926d]        # 0x140051118
   140047eab:	lea    rcx,[rbp+0x2d0]
   140047eb2:	call   0x140005154
   140047eb7:	nop
   140047eb8:	mov    QWORD PTR [rbp+0x298],0xf
   140047ec3:	and    QWORD PTR [rbp+0x290],0x0
   140047ecb:	mov    BYTE PTR [rbp+0x280],0x0
   140047ed2:	lea    rcx,[rip+0x9507]        # 0x1400513e0
   140047ed9:	call   QWORD PTR [rip+0x1729]        # 0x140049608
   140047edf:	mov    r8,rax
   140047ee2:	lea    rdx,[rip+0x94f7]        # 0x1400513e0
   140047ee9:	lea    rcx,[rbp+0x280]
   140047ef0:	call   0x140005154
   140047ef5:	nop
   140047ef6:	mov    r8d,0x221
   140047efc:	lea    rdx,[rbp+0x2d0]
   140047f03:	lea    rcx,[rbp+0x3a8]
   140047f0a:	call   0x14001231c
   140047f0f:	nop
   140047f10:	mov    rcx,QWORD PTR [rip+0x22919]        # 0x14006a830
   140047f17:	mov    r9,QWORD PTR [rcx]
   140047f1a:	mov    r8,rax
   140047f1d:	lea    rdx,[rbp+0x280]
   140047f24:	call   QWORD PTR [r9+0x80]
   140047f2b:	nop
   140047f2c:	cmp    QWORD PTR [rbp+0x3c0],0x10
   140047f34:	jb     0x140047f43
   140047f36:	mov    rcx,QWORD PTR [rbp+0x3a8]
   140047f3d:	call   QWORD PTR [rip+0x1735]        # 0x140049678
   140047f43:	mov    QWORD PTR [rbp+0x3c0],0xf
   140047f4e:	and    QWORD PTR [rbp+0x3b8],0x0
   140047f56:	mov    BYTE PTR [rbp+0x3a8],0x0
   140047f5d:	cmp    QWORD PTR [rbp+0x298],0x10
   140047f65:	jb     0x140047f74
   140047f67:	mov    rcx,QWORD PTR [rbp+0x280]
   140047f6e:	call   QWORD PTR [rip+0x1704]        # 0x140049678
   140047f74:	mov    QWORD PTR [rbp+0x298],0xf
   140047f7f:	and    QWORD PTR [rbp+0x290],0x0
   140047f87:	mov    BYTE PTR [rbp+0x280],0x0
   140047f8e:	cmp    QWORD PTR [rbp+0x2e8],0x10
   140047f96:	jb     0x140047fa5
   140047f98:	mov    rcx,QWORD PTR [rbp+0x2d0]
   140047f9f:	call   QWORD PTR [rip+0x16d3]        # 0x140049678
   140047fa5:	mov    QWORD PTR [rbp+0x2e8],0xf
   140047fb0:	and    QWORD PTR [rbp+0x2e0],0x0
   140047fb8:	mov    BYTE PTR [rbp+0x2d0],0x0
   140047fbf:	lea    rax,[rip+0xfffffffffffcf3db]        # 0x1400173a1
   140047fc6:	add    rsp,0x20
   140047fca:	pop    rbp
   140047fcb:	ret    
   140047fcc:	int3   
   140047fcd:	lea    rcx,[rdx+0x2d0]
   140047fd4:	jmp    0x14000638c
   140047fd9:	int3   
   140047fda:	int3   
   140047fdb:	int3   
   140047fdc:	int3   
   140047fdd:	lea    rcx,[rdx+0x280]
   140047fe4:	jmp    0x14000638c
   140047fe9:	int3   
   140047fea:	int3   
   140047feb:	int3   
   140047fec:	int3   
   140047fed:	lea    rcx,[rdx+0x3a8]
   140047ff4:	jmp    0x14000638c
   140047ff9:	int3   
   140047ffa:	int3   
   140047ffb:	int3   
   140047ffc:	int3   
   140047ffd:	lea    rcx,[rdx+0x230]
   140048004:	jmp    0x14000638c
   140048009:	int3   
   14004800a:	int3   
   14004800b:	int3   
   14004800c:	int3   
   14004800d:	lea    rcx,[rdx+0x258]
   140048014:	jmp    0x14000638c
   140048019:	int3   
   14004801a:	int3   
   14004801b:	int3   
   14004801c:	int3   
   14004801d:	lea    rcx,[rdx+0x2a8]
   140048024:	jmp    0x14000638c
   140048029:	int3   
   14004802a:	int3   
   14004802b:	int3   
   14004802c:	int3   
   14004802d:	mov    QWORD PTR [rsp+0x10],rdx
   140048032:	push   rbp
   140048033:	sub    rsp,0x20
   140048037:	mov    rbp,rdx
   14004803a:	mov    QWORD PTR [rbp+0x248],0xf
   140048045:	and    QWORD PTR [rbp+0x240],0x0
   14004804d:	mov    BYTE PTR [rbp+0x230],0x0
   140048054:	lea    rcx,[rip+0x90bd]        # 0x140051118
   14004805b:	call   QWORD PTR [rip+0x15a7]        # 0x140049608
   140048061:	mov    r8,rax
   140048064:	lea    rdx,[rip+0x90ad]        # 0x140051118
   14004806b:	lea    rcx,[rbp+0x230]
   140048072:	call   0x140005154
   140048077:	nop
   140048078:	mov    QWORD PTR [rbp+0x270],0xf
   140048083:	and    QWORD PTR [rbp+0x268],0x0
   14004808b:	mov    BYTE PTR [rbp+0x258],0x0
   140048092:	lea    rcx,[rip+0x936f]        # 0x140051408
   140048099:	call   QWORD PTR [rip+0x1569]        # 0x140049608
   14004809f:	mov    r8,rax
   1400480a2:	lea    rdx,[rip+0x935f]        # 0x140051408
   1400480a9:	lea    rcx,[rbp+0x258]
   1400480b0:	call   0x140005154
   1400480b5:	nop
   1400480b6:	mov    r8d,0x230
   1400480bc:	lea    rdx,[rbp+0x230]
   1400480c3:	lea    rcx,[rbp+0x2a8]
   1400480ca:	call   0x14001231c
   1400480cf:	nop
   1400480d0:	mov    rcx,QWORD PTR [rip+0x22759]        # 0x14006a830
   1400480d7:	mov    r9,QWORD PTR [rcx]
   1400480da:	mov    r8,rax
   1400480dd:	lea    rdx,[rbp+0x258]
   1400480e4:	call   QWORD PTR [r9+0x80]
   1400480eb:	nop
   1400480ec:	cmp    QWORD PTR [rbp+0x2c0],0x10
   1400480f4:	jb     0x140048103
   1400480f6:	mov    rcx,QWORD PTR [rbp+0x2a8]
   1400480fd:	call   QWORD PTR [rip+0x1575]        # 0x140049678
   140048103:	mov    QWORD PTR [rbp+0x2c0],0xf
   14004810e:	and    QWORD PTR [rbp+0x2b8],0x0
   140048116:	mov    BYTE PTR [rbp+0x2a8],0x0
   14004811d:	cmp    QWORD PTR [rbp+0x270],0x10
   140048125:	jb     0x140048134
   140048127:	mov    rcx,QWORD PTR [rbp+0x258]
   14004812e:	call   QWORD PTR [rip+0x1544]        # 0x140049678
   140048134:	mov    QWORD PTR [rbp+0x270],0xf
   14004813f:	and    QWORD PTR [rbp+0x268],0x0
   140048147:	mov    BYTE PTR [rbp+0x258],0x0
   14004814e:	cmp    QWORD PTR [rbp+0x248],0x10
   140048156:	jb     0x140048165
   140048158:	mov    rcx,QWORD PTR [rbp+0x230]
   14004815f:	call   QWORD PTR [rip+0x1513]        # 0x140049678
   140048165:	mov    QWORD PTR [rbp+0x248],0xf
   140048170:	and    QWORD PTR [rbp+0x240],0x0
   140048178:	mov    BYTE PTR [rbp+0x230],0x0
   14004817f:	lea    rax,[rip+0xfffffffffffcf372]        # 0x1400174f8
   140048186:	add    rsp,0x20
   14004818a:	pop    rbp
   14004818b:	ret    
   14004818c:	int3   
   14004818d:	lea    rcx,[rdx+0x230]
   140048194:	jmp    0x14000638c
   140048199:	int3   
   14004819a:	int3   
   14004819b:	int3   
   14004819c:	int3   
   14004819d:	lea    rcx,[rdx+0x258]
   1400481a4:	jmp    0x14000638c
   1400481a9:	int3   
   1400481aa:	int3   
   1400481ab:	int3   
   1400481ac:	int3   
   1400481ad:	lea    rcx,[rdx+0x2a8]
   1400481b4:	jmp    0x14000638c
   1400481b9:	int3   
   1400481ba:	int3   
   1400481bb:	int3   
   1400481bc:	int3   
   1400481bd:	lea    rcx,[rdx+0x258]
   1400481c4:	jmp    0x14000638c
   1400481c9:	int3   
   1400481ca:	int3   
   1400481cb:	int3   
   1400481cc:	int3   
   1400481cd:	lea    rcx,[rdx+0x230]
   1400481d4:	jmp    0x14000638c
   1400481d9:	int3   
   1400481da:	int3   
   1400481db:	int3   
   1400481dc:	int3   
   1400481dd:	lea    rcx,[rdx+0x2a8]
   1400481e4:	jmp    0x14000638c
   1400481e9:	lea    rcx,[rdx+0x28]
   1400481f0:	jmp    0x140018184
   1400481f5:	int3   
   1400481f6:	int3   
   1400481f7:	int3   
   1400481f8:	int3   
   1400481f9:	mov    rcx,QWORD PTR [rdx+0x60]
   140048200:	rex.W jmp QWORD PTR [rip+0x1471]        # 0x140049678
   140048207:	int3   
   140048208:	int3   
   140048209:	int3   
   14004820a:	int3   
   14004820b:	int3   
   14004820c:	int3   
   14004820d:	int3   
   14004820e:	int3   
   14004820f:	int3   
   140048210:	sub    rsp,0x28
   140048214:	call   0x14002bfc0
   140048219:	mov    QWORD PTR [rip+0x22608],rax        # 0x14006a828
   140048220:	add    rsp,0x28
   140048224:	ret    
   140048225:	int3   
   140048226:	int3   
   140048227:	int3   
   140048228:	sub    rsp,0x28
   14004822c:	call   0x14002bfc0
   140048231:	mov    QWORD PTR [rip+0x225e0],rax        # 0x14006a818
   140048238:	add    rsp,0x28
   14004823c:	ret    
   14004823d:	int3   
   14004823e:	int3   
   14004823f:	int3   
   140048240:	sub    rsp,0x28
   140048244:	call   0x14002bf70
   140048249:	mov    QWORD PTR [rip+0x225d0],rax        # 0x14006a820
   140048250:	add    rsp,0x28
   140048254:	ret    
   140048255:	int3   
   140048256:	int3   
   140048257:	int3   
   140048258:	sub    rsp,0x28
   14004825c:	call   0x14002bfc0
   140048261:	mov    QWORD PTR [rip+0x225e0],rax        # 0x14006a848
   140048268:	add    rsp,0x28
   14004826c:	ret    
   14004826d:	int3   
   14004826e:	int3   
   14004826f:	int3   
   140048270:	sub    rsp,0x28
   140048274:	call   0x14002bfc0
   140048279:	mov    QWORD PTR [rip+0x225b8],rax        # 0x14006a838
   140048280:	add    rsp,0x28
   140048284:	ret    
   140048285:	int3   
   140048286:	int3   
   140048287:	int3   
   140048288:	sub    rsp,0x28
   14004828c:	call   0x14002bf70
   140048291:	mov    QWORD PTR [rip+0x225a8],rax        # 0x14006a840
   140048298:	add    rsp,0x28
   14004829c:	ret    
   14004829d:	int3   
   14004829e:	int3   
   14004829f:	int3   
   1400482a0:	sub    rsp,0x68
   1400482a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400482ad:	mov    rax,QWORD PTR [rip+0x1ff3c]        # 0x1400681f0
   1400482b4:	xor    rax,rsp
   1400482b7:	mov    QWORD PTR [rsp+0x50],rax
   1400482bc:	mov    QWORD PTR [rsp+0x40],0xf
   1400482c5:	and    QWORD PTR [rsp+0x38],0x0
   1400482cb:	mov    BYTE PTR [rsp+0x28],0x0
   1400482d0:	lea    rcx,[rip+0x8e31]        # 0x140051108
   1400482d7:	call   QWORD PTR [rip+0x132b]        # 0x140049608
   1400482dd:	mov    r8,rax
   1400482e0:	lea    rdx,[rip+0x8e21]        # 0x140051108
   1400482e7:	lea    rcx,[rsp+0x28]
   1400482ec:	call   0x140005154
   1400482f1:	nop
   1400482f2:	lea    rcx,[rsp+0x28]
   1400482f7:	call   0x140011ed0
   1400482fc:	mov    QWORD PTR [rip+0x2252d],rax        # 0x14006a830
   140048303:	cmp    QWORD PTR [rsp+0x40],0x10
   140048309:	jb     0x140048316
   14004830b:	mov    rcx,QWORD PTR [rsp+0x28]
   140048310:	call   QWORD PTR [rip+0x1362]        # 0x140049678
   140048316:	mov    rcx,QWORD PTR [rsp+0x50]
   14004831b:	xor    rcx,rsp
   14004831e:	call   0x14002b100
   140048323:	add    rsp,0x68
   140048327:	ret    
   140048328:	mov    rax,rsp
   14004832b:	push   rdi
   14004832c:	sub    rsp,0x50
   140048330:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140048339:	mov    QWORD PTR [rax+0x10],rbx
   14004833d:	mov    QWORD PTR [rax+0x18],rsi
   140048341:	mov    QWORD PTR [rax-0x18],0x7
   140048349:	xor    esi,esi
   14004834b:	mov    QWORD PTR [rax-0x20],rsi
   14004834f:	mov    WORD PTR [rax-0x30],si
   140048353:	lea    rcx,[rip+0x8796]        # 0x140050af0
   14004835a:	call   QWORD PTR [rip+0x1350]        # 0x1400496b0
   140048360:	mov    r8,rax
   140048363:	lea    rdx,[rip+0x8786]        # 0x140050af0
   14004836a:	lea    rcx,[rsp+0x28]
   14004836f:	call   0x1400096cc
   140048374:	nop
   140048375:	mov    rbx,QWORD PTR [rip+0x22454]        # 0x14006a7d0
   14004837c:	test   rbx,rbx
   14004837f:	jne    0x1400483c5
   140048381:	lea    ecx,[rsi+0x68]
   140048384:	call   QWORD PTR [rip+0x130e]        # 0x140049698
   14004838a:	mov    rbx,rax
   14004838d:	test   rax,rax
   140048390:	je     0x1400483bb
   140048392:	mov    QWORD PTR [rax],rsi
   140048395:	mov    QWORD PTR [rax+0x8],rsi
   140048399:	mov    QWORD PTR [rax+0x10],rsi
   14004839d:	mov    QWORD PTR [rax+0x18],rsi
   1400483a1:	mov    QWORD PTR [rax+0x28],rsi
   1400483a5:	mov    QWORD PTR [rax+0x30],rsi
   1400483a9:	mov    QWORD PTR [rax+0x38],rsi
   1400483ad:	mov    QWORD PTR [rax+0x48],rsi
   1400483b1:	mov    QWORD PTR [rax+0x50],rsi
   1400483b5:	mov    QWORD PTR [rax+0x58],rsi
   1400483b9:	jmp    0x1400483be
   1400483bb:	mov    rbx,rsi
   1400483be:	mov    QWORD PTR [rip+0x2240b],rbx        # 0x14006a7d0
   1400483c5:	mov    ecx,0x28
   1400483ca:	call   QWORD PTR [rip+0x12c8]        # 0x140049698
   1400483d0:	mov    rdi,rax
   1400483d3:	mov    QWORD PTR [rsp+0x60],rax
   1400483d8:	test   rax,rax
   1400483db:	je     0x140048402
   1400483dd:	mov    QWORD PTR [rax+0x18],0x7
   1400483e5:	mov    QWORD PTR [rax+0x10],rsi
   1400483e9:	mov    WORD PTR [rax],si
   1400483ec:	or     r9,0xffffffffffffffff
   1400483f0:	xor    r8d,r8d
   1400483f3:	lea    rdx,[rsp+0x28]
   1400483f8:	mov    rcx,rax
   1400483fb:	call   0x140009914
   140048400:	jmp    0x140048405
   140048402:	mov    rdi,rsi
   140048405:	lea    rcx,[rbx+0x48]
   140048409:	mov    QWORD PTR [rsp+0x60],rdi
   14004840e:	test   rdi,rdi
   140048411:	je     0x140048437
   140048413:	mov    rax,QWORD PTR [rcx]
   140048416:	jmp    0x140048421
   140048418:	cmp    QWORD PTR [rax],rdi
   14004841b:	je     0x140048427
   14004841d:	add    rax,0x8
   140048421:	cmp    rax,QWORD PTR [rcx+0x8]
   140048425:	jne    0x140048418
   140048427:	cmp    QWORD PTR [rcx+0x8],rax
   14004842b:	jne    0x140048437
   14004842d:	lea    rdx,[rsp+0x60]
   140048432:	call   0x140015034
   140048437:	mov    QWORD PTR [rip+0x22412],rdi        # 0x14006a850
   14004843e:	cmp    QWORD PTR [rsp+0x40],0x8
   140048444:	jb     0x140048451
   140048446:	mov    rcx,QWORD PTR [rsp+0x28]
   14004844b:	call   QWORD PTR [rip+0x1227]        # 0x140049678
   140048451:	mov    rbx,QWORD PTR [rsp+0x68]
   140048456:	mov    rsi,QWORD PTR [rsp+0x70]
   14004845b:	add    rsp,0x50
   14004845f:	pop    rdi
   140048460:	ret    
   140048461:	int3   
   140048462:	int3   
   140048463:	int3   
   140048464:	int3   
   140048465:	int3   
   140048466:	int3   
   140048467:	int3   
   140048468:	int3   
   140048469:	int3   
   14004846a:	int3   
   14004846b:	int3   
   14004846c:	int3   
   14004846d:	int3   
   14004846e:	int3   
   14004846f:	int3   
   140048470:	mov    QWORD PTR [rip+0x21bd5],0x0        # 0x14006a050
   14004847b:	ret    
   14004847c:	int3   
   14004847d:	int3   
   14004847e:	int3   
   14004847f:	int3   
   140048480:	mov    QWORD PTR [rip+0x21bbd],0x0        # 0x14006a048
   14004848b:	ret    
   14004848c:	lea    rcx,[rip+0x1fd]        # 0x140048690
   140048493:	jmp    0x14002b278
   140048498:	sub    rsp,0x28
   14004849c:	lea    rcx,[rip+0x2216d]        # 0x14006a610
   1400484a3:	call   0x14002bc20
   1400484a8:	lea    rcx,[rip+0x1ed]        # 0x14004869c
   1400484af:	add    rsp,0x28
   1400484b3:	jmp    0x14002b278
   1400484b8:	sub    rsp,0x28
   1400484bc:	call   QWORD PTR [rip+0xc46]        # 0x140049108
   1400484c2:	lea    rcx,[rip+0x56af]        # 0x14004db78
   1400484c9:	mov    BYTE PTR [rip+0x221b0],0x0        # 0x14006a680
   1400484d0:	mov    QWORD PTR [rip+0x22199],rcx        # 0x14006a670
   1400484d7:	lea    rcx,[rip+0x1ca]        # 0x1400486a8
   1400484de:	mov    QWORD PTR [rip+0x22193],rax        # 0x14006a678
   1400484e5:	add    rsp,0x28
   1400484e9:	jmp    0x14002b278
   1400484ee:	int3   
   1400484ef:	int3   
   1400484f0:	lea    rcx,[rip+0x1e5]        # 0x1400486dc
   1400484f7:	jmp    0x14002b278
   1400484fc:	int3   
   1400484fd:	int3   
   1400484fe:	int3   
   1400484ff:	int3   
   140048500:	sub    rsp,0x38
   140048504:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004850d:	mov    eax,DWORD PTR [rip+0x2218d]        # 0x14006a6a0
   140048513:	test   al,0x1
   140048515:	jne    0x14004853b
   140048517:	or     eax,0x1
   14004851a:	mov    DWORD PTR [rip+0x22180],eax        # 0x14006a6a0
   140048520:	lea    rax,[rip+0x5731]        # 0x14004dc58
   140048527:	mov    QWORD PTR [rip+0x2216a],rax        # 0x14006a698
   14004852e:	lea    rcx,[rip+0x1cb]        # 0x140048700
   140048535:	call   0x14002b278
   14004853a:	nop
   14004853b:	lea    rax,[rip+0x22156]        # 0x14006a698
   140048542:	mov    QWORD PTR [rip+0x221af],rax        # 0x14006a6f8
   140048549:	add    rsp,0x38
   14004854d:	ret    
   14004854e:	int3   
   14004854f:	int3   
   140048550:	sub    rsp,0x38
   140048554:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004855d:	mov    eax,DWORD PTR [rip+0x2213d]        # 0x14006a6a0
   140048563:	test   al,0x1
   140048565:	jne    0x14004858b
   140048567:	or     eax,0x1
   14004856a:	mov    DWORD PTR [rip+0x22130],eax        # 0x14006a6a0
   140048570:	lea    rax,[rip+0x56e1]        # 0x14004dc58
   140048577:	mov    QWORD PTR [rip+0x2211a],rax        # 0x14006a698
   14004857e:	lea    rcx,[rip+0x17b]        # 0x140048700
   140048585:	call   0x14002b278
   14004858a:	nop
   14004858b:	lea    rax,[rip+0x22106]        # 0x14006a698
   140048592:	mov    QWORD PTR [rip+0x2213f],rax        # 0x14006a6d8
   140048599:	add    rsp,0x38
   14004859d:	ret    
   14004859e:	int3   
   14004859f:	int3   
   1400485a0:	sub    rsp,0x38
   1400485a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400485ad:	mov    eax,DWORD PTR [rip+0x220dd]        # 0x14006a690
   1400485b3:	test   al,0x1
   1400485b5:	jne    0x1400485db
   1400485b7:	or     eax,0x1
   1400485ba:	mov    DWORD PTR [rip+0x220d0],eax        # 0x14006a690
   1400485c0:	lea    rax,[rip+0x5649]        # 0x14004dc10
   1400485c7:	mov    QWORD PTR [rip+0x220ba],rax        # 0x14006a688
   1400485ce:	lea    rcx,[rip+0x11b]        # 0x1400486f0
   1400485d5:	call   0x14002b278
   1400485da:	nop
   1400485db:	lea    rax,[rip+0x220a6]        # 0x14006a688
   1400485e2:	mov    QWORD PTR [rip+0x22107],rax        # 0x14006a6f0
   1400485e9:	add    rsp,0x38
   1400485ed:	ret    
   1400485ee:	int3   
   1400485ef:	int3   
   1400485f0:	sub    rsp,0x38
   1400485f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400485fd:	mov    eax,DWORD PTR [rip+0x2208d]        # 0x14006a690
   140048603:	test   al,0x1
   140048605:	jne    0x14004862b
   140048607:	or     eax,0x1
   14004860a:	mov    DWORD PTR [rip+0x22080],eax        # 0x14006a690
   140048610:	lea    rax,[rip+0x55f9]        # 0x14004dc10
   140048617:	mov    QWORD PTR [rip+0x2206a],rax        # 0x14006a688
   14004861e:	lea    rcx,[rip+0xcb]        # 0x1400486f0
   140048625:	call   0x14002b278
   14004862a:	nop
   14004862b:	lea    rax,[rip+0x22056]        # 0x14006a688
   140048632:	mov    QWORD PTR [rip+0x220af],rax        # 0x14006a6e8
   140048639:	add    rsp,0x38
   14004863d:	ret    
   14004863e:	int3   
   14004863f:	int3   
   140048640:	lea    rcx,[rip+0x1e9]        # 0x140048830
   140048647:	jmp    0x14002b278
   14004864c:	int3   
   14004864d:	int3   
   14004864e:	int3   
   14004864f:	int3   
   140048650:	rex push rbx
   140048652:	sub    rsp,0x20
   140048656:	mov    rbx,QWORD PTR [rip+0x219db]        # 0x14006a038
   14004865d:	test   rbx,rbx
   140048660:	je     0x14004868a
   140048662:	lock dec DWORD PTR [rbx+0x8]
   140048666:	mov    QWORD PTR [rsp+0x30],rdi
   14004866b:	jne    0x140048685
   14004866d:	mov    rax,QWORD PTR [rbx]
   140048670:	mov    rcx,rbx
   140048673:	call   QWORD PTR [rax+0x8]
   140048676:	lock dec DWORD PTR [rbx+0xc]
   14004867a:	jne    0x140048685
   14004867c:	mov    rax,QWORD PTR [rbx]
   14004867f:	mov    rcx,rbx
   140048682:	call   QWORD PTR [rax+0x10]
   140048685:	mov    rdi,QWORD PTR [rsp+0x30]
   14004868a:	add    rsp,0x20
   14004868e:	pop    rbx
   14004868f:	ret    
   140048690:	lea    rcx,[rip+0x219c9]        # 0x14006a060
   140048697:	jmp    0x14002afec
   14004869c:	lea    rcx,[rip+0x21f6d]        # 0x14006a610
   1400486a3:	jmp    0x14002bb6c
   1400486a8:	sub    rsp,0x28
   1400486ac:	cmp    BYTE PTR [rip+0x21fcd],0x0        # 0x14006a680
   1400486b3:	lea    rax,[rip+0x54be]        # 0x14004db78
   1400486ba:	mov    QWORD PTR [rip+0x21faf],rax        # 0x14006a670
   1400486c1:	je     0x1400486d5
   1400486c3:	mov    rcx,QWORD PTR [rip+0x21fae]        # 0x14006a678
   1400486ca:	test   rcx,rcx
   1400486cd:	je     0x1400486d5
   1400486cf:	call   QWORD PTR [rip+0xa63]        # 0x140049138
   1400486d5:	add    rsp,0x28
   1400486d9:	ret    
   1400486da:	int3   
   1400486db:	int3   
   1400486dc:	lea    rax,[rip+0x54bd]        # 0x14004dba0
   1400486e3:	mov    QWORD PTR [rip+0x1fb26],rax        # 0x140068210
   1400486ea:	ret    
   1400486eb:	int3   
   1400486ec:	int3   
   1400486ed:	int3   
   1400486ee:	int3   
   1400486ef:	int3   
   1400486f0:	lea    rax,[rip+0x54e1]        # 0x14004dbd8
   1400486f7:	mov    QWORD PTR [rip+0x21f8a],rax        # 0x14006a688
   1400486fe:	ret    
   1400486ff:	int3   
   140048700:	lea    rax,[rip+0x54d1]        # 0x14004dbd8
   140048707:	mov    QWORD PTR [rip+0x21f8a],rax        # 0x14006a698
   14004870e:	ret    
   14004870f:	int3   
   140048710:	sub    rsp,0x28
   140048714:	cmp    QWORD PTR [rip+0x21fa4],0x10        # 0x14006a6c0
   14004871c:	jb     0x14004872a
   14004871e:	mov    rcx,QWORD PTR [rip+0x21f83]        # 0x14006a6a8
   140048725:	call   0x14002b150
   14004872a:	mov    QWORD PTR [rip+0x21f8b],0xf        # 0x14006a6c0
   140048735:	mov    QWORD PTR [rip+0x21f78],0x0        # 0x14006a6b8
   140048740:	mov    BYTE PTR [rip+0x21f61],0x0        # 0x14006a6a8
   140048747:	add    rsp,0x28
   14004874b:	ret    
   14004874c:	int3   
   14004874d:	int3   
   14004874e:	int3   
   14004874f:	int3   
   140048750:	sub    rsp,0x28
   140048754:	cmp    QWORD PTR [rip+0x21ff4],0x10        # 0x14006a750
   14004875c:	jb     0x14004876a
   14004875e:	mov    rcx,QWORD PTR [rip+0x21fd3]        # 0x14006a738
   140048765:	call   0x14002b150
   14004876a:	mov    QWORD PTR [rip+0x21fdb],0xf        # 0x14006a750
   140048775:	mov    QWORD PTR [rip+0x21fc8],0x0        # 0x14006a748
   140048780:	mov    BYTE PTR [rip+0x21fb1],0x0        # 0x14006a738
   140048787:	add    rsp,0x28
   14004878b:	ret    
   14004878c:	int3   
   14004878d:	int3   
   14004878e:	int3   
   14004878f:	int3   
   140048790:	sub    rsp,0x28
   140048794:	cmp    QWORD PTR [rip+0x21f84],0x10        # 0x14006a720
   14004879c:	jb     0x1400487aa
   14004879e:	mov    rcx,QWORD PTR [rip+0x21f63]        # 0x14006a708
   1400487a5:	call   0x14002b150
   1400487aa:	mov    QWORD PTR [rip+0x21f6b],0xf        # 0x14006a720
   1400487b5:	mov    QWORD PTR [rip+0x21f58],0x0        # 0x14006a718
   1400487c0:	mov    BYTE PTR [rip+0x21f41],0x0        # 0x14006a708
   1400487c7:	add    rsp,0x28
   1400487cb:	ret    
   1400487cc:	int3   
   1400487cd:	int3   
   1400487ce:	int3   
   1400487cf:	int3   
   1400487d0:	sub    rsp,0x38
   1400487d4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400487dd:	lea    rcx,[rip+0x21f9c]        # 0x14006a780
   1400487e4:	mov    QWORD PTR [rsp+0x40],rcx
   1400487e9:	mov    r8,QWORD PTR [rip+0x21f98]        # 0x14006a788
   1400487f0:	mov    r9,r8
   1400487f3:	mov    r8,QWORD PTR [r8]
   1400487f6:	lea    rdx,[rsp+0x48]
   1400487fb:	call   0x140030db0
   140048800:	nop
   140048801:	mov    rcx,QWORD PTR [rip+0x21f80]        # 0x14006a788
   140048808:	call   0x14002b150
   14004880d:	nop
   14004880e:	lea    rcx,[rip+0x21f53]        # 0x14006a768
   140048815:	call   0x1400334c0
   14004881a:	nop
   14004881b:	mov    rcx,QWORD PTR [rip+0x21f46]        # 0x14006a768
   140048822:	add    rsp,0x38
   140048826:	jmp    0x14002b150
   14004882b:	int3   
   14004882c:	int3   
   14004882d:	int3   
   14004882e:	int3   
   14004882f:	int3   
   140048830:	sub    rsp,0x28
   140048834:	mov    rcx,QWORD PTR [rip+0x21f6d]        # 0x14006a7a8
   14004883b:	test   rcx,rcx
   14004883e:	je     0x14004885b
   140048840:	mov    rax,QWORD PTR [rcx]
   140048843:	mov    QWORD PTR [rip+0x21f5e],rax        # 0x14006a7a8
   14004884a:	call   0x14002b150
   14004884f:	mov    rcx,QWORD PTR [rip+0x21f52]        # 0x14006a7a8
   140048856:	test   rcx,rcx
   140048859:	jne    0x140048840
   14004885b:	add    rsp,0x28
   14004885f:	ret    
